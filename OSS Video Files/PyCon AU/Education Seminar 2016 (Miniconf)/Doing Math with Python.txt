Title: Doing Math with Python
Publication date: 2016-08-16
Playlist: Education Seminar 2016 (Miniconf)
Description: 
	Amit Saha
https://2016.pycon-au.org/schedule/83/view_talk
The talk aims to highlight how Python is the perfect programming language to make programming more fun and immediately applicable to young learners. By making use of standard library modules such as the fractions module, third party packages such as matplotlib and sympy, the audience will learn how to write programs to solve common math problems. Some of the topics that will be discussed are:

- Simulating uniform and non-uniform random events
- Drawing Fractals
- Solving algebraic equations and inequalities
- Solving calculus problems
Captions: 
	00:00:00,030 --> 00:00:04,230
i'm--it's aha um it is currently a

00:00:02,490 --> 00:00:06,720
software engineer at freelancer.com

00:00:04,230 --> 00:00:08,849
in Sydney he's the author of doing math

00:00:06,720 --> 00:00:10,769
with Python so if you want to check out

00:00:08,849 --> 00:00:13,380
his book he has a copy of his book here

00:00:10,769 --> 00:00:15,450
if you wanna have a look at it he's also

00:00:13,380 --> 00:00:17,369
the creator and maintainer of fedora

00:00:15,450 --> 00:00:18,570
scientific a linux distribution targeted

00:00:17,369 --> 00:00:20,250
towards computer users in the

00:00:18,570 --> 00:00:26,609
educational scientific and numerical

00:00:20,250 --> 00:00:30,449
fields thank you hi everyone

00:00:26,609 --> 00:00:33,540
great to be here so thank you for the

00:00:30,449 --> 00:00:36,600
introduction Kady so yeah I'm I'm it's

00:00:33,540 --> 00:00:39,300
hi and thanks to Facebook I've got this

00:00:36,600 --> 00:00:44,100
nice map here so I'm from Sydney here

00:00:39,300 --> 00:00:45,149
for the Joo Shin Semin a so the author

00:00:44,100 --> 00:00:48,030
of the book called doing math with

00:00:45,149 --> 00:00:49,770
Nathan which is of this like so the

00:00:48,030 --> 00:00:52,260
title of the talk and the book of the

00:00:49,770 --> 00:00:53,730
same title which is not a coincidence so

00:00:52,260 --> 00:00:55,440
this book was published last year in

00:00:53,730 --> 00:00:57,109
August at the same time so far it has

00:00:55,440 --> 00:01:00,420
been translated to a few languages

00:00:57,109 --> 00:01:01,829
I don't read any of others I have no

00:01:00,420 --> 00:01:05,640
idea

00:01:01,829 --> 00:01:07,979
but anyway the covers are nice so that's

00:01:05,640 --> 00:01:12,840
the Japanese translation then the French

00:01:07,979 --> 00:01:14,670
and thus Korean translation so if you

00:01:12,840 --> 00:01:17,280
are following along like you can go to

00:01:14,670 --> 00:01:19,860
this link it's bitly mat with python and

00:01:17,280 --> 00:01:22,950
you will get the slides as well as the

00:01:19,860 --> 00:01:25,680
demos so if you go there you will

00:01:22,950 --> 00:01:27,479
basically find this so you can there's a

00:01:25,680 --> 00:01:30,360
readme which you can download the zip

00:01:27,479 --> 00:01:32,970
archive and install anaconda python

00:01:30,360 --> 00:01:34,590
distribution there's a basic guide which

00:01:32,970 --> 00:01:36,110
I have linked to so you may find that

00:01:34,590 --> 00:01:39,420
useful

00:01:36,110 --> 00:01:41,909
so the demos are all here I should

00:01:39,420 --> 00:01:46,110
mention that all these demos are Jupiter

00:01:41,909 --> 00:01:47,820
notebooks but besides a few I like the

00:01:46,110 --> 00:01:49,290
interactive notebooks I don't depend

00:01:47,820 --> 00:01:50,610
like none of these demos actually

00:01:49,290 --> 00:01:53,850
requires you put a notebook to run I

00:01:50,610 --> 00:01:55,170
just it's just well easier and it's a

00:01:53,850 --> 00:01:56,579
very good way to demonstrate viewing

00:01:55,170 --> 00:02:01,380
presentations that so they are just as

00:01:56,579 --> 00:02:05,100
stupid a notebooks and I'll jump ahead a

00:02:01,380 --> 00:02:07,380
bit just to show a few things and slides

00:02:05,100 --> 00:02:09,690
which have SSS demos with them would

00:02:07,380 --> 00:02:12,860
have this thing here so you can follow

00:02:09,690 --> 00:02:17,740
along in this just a notebook okay so

00:02:12,860 --> 00:02:19,820
all that done so why Matt with Python I

00:02:17,740 --> 00:02:22,430
think I should give a bit of a

00:02:19,820 --> 00:02:25,540
background and it is unlike to a lot of

00:02:22,430 --> 00:02:27,530
among you who have like basic like

00:02:25,540 --> 00:02:30,290
hands-on day-to-day interaction with

00:02:27,530 --> 00:02:31,880
students I don't have that so whatever I

00:02:30,290 --> 00:02:33,920
talk today and what I'm proposing today

00:02:31,880 --> 00:02:36,080
or what every day in my book is a draws

00:02:33,920 --> 00:02:38,630
a lot upon my experiences 20 years back

00:02:36,080 --> 00:02:40,430
when I was learning to program so when I

00:02:38,630 --> 00:02:41,510
learned to program and I was obvious

00:02:40,430 --> 00:02:43,730
learning other subjects as well in

00:02:41,510 --> 00:02:45,290
school what I felt was there was a quite

00:02:43,730 --> 00:02:47,240
a bit of disconnect between programming

00:02:45,290 --> 00:02:49,850
as well as the other subjects that I was

00:02:47,240 --> 00:02:52,280
learning as if programming was meant to

00:02:49,850 --> 00:02:53,690
be like a tool just to learn for its own

00:02:52,280 --> 00:02:56,600
sake and hopefully someday I'll be able

00:02:53,690 --> 00:02:59,060
to use it in something whereas other

00:02:56,600 --> 00:03:00,950
subjects were like really important and

00:02:59,060 --> 00:03:03,230
everything else so what happened was I

00:03:00,950 --> 00:03:04,760
saw two things some students like like

00:03:03,230 --> 00:03:07,220
me I got interested in the programming

00:03:04,760 --> 00:03:09,080
part but a lot of them did not

00:03:07,220 --> 00:03:10,190
understand like did not really get to

00:03:09,080 --> 00:03:11,630
programming because obviously they were

00:03:10,190 --> 00:03:13,820
not taught in a way that they could

00:03:11,630 --> 00:03:15,140
learn properly and some of them dropped

00:03:13,820 --> 00:03:16,850
out when they were given an option to

00:03:15,140 --> 00:03:18,880
opt out of the programming subject they

00:03:16,850 --> 00:03:22,400
just opted out and awkward for the other

00:03:18,880 --> 00:03:25,430
but what I feel is if at that stage if

00:03:22,400 --> 00:03:27,110
programming was made like programming

00:03:25,430 --> 00:03:29,630
was shown in a way that it could solve

00:03:27,110 --> 00:03:32,000
problems or not missus solve problems

00:03:29,630 --> 00:03:33,320
maybe explore other subjects I think it

00:03:32,000 --> 00:03:36,470
would just make it more interesting for

00:03:33,320 --> 00:03:38,620
everybody so to summarize what I believe

00:03:36,470 --> 00:03:42,170
is integrating Python with other

00:03:38,620 --> 00:03:44,000
subjects math and maybe others would

00:03:42,170 --> 00:03:48,290
lead to a more interactive and enriching

00:03:44,000 --> 00:03:50,480
teaching a learning experience so how do

00:03:48,290 --> 00:03:53,810
you do that so the tools that you are

00:03:50,480 --> 00:03:55,549
going to use as Python 3 so I don't use

00:03:53,810 --> 00:03:57,980
Python to like I don't try to aim for

00:03:55,549 --> 00:03:59,209
any Python 2 compatibility just because

00:03:57,980 --> 00:04:00,709
I wanted to be like forward looking at

00:03:59,209 --> 00:04:01,940
somebody learning something new for the

00:04:00,709 --> 00:04:05,299
first set they don't need to know what

00:04:01,940 --> 00:04:07,190
the differences are even so the package

00:04:05,299 --> 00:04:11,209
which forms an integral part of my

00:04:07,190 --> 00:04:13,700
proposal is simple I'll get to that you

00:04:11,209 --> 00:04:17,510
know next two slides and the third is

00:04:13,700 --> 00:04:19,340
matplotlib for drawing graphs and in

00:04:17,510 --> 00:04:22,400
essentially animations and anything

00:04:19,340 --> 00:04:24,430
graphical this is links you can follow

00:04:22,400 --> 00:04:28,930
along

00:04:24,430 --> 00:04:30,699
so I should obviously tell just beavin

00:04:28,930 --> 00:04:33,130
before I start is how much math what

00:04:30,699 --> 00:04:35,250
kind of Matt I am I talking about so the

00:04:33,130 --> 00:04:39,759
math I'm talking about is basic algebra

00:04:35,250 --> 00:04:42,099
basic statistics sets probability random

00:04:39,759 --> 00:04:44,560
numbers beta probability

00:04:42,099 --> 00:04:47,800
discrete probability mostly a bit of

00:04:44,560 --> 00:04:49,240
continuous but that's is an application

00:04:47,800 --> 00:04:52,090
so I will get later and some basic

00:04:49,240 --> 00:04:55,690
calculus how much Python am I talking

00:04:52,090 --> 00:04:57,550
about I'm assuming that the reader or

00:04:55,690 --> 00:04:59,740
the student would know about defining

00:04:57,550 --> 00:05:02,130
and calling functions they would know

00:04:59,740 --> 00:05:04,419
about loops and basic data structures

00:05:02,130 --> 00:05:06,250
they would know how to create objects of

00:05:04,419 --> 00:05:08,110
classes how to access an attribute of a

00:05:06,250 --> 00:05:11,289
class and they would know how to call

00:05:08,110 --> 00:05:13,389
methods or objects that's all my

00:05:11,289 --> 00:05:16,680
assumptions that I am making when I am

00:05:13,389 --> 00:05:20,050
making my proposals in the next slides

00:05:16,680 --> 00:05:24,190
so let's get started so Python as so I

00:05:20,050 --> 00:05:25,840
have sort of organized this talk into

00:05:24,190 --> 00:05:28,210
three different parts like first I show

00:05:25,840 --> 00:05:29,469
Python as a scientific calculator second

00:05:28,210 --> 00:05:32,020
as Python has this really awesome

00:05:29,469 --> 00:05:34,150
calculator and then I go into where you

00:05:32,020 --> 00:05:35,320
go beyond calculations where you explore

00:05:34,150 --> 00:05:38,530
things which you wouldn't otherwise be

00:05:35,320 --> 00:05:47,469
able to explore without programming so

00:05:38,530 --> 00:05:50,289
first a scientific calculator I assume a

00:05:47,469 --> 00:05:52,300
lot of us among here among us here are

00:05:50,289 --> 00:05:57,219
familiar with the standard path modules

00:05:52,300 --> 00:06:01,270
so greatest common devisor pretty simple

00:05:57,219 --> 00:06:03,009
factorial or we can do things like

00:06:01,270 --> 00:06:05,259
validate simple known results like when

00:06:03,009 --> 00:06:07,030
you're learning or teaching trigonometry

00:06:05,259 --> 00:06:09,370
like this sine square theta plus cos

00:06:07,030 --> 00:06:12,639
square theta equal to one we could do

00:06:09,370 --> 00:06:14,979
this like so this I can see like I have

00:06:12,639 --> 00:06:17,889
to convert the theta into radians

00:06:14,979 --> 00:06:21,310
because that's what all the the trig

00:06:17,889 --> 00:06:23,050
erotic functions assume and then our

00:06:21,310 --> 00:06:25,030
newly or more recent one is the

00:06:23,050 --> 00:06:27,130
statistics module which has the basic

00:06:25,030 --> 00:06:28,539
statistics function so you can do like I

00:06:27,130 --> 00:06:32,080
could the mean of a data set or the

00:06:28,539 --> 00:06:33,430
media operator set and then using this

00:06:32,080 --> 00:06:35,250
you can use this as a building blocks

00:06:33,430 --> 00:06:37,510
and develop your own functions of course

00:06:35,250 --> 00:06:37,750
but what becomes more interesting is

00:06:37,510 --> 00:06:39,760
when

00:06:37,750 --> 00:06:42,160
you're using say the Python startup

00:06:39,760 --> 00:06:49,630
variable you can define your own

00:06:42,160 --> 00:06:59,890
functions so for example here I'm using

00:06:49,630 --> 00:07:02,050
I don't know so this is the I'm starting

00:06:59,890 --> 00:07:03,520
the idle editor idle 3 is that the

00:07:02,050 --> 00:07:05,710
Python 3 version of course and I'm just

00:07:03,520 --> 00:07:08,770
specifying this file which has some of

00:07:05,710 --> 00:07:13,360
my functions defined so when I start the

00:07:08,770 --> 00:07:14,740
interpreter now I'm going to have my so

00:07:13,360 --> 00:07:17,110
this is a function which I have in that

00:07:14,740 --> 00:07:19,090
file it's just a simple basic unit

00:07:17,110 --> 00:07:20,200
conversion function so when I start the

00:07:19,090 --> 00:07:22,360
Python interpreter I have all this

00:07:20,200 --> 00:07:24,970
custom functions ready for me to use so

00:07:22,360 --> 00:07:29,560
I can basically say ok what we want to

00:07:24,970 --> 00:07:32,680
do so and similarly I have I think I

00:07:29,560 --> 00:07:34,180
have another function defined anyway so

00:07:32,680 --> 00:07:36,669
that's the ideas which is you can use

00:07:34,180 --> 00:07:38,080
the built-in modules and write your own

00:07:36,669 --> 00:07:39,520
functions your custom functions whatever

00:07:38,080 --> 00:07:43,270
that means you may need to do all the

00:07:39,520 --> 00:07:44,860
time so what it gives us is we don't

00:07:43,270 --> 00:07:47,620
need to do this import math we don't

00:07:44,860 --> 00:07:48,729
need to import the module itself it is

00:07:47,620 --> 00:07:57,070
already there when you start the

00:07:48,729 --> 00:07:58,330
interpreter ok so question time if I

00:07:57,070 --> 00:08:00,820
were to tell you that you need to write

00:07:58,330 --> 00:08:03,520
a program which tells you this enter an

00:08:00,820 --> 00:08:04,840
expression X to graph the user inputs

00:08:03,520 --> 00:08:08,290
that expression and creates this graph

00:08:04,840 --> 00:08:14,169
how many lines should this take any

00:08:08,290 --> 00:08:19,990
guesses one line sir

00:08:14,169 --> 00:08:22,470
no using pure Python you said one how

00:08:19,990 --> 00:08:22,470
did

00:08:41,110 --> 00:08:45,080
yeah that would be one approach but that

00:08:43,430 --> 00:08:46,550
would yeah that that would be yeah that

00:08:45,080 --> 00:08:48,080
that's definitely one at which I would

00:08:46,550 --> 00:08:50,870
take which is yeah generate this numbers

00:08:48,080 --> 00:08:52,820
in a certain range and then plot it that

00:08:50,870 --> 00:08:54,500
would be one approach I don't know how

00:08:52,820 --> 00:08:56,930
many lines that lake but I'll show

00:08:54,500 --> 00:08:59,330
approach in like you know in a few

00:08:56,930 --> 00:09:01,279
minutes which will basically allow you

00:08:59,330 --> 00:09:03,860
to but the problem is see the problem

00:09:01,279 --> 00:09:04,910
with that is you're the function that

00:09:03,860 --> 00:09:06,230
you're trying to plot that would be

00:09:04,910 --> 00:09:09,560
needed in your program you wouldn't be

00:09:06,230 --> 00:09:12,880
able to take X square plus X as plus 1

00:09:09,560 --> 00:09:15,500
as an input right so that's a drawback

00:09:12,880 --> 00:09:17,210
I'll show you your program in like few

00:09:15,500 --> 00:09:18,980
minutes which is our four lines and

00:09:17,210 --> 00:09:23,390
allows you to enter any expression in X

00:09:18,980 --> 00:09:25,430
and you draw the graph okay so to do

00:09:23,390 --> 00:09:30,740
that I go and which is where I start my

00:09:25,430 --> 00:09:34,180
second part will need same PI's help so

00:09:30,740 --> 00:09:34,180
I'll start off with some simple basics

00:09:44,290 --> 00:09:50,870
so this is simple and a basic idea and

00:09:48,830 --> 00:09:53,870
simple is how you represent symbols and

00:09:50,870 --> 00:09:58,279
symbols mean length x as in algebraic X

00:09:53,870 --> 00:10:00,260
Y as in algebra choir to make a Python

00:09:58,279 --> 00:10:02,360
program understand X as X and not a

00:10:00,260 --> 00:10:04,459
variable which needs to be half which

00:10:02,360 --> 00:10:08,270
will have a value we have to create an

00:10:04,459 --> 00:10:09,560
object of same ball type so this is what

00:10:08,270 --> 00:10:11,900
you are defining so this is the X symbol

00:10:09,560 --> 00:10:14,150
and this is the again another object of

00:10:11,900 --> 00:10:16,070
the X symbol although I am calling them

00:10:14,150 --> 00:10:18,050
differently so when I do X plus y it

00:10:16,070 --> 00:10:23,300
knows that both of them represent X and

00:10:18,050 --> 00:10:28,100
it prints me to X so that's the basic

00:10:23,300 --> 00:10:30,800
idea ok some more basics of same PI so

00:10:28,100 --> 00:10:33,260
we have seen we know what what this does

00:10:30,800 --> 00:10:35,180
we know what this two lines do next to

00:10:33,260 --> 00:10:36,950
define an expression so this is how I

00:10:35,180 --> 00:10:41,020
can define an algebraic expression in

00:10:36,950 --> 00:10:44,570
Python I just say 2x plus 3x square and

00:10:41,020 --> 00:10:46,760
it's in a form which and let's say I

00:10:44,570 --> 00:10:47,840
have defined this formula right and then

00:10:46,760 --> 00:10:49,550
I want to know

00:10:47,840 --> 00:10:53,900
what is the value of this expression

00:10:49,550 --> 00:10:56,810
when X is say 1 and to do that I have to

00:10:53,900 --> 00:11:01,970
use the subs method like substitution

00:10:56,810 --> 00:11:04,010
and it is used to provide basically the

00:11:01,970 --> 00:11:08,750
value of x that I want to substitute so

00:11:04,010 --> 00:11:14,450
essentially means that my book is not

00:11:08,750 --> 00:11:17,900
very yeah so it essentially means that I

00:11:14,450 --> 00:11:21,650
want to substitute 1 in place of X in

00:11:17,900 --> 00:11:24,230
this expression and once I run this it

00:11:21,650 --> 00:11:25,880
will see a value of 5 so that's how you

00:11:24,230 --> 00:11:31,180
substitute that so you find the value of

00:11:25,880 --> 00:11:35,540
an algebraic expression ok that's in the

00:11:31,180 --> 00:11:37,430
another okay this is a slightly longer

00:11:35,540 --> 00:11:39,560
program and which basically builds up to

00:11:37,430 --> 00:11:41,420
our plotting program so here what I am

00:11:39,560 --> 00:11:45,470
doing is I am going to demonstrate how

00:11:41,420 --> 00:11:46,880
so the input function with which allows

00:11:45,470 --> 00:11:52,640
you to take like basically provide

00:11:46,880 --> 00:11:53,840
inputs to your program so you when you

00:11:52,640 --> 00:11:55,070
provide an input to your program whether

00:11:53,840 --> 00:11:59,000
it's an integer whether it's anything

00:11:55,070 --> 00:12:02,660
else it goes as a string so which is

00:11:59,000 --> 00:12:08,120
basically when I say when I input

00:12:02,660 --> 00:12:12,320
something like this to Python it is a

00:12:08,120 --> 00:12:15,170
string something like this and whatever

00:12:12,320 --> 00:12:18,590
I give it but in this form it is not

00:12:15,170 --> 00:12:20,780
understandable by simple so I cannot say

00:12:18,590 --> 00:12:22,190
senpai to manipulate this in any way so

00:12:20,780 --> 00:12:24,260
what I need to do is I need to use this

00:12:22,190 --> 00:12:26,900
function for simplify which basically

00:12:24,260 --> 00:12:29,210
converts this string to a form that is

00:12:26,900 --> 00:12:30,860
then understood by same time and you can

00:12:29,210 --> 00:12:36,080
see an example here what I have done is

00:12:30,860 --> 00:12:38,600
I am create a meeting this so-called

00:12:36,080 --> 00:12:40,220
simplified version of this input and

00:12:38,600 --> 00:12:42,530
then I am calling this function called

00:12:40,220 --> 00:12:44,240
factor which basically factorizes this

00:12:42,530 --> 00:12:50,600
algebraic expression and then I have the

00:12:44,240 --> 00:12:53,650
factors okay so that leads me to my the

00:12:50,600 --> 00:12:53,650
create a graph program

00:12:57,490 --> 00:13:05,839
so that's your four lines so in fact I

00:13:04,040 --> 00:13:08,089
don't even read this for this is not

00:13:05,839 --> 00:13:12,649
even needed so that's actually three

00:13:08,089 --> 00:13:21,260
lines so I don't need this either so

00:13:12,649 --> 00:13:22,699
what I'll give it here so first for

00:13:21,260 --> 00:13:23,990
those not familiar with notebook this

00:13:22,699 --> 00:13:27,860
sigh I need to do this so that the

00:13:23,990 --> 00:13:30,250
graphs are displayed in line when I run

00:13:27,860 --> 00:13:40,100
this it allows me to enter an expression

00:13:30,250 --> 00:13:48,440
which will be hopefully soon just when

00:13:40,100 --> 00:13:50,949
you want them to work yeah that's

00:13:48,440 --> 00:13:50,949
exactly

00:14:10,500 --> 00:14:19,680
okay so I'm going to do something else

00:14:15,070 --> 00:14:23,709
let's say X sine X and here your graph

00:14:19,680 --> 00:14:25,450
so yeah so that's what three lines and

00:14:23,709 --> 00:14:26,620
it's not limited by what function it's

00:14:25,450 --> 00:14:28,600
going to be able to plot you can give it

00:14:26,620 --> 00:14:34,060
pretty much as long as it's off a single

00:14:28,600 --> 00:14:36,339
variable it'll do it okay I'm definitely

00:14:34,060 --> 00:14:41,589
running short of time so and you can do

00:14:36,339 --> 00:14:44,050
things like solving equations once again

00:14:41,589 --> 00:14:47,160
the number of lines is well you can't

00:14:44,050 --> 00:14:49,720
again three lines so that's all you need

00:14:47,160 --> 00:14:54,190
so you you just call this all function

00:14:49,720 --> 00:14:58,000
it'll get the solution for you okay I am

00:14:54,190 --> 00:15:00,250
going to go up it expresso so this is

00:14:58,000 --> 00:15:02,050
for inequality solving now this is a

00:15:00,250 --> 00:15:04,600
very long program and the reason for

00:15:02,050 --> 00:15:05,769
that is it it can solve any kind of

00:15:04,600 --> 00:15:07,390
inequality like whether it's a rational

00:15:05,769 --> 00:15:08,920
inequality whether it's a polynomial

00:15:07,390 --> 00:15:10,810
inequality so that's why I had to write

00:15:08,920 --> 00:15:12,270
this big program to just account for all

00:15:10,810 --> 00:15:15,310
the different inequalities you can have

00:15:12,270 --> 00:15:18,279
and once again pretty similar interface

00:15:15,310 --> 00:15:20,079
it asks you for the inequality and then

00:15:18,279 --> 00:15:24,100
it will give you the the range the

00:15:20,079 --> 00:15:27,310
solutions that's also thing to do okay

00:15:24,100 --> 00:15:30,100
so that's done okay so how many lines

00:15:27,310 --> 00:15:36,930
would distich finding the limit of a

00:15:30,100 --> 00:15:40,680
function like which is any guesses okay

00:15:36,930 --> 00:15:40,680
let's stop the suspense

00:15:44,760 --> 00:15:52,839
once again three lines so all I do is

00:15:50,050 --> 00:15:55,449
this symbol is not familiar limit is the

00:15:52,839 --> 00:15:56,920
class well yeah it's a class that class

00:15:55,449 --> 00:15:58,690
which is responsible for I mean

00:15:56,920 --> 00:15:59,920
responsible for like which is going to

00:15:58,690 --> 00:16:02,320
be useful for us when you want to find

00:15:59,920 --> 00:16:04,810
the limits of functions so all I need to

00:16:02,320 --> 00:16:09,459
do is I create object again to represent

00:16:04,810 --> 00:16:09,940
that X is X I'll get that to get to that

00:16:09,459 --> 00:16:12,699
in a minute

00:16:09,940 --> 00:16:14,769
but the more important point here is so

00:16:12,699 --> 00:16:17,020
to hear what I am Telling is I want to

00:16:14,769 --> 00:16:21,209
find the limit of the function sine X by

00:16:17,020 --> 00:16:21,209
X as X tends to 0

00:16:21,850 --> 00:16:28,390
so when I just create this and I run

00:16:25,600 --> 00:16:31,000
this cell I get this expression which is

00:16:28,390 --> 00:16:35,050
very familiar for like all of us when we

00:16:31,000 --> 00:16:36,460
learn to do math essentially and this

00:16:35,050 --> 00:16:38,230
magic happens because of this init

00:16:36,460 --> 00:16:40,000
printing system this is basically simple

00:16:38,230 --> 00:16:41,650
zone function write decide like so it

00:16:40,000 --> 00:16:43,900
basically detects I it's a notebook and

00:16:41,650 --> 00:16:47,380
so it renders it very nicely that's

00:16:43,900 --> 00:16:49,150
using mathjax again so as you can see

00:16:47,380 --> 00:16:50,980
here it is not actually calculating the

00:16:49,150 --> 00:16:52,870
limit it just shows that okay I'm going

00:16:50,980 --> 00:16:54,280
to calculate the limit to actually

00:16:52,870 --> 00:16:57,100
calculate the limit I have to call the

00:16:54,280 --> 00:16:59,130
do-it method and then eyes have the

00:16:57,100 --> 00:17:06,640
result

00:16:59,130 --> 00:17:09,040
similarly for derivatives once again

00:17:06,640 --> 00:17:10,540
pretty similar here instead of the limit

00:17:09,040 --> 00:17:12,790
class I import the derivative class

00:17:10,540 --> 00:17:16,959
again I give a function it prints it

00:17:12,790 --> 00:17:20,020
like basically shows it shows what it's

00:17:16,959 --> 00:17:22,209
going to calculate and then again I I

00:17:20,020 --> 00:17:25,150
just call this to it func method and it

00:17:22,209 --> 00:17:27,310
gives me the derivative so the

00:17:25,150 --> 00:17:29,500
parameters to this class is the first is

00:17:27,310 --> 00:17:31,600
of the function itself sine x by x

00:17:29,500 --> 00:17:33,670
second is the variable with respect to

00:17:31,600 --> 00:17:35,260
which you want to differentiate if your

00:17:33,670 --> 00:17:36,580
function has multiple variables it would

00:17:35,260 --> 00:17:42,130
then calculate the partial derivative

00:17:36,580 --> 00:17:45,280
with respect to that variable and uhm

00:17:42,130 --> 00:17:47,290
yeah and next I have integration once

00:17:45,280 --> 00:17:51,040
again very pretty similar to how we have

00:17:47,290 --> 00:17:53,620
been doing so far we import the symbol

00:17:51,040 --> 00:17:55,720
you input this integral class we give

00:17:53,620 --> 00:18:05,250
the function we call the do-it method

00:17:55,720 --> 00:18:07,530
and out comes the integral so that was

00:18:05,250 --> 00:18:10,560
indefinite integral this is how you do

00:18:07,530 --> 00:18:12,990
how we do definite integration so the

00:18:10,560 --> 00:18:15,270
first is the function itself and then we

00:18:12,990 --> 00:18:18,600
specify the variable and its limits so

00:18:15,270 --> 00:18:21,300
this is a tuple so I'm specifying here

00:18:18,600 --> 00:18:22,920
essentially basically this written in

00:18:21,300 --> 00:18:25,320
form of in in a form that Python

00:18:22,920 --> 00:18:28,800
understands and again do it function it

00:18:25,320 --> 00:18:32,940
clears this so as you can see here it

00:18:28,800 --> 00:18:36,270
gave me a sometimes friendly features

00:18:32,940 --> 00:18:41,340
become unfriendly legs it's it's

00:18:36,270 --> 00:18:42,690
vanished okay okay so so so this you

00:18:41,340 --> 00:18:43,710
will see that I have this evil F

00:18:42,690 --> 00:18:45,690
function after this so basically

00:18:43,710 --> 00:18:47,100
sometimes same bi will give you the

00:18:45,690 --> 00:18:49,770
result in a form which is not in

00:18:47,100 --> 00:18:52,080
floating point it basically it's an

00:18:49,770 --> 00:18:54,420
abstraction which Simba has so it's not

00:18:52,080 --> 00:18:55,860
directly a floating point variable what

00:18:54,420 --> 00:18:58,170
you can do is then you can call this

00:18:55,860 --> 00:19:00,150
eval F function which gives you the

00:18:58,170 --> 00:19:02,720
floating point result that you may want

00:19:00,150 --> 00:19:07,110
to reuse in you know in the calculation

00:19:02,720 --> 00:19:09,960
okay so then gone through this a bunch

00:19:07,110 --> 00:19:11,460
for this okay but can you do more like

00:19:09,960 --> 00:19:14,040
so far what you have seen is we can use

00:19:11,460 --> 00:19:17,730
Python to build basic calculators and

00:19:14,040 --> 00:19:21,570
really smart calculators we can

00:19:17,730 --> 00:19:24,290
certainly do more and to do that what we

00:19:21,570 --> 00:19:28,020
will do is we will take hit help of I

00:19:24,290 --> 00:19:29,720
think I'll skip this over for now I will

00:19:28,020 --> 00:19:34,380
take help of interactive notebooks and

00:19:29,720 --> 00:19:43,620
by that what I mean is something like

00:19:34,380 --> 00:19:48,600
this so this is an example of drawing a

00:19:43,620 --> 00:19:52,320
phone now this combines non-uniform

00:19:48,600 --> 00:19:54,600
probability which is one of the things I

00:19:52,320 --> 00:19:58,770
was going to discuss but I'm too this

00:19:54,600 --> 00:20:00,900
combines some plotting graphs this

00:19:58,770 --> 00:20:05,010
combines interactive widgets so when I

00:20:00,900 --> 00:20:07,580
run this I am - hopefully I'll get a

00:20:05,010 --> 00:20:07,580
nice slider

00:20:11,830 --> 00:20:15,309
coordinates starting

00:20:38,049 --> 00:20:42,190
your imagine everything would work

00:20:56,190 --> 00:21:03,570
okay so when I run this program I have

00:20:59,670 --> 00:21:05,610
this slider and what this is essentially

00:21:03,570 --> 00:21:09,140
doing is this specifies the number of

00:21:05,610 --> 00:21:11,550
points in the phone that you want so I

00:21:09,140 --> 00:21:13,680
can change this and it'll automatically

00:21:11,550 --> 00:21:15,930
rather phone

00:21:13,680 --> 00:21:17,610
so the magic here happens with the

00:21:15,930 --> 00:21:20,340
single function which is this interact

00:21:17,610 --> 00:21:23,010
function the first argument to that is

00:21:20,340 --> 00:21:25,110
the function that will be called and you

00:21:23,010 --> 00:21:27,240
can see that it takes a single argument

00:21:25,110 --> 00:21:29,430
and which is basically the value of the

00:21:27,240 --> 00:21:33,200
slide that you're choosing so very basic

00:21:29,430 --> 00:21:35,820
but it really creates a very interactive

00:21:33,200 --> 00:21:42,060
experience and you can play with the

00:21:35,820 --> 00:21:44,540
number of phones here and similarly what

00:21:42,060 --> 00:21:44,540
else do I have

00:21:46,280 --> 00:21:51,960
yeah so that's I also have a demo of the

00:21:49,860 --> 00:21:53,790
Mandelbrot set I don't think I have the

00:21:51,960 --> 00:21:58,050
time for it anymore I'll show the

00:21:53,790 --> 00:21:59,910
projectile motion quickly that was one

00:21:58,050 --> 00:22:05,790
of my favorite things in physics when I

00:21:59,910 --> 00:22:08,730
was learning yeah

00:22:05,790 --> 00:22:10,470
I also found a way to have this so this

00:22:08,730 --> 00:22:12,870
is one example of where I don't need

00:22:10,470 --> 00:22:16,530
notebook for showing this but it's just

00:22:12,870 --> 00:22:24,120
obviously a more seamless presentation

00:22:16,530 --> 00:22:26,070
experience kind of starting anyway so

00:22:24,120 --> 00:22:27,990
while the animation starts what I'll do

00:22:26,070 --> 00:22:31,470
is I'm going to talk about a bit and

00:22:27,990 --> 00:22:33,240
what I would talk about is so we have

00:22:31,470 --> 00:22:35,400
seen a few examples of how we can

00:22:33,240 --> 00:22:37,170
integrate math and Python programming

00:22:35,400 --> 00:22:39,270
and even maybe science or other subjects

00:22:37,170 --> 00:22:41,250
it also gives us a good base for

00:22:39,270 --> 00:22:43,080
exploring other subjects like there are

00:22:41,250 --> 00:22:44,310
science and machine learning in fact one

00:22:43,080 --> 00:22:46,500
of the demos that I have is something

00:22:44,310 --> 00:22:48,270
called of a gradient descent method so

00:22:46,500 --> 00:22:50,400
the exact functions that I use for the

00:22:48,270 --> 00:22:53,370
derivatives I actually used it to

00:22:50,400 --> 00:22:55,470
implement gradient descent and then so

00:22:53,370 --> 00:22:58,050
after that I implement to use a simple

00:22:55,470 --> 00:22:59,790
linear regression and all I am doing is

00:22:58,050 --> 00:23:01,500
I'm just using simple zone methods so

00:22:59,790 --> 00:23:04,020
I'm not having to calculate any

00:23:01,500 --> 00:23:05,550
derivatives numerically or provide the

00:23:04,020 --> 00:23:08,210
derivatives by hand I'm calculating

00:23:05,550 --> 00:23:09,990
everything in the program itself so I

00:23:08,210 --> 00:23:14,010
think all of that is

00:23:09,990 --> 00:23:19,850
very good base for learning all these

00:23:14,010 --> 00:23:19,850
more even advanced things let's see I

00:23:20,540 --> 00:23:24,260
have to show that

00:23:51,830 --> 00:23:58,970
it has decided it's not going to work so

00:23:54,630 --> 00:23:58,970
maybe I'll try and run around the demo

00:24:08,740 --> 00:24:20,320
oh this is like a super fail no it's not

00:24:17,820 --> 00:24:24,730
it sorry Internet it's it's localhost

00:24:20,320 --> 00:24:30,159
it's it's it it's all local oh yeah

00:24:24,730 --> 00:24:31,990
it's localhost is failing its ah okay

00:24:30,159 --> 00:24:38,950
well dad we should happen and we didn't

00:24:31,990 --> 00:24:42,850
see it but anyway so when I run this so

00:24:38,950 --> 00:24:45,640
yeah I mean that's that I I think what

00:24:42,850 --> 00:24:46,870
this allows us to like basically

00:24:45,640 --> 00:24:48,190
experiment with projectile motion

00:24:46,870 --> 00:24:50,260
understand what happens when you change

00:24:48,190 --> 00:24:52,120
the initial velocity or change the angle

00:24:50,260 --> 00:24:55,090
here I have specified like the fixed

00:24:52,120 --> 00:24:57,850
initial velocity of 60 and an angle of

00:24:55,090 --> 00:24:59,350
theta and so basically allows us to

00:24:57,850 --> 00:25:00,970
explore various things without you know

00:24:59,350 --> 00:25:05,289
having to go to the field and throw

00:25:00,970 --> 00:25:07,600
balls like um so that's an okay I'm

00:25:05,289 --> 00:25:11,980
going to give give one last shot at

00:25:07,600 --> 00:25:13,539
making this work in the meantime if you

00:25:11,980 --> 00:25:17,399
have any questions please feel free and

00:25:13,539 --> 00:25:17,399
ask so that you know I don't waste time

00:25:22,950 --> 00:25:34,539
okay round of applause and then our any

00:25:29,770 --> 00:25:38,950
questions what do we just want to see

00:25:34,539 --> 00:25:45,880
the next cool demo actually I could show

00:25:38,950 --> 00:25:49,390
you great innocent if we were to like

00:25:45,880 --> 00:25:51,279
show this to students would we be asking

00:25:49,390 --> 00:25:53,679
them to look for the code and see how

00:25:51,279 --> 00:25:57,070
it's written before they just play with

00:25:53,679 --> 00:25:59,710
the program would generally be it and so

00:25:57,070 --> 00:26:02,289
does your those little smart calculators

00:25:59,710 --> 00:26:04,390
have like things that you can cut and

00:26:02,289 --> 00:26:07,659
chop and and allow the students to maybe

00:26:04,390 --> 00:26:09,940
build their own sort of things yeah yeah

00:26:07,659 --> 00:26:12,549
pretty much I guess that that's pretty

00:26:09,940 --> 00:26:15,159
much the idea like so I guess explain

00:26:12,549 --> 00:26:17,559
the math a bit and then basically show

00:26:15,159 --> 00:26:20,080
what it would look like in in those in a

00:26:17,559 --> 00:26:22,000
Python program and then yeah build up on

00:26:20,080 --> 00:26:26,410
it and that's that's pretty much

00:26:22,000 --> 00:26:28,030
here is the Jupiter notebooks like a

00:26:26,410 --> 00:26:30,130
requirement or kantola

00:26:28,030 --> 00:26:31,720
already knows not at all like so the

00:26:30,130 --> 00:26:33,370
main reason have used it it's it's just

00:26:31,720 --> 00:26:35,620
easier to because it's seamless I have

00:26:33,370 --> 00:26:38,380
the output there so it's that lets our

00:26:35,620 --> 00:26:40,240
cover except for the ones where I showed

00:26:38,380 --> 00:26:43,720
the sliders those are Jupiter notebook

00:26:40,240 --> 00:26:45,820
features yeah one of the challenges that

00:26:43,720 --> 00:26:47,230
we've had when we showed this kind of

00:26:45,820 --> 00:26:49,210
stuff to maths teachers is they come

00:26:47,230 --> 00:26:51,550
back with this come back to us with

00:26:49,210 --> 00:26:54,130
statements like already students haven't

00:26:51,550 --> 00:26:55,930
done a hundred simple differentiation

00:26:54,130 --> 00:26:58,510
problems they're not gonna actually know

00:26:55,930 --> 00:27:01,330
what differentiation is which i think is

00:26:58,510 --> 00:27:03,220
ludicrous because getting caught up with

00:27:01,330 --> 00:27:05,860
the computation aspect of it takes away

00:27:03,220 --> 00:27:08,350
from understanding the math so how would

00:27:05,860 --> 00:27:13,950
you propose once a students build

00:27:08,350 --> 00:27:15,910
something like this teachers I guess

00:27:13,950 --> 00:27:19,120
investigating this in a more kind of

00:27:15,910 --> 00:27:20,980
genuine real applied way like how is

00:27:19,120 --> 00:27:22,060
that gonna change or what implications

00:27:20,980 --> 00:27:23,590
is that gonna have for what actually

00:27:22,060 --> 00:27:25,960
doing this class and how are they gonna

00:27:23,590 --> 00:27:27,220
cope with that because I would argue

00:27:25,960 --> 00:27:28,780
that it meets the needs of the

00:27:27,220 --> 00:27:30,760
Australian Curriculum better than they

00:27:28,780 --> 00:27:33,310
can't practice those but they may think

00:27:30,760 --> 00:27:35,740
otherwise so this is a proposal

00:27:33,310 --> 00:27:39,190
obviously I don't have any experience so

00:27:35,740 --> 00:27:41,200
the way I I guess it would workers first

00:27:39,190 --> 00:27:42,610
okay so this is the first they learn the

00:27:41,200 --> 00:27:44,350
math right I mean obviously you'd need

00:27:42,610 --> 00:27:47,950
to know what what the derivative of sine

00:27:44,350 --> 00:27:49,660
X is for example I think the next step

00:27:47,950 --> 00:27:51,970
would be to use that in some sort of a

00:27:49,660 --> 00:27:55,030
practical way like for example use it in

00:27:51,970 --> 00:27:56,680
a way where you would use that you know

00:27:55,030 --> 00:27:58,240
what also once you know already what the

00:27:56,680 --> 00:28:00,940
derivative of sine X is there's no point

00:27:58,240 --> 00:28:02,290
in like you know like in a program you

00:28:00,940 --> 00:28:04,840
can just make a program do it once you

00:28:02,290 --> 00:28:07,030
once you know the math so I guess for

00:28:04,840 --> 00:28:09,370
example of like the gradient descent

00:28:07,030 --> 00:28:10,990
method is a it sounds very fancy it's

00:28:09,370 --> 00:28:12,640
big I didn't learn it in school laughs

00:28:10,990 --> 00:28:14,680
absolutely that's all absolutely true

00:28:12,640 --> 00:28:17,620
but I think that's a very good way to

00:28:14,680 --> 00:28:19,390
apply that in in a context where you

00:28:17,620 --> 00:28:21,280
don't need to worry about knowing the

00:28:19,390 --> 00:28:22,720
formulas anymore you can I mean you know

00:28:21,280 --> 00:28:24,790
the formula you just want to program to

00:28:22,720 --> 00:28:27,250
do it but once you make a program do it

00:28:24,790 --> 00:28:29,470
you know that your programming is class

00:28:27,250 --> 00:28:30,580
is going to be also useful for doing all

00:28:29,470 --> 00:28:32,830
these other things that you're learning

00:28:30,580 --> 00:28:35,110
not necessarily limited to you know like

00:28:32,830 --> 00:28:35,980
solving like figure like printing a few

00:28:35,110 --> 00:28:39,220
Bonacci series for

00:28:35,980 --> 00:28:41,049
example so yeah it's fuzzy I know like

00:28:39,220 --> 00:28:44,260
it would be like your sub trying to

00:28:41,049 --> 00:28:46,000
substitute like students like you know

00:28:44,260 --> 00:28:48,630
like pen and paper experience with

00:28:46,000 --> 00:28:51,400
programs but yeah I think there's a

00:28:48,630 --> 00:28:52,750
somewhere in between where I think like

00:28:51,400 --> 00:28:55,450
it would just make the students more

00:28:52,750 --> 00:29:03,970
it's like I are interested in both

00:28:55,450 --> 00:29:06,520
subjects that way I'm a teacher but I

00:29:03,970 --> 00:29:10,450
never used Jupiter before so if I want

00:29:06,520 --> 00:29:13,990
to try this where should I start

00:29:10,450 --> 00:29:16,030
or you have a book to recommend I don't

00:29:13,990 --> 00:29:17,830
know actually about books with Jupiter

00:29:16,030 --> 00:29:19,720
notebook but you could easily start I

00:29:17,830 --> 00:29:21,880
mean you could start simple right you

00:29:19,720 --> 00:29:24,429
could start with something like this you

00:29:21,880 --> 00:29:25,720
could you could so ideally you would

00:29:24,429 --> 00:29:27,700
write this in a program let's say we

00:29:25,720 --> 00:29:36,160
would write a program you would write it

00:29:27,700 --> 00:29:39,160
in a file yeah oh okay so are you okay

00:29:36,160 --> 00:29:41,230
okay so I will get to that next so if

00:29:39,160 --> 00:29:43,450
you have to do it in a program you just

00:29:41,230 --> 00:29:46,000
write this file in a file and then print

00:29:43,450 --> 00:29:47,650
around them either in your IDE or using

00:29:46,000 --> 00:29:49,030
the Python command line so you could

00:29:47,650 --> 00:29:50,500
start with like this right instead of

00:29:49,030 --> 00:29:53,950
doing this you could write it here and

00:29:50,500 --> 00:29:55,600
then you have that output so I think

00:29:53,950 --> 00:29:57,840
this is the kind of you could start it

00:29:55,600 --> 00:30:00,640
this way and then you could probably

00:29:57,840 --> 00:30:02,530
there are other projects like NB grader

00:30:00,640 --> 00:30:05,350
which people use for classroom grading

00:30:02,530 --> 00:30:07,570
so there are all sorts of things so I

00:30:05,350 --> 00:30:09,490
guess that would be one approach the way

00:30:07,570 --> 00:30:11,080
you'd get it is are you film I think

00:30:09,490 --> 00:30:16,059
anaconda note are you familiar with the

00:30:11,080 --> 00:30:19,240
Anaconda Python distribution so sorry

00:30:16,059 --> 00:30:20,830
yeah so if you download that you could

00:30:19,240 --> 00:30:21,520
you would get Jupiter notebook straight

00:30:20,830 --> 00:30:23,500
out of the box

00:30:21,520 --> 00:30:26,410
so all you do is run this command like

00:30:23,500 --> 00:30:32,460
not sure if you've seen so here for

00:30:26,410 --> 00:30:32,460
example all I'm doing is it's lost so

00:30:36,030 --> 00:30:39,760
all I'm doing is running a single

00:30:38,080 --> 00:30:41,230
command eight starts it's it's a server

00:30:39,760 --> 00:30:43,750
program so it starts and then your

00:30:41,230 --> 00:30:46,540
browser window opens and it shows you

00:30:43,750 --> 00:30:48,580
like all these files that you have so

00:30:46,540 --> 00:30:49,480
yeah I guess you could start that with

00:30:48,580 --> 00:30:51,010
simple I mean I am NOT

00:30:49,480 --> 00:30:52,840
Princip your notebook user either like I

00:30:51,010 --> 00:30:55,450
have just been using for my demos and

00:30:52,840 --> 00:30:57,820
everything's but but their resources a

00:30:55,450 --> 00:30:59,740
lot of resources which basically would

00:30:57,820 --> 00:31:02,020
help you I think there is a Jupiter for

00:30:59,740 --> 00:31:12,730
Jupiter for teaching Google group where

00:31:02,020 --> 00:31:14,980
people who can recommend things oh it's

00:31:12,730 --> 00:31:16,960
so really a part answer to the question

00:31:14,980 --> 00:31:19,750
about trying out Jupiter and getting

00:31:16,960 --> 00:31:23,140
installed one thing that's useful

00:31:19,750 --> 00:31:27,580
there's a website called work re W aka

00:31:23,140 --> 00:31:29,290
RI dot IO it's basically a notebook

00:31:27,580 --> 00:31:30,610
server running in the cloud that you can

00:31:29,290 --> 00:31:32,350
just sign up for an account and you can

00:31:30,610 --> 00:31:34,150
just play with that play with it without

00:31:32,350 --> 00:31:35,530
having to install anything and figuring

00:31:34,150 --> 00:31:38,260
that out so it's a good way of sort of

00:31:35,530 --> 00:31:41,880
kicking the tires before you learn a bit

00:31:38,260 --> 00:31:41,880
more about how to get things installed

00:31:42,750 --> 00:31:52,720
cool alright any last questions okay

00:31:47,710 --> 00:31:54,309
thank you of it thank you so solid demos

00:31:52,720 --> 00:31:56,559
that didn't work here would all work if

00:31:54,309 --> 00:31:58,480
you try it locally so yeah give it a

00:31:56,559 --> 00:32:00,280
shot and you feel free to use it any way

00:31:58,480 --> 00:32:02,500
you feel possible there's the licensing

00:32:00,280 --> 00:32:04,150
restrictions or anything so as long as

00:32:02,500 --> 00:32:07,020
you get something useful out of it it'll

00:32:04,150 --> 00:32:07,020

YouTube URL: https://www.youtube.com/watch?v=XJOt4QQgx0A


