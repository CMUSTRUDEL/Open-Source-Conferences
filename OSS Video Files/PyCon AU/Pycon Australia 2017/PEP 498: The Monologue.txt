Title: PEP 498: The Monologue
Publication date: 2017-08-05
Playlist: Pycon Australia 2017
Description: 
	Mariatta Wijaya

http://2017.pycon-au.org/schedule/presentation/24/

#pyconau

This talk was given at PyCon Australia 2017 which was held from 3-8 August, 2017 in Melbourne, Victoria.

PyCon Australia is the national conference for users of the Python Programming Language. In August 2017, we're returning to Melbourne, bringing together students, enthusiasts, and professionals with a love of Python from around Australia, and from all over the World. 

August 3-8 2017, Melbourne, Victoria

Python, PyCon, PyConAU
Captions: 
	00:00:00,000 --> 00:00:05,040
whoo hello everyone and welcome to pept

00:00:04,020 --> 00:00:09,889
4-9-8

00:00:05,040 --> 00:00:12,960
the monologue this is Mary Ottawa Jaya

00:00:09,889 --> 00:00:14,549
maryada is a new Python core developer

00:00:12,960 --> 00:00:18,270
she works as a software engineer in

00:00:14,549 --> 00:00:21,660
Vancouver Canada where she also helps

00:00:18,270 --> 00:00:24,480
organize Vancouver PI ladies she's

00:00:21,660 --> 00:00:29,010
credited in four movies Smurfs the lost

00:00:24,480 --> 00:00:32,309
village storks the Angry Birds movie

00:00:29,010 --> 00:00:33,239
which is actually pretty good I haven't

00:00:32,309 --> 00:00:35,850
seen the other ones they probably pretty

00:00:33,239 --> 00:00:44,250
good too and at Hotel Transylvania 2

00:00:35,850 --> 00:00:46,890
please give it up for mariotta I so

00:00:44,250 --> 00:00:48,829
actually there are two more movies where

00:00:46,890 --> 00:00:52,230
I get credited and they just come out

00:00:48,829 --> 00:00:56,640
after I wrote that bio so this is the

00:00:52,230 --> 00:00:59,850
emoji movie and spider-man homecoming so

00:00:56,640 --> 00:01:02,160
if you wait at the credits long enough

00:00:59,850 --> 00:01:08,130
you'll find my name all the way in the

00:01:02,160 --> 00:01:10,680
back anyway welcome kinda interested to

00:01:08,130 --> 00:01:13,770
know who you are and why you're here and

00:01:10,680 --> 00:01:15,299
I do this to set everybody's expectation

00:01:13,770 --> 00:01:19,799
about this talk of what you will learn

00:01:15,299 --> 00:01:22,290
today this is an introductory talk for

00:01:19,799 --> 00:01:25,650
the beginners mostly so if you're new to

00:01:22,290 --> 00:01:29,100
Python just living it using it as hobby

00:01:25,650 --> 00:01:33,060
welcome I prepared this talk especially

00:01:29,100 --> 00:01:35,909
for you I wanna introduce you to one of

00:01:33,060 --> 00:01:39,299
the newest features of the language only

00:01:35,909 --> 00:01:43,290
released in December less than a year

00:01:39,299 --> 00:01:49,170
ago not only that I want to tell you a

00:01:43,290 --> 00:01:50,790
brief backstory of how it got made if

00:01:49,170 --> 00:01:54,899
you're not so new to Python that's fine

00:01:50,790 --> 00:01:58,560
that's okay still welcome maybe you only

00:01:54,899 --> 00:02:00,869
ever heard about tap 8 maybe you thought

00:01:58,560 --> 00:02:02,840
there's only one step or there are eight

00:02:00,869 --> 00:02:04,670
up one to eight

00:02:02,840 --> 00:02:06,259
so let me tell you about some other

00:02:04,670 --> 00:02:08,920
paths that you never heard about and

00:02:06,259 --> 00:02:11,900
we'll go over what a pap really is I'll

00:02:08,920 --> 00:02:14,150
want to give you a glimpse of this side

00:02:11,900 --> 00:02:15,800
of the world the world of corn Python

00:02:14,150 --> 00:02:19,610
development that maybe you're not

00:02:15,800 --> 00:02:22,430
familiar with and if you are still using

00:02:19,610 --> 00:02:24,590
an older version of Python you're

00:02:22,430 --> 00:02:28,280
looking for excuses why you should

00:02:24,590 --> 00:02:30,470
upgrade it stay around because I wanna

00:02:28,280 --> 00:02:32,390
try to convince you to upgrade so that's

00:02:30,470 --> 00:02:34,489
that's my secret agenda I want you by

00:02:32,390 --> 00:02:36,590
the end of the talk I want you to try to

00:02:34,489 --> 00:02:37,870
develop Python 3 6 and try it for

00:02:36,590 --> 00:02:41,930
yourself

00:02:37,870 --> 00:02:43,670
yes Who am I it's mentioned before my

00:02:41,930 --> 00:02:46,250
name is Mariela I came from Vancouver

00:02:43,670 --> 00:02:49,099
Canada and I helped organize thank you

00:02:46,250 --> 00:02:51,650
ladies you can find me on Twitter on

00:02:49,099 --> 00:02:53,150
github as Miriam and I'm I mean you

00:02:51,650 --> 00:02:56,780
might on call about but I'm really new

00:02:53,150 --> 00:02:59,390
I've never written any pad before and in

00:02:56,780 --> 00:03:02,180
fact it was me up until a year ago I

00:02:59,390 --> 00:03:06,319
really thought that was only one there

00:03:02,180 --> 00:03:08,750
with me so it's okay anyway so but I've

00:03:06,319 --> 00:03:10,459
learned a lot the past year so I just

00:03:08,750 --> 00:03:16,160
kind of want to share what I've learned

00:03:10,459 --> 00:03:18,950
so far so what what is a pap it stands

00:03:16,160 --> 00:03:22,100
for Python in handle proposal it's a

00:03:18,950 --> 00:03:24,620
document design document that you need

00:03:22,100 --> 00:03:25,100
to write to provide information to the

00:03:24,620 --> 00:03:30,079
community

00:03:25,100 --> 00:03:33,170
it describes major new feature for

00:03:30,079 --> 00:03:36,019
Python so if you ever have a great idea

00:03:33,170 --> 00:03:40,250
of how Python can be better

00:03:36,019 --> 00:03:43,370
you need to write one of this and there

00:03:40,250 --> 00:03:47,269
is a pap that tells you what a pap is

00:03:43,370 --> 00:03:49,880
for everyone it tells you the purpose of

00:03:47,269 --> 00:03:52,549
a pap the workflow how you can start

00:03:49,880 --> 00:03:56,480
writing it and what belongs in a

00:03:52,549 --> 00:04:00,170
successful pap so read this if you ever

00:03:56,480 --> 00:04:02,720
want to write one the usual workflow is

00:04:00,170 --> 00:04:05,569
like this first if you come up with an

00:04:02,720 --> 00:04:09,380
idea you have to pitch it to Python

00:04:05,569 --> 00:04:11,299
ideas mailing lists and if your idea

00:04:09,380 --> 00:04:14,180
receives a lot of attention a lot of

00:04:11,299 --> 00:04:15,519
traction maybe you'll be invited to

00:04:14,180 --> 00:04:20,329
write a pup

00:04:15,519 --> 00:04:22,400
you will use PAP 12 as the template okay

00:04:20,329 --> 00:04:24,950
the instruction is bad you copy/paste

00:04:22,400 --> 00:04:28,850
PAP 12 into your own and add in your own

00:04:24,950 --> 00:04:30,740
contact or maybe you want to try my

00:04:28,850 --> 00:04:32,930
cookie cutter it's much easier than copy

00:04:30,740 --> 00:04:35,450
pasting but that's unofficial that's my

00:04:32,930 --> 00:04:38,240
personal project so ask me about it

00:04:35,450 --> 00:04:41,870
and once you wrote the PAP in you're

00:04:38,240 --> 00:04:45,440
ready you can then ask the PDF l Guido

00:04:41,870 --> 00:04:48,010
van Rossum for his pronouncement like

00:04:45,440 --> 00:04:51,880
you write to the mailing Leasing Guido

00:04:48,010 --> 00:04:55,730
this PAP is now ready for pronouncement

00:04:51,880 --> 00:04:59,600
Guido will then read your proposal study

00:04:55,730 --> 00:05:02,450
it and he will come back with either I'm

00:04:59,600 --> 00:05:06,710
sorry I'm bring Jack ting this and he

00:05:02,450 --> 00:05:09,620
will give you a reason why or he said

00:05:06,710 --> 00:05:12,500
congratulations I'm accepting this tub

00:05:09,620 --> 00:05:17,510
then you can start writing code goat

00:05:12,500 --> 00:05:21,320
that will go into C Python so there are

00:05:17,510 --> 00:05:23,510
four hundred twenty nine pups today and

00:05:21,320 --> 00:05:28,550
I think some of the core devs are

00:05:23,510 --> 00:05:30,800
thinking up new pups even right now 82

00:05:28,550 --> 00:05:33,560
of them have been rejected so not

00:05:30,800 --> 00:05:35,330
everything will get accepted even though

00:05:33,560 --> 00:05:42,260
it's it might sounds good in the first

00:05:35,330 --> 00:05:48,860
place but the ones that got accepted it

00:05:42,260 --> 00:05:52,669
will change everybody's life change you

00:05:48,860 --> 00:05:56,860
me everybody in this room all the users

00:05:52,669 --> 00:05:59,600
of Python their life will be out there

00:05:56,860 --> 00:06:04,130
so it's a big deal so I think you should

00:05:59,600 --> 00:06:09,890
know what a pap really really is so let

00:06:04,130 --> 00:06:11,930
me tell you about top 490 it started two

00:06:09,890 --> 00:06:14,600
years ago there was an email sent to

00:06:11,930 --> 00:06:17,870
python ideas mailing list way to title

00:06:14,600 --> 00:06:22,280
brief or a string format from Mike

00:06:17,870 --> 00:06:24,800
Mellon it it says like this have long

00:06:22,280 --> 00:06:28,410
wished Python could format strings

00:06:24,800 --> 00:06:33,450
easily like bash or Peru do

00:06:28,410 --> 00:06:37,320
and I didn't hit me he shared a Courtney

00:06:33,450 --> 00:06:39,930
but I have seen others make similar

00:06:37,320 --> 00:06:42,120
suggestions but to my knowledge they

00:06:39,930 --> 00:06:47,400
didn't include this pleasing gravity

00:06:42,120 --> 00:06:51,630
aspect now python is kind of opinionated

00:06:47,400 --> 00:06:54,180
language so is the community I want to

00:06:51,630 --> 00:06:59,220
share with you the first three reactions

00:06:54,180 --> 00:07:05,250
to this email and it come really quickly

00:06:59,220 --> 00:07:07,650
first is from Eric Smith he said what

00:07:05,250 --> 00:07:08,070
would this do it's not clear tell me

00:07:07,650 --> 00:07:12,740
more

00:07:08,070 --> 00:07:17,040
that's the first reaction the second one

00:07:12,740 --> 00:07:22,250
although I have a sympathetic -1 I don't

00:07:17,040 --> 00:07:25,830
think we should have this the next one

00:07:22,250 --> 00:07:31,940
it's done you wouldn't have to modify

00:07:25,830 --> 00:07:34,650
the way that all +1 this sounds good so

00:07:31,940 --> 00:07:37,170
lots of people have lots of thoughts

00:07:34,650 --> 00:07:41,910
about this this idea so within a day

00:07:37,170 --> 00:07:43,880
there are like 60 emails about this and

00:07:41,910 --> 00:07:48,810
within a day

00:07:43,880 --> 00:07:51,150
Guido saw that Eric is able to take this

00:07:48,810 --> 00:07:57,540
to where he wants this feature to be and

00:07:51,150 --> 00:07:59,640
Guido invited Eric to write a pup and it

00:07:57,540 --> 00:08:04,050
took some time but about three weeks

00:07:59,640 --> 00:08:08,940
later a new PAP was written 498 with the

00:08:04,050 --> 00:08:13,170
title literal string formatting and Eric

00:08:08,940 --> 00:08:15,840
wrote to the mailing list saying I wrote

00:08:13,170 --> 00:08:18,510
this pup I have a fully working

00:08:15,840 --> 00:08:21,470
implementation which I will share this

00:08:18,510 --> 00:08:25,410
weekend and I'm open to any suggestions

00:08:21,470 --> 00:08:29,130
also open to a better title than literal

00:08:25,410 --> 00:08:32,340
string formatting remember what I said

00:08:29,130 --> 00:08:36,930
about opinionated because in the end

00:08:32,340 --> 00:08:39,290
they did change the title of the so it

00:08:36,930 --> 00:08:39,290
happens

00:08:40,069 --> 00:08:51,240
and he finally finished writing it food

00:08:46,319 --> 00:08:53,899
a week later and he declared that this

00:08:51,240 --> 00:08:57,649
map is now ready for pronouncement and

00:08:53,899 --> 00:09:00,240
basically Guido has made his decision

00:08:57,649 --> 00:09:03,720
almost right away but he wanted to give

00:09:00,240 --> 00:09:07,410
the community a couple days a chance to

00:09:03,720 --> 00:09:10,920
give their final feedback eventually two

00:09:07,410 --> 00:09:16,439
days later Guido said I'm accepting this

00:09:10,920 --> 00:09:21,899
that the rationale given for this pub is

00:09:16,439 --> 00:09:26,809
this the existing ways of formatting the

00:09:21,899 --> 00:09:30,930
error-prone inflexible or cumbersome

00:09:26,809 --> 00:09:33,139
let's let's think about what it really

00:09:30,930 --> 00:09:35,610
means this is from the beginning of time

00:09:33,139 --> 00:09:38,160
this is how you would format strings

00:09:35,610 --> 00:09:41,970
with percent as token you will have

00:09:38,160 --> 00:09:47,100
something like hello earth and followed

00:09:41,970 --> 00:09:48,959
by a variable name and initially you

00:09:47,100 --> 00:09:51,240
read the string you don't know what what

00:09:48,959 --> 00:09:53,009
do you see what is person s and you have

00:09:51,240 --> 00:09:58,649
to read all the way to the end and

00:09:53,009 --> 00:10:02,879
realize Oh a name so this is how it

00:09:58,649 --> 00:10:05,610
worked now what if you have more than

00:10:02,879 --> 00:10:08,129
one arguments to the string can you just

00:10:05,610 --> 00:10:12,509
put another one like that put a comma

00:10:08,129 --> 00:10:15,420
like that doesn't work because all of

00:10:12,509 --> 00:10:17,910
the sudden the syntax has to change you

00:10:15,420 --> 00:10:22,769
need now to put in places like that you

00:10:17,910 --> 00:10:26,040
need to pass in tuple so again as you

00:10:22,769 --> 00:10:28,559
read the string you're saying hello

00:10:26,040 --> 00:10:29,759
person as your person s it doesn't

00:10:28,559 --> 00:10:35,009
really make any sense

00:10:29,759 --> 00:10:37,949
there is no context there is another pub

00:10:35,009 --> 00:10:42,329
that proposed a new way to format

00:10:37,949 --> 00:10:44,810
strings PAP 3101 introduced string

00:10:42,329 --> 00:10:47,600
format method

00:10:44,810 --> 00:10:50,660
here's how it look like so you can now

00:10:47,600 --> 00:10:54,230
pass in curly braces like that there is

00:10:50,660 --> 00:10:57,830
a format method and at least as you read

00:10:54,230 --> 00:10:59,870
the string you know you're pitting out

00:10:57,830 --> 00:11:03,620
name and age you're not no longer

00:10:59,870 --> 00:11:07,090
reading present s it's fine but your

00:11:03,620 --> 00:11:09,800
code looks longer you're repeating

00:11:07,090 --> 00:11:11,570
you're typing out this variable three

00:11:09,800 --> 00:11:14,810
different times it's it's it's

00:11:11,570 --> 00:11:19,670
cumbersome so this is what's being

00:11:14,810 --> 00:11:23,980
proposed in pub 498 something called AB

00:11:19,670 --> 00:11:26,630
string here's how it works

00:11:23,980 --> 00:11:31,970
remember the string format method before

00:11:26,630 --> 00:11:36,430
it looks very similar take all of those

00:11:31,970 --> 00:11:36,430
format method take that off okay

00:11:36,700 --> 00:11:43,790
this was string format take it off put

00:11:40,850 --> 00:11:47,840
an F in front and you're done that's AB

00:11:43,790 --> 00:11:51,050
string this is the result of PAP 498 the

00:11:47,840 --> 00:11:54,710
ability to add one extra level to your

00:11:51,050 --> 00:11:57,860
string the letter F that's all that's

00:11:54,710 --> 00:12:02,810
all F let's review this this is how you

00:11:57,860 --> 00:12:06,680
write string before with person s with

00:12:02,810 --> 00:12:10,670
string format it gets rounder with F

00:12:06,680 --> 00:12:12,200
string it's much shorter and some

00:12:10,670 --> 00:12:13,580
terminologies that I think we should

00:12:12,200 --> 00:12:16,520
know

00:12:13,580 --> 00:12:20,750
so things inside the curly braces

00:12:16,520 --> 00:12:23,300
they're called expression and everything

00:12:20,750 --> 00:12:26,870
outside are called the literal portion

00:12:23,300 --> 00:12:28,940
and you can use lower case F upper case

00:12:26,870 --> 00:12:33,050
F single quote double quote triple quote

00:12:28,940 --> 00:12:35,870
all those works you can combine raw

00:12:33,050 --> 00:12:39,080
strings and F strings to create five

00:12:35,870 --> 00:12:42,260
strings as a refresher if you're not

00:12:39,080 --> 00:12:44,900
familiar with raw strings in Python the

00:12:42,260 --> 00:12:48,170
backslash character is considered the

00:12:44,900 --> 00:12:50,120
escape character and example of it is

00:12:48,170 --> 00:12:52,640
when you want to type out you want to

00:12:50,120 --> 00:12:54,080
get a newline you do backslash M that's

00:12:52,640 --> 00:12:58,070
an example we call this escape

00:12:54,080 --> 00:13:01,830
processing so here's another example

00:12:58,070 --> 00:13:04,830
if you have backslash you all those

00:13:01,830 --> 00:13:09,120
codes it will print out the smiley face

00:13:04,830 --> 00:13:11,640
emoji and if for some reason you don't

00:13:09,120 --> 00:13:14,820
actually won that emoji there you can

00:13:11,640 --> 00:13:19,790
create an raw string put an R in front

00:13:14,820 --> 00:13:19,790
of the string and it doesn't get escaped

00:13:20,029 --> 00:13:28,260
with F strings is this similar so this

00:13:25,010 --> 00:13:31,589
is a regular F string it prints out the

00:13:28,260 --> 00:13:34,950
emoji to create the raw F strings just

00:13:31,589 --> 00:13:39,540
put an F and are and no emoji there

00:13:34,950 --> 00:13:41,310
so now escape processing same thing you

00:13:39,540 --> 00:13:43,260
can do F an R or an F uppercase

00:13:41,310 --> 00:13:48,420
lowercase C Kurkure double quote triple

00:13:43,260 --> 00:13:53,610
quotes all those works but no binary up

00:13:48,420 --> 00:13:58,520
strings no F and B BNF no Unicode have

00:13:53,610 --> 00:14:02,010
strings no UNF no I fan you don't try it

00:13:58,520 --> 00:14:03,779
so some other more interesting more

00:14:02,010 --> 00:14:05,850
interesting things you can do you can

00:14:03,779 --> 00:14:09,420
pass in methods inside the expression

00:14:05,850 --> 00:14:11,339
portion so like if you have an another

00:14:09,420 --> 00:14:12,959
battle did like for example here at to

00:14:11,339 --> 00:14:16,950
uppercase you can pass in the parable

00:14:12,959 --> 00:14:19,560
then it works you can pass in format

00:14:16,950 --> 00:14:21,870
specifiers to the string for example I

00:14:19,560 --> 00:14:25,970
have an example where you used to format

00:14:21,870 --> 00:14:29,010
your number before you have the dot 3f

00:14:25,970 --> 00:14:31,589
you can pass that to your F string so in

00:14:29,010 --> 00:14:36,000
the expression portion put a column and

00:14:31,589 --> 00:14:38,459
a format specifier just to demonstrate

00:14:36,000 --> 00:14:42,390
some more examples of how you can use

00:14:38,459 --> 00:14:45,180
format specifiers in your f strings you

00:14:42,390 --> 00:14:51,360
can even form at day time objects like

00:14:45,180 --> 00:14:54,200
that so Colin and a date-time format you

00:14:51,360 --> 00:14:56,730
cannot use F strings in docstrings I

00:14:54,200 --> 00:14:59,240
don't know why you want to do this but

00:14:56,730 --> 00:15:02,040
somehow it was asked several times I

00:14:59,240 --> 00:15:03,540
don't know why maybe I don't write

00:15:02,040 --> 00:15:07,230
enough for I don't really nice talk

00:15:03,540 --> 00:15:09,540
strings but you cannot even though your

00:15:07,230 --> 00:15:11,500
string does not contain any expressions

00:15:09,540 --> 00:15:15,490
no curly braces them

00:15:11,500 --> 00:15:20,470
it doesn't work what about multi-line

00:15:15,490 --> 00:15:23,050
strings so this ticket came when I back

00:15:20,470 --> 00:15:24,240
in December I was new to have strings I

00:15:23,050 --> 00:15:26,980
didn't know what was the problem

00:15:24,240 --> 00:15:30,160
so somebody reported that they have

00:15:26,980 --> 00:15:34,660
three strings with three lines of code

00:15:30,160 --> 00:15:36,460
the first one has F in it they have lots

00:15:34,660 --> 00:15:38,560
of expressions in all the strings they

00:15:36,460 --> 00:15:41,160
said only the first one seems to be

00:15:38,560 --> 00:15:43,720
replaced properly the other two did not

00:15:41,160 --> 00:15:47,050
it was not obvious to me the first time

00:15:43,720 --> 00:15:49,240
I was new newby newby mistake so the

00:15:47,050 --> 00:15:51,610
problem is that what we're trying to do

00:15:49,240 --> 00:15:55,630
here is concatenating three different

00:15:51,610 --> 00:15:59,380
strings so all of them has to be has to

00:15:55,630 --> 00:16:01,570
be a strings so I made this name mistake

00:15:59,380 --> 00:16:05,640
and so maybe I thought I just should

00:16:01,570 --> 00:16:10,030
share this with you if you wanna

00:16:05,640 --> 00:16:14,260
contribute to C Python this ticket is

00:16:10,030 --> 00:16:17,470
still open I know that's not have there

00:16:14,260 --> 00:16:20,710
is a request to have a string syntax

00:16:17,470 --> 00:16:23,650
highlighting in idle this is going to be

00:16:20,710 --> 00:16:25,960
a huge project it's not a single patch

00:16:23,650 --> 00:16:29,980
but if you're interested you have time

00:16:25,960 --> 00:16:32,260
you want to help maybe try this

00:16:29,980 --> 00:16:33,250
but don't just start writing your own

00:16:32,260 --> 00:16:35,560
implementation

00:16:33,250 --> 00:16:37,210
I recommend commenting on an issue

00:16:35,560 --> 00:16:40,270
saying you're interested you have some

00:16:37,210 --> 00:16:44,140
idea on how to do this and get guidance

00:16:40,270 --> 00:16:48,280
from the core developers so I think if

00:16:44,140 --> 00:16:54,490
you do this I think you'll be a hero

00:16:48,280 --> 00:16:56,770
I think now finding the documentation

00:16:54,490 --> 00:16:59,589
for a string was tricky for me because

00:16:56,770 --> 00:17:01,990
this is the first thing I do I went to

00:16:59,589 --> 00:17:03,160
the documentation type in F - string and

00:17:01,990 --> 00:17:08,290
nothing came out

00:17:03,160 --> 00:17:10,569
is there no documentation so turns out

00:17:08,290 --> 00:17:14,260
this is how you can find a documentation

00:17:10,569 --> 00:17:18,550
you don't type F - string you say format

00:17:14,260 --> 00:17:20,800
string literal or you can go to the

00:17:18,550 --> 00:17:23,079
glossary section there is an entry for a

00:17:20,800 --> 00:17:25,660
string it will take you to the

00:17:23,079 --> 00:17:29,260
documentation or you can

00:17:25,660 --> 00:17:33,850
Marcus really wrong links to formatted

00:17:29,260 --> 00:17:36,730
string literals what about the

00:17:33,850 --> 00:17:43,140
performance so I did this on my machine

00:17:36,730 --> 00:17:46,390
just to compare how it works very simple

00:17:43,140 --> 00:17:50,260
string replacement so person s passing

00:17:46,390 --> 00:17:53,320
in a equals two that's the four proof

00:17:50,260 --> 00:17:56,860
that's the performance for using person

00:17:53,320 --> 00:18:01,090
s same thing with string format it's

00:17:56,860 --> 00:18:05,650
kind of slow with a string is much

00:18:01,090 --> 00:18:12,310
faster so a strings shorter the right

00:18:05,650 --> 00:18:14,890
and faster so use it so that's really

00:18:12,310 --> 00:18:17,770
all I want to say about that Friday and

00:18:14,890 --> 00:18:22,330
in fact it's one of my favorite PAP so

00:18:17,770 --> 00:18:24,730
far and I hope you get excited about L

00:18:22,330 --> 00:18:27,460
things the way I do and I hope you want

00:18:24,730 --> 00:18:29,800
to try to use it everything you've seen

00:18:27,460 --> 00:18:33,850
so far in this talk they are safe to be

00:18:29,800 --> 00:18:37,510
tried at home and but you need to have

00:18:33,850 --> 00:18:39,490
Python three six and if you don't have

00:18:37,510 --> 00:18:44,290
it yet I think it's not yet in your

00:18:39,490 --> 00:18:46,540
machine download it install it I think

00:18:44,290 --> 00:18:52,660
it took me ten minutes to install it on

00:18:46,540 --> 00:18:55,510
my machine here and it's free you don't

00:18:52,660 --> 00:18:57,670
need to pay you don't need to subscribe

00:18:55,510 --> 00:19:00,490
you don't need to give me your email

00:18:57,670 --> 00:19:02,020
address you don't have to write any PAP

00:19:00,490 --> 00:19:05,680
you don't have to read hundreds of

00:19:02,020 --> 00:19:10,300
mailing list emails it's it's done take

00:19:05,680 --> 00:19:13,000
it use it and guess what if you use if

00:19:10,300 --> 00:19:14,890
you develop Python three six today not

00:19:13,000 --> 00:19:18,520
only you get to use a string which is

00:19:14,890 --> 00:19:23,440
really awesome there are sixteen tabs

00:19:18,520 --> 00:19:27,670
total in Python physics these are all

00:19:23,440 --> 00:19:31,450
the paps that got into it and remember

00:19:27,670 --> 00:19:34,330
what I said about what a pap is it every

00:19:31,450 --> 00:19:37,029
single one of this is a major

00:19:34,330 --> 00:19:39,639
enhancement to Python

00:19:37,029 --> 00:19:43,709
things that makes things that makes

00:19:39,639 --> 00:19:49,329
Python fasten better more secure

00:19:43,709 --> 00:19:50,439
changing your life so give it a try so

00:19:49,329 --> 00:19:52,779
thank you for coming

00:19:50,439 --> 00:19:55,359
there is no Q&A I will be at the

00:19:52,779 --> 00:19:58,389
conference I will spin on Monday you can

00:19:55,359 --> 00:20:00,309
message me on Twitter send me an email

00:19:58,389 --> 00:20:04,160
or if there's any problem file a buck in

00:20:00,309 --> 00:20:09,480
Bucks python.org thank you

00:20:04,160 --> 00:20:09,480

YouTube URL: https://www.youtube.com/watch?v=M4w4wKveVo4


