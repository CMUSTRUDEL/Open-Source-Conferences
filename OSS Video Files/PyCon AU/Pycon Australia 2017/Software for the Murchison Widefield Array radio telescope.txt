Title: Software for the Murchison Widefield Array radio telescope
Publication date: 2017-08-05
Playlist: Pycon Australia 2017
Description: 
	Andrew Williams

http://2017.pycon-au.org/schedule/presentation/82/

#pyconau

This talk was given at PyCon Australia 2017 which was held from 3-8 August, 2017 in Melbourne, Victoria.

PyCon Australia is the national conference for users of the Python Programming Language. In August 2017, we're returning to Melbourne, bringing together students, enthusiasts, and professionals with a love of Python from around Australia, and from all over the World. 

August 3-8 2017, Melbourne, Victoria

Python, PyCon, PyConAU
Captions: 
	00:00:00,000 --> 00:00:05,640
an enviable position so so we have

00:00:03,629 --> 00:00:09,500
Andrew Williams our from Curtin

00:00:05,640 --> 00:00:12,210
University and he's here to speak about

00:00:09,500 --> 00:00:14,610
astronomy in Python which as we'll just

00:00:12,210 --> 00:00:16,260
talk about is it's definitely a thing a

00:00:14,610 --> 00:00:17,490
lot of astronomers use Python but we

00:00:16,260 --> 00:00:21,890
haven't actually had all that many talks

00:00:17,490 --> 00:00:21,890
on it so all right so welcome Andrew

00:00:25,010 --> 00:00:32,420
everyone yes well I started in Python a

00:00:30,029 --> 00:00:34,950
long time ago I started out as a

00:00:32,420 --> 00:00:36,239
research astronomer that was member of a

00:00:34,950 --> 00:00:38,370
big research group hunting for

00:00:36,239 --> 00:00:40,110
exoplanets I was the guy in the group

00:00:38,370 --> 00:00:42,329
that read all the code not one of the

00:00:40,110 --> 00:00:44,100
guys writing all the papers so I kind of

00:00:42,329 --> 00:00:46,379
drifted out of research and ended up in

00:00:44,100 --> 00:00:48,120
a niche where I'm a better programmer

00:00:46,379 --> 00:00:50,219
than most astronomers and I'm a better

00:00:48,120 --> 00:00:53,149
astronomer the most programmers but

00:00:50,219 --> 00:00:57,120
neither of those are very high bars so

00:00:53,149 --> 00:00:58,829
it's worked okay so far ah that's the

00:00:57,120 --> 00:01:00,870
the telescope that I've been working on

00:00:58,829 --> 00:01:02,820
for the last few years been at Curtin

00:01:00,870 --> 00:01:04,080
working in radio astronomy I started out

00:01:02,820 --> 00:01:07,080
on real telescope so you could actually

00:01:04,080 --> 00:01:19,860
like look through radio telescopes are

00:01:07,080 --> 00:01:21,990
kind of weird to use a keyboard this is

00:01:19,860 --> 00:01:23,939
the cover slide well Dola logos or logos

00:01:21,990 --> 00:01:26,130
are very important people gave lots of

00:01:23,939 --> 00:01:27,420
money for those logos it's a big

00:01:26,130 --> 00:01:31,380
international collaboration this

00:01:27,420 --> 00:01:34,229
telescope started about 2000 dish we had

00:01:31,380 --> 00:01:39,119
Hardware on the ground from about 2005

00:01:34,229 --> 00:01:41,520
ish I got involved in that 2007 more

00:01:39,119 --> 00:01:43,290
University of gotten involved since it's

00:01:41,520 --> 00:01:45,210
it's a quite a big project and it's not

00:01:43,290 --> 00:01:47,100
the Square Kilometre Array the square

00:01:45,210 --> 00:01:49,079
philanderer you probably heard of we are

00:01:47,100 --> 00:01:51,630
a precursor but it's an independent

00:01:49,079 --> 00:01:54,810
telescope that's been running full-time

00:01:51,630 --> 00:01:57,060
and taking data since 2012 it's a long

00:01:54,810 --> 00:01:59,189
way away it works in the same

00:01:57,060 --> 00:02:03,689
frequencies that TV and radio stations

00:01:59,189 --> 00:02:05,780
use so we're sitting about eight to ten

00:02:03,689 --> 00:02:08,489
hours drive from Perth it's on the

00:02:05,780 --> 00:02:10,619
market where the SKA is we're not

00:02:08,489 --> 00:02:12,239
actually it so it's about eight to ten

00:02:10,619 --> 00:02:13,440
hour drive from Perth we actually fly to

00:02:12,239 --> 00:02:15,600
Geraldton and

00:02:13,440 --> 00:02:16,940
and drive out from there and because

00:02:15,600 --> 00:02:22,440
it's in a remote place there are

00:02:16,940 --> 00:02:23,370
difficulties it's not much fun to live

00:02:22,440 --> 00:02:24,900
out there

00:02:23,370 --> 00:02:26,220
the frogs aren't the problem they go

00:02:24,900 --> 00:02:28,640
away wouldn't you when you flush they

00:02:26,220 --> 00:02:31,110
come back when you're sitting down it's

00:02:28,640 --> 00:02:35,160
it's the snakes that come to get the

00:02:31,110 --> 00:02:38,190
frogs that have more of a worry this

00:02:35,160 --> 00:02:41,160
that site has asked escape is the the

00:02:38,190 --> 00:02:42,900
csiro dish based on scope now a dishes

00:02:41,160 --> 00:02:44,640
most people's idea of a radio telescope

00:02:42,900 --> 00:02:46,860
but a dish doesn't actually take a

00:02:44,640 --> 00:02:48,090
picture of the sky you point it at the

00:02:46,860 --> 00:02:49,590
sky if you want to take a picture you

00:02:48,090 --> 00:02:51,210
need a scan it backwards and forwards

00:02:49,590 --> 00:02:53,070
and a raster pattern and measure the

00:02:51,210 --> 00:02:55,560
intensity at each place as you scan the

00:02:53,070 --> 00:02:58,080
dish that instrument they're called a

00:02:55,560 --> 00:02:59,370
path the phased-array feed is actually

00:02:58,080 --> 00:03:00,810
exception to that rule each of those

00:02:59,370 --> 00:03:03,570
little light green and dark green

00:03:00,810 --> 00:03:06,360
squares is a separate receiving element

00:03:03,570 --> 00:03:09,690
so that actually forms 70 odd pixels on

00:03:06,360 --> 00:03:12,090
the sky at the same time and 70 slightly

00:03:09,690 --> 00:03:14,100
different positions on the sky but it's

00:03:12,090 --> 00:03:18,800
by combining radio telescopes together

00:03:14,100 --> 00:03:21,080
that you actually get images these are

00:03:18,800 --> 00:03:23,580
the signs that belong to all the logos

00:03:21,080 --> 00:03:24,900
that's sitting out there on site you can

00:03:23,580 --> 00:03:30,230
see where everything is and how far away

00:03:24,900 --> 00:03:33,270
it is from MIT through a curtain and

00:03:30,230 --> 00:03:35,250
here's a tile close-up each one of these

00:03:33,270 --> 00:03:38,850
is a low-frequency equivalent of one of

00:03:35,250 --> 00:03:40,770
those dishes so we have metal spiders in

00:03:38,850 --> 00:03:42,269
the desert each one of those is kind of

00:03:40,770 --> 00:03:44,430
like the TV antenna on your roof it

00:03:42,269 --> 00:03:45,959
picks up a signal from the sky and we

00:03:44,430 --> 00:03:47,550
have a box called a beam former that

00:03:45,959 --> 00:03:49,560
does the magic of being able to point it

00:03:47,550 --> 00:03:51,330
in different directions each of those

00:03:49,560 --> 00:03:54,450
antennas is connected to this beam

00:03:51,330 --> 00:03:56,040
former by a cable that is exactly seven

00:03:54,450 --> 00:03:58,019
meters long give or take

00:03:56,040 --> 00:03:59,640
a millimeter or so and it's that exact

00:03:58,019 --> 00:04:01,769
seven meter length to all for all of

00:03:59,640 --> 00:04:06,090
those cables that lets us do the magic

00:04:01,769 --> 00:04:07,950
of pointing it now we have lots of these

00:04:06,090 --> 00:04:09,920
styles some of them are clustered

00:04:07,950 --> 00:04:13,250
together in Nice regularly spaced groups

00:04:09,920 --> 00:04:17,209
and some of them are scattered at random

00:04:13,250 --> 00:04:19,560
and which you choose is a mathematical

00:04:17,209 --> 00:04:20,549
marvel that I don't really understand I

00:04:19,560 --> 00:04:22,140
don't know why they needed these

00:04:20,549 --> 00:04:24,180
regularly spaced one most radio

00:04:22,140 --> 00:04:26,550
telescopes use a what's called a pseudo

00:04:24,180 --> 00:04:27,090
random scatter because you wanted a

00:04:26,550 --> 00:04:29,400
common a

00:04:27,090 --> 00:04:30,870
of different baselines different lengths

00:04:29,400 --> 00:04:33,210
than orientations of the distances

00:04:30,870 --> 00:04:35,010
between tiles so each one of these

00:04:33,210 --> 00:04:37,080
styles is your five by five meter square

00:04:35,010 --> 00:04:38,699
and this cable snaking across the desert

00:04:37,080 --> 00:04:40,199
to where the signals from those tiles

00:04:38,699 --> 00:04:42,389
are digitized and sent off to the

00:04:40,199 --> 00:04:44,040
outside world and you've got an office

00:04:42,389 --> 00:04:47,160
here that you can work in with laptops

00:04:44,040 --> 00:04:50,040
and you've got various storage equipment

00:04:47,160 --> 00:04:55,680
and power distribution and things like

00:04:50,040 --> 00:04:59,130
that so each one of these tiles is

00:04:55,680 --> 00:05:01,139
composed of these elements the antennas

00:04:59,130 --> 00:05:03,180
are actually two antennas for each of

00:05:01,139 --> 00:05:06,120
these spiders one faces east-west and

00:05:03,180 --> 00:05:08,010
picks up polarizations that run sideways

00:05:06,120 --> 00:05:09,240
the other face is north south and it's

00:05:08,010 --> 00:05:11,550
the other two elements that picks up

00:05:09,240 --> 00:05:13,020
polarizations are entered north-south so

00:05:11,550 --> 00:05:15,210
if you look closely there are two wires

00:05:13,020 --> 00:05:17,160
coming out of each of these spiders one

00:05:15,210 --> 00:05:21,419
for the east-west dipoles and one for

00:05:17,160 --> 00:05:25,169
the north-south dipoles those wires run

00:05:21,419 --> 00:05:27,840
to a little antenna sitting up in here a

00:05:25,169 --> 00:05:29,100
little amplifier so the screw terminals

00:05:27,840 --> 00:05:31,889
here are connected to the aluminium

00:05:29,100 --> 00:05:34,440
dipole they feed the signal in the top

00:05:31,889 --> 00:05:36,690
side of this handles X the under side

00:05:34,440 --> 00:05:40,380
handles Y and as you can see there's a

00:05:36,690 --> 00:05:41,880
lot of dirt around we found out several

00:05:40,380 --> 00:05:43,650
years after putting these things out in

00:05:41,880 --> 00:05:45,419
the desert that the dirt is actually

00:05:43,650 --> 00:05:49,080
quite a strong acid when you mix it with

00:05:45,419 --> 00:05:50,849
water the conformal coating wasn't rated

00:05:49,080 --> 00:05:54,450
to handle acid it was ready to handle

00:05:50,849 --> 00:05:56,880
water now the signal from the sky is

00:05:54,450 --> 00:05:59,250
radio waves when you convert them in

00:05:56,880 --> 00:06:02,789
that amplifier they turn into changing

00:05:59,250 --> 00:06:04,950
signals in your coax they change it

00:06:02,789 --> 00:06:09,000
hundreds of millions of times a second

00:06:04,950 --> 00:06:11,039
so each of these antennas are combined

00:06:09,000 --> 00:06:13,080
together where imagine this is a signal

00:06:11,039 --> 00:06:16,260
from one dipole and this is a signal

00:06:13,080 --> 00:06:18,930
from a different dipole if the waves are

00:06:16,260 --> 00:06:21,740
in phase the sum is very high if the

00:06:18,930 --> 00:06:26,660
waves are out of phase the sum is zero

00:06:21,740 --> 00:06:29,010
so if you imagine a signal from space

00:06:26,660 --> 00:06:31,020
coming from straight overhead hitting

00:06:29,010 --> 00:06:32,580
all of these antennas the signal is

00:06:31,020 --> 00:06:33,780
going to heat each of these antennas at

00:06:32,580 --> 00:06:36,960
the same time because it comes from

00:06:33,780 --> 00:06:40,770
overhead and the signals in the cables

00:06:36,960 --> 00:06:42,750
are going to be precisely in step each

00:06:40,770 --> 00:06:45,479
peak in voltage from every one of these

00:06:42,750 --> 00:06:47,400
antennas is going to align in time and

00:06:45,479 --> 00:06:49,860
because these cables are all the same

00:06:47,400 --> 00:06:51,569
lengths when you join them together the

00:06:49,860 --> 00:06:53,909
signals coming from straight overhead

00:06:51,569 --> 00:06:55,650
are going to increase because they're in

00:06:53,909 --> 00:06:57,330
phase that the peaks will line up with

00:06:55,650 --> 00:06:58,830
the peaks and it will be incredibly

00:06:57,330 --> 00:07:00,690
sensitive to any signal coming from

00:06:58,830 --> 00:07:02,789
straight overhead because each of these

00:07:00,690 --> 00:07:05,009
16 antennas will reinforce all of the

00:07:02,789 --> 00:07:07,409
others if a signals coming in at an

00:07:05,009 --> 00:07:09,120
angle then the peaks from these antennas

00:07:07,409 --> 00:07:11,220
will overlap with the troughs from these

00:07:09,120 --> 00:07:13,680
antennas and it will all cancel out

00:07:11,220 --> 00:07:15,539
you'll receive nothing from a source

00:07:13,680 --> 00:07:16,919
over here because Peaks will line up

00:07:15,539 --> 00:07:20,699
with troughs and they'll cancel each

00:07:16,919 --> 00:07:22,289
other out so the tile as it is if you

00:07:20,699 --> 00:07:23,430
just combine the signals together it's a

00:07:22,289 --> 00:07:25,919
really good way of looking at things

00:07:23,430 --> 00:07:28,169
straight overhead but it sucks if you

00:07:25,919 --> 00:07:31,440
want to look at anything else that's

00:07:28,169 --> 00:07:34,289
what the beam farmer comes in this box

00:07:31,440 --> 00:07:36,780
takes a signal from each one of these

00:07:34,289 --> 00:07:38,909
inputs so we have the the X

00:07:36,780 --> 00:07:40,620
polarizations on top and the y

00:07:38,909 --> 00:07:43,620
polarizations on the bottom so these are

00:07:40,620 --> 00:07:45,900
all of the north-south sorry all of the

00:07:43,620 --> 00:07:47,550
east-west orientation signals and they

00:07:45,900 --> 00:07:50,099
go into this magic beam from a board

00:07:47,550 --> 00:07:52,560
where each channel can delay the signal

00:07:50,099 --> 00:07:54,840
by a different amount so this channel

00:07:52,560 --> 00:07:57,120
here passes through this set of delay

00:07:54,840 --> 00:07:58,650
lines and then is summed at the end this

00:07:57,120 --> 00:08:00,090
channel here passes through this set of

00:07:58,650 --> 00:08:02,639
delay lines that is summed at the end

00:08:00,090 --> 00:08:03,870
the other polarizations go to a matching

00:08:02,639 --> 00:08:05,729
board at the bottom that does exactly

00:08:03,870 --> 00:08:06,990
the same thing usually you want to point

00:08:05,729 --> 00:08:10,020
both parallel relations in the same

00:08:06,990 --> 00:08:13,680
direction by changing the delay we can

00:08:10,020 --> 00:08:16,110
change where in the phase these peaks

00:08:13,680 --> 00:08:17,550
and troughs overlap but and that changes

00:08:16,110 --> 00:08:20,580
where the telescope actually points

00:08:17,550 --> 00:08:23,789
where this tile points if you look at it

00:08:20,580 --> 00:08:24,509
slightly closer up the delays are really

00:08:23,789 --> 00:08:26,580
very simple

00:08:24,509 --> 00:08:29,279
each of these black boxes is an analog

00:08:26,580 --> 00:08:31,409
switch we can send the signal straight

00:08:29,279 --> 00:08:33,510
ahead or we can send it through this

00:08:31,409 --> 00:08:35,490
little loop of wire we can send the

00:08:33,510 --> 00:08:37,320
signal straight ahead or through this

00:08:35,490 --> 00:08:39,839
loop of wire that is exactly twice as

00:08:37,320 --> 00:08:41,579
long straight ahead or through this loop

00:08:39,839 --> 00:08:43,589
of wire that's exactly twice as long as

00:08:41,579 --> 00:08:45,329
the last one there are five little loops

00:08:43,589 --> 00:08:45,899
of wire the longest ones are on the back

00:08:45,329 --> 00:08:47,940
of the board

00:08:45,899 --> 00:08:50,100
so by the end of it we can either send

00:08:47,940 --> 00:08:51,779
the signal straight through and be added

00:08:50,100 --> 00:08:54,000
up well we can send the signal through a

00:08:51,779 --> 00:08:54,600
length of wire that adds up to the light

00:08:54,000 --> 00:08:56,779
travel

00:08:54,600 --> 00:08:59,610
across the tile about five meters of

00:08:56,779 --> 00:09:03,269
distance for a radio wave so we can

00:08:59,610 --> 00:09:08,639
delay the signal by anywhere up to a few

00:09:03,269 --> 00:09:11,759
nanoseconds so each of these tiles after

00:09:08,639 --> 00:09:16,819
it's actually what I do is actually show

00:09:11,759 --> 00:09:16,819
you that's probably the best way of just

00:09:18,649 --> 00:09:30,769
so here's a tile that's the direction we

00:09:25,740 --> 00:09:34,410
want to point the tile the delays act to

00:09:30,769 --> 00:09:36,420
allow the signals from some antennas to

00:09:34,410 --> 00:09:38,579
be not delayed at all other antennas to

00:09:36,420 --> 00:09:43,279
be laid by a fair amount of light travel

00:09:38,579 --> 00:09:43,279
time and if you look at the the profile

00:09:46,190 --> 00:09:52,170
that is effectively taking that entire

00:09:49,019 --> 00:09:54,089
tile and tilting it it's taking that

00:09:52,170 --> 00:09:57,209
entire tile and tilting one corner down

00:09:54,089 --> 00:09:59,610
so it's underneath the ground and acting

00:09:57,209 --> 00:10:01,829
to reinforce signals coming from over

00:09:59,610 --> 00:10:04,410
here and to cancel out signals coming

00:10:01,829 --> 00:10:05,850
from anywhere else in the sky simply by

00:10:04,410 --> 00:10:12,360
delaying the signals from some of those

00:10:05,850 --> 00:10:16,740
dipoles and that all happens entirely in

00:10:12,360 --> 00:10:18,389
analog so each of these tiles behaves

00:10:16,740 --> 00:10:20,040
like a single one of those dishes you

00:10:18,389 --> 00:10:22,290
can put in a direction the signal from

00:10:20,040 --> 00:10:24,180
each tile is sensitive to an area that's

00:10:22,290 --> 00:10:26,100
about 20 degrees wide on the sky and

00:10:24,180 --> 00:10:27,810
that 20 degrees is given by the

00:10:26,100 --> 00:10:29,519
wavelength that you're interested in how

00:10:27,810 --> 00:10:31,589
physically far apart the peaks and

00:10:29,519 --> 00:10:32,970
troughs are and it's determined by the

00:10:31,589 --> 00:10:34,860
size of the tile if you had a bigger

00:10:32,970 --> 00:10:36,029
tile you'd be sensitive to a smaller

00:10:34,860 --> 00:10:37,740
patch of sky if you had a higher

00:10:36,029 --> 00:10:40,380
wavelength you'd be sensitive to a

00:10:37,740 --> 00:10:42,420
smaller patch of sky now in theory you

00:10:40,380 --> 00:10:43,949
could take all of the tiles scattered

00:10:42,420 --> 00:10:45,660
out over a few kilometers on the desert

00:10:43,949 --> 00:10:47,670
and combine them the same way you could

00:10:45,660 --> 00:10:50,759
have exactly the right length of cable

00:10:47,670 --> 00:10:52,620
before the tile gets some before you

00:10:50,759 --> 00:10:54,930
join the signals together and you could

00:10:52,620 --> 00:10:57,930
have delays and those cables that allow

00:10:54,930 --> 00:10:59,610
you to form a single beam at one point

00:10:57,930 --> 00:11:01,889
in the sky that would be about a

00:10:59,610 --> 00:11:03,510
thirtieth of a degree across you could

00:11:01,889 --> 00:11:05,430
do that in theory in practice it would

00:11:03,510 --> 00:11:07,380
mean controlling the lengths of all of

00:11:05,430 --> 00:11:08,490
those cables many kilometers of cables

00:11:07,380 --> 00:11:11,370
to the nearest mill

00:11:08,490 --> 00:11:16,649
meter and that's hard so what you do is

00:11:11,370 --> 00:11:19,470
you digitize it each of those the each

00:11:16,649 --> 00:11:21,839
of those tiles is digitized and then you

00:11:19,470 --> 00:11:24,360
can combine that in software you can

00:11:21,839 --> 00:11:25,950
have every conceivable direction in the

00:11:24,360 --> 00:11:28,560
sky by having a whole heap of delays

00:11:25,950 --> 00:11:30,410
instead of adding the signals coming at

00:11:28,560 --> 00:11:32,730
the same instant from all of those tiles

00:11:30,410 --> 00:11:35,430
with the right delays you have every

00:11:32,730 --> 00:11:37,320
possible set of delays to define every

00:11:35,430 --> 00:11:39,180
possible direction in the sky instead of

00:11:37,320 --> 00:11:42,630
choosing one set of delays you'd make an

00:11:39,180 --> 00:11:45,120
image of the entire sky you do that in

00:11:42,630 --> 00:11:46,589
software it's nice and easy in practice

00:11:45,120 --> 00:11:47,730
you don't do that at all you do

00:11:46,589 --> 00:11:49,320
something mathematically equivalent

00:11:47,730 --> 00:11:53,970
using Fourier transform so they don't

00:11:49,320 --> 00:11:55,680
understand so the digitizing happens in

00:11:53,970 --> 00:11:57,690
one of these boxes we have 16 of these

00:11:55,680 --> 00:12:00,570
boxes in the desert each one of them has

00:11:57,690 --> 00:12:08,010
cables running to eight tiles and it is

00:12:00,570 --> 00:12:11,970
a bunch of custom electronics so each

00:12:08,010 --> 00:12:13,589
receiver feeds the signal through a set

00:12:11,970 --> 00:12:15,060
of variable attenuators we want to be

00:12:13,589 --> 00:12:17,730
able to control the voltage we don't

00:12:15,060 --> 00:12:19,410
want to saturate the A to D converter we

00:12:17,730 --> 00:12:21,000
have an A to D converter that samples at

00:12:19,410 --> 00:12:23,250
six hundred and fifty five point three

00:12:21,000 --> 00:12:25,200
six million times per second and I hope

00:12:23,250 --> 00:12:28,110
you all recognize that number and we

00:12:25,200 --> 00:12:29,820
sample it into 8-bit integers so we get

00:12:28,110 --> 00:12:32,250
about ten and a half gigabytes of data

00:12:29,820 --> 00:12:34,200
off the sky from each of these receivers

00:12:32,250 --> 00:12:37,020
or if you count all 16 of them it's

00:12:34,200 --> 00:12:39,510
about 168 gigabytes of data coming out

00:12:37,020 --> 00:12:41,520
of the the digitizers every single

00:12:39,510 --> 00:12:46,170
second it's it's a massive firehose of

00:12:41,520 --> 00:12:47,810
data that we can't possibly deal with so

00:12:46,170 --> 00:12:51,120
what we do is we split into channels

00:12:47,810 --> 00:12:52,920
that data stream instead of being 655

00:12:51,120 --> 00:12:54,870
point three six million samples per

00:12:52,920 --> 00:12:57,740
second each of them representing a

00:12:54,870 --> 00:13:00,420
voltage at an instant is fed into a

00:12:57,740 --> 00:13:02,970
polyphase filter Bank it's implemented

00:13:00,420 --> 00:13:07,170
in FPGA it's like a Fourier transform

00:13:02,970 --> 00:13:09,779
only better it splits it into 256

00:13:07,170 --> 00:13:12,000
channels each of those channels is one

00:13:09,779 --> 00:13:13,829
point two eight megahertz wide and has

00:13:12,000 --> 00:13:16,829
one point to eight million samples per

00:13:13,829 --> 00:13:19,140
second and represents one point to eight

00:13:16,829 --> 00:13:21,240
megahertz were worth of channel data for

00:13:19,140 --> 00:13:22,440
example channel 100 is for all of the

00:13:21,240 --> 00:13:25,860
frequencies between 100

00:13:22,440 --> 00:13:28,080
28 megahertz 129 point two eight now

00:13:25,860 --> 00:13:30,210
those 10 bit samples are actually five

00:13:28,080 --> 00:13:32,520
bit real number and a five bit imaginary

00:13:30,210 --> 00:13:34,110
number and there's a bit of magic to

00:13:32,520 --> 00:13:37,410
make sure that you choose the right five

00:13:34,110 --> 00:13:39,000
bits out of those 16 bit numbers that

00:13:37,410 --> 00:13:42,870
come out of the the Fourier transform

00:13:39,000 --> 00:13:45,030
but it's essentially just one point two

00:13:42,870 --> 00:13:46,680
eight million samples for a second that

00:13:45,030 --> 00:13:49,140
defines at one point two eight megahertz

00:13:46,680 --> 00:13:50,730
frequency Channel we choose 24 of those

00:13:49,140 --> 00:13:51,990
frequency channels we can choose in a

00:13:50,730 --> 00:13:54,270
bunch if we want to look at everything

00:13:51,990 --> 00:13:56,610
between 100 megahertz and 130 megahertz

00:13:54,270 --> 00:13:59,100
then we can choose 24 of those channels

00:13:56,610 --> 00:14:01,050
that are together otherwise we can

00:13:59,100 --> 00:14:03,840
scatter them across the whole bandwidth

00:14:01,050 --> 00:14:05,760
so that we were sensitive to signals

00:14:03,840 --> 00:14:07,140
between about 80 megahertz and 300

00:14:05,760 --> 00:14:09,660
megahertz because of the design of the

00:14:07,140 --> 00:14:11,220
antenna so we can take you know 20

00:14:09,660 --> 00:14:12,630
different 24 different channels that are

00:14:11,220 --> 00:14:17,250
spread across that whole bandwidth if we

00:14:12,630 --> 00:14:19,140
want gaps the 24 channels was chosen

00:14:17,250 --> 00:14:21,270
because that was as much data as we

00:14:19,140 --> 00:14:23,850
could pipe through the Xilinx FPGA

00:14:21,270 --> 00:14:26,250
rocket i/o protocol on the fiber that

00:14:23,850 --> 00:14:30,510
comes out of this box all of that is

00:14:26,250 --> 00:14:32,490
implemented in FPGA s so we have a power

00:14:30,510 --> 00:14:34,800
supply on one side of the box we have

00:14:32,490 --> 00:14:37,770
this rack unit here which is your analog

00:14:34,800 --> 00:14:39,930
attenuators for for tiles this unit here

00:14:37,770 --> 00:14:42,330
does the digitizing and puts the data

00:14:39,930 --> 00:14:44,460
onto the backplane this unit here takes

00:14:42,330 --> 00:14:46,140
all eight tiles with all of the

00:14:44,460 --> 00:14:49,560
frequency channels from the backplane

00:14:46,140 --> 00:14:51,750
and pipes 24 of those channels through 3

00:14:49,560 --> 00:14:54,390
yellow fibers going out to the outside

00:14:51,750 --> 00:14:56,610
world this is another digitizer box is

00:14:54,390 --> 00:15:00,200
another attenuator box and the unit on

00:14:56,610 --> 00:15:02,760
the end is a little computer it's a

00:15:00,200 --> 00:15:06,630
pc/104 single board computer it's about

00:15:02,760 --> 00:15:08,310
this big it runs Linux and it runs a lot

00:15:06,630 --> 00:15:11,010
of code to keep all that run and to keep

00:15:08,310 --> 00:15:16,200
all that going you control over this by

00:15:11,010 --> 00:15:20,250
USB via i2c and by a direct pin i/o from

00:15:16,200 --> 00:15:22,950
the single board computer so one mwa

00:15:20,250 --> 00:15:26,700
receiver has a bunch of code running on

00:15:22,950 --> 00:15:28,589
it we use a post graze instance on the

00:15:26,700 --> 00:15:30,030
receiver that's because the people

00:15:28,589 --> 00:15:31,680
writing this code when the project

00:15:30,030 --> 00:15:32,520
started decided the only way they knew

00:15:31,680 --> 00:15:35,400
how to do inter process communication

00:15:32,520 --> 00:15:41,460
with MySQL

00:15:35,400 --> 00:15:42,930
hint don't ever do that the guys also

00:15:41,460 --> 00:15:44,670
didn't know how to do multi-threading so

00:15:42,930 --> 00:15:48,180
all of the locking is via SQL as well

00:15:44,670 --> 00:15:51,330
and it's just horrible all of this code

00:15:48,180 --> 00:15:53,400
was written by researchers and PhD

00:15:51,330 --> 00:15:55,800
students and postdocs and nobody was

00:15:53,400 --> 00:15:59,010
actually paid to writing it until I came

00:15:55,800 --> 00:16:01,380
along quite recently and PhD students

00:15:59,010 --> 00:16:03,690
finish and leave and postdocs finish and

00:16:01,380 --> 00:16:05,190
leave and we had all this orphan code so

00:16:03,690 --> 00:16:08,310
I'm responsible for the code that

00:16:05,190 --> 00:16:09,870
everybody else is abandoned and most of

00:16:08,310 --> 00:16:12,089
it I rewrote while the door was still

00:16:09,870 --> 00:16:14,190
swinging on their way out but some of it

00:16:12,089 --> 00:16:16,830
like this horrible stuff has stuck

00:16:14,190 --> 00:16:19,950
around mostly because the pc/104

00:16:16,830 --> 00:16:21,450
platform is not quite x86 compliant and

00:16:19,950 --> 00:16:23,460
we can't really install a new operating

00:16:21,450 --> 00:16:25,500
system on it because it's not x86

00:16:23,460 --> 00:16:27,720
compliant we can't really compile code

00:16:25,500 --> 00:16:29,370
there easily so it's it's this horrible

00:16:27,720 --> 00:16:32,130
legacy set that I hope to get rid of

00:16:29,370 --> 00:16:34,200
soon when we dump all the hardware so

00:16:32,130 --> 00:16:36,210
we've got Python code to start some of

00:16:34,200 --> 00:16:39,150
this stuff up to stop it to pass

00:16:36,210 --> 00:16:40,830
commands communicates by pyrrha all the

00:16:39,150 --> 00:16:44,040
stuff that I've written recently is as

00:16:40,830 --> 00:16:47,070
using pyro for RPC the old code

00:16:44,040 --> 00:16:51,510
uses XML of a TCP from a Java controller

00:16:47,070 --> 00:16:53,279
don't ask and we've got code that uses

00:16:51,510 --> 00:16:54,510
direct digital i/o to control things

00:16:53,279 --> 00:16:55,140
like the power supply's and the air

00:16:54,510 --> 00:16:58,010
conditioner

00:16:55,140 --> 00:17:00,959
we've got code that uses ITC to control

00:16:58,010 --> 00:17:03,360
gains and read temperatures and stuff

00:17:00,959 --> 00:17:07,949
we've got code that uses USB for

00:17:03,360 --> 00:17:09,689
controlling the the FPGAs and we pipe

00:17:07,949 --> 00:17:12,839
some preliminary data out to a one

00:17:09,689 --> 00:17:15,089
database server and we control it by a

00:17:12,839 --> 00:17:17,100
couple of pipes from the outside so

00:17:15,089 --> 00:17:21,030
sixteen of these instances running out

00:17:17,100 --> 00:17:23,400
in the desert the fibre from the

00:17:21,030 --> 00:17:25,050
receivers the the three fibers carrying

00:17:23,400 --> 00:17:27,300
eight channels each 24 channels from

00:17:25,050 --> 00:17:29,580
each receiver go to some computers we

00:17:27,300 --> 00:17:32,610
have here in a corona room it's called

00:17:29,580 --> 00:17:34,290
it's a machine room that is not quite

00:17:32,610 --> 00:17:36,330
your usual machine room because it is a

00:17:34,290 --> 00:17:38,610
machine room that is sealed inside a

00:17:36,330 --> 00:17:41,880
Faraday cage that is inside an office

00:17:38,610 --> 00:17:43,590
that is inside another Faraday cage so

00:17:41,880 --> 00:17:46,740
the only thing going into this machine

00:17:43,590 --> 00:17:48,450
room is a small quantity of air not a

00:17:46,740 --> 00:17:49,110
large quantity they have oxygen sensors

00:17:48,450 --> 00:17:52,440
and co2

00:17:49,110 --> 00:17:54,030
to make sure it's sufficient he'd he'd

00:17:52,440 --> 00:17:55,200
exchange chilled water they don't pipe

00:17:54,030 --> 00:17:56,880
water in and out they have one

00:17:55,200 --> 00:17:59,250
circulation system inside the room

00:17:56,880 --> 00:18:00,570
another outside and then heat exchanger

00:17:59,250 --> 00:18:01,650
actually a pair of heat exchangers and

00:18:00,570 --> 00:18:03,210
fiber

00:18:01,650 --> 00:18:05,460
oh and mains power obviously very

00:18:03,210 --> 00:18:08,190
filtered mains power so our machines are

00:18:05,460 --> 00:18:09,809
in this Bank of racks we have all of

00:18:08,190 --> 00:18:12,360
these fibers coming in with the data and

00:18:09,809 --> 00:18:16,410
we have a 10 gigabit pipe to pause II to

00:18:12,360 --> 00:18:18,360
take the data back out again so working

00:18:16,410 --> 00:18:19,860
in this room is kind of irritating it's

00:18:18,360 --> 00:18:22,290
loud as you might expect from machine

00:18:19,860 --> 00:18:23,910
room if the sirens go because the oxygen

00:18:22,290 --> 00:18:26,760
sensors are too low because the fans

00:18:23,910 --> 00:18:27,750
shut down then you need to run we you

00:18:26,760 --> 00:18:30,000
need to get everything in and out

00:18:27,750 --> 00:18:32,520
through an airlock this is a massive

00:18:30,000 --> 00:18:34,440
metal door with shielding around the

00:18:32,520 --> 00:18:36,299
outside and you need to go through this

00:18:34,440 --> 00:18:39,740
airlock because if you open the door

00:18:36,299 --> 00:18:42,120
you'd let all the radio interference out

00:18:39,740 --> 00:18:44,160
inside that correlator room we've got

00:18:42,120 --> 00:18:46,559
fibers coming from receiver fed into the

00:18:44,160 --> 00:18:49,290
fine PFP that is another Bank of custom

00:18:46,559 --> 00:18:51,210
FPGAs and again each of those 24

00:18:49,290 --> 00:18:54,390
channels is then split into fine

00:18:51,210 --> 00:18:57,240
channels so the 24 channels at a 1.2

00:18:54,390 --> 00:18:59,520
eight megahertz wide are split into 128

00:18:57,240 --> 00:19:02,040
fine channels each of them 10 kilohertz

00:18:59,520 --> 00:19:04,200
wide so it's ten thousand samples per

00:19:02,040 --> 00:19:07,549
second each of them is full bits of reel

00:19:04,200 --> 00:19:10,799
and four bits of imaginary each of those

00:19:07,549 --> 00:19:13,410
3072 fine channels has ten thousand

00:19:10,799 --> 00:19:15,809
eight bit samples press per tile per

00:19:13,410 --> 00:19:17,910
polarization per second so that's about

00:19:15,809 --> 00:19:20,910
eight gigabytes of data per second

00:19:17,910 --> 00:19:24,530
across a whole MWA and that is sent in

00:19:20,910 --> 00:19:30,750
this horrible custom Xilinx FPGA

00:19:24,530 --> 00:19:32,730
specific protocol over custom SS fps

00:19:30,750 --> 00:19:36,540
essentially it's a 40 gig pipes that we

00:19:32,730 --> 00:19:38,790
split into 10 gigabits so that's the

00:19:36,540 --> 00:19:41,070
FPGA rack the yellow fibers are the ones

00:19:38,790 --> 00:19:43,020
going in they carry eight fibers each

00:19:41,070 --> 00:19:44,730
from the receivers so this set of three

00:19:43,020 --> 00:19:46,919
fibers will be one receivers worth of

00:19:44,730 --> 00:19:48,600
channels and other another receivers and

00:19:46,919 --> 00:19:50,280
other receivers and so on each one of

00:19:48,600 --> 00:19:52,440
these cards handles four receivers there

00:19:50,280 --> 00:19:54,210
are two cards in this rack there's

00:19:52,440 --> 00:19:56,610
another rack like this that handles the

00:19:54,210 --> 00:20:00,540
other eight receivers so the data goes

00:19:56,610 --> 00:20:03,149
in and it comes out of these sort of

00:20:00,540 --> 00:20:05,729
multi direct attach cop

00:20:03,149 --> 00:20:08,999
connectors here so for cables coming out

00:20:05,729 --> 00:20:13,649
go to our media converters which are

00:20:08,999 --> 00:20:19,259
high-end Cisco servers so these high-end

00:20:13,649 --> 00:20:22,460
Cisco servers have a custom Xilinx card

00:20:19,259 --> 00:20:25,440
in here to receive the data so that has

00:20:22,460 --> 00:20:29,669
ports that take this magic Xilinx

00:20:25,440 --> 00:20:32,909
protocol and that's a $12,000 card in a

00:20:29,669 --> 00:20:34,969
20,000 builder server and all it does is

00:20:32,909 --> 00:20:37,139
translate from this horrible protocol

00:20:34,969 --> 00:20:38,700
and there's a process running on here

00:20:37,139 --> 00:20:42,359
that reads as fast as it can and writes

00:20:38,700 --> 00:20:45,149
UDP packets out a 10 gig port as fast as

00:20:42,359 --> 00:20:47,429
it can to translate it to real-world

00:20:45,149 --> 00:20:51,479
stuff from there we can use switches

00:20:47,429 --> 00:20:53,580
these pretty grunting machines this is a

00:20:51,479 --> 00:20:56,249
the back of Iraq and this is the front

00:20:53,580 --> 00:20:58,109
of the same rack so you can see the FPGA

00:20:56,249 --> 00:21:00,599
set in here we've got four above four

00:20:58,109 --> 00:21:02,279
Cisco's above forces goes below each of

00:21:00,599 --> 00:21:04,799
them is a twin eight core Zeon

00:21:02,279 --> 00:21:07,320
it has about three and a third terabytes

00:21:04,799 --> 00:21:12,210
of raid array that's a whole bunch of

00:21:07,320 --> 00:21:14,909
10k rpm two and a half inch drives 300

00:21:12,210 --> 00:21:17,460
gigabytes each and that can actually

00:21:14,909 --> 00:21:18,690
capture the full data set coming through

00:21:17,460 --> 00:21:22,379
the telescope so we're about an hour and

00:21:18,690 --> 00:21:24,779
a half we can capture that 7.8 gigabytes

00:21:22,379 --> 00:21:26,580
per second under these drives we can't

00:21:24,779 --> 00:21:28,559
send it back to any kind of archive in

00:21:26,580 --> 00:21:29,700
Perth of that rate so we capture data

00:21:28,559 --> 00:21:30,659
from an hour and a half and then we

00:21:29,700 --> 00:21:33,080
spend the next week

00:21:30,659 --> 00:21:35,429
trickling that data back to profile

00:21:33,080 --> 00:21:38,009
that's for what's called voltage capture

00:21:35,429 --> 00:21:39,869
that's for things where you need the

00:21:38,009 --> 00:21:41,399
transient information you need to see a

00:21:39,869 --> 00:21:43,379
pulsar flickering on and off for a

00:21:41,399 --> 00:21:46,320
hundred times a second all of the rest

00:21:43,379 --> 00:21:48,210
of the imaging we do averages it out

00:21:46,320 --> 00:21:51,119
so we average for at least half a second

00:21:48,210 --> 00:21:53,190
sometimes up to two seconds before we

00:21:51,119 --> 00:21:56,969
save the data to simply to reduce

00:21:53,190 --> 00:21:59,909
bandwidth so from there though that time

00:21:56,969 --> 00:22:02,309
series there's three thousand seventy

00:21:59,909 --> 00:22:04,859
two channels each 10 kilohertz wide go

00:22:02,309 --> 00:22:07,289
to the correlator itself this is the bit

00:22:04,859 --> 00:22:09,210
that actually does that delay and add

00:22:07,289 --> 00:22:10,799
delay and add which is actually a series

00:22:09,210 --> 00:22:13,619
of complex multiplying accumulated

00:22:10,799 --> 00:22:17,010
instructions in the GPUs so each of

00:22:13,619 --> 00:22:18,870
these IBM boxes has got twin G

00:22:17,010 --> 00:22:20,910
he is we were going to use one of them

00:22:18,870 --> 00:22:22,800
for the correlator and another one for

00:22:20,910 --> 00:22:25,470
real-time analysis but the guys writing

00:22:22,800 --> 00:22:27,150
the real-time analysis failed so we

00:22:25,470 --> 00:22:28,740
actually have one GPU spare which is

00:22:27,150 --> 00:22:30,990
kind of handy so each one of those

00:22:28,740 --> 00:22:33,300
servers processes data from all 128

00:22:30,990 --> 00:22:36,150
tiles but for only one of the course

00:22:33,300 --> 00:22:39,030
channels everything we do with this

00:22:36,150 --> 00:22:41,190
telescope entirely io limited we're

00:22:39,030 --> 00:22:42,870
limited by how fast we can get data into

00:22:41,190 --> 00:22:44,970
the box over the internet and we're

00:22:42,870 --> 00:22:46,890
limited by how fast we can get data over

00:22:44,970 --> 00:22:49,590
the PCI bus from the ethernet card into

00:22:46,890 --> 00:22:51,810
the GPU and then back out again so we

00:22:49,590 --> 00:22:53,430
don't do load sharing or vm's or

00:22:51,810 --> 00:22:58,560
anything like that we're operating on

00:22:53,430 --> 00:23:00,270
the bare Hardware so we've got a data

00:22:58,560 --> 00:23:02,010
base that defines what an observation is

00:23:00,270 --> 00:23:03,780
you know don't care about the details

00:23:02,010 --> 00:23:06,450
but it's a bunch of tables that define

00:23:03,780 --> 00:23:08,940
what we want the telescope to do at any

00:23:06,450 --> 00:23:11,040
given time in the future and we have a

00:23:08,940 --> 00:23:13,320
controller that looks at that data base

00:23:11,040 --> 00:23:14,940
and says well three seconds from now we

00:23:13,320 --> 00:23:17,250
want the telescope to be in this state I

00:23:14,940 --> 00:23:20,100
need to notify all the bits of hardware

00:23:17,250 --> 00:23:22,110
that at time X but there needs to be a

00:23:20,100 --> 00:23:23,820
change of state the bits of hardware get

00:23:22,110 --> 00:23:25,860
a notification that say alright at time

00:23:23,820 --> 00:23:27,540
X I need to change state they all have

00:23:25,860 --> 00:23:31,830
accurate clocks and they all change

00:23:27,540 --> 00:23:34,590
State at the right time hopefully so

00:23:31,830 --> 00:23:36,060
observation control the database

00:23:34,590 --> 00:23:37,740
contains the schedule and it also

00:23:36,060 --> 00:23:39,600
contains a bunch of information about

00:23:37,740 --> 00:23:40,830
how the telescope is wired which tiles

00:23:39,600 --> 00:23:41,850
connection to which receiver is

00:23:40,830 --> 00:23:43,950
connected to which input on the

00:23:41,850 --> 00:23:46,620
correlator we have an observation

00:23:43,950 --> 00:23:49,410
controller another legacy piece written

00:23:46,620 --> 00:23:52,110
in Java that talks of the receivers via

00:23:49,410 --> 00:23:53,730
XML of a TCP that is the only thing it

00:23:52,110 --> 00:23:56,600
talks to all of the other bits of

00:23:53,730 --> 00:24:00,240
hardware that have come along since 20

00:23:56,600 --> 00:24:03,930
2008 are using a parallel version called

00:24:00,240 --> 00:24:07,710
PI controller that I wrote that uses PI

00:24:03,930 --> 00:24:10,380
Rho instead of XML over TCP so all of

00:24:07,710 --> 00:24:11,910
the receivers are commanded just change

00:24:10,380 --> 00:24:13,320
state at a particular instant when they

00:24:11,910 --> 00:24:16,080
did instead arrives they change state

00:24:13,320 --> 00:24:18,690
they chair they they send their status

00:24:16,080 --> 00:24:20,550
back to another demon in Python which

00:24:18,690 --> 00:24:22,080
sort of integrates at all and writes

00:24:20,550 --> 00:24:24,150
status in the database so we know not

00:24:22,080 --> 00:24:25,680
only what we wanted the telescope to do

00:24:24,150 --> 00:24:29,010
at a particular time but what it

00:24:25,680 --> 00:24:30,480
actually did the the hardware control

00:24:29,010 --> 00:24:30,900
this is what controls what actually

00:24:30,480 --> 00:24:32,670
takes the

00:24:30,900 --> 00:24:36,150
data we also need to control the data

00:24:32,670 --> 00:24:40,410
flow it sends a message via thrift to a

00:24:36,150 --> 00:24:44,250
single demon running on a VM in Python

00:24:40,410 --> 00:24:48,630
and that splitter spreads it out again

00:24:44,250 --> 00:24:51,150
thrift to 16 different demons running on

00:24:48,630 --> 00:24:53,460
the Cisco boxes and 24 demons running on

00:24:51,150 --> 00:24:56,040
the dealer and the IBM boxes and those

00:24:53,460 --> 00:24:58,350
demons control the actual data analysis

00:24:56,040 --> 00:25:00,660
software so the data analysis software

00:24:58,350 --> 00:25:04,140
that actually takes this massive data

00:25:00,660 --> 00:25:07,230
pipe are written in C and CUDA and it's

00:25:04,140 --> 00:25:10,980
the Python code that sort of twiddles

00:25:07,230 --> 00:25:13,350
the knobs and aims the firehose so your

00:25:10,980 --> 00:25:15,600
Cisco boxes take this massive data pipe

00:25:13,350 --> 00:25:18,120
in you have a many-to-many relations

00:25:15,600 --> 00:25:20,490
were a few tiles worth of data for all

00:25:18,120 --> 00:25:23,610
of the channels is distributed to each

00:25:20,490 --> 00:25:25,650
channel it's correct it's a distributor

00:25:23,610 --> 00:25:27,000
to the right IB IB inbox channel two

00:25:25,650 --> 00:25:28,440
zeros could a channel one is connect

00:25:27,000 --> 00:25:30,780
directly here channel two is directed

00:25:28,440 --> 00:25:34,560
here and so on that data pipeline then

00:25:30,780 --> 00:25:35,790
gets aggregated and dumped to the posi

00:25:34,560 --> 00:25:40,410
supercomputing Center where it's

00:25:35,790 --> 00:25:43,410
archived on tape so the Python code

00:25:40,410 --> 00:25:45,540
glues it all together the research is

00:25:43,410 --> 00:25:48,840
doing the actual analysis on the output

00:25:45,540 --> 00:25:51,330
use Python as well they use a package

00:25:48,840 --> 00:25:54,090
called Casa which is again a massive

00:25:51,330 --> 00:25:57,540
quantity of low-level analysis code to

00:25:54,090 --> 00:25:59,850
do the imaging but the actual user

00:25:57,540 --> 00:26:02,580
interface they're sitting at is a Python

00:25:59,850 --> 00:26:04,830
command line and what the MWA is

00:26:02,580 --> 00:26:07,250
actually done is let us go from this

00:26:04,830 --> 00:26:12,930
this is what the radio sky looked like

00:26:07,250 --> 00:26:14,940
up until 2014 2015 when the MWA data

00:26:12,930 --> 00:26:17,010
first got released this is a patch of

00:26:14,940 --> 00:26:19,440
the southern sky you can see a dot here

00:26:17,010 --> 00:26:21,420
which is a bright radio galaxy and you

00:26:19,440 --> 00:26:22,710
get the idea that there might be some

00:26:21,420 --> 00:26:26,250
other sources out there but it's not

00:26:22,710 --> 00:26:29,790
clear what they are this is the MWA data

00:26:26,250 --> 00:26:31,560
for that same region sky each one of

00:26:29,790 --> 00:26:33,870
those dots is a galaxy radio telescopes

00:26:31,560 --> 00:26:35,640
don't see stars they see galaxies so

00:26:33,870 --> 00:26:38,420
each one of those dots is a galaxy and

00:26:35,640 --> 00:26:41,220
that it's produced that data over

00:26:38,420 --> 00:26:42,990
three-quarters of the sky as well as

00:26:41,220 --> 00:26:44,280
much more detailed in-depth looks of

00:26:42,990 --> 00:26:45,690
particular bits of it for

00:26:44,280 --> 00:26:48,390
different studies as the results of a

00:26:45,690 --> 00:26:51,980
the survey so that's what we've been

00:26:48,390 --> 00:26:51,980
doing and it's lots and lots of fun

00:26:59,360 --> 00:27:09,660
thank you are there any questions you

00:27:07,440 --> 00:27:11,700
mentioned that using SQL is a really bad

00:27:09,660 --> 00:27:14,280
way to string data that was my interest

00:27:11,700 --> 00:27:16,680
what do you use to stream your data to

00:27:14,280 --> 00:27:18,840
stream it it's all UDP after we get past

00:27:16,680 --> 00:27:21,450
the horrible Xilinx custom protocol we

00:27:18,840 --> 00:27:24,060
use UDP we don't have the bandwidth to

00:27:21,450 --> 00:27:25,560
use TCP because the data is gone by the

00:27:24,060 --> 00:27:27,570
time you realize the next stage doesn't

00:27:25,560 --> 00:27:28,920
have it so we just dream UDP packets and

00:27:27,570 --> 00:27:33,480
in practice we don't lose any when it's

00:27:28,920 --> 00:27:36,570
when it's running a few years ago I went

00:27:33,480 --> 00:27:39,660
to a scientific Python conference and

00:27:36,570 --> 00:27:41,490
the one of the main themes there was was

00:27:39,660 --> 00:27:44,970
reproducibility so I'm just wondering

00:27:41,490 --> 00:27:48,420
whether your researchers published their

00:27:44,970 --> 00:27:52,460
code as part of the research publication

00:27:48,420 --> 00:27:55,890
and who actually has the ability to

00:27:52,460 --> 00:28:01,770
actually do reviews of that code for

00:27:55,890 --> 00:28:05,540
publication that is certainly published

00:28:01,770 --> 00:28:07,860
and open source the code that actually

00:28:05,540 --> 00:28:09,840
reduces the data on the telescope is

00:28:07,860 --> 00:28:11,670
also specific to the hardware that

00:28:09,840 --> 00:28:13,470
there's no real point in publishing it

00:28:11,670 --> 00:28:15,810
because it only runs on the set of

00:28:13,470 --> 00:28:17,610
hardware that we've actually built if

00:28:15,810 --> 00:28:18,930
anybody was interested in we'd give it

00:28:17,610 --> 00:28:24,150
to them but we haven't made it open

00:28:18,930 --> 00:28:26,420
source and he just logistics question

00:28:24,150 --> 00:28:28,590
how do you get their hard drives back oh

00:28:26,420 --> 00:28:31,380
wait we don't trickle that we don't send

00:28:28,590 --> 00:28:32,490
the hard drives back we record seven out

00:28:31,380 --> 00:28:34,170
of seven or eight gigabytes worth of

00:28:32,490 --> 00:28:36,270
data and then we pipe it over the ten

00:28:34,170 --> 00:28:37,470
gigabit links slowly so the hard drives

00:28:36,270 --> 00:28:39,450
stay in the racks we haven't been

00:28:37,470 --> 00:28:41,840
shipping hard drives around for four or

00:28:39,450 --> 00:28:41,840
five years

00:28:42,659 --> 00:28:48,070
I've got a two-part question firstly

00:28:45,700 --> 00:28:50,350
what do you use D what does the CUDA

00:28:48,070 --> 00:28:52,600
code do specifically and secondly is

00:28:50,350 --> 00:28:54,519
that handcrafted or the auto-generated

00:28:52,600 --> 00:28:59,919
it was actually written by Nvidia it's

00:28:54,519 --> 00:29:02,380
called the X X GPU radio interferometry

00:28:59,919 --> 00:29:05,559
correlation engine Nvidia wrote the

00:29:02,380 --> 00:29:07,470
actual CUDA kernel and then a guy Curtin

00:29:05,559 --> 00:29:09,970
turned that into an actual application

00:29:07,470 --> 00:29:11,380
so the the CUDA stuff is not something

00:29:09,970 --> 00:29:13,809
I've ever got involved with another guy

00:29:11,380 --> 00:29:16,649
that crafted the Nvidia kernel is now

00:29:13,809 --> 00:29:19,929
left Curtin so it's kind of a black box

00:29:16,649 --> 00:29:22,000
okay okay I don't think I've ever been

00:29:19,929 --> 00:29:26,230
so at this point to go to lunch but it's

00:29:22,000 --> 00:29:27,540
time so so yeah thank you thank you once

00:29:26,230 --> 00:29:33,940
again

00:29:27,540 --> 00:29:33,940

YouTube URL: https://www.youtube.com/watch?v=QKtXVpGwx3A


