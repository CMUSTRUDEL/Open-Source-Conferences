Title: MicroPython for ESP32
Publication date: 2017-08-04
Playlist: Pycon Australia 2017
Description: 
	Nick Moore

http://2017.pycon-au.org/schedule/presentation/67/

#pyconau

This talk was given at PyCon Australia 2017 which was held from 3-8 August, 2017 in Melbourne, Victoria.

PyCon Australia is the national conference for users of the Python Programming Language. In August 2017, we're returning to Melbourne, bringing together students, enthusiasts, and professionals with a love of Python from around Australia, and from all over the World. 

August 3-8 2017, Melbourne, Victoria

Python, PyCon, PyConAU
Captions: 
	00:00:00,030 --> 00:00:05,400
last session prior to the lunch and so

00:00:03,330 --> 00:00:09,120
I'm happy to introduce Nick Moore he's a

00:00:05,400 --> 00:00:14,570
contributor of micro Python ESP 32 and

00:00:09,120 --> 00:00:14,570
that's a stock today welcome Nick and

00:00:16,560 --> 00:00:22,769
[Applause]

00:00:20,390 --> 00:00:25,920
thanks everyone this this is indeed the

00:00:22,769 --> 00:00:27,359
coveted just before lunch slot so if any

00:00:25,920 --> 00:00:29,400
of you feel yourself kind of slowly

00:00:27,359 --> 00:00:32,820
slumping over I won't take it personally

00:00:29,400 --> 00:00:34,739
it's the way these things go so I'm here

00:00:32,820 --> 00:00:38,460
to talk about the ESP 32 port of micro

00:00:34,739 --> 00:00:41,430
Python we've we've talked about micro

00:00:38,460 --> 00:00:43,559
Python as a project overall from Damien

00:00:41,430 --> 00:00:44,760
talked about some specific application

00:00:43,559 --> 00:00:49,530
of micro Python is a great way to

00:00:44,760 --> 00:00:51,539
prototype stuff from from Anna and I'm

00:00:49,530 --> 00:00:53,280
kind of talking about this ASP 32 port

00:00:51,539 --> 00:00:54,360
which I'm really really excited about so

00:00:53,280 --> 00:00:57,690
it's great to be able to come and talk

00:00:54,360 --> 00:00:59,489
about it to you there's some background

00:00:57,690 --> 00:01:01,020
about micro Python but it's probably not

00:00:59,489 --> 00:01:03,180
all that necessary since we've already

00:01:01,020 --> 00:01:04,199
kind of covered that fairly well but for

00:01:03,180 --> 00:01:07,770
anyone who wasn't here before

00:01:04,199 --> 00:01:10,110
it's a reimplementation of Python I'd

00:01:07,770 --> 00:01:12,630
say it's a Python because it's very much

00:01:10,110 --> 00:01:13,920
like all the other pythons and if you

00:01:12,630 --> 00:01:16,680
know how to program Python you know how

00:01:13,920 --> 00:01:19,439
to program micro Python it runs on small

00:01:16,680 --> 00:01:21,030
controller boards of various kinds

00:01:19,439 --> 00:01:25,590
including the PI board and the micro a

00:01:21,030 --> 00:01:27,240
bit and these esp8266 systems on a chip

00:01:25,590 --> 00:01:31,970
that have become very popular recently

00:01:27,240 --> 00:01:36,240
and now it's got a port to the asp 32

00:01:31,970 --> 00:01:37,619
what are those chips an esp8266 which

00:01:36,240 --> 00:01:41,340
you can't really see because it's all

00:01:37,619 --> 00:01:44,070
pretty horrible is a small system on a

00:01:41,340 --> 00:01:45,299
chip featuring onboard Wi-Fi and various

00:01:44,070 --> 00:01:50,610
other peripherals

00:01:45,299 --> 00:01:52,079
they kind of first actually before I get

00:01:50,610 --> 00:01:54,780
onto that they made by company called

00:01:52,079 --> 00:01:59,640
espresso who are a fabulous manufacturer

00:01:54,780 --> 00:02:01,170
I think the thing that makes espresso

00:01:59,640 --> 00:02:02,100
particularly interesting is they're one

00:02:01,170 --> 00:02:04,290
of the first of the Chinese

00:02:02,100 --> 00:02:05,759
manufacturers to really embrace the open

00:02:04,290 --> 00:02:07,320
source world they're very active in an

00:02:05,759 --> 00:02:08,489
open source community they're very

00:02:07,320 --> 00:02:11,039
supportive of our open source

00:02:08,489 --> 00:02:12,160
development efforts and that's really

00:02:11,039 --> 00:02:14,650
great and I

00:02:12,160 --> 00:02:15,700
I think that's been a great advantage

00:02:14,650 --> 00:02:18,910
for them as well

00:02:15,700 --> 00:02:20,590
the 82 66 became a real enthusiasts

00:02:18,910 --> 00:02:22,360
dream partly because it's very powerful

00:02:20,590 --> 00:02:26,800
thought it is partly cuz you could get

00:02:22,360 --> 00:02:27,970
them for like $2 and the companies

00:02:26,800 --> 00:02:30,250
learned a lot out of that they've taken

00:02:27,970 --> 00:02:32,050
a lot of inspiration from the things

00:02:30,250 --> 00:02:33,910
people have done with 80 to 60 sixes

00:02:32,050 --> 00:02:35,980
many of them fairly silly but

00:02:33,910 --> 00:02:37,150
nonetheless people had a lot of fun with

00:02:35,980 --> 00:02:38,320
them people have tried a lot of things

00:02:37,150 --> 00:02:40,090
people have put a lot of interesting

00:02:38,320 --> 00:02:42,010
stuff together and the company has been

00:02:40,090 --> 00:02:46,390
able to learn from that and combine a

00:02:42,010 --> 00:02:49,690
lot of that knowledge into the ESP 32 so

00:02:46,390 --> 00:02:55,750
as I mentioned before the age of 66 came

00:02:49,690 --> 00:02:57,750
to prominence as a Wi-Fi accessory or

00:02:55,750 --> 00:03:01,120
Arduinos and things like that

00:02:57,750 --> 00:03:02,980
until somebody looking at the spec

00:03:01,120 --> 00:03:04,600
sheets realized it was well several

00:03:02,980 --> 00:03:06,670
times as powerful as the Arduino it was

00:03:04,600 --> 00:03:08,650
helping out and that this relationship

00:03:06,670 --> 00:03:10,390
seemed a little silly and that perhaps

00:03:08,650 --> 00:03:13,150
we should just develop directly for the

00:03:10,390 --> 00:03:17,920
80 to 66 instead it's got a reasonably

00:03:13,150 --> 00:03:20,050
nice sea based SDK it's not that hard to

00:03:17,920 --> 00:03:23,080
get started in but there is a bit of a

00:03:20,050 --> 00:03:26,709
barrier to entry there and thankfully

00:03:23,080 --> 00:03:30,310
someone Damian ported micro Python

00:03:26,709 --> 00:03:31,840
across to it I discovered this I just

00:03:30,310 --> 00:03:33,850
started developing some stuff for 80 to

00:03:31,840 --> 00:03:36,850
66 I got really fired up about it after

00:03:33,850 --> 00:03:39,250
a Linux conf geelong I think it was

00:03:36,850 --> 00:03:42,790
they're really excited about this whole

00:03:39,250 --> 00:03:46,030
80 to 66 chip and writing see again and

00:03:42,790 --> 00:03:48,459
I hadn't written C in ages and just as

00:03:46,030 --> 00:03:50,410
the novelty and excitement of writing C

00:03:48,459 --> 00:03:53,200
again was starting to wear off micro

00:03:50,410 --> 00:03:54,640
Python came off so I lept upon micro

00:03:53,200 --> 00:03:57,880
Python and went this is the coolest

00:03:54,640 --> 00:03:59,440
thing ever and I got more into it I got

00:03:57,880 --> 00:04:01,750
more into it I got really excited about

00:03:59,440 --> 00:04:03,700
it and then I started working on it

00:04:01,750 --> 00:04:05,920
instead of just with it and then I

00:04:03,700 --> 00:04:10,000
started writing C again to work and so

00:04:05,920 --> 00:04:12,250
the cycle continues but never mind so

00:04:10,000 --> 00:04:15,850
following up on the 80 to 66 there's now

00:04:12,250 --> 00:04:17,709
the ASP 32 as I said before it's taken a

00:04:15,850 --> 00:04:19,750
lot of inspiration from what people have

00:04:17,709 --> 00:04:22,240
done it's more powerful again there's

00:04:19,750 --> 00:04:24,430
two CPU cores instead of one CPU core

00:04:22,240 --> 00:04:25,780
there's an ultra-low power processor

00:04:24,430 --> 00:04:28,930
which is a really cool little

00:04:25,780 --> 00:04:31,389
sorry that's really just like a very

00:04:28,930 --> 00:04:33,010
small very slow CPU that's just got

00:04:31,389 --> 00:04:34,180
enough power to wake up the other CPUs

00:04:33,010 --> 00:04:36,160
if something interesting is happening

00:04:34,180 --> 00:04:39,400
and if you're running on a battery

00:04:36,160 --> 00:04:41,230
that's a really important thing runs a

00:04:39,400 --> 00:04:42,940
slightly faster clock rate most

00:04:41,230 --> 00:04:46,150
importantly to us it's got a heap more

00:04:42,940 --> 00:04:52,350
Ram 520 K does not sound like a great

00:04:46,150 --> 00:04:56,020
amount of RAM to a modern developer I

00:04:52,350 --> 00:04:57,340
installed some software yesterday to do

00:04:56,020 --> 00:05:01,270
the machine learning things that

00:04:57,340 --> 00:05:02,980
downloaded I wasn't and a half a

00:05:01,270 --> 00:05:07,990
terabyte or something of data onto my

00:05:02,980 --> 00:05:11,110
laptop just to install but you it's

00:05:07,990 --> 00:05:14,080
enough to be usable for the Python for

00:05:11,110 --> 00:05:17,440
micro Python the 160k headroom on the

00:05:14,080 --> 00:05:19,270
ADC 66 he's an is plenty enough to run

00:05:17,440 --> 00:05:21,150
micro Python but your applications tend

00:05:19,270 --> 00:05:23,800
to bump into that limit fairly easily

00:05:21,150 --> 00:05:25,360
the 520 K gives us a bit of bit of

00:05:23,800 --> 00:05:26,639
breathing room but also got a bigger

00:05:25,360 --> 00:05:29,290
flash which is really nice

00:05:26,639 --> 00:05:31,690
these devices are much less powerful and

00:05:29,290 --> 00:05:33,100
something like an r pi 0 w which is the

00:05:31,690 --> 00:05:35,550
next sort of thing up that you might be

00:05:33,100 --> 00:05:37,990
thinking of that's the wireless our pi 0

00:05:35,550 --> 00:05:39,729
that's a much more powerful cpu running

00:05:37,990 --> 00:05:41,800
at a faster rate it's got a lot more

00:05:39,729 --> 00:05:44,080
memory it's got a lot more ability to

00:05:41,800 --> 00:05:46,120
expand with with flash and things like

00:05:44,080 --> 00:05:47,229
that but these provide a little middle

00:05:46,120 --> 00:05:48,850
ground it's an interesting market

00:05:47,229 --> 00:05:52,419
segment that's kind of opened up between

00:05:48,850 --> 00:05:57,039
a bit sort of Arduino AVR world and that

00:05:52,419 --> 00:05:58,479
PI world the 32 is very interesting

00:05:57,039 --> 00:06:02,100
because it features as well as the Wi-Fi

00:05:58,479 --> 00:06:04,300
that you know about it's got Bluetooth

00:06:02,100 --> 00:06:06,430
which is really handy a lot of things

00:06:04,300 --> 00:06:08,260
they say speak ble of various kind is

00:06:06,430 --> 00:06:10,479
great for talking to mobile devices and

00:06:08,260 --> 00:06:13,300
other senses and things like that it's

00:06:10,479 --> 00:06:16,000
got more IO lines than the ad 266 which

00:06:13,300 --> 00:06:18,669
is really handy it's got more than one

00:06:16,000 --> 00:06:22,150
analog input as Anna mentioned there's

00:06:18,669 --> 00:06:23,229
only one analog input on the 80 266

00:06:22,150 --> 00:06:27,820
which you can get a little bit annoying

00:06:23,229 --> 00:06:28,930
at times the SP 32 you can configure

00:06:27,820 --> 00:06:30,550
like eight of them and you can actually

00:06:28,930 --> 00:06:34,390
change them between pins which is kind

00:06:30,550 --> 00:06:37,419
of cool it's also got a digital analog

00:06:34,390 --> 00:06:39,370
converter which is kind of handy pulse

00:06:37,419 --> 00:06:40,870
width modulation on various pins

00:06:39,370 --> 00:06:42,820
they've done a really interesting thing

00:06:40,870 --> 00:06:44,860
they've built a capacitive touch sensing

00:06:42,820 --> 00:06:46,810
circuit into the thing and so there's

00:06:44,860 --> 00:06:49,990
eight capacitive touch sensors so if

00:06:46,810 --> 00:06:51,880
your project wants to have a touch

00:06:49,990 --> 00:06:53,350
interface rather than a button interface

00:06:51,880 --> 00:06:55,030
it's really easy you don't need any

00:06:53,350 --> 00:06:58,660
external components just a piece of

00:06:55,030 --> 00:07:01,690
copper which is a really good feature

00:06:58,660 --> 00:07:02,740
it's a really interesting it tells you

00:07:01,690 --> 00:07:04,389
something really interesting about their

00:07:02,740 --> 00:07:07,000
approach this may not be the cheapest

00:07:04,389 --> 00:07:10,720
system-on-a-chip out there but if you

00:07:07,000 --> 00:07:12,250
need no other chips on the board they

00:07:10,720 --> 00:07:14,620
can still compete so it's a really

00:07:12,250 --> 00:07:16,419
interesting little way of thinking about

00:07:14,620 --> 00:07:19,360
it and similarly there's that ultra low

00:07:16,419 --> 00:07:20,979
pro power processor and there's even

00:07:19,360 --> 00:07:22,990
things like there's a Hall effect sensor

00:07:20,979 --> 00:07:26,130
built into the chip I think that's

00:07:22,990 --> 00:07:28,479
pretty cool very few people need it

00:07:26,130 --> 00:07:30,100
however it's there it's easy to make

00:07:28,479 --> 00:07:32,500
it's just another piece of silicon on

00:07:30,100 --> 00:07:34,780
the die if your application does for

00:07:32,500 --> 00:07:37,210
some reason need a high current

00:07:34,780 --> 00:07:39,340
measurement device you can just lay your

00:07:37,210 --> 00:07:41,229
board out so that the processor has the

00:07:39,340 --> 00:07:42,820
power line running right past it and

00:07:41,229 --> 00:07:45,099
you'll see a signal on that Hall effect

00:07:42,820 --> 00:07:49,300
sensor that's kind of cool one less

00:07:45,099 --> 00:07:51,789
component again a group of Russians

00:07:49,300 --> 00:07:54,789
called zip tie bars are very good at

00:07:51,789 --> 00:07:57,010
boiling chips in acid and taking photos

00:07:54,789 --> 00:08:01,139
of them under a microscope so this is

00:07:57,010 --> 00:08:01,139
actually a picture of a D capped SP 32

00:08:01,260 --> 00:08:07,360
gives you some idea of just how crazy

00:08:04,990 --> 00:08:09,340
the architecture of these chips is if

00:08:07,360 --> 00:08:11,800
you zoom in on that top corner there

00:08:09,340 --> 00:08:14,410
you'll actually see the circuitry of

00:08:11,800 --> 00:08:16,930
this thing the coils and stuff to make a

00:08:14,410 --> 00:08:18,220
hardware radio I think that's quite

00:08:16,930 --> 00:08:20,380
fascinating that you can actually do

00:08:18,220 --> 00:08:21,970
this you can make coils and wiring and

00:08:20,380 --> 00:08:24,160
circuits out of silicon that are right

00:08:21,970 --> 00:08:27,310
there on the die and it's actually quite

00:08:24,160 --> 00:08:29,229
beautiful in a strange and know-it-all

00:08:27,310 --> 00:08:31,090
it reminds me of maps in those old games

00:08:29,229 --> 00:08:33,610
like quake and things like that with the

00:08:31,090 --> 00:08:35,289
circles and paths and all that stuff

00:08:33,610 --> 00:08:38,650
it's really amazing that this is a thing

00:08:35,289 --> 00:08:40,959
we can do these days I think you

00:08:38,650 --> 00:08:42,610
normally wouldn't buy it as a individual

00:08:40,959 --> 00:08:44,620
discrete little piece of silicon because

00:08:42,610 --> 00:08:46,450
frankly the pins are far too small and

00:08:44,620 --> 00:08:48,160
you can't even see them but they're

00:08:46,450 --> 00:08:50,500
available as these sort of modules which

00:08:48,160 --> 00:08:51,100
are much easier to solder there on a

00:08:50,500 --> 00:08:52,720
twin

00:08:51,100 --> 00:08:54,639
you think sort of pitch around the edge

00:08:52,720 --> 00:08:59,470
so you can actually hand solder them if

00:08:54,639 --> 00:09:01,389
you work at it and they're quite a handy

00:08:59,470 --> 00:09:03,459
little chip that Google RF screen the

00:09:01,389 --> 00:09:05,079
tab on the top there is them built-in

00:09:03,459 --> 00:09:07,800
antenna so you don't even need to deal

00:09:05,079 --> 00:09:12,339
with anything that isn't like a digital

00:09:07,800 --> 00:09:14,740
3.3 volt line oh sorry

00:09:12,339 --> 00:09:18,639
and the the flash memory is under that

00:09:14,740 --> 00:09:20,050
little can as well so it's all it's all

00:09:18,639 --> 00:09:22,389
basically there for you use it's quite

00:09:20,050 --> 00:09:25,050
easy to work with that kind of thing if

00:09:22,389 --> 00:09:27,190
that seems also a little bit too hard to

00:09:25,050 --> 00:09:29,980
deal with in terms of solder and there

00:09:27,190 --> 00:09:31,660
are lots to these boards available from

00:09:29,980 --> 00:09:33,040
various manufacturers there's a sparkfun

00:09:31,660 --> 00:09:35,980
one there in the middle which has got a

00:09:33,040 --> 00:09:37,930
integrated battery controller the other

00:09:35,980 --> 00:09:39,699
ones there's Adafruit oh sorry that

00:09:37,930 --> 00:09:45,940
one's a dev kit see the other one is an

00:09:39,699 --> 00:09:49,089
Adafruit feather I should know that it's

00:09:45,940 --> 00:09:51,040
a tiny little letters no it doesn't one

00:09:49,089 --> 00:09:52,720
of their Hazara range maybe or something

00:09:51,040 --> 00:09:54,850
it's got an onboard battery controller

00:09:52,720 --> 00:09:56,199
as well the battery controllers as an

00:09:54,850 --> 00:09:58,060
aside a very very handy if you want to

00:09:56,199 --> 00:10:00,370
have some kind of portable device

00:09:58,060 --> 00:10:03,399
because it's something that's quite easy

00:10:00,370 --> 00:10:05,079
to get wrong so having a board that has

00:10:03,399 --> 00:10:09,399
that on there so you can just plug a

00:10:05,079 --> 00:10:10,509
lipo in it's really handy so they're

00:10:09,399 --> 00:10:12,250
really good and those are standard

00:10:10,509 --> 00:10:13,959
headers around the outside makes it very

00:10:12,250 --> 00:10:17,430
easy to get started on this stuff and

00:10:13,959 --> 00:10:17,430
prototype stuff together little wires

00:10:17,459 --> 00:10:21,250
all right so that's the module I don't

00:10:19,870 --> 00:10:22,540
just talk about community since we're

00:10:21,250 --> 00:10:24,100
here one of the things about conferences

00:10:22,540 --> 00:10:27,790
they're very much about the community

00:10:24,100 --> 00:10:28,720
and about having a community I think

00:10:27,790 --> 00:10:30,490
it's really important that we have a

00:10:28,720 --> 00:10:32,110
micro Python community that we have a

00:10:30,490 --> 00:10:35,139
Python community and a micro Python

00:10:32,110 --> 00:10:37,089
community within that and an ESP 32

00:10:35,139 --> 00:10:39,939
micro Python community within the micro

00:10:37,089 --> 00:10:42,519
Python community I noticed this news

00:10:39,939 --> 00:10:44,529
article the other day Intel launched

00:10:42,519 --> 00:10:47,259
with great fuss and excitement the

00:10:44,529 --> 00:10:48,399
Galileo platform and all of this stuff

00:10:47,259 --> 00:10:50,050
and it was going to take over the world

00:10:48,399 --> 00:10:51,790
of IOT and everything is going to be

00:10:50,050 --> 00:10:54,130
fantastic and lots of people have them

00:10:51,790 --> 00:10:56,589
and it's all going to be beautiful and

00:10:54,130 --> 00:11:00,880
there was no real community behind it

00:10:56,589 --> 00:11:02,290
and so whatever it was a year later when

00:11:00,880 --> 00:11:03,760
it hadn't really taken off and

00:11:02,290 --> 00:11:04,209
everyone's looking at their watch going

00:11:03,760 --> 00:11:05,589
out

00:11:04,209 --> 00:11:07,839
do anything cool with that man or add

00:11:05,589 --> 00:11:09,999
any cool they just shelved it just like

00:11:07,839 --> 00:11:12,519
that Bank so anyone who spent a lot of

00:11:09,999 --> 00:11:14,110
time and effort and stuff developing

00:11:12,519 --> 00:11:16,329
stuff while learning about that platform

00:11:14,110 --> 00:11:17,949
its kind of evaporated from under you

00:11:16,329 --> 00:11:20,110
which i think is really disappointing I

00:11:17,949 --> 00:11:20,980
mean it was a nice platform it's a it

00:11:20,110 --> 00:11:23,829
was a good idea

00:11:20,980 --> 00:11:29,110
but unless there's a community a single

00:11:23,829 --> 00:11:30,699
company can't push a platform along well

00:11:29,110 --> 00:11:33,519
I can for a while until I lose

00:11:30,699 --> 00:11:35,290
enthusiasm they can't make it a global

00:11:33,519 --> 00:11:36,879
thing so it needs to be more than that

00:11:35,290 --> 00:11:37,869
it needs to be a community of people and

00:11:36,879 --> 00:11:42,480
that's something I'm really trying to

00:11:37,869 --> 00:11:45,220
get going with micro Python as well so

00:11:42,480 --> 00:11:48,670
where are we at with micro Python so I

00:11:45,220 --> 00:11:57,369
talked here last year possibly this very

00:11:48,670 --> 00:12:00,939
room about esp8266 micro Python and

00:11:57,369 --> 00:12:02,800
there was a lot of fun and at the time

00:12:00,939 --> 00:12:05,709
there was for like much muttering about

00:12:02,800 --> 00:12:07,360
this new ASP 32 those modules actually

00:12:05,709 --> 00:12:11,559
finally started making it out onto the

00:12:07,360 --> 00:12:12,699
market in about November and then they

00:12:11,559 --> 00:12:14,079
promptly just appeared off the market

00:12:12,699 --> 00:12:16,269
again is every single one of them sold

00:12:14,079 --> 00:12:19,389
and then they appeared again here and

00:12:16,269 --> 00:12:21,160
there in dribs and drabs and everyone

00:12:19,389 --> 00:12:22,299
responded to this in the sensible way by

00:12:21,160 --> 00:12:23,619
ordering as many of them as they could

00:12:22,299 --> 00:12:26,189
possibly get hold off and then they

00:12:23,619 --> 00:12:28,899
immediately went out of stock again and

00:12:26,189 --> 00:12:31,629
finally I got hold of my first ones in

00:12:28,899 --> 00:12:34,569
November and we could start working on

00:12:31,629 --> 00:12:38,319
stuff Damien got hold of his as well

00:12:34,569 --> 00:12:41,799
apparently really because the initial

00:12:38,319 --> 00:12:45,629
ports dates back to December which is

00:12:41,799 --> 00:12:47,470
when ripple started to actually work I

00:12:45,629 --> 00:12:49,899
can actually I'm not very good with

00:12:47,470 --> 00:12:54,129
dates and times but I am pretty good at

00:12:49,899 --> 00:12:58,329
typing git log into terminal so but

00:12:54,129 --> 00:13:01,569
around December somewhere there and then

00:12:58,329 --> 00:13:03,490
I ended up coming across and doing some

00:13:01,569 --> 00:13:06,910
work on the project with Damien to get

00:13:03,490 --> 00:13:09,790
the Wi-Fi stuff going and

00:13:06,910 --> 00:13:12,070
and TCP sockets and some more support

00:13:09,790 --> 00:13:14,080
for other GPIO functions now and that

00:13:12,070 --> 00:13:15,760
work that initial work on this port I

00:13:14,080 --> 00:13:18,160
just like to thank micro brick for

00:13:15,760 --> 00:13:19,630
sponsoring that work they helped make

00:13:18,160 --> 00:13:24,040
that possible to get that off the ground

00:13:19,630 --> 00:13:25,420
as a another port started on ASP 32 they

00:13:24,040 --> 00:13:27,100
make a really cool little robot called

00:13:25,420 --> 00:13:28,570
the Edison which is pictured there that

00:13:27,100 --> 00:13:29,920
should a little educational robot thing

00:13:28,570 --> 00:13:31,170
so I just wanted to say thank you to

00:13:29,920 --> 00:13:35,140
them and give them a little bit of a

00:13:31,170 --> 00:13:38,200
thank you from there we went on and we

00:13:35,140 --> 00:13:40,260
actually finally admitted we were doing

00:13:38,200 --> 00:13:42,160
this thing and stuck it up on github

00:13:40,260 --> 00:13:43,840
which is great because I mean other

00:13:42,160 --> 00:13:47,320
people lept all over it and then I went

00:13:43,840 --> 00:13:49,540
down to limit offing Tazzy to kind of

00:13:47,320 --> 00:13:52,930
like you know launch it well it's a good

00:13:49,540 --> 00:13:54,790
excuse isn't it we went down there and

00:13:52,930 --> 00:13:57,400
at Loomis conf we had support from

00:13:54,790 --> 00:14:01,500
espresso to make a little board called

00:13:57,400 --> 00:14:05,710
an IO does which is this thing pictured

00:14:01,500 --> 00:14:07,480
which has a little OLED display and it

00:14:05,710 --> 00:14:11,710
has a little joystick and it has an ESP

00:14:07,480 --> 00:14:14,320
32 on top and all of that stuff and as

00:14:11,710 --> 00:14:17,860
I'm working up to my talk about how to

00:14:14,320 --> 00:14:21,040
develop C code for the SP 32 I got up on

00:14:17,860 --> 00:14:22,510
stage and said ìlook unfortunately we

00:14:21,040 --> 00:14:24,220
haven't actually got micro Python

00:14:22,510 --> 00:14:25,810
booting on the IO toss yet and so on and

00:14:24,220 --> 00:14:28,650
the care put up at the hand and said yes

00:14:25,810 --> 00:14:32,650
I have oh right okay open source

00:14:28,650 --> 00:14:34,120
excellent so we did indeed get that

00:14:32,650 --> 00:14:36,580
running on the IO test which was cool

00:14:34,120 --> 00:14:38,620
and Jaya who's probably around here some

00:14:36,580 --> 00:14:41,740
way I got working with the neopixels on

00:14:38,620 --> 00:14:43,000
the board and people added more stuff

00:14:41,740 --> 00:14:45,070
and suddenly we had a snowball rolling

00:14:43,000 --> 00:14:46,210
which is brilliant it's this community

00:14:45,070 --> 00:14:47,830
thing I'm talking about is that we've

00:14:46,210 --> 00:14:50,050
suddenly got multiple contributors it's

00:14:47,830 --> 00:14:51,580
not just one person or two people or

00:14:50,050 --> 00:14:53,470
three people pushing this thing along

00:14:51,580 --> 00:14:56,320
it starts snowballing so that's really

00:14:53,470 --> 00:14:59,820
exciting we went from software spi to

00:14:56,320 --> 00:15:02,620
hardware spi which was a great start

00:14:59,820 --> 00:15:04,960
other functions appeared someone said

00:15:02,620 --> 00:15:07,000
why is there no PWM and I said of course

00:15:04,960 --> 00:15:09,250
there's PWM I said no there isn't

00:15:07,000 --> 00:15:10,660
oh yeah I didn't write that after all I

00:15:09,250 --> 00:15:12,430
thought I had oops

00:15:10,660 --> 00:15:14,920
so someone implemented that which is

00:15:12,430 --> 00:15:16,450
great and evil ends here there you are

00:15:14,920 --> 00:15:19,290
support arrived so now you can talk to

00:15:16,450 --> 00:15:21,250
all three you arts on the board

00:15:19,290 --> 00:15:22,510
which is another thing that took me by

00:15:21,250 --> 00:15:25,630
surprise when I discovered I actually

00:15:22,510 --> 00:15:27,040
had three you arts it's kind of cool and

00:15:25,630 --> 00:15:28,300
other people are adding more support all

00:15:27,040 --> 00:15:29,350
the time I've been in a few names here

00:15:28,300 --> 00:15:34,510
there are many many many more

00:15:29,350 --> 00:15:36,250
contributors in the in the thing get log

00:15:34,510 --> 00:15:37,540
is your friend but I just want to do

00:15:36,250 --> 00:15:38,770
emphasize afect this is becoming a

00:15:37,540 --> 00:15:40,300
community thing this is becoming

00:15:38,770 --> 00:15:42,370
something that is bigger than just a

00:15:40,300 --> 00:15:49,360
couple of people and here we are at

00:15:42,370 --> 00:15:53,070
PyCon again what's in progress so the

00:15:49,360 --> 00:15:56,440
ESP 32 also got used on a badge at a

00:15:53,070 --> 00:16:01,210
conference in Caen Amsterdam I think or

00:15:56,440 --> 00:16:03,480
near Amsterdam anyway called sha and a

00:16:01,210 --> 00:16:05,920
whole bunch of people from that

00:16:03,480 --> 00:16:08,530
community have been putting a lot of

00:16:05,920 --> 00:16:11,830
effort in on things like Bluetooth le

00:16:08,530 --> 00:16:15,010
and I think the same people are involved

00:16:11,830 --> 00:16:17,950
in the deep sleep thing I can't remember

00:16:15,010 --> 00:16:19,210
now those are pull request numbers and

00:16:17,950 --> 00:16:22,360
those things are waiting to kinda get

00:16:19,210 --> 00:16:24,880
merged back into the main line of VSP 32

00:16:22,360 --> 00:16:27,520
micro Python but once that's working

00:16:24,880 --> 00:16:29,140
it'll support bluetooth LE it'll deeps

00:16:27,520 --> 00:16:30,820
be able to deep sleep so that you can

00:16:29,140 --> 00:16:34,680
round off batteries and it can wake up

00:16:30,820 --> 00:16:37,120
do some thinking go to sleep again

00:16:34,680 --> 00:16:40,330
there's the more sophisticated PWM

00:16:37,120 --> 00:16:41,920
control available on the chip one of the

00:16:40,330 --> 00:16:43,330
fun things about this is is that

00:16:41,920 --> 00:16:46,390
espresso for kind of doing a lot of

00:16:43,330 --> 00:16:49,120
their development of their SDK very

00:16:46,390 --> 00:16:51,970
publicly this is very unusual but

00:16:49,120 --> 00:16:55,510
they've released a very early SDK they

00:16:51,970 --> 00:16:57,280
call it an IDF IOT development framework

00:16:55,510 --> 00:16:59,290
they released it quite early with a lot

00:16:57,280 --> 00:17:01,230
of things missing and then they're

00:16:59,290 --> 00:17:03,160
slowly adding those things bit by bit

00:17:01,230 --> 00:17:06,459
which is a little challenging at times

00:17:03,160 --> 00:17:08,170
for us trying to keep up with with their

00:17:06,459 --> 00:17:10,180
development but it's really exciting as

00:17:08,170 --> 00:17:11,829
well because every now and then you'll

00:17:10,180 --> 00:17:15,579
discover a new piece of hardware is now

00:17:11,829 --> 00:17:16,959
available I we also need to have at some

00:17:15,579 --> 00:17:18,490
point some support for that ultra low

00:17:16,959 --> 00:17:20,050
power CPU because that's a really

00:17:18,490 --> 00:17:22,329
exciting piece of hardware anyone who

00:17:20,050 --> 00:17:23,290
wants to run stuff on batteries and a

00:17:22,329 --> 00:17:27,880
really exciting thing that's just

00:17:23,290 --> 00:17:30,310
suddenly become a thing recently is to

00:17:27,880 --> 00:17:32,010
attach more RAM to this thing so there's

00:17:30,310 --> 00:17:33,420
a new chip coming out from us

00:17:32,010 --> 00:17:36,380
a new module coming out from espresso

00:17:33,420 --> 00:17:42,180
soon which has got four megabytes of

00:17:36,380 --> 00:17:44,720
onboard ram serial Attached ram so it's

00:17:42,180 --> 00:17:50,550
just attached to the internal bus of the

00:17:44,720 --> 00:17:52,500
the module and I think it's really

00:17:50,550 --> 00:17:54,840
exciting can we make micro Python use

00:17:52,500 --> 00:17:56,520
this big slice of RAM you know if we've

00:17:54,840 --> 00:17:59,340
got more RAM available can Python use

00:17:56,520 --> 00:18:00,870
that and I've been sort of looking at it

00:17:59,340 --> 00:18:04,080
and poking gently at it and just before

00:18:00,870 --> 00:18:06,420
this talk googled it again and someone's

00:18:04,080 --> 00:18:08,790
in the meantime implement of it so

00:18:06,420 --> 00:18:11,910
that'll be really that's that's pretty

00:18:08,790 --> 00:18:13,530
amazing it's um something we have to now

00:18:11,910 --> 00:18:17,130
look at how to integrate that back into

00:18:13,530 --> 00:18:19,680
the main line of micro Python so as not

00:18:17,130 --> 00:18:20,730
to make it too much of a fork but it's

00:18:19,680 --> 00:18:24,630
really exciting that we can now it

00:18:20,730 --> 00:18:26,400
address that much more RAM and if you

00:18:24,630 --> 00:18:28,530
look at the dev kits and things like

00:18:26,400 --> 00:18:29,940
that a lot of dev kits have a pixel map

00:18:28,530 --> 00:18:32,310
display of one sort or another

00:18:29,940 --> 00:18:35,370
io does how to display the dev kit from

00:18:32,310 --> 00:18:41,220
espresso if has one the badges all tend

00:18:35,370 --> 00:18:42,510
to have maybe an ePaper display there it

00:18:41,220 --> 00:18:44,490
would help a lot to have a kind of

00:18:42,510 --> 00:18:45,900
standardized frame buffer approach that

00:18:44,490 --> 00:18:47,730
would work across multiple of those

00:18:45,900 --> 00:18:51,810
devices everyone doesn't have to

00:18:47,730 --> 00:18:53,400
reinvent how to do this every time it's

00:18:51,810 --> 00:18:54,990
probably a much lighter approach than

00:18:53,400 --> 00:18:57,420
you'd normally use for like a web tech

00:18:54,990 --> 00:18:59,130
or whatever but come up with something

00:18:57,420 --> 00:19:03,900
so those are all things that are kind of

00:18:59,130 --> 00:19:07,260
in progress at the moment so we've got

00:19:03,900 --> 00:19:10,080
coming up we've got a sprint signed up

00:19:07,260 --> 00:19:12,000
for Monday that's really exciting I've

00:19:10,080 --> 00:19:17,760
never actually kind of run a sprint

00:19:12,000 --> 00:19:20,220
before or participated in a PyCon sprint

00:19:17,760 --> 00:19:23,090
but I'm hoping it will let us achieve

00:19:20,220 --> 00:19:23,090
some really cool stuff

00:19:23,150 --> 00:19:27,150
expressive a very kindly provided some

00:19:25,440 --> 00:19:30,570
support for that there is a whole box

00:19:27,150 --> 00:19:34,320
full of SP 32 dev kits for people who

00:19:30,570 --> 00:19:35,580
can contribute at the sprint if you

00:19:34,320 --> 00:19:37,170
happen to have a sprint ticket for

00:19:35,580 --> 00:19:41,760
Monday please do come along it will be a

00:19:37,170 --> 00:19:43,950
hoot I think it's not just I mean micro

00:19:41,760 --> 00:19:46,010
Python itself is written in C so you

00:19:43,950 --> 00:19:51,450
need a fair bit of C programming

00:19:46,010 --> 00:19:53,640
ability to make much progress within the

00:19:51,450 --> 00:19:54,840
guts of micro Python but if you do have

00:19:53,640 --> 00:20:00,420
some seed background it's actually very

00:19:54,840 --> 00:20:01,680
very easy to work on so partly I guess

00:20:00,420 --> 00:20:03,450
because it's relatively recently

00:20:01,680 --> 00:20:05,220
implemented and it implementing quite a

00:20:03,450 --> 00:20:06,960
modern way and it's quite well

00:20:05,220 --> 00:20:09,150
documented internally and all of that

00:20:06,960 --> 00:20:11,190
sort of stuff and it's it's a nice code

00:20:09,150 --> 00:20:12,330
base to work with but the other thing is

00:20:11,190 --> 00:20:14,250
that there's a lot of work that still

00:20:12,330 --> 00:20:17,700
needs to be done on this platform in

00:20:14,250 --> 00:20:19,080
Python and a lot of work that needs to

00:20:17,700 --> 00:20:20,640
be feedback that needs to be done about

00:20:19,080 --> 00:20:23,010
how do we make this a better Python

00:20:20,640 --> 00:20:25,710
platform how do we keep our classes now

00:20:23,010 --> 00:20:29,430
libraries as pythonic as possible within

00:20:25,710 --> 00:20:30,780
the scope of micro Python so there is a

00:20:29,430 --> 00:20:33,120
definitely role for people who aren't

00:20:30,780 --> 00:20:35,520
see people as well within that sort of

00:20:33,120 --> 00:20:38,310
sprint and all of that and it'd be great

00:20:35,520 --> 00:20:40,980
to come and hang out and just you know

00:20:38,310 --> 00:20:42,840
get a chance to talk to each other about

00:20:40,980 --> 00:20:44,370
what we're interested in doing and so on

00:20:42,840 --> 00:20:46,470
and so forth

00:20:44,370 --> 00:20:50,130
Tim who is around here somewhere or

00:20:46,470 --> 00:20:54,300
another Oh up the back Tim hey Tim has

00:20:50,130 --> 00:20:55,590
also got an fpga board port of micro

00:20:54,300 --> 00:20:57,930
Python and he's interested in doing some

00:20:55,590 --> 00:21:00,090
work with on Monday that's basically

00:20:57,930 --> 00:21:02,430
running micro Python you know a little

00:21:00,090 --> 00:21:05,490
soft core within an FPGA and so there's

00:21:02,430 --> 00:21:07,560
a whole Python tool chain there that

00:21:05,490 --> 00:21:09,420
lets you configure the FPGA from Python

00:21:07,560 --> 00:21:12,180
and then program the actual running of

00:21:09,420 --> 00:21:14,460
the FPGA in python and so on as have

00:21:12,180 --> 00:21:16,440
well oh it's a really interesting effort

00:21:14,460 --> 00:21:18,840
I don't think Tim's talking about it

00:21:16,440 --> 00:21:21,540
this year but you talked about it at

00:21:18,840 --> 00:21:30,570
linux conf right i look up my timeline

00:21:21,540 --> 00:21:32,430
right right no bigger anyway there's a

00:21:30,570 --> 00:21:34,440
youtube video if i work out which one

00:21:32,430 --> 00:21:39,300
I'm talking about I'll post that link as

00:21:34,440 --> 00:21:43,070
well so there's that and the other thing

00:21:39,300 --> 00:21:46,200
I want to just mention is I'm running

00:21:43,070 --> 00:21:48,960
organizing a micro pathan meetup group

00:21:46,200 --> 00:21:51,390
here in Melbourne at connected community

00:21:48,960 --> 00:21:54,780
hacker space which is just opposite

00:21:51,390 --> 00:21:56,460
Swinburne that gives you a chance to

00:21:54,780 --> 00:21:58,100
come along and just meet up with some

00:21:56,460 --> 00:22:01,940
fellow enthusiasts

00:21:58,100 --> 00:22:04,400
and do some interesting kind of work

00:22:01,940 --> 00:22:07,090
it's very hands-on space there's machine

00:22:04,400 --> 00:22:09,380
tools there's things like that

00:22:07,090 --> 00:22:11,120
play around with hardware have a bit of

00:22:09,380 --> 00:22:12,710
an experiment get to know the platform

00:22:11,120 --> 00:22:14,929
not so useful for those of you out of

00:22:12,710 --> 00:22:18,100
state but for people who are around here

00:22:14,929 --> 00:22:20,900
if people are interested in running a

00:22:18,100 --> 00:22:24,080
similar thing anywhere will you happen

00:22:20,900 --> 00:22:26,450
to be from happy to help out with

00:22:24,080 --> 00:22:29,809
information about that stuff too and and

00:22:26,450 --> 00:22:30,110
help get things started elsewhere so

00:22:29,809 --> 00:22:33,409
cool

00:22:30,110 --> 00:22:35,240
that's about all I had to talk about in

00:22:33,409 --> 00:22:37,640
terms of this stuff does anyone have any

00:22:35,240 --> 00:22:50,659
questions about the ESP 32 port or about

00:22:37,640 --> 00:22:51,799
micro Python general thank you I might

00:22:50,659 --> 00:22:54,770
heard that there were some issues with

00:22:51,799 --> 00:22:56,240
the actual silicon in the ASP 32 in

00:22:54,770 --> 00:22:58,490
terms of some of the functionality is

00:22:56,240 --> 00:22:59,809
that I maybe you could comment on sort

00:22:58,490 --> 00:23:04,760
of just give an update in terms there's

00:22:59,809 --> 00:23:06,919
Rev one silicon out now so you could say

00:23:04,760 --> 00:23:09,559
that that would imply that there isn't a

00:23:06,919 --> 00:23:12,140
totally perfect singing River zero

00:23:09,559 --> 00:23:15,260
silicon I don't know specifically myself

00:23:12,140 --> 00:23:17,510
I haven't bumped into into the problems

00:23:15,260 --> 00:23:20,299
but then my my stuff is occupied a

00:23:17,510 --> 00:23:25,960
relatively small part of the silicon so

00:23:20,299 --> 00:23:25,960
I'm not sure yep

00:23:29,450 --> 00:23:34,640
Thank You Nick what's the development

00:23:32,300 --> 00:23:37,040
experience like on these chips

00:23:34,640 --> 00:23:40,340
I know it's G it's a GCC port but is

00:23:37,040 --> 00:23:44,960
there a good gdb interactive debugging

00:23:40,340 --> 00:23:49,750
things like that oh I've been strictly

00:23:44,960 --> 00:23:53,120
off in the world of print statements and

00:23:49,750 --> 00:23:54,260
logging via that via the serial port you

00:23:53,120 --> 00:23:58,820
can add to get those you arts working

00:23:54,260 --> 00:24:00,980
yeah so I haven't actually tried using

00:23:58,820 --> 00:24:04,070
gdb on it interestingly though the the

00:24:00,980 --> 00:24:05,750
dev kit J or whatever it's called not

00:24:04,070 --> 00:24:08,090
going to ever get to see little ones but

00:24:05,750 --> 00:24:12,230
the big ones have a jtag port and things

00:24:08,090 --> 00:24:14,180
like that on them so and I think I'm not

00:24:12,230 --> 00:24:17,960
100% sure but I think what's on there is

00:24:14,180 --> 00:24:21,410
so there's a jeweled USB to UART

00:24:17,960 --> 00:24:23,540
converter and one of them goes to the

00:24:21,410 --> 00:24:25,970
standard serial repple kind of port that

00:24:23,540 --> 00:24:27,290
we use and that you flash the chip

00:24:25,970 --> 00:24:29,420
through I think the other one actually

00:24:27,290 --> 00:24:31,250
goes through to the jtag port or

00:24:29,420 --> 00:24:32,930
something similar like that so there's

00:24:31,250 --> 00:24:37,550
some circuitry there that I don't yet

00:24:32,930 --> 00:24:40,580
understand that I think will let you do

00:24:37,550 --> 00:24:43,580
that debugging over USB rather than

00:24:40,580 --> 00:24:45,800
actually having to get out the you know

00:24:43,580 --> 00:24:50,840
old Xilinx JTAG cable or whatever you've

00:24:45,800 --> 00:24:53,000
got so far though I haven't bumped into

00:24:50,840 --> 00:24:55,670
too many things that aren't solvable

00:24:53,000 --> 00:24:58,280
that way maybe I've just been lucky I

00:24:55,670 --> 00:25:08,420
wanted to comment also those traces the

00:24:58,280 --> 00:25:10,820
silicon traces look like patterns thank

00:25:08,420 --> 00:25:16,710
you thank you

00:25:10,820 --> 00:25:16,710

YouTube URL: https://www.youtube.com/watch?v=6N1hNRDkm0o


