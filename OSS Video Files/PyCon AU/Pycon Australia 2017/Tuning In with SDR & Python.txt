Title: Tuning In with SDR & Python
Publication date: 2017-08-04
Playlist: Pycon Australia 2017
Description: 
	Jim Mussared

http://2017.pycon-au.org/schedule/presentation/66/

#pyconau

This talk was given at PyCon Australia 2017 which was held from 3-8 August, 2017 in Melbourne, Victoria.

PyCon Australia is the national conference for users of the Python Programming Language. In August 2017, we're returning to Melbourne, bringing together students, enthusiasts, and professionals with a love of Python from around Australia, and from all over the World. 

August 3-8 2017, Melbourne, Victoria

Python, PyCon, PyConAU
Captions: 
	00:00:00,000 --> 00:00:03,620
so I'll see what I can cover so this is

00:00:01,740 --> 00:00:06,120
a quite a difficult talk to give to a

00:00:03,620 --> 00:00:07,849
know nothing about the audience we'll go

00:00:06,120 --> 00:00:09,780
through that in a second but

00:00:07,849 --> 00:00:11,370
unfortunately to cover the Python things

00:00:09,780 --> 00:00:13,080
we have to cover a lot of theory first

00:00:11,370 --> 00:00:15,780
I'll try and keep that white and

00:00:13,080 --> 00:00:17,160
interesting but prepare for a little bit

00:00:15,780 --> 00:00:21,300
of not Python to start with

00:00:17,160 --> 00:00:22,740
unfortunately so yeah please contact me

00:00:21,300 --> 00:00:24,840
afterwards in particular if you have

00:00:22,740 --> 00:00:29,699
feedback or or ideas or suggestions on

00:00:24,840 --> 00:00:31,140
how to improve this talk how did I get

00:00:29,699 --> 00:00:32,520
interested in radio does anyone

00:00:31,140 --> 00:00:33,840
recognize this skipper and Sesame Street

00:00:32,520 --> 00:00:36,630
I think this is probably almost as old

00:00:33,840 --> 00:00:38,250
as I am but the Martians discovering the

00:00:36,630 --> 00:00:40,649
radio oh is amazing it makes me laugh

00:00:38,250 --> 00:00:42,750
but um so a question for the group who

00:00:40,649 --> 00:00:45,629
here has done some sort of radio stuff

00:00:42,750 --> 00:00:47,160
before maybe has a ham license or has

00:00:45,629 --> 00:00:48,600
played around with an SDR or something

00:00:47,160 --> 00:00:50,700
like that cool

00:00:48,600 --> 00:00:52,890
who can characterize a low-pass filter

00:00:50,700 --> 00:00:55,050
from its poles and zeros in the Laplace

00:00:52,890 --> 00:00:56,430
tank domain okay that's really good

00:00:55,050 --> 00:00:58,460
because if that was all yes we'd all

00:00:56,430 --> 00:01:03,090
just go and have lunch or something so

00:00:58,460 --> 00:01:06,000
who can do a Fourier transform all of

00:01:03,090 --> 00:01:07,590
you you ears do this all the time but

00:01:06,000 --> 00:01:11,790
we're gonna talk about this and who

00:01:07,590 --> 00:01:14,960
drove here today nobody no tell me where

00:01:11,790 --> 00:01:17,130
you parked later we'll talk about that

00:01:14,960 --> 00:01:18,360
okay I don't have a ham radio license

00:01:17,130 --> 00:01:20,490
we're not gonna be doing anything like

00:01:18,360 --> 00:01:22,500
transmitting on the ham radio bands I

00:01:20,490 --> 00:01:25,049
can show you how to receive ham radio

00:01:22,500 --> 00:01:27,210
data the importantly a big part of radio

00:01:25,049 --> 00:01:29,460
is the rules of radio the licensing and

00:01:27,210 --> 00:01:32,130
spectrum and things like that I highly

00:01:29,460 --> 00:01:33,990
recommend the ham radio program I've

00:01:32,130 --> 00:01:35,729
actually read most of the books and I'm

00:01:33,990 --> 00:01:37,619
preparing to do the exam it is a

00:01:35,729 --> 00:01:39,750
tremendous way to learn the theory of

00:01:37,619 --> 00:01:41,100
radio even if your plan is to do digital

00:01:39,750 --> 00:01:43,259
transmissions Internet of Things kind of

00:01:41,100 --> 00:01:44,899
thing the ham radio for licensing

00:01:43,259 --> 00:01:47,100
program is really really interesting and

00:01:44,899 --> 00:01:51,329
some of the best resources I've seen on

00:01:47,100 --> 00:01:54,000
this ok so this talk is about SDR

00:01:51,329 --> 00:01:56,100
software-defined radio what is the

00:01:54,000 --> 00:01:58,950
software-defined radio unfortunately

00:01:56,100 --> 00:02:01,740
we're gonna have to go a bit deeper

00:01:58,950 --> 00:02:04,770
first what is radio but that's actually

00:02:01,740 --> 00:02:06,320
bit tricky - what is data will start

00:02:04,770 --> 00:02:09,539
from need one and we'll work our way up

00:02:06,320 --> 00:02:11,280
so in electronics we're familiar with

00:02:09,539 --> 00:02:12,750
transmitting data between devices we

00:02:11,280 --> 00:02:15,360
have serial links and

00:02:12,750 --> 00:02:18,150
headphone cables then speaker cables and

00:02:15,360 --> 00:02:20,130
hdmi cables and the way they work

00:02:18,150 --> 00:02:21,780
fundamentally is we set a voltage at one

00:02:20,130 --> 00:02:24,600
end and we receive that voltage is

00:02:21,780 --> 00:02:25,770
another end I'm be hand-wave here and

00:02:24,600 --> 00:02:29,400
there'll be a lot of hand waving in this

00:02:25,770 --> 00:02:31,650
talk but we can drive a drive one end

00:02:29,400 --> 00:02:33,780
read the other end and if we have a

00:02:31,650 --> 00:02:36,480
digital protocol we just come up with a

00:02:33,780 --> 00:02:38,490
standard we agree on both ends what our

00:02:36,480 --> 00:02:40,410
system is gonna be and so for example we

00:02:38,490 --> 00:02:42,420
might say a1 is 3.3 volts and a zero

00:02:40,410 --> 00:02:43,470
over zero volts and then we do clever

00:02:42,420 --> 00:02:45,570
things so that the other end can

00:02:43,470 --> 00:02:47,010
synchronize and and pick up on the

00:02:45,570 --> 00:02:48,570
signal and know when I'm transmitting a

00:02:47,010 --> 00:02:51,540
byte when I'm not transmitting your byte

00:02:48,570 --> 00:02:53,190
and things like that so whether you've

00:02:51,540 --> 00:02:56,220
used it directly or not but if anyone's

00:02:53,190 --> 00:02:58,440
used like the UART on a microcontroller

00:02:56,220 --> 00:02:59,880
or something like that that is a serial

00:02:58,440 --> 00:03:02,100
protocol that involves setting high and

00:02:59,880 --> 00:03:04,530
low voltages is start bits and stop bits

00:03:02,100 --> 00:03:06,510
for synchronization but ultimately we're

00:03:04,530 --> 00:03:09,840
transmitting bits by high voltage and

00:03:06,510 --> 00:03:12,540
low voltage spy and I squared C are just

00:03:09,840 --> 00:03:14,220
an extension on these same ideas and

00:03:12,540 --> 00:03:15,690
that's what it looks like on an

00:03:14,220 --> 00:03:18,540
oscilloscope if you put a trace on a

00:03:15,690 --> 00:03:20,310
serial data line either somewhere on

00:03:18,540 --> 00:03:21,959
your board or on a cable between your

00:03:20,310 --> 00:03:23,519
two boards or something like that you

00:03:21,959 --> 00:03:25,560
have highs and lows transmitted can

00:03:23,519 --> 00:03:26,730
correspond into ones and zeros and so

00:03:25,560 --> 00:03:30,510
what you see going on here is on the

00:03:26,730 --> 00:03:32,100
very left of the screen is the the rest

00:03:30,510 --> 00:03:34,890
after the previous byte

00:03:32,100 --> 00:03:37,470
we then toggle to low for a start and

00:03:34,890 --> 00:03:38,820
then we start the first byte is a 1 the

00:03:37,470 --> 00:03:40,769
first pitch stories are one then a bunch

00:03:38,820 --> 00:03:42,209
of zeros and then a couple of ones and

00:03:40,769 --> 00:03:44,549
then a zero and then we go back up to

00:03:42,209 --> 00:03:46,830
resting again the bits are in the wrong

00:03:44,549 --> 00:03:49,920
order but in the reverse order but this

00:03:46,830 --> 00:03:52,580
is six one in hex which is the letter A

00:03:49,920 --> 00:03:56,790
so that's what a looks like on the wire

00:03:52,580 --> 00:03:59,790
and this works really well fundamentally

00:03:56,790 --> 00:04:03,239
most of board to board communication is

00:03:59,790 --> 00:04:04,500
built on things like this and we call

00:04:03,239 --> 00:04:05,790
this baseband signaling we're

00:04:04,500 --> 00:04:07,350
transmitting at the same frequency as

00:04:05,790 --> 00:04:10,350
the underlying data the way we're trying

00:04:07,350 --> 00:04:12,150
we're transmitting so why can't I just

00:04:10,350 --> 00:04:15,630
do this and transmit gigabit down my

00:04:12,150 --> 00:04:16,979
telstra phone line unfortunately cables

00:04:15,630 --> 00:04:19,380
don't really work the way we hope they

00:04:16,979 --> 00:04:20,700
work we can't transmit poles and voltage

00:04:19,380 --> 00:04:21,989
pulses and expect to see those same

00:04:20,700 --> 00:04:25,110
bolts the voltage pulses at the other

00:04:21,989 --> 00:04:27,290
end and they're real real real

00:04:25,110 --> 00:04:30,449
electronics comes into

00:04:27,290 --> 00:04:31,979
so this is a talk about radio and one of

00:04:30,449 --> 00:04:33,389
the one of the the main things working

00:04:31,979 --> 00:04:35,940
at one of my tools will use a thing

00:04:33,389 --> 00:04:37,199
called good new radio it's a super

00:04:35,940 --> 00:04:39,330
sports program that has an incredible

00:04:37,199 --> 00:04:41,910
set of Python bindings on top and in

00:04:39,330 --> 00:04:43,919
particular has a very nice easy to use

00:04:41,910 --> 00:04:46,680
relatively easy to use flow chart tool

00:04:43,919 --> 00:04:48,630
that writes Python for us to to generate

00:04:46,680 --> 00:04:50,400
radio speakers now before we get into

00:04:48,630 --> 00:04:51,720
actually playing with the radio one of

00:04:50,400 --> 00:04:53,460
the amazing things that you can in radio

00:04:51,720 --> 00:04:59,639
can do is explore these fundamental

00:04:53,460 --> 00:05:01,440
concepts of signaling so gonna radio

00:04:59,639 --> 00:05:03,900
involves building flow diagrams where

00:05:01,440 --> 00:05:06,060
parts of our circuit flow into the next

00:05:03,900 --> 00:05:07,860
one and we connect them up our engine

00:05:06,060 --> 00:05:09,270
here means we're transmitting a series

00:05:07,860 --> 00:05:11,370
of floating-point numbers between stages

00:05:09,270 --> 00:05:13,229
and things like that so what I'm gonna

00:05:11,370 --> 00:05:14,940
do is I'm gonna simulate a serial data

00:05:13,229 --> 00:05:16,500
transmission by taking a noise source

00:05:14,940 --> 00:05:19,740
and Thresh holding it this will give us

00:05:16,500 --> 00:05:21,990
ones and zeros on the wire and then I'm

00:05:19,740 --> 00:05:23,340
gonna show what that looks like I'm

00:05:21,990 --> 00:05:26,340
gonna blow past field trip but this is a

00:05:23,340 --> 00:05:29,990
simulation of our not perfect wire and

00:05:26,340 --> 00:05:36,720
I'm gonna receive it at the other end so

00:05:29,990 --> 00:05:38,370
when I run this what I see is that our

00:05:36,720 --> 00:05:40,320
beautiful signal that had nice square

00:05:38,370 --> 00:05:42,389
edges and stuff got distorted into a not

00:05:40,320 --> 00:05:47,580
beautiful signal and the more and more

00:05:42,389 --> 00:05:51,900
that our wire distorts the signal the

00:05:47,580 --> 00:05:54,389
worse that gets until at some point it's

00:05:51,900 --> 00:05:56,370
barely recognizable at all now we can

00:05:54,389 --> 00:05:58,010
get into a bunch of the the maths here

00:05:56,370 --> 00:05:59,729
but there are limits about and

00:05:58,010 --> 00:06:01,620
characterizations and what and what

00:05:59,729 --> 00:06:03,030
limits you can transmit out but for a

00:06:01,620 --> 00:06:05,070
given wire there'll be some maximum

00:06:03,030 --> 00:06:08,280
limit that you can reliably get data

00:06:05,070 --> 00:06:10,320
through it so this is a great tool for

00:06:08,280 --> 00:06:11,430
playing around with the stuff when I was

00:06:10,320 --> 00:06:13,470
in university we learned this by the

00:06:11,430 --> 00:06:14,910
theory lots of math and formulas but

00:06:13,470 --> 00:06:16,199
visualizing this and looking at what the

00:06:14,910 --> 00:06:18,030
shape of the waveforms look like gives

00:06:16,199 --> 00:06:19,560
you a great idea of how these systems

00:06:18,030 --> 00:06:23,520
perform and we're going to do a lot of

00:06:19,560 --> 00:06:24,960
that so what's really going on here is

00:06:23,520 --> 00:06:26,520
wires don't like to be changed the

00:06:24,960 --> 00:06:31,289
voltage that it resists the change of

00:06:26,520 --> 00:06:33,990
voltage fundamentally what we need to

00:06:31,289 --> 00:06:37,440
understand is that if we think instead

00:06:33,990 --> 00:06:39,719
of instead of voltage changing we're

00:06:37,440 --> 00:06:40,969
transmitting oscillations through this

00:06:39,719 --> 00:06:42,829
wire

00:06:40,969 --> 00:06:46,699
an oscillation is represented as a sine

00:06:42,829 --> 00:06:49,309
wave so from from maths we have a

00:06:46,699 --> 00:06:51,469
function over time is a sine wave I'm

00:06:49,309 --> 00:06:54,499
with some frequency some amplitude and

00:06:51,469 --> 00:06:56,419
some phase offset so the frequency is

00:06:54,499 --> 00:06:58,249
how fast that sine wave oscillates the

00:06:56,419 --> 00:07:00,199
amplitude is how big that sine wave is

00:06:58,249 --> 00:07:03,649
and the phase is how much we shift it

00:07:00,199 --> 00:07:05,119
left and right relative to zero and this

00:07:03,649 --> 00:07:06,409
is the the most interesting thing that

00:07:05,119 --> 00:07:07,729
we're going to cover in this talk if you

00:07:06,409 --> 00:07:09,409
walk away from this type with nothing

00:07:07,729 --> 00:07:12,799
else and you didn't know this already

00:07:09,409 --> 00:07:15,139
that any signal in the time domain can

00:07:12,799 --> 00:07:17,299
be expressed instead as a linear sum of

00:07:15,139 --> 00:07:19,639
sine waves so if I take any arbitrary

00:07:17,299 --> 00:07:21,469
shape I can give you an equivalent set

00:07:19,639 --> 00:07:25,489
of sine waves that add together to that

00:07:21,469 --> 00:07:26,749
shape this is that this is the

00:07:25,489 --> 00:07:30,429
fundamental part of light under saying

00:07:26,749 --> 00:07:32,689
this is key to understanding radio and

00:07:30,429 --> 00:07:34,969
here's an example of a square wave

00:07:32,689 --> 00:07:36,499
that's actually made of sine waves so if

00:07:34,969 --> 00:07:38,419
I start with a low frequency sine wave

00:07:36,499 --> 00:07:40,399
and keep adding more and more sine waves

00:07:38,419 --> 00:07:42,379
to it what I actually end up with is a

00:07:40,399 --> 00:07:44,119
square wave and so you can imagine your

00:07:42,379 --> 00:07:46,249
digital signal actually being composed

00:07:44,119 --> 00:07:47,959
of sine waves why do we why do we care

00:07:46,249 --> 00:07:50,509
about these sine waves we'll see that in

00:07:47,959 --> 00:07:52,489
a minute but this is a beautiful diagram

00:07:50,509 --> 00:07:54,889
of how these sine waves actually add

00:07:52,489 --> 00:07:56,119
together I'll share the links or you can

00:07:54,889 --> 00:07:58,219
look at the links later and stare at

00:07:56,119 --> 00:08:00,019
this diagram until you see what's really

00:07:58,219 --> 00:08:01,789
going on here but as they line up in

00:08:00,019 --> 00:08:03,379
phase you get these transitions now

00:08:01,789 --> 00:08:06,439
notice this is not a perfect square wave

00:08:03,379 --> 00:08:09,319
it's kind of like a noisy one that we

00:08:06,439 --> 00:08:11,029
saw on the wire earlier but if we add an

00:08:09,319 --> 00:08:14,449
infinite series of sine waves we will

00:08:11,029 --> 00:08:14,989
get original square wave and that's the

00:08:14,449 --> 00:08:16,519
key point

00:08:14,989 --> 00:08:18,289
we need an infinite number of square

00:08:16,519 --> 00:08:20,419
waves to perfectly represent a square

00:08:18,289 --> 00:08:23,689
wave it's the sine waves represents

00:08:20,419 --> 00:08:24,919
Croatia so here's a few more sine waves

00:08:23,689 --> 00:08:30,619
added to it and he starts here we start

00:08:24,919 --> 00:08:33,259
you a better and better signal okay so

00:08:30,619 --> 00:08:35,089
all we care about is signals in whatever

00:08:33,259 --> 00:08:37,009
form they are square waves audio signals

00:08:35,089 --> 00:08:39,949
or whatever I fundamentally built out of

00:08:37,009 --> 00:08:41,870
sine waves when we talk about the how

00:08:39,949 --> 00:08:44,059
the electronics and the and the signal

00:08:41,870 --> 00:08:45,829
processing works on our signals we deal

00:08:44,059 --> 00:08:46,759
with the sine waves instead because it

00:08:45,829 --> 00:08:48,620
makes it easier to deal with the

00:08:46,759 --> 00:08:50,389
electronics fundamentally here we're

00:08:48,620 --> 00:08:52,160
talking about oscillations of things and

00:08:50,389 --> 00:08:54,380
all of these things have solutions that

00:08:52,160 --> 00:08:55,880
involve differential equations and

00:08:54,380 --> 00:08:57,200
sine waves and Exponential's have

00:08:55,880 --> 00:08:58,390
interesting properties as far as that

00:08:57,200 --> 00:09:01,340
goes

00:08:58,390 --> 00:09:03,920
so the Fourier transform is our

00:09:01,340 --> 00:09:06,050
formalism of how we how we deal with

00:09:03,920 --> 00:09:08,690
this time domain frequency domain things

00:09:06,050 --> 00:09:10,400
so I can take a time signal and Fourier

00:09:08,690 --> 00:09:12,140
transform it into the frequency

00:09:10,400 --> 00:09:13,850
components and vice versa inverse

00:09:12,140 --> 00:09:15,920
Fourier transform to take frequency

00:09:13,850 --> 00:09:17,600
components back to time now we

00:09:15,920 --> 00:09:19,280
understand kind of how the reverse works

00:09:17,600 --> 00:09:20,630
we add all the sine waves together and

00:09:19,280 --> 00:09:24,620
we get back our signal that was what the

00:09:20,630 --> 00:09:26,000
example we showed earlier was you'll see

00:09:24,620 --> 00:09:28,370
this referred to is the fast Fourier

00:09:26,000 --> 00:09:30,290
transform the FFT this is because the

00:09:28,370 --> 00:09:32,810
algorithm we use is the the fast version

00:09:30,290 --> 00:09:35,660
rather than the slow version cool maths

00:09:32,810 --> 00:09:43,820
that makes that work but yeah people

00:09:35,660 --> 00:09:45,980
commonly refer to this as the FFT so

00:09:43,820 --> 00:09:47,120
this is our square wave again and what

00:09:45,980 --> 00:09:48,890
we're looking at now is the frequency

00:09:47,120 --> 00:09:51,320
version of this so this square wave is

00:09:48,890 --> 00:09:53,090
the sum of all of those frequencies it's

00:09:51,320 --> 00:09:54,440
symmetric around 0 so just sort of

00:09:53,090 --> 00:09:56,990
consider the right-hand edge of the

00:09:54,440 --> 00:09:59,300
right-hand half of this but what we're

00:09:56,990 --> 00:10:01,670
seeing is that anyway there's a pulse

00:09:59,300 --> 00:10:03,140
here corresponds to another sine wave

00:10:01,670 --> 00:10:06,500
component that's that's a part of this

00:10:03,140 --> 00:10:11,090
signal so the problem here is that in

00:10:06,500 --> 00:10:13,250
order to represent our pulse train we

00:10:11,090 --> 00:10:14,810
needed in a really wide range of

00:10:13,250 --> 00:10:17,750
frequencies to capture that that signal

00:10:14,810 --> 00:10:19,130
and if our wire would have cut off some

00:10:17,750 --> 00:10:21,740
of those frequencies which is what this

00:10:19,130 --> 00:10:23,150
wire is doing we start to get a poorer

00:10:21,740 --> 00:10:28,160
and poorer reproduction of the original

00:10:23,150 --> 00:10:29,660
signal so this is kind of a very very

00:10:28,160 --> 00:10:30,680
very basic approximation of what and

00:10:29,660 --> 00:10:32,960
what I might do is cut off

00:10:30,680 --> 00:10:33,800
high-frequency components in the wire so

00:10:32,960 --> 00:10:35,690
that's the point I was making earlier

00:10:33,800 --> 00:10:37,790
why is behave differently to different

00:10:35,690 --> 00:10:40,570
frequencies this is a wire that cuts off

00:10:37,790 --> 00:10:40,570
the high frequencies

00:10:43,700 --> 00:10:47,070
okay what's going on here the

00:10:45,750 --> 00:10:49,760
electronics the wire actually is a

00:10:47,070 --> 00:10:52,590
capacitor it resists the change and

00:10:49,760 --> 00:10:53,970
capacitance importantly formula for

00:10:52,590 --> 00:10:56,790
capacitance is a function of frequency

00:10:53,970 --> 00:10:59,790
higher frequencies resistor the higher

00:10:56,790 --> 00:11:03,090
frequencies are attenuated more by our

00:10:59,790 --> 00:11:05,400
signaling we're gonna cover this more in

00:11:03,090 --> 00:11:07,770
a second but sine waves can be expressed

00:11:05,400 --> 00:11:10,110
as they both being at some position but

00:11:07,770 --> 00:11:11,790
also some offset this will be a lot more

00:11:10,110 --> 00:11:13,230
important for the radio stuff later but

00:11:11,790 --> 00:11:14,550
this is when we talk about phase we're

00:11:13,230 --> 00:11:16,350
talking about two sine waves that have

00:11:14,550 --> 00:11:19,530
the same frequency but a slightly

00:11:16,350 --> 00:11:21,960
different time offset it only matters up

00:11:19,530 --> 00:11:23,550
to 360 degrees

00:11:21,960 --> 00:11:25,110
because after three and 60° you're now

00:11:23,550 --> 00:11:28,620
aligned exactly with where you started

00:11:25,110 --> 00:11:31,440
the important the reason this is

00:11:28,620 --> 00:11:33,990
important is that when I want to capture

00:11:31,440 --> 00:11:36,150
the the frequency and phase of a signal

00:11:33,990 --> 00:11:38,820
rather than remembering the frequency

00:11:36,150 --> 00:11:42,240
and phase so that would be C and Phi I

00:11:38,820 --> 00:11:43,770
can instead to capture a and B this is

00:11:42,240 --> 00:11:45,510
kind of Pythagorean theorem we're going

00:11:43,770 --> 00:11:47,040
on the details here are not important

00:11:45,510 --> 00:11:48,540
but when we talk about sampling the

00:11:47,040 --> 00:11:50,400
radio will always be talking about an in

00:11:48,540 --> 00:11:53,640
phase and a quadrature component and

00:11:50,400 --> 00:11:55,050
what this is is this a and B and the

00:11:53,640 --> 00:11:56,940
reason we want this is that we might

00:11:55,050 --> 00:11:59,130
want a software radio to also understand

00:11:56,940 --> 00:12:00,510
the phase information for our purposes

00:11:59,130 --> 00:12:03,210
at the moment we can just kind of think

00:12:00,510 --> 00:12:06,180
of a and B together like a pair of

00:12:03,210 --> 00:12:07,980
samples and together we can see what the

00:12:06,180 --> 00:12:10,220
worth of what the voltage was at that

00:12:07,980 --> 00:12:10,220
point

00:12:11,580 --> 00:12:15,060
[Music]

00:12:12,740 --> 00:12:17,760
so each fixing fence easy to do since

00:12:15,060 --> 00:12:21,480
that's what I'm saying okay so basic

00:12:17,760 --> 00:12:24,270
data transform stuff we signal with with

00:12:21,480 --> 00:12:25,380
changing voltages digital signals are a

00:12:24,270 --> 00:12:27,830
problem for us because they have these

00:12:25,380 --> 00:12:30,600
really wide frequency spectrums

00:12:27,830 --> 00:12:33,120
signals can be thought of as being made

00:12:30,600 --> 00:12:37,680
up of a sum of sine waves cables are

00:12:33,120 --> 00:12:38,670
awful and this may seem like a weird

00:12:37,680 --> 00:12:40,590
thing to talk about in the context of

00:12:38,670 --> 00:12:41,910
electronics in serial data but we're

00:12:40,590 --> 00:12:44,220
used to this already with with audio

00:12:41,910 --> 00:12:45,960
when you play a note on a piano that is

00:12:44,220 --> 00:12:47,790
one frequency you play two notes on a

00:12:45,960 --> 00:12:49,470
piano and now you hear the combination

00:12:47,790 --> 00:12:50,790
of those frequencies what's actually

00:12:49,470 --> 00:12:52,770
happening is you have two frequencies

00:12:50,790 --> 00:12:54,600
playing at once but you hear that some

00:12:52,770 --> 00:12:56,100
of them are ear turns that back into two

00:12:54,600 --> 00:12:58,620
different frequencies

00:12:56,100 --> 00:13:05,190
we and we hear a note record in this

00:12:58,620 --> 00:13:07,769
case okay so the second miracle of

00:13:05,190 --> 00:13:10,500
electronics after the Fourier verses

00:13:07,769 --> 00:13:13,050
they're the inverse the time for

00:13:10,500 --> 00:13:15,329
frequency relationship is it if you take

00:13:13,050 --> 00:13:17,490
this changing voltage signal and you put

00:13:15,329 --> 00:13:19,519
it into an antenna so I have an antenna

00:13:17,490 --> 00:13:22,350
at the bottom that I change its voltage

00:13:19,519 --> 00:13:24,389
it propagates through free space it's

00:13:22,350 --> 00:13:26,279
and then if I have an antenna of similar

00:13:24,389 --> 00:13:28,470
properties at the other end that voltage

00:13:26,279 --> 00:13:30,779
appears on that antenna it really is

00:13:28,470 --> 00:13:31,920
that simple drive a voltage here see a

00:13:30,779 --> 00:13:35,130
voltage here okay it's not really that

00:13:31,920 --> 00:13:37,019
simple but like the the basics are if I

00:13:35,130 --> 00:13:39,329
have an analog circuit driving a voltage

00:13:37,019 --> 00:13:43,490
I can record a voltage on another

00:13:39,329 --> 00:13:46,319
antenna and see the same signal however

00:13:43,490 --> 00:13:48,329
it's like a wire but worse it only

00:13:46,319 --> 00:13:49,860
transmits a specific band of frequencies

00:13:48,329 --> 00:13:53,699
so rather than being zero to something

00:13:49,860 --> 00:13:55,440
it's something to something plus and and

00:13:53,699 --> 00:13:58,139
so I might have a pair of radio a pair

00:13:55,440 --> 00:14:00,060
of antennas that transmit FM radio music

00:13:58,139 --> 00:14:01,380
and so they only transmit in the range

00:14:00,060 --> 00:14:03,209
100 mm or approximately hundred

00:14:01,380 --> 00:14:04,529
megahertz and the receiving end can only

00:14:03,209 --> 00:14:06,449
receive an approximate hundred mega

00:14:04,529 --> 00:14:07,889
Hertz but if I drive this end with it

00:14:06,449 --> 00:14:09,630
with with the range of frequencies

00:14:07,889 --> 00:14:11,519
around one hundred megahertz I will see

00:14:09,630 --> 00:14:17,430
a signal at that end that contains these

00:14:11,519 --> 00:14:19,199
hundred megahertz components yeah it's a

00:14:17,430 --> 00:14:21,120
cable it's a cable that instead of

00:14:19,199 --> 00:14:26,009
passing low frequencies only it passes a

00:14:21,120 --> 00:14:27,089
band of frequencies and depending on

00:14:26,009 --> 00:14:31,139
which frequency we choose we have

00:14:27,089 --> 00:14:33,389
totally different properties so and

00:14:31,139 --> 00:14:35,670
incredibly the same thing applies to

00:14:33,389 --> 00:14:37,139
light so in theory if I were to drive

00:14:35,670 --> 00:14:38,880
that frequency at a really really high

00:14:37,139 --> 00:14:40,800
frequency I would be producing light it

00:14:38,880 --> 00:14:45,300
doesn't really work like that but the

00:14:40,800 --> 00:14:47,870
same spectrum of varying voltages causes

00:14:45,300 --> 00:14:50,009
our entire electromagnetic spectrum

00:14:47,870 --> 00:14:53,160
you've probably heard some of these VHF

00:14:50,009 --> 00:14:58,459
so this is things like marine radio and

00:14:53,160 --> 00:15:01,529
TV and old analog TV is VHF and uhf and

00:14:58,459 --> 00:15:03,209
things like the microwave for example

00:15:01,529 --> 00:15:05,069
turns out when you when you make radio

00:15:03,209 --> 00:15:08,379
waves at 2.4 approximately 2.4 gigahertz

00:15:05,069 --> 00:15:10,610
it heats water hum and

00:15:08,379 --> 00:15:16,069
and that's a part of our life terminate

00:15:10,610 --> 00:15:17,660
spectrum as well so now what we've gotta

00:15:16,069 --> 00:15:19,310
the problem is is we've got this signal

00:15:17,660 --> 00:15:21,079
that we want to transmit but we need to

00:15:19,310 --> 00:15:22,399
be mindful not just of how wide the

00:15:21,079 --> 00:15:23,629
bandwidth of the signal is so that the

00:15:22,399 --> 00:15:25,399
frequency components that are involved

00:15:23,629 --> 00:15:27,709
but also where in the spectrum those

00:15:25,399 --> 00:15:29,649
frequency components are so if I want to

00:15:27,709 --> 00:15:32,509
transmit a signal at a hundred megahertz

00:15:29,649 --> 00:15:34,430
but my underlying data rate is only 200

00:15:32,509 --> 00:15:36,290
kilobits or something like that I need

00:15:34,430 --> 00:15:37,579
to make sure that my spectrum produces

00:15:36,290 --> 00:15:40,939
frequency components in the hundred

00:15:37,579 --> 00:15:43,040
megahertz range so Bluetooth is a great

00:15:40,939 --> 00:15:45,470
example now Bluetooth is turns out is

00:15:43,040 --> 00:15:47,420
that exact same 2.4 gigahertz that I

00:15:45,470 --> 00:15:49,540
just mentioned about microwaves when

00:15:47,420 --> 00:15:51,560
they came to dividing up the spectrum

00:15:49,540 --> 00:15:53,240
they're like oh well we already have

00:15:51,560 --> 00:15:54,319
these super noisy microwave things we

00:15:53,240 --> 00:15:56,120
can't possibly use this space for

00:15:54,319 --> 00:15:57,829
anything else and then when they needed

00:15:56,120 --> 00:15:59,269
a place for people to put their personal

00:15:57,829 --> 00:16:02,060
devices that wasn't licensed they're

00:15:59,269 --> 00:16:03,980
like oh well this microwave spot is free

00:16:02,060 --> 00:16:05,689
and so it turns out also 5 gigahertz is

00:16:03,980 --> 00:16:10,189
double that so it's also the harmonics

00:16:05,689 --> 00:16:11,089
of microwaves and things like that this

00:16:10,189 --> 00:16:12,620
is a legal requirement

00:16:11,089 --> 00:16:13,910
I can't just transmit at any frequency I

00:16:12,620 --> 00:16:15,079
like even though I'd want to because of

00:16:13,910 --> 00:16:17,569
the frequency has the particular

00:16:15,079 --> 00:16:18,980
properties that I would like there is

00:16:17,569 --> 00:16:23,389
there is a licensing system going on

00:16:18,980 --> 00:16:25,370
here there are a bunch of ranges that

00:16:23,389 --> 00:16:26,779
you can use for different purposes there

00:16:25,370 --> 00:16:28,939
are rules attached to these things like

00:16:26,779 --> 00:16:31,100
you have to do particular limit on power

00:16:28,939 --> 00:16:32,720
or you have to use some sort of

00:16:31,100 --> 00:16:35,029
frequency hopping technique or something

00:16:32,720 --> 00:16:36,709
like that and different areas have

00:16:35,029 --> 00:16:39,230
different rules so for example marine

00:16:36,709 --> 00:16:41,569
radio anyone can go and get a marine

00:16:39,230 --> 00:16:43,610
radio license after they sit in exam but

00:16:41,569 --> 00:16:45,559
like not anyone can go and get a license

00:16:43,610 --> 00:16:50,059
to transmit in the mobile phone ranges

00:16:45,559 --> 00:16:52,160
for example okay so how do we take our

00:16:50,059 --> 00:16:53,930
signal that was some sort of set of

00:16:52,160 --> 00:16:55,430
frequency components and specifically

00:16:53,930 --> 00:16:57,050
choose the frequency spectrum that we

00:16:55,430 --> 00:16:58,610
want so that it transmits over the radio

00:16:57,050 --> 00:17:02,120
and the answer is a thing called

00:16:58,610 --> 00:17:04,850
modulation so modulation takes our

00:17:02,120 --> 00:17:06,470
signal and transforms what the frequency

00:17:04,850 --> 00:17:08,329
domain looks like while maintaining the

00:17:06,470 --> 00:17:10,539
underlying signal and it's a reversible

00:17:08,329 --> 00:17:13,909
transform so I can convert it back to my

00:17:10,539 --> 00:17:15,110
underlying data and there's a bunch of

00:17:13,909 --> 00:17:17,089
properties member with those sine waves

00:17:15,110 --> 00:17:19,069
we talked about earlier we can modulate

00:17:17,089 --> 00:17:21,950
any of the parameters of those sine

00:17:19,069 --> 00:17:24,290
waves so the simplest

00:17:21,950 --> 00:17:26,030
live radio modulation is am what I do is

00:17:24,290 --> 00:17:27,770
I take the signal I want to transmit

00:17:26,030 --> 00:17:30,320
which is a varying voltage over time and

00:17:27,770 --> 00:17:31,940
I used that to change the strength of my

00:17:30,320 --> 00:17:34,580
radio transmission and so at the other

00:17:31,940 --> 00:17:36,470
end I record how strongly I'm receiving

00:17:34,580 --> 00:17:37,640
your radio signal and that's the that's

00:17:36,470 --> 00:17:39,680
the voltage that the other end was

00:17:37,640 --> 00:17:41,420
transmitting as long as that's really

00:17:39,680 --> 00:17:44,360
relatively slow it's actually quite an

00:17:41,420 --> 00:17:48,830
effective way to do it it works for AM

00:17:44,360 --> 00:17:50,390
radio on top of that we have a bunch of

00:17:48,830 --> 00:17:53,810
really clever digital schemes as well

00:17:50,390 --> 00:17:55,640
things like CDMA and DSS that allow us

00:17:53,810 --> 00:17:58,550
to build on top of these to build really

00:17:55,640 --> 00:18:01,010
wide spectrum and low noise and very

00:17:58,550 --> 00:18:04,610
high noise tolerance so GPS signals for

00:18:01,010 --> 00:18:05,630
example are so faint you know they're

00:18:04,610 --> 00:18:07,310
coming from satellites and we're

00:18:05,630 --> 00:18:09,920
receiving them on these tiny antennas

00:18:07,310 --> 00:18:11,390
that you need really really clever

00:18:09,920 --> 00:18:14,270
processing techniques to be able to

00:18:11,390 --> 00:18:17,960
recover any signal from the noise we

00:18:14,270 --> 00:18:19,310
won't go into details of these but so

00:18:17,960 --> 00:18:22,160
signal it's not a particular frequency

00:18:19,310 --> 00:18:23,720
in our spectrum is a sine wave we

00:18:22,160 --> 00:18:24,980
modulate some of these parameters and

00:18:23,720 --> 00:18:27,800
sometimes we modulate more than one

00:18:24,980 --> 00:18:29,360
parameter at once so qualm is an example

00:18:27,800 --> 00:18:32,000
in quantum powers things like a DSL

00:18:29,360 --> 00:18:37,310
modems and and Wi-Fi and things like

00:18:32,000 --> 00:18:40,390
that so the cool trick about amplitude

00:18:37,310 --> 00:18:43,310
modulation is that what I'm doing is I'm

00:18:40,390 --> 00:18:44,600
modulating some high frequency things so

00:18:43,310 --> 00:18:46,870
if I want to transmit a signal at one

00:18:44,600 --> 00:18:49,940
megahertz but my I have like a little

00:18:46,870 --> 00:18:52,550
200 bit per second thing I'm

00:18:49,940 --> 00:18:54,740
transmitting what I do is I multiply the

00:18:52,550 --> 00:18:56,600
two things together so when I want to

00:18:54,740 --> 00:18:58,700
transmit a one eyed Schmitt my one

00:18:56,600 --> 00:18:59,870
megahertz signal over the radio when I

00:18:58,700 --> 00:19:01,760
want to transmit a zero

00:18:59,870 --> 00:19:03,260
I just don't transmit anything at all so

00:19:01,760 --> 00:19:04,880
the other end says I'm receiving a

00:19:03,260 --> 00:19:07,220
signal that's a one I'm not receiving a

00:19:04,880 --> 00:19:08,600
signal that's a zero now what really

00:19:07,220 --> 00:19:11,480
happens here is I just multiply the two

00:19:08,600 --> 00:19:13,750
things together on or off times a signal

00:19:11,480 --> 00:19:17,000
gives us a signal that turns on or off

00:19:13,750 --> 00:19:18,770
at the audio case would be I multiplied

00:19:17,000 --> 00:19:19,940
by the strength of my audios the the

00:19:18,770 --> 00:19:22,580
amplitude of my audio signal at any

00:19:19,940 --> 00:19:24,410
point in time now what really happens

00:19:22,580 --> 00:19:29,690
here mathematically is that multiplying

00:19:24,410 --> 00:19:32,390
two signals multiplies that in the time

00:19:29,690 --> 00:19:34,160
domain is the equivalent of adding their

00:19:32,390 --> 00:19:36,170
frequency components

00:19:34,160 --> 00:19:37,280
this is an important identity that helps

00:19:36,170 --> 00:19:39,710
you understand a lot of the radio stuff

00:19:37,280 --> 00:19:41,360
but the important thing is to sub to

00:19:39,710 --> 00:19:41,900
cosine waves two sine waves multiplied

00:19:41,360 --> 00:19:44,210
together

00:19:41,900 --> 00:19:48,140
producing new sine waves that are the

00:19:44,210 --> 00:19:49,670
sum and difference of the frequencies so

00:19:48,140 --> 00:19:51,080
what this means is that I can take a

00:19:49,670 --> 00:19:53,000
signal that contains frequency

00:19:51,080 --> 00:19:55,970
components multiplied it by a sine wave

00:19:53,000 --> 00:19:58,340
of a choice in frequency and the entire

00:19:55,970 --> 00:20:00,500
spectrum moves up to the sum of those

00:19:58,340 --> 00:20:02,150
two frequencies so if I want to take my

00:20:00,500 --> 00:20:05,090
Turner to kill my Turner bit per second

00:20:02,150 --> 00:20:06,890
serial data and transmit it at 1 at 100

00:20:05,090 --> 00:20:10,100
megahertz all I have to do is multiply

00:20:06,890 --> 00:20:12,430
it by a hundred megahertz signal and

00:20:10,100 --> 00:20:14,300
we'll give a demo of this in a second

00:20:12,430 --> 00:20:17,840
frequency phase modulation change other

00:20:14,300 --> 00:20:20,840
properties which will give it a more

00:20:17,840 --> 00:20:22,610
visible now a real radio does all this

00:20:20,840 --> 00:20:24,920
in hardware electronic components make

00:20:22,610 --> 00:20:27,230
all this work and they have Hardware

00:20:24,920 --> 00:20:28,660
mixers not those multipliers oscillators

00:20:27,230 --> 00:20:30,830
to generate the right frequencies

00:20:28,660 --> 00:20:33,020
filtering and stuff like that and so

00:20:30,830 --> 00:20:34,550
when I buy an FM radio receiver it has

00:20:33,020 --> 00:20:36,290
electronics in it that Tunes to a

00:20:34,550 --> 00:20:38,390
particular channel and only receives

00:20:36,290 --> 00:20:38,930
analog audio at FM they can't do

00:20:38,390 --> 00:20:41,830
anything else

00:20:38,930 --> 00:20:43,790
similarly you might have a hardware

00:20:41,830 --> 00:20:46,610
Bluetooth radio something like that and

00:20:43,790 --> 00:20:48,820
and and the output of it is bytes not

00:20:46,610 --> 00:20:53,320
not this is the underlying radio data

00:20:48,820 --> 00:20:54,560
this is why software radio is important

00:20:53,320 --> 00:20:56,870
cool

00:20:54,560 --> 00:20:58,040
so antennas give us a channel but it's

00:20:56,870 --> 00:21:00,830
an annoying channel that we have to

00:20:58,040 --> 00:21:03,310
transmit at a specific frequency we use

00:21:00,830 --> 00:21:05,300
the different parts of the spectrum to

00:21:03,310 --> 00:21:07,490
give us different radio properties

00:21:05,300 --> 00:21:10,400
things like lower frequencies to travel

00:21:07,490 --> 00:21:12,260
a lot further high frequencies allow us

00:21:10,400 --> 00:21:13,910
to do things like they don't travel as

00:21:12,260 --> 00:21:15,320
far so for Wi-Fi that's a great property

00:21:13,910 --> 00:21:16,940
I don't want my Wi-Fi signal to be

00:21:15,320 --> 00:21:20,030
received by someone at the other end of

00:21:16,940 --> 00:21:21,710
the street we use modulation to change

00:21:20,030 --> 00:21:23,980
the properties of our signal so that it

00:21:21,710 --> 00:21:26,870
fits the properties of the spectrum

00:21:23,980 --> 00:21:30,980
radio hardware is is it for a dedicated

00:21:26,870 --> 00:21:32,570
purpose usually and this mix of property

00:21:30,980 --> 00:21:35,300
which is that multiplying two signals

00:21:32,570 --> 00:21:38,690
together can allow us to shift up and

00:21:35,300 --> 00:21:40,370
down the frequency spectrum cool what's

00:21:38,690 --> 00:21:41,840
a software radio I take all those things

00:21:40,370 --> 00:21:46,130
I said about hardware and I make them

00:21:41,840 --> 00:21:47,779
software instead so all I do instead is

00:21:46,130 --> 00:21:50,149
that that voltage on the antenna

00:21:47,779 --> 00:21:51,619
that I receive I see I convert it to

00:21:50,149 --> 00:21:53,749
digital as soon as possible with an

00:21:51,619 --> 00:21:55,909
analogue to digital converter and then

00:21:53,749 --> 00:21:58,210
do everything else in software Fourier

00:21:55,909 --> 00:22:01,059
transform in software oscillator mixer

00:21:58,210 --> 00:22:03,950
pass low and high-pass filters all just

00:22:01,059 --> 00:22:05,239
algorithms now more importantly it means

00:22:03,950 --> 00:22:06,679
that these algorithms are configurable

00:22:05,239 --> 00:22:08,389
and I can do it through things in

00:22:06,679 --> 00:22:11,269
software that I can't do in hardware and

00:22:08,389 --> 00:22:14,389
write really good filters that have very

00:22:11,269 --> 00:22:16,129
good performance characteristics but at

00:22:14,389 --> 00:22:19,609
the problem we have here is that kind of

00:22:16,129 --> 00:22:21,379
sample a radio signal that's going at

00:22:19,609 --> 00:22:23,149
2.4 gigahertz because I would need to

00:22:21,379 --> 00:22:25,789
sample that at 5 gigahertz we'll talk

00:22:23,149 --> 00:22:27,859
about why that is in a second so what

00:22:25,789 --> 00:22:29,869
the software radios tend to do is they

00:22:27,859 --> 00:22:31,369
have a mixer in the hardware shifts it

00:22:29,869 --> 00:22:33,139
down to a frequency range that we want

00:22:31,369 --> 00:22:35,809
to work with and then they sample that

00:22:33,139 --> 00:22:36,830
at a reason alright a reasonable rate so

00:22:35,809 --> 00:22:38,869
for example the radio we're gonna wait

00:22:36,830 --> 00:22:40,479
with today shifts everything down into a

00:22:38,869 --> 00:22:43,129
20 megahertz wideband

00:22:40,479 --> 00:22:47,719
using a mixer and then we just sample at

00:22:43,129 --> 00:22:48,679
20 megahertz instead the sampling what

00:22:47,719 --> 00:22:51,859
is this sampling thing I keep talking

00:22:48,679 --> 00:22:53,179
about so the radio spectrum and an

00:22:51,859 --> 00:22:54,830
electronics in general is an analogue

00:22:53,179 --> 00:22:56,419
thing I change a voltage and the voltage

00:22:54,830 --> 00:22:58,580
changes continuously over time

00:22:56,419 --> 00:23:00,200
when I convert this into software I need

00:22:58,580 --> 00:23:02,899
to deal with this as a series of

00:23:00,200 --> 00:23:05,299
recordings so what was the voltage now

00:23:02,899 --> 00:23:07,580
then T plus 1 T plus 2 how does their

00:23:05,299 --> 00:23:10,690
voltage change so I have some finite

00:23:07,580 --> 00:23:14,779
number of samples of my signal over time

00:23:10,690 --> 00:23:16,219
and these are these are amplitude over

00:23:14,779 --> 00:23:18,529
time now I mentioned earlier they're

00:23:16,219 --> 00:23:21,799
actually two recordings per sample

00:23:18,529 --> 00:23:24,409
in-phase and quadrature if I'm gonna

00:23:21,799 --> 00:23:26,089
capture a signal I need to sample it at

00:23:24,409 --> 00:23:27,289
least twice as fast as the highest

00:23:26,089 --> 00:23:29,059
frequency component that can it's

00:23:27,289 --> 00:23:31,269
contained in it if we think about this

00:23:29,059 --> 00:23:35,089
in terms of us a square wave pulse train

00:23:31,269 --> 00:23:38,059
if I sample slower than the right of the

00:23:35,089 --> 00:23:39,799
pulses I won't see every pulse so I have

00:23:38,059 --> 00:23:41,210
to sample at least as Twite at least

00:23:39,799 --> 00:23:43,429
twice as fast as that as the rate of

00:23:41,210 --> 00:23:45,789
pulses so that I make sure I capture

00:23:43,429 --> 00:23:48,799
every up and every down in that signal

00:23:45,789 --> 00:23:50,599
if I'm talking about audio if my audio

00:23:48,799 --> 00:23:51,950
signal contains like a very high-pitched

00:23:50,599 --> 00:23:53,809
note or something like that

00:23:51,950 --> 00:23:55,489
I will only capture that if I'm sampling

00:23:53,809 --> 00:23:57,529
at least twice the frequency of that

00:23:55,489 --> 00:23:59,749
note so we'll see this when we talk

00:23:57,529 --> 00:24:00,970
about receiving radio data because I

00:23:59,749 --> 00:24:02,169
need to know how

00:24:00,970 --> 00:24:04,059
the spectrum is of the thing I'm

00:24:02,169 --> 00:24:07,870
transmitting and sample at least twice

00:24:04,059 --> 00:24:11,559
as fast as that this is white CD audio

00:24:07,870 --> 00:24:13,630
you might have seen is 16-bit at 44 100

00:24:11,559 --> 00:24:15,880
samples per second the reason for this

00:24:13,630 --> 00:24:19,780
is that our hearing goes from roughly

00:24:15,880 --> 00:24:21,640
zero to 20,000 Hertz so 44 100 is double

00:24:19,780 --> 00:24:22,600
that 41 for 100 is an interesting number

00:24:21,640 --> 00:24:25,330
because it's got a bunch of other

00:24:22,600 --> 00:24:30,309
properties but effectively it's twice

00:24:25,330 --> 00:24:33,610
twenty this is the sands of slide from

00:24:30,309 --> 00:24:35,440
before we can think of a sine wave with

00:24:33,610 --> 00:24:38,260
a phase offset on the right as being

00:24:35,440 --> 00:24:40,240
actually two sine waves at 90 degrees

00:24:38,260 --> 00:24:42,220
out of phase when we sample on the radio

00:24:40,240 --> 00:24:43,659
don't need to understand this in a huge

00:24:42,220 --> 00:24:45,429
amount of detail but we sample on the

00:24:43,659 --> 00:24:47,260
radio what we receive is a stream of

00:24:45,429 --> 00:24:48,610
complex numbers and remember a complex

00:24:47,260 --> 00:24:53,159
number can be just thought of as a pair

00:24:48,610 --> 00:24:55,360
of numbers or mathematically it's a

00:24:53,159 --> 00:24:56,530
amplitude and an angle and that's

00:24:55,360 --> 00:24:58,120
exactly what it is here it's the

00:24:56,530 --> 00:25:02,860
amplitude of the sine wave and the phase

00:24:58,120 --> 00:25:05,620
angle of that sine wave so I saw our

00:25:02,860 --> 00:25:07,780
software radio is a device that samples

00:25:05,620 --> 00:25:09,700
an antenna and converts that into a

00:25:07,780 --> 00:25:10,870
stream of bytes and now we're in

00:25:09,700 --> 00:25:13,360
software land we don't have to worry

00:25:10,870 --> 00:25:15,880
about any of the details of how the

00:25:13,360 --> 00:25:18,130
hardware works we have a stream of bytes

00:25:15,880 --> 00:25:20,640
and that's what that's what the people

00:25:18,130 --> 00:25:23,860
who people like me not electrical people

00:25:20,640 --> 00:25:25,570
can can deal with I can write algorithms

00:25:23,860 --> 00:25:27,820
I can write for loops and things like

00:25:25,570 --> 00:25:29,860
that so there's a bunch of approaches

00:25:27,820 --> 00:25:32,230
now I can literally treat this as a

00:25:29,860 --> 00:25:34,179
stream of bytes and do do whatever I

00:25:32,230 --> 00:25:38,950
like I can use a scifi or something like

00:25:34,179 --> 00:25:40,870
that and and nine PI and a lot of people

00:25:38,950 --> 00:25:43,809
use MATLAB or octave and things like

00:25:40,870 --> 00:25:45,010
that but building all these things that

00:25:43,809 --> 00:25:46,059
I want to do it turns out the algorithms

00:25:45,010 --> 00:25:48,669
I'm going to implement are things like

00:25:46,059 --> 00:25:49,090
low-pass filters and mixers and things

00:25:48,669 --> 00:25:50,740
like that

00:25:49,090 --> 00:25:53,440
so I'm gonna use libraries that build

00:25:50,740 --> 00:25:55,510
all these components up and I just call

00:25:53,440 --> 00:25:57,909
them as api's so you know radio is a

00:25:55,510 --> 00:25:59,350
great example of this and then gonna

00:25:57,909 --> 00:26:01,179
radio companion is the tool that I was

00:25:59,350 --> 00:26:04,840
using earlier that allows us to build

00:26:01,179 --> 00:26:10,270
these radio does not software radio

00:26:04,840 --> 00:26:11,830
designs in a flow diagram Safa radio can

00:26:10,270 --> 00:26:14,049
also do transmit so if I can

00:26:11,830 --> 00:26:14,590
equivalently generate the stream of

00:26:14,049 --> 00:26:17,380
sample

00:26:14,590 --> 00:26:19,540
so in-phase and quadrature pair samples

00:26:17,380 --> 00:26:21,070
at some data right the radio can

00:26:19,540 --> 00:26:23,290
transmit them as well does the exact

00:26:21,070 --> 00:26:28,480
process in Reverse and produces a radio

00:26:23,290 --> 00:26:30,280
signal instead so software radio is

00:26:28,480 --> 00:26:31,780
about taking all of those hardware

00:26:30,280 --> 00:26:34,120
things and turning them into software

00:26:31,780 --> 00:26:35,740
problems most importantly in the bottom

00:26:34,120 --> 00:26:38,320
right hand corner they're configurable I

00:26:35,740 --> 00:26:39,760
can write code DSP code and things like

00:26:38,320 --> 00:26:41,380
that they run on a microcontroller that

00:26:39,760 --> 00:26:42,910
sits right next to the radio front end

00:26:41,380 --> 00:26:50,440
oh my goodness

00:26:42,910 --> 00:26:51,970
and yeah okay so the hack RF this is an

00:26:50,440 --> 00:26:54,990
example of a software radio it's kind of

00:26:51,970 --> 00:26:59,530
a mid-range software radio it can only

00:26:54,990 --> 00:27:01,510
transmit or receive at once but it can

00:26:59,530 --> 00:27:04,750
transmit and receive it can sample

00:27:01,510 --> 00:27:06,490
anything from one Meg to six gig and it

00:27:04,750 --> 00:27:07,810
can sync - hacker you can sneak multiple

00:27:06,490 --> 00:27:09,160
hacker apps together so you can use this

00:27:07,810 --> 00:27:10,510
for things like radio astronomy and

00:27:09,160 --> 00:27:13,300
interferometry and stuff like that as

00:27:10,510 --> 00:27:15,400
well as excellent support from its

00:27:13,300 --> 00:27:18,880
developer and open source hardware open

00:27:15,400 --> 00:27:22,630
source software it was in the news a few

00:27:18,880 --> 00:27:24,340
weeks ago it turns out lots of things

00:27:22,630 --> 00:27:26,140
use radio and just like Internet of

00:27:24,340 --> 00:27:30,100
Things devices radio devices are not

00:27:26,140 --> 00:27:31,450
very well secured you have to wear a

00:27:30,100 --> 00:27:37,210
hoodie when you hack things with a

00:27:31,450 --> 00:27:38,980
hacker a great quote from the crater the

00:27:37,210 --> 00:27:40,900
hacker F which is that maybe they should

00:27:38,980 --> 00:27:45,430
use the hacker F to debug and test their

00:27:40,900 --> 00:27:51,100
security but yeah okay and race through

00:27:45,430 --> 00:27:52,960
this very quickly but I can build a more

00:27:51,100 --> 00:27:57,850
sophisticated flow chart with Guinea

00:27:52,960 --> 00:28:00,010
Radio sorry Radio waterfall and this

00:27:57,850 --> 00:28:01,240
will take our radio source rather than

00:28:00,010 --> 00:28:04,330
like a random source they used earlier

00:28:01,240 --> 00:28:06,370
and showing me the Fourier transform and

00:28:04,330 --> 00:28:11,200
show me the Fourier transform over time

00:28:06,370 --> 00:28:13,090
so if I run this so the radio in the

00:28:11,200 --> 00:28:14,980
bottom left-hand corner here is tuned to

00:28:13,090 --> 00:28:19,510
100 megahertz and so what we're seeing

00:28:14,980 --> 00:28:21,100
is how much spectra how much amplitude

00:28:19,510 --> 00:28:23,110
at any given frequency is there in this

00:28:21,100 --> 00:28:24,790
spectrum so we see this big spike at

00:28:23,110 --> 00:28:27,640
zero that's the DC offset of the antenna

00:28:24,790 --> 00:28:28,450
but these faint lines are FM radio

00:28:27,640 --> 00:28:31,090
stations near

00:28:28,450 --> 00:28:34,210
I could tune the radio to that station

00:28:31,090 --> 00:28:37,030
do FM demodulation on that and get music

00:28:34,210 --> 00:28:38,860
can't do that in here because the signal

00:28:37,030 --> 00:28:40,620
strength is not strong enough but this

00:28:38,860 --> 00:28:43,540
flowchart is kind of considered to be

00:28:40,620 --> 00:28:47,110
you know the example hello world of Qunu

00:28:43,540 --> 00:28:48,940
radio I record from the radio I filter

00:28:47,110 --> 00:28:51,370
it down to just the the Turner kilohertz

00:28:48,940 --> 00:28:53,680
bandwidth of an FM radio station junior

00:28:51,370 --> 00:28:56,470
radio has a FM receive block that

00:28:53,680 --> 00:29:00,490
converts it into audio samples and I can

00:28:56,470 --> 00:29:02,470
play it out through my speakers imagine

00:29:00,490 --> 00:29:05,140
I did this and you got the radio you all

00:29:02,470 --> 00:29:06,400
know the radio sounds like but there's a

00:29:05,140 --> 00:29:07,390
bunch of tools as well that are built on

00:29:06,400 --> 00:29:08,680
top this and Python tools as well

00:29:07,390 --> 00:29:10,210
they're built on top of this they'll let

00:29:08,680 --> 00:29:12,130
you visually drag you drag around the

00:29:10,210 --> 00:29:14,290
spectrum and select a range and it just

00:29:12,130 --> 00:29:16,420
plays automatically equivalently I could

00:29:14,290 --> 00:29:17,530
be doing something like a DSP or

00:29:16,420 --> 00:29:19,780
something like that and there's a

00:29:17,530 --> 00:29:21,010
program called um 1090 which takes that

00:29:19,780 --> 00:29:22,750
stream and turned it converts it into

00:29:21,010 --> 00:29:29,200
the coordinates of airplanes and things

00:29:22,750 --> 00:29:34,150
like that and who a very quick demo what

00:29:29,200 --> 00:29:37,650
I've brought is a little buggy that we

00:29:34,150 --> 00:29:41,560
use for teaching electronics so it's a

00:29:37,650 --> 00:29:47,200
motors wheels LEDs I'm gonna turn it on

00:29:41,560 --> 00:29:53,410
and it's locked so I'm a car and then on

00:29:47,200 --> 00:29:57,790
top of that I have a beeper for my car

00:29:53,410 --> 00:30:03,070
that I can use to lock and unlock my car

00:29:57,790 --> 00:30:05,410
so when I press one button the car

00:30:03,070 --> 00:30:08,320
unlocks the other but in the car locks

00:30:05,410 --> 00:30:18,850
so I'm gonna use my radio to look at

00:30:08,320 --> 00:30:20,230
what's going on there cool so I record

00:30:18,850 --> 00:30:22,900
from the radio and I write the data

00:30:20,230 --> 00:30:27,910
straight out to a file so I just need to

00:30:22,900 --> 00:30:30,150
switch the antenna so I said earlier the

00:30:27,910 --> 00:30:32,500
antenna it drives the properties of the

00:30:30,150 --> 00:30:34,060
properties of the antenna change what

00:30:32,500 --> 00:30:36,460
frequencies we can receive so now we're

00:30:34,060 --> 00:30:37,490
talking like Bluetooth spectrum 2.4 gig

00:30:36,460 --> 00:30:41,179
so

00:30:37,490 --> 00:30:43,760
put that there so I'm gonna run this I'm

00:30:41,179 --> 00:30:48,920
gonna lock my car and look like I love

00:30:43,760 --> 00:30:51,559
my car and then I'm gonna take my

00:30:48,920 --> 00:30:58,730
captured data and play it back out as a

00:30:51,559 --> 00:31:01,309
transmitter on the radio is that

00:30:58,730 --> 00:31:02,600
terrifying or what like so I haven't

00:31:01,309 --> 00:31:05,660
watched the video that they talked about

00:31:02,600 --> 00:31:07,940
in the late this will work for a garage

00:31:05,660 --> 00:31:10,970
door remote this will work for a lot of

00:31:07,940 --> 00:31:12,530
devices out there devices don't have

00:31:10,970 --> 00:31:14,059
replay tax so it turns out implementing

00:31:12,530 --> 00:31:16,070
reef reef protection because it turns

00:31:14,059 --> 00:31:20,780
out implement this is a required state

00:31:16,070 --> 00:31:22,220
between the two devices I'm gonna

00:31:20,780 --> 00:31:23,540
there's a very quick demo here what I

00:31:22,220 --> 00:31:26,630
want to talk about the Python side of it

00:31:23,540 --> 00:31:29,870
so what did we actually transmit their

00:31:26,630 --> 00:31:31,340
radio data a 2.4 gig the the micro bit

00:31:29,870 --> 00:31:33,470
that I'm using to do this has a has a

00:31:31,340 --> 00:31:36,800
Bluetooth radio transceiver in it and

00:31:33,470 --> 00:31:40,100
these are 1 megahertz channels in the

00:31:36,800 --> 00:31:42,130
2.4 gig spectrum so Canoe radio is

00:31:40,100 --> 00:31:44,870
really great at doing the the heavy duty

00:31:42,130 --> 00:31:48,920
software radio stuff but ultimately what

00:31:44,870 --> 00:31:53,420
I want at the end is data so when I run

00:31:48,920 --> 00:31:55,040
this what I'm doing is looking at the

00:31:53,420 --> 00:31:58,580
spectrum and then doing quadrature

00:31:55,040 --> 00:32:02,230
demodulation on the radio data so watch

00:31:58,580 --> 00:32:05,240
when I press the transmit button I

00:32:02,230 --> 00:32:08,660
actually see ones and zeros so that is

00:32:05,240 --> 00:32:10,910
me seeing the FM modulation of a

00:32:08,660 --> 00:32:13,309
Bluetooth data transmission on one

00:32:10,910 --> 00:32:14,059
particular Bluetooth Channel they're

00:32:13,309 --> 00:32:16,610
ones and zeros

00:32:14,059 --> 00:32:18,200
that's exactly my serial data but it is

00:32:16,610 --> 00:32:24,530
actually being encoded as the frequency

00:32:18,200 --> 00:32:26,720
deviation of a 2.4 gig radio carrier so

00:32:24,530 --> 00:32:29,170
once i've captured that i can pump that

00:32:26,720 --> 00:32:31,670
into a clock decoder

00:32:29,170 --> 00:32:34,760
so this synchronizes to what the bit

00:32:31,670 --> 00:32:37,820
speed of that underlying data is tidied

00:32:34,760 --> 00:32:39,320
up a bit slice it up into bits look for

00:32:37,820 --> 00:32:40,910
the preamble the one zero one zero one

00:32:39,320 --> 00:32:43,100
zero preamble that right at Bluetooth

00:32:40,910 --> 00:32:45,700
signals have and dump it out to a file

00:32:43,100 --> 00:32:45,700
and then

00:32:54,820 --> 00:32:59,899
so I'm going to read from that photo

00:32:56,809 --> 00:33:01,639
that I'm writing to run that example

00:32:59,899 --> 00:33:11,929
that synchronizes the clock and listens

00:33:01,639 --> 00:33:13,879
to my radio data and in my terminal I

00:33:11,929 --> 00:33:15,379
see a bunch of my actual data

00:33:13,879 --> 00:33:17,269
transmissions so if we look really

00:33:15,379 --> 00:33:19,100
closely they although those numbers will

00:33:17,269 --> 00:33:20,210
be the ascii for lock and unlock which

00:33:19,100 --> 00:33:22,220
is actually the string I'm transmitting

00:33:20,210 --> 00:33:25,700
in a real car it'll be the cars ID or

00:33:22,220 --> 00:33:27,350
something like that I can very quickly

00:33:25,700 --> 00:33:29,990
show you what clocked up pay looks like

00:33:27,350 --> 00:33:31,999
it's basically has to do a little bit of

00:33:29,990 --> 00:33:34,129
the data to whitening which is a radio

00:33:31,999 --> 00:33:35,539
property which you can talk about in the

00:33:34,129 --> 00:33:38,210
sprints or something

00:33:35,539 --> 00:33:41,440
yeah read bits assemble them into bytes

00:33:38,210 --> 00:33:41,440
play back the bytes

00:33:43,300 --> 00:33:48,399
[Music]

00:33:45,009 --> 00:33:51,980
that's how quadrature modulation works

00:33:48,399 --> 00:33:53,480
okay when I transmit data I have to do

00:33:51,980 --> 00:33:54,980
jewelley trance pre transform the data

00:33:53,480 --> 00:33:55,879
as well so that for example Bluetooth

00:33:54,980 --> 00:33:58,460
has this thing called a linear feedback

00:33:55,879 --> 00:34:00,200
shift register that tank takes long

00:33:58,460 --> 00:34:02,330
strings of ones and zeros and turns them

00:34:00,200 --> 00:34:05,779
into changing ones and zeros so that way

00:34:02,330 --> 00:34:07,220
the signal can be clocked this is a I

00:34:05,779 --> 00:34:08,419
looked up in the datasheet this is what

00:34:07,220 --> 00:34:09,710
the format of the things look like so

00:34:08,419 --> 00:34:12,319
when I decoded the bits I have to turn

00:34:09,710 --> 00:34:13,909
them back into pipes and data so a lot

00:34:12,319 --> 00:34:15,470
of time spent doing actual software

00:34:13,909 --> 00:34:17,030
stuff not radio stuff is understanding

00:34:15,470 --> 00:34:19,909
just the general data protocols and

00:34:17,030 --> 00:34:22,060
things like that and then I can

00:34:19,909 --> 00:34:24,139
reassemble that was a demo to show you

00:34:22,060 --> 00:34:26,240
the key thing here is the narrator does

00:34:24,139 --> 00:34:27,950
a lot of work for us but at the end of

00:34:26,240 --> 00:34:33,109
the day what goony radio is doing for us

00:34:27,950 --> 00:34:36,500
is writing Python so when I ran that

00:34:33,109 --> 00:34:39,800
sketch earlier it wrote this Python file

00:34:36,500 --> 00:34:41,329
for me and there's a lot of stuff about

00:34:39,800 --> 00:34:43,940
the GUI configuration and suff like that

00:34:41,329 --> 00:34:49,270
but once we get into the actual

00:34:43,940 --> 00:34:49,270
interesting part where

00:34:52,140 --> 00:34:58,270
so it made it a Quadra to demodulator

00:34:55,380 --> 00:35:00,790
later we'll see that we connect that to

00:34:58,270 --> 00:35:05,110
the constant offset and so this is us

00:35:00,790 --> 00:35:08,860
building up a series of api's yeah on

00:35:05,110 --> 00:35:10,510
the on the on my laptop so the over USB

00:35:08,860 --> 00:35:12,220
I'm receiving this stream of 20 million

00:35:10,510 --> 00:35:13,540
samples per second there are software

00:35:12,220 --> 00:35:14,710
radios where you can run this code on

00:35:13,540 --> 00:35:20,800
the software radio as well which is

00:35:14,710 --> 00:35:23,410
really cool yeah okay so what else can

00:35:20,800 --> 00:35:24,910
we do with Radio what do we learn so

00:35:23,410 --> 00:35:26,890
this whole property of radio which is

00:35:24,910 --> 00:35:28,240
that multiplying by a sine wave shifts

00:35:26,890 --> 00:35:31,510
the spectrum up and down the radio

00:35:28,240 --> 00:35:33,940
signal so what if I transmit a signal

00:35:31,510 --> 00:35:37,180
and receive it on a different antenna

00:35:33,940 --> 00:35:39,010
and then multiply it by itself by

00:35:37,180 --> 00:35:40,630
applying that maths the result is I get

00:35:39,010 --> 00:35:42,850
the cosine of the hang of the difference

00:35:40,630 --> 00:35:44,680
in phase so if I transmit a signal to

00:35:42,850 --> 00:35:46,030
that wall it bounces back and comes back

00:35:44,680 --> 00:35:48,070
at me depending on how far it was

00:35:46,030 --> 00:35:50,050
there'll be a phase offset so I can

00:35:48,070 --> 00:35:51,430
actually measure in multiples of the

00:35:50,050 --> 00:35:53,140
phase or they make multiples the

00:35:51,430 --> 00:35:55,990
wavelength I should say how far away

00:35:53,140 --> 00:35:57,550
that wall is but what if that wall is

00:35:55,990 --> 00:36:00,490
moving effectively that phase is

00:35:57,550 --> 00:36:02,800
changing over time so by looking at at a

00:36:00,490 --> 00:36:04,750
reflected wave form and applying that

00:36:02,800 --> 00:36:06,970
maths I arose I'm running through this

00:36:04,750 --> 00:36:08,350
quite fast but the what walk walked

00:36:06,970 --> 00:36:11,740
through the slides afterwards and and

00:36:08,350 --> 00:36:13,570
step by step what I receive is a sine

00:36:11,740 --> 00:36:15,010
wave at a very low frequency that

00:36:13,570 --> 00:36:16,600
corresponds to exactly to how many

00:36:15,010 --> 00:36:18,780
wavelengths per second you're moving

00:36:16,600 --> 00:36:22,180
towards me this is the Doppler effect

00:36:18,780 --> 00:36:24,100
and what if I introduce a sawtooth into

00:36:22,180 --> 00:36:25,900
my transmission wave so I can tell what

00:36:24,100 --> 00:36:28,000
the frequency difference was over time

00:36:25,900 --> 00:36:30,280
between when I transmitted it and when I

00:36:28,000 --> 00:36:32,950
received now I know how fast something's

00:36:30,280 --> 00:36:36,790
moving and how far away it is based on

00:36:32,950 --> 00:36:39,400
that receive signal so I can make a

00:36:36,790 --> 00:36:41,410
signal but from the bottom left-hand

00:36:39,400 --> 00:36:44,880
corner going around clockwise 2.4 gig

00:36:41,410 --> 00:36:48,970
rate on generator splitter amplifier

00:36:44,880 --> 00:36:52,090
mixer and then an amplifier I can build

00:36:48,970 --> 00:36:53,890
a software radio front-end which is an

00:36:52,090 --> 00:36:55,320
amplifier and an anti-aliasing low-pass

00:36:53,890 --> 00:36:57,340
filter

00:36:55,320 --> 00:37:00,980
it can drink a lot of pineapple juice

00:36:57,340 --> 00:37:02,930
and put it into a plywood

00:37:00,980 --> 00:37:04,700
and in micro Python I can do sample from

00:37:02,930 --> 00:37:07,790
I can do the analog-to-digital stuff I

00:37:04,700 --> 00:37:09,859
can do a Fourier transform I can analyze

00:37:07,790 --> 00:37:12,200
the resulting data that I got back from

00:37:09,859 --> 00:37:14,900
all that so what I've done is destined

00:37:12,200 --> 00:37:16,369
software radio with a little like the

00:37:14,900 --> 00:37:18,500
same hardware front-end of a software

00:37:16,369 --> 00:37:20,240
radio but I'm doing the algorithm which

00:37:18,500 --> 00:37:21,200
is effectively looking at the FFT and

00:37:20,240 --> 00:37:23,150
understanding what the frequency

00:37:21,200 --> 00:37:25,820
components of my response were because I

00:37:23,150 --> 00:37:26,960
know that my response I have to have to

00:37:25,820 --> 00:37:31,790
basically pull out the components of

00:37:26,960 --> 00:37:32,900
that bottom formula I can move my hand

00:37:31,790 --> 00:37:35,570
backwards and forward really quickly in

00:37:32,900 --> 00:37:37,369
front of it and that's that sine wave so

00:37:35,570 --> 00:37:39,800
just by analyzing the parameters of that

00:37:37,369 --> 00:37:43,100
sine wave I can solve for the range and

00:37:39,800 --> 00:37:44,270
distance of a thing I have a video here

00:37:43,100 --> 00:37:46,540
of someone's standing on the other side

00:37:44,270 --> 00:37:50,950
of the room breathing but okay links

00:37:46,540 --> 00:37:53,300
Sesame Street video canoe radio

00:37:50,950 --> 00:37:55,460
this is the best thing you can ever read

00:37:53,300 --> 00:37:58,760
about understanding all the theory here

00:37:55,460 --> 00:38:00,650
I found this too late in to my degree to

00:37:58,760 --> 00:38:02,900
have made a difference on my marks but I

00:38:00,650 --> 00:38:05,119
wish I had found it earlier this is a

00:38:02,900 --> 00:38:09,590
wonderful wonderful free download the

00:38:05,119 --> 00:38:14,660
PDF book spectrum ham radio definitely

00:38:09,590 --> 00:38:16,340
worth checking out the hack RF this of

00:38:14,660 --> 00:38:17,810
all the links to the amp hour here this

00:38:16,340 --> 00:38:19,190
guy Michael Osman who may be a hacker

00:38:17,810 --> 00:38:21,080
eff has produced some incredible

00:38:19,190 --> 00:38:23,210
training materials great circuits calm

00:38:21,080 --> 00:38:25,070
such SDR series of a thing eight videos

00:38:23,210 --> 00:38:29,450
they explain this in a lot more detail

00:38:25,070 --> 00:38:32,300
and a lot better and slower and he's got

00:38:29,450 --> 00:38:35,060
this exactly demo from Def Con where he

00:38:32,300 --> 00:38:40,820
does dsss on a RF to receive I think GPS

00:38:35,060 --> 00:38:42,859
data bunch of useful tools other SDR

00:38:40,820 --> 00:38:44,540
hardware so more features and then the

00:38:42,859 --> 00:38:45,770
RTL SDR is worth mentioning cuz it's

00:38:44,540 --> 00:38:49,310
only twenty dollars but only does

00:38:45,770 --> 00:38:51,470
receive and then a bunch of different

00:38:49,310 --> 00:38:53,420
Python tools so so P SDR is a bunch of

00:38:51,470 --> 00:38:55,250
of SDR libraries that have Python

00:38:53,420 --> 00:38:56,510
bindings so this is the approach where I

00:38:55,250 --> 00:38:58,550
just want to write Python code of

00:38:56,510 --> 00:39:02,030
receive samples and compose the bits

00:38:58,550 --> 00:39:04,310
together shiny STI is a really

00:39:02,030 --> 00:39:06,109
interesting one it runs a web server so

00:39:04,310 --> 00:39:07,609
you can put your radio somewhere run a

00:39:06,109 --> 00:39:09,380
web server on it and then somewhere else

00:39:07,609 --> 00:39:11,990
do all the front-end radio stuff over

00:39:09,380 --> 00:39:14,070
over the network gqx is the interactive

00:39:11,990 --> 00:39:16,200
visualization tool I was talking about

00:39:14,070 --> 00:39:17,670
a bunch of interesting things about the

00:39:16,200 --> 00:39:19,800
radar look up a guy named Greg Shabbat

00:39:17,670 --> 00:39:22,560
and all of those links you can read much

00:39:19,800 --> 00:39:23,100
more about the radar stuff thank you

00:39:22,560 --> 00:39:25,680
very much

00:39:23,100 --> 00:39:27,570
um please come and see me I'll be here

00:39:25,680 --> 00:39:29,100
on the Sprint and around the next couple

00:39:27,570 --> 00:39:30,600
of days we'd love to go through this a

00:39:29,100 --> 00:39:32,310
lot slower in more detail and if you had

00:39:30,600 --> 00:39:36,150
feedback please let me know as well but

00:39:32,310 --> 00:39:37,200
um thank you very much thanks Jim I hope

00:39:36,150 --> 00:39:39,390
you're all paying attention there'll be

00:39:37,200 --> 00:39:41,880
a test on quadrature demodulation at the

00:39:39,390 --> 00:39:44,760
end of the day look we we're pretty

00:39:41,880 --> 00:39:47,970
tight on timing now so I think it might

00:39:44,760 --> 00:39:49,770
be best to to thank Jim give him the mug

00:39:47,970 --> 00:39:52,230
of awesomeness that all speakers are

00:39:49,770 --> 00:39:59,250
going to be receiving today so here we

00:39:52,230 --> 00:40:00,960
go and if you'd like to if you'd like to

00:39:59,250 --> 00:40:02,910
ask any questions I'm sure

00:40:00,960 --> 00:40:05,510
Jim's happy to sort of to hang around

00:40:02,910 --> 00:40:09,180
and answer them morning teas on now

00:40:05,510 --> 00:40:11,340
we're coming back here at 10:45 if I

00:40:09,180 --> 00:40:14,630
could just ask if all of the speakers

00:40:11,340 --> 00:40:14,630

YouTube URL: https://www.youtube.com/watch?v=BlJSjRDSLu0


