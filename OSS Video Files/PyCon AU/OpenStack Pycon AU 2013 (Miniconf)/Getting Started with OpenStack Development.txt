Title: Getting Started with OpenStack Development
Publication date: 2013-07-12
Playlist: OpenStack Pycon AU 2013 (Miniconf)
Description: 
	PyCon Australia is the national conference for users of the Python Programming Language. In July 2013, we're returning to Hobart, bringing together students, enthusiasts, and professionals with a love of Python from around Australia, and from all over the World. 

July 5--7 2013, Hobart, Tasmania
Captions: 
	00:00:00,120 --> 00:00:05,490
Thank You Rackspace for employee Michael

00:00:02,399 --> 00:00:08,010
he's a great gun and yes the reason he's

00:00:05,490 --> 00:00:10,679
not here is he's just having well his

00:00:08,010 --> 00:00:13,230
wife was having a child so he apologizes

00:00:10,679 --> 00:00:16,680
he couldn't make it and we've got Robert

00:00:13,230 --> 00:00:22,289
as standard for Michael so please take

00:00:16,680 --> 00:00:22,910
it away Robert thank you now I get a

00:00:22,289 --> 00:00:29,550
please

00:00:22,910 --> 00:00:32,270
um right so Michael is probably much

00:00:29,550 --> 00:00:38,160
better suited to present this as he's a

00:00:32,270 --> 00:00:39,570
core Nova reviewer and also on the

00:00:38,160 --> 00:00:41,370
security team and he talked about both

00:00:39,570 --> 00:00:43,770
of these things during it so I'm going

00:00:41,370 --> 00:00:51,050
to do my best to do it justice and thank

00:00:43,770 --> 00:00:53,850
you for your patience so Michael has a

00:00:51,050 --> 00:00:56,670
very very positive idea he wants more

00:00:53,850 --> 00:00:58,469
people to contribute to OpenStack get

00:00:56,670 --> 00:01:00,660
more people reviewing get more people

00:00:58,469 --> 00:01:02,100
can code up and patches up it's a big

00:01:00,660 --> 00:01:06,420
project there's a lot of areas that

00:01:02,100 --> 00:01:07,979
people can contribute to and the in

00:01:06,420 --> 00:01:11,909
particular he was presenting us at the

00:01:07,979 --> 00:01:15,509
OpenStack summit in Portland and I think

00:01:11,909 --> 00:01:17,939
it was Portland yeah upon if you're at

00:01:15,509 --> 00:01:19,439
the summit and you're not there selling

00:01:17,939 --> 00:01:21,420
some hardware switch or something like

00:01:19,439 --> 00:01:22,799
that then you really want to be able to

00:01:21,420 --> 00:01:24,210
develop and contribute directly to

00:01:22,799 --> 00:01:26,460
OpenStack because it's much more

00:01:24,210 --> 00:01:28,229
productive to say here is the change I

00:01:26,460 --> 00:01:29,729
want than to commit someone else to

00:01:28,229 --> 00:01:31,880
change is necessary wait while they do

00:01:29,729 --> 00:01:31,880
it

00:01:32,570 --> 00:01:38,520
so he took people through giving an

00:01:36,750 --> 00:01:39,869
actual patch up and what we're going to

00:01:38,520 --> 00:01:42,299
do in the hackfest this afternoon will

00:01:39,869 --> 00:01:44,670
hopefully be very much the same thing so

00:01:42,299 --> 00:01:50,850
this is right in line with the sort of

00:01:44,670 --> 00:01:52,950
way we're structuring the day now a lot

00:01:50,850 --> 00:01:55,140
of projects have this idea of a core a

00:01:52,950 --> 00:01:59,329
core member or quark and letter but

00:01:55,140 --> 00:02:01,439
OpenStack has core reviewers and the

00:01:59,329 --> 00:02:04,229
definition of a core reviewer is someone

00:02:01,439 --> 00:02:06,780
who is consistently giving good and

00:02:04,229 --> 00:02:09,380
effective reviews on an extended period

00:02:06,780 --> 00:02:09,380
of time like

00:02:10,829 --> 00:02:14,480
sorry once once again

00:02:15,709 --> 00:02:21,540
hay fever I think so a a call reviewer

00:02:19,769 --> 00:02:23,579
is someone who maybe has been doing two

00:02:21,540 --> 00:02:25,409
reviews a day with an over over a three

00:02:23,579 --> 00:02:26,609
month period they've probably written

00:02:25,409 --> 00:02:28,560
the reasonable amount of code as well

00:02:26,609 --> 00:02:31,500
but the key thing is that weird even

00:02:28,560 --> 00:02:32,969
more code so the familiar with all of

00:02:31,500 --> 00:02:35,010
the code base when someone comes in they

00:02:32,969 --> 00:02:38,400
can say hey this patch this looks very

00:02:35,010 --> 00:02:40,049
similar this thing over there why don't

00:02:38,400 --> 00:02:42,239
you try and combine them rather than

00:02:40,049 --> 00:02:45,930
adding duplicate code into the code base

00:02:42,239 --> 00:02:49,349
so you can start building and keeping a

00:02:45,930 --> 00:02:52,319
tradition around what code looks like

00:02:49,349 --> 00:02:54,569
where code should live and a lot of that

00:02:52,319 --> 00:02:56,250
stuff can get written down as rules that

00:02:54,569 --> 00:02:57,599
you can encode but then people still

00:02:56,250 --> 00:02:59,340
need to have them internalize they need

00:02:57,599 --> 00:03:01,230
to know to look for those when they're

00:02:59,340 --> 00:03:03,629
doing a review and so that's the

00:03:01,230 --> 00:03:06,689
difference between any one of us who can

00:03:03,629 --> 00:03:08,639
just review and a core reviewer who can

00:03:06,689 --> 00:03:12,659
say yes this meets the standards it

00:03:08,639 --> 00:03:15,120
meets the layout we want it meets the

00:03:12,659 --> 00:03:18,870
the style guide that we have and this is

00:03:15,120 --> 00:03:20,579
okay to come into the code base becoming

00:03:18,870 --> 00:03:22,439
the core reviewer is basically just a

00:03:20,579 --> 00:03:24,419
matter of acting like a cool reviewer

00:03:22,439 --> 00:03:29,189
for an extended period of time and then

00:03:24,419 --> 00:03:32,280
they'll notice you the team size of the

00:03:29,189 --> 00:03:35,310
the review team is usually kept fairly

00:03:32,280 --> 00:03:37,739
small like 8 or 10 people and I believe

00:03:35,310 --> 00:03:39,590
that's mainly to keep the ability to

00:03:37,739 --> 00:03:42,810
coordinate the traditions and the style

00:03:39,590 --> 00:03:45,659
consistency effect of having a big team

00:03:42,810 --> 00:03:47,189
it's much easier to get skew occurring

00:03:45,659 --> 00:03:49,109
between different reviewers and once

00:03:47,189 --> 00:03:50,250
that creeps into the codebase you've

00:03:49,109 --> 00:03:52,290
then got the position where you can't

00:03:50,250 --> 00:03:54,449
say hey this is our coding style anymore

00:03:52,290 --> 00:03:55,979
because actually yesterday someone did

00:03:54,449 --> 00:03:57,629
something completely different or

00:03:55,979 --> 00:03:59,810
different enough to start being a

00:03:57,629 --> 00:03:59,810
problem

00:04:00,360 --> 00:04:05,070
so the first thing you need if you're

00:04:03,480 --> 00:04:06,770
going to contribute something to

00:04:05,070 --> 00:04:08,790
OpenStack is a launchpad account

00:04:06,770 --> 00:04:11,370
Launchpad is a web service run by

00:04:08,790 --> 00:04:14,280
canonical and openstep project uses it

00:04:11,370 --> 00:04:17,370
for bug tracking for blueprints tracking

00:04:14,280 --> 00:04:18,720
which is the conceptual design review

00:04:17,370 --> 00:04:20,940
process where there was discussion

00:04:18,720 --> 00:04:22,710
earlier on today about is there a kind

00:04:20,940 --> 00:04:24,990
of meta level it's not the code review

00:04:22,710 --> 00:04:27,120
but is this conceptually a good idea is

00:04:24,990 --> 00:04:29,250
the approach correct and that's done at

00:04:27,120 --> 00:04:32,880
the design sessions at the summit and is

00:04:29,250 --> 00:04:34,650
encoded in blueprints some group

00:04:32,880 --> 00:04:37,290
management has done in Launchpad but I

00:04:34,650 --> 00:04:39,690
believe the foundation is in front Reem

00:04:37,290 --> 00:04:41,460
has largely moved away from that and in

00:04:39,690 --> 00:04:43,290
particular the bug tracking groups are

00:04:41,460 --> 00:04:47,070
still on Launchpad so if you want to be

00:04:43,290 --> 00:04:48,960
a able to set bug priority and and do

00:04:47,070 --> 00:04:51,210
triage and more people need to do that

00:04:48,960 --> 00:04:54,990
all the time you can join those groups

00:04:51,210 --> 00:04:56,520
on Launchpad very easily some mailing

00:04:54,990 --> 00:05:00,300
list on Launchpad most of them are on

00:04:56,520 --> 00:05:04,110
list OpenStack dot in now and more and

00:05:00,300 --> 00:05:07,970
migrating over every open set project

00:05:04,110 --> 00:05:10,440
gets a launchpad project and this is

00:05:07,970 --> 00:05:11,850
just you know the way it's done that

00:05:10,440 --> 00:05:14,730
gives you your bug tracker why not

00:05:11,850 --> 00:05:16,410
github or why not doesn't matter

00:05:14,730 --> 00:05:19,169
Launchpad is the thing that was set up

00:05:16,410 --> 00:05:22,650
at the beginning and it's fit for

00:05:19,169 --> 00:05:25,710
purpose so it's still being used there

00:05:22,650 --> 00:05:27,750
is discussion about changing this in

00:05:25,710 --> 00:05:30,000
particular to deal with the needs of

00:05:27,750 --> 00:05:34,620
designers who want to capture graphic

00:05:30,000 --> 00:05:36,480
images and have a richer forum for

00:05:34,620 --> 00:05:38,610
looking at the design of things which

00:05:36,480 --> 00:05:41,190
focal working on the plumbing generally

00:05:38,610 --> 00:05:49,140
don't need but that still hasn't come to

00:05:41,190 --> 00:05:50,760
any sort of conclusion yet and as as

00:05:49,140 --> 00:05:53,370
mike says keep the username short and

00:05:50,760 --> 00:05:56,700
descriptive so the default one is the

00:05:53,370 --> 00:05:58,860
first part of your email address with a

00:05:56,700 --> 00:06:00,540
hyphen after with the domain if it's if

00:05:58,860 --> 00:06:02,640
that one's already taken you probably

00:06:00,540 --> 00:06:07,229
want to change that put your IRC handle

00:06:02,640 --> 00:06:09,600
in there go the launch pad on the top

00:06:07,229 --> 00:06:10,620
right click on login and register and it

00:06:09,600 --> 00:06:12,570
will step you through creating an

00:06:10,620 --> 00:06:13,320
account if you've already got one great

00:06:12,570 --> 00:06:15,270
if you

00:06:13,320 --> 00:06:16,980
not going to send a patch-up today don't

00:06:15,270 --> 00:06:22,410
worry about doing that otherwise you

00:06:16,980 --> 00:06:24,240
should do that now the next thing after

00:06:22,410 --> 00:06:26,820
you get a launchpad account is to get a

00:06:24,240 --> 00:06:31,140
jurors account and JIRA is the the code

00:06:26,820 --> 00:06:32,880
review system that OpenStack uses again

00:06:31,140 --> 00:06:35,760
you go to the website reviewed elope

00:06:32,880 --> 00:06:39,180
inspected org top right click on sign in

00:06:35,760 --> 00:06:40,200
and it uses open ID on two launch pad so

00:06:39,180 --> 00:06:42,150
it will take you straight back to

00:06:40,200 --> 00:06:45,450
launchpad and ask you to allow it to

00:06:42,150 --> 00:06:48,210
sign in now the reason this is really

00:06:45,450 --> 00:06:50,280
important is not just that you need to

00:06:48,210 --> 00:06:52,140
be able to go into the review system and

00:06:50,280 --> 00:06:53,750
say hey it no it doesn't need to be this

00:06:52,140 --> 00:06:56,400
way when someone gives you a review

00:06:53,750 --> 00:06:59,220
saying something should be different but

00:06:56,400 --> 00:07:00,420
you can't actually upload code to the

00:06:59,220 --> 00:07:02,760
review system until you've got an

00:07:00,420 --> 00:07:04,170
account so you have to do this to get

00:07:02,760 --> 00:07:06,960
your patch up there for people to see it

00:07:04,170 --> 00:07:08,850
you could put it on github but nobody in

00:07:06,960 --> 00:07:11,060
the OpenStack community goes and look

00:07:08,850 --> 00:07:16,380
some good hub for patches it would just

00:07:11,060 --> 00:07:18,570
rot if you do that you also need to set

00:07:16,380 --> 00:07:20,040
an SSH key they used to auto sync them

00:07:18,570 --> 00:07:22,200
from launchpad but apparently there's

00:07:20,040 --> 00:07:25,260
some reliability issues so no longer

00:07:22,200 --> 00:07:28,800
gets done once you log in on the top

00:07:25,260 --> 00:07:32,610
right you get a there's a screenshot

00:07:28,800 --> 00:07:34,500
here somewhere nope he used natural

00:07:32,610 --> 00:07:37,650
browser in the presentation I will have

00:07:34,500 --> 00:07:38,970
to show you that separately but up the

00:07:37,650 --> 00:07:40,740
top right basically where the arrow is

00:07:38,970 --> 00:07:44,610
you get a settings link once you sign in

00:07:40,740 --> 00:07:45,900
and you can use that to add a key I pray

00:07:44,610 --> 00:07:48,000
I'm going to assume everyone here is

00:07:45,900 --> 00:07:51,690
fairly familiar with that you copy your

00:07:48,000 --> 00:07:57,960
public key not the private key into the

00:07:51,690 --> 00:07:58,590
web form and away you go and here's the

00:07:57,960 --> 00:08:01,320
kicker

00:07:58,590 --> 00:08:03,840
OpenStack has a contributor license

00:08:01,320 --> 00:08:05,070
agreement it's this is copyright license

00:08:03,840 --> 00:08:06,330
agreement I believe is actually a

00:08:05,070 --> 00:08:08,580
contributor license agreement not a

00:08:06,330 --> 00:08:12,390
copyright license agreement so ignore

00:08:08,580 --> 00:08:14,490
that part of it if you're a corporate

00:08:12,390 --> 00:08:16,230
you need your your corporate law

00:08:14,490 --> 00:08:18,210
attorney or whoever to sign the

00:08:16,230 --> 00:08:20,820
corporate version of it and once that's

00:08:18,210 --> 00:08:21,960
done then you can upload code and the

00:08:20,820 --> 00:08:23,460
reason you can't upload code without

00:08:21,960 --> 00:08:24,020
this done is that opens that can't

00:08:23,460 --> 00:08:27,229
accept

00:08:24,020 --> 00:08:28,789
code without the CLA and they need that

00:08:27,229 --> 00:08:34,330
because the CLA is what gives them the

00:08:28,789 --> 00:08:36,800
right to redistribute and and so on so

00:08:34,330 --> 00:08:38,990
to avoid any sort of taint or whatever

00:08:36,800 --> 00:08:40,370
they just block it out completely so the

00:08:38,990 --> 00:08:42,589
very first thing you do once you've done

00:08:40,370 --> 00:08:45,110
that though you've been in the position

00:08:42,589 --> 00:08:46,730
to get code uploaded and reviewed you

00:08:45,110 --> 00:08:47,870
still need to get involved in the

00:08:46,730 --> 00:08:50,300
development community though so you

00:08:47,870 --> 00:08:54,470
should join mailing lists and you should

00:08:50,300 --> 00:08:56,089
join IRC channels and so on on the

00:08:54,470 --> 00:08:58,070
stipend sector at all this is list up

00:08:56,089 --> 00:09:02,360
here announce tier Foundation Docs

00:08:58,070 --> 00:09:04,910
operators security and on Launchpad

00:09:02,360 --> 00:09:07,850
tilde OpenStack is that the users

00:09:04,910 --> 00:09:09,890
mailing lists there I'm not actually on

00:09:07,850 --> 00:09:12,160
all of these so I don't know how much it

00:09:09,890 --> 00:09:14,360
really matters if you're on them but

00:09:12,160 --> 00:09:15,410
it's probably a good idea depends on

00:09:14,360 --> 00:09:21,490
what you're going to be doing to a

00:09:15,410 --> 00:09:24,140
degree announced is very low volume div

00:09:21,490 --> 00:09:30,880
varies between completely silent and

00:09:24,140 --> 00:09:30,880
insanely busy operators is quite quiet

00:09:32,110 --> 00:09:36,110
these channels you should be if you're

00:09:34,880 --> 00:09:38,329
doing development you really want to be

00:09:36,110 --> 00:09:39,860
on the OpenStack dev channel the infra

00:09:38,329 --> 00:09:41,450
channel is where discussions about

00:09:39,860 --> 00:09:44,540
problems with Garrett

00:09:41,450 --> 00:09:46,520
problems with Jenkins ORS all occur so

00:09:44,540 --> 00:09:47,930
if you are trying to get your patch

00:09:46,520 --> 00:09:50,779
landed you need not what's going on

00:09:47,930 --> 00:09:56,660
that's the place to hang out or release

00:09:50,779 --> 00:10:00,589
to join if legislative a microphone is

00:09:56,660 --> 00:10:02,779
the mailing lists because OpenStack dev

00:10:00,589 --> 00:10:05,089
sometimes does get completely nuts

00:10:02,779 --> 00:10:06,950
filled with messages I think one day I

00:10:05,089 --> 00:10:09,079
saw something like two hundred was was

00:10:06,950 --> 00:10:12,110
the max I've seen in one day if you

00:10:09,079 --> 00:10:14,149
don't want that much spam there our

00:10:12,110 --> 00:10:15,920
topic filters so people put inside

00:10:14,149 --> 00:10:17,870
square brackets the particular product

00:10:15,920 --> 00:10:19,760
they're working on like Nova or Swift or

00:10:17,870 --> 00:10:21,860
something like that and you can set up

00:10:19,760 --> 00:10:23,630
your mail client to filter that so you

00:10:21,860 --> 00:10:25,700
don't get completely drowned if one of

00:10:23,630 --> 00:10:28,880
the other OpenStack projects does crazy

00:10:25,700 --> 00:10:31,360
things yeah and you can also subscribe

00:10:28,880 --> 00:10:34,620
and turn off mail delivery and then use

00:10:31,360 --> 00:10:37,140
one of the online

00:10:34,620 --> 00:10:38,580
the website names gone from a hit but

00:10:37,140 --> 00:10:40,680
there's the sites that collect the

00:10:38,580 --> 00:10:46,050
listen you can just read them in the web

00:10:40,680 --> 00:10:50,160
UI if you want to do it that way so with

00:10:46,050 --> 00:10:51,510
IRC channels if you live on IRC just

00:10:50,160 --> 00:10:53,430
join them all if you don't then I

00:10:51,510 --> 00:10:55,110
suggest you join them when you want they

00:10:53,430 --> 00:10:56,400
have a discussion about stuff and lots

00:10:55,110 --> 00:11:00,920
of people just sign in and out all the

00:10:56,400 --> 00:11:00,920
time so it's cool to do it either way

00:11:01,430 --> 00:11:05,310
there are but to a degree

00:11:04,110 --> 00:11:07,410
you'll get told to go there when it

00:11:05,310 --> 00:11:09,750
matters like if you join here OpenStack

00:11:07,410 --> 00:11:11,790
Neutron or quantum I think the our

00:11:09,750 --> 00:11:13,320
teacher hasn't renamed yet there is

00:11:11,790 --> 00:11:16,500
absolutely no point being there because

00:11:13,320 --> 00:11:19,380
none of the reviewers live there so you

00:11:16,500 --> 00:11:21,480
can't ask for anything except occasional

00:11:19,380 --> 00:11:24,210
discussion with other yeah it's just

00:11:21,480 --> 00:11:26,580
it's not as an effect of a channel as

00:11:24,210 --> 00:11:27,960
say OpenStack Nova where a lot of people

00:11:26,580 --> 00:11:32,730
hang out and yeah

00:11:27,960 --> 00:11:34,530
so this will get you in the door and -

00:11:32,730 --> 00:11:37,410
ative has that probably the still the

00:11:34,530 --> 00:11:40,040
largest cross-section of people so it's

00:11:37,410 --> 00:11:41,850
not that not valuable it's that

00:11:40,040 --> 00:11:43,350
cognitive overload you're going to do

00:11:41,850 --> 00:11:46,020
one patch today and you want to join

00:11:43,350 --> 00:11:51,120
seven channels as maybe a bit out of

00:11:46,020 --> 00:11:53,520
kilter so I can't remember what he said

00:11:51,120 --> 00:11:57,180
when the no wait seriously thing was

00:11:53,520 --> 00:12:00,780
there yeah I think that's what he was

00:11:57,180 --> 00:12:03,180
talking about and I mean it y'all dance

00:12:00,780 --> 00:12:06,030
right he he said look this this is like

00:12:03,180 --> 00:12:07,260
this is a lot of infrastructure you need

00:12:06,030 --> 00:12:08,790
to have why do you need to have that

00:12:07,260 --> 00:12:11,040
much infrastructure to commit to an open

00:12:08,790 --> 00:12:14,460
sore or to get a patch up for review in

00:12:11,040 --> 00:12:16,380
an open source project and his theory

00:12:14,460 --> 00:12:18,590
and I think I think I agree with them is

00:12:16,380 --> 00:12:21,690
there's a scale problem we've got the

00:12:18,590 --> 00:12:23,460
structural stuff to protect people who

00:12:21,690 --> 00:12:25,890
are contributing so that organizations

00:12:23,460 --> 00:12:27,750
feel comfortable contributing that's the

00:12:25,890 --> 00:12:29,550
legal aspects of it and you've got the

00:12:27,750 --> 00:12:31,770
social aspects of coordinating over a

00:12:29,550 --> 00:12:35,280
thousand developers it's not trivial to

00:12:31,770 --> 00:12:37,410
do and we're doing it in a complete

00:12:35,280 --> 00:12:38,910
democracy it's not like Linux where

00:12:37,410 --> 00:12:39,750
there's aloneness who'll say hey it's

00:12:38,910 --> 00:12:42,740
got to be this way

00:12:39,750 --> 00:12:45,529
every now and then there's actually

00:12:42,740 --> 00:12:47,180
no one person who can sit down and say

00:12:45,529 --> 00:12:49,610
that everyone's voted into their roles

00:12:47,180 --> 00:12:52,370
by people who have seen them doing a

00:12:49,610 --> 00:12:53,660
good job and they can lose it you know

00:12:52,370 --> 00:12:56,180
if they don't keep doing a good job

00:12:53,660 --> 00:13:03,350
he'll stop so it's quite a different

00:12:56,180 --> 00:13:04,940
structure so this these instructions are

00:13:03,350 --> 00:13:05,510
not the instructions that were doing for

00:13:04,940 --> 00:13:07,520
the hackfest

00:13:05,510 --> 00:13:10,100
this is for setting up a development

00:13:07,520 --> 00:13:12,740
environment on your laptop without a VM

00:13:10,100 --> 00:13:16,580
so without devstack and a warning never

00:13:12,740 --> 00:13:19,399
ever ever ever ever ever ever ever run

00:13:16,580 --> 00:13:22,160
div stack on your machine run it inside

00:13:19,399 --> 00:13:23,420
a VM on your machine if you run it on

00:13:22,160 --> 00:13:25,720
your machine you will never get your

00:13:23,420 --> 00:13:31,070
machine to work the way it did before

00:13:25,720 --> 00:13:34,130
I'm serious it changes VM right-back

00:13:31,070 --> 00:13:37,220
ratios and adds bridges and installs

00:13:34,130 --> 00:13:38,870
open V switch if you aren't familiar

00:13:37,220 --> 00:13:40,370
with all of these bits it will be a

00:13:38,870 --> 00:13:42,920
devil of a time for you to track it down

00:13:40,370 --> 00:13:44,420
and undo it and it's changing it to be

00:13:42,920 --> 00:13:47,779
appropriate for something that's hosting

00:13:44,420 --> 00:13:52,070
KVM VMs for a test cloud and that's

00:13:47,779 --> 00:13:53,570
probably not what your own machine is so

00:13:52,070 --> 00:13:57,140
these instructions here will let you run

00:13:53,570 --> 00:13:59,690
tox eg PI 27 and run the test suite for

00:13:57,140 --> 00:14:02,060
nova without having done deal stack or

00:13:59,690 --> 00:14:04,700
anything else but the vm on that that

00:14:02,060 --> 00:14:06,529
stuff is a much faster way all of these

00:14:04,700 --> 00:14:09,730
steps are already done as part of the

00:14:06,529 --> 00:14:09,730
installation of devstack

00:14:10,390 --> 00:14:16,070
generally Jarek creates a topic when you

00:14:14,390 --> 00:14:18,079
upload a branch based on the name of the

00:14:16,070 --> 00:14:20,149
branch so creating a local branch before

00:14:18,079 --> 00:14:22,430
you push your code up for review tells

00:14:20,149 --> 00:14:24,680
you of the name to show other people

00:14:22,430 --> 00:14:26,779
when they see it in the review so you

00:14:24,680 --> 00:14:28,730
can just push everything from master and

00:14:26,779 --> 00:14:30,350
some people do that but if you've got

00:14:28,730 --> 00:14:31,579
multiple patches in flight some of them

00:14:30,350 --> 00:14:33,170
going to land before others and you

00:14:31,579 --> 00:14:34,490
probably don't want to force a

00:14:33,170 --> 00:14:37,070
dependency chain where none actually

00:14:34,490 --> 00:14:38,779
exists so it's best to create lots and

00:14:37,070 --> 00:14:40,520
lots of little branches and only where

00:14:38,779 --> 00:14:45,610
things are actually connected keep them

00:14:40,520 --> 00:14:45,610
as a multiple comments on one branch

00:14:45,690 --> 00:14:53,200
Jarret works and sort of idealized get

00:14:51,130 --> 00:14:55,300
sense which is to say that each commit

00:14:53,200 --> 00:14:57,630
that goes through to master was an

00:14:55,300 --> 00:15:00,070
independent commit with no other baggage

00:14:57,630 --> 00:15:02,320
what this means is that you don't push

00:15:00,070 --> 00:15:04,510
up some code and then do some commits to

00:15:02,320 --> 00:15:06,580
fix it and push those up as additional

00:15:04,510 --> 00:15:09,010
commits to zero what you do is you just

00:15:06,580 --> 00:15:11,050
keep rebasing and editing your local

00:15:09,010 --> 00:15:12,820
commit and amending it and you keep

00:15:11,050 --> 00:15:14,740
replacing the commit that Garrett is

00:15:12,820 --> 00:15:15,910
reviewing until it gets approved and

00:15:14,740 --> 00:15:20,920
then goes through a merge and land

00:15:15,910 --> 00:15:22,750
process this can be quite a shock for

00:15:20,920 --> 00:15:23,920
people who are used to different ways of

00:15:22,750 --> 00:15:25,360
working so if people who work with

00:15:23,920 --> 00:15:26,860
github for example where they often will

00:15:25,360 --> 00:15:30,600
just push up incremental commits rather

00:15:26,860 --> 00:15:30,600
than the completely rebased patch

00:15:31,440 --> 00:15:35,490
Michael fixed a patch in the

00:15:33,310 --> 00:15:38,680
presentation four months ago this is not

00:15:35,490 --> 00:15:43,750
I'm not Michael but I'm going to I'm

00:15:38,680 --> 00:15:45,970
going to talk you through it's not that

00:15:43,750 --> 00:15:47,230
can't fix a patch is that I probably

00:15:45,970 --> 00:15:49,180
can't do this bit of a justice

00:15:47,230 --> 00:15:51,520
particularly as the bug is closed

00:15:49,180 --> 00:15:52,870
I don't want to close them any of the

00:15:51,520 --> 00:15:56,529
bugs we've got reserved for the heck

00:15:52,870 --> 00:15:59,050
fest this afternoon but the interesting

00:15:56,529 --> 00:16:01,209
bits aren't actually watching and do it

00:15:59,050 --> 00:16:03,550
it's having a look at how you take a bug

00:16:01,209 --> 00:16:05,339
report and figure out what's going on so

00:16:03,550 --> 00:16:08,709
this is the sort of trace that you get

00:16:05,339 --> 00:16:10,000
out of an open stack log file when

00:16:08,709 --> 00:16:17,709
something that's gone wrong and this is

00:16:10,000 --> 00:16:18,910
what was in the bug report now that I

00:16:17,709 --> 00:16:20,529
don't know if you guys can see the red

00:16:18,910 --> 00:16:25,470
dot I can't but that's my colorblindness

00:16:20,529 --> 00:16:27,520
of work so at the top that instanceid

00:16:25,470 --> 00:16:29,620
that's generally the thing you want to

00:16:27,520 --> 00:16:30,279
grip on when you're debugging so if

00:16:29,620 --> 00:16:32,050
something's gone wrong

00:16:30,279 --> 00:16:34,089
if novelist shows an instance is an

00:16:32,050 --> 00:16:36,520
error take the hood for the instance and

00:16:34,089 --> 00:16:40,270
just grip every log file and stage of

00:16:36,520 --> 00:16:42,600
our log for that instance ID and then

00:16:40,270 --> 00:16:47,260
you'll get the actual Python trace back

00:16:42,600 --> 00:16:50,200
captured and then you can see unwind

00:16:47,260 --> 00:16:52,090
most of the stress back here is the RPC

00:16:50,200 --> 00:16:53,740
layer being very very proud that

00:16:52,090 --> 00:17:01,690
successfully reported in the error that

00:16:53,740 --> 00:17:03,760
occurred somewhere else so when you see

00:17:01,690 --> 00:17:05,709
the RPC stuff in there you can pretty

00:17:03,760 --> 00:17:08,949
much just ignore all of that the thing

00:17:05,709 --> 00:17:10,780
that matters here as you can see the

00:17:08,949 --> 00:17:13,329
very bottom line and very top line have

00:17:10,780 --> 00:17:17,380
exactly the same error and that's that's

00:17:13,329 --> 00:17:22,000
the actual error which is a key error

00:17:17,380 --> 00:17:24,820
hostname is not present in the code

00:17:22,000 --> 00:17:25,839
about that line so there's one

00:17:24,820 --> 00:17:29,800
interesting thing will be whether or not

00:17:25,839 --> 00:17:32,920
that code still exists so here Michael

00:17:29,800 --> 00:17:37,420
called it out right so no the the live

00:17:32,920 --> 00:17:46,000
driver PI right so he didn't some

00:17:37,420 --> 00:17:51,760
performance out to the bar right you

00:17:46,000 --> 00:17:54,520
probably want a bigger font now where

00:17:51,760 --> 00:17:59,970
did that presentation go we're looking

00:17:54,520 --> 00:17:59,970
at Nova compute managers of Pi

00:18:05,820 --> 00:18:11,500
and somewhere near line 3,000 in pre

00:18:09,490 --> 00:18:15,190
live migration so I'll probably just

00:18:11,500 --> 00:18:17,460
search for pre live migration and we'll

00:18:15,190 --> 00:18:28,530
find a function here that looks

00:18:17,460 --> 00:18:28,530
plausible but we were looking for

00:18:38,559 --> 00:18:55,269
nova libvirt driver pi r yep thank you

00:18:49,749 --> 00:18:56,980
for the bug fix so one of the problems

00:18:55,269 --> 00:19:04,509
we get in a lot of these sorts of

00:18:56,980 --> 00:19:07,360
functions as they get quite windy anyway

00:19:04,509 --> 00:19:10,389
so this locals thing is something that

00:19:07,360 --> 00:19:12,009
I've fixed but what I would look that

00:19:10,389 --> 00:19:14,080
what that looks like to me is that they

00:19:12,009 --> 00:19:15,580
were expecting the symbol that the

00:19:14,080 --> 00:19:18,100
variable hostname to be present in the

00:19:15,580 --> 00:19:20,499
local context and the error though they

00:19:18,100 --> 00:19:24,240
were trying to print was blowing up

00:19:20,499 --> 00:19:27,460
because there was no longer sit there so

00:19:24,240 --> 00:19:30,070
if we look at the I bet you that they

00:19:27,460 --> 00:19:32,590
yeah so locals is not there anymore

00:19:30,070 --> 00:19:33,970
because it led to these sorts of bugs so

00:19:32,590 --> 00:19:36,039
there's been a cleanup effort in the

00:19:33,970 --> 00:19:38,080
last few months and Nova to just remove

00:19:36,039 --> 00:19:40,690
all of that code and instead they

00:19:38,080 --> 00:19:42,610
explicitly format the local variables

00:19:40,690 --> 00:19:44,080
that they want to have there and what

00:19:42,610 --> 00:19:51,129
was the one that was missing it was

00:19:44,080 --> 00:19:53,320
missing host name so we've got get

00:19:51,129 --> 00:19:55,119
hypervisor host name that the codes

00:19:53,320 --> 00:20:01,779
being reflected I can't show you the bug

00:19:55,119 --> 00:20:04,419
because it's been fixed I'm sorry but

00:20:01,779 --> 00:20:05,919
the basic process of starting at the

00:20:04,419 --> 00:20:07,210
back tray start in the bottom line of a

00:20:05,919 --> 00:20:08,769
going and finding the code and then

00:20:07,210 --> 00:20:12,549
sniffing around until you figure out

00:20:08,769 --> 00:20:15,580
what goes on is is going to apply all

00:20:12,549 --> 00:20:18,090
the time so the next thing he did is ran

00:20:15,580 --> 00:20:18,090
the tests

00:20:21,250 --> 00:20:29,360
so I use virtually and very very heavily

00:20:26,510 --> 00:20:33,470
and I also use Alex II so those are just

00:20:29,360 --> 00:20:34,970
at me a second I can't remember if I

00:20:33,470 --> 00:20:44,330
have an Alex II container for this or

00:20:34,970 --> 00:20:53,540
not I can't read my passwords either how

00:20:44,330 --> 00:20:56,660
we going for time Tom so I do this

00:20:53,540 --> 00:20:58,310
because I'm terrified of horrible

00:20:56,660 --> 00:20:59,960
dependency interactions forcing me to

00:20:58,310 --> 00:21:02,090
install an under stall and reinstall

00:20:59,960 --> 00:21:03,260
packages in my base environment so I

00:21:02,090 --> 00:21:05,300
just created a separate dedicated

00:21:03,260 --> 00:21:06,950
development environment kind of like the

00:21:05,300 --> 00:21:11,110
devstack image but these are lightweight

00:21:06,950 --> 00:21:11,110
containers that I can do all my working

00:21:18,320 --> 00:21:24,620
that is it not loaded no all right

00:21:25,090 --> 00:21:30,049
anyway so this is basically do that and

00:21:28,669 --> 00:21:33,320
it will take a while and then all do the

00:21:30,049 --> 00:21:38,410
stuff so since you don't want to wait

00:21:33,320 --> 00:21:40,760
for that we'll go through the slides so

00:21:38,410 --> 00:21:42,770
when you push something up to JIRA the

00:21:40,760 --> 00:21:45,530
next thing that happens the very first

00:21:42,770 --> 00:21:47,240
thing that happens is that Saul picks up

00:21:45,530 --> 00:21:49,250
the change you've got and says okay

00:21:47,240 --> 00:21:51,350
let's schedule a test run for this and

00:21:49,250 --> 00:21:53,540
we'll run a pip a check and make sure

00:21:51,350 --> 00:21:55,250
that you've got the right syntax in your

00:21:53,540 --> 00:21:57,500
code and that the automated style checks

00:21:55,250 --> 00:22:00,470
are happy with what's going on it will

00:21:57,500 --> 00:22:03,140
also run your code the unit tests and it

00:22:00,470 --> 00:22:05,030
will run a tempest run against your code

00:22:03,140 --> 00:22:06,830
change and if your code isn't something

00:22:05,030 --> 00:22:08,540
like also the config that gets brought

00:22:06,830 --> 00:22:10,040
in to lots of different places then it

00:22:08,540 --> 00:22:14,120
may run multiple different unit test

00:22:10,040 --> 00:22:16,840
runs so Saul is a scheduler for Jenkins

00:22:14,120 --> 00:22:20,179
that's improved by which I mean scales

00:22:16,840 --> 00:22:22,850
Jenkins doesn't scale in that that

00:22:20,179 --> 00:22:24,890
dimension but the actual test runs get

00:22:22,850 --> 00:22:26,950
handed off to Jenkins instances that are

00:22:24,890 --> 00:22:28,910
provisioned by the infra team and

00:22:26,950 --> 00:22:30,980
actually execute the tests and then

00:22:28,910 --> 00:22:35,990
report back to Jared whether something

00:22:30,980 --> 00:22:37,640
succeeded or failed and the easiest way

00:22:35,990 --> 00:22:39,650
to look at that is for me just go to a

00:22:37,640 --> 00:22:42,010
review open stat go to logon show you

00:22:39,650 --> 00:22:42,010
something

00:22:42,160 --> 00:22:47,630
this will do so this is a change I have

00:22:46,100 --> 00:22:51,260
to rename a project that was in

00:22:47,630 --> 00:22:53,419
consistently named the Red Cross hair

00:22:51,260 --> 00:22:55,850
says do not land this and that's because

00:22:53,419 --> 00:22:57,950
when they land a rename it's it's

00:22:55,850 --> 00:22:59,660
complex so they are saying look don't

00:22:57,950 --> 00:23:00,890
accidentally land this they are it's

00:22:59,660 --> 00:23:05,240
you're going to land it but just not

00:23:00,890 --> 00:23:06,980
accidentally we have the list the sort

00:23:05,240 --> 00:23:08,419
of status of the change the files the

00:23:06,980 --> 00:23:10,640
change and how much code changes

00:23:08,419 --> 00:23:12,770
occurred in them and then you can click

00:23:10,640 --> 00:23:19,370
through to each one to see the actual

00:23:12,770 --> 00:23:20,900
death of what changed but here's the

00:23:19,370 --> 00:23:22,460
thing I was talking about so the first

00:23:20,900 --> 00:23:25,850
thing that happened after out loaded it

00:23:22,460 --> 00:23:27,350
was that Jenkins was so it reports as

00:23:25,850 --> 00:23:29,150
Jenkins but actually is all because

00:23:27,350 --> 00:23:34,070
result collects results from all the

00:23:29,150 --> 00:23:37,530
Jenkins runs ran five different test

00:23:34,070 --> 00:23:40,800
runs a configuration comparison

00:23:37,530 --> 00:23:42,330
a comfort gate Lau the puppetland to

00:23:40,800 --> 00:23:45,690
puppet syntax check and the pipe flakes

00:23:42,330 --> 00:23:50,670
check they all reported back ok so this

00:23:45,690 --> 00:23:51,810
this patch could in principle land and

00:23:50,670 --> 00:23:54,180
then gets people coming through and

00:23:51,810 --> 00:23:56,730
saying it looks ok to me and a face if

00:23:54,180 --> 00:23:58,290
it says in bracket score reviewer and I

00:23:56,730 --> 00:24:01,170
think that means they get a plot they

00:23:58,290 --> 00:24:02,700
gave you a plus two yeah so it's not

00:24:01,170 --> 00:24:04,020
actually whether they our record review

00:24:02,700 --> 00:24:05,940
or not it's whether they were able to

00:24:04,020 --> 00:24:08,370
give you a plus two and chose to if they

00:24:05,940 --> 00:24:09,840
just give you a one I think it says just

00:24:08,370 --> 00:24:17,010
reviewer there even if they are allowed

00:24:09,840 --> 00:24:20,670
to give you a plus two when it's ready

00:24:17,010 --> 00:24:22,680
to land the reviewer will say approved

00:24:20,670 --> 00:24:25,830
and the general policy is that you need

00:24:22,680 --> 00:24:27,900
to approve two reviewers two plus two

00:24:25,830 --> 00:24:30,990
something to make a land what it looks

00:24:27,900 --> 00:24:32,160
like to review when they do that is they

00:24:30,990 --> 00:24:34,710
get this interface where they can say

00:24:32,160 --> 00:24:38,310
approved and you can actually just click

00:24:34,710 --> 00:24:40,920
on that so you'd say plus to look good

00:24:38,310 --> 00:24:42,360
to me core review and it's approved but

00:24:40,920 --> 00:24:43,500
most people don't see that you only see

00:24:42,360 --> 00:24:50,220
that when you're a core reviewer on a

00:24:43,500 --> 00:24:51,870
project so what else happens then other

00:24:50,220 --> 00:24:53,250
the reviewers come along people come

00:24:51,870 --> 00:24:56,550
along they review it they decide the

00:24:53,250 --> 00:24:59,430
codes good or bad and they say okay land

00:24:56,550 --> 00:25:01,590
them at that point Zul kicks off another

00:24:59,430 --> 00:25:03,780
test run so Jurate says okay it's time

00:25:01,590 --> 00:25:06,000
to land it and instead of assuming that

00:25:03,780 --> 00:25:08,100
it still works because the last hit run

00:25:06,000 --> 00:25:09,690
might have been a few days ago they put

00:25:08,100 --> 00:25:14,040
it into a test run against the current

00:25:09,690 --> 00:25:15,240
tip of OpenStack all the projects make

00:25:14,040 --> 00:25:17,490
sure it still works and if it works

00:25:15,240 --> 00:25:18,540
against landed immediately there's an

00:25:17,490 --> 00:25:22,920
interesting thing they do here they

00:25:18,540 --> 00:25:25,380
actually do a PI speculative pipeline

00:25:22,920 --> 00:25:27,390
the same as CPUs do they'll run five or

00:25:25,380 --> 00:25:29,670
ten or twenty patches in a row all

00:25:27,390 --> 00:25:33,540
running separate tests stacked up on

00:25:29,670 --> 00:25:35,010
each other and if they all pass they

00:25:33,540 --> 00:25:37,710
only land the top one so everything

00:25:35,010 --> 00:25:39,390
lands aligns by the first five person

00:25:37,710 --> 00:25:42,090
the sixth one failed the first five land

00:25:39,390 --> 00:25:43,860
the sixth gets taken out of the queue

00:25:42,090 --> 00:25:46,020
and the test runs for the ones that were

00:25:43,860 --> 00:25:47,520
dependent on it now I don't mean

00:25:46,020 --> 00:25:48,930
dependent on it sense that the code is

00:25:47,520 --> 00:25:50,559
dependent on it but in terms of the

00:25:48,930 --> 00:25:52,629
pipeline of landing depend

00:25:50,559 --> 00:25:54,279
see they get rescheduled and start over

00:25:52,629 --> 00:25:56,320
again so the test runs that we're

00:25:54,279 --> 00:25:59,080
running to get thrown away and it kicks

00:25:56,320 --> 00:26:01,090
off again and what this means is that if

00:25:59,080 --> 00:26:03,009
you take an hour to run tests you're not

00:26:01,090 --> 00:26:05,590
actually limited 24 patches landing a

00:26:03,009 --> 00:26:07,690
day and tempest takes about now to run

00:26:05,590 --> 00:26:09,070
all the tests think it's 40 minutes for

00:26:07,690 --> 00:26:13,870
10 person and there's other overheads

00:26:09,070 --> 00:26:15,370
and so on so if when patches are

00:26:13,870 --> 00:26:18,399
reviewed and you get a plus 2 and it's

00:26:15,370 --> 00:26:21,070
approved 95% of the time they still pass

00:26:18,399 --> 00:26:23,710
then 95% of the time you could have a

00:26:21,070 --> 00:26:26,350
queue of 10 or 20 patches and they'll

00:26:23,710 --> 00:26:29,470
all come in in that 40-minute latency

00:26:26,350 --> 00:26:32,110
window because it only takes so long to

00:26:29,470 --> 00:26:34,480
approve them as the single longest test

00:26:32,110 --> 00:26:36,669
run for the one at the end plus the time

00:26:34,480 --> 00:26:38,710
between you know how long it took people

00:26:36,669 --> 00:26:41,379
to click review click approve as you're

00:26:38,710 --> 00:26:43,360
building up that pipeline but if one of

00:26:41,379 --> 00:26:47,139
them fails it's a pipeline stall and

00:26:43,360 --> 00:26:49,119
it's hugely expensive so fragile tests

00:26:47,139 --> 00:26:51,869
matter a huge amount to OpenStack

00:26:49,119 --> 00:26:54,190
because of us and Tempest is kind of the

00:26:51,869 --> 00:27:02,940
primary example of fragile tests at the

00:26:54,190 --> 00:27:05,409
moment we're right we're back here ok so

00:27:02,940 --> 00:27:06,940
Michael recommends testing your changes

00:27:05,409 --> 00:27:08,499
and devstack so having gifts that

00:27:06,940 --> 00:27:09,940
running dropping your patch in there and

00:27:08,499 --> 00:27:13,299
making sure you can reproduce it and it

00:27:09,940 --> 00:27:16,409
works I'm a bit here on this most of the

00:27:13,299 --> 00:27:18,490
developers I know they don't do that

00:27:16,409 --> 00:27:20,830
arguably you should do it because it

00:27:18,490 --> 00:27:23,379
helps other developers but it's actually

00:27:20,830 --> 00:27:24,610
there's a fair bit of machinery you need

00:27:23,379 --> 00:27:25,929
to move stuff from one place to the

00:27:24,610 --> 00:27:27,309
other all you have to do your

00:27:25,929 --> 00:27:30,279
development environment in a devstack

00:27:27,309 --> 00:27:31,779
setup which is less convenient because

00:27:30,279 --> 00:27:32,799
you're going to be in a VM because you

00:27:31,779 --> 00:27:34,690
don't want to break in your actual

00:27:32,799 --> 00:27:39,269
machine so you're going to have to

00:27:34,690 --> 00:27:39,269
network mount the source or or whatever

00:27:39,600 --> 00:27:44,049
get review will do the push to do it for

00:27:42,519 --> 00:27:45,850
you what actually happens under the hood

00:27:44,049 --> 00:27:48,610
is just pushes to a well-known location

00:27:45,850 --> 00:27:50,529
and Jarett goes oh ok it respects the

00:27:48,610 --> 00:27:55,840
data and creates a branch on the fly for

00:27:50,529 --> 00:27:57,759
you the get review - es will set up get

00:27:55,840 --> 00:27:59,800
reviewing your local tree for you and

00:27:57,759 --> 00:28:02,530
that sets up a pre-commit hook that

00:27:59,800 --> 00:28:04,960
we'll set a commit change ID and that's

00:28:02,530 --> 00:28:06,610
what Jaret uses to track this is the

00:28:04,960 --> 00:28:09,370
same change if it comes from different

00:28:06,610 --> 00:28:12,610
people or when you keep rebasing and

00:28:09,370 --> 00:28:15,460
altering your change over time so that's

00:28:12,610 --> 00:28:17,530
the last line down the bottom there it

00:28:15,460 --> 00:28:19,660
never had one of those two a patch by

00:28:17,530 --> 00:28:20,910
hand never copy it from one patch to

00:28:19,660 --> 00:28:23,680
another if you're making another

00:28:20,910 --> 00:28:25,870
variation of the patch and never edit it

00:28:23,680 --> 00:28:27,640
just treated as something opaque that

00:28:25,870 --> 00:28:32,470
the system will put there for you and

00:28:27,640 --> 00:28:34,150
maintain if you know enough to argue

00:28:32,470 --> 00:28:35,620
with that statement you know enough to

00:28:34,150 --> 00:28:38,010
deal with the consequences so don't

00:28:35,620 --> 00:28:38,010
bring it up

00:28:43,640 --> 00:28:49,410
yes yes so I just told you about the

00:28:48,090 --> 00:28:50,850
review process emerging and

00:28:49,410 --> 00:28:53,190
vulnerability management so

00:28:50,850 --> 00:28:55,950
vulnerability management is a dedicated

00:28:53,190 --> 00:28:58,080
team a small team that respond to

00:28:55,950 --> 00:29:01,320
vulnerabilities report and OpenStack and

00:28:58,080 --> 00:29:03,000
coordinate getting them fixed giving

00:29:01,320 --> 00:29:06,540
them tested doing that under embargo and

00:29:03,000 --> 00:29:08,190
then notifying the you know CV and the

00:29:06,540 --> 00:29:11,370
destroyers and the public clouds that

00:29:08,190 --> 00:29:12,750
this is going on what you guys need to

00:29:11,370 --> 00:29:14,550
know about that is if you think you've

00:29:12,750 --> 00:29:17,040
got a security vulnerability reporter as

00:29:14,550 --> 00:29:21,210
a bug on launch pad market as a private

00:29:17,040 --> 00:29:23,070
security bug if a bug is reported public

00:29:21,210 --> 00:29:24,690
the OpenStack vulnerability team will

00:29:23,070 --> 00:29:26,220
not make it private they will not hide

00:29:24,690 --> 00:29:28,080
it they will not go through embargo for

00:29:26,220 --> 00:29:30,360
it because once it's out there as far as

00:29:28,080 --> 00:29:31,740
i concerned it's out there malicious

00:29:30,360 --> 00:29:32,760
actor who's tracking the OpenStack

00:29:31,740 --> 00:29:34,290
development environment will be

00:29:32,760 --> 00:29:36,210
subscribed to the bug feed and will see

00:29:34,290 --> 00:29:38,520
every new bug and it's too late once

00:29:36,210 --> 00:29:40,830
you've announced it if you're not sure

00:29:38,520 --> 00:29:42,810
and maybe it's just a privacy thing and

00:29:40,830 --> 00:29:44,250
you're not entirely like I mean you you

00:29:42,810 --> 00:29:47,190
think you found the dose but you're not

00:29:44,250 --> 00:29:49,620
entirely sure still market this private

00:29:47,190 --> 00:29:51,000
security and if it's not we can always

00:29:49,620 --> 00:29:54,000
open it up without doing the full

00:29:51,000 --> 00:29:56,490
embargo thing that's fine most bugs

00:29:54,000 --> 00:29:57,750
though just file them as normal bug it's

00:29:56,490 --> 00:30:01,940
just if you think it's security really

00:29:57,750 --> 00:30:01,940
treat it with appropriate caution

00:30:02,690 --> 00:30:06,080
Michael thinks you

00:30:18,600 --> 00:30:29,789
any questions about getting started with

00:30:21,899 --> 00:30:31,679
the development with OpenStack someone

00:30:29,789 --> 00:30:35,159
said something about powerboards back of

00:30:31,679 --> 00:30:36,690
the room so I saw a little box somewhere

00:30:35,159 --> 00:30:40,580
which had a bunch of power boards in

00:30:36,690 --> 00:30:40,580
them it might be worth grabbing that

00:30:40,909 --> 00:30:45,299
yeah I believe the back two rows of

00:30:43,590 --> 00:30:47,600
chairs have power boards with an easy

00:30:45,299 --> 00:30:47,600
reach

00:30:48,179 --> 00:30:52,230
you mentioned the code review process

00:30:50,130 --> 00:30:54,899
how does that actually work with

00:30:52,230 --> 00:30:57,779
OpenStack I actually never used Gerrit

00:30:54,899 --> 00:31:01,230
before you click on it and you type

00:30:57,779 --> 00:31:04,169
things in no I'm serious

00:31:01,230 --> 00:31:06,330
I'm not trolling that's how easy this so

00:31:04,169 --> 00:31:08,460
if we take this patch which is a patch I

00:31:06,330 --> 00:31:12,299
have reviewed so I won't actually change

00:31:08,460 --> 00:31:14,159
it but you click on a file to bring up

00:31:12,299 --> 00:31:17,610
the door for the file but say I didn't

00:31:14,159 --> 00:31:19,470
like this part of the change I think you

00:31:17,610 --> 00:31:21,000
double click I've got finger memory

00:31:19,470 --> 00:31:27,210
right but I'd you double click the air

00:31:21,000 --> 00:31:29,840
and then you say this is bond should

00:31:27,210 --> 00:31:29,840
totally be

00:31:33,090 --> 00:31:38,100
click on save it saves it no one can see

00:31:36,450 --> 00:31:40,500
this yet once you've done all of the

00:31:38,100 --> 00:31:44,150
changes you want to do all of the edits

00:31:40,500 --> 00:31:46,850
you go to the review interface and

00:31:44,150 --> 00:31:51,450
everyone gets this much right you just

00:31:46,850 --> 00:31:53,010
you click - one if you're a another core

00:31:51,450 --> 00:31:54,390
you don't get the plus two in the - to

00:31:53,010 --> 00:31:59,550
it but you still get the 1 plus 1 minus

00:31:54,390 --> 00:32:02,460
1 so you say minus 1 you say hey I've

00:31:59,550 --> 00:32:04,440
got a small issue could you deliver the

00:32:02,460 --> 00:32:05,970
VAR and then you say publish comments

00:32:04,440 --> 00:32:08,880
and at that point it commits them all

00:32:05,970 --> 00:32:09,680
publicly and in the end you can't edit

00:32:08,880 --> 00:32:12,060
them anymore

00:32:09,680 --> 00:32:15,860
so get the swearwords out before you

00:32:12,060 --> 00:32:18,660
click on publish comments what does that

00:32:15,860 --> 00:32:19,770
what does that look like to the person

00:32:18,660 --> 00:32:23,900
who submitted the change

00:32:19,770 --> 00:32:23,900
it looks like more work they need to do

00:32:24,950 --> 00:32:29,760
it looks like so I guess there's two

00:32:27,630 --> 00:32:31,350
angles one is you get the commentary at

00:32:29,760 --> 00:32:33,180
the bottom like these these comments

00:32:31,350 --> 00:32:36,180
down here you can see that you can click

00:32:33,180 --> 00:32:39,060
on you can see that content there is

00:32:36,180 --> 00:32:42,840
what you put in the dialog box in the

00:32:39,060 --> 00:32:45,570
review page where you see whatever the

00:32:42,840 --> 00:32:48,270
actual individual per file comments show

00:32:45,570 --> 00:32:51,660
up the top here now you can see where it

00:32:48,270 --> 00:32:55,310
says one draft on the screen if you go

00:32:51,660 --> 00:32:55,310
back to an old version of the patch set

00:32:56,360 --> 00:33:01,080
right then you can see the comments that

00:32:59,340 --> 00:33:02,970
are made against that version so I find

00:33:01,080 --> 00:33:04,560
this really annoying I've really liked

00:33:02,970 --> 00:33:06,060
all the comments to be visible at the

00:33:04,560 --> 00:33:08,070
top so I could just say here the things

00:33:06,060 --> 00:33:10,110
have been commented on and I'd like it

00:33:08,070 --> 00:33:12,680
to say something like you know three old

00:33:10,110 --> 00:33:16,830
to new and that way I wouldn't need to

00:33:12,680 --> 00:33:18,420
grovel back through yeah but it's minor

00:33:16,830 --> 00:33:20,490
this is the way it works you go and

00:33:18,420 --> 00:33:22,380
click on the patch set to skip the

00:33:20,490 --> 00:33:23,850
comments for that patch set and when

00:33:22,380 --> 00:33:25,290
someone uploads a new patch set just

00:33:23,850 --> 00:33:27,270
because they're rebased or something it

00:33:25,290 --> 00:33:28,890
can look like there are no comments and

00:33:27,270 --> 00:33:30,600
it's still lower minus one you need to

00:33:28,890 --> 00:33:32,910
click back through find the actual

00:33:30,600 --> 00:33:38,340
comments and then when you go into a

00:33:32,910 --> 00:33:41,850
file if you click on patch sets at the

00:33:38,340 --> 00:33:43,620
top there are the different versions of

00:33:41,850 --> 00:33:46,970
the father upload is part of this change

00:33:43,620 --> 00:33:48,840
ID over time so to see what

00:33:46,970 --> 00:33:49,649
actually probably you'd do it the other

00:33:48,840 --> 00:33:51,359
way around

00:33:49,649 --> 00:34:01,769
oh by the way this is the most annoying

00:33:51,359 --> 00:34:04,859
but ever noticed huh cool I will tell

00:34:01,769 --> 00:34:07,919
the infra team so I think that's coming

00:34:04,859 --> 00:34:10,530
there were just a few things that where

00:34:07,919 --> 00:34:11,909
the infrastructure team had to change

00:34:10,530 --> 00:34:13,409
what they were doing with Garrett so

00:34:11,909 --> 00:34:14,520
they actually had to fork it and now

00:34:13,409 --> 00:34:16,679
they're in the process of moving

00:34:14,520 --> 00:34:22,829
everything back upstream so they cannot

00:34:16,679 --> 00:34:24,750
create the UI quick aside here of said

00:34:22,829 --> 00:34:26,309
show me the actual death and that was

00:34:24,750 --> 00:34:29,389
where I can see whether this was or was

00:34:26,309 --> 00:34:29,389
not handled

00:34:38,790 --> 00:34:43,889
looks like everyone just wants to do it

00:34:42,109 --> 00:34:45,690
great well we should have another

00:34:43,889 --> 00:34:48,240
presentation from me and then let them

00:34:45,690 --> 00:34:52,049
go to sleep right I'm getting good at

00:34:48,240 --> 00:34:58,200
put it on my daughter to sleep so sounds

00:34:52,049 --> 00:34:58,740
like a plane do you have another

00:34:58,200 --> 00:35:02,339
question

00:34:58,740 --> 00:35:03,540
no you just and the hand up at the back

00:35:02,339 --> 00:35:10,859
but I think that's an itchy haired

00:35:03,540 --> 00:35:12,450
rather than the question so well if

00:35:10,859 --> 00:35:14,930
that's the case is it now time to start

00:35:12,450 --> 00:35:14,930

YouTube URL: https://www.youtube.com/watch?v=dIEnypwfEcg


