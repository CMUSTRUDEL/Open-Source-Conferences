Title: Core Team Panel, featuring: Chris Beaven, Markus Holterman, Russell Keith-Magee, Curtis Maloney
Publication date: 2015-08-06
Playlist: PyCon Australia 2015 Django Miniconf
Description: 
	PyCon Australia is the national conference for users of the Python Programming Language. In 2015, we're heading to Brisbane to bring together students, enthusiasts, and professionals with a love of Python from around Australia, and all around the World. 

July 31-August 4, Brisbane, Queensland, Australia
Captions: 
	00:00:12,410 --> 00:00:16,680
this will banter around throw the

00:00:15,210 --> 00:00:18,539
question around to whoever they think is

00:00:16,680 --> 00:00:20,039
best to answer it and have a bit of

00:00:18,539 --> 00:00:22,769
discussion and hopefully we'll all learn

00:00:20,039 --> 00:00:26,130
something or have our questions answered

00:00:22,769 --> 00:00:29,119
which is even better so think of your

00:00:26,130 --> 00:00:31,439
questions for the Jengo core developers

00:00:29,119 --> 00:00:40,940
while the Django core developers get

00:00:31,439 --> 00:00:40,940
themselves organized and here they are

00:00:42,530 --> 00:00:46,530
I'll I'll kick things off that we think

00:00:45,300 --> 00:00:48,719
Rosa just so everyone knows oh sorry

00:00:46,530 --> 00:00:50,070
intros yeah okay so just enjoy so

00:00:48,719 --> 00:00:51,510
everybody knows who everyone is here in

00:00:50,070 --> 00:00:53,480
case you haven't seen us before I'm

00:00:51,510 --> 00:00:58,199
Russell you've probably seen me before

00:00:53,480 --> 00:01:02,640
next month I'm Curtis also most often

00:00:58,199 --> 00:01:06,840
known as funky Bob I'm Chris visiting

00:01:02,640 --> 00:01:10,770
from New Zealand I'm Marcus also on IRC

00:01:06,840 --> 00:01:13,590
brazuca ng from Germany so if you're

00:01:10,770 --> 00:01:14,909
feeling that smiley Chris is smiley

00:01:13,590 --> 00:01:16,560
Chris and mrs. Matt Marcus haltom and so

00:01:14,909 --> 00:01:18,090
market age hopefully we'll also be

00:01:16,560 --> 00:01:20,280
joined by Josh Newton in the very near

00:01:18,090 --> 00:01:21,390
future no he's not no he's not feel okay

00:01:20,280 --> 00:01:23,780
so he wasn't has been feeling too good

00:01:21,390 --> 00:01:27,180
so okay Lucas got the for us make dude

00:01:23,780 --> 00:01:30,240
alright so initial question for the

00:01:27,180 --> 00:01:32,040
panel we've heard already today about

00:01:30,240 --> 00:01:35,070
some things to do with real-time

00:01:32,040 --> 00:01:37,140
processing and and synchronous versus

00:01:35,070 --> 00:01:39,060
asynchronous there's been mention of

00:01:37,140 --> 00:01:42,720
some work Andrew Godwin's been doing

00:01:39,060 --> 00:01:44,930
about channels where do we see this

00:01:42,720 --> 00:01:44,930
going

00:01:45,720 --> 00:01:52,530
I'll start yet so representing the core

00:01:49,300 --> 00:01:54,640
the core team technical board here

00:01:52,530 --> 00:01:56,080
Andrews and his proposition basically at

00:01:54,640 --> 00:01:57,760
the moment is the best candidate we've

00:01:56,080 --> 00:02:00,250
seen for a while no one I don't think

00:01:57,760 --> 00:02:04,780
anyone in the core team denies that real

00:02:00,250 --> 00:02:06,400
time is and thing and that the web is

00:02:04,780 --> 00:02:07,810
increasingly going that way so Django

00:02:06,400 --> 00:02:10,420
needs an answer or Django is going to go

00:02:07,810 --> 00:02:14,800
the way of open all the other dinosaurs

00:02:10,420 --> 00:02:16,900
before us so the reason why the way

00:02:14,800 --> 00:02:18,580
Andrews proposal is the most interesting

00:02:16,900 --> 00:02:20,530
we've seen so far is because it's the

00:02:18,580 --> 00:02:23,430
one that requires the least conceptual

00:02:20,530 --> 00:02:27,520
shift from what Django already does and

00:02:23,430 --> 00:02:29,140
it's also as amber said this morning

00:02:27,520 --> 00:02:31,300
it's probably a good enough eighty

00:02:29,140 --> 00:02:33,790
percent solution for what most people

00:02:31,300 --> 00:02:35,410
want real time to do like yes there is

00:02:33,790 --> 00:02:36,910
real time as genuine real time where you

00:02:35,410 --> 00:02:39,160
need you know complete socket like

00:02:36,910 --> 00:02:41,590
behavior from a client but most people

00:02:39,160 --> 00:02:46,660
who are in the Django using candidate

00:02:41,590 --> 00:02:48,459
space are really just looking for you

00:02:46,660 --> 00:02:50,140
know a real-time chat client they want

00:02:48,459 --> 00:02:52,209
to be a have a web browser where I do an

00:02:50,140 --> 00:02:55,350
update you get an update and vice versa

00:02:52,209 --> 00:02:57,519
so it's not incredibly hideously complex

00:02:55,350 --> 00:02:59,200
real-time it's a very very simple

00:02:57,519 --> 00:03:00,820
message passing type model and what

00:02:59,200 --> 00:03:03,250
Andrew was proposed there is the best

00:03:00,820 --> 00:03:04,810
version of that that's requires you

00:03:03,250 --> 00:03:07,930
don't have to all sudden swallow the red

00:03:04,810 --> 00:03:10,239
pill and start doing twisted we leverage

00:03:07,930 --> 00:03:12,790
a lot of twisted but we can sort of keep

00:03:10,239 --> 00:03:14,140
it away keep it simple and still give

00:03:12,790 --> 00:03:22,060
you enough of a functionality that

00:03:14,140 --> 00:03:25,330
doesn't cause too many headaches you're

00:03:22,060 --> 00:03:27,280
all done real silent this for this to

00:03:25,330 --> 00:03:28,900
work we need you to think of questions

00:03:27,280 --> 00:03:31,630
and to come and line up here and and

00:03:28,900 --> 00:03:33,579
we'll get to them one by one okay that's

00:03:31,630 --> 00:03:37,600
good I didn't have my next question red

00:03:33,579 --> 00:03:40,360
ready so take it away on the channel

00:03:37,600 --> 00:03:42,010
stuff that what time frame were you

00:03:40,360 --> 00:03:44,079
thinking something might come out of

00:03:42,010 --> 00:03:46,450
that because my concern is that you'll

00:03:44,079 --> 00:03:47,980
go down a path on that and then you'll

00:03:46,450 --> 00:03:50,019
have start and people start to ask you

00:03:47,980 --> 00:03:51,610
what about HTTP too and you've already

00:03:50,019 --> 00:03:53,590
committed yourself in a direction which

00:03:51,610 --> 00:03:55,730
actually will not allow you to harness

00:03:53,590 --> 00:03:58,159
things in HTTP to

00:03:55,730 --> 00:04:01,190
well I'm not too worried about HTTP two

00:03:58,159 --> 00:04:04,430
and whiskey in that regard because

00:04:01,190 --> 00:04:07,760
there's no real fundamental proposal

00:04:04,430 --> 00:04:10,970
that seems to fit whatever the community

00:04:07,760 --> 00:04:13,940
needs so I think if we want to go in

00:04:10,970 --> 00:04:16,310
that direction there should be a proper

00:04:13,940 --> 00:04:18,799
proposal for how it's HTTP to

00:04:16,310 --> 00:04:22,699
implemented or used in part in general

00:04:18,799 --> 00:04:28,970
until then I think this is a fairly

00:04:22,699 --> 00:04:30,260
certain or fairly good proposal it's

00:04:28,970 --> 00:04:32,180
just going to follow up with from what

00:04:30,260 --> 00:04:35,030
I've seen of a number of other solutions

00:04:32,180 --> 00:04:38,389
providing HTTP to and speedy support is

00:04:35,030 --> 00:04:40,610
they generally just wrap it as they

00:04:38,389 --> 00:04:43,490
don't support all the available features

00:04:40,610 --> 00:04:44,900
of speeding and HTTP too but we can

00:04:43,490 --> 00:04:46,910
still get a lot of the the shared

00:04:44,900 --> 00:04:49,160
channel and the encryption and a few

00:04:46,910 --> 00:04:51,380
other bits and pieces without having to

00:04:49,160 --> 00:04:54,919
completely rewrite the stack and go as

00:04:51,380 --> 00:04:56,870
far as Marcus is the one that I'd add to

00:04:54,919 --> 00:04:58,190
that in terms of timeline it's the

00:04:56,870 --> 00:04:59,810
eternal thing of open source the

00:04:58,190 --> 00:05:02,990
timeline is when someone volunteers to

00:04:59,810 --> 00:05:04,820
actually do it it could happen for as

00:05:02,990 --> 00:05:08,030
soon as 1.9 if someone wants to drop a

00:05:04,820 --> 00:05:10,639
large pile of cash on someone one point

00:05:08,030 --> 00:05:12,169
10 is probably more realistic but it

00:05:10,639 --> 00:05:13,580
won't even happen then if someone can't

00:05:12,169 --> 00:05:15,979
find out is a non-trivial piece of

00:05:13,580 --> 00:05:18,169
engineer that needs to happen someone

00:05:15,979 --> 00:05:19,910
needs to pay for it now migrations

00:05:18,169 --> 00:05:21,500
did was we talked about doing migrations

00:05:19,910 --> 00:05:23,150
for a very long time and it took a

00:05:21,500 --> 00:05:25,729
Kickstarter DeBakey basically make that

00:05:23,150 --> 00:05:26,840
happen you know another Kickstarter may

00:05:25,729 --> 00:05:29,680
actually be what's necessary to make

00:05:26,840 --> 00:05:29,680
this happen so

00:05:30,550 --> 00:05:38,450
thank you earlier this morning we heard

00:05:35,870 --> 00:05:40,040
amber say that she loved Django forms

00:05:38,450 --> 00:05:43,190
and even though she doesn't do Django

00:05:40,040 --> 00:05:46,160
stuff she keeps coming back to that his

00:05:43,190 --> 00:05:48,380
Django forms is it able to be extracted

00:05:46,160 --> 00:05:51,020
from Django and used elsewhere or is

00:05:48,380 --> 00:05:52,639
their moves within the Django community

00:05:51,020 --> 00:05:54,410
or should there be booze within the

00:05:52,639 --> 00:05:56,660
django community to start kind of

00:05:54,410 --> 00:05:59,000
decoupling things and making them more

00:05:56,660 --> 00:06:02,380
reusable to help that process of

00:05:59,000 --> 00:06:05,480
engaging with other groups like twist I

00:06:02,380 --> 00:06:07,040
think Django's always had a vision that

00:06:05,480 --> 00:06:09,740
would be great to have everything

00:06:07,040 --> 00:06:11,780
totally decoupled and in general we've

00:06:09,740 --> 00:06:13,970
tried to stay away from having different

00:06:11,780 --> 00:06:16,520
main a cat main components which are

00:06:13,970 --> 00:06:18,410
tightly coupled I think forms as one

00:06:16,520 --> 00:06:20,180
that isn't actually that tightly bound

00:06:18,410 --> 00:06:23,660
to anything like even settings there's

00:06:20,180 --> 00:06:26,120
not a whole lot of things that that it

00:06:23,660 --> 00:06:28,729
relies on there so that could be a great

00:06:26,120 --> 00:06:29,990
project if someone wants to look at what

00:06:28,729 --> 00:06:33,530
would be the steps of completely

00:06:29,990 --> 00:06:40,120
decoupling forms then I'll be around for

00:06:33,530 --> 00:06:42,770
the sprints I can tap on the end of that

00:06:40,120 --> 00:06:44,750
there's a reason historically that it

00:06:42,770 --> 00:06:46,700
hasn't been decouple and that is because

00:06:44,750 --> 00:06:49,340
the packaging story for Python wasn't

00:06:46,700 --> 00:06:50,330
that good so roll back ten years because

00:06:49,340 --> 00:06:51,800
we're now talking about ten years of

00:06:50,330 --> 00:06:55,010
history 10 years ago people did not

00:06:51,800 --> 00:06:57,470
exist and easy install did not work so

00:06:55,010 --> 00:06:59,030
now we've got we can we can save

00:06:57,470 --> 00:07:00,650
dependencies we can say install Django

00:06:59,030 --> 00:07:02,060
and Django installed Django forms and

00:07:00,650 --> 00:07:04,010
Django installs Django admin and that

00:07:02,060 --> 00:07:05,780
will actually work that is a making it

00:07:04,010 --> 00:07:08,110
actually like doing the code to make it

00:07:05,780 --> 00:07:11,150
happen but it would actually work the

00:07:08,110 --> 00:07:14,330
other reason is that as it's currently

00:07:11,150 --> 00:07:16,220
structured Django's forms are tightly

00:07:14,330 --> 00:07:18,080
bound to the model layer but only

00:07:16,220 --> 00:07:19,700
because of model forms that's a

00:07:18,080 --> 00:07:21,260
breakable dependency as with the

00:07:19,700 --> 00:07:23,780
settings it's a breakable dependency but

00:07:21,260 --> 00:07:26,660
it's one that then would be that we need

00:07:23,780 --> 00:07:28,370
to move some things to make that work so

00:07:26,660 --> 00:07:29,539
that's with that if you wanted to do

00:07:28,370 --> 00:07:33,680
that project that's where you're going

00:07:29,539 --> 00:07:35,570
to find the complications um I also go

00:07:33,680 --> 00:07:38,990
to throw in I was telling was it you

00:07:35,570 --> 00:07:41,510
someone this morning there was a project

00:07:38,990 --> 00:07:41,910
that was had a lot of steam for quite a

00:07:41,510 --> 00:07:43,650
while

00:07:41,910 --> 00:07:46,320
actually remove all the settings

00:07:43,650 --> 00:07:48,000
dependencies from all of django so there

00:07:46,320 --> 00:07:50,100
were two layers where you have the layer

00:07:48,000 --> 00:07:51,510
we're familiar with and then a layer

00:07:50,100 --> 00:07:53,040
underneath where you could utilize all

00:07:51,510 --> 00:07:55,560
the tools without the settings and then

00:07:53,040 --> 00:07:57,000
and it seemed to be going a lot of good

00:07:55,560 --> 00:07:58,320
headway and then it just vanished I

00:07:57,000 --> 00:08:00,390
haven't heard from it months which is

00:07:58,320 --> 00:08:02,820
kind of a shame but I guess they just

00:08:00,390 --> 00:08:04,920
got a bit scared off by just how much

00:08:02,820 --> 00:08:06,390
work it was but that was they were

00:08:04,920 --> 00:08:09,240
trying to do it out of templates and

00:08:06,390 --> 00:08:10,560
models and everything whereas just

00:08:09,240 --> 00:08:12,870
taking it out of form shouldn't be too

00:08:10,560 --> 00:08:16,710
much big idea big deal that's just what

00:08:12,870 --> 00:08:25,350
the i 18 n and so on and not much else

00:08:16,710 --> 00:08:28,650
so if you want it go work just just on

00:08:25,350 --> 00:08:30,600
the whole deployment situation I was

00:08:28,650 --> 00:08:34,740
wondering if there's any ideas floating

00:08:30,600 --> 00:08:39,810
around for making run server or whatever

00:08:34,740 --> 00:08:41,820
the package whiskey app server is not be

00:08:39,810 --> 00:08:50,120
something that hasn't got the warning on

00:08:41,820 --> 00:08:54,270
it don't use this in production no but

00:08:50,120 --> 00:08:55,620
so the essentially the reason we haven't

00:08:54,270 --> 00:08:57,090
that reason that warning is there is

00:08:55,620 --> 00:09:00,300
because writing a web server that is

00:08:57,090 --> 00:09:02,820
good is hard Graham will attest to this

00:09:00,300 --> 00:09:04,410
and other people have done it really

00:09:02,820 --> 00:09:05,850
really well there's no reason for Django

00:09:04,410 --> 00:09:07,320
to reinvent that wheel there's nothing

00:09:05,850 --> 00:09:10,890
we're not doing anything sufficiently

00:09:07,320 --> 00:09:12,600
you'd worried that so so no run server

00:09:10,890 --> 00:09:14,040
as currently implemented it is not going

00:09:12,600 --> 00:09:16,650
to become production Revit ready ever

00:09:14,040 --> 00:09:19,320
because it's just not that's not a good

00:09:16,650 --> 00:09:21,060
use of engineering time what might be a

00:09:19,320 --> 00:09:23,520
good use of engineering time is finding

00:09:21,060 --> 00:09:25,800
an easy way to replace run server so

00:09:23,520 --> 00:09:28,050
that the it auto loads it auto works

00:09:25,800 --> 00:09:31,260
version and the grams got his answer

00:09:28,050 --> 00:09:32,690
your pants there it to make to replace

00:09:31,260 --> 00:09:34,860
run server with something that is

00:09:32,690 --> 00:09:36,330
production ready so replace it with

00:09:34,860 --> 00:09:38,100
gonna con replace it with mod whiskey

00:09:36,330 --> 00:09:40,890
express replace it with something that

00:09:38,100 --> 00:09:42,450
is a production-ready version that

00:09:40,890 --> 00:09:45,000
someone else is looking after so it's

00:09:42,450 --> 00:09:46,550
not our problem which is anything that's

00:09:45,000 --> 00:09:49,110
not my problem I love

00:09:46,550 --> 00:09:50,490
so yeah that's that's over the longer

00:09:49,110 --> 00:09:51,810
term picture there but again it's you

00:09:50,490 --> 00:09:53,010
know someone's got to volunteer to do it

00:09:51,810 --> 00:09:56,820
at the moment run server works well

00:09:53,010 --> 00:09:59,880
enough so and that regards I looked at

00:09:56,820 --> 00:10:02,970
much whiskey express this morning and it

00:09:59,880 --> 00:10:04,770
has this gender integration so minus y1

00:10:02,970 --> 00:10:07,560
mod whiskey or something like that and

00:10:04,770 --> 00:10:10,410
it just fires up the development or a

00:10:07,560 --> 00:10:18,000
web server which also reloads if you

00:10:10,410 --> 00:10:19,590
want so hi and thanks for your work I

00:10:18,000 --> 00:10:20,910
started a few projects across the last

00:10:19,590 --> 00:10:22,890
two years with different versions of

00:10:20,910 --> 00:10:25,440
Jango's and I experience problems with

00:10:22,890 --> 00:10:27,060
third party packages so there's two

00:10:25,440 --> 00:10:28,800
questions there is i am i doing

00:10:27,060 --> 00:10:30,750
something wrong finding out which the

00:10:28,800 --> 00:10:32,760
party package is compatible with which

00:10:30,750 --> 00:10:35,190
version of Jenga and the second question

00:10:32,760 --> 00:10:37,290
is more like what is the philosophy with

00:10:35,190 --> 00:10:49,550
the new releases of django and backwards

00:10:37,290 --> 00:10:52,050
compatibility so yes it's all your fault

00:10:49,550 --> 00:10:53,760
no I mean that is in fairness that is

00:10:52,050 --> 00:10:54,840
actually an area that we haven't done a

00:10:53,760 --> 00:10:57,090
good job with and it's something I've

00:10:54,840 --> 00:11:00,990
pitched a few times I know there's a

00:10:57,090 --> 00:11:03,720
group I I spoke to side django meetup a

00:11:00,990 --> 00:11:04,980
few weeks back and I have subsequently

00:11:03,720 --> 00:11:06,420
had some discussions with some people

00:11:04,980 --> 00:11:09,030
there about an idea that might run along

00:11:06,420 --> 00:11:10,800
with this it is an area of the community

00:11:09,030 --> 00:11:13,200
management that Django has not done well

00:11:10,800 --> 00:11:14,820
historically there is Django packages is

00:11:13,200 --> 00:11:16,620
out there by danny danny green field

00:11:14,820 --> 00:11:19,110
audio I've done some done some fantastic

00:11:16,620 --> 00:11:20,370
work there collating a bunch of packages

00:11:19,110 --> 00:11:22,350
and getting some you know objective data

00:11:20,370 --> 00:11:24,300
about the state of completeness and

00:11:22,350 --> 00:11:27,360
liveliness and whatever else of that

00:11:24,300 --> 00:11:29,160
code what it misses you know what that

00:11:27,360 --> 00:11:31,290
data doesn't really currently have is

00:11:29,160 --> 00:11:32,910
good testing information to say okay

00:11:31,290 --> 00:11:34,680
yeah Django registration doesn't work on

00:11:32,910 --> 00:11:38,220
django point seven eight whatever it

00:11:34,680 --> 00:11:39,840
whatever version a program and it stuck

00:11:38,220 --> 00:11:43,380
in terms of Jango's own development

00:11:39,840 --> 00:11:45,120
process we don't have other people's

00:11:43,380 --> 00:11:48,000
packages as part of our development

00:11:45,120 --> 00:11:50,220
process which we possibly should this is

00:11:48,000 --> 00:11:53,310
one thing that the flask community does

00:11:50,220 --> 00:11:55,830
really well is that they've got a subset

00:11:53,310 --> 00:11:57,089
where such things to two subjects one's

00:11:55,830 --> 00:11:58,319
a superset of the

00:11:57,089 --> 00:12:06,319
second subset of superset of the first

00:11:58,319 --> 00:12:08,819
we're just go iro mathematician the

00:12:06,319 --> 00:12:10,559
where they've nominated that these are

00:12:08,819 --> 00:12:12,689
the packages that are sufficiently

00:12:10,559 --> 00:12:14,759
important that we're going to run the

00:12:12,689 --> 00:12:17,790
test suite against these packages before

00:12:14,759 --> 00:12:19,230
we do the next release to verify what

00:12:17,790 --> 00:12:20,339
things are going to be breaking both for

00:12:19,230 --> 00:12:22,439
the perspective of being able to say

00:12:20,339 --> 00:12:24,629
this works with Django 1.8 works with

00:12:22,439 --> 00:12:27,180
flask we note version whatever but also

00:12:24,629 --> 00:12:29,040
to help identify the problems that other

00:12:27,180 --> 00:12:30,660
people are going to have to say okay

00:12:29,040 --> 00:12:32,160
well now we're getting this this

00:12:30,660 --> 00:12:33,899
regression okay is that because we've

00:12:32,160 --> 00:12:35,040
changed an API we haven't documented the

00:12:33,899 --> 00:12:36,600
change is it because you've actually

00:12:35,040 --> 00:12:37,800
been using an unofficial API and

00:12:36,600 --> 00:12:39,269
whatever the cause of the problem is

00:12:37,800 --> 00:12:40,230
either you've got to fix it or we've got

00:12:39,269 --> 00:12:42,120
to fix it but either way there's

00:12:40,230 --> 00:12:43,709
something that's got to be fixed or you

00:12:42,120 --> 00:12:46,110
just were abandoned that project that

00:12:43,709 --> 00:12:47,850
comes out of our supported pool that's

00:12:46,110 --> 00:12:51,569
something that I would like to see

00:12:47,850 --> 00:12:54,029
Django pick up in terms of there are yes

00:12:51,569 --> 00:12:55,559
there is a huge range of tens of

00:12:54,029 --> 00:12:57,420
thousands of packages on puppy I that I

00:12:55,559 --> 00:13:00,240
tagged Django of those you could

00:12:57,420 --> 00:13:02,699
probably narrow down a set of 50 that

00:13:00,240 --> 00:13:05,309
would be the you know 95% case of stuff

00:13:02,699 --> 00:13:08,220
that everyone uses and I would like to

00:13:05,309 --> 00:13:09,870
see us running those test Suites against

00:13:08,220 --> 00:13:11,579
pre-production versions of Django once

00:13:09,870 --> 00:13:13,829
we hit better and things like that to be

00:13:11,579 --> 00:13:14,939
able to say yes it works even if it's

00:13:13,829 --> 00:13:17,069
not automated even if it's just you know

00:13:14,939 --> 00:13:18,269
when we hit beta we sent an email to

00:13:17,069 --> 00:13:19,769
everybody who's the registered owners

00:13:18,269 --> 00:13:21,029
saying you need to run this on you now

00:13:19,769 --> 00:13:23,279
you've got to run the test suite against

00:13:21,029 --> 00:13:24,509
1.8 and then we'll check the box and say

00:13:23,279 --> 00:13:28,800
here's a ton okay we're all we're all

00:13:24,509 --> 00:13:31,889
good to go so that in its finding which

00:13:28,800 --> 00:13:33,269
which 50 packages it is is where it gets

00:13:31,889 --> 00:13:34,920
problematic because then we've starting

00:13:33,269 --> 00:13:36,929
to get into opinions about who's you

00:13:34,920 --> 00:13:38,459
know which which facebook sign-in

00:13:36,929 --> 00:13:40,230
library do you do to use do you have

00:13:38,459 --> 00:13:41,790
multiple ones but that in itself would

00:13:40,230 --> 00:13:43,499
be a really useful contribution to the

00:13:41,790 --> 00:13:44,850
community because it's not just a matter

00:13:43,499 --> 00:13:46,259
that you know there are fight you want

00:13:44,850 --> 00:13:47,600
to fight sign into facebook there are 10

00:13:46,259 --> 00:13:50,009
libraries that will sign into facebook

00:13:47,600 --> 00:13:51,420
only two of them are actually used by

00:13:50,009 --> 00:13:53,790
anybody who's responsible and if you're

00:13:51,420 --> 00:13:55,139
the person who's coming to the community

00:13:53,790 --> 00:13:57,300
for the moment like for the first time

00:13:55,139 --> 00:13:59,189
you don't know that the one you want is

00:13:57,300 --> 00:14:00,540
the one that Janice Liddell is committed

00:13:59,189 --> 00:14:04,980
to because you don't know who Janice

00:14:00,540 --> 00:14:07,589
Liddell is so being able to curate that

00:14:04,980 --> 00:14:09,120
information to say yes there are horses

00:14:07,589 --> 00:14:10,170
for courses you might have a deceit you

00:14:09,120 --> 00:14:10,560
might have a reason for using a

00:14:10,170 --> 00:14:13,110
different

00:14:10,560 --> 00:14:15,330
package but absent of other information

00:14:13,110 --> 00:14:19,260
if you want to do face book signings you

00:14:15,330 --> 00:14:20,760
should be using this package and then

00:14:19,260 --> 00:14:24,300
curating that information being

00:14:20,760 --> 00:14:25,740
opinionated but curated of Pete opinions

00:14:24,300 --> 00:14:27,570
and letting other people say no we

00:14:25,740 --> 00:14:30,330
disagree with this for these reasons or

00:14:27,570 --> 00:14:33,120
whatever I think that's got a real good

00:14:30,330 --> 00:14:34,589
space as a project that could be filled

00:14:33,120 --> 00:14:36,150
and I know some people decide jank we're

00:14:34,589 --> 00:14:37,170
talking about if we can sprint about it

00:14:36,150 --> 00:14:39,740
on Monday and Tuesday they'd be

00:14:37,170 --> 00:14:46,230
fantastic I've even got a domain for you

00:14:39,740 --> 00:14:49,110
so yeah just before Tyson makes it his

00:14:46,230 --> 00:14:51,210
way to the microphone we've already

00:14:49,110 --> 00:14:52,890
heard today a couple of mentions of that

00:14:51,210 --> 00:14:54,990
might be coming in 1.9 or maybe it's

00:14:52,890 --> 00:14:56,460
going to be in 1 point 10 I don't know

00:14:54,990 --> 00:14:58,350
what other people like in terms of

00:14:56,460 --> 00:15:02,460
following what's going on in the

00:14:58,350 --> 00:15:04,230
development seen you know behind before

00:15:02,460 --> 00:15:06,870
an actual release you know major release

00:15:04,230 --> 00:15:08,250
comes out but is there without making

00:15:06,870 --> 00:15:09,660
any any firm commitments because

00:15:08,250 --> 00:15:11,490
obviously there's no such thing in the

00:15:09,660 --> 00:15:13,170
open source world is there anything you

00:15:11,490 --> 00:15:16,170
can tell us about some things we might

00:15:13,170 --> 00:15:18,450
be expecting to see coming up in 1.9 1

00:15:16,170 --> 00:15:23,010
point 10 1 point 11 how big you want to

00:15:18,450 --> 00:15:26,550
go so well 1.9 has as mentioned earlier

00:15:23,010 --> 00:15:29,460
the jason be filled some other postgres

00:15:26,550 --> 00:15:32,400
specific things there are accessible

00:15:29,460 --> 00:15:35,220
mixings for the permission mixings for

00:15:32,400 --> 00:15:37,650
the class place generic beer and the

00:15:35,220 --> 00:15:48,330
dreamer admin got a new theme committed

00:15:37,650 --> 00:15:51,870
a couple of hours ago by Tim oh yeah

00:15:48,330 --> 00:15:53,850
passport validation so so set

00:15:51,870 --> 00:15:56,570
requirements for your users to have on

00:15:53,850 --> 00:16:00,089
their passports make them have at most

00:15:56,570 --> 00:16:02,600
at least 20 characters so lock óleo

00:16:00,089 --> 00:16:02,600
yourself

00:16:03,290 --> 00:16:15,850
what's what's the timeline on the form

00:16:06,740 --> 00:16:15,850
template rendering so this is actually

00:16:17,290 --> 00:16:22,519
please don't mumble do do feel free to

00:16:19,670 --> 00:16:23,899
step up to the mic yeah so you know that

00:16:22,519 --> 00:16:24,680
was a secret inside baseball we couldn't

00:16:23,899 --> 00:16:27,829
possibly do that in front of a

00:16:24,680 --> 00:16:30,019
microphone um somebody has been working

00:16:27,829 --> 00:16:32,839
on on doing template-based form

00:16:30,019 --> 00:16:34,819
rendering in trunk I'm not sure what

00:16:32,839 --> 00:16:37,040
status that's up two if it's even i

00:16:34,819 --> 00:16:38,449
don't think it's 1.9 yes someone picked

00:16:37,040 --> 00:16:40,699
it was originally a summer of code

00:16:38,449 --> 00:16:42,019
project so years ago someone picked it

00:16:40,699 --> 00:16:43,940
up recently because we fixed the

00:16:42,019 --> 00:16:45,259
dependency problem which was we can't do

00:16:43,940 --> 00:16:47,360
it with Django's templates we can do it

00:16:45,259 --> 00:16:50,209
with ginger now we can use ginger let's

00:16:47,360 --> 00:16:51,560
fix that problem we've also got a new

00:16:50,209 --> 00:16:52,759
signal hook to be able to perform an

00:16:51,560 --> 00:16:56,899
action at the end of a transaction

00:16:52,759 --> 00:16:58,699
commits password validation permissions

00:16:56,899 --> 00:17:00,380
mix-ins we've finally added actual live

00:16:58,699 --> 00:17:01,579
Commission's mix-ins for class based

00:17:00,380 --> 00:17:03,920
views instead of telling they want to

00:17:01,579 --> 00:17:05,569
roll their own new admin styling and

00:17:03,920 --> 00:17:06,949
then a bunch of little features a lot of

00:17:05,569 --> 00:17:09,620
lot of internal tweaks around the way

00:17:06,949 --> 00:17:11,720
expressions work and if functions f

00:17:09,620 --> 00:17:12,589
functions work so that you can do a lot

00:17:11,720 --> 00:17:13,790
more interesting things with

00:17:12,589 --> 00:17:16,280
aggregations and a lot more interesting

00:17:13,790 --> 00:17:18,500
things with expressions as well longer

00:17:16,280 --> 00:17:21,409
term obviously real time is one thing

00:17:18,500 --> 00:17:22,819
that's on the list come visit fields any

00:17:21,409 --> 00:17:28,040
release now we're going to commit that

00:17:22,819 --> 00:17:30,380
uh sure sure absolutely that's one that

00:17:28,040 --> 00:17:31,850
almost got in for 1.7 but then kind of

00:17:30,380 --> 00:17:34,840
collided with about three other patches

00:17:31,850 --> 00:17:38,600
and then lost it lost its momentum again

00:17:34,840 --> 00:17:40,070
tossed a few tasks API maybe it's like

00:17:38,600 --> 00:17:41,990
it's got to get a little bit beyond but

00:17:40,070 --> 00:17:43,460
the idea that in the same way that we've

00:17:41,990 --> 00:17:44,630
got a caching API and it doesn't matter

00:17:43,460 --> 00:17:46,580
whether use a file-based case from

00:17:44,630 --> 00:17:48,530
everybody's cash or a memcache or even

00:17:46,580 --> 00:17:50,390
read us because the api's basically gets

00:17:48,530 --> 00:17:51,830
set blah blah blah there's a where

00:17:50,390 --> 00:17:56,659
there's a project going on to have a

00:17:51,830 --> 00:17:59,270
version of that for background tasks to

00:17:56,659 --> 00:18:00,980
say okay essentially celery or versions

00:17:59,270 --> 00:18:03,200
thereof so that you can just say okay

00:18:00,980 --> 00:18:04,940
I'm Django projects just put this in the

00:18:03,200 --> 00:18:08,030
background do some background work that

00:18:04,940 --> 00:18:10,370
function implemented with back ends in

00:18:08,030 --> 00:18:11,650
celery and our Q and all the other

00:18:10,370 --> 00:18:14,500
variations that are out there but

00:18:11,650 --> 00:18:15,940
providing it as a common Adi

00:18:14,500 --> 00:18:20,170
extracting the basic functionality so

00:18:15,940 --> 00:18:22,090
that you can just hate do it I think

00:18:20,170 --> 00:18:24,340
that in the past we've had some good

00:18:22,090 --> 00:18:26,410
podcasts that were running and and

00:18:24,340 --> 00:18:27,730
provided a lot of this information and

00:18:26,410 --> 00:18:29,680
I'd encourage anyone if they're

00:18:27,730 --> 00:18:32,080
passionate about the sort of community

00:18:29,680 --> 00:18:34,150
work that you can start something like

00:18:32,080 --> 00:18:35,530
that and if you if you can stick with it

00:18:34,150 --> 00:18:37,090
they would be the kind of thing would

00:18:35,530 --> 00:18:39,610
give you permissions to post on the

00:18:37,090 --> 00:18:41,860
Django blog so that we would be able to

00:18:39,610 --> 00:18:43,780
disseminate this rather than having four

00:18:41,860 --> 00:18:47,320
core developers stand up and tell you at

00:18:43,780 --> 00:18:48,610
ficon so yeah if community involvement

00:18:47,320 --> 00:18:50,800
is something that you're passionate

00:18:48,610 --> 00:18:52,390
about it's it's an area which you can do

00:18:50,800 --> 00:18:54,790
without needing to delve right into the

00:18:52,390 --> 00:19:01,260
code but you can still pay a play an

00:18:54,790 --> 00:19:05,650
integral part of the community thank you

00:19:01,260 --> 00:19:07,570
hello with Russell you mentioned that

00:19:05,650 --> 00:19:09,940
perhaps there were 50 core packages like

00:19:07,570 --> 00:19:12,100
separate packages that could be

00:19:09,940 --> 00:19:14,650
considered as part of test suites or

00:19:12,100 --> 00:19:16,480
otherwise the author of pit rot Brenton

00:19:14,650 --> 00:19:20,620
cleveland and myself have been talking

00:19:16,480 --> 00:19:25,900
about a new project which we dubbed as

00:19:20,620 --> 00:19:27,960
Django stables to do pretty much what

00:19:25,900 --> 00:19:31,510
you're talking about horses for courses

00:19:27,960 --> 00:19:34,480
so to have some repository of

00:19:31,510 --> 00:19:35,920
information also to provide some of that

00:19:34,480 --> 00:19:37,900
things I've talked about in my talk

00:19:35,920 --> 00:19:40,270
where I said you might be able to do

00:19:37,900 --> 00:19:43,270
something of add a package and it just

00:19:40,270 --> 00:19:47,140
knows how to use it and go and add it to

00:19:43,270 --> 00:19:49,870
your settings or otherwise so I guess

00:19:47,140 --> 00:19:53,050
I'm saying I accept and if anyone else

00:19:49,870 --> 00:19:54,670
wants to join me on the coming monday

00:19:53,050 --> 00:19:58,750
and choose does this a comment or a

00:19:54,670 --> 00:19:59,950
question that we can start on django

00:19:58,750 --> 00:20:04,120
stables you said you have a domain

00:19:59,950 --> 00:20:06,160
naming things so hand it over the

00:20:04,120 --> 00:20:11,500
question you've neglected to ask was do

00:20:06,160 --> 00:20:13,030
you think that's a good idea um yes

00:20:11,500 --> 00:20:13,990
absolutely and I decide to say is I

00:20:13,030 --> 00:20:15,340
think you might actually haven't even

00:20:13,990 --> 00:20:17,200
better name but the one that I had so

00:20:15,340 --> 00:20:18,700
it's tables if only because it would

00:20:17,200 --> 00:20:22,080
annoy the living Jesus at it Adrian

00:20:18,700 --> 00:20:25,360
makes me very very enthusiastic shipment

00:20:22,080 --> 00:20:32,379
so yeah absolutely um let's get a posse

00:20:25,360 --> 00:20:36,100
and make this happen um maybe just

00:20:32,379 --> 00:20:37,779
philosophically last last year I think

00:20:36,100 --> 00:20:39,909
was last year she was Lassie funky Bob

00:20:37,779 --> 00:20:44,139
gave talk about the state of rest it was

00:20:39,909 --> 00:20:46,119
a before and then since when yeah was um

00:20:44,139 --> 00:20:50,230
and since then we've seen say Andrews

00:20:46,119 --> 00:20:52,269
work folding migrations into core and

00:20:50,230 --> 00:20:55,929
trunk I was just wondering like how

00:20:52,269 --> 00:20:58,929
important is it for there to be a rest

00:20:55,929 --> 00:21:01,440
or API view creator as part of trunk in

00:20:58,929 --> 00:21:05,970
Django or we have you to select the

00:21:01,440 --> 00:21:08,350
ecosystem play out and see who was five

00:21:05,970 --> 00:21:10,059
so what I've observed over the last few

00:21:08,350 --> 00:21:14,200
years it's pretty much been the general

00:21:10,059 --> 00:21:16,419
trend is anything that can live outside

00:21:14,200 --> 00:21:18,129
of Django as a third-party app should

00:21:16,419 --> 00:21:20,590
continue to live outside of Django was a

00:21:18,129 --> 00:21:22,690
third-party app obviously migrations

00:21:20,590 --> 00:21:26,200
rolled in because it was a tremendously

00:21:22,690 --> 00:21:28,690
better solution once it became part of

00:21:26,200 --> 00:21:31,230
Django and was allowed to massively

00:21:28,690 --> 00:21:34,239
invasively change how things were built

00:21:31,230 --> 00:21:36,129
that was not something that could have

00:21:34,239 --> 00:21:38,320
happened if you if you heard Andrews

00:21:36,129 --> 00:21:41,559
talk whereas the rest frameworks mine

00:21:38,320 --> 00:21:43,629
and Andrews and all the rest of them and

00:21:41,559 --> 00:21:45,460
Tom's they will work fine as a

00:21:43,629 --> 00:21:48,580
third-party app there's no reason to

00:21:45,460 --> 00:21:49,869
bring them internally and as such you

00:21:48,580 --> 00:21:51,700
know the obvious benefits they're not

00:21:49,869 --> 00:21:54,460
tied to the release that's not extra

00:21:51,700 --> 00:21:58,960
burden on everybody and so on so I don't

00:21:54,460 --> 00:22:02,710
see tools like that becoming part of the

00:21:58,960 --> 00:22:04,210
core any time ever really whereas if

00:22:02,710 --> 00:22:06,549
there is something like the channel

00:22:04,210 --> 00:22:09,159
solution but that's already an external

00:22:06,549 --> 00:22:10,809
yeah its external so it doesn't even

00:22:09,159 --> 00:22:14,019
know I mean that you can do that without

00:22:10,809 --> 00:22:16,119
even bringing that into core so if it

00:22:14,019 --> 00:22:18,669
can be kept as a third-party app it's

00:22:16,119 --> 00:22:20,080
best that way certainly some of the

00:22:18,669 --> 00:22:21,399
stuff that got moved out of contribute

00:22:20,080 --> 00:22:24,340
might be not in the best possible way

00:22:21,399 --> 00:22:26,630
but that is still an option to move more

00:22:24,340 --> 00:22:31,160
stuff out of control than more stuff in

00:22:26,630 --> 00:22:32,780
as you just just add to that the ascent

00:22:31,160 --> 00:22:34,340
like the things that we're adding are

00:22:32,780 --> 00:22:36,200
things that are designed to be points of

00:22:34,340 --> 00:22:37,730
abstraction no tasks API yes is a new

00:22:36,200 --> 00:22:39,230
thing and the axillary is out there but

00:22:37,730 --> 00:22:41,180
what we're adding is the abstraction API

00:22:39,230 --> 00:22:43,130
so that Django users know there's a

00:22:41,180 --> 00:22:45,770
common version migrations was moved into

00:22:43,130 --> 00:22:47,420
core because pretty much every website

00:22:45,770 --> 00:22:50,240
known to man needs to have a migration

00:22:47,420 --> 00:22:51,800
so great a great migration path and it's

00:22:50,240 --> 00:22:54,950
just easier if everyone's on the same

00:22:51,800 --> 00:22:58,880
one rest framework one like everything

00:22:54,950 --> 00:23:00,320
Curtis said plus one but it's also it is

00:22:58,880 --> 00:23:01,310
vibrant outside the community and part

00:23:00,320 --> 00:23:03,140
of one of the things that we've actually

00:23:01,310 --> 00:23:07,430
changed with the core team in the last

00:23:03,140 --> 00:23:09,800
year is that the Tom Christie the guy

00:23:07,430 --> 00:23:11,270
behind rest framework is officially now

00:23:09,800 --> 00:23:13,280
actually a member of the Django core

00:23:11,270 --> 00:23:14,930
team he's not a committing member he

00:23:13,280 --> 00:23:17,090
doesn't have the commit bed but he is

00:23:14,930 --> 00:23:19,340
part of the core team so that he can as

00:23:17,090 --> 00:23:22,310
part of this broader ecosystem of tools

00:23:19,340 --> 00:23:24,110
that he's Django he is representative of

00:23:22,310 --> 00:23:25,430
the things that are happening in reston

00:23:24,110 --> 00:23:27,170
if there are the large projects we're

00:23:25,430 --> 00:23:28,610
looking to sort of absorb their members

00:23:27,170 --> 00:23:29,900
and be able to say yeah when he talks

00:23:28,610 --> 00:23:32,990
pay attention to him because he's

00:23:29,900 --> 00:23:36,320
important the closest we might get to

00:23:32,990 --> 00:23:38,870
bring it into core would be to take the

00:23:36,320 --> 00:23:39,890
project under Django's repository to

00:23:38,870 --> 00:23:41,090
sort of make it a little bit more

00:23:39,890 --> 00:23:42,440
official about this is where we're

00:23:41,090 --> 00:23:45,220
storing the code hey no really it's

00:23:42,440 --> 00:23:49,040
important it won't ever be in the Django

00:23:45,220 --> 00:23:51,500
contrib trest as a package I would

00:23:49,040 --> 00:23:53,240
suspend again also partially because Kip

00:23:51,500 --> 00:23:55,510
now works and you can say important our

00:23:53,240 --> 00:23:57,770
rest framework in it yeah that's sorry

00:23:55,510 --> 00:24:00,650
just yet the following comment is

00:23:57,770 --> 00:24:03,740
mothered like the role that we see or we

00:24:00,650 --> 00:24:06,980
as comco use Django for is increasingly

00:24:03,740 --> 00:24:08,240
as an API creative and so I mean views

00:24:06,980 --> 00:24:09,860
and function based views and class-based

00:24:08,240 --> 00:24:11,930
views were an important discussion in

00:24:09,860 --> 00:24:14,150
the Django a little while back and then

00:24:11,930 --> 00:24:16,550
there are also class-based views and

00:24:14,150 --> 00:24:20,750
functional best views in Tom Chrissy's

00:24:16,550 --> 00:24:22,660
dof and yes what are you like given the

00:24:20,750 --> 00:24:26,650
importance as Django and its role in

00:24:22,660 --> 00:24:28,790
service I'd computing where where do we

00:24:26,650 --> 00:24:30,680
should be adopted or should Django

00:24:28,790 --> 00:24:32,420
adopted as a primary function like they

00:24:30,680 --> 00:24:34,520
do with the migrations okay so I've

00:24:32,420 --> 00:24:35,690
actually got some you haven't got

00:24:34,520 --> 00:24:37,420
anywhere near enough time there's almost

00:24:35,690 --> 00:24:39,580
a talk in itself about fitler what my

00:24:37,420 --> 00:24:40,810
view on where that goes I

00:24:39,580 --> 00:24:42,750
he's did last year when i did the coke

00:24:40,810 --> 00:24:46,390
last place he was talking I've done

00:24:42,750 --> 00:24:47,470
nothing on it so if you want to have a

00:24:46,390 --> 00:24:48,190
discussion about where the future goes

00:24:47,470 --> 00:24:49,630
with that I'd love to have a

00:24:48,190 --> 00:24:52,180
conversation with you about where Django

00:24:49,630 --> 00:24:53,740
fits into that picture and but again I

00:24:52,180 --> 00:24:55,570
think it is actually an external thing

00:24:53,740 --> 00:24:57,850
that is then it's Django a server-side

00:24:55,570 --> 00:25:00,010
plus risk framework plus this extra bit

00:24:57,850 --> 00:25:01,660
and the extra bit is the bit that's not

00:25:00,010 --> 00:25:02,860
currently there but I think we there's

00:25:01,660 --> 00:25:05,800
definitely room for a project there

00:25:02,860 --> 00:25:07,450
which would be great almost out of time

00:25:05,800 --> 00:25:10,750
but Tyson promises me this is a very

00:25:07,450 --> 00:25:13,930
quick question can we please have a

00:25:10,750 --> 00:25:15,550
standard way of handing off from URLs pi

00:25:13,930 --> 00:25:24,400
into something that can handle web

00:25:15,550 --> 00:25:27,550
sockets I i think the core problem of

00:25:24,400 --> 00:25:30,250
course is that whiskey itself doesn't

00:25:27,550 --> 00:25:32,580
really probably support web sockets

00:25:30,250 --> 00:25:35,980
Graham will back me up on this I'm sure

00:25:32,580 --> 00:25:37,930
no right so by the time you've reached

00:25:35,980 --> 00:25:39,850
URL spy it's too late you're already

00:25:37,930 --> 00:25:41,350
inside whiskey and you can't properly

00:25:39,850 --> 00:25:43,030
handle web sockets I know there are

00:25:41,350 --> 00:25:45,400
possible ways to hack around it and

00:25:43,030 --> 00:25:46,990
there's all this other solutions but it

00:25:45,400 --> 00:25:50,530
really should be happening before it

00:25:46,990 --> 00:25:52,840
gets there so with the channel solution

00:25:50,530 --> 00:25:55,000
that's happening there it's you're

00:25:52,840 --> 00:25:57,070
getting in before it reaches your l's

00:25:55,000 --> 00:25:59,680
pie and you can handle that earlier on

00:25:57,070 --> 00:26:02,860
but by the time you've got there it's

00:25:59,680 --> 00:26:04,270
too late to hand off and that's yeah

00:26:02,860 --> 00:26:06,760
that's kind of the big that's the big

00:26:04,270 --> 00:26:09,000
conundrum of Python in the web at the

00:26:06,760 --> 00:26:14,800
moment is that our standard whiskey is

00:26:09,000 --> 00:26:17,470
it does not work on real time socket

00:26:14,800 --> 00:26:22,660
based stuff we need hang on grounds not

00:26:17,470 --> 00:26:24,070
looking whiskey too yeah there we go

00:26:22,660 --> 00:26:27,310
I've just got post-traumatic stress

00:26:24,070 --> 00:26:28,810
going there and so yet the there is a

00:26:27,310 --> 00:26:33,220
standard that is required there to

00:26:28,810 --> 00:26:34,930
replace whiskey that's a top hit that no

00:26:33,220 --> 00:26:38,200
one wants to go into because we've tried

00:26:34,930 --> 00:26:39,700
a few times and it's a target maybe

00:26:38,200 --> 00:26:40,870
something might come out of Django if we

00:26:39,700 --> 00:26:41,950
can standardize something that we've

00:26:40,870 --> 00:26:43,600
done and then hey everyone will just

00:26:41,950 --> 00:26:45,100
adopt it but a lot of people have

00:26:43,600 --> 00:26:47,430
rejected on the grounds of this Jango so

00:26:45,100 --> 00:26:47,430
you know

00:26:48,880 --> 00:26:53,600
we are out of time thank you all for

00:26:52,040 --> 00:26:55,700
your questions but let's all thank the

00:26:53,600 --> 00:26:58,150
impromptu you panel of jango core

00:26:55,700 --> 00:26:58,150
developers

00:27:07,680 --> 00:27:09,740

YouTube URL: https://www.youtube.com/watch?v=1SeO5ZCK19Q


