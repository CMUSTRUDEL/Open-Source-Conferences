Title: "Using Dash by Plotly for Interactive Visualisation of Crime Data" - Leo Broska (PyCon AU 2019)
Publication date: 2019-08-02
Playlist: PyCon Australia 2019
Description: 
	Leo Broska

Dash is a great Python framework for building data visualisation websites. In this talk I discuss the framework basics, explore a sample site and describe its use for an enterprise application to graph crime statistics. I finish with clear pros and cons of the Dash framework from our perspective.

Slides for the talk are at http://www.halloleo.net/talks/dash_for_crime 
- more resources at https://github.com/halloleo/dash_for_crime.

https://2019.pycon-au.org/talks/using-dash-by-plotly-for-interactive-visualisation-of-crime-data

PyCon AU, the national Python Language conference, is on again this August in Sydney, at the International Convention Centre, Sydney, August 2 - 6 2019.

Video licence: CC BY-NC-SA 4.0 - https://creativecommons.org/licenses/by-nc-sa/4.0/

Python, PyCon, PyConAU

Fri Aug  2 11:10:00 2019 at C3.6
Captions: 
	00:00:00,030 --> 00:00:07,680
thank you okay so up next we got Leo Leo

00:00:04,950 --> 00:00:09,990
brusca he's a mathematician data miner

00:00:07,680 --> 00:00:13,549
and social scientists he's done software

00:00:09,990 --> 00:00:15,900
for 20 plus years he's been doing - for

00:00:13,549 --> 00:00:20,420
approximately 15 years because block

00:00:15,900 --> 00:00:20,420
definition by indentation intrigued him

00:00:22,430 --> 00:00:28,260
but today he's talking about using - by

00:00:26,099 --> 00:00:29,609
plotly for interactive visualization of

00:00:28,260 --> 00:00:37,590
crime data Oh

00:00:29,609 --> 00:00:42,230
thanks leo thank you can can you hear me

00:00:37,590 --> 00:00:45,750
I can hear me and - it's quite a strange

00:00:42,230 --> 00:00:48,690
sound thing anyway thank you very much

00:00:45,750 --> 00:00:51,329
for coming to my talk about - my name is

00:00:48,690 --> 00:00:53,460
Leo Braska I'm software developer

00:00:51,329 --> 00:00:55,020
invention and data scientists it's

00:00:53,460 --> 00:00:58,649
Australian criminal intelligence

00:00:55,020 --> 00:01:00,449
Commission and as a developer at the

00:00:58,649 --> 00:01:03,390
Crime Commission you work with various

00:01:00,449 --> 00:01:06,090
criminal data statistics of homicides

00:01:03,390 --> 00:01:08,880
for example it's all these numbers in

00:01:06,090 --> 00:01:12,299
tables and CSV files you eventually will

00:01:08,880 --> 00:01:15,000
be asked just put these numbers into a

00:01:12,299 --> 00:01:18,060
graph so that the team can understand

00:01:15,000 --> 00:01:21,060
what's going on what it means the

00:01:18,060 --> 00:01:24,570
dashboard everyone like everybody likes

00:01:21,060 --> 00:01:26,880
dashboards these days right so you say

00:01:24,570 --> 00:01:30,600
to yourself no problem no problem

00:01:26,880 --> 00:01:33,720
let's try - and this one that's what my

00:01:30,600 --> 00:01:36,570
talk is about here a quick overview and

00:01:33,720 --> 00:01:39,540
what I will cover so first up what is -

00:01:36,570 --> 00:01:42,930
quite a quick introduction then I'll do

00:01:39,540 --> 00:01:45,899
a live demo and then we discuss what

00:01:42,930 --> 00:01:50,880
else is possible with - and at the end

00:01:45,899 --> 00:01:52,740
we wrap up okay what is - there's the

00:01:50,880 --> 00:01:55,470
Python framework that's I guess why you

00:01:52,740 --> 00:01:57,479
are here and you can use it to create

00:01:55,470 --> 00:01:59,790
websites with interactive charts and

00:01:57,479 --> 00:02:01,829
graphs all the common chart graph or

00:01:59,790 --> 00:02:05,219
chart types like line charts bar charts

00:02:01,829 --> 00:02:07,710
heat maps are supported it's pretty cool

00:02:05,219 --> 00:02:10,560
and it differentiates itself from other

00:02:07,710 --> 00:02:12,560
charting libraries with the motto no

00:02:10,560 --> 00:02:16,430
JavaScript required

00:02:12,560 --> 00:02:19,520
and indeed indeed - makes it possible to

00:02:16,430 --> 00:02:22,640
express everything for a dashboard type

00:02:19,520 --> 00:02:25,610
of web app in pure Python we will soon

00:02:22,640 --> 00:02:27,920
see how it's done but let's first get a

00:02:25,610 --> 00:02:32,120
quick impression what's possible with -

00:02:27,920 --> 00:02:35,540
how websites with - can look like here

00:02:32,120 --> 00:02:40,280
we have a financial fund it's a demo app

00:02:35,540 --> 00:02:44,959
for an index fund showing some data

00:02:40,280 --> 00:02:48,140
tables and line graph at the bottom -

00:02:44,959 --> 00:02:49,970
can look like this this is a site

00:02:48,140 --> 00:02:53,690
visualizing the number of traffic

00:02:49,970 --> 00:02:56,870
accidents in the UK look at the heat map

00:02:53,690 --> 00:02:58,610
at the bottom that's all done with - and

00:02:56,870 --> 00:03:00,709
you have sort of a range selector and

00:02:58,610 --> 00:03:03,440
you can select different days of the

00:03:00,709 --> 00:03:05,300
week you want your information for there

00:03:03,440 --> 00:03:09,350
are maps in there as well that's all

00:03:05,300 --> 00:03:11,000
done with - and you can even check how

00:03:09,350 --> 00:03:16,310
many sightings of beautiful

00:03:11,000 --> 00:03:18,040
Bigfoot's are in the US with - so how

00:03:16,310 --> 00:03:21,799
does - do all of this

00:03:18,040 --> 00:03:25,190
like many powerful tools its standing on

00:03:21,799 --> 00:03:28,190
the shoulders of giants in this case

00:03:25,190 --> 00:03:30,170
three software libraries first up there

00:03:28,190 --> 00:03:32,390
is plotly that's where it's sort of part

00:03:30,170 --> 00:03:34,760
of the name from this is a pretty

00:03:32,390 --> 00:03:36,970
powerful charting library written in its

00:03:34,760 --> 00:03:40,549
core in JavaScript but it has very

00:03:36,970 --> 00:03:43,010
strong Python bindings because Python

00:03:40,549 --> 00:03:46,030
bindings because the people making

00:03:43,010 --> 00:03:49,070
plotly making that making - as well

00:03:46,030 --> 00:03:53,209
blockly utilizes underneath the SVG

00:03:49,070 --> 00:03:55,489
library d3 you might have heard of so

00:03:53,209 --> 00:03:57,500
plotly does all the draw drawing in - of

00:03:55,489 --> 00:04:01,519
the charts and provides the build in

00:03:57,500 --> 00:04:04,100
interactivity in a chart in the live

00:04:01,519 --> 00:04:06,530
demo we use a particular extension

00:04:04,100 --> 00:04:12,010
module of plotly called plotly express

00:04:06,530 --> 00:04:16,400
it makes the configuration really a snap

00:04:12,010 --> 00:04:19,250
next up is react react is the layer for

00:04:16,400 --> 00:04:21,409
the common interactivity in - hats it's

00:04:19,250 --> 00:04:23,450
a JavaScript library for web your eyes

00:04:21,409 --> 00:04:25,920
and it enables - to build effective

00:04:23,450 --> 00:04:29,680
single page wear

00:04:25,920 --> 00:04:33,550
the last giant is flat flask this is the

00:04:29,680 --> 00:04:35,770
web from a framework in - employs flask

00:04:33,550 --> 00:04:38,170
is a Python framework which its course

00:04:35,770 --> 00:04:40,570
which calls itself a micro framework

00:04:38,170 --> 00:04:43,740
because it is fairly lightweight weight

00:04:40,570 --> 00:04:47,520
and with that it's a great fit for -

00:04:43,740 --> 00:04:50,560
essentially every - side is a flask at

00:04:47,520 --> 00:04:54,490
all these three common components

00:04:50,560 --> 00:04:57,250
I'm managed by - so you normally don't

00:04:54,490 --> 00:04:59,320
have to tap into them - does that for

00:04:57,250 --> 00:05:01,750
you particularly small applications

00:04:59,320 --> 00:05:04,390
there is no need to call these internal

00:05:01,750 --> 00:05:05,830
components in practice with a bigger

00:05:04,390 --> 00:05:08,380
application though you might at least

00:05:05,830 --> 00:05:12,490
need to call into the plotly interface

00:05:08,380 --> 00:05:15,820
to tweak some visual aspects of view of

00:05:12,490 --> 00:05:18,520
your website in the live demo we will

00:05:15,820 --> 00:05:20,890
make use of an additional package pandas

00:05:18,520 --> 00:05:23,050
I'm sure you know about it it's not part

00:05:20,890 --> 00:05:27,190
of the ecosystem but we'll provide the

00:05:23,050 --> 00:05:33,160
data to the app so let's do the live

00:05:27,190 --> 00:05:35,380
demo for this we go to my charm I've set

00:05:33,160 --> 00:05:38,350
up a project I've created a virtual

00:05:35,380 --> 00:05:44,980
environment is so let's quickly look at

00:05:38,350 --> 00:05:47,440
PIP 5 for it of course we need - pandas

00:05:44,980 --> 00:05:50,560
for the data and plotly Express is a

00:05:47,440 --> 00:05:54,720
separate install which sort of hooks

00:05:50,560 --> 00:05:59,980
into plotly ok

00:05:54,720 --> 00:06:04,000
I've here pre-typed the imports so you

00:05:59,980 --> 00:06:06,760
have - and two separate coke and core

00:06:04,000 --> 00:06:10,090
components of it nationally properly

00:06:06,760 --> 00:06:14,950
Express and pandas let's read the data

00:06:10,090 --> 00:06:21,130
in so it creates a data frame from

00:06:14,950 --> 00:06:25,920
pandas read yes we actually let's have a

00:06:21,130 --> 00:06:32,380
quick look at csv file so this is a

00:06:25,920 --> 00:06:37,689
scene from a bureau of statistic so it's

00:06:32,380 --> 00:06:41,509
no secret data it's in the public domain

00:06:37,689 --> 00:06:44,749
it tells you had a three common three

00:06:41,509 --> 00:06:47,419
three columns here type and homicides so

00:06:44,749 --> 00:06:49,580
a test you per year how many murders in

00:06:47,419 --> 00:06:51,800
a particular type of murder are done so

00:06:49,580 --> 00:06:53,349
let's say in nineteen nineteen eighty

00:06:51,800 --> 00:06:56,209
nine there were a hundred and fifteen

00:06:53,349 --> 00:06:58,669
murders of domestic time domestic means

00:06:56,209 --> 00:07:01,580
it's your husband it's your wife it's

00:06:58,669 --> 00:07:03,289
your daughter it's your father then

00:07:01,580 --> 00:07:05,749
there it can be an acquaintance murder

00:07:03,289 --> 00:07:08,089
if it's a friend of you or strangers and

00:07:05,749 --> 00:07:12,009
sometimes we just just don't know the

00:07:08,089 --> 00:07:16,429
relationship so this is the data let's

00:07:12,009 --> 00:07:26,360
visualize them with a dash yet we read

00:07:16,429 --> 00:07:29,719
them in homicides dot CSV and now we

00:07:26,360 --> 00:07:33,709
create a figure object which will then

00:07:29,719 --> 00:07:36,319
will show in pain - figure object we

00:07:33,709 --> 00:07:39,559
create with plotly and we use the plot

00:07:36,319 --> 00:07:42,079
Lee expressed extension which just has a

00:07:39,559 --> 00:07:46,699
line method and it's really easy we give

00:07:42,079 --> 00:07:49,869
it the data frame tell it the x-axis we

00:07:46,699 --> 00:07:54,949
want what we want to put on the x-axis

00:07:49,869 --> 00:07:58,999
what we want to put on the y-axis on the

00:07:54,949 --> 00:08:01,550
sides and because we have these three

00:07:58,999 --> 00:08:04,879
types it makes sense to color them in

00:08:01,550 --> 00:08:08,749
different with different colors so this

00:08:04,879 --> 00:08:12,589
we can use the color keyword and tell it

00:08:08,749 --> 00:08:14,929
to use Todd for that and that's it for

00:08:12,589 --> 00:08:18,229
the figure object so now let's create

00:08:14,929 --> 00:08:22,639
the app for this we create an app object

00:08:18,229 --> 00:08:26,569
there is in - class - which means 10 she

00:08:22,639 --> 00:08:28,939
ate here it's another identifier we just

00:08:26,569 --> 00:08:31,309
use the module name when you handling

00:08:28,939 --> 00:08:33,169
multiple apps which is sort of rare but

00:08:31,309 --> 00:08:34,909
sometimes happens then you need to give

00:08:33,169 --> 00:08:37,519
them different identifiers so that the

00:08:34,909 --> 00:08:40,969
underlying flask framework can handle

00:08:37,519 --> 00:08:43,610
them so that's the app but it doesn't

00:08:40,969 --> 00:08:49,490
know how and what to display for this

00:08:43,610 --> 00:08:50,940
there is the layout property in in the

00:08:49,490 --> 00:08:53,730
app object this this or

00:08:50,940 --> 00:08:56,610
jab is essentially we're all - things

00:08:53,730 --> 00:08:59,370
now will happen and there is everything

00:08:56,610 --> 00:09:01,530
we have to tweak so let's define how the

00:08:59,370 --> 00:09:05,700
how the website will look like and

00:09:01,530 --> 00:09:08,580
layout takes HTML tags wrapped in Python

00:09:05,700 --> 00:09:13,020
so - has all the HTML tags wrapped in

00:09:08,580 --> 00:09:15,510
Python and it's good practice to wrap

00:09:13,020 --> 00:09:20,760
everything in the div so let's do that

00:09:15,510 --> 00:09:25,530
the div class is in HTML and if and it

00:09:20,760 --> 00:09:32,520
takes a list of what's inside okay let's

00:09:25,530 --> 00:09:37,400
have a header tag for the title what do

00:09:32,520 --> 00:09:42,600
we want to show homicides in Australia

00:09:37,400 --> 00:09:44,520
it's national statistics and of course

00:09:42,600 --> 00:09:46,740
we want to show the graph in the core

00:09:44,520 --> 00:09:51,030
components is a graph class which we

00:09:46,740 --> 00:09:55,710
instantiate here with the figure and so

00:09:51,030 --> 00:09:59,130
we tell it just to show the figure and

00:09:55,710 --> 00:10:02,580
that's it so now we have to find what we

00:09:59,130 --> 00:10:10,080
want to show on the web side we need to

00:10:02,580 --> 00:10:13,760
run it for this the app object has a has

00:10:10,080 --> 00:10:16,470
a method run server which essentially

00:10:13,760 --> 00:10:20,540
hooks into the underlying flask a

00:10:16,470 --> 00:10:24,930
framework and brings up a flask server

00:10:20,540 --> 00:10:28,230
we give it D back true just gives us

00:10:24,930 --> 00:10:32,160
some handy help later on we which we

00:10:28,230 --> 00:10:37,339
will see okay so if this and I think

00:10:32,160 --> 00:10:37,339
that's really it yes so let's start this

00:10:39,050 --> 00:10:45,170
moment of truth yes you can see it's has

00:10:43,220 --> 00:10:47,780
started the development server is of

00:10:45,170 --> 00:10:50,540
course just for for development not for

00:10:47,780 --> 00:10:53,570
production essentially every flask app

00:10:50,540 --> 00:10:57,050
is whiskey plug-in which you can then

00:10:53,570 --> 00:10:59,480
serve by every whiskey server we have

00:10:57,050 --> 00:11:02,450
made good experience with G Unicom that

00:10:59,480 --> 00:11:05,240
really works quite well so if you go

00:11:02,450 --> 00:11:09,340
into production swap to G unicorn with a

00:11:05,240 --> 00:11:11,840
couple of workers and it's it should be

00:11:09,340 --> 00:11:19,070
reasonably performant I come to that

00:11:11,840 --> 00:11:23,510
later let's look what how how to look in

00:11:19,070 --> 00:11:26,450
the browser that's the first attempt

00:11:23,510 --> 00:11:29,170
well we have the curves I guess in

00:11:26,450 --> 00:11:31,340
presentation the numbers are a bit small

00:11:29,170 --> 00:11:35,930
let's try to make the numbers a bit

00:11:31,340 --> 00:11:39,220
bigger plot Lee Express has a theming

00:11:35,930 --> 00:11:44,660
engine which we can tap into with a

00:11:39,220 --> 00:11:47,000
template keyword and they have a theme

00:11:44,660 --> 00:11:53,060
prefer for presentations so let's use

00:11:47,000 --> 00:11:56,240
that presentation and let's say if it

00:11:53,060 --> 00:11:59,480
were me safest have a look it's detected

00:11:56,240 --> 00:12:03,110
to change and restart at the underlying

00:11:59,480 --> 00:12:06,050
web server and even the website reloads

00:12:03,110 --> 00:12:08,900
by itself so now the numbers are bigger

00:12:06,050 --> 00:12:10,820
so that's quite handy it's not nothing

00:12:08,900 --> 00:12:14,390
magic lots of other frameworks do the

00:12:10,820 --> 00:12:16,940
same but it is very handy so now we see

00:12:14,390 --> 00:12:19,460
the curves a bit better and the numbers

00:12:16,940 --> 00:12:21,770
of a bit better I personally like when

00:12:19,460 --> 00:12:23,990
the data points are more pronounced

00:12:21,770 --> 00:12:28,820
through little dots you can of course do

00:12:23,990 --> 00:12:33,070
this with fly with plotly and with - and

00:12:28,820 --> 00:12:36,470
I just want to show how we can tweak the

00:12:33,070 --> 00:12:40,840
underlying plateau plotly interface so

00:12:36,470 --> 00:12:46,450
we tap into the figure object it has a

00:12:40,840 --> 00:12:50,510
method update tracing is up and right

00:12:46,450 --> 00:12:51,930
traces these curves and in blockly are

00:12:50,510 --> 00:12:58,290
called traces

00:12:51,930 --> 00:13:03,510
and we wanted to use as mode not only

00:12:58,290 --> 00:13:07,100
lines but markers as save it and it

00:13:03,510 --> 00:13:10,530
should do its magic again yes it did

00:13:07,100 --> 00:13:12,300
now we have the dots okay so that's what

00:13:10,530 --> 00:13:16,700
I wanted to get to it was pretty quick

00:13:12,300 --> 00:13:16,700
couple of minutes sir it's not too bad

00:13:17,220 --> 00:13:24,090
so with this setup you can visualize

00:13:21,090 --> 00:13:27,510
easy data frames so so-called tight tidy

00:13:24,090 --> 00:13:29,970
data frames very quickly but of course

00:13:27,510 --> 00:13:32,280
because it's so easy the defaults work

00:13:29,970 --> 00:13:34,700
so well if you want to change something

00:13:32,280 --> 00:13:40,260
then you need to do more work on it I

00:13:34,700 --> 00:13:43,650
want to do one additional thing here all

00:13:40,260 --> 00:13:46,080
the graphs are in one all the curves are

00:13:43,650 --> 00:13:49,350
in one graph it's a bit crowded you can

00:13:46,080 --> 00:13:51,950
separate them out very quickly that's

00:13:49,350 --> 00:13:58,290
that's that's a can be a cool feature

00:13:51,950 --> 00:14:00,390
actually whatever one facet facet so

00:13:58,290 --> 00:14:07,530
let's say we separate them out by type

00:14:00,390 --> 00:14:10,500
as well so if this and then you have

00:14:07,530 --> 00:14:13,050
different graphs showing the types I

00:14:10,500 --> 00:14:17,250
don't think in this case this makes

00:14:13,050 --> 00:14:19,440
really much sense but it's for some data

00:14:17,250 --> 00:14:24,150
sets it's really handy just to separate

00:14:19,440 --> 00:14:26,070
the different types out in this case I

00:14:24,150 --> 00:14:28,830
think it would make much more sense that

00:14:26,070 --> 00:14:31,290
the user can choose which graphs to to

00:14:28,830 --> 00:14:33,780
look at so let's say - Kampai compare

00:14:31,290 --> 00:14:38,160
the total to domestic or something like

00:14:33,780 --> 00:14:40,440
that for this we don't need real custom

00:14:38,160 --> 00:14:44,670
interactivity of course you can do that

00:14:40,440 --> 00:14:46,470
with - we could enhance our little

00:14:44,670 --> 00:14:50,910
example but it takes a little bit too

00:14:46,470 --> 00:14:52,860
long I think so I've created a file for

00:14:50,910 --> 00:14:57,510
this I just quickly want to go through

00:14:52,860 --> 00:15:00,330
with you attack attack I should have

00:14:57,510 --> 00:15:02,250
asked earlier you can see the font is

00:15:00,330 --> 00:15:06,930
big enough okay okay

00:15:02,250 --> 00:15:08,910
that's good yeah this in this app that

00:15:06,930 --> 00:15:14,280
we do this essentially the same thing we

00:15:08,910 --> 00:15:17,250
load the data we create here a list with

00:15:14,280 --> 00:15:19,860
options for a drop-down from the type of

00:15:17,250 --> 00:15:22,170
the data in the data frame instantiate

00:15:19,860 --> 00:15:24,900
the - app definitely define the layout

00:15:22,170 --> 00:15:27,360
and here's something quite nice if you

00:15:24,900 --> 00:15:30,480
don't want to do you deal with markup

00:15:27,360 --> 00:15:32,670
tag tags in HTML you can write all your

00:15:30,480 --> 00:15:35,550
text and descriptions and information to

00:15:32,670 --> 00:15:37,410
the user in markdown that's very handy

00:15:35,550 --> 00:15:39,510
so you just might even have

00:15:37,410 --> 00:15:42,270
documentation already in marked on and

00:15:39,510 --> 00:15:45,750
you can just shovel it into your dash

00:15:42,270 --> 00:15:46,140
and that's yeah I really like the

00:15:45,750 --> 00:15:50,220
markdown

00:15:46,140 --> 00:15:53,880
so then we have to drop down and the

00:15:50,220 --> 00:15:55,950
graph and if you remember before we gave

00:15:53,880 --> 00:15:58,350
some the graph the figure object and

00:15:55,950 --> 00:16:02,340
here we don't so how does the graph now

00:15:58,350 --> 00:16:05,550
what - what know what to display well we

00:16:02,340 --> 00:16:08,490
because the graph has to challenge with

00:16:05,550 --> 00:16:11,670
the change to drop down we have to wire

00:16:08,490 --> 00:16:14,070
them somehow together and for that -

00:16:11,670 --> 00:16:17,550
offers the callback decorator in the

00:16:14,070 --> 00:16:23,600
object which takes the ID of the graph

00:16:17,550 --> 00:16:27,960
and the ID of the of the changing UI

00:16:23,600 --> 00:16:29,760
component and that gets then used in a

00:16:27,960 --> 00:16:31,770
function which updates the graph on

00:16:29,760 --> 00:16:33,960
which draws the graph depending on this

00:16:31,770 --> 00:16:36,630
so this is very similar to what we did

00:16:33,960 --> 00:16:39,600
before we just instantiate a line chart

00:16:36,630 --> 00:16:43,470
in plotly express mangle a little bit

00:16:39,600 --> 00:16:46,980
with data frame and it gets then

00:16:43,470 --> 00:16:49,550
displayed so let's see what it looks

00:16:46,980 --> 00:16:49,550
like

00:16:53,600 --> 00:16:59,420
so here we have a drop down at the

00:16:56,630 --> 00:17:03,710
moment its defaults to just the total

00:16:59,420 --> 00:17:10,270
and we can add let's say the domestic

00:17:03,710 --> 00:17:12,079
murders we can add in acquaintances and

00:17:10,270 --> 00:17:18,500
and so on

00:17:12,079 --> 00:17:21,709
I actually want to a match for a moment

00:17:18,500 --> 00:17:25,910
add them in all just to look really for

00:17:21,709 --> 00:17:29,270
a brief moment at the data so here we

00:17:25,910 --> 00:17:32,350
have the total this is around 300 and

00:17:29,270 --> 00:17:35,900
you can see that domestic and

00:17:32,350 --> 00:17:38,210
acquaintance murders do make up for the

00:17:35,900 --> 00:17:42,680
majority so each of them is maybe around

00:17:38,210 --> 00:17:44,840
40% while strangers in comparison not

00:17:42,680 --> 00:17:47,720
that important so I think that's a take

00:17:44,840 --> 00:17:50,440
home lesson just in everyday life so if

00:17:47,720 --> 00:17:53,270
you worry about if you worry about

00:17:50,440 --> 00:17:55,340
somebody is killing you it won't be the

00:17:53,270 --> 00:17:56,690
stranger on the street normally of

00:17:55,340 --> 00:18:00,020
course if it is the stranger it's

00:17:56,690 --> 00:18:02,660
particularly terrible maybe but it won't

00:18:00,020 --> 00:18:05,150
be it's usually your wife your husband

00:18:02,660 --> 00:18:07,820
your father your daughter or your PyCon

00:18:05,150 --> 00:18:10,610
colleague but but let's let's have a

00:18:07,820 --> 00:18:12,560
look green other acquaintances and the

00:18:10,610 --> 00:18:16,400
good thing is they go down at the moment

00:18:12,560 --> 00:18:19,640
so relax relax

00:18:16,400 --> 00:18:23,600
yes well that's that's the live demo so

00:18:19,640 --> 00:18:27,930
you can see how quickly it is to create

00:18:23,600 --> 00:18:31,309
an interactive demo let's go back to the

00:18:27,930 --> 00:18:31,309
[Music]

00:18:38,800 --> 00:18:49,880
somewhat still in the that is weird I'm

00:18:44,480 --> 00:18:51,929
still in the let's sorry let's start

00:18:49,880 --> 00:18:56,950
this again

00:18:51,929 --> 00:19:00,399
localhost hello class - for Chrome okay

00:18:56,950 --> 00:19:08,320
there we are I know I have to go where

00:19:00,399 --> 00:19:11,409
we were sorry for that okay a live demo

00:19:08,320 --> 00:19:18,909
alright so this was the live demo let's

00:19:11,409 --> 00:19:20,950
do a quick recap - leverage leverage the

00:19:18,909 --> 00:19:22,659
power of plotly we have a figure object

00:19:20,950 --> 00:19:24,460
we have seen and when you use plotly

00:19:22,659 --> 00:19:28,749
express press it's even easier to

00:19:24,460 --> 00:19:31,210
instantiate that and the magic of the

00:19:28,749 --> 00:19:34,960
wiring - what you usually would do with

00:19:31,210 --> 00:19:39,249
JavaScript is done here via decorators

00:19:34,960 --> 00:19:43,090
in the add object so this was a brief

00:19:39,249 --> 00:19:51,879
brief peek into - but there is a lot

00:19:43,090 --> 00:19:55,149
more possible so here we have a - a

00:19:51,879 --> 00:19:58,929
mock-up of the our internal intelligence

00:19:55,149 --> 00:20:01,360
dashboard and I will use I want to use

00:19:58,929 --> 00:20:06,249
it to demonstrate a few more features of

00:20:01,360 --> 00:20:08,200
- and prata broadly so you can see you

00:20:06,249 --> 00:20:11,860
can wire it with different controls like

00:20:08,200 --> 00:20:14,559
the radio buttons you can zoom in this

00:20:11,860 --> 00:20:18,669
is now a zoomed view of what we saw

00:20:14,559 --> 00:20:20,440
before you can have multiple charts by

00:20:18,669 --> 00:20:25,629
inheritance that's really a very

00:20:20,440 --> 00:20:27,850
powerful feature and modularize the

00:20:25,629 --> 00:20:30,419
grafton components by that that's

00:20:27,850 --> 00:20:32,740
something we used quite a bit actually

00:20:30,419 --> 00:20:35,019
you can of course have lots of different

00:20:32,740 --> 00:20:40,509
charts and they all have very sensible

00:20:35,019 --> 00:20:43,509
defaults so far this sounded maybe a

00:20:40,509 --> 00:20:46,259
little bit like an ad for - well it's

00:20:43,509 --> 00:20:50,889
not because we did discover challenges

00:20:46,259 --> 00:20:53,320
and one is that multi-page sites are

00:20:50,889 --> 00:20:55,960
awkward to code it's not impossible but

00:20:53,320 --> 00:20:57,340
- is that - doesn't really help you so

00:20:55,960 --> 00:21:00,060
you really have to go into the

00:20:57,340 --> 00:21:03,280
underlying flask

00:21:00,060 --> 00:21:05,080
framework and yeah it's it's a bit messy

00:21:03,280 --> 00:21:07,630
it's it's lots of people have done it

00:21:05,080 --> 00:21:12,180
but it's definitely not what sort of -

00:21:07,630 --> 00:21:15,760
office - with 10 or 20 lines of code

00:21:12,180 --> 00:21:19,120
another sort of more strong problem at

00:21:15,760 --> 00:21:22,320
least for us was that rendering can be

00:21:19,120 --> 00:21:22,320
quite slow

00:21:24,300 --> 00:21:30,640
- and plotly a very big library so they

00:21:27,760 --> 00:21:32,650
get loaded into the some parts of that

00:21:30,640 --> 00:21:34,060
game the JavaScript parts of that get

00:21:32,650 --> 00:21:37,090
loaded into the browser and the browser

00:21:34,060 --> 00:21:38,710
has to sort of unpack them it takes at

00:21:37,090 --> 00:21:41,650
the beginning or is quite a bit of time

00:21:38,710 --> 00:21:44,980
with bigger apps it's still fast enough

00:21:41,650 --> 00:21:47,410
normally but when your JavaScript engine

00:21:44,980 --> 00:21:51,190
is slow like in a virtualized desktop

00:21:47,410 --> 00:21:55,560
environment then it sucks it really does

00:21:51,190 --> 00:21:58,480
and it's it's this can be a deal-breaker

00:21:55,560 --> 00:22:01,510
in our particular environment we have

00:21:58,480 --> 00:22:03,310
virtual desktops it was so for the

00:22:01,510 --> 00:22:06,190
dashboard we did not continue with a

00:22:03,310 --> 00:22:08,280
pioneer solution rather opted for one of

00:22:06,190 --> 00:22:11,620
the many JavaScript charting libraries

00:22:08,280 --> 00:22:15,880
wiring all the controls manually in

00:22:11,620 --> 00:22:21,280
JavaScript anyway let's wrap up we are

00:22:15,880 --> 00:22:24,070
getting to the end what is - good for -

00:22:21,280 --> 00:22:29,310
builds quickly beautiful analytical web

00:22:24,070 --> 00:22:33,130
apps it's really great and easy to build

00:22:29,310 --> 00:22:35,980
beautiful sites with it what sets -

00:22:33,130 --> 00:22:39,640
apart it's pure Python no JavaScript

00:22:35,980 --> 00:22:41,830
required really the whole API is

00:22:39,640 --> 00:22:45,120
accessible in pure Python even the

00:22:41,830 --> 00:22:48,640
component callbacks F as we have seen

00:22:45,120 --> 00:22:52,360
can be written and managed in Pisan what

00:22:48,640 --> 00:22:55,030
are the challenges well - sites can be

00:22:52,360 --> 00:22:57,640
rather slow to render depending on the

00:22:55,030 --> 00:23:00,850
how fast the JavaScript engine of the

00:22:57,640 --> 00:23:06,130
rendering browser is what's the bottom

00:23:00,850 --> 00:23:08,620
line well - is fun it really has a

00:23:06,130 --> 00:23:11,200
gentle learning curve and you get to

00:23:08,620 --> 00:23:12,520
reasonable results pretty quickly I hope

00:23:11,200 --> 00:23:15,010
as we have seen

00:23:12,520 --> 00:23:18,610
this encourages to put interactive

00:23:15,010 --> 00:23:20,650
visualizations up for the Python leaning

00:23:18,610 --> 00:23:23,830
data scientists who would in the past

00:23:20,650 --> 00:23:26,190
have hesitated to do so thank you for

00:23:23,830 --> 00:23:26,190
your attention

00:23:32,130 --> 00:23:37,570
Thank You Leah for such a great

00:23:34,059 --> 00:23:39,309
introduction to - okay great we already

00:23:37,570 --> 00:23:44,860
have lots of hands up for questions so

00:23:39,309 --> 00:23:46,809
I'm gonna walk down this way is the

00:23:44,860 --> 00:23:49,750
browser experience mobile-friendly and

00:23:46,809 --> 00:23:54,340
can you embed - into something else

00:23:49,750 --> 00:23:57,220
Oh mobile-friendly that depends on upon

00:23:54,340 --> 00:24:00,250
the CSS framework you use and yes you

00:23:57,220 --> 00:24:01,929
can make it mobile friendly you can

00:24:00,250 --> 00:24:08,920
embed it in something else

00:24:01,929 --> 00:24:11,710
I don't really know yeah what's the data

00:24:08,920 --> 00:24:14,080
updated duty - restarted web server just

00:24:11,710 --> 00:24:16,150
refresh the page sorry once again I

00:24:14,080 --> 00:24:18,280
means the data updated you know the CSV

00:24:16,150 --> 00:24:19,210
file if you have some new data in the

00:24:18,280 --> 00:24:21,880
CSV file

00:24:19,210 --> 00:24:26,590
do you need to restart the web server or

00:24:21,880 --> 00:24:30,309
just simply refresh the page that's a

00:24:26,590 --> 00:24:32,500
good question you need to restart the

00:24:30,309 --> 00:24:34,720
server but when you have the development

00:24:32,500 --> 00:24:38,070
server this will happen automatically as

00:24:34,720 --> 00:24:42,610
long as the CSV file is in the watched

00:24:38,070 --> 00:24:45,330
area of the server if you're worried

00:24:42,610 --> 00:24:47,559
about life updates you can do them

00:24:45,330 --> 00:24:53,020
differently so then you wouldn't use a

00:24:47,559 --> 00:24:56,080
normal CSV for that high so far using

00:24:53,020 --> 00:24:57,790
the demo the use of static data on the

00:24:56,080 --> 00:25:01,360
other hand have you tried using

00:24:57,790 --> 00:25:06,450
streaming data in a network location

00:25:01,360 --> 00:25:09,100
like for example predicting the next

00:25:06,450 --> 00:25:12,010
where worse or when's next crime going

00:25:09,100 --> 00:25:15,309
to happen or something we haven't done

00:25:12,010 --> 00:25:18,700
that I've seen other apps doing that so

00:25:15,309 --> 00:25:20,640
it realized then on changes to the

00:25:18,700 --> 00:25:23,380
backend but we haven't done that we used

00:25:20,640 --> 00:25:24,780
we actually didn't use CS we use the

00:25:23,380 --> 00:25:31,020
data banks basic

00:25:24,780 --> 00:25:34,530
says via appendix yeah why would you

00:25:31,020 --> 00:25:38,280
choose - other like something like power

00:25:34,530 --> 00:25:42,780
bi or tableau sorry once again why would

00:25:38,280 --> 00:25:48,330
you choose - over other tools like power

00:25:42,780 --> 00:25:55,050
bi yes there are lots of visualization

00:25:48,330 --> 00:25:57,690
libraries and - is really very it's it's

00:25:55,050 --> 00:25:59,790
very easy to get started with so as you

00:25:57,690 --> 00:26:03,440
have seen you know this is a very few

00:25:59,790 --> 00:26:07,080
code you can get to reasonable

00:26:03,440 --> 00:26:09,480
visualizations that's probably the the

00:26:07,080 --> 00:26:11,010
niche for it so if you if you want

00:26:09,480 --> 00:26:16,350
quickly something reasonably

00:26:11,010 --> 00:26:18,450
nice-looking up there then use - I was

00:26:16,350 --> 00:26:20,880
just wondering uh what sort of a maximum

00:26:18,450 --> 00:26:24,630
size of the data frames that can be

00:26:20,880 --> 00:26:28,140
loaded in yeah if you use the standard

00:26:24,630 --> 00:26:31,380
framework it can't be too big we didn't

00:26:28,140 --> 00:26:35,970
use anything big so this all data yeah

00:26:31,380 --> 00:26:40,140
it's it's nothing massive you can do

00:26:35,970 --> 00:26:43,680
with Trix feed bigger amounts of data in

00:26:40,140 --> 00:26:46,080
but I don't think pandas isn't is a

00:26:43,680 --> 00:26:54,390
framework making that easy let's let's

00:26:46,080 --> 00:26:58,740
put it that way you used pandas is that

00:26:54,390 --> 00:27:02,370
necessary for using - or can you if your

00:26:58,740 --> 00:27:06,840
data is coming from other sources can

00:27:02,370 --> 00:27:11,100
you avoid using pandas or is it no it's

00:27:06,840 --> 00:27:15,710
completely optional you can just feed it

00:27:11,100 --> 00:27:15,710
Jason and it will display that

00:27:25,500 --> 00:27:30,179
hi thanks for the talk I saw just

00:27:28,080 --> 00:27:32,850
quickly that it's like a community

00:27:30,179 --> 00:27:35,820
edition and a commercial edition so can

00:27:32,850 --> 00:27:38,250
you get most of the functionality or did

00:27:35,820 --> 00:27:40,650
you have to go to the commercial Edition

00:27:38,250 --> 00:27:43,799
for something yeah that's a very good

00:27:40,650 --> 00:27:46,669
question thank you for asking it and the

00:27:43,799 --> 00:27:49,890
whole thing is open-source and the

00:27:46,669 --> 00:27:51,929
commercial version is office essentially

00:27:49,890 --> 00:27:55,950
just hosting or not just it offers

00:27:51,929 --> 00:27:59,179
hosting and support we haven't tried

00:27:55,950 --> 00:28:04,020
that out I don't know anything about it

00:27:59,179 --> 00:28:07,260
but the the library itself plotly and -

00:28:04,020 --> 00:28:08,039
is completely free and you can use it to

00:28:07,260 --> 00:28:12,690
your heart's content

00:28:08,039 --> 00:28:15,630
I have to admit that it's a bit unclear

00:28:12,690 --> 00:28:19,470
on the on the web properly website yeah

00:28:15,630 --> 00:28:21,480
I try to push for the science product

00:28:19,470 --> 00:28:27,240
but it's it's really not very clear so

00:28:21,480 --> 00:28:29,150
it's not inviting to buy so we still

00:28:27,240 --> 00:28:34,770
have time for one or two more questions

00:28:29,150 --> 00:28:40,010
if there are any ok looks like all done

00:28:34,770 --> 00:28:40,010

YouTube URL: https://www.youtube.com/watch?v=O1gvNeJlIs0


