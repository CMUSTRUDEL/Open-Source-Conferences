Title: Building, designing, teaching and training simulation environments for Machine Learning
Publication date: 2019-08-02
Playlist: PyCon Australia 2019
Description: 
	Paris Buttfield-Addison

Imagine you're building a fancy robot-driven warehouse. Your pick, place, and packing robots need to get around quickly, find the right item and put it to the right place without colliding with each other, shelves, or people. But you don't have any robots yet, and you need to start. Try simulations!

https://2019.pycon-au.org/talks/building-designing-teaching-and-training-simulation-environments-for-machine-learning

PyCon AU, the national Python Language conference, is on again this August in Sydney, at the International Convention Centre, Sydney, August 2 - 6 2019.

Video licence: CC BY-NC-SA 4.0 - https://creativecommons.org/licenses/by-nc-sa/4.0/

Python, PyCon, PyConAU

Fri Aug  2 11:50:00 2019 at C3.6
Captions: 
	00:00:02,419 --> 00:00:07,620
hi everyone we're actually going to

00:00:04,890 --> 00:00:09,090
start now we've got everyone on seats

00:00:07,620 --> 00:00:12,719
we've got all the doorways clear so

00:00:09,090 --> 00:00:15,929
everything's great so we got Paris from

00:00:12,719 --> 00:00:17,400
Tasmania and it'd be very very important

00:00:15,929 --> 00:00:18,840
details I'm going to be talking about

00:00:17,400 --> 00:00:21,330
unity yes

00:00:18,840 --> 00:00:24,300
hello everyone its to be you can look at

00:00:21,330 --> 00:00:26,430
me now I have arrived

00:00:24,300 --> 00:00:27,599
this session is simulation environments

00:00:26,430 --> 00:00:30,300
for machine learning my name is Paris

00:00:27,599 --> 00:00:32,669
you can tweet at me or whatever you like

00:00:30,300 --> 00:00:34,020
or not don't mind it's not to be

00:00:32,669 --> 00:00:35,730
speaking in the science and data track

00:00:34,020 --> 00:00:37,230
that's really cool it's good to be

00:00:35,730 --> 00:00:39,510
speaking on you know the traditional

00:00:37,230 --> 00:00:41,460
land of the people yeah I think the

00:00:39,510 --> 00:00:42,989
gadigal people of the eora nation maybe

00:00:41,460 --> 00:00:44,460
I'm not 100 isn't sure who they are but

00:00:42,989 --> 00:00:45,750
I normally speaking no but in Tasmania

00:00:44,460 --> 00:00:48,390
so I have to look up these things when I

00:00:45,750 --> 00:00:48,870
travel around Australia but it's great

00:00:48,390 --> 00:00:50,219
to be here

00:00:48,870 --> 00:00:52,620
Sydney Sydney seems to have a really

00:00:50,219 --> 00:00:55,680
nice Convention Center now which is an

00:00:52,620 --> 00:00:58,649
improvement this is a talking very

00:00:55,680 --> 00:01:01,020
visual machine learning with a little

00:00:58,649 --> 00:01:02,309
bit of Python tiny bit of platinum so

00:01:01,020 --> 00:01:04,769
are your Python people I'm gonna

00:01:02,309 --> 00:01:06,299
disappoint you greatly for a variety of

00:01:04,769 --> 00:01:08,909
reasons least of all because there's not

00:01:06,299 --> 00:01:10,650
much of Python here I'm a professional

00:01:08,909 --> 00:01:12,210
game developer I do lots of things I'm

00:01:10,650 --> 00:01:13,110
an enthusiastic amateur at machine

00:01:12,210 --> 00:01:15,180
learning

00:01:13,110 --> 00:01:16,110
we're only recently kind of embracing it

00:01:15,180 --> 00:01:17,970
and doing a lot of machine learning

00:01:16,110 --> 00:01:19,979
things professional I'm a game developer

00:01:17,970 --> 00:01:21,299
I'm also a very amateur Python history I

00:01:19,979 --> 00:01:22,890
don't really know how Python works it

00:01:21,299 --> 00:01:23,479
kind of confuses and frustrates me all

00:01:22,890 --> 00:01:25,920
at once

00:01:23,479 --> 00:01:29,700
most of my programming world is Swift

00:01:25,920 --> 00:01:31,409
and c-sharp so I like Python I love

00:01:29,700 --> 00:01:34,290
using Python I don't really understand

00:01:31,409 --> 00:01:35,579
Python despite that I do have a PhD in

00:01:34,290 --> 00:01:37,380
computer science that I somehow tricked

00:01:35,579 --> 00:01:39,860
the university into giving me and I do

00:01:37,380 --> 00:01:42,360
love my dogs which you can see here

00:01:39,860 --> 00:01:43,850
they're pretty great I am from Tasmania

00:01:42,360 --> 00:01:46,649
you should visit it's pretty excellent

00:01:43,850 --> 00:01:47,880
and the requisite bio slides I write a

00:01:46,649 --> 00:01:49,560
lot of books many of them are related to

00:01:47,880 --> 00:01:51,030
the topics I'm talking about and a bit a

00:01:49,560 --> 00:01:53,159
lot of video games we're best known for

00:01:51,030 --> 00:01:56,939
this video game which won a BAFTA which

00:01:53,159 --> 00:01:58,500
is pretty cool so this topic is Python

00:01:56,939 --> 00:01:59,759
adjacent again I'm going to apologize a

00:01:58,500 --> 00:02:00,630
couple of times here because unity which

00:01:59,759 --> 00:02:02,250
is one other thing all these we're

00:02:00,630 --> 00:02:07,619
talking about here is not Python at all

00:02:02,250 --> 00:02:10,679
it's c-sharp what can you do I like

00:02:07,619 --> 00:02:12,870
c-sharp it frustrates and confuses me in

00:02:10,679 --> 00:02:13,739
a completely different way to Python but

00:02:12,870 --> 00:02:16,230
it's you know it's an interesting

00:02:13,739 --> 00:02:18,750
language we're going to talk about unity

00:02:16,230 --> 00:02:21,060
for the simulation building and Python

00:02:18,750 --> 00:02:22,980
for the machine learning okay so python

00:02:21,060 --> 00:02:25,050
adjacent the plaques and stuff is is

00:02:22,980 --> 00:02:27,989
there but not front and center you have

00:02:25,050 --> 00:02:29,430
to trust me it's powered by Python so

00:02:27,989 --> 00:02:31,230
there's three pieces of this talk

00:02:29,430 --> 00:02:35,220
there's unity which is a game engine has

00:02:31,230 --> 00:02:37,349
anyone here used unity Nathan you maybe

00:02:35,220 --> 00:02:38,549
yeah there's a machine learning

00:02:37,349 --> 00:02:40,140
framework tends to flow is anyone here

00:02:38,549 --> 00:02:42,000
use tensor floor okay that's a much

00:02:40,140 --> 00:02:43,260
better and there's a thing called unity

00:02:42,000 --> 00:02:44,190
machine learning agents talking I'm not

00:02:43,260 --> 00:02:45,299
gonna ask him you've used that one

00:02:44,190 --> 00:02:47,250
because I'm assuming it's gonna be like

00:02:45,299 --> 00:02:50,819
some fraction on you thank you Mars over

00:02:47,250 --> 00:02:52,200
here so the game engine unity is the

00:02:50,819 --> 00:02:54,690
thing we build a simulation environment

00:02:52,200 --> 00:02:55,680
in the tensor flow is the machine

00:02:54,690 --> 00:02:56,849
learning bit and then we glue them

00:02:55,680 --> 00:02:58,769
together with this unity machine

00:02:56,849 --> 00:02:59,970
learning oh you just toolkit okay I'll

00:02:58,769 --> 00:03:01,709
come back to each of these as we step

00:02:59,970 --> 00:03:03,510
through but basically this talk is a

00:03:01,709 --> 00:03:06,120
quick introduction to the power of

00:03:03,510 --> 00:03:09,329
simulation driven machine learning using

00:03:06,120 --> 00:03:11,480
a game engine okay this is the game

00:03:09,329 --> 00:03:13,560
engine it's called unity it's a

00:03:11,480 --> 00:03:16,349
disturbingly large percentage of the

00:03:13,560 --> 00:03:18,359
games industry I'm not here to debate

00:03:16,349 --> 00:03:21,329
the relative merits of that it's kind of

00:03:18,359 --> 00:03:23,130
horrifying it's very good though sorry

00:03:21,329 --> 00:03:24,930
there's that and it's free for most

00:03:23,130 --> 00:03:26,850
reasonable purposes despite not being

00:03:24,930 --> 00:03:30,209
open source let's not go into that

00:03:26,850 --> 00:03:31,560
either like unity looks like pretty much

00:03:30,209 --> 00:03:36,569
every other Pro app you've ever seen

00:03:31,560 --> 00:03:41,609
it's dark don't know why perhaps the

00:03:36,569 --> 00:03:43,079
dark unity lets you build 3d scenes and

00:03:41,609 --> 00:03:44,430
simulate them okay it's designed for

00:03:43,079 --> 00:03:45,750
games but it's useful for everything

00:03:44,430 --> 00:03:47,280
from VFX to building you know

00:03:45,750 --> 00:03:50,519
simulations of things you want to model

00:03:47,280 --> 00:03:52,489
in this case I've added a cube that's

00:03:50,519 --> 00:03:54,419
pretty exciting everyone loves cubes

00:03:52,489 --> 00:03:56,130
unity behaves very much like any other

00:03:54,419 --> 00:03:57,720
3d environment where you can add things

00:03:56,130 --> 00:04:00,150
and moving around so now I've squashed

00:03:57,720 --> 00:04:01,500
my cube and made it into a floor okay

00:04:00,150 --> 00:04:04,500
hopefully runs kind of familiar with

00:04:01,500 --> 00:04:05,970
this I've added a sphere above it I've

00:04:04,500 --> 00:04:08,790
renamed the sphere and the flattened

00:04:05,970 --> 00:04:10,019
cube to floor and ball respectively so I

00:04:08,790 --> 00:04:12,870
can kind of keep track of what they are

00:04:10,019 --> 00:04:14,220
that's very exciting and then if I play

00:04:12,870 --> 00:04:16,410
the scene absolutely nothing will happen

00:04:14,220 --> 00:04:17,669
because there's no interaction in this

00:04:16,410 --> 00:04:19,950
environment but I've created a very nice

00:04:17,669 --> 00:04:22,260
3d scene with the floor and a ball okay

00:04:19,950 --> 00:04:23,640
this is pretty straightforward stuff

00:04:22,260 --> 00:04:25,110
it's a it's a game engine right

00:04:23,640 --> 00:04:26,310
everyone's used the game engine once or

00:04:25,110 --> 00:04:27,710
twice or played with a game engine once

00:04:26,310 --> 00:04:31,560
apply

00:04:27,710 --> 00:04:33,689
Unity composes things of pieces so if we

00:04:31,560 --> 00:04:36,840
had a component to the ball called a

00:04:33,689 --> 00:04:38,159
rigidbody we can then make the ball fall

00:04:36,840 --> 00:04:39,629
to the floor because it'll be affected

00:04:38,159 --> 00:04:42,330
by the physics simulation which unity

00:04:39,629 --> 00:04:43,499
ships with right so now we have a ball

00:04:42,330 --> 00:04:46,050
with a rigidbody on it which means

00:04:43,499 --> 00:04:47,370
please simulate this in a physics engine

00:04:46,050 --> 00:04:49,830
which means the ball falls to the floor

00:04:47,370 --> 00:04:51,389
that's not very exciting right so if we

00:04:49,830 --> 00:04:53,520
want the ball to bounce we create a

00:04:51,389 --> 00:04:55,199
physic material which is unities term

00:04:53,520 --> 00:04:56,430
for some properties that let you

00:04:55,199 --> 00:04:58,889
simulate something with the physics

00:04:56,430 --> 00:05:00,500
engine in a certain way we set the

00:04:58,889 --> 00:05:02,939
properties of that to be very bouncy

00:05:00,500 --> 00:05:04,289
so we basically set the you know bounce

00:05:02,939 --> 00:05:06,330
combined to maximum which means we'll

00:05:04,289 --> 00:05:09,060
just keep incrementing as it bounces and

00:05:06,330 --> 00:05:10,919
then we apply that physic material to

00:05:09,060 --> 00:05:12,539
the ball by you know selecting our ball

00:05:10,919 --> 00:05:15,000
and dragging the thing we just created

00:05:12,539 --> 00:05:16,800
onto it very exciting and then ever we

00:05:15,000 --> 00:05:19,110
run the run the simulation it will

00:05:16,800 --> 00:05:21,000
bounce think that's playing is that play

00:05:19,110 --> 00:05:22,529
no there we go now it's play so if we

00:05:21,000 --> 00:05:25,589
play that now the ball will bounce which

00:05:22,529 --> 00:05:26,669
is incredibly exciting okay that's much

00:05:25,589 --> 00:05:28,560
more exciting than just looking at the

00:05:26,669 --> 00:05:29,729
bowl sitting there right okay that's you

00:05:28,560 --> 00:05:31,680
know that's ten seconds of work that's

00:05:29,729 --> 00:05:33,029
pretty good unity is a very powerful way

00:05:31,680 --> 00:05:34,800
of constructing very very vibrant

00:05:33,029 --> 00:05:37,050
simulation scenes that can do all sorts

00:05:34,800 --> 00:05:38,669
of stuff we can take this one step

00:05:37,050 --> 00:05:41,909
further so not only can we make the ball

00:05:38,669 --> 00:05:43,229
bounce but we can add C sharp C sharp is

00:05:41,909 --> 00:05:45,539
very exciting we can create a C sharp

00:05:43,229 --> 00:05:47,610
script basically another file within our

00:05:45,539 --> 00:05:49,469
project here we'll name it bounce and

00:05:47,610 --> 00:05:51,449
I'm sorry this is C sharp but don't know

00:05:49,469 --> 00:05:52,919
like Python people spontaneously combust

00:05:51,449 --> 00:05:56,879
when they see something I don't know

00:05:52,919 --> 00:05:58,199
this is this is C sharp I don't know how

00:05:56,879 --> 00:05:59,520
much people know C sharp but hopefully

00:05:58,199 --> 00:06:00,659
this is mostly readable to anyone who's

00:05:59,520 --> 00:06:03,180
programmed in any modern programming

00:06:00,659 --> 00:06:05,339
language it has a class with the same

00:06:03,180 --> 00:06:07,589
name as the file the public boolean

00:06:05,339 --> 00:06:09,360
called print debug which we default to

00:06:07,589 --> 00:06:11,759
false and implementation of a method

00:06:09,360 --> 00:06:13,229
called on collision enter that if print

00:06:11,759 --> 00:06:15,180
debug is true then prints out a thing

00:06:13,229 --> 00:06:16,289
saying what was collided with and this

00:06:15,180 --> 00:06:18,599
on collision enter is called by the

00:06:16,289 --> 00:06:19,889
physics engine when something hits

00:06:18,599 --> 00:06:22,229
whatever object this script is attached

00:06:19,889 --> 00:06:24,990
to hopefully that's pretty sentient

00:06:22,229 --> 00:06:26,069
since Soviet planner sure everybody so

00:06:24,990 --> 00:06:27,180
that's that's a really simple script

00:06:26,069 --> 00:06:28,409
we're going to create that script and

00:06:27,180 --> 00:06:30,599
then we're going to drag that script

00:06:28,409 --> 00:06:31,800
onto the floor so we're gonna select the

00:06:30,599 --> 00:06:34,199
floor and then drag that script will

00:06:31,800 --> 00:06:36,839
Knight onto it as a component which then

00:06:34,199 --> 00:06:38,580
adds a script component to that floor

00:06:36,839 --> 00:06:39,700
and you'll see that public boolean

00:06:38,580 --> 00:06:42,430
became a tick box

00:06:39,700 --> 00:06:44,890
which is quite useful now we can total

00:06:42,430 --> 00:06:47,830
them off within the editor you know it

00:06:44,890 --> 00:06:51,160
splits it out sensibly into words now if

00:06:47,830 --> 00:06:52,180
we click Play and then turn on the

00:06:51,160 --> 00:06:55,330
console which will appear down the

00:06:52,180 --> 00:06:56,950
bottom the ball will bounce and then we

00:06:55,330 --> 00:06:58,960
can toggle that tick box and the console

00:06:56,950 --> 00:07:00,600
spit out the thing that hit the floor

00:06:58,960 --> 00:07:05,320
okay

00:07:00,600 --> 00:07:06,460
very very hypnotic the reason I'm

00:07:05,320 --> 00:07:07,960
showing all this is because I'm trying

00:07:06,460 --> 00:07:09,400
to make it obvious how easy it is to

00:07:07,960 --> 00:07:10,900
build a relatively complicated scene in

00:07:09,400 --> 00:07:12,700
unity very quickly and simulate things

00:07:10,900 --> 00:07:13,780
okay so this is not very interesting

00:07:12,700 --> 00:07:16,870
nobody wants to do machine learning with

00:07:13,780 --> 00:07:20,770
a bouncing ball somebody does you know

00:07:16,870 --> 00:07:22,900
but not me but a game engine lets you

00:07:20,770 --> 00:07:24,810
create enough of a simulation of the

00:07:22,900 --> 00:07:26,590
real world that it's kind of interesting

00:07:24,810 --> 00:07:28,150
okay so our game engine lets you

00:07:26,590 --> 00:07:30,130
simulate enough of the real world to

00:07:28,150 --> 00:07:31,300
play with machine learning in a way that

00:07:30,130 --> 00:07:33,010
you might be able to transpose that to

00:07:31,300 --> 00:07:35,410
robots or cars or something that exists

00:07:33,010 --> 00:07:37,360
physically it's often called AI biodome

00:07:35,410 --> 00:07:39,670
it's a synthetic environment that's a

00:07:37,360 --> 00:07:43,780
replica of enough of the real world to

00:07:39,670 --> 00:07:45,040
be interesting to be useful now there's

00:07:43,780 --> 00:07:46,390
been an explosion of all sorts of AI

00:07:45,040 --> 00:07:48,220
things in the last five years or so

00:07:46,390 --> 00:07:49,870
there's you know there's physics based

00:07:48,220 --> 00:07:51,730
things learning to walk there's

00:07:49,870 --> 00:07:53,620
cognitive based like alphago there's

00:07:51,730 --> 00:07:55,240
this doom which can play doom based on

00:07:53,620 --> 00:07:56,770
the images of doom rather than any sort

00:07:55,240 --> 00:07:58,480
of interaction with the game there's

00:07:56,770 --> 00:08:00,670
lots of different AI things that are

00:07:58,480 --> 00:08:02,170
popping up lately that do things in all

00:08:00,670 --> 00:08:04,750
sorts of different ways whether they're

00:08:02,170 --> 00:08:06,490
cognitive physical or visual that's

00:08:04,750 --> 00:08:07,720
really interesting to me because a game

00:08:06,490 --> 00:08:10,330
engine combines all these things into

00:08:07,720 --> 00:08:11,890
one place which makes a game engine a

00:08:10,330 --> 00:08:15,010
really great way to explore machine

00:08:11,890 --> 00:08:16,570
learning this is where we entered the

00:08:15,010 --> 00:08:19,180
second piece of this talk which is the

00:08:16,570 --> 00:08:22,210
unity ml agents talking it is very beta

00:08:19,180 --> 00:08:25,030
it is open source and it is some glue

00:08:22,210 --> 00:08:26,700
between Python like they claim it's just

00:08:25,030 --> 00:08:28,780
tensorflow it really it's just Python

00:08:26,700 --> 00:08:32,050
which incidentally gets you tensorflow

00:08:28,780 --> 00:08:34,780
obviously and unity it lets you control

00:08:32,050 --> 00:08:36,400
unity from Python and ships with a bunch

00:08:34,780 --> 00:08:37,770
of pre-made machine learning algorithms

00:08:36,400 --> 00:08:39,520
that let you machine learning unity

00:08:37,770 --> 00:08:41,200
they've done a whole bunch of research

00:08:39,520 --> 00:08:42,729
they've hired some some impressively

00:08:41,200 --> 00:08:44,770
qualified people to write papers and

00:08:42,729 --> 00:08:46,150
they've done it all properly they asked

00:08:44,770 --> 00:08:48,520
you to cite this paper if you use their

00:08:46,150 --> 00:08:50,230
thing but basically the Uni ml agents

00:08:48,520 --> 00:08:51,960
toolkit is some glue that lets you do

00:08:50,230 --> 00:08:54,480
machine learning inside unity

00:08:51,960 --> 00:08:55,529
with Python we're going to take a look

00:08:54,480 --> 00:08:56,730
at an example to explain this better

00:08:55,529 --> 00:08:57,990
this is our example which I'll come to

00:08:56,730 --> 00:09:00,149
in a moment it's a little racetrack we

00:08:57,990 --> 00:09:02,250
made with some Pike on Billboard's

00:09:00,149 --> 00:09:04,050
because why not we'll come back to this

00:09:02,250 --> 00:09:05,580
in a minute those are going to step

00:09:04,050 --> 00:09:08,450
through the three core components of

00:09:05,580 --> 00:09:10,230
what ml agents provides so these are

00:09:08,450 --> 00:09:11,580
similar terms to what you might find

00:09:10,230 --> 00:09:14,310
elsewhere in the machine learning world

00:09:11,580 --> 00:09:15,930
they're just terms for things you'll

00:09:14,310 --> 00:09:17,880
find in unity so these are brains

00:09:15,930 --> 00:09:21,480
academies and agents these are what the

00:09:17,880 --> 00:09:23,520
machine learning framework adds a brain

00:09:21,480 --> 00:09:26,640
is a thing that encapsulates some sort

00:09:23,520 --> 00:09:28,560
of logic from making a decision okay so

00:09:26,640 --> 00:09:29,580
it receives observations and then gives

00:09:28,560 --> 00:09:32,010
back a decision based on those

00:09:29,580 --> 00:09:34,589
observations that's all it does much

00:09:32,010 --> 00:09:36,240
like our brain its job is to control

00:09:34,589 --> 00:09:38,220
things okay

00:09:36,240 --> 00:09:39,570
there's multiple types of brain you can

00:09:38,220 --> 00:09:41,160
create using the MLA gence toolkit

00:09:39,570 --> 00:09:42,720
there's the player brain which is just a

00:09:41,160 --> 00:09:43,950
brain controlled by a person so you can

00:09:42,720 --> 00:09:46,200
connect a player brain in two keys on a

00:09:43,950 --> 00:09:48,360
keyboard for testing things there's a

00:09:46,200 --> 00:09:51,450
heuristic brain where you can write code

00:09:48,360 --> 00:09:54,180
you know AI which basically just means

00:09:51,450 --> 00:09:55,980
lots of if statements and then there's a

00:09:54,180 --> 00:09:58,800
learning brain which can be piped into

00:09:55,980 --> 00:10:01,050
tensorflow or read a neural net which is

00:09:58,800 --> 00:10:04,230
just a PP file from tensorflow in infer

00:10:01,050 --> 00:10:07,339
somehow Sabrina brain makes decisions

00:10:04,230 --> 00:10:09,660
based on input input is observations

00:10:07,339 --> 00:10:11,580
there's an Academy which sits between

00:10:09,660 --> 00:10:13,560
the brain and the thing that it is

00:10:11,580 --> 00:10:14,850
controlling the brain orkest are the

00:10:13,560 --> 00:10:16,410
Academy orchestrates decisions from the

00:10:14,850 --> 00:10:17,940
brain or brains as it might be which

00:10:16,410 --> 00:10:21,240
we'll come to a minute everyone wants

00:10:17,940 --> 00:10:22,680
multiple brains and the Academy talks to

00:10:21,240 --> 00:10:25,500
the brain and then talks to the agent

00:10:22,680 --> 00:10:26,640
and mediates that process the Academy is

00:10:25,500 --> 00:10:27,990
also where you set environmental why'd

00:10:26,640 --> 00:10:29,130
things like you know rendering quality

00:10:27,990 --> 00:10:30,540
and speed and stuff because when you're

00:10:29,130 --> 00:10:31,890
training you want to go very fast and

00:10:30,540 --> 00:10:33,270
when you're inferring you probably wanna

00:10:31,890 --> 00:10:35,279
look at your simulation and see it at a

00:10:33,270 --> 00:10:36,480
speed of human can comprehend the

00:10:35,279 --> 00:10:37,890
Academy also has a inter process

00:10:36,480 --> 00:10:39,360
communication which talks to Python

00:10:37,890 --> 00:10:41,250
remember this is all sitting within

00:10:39,360 --> 00:10:44,760
unity so we need to talk to Python

00:10:41,250 --> 00:10:46,200
somehow then finally the agent which is

00:10:44,760 --> 00:10:48,360
a thing that exists in the energy

00:10:46,200 --> 00:10:50,459
simulation that is being controlled by

00:10:48,360 --> 00:10:53,339
the brain through the Academy the agent

00:10:50,459 --> 00:10:55,829
generates observations somehow in the

00:10:53,339 --> 00:10:56,760
world tells the brain what's found the

00:10:55,829 --> 00:10:58,550
brain says okay based on those

00:10:56,760 --> 00:11:00,779
observations I'd like you to do this

00:10:58,550 --> 00:11:01,020
okay it also assigns rewards and will

00:11:00,779 --> 00:11:05,149
get

00:11:01,020 --> 00:11:07,110
a second so that's the three components

00:11:05,149 --> 00:11:09,029
the easiest way to look at this again is

00:11:07,110 --> 00:11:11,459
to step through an example but there's

00:11:09,029 --> 00:11:12,750
multiple ways you can train and learn

00:11:11,459 --> 00:11:14,630
there's reinforcement learning there's

00:11:12,750 --> 00:11:16,500
new revolution as imitation learning

00:11:14,630 --> 00:11:18,660
imitation learning is where you kind of

00:11:16,500 --> 00:11:20,600
give an example of an optimal policy and

00:11:18,660 --> 00:11:22,260
then it tries to its best to mimic that

00:11:20,600 --> 00:11:23,339
reinforcement learning is the one I'm

00:11:22,260 --> 00:11:25,589
going to look at today because it's

00:11:23,339 --> 00:11:26,670
based on rewards so you punish it and

00:11:25,589 --> 00:11:29,279
you reward it for doing the right thing

00:11:26,670 --> 00:11:30,600
so we quickly look at imitation our

00:11:29,279 --> 00:11:33,480
reinforcement learning not imitation

00:11:30,600 --> 00:11:34,500
like reinforcement learning at the core

00:11:33,480 --> 00:11:36,060
of reinforcement learning of these three

00:11:34,500 --> 00:11:39,630
concepts actions observations and

00:11:36,060 --> 00:11:42,240
rewards so an agent does stuff those are

00:11:39,630 --> 00:11:43,860
the actions it sees stuff those are the

00:11:42,240 --> 00:11:45,450
observations and it is rewarded or

00:11:43,860 --> 00:11:47,399
penalized appropriately we call the

00:11:45,450 --> 00:11:48,870
reward even up can be negative reward

00:11:47,399 --> 00:11:51,529
Allah penalized appropriately for based

00:11:48,870 --> 00:11:53,640
on what it's done through the brain okay

00:11:51,529 --> 00:11:55,320
the goal of reinforcement learning is to

00:11:53,640 --> 00:11:57,060
learn a policy which is mapping

00:11:55,320 --> 00:11:59,010
observations to actions to do whatever

00:11:57,060 --> 00:12:00,720
it is you want to do everyone with me so

00:11:59,010 --> 00:12:02,100
far these are just slightly different

00:12:00,720 --> 00:12:05,279
terms for pretty much standard machine

00:12:02,100 --> 00:12:07,800
learning stuff so far so actions are

00:12:05,279 --> 00:12:09,930
just a number you can be discrete or

00:12:07,800 --> 00:12:11,220
continuous actions you know your number

00:12:09,930 --> 00:12:12,360
can just map to something or it can just

00:12:11,220 --> 00:12:14,880
be a continuous stream of numbers and

00:12:12,360 --> 00:12:17,070
maps to arrange observations can be

00:12:14,880 --> 00:12:18,810
vectors so more numbers or pictures

00:12:17,070 --> 00:12:20,070
because the unity is a game engine you

00:12:18,810 --> 00:12:21,720
can put cameras in the environment and

00:12:20,070 --> 00:12:22,950
then render out that picture into the

00:12:21,720 --> 00:12:24,510
machine learning environment so you can

00:12:22,950 --> 00:12:27,390
use convolutional neural nets to make

00:12:24,510 --> 00:12:28,649
decisions based on what I can see unity

00:12:27,390 --> 00:12:29,940
is also high fidelity after that those

00:12:28,649 --> 00:12:33,000
pictures can replicate the real world

00:12:29,940 --> 00:12:35,130
well enough so the Chinese uber I always

00:12:33,000 --> 00:12:36,810
forget its name DeeDee maybe is using

00:12:35,130 --> 00:12:38,490
unity to do machine learning for their

00:12:36,810 --> 00:12:42,060
cars by building simulation versions of

00:12:38,490 --> 00:12:43,380
it and rewards it is more numbers one

00:12:42,060 --> 00:12:46,680
positive numbers of good negative

00:12:43,380 --> 00:12:48,060
numbers about the cycle is basically the

00:12:46,680 --> 00:12:49,920
agent perceives the environment using

00:12:48,060 --> 00:12:51,899
observations the brain receives those

00:12:49,920 --> 00:12:53,430
observations from the agent the brain

00:12:51,899 --> 00:12:55,260
makes a decision and says it's the agent

00:12:53,430 --> 00:12:57,270
there UHN is rewarded or penalized based

00:12:55,260 --> 00:13:00,209
on what's going on pretty

00:12:57,270 --> 00:13:01,649
straightforward so these pictures are

00:13:00,209 --> 00:13:03,110
nice but if we put this into practice it

00:13:01,649 --> 00:13:04,980
will hopefully make a bit more sense a

00:13:03,110 --> 00:13:06,839
typical setup might look a bit like this

00:13:04,980 --> 00:13:08,880
there'll be an academy which talks to

00:13:06,839 --> 00:13:09,959
tensorflow for training which talks to a

00:13:08,880 --> 00:13:11,190
brain and then there's lots of lots of

00:13:09,959 --> 00:13:12,300
ages creates that brain the reason

00:13:11,190 --> 00:13:12,899
there's lots of them usually is because

00:13:12,300 --> 00:13:14,220
you want to train

00:13:12,899 --> 00:13:15,360
parallel because you want more

00:13:14,220 --> 00:13:16,709
observations the better you know we've

00:13:15,360 --> 00:13:19,740
got lots of computers we want to spin up

00:13:16,709 --> 00:13:21,769
a 10,000 I know us instances with this

00:13:19,740 --> 00:13:23,490
thing and make it train faster

00:13:21,769 --> 00:13:25,290
realistically they might also just be

00:13:23,490 --> 00:13:26,240
one agent if you're messing around with

00:13:25,290 --> 00:13:28,559
it

00:13:26,240 --> 00:13:30,329
the problem the process is pretty

00:13:28,559 --> 00:13:32,579
straightforward you define a problem and

00:13:30,329 --> 00:13:33,689
try and address it let's actually look

00:13:32,579 --> 00:13:36,449
at how we're gonna do this let's jump to

00:13:33,689 --> 00:13:37,350
some actual some stuff here don't you

00:13:36,449 --> 00:13:38,339
don't you take pictures of this so

00:13:37,350 --> 00:13:39,569
there's a blog post which tells how to

00:13:38,339 --> 00:13:40,860
do this which I'll put up a link to at

00:13:39,569 --> 00:13:43,379
the end but what you need is you need

00:13:40,860 --> 00:13:45,209
unity which you can get for free you

00:13:43,379 --> 00:13:46,470
need something you want to build

00:13:45,209 --> 00:13:49,079
we're gonna build a self-driving car in

00:13:46,470 --> 00:13:50,329
a moment and you need a way to play it

00:13:49,079 --> 00:13:53,519
like a game to make sure it's working

00:13:50,329 --> 00:13:54,540
which we'll get to as well on top of

00:13:53,519 --> 00:13:57,209
that you need the Python bits

00:13:54,540 --> 00:13:59,879
I like anaconda because it makes Python

00:13:57,209 --> 00:14:01,589
not a headache for me so I use anaconda

00:13:59,879 --> 00:14:04,079
but you need a Python 3.6 environment

00:14:01,589 --> 00:14:06,059
for various reasons mumble mumbles tense

00:14:04,079 --> 00:14:07,050
the floor you need to get into that

00:14:06,059 --> 00:14:08,279
environment but you know you can use

00:14:07,050 --> 00:14:09,959
virtual in but whatever environment you

00:14:08,279 --> 00:14:11,490
actually like you need a very specific

00:14:09,959 --> 00:14:13,529
version of pencil floor currently for

00:14:11,490 --> 00:14:16,079
Python machine learning with unity but

00:14:13,529 --> 00:14:18,269
they're working on that and you need the

00:14:16,079 --> 00:14:20,370
ml agents toolkit it's a pretty standard

00:14:18,269 --> 00:14:21,720
Python workflow you need some bits you

00:14:20,370 --> 00:14:24,629
install them from some arbitrary package

00:14:21,720 --> 00:14:26,550
managers and hope it's gonna work once

00:14:24,629 --> 00:14:27,749
you've got all this going you build your

00:14:26,550 --> 00:14:30,179
environment this is the environment we

00:14:27,749 --> 00:14:32,850
built it's a racetrack it's pretty cool

00:14:30,179 --> 00:14:37,019
there's a car the car is actually more

00:14:32,850 --> 00:14:41,759
of a bulldozer not sure why we got

00:14:37,019 --> 00:14:43,529
excited that car has a script attached

00:14:41,759 --> 00:14:44,819
switches a car controller this car

00:14:43,529 --> 00:14:47,220
controller is something that unity

00:14:44,819 --> 00:14:48,870
supplies it's not part of unity it's

00:14:47,220 --> 00:14:50,519
just part of their default asset kit

00:14:48,870 --> 00:14:52,470
which is some stuff you might need to

00:14:50,519 --> 00:14:54,120
make a game in unity because people make

00:14:52,470 --> 00:14:56,129
games about cars supplies a way to make

00:14:54,120 --> 00:14:57,329
a car very simply this car controller

00:14:56,129 --> 00:14:59,189
kind of knows a car needs to accelerate

00:14:57,329 --> 00:15:01,019
have talked have wheels things like that

00:14:59,189 --> 00:15:03,600
and abstracts the control of the car

00:15:01,019 --> 00:15:05,339
down to left-right throttle brake okay

00:15:03,600 --> 00:15:06,809
we didn't write this this is just

00:15:05,339 --> 00:15:08,519
something you can add to any object in

00:15:06,809 --> 00:15:09,809
unity that kind of resembles a car you

00:15:08,519 --> 00:15:11,790
could make a cube drive around if you

00:15:09,809 --> 00:15:13,110
wanted it to be a car unity really

00:15:11,790 --> 00:15:14,970
doesn't care what you attach this to as

00:15:13,110 --> 00:15:16,379
long as you give it the right bits this

00:15:14,970 --> 00:15:19,139
is just a script that lets us say this

00:15:16,379 --> 00:15:21,299
car can go forward reverse brake and go

00:15:19,139 --> 00:15:22,769
left and right and behaves got like a

00:15:21,299 --> 00:15:25,860
car and it accelerates and throttles and

00:15:22,769 --> 00:15:26,670
stuff in addition to that in our race

00:15:25,860 --> 00:15:28,860
track we have these in

00:15:26,670 --> 00:15:29,970
visible walls around the wall the edge

00:15:28,860 --> 00:15:32,370
of the track this is kind of hard to see

00:15:29,970 --> 00:15:34,560
so if you can see there's like these

00:15:32,370 --> 00:15:36,540
green boxes popping up out of the

00:15:34,560 --> 00:15:37,650
barrier I'm really colorblind so

00:15:36,540 --> 00:15:39,720
apologies if you're colorblind like me

00:15:37,650 --> 00:15:44,160
and can see absolutely nothing there are

00:15:39,720 --> 00:15:45,450
green boxes all around which are fancy

00:15:44,160 --> 00:15:47,460
triggers their invisible collusion

00:15:45,450 --> 00:15:49,170
volumes which are there so if our car

00:15:47,460 --> 00:15:50,970
goes through those in the 3d simulation

00:15:49,170 --> 00:15:52,410
a signal is sent that says how I

00:15:50,970 --> 00:15:54,120
collided with something they don't

00:15:52,410 --> 00:15:56,370
actually stop the car so they're just

00:15:54,120 --> 00:15:57,630
the visual barrier you see he's not

00:15:56,370 --> 00:15:58,740
gonna make the car stop and collide it's

00:15:57,630 --> 00:16:00,270
just going to let it go right through it

00:15:58,740 --> 00:16:02,460
but because there's those green boxes

00:16:00,270 --> 00:16:03,840
there it will call a thing that says hi

00:16:02,460 --> 00:16:04,860
you know you're collided with something

00:16:03,840 --> 00:16:09,240
you probably want to do something about

00:16:04,860 --> 00:16:11,070
that okay they call box colliders which

00:16:09,240 --> 00:16:13,050
are set to be a trigger so there's a

00:16:11,070 --> 00:16:14,850
little trigger tick box there which

00:16:13,050 --> 00:16:16,140
basically says I don't want you to make

00:16:14,850 --> 00:16:17,220
the car stop when you hit this I just

00:16:16,140 --> 00:16:19,230
wanna let it go straight through it and

00:16:17,220 --> 00:16:20,850
let me call an on triggered function

00:16:19,230 --> 00:16:23,970
that says hi I went through something

00:16:20,850 --> 00:16:25,320
that was a trigger also around our track

00:16:23,970 --> 00:16:28,080
we had some waypoints which span the

00:16:25,320 --> 00:16:30,150
entire track in order and there are

00:16:28,080 --> 00:16:32,190
little yellow dots they let us reset the

00:16:30,150 --> 00:16:33,330
car to a certain point if it goes out so

00:16:32,190 --> 00:16:35,820
if it goes through one of those triggers

00:16:33,330 --> 00:16:37,140
it's bad and we want to move back onto

00:16:35,820 --> 00:16:38,430
the track we use those waypoints to

00:16:37,140 --> 00:16:43,590
reset it to the closest place it

00:16:38,430 --> 00:16:45,090
collided with the trigger okay finally

00:16:43,590 --> 00:16:46,470
as you can see here the car actually has

00:16:45,090 --> 00:16:48,680
it a camera mounted on the front of it

00:16:46,470 --> 00:16:50,460
which is this disco and you can see and

00:16:48,680 --> 00:16:52,620
there's the preview of the camera

00:16:50,460 --> 00:16:53,730
pointed forward and we'll come back to

00:16:52,620 --> 00:16:55,260
that in a minute but we're using that as

00:16:53,730 --> 00:16:56,490
the the input into the machine learning

00:16:55,260 --> 00:16:59,760
system for what the car is making its

00:16:56,490 --> 00:17:01,080
decisions on okay hopefully that makes

00:16:59,760 --> 00:17:02,670
sense right now we've made a car with a

00:17:01,080 --> 00:17:04,170
camera pointed forward we've set up a

00:17:02,670 --> 00:17:05,880
track so the car will can reset if it

00:17:04,170 --> 00:17:07,200
leaves the track and there's waypoints

00:17:05,880 --> 00:17:08,550
around the track so we can reset the car

00:17:07,200 --> 00:17:10,620
to the closest position that left the

00:17:08,550 --> 00:17:13,590
track if it does leave the track and the

00:17:10,620 --> 00:17:14,730
car can drive like a car to get the

00:17:13,590 --> 00:17:16,350
machine learning happening we need some

00:17:14,730 --> 00:17:18,090
brains brains are always useful I

00:17:16,350 --> 00:17:19,530
mentioned earlier the player brain which

00:17:18,090 --> 00:17:21,780
is basically just something that lets us

00:17:19,530 --> 00:17:24,450
steer the car as a human to test it it

00:17:21,780 --> 00:17:25,770
works this is the player brain not very

00:17:24,450 --> 00:17:27,630
interesting we'll see the learning brain

00:17:25,770 --> 00:17:30,690
the player brain has some key mappings

00:17:27,630 --> 00:17:31,860
which send left and right the character

00:17:30,690 --> 00:17:33,840
automatically accelerates because that

00:17:31,860 --> 00:17:35,130
was just easier for demo purposes so the

00:17:33,840 --> 00:17:37,110
throttle just applies automatically the

00:17:35,130 --> 00:17:38,310
only input is left and right we also

00:17:37,110 --> 00:17:39,950
need a learning brain which is exactly

00:17:38,310 --> 00:17:42,809
the same as the player brain

00:17:39,950 --> 00:17:44,490
the key thing here is the learning brain

00:17:42,809 --> 00:17:46,770
is set up to have a visual observation

00:17:44,490 --> 00:17:48,120
of 32 pixels by 24 pixels grayscale and

00:17:46,770 --> 00:17:49,170
that's attached to that camera at the

00:17:48,120 --> 00:17:50,520
front of the car so this is the only

00:17:49,170 --> 00:17:52,830
input the machine learning system has

00:17:50,520 --> 00:17:56,940
from the car you can see that picture

00:17:52,830 --> 00:17:58,440
that kind of garbage low resolution we

00:17:56,940 --> 00:18:00,450
also need our calamy object which is the

00:17:58,440 --> 00:18:01,770
thing that mediates what's going on it

00:18:00,450 --> 00:18:02,940
knows that there's two possible brains

00:18:01,770 --> 00:18:04,170
as the player brain and the learning

00:18:02,940 --> 00:18:09,140
brain the player brain again is just

00:18:04,170 --> 00:18:11,010
there so we can test the car works okay

00:18:09,140 --> 00:18:12,720
there's also some settings about

00:18:11,010 --> 00:18:15,030
training and inference all these

00:18:12,720 --> 00:18:16,890
settings do that say I do our say that

00:18:15,030 --> 00:18:18,540
if we're training we want the simulation

00:18:16,890 --> 00:18:20,070
to run really faster than increased time

00:18:18,540 --> 00:18:22,679
scale and not pay attention to framerate

00:18:20,070 --> 00:18:24,510
or render resolution and if we're

00:18:22,679 --> 00:18:27,590
inferring we want it to run at 1280 by

00:18:24,510 --> 00:18:29,610
720 and 30fps so a human can look at it

00:18:27,590 --> 00:18:31,110
okay so you can set different settings

00:18:29,610 --> 00:18:33,750
for training an inference you can also

00:18:31,110 --> 00:18:34,710
run unity entirely headless and the

00:18:33,750 --> 00:18:37,800
rendering will be something you never

00:18:34,710 --> 00:18:40,260
see just because it's a game engine you

00:18:37,800 --> 00:18:42,510
need to supply these parameters we also

00:18:40,260 --> 00:18:44,610
set our car up as an agent this is our

00:18:42,510 --> 00:18:49,380
current it's set up to know that it has

00:18:44,610 --> 00:18:51,360
one camera which as mentioned maps to

00:18:49,380 --> 00:18:53,820
the camera on the agent and it's also

00:18:51,360 --> 00:18:54,750
knows about those waypoints this is not

00:18:53,820 --> 00:18:56,580
something that's part of the machine

00:18:54,750 --> 00:18:57,510
learning system we added this so we

00:18:56,580 --> 00:18:59,309
could reset the car to the right

00:18:57,510 --> 00:19:00,690
position if it left the track but the

00:18:59,309 --> 00:19:02,040
car knows the white points which means

00:19:00,690 --> 00:19:03,210
it can calculate the closest white point

00:19:02,040 --> 00:19:06,929
to where it left the track and bring

00:19:03,210 --> 00:19:08,940
itself back you have installed two they

00:19:06,929 --> 00:19:12,179
need to influence some actions as I

00:19:08,940 --> 00:19:13,559
mentioned the car can only go left or

00:19:12,179 --> 00:19:15,660
right that's the only control we have it

00:19:13,559 --> 00:19:17,280
automatically accelerates so we use this

00:19:15,660 --> 00:19:18,510
agent action method which is the thing

00:19:17,280 --> 00:19:21,480
that a machine learning system will call

00:19:18,510 --> 00:19:23,640
to control the car it takes a vector

00:19:21,480 --> 00:19:25,350
action array which only has one entry so

00:19:23,640 --> 00:19:27,179
vector action zero and that ral you can

00:19:25,350 --> 00:19:29,730
either be minus one or one minus one is

00:19:27,179 --> 00:19:30,870
left one is right in this case we pass

00:19:29,730 --> 00:19:32,130
that value directly into the car

00:19:30,870 --> 00:19:33,360
controller which is the thing that we

00:19:32,130 --> 00:19:34,890
created in unity and because we

00:19:33,360 --> 00:19:37,320
automatically throught lenguas help

00:19:34,890 --> 00:19:38,429
throw the one okay and then the only

00:19:37,320 --> 00:19:40,380
value that's going in to the first one

00:19:38,429 --> 00:19:42,690
which is left or right again minus one

00:19:40,380 --> 00:19:45,059
is left one is right that's literally

00:19:42,690 --> 00:19:46,679
all that is doing then we check if we're

00:19:45,059 --> 00:19:48,120
collided there's some stuff elsewhere on

00:19:46,679 --> 00:19:49,290
the car that sets is collided two

00:19:48,120 --> 00:19:52,170
collided if it's gone through one of

00:19:49,290 --> 00:19:54,630
those individual collision barriers if

00:19:52,170 --> 00:19:57,450
we are collided then

00:19:54,630 --> 00:20:01,650
we get a big negative reward which is a

00:19:57,450 --> 00:20:02,820
punishment which is bad and if we're not

00:20:01,650 --> 00:20:05,340
collided then we're probably still

00:20:02,820 --> 00:20:08,040
driving we're a good car we get a very

00:20:05,340 --> 00:20:10,920
small reward for still driving okay and

00:20:08,040 --> 00:20:12,570
that's pretty much it okay so Cassidy

00:20:10,920 --> 00:20:14,670
has left or right if it's collided with

00:20:12,570 --> 00:20:16,620
something it gets a punishment and is

00:20:14,670 --> 00:20:17,850
asked to reset to the closest position

00:20:16,620 --> 00:20:19,350
if it didn't collide with something it

00:20:17,850 --> 00:20:19,679
gets a reward which means it's still

00:20:19,350 --> 00:20:20,880
going

00:20:19,679 --> 00:20:22,380
remembering the car can only go forward

00:20:20,880 --> 00:20:25,200
so it can't accidentally learn to drive

00:20:22,380 --> 00:20:26,640
backwards around the track this point we

00:20:25,200 --> 00:20:28,559
can fire it up and use our player brain

00:20:26,640 --> 00:20:30,690
to drive the car around the track this

00:20:28,559 --> 00:20:32,760
is me controlling the car right now not

00:20:30,690 --> 00:20:34,860
any sort of AI so I'm just using a and D

00:20:32,760 --> 00:20:36,120
on my keyboard to steer this car around

00:20:34,860 --> 00:20:39,390
the track I'm not very good at driving

00:20:36,120 --> 00:20:41,370
cars in video games or in the real world

00:20:39,390 --> 00:20:44,490
but you can see it it works like a video

00:20:41,370 --> 00:20:45,990
game if I hit the edge it resets pretty

00:20:44,490 --> 00:20:48,570
straightforward again this is just me

00:20:45,990 --> 00:20:51,780
driving let's add some machine learning

00:20:48,570 --> 00:20:53,370
okay so to train the guards car to drive

00:20:51,780 --> 00:20:54,600
itself we need to set the Academy up for

00:20:53,370 --> 00:20:56,730
training by ticking that control box

00:20:54,600 --> 00:20:58,440
that control box says hi I would like

00:20:56,730 --> 00:21:00,630
you to let Python control the brain that

00:20:58,440 --> 00:21:01,830
the control boxes next to the reason

00:21:00,630 --> 00:21:02,940
there's a control box only next to that

00:21:01,830 --> 00:21:04,380
brain is because that's the learning

00:21:02,940 --> 00:21:06,660
brain the player brain can't be

00:21:04,380 --> 00:21:08,130
controlled by Python we also need to

00:21:06,660 --> 00:21:09,150
swap the brain on the car agent to point

00:21:08,130 --> 00:21:10,230
to the learning brain instead of the

00:21:09,150 --> 00:21:11,190
player brain so we're basically saying

00:21:10,230 --> 00:21:12,720
hi we'd like you to use the learning

00:21:11,190 --> 00:21:14,370
brain not the player brain and the

00:21:12,720 --> 00:21:16,200
learning brain is a brain that can be

00:21:14,370 --> 00:21:19,260
controlled by tensorflow or have a

00:21:16,200 --> 00:21:20,550
tensor flow graph pointed out as a

00:21:19,260 --> 00:21:23,400
reminder our learning brain is set up to

00:21:20,550 --> 00:21:25,260
use one camera and it knows how to make

00:21:23,400 --> 00:21:26,970
a vector X of a vector actions with a

00:21:25,260 --> 00:21:28,800
space size of one so basically the brain

00:21:26,970 --> 00:21:32,100
can send you the left minus one or right

00:21:28,800 --> 00:21:35,370
into unity and can see that camera at 32

00:21:32,100 --> 00:21:37,020
by 24 you can check this by checking

00:21:35,370 --> 00:21:38,640
back to the player brain D is mapped to

00:21:37,020 --> 00:21:40,920
mum one and a isn't up to minus one

00:21:38,640 --> 00:21:43,309
otherwise it set up exactly the same so

00:21:40,920 --> 00:21:47,429
player brain keyboard learning brain

00:21:43,309 --> 00:21:49,559
some sort of machine learning magic we

00:21:47,429 --> 00:21:51,900
also need to set the Academy up as we

00:21:49,559 --> 00:21:53,330
said tick the control box now it comes

00:21:51,900 --> 00:21:57,330
to the best part of machine learning

00:21:53,330 --> 00:21:58,679
lots of magic numbers so we know we see

00:21:57,330 --> 00:21:59,850
some hyper parameters in a gamma file

00:21:58,679 --> 00:22:00,929
because it's not machine learning unless

00:21:59,850 --> 00:22:04,110
there's a gamble file and hyper

00:22:00,929 --> 00:22:06,030
parameters this is our gamma file we're

00:22:04,110 --> 00:22:07,410
using a training system called proximal

00:22:06,030 --> 00:22:08,700
policy optimization which is

00:22:07,410 --> 00:22:09,810
gradient I said you had to go the ILA

00:22:08,700 --> 00:22:11,460
please come and talk to me later if you

00:22:09,810 --> 00:22:13,620
want me to talk about this this is a

00:22:11,460 --> 00:22:15,420
very practical talk and we have a

00:22:13,620 --> 00:22:17,220
section named specifically after the

00:22:15,420 --> 00:22:18,690
brain we want to Train which has some

00:22:17,220 --> 00:22:20,370
extra parameters these are arrived up by

00:22:18,690 --> 00:22:24,900
trial and error standard machine

00:22:20,370 --> 00:22:27,030
learning stuff basically we can fire at

00:22:24,900 --> 00:22:29,670
Python point it to a Yama file let it

00:22:27,030 --> 00:22:32,370
rain this is what happens unity gives us

00:22:29,670 --> 00:22:34,770
a nice guys askew logo it's very

00:22:32,370 --> 00:22:37,080
exciting then it finds the brains we can

00:22:34,770 --> 00:22:38,700
see here it knows we have two brains I

00:22:37,080 --> 00:22:40,410
park on player brain and pluck on

00:22:38,700 --> 00:22:42,080
learning brain and it knows what sort of

00:22:40,410 --> 00:22:44,190
actions and observations the brain has

00:22:42,080 --> 00:22:45,780
okay so knows we have one visual

00:22:44,190 --> 00:22:49,020
observation and one kind of vector

00:22:45,780 --> 00:22:51,420
observation action sorry not the

00:22:49,020 --> 00:22:53,700
observation very exciting then it reads

00:22:51,420 --> 00:22:56,730
the hyper parameters also very exciting

00:22:53,700 --> 00:22:58,380
then it rains yeah good standard

00:22:56,730 --> 00:22:59,340
training process we kill the training

00:22:58,380 --> 00:23:02,070
whenever we want and it writes out a

00:22:59,340 --> 00:23:05,430
protobuf file which is standard

00:23:02,070 --> 00:23:06,720
tensorflow garbage and then from that we

00:23:05,430 --> 00:23:10,680
can write out a tensor flow graph and n

00:23:06,720 --> 00:23:12,060
file which we can then use to infer on

00:23:10,680 --> 00:23:13,620
the car because this is tensor fly we

00:23:12,060 --> 00:23:15,150
can use all the glorious tends forward

00:23:13,620 --> 00:23:16,380
tools like tensor board so we can make

00:23:15,150 --> 00:23:19,620
sure the mean reward is going up and

00:23:16,380 --> 00:23:21,420
things like that it's very exciting this

00:23:19,620 --> 00:23:22,620
is from a training round it lasted like

00:23:21,420 --> 00:23:24,150
30 seconds so don't pay too much

00:23:22,620 --> 00:23:27,510
attention to it I was just proving the

00:23:24,150 --> 00:23:27,870
tensor board works so what's going on

00:23:27,510 --> 00:23:29,580
here

00:23:27,870 --> 00:23:31,500
the karagin is making a camera

00:23:29,580 --> 00:23:32,940
observation the brain is receiving that

00:23:31,500 --> 00:23:35,880
observation the brain is deciding left

00:23:32,940 --> 00:23:37,050
right and then once the action is taken

00:23:35,880 --> 00:23:38,190
we're checking every collided if we're

00:23:37,050 --> 00:23:39,780
collided we're getting a punishment and

00:23:38,190 --> 00:23:41,210
resetting we're not collided we're

00:23:39,780 --> 00:23:43,620
getting a small reward and continuing

00:23:41,210 --> 00:23:46,710
okay pretty much reinforcement learning

00:23:43,620 --> 00:23:48,570
and when we're training it the car is

00:23:46,710 --> 00:23:49,860
taking random actions so random left or

00:23:48,570 --> 00:23:52,920
right actions constantly at very high

00:23:49,860 --> 00:23:55,410
speed to optimize that policy okay

00:23:52,920 --> 00:23:57,060
nothing magical if we attach that

00:23:55,410 --> 00:23:58,440
trained neural net tensor flow graph

00:23:57,060 --> 00:24:00,450
through the learning brain which is just

00:23:58,440 --> 00:24:02,010
a field you can drag in inference

00:24:00,450 --> 00:24:03,990
doesn't use tensor flow inferences built

00:24:02,010 --> 00:24:05,580
into unity this is so if you build out a

00:24:03,990 --> 00:24:06,900
binary and chip it on like an Android or

00:24:05,580 --> 00:24:08,640
an iOS device you do not have to ship

00:24:06,900 --> 00:24:10,380
tensorflow light or tense flow unity has

00:24:08,640 --> 00:24:12,440
a unity inference engine which is

00:24:10,380 --> 00:24:15,540
compatible with tensor flow graph files

00:24:12,440 --> 00:24:18,390
it's not fully compatible that's another

00:24:15,540 --> 00:24:19,710
talk entirely and we tell the Academy we

00:24:18,390 --> 00:24:20,680
no longer need control to be passed to

00:24:19,710 --> 00:24:23,530
Python

00:24:20,680 --> 00:24:25,210
then we can run and our car will drive

00:24:23,530 --> 00:24:26,620
by itself and now this video is our

00:24:25,210 --> 00:24:28,240
trained brain driving the car around the

00:24:26,620 --> 00:24:32,470
track probably slightly better than I

00:24:28,240 --> 00:24:34,630
actually managed to and this is about an

00:24:32,470 --> 00:24:35,530
hour of training movie using

00:24:34,630 --> 00:24:36,940
reinforcement learning

00:24:35,530 --> 00:24:38,380
that's pretty damn solid for something

00:24:36,940 --> 00:24:39,940
that's only making decisions based on

00:24:38,380 --> 00:24:42,880
that grayscale thirty-two by twenty-four

00:24:39,940 --> 00:24:45,880
camera obviously the environment is very

00:24:42,880 --> 00:24:47,830
simple but still this is very cool and

00:24:45,880 --> 00:24:49,960
very quick and a very visual way to look

00:24:47,830 --> 00:24:52,440
at machine learning things it hasn't

00:24:49,960 --> 00:24:54,670
crashed yet and I crashed very quickly

00:24:52,440 --> 00:24:55,720
okay so just to summarize a couple of

00:24:54,670 --> 00:24:58,720
other things you might be interested in

00:24:55,720 --> 00:25:00,280
before we finish there's two python e

00:24:58,720 --> 00:25:02,290
things that come with unity ml agents

00:25:00,280 --> 00:25:04,960
there's pythons ml agents - learn which

00:25:02,290 --> 00:25:06,340
is what you saw which is a pre-built

00:25:04,960 --> 00:25:07,750
entry point into some pre-built

00:25:06,340 --> 00:25:09,370
algorithms imitation learning

00:25:07,750 --> 00:25:11,260
reinforcement learning and a couple of

00:25:09,370 --> 00:25:13,150
things that let you use pre-written

00:25:11,260 --> 00:25:15,130
implementations based on proximal policy

00:25:13,150 --> 00:25:17,050
optimization PPO to train things in

00:25:15,130 --> 00:25:18,430
unity they basically you say high unity

00:25:17,050 --> 00:25:20,320
please let me fire up an environment

00:25:18,430 --> 00:25:21,520
read this type of RAM and a file and

00:25:20,320 --> 00:25:23,410
train for me and not think about it

00:25:21,520 --> 00:25:24,880
beyond that the other option is ml

00:25:23,410 --> 00:25:26,350
agents dot end which is actually a full

00:25:24,880 --> 00:25:28,030
Python API that lets you interact with

00:25:26,350 --> 00:25:29,430
unity and I don't expect you to read

00:25:28,030 --> 00:25:32,530
this code this is just proof it works

00:25:29,430 --> 00:25:33,520
this means you can do you can ignore the

00:25:32,530 --> 00:25:35,410
machine learning build and use the

00:25:33,520 --> 00:25:37,000
Python API to interact with the unity

00:25:35,410 --> 00:25:38,710
environment now so you can fully control

00:25:37,000 --> 00:25:40,750
the unity environment from Python and

00:25:38,710 --> 00:25:41,800
scripted to do whatever you like it is

00:25:40,750 --> 00:25:44,530
designed to the machine learning though

00:25:41,800 --> 00:25:46,600
so this code for example takes random

00:25:44,530 --> 00:25:48,250
actions based on the action space of the

00:25:46,600 --> 00:25:49,570
brain and then reports back on the

00:25:48,250 --> 00:25:51,310
purpose and this is just running in a

00:25:49,570 --> 00:25:53,350
Jupiter notebook so you can fully

00:25:51,310 --> 00:25:54,550
incorporate a simulation environment in

00:25:53,350 --> 00:25:57,250
whatever you're doing in Python and use

00:25:54,550 --> 00:25:59,650
that for whatever nefarious purposes you

00:25:57,250 --> 00:26:01,750
need this is very powerful because you

00:25:59,650 --> 00:26:05,200
have access to this full simulation

00:26:01,750 --> 00:26:06,490
glory at unity so all sorts of amazing

00:26:05,200 --> 00:26:09,460
things are achievable when you combine

00:26:06,490 --> 00:26:11,170
tensorflow and python with unity this is

00:26:09,460 --> 00:26:13,240
one of my favorite ones this is one of

00:26:11,170 --> 00:26:14,560
those classic Walker things this is a

00:26:13,240 --> 00:26:16,630
humanoid with twenty six degrees of

00:26:14,560 --> 00:26:19,630
freedom across point articulations of

00:26:16,630 --> 00:26:21,670
hips chest spine head thighs shins feet

00:26:19,630 --> 00:26:23,260
for arms arms hands and the agent needs

00:26:21,670 --> 00:26:23,770
to go forward as fast as it can without

00:26:23,260 --> 00:26:25,480
falling over

00:26:23,770 --> 00:26:27,160
and it's rewarded for staying upright

00:26:25,480 --> 00:26:29,560
and going in the right direction

00:26:27,160 --> 00:26:31,090
it's observations are actually 215

00:26:29,560 --> 00:26:32,790
different variables cross boiling to the

00:26:31,090 --> 00:26:35,220
rotation of all its limbs

00:26:32,790 --> 00:26:36,540
and it learns to walk given about 24

00:26:35,220 --> 00:26:40,169
hours of training this is as far as it

00:26:36,540 --> 00:26:42,240
gets longer longer makes it walk a lot

00:26:40,169 --> 00:26:43,470
better but this is pretty cool there's

00:26:42,240 --> 00:26:47,040
no walk animation here this thing has

00:26:43,470 --> 00:26:48,660
taught self to walk okay so in

00:26:47,040 --> 00:26:49,950
conclusion a game engine is a really

00:26:48,660 --> 00:26:51,299
cool way of simulating enough of the

00:26:49,950 --> 00:26:52,710
real world to make something useful with

00:26:51,299 --> 00:26:54,150
machine learning it's a synthetic

00:26:52,710 --> 00:26:56,010
replica of the real walls I highly

00:26:54,150 --> 00:26:57,000
recommend you try it if anyone has any

00:26:56,010 --> 00:26:58,620
questions you can find me on Twitter

00:26:57,000 --> 00:27:00,360
there'll be a link on both of those

00:26:58,620 --> 00:27:01,650
websites to a blog post which tells you

00:27:00,360 --> 00:27:13,260
how to get started that's possible

00:27:01,650 --> 00:27:15,330
already up thank you very much we do

00:27:13,260 --> 00:27:20,330
have time for one or two questions right

00:27:15,330 --> 00:27:20,330
brilliant so there's any questions

00:27:22,610 --> 00:27:28,140
thanks for the talk my question is how

00:27:25,290 --> 00:27:30,240
do you decide the reward with 0.05 and

00:27:28,140 --> 00:27:31,740
the one for two different them that's

00:27:30,240 --> 00:27:33,330
more machine learning magic numbers so

00:27:31,740 --> 00:27:36,510
question was how do you decide the

00:27:33,330 --> 00:27:39,120
reward with 0.05 for example you guess

00:27:36,510 --> 00:27:40,320
it's machine learning ok we don't really

00:27:39,120 --> 00:27:43,740
know what we're doing we need to admit

00:27:40,320 --> 00:27:45,750
that at some point no a trial trial and

00:27:43,740 --> 00:27:47,130
error so you want to avoid like local

00:27:45,750 --> 00:27:48,240
Maxima problems and you want to avoid

00:27:47,130 --> 00:27:50,690
getting into your like a rotten you

00:27:48,240 --> 00:27:52,890
there's this pipe is on this basically

00:27:50,690 --> 00:27:54,720
when you're doing something with machine

00:27:52,890 --> 00:27:56,400
learning you have a certain element of

00:27:54,720 --> 00:27:58,049
trial and error and in this case giving

00:27:56,400 --> 00:28:00,390
it a very large reward for failing

00:27:58,049 --> 00:28:01,650
encourages it not to file and giving it

00:28:00,390 --> 00:28:02,850
a very small rule for succeeding

00:28:01,650 --> 00:28:03,960
encourages it to keep trying it's

00:28:02,850 --> 00:28:17,030
basically the same way you are

00:28:03,960 --> 00:28:17,030
remunerated at work I think that's fair

00:28:20,310 --> 00:28:26,230
hi hello for those of us who are

00:28:23,440 --> 00:28:29,140
originally data scientists yes not so

00:28:26,230 --> 00:28:31,870
much programmers yes how do we overcome

00:28:29,140 --> 00:28:35,200
the intimidation which experience

00:28:31,870 --> 00:28:36,940
currently from looking at all the code

00:28:35,200 --> 00:28:38,680
that you need to write in unity so how

00:28:36,940 --> 00:28:40,360
do you like okay get into this that's a

00:28:38,680 --> 00:28:42,160
great question so unity is actually

00:28:40,360 --> 00:28:43,330
incredibly friendly and if you don't

00:28:42,160 --> 00:28:44,650
want to write code there's ways to use

00:28:43,330 --> 00:28:45,520
unity that don't require code at all

00:28:44,650 --> 00:28:47,230
there's a visual programming language

00:28:45,520 --> 00:28:49,780
which lets you bolt blocks together to

00:28:47,230 --> 00:28:50,860
do logic it's usable by children it's

00:28:49,780 --> 00:28:52,120
like scratch of anyone's ever you

00:28:50,860 --> 00:28:53,830
scratch it's very similar that but

00:28:52,120 --> 00:28:55,270
controls unity that is fully compatible

00:28:53,830 --> 00:28:56,980
with this environment so if you do not

00:28:55,270 --> 00:28:59,380
want to write any c-sharp you can mostly

00:28:56,980 --> 00:29:00,970
avoid that the c-sharp is also mostly

00:28:59,380 --> 00:29:03,220
boilerplate really the only bit you need

00:29:00,970 --> 00:29:05,290
to worry about is rewarding things and

00:29:03,220 --> 00:29:06,790
making actions so there's pretty much

00:29:05,290 --> 00:29:08,740
stuff out there to do almost anything

00:29:06,790 --> 00:29:10,720
you like do not be intimidated unity is

00:29:08,740 --> 00:29:12,490
about the most friendly programming

00:29:10,720 --> 00:29:14,680
environment you can ever encounter it's

00:29:12,490 --> 00:29:15,700
very visual and things are composed by

00:29:14,680 --> 00:29:17,830
blocks you don't have to worry about

00:29:15,700 --> 00:29:19,180
weed inheritance situations because

00:29:17,830 --> 00:29:21,370
you're just bolting pieces together it's

00:29:19,180 --> 00:29:23,290
kind of entity based in some ways so

00:29:21,370 --> 00:29:24,820
really don't be the unity is super

00:29:23,290 --> 00:29:30,220
friendly don't don't be intimidated by

00:29:24,820 --> 00:29:31,510
you that's a cop-out answer oh I think

00:29:30,220 --> 00:29:34,330
that we don't have any more time for

00:29:31,510 --> 00:29:41,849
questions so thank you thank you

00:29:34,330 --> 00:29:41,849

YouTube URL: https://www.youtube.com/watch?v=Urk_UlLqxaM


