Title: "3D Rendering with Python" - Andrew Williams (PyCon AU 2019)
Publication date: 2019-08-03
Playlist: PyCon Australia 2019
Description: 
	Andrew Williams

Create 3D rendered animations in a few lines of Python, for teaching concepts in Physics and Astronomy. Let your students write some simple code to, for example, model the movement of a bouncing ball due to gravity, and with only a couple of lines of extra code, actually render and animate the ball.

https://2019.pycon-au.org/talks/3d-rendering-with-python

PyCon AU, the national Python Language conference, is on again this August in Sydney, at the International Convention Centre, Sydney, August 2 - 6 2019.

Video licence: CC BY-NC-SA 4.0 - https://creativecommons.org/licenses/by-nc-sa/4.0/

Python, PyCon, PyConAU

Fri Aug  2 14:50:00 2019 at C3.4 & C3.5
Captions: 
	00:00:00,030 --> 00:00:05,430
back for the last session or the last

00:00:03,510 --> 00:00:07,200
talk in this session this afternoon and

00:00:05,430 --> 00:00:09,780
welcome to those of you joining the

00:00:07,200 --> 00:00:12,269
education track for the first time our

00:00:09,780 --> 00:00:13,860
presentation this afternoon is by Andrew

00:00:12,269 --> 00:00:15,420
Williams he's an astronomer who moved

00:00:13,860 --> 00:00:17,250
from research into telescope and

00:00:15,420 --> 00:00:18,930
instrument automation starting with an

00:00:17,250 --> 00:00:20,820
automated search for supernova and

00:00:18,930 --> 00:00:22,680
extrasolar planets using an optical

00:00:20,820 --> 00:00:24,180
telescope and more recently has been

00:00:22,680 --> 00:00:26,160
working in the operations team for a

00:00:24,180 --> 00:00:28,140
large radio telescope in Murchison in

00:00:26,160 --> 00:00:30,359
w-a and Andrew is going to be tilt

00:00:28,140 --> 00:00:32,160
talking to us today about 3d rendering

00:00:30,359 --> 00:00:34,079
with Python and some of his experiences

00:00:32,160 --> 00:00:35,399
there so I'll hand over to you Andrew we

00:00:34,079 --> 00:00:37,290
should have time for questions at the

00:00:35,399 --> 00:00:39,350
end as well so hold on to your questions

00:00:37,290 --> 00:00:43,290
further for that as well hello everyone

00:00:39,350 --> 00:00:44,850
this is what idea now during the day and

00:00:43,290 --> 00:00:46,800
a quick plug we're looking for a senior

00:00:44,850 --> 00:00:48,200
developer with web skills so contact me

00:00:46,800 --> 00:00:50,520
if you're interested in a job in Perth

00:00:48,200 --> 00:00:54,059
I'd used to do a lot of lecturing and

00:00:50,520 --> 00:00:56,879
most of this talk is about 3d rendering

00:00:54,059 --> 00:00:58,350
that I use for teaching astronomy the

00:00:56,879 --> 00:01:00,570
teachers when I was doing with astronomy

00:00:58,350 --> 00:01:02,550
but the the V Python visual Python stuff

00:01:00,570 --> 00:01:04,229
will be equally suitable for chemistry

00:01:02,550 --> 00:01:06,200
or whole heap of other things or for

00:01:04,229 --> 00:01:10,320
teaching Python because kids like 3d and

00:01:06,200 --> 00:01:12,330
seeing things that are cool so there are

00:01:10,320 --> 00:01:15,210
a lot of reasons to use animations to

00:01:12,330 --> 00:01:16,229
teach concepts a lot of concepts are

00:01:15,210 --> 00:01:18,180
easier to understand if they

00:01:16,229 --> 00:01:20,070
demonstrated visually and basically if

00:01:18,180 --> 00:01:22,189
you want to generate some sort of

00:01:20,070 --> 00:01:24,330
animation to demonstrate

00:01:22,189 --> 00:01:25,200
electromagnetism or an orbit or

00:01:24,330 --> 00:01:27,390
something like that

00:01:25,200 --> 00:01:29,549
your choices are look online to see if

00:01:27,390 --> 00:01:31,770
somebody else has made an animation pay

00:01:29,549 --> 00:01:33,750
someone to make an app or a movie for

00:01:31,770 --> 00:01:35,040
you like a media company which is what

00:01:33,750 --> 00:01:37,950
you do if you're you know dishing a

00:01:35,040 --> 00:01:39,390
press release and you found some amazing

00:01:37,950 --> 00:01:43,020
new neutron star or something like that

00:01:39,390 --> 00:01:46,979
or you do it yourself and for 3ds stuff

00:01:43,020 --> 00:01:48,600
blender and povery it but the thing is

00:01:46,979 --> 00:01:50,460
there's a huge learning curve I've tried

00:01:48,600 --> 00:01:52,439
to teach myself povery three times now

00:01:50,460 --> 00:01:54,329
never tried to use blender but I've seen

00:01:52,439 --> 00:01:57,390
other people use again and it's it's a

00:01:54,329 --> 00:01:58,560
lot to do if it's not your main job and

00:01:57,390 --> 00:02:02,009
the other thing is that they tend to

00:01:58,560 --> 00:02:04,649
produce either a static image or a movie

00:02:02,009 --> 00:02:06,390
that you play and pause and maybe

00:02:04,649 --> 00:02:08,250
fast-forward through our drag a slider

00:02:06,390 --> 00:02:12,480
through but you can't really interact

00:02:08,250 --> 00:02:13,650
with it so animations that you can

00:02:12,480 --> 00:02:15,510
actually interact with

00:02:13,650 --> 00:02:17,730
there is some great JavaScript applets

00:02:15,510 --> 00:02:22,140
I'm not a JavaScript person I don't know

00:02:17,730 --> 00:02:24,810
how to do that but I can do Python so I

00:02:22,140 --> 00:02:27,870
produced a lot of stuff using visual

00:02:24,810 --> 00:02:29,939
Python or V Python was developed by Ruth

00:02:27,870 --> 00:02:32,280
Sherwood Rooster Bay and David Scher in

00:02:29,939 --> 00:02:33,930
the year 2000 they were teaching a

00:02:32,280 --> 00:02:37,890
course in mechanics they wrote their own

00:02:33,930 --> 00:02:41,459
language to do 3d rendering David Shara

00:02:37,890 --> 00:02:45,540
was one of their students he implemented

00:02:41,459 --> 00:02:48,420
this new Python based 3d rendering

00:02:45,540 --> 00:02:51,150
environment and they developed it and

00:02:48,420 --> 00:02:52,590
worked on it and it used OpenGL to open

00:02:51,150 --> 00:02:56,159
a window directly on the operating

00:02:52,590 --> 00:02:57,750
system screen while I didn't use OpenGL

00:02:56,159 --> 00:02:59,639
to open the window they used OpenGL

00:02:57,750 --> 00:03:03,659
calls to control that control the window

00:02:59,639 --> 00:03:05,010
and display 3d stuff in 2011 David Scher

00:03:03,659 --> 00:03:07,079
worked on what's called glue script

00:03:05,010 --> 00:03:09,209
which a 3d rendering environment that

00:03:07,079 --> 00:03:12,500
was entirely browser-based so you you

00:03:09,209 --> 00:03:16,200
wrote some not Python but some other

00:03:12,500 --> 00:03:18,780
script you know in a web window and it

00:03:16,200 --> 00:03:22,709
ran sort of 3d API that you could use to

00:03:18,780 --> 00:03:25,530
do rendering and 2014 and it kind of

00:03:22,709 --> 00:03:27,299
became a rapid script which is kind of

00:03:25,530 --> 00:03:29,540
like Python it looks at first glance

00:03:27,299 --> 00:03:33,000
like Python but in a web interface and

00:03:29,540 --> 00:03:35,209
then a guy called John Cody ported it

00:03:33,000 --> 00:03:37,919
back to plain Python so you can run

00:03:35,209 --> 00:03:40,019
actual Python in an environment on your

00:03:37,919 --> 00:03:41,879
desktop and use a web browser to do the

00:03:40,019 --> 00:03:43,829
3d rendering using WebGL instead of

00:03:41,879 --> 00:03:45,569
OpenGL that removes a lot of the

00:03:43,829 --> 00:03:47,940
operating system dependence of opening a

00:03:45,569 --> 00:03:49,739
window and making up a GL calls so the

00:03:47,940 --> 00:03:51,629
classic the Python which is the one that

00:03:49,739 --> 00:03:55,349
actually opened the window on your

00:03:51,629 --> 00:04:00,299
desktop kind of went away between about

00:03:55,349 --> 00:04:01,949
2014 and 2017 the Python of visual

00:04:00,299 --> 00:04:04,470
Python was kind of difficult to use you

00:04:01,949 --> 00:04:08,250
had to install it in particular ways he

00:04:04,470 --> 00:04:09,810
had to use a web environment in 2017 it

00:04:08,250 --> 00:04:12,389
became much easier you could just do

00:04:09,810 --> 00:04:16,079
condo in store v Python and three lines

00:04:12,389 --> 00:04:19,079
of code and you can do 3d rendering glue

00:04:16,079 --> 00:04:21,239
script is the the Web API you write

00:04:19,079 --> 00:04:23,250
Python code in the browser you run

00:04:21,239 --> 00:04:25,169
examples in the browser you don't need a

00:04:23,250 --> 00:04:27,029
login if you want to write your own code

00:04:25,169 --> 00:04:27,960
you can use a google account or you can

00:04:27,029 --> 00:04:30,900
download

00:04:27,960 --> 00:04:33,900
the Glo script HTML page that has all of

00:04:30,900 --> 00:04:35,700
the the JavaScript that does user

00:04:33,900 --> 00:04:38,280
management stuff you don't need Google

00:04:35,700 --> 00:04:39,510
accounts to actually do anything or you

00:04:38,280 --> 00:04:41,550
can just cut and paste the code the

00:04:39,510 --> 00:04:46,260
examples into a text file and run it

00:04:41,550 --> 00:04:48,720
using Python 3.7 on your own machine now

00:04:46,260 --> 00:04:53,510
here's the dangerous bit this will

00:04:48,720 --> 00:04:57,330
probably not work so here's glow script

00:04:53,510 --> 00:05:01,080
so glow script gives you a nice easy way

00:04:57,330 --> 00:05:06,650
to start playing with 3d Python there's

00:05:01,080 --> 00:05:12,090
a whole bunch of examples an example of

00:05:06,650 --> 00:05:14,340
let's see bouncing well view the code we

00:05:12,090 --> 00:05:17,790
display the caption we can see that

00:05:14,340 --> 00:05:20,640
we're just creating some boxes they've

00:05:17,790 --> 00:05:23,580
got positions and sizes and colors the

00:05:20,640 --> 00:05:25,500
balls of sphere it's got a certain mass

00:05:23,580 --> 00:05:28,140
of momentum but this mass of momentum

00:05:25,500 --> 00:05:29,850
aren't understood in any way by the by

00:05:28,140 --> 00:05:32,220
the 3d library they're stuff that you

00:05:29,850 --> 00:05:34,770
use yourself to calculate how it changes

00:05:32,220 --> 00:05:36,840
so you just write a function and you say

00:05:34,770 --> 00:05:39,419
balled-up position equals balled up

00:05:36,840 --> 00:05:41,730
position plus the momentum divided by

00:05:39,419 --> 00:05:42,810
the mass multiplied by the time step so

00:05:41,730 --> 00:05:45,330
you're actually doing the physics

00:05:42,810 --> 00:05:47,490
modeling in your code and when you

00:05:45,330 --> 00:05:50,580
change the position of the ball you see

00:05:47,490 --> 00:05:52,260
it move on the screen and there's some

00:05:50,580 --> 00:05:54,030
very simple tests here to see if you've

00:05:52,260 --> 00:05:56,520
hit the walls if you have you reverse

00:05:54,030 --> 00:05:58,650
the direction and you just repeat this

00:05:56,520 --> 00:06:03,750
move function over and over again and

00:05:58,650 --> 00:06:11,030
you can run it and what you see is a

00:06:03,750 --> 00:06:11,030
ball bouncing around inside a box so

00:06:11,060 --> 00:06:16,830
there are many other programs you can

00:06:13,530 --> 00:06:21,540
demonstrate concepts in physics rotating

00:06:16,830 --> 00:06:24,840
cubes you can do 3d plots they're some a

00:06:21,540 --> 00:06:27,840
whole heap of physics lessons here by

00:06:24,840 --> 00:06:32,070
Bruce and Ruth

00:06:27,840 --> 00:06:33,240
a ball and spring model of a solid you

00:06:32,070 --> 00:06:36,560
could do this for chemistry as well

00:06:33,240 --> 00:06:39,360
demonstrating the shapes of molecules

00:06:36,560 --> 00:06:41,479
their masses and masses of very cool

00:06:39,360 --> 00:06:46,249
things for illustrating things like

00:06:41,479 --> 00:06:48,169
the cross product of two vectors you can

00:06:46,249 --> 00:06:50,629
move one vector around and see the cross

00:06:48,169 --> 00:06:52,159
product of the result you can actually

00:06:50,629 --> 00:06:52,669
interact with this not just a movie that

00:06:52,159 --> 00:06:55,270
you're playing

00:06:52,669 --> 00:06:59,120
you can choose to fix the links and

00:06:55,270 --> 00:07:03,740
change the angle or fix the angle and

00:06:59,120 --> 00:07:06,620
change the length you can also write

00:07:03,740 --> 00:07:10,639
programs in Jupiter notebooks here's an

00:07:06,620 --> 00:07:14,180
example so I am importing the library

00:07:10,639 --> 00:07:16,339
and creating a window when I run this

00:07:14,180 --> 00:07:17,960
nothing happens but let's say I want to

00:07:16,339 --> 00:07:19,729
do a very simple demo'd that just moves

00:07:17,960 --> 00:07:24,020
a ball up and down into constant speed I

00:07:19,729 --> 00:07:25,729
create a sphere at position 0 10 0 it's

00:07:24,020 --> 00:07:28,189
a certain radius and a certain color I

00:07:25,729 --> 00:07:30,830
create the floor which is a box that

00:07:28,189 --> 00:07:33,110
sits underneath it I sleep for 4 seconds

00:07:30,830 --> 00:07:35,539
to wait for me to actually scroll up to

00:07:33,110 --> 00:07:39,499
the the window and you just do loop

00:07:35,539 --> 00:07:41,659
forever and the velocity times a time

00:07:39,499 --> 00:07:43,249
step to the Y value of the ball the

00:07:41,659 --> 00:07:44,360
position is the attribute that defines

00:07:43,249 --> 00:07:48,199
where it is it has some attributes

00:07:44,360 --> 00:07:51,860
called XY and Z if the Y value is less

00:07:48,199 --> 00:07:53,960
than 0.5 or the position is greater than

00:07:51,860 --> 00:07:56,319
the Y value is greater than 10 then

00:07:53,960 --> 00:07:59,629
invert the velocity so in other words

00:07:56,319 --> 00:08:03,879
invert every time it reaches the top of

00:07:59,629 --> 00:08:03,879
the bottom so sweating for 4 seconds and

00:08:06,729 --> 00:08:13,279
you can pan and zoom you can fly around

00:08:10,819 --> 00:08:15,409
you can watch that program as it runs

00:08:13,279 --> 00:08:17,569
you can see this cell is still running

00:08:15,409 --> 00:08:19,939
it's a loop that never finishes that

00:08:17,569 --> 00:08:21,199
doesn't look very physically real so

00:08:19,939 --> 00:08:27,199
let's restart the kernel and try

00:08:21,199 --> 00:08:31,639
something more interesting and PaintShop

00:08:27,199 --> 00:08:34,969
Pro is advertising to me all right let's

00:08:31,639 --> 00:08:38,000
run that step and go some real physics

00:08:34,969 --> 00:08:41,149
create the ball on the floor again this

00:08:38,000 --> 00:08:43,099
time we define the velocity is zero gr

00:08:41,149 --> 00:08:43,849
gravity gravitational constant is minus

00:08:43,099 --> 00:08:46,220
9.8

00:08:43,849 --> 00:08:52,250
and we're doing a new frame every 10

00:08:46,220 --> 00:08:54,470
milliseconds so we again change the

00:08:52,250 --> 00:08:56,180
velocity

00:08:54,470 --> 00:08:58,010
change the position of the ball using

00:08:56,180 --> 00:09:01,550
the volson in typeset Monday this time

00:08:58,010 --> 00:09:04,280
we say if the ball dot Y is less than 5

00:09:01,550 --> 00:09:07,490
then invert the velocity otherwise let

00:09:04,280 --> 00:09:09,590
the velocity equals velocity plus G

00:09:07,490 --> 00:09:11,330
times a time step in other words we

00:09:09,590 --> 00:09:19,370
change the velocity by the gravitational

00:09:11,330 --> 00:09:23,380
constant so when we run this we see a

00:09:19,370 --> 00:09:23,380
physically realistic bouncing ball

00:09:23,530 --> 00:09:32,620
again we can pan and zoom and you can

00:09:28,100 --> 00:09:32,620
play around with this you can use

00:09:33,640 --> 00:09:38,510
attributes on the ball you can actually

00:09:36,170 --> 00:09:40,250
use things like ball velocity you can

00:09:38,510 --> 00:09:48,920
add a second ball and keep track of both

00:09:40,250 --> 00:09:52,940
velocities or you can look at velocities

00:09:48,920 --> 00:09:55,400
in 3d for example here the value of G is

00:09:52,940 --> 00:09:57,530
a vector its X component is 0 in other

00:09:55,400 --> 00:09:59,690
words gravity doesn't point sideways it

00:09:57,530 --> 00:10:01,220
points in the y direction and not the z

00:09:59,690 --> 00:10:02,930
direction

00:10:01,220 --> 00:10:05,380
and we can define the initial velocity

00:10:02,930 --> 00:10:08,750
of the ball as in 1 meter per second

00:10:05,380 --> 00:10:11,660
sideways zero velocity vertically in

00:10:08,750 --> 00:10:16,010
zero velocity front to back and we can

00:10:11,660 --> 00:10:18,140
do the same thing again we add the value

00:10:16,010 --> 00:10:23,810
g to the velocity as a vector instead of

00:10:18,140 --> 00:10:27,920
as a scalar so if we run this we can see

00:10:23,810 --> 00:10:29,810
our ball starts on the lift and gravity

00:10:27,920 --> 00:10:33,520
pulls it down words but it's constantly

00:10:29,810 --> 00:10:33,520
moving at 1 meter per second to the left

00:10:34,000 --> 00:10:41,270
and we can tweak it we can say all right

00:10:37,760 --> 00:10:47,200
what happens if it doesn't bounce evenly

00:10:41,270 --> 00:10:50,780
what happens if our velocity is not 0.8

00:10:47,200 --> 00:10:53,590
times G times the time step so we add

00:10:50,780 --> 00:10:58,040
point 8 of G to the velocity every time

00:10:53,590 --> 00:11:02,690
it's going to be adapt bounce so let's

00:10:58,040 --> 00:11:04,530
try that one modifying demos on the fly

00:11:02,690 --> 00:11:08,620
is how things crash

00:11:04,530 --> 00:11:16,450
so it starts off up here doesn't bounce

00:11:08,620 --> 00:11:18,610
quite as high the next time oh okay that

00:11:16,450 --> 00:11:22,840
didn't work that'll teach me to modify

00:11:18,610 --> 00:11:25,570
demo on the fly and when it reaches the

00:11:22,840 --> 00:11:27,070
edge of the wall it goes away and the

00:11:25,570 --> 00:11:37,210
auto-scaling tries to keep up but it

00:11:27,070 --> 00:11:39,940
can't so let's try running stuff outside

00:11:37,210 --> 00:11:42,190
of the ID outside of the web interface

00:11:39,940 --> 00:11:44,800
because the controversial opinion I hate

00:11:42,190 --> 00:11:46,240
Jupiter notebooks i loads them you give

00:11:44,800 --> 00:11:48,490
up all of the advantage of a decent

00:11:46,240 --> 00:11:50,920
development environment for something

00:11:48,490 --> 00:11:55,060
I'm not sure what anyway I like a real

00:11:50,920 --> 00:11:59,530
editor so let's take orbits Kepler's

00:11:55,060 --> 00:12:03,040
third law is that orbits trace out the

00:11:59,530 --> 00:12:04,690
same area in a unit time in other words

00:12:03,040 --> 00:12:08,800
an object orbiting the Sun if you looked

00:12:04,690 --> 00:12:10,270
at how much area would trace out when

00:12:08,800 --> 00:12:11,710
it's close to the Sun if it's an

00:12:10,270 --> 00:12:13,450
elliptical orbit compared to how far

00:12:11,710 --> 00:12:15,340
away it is when it's a far away from the

00:12:13,450 --> 00:12:16,660
Sun you get the same area now this is

00:12:15,340 --> 00:12:18,550
actually modeling the physics of the

00:12:16,660 --> 00:12:20,290
orbit you can see this large star here

00:12:18,550 --> 00:12:22,750
is a hundred times heavier than the

00:12:20,290 --> 00:12:27,130
small star so it's moving slightly as

00:12:22,750 --> 00:12:28,990
the object moves away this they're both

00:12:27,130 --> 00:12:31,510
orbiting the same Center math if you

00:12:28,990 --> 00:12:35,860
click you can draw a line one second

00:12:31,510 --> 00:12:38,110
apart and the area between the the curve

00:12:35,860 --> 00:12:42,970
and those two lines is exactly the same

00:12:38,110 --> 00:12:44,380
whether it's here or out here smaller

00:12:42,970 --> 00:12:49,120
angles because the angular velocities

00:12:44,380 --> 00:12:51,990
lower but the area's are same well we

00:12:49,120 --> 00:12:55,540
can demonstrate how Mars orbit works

00:12:51,990 --> 00:12:57,250
Mars has a period of 686 days and it's

00:12:55,540 --> 00:12:58,960
all but around the Sun the earth has a

00:12:57,250 --> 00:13:01,150
period of three and sixty-five days if

00:12:58,960 --> 00:13:04,150
they started out at the same point then

00:13:01,150 --> 00:13:04,840
every 780 days Mars and the earth would

00:13:04,150 --> 00:13:07,630
line up again

00:13:04,840 --> 00:13:10,840
so after 780 days now's a good time to

00:13:07,630 --> 00:13:12,730
send a spaceship to Mars 780 days later

00:13:10,840 --> 00:13:16,630
will be another good time to send a

00:13:12,730 --> 00:13:17,680
spaceship to Mars and you can pattern

00:13:16,630 --> 00:13:19,899
zoom and fly around

00:13:17,680 --> 00:13:21,970
zoom in and out stuff like that so

00:13:19,899 --> 00:13:23,260
simple concept should involve moving on

00:13:21,970 --> 00:13:26,920
multiple objects are really good for

00:13:23,260 --> 00:13:34,420
illustrating like that oh it's the next

00:13:26,920 --> 00:13:35,440
one the moon moon phases that's a really

00:13:34,420 --> 00:13:41,649
common thing that people weren't

00:13:35,440 --> 00:13:43,029
demonstrated that is the Sun on the left

00:13:41,649 --> 00:13:45,040
the moon on the right you can define

00:13:43,029 --> 00:13:47,080
lights inside V Python your lights or

00:13:45,040 --> 00:13:49,959
any other object you just define an

00:13:47,080 --> 00:13:52,240
object you say you know light one equals

00:13:49,959 --> 00:13:54,279
the Python dot light and you give it a

00:13:52,240 --> 00:13:56,380
position and a color so I've defined

00:13:54,279 --> 00:13:57,640
some light coming from the left and you

00:13:56,380 --> 00:13:59,080
can see the earth spinning the moon

00:13:57,640 --> 00:14:00,820
spinning that arrow represents

00:13:59,080 --> 00:14:02,680
somebody's standing on the moon they're

00:14:00,820 --> 00:14:04,300
now standing on the moon and it's

00:14:02,680 --> 00:14:06,870
starting to the Sun is starting to rise

00:14:04,300 --> 00:14:11,110
for that astronaut on the moon and now

00:14:06,870 --> 00:14:15,010
they're in daylight but if we pan around

00:14:11,110 --> 00:14:17,020
and look from the Sun then we see the

00:14:15,010 --> 00:14:19,029
lit up side of the Sun and we always see

00:14:17,020 --> 00:14:20,170
the lit up side of the Moon and in the

00:14:19,029 --> 00:14:22,720
other direction we're now looking

00:14:20,170 --> 00:14:24,070
towards the Sun we always see the dark

00:14:22,720 --> 00:14:25,779
side of the earth and the dark side of

00:14:24,070 --> 00:14:28,720
the moon but both of them are rotating

00:14:25,779 --> 00:14:30,790
it's often a common fallacy as people to

00:14:28,720 --> 00:14:32,950
say the moon doesn't rotate it does

00:14:30,790 --> 00:14:34,390
rotate you can see it's rotating that

00:14:32,950 --> 00:14:37,120
arrow on the moon is going round and

00:14:34,390 --> 00:14:38,230
round but it's always rotating as it

00:14:37,120 --> 00:14:40,420
goes around the earth so the arrow

00:14:38,230 --> 00:14:42,970
always points towards the earth so you

00:14:40,420 --> 00:14:44,770
can look at very simple concepts like

00:14:42,970 --> 00:14:46,450
shadows and phases and eclipses and

00:14:44,770 --> 00:14:55,209
things like that using modeling like

00:14:46,450 --> 00:14:58,930
this this is the Tulley nearby galaxy

00:14:55,209 --> 00:15:01,029
catalog now there's no movement or

00:14:58,930 --> 00:15:02,589
interaction here but this is three

00:15:01,029 --> 00:15:05,200
thousand dog galaxies and the telly

00:15:02,589 --> 00:15:07,839
nearby galaxies catalog and the red one

00:15:05,200 --> 00:15:09,640
is the Milky Way and we can pan and zoom

00:15:07,839 --> 00:15:12,220
around them you can click on them to see

00:15:09,640 --> 00:15:16,420
what their names are and you can see

00:15:12,220 --> 00:15:18,880
that there's a big gap if you zoom in

00:15:16,420 --> 00:15:20,890
you can see that around the axis of the

00:15:18,880 --> 00:15:22,510
Milky Way there's a gap where there no

00:15:20,890 --> 00:15:24,040
galaxies that's not because they're

00:15:22,510 --> 00:15:25,570
really no galaxies around there it's

00:15:24,040 --> 00:15:26,770
just that galaxies are really hard to

00:15:25,570 --> 00:15:28,779
see through the disk of the Milky Way

00:15:26,770 --> 00:15:31,660
and you can also see that they're in a

00:15:28,779 --> 00:15:34,540
cube galaxies aren't really distributed

00:15:31,660 --> 00:15:36,220
that's just the catalog but you can see

00:15:34,540 --> 00:15:38,290
there's a bunch of clusters as a Virgo

00:15:36,220 --> 00:15:39,970
cluster and other clusters out there and

00:15:38,290 --> 00:15:42,089
you can start talking about how galaxies

00:15:39,970 --> 00:15:44,259
clump into clusters just the same way

00:15:42,089 --> 00:15:47,499
solar systems clump together its

00:15:44,259 --> 00:15:48,959
gravitational interaction now there's

00:15:47,499 --> 00:15:51,369
lots of videos that fly through

00:15:48,959 --> 00:15:53,049
different galaxies catalogs but not many

00:15:51,369 --> 00:15:56,889
that you can actually play with in real

00:15:53,049 --> 00:16:01,059
time what I've spent most time playing

00:15:56,889 --> 00:16:02,889
with is actually let's just show you one

00:16:01,059 --> 00:16:04,569
quick demo all of the stuff I've showed

00:16:02,889 --> 00:16:07,059
you has been the current version of the

00:16:04,569 --> 00:16:09,129
Python this is something that I wrote in

00:16:07,059 --> 00:16:10,749
the old version and have imported the

00:16:09,129 --> 00:16:16,119
newbie Python yet just to show you how

00:16:10,749 --> 00:16:17,649
complicated the rendering can be that is

00:16:16,119 --> 00:16:21,749
a model of a Square Kilometre Array

00:16:17,649 --> 00:16:26,230
station with 256 Christmas tree antennas

00:16:21,749 --> 00:16:30,819
showing the antennas and a rendering of

00:16:26,230 --> 00:16:32,170
this is pretty slow a rendering of some

00:16:30,819 --> 00:16:34,959
cable distribution problems we're having

00:16:32,170 --> 00:16:37,029
just as if as a test to see if there was

00:16:34,959 --> 00:16:38,889
room for this box in the middle and the

00:16:37,029 --> 00:16:40,329
thickness of the cable bundles coming

00:16:38,889 --> 00:16:43,119
out of that box and how it related to

00:16:40,329 --> 00:16:44,649
the gaps between antennas but you can do

00:16:43,119 --> 00:16:45,730
some quite complicated rendering now I'm

00:16:44,649 --> 00:16:47,889
not going to show you this code because

00:16:45,730 --> 00:16:49,509
it's ugly with many many hundreds of

00:16:47,889 --> 00:16:51,339
lines of definitions for where all of

00:16:49,509 --> 00:16:53,410
these lips and wire come out but you can

00:16:51,339 --> 00:16:55,569
do some pretty cool modeling with it and

00:16:53,410 --> 00:16:57,220
you can animate this as well you could

00:16:55,569 --> 00:16:59,619
have the antennae move around you can

00:16:57,220 --> 00:17:01,029
demonstrate rays of light coming from an

00:16:59,619 --> 00:17:03,669
astronomical source or whatever else you

00:17:01,029 --> 00:17:06,100
wanted to do I haven't thought of that

00:17:03,669 --> 00:17:08,049
devii Python yet because it uses some 3d

00:17:06,100 --> 00:17:10,569
model constructs that I haven't worked

00:17:08,049 --> 00:17:13,899
out how to port yet well it's most I'm

00:17:10,569 --> 00:17:15,760
doing is numerical modeling for some

00:17:13,899 --> 00:17:18,519
third-year students I was teaching third

00:17:15,760 --> 00:17:22,389
year astronomy and talking about solar

00:17:18,519 --> 00:17:27,250
system formation now to do this I gave

00:17:22,389 --> 00:17:31,240
them this code that I wrote which would

00:17:27,250 --> 00:17:33,880
model the solar system in 3d so this is

00:17:31,240 --> 00:17:35,590
a simulation of the eight planets in the

00:17:33,880 --> 00:17:38,740
solar system plus a thousand asteroids

00:17:35,590 --> 00:17:40,270
and this is modeling the gravitational

00:17:38,740 --> 00:17:42,279
interactions with between all of the

00:17:40,270 --> 00:17:44,860
planets and the Sun to model how each of

00:17:42,279 --> 00:17:46,450
the planets move and there's a thousand

00:17:44,860 --> 00:17:48,220
asteroids that are treated as massless

00:17:46,450 --> 00:17:50,679
test particles that are only affected by

00:17:48,220 --> 00:17:53,440
the gravity of the planets so they start

00:17:50,679 --> 00:17:55,809
off at random positions in a range

00:17:53,440 --> 00:17:58,090
distributed between three and a half and

00:17:55,809 --> 00:18:00,730
five and a half au and as they rotate

00:17:58,090 --> 00:18:02,320
around because of their own gravity in

00:18:00,730 --> 00:18:05,049
the gravity of the Sun they interact

00:18:02,320 --> 00:18:06,760
with Jupiter and get kicked out so the

00:18:05,049 --> 00:18:09,130
reason I wrote this code was to give the

00:18:06,760 --> 00:18:10,600
code to the students and let them model

00:18:09,130 --> 00:18:12,460
interactions that happen in the early

00:18:10,600 --> 00:18:15,159
solar system for example there are gaps

00:18:12,460 --> 00:18:18,309
in the asteroid belt where there the

00:18:15,159 --> 00:18:20,139
period of the asteroid is a multiple of

00:18:18,309 --> 00:18:21,760
the period of Jupiter in other words

00:18:20,139 --> 00:18:23,860
let's say there's an asteroid that goes

00:18:21,760 --> 00:18:26,470
around twice every time Jupiter goes

00:18:23,860 --> 00:18:28,840
around once every second time it goes

00:18:26,470 --> 00:18:30,309
around the Sun it's happening to line up

00:18:28,840 --> 00:18:31,210
with Jupiter in the same place and

00:18:30,309 --> 00:18:33,669
getting a little bit of extra

00:18:31,210 --> 00:18:36,159
gravitational pull from Jupiter so if

00:18:33,669 --> 00:18:38,289
you let this simulation run for a week

00:18:36,159 --> 00:18:40,529
or two you'd see what's called Kirkwood

00:18:38,289 --> 00:18:43,630
gaps these gaps and harmonics of

00:18:40,529 --> 00:18:45,580
Jupiter's orbit open up you'd also start

00:18:43,630 --> 00:18:49,510
to see Trojan asteroids erosions or

00:18:45,580 --> 00:18:51,279
asteroids that move around 60 degrees

00:18:49,510 --> 00:18:53,889
ahead of Jupiter and 60 degrees behind

00:18:51,279 --> 00:18:55,929
Jupiter because they're stable

00:18:53,889 --> 00:18:58,389
gravitational points that they can be in

00:18:55,929 --> 00:19:00,730
a nice stable orbit and not get kicked

00:18:58,389 --> 00:19:02,409
out by Jupiter so you can do some

00:19:00,730 --> 00:19:04,750
modeling of the early solar system in

00:19:02,409 --> 00:19:06,789
reality these points aren't massless in

00:19:04,750 --> 00:19:08,889
the early solar system Jupiter captured

00:19:06,789 --> 00:19:10,389
a lot of asteroids and its orbit was

00:19:08,889 --> 00:19:12,730
changed by the asteroids since it

00:19:10,389 --> 00:19:14,919
doesn't model that and the 3d simulation

00:19:12,730 --> 00:19:17,649
is just a toy but it's still quite a lot

00:19:14,919 --> 00:19:21,070
of fun to play with you can do things

00:19:17,649 --> 00:19:27,129
like change the parameters let's go in

00:19:21,070 --> 00:19:28,960
here so let's say instead of starting

00:19:27,129 --> 00:19:32,169
them all at random positions around the

00:19:28,960 --> 00:19:35,470
Sun let's start them all at 12 degrees

00:19:32,169 --> 00:19:38,169
picked at random instead of a head of a

00:19:35,470 --> 00:19:41,559
0 to 360 degree range so they all start

00:19:38,169 --> 00:19:43,570
out and an evenly distributed range from

00:19:41,559 --> 00:19:46,120
3 astronomical units to five and a half

00:19:43,570 --> 00:19:47,529
astronomical units away from the Sun but

00:19:46,120 --> 00:19:49,000
instead of starting distributed around

00:19:47,529 --> 00:19:51,549
in you know different orbits they'll

00:19:49,000 --> 00:19:55,980
start at the same position and that

00:19:51,549 --> 00:19:57,400
makes it a lot easier to see subtle

00:19:55,980 --> 00:20:03,180
differences did

00:19:57,400 --> 00:20:03,180
Jupiter's gravity where are we

00:20:10,280 --> 00:20:13,820
so the ones that are the right distance

00:20:12,350 --> 00:20:21,740
again disturbed by Jupiter get kicked

00:20:13,820 --> 00:20:23,510
out very quickly so these all started in

00:20:21,740 --> 00:20:25,460
a line out from the Sun at all to the

00:20:23,510 --> 00:20:29,300
same angle the only difference between

00:20:25,460 --> 00:20:31,310
them is their semi-major axis how fast

00:20:29,300 --> 00:20:32,630
they go around the Sun and what's

00:20:31,310 --> 00:20:35,690
happened to them because of the effect

00:20:32,630 --> 00:20:37,580
of the gravity of Jupiter you can pan

00:20:35,690 --> 00:20:39,140
around all of these asteroids started

00:20:37,580 --> 00:20:40,520
out of the same plane some of the being

00:20:39,140 --> 00:20:43,910
kicked above or below the plane of the

00:20:40,520 --> 00:20:47,840
solar system you can pause and click on

00:20:43,910 --> 00:20:52,250
an asteroid and unpause mister on it

00:20:47,840 --> 00:20:55,700
again and now that asteroid will leave a

00:20:52,250 --> 00:20:58,400
trail and you can see how it's moving

00:20:55,700 --> 00:20:59,000
and you can watch this for weeks it's

00:20:58,400 --> 00:21:00,830
hypnotic

00:20:59,000 --> 00:21:02,540
I've sent this and left it running on my

00:21:00,830 --> 00:21:04,640
second monitor for like a week at a time

00:21:02,540 --> 00:21:06,460
just to see all the cool patterns that

00:21:04,640 --> 00:21:11,060
come out of it it's lots and lots of fun

00:21:06,460 --> 00:21:14,210
so there's lots of cool concepts you can

00:21:11,060 --> 00:21:15,770
teach you can watch the output in it you

00:21:14,210 --> 00:21:19,880
know this object has left the solar

00:21:15,770 --> 00:21:20,510
system this object is well that's

00:21:19,880 --> 00:21:24,050
interesting

00:21:20,510 --> 00:21:28,640
oh I just discovered a bug you shouldn't

00:21:24,050 --> 00:21:31,130
have seen that and what else over down

00:21:28,640 --> 00:21:40,090
over again let's have a look at this one

00:21:31,130 --> 00:21:40,090
first oh great

00:21:40,530 --> 00:21:46,920
a game that I broke all right I want you

00:21:44,730 --> 00:21:50,880
again

00:21:46,920 --> 00:21:53,610
the code is very simple if you want to

00:21:50,880 --> 00:21:55,230
look at the Mars one for example again

00:21:53,610 --> 00:21:57,870
it's just a combination of creating

00:21:55,230 --> 00:22:00,150
spheres boxes changing their positions

00:21:57,870 --> 00:22:02,580
changing their colors anything about

00:22:00,150 --> 00:22:04,200
this 3d model that you can define at the

00:22:02,580 --> 00:22:06,330
beginning like a color a position a

00:22:04,200 --> 00:22:08,040
diameter a shape you can change on the

00:22:06,330 --> 00:22:10,920
fly and have objects changing in size

00:22:08,040 --> 00:22:14,130
and color and and other properties as

00:22:10,920 --> 00:22:16,320
the program interacts with them you can

00:22:14,130 --> 00:22:23,670
just type it up command line you could

00:22:16,320 --> 00:22:31,860
just do Python from the Python and

00:22:23,670 --> 00:22:34,340
thought star a equals sphere let's see

00:22:31,860 --> 00:22:34,340
if I can type

00:22:39,480 --> 00:22:45,440
and as you type it opens up a window to

00:22:42,330 --> 00:22:45,440
display the results of your typing

00:22:48,620 --> 00:23:12,750
sphere dot color equals victor that was

00:23:03,269 --> 00:23:15,659
done beedo car i can't talk when people

00:23:12,750 --> 00:23:16,950
are watching and it didn't work anyway

00:23:15,659 --> 00:23:18,750
that's odd

00:23:16,950 --> 00:23:22,889
that'll teach me again not to do live

00:23:18,750 --> 00:23:25,230
demos anyway that's about all I have I

00:23:22,889 --> 00:23:29,190
hope you'll get some use out of it and

00:23:25,230 --> 00:23:34,350
start doing Frankie 3d stuff and all of

00:23:29,190 --> 00:23:37,139
this stuff is available here that's a

00:23:34,350 --> 00:23:40,049
link to Glo script and V Python and the

00:23:37,139 --> 00:23:43,130
code that I was doing hopefully it'll be

00:23:40,049 --> 00:23:43,130
working by the time we download it

00:23:48,490 --> 00:24:00,130
any questions from the floor no thank

00:23:56,890 --> 00:24:02,320
you for your talk when you model objects

00:24:00,130 --> 00:24:05,860
do you have to use the primitive like

00:24:02,320 --> 00:24:14,170
spheres and cubes or can you maybe

00:24:05,860 --> 00:24:16,900
import from other common formats not

00:24:14,170 --> 00:24:19,330
easily no there's lots more primitives

00:24:16,900 --> 00:24:21,940
you can use you can define a 2d path and

00:24:19,330 --> 00:24:23,350
then extruded a longer a treaty shape

00:24:21,940 --> 00:24:25,720
with an extrude along a path for example

00:24:23,350 --> 00:24:27,460
you can build up quite complicated

00:24:25,720 --> 00:24:30,220
shapes using the perimeters they give

00:24:27,460 --> 00:24:32,080
you but there's no tool for directly

00:24:30,220 --> 00:24:35,170
importing them from poverty or whatever

00:24:32,080 --> 00:24:38,380
there is a tool that will take your V

00:24:35,170 --> 00:24:40,120
Python C and an export into povery but

00:24:38,380 --> 00:24:41,650
not the other way that I know of but

00:24:40,120 --> 00:24:43,030
I've never you really use povery or any

00:24:41,650 --> 00:24:44,590
other blending machine it might be that

00:24:43,030 --> 00:24:49,390
one of them has developed a tool for

00:24:44,590 --> 00:24:55,060
doing it but I don't know that other

00:24:49,390 --> 00:24:56,590
questions all right thank you very much

00:24:55,060 --> 00:24:58,360
and drum sure if you've got any

00:24:56,590 --> 00:25:00,720
questions you do want to address the

00:24:58,360 --> 00:25:00,720
Andrew

00:25:03,040 --> 00:25:06,260

YouTube URL: https://www.youtube.com/watch?v=3oAgsQji6m4


