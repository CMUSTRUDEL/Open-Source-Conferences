Title: Using Python, Django, and ruthlessness to protect people from social media harassment.
Publication date: 2019-08-03
Playlist: PyCon Australia 2019
Description: 
	Tom Eastman

In this talk, I present 'secateur', a tool for Twitter users to protect themselves from some forms of online harassment. I discuss using Python and Django to create tools that integrate with Twitter, use its APIs, and block lots of people (LOTS of people).

https://2019.pycon-au.org/talks/using-python-django-and-ruthlessness-to-protect-people-from-social-media-harassment

PyCon AU, the national Python Language conference, is on again this August in Sydney, at the International Convention Centre, Sydney, August 2 - 6 2019.

Video licence: CC BY-NC-SA 4.0 - https://creativecommons.org/licenses/by-nc-sa/4.0/

Python, PyCon, PyConAU

Fri Aug  2 17:20:00 2019 at C3.3
Captions: 
	00:00:00,620 --> 00:00:05,100
so our final speaker needs no

00:00:03,300 --> 00:00:07,379
introduction but he's getting one anyway

00:00:05,100 --> 00:00:08,970
Tom Eastman is a developer systems

00:00:07,379 --> 00:00:10,349
engineer and security consultant from

00:00:08,970 --> 00:00:11,700
New Zealand and he's going to show us

00:00:10,349 --> 00:00:13,380
how to use Python and Django and

00:00:11,700 --> 00:00:14,190
ruthlessness to protect people from

00:00:13,380 --> 00:00:26,670
harassment

00:00:14,190 --> 00:00:28,740
please make Tom feel welcome hello this

00:00:26,670 --> 00:00:30,300
is a talk about a side project and I

00:00:28,740 --> 00:00:32,550
have a really poor track record with

00:00:30,300 --> 00:00:33,870
side projects this talk is about a side

00:00:32,550 --> 00:00:35,340
project that actually has made it a

00:00:33,870 --> 00:00:37,260
little bit further than the idea stage

00:00:35,340 --> 00:00:41,879
for once but I kind of need to say up

00:00:37,260 --> 00:00:43,440
front that not much further so yeah but

00:00:41,879 --> 00:00:45,149
my talks actually only peripherally

00:00:43,440 --> 00:00:47,760
about the project you can kind of take

00:00:45,149 --> 00:00:50,250
take it or leave it what I'm really here

00:00:47,760 --> 00:00:51,449
to say is if you think you actually have

00:00:50,250 --> 00:00:53,280
a skill set that you could use to

00:00:51,449 --> 00:00:55,980
protect somebody you have a moral

00:00:53,280 --> 00:00:57,600
obligation to do so that's it I mean

00:00:55,980 --> 00:00:59,640
I've got other stuff I'm going to say

00:00:57,600 --> 00:01:04,860
tonight but that's all you need to write

00:00:59,640 --> 00:01:06,560
down and look that might be a massive

00:01:04,860 --> 00:01:08,460
ethical and philosophical

00:01:06,560 --> 00:01:11,580
oversimplification but it's a better

00:01:08,460 --> 00:01:12,869
direction in which to be wrong than many

00:01:11,580 --> 00:01:18,720
other choices that you might be able to

00:01:12,869 --> 00:01:20,620
make so who uses Twitter a lot you have

00:01:18,720 --> 00:01:24,130
my condolences

00:01:20,620 --> 00:01:25,600
um in in in quite a lot of ways Twitter

00:01:24,130 --> 00:01:27,670
seems like it was designed from the

00:01:25,600 --> 00:01:30,220
ground up to be the perfect tool for

00:01:27,670 --> 00:01:32,800
harassment everything is public by

00:01:30,220 --> 00:01:34,420
default people broadcast directly to

00:01:32,800 --> 00:01:36,250
their followers and people with a lot of

00:01:34,420 --> 00:01:38,580
followers can use them as a private army

00:01:36,250 --> 00:01:40,780
they can use them as ammunition and

00:01:38,580 --> 00:01:43,780
Twitter was basically designed to be the

00:01:40,780 --> 00:01:46,030
perfect platform for dogpiling dogpiling

00:01:43,780 --> 00:01:47,530
is when one user basically uses their

00:01:46,030 --> 00:01:48,820
followers to attack some other user

00:01:47,530 --> 00:01:52,360
usually just for expressing their

00:01:48,820 --> 00:01:54,220
opinions it's it's an emergent property

00:01:52,360 --> 00:01:56,170
that's fundamental to how Twitter was

00:01:54,220 --> 00:01:58,360
designed if you're on there you already

00:01:56,170 --> 00:02:01,540
know how ugly this can get and it

00:01:58,360 --> 00:02:04,090
happens to me like a little bit but not

00:02:01,540 --> 00:02:06,220
much and that's because I'm a

00:02:04,090 --> 00:02:08,350
middle-class educated white guy in tech

00:02:06,220 --> 00:02:11,020
and I have a profile picture of myself

00:02:08,350 --> 00:02:13,690
standing behind a podium with a fancy

00:02:11,020 --> 00:02:17,950
suit jacket on stroking my beard like

00:02:13,690 --> 00:02:19,210
intellectually I I have the privilege of

00:02:17,950 --> 00:02:21,460
my existence on Twitter not being

00:02:19,210 --> 00:02:23,410
questioned every day but if you're a

00:02:21,460 --> 00:02:25,060
woman or a member of any marginalized

00:02:23,410 --> 00:02:30,700
group Twitter can just be like a sea of

00:02:25,060 --> 00:02:33,250
nightmares Twitter provides like a few

00:02:30,700 --> 00:02:36,489
really blunt flawed mechanisms to try to

00:02:33,250 --> 00:02:38,530
deal with harasses you can set your

00:02:36,489 --> 00:02:40,750
Twitter profile to private and that kind

00:02:38,530 --> 00:02:42,640
of locks it down but it also has the

00:02:40,750 --> 00:02:43,840
result of locking you out of the public

00:02:42,640 --> 00:02:46,180
conversations that you might have wanted

00:02:43,840 --> 00:02:49,060
to be a part of and you can block or

00:02:46,180 --> 00:02:50,230
mute users blocking individual users

00:02:49,060 --> 00:02:52,330
doesn't do you any good if there are

00:02:50,230 --> 00:02:54,610
people stirring crowds of users to

00:02:52,330 --> 00:02:56,290
attack you it's the same problem for

00:02:54,610 --> 00:02:59,260
muting users but it's even worse because

00:02:56,290 --> 00:03:01,030
if you mute users they just start

00:02:59,260 --> 00:03:03,280
harassing everyone who replies to any

00:03:01,030 --> 00:03:04,450
tweet that you ever make and you don't

00:03:03,280 --> 00:03:05,590
see it you don't realize that it's

00:03:04,450 --> 00:03:08,560
happening anymore because you have

00:03:05,590 --> 00:03:10,750
successfully muted then Twitter has a

00:03:08,560 --> 00:03:12,670
report user and sort of report tweet

00:03:10,750 --> 00:03:14,920
functionality these days and they're

00:03:12,670 --> 00:03:16,810
beyond useless they're actually harmful

00:03:14,920 --> 00:03:18,519
they've become tools for organized

00:03:16,810 --> 00:03:20,140
harassment just as much as tools to

00:03:18,519 --> 00:03:22,120
protect from it nowadays people will

00:03:20,140 --> 00:03:24,070
instead of organizing their followers to

00:03:22,120 --> 00:03:26,739
attack you they'll organize their

00:03:24,070 --> 00:03:29,410
followers to report you and then you get

00:03:26,739 --> 00:03:31,510
suspended and Twitter's not going to fix

00:03:29,410 --> 00:03:34,840
any of this

00:03:31,510 --> 00:03:37,420
here's the thing this toxic model of

00:03:34,840 --> 00:03:40,390
interaction is great for engagement and

00:03:37,420 --> 00:03:43,209
engagement eyeballs on screen and thus

00:03:40,390 --> 00:03:48,129
eyeballs on Promoted Tweets is the only

00:03:43,209 --> 00:03:49,510
metric twitter optimizes for you've

00:03:48,129 --> 00:03:50,890
heard this phrase right if you're not

00:03:49,510 --> 00:03:52,030
paying for the product you are the

00:03:50,890 --> 00:03:54,670
product you probably all heard this

00:03:52,030 --> 00:03:56,019
before and you already knew this about

00:03:54,670 --> 00:03:58,329
social media platforms right they're

00:03:56,019 --> 00:03:59,920
free because they collect and harvest

00:03:58,329 --> 00:04:02,560
information about you that they use for

00:03:59,920 --> 00:04:04,750
targeted advertising you already know

00:04:02,560 --> 00:04:07,120
this and you say you mind a little you

00:04:04,750 --> 00:04:08,500
say it annoys you but really you don't

00:04:07,120 --> 00:04:12,879
mind because actually otherwise you

00:04:08,500 --> 00:04:14,680
wouldn't be on there but that's because

00:04:12,879 --> 00:04:16,930
you think that you're a product like how

00:04:14,680 --> 00:04:20,049
a nice car is a product or a

00:04:16,930 --> 00:04:22,570
professional consultant is a product but

00:04:20,049 --> 00:04:24,910
you're not to these companies you're the

00:04:22,570 --> 00:04:30,370
product like how a caged battery hen is

00:04:24,910 --> 00:04:32,740
the product and it might not have been

00:04:30,370 --> 00:04:35,490
so bad still if your best interests

00:04:32,740 --> 00:04:38,169
aligned with theirs but they don't

00:04:35,490 --> 00:04:40,840
they're just here for the eggs and your

00:04:38,169 --> 00:04:42,190
well-being physical or emotional is not

00:04:40,840 --> 00:04:43,750
among the metrics that they are

00:04:42,190 --> 00:04:46,320
optimizing for that's that's not where

00:04:43,750 --> 00:04:46,320
their money's made

00:04:54,770 --> 00:05:00,750
so time to quit or do something about it

00:04:58,080 --> 00:05:02,430
yourself if you want something better

00:05:00,750 --> 00:05:04,560
and if you want to remain on this

00:05:02,430 --> 00:05:06,720
platform and remain a part of this big

00:05:04,560 --> 00:05:09,650
conversation while still actually having

00:05:06,720 --> 00:05:11,880
the ability to draw some boundaries and

00:05:09,650 --> 00:05:13,830
take some power back in terms of how

00:05:11,880 --> 00:05:15,710
people interact with you you're gonna

00:05:13,830 --> 00:05:18,270
have to do it yourself

00:05:15,710 --> 00:05:19,860
blocking individual users one at a time

00:05:18,270 --> 00:05:22,740
does not scale when someone's being

00:05:19,860 --> 00:05:23,700
attacked by a mob one very successful

00:05:22,740 --> 00:05:26,310
tool that's been around for a few years

00:05:23,700 --> 00:05:27,900
that solves some of this problem is

00:05:26,310 --> 00:05:30,390
called block together and it's a site

00:05:27,900 --> 00:05:32,460
where like-minded people can form lists

00:05:30,390 --> 00:05:35,340
of accounts and people can subscribe to

00:05:32,460 --> 00:05:36,990
block everyone on that list and it first

00:05:35,340 --> 00:05:40,800
gained prominence sort of around the

00:05:36,990 --> 00:05:44,070
gamergate era and it's still a very

00:05:40,800 --> 00:05:46,169
useful tool in this vein it's a pretty

00:05:44,070 --> 00:05:47,340
good idea it's done well but it depends

00:05:46,169 --> 00:05:49,530
on someone having done the work of

00:05:47,340 --> 00:05:53,070
identifying miscreants kind of ahead of

00:05:49,530 --> 00:05:54,200
time so now we come to what I've been

00:05:53,070 --> 00:05:57,120
playing with for the last little while

00:05:54,200 --> 00:05:58,979
there were two things that I wanted and

00:05:57,120 --> 00:06:00,390
that I kind of waited in vain for

00:05:58,979 --> 00:06:05,520
Twitter to get around to implementing

00:06:00,390 --> 00:06:07,380
themselves but they won't Twitter has

00:06:05,520 --> 00:06:10,380
never provided the means to temporarily

00:06:07,380 --> 00:06:12,090
block or mute someone you can't click a

00:06:10,380 --> 00:06:14,250
button and say like mute someone for a

00:06:12,090 --> 00:06:15,540
week or block someone for a month you'd

00:06:14,250 --> 00:06:17,880
have to remember to unblock them later

00:06:15,540 --> 00:06:19,530
yourself and what I wanted was something

00:06:17,880 --> 00:06:21,660
more like a timeout I wanted something

00:06:19,530 --> 00:06:23,640
that I could use with more ruthlessness

00:06:21,660 --> 00:06:25,770
I could go yeah I don't want to hear

00:06:23,640 --> 00:06:28,020
from you for like a month you can go

00:06:25,770 --> 00:06:29,310
away and cool down right you can cut off

00:06:28,020 --> 00:06:31,590
an unpleasant interaction right away

00:06:29,310 --> 00:06:33,510
without it feeling like a permanent

00:06:31,590 --> 00:06:35,400
severance or something and Twitter

00:06:33,510 --> 00:06:37,169
actually understands the power of

00:06:35,400 --> 00:06:39,300
temporary blocks to encourage your use

00:06:37,169 --> 00:06:41,370
of a safety feature right hilariously

00:06:39,300 --> 00:06:43,050
they'll implement it so that nerds can

00:06:41,370 --> 00:06:44,640
protect themselves from movie spoilers

00:06:43,050 --> 00:06:50,160
but not so that you can protect yourself

00:06:44,640 --> 00:06:51,870
from Nazis and then the second thing

00:06:50,160 --> 00:06:54,120
that I thought we needed was or

00:06:51,870 --> 00:06:55,890
something that I wanted to provide at

00:06:54,120 --> 00:06:57,840
least was a way to protect yourself

00:06:55,890 --> 00:06:59,130
against the dog pile right if you need

00:06:57,840 --> 00:07:00,930
to block a person who's attacking you

00:06:59,130 --> 00:07:03,840
you probably actually need to block all

00:07:00,930 --> 00:07:05,010
their followers as well at least for a

00:07:03,840 --> 00:07:08,040
while just

00:07:05,010 --> 00:07:10,470
shut them down so that's what I decided

00:07:08,040 --> 00:07:12,780
to build I decided to build a tool that

00:07:10,470 --> 00:07:15,210
you can use that will allow you to click

00:07:12,780 --> 00:07:17,820
a single button and mute or block a

00:07:15,210 --> 00:07:20,670
harasser and all their followers for a

00:07:17,820 --> 00:07:22,500
time period 6 weeks 12 weeks 30 weeks

00:07:20,670 --> 00:07:24,180
you know just goodbye

00:07:22,500 --> 00:07:26,430
put them in a timeout let them cool off

00:07:24,180 --> 00:07:30,090
let them find something else to do with

00:07:26,430 --> 00:07:33,300
their time I have this theory you can

00:07:30,090 --> 00:07:34,650
ask me about it later which is um if you

00:07:33,300 --> 00:07:37,980
ever have to block someone on Twitter

00:07:34,650 --> 00:07:39,390
it's because both you and them agree

00:07:37,980 --> 00:07:43,500
that your time is more valuable than

00:07:39,390 --> 00:07:44,550
their time because they wouldn't be

00:07:43,500 --> 00:07:46,980
tweeting at you until you had to block

00:07:44,550 --> 00:07:49,920
them unless they decided that was the

00:07:46,980 --> 00:07:51,690
best use of their time so that's the

00:07:49,920 --> 00:07:53,280
project and for the rest of this talk

00:07:51,690 --> 00:07:55,200
I'm just gonna take you through what I

00:07:53,280 --> 00:07:57,030
think have been some of the interesting

00:07:55,200 --> 00:07:58,380
parts of taking what is honestly

00:07:57,030 --> 00:08:02,340
actually a pretty simple idea and

00:07:58,380 --> 00:08:03,450
turning it into a django app so um I was

00:08:02,340 --> 00:08:07,320
going to spend some time talking about

00:08:03,450 --> 00:08:09,060
the technical details of how it was

00:08:07,320 --> 00:08:13,980
built but it is just a Django project

00:08:09,060 --> 00:08:15,660
and you can read it for yourself so at

00:08:13,980 --> 00:08:17,550
its core it actually really is a very

00:08:15,660 --> 00:08:20,310
simple idea can everyone read this code

00:08:17,550 --> 00:08:22,350
at the back cool this is the whole thing

00:08:20,310 --> 00:08:23,580
like this is this is this is the

00:08:22,350 --> 00:08:27,330
business logic of more or less what I

00:08:23,580 --> 00:08:28,020
just described this code here just grabs

00:08:27,330 --> 00:08:29,880
three things

00:08:28,020 --> 00:08:31,830
it grabs it does three things it grabs

00:08:29,880 --> 00:08:33,750
your credentials your Twitter API

00:08:31,830 --> 00:08:36,390
credentials it iterates through each

00:08:33,750 --> 00:08:39,990
page of an accounts followers and it

00:08:36,390 --> 00:08:42,599
sends a block request to every numeric

00:08:39,990 --> 00:08:44,910
ID received per page each page of

00:08:42,599 --> 00:08:47,070
followers is about five thousand and it

00:08:44,910 --> 00:08:48,660
sleeps when it hits Twitter's rate

00:08:47,070 --> 00:08:50,310
limits so it'll run for a while it'll

00:08:48,660 --> 00:08:52,110
hit a rate limit it'll just sleep that's

00:08:50,310 --> 00:08:53,790
just a function of the funky little

00:08:52,110 --> 00:08:58,410
Python Twitter library which is on pypy

00:08:53,790 --> 00:09:00,270
I pretty straightforward right the whole

00:08:58,410 --> 00:09:03,510
business logic of my idea in one screen

00:09:00,270 --> 00:09:05,160
of code so what does it take to take an

00:09:03,510 --> 00:09:06,600
idea this simple something that's

00:09:05,160 --> 00:09:07,860
expressible on one slide and turned it

00:09:06,600 --> 00:09:10,800
into a web app that people can actually

00:09:07,860 --> 00:09:12,920
use can everyone read the code of the

00:09:10,800 --> 00:09:12,920
back

00:09:14,600 --> 00:09:18,720
it's not actually a surprise to anyone

00:09:16,829 --> 00:09:20,640
in the room right like like Django can't

00:09:18,720 --> 00:09:23,100
shield you from how complicated even the

00:09:20,640 --> 00:09:25,860
simplest web application needs to be

00:09:23,100 --> 00:09:26,970
just to do the basics right so rather

00:09:25,860 --> 00:09:28,680
than take you through the whole codebase

00:09:26,970 --> 00:09:31,620
I just wanted to sort of talk a little

00:09:28,680 --> 00:09:39,510
bit about why it becomes so much more

00:09:31,620 --> 00:09:40,980
complicated and then celery um at least

00:09:39,510 --> 00:09:44,160
for a tool at least for a tool like this

00:09:40,980 --> 00:09:45,720
all the useful work that this tool does

00:09:44,160 --> 00:09:48,000
although useful work that secretary does

00:09:45,720 --> 00:09:49,800
happens somewhere other than in a

00:09:48,000 --> 00:09:51,120
webview so in the script I showed you

00:09:49,800 --> 00:09:53,550
before the work was done in a single

00:09:51,120 --> 00:09:55,260
loop and it was blocking and it could

00:09:53,550 --> 00:09:57,269
take a long time just sending all the

00:09:55,260 --> 00:09:58,829
API calls sequentially

00:09:57,269 --> 00:10:01,110
I need this tool I need something like

00:09:58,829 --> 00:10:03,860
this to work fast for lots of users

00:10:01,110 --> 00:10:07,620
regardless of how slow the API is or how

00:10:03,860 --> 00:10:10,829
restrictive Twitter's rate-limiting can

00:10:07,620 --> 00:10:12,420
be so I built it as a bunch of

00:10:10,829 --> 00:10:15,140
asynchronous Sellery tasks for them

00:10:12,420 --> 00:10:17,699
which for the most part each handle one

00:10:15,140 --> 00:10:19,470
interaction with the Twitter API so you

00:10:17,699 --> 00:10:21,120
end up with a celery task that blocks

00:10:19,470 --> 00:10:24,120
the user a celery task that unblocks the

00:10:21,120 --> 00:10:28,649
user a celery task that iterates through

00:10:24,120 --> 00:10:30,810
one page of results from retrieving a

00:10:28,649 --> 00:10:32,459
list from Twitter and that could be like

00:10:30,810 --> 00:10:37,079
a list of followers or a block list or

00:10:32,459 --> 00:10:38,550
or you know and then once you have all

00:10:37,079 --> 00:10:40,050
of those as separate tasks they can be

00:10:38,550 --> 00:10:43,589
farmed out to your celery workers and

00:10:40,050 --> 00:10:45,060
they can just scale out and the

00:10:43,589 --> 00:10:46,470
complexity in something like this is

00:10:45,060 --> 00:10:48,180
actually just an orchestrating and

00:10:46,470 --> 00:10:51,959
scheduling those tasks is every time you

00:10:48,180 --> 00:10:54,329
receive a page of 5,000 followers you

00:10:51,959 --> 00:10:56,550
need to create 5,000 more tasks and you

00:10:54,329 --> 00:10:57,720
can hit a Twitter rate limit all the

00:10:56,550 --> 00:10:59,430
Twitter rate limits are sort of in

00:10:57,720 --> 00:11:01,470
15-minute windows so then you need to

00:10:59,430 --> 00:11:03,959
have some kind of exponentially weighted

00:11:01,470 --> 00:11:07,019
back off period where it'll farm out

00:11:03,959 --> 00:11:08,579
those tasks to random 15-minute windows

00:11:07,019 --> 00:11:10,890
scheduled down the way so that it's

00:11:08,579 --> 00:11:11,640
still responsive when you want to do

00:11:10,890 --> 00:11:14,790
something in a hurry

00:11:11,640 --> 00:11:18,600
but won't just over congest or won't

00:11:14,790 --> 00:11:21,060
just toss the system right and that all

00:11:18,600 --> 00:11:23,220
adds up to code and then there's like my

00:11:21,060 --> 00:11:24,569
own personal Achilles heel which is user

00:11:23,220 --> 00:11:25,620
interfaces I'm terrible at them if

00:11:24,569 --> 00:11:26,070
you've already tried to pull it up

00:11:25,620 --> 00:11:27,900
you've seen it

00:11:26,070 --> 00:11:32,340
disgusting crappy hello world style

00:11:27,900 --> 00:11:34,380
bootstrap thing it's not my strongpoint

00:11:32,340 --> 00:11:37,740
I'm a better Python coder than an HTML

00:11:34,380 --> 00:11:39,330
coder um unfortunately people actually

00:11:37,740 --> 00:11:40,980
do need to be able to log in and they

00:11:39,330 --> 00:11:42,210
need to actually do the thing and they

00:11:40,980 --> 00:11:43,770
need to be able to log out again and

00:11:42,210 --> 00:11:44,910
then disconnect entirely if they want to

00:11:43,770 --> 00:11:49,080
have nothing to do with the app and

00:11:44,910 --> 00:11:51,120
you're also very valuable that's um the

00:11:49,080 --> 00:11:55,560
difference between a little shell script

00:11:51,120 --> 00:11:56,850
and a web app the guardrails so you

00:11:55,560 --> 00:11:59,730
don't want to allow people to

00:11:56,850 --> 00:12:02,850
accidentally block their own users there

00:11:59,730 --> 00:12:04,680
are their own followers you want to make

00:12:02,850 --> 00:12:06,510
sure that what they ask of the system is

00:12:04,680 --> 00:12:08,880
sort of finite and achievable you don't

00:12:06,510 --> 00:12:10,650
want them to try and block all the

00:12:08,880 --> 00:12:14,790
followers of an account with 107 million

00:12:10,650 --> 00:12:16,650
people that can take a long time you

00:12:14,790 --> 00:12:24,480
don't want someone to try and block all

00:12:16,650 --> 00:12:25,890
of Twitter even if you sympathize even

00:12:24,480 --> 00:12:27,450
simple ideas that you can convey a

00:12:25,890 --> 00:12:28,920
screen full of code end up being pretty

00:12:27,450 --> 00:12:31,530
complex once you try and build it for

00:12:28,920 --> 00:12:33,570
any kind of real world and complexity

00:12:31,530 --> 00:12:35,820
means that there's more stuff that can

00:12:33,570 --> 00:12:37,230
go wrong and it means that there might

00:12:35,820 --> 00:12:40,230
be more stuff that's exploitable by

00:12:37,230 --> 00:12:43,890
attackers so this would be a problem in

00:12:40,230 --> 00:12:45,570
any web app even toy side projects but

00:12:43,890 --> 00:12:47,700
this toy side project is intended for

00:12:45,570 --> 00:12:49,800
use by people who are vulnerable right

00:12:47,700 --> 00:12:52,650
and people who are already being

00:12:49,800 --> 00:12:54,060
attacked so if they're hoping that

00:12:52,650 --> 00:12:55,800
something like this will protect them

00:12:54,060 --> 00:12:57,690
then first and foremost it better not

00:12:55,800 --> 00:13:01,950
actually expose them to more rip to more

00:12:57,690 --> 00:13:03,510
harm so I'm gonna talk a little bit

00:13:01,950 --> 00:13:06,120
about threat modeling and we're just

00:13:03,510 --> 00:13:08,100
gonna be informal about this I was gonna

00:13:06,120 --> 00:13:10,260
have a slide with like the Wikipedia

00:13:08,100 --> 00:13:14,030
definition of threat modeling in it like

00:13:10,260 --> 00:13:16,050
a high school like a high school essay

00:13:14,030 --> 00:13:19,050
but what I'm talking about here is the

00:13:16,050 --> 00:13:21,360
exercise of brainstorming and planning

00:13:19,050 --> 00:13:22,890
out as much as you can about like who

00:13:21,360 --> 00:13:24,690
might be trying to attack your project

00:13:22,890 --> 00:13:28,010
and what resources they might have their

00:13:24,690 --> 00:13:30,060
disposal how they might go about it and

00:13:28,010 --> 00:13:33,360
most importantly like what would happen

00:13:30,060 --> 00:13:37,290
next and you do this because you need to

00:13:33,360 --> 00:13:38,790
decide given the trade-offs what the

00:13:37,290 --> 00:13:41,640
next most important thing you

00:13:38,790 --> 00:13:42,660
can do to keep people safe it's nothing

00:13:41,640 --> 00:13:44,340
to do with trying to make something

00:13:42,660 --> 00:13:46,500
perfectly secure that that doesn't

00:13:44,340 --> 00:13:48,600
happen it doesn't exist so you have to

00:13:46,500 --> 00:13:52,050
you have to work out for yourself what

00:13:48,600 --> 00:13:54,570
is the next best thing that I can do so

00:13:52,050 --> 00:13:59,280
who might try to attack my coat the

00:13:54,570 --> 00:14:02,010
first obvious choice is everyone right

00:13:59,280 --> 00:14:03,630
the the sort of background radiation

00:14:02,010 --> 00:14:05,370
that everyone has to deal with on the

00:14:03,630 --> 00:14:11,000
internet you know whole internet scans

00:14:05,370 --> 00:14:13,260
BOTS just scripted scripted things

00:14:11,000 --> 00:14:15,180
scanning wide swaths of the internet

00:14:13,260 --> 00:14:16,860
looking for low-hanging fruit and to be

00:14:15,180 --> 00:14:20,910
honest if you're using Django and if

00:14:16,860 --> 00:14:23,910
you're using up-to-date libraries your

00:14:20,910 --> 00:14:25,980
app is behind SSL and you don't turn on

00:14:23,910 --> 00:14:31,260
debug mode you're actually already in

00:14:25,980 --> 00:14:32,880
pretty decent shape here so people

00:14:31,260 --> 00:14:34,920
specifically targeting secretory would

00:14:32,880 --> 00:14:37,320
be far more dangerous people might

00:14:34,920 --> 00:14:38,670
choose to attack it specifically because

00:14:37,320 --> 00:14:40,610
they're angry about what it does or

00:14:38,670 --> 00:14:42,570
they're angry about who's using it and

00:14:40,610 --> 00:14:44,100
they might have a lot of time at the

00:14:42,570 --> 00:14:45,450
disposal and they can cone the

00:14:44,100 --> 00:14:47,880
repository and they can see how it works

00:14:45,450 --> 00:14:49,680
they can investigate my dependencies and

00:14:47,880 --> 00:14:54,240
go looking for vulnerabilities and them

00:14:49,680 --> 00:14:55,650
it's far scarier and then the last group

00:14:54,240 --> 00:14:57,060
that might be a specific threat

00:14:55,650 --> 00:15:00,050
especially right now is uh

00:14:57,060 --> 00:15:00,050
you guys

00:15:01,540 --> 00:15:06,230
everyone everyone here knows Python and

00:15:04,190 --> 00:15:10,220
Django you might have already cloned the

00:15:06,230 --> 00:15:13,300
github repository your board and and you

00:15:10,220 --> 00:15:13,300
know that the maintainer is busy

00:15:15,760 --> 00:15:25,400
thankfully I'm sure you're all wonderful

00:15:17,750 --> 00:15:26,720
right okay I need to know why they would

00:15:25,400 --> 00:15:29,870
what they be trying to get when they do

00:15:26,720 --> 00:15:33,620
it what does a tool like secreto have

00:15:29,870 --> 00:15:35,900
that an attacker would want most of what

00:15:33,620 --> 00:15:37,610
it stores in its database is publicly

00:15:35,900 --> 00:15:41,120
extractable from the Twitter API anyway

00:15:37,610 --> 00:15:43,040
it's like Twitter user profiles and who

00:15:41,120 --> 00:15:45,740
follows who and a couple of other bits

00:15:43,040 --> 00:15:49,730
and pieces there is some private stuff

00:15:45,740 --> 00:15:51,290
in there there's like the lists of who

00:15:49,730 --> 00:15:52,670
someone is blocking and the lists of who

00:15:51,290 --> 00:15:54,650
someone is muting that stuff is not

00:15:52,670 --> 00:15:58,480
publicly extractable from any api you

00:15:54,650 --> 00:15:58,480
can only do that as the specific user

00:15:59,560 --> 00:16:06,530
but most importantly what second tour

00:16:03,230 --> 00:16:08,720
has is OAuth credentials and this is

00:16:06,530 --> 00:16:12,020
terrifying because if an attacker can

00:16:08,720 --> 00:16:15,440
obtain a user's credentials a user's

00:16:12,020 --> 00:16:17,060
ooofff tokens along with the global

00:16:15,440 --> 00:16:18,110
credentials that you use to access the

00:16:17,060 --> 00:16:19,640
Twitter API then they can do anything

00:16:18,110 --> 00:16:23,720
that secretory can do with that account

00:16:19,640 --> 00:16:26,080
and Twitter does not have fine-grained

00:16:23,720 --> 00:16:28,880
control over application privileges

00:16:26,080 --> 00:16:31,390
there are three levels there's basically

00:16:28,880 --> 00:16:36,290
read-only almost everything and

00:16:31,390 --> 00:16:41,600
everything and secretory to block users

00:16:36,290 --> 00:16:42,140
requires the almost everything level can

00:16:41,600 --> 00:16:44,570
you read that

00:16:42,140 --> 00:16:46,700
so the almost everything level is read

00:16:44,570 --> 00:16:49,070
tweets see who you follow follow new

00:16:46,700 --> 00:16:51,380
people update your profile and post

00:16:49,070 --> 00:16:54,380
tweets for you and it doesn't say so

00:16:51,380 --> 00:16:56,420
here but it can also send DMS the read

00:16:54,380 --> 00:16:58,310
write mode can send EMS the only

00:16:56,420 --> 00:17:00,080
difference between the almost everything

00:16:58,310 --> 00:17:03,830
mode and the everything mode is the

00:17:00,080 --> 00:17:06,470
everything mode lets you read the DMS

00:17:03,830 --> 00:17:08,120
I haven't actually tried this yet I

00:17:06,470 --> 00:17:13,189
haven't actually tried these privileges

00:17:08,120 --> 00:17:15,079
to read my own DMS but um yes as you

00:17:13,189 --> 00:17:17,030
were kind of pointing at it seems

00:17:15,079 --> 00:17:19,420
contradictory like this this screen

00:17:17,030 --> 00:17:22,579
which is the app connect screen

00:17:19,420 --> 00:17:24,110
contradicts the API documentation so I

00:17:22,579 --> 00:17:25,220
haven't actually confirmed which one it

00:17:24,110 --> 00:17:27,020
is

00:17:25,220 --> 00:17:28,940
I should I'll do that and get back to

00:17:27,020 --> 00:17:31,460
you actually because yeah and so if this

00:17:28,940 --> 00:17:32,809
freaks you out now is the perfect time

00:17:31,460 --> 00:17:34,640
to go to your Twitter settings page and

00:17:32,809 --> 00:17:36,070
look at all the apps to what you've

00:17:34,640 --> 00:17:38,540
already granted all these privileges

00:17:36,070 --> 00:17:40,429
have you ever used Instagram to post a

00:17:38,540 --> 00:17:41,900
photo to Twitter then Instagram can send

00:17:40,429 --> 00:17:50,059
the ends as you if it wanted to to your

00:17:41,900 --> 00:17:52,490
friends you're welcome okay this is just

00:17:50,059 --> 00:17:54,830
a snippet of the code from from from the

00:17:52,490 --> 00:17:56,929
code base so if you were trying to get a

00:17:54,830 --> 00:17:59,059
hold of these credentials you need four

00:17:56,929 --> 00:18:00,710
things you need the global you need the

00:17:59,059 --> 00:18:02,540
global variables which are the consumer

00:18:00,710 --> 00:18:04,850
key and the consumer secret and then you

00:18:02,540 --> 00:18:08,210
also need an individual users o auth

00:18:04,850 --> 00:18:09,380
token and Oh F token secret and we're

00:18:08,210 --> 00:18:10,669
going to game out a little bit how you

00:18:09,380 --> 00:18:12,410
would go about trying to get a hold of

00:18:10,669 --> 00:18:13,850
these so we'll start with the global

00:18:12,410 --> 00:18:15,020
keys they're delivered to the

00:18:13,850 --> 00:18:17,690
application the way I'm the way I've

00:18:15,020 --> 00:18:19,070
configured it by environment variables

00:18:17,690 --> 00:18:22,160
by docker so it's sort of a twelve

00:18:19,070 --> 00:18:23,450
factor app style thing what would be the

00:18:22,160 --> 00:18:25,580
route that an attacker would take try

00:18:23,450 --> 00:18:28,010
and get these credentials hardest

00:18:25,580 --> 00:18:30,470
easiest the hardest one is probably just

00:18:28,010 --> 00:18:32,030
a is achieved remote code exact directly

00:18:30,470 --> 00:18:35,870
against the Django app right if you can

00:18:32,030 --> 00:18:38,450
if you can exploit the Python code and

00:18:35,870 --> 00:18:40,280
somehow execute Python code then you can

00:18:38,450 --> 00:18:41,809
just ask for the settings and you're

00:18:40,280 --> 00:18:47,090
done right like that's the worst case

00:18:41,809 --> 00:18:49,220
scenario I I imagine that's difficult

00:18:47,090 --> 00:18:52,010
kanna's can someone actually tell me if

00:18:49,220 --> 00:18:57,020
Django has ever had remote code exact

00:18:52,010 --> 00:18:57,590
vulnerabilities it has in the past yeah

00:18:57,020 --> 00:18:59,870
okay

00:18:57,590 --> 00:19:04,309
it's rare it's rare but yeah okay it's

00:18:59,870 --> 00:19:06,380
not unheard of it's unlikely they're the

00:19:04,309 --> 00:19:11,419
you'd be better off trying to compromise

00:19:06,380 --> 00:19:12,620
the hosts instance but actually the way

00:19:11,419 --> 00:19:13,970
I've configured with us even if you did

00:19:12,620 --> 00:19:16,669
you'd probably need to find a way to

00:19:13,970 --> 00:19:17,600
escalate your privileges to root or prop

00:19:16,669 --> 00:19:18,980
or may be

00:19:17,600 --> 00:19:21,169
- dr. escape before you could get of

00:19:18,980 --> 00:19:24,230
these variables and a dr. escape is also

00:19:21,169 --> 00:19:25,460
not unheard of but it's non-trivial I

00:19:24,230 --> 00:19:28,970
need to watch Sarah Young's talk

00:19:25,460 --> 00:19:30,350
actually I missed that or if you can

00:19:28,970 --> 00:19:31,640
access them as me and get hold of my H

00:19:30,350 --> 00:19:33,590
key then you can get a hold of them

00:19:31,640 --> 00:19:35,990
there's that's a bit that's sort of a

00:19:33,590 --> 00:19:38,000
weak link there and those are the sort

00:19:35,990 --> 00:19:39,320
of hard ways of getting about it but be

00:19:38,000 --> 00:19:42,919
a whole lot easier if I accidentally

00:19:39,320 --> 00:19:44,690
turned on debug mode this is just a

00:19:42,919 --> 00:19:47,600
reminder to everyone about good hygiene

00:19:44,690 --> 00:19:50,990
because even though Django's error pages

00:19:47,600 --> 00:19:53,179
in stacktrace pages do filter out

00:19:50,990 --> 00:19:56,390
settings with names like key or password

00:19:53,179 --> 00:19:58,250
or secret they sort of star those out

00:19:56,390 --> 00:20:00,140
and censor them but those variables are

00:19:58,250 --> 00:20:02,929
still show up in stack traces so you

00:20:00,140 --> 00:20:05,690
can't you can't rely on that just just

00:20:02,929 --> 00:20:08,679
don't don't allow debug mode to ever be

00:20:05,690 --> 00:20:10,909
turn Honorable on a production instance

00:20:08,679 --> 00:20:14,990
but actually the lowest hanging fruit is

00:20:10,909 --> 00:20:17,150
my own Twitter account because you have

00:20:14,990 --> 00:20:20,419
to tie API credentials to a Twitter

00:20:17,150 --> 00:20:22,039
account and if you can get ahold of them

00:20:20,419 --> 00:20:26,270
by stealing my browser cookies where's

00:20:22,039 --> 00:20:28,100
Alex by the way then you can just go

00:20:26,270 --> 00:20:31,370
straight to developer Twitter calm and

00:20:28,100 --> 00:20:33,140
just grab them right now hopefully that

00:20:31,370 --> 00:20:35,600
actually wouldn't be easy either because

00:20:33,140 --> 00:20:38,030
my Twitter password my password manager

00:20:35,600 --> 00:20:39,039
password they're non guessable both are

00:20:38,030 --> 00:20:41,750
using multi-factor authentication

00:20:39,039 --> 00:20:43,220
nevertheless from a little from gaming

00:20:41,750 --> 00:20:45,020
out a little exercise like this you can

00:20:43,220 --> 00:20:48,820
tell that the most important next

00:20:45,020 --> 00:20:50,990
security step for an app like this is to

00:20:48,820 --> 00:20:52,309
create a new Twitter account for the

00:20:50,990 --> 00:20:53,570
sole purpose of administering the app

00:20:52,309 --> 00:20:55,580
and make sure that the developer

00:20:53,570 --> 00:20:57,140
credentials are tied to that and keep it

00:20:55,580 --> 00:20:58,549
off my day to day Twitter account and

00:20:57,140 --> 00:21:00,530
keep it off my day to day devices it

00:20:58,549 --> 00:21:03,200
shouldn't be on here shouldn't be on my

00:21:00,530 --> 00:21:05,840
phone yeah you have to you'll have to

00:21:03,200 --> 00:21:08,539
keep those you have to keep that secret

00:21:05,840 --> 00:21:09,799
somewhere else and then the other half

00:21:08,539 --> 00:21:11,690
of the credentials you'd need are the

00:21:09,799 --> 00:21:13,370
user specific ooofff token and secret

00:21:11,690 --> 00:21:16,220
they're stored in a Django model and

00:21:13,370 --> 00:21:18,020
plaintext because they have to be

00:21:16,220 --> 00:21:20,390
readable back out in plain text so

00:21:18,020 --> 00:21:22,330
there's not you could paper over that

00:21:20,390 --> 00:21:27,950
with encryption in the database but then

00:21:22,330 --> 00:21:30,110
yeah the app that I'm using for the

00:21:27,950 --> 00:21:31,340
Twitter Federation stuff is Python

00:21:30,110 --> 00:21:34,940
social off which is fan

00:21:31,340 --> 00:21:38,749
tastic I highly recommend it by default

00:21:34,940 --> 00:21:40,159
irritatingly it doesn't obfuscate or

00:21:38,749 --> 00:21:41,210
treat those tokens as sensitive they're

00:21:40,159 --> 00:21:43,249
just kind of right there in the Django

00:21:41,210 --> 00:21:44,509
admin model so one of the things that I

00:21:43,249 --> 00:21:45,950
did to just sort of make that a little

00:21:44,509 --> 00:21:48,169
bit harder is monkey patch the admin

00:21:45,950 --> 00:21:51,919
section just to exclude that field so

00:21:48,169 --> 00:21:54,110
that at least without it being easily on

00:21:51,919 --> 00:21:55,940
display in the admin section you're back

00:21:54,110 --> 00:21:59,450
to having to compromise the app itself

00:21:55,940 --> 00:22:00,620
again right or or get Python code exec

00:21:59,450 --> 00:22:06,289
somehow so you're back to sort of the

00:22:00,620 --> 00:22:08,179
hard case Django admin access on a tool

00:22:06,289 --> 00:22:10,129
like this you could do some damage but

00:22:08,179 --> 00:22:11,389
at least now you're gonna have to do

00:22:10,129 --> 00:22:14,029
more work to get what you might really

00:22:11,389 --> 00:22:15,679
have been after so with all that said

00:22:14,029 --> 00:22:17,690
where does it leave a threat model like

00:22:15,679 --> 00:22:19,129
this and by the standards of by the

00:22:17,690 --> 00:22:20,629
sames of Web Apps I think I've done okay

00:22:19,129 --> 00:22:21,860
like I think it's I think it's not too

00:22:20,629 --> 00:22:23,269
bad

00:22:21,860 --> 00:22:26,840
I'm better at securing things than I am

00:22:23,269 --> 00:22:27,980
making you eyes for them but if someone

00:22:26,840 --> 00:22:29,720
needs a tool like this it's because

00:22:27,980 --> 00:22:32,149
they've already been harassed right and

00:22:29,720 --> 00:22:34,220
it would be unethical for me to tell

00:22:32,149 --> 00:22:36,740
anyone that they simply have to trust me

00:22:34,220 --> 00:22:38,029
in order to use it so the final crucial

00:22:36,740 --> 00:22:40,159
element for anything like this if you're

00:22:38,029 --> 00:22:41,360
actually gonna put put the users of a

00:22:40,159 --> 00:22:44,840
system like this ahead of your own

00:22:41,360 --> 00:22:47,090
interests is to open-source it that

00:22:44,840 --> 00:22:50,149
wasn't actually a given I I'm at an

00:22:47,090 --> 00:22:51,769
open-source conference but this was the

00:22:50,149 --> 00:22:52,850
decision I only made recently I was I

00:22:51,769 --> 00:22:55,220
was gonna I was gonna keep this to

00:22:52,850 --> 00:22:56,480
myself like share it with people but I

00:22:55,220 --> 00:23:00,019
actually thought I could monetize this a

00:22:56,480 --> 00:23:02,360
little bit I could at least get you know

00:23:00,019 --> 00:23:04,549
like coffee whatever it is the thing

00:23:02,360 --> 00:23:05,840
like $1 donation here or there it's kind

00:23:04,549 --> 00:23:10,070
of just pay for the server costs or

00:23:05,840 --> 00:23:12,919
something but there's no there's no

00:23:10,070 --> 00:23:14,419
moral argument for putting someone's

00:23:12,919 --> 00:23:16,789
protection behind a paywall and saying

00:23:14,419 --> 00:23:20,179
they have to trust you and and if

00:23:16,789 --> 00:23:21,499
they're gonna use it so if I'm really

00:23:20,179 --> 00:23:24,320
trying to be on the side of anyone who

00:23:21,499 --> 00:23:25,399
needs a tool like this I'm totally

00:23:24,320 --> 00:23:28,210
obliged to make sure that they're not

00:23:25,399 --> 00:23:31,039
forced to trust me in order to use it

00:23:28,210 --> 00:23:32,659
yeah because basically in the end if you

00:23:31,039 --> 00:23:33,769
think you have a skill you could use to

00:23:32,659 --> 00:23:36,950
protect someone you'd have a moral

00:23:33,769 --> 00:23:38,280
obligation to do it that's my talk thank

00:23:36,950 --> 00:23:47,700
you very much for listening

00:23:38,280 --> 00:23:47,700
[Applause]

00:23:48,350 --> 00:23:51,710

YouTube URL: https://www.youtube.com/watch?v=kqafZiBoz9I


