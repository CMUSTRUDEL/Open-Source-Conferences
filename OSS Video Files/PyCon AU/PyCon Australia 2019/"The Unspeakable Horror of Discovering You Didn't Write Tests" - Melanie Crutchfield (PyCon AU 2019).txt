Title: "The Unspeakable Horror of Discovering You Didn't Write Tests" - Melanie Crutchfield (PyCon AU 2019)
Publication date: 2019-08-03
Playlist: PyCon Australia 2019
Description: 
	Melanie Crutchfield

I didn't write tests. I'm here to help you avoid making the same mistake.

https://2019.pycon-au.org/talks/the-unspeakable-horror-of-discovering-you-didnt-write-tests

PyCon AU, the national Python Language conference, is on again this August in Sydney, at the International Convention Centre, Sydney, August 2 - 6 2019.

Video licence: CC BY-NC-SA 4.0 - https://creativecommons.org/licenses/by-nc-sa/4.0/

Python, PyCon, PyConAU

Fri Aug  2 16:40:00 2019 at C3.3
Captions: 
	00:00:01,460 --> 00:00:06,600
so Melanie Crutchfield is a creator

00:00:04,110 --> 00:00:08,580
tinkerer aspiring do-gooder a doer of

00:00:06,600 --> 00:00:09,809
piety things with Django and feelings he

00:00:08,580 --> 00:00:12,300
things with a cool server she made

00:00:09,809 --> 00:00:14,190
called Fiverr she didn't write tests

00:00:12,300 --> 00:00:15,780
she's here to help us avoid making the

00:00:14,190 --> 00:00:26,609
same mistake please make melody feel

00:00:15,780 --> 00:00:28,500
welcome hi little sleepy bears how's it

00:00:26,609 --> 00:00:31,289
going it's like the afternoon if any of

00:00:28,500 --> 00:00:35,219
you need to like draw eyes on your

00:00:31,289 --> 00:00:37,260
eyelids so that you can like small kind

00:00:35,219 --> 00:00:41,550
chill and sleep that's fine it's cool

00:00:37,260 --> 00:00:44,250
it's fine we'll do that I won't judge so

00:00:41,550 --> 00:00:46,350
that's my face there my name is Melanie

00:00:44,250 --> 00:00:48,390
Crutchfield as previously mentioned I'm

00:00:46,350 --> 00:00:51,390
hello Melanie see almost everywhere on

00:00:48,390 --> 00:00:56,219
the internet and I'm going to share a

00:00:51,390 --> 00:00:56,899
cautionary tale about testing and so it

00:00:56,219 --> 00:00:59,070
begins

00:00:56,899 --> 00:01:01,559
do you ever have those things where

00:00:59,070 --> 00:01:04,979
you're like I'm totally gonna learn that

00:01:01,559 --> 00:01:07,710
later like but you also know that later

00:01:04,979 --> 00:01:10,740
is like a mystery time that's actually

00:01:07,710 --> 00:01:14,340
never gonna come like hands on that like

00:01:10,740 --> 00:01:17,040
three four good some Liars back there

00:01:14,340 --> 00:01:21,479
but that's fine it's fine we're just

00:01:17,040 --> 00:01:25,590
getting to know each other yeah so I am

00:01:21,479 --> 00:01:28,049
a community taught developer in that all

00:01:25,590 --> 00:01:30,600
of my learning was completely informed

00:01:28,049 --> 00:01:34,619
and guided by the San Diego Python user

00:01:30,600 --> 00:01:36,150
group and San Diego PI ladies this was a

00:01:34,619 --> 00:01:39,780
really wonderful and beautiful process

00:01:36,150 --> 00:01:43,320
for me mostly because it was accessible

00:01:39,780 --> 00:01:45,570
to me as a stay-at-home parent to two

00:01:43,320 --> 00:01:47,579
small kids I couldn't like haul off to a

00:01:45,570 --> 00:01:50,520
boot camp and I didn't have the

00:01:47,579 --> 00:01:52,259
financial or time resources to go back

00:01:50,520 --> 00:01:56,119
to a traditional like traditional

00:01:52,259 --> 00:01:59,159
education and so like the massive

00:01:56,119 --> 00:02:01,049
benefit of being community taught is

00:01:59,159 --> 00:02:04,740
that it made a career in tech possible

00:02:01,049 --> 00:02:07,160
like at all for me the downside though

00:02:04,740 --> 00:02:09,690
is that there's no one there to like

00:02:07,160 --> 00:02:11,980
make you do all the stuff that you don't

00:02:09,690 --> 00:02:16,900
want to do but like

00:02:11,980 --> 00:02:18,459
you should do right people are only so

00:02:16,900 --> 00:02:21,870
mean not to meet up and then it's like

00:02:18,459 --> 00:02:24,220
awkward and like a CSE violation so

00:02:21,870 --> 00:02:28,080
there's no one there to like make you

00:02:24,220 --> 00:02:31,900
take your developer vitamins so to speak

00:02:28,080 --> 00:02:34,180
so when I started learning Python Django

00:02:31,900 --> 00:02:38,349
was the thing that people told me to

00:02:34,180 --> 00:02:39,660
learn and I was like I will totally do

00:02:38,349 --> 00:02:43,150
that later

00:02:39,660 --> 00:02:45,580
and then like there was this app

00:02:43,150 --> 00:02:47,380
happiness app challenge and that app

00:02:45,580 --> 00:02:50,860
challenge was like you can make a web

00:02:47,380 --> 00:02:52,480
app or you know mobile like desktop like

00:02:50,860 --> 00:02:55,239
whatever it was it just had to help

00:02:52,480 --> 00:02:59,530
boost happiness and it just so happened

00:02:55,239 --> 00:03:02,140
that I had like a half-finished Python

00:02:59,530 --> 00:03:06,940
thing that did just that and so that was

00:03:02,140 --> 00:03:10,120
like my magical time and so the time

00:03:06,940 --> 00:03:13,180
came I made the thing it's called five

00:03:10,120 --> 00:03:16,569
up it's very fun it sends happy texts

00:03:13,180 --> 00:03:20,170
every day unless you don't live in the

00:03:16,569 --> 00:03:23,709
US or you have a weird care here I am so

00:03:20,170 --> 00:03:29,560
sorry International stuff is hard and

00:03:23,709 --> 00:03:32,109
I'm gonna learn it later the point here

00:03:29,560 --> 00:03:34,650
though is that I took my developer

00:03:32,109 --> 00:03:36,760
vitamins and I learned Django which is

00:03:34,650 --> 00:03:41,079
fortunate because that's how I make my

00:03:36,760 --> 00:03:45,870
living now after that my sweet sweet

00:03:41,079 --> 00:03:49,180
community full of dinosaurs obviously

00:03:45,870 --> 00:03:51,910
told me I should learn testing and I

00:03:49,180 --> 00:03:54,220
didn't quite know what that entailed I

00:03:51,910 --> 00:03:57,400
did know however that it sounded scary

00:03:54,220 --> 00:04:02,079
and awful and so I was like I'm doing

00:03:57,400 --> 00:04:05,709
that later and they believed me because

00:04:02,079 --> 00:04:08,620
they're suckers anyway so I kind of like

00:04:05,709 --> 00:04:10,959
limped along like absorbing little bits

00:04:08,620 --> 00:04:14,109
and pieces of testing slash running away

00:04:10,959 --> 00:04:18,039
from testing until I got a fancy job

00:04:14,109 --> 00:04:20,320
that required testing and not like

00:04:18,039 --> 00:04:21,220
Sabrina the engineering manager is gonna

00:04:20,320 --> 00:04:23,500
be many

00:04:21,220 --> 00:04:26,320
a little bit if you don't test your code

00:04:23,500 --> 00:04:28,150
but more like your deploy will fail and

00:04:26,320 --> 00:04:30,940
barf on your face if you don't have

00:04:28,150 --> 00:04:38,490
enough testing coverage that happens to

00:04:30,940 --> 00:04:43,660
everyone so it's time to open up and

00:04:38,490 --> 00:04:45,580
take some vitamin T I'm so sorry like I

00:04:43,660 --> 00:04:48,670
know it was a bad joke and I knew it

00:04:45,580 --> 00:04:51,280
when I wrote it like I wrote it I was

00:04:48,670 --> 00:04:53,650
like this is awful and then like a

00:04:51,280 --> 00:04:56,080
little like devil you know was like do

00:04:53,650 --> 00:04:59,370
it anyway and I was like okay and then

00:04:56,080 --> 00:05:05,530
that's how we're here now together

00:04:59,370 --> 00:05:09,190
anyway so I took my medicine and then

00:05:05,530 --> 00:05:12,580
something weird happened I got addicted

00:05:09,190 --> 00:05:15,960
and now the only thing that really makes

00:05:12,580 --> 00:05:19,450
sense to me as a developer is thoroughly

00:05:15,960 --> 00:05:21,160
testing my code it's kind of like when

00:05:19,450 --> 00:05:23,470
you start eating kale because Michelle

00:05:21,160 --> 00:05:25,600
Obama is like kale super good for you

00:05:23,470 --> 00:05:27,310
everyone and then you're like okay cuz

00:05:25,600 --> 00:05:30,880
you just really want her to be like kind

00:05:27,310 --> 00:05:33,460
of happy with you and proud and maybe

00:05:30,880 --> 00:05:36,790
have her like elegant powerful biceps

00:05:33,460 --> 00:05:38,560
and stuff but then one day you go into a

00:05:36,790 --> 00:05:41,350
restaurant and you order a kale salad

00:05:38,560 --> 00:05:44,470
because it sounds good and then you're

00:05:41,350 --> 00:05:49,630
like oh Michelle Obama you beautiful

00:05:44,470 --> 00:05:53,050
dynamic trickster and that was me

00:05:49,630 --> 00:05:55,000
Oh Riley was that's my employer was

00:05:53,050 --> 00:05:56,980
Michelle Obama don't have had that

00:05:55,000 --> 00:06:00,520
except pretty sure it's fine it's gonna

00:05:56,980 --> 00:06:03,220
be on the internet anyway so that's

00:06:00,520 --> 00:06:08,380
happening and then testing was kale

00:06:03,220 --> 00:06:11,950
herbs and then I was me because that

00:06:08,380 --> 00:06:14,770
makes the most sense here and then all

00:06:11,950 --> 00:06:20,160
the sudden like I had a jonesing for

00:06:14,770 --> 00:06:23,740
kale is bonkers Vil where we are now so

00:06:20,160 --> 00:06:25,720
anyway at one point I realized that I

00:06:23,740 --> 00:06:28,510
hadn't really touched like the five up

00:06:25,720 --> 00:06:31,090
code in a while and it was getting a

00:06:28,510 --> 00:06:32,860
little dusty and things were about to

00:06:31,090 --> 00:06:34,689
sunset and so I thought

00:06:32,860 --> 00:06:37,419
I should probably go spruce up the old

00:06:34,689 --> 00:06:40,060
repo no big deal I'll just probably

00:06:37,419 --> 00:06:41,680
upgrade to Python 3 that seems important

00:06:40,060 --> 00:06:43,840
and then I'll like run the test suite

00:06:41,680 --> 00:06:46,180
and then I'll find out what breaks and

00:06:43,840 --> 00:06:51,389
then I'll oh god what have I done

00:06:46,180 --> 00:06:58,259
because there was not a single test like

00:06:51,389 --> 00:07:03,719
not one like not even a tiny little

00:06:58,259 --> 00:07:06,939
testing kale leaf there was nothing and

00:07:03,719 --> 00:07:09,310
this was not going to work for me

00:07:06,939 --> 00:07:12,460
because I have now the testing spoiled

00:07:09,310 --> 00:07:14,349
monster you see before you and I can't I

00:07:12,460 --> 00:07:16,449
can't like I don't know how to do it I

00:07:14,349 --> 00:07:20,020
don't know how to function without at

00:07:16,449 --> 00:07:22,240
least decent ish code coverage so now

00:07:20,020 --> 00:07:25,180
that we have Melanie the testing heroes

00:07:22,240 --> 00:07:28,180
origin story out of the way let's do

00:07:25,180 --> 00:07:31,840
this okay so the first thing we're gonna

00:07:28,180 --> 00:07:33,520
do is bring in somebody's because lord

00:07:31,840 --> 00:07:34,210
knows I shouldn't be left to anything on

00:07:33,520 --> 00:07:38,050
my own

00:07:34,210 --> 00:07:39,430
really who knows why I'm up here now we

00:07:38,050 --> 00:07:41,289
should all be a little concerned

00:07:39,430 --> 00:07:44,979
actually someone gave me a mic and

00:07:41,289 --> 00:07:47,500
everything anyway so the major things

00:07:44,979 --> 00:07:53,620
were gonna do are we're gonna install PI

00:07:47,500 --> 00:07:57,039
test PI test Jango selenium and PI test

00:07:53,620 --> 00:08:02,560
Cove and then we're just gonna install

00:07:57,039 --> 00:08:05,080
all those little critters PI test that

00:08:02,560 --> 00:08:07,750
first one there it's just a little bit

00:08:05,080 --> 00:08:12,400
of a sweeter way of working with tests

00:08:07,750 --> 00:08:15,009
as opposed to the pythons built-in test

00:08:12,400 --> 00:08:16,210
framework unit test I'm just gonna leave

00:08:15,009 --> 00:08:17,800
it there but you can google it and see

00:08:16,210 --> 00:08:21,099
all the fun stuff to do with pi test if

00:08:17,800 --> 00:08:22,139
you like Titus Jango make spy tests play

00:08:21,099 --> 00:08:26,620
nice with Jango

00:08:22,139 --> 00:08:29,379
selenium is going to allow our tests to

00:08:26,620 --> 00:08:31,569
kind of pretend to be a user and poke

00:08:29,379 --> 00:08:34,360
around in a live web browser which is

00:08:31,569 --> 00:08:38,169
pretty neat and then lastly my favorite

00:08:34,360 --> 00:08:40,570
magic there PI test curve which is going

00:08:38,169 --> 00:08:43,930
to show us which code we've tested in

00:08:40,570 --> 00:08:45,490
which we haven't so let's talk about

00:08:43,930 --> 00:08:49,300
that last one

00:08:45,490 --> 00:08:52,480
test curve before we move on so high

00:08:49,300 --> 00:08:55,030
test curve is a plugin that implements

00:08:52,480 --> 00:08:59,110
coverage top high in a way that works

00:08:55,030 --> 00:09:02,230
nicely with PI test coverage pi is a

00:08:59,110 --> 00:09:05,680
tool for measuring how much of your code

00:09:02,230 --> 00:09:08,080
is run when your tests are running so

00:09:05,680 --> 00:09:10,180
that's what I mean when I say code

00:09:08,080 --> 00:09:13,320
coverage for any of you that have been

00:09:10,180 --> 00:09:16,750
like stop just saying words at us lady

00:09:13,320 --> 00:09:20,290
yeah so but you need to be where with

00:09:16,750 --> 00:09:21,820
coverage that it's not foolproof because

00:09:20,290 --> 00:09:24,250
all it's telling you is if your code is

00:09:21,820 --> 00:09:26,620
being executed it's not telling you if

00:09:24,250 --> 00:09:31,120
your code is being executed in like any

00:09:26,620 --> 00:09:33,190
sort of logical way at all so you can

00:09:31,120 --> 00:09:36,460
think of it as a guide like a ruler

00:09:33,190 --> 00:09:39,510
which Messer measures things right but

00:09:36,460 --> 00:09:42,010
not a guide as in like wilderness guide

00:09:39,510 --> 00:09:44,590
she tells you that you're gonna walk

00:09:42,010 --> 00:09:46,990
into a bears mouth which is important to

00:09:44,590 --> 00:09:50,100
know I don't know why you didn't notice

00:09:46,990 --> 00:09:53,740
that the Bears mouth is there but anyway

00:09:50,100 --> 00:09:56,680
so the measurement though is pretty cool

00:09:53,740 --> 00:09:59,170
so before we start writing any of our

00:09:56,680 --> 00:10:01,030
tests right because we have nothing we

00:09:59,170 --> 00:10:02,860
have note testing kale so we're but

00:10:01,030 --> 00:10:07,090
before we just like jump in we're gonna

00:10:02,860 --> 00:10:08,890
get an idea of what we need to do by

00:10:07,090 --> 00:10:13,600
running through here so this command

00:10:08,890 --> 00:10:16,780
here it's going to run high test it's

00:10:13,600 --> 00:10:19,810
going to ask for a coverage report to be

00:10:16,780 --> 00:10:22,870
printed to the terminal it asks the

00:10:19,810 --> 00:10:25,270
report to ignore any files that are 100%

00:10:22,870 --> 00:10:28,350
covered already which at this point is

00:10:25,270 --> 00:10:32,710
going to be just mostly empty files and

00:10:28,350 --> 00:10:36,880
then it's also going to print out the

00:10:32,710 --> 00:10:37,960
exact lines that aren't covered so it's

00:10:36,880 --> 00:10:41,650
going to give us some really really

00:10:37,960 --> 00:10:44,260
useful information so if we run it it

00:10:41,650 --> 00:10:46,240
gives us something like this you can see

00:10:44,260 --> 00:10:48,760
that the test coverage is pretty abysmal

00:10:46,240 --> 00:10:51,010
at this point and again whatever

00:10:48,760 --> 00:10:54,610
coverage is there is probably due to

00:10:51,010 --> 00:10:57,890
empty files which are tested for you can

00:10:54,610 --> 00:11:00,620
you believe and you get that for free

00:10:57,890 --> 00:11:04,040
so since the code coverage is only at

00:11:00,620 --> 00:11:06,350
28% that means that roughly 72% of our

00:11:04,040 --> 00:11:08,180
code could be all super weird and buggy

00:11:06,350 --> 00:11:09,860
and we wouldn't know until someone in

00:11:08,180 --> 00:11:13,120
the wild found out about it which is

00:11:09,860 --> 00:11:14,660
what everyone enjoys to find out

00:11:13,120 --> 00:11:20,660
eventually

00:11:14,660 --> 00:11:24,589
I guess anyway so testing can help you

00:11:20,660 --> 00:11:26,570
avoid bugs like but not all of them but

00:11:24,589 --> 00:11:30,050
it is it's a good way to kind of protect

00:11:26,570 --> 00:11:32,839
yourself a wee bit so now that we have

00:11:30,050 --> 00:11:34,940
the tools and we see how much work we

00:11:32,839 --> 00:11:38,110
have ahead of us let's write our first

00:11:34,940 --> 00:11:41,029
test it's going to be a functional test

00:11:38,110 --> 00:11:43,070
so when people talk about testing a lot

00:11:41,029 --> 00:11:45,680
of times they'll toss around two

00:11:43,070 --> 00:11:48,709
different phrases functional testing and

00:11:45,680 --> 00:11:51,050
unit testing we'll get to the unit test

00:11:48,709 --> 00:11:53,750
later but the first thing I want to say

00:11:51,050 --> 00:11:57,170
about functional tests is that they have

00:11:53,750 --> 00:12:00,800
nothing to do with functions as in like

00:11:57,170 --> 00:12:02,300
def fancy thing since functions are so

00:12:00,800 --> 00:12:03,380
prominent in Python it would make sense

00:12:02,300 --> 00:12:05,959
that you would tie the two together

00:12:03,380 --> 00:12:07,190
right that we're doing functional tests

00:12:05,959 --> 00:12:08,630
and that means that we're testing our

00:12:07,190 --> 00:12:11,870
functions that's not it

00:12:08,630 --> 00:12:14,510
yay and nothing makes any sense so

00:12:11,870 --> 00:12:17,170
that's fun so what functional tests are

00:12:14,510 --> 00:12:21,260
about are kind of asking the question

00:12:17,170 --> 00:12:24,680
does this code function at all does it

00:12:21,260 --> 00:12:26,720
do at all what I meant for it to do so

00:12:24,680 --> 00:12:30,560
since we're talking about Django here a

00:12:26,720 --> 00:12:33,529
good example would be if I go to this

00:12:30,560 --> 00:12:36,199
page I visit the page does it do

00:12:33,529 --> 00:12:38,930
anything does it behave at all the way I

00:12:36,199 --> 00:12:41,480
wanted to so it's basically the same as

00:12:38,930 --> 00:12:44,510
like spinning up your project using like

00:12:41,480 --> 00:12:46,160
Python managed up high run server that

00:12:44,510 --> 00:12:48,800
sort of thing and then just kind of

00:12:46,160 --> 00:12:50,720
clicking around and making sure that

00:12:48,800 --> 00:12:54,829
what you think is supposed to happen is

00:12:50,720 --> 00:12:57,890
actually happening without testing that

00:12:54,829 --> 00:13:00,050
manual process is the only way to kind

00:12:57,890 --> 00:13:02,930
of get your bearings and see if

00:13:00,050 --> 00:13:06,800
anything's working right before testing

00:13:02,930 --> 00:13:08,630
that was all I had that was all I did

00:13:06,800 --> 00:13:11,510
but it also means that you better hope

00:13:08,630 --> 00:13:13,460
that you a click all the things

00:13:11,510 --> 00:13:16,550
B click all the things in all the ways

00:13:13,460 --> 00:13:18,560
that they can be clicked right and hope

00:13:16,550 --> 00:13:20,660
that nothing ever ever goes wrong which

00:13:18,560 --> 00:13:25,310
is pretty much how the world works as we

00:13:20,660 --> 00:13:27,430
can tell by US elections anyway don't

00:13:25,310 --> 00:13:35,710
laugh at that we're doing our best

00:13:27,430 --> 00:13:35,710
anyway so it's so sorry everyone at home

00:13:37,000 --> 00:13:42,440
we're gonna do that poking around that

00:13:40,400 --> 00:13:44,000
wasn't in my notes this is what happens

00:13:42,440 --> 00:13:46,100
when you go off script is that you're

00:13:44,000 --> 00:13:47,870
like distracted by how weird you are and

00:13:46,100 --> 00:13:51,830
like but you're the weird thing that's

00:13:47,870 --> 00:13:54,320
distracting anyway so we're gonna do the

00:13:51,830 --> 00:13:57,230
poking around right but we're gonna

00:13:54,320 --> 00:13:59,030
automate it because we're lazy smart

00:13:57,230 --> 00:14:03,410
which is a new thing that I made up that

00:13:59,030 --> 00:14:04,400
you're welcome to put on your resume so

00:14:03,410 --> 00:14:07,640
we're gonna start with a super basic

00:14:04,400 --> 00:14:10,360
test we're gonna ask if we can visit

00:14:07,640 --> 00:14:13,250
this homepage and find some stuff there

00:14:10,360 --> 00:14:15,200
if we take a look at the source code we

00:14:13,250 --> 00:14:16,880
can see there's a few things there that

00:14:15,200 --> 00:14:19,310
like probably should be there right

00:14:16,880 --> 00:14:21,500
there's a title up there there's some

00:14:19,310 --> 00:14:24,020
text right and if the page is

00:14:21,500 --> 00:14:27,470
functioning properly that stuff should

00:14:24,020 --> 00:14:29,990
be there earlier when we installed

00:14:27,470 --> 00:14:32,690
selenium that was the tool that's going

00:14:29,990 --> 00:14:35,720
to allow us to automate this poking

00:14:32,690 --> 00:14:38,540
around situation now I do want to

00:14:35,720 --> 00:14:41,030
mention that selenium requires a little

00:14:38,540 --> 00:14:42,950
bit of setup with a thing called gecko

00:14:41,030 --> 00:14:45,050
driver and that setup can be a little

00:14:42,950 --> 00:14:46,610
bit wobbly and I don't have notes on

00:14:45,050 --> 00:14:49,640
that in this talk so you'll have to do

00:14:46,610 --> 00:14:52,850
that on your own but once you get it set

00:14:49,640 --> 00:14:56,660
up because you are brave and smart you

00:14:52,850 --> 00:14:59,450
will write tests like this so when you

00:14:56,660 --> 00:15:01,640
write tests with selenium it does all of

00:14:59,450 --> 00:15:04,070
that manual stuff for you like we were

00:15:01,640 --> 00:15:06,470
talking about so it's going to visit the

00:15:04,070 --> 00:15:08,060
page it's gonna poke around for a little

00:15:06,470 --> 00:15:10,310
bit and it's going to try to find those

00:15:08,060 --> 00:15:11,480
elements now in real life you're

00:15:10,310 --> 00:15:14,690
probably going to be doing some more

00:15:11,480 --> 00:15:16,970
complicated tests than just this but

00:15:14,690 --> 00:15:23,300
this is like a good example to kind of

00:15:16,970 --> 00:15:25,760
help us get our feet wet so when we send

00:15:23,300 --> 00:15:28,070
selenium off hunting

00:15:25,760 --> 00:15:31,400
we get to just say because of pi test we

00:15:28,070 --> 00:15:33,230
can say assert when we want to test and

00:15:31,400 --> 00:15:36,800
see if something's like true or false

00:15:33,230 --> 00:15:39,680
so we can assert there that 5up is in

00:15:36,800 --> 00:15:43,340
the browser title then we'll assign all

00:15:39,680 --> 00:15:46,370
of the body text of the page to a

00:15:43,340 --> 00:15:49,100
variable text there and then we can

00:15:46,370 --> 00:15:51,800
check to see if how it works is in the

00:15:49,100 --> 00:15:54,410
test text and then we'll see if we can

00:15:51,800 --> 00:16:01,820
find an element by the link text say

00:15:54,410 --> 00:16:04,490
borp reps are just failed why it's

00:16:01,820 --> 00:16:07,310
because I don't have a link with the

00:16:04,490 --> 00:16:09,380
text say borp on my website and I'm

00:16:07,310 --> 00:16:11,060
honestly like a little bit disappointed

00:16:09,380 --> 00:16:12,530
that none of you is like say board why

00:16:11,060 --> 00:16:14,300
would that be there that you're all just

00:16:12,530 --> 00:16:20,210
like at this point save warp is totally

00:16:14,300 --> 00:16:23,230
on that lady's website it's fine if we

00:16:20,210 --> 00:16:27,130
take out that obviously ridiculous thing

00:16:23,230 --> 00:16:36,950
then the test pass which PI test

00:16:27,130 --> 00:16:39,200
expresses gleefully with a period so to

00:16:36,950 --> 00:16:41,390
review we said that the title should

00:16:39,200 --> 00:16:44,330
have five up in it the page should say

00:16:41,390 --> 00:16:47,810
how it works on it and if selenium finds

00:16:44,330 --> 00:16:48,950
those things then the test passes and we

00:16:47,810 --> 00:16:52,250
know that the page rendered properly

00:16:48,950 --> 00:16:54,890
which is wonderful so when we get that

00:16:52,250 --> 00:16:56,900
test to pass you can also see that the

00:16:54,890 --> 00:16:59,480
test coverage went up quite a bit which

00:16:56,900 --> 00:17:01,520
is great so now we know we're like kind

00:16:59,480 --> 00:17:05,180
of on the right track as much as we can

00:17:01,520 --> 00:17:07,880
be given the situation so now these

00:17:05,180 --> 00:17:11,450
little bits here where we're importing

00:17:07,880 --> 00:17:13,070
stuff and then we're also doing the the

00:17:11,450 --> 00:17:15,770
webdriver setup that's going to get

00:17:13,070 --> 00:17:18,260
obnoxious after a while right if we have

00:17:15,770 --> 00:17:21,560
to do that with every single test so we

00:17:18,260 --> 00:17:23,000
can write a quick helper instead don't

00:17:21,560 --> 00:17:24,230
worry about remembering all of this

00:17:23,000 --> 00:17:27,380
stuff I'm going to make the slides

00:17:24,230 --> 00:17:30,170
available but the important part here is

00:17:27,380 --> 00:17:32,660
that this bit is going to help us kind

00:17:30,170 --> 00:17:36,860
of rapidly move through tests any tests

00:17:32,660 --> 00:17:38,850
that we write after this so we're gonna

00:17:36,860 --> 00:17:40,919
pull in these imports here

00:17:38,850 --> 00:17:43,380
pulled in stuff from context live and

00:17:40,919 --> 00:17:45,780
from Django and from selenium and then

00:17:43,380 --> 00:17:49,730
we're going to write a class for

00:17:45,780 --> 00:17:52,650
selenium testing so we have a setup here

00:17:49,730 --> 00:17:55,320
at the beginning that opens a Firefox

00:17:52,650 --> 00:17:57,390
web browser for the all the tests to be

00:17:55,320 --> 00:17:59,280
executed in and then we have a teardown

00:17:57,390 --> 00:18:01,500
method that's going to get rid of that

00:17:59,280 --> 00:18:04,250
browser when we're done just nice and

00:18:01,500 --> 00:18:07,620
then the last bit is the context manager

00:18:04,250 --> 00:18:10,140
which true story is copy pasted from a

00:18:07,620 --> 00:18:12,809
fancy fellow named Harry Percival so

00:18:10,140 --> 00:18:15,150
I'll have more about him and the

00:18:12,809 --> 00:18:16,830
resources at the end of the talk you can

00:18:15,150 --> 00:18:18,059
look at that up but the point here is

00:18:16,830 --> 00:18:20,280
that we're doing a little bit of setup

00:18:18,059 --> 00:18:24,270
so that we can kind of power through

00:18:20,280 --> 00:18:26,150
tests after that okay now I do want to

00:18:24,270 --> 00:18:29,309
mention one thing before we move on

00:18:26,150 --> 00:18:30,990
there's a practice called test-driven

00:18:29,309 --> 00:18:33,990
development yes

00:18:30,990 --> 00:18:37,380
TDD that is really cool right and the

00:18:33,990 --> 00:18:39,270
idea is that you write your tests first

00:18:37,380 --> 00:18:41,640
you write your tests that describe how

00:18:39,270 --> 00:18:44,220
your code is supposed to behave and then

00:18:41,640 --> 00:18:46,470
you write the code to make that stuff

00:18:44,220 --> 00:18:49,730
happen if the tests pass then you know

00:18:46,470 --> 00:18:54,120
that you've run the code properly right

00:18:49,730 --> 00:18:57,690
that is not what we're doing here

00:18:54,120 --> 00:19:00,390
we're coming back in and fixing like

00:18:57,690 --> 00:19:03,090
this big ol pile of mess that I made and

00:19:00,390 --> 00:19:05,190
truthfully I'm still not great at TDD

00:19:03,090 --> 00:19:08,090
even when I have the opportunity to do

00:19:05,190 --> 00:19:10,409
it like learning anything in life

00:19:08,090 --> 00:19:12,539
learning testing is a great opportunity

00:19:10,409 --> 00:19:15,659
to practice generosity and kindness

00:19:12,539 --> 00:19:20,940
toward ourselves so you know put that in

00:19:15,659 --> 00:19:23,280
your back pocket alrighty so this sweet

00:19:20,940 --> 00:19:25,620
little test here is going to see if we

00:19:23,280 --> 00:19:28,320
can login which is super important and

00:19:25,620 --> 00:19:31,559
the nice thing about it is it's going to

00:19:28,320 --> 00:19:35,669
hit the HTML page right but it's also

00:19:31,559 --> 00:19:37,350
going to interact with a form and it's

00:19:35,669 --> 00:19:39,360
also going to make sure that the user

00:19:37,350 --> 00:19:40,980
model didn't somehow get like messed up

00:19:39,360 --> 00:19:43,140
at some point in time like it goes

00:19:40,980 --> 00:19:46,890
through and does quite a few things in

00:19:43,140 --> 00:19:48,510
just the one test and that kind of

00:19:46,890 --> 00:19:50,850
illustrates the power of the test of

00:19:48,510 --> 00:19:52,590
testing because if I change my CSS I

00:19:50,850 --> 00:19:54,990
should still be able to so

00:19:52,590 --> 00:19:56,400
at the forum right if I upgrade to

00:19:54,990 --> 00:19:59,460
Python 3 like we were talking about

00:19:56,400 --> 00:20:02,010
earlier my user model should still be

00:19:59,460 --> 00:20:04,710
functioning like none of the stuff

00:20:02,010 --> 00:20:08,070
should break even when I make changes so

00:20:04,710 --> 00:20:12,270
if we step through the code I'm going to

00:20:08,070 --> 00:20:14,210
make a user here and then we're gonna go

00:20:12,270 --> 00:20:17,880
to the browser that we set up in that

00:20:14,210 --> 00:20:22,049
helper class we're gonna find the

00:20:17,880 --> 00:20:24,750
username element on the page like in the

00:20:22,049 --> 00:20:27,090
form like I think this is so magical you

00:20:24,750 --> 00:20:29,190
find a user name you can enter in the

00:20:27,090 --> 00:20:31,679
user email in the user that we just

00:20:29,190 --> 00:20:33,510
created then you find the password

00:20:31,679 --> 00:20:36,740
element and you enter in the password

00:20:33,510 --> 00:20:41,220
from the user we just created and then

00:20:36,740 --> 00:20:43,860
you find the submit button and you click

00:20:41,220 --> 00:20:45,870
it because the world is full of magic

00:20:43,860 --> 00:20:47,669
like I don't know why that's so

00:20:45,870 --> 00:20:49,950
impressive to me so like you know

00:20:47,669 --> 00:20:51,390
whoever wrote selenium you can feel

00:20:49,950 --> 00:20:53,370
proud about yourself tell your mom I'm

00:20:51,390 --> 00:20:56,279
super impressed anyway

00:20:53,370 --> 00:20:58,679
you click Submit and then if it's

00:20:56,279 --> 00:21:01,230
successful then it'll be able to find on

00:20:58,679 --> 00:21:03,630
the page PI and the user name and it

00:21:01,230 --> 00:21:13,429
does now that we've done all of that

00:21:03,630 --> 00:21:16,770
work we have two dots there twin yep so

00:21:13,429 --> 00:21:20,789
this is why it's so disturbing to me to

00:21:16,770 --> 00:21:22,529
not have tests without tests I just have

00:21:20,789 --> 00:21:26,220
to hope that whatever change I made

00:21:22,529 --> 00:21:29,370
didn't break anything and as your

00:21:26,220 --> 00:21:32,100
project grows and grows at some point if

00:21:29,370 --> 00:21:34,049
you don't have tests you're relying on

00:21:32,100 --> 00:21:36,659
yourself to be like some sort of like

00:21:34,049 --> 00:21:40,710
omniscient like super developer that

00:21:36,659 --> 00:21:44,250
knows all and sees all that is not me I

00:21:40,710 --> 00:21:46,169
know you're surprised and maybe that's

00:21:44,250 --> 00:21:50,179
you and that's great and I don't want to

00:21:46,169 --> 00:21:53,159
know you know cuz whatever but anyway

00:21:50,179 --> 00:21:55,980
tests exactly that's what we were

00:21:53,159 --> 00:21:59,159
talking about so now when we run our

00:21:55,980 --> 00:22:01,110
command with all the goodies for our

00:21:59,159 --> 00:22:03,149
testing we can see that we've bumped our

00:22:01,110 --> 00:22:06,390
coverage up even farther which is

00:22:03,149 --> 00:22:09,030
wonderful and now we'll keep doing

00:22:06,390 --> 00:22:11,580
right go see what else needs to be

00:22:09,030 --> 00:22:13,530
covered and the coverage tool is great

00:22:11,580 --> 00:22:15,270
because it helps you not have to dream

00:22:13,530 --> 00:22:19,770
up all of the different ways that you

00:22:15,270 --> 00:22:21,660
need to hit your code and it also all

00:22:19,770 --> 00:22:23,640
the way on the right side of the screen

00:22:21,660 --> 00:22:25,410
you can see it's printing out the lines

00:22:23,640 --> 00:22:27,510
like the exact lines that don't have

00:22:25,410 --> 00:22:31,740
coverage so that'll help you kind of go

00:22:27,510 --> 00:22:34,200
hunting through your code so we'll

00:22:31,740 --> 00:22:36,020
continue in this matter until we've got

00:22:34,200 --> 00:22:38,400
all of our templates and like

00:22:36,020 --> 00:22:40,680
conditionals that need to be covered and

00:22:38,400 --> 00:22:45,240
we're pretty darn confident that we have

00:22:40,680 --> 00:22:48,720
some functioning code and then we say

00:22:45,240 --> 00:22:53,700
hurry and now we move on okay so unit

00:22:48,720 --> 00:22:57,180
tests like functional tests the term

00:22:53,700 --> 00:23:00,450
unit test causes me some confusion like

00:22:57,180 --> 00:23:02,790
the word nonplussed right like this word

00:23:00,450 --> 00:23:04,140
should mean like super not excited about

00:23:02,790 --> 00:23:05,910
whatever you're talking about because

00:23:04,140 --> 00:23:08,360
like obviously being plussed is like

00:23:05,910 --> 00:23:12,150
like plus one and slack or something

00:23:08,360 --> 00:23:15,870
that's not what it means it means

00:23:12,150 --> 00:23:22,110
perplexed which in and of itself makes

00:23:15,870 --> 00:23:24,240
me feel nonplussed anyway so the term

00:23:22,110 --> 00:23:27,630
unit test made me feel like there was

00:23:24,240 --> 00:23:30,720
some sort of like definition of what

00:23:27,630 --> 00:23:33,630
like a unit of code was like maybe it

00:23:30,720 --> 00:23:38,070
was an entire Chango app or maybe it was

00:23:33,630 --> 00:23:40,620
like py file I don't know but that's not

00:23:38,070 --> 00:23:43,020
what it means and I am again feeling

00:23:40,620 --> 00:23:47,700
nonplussed which is apparently my state

00:23:43,020 --> 00:23:50,010
of being what it means is like chunk

00:23:47,700 --> 00:23:55,440
testing like I don't know like like

00:23:50,010 --> 00:23:59,480
smidgen testing or like niblet testing

00:23:55,440 --> 00:24:03,710
like just a bit like a bit of testing

00:23:59,480 --> 00:24:06,630
like a blob or like a morsel I don't

00:24:03,710 --> 00:24:10,620
like a bang and it's like an

00:24:06,630 --> 00:24:14,310
apportionment this is the entire talk

00:24:10,620 --> 00:24:17,250
now just so you know it's just just that

00:24:14,310 --> 00:24:19,860
you're welcome anyway okay you get the

00:24:17,250 --> 00:24:22,950
idea but also apparently names are

00:24:19,860 --> 00:24:24,780
meaningless and words are pointless and

00:24:22,950 --> 00:24:27,000
I don't know why we even bother to

00:24:24,780 --> 00:24:29,790
communicate because everyone argues

00:24:27,000 --> 00:24:32,100
about what unit tests are and about what

00:24:29,790 --> 00:24:34,680
functional tests are there's also into

00:24:32,100 --> 00:24:38,070
end tests and they're structural tests

00:24:34,680 --> 00:24:43,970
and pregnancy tests and integration

00:24:38,070 --> 00:24:47,030
tests and cake testers some at any rate

00:24:43,970 --> 00:24:49,410
the point is don't try to know stuff

00:24:47,030 --> 00:24:52,770
knowing stuff is impossible look at how

00:24:49,410 --> 00:24:56,940
sad that bearded fellow is let's just do

00:24:52,770 --> 00:24:58,350
stuff that feels like a good idea so in

00:24:56,940 --> 00:25:00,240
five ups case there are a few things

00:24:58,350 --> 00:25:03,480
that happen magically that the user

00:25:00,240 --> 00:25:05,910
doesn't really know about or see like

00:25:03,480 --> 00:25:07,590
scheduling and sending messages so we're

00:25:05,910 --> 00:25:11,880
gonna head back to our models and our

00:25:07,590 --> 00:25:13,170
functions and stuff and we're gonna make

00:25:11,880 --> 00:25:15,870
sure that the gears are working properly

00:25:13,170 --> 00:25:20,000
so that our magic car doesn't stall out

00:25:15,870 --> 00:25:22,680
on our users so scheduling with five up

00:25:20,000 --> 00:25:24,690
again it sends happy messages every day

00:25:22,680 --> 00:25:27,840
it works in two ways these are the

00:25:24,690 --> 00:25:30,360
secrets at the beginning of the day the

00:25:27,840 --> 00:25:33,090
users are separated into three random

00:25:30,360 --> 00:25:36,300
groups and then for each group a

00:25:33,090 --> 00:25:38,490
schedule is made of random times and

00:25:36,300 --> 00:25:41,460
this was because I didn't want five up

00:25:38,490 --> 00:25:44,010
users to be on the same schedule because

00:25:41,460 --> 00:25:46,590
then like if five five abusers we're all

00:25:44,010 --> 00:25:48,570
together at five o'clock and then all

00:25:46,590 --> 00:25:50,580
their five phones vibrated and they'd be

00:25:48,570 --> 00:25:53,040
like Oh boring or five five o'clock five

00:25:50,580 --> 00:25:55,920
ups are here and or something anyway I

00:25:53,040 --> 00:25:57,150
don't want users to get used to getting

00:25:55,920 --> 00:26:00,210
things at the same time every day

00:25:57,150 --> 00:26:03,030
because human brains like novelty and

00:26:00,210 --> 00:26:04,830
surprise is part of the fun so if my

00:26:03,030 --> 00:26:07,470
code is working properly and I have ten

00:26:04,830 --> 00:26:10,190
users when I run my divide users

00:26:07,470 --> 00:26:13,740
function it should give me three groups

00:26:10,190 --> 00:26:16,380
two groups with three and then one with

00:26:13,740 --> 00:26:19,860
four users so let's give testing that a

00:26:16,380 --> 00:26:22,260
whirl so we're gonna make a handful of

00:26:19,860 --> 00:26:23,970
users here and then Django is going to

00:26:22,260 --> 00:26:25,290
throw these in like a test database and

00:26:23,970 --> 00:26:26,400
then it'll trash it when we're done

00:26:25,290 --> 00:26:28,950
which is good

00:26:26,400 --> 00:26:32,010
and then if we call divide users

00:26:28,950 --> 00:26:33,870
function on with those users as an

00:26:32,010 --> 00:26:37,350
argument and assign the results to

00:26:33,870 --> 00:26:39,510
variables a b and c then at the bottom

00:26:37,350 --> 00:26:41,370
will assert how many should be in each

00:26:39,510 --> 00:26:43,260
group and then if we add up all the

00:26:41,370 --> 00:26:43,950
users it's equal to all the users in our

00:26:43,260 --> 00:26:46,770
database

00:26:43,950 --> 00:26:51,420
this has pass and then we know that

00:26:46,770 --> 00:26:55,710
we're dividing our users properly all

00:26:51,420 --> 00:26:59,430
right what now snapping because that was

00:26:55,710 --> 00:27:01,710
hard and then we do more of this stuff

00:26:59,430 --> 00:27:04,410
we go back and we test all of our

00:27:01,710 --> 00:27:06,390
templates we think about what could go

00:27:04,410 --> 00:27:07,560
wrong like if the users not logged in

00:27:06,390 --> 00:27:09,360
then they probably shouldn't be able to

00:27:07,560 --> 00:27:11,520
see account stuff right so we make sure

00:27:09,360 --> 00:27:13,230
that that's not going to happen we test

00:27:11,520 --> 00:27:15,480
for that we think of what should go

00:27:13,230 --> 00:27:17,610
right and we try to write test for that

00:27:15,480 --> 00:27:20,430
again with kindness and generosity

00:27:17,610 --> 00:27:22,380
toward yourself try to dream up all of

00:27:20,430 --> 00:27:24,180
the ways that your end users can use and

00:27:22,380 --> 00:27:25,920
abuse your code and then test for that

00:27:24,180 --> 00:27:27,930
and aim for a hundred percent test

00:27:25,920 --> 00:27:30,900
coverage and when you get there you're

00:27:27,930 --> 00:27:32,370
done forever yeah it for you unless you

00:27:30,900 --> 00:27:35,550
ever change your code at all in which

00:27:32,370 --> 00:27:40,860
case you have to write more tests all

00:27:35,550 --> 00:27:42,450
right here we go review super fast ok so

00:27:40,860 --> 00:27:46,290
we've got some good tools to help us

00:27:42,450 --> 00:27:48,030
high test high task of selenium high

00:27:46,290 --> 00:27:50,820
test Django they're all really great

00:27:48,030 --> 00:27:54,420
resources the second thing we've learned

00:27:50,820 --> 00:27:56,130
is that coverage can reveal spots that

00:27:54,420 --> 00:27:57,530
you haven't tested and help you get your

00:27:56,130 --> 00:28:00,810
footing

00:27:57,530 --> 00:28:03,060
we've learned that selenium is a great

00:28:00,810 --> 00:28:06,300
way to impersonate impersonate a user

00:28:03,060 --> 00:28:10,110
quickly and easily which is the best way

00:28:06,300 --> 00:28:12,180
to do anything and people use words like

00:28:10,110 --> 00:28:15,090
functional tests and unit tests in a

00:28:12,180 --> 00:28:16,740
variety of ways but the thing that's

00:28:15,090 --> 00:28:19,680
important to note is that we want our

00:28:16,740 --> 00:28:22,500
websites to run in a way that our users

00:28:19,680 --> 00:28:24,750
expect and then we want our code the

00:28:22,500 --> 00:28:29,460
rest of like the gears to run in the way

00:28:24,750 --> 00:28:31,890
that we as developers expect it to run v

00:28:29,460 --> 00:28:33,510
Michelle Obama is amazing and she should

00:28:31,890 --> 00:28:36,690
totally be my best friend

00:28:33,510 --> 00:28:38,010
take away send her a tweet she'll like

00:28:36,690 --> 00:28:40,650
it

00:28:38,010 --> 00:28:42,840
and then the final note is that

00:28:40,650 --> 00:28:46,650
I wish someone had told me the real

00:28:42,840 --> 00:28:49,680
benefits of testing which are mental

00:28:46,650 --> 00:28:53,400
freedom and a safety net to feel like

00:28:49,680 --> 00:28:56,100
you can grow an experiment that's really

00:28:53,400 --> 00:28:59,250
what it does for you and I'm not gonna

00:28:56,100 --> 00:29:04,020
lie like it's really hard and we didn't

00:28:59,250 --> 00:29:07,080
even get to like mocking and fixtures

00:29:04,020 --> 00:29:08,420
these things make me want to cry here on

00:29:07,080 --> 00:29:11,700
the stage

00:29:08,420 --> 00:29:14,250
just kidding do them it's fine but it's

00:29:11,700 --> 00:29:16,530
all really really worth it so if you've

00:29:14,250 --> 00:29:19,620
been waiting for a magical time to

00:29:16,530 --> 00:29:23,690
decide to learn testing I really hope

00:29:19,620 --> 00:29:23,690
it's now thank you

00:29:28,530 --> 00:29:35,250
Thank You Menon we have this coffee max

00:29:32,330 --> 00:29:37,559
appreciation icon yeah thank you for the

00:29:35,250 --> 00:29:41,100
talk was yeah I don't want you to cry

00:29:37,559 --> 00:29:44,330
for about fixtures and something there's

00:29:41,100 --> 00:29:44,330

YouTube URL: https://www.youtube.com/watch?v=QD9YlNoTm2c


