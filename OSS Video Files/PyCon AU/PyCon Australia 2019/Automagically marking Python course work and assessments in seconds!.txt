Title: Automagically marking Python course work and assessments in seconds!
Publication date: 2019-08-02
Playlist: PyCon Australia 2019
Description: 
	Dave Bracken

The author's Python course is being delivered by two academic providers in New Zealand and uses CodeRunner for marking all lab work and assessments.  Students receive feedback and marks on the code they write within seconds.  Installing CodeRunner, creating labs and code/live demos will be covered.

https://2019.pycon-au.org/talks/automagically-marking-python-course-work-and-assessments-in-seconds

PyCon AU, the national Python Language conference, is on again this August in Sydney, at the International Convention Centre, Sydney, August 2 - 6 2019.

Video licence: CC BY-NC-SA 4.0 - https://creativecommons.org/licenses/by-nc-sa/4.0/

Python, PyCon, PyConAU

Fri Aug  2 11:10:00 2019 at C3.4 & C3.5
Captions: 
	00:00:00,030 --> 00:00:05,430
Hey morning everyone who's just joined

00:00:03,600 --> 00:00:06,750
us from one of the other tracks and for

00:00:05,430 --> 00:00:08,340
those of you who are continuing through

00:00:06,750 --> 00:00:11,219
the education track we're going to start

00:00:08,340 --> 00:00:14,340
our next presentation this presentation

00:00:11,219 --> 00:00:15,750
is from Dave Bracken who's the senior

00:00:14,340 --> 00:00:16,949
lecturer in the Department of computing

00:00:15,750 --> 00:00:20,100
at our which is formerly the

00:00:16,949 --> 00:00:22,529
Christchurch poly tech in New Zealand he

00:00:20,100 --> 00:00:25,769
is a maker coder networker an educator

00:00:22,529 --> 00:00:27,900
and he's going to be giving us a rundown

00:00:25,769 --> 00:00:29,609
of his Python course which is being used

00:00:27,900 --> 00:00:32,099
by to academic providers in New Zealand

00:00:29,609 --> 00:00:34,290
and uses code runner for marking lab

00:00:32,099 --> 00:00:35,640
working assessments so for automatically

00:00:34,290 --> 00:00:37,469
marking Python coursework and

00:00:35,640 --> 00:00:45,090
assessments in seconds it's over to you

00:00:37,469 --> 00:00:49,260
Dave thank you Sena Kotov tena koutou

00:00:45,090 --> 00:00:51,000
tena koutou katoa welcome to this

00:00:49,260 --> 00:00:53,489
morning's session folks this is

00:00:51,000 --> 00:00:56,550
automatically marking Python course and

00:00:53,489 --> 00:00:59,010
assessment in seconds it should actually

00:00:56,550 --> 00:01:02,309
be milliseconds but let's see what we

00:00:59,010 --> 00:01:04,110
can do in reducing this so about me Haim

00:01:02,309 --> 00:01:07,229
de Bracken I'm originally from

00:01:04,110 --> 00:01:09,210
Manchester I call New Zealand my home

00:01:07,229 --> 00:01:12,510
and I have done for quite a while now

00:01:09,210 --> 00:01:15,420
I've been at Christchurch Polytechnic or

00:01:12,510 --> 00:01:18,990
as it is now our Institute for just over

00:01:15,420 --> 00:01:20,850
seven years I'm a long time computing

00:01:18,990 --> 00:01:22,470
person to be honest the only thing I've

00:01:20,850 --> 00:01:25,439
ever done in my entire life is working

00:01:22,470 --> 00:01:27,780
computing I did 23 years in industry

00:01:25,439 --> 00:01:28,500
doing network support programming a long

00:01:27,780 --> 00:01:32,549
time ago

00:01:28,500 --> 00:01:36,119
and most recently sales pre-sales

00:01:32,549 --> 00:01:39,720
technical supports as well so I'm now at

00:01:36,119 --> 00:01:41,820
our Institute we were currently sorry

00:01:39,720 --> 00:01:43,229
but just recently renamed in terms of

00:01:41,820 --> 00:01:46,590
the department now with the department's

00:01:43,229 --> 00:01:49,470
of digital innovation and according the

00:01:46,590 --> 00:01:50,909
Sirois there was released from the

00:01:49,470 --> 00:01:53,600
government yesterday so we're going

00:01:50,909 --> 00:01:56,430
through a process of a Malcolm 18

00:01:53,600 --> 00:01:58,350
polytechnics in New Zealand so we're

00:01:56,430 --> 00:02:00,659
about to become effectively one national

00:01:58,350 --> 00:02:04,380
Polytechnic so there's been more news on

00:02:00,659 --> 00:02:06,390
that next semester so in terms of names

00:02:04,380 --> 00:02:07,590
apologies for the for the different

00:02:06,390 --> 00:02:09,869
names that are out there but

00:02:07,590 --> 00:02:12,960
we're going through a process at the

00:02:09,869 --> 00:02:15,480
moment so my subjects I currently teach

00:02:12,960 --> 00:02:18,120
our programming on a level five diploma

00:02:15,480 --> 00:02:21,000
and the initial part of the programming

00:02:18,120 --> 00:02:22,800
section for our level seven post-grad

00:02:21,000 --> 00:02:24,090
diploma and the signal Graduate School

00:02:22,800 --> 00:02:25,440
which is just around the corner from us

00:02:24,090 --> 00:02:27,900
in Christchurch

00:02:25,440 --> 00:02:30,870
I teach Cisco Networking and I must

00:02:27,900 --> 00:02:32,970
MIT's the is the the networking side of

00:02:30,870 --> 00:02:35,340
life that's has recently changes for our

00:02:32,970 --> 00:02:37,459
Cisco's concerned because they've

00:02:35,340 --> 00:02:40,709
changed Frank from what used to be

00:02:37,459 --> 00:02:43,440
infrastructure supports who effectively

00:02:40,709 --> 00:02:45,209
saying networking is now writing code

00:02:43,440 --> 00:02:46,709
and predominately Cisco are saying is

00:02:45,209 --> 00:02:49,590
Python that's at the front so that has

00:02:46,709 --> 00:02:51,720
absolutely a superb message to receive

00:02:49,590 --> 00:02:54,030
from Cisco a few months ago I've also

00:02:51,720 --> 00:02:56,760
taught Microsoft infrastructure support

00:02:54,030 --> 00:02:59,010
has various programs and most recently

00:02:56,760 --> 00:03:02,670
cyber security and no doubt there will

00:02:59,010 --> 00:03:05,489
be others as well so computing an era

00:03:02,670 --> 00:03:07,920
one of the things that I really want to

00:03:05,489 --> 00:03:09,930
focus on today is that obviously we

00:03:07,920 --> 00:03:12,390
offer our own courses and we offer those

00:03:09,930 --> 00:03:14,640
courses to other providers as well but

00:03:12,390 --> 00:03:17,489
we also work with ICT teachers in the

00:03:14,640 --> 00:03:19,769
local schools now I remember Ben from

00:03:17,489 --> 00:03:21,660
his first presentation here asked how

00:03:19,769 --> 00:03:23,370
many people were teachers from from

00:03:21,660 --> 00:03:25,590
memory there was quite a few teachers

00:03:23,370 --> 00:03:28,019
present inside the room lots of really

00:03:25,590 --> 00:03:30,120
good to see so one of the services that

00:03:28,019 --> 00:03:33,989
we offer is that we work with local

00:03:30,120 --> 00:03:39,840
teachers to upskill them to deliver ICT

00:03:33,989 --> 00:03:44,519
subjects err to their students we also

00:03:39,840 --> 00:03:47,549
have a really well provisioned computing

00:03:44,519 --> 00:03:50,370
set up inside the Polytechnic provided

00:03:47,549 --> 00:03:53,010
by corporate IT and also by the staff

00:03:50,370 --> 00:03:55,110
inside the Department of computing where

00:03:53,010 --> 00:03:57,480
we have our own for specialized

00:03:55,110 --> 00:03:58,950
networking rooms and we also have their

00:03:57,480 --> 00:04:00,900
own infrastructure there and it's that

00:03:58,950 --> 00:04:02,519
infrastructure there that's hosting some

00:04:00,900 --> 00:04:04,170
of the services that you're going to see

00:04:02,519 --> 00:04:06,750
so we have a really close working

00:04:04,170 --> 00:04:08,850
relationship with IT which is absolutely

00:04:06,750 --> 00:04:10,680
brilliant but I can appreciate and I've

00:04:08,850 --> 00:04:12,930
I've heard stories from lots of other

00:04:10,680 --> 00:04:15,090
staff but they've tried to do things

00:04:12,930 --> 00:04:17,970
inside their own environments only to be

00:04:15,090 --> 00:04:19,829
told by either their IT support people

00:04:17,970 --> 00:04:21,239
or variety provider that they can

00:04:19,829 --> 00:04:23,879
this and the canter that only can't do

00:04:21,239 --> 00:04:26,159
something else so in that case we are

00:04:23,879 --> 00:04:28,379
Tara are really fortunate that we can do

00:04:26,159 --> 00:04:31,710
lots of things purely because we work so

00:04:28,379 --> 00:04:33,090
well with our RIT team sometimes so that

00:04:31,710 --> 00:04:35,400
we've got our own rooms with our own

00:04:33,090 --> 00:04:39,210
separate networks even our own separate

00:04:35,400 --> 00:04:40,800
infrastructure as well so the background

00:04:39,210 --> 00:04:43,860
to automation does that have worked in

00:04:40,800 --> 00:04:45,419
computing for 20 plus years and must met

00:04:43,860 --> 00:04:48,090
almost everything that I looked at the

00:04:45,419 --> 00:04:49,500
first thing I'd say is how can I

00:04:48,090 --> 00:04:51,840
automate this so much so that I don't

00:04:49,500 --> 00:04:53,400
have to do it again regardless of the

00:04:51,840 --> 00:04:54,719
language I've used lots of different

00:04:53,400 --> 00:04:57,960
languages lots of different solutions

00:04:54,719 --> 00:04:59,780
and I took the same approach when I was

00:04:57,960 --> 00:05:01,860
asked to write a new programming course

00:04:59,780 --> 00:05:04,830
for error that was going to be

00:05:01,860 --> 00:05:08,009
introduced for our networking diploma in

00:05:04,830 --> 00:05:09,690
that I said how do I automate this so

00:05:08,009 --> 00:05:11,940
much so that I can actually see what the

00:05:09,690 --> 00:05:13,289
students are going to do and my first

00:05:11,940 --> 00:05:15,270
thought was that the students are going

00:05:13,289 --> 00:05:17,370
to upload their code and I was going to

00:05:15,270 --> 00:05:19,319
magically download their code and I was

00:05:17,370 --> 00:05:21,030
going to magically execute their code on

00:05:19,319 --> 00:05:22,680
it's going to magically submit data to

00:05:21,030 --> 00:05:24,029
and it's going to magically receive

00:05:22,680 --> 00:05:26,340
feedback for it there's an awful lot of

00:05:24,029 --> 00:05:31,020
magic there and then I saw a product

00:05:26,340 --> 00:05:32,849
called code runner that was created by a

00:05:31,020 --> 00:05:35,130
member of staff at the University of

00:05:32,849 --> 00:05:37,680
Canterbury would effectively did all of

00:05:35,130 --> 00:05:40,259
this magic for us so I started to apply

00:05:37,680 --> 00:05:43,349
the the products I created we should

00:05:40,259 --> 00:05:45,990
both call code runner and job engine and

00:05:43,349 --> 00:05:48,270
my programming environment so the

00:05:45,990 --> 00:05:50,789
programming course I actually created is

00:05:48,270 --> 00:05:53,669
a typical programming course that no

00:05:50,789 --> 00:05:55,500
doubt we've all got variations of the

00:05:53,669 --> 00:05:57,300
same thing we've got conditional

00:05:55,500 --> 00:06:00,690
statements we look at objects we look at

00:05:57,300 --> 00:06:03,509
methods we create functions we look at

00:06:00,690 --> 00:06:05,699
the the designer test data and I

00:06:03,509 --> 00:06:08,400
remember also been saying earlier on

00:06:05,699 --> 00:06:10,710
that it's quite difficult to create a

00:06:08,400 --> 00:06:12,629
course that actually encompasses all of

00:06:10,710 --> 00:06:14,639
our learners because especially in my

00:06:12,629 --> 00:06:16,319
case some of the students who come to my

00:06:14,639 --> 00:06:18,000
class have actually got prior

00:06:16,319 --> 00:06:19,680
programming experience some of them got

00:06:18,000 --> 00:06:21,479
quite a few here's a prior programming

00:06:19,680 --> 00:06:23,129
experience some of them have got

00:06:21,479 --> 00:06:25,409
absolutely no programming experience so

00:06:23,129 --> 00:06:27,389
actually presenting a course that keeps

00:06:25,409 --> 00:06:30,479
all of those people happy is is quite a

00:06:27,389 --> 00:06:32,310
big ask so much so that the end of my

00:06:30,479 --> 00:06:33,389
course may be about three-quarters of

00:06:32,310 --> 00:06:36,300
the way through it

00:06:33,389 --> 00:06:39,000
I offer an option to say you can go and

00:06:36,300 --> 00:06:41,729
create well I'm suggesting the flask it

00:06:39,000 --> 00:06:43,379
could be any web development framework

00:06:41,729 --> 00:06:46,349
there but you can go and create

00:06:43,379 --> 00:06:47,789
solutions just using this so use all of

00:06:46,349 --> 00:06:49,650
the the tools and techniques that you've

00:06:47,789 --> 00:06:52,590
seen throughout the course and then go

00:06:49,650 --> 00:06:55,379
and do bigger and better things so it's

00:06:52,590 --> 00:06:57,780
quite flexible in that case so as I said

00:06:55,379 --> 00:07:00,780
I approached this initially with how do

00:06:57,780 --> 00:07:03,180
i facilitate how do I create a course

00:07:00,780 --> 00:07:04,919
where I can see what the students are

00:07:03,180 --> 00:07:07,430
doing now that's sort of just quick

00:07:04,919 --> 00:07:10,469
hands of how many people use Moodle

00:07:07,430 --> 00:07:12,360
Moodle quite a few that's good so we all

00:07:10,469 --> 00:07:14,400
know about the interface we all know

00:07:12,360 --> 00:07:16,889
that we can create quizzes of various

00:07:14,400 --> 00:07:20,069
types we all know that's when we go in

00:07:16,889 --> 00:07:21,900
there and this is recent data we can go

00:07:20,069 --> 00:07:23,819
in there so we can see what the students

00:07:21,900 --> 00:07:25,979
are actually doing and sometimes in real

00:07:23,819 --> 00:07:28,729
time and so for those questions there

00:07:25,979 --> 00:07:31,080
they were taken out of a one of my early

00:07:28,729 --> 00:07:33,029
labs I've got inside my programming

00:07:31,080 --> 00:07:34,500
course I could actually drill down and

00:07:33,029 --> 00:07:35,789
I'm not going to do for real time

00:07:34,500 --> 00:07:37,259
because to actually show the student

00:07:35,789 --> 00:07:39,719
information but I could drill down

00:07:37,259 --> 00:07:41,969
inside there and then actually see the

00:07:39,719 --> 00:07:43,770
code that the student has uploaded and

00:07:41,969 --> 00:07:45,930
then I can see what test dates or has

00:07:43,770 --> 00:07:47,580
been applied to their code which

00:07:45,930 --> 00:07:50,219
actually results in them getting the

00:07:47,580 --> 00:07:52,379
scores up there see so this is my take

00:07:50,219 --> 00:07:54,960
on this is how I see what the students

00:07:52,379 --> 00:07:56,909
are doing and actually award marks for

00:07:54,960 --> 00:07:58,770
the students for doing every single lab

00:07:56,909 --> 00:08:01,319
that have got a part of my course and

00:07:58,770 --> 00:08:02,939
that's the the initiator for the

00:08:01,319 --> 00:08:05,969
students actually want to go through my

00:08:02,939 --> 00:08:07,620
through my lab work so I get to see what

00:08:05,969 --> 00:08:09,810
those students are doing just as we

00:08:07,620 --> 00:08:11,639
would if this a quiz you decide on the

00:08:09,810 --> 00:08:13,949
type of quiz that can be applied to

00:08:11,639 --> 00:08:15,960
Moodle but the difference is behind that

00:08:13,949 --> 00:08:18,589
is the actual student code that they've

00:08:15,960 --> 00:08:21,629
uploaded that Moodle has actually tested

00:08:18,589 --> 00:08:24,000
and actually given a mark for this as I

00:08:21,629 --> 00:08:26,699
said I didn't create this I'm just a

00:08:24,000 --> 00:08:28,560
user I'm not really enthusiastic user of

00:08:26,699 --> 00:08:30,360
this it is created by a guy called

00:08:28,560 --> 00:08:31,919
Richard lob from the University of

00:08:30,360 --> 00:08:33,659
Canterbury I just want to say thank you

00:08:31,919 --> 00:08:35,399
very much to Richard because if it

00:08:33,659 --> 00:08:37,260
wasn't for Richard creating this I'd

00:08:35,399 --> 00:08:39,300
still be marking stuff from last year

00:08:37,260 --> 00:08:43,500
and trying to give feedback I actually

00:08:39,300 --> 00:08:45,149
downloaded all of the code last last

00:08:43,500 --> 00:08:46,090
year that the students submitted in one

00:08:45,149 --> 00:08:49,570
semester on earth

00:08:46,090 --> 00:08:51,490
was closed for 120,000 lines of code and

00:08:49,570 --> 00:08:54,310
that's the point where you think of if a

00:08:51,490 --> 00:08:57,160
teacher is roughly 30 years old after

00:08:54,310 --> 00:08:58,750
trying to give feedback 120,000 lines of

00:08:57,160 --> 00:09:00,340
code that have been a lot 50 by the end

00:08:58,750 --> 00:09:03,279
of the week it's not something that

00:09:00,340 --> 00:09:05,650
scales so what we need is an automated

00:09:03,279 --> 00:09:09,610
system that takes a student code

00:09:05,650 --> 00:09:12,040
executes it gives them feedback allows

00:09:09,610 --> 00:09:13,930
me to track it gives them marks and we

00:09:12,040 --> 00:09:16,180
can all see where they are so thank you

00:09:13,930 --> 00:09:18,990
very much Richard for actually creating

00:09:16,180 --> 00:09:21,279
a code runner and job engine first place

00:09:18,990 --> 00:09:23,230
so the development process of the

00:09:21,279 --> 00:09:25,750
students go through is a typical

00:09:23,230 --> 00:09:28,720
development process of heard folks talk

00:09:25,750 --> 00:09:31,510
about using pseudocode I also use

00:09:28,720 --> 00:09:33,339
pseudocode there's lots of design

00:09:31,510 --> 00:09:35,620
frameworks that we could we could be

00:09:33,339 --> 00:09:37,720
using on quite happy using pseudo code

00:09:35,620 --> 00:09:39,730
just to get this students into the

00:09:37,720 --> 00:09:41,920
initial idea of breaking a problem down

00:09:39,730 --> 00:09:44,110
into individual tasks so much so that

00:09:41,920 --> 00:09:47,410
they can take that and then apply it to

00:09:44,110 --> 00:09:49,150
a programmatic solution using Python so

00:09:47,410 --> 00:09:51,190
the emphasis here is that they develop

00:09:49,150 --> 00:09:54,910
the code on the desktop and that they

00:09:51,190 --> 00:09:56,620
test their code on on the desktop I give

00:09:54,910 --> 00:09:59,860
them ideas about how they can test the

00:09:56,620 --> 00:10:02,290
code I remember seeing examples earlier

00:09:59,860 --> 00:10:04,630
on about looking at boundaries from one

00:10:02,290 --> 00:10:07,930
Ben's presentations I've got pretty much

00:10:04,630 --> 00:10:10,120
the same tests so less than 50 great and

00:10:07,930 --> 00:10:12,550
50 greater equal to 50 those types of

00:10:10,120 --> 00:10:14,830
things so I'll explain some of the test

00:10:12,550 --> 00:10:16,750
data that I'll use and actually give

00:10:14,830 --> 00:10:19,089
some of the test date so that I use to

00:10:16,750 --> 00:10:21,370
the students as well but not all of the

00:10:19,089 --> 00:10:22,390
test data so the students are said that

00:10:21,370 --> 00:10:22,870
you might think are day come on that's

00:10:22,390 --> 00:10:24,339
not fair

00:10:22,870 --> 00:10:26,710
but I really want the students to think

00:10:24,339 --> 00:10:29,110
outside the box about how they can test

00:10:26,710 --> 00:10:31,000
their own code so I give them some of

00:10:29,110 --> 00:10:32,980
the test data and they develop their

00:10:31,000 --> 00:10:35,980
code inside the IDE

00:10:32,980 --> 00:10:38,020
I must have met ID agnostic all of the

00:10:35,980 --> 00:10:41,020
demonstrations I give as part of my

00:10:38,020 --> 00:10:43,240
course is done using Idol by encourage

00:10:41,020 --> 00:10:44,800
students to use whatever it is ID that

00:10:43,240 --> 00:10:47,529
they prefer that they feel comfortable

00:10:44,800 --> 00:10:49,900
with so once they've done their testing

00:10:47,529 --> 00:10:52,779
once they say that their code is good it

00:10:49,900 --> 00:10:55,209
actually is a good solution to the

00:10:52,779 --> 00:10:57,180
problem then they take their working

00:10:55,209 --> 00:10:58,620
code emphasis on working

00:10:57,180 --> 00:11:00,510
if any my student can be listening to

00:10:58,620 --> 00:11:01,800
this later not code that didn't work in

00:11:00,510 --> 00:11:03,930
though that magically when they

00:11:01,800 --> 00:11:06,420
submitted to Moodle it will work but

00:11:03,930 --> 00:11:09,660
they take the working solution send it

00:11:06,420 --> 00:11:12,900
to Moodle Moodle takes their code along

00:11:09,660 --> 00:11:15,300
with all of my test data packages it

00:11:12,900 --> 00:11:18,090
sends it off to a virtual machine which

00:11:15,300 --> 00:11:20,430
executes sit which sends it back and

00:11:18,090 --> 00:11:22,260
then says to the student yes or no it

00:11:20,430 --> 00:11:24,120
either passed all the tests or it passed

00:11:22,260 --> 00:11:25,950
the individual tests and all that

00:11:24,120 --> 00:11:28,890
happens and we can do in a few seconds

00:11:25,950 --> 00:11:31,200
hopefully if the the demo folks looking

00:11:28,890 --> 00:11:33,360
down and as we can do this sending it

00:11:31,200 --> 00:11:35,640
from here to Hamilton the north island

00:11:33,360 --> 00:11:37,770
new zealand and then from Hamilton backs

00:11:35,640 --> 00:11:40,380
a virtual machine in Christchurch back

00:11:37,770 --> 00:11:43,200
to Hamilton back to Sydney in probably

00:11:40,380 --> 00:11:45,420
less than a second I hope but let's see

00:11:43,200 --> 00:11:49,740
how that pans out in real time so the

00:11:45,420 --> 00:11:51,680
students can run through a lab wherever

00:11:49,740 --> 00:11:55,410
they want obviously they have to turn up

00:11:51,680 --> 00:11:56,760
we we do track attendance but outside of

00:11:55,410 --> 00:11:59,010
class time which is actually quite

00:11:56,760 --> 00:12:01,470
significant they can work through the

00:11:59,010 --> 00:12:04,530
labs at their own pace my almost

00:12:01,470 --> 00:12:06,570
certainly encouraged that to happen so

00:12:04,530 --> 00:12:09,360
the internals of both code runner and

00:12:06,570 --> 00:12:11,610
job engine code runners the plug-in that

00:12:09,360 --> 00:12:14,130
goes in some Moodle and then job engine

00:12:11,610 --> 00:12:17,310
is a separate system which actually

00:12:14,130 --> 00:12:20,490
executes the code and richer's describe

00:12:17,310 --> 00:12:22,860
two different ways of having this setup

00:12:20,490 --> 00:12:25,110
you can either have it run just on the

00:12:22,860 --> 00:12:27,090
Moodle server although it's possibly not

00:12:25,110 --> 00:12:29,310
the best approach or you separate this

00:12:27,090 --> 00:12:31,260
into two separate services you have your

00:12:29,310 --> 00:12:33,570
Moodle server and then you have your job

00:12:31,260 --> 00:12:36,060
execution engine or your job engine on

00:12:33,570 --> 00:12:38,490
another server ideally another virtual

00:12:36,060 --> 00:12:41,010
machine exactly the flexibility to use

00:12:38,490 --> 00:12:43,260
this so we create the questions in

00:12:41,010 --> 00:12:45,240
Moodle just as recruiting questions in

00:12:43,260 --> 00:12:47,850
Moodle for a long time we give it the

00:12:45,240 --> 00:12:49,860
test data and then the job engine

00:12:47,850 --> 00:12:51,870
packages all of this together

00:12:49,860 --> 00:12:54,210
sends it opens a job engine for

00:12:51,870 --> 00:12:56,010
execution which does and then it sends

00:12:54,210 --> 00:12:58,320
the results back which goes through a

00:12:56,010 --> 00:13:01,680
grading system which eventually gives

00:12:58,320 --> 00:13:03,010
the students the mark this is what it

00:13:01,680 --> 00:13:05,889
should look like

00:13:03,010 --> 00:13:07,000
so this is a server app we've got so

00:13:05,889 --> 00:13:09,820
it's actually just around the corner

00:13:07,000 --> 00:13:11,800
from my office which hosts some of the

00:13:09,820 --> 00:13:14,380
the job engine virtual machines there

00:13:11,800 --> 00:13:15,970
but I've got to be honest and say none

00:13:14,380 --> 00:13:17,980
of those are actually in production use

00:13:15,970 --> 00:13:20,440
and none of them have actually been used

00:13:17,980 --> 00:13:22,449
now for several months so the specs of

00:13:20,440 --> 00:13:26,589
the machines sorry the specs of the

00:13:22,449 --> 00:13:29,290
virtual machines is that one's got four

00:13:26,589 --> 00:13:31,660
cores and I think a gig of ram and to be

00:13:29,290 --> 00:13:34,089
honest it sucks just sits there most of

00:13:31,660 --> 00:13:36,220
the times even when it was in use just

00:13:34,089 --> 00:13:38,470
twiddling its thumbs pre only because

00:13:36,220 --> 00:13:40,870
the actual load on the server is not

00:13:38,470 --> 00:13:43,060
that great I said to be honest because

00:13:40,870 --> 00:13:44,889
that's what it's actually running on now

00:13:43,060 --> 00:13:47,620
for the last eight months and that's the

00:13:44,889 --> 00:13:49,570
PC underneath my desk and I did that

00:13:47,620 --> 00:13:51,160
intentionally because eventually once

00:13:49,570 --> 00:13:52,870
it's been in this position where people

00:13:51,160 --> 00:13:54,790
said yeah but I can't afford a server

00:13:52,870 --> 00:13:56,589
and IT won't give me this and we don't

00:13:54,790 --> 00:13:58,209
have the budget and I don't have a

00:13:56,589 --> 00:14:02,230
credit card to go to a cloud provider

00:13:58,209 --> 00:14:05,320
I'll say you've got PC can you just all

00:14:02,230 --> 00:14:07,810
the hypervisor on it can you install or

00:14:05,320 --> 00:14:09,579
enable hyper-v you can use VMware

00:14:07,810 --> 00:14:11,319
Workstation can you fire up a virtual

00:14:09,579 --> 00:14:13,209
machine there you go

00:14:11,319 --> 00:14:15,190
you can do that and I've actually run

00:14:13,209 --> 00:14:17,260
multiple courses from a virtual machine

00:14:15,190 --> 00:14:21,550
on my desktop now for eight months and

00:14:17,260 --> 00:14:24,160
it just works now I do have Plan B Plan

00:14:21,550 --> 00:14:25,630
C plan D plan D plan all the way down

00:14:24,160 --> 00:14:28,149
there so eventually they'll be

00:14:25,630 --> 00:14:30,370
effectively precious little downtime but

00:14:28,149 --> 00:14:32,319
we don't need the latest and greatest we

00:14:30,370 --> 00:14:36,730
don't need incredibly powerful

00:14:32,319 --> 00:14:39,670
incredibly powerful hardware and we

00:14:36,730 --> 00:14:42,449
don't need a leading edge cloud services

00:14:39,670 --> 00:14:45,279
just to execute these virtual machines

00:14:42,449 --> 00:14:47,649
in terms of reliability gone down once

00:14:45,279 --> 00:14:50,440
in three years I must admit that was

00:14:47,649 --> 00:14:53,380
that was my own configuration mistake

00:14:50,440 --> 00:14:55,600
there we do use it for coursework every

00:14:53,380 --> 00:14:58,240
single day of the year and we do use it

00:14:55,600 --> 00:15:01,180
for exams as well we've never had any

00:14:58,240 --> 00:15:03,510
instances of outages as far as code run

00:15:01,180 --> 00:15:06,880
or job engine a concern during exams

00:15:03,510 --> 00:15:08,560
worst case if there was the students

00:15:06,880 --> 00:15:10,690
have still got their code on the desktop

00:15:08,560 --> 00:15:12,430
and Moodle has got a cache copy of

00:15:10,690 --> 00:15:14,890
whatever is has been uploaded so there's

00:15:12,430 --> 00:15:15,459
precious little chance of students

00:15:14,890 --> 00:15:19,029
actually

00:15:15,459 --> 00:15:22,149
using work there in terms of security

00:15:19,029 --> 00:15:25,839
the job execution engine itself is

00:15:22,149 --> 00:15:28,059
firewalled so students can send code her

00:15:25,839 --> 00:15:30,610
to the job engine the job engine will

00:15:28,059 --> 00:15:32,470
execute the code and hopefully there'll

00:15:30,610 --> 00:15:35,170
be some folks in the room thinking

00:15:32,470 --> 00:15:37,389
that's interesting if I can send a

00:15:35,170 --> 00:15:39,309
machine some source code to execute I

00:15:37,389 --> 00:15:42,129
wonder what else I can do with that and

00:15:39,309 --> 00:15:44,860
yeah sure enough and that's actually

00:15:42,129 --> 00:15:47,139
possible you can you can send any any

00:15:44,860 --> 00:15:49,300
Python source code to the job engine and

00:15:47,139 --> 00:15:52,360
it will execute it so much so it's

00:15:49,300 --> 00:15:54,639
firewall as to what it cannot or it can

00:15:52,360 --> 00:15:57,459
actually go so it operates inside a

00:15:54,639 --> 00:16:00,160
virtual machine which itself is actually

00:15:57,459 --> 00:16:02,769
Sun box so much so that when a block of

00:16:00,160 --> 00:16:05,079
code is executed the next student who

00:16:02,769 --> 00:16:07,660
comes along says hey can you execute my

00:16:05,079 --> 00:16:11,339
code receives a new Sun box and then

00:16:07,660 --> 00:16:13,509
there's nothing there's no lingering

00:16:11,339 --> 00:16:15,850
anomalies there from the previous

00:16:13,509 --> 00:16:17,410
execute execution of code and I said

00:16:15,850 --> 00:16:19,629
it's firewall so much so that the

00:16:17,410 --> 00:16:22,329
students can't go outside that

00:16:19,629 --> 00:16:24,579
particular virtual machine we could

00:16:22,329 --> 00:16:26,499
allow it to go over to and I'm thinking

00:16:24,579 --> 00:16:29,199
about this for later to go over to a

00:16:26,499 --> 00:16:30,879
local provider or maybe a source of

00:16:29,199 --> 00:16:33,579
dates and we have lots of just like your

00:16:30,879 --> 00:16:35,709
folks do we have lots of sources of open

00:16:33,579 --> 00:16:37,269
data inside New Zealand where we can

00:16:35,709 --> 00:16:38,619
connect to that and then download the

00:16:37,269 --> 00:16:40,809
data in real time

00:16:38,619 --> 00:16:43,149
so even though it's firewalled we can

00:16:40,809 --> 00:16:47,410
allow this to operate in a controlled

00:16:43,149 --> 00:16:50,799
manner in terms of moodle upon me you

00:16:47,410 --> 00:16:52,600
can appreciate this is a moodle standard

00:16:50,799 --> 00:16:54,189
Moodle quiz and let's just have a look

00:16:52,600 --> 00:16:58,749
at this I'll just do from a demo

00:16:54,189 --> 00:17:01,029
perspective if I go to my practice lab

00:16:58,749 --> 00:17:07,990
I've actually gone inside my course here

00:17:01,029 --> 00:17:10,240
if I go and preview this so this is

00:17:07,990 --> 00:17:12,309
literally my very first question just to

00:17:10,240 --> 00:17:14,709
get folks into the idea of submitting

00:17:12,309 --> 00:17:17,949
their code their code to Moodle to see

00:17:14,709 --> 00:17:19,779
what it's like I give them the actual

00:17:17,949 --> 00:17:21,279
string that they they need to have

00:17:19,779 --> 00:17:23,409
displayed if it's a program that's going

00:17:21,279 --> 00:17:25,959
to display output just so there's no

00:17:23,409 --> 00:17:28,230
typographical mistakes there and then

00:17:25,959 --> 00:17:30,179
the students go and write their code

00:17:28,230 --> 00:17:34,620
which hopefully looks something like

00:17:30,179 --> 00:17:39,720
this which has got a an intentional typo

00:17:34,620 --> 00:17:41,970
mistake inside there they've developed

00:17:39,720 --> 00:17:44,220
this on their desktop they're pretty

00:17:41,970 --> 00:17:48,559
sure it's correct they send it to Moodle

00:17:44,220 --> 00:17:50,850
they click on check and Moodle says oh

00:17:48,559 --> 00:17:52,889
it's be embarrassing especially in front

00:17:50,850 --> 00:17:54,750
of group of those who are poison so

00:17:52,889 --> 00:17:56,789
Moodle said no at that point but it said

00:17:54,750 --> 00:17:58,649
no because there's not enough comments

00:17:56,789 --> 00:18:02,580
inside the code so I've actually got

00:17:58,649 --> 00:18:05,630
Python inside inside code runner inside

00:18:02,580 --> 00:18:07,740
Moodle which looks at their source code

00:18:05,630 --> 00:18:10,320
INSERM with this complexity I'm

00:18:07,740 --> 00:18:12,240
expecting to see so many comments from

00:18:10,320 --> 00:18:14,399
expectancy a common block at the start

00:18:12,240 --> 00:18:16,230
which is format in a particular way I'm

00:18:14,399 --> 00:18:19,559
expecting to see a rough number of

00:18:16,230 --> 00:18:21,659
source lines of coding there and I've

00:18:19,559 --> 00:18:28,409
clearly not met that so if I go back

00:18:21,659 --> 00:18:33,360
here if I add some more comments then

00:18:28,409 --> 00:18:36,240
hopefully that particular test will now

00:18:33,360 --> 00:18:39,419
pass and I'll submit my code and this

00:18:36,240 --> 00:18:41,850
time I still got it wrong

00:18:39,419 --> 00:18:44,880
needs to read mine question expected hi

00:18:41,850 --> 00:18:48,090
and welcome to detect 501 got hi comma

00:18:44,880 --> 00:18:49,860
welcome to detect 501 clearly I wasn't

00:18:48,090 --> 00:18:50,490
reading the question if my changes to

00:18:49,860 --> 00:18:55,590
what it should be

00:18:50,490 --> 00:18:59,549
hello and welcome to detect 501 click

00:18:55,590 --> 00:19:02,039
check now Moodle goes green all within

00:18:59,549 --> 00:19:04,049
enough time this all within about 200

00:19:02,039 --> 00:19:06,480
milliseconds that includes going from

00:19:04,049 --> 00:19:09,149
here to our instance of Moodle in

00:19:06,480 --> 00:19:11,250
Hamilton takes the code from Moodle in

00:19:09,149 --> 00:19:13,799
in Hamilton send it down to Christ shows

00:19:11,250 --> 00:19:15,720
get execute goes back to Hamilton comes

00:19:13,799 --> 00:19:17,159
all the way back over to Sydney so

00:19:15,720 --> 00:19:18,870
students can do this from anywhere in

00:19:17,159 --> 00:19:21,360
the world and receive feedback on that

00:19:18,870 --> 00:19:21,840
to say it's passed in this case just one

00:19:21,360 --> 00:19:23,580
test

00:19:21,840 --> 00:19:25,649
please pass these whole sequence of

00:19:23,580 --> 00:19:28,500
tests or it's failed at this particular

00:19:25,649 --> 00:19:30,990
point so that's just the introduction

00:19:28,500 --> 00:19:33,779
question there to show students about

00:19:30,990 --> 00:19:35,639
the actual process of submitting code to

00:19:33,779 --> 00:19:37,919
Moodle for execution I clearly saw a

00:19:35,639 --> 00:19:40,230
very simplistic program there are other

00:19:37,919 --> 00:19:42,010
programs that the students have to write

00:19:40,230 --> 00:19:44,230
maybe 2025

00:19:42,010 --> 00:19:46,720
five lines of code bottom a little bit

00:19:44,230 --> 00:19:49,240
more involved there in this case here's

00:19:46,720 --> 00:19:52,210
an example where they have to write some

00:19:49,240 --> 00:19:54,070
code to simulate marking and assessment

00:19:52,210 --> 00:19:56,380
so we've got some boundary tessa's we

00:19:54,070 --> 00:19:58,450
can test whether it's again the

00:19:56,380 --> 00:20:01,090
distinction it's inclusive of ninety or

00:19:58,450 --> 00:20:03,580
to a hundred it's not just 91 to 100

00:20:01,090 --> 00:20:05,800
it's not just 90 to 99 and then all the

00:20:03,580 --> 00:20:07,900
Associated test data then maps on to

00:20:05,800 --> 00:20:10,060
that to say have you passed this

00:20:07,900 --> 00:20:11,710
particular boundary test and once again

00:20:10,060 --> 00:20:14,110
out of the students some of those pieces

00:20:11,710 --> 00:20:16,750
of test data but most certainly not

00:20:14,110 --> 00:20:19,470
every single piece of test data if we

00:20:16,750 --> 00:20:21,880
scroll down here there are some of those

00:20:19,470 --> 00:20:23,590
example tests that are there in which

00:20:21,880 --> 00:20:27,190
cases students are encouraged to go into

00:20:23,590 --> 00:20:28,930
the input section grab those pieces of

00:20:27,190 --> 00:20:30,640
text and then apply them to their own

00:20:28,930 --> 00:20:32,650
development environment on the desktop

00:20:30,640 --> 00:20:34,930
once again ensure they've actually got a

00:20:32,650 --> 00:20:38,110
working program send it back to Moodle

00:20:34,930 --> 00:20:48,310
and then it's marked just as it was just

00:20:38,110 --> 00:20:51,160
as you've seen the earlier ones in terms

00:20:48,310 --> 00:20:53,470
of the output Moodle will say I expected

00:20:51,160 --> 00:20:55,570
to see this you saw me May that time to

00:20:53,470 --> 00:20:57,400
graph on traffic typographical mistake

00:20:55,570 --> 00:20:59,950
earlier on I expected to see this

00:20:57,400 --> 00:21:02,980
particular piece of text I received this

00:20:59,950 --> 00:21:04,930
particular message instead if it's

00:21:02,980 --> 00:21:07,570
necessary there is a show different

00:21:04,930 --> 00:21:10,000
option inside Moodle they can use that

00:21:07,570 --> 00:21:12,070
or the students can take the difference

00:21:10,000 --> 00:21:15,010
then put it through a diff tool to see

00:21:12,070 --> 00:21:17,410
which particular section of code was

00:21:15,010 --> 00:21:21,010
displaying the actual message once again

00:21:17,410 --> 00:21:23,200
this is all for programs which display

00:21:21,010 --> 00:21:24,820
messages obviously functions are quite

00:21:23,200 --> 00:21:27,040
different than the test data for a

00:21:24,820 --> 00:21:29,170
function if it's returning a boolean

00:21:27,040 --> 00:21:31,570
since I expected to receive true by I

00:21:29,170 --> 00:21:33,820
receive false on our kalasa test data

00:21:31,570 --> 00:21:35,710
inside there which actually does both

00:21:33,820 --> 00:21:38,860
negative and positive or forces both

00:21:35,710 --> 00:21:40,390
negative and positive responses in terms

00:21:38,860 --> 00:21:43,270
of what the students think they like it

00:21:40,390 --> 00:21:45,910
because they think they're talking to

00:21:43,270 --> 00:21:47,800
the machine and when it all goes green

00:21:45,910 --> 00:21:49,510
that the at the bottom there it's much

00:21:47,800 --> 00:21:51,640
like yes yes yes I've actually been in

00:21:49,510 --> 00:21:52,690
the machine this is good and I'm still

00:21:51,640 --> 00:21:54,270
at the front of the class thinking hey

00:21:52,690 --> 00:21:56,220
what do you think about questioning

00:21:54,270 --> 00:21:58,770
it's great just let me go on and carry

00:21:56,220 --> 00:22:02,280
on with the the next question and the

00:21:58,770 --> 00:22:04,740
really intensely interacting with this

00:22:02,280 --> 00:22:06,540
this whole concept of getting to write

00:22:04,740 --> 00:22:09,510
code so much so I've actually seen

00:22:06,540 --> 00:22:11,460
students who've entered my course who

00:22:09,510 --> 00:22:12,660
must may enter the course with a little

00:22:11,460 --> 00:22:14,550
bit of trepidation

00:22:12,660 --> 00:22:16,380
they weren't entering the course to be

00:22:14,550 --> 00:22:18,030
programmers at the end of the day but

00:22:16,380 --> 00:22:20,250
the fact that they have gone through

00:22:18,030 --> 00:22:22,320
this process where they write code they

00:22:20,250 --> 00:22:23,970
send it off and then this machine marks

00:22:22,320 --> 00:22:25,110
it within a fraction of a second does

00:22:23,970 --> 00:22:27,660
that have you gotten to the level where

00:22:25,110 --> 00:22:30,690
they absolutely love writing code that's

00:22:27,660 --> 00:22:32,820
just superb to see I asked some students

00:22:30,690 --> 00:22:34,890
about a year ago how this could be made

00:22:32,820 --> 00:22:37,590
better and I remember one of them

00:22:34,890 --> 00:22:39,780
distinctly said I did a programming

00:22:37,590 --> 00:22:42,270
course couple of semesters ago and I

00:22:39,780 --> 00:22:45,870
spent 14 weeks not knowing where I am

00:22:42,270 --> 00:22:48,510
done your Coast's your course and in

00:22:45,870 --> 00:22:50,220
half a second I know where the one

00:22:48,510 --> 00:22:52,710
question has given me the right answer

00:22:50,220 --> 00:22:54,660
and off don't change anything by I said

00:22:52,710 --> 00:22:56,400
half a second I'm sure I can make that

00:22:54,660 --> 00:22:58,679
better and I did I knocked it down to

00:22:56,400 --> 00:23:00,900
two hundred milliseconds but it's just

00:22:58,679 --> 00:23:03,600
it's this immediate feedback the

00:23:00,900 --> 00:23:05,250
students absolutely love every now and

00:23:03,600 --> 00:23:06,750
again they'll email me some code and say

00:23:05,250 --> 00:23:09,120
hey Dave I'm stuck here what do you

00:23:06,750 --> 00:23:10,350
think and I'll response and say have a

00:23:09,120 --> 00:23:12,360
think about this have a think about this

00:23:10,350 --> 00:23:13,980
they do that and then the back up and

00:23:12,360 --> 00:23:16,679
running but they really really really

00:23:13,980 --> 00:23:18,330
like the concepts of they send the codes

00:23:16,679 --> 00:23:23,490
in the machine and the machine gives

00:23:18,330 --> 00:23:26,760
immediate feedback so the future or the

00:23:23,490 --> 00:23:30,480
languages and I was a Python conference

00:23:26,760 --> 00:23:33,360
but it's not just Python job engine will

00:23:30,480 --> 00:23:35,190
execute any code that you send it you

00:23:33,360 --> 00:23:37,500
can send it C code you can send it no

00:23:35,190 --> 00:23:41,730
js' you can even send it sequel

00:23:37,500 --> 00:23:42,960
so whatever interpreters or compilers

00:23:41,730 --> 00:23:45,960
are installed in that virtual machine

00:23:42,960 --> 00:23:49,320
the job engine will go and execute that

00:23:45,960 --> 00:23:52,380
machine it can also analyze data so it's

00:23:49,320 --> 00:23:54,480
not just about taking source code and

00:23:52,380 --> 00:23:56,850
executing it and currently look at

00:23:54,480 --> 00:23:58,940
simulation packages where I can take a

00:23:56,850 --> 00:24:02,130
configuration from a simulation package

00:23:58,940 --> 00:24:04,500
run it through a command line version of

00:24:02,130 --> 00:24:06,380
that get the answer and then say to the

00:24:04,500 --> 00:24:09,890
students whether they're similar

00:24:06,380 --> 00:24:12,050
was actually designed well or not I'm

00:24:09,890 --> 00:24:13,910
looking at analyzing docstrings so the

00:24:12,050 --> 00:24:15,860
test code I've currently got just says

00:24:13,910 --> 00:24:17,540
do you have a doc string or don't you

00:24:15,860 --> 00:24:20,180
have a doc string but the million-dollar

00:24:17,540 --> 00:24:22,970
question is how good is that Doc's tree

00:24:20,180 --> 00:24:25,220
does it actually describe that function

00:24:22,970 --> 00:24:29,420
correctly or accurately that's most

00:24:25,220 --> 00:24:31,580
certainly work-in-progress installation

00:24:29,420 --> 00:24:33,680
instructions so for those who have

00:24:31,580 --> 00:24:36,110
Moodle you need the coder and a plugin

00:24:33,680 --> 00:24:38,690
the installations on that particular

00:24:36,110 --> 00:24:41,600
site the job engine is available from

00:24:38,690 --> 00:24:44,390
github has maintained by richard so

00:24:41,600 --> 00:24:47,330
please download the code there now

00:24:44,390 --> 00:24:49,460
million dollar question do you have the

00:24:47,330 --> 00:24:52,190
resources to host a job engine

00:24:49,460 --> 00:24:54,320
yourselves and as I said you don't need

00:24:52,190 --> 00:24:57,620
the latest and greatest technology a

00:24:54,320 --> 00:25:00,880
fairly high spec PC will run a course

00:24:57,620 --> 00:25:03,470
for 60 or 70 students without an issue

00:25:00,880 --> 00:25:05,240
but the key point here is it actually

00:25:03,470 --> 00:25:07,900
requires subject knowledge of

00:25:05,240 --> 00:25:10,340
configuring Linux virtual machines and

00:25:07,900 --> 00:25:13,220
some folks just may well not have the

00:25:10,340 --> 00:25:14,690
time to do that so my question is for

00:25:13,220 --> 00:25:17,540
the teachers who are presence in the

00:25:14,690 --> 00:25:20,090
room perhaps consider approaching a

00:25:17,540 --> 00:25:22,430
local service provider and say would it

00:25:20,090 --> 00:25:25,490
be possible for you to host a virtual

00:25:22,430 --> 00:25:27,770
machine for us that does that see if you

00:25:25,490 --> 00:25:30,770
can get together pool your knowledge and

00:25:27,770 --> 00:25:32,240
maybe create a shared service so one of

00:25:30,770 --> 00:25:34,970
the things I'd like to offer today is

00:25:32,240 --> 00:25:37,700
what can we do together in terms of

00:25:34,970 --> 00:25:39,890
creating a virtual machine which will

00:25:37,700 --> 00:25:41,510
execute student code and I'm sure

00:25:39,890 --> 00:25:44,300
between all of us we can come up with

00:25:41,510 --> 00:25:47,600
quite a decent service there has been as

00:25:44,300 --> 00:25:49,940
as has been said by previous presenters

00:25:47,600 --> 00:25:52,700
what else can we do together in terms of

00:25:49,940 --> 00:25:55,100
sharing code so I'm all for creating

00:25:52,700 --> 00:25:57,590
resources such as pools of questions on

00:25:55,100 --> 00:26:00,320
particular topics putting them on secure

00:25:57,590 --> 00:26:03,020
sites and then have other folks download

00:26:00,320 --> 00:26:04,640
and give that feedback as well so that's

00:26:03,020 --> 00:26:08,000
one of my key points that I'd like to

00:26:04,640 --> 00:26:10,190
mention today thank you very much for

00:26:08,000 --> 00:26:12,010
hosting me today it's really appreciated

00:26:10,190 --> 00:26:27,610
Kiara

00:26:12,010 --> 00:26:29,860
I think oh there we go okay I'm on thank

00:26:27,610 --> 00:26:31,330
you Dave I've got time for a couple of

00:26:29,860 --> 00:26:35,919
questions is there any other question in

00:26:31,330 --> 00:26:38,559
the audience no oh yeah there's one I'll

00:26:35,919 --> 00:26:40,809
say otherwise I've got one no okay we'll

00:26:38,559 --> 00:26:43,480
go to the audience first can we have a

00:26:40,809 --> 00:26:46,480
preview of marking script just to see

00:26:43,480 --> 00:26:50,290
how it looks like behind the scenes yes

00:26:46,480 --> 00:26:52,960
most is hi and welcome that was my

00:26:50,290 --> 00:26:55,090
question good one okay let's go and have

00:26:52,960 --> 00:26:56,380
a look at this but I'll just just

00:26:55,090 --> 00:26:58,360
because it's on that particular screen

00:26:56,380 --> 00:27:00,549
at the moment we'll go and have a look

00:26:58,360 --> 00:27:05,650
at this particular question this is the

00:27:00,549 --> 00:27:08,380
one which emulates marking typical

00:27:05,650 --> 00:27:11,950
assessment with various boundaries there

00:27:08,380 --> 00:27:13,750
so this is the code that I've added to

00:27:11,950 --> 00:27:16,450
this so I'm looking this is the code

00:27:13,750 --> 00:27:18,580
inside code runner which initially looks

00:27:16,450 --> 00:27:21,280
at the student submitted code to say

00:27:18,580 --> 00:27:24,760
have they used particular variable names

00:27:21,280 --> 00:27:27,100
so inside my examples I've got first

00:27:24,760 --> 00:27:29,350
name last name and grade what I don't

00:27:27,100 --> 00:27:31,570
want students to do is to take those as

00:27:29,350 --> 00:27:33,370
literals and then use those as variable

00:27:31,570 --> 00:27:35,559
names straight inside their code because

00:27:33,370 --> 00:27:38,230
what I really want is good object naming

00:27:35,559 --> 00:27:39,520
examples from the students so I'll scan

00:27:38,230 --> 00:27:41,350
through their code just looking

00:27:39,520 --> 00:27:44,500
initially to see if they've copy and

00:27:41,350 --> 00:27:46,720
pasted my suggested names at that point

00:27:44,500 --> 00:27:50,020
and if they have their code is rejected

00:27:46,720 --> 00:27:52,419
I also look for the number the number of

00:27:50,020 --> 00:27:54,490
comments and potentially the length of

00:27:52,419 --> 00:27:56,440
comments now clearly I'm not analyzing

00:27:54,490 --> 00:27:58,600
what the students are saying inside the

00:27:56,440 --> 00:28:01,240
comment but I'm seeing some evidence of

00:27:58,600 --> 00:28:03,070
comments being inside there so I'll go

00:28:01,240 --> 00:28:06,370
through this process just doing a quick

00:28:03,070 --> 00:28:08,530
check of their code and if I found any

00:28:06,370 --> 00:28:10,030
issues I'll give them some feedback to

00:28:08,530 --> 00:28:12,910
say please address these points

00:28:10,030 --> 00:28:15,190
otherwise at that point that code is

00:28:12,910 --> 00:28:17,820
packaged with a test data and then sent

00:28:15,190 --> 00:28:20,530
off for execution and then it comes back

00:28:17,820 --> 00:28:22,090
if you're interested in any of this code

00:28:20,530 --> 00:28:23,670
that I've got there I'll quite happily

00:28:22,090 --> 00:28:30,210
send it to you

00:28:23,670 --> 00:28:31,950
thank you okay any last questions no

00:28:30,210 --> 00:28:33,390
great okay well thank you Dave for

00:28:31,950 --> 00:28:34,830
sharing that in the work that you're

00:28:33,390 --> 00:28:36,210
doing I think it's always good to see

00:28:34,830 --> 00:28:37,620
ways that we can automate some of what

00:28:36,210 --> 00:28:39,390
we have to do in class see that's fun

00:28:37,620 --> 00:28:41,640
give the conference and thank you

00:28:39,390 --> 00:28:42,810
everyone for them and coming in and

00:28:41,640 --> 00:28:45,320
hearing what they've has to say

00:28:42,810 --> 00:28:45,320

YouTube URL: https://www.youtube.com/watch?v=cGNRrTtufK4


