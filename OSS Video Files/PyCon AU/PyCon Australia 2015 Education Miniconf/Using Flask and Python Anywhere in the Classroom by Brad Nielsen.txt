Title: Using Flask and Python Anywhere in the Classroom by Brad Nielsen
Publication date: 2015-08-06
Playlist: PyCon Australia 2015 Education Miniconf
Description: 
	Flask is a python web server and web framework that makes server-side programming using Python easy. Flask has less 'magic' than Django and therefore makes server requests and responses easier to understand for students. Python Anywhere is a cloud server that allows you to easily set up a live Flask or Django application. Students can develop and debug code online without the hassle of installing and configuring their development environments. This session will look at how Flask and Python Anywhere was used in the classroom with a year 12 student cohort. 

PyCon Australia is the national conference for users of the Python Programming Language. In 2015, we're heading to Brisbane to bring together students, enthusiasts, and professionals with a love of Python from around Australia, and all around the World. 

July 31-August 4, Brisbane, Queensland, Australia
Captions: 
	00:00:09,920 --> 00:00:14,680
it was one of the interesting problems

00:00:11,900 --> 00:00:16,209
that can come up is

00:00:14,680 --> 00:00:18,190
in computing education is setting up

00:00:16,209 --> 00:00:20,320
local machines so there's lots of

00:00:18,190 --> 00:00:22,990
advantage to offline environments but it

00:00:20,320 --> 00:00:25,150
can be a barrier to entry and so the

00:00:22,990 --> 00:00:27,070
Python anywhere online service can help

00:00:25,150 --> 00:00:29,169
avoid those problems and I'm happy to

00:00:27,070 --> 00:00:31,630
introduce Brad Nielsen from Maris

00:00:29,169 --> 00:00:33,670
College Ashgrove as he covers how he's

00:00:31,630 --> 00:00:37,620
used Python anywhere in the fast web

00:00:33,670 --> 00:00:37,620
framework with his senior IPT students

00:00:40,600 --> 00:00:47,060
however my name is Brad I'm from Morris

00:00:44,510 --> 00:00:50,360
College I've been working there for two

00:00:47,060 --> 00:00:53,000
years now teaching IPT so I'm fairly new

00:00:50,360 --> 00:00:53,560
to the school and also the unit teaching

00:00:53,000 --> 00:00:57,080
IBT

00:00:53,560 --> 00:00:58,310
before that I'd had a education

00:00:57,080 --> 00:01:00,470
background in primary school and then

00:00:58,310 --> 00:01:03,290
I'd gone and done five years of IT work

00:01:00,470 --> 00:01:04,970
with an IT degree and then I decided I

00:01:03,290 --> 00:01:10,270
really missed education once I get back

00:01:04,970 --> 00:01:12,470
into it when I came to Morris College

00:01:10,270 --> 00:01:16,400
there was actually no programming being

00:01:12,470 --> 00:01:20,479
taught because the regular IPT teacher

00:01:16,400 --> 00:01:25,400
had retired and they'd convinced a

00:01:20,479 --> 00:01:26,960
business teacher to teach ipt - while

00:01:25,400 --> 00:01:29,930
they could actually find a person to

00:01:26,960 --> 00:01:31,790
actually teach the curriculum so I was

00:01:29,930 --> 00:01:33,680
very fortunate to get a job at Marist

00:01:31,790 --> 00:01:37,100
College but it was also a really

00:01:33,680 --> 00:01:40,610
difficult task because I had to pretty

00:01:37,100 --> 00:01:43,009
much revamp the whole curriculum and I'm

00:01:40,610 --> 00:01:46,369
happy to say that I'm starting to feel

00:01:43,009 --> 00:01:49,940
on top of things now I've got a scratch

00:01:46,369 --> 00:01:52,789
being taught with you sevens I've got

00:01:49,940 --> 00:01:54,679
year nines doing a bit of robotics and

00:01:52,789 --> 00:01:57,340
Lego Mindstorms and also learning how to

00:01:54,679 --> 00:02:00,289
create a website just using HTML and CSS

00:01:57,340 --> 00:02:03,830
my year tens i've got starting to learn

00:02:00,289 --> 00:02:06,500
Python and i've chosen to get them using

00:02:03,830 --> 00:02:10,610
code Academy to learn party where a

00:02:06,500 --> 00:02:14,060
bring-your-own-device school so issues

00:02:10,610 --> 00:02:15,530
of personally I'm not a Mac person so

00:02:14,060 --> 00:02:17,750
it's actually very difficult for me to

00:02:15,530 --> 00:02:21,200
assist my students if they're using a

00:02:17,750 --> 00:02:23,120
Mac and I've just found it easier to get

00:02:21,200 --> 00:02:24,770
into teaching programming rather than

00:02:23,120 --> 00:02:28,490
having to worry about configuration and

00:02:24,770 --> 00:02:30,650
settings so I was on the lookout for a

00:02:28,490 --> 00:02:33,350
programming language that was easy

00:02:30,650 --> 00:02:36,140
enough to teach my kids that there was a

00:02:33,350 --> 00:02:37,550
lot of online resources for and if

00:02:36,140 --> 00:02:42,680
possible something they could actually

00:02:37,550 --> 00:02:44,660
program online which drew me to Python I

00:02:42,680 --> 00:02:46,610
think the other thing that Python is

00:02:44,660 --> 00:02:48,080
like Peter touched on it lacks that

00:02:46,610 --> 00:02:50,870
complexity of some of the other

00:02:48,080 --> 00:02:53,270
languages you don't have to worry about

00:02:50,870 --> 00:02:59,150
curly braces and semicolons

00:02:53,270 --> 00:03:02,300
it's neat and it's organized and yeah I

00:02:59,150 --> 00:03:06,950
found really great online resources so

00:03:02,300 --> 00:03:08,780
I've got my year tens using Codecademy

00:03:06,950 --> 00:03:12,560
and they're using Python 2.7 on

00:03:08,780 --> 00:03:15,080
codecademy I like the idea of students

00:03:12,560 --> 00:03:17,480
not being constantly hampered by what

00:03:15,080 --> 00:03:21,680
I'm teaching in class so if they're

00:03:17,480 --> 00:03:23,600
using an online forum or exercises for

00:03:21,680 --> 00:03:25,040
their programming then I don't have to

00:03:23,600 --> 00:03:26,990
keep calling them back all the time and

00:03:25,040 --> 00:03:29,000
while I do do a lot of direct teaching a

00:03:26,990 --> 00:03:30,950
lot of times I'm actually letting the

00:03:29,000 --> 00:03:32,690
kids go through the courses they've got

00:03:30,950 --> 00:03:35,690
to produce a programming journal and

00:03:32,690 --> 00:03:37,340
then I'm often that sage on the side

00:03:35,690 --> 00:03:40,940
where I'm assisting them with their

00:03:37,340 --> 00:03:43,760
programming for myself I consider myself

00:03:40,940 --> 00:03:46,340
a good programmer but I'm not versed in

00:03:43,760 --> 00:03:48,890
all programming I'd say my Python

00:03:46,340 --> 00:03:51,110
knowledge is about 80% now and that's

00:03:48,890 --> 00:03:53,230
just been from years of that that

00:03:51,110 --> 00:03:56,150
experience of using it with my students

00:03:53,230 --> 00:03:59,330
it was more difficult in the senior year

00:03:56,150 --> 00:04:01,310
eleven year 12 I knew I wanted to get

00:03:59,330 --> 00:04:02,660
them into programming but for those

00:04:01,310 --> 00:04:04,430
students they had a very poor

00:04:02,660 --> 00:04:05,900
programming background because they

00:04:04,430 --> 00:04:09,230
hadn't done any programming prior to

00:04:05,900 --> 00:04:09,950
year 11 year 12 I found particularly my

00:04:09,230 --> 00:04:12,080
year 12

00:04:09,950 --> 00:04:16,040
last year it was incredibly difficult

00:04:12,080 --> 00:04:17,480
and they had I didn't want to alter

00:04:16,040 --> 00:04:19,520
their work program too much but they had

00:04:17,480 --> 00:04:22,580
web development as part of their their

00:04:19,520 --> 00:04:26,570
work program and so I tried to teach

00:04:22,580 --> 00:04:28,490
them a bit of PHP and PHP is one of my

00:04:26,570 --> 00:04:31,460
least favorite languages I find it very

00:04:28,490 --> 00:04:33,800
very difficult to learn but I like the

00:04:31,460 --> 00:04:34,970
idea that it combined their knowledge of

00:04:33,800 --> 00:04:36,440
programming with their database

00:04:34,970 --> 00:04:38,960
knowledge which is something they also

00:04:36,440 --> 00:04:41,570
learnt in year 11 so kind of a like the

00:04:38,960 --> 00:04:42,980
idea of their major projects come being

00:04:41,570 --> 00:04:45,950
a culmination of their knowledge in

00:04:42,980 --> 00:04:50,210
programming in databasing so I was on

00:04:45,950 --> 00:04:54,680
the lookout for a good Python based web

00:04:50,210 --> 00:04:55,970
programming language and I was also

00:04:54,680 --> 00:04:59,870
looking for something that could be set

00:04:55,970 --> 00:05:04,040
up easily because I know last year I'd

00:04:59,870 --> 00:05:05,570
set up a PHP web server and my students

00:05:04,040 --> 00:05:06,950
could only actually ever program when

00:05:05,570 --> 00:05:09,230
they're in the classroom

00:05:06,950 --> 00:05:12,650
my school would refuse to allow me to to

00:05:09,230 --> 00:05:14,300
make the PHP web server public so my

00:05:12,650 --> 00:05:17,600
students couldn't really program from

00:05:14,300 --> 00:05:20,480
home and that was a real nuisance

00:05:17,600 --> 00:05:23,150
real nuisance so I had to look for a way

00:05:20,480 --> 00:05:25,250
of creating it getting a web server that

00:05:23,150 --> 00:05:27,230
my students could program on and I also

00:05:25,250 --> 00:05:29,300
wanted to keep going on with that Python

00:05:27,230 --> 00:05:32,120
I wanted to keep building upon the

00:05:29,300 --> 00:05:35,690
Python that I had been teaching my my

00:05:32,120 --> 00:05:37,370
junior kids so I wanted to get that

00:05:35,690 --> 00:05:39,200
development process I didn't want to be

00:05:37,370 --> 00:05:43,730
teaching them a whole new programming

00:05:39,200 --> 00:05:45,080
language when it gets to year 12 so with

00:05:43,730 --> 00:05:48,650
a bit of discussion I've got a lot of

00:05:45,080 --> 00:05:52,480
friends who work in IT Nick included I

00:05:48,650 --> 00:05:57,800
heard about a Python web server called

00:05:52,480 --> 00:06:01,580
Django and I then decided last holidays

00:05:57,800 --> 00:06:05,210
that I'd try to learn Django and after

00:06:01,580 --> 00:06:07,310
about three days after about three days

00:06:05,210 --> 00:06:09,680
I finally developed something using

00:06:07,310 --> 00:06:12,800
Django and while you get that feeling of

00:06:09,680 --> 00:06:16,130
euphoria or that are moment that you

00:06:12,800 --> 00:06:19,130
finally got something working I also had

00:06:16,130 --> 00:06:23,510
this feeling of dread because if it took

00:06:19,130 --> 00:06:26,360
me three days to learn Django I knew

00:06:23,510 --> 00:06:29,660
that there was no way I could teach my

00:06:26,360 --> 00:06:31,670
students Django now that might be

00:06:29,660 --> 00:06:35,180
different for other people but for

00:06:31,670 --> 00:06:38,120
myself I just thought it was it was too

00:06:35,180 --> 00:06:42,380
far was too abstract

00:06:38,120 --> 00:06:44,840
I found Django a very abstract type of

00:06:42,380 --> 00:06:47,660
web framework it wasn't easy for me to

00:06:44,840 --> 00:06:50,750
program in it was difficult for me to

00:06:47,660 --> 00:06:53,350
see what was going on and I thought it

00:06:50,750 --> 00:06:57,800
was just too abstract for my students so

00:06:53,350 --> 00:07:00,860
I also came across this website and I

00:06:57,800 --> 00:07:04,400
was just having it up before this is by

00:07:00,860 --> 00:07:07,760
far the best website I found in terms of

00:07:04,400 --> 00:07:10,280
teaching students - at a higher level so

00:07:07,760 --> 00:07:13,460
for example people talking that play

00:07:10,280 --> 00:07:16,340
game before there's actually a whole lot

00:07:13,460 --> 00:07:19,970
of exercises here on this website that

00:07:16,340 --> 00:07:21,580
go through using play game 3 to actually

00:07:19,970 --> 00:07:24,410
develop the computing

00:07:21,580 --> 00:07:29,180
and I did that with my year 11 this year

00:07:24,410 --> 00:07:31,430
and it was a great success the other

00:07:29,180 --> 00:07:33,860
thing is on web development it talks

00:07:31,430 --> 00:07:35,570
about going through flask and Django so

00:07:33,860 --> 00:07:38,330
there's exercises there for students to

00:07:35,570 --> 00:07:40,970
do little things and then incrementally

00:07:38,330 --> 00:07:42,530
work up to something more detailed and

00:07:40,970 --> 00:07:43,880
using those tutorials I could then

00:07:42,530 --> 00:07:45,710
create an assessment where they had to

00:07:43,880 --> 00:07:47,570
use the the knowledge they learnt and

00:07:45,710 --> 00:07:50,030
skills they'd learn in those tutorials

00:07:47,570 --> 00:07:53,300
to develop something creative that was

00:07:50,030 --> 00:07:57,020
their own so I fully recommend this

00:07:53,300 --> 00:07:59,780
website and also just to include there's

00:07:57,020 --> 00:08:02,710
actually a whole lot of video tutorials

00:07:59,780 --> 00:08:04,910
that this particular developer has done

00:08:02,710 --> 00:08:07,430
where he actually talks through what

00:08:04,910 --> 00:08:09,560
he's doing fine I found the tutorials

00:08:07,430 --> 00:08:11,240
slightly long the video tutorials but I

00:08:09,560 --> 00:08:12,800
also recommend them to my students if

00:08:11,240 --> 00:08:14,180
they were having trouble maybe they

00:08:12,800 --> 00:08:15,250
should sit through the beer tutorial and

00:08:14,180 --> 00:08:22,130
just listen to this guy

00:08:15,250 --> 00:08:27,470
alright so okay so what are the benefits

00:08:22,130 --> 00:08:32,990
of flask I found flask made it really

00:08:27,470 --> 00:08:37,459
easy to understand how a website which

00:08:32,990 --> 00:08:40,010
is held online can be interacted with so

00:08:37,459 --> 00:08:42,620
in terms of server requests were you

00:08:40,010 --> 00:08:46,190
actually hit a URL it was very easy for

00:08:42,620 --> 00:08:48,500
the students to understand where they

00:08:46,190 --> 00:08:52,940
were going and and what they were doing

00:08:48,500 --> 00:08:56,110
and also in regards to sending or

00:08:52,940 --> 00:08:59,120
receiving form data so every website has

00:08:56,110 --> 00:09:01,670
if you create a text field or a text

00:08:59,120 --> 00:09:05,120
area you're creating some form data and

00:09:01,670 --> 00:09:07,310
I found flask was very very simple way

00:09:05,120 --> 00:09:10,670
of actually receiving and handling that

00:09:07,310 --> 00:09:14,600
form data flask also made it really easy

00:09:10,670 --> 00:09:16,610
to render dynamic content so if you have

00:09:14,600 --> 00:09:20,150
a website and it's being held on a

00:09:16,610 --> 00:09:23,570
server when you hit that server that

00:09:20,150 --> 00:09:26,150
server can then put data back into that

00:09:23,570 --> 00:09:30,290
website and website that web page very

00:09:26,150 --> 00:09:34,280
simply I found it very easy to place

00:09:30,290 --> 00:09:36,880
variables inside a web page

00:09:34,280 --> 00:09:39,080
and it was I thought it was a reasonably

00:09:36,880 --> 00:09:40,430
have reasonably low learning curve for

00:09:39,080 --> 00:09:44,680
my students I thought it was quite

00:09:40,430 --> 00:09:47,870
simple and it actually does that using

00:09:44,680 --> 00:09:50,750
the the another Python framework called

00:09:47,870 --> 00:09:52,280
ginger which is actually I hope I'm

00:09:50,750 --> 00:09:55,340
pronouncing that right ginger it's

00:09:52,280 --> 00:09:57,830
actually a template library where you

00:09:55,340 --> 00:10:00,050
can actually create a webpage that then

00:09:57,830 --> 00:10:02,600
inherits the HTML from another web page

00:10:00,050 --> 00:10:04,730
so it's it's actually very easy for

00:10:02,600 --> 00:10:06,650
students to make a full-blown website

00:10:04,730 --> 00:10:12,230
without having to worry too much about

00:10:06,650 --> 00:10:13,640
the HTML and also being able to revamp

00:10:12,230 --> 00:10:19,580
their website without having to worry

00:10:13,640 --> 00:10:21,710
too much about CSS flask was also it

00:10:19,580 --> 00:10:25,190
made it very easy to interact with an

00:10:21,710 --> 00:10:27,310
SQLite database there are other ways of

00:10:25,190 --> 00:10:33,280
interacting with other databases like

00:10:27,310 --> 00:10:37,850
MySQL or prose post SQL but I found

00:10:33,280 --> 00:10:40,130
SQLite is well it's pretty much embedded

00:10:37,850 --> 00:10:42,290
in the Python language it's very simple

00:10:40,130 --> 00:10:43,910
to create yourself a database it was

00:10:42,290 --> 00:10:46,690
very easy to get that data from the

00:10:43,910 --> 00:10:50,000
database and then put it into a web page

00:10:46,690 --> 00:10:51,860
and then finally flask had very simple

00:10:50,000 --> 00:10:54,620
session handling so rather than having

00:10:51,860 --> 00:10:57,290
to worry about cookies and and how I

00:10:54,620 --> 00:10:59,660
wrote cookies to pages and stuff it was

00:10:57,290 --> 00:11:04,240
actually really it had a really easy

00:10:59,660 --> 00:11:09,620
mechanism for saving data about a user

00:11:04,240 --> 00:11:12,080
okay so I just this is by no means all

00:11:09,620 --> 00:11:15,020
my code or anything I just thought I'd

00:11:12,080 --> 00:11:18,710
just show you how simple it was and

00:11:15,020 --> 00:11:21,170
again I've spent a few hours learning

00:11:18,710 --> 00:11:24,310
this so it might not make sense to you

00:11:21,170 --> 00:11:27,440
straight away but what I'm trying to

00:11:24,310 --> 00:11:29,270
pass you is that it's actually it is

00:11:27,440 --> 00:11:32,270
isn't too difficult for students to

00:11:29,270 --> 00:11:35,540
understand in terms of flask there's one

00:11:32,270 --> 00:11:38,210
web file which actually handles all the

00:11:35,540 --> 00:11:42,770
server requests and so what happens is

00:11:38,210 --> 00:11:45,440
that the actual the actual page which is

00:11:42,770 --> 00:11:48,290
a Python file has directives

00:11:45,440 --> 00:11:52,339
where if a student goes

00:11:48,290 --> 00:11:55,220
or anyone goes to the URL with say slash

00:11:52,339 --> 00:11:56,839
home it goes to that part of the pathway

00:11:55,220 --> 00:12:01,190
code and then runs the code directly

00:11:56,839 --> 00:12:04,850
below so you would actually have this

00:12:01,190 --> 00:12:09,199
block of code for your various pages in

00:12:04,850 --> 00:12:12,860
your website and it handles all those

00:12:09,199 --> 00:12:16,880
pages and it actually chooses what HTML

00:12:12,860 --> 00:12:18,560
to render at the very simplest what I

00:12:16,880 --> 00:12:26,139
could do is actually just have below

00:12:18,560 --> 00:12:29,380
here and I could just go return HTML

00:12:26,139 --> 00:12:32,630
HTML and whatever I actually type in

00:12:29,380 --> 00:12:35,509
will actually appear as a web page at

00:12:32,630 --> 00:12:37,759
that URL so it's actually it's actually

00:12:35,509 --> 00:12:39,980
a really easy way for students to

00:12:37,759 --> 00:12:42,589
understand how the server is actually

00:12:39,980 --> 00:12:47,560
dynamically creating the HTML that they

00:12:42,589 --> 00:12:50,779
that they're looking at there's two main

00:12:47,560 --> 00:12:53,870
there's two main commands in flask and

00:12:50,779 --> 00:12:56,089
that's either redirect or render

00:12:53,870 --> 00:12:58,490
template render template basically says

00:12:56,089 --> 00:13:02,600
go to this HTML page and then show that

00:12:58,490 --> 00:13:05,769
to the user redirect so render template

00:13:02,600 --> 00:13:08,510
is is show that HTML page to the user

00:13:05,769 --> 00:13:10,880
redirect is go to another directive and

00:13:08,510 --> 00:13:12,709
now run that code so if they haven't

00:13:10,880 --> 00:13:13,970
actually logged in all I'm doing is I'm

00:13:12,709 --> 00:13:20,329
going to redirect them to the login page

00:13:13,970 --> 00:13:22,100
and that's that's how easy it is now it

00:13:20,329 --> 00:13:23,930
might seem difficult moment but Python

00:13:22,100 --> 00:13:26,589
anywhere combined with this makes it

00:13:23,930 --> 00:13:26,589
really really easy

00:13:29,980 --> 00:13:37,970
form data and session handling with your

00:13:35,720 --> 00:13:41,560
actual session like writing cookies and

00:13:37,970 --> 00:13:47,090
stuff that's as easy as creating a

00:13:41,560 --> 00:13:50,300
dictionary putting in a value and giving

00:13:47,090 --> 00:13:52,910
it a variable as soon as you say session

00:13:50,300 --> 00:13:55,310
and then you can create your own key and

00:13:52,910 --> 00:13:57,830
you say equals something that will

00:13:55,310 --> 00:14:01,460
actually automatically write something

00:13:57,830 --> 00:14:02,990
to the cookie in the users page so

00:14:01,460 --> 00:14:05,270
rather than having to worry about

00:14:02,990 --> 00:14:09,520
complex JavaScript I'm just doing that

00:14:05,270 --> 00:14:11,780
with Python in terms of receiving data

00:14:09,520 --> 00:14:15,590
again you seem to follow this kind of

00:14:11,780 --> 00:14:18,230
syntax you define the method and then

00:14:15,590 --> 00:14:21,440
it's as easy as saying the variable is

00:14:18,230 --> 00:14:23,450
equal to request dot form username so if

00:14:21,440 --> 00:14:25,820
there was a text field called user name

00:14:23,450 --> 00:14:28,040
on that HTML page and they've entered

00:14:25,820 --> 00:14:30,350
something you to that field then in

00:14:28,040 --> 00:14:34,040
terms of actually responding to that

00:14:30,350 --> 00:14:35,510
request I can get the data so I can get

00:14:34,040 --> 00:14:37,400
that data and then save it to a database

00:14:35,510 --> 00:14:41,320
or I can get that data and then check it

00:14:37,400 --> 00:14:43,880
with data that's or inside the database

00:14:41,320 --> 00:14:46,940
one thing I didn't cover is how easy it

00:14:43,880 --> 00:14:48,410
is to pass variables into a page so you

00:14:46,940 --> 00:14:50,780
can see here I've got return render

00:14:48,410 --> 00:14:53,960
template hello so it's going to look for

00:14:50,780 --> 00:14:56,380
the hello page and then I've created

00:14:53,960 --> 00:14:59,750
something called error is equal to error

00:14:56,380 --> 00:15:03,860
that error is just the value of none at

00:14:59,750 --> 00:15:07,670
the moment and if I pass that that's the

00:15:03,860 --> 00:15:09,260
name of the variable that will be

00:15:07,670 --> 00:15:11,780
received into the page so the page will

00:15:09,260 --> 00:15:14,000
actually can basically output the error

00:15:11,780 --> 00:15:17,870
or it could even if I just wanted to

00:15:14,000 --> 00:15:22,460
type in I could type in error is equal

00:15:17,870 --> 00:15:25,760
to no error as a string or I could pass

00:15:22,460 --> 00:15:28,160
it as a list in fact it'll take any data

00:15:25,760 --> 00:15:31,690
type I can pass that into the page and

00:15:28,160 --> 00:15:31,690
the page will be able to receive it

00:15:33,880 --> 00:15:41,330
render template this is an example in

00:15:39,260 --> 00:15:43,580
terms of asking the server to do

00:15:41,330 --> 00:15:46,340
something you just have to use this

00:15:43,580 --> 00:15:49,820
curly brace in a percentage symbol this

00:15:46,340 --> 00:15:53,270
here says extend layout dot HTML now I

00:15:49,820 --> 00:15:55,850
gave all my students in year 12 a layout

00:15:53,270 --> 00:15:59,090
page and then I asked them to then

00:15:55,850 --> 00:16:01,040
extend those those pages so it actually

00:15:59,090 --> 00:16:03,560
takes all the HTML that was in layout

00:16:01,040 --> 00:16:06,200
shows that to the screen and then

00:16:03,560 --> 00:16:08,660
there's certain areas inside layout that

00:16:06,200 --> 00:16:11,270
are defined as content and all that

00:16:08,660 --> 00:16:14,930
happens is when it hits this page it's

00:16:11,270 --> 00:16:17,540
going to put in all that all that HTML

00:16:14,930 --> 00:16:20,900
there will actually go inside my layout

00:16:17,540 --> 00:16:23,270
page so the shooter's aren't being

00:16:20,900 --> 00:16:25,820
bogged down by having to do massive HTML

00:16:23,270 --> 00:16:28,340
editing and I actually made that even

00:16:25,820 --> 00:16:29,900
easier for them later on too you'll

00:16:28,340 --> 00:16:32,210
notice that where it's got double curly

00:16:29,900 --> 00:16:33,980
brace error that's where you're actually

00:16:32,210 --> 00:16:37,340
calling a variable so the variable is

00:16:33,980 --> 00:16:40,430
actually going into the page and I could

00:16:37,340 --> 00:16:42,710
pass any variable from my server into

00:16:40,430 --> 00:16:51,710
that page so that's what makes it so

00:16:42,710 --> 00:16:53,690
easy the SQLite database connection was

00:16:51,710 --> 00:16:56,020
quite easy to set up I'm not probably

00:16:53,690 --> 00:16:59,420
going to go into that too much today

00:16:56,020 --> 00:17:01,400
because it is a different topic area

00:16:59,420 --> 00:17:03,320
although I would say there's SQLite

00:17:01,400 --> 00:17:05,510
tutorials on that web page that we

00:17:03,320 --> 00:17:08,589
looked at so there's actually if you go

00:17:05,510 --> 00:17:10,940
along your client SQLite tutorials I

00:17:08,589 --> 00:17:13,760
just found it really easy because in

00:17:10,940 --> 00:17:17,480
three lines of code I could actually go

00:17:13,760 --> 00:17:19,760
to the SQLite database call out an SQL

00:17:17,480 --> 00:17:21,860
query which is different from django

00:17:19,760 --> 00:17:23,870
django doesn't let you do SQL queries

00:17:21,860 --> 00:17:26,540
you're actually having to go through the

00:17:23,870 --> 00:17:29,120
interface layer this one actually lets

00:17:26,540 --> 00:17:31,040
you go through an SQL query drew out the

00:17:29,120 --> 00:17:33,740
the data you want and then I can print

00:17:31,040 --> 00:17:36,380
that to the screen so it's as simple as

00:17:33,740 --> 00:17:39,170
saying open connection run this SQL

00:17:36,380 --> 00:17:41,210
query get the data close the connection

00:17:39,170 --> 00:17:44,140
and then I use that data and I pump it

00:17:41,210 --> 00:17:44,140
back into my web page

00:17:47,529 --> 00:17:54,200
yeah I also mucked around with MySQL a

00:17:50,990 --> 00:17:57,559
bit because I in IT and in other

00:17:54,200 --> 00:18:00,649
occupations I've used MySQL so it's

00:17:57,559 --> 00:18:02,480
something that I really like but I

00:18:00,649 --> 00:18:05,000
actually found it quite difficult to use

00:18:02,480 --> 00:18:07,460
flask with MySQL then what changed later

00:18:05,000 --> 00:18:10,309
on but I found that you had to actually

00:18:07,460 --> 00:18:13,549
install kind of like an interfacing

00:18:10,309 --> 00:18:16,250
library just to run MySQL commands

00:18:13,549 --> 00:18:17,720
whereas SQLite it was it's actually

00:18:16,250 --> 00:18:19,520
built into the language so it was

00:18:17,720 --> 00:18:27,130
actually really easy to use an SQLite

00:18:19,520 --> 00:18:30,049
database so using flask was really easy

00:18:27,130 --> 00:18:32,600
now finding the environment the students

00:18:30,049 --> 00:18:36,080
can easily develop on outside of school

00:18:32,600 --> 00:18:37,909
was hard and I'm not quite sure how I

00:18:36,080 --> 00:18:39,919
stumbled upon it because here comes

00:18:37,909 --> 00:18:41,450
these I probably when you come to these

00:18:39,919 --> 00:18:43,580
conferences you learn new things all the

00:18:41,450 --> 00:18:45,649
time and when you're googling the

00:18:43,580 --> 00:18:47,360
internet there's so much out there it's

00:18:45,649 --> 00:18:50,539
it's really difficult to know which way

00:18:47,360 --> 00:18:54,649
to go anyway I know when I was mucking

00:18:50,539 --> 00:18:58,700
around using Django or flask with Visual

00:18:54,649 --> 00:19:00,830
Studio it was letting me try to publish

00:18:58,700 --> 00:19:02,840
to Windows Azur and I didn't really know

00:19:00,830 --> 00:19:04,240
much about Windows Azure I'm know if I'm

00:19:02,840 --> 00:19:07,490
saying that right am I saying that right

00:19:04,240 --> 00:19:09,500
Windows Azure I'm not even sure I'm

00:19:07,490 --> 00:19:11,929
saying it right but I then had a look

00:19:09,500 --> 00:19:13,970
and researched it I googled it up found

00:19:11,929 --> 00:19:16,130
out what it was and I found out you can

00:19:13,970 --> 00:19:19,220
actually on Windows Azure you can

00:19:16,130 --> 00:19:22,010
actually create a development

00:19:19,220 --> 00:19:23,679
environment a server environment of

00:19:22,010 --> 00:19:26,990
flask or Django

00:19:23,679 --> 00:19:27,890
however those a subscription to it and I

00:19:26,990 --> 00:19:31,130
wasn't willing to pay the subscription

00:19:27,890 --> 00:19:35,360
so I thought I'd keep looking anyway arm

00:19:31,130 --> 00:19:37,870
hence I found Python anywhere and the

00:19:35,360 --> 00:19:42,230
people at Python anywhere were amazing

00:19:37,870 --> 00:19:45,440
just they basically set up the profiles

00:19:42,230 --> 00:19:48,020
of all my students Python anywhere is a

00:19:45,440 --> 00:19:51,440
cloud service but it allows you to

00:19:48,020 --> 00:19:55,039
create a server environment so you can

00:19:51,440 --> 00:19:56,540
run your own server and you could

00:19:55,039 --> 00:19:58,940
actually develop your code

00:19:56,540 --> 00:20:01,040
online you can actually then see the

00:19:58,940 --> 00:20:02,570
errors from your code which is perfect

00:20:01,040 --> 00:20:03,890
because that way I didn't have to worry

00:20:02,570 --> 00:20:05,870
about the development environments of my

00:20:03,890 --> 00:20:07,550
students I could get my students to

00:20:05,870 --> 00:20:10,310
develop their code and they're only

00:20:07,550 --> 00:20:12,140
using that one Python file for their

00:20:10,310 --> 00:20:15,140
Python code and then I could find the

00:20:12,140 --> 00:20:17,090
errors and what even mattered it I'll

00:20:15,140 --> 00:20:19,220
show you in a second but what even made

00:20:17,090 --> 00:20:21,710
it better was the fact that Python

00:20:19,220 --> 00:20:23,600
anywhere their developers allowed me to

00:20:21,710 --> 00:20:25,940
be able to go into my students code and

00:20:23,600 --> 00:20:28,100
have a look I could see what it was

00:20:25,940 --> 00:20:29,810
going to look like I could actually have

00:20:28,100 --> 00:20:31,430
a look at their errors and I could

00:20:29,810 --> 00:20:35,750
actually have a look at their code which

00:20:31,430 --> 00:20:38,530
is perfect for a teacher so I'll talk

00:20:35,750 --> 00:20:42,500
about bootstrap and lay it out later on

00:20:38,530 --> 00:20:44,390
it's not essential so this is an example

00:20:42,500 --> 00:20:46,040
of Python anywhere and that's not the

00:20:44,390 --> 00:20:49,010
front page but once you've actually

00:20:46,040 --> 00:20:51,550
created an account which is free you'll

00:20:49,010 --> 00:20:53,840
then able to create a web application

00:20:51,550 --> 00:20:57,140
now in a free account you can only

00:20:53,840 --> 00:20:59,200
create one web application so I won't be

00:20:57,140 --> 00:21:01,820
able to probably say I can't do it okay

00:20:59,200 --> 00:21:05,030
saying I have to upgrade but once you

00:21:01,820 --> 00:21:06,950
click add a new web application you can

00:21:05,030 --> 00:21:11,180
actually then choose either or flask or

00:21:06,950 --> 00:21:14,450
Django and once you've set that up you

00:21:11,180 --> 00:21:17,240
are given a URL so this is my URL here

00:21:14,450 --> 00:21:19,280
and again it's students can see a live

00:21:17,240 --> 00:21:21,200
web site rather than having to worry

00:21:19,280 --> 00:21:23,120
about developing locally where they

00:21:21,200 --> 00:21:27,320
can't share their work this is actually

00:21:23,120 --> 00:21:31,910
a live web site so by clicking that I

00:21:27,320 --> 00:21:35,690
can see the live web site you also find

00:21:31,910 --> 00:21:38,480
you have log files so the access log

00:21:35,690 --> 00:21:40,220
will show show you which IP addresses

00:21:38,480 --> 00:21:43,730
have actually tried so you access your

00:21:40,220 --> 00:21:46,840
website the error log will actually show

00:21:43,730 --> 00:21:49,870
you any Python errors that occur and

00:21:46,840 --> 00:21:51,710
then I'm not sure about the server log

00:21:49,870 --> 00:21:56,060
I'm not a I'm not a network

00:21:51,710 --> 00:21:57,890
administrator I'm afraid and then if you

00:21:56,060 --> 00:22:01,340
want you could even password protect it

00:21:57,890 --> 00:22:03,500
so other people can access then you've

00:22:01,340 --> 00:22:06,020
got files the files are installed by

00:22:03,500 --> 00:22:07,490
default which is again made it easy I

00:22:06,020 --> 00:22:09,800
didn't have to worry about students

00:22:07,490 --> 00:22:10,490
creating files they can create files

00:22:09,800 --> 00:22:13,040
later on

00:22:10,490 --> 00:22:15,400
as they extend their templates but the

00:22:13,040 --> 00:22:17,480
files are created by default and

00:22:15,400 --> 00:22:20,450
primarily what they're doing is they're

00:22:17,480 --> 00:22:24,620
going to my site and they've got this

00:22:20,450 --> 00:22:28,970
flask underscore app file and that's

00:22:24,620 --> 00:22:31,370
like I was showing you before so you've

00:22:28,970 --> 00:22:35,150
got these there I've created other

00:22:31,370 --> 00:22:40,730
functions here you've got these

00:22:35,150 --> 00:22:43,820
directives and every time someone tries

00:22:40,730 --> 00:22:48,140
to go to your website just using these

00:22:43,820 --> 00:22:50,510
links perhaps it'll actually just run

00:22:48,140 --> 00:22:55,910
that directive so it goes that directive

00:22:50,510 --> 00:22:57,679
and runs the code directly blog I tried

00:22:55,910 --> 00:23:06,320
to go into aadmi it's saying not

00:22:57,679 --> 00:23:08,480
redirect me back to logging page here

00:23:06,320 --> 00:23:14,260
you can see an example of me using

00:23:08,480 --> 00:23:17,330
SQLite I connected to a database I

00:23:14,260 --> 00:23:19,970
execute a command and then I fetch all

00:23:17,330 --> 00:23:24,170
the records and then I can pump those

00:23:19,970 --> 00:23:26,090
records back into a page you can also

00:23:24,170 --> 00:23:29,030
put more than one variable into a page

00:23:26,090 --> 00:23:31,520
and see here I've put in a variable

00:23:29,030 --> 00:23:34,550
called active users I put in a variable

00:23:31,520 --> 00:23:37,730
called error I've put an error variable

00:23:34,550 --> 00:23:39,290
called game so I'm able to pass those

00:23:37,730 --> 00:23:46,490
variables to the page in the page and

00:23:39,290 --> 00:23:50,270
then the autumn Minds a lot more complex

00:23:46,490 --> 00:23:52,640
than what my students did and I also

00:23:50,270 --> 00:23:54,050
mucked around with hashing too I found

00:23:52,640 --> 00:23:57,200
that you can actually hashed passwords

00:23:54,050 --> 00:24:01,160
using this this library it's something

00:23:57,200 --> 00:24:02,570
that I I'm trying to get it so that it

00:24:01,160 --> 00:24:05,540
makes it a bit easier when it comes to

00:24:02,570 --> 00:24:07,870
you twelve so I'm thinking the last term

00:24:05,540 --> 00:24:12,559
of year 11 I'm going to be looking at

00:24:07,870 --> 00:24:14,240
encryption and database security so I'm

00:24:12,559 --> 00:24:15,679
actually thinking even now that I might

00:24:14,240 --> 00:24:19,580
get my students adore a really simple

00:24:15,679 --> 00:24:22,250
exercise maybe one page on flask and

00:24:19,580 --> 00:24:25,300
just get them to make sure they've

00:24:22,250 --> 00:24:25,300
encrypted their password

00:24:26,240 --> 00:24:30,919
in terms of teaching with a class I had

00:24:28,820 --> 00:24:33,139
to give them some code because they'll

00:24:30,919 --> 00:24:35,929
going to struggle if I didn't certainly

00:24:33,139 --> 00:24:37,999
some example code so what I did was for

00:24:35,929 --> 00:24:41,119
every student I gave them my login

00:24:37,999 --> 00:24:42,830
script and then I told them that is a

00:24:41,119 --> 00:24:45,320
minimum requirement for their projects

00:24:42,830 --> 00:24:47,419
as a minimum requirement their projects

00:24:45,320 --> 00:24:50,119
they had to actually develop a

00:24:47,419 --> 00:24:51,980
registration page with a registration

00:24:50,119 --> 00:24:54,950
script that could then save to the

00:24:51,980 --> 00:24:57,529
database and I also told them they had

00:24:54,950 --> 00:24:59,809
to have an admin page where only the

00:24:57,529 --> 00:25:04,879
admin could go in and actually see which

00:24:59,809 --> 00:25:07,190
users were actually in their database so

00:25:04,879 --> 00:25:09,590
I that was the minimum requirement and

00:25:07,190 --> 00:25:12,610
then from there I said now you go forth

00:25:09,590 --> 00:25:17,720
and you make something creative and

00:25:12,610 --> 00:25:20,710
something that's going to amaze me just

00:25:17,720 --> 00:25:20,710
to show you mine

00:25:29,790 --> 00:25:36,270
okay so this is just my basic thing I

00:25:34,230 --> 00:25:37,500
haven't fully developed the game lobby I

00:25:36,270 --> 00:25:40,820
was trying to show them they could make

00:25:37,500 --> 00:25:40,820
a multiplayer game if they wanted to

00:25:41,450 --> 00:25:45,000
which I which I did

00:25:43,290 --> 00:25:50,910
so I've grabbed my own little noughts

00:25:45,000 --> 00:25:56,760
and crosses game then you get a register

00:25:50,910 --> 00:25:59,070
a page so that's mine but mine's more

00:25:56,760 --> 00:26:00,540
advanced than theirs I was a bit

00:25:59,070 --> 00:26:01,470
disappointed some white students I would

00:26:00,540 --> 00:26:03,420
have liked to have seen like a

00:26:01,470 --> 00:26:05,670
multiplayer game but it didn't happen

00:26:03,420 --> 00:26:08,880
for whatever reason most of them stuck

00:26:05,670 --> 00:26:14,340
to making a discussion forum others had

00:26:08,880 --> 00:26:15,900
like a product information place so I'll

00:26:14,340 --> 00:26:17,510
just show you there's just if you'd like

00:26:15,900 --> 00:26:20,370
I could I said you can go across here

00:26:17,510 --> 00:26:22,320
all I did was like once I registered I

00:26:20,370 --> 00:26:25,050
said the Python anywhere hey I'm on the

00:26:22,320 --> 00:26:26,310
teacher and they said oh what's the list

00:26:25,050 --> 00:26:28,320
of your students the governing list of

00:26:26,310 --> 00:26:29,580
my students and they they made it there

00:26:28,320 --> 00:26:32,730
and they set up all the students

00:26:29,580 --> 00:26:34,110
accounts just using the email address so

00:26:32,730 --> 00:26:35,910
my students when they were developing

00:26:34,110 --> 00:26:39,000
this they just had to go there their

00:26:35,910 --> 00:26:40,770
email address and I think they'll give

00:26:39,000 --> 00:26:43,170
them a common password but they all got

00:26:40,770 --> 00:26:46,200
emails basically saying the details but

00:26:43,170 --> 00:26:47,910
you can see here all my students are

00:26:46,200 --> 00:26:49,830
there I can actually switch into their

00:26:47,910 --> 00:26:56,990
code which I was just really really

00:26:49,830 --> 00:26:56,990
impressed with so one of my students

00:27:04,490 --> 00:27:08,360
one of my students must be sick of

00:27:06,440 --> 00:27:13,280
referencing because he decided to make

00:27:08,360 --> 00:27:16,060
his own APA referencing database so this

00:27:13,280 --> 00:27:16,060
is his website

00:27:20,330 --> 00:27:23,300
and you can see as soon as you log in

00:27:22,370 --> 00:27:24,920
you get to see the list of the

00:27:23,300 --> 00:27:28,070
references that you came up with that

00:27:24,920 --> 00:27:34,460
you saved in the database you go to

00:27:28,070 --> 00:27:37,220
generator add a reference and if you

00:27:34,460 --> 00:27:40,460
were administrator I actually made it

00:27:37,220 --> 00:27:42,700
initially I gave all my students just to

00:27:40,460 --> 00:27:47,330
show you when you actually set up a

00:27:42,700 --> 00:27:48,880
SQLite database all that happens is you

00:27:47,330 --> 00:27:53,390
drop in a file

00:27:48,880 --> 00:27:56,750
SQLite SQLite and I gave them all of our

00:27:53,390 --> 00:27:59,060
test file and in that test file along

00:27:56,750 --> 00:28:01,520
with my login page I gave them like a

00:27:59,060 --> 00:28:03,590
just a simple users database that they

00:28:01,520 --> 00:28:06,170
had to then change and I made myself

00:28:03,590 --> 00:28:07,970
I just had an admin admin most of my

00:28:06,170 --> 00:28:09,410
students ended up then changing admin

00:28:07,970 --> 00:28:10,820
admin which I didn't actually want them

00:28:09,410 --> 00:28:12,110
to do because I won't be able to quickly

00:28:10,820 --> 00:28:14,780
go through and actually check their

00:28:12,110 --> 00:28:18,200
their websites out from the

00:28:14,780 --> 00:28:20,780
administrators view now this is probably

00:28:18,200 --> 00:28:23,240
the only annoying thing and maybe

00:28:20,780 --> 00:28:26,350
they'll change this one day but within

00:28:23,240 --> 00:28:28,850
SQLite database I can't view this online

00:28:26,350 --> 00:28:30,500
so to actually view the database I

00:28:28,850 --> 00:28:35,120
actually have to download the database

00:28:30,500 --> 00:28:37,100
to my computer and I also found a couple

00:28:35,120 --> 00:28:38,900
of really easy GUI tools that will

00:28:37,100 --> 00:28:42,470
actually allow you to edit an SQLite

00:28:38,900 --> 00:28:46,400
database so one is SQL expert personal

00:28:42,470 --> 00:28:49,670
again I was looking for free and another

00:28:46,400 --> 00:28:53,390
one was SQLite developer both were free

00:28:49,670 --> 00:28:56,210
software's and I actually got the IT

00:28:53,390 --> 00:29:00,110
guys to install us on our computers so

00:28:56,210 --> 00:29:04,550
this is an example of my database I gave

00:29:00,110 --> 00:29:06,860
them this test user database and then

00:29:04,550 --> 00:29:08,330
they could create other tables so they

00:29:06,860 --> 00:29:11,810
had to create a table for their forum

00:29:08,330 --> 00:29:13,970
and that kind of stuff but it was

00:29:11,810 --> 00:29:18,740
actually pretty easy using this tool to

00:29:13,970 --> 00:29:20,240
actually make yourself new so you could

00:29:18,740 --> 00:29:21,860
actually go into design and add new

00:29:20,240 --> 00:29:25,450
fields and that kind of stuff very

00:29:21,860 --> 00:29:25,450
similar to MySQL

00:29:27,360 --> 00:29:34,110
you know some I forgot Nick about a

00:29:31,419 --> 00:29:37,090
minute all right

00:29:34,110 --> 00:29:39,639
just quickly I wanted my students not to

00:29:37,090 --> 00:29:41,679
be doing I thought you were getting me a

00:29:39,639 --> 00:29:44,220
five-minute warning or is that a one

00:29:41,679 --> 00:29:50,619
minute to the five minute warning I

00:29:44,220 --> 00:29:51,759
missed it all right say just quickly so

00:29:50,619 --> 00:29:55,419
the more students didn't have to worry

00:29:51,759 --> 00:30:00,450
about CSS or HTML

00:29:55,419 --> 00:30:03,669
I also found I got them using bootstrap

00:30:00,450 --> 00:30:06,190
so bootstraps just like a CSS framework

00:30:03,669 --> 00:30:08,529
and you can actually there's a couple of

00:30:06,190 --> 00:30:09,850
really good editors online so I've

00:30:08,529 --> 00:30:11,559
actually got this one you can actually

00:30:09,850 --> 00:30:14,440
just drag and drop your components and

00:30:11,559 --> 00:30:16,090
this one you can actually just online

00:30:14,440 --> 00:30:19,720
you can actually adjust the colors and

00:30:16,090 --> 00:30:23,049
the look or even download a theme and we

00:30:19,720 --> 00:30:27,940
have to do is in terms of bootstrap I'll

00:30:23,049 --> 00:30:32,409
just show you my layout template this is

00:30:27,940 --> 00:30:37,749
my layout code in terms of bootstrap all

00:30:32,409 --> 00:30:41,139
I had to do was linking those two lines

00:30:37,749 --> 00:30:43,889
of code and once I did that the students

00:30:41,139 --> 00:30:43,889
could actually just

00:30:50,029 --> 00:30:52,090

YouTube URL: https://www.youtube.com/watch?v=pIh7G8RG6JM


