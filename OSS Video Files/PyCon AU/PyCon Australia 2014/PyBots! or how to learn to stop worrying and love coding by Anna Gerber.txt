Title: PyBots! or how to learn to stop worrying and love coding by Anna Gerber
Publication date: 2014-08-05
Playlist: PyCon Australia 2014
Description: 
	In this talk, Anna will argue how physical computing — building interactive systems such as robots that sense and act upon, or respond to the physical world — provides an ideal application space for teaching and learning programming concepts and problem solving; that appeals to a diverse audience; and that can provide a positive introduction to the world of open source software and hardware.

Drawing on her experiences teaching introductory programming with Arduino-based robots, Anna will step through a tutorial demonstrating how to develop a mobile PyBot - a robot programmed using Python and the Firmata protocol, and will provide tips to help you or the apprentice coders in your life to take the first steps towards a lifetime of loving to code.

PyCon Australia is the national conference for users of the Python Programming Language. In August 2014, we're heading to Brisbane to bring together students, enthusiasts, and professionals with a love of Python from around Australia, and all around the World. 

August 1-5, Brisbane, Queensland, Australia
Captions: 
	00:00:08,460 --> 00:00:12,960
so hi everyone just to give you an idea

00:00:11,490 --> 00:00:15,660
of my background I'm a software engineer

00:00:12,960 --> 00:00:18,180
and a technical project manager at the

00:00:15,660 --> 00:00:20,070
University of Queensland but I've been

00:00:18,180 --> 00:00:24,420
part of the maker community here in

00:00:20,070 --> 00:00:26,190
Brisbane for quite some time and I will

00:00:24,420 --> 00:00:28,619
admit upfront that although I do

00:00:26,190 --> 00:00:30,600
occasionally still dabble in Python I'm

00:00:28,619 --> 00:00:34,410
actually more of a node.js developer

00:00:30,600 --> 00:00:36,270
these days please don't hate me so do

00:00:34,410 --> 00:00:38,699
please forgive me if some of my code

00:00:36,270 --> 00:00:40,680
looks a little bit weird or if there's a

00:00:38,699 --> 00:00:42,630
stray semicolon or bracket in there

00:00:40,680 --> 00:00:44,970
somewhere because habits are hard to

00:00:42,630 --> 00:00:48,829
break but what I'm going to talk about

00:00:44,970 --> 00:00:52,380
today applies regardless of language so

00:00:48,829 --> 00:00:53,910
for the past 15 years I guess I've been

00:00:52,380 --> 00:00:56,910
involved in teaching introductory

00:00:53,910 --> 00:00:58,440
programming first as a tutor at the

00:00:56,910 --> 00:01:00,059
University of Queensland and then it's a

00:00:58,440 --> 00:01:02,370
technical trainer at a research

00:01:00,059 --> 00:01:04,170
organization and more recently through

00:01:02,370 --> 00:01:05,729
involvement with community groups so

00:01:04,170 --> 00:01:08,759
things like govhack and the Open

00:01:05,729 --> 00:01:12,900
Knowledge Foundation and one thing that

00:01:08,759 --> 00:01:16,080
I've discovered I guess from teaching

00:01:12,900 --> 00:01:18,240
people how to code now is that I was

00:01:16,080 --> 00:01:21,240
lucky to be born at the right time so I

00:01:18,240 --> 00:01:24,600
learned how to code at school in the

00:01:21,240 --> 00:01:27,090
1980s and I've basically grown up and

00:01:24,600 --> 00:01:29,010
matured as a developer as the industry

00:01:27,090 --> 00:01:30,630
and it's the internet kind of grew and

00:01:29,010 --> 00:01:32,670
matured as well so it's been pretty easy

00:01:30,630 --> 00:01:35,909
for me to keep track of new developments

00:01:32,670 --> 00:01:38,790
and to learn new things and to build on

00:01:35,909 --> 00:01:40,500
my knowledge as new things come out but

00:01:38,790 --> 00:01:45,119
for people who are learning how to code

00:01:40,500 --> 00:01:48,240
from scratch now the situation is really

00:01:45,119 --> 00:01:52,009
quite different for them and learning

00:01:48,240 --> 00:01:54,420
how to code can be pretty exhausting

00:01:52,009 --> 00:01:56,420
there's almost too much information

00:01:54,420 --> 00:01:58,650
available people are inundated with

00:01:56,420 --> 00:02:01,100
different choices in terms of what

00:01:58,650 --> 00:02:04,829
language what framework what library

00:02:01,100 --> 00:02:06,990
best practices opinions it's difficult

00:02:04,829 --> 00:02:09,119
to know where to start with learning to

00:02:06,990 --> 00:02:10,679
code and even as a seasoned developer or

00:02:09,119 --> 00:02:13,829
perhaps particularly as a seasoned

00:02:10,679 --> 00:02:16,350
developer it's quite I'm quite anxious

00:02:13,829 --> 00:02:17,579
about helping people with learning to

00:02:16,350 --> 00:02:19,320
code because what if I'm you know

00:02:17,579 --> 00:02:20,880
staring them in the wrong direction the

00:02:19,320 --> 00:02:21,480
choices that they make as they're

00:02:20,880 --> 00:02:24,239
starting

00:02:21,480 --> 00:02:25,709
could be things that they develop across

00:02:24,239 --> 00:02:27,569
their entire career so you know what

00:02:25,709 --> 00:02:30,720
what editor should they use tabs or

00:02:27,569 --> 00:02:32,819
spaces just even simple things like that

00:02:30,720 --> 00:02:35,310
so what I want to do is basically take a

00:02:32,819 --> 00:02:39,120
step back from that from the serious

00:02:35,310 --> 00:02:41,670
business of teaching how to code and to

00:02:39,120 --> 00:02:44,430
talk a little bit more about just the

00:02:41,670 --> 00:02:46,110
fun of learning how to code so in the

00:02:44,430 --> 00:02:48,299
last couple of years I've expanded from

00:02:46,110 --> 00:02:50,989
just teaching introductory coding to

00:02:48,299 --> 00:02:55,140
teaching introduction to electronics and

00:02:50,989 --> 00:02:56,879
introduction to Arduino and eventually

00:02:55,140 --> 00:03:00,390
those two things kind of overlapped and

00:02:56,879 --> 00:03:03,930
so now I'm actually using Arduino based

00:03:00,390 --> 00:03:06,390
robots to teach coding so this is a

00:03:03,930 --> 00:03:08,519
picture from international no bots day

00:03:06,390 --> 00:03:11,459
last weekend which was at the edge this

00:03:08,519 --> 00:03:12,750
is in Brisbane and we had about 45

00:03:11,459 --> 00:03:15,480
people turn up on a Saturday afternoon

00:03:12,750 --> 00:03:17,040
to learn how to code using robots and

00:03:15,480 --> 00:03:19,290
this was an event that actually happened

00:03:17,040 --> 00:03:21,930
all across the world it wasn't just here

00:03:19,290 --> 00:03:23,790
in Brisbane there was a similar actually

00:03:21,930 --> 00:03:26,040
larger event in Melbourne and Sydney and

00:03:23,790 --> 00:03:27,510
in fact distributed in cities across the

00:03:26,040 --> 00:03:29,819
world who basically passed the torch it

00:03:27,510 --> 00:03:32,010
went to Cape Town it went to America it

00:03:29,819 --> 00:03:34,530
went to Europe so there were literally

00:03:32,010 --> 00:03:37,230
hundreds of people learning how to code

00:03:34,530 --> 00:03:39,299
many of them for the first time with

00:03:37,230 --> 00:03:42,139
robots last weekend which is really cool

00:03:39,299 --> 00:03:45,269
oh and the feedback that we've had from

00:03:42,139 --> 00:03:48,239
participants has been pretty awesome so

00:03:45,269 --> 00:03:50,549
this is a tweet basically his ten year

00:03:48,239 --> 00:03:52,200
old son said it was the most fun six

00:03:50,549 --> 00:03:55,109
hours of his life that's pretty high

00:03:52,200 --> 00:03:57,870
price so one of the other things that

00:03:55,109 --> 00:03:59,370
that we had with our robot workshops

00:03:57,870 --> 00:04:01,319
that we've been running is that it's

00:03:59,370 --> 00:04:02,700
been a very diverse audience so usually

00:04:01,319 --> 00:04:05,129
if you run an introduction to

00:04:02,700 --> 00:04:08,310
programming course if you you get you

00:04:05,129 --> 00:04:10,799
know not not a lot of women not a lot of

00:04:08,310 --> 00:04:12,269
diversity happening but you can see from

00:04:10,799 --> 00:04:14,549
the pictures and definitely from the

00:04:12,269 --> 00:04:17,160
workshops we've had yeah everybody loves

00:04:14,549 --> 00:04:21,650
to build robots so what I want to talk

00:04:17,160 --> 00:04:25,470
about today is just kind of how I think

00:04:21,650 --> 00:04:27,539
learning to code is improved with robots

00:04:25,470 --> 00:04:29,250
and these are just a couple of examples

00:04:27,539 --> 00:04:31,770
of the sorts of robots that people built

00:04:29,250 --> 00:04:34,919
these are from some workshops a few

00:04:31,770 --> 00:04:36,510
months ago that I facilitated at the

00:04:34,919 --> 00:04:38,550
you can see they're not complicated

00:04:36,510 --> 00:04:41,520
robots they're pretty much held together

00:04:38,550 --> 00:04:44,100
with cable tie and sticky tape and pipe

00:04:41,520 --> 00:04:46,530
cleaners and things it's not about

00:04:44,100 --> 00:04:50,100
building a fantastic robot it's about

00:04:46,530 --> 00:04:53,280
learning so building robots like this is

00:04:50,100 --> 00:04:54,900
a lot of fun but I've realized that it's

00:04:53,280 --> 00:04:57,540
not only great fun but it's also an

00:04:54,900 --> 00:04:59,639
ideal space for teaching coding so

00:04:57,540 --> 00:05:02,280
please indulge me for a few minutes

00:04:59,639 --> 00:05:06,270
while I talk about why I think robots

00:05:02,280 --> 00:05:07,350
are a great way to loads of code and

00:05:06,270 --> 00:05:09,330
what I'm talking about robots I'm not

00:05:07,350 --> 00:05:11,699
just meaning robots like you know these

00:05:09,330 --> 00:05:13,320
kind of little things that we built but

00:05:11,699 --> 00:05:15,300
I'm also talking about physical

00:05:13,320 --> 00:05:16,919
computing so the fact that you've got

00:05:15,300 --> 00:05:18,990
hardware

00:05:16,919 --> 00:05:21,120
you've got sensors you've got actuators

00:05:18,990 --> 00:05:23,940
so interactive systems that sense and

00:05:21,120 --> 00:05:27,930
respond to the physical world so even

00:05:23,940 --> 00:05:29,729
just blinking an LED that's fine doesn't

00:05:27,930 --> 00:05:32,880
have to be a fully loaded robot but

00:05:29,729 --> 00:05:35,460
robots themselves basically autonomous

00:05:32,880 --> 00:05:37,740
systems that sense and respond to the

00:05:35,460 --> 00:05:40,889
physical world usually performs some

00:05:37,740 --> 00:05:43,229
sort of task so they're kind of a

00:05:40,889 --> 00:05:47,610
subclass of of physical computing if you

00:05:43,229 --> 00:05:48,180
like but why do I think robots are the

00:05:47,610 --> 00:05:51,450
way to go

00:05:48,180 --> 00:05:53,940
so before we step through some actual

00:05:51,450 --> 00:05:55,110
code to show you how to do some physical

00:05:53,940 --> 00:05:58,710
computing with Python

00:05:55,110 --> 00:06:01,530
let me just reminisce a little bit so

00:05:58,710 --> 00:06:06,150
when I learned how to code I learnt

00:06:01,530 --> 00:06:08,910
using language called logo and this was

00:06:06,150 --> 00:06:11,070
developed in the late 1960s it was a

00:06:08,910 --> 00:06:13,949
language that was specifically designed

00:06:11,070 --> 00:06:16,130
for teaching coding to kids in

00:06:13,949 --> 00:06:18,660
particular and one of the most memorable

00:06:16,130 --> 00:06:19,740
parts of logo is the turtle which you

00:06:18,660 --> 00:06:22,680
can see on the screen here it's

00:06:19,740 --> 00:06:25,590
basically you can use commands like

00:06:22,680 --> 00:06:26,820
forward left right and back to tell that

00:06:25,590 --> 00:06:28,919
turtle where to move along the screen

00:06:26,820 --> 00:06:31,139
and it drugs a pen behind it and draws a

00:06:28,919 --> 00:06:33,539
path now I was really surprised to see

00:06:31,139 --> 00:06:36,479
that in the intro to Python course that

00:06:33,539 --> 00:06:37,800
was running at the edge yesterday turtle

00:06:36,479 --> 00:06:40,130
graphics were part of that course so

00:06:37,800 --> 00:06:43,530
even though this language was developed

00:06:40,130 --> 00:06:45,840
a long time ago and probably not very

00:06:43,530 --> 00:06:47,490
many people are using logo itself turtle

00:06:45,840 --> 00:06:50,340
graphics has kind of

00:06:47,490 --> 00:06:53,550
I've beyond logo and it's still a useful

00:06:50,340 --> 00:06:56,490
way of teaching programming concepts now

00:06:53,550 --> 00:06:58,199
logo was developed by a group of people

00:06:56,490 --> 00:07:01,020
one of them was called Sima pipette and

00:06:58,199 --> 00:07:05,940
he's a computer scientist and an

00:07:01,020 --> 00:07:10,310
educator now he came up with this idea

00:07:05,940 --> 00:07:12,960
of among other learning theories of

00:07:10,310 --> 00:07:14,190
bodies and tonic reasoning so this is

00:07:12,960 --> 00:07:17,729
the way that turtle graphics works

00:07:14,190 --> 00:07:19,590
basically the idea is that we have a

00:07:17,729 --> 00:07:21,569
very good understanding of our own

00:07:19,590 --> 00:07:24,750
bodies and we can use that to reason

00:07:21,569 --> 00:07:26,400
about other situations so as a student

00:07:24,750 --> 00:07:29,190
when I was learning how to code with

00:07:26,400 --> 00:07:32,580
logo I could imagine myself as the

00:07:29,190 --> 00:07:35,069
turtle on the screen and I could imagine

00:07:32,580 --> 00:07:37,050
and predict what it would do if I told

00:07:35,069 --> 00:07:39,000
that turtle to move forward a certain

00:07:37,050 --> 00:07:43,380
number of steps or to turn left a

00:07:39,000 --> 00:07:45,599
certain number of degrees so I would

00:07:43,380 --> 00:07:49,590
argue that teaching with physical robots

00:07:45,599 --> 00:07:51,180
like this I buys into this same model

00:07:49,590 --> 00:07:55,050
the same learning theory and in fact

00:07:51,180 --> 00:07:57,030
even more so because unlike the logo

00:07:55,050 --> 00:08:00,240
turtle which is a bunch of pixels on the

00:07:57,030 --> 00:08:02,460
screen a robot is a physical device that

00:08:00,240 --> 00:08:05,190
exists in the real world the same as us

00:08:02,460 --> 00:08:07,199
so it's even less of a leap to imagine

00:08:05,190 --> 00:08:12,690
how this robot will move in respond to

00:08:07,199 --> 00:08:14,190
commands in response to commands one of

00:08:12,690 --> 00:08:16,440
the other learning theories that Seymour

00:08:14,190 --> 00:08:20,669
Papert came up with was called

00:08:16,440 --> 00:08:23,729
constructionism now this is also closely

00:08:20,669 --> 00:08:25,680
related to the physicality of robots so

00:08:23,729 --> 00:08:27,240
it's very if you are familiar with the

00:08:25,680 --> 00:08:29,580
work of Jean Piaget who was a very

00:08:27,240 --> 00:08:32,820
influential developmental psychologist

00:08:29,580 --> 00:08:34,620
it's based on constructivism which is

00:08:32,820 --> 00:08:37,320
closely related but not exactly the same

00:08:34,620 --> 00:08:39,270
and experience based learning so the

00:08:37,320 --> 00:08:41,990
idea with constructivism is that

00:08:39,270 --> 00:08:44,610
students construct mental models of

00:08:41,990 --> 00:08:47,850
things around them based on their own

00:08:44,610 --> 00:08:49,500
experiences but pepper actually extended

00:08:47,850 --> 00:08:52,470
that idea by saying that learning is

00:08:49,500 --> 00:08:54,480
most effective when we not only create a

00:08:52,470 --> 00:08:56,370
mental model but we actually create

00:08:54,480 --> 00:08:59,850
something tangible that is a physical

00:08:56,370 --> 00:09:01,060
object in the real world he wrote a book

00:08:59,850 --> 00:09:03,399
about this

00:09:01,060 --> 00:09:05,350
it was published in 1980 again quite a

00:09:03,399 --> 00:09:07,209
while ago called Mindstorms children

00:09:05,350 --> 00:09:09,189
computers and powerful ideas and

00:09:07,209 --> 00:09:11,589
incidentally this is the inspiration for

00:09:09,189 --> 00:09:13,060
the naming of the Lego Mindstorms kits

00:09:11,589 --> 00:09:15,490
this is why they were called the

00:09:13,060 --> 00:09:18,430
Mindstorms so it's a powerful idea

00:09:15,490 --> 00:09:20,199
teaching coding through physical objects

00:09:18,430 --> 00:09:22,600
like computing so we're certainly in

00:09:20,199 --> 00:09:29,019
good company because Mindstorms kits are

00:09:22,600 --> 00:09:30,810
still used to this day in schools so the

00:09:29,019 --> 00:09:33,730
learning theory kind of supports using

00:09:30,810 --> 00:09:35,290
robots to teach coding but what about my

00:09:33,730 --> 00:09:37,089
own personal experiences because I you

00:09:35,290 --> 00:09:38,769
know I'm not an expert in learning

00:09:37,089 --> 00:09:40,509
theories and you know some of these

00:09:38,769 --> 00:09:43,029
theories that I've presented here I'm

00:09:40,509 --> 00:09:44,500
really quite old and probably not a lot

00:09:43,029 --> 00:09:45,430
trendy anymore there's probably new

00:09:44,500 --> 00:09:49,060
theories up there

00:09:45,430 --> 00:09:50,949
but my own experience supports the fact

00:09:49,060 --> 00:09:55,870
that learning to code with robots is a

00:09:50,949 --> 00:09:59,290
useful thing to do so one of the things

00:09:55,870 --> 00:10:01,660
that's really great with Python and with

00:09:59,290 --> 00:10:03,399
JavaScript is that it's an interpreted

00:10:01,660 --> 00:10:05,829
language so you get that immediate

00:10:03,399 --> 00:10:07,750
feedback you can make a change to the

00:10:05,829 --> 00:10:10,389
code you can run it through a rebel a

00:10:07,750 --> 00:10:13,420
read eval print loop and your robot will

00:10:10,389 --> 00:10:15,610
immediately respond to that code so it

00:10:13,420 --> 00:10:18,670
really supports the idea of exploratory

00:10:15,610 --> 00:10:19,990
programming where you don't have a kind

00:10:18,670 --> 00:10:22,480
of an idea of what you want to do you

00:10:19,990 --> 00:10:24,910
don't have a spec requirement spec all

00:10:22,480 --> 00:10:27,009
you're doing is basically exploring a

00:10:24,910 --> 00:10:29,019
particular space a particular API a

00:10:27,009 --> 00:10:31,290
particular framework and working out

00:10:29,019 --> 00:10:34,480
what's possible and how you can use it

00:10:31,290 --> 00:10:36,730
so what I do often in the workshops that

00:10:34,480 --> 00:10:39,490
I'm involved with is set some challenges

00:10:36,730 --> 00:10:41,050
for people so you give them a few basic

00:10:39,490 --> 00:10:44,670
primitives to work with so you tell them

00:10:41,050 --> 00:10:48,100
for example how to make a servo move

00:10:44,670 --> 00:10:50,559
controls the wheels and then give them a

00:10:48,100 --> 00:10:54,309
challenge to make a robot you move

00:10:50,559 --> 00:10:56,500
around a certain obstacle path or to do

00:10:54,309 --> 00:11:00,550
something go forward a certain amount in

00:10:56,500 --> 00:11:03,399
turn left much like a turtle one of the

00:11:00,550 --> 00:11:06,490
other things about well that I've

00:11:03,399 --> 00:11:09,699
noticed in teaching robotics and

00:11:06,490 --> 00:11:12,370
teaching program with robotics is that

00:11:09,699 --> 00:11:14,320
it makes it quite easy to teach some of

00:11:12,370 --> 00:11:16,810
the things that are difficult

00:11:14,320 --> 00:11:18,250
with non-physical examples so one of the

00:11:16,810 --> 00:11:20,350
most important things to learn about

00:11:18,250 --> 00:11:22,270
when you're learning to code is

00:11:20,350 --> 00:11:25,420
abstraction and object-oriented

00:11:22,270 --> 00:11:27,130
programming languages objects that's a

00:11:25,420 --> 00:11:29,560
really important abstraction a really

00:11:27,130 --> 00:11:31,630
important concept to understand but a

00:11:29,560 --> 00:11:34,240
lot of introductory programming courses

00:11:31,630 --> 00:11:36,700
leave that until later they don't kind

00:11:34,240 --> 00:11:38,530
of come up front with with objects you

00:11:36,700 --> 00:11:43,300
learn basically declarative programming

00:11:38,530 --> 00:11:45,040
or procedural programming first and then

00:11:43,300 --> 00:11:46,500
you kind of add to that your

00:11:45,040 --> 00:11:51,190
understanding of how to construct

00:11:46,500 --> 00:11:52,900
objects and how to sort of compose break

00:11:51,190 --> 00:11:56,290
a complex problem down into smaller

00:11:52,900 --> 00:11:57,790
pieces and to decompose it and I think

00:11:56,290 --> 00:11:59,080
that this is a mistake to leave it as a

00:11:57,790 --> 00:12:01,060
secondary thing I think we should be

00:11:59,080 --> 00:12:03,790
teaching people about abstraction and

00:12:01,060 --> 00:12:05,980
about how to understand the kind of the

00:12:03,790 --> 00:12:08,080
paradigm of the language right from the

00:12:05,980 --> 00:12:10,860
beginning but it's always something that

00:12:08,080 --> 00:12:13,720
I found challenging to teach so

00:12:10,860 --> 00:12:15,550
object-oriented programming as a concept

00:12:13,720 --> 00:12:17,800
is pretty difficult one for people to

00:12:15,550 --> 00:12:20,020
get their head around and it takes some

00:12:17,800 --> 00:12:21,670
time usually when you're running a robot

00:12:20,020 --> 00:12:23,710
workshop that might only last for a few

00:12:21,670 --> 00:12:28,810
hours you don't really have the luxury

00:12:23,710 --> 00:12:30,430
of time but surprisingly I found that it

00:12:28,810 --> 00:12:33,610
hasn't been an issue at all and I think

00:12:30,430 --> 00:12:35,850
this is because I've there's almost a

00:12:33,610 --> 00:12:38,920
one-to-one correspondence between

00:12:35,850 --> 00:12:42,850
objects in the physical world and their

00:12:38,920 --> 00:12:44,740
representations in code so it's quite

00:12:42,850 --> 00:12:47,860
easy and natural to explain to someone

00:12:44,740 --> 00:12:50,290
how a robot is an object that has State

00:12:47,860 --> 00:12:52,570
and behavior and it's composed of

00:12:50,290 --> 00:12:55,390
smaller parts like sensors and servos

00:12:52,570 --> 00:12:59,140
that also have their own State and

00:12:55,390 --> 00:13:00,940
behavior and that these can be sort of

00:12:59,140 --> 00:13:02,860
the details of these can be hidden away

00:13:00,940 --> 00:13:05,470
from the robots so encapsulation you can

00:13:02,860 --> 00:13:07,660
teach that there are also a number of

00:13:05,470 --> 00:13:09,070
different components that are similar to

00:13:07,660 --> 00:13:11,500
each other but not quite the same for

00:13:09,070 --> 00:13:13,030
example the servos which are the motors

00:13:11,500 --> 00:13:14,980
that he used to drive the wheels are

00:13:13,030 --> 00:13:18,970
continuous rotation servers they go from

00:13:14,980 --> 00:13:21,430
0 to 360 full circle whereas smaller

00:13:18,970 --> 00:13:24,220
hobby servers like the one that is on

00:13:21,430 --> 00:13:26,770
the head of the robot only goes 180

00:13:24,220 --> 00:13:28,320
degrees so these are very similar

00:13:26,770 --> 00:13:30,700
components we can teach

00:13:28,320 --> 00:13:32,770
sub-classing for example through

00:13:30,700 --> 00:13:36,010
understanding that there are things set

00:13:32,770 --> 00:13:44,709
up similar but a little bit different in

00:13:36,010 --> 00:13:46,300
the same class of objects so let's get

00:13:44,709 --> 00:13:49,660
to actually looking at some code and

00:13:46,300 --> 00:13:52,810
looking at how I would teach physical

00:13:49,660 --> 00:13:54,310
computing with Python but first one of

00:13:52,810 --> 00:13:56,470
the things that I find when I'm trying

00:13:54,310 --> 00:13:57,940
to teach people coding I feel a bit like

00:13:56,470 --> 00:14:00,459
this so I'm kind of like do you want to

00:13:57,940 --> 00:14:03,850
write some code and people are kind of

00:14:00,459 --> 00:14:05,380
like yeah go away huh I get really

00:14:03,850 --> 00:14:07,720
excited about it because I know how

00:14:05,380 --> 00:14:10,500
awesome it is but when it comes to

00:14:07,720 --> 00:14:13,029
robots I don't have to convince people

00:14:10,500 --> 00:14:15,040
robots are just awesome in their own

00:14:13,029 --> 00:14:19,209
right so people are almost learning to

00:14:15,040 --> 00:14:22,300
code despite themselves and I can sneak

00:14:19,209 --> 00:14:24,070
in a lot of theory and a lot of kind of

00:14:22,300 --> 00:14:28,240
stuff that might not be so exciting if

00:14:24,070 --> 00:14:30,160
it wasn't in the context of robotics but

00:14:28,240 --> 00:14:32,589
let's step through how I design my

00:14:30,160 --> 00:14:33,760
robots so robots there's a lot of

00:14:32,589 --> 00:14:35,140
different types of robots out there

00:14:33,760 --> 00:14:37,930
obviously and I'm really talking about

00:14:35,140 --> 00:14:40,120
these kind of you know do-it-yourself

00:14:37,930 --> 00:14:42,160
robots now all the robots that I've

00:14:40,120 --> 00:14:43,770
worked with are built on top of the

00:14:42,160 --> 00:14:46,570
arduino platform it's an open-source

00:14:43,770 --> 00:14:49,180
hardware platform microcontroller and

00:14:46,570 --> 00:14:55,600
they all use pretty much off-the-shelf

00:14:49,180 --> 00:14:57,209
hardware so servos and buttons and LEDs

00:14:55,600 --> 00:15:00,310
and that sort of thing

00:14:57,209 --> 00:15:01,690
now with the robots that I develop

00:15:00,310 --> 00:15:04,000
basically there's a bunch of components

00:15:01,690 --> 00:15:06,370
that are sensors that are inputs for the

00:15:04,000 --> 00:15:08,680
robot so these are things like the

00:15:06,370 --> 00:15:11,520
ultrasonic sensor that that basically

00:15:08,680 --> 00:15:15,120
measures distance to an obstacle

00:15:11,520 --> 00:15:18,790
there's the Arduino which is the brain

00:15:15,120 --> 00:15:21,430
the microcontroller and then there are

00:15:18,790 --> 00:15:22,930
the outputs the actuators but in

00:15:21,430 --> 00:15:24,600
addition to this is also the chassis

00:15:22,930 --> 00:15:28,480
which in my case is actually some

00:15:24,600 --> 00:15:30,160
recycled microwave titration plates that

00:15:28,480 --> 00:15:32,589
are basically just holding all the bits

00:15:30,160 --> 00:15:36,220
together and then there's a power it's

00:15:32,589 --> 00:15:39,160
just some double-a batteries now when it

00:15:36,220 --> 00:15:41,600
comes to the senses every workshop that

00:15:39,160 --> 00:15:43,520
I run might have different senses

00:15:41,600 --> 00:15:46,610
there's just so many out there to choose

00:15:43,520 --> 00:15:48,380
from there are two kinds of types of

00:15:46,610 --> 00:15:50,960
senses that usually talked about in

00:15:48,380 --> 00:15:53,900
robotics extra receptive and

00:15:50,960 --> 00:15:55,760
proprioceptive basically extra exceptive

00:15:53,900 --> 00:15:59,750
are the senses that sense the outside

00:15:55,760 --> 00:16:02,420
world so the outside state so most of

00:15:59,750 --> 00:16:03,950
these are external senses and the

00:16:02,420 --> 00:16:06,020
proprioceptive senses are the ones that

00:16:03,950 --> 00:16:07,930
sense the internal state of the robot so

00:16:06,020 --> 00:16:10,550
this might be something that that

00:16:07,930 --> 00:16:13,850
detects how many rotations the motor is

00:16:10,550 --> 00:16:16,100
has had something like that so there are

00:16:13,850 --> 00:16:18,490
sensors that measure environmental

00:16:16,100 --> 00:16:21,410
conditions like temperature sensors

00:16:18,490 --> 00:16:24,440
really easy to work with humidity it's

00:16:21,410 --> 00:16:26,450
smoke detectors magnetic sensors there

00:16:24,440 --> 00:16:28,010
are they're called full effect sensors

00:16:26,450 --> 00:16:30,170
they're really easy to come by because

00:16:28,010 --> 00:16:32,390
they're used in 3d printers quite often

00:16:30,170 --> 00:16:34,820
so they're quite cheap and readily

00:16:32,390 --> 00:16:36,650
available light sensors like a photo

00:16:34,820 --> 00:16:39,050
resistor a photo resistor is about five

00:16:36,650 --> 00:16:41,000
cents so you can throw a whole bunch of

00:16:39,050 --> 00:16:44,030
them on your robot and and work with

00:16:41,000 --> 00:16:46,400
sensors very easily and then obviously

00:16:44,030 --> 00:16:48,380
there's sound and motion and also things

00:16:46,400 --> 00:16:50,330
like buttons to detect when a user

00:16:48,380 --> 00:16:51,770
presses a button or even in this case

00:16:50,330 --> 00:16:54,290
I've got buttons on the bumper bar so

00:16:51,770 --> 00:16:57,320
the the robot runs into something it

00:16:54,290 --> 00:16:58,640
triggers those buttons and it knows what

00:16:57,320 --> 00:17:02,630
I can write some code to make it back

00:16:58,640 --> 00:17:03,470
off in terms of actuators so the senses

00:17:02,630 --> 00:17:06,079
are the inputs

00:17:03,470 --> 00:17:09,199
actuators are the outputs so there's

00:17:06,079 --> 00:17:11,839
light and displays so LEDs being the

00:17:09,199 --> 00:17:15,770
most obvious one LCDs as well our LED

00:17:11,839 --> 00:17:17,209
displays there are sound modules so you

00:17:15,770 --> 00:17:20,360
can get like a piezo buzzer that just

00:17:17,209 --> 00:17:22,280
makes a beeping noise obviously with

00:17:20,360 --> 00:17:23,600
robots motion is really important type

00:17:22,280 --> 00:17:25,010
of an output so you've got lots of

00:17:23,600 --> 00:17:27,410
different types of motors that you might

00:17:25,010 --> 00:17:29,180
use I tend to use servos more than

00:17:27,410 --> 00:17:31,580
anything else because they're so easy to

00:17:29,180 --> 00:17:34,070
work with so use continuous rotation

00:17:31,580 --> 00:17:36,470
servers for the wheels and I use smaller

00:17:34,070 --> 00:17:38,870
servos to move arms or heads and so

00:17:36,470 --> 00:17:41,180
forth and then there's things like power

00:17:38,870 --> 00:17:46,280
you can attach a relay and basically

00:17:41,180 --> 00:17:48,710
control any any device really so how do

00:17:46,280 --> 00:17:51,230
we interface with this hardware through

00:17:48,710 --> 00:17:54,140
Python well conveniently there is a

00:17:51,230 --> 00:17:54,980
library called pi Fermata and yesterday

00:17:54,140 --> 00:17:57,110
we

00:17:54,980 --> 00:17:58,730
a intro to electronics in Python

00:17:57,110 --> 00:18:00,640
workshop at the edge and I can see a few

00:17:58,730 --> 00:18:02,900
people who were there in the audience

00:18:00,640 --> 00:18:04,820
I'll admit that's my first time ever

00:18:02,900 --> 00:18:07,040
running a workshop using Python for this

00:18:04,820 --> 00:18:11,390
stuff so we're kind of all learning as

00:18:07,040 --> 00:18:13,550
we went along but when I use node.js I

00:18:11,390 --> 00:18:16,400
actually used the same protocol as -

00:18:13,550 --> 00:18:17,600
lotta the Fermata protocol is designed

00:18:16,400 --> 00:18:19,040
to be used with lots of different

00:18:17,600 --> 00:18:24,140
languages and in fact there are bindings

00:18:19,040 --> 00:18:25,300
for Ruby and other languages if you but

00:18:24,140 --> 00:18:27,620
PI fermata

00:18:25,300 --> 00:18:31,040
get it from this github repository

00:18:27,620 --> 00:18:33,190
basically you run a program on your

00:18:31,040 --> 00:18:36,380
computer we were using raspberry PI's

00:18:33,190 --> 00:18:39,380
and you then communicate with the

00:18:36,380 --> 00:18:41,510
Arduino over a serial connection so USB

00:18:39,380 --> 00:18:43,520
being the most obvious one but you can

00:18:41,510 --> 00:18:46,310
also communicate over Bluetooth it's

00:18:43,520 --> 00:18:49,340
just serial and I've also had some luck

00:18:46,310 --> 00:18:51,310
with using little Wi-Fi modules and so

00:18:49,340 --> 00:18:54,560
cat and being able to talk to robots

00:18:51,310 --> 00:18:56,030
that way if you want to play with Python

00:18:54,560 --> 00:18:59,030
motor at home you can basically install

00:18:56,030 --> 00:19:01,520
it using pip so pip install - ATO will

00:18:59,030 --> 00:19:03,590
get the library for you you want though

00:19:01,520 --> 00:19:06,140
it does only seem to work with Python 2

00:19:03,590 --> 00:19:07,190
dot X didn't work with three for some

00:19:06,140 --> 00:19:11,870
reason even though it said it should

00:19:07,190 --> 00:19:13,880
just couldn't get it working so hello

00:19:11,870 --> 00:19:16,520
world for robots is basically blinking

00:19:13,880 --> 00:19:21,110
in LED so let's step through how we

00:19:16,520 --> 00:19:22,580
would do that using PI firmata the first

00:19:21,110 --> 00:19:24,650
thing we'd need to do is actually attach

00:19:22,580 --> 00:19:27,380
the LED to the arduino and here i'm

00:19:24,650 --> 00:19:29,000
using an arduino nano which is you

00:19:27,380 --> 00:19:32,630
probably can't see this from well but

00:19:29,000 --> 00:19:34,430
it's a very very small arduino that i've

00:19:32,630 --> 00:19:36,380
got on this robot here it's a lot

00:19:34,430 --> 00:19:39,410
smaller than what you might have seen as

00:19:36,380 --> 00:19:41,480
an arduino uno which is basically the

00:19:39,410 --> 00:19:43,790
same pin layout just in a larger form

00:19:41,480 --> 00:19:46,520
factor but nanos are great for robots

00:19:43,790 --> 00:19:48,920
because they're small and light so

00:19:46,520 --> 00:19:51,110
basically you'd connect that led up to

00:19:48,920 --> 00:19:52,730
the robot and the way that Arduino is

00:19:51,110 --> 00:19:54,590
work is they have a number of i/o pins

00:19:52,730 --> 00:19:56,930
some of them a digital some of them

00:19:54,590 --> 00:19:58,970
analog and LED so if we just want to

00:19:56,930 --> 00:20:01,220
blink it on and off that's a digital i/o

00:19:58,970 --> 00:20:05,420
so we connect it to one of the digital

00:20:01,220 --> 00:20:08,370
pins we connect positive to say pin 13

00:20:05,420 --> 00:20:12,179
on the Arduino and then we'd connect

00:20:08,370 --> 00:20:14,100
the ground pin to the other lead then we

00:20:12,179 --> 00:20:15,480
create a Python program and in fact you

00:20:14,100 --> 00:20:17,700
can use whatever environment you want to

00:20:15,480 --> 00:20:21,419
use you could use the console directly

00:20:17,700 --> 00:20:23,220
we were using ipython notebook yesterday

00:20:21,419 --> 00:20:26,130
but you can of course just create your

00:20:23,220 --> 00:20:27,480
code in Python program file like you

00:20:26,130 --> 00:20:31,279
normally would using your favorite text

00:20:27,480 --> 00:20:35,159
editor you need to import pi pi fermata

00:20:31,279 --> 00:20:38,159
at the start of your program and then

00:20:35,159 --> 00:20:40,470
you need to create an object to talk to

00:20:38,159 --> 00:20:43,500
the Arduino itself so board a board

00:20:40,470 --> 00:20:45,630
object with Python motor you need to

00:20:43,500 --> 00:20:49,169
explicitly tell it which port your

00:20:45,630 --> 00:20:50,490
Arduino is connected to that's one of

00:20:49,169 --> 00:20:52,529
the things that node.js does is it

00:20:50,490 --> 00:20:54,179
automatically detects it so if if anyone

00:20:52,529 --> 00:20:55,980
incidentally is looking for an

00:20:54,179 --> 00:20:58,080
open-source kind of a project that they

00:20:55,980 --> 00:20:59,549
want to work with there's a lot of work

00:20:58,080 --> 00:21:01,679
that can be done with parramatta

00:20:59,549 --> 00:21:03,029
so come and talk to me after it's a few

00:21:01,679 --> 00:21:05,789
if you're interested in writing some

00:21:03,029 --> 00:21:07,710
stuff to to improve that library but

00:21:05,789 --> 00:21:09,510
basically you give it a port which is

00:21:07,710 --> 00:21:12,929
just the device that your Arduino is

00:21:09,510 --> 00:21:15,600
connected to and then we can control

00:21:12,929 --> 00:21:18,630
that led by talking to that pin so

00:21:15,600 --> 00:21:22,380
you'll notice that this is really kind

00:21:18,630 --> 00:21:24,000
of low-level code we are actually saying

00:21:22,380 --> 00:21:26,130
give me a digital pin we're giving it a

00:21:24,000 --> 00:21:27,659
number that's pin 13 on the Arduino and

00:21:26,130 --> 00:21:30,500
then we're writing to that pin either a

00:21:27,659 --> 00:21:34,169
1 or a 0 so setting it to be high or low

00:21:30,500 --> 00:21:35,370
this is in binary directly and this is

00:21:34,169 --> 00:21:39,299
one of the things that I really like

00:21:35,370 --> 00:21:41,970
about teaching with robots is that you

00:21:39,299 --> 00:21:43,769
really do start right at the basics and

00:21:41,970 --> 00:21:45,720
kind of build up from there so it's kind

00:21:43,769 --> 00:21:48,539
of a full stack learning experience if

00:21:45,720 --> 00:21:50,059
you like which is maybe the opposite to

00:21:48,539 --> 00:21:55,070
the way that it's normally taught it

00:21:50,059 --> 00:21:58,139
anyway so we can turn our LED on and off

00:21:55,070 --> 00:22:00,000
we can also delay that behavior so we

00:21:58,139 --> 00:22:03,120
can cause the led to blink there's a

00:22:00,000 --> 00:22:06,710
pastime function built into Python Motta

00:22:03,120 --> 00:22:10,679
that makes that really easy just do this

00:22:06,710 --> 00:22:12,809
and so the code to basically blink a LED

00:22:10,679 --> 00:22:15,330
on and off let's say we just wanted to

00:22:12,809 --> 00:22:16,860
do it infinitely we could do something

00:22:15,330 --> 00:22:19,710
like this just put it in a in a while

00:22:16,860 --> 00:22:22,380
loop and just turn that LED on and off

00:22:19,710 --> 00:22:25,050
now you'll notice that this as I said is

00:22:22,380 --> 00:22:26,550
really low-level and probably you would

00:22:25,050 --> 00:22:28,260
want to do things like write some

00:22:26,550 --> 00:22:30,600
classes to make this a little bit nicer

00:22:28,260 --> 00:22:33,690
to work with so for example you could

00:22:30,600 --> 00:22:36,930
create an LED class that lets you just

00:22:33,690 --> 00:22:38,970
instantiate an LED object telling it

00:22:36,930 --> 00:22:41,010
which pin to connect to and then might

00:22:38,970 --> 00:22:42,030
have something like on and off and there

00:22:41,010 --> 00:22:43,770
are lots of different things that you

00:22:42,030 --> 00:22:45,800
can do with LEDs you might want to poll

00:22:43,770 --> 00:22:48,200
cert you might want to do some patterns

00:22:45,800 --> 00:22:50,670
you could build that into the class and

00:22:48,200 --> 00:22:52,020
the noisiest libraries do you actually

00:22:50,670 --> 00:22:54,630
have all this stuff in there already

00:22:52,020 --> 00:22:57,510
just know I won't keep going on about

00:22:54,630 --> 00:23:00,570
node.js but yeah this is definitely an

00:22:57,510 --> 00:23:01,950
area of improvement so please do do come

00:23:00,570 --> 00:23:05,730
and talk to me if you're interested in

00:23:01,950 --> 00:23:07,830
writing some classes like this now one

00:23:05,730 --> 00:23:12,180
of the things that we use to talk to

00:23:07,830 --> 00:23:13,650
hardware is false width modulation so

00:23:12,180 --> 00:23:15,690
this is basically we've got a digital

00:23:13,650 --> 00:23:17,400
pin and you don't just want to have an

00:23:15,690 --> 00:23:19,860
on or an off you want to sort of

00:23:17,400 --> 00:23:21,120
simulate a continuous signal and this is

00:23:19,860 --> 00:23:24,270
really important if you want to do

00:23:21,120 --> 00:23:26,520
things like fade and LED or if you want

00:23:24,270 --> 00:23:27,000
to talk to servos basically they're

00:23:26,520 --> 00:23:29,760
digital

00:23:27,000 --> 00:23:32,460
actuators and they they need PWM to be

00:23:29,760 --> 00:23:34,350
able to drive them so basically a square

00:23:32,460 --> 00:23:37,950
wave is sent to simulate that voltage

00:23:34,350 --> 00:23:39,720
between 0 and 5 volts but it's only

00:23:37,950 --> 00:23:41,760
enabled for some pins on the Arduino

00:23:39,720 --> 00:23:44,900
it's three five six nine ten and eleven

00:23:41,760 --> 00:23:48,120
on a standard Arduino for example so

00:23:44,900 --> 00:23:51,260
knowing that we can then talk to the

00:23:48,120 --> 00:23:55,620
pins using PWM instead of just digital

00:23:51,260 --> 00:23:59,430
output to do things like blend colors in

00:23:55,620 --> 00:24:01,770
an RGB LED so an RGB LED is much like a

00:23:59,430 --> 00:24:05,310
standard LED except that it's got three

00:24:01,770 --> 00:24:07,470
colors in one so we'd connect it out I'd

00:24:05,310 --> 00:24:11,220
you be like this some resistors to make

00:24:07,470 --> 00:24:14,850
sure we don't flow the LED up and then

00:24:11,220 --> 00:24:18,740
instead of setting our digital pin so to

00:24:14,850 --> 00:24:23,130
output mode like we did in this example

00:24:18,740 --> 00:24:26,070
we'd set it to use P so where we've got

00:24:23,130 --> 00:24:28,140
board get pin D : 10 : P for example

00:24:26,070 --> 00:24:30,840
that's basically a specification of how

00:24:28,140 --> 00:24:32,520
the Arduino interfaces with that that

00:24:30,840 --> 00:24:35,070
device so it's a digital pin

00:24:32,520 --> 00:24:37,160
it's a pin number ten and it's using PWM

00:24:35,070 --> 00:24:39,179
rather than just digital input/output

00:24:37,160 --> 00:24:41,250
and so we could do something like create

00:24:39,179 --> 00:24:45,360
random colors by blending different

00:24:41,250 --> 00:24:49,050
values of red green and blue movement is

00:24:45,360 --> 00:24:51,179
also really simple with PWM basically

00:24:49,050 --> 00:24:55,920
you connect a servo servo has three

00:24:51,179 --> 00:24:58,679
wires 5 volts ground and a signal and we

00:24:55,920 --> 00:25:01,370
use the same technique we can use PWM

00:24:58,679 --> 00:25:03,690
but actually Pyfrom adder has a servo

00:25:01,370 --> 00:25:05,280
type of connection built-in as well that

00:25:03,690 --> 00:25:06,510
makes it a little bit easier to work

00:25:05,280 --> 00:25:08,700
with them so we could do something like

00:25:06,510 --> 00:25:11,429
this we can write a function for example

00:25:08,700 --> 00:25:14,640
that uses a servo write function and we

00:25:11,429 --> 00:25:18,120
set a value in degrees to move that

00:25:14,640 --> 00:25:20,490
server to a particular position working

00:25:18,120 --> 00:25:22,650
with sensors so inputs this time is also

00:25:20,490 --> 00:25:25,500
pretty easy so if we were to connect

00:25:22,650 --> 00:25:28,740
something like a photo resistor we were

00:25:25,500 --> 00:25:32,940
it up like this and then we'd read from

00:25:28,740 --> 00:25:35,220
that analog sensor by basically using an

00:25:32,940 --> 00:25:36,750
input mode instead of an output mode on

00:25:35,220 --> 00:25:38,370
that pin and one of the things that's

00:25:36,750 --> 00:25:40,440
important to do with PI fermata is to

00:25:38,370 --> 00:25:42,120
set up this iterator just so you don't

00:25:40,440 --> 00:25:44,490
kind of flood the serial connection with

00:25:42,120 --> 00:25:48,360
readings so that's just something that

00:25:44,490 --> 00:25:50,520
you learn from experience you can also

00:25:48,360 --> 00:25:52,650
read digital input so while a

00:25:50,520 --> 00:25:55,200
photoresistor is kind of a continuous

00:25:52,650 --> 00:25:56,670
range of values representing ambient

00:25:55,200 --> 00:25:59,100
light a button for example is just

00:25:56,670 --> 00:26:01,160
either pressed or it's not pressed so we

00:25:59,100 --> 00:26:06,600
can do the same thing with digital input

00:26:01,160 --> 00:26:07,950
and a button I've put these learning

00:26:06,600 --> 00:26:09,570
resources in the slides because I will

00:26:07,950 --> 00:26:11,580
share them later so if you want to go in

00:26:09,570 --> 00:26:13,410
and play with PI firmata or learn some

00:26:11,580 --> 00:26:14,730
more about electricity there's some

00:26:13,410 --> 00:26:17,429
examples here

00:26:14,730 --> 00:26:18,780
Adreno playground I've written some

00:26:17,429 --> 00:26:21,030
examples from the workshop yesterday

00:26:18,780 --> 00:26:22,380
which are in a gist and just in case

00:26:21,030 --> 00:26:26,220
you're interested there is the node.js

00:26:22,380 --> 00:26:27,450
version out there but let's just talk

00:26:26,220 --> 00:26:29,309
about the future for a couple of minutes

00:26:27,450 --> 00:26:32,970
to conclude so because when we're

00:26:29,309 --> 00:26:34,530
talking about teaching we're talking

00:26:32,970 --> 00:26:36,330
about the future we're talking about

00:26:34,530 --> 00:26:39,809
transferring our skills and knowledge

00:26:36,330 --> 00:26:43,200
our hopes aspirations our enthusiasm to

00:26:39,809 --> 00:26:44,910
a new generation of coders and when it

00:26:43,200 --> 00:26:46,230
comes to thinking about the future

00:26:44,910 --> 00:26:48,419
robots are right

00:26:46,230 --> 00:26:51,990
there with hoverboards and flying cars

00:26:48,419 --> 00:26:54,660
they evoke the future now since the

00:26:51,990 --> 00:26:58,320
1920s when the term robot was coined it

00:26:54,660 --> 00:27:00,630
actually means slave in Slavic we've

00:26:58,320 --> 00:27:02,910
been promised this kind of future utopia

00:27:00,630 --> 00:27:04,830
where we'd have robots around us

00:27:02,910 --> 00:27:06,990
as our personal slaves and while I do

00:27:04,830 --> 00:27:09,900
have a Roomba and I you know I like not

00:27:06,990 --> 00:27:12,720
having to vacuum that's not the future

00:27:09,900 --> 00:27:14,010
I'm excited about for robots actually I

00:27:12,720 --> 00:27:17,010
think something that's far more

00:27:14,010 --> 00:27:20,940
important in this space is the Internet

00:27:17,010 --> 00:27:24,179
of Things so this is a quote from Cisco

00:27:20,940 --> 00:27:27,080
it says basically during 2008 the number

00:27:24,179 --> 00:27:27,080
of things connected to the Internet

00:27:27,380 --> 00:27:32,460
exceeded the number of people on earth

00:27:29,100 --> 00:27:34,140
so robots are already among us when you

00:27:32,460 --> 00:27:36,690
think of these devices as being

00:27:34,140 --> 00:27:39,600
autonomous devices that sense and

00:27:36,690 --> 00:27:41,730
respond to the physical world but if we

00:27:39,600 --> 00:27:45,540
think about the way that the Internet in

00:27:41,730 --> 00:27:47,280
general and the web has developed we've

00:27:45,540 --> 00:27:48,900
seen that originally it was developed in

00:27:47,280 --> 00:27:52,860
a kind of an academic setting by nerds

00:27:48,900 --> 00:27:55,470
and I'm proud to be a nerd and then it

00:27:52,860 --> 00:27:58,350
was embraced by corporations for good or

00:27:55,470 --> 00:28:01,169
for evil but because it was originally

00:27:58,350 --> 00:28:05,190
built on standards and open source and

00:28:01,169 --> 00:28:07,650
open hardware open technologies we still

00:28:05,190 --> 00:28:10,740
are able to use that platform to pretty

00:28:07,650 --> 00:28:13,380
much do whatever we want at least for

00:28:10,740 --> 00:28:16,049
now but when we think about the future

00:28:13,380 --> 00:28:18,360
of the Internet of Things we can talk

00:28:16,049 --> 00:28:20,910
about the possible futures we can talk

00:28:18,360 --> 00:28:23,370
about the plausible futures we can talk

00:28:20,910 --> 00:28:25,020
about the probable futures but I think

00:28:23,370 --> 00:28:29,580
it's really important that we think

00:28:25,020 --> 00:28:31,500
about the preferable future so something

00:28:29,580 --> 00:28:32,549
that really worries me at the moment

00:28:31,500 --> 00:28:34,890
about the way that the Internet of

00:28:32,549 --> 00:28:37,559
Things is developing is kind of this

00:28:34,890 --> 00:28:39,410
trend for it to be driven by large

00:28:37,559 --> 00:28:42,350
corporations the Google's the Facebook's

00:28:39,410 --> 00:28:44,820
this this goes the IBM's of the world

00:28:42,350 --> 00:28:46,919
now Alan Kay who was actually a

00:28:44,820 --> 00:28:48,720
colleague of Sima pepper said that the

00:28:46,919 --> 00:28:52,830
best way to predict the future is to

00:28:48,720 --> 00:28:55,740
invent it and we need more people on our

00:28:52,830 --> 00:28:56,940
team in the open source open Internet of

00:28:55,740 --> 00:29:00,989
Things team

00:28:56,940 --> 00:29:04,190
so while platforms like Lego Mindstorms

00:29:00,989 --> 00:29:06,599
for example are teaching people how to

00:29:04,190 --> 00:29:07,979
do coding in the context of robotics

00:29:06,599 --> 00:29:09,960
they are closed and proprietary

00:29:07,979 --> 00:29:12,269
platforms and we should be working

00:29:09,960 --> 00:29:14,700
towards making open platforms like

00:29:12,269 --> 00:29:18,330
Arduino with robots just as easy to work

00:29:14,700 --> 00:29:19,979
with and just as accessible one of the

00:29:18,330 --> 00:29:21,869
things that puppet said was should the

00:29:19,979 --> 00:29:23,129
computer program the kid or should the

00:29:21,869 --> 00:29:26,580
kid program the computer and with

00:29:23,129 --> 00:29:28,109
consumer devices like phones and so

00:29:26,580 --> 00:29:29,639
forth that are probably a lot of

00:29:28,109 --> 00:29:31,950
people's first experience of computing

00:29:29,639 --> 00:29:37,979
now they're definitely programming

00:29:31,950 --> 00:29:39,629
people to be passive consumers and this

00:29:37,979 --> 00:29:41,759
is why maker culture is so important to

00:29:39,629 --> 00:29:43,379
me so I was really heartened to hear

00:29:41,759 --> 00:29:46,129
James Cohen talk this morning about

00:29:43,379 --> 00:29:48,179
Python being taught in schools

00:29:46,129 --> 00:29:50,129
and that every Australian child could be

00:29:48,179 --> 00:29:51,570
learning Python because Python is an

00:29:50,129 --> 00:29:53,729
amazing language for learning and it is

00:29:51,570 --> 00:29:55,979
actually I think better than JavaScript

00:29:53,729 --> 00:29:57,749
for teaching so what I want you to take

00:29:55,979 --> 00:30:00,090
away from this talk and I'm wrapping up

00:29:57,749 --> 00:30:02,249
now is that while building robots is

00:30:00,090 --> 00:30:03,690
lots of fun I think it's really really

00:30:02,249 --> 00:30:07,830
important as well so if you're a teacher

00:30:03,690 --> 00:30:10,109
or a mentor be inclusive teaching is not

00:30:07,830 --> 00:30:12,539
your chance to show off it's basically

00:30:10,109 --> 00:30:16,440
your chance to teach the joy of making

00:30:12,539 --> 00:30:18,029
to somebody else so it's tell them that

00:30:16,440 --> 00:30:20,070
it's okay to pick under the covers it's

00:30:18,029 --> 00:30:24,119
okay to hack to break things you're

00:30:20,070 --> 00:30:25,919
helping people to discover how to think

00:30:24,119 --> 00:30:27,629
like a program and not what to think and

00:30:25,919 --> 00:30:30,330
if you're a student don't sweat the

00:30:27,629 --> 00:30:31,889
details and by that I mean don't worry

00:30:30,330 --> 00:30:33,409
about the language or the framework or

00:30:31,889 --> 00:30:37,679
the trendy thing that you're learning

00:30:33,409 --> 00:30:39,989
just learn you know the basics of coding

00:30:37,679 --> 00:30:41,279
what matters is that you don't lose the

00:30:39,989 --> 00:30:42,989
sense of wonder that you first

00:30:41,279 --> 00:30:44,580
experienced when you made that LED blink

00:30:42,989 --> 00:30:46,559
the first time or that total move across

00:30:44,580 --> 00:30:48,629
the screen because the best way to get

00:30:46,559 --> 00:30:50,549
better at coding is to love it and to

00:30:48,629 --> 00:30:54,570
just keep doing it and everything else

00:30:50,549 --> 00:30:55,049
is just details so get excited and

00:30:54,570 --> 00:30:56,759
breathing

00:30:55,049 --> 00:30:58,360
thank you very much Hannah put your

00:30:56,759 --> 00:31:00,420
hands together break

00:30:58,360 --> 00:31:00,420
you

00:31:08,540 --> 00:31:10,600

YouTube URL: https://www.youtube.com/watch?v=3birX_l-YZ8


