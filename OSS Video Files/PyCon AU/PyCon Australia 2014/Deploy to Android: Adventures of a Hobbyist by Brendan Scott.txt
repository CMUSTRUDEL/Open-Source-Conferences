Title: Deploy to Android: Adventures of a Hobbyist by Brendan Scott
Publication date: 2014-08-05
Playlist: PyCon Australia 2014
Description: 
	Writing a program in Python targeting the Android environment is well within your reach with the use of third party kits such as Kivy and the Pygame Subset for Android.  

Kivy is an "Open source Python library for rapid development of applications" and comes with tools which allow Kivy based programs to be packaged as Android apks for deployment to Android devices.   In this session I will give an overview of the Kivy development and deployment process.  I will also draw inspiration from my successes and failures in developing Python programs with Kivy to highlight Kivy's strengths, weaknesses and idiosyncracies.   Code examples will be kept to a minimum, with a focus on illustrating the capabilities of the Kivy library and explaining how its parts work together. 

I will also reserve some time to discuss the Pygame Subset for Android and how it can be used to deploy Pygame based games to Android devices.

PyCon Australia is the national conference for users of the Python Programming Language. In August 2014, we're heading to Brisbane to bring together students, enthusiasts, and professionals with a love of Python from around Australia, and all around the World. 

August 1-5, Brisbane, Queensland, Australia
Captions: 
	00:00:08,969 --> 00:00:13,900
thank you for coming along today this

00:00:11,860 --> 00:00:18,520
talk today is about is called deploy to

00:00:13,900 --> 00:00:19,930
Android but it's it's mainly about 22

00:00:18,520 --> 00:00:23,289
tools that you can use to get from

00:00:19,930 --> 00:00:24,970
Python to an Android device the first

00:00:23,289 --> 00:00:26,590
tool is called kivi and that's the thing

00:00:24,970 --> 00:00:29,050
that I'll be spending like eighty

00:00:26,590 --> 00:00:30,489
percent of this talk talking about the

00:00:29,050 --> 00:00:35,710
second thing is called the pie game

00:00:30,489 --> 00:00:37,180
subset for Android this is just a short

00:00:35,710 --> 00:00:38,980
slide about me which you don't actually

00:00:37,180 --> 00:00:43,480
need to look at all that deeply other

00:00:38,980 --> 00:00:46,480
than to say that Python is not my day

00:00:43,480 --> 00:00:48,070
job it's not something that I do all the

00:00:46,480 --> 00:00:49,540
time it's something that I do from time

00:00:48,070 --> 00:00:51,579
to time when I have something have a

00:00:49,540 --> 00:00:54,550
problem that I need to solve I turn to

00:00:51,579 --> 00:00:57,520
python and why is that relevant well

00:00:54,550 --> 00:00:59,680
it's relevant because despite me not

00:00:57,520 --> 00:01:01,930
having a deep knowledge of how to do

00:00:59,680 --> 00:01:04,449
these things I can still get my stuff

00:01:01,930 --> 00:01:09,909
going on Android and if I can do it I

00:01:04,449 --> 00:01:12,399
think probably anybody can why why would

00:01:09,909 --> 00:01:16,630
you why would you want to use this thing

00:01:12,399 --> 00:01:21,280
called TV and the thing about kitty is

00:01:16,630 --> 00:01:23,259
that it solves a perennial problem with

00:01:21,280 --> 00:01:25,600
package with with Python in my view

00:01:23,259 --> 00:01:27,100
which is that you've once you've written

00:01:25,600 --> 00:01:29,649
your Python program it's very difficult

00:01:27,100 --> 00:01:32,229
to get out to people and so there are

00:01:29,649 --> 00:01:35,499
other solutions where you can bundle up

00:01:32,229 --> 00:01:37,509
and XE and send it off to people the

00:01:35,499 --> 00:01:39,009
kyuubi sort of does that for Android but

00:01:37,509 --> 00:01:43,090
not only does it do it for Android it

00:01:39,009 --> 00:01:46,439
does it for iOS as well although i'm not

00:01:43,090 --> 00:01:51,819
going to be talking about files here and

00:01:46,439 --> 00:01:53,859
the other thing that that TV does and so

00:01:51,819 --> 00:01:57,039
it solves that it's of the packaging and

00:01:53,859 --> 00:01:59,560
distribution problem by allowing you to

00:01:57,039 --> 00:02:00,969
develop on whatever however you like and

00:01:59,560 --> 00:02:03,700
then once you've finished developing on

00:02:00,969 --> 00:02:06,369
your pc or whatever it'll package up an

00:02:03,700 --> 00:02:09,390
APK for you and then you can just leave

00:02:06,369 --> 00:02:11,770
Ridge off third party app stores you can

00:02:09,390 --> 00:02:13,120
put up to Google Play you can pull it up

00:02:11,770 --> 00:02:15,190
to where ever you want that'll take an

00:02:13,120 --> 00:02:17,970
APK as long as you've got a developer

00:02:15,190 --> 00:02:21,380
account and can do what's necessary to

00:02:17,970 --> 00:02:25,070
get it up onto the to take a nap and ap

00:02:21,380 --> 00:02:26,930
k and put onto an app store kibbeh will

00:02:25,070 --> 00:02:28,940
get you to the APK and from there you

00:02:26,930 --> 00:02:32,330
can just leverage the power of these

00:02:28,940 --> 00:02:34,420
third-party app stores and not only that

00:02:32,330 --> 00:02:37,760
but it will also allow you to use their

00:02:34,420 --> 00:02:39,890
api's so you can use the Android API s

00:02:37,760 --> 00:02:42,830
to do things like charging if you want

00:02:39,890 --> 00:02:45,770
to do in-app billing you can use QV to

00:02:42,830 --> 00:02:48,200
do that I haven't but i have read more

00:02:45,770 --> 00:02:53,510
stories of people who have been

00:02:48,200 --> 00:02:55,760
successful in doing that so what is it

00:02:53,510 --> 00:02:57,470
well it describes itself as an open

00:02:55,760 --> 00:02:59,780
source python library for rapid

00:02:57,470 --> 00:03:02,090
development of applications my

00:02:59,780 --> 00:03:06,110
experience is that it is primarily a

00:03:02,090 --> 00:03:11,450
widget set plus some tools for event

00:03:06,110 --> 00:03:14,330
management this is what a TV application

00:03:11,450 --> 00:03:16,220
looks like this is my first well it's

00:03:14,330 --> 00:03:18,580
not active yet it's what the widgets

00:03:16,220 --> 00:03:21,350
look like and this is my first

00:03:18,580 --> 00:03:25,160
application in kv and was originally

00:03:21,350 --> 00:03:28,160
written I interc hinter for my old epc

00:03:25,160 --> 00:03:29,660
701 the battery died one day and i

00:03:28,160 --> 00:03:32,300
discovered that i didn't have a portable

00:03:29,660 --> 00:03:34,520
device anymore or my portable device was

00:03:32,300 --> 00:03:37,550
an android device and so I needed to

00:03:34,520 --> 00:03:40,970
take that existing tick into code and

00:03:37,550 --> 00:03:44,270
get it running on Android and so that

00:03:40,970 --> 00:03:46,640
that's what it what it did what this

00:03:44,270 --> 00:03:50,360
does is it allows me to review news

00:03:46,640 --> 00:03:53,060
articles and classify them but what this

00:03:50,360 --> 00:03:56,770
slide shows is you know buttons are

00:03:53,060 --> 00:04:00,860
drop-down menu some labels a checkbox an

00:03:56,770 --> 00:04:03,440
edit text area so it's just a general

00:04:00,860 --> 00:04:06,920
sort of spread of the things which are

00:04:03,440 --> 00:04:14,270
the widgets which are available through

00:04:06,920 --> 00:04:18,170
keavy and TV comes with a file dialog so

00:04:14,270 --> 00:04:21,040
you can just it can just you just ask it

00:04:18,170 --> 00:04:23,210
to do your file dialog for you and it'll

00:04:21,040 --> 00:04:25,460
put this up and allow you to choose

00:04:23,210 --> 00:04:28,270
things to select your file and it will

00:04:25,460 --> 00:04:30,890
return the pup file name and path to you

00:04:28,270 --> 00:04:34,650
the the main reason I'm putting up this

00:04:30,890 --> 00:04:36,930
slide is to show that TV

00:04:34,650 --> 00:04:40,740
he allows you to do these things but it

00:04:36,930 --> 00:04:43,740
doesn't necessarily do all of nice

00:04:40,740 --> 00:04:45,930
graphics for you so down the bottom you

00:04:43,740 --> 00:04:48,270
can see a load and a cancel button and

00:04:45,930 --> 00:04:49,440
those buttons are extremely thin it

00:04:48,270 --> 00:04:51,060
doesn't bother me because I've got a

00:04:49,440 --> 00:04:53,940
stylus and it's this is just my own

00:04:51,060 --> 00:04:57,090
application but you'd need to do the

00:04:53,940 --> 00:04:59,539
geometry of the the device you're using

00:04:57,090 --> 00:05:03,560
in order to size the widgets properly

00:04:59,539 --> 00:05:05,850
for Kivi to use it and kiri comes with

00:05:03,560 --> 00:05:08,729
comes with the tools to allow you to do

00:05:05,850 --> 00:05:14,130
that but for this application I didn't

00:05:08,729 --> 00:05:17,039
do it this is me hiding my face on the

00:05:14,130 --> 00:05:21,169
side it's this is the first application

00:05:17,039 --> 00:05:26,370
that i actually wrote wholly within TV

00:05:21,169 --> 00:05:28,110
and the application is the purpose of

00:05:26,370 --> 00:05:31,110
the application is to take a photo and

00:05:28,110 --> 00:05:35,280
grid it so that you can freehand draw

00:05:31,110 --> 00:05:38,009
the photo and the things the reason this

00:05:35,280 --> 00:05:41,160
is relevant is because you can't I had

00:05:38,009 --> 00:05:43,289
hoped that we might have a camera to

00:05:41,160 --> 00:05:46,139
show you how it worked but the thing the

00:05:43,289 --> 00:05:50,099
thing about this application is that you

00:05:46,139 --> 00:05:53,220
get pinch zoom and scale and translate

00:05:50,099 --> 00:05:55,470
and rotate all for free by using a

00:05:53,220 --> 00:05:57,570
widget called the scatter widget so

00:05:55,470 --> 00:05:59,190
these although everything you can see on

00:05:57,570 --> 00:06:01,080
there is is floating on top of this

00:05:59,190 --> 00:06:03,659
thing called a scatter widget which

00:06:01,080 --> 00:06:07,289
means I can just pinch it zoom it move

00:06:03,659 --> 00:06:16,080
it around however I like and basically

00:06:07,289 --> 00:06:17,669
no coding I also wanted to say later on

00:06:16,080 --> 00:06:20,430
I'll talk about this thing called the

00:06:17,669 --> 00:06:21,539
templating language for kitty I hope you

00:06:20,430 --> 00:06:24,150
can see them but there's these little

00:06:21,539 --> 00:06:26,789
crosshairs with a lot with a number

00:06:24,150 --> 00:06:29,610
label beside them and each of those

00:06:26,789 --> 00:06:30,990
things is a widget which I have well

00:06:29,610 --> 00:06:35,510
it's a custom widget I guess which I've

00:06:30,990 --> 00:06:40,949
subclassed from the kitty widget class

00:06:35,510 --> 00:06:42,900
and every time you instantiate one of

00:06:40,949 --> 00:06:46,200
these things kivi just does it all for

00:06:42,900 --> 00:06:48,280
you it puts together where the where the

00:06:46,200 --> 00:06:49,990
label has to be and puts through the

00:06:48,280 --> 00:06:55,240
here's where you want it and and so

00:06:49,990 --> 00:06:57,430
forth and the buttons are a bit boring

00:06:55,240 --> 00:06:59,950
down the side but you can load up images

00:06:57,430 --> 00:07:04,230
to those buttons if well you were

00:06:59,950 --> 00:07:07,900
probably obviously going to do that so

00:07:04,230 --> 00:07:09,430
more about QV well working in TV is

00:07:07,900 --> 00:07:12,340
pretty easy because it's pretty much

00:07:09,430 --> 00:07:13,360
pure python all of the way as i

00:07:12,340 --> 00:07:15,669
mentioned earlier it supports

00:07:13,360 --> 00:07:17,260
multi-touch so you can get multiple

00:07:15,669 --> 00:07:18,820
events on your screen so if someone's

00:07:17,260 --> 00:07:20,380
touching you're going to get a advance

00:07:18,820 --> 00:07:22,870
for all of those fingers that are coming

00:07:20,380 --> 00:07:24,550
down you've got this pinches pinch to

00:07:22,870 --> 00:07:26,050
zoom and rotate which you see on all of

00:07:24,550 --> 00:07:30,100
those mobile apps and you get it pretty

00:07:26,050 --> 00:07:32,800
much for free it implements an observer

00:07:30,100 --> 00:07:34,780
pattern so you don't have to worry about

00:07:32,800 --> 00:07:37,630
maintaining where your dirty rectangles

00:07:34,780 --> 00:07:40,270
are you just move the widget from one

00:07:37,630 --> 00:07:42,010
point to another and tick int'l ticking

00:07:40,270 --> 00:07:44,050
to does it for you updates the position

00:07:42,010 --> 00:07:46,990
on the screen and so in this previous

00:07:44,050 --> 00:07:50,169
one the idea is that you can press on

00:07:46,990 --> 00:07:53,140
one of these crosshairs and just drag it

00:07:50,169 --> 00:07:56,380
across the screen and keep you will

00:07:53,140 --> 00:07:58,030
update it for you if all you do is just

00:07:56,380 --> 00:07:59,530
say look put it in this position put it

00:07:58,030 --> 00:08:01,060
in this position just you just give it

00:07:59,530 --> 00:08:06,340
new pauses all the time and if it'll

00:08:01,060 --> 00:08:09,850
move it for you Kivi also supports

00:08:06,340 --> 00:08:13,600
android idiot idioms life cycle intense

00:08:09,850 --> 00:08:17,250
and intensive intent filters and intense

00:08:13,600 --> 00:08:21,190
are how Android does inter-process

00:08:17,250 --> 00:08:23,200
communications and the thing to note

00:08:21,190 --> 00:08:24,970
here is that if you want to do work on

00:08:23,200 --> 00:08:26,560
Android and you want to have some

00:08:24,970 --> 00:08:28,630
interaction with the Android environment

00:08:26,560 --> 00:08:33,039
on your device you have to learn about

00:08:28,630 --> 00:08:37,900
Android so you can't just do it entirely

00:08:33,039 --> 00:08:41,820
within a Python view of the world well

00:08:37,900 --> 00:08:45,520
how does keevy get you there well it

00:08:41,820 --> 00:08:48,580
basically takes the whole of Python and

00:08:45,520 --> 00:08:53,260
drops it into an apk and it runs the

00:08:48,580 --> 00:08:56,830
Python interpreter for your for your car

00:08:53,260 --> 00:08:58,780
over your code kitty also comes with

00:08:56,830 --> 00:09:01,870
this thing called I don't know how to

00:08:58,780 --> 00:09:04,960
pronounce of pipe eat pigeon pie genius

00:09:01,870 --> 00:09:07,870
and the purpose of that is to allow you

00:09:04,960 --> 00:09:11,140
to access any of the Java libraries

00:09:07,870 --> 00:09:14,080
through Python and so it's through this

00:09:11,140 --> 00:09:17,020
pigeon ears library that you can access

00:09:14,080 --> 00:09:19,900
the Android Android API it's but it's a

00:09:17,020 --> 00:09:21,640
bit difficult I haven't other than I

00:09:19,900 --> 00:09:23,680
mean I've done a little bit but not not

00:09:21,640 --> 00:09:25,390
greatly if you're going to do it you

00:09:23,680 --> 00:09:28,180
need to understand how Java is working

00:09:25,390 --> 00:09:31,230
on the API in order to give it what what

00:09:28,180 --> 00:09:34,210
it's looking for in order to get keavy

00:09:31,230 --> 00:09:40,890
producing an APK for you you need to

00:09:34,210 --> 00:09:44,380
install heap of dependencies so

00:09:40,890 --> 00:09:46,600
developing using using TV is really just

00:09:44,380 --> 00:09:49,210
like riding a python program on your pc

00:09:46,600 --> 00:09:50,980
and once you've you can you can create

00:09:49,210 --> 00:09:53,680
on the pc and test another pc and once

00:09:50,980 --> 00:09:55,779
you've finished you can use this this

00:09:53,680 --> 00:09:57,910
tool called billdozer which will

00:09:55,779 --> 00:10:01,029
basically automatically produce your APK

00:09:57,910 --> 00:10:02,680
for you once you've got that APK you can

00:10:01,029 --> 00:10:05,050
either side load it onto your device

00:10:02,680 --> 00:10:08,920
which is basically what I've done but

00:10:05,050 --> 00:10:10,150
you can also align it and sign it if you

00:10:08,920 --> 00:10:12,190
have a developer account and then you

00:10:10,150 --> 00:10:20,560
can upload it to google play and then

00:10:12,190 --> 00:10:23,140
anybody can get it in order to develop

00:10:20,560 --> 00:10:26,110
with TV because you're using the widgets

00:10:23,140 --> 00:10:28,779
you sort of have to write or rewrite

00:10:26,110 --> 00:10:31,209
your UI using the keavy widgets which is

00:10:28,779 --> 00:10:33,670
what i did in that first example I

00:10:31,209 --> 00:10:35,650
showed you but otherwise you're pretty

00:10:33,670 --> 00:10:39,070
much free to use any python library you

00:10:35,650 --> 00:10:42,910
like including I think the networking

00:10:39,070 --> 00:10:47,410
libraries so you can you're very free to

00:10:42,910 --> 00:10:49,110
use to use Python behind the view give

00:10:47,410 --> 00:10:52,029
you also comes with this thing called

00:10:49,110 --> 00:10:53,650
but well they're called kitty files but

00:10:52,029 --> 00:10:57,670
it's a templating language so you can

00:10:53,650 --> 00:10:59,709
for each of your interesting widgets you

00:10:57,670 --> 00:11:01,900
don't have to program programmatically

00:10:59,709 --> 00:11:04,779
create them you can just say well the

00:11:01,900 --> 00:11:09,420
you know located at this point reference

00:11:04,779 --> 00:11:12,130
to some variable in the the object you

00:11:09,420 --> 00:11:15,010
and it just puts it all together for you

00:11:12,130 --> 00:11:15,350
the Q language is a bit difficult in so

00:11:15,010 --> 00:11:16,850
far

00:11:15,350 --> 00:11:18,440
as it makes some assumption it's got

00:11:16,850 --> 00:11:20,570
some implicit it's got some implicit

00:11:18,440 --> 00:11:23,780
pneus to it to it and it's not always

00:11:20,570 --> 00:11:26,600
obvious how to get what you want from

00:11:23,780 --> 00:11:28,660
the keavy language based on get from

00:11:26,600 --> 00:11:37,550
your code to the to the finished product

00:11:28,660 --> 00:11:40,100
via the the kitty language the process

00:11:37,550 --> 00:11:42,710
of developing with kitty is pretty

00:11:40,100 --> 00:11:46,970
simple you although you have to have a

00:11:42,710 --> 00:11:51,110
thing called the main dot pie script you

00:11:46,970 --> 00:11:55,390
have to find the key VA plication class

00:11:51,110 --> 00:11:58,370
and subclass that for your application

00:11:55,390 --> 00:12:00,740
you need to have a build method in the

00:11:58,370 --> 00:12:02,780
application and that application has to

00:12:00,740 --> 00:12:05,570
return a widget kitty widget of some

00:12:02,780 --> 00:12:09,950
sort and that TV widget becomes your

00:12:05,570 --> 00:12:11,090
applications root widget so build does

00:12:09,950 --> 00:12:13,010
something and at the end of that it

00:12:11,090 --> 00:12:16,580
returns a widget and that widget is

00:12:13,010 --> 00:12:20,720
where control is handed over to over two

00:12:16,580 --> 00:12:23,060
and this creates a separation between

00:12:20,720 --> 00:12:26,960
your application and your widget and I

00:12:23,060 --> 00:12:29,510
find I have a tendency to just put all

00:12:26,960 --> 00:12:32,260
of the code into the widget and that

00:12:29,510 --> 00:12:37,010
means you know I've got this problem of

00:12:32,260 --> 00:12:39,890
well over this problem of separating the

00:12:37,010 --> 00:12:44,330
view from what you know the controller

00:12:39,890 --> 00:12:45,770
what's going on and I my experience it's

00:12:44,330 --> 00:12:53,150
a similar experience that I have when

00:12:45,770 --> 00:12:56,420
I'm using two Kinta I guess so once

00:12:53,150 --> 00:12:58,640
you've got your Python program working

00:12:56,420 --> 00:13:00,500
and you can test it on your pc or your

00:12:58,640 --> 00:13:03,380
Mac you don't need to deploy it to a

00:13:00,500 --> 00:13:05,960
device in order to test it except to the

00:13:03,380 --> 00:13:10,160
extent it makes use of Android specific

00:13:05,960 --> 00:13:14,450
stuff once you're happy with it you can

00:13:10,160 --> 00:13:16,730
use a tool which comes with with Kevin

00:13:14,450 --> 00:13:18,470
called billdozer and builders of just

00:13:16,730 --> 00:13:19,670
basically does it for you there's a

00:13:18,470 --> 00:13:23,860
whole lots of little bits and pieces

00:13:19,670 --> 00:13:26,150
that it does but it I think it compiles

00:13:23,860 --> 00:13:30,310
it compiles the Python interpreter for

00:13:26,150 --> 00:13:30,310
you it compiles your stuff into

00:13:31,150 --> 00:13:38,330
into pyo files it puts together our

00:13:36,680 --> 00:13:41,030
specifications file it puts together

00:13:38,330 --> 00:13:44,630
some XML that that Java needs when it

00:13:41,030 --> 00:13:48,260
gets onto the that Android needs to know

00:13:44,630 --> 00:13:51,320
what to do with your file and it just

00:13:48,260 --> 00:13:52,880
produces the APK the first time you run

00:13:51,320 --> 00:13:55,400
it it's a bit slow because it's doing

00:13:52,880 --> 00:13:57,350
all this work but every time you do a

00:13:55,400 --> 00:13:59,300
change it only it only works on the

00:13:57,350 --> 00:14:01,880
changes that you do so the second and

00:13:59,300 --> 00:14:05,210
third builds are much faster than the

00:14:01,880 --> 00:14:07,400
first bill dozer is tries to be really

00:14:05,210 --> 00:14:09,500
helpful it can be a little bit overly

00:14:07,400 --> 00:14:10,880
helpful sometimes because it's

00:14:09,500 --> 00:14:12,770
downloading stuff that you might not

00:14:10,880 --> 00:14:14,480
want and it's downloading it to a place

00:14:12,770 --> 00:14:17,470
where I found that I didn't want it to

00:14:14,480 --> 00:14:20,270
be downloading too but by and large it's

00:14:17,470 --> 00:14:24,400
it's a simple and painless operation to

00:14:20,270 --> 00:14:24,400
get builders of producing an apk for you

00:14:25,540 --> 00:14:34,700
if you are wanting to interact with the

00:14:30,800 --> 00:14:38,600
broader Android environment you can and

00:14:34,700 --> 00:14:40,280
so it's got Kitty does support this

00:14:38,600 --> 00:14:43,400
inter process communication that Android

00:14:40,280 --> 00:14:44,990
has called intense you can you can

00:14:43,400 --> 00:14:47,120
register what's called an intent filter

00:14:44,990 --> 00:14:48,740
and in an intent filter might be

00:14:47,120 --> 00:14:51,290
something that you would use for example

00:14:48,740 --> 00:14:53,690
where you have a file manager and you

00:14:51,290 --> 00:14:56,060
press you click on a dot docx file and

00:14:53,690 --> 00:15:01,760
it'll open up an application with that

00:14:56,060 --> 00:15:05,630
doc file open for you you can do that

00:15:01,760 --> 00:15:08,240
using TV and so I've for that gritter

00:15:05,630 --> 00:15:09,710
application I've got my own expire on

00:15:08,240 --> 00:15:12,350
file extension if I click on one of

00:15:09,710 --> 00:15:15,590
those files in the file manager it'll

00:15:12,350 --> 00:15:20,260
it'll open TV for me automatically it'll

00:15:15,590 --> 00:15:23,030
do the file with association for me it

00:15:20,260 --> 00:15:24,530
in order to do that in order to do work

00:15:23,030 --> 00:15:25,670
with that broader Android environment

00:15:24,530 --> 00:15:28,130
though you have to understand this thing

00:15:25,670 --> 00:15:30,830
called the Android lifecycle and that

00:15:28,130 --> 00:15:33,110
requires a little bit of research

00:15:30,830 --> 00:15:35,660
because it's not entirely it's not

00:15:33,110 --> 00:15:38,000
intuitively obvious why android does the

00:15:35,660 --> 00:15:39,890
thing that things it does but basically

00:15:38,000 --> 00:15:42,180
the the thing about android is that

00:15:39,890 --> 00:15:43,649
originally it was designed so that

00:15:42,180 --> 00:15:45,839
the operating system could kill any

00:15:43,649 --> 00:15:50,310
application at any time without notice

00:15:45,839 --> 00:15:52,800
or with very little warning and so what

00:15:50,310 --> 00:15:56,130
it has is these requirements or it has

00:15:52,800 --> 00:15:57,750
these options for you called or you can

00:15:56,130 --> 00:15:59,810
write methods called on pores and on

00:15:57,750 --> 00:16:03,290
resume a non-stop and on start and

00:15:59,810 --> 00:16:06,690
Android will call these methods for you

00:16:03,290 --> 00:16:07,980
at the appropriate times so if someone

00:16:06,690 --> 00:16:09,450
takes a funny idea was if someone takes

00:16:07,980 --> 00:16:11,310
a phone call it wants to kill the app

00:16:09,450 --> 00:16:14,610
the app that you're looking at and pass

00:16:11,310 --> 00:16:17,790
control over to the to the call and so

00:16:14,610 --> 00:16:19,470
if you haven't written your Python code

00:16:17,790 --> 00:16:21,120
to anticipate the fact that the

00:16:19,470 --> 00:16:23,490
operating system might just be killing

00:16:21,120 --> 00:16:27,589
you app for no good reason it's not

00:16:23,490 --> 00:16:27,589
going to work properly on on Android and

00:16:27,860 --> 00:16:37,500
you can but the long and the short of it

00:16:31,860 --> 00:16:41,040
is that you can you can implement all of

00:16:37,500 --> 00:16:43,529
these things right yeah so you can am

00:16:41,040 --> 00:16:47,430
you can implement on pause and on resume

00:16:43,529 --> 00:16:49,310
and on start and on stop you can you can

00:16:47,430 --> 00:16:53,070
implement inter-process communication

00:16:49,310 --> 00:16:56,279
which is the well you can intent you can

00:16:53,070 --> 00:16:58,740
you can do intent filters which is if I

00:16:56,279 --> 00:17:01,620
click on a click on a file it'll open

00:16:58,740 --> 00:17:03,839
the application for you in theory you

00:17:01,620 --> 00:17:06,420
can do inter process communication which

00:17:03,839 --> 00:17:09,540
is creating an intent and shooting it

00:17:06,420 --> 00:17:11,880
off to to some other application and

00:17:09,540 --> 00:17:13,679
equally if your if your application is

00:17:11,880 --> 00:17:16,319
running you can you can receive an

00:17:13,679 --> 00:17:19,980
intent that comes from some other

00:17:16,319 --> 00:17:21,870
application at the moment it's got a few

00:17:19,980 --> 00:17:25,170
wrinkles in the way that it's

00:17:21,870 --> 00:17:27,959
implemented and TV actually can't

00:17:25,170 --> 00:17:30,510
properly receive an intent from from

00:17:27,959 --> 00:17:32,880
another application the applicant your

00:17:30,510 --> 00:17:35,280
application is running it has trouble

00:17:32,880 --> 00:17:37,050
receiving new intense because it assumes

00:17:35,280 --> 00:17:39,330
that your application is a service and

00:17:37,050 --> 00:17:40,860
not actually an application and the way

00:17:39,330 --> 00:17:44,070
they've implemented on pause and on

00:17:40,860 --> 00:17:45,240
resume doesn't work quite right it's

00:17:44,070 --> 00:17:46,620
fine when you first start the

00:17:45,240 --> 00:17:48,950
application but not if it's already

00:17:46,620 --> 00:17:48,950
running

00:17:52,280 --> 00:17:58,260
so the documentation for TV is

00:17:55,590 --> 00:18:00,539
reasonably complete I've had a lot of

00:17:58,260 --> 00:18:03,419
frustrating experiences finding things

00:18:00,539 --> 00:18:05,250
in the docks but my you know my

00:18:03,419 --> 00:18:06,630
experience is that they tend to be there

00:18:05,250 --> 00:18:10,650
it's just they might not be where I

00:18:06,630 --> 00:18:13,559
expect them to be the the docks for the

00:18:10,650 --> 00:18:16,830
pigeon ears library and not that great

00:18:13,559 --> 00:18:18,750
and in fact I've you know stuck to

00:18:16,830 --> 00:18:20,280
following what other people have done in

00:18:18,750 --> 00:18:25,590
their tutorials rather than trying to

00:18:20,280 --> 00:18:29,850
decode the documentation so what are

00:18:25,590 --> 00:18:32,760
some of the issues with Kivi well the

00:18:29,850 --> 00:18:35,280
docks that I just mentioned using

00:18:32,760 --> 00:18:37,530
Android and Java requires you to

00:18:35,280 --> 00:18:44,549
understand some some part of Android and

00:18:37,530 --> 00:18:46,610
Java using android if you just want to

00:18:44,549 --> 00:18:48,990
do an application perhaps like a game

00:18:46,610 --> 00:18:51,240
which doesn't care about what the rest

00:18:48,990 --> 00:18:52,710
of the device is doing that you don't

00:18:51,240 --> 00:18:54,720
actually have to worry about Android and

00:18:52,710 --> 00:18:58,140
Java but once you get into doing trying

00:18:54,720 --> 00:19:02,070
to work in the Android environment then

00:18:58,140 --> 00:19:03,539
you do and the compile cycle well the

00:19:02,070 --> 00:19:05,280
horn work in Python so don't to go

00:19:03,539 --> 00:19:07,559
through a compile cycle but if you've

00:19:05,280 --> 00:19:09,360
got any Android specific staff you

00:19:07,559 --> 00:19:11,309
actually do need to compile it so if you

00:19:09,360 --> 00:19:12,299
want to test on plow on pause is working

00:19:11,309 --> 00:19:16,309
then you have to get it to either a

00:19:12,299 --> 00:19:19,289
virtual device or to a physical device

00:19:16,309 --> 00:19:21,990
and that's just you know 60-second

00:19:19,289 --> 00:19:24,030
compile for me every time and then it

00:19:21,990 --> 00:19:27,900
runs it's not a big deal but it is a

00:19:24,030 --> 00:19:31,020
small deal I found introspection really

00:19:27,900 --> 00:19:32,820
difficult and especially when you have

00:19:31,020 --> 00:19:34,679
to work through an Android virtual

00:19:32,820 --> 00:19:36,780
device because you're effectively

00:19:34,679 --> 00:19:39,090
looking through the log files and trying

00:19:36,780 --> 00:19:40,530
to anticipate what you're looking for

00:19:39,090 --> 00:19:41,820
and sometimes you're trying to dump all

00:19:40,530 --> 00:19:47,090
of the objects and it doesn't always

00:19:41,820 --> 00:19:48,780
want to do that for you so my

00:19:47,090 --> 00:19:50,880
introspection you're not going to get as

00:19:48,780 --> 00:19:53,010
much as you expect to get or as you'd

00:19:50,880 --> 00:19:56,789
like to get give you had some implicit

00:19:53,010 --> 00:19:58,530
context rules pick more with the kitty

00:19:56,789 --> 00:20:01,470
language with the templating language

00:19:58,530 --> 00:20:02,880
that I was talking about and sometimes

00:20:01,470 --> 00:20:05,750
that means it's dev

00:20:02,880 --> 00:20:08,100
for me to sink their if I want to

00:20:05,750 --> 00:20:09,810
programmatically create a widget it's

00:20:08,100 --> 00:20:11,820
difficult for me to sink that with what

00:20:09,810 --> 00:20:13,410
I'm with the templating with what the

00:20:11,820 --> 00:20:17,070
templating language is trying to do in

00:20:13,410 --> 00:20:19,530
the widget creation and I had a bit of

00:20:17,070 --> 00:20:21,570
trouble with some of the bubbling when I

00:20:19,530 --> 00:20:23,730
clicked on a a widget which was above

00:20:21,570 --> 00:20:26,340
another widget I had trouble working it

00:20:23,730 --> 00:20:27,810
out it wasn't coming from where are the

00:20:26,340 --> 00:20:32,760
events were not coming from where I was

00:20:27,810 --> 00:20:36,930
thinking they were coming from pygame

00:20:32,760 --> 00:20:38,550
subset for android so that's that's

00:20:36,930 --> 00:20:40,740
kiddie for you I hope it wasn't too fast

00:20:38,550 --> 00:20:43,140
but that's an overview of what kitty was

00:20:40,740 --> 00:20:44,580
and and I guess I would before I'd stop

00:20:43,140 --> 00:20:46,530
talking about kitty I just think it is

00:20:44,580 --> 00:20:47,880
great because it solves this problem of

00:20:46,530 --> 00:20:50,580
getting stuff to Android nugget these

00:20:47,880 --> 00:20:52,830
android devices it's really easy for me

00:20:50,580 --> 00:20:55,710
to get a functional python program

00:20:52,830 --> 00:20:58,800
working on them pygame subset for

00:20:55,710 --> 00:21:01,680
android as it says is a port of my game

00:20:58,800 --> 00:21:03,270
so if you have an application that is

00:21:01,680 --> 00:21:06,060
written in PI game or you want to write

00:21:03,270 --> 00:21:08,910
an application which is in per game this

00:21:06,060 --> 00:21:10,800
is where you go to it'll allow you to do

00:21:08,910 --> 00:21:16,130
it the only problem is it's Python 2.7

00:21:10,800 --> 00:21:18,480
only it's not for Python 3 at the moment

00:21:16,130 --> 00:21:20,490
space fighter or not show you you can

00:21:18,480 --> 00:21:23,820
see the little ships so this is my pie

00:21:20,490 --> 00:21:25,230
game application that i wrote probably

00:21:23,820 --> 00:21:27,060
about four or five years ago as

00:21:25,230 --> 00:21:30,870
something to do it's a vector graphics

00:21:27,060 --> 00:21:35,580
space of fighting game and this was my

00:21:30,870 --> 00:21:39,690
candidate for porting to android for are

00:21:35,580 --> 00:21:45,680
using pygame subzip for android how do i

00:21:39,690 --> 00:21:48,450
do it well it's pretty simple really you

00:21:45,680 --> 00:21:51,420
put your code again in a main dot pie

00:21:48,450 --> 00:21:54,750
function so you have be put in a made-up

00:21:51,420 --> 00:21:57,780
I file you have a main function in main

00:21:54,750 --> 00:22:01,500
dot pie and you pass control to Maine to

00:21:57,780 --> 00:22:06,780
the mass function so myspace photo game

00:22:01,500 --> 00:22:09,360
took about maybe an hour to port 1200

00:22:06,780 --> 00:22:13,380
lines of code from from pure player game

00:22:09,360 --> 00:22:14,269
to spaceflight Oh plugin for subset for

00:22:13,380 --> 00:22:19,509
android

00:22:14,269 --> 00:22:22,369
it really was super super super simple

00:22:19,509 --> 00:22:24,559
you know I probably changed 10 lines of

00:22:22,369 --> 00:22:26,690
code I moved stuff around but if you

00:22:24,559 --> 00:22:30,080
exclude the movements I didn't really

00:22:26,690 --> 00:22:32,690
actually do much addition but I found

00:22:30,080 --> 00:22:35,570
that once i got running on my android

00:22:32,690 --> 00:22:37,519
device I don't have a keyboard and so

00:22:35,570 --> 00:22:41,539
the assumptions that I've made when I

00:22:37,519 --> 00:22:44,509
developed it initially were no longer

00:22:41,539 --> 00:22:48,789
valid so it was there but I couldn't

00:22:44,509 --> 00:22:51,529
actually control the spaceships and

00:22:48,789 --> 00:22:56,959
they're also regular pauses in the game

00:22:51,529 --> 00:23:00,649
which i haven't debugged yet so in

00:22:56,959 --> 00:23:04,549
summary give yourselves an important

00:23:00,649 --> 00:23:06,769
problem which is distribution and it

00:23:04,549 --> 00:23:08,299
solves that problem by leveraging by by

00:23:06,769 --> 00:23:11,239
giving you a method of leveraging these

00:23:08,299 --> 00:23:12,799
third-party app stores my experience of

00:23:11,239 --> 00:23:15,159
plug amp sub set for android is that

00:23:12,799 --> 00:23:17,719
it's very easy to port an existing

00:23:15,159 --> 00:23:19,399
application but the problem is you can't

00:23:17,719 --> 00:23:22,070
rely on the existence of the keyboard

00:23:19,399 --> 00:23:23,739
and you probably didn't realize that

00:23:22,070 --> 00:23:27,409
when you were first doing your game and

00:23:23,739 --> 00:23:29,749
so in practice you're always going to

00:23:27,409 --> 00:23:32,329
need to have a new the user interface

00:23:29,749 --> 00:23:35,929
rewrite because the interface is is

00:23:32,329 --> 00:23:42,019
different in both of them there's some

00:23:35,929 --> 00:23:44,119
references if you're interested do does

00:23:42,019 --> 00:23:50,899
anybody have any questions was that sort

00:23:44,119 --> 00:23:53,989
of world winter or what um you have key

00:23:50,899 --> 00:23:57,259
we can generate for android and iOS can

00:23:53,989 --> 00:24:00,079
also generate for windows and like mac

00:23:57,259 --> 00:24:01,700
desktop so it I don't think it creates

00:24:00,079 --> 00:24:03,919
an XE file if that's what you're talking

00:24:01,700 --> 00:24:09,609
about no I think you have to use one of

00:24:03,919 --> 00:24:11,869
those other packaging solutions sorry I

00:24:09,609 --> 00:24:15,429
mean if you don't want to package it I

00:24:11,869 --> 00:24:18,019
mean you just sorry it will run on

00:24:15,429 --> 00:24:20,809
windows if you just even just got a

00:24:18,019 --> 00:24:23,649
Python name of native application it'll

00:24:20,809 --> 00:24:23,649
still run and

00:24:24,179 --> 00:24:28,720
no no well you need to keep your library

00:24:27,429 --> 00:24:30,970
so the key view library needs to be

00:24:28,720 --> 00:24:34,269
installed but apart from that but that's

00:24:30,970 --> 00:24:35,590
all but you won't but and your code will

00:24:34,269 --> 00:24:37,990
have to anticipate that it's not an

00:24:35,590 --> 00:24:42,220
Android or it's not iOS and two things

00:24:37,990 --> 00:24:50,919
appropriately but in principle yes it's

00:24:42,220 --> 00:24:53,980
paid to exe any major android version or

00:24:50,919 --> 00:24:56,470
device restrictions ah no no not that I

00:24:53,980 --> 00:25:01,299
mean I haven't done a lot of looking

00:24:56,470 --> 00:25:02,679
into it but I think that it's I can't

00:25:01,299 --> 00:25:05,649
remember the version of Android which

00:25:02,679 --> 00:25:07,690
it's wanting to get but I think it's

00:25:05,649 --> 00:25:10,509
quite an old version it's like 2.2 or

00:25:07,690 --> 00:25:12,940
something and you can specify what

00:25:10,509 --> 00:25:18,190
version you want so build the billdozer

00:25:12,940 --> 00:25:22,600
the billdozer application or tool allows

00:25:18,190 --> 00:25:25,169
you to specify any of the metadata

00:25:22,600 --> 00:25:28,240
requirements that you could for a java

00:25:25,169 --> 00:25:31,090
so you can you can specify that it needs

00:25:28,240 --> 00:25:34,139
certain version of Android or a certain

00:25:31,090 --> 00:25:40,570
version of whatever the only thing is

00:25:34,139 --> 00:25:42,730
like I said yeah yeah yeah yeah and so

00:25:40,570 --> 00:25:45,850
that's where the intent filter rules go

00:25:42,730 --> 00:25:49,059
in you can you can actually do your own

00:25:45,850 --> 00:25:55,419
manifest.xml and ask it to to pull it in

00:25:49,059 --> 00:25:58,600
as well so it yes no problems the

00:25:55,419 --> 00:26:01,570
template files that the template files

00:25:58,600 --> 00:26:04,450
are they only compile time or can you

00:26:01,570 --> 00:26:08,500
render them at runtime like an you load

00:26:04,450 --> 00:26:10,750
a template to be rendered if that's a

00:26:08,500 --> 00:26:13,230
good question I think you can probably I

00:26:10,750 --> 00:26:17,320
have not tried I think you can load it

00:26:13,230 --> 00:26:19,779
at runtime if you want to because

00:26:17,320 --> 00:26:22,389
there's a there's a method that allows

00:26:19,779 --> 00:26:25,240
you to just give it a string and ask an

00:26:22,389 --> 00:26:27,460
asker to create a widget based on the

00:26:25,240 --> 00:26:31,080
string assuming the string is a you know

00:26:27,460 --> 00:26:33,400
a template file so i would guess yes

00:26:31,080 --> 00:26:36,490
over here

00:26:33,400 --> 00:26:37,780
and on one of your slides you said

00:26:36,490 --> 00:26:40,420
something about you need to become

00:26:37,780 --> 00:26:42,430
familiar with some aspects of the

00:26:40,420 --> 00:26:44,650
Android environment and I was just

00:26:42,430 --> 00:26:46,870
curious to know how you'd found that

00:26:44,650 --> 00:26:50,110
process you know what is the quality of

00:26:46,870 --> 00:26:53,590
the documentation or yeah oh not that

00:26:50,110 --> 00:26:55,270
great haha so I remember looking at it

00:26:53,590 --> 00:26:58,900
myself a little while ago i'm finding it

00:26:55,270 --> 00:27:02,610
pretty perplexing yeah so I've dabbled

00:26:58,900 --> 00:27:05,410
in writing Java programs for android

00:27:02,610 --> 00:27:08,560
prior to try and work with kitty so in a

00:27:05,410 --> 00:27:12,310
sense I done my bashing my head against

00:27:08,560 --> 00:27:15,040
the wall on that beforehand it's much

00:27:12,310 --> 00:27:17,260
much easier writing the stuff in TV and

00:27:15,040 --> 00:27:19,750
deploying it to Android then trying to

00:27:17,260 --> 00:27:22,480
do the same thing in Java it's it's just

00:27:19,750 --> 00:27:27,250
like a world of difference it's so much

00:27:22,480 --> 00:27:28,300
so much easier and and and if you want

00:27:27,250 --> 00:27:31,120
to have an application which is

00:27:28,300 --> 00:27:34,090
self-contained you can sort of ignore

00:27:31,120 --> 00:27:35,980
the rest of Android really it's only if

00:27:34,090 --> 00:27:38,440
you want to deal with the rest of the

00:27:35,980 --> 00:27:41,080
world so for example I mean some things

00:27:38,440 --> 00:27:43,690
with Android if you turn if you turn the

00:27:41,080 --> 00:27:46,000
screen around you've got an orientation

00:27:43,690 --> 00:27:48,220
change and that can kill the program

00:27:46,000 --> 00:27:52,240
like the android expect you to kill the

00:27:48,220 --> 00:27:55,890
program and then started again and those

00:27:52,240 --> 00:27:58,810
sorts of things are what you can do with

00:27:55,890 --> 00:28:03,070
with knowledge of the android operating

00:27:58,810 --> 00:28:07,360
system right so one last question from

00:28:03,070 --> 00:28:09,820
me and and we can then up you mentioned

00:28:07,360 --> 00:28:11,920
XR manifest.xml earlier so do you have

00:28:09,820 --> 00:28:14,950
to like come put your permissions in

00:28:11,920 --> 00:28:18,070
there yes yes so file writing and stuff

00:28:14,950 --> 00:28:21,330
on that yeah okay cool right so everyone

00:28:18,070 --> 00:28:21,330
please give a big hand to Brendan

00:28:29,639 --> 00:28:31,700

YouTube URL: https://www.youtube.com/watch?v=4KPcBOpC-rw


