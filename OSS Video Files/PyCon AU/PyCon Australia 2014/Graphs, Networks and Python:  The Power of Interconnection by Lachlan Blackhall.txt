Title: Graphs, Networks and Python:  The Power of Interconnection by Lachlan Blackhall
Publication date: 2014-08-05
Playlist: PyCon Australia 2014
Description: 
	Graph and network structures are everywhere and can be found in social, biological and technological networks that impact us on a daily basis. Understanding, and exploiting, graphical structures creates opportunities for obtaining new analytic insights, implementing new computational paradigms, and better defining the relationship between objects of any sort.

Python provides access to these graph and network structures using the fantastic NetworkX library (http://networkx.github.io/) .  In this presentation we will give an introduction to the NetworkX library, showing how easy it is to build and exploit simple graphical and network structures.

From that starting point we will then discuss a number of more complicated, real world examples of how the NetworkX library can be used to:
 - Analyse social networks to extract valuable information about people / entities within those networks.
 - Implement reconfigurable processing pipelines (something we refer to as computational graphs) for data capture, processing and analytics.
 - Easily track the relationship between Python objects in a variety of other interesting and useful scenarios.

This presentation will be targeted at intermediate developers and no prior experience with graphs, networks or NetworkX is required. This presentation will offer an easy introduction to the world of networks and graphs in Python and will illustrate real world uses of this powerful and useful paradigm.

PyCon Australia is the national conference for users of the Python Programming Language. In August 2014, we're heading to Brisbane to bring together students, enthusiasts, and professionals with a love of Python from around Australia, and all around the World. 

August 1-5, Brisbane, Queensland, Australia
Captions: 
	00:00:07,730 --> 00:00:13,559
all righty I welcome everyone to

00:00:10,950 --> 00:00:16,530
Saturday morning today I'm going to talk

00:00:13,559 --> 00:00:19,260
just sort of very generally I suppose

00:00:16,530 --> 00:00:22,140
about graphs and networks so it's a

00:00:19,260 --> 00:00:24,420
little bit sort of tutorial II I suppose

00:00:22,140 --> 00:00:25,830
but I'm quite happy to break the

00:00:24,420 --> 00:00:27,630
traditional model of me talking and

00:00:25,830 --> 00:00:28,860
you're listening and so please feel free

00:00:27,630 --> 00:00:31,289
to heckle and interrupt and ask

00:00:28,860 --> 00:00:32,759
questions as I go it's probably a little

00:00:31,289 --> 00:00:36,149
bit easier that way than trying to save

00:00:32,759 --> 00:00:40,409
them all up for the end so I am from

00:00:36,149 --> 00:00:43,949
from beautiful downtown Canberra this

00:00:40,409 --> 00:00:45,390
time of year but so what what I really

00:00:43,949 --> 00:00:47,819
want to talk about is this you know we

00:00:45,390 --> 00:00:49,319
this general concept of graphs and

00:00:47,819 --> 00:00:51,030
networks that sort of they're very

00:00:49,319 --> 00:00:54,089
pervasive in our life and they actually

00:00:51,030 --> 00:00:55,829
cover many many areas that we probably

00:00:54,089 --> 00:00:58,469
don't you know generally think about

00:00:55,829 --> 00:01:00,420
them so my worlds typically energy and

00:00:58,469 --> 00:01:02,670
so there's lots of obviously energy

00:01:00,420 --> 00:01:05,640
networks in terms of all the poles and

00:01:02,670 --> 00:01:07,620
wires that deliver energy to us and

00:01:05,640 --> 00:01:13,770
maybe that's something that we tend to

00:01:07,620 --> 00:01:15,470
see more often but networks and sort of

00:01:13,770 --> 00:01:18,480
the graphs that describe networks also

00:01:15,470 --> 00:01:21,450
come into the tiniest building blocks of

00:01:18,480 --> 00:01:24,830
life so you know biological networks in

00:01:21,450 --> 00:01:26,880
terms of how our cells interact how

00:01:24,830 --> 00:01:29,480
proteins are formed and things like that

00:01:26,880 --> 00:01:32,370
from another really really important

00:01:29,480 --> 00:01:34,440
area of life and science that we can

00:01:32,370 --> 00:01:37,920
actually understand - looking at graphs

00:01:34,440 --> 00:01:39,840
so this is actually a protein graph I

00:01:37,920 --> 00:01:43,890
believe it's not not my area of

00:01:39,840 --> 00:01:47,250
specialty but graphs are also pervasive

00:01:43,890 --> 00:01:50,250
in computing - and for those of you

00:01:47,250 --> 00:01:52,380
who've been through probably CS degrees

00:01:50,250 --> 00:01:55,020
you know graph theory is hugely

00:01:52,380 --> 00:01:56,820
important in understanding processes and

00:01:55,020 --> 00:01:59,730
concurrency and things like that so I

00:01:56,820 --> 00:02:02,280
stole this unashamedly off the internet

00:01:59,730 --> 00:02:05,880
but this is actually the graph that's

00:02:02,280 --> 00:02:08,459
produced from from a platform library

00:02:05,880 --> 00:02:09,659
called PI core graph and all it's doing

00:02:08,459 --> 00:02:12,599
is it's actually looking at the

00:02:09,659 --> 00:02:15,620
execution graph of a piece of software

00:02:12,599 --> 00:02:19,790
in Python so again we had these

00:02:15,620 --> 00:02:19,790
recurrent structures of net

00:02:21,060 --> 00:02:28,750
taking a slightly different tack this is

00:02:24,610 --> 00:02:30,549
actually a graph that describes it's a

00:02:28,750 --> 00:02:36,129
graph of the Internet in its entirety

00:02:30,549 --> 00:02:38,170
that was done in 2005 so down here it's

00:02:36,129 --> 00:02:40,720
a little bit a little bit murky but you

00:02:38,170 --> 00:02:43,540
can actually see IP addresses here and

00:02:40,720 --> 00:02:47,079
so they this this project was actually

00:02:43,540 --> 00:02:50,349
scanning the internet over a significant

00:02:47,079 --> 00:02:53,680
period of time to build this graph of

00:02:50,349 --> 00:02:55,840
how they up how the Internet globally is

00:02:53,680 --> 00:02:58,750
connected and so it gives you some

00:02:55,840 --> 00:03:00,790
interesting insights just in terms of

00:02:58,750 --> 00:03:03,370
these things that exist all around us

00:03:00,790 --> 00:03:04,690
that perhaps we don't we use but we may

00:03:03,370 --> 00:03:06,819
not necessarily appreciate the

00:03:04,690 --> 00:03:08,799
complexity that's there and if this

00:03:06,819 --> 00:03:12,269
doesn't if this doesn't give you a sense

00:03:08,799 --> 00:03:12,269
of that then I'm not sure what would

00:03:13,409 --> 00:03:20,650
this is another graph that describes the

00:03:17,680 --> 00:03:23,799
global flight patterns of aircraft and

00:03:20,650 --> 00:03:26,049
so again you can see this huge amount of

00:03:23,799 --> 00:03:27,579
complexity here that we don't appreciate

00:03:26,049 --> 00:03:30,340
when we go to the airport and hop on a

00:03:27,579 --> 00:03:33,609
plane from you know from one place to

00:03:30,340 --> 00:03:35,560
another but globally and simultaneously

00:03:33,609 --> 00:03:37,720
there are you know thousands maybe tens

00:03:35,560 --> 00:03:39,010
of thousands of flights and try and

00:03:37,720 --> 00:03:40,599
actually understand the structure of

00:03:39,010 --> 00:03:43,090
this is something that we can begin to

00:03:40,599 --> 00:03:48,669
investigate by looking at graphs and

00:03:43,090 --> 00:03:51,099
networks and finally I actually stumbled

00:03:48,669 --> 00:03:53,769
across this tool which unfortunately I

00:03:51,099 --> 00:03:55,840
got to the other day and about to be

00:03:53,769 --> 00:03:58,449
taken down as of the 1st of August but

00:03:55,840 --> 00:04:01,239
it was a cool LinkedIn lab that actually

00:03:58,449 --> 00:04:04,930
showed you allowed you to visualize your

00:04:01,239 --> 00:04:06,099
social network on on LinkedIn and it was

00:04:04,930 --> 00:04:08,379
really interesting for me because

00:04:06,099 --> 00:04:10,419
obviously you get all these random

00:04:08,379 --> 00:04:11,919
connections from from all over the place

00:04:10,419 --> 00:04:14,049
and you always just tend to think of

00:04:11,919 --> 00:04:16,090
them as these point-to-point connections

00:04:14,049 --> 00:04:17,199
that you have with people because of you

00:04:16,090 --> 00:04:19,209
know you've worked with them or you know

00:04:17,199 --> 00:04:20,699
them or you know they've randomly

00:04:19,209 --> 00:04:23,110
stopped you on the Internet

00:04:20,699 --> 00:04:26,050
but the thing that was interesting to me

00:04:23,110 --> 00:04:27,909
was that there's all this structure that

00:04:26,050 --> 00:04:30,370
I didn't understand about the people in

00:04:27,909 --> 00:04:31,930
my own network so you know all these

00:04:30,370 --> 00:04:35,440
coloring was actually done automate

00:04:31,930 --> 00:04:38,139
and so you know this this lab allowed me

00:04:35,440 --> 00:04:40,240
to say oh cool well you know that green

00:04:38,139 --> 00:04:42,580
area that green area actually represents

00:04:40,240 --> 00:04:44,080
sort of my involvement in startups and

00:04:42,580 --> 00:04:45,639
the people I know through startups and

00:04:44,080 --> 00:04:47,020
it was really interesting to see the

00:04:45,639 --> 00:04:49,870
structure that existed within that

00:04:47,020 --> 00:04:51,729
Network and then I just have this random

00:04:49,870 --> 00:04:53,169
network of people over here who just

00:04:51,729 --> 00:05:08,289
have no relation to anybody else I know

00:04:53,169 --> 00:05:10,389
ah so so this is doesn't use a distance

00:05:08,289 --> 00:05:13,360
based graph to the best of my knowledge

00:05:10,389 --> 00:05:16,210
so it's a the connections represent the

00:05:13,360 --> 00:05:18,699
connections on LinkedIn but the actual

00:05:16,210 --> 00:05:20,349
connection distance is just is just

00:05:18,699 --> 00:05:24,099
representative of the layout that

00:05:20,349 --> 00:05:25,810
they've used to say yeah so this one's

00:05:24,099 --> 00:05:27,340
it's just a connection graph there's no

00:05:25,810 --> 00:05:32,770
that the distance isn't time isn't

00:05:27,340 --> 00:05:34,060
proportional to anything so we've seen

00:05:32,770 --> 00:05:35,169
all these really cool kind of graph

00:05:34,060 --> 00:05:39,460
structures and you get some really

00:05:35,169 --> 00:05:41,220
awesome visualizations of stuff but at a

00:05:39,460 --> 00:05:43,030
very at a very low level

00:05:41,220 --> 00:05:44,169
graphs are actually really really simple

00:05:43,030 --> 00:05:46,360
to understand and they're actually

00:05:44,169 --> 00:05:47,289
really simple to analyze as well so this

00:05:46,360 --> 00:05:49,539
is what we're going to spend the

00:05:47,289 --> 00:05:53,409
majority of the talk talking about and

00:05:49,539 --> 00:05:55,960
there's heaps of sample code in here at

00:05:53,409 --> 00:05:57,280
a very basic level so I'm hopefully not

00:05:55,960 --> 00:05:58,539
insulting anybody's intelligence here

00:05:57,280 --> 00:06:00,520
but I think if you've never come across

00:05:58,539 --> 00:06:02,680
graphs and particularly if you've never

00:06:00,520 --> 00:06:04,509
come across graphs in Python this would

00:06:02,680 --> 00:06:06,490
be a really good introduction but I'd

00:06:04,509 --> 00:06:09,699
encourage you to take from this the fact

00:06:06,490 --> 00:06:11,169
that it's a really exciting opportunity

00:06:09,699 --> 00:06:13,539
to do this kind of analysis and there

00:06:11,169 --> 00:06:14,770
are heaps and heaps of further resources

00:06:13,539 --> 00:06:18,909
on the internet which are really really

00:06:14,770 --> 00:06:20,889
useful so graphs as I said are pretty

00:06:18,909 --> 00:06:22,599
simple they come they have two sets of

00:06:20,889 --> 00:06:25,509
things they have a set of vertices or

00:06:22,599 --> 00:06:27,880
nodes and they have a set of edges that

00:06:25,509 --> 00:06:29,680
connect those nodes all right and they

00:06:27,880 --> 00:06:32,289
typically get written like this G equals

00:06:29,680 --> 00:06:35,530
VA so all my nodes and the edges that

00:06:32,289 --> 00:06:38,800
connect my nodes and then there's two

00:06:35,530 --> 00:06:39,280
fundamental types of graphs that we

00:06:38,800 --> 00:06:42,099
think about

00:06:39,280 --> 00:06:43,840
there's undirected graphs which you can

00:06:42,099 --> 00:06:45,760
see in the middle here and undirected

00:06:43,840 --> 00:06:47,350
graphs just they show or

00:06:45,760 --> 00:06:48,970
nation ship but they don't show anything

00:06:47,350 --> 00:06:51,760
else they don't show if there's any flow

00:06:48,970 --> 00:06:53,110
or the direction of relationship then we

00:06:51,760 --> 00:06:57,340
have directed graphs at the top and

00:06:53,110 --> 00:06:59,470
directed graphs do have direction so you

00:06:57,340 --> 00:07:01,840
know they might be representative of a

00:06:59,470 --> 00:07:03,280
flow of something so you know in the

00:07:01,840 --> 00:07:06,910
energy Network a directed graph might

00:07:03,280 --> 00:07:08,200
show the direction of flow of energy so

00:07:06,910 --> 00:07:14,590
these are the two fundamental building

00:07:08,200 --> 00:07:18,370
blocks of graphs now in Python there is

00:07:14,590 --> 00:07:19,510
an awesome library called Network X so

00:07:18,370 --> 00:07:21,970
it was an excellent question yesterday

00:07:19,510 --> 00:07:24,070
as to why Network X versus any other

00:07:21,970 --> 00:07:25,870
library there are other libraries that

00:07:24,070 --> 00:07:28,750
have other graph libraries that have

00:07:25,870 --> 00:07:31,180
Python bindings but my understanding is

00:07:28,750 --> 00:07:32,860
that they are not all native Python in

00:07:31,180 --> 00:07:36,100
the same way that network access and

00:07:32,860 --> 00:07:38,500
from my experimentation and whatnot I

00:07:36,100 --> 00:07:40,270
found Network X to be just it's just a

00:07:38,500 --> 00:07:42,160
it's a beautiful library it's well

00:07:40,270 --> 00:07:45,070
written it supports all of the methods

00:07:42,160 --> 00:07:46,240
and capabilities that you'd expect if

00:07:45,070 --> 00:07:48,790
you're coming from the ground you know

00:07:46,240 --> 00:07:51,100
the world of graphs it's also very very

00:07:48,790 --> 00:07:52,930
quick and a lot of the algorithms are

00:07:51,100 --> 00:07:54,430
implemented at a much much lower level

00:07:52,930 --> 00:07:56,260
outside of Python so that it's it's

00:07:54,430 --> 00:07:58,470
actually quick to run on B&G graphs and

00:07:56,260 --> 00:08:01,480
you'll see some of that as we go through

00:07:58,470 --> 00:08:03,490
so the really nice thing about Network X

00:08:01,480 --> 00:08:07,240
is that nodes can be anything detachable

00:08:03,490 --> 00:08:09,460
so any object you want can be used to

00:08:07,240 --> 00:08:13,240
represent a node so it can be a string

00:08:09,460 --> 00:08:15,070
it can be a number it can be a Python

00:08:13,240 --> 00:08:17,650
object so it's really flexible in terms

00:08:15,070 --> 00:08:20,830
of how you build it and then edges are

00:08:17,650 --> 00:08:24,430
just tuples of nodes so in an undirected

00:08:20,830 --> 00:08:26,830
graph the node don't have any meaning

00:08:24,430 --> 00:08:29,380
but in a directed graph obviously the

00:08:26,830 --> 00:08:30,700
first part of the tupple is the source

00:08:29,380 --> 00:08:32,620
node and the second part of the tuples

00:08:30,700 --> 00:08:34,810
the the sink node where it's going and

00:08:32,620 --> 00:08:36,270
it's a really well maintained package so

00:08:34,810 --> 00:08:38,979
it's been around now for about 12 years

00:08:36,270 --> 00:08:40,810
and they're constantly updating it and

00:08:38,979 --> 00:08:43,380
the documentation for absolutely

00:08:40,810 --> 00:08:43,380
fantastic

00:08:44,290 --> 00:08:50,560
so we should start by actually making a

00:08:46,660 --> 00:08:51,700
graph so we can import Network X we're

00:08:50,560 --> 00:08:53,350
going to use this plotting part in a

00:08:51,700 --> 00:08:56,050
moment for all the visualizations that

00:08:53,350 --> 00:08:58,300
you'll see and we're just going to start

00:08:56,050 --> 00:09:02,650
with a simple undirected graph and so

00:08:58,300 --> 00:09:04,480
we've set up our graph here then we can

00:09:02,650 --> 00:09:05,770
go and add some nodes and in this case

00:09:04,480 --> 00:09:09,850
I've been really creative and numbered

00:09:05,770 --> 00:09:12,690
them from 1 to 5 then we can add some

00:09:09,850 --> 00:09:16,660
edges and so again the edges are just

00:09:12,690 --> 00:09:18,790
from 2 so you can probably look at that

00:09:16,660 --> 00:09:20,920
and work out roughly what the network

00:09:18,790 --> 00:09:22,360
should look like but we don't have to do

00:09:20,920 --> 00:09:27,820
that because we can actually visualize

00:09:22,360 --> 00:09:30,640
it so Network X has a bunch of draw

00:09:27,820 --> 00:09:33,280
methods and if I have one criticism of

00:09:30,640 --> 00:09:35,290
the library it's that the the layout

00:09:33,280 --> 00:09:38,230
algorithms that they use are absolutely

00:09:35,290 --> 00:09:40,540
horrendous and I mean that with know

00:09:38,230 --> 00:09:42,010
without being too mean but because

00:09:40,540 --> 00:09:43,720
layout is actually a really really hard

00:09:42,010 --> 00:09:46,900
problem to solve for specially in larger

00:09:43,720 --> 00:09:50,130
graphs but as you'll see in a bit for

00:09:46,900 --> 00:09:52,300
some of these it's you just can't force

00:09:50,130 --> 00:09:54,340
Network X to give you some pretty

00:09:52,300 --> 00:09:56,050
visualizations but there are workarounds

00:09:54,340 --> 00:09:58,030
that mean you can get the data out to

00:09:56,050 --> 00:10:01,030
actually use visualization tools that

00:09:58,030 --> 00:10:03,070
have different layout algorithms so

00:10:01,030 --> 00:10:04,510
hopefully this graph that you see here

00:10:03,070 --> 00:10:06,640
should correspond with what we set up

00:10:04,510 --> 00:10:11,020
over there and I'm pretty confident that

00:10:06,640 --> 00:10:13,720
it does and now we can do exactly the

00:10:11,020 --> 00:10:15,250
same thing with the directed graph so

00:10:13,720 --> 00:10:16,780
the difference you'll notice is that

00:10:15,250 --> 00:10:20,260
when we've declared our graph now we've

00:10:16,780 --> 00:10:21,280
called it digraph so directed graph the

00:10:20,260 --> 00:10:24,010
other thing you'll notice here is that

00:10:21,280 --> 00:10:26,620
in the previous example I put my nodes

00:10:24,010 --> 00:10:28,690
in one of the time but you don't have to

00:10:26,620 --> 00:10:30,820
you don't have to do that with Network X

00:10:28,690 --> 00:10:33,760
you can actually add nodes in bulk so

00:10:30,820 --> 00:10:35,620
just got a list we add all our nodes we

00:10:33,760 --> 00:10:37,270
add exactly the same edges and we get

00:10:35,620 --> 00:10:39,520
our graph and this time you'll notice

00:10:37,270 --> 00:10:41,170
that we have the arrows that actually

00:10:39,520 --> 00:10:42,610
show the direction of flow and that

00:10:41,170 --> 00:10:45,340
corresponds obviously to the ordering

00:10:42,610 --> 00:10:47,580
that we put into the into the edges

00:10:45,340 --> 00:10:47,580
there

00:10:48,490 --> 00:10:51,790
but the other thing you can do with

00:10:50,470 --> 00:10:54,370
Network X is you actually don't have to

00:10:51,790 --> 00:10:57,209
declare nodes explicitly alright and so

00:10:54,370 --> 00:10:59,290
you'll see in an example I do later that

00:10:57,209 --> 00:11:01,000
declaring nodes is really just a little

00:10:59,290 --> 00:11:03,040
bit over the top if you don't need to do

00:11:01,000 --> 00:11:06,300
it because once the edges get put in the

00:11:03,040 --> 00:11:08,260
nodes are automatically inserted okay so

00:11:06,300 --> 00:11:14,410
that's all you need to do and then you

00:11:08,260 --> 00:11:15,640
can enough you can plot away so when you

00:11:14,410 --> 00:11:17,500
start with this kind of library you

00:11:15,640 --> 00:11:20,350
start with some really basic graphs like

00:11:17,500 --> 00:11:21,459
this you know they give you something to

00:11:20,350 --> 00:11:23,230
visualize and something to talk about

00:11:21,459 --> 00:11:24,430
but in reality when it comes to graph

00:11:23,230 --> 00:11:25,690
theory we're actually probably trying to

00:11:24,430 --> 00:11:28,690
use the graph to actually solve a

00:11:25,690 --> 00:11:31,360
problem in some way shape or form the

00:11:28,690 --> 00:11:33,640
nice thing about Network X is unlike a

00:11:31,360 --> 00:11:34,839
lot of libraries where you have all

00:11:33,640 --> 00:11:36,820
these really cool tools but you have

00:11:34,839 --> 00:11:40,149
nothing to do with them Network at X

00:11:36,820 --> 00:11:41,529
actually supports creating some standard

00:11:40,149 --> 00:11:43,360
graph structures that you can use to

00:11:41,529 --> 00:11:46,450
start playing around with the library or

00:11:43,360 --> 00:11:48,550
start doing some analytics or start

00:11:46,450 --> 00:11:50,500
doing some research and so you know this

00:11:48,550 --> 00:11:52,510
this library actually spends something

00:11:50,500 --> 00:11:55,660
that's actually immensely useful all the

00:11:52,510 --> 00:11:57,339
way from just a visualization of how

00:11:55,660 --> 00:12:00,339
things are structured and how they're

00:11:57,339 --> 00:12:02,110
related all the way through to doing you

00:12:00,339 --> 00:12:05,320
know sort of cutting edge research in

00:12:02,110 --> 00:12:08,339
terms of you know how networks relate to

00:12:05,320 --> 00:12:12,070
social you know social interaction

00:12:08,339 --> 00:12:15,190
through data provenance and evening to

00:12:12,070 --> 00:12:17,260
data analytics as well so I'd like to

00:12:15,190 --> 00:12:20,800
just take you through some of the graphs

00:12:17,260 --> 00:12:22,360
that Network X can produce just to give

00:12:20,800 --> 00:12:24,310
you a sense of its versatility and

00:12:22,360 --> 00:12:25,480
hopefully two that if this is something

00:12:24,310 --> 00:12:26,800
that interests you you can actually get

00:12:25,480 --> 00:12:31,300
in there straight away and start playing

00:12:26,800 --> 00:12:33,760
around with some of these examples so

00:12:31,300 --> 00:12:35,290
we'll start with two boring ones and

00:12:33,760 --> 00:12:38,170
we'll rapidly move to a couple more

00:12:35,290 --> 00:12:40,839
interesting so you can do complete

00:12:38,170 --> 00:12:42,399
graphs and barbell graphs which look a

00:12:40,839 --> 00:12:44,860
little bit something like this so this

00:12:42,399 --> 00:12:46,630
is the complete graph so it has a

00:12:44,860 --> 00:12:48,339
connection from every node to every

00:12:46,630 --> 00:12:50,339
other node and then a barbell graph

00:12:48,339 --> 00:12:52,600
which looks a little bit like a barbell

00:12:50,339 --> 00:12:54,279
you can see the beauty of the layout

00:12:52,600 --> 00:12:56,140
engine at the top of that barbell graph

00:12:54,279 --> 00:12:57,550
where it's decided that it's better for

00:12:56,140 --> 00:13:00,240
the mall to cross over rather than just

00:12:57,550 --> 00:13:00,240
having a straight line

00:13:05,040 --> 00:13:08,310
and now we're going to get into three

00:13:06,480 --> 00:13:11,610
three graphs that have been I've

00:13:08,310 --> 00:13:13,140
actually been really influential in into

00:13:11,610 --> 00:13:15,210
the graph theory world in terms of how

00:13:13,140 --> 00:13:16,640
people actually analyze them so there's

00:13:15,210 --> 00:13:20,970
this graph called the erdos-renyi graph

00:13:16,640 --> 00:13:22,440
and it might seem strange to some of you

00:13:20,970 --> 00:13:25,290
that people would get all super excited

00:13:22,440 --> 00:13:28,410
about algorithms for producing graphs

00:13:25,290 --> 00:13:30,960
but the problem with with all things is

00:13:28,410 --> 00:13:32,580
that if you don't have samples out of

00:13:30,960 --> 00:13:34,410
something that you want to measure you

00:13:32,580 --> 00:13:36,150
need a way to produce something

00:13:34,410 --> 00:13:37,800
automatically that allows you to do some

00:13:36,150 --> 00:13:38,790
research to understand structure and so

00:13:37,800 --> 00:13:41,070
these three graphs that I'm going to

00:13:38,790 --> 00:13:43,260
talk about three graphs that have been

00:13:41,070 --> 00:13:46,050
really influential in underpinning how

00:13:43,260 --> 00:13:48,840
research in graphs and how they like how

00:13:46,050 --> 00:13:51,390
those graphs are structured has

00:13:48,840 --> 00:13:54,480
progressed since the basically since the

00:13:51,390 --> 00:13:56,840
end of the 50s when this was this B

00:13:54,480 --> 00:13:59,760
algorithm for producing this first was

00:13:56,840 --> 00:14:02,190
discovered I suppose so the earthís

00:13:59,760 --> 00:14:05,700
trend new graph gives you a random graph

00:14:02,190 --> 00:14:07,590
so you sprinkle some nodes down and then

00:14:05,700 --> 00:14:09,270
between all of those nodes you have some

00:14:07,590 --> 00:14:12,960
probability that those nodes are going

00:14:09,270 --> 00:14:15,620
to be connected to each other and for

00:14:12,960 --> 00:14:18,240
those of you who are Bayesian

00:14:15,620 --> 00:14:20,250
statisticians the probability of

00:14:18,240 --> 00:14:22,500
interconnection between any two nodes is

00:14:20,250 --> 00:14:24,960
identical and totally independent of any

00:14:22,500 --> 00:14:26,550
other connection so it basically means

00:14:24,960 --> 00:14:28,320
that you get from sprinkling your nodes

00:14:26,550 --> 00:14:34,320
you then get a random selection of

00:14:28,320 --> 00:14:37,220
connections between those nodes Network

00:14:34,320 --> 00:14:39,720
X makes that really really easy so the

00:14:37,220 --> 00:14:40,830
the call here that sets that up is

00:14:39,720 --> 00:14:42,600
you're actually specifying how many

00:14:40,830 --> 00:14:44,130
nodes you want and then the probability

00:14:42,600 --> 00:14:47,130
of interconnection between any two nodes

00:14:44,130 --> 00:14:49,200
and then we can draw it again and here

00:14:47,130 --> 00:14:52,530
we can see the absolute delight of

00:14:49,200 --> 00:14:55,110
visualization again and I do apologize

00:14:52,530 --> 00:14:56,790
for this but the underlying graphs are

00:14:55,110 --> 00:15:01,350
really what's of interest here so

00:14:56,790 --> 00:15:03,990
there's a hundred nodes here and they're

00:15:01,350 --> 00:15:05,640
all randomly connected and so in certain

00:15:03,990 --> 00:15:08,940
instances this is going to be a really

00:15:05,640 --> 00:15:09,910
useful graph for people to start looking

00:15:08,940 --> 00:15:12,010
at

00:15:09,910 --> 00:15:14,290
now the thing that we don't have time to

00:15:12,010 --> 00:15:16,870
cover today is the many many many

00:15:14,290 --> 00:15:20,350
algorithms that Network X has in its

00:15:16,870 --> 00:15:21,550
library but once you start playing with

00:15:20,350 --> 00:15:22,990
these graphs then you go and start

00:15:21,550 --> 00:15:24,640
checking out different graph properties

00:15:22,990 --> 00:15:27,430
so the dimension of the graphs are how

00:15:24,640 --> 00:15:29,020
wide the graph is or how connected all

00:15:27,430 --> 00:15:30,520
these nodes are you start to see all

00:15:29,020 --> 00:15:31,960
those properties fall out for each of

00:15:30,520 --> 00:15:35,610
these graphs so that's why I'm talking

00:15:31,960 --> 00:15:37,870
about them so this is the random graph

00:15:35,610 --> 00:15:41,590
then we moved to a graph called the what

00:15:37,870 --> 00:15:43,510
Strogatz graph and it produces graphs

00:15:41,590 --> 00:15:45,160
that they call it's called small world

00:15:43,510 --> 00:15:47,080
properties but it actually is a graph

00:15:45,160 --> 00:15:50,770
that kind of define kind of describes

00:15:47,080 --> 00:15:52,900
how communities of people know each

00:15:50,770 --> 00:15:54,670
other and how we're all connected so

00:15:52,900 --> 00:15:55,750
when you talk of when you hear about

00:15:54,670 --> 00:15:58,990
people to at the six degrees of

00:15:55,750 --> 00:16:00,610
separation that was sort of a I suppose

00:15:58,990 --> 00:16:03,460
my more philosophical construct than

00:16:00,610 --> 00:16:04,450
anything else but when you do when you

00:16:03,460 --> 00:16:06,400
have a look at these small world

00:16:04,450 --> 00:16:07,990
networks you actually see that sort of

00:16:06,400 --> 00:16:09,610
six degrees of separation globally

00:16:07,990 --> 00:16:12,670
starting to fall out so these are graphs

00:16:09,610 --> 00:16:16,450
that describe human social networks

00:16:12,670 --> 00:16:20,040
really really well and again network X

00:16:16,450 --> 00:16:24,280
makes that really really easy to produce

00:16:20,040 --> 00:16:26,470
so you can produce it this way and then

00:16:24,280 --> 00:16:28,390
you get this and you notice here that it

00:16:26,470 --> 00:16:30,550
has quite a different even you know even

00:16:28,390 --> 00:16:33,400
with this it has quite a different

00:16:30,550 --> 00:16:36,520
structure and within this you would find

00:16:33,400 --> 00:16:38,470
lots of little cliques so there would be

00:16:36,520 --> 00:16:39,880
groups of people that are really tightly

00:16:38,470 --> 00:16:41,320
meshed together that have very loose

00:16:39,880 --> 00:16:42,850
connections to other groups of people

00:16:41,320 --> 00:16:44,080
and if you think about communities in

00:16:42,850 --> 00:16:45,660
society that's exactly how we are

00:16:44,080 --> 00:16:50,350
connected so this is a great model for

00:16:45,660 --> 00:16:53,500
for that kind of stuff and the last

00:16:50,350 --> 00:16:57,040
model I'll talk about is a model called

00:16:53,500 --> 00:17:00,070
the barabasi Alba model and this one's

00:16:57,040 --> 00:17:01,900
been really really influential because

00:17:00,070 --> 00:17:04,480
this one actually describes things like

00:17:01,900 --> 00:17:08,020
how the internet is connected and how

00:17:04,480 --> 00:17:10,480
you know power networks are connected so

00:17:08,020 --> 00:17:13,120
it's what's called a scale-free network

00:17:10,480 --> 00:17:16,689
and so scale-free networks are just

00:17:13,120 --> 00:17:18,430
networks that have they have over all of

00:17:16,689 --> 00:17:20,589
the you know the nodes are within a

00:17:18,430 --> 00:17:23,230
network they have a very very different

00:17:20,589 --> 00:17:23,689
degree distribution so the degree is how

00:17:23,230 --> 00:17:26,539
many can

00:17:23,689 --> 00:17:28,399
you have @h node and in a scale-free

00:17:26,539 --> 00:17:30,799
network you have a very very small

00:17:28,399 --> 00:17:32,750
number of nodes that are really highly

00:17:30,799 --> 00:17:35,509
connected okay so if you think about

00:17:32,750 --> 00:17:36,919
this in sort of the Internet then you

00:17:35,509 --> 00:17:38,480
have what that saying is is you have a

00:17:36,919 --> 00:17:39,769
small number of nodes that are really

00:17:38,480 --> 00:17:41,120
really well connected so they're your

00:17:39,769 --> 00:17:42,649
data center type nodes you know they're

00:17:41,120 --> 00:17:44,809
well connected to everything else that's

00:17:42,649 --> 00:17:47,000
around them but then you have this

00:17:44,809 --> 00:17:48,590
really long tail you have heaps of nodes

00:17:47,000 --> 00:17:50,990
that only have one or two connections

00:17:48,590 --> 00:17:52,580
and in the internet that's all of us in

00:17:50,990 --> 00:17:54,710
our homes we you know we don't have

00:17:52,580 --> 00:17:57,769
short of having server farms in our

00:17:54,710 --> 00:17:59,389
houses but we tone laughs actually I

00:17:57,769 --> 00:18:00,950
speaking to a guy the other day who said

00:17:59,389 --> 00:18:02,509
he needs to burn off some extra energy

00:18:00,950 --> 00:18:03,919
from his solar panels and was actually

00:18:02,509 --> 00:18:05,960
contemplating setting up a server farm

00:18:03,919 --> 00:18:07,519
that he could run during the day to use

00:18:05,960 --> 00:18:10,820
extra energy so it's not it's not as

00:18:07,519 --> 00:18:12,740
quite as crazy as it sounds but you have

00:18:10,820 --> 00:18:14,179
all these you have you know typically in

00:18:12,740 --> 00:18:15,740
our houses we have just one connection

00:18:14,179 --> 00:18:17,570
and that connections back you know

00:18:15,740 --> 00:18:19,490
through our ISP to the wider Internet

00:18:17,570 --> 00:18:23,720
and so where that very long tail very

00:18:19,490 --> 00:18:26,149
we're very poorly connected and so the

00:18:23,720 --> 00:18:28,159
when you when I showed you that the

00:18:26,149 --> 00:18:31,100
diagram of the Internet map before

00:18:28,159 --> 00:18:32,149
that's a scale-free network and you can

00:18:31,100 --> 00:18:33,470
go are all that's really interesting

00:18:32,149 --> 00:18:35,269
well why do I care about that kind of

00:18:33,470 --> 00:18:36,710
stuff but it's actually really really

00:18:35,269 --> 00:18:40,940
important because when you start to look

00:18:36,710 --> 00:18:42,559
at you know the operability of Internet

00:18:40,940 --> 00:18:45,049
and robustness and things like that

00:18:42,559 --> 00:18:47,179
scale-free networks are actually they

00:18:45,049 --> 00:18:49,899
tell you a lot about two concepts of

00:18:47,179 --> 00:18:51,830
robustness and fragility and so

00:18:49,899 --> 00:18:54,080
robustness is something that comes from

00:18:51,830 --> 00:18:55,429
having things distributed and so in a

00:18:54,080 --> 00:18:56,720
scale-free network like the Internet we

00:18:55,429 --> 00:19:00,799
can't have that because we have

00:18:56,720 --> 00:19:02,240
everything distributed okay but the

00:19:00,799 --> 00:19:06,379
Internet is also quite fragile because

00:19:02,240 --> 00:19:08,960
there's these hubs where connectivity is

00:19:06,379 --> 00:19:11,840
required basically to connect things

00:19:08,960 --> 00:19:14,299
together and so while the internet you

00:19:11,840 --> 00:19:15,710
know works really really well you know

00:19:14,299 --> 00:19:17,840
we've all seen the consequences of when

00:19:15,710 --> 00:19:20,929
you have major outages at data centers

00:19:17,840 --> 00:19:23,570
so all of a sudden you know everybody's

00:19:20,929 --> 00:19:26,000
ec2 instance in a certain region stops

00:19:23,570 --> 00:19:27,350
responding and so these scale-free

00:19:26,000 --> 00:19:28,820
networks were the first to really

00:19:27,350 --> 00:19:29,960
describe that robustness versus

00:19:28,820 --> 00:19:34,129
fragility and so they're really really

00:19:29,960 --> 00:19:35,869
interesting models and again network X

00:19:34,129 --> 00:19:37,799
makes it really really easy to produce

00:19:35,869 --> 00:19:42,269
and you get graphs

00:19:37,799 --> 00:19:44,100
like this so I'll leave it to you to

00:19:42,269 --> 00:19:50,279
write to pull the scale-free factors out

00:19:44,100 --> 00:19:54,059
of that so that's sort of getting us to

00:19:50,279 --> 00:19:55,739
the point of of having this you know an

00:19:54,059 --> 00:19:57,059
understanding of I hope and

00:19:55,739 --> 00:19:59,700
understanding an appreciation of the

00:19:57,059 --> 00:20:02,249
power of network X what I thought I'd do

00:19:59,700 --> 00:20:03,960
now sort of for the second half of the

00:20:02,249 --> 00:20:07,580
talk is I'd like to just quickly run

00:20:03,960 --> 00:20:09,570
through an example of how you can use it

00:20:07,580 --> 00:20:10,739
I'm going to pick social network

00:20:09,570 --> 00:20:11,789
analysis because it's interesting and

00:20:10,739 --> 00:20:14,399
there's a great data set that's out

00:20:11,789 --> 00:20:16,769
there to do this and as we go through

00:20:14,399 --> 00:20:18,059
this we'll talk about you know some of

00:20:16,769 --> 00:20:18,840
the other properties of graphs that you

00:20:18,059 --> 00:20:21,509
can use and some of the other

00:20:18,840 --> 00:20:23,100
capabilities of network X and then there

00:20:21,509 --> 00:20:27,929
will I guarantee be plenty of time for

00:20:23,100 --> 00:20:31,190
questions and discussion at the end so

00:20:27,929 --> 00:20:33,749
I'm going to use a data set from Enron

00:20:31,190 --> 00:20:35,460
so for those of you who don't know Enron

00:20:33,749 --> 00:20:40,489
was a big energy company that had some

00:20:35,460 --> 00:20:43,379
suspicious accounting practices so they

00:20:40,489 --> 00:20:45,629
they had a tendency to put profit into

00:20:43,379 --> 00:20:47,820
their books prior to actually making any

00:20:45,629 --> 00:20:50,179
profit often before they'd built

00:20:47,820 --> 00:20:53,789
anything that could make profit and

00:20:50,179 --> 00:20:55,499
surprisingly they went bankrupt and so

00:20:53,789 --> 00:20:58,529
when they went bankrupt in 2001 it was

00:20:55,499 --> 00:21:00,119
sort of this you know it was a I suppose

00:20:58,529 --> 00:21:01,889
it was the first time we'd seen a really

00:21:00,119 --> 00:21:03,480
you know massive company that was seen

00:21:01,889 --> 00:21:06,389
as a really good corporate citizen go

00:21:03,480 --> 00:21:07,559
pop in a major way and so as the US

00:21:06,389 --> 00:21:09,779
investigators were sort of trawling

00:21:07,559 --> 00:21:11,039
through the history of this company they

00:21:09,779 --> 00:21:12,989
decided that it might actually be a good

00:21:11,039 --> 00:21:14,639
idea to let the public at large see what

00:21:12,989 --> 00:21:18,210
was actually going on inside so they

00:21:14,639 --> 00:21:20,070
released this corpus of emails which is

00:21:18,210 --> 00:21:22,499
actually a super useful data set outside

00:21:20,070 --> 00:21:23,879
of network analysis for you know for

00:21:22,499 --> 00:21:26,970
natural language processing and things

00:21:23,879 --> 00:21:29,940
like that and it's all online so I think

00:21:26,970 --> 00:21:32,369
it's hosted at the at a Carnegie Mellon

00:21:29,940 --> 00:21:34,679
site so you can go and grab all of those

00:21:32,369 --> 00:21:37,919
gigabytes and gigabytes of emails that

00:21:34,679 --> 00:21:39,090
are meticulously arranged so anyway so

00:21:37,919 --> 00:21:43,499
you get all you've got of these emails

00:21:39,090 --> 00:21:45,090
so a friend of mine was actually working

00:21:43,499 --> 00:21:47,340
on this he was indexing they're using a

00:21:45,090 --> 00:21:49,529
search engine and I asked him to pull me

00:21:47,340 --> 00:21:51,779
out just a TSV file so just a

00:21:49,529 --> 00:21:55,169
tab-separated file

00:21:51,779 --> 00:21:57,210
of just the the sender of the email and

00:21:55,169 --> 00:21:58,710
the recipient of the email and then

00:21:57,210 --> 00:22:00,690
there's a heap of other data about the

00:21:58,710 --> 00:22:02,460
email itself but for what we're going to

00:22:00,690 --> 00:22:04,769
do today I'm not particularly interested

00:22:02,460 --> 00:22:07,559
in that before we're gonna show but

00:22:04,769 --> 00:22:09,179
anyway so you can you can get a tier 2 B

00:22:07,559 --> 00:22:10,499
file that looks a bit alike bit like

00:22:09,179 --> 00:22:12,479
this so the sender there's a single

00:22:10,499 --> 00:22:14,309
string in there of the sender's email

00:22:12,479 --> 00:22:16,889
address and then the recipients it's

00:22:14,309 --> 00:22:17,969
just it's a comma separated set of

00:22:16,889 --> 00:22:22,080
strings of all the recipient email

00:22:17,969 --> 00:22:23,700
addresses and I'd like to show you how

00:22:22,080 --> 00:22:25,200
we can pull this into Network X and then

00:22:23,700 --> 00:22:26,580
you know hopefully did something useful

00:22:25,200 --> 00:22:29,729
with it so we're gonna start with a

00:22:26,580 --> 00:22:32,399
graph here and I'm not so interested in

00:22:29,729 --> 00:22:34,200
this case in terms of you know the

00:22:32,399 --> 00:22:35,609
direction of an email I just want to

00:22:34,200 --> 00:22:37,289
know that an email sort of implies a

00:22:35,609 --> 00:22:39,059
relationship between two people in the

00:22:37,289 --> 00:22:40,979
company and so we're going to start with

00:22:39,059 --> 00:22:44,969
an undirected graph which is why we have

00:22:40,979 --> 00:22:46,320
just graphed and not digraph so then

00:22:44,969 --> 00:22:49,649
we're going to I start to load the email

00:22:46,320 --> 00:22:51,869
data so we're opening our CSV file and

00:22:49,649 --> 00:22:56,190
we've set up our reader it's just a tab

00:22:51,869 --> 00:22:58,349
delimited tab delimited reader and we're

00:22:56,190 --> 00:22:59,909
going to build our graph and that's it

00:22:58,349 --> 00:23:04,529
that's that's the whole graph that's

00:22:59,909 --> 00:23:05,879
built in those six eight lines and when

00:23:04,529 --> 00:23:08,429
I first this was actually the first

00:23:05,879 --> 00:23:10,859
thing I ever did in network X and I was

00:23:08,429 --> 00:23:15,389
blown away by how quickly you could

00:23:10,859 --> 00:23:17,399
process gigabytes as tooth there's about

00:23:15,389 --> 00:23:20,219
is between three to five hundred

00:23:17,399 --> 00:23:23,339
thousand emails depending on the set of

00:23:20,219 --> 00:23:28,109
data that you have and so you've gone

00:23:23,339 --> 00:23:30,509
from a TOC file to a graph with 300

00:23:28,109 --> 00:23:33,149
thousand three hundred thousand emails

00:23:30,509 --> 00:23:38,009
and eighty thousand recipients and this

00:23:33,149 --> 00:23:41,159
runs on my two-year-old Mac in about a

00:23:38,009 --> 00:23:43,710
second so network a certainly has the

00:23:41,159 --> 00:23:45,539
chops in terms of speed stuff so anyway

00:23:43,710 --> 00:23:47,339
so we've got our arm we've read in the

00:23:45,539 --> 00:23:48,899
the sender we've split all our

00:23:47,339 --> 00:23:50,219
recipients up and then for every

00:23:48,899 --> 00:23:51,330
recipients we're just going to add an

00:23:50,219 --> 00:23:53,129
edge between the sender and the

00:23:51,330 --> 00:23:56,330
recipient so that should all make sense

00:23:53,129 --> 00:23:59,009
and now we're going to visualize it and

00:23:56,330 --> 00:24:01,830
I'm not going to visualize this using

00:23:59,009 --> 00:24:04,619
the built in tools because while it

00:24:01,830 --> 00:24:05,470
takes a second to bring the data in it

00:24:04,619 --> 00:24:06,730
breaks

00:24:05,470 --> 00:24:09,520
my computer to try and visualize it

00:24:06,730 --> 00:24:12,159
using the built-in the building network

00:24:09,520 --> 00:24:14,590
X tool so instead we're going to just

00:24:12,159 --> 00:24:17,200
write it out to a graph file in this

00:24:14,590 --> 00:24:19,120
case we're using the gxf format so

00:24:17,200 --> 00:24:21,690
another thing that network X has is it's

00:24:19,120 --> 00:24:24,429
got really really good support for

00:24:21,690 --> 00:24:27,039
exporting the data into many of the

00:24:24,429 --> 00:24:29,650
widely accepted graph storage formats

00:24:27,039 --> 00:24:31,720
and in this case I've chosen this format

00:24:29,650 --> 00:24:37,120
because I wanted to use a program called

00:24:31,720 --> 00:24:39,600
Jeffie and so this is this is only a

00:24:37,120 --> 00:24:42,610
portion of the data set visualized

00:24:39,600 --> 00:24:44,380
Jeffie has really good support for

00:24:42,610 --> 00:24:46,120
different layout algorithms and for

00:24:44,380 --> 00:24:48,030
filtering and screening and stuff like

00:24:46,120 --> 00:24:51,039
that so when it comes time to

00:24:48,030 --> 00:24:52,809
presentation of results this is actually

00:24:51,039 --> 00:24:54,909
not a particularly great example of what

00:24:52,809 --> 00:24:57,070
you can do with get for you but most of

00:24:54,909 --> 00:24:59,110
those examples that were shown earlier

00:24:57,070 --> 00:25:01,539
are using these kind of programs to to

00:24:59,110 --> 00:25:04,299
actually visualize them to color them to

00:25:01,539 --> 00:25:07,030
make them easy to understand so you can

00:25:04,299 --> 00:25:08,890
see here though again how there's little

00:25:07,030 --> 00:25:11,020
clusters here and there and all these

00:25:08,890 --> 00:25:13,929
crazy interconnections and all of this

00:25:11,020 --> 00:25:17,580
is now stored in you know in one object

00:25:13,929 --> 00:25:20,830
that we can start to play around with so

00:25:17,580 --> 00:25:21,940
it's really cool to visualize it but

00:25:20,830 --> 00:25:23,549
let's we actually want to do some

00:25:21,940 --> 00:25:28,090
practice something practical with

00:25:23,549 --> 00:25:29,110
visualization or with the graph so the

00:25:28,090 --> 00:25:32,409
first thing I thought we'd do is we

00:25:29,110 --> 00:25:34,240
might just check the node degree and we

00:25:32,409 --> 00:25:36,100
have a look and see who has the highest

00:25:34,240 --> 00:25:37,539
degree of interconnections which if you

00:25:36,100 --> 00:25:40,090
think about it in a company is probably

00:25:37,539 --> 00:25:41,860
representative of people who are more

00:25:40,090 --> 00:25:45,760
you know quite on quite interesting in

00:25:41,860 --> 00:25:47,980
the company so Network X allows us to

00:25:45,760 --> 00:25:50,250
pull out the degree the connection

00:25:47,980 --> 00:25:53,409
degree of all our of all of our nodes

00:25:50,250 --> 00:25:57,789
I've just sorted them there so that we

00:25:53,409 --> 00:26:03,130
have the highest connections at you know

00:25:57,789 --> 00:26:04,659
one end of our list and then these PRI

00:26:03,130 --> 00:26:06,549
is just persons of interest so I've

00:26:04,659 --> 00:26:09,390
picked the top 10 so the ten highest

00:26:06,549 --> 00:26:12,760
connected people within within a neuron

00:26:09,390 --> 00:26:14,890
from their from their relationships from

00:26:12,760 --> 00:26:17,929
email so you can see in here there's a

00:26:14,890 --> 00:26:22,369
bunch of names Tanner and Jeff

00:26:17,929 --> 00:26:24,080
Sally Kenneth Kenneth seems like an

00:26:22,369 --> 00:26:26,960
interesting guy because he has two email

00:26:24,080 --> 00:26:29,149
addresses for whatever reason and then

00:26:26,960 --> 00:26:32,210
as you probably expect there's a lot of

00:26:29,149 --> 00:26:33,649
people asking IT for help and

00:26:32,210 --> 00:26:35,379
interestingly they seem to have a

00:26:33,649 --> 00:26:39,519
particular problem with Outlook which

00:26:35,379 --> 00:26:43,789
should come as no surprise to anybody

00:26:39,519 --> 00:26:45,139
and then there's also that dodgy one in

00:26:43,789 --> 00:26:46,669
here you can see there's an empty stream

00:26:45,139 --> 00:26:50,029
so there's obviously stuff that as we've

00:26:46,669 --> 00:26:52,039
pulled it out there as you clean up some

00:26:50,029 --> 00:26:53,149
of these emails there's there's things

00:26:52,039 --> 00:26:54,559
that have obviously been corrupted over

00:26:53,149 --> 00:26:56,450
time so they tend to just be replaced

00:26:54,559 --> 00:26:58,330
with the empty string so that's why we

00:26:56,450 --> 00:27:01,249
have there's that the 10th one is this

00:26:58,330 --> 00:27:03,019
anomalous one so anyway it's pretty easy

00:27:01,249 --> 00:27:04,639
for us to go through now we can say well

00:27:03,019 --> 00:27:06,409
Gary the empty string it doesn't mean

00:27:04,639 --> 00:27:08,119
anything we get rid of the outlook team

00:27:06,409 --> 00:27:10,489
we all know why they've been called so

00:27:08,119 --> 00:27:13,489
frequently we get rid of the technology

00:27:10,489 --> 00:27:17,479
team and we're going to be left with

00:27:13,489 --> 00:27:21,289
seven names and interestingly these are

00:27:17,479 --> 00:27:24,320
the seven people that are left so we've

00:27:21,289 --> 00:27:27,799
got the chairman who was indicted but

00:27:24,320 --> 00:27:29,269
died before going to jail so they he

00:27:27,799 --> 00:27:30,529
didn't actually get convicted because

00:27:29,269 --> 00:27:32,570
you're apparently the lies we can be if

00:27:30,529 --> 00:27:35,089
you're not convicted while it's on

00:27:32,570 --> 00:27:39,320
appeal and then you die apparently your

00:27:35,089 --> 00:27:44,269
conviction gets removed Geoff did go to

00:27:39,320 --> 00:27:45,559
jail though skilling and then these

00:27:44,269 --> 00:27:46,999
others and you kind of look at this and

00:27:45,559 --> 00:27:48,529
you say well even just from something

00:27:46,999 --> 00:27:50,179
really really simple like looking at the

00:27:48,529 --> 00:27:52,759
connectivity with the rest of the

00:27:50,179 --> 00:27:55,729
organization you know you you see that

00:27:52,759 --> 00:27:57,529
the those people are actually relatively

00:27:55,729 --> 00:27:58,969
important so you know from some simple

00:27:57,529 --> 00:28:01,429
analysis we can pull out the fact that

00:27:58,969 --> 00:28:03,320
you know it's it's easy to work out who

00:28:01,429 --> 00:28:04,519
these connected people are and see that

00:28:03,320 --> 00:28:09,259
they are the people that would be

00:28:04,519 --> 00:28:10,879
interesting the next thing we might want

00:28:09,259 --> 00:28:15,409
to do is we're going to say well these

00:28:10,879 --> 00:28:16,879
people are interesting you know what's

00:28:15,409 --> 00:28:18,739
the relationship that they have with one

00:28:16,879 --> 00:28:20,119
another and from a you know from a

00:28:18,739 --> 00:28:21,979
corporate fraud perspective actually

00:28:20,119 --> 00:28:23,299
when a when auditors go into an

00:28:21,979 --> 00:28:24,379
organization the first thing that they

00:28:23,299 --> 00:28:27,169
want to understand is they want to

00:28:24,379 --> 00:28:28,519
understand you know what relationships

00:28:27,169 --> 00:28:30,530
are there that can give them some

00:28:28,519 --> 00:28:33,140
structure of trying to understand

00:28:30,530 --> 00:28:35,360
where they should be looking and so if

00:28:33,140 --> 00:28:38,150
you think about this Enron corpus of

00:28:35,360 --> 00:28:40,880
emails right they the auditors have gone

00:28:38,150 --> 00:28:43,130
in and then there's five years maybe or

00:28:40,880 --> 00:28:46,070
more of emails that need to be gone

00:28:43,130 --> 00:28:48,530
through so they get some poor first-year

00:28:46,070 --> 00:28:50,630
lawyer to sit there reading through

00:28:48,530 --> 00:28:52,730
documents trying to find incriminating

00:28:50,630 --> 00:28:54,260
details now if you have to do that for

00:28:52,730 --> 00:28:56,840
every person in organization it starts

00:28:54,260 --> 00:28:58,100
to look kind of hard so if you start

00:28:56,840 --> 00:29:00,050
with that thing we've seen the most

00:28:58,100 --> 00:29:02,000
important people let's assume that the

00:29:00,050 --> 00:29:04,190
CEO and the chairman might have some

00:29:02,000 --> 00:29:06,200
responsibilities in terms of some

00:29:04,190 --> 00:29:08,450
interesting accounting practices we now

00:29:06,200 --> 00:29:10,310
want to understand around them who would

00:29:08,450 --> 00:29:11,210
they you know who were they in contact

00:29:10,310 --> 00:29:13,190
with and who did they have a

00:29:11,210 --> 00:29:17,450
relationship with which might direct

00:29:13,190 --> 00:29:19,460
some further investigation so in that

00:29:17,450 --> 00:29:22,670
list at the top I just deleted the three

00:29:19,460 --> 00:29:24,290
that we talked about last slide and now

00:29:22,670 --> 00:29:26,650
we get to use this cool subgraph tool

00:29:24,290 --> 00:29:28,580
that Network X has so obviously

00:29:26,650 --> 00:29:31,160
visualizing the previous graph was a

00:29:28,580 --> 00:29:32,360
total nightmare when you have all of it

00:29:31,160 --> 00:29:33,860
you know you have a hundred thousand

00:29:32,360 --> 00:29:36,920
nodes and three hundred thousand four

00:29:33,860 --> 00:29:38,780
hundred thousand edges but now we've got

00:29:36,920 --> 00:29:41,000
it down to seven nodes we just want the

00:29:38,780 --> 00:29:42,470
interconnections between them and so we

00:29:41,000 --> 00:29:44,270
can call this sub graph and so sub graph

00:29:42,470 --> 00:29:46,370
just gives us the graph of the of the

00:29:44,270 --> 00:29:48,680
nodes and the and those edges that

00:29:46,370 --> 00:29:50,030
correspond between those nodes and again

00:29:48,680 --> 00:29:52,220
now we can go back to our beautiful

00:29:50,030 --> 00:29:54,440
network X drawing tool and this is the

00:29:52,220 --> 00:29:55,610
relationship that we get and so this is

00:29:54,440 --> 00:29:56,870
kind of interesting too because we can

00:29:55,610 --> 00:29:58,250
see here that these people were

00:29:56,870 --> 00:29:59,510
relatively well connected you know there

00:29:58,250 --> 00:30:01,730
was a pretty strong relationship between

00:29:59,510 --> 00:30:04,750
this group at the top and so you know if

00:30:01,730 --> 00:30:08,120
we were looking at how they may have

00:30:04,750 --> 00:30:09,590
collaborated in in their creative

00:30:08,120 --> 00:30:11,300
accounting practices we might say well

00:30:09,590 --> 00:30:12,740
this is some simply some strong evidence

00:30:11,300 --> 00:30:14,630
that these people were all talking to

00:30:12,740 --> 00:30:16,870
each other and all knew about it and

00:30:14,630 --> 00:30:19,160
then the outlier here is obviously that

00:30:16,870 --> 00:30:20,480
can obviously didn't like to use this

00:30:19,160 --> 00:30:23,810
particular email address for

00:30:20,480 --> 00:30:25,370
collaboration so but obviously he's his

00:30:23,810 --> 00:30:28,270
other emails there and strongly

00:30:25,370 --> 00:30:28,270
connected to the other nodes

00:30:29,669 --> 00:30:33,749
so when I said before that there were

00:30:31,769 --> 00:30:36,169
two types of graphs directed and

00:30:33,749 --> 00:30:40,459
undirected I was lying just a little bit

00:30:36,169 --> 00:30:42,029
but multi graphs are a convenient way of

00:30:40,459 --> 00:30:44,579
representing that there's multiple

00:30:42,029 --> 00:30:46,200
connections between two nodes and in

00:30:44,579 --> 00:30:48,359
sort of network can graph theory they're

00:30:46,200 --> 00:30:49,409
actually not as widely used because

00:30:48,359 --> 00:30:52,649
they're little bit harder to deal with

00:30:49,409 --> 00:30:54,959
analytically so but network X supports

00:30:52,649 --> 00:30:56,729
multi graphs as well and so the multi

00:30:54,959 --> 00:30:58,889
graph is quite simple you just when

00:30:56,729 --> 00:31:00,389
you're when you're instantiating the

00:30:58,889 --> 00:31:02,369
object you call multi graph rather than

00:31:00,389 --> 00:31:03,809
graph and what multi graph means is that

00:31:02,369 --> 00:31:05,639
every time you add an edge to that it

00:31:03,809 --> 00:31:07,559
stores a new edge which is perfect if

00:31:05,639 --> 00:31:08,879
you're thinking about emails all right

00:31:07,559 --> 00:31:11,159
so we can add a new edge for every email

00:31:08,879 --> 00:31:13,679
and actually if we were bringing in our

00:31:11,159 --> 00:31:15,479
email data we can now actually store

00:31:13,679 --> 00:31:17,669
that email the contents of the email on

00:31:15,479 --> 00:31:21,359
the edge itself because you can store

00:31:17,669 --> 00:31:22,919
properties in network X on the edges all

00:31:21,359 --> 00:31:25,079
right so this is cool so now not only

00:31:22,919 --> 00:31:26,249
can we get all our nodes in place and

00:31:25,079 --> 00:31:27,570
understand what the relationships are

00:31:26,249 --> 00:31:29,820
but we can actually start to use this as

00:31:27,570 --> 00:31:31,259
an investigative tool because for all of

00:31:29,820 --> 00:31:32,820
these emails we can actually have a

00:31:31,259 --> 00:31:35,190
simple way of pulling out the emails

00:31:32,820 --> 00:31:41,309
between two people of interest or a

00:31:35,190 --> 00:31:42,329
group of people of interest and then you

00:31:41,309 --> 00:31:45,440
know we looked at that with the

00:31:42,329 --> 00:31:47,070
relationships before just by doing some

00:31:45,440 --> 00:31:48,809
you know we were looking at the

00:31:47,070 --> 00:31:51,509
relationships that we had from actually

00:31:48,809 --> 00:31:52,169
pulling out the series of people who are

00:31:51,509 --> 00:31:54,450
higher you know

00:31:52,169 --> 00:31:55,709
most connected but what we also might

00:31:54,450 --> 00:31:57,659
like to understand is what other

00:31:55,709 --> 00:32:00,539
relationships were formed between all of

00:31:57,659 --> 00:32:02,639
the groups of people within within Enron

00:32:00,539 --> 00:32:06,239
and so you know we can actually go and

00:32:02,639 --> 00:32:07,379
find out all of Ken's neighbors so you

00:32:06,239 --> 00:32:10,200
know his neighbors of the people who are

00:32:07,379 --> 00:32:13,079
either sending him emails or receiving

00:32:10,200 --> 00:32:15,690
emails from him and so network X has

00:32:13,079 --> 00:32:18,059
these two methods neighbors actually

00:32:15,690 --> 00:32:20,159
just gives you a list of all of the

00:32:18,059 --> 00:32:21,749
neighbors and there's also an iterative

00:32:20,159 --> 00:32:23,549
method obviously so when you're in big

00:32:21,749 --> 00:32:25,469
data sets like this you want to take

00:32:23,549 --> 00:32:26,789
advantage of iterators so you're not

00:32:25,469 --> 00:32:28,769
having to deal with the list for the

00:32:26,789 --> 00:32:30,329
thousands of thousands of objects long

00:32:28,769 --> 00:32:32,519
especially when you're dealing with

00:32:30,329 --> 00:32:34,049
thousands of objects for all of the 80

00:32:32,519 --> 00:32:38,190
or 90 thousand nodes that you might have

00:32:34,049 --> 00:32:42,059
in your network and the final tool which

00:32:38,190 --> 00:32:43,500
I'll talk about here is this concept of

00:32:42,059 --> 00:32:45,420
a clique and I mentioned it before and

00:32:43,500 --> 00:32:48,780
which is just it's a subgraph that's

00:32:45,420 --> 00:32:51,720
completely connected okay so you know

00:32:48,780 --> 00:32:53,040
you think about your family and you

00:32:51,720 --> 00:32:54,890
typically would be completely connected

00:32:53,040 --> 00:32:57,000
to your family in some way and that you

00:32:54,890 --> 00:32:58,460
hopefully you know them all and there's

00:32:57,000 --> 00:33:01,290
some relationship between all of you

00:32:58,460 --> 00:33:03,060
okay which is different to obviously

00:33:01,290 --> 00:33:04,590
your family's relationship with your

00:33:03,060 --> 00:33:05,610
friends because your family is only

00:33:04,590 --> 00:33:07,950
connected to your friends probably

00:33:05,610 --> 00:33:12,750
through you okay

00:33:07,950 --> 00:33:15,480
so cliques are these entirely entirely

00:33:12,750 --> 00:33:18,480
connected sub graphs now it is a

00:33:15,480 --> 00:33:20,580
nightmare problem to solve theoretically

00:33:18,480 --> 00:33:23,130
they have an implementation in here the

00:33:20,580 --> 00:33:26,160
term that solves it but it's it's an

00:33:23,130 --> 00:33:29,100
np-complete problem so on graphs of this

00:33:26,160 --> 00:33:31,590
size it will take down even the the

00:33:29,100 --> 00:33:32,880
mightiest of computers so just be

00:33:31,590 --> 00:33:36,360
careful when you call this home because

00:33:32,880 --> 00:33:37,740
it can take some time to chug along but

00:33:36,360 --> 00:33:41,280
what you get out of this is you actually

00:33:37,740 --> 00:33:43,980
get you get a list of lists of all of

00:33:41,280 --> 00:33:45,720
the nodes that have a complete sub graph

00:33:43,980 --> 00:33:47,100
between them and so you can start to go

00:33:45,720 --> 00:33:49,110
through and work out what the

00:33:47,100 --> 00:33:50,790
relationship is from looking at where

00:33:49,110 --> 00:33:59,310
all these tightly connected cliques are

00:33:50,790 --> 00:34:00,780
within an organization so I'm sort of

00:33:59,310 --> 00:34:05,630
needing to wind up so that we can have

00:34:00,780 --> 00:34:08,760
some have a chat but I would you know

00:34:05,630 --> 00:34:12,030
the documentation the website for

00:34:08,760 --> 00:34:13,490
Network X is just amazing it's you know

00:34:12,030 --> 00:34:17,000
as I said it's really well supported

00:34:13,490 --> 00:34:20,190
their documentation pages are fantastic

00:34:17,000 --> 00:34:21,840
go to the website and have a look the

00:34:20,190 --> 00:34:23,010
functionality that's there is really

00:34:21,840 --> 00:34:25,740
well mapped out and really well

00:34:23,010 --> 00:34:27,120
categorized so you know you can go and

00:34:25,740 --> 00:34:28,260
find your favorite algorithms and you

00:34:27,120 --> 00:34:29,639
can drill down through you know they

00:34:28,260 --> 00:34:30,899
have a sort of they have classes of

00:34:29,639 --> 00:34:32,340
algorithms that find different things

00:34:30,899 --> 00:34:33,659
and you can sort of drill into those

00:34:32,340 --> 00:34:36,149
classes and then they have all of the

00:34:33,659 --> 00:34:39,600
API details and things like that so it's

00:34:36,149 --> 00:34:41,970
very very thorough and I have explained

00:34:39,600 --> 00:34:44,190
only a tiny tiny tiny fraction of the

00:34:41,970 --> 00:34:47,879
capabilities that this library has so I

00:34:44,190 --> 00:34:49,200
encourage you to go check it out so two

00:34:47,879 --> 00:34:51,960
other graphs packages which are totally

00:34:49,200 --> 00:34:54,810
unrelated to Python get fee and project

00:34:51,960 --> 00:34:56,260
so Jeffie I use to show you the earlier

00:34:54,810 --> 00:35:00,940
visualization

00:34:56,260 --> 00:35:02,950
it runs on all all major platforms it's

00:35:00,940 --> 00:35:04,329
a it's a pretty good tool it's a little

00:35:02,950 --> 00:35:08,589
bit of an issue with the current version

00:35:04,329 --> 00:35:10,420
of OS X but they seem to be working on a

00:35:08,589 --> 00:35:12,940
resolution but if you're pulling it down

00:35:10,420 --> 00:35:16,510
on a Mac my tip is that if you run it

00:35:12,940 --> 00:35:18,040
out of the package rather than dragging

00:35:16,510 --> 00:35:21,609
it into Applications folder you'll run

00:35:18,040 --> 00:35:24,250
and why that is it's a little bit beyond

00:35:21,609 --> 00:35:26,640
me but I believe it has something to do

00:35:24,250 --> 00:35:26,640
with Java

00:35:28,680 --> 00:35:33,750
and projects of Windows tool that does a

00:35:32,190 --> 00:35:35,520
similar kind of things a give either

00:35:33,750 --> 00:35:38,430
heaps more advanced version but pajek

00:35:35,520 --> 00:35:39,510
does have some nice some nice properties

00:35:38,430 --> 00:35:41,550
particularly around so the graph

00:35:39,510 --> 00:35:43,670
generation and stuff but it's only for

00:35:41,550 --> 00:35:46,050
Windows and it's a few years old now but

00:35:43,670 --> 00:35:47,070
yeah it's it's still worth checking out

00:35:46,050 --> 00:35:51,329
if you're interested in this kind of

00:35:47,070 --> 00:35:53,190
stuff so my conclusion graphs are good

00:35:51,329 --> 00:35:54,900
network actually is awesome there's

00:35:53,190 --> 00:35:56,760
heaps of stuff you can do with it

00:35:54,900 --> 00:35:58,500
you know I as I said have really only

00:35:56,760 --> 00:36:00,920
scratched the surface and there's lots

00:35:58,500 --> 00:36:02,220
of other cool things that are out there

00:36:00,920 --> 00:36:04,440
too

00:36:02,220 --> 00:36:05,940
you know my my life's actually pretty

00:36:04,440 --> 00:36:07,800
much in big data and while I've actually

00:36:05,940 --> 00:36:11,660
spend no time today talking about the

00:36:07,800 --> 00:36:15,420
relationship between data and network X

00:36:11,660 --> 00:36:18,000
data analytics and graphs are very very

00:36:15,420 --> 00:36:19,800
tightly intertwined so you know there

00:36:18,000 --> 00:36:21,089
are probably things you can do with

00:36:19,800 --> 00:36:22,800
network X they're definitely things you

00:36:21,089 --> 00:36:25,859
can do in network X that are beyond

00:36:22,800 --> 00:36:28,410
working out who is who has dodgy

00:36:25,859 --> 00:36:29,970
accounting practices so I hope that's

00:36:28,410 --> 00:36:32,570
been useful thank you very much and if

00:36:29,970 --> 00:36:32,570
there's any questions

00:36:38,119 --> 00:36:40,180

YouTube URL: https://www.youtube.com/watch?v=1q7FBxy1Rds


