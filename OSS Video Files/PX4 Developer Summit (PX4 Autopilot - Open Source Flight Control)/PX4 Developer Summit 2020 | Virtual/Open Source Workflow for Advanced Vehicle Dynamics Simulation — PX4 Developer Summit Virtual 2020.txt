Title: Open Source Workflow for Advanced Vehicle Dynamics Simulation â€” PX4 Developer Summit Virtual 2020
Publication date: 2020-07-19
Playlist: PX4 Developer Summit 2020 | Virtual
Description: 
	Title: Open Source Workflow for Advanced Vehicle Dynamics Simulation

Summary: The Open Source community supports a wide variety of toolsets to enable software and hardware in the loop simulation including Gazebo, X-Plane, FlightGear, iMAVSim, AirSim, and RealFlight. Each of these tools has their specific applications and advantages. The presentation will focus on an open-source workflow including NASA open-source parametric geometry (OpenVSP), JSBSim, and integrations with front-end visualization such as FlightGear. The talk will conclude with a review of implementation options, applications (such as software validation), demonstration of a SITL solution for a 50 lb VTOL airframe, and opportunities for future development.

The PX4 Developer Summit 2020 is the annual flagship conference hosted by Dronecode for the drone development community. https://bit.ly/2YXe4Rd
Captions: 
	00:00:00,080 --> 00:00:05,440
switching to you matt

00:00:03,120 --> 00:00:06,799
can you quickly switch to your webcam

00:00:05,440 --> 00:00:10,160
please

00:00:06,799 --> 00:00:10,559
great yes can you hear me i can't hear

00:00:10,160 --> 00:00:17,920
you

00:00:10,559 --> 00:00:17,920
i don't see you though

00:00:23,680 --> 00:00:26,720
it's probably soon

00:00:26,960 --> 00:00:34,880
we are showing i am showing the um

00:00:30,320 --> 00:00:38,559
here i'm showing that my video is live

00:00:34,880 --> 00:00:40,800
there you go you're live all right

00:00:38,559 --> 00:00:41,600
all right it's all yours matt take it

00:00:40,800 --> 00:00:44,960
away

00:00:41,600 --> 00:00:46,800
thank you thank you so

00:00:44,960 --> 00:00:48,800
good morning good afternoon good evening

00:00:46,800 --> 00:00:49,760
my name is matt mccanty i'm joined here

00:00:48,800 --> 00:00:52,800
today with uh

00:00:49,760 --> 00:00:54,800
jesse hoskins and as ramon had mentioned

00:00:52,800 --> 00:00:57,680
uh we're gonna be talking about an open

00:00:54,800 --> 00:01:00,800
source workflow for advanced vehicle

00:00:57,680 --> 00:01:00,800
dynamic simulation

00:01:09,680 --> 00:01:13,840
so the first thing i wanted to touch on

00:01:12,159 --> 00:01:17,759
is that this is a very

00:01:13,840 --> 00:01:21,759
broad subject area a tremendous amount

00:01:17,759 --> 00:01:22,320
of information that can be discussed in

00:01:21,759 --> 00:01:26,159
the

00:01:22,320 --> 00:01:27,600
overall dynamic and the different tool

00:01:26,159 --> 00:01:28,400
chain that can be used to address this

00:01:27,600 --> 00:01:31,200
in fact

00:01:28,400 --> 00:01:32,400
uh the open vsp which jesse will be

00:01:31,200 --> 00:01:34,720
talking about a little bit later

00:01:32,400 --> 00:01:36,560
has an entire conference track and

00:01:34,720 --> 00:01:39,759
information associated with it so

00:01:36,560 --> 00:01:40,640
our objective today is to work through a

00:01:39,759 --> 00:01:42,720
high level

00:01:40,640 --> 00:01:44,000
overview of this information to arm you

00:01:42,720 --> 00:01:46,479
with information of

00:01:44,000 --> 00:01:48,560
how you could best use this in your

00:01:46,479 --> 00:01:51,040
development workload process

00:01:48,560 --> 00:01:52,560
and while we mentioned an entire

00:01:51,040 --> 00:01:53,520
different components of the workflow if

00:01:52,560 --> 00:01:56,399
you see those

00:01:53,520 --> 00:01:57,840
identified here up on the slide the two

00:01:56,399 --> 00:02:01,040
specific areas we found

00:01:57,840 --> 00:02:01,600
most valuable and interesting are open

00:02:01,040 --> 00:02:03,360
vsp

00:02:01,600 --> 00:02:04,399
and jsps and given the amount of time

00:02:03,360 --> 00:02:05,920
that we have today that's what we're

00:02:04,399 --> 00:02:08,000
going to be focusing on so

00:02:05,920 --> 00:02:09,840
what we're going to begin with today is

00:02:08,000 --> 00:02:11,200
a of the why

00:02:09,840 --> 00:02:14,160
why would you use this particular

00:02:11,200 --> 00:02:16,879
configuration at a high level how

00:02:14,160 --> 00:02:18,080
and then some demos the what uh what you

00:02:16,879 --> 00:02:19,440
can support and do

00:02:18,080 --> 00:02:21,440
again we want to make sure that people

00:02:19,440 --> 00:02:22,000
come away from this presentation with an

00:02:21,440 --> 00:02:25,120
understanding

00:02:22,000 --> 00:02:27,280
of this at a high level

00:02:25,120 --> 00:02:29,200
it to be able to identify critical

00:02:27,280 --> 00:02:32,560
flight control characteristics

00:02:29,200 --> 00:02:34,160
of their vehicles and simulations

00:02:32,560 --> 00:02:35,760
another note is that the information

00:02:34,160 --> 00:02:36,080
we're sharing here today is not the be

00:02:35,760 --> 00:02:37,599
all

00:02:36,080 --> 00:02:39,440
and all solution there's multiple

00:02:37,599 --> 00:02:39,840
different ways that we'll talk about

00:02:39,440 --> 00:02:41,519
that

00:02:39,840 --> 00:02:44,720
that you could support but this we found

00:02:41,519 --> 00:02:48,000
to be meeting kind of that golden 80 20

00:02:44,720 --> 00:02:49,840
rule where we're identifying those 20 of

00:02:48,000 --> 00:02:51,519
inputs that are driving 80 percent of

00:02:49,840 --> 00:02:53,200
the outputs and specifically

00:02:51,519 --> 00:02:54,800
how that relates to the broader

00:02:53,200 --> 00:02:58,720
performance

00:02:54,800 --> 00:03:01,760
of the vehicle itself now jumping into

00:02:58,720 --> 00:03:02,400
a high-level implementation here and

00:03:01,760 --> 00:03:05,440
that is

00:03:02,400 --> 00:03:06,879
the how this the back-end civil solution

00:03:05,440 --> 00:03:09,599
is actually functioning

00:03:06,879 --> 00:03:09,920
so first and foremost the work that has

00:03:09,599 --> 00:03:11,599
been

00:03:09,920 --> 00:03:13,440
conducted here has been heavily

00:03:11,599 --> 00:03:14,720
supported and influenced by a number of

00:03:13,440 --> 00:03:16,959
different individuals

00:03:14,720 --> 00:03:19,360
including team members that we have in

00:03:16,959 --> 00:03:21,280
mexico poland and in the us

00:03:19,360 --> 00:03:23,040
as well as adopting a lot of the great

00:03:21,280 --> 00:03:25,360
work that the

00:03:23,040 --> 00:03:27,040
open source community has published

00:03:25,360 --> 00:03:29,760
specifically we'd like to recognize

00:03:27,040 --> 00:03:30,480
roman and the work that they did

00:03:29,760 --> 00:03:32,879
originally

00:03:30,480 --> 00:03:34,000
on some of the the hill work which we've

00:03:32,879 --> 00:03:37,440
taken and

00:03:34,000 --> 00:03:41,280
adopted and used for this particular

00:03:37,440 --> 00:03:43,519
scenario if you look down on the bottom

00:03:41,280 --> 00:03:45,200
uh when we look at the the two key

00:03:43,519 --> 00:03:46,959
components that we wanted to focus on

00:03:45,200 --> 00:03:49,680
one is this

00:03:46,959 --> 00:03:50,959
airframe definition with open vsp and

00:03:49,680 --> 00:03:54,799
two being jsb

00:03:50,959 --> 00:03:55,280
sim the the interaction between these

00:03:54,799 --> 00:03:57,120
two

00:03:55,280 --> 00:03:59,200
is the specific area of workflow we'll

00:03:57,120 --> 00:04:02,799
be focusing on but another key

00:03:59,200 --> 00:04:05,120
input that we wanted to identify was the

00:04:02,799 --> 00:04:06,640
fact that this implementation is

00:04:05,120 --> 00:04:08,560
slightly different than using flight

00:04:06,640 --> 00:04:11,519
gear

00:04:08,560 --> 00:04:13,200
in a standalone fashion and we'll talk

00:04:11,519 --> 00:04:14,560
about specifics of how that affects it

00:04:13,200 --> 00:04:17,600
but ultimately the

00:04:14,560 --> 00:04:19,519
the key is that we can run jsb sim at a

00:04:17,600 --> 00:04:22,880
much higher rate than you can run

00:04:19,519 --> 00:04:24,400
flight to your app if you're familiar

00:04:22,880 --> 00:04:26,800
with any of the

00:04:24,400 --> 00:04:28,639
general px4 software in the loop or

00:04:26,800 --> 00:04:32,800
hardware and loop concepts

00:04:28,639 --> 00:04:36,320
this is leveraging all of those same

00:04:32,800 --> 00:04:39,360
configurations and components so why

00:04:36,320 --> 00:04:42,720
why did we go down this path we started

00:04:39,360 --> 00:04:46,000
this process about

00:04:42,720 --> 00:04:50,479
nine months ago when we were integrating

00:04:46,000 --> 00:04:53,919
a new airframe with px4

00:04:50,479 --> 00:04:57,199
and and new avionics

00:04:53,919 --> 00:04:59,520
and payload packages

00:04:57,199 --> 00:05:00,479
inherently that was adjusted the mass

00:04:59,520 --> 00:05:03,759
distribution

00:05:00,479 --> 00:05:05,600
of the airframe we wanted to ensure the

00:05:03,759 --> 00:05:06,479
changes that we made on this large

00:05:05,600 --> 00:05:09,360
airframe

00:05:06,479 --> 00:05:10,160
weren't going to have adverse effects on

00:05:09,360 --> 00:05:12,160
the

00:05:10,160 --> 00:05:13,440
overarching performance and obviously if

00:05:12,160 --> 00:05:15,840
you're going to be flying 45 pound

00:05:13,440 --> 00:05:18,639
airframe this is not inexpensive

00:05:15,840 --> 00:05:20,000
and it carries a significant risk from

00:05:18,639 --> 00:05:21,520
uh from an overarching

00:05:20,000 --> 00:05:23,039
operational perspective so we want to

00:05:21,520 --> 00:05:25,759
identify any of those

00:05:23,039 --> 00:05:27,919
really exciting components of the

00:05:25,759 --> 00:05:29,039
airframe characteristics prior to

00:05:27,919 --> 00:05:32,080
actually going and

00:05:29,039 --> 00:05:34,479
flying the vehicle and so

00:05:32,080 --> 00:05:35,440
in that process the the first step that

00:05:34,479 --> 00:05:38,720
we took was to

00:05:35,440 --> 00:05:40,320
conduct basically the paper napkin

00:05:38,720 --> 00:05:41,199
exercise is doing an assessment of the

00:05:40,320 --> 00:05:44,000
vehicle

00:05:41,199 --> 00:05:45,280
um and we determined that uh this

00:05:44,000 --> 00:05:47,520
particular vehicle with the initial

00:05:45,280 --> 00:05:50,800
configuration that we had identified

00:05:47,520 --> 00:05:53,280
had a static margin that was uh

00:05:50,800 --> 00:05:54,800
smaller than we would have you know

00:05:53,280 --> 00:05:56,080
expected and for those of you who may

00:05:54,800 --> 00:06:00,720
not be familiar with

00:05:56,080 --> 00:06:03,759
static margin ultimately it is the

00:06:00,720 --> 00:06:05,759
it ultimately derives the fact of how

00:06:03,759 --> 00:06:08,560
the vehicle performs when

00:06:05,759 --> 00:06:10,479
it is up against some of the flight

00:06:08,560 --> 00:06:13,440
envelope characteristics which would be

00:06:10,479 --> 00:06:15,039
interesting and important to identify um

00:06:13,440 --> 00:06:15,600
when we're doing a back transition since

00:06:15,039 --> 00:06:18,560
this is a

00:06:15,600 --> 00:06:20,080
tall or forward transition and so we

00:06:18,560 --> 00:06:22,479
took the opportunity to

00:06:20,080 --> 00:06:23,680
model the airframe effectively creating

00:06:22,479 --> 00:06:25,600
a digital twin

00:06:23,680 --> 00:06:27,199
uh that allows us to go take that

00:06:25,600 --> 00:06:29,680
vehicle evaluate it train it

00:06:27,199 --> 00:06:30,960
give our our flight crew members the

00:06:29,680 --> 00:06:33,440
opportunity to

00:06:30,960 --> 00:06:34,720
actually see and feel the vehicle in the

00:06:33,440 --> 00:06:36,800
simulated environment

00:06:34,720 --> 00:06:38,880
plus identify the way that we could

00:06:36,800 --> 00:06:42,319
either improve that static margin

00:06:38,880 --> 00:06:43,759
um or overarching increase the

00:06:42,319 --> 00:06:45,520
performance of the vehicle prior to

00:06:43,759 --> 00:06:48,160
actually conducting that first flight

00:06:45,520 --> 00:06:48,720
so now i'm going to hand it off to jesse

00:06:48,160 --> 00:06:50,960
um

00:06:48,720 --> 00:06:52,960
who is going to take us through the next

00:06:50,960 --> 00:06:57,120
steps specifically

00:06:52,960 --> 00:06:58,720
related to the why and how and the what

00:06:57,120 --> 00:07:01,039
and i look forward to chatting with you

00:06:58,720 --> 00:07:03,840
more at the end here in the q a

00:07:01,039 --> 00:07:03,840
jesse

00:07:04,800 --> 00:07:09,840
all right thank you matt so

00:07:08,240 --> 00:07:11,440
uh today i'm going to start out by

00:07:09,840 --> 00:07:13,440
talking about the why uh

00:07:11,440 --> 00:07:14,639
with selecting the tools that we did so

00:07:13,440 --> 00:07:17,360
we broke the tool

00:07:14,639 --> 00:07:18,000
tool chain down into two primary tools

00:07:17,360 --> 00:07:20,639
um

00:07:18,000 --> 00:07:22,319
first an aerodynamic analysis tool so uh

00:07:20,639 --> 00:07:25,680
the table in the top left here you see

00:07:22,319 --> 00:07:28,560
that open vsp and vsp aero

00:07:25,680 --> 00:07:29,440
that's what we ended up picking but

00:07:28,560 --> 00:07:33,120
basically it's an

00:07:29,440 --> 00:07:35,919
open source nasa tool um that has a

00:07:33,120 --> 00:07:36,560
linear vortex vortex lattice method

00:07:35,919 --> 00:07:40,639
solver

00:07:36,560 --> 00:07:43,039
uh also has a panel method solver to

00:07:40,639 --> 00:07:44,479
to perform aerodynamic analysis so this

00:07:43,039 --> 00:07:45,440
level of analysis we found to be

00:07:44,479 --> 00:07:48,160
sufficient

00:07:45,440 --> 00:07:49,680
um it's also an open source tool has a

00:07:48,160 --> 00:07:51,599
very easy to use gui

00:07:49,680 --> 00:07:53,680
again like we had said before it has a

00:07:51,599 --> 00:07:56,319
workshop specifically dedicated to it so

00:07:53,680 --> 00:07:59,520
it's pretty well supported

00:07:56,319 --> 00:08:02,479
we also looked at digedap which is the

00:07:59,520 --> 00:08:03,080
program now that is the digitization of

00:08:02,479 --> 00:08:05,440
the

00:08:03,080 --> 00:08:07,039
airforces.com framework uh so it's a

00:08:05,440 --> 00:08:09,039
very sophisticated framework

00:08:07,039 --> 00:08:11,120
uh has a lot of history behind it um

00:08:09,039 --> 00:08:12,879
it's mostly open there's some gui

00:08:11,120 --> 00:08:14,639
components and plotting components that

00:08:12,879 --> 00:08:16,800
are they're closed but

00:08:14,639 --> 00:08:19,039
one of the things that that we noticed

00:08:16,800 --> 00:08:22,000
was we were looking at model and a tail

00:08:19,039 --> 00:08:23,759
and so some of the complex geometries

00:08:22,000 --> 00:08:26,879
drove us closer to open vsp

00:08:23,759 --> 00:08:28,800
in this case we also looked at adl which

00:08:26,879 --> 00:08:30,879
is more of an industry standard

00:08:28,800 --> 00:08:32,640
tool for this type of analysis which is

00:08:30,879 --> 00:08:35,039
sophisticated is open

00:08:32,640 --> 00:08:36,080
um however we found the learning curve

00:08:35,039 --> 00:08:38,959
to be non-trivial

00:08:36,080 --> 00:08:40,880
so in that in this case kind of similar

00:08:38,959 --> 00:08:42,560
with matlab and simulink in that

00:08:40,880 --> 00:08:45,279
with the aerospace toolbox it's very

00:08:42,560 --> 00:08:45,839
powerful it's often used in concert with

00:08:45,279 --> 00:08:49,600
a

00:08:45,839 --> 00:08:53,279
com type tool but isn't open

00:08:49,600 --> 00:08:54,480
it's also probably a little more

00:08:53,279 --> 00:08:56,480
more of a learning curve than we were

00:08:54,480 --> 00:08:58,000
looking for here uh so next we went to

00:08:56,480 --> 00:09:00,959
flight dynamics simulators

00:08:58,000 --> 00:09:01,839
so looking for a a six degree of freedom

00:09:00,959 --> 00:09:05,519
simulator

00:09:01,839 --> 00:09:06,080
um that was of sufficient complexity so

00:09:05,519 --> 00:09:08,480
jsb

00:09:06,080 --> 00:09:10,320
sim is what we ended up settling on one

00:09:08,480 --> 00:09:11,440
of the key things about jsb sim is we

00:09:10,320 --> 00:09:14,560
were able to run it

00:09:11,440 --> 00:09:17,600
at 250 hertz and beyond on

00:09:14,560 --> 00:09:21,360
relatively limited hardware resources

00:09:17,600 --> 00:09:23,360
it's also very open and extensible

00:09:21,360 --> 00:09:24,560
it can be complex to configure initially

00:09:23,360 --> 00:09:27,680
at times but it's

00:09:24,560 --> 00:09:30,640
very extensive that's key for us here

00:09:27,680 --> 00:09:32,880
we also evaluated x-plane um the

00:09:30,640 --> 00:09:34,880
hardware resource is required to run

00:09:32,880 --> 00:09:38,720
at 250 hertz which is obviously what

00:09:34,880 --> 00:09:42,320
we'd like to be the ekf and px4 at

00:09:38,720 --> 00:09:46,240
were a little more substantial and so

00:09:42,320 --> 00:09:46,240
that combined with it not being open

00:09:46,800 --> 00:09:51,120
lent us towards jsp sim we ended up

00:09:49,839 --> 00:09:53,600
using flight gear here

00:09:51,120 --> 00:09:54,480
for the visual front end but not the

00:09:53,600 --> 00:09:56,959
dynamics

00:09:54,480 --> 00:09:57,600
basically it's more constrained than jsp

00:09:56,959 --> 00:10:00,560
sim

00:09:57,600 --> 00:10:03,040
um and we also looked at realflight

00:10:00,560 --> 00:10:05,360
which is a very good tool we could run

00:10:03,040 --> 00:10:06,880
that up at 250 hertz but it's not

00:10:05,360 --> 00:10:09,600
open and that was something that we

00:10:06,880 --> 00:10:11,920
really wanted to have here

00:10:09,600 --> 00:10:13,360
obviously gazebo was another tool

00:10:11,920 --> 00:10:14,560
basically the first simulator that we

00:10:13,360 --> 00:10:17,279
evaluated

00:10:14,560 --> 00:10:19,279
and it could function in this capacity

00:10:17,279 --> 00:10:20,079
there were some elements of jsp sim and

00:10:19,279 --> 00:10:23,600
how the

00:10:20,079 --> 00:10:25,279
dynamics were implemented already that

00:10:23,600 --> 00:10:26,880
moved us that way but gazebo would also

00:10:25,279 --> 00:10:30,480
be

00:10:26,880 --> 00:10:34,320
completely fit into this framework

00:10:30,480 --> 00:10:36,720
so now i'm going to switch to the how

00:10:34,320 --> 00:10:37,600
so specifically with openvsp we wanted

00:10:36,720 --> 00:10:39,760
to take a

00:10:37,600 --> 00:10:41,120
model of the vehicle uh so the geometric

00:10:39,760 --> 00:10:44,640
and match properties

00:10:41,120 --> 00:10:46,480
and create or perform an analysis to

00:10:44,640 --> 00:10:48,079
generate aerodynamic coefficients

00:10:46,480 --> 00:10:50,399
stability derivatives

00:10:48,079 --> 00:10:52,079
um things like that so on the right side

00:10:50,399 --> 00:10:54,160
of this slide we have

00:10:52,079 --> 00:10:55,920
mass properties specifically where we'd

00:10:54,160 --> 00:10:58,480
start so there's a lot of ways to model

00:10:55,920 --> 00:11:01,600
mass properties in open vsp

00:10:58,480 --> 00:11:02,079
we chose to use point masses um using

00:11:01,600 --> 00:11:05,839
the

00:11:02,079 --> 00:11:07,920
inertial tool in open vsp

00:11:05,839 --> 00:11:09,920
able to generate the center of gravity

00:11:07,920 --> 00:11:11,600
and moments of inertia around the three

00:11:09,920 --> 00:11:13,680
axes

00:11:11,600 --> 00:11:15,279
we then took the geometric properties

00:11:13,680 --> 00:11:17,760
and built a geometric model

00:11:15,279 --> 00:11:19,760
and opened vsp now one of the key

00:11:17,760 --> 00:11:22,079
insights into openvsp is

00:11:19,760 --> 00:11:24,079
how the solvers are set up uh

00:11:22,079 --> 00:11:25,279
specifically within vsp aero which is

00:11:24,079 --> 00:11:27,279
kind of the

00:11:25,279 --> 00:11:29,600
i'd say more the back end of the

00:11:27,279 --> 00:11:32,640
aerodynamic analysis

00:11:29,600 --> 00:11:34,959
the the simpler geometrically the better

00:11:32,640 --> 00:11:37,040
it will perform

00:11:34,959 --> 00:11:40,000
specifically with the vortex lattice

00:11:37,040 --> 00:11:41,600
method that we were using

00:11:40,000 --> 00:11:44,160
since everything is modeled as a lifting

00:11:41,600 --> 00:11:46,399
body uh mainly the dominant

00:11:44,160 --> 00:11:47,680
aerodynamic components uh should be

00:11:46,399 --> 00:11:51,040
modeled so that's your wings

00:11:47,680 --> 00:11:53,440
your control surfaces uh your your

00:11:51,040 --> 00:11:54,160
stabilizers everything else contributes

00:11:53,440 --> 00:11:56,160
to drag

00:11:54,160 --> 00:11:58,880
we did have another method of building

00:11:56,160 --> 00:12:01,680
up drag that uh open vsp

00:11:58,880 --> 00:12:03,839
the workshop actually recommends so we

00:12:01,680 --> 00:12:05,519
found it to be sufficient to model

00:12:03,839 --> 00:12:07,040
the wings control surfaces and

00:12:05,519 --> 00:12:10,160
stabilizers

00:12:07,040 --> 00:12:11,600
so with that geometric model we were

00:12:10,160 --> 00:12:14,800
able to iteratively run

00:12:11,600 --> 00:12:17,200
vsp aero so you can do

00:12:14,800 --> 00:12:17,839
computational sweeps over varying flow

00:12:17,200 --> 00:12:21,680
conditions

00:12:17,839 --> 00:12:24,480
so your angle attack or side slip angle

00:12:21,680 --> 00:12:25,920
mach number control surface deflections

00:12:24,480 --> 00:12:27,600
etc so

00:12:25,920 --> 00:12:29,839
we were able to pull out the aerodynamic

00:12:27,600 --> 00:12:32,399
coefficients ground reaction forces

00:12:29,839 --> 00:12:33,440
stability derivatives even model rotor

00:12:32,399 --> 00:12:36,880
wash effects

00:12:33,440 --> 00:12:40,160
as well so

00:12:36,880 --> 00:12:42,959
moving to jsd sim um now we we

00:12:40,160 --> 00:12:44,560
wanted to leverage the jsb sim airframe

00:12:42,959 --> 00:12:46,959
definition model

00:12:44,560 --> 00:12:50,240
framework um as well as what we had from

00:12:46,959 --> 00:12:52,399
openvsp to generate our digital twin

00:12:50,240 --> 00:12:54,720
so on the right we kind of broke out the

00:12:52,399 --> 00:12:56,959
major sources

00:12:54,720 --> 00:12:57,760
of information that go into the jsb sim

00:12:56,959 --> 00:12:59,839
model

00:12:57,760 --> 00:13:02,480
again jsp sims pretty well supported

00:12:59,839 --> 00:13:04,160
there's a lot of documentation online

00:13:02,480 --> 00:13:06,800
about how to do this but it's kind of

00:13:04,160 --> 00:13:09,360
the breakdown that we came up with

00:13:06,800 --> 00:13:10,720
so starting with the kind of your

00:13:09,360 --> 00:13:14,079
metrics so those are the

00:13:10,720 --> 00:13:17,519
areas visual reference points

00:13:14,079 --> 00:13:20,560
sorted reference points in the jsp xml

00:13:17,519 --> 00:13:22,959
definition next we have the mass

00:13:20,560 --> 00:13:24,000
mass properties mass balance so that's

00:13:22,959 --> 00:13:26,000
your center of gravity

00:13:24,000 --> 00:13:27,600
your moments of inertia your ground

00:13:26,000 --> 00:13:31,120
reactions including

00:13:27,600 --> 00:13:33,360
spring coefficients etc

00:13:31,120 --> 00:13:34,399
then we have a flight control section so

00:13:33,360 --> 00:13:36,560
basically you do a

00:13:34,399 --> 00:13:39,440
you need to do a flight control mapping

00:13:36,560 --> 00:13:41,440
uh from px4 to jsb sim internally

00:13:39,440 --> 00:13:44,800
that can be one to one kind of depends

00:13:41,440 --> 00:13:47,839
on how you did your aerodynamic analysis

00:13:44,800 --> 00:13:48,560
in our case i wanted to be able to sum

00:13:47,839 --> 00:13:51,440
trims

00:13:48,560 --> 00:13:52,720
uh also how you treat the a tail whether

00:13:51,440 --> 00:13:55,199
you break that out

00:13:52,720 --> 00:13:58,240
into a rudder an elevator or if you have

00:13:55,199 --> 00:13:58,240
that directly modeled

00:13:58,399 --> 00:14:02,399
speaking of the aerodynamic model we

00:14:00,720 --> 00:14:04,000
then have the aerodynamics section which

00:14:02,399 --> 00:14:04,560
is kind of the bulk of where the open

00:14:04,000 --> 00:14:07,440
vsp

00:14:04,560 --> 00:14:09,440
work was affected so we used a

00:14:07,440 --> 00:14:11,279
coefficient build up method

00:14:09,440 --> 00:14:13,360
to model the aerodynamics so that means

00:14:11,279 --> 00:14:16,720
we have

00:14:13,360 --> 00:14:19,680
coefficients relative to

00:14:16,720 --> 00:14:22,000
the contributing factors for lift drag

00:14:19,680 --> 00:14:25,040
pitch roll and yawn

00:14:22,000 --> 00:14:27,120
and then the kind of final section

00:14:25,040 --> 00:14:28,240
that will lead us into our key jsb

00:14:27,120 --> 00:14:30,320
insight was the

00:14:28,240 --> 00:14:31,440
propeller and torque modeling so this

00:14:30,320 --> 00:14:34,560
was this was a

00:14:31,440 --> 00:14:36,800
major finding for us um that

00:14:34,560 --> 00:14:37,920
one of the core assumptions in the

00:14:36,800 --> 00:14:41,360
thrust and torque

00:14:37,920 --> 00:14:43,120
generator um in jsb sim uh

00:14:41,360 --> 00:14:44,399
with there's some assumptions built

00:14:43,120 --> 00:14:46,639
towards

00:14:44,399 --> 00:14:48,800
larger vehicles so larger in size and

00:14:46,639 --> 00:14:49,680
weight than the uas that we were trying

00:14:48,800 --> 00:14:52,079
to model

00:14:49,680 --> 00:14:53,600
and so using the built-in thrust and

00:14:52,079 --> 00:14:57,040
torque generator

00:14:53,600 --> 00:14:58,880
could lead to some instability issues

00:14:57,040 --> 00:15:00,639
specifically when stimulating vertical

00:14:58,880 --> 00:15:03,279
flight so what we did

00:15:00,639 --> 00:15:05,760
was because jspsend is very extensible

00:15:03,279 --> 00:15:08,000
the xml definitions support

00:15:05,760 --> 00:15:10,480
uh calculating and applying forces

00:15:08,000 --> 00:15:13,040
directly so we were able to model the

00:15:10,480 --> 00:15:14,240
thrust and torques directly as forces in

00:15:13,040 --> 00:15:17,279
jsp

00:15:14,240 --> 00:15:19,360
so that was able to circumnavigate that

00:15:17,279 --> 00:15:21,600
that torque generator assumption

00:15:19,360 --> 00:15:24,399
internal to js beason

00:15:21,600 --> 00:15:26,160
without modifying jsp directly so we

00:15:24,399 --> 00:15:29,040
found that to be

00:15:26,160 --> 00:15:30,399
sufficient and a very helpful thing for

00:15:29,040 --> 00:15:33,360
us

00:15:30,399 --> 00:15:35,279
so uh now into the what so the

00:15:33,360 --> 00:15:38,240
applications going forward

00:15:35,279 --> 00:15:40,240
um we kind of see two big takeaways from

00:15:38,240 --> 00:15:41,600
from this work thus far

00:15:40,240 --> 00:15:44,639
the first is that we were able to

00:15:41,600 --> 00:15:48,399
implement this solution in a very low

00:15:44,639 --> 00:15:51,920
uh power processing environment so

00:15:48,399 --> 00:15:54,560
the whole jsb sim to px4 interface

00:15:51,920 --> 00:15:55,680
additional sensor simulations all in

00:15:54,560 --> 00:15:57,759
hardware

00:15:55,680 --> 00:16:00,399
that's kind of roughly equivalent from a

00:15:57,759 --> 00:16:04,720
processing perspective to a raspberry pi

00:16:00,399 --> 00:16:07,759
so we found that to be very powerful

00:16:04,720 --> 00:16:10,720
or not a lot of required power

00:16:07,759 --> 00:16:12,560
the other the other takeaway here is the

00:16:10,720 --> 00:16:13,360
ability to create an airframe digital

00:16:12,560 --> 00:16:17,279
twin

00:16:13,360 --> 00:16:18,959
um it's extremely powerful so

00:16:17,279 --> 00:16:21,440
to have an actual digital twin of the

00:16:18,959 --> 00:16:24,240
uas given a

00:16:21,440 --> 00:16:25,440
relatively short turnaround time uh to

00:16:24,240 --> 00:16:27,680
conduct

00:16:25,440 --> 00:16:28,880
rare normal and non-normal testing so

00:16:27,680 --> 00:16:32,800
specifically

00:16:28,880 --> 00:16:35,680
things like locking up control surfaces

00:16:32,800 --> 00:16:37,680
sensor variants motor failure weather

00:16:35,680 --> 00:16:40,560
conditions all of that testing

00:16:37,680 --> 00:16:41,839
on a digital twin of the vehicle we

00:16:40,560 --> 00:16:44,399
believe will lead

00:16:41,839 --> 00:16:45,040
to a path for software regulatory

00:16:44,399 --> 00:16:47,199
compliance

00:16:45,040 --> 00:16:48,160
from this enhanced level of software

00:16:47,199 --> 00:16:49,360
testing

00:16:48,160 --> 00:16:51,839
so we think that's that's a really

00:16:49,360 --> 00:16:54,800
powerful concept um

00:16:51,839 --> 00:16:55,680
and i've got a demo here to just kind of

00:16:54,800 --> 00:16:57,600
show

00:16:55,680 --> 00:16:58,720
um show this in action it's a very

00:16:57,600 --> 00:17:01,279
simple

00:16:58,720 --> 00:17:02,639
uh demo uh we have q ground control on

00:17:01,279 --> 00:17:06,000
the right there

00:17:02,639 --> 00:17:08,959
uh just a simple vtol flight plan

00:17:06,000 --> 00:17:09,919
on the left we have the flight gear

00:17:08,959 --> 00:17:13,280
visual model

00:17:09,919 --> 00:17:16,319
so you see the visualization there

00:17:13,280 --> 00:17:18,400
that flight gear is running at 30 hertz

00:17:16,319 --> 00:17:20,319
but the jsp sim on the back end it's

00:17:18,400 --> 00:17:24,559
actually simulating the dynamics

00:17:20,319 --> 00:17:25,919
is up 250 hertz so

00:17:24,559 --> 00:17:28,799
one of the things that we found really

00:17:25,919 --> 00:17:31,440
powerful about this is

00:17:28,799 --> 00:17:32,880
the ability to interact with the vehicle

00:17:31,440 --> 00:17:35,600
just like you would as an

00:17:32,880 --> 00:17:37,440
operator in the field so from both a

00:17:35,600 --> 00:17:39,919
training perspective but also from a

00:17:37,440 --> 00:17:40,640
tuning and flight planning perspective

00:17:39,919 --> 00:17:42,720
since

00:17:40,640 --> 00:17:44,840
the dynamics of this vehicle are

00:17:42,720 --> 00:17:47,679
simulated

00:17:44,840 --> 00:17:50,720
sufficiently close to the real vehicle

00:17:47,679 --> 00:17:53,440
um you can use this for tuning

00:17:50,720 --> 00:17:53,919
so as you see here going to the tuning

00:17:53,440 --> 00:17:56,559
tab on

00:17:53,919 --> 00:17:57,679
cue ground control tuning in the same

00:17:56,559 --> 00:18:00,160
way that you would

00:17:57,679 --> 00:18:00,960
tune the vehicle out in the field and

00:18:00,160 --> 00:18:04,000
this is

00:18:00,960 --> 00:18:04,320
directly applicable and transferable to

00:18:04,000 --> 00:18:05,919
the

00:18:04,320 --> 00:18:07,440
to the vehicle so we can tune in the

00:18:05,919 --> 00:18:09,120
simulator we can

00:18:07,440 --> 00:18:11,520
adjust our flight plans accordingly we

00:18:09,120 --> 00:18:13,280
can apply everything in the simulator

00:18:11,520 --> 00:18:14,640
take those parameters load in on the

00:18:13,280 --> 00:18:17,360
real vehicle

00:18:14,640 --> 00:18:18,000
and go and so we found that to be very

00:18:17,360 --> 00:18:20,240
helpful

00:18:18,000 --> 00:18:23,280
especially with the large vehicle class

00:18:20,240 --> 00:18:25,760
that we have flying here

00:18:23,280 --> 00:18:27,360
so kind of talk through most of the

00:18:25,760 --> 00:18:29,120
flight but

00:18:27,360 --> 00:18:30,799
as you can see we're going to loiter

00:18:29,120 --> 00:18:33,440
around this waypoint

00:18:30,799 --> 00:18:34,880
to line us up for approach as i change

00:18:33,440 --> 00:18:38,160
the perspective

00:18:34,880 --> 00:18:41,520
and here we are doing a back transition

00:18:38,160 --> 00:18:43,520
it's also helpful to understand in the

00:18:41,520 --> 00:18:45,520
simulator how

00:18:43,520 --> 00:18:46,960
long from a distance perspective the

00:18:45,520 --> 00:18:50,720
back transition would take

00:18:46,960 --> 00:18:53,520
um as the particular vehicle we modeled

00:18:50,720 --> 00:18:54,799
likes to likes to fly and so we wanted

00:18:53,520 --> 00:18:58,240
to have a good understanding of where

00:18:54,799 --> 00:18:58,240
that back transition would finish

00:18:58,720 --> 00:19:03,200
so there we just completed it we're over

00:19:01,120 --> 00:19:06,400
our land waypoint

00:19:03,200 --> 00:19:10,160
and we're descending so

00:19:06,400 --> 00:19:12,640
again just a quick demo um

00:19:10,160 --> 00:19:13,760
of that running live still gonna land

00:19:12,640 --> 00:19:18,320
here but we'll

00:19:13,760 --> 00:19:22,000
go on to the next slide uh so kind of

00:19:18,320 --> 00:19:24,240
all the data that is available in px4 um

00:19:22,000 --> 00:19:26,000
is extreme we all are aware of that

00:19:24,240 --> 00:19:28,320
there's a ton of data that's

00:19:26,000 --> 00:19:30,320
available but now with this solution

00:19:28,320 --> 00:19:33,760
there's also the gsb sim

00:19:30,320 --> 00:19:36,960
data that is accessible so in this slide

00:19:33,760 --> 00:19:39,679
we have uh just just a sampling

00:19:36,960 --> 00:19:41,600
of some of the representative jsp sim

00:19:39,679 --> 00:19:44,640
data that's available

00:19:41,600 --> 00:19:48,960
so we were talking earlier about

00:19:44,640 --> 00:19:50,640
static margin analysis this data is

00:19:48,960 --> 00:19:52,799
extremely powerful in helping us

00:19:50,640 --> 00:19:53,679
understand what was what was going on so

00:19:52,799 --> 00:19:56,720
we see

00:19:53,679 --> 00:19:58,320
in the top graph here on the left um

00:19:56,720 --> 00:20:00,400
that red line is the start back

00:19:58,320 --> 00:20:03,440
transition the top graph

00:20:00,400 --> 00:20:06,720
is the moments that are calculated

00:20:03,440 --> 00:20:09,200
from jsp graph in the middle

00:20:06,720 --> 00:20:10,799
is jsp sim's internal representation of

00:20:09,200 --> 00:20:12,960
the actuator outputs

00:20:10,799 --> 00:20:14,559
and the graph in the bottom are just

00:20:12,960 --> 00:20:15,360
three of the forces that jsp send

00:20:14,559 --> 00:20:19,039
resolved

00:20:15,360 --> 00:20:22,799
so drag lift and weight

00:20:19,039 --> 00:20:25,039
so again in addition to the px4 data

00:20:22,799 --> 00:20:27,760
we found the jsb sim data to be

00:20:25,039 --> 00:20:27,760
extremely helpful

00:20:29,440 --> 00:20:33,520
and then as we said before this is a

00:20:31,679 --> 00:20:35,760
very high level presentation

00:20:33,520 --> 00:20:38,880
openvsp has a whole workshop we actually

00:20:35,760 --> 00:20:40,080
have the overview linked in this slide

00:20:38,880 --> 00:20:41,760
i encourage you to check out some of

00:20:40,080 --> 00:20:43,120
these resources these are a lot of the

00:20:41,760 --> 00:20:45,360
resources that we used

00:20:43,120 --> 00:20:47,520
to go and develop this solution and

00:20:45,360 --> 00:20:50,720
implement it

00:20:47,520 --> 00:20:53,840
so could be something really helpful um

00:20:50,720 --> 00:20:54,640
going forward to consider so at this

00:20:53,840 --> 00:20:58,000
time

00:20:54,640 --> 00:20:58,799
we can move the q a session thank you

00:20:58,000 --> 00:21:02,000
for

00:20:58,799 --> 00:21:05,280
this all right um

00:21:02,000 --> 00:21:07,760
so jesse yes

00:21:05,280 --> 00:21:08,880
are you in your lives there yep you're

00:21:07,760 --> 00:21:10,400
good i'm just gonna turn off my

00:21:08,880 --> 00:21:11,280
screenshot

00:21:10,400 --> 00:21:14,840
all right so we've got a couple

00:21:11,280 --> 00:21:18,000
questions here um first question

00:21:14,840 --> 00:21:19,919
um can you say more about how to think

00:21:18,000 --> 00:21:20,799
about using this data for regulatory

00:21:19,919 --> 00:21:24,000
compliance

00:21:20,799 --> 00:21:26,080
especially at a type certification so

00:21:24,000 --> 00:21:29,120
i think one of the the powerful things

00:21:26,080 --> 00:21:32,320
is with jsp senders

00:21:29,120 --> 00:21:34,159
scripting capability so you can

00:21:32,320 --> 00:21:35,679
run not just one flight that's very

00:21:34,159 --> 00:21:38,240
manual intensive but

00:21:35,679 --> 00:21:40,559
large batches of these flights different

00:21:38,240 --> 00:21:44,400
flights different flight conditions

00:21:40,559 --> 00:21:46,000
to demonstrate time on the software

00:21:44,400 --> 00:21:47,840
version or time on the hardware version

00:21:46,000 --> 00:21:50,720
or both

00:21:47,840 --> 00:21:51,760
so i think that's just one of many paths

00:21:50,720 --> 00:21:56,080
that would be helpful

00:21:51,760 --> 00:22:00,960
for regular storage um

00:21:56,080 --> 00:22:03,039
next question um did we evaluate airstem

00:22:00,960 --> 00:22:04,880
um so yeah we we had taken a look at

00:22:03,039 --> 00:22:07,440
airsim um

00:22:04,880 --> 00:22:09,440
at the time the openness and

00:22:07,440 --> 00:22:10,640
extensibility of jspsim was kind of what

00:22:09,440 --> 00:22:13,360
drew us that way

00:22:10,640 --> 00:22:14,480
um and that there had been some work in

00:22:13,360 --> 00:22:16,559
that area that we

00:22:14,480 --> 00:22:18,960
had found uh there's absolutely nothing

00:22:16,559 --> 00:22:22,720
precluding air sim from being plugged in

00:22:18,960 --> 00:22:24,880
either instead of jsp sim or alongside

00:22:22,720 --> 00:22:28,000
and that would be something we welcome

00:22:24,880 --> 00:22:30,640
going forward in the future

00:22:28,000 --> 00:22:31,200
next question is are there any plans to

00:22:30,640 --> 00:22:34,400
contribute

00:22:31,200 --> 00:22:36,320
upstream uh of the jsp and jsp sim

00:22:34,400 --> 00:22:38,159
integrations to px4

00:22:36,320 --> 00:22:40,880
yeah so i believe we're working right

00:22:38,159 --> 00:22:44,159
now with bacterium on

00:22:40,880 --> 00:22:46,400
getting that code uh that jsp the px4

00:22:44,159 --> 00:22:47,440
code uh released i think a lot of these

00:22:46,400 --> 00:22:49,360
resources

00:22:47,440 --> 00:22:51,039
um will help kind of point in that

00:22:49,360 --> 00:22:53,280
direction so even without

00:22:51,039 --> 00:22:56,320
the direct source code as we work

00:22:53,280 --> 00:22:59,280
through that timing process

00:22:56,320 --> 00:23:00,240
i think that bridge is relatively

00:22:59,280 --> 00:23:01,760
accessible

00:23:00,240 --> 00:23:03,440
even from the content we've provided

00:23:01,760 --> 00:23:04,960
here next

00:23:03,440 --> 00:23:06,799
we'll kind of believe this is the last

00:23:04,960 --> 00:23:09,200
question

00:23:06,799 --> 00:23:10,480
what's the advantage of using jsb sim

00:23:09,200 --> 00:23:13,760
instead of gazebo

00:23:10,480 --> 00:23:16,799
yeah so um the the

00:23:13,760 --> 00:23:18,559
sixth degree of freedom model basically

00:23:16,799 --> 00:23:21,039
with jsp simply found

00:23:18,559 --> 00:23:22,640
uh to have some advantages over the way

00:23:21,039 --> 00:23:25,360
the the physics

00:23:22,640 --> 00:23:26,559
are implemented in gazebo um so nothing

00:23:25,360 --> 00:23:29,919
precluding

00:23:26,559 --> 00:23:32,720
adding those elements to gazebo um but

00:23:29,919 --> 00:23:34,640
since jspsim kind of already has them

00:23:32,720 --> 00:23:37,600
already has that view of the world

00:23:34,640 --> 00:23:38,960
built in specifically with fixed-wing

00:23:37,600 --> 00:23:42,000
flight

00:23:38,960 --> 00:23:43,520
not only with fixed-wing flight but

00:23:42,000 --> 00:23:46,640
if you look at what jsp has

00:23:43,520 --> 00:23:50,240
traditionally been used for

00:23:46,640 --> 00:23:51,840
having a large vehicle and trying to

00:23:50,240 --> 00:23:56,000
tune fixed-wing dynamics

00:23:51,840 --> 00:23:58,559
um jsp kind of lends itself to that

00:23:56,000 --> 00:24:00,080
um because zebo could be dropped in i

00:23:58,559 --> 00:24:00,480
know especially with the integrations

00:24:00,080 --> 00:24:02,640
with

00:24:00,480 --> 00:24:04,320
ross and just the community that's

00:24:02,640 --> 00:24:05,600
around gazebo that's why we've mentioned

00:24:04,320 --> 00:24:07,919
it before

00:24:05,600 --> 00:24:09,039
would also would also be a good solution

00:24:07,919 --> 00:24:11,679
either alongside or

00:24:09,039 --> 00:24:13,279
potentially in place but we found jsp

00:24:11,679 --> 00:24:18,640
even more attractive for

00:24:13,279 --> 00:24:21,520
the digital twin component of what

00:24:18,640 --> 00:24:22,159
i think we're up on time uh we'll look

00:24:21,520 --> 00:24:25,760
to

00:24:22,159 --> 00:24:33,440
answer any of the other uh questions

00:24:25,760 --> 00:24:37,760
uh online as possible thanks thanks

00:24:33,440 --> 00:24:37,760
all right can you guys hear me okay

00:24:40,559 --> 00:24:43,919
these guys are the real deal right matt

00:24:43,279 --> 00:24:45,120
jesse

00:24:43,919 --> 00:24:47,279
uh thank you for your amazing

00:24:45,120 --> 00:24:51,200
presentation i'll talk to you soon and

00:24:47,279 --> 00:24:51,200

YouTube URL: https://www.youtube.com/watch?v=ooMe3LbM-6Y


