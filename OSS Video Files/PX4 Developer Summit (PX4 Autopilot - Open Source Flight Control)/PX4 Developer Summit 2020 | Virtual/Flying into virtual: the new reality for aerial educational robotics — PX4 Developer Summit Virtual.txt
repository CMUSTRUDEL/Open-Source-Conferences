Title: Flying into virtual: the new reality for aerial educational robotics — PX4 Developer Summit Virtual
Publication date: 2020-07-19
Playlist: PX4 Developer Summit 2020 | Virtual
Description: 
	Title: Flying into virtual: the new reality for aerial educational robotics

Summary: This session introduces the new challenges that the robotics education faces, and ways to adapt educational products to the lockdown. Authors of Clover educational drone kit will share their experience — from creating online courses and using the simulation to organizing competitions of remotely programmed drones.

The PX4 Developer Summit is the annual flagship conference hosted by Dronecode for the drone development community. https://bit.ly/2YXe4Rd
Captions: 
	00:00:00,030 --> 00:00:03,959
all right so the next session is lining

00:00:01,800 --> 00:00:06,060
two beautiful the new reality for aural

00:00:03,959 --> 00:00:09,210
education with robotics

00:00:06,060 --> 00:00:12,059
it's in it's by Andrei tarkovski Oleg

00:00:09,210 --> 00:00:14,460
collection Alexei Volkov ski and they're

00:00:12,059 --> 00:00:15,929
calling from Moscow ting copter

00:00:14,460 --> 00:00:18,180
expresses a development and

00:00:15,929 --> 00:00:20,640
manufacturing company of open-source and

00:00:18,180 --> 00:00:24,060
the company's quad copters are designed

00:00:20,640 --> 00:00:26,310
for educational purposes Tony was

00:00:24,060 --> 00:00:30,449
serving and also aerial parcel delivery

00:00:26,310 --> 00:00:33,090
so in 2019 over at 1600 caliber drones

00:00:30,449 --> 00:00:35,280
were sold worldwide the last year of the

00:00:33,090 --> 00:00:37,950
dev summit they presented picks for in

00:00:35,280 --> 00:00:40,260
STEM education how we thought thousand

00:00:37,950 --> 00:00:42,090
students to program with drones and this

00:00:40,260 --> 00:00:45,539
year they're back with an update into

00:00:42,090 --> 00:00:50,969
flying into virtual alright guys let me

00:00:45,539 --> 00:00:53,070
just switch to your screen you're here

00:00:50,969 --> 00:00:58,199
ok can you do a quick mic check before

00:00:53,070 --> 00:01:01,020
you allege ago hello hello we can all

00:00:58,199 --> 00:01:05,690
hear you hi all right go ahead guys

00:01:01,020 --> 00:01:05,690
thank you ok thank you very much

00:01:08,310 --> 00:01:15,060
my name is andrei tarkovsky I'm CTO of

00:01:12,390 --> 00:01:17,430
culture express in copter express we are

00:01:15,060 --> 00:01:20,939
focusing on the drone education and

00:01:17,430 --> 00:01:23,790
today we will tell you how adapted our

00:01:20,939 --> 00:01:26,189
educational products and activities to

00:01:23,790 --> 00:01:27,920
the new reality of Education during the

00:01:26,189 --> 00:01:30,840
lockdown

00:01:27,920 --> 00:01:32,970
during the session I and my colleagues

00:01:30,840 --> 00:01:35,100
will briefly describe our platform and

00:01:32,970 --> 00:01:36,600
educational activities discuss new

00:01:35,100 --> 00:01:39,720
challenges that educational robotics

00:01:36,600 --> 00:01:41,880
face now and then my colleagues will

00:01:39,720 --> 00:01:44,640
discuss in detail the simulation

00:01:41,880 --> 00:01:47,399
environment that we use based on gazebo

00:01:44,640 --> 00:01:52,229
and how we deliver it to our students

00:01:47,399 --> 00:01:56,399
our main product is an educational drone

00:01:52,229 --> 00:01:59,219
kit called clever it's a kit with speed

00:01:56,399 --> 00:02:01,909
for auto pilot and Raspberry Pi which we

00:01:59,219 --> 00:02:04,320
ship disassembled as a set of parts and

00:02:01,909 --> 00:02:06,350
used to teach students in school

00:02:04,320 --> 00:02:07,490
colleges and universities how to

00:02:06,350 --> 00:02:10,099
assemble

00:02:07,490 --> 00:02:12,170
the drone how to fly it and how to

00:02:10,099 --> 00:02:16,010
program it to perform different

00:02:12,170 --> 00:02:18,580
autonomous tasks without remote control

00:02:16,010 --> 00:02:21,170
like liking some objects dropping it

00:02:18,580 --> 00:02:25,300
replacing moving to other location and

00:02:21,170 --> 00:02:28,160
session we presented our platform in

00:02:25,300 --> 00:02:31,160
detail during the people speaks for

00:02:28,160 --> 00:02:33,110
assignment you can check out the video

00:02:31,160 --> 00:02:38,750
from the assignment if you're interested

00:02:33,110 --> 00:02:41,090
in details the idea of our platform is

00:02:38,750 --> 00:02:43,459
to lower the barrier of entry into the

00:02:41,090 --> 00:02:46,220
field of line robotics to make it really

00:02:43,459 --> 00:02:48,410
open both open source and not too

00:02:46,220 --> 00:02:51,560
complicated to understand for students

00:02:48,410 --> 00:02:55,630
without heavy robotics background you

00:02:51,560 --> 00:02:59,930
can just take our kit assemble it

00:02:55,630 --> 00:03:03,500
insert micro SD card with our image and

00:02:59,930 --> 00:03:05,599
take off with just one line of code even

00:03:03,500 --> 00:03:08,030
if you don't know what a sage is you

00:03:05,599 --> 00:03:12,799
still can use clevers web interactive

00:03:08,030 --> 00:03:15,709
shell that's how paws on clutter is all

00:03:12,799 --> 00:03:19,400
that you can see here on the video is

00:03:15,709 --> 00:03:22,130
performed on our software platform it is

00:03:19,400 --> 00:03:25,370
open source and you don't need to buy it

00:03:22,130 --> 00:03:28,549
to use you can assemble virtually any

00:03:25,370 --> 00:03:32,380
drone with px4 autopilot and Raspberry

00:03:28,549 --> 00:03:34,700
Pi campaign in computer and flesh a

00:03:32,380 --> 00:03:37,250
microSD card of Raspberry Pi with our

00:03:34,700 --> 00:03:39,799
image and you are good to go you can fly

00:03:37,250 --> 00:03:42,230
autonomously with just one line of code

00:03:39,799 --> 00:03:42,890
if you want to use different companion

00:03:42,230 --> 00:03:48,319
computer

00:03:42,890 --> 00:03:51,560
you always can just get our rows nodes

00:03:48,319 --> 00:03:58,730
which are open source and use it on your

00:03:51,560 --> 00:04:01,310
setup this is really popular product in

00:03:58,730 --> 00:04:04,970
Russia and now we're expanding worldwide

00:04:01,310 --> 00:04:09,340
so the clever platform is used all over

00:04:04,970 --> 00:04:12,829
the world and I think it's by far the

00:04:09,340 --> 00:04:16,220
largest px for educational product

00:04:12,829 --> 00:04:19,650
because it's being used by more than 10

00:04:16,220 --> 00:04:33,630
thousand students to teach how to make

00:04:19,650 --> 00:04:37,229
Durham's so all of videos which I shown

00:04:33,630 --> 00:04:39,780
were pre lockdown videos and of course

00:04:37,229 --> 00:04:42,000
lock downs affected education travel all

00:04:39,780 --> 00:04:44,160
over the world just few months ago

00:04:42,000 --> 00:04:46,530
online education was all the white

00:04:44,160 --> 00:04:49,259
common still something unusual and now

00:04:46,530 --> 00:04:53,250
it's a new standard in a flesh

00:04:49,259 --> 00:04:55,350
everything went virtual our job is to

00:04:53,250 --> 00:04:58,039
gather the most of the positive impact

00:04:55,350 --> 00:05:02,130
of the events which is happening

00:04:58,039 --> 00:05:05,010
robotics education always work on in

00:05:02,130 --> 00:05:07,139
person because of course robotics is

00:05:05,010 --> 00:05:11,729
about robots and you need to physically

00:05:07,139 --> 00:05:13,650
interact with your robot so this is

00:05:11,729 --> 00:05:16,169
really a challenge for robotics

00:05:13,650 --> 00:05:21,090
education and we will today talk about

00:05:16,169 --> 00:05:24,570
how we address this challenge stage zero

00:05:21,090 --> 00:05:29,099
of our response is online video lectures

00:05:24,570 --> 00:05:32,940
was pre-recorded and live lectures but

00:05:29,099 --> 00:05:35,610
that's what many have used before anyway

00:05:32,940 --> 00:05:37,949
so it's not really new and you can't

00:05:35,610 --> 00:05:40,979
address main challenge necessity of

00:05:37,949 --> 00:05:43,830
interaction with robot theory is good

00:05:40,979 --> 00:05:49,590
but robotics education needs lot of

00:05:43,830 --> 00:05:52,889
practice we use simulation before but it

00:05:49,590 --> 00:05:54,900
was never our priority because there are

00:05:52,889 --> 00:05:57,210
so many things which could be improved

00:05:54,900 --> 00:06:00,960
in cloud report platform to make it

00:05:57,210 --> 00:06:03,570
better but when lockdowns begin we made

00:06:00,960 --> 00:06:07,650
it our priority and started to develop

00:06:03,570 --> 00:06:10,199
our simulation environment very very

00:06:07,650 --> 00:06:12,150
effectively and now my colleague our

00:06:10,199 --> 00:06:16,320
lead developer electrology

00:06:12,150 --> 00:06:20,449
will talk about our simulation elect

00:06:16,320 --> 00:06:20,449
please thank you

00:06:23,950 --> 00:06:34,220
okay you you see the presentation do you

00:06:30,590 --> 00:06:37,820
see the presentation okay yes so here I

00:06:34,220 --> 00:06:40,460
was Ebola simulation we created a pretty

00:06:37,820 --> 00:06:43,160
detailed model of our drone and you can

00:06:40,460 --> 00:06:44,930
see it on the picture and we put a MAV

00:06:43,160 --> 00:06:47,330
link plugin and flight controller

00:06:44,930 --> 00:06:50,630
sensors plug in to it so it can interact

00:06:47,330 --> 00:06:52,580
with VX for instance of course we're not

00:06:50,630 --> 00:06:54,320
taking any credit of creating the

00:06:52,580 --> 00:06:57,260
interface between px4 and a zebra

00:06:54,320 --> 00:06:59,600
we just used which is based on the

00:06:57,260 --> 00:07:02,750
existing standard px4 gazebo simulator

00:06:59,600 --> 00:07:06,190
but we only modified it a little bit and

00:07:02,750 --> 00:07:09,200
added some feature features we need so

00:07:06,190 --> 00:07:12,050
although this work is pretty much under

00:07:09,200 --> 00:07:14,390
construction now but it's already used

00:07:12,050 --> 00:07:19,310
in our educational process and I will

00:07:14,390 --> 00:07:22,670
show you what it can do so our goal is

00:07:19,310 --> 00:07:25,430
to completely recreate the clover api

00:07:22,670 --> 00:07:27,530
the ross clover api accessible to the

00:07:25,430 --> 00:07:32,570
user through ross services and ross

00:07:27,530 --> 00:07:35,150
topics it includes px4 itself into

00:07:32,570 --> 00:07:39,830
through Mavros our autonomous flights

00:07:35,150 --> 00:07:42,770
api which we presented last year all

00:07:39,830 --> 00:07:46,460
installed sensors api camera and

00:07:42,770 --> 00:07:46,820
rangefinder our LED strip api and the

00:07:46,460 --> 00:07:50,000
rest

00:07:46,820 --> 00:07:53,150
for example web video server for

00:07:50,000 --> 00:07:57,170
monitoring rose images topics with the

00:07:53,150 --> 00:07:59,990
browser so i will not be risking too

00:07:57,170 --> 00:08:04,490
much and be showing you the simulation

00:07:59,990 --> 00:08:06,710
life so I show you some pre-recorded

00:08:04,490 --> 00:08:08,600
screencasts so here you see the

00:08:06,710 --> 00:08:12,980
simulator running in a virtual machine

00:08:08,600 --> 00:08:15,890
on a Mac and I use Python to make the

00:08:12,980 --> 00:08:19,220
drone fly autonomously using pre the

00:08:15,890 --> 00:08:21,320
same commands as on a real drone so

00:08:19,220 --> 00:08:23,090
before I entered the standard clover

00:08:21,320 --> 00:08:26,540
program header from the documentation

00:08:23,090 --> 00:08:29,120
and now I use Ross navigate service for

00:08:26,540 --> 00:08:32,840
taking off and the virtual drone takes

00:08:29,120 --> 00:08:34,240
off and here we see the simulated camera

00:08:32,840 --> 00:08:38,449
topic

00:08:34,240 --> 00:08:42,050
and the drone now hover stable using our

00:08:38,449 --> 00:08:44,420
own Rose based optical flow as on a real

00:08:42,050 --> 00:08:47,449
drone so there is no GPS or any other

00:08:44,420 --> 00:08:51,769
position system now I asked the drone to

00:08:47,449 --> 00:08:55,880
fly forward two meters using body

00:08:51,769 --> 00:09:02,750
related TF frame and of course I can ask

00:08:55,880 --> 00:09:05,630
it to fly two meters backwards and I for

00:09:02,750 --> 00:09:12,290
example use the very simple LAN service

00:09:05,630 --> 00:09:14,630
that just make its land also another

00:09:12,290 --> 00:09:15,410
sensor available on a clever drone is a

00:09:14,630 --> 00:09:20,060
rangefinder

00:09:15,410 --> 00:09:23,420
we used a popular STM rangefinder and we

00:09:20,060 --> 00:09:26,779
configured a gazebo plugin to simulate

00:09:23,420 --> 00:09:30,500
it completely including their engine

00:09:26,779 --> 00:09:33,410
noise and here is another demo I fly

00:09:30,500 --> 00:09:36,110
upwards and downwards on a simulated

00:09:33,410 --> 00:09:38,120
clover drone and I monitor the range

00:09:36,110 --> 00:09:41,180
value from a rose topic using the

00:09:38,120 --> 00:09:42,920
standard Ross plotter all of the data

00:09:41,180 --> 00:09:46,430
from the rangefinder of course should be

00:09:42,920 --> 00:09:51,050
also used from the user program the same

00:09:46,430 --> 00:09:53,660
way as as in the real life another

00:09:51,050 --> 00:09:57,889
important feature of the clever platform

00:09:53,660 --> 00:10:00,139
is Arouca markers recognition of course

00:09:57,889 --> 00:10:02,920
we do it in the simulator as well

00:10:00,139 --> 00:10:07,940
so here is the demo the drone sees

00:10:02,920 --> 00:10:11,569
analog marker and then I ask it to fly

00:10:07,940 --> 00:10:14,839
one meter above it using Arouca

00:10:11,569 --> 00:10:17,569
underline 100 TF frame and the drone

00:10:14,839 --> 00:10:21,680
hovers and then I ask you to lend to the

00:10:17,569 --> 00:10:24,829
marker and the John do it often we use

00:10:21,680 --> 00:10:29,569
maps of markers to position the drone

00:10:24,829 --> 00:10:32,329
precisely and without any drift we pass

00:10:29,569 --> 00:10:34,610
this information about the drone

00:10:32,329 --> 00:10:36,800
position in the map using vision

00:10:34,610 --> 00:10:39,589
position estimate message and how it

00:10:36,800 --> 00:10:42,589
works and that's what it looks in the

00:10:39,589 --> 00:10:45,709
simulator you can watch the marker map

00:10:42,589 --> 00:10:47,450
recognition debug topic and here ask the

00:10:45,709 --> 00:10:49,340
drone to fly to

00:10:47,450 --> 00:10:52,420
some different positions in the marker

00:10:49,340 --> 00:10:55,880
Maps for example three three here and

00:10:52,420 --> 00:11:00,650
then I asked the drone to fly to the

00:10:55,880 --> 00:11:05,150
point one three and everything is can be

00:11:00,650 --> 00:11:11,630
debugged in in Arouca map topic and then

00:11:05,150 --> 00:11:16,340
as always i landed the drone we also

00:11:11,630 --> 00:11:19,130
install l an LED strip to all our clever

00:11:16,340 --> 00:11:23,870
drones to make their flights much more

00:11:19,130 --> 00:11:26,120
spectacular and we created a gazebo

00:11:23,870 --> 00:11:30,800
plugin that completely simulates the

00:11:26,120 --> 00:11:33,650
ross api of our LED strip this allows

00:11:30,800 --> 00:11:36,460
the user to set different effects to the

00:11:33,650 --> 00:11:44,120
LED strip like this rainbow for example

00:11:36,460 --> 00:11:49,730
or mm I set another effects wipe to the

00:11:44,120 --> 00:11:54,290
red color and you see the red color then

00:11:49,730 --> 00:11:59,960
I set for example a blinking effect and

00:11:54,290 --> 00:12:03,950
it also works so all of this works

00:11:59,960 --> 00:12:06,830
during a flight of a drone and of course

00:12:03,950 --> 00:12:09,530
setting individual LED is also possible

00:12:06,830 --> 00:12:13,430
with this API so this API is actually

00:12:09,530 --> 00:12:15,710
pretty powerful by the way if you

00:12:13,430 --> 00:12:18,140
interested this API is documented and

00:12:15,710 --> 00:12:20,330
open sourced and you can use it with any

00:12:18,140 --> 00:12:25,870
compatible LED strip even without our

00:12:20,330 --> 00:12:30,110
kit or without our full software package

00:12:25,870 --> 00:12:33,380
also we can add different models to the

00:12:30,110 --> 00:12:36,410
world like this for example lines or

00:12:33,380 --> 00:12:39,080
color circle or something like this to

00:12:36,410 --> 00:12:43,070
make some interesting and fun computer

00:12:39,080 --> 00:12:46,700
vision tasks and here's another little

00:12:43,070 --> 00:12:49,220
example of programming a simulator so

00:12:46,700 --> 00:12:52,400
now the simulated drone and the real

00:12:49,220 --> 00:12:58,070
drone does sleep and you can somehow

00:12:52,400 --> 00:13:00,140
compare how it happens so we develop

00:12:58,070 --> 00:13:01,440
everything that I showed you in the main

00:13:00,140 --> 00:13:03,840
clever repository

00:13:01,440 --> 00:13:07,070
but since it's under development the

00:13:03,840 --> 00:13:09,450
work goes in a clever description branch

00:13:07,070 --> 00:13:12,870
so you can check it out if you want and

00:13:09,450 --> 00:13:17,100
now alexsei will tell you about how we

00:13:12,870 --> 00:13:19,530
deliver this to our users so Alex II yes

00:13:17,100 --> 00:13:21,150
thank you a leg so my part of the talk

00:13:19,530 --> 00:13:23,970
is about delivering the simulation

00:13:21,150 --> 00:13:26,040
environment to our users I will tell you

00:13:23,970 --> 00:13:28,980
about the challenges we've faced and the

00:13:26,040 --> 00:13:31,620
solutions we've explored so first of all

00:13:28,980 --> 00:13:33,300
let's talk about users a typical

00:13:31,620 --> 00:13:35,550
robotics engineer familiar with Ross

00:13:33,300 --> 00:13:38,730
will probably have a Linux based system

00:13:35,550 --> 00:13:40,770
running natively on their hardware or at

00:13:38,730 --> 00:13:42,480
will at the very least have a virtual

00:13:40,770 --> 00:13:44,970
machine with their favorite distribution

00:13:42,480 --> 00:13:47,570
installed and configured they know Ross

00:13:44,970 --> 00:13:49,920
simulations may be quite demanding and

00:13:47,570 --> 00:13:52,920
Vance will probably have a reasonably

00:13:49,920 --> 00:13:55,170
powerful workstation they may even know

00:13:52,920 --> 00:13:58,200
their way around docker rocker or other

00:13:55,170 --> 00:14:00,390
container software and they probably are

00:13:58,200 --> 00:14:02,160
very familiar with gazebo know how to

00:14:00,390 --> 00:14:04,200
debug their configuration problems and

00:14:02,160 --> 00:14:06,750
how to build their own worlds by

00:14:04,200 --> 00:14:08,490
contrast our users are typically those

00:14:06,750 --> 00:14:11,220
who are only starting their wonderful

00:14:08,490 --> 00:14:13,050
journey into the world of robotics this

00:14:11,220 --> 00:14:15,570
will have Windows as their primary

00:14:13,050 --> 00:14:17,400
operating system with mission critical

00:14:15,570 --> 00:14:18,690
software that makes installing other

00:14:17,400 --> 00:14:21,450
systems not an option

00:14:18,690 --> 00:14:23,490
they may be using hardware their schools

00:14:21,450 --> 00:14:26,040
or colleges which is not always as

00:14:23,490 --> 00:14:27,780
high-end as they'd like they don't have

00:14:26,040 --> 00:14:29,940
any experience running docker or

00:14:27,780 --> 00:14:32,100
virtualization software and don't really

00:14:29,940 --> 00:14:34,320
know their way around clinics in fact

00:14:32,100 --> 00:14:37,650
clover might be their first linux

00:14:34,320 --> 00:14:39,780
platform our goal is to make their first

00:14:37,650 --> 00:14:40,880
steps into robotics as painless as

00:14:39,780 --> 00:14:43,950
possible

00:14:40,880 --> 00:14:46,140
so how do we make the simulation

00:14:43,950 --> 00:14:48,870
environment accessible then we have

00:14:46,140 --> 00:14:52,320
several options each with its own pros

00:14:48,870 --> 00:14:54,840
and cons first of all we may ask users

00:14:52,320 --> 00:14:57,150
to install Linux from their hardware

00:14:54,840 --> 00:14:59,280
this has the obvious benefit of using

00:14:57,150 --> 00:15:01,830
native hardware now stirring the data

00:14:59,280 --> 00:15:03,990
and software locally but this is

00:15:01,830 --> 00:15:07,230
time-consuming and error-prone if done

00:15:03,990 --> 00:15:10,050
manually there's also the issue of Linux

00:15:07,230 --> 00:15:12,030
hardware support which is not ideal each

00:15:10,050 --> 00:15:13,920
installation would possibly differ would

00:15:12,030 --> 00:15:14,670
have its own quirks and dealing with

00:15:13,920 --> 00:15:17,340
those quirks

00:15:14,670 --> 00:15:20,300
may require a substantial amount of

00:15:17,340 --> 00:15:22,770
linux knowledge then there's docker

00:15:20,300 --> 00:15:24,710
which has been a go-to solution for

00:15:22,770 --> 00:15:26,970
application deployment for years now

00:15:24,710 --> 00:15:29,040
docker installation is simple and

00:15:26,970 --> 00:15:31,560
running a container is a single line in

00:15:29,040 --> 00:15:32,760
your favorite show interpreter but all

00:15:31,560 --> 00:15:35,160
of that comes with a cost

00:15:32,760 --> 00:15:37,140
since we want GPU acceleration for

00:15:35,160 --> 00:15:40,260
computer vision we need to use a native

00:15:37,140 --> 00:15:42,090
Linux installation what's even worse is

00:15:40,260 --> 00:15:44,550
that running a container with GPU

00:15:42,090 --> 00:15:46,680
support is vendor dependent that is

00:15:44,550 --> 00:15:49,380
somewhat sold by wrappers like rocker

00:15:46,680 --> 00:15:51,420
but the experience of running desktop

00:15:49,380 --> 00:15:54,720
software from a container has so far

00:15:51,420 --> 00:15:56,760
proven to be less than ideal there's

00:15:54,720 --> 00:15:59,310
also the issue of container isolation

00:15:56,760 --> 00:16:01,350
which while generally considered a good

00:15:59,310 --> 00:16:04,220
thing may make some tasks like editing

00:16:01,350 --> 00:16:06,600
files changing challenging to newcomers

00:16:04,220 --> 00:16:08,280
there are also cloud-based solutions

00:16:06,600 --> 00:16:10,320
like ROS development studio from the

00:16:08,280 --> 00:16:12,570
construct this is probably the most

00:16:10,320 --> 00:16:15,060
user-friendly option requiring nothing

00:16:12,570 --> 00:16:17,190
more than a modern browser there are

00:16:15,060 --> 00:16:19,410
several issues with that though first of

00:16:17,190 --> 00:16:20,940
all there are no really available open

00:16:19,410 --> 00:16:23,250
source solutions we'd have to put

00:16:20,940 --> 00:16:26,030
additional engineering resources into

00:16:23,250 --> 00:16:28,740
developing - maintaining our own system

00:16:26,030 --> 00:16:30,920
then there are additional costs for our

00:16:28,740 --> 00:16:34,230
customers and possibly for us as well

00:16:30,920 --> 00:16:35,910
Hosting would also be a problem since

00:16:34,230 --> 00:16:38,220
there are not as many to be equipped

00:16:35,910 --> 00:16:39,990
data centers around the world and using

00:16:38,220 --> 00:16:42,570
a high latency server is an unpleasant

00:16:39,990 --> 00:16:44,490
user experience finally there's less

00:16:42,570 --> 00:16:47,070
control or what actually happens only

00:16:44,490 --> 00:16:48,840
Hardware much more magic which in our

00:16:47,070 --> 00:16:52,140
opinion is not a nice thing for an

00:16:48,840 --> 00:16:54,180
educational product finally there are

00:16:52,140 --> 00:16:56,430
virtual machines there are easy to

00:16:54,180 --> 00:16:59,550
deploy they may usually be sent as a

00:16:56,430 --> 00:17:02,010
single archive all changes are made to

00:16:59,550 --> 00:17:04,470
the VM our local user may inspect the

00:17:02,010 --> 00:17:07,320
machine interact with it as if it was

00:17:04,470 --> 00:17:10,470
everyone but with lower risks of data

00:17:07,320 --> 00:17:12,720
loss we can pre configure our machines

00:17:10,470 --> 00:17:14,459
to have optimized defaults and best of

00:17:12,720 --> 00:17:16,890
all there's no need to change your main

00:17:14,459 --> 00:17:19,020
operating system there are still

00:17:16,890 --> 00:17:20,820
drawbacks though a virtual machine

00:17:19,020 --> 00:17:23,400
requires additional software such as a

00:17:20,820 --> 00:17:25,800
hypervisor and will not perform as well

00:17:23,400 --> 00:17:27,570
as the native solution GPU

00:17:25,800 --> 00:17:28,809
virtualization is not perfect as well

00:17:27,570 --> 00:17:32,080
which is a pain point

00:17:28,809 --> 00:17:35,259
for us so our solution for now

00:17:32,080 --> 00:17:37,299
is actually to use a virtual machine we

00:17:35,259 --> 00:17:39,070
need a hypervisor that supports multiple

00:17:37,299 --> 00:17:42,009
host platforms that provide Ubu

00:17:39,070 --> 00:17:43,990
acceleration it would also it should

00:17:42,009 --> 00:17:46,570
also be free at least for personal use

00:17:43,990 --> 00:17:49,710
the two options that we've found so far

00:17:46,570 --> 00:17:53,470
is Oracle VirtualBox and VMware Player

00:17:49,710 --> 00:17:55,539
so first we have tried virtual box but

00:17:53,470 --> 00:17:56,919
it's issues such as rendering cares and

00:17:55,539 --> 00:18:00,749
overall and satisfactory performance

00:17:56,919 --> 00:18:03,429
have prevented us from using it and so

00:18:00,749 --> 00:18:05,470
we come to the VMware Player mean we're

00:18:03,429 --> 00:18:08,830
player is another free for personal use

00:18:05,470 --> 00:18:11,619
hypervisor sadly it does not support Mac

00:18:08,830 --> 00:18:13,470
OS which makes the users buy licenses

00:18:11,619 --> 00:18:16,330
for game we're fusion or workstation

00:18:13,470 --> 00:18:19,299
other issues are not present though the

00:18:16,330 --> 00:18:22,629
driver for personalized GPU is built

00:18:19,299 --> 00:18:25,090
into Mesa gas tools are packaged in for

00:18:22,629 --> 00:18:27,369
a bantam there are still some issues

00:18:25,090 --> 00:18:30,549
with gazebo that force us to limit

00:18:27,369 --> 00:18:34,360
virtualized GPU to opengl 2.1 but we

00:18:30,549 --> 00:18:37,480
hope that this will change soon as such

00:18:34,360 --> 00:18:41,740
mean we're player is our hypervisor of

00:18:37,480 --> 00:18:43,869
choice for now we strongly believe bills

00:18:41,740 --> 00:18:45,999
should not be done manually so we're

00:18:43,869 --> 00:18:48,279
using hash a corpse packer to optimize

00:18:45,999 --> 00:18:50,529
our virtual machine bills we use

00:18:48,279 --> 00:18:54,730
VirtualBox to build the VM and express

00:18:50,529 --> 00:18:56,440
it as an OVA aircraft this archive can

00:18:54,730 --> 00:18:58,360
be imported into being where and with

00:18:56,440 --> 00:19:00,090
some OVF tweaking we can make the VM

00:18:58,360 --> 00:19:02,259
with reasonable different parameters

00:19:00,090 --> 00:19:04,869
current build scripts are available in

00:19:02,259 --> 00:19:07,330
our repository and the resulting image

00:19:04,869 --> 00:19:09,519
is available for download as for the

00:19:07,330 --> 00:19:11,259
contents well Alex demos were performed

00:19:09,519 --> 00:19:13,779
in the simulation environment with

00:19:11,259 --> 00:19:15,700
minimal customization and the very same

00:19:13,779 --> 00:19:21,970
image is being used as we speak for our

00:19:15,700 --> 00:19:24,389
courses so that's it from me Andre take

00:19:21,970 --> 00:19:24,389
it from here

00:19:31,790 --> 00:19:46,220
I don't hear you Andre hello yeah yeah

00:19:41,950 --> 00:19:49,430
great so we rely really heavily on the

00:19:46,220 --> 00:19:52,490
simulation now and it is stage one of

00:19:49,430 --> 00:19:56,090
our solution to the education during the

00:19:52,490 --> 00:19:59,090
lockdown we use simulation during the

00:19:56,090 --> 00:20:01,880
courses both for students and for

00:19:59,090 --> 00:20:06,260
teachers for example on this slide you

00:20:01,880 --> 00:20:10,040
can see the execution of the task when

00:20:06,260 --> 00:20:13,520
the student should have take from one

00:20:10,040 --> 00:20:19,010
cube and land on another recognizing it

00:20:13,520 --> 00:20:21,860
using computer vision yeah so we use

00:20:19,010 --> 00:20:25,160
simulation really really heavily now and

00:20:21,860 --> 00:20:28,400
it's really helps but it's not

00:20:25,160 --> 00:20:31,070
everything because the world is much

00:20:28,400 --> 00:20:33,470
more complex and despite all our efforts

00:20:31,070 --> 00:20:36,710
simulated worlds differs widely from

00:20:33,470 --> 00:20:39,430
ours so when our students can run their

00:20:36,710 --> 00:20:41,900
program in the simulated environment

00:20:39,430 --> 00:20:46,010
successfully which you need to somehow

00:20:41,900 --> 00:20:49,690
test them using aerial drones but all of

00:20:46,010 --> 00:20:54,400
our educational institutions are closed

00:20:49,690 --> 00:21:00,920
so we need to use remote-controlled

00:20:54,400 --> 00:21:04,370
drones so we use the controlled

00:21:00,920 --> 00:21:07,400
environment either in our office or in

00:21:04,370 --> 00:21:11,620
some other educational institution in

00:21:07,400 --> 00:21:12,880
which our employees or another theaters

00:21:11,620 --> 00:21:17,060
[Music]

00:21:12,880 --> 00:21:21,860
facilitate the running of the test probe

00:21:17,060 --> 00:21:25,520
programs on the drones so the drone can

00:21:21,860 --> 00:21:28,790
fly in some environment in our office

00:21:25,520 --> 00:21:34,250
while the person who wrote the program

00:21:28,790 --> 00:21:38,060
is in many kilometres away we use it for

00:21:34,250 --> 00:21:41,420
courses and we are now preparing course

00:21:38,060 --> 00:21:44,610
in English with simulation and with

00:21:41,420 --> 00:21:47,790
usage of real-world drone

00:21:44,610 --> 00:21:51,750
which are remote control you can check

00:21:47,790 --> 00:21:53,730
it out on our square website and we you

00:21:51,750 --> 00:21:57,420
are also welcome to check out our

00:21:53,730 --> 00:22:02,520
preliminary Kickstarter campaign the

00:21:57,420 --> 00:22:07,800
link is below so on this video you can

00:22:02,520 --> 00:22:11,100
see how the person competing in the

00:22:07,800 --> 00:22:16,440
drone competition which was just two

00:22:11,100 --> 00:22:19,320
months ago controls the drone remote and

00:22:16,440 --> 00:22:22,880
the drone can perform some tasks in real

00:22:19,320 --> 00:22:28,230
world using the program which was

00:22:22,880 --> 00:22:32,700
created by many kilometers away yeah and

00:22:28,230 --> 00:22:37,290
here on another video you can see

00:22:32,700 --> 00:22:40,680
another competition when guys to program

00:22:37,290 --> 00:22:43,140
the drone to fly autonomously using the

00:22:40,680 --> 00:22:54,090
clever platform you can see the debug

00:22:43,140 --> 00:22:57,060
screens here yeah so they used OpenCV to

00:22:54,090 --> 00:22:59,430
program the drone flight autonomous

00:22:57,060 --> 00:23:11,280
flight using the cloud platform and then

00:22:59,430 --> 00:23:13,320
run them remotely so our solution to the

00:23:11,280 --> 00:23:17,670
Education Agency lockdowns

00:23:13,320 --> 00:23:22,140
our online lectures simulation and

00:23:17,670 --> 00:23:26,010
remote controlled drones so yes

00:23:22,140 --> 00:23:30,420
lockdowns our best thing overall and the

00:23:26,010 --> 00:23:33,360
pandemic is of course bad but we need to

00:23:30,420 --> 00:23:36,890
get the most of the good part of it

00:23:33,360 --> 00:23:39,800
because it really catalyzes the

00:23:36,890 --> 00:23:44,040
transformation the going to virtual and

00:23:39,800 --> 00:23:46,680
so we can use it to push a virtual

00:23:44,040 --> 00:23:47,980
education to push using of simulation

00:23:46,680 --> 00:23:50,290
and other

00:23:47,980 --> 00:23:52,240
different modern techniques to

00:23:50,290 --> 00:23:55,120
educational institutions which are

00:23:52,240 --> 00:23:59,620
usually quite conservative and want to

00:23:55,120 --> 00:24:05,950
have real lessons on site and are quite

00:23:59,620 --> 00:24:10,000
closed for new modern things so use this

00:24:05,950 --> 00:24:13,059
moment to get it use our open-source

00:24:10,000 --> 00:24:15,910
platform we are very glad when everyone

00:24:13,059 --> 00:24:23,140
use it and good luck with your

00:24:15,910 --> 00:24:33,000
educational projects we are open for any

00:24:23,140 --> 00:24:33,000
questions yeah one second

00:24:37,820 --> 00:24:48,120
okay so Ramon will you read them or okay

00:24:44,820 --> 00:24:51,450
can we replace and we will place remote

00:24:48,120 --> 00:24:57,659
control with mobile operating operating

00:24:51,450 --> 00:25:00,630
using an UDP port for indoor use can we

00:24:57,659 --> 00:25:03,240
I mean

00:25:00,630 --> 00:25:08,580
aha so you mean to operate the drone

00:25:03,240 --> 00:25:13,760
from a way using UDP I mean not locally

00:25:08,580 --> 00:25:17,940
but remotely I think it's possible but

00:25:13,760 --> 00:25:23,270
the pink would be very big

00:25:17,940 --> 00:25:23,270
maybe 5g will help with this

00:25:23,480 --> 00:25:31,440
so anyone do you want to tell something

00:25:27,450 --> 00:25:34,409
about it yeah the next question is can

00:25:31,440 --> 00:25:36,990
we use open CV or other object detection

00:25:34,409 --> 00:25:40,289
levels and yes of course you can and

00:25:36,990 --> 00:25:43,049
it's part of our curriculum so we even

00:25:40,289 --> 00:25:46,380
teach how to use open CV with our

00:25:43,049 --> 00:25:50,130
libraries and our roast nodes but you

00:25:46,380 --> 00:25:53,340
can use whatever you want if it works

00:25:50,130 --> 00:25:56,220
smoothly with Ross it's great because

00:25:53,340 --> 00:25:57,899
our simple port node is Ross mode and

00:25:56,220 --> 00:26:00,419
you can communicate very smoothly but

00:25:57,899 --> 00:26:03,860
you can use virtually anything that will

00:26:00,419 --> 00:26:07,409
run on your companion computer with our

00:26:03,860 --> 00:26:10,260
Ross packages to perform some autonomous

00:26:07,409 --> 00:26:13,049
tasks using object detection libraries

00:26:10,260 --> 00:26:16,020
yes we create the platform and exactly

00:26:13,049 --> 00:26:17,880
for use cases like this and the third

00:26:16,020 --> 00:26:20,549
question is for Alexei I think Alexei

00:26:17,880 --> 00:26:23,940
well any plans to support foster in the

00:26:20,549 --> 00:26:29,279
future well I guess it depends on your

00:26:23,940 --> 00:26:32,340
definition of future for now we are on

00:26:29,279 --> 00:26:37,320
Ross no logic and are transitioning to

00:26:32,340 --> 00:26:41,340
Ross noetic the last Ross one Early's

00:26:37,320 --> 00:26:43,649
well eventually we of course we will

00:26:41,340 --> 00:26:45,600
have to transition to the Russ - and we

00:26:43,649 --> 00:26:47,710
will probably can brace this trend in

00:26:45,600 --> 00:26:51,700
transition as well

00:26:47,710 --> 00:26:55,390
as well I'm personally really excited

00:26:51,700 --> 00:27:01,540
about that and about the px4 entrust to

00:26:55,390 --> 00:27:06,370
integration but that's I guess about and

00:27:01,540 --> 00:27:08,980
not in any concrete plans right now okay

00:27:06,370 --> 00:27:11,200
can read the forest question is there a

00:27:08,980 --> 00:27:12,610
gap between simulation and reality what

00:27:11,200 --> 00:27:15,940
challenges did you face running

00:27:12,610 --> 00:27:19,420
simulated code I mean I think it's if

00:27:15,940 --> 00:27:21,820
there is some simple tasks like flying

00:27:19,420 --> 00:27:25,270
from point to and out from one point to

00:27:21,820 --> 00:27:28,630
another there's almost no difference

00:27:25,270 --> 00:27:31,960
because the simulation works pretty good

00:27:28,630 --> 00:27:35,170
in this test for example if you're

00:27:31,960 --> 00:27:39,190
working on very complicated computer

00:27:35,170 --> 00:27:43,920
vision problems than the render at 3d

00:27:39,190 --> 00:27:49,140
world can differ from the real world but

00:27:43,920 --> 00:27:54,610
this is still use still useful I think

00:27:49,140 --> 00:27:59,860
yeah I think I'll probably talk about it

00:27:54,610 --> 00:28:04,360
a bit more well sometimes you tend to

00:27:59,860 --> 00:28:09,330
Bob consume some some of the simulation

00:28:04,360 --> 00:28:11,740
quirks like gazebo and not actually a

00:28:09,330 --> 00:28:14,800
practical gazebo sensor it's not

00:28:11,740 --> 00:28:19,390
providing you your sensors for the

00:28:14,800 --> 00:28:22,930
constant update ways but rather and

00:28:19,390 --> 00:28:26,890
giving you an option to provide a higher

00:28:22,930 --> 00:28:30,580
highest bound for your simulated sensor

00:28:26,890 --> 00:28:34,960
so in case of cameras now if you appear

00:28:30,580 --> 00:28:36,970
for some reason don't have a GPU

00:28:34,960 --> 00:28:41,200
accelerated GPU acceleration on your

00:28:36,970 --> 00:28:46,330
system and you want to place a camera

00:28:41,200 --> 00:28:50,320
that's you can be able to provide like

00:28:46,330 --> 00:28:54,800
oh well to publish an image 30 times per

00:28:50,320 --> 00:28:57,800
second that can be taking shoes when

00:28:54,800 --> 00:29:00,679
the most that your hardware can do is

00:28:57,800 --> 00:29:03,590
actually five times per second and for

00:29:00,679 --> 00:29:07,780
some reason receiver will not always

00:29:03,590 --> 00:29:10,820
slow the simulation down so there's that

00:29:07,780 --> 00:29:12,950
awesome thank you guys thanks a lot for

00:29:10,820 --> 00:29:15,429
you I think maybe maybe we should ask

00:29:12,950 --> 00:29:18,350
Atlanta for something to tell about her

00:29:15,429 --> 00:29:20,210
experience because I think she should

00:29:18,350 --> 00:30:20,890
say something so what's your experience

00:29:20,210 --> 00:30:29,770
about remote competitions it was the

00:30:20,890 --> 00:30:36,350
opportunities in our Sunday and also I

00:30:29,770 --> 00:30:46,100
still question about using LTE and if we

00:30:36,350 --> 00:30:47,780
use okay okay I left good answer this

00:30:46,100 --> 00:30:48,590
question but I really think our time is

00:30:47,780 --> 00:30:51,620
up yeah

00:30:48,590 --> 00:30:53,900
yeah hey guys sorry to cut you out

00:30:51,620 --> 00:30:56,960
but your time is up or next speakers are

00:30:53,900 --> 00:31:04,790
waiting thank you thank you thank you

00:30:56,960 --> 00:31:06,460
hope to express you very pleased all

00:31:04,790 --> 00:31:10,670
right

00:31:06,460 --> 00:31:11,150
hey guys I'm back can you guys hear me

00:31:10,670 --> 00:31:13,340
okay

00:31:11,150 --> 00:31:16,610
yes audio levels weren't good guess what

00:31:13,340 --> 00:31:18,110
we're two life so I'm back I'm Ramon

00:31:16,610 --> 00:31:20,570
watch am the program manager for drone

00:31:18,110 --> 00:31:22,940
code we just heard from dr. express

00:31:20,570 --> 00:31:24,860
thank you guys that was great I really

00:31:22,940 --> 00:31:26,630
look forward for those likes with all

00:31:24,860 --> 00:31:30,260
those resources in them I will share

00:31:26,630 --> 00:31:32,990
them be asked at soon guess what next up

00:31:30,260 --> 00:31:35,660
we got overview multicopter control from

00:31:32,990 --> 00:31:39,470
sensors to motors by Matthew verse

00:31:35,660 --> 00:31:40,850
Connie and Matias scrub from altair Ian

00:31:39,470 --> 00:31:43,940
they're also returning speakers from

00:31:40,850 --> 00:31:45,460
2019 they're members of the px4 dev team

00:31:43,940 --> 00:31:46,730
and they're joining live from

00:31:45,460 --> 00:31:48,470
Switzerland

00:31:46,730 --> 00:31:50,990
give me a moment while I connect with

00:31:48,470 --> 00:31:54,070
them I promise I won't take that long

00:31:50,990 --> 00:31:54,070

YouTube URL: https://www.youtube.com/watch?v=cfa6ixqp2IY


