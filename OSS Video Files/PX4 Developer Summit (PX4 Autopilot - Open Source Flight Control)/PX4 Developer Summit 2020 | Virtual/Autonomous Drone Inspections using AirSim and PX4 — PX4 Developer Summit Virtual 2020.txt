Title: Autonomous Drone Inspections using AirSim and PX4 — PX4 Developer Summit Virtual 2020
Publication date: 2020-07-15
Playlist: PX4 Developer Summit 2020 | Virtual
Description: 
	Title: Autonomous Drone Inspections using AirSim and PX4

Summary: Drones are increasingly moving from manual operations to more autonomous operations and missions. Inspection is one of the more demanded scenarios. Microsoft’s autonomous systems platform enables you to build increased autonomy into your drone solutions. Using PX4 and Microsoft’s simulator AirSim you will learn how to architect an autonomous inspection solution.

https://px4developersummitvirtual2020.sched.com/event/cjOR

The PX4 Developer Summit is the annual flagship conference hosted by Dronecode for the drone development community. https://bit.ly/2YXe4Rd
Captions: 
	00:00:00,500 --> 00:00:04,410
community welcome back to the px4

00:00:02,760 --> 00:00:06,150
developer summit I'm really excited to

00:00:04,410 --> 00:00:08,490
introduce our next speakers you got wall

00:00:06,150 --> 00:00:10,440
acasuso principal project manager from

00:00:08,490 --> 00:00:12,120
Microsoft and Paula Stubbs director of

00:00:10,440 --> 00:00:13,590
product marketing for Microsoft ai

00:00:12,120 --> 00:00:15,540
they're going to be talking about

00:00:13,590 --> 00:00:17,970
autonomous drone inspections using air

00:00:15,540 --> 00:00:22,199
sim and px4 really excited to see what

00:00:17,970 --> 00:00:25,609
Microsoft team has today for us so guys

00:00:22,199 --> 00:00:29,070
take it away Mike's all yours

00:00:25,609 --> 00:00:32,099
awesome Thank You Ramon and hello

00:00:29,070 --> 00:00:34,739
everyone my name is well I guess also as

00:00:32,099 --> 00:00:36,480
Ramon mentioned I work in Microsoft

00:00:34,739 --> 00:00:40,280
autonomous systems

00:00:36,480 --> 00:00:43,140
I'm the PM lead for air seen our

00:00:40,280 --> 00:00:45,989
simulation and here with me I have poly

00:00:43,140 --> 00:00:49,170
stops - he is a marketing director for

00:00:45,989 --> 00:00:51,690
AI and it's supporting our organization

00:00:49,170 --> 00:00:54,780
Paul and I we are super happy of being

00:00:51,690 --> 00:00:57,210
here with you guys today and hopefully

00:00:54,780 --> 00:00:59,390
we will be sharing things that are going

00:00:57,210 --> 00:01:03,300
to be useful for the community and

00:00:59,390 --> 00:01:04,860
trying to walk you through the progress

00:01:03,300 --> 00:01:08,130
that we have been made on the

00:01:04,860 --> 00:01:10,080
integration between the x4a our team and

00:01:08,130 --> 00:01:13,070
also including some other Microsoft

00:01:10,080 --> 00:01:13,070
technologies as well

00:01:17,159 --> 00:01:23,979
so bad sauce and I think that before we

00:01:20,950 --> 00:01:27,000
jump to the key pieces of our

00:01:23,979 --> 00:01:30,490
presentation I really want to mention

00:01:27,000 --> 00:01:34,780
this for Mesa milestone it has been a

00:01:30,490 --> 00:01:37,990
year that in fact we decided to became

00:01:34,780 --> 00:01:40,570
partners and withdrawn gold and and to

00:01:37,990 --> 00:01:43,119
be around this amazing ecosystem so I

00:01:40,570 --> 00:01:45,940
want to take your time to say thanks for

00:01:43,119 --> 00:01:48,009
this opportunity for us is super

00:01:45,940 --> 00:01:50,770
important and we see an incredible

00:01:48,009 --> 00:01:54,100
potential on the partnership itself and

00:01:50,770 --> 00:01:57,310
I also brought two things here one is

00:01:54,100 --> 00:01:59,470
big kudos to Chris loved it in fact he

00:01:57,310 --> 00:02:01,690
has been a big contributor from

00:01:59,470 --> 00:02:03,910
Microsoft research to all the efforts

00:02:01,690 --> 00:02:07,000
around the integration as well as a

00:02:03,910 --> 00:02:08,800
radish madam if you have a chance to go

00:02:07,000 --> 00:02:11,140
through a nice presentation vahik

00:02:08,800 --> 00:02:13,150
presented yesterday and I think that the

00:02:11,140 --> 00:02:15,940
recording is available as well he is one

00:02:13,150 --> 00:02:20,650
of our key researchers and leading the

00:02:15,940 --> 00:02:23,519
efforts around the b1 community so with

00:02:20,650 --> 00:02:27,430
that just Before we jump to the color

00:02:23,519 --> 00:02:30,030
content I would love to very quickly say

00:02:27,430 --> 00:02:32,400
what is autonomous systems that is our

00:02:30,030 --> 00:02:36,400
organization or the organization that

00:02:32,400 --> 00:02:39,250
hosts air seem so our main mission in

00:02:36,400 --> 00:02:42,640
the autonomous systems within Microsoft

00:02:39,250 --> 00:02:44,799
is to bring intelligence to machines we

00:02:42,640 --> 00:02:47,500
believe that through the capabilities of

00:02:44,799 --> 00:02:50,320
sensing a dynamic world we can provide

00:02:47,500 --> 00:02:53,049
safety and support many scenarios that

00:02:50,320 --> 00:02:56,500
goes from research to industrial

00:02:53,049 --> 00:02:58,000
applications so with that I will have

00:02:56,500 --> 00:03:00,730
some links at the end of the

00:02:58,000 --> 00:03:03,220
presentation in case you want to go and

00:03:00,730 --> 00:03:07,150
take a look at what the team is doing in

00:03:03,220 --> 00:03:09,250
addition to simulations but you can do

00:03:07,150 --> 00:03:11,380
that probably through the links now I'm

00:03:09,250 --> 00:03:14,190
going to hand off to Paul that he has

00:03:11,380 --> 00:03:17,440
there the coolest stuff here

00:03:14,190 --> 00:03:20,350
thanks Fatih so I just want to show you

00:03:17,440 --> 00:03:23,109
a quick demo of an inspection drone

00:03:20,350 --> 00:03:26,800
scenario and we're really thinking about

00:03:23,109 --> 00:03:28,660
two main areas of drones for our

00:03:26,800 --> 00:03:30,069
autonomous systems and air some work

00:03:28,660 --> 00:03:31,750
that we're doing

00:03:30,069 --> 00:03:33,400
the first is really inspections right

00:03:31,750 --> 00:03:35,920
the idea of an inspection scenario is

00:03:33,400 --> 00:03:38,709
that you're trying to get some sensor a

00:03:35,920 --> 00:03:41,799
camera or something over some spot on

00:03:38,709 --> 00:03:45,250
the earth to then to gather information

00:03:41,799 --> 00:03:47,049
and take pictures or detect gas leakage

00:03:45,250 --> 00:03:49,000
at an oil refinery or something like

00:03:47,049 --> 00:03:51,900
that right and the second scenario is

00:03:49,000 --> 00:03:55,359
around delivery where the goal is to

00:03:51,900 --> 00:03:57,670
take some payload to a certain spot on

00:03:55,359 --> 00:03:59,670
the earth and drop it off in the case of

00:03:57,670 --> 00:04:03,010
you know package delivery or maybe

00:03:59,670 --> 00:04:05,349
precision farming right with fertilizer

00:04:03,010 --> 00:04:07,150
or things like that so this demo is

00:04:05,349 --> 00:04:10,000
really inspections which is how do we

00:04:07,150 --> 00:04:13,419
move a camera around in space and and

00:04:10,000 --> 00:04:16,389
detect objects so when you go to think

00:04:13,419 --> 00:04:18,789
about building a demo for drones it's

00:04:16,389 --> 00:04:20,500
not just about how do you fly the drone

00:04:18,789 --> 00:04:22,150
that's one part of it that's a big part

00:04:20,500 --> 00:04:23,440
and that's really the part that we'll

00:04:22,150 --> 00:04:25,780
talk about today which is around

00:04:23,440 --> 00:04:27,669
autonomous flight and then also vision

00:04:25,780 --> 00:04:29,380
and object detection so in case we're

00:04:27,669 --> 00:04:31,419
doing inspections how do we detect

00:04:29,380 --> 00:04:33,070
objects that we want to inspect and how

00:04:31,419 --> 00:04:36,010
do we detect objects we want to avoid

00:04:33,070 --> 00:04:38,050
for autonomous flight but through all of

00:04:36,010 --> 00:04:40,030
these missions there'll be other

00:04:38,050 --> 00:04:41,560
elements such as a mission builder how

00:04:40,030 --> 00:04:42,820
do we know what where points to fly how

00:04:41,560 --> 00:04:44,229
do we know the weather how that we know

00:04:42,820 --> 00:04:45,909
can we fly like all of that is in

00:04:44,229 --> 00:04:48,340
mission builder and then we have the

00:04:45,909 --> 00:04:50,800
other aspects of any solution which is

00:04:48,340 --> 00:04:52,630
managing and monitoring reporting and

00:04:50,800 --> 00:04:54,970
telemetry and alerts right and that's

00:04:52,630 --> 00:04:57,099
another big aspect of building a drone

00:04:54,970 --> 00:04:59,919
solution and then finally mobile

00:04:57,099 --> 00:05:01,630
monitoring for keeping up to what's

00:04:59,919 --> 00:05:03,669
going on with a mission from a mobile

00:05:01,630 --> 00:05:05,560
device or other stakeholders can monitor

00:05:03,669 --> 00:05:08,229
the missions or understand or view the

00:05:05,560 --> 00:05:10,120
telemetry or manage multiple drones or

00:05:08,229 --> 00:05:12,880
redirect them or retask them and so

00:05:10,120 --> 00:05:14,710
mobile is a big part of that so for this

00:05:12,880 --> 00:05:16,630
demo we really want to talk about kind

00:05:14,710 --> 00:05:19,900
of the autonomous flight and the object

00:05:16,630 --> 00:05:23,169
detection sensor part of this but with

00:05:19,900 --> 00:05:25,449
any drone demo and drones built with

00:05:23,169 --> 00:05:27,340
drone code in px4 we have this sort of

00:05:25,449 --> 00:05:29,139
generalized architecture here which is

00:05:27,340 --> 00:05:31,479
in the top left we have our flight

00:05:29,139 --> 00:05:33,729
controller that's running on px4

00:05:31,479 --> 00:05:36,340
something like a pixhawk and then we

00:05:33,729 --> 00:05:39,700
have a companion computer running for

00:05:36,340 --> 00:05:42,219
example here nvidia tx2 or nvidia xavier

00:05:39,700 --> 00:05:43,790
board and we run ross - on top of that

00:05:42,219 --> 00:05:45,380
and we also can run our

00:05:43,790 --> 00:05:47,630
seeing and reinforcement learning models

00:05:45,380 --> 00:05:50,840
on that and those computers talk to each

00:05:47,630 --> 00:05:52,850
other through DDS because Ross too is

00:05:50,840 --> 00:05:54,320
DDS compliant so they talked the flight

00:05:52,850 --> 00:05:57,380
controller and the companion computer

00:05:54,320 --> 00:05:59,120
talk on the drone through DDS and then

00:05:57,380 --> 00:06:01,310
we have at the bottom left ground

00:05:59,120 --> 00:06:03,470
controller in this case it's our cue

00:06:01,310 --> 00:06:05,090
ground control and that's talking to the

00:06:03,470 --> 00:06:08,030
flight controller using Mavs link and

00:06:05,090 --> 00:06:09,590
then both of those systems but more so

00:06:08,030 --> 00:06:11,930
the ground controller can communicate

00:06:09,590 --> 00:06:13,580
with other edge services in the cloud

00:06:11,930 --> 00:06:15,860
and the azure cloud things like the

00:06:13,580 --> 00:06:18,560
simulation and sensor information and

00:06:15,860 --> 00:06:21,260
storing of telemetry and alerting and

00:06:18,560 --> 00:06:23,840
security for deploying and the other

00:06:21,260 --> 00:06:26,060
existing machine learning api is that we

00:06:23,840 --> 00:06:28,790
have in cognitive services so all of

00:06:26,060 --> 00:06:32,210
these elements come together to build a

00:06:28,790 --> 00:06:34,010
an inspection drone scenario and so for

00:06:32,210 --> 00:06:35,420
this demo I put together some hardware

00:06:34,010 --> 00:06:38,060
and sort of what the canonical example

00:06:35,420 --> 00:06:40,910
would look like starting on the right

00:06:38,060 --> 00:06:43,940
I built the mini mini ATX computer that

00:06:40,910 --> 00:06:47,840
has it's an Intel chip in there it's

00:06:43,940 --> 00:06:51,530
running 32 gigs of ram it's running an

00:06:47,840 --> 00:06:54,530
m2 SSD and I have an Nvidia r-tx 28 II

00:06:51,530 --> 00:06:56,240
as the main processor and then I have a

00:06:54,530 --> 00:06:57,530
monitor that I can display and you can

00:06:56,240 --> 00:06:58,550
see we're running err sim and this is

00:06:57,530 --> 00:06:58,850
the demo I'm going to show you in a

00:06:58,550 --> 00:07:00,530
minute

00:06:58,850 --> 00:07:03,440
and there's my hardware I'm running a

00:07:00,530 --> 00:07:05,840
unified Rako research drone a dracco AR

00:07:03,440 --> 00:07:09,110
and so on this research drone it has a

00:07:05,840 --> 00:07:10,970
pixhawk built in and it has a tx2 board

00:07:09,110 --> 00:07:13,070
built in as well and so the demo

00:07:10,970 --> 00:07:15,350
scenario is that I start with software

00:07:13,070 --> 00:07:17,960
in the loop right I want to do software

00:07:15,350 --> 00:07:20,840
in the loop to do everything I can in a

00:07:17,960 --> 00:07:22,040
docker container on the machine test all

00:07:20,840 --> 00:07:24,050
the components and then at some point

00:07:22,040 --> 00:07:26,240
what I want to do is switch over to

00:07:24,050 --> 00:07:27,920
Hardware in the loop and in this case I

00:07:26,240 --> 00:07:32,210
have the drone plugged into the computer

00:07:27,920 --> 00:07:34,700
I can deploy the flight controller the

00:07:32,210 --> 00:07:36,650
px4 directly to the pixhawk hardware

00:07:34,700 --> 00:07:38,540
where in the software and loop it runs

00:07:36,650 --> 00:07:40,430
in a docker container and then I can

00:07:38,540 --> 00:07:42,710
deploy the companion computer code the

00:07:40,430 --> 00:07:45,620
Ross to code directly to the tx2 and

00:07:42,710 --> 00:07:47,540
that gives me a much greater surface

00:07:45,620 --> 00:07:49,100
area of testing my solution before I

00:07:47,540 --> 00:07:51,050
actually spinning propellers or fly

00:07:49,100 --> 00:07:53,540
anywhere and so this is a really great

00:07:51,050 --> 00:07:56,590
kind of dev flow to get back and forth

00:07:53,540 --> 00:07:56,590
between the demos and

00:07:56,810 --> 00:07:59,450
let's go ahead and take a look at what

00:07:57,830 --> 00:08:01,070
this looks like first thing I start

00:07:59,450 --> 00:08:03,830
everything up with a simple PowerShell

00:08:01,070 --> 00:08:05,900
command so we can go to my source folder

00:08:03,830 --> 00:08:07,520
and then launch this PowerShell command

00:08:05,900 --> 00:08:11,360
that will kind of kick off all the

00:08:07,520 --> 00:08:13,280
elements and in this demo you'll see all

00:08:11,360 --> 00:08:15,320
the elements in an architecture slide

00:08:13,280 --> 00:08:17,090
kind of come together on one box that

00:08:15,320 --> 00:08:19,430
makes it super easy for a developer to

00:08:17,090 --> 00:08:21,200
kind of iterate quickly on what's

00:08:19,430 --> 00:08:24,830
happening so the first thing we're gonna

00:08:21,200 --> 00:08:27,500
launch is the px4 running in a docker

00:08:24,830 --> 00:08:29,270
container so this is a this is the px4

00:08:27,500 --> 00:08:31,490
running in a dr. tina that's going to be

00:08:29,270 --> 00:08:32,930
my flight controller so once I have my

00:08:31,490 --> 00:08:35,210
flight controller setup I'm able to

00:08:32,930 --> 00:08:37,250
start up cue ground control to ground

00:08:35,210 --> 00:08:39,979
control will then connect to that UDP

00:08:37,250 --> 00:08:42,860
port to communicate with the flight

00:08:39,979 --> 00:08:45,170
controller here and then air so spins up

00:08:42,860 --> 00:08:48,110
as my vehicle simulation and that

00:08:45,170 --> 00:08:51,890
connects also to cue ground control and

00:08:48,110 --> 00:08:54,920
then to be px4 as well in the docker

00:08:51,890 --> 00:08:56,930
container so also what I have on my

00:08:54,920 --> 00:08:58,850
companion computer here once I fire this

00:08:56,930 --> 00:09:01,550
up it's actually reading the image

00:08:58,850 --> 00:09:04,760
messages coming out of px4 which those

00:09:01,550 --> 00:09:07,610
images are generated using the sensors

00:09:04,760 --> 00:09:09,710
and in air sim so we're getting

00:09:07,610 --> 00:09:12,710
synthetic image data from air sim

00:09:09,710 --> 00:09:15,620
through px4 that I'm reading in my Ross

00:09:12,710 --> 00:09:17,360
nodes and then once I once I have those

00:09:15,620 --> 00:09:22,339
nodes coming what we've also done is

00:09:17,360 --> 00:09:25,070
I've created a a web page for us to have

00:09:22,339 --> 00:09:29,870
a 2d projection of the world that we're

00:09:25,070 --> 00:09:32,470
going to see let's just rearrange the

00:09:29,870 --> 00:09:35,650
windows a little bit to give us no space

00:09:32,470 --> 00:09:37,940
so this 2d projection comes from the

00:09:35,650 --> 00:09:40,250
neighborhood scenario that's built into

00:09:37,940 --> 00:09:41,780
air sim and then we can read the

00:09:40,250 --> 00:09:44,300
messages coming out of Ross and

00:09:41,780 --> 00:09:46,670
visualize them on this this simple web

00:09:44,300 --> 00:09:48,350
application so next thing all we need to

00:09:46,670 --> 00:09:50,300
do is load our missions that we can fly

00:09:48,350 --> 00:09:53,900
around the neighborhood now the mission

00:09:50,300 --> 00:09:55,459
is a simple square that we're going to

00:09:53,900 --> 00:10:00,110
fly down the streets and we're going to

00:09:55,459 --> 00:10:02,150
look for cars parked in the street so

00:10:00,110 --> 00:10:03,890
we've uploaded the mission through px4

00:10:02,150 --> 00:10:06,410
now we're able to start the mission

00:10:03,890 --> 00:10:09,110
which then you'll see as we start in cue

00:10:06,410 --> 00:10:10,100
ground control air sim on the Left takes

00:10:09,110 --> 00:10:11,389
off because we're

00:10:10,100 --> 00:10:14,209
controlling air Simha is our vehicle

00:10:11,389 --> 00:10:16,519
through px4 and we start to see the

00:10:14,209 --> 00:10:19,339
visualization of that telemetry data on

00:10:16,519 --> 00:10:21,529
our 2d projection in the middle and then

00:10:19,339 --> 00:10:24,290
we can start detecting cars and you can

00:10:21,529 --> 00:10:26,000
see the sensors that Air sim has out of

00:10:24,290 --> 00:10:27,230
the box that we can see visualized at

00:10:26,000 --> 00:10:29,329
the bottom the different types of

00:10:27,230 --> 00:10:31,040
sensors that we're looking at and we can

00:10:29,329 --> 00:10:34,279
read and infer those sensors in this

00:10:31,040 --> 00:10:36,500
case we're using just a simple Yolo

00:10:34,279 --> 00:10:39,410
algorithm to look for cars that are

00:10:36,500 --> 00:10:40,970
parked so we come up with some cars here

00:10:39,410 --> 00:10:42,440
but they're in shadows so we don't

00:10:40,970 --> 00:10:43,970
really see them so this would be an area

00:10:42,440 --> 00:10:46,310
that we'd go back and test and try to

00:10:43,970 --> 00:10:47,750
find an algorithm that can detect those

00:10:46,310 --> 00:10:50,389
cars even in different lighting

00:10:47,750 --> 00:10:51,769
conditions so here we see a car that's

00:10:50,389 --> 00:10:53,089
in pretty good lighting condition then

00:10:51,769 --> 00:10:56,930
we should be able to detect this one

00:10:53,089 --> 00:10:58,639
easily and in fact once we detect it we

00:10:56,930 --> 00:11:00,470
just simply put a pin on the map

00:10:58,639 --> 00:11:03,050
and we can actually see those cars and

00:11:00,470 --> 00:11:07,750
and log those and save that for later

00:11:03,050 --> 00:11:07,750
analysis by somebody or another system

00:11:08,440 --> 00:11:13,190
so from here the mission continues we

00:11:11,389 --> 00:11:14,870
continue looking for cars and we

00:11:13,190 --> 00:11:22,790
continue to fly back towards our

00:11:14,870 --> 00:11:24,019
waypoints in the center so it's all dive

00:11:22,790 --> 00:11:25,910
in a little bit about the simulation

00:11:24,019 --> 00:11:27,709
using here an air sim and how that

00:11:25,910 --> 00:11:30,170
really enabled this scenario to really

00:11:27,709 --> 00:11:32,089
come alive now as I said before there's

00:11:30,170 --> 00:11:34,730
lots of lighting conditions that are

00:11:32,089 --> 00:11:37,819
difficult for computer vision to detect

00:11:34,730 --> 00:11:39,410
today and it's it's not reasonable to

00:11:37,819 --> 00:11:42,199
ask somebody to fly in these conditions

00:11:39,410 --> 00:11:43,970
without having a good model yet to train

00:11:42,199 --> 00:11:46,519
and so we do that training and

00:11:43,970 --> 00:11:48,380
simulation here we sponsored her team

00:11:46,519 --> 00:11:50,779
from Carnegie Mellon for the darker

00:11:48,380 --> 00:11:53,420
subterranean challenge and we were able

00:11:50,779 --> 00:11:55,639
to produce a number of environmental

00:11:53,420 --> 00:11:58,069
conditions such as fog or smoke in the

00:11:55,639 --> 00:11:59,779
tunnel that they could train on before

00:11:58,069 --> 00:12:02,930
they actually even enter the tunnel in

00:11:59,779 --> 00:12:04,430
fact we created a 3d representation of

00:12:02,930 --> 00:12:06,350
the entire tunnel system for the

00:12:04,430 --> 00:12:08,540
challenge and they were able to fly this

00:12:06,350 --> 00:12:10,519
mission thousands of time before they

00:12:08,540 --> 00:12:13,639
even got on site for the actual contest

00:12:10,519 --> 00:12:15,589
and so once they're in the tunnel they

00:12:13,639 --> 00:12:17,060
can now train it to detect things that

00:12:15,589 --> 00:12:21,100
were part of their challenge which are

00:12:17,060 --> 00:12:24,019
things like backpacks or toolboxes or

00:12:21,100 --> 00:12:26,360
fire extinguishers or things like that

00:12:24,019 --> 00:12:28,459
and so this really becomes a very rich

00:12:26,360 --> 00:12:31,309
visual environment that you can train

00:12:28,459 --> 00:12:33,199
your vehicle in either both cases you

00:12:31,309 --> 00:12:36,709
the ground vehicles or air vehicles

00:12:33,199 --> 00:12:38,749
inside of air sim in effect that the

00:12:36,709 --> 00:12:40,730
vehicle that they use for the challenge

00:12:38,749 --> 00:12:42,170
is actually very innovative so the

00:12:40,730 --> 00:12:45,019
challenge required them to fly

00:12:42,170 --> 00:12:46,819
underground for 90 minutes but most

00:12:45,019 --> 00:12:48,799
drones don't have that battery life and

00:12:46,819 --> 00:12:50,629
so what they did was they have an HEV

00:12:48,799 --> 00:12:52,939
that they created a ground vehicle and

00:12:50,629 --> 00:12:54,920
the drone rides on top of the ground

00:12:52,939 --> 00:12:57,319
vehicle sort of as a mobile battery

00:12:54,920 --> 00:13:01,220
charger and so the two work together so

00:12:57,319 --> 00:13:03,619
we have a good solution for robot -

00:13:01,220 --> 00:13:06,290
robot communications and swarming right

00:13:03,619 --> 00:13:08,600
and squad type of environments and

00:13:06,290 --> 00:13:10,670
coordination where they can go together

00:13:08,600 --> 00:13:13,100
and when they get to a point where they

00:13:10,670 --> 00:13:14,809
need to inspect a tunnel the drone can

00:13:13,100 --> 00:13:16,100
take off and go inspect that area the

00:13:14,809 --> 00:13:17,899
tunnel will come back and charge and

00:13:16,100 --> 00:13:20,360
they can continue the mission so it's a

00:13:17,899 --> 00:13:22,670
really good leveraging the capabilities

00:13:20,360 --> 00:13:24,799
for each platform the best right and it

00:13:22,670 --> 00:13:26,660
was very useful to have air sim to be

00:13:24,799 --> 00:13:30,740
able to handle both ground vehicles and

00:13:26,660 --> 00:13:34,699
and air vehicles so when their sim you

00:13:30,740 --> 00:13:36,769
know it's a it's based on unreal and we

00:13:34,699 --> 00:13:39,319
can then get very rich visual

00:13:36,769 --> 00:13:41,660
environments and the environments can be

00:13:39,319 --> 00:13:43,670
as rich as you want to or need them to

00:13:41,660 --> 00:13:46,369
be at any point in time we can simulate

00:13:43,670 --> 00:13:49,100
city environments or urban environments

00:13:46,369 --> 00:13:52,429
we can simulate warehousing and how do

00:13:49,100 --> 00:13:54,470
we do logistics we can simulate rich

00:13:52,429 --> 00:13:58,040
vegetation and we can do lighting

00:13:54,470 --> 00:14:00,459
conditions and weather and in fact this

00:13:58,040 --> 00:14:03,259
is the way that many of our customers

00:14:00,459 --> 00:14:05,170
start because you want to test all of

00:14:03,259 --> 00:14:07,369
these scenarios before you take your

00:14:05,170 --> 00:14:09,259
multi-thousand dollar drone out into the

00:14:07,369 --> 00:14:12,759
field and in fact we have a number of

00:14:09,259 --> 00:14:12,759
enterprise customers doing this today

00:14:14,079 --> 00:14:19,759
yeah let me talk about that you packed

00:14:16,610 --> 00:14:22,850
up all think you think this is this is

00:14:19,759 --> 00:14:25,759
great I really like that inspection demo

00:14:22,850 --> 00:14:28,669
because it really shows how an

00:14:25,759 --> 00:14:31,249
industrial scenario or or can be can

00:14:28,669 --> 00:14:33,499
leverage the integration of both px4 and

00:14:31,249 --> 00:14:35,589
an air seam and also the cloud right

00:14:33,499 --> 00:14:38,379
that we will we will talk later about

00:14:35,589 --> 00:14:40,870
but I think that going to the industrial

00:14:38,379 --> 00:14:45,339
applications something that I would like

00:14:40,870 --> 00:14:48,730
to share with the community is two cases

00:14:45,339 --> 00:14:54,100
mainly that we just deliver last year

00:14:48,730 --> 00:14:57,550
one is the CES 2020 demo where we in

00:14:54,100 --> 00:14:59,860
partnership with Bell flight we in fact

00:14:57,550 --> 00:15:04,480
implemented an a scenario where we

00:14:59,860 --> 00:15:08,050
provided simulations for training new

00:15:04,480 --> 00:15:11,680
abs and being able to operate in a GPS

00:15:08,050 --> 00:15:15,759
denied environments so basically we

00:15:11,680 --> 00:15:20,379
train swarms of drones to go from one

00:15:15,759 --> 00:15:22,480
location to that it can be um or can be

00:15:20,379 --> 00:15:26,040
delivery itself where you have to go

00:15:22,480 --> 00:15:29,170
from one location and land and use

00:15:26,040 --> 00:15:32,470
visual objects identifications for that

00:15:29,170 --> 00:15:34,809
and air singh was a peak is a key piece

00:15:32,470 --> 00:15:36,999
because mainly what we did is training

00:15:34,809 --> 00:15:38,829
the eye models that were running on the

00:15:36,999 --> 00:15:41,170
drones to be able to perform the tasks

00:15:38,829 --> 00:15:43,839
as well as we also use the air scene for

00:15:41,170 --> 00:15:45,790
random Mswati station that is something

00:15:43,839 --> 00:15:49,269
that we are seen as a big use case now

00:15:45,790 --> 00:15:54,129
for a lot of customers when they want to

00:15:49,269 --> 00:15:56,680
ingest real data telemetry and use air

00:15:54,129 --> 00:15:59,769
seamen and simulations in general itself

00:15:56,680 --> 00:16:03,129
to visualize the current operation and

00:15:59,769 --> 00:16:05,470
make decisions as they run and then the

00:16:03,129 --> 00:16:07,660
other case that I think is it really

00:16:05,470 --> 00:16:10,689
really touches me it is one because it

00:16:07,660 --> 00:16:12,939
has to be with wildlife preservation as

00:16:10,689 --> 00:16:16,269
well as clean energy is what air

00:16:12,939 --> 00:16:18,699
autonomy is doing now that is working on

00:16:16,269 --> 00:16:22,059
turbines inspection if at one of their

00:16:18,699 --> 00:16:24,490
main customers its Xcel Energy and they

00:16:22,059 --> 00:16:26,620
are using air scene for training the

00:16:24,490 --> 00:16:29,319
drones to perform the missions be able

00:16:26,620 --> 00:16:33,670
to monitor and supervise the different

00:16:29,319 --> 00:16:35,740
turbines help with any defects that you

00:16:33,670 --> 00:16:39,579
can have in the operation as well as

00:16:35,740 --> 00:16:41,709
also identification of hazards and the

00:16:39,579 --> 00:16:45,100
recognition of wildlife around the

00:16:41,709 --> 00:16:47,350
turbines in order to avoid any accident

00:16:45,100 --> 00:16:49,100
so I think as we move forward we we have

00:16:47,350 --> 00:16:52,760
many many conversations

00:16:49,100 --> 00:16:55,490
with customers today that are willing to

00:16:52,760 --> 00:16:58,480
bring their own environments and and

00:16:55,490 --> 00:17:02,990
make sure that they can run simulations

00:16:58,480 --> 00:17:06,820
to I think three different use cases one

00:17:02,990 --> 00:17:09,560
is the development the design of

00:17:06,820 --> 00:17:11,360
scenarios where they want to try and

00:17:09,560 --> 00:17:14,870
they want to make sure that everything

00:17:11,360 --> 00:17:18,410
is saved and we see individual agents

00:17:14,870 --> 00:17:21,560
UAVs or grammar BOTS or the mix of them

00:17:18,410 --> 00:17:24,980
or swarms then we see testing and

00:17:21,560 --> 00:17:27,440
validation where in fact regulations are

00:17:24,980 --> 00:17:31,040
part of that as well and then the last

00:17:27,440 --> 00:17:33,950
one is how do we use ears in today for

00:17:31,040 --> 00:17:36,260
the visualization of the operations so

00:17:33,950 --> 00:17:38,830
really a lot of potential on this area

00:17:36,260 --> 00:17:42,920
and I think that we are all learning -

00:17:38,830 --> 00:17:47,180
what are the main uses of this

00:17:42,920 --> 00:17:49,010
technology so with this poll I think

00:17:47,180 --> 00:17:52,760
yeah let's let's talk about our

00:17:49,010 --> 00:17:54,860
deployment and in fact we we included

00:17:52,760 --> 00:17:57,920
this last minute in the presentation

00:17:54,860 --> 00:18:01,010
because this is a new feature that we

00:17:57,920 --> 00:18:03,950
just added to air sim open source and

00:18:01,010 --> 00:18:06,770
here's how to deploy air sim in the

00:18:03,950 --> 00:18:09,440
cloud mainly assure that is Microsoft

00:18:06,770 --> 00:18:14,360
cloud itself and based on the use cases

00:18:09,440 --> 00:18:16,910
we identified two minutes one is to use

00:18:14,360 --> 00:18:20,900
the cloud for development you can think

00:18:16,910 --> 00:18:24,200
of the uses I really need to have an

00:18:20,900 --> 00:18:26,660
environment today for air sim is unreal

00:18:24,200 --> 00:18:30,440
class the binaries and another

00:18:26,660 --> 00:18:32,740
dependencies running in a machine where

00:18:30,440 --> 00:18:36,110
I need GPU and I need another

00:18:32,740 --> 00:18:38,570
requirements and I don't have it in my

00:18:36,110 --> 00:18:41,110
own capacity now so I a scale that

00:18:38,570 --> 00:18:45,170
through the cloud so basically I can

00:18:41,110 --> 00:18:47,540
deploy IBM and through different common

00:18:45,170 --> 00:18:49,820
lines and scripts that we provided as

00:18:47,540 --> 00:18:52,250
part of this deployment package you can

00:18:49,820 --> 00:18:55,580
have the development machine we are also

00:18:52,250 --> 00:18:59,740
seeing uses of this as I want to share a

00:18:55,580 --> 00:19:03,070
demo and I would love to have multiple

00:18:59,740 --> 00:19:06,390
developers or sometimes teams around the

00:19:03,070 --> 00:19:10,660
same simulation environment so I can

00:19:06,390 --> 00:19:14,590
share these without the need of really

00:19:10,660 --> 00:19:17,650
making any infrastructure investment and

00:19:14,590 --> 00:19:19,690
the second piece is how can I test this

00:19:17,650 --> 00:19:21,880
at the scale right and I think that as

00:19:19,690 --> 00:19:23,140
we move forward with simulations you

00:19:21,880 --> 00:19:25,690
really have the need of

00:19:23,140 --> 00:19:27,309
start testing different configurations

00:19:25,690 --> 00:19:29,860
different variables if you think about

00:19:27,309 --> 00:19:32,190
environments how do I test different

00:19:29,860 --> 00:19:35,710
weather conditions considering the same

00:19:32,190 --> 00:19:38,830
scenario itself so I make sure that the

00:19:35,710 --> 00:19:41,650
data that I generate to train my

00:19:38,830 --> 00:19:44,710
autonomous agents is really substantial

00:19:41,650 --> 00:19:46,929
to get a level of accuracy where I can

00:19:44,710 --> 00:19:52,000
gain write fidelity for that

00:19:46,929 --> 00:19:55,929
so we maybe efforts around these and we

00:19:52,000 --> 00:19:58,929
can go to the to the next part here for

00:19:55,929 --> 00:20:01,450
so this is a recording of how the flow

00:19:58,929 --> 00:20:04,390
works today if you go to the

00:20:01,450 --> 00:20:06,909
documentation of where seem we added a

00:20:04,390 --> 00:20:09,580
new immune section that is a are seam

00:20:06,909 --> 00:20:11,740
running or nasha you can go there you

00:20:09,580 --> 00:20:13,690
can have the different options as I

00:20:11,740 --> 00:20:18,120
mentioned before where you can apply

00:20:13,690 --> 00:20:22,570
your own VM for development purposes or

00:20:18,120 --> 00:20:26,950
you can also deploy a container and I

00:20:22,570 --> 00:20:30,159
think the documentation is enough to

00:20:26,950 --> 00:20:33,460
really help you with the testing of this

00:20:30,159 --> 00:20:36,210
or encourage to go through that but

00:20:33,460 --> 00:20:40,390
mainly is having the knowledge on how to

00:20:36,210 --> 00:20:42,820
package binaries and use what we provide

00:20:40,390 --> 00:20:45,880
currently on air seem as well as

00:20:42,820 --> 00:20:48,909
probably experience with docker will be

00:20:45,880 --> 00:20:51,250
super helpful if you want to go this way

00:20:48,909 --> 00:20:53,559
and again I think there are two main

00:20:51,250 --> 00:20:55,870
scenarios we find shake it that way

00:20:53,559 --> 00:20:58,030
based on what we are learning there are

00:20:55,870 --> 00:21:00,730
the requirements but as you start using

00:20:58,030 --> 00:21:03,789
it we would like to hear more about what

00:21:00,730 --> 00:21:07,000
is useful for for the community and we

00:21:03,789 --> 00:21:07,590
include it in the side in fact if a

00:21:07,000 --> 00:21:09,870
button

00:21:07,590 --> 00:21:11,970
that says deployed to Asha in order to

00:21:09,870 --> 00:21:16,799
simplify the experience if you just go

00:21:11,970 --> 00:21:19,049
there and click you will be taken to the

00:21:16,799 --> 00:21:23,610
azure portal itself for this you will

00:21:19,049 --> 00:21:26,850
need an account the requirements for PMS

00:21:23,610 --> 00:21:30,059
are GPU so you will have to probably

00:21:26,850 --> 00:21:33,750
scale a little bit on what it is a test

00:21:30,059 --> 00:21:36,240
account but you can definitely provision

00:21:33,750 --> 00:21:39,419
a subscription you see all the

00:21:36,240 --> 00:21:42,990
experience as we work through this you

00:21:39,419 --> 00:21:46,980
just create a resource group that mainly

00:21:42,990 --> 00:21:49,919
is a group of resources that stay

00:21:46,980 --> 00:21:52,500
relevant there that goes from the BM and

00:21:49,919 --> 00:21:54,750
all the networking that is needed you

00:21:52,500 --> 00:21:57,440
have to give it a name give it a

00:21:54,750 --> 00:22:00,809
password to your BM you can configure

00:21:57,440 --> 00:22:05,340
the size of your VM in this case we

00:22:00,809 --> 00:22:08,340
provide the baseline is the nb6 and you

00:22:05,340 --> 00:22:11,130
can check more around a being capacities

00:22:08,340 --> 00:22:14,100
on the assure documentation and then we

00:22:11,130 --> 00:22:16,320
provide finally script team to simplify

00:22:14,100 --> 00:22:19,460
all the experience and after that you

00:22:16,320 --> 00:22:23,820
can review that everything is fine and

00:22:19,460 --> 00:22:26,370
then just start the provisioning on a

00:22:23,820 --> 00:22:29,090
sure that should be super simple and as

00:22:26,370 --> 00:22:32,159
I said we prepare everything in this

00:22:29,090 --> 00:22:34,110
template and experience to really

00:22:32,159 --> 00:22:37,320
facilitate the things for you and make

00:22:34,110 --> 00:22:42,059
sure that you have all dependencies and

00:22:37,320 --> 00:22:44,510
I never seen is ready to go once you you

00:22:42,059 --> 00:22:48,929
continue the path and we also added

00:22:44,510 --> 00:22:51,179
support for Visual Studio code in fact

00:22:48,929 --> 00:22:55,380
we find a way which you could connect

00:22:51,179 --> 00:22:58,770
through SSH to the BM that you just spin

00:22:55,380 --> 00:23:02,760
up and just establish the connection and

00:22:58,770 --> 00:23:07,140
once you are there you are able to clone

00:23:02,760 --> 00:23:09,809
the repository and just start using and

00:23:07,140 --> 00:23:13,169
I'm running your simulations of course

00:23:09,809 --> 00:23:16,649
this is the case of the development

00:23:13,169 --> 00:23:18,960
sandbox you can modify the code and

00:23:16,649 --> 00:23:22,080
reveal the binaries and have it

00:23:18,960 --> 00:23:24,810
running and experience I think general

00:23:22,080 --> 00:23:27,990
or our goal with all these efforts is to

00:23:24,810 --> 00:23:30,780
provide you with starting points where

00:23:27,990 --> 00:23:33,090
again you can use the binaries that we

00:23:30,780 --> 00:23:35,970
have today or you can create your own

00:23:33,090 --> 00:23:37,490
binaries and in fact the customers that

00:23:35,970 --> 00:23:41,010
we had they brought their own

00:23:37,490 --> 00:23:43,620
environments and you have to rebuild the

00:23:41,010 --> 00:23:46,140
binaries as well as probably add some

00:23:43,620 --> 00:23:48,810
code configuration but I think that

00:23:46,140 --> 00:23:51,840
that's that's the first step that we

00:23:48,810 --> 00:23:56,370
want to provide to facilitate the

00:23:51,840 --> 00:23:59,010
adoption of arizim and well as Paul

00:23:56,370 --> 00:24:02,340
mention I think it's also worth to talk

00:23:59,010 --> 00:24:05,430
about other components in addition to

00:24:02,340 --> 00:24:07,440
simulation as well when he presented the

00:24:05,430 --> 00:24:11,490
demo inspection and then we were in

00:24:07,440 --> 00:24:15,780
decided that flow itself we talked about

00:24:11,490 --> 00:24:18,240
many potentials there and one is to

00:24:15,780 --> 00:24:20,430
really leverage another components of

00:24:18,240 --> 00:24:25,320
Microsoft as part of that as well

00:24:20,430 --> 00:24:27,000
one big is Microsoft cloud assure IOT

00:24:25,320 --> 00:24:31,070
and everything that has to be with

00:24:27,000 --> 00:24:34,050
intelligent search that brings also

00:24:31,070 --> 00:24:37,740
capacities for deployments on the edge

00:24:34,050 --> 00:24:40,800
in this case the tones as well as to

00:24:37,740 --> 00:24:43,860
really bring another AI services that

00:24:40,800 --> 00:24:46,470
could help on that if you go to our

00:24:43,860 --> 00:24:50,760
autonomous systems organization you will

00:24:46,470 --> 00:24:53,820
also find bonsai that is the way in

00:24:50,760 --> 00:24:57,290
which we provide teaching learning

00:24:53,820 --> 00:25:00,050
capabilities and and other advanced

00:24:57,290 --> 00:25:02,940
reinforcement learning that can be

00:25:00,050 --> 00:25:05,850
transferred and ran in the drone itself

00:25:02,940 --> 00:25:08,550
to be able to perform different

00:25:05,850 --> 00:25:11,820
autonomous operations but this is at a

00:25:08,550 --> 00:25:13,550
glance of what we are doing today

00:25:11,820 --> 00:25:16,820
I think that there is a tremendous

00:25:13,550 --> 00:25:19,140
potential ahead to really continue

00:25:16,820 --> 00:25:21,980
integration integrating the different

00:25:19,140 --> 00:25:25,410
scenarios there you have all the links

00:25:21,980 --> 00:25:28,620
from from the resources and of course

00:25:25,410 --> 00:25:31,290
you have the gift apropos of air theme

00:25:28,620 --> 00:25:31,660
as well as community surround that we

00:25:31,290 --> 00:25:35,230
will

00:25:31,660 --> 00:25:37,660
happy to chat and learn more about how

00:25:35,230 --> 00:25:40,540
you are using their sim today and then

00:25:37,660 --> 00:25:47,770
how do we take this integration to the

00:25:40,540 --> 00:25:51,280
next level thank you everyone here yeah

00:25:47,770 --> 00:25:52,810
thank you thank you Paul thank you wow

00:25:51,280 --> 00:25:54,700
that was awesome

00:25:52,810 --> 00:25:56,590
there's a few questions from the

00:25:54,700 --> 00:25:58,090
community for you

00:25:56,590 --> 00:26:01,120
would it be okay if I share those with

00:25:58,090 --> 00:26:04,060
you we still have time for one or two

00:26:01,120 --> 00:26:09,010
questions we're back to your own curve

00:26:04,060 --> 00:26:11,080
some Q&A yeah I think so yeah you're

00:26:09,010 --> 00:26:19,240
still on stream can I ask you one or two

00:26:11,080 --> 00:26:20,950
questions okay so let's do this I'm

00:26:19,240 --> 00:26:24,550
going to share the questions with you

00:26:20,950 --> 00:26:32,200
and you can help me on slack answering

00:26:24,550 --> 00:26:34,450
those community hey guys welcome so

00:26:32,200 --> 00:26:36,520
we're going to have poll and wha-la on

00:26:34,450 --> 00:26:38,320
the P X or slack I feel free to ask

00:26:36,520 --> 00:26:39,700
questions there or amazing community

00:26:38,320 --> 00:26:41,620
volunteers have collected all your

00:26:39,700 --> 00:26:45,580
questions and we'll share them with them

00:26:41,620 --> 00:26:47,680
and join us on slag for them to get your

00:26:45,580 --> 00:26:51,430
answers to your questions

00:26:47,680 --> 00:26:53,620
Wow my I'm finally out of energy

00:26:51,430 --> 00:26:55,960
surprisingly but I still have a lot of

00:26:53,620 --> 00:26:56,770
coffee so let's run strong we have two

00:26:55,960 --> 00:26:58,960
more hours to go

00:26:56,770 --> 00:27:01,440
thank you Father thank you Paul thank

00:26:58,960 --> 00:27:04,390
you again thanks Microsoft we're your

00:27:01,440 --> 00:27:05,800
gracious sponsorship of drunk code and

00:27:04,390 --> 00:27:08,580
the open source communities through your

00:27:05,800 --> 00:27:08,580

YouTube URL: https://www.youtube.com/watch?v=JDx0MPTlhrg


