Title: Autonomous Exploration Path Planning in High-risk Environments using Aerial Robots
Publication date: 2020-07-07
Playlist: PX4 Developer Summit 2020 | Virtual
Description: 
	The PX4 Developer Summit is the annual flagship conference hosted by Dronecode for the drone development community. https://bit.ly/2YXe4Rd


Title: Autonomous Exploration Path Planning in High-risk Environments using Aerial Robots

Summary: In this talk we present a library of exploration path planning algorithms for aerial robots operating in high-risk settings such as underground environments. Given a previously unknown space, the exploration planners provide collision-free trajectories to navigate the space and build a complete map of the environment autonomously. The set of presented planners emphasize different aspects, such as on large-scale narrow-width subterranean environments, saliency-aware exploration, uncertainty-aware navigation and more. Among the multiple planners in the presented set, we will particularly emphasize on a novel graph-based planning framework purposefully built for aerial robots in subterranean environments such as underground mines, metropolitan infrastructure, and caverns. Given their often large-scale topology and complex network of branches, a bifurcated approach consisting of local and global planning layers is designed. The local planner employs a rapidly-exploring random graph to efficiently identify exploration paths within a local subspace. The global planner is developed as another layer to reposition the robot towards other unexplored areas over the global map when the robot reaches a dead-end situation. This planning algorithm is evaluated extensively in a variety of underground mines and bunkers in the U.S. and in Switzerland. The framework is also being used by the CERBERUS team in DARPA Subterranean Challenge which focuses on innovative robotics solutions for exploration and search missions in underground environments (https://www.subtchallenge.com/). Secondly, we will also focus on two multi-objective planners that co-optimize for exploration (extrinsic goal) and the intrinsic goals of localization uncertainty minimization and salient region re-observation. All the planners are interfaced via the Robot Operating System, a subset is open-sourced already, and to a great extent have been tested with PX4-enabled platforms.

A list of demonstration videos from our experiments and field deployments could be found at https://www.youtube.com/playlist?list=PL3qlfAXmuOFIr-m8ScWJXdDO88_feibTq

Software related to the proposed planners that are already open-sourced is available at
- Graph-based Exploration Planner for Subterranean Environments: https://github.com/unr-arl/gbplanner_ros (in progress)
- Motion-primitives Based Planner for Fast & Agile Exploration: https://github.com/unr-arl/mbplanner_ros (in progress)
- Visual Saliency-aware Exploration Planner: https://github.com/unr-arl/rhem_planner
- Uncertainty-aware Receding Horizon Exploration and Mapping: https://github.com/unr-arl/vseplanner 
- Tutorial: https://www.autonomousrobotslab.com/subtplanning.html

https://sched.co/cjPA
Captions: 
	00:00:05,000 --> 00:00:10,380
hello everyone my name is Tom I'm a

00:00:08,130 --> 00:00:12,630
ready a researcher from the autonomous

00:00:10,380 --> 00:00:14,940
robots lab at the University of Nevada

00:00:12,630 --> 00:00:17,039
Reno is this presentation I would like

00:00:14,940 --> 00:00:19,619
to share a set of planning approaches

00:00:17,039 --> 00:00:22,289
for the autonomous acceleration problem

00:00:19,619 --> 00:00:24,689
using aerial robots especially in high

00:00:22,289 --> 00:00:25,680
res settings such as subterranean

00:00:24,689 --> 00:00:28,109
environments

00:00:25,680 --> 00:00:29,970
I will also resent our full autonomy

00:00:28,109 --> 00:00:32,130
staff from the software development

00:00:29,970 --> 00:00:34,410
perspective and how we can buy different

00:00:32,130 --> 00:00:37,290
components from the low level flight

00:00:34,410 --> 00:00:39,210
control like the extra to higher level

00:00:37,290 --> 00:00:42,180
planning and perception in order to

00:00:39,210 --> 00:00:46,710
deploy the report solution into the real

00:00:42,180 --> 00:00:49,890
robotics platforms the main motivation

00:00:46,710 --> 00:00:53,219
for this work to achieve the Brazilian

00:00:49,890 --> 00:00:55,680
autonomy necessary to perform autonomous

00:00:53,219 --> 00:00:58,350
mission in harsh environment for simple

00:00:55,680 --> 00:01:02,789
and a low miles urban infrastructure

00:00:58,350 --> 00:01:04,530
Caves etc this has a wide range of

00:01:02,789 --> 00:01:06,920
application including those of

00:01:04,530 --> 00:01:09,659
scientific exploration mission and

00:01:06,920 --> 00:01:12,479
search-and-rescue operation however such

00:01:09,659 --> 00:01:14,790
environment imposed multiple challenges

00:01:12,479 --> 00:01:17,759
for current state-of-the-art robotics

00:01:14,790 --> 00:01:19,979
autonomy first the robots perception

00:01:17,759 --> 00:01:23,310
could face with sensing the ready

00:01:19,979 --> 00:01:25,830
condition then second the last scale-up

00:01:23,310 --> 00:01:28,320
environment and its diversity in terrain

00:01:25,830 --> 00:01:31,590
and geometry require a robust and

00:01:28,320 --> 00:01:33,270
scalable planning approach also high

00:01:31,590 --> 00:01:36,210
bandwidth communication for remote

00:01:33,270 --> 00:01:37,979
control often unavailable and last but

00:01:36,210 --> 00:01:40,380
not least is difficult to be plural

00:01:37,979 --> 00:01:42,810
reward and acquire data needed for

00:01:40,380 --> 00:01:45,630
learning based approaches therefore

00:01:42,810 --> 00:01:49,860
they real need for truly resilient

00:01:45,630 --> 00:01:52,020
autonomy solution insert cases the focus

00:01:49,860 --> 00:01:53,759
of this talk about the informative

00:01:52,020 --> 00:01:56,610
planning approach for autonomous

00:01:53,759 --> 00:02:00,540
actuation in those settings basically

00:01:56,610 --> 00:02:03,060
the acceleration planner need to provide

00:02:00,540 --> 00:02:05,159
feasible baths for the robot to safely

00:02:03,060 --> 00:02:07,649
navigate inside a river sleep and no

00:02:05,159 --> 00:02:09,899
sway and build a complete map of the

00:02:07,649 --> 00:02:13,290
environment using his own ball rain

00:02:09,899 --> 00:02:13,800
sensors the challenges here are first

00:02:13,290 --> 00:02:16,950
relay

00:02:13,800 --> 00:02:20,820
to scalability of the planning solution

00:02:16,950 --> 00:02:24,090
insert last care setting and second is

00:02:20,820 --> 00:02:27,480
how to reliably deal with a variety of

00:02:24,090 --> 00:02:30,030
terrains and geometries and furthermore

00:02:27,480 --> 00:02:32,580
the planer would choose between multiple

00:02:30,030 --> 00:02:35,040
branches or level and decide where it

00:02:32,580 --> 00:02:37,590
should physic next or when the robot

00:02:35,040 --> 00:02:41,310
should return to home in many practical

00:02:37,590 --> 00:02:44,010
scenarios the robot also required to

00:02:41,310 --> 00:02:46,710
perform later gathering dust for the

00:02:44,010 --> 00:02:48,420
ball in session with camera therefore

00:02:46,710 --> 00:02:51,270
the planer should be able to balance

00:02:48,420 --> 00:02:54,170
between a floor exploration and other

00:02:51,270 --> 00:02:54,170
goals as well

00:02:54,380 --> 00:03:01,350
we aim to tackle on those challenges in

00:02:58,140 --> 00:03:03,410
our research the plenary also decides to

00:03:01,350 --> 00:03:08,520
support different robotics platforms

00:03:03,410 --> 00:03:10,110
including aerial and grab a hose is this

00:03:08,520 --> 00:03:13,950
slide and you could see in the diagram

00:03:10,110 --> 00:03:16,590
at the bottom it is the overview of the

00:03:13,950 --> 00:03:19,800
planning approach the blender a design

00:03:16,590 --> 00:03:23,100
at bifurcated global and Lobo layers in

00:03:19,800 --> 00:03:26,760
which the global plenary focus on fast

00:03:23,100 --> 00:03:28,910
operation within a loco sub space

00:03:26,760 --> 00:03:31,790
surrounding the current robots position

00:03:28,910 --> 00:03:35,520
the global planner on the other hand a

00:03:31,790 --> 00:03:37,860
taken place over the global map and it

00:03:35,520 --> 00:03:41,520
is responsible for relocating the robots

00:03:37,860 --> 00:03:43,890
you work order and slow areas when the

00:03:41,520 --> 00:03:46,230
robot breaches and that end or triggers

00:03:43,890 --> 00:03:48,360
the holding operation when necessary I

00:03:46,230 --> 00:03:52,160
will explain in further detail regarding

00:03:48,360 --> 00:03:55,709
each pending layer in the coming slides

00:03:52,160 --> 00:03:59,580
regarding the local planner here will

00:03:55,709 --> 00:04:02,070
repose graph-based metals that first use

00:03:59,580 --> 00:04:05,790
grap locally around the curve of robots

00:04:02,070 --> 00:04:08,310
position then utilize the dice to our

00:04:05,790 --> 00:04:11,370
algorithm to compute on the soft ik path

00:04:08,310 --> 00:04:13,590
from the sharper dice and finally

00:04:11,370 --> 00:04:15,989
evaluate the acceleration gain for each

00:04:13,590 --> 00:04:18,900
branch the bath with the high

00:04:15,989 --> 00:04:23,400
acceleration gain he chosen and sent to

00:04:18,900 --> 00:04:25,440
the controller to ask you the excavation

00:04:23,400 --> 00:04:27,040
again in this case here immorally

00:04:25,440 --> 00:04:29,500
computed from the

00:04:27,040 --> 00:04:32,560
parlament again which he expected volume

00:04:29,500 --> 00:04:35,070
by sea by the rain sensor at its

00:04:32,560 --> 00:04:38,320
birthdays epigraph even the current map

00:04:35,070 --> 00:04:41,260
again even further decay by two factors

00:04:38,320 --> 00:04:43,810
the first one is related to the land of

00:04:41,260 --> 00:04:46,540
his birth to favor shorter path for

00:04:43,810 --> 00:04:48,760
rapid acceleration and the second one in

00:04:46,540 --> 00:04:51,340
direction of the bath they seek to avoid

00:04:48,760 --> 00:04:53,890
certain changes in the acceleration

00:04:51,340 --> 00:04:58,300
direction which he often desirable in

00:04:53,890 --> 00:05:01,750
practice the global planner on the other

00:04:58,300 --> 00:05:04,870
hand utilized the map on the global

00:05:01,750 --> 00:05:08,410
level to my decision in any case that

00:05:04,870 --> 00:05:10,990
the local plenary unable to provide an

00:05:08,410 --> 00:05:13,210
effective solution the global plenary

00:05:10,990 --> 00:05:15,760
engaged to revise the global

00:05:13,210 --> 00:05:19,570
repositioning bath to try the robot to

00:05:15,760 --> 00:05:22,720
work another pan map area he also keeps

00:05:19,570 --> 00:05:24,670
track of the shark mouth to return to

00:05:22,720 --> 00:05:28,060
home to trigger the homing operation

00:05:24,670 --> 00:05:30,460
when necessary the global grab a beaut

00:05:28,060 --> 00:05:33,400
incremented a and maintain only a

00:05:30,460 --> 00:05:36,810
minimal set of potential frontiers so is

00:05:33,400 --> 00:05:41,080
he fast to be used at any time in the

00:05:36,810 --> 00:05:44,470
diagram as an example they a global

00:05:41,080 --> 00:05:46,720
graph with two frontier f1 and f2 the

00:05:44,470 --> 00:05:49,690
robot reaches a dead end at position

00:05:46,720 --> 00:05:54,340
three and the global plan early about to

00:05:49,690 --> 00:05:56,710
be engaged in this case the problem to

00:05:54,340 --> 00:05:59,680
decide which frontier does the robot

00:05:56,710 --> 00:06:02,290
stroke witnessed a difficult due to the

00:05:59,680 --> 00:06:04,600
scale of environment so is this what we

00:06:02,290 --> 00:06:06,900
report two basic principles the first

00:06:04,600 --> 00:06:10,240
one knee instructing a set of reachable

00:06:06,900 --> 00:06:12,940
frontiers which depends on the remaining

00:06:10,240 --> 00:06:15,280
flight time and the time to get to the

00:06:12,940 --> 00:06:17,620
frontier and more importantly in the

00:06:15,280 --> 00:06:19,720
worst case the robots do have enough

00:06:17,620 --> 00:06:24,310
time to return to home from the frontier

00:06:19,720 --> 00:06:27,070
and second he is referring the closeby

00:06:24,310 --> 00:06:30,210
frontier which are faster to arrive in

00:06:27,070 --> 00:06:33,790
order to continue the mission sooner

00:06:30,210 --> 00:06:36,880
let's show in the diagram there are

00:06:33,790 --> 00:06:38,620
three scenarios that could happen the

00:06:36,880 --> 00:06:39,770
first one which I caught the worst case

00:06:38,620 --> 00:06:42,530
in which the

00:06:39,770 --> 00:06:45,379
remaining time in no sufficient to visit

00:06:42,530 --> 00:06:48,169
any frontier so the robot should return

00:06:45,379 --> 00:06:50,599
to home immediately and the best case in

00:06:48,169 --> 00:06:53,060
arrow is does the remaining in rose is

00:06:50,599 --> 00:06:56,509
too high which allows the robot to

00:06:53,060 --> 00:06:58,340
resist the closest from tf2 to continue

00:06:56,509 --> 00:07:01,550
the mission as soon as possible

00:06:58,340 --> 00:07:04,580
otherwise the robot could visit the from

00:07:01,550 --> 00:07:06,860
tf1 which he neared the home location so

00:07:04,580 --> 00:07:12,590
it could explore a bit further into f1

00:07:06,860 --> 00:07:15,319
direction then go home after in this is

00:07:12,590 --> 00:07:17,960
Raymond we evaluated a whole planning

00:07:15,319 --> 00:07:21,139
framework in an active underground while

00:07:17,960 --> 00:07:23,240
in Winnemucca Nevada the robot first

00:07:21,139 --> 00:07:26,840
continued the acceleration with just

00:07:23,240 --> 00:07:28,819
local blender living to lab range you

00:07:26,840 --> 00:07:31,849
could also see here the environment is

00:07:28,819 --> 00:07:34,099
in low light and very dusty the global

00:07:31,849 --> 00:07:36,889
player isn't trigger was the group of

00:07:34,099 --> 00:07:39,409
reaches a pretty v boundary of

00:07:36,889 --> 00:07:42,229
environment on the left side this is

00:07:39,409 --> 00:07:44,930
limited for testing purposes it is then

00:07:42,229 --> 00:07:47,770
repositioned toward the right branch and

00:07:44,930 --> 00:07:50,030
continue again with the local blender

00:07:47,770 --> 00:07:53,830
eventually the homing is triggered to

00:07:50,030 --> 00:07:57,169
bring the robot to the starting location

00:07:53,830 --> 00:08:00,469
given limited flight time of aerial

00:07:57,169 --> 00:08:03,229
robots injera will pose another approach

00:08:00,469 --> 00:08:06,289
using motion remedies exploiting the

00:08:03,229 --> 00:08:09,050
dynamics of fly system to achieve high

00:08:06,289 --> 00:08:11,810
acceleration speed the random symbols

00:08:09,050 --> 00:08:15,050
are 3d acceleration control signals and

00:08:11,810 --> 00:08:18,110
each trajectories is further extended

00:08:15,050 --> 00:08:19,729
with an additional recovery Chapman to

00:08:18,110 --> 00:08:22,490
bring the robot to the hovering stay

00:08:19,729 --> 00:08:26,419
immediately for safety reasons when it

00:08:22,490 --> 00:08:29,479
flies in the high speed in this

00:08:26,419 --> 00:08:32,000
experiment we demonstrate the proposed

00:08:29,479 --> 00:08:34,520
approach utilizing motion remedies for

00:08:32,000 --> 00:08:37,370
fast and as I acceleration in an

00:08:34,520 --> 00:08:39,440
underground tunnel the robot will export

00:08:37,370 --> 00:08:42,409
to fly up to one point a meter per

00:08:39,440 --> 00:08:46,160
second and map the whole mentor know in

00:08:42,409 --> 00:08:50,660
this case around 170 meter within only

00:08:46,160 --> 00:08:53,030
90 seconds this reserve duration is

00:08:50,660 --> 00:08:55,880
alive with an ongoing challenge

00:08:53,030 --> 00:08:58,340
when I buy dhaba possibly channels the

00:08:55,880 --> 00:09:01,490
focus of the challenge on three ties of

00:08:58,340 --> 00:09:05,180
the subterranean vitamin my urban and

00:09:01,490 --> 00:09:07,700
cave his team could have multiple robots

00:09:05,180 --> 00:09:10,940
and have a fist map time to explore

00:09:07,700 --> 00:09:15,530
search and republication of ratified

00:09:10,940 --> 00:09:19,370
artifacts just as survival phone and by

00:09:15,530 --> 00:09:21,950
pike the whole operation he commanded

00:09:19,370 --> 00:09:24,980
through one single human operator from a

00:09:21,950 --> 00:09:27,680
base station our lab choi the challenge

00:09:24,980 --> 00:09:29,960
under the team Cerberus the team messed

00:09:27,680 --> 00:09:33,830
you up several advanced platforms such

00:09:29,960 --> 00:09:36,380
as walking and flying robots overall we

00:09:33,830 --> 00:09:38,810
focus on autonomy solution for each

00:09:36,380 --> 00:09:41,630
robotic platform that requires minimal

00:09:38,810 --> 00:09:44,600
are only high-level commands from the

00:09:41,630 --> 00:09:47,140
operator the autonomous that a further

00:09:44,600 --> 00:09:48,350
robusta fight through mouth sharing and

00:09:47,140 --> 00:09:51,290
co-localization

00:09:48,350 --> 00:09:54,260
among robust the repose planning

00:09:51,290 --> 00:09:56,840
framework being utilized from on the

00:09:54,260 --> 00:10:01,520
robots of the team servers in a nice

00:09:56,840 --> 00:10:02,930
light I will show you an example is this

00:10:01,520 --> 00:10:05,180
video I would like to share the

00:10:02,930 --> 00:10:07,460
utilization of the repose planning

00:10:05,180 --> 00:10:10,490
framework in the context of diversity

00:10:07,460 --> 00:10:13,220
challenge to see the result from a real

00:10:10,490 --> 00:10:16,490
mission happening during the urban

00:10:13,220 --> 00:10:20,000
circuit event event was organized in the

00:10:16,490 --> 00:10:23,600
spring 2020 inside an abandoned power

00:10:20,000 --> 00:10:26,870
plant in Seattle the aerial platform in

00:10:23,600 --> 00:10:29,120
this video considering a task out for

00:10:26,870 --> 00:10:32,060
the team was started from a gauged

00:10:29,120 --> 00:10:36,140
entrance then autonomously is low and

00:10:32,060 --> 00:10:38,660
marked environment and finally the home

00:10:36,140 --> 00:10:44,480
means were trigger and the robot safely

00:10:38,660 --> 00:10:46,610
flew by to the entrance in this slide I

00:10:44,480 --> 00:10:49,520
would like to show several related work

00:10:46,610 --> 00:10:53,000
from our lab in which we investigated on

00:10:49,520 --> 00:10:55,100
how to optimize the acceleration go with

00:10:53,000 --> 00:10:57,860
another object which is usually a case

00:10:55,100 --> 00:10:59,570
in a practice for example in the world

00:10:57,860 --> 00:11:01,820
on the lab we emphasize on how to

00:10:59,570 --> 00:11:04,340
minimize the localization error during

00:11:01,820 --> 00:11:06,980
the acceleration which a reticle when we

00:11:04,340 --> 00:11:10,649
you camera for visual odometry

00:11:06,980 --> 00:11:13,139
the video show on the right he related

00:11:10,649 --> 00:11:15,720
to another work that's aimed to focus

00:11:13,139 --> 00:11:19,529
the robots observation to work visually

00:11:15,720 --> 00:11:23,250
salient errors while exploding the

00:11:19,529 --> 00:11:25,880
environment this aim to gather more

00:11:23,250 --> 00:11:29,430
relevant data for further monitoring or

00:11:25,880 --> 00:11:32,360
inspection tasks in the next part of

00:11:29,430 --> 00:11:35,100
this presentation I will talk about our

00:11:32,360 --> 00:11:39,300
autonomy stack from the software

00:11:35,100 --> 00:11:42,630
implementation standpoint the autonomy

00:11:39,300 --> 00:11:45,089
stack is developed based on draws the

00:11:42,630 --> 00:11:48,000
low-level layers are hardware drivers

00:11:45,089 --> 00:11:50,970
and the autopilot for them will be a

00:11:48,000 --> 00:11:53,430
swath of light control data from sensors

00:11:50,970 --> 00:11:56,010
and the Air Force are converted to rows

00:11:53,430 --> 00:12:00,060
by messages to communicate with higher

00:11:56,010 --> 00:12:02,579
levels the middleware layer consists of

00:12:00,060 --> 00:12:05,639
major components searched blending

00:12:02,579 --> 00:12:08,100
reception in control in the application

00:12:05,639 --> 00:12:10,230
layer of harvest and cutie are utilized

00:12:08,100 --> 00:12:14,790
for user interface in further

00:12:10,230 --> 00:12:17,010
visualization in further details this

00:12:14,790 --> 00:12:20,579
slide explained the main components in

00:12:17,010 --> 00:12:23,010
the middleware layer from the left side

00:12:20,579 --> 00:12:26,430
you can see the stay estimation consists

00:12:23,010 --> 00:12:29,220
of three main modules first slam

00:12:26,430 --> 00:12:31,800
solution usually at low rate for example

00:12:29,220 --> 00:12:34,350
file to xx which command when we you

00:12:31,800 --> 00:12:36,420
camera elijah and second the

00:12:34,350 --> 00:12:39,329
localization and map to be further

00:12:36,420 --> 00:12:42,180
improve assume information sharing among

00:12:39,329 --> 00:12:45,600
multiple robots operating in nearby

00:12:42,180 --> 00:12:48,800
errors and finally the high update rate

00:12:45,600 --> 00:12:49,920
50 host estimator mainly for control

00:12:48,800 --> 00:12:52,440
effuse

00:12:49,920 --> 00:12:55,370
outer pylons i'm use and audiometry

00:12:52,440 --> 00:12:58,019
information moving to the right the

00:12:55,370 --> 00:13:00,810
collision checking and gain calculation

00:12:58,019 --> 00:13:03,660
for planning is separated into map

00:13:00,810 --> 00:13:06,240
server which is responsible for male

00:13:03,660 --> 00:13:08,940
teen saving server and map planar

00:13:06,240 --> 00:13:11,670
interface which have tracked the

00:13:08,940 --> 00:13:15,500
connection between blender and map

00:13:11,670 --> 00:13:19,470
server through common api's this also

00:13:15,500 --> 00:13:19,950
many other practical checking's such as

00:13:19,470 --> 00:13:23,060
no

00:13:19,950 --> 00:13:27,020
geo friendzone beside collision checking

00:13:23,060 --> 00:13:29,490
this important scene is allows us to

00:13:27,020 --> 00:13:32,010
experiment or test with different

00:13:29,490 --> 00:13:34,740
mapping frameworks without rewriting the

00:13:32,010 --> 00:13:38,790
planar code the local and global

00:13:34,740 --> 00:13:41,940
planners are separated into two packages

00:13:38,790 --> 00:13:45,120
and have several key function show in

00:13:41,940 --> 00:13:48,600
the diagram and also as explained before

00:13:45,120 --> 00:13:50,640
in rivers part of the resin tation the

00:13:48,600 --> 00:13:54,120
mission manager in this case manage the

00:13:50,640 --> 00:13:58,230
interface with the UI and perform system

00:13:54,120 --> 00:14:00,900
he'll check to inform the user the elbow

00:13:58,230 --> 00:14:03,120
from the blender is sent to blender

00:14:00,900 --> 00:14:05,750
control interface which ensure the

00:14:03,120 --> 00:14:08,700
independence between the planner and the

00:14:05,750 --> 00:14:11,460
controller as well he perform further

00:14:08,700 --> 00:14:13,500
like trajectory smoothing a quest follow

00:14:11,460 --> 00:14:17,550
a stay machine to keep track with the

00:14:13,500 --> 00:14:19,650
controller and finally we use a model

00:14:17,550 --> 00:14:24,240
predictive control for trajectory

00:14:19,650 --> 00:14:26,760
following we also leverage the

00:14:24,240 --> 00:14:29,250
simulation to evaluate extensively and

00:14:26,760 --> 00:14:31,470
further improve the planer the

00:14:29,250 --> 00:14:34,200
simulation II based on Ross gazebo and

00:14:31,470 --> 00:14:37,440
opens of road tests in a simulation a

00:14:34,200 --> 00:14:40,200
variety of sensors such as camera and

00:14:37,440 --> 00:14:42,270
lida are available we also customize

00:14:40,200 --> 00:14:46,140
their parameters to be close to the

00:14:42,270 --> 00:14:48,120
hardware on our robot we also include a

00:14:46,140 --> 00:14:51,270
set of different underground environment

00:14:48,120 --> 00:14:54,660
for further evaluation such as a few

00:14:51,270 --> 00:14:58,440
long work mice and a specific Roman

00:14:54,660 --> 00:15:02,070
pillar my and on and also a few other

00:14:58,440 --> 00:15:06,000
environment that reconstructed from real

00:15:02,070 --> 00:15:08,640
underground facilities the

00:15:06,000 --> 00:15:12,480
aforementioned planers urban socks in

00:15:08,640 --> 00:15:14,760
our github including the graphics and

00:15:12,480 --> 00:15:17,370
motion limited by his blender that we

00:15:14,760 --> 00:15:19,770
have been using in the subtitle and

00:15:17,370 --> 00:15:24,420
project some of them are still in

00:15:19,770 --> 00:15:26,880
progress but we will share them soon in

00:15:24,420 --> 00:15:30,210
our sequester we have been using several

00:15:26,880 --> 00:15:32,730
other great organs or packages that you

00:15:30,210 --> 00:15:32,880
might find some new phones as well for

00:15:32,730 --> 00:15:36,120
the

00:15:32,880 --> 00:15:38,520
applause and the optimal packages for

00:15:36,120 --> 00:15:42,390
mapping which is very important for the

00:15:38,520 --> 00:15:45,230
planner moving forward we are

00:15:42,390 --> 00:15:49,440
investigating in building a miniaturized

00:15:45,230 --> 00:15:51,810
platform based on the px4 occupy lot

00:15:49,440 --> 00:15:55,650
does he able to explore faster and

00:15:51,810 --> 00:15:57,510
deeper into narrow spaces an also live

00:15:55,650 --> 00:15:59,910
way to be carried by other ground

00:15:57,510 --> 00:16:03,000
platforms to extend the exploration

00:15:59,910 --> 00:16:06,930
range a fly's mo of search platform a

00:16:03,000 --> 00:16:09,780
show in this video with us I would like

00:16:06,930 --> 00:16:12,000
to thanks again for your attention

00:16:09,780 --> 00:16:16,250
and I'm looking forward to your rations

00:16:12,000 --> 00:16:16,250

YouTube URL: https://www.youtube.com/watch?v=ijZMRHsQlQo


