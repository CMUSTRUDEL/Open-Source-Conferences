Title: An In-depth Look at the Multicopter Control System Architecture â€” PX4 Developer Summit Virtual 2020
Publication date: 2020-07-06
Playlist: PX4 Developer Summit 2020 | Virtual
Description: 
	The PX4 Developer Summit is the annual flagship conference hosted by Dronecode for the drone development community.

An In-depth Look at the Multicopter Control System Architecture

This session takes a deep dive into the multicopter control system. The current controller architecture will be presented and explained. Block diagrams and the relevant sections in code of each individual controller will be given.

The aim is to provide sufficient information for new developers that would like to design a control system for a multicopter either by tuning the current PID gains, extending and/or modifying the current controllers. To do this, knowledge of the control system architecture is required. This session provides that information to empower developers.

https://sched.co/cjOm
Captions: 
	00:00:04,670 --> 00:00:08,910
good morning everyone it is such a

00:00:07,080 --> 00:00:11,490
privilege for me to present here at the

00:00:08,910 --> 00:00:13,710
px4 developer summit my name is Antonia

00:00:11,490 --> 00:00:15,330
Rasmus I'm from South Africa and I was

00:00:13,710 --> 00:00:17,010
introduced to Peaks for while I was

00:00:15,330 --> 00:00:19,619
doing my masters at Stalin Bosch

00:00:17,010 --> 00:00:21,330
university during this time I was

00:00:19,619 --> 00:00:24,090
working on developing a control system

00:00:21,330 --> 00:00:26,910
for a multicopter carrying an unknown

00:00:24,090 --> 00:00:29,070
swinging payload this is where I gained

00:00:26,910 --> 00:00:31,380
an understanding of the multicopter

00:00:29,070 --> 00:00:33,480
control architecture implemented in px4

00:00:31,380 --> 00:00:37,920
and that is what I will discuss and

00:00:33,480 --> 00:00:40,739
explore in this presentation the

00:00:37,920 --> 00:00:42,120
structure of this talk is as follows for

00:00:40,739 --> 00:00:44,550
each controller I will present

00:00:42,120 --> 00:00:46,969
architecture and provide a diagram of

00:00:44,550 --> 00:00:49,379
the controller explaining each component

00:00:46,969 --> 00:00:51,270
thereafter I will point out which

00:00:49,379 --> 00:00:52,980
parameters are of interest to that

00:00:51,270 --> 00:00:55,800
controller and what the relevance of

00:00:52,980 --> 00:00:57,809
each parameter is this will allow a user

00:00:55,800 --> 00:01:00,930
to tweak these parameters while having a

00:00:57,809 --> 00:01:02,670
grasp of how to fix the controller for

00:01:00,930 --> 00:01:04,619
those of you that want to extend or

00:01:02,670 --> 00:01:06,659
modify the controllers I will also point

00:01:04,619 --> 00:01:08,400
out where the controller was implemented

00:01:06,659 --> 00:01:11,010
in the code so that you can take a look

00:01:08,400 --> 00:01:13,020
at that the scope of this talk is

00:01:11,010 --> 00:01:15,390
focused on the controller specifically

00:01:13,020 --> 00:01:17,430
if you are interested in a wider scope

00:01:15,390 --> 00:01:19,500
of the multicopter control on px4 I

00:01:17,430 --> 00:01:21,420
suggest taking a look at another talk

00:01:19,500 --> 00:01:23,600
that will be done here at the developer

00:01:21,420 --> 00:01:26,159
summit by Matthias and Mathieu an

00:01:23,600 --> 00:01:30,450
overview of multicopter control from

00:01:26,159 --> 00:01:33,450
sensors to motors this is an overview of

00:01:30,450 --> 00:01:35,340
the complete control architecture from

00:01:33,450 --> 00:01:37,619
the left we have the position controller

00:01:35,340 --> 00:01:40,200
the velocity controller a conversion

00:01:37,619 --> 00:01:42,630
block the angle controller the angular

00:01:40,200 --> 00:01:44,399
rate controller and lastly the mixer

00:01:42,630 --> 00:01:47,250
which outputs commands to the different

00:01:44,399 --> 00:01:50,040
motors this architecture is known as a

00:01:47,250 --> 00:01:51,899
cascaded control architecture in

00:01:50,040 --> 00:01:54,479
cascaded control you have an inner

00:01:51,899 --> 00:01:56,460
controller and an outer controller the

00:01:54,479 --> 00:01:58,530
outer controller receives a setpoint and

00:01:56,460 --> 00:02:01,049
generates a command which serves as a

00:01:58,530 --> 00:02:02,549
set point for the inner controller the

00:02:01,049 --> 00:02:05,219
inner controller then produces an

00:02:02,549 --> 00:02:07,380
actuator command so as you can see in

00:02:05,219 --> 00:02:09,989
this case our innermost controller is

00:02:07,380 --> 00:02:12,060
the angular rate controller it actually

00:02:09,989 --> 00:02:14,010
commands virtual actuators equivalent to

00:02:12,060 --> 00:02:16,800
an aileron elevator and rudder

00:02:14,010 --> 00:02:18,840
the mixer receives these commands along

00:02:16,800 --> 00:02:20,760
with the thrust and mixes these values

00:02:18,840 --> 00:02:23,819
to produce an actual motor command to

00:02:20,760 --> 00:02:26,430
sync to the motors outside of the angle

00:02:23,819 --> 00:02:28,650
rate angular rate controller we have the

00:02:26,430 --> 00:02:30,480
angle controller which receives an angle

00:02:28,650 --> 00:02:32,810
setpoint and commands an angular rate

00:02:30,480 --> 00:02:34,950
which is handled by the red controller

00:02:32,810 --> 00:02:37,320
outside of the angle controller we have

00:02:34,950 --> 00:02:39,600
the velocity controller the velocity

00:02:37,320 --> 00:02:41,730
velocity controller receives a velocity

00:02:39,600 --> 00:02:44,610
setpoint and commands an acceleration

00:02:41,730 --> 00:02:46,770
this acceleration along with the desired

00:02:44,610 --> 00:02:48,840
your angle is first converted to an

00:02:46,770 --> 00:02:51,120
attitude to sync to that angle

00:02:48,840 --> 00:02:54,120
controller and a thrust descent to the

00:02:51,120 --> 00:02:56,070
mixer our outermost controller is a

00:02:54,120 --> 00:02:57,840
position controller which receives a

00:02:56,070 --> 00:03:00,480
position setpoint and commands a

00:02:57,840 --> 00:03:03,000
velocity all of these controllers are

00:03:00,480 --> 00:03:05,070
PID controllers in this talk I'm going

00:03:03,000 --> 00:03:07,410
to assume that you know what PID control

00:03:05,070 --> 00:03:08,910
is if you don't there are a lot of

00:03:07,410 --> 00:03:11,209
resources out there that explains the

00:03:08,910 --> 00:03:13,470
principles of PID control very well

00:03:11,209 --> 00:03:16,110
notice here that the velocity and

00:03:13,470 --> 00:03:18,780
angular rate controllers have all of the

00:03:16,110 --> 00:03:20,940
P I and D gains whereas the position and

00:03:18,780 --> 00:03:23,700
angle controllers are only proportional

00:03:20,940 --> 00:03:25,769
controllers all of these controllers

00:03:23,700 --> 00:03:28,530
also has a feed-forward component which

00:03:25,769 --> 00:03:30,959
is not represented in this diagram this

00:03:28,530 --> 00:03:32,760
results in better tracking for instance

00:03:30,959 --> 00:03:35,100
if you want to fly to a specific

00:03:32,760 --> 00:03:37,170
position at a specific speed let's say 5

00:03:35,100 --> 00:03:39,420
meters per second then you can add the

00:03:37,170 --> 00:03:43,350
speed to the velocity setpoint produced

00:03:39,420 --> 00:03:45,299
by the position controller every one of

00:03:43,350 --> 00:03:48,420
these controllers is a control loop

00:03:45,299 --> 00:03:50,610
running at a specific rate the angular

00:03:48,420 --> 00:03:52,769
rate controller runs at 1 kilohertz if

00:03:50,610 --> 00:03:55,380
the hardware supports it the angle

00:03:52,769 --> 00:03:57,510
controller runs at 258 and both the

00:03:55,380 --> 00:04:00,209
position and velocity controllers run at

00:03:57,510 --> 00:04:01,709
50 Hertz I would like to point out that

00:04:00,209 --> 00:04:03,450
the purpose of this session is to

00:04:01,709 --> 00:04:05,430
provide an overview of the general

00:04:03,450 --> 00:04:07,739
multicopter control system architecture

00:04:05,430 --> 00:04:10,140
and therefore I will not go into detail

00:04:07,739 --> 00:04:12,900
on how things like saturation and

00:04:10,140 --> 00:04:15,150
specific conversions are done in the

00:04:12,900 --> 00:04:17,130
rest of this presentation I will take a

00:04:15,150 --> 00:04:19,560
closer look at each of these controllers

00:04:17,130 --> 00:04:21,660
I will start at the innermost angular

00:04:19,560 --> 00:04:26,169
rate controller and work my way out from

00:04:21,660 --> 00:04:29,139
there to the position controller this is

00:04:26,169 --> 00:04:31,780
of the angular rate PID controller as

00:04:29,139 --> 00:04:33,520
you can see from the left it receives a

00:04:31,780 --> 00:04:36,550
set point and an angular velocity

00:04:33,520 --> 00:04:38,050
measurement these values are subtracted

00:04:36,550 --> 00:04:39,999
to produce an error which gets

00:04:38,050 --> 00:04:42,639
propagated through the PID controller to

00:04:39,999 --> 00:04:45,129
produce a command this commode is first

00:04:42,639 --> 00:04:47,439
saturated the limits of minus 1 and 1

00:04:45,129 --> 00:04:50,020
because px4 deals with normalized values

00:04:47,439 --> 00:04:51,490
and finally the Virtual actuator command

00:04:50,020 --> 00:04:54,430
is obtained which is the aileron

00:04:51,490 --> 00:04:55,840
elevator and rudder commode you will

00:04:54,430 --> 00:05:01,360
notice that there are actually four

00:04:55,840 --> 00:05:02,830
gains that is the PID and K gains this

00:05:01,360 --> 00:05:05,529
is because there are two different

00:05:02,830 --> 00:05:08,050
implementations of PID control the

00:05:05,529 --> 00:05:10,240
standard form and the parallel form in

00:05:08,050 --> 00:05:11,529
the standard form the P gain in this

00:05:10,240 --> 00:05:13,389
diagram will be set to 1

00:05:11,529 --> 00:05:16,360
and the K gain is then known as a

00:05:13,389 --> 00:05:18,490
proportional term in the parallel form

00:05:16,360 --> 00:05:20,050
the K gain in this diagram is set to 1

00:05:18,490 --> 00:05:22,150
and the P gain is then known as a

00:05:20,050 --> 00:05:23,650
proportional term you can choose

00:05:22,150 --> 00:05:25,800
whichever form you are comfortable with

00:05:23,650 --> 00:05:28,360
by setting the appropriate gain to one

00:05:25,800 --> 00:05:31,330
so that was a proportional term let's

00:05:28,360 --> 00:05:33,669
take a look at the integral term the

00:05:31,330 --> 00:05:36,669
integral term has limits to avoid

00:05:33,669 --> 00:05:40,599
integral wind-up and also to limit the

00:05:36,669 --> 00:05:41,740
control authority of the integrator you

00:05:40,599 --> 00:05:43,930
will also notice that the derivative

00:05:41,740 --> 00:05:46,479
term is actually computed from the

00:05:43,930 --> 00:05:48,069
measurement and not the error this is to

00:05:46,479 --> 00:05:50,199
eliminate a phenomenon known as the

00:05:48,069 --> 00:05:51,849
derivative kick you can go lick this up

00:05:50,199 --> 00:05:55,270
and its effects if you have not heard of

00:05:51,849 --> 00:05:57,520
it before on the derivative path is a

00:05:55,270 --> 00:05:59,229
low-pass filter the assistant filter is

00:05:57,520 --> 00:06:00,909
the noisy measurements because if noise

00:05:59,229 --> 00:06:03,039
is differentiated it gets amplified

00:06:00,909 --> 00:06:05,409
which can lead to all sorts of bad

00:06:03,039 --> 00:06:08,589
things so a low-pass filter is applied

00:06:05,409 --> 00:06:10,569
to avoid this so as you can see the

00:06:08,589 --> 00:06:12,520
standard PID structure is implemented

00:06:10,569 --> 00:06:16,680
here along with a couple of additions

00:06:12,520 --> 00:06:16,680
for safety in practical systems

00:06:16,750 --> 00:06:20,200
here are the different parameters you

00:06:18,820 --> 00:06:23,950
can tweak for the angular rate

00:06:20,200 --> 00:06:26,860
controller the KP I and D terms are

00:06:23,950 --> 00:06:30,370
denoted by the parameters MC roll rate K

00:06:26,860 --> 00:06:34,390
P I and D the same parameters exist for

00:06:30,370 --> 00:06:36,310
both pitch and yaw the MCR are in lump

00:06:34,390 --> 00:06:40,210
parameter is a limit of the integral

00:06:36,310 --> 00:06:42,520
term the RR can be replaced by P or or Y

00:06:40,210 --> 00:06:45,010
or for pitch rate or you're right

00:06:42,520 --> 00:06:46,600
the parameter to adjust the cutoff

00:06:45,010 --> 00:06:49,540
frequency of the filter on the

00:06:46,600 --> 00:06:52,450
derivative pause is I am you d gyro

00:06:49,540 --> 00:06:55,720
cuddles I would also like to point out

00:06:52,450 --> 00:06:58,840
another filter adjusted by the IMU gyro

00:06:55,720 --> 00:07:01,210
cutoff parameter this filters the

00:06:58,840 --> 00:07:02,890
angular velocity measurements before it

00:07:01,210 --> 00:07:06,130
is received by the angular rate

00:07:02,890 --> 00:07:08,590
controller the values being filtered on

00:07:06,130 --> 00:07:10,900
the derivative pause have actually

00:07:08,590 --> 00:07:12,180
already been filtered by the IMU gyro

00:07:10,900 --> 00:07:15,130
cutoff filter

00:07:12,180 --> 00:07:17,410
therefore if the IMU gyro cutoff filter

00:07:15,130 --> 00:07:20,110
is sufficiently low the derivative

00:07:17,410 --> 00:07:22,060
filter might not be needed on the other

00:07:20,110 --> 00:07:24,010
side if you are having problems with the

00:07:22,060 --> 00:07:25,870
noise on the derivative pot you can

00:07:24,010 --> 00:07:28,600
lower the derivative filter cutoff

00:07:25,870 --> 00:07:31,690
frequency without lowering the IMU gyro

00:07:28,600 --> 00:07:33,640
cutoff frequency these are the most

00:07:31,690 --> 00:07:36,970
important parameters to be aware of when

00:07:33,640 --> 00:07:39,370
tweaking the angular rate controller the

00:07:36,970 --> 00:07:42,669
control law is implemented in the MC

00:07:39,370 --> 00:07:45,160
rate control module in the rate control

00:07:42,669 --> 00:07:47,800
dot CPP file you will find an update

00:07:45,160 --> 00:07:49,900
function like the one shown here the

00:07:47,800 --> 00:07:51,580
control law is implemented in this

00:07:49,900 --> 00:07:53,919
function and if you are interested to

00:07:51,580 --> 00:07:58,120
extend or to modify the controller this

00:07:53,919 --> 00:08:00,760
would be the place to start moving on to

00:07:58,120 --> 00:08:03,520
the angle controller px will makes use

00:08:00,760 --> 00:08:06,400
of the catonian attitude representation

00:08:03,520 --> 00:08:08,350
the reason for making use of quaternions

00:08:06,400 --> 00:08:11,080
and not something that is easily

00:08:08,350 --> 00:08:13,450
interpreted such as Euler angles is

00:08:11,080 --> 00:08:16,240
because of the singularity that exists

00:08:13,450 --> 00:08:18,669
at the 90 degree pitch angle of the

00:08:16,240 --> 00:08:21,100
three-to-one Euler representation when

00:08:18,669 --> 00:08:24,100
estimating the Euler angles from the IMU

00:08:21,100 --> 00:08:25,890
measurements the structure of the

00:08:24,100 --> 00:08:28,120
controller is a proportional controller

00:08:25,890 --> 00:08:30,310
but it does have some nonlinear

00:08:28,120 --> 00:08:32,710
components as well this

00:08:30,310 --> 00:08:35,590
Rollo is based on the paper nonlinear

00:08:32,710 --> 00:08:37,450
quadrocopter attitude control I will not

00:08:35,590 --> 00:08:39,640
go into much detail because the other

00:08:37,450 --> 00:08:41,380
talk on multicopter control at the stiff

00:08:39,640 --> 00:08:44,650
summit that I mentioned at the beginning

00:08:41,380 --> 00:08:46,240
will give some insight into this I would

00:08:44,650 --> 00:08:48,190
just like to draw your attention to the

00:08:46,240 --> 00:08:50,500
P gain on the right hand side of the

00:08:48,190 --> 00:08:52,360
diagram when tweaking the controllers

00:08:50,500 --> 00:08:56,230
this is the value you were interested in

00:08:52,360 --> 00:08:58,360
it produces an angular rate setpoint but

00:08:56,230 --> 00:09:00,610
it also gets saturated first before

00:08:58,360 --> 00:09:04,690
sending it on to the angular rate

00:09:00,610 --> 00:09:07,240
controller the parameters of interest

00:09:04,690 --> 00:09:09,310
are the MC Rho P parameter for the

00:09:07,240 --> 00:09:11,680
proportional gain and the MC roll rate

00:09:09,310 --> 00:09:14,290
Max parameter to limit the loud roll

00:09:11,680 --> 00:09:16,570
rate of the vehicle these parameters

00:09:14,290 --> 00:09:19,540
also naturally exist for pitch and yo as

00:09:16,570 --> 00:09:22,600
well when flying in accra mode you can

00:09:19,540 --> 00:09:25,660
set the MC acro Max parameters to limit

00:09:22,600 --> 00:09:28,120
the maximum commanded rates the angle

00:09:25,660 --> 00:09:31,000
controller actually prioritizes picture

00:09:28,120 --> 00:09:33,400
or above your control this is because

00:09:31,000 --> 00:09:35,470
pitch and roll control is critical to

00:09:33,400 --> 00:09:38,410
keep the vehicle in the air but not so

00:09:35,470 --> 00:09:41,520
much oh so the MC your weight can be

00:09:38,410 --> 00:09:44,140
used to set the level of prioritization

00:09:41,520 --> 00:09:46,540
looking at the code the angle controller

00:09:44,140 --> 00:09:49,900
is implemented in the MC ad control

00:09:46,540 --> 00:09:52,540
module in the attitude control dot CPP

00:09:49,900 --> 00:09:55,300
file the set attitude setpoint function

00:09:52,540 --> 00:09:57,070
is used to set the commanded angle this

00:09:55,300 --> 00:09:59,050
function is important because it allows

00:09:57,070 --> 00:10:00,839
you to set the setpoint at a different

00:09:59,050 --> 00:10:03,190
rate than the controller is running

00:10:00,839 --> 00:10:04,990
remember the velocity controller is

00:10:03,190 --> 00:10:08,080
running at 58 and the angle controller

00:10:04,990 --> 00:10:10,570
at 250 years that is why this function

00:10:08,080 --> 00:10:13,300
is needed the controller is implemented

00:10:10,570 --> 00:10:17,500
in the update function and this wraps up

00:10:13,300 --> 00:10:19,360
the angle control outside of the angle

00:10:17,500 --> 00:10:21,910
controller is the velocity controller

00:10:19,360 --> 00:10:24,040
however it commands an acceleration

00:10:21,910 --> 00:10:24,760
command which is first converted to an

00:10:24,040 --> 00:10:26,650
attitude

00:10:24,760 --> 00:10:28,390
I went going to detail on this

00:10:26,650 --> 00:10:30,610
conversion because it is being handled

00:10:28,390 --> 00:10:33,550
in the other talk on multicopter control

00:10:30,610 --> 00:10:36,310
in the dev summit I will mention the

00:10:33,550 --> 00:10:38,740
port however and the functions that does

00:10:36,310 --> 00:10:39,970
this conversion the acceleration

00:10:38,740 --> 00:10:42,400
setpoint is first

00:10:39,970 --> 00:10:43,850
actually converted to a thrust this is

00:10:42,400 --> 00:10:46,430
done in the acceleration

00:10:43,850 --> 00:10:48,500
control function the thrust is then

00:10:46,430 --> 00:10:50,569
converted to an attitude which can be

00:10:48,500 --> 00:10:53,569
obtained by the gate attitude setpoint

00:10:50,569 --> 00:10:55,399
function this function calls a thrust to

00:10:53,569 --> 00:10:57,680
attitude function which in turn calls

00:10:55,399 --> 00:11:00,139
the body Z to your attitude function

00:10:57,680 --> 00:11:04,970
that contains a code for the conversion

00:11:00,139 --> 00:11:06,680
from thrust to attitude this leads us to

00:11:04,970 --> 00:11:09,139
the velocity controller which is

00:11:06,680 --> 00:11:12,019
implemented as a simple PID controller

00:11:09,139 --> 00:11:13,670
the derivative path is taken from the

00:11:12,019 --> 00:11:15,709
measurement again instead of the error

00:11:13,670 --> 00:11:17,720
and it contains a low-pass filter for

00:11:15,709 --> 00:11:20,120
all the same reasons as the angular rate

00:11:17,720 --> 00:11:22,430
controller did the commanded

00:11:20,120 --> 00:11:24,649
acceleration is also being saturated I

00:11:22,430 --> 00:11:27,350
want to point out that this is not

00:11:24,649 --> 00:11:29,600
representative of the actual code and it

00:11:27,350 --> 00:11:32,149
is not directly the acceleration that is

00:11:29,600 --> 00:11:34,699
being limited but rather the thrust and

00:11:32,149 --> 00:11:37,190
tilt angle but I chose to keep the

00:11:34,699 --> 00:11:39,829
settler saturation block so that he can

00:11:37,190 --> 00:11:41,930
be aware of it the velocity controller

00:11:39,829 --> 00:11:43,750
actually prioritizes the vertical

00:11:41,930 --> 00:11:45,860
velocity above the horizontal velocity

00:11:43,750 --> 00:11:48,259
because it is critical to keep the

00:11:45,860 --> 00:11:49,910
vehicle in the air the velocity

00:11:48,259 --> 00:11:52,939
controller also makes use of a tracking

00:11:49,910 --> 00:11:54,470
anti wind-up mechanism this mechanism is

00:11:52,939 --> 00:11:56,240
based on a paper and if you're

00:11:54,470 --> 00:12:00,230
interested it is referred to in the code

00:11:56,240 --> 00:12:02,000
if you want to take a look these are the

00:12:00,230 --> 00:12:05,300
parameters of interest to the velocity

00:12:02,000 --> 00:12:06,850
controller there you have the P I and D

00:12:05,300 --> 00:12:09,560
gains for the horizontal and vertical

00:12:06,850 --> 00:12:13,130
velocity respectively on the left and

00:12:09,560 --> 00:12:15,410
right hand side the MPC well the LP

00:12:13,130 --> 00:12:18,380
parameter is used to week the filter on

00:12:15,410 --> 00:12:20,990
the derivative path and the MPC tilt max

00:12:18,380 --> 00:12:23,600
air and MPC throttle Max parameters are

00:12:20,990 --> 00:12:26,029
used to limit that the told angles and

00:12:23,600 --> 00:12:27,769
the thrust of the vehicle both the

00:12:26,029 --> 00:12:29,870
position and velocity controllers are

00:12:27,769 --> 00:12:32,240
implemented in the MC pass control

00:12:29,870 --> 00:12:34,250
module and the function containing the

00:12:32,240 --> 00:12:39,139
velocity control law specifically is

00:12:34,250 --> 00:12:41,000
this velocity control function the

00:12:39,139 --> 00:12:43,160
position controller is a simple

00:12:41,000 --> 00:12:44,930
proportional controller that limits the

00:12:43,160 --> 00:12:50,480
commanded velocity set points as shown

00:12:44,930 --> 00:12:52,760
in this diagram here are the parameters

00:12:50,480 --> 00:12:55,010
for the position controller you have a

00:12:52,760 --> 00:12:57,379
proportional gains and the limits for

00:12:55,010 --> 00:12:59,569
the horizontal and vertical directions

00:12:57,379 --> 00:13:01,759
effectively the control law is

00:12:59,569 --> 00:13:04,669
specifically implemented in the position

00:13:01,759 --> 00:13:06,439
control function but both the position

00:13:04,669 --> 00:13:10,279
and velocity controllers are run by

00:13:06,439 --> 00:13:12,019
calling this update function and as with

00:13:10,279 --> 00:13:13,489
the angle controller the set points can

00:13:12,019 --> 00:13:16,549
be set to regardless of the loop

00:13:13,489 --> 00:13:19,069
frequency by the set input setpoint

00:13:16,549 --> 00:13:23,539
function and those are all the

00:13:19,069 --> 00:13:25,129
controllers here is a diagram to briefly

00:13:23,539 --> 00:13:27,470
summarize the controllers that are

00:13:25,129 --> 00:13:29,269
presented in this session if you would

00:13:27,470 --> 00:13:31,220
like more information regarding the

00:13:29,269 --> 00:13:33,919
controllers I suggest that you check out

00:13:31,220 --> 00:13:36,259
the user and developer guides the user

00:13:33,919 --> 00:13:38,449
guide has a section on PID tuning which

00:13:36,259 --> 00:13:40,519
is quite helpful and the developer

00:13:38,449 --> 00:13:42,109
guides parameter reference section can

00:13:40,519 --> 00:13:44,659
be used to find out what a specific

00:13:42,109 --> 00:13:47,569
parameter is for and how to adjust it I

00:13:44,659 --> 00:13:49,609
will be adding the diagrams in this

00:13:47,569 --> 00:13:52,429
session to the develop regard scene

00:13:49,609 --> 00:13:53,720
so expect an update on that and as I

00:13:52,429 --> 00:13:55,369
mentioned there is another talk on

00:13:53,720 --> 00:13:58,039
multicopter control in the dev summit

00:13:55,369 --> 00:13:59,809
with a bit of a wider scope I hope you

00:13:58,039 --> 00:14:01,309
enjoyed this one and that it helps you

00:13:59,809 --> 00:14:06,519
to gain some insight into the

00:14:01,309 --> 00:14:06,519

YouTube URL: https://www.youtube.com/watch?v=nEo4WGl4Lgc


