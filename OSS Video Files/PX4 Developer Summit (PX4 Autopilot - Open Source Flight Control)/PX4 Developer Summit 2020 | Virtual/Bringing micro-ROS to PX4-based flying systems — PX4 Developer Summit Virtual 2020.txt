Title: Bringing micro-ROS to PX4-based flying systems — PX4 Developer Summit Virtual 2020
Publication date: 2020-07-19
Playlist: PX4 Developer Summit 2020 | Virtual
Description: 
	Title: Bringing micro-ROS to PX4-based flying systems

Summary: micro-ROS is a Robot Operating System specifically tailored for embedded and resource-constrained platforms, such as microcontrollers.

It is an open-source software that runs on Real-Time Operating Systems (RTOS), such as NuttX and Zephyr. Above that, it runs the ROS 2 stack with a few microcontrollers-specific improvements. It offers powerful developer tools, such as a complete build system for different RTOSes and hardware platforms, and the whole pool of robotic applications available in a ROS 2 environment.

micro-ROS promotes microcontrollers to the ROS 2 world and uses as a middleware eProsima Micro XRCE-DDS, that is, DDS for eXtremely Resource-Constrained Environments, a software solution allowing the integration of microcontrollers into the DDS world.

DDS is a communication protocol that deploys a Data-Centric Publisher-Subscriber model, whose implementation eProsima Fast DDS is the default middleware supported by ROS 2. The protocol used by eProsima Fast DDS to exchange messages over standard networks is the Real-Time Publish-Subscribe protocol (RTPS), an interoperability wire protocol for DDS.

Following the latest successful results of the integration of micro-ROS into microcontrollers and devices running different RTOSes, including NuttX, we suggest that micro-ROS could be seamlessly and profitably integrated into the PX4 ecosystem in the near future.

While the task of integrating PX4 into the DDS world has been dealt with by means of the micro-RTPS bridge so far, the present proposal hinges on the need for a more mature, flexible and secure interface with DDS that would be carried out by micro-ROS, and can be seen as a natural extension of the work done in the past over the micro-RTPS bridge. Actually, micro-RTPS was the first prototype and the origin of the micro-ROS project.

We, therefore, deem reasonable and desirable the exploration of XRCE-DDS and the possible migration from the micro-RTPS bridge implementation to micro-ROS in the PX4 ecosystem.

This talk will focus on presenting all of the concepts mentioned above, namely DDS, RTPS, XRCE-DDS, and micro-ROS. We will then go over how both micro-ROS and the micro-RTPS bridgework, presenting a comparison between them. Finally, we will trace an ideal roadmap to migrate from the micro-RTPS bridge to micro-ROS, furthermore adding support of the latter to a platform like the Auterion Skynode.

The PX4 Developer Summit is the annual flagship conference hosted by Dronecode for the drone development community. https://bit.ly/2YXe4Rd
Captions: 
	00:00:00,030 --> 00:00:06,870
hey everyone welcome back rumbling here

00:00:04,380 --> 00:00:09,090
for a matter for drunk good really

00:00:06,870 --> 00:00:11,040
excited for this next presentation we

00:00:09,090 --> 00:00:14,280
got bringing microscopy export-based

00:00:11,040 --> 00:00:16,650
flying systems let me do a quick intro

00:00:14,280 --> 00:00:18,480
hymen opting Llosa is the CEO of Metro

00:00:16,650 --> 00:00:19,830
SEMA experts on the Middle were

00:00:18,480 --> 00:00:22,890
specialized in implementing Miller

00:00:19,830 --> 00:00:26,189
standard which was DDS our TPS RPC over

00:00:22,890 --> 00:00:29,550
Lydia's CDR is coming today

00:00:26,189 --> 00:00:31,349
from Madrid Spain hi Megan awesome work

00:00:29,550 --> 00:00:32,550
on all the contributions to the

00:00:31,349 --> 00:00:34,680
community thank you

00:00:32,550 --> 00:00:36,360
Nuno Marcus is the px4 maintained as a

00:00:34,680 --> 00:00:37,829
peak for my trainer directly responsible

00:00:36,360 --> 00:00:41,040
for the implementation and maintenance

00:00:37,829 --> 00:00:43,890
of the micro RTP is rich in px4 he's

00:00:41,040 --> 00:00:45,780
calling in from Lisbon portable this

00:00:43,890 --> 00:00:51,030
talk is going to focus on presenting PBS

00:00:45,780 --> 00:00:53,699
or TPS XR c ii tds and micros we go over

00:00:51,030 --> 00:00:55,890
and how both micro and the macro are TPS

00:00:53,699 --> 00:00:58,469
bridgework and trice an allele roadmap

00:00:55,890 --> 00:01:01,980
to migrate from the micro our GPS bridge

00:00:58,469 --> 00:01:05,960
to micro Ross and ps4 welcome our

00:01:01,980 --> 00:01:08,729
speakers community yes

00:01:05,960 --> 00:01:12,930
so hello um hi guys very happy to be

00:01:08,729 --> 00:01:20,000
here so I'm going to share my screen to

00:01:12,930 --> 00:01:22,830
stop because we have very few time this

00:01:20,000 --> 00:01:25,100
and I'm going to be presenting this

00:01:22,830 --> 00:01:30,390
agenda with Nuno

00:01:25,100 --> 00:01:31,979
we are going to present together so I am

00:01:30,390 --> 00:01:36,869
going to present the concepts we got in

00:01:31,979 --> 00:01:38,610
DBS and micros and I'm going to be

00:01:36,869 --> 00:01:41,100
talking a little bit about our company

00:01:38,610 --> 00:01:44,299
and right away

00:01:41,100 --> 00:01:47,369
Nuno is going to talk about the beat and

00:01:44,299 --> 00:01:52,619
how to migrate the current bridge to

00:01:47,369 --> 00:01:55,909
microphones so let me tell you something

00:01:52,619 --> 00:01:57,479
about the Arizona we are as Ramon was

00:01:55,909 --> 00:01:59,189
saying

00:01:57,479 --> 00:02:01,530
espresso middle one and we are very

00:01:59,189 --> 00:02:04,649
focused on DVS and rose too because we

00:02:01,530 --> 00:02:06,780
are the before implementation of the

00:02:04,649 --> 00:02:08,640
middleware across - we are also

00:02:06,780 --> 00:02:10,800
contributing to the standards we're on

00:02:08,640 --> 00:02:12,720
20 members and we are members of the

00:02:10,800 --> 00:02:13,410
technical steering committee of ours -

00:02:12,720 --> 00:02:16,010
because we are

00:02:13,410 --> 00:02:20,280
I'm a girl close to contribute oh and

00:02:16,010 --> 00:02:24,060
also we were in the past contributors to

00:02:20,280 --> 00:02:26,730
the X 4 because we develop the initial

00:02:24,060 --> 00:02:30,840
person of the micro RT PS please that is

00:02:26,730 --> 00:02:36,450
at least between the micro or of X for

00:02:30,840 --> 00:02:40,920
two TDs and rosetone so we have three

00:02:36,450 --> 00:02:43,410
main products probably you know those

00:02:40,920 --> 00:02:48,170
palettes the first one is fast it yes

00:02:43,410 --> 00:02:51,990
that is the in middle world of gross -

00:02:48,170 --> 00:02:54,210
also we have micro excessive EVs that is

00:02:51,990 --> 00:02:58,980
an extension of DDS when Michael Ventris

00:02:54,210 --> 00:03:03,150
and is the base of micro Rose rose - for

00:02:58,980 --> 00:03:05,910
micro controllers and we also coordinate

00:03:03,150 --> 00:03:07,680
the micro Rose Pro yet now we have this

00:03:05,910 --> 00:03:09,960
third product that is important today

00:03:07,680 --> 00:03:11,940
the integration service that allows you

00:03:09,960 --> 00:03:14,880
to connect videos with other protocols

00:03:11,940 --> 00:03:17,420
such as oral wonders - or WebSockets

00:03:14,880 --> 00:03:20,100
more encoders program you should define

00:03:17,420 --> 00:03:23,330
protocols and it's going to be the base

00:03:20,100 --> 00:03:27,660
of the approach integration service a

00:03:23,330 --> 00:03:29,780
common project between the open robotics

00:03:27,660 --> 00:03:34,820
foundation and a proceed

00:03:29,780 --> 00:03:39,960
so let's talk about DDS a slightly for

00:03:34,820 --> 00:03:42,870
those of you that don't know about the

00:03:39,960 --> 00:03:44,580
vias so when you are working on the

00:03:42,870 --> 00:03:46,920
Dia's you have to imagine a global data

00:03:44,580 --> 00:03:50,610
space and in this global data space you

00:03:46,920 --> 00:03:54,180
define topics and then the different

00:03:50,610 --> 00:03:56,940
participants or nodes join the global

00:03:54,180 --> 00:04:00,270
data space and just declare their

00:03:56,940 --> 00:04:03,000
interests on policy on or subscribe to

00:04:00,270 --> 00:04:07,050
those topics there is no central

00:04:03,000 --> 00:04:13,310
broker is just a pure publish/subscribe

00:04:07,050 --> 00:04:16,049
model so in this kind of architecture

00:04:13,310 --> 00:04:17,880
the latency is very low on the

00:04:16,049 --> 00:04:21,570
throughput is very high because you have

00:04:17,880 --> 00:04:24,060
no intermediate steps related to brokers

00:04:21,570 --> 00:04:26,660
or demos or whatever as soon you have

00:04:24,060 --> 00:04:30,720
the data available in your peril

00:04:26,660 --> 00:04:33,120
de middle whah same the data directly to

00:04:30,720 --> 00:04:36,840
the subscribers also the discovery is

00:04:33,120 --> 00:04:41,550
automatic so it's very easy to use in

00:04:36,840 --> 00:04:44,070
the typical cases and this is the same

00:04:41,550 --> 00:04:50,310
model for broth soup

00:04:44,070 --> 00:04:52,350
they have been studying different a

00:04:50,310 --> 00:04:57,030
Miller was options and finally they

00:04:52,350 --> 00:05:01,620
choose DBS because devious comes with a

00:04:57,030 --> 00:05:03,630
lot of success in a defense and our

00:05:01,620 --> 00:05:09,270
space and other critical applications so

00:05:03,630 --> 00:05:14,940
it's perfect for robotics so in the case

00:05:09,270 --> 00:05:18,120
of two you have the typical layers you

00:05:14,940 --> 00:05:23,669
have inverse one the C++ and Python and

00:05:18,120 --> 00:05:26,340
Java API is an LC API and then you have

00:05:23,669 --> 00:05:29,760
the different millwall interfaces that

00:05:26,340 --> 00:05:35,000
are basically DDS implementations and

00:05:29,760 --> 00:05:35,000
the default implementation is fast EDS

00:05:36,490 --> 00:05:48,190
so why it is interesting to bring DDS to

00:05:43,090 --> 00:05:53,170
px4 basically because you can connect a

00:05:48,190 --> 00:05:54,599
lot of different modules of drugs to or

00:05:53,170 --> 00:06:00,639
[Music]

00:05:54,599 --> 00:06:03,520
DBS applications into the company board

00:06:00,639 --> 00:06:07,300
using this place discarding this way you

00:06:03,520 --> 00:06:10,210
have a call it micro TPS basically you

00:06:07,300 --> 00:06:14,940
have all the power of drugs to and

00:06:10,210 --> 00:06:14,940
videos applications within your drone

00:06:16,620 --> 00:06:23,740
and then we have this extensions this

00:06:21,130 --> 00:06:27,190
extension of DVS that is for excessive

00:06:23,740 --> 00:06:29,979
ESS they standard of the ng and it

00:06:27,190 --> 00:06:34,569
stands for extreme resource-constrained

00:06:29,979 --> 00:06:38,590
environment videos and then you have the

00:06:34,569 --> 00:06:41,560
same model you have ended years but you

00:06:38,590 --> 00:06:46,720
need an especial note that is the

00:06:41,560 --> 00:06:51,240
excessive EVs Asian and the clients that

00:06:46,720 --> 00:06:55,930
are going to run in the microcontrollers

00:06:51,240 --> 00:06:59,680
connect to this agent the client is a

00:06:55,930 --> 00:07:03,460
very timing see application and you have

00:06:59,680 --> 00:07:10,590
all the power of DBS within your

00:07:03,460 --> 00:07:15,759
microcontroller this is not just rich

00:07:10,590 --> 00:07:20,560
but a proxy that means that through

00:07:15,759 --> 00:07:23,469
remote procedure calls the client is

00:07:20,560 --> 00:07:28,270
going to create entities publicist

00:07:23,469 --> 00:07:33,699
subscribers and topics using the agent

00:07:28,270 --> 00:07:36,400
that is going to be the proxy this is

00:07:33,699 --> 00:07:39,639
very useful for this use cases this use

00:07:36,400 --> 00:07:43,000
case and also for a IOT cases in which

00:07:39,639 --> 00:07:47,190
you have a low power device that is not

00:07:43,000 --> 00:07:49,760
connected to the global data space

00:07:47,190 --> 00:07:57,820
constantly but

00:07:49,760 --> 00:08:01,970
you just uh caneta from time to time so

00:07:57,820 --> 00:08:04,360
why using this this protocol as I said

00:08:01,970 --> 00:08:07,130
you have the full power of TDS is

00:08:04,360 --> 00:08:09,020
complying with an ax stand up we have

00:08:07,130 --> 00:08:11,990
the first implementation of the standard

00:08:09,020 --> 00:08:15,260
but it is natural that in the future is

00:08:11,990 --> 00:08:17,750
going to be more we are going to have

00:08:15,260 --> 00:08:23,030
more implementations out there

00:08:17,750 --> 00:08:25,330
howdy fall supported platform is statics

00:08:23,030 --> 00:08:32,900
the same operating system you are using

00:08:25,330 --> 00:08:38,180
4x4 it is not like as well

00:08:32,900 --> 00:08:38,600
you entered but we choose a Mattox uncle

00:08:38,180 --> 00:08:41,450
boss

00:08:38,600 --> 00:08:44,090
and also we support free artists and

00:08:41,450 --> 00:08:47,920
second and this is and it is easy to

00:08:44,090 --> 00:08:51,410
port to other on different platforms so

00:08:47,920 --> 00:08:54,890
you have also additional features such

00:08:51,410 --> 00:09:01,580
as fragmentation services ipv6 and

00:08:54,890 --> 00:09:03,170
multiple transpose uh notice and last

00:09:01,580 --> 00:09:05,090
but not least I'm going to talk a little

00:09:03,170 --> 00:09:08,590
bit about the interaction service is

00:09:05,090 --> 00:09:13,330
basically a common trait between a

00:09:08,590 --> 00:09:16,610
próxima on the offender Baltics Anisa

00:09:13,330 --> 00:09:21,590
basically a bridge design it for VDS on

00:09:16,610 --> 00:09:24,050
verse 2 and you have different protocol

00:09:21,590 --> 00:09:26,360
adapters like a WebSocket or slander

00:09:24,050 --> 00:09:29,360
suit verse 2 or in context Raqqa and you

00:09:26,360 --> 00:09:37,040
can create your own protocol a laptop

00:09:29,360 --> 00:09:39,310
that we call system hammer and let's

00:09:37,040 --> 00:09:42,890
talk a little bit about micro bus

00:09:39,310 --> 00:09:45,260
microwaves is something very similar to

00:09:42,890 --> 00:09:47,780
rose to but for microcontrollers as you

00:09:45,260 --> 00:09:49,940
can see there is a one-to-one mapping

00:09:47,780 --> 00:09:54,590
between the concepts you have interest

00:09:49,940 --> 00:09:59,200
to four microcontrollers but we don't

00:09:54,590 --> 00:10:01,640
use the full DDS but this accessory DDS

00:09:59,200 --> 00:10:03,540
extension for microcontroller so it's

00:10:01,640 --> 00:10:05,820
the same the same idea and

00:10:03,540 --> 00:10:07,889
the platforms we support for microbus

00:10:05,820 --> 00:10:10,649
are the same platters we are supporting

00:10:07,889 --> 00:10:18,389
for excessive yes it is a failed

00:10:10,649 --> 00:10:21,290
Pattinson free afters and well now noona

00:10:18,389 --> 00:10:28,380
is going to explain how to use these

00:10:21,290 --> 00:10:35,490
within px4 so I'm going to start sharing

00:10:28,380 --> 00:10:39,089
my screen ok perfect so um as everyone

00:10:35,490 --> 00:10:42,300
know we already have I would call it

00:10:39,089 --> 00:10:46,680
checks for fast RT PS which implementing

00:10:42,300 --> 00:10:48,600
index for it exists since 2017 and it

00:10:46,680 --> 00:10:51,690
was already presented also in the past

00:10:48,600 --> 00:10:53,579
summit and just an overall review of

00:10:51,690 --> 00:10:55,769
like that so you have two components we

00:10:53,579 --> 00:10:57,540
have the client and the agents and the

00:10:55,769 --> 00:10:59,579
client is associated with the autopilot

00:10:57,540 --> 00:11:02,220
side and while the agent is associated

00:10:59,579 --> 00:11:05,279
with the off for computer and following

00:11:02,220 --> 00:11:06,899
the the flow of data you can so the idea

00:11:05,279 --> 00:11:09,810
is that you have a one to one conversion

00:11:06,899 --> 00:11:11,459
or one to one mapping between the data

00:11:09,810 --> 00:11:13,350
that is being published and subscribing

00:11:11,459 --> 00:11:17,430
you or validated that is in publishers

00:11:13,350 --> 00:11:19,949
and subscribe on by DDS participants on

00:11:17,430 --> 00:11:22,500
a specific that is the man which can be

00:11:19,949 --> 00:11:24,860
of course was tool and you start flying

00:11:22,500 --> 00:11:28,079
further which we have a new or process

00:11:24,860 --> 00:11:30,990
and our kicks for module process that

00:11:28,079 --> 00:11:33,029
it's publishing in your data decline

00:11:30,990 --> 00:11:36,510
will basically subscribe to that data

00:11:33,029 --> 00:11:39,569
will serialize it right into a new words

00:11:36,510 --> 00:11:41,730
or a UDP link well and in the agent side

00:11:39,569 --> 00:11:44,850
that there is going to be reread going

00:11:41,730 --> 00:11:47,670
to be deserialized and then first 30 PS

00:11:44,850 --> 00:11:50,490
or fast years will have the the work of

00:11:47,670 --> 00:11:52,680
publishing into into a specific a

00:11:50,490 --> 00:11:55,380
specific EDS domain the other way around

00:11:52,680 --> 00:11:58,170
also work so if you subscribe from data

00:11:55,380 --> 00:11:59,970
coming from the DDS domain you see

00:11:58,170 --> 00:12:02,480
realize it and publish it or and

00:11:59,970 --> 00:12:06,870
provided to you are already feeling and

00:12:02,480 --> 00:12:09,149
micro the micro GPS client side will

00:12:06,870 --> 00:12:15,060
read that data this you realize it and

00:12:09,149 --> 00:12:15,810
then publish it as a annual topic next

00:12:15,060 --> 00:12:18,449
one is

00:12:15,810 --> 00:12:22,199
basically I'm going to quickly give you

00:12:18,449 --> 00:12:25,589
an overview of how exactly is the is the

00:12:22,199 --> 00:12:27,269
bridge working or outer which can

00:12:25,589 --> 00:12:29,819
actually be generated so this is

00:12:27,269 --> 00:12:31,589
basically a my if you are aware of the

00:12:29,819 --> 00:12:35,759
build system of before this is a make

00:12:31,589 --> 00:12:38,939
target you use gigs for underscore the

00:12:35,759 --> 00:12:41,579
target can be ad can be SMU v5 r can

00:12:38,939 --> 00:12:44,850
even even be zero in that underscore our

00:12:41,579 --> 00:12:46,680
GPS and in this process there the first

00:12:44,850 --> 00:12:48,779
the first part of the process that it

00:12:46,680 --> 00:12:52,470
verifies all the new orbital all the new

00:12:48,779 --> 00:12:55,829
work messages actually have another GPS

00:12:52,470 --> 00:12:57,809
identifier then it is very it verifies

00:12:55,829 --> 00:12:59,809
where are the messages or do the Newark

00:12:57,809 --> 00:13:04,529
topics that are supposed to be sent or

00:12:59,809 --> 00:13:08,309
publish are subscribed from the new of

00:13:04,529 --> 00:13:11,220
the UART or the the serial the serial

00:13:08,309 --> 00:13:14,220
link or UDP link after that there's

00:13:11,220 --> 00:13:18,209
there's a we use specific ideal

00:13:14,220 --> 00:13:21,120
templates for general basically

00:13:18,209 --> 00:13:24,240
generating all the required code for the

00:13:21,120 --> 00:13:26,579
publishers and subscribers on on the

00:13:24,240 --> 00:13:30,059
agent side and we use that we be helped

00:13:26,579 --> 00:13:32,970
off of the faster qpsj application from

00:13:30,059 --> 00:13:34,649
the prosumer and at the same time we are

00:13:32,970 --> 00:13:38,459
basically generating all the RTP a

00:13:34,649 --> 00:13:40,279
specific linking code to to to all the

00:13:38,459 --> 00:13:43,110
messages that we are going to exchange

00:13:40,279 --> 00:13:44,759
finally the client the client code it's

00:13:43,110 --> 00:13:47,250
automatically building these build

00:13:44,759 --> 00:13:49,439
process but the agent code is stored in

00:13:47,250 --> 00:13:52,500
a specific build folder that you can

00:13:49,439 --> 00:13:54,180
actually that you can manually build by

00:13:52,500 --> 00:13:57,059
manually triggering kits and it

00:13:54,180 --> 00:13:59,370
basically builds the agent application

00:13:57,059 --> 00:14:00,949
which basically publish and subscribes

00:13:59,370 --> 00:14:03,389
from Ross 20s

00:14:00,949 --> 00:14:05,790
optionally you can if you don't want to

00:14:03,389 --> 00:14:08,300
use Ross to you can directly generate

00:14:05,790 --> 00:14:11,610
using faster GPS Jan you can generate

00:14:08,300 --> 00:14:13,860
the subscriber or listener application

00:14:11,610 --> 00:14:17,709
so you can evaluate the data that is

00:14:13,860 --> 00:14:20,269
coming from from from the Explorer

00:14:17,709 --> 00:14:22,790
then of course you have the periods for

00:14:20,269 --> 00:14:26,449
us to bridge and in comparison with what

00:14:22,790 --> 00:14:30,439
you had on the on the raw fast RTDs

00:14:26,449 --> 00:14:34,339
bridge this one directly connects tweed

00:14:30,439 --> 00:14:37,519
rose to with Ross two topics because we

00:14:34,339 --> 00:14:40,939
had so we added support in faster dps

00:14:37,519 --> 00:14:44,149
gen to actually directly connect the

00:14:40,939 --> 00:14:47,259
types being generally targets or site

00:14:44,149 --> 00:14:50,540
with the types that runs to supports and

00:14:47,259 --> 00:14:52,189
this basically is easy we are able to do

00:14:50,540 --> 00:14:54,679
that because we have two different

00:14:52,189 --> 00:14:57,230
package so we have px for Ross calm

00:14:54,679 --> 00:15:00,170
which basically it's the materialization

00:14:57,230 --> 00:15:02,420
of the jets for a TPS bridge for Ross to

00:15:00,170 --> 00:15:05,089
and it has the agent code that actually

00:15:02,420 --> 00:15:07,399
interfaces with the with the Rasta side

00:15:05,089 --> 00:15:09,079
but it's actually also dependent on the

00:15:07,399 --> 00:15:13,160
second packet which is called px for

00:15:09,079 --> 00:15:15,319
messages where we basically generate the

00:15:13,160 --> 00:15:17,779
Ross - message definitions that

00:15:15,319 --> 00:15:19,819
correspond to a newer counterparts and

00:15:17,779 --> 00:15:21,860
those are classical case naming because

00:15:19,819 --> 00:15:25,279
it's the Ross the Ross Convention for

00:15:21,860 --> 00:15:27,439
message types and what we do with that

00:15:25,279 --> 00:15:30,139
the checks for message on the px4

00:15:27,439 --> 00:15:32,419
message build is that we generate the

00:15:30,139 --> 00:15:34,220
first we do do generate the ideal files

00:15:32,419 --> 00:15:37,639
that are required to generate the code

00:15:34,220 --> 00:15:39,619
for the agent side using fast a TBS gem

00:15:37,639 --> 00:15:41,449
and at the same time we are generating

00:15:39,619 --> 00:15:44,929
the type support and interface code that

00:15:41,449 --> 00:15:46,999
we do require to use on rostov nodes so

00:15:44,929 --> 00:15:49,639
we can actually become compliant or i

00:15:46,999 --> 00:15:51,499
have that want one conversion from or

00:15:49,639 --> 00:15:55,089
topics that are converted to roasted

00:15:51,499 --> 00:15:59,029
message in the in the in Ross two notes

00:15:55,089 --> 00:16:01,999
since fest here there were several there

00:15:59,029 --> 00:16:05,749
were main features and bug fixes that I

00:16:01,999 --> 00:16:08,299
want to basically have a look at and

00:16:05,749 --> 00:16:10,879
Richard to you so the first one is that

00:16:08,299 --> 00:16:13,309
we had to wear that support so for Ross

00:16:10,879 --> 00:16:16,639
to dashing eloquent and foxy and the way

00:16:13,309 --> 00:16:21,199
we we did we did it was basically by

00:16:16,639 --> 00:16:25,459
adding the attack support type that type

00:16:21,199 --> 00:16:28,419
support conversion on there on the first

00:16:25,459 --> 00:16:30,590
Artie PSTN and we are able to actually

00:16:28,419 --> 00:16:33,670
have that I want to

00:16:30,590 --> 00:16:36,440
conversion with Ross Ross two topics

00:16:33,670 --> 00:16:38,630
present in dashing the liquid and foxy

00:16:36,440 --> 00:16:40,430
Fox is actually for the foxy support it

00:16:38,630 --> 00:16:42,950
was actually something that happened in

00:16:40,430 --> 00:16:44,420
the past to pass two weeks time

00:16:42,950 --> 00:16:47,000
synchronization are really important

00:16:44,420 --> 00:16:49,310
because we have the agent and the client

00:16:47,000 --> 00:16:51,110
we different time stamps so we have the

00:16:49,310 --> 00:16:53,720
time stamp on kx4 we have the time

00:16:51,110 --> 00:16:55,850
stamping also on the on the agent side

00:16:53,720 --> 00:16:58,040
so on the companion computer and they

00:16:55,850 --> 00:17:00,800
usually have different monotonic times

00:16:58,040 --> 00:17:04,100
and we want them to be synchronized and

00:17:00,800 --> 00:17:06,020
if we exchange data between the two the

00:17:04,100 --> 00:17:07,670
engine and the client we want to be sure

00:17:06,020 --> 00:17:10,160
that the message time stamping is

00:17:07,670 --> 00:17:12,590
actually synchronized at the same time

00:17:10,160 --> 00:17:14,330
also the participant button the topic

00:17:12,590 --> 00:17:17,930
filtering is really really important

00:17:14,330 --> 00:17:19,580
because things like publishing is so

00:17:17,930 --> 00:17:23,540
publishing data and then subscribe to

00:17:19,580 --> 00:17:25,790
the same data that we published it's

00:17:23,540 --> 00:17:28,550
it's not it's not ideal it's not that

00:17:25,790 --> 00:17:30,650
what we want so we are also a topic

00:17:28,550 --> 00:17:33,350
filtering on both the injured and the

00:17:30,650 --> 00:17:36,080
client side and currently and this was a

00:17:33,350 --> 00:17:39,980
bit like two weeks ago we added support

00:17:36,080 --> 00:17:42,080
for frozen a fast ideas but keeping also

00:17:39,980 --> 00:17:46,100
back support to all the versions is

00:17:42,080 --> 00:17:49,520
faster TTS 1.6 and then we arrived of

00:17:46,100 --> 00:17:52,550
course to the new bridge that - that we

00:17:49,520 --> 00:17:56,000
are aiming to bring two kicks for and

00:17:52,550 --> 00:17:59,630
right now we are calling it a micro DDS

00:17:56,000 --> 00:18:02,000
bridge being it a bridge or not that's

00:17:59,630 --> 00:18:03,980
that's function essentially something

00:18:02,000 --> 00:18:07,010
that can be discussed because of course

00:18:03,980 --> 00:18:09,770
micro x XR c VDS will serve as a proxy

00:18:07,010 --> 00:18:12,350
more than just a bridge but in this case

00:18:09,770 --> 00:18:16,730
what we are replacing is what we had

00:18:12,350 --> 00:18:19,400
with micro our TPS in Indian the px4

00:18:16,730 --> 00:18:22,990
side and also on the companion computer

00:18:19,400 --> 00:18:27,560
side we all have the micro xrc DDS

00:18:22,990 --> 00:18:32,210
client and agent on the on those on that

00:18:27,560 --> 00:18:34,730
side and we are basically helping or

00:18:32,210 --> 00:18:37,880
extending the DDS the Menem to P into P

00:18:34,730 --> 00:18:39,650
x4 and although we are at least straight

00:18:37,880 --> 00:18:43,100
for and managed many data exchange

00:18:39,650 --> 00:18:44,230
before also in KX for right now we are

00:18:43,100 --> 00:18:46,270
currently able

00:18:44,230 --> 00:18:49,720
to take the full advantage of what my

00:18:46,270 --> 00:18:52,090
cracks are see DDS can can provide so

00:18:49,720 --> 00:18:53,770
this is this is a protocol from the mg

00:18:52,090 --> 00:18:56,410
consortium and this is a specific

00:18:53,770 --> 00:18:58,600
implementation from from from a pro

00:18:56,410 --> 00:19:01,299
Sigma and what we are doing is the full

00:18:58,600 --> 00:19:04,929
capabilities of of DDS into the

00:19:01,299 --> 00:19:07,480
microcontroller at the same time the

00:19:04,929 --> 00:19:09,130
client library is dynamic and it's

00:19:07,480 --> 00:19:11,350
static memory free and that means that

00:19:09,130 --> 00:19:17,470
instead of just water protocol instead

00:19:11,350 --> 00:19:19,929
of just the of the so if industry

00:19:17,470 --> 00:19:21,610
industry if we evaluate the stack the

00:19:19,929 --> 00:19:24,610
only memory footprint is that is going

00:19:21,610 --> 00:19:27,160
to be present by adding these declined

00:19:24,610 --> 00:19:29,320
sizes because of the set growth of the

00:19:27,160 --> 00:19:31,030
different topics that we are using at

00:19:29,320 --> 00:19:34,960
the same time we have this profiles

00:19:31,030 --> 00:19:37,540
concept where we can actually add or

00:19:34,960 --> 00:19:40,210
remove functionalities to the library

00:19:37,540 --> 00:19:42,400
changing where basically what changes is

00:19:40,210 --> 00:19:48,070
the binary side so you change the binary

00:19:42,400 --> 00:19:49,809
said also we also have more flexibility

00:19:48,070 --> 00:19:53,290
to two different targets that you

00:19:49,809 --> 00:19:56,440
actually aiming for and at the same time

00:19:53,290 --> 00:19:58,419
we also have these so-called mic XR CBDs

00:19:56,440 --> 00:20:00,880
gen which allows you to generate

00:19:58,419 --> 00:20:04,299
generate all these serialize and

00:20:00,880 --> 00:20:08,020
deserialize code uses for which

00:20:04,299 --> 00:20:11,080
basically use Alpers from micro CTR but

00:20:08,020 --> 00:20:13,780
before we were using basically some

00:20:11,080 --> 00:20:16,450
custom templates we don't need these

00:20:13,780 --> 00:20:19,030
custom templates anymore because we just

00:20:16,450 --> 00:20:21,700
need to generate their respective ideal

00:20:19,030 --> 00:20:24,880
types or they are the old files and then

00:20:21,700 --> 00:20:26,650
these generated code or the least

00:20:24,880 --> 00:20:30,040
generated so we generate the code that

00:20:26,650 --> 00:20:33,190
we need so we come up with the kicks for

00:20:30,040 --> 00:20:35,320
us to bridge and the the main difference

00:20:33,190 --> 00:20:38,470
with respect with the other side is that

00:20:35,320 --> 00:20:41,200
now we know we have a second component

00:20:38,470 --> 00:20:43,270
here which is Ross you and how are you

00:20:41,200 --> 00:20:45,309
exactly connecting with Ross - we are

00:20:43,270 --> 00:20:47,530
using something or we are laughing is

00:20:45,309 --> 00:20:49,090
something that if I may talked about

00:20:47,530 --> 00:20:51,400
which is the integration service and

00:20:49,090 --> 00:20:53,530
what it does allow for example is that

00:20:51,400 --> 00:20:55,630
you have for example a DDS domain

00:20:53,530 --> 00:20:57,070
running on a companion computer and you

00:20:55,630 --> 00:20:59,559
have a separate dead yes then

00:20:57,070 --> 00:21:01,539
Maine which is related with Russ to for

00:20:59,559 --> 00:21:03,549
example running on your laptop and you

00:21:01,539 --> 00:21:06,039
can leverage the introspection and

00:21:03,549 --> 00:21:11,019
tubing from cross to on your laptop

00:21:06,039 --> 00:21:15,070
while isolating the the the mic or the

00:21:11,019 --> 00:21:19,649
drone DBS domain from the other domain

00:21:15,070 --> 00:21:25,059
so this allows you to basically have the

00:21:19,649 --> 00:21:26,889
lowest back or a low footprint DDS

00:21:25,059 --> 00:21:28,899
implementation on running on the drone

00:21:26,889 --> 00:21:31,750
because you're not bringing Ross sue to

00:21:28,899 --> 00:21:34,139
it otherwise you can do it as well but

00:21:31,750 --> 00:21:36,129
at the same time we are separating

00:21:34,139 --> 00:21:39,250
separating the waters here so you have

00:21:36,129 --> 00:21:42,009
DDS for the drone and you have VDS for

00:21:39,250 --> 00:21:44,379
Ross to and the integration service

00:21:42,009 --> 00:21:46,990
allows you to do that and he allows you

00:21:44,379 --> 00:21:50,110
to do another thing so well before we

00:21:46,990 --> 00:21:52,929
will be using the Rosalyn bridge to do

00:21:50,110 --> 00:21:55,750
the bridge between rows 2 and rows 1 and

00:21:52,929 --> 00:21:58,029
by of course by the incoming consequence

00:21:55,750 --> 00:21:59,769
you'll be bridging across one with the

00:21:58,029 --> 00:22:01,480
Explorer we don't need this in this case

00:21:59,769 --> 00:22:05,620
because we can leverage the integration

00:22:01,480 --> 00:22:08,799
services from from pro Zima in specific

00:22:05,620 --> 00:22:11,139
reality our system Ambler for for four

00:22:08,799 --> 00:22:13,350
rows one that we can use and you can

00:22:11,139 --> 00:22:17,080
directly communicate with kids for using

00:22:13,350 --> 00:22:19,779
rows one by by the means of integration

00:22:17,080 --> 00:22:22,509
service this also as well as I told you

00:22:19,779 --> 00:22:25,690
is just just about the integration

00:22:22,509 --> 00:22:28,269
service for roles but also for other

00:22:25,690 --> 00:22:29,889
middlewares that that can be brought

00:22:28,269 --> 00:22:33,279
into communication with case for like

00:22:29,889 --> 00:22:36,850
context and message brokers and even TCP

00:22:33,279 --> 00:22:39,370
tunneling through one and now we are off

00:22:36,850 --> 00:22:42,820
to the west part which is basically the

00:22:39,370 --> 00:22:45,070
bring up of micros into the into the

00:22:42,820 --> 00:22:48,879
Explorer so as my cross leverages micro

00:22:45,070 --> 00:22:52,200
X rcds what we do in live in this case

00:22:48,879 --> 00:22:56,320
is that we bring micros client and agent

00:22:52,200 --> 00:22:58,899
as I said leveraging my cracks RC DDS

00:22:56,320 --> 00:23:01,720
below it but at the same time we are

00:22:58,899 --> 00:23:05,320
capable of using the rows to find

00:23:01,720 --> 00:23:07,330
libraries and the the functionalities

00:23:05,320 --> 00:23:09,279
and the API that it's brought from Ross

00:23:07,330 --> 00:23:10,350
to but on the microcontroller which

00:23:09,279 --> 00:23:13,230
means that

00:23:10,350 --> 00:23:16,889
you can for example use the Rosie the

00:23:13,230 --> 00:23:18,990
Roscoe API on the px4 module and for

00:23:16,889 --> 00:23:21,750
example subscribe to data on a new work

00:23:18,990 --> 00:23:26,159
so we can publish it as Ross - topic

00:23:21,750 --> 00:23:28,380
directly on the microcontroller about

00:23:26,159 --> 00:23:30,090
the mill bridge migration so we split

00:23:28,380 --> 00:23:33,450
this into two different phases the first

00:23:30,090 --> 00:23:37,519
phase is basically bringing my cracks

00:23:33,450 --> 00:23:40,620
our CBDs into into px4 so it's basically

00:23:37,519 --> 00:23:44,549
migrating from my car - yes - the micro

00:23:40,620 --> 00:23:46,470
des microgds proxy or bridge and the

00:23:44,549 --> 00:23:48,960
idea is that you need first of course to

00:23:46,470 --> 00:23:51,210
remove the current find templates

00:23:48,960 --> 00:23:52,470
templates because they're customized we

00:23:51,210 --> 00:23:55,289
don't need those because we can

00:23:52,470 --> 00:23:57,379
basically use ideal files to generate

00:23:55,289 --> 00:24:01,500
the code that we need using my cracks

00:23:57,379 --> 00:24:04,139
RCTs gen we do some code adjustments of

00:24:01,500 --> 00:24:06,419
course that support integration of my

00:24:04,139 --> 00:24:10,769
cracks our CVS and that include of

00:24:06,419 --> 00:24:13,019
course bringing or leveraging the new

00:24:10,769 --> 00:24:15,450
york - ideal conversions and at the same

00:24:13,019 --> 00:24:16,710
time leveraging what we brought in the

00:24:15,450 --> 00:24:18,779
last year which is the time

00:24:16,710 --> 00:24:21,090
synchronization and filtering at the

00:24:18,779 --> 00:24:22,769
same time on the agent side we're going

00:24:21,090 --> 00:24:25,590
to leverage the integration service so

00:24:22,769 --> 00:24:28,460
on the px or Ross comm package because

00:24:25,590 --> 00:24:31,769
we want to add direct integration we

00:24:28,460 --> 00:24:33,720
Ross - by the means of the usage of the

00:24:31,769 --> 00:24:35,429
integration service first in the end

00:24:33,720 --> 00:24:38,580
installed needs some sort of validation

00:24:35,429 --> 00:24:40,139
and the end encode and documentation

00:24:38,580 --> 00:24:42,120
update and that can be done through the

00:24:40,139 --> 00:24:45,450
unit tests and integration tests and of

00:24:42,120 --> 00:24:48,659
course some example applications where

00:24:45,450 --> 00:24:51,320
we validate on something that is real so

00:24:48,659 --> 00:24:56,870
can be something as a system monitoring

00:24:51,320 --> 00:25:00,029
vehicle control etc the second phase is

00:24:56,870 --> 00:25:03,990
bringing micros Explorer so if my cracks

00:25:00,029 --> 00:25:06,240
RC DDS in place we integrate the ROS

00:25:03,990 --> 00:25:10,889
client libraries which are brought with

00:25:06,240 --> 00:25:14,299
the micro EBS client and since since

00:25:10,889 --> 00:25:18,659
there are already support for some ST

00:25:14,299 --> 00:25:20,549
targets but not stm32 a7 which which

00:25:18,659 --> 00:25:23,690
targets like platforms like the peaks of

00:25:20,549 --> 00:25:26,839
four it's important that we

00:25:23,690 --> 00:25:28,729
this integration 4f7 first and then not

00:25:26,839 --> 00:25:31,249
only the pixel for but we can have

00:25:28,729 --> 00:25:35,209
support for this in a platform like this

00:25:31,249 --> 00:25:37,459
altering sky node of course others other

00:25:35,209 --> 00:25:39,859
platforms need to be integrated further

00:25:37,459 --> 00:25:42,229
because we are not just supporting st

00:25:39,859 --> 00:25:44,209
targets on kx-4 we have other targets

00:25:42,229 --> 00:25:47,869
that we want to integrate and validate

00:25:44,209 --> 00:25:49,579
and as we did the code validation code

00:25:47,869 --> 00:25:51,440
modifications for the my cracks are

00:25:49,579 --> 00:25:54,289
seeded yes we also need to do the same

00:25:51,440 --> 00:25:59,059
thing or micro rows and basically

00:25:54,289 --> 00:26:01,759
leverage there was two API or the client

00:25:59,059 --> 00:26:05,509
libraries on the px4 side by using the

00:26:01,759 --> 00:26:08,299
ROS API inside px4 and again some

00:26:05,509 --> 00:26:11,119
validation needs to be done by means of

00:26:08,299 --> 00:26:15,829
units and integration tests and also by

00:26:11,119 --> 00:26:20,089
example applications and that's all from

00:26:15,829 --> 00:26:24,049
our side we are now free to receive your

00:26:20,089 --> 00:26:27,549
questions ok thank you guys

00:26:24,049 --> 00:26:29,719
Ramon here can you still hear me yes ok

00:26:27,549 --> 00:26:31,069
awesome so I'm going to share some

00:26:29,719 --> 00:26:35,149
questions from the community with you

00:26:31,069 --> 00:26:47,089
please wait out loud the questions

00:26:35,149 --> 00:26:53,389
before answering hi McCann you want to

00:26:47,089 --> 00:26:53,719
answer the first what is the first

00:26:53,389 --> 00:26:58,069
question

00:26:53,719 --> 00:27:00,259
oh so the question is why does one need

00:26:58,069 --> 00:27:02,629
DDS when math linked already does the

00:27:00,259 --> 00:27:05,509
mess a message passing between px4 and

00:27:02,629 --> 00:27:12,019
off off port systems and we are talking

00:27:05,509 --> 00:27:14,809
about Mavros in this case of course well

00:27:12,019 --> 00:27:17,059
in the case of the years you know a

00:27:14,809 --> 00:27:18,949
protocol that is a multiple protocol

00:27:17,059 --> 00:27:20,269
that is widely used in a lot of

00:27:18,949 --> 00:27:23,149
different applications

00:27:20,269 --> 00:27:24,979
so in this of interoperability for

00:27:23,149 --> 00:27:27,589
example in the case of probes to that

00:27:24,979 --> 00:27:30,019
they induces already in DBS as their

00:27:27,589 --> 00:27:33,739
meter while you are going to have a lot

00:27:30,019 --> 00:27:36,290
more and also DVS has a lot of irritates

00:27:33,739 --> 00:27:40,640
in different data links

00:27:36,290 --> 00:27:44,410
has been using UAVs in tactical data

00:27:40,640 --> 00:27:49,100
links and well you can make use of all

00:27:44,410 --> 00:27:55,940
that history to incorporate data use

00:27:49,100 --> 00:27:59,150
cases to your own system ok so there's

00:27:55,940 --> 00:28:02,480
another question which asks if would you

00:27:59,150 --> 00:28:06,650
would wheel or we recommend shifting to

00:28:02,480 --> 00:28:09,530
Raza for a weekend or UAV applications

00:28:06,650 --> 00:28:12,200
but if it is or if it is stable yet so I

00:28:09,530 --> 00:28:15,650
would say that most of the components of

00:28:12,200 --> 00:28:18,110
the what what we currently support index

00:28:15,650 --> 00:28:20,390
for it's already in it's already working

00:28:18,110 --> 00:28:22,370
it's it was validated and it's being

00:28:20,390 --> 00:28:24,950
validated me in different application

00:28:22,370 --> 00:28:28,970
and there are some people already using

00:28:24,950 --> 00:28:35,630
it I would say that this jump into micro

00:28:28,970 --> 00:28:37,070
xrc CBDs will even make the bridge

00:28:35,630 --> 00:28:41,780
itself and what we're trying to achieve

00:28:37,070 --> 00:28:43,520
with these px4 frost bridging well it

00:28:41,780 --> 00:28:46,669
will make it for sure much more stable

00:28:43,520 --> 00:28:48,049
and with the security and the

00:28:46,669 --> 00:28:53,780
performance that we're trying to achieve

00:28:48,049 --> 00:28:56,480
with the inclusion of EDS so the other

00:28:53,780 --> 00:29:00,169
question is how do you see the future of

00:28:56,480 --> 00:29:02,330
frost suing UAV industry and its px4

00:29:00,169 --> 00:29:13,549
environment do you want to answer to

00:29:02,330 --> 00:29:18,520
this time well we do have the different

00:29:13,549 --> 00:29:23,380
markets for let's say professional UAVs

00:29:18,520 --> 00:29:31,940
in their defense and our space markets a

00:29:23,380 --> 00:29:35,700
consumer drones but every day this the

00:29:31,940 --> 00:29:38,789
line between those markets is

00:29:35,700 --> 00:29:38,789
[Music]

00:29:38,799 --> 00:29:45,919
disappearing

00:29:40,700 --> 00:29:50,809
and I think at least you are going to

00:29:45,919 --> 00:29:54,080
see a lot of UAV very professional

00:29:50,809 --> 00:29:59,299
Europe is using VBS in the consumer

00:29:54,080 --> 00:30:01,669
market and by service' so those two is

00:29:59,299 --> 00:30:04,429
becoming more and more devious because

00:30:01,669 --> 00:30:11,139
they are exposing a lot of the VBS

00:30:04,429 --> 00:30:16,309
capabilities and the rapper they have is

00:30:11,139 --> 00:30:18,889
very very thin so what I see is that

00:30:16,309 --> 00:30:23,179
finally both markets are going to be the

00:30:18,889 --> 00:30:25,070
same market probably and well trust to

00:30:23,179 --> 00:30:30,369
is going to become understand that the

00:30:25,070 --> 00:30:33,679
cutter also for the pigs for community

00:30:30,369 --> 00:30:37,519
ok another question is that if is candid

00:30:33,679 --> 00:30:40,340
yes realized in px4 called voice no it's

00:30:37,519 --> 00:30:43,340
not I'm not I don't think it's going to

00:30:40,340 --> 00:30:46,549
be and the last question that I have is

00:30:43,340 --> 00:30:48,919
if there is any plans for Mavros to 4px

00:30:46,549 --> 00:30:51,639
lawsuit well I can answer this so

00:30:48,919 --> 00:30:54,739
there's there's plans for Mavros -

00:30:51,639 --> 00:30:57,950
there's no plans for Mavros - probably

00:30:54,739 --> 00:31:00,139
in px4 because we are leveraging the

00:30:57,950 --> 00:31:03,259
direct integration which was - by the

00:31:00,139 --> 00:31:05,299
means of micro first of course

00:31:03,259 --> 00:31:07,840
microwaves are CBDs and then rose to

00:31:05,299 --> 00:31:13,009
because it allows you to do the direct

00:31:07,840 --> 00:31:18,619
translation from px4 to ross - without

00:31:13,009 --> 00:31:19,940
the need of the usage of my link thank

00:31:18,619 --> 00:31:22,609
you that's all the questions come on

00:31:19,940 --> 00:31:27,889
here you know - come on over time thank

00:31:22,609 --> 00:31:29,809
you - thank you this was really great

00:31:27,889 --> 00:31:31,639
I'm promote here your host speaking

00:31:29,809 --> 00:31:34,179
please join me thinking hi man you know

00:31:31,639 --> 00:31:36,220
they give her a presentation and all the

00:31:34,179 --> 00:31:38,359
grandest open source contributions

00:31:36,220 --> 00:31:38,650
tremendous work from both of you to help

00:31:38,359 --> 00:31:40,510
us

00:31:38,650 --> 00:31:45,090
you're here thank you and I'll see you

00:31:40,510 --> 00:31:45,090

YouTube URL: https://www.youtube.com/watch?v=lZ8crGI16qA


