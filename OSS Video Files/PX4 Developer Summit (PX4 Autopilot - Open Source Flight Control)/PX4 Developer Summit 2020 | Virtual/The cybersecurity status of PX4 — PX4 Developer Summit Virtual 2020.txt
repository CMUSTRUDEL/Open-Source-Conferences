Title: The cybersecurity status of PX4 — PX4 Developer Summit Virtual 2020
Publication date: 2020-07-06
Playlist: PX4 Developer Summit 2020 | Virtual
Description: 
	The PX4 Developer Summit is the annual flagship conference hosted by Dronecode for the drone development community. https://bit.ly/2YXe4Rd

Title: The cybersecurity status of PX4

Summary: In this session, Víctor from Alias Robotics will present a short evaluation of the current cybersecurity status of the PX4 autopilot. Following a data-based approach and by comparing it with other existing open source solutions for drones, Víctor will briefly cover some of the cybersecurity flaws in the source code, make recommendations and proposals to improve the overall security. The speech will finish by covering the typical DevSevOps cycle in robotics and will launch some open questions on how this could be embedded into the PX4 dev. cycle.

https://sched.co/cnun
Captions: 
	00:00:05,390 --> 00:00:10,050
hello guys this is Victor I'm super

00:00:08,610 --> 00:00:12,929
happy to be here speaking today about

00:00:10,050 --> 00:00:14,280
the cybersecurity status of px4 so

00:00:12,929 --> 00:00:18,119
hopefully you'll you'll get enjoy it

00:00:14,280 --> 00:00:21,390
unless dive into it right

00:00:18,119 --> 00:00:22,890
so before diving directly into security

00:00:21,390 --> 00:00:25,070
I wanted to share a few words about some

00:00:22,890 --> 00:00:29,420
past contributions myself and my team

00:00:25,070 --> 00:00:32,460
did so we actually started back in 2013

00:00:29,420 --> 00:00:35,940
with this beetle pilot project which was

00:00:32,460 --> 00:00:38,390
actually a pretty early phase just about

00:00:35,940 --> 00:00:41,129
a month before a big hub was actually

00:00:38,390 --> 00:00:43,110
released and the goal of this big old

00:00:41,129 --> 00:00:45,570
pilot project was essentially to port

00:00:43,110 --> 00:00:47,250
autopilot Tilden's I did this together

00:00:45,570 --> 00:00:49,710
with other students and mentored by

00:00:47,250 --> 00:00:52,289
Android retail and it took us about a

00:00:49,710 --> 00:00:53,940
year to get essentially the first flight

00:00:52,289 --> 00:00:57,570
you can see over there a video that

00:00:53,940 --> 00:00:58,460
shows my real bad piloting skills which

00:00:57,570 --> 00:01:02,820
haven't improved

00:00:58,460 --> 00:01:05,850
frankly but still the first auto pilot

00:01:02,820 --> 00:01:08,340
copter flight which essentially got us

00:01:05,850 --> 00:01:10,140
very excited especially because about a

00:01:08,340 --> 00:01:12,960
month after that a drone called

00:01:10,140 --> 00:01:16,439
foundation was first announced and then

00:01:12,960 --> 00:01:18,270
created which essentially got I guess

00:01:16,439 --> 00:01:19,770
all of us into this community to start

00:01:18,270 --> 00:01:21,930
contributing together and pushing

00:01:19,770 --> 00:01:24,420
towards the same direction we certainly

00:01:21,930 --> 00:01:26,700
did so and by the end of 2016 we

00:01:24,420 --> 00:01:29,850
released this second video which shows

00:01:26,700 --> 00:01:31,439
the launch of a version of px4 that has

00:01:29,850 --> 00:01:34,560
been customized to replace the

00:01:31,439 --> 00:01:36,630
communication middleware micro or for a

00:01:34,560 --> 00:01:40,710
fully fledged DDS implementation

00:01:36,630 --> 00:01:43,500
essentially we had a px4 version that

00:01:40,710 --> 00:01:45,990
directly used ROG - for communication

00:01:43,500 --> 00:01:48,570
across the flight stacks of modules

00:01:45,990 --> 00:01:51,240
across different essentially elements

00:01:48,570 --> 00:01:53,490
within the autopilot and this allowed us

00:01:51,240 --> 00:01:55,979
to replace bridges that you might be

00:01:53,490 --> 00:01:58,890
using such as map rows and directly

00:01:55,979 --> 00:02:01,460
interoperate with roast you natively it

00:01:58,890 --> 00:02:04,200
also allowed us to further optimize

00:02:01,460 --> 00:02:07,470
latencies and essentially get an overall

00:02:04,200 --> 00:02:09,930
better performing soft real-time

00:02:07,470 --> 00:02:13,920
pilot which essentially we were aiming

00:02:09,930 --> 00:02:16,260
for and which led us also to essentially

00:02:13,920 --> 00:02:18,180
achieve some hard real-time capabilities

00:02:16,260 --> 00:02:20,540
which we did by synthesizing some of the

00:02:18,180 --> 00:02:24,020
autopilot as its own Hardware directly

00:02:20,540 --> 00:02:26,730
real exciting stuff which unfortunately

00:02:24,020 --> 00:02:28,380
got interrupted not for bad reasons but

00:02:26,730 --> 00:02:33,170
for even better reasons we got quite

00:02:28,380 --> 00:02:35,610
hurt and that was real good real fun

00:02:33,170 --> 00:02:37,590
unfortunately we had to pee what duty

00:02:35,610 --> 00:02:39,510
essentially our owners at the time after

00:02:37,590 --> 00:02:42,690
a few months they decided to move

00:02:39,510 --> 00:02:44,850
towards modularity for industrial robots

00:02:42,690 --> 00:02:46,800
we essentially started building safety

00:02:44,850 --> 00:02:50,459
certified components for industrial

00:02:46,800 --> 00:02:53,580
robots which was also real interesting

00:02:50,459 --> 00:02:55,530
and got us to learn lots of things but

00:02:53,580 --> 00:02:57,120
after a few years essentially alias

00:02:55,530 --> 00:02:59,130
robotics was created by some of the

00:02:57,120 --> 00:03:02,040
original founders of furler robotics

00:02:59,130 --> 00:03:05,070
I never since 2018 it's been essentially

00:03:02,040 --> 00:03:06,930
helping companies and manufacturers and

00:03:05,070 --> 00:03:11,070
end-users to secure their robots and

00:03:06,930 --> 00:03:13,709
above all components so security let's

00:03:11,070 --> 00:03:15,840
dive into it by starting actually to

00:03:13,709 --> 00:03:19,290
review a slightly this concept of Deb

00:03:15,840 --> 00:03:20,850
sack ops which is a centric concept that

00:03:19,290 --> 00:03:24,690
I wanted to share at least and which

00:03:20,850 --> 00:03:26,670
should somehow Drive all of our minds

00:03:24,690 --> 00:03:29,250
towards getting a more secure landscape

00:03:26,670 --> 00:03:31,350
in px4 deficit ops is a series of

00:03:29,250 --> 00:03:35,160
practices that aim to implant security

00:03:31,350 --> 00:03:37,799
at every single phase of the essentially

00:03:35,160 --> 00:03:39,299
flow across development through a

00:03:37,799 --> 00:03:40,890
deployment production and

00:03:39,299 --> 00:03:44,850
post-production you can see here some of

00:03:40,890 --> 00:03:47,120
the tasks within those phases every

00:03:44,850 --> 00:03:49,380
single one should consider security how

00:03:47,120 --> 00:03:51,120
you've got a publication over there we

00:03:49,380 --> 00:03:53,910
release by the way in case you wish to

00:03:51,120 --> 00:03:57,630
further dive into this but answering the

00:03:53,910 --> 00:04:00,660
how question I got this diagram here

00:03:57,630 --> 00:04:02,850
which hopefully clarifies many of the

00:04:00,660 --> 00:04:05,850
essentially items that should be

00:04:02,850 --> 00:04:07,709
executed within these phases and tasks

00:04:05,850 --> 00:04:10,980
so for example in development we have

00:04:07,709 --> 00:04:13,290
the plan task and within the plan task

00:04:10,980 --> 00:04:14,819
there are a number of items we should

00:04:13,290 --> 00:04:19,049
take into account if we want

00:04:14,819 --> 00:04:21,690
a more secure approach so in this case

00:04:19,049 --> 00:04:26,250
performed threat modeling once we dive

00:04:21,690 --> 00:04:27,960
into the coding essentially task we have

00:04:26,250 --> 00:04:30,150
also some attributes to consider the

00:04:27,960 --> 00:04:31,710
same for build and so on and so forth

00:04:30,150 --> 00:04:34,530
in this presentation I'll be touching

00:04:31,710 --> 00:04:36,530
into a few mainly threat modeling also a

00:04:34,530 --> 00:04:40,470
bit of static analysis sassed

00:04:36,530 --> 00:04:41,820
and a bit of flow management and of

00:04:40,470 --> 00:04:44,550
course I'd love to touch into all of

00:04:41,820 --> 00:04:46,530
them very happy to do so offline so if

00:04:44,550 --> 00:04:48,780
anyone has interest and has resources

00:04:46,530 --> 00:04:50,280
actually to contribute to this please

00:04:48,780 --> 00:04:52,560
reach out and I'll be more than happy to

00:04:50,280 --> 00:04:55,259
continue the discussion offline I'm

00:04:52,560 --> 00:04:59,400
chatting it into these few bits again

00:04:55,259 --> 00:05:01,560
due to time matters and diving directly

00:04:59,400 --> 00:05:03,539
into threat modeling but before that

00:05:01,560 --> 00:05:06,810
Jews left here a couple of slides to

00:05:03,539 --> 00:05:10,020
clarify definitions how we do define

00:05:06,810 --> 00:05:12,120
security flaws and this is important

00:05:10,020 --> 00:05:14,160
because according to our research so far

00:05:12,120 --> 00:05:16,710
different organizations have different

00:05:14,160 --> 00:05:19,139
depredations so this is ours the main

00:05:16,710 --> 00:05:20,669
difference is that for us to accept a

00:05:19,139 --> 00:05:23,580
vulnerability there needs to be evidence

00:05:20,669 --> 00:05:25,349
there it needs to be exploitable many

00:05:23,580 --> 00:05:28,710
other organizations accept the so-called

00:05:25,349 --> 00:05:31,320
theoretical vulnerabilities we typically

00:05:28,710 --> 00:05:35,580
aim to provide evidence or at least have

00:05:31,320 --> 00:05:36,960
clear research on them and when possible

00:05:35,580 --> 00:05:40,620
provide an exploit though again this

00:05:36,960 --> 00:05:44,250
requires resources for accelerated

00:05:40,620 --> 00:05:46,139
mitigation i've also cooked in here a

00:05:44,250 --> 00:05:47,580
few of the resources have used to put

00:05:46,139 --> 00:05:50,009
together this presentation so if you're

00:05:47,580 --> 00:05:52,560
really interested in security and

00:05:50,009 --> 00:05:55,259
security for px4 go ahead and check this

00:05:52,560 --> 00:05:57,030
out very very interesting and thanks to

00:05:55,259 --> 00:05:59,150
all of these authors who definitely have

00:05:57,030 --> 00:06:01,710
contributed a lot of this last few years

00:05:59,150 --> 00:06:04,530
now diving into the few bits that I'll

00:06:01,710 --> 00:06:06,750
touch in this short presentation first

00:06:04,530 --> 00:06:08,430
one threat modeling it's critical to

00:06:06,750 --> 00:06:11,340
understand what's your threat landscape

00:06:08,430 --> 00:06:13,860
if you wish to approach security in a

00:06:11,340 --> 00:06:16,830
proper manner third modeling allows you

00:06:13,860 --> 00:06:18,570
to by using abstractions aid in thinking

00:06:16,830 --> 00:06:21,840
about security risk is typically a

00:06:18,570 --> 00:06:25,350
theoretical study of the application

00:06:21,840 --> 00:06:27,690
based on a particular use case this has

00:06:25,350 --> 00:06:29,370
we have actually done it in cooperation

00:06:27,690 --> 00:06:31,470
with other organizations for other

00:06:29,370 --> 00:06:33,840
communities for the Ross community for

00:06:31,470 --> 00:06:36,540
example so we're very open to do the

00:06:33,840 --> 00:06:39,420
same so if anyone again has proactive

00:06:36,540 --> 00:06:41,160
interest on this do reach us out we

00:06:39,420 --> 00:06:44,070
definitely would need to define some use

00:06:41,160 --> 00:06:45,780
cases so manufacturers or drug users out

00:06:44,070 --> 00:06:48,120
there with interesting use cases please

00:06:45,780 --> 00:06:50,280
reach out you've got here a few bits I

00:06:48,120 --> 00:06:52,740
cooked which essentially present

00:06:50,280 --> 00:06:54,570
different components within the auto

00:06:52,740 --> 00:06:56,460
pilot and outside the auto pilot in

00:06:54,570 --> 00:06:58,170
interacting with other peripherals and

00:06:56,460 --> 00:07:00,900
competing computers and Twitter's and

00:06:58,170 --> 00:07:03,630
other elements within a drone you also

00:07:00,900 --> 00:07:06,930
have here some of the communication

00:07:03,630 --> 00:07:09,870
lines drawn across different protocols

00:07:06,930 --> 00:07:13,290
and interfaces and on top of that you've

00:07:09,870 --> 00:07:17,220
got the boundaries boundaries are drawn

00:07:13,290 --> 00:07:18,840
with dashed black lines and their names

00:07:17,220 --> 00:07:21,060
for each one of those boundaries and

00:07:18,840 --> 00:07:22,950
crossing these boundaries are the

00:07:21,060 --> 00:07:24,510
communication lines which define the

00:07:22,950 --> 00:07:27,690
entry points you've got a few entry

00:07:24,510 --> 00:07:29,670
points with red or brown dots which

00:07:27,690 --> 00:07:32,010
represent either primary or secondary

00:07:29,670 --> 00:07:33,900
entry points which do you typically get

00:07:32,010 --> 00:07:35,460
into account when you start considering

00:07:33,900 --> 00:07:37,170
your threats and from that point you

00:07:35,460 --> 00:07:39,600
defined watch out what are your flaws

00:07:37,170 --> 00:07:41,880
and if you explore your flaws you you

00:07:39,600 --> 00:07:43,560
find vulnerabilities and so on and so

00:07:41,880 --> 00:07:45,390
forth so anyhow threat modeling

00:07:43,560 --> 00:07:48,240
something missing and something we

00:07:45,390 --> 00:07:53,550
definitely wanted to add a few bits on

00:07:48,240 --> 00:07:55,110
so here it is second piece is actually

00:07:53,550 --> 00:07:57,360
second and third piece because we'll

00:07:55,110 --> 00:08:01,800
touch here static analysis as well as

00:07:57,360 --> 00:08:04,530
flow management is static application

00:08:01,800 --> 00:08:06,870
security testing cest or static analysis

00:08:04,530 --> 00:08:08,790
in short it's a study of software

00:08:06,870 --> 00:08:10,680
without executing it and there's some

00:08:08,790 --> 00:08:13,350
work already done in the community on

00:08:10,680 --> 00:08:15,750
this end particularly the picture you've

00:08:13,350 --> 00:08:19,500
got over here comes from the px4

00:08:15,750 --> 00:08:22,820
official Coverity scan which already

00:08:19,500 --> 00:08:25,950
shows some work towards mitigation of

00:08:22,820 --> 00:08:28,650
outstanding flows but still quite a bit

00:08:25,950 --> 00:08:31,470
of work to do and we identified a number

00:08:28,650 --> 00:08:32,270
of issues in the existing static

00:08:31,470 --> 00:08:34,790
analysis

00:08:32,270 --> 00:08:35,840
infrastructure picks for which you can

00:08:34,790 --> 00:08:39,800
see on the left side of the slide

00:08:35,840 --> 00:08:42,470
essentially they only use one tool so

00:08:39,800 --> 00:08:44,900
far so there's only one security

00:08:42,470 --> 00:08:47,390
perspective even though synopsis is a

00:08:44,900 --> 00:08:50,000
huge security company it's certainly

00:08:47,390 --> 00:08:50,810
just one security perspective so this is

00:08:50,000 --> 00:08:53,060
something that could be improved

00:08:50,810 --> 00:08:55,310
certainly and there's no real public

00:08:53,060 --> 00:08:59,870
transparency on the flaws essentially

00:08:55,310 --> 00:09:02,290
only selected developers get report in

00:08:59,870 --> 00:09:04,760
their emails and this definitely

00:09:02,290 --> 00:09:06,140
decreases the amount of contributions

00:09:04,760 --> 00:09:08,750
that can come from other groups such as

00:09:06,140 --> 00:09:11,960
for example ourselves and you also

00:09:08,750 --> 00:09:13,910
require license for Coverity if you wish

00:09:11,960 --> 00:09:16,340
to locally reproduce some of these

00:09:13,910 --> 00:09:18,020
issues which typically is something

00:09:16,340 --> 00:09:20,870
necessary if you want to speed up triage

00:09:18,020 --> 00:09:22,550
and mitigation and finally when we speak

00:09:20,870 --> 00:09:24,140
about reaction mitigation you always

00:09:22,550 --> 00:09:25,670
need to speak about reproduction in

00:09:24,140 --> 00:09:27,740
robotics reproduction of issues is

00:09:25,670 --> 00:09:31,010
critical very time-consuming due to the

00:09:27,740 --> 00:09:32,510
complexity the same happens in drones so

00:09:31,010 --> 00:09:35,480
definitely something to improve of

00:09:32,510 --> 00:09:37,100
course it's free so it's cool and it

00:09:35,480 --> 00:09:40,760
does the job for the community it has

00:09:37,100 --> 00:09:42,500
done it so far but definitely we wanted

00:09:40,760 --> 00:09:45,230
to contribute on this end so here is

00:09:42,500 --> 00:09:47,840
what we've been doing on this first

00:09:45,230 --> 00:09:50,930
thing that we did was essentially we

00:09:47,840 --> 00:09:53,000
grabbed for open source tools for static

00:09:50,930 --> 00:09:55,940
analysis and launched them across

00:09:53,000 --> 00:09:58,340
different releases of px4 official

00:09:55,940 --> 00:10:01,280
releases I grabbed the latest one

00:09:58,340 --> 00:10:03,170
version 110 - and if this is not the

00:10:01,280 --> 00:10:05,900
latest guys just ping me and let me know

00:10:03,170 --> 00:10:08,780
which is probably I might have cutting

00:10:05,900 --> 00:10:11,630
it wrong but essentially you've got over

00:10:08,780 --> 00:10:15,280
here the total amount of flaws of

00:10:11,630 --> 00:10:19,430
security bugs that were identified by

00:10:15,280 --> 00:10:21,260
running these four tools you do not

00:10:19,430 --> 00:10:23,000
require any license for these tools

00:10:21,260 --> 00:10:24,320
because all of them are open-source you

00:10:23,000 --> 00:10:26,450
can check their source code you can

00:10:24,320 --> 00:10:28,220
download you can customize them so it's

00:10:26,450 --> 00:10:30,590
pretty cool already fixing two of the

00:10:28,220 --> 00:10:33,500
issues previously identified and also

00:10:30,590 --> 00:10:36,380
showing some interesting growth or

00:10:33,500 --> 00:10:38,150
decrease of the flaws especially with

00:10:36,380 --> 00:10:40,790
this latest release we saw an increase

00:10:38,150 --> 00:10:43,010
of the flaws so definitely willing to

00:10:40,790 --> 00:10:43,710
contribute to mitigate to address them

00:10:43,010 --> 00:10:46,020
to triage

00:10:43,710 --> 00:10:49,290
them so so alias would love to

00:10:46,020 --> 00:10:51,630
contribute more and again we ask for

00:10:49,290 --> 00:10:55,470
commitment from other parties as well as

00:10:51,630 --> 00:10:58,680
well as contributions and support next

00:10:55,470 --> 00:11:01,980
issue we tackled was the public

00:10:58,680 --> 00:11:04,440
transparency so our experience so far is

00:11:01,980 --> 00:11:06,780
that triaging is very time consuming

00:11:04,440 --> 00:11:10,500
very expensive and having developer

00:11:06,780 --> 00:11:12,210
security researchers and flight experts

00:11:10,500 --> 00:11:15,300
are helped very much in the discussion

00:11:12,210 --> 00:11:17,370
so what we did is we pushed every single

00:11:15,300 --> 00:11:21,480
one of these flaws into a separate

00:11:17,370 --> 00:11:24,630
github issue in a centralized archive

00:11:21,480 --> 00:11:28,020
which we called the robot vulnerability

00:11:24,630 --> 00:11:30,990
database and again as you can see here

00:11:28,020 --> 00:11:33,570
at the top on ticket to six four zero

00:11:30,990 --> 00:11:37,110
which is essentially an overflow a

00:11:33,570 --> 00:11:39,210
buffer overflow it is an issue with the

00:11:37,110 --> 00:11:41,250
right tags for it to be filtered and

00:11:39,210 --> 00:11:43,200
identified and it's open for discussion

00:11:41,250 --> 00:11:44,700
anyone can jump into it and say hey guys

00:11:43,200 --> 00:11:46,440
I don't think this is a security issue

00:11:44,700 --> 00:11:50,130
it's a quality one or it's not even a

00:11:46,440 --> 00:11:53,760
quality one this I tested this I don't

00:11:50,130 --> 00:11:56,460
get this issue in my local fork please

00:11:53,760 --> 00:11:58,200
can someone double-check or yes I can

00:11:56,460 --> 00:12:01,740
confirm it and so you can get further

00:11:58,200 --> 00:12:04,890
triage and eventually mitigated so this

00:12:01,740 --> 00:12:07,790
is enabled and really for these plus 500

00:12:04,890 --> 00:12:10,530
tickets we we essentially pushed for px4

00:12:07,790 --> 00:12:12,300
final issue reproduction still you've

00:12:10,530 --> 00:12:14,220
got all of this information but

00:12:12,300 --> 00:12:17,850
reproduction still becomes cumbersome

00:12:14,220 --> 00:12:19,950
because you need to go ahead fork or

00:12:17,850 --> 00:12:22,080
clone the sources and to find the right

00:12:19,950 --> 00:12:25,620
line you need to figure out exactly how

00:12:22,080 --> 00:12:27,990
to essentially trigger that so that you

00:12:25,620 --> 00:12:30,090
can reiterate on the source code

00:12:27,990 --> 00:12:33,900
mitigate it and then double check it

00:12:30,090 --> 00:12:37,020
again time-consuming cumbersome so what

00:12:33,900 --> 00:12:40,500
we do what we did is essentially we put

00:12:37,020 --> 00:12:42,660
all of these bits into the ticket and by

00:12:40,500 --> 00:12:46,860
bits I mean we describe it by including

00:12:42,660 --> 00:12:49,770
IDs title informal security language we

00:12:46,860 --> 00:12:52,380
describe the system vendor severity we

00:12:49,770 --> 00:12:54,370
describe the flow itself and then we

00:12:52,380 --> 00:12:55,660
have a section for mitigation

00:12:54,370 --> 00:12:59,740
in this case it's empty because it

00:12:55,660 --> 00:13:01,330
hasn't been trashed and exploitation and

00:12:59,740 --> 00:13:04,000
particularly within exploitation we've

00:13:01,330 --> 00:13:06,730
got this exploitation recipe all of this

00:13:04,000 --> 00:13:09,339
syntax is simple y'know syntax super

00:13:06,730 --> 00:13:12,220
super easy and the exploitation recipe

00:13:09,339 --> 00:13:14,830
gives you a recipe for how to reproduce

00:13:12,220 --> 00:13:16,360
this you can describe the networks you

00:13:14,830 --> 00:13:18,850
can connect different elements different

00:13:16,360 --> 00:13:21,400
even instances of px4 you can describe

00:13:18,850 --> 00:13:25,120
which docker containers you want to use

00:13:21,400 --> 00:13:27,910
to put together this images so here we

00:13:25,120 --> 00:13:30,220
have the PX for base image plus a few

00:13:27,910 --> 00:13:32,260
volumes that add different tools and

00:13:30,220 --> 00:13:33,760
then you describe a flow which is

00:13:32,260 --> 00:13:35,589
essentially a series of commands for

00:13:33,760 --> 00:13:39,990
reproducing this in this case it's super

00:13:35,589 --> 00:13:43,930
simple and just with a single bash

00:13:39,990 --> 00:13:46,540
common command sorry you can fetch the

00:13:43,930 --> 00:13:48,820
ticket from the robot database and then

00:13:46,540 --> 00:13:50,620
you can launch the flow again with

00:13:48,820 --> 00:13:54,670
another command so two commands to

00:13:50,620 --> 00:13:57,550
reproduce this ticket super easy super

00:13:54,670 --> 00:14:00,459
simple very time efficient and this

00:13:57,550 --> 00:14:03,640
already improves by far the experience

00:14:00,459 --> 00:14:05,080
of mitigation of issues you can see over

00:14:03,640 --> 00:14:08,860
there actually I'm gonna highlight right

00:14:05,080 --> 00:14:11,680
now the exact same issue so again I

00:14:08,860 --> 00:14:14,140
could now go ahead and just make small

00:14:11,680 --> 00:14:15,610
change and reproduce this real quick

00:14:14,140 --> 00:14:18,370
across different tickets across

00:14:15,610 --> 00:14:20,170
different bugs so the overall experience

00:14:18,370 --> 00:14:24,010
gets simplified not just that we can

00:14:20,170 --> 00:14:26,320
also simulate more complex environments

00:14:24,010 --> 00:14:28,959
where attackers are exploiting flaws

00:14:26,320 --> 00:14:31,930
over the network with different tools so

00:14:28,959 --> 00:14:33,550
this is what we designed for the last

00:14:31,930 --> 00:14:36,220
few years and what we are now exposed

00:14:33,550 --> 00:14:38,950
into the px4 community for improving

00:14:36,220 --> 00:14:42,010
essentially triage in static analysis

00:14:38,950 --> 00:14:44,740
and mitigation so long story short our

00:14:42,010 --> 00:14:47,560
contributions to static analysis are a

00:14:44,740 --> 00:14:51,520
with reboot px4 across different

00:14:47,560 --> 00:14:54,150
versions with four different tools we've

00:14:51,520 --> 00:14:57,279
also contributed to getting this

00:14:54,150 --> 00:14:59,709
integrated archive of floss this flow

00:14:57,279 --> 00:15:01,890
management centralized database which we

00:14:59,709 --> 00:15:04,780
call the robot vulnerability database

00:15:01,890 --> 00:15:06,270
and we haven't used focused on px4 we

00:15:04,780 --> 00:15:07,709
wanted to get some

00:15:06,270 --> 00:15:09,540
comparison with other open-source

00:15:07,709 --> 00:15:12,510
autopilot so you've got here some

00:15:09,540 --> 00:15:15,270
numbers for the total amount of flows

00:15:12,510 --> 00:15:17,750
for APM and papparazzi as well using

00:15:15,270 --> 00:15:20,310
this exact same tools with their latest

00:15:17,750 --> 00:15:22,890
releases I picked the latest releases

00:15:20,310 --> 00:15:25,649
for each one of these and these gets

00:15:22,890 --> 00:15:27,990
also correlated with the amount of lines

00:15:25,649 --> 00:15:32,390
of code which has been produced using

00:15:27,990 --> 00:15:35,810
clock so anyhow interesting data that

00:15:32,390 --> 00:15:40,380
essentially tells us more about the

00:15:35,810 --> 00:15:41,490
security status of px4 and also that all

00:15:40,380 --> 00:15:43,709
of us should probably continue

00:15:41,490 --> 00:15:45,770
contributing to improve the security at

00:15:43,709 --> 00:15:48,330
least from a static analysis perspective

00:15:45,770 --> 00:15:50,279
again all of this data is available in

00:15:48,330 --> 00:15:52,500
the robot vulnerability database so if

00:15:50,279 --> 00:15:54,300
you have interest in all of this I

00:15:52,500 --> 00:15:57,959
encourage you to go ahead click on this

00:15:54,300 --> 00:16:00,120
link and contribute not just maybe in

00:15:57,959 --> 00:16:06,300
ps4 but possibly also with other robot

00:16:00,120 --> 00:16:08,430
components or drones now again I touched

00:16:06,300 --> 00:16:10,050
into these three items but I wanted to

00:16:08,430 --> 00:16:12,899
share a few bits on how to improve the

00:16:10,050 --> 00:16:15,300
overall cyber security of px4 so I

00:16:12,899 --> 00:16:18,000
annotated the previous devstack

00:16:15,300 --> 00:16:20,250
ops flow diagram and try to assess the

00:16:18,000 --> 00:16:22,500
px4 compliance with this current deficit

00:16:20,250 --> 00:16:24,209
box you've got in blue some of the items

00:16:22,500 --> 00:16:26,640
I didn't have enough time to look at so

00:16:24,209 --> 00:16:27,000
I really don't know their status right

00:16:26,640 --> 00:16:29,250
now

00:16:27,000 --> 00:16:31,440
apologies for that in yellow the ones

00:16:29,250 --> 00:16:33,329
that I assessed and weren't up to the

00:16:31,440 --> 00:16:35,610
expectations we typically have within

00:16:33,329 --> 00:16:37,860
alias robotic so definitely need some

00:16:35,610 --> 00:16:40,350
improvement and contributions and once

00:16:37,860 --> 00:16:42,440
again we volunteer to do so if there's

00:16:40,350 --> 00:16:45,060
people willing to support us

00:16:42,440 --> 00:16:47,940
particularly static analysis this serves

00:16:45,060 --> 00:16:49,829
quite a bit of work as we saw but also

00:16:47,940 --> 00:16:51,480
and specifically flow management and

00:16:49,829 --> 00:16:54,060
threat modeling definitely big

00:16:51,480 --> 00:16:55,920
priorities you can see them in red not

00:16:54,060 --> 00:16:59,010
just that also things such as

00:16:55,920 --> 00:17:01,050
penetration testing red teaming bug

00:16:59,010 --> 00:17:02,490
bounties or even vulnerability scans

00:17:01,050 --> 00:17:04,670
that happen periodically over the source

00:17:02,490 --> 00:17:06,569
code are things we definitely encourage

00:17:04,670 --> 00:17:09,780
very happy to continue the conversation

00:17:06,569 --> 00:17:13,620
on this offline so again ping me if you

00:17:09,780 --> 00:17:15,569
have interest on this again threat

00:17:13,620 --> 00:17:17,550
modeling is something we definitely

00:17:15,569 --> 00:17:18,400
encourage I already sell it but I just

00:17:17,550 --> 00:17:20,410
wanted to

00:17:18,400 --> 00:17:22,720
emphasizing here super important and

00:17:20,410 --> 00:17:26,559
something we definitely will be willing

00:17:22,720 --> 00:17:29,559
to contribute and cooperate with and

00:17:26,559 --> 00:17:32,320
finally we also wanted to just dedicate

00:17:29,559 --> 00:17:35,130
a few additional words about triage

00:17:32,320 --> 00:17:38,470
triage is super important again in these

00:17:35,130 --> 00:17:41,050
few bits we contributed we located more

00:17:38,470 --> 00:17:44,680
than 500 total floors for pH for across

00:17:41,050 --> 00:17:46,300
different versions so again lots of

00:17:44,680 --> 00:17:48,990
things to triage this is not something

00:17:46,300 --> 00:17:51,820
that a single organization or a group of

00:17:48,990 --> 00:17:53,679
developers can do this is something that

00:17:51,820 --> 00:17:56,380
requires full time dedication and

00:17:53,679 --> 00:17:58,540
definitely something that also requires

00:17:56,380 --> 00:18:00,370
a bit of experience and expertise so

00:17:58,540 --> 00:18:02,050
again please consider this very

00:18:00,370 --> 00:18:06,160
carefully

00:18:02,050 --> 00:18:08,440
beyond px4 development community beyond

00:18:06,160 --> 00:18:10,840
peers for source code how can I stay

00:18:08,440 --> 00:18:13,150
secure if I'm at wrong user that is

00:18:10,840 --> 00:18:15,100
using px4 so we also wanted to tackle

00:18:13,150 --> 00:18:16,780
this and share with you a few of the

00:18:15,100 --> 00:18:20,050
bits that we are doing to try to help

00:18:16,780 --> 00:18:21,970
these strong users so we've been putting

00:18:20,050 --> 00:18:24,610
a quite a bit of work with these two

00:18:21,970 --> 00:18:27,190
past years to try to work with

00:18:24,610 --> 00:18:29,860
communities to develop what we call the

00:18:27,190 --> 00:18:32,410
robot immune system which is essentially

00:18:29,860 --> 00:18:35,260
an endpoint protection platform series

00:18:32,410 --> 00:18:37,420
of security layers that give you a

00:18:35,260 --> 00:18:40,300
proactive protection and blood prevent

00:18:37,420 --> 00:18:41,920
and record every single interaction that

00:18:40,300 --> 00:18:43,690
the robot has with its environment not

00:18:41,920 --> 00:18:46,390
just at the network level but also

00:18:43,690 --> 00:18:49,030
across sensors actuators so on and so

00:18:46,390 --> 00:18:51,720
forth how do we do it well by using

00:18:49,030 --> 00:18:54,250
different modules that some of them use

00:18:51,720 --> 00:18:56,050
machine learning techniques to learn

00:18:54,250 --> 00:18:57,970
over time and adapt to the specific

00:18:56,050 --> 00:19:00,400
circumstances of the robots from others

00:18:57,970 --> 00:19:02,559
use traditional security tools for

00:19:00,400 --> 00:19:05,679
adaptive fire bullying or just simple

00:19:02,559 --> 00:19:08,350
hardening so currently we're working on

00:19:05,679 --> 00:19:10,630
this we're working on this for px4 and

00:19:08,350 --> 00:19:12,880
we're very very open to your input to

00:19:10,630 --> 00:19:15,730
your feedback so if you'd like to try it

00:19:12,880 --> 00:19:19,420
or you have feedback please reach us out

00:19:15,730 --> 00:19:24,910
we have licenses for development as well

00:19:19,420 --> 00:19:28,030
as for R&D particularly I'd love to call

00:19:24,910 --> 00:19:30,040
for feedback throughout that forum I

00:19:28,030 --> 00:19:31,929
also posted this on the scores

00:19:30,040 --> 00:19:33,610
so please

00:19:31,929 --> 00:19:35,379
please help us understand what are your

00:19:33,610 --> 00:19:38,049
needs help us understand what are your

00:19:35,379 --> 00:19:40,509
concerns security wise and once again if

00:19:38,049 --> 00:19:42,399
you have actual real interest on this

00:19:40,509 --> 00:19:43,840
just reach us out you can see here some

00:19:42,399 --> 00:19:44,200
of the integrations we are starting to

00:19:43,840 --> 00:19:48,220
do

00:19:44,200 --> 00:19:50,499
we've cube run control so definitely

00:19:48,220 --> 00:19:52,600
worth taking a look at thing and other

00:19:50,499 --> 00:19:55,869
than that thank you so much for your

00:19:52,600 --> 00:19:59,230
time hopefully I didn't go too far this

00:19:55,869 --> 00:20:01,330
15 minutes allocated and yeah happy to

00:19:59,230 --> 00:20:03,460
continue offline with the discussion

00:20:01,330 --> 00:20:06,960
other than that please stay safe and

00:20:03,460 --> 00:20:06,960

YouTube URL: https://www.youtube.com/watch?v=phHYfAqjOuQ


