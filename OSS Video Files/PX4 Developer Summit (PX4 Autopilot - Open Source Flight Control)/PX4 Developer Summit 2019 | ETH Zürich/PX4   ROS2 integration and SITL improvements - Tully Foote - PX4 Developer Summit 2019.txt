Title: PX4   ROS2 integration and SITL improvements - Tully Foote - PX4 Developer Summit 2019
Publication date: 2019-07-02
Playlist: PX4 Developer Summit 2019 | ETH ZÃ¼rich
Description: 
	Tully Foote
Platform Manager, Open Robotics

As we work towards integrating more advanced functionality into drones it's important to be able to test them. We have been working toward improving supporting multi drone simulation as well as complex worlds to support sensor based autonomy in SITL and fully automated integration tests.
Captions: 
	00:00:17,439 --> 00:00:24,429
next up is Julie food from the open

00:00:21,189 --> 00:00:26,590
robotics presenting seedling

00:00:24,429 --> 00:00:29,949
improvements and Ross integration Julie

00:00:26,590 --> 00:00:33,790
is the Ross platform manager and please

00:00:29,949 --> 00:00:36,100
take it away thanks Ron so I'm here and

00:00:33,790 --> 00:00:39,190
I'm gonna tell you a lot about the

00:00:36,100 --> 00:00:40,210
projects we work on Ross and gazebo this

00:00:39,190 --> 00:00:41,159
is gonna be sort of a high-level

00:00:40,210 --> 00:00:43,030
overview

00:00:41,159 --> 00:00:44,229
trying to get you interested because

00:00:43,030 --> 00:00:46,269
there's way too much there for me to

00:00:44,229 --> 00:00:47,829
actually talk about just to get a sense

00:00:46,269 --> 00:00:55,530
of the room how many of you have used

00:00:47,829 --> 00:00:55,530
Ross how many of you used Ross - awesome

00:00:56,530 --> 00:01:01,479
as Lauren's mentioned we're growing the

00:00:58,659 --> 00:01:03,189
community and right now a lot of px4 and

00:01:01,479 --> 00:01:05,680
the drone community is very focused on

00:01:03,189 --> 00:01:07,000
being on the vehicle on the robots but

00:01:05,680 --> 00:01:16,810
we need to start looking beyond the

00:01:07,000 --> 00:01:20,590
beyond that so as we're on mentioned I'm

00:01:16,810 --> 00:01:22,659
from open robotics and we're we have a

00:01:20,590 --> 00:01:24,609
mission which is to create open-source

00:01:22,659 --> 00:01:27,399
hardware and software and promote open

00:01:24,609 --> 00:01:32,170
robotic open-source robotics in all

00:01:27,399 --> 00:01:34,299
different realms and through that we

00:01:32,170 --> 00:01:36,270
have about 30 people now distributed

00:01:34,299 --> 00:01:38,380
worldwide we have our main offices in

00:01:36,270 --> 00:01:40,569
Mountain View we have an office in

00:01:38,380 --> 00:01:44,770
Singapore and we have several remote

00:01:40,569 --> 00:01:46,450
workers from all around the world the

00:01:44,770 --> 00:01:49,389
two main projects that we work on are

00:01:46,450 --> 00:01:53,259
Ross and gazebo Ross is a open-source

00:01:49,389 --> 00:01:57,340
framework for robots and a gazebo is a

00:01:53,259 --> 00:02:00,579
3d physics based simulator that we've

00:01:57,340 --> 00:02:05,200
been working with the px4 team to help

00:02:00,579 --> 00:02:06,520
integrate and you leverage I'm not going

00:02:05,200 --> 00:02:07,689
to give a whole lot of overview of those

00:02:06,520 --> 00:02:11,260
because it sounds like most of you have

00:02:07,689 --> 00:02:12,760
heard about that but what is new and

00:02:11,260 --> 00:02:15,099
exciting is that there are new versions

00:02:12,760 --> 00:02:17,200
there's Ross two coming along as well as

00:02:15,099 --> 00:02:19,090
gazebo ignition which is both of which

00:02:17,200 --> 00:02:21,510
are ground up rewrites of Ross and

00:02:19,090 --> 00:02:21,510
gazebo

00:02:22,510 --> 00:02:30,549
so Ross is now almost 11 years old it's

00:02:29,080 --> 00:02:32,019
great it's awesome

00:02:30,549 --> 00:02:33,790
there's a lot of things that we learned

00:02:32,019 --> 00:02:36,700
from doing it and we wanted to start

00:02:33,790 --> 00:02:38,110
over and resolve some of those issues

00:02:36,700 --> 00:02:40,030
that we're preventing people from

00:02:38,110 --> 00:02:43,870
putting them into products and things

00:02:40,030 --> 00:02:46,870
like that so the first focus we are

00:02:43,870 --> 00:02:48,760
looking on is quality and design system

00:02:46,870 --> 00:02:50,560
reliability we want to support real time

00:02:48,760 --> 00:02:52,269
use cases which is something that we

00:02:50,560 --> 00:02:56,110
explicitly scoped out of the design of

00:02:52,269 --> 00:02:58,390
Ross one pushing towards certification

00:02:56,110 --> 00:03:00,480
is super important for us because it's

00:02:58,390 --> 00:03:02,859
important for you and other users and

00:03:00,480 --> 00:03:04,359
say the automotive space which is

00:03:02,859 --> 00:03:07,480
another place that was it's to pick up

00:03:04,359 --> 00:03:09,220
Ross to you heavily but we want to

00:03:07,480 --> 00:03:10,959
maintain all those wonderful features

00:03:09,220 --> 00:03:13,660
like the flexibility of the

00:03:10,959 --> 00:03:16,780
communication that has been shown to be

00:03:13,660 --> 00:03:19,060
so valuable in Ross one and the other

00:03:16,780 --> 00:03:21,489
thing that in Ross one we noticed is

00:03:19,060 --> 00:03:23,769
that we can't scale down to small

00:03:21,489 --> 00:03:26,319
processors say microcontrollers that

00:03:23,769 --> 00:03:28,389
many of you want to use and as we look

00:03:26,319 --> 00:03:30,819
forward to getting larger and larger

00:03:28,389 --> 00:03:32,109
systems there's more IOT there's more

00:03:30,819 --> 00:03:35,829
stuff that's gonna be down on the

00:03:32,109 --> 00:03:38,290
smallest embedded platforms and to that

00:03:35,829 --> 00:03:42,130
end just last month we released Ross -

00:03:38,290 --> 00:03:44,280
dashing is our first LTS release of Ross

00:03:42,130 --> 00:03:47,709
- we'll be supporting it for two years

00:03:44,280 --> 00:03:49,599
and this basically now has coverage of a

00:03:47,709 --> 00:03:52,660
lot all the core primitives that you

00:03:49,599 --> 00:03:55,299
think of in terms of what the core of

00:03:52,660 --> 00:03:57,970
Ross did for you in terms of maturity

00:03:55,299 --> 00:03:59,709
this is probably similar to Ross sea

00:03:57,970 --> 00:04:03,310
turtle if any of you are using Ross back

00:03:59,709 --> 00:04:04,480
then there's a lot of space to grow

00:04:03,310 --> 00:04:06,489
there's a lot of functionality to be

00:04:04,480 --> 00:04:08,230
there and we're going to be growing and

00:04:06,489 --> 00:04:10,359
filling that in faster because we're

00:04:08,230 --> 00:04:12,730
actually porting from Ross 1 to Ross -

00:04:10,359 --> 00:04:15,040
not writing everything from scratch we

00:04:12,730 --> 00:04:20,349
know a lot and we can make it go a lot

00:04:15,040 --> 00:04:21,760
faster another project for Ross - that I

00:04:20,349 --> 00:04:23,349
want to highlight particularly because

00:04:21,760 --> 00:04:25,870
of this community running onto my

00:04:23,349 --> 00:04:28,889
controllers is micro Ross this is

00:04:25,870 --> 00:04:32,950
specifically leveraging the DDS xrc II

00:04:28,889 --> 00:04:35,110
specification that make Ross to run well

00:04:32,950 --> 00:04:36,130
on micro processors or sorry

00:04:35,110 --> 00:04:38,740
microcontrollers

00:04:36,130 --> 00:04:42,670
not just on microprocessors there's an

00:04:38,740 --> 00:04:44,380
active project that's going on and it's

00:04:42,670 --> 00:04:48,490
not complete yet but that should be able

00:04:44,380 --> 00:04:51,910
to be used in the near future I also

00:04:48,490 --> 00:04:54,160
mentioned automotive use cases we have

00:04:51,910 --> 00:04:56,800
the auto wear foundation is using Ross 2

00:04:54,160 --> 00:04:59,320
as its core as well as apex at AI and

00:04:56,800 --> 00:05:02,620
they are working with us closely to work

00:04:59,320 --> 00:05:06,280
toward certification including ISO 26262

00:05:02,620 --> 00:05:08,230
and misra and other compliance

00:05:06,280 --> 00:05:11,730
measurements to make sure that we can be

00:05:08,230 --> 00:05:11,730
use it in safety critical systems

00:05:15,000 --> 00:05:18,610
there's a lot going on with Ross if you

00:05:17,560 --> 00:05:20,740
want to find out more

00:05:18,610 --> 00:05:24,880
if you speak Japanese you can show up in

00:05:20,740 --> 00:05:27,130
a truss con Japan in September if not

00:05:24,880 --> 00:05:29,770
you can come to the main Ross con event

00:05:27,130 --> 00:05:31,350
in Macao which will be in our end of

00:05:29,770 --> 00:05:34,900
October into November

00:05:31,350 --> 00:05:35,620
actually on Halloween we're looking

00:05:34,900 --> 00:05:37,930
forward to it

00:05:35,620 --> 00:05:39,190
it's an event like this it's a little

00:05:37,930 --> 00:05:45,210
bit bigger we're going to be probably

00:05:39,190 --> 00:05:45,210
closer to 750 people this year so

00:05:46,890 --> 00:05:51,400
talking a little bit more about ignition

00:05:48,880 --> 00:05:53,380
gazebo again it's a long-standing

00:05:51,400 --> 00:05:54,910
project that we have learned a lot and

00:05:53,380 --> 00:05:56,710
we wanted to MIT push it to the next

00:05:54,910 --> 00:05:59,500
level and to do that we started from the

00:05:56,710 --> 00:06:01,030
beginning our main focus has been our

00:05:59,500 --> 00:06:02,710
priorities have been physics make sure

00:06:01,030 --> 00:06:06,280
it works well make sure it works quickly

00:06:02,710 --> 00:06:09,190
and it's reliable make sure we have good

00:06:06,280 --> 00:06:10,900
sensors sensor models noise models to

00:06:09,190 --> 00:06:14,050
allow you to accurately simulate your

00:06:10,900 --> 00:06:16,810
sensors extension points and modularity

00:06:14,050 --> 00:06:18,880
so that you can take it and build the

00:06:16,810 --> 00:06:21,490
application that you need it to be it's

00:06:18,880 --> 00:06:22,990
not just what we can provide you can

00:06:21,490 --> 00:06:26,050
take what we provide as a core and

00:06:22,990 --> 00:06:27,580
extend it and modularity we broke it up

00:06:26,050 --> 00:06:34,470
into a bunch of smaller libraries

00:06:27,580 --> 00:06:34,470
instead of being one monolithic codebase

00:06:35,370 --> 00:06:41,560
we have lots of physics engines maximal

00:06:39,760 --> 00:06:43,420
and reduced coordinate system solutions

00:06:41,560 --> 00:06:47,260
depending on what type of physics

00:06:43,420 --> 00:06:48,430
problem you're solving I'm going to not

00:06:47,260 --> 00:06:50,660
go through all these details for the

00:06:48,430 --> 00:06:52,520
sake of time

00:06:50,660 --> 00:06:55,010
since think you can see here an example

00:06:52,520 --> 00:06:56,690
of the noise model being applied so that

00:06:55,010 --> 00:06:58,730
when you look at the simulated camera

00:06:56,690 --> 00:07:03,110
data there's actually like noise that

00:06:58,730 --> 00:07:05,720
would be coming from the camera whereas

00:07:03,110 --> 00:07:10,310
the simulation in the simulator it's you

00:07:05,720 --> 00:07:12,290
know the world is solid there's a full

00:07:10,310 --> 00:07:14,450
plug-in API to allow you the

00:07:12,290 --> 00:07:17,110
extensibility you have control of every

00:07:14,450 --> 00:07:19,910
single element of the physics you can

00:07:17,110 --> 00:07:23,030
put synthetic actors into the world you

00:07:19,910 --> 00:07:24,800
can put objects you can tweak the world

00:07:23,030 --> 00:07:26,330
you can change anything in the world you

00:07:24,800 --> 00:07:28,280
can unload the world and load a new

00:07:26,330 --> 00:07:32,900
world all of that is available via API

00:07:28,280 --> 00:07:34,610
you have full control and of course the

00:07:32,900 --> 00:07:39,650
modular they mentioned we've split up

00:07:34,610 --> 00:07:41,240
the ignition ignition code base into one

00:07:39,650 --> 00:07:45,500
two three four five nine different

00:07:41,240 --> 00:07:48,140
projects and this allows you to take

00:07:45,500 --> 00:07:49,640
them modify them and also reuse them we

00:07:48,140 --> 00:07:52,250
have things like ignition math which is

00:07:49,640 --> 00:07:54,080
this a very simple math library it's

00:07:52,250 --> 00:07:56,210
released its available upstream from

00:07:54,080 --> 00:07:57,590
Debian and a bun to you and if you just

00:07:56,210 --> 00:08:00,620
want a simple math library that's going

00:07:57,590 --> 00:08:02,060
to do your basic transform math like

00:08:00,620 --> 00:08:04,690
what we use inside of the physics engine

00:08:02,060 --> 00:08:10,040
it's there and available

00:08:04,690 --> 00:08:12,800
and similarly ignition blueprint came

00:08:10,040 --> 00:08:14,360
out last month the main features are

00:08:12,800 --> 00:08:16,850
physics space rendering that's the one

00:08:14,360 --> 00:08:18,560
that I think will be most interesting in

00:08:16,850 --> 00:08:21,820
this community and I will come back to

00:08:18,560 --> 00:08:24,470
that and a later slide with some video

00:08:21,820 --> 00:08:26,840
the other one is we are pushing toward

00:08:24,470 --> 00:08:29,930
distributed simulation so we can support

00:08:26,840 --> 00:08:32,300
say many drones in many areas and it's

00:08:29,930 --> 00:08:35,840
all in one world but it can render it

00:08:32,300 --> 00:08:38,169
and at a reasonable pace on multiple

00:08:35,840 --> 00:08:38,169
computers

00:08:38,800 --> 00:08:43,599
so getting a little bit more into the

00:08:40,479 --> 00:08:46,749
Siddal this is much more focused on what

00:08:43,599 --> 00:08:52,209
we're talking about here this is what

00:08:46,749 --> 00:08:55,929
you get if you run make the x-force

00:08:52,209 --> 00:08:57,730
it'll default gazebo it's a very

00:08:55,929 --> 00:09:01,989
exciting world you've got asphalt and

00:08:57,730 --> 00:09:03,970
great terrain and we're looking at this

00:09:01,989 --> 00:09:06,249
and we're saying well this is not give

00:09:03,970 --> 00:09:08,769
showing off a lot of the power of what

00:09:06,249 --> 00:09:10,179
the Siddal can actually do we'd like to

00:09:08,769 --> 00:09:15,879
actually take it and put some real

00:09:10,179 --> 00:09:18,189
terrain in so I went out and I

00:09:15,879 --> 00:09:19,989
downloaded a database from the USGS of

00:09:18,189 --> 00:09:23,799
the elevation data and the satellite

00:09:19,989 --> 00:09:25,389
imagery from McMillan airfield I'm sure

00:09:23,799 --> 00:09:27,009
that several of you here have actually

00:09:25,389 --> 00:09:30,249
flown there it's a drone testing field

00:09:27,009 --> 00:09:35,049
in California you can see there's the

00:09:30,249 --> 00:09:39,069
airfield and this is good but it's not

00:09:35,049 --> 00:09:43,569
really quite as compelling as a Yosemite

00:09:39,069 --> 00:09:45,100
Valley I did the same procedure and here

00:09:43,569 --> 00:09:47,379
you can start to see you can actually

00:09:45,100 --> 00:09:51,129
get the horizons and other things that

00:09:47,379 --> 00:09:54,369
are much more interesting to see when

00:09:51,129 --> 00:09:57,279
you're looking like looking through a

00:09:54,369 --> 00:09:58,600
camp simulate a camera view this is just

00:09:57,279 --> 00:10:03,670
flying around in the world I'm showing

00:09:58,600 --> 00:10:06,730
you what's there but we can do we can do

00:10:03,670 --> 00:10:10,290
more actually we can start to throw in

00:10:06,730 --> 00:10:12,639
buildings and cities this is San Carlos

00:10:10,290 --> 00:10:14,379
right by the San Carlos Airport I

00:10:12,639 --> 00:10:17,619
modeled the airport and then our graphic

00:10:14,379 --> 00:10:19,509
artist threw in buildings from the

00:10:17,619 --> 00:10:20,799
region so if you want to fly through an

00:10:19,509 --> 00:10:22,809
urban Canyon you can start to do that

00:10:20,799 --> 00:10:24,850
and all of these have both visual

00:10:22,809 --> 00:10:26,470
aspects as well as collision aspects so

00:10:24,850 --> 00:10:30,220
if you fly your drone into the building

00:10:26,470 --> 00:10:31,779
it will tumble and crash same thing with

00:10:30,220 --> 00:10:33,459
the wall so Yosemite Valley if you hit

00:10:31,779 --> 00:10:37,899
the valley wall it will start like

00:10:33,459 --> 00:10:40,839
cartwheeling down the valley and of

00:10:37,899 --> 00:10:43,929
course we have the ability do anything

00:10:40,839 --> 00:10:47,350
else we want this isn't you can't see

00:10:43,929 --> 00:10:50,290
this - well this is I asked our artist

00:10:47,350 --> 00:10:51,459
to put together a drone playground so

00:10:50,290 --> 00:10:52,269
you can see there are power lines

00:10:51,459 --> 00:10:54,850
there's

00:10:52,269 --> 00:10:56,860
overpass there's trees there's buildings

00:10:54,850 --> 00:11:01,749
there's whatever we want hoops to fly

00:10:56,860 --> 00:11:03,459
through and all of these things come in

00:11:01,749 --> 00:11:06,009
they will render in the sensors we can

00:11:03,459 --> 00:11:07,929
add the noise models so if you want to

00:11:06,009 --> 00:11:10,360
add testing we should start making rich

00:11:07,929 --> 00:11:13,119
environments like this and so one of the

00:11:10,360 --> 00:11:14,679
things I want to ask is that all of you

00:11:13,119 --> 00:11:17,829
out there if you have use cases and you

00:11:14,679 --> 00:11:19,990
want to see an environment please let me

00:11:17,829 --> 00:11:21,670
know we have resources we will be

00:11:19,990 --> 00:11:25,240
putting into building up some stock

00:11:21,670 --> 00:11:27,519
environments so you can run tests please

00:11:25,240 --> 00:11:29,889
think about that and get in contact with

00:11:27,519 --> 00:11:31,019
me afterwards so that I can have an idea

00:11:29,889 --> 00:11:33,309
of what you want

00:11:31,019 --> 00:11:36,579
if the better you can describe it the

00:11:33,309 --> 00:11:39,660
better I can make it happen and to give

00:11:36,579 --> 00:11:41,800
you a preview this is all in Kashiwa 9

00:11:39,660 --> 00:11:57,879
this is what things can look like in

00:11:41,800 --> 00:11:59,679
ignition oh and that is but you can see

00:11:57,879 --> 00:12:01,170
this is the this includes the physics

00:11:59,679 --> 00:12:07,119
base rendering you can get much better

00:12:01,170 --> 00:12:09,610
effects as you go through the biggest

00:12:07,119 --> 00:12:12,100
limitation is actually the textures on

00:12:09,610 --> 00:12:13,899
the wall and having the bandwidth to

00:12:12,100 --> 00:12:17,350
actually create that this was created by

00:12:13,899 --> 00:12:19,389
actually driving walking through the

00:12:17,350 --> 00:12:21,999
tunnels taking pictures of the walls and

00:12:19,389 --> 00:12:24,819
doing photogrammetric reconstruction of

00:12:21,999 --> 00:12:27,069
the walls and then tessellating those

00:12:24,819 --> 00:12:29,699
throughout in a ficient way so we could

00:12:27,069 --> 00:12:29,699
render it quickly

00:12:37,130 --> 00:12:44,880
so that's the Sydal to do a lot of this

00:12:42,600 --> 00:12:46,020
work I've been working on getting Siddal

00:12:44,880 --> 00:12:49,980
running inside of containers and

00:12:46,020 --> 00:12:51,720
particularly docker these containers

00:12:49,980 --> 00:12:53,490
make it great I don't have to actually

00:12:51,720 --> 00:12:56,580
have anything installed on my machine

00:12:53,490 --> 00:13:00,960
except for docker and the Nvidia driver

00:12:56,580 --> 00:13:02,280
is necessary to run it so the other cool

00:13:00,960 --> 00:13:04,710
thing is this actually works all the way

00:13:02,280 --> 00:13:06,810
from my moderately beefy developer

00:13:04,710 --> 00:13:09,420
laptop but it also I've demonstrated on

00:13:06,810 --> 00:13:14,100
the tough pad that many people use as

00:13:09,420 --> 00:13:17,730
flight control grab controllers and at

00:13:14,100 --> 00:13:23,450
this point I will take the risk and do a

00:13:17,730 --> 00:13:26,670
live demo so this is going to launch the

00:13:23,450 --> 00:13:30,420
Siddal inside of docker with huge ground

00:13:26,670 --> 00:13:35,130
control and gazebo and scripts to bring

00:13:30,420 --> 00:13:36,750
up quadcopters in particular I've

00:13:35,130 --> 00:13:38,580
restructured the way that we're

00:13:36,750 --> 00:13:41,730
launching the simulation so you bring up

00:13:38,580 --> 00:13:43,500
the world with Yanni's parameters I'm

00:13:41,730 --> 00:13:48,770
like this is the false ego semi I could

00:13:43,500 --> 00:13:51,120
put in mcmillan or San Carlos and then I

00:13:48,770 --> 00:13:54,980
have a script that will then go along

00:13:51,120 --> 00:13:57,000
and inject a drone into that environment

00:13:54,980 --> 00:13:59,090
so you'll watch here this is pretty

00:13:57,000 --> 00:14:07,590
familiar this is the Siddal launching up

00:13:59,090 --> 00:14:09,930
starting px4 and it'll come up this is

00:14:07,590 --> 00:14:11,820
the Gazebo window most of the time I run

00:14:09,930 --> 00:14:20,000
it headless so we don't bother rendering

00:14:11,820 --> 00:14:23,420
it but if i zoom in there is a drone

00:14:20,000 --> 00:14:23,420
down here

00:14:24,870 --> 00:14:32,760
jump over you're cute ground control you

00:14:27,540 --> 00:14:36,510
can see the drone is here we have

00:14:32,760 --> 00:14:40,020
streaming video as well only smoke I've

00:14:36,510 --> 00:14:41,610
never seen this big each of the drone

00:14:40,020 --> 00:14:47,300
says that are on the video streaming

00:14:41,610 --> 00:14:51,620
port so the first drone is on 550 600

00:14:47,300 --> 00:15:06,570
there you see the streaming camera and

00:14:51,620 --> 00:15:09,150
we can take off we can also support

00:15:06,570 --> 00:15:10,350
multiple multiple drones of the same

00:15:09,150 --> 00:15:12,390
type or different types

00:15:10,350 --> 00:15:18,330
I now asked it for to add a plane to

00:15:12,390 --> 00:15:21,320
this world so if we look there's my

00:15:18,330 --> 00:15:21,320
window switcher

00:15:28,140 --> 00:15:34,450
here there's now a plane sitting next to

00:15:30,850 --> 00:15:39,760
the quadcopter this hovering come back

00:15:34,450 --> 00:15:43,980
to cue ground control switch to vehicle

00:15:39,760 --> 00:15:58,980
- it's the plane so we have to send it

00:15:43,980 --> 00:16:01,360
waypoints upload and takeoff and the

00:15:58,980 --> 00:16:03,310
planes on its way as well I'm sure

00:16:01,360 --> 00:16:04,900
you've all seen that but none of this is

00:16:03,310 --> 00:16:07,090
installed on my computer is all running

00:16:04,900 --> 00:16:08,980
in the container this is great for

00:16:07,090 --> 00:16:10,590
development great for testing you can

00:16:08,980 --> 00:16:15,280
have basically any computer with

00:16:10,590 --> 00:16:18,460
graphics drivers and doctor installed

00:16:15,280 --> 00:16:20,710
you can run your tests I'm also looking

00:16:18,460 --> 00:16:22,480
to hope that this can be and make things

00:16:20,710 --> 00:16:31,620
like continuous integration and testing

00:16:22,480 --> 00:16:35,100
easier as well shut it all down

00:16:31,620 --> 00:16:35,100
don't kill me

00:16:47,519 --> 00:16:59,019
okay

00:16:50,009 --> 00:17:02,350
back to the presentation yeah that's

00:16:59,019 --> 00:17:05,470
right I showed you so we'll skip that

00:17:02,350 --> 00:17:06,880
in addition that all of these instances

00:17:05,470 --> 00:17:09,790
that were I'm launching by default have

00:17:06,880 --> 00:17:11,500
the map Ross interface available so if

00:17:09,790 --> 00:17:13,660
you want to do something you can have a

00:17:11,500 --> 00:17:15,910
small script that interacts with Mavros

00:17:13,660 --> 00:17:17,549
connects to all the drones and launches

00:17:15,910 --> 00:17:19,870
them to fly a formation flying

00:17:17,549 --> 00:17:23,709
so these drones are going to take off

00:17:19,870 --> 00:17:25,240
this is the work of my intern back to

00:17:23,709 --> 00:17:28,290
the office they're going to take off fly

00:17:25,240 --> 00:17:30,790
Healesville pattern and then land

00:17:28,290 --> 00:17:36,220
they're all simulating cameras they're

00:17:30,790 --> 00:17:38,740
all everything is running but you can

00:17:36,220 --> 00:17:41,280
start to look at doing swarm formation

00:17:38,740 --> 00:17:41,280
operations

00:17:56,640 --> 00:18:06,640
well I promise you they'll and we don't

00:18:01,930 --> 00:18:08,380
need to watch it all so now I want to

00:18:06,640 --> 00:18:10,720
transition to looking ahead a lot of

00:18:08,380 --> 00:18:12,100
this is what is going on right now the

00:18:10,720 --> 00:18:15,490
functionality that is currently

00:18:12,100 --> 00:18:17,200
available nuno is going to follow me and

00:18:15,490 --> 00:18:20,760
talk about the integrations with Ross -

00:18:17,200 --> 00:18:23,620
that are currently in the tree and

00:18:20,760 --> 00:18:25,240
exactly what's there so I want to talk

00:18:23,620 --> 00:18:27,070
about sort of a bigger pigeon bigger

00:18:25,240 --> 00:18:28,570
picture and vision looking forward of

00:18:27,070 --> 00:18:32,190
how Ross to integration might actually

00:18:28,570 --> 00:18:36,070
happen one of the big things is that

00:18:32,190 --> 00:18:38,559
drones are a small sub category of

00:18:36,070 --> 00:18:41,380
general robotics there's a lot of

00:18:38,559 --> 00:18:42,790
functionality out there that we can in

00:18:41,380 --> 00:18:45,429
the drone community can take advantage

00:18:42,790 --> 00:18:48,580
of and I'd like to see some of that be

00:18:45,429 --> 00:18:50,290
able to be leveraged here it's an

00:18:48,580 --> 00:18:52,780
example each of the bigger boxes is the

00:18:50,290 --> 00:18:56,460
drone the top one is a little bit bigger

00:18:52,780 --> 00:18:58,809
for it's easier to read but the most

00:18:56,460 --> 00:19:00,610
first place that we think that Ross -

00:18:58,809 --> 00:19:03,010
can be super valuable is within the

00:19:00,610 --> 00:19:06,490
communications within the drone this is

00:19:03,010 --> 00:19:08,980
between the px4 and the companion

00:19:06,490 --> 00:19:10,210
computer you can also start to do things

00:19:08,980 --> 00:19:12,580
like having sensors that are

00:19:10,210 --> 00:19:15,130
plug-and-play the talk Ross - and they

00:19:12,580 --> 00:19:17,020
can plug into either the px4 or the

00:19:15,130 --> 00:19:18,850
companion computer there are a lot of

00:19:17,020 --> 00:19:23,520
sensors out there doing rich processing

00:19:18,850 --> 00:19:23,520
there's image pipelines for processing

00:19:23,940 --> 00:19:32,470
point clouds imaging etc all this is

00:19:28,210 --> 00:19:33,850
available in Ross and Ross - it's for

00:19:32,470 --> 00:19:36,490
you to be able to pick up and you don't

00:19:33,850 --> 00:19:37,960
have to reinvent it some of the

00:19:36,490 --> 00:19:40,540
particular things for Ross - that are

00:19:37,960 --> 00:19:44,100
valuable it gives you int respectability

00:19:40,540 --> 00:19:46,540
you can do things if the px4 is

00:19:44,100 --> 00:19:48,220
publishing and available the over Ross -

00:19:46,540 --> 00:19:50,470
topics you can go in and looked at the

00:19:48,220 --> 00:19:52,570
internal state of some topic inside of

00:19:50,470 --> 00:19:55,390
the tool at runtime when you say like

00:19:52,570 --> 00:19:56,830
hey I want to have access to that it's

00:19:55,390 --> 00:19:59,050
modular that which means that you can

00:19:56,830 --> 00:20:02,110
move things say you want a debug a

00:19:59,050 --> 00:20:05,620
library you can actually launch it

00:20:02,110 --> 00:20:08,230
externally on the companion computer

00:20:05,620 --> 00:20:09,200
with inside of a debugger wait for it to

00:20:08,230 --> 00:20:11,000
hit that space

00:20:09,200 --> 00:20:13,130
so I hit that edge case and then you can

00:20:11,000 --> 00:20:14,570
pause and debug it in the on the

00:20:13,130 --> 00:20:16,280
companion computer which is

00:20:14,570 --> 00:20:18,350
functionality it's much harder inside of

00:20:16,280 --> 00:20:20,000
the microcontroller once it works there

00:20:18,350 --> 00:20:25,220
you recompile it and launch it back on

00:20:20,000 --> 00:20:27,280
the microcontroller and as you start

00:20:25,220 --> 00:20:29,600
looking at drones and systems of drones

00:20:27,280 --> 00:20:30,890
you also start looking at ground control

00:20:29,600 --> 00:20:33,890
stations you start looking at ground

00:20:30,890 --> 00:20:35,660
robots surface robots there's a whole an

00:20:33,890 --> 00:20:38,420
ecosystem of robots out there that you

00:20:35,660 --> 00:20:39,980
can talk to if you talk Ross so you can

00:20:38,420 --> 00:20:41,420
start doing collaborative environments

00:20:39,980 --> 00:20:48,440
with drones

00:20:41,420 --> 00:20:50,510
heterogeneous drones and it can all just

00:20:48,440 --> 00:20:52,430
talk if we talk the same language this

00:20:50,510 --> 00:20:55,330
has been the power of Ross and I'd like

00:20:52,430 --> 00:20:58,370
to see that more in this community for

00:20:55,330 --> 00:21:00,050
DDS in particular with Ross - I'd like

00:20:58,370 --> 00:21:02,420
to highlight a couple of things that are

00:21:00,050 --> 00:21:07,190
of particular value from listening to

00:21:02,420 --> 00:21:10,040
people and at the summit here DDS has

00:21:07,190 --> 00:21:11,630
security plugins it's x.509 and public

00:21:10,040 --> 00:21:13,280
key and infrastructure does

00:21:11,630 --> 00:21:17,480
authentication access control and

00:21:13,280 --> 00:21:19,790
encryption there's much better multi

00:21:17,480 --> 00:21:21,530
robot support it has dynamic discovery

00:21:19,790 --> 00:21:23,510
so you don't have to worry about any of

00:21:21,530 --> 00:21:24,860
you that used to Ross master you

00:21:23,510 --> 00:21:26,810
basically have to run one for drone

00:21:24,860 --> 00:21:29,750
because they might or might not have

00:21:26,810 --> 00:21:31,490
connectivity at some point it's fully

00:21:29,750 --> 00:21:33,050
descripted discovery so you can have

00:21:31,490 --> 00:21:36,770
drones that wander in and out of the

00:21:33,050 --> 00:21:38,780
connectivity and they'll keep working we

00:21:36,770 --> 00:21:40,310
also have significant number of quality

00:21:38,780 --> 00:21:43,790
of service metrics that we can allow you

00:21:40,310 --> 00:21:45,830
to control where your drone control how

00:21:43,790 --> 00:21:47,660
your communications happen set

00:21:45,830 --> 00:21:50,090
priorities for different messages that

00:21:47,660 --> 00:21:53,000
retry amounts this lets you work much

00:21:50,090 --> 00:21:59,390
better in environments that are lost

00:21:53,000 --> 00:22:01,790
Wi-Fi which drones are this is because

00:21:59,390 --> 00:22:03,770
of these features this is why DDS is the

00:22:01,790 --> 00:22:05,420
preferred communication layer of NASA

00:22:03,770 --> 00:22:07,580
we're also I didn't mention that earlier

00:22:05,420 --> 00:22:10,610
we're gonna be working with them to get

00:22:07,580 --> 00:22:15,860
Ross to into some production systems for

00:22:10,610 --> 00:22:18,110
them in upcoming projects as well so

00:22:15,860 --> 00:22:21,980
while I have your attention I want to

00:22:18,110 --> 00:22:24,620
put in one small plug rep 147 reps are

00:22:21,980 --> 00:22:27,080
the enhancement proposals for Ross sort

00:22:24,620 --> 00:22:30,049
of how we do standards this is one for

00:22:27,080 --> 00:22:31,789
standard aerial views for drones

00:22:30,049 --> 00:22:35,240
I've been collaborating with lorenz on

00:22:31,789 --> 00:22:37,970
this for several years it's pretty

00:22:35,240 --> 00:22:40,010
mature but if you have feedback I'd love

00:22:37,970 --> 00:22:42,740
to hear it because I'm planning to push

00:22:40,010 --> 00:22:45,080
this out and stabilize it or push it up

00:22:42,740 --> 00:22:46,690
stray and pretty soon it's overdue and

00:22:45,080 --> 00:22:51,429
I've been distracted with other projects

00:22:46,690 --> 00:22:51,429
so thank you

00:22:51,750 --> 00:22:59,260
[Applause]

00:22:57,019 --> 00:23:08,570
is there any questions from the audience

00:22:59,260 --> 00:23:10,880
here Mike let me just ask two first one

00:23:08,570 --> 00:23:12,830
why call self in an operating system

00:23:10,880 --> 00:23:15,019
that is decidedly not an operating

00:23:12,830 --> 00:23:16,639
system it depends on your definition of

00:23:15,019 --> 00:23:17,779
operating system it sounds like you're

00:23:16,639 --> 00:23:20,600
talking about a computer operating

00:23:17,779 --> 00:23:21,559
system it's more like a robot offering

00:23:20,600 --> 00:23:24,639
system it provides all the functionality

00:23:21,559 --> 00:23:27,409
for a robot that's where it came from I

00:23:24,639 --> 00:23:31,090
see okay it just creates a lot of

00:23:27,409 --> 00:23:31,090
confusion with people yeah

00:23:31,490 --> 00:23:36,740
what is very-- interaction how do you

00:23:34,700 --> 00:23:39,110
see future between marvelling and Ross

00:23:36,740 --> 00:23:43,850
there is a lot of overlap between what

00:23:39,110 --> 00:23:46,700
they do and it's so how do we see it so

00:23:43,850 --> 00:23:47,960
Ross and Ross too are a generic

00:23:46,700 --> 00:23:50,600
framework that allows you a lot more

00:23:47,960 --> 00:23:52,850
flexibility I think the power in Ross

00:23:50,600 --> 00:23:55,010
Ross and Ross too will be being able to

00:23:52,850 --> 00:23:57,769
do custom messages large messages high

00:23:55,010 --> 00:24:00,529
bandwidth messages map length is highly

00:23:57,769 --> 00:24:03,080
optimized for moderately small bandwidth

00:24:00,529 --> 00:24:05,090
data links and I think for telemetry and

00:24:03,080 --> 00:24:07,940
other feature functionality like that

00:24:05,090 --> 00:24:12,529
the more optimized data format will be

00:24:07,940 --> 00:24:14,870
valuable it's they're definitely sort of

00:24:12,529 --> 00:24:18,490
competing but Ross is never going to be

00:24:14,870 --> 00:24:21,529
as optimized for a very small pipeline

00:24:18,490 --> 00:24:23,630
that downlink that MAV link has been

00:24:21,529 --> 00:24:27,010
optimized for so I think they'll likely

00:24:23,630 --> 00:24:27,010
sit side-by-side for a long time

00:24:28,060 --> 00:24:33,680
just one more short question so say I

00:24:31,640 --> 00:24:36,590
want to use different rendering engine I

00:24:33,680 --> 00:24:41,210
don't know unreal

00:24:36,590 --> 00:24:44,330
can I benefit from all our functionality

00:24:41,210 --> 00:24:45,830
of say gazebo like sensors modeling and

00:24:44,330 --> 00:24:48,530
kind of a kind of think with a different

00:24:45,830 --> 00:24:51,020
rendering yes so you can swap out the

00:24:48,530 --> 00:24:52,250
rendering engine we have looked at a lot

00:24:51,020 --> 00:24:54,050
of people have asked for unreal and

00:24:52,250 --> 00:24:55,970
during rendering engine one of the

00:24:54,050 --> 00:24:59,300
biggest problems is that all of the

00:24:55,970 --> 00:25:01,640
gaming rendering engines are basically

00:24:59,300 --> 00:25:04,250
fully integrated into their system and

00:25:01,640 --> 00:25:05,840
in gazebo and ignition we have nicely

00:25:04,250 --> 00:25:08,720
separated there's physics there's

00:25:05,840 --> 00:25:12,440
rendering there's sensor generation and

00:25:08,720 --> 00:25:15,650
these are all nicely separated we have

00:25:12,440 --> 00:25:16,820
done cogeco simulation with unreal or

00:25:15,650 --> 00:25:19,850
you actually synchronize the state

00:25:16,820 --> 00:25:21,320
between the unreal physics and the you

00:25:19,850 --> 00:25:23,660
turn off the unreal physics and just

00:25:21,320 --> 00:25:27,860
push the gazebo state over it's

00:25:23,660 --> 00:25:30,170
functional but it's you don't really

00:25:27,860 --> 00:25:32,480
want it like yeah we have we have proof

00:25:30,170 --> 00:25:33,830
of concept that it works I have not seen

00:25:32,480 --> 00:25:37,840
anyone that actually wants to take that

00:25:33,830 --> 00:25:46,550
and use that effectively anywhere else

00:25:37,840 --> 00:25:49,490
right there the question is how good are

00:25:46,550 --> 00:25:52,610
the physics in gazebo the physics are as

00:25:49,490 --> 00:25:55,460
good as you tune them basically you have

00:25:52,610 --> 00:25:57,650
the option to dial it to say how often

00:25:55,460 --> 00:26:01,190
you wanted to update it's solving F

00:25:57,650 --> 00:26:02,750
equals MA our default is one kilohertz I

00:26:01,190 --> 00:26:06,010
have worked on projects that have taken

00:26:02,750 --> 00:26:08,510
two 10 or 20 kilohertz so every you know

00:26:06,010 --> 00:26:10,610
half a tenth of a millisecond it's

00:26:08,510 --> 00:26:12,110
actually doing a physics update and

00:26:10,610 --> 00:26:15,410
that's simulated time so theoretically

00:26:12,110 --> 00:26:16,990
if you want to slow it down that much it

00:26:15,410 --> 00:26:20,260
the real time factor is going to hurt

00:26:16,990 --> 00:26:22,820
but it should be

00:26:20,260 --> 00:26:25,190
we have enough accurate enough physics

00:26:22,820 --> 00:26:27,530
to do manipulation grasping of objects

00:26:25,190 --> 00:26:30,050
on tabletops we can do humanoid walking

00:26:27,530 --> 00:26:31,730
robots that will walk with the real

00:26:30,050 --> 00:26:33,860
controller that's tuned for the real

00:26:31,730 --> 00:26:37,550
hardware and it will walk in simulation

00:26:33,860 --> 00:26:38,720
without changing any gains also the all

00:26:37,550 --> 00:26:40,700
the drones you've seen just use the

00:26:38,720 --> 00:26:47,029
default Hardware gains

00:26:40,700 --> 00:26:49,690
I have a couple of questions regarding

00:26:47,029 --> 00:26:54,710
Ross - and the middleware that you use

00:26:49,690 --> 00:26:57,019
DDS against something like zero MQ is it

00:26:54,710 --> 00:26:59,809
possible to do remote procedure call in

00:26:57,019 --> 00:27:01,460
roster right now or communication like

00:26:59,809 --> 00:27:04,249
request response other than just

00:27:01,460 --> 00:27:06,289
publish/subscribe yes now we have

00:27:04,249 --> 00:27:07,850
support for publish/subscribe we have

00:27:06,289 --> 00:27:10,519
support for a remote procedure calls we

00:27:07,850 --> 00:27:13,070
call them services and we have a concept

00:27:10,519 --> 00:27:15,440
called actions which are preemptable

00:27:13,070 --> 00:27:17,570
remote procedure calls that will run in

00:27:15,440 --> 00:27:20,960
the background and give status updates

00:27:17,570 --> 00:27:22,759
as they're running and also our Ross

00:27:20,960 --> 00:27:24,350
projects you can build them just with

00:27:22,759 --> 00:27:25,759
defaults he make or do you need

00:27:24,350 --> 00:27:27,259
something else and what about the

00:27:25,759 --> 00:27:29,809
dependencies that come with Ross you

00:27:27,259 --> 00:27:32,570
know so we worked hard to keep the

00:27:29,809 --> 00:27:34,220
dependencies within Ross to as minimal

00:27:32,570 --> 00:27:37,309
as possible

00:27:34,220 --> 00:27:41,269
the majority of what we use leverage is

00:27:37,309 --> 00:27:42,679
in C++ 11 / 14 we were able to remove

00:27:41,269 --> 00:27:44,450
boost we were able to remove a bunch of

00:27:42,679 --> 00:27:46,279
other things some of our dependencies

00:27:44,450 --> 00:27:47,749
actually pulled that back in we're

00:27:46,279 --> 00:27:56,570
working on that with them to get rid of

00:27:47,749 --> 00:27:59,929
that the sorrow is the other the tool so

00:27:56,570 --> 00:28:01,820
we have a standard build tool called

00:27:59,929 --> 00:28:03,889
Cole comm which will iterate through

00:28:01,820 --> 00:28:05,230
your packages and basically call see

00:28:03,889 --> 00:28:07,700
make make make install for you

00:28:05,230 --> 00:28:09,350
but if you want to do that manually you

00:28:07,700 --> 00:28:11,389
can call see make make make install on

00:28:09,350 --> 00:28:15,440
each package they install in a standard

00:28:11,389 --> 00:28:16,850
place and what we provide is a little

00:28:15,440 --> 00:28:19,609
bit of that we have C make libraries

00:28:16,850 --> 00:28:22,309
that lets you do that process easier

00:28:19,609 --> 00:28:24,289
export targets it'll export targets and

00:28:22,309 --> 00:28:25,669
include paths for you out so that you

00:28:24,289 --> 00:28:28,039
don't have to manually write all that

00:28:25,669 --> 00:28:30,139
boilerplate but you can just see make

00:28:28,039 --> 00:28:33,919
make make install and it'll work from

00:28:30,139 --> 00:28:35,779
the install space so I have a question

00:28:33,919 --> 00:28:38,929
on the gazebo side since you are calling

00:28:35,779 --> 00:28:41,179
for more realistic environments relevant

00:28:38,929 --> 00:28:43,970
for drones did you work on or have plans

00:28:41,179 --> 00:28:48,460
for simulating external conditions such

00:28:43,970 --> 00:28:50,419
as wind or temperature or magnetic field

00:28:48,460 --> 00:28:53,539
conditions I think these are very

00:28:50,419 --> 00:28:55,010
relevant for drones yeah I know we have

00:28:53,539 --> 00:28:58,790
a wind plugin

00:28:55,010 --> 00:29:01,370
and we also have magnetic field plugin

00:28:58,790 --> 00:29:04,100
I'm not personally familiar with them I

00:29:01,370 --> 00:29:05,960
know that I added a third dimension to

00:29:04,100 --> 00:29:08,840
the wind plugin for a long time the wind

00:29:05,960 --> 00:29:10,340
plug-in was only 2d and the third

00:29:08,840 --> 00:29:13,870
dimension just happened to be the

00:29:10,340 --> 00:29:16,280
combinatoric some of the X&Y

00:29:13,870 --> 00:29:18,020
which is tough when I started testing it

00:29:16,280 --> 00:29:21,559
like 20 not win suddenly the drone was

00:29:18,020 --> 00:29:22,460
falling out of the sky at 20 knots so

00:29:21,559 --> 00:29:24,020
there are they're definitely there and

00:29:22,460 --> 00:29:25,700
that's where that extensibility API is

00:29:24,020 --> 00:29:28,160
you can add whatever you want you can

00:29:25,700 --> 00:29:29,540
have in the physics update the lift drag

00:29:28,160 --> 00:29:34,040
plugin actually takes into account the

00:29:29,540 --> 00:29:36,110
wind a concept we have space for one

00:29:34,040 --> 00:29:38,470
more question let me give the space for

00:29:36,110 --> 00:29:38,470
someone else

00:29:47,279 --> 00:29:51,850
did you get the question or do you need

00:29:49,570 --> 00:29:53,379
yes so the question is what sort of

00:29:51,850 --> 00:29:56,289
aerodynamics do we have in there are we

00:29:53,379 --> 00:29:58,570
planning to put more in so we currently

00:29:56,289 --> 00:30:03,340
have a first order approximation of lift

00:29:58,570 --> 00:30:05,529
drag it takes the frontal area of a item

00:30:03,340 --> 00:30:08,289
takes the aspect ratio and computes the

00:30:05,529 --> 00:30:10,960
first order lift drag this is enough to

00:30:08,289 --> 00:30:13,749
get lift in a realistic manner out of

00:30:10,960 --> 00:30:16,419
propellers and we also the plane is

00:30:13,749 --> 00:30:18,999
flying with the lifting surfaces of the

00:30:16,419 --> 00:30:23,320
the wings are providing the lift as well

00:30:18,999 --> 00:30:25,570
as the elevators and rudder so I if

00:30:23,320 --> 00:30:27,129
there is needs for more of this we can

00:30:25,570 --> 00:30:31,090
definitely look at adding that it's

00:30:27,129 --> 00:30:32,919
certainly possible to add so far this

00:30:31,090 --> 00:30:35,379
has not been the demand that we've seen

00:30:32,919 --> 00:30:37,149
I think the the most valuable aspect of

00:30:35,379 --> 00:30:39,100
Sidel will be providing the

00:30:37,149 --> 00:30:41,110
functionality to have the higher level

00:30:39,100 --> 00:30:43,629
behaviors instead of working too

00:30:41,110 --> 00:30:45,749
specifically tuned the like hardware get

00:30:43,629 --> 00:30:48,279
the controller gains for the hardware

00:30:45,749 --> 00:30:49,690
alright thank you to Li please send our

00:30:48,279 --> 00:30:52,150
love to our sailing community of Ross

00:30:49,690 --> 00:30:56,640
and thank you

00:30:52,150 --> 00:30:56,640
[Applause]

00:31:02,530 --> 00:31:04,590

YouTube URL: https://www.youtube.com/watch?v=WpGSrW6jhkc


