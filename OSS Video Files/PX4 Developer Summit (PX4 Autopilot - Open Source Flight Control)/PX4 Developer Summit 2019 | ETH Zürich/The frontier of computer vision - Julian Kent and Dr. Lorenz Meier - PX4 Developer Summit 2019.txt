Title: The frontier of computer vision - Julian Kent and Dr. Lorenz Meier - PX4 Developer Summit 2019
Publication date: 2019-07-03
Playlist: PX4 Developer Summit 2019 | ETH ZÃ¼rich
Description: 
	Julian Kent
Technical Lead Computer Vision Team, Auterion

Lorenz Meier
cofounder, Auterion
PX4 Author

This session will cover the computer vision components of the PX4 roadmap and how community and industry members can contribute and align to improve the computer vision support in PX4.
Captions: 
	00:00:10,030 --> 00:00:16,420
okay so it

00:00:11,650 --> 00:00:18,250
frontier of computer vision but more

00:00:16,420 --> 00:00:22,020
specifically its frontier frontier of

00:00:18,250 --> 00:00:25,270
computer vision as it relates to px4

00:00:22,020 --> 00:00:28,630
we're not gonna do anything super crazy

00:00:25,270 --> 00:00:31,660
like show what some research lab might

00:00:28,630 --> 00:00:32,830
be doing somewhere we're more doing what

00:00:31,660 --> 00:00:34,839
are the front what is the frontier of

00:00:32,830 --> 00:00:37,510
computer vision in ps4 and how does that

00:00:34,839 --> 00:00:40,540
relate to what you might be able to use

00:00:37,510 --> 00:00:43,830
what we're working on and what's going

00:00:40,540 --> 00:00:46,379
to be available in the near near future

00:00:43,830 --> 00:00:49,780
not-too-distant future

00:00:46,379 --> 00:00:52,170
yeah Lawrence is going to need leading a

00:00:49,780 --> 00:00:55,089
bit of discussion around this as well

00:00:52,170 --> 00:00:57,339
so the goal for this session is we have

00:00:55,089 --> 00:00:59,769
40 minutes we have not content for 40

00:00:57,339 --> 00:01:02,080
minutes but we've left a lot of time for

00:00:59,769 --> 00:01:04,629
discussion because this is not one of

00:01:02,080 --> 00:01:06,640
the topics where you know we have like

00:01:04,629 --> 00:01:08,140
four years development under the belt

00:01:06,640 --> 00:01:10,450
and it's totally clear where it's

00:01:08,140 --> 00:01:12,700
heading it's totally clear where the

00:01:10,450 --> 00:01:15,850
contributors are what the patterns are

00:01:12,700 --> 00:01:18,520
this is fairly new we're made good

00:01:15,850 --> 00:01:22,120
inroads but I also would like to make

00:01:18,520 --> 00:01:26,230
sure that as part of today's discussion

00:01:22,120 --> 00:01:29,890
we're connecting development efforts

00:01:26,230 --> 00:01:33,400
from various areas also because it

00:01:29,890 --> 00:01:35,580
involves Hardware right pixhawk is this

00:01:33,400 --> 00:01:38,620
canonical thing that everybody's using

00:01:35,580 --> 00:01:40,570
for flight control but for computer

00:01:38,620 --> 00:01:42,850
vision we don't have these canonical

00:01:40,570 --> 00:01:45,040
platforms hopefully it will be multiple

00:01:42,850 --> 00:01:47,100
where it's clear like yet this board

00:01:45,040 --> 00:01:51,010
this camera maybe even this airframe

00:01:47,100 --> 00:01:52,360
just works it's it's more like if I

00:01:51,010 --> 00:01:58,510
compare it to flight control it's more

00:01:52,360 --> 00:02:06,310
like 2013 ish so first question is who

00:01:58,510 --> 00:02:09,459
is doing CV development here okay that's

00:02:06,310 --> 00:02:12,159
that's quite a few people would you want

00:02:09,459 --> 00:02:14,260
to briefly tell us what you're doing who

00:02:12,159 --> 00:02:18,150
feels comfortable sharing at least sort

00:02:14,260 --> 00:02:18,150
of the RAF application

00:02:23,439 --> 00:02:29,659
so yeah thank you what we are doing is

00:02:26,900 --> 00:02:31,909
we are using computer vision to solve

00:02:29,659 --> 00:02:35,299
precision landing and to takeoff which

00:02:31,909 --> 00:02:38,170
is I believe a common use case if you if

00:02:35,299 --> 00:02:40,670
your landing or not in open space but in

00:02:38,170 --> 00:02:42,769
like a constraint area like a ground

00:02:40,670 --> 00:02:45,260
station something like that so yeah

00:02:42,769 --> 00:02:48,489
that's what we do and we use vision

00:02:45,260 --> 00:02:51,530
position estimate messages to provide

00:02:48,489 --> 00:02:55,220
accurate positioning to the flight

00:02:51,530 --> 00:02:57,109
control stack and we use in a board

00:02:55,220 --> 00:03:00,159
computer or onboard computer with a

00:02:57,109 --> 00:03:08,900
video camera so quite a basic setup but

00:03:00,159 --> 00:03:13,900
it's kind kind of works thanks anybody

00:03:08,900 --> 00:03:17,000
else interested to share what I'm

00:03:13,900 --> 00:03:20,389
somebody back here what I actually find

00:03:17,000 --> 00:03:23,389
interesting is that we have quite a few

00:03:20,389 --> 00:03:25,729
people working on it but then it seems

00:03:23,389 --> 00:03:30,500
like it's getting closer to the company

00:03:25,729 --> 00:03:34,760
activity and our project we have been

00:03:30,500 --> 00:03:36,620
doing with set command Jetson we've been

00:03:34,760 --> 00:03:39,590
doing like Freda reconstruction of a

00:03:36,620 --> 00:03:42,799
rubble field and then detecting suitable

00:03:39,590 --> 00:03:50,829
landing sites to land on in that so that

00:03:42,799 --> 00:03:54,489
works pretty well cool thanks awesome

00:03:50,829 --> 00:03:54,489
more up there

00:04:01,790 --> 00:04:05,670
Thanks

00:04:03,060 --> 00:04:08,819
hi yeah my name is Nicholas Hammond from

00:04:05,670 --> 00:04:13,519
DLR and we're doing computer vision for

00:04:08,819 --> 00:04:16,859
various in various projects from

00:04:13,519 --> 00:04:20,340
detecting and tracking of UAVs for

00:04:16,859 --> 00:04:24,090
counter measurements using optical flow

00:04:20,340 --> 00:04:28,350
or slam methods for navigation using

00:04:24,090 --> 00:04:32,990
also yeah radar or laser scanners

00:04:28,350 --> 00:04:40,229
cameras for collision avoidance and yeah

00:04:32,990 --> 00:04:40,800
environmental perception cool anybody

00:04:40,229 --> 00:04:48,150
else

00:04:40,800 --> 00:04:51,150
yes awesome I'm this is hindlimb from

00:04:48,150 --> 00:04:53,910
you define we're doing integration of

00:04:51,150 --> 00:04:56,070
visual in all short of a tree in this

00:04:53,910 --> 00:04:58,259
small drone so if you want to check it

00:04:56,070 --> 00:05:01,800
out just feel free to talk to me

00:04:58,259 --> 00:05:03,990
so we're utilizing EKF 2 for visual no

00:05:01,800 --> 00:05:06,840
ultimate reintegration and it works well

00:05:03,990 --> 00:05:09,659
and we're also testing local planner and

00:05:06,840 --> 00:05:15,870
global planner with this drone 2 so it

00:05:09,659 --> 00:05:18,360
works it works well fantastic so one of

00:05:15,870 --> 00:05:21,960
the things that we've learned as a

00:05:18,360 --> 00:05:23,940
community from 2013 on because back then

00:05:21,960 --> 00:05:25,680
flight control was also just laying back

00:05:23,940 --> 00:05:28,050
yeah we're having this special

00:05:25,680 --> 00:05:30,270
controller and it's a lot better and you

00:05:28,050 --> 00:05:33,720
know pretty much all of these companies

00:05:30,270 --> 00:05:36,599
are not around anymore I think I would

00:05:33,720 --> 00:05:39,060
like to invite the people here if what

00:05:36,599 --> 00:05:41,970
you're doing is infrastructure so to

00:05:39,060 --> 00:05:45,539
speak not crash into something or other

00:05:41,970 --> 00:05:48,090
aspects consider working with upstream

00:05:45,539 --> 00:05:51,120
contributing to that also safe landing

00:05:48,090 --> 00:05:54,720
that is just hygienic that's not that's

00:05:51,120 --> 00:05:57,180
not something like what we showed on a

00:05:54,720 --> 00:05:58,889
demo on the field yesterday not crashing

00:05:57,180 --> 00:06:01,830
into something on landing and I'm not

00:05:58,889 --> 00:06:03,419
talking about sophisticated landing site

00:06:01,830 --> 00:06:06,630
detection you know that could be a

00:06:03,419 --> 00:06:09,570
business value where you can essentially

00:06:06,630 --> 00:06:12,110
offer that as a service but not crashing

00:06:09,570 --> 00:06:14,720
into something is the same thing as

00:06:12,110 --> 00:06:16,220
falling out of the sky this is not

00:06:14,720 --> 00:06:18,080
something you can differentiate with

00:06:16,220 --> 00:06:21,860
that's not customer value that's not a

00:06:18,080 --> 00:06:24,140
reason why somebody buys your drone it's

00:06:21,860 --> 00:06:27,680
just a reason that somebody doesn't buy

00:06:24,140 --> 00:06:29,690
your drone if it does it and that is the

00:06:27,680 --> 00:06:32,600
reason we're active in these areas

00:06:29,690 --> 00:06:35,620
upstream because people expect that

00:06:32,600 --> 00:06:40,430
people expect things to be safe that

00:06:35,620 --> 00:06:42,230
you're working on safety and so I think

00:06:40,430 --> 00:06:44,720
it's it's important also to have that

00:06:42,230 --> 00:06:47,600
discussion on differentiation we don't

00:06:44,720 --> 00:06:50,270
want to parallel efforts that are really

00:06:47,600 --> 00:06:52,760
on top of the open source stack but at

00:06:50,270 --> 00:06:54,980
the same time not everything that is

00:06:52,760 --> 00:06:57,800
technology is differentiated business

00:06:54,980 --> 00:07:00,320
value and so please please take that

00:06:57,800 --> 00:07:02,930
feedback also a bit back to your company

00:07:00,320 --> 00:07:05,630
you think about it I've seen the same

00:07:02,930 --> 00:07:07,910
pattern in 2013 and again none of these

00:07:05,630 --> 00:07:10,210
companies is still around they're all

00:07:07,910 --> 00:07:10,210
gone

00:07:12,560 --> 00:07:19,010
so the around computer vision there's

00:07:16,960 --> 00:07:21,169
the thing is computer vision is

00:07:19,010 --> 00:07:23,390
expensive it's complicated it requires

00:07:21,169 --> 00:07:25,340
heavier components all of these problems

00:07:23,390 --> 00:07:26,630
so why do we want it

00:07:25,340 --> 00:07:29,780
if it's got all of these difficulties

00:07:26,630 --> 00:07:31,430
and the real issue is that with drones

00:07:29,780 --> 00:07:33,580
as they become more and more autonomous

00:07:31,430 --> 00:07:36,140
we need to be able to enable them to

00:07:33,580 --> 00:07:37,090
still be safe even in environments that

00:07:36,140 --> 00:07:42,169
we don't know about

00:07:37,090 --> 00:07:45,229
there's think of dynamic environments

00:07:42,169 --> 00:07:48,740
think of environments that hadn't been

00:07:45,229 --> 00:07:51,770
mapped before think of BiBi loss when

00:07:48,740 --> 00:07:54,260
there's an emergency these all of these

00:07:51,770 --> 00:07:58,580
things in order to be able to safely

00:07:54,260 --> 00:08:01,400
operate as as a drone in these in these

00:07:58,580 --> 00:08:03,410
kind of problems we need to computer

00:08:01,400 --> 00:08:07,310
vision is it's an easy way to solve

00:08:03,410 --> 00:08:11,360
these or easy and relative terms and why

00:08:07,310 --> 00:08:13,729
computer vision and not not a whole host

00:08:11,360 --> 00:08:15,410
of other sensors and it's really because

00:08:13,729 --> 00:08:18,590
we have these awesome cameras that we

00:08:15,410 --> 00:08:20,300
can leverage that are very they're

00:08:18,590 --> 00:08:23,200
available from a lot of other industries

00:08:20,300 --> 00:08:25,550
from starting it was starting with

00:08:23,200 --> 00:08:28,910
photography starting with all of these

00:08:25,550 --> 00:08:31,250
places we have extremely high bandwidth

00:08:28,910 --> 00:08:32,839
sensor data and to the point where I

00:08:31,250 --> 00:08:34,700
don't think we're actually getting other

00:08:32,839 --> 00:08:36,979
sensors that have the same bandwidth

00:08:34,700 --> 00:08:39,080
coming out of them and especially the

00:08:36,979 --> 00:08:40,190
remote sensing capabilities of them it's

00:08:39,080 --> 00:08:41,390
not just bandwidth about what's

00:08:40,190 --> 00:08:42,919
happening right where you are

00:08:41,390 --> 00:08:45,380
but it's Bend width of your environment

00:08:42,919 --> 00:08:49,190
it's what's happening around you and

00:08:45,380 --> 00:08:51,830
this data can tell you a lot that other

00:08:49,190 --> 00:08:53,720
sensors can't actually get you and the

00:08:51,830 --> 00:08:56,149
other thing about computer vision is

00:08:53,720 --> 00:08:58,810
that humans do it inherently we have a

00:08:56,149 --> 00:09:01,790
big chunk of our brain that is very

00:08:58,810 --> 00:09:05,029
heavily adapted towards processing

00:09:01,790 --> 00:09:06,589
vision information and so for us we

00:09:05,029 --> 00:09:08,450
should be a finding that designing

00:09:06,589 --> 00:09:10,459
computer vision algorithms are a lot

00:09:08,450 --> 00:09:12,230
easier than potentially a lot of other

00:09:10,459 --> 00:09:13,880
types of algorithms from another a lot

00:09:12,230 --> 00:09:16,100
of other types of sensors just because

00:09:13,880 --> 00:09:21,110
we intuitively understand how to deal

00:09:16,100 --> 00:09:24,950
with this kind of data so in the current

00:09:21,110 --> 00:09:29,180
drone industry there the computer vision

00:09:24,950 --> 00:09:31,339
is used in in it's mostly these three

00:09:29,180 --> 00:09:35,120
topics there's a few special cases that

00:09:31,339 --> 00:09:37,070
are using other places but we can

00:09:35,120 --> 00:09:39,440
basically summarize it with these

00:09:37,070 --> 00:09:41,480
there's collision prevention and that

00:09:39,440 --> 00:09:43,700
includes landing systems making sure

00:09:41,480 --> 00:09:46,640
that you don't have a crash there's vio

00:09:43,700 --> 00:09:49,970
which is visual inertial odometry that's

00:09:46,640 --> 00:09:52,850
navigation with just a camera a single

00:09:49,970 --> 00:09:56,660
camera and or maybe multiple cameras and

00:09:52,850 --> 00:09:59,360
an IMU and you can theoretically if you

00:09:56,660 --> 00:10:01,910
have good enough sensors do very very

00:09:59,360 --> 00:10:05,899
accurate navigation just using these and

00:10:01,910 --> 00:10:07,730
the other one is follow me tracking

00:10:05,899 --> 00:10:11,690
these these kinds of things that you see

00:10:07,730 --> 00:10:13,399
when for specifically for autonomous

00:10:11,690 --> 00:10:14,930
filming applications these kinds of

00:10:13,399 --> 00:10:20,300
things when somebody's running around

00:10:14,930 --> 00:10:23,209
and the drone is following them but so I

00:10:20,300 --> 00:10:26,089
think for these things again we want

00:10:23,209 --> 00:10:28,730
this to be interactive and and not bore

00:10:26,089 --> 00:10:31,130
you to death with an extensive summary

00:10:28,730 --> 00:10:33,829
of all the things we can do so out of

00:10:31,130 --> 00:10:37,250
this the third part is certainly

00:10:33,829 --> 00:10:38,760
something that is more a what-what an

00:10:37,250 --> 00:10:40,500
application right so that's

00:10:38,760 --> 00:10:42,900
not something for an open-source project

00:10:40,500 --> 00:10:47,520
in general you you don't want to do

00:10:42,900 --> 00:10:50,820
everything and going back to the first

00:10:47,520 --> 00:10:53,940
two collision prevention vio gps denied

00:10:50,820 --> 00:10:57,510
navigation what else is there that you

00:10:53,940 --> 00:11:00,240
as a developer or as a company would

00:10:57,510 --> 00:11:01,830
actually need in terms of just having

00:11:00,240 --> 00:11:06,390
that functionality there maybe you're

00:11:01,830 --> 00:11:14,370
not interested in developing it okay I'm

00:11:06,390 --> 00:11:16,470
coming up there and so I think the next

00:11:14,370 --> 00:11:19,610
person will then raise their hand down

00:11:16,470 --> 00:11:19,610
there because it's fun

00:11:25,020 --> 00:11:32,370
I had to two things one is ship landings

00:11:29,600 --> 00:11:35,990
we from the industry get more and more

00:11:32,370 --> 00:11:38,400
requests for ship deploy drones

00:11:35,990 --> 00:11:40,950
obviously landing on a moving target

00:11:38,400 --> 00:11:43,260
basic exactly yeah yeah so that but not

00:11:40,950 --> 00:11:46,800
only landing they're also really

00:11:43,260 --> 00:11:49,500
identifying what nice H mark on the on

00:11:46,800 --> 00:11:52,500
the landing pad is or whatever indicator

00:11:49,500 --> 00:11:54,600
you put there and also I more of a

00:11:52,500 --> 00:11:57,900
question in terms of collision

00:11:54,600 --> 00:12:00,390
prevention the last update I had was

00:11:57,900 --> 00:12:02,970
that that works pretty much all right

00:12:00,390 --> 00:12:05,580
for quadcopters but not so much for

00:12:02,970 --> 00:12:12,450
fixed wings and I was wondering if

00:12:05,580 --> 00:12:13,710
there's always some some yeah so on

00:12:12,450 --> 00:12:17,490
fixed wing with collision prevention

00:12:13,710 --> 00:12:20,640
it's harder because well one you have a

00:12:17,490 --> 00:12:23,070
lot higher airspeed or ground speed in

00:12:20,640 --> 00:12:24,720
this case because usually your objects

00:12:23,070 --> 00:12:26,040
that you will be collide with are not

00:12:24,720 --> 00:12:29,490
moving in the air but they're on the

00:12:26,040 --> 00:12:31,500
ground and this means that you need

00:12:29,490 --> 00:12:32,880
higher sensor range and the other thing

00:12:31,500 --> 00:12:34,650
is fixed-wing is they're generally less

00:12:32,880 --> 00:12:37,080
maneuverable as well which means you

00:12:34,650 --> 00:12:39,690
also need higher sensor range so at the

00:12:37,080 --> 00:12:40,770
moment I think it's well there's two

00:12:39,690 --> 00:12:42,720
components one is the sense of

00:12:40,770 --> 00:12:45,210
limitation and there are ways around it

00:12:42,720 --> 00:12:46,620
you could do a kind of a monocular slam

00:12:45,210 --> 00:12:50,760
where you're building up a whole world

00:12:46,620 --> 00:12:52,529
as you fly around and doing limitations

00:12:50,760 --> 00:12:55,109
on this for the benefit of the

00:12:52,529 --> 00:12:57,329
which are not CV experts I think the

00:12:55,109 --> 00:13:01,769
simple answer is you can use the same

00:12:57,329 --> 00:13:03,899
algorithm if you have enough range which

00:13:01,769 --> 00:13:06,779
is limited by the stereo baseline which

00:13:03,899 --> 00:13:08,639
means you need like like half metre

00:13:06,779 --> 00:13:10,979
camera baseline which is a problem

00:13:08,639 --> 00:13:14,069
mechanically or you use a different

00:13:10,979 --> 00:13:17,069
sensor because key thing that's probably

00:13:14,069 --> 00:13:20,519
not clear here is collision prevention

00:13:17,069 --> 00:13:23,129
is operating on a 3d point cloud which

00:13:20,519 --> 00:13:25,739
means it can use radars which means you

00:13:23,129 --> 00:13:29,669
can use lidar z' you can use anything

00:13:25,739 --> 00:13:31,679
that gives you 3d data and in turn that

00:13:29,669 --> 00:13:34,109
also means yes you can use it on a

00:13:31,679 --> 00:13:35,999
fixed-wing but only if you have a sensor

00:13:34,109 --> 00:13:46,109
that gives you enough range so you have

00:13:35,999 --> 00:13:47,699
a useful response time it's yeah the

00:13:46,109 --> 00:13:49,439
difficulty is you need very high

00:13:47,699 --> 00:13:51,359
accurate calibration between the camera

00:13:49,439 --> 00:13:53,789
orientations and the bigger the spread

00:13:51,359 --> 00:13:56,389
the more flex you get in your system so

00:13:53,789 --> 00:13:59,579
this is why you see most of them are

00:13:56,389 --> 00:14:01,049
this big between the stereo lenses and

00:13:59,579 --> 00:14:02,789
the ones that get bigger become very

00:14:01,049 --> 00:14:11,489
heavy very quickly and that's just this

00:14:02,789 --> 00:14:12,749
different up the system yeah it's for so

00:14:11,489 --> 00:14:13,979
that you actually have the accurate

00:14:12,749 --> 00:14:16,139
calibration so that you know that when

00:14:13,979 --> 00:14:17,849
this pixel aligns with that pixel it's

00:14:16,139 --> 00:14:21,229
exactly at this point often the distance

00:14:17,849 --> 00:14:25,799
if you then add a 0.5 degree twist or

00:14:21,229 --> 00:14:29,339
less the and that's easier and easier

00:14:25,799 --> 00:14:31,349
the bigger your system the the pixels

00:14:29,339 --> 00:14:34,289
don't align anymore and then all of the

00:14:31,349 --> 00:14:36,539
assumptions that the computer vision

00:14:34,289 --> 00:14:39,599
algorithms that can run in real time can

00:14:36,539 --> 00:14:41,189
use they sort of fall away and you end

00:14:39,599 --> 00:14:43,229
up having to step back to super slow

00:14:41,189 --> 00:14:45,829
algorithms that generally take hours and

00:14:43,229 --> 00:14:45,829
run on desktops

00:14:55,700 --> 00:15:02,750
for fixed-wing we already interested in

00:14:59,890 --> 00:15:05,000
obstacle avoidance and I think when you

00:15:02,750 --> 00:15:08,740
do in fines fixing for example in

00:15:05,000 --> 00:15:12,740
precision aquaculture you have a lot of

00:15:08,740 --> 00:15:16,730
predefined obstacles maybe in the flight

00:15:12,740 --> 00:15:18,260
planning just a good flight planning

00:15:16,730 --> 00:15:21,350
would bring us ahead

00:15:18,260 --> 00:15:25,850
we had initiated the project until the Q

00:15:21,350 --> 00:15:28,040
control but it failed but well I think

00:15:25,850 --> 00:15:29,810
it was an engineering problem but I

00:15:28,040 --> 00:15:33,140
think that's that's important that on

00:15:29,810 --> 00:15:39,410
the fixed-wing that we can determine the

00:15:33,140 --> 00:15:41,330
poles and so obstacles yeah anything you

00:15:39,410 --> 00:15:44,150
can solve beforehand and not have to

00:15:41,330 --> 00:15:46,160
solve in real time and until the real

00:15:44,150 --> 00:15:48,410
time system is good enough is definitely

00:15:46,160 --> 00:15:49,880
better to do it that way also if you're

00:15:48,410 --> 00:15:52,670
solving it beforehand generally you have

00:15:49,880 --> 00:15:54,440
more context you know that if you know

00:15:52,670 --> 00:15:55,850
if the operator sees that oh we're not

00:15:54,440 --> 00:15:57,650
going to fly around this area because

00:15:55,850 --> 00:15:59,570
there's a something there that we know

00:15:57,650 --> 00:16:01,250
there's an obstacle then the operator

00:15:59,570 --> 00:16:02,720
knows oh maybe I just need to raise the

00:16:01,250 --> 00:16:04,850
flight elevation because I actually care

00:16:02,720 --> 00:16:08,980
more about complete coverage than I do

00:16:04,850 --> 00:16:08,980
about being at this low altitude

00:16:18,100 --> 00:16:25,999
yeah so the the the reference was to to

00:16:24,319 --> 00:16:27,739
the integration queue ground control

00:16:25,999 --> 00:16:30,889
which isn't quite there right so it's

00:16:27,739 --> 00:16:33,789
just terrain data so it's not it's not

00:16:30,889 --> 00:16:37,069
actually having any obstacle data or

00:16:33,789 --> 00:16:41,229
should also not have so that's that's

00:16:37,069 --> 00:16:44,929
clear but I think integrating

00:16:41,229 --> 00:16:47,419
integrating data also flying vehicles

00:16:44,929 --> 00:16:51,619
and we have some initial integration px4

00:16:47,419 --> 00:16:54,019
or any other type of predetermined or

00:16:51,619 --> 00:16:56,269
otherwise announced obstacles like from

00:16:54,019 --> 00:17:02,209
a transponder that is certainly part of

00:16:56,269 --> 00:17:03,979
the total solution yeah so computer

00:17:02,209 --> 00:17:05,779
vision the thing is there's a lot of

00:17:03,979 --> 00:17:09,169
cheap and easy ways to get around using

00:17:05,779 --> 00:17:10,009
computer vision and I think a lot of for

00:17:09,169 --> 00:17:11,929
a lot of use cases

00:17:10,009 --> 00:17:13,730
computer vision you have this super high

00:17:11,929 --> 00:17:15,350
bandwidth data and then out of it you

00:17:13,730 --> 00:17:18,409
extract a couple obstacles and you know

00:17:15,350 --> 00:17:19,909
to not fly in that direction and you can

00:17:18,409 --> 00:17:21,829
also do that with cheaper sensors you

00:17:19,909 --> 00:17:23,419
can do that with a single point laser

00:17:21,829 --> 00:17:26,209
distance sensor or four or five of them

00:17:23,419 --> 00:17:28,879
pointing roughly forward and you can do

00:17:26,209 --> 00:17:30,679
that use that to get a large component

00:17:28,879 --> 00:17:32,809
of collision prevention optical flow

00:17:30,679 --> 00:17:34,759
gets you most of the way to vio although

00:17:32,809 --> 00:17:36,710
you need laser distance sensors or

00:17:34,759 --> 00:17:40,580
something of the like

00:17:36,710 --> 00:17:42,500
and follow-me tracking which is probably

00:17:40,580 --> 00:17:44,690
the most advanced usage of computer

00:17:42,500 --> 00:17:48,169
vision that is actually regularly

00:17:44,690 --> 00:17:49,639
deployed on drones is just target you

00:17:48,169 --> 00:17:52,399
can do it by just following the ground

00:17:49,639 --> 00:17:53,720
station GPS location there's not a huge

00:17:52,399 --> 00:17:59,409
amount of work that has to actually be

00:17:53,720 --> 00:18:02,419
done there so the this is sort of where

00:17:59,409 --> 00:18:04,639
the word industry is it's depending on

00:18:02,419 --> 00:18:07,429
the level of drone you're at and the

00:18:04,639 --> 00:18:09,830
level of component you're at you you'll

00:18:07,429 --> 00:18:11,419
get usually a selection of these and

00:18:09,830 --> 00:18:13,100
you'll either end up in the right column

00:18:11,419 --> 00:18:16,399
for the cheap option or the left column

00:18:13,100 --> 00:18:20,480
for the expensive option and yeah so

00:18:16,399 --> 00:18:22,220
compared to px4 what do we have the

00:18:20,480 --> 00:18:27,049
we've got the collision prevention we've

00:18:22,220 --> 00:18:29,390
got the vio the sonar laser sensors if

00:18:27,049 --> 00:18:31,580
there's a PR that's currently open

00:18:29,390 --> 00:18:34,370
it just needs a little bit of brush-up

00:18:31,580 --> 00:18:36,200
work and the only thing we're really

00:18:34,370 --> 00:18:38,630
missing is the vision based follow me

00:18:36,200 --> 00:18:40,940
tracking but to be honest that's very

00:18:38,630 --> 00:18:43,220
manufacturer specific most that's very

00:18:40,940 --> 00:18:44,750
consumer specific as well and I think a

00:18:43,220 --> 00:18:46,790
lot of people aren't actually interested

00:18:44,750 --> 00:18:49,690
in that and so that's probably better

00:18:46,790 --> 00:18:57,130
left up to the people who want it

00:18:49,690 --> 00:19:03,260
yeah so we have some videos here

00:18:57,130 --> 00:19:06,230
this is avoidance running on as you can

00:19:03,260 --> 00:19:10,010
see a fairly big drone to those of you

00:19:06,230 --> 00:19:11,920
who were at the there was a demo after

00:19:10,010 --> 00:19:15,260
the core dev workshop on Wednesday

00:19:11,920 --> 00:19:18,440
that's the same tree and that's I have

00:19:15,260 --> 00:19:25,190
758 that's doing can you just rerun the

00:19:18,440 --> 00:19:27,110
video yeah so the drone is here it's not

00:19:25,190 --> 00:19:30,500
the best video but it's a developer

00:19:27,110 --> 00:19:33,080
conference right so as you can see it

00:19:30,500 --> 00:19:34,910
avoids the tree and I want to just

00:19:33,080 --> 00:19:37,400
highlight a couple of things first it's

00:19:34,910 --> 00:19:40,580
a fairly smooth motion at a reasonable

00:19:37,400 --> 00:19:43,460
speed so it's not some toy example that

00:19:40,580 --> 00:19:47,030
can you rerun it again that's not you

00:19:43,460 --> 00:19:50,630
know just there you can see the attitude

00:19:47,030 --> 00:19:53,120
is reasonably smooth so the control

00:19:50,630 --> 00:19:56,570
outputs are not scary it's just

00:19:53,120 --> 00:19:58,310
continuing around it now of course it's

00:19:56,570 --> 00:20:01,750
not very useful to avoid a single tree

00:19:58,310 --> 00:20:04,250
right but this is an easy test set up

00:20:01,750 --> 00:20:07,750
we've also tested this on power poles

00:20:04,250 --> 00:20:12,260
and things like that and I believe that

00:20:07,750 --> 00:20:13,600
this overall is going to be in a fairly

00:20:12,260 --> 00:20:18,890
good shape

00:20:13,600 --> 00:20:20,480
for products this year and the main

00:20:18,890 --> 00:20:23,510
thing actually missing is the hardware

00:20:20,480 --> 00:20:25,850
integration having canonical good cheap

00:20:23,510 --> 00:20:27,410
embedded hardware that has the same

00:20:25,850 --> 00:20:30,980
integration level as a pic sock for

00:20:27,410 --> 00:20:32,390
flight control and so that is also

00:20:30,980 --> 00:20:35,050
something that we're talking to hardware

00:20:32,390 --> 00:20:39,260
vendors and where we are interested to

00:20:35,050 --> 00:20:41,929
push a bit of a reference design so that

00:20:39,260 --> 00:20:44,210
or multiple reference designs and

00:20:41,929 --> 00:20:46,220
building patterns so that it becomes

00:20:44,210 --> 00:20:47,960
easier because as long as everybody in

00:20:46,220 --> 00:20:49,369
this room is building their own computer

00:20:47,960 --> 00:20:51,799
vision system we will not have

00:20:49,369 --> 00:20:54,860
consistency we will not have product is

00:20:51,799 --> 00:20:57,980
Asian and all the individual efforts to

00:20:54,860 --> 00:21:00,289
get your particular built stable are in

00:20:57,980 --> 00:21:01,789
a way wasted and they're not really

00:21:00,289 --> 00:21:08,389
adding value if you're building a

00:21:01,789 --> 00:21:10,820
product so another thing we have hang on

00:21:08,389 --> 00:21:15,649
how do I actually escape this and get to

00:21:10,820 --> 00:21:18,879
the next video we have to go to the next

00:21:15,649 --> 00:21:18,879
video and present again

00:21:34,010 --> 00:21:39,060
so this video shows pretty much the same

00:21:37,380 --> 00:21:42,540
demo as you saw yesterday so it's

00:21:39,060 --> 00:21:45,810
actually much less exciting now it's

00:21:42,540 --> 00:21:48,060
it's the safe landing and I think now

00:21:45,810 --> 00:21:49,920
that we have all here and focused I

00:21:48,060 --> 00:21:52,230
actually can quickly explain what the

00:21:49,920 --> 00:21:54,690
thing does so it's by design a

00:21:52,230 --> 00:21:57,060
deterministic algorithm so we don't want

00:21:54,690 --> 00:21:59,750
it to do random stuff which means it

00:21:57,060 --> 00:22:03,780
approaches the desired landing zone and

00:21:59,750 --> 00:22:06,590
then if it finds that blocked as it is

00:22:03,780 --> 00:22:09,510
in sensor range it goes back up to a

00:22:06,590 --> 00:22:12,870
predetermined safe altitude and then

00:22:09,510 --> 00:22:15,630
runs the spiral pattern to see where the

00:22:12,870 --> 00:22:17,520
next best point is you could also say

00:22:15,630 --> 00:22:20,070
like why are you not optimizing the

00:22:17,520 --> 00:22:22,350
surface for a gradient find the exactly

00:22:20,070 --> 00:22:24,630
next thing well the reason is simple

00:22:22,350 --> 00:22:27,000
that spiral pattern is extremely

00:22:24,630 --> 00:22:31,380
predictable and regulators like

00:22:27,000 --> 00:22:33,240
predictable and in that way you have a

00:22:31,380 --> 00:22:36,510
better situational awareness you have a

00:22:33,240 --> 00:22:39,240
predictable system but that also means

00:22:36,510 --> 00:22:41,940
you kind of see in the motion that it

00:22:39,240 --> 00:22:45,450
sort of does unnecessary backtracking

00:22:41,940 --> 00:22:48,060
but that's exactly by design now we

00:22:45,450 --> 00:22:50,550
probably will do that a little more

00:22:48,060 --> 00:22:53,460
integrated and faster and everything but

00:22:50,550 --> 00:22:55,920
right now the main argument is hey we

00:22:53,460 --> 00:22:58,560
can do bv lost cargo operations with

00:22:55,920 --> 00:23:00,720
this and for that we need an approach

00:22:58,560 --> 00:23:03,960
where that is really easy to explain

00:23:00,720 --> 00:23:07,320
that is really repeatable and that

00:23:03,960 --> 00:23:09,600
doesn't take input data to determine the

00:23:07,320 --> 00:23:11,190
next landing location instead it checks

00:23:09,600 --> 00:23:13,500
landing locations that have been

00:23:11,190 --> 00:23:16,320
predetermined so that you can exactly

00:23:13,500 --> 00:23:25,680
say well it will not land beyond

00:23:16,320 --> 00:23:27,510
position XY in that time frame so in

00:23:25,680 --> 00:23:30,570
terms of the capabilities of computer

00:23:27,510 --> 00:23:32,340
vision the I think the easiest way for

00:23:30,570 --> 00:23:34,500
us to look at it is what the humans do

00:23:32,340 --> 00:23:37,860
and you can also look at what animals do

00:23:34,500 --> 00:23:39,630
with it and the the most obvious one is

00:23:37,860 --> 00:23:41,100
localization yeah I know where I am in

00:23:39,630 --> 00:23:41,970
the room because I can see where

00:23:41,100 --> 00:23:43,530
everything else is and

00:23:41,970 --> 00:23:45,570
conceive reference in reference where I

00:23:43,530 --> 00:23:48,600
am and from the perspective I can see

00:23:45,570 --> 00:23:50,880
stuff I know what my location is humans

00:23:48,600 --> 00:23:53,430
also use it for recognition this is my

00:23:50,880 --> 00:23:56,700
friend whatever I'm gonna follow them as

00:23:53,430 --> 00:24:01,640
they walk around the corner and we also

00:23:56,700 --> 00:24:04,140
we we build maps we you know you you

00:24:01,640 --> 00:24:06,990
hold an understanding that if you go out

00:24:04,140 --> 00:24:08,220
of the out of the lecture hall and you

00:24:06,990 --> 00:24:09,720
turn left you can go in one direction

00:24:08,220 --> 00:24:11,130
you can do right you go to other

00:24:09,720 --> 00:24:12,960
direction if you go straight you can go

00:24:11,130 --> 00:24:15,210
up the stairs or up the elevator and

00:24:12,960 --> 00:24:17,700
these kinds of things really help and

00:24:15,210 --> 00:24:20,310
they allow us to be autonomous so that

00:24:17,700 --> 00:24:21,510
mean that we don't need although maybe

00:24:20,310 --> 00:24:23,460
we're going in the other direction now

00:24:21,510 --> 00:24:25,020
but you don't need the phone with the

00:24:23,460 --> 00:24:29,790
math on it to be able to do everything

00:24:25,020 --> 00:24:31,920
right the other stuff is stuff like

00:24:29,790 --> 00:24:34,200
minimum risk path planning if you need

00:24:31,920 --> 00:24:35,910
to get from point A to point B across a

00:24:34,200 --> 00:24:38,250
muddy field you might go from patch of

00:24:35,910 --> 00:24:40,800
grass to patch of grass and not walk

00:24:38,250 --> 00:24:42,600
through the deep mud the whole time if

00:24:40,800 --> 00:24:43,890
you want to sit down you're not going to

00:24:42,600 --> 00:24:47,070
sit down on the cactus you're going to

00:24:43,890 --> 00:24:49,020
sit down on a chair and all of like all

00:24:47,070 --> 00:24:50,730
of these things that we use we use the

00:24:49,020 --> 00:24:54,090
vision information in context in order

00:24:50,730 --> 00:24:56,460
to plan everything that we do so there's

00:24:54,090 --> 00:24:58,620
a lot of stuff that we could be doing

00:24:56,460 --> 00:25:02,010
with the vision that we don't and

00:24:58,620 --> 00:25:04,260
instead we're using this amazingly rich

00:25:02,010 --> 00:25:06,390
data source for very simple uses and

00:25:04,260 --> 00:25:11,610
that's really just because the field is

00:25:06,390 --> 00:25:14,790
in its infancy in academic projects we

00:25:11,610 --> 00:25:16,500
do go a bit further but academic

00:25:14,790 --> 00:25:20,400
projects are generally not designed to

00:25:16,500 --> 00:25:23,010
be robust work in any situation and

00:25:20,400 --> 00:25:25,650
where the academic or the person who's

00:25:23,010 --> 00:25:27,570
doing it doesn't get to choose where

00:25:25,650 --> 00:25:29,340
it's being used and in industry it's

00:25:27,570 --> 00:25:31,050
exactly the opposite you're going to

00:25:29,340 --> 00:25:33,450
take a product and you don't get to

00:25:31,050 --> 00:25:35,370
choose that it's being used in direct

00:25:33,450 --> 00:25:38,190
sunlight or in shade you don't get to

00:25:35,370 --> 00:25:40,260
choose if it's being used on a cold day

00:25:38,190 --> 00:25:43,680
or a warm day it has to work in all of

00:25:40,260 --> 00:25:45,270
these situations and although we have

00:25:43,680 --> 00:25:49,200
all of these amazing projects we have

00:25:45,270 --> 00:25:50,940
math building we have safety analysis

00:25:49,200 --> 00:25:54,630
well the question for me would be what

00:25:50,940 --> 00:25:55,560
are you interested in from a product

00:25:54,630 --> 00:25:58,560
perspective

00:25:55,560 --> 00:26:00,780
that is maybe up here or not on here we

00:25:58,560 --> 00:26:04,110
had that earlier discussion right but

00:26:00,780 --> 00:26:06,450
now that you've seen a bit more anything

00:26:04,110 --> 00:26:08,130
that crosses anybody's mind here where

00:26:06,450 --> 00:26:17,850
they say actually that's a perception

00:26:08,130 --> 00:26:20,340
problem we need that the object

00:26:17,850 --> 00:26:24,450
classification if you want to find

00:26:20,340 --> 00:26:27,510
people in catastrophe situations or

00:26:24,450 --> 00:26:31,380
count cars or something that that could

00:26:27,510 --> 00:26:33,480
be very interesting okay so I think

00:26:31,380 --> 00:26:36,300
that's interesting the question is that

00:26:33,480 --> 00:26:39,260
the job of an operating system or is

00:26:36,300 --> 00:26:41,850
that the job of an application because

00:26:39,260 --> 00:26:44,010
for two reasons one is we want to stay

00:26:41,850 --> 00:26:46,680
focused in what we do here and the other

00:26:44,010 --> 00:26:49,740
part is we need to be a bit careful to

00:26:46,680 --> 00:26:52,250
not confuse our adopting companies by

00:26:49,740 --> 00:26:54,660
going very deep in specific applications

00:26:52,250 --> 00:26:56,820
which starts to look like the open

00:26:54,660 --> 00:26:59,040
source project is actually competing

00:26:56,820 --> 00:27:01,170
with solution providers we don't want

00:26:59,040 --> 00:27:03,900
that we care about the things that keep

00:27:01,170 --> 00:27:08,610
a drone in the air keep a robot moving

00:27:03,900 --> 00:27:10,380
and so I think it's highly relevant but

00:27:08,610 --> 00:27:14,280
I also think it's something that should

00:27:10,380 --> 00:27:16,710
be solved by a lost people like a search

00:27:14,280 --> 00:27:41,790
and rescue company that specialized on

00:27:16,710 --> 00:27:44,310
AI for search and rescue so I I also

00:27:41,790 --> 00:27:46,140
think that yes so if we could detect

00:27:44,310 --> 00:27:48,890
humans we could do a better job at not

00:27:46,140 --> 00:27:48,890
landing on them

00:28:00,980 --> 00:28:06,390
that's that well I totally agree but I

00:28:04,649 --> 00:28:08,159
think we have fundamentally problem

00:28:06,390 --> 00:28:10,529
fundamentally different problems in the

00:28:08,159 --> 00:28:12,840
drone space so in the autonomous driving

00:28:10,529 --> 00:28:14,760
space you have the problem of dealing

00:28:12,840 --> 00:28:17,610
with the environment around yourself the

00:28:14,760 --> 00:28:19,590
navigation is actually not hard in

00:28:17,610 --> 00:28:21,510
drones it's the opposite we can stay

00:28:19,590 --> 00:28:23,640
clear of pretty much anything there's a

00:28:21,510 --> 00:28:27,870
lot of free space because we're in a 3d

00:28:23,640 --> 00:28:29,730
space but there are a couple of things

00:28:27,870 --> 00:28:30,539
that need to be avoided other aircrafts

00:28:29,730 --> 00:28:33,179
yes

00:28:30,539 --> 00:28:34,710
I'm personally a skeptic of using

00:28:33,179 --> 00:28:37,860
computer vision for that having a

00:28:34,710 --> 00:28:39,960
computer vision PhD it's generally

00:28:37,860 --> 00:28:43,500
really hard to see a small dot in a big

00:28:39,960 --> 00:28:46,590
sky and radar does a really really

00:28:43,500 --> 00:28:51,029
really good job at finding small dots in

00:28:46,590 --> 00:28:53,519
a big sky but yeah I mean dynamic

00:28:51,029 --> 00:28:55,139
obstacles are certainly a thing but the

00:28:53,519 --> 00:28:58,380
framework we're building right now for

00:28:55,139 --> 00:29:01,019
px4 can deal with dynamic obstacles so

00:28:58,380 --> 00:29:03,120
it's something that inherently can be

00:29:01,019 --> 00:29:04,769
addressed and we've specifically chosen

00:29:03,120 --> 00:29:07,139
algorithms that are not building a

00:29:04,769 --> 00:29:10,740
global map and building something that

00:29:07,139 --> 00:29:15,360
is hard to do with dynamic obstacles so

00:29:10,740 --> 00:29:17,909
that is where we want to push for a

00:29:15,360 --> 00:29:20,480
level of sensing that doesn't require a

00:29:17,909 --> 00:29:20,480
ton of history

00:29:29,700 --> 00:29:38,470
yesterday showed us a session about

00:29:33,179 --> 00:29:40,899
regulation efforts within a if FAA and

00:29:38,470 --> 00:29:43,120
one of the things you said that you need

00:29:40,899 --> 00:29:44,710
to you know do not need to handle a not

00:29:43,120 --> 00:29:46,389
flying above paper because the system is

00:29:44,710 --> 00:29:48,940
safe but now but you need to prove that

00:29:46,389 --> 00:29:51,820
for each reference implementation but if

00:29:48,940 --> 00:29:54,789
you have generic pics for a open source

00:29:51,820 --> 00:29:57,399
maybe you want also to be able not to

00:29:54,789 --> 00:30:01,240
fly above people in order to support the

00:29:57,399 --> 00:30:03,389
different regulations about it i yeah i

00:30:01,240 --> 00:30:06,220
think that could be certainly helpful

00:30:03,389 --> 00:30:09,789
having a people detector and they're not

00:30:06,220 --> 00:30:12,519
not flying over crowds autonomously and

00:30:09,789 --> 00:30:15,250
for me that's again a same thing as same

00:30:12,519 --> 00:30:23,019
land safe landing it's staying compliant

00:30:15,250 --> 00:30:24,669
so i could see that in terms of onboard

00:30:23,019 --> 00:30:26,970
computer hardware i don't think we have

00:30:24,669 --> 00:30:31,059
a slide on it but actually fairly fairly

00:30:26,970 --> 00:30:35,580
relevant so what let's let's make it

00:30:31,059 --> 00:30:35,580
simple like who is using a Raspberry Pi

00:30:36,059 --> 00:30:46,529
ok who is using a Raspberry Pi but is

00:30:40,990 --> 00:30:50,019
hitting the performance limits of it ok

00:30:46,529 --> 00:30:53,049
what about any sort of let's say low end

00:30:50,019 --> 00:30:59,529
Intel so an up core or something like

00:30:53,049 --> 00:31:01,990
that good

00:30:59,529 --> 00:31:07,389
high end Intel nook or anything like

00:31:01,990 --> 00:31:09,519
that ok what I probably should mention

00:31:07,389 --> 00:31:11,980
let's try to stick for now to something

00:31:09,519 --> 00:31:14,139
that you plan to productize because

00:31:11,980 --> 00:31:17,879
otherwise we're starting to mix academic

00:31:14,139 --> 00:31:23,980
and deployment use cases good nvidia

00:31:17,879 --> 00:31:26,759
something small like ok who of the

00:31:23,980 --> 00:31:32,799
Nvidia users has actually written proper

00:31:26,759 --> 00:31:34,809
GPGPU or CUDA code to leverage it ok

00:31:32,799 --> 00:31:36,820
that's that's interesting that's exactly

00:31:34,809 --> 00:31:40,210
what I thought it's like we're buying

00:31:36,820 --> 00:31:42,460
all into this performance potential

00:31:40,210 --> 00:31:45,400
and that nobody's realizing it which is

00:31:42,460 --> 00:31:47,140
by the way why we're supporting invidia

00:31:45,400 --> 00:31:48,550
adult Aryan but we're really focused on

00:31:47,140 --> 00:31:51,060
the Intel platforms because you get

00:31:48,550 --> 00:31:53,500
right away the immediate performance

00:31:51,060 --> 00:31:59,140
okay arm

00:31:53,500 --> 00:32:00,930
IMX nobody's working on IMAX that's

00:31:59,140 --> 00:32:03,870
really okay half a person

00:32:00,930 --> 00:32:07,750
[Laughter]

00:32:03,870 --> 00:32:17,610
what other arm like some of the like

00:32:07,750 --> 00:32:22,870
Qualcomm SOC no Samsung Exynos okay one

00:32:17,610 --> 00:32:28,240
two anything else from arm that I

00:32:22,870 --> 00:32:41,920
haven't mentioned that was a trick

00:32:28,240 --> 00:32:56,350
question Nvidia boards are armed too so

00:32:41,920 --> 00:32:57,490
gpgpu yeah okay FPGAs okay back yeah I

00:32:56,350 --> 00:33:01,410
saw that

00:32:57,490 --> 00:33:03,970
so any other compute platform I haven't

00:33:01,410 --> 00:33:08,250
can you just raise your hand and shout

00:33:03,970 --> 00:33:08,250
like any class I have mentioned

00:33:15,380 --> 00:33:22,380
yeah anybody using AMD yeah they have

00:33:20,250 --> 00:33:25,289
some the Rison series is pretty good and

00:33:22,380 --> 00:33:31,830
embedded so I think they have a branding

00:33:25,289 --> 00:33:34,789
problem good so who is happy with their

00:33:31,830 --> 00:33:39,780
processing platform in terms of power

00:33:34,789 --> 00:33:43,740
thermal weight okay

00:33:39,780 --> 00:33:45,510
two people out of roughly 20 who would

00:33:43,740 --> 00:33:47,700
need something that's better package you

00:33:45,510 --> 00:33:51,390
know smaller better cooling more

00:33:47,700 --> 00:33:54,289
productized hardware yeah that's a huge

00:33:51,390 --> 00:33:57,110
of huge market potential right there

00:33:54,289 --> 00:34:03,620
good then let's create a little more

00:33:57,110 --> 00:34:06,870
cameras who is using an intel realsense

00:34:03,620 --> 00:34:10,220
okay who is hundred percent happy with

00:34:06,870 --> 00:34:10,220
the inter real sense they're using

00:34:12,639 --> 00:34:19,730
okay structure core asset occipital

00:34:16,310 --> 00:34:22,030
structure core you're not using it

00:34:19,730 --> 00:34:22,030
Julian

00:34:24,740 --> 00:34:33,940
good said 3d camera okay custom camera

00:34:34,389 --> 00:34:40,730
that is a lot so for your custom cameras

00:34:37,940 --> 00:34:43,520
are you using something like a point

00:34:40,730 --> 00:34:52,250
grey and a custom Sarah head or what are

00:34:43,520 --> 00:34:53,629
you doing no stereo maybe people are

00:34:52,250 --> 00:35:00,470
debating whether they can share that or

00:34:53,629 --> 00:35:05,870
not okay

00:35:00,470 --> 00:35:09,640
so who is happy with the sensor choices

00:35:05,870 --> 00:35:09,640
that are available in terms of cameras

00:35:09,820 --> 00:35:24,590
good is it also custom now no but okay

00:35:22,280 --> 00:35:26,830
I'm looking for a sort of mass-market

00:35:24,590 --> 00:35:30,020
available staff that's sort of cheap and

00:35:26,830 --> 00:35:33,140
kind of in the real sense space okay so

00:35:30,020 --> 00:35:35,330
I didn't want to prime this discussion

00:35:33,140 --> 00:35:37,040
but what we find is that both from a

00:35:35,330 --> 00:35:40,460
computer hardware perspective as well as

00:35:37,040 --> 00:35:43,760
from a sensor perspective there's still

00:35:40,460 --> 00:35:44,960
work to do again going back to the the

00:35:43,760 --> 00:35:49,610
space that pixhawk field

00:35:44,960 --> 00:35:52,010
fills in flight control side and it's

00:35:49,610 --> 00:35:55,400
good to see that reaffirmed I think it

00:35:52,010 --> 00:35:59,180
would be interesting to do a call after

00:35:55,400 --> 00:36:00,770
this conference and maybe a pole for it

00:35:59,180 --> 00:36:02,470
and collect a bit little more

00:36:00,770 --> 00:36:04,640
requirements because we have

00:36:02,470 --> 00:36:06,950
manufacturers in the ecosystem that

00:36:04,640 --> 00:36:09,560
would be probably excited to build

00:36:06,950 --> 00:36:12,470
something if they were just certain that

00:36:09,560 --> 00:36:15,320
there's enough volume out there to

00:36:12,470 --> 00:36:19,490
sustain the design effort and so I'd

00:36:15,320 --> 00:36:21,500
like to help match that and also help

00:36:19,490 --> 00:36:24,230
them to get good product market fit by

00:36:21,500 --> 00:36:26,520
really being clear about what drone

00:36:24,230 --> 00:36:33,120
companies need for something that can

00:36:26,520 --> 00:36:34,740
easily integrated yep so this sort of

00:36:33,120 --> 00:36:37,680
feeds right back into what we just

00:36:34,740 --> 00:36:39,330
talked about why aren't we using

00:36:37,680 --> 00:36:44,760
computer vision everywhere and it's

00:36:39,330 --> 00:36:46,050
expensive in costs the although for a

00:36:44,760 --> 00:36:47,970
lot of drones that doesn't matter if

00:36:46,050 --> 00:36:50,760
it's a small fraction of what the rest

00:36:47,970 --> 00:36:53,730
of the airframe costs and then exactly

00:36:50,760 --> 00:36:55,320
its power and weight and hopefully these

00:36:53,730 --> 00:36:57,180
are being solved in new generations but

00:36:55,320 --> 00:36:58,560
we're actually going to push for that as

00:36:57,180 --> 00:37:02,730
well it's not just going to happen by

00:36:58,560 --> 00:37:04,920
itself the there's other issues there's

00:37:02,730 --> 00:37:07,170
reliability lighting conditions and to

00:37:04,920 --> 00:37:10,740
some degree this is fixed with active

00:37:07,170 --> 00:37:13,230
sensors to infrared pattern projectors

00:37:10,740 --> 00:37:14,520
these kinds of things but this is again

00:37:13,230 --> 00:37:16,350
this is close to range this isn't going

00:37:14,520 --> 00:37:18,450
to fix you it's not going to solve your

00:37:16,350 --> 00:37:21,380
fixed-wing problems right so for this

00:37:18,450 --> 00:37:24,470
you still need I don't know lidar radar

00:37:21,380 --> 00:37:31,680
accurate ground maps something like this

00:37:24,470 --> 00:37:33,750
and yeah the the cameras are better on

00:37:31,680 --> 00:37:36,330
the stuff on your iPhone is generally

00:37:33,750 --> 00:37:38,040
better than the stuff that's in most of

00:37:36,330 --> 00:37:39,720
the cameras that we can buy for computer

00:37:38,040 --> 00:37:44,010
vision but this is also a different

00:37:39,720 --> 00:37:48,150
technology yeah

00:37:44,010 --> 00:37:50,130
R&D costs are high the complex systems

00:37:48,150 --> 00:37:52,410
like all of the integration effort and

00:37:50,130 --> 00:37:55,050
the other thing with computer vision is

00:37:52,410 --> 00:37:57,450
it's black box for the most part you

00:37:55,050 --> 00:38:00,780
have data in data out and regulators

00:37:57,450 --> 00:38:07,230
don't like that and open source solves

00:38:00,780 --> 00:38:08,960
these yeah so we need the purpose design

00:38:07,230 --> 00:38:12,450
the hardware that we just talked about

00:38:08,960 --> 00:38:14,430
we need the frameworks to correctly use

00:38:12,450 --> 00:38:16,410
the hardware we need the way to link

00:38:14,430 --> 00:38:21,390
this together forward and backward and

00:38:16,410 --> 00:38:23,190
make everybody happy with it and we're

00:38:21,390 --> 00:38:30,660
different things are in different states

00:38:23,190 --> 00:38:32,480
but where it is getting forward and yeah

00:38:30,660 --> 00:38:35,790
we're we're gonna get there

00:38:32,480 --> 00:38:37,830
okay can you maybe walk us quickly here

00:38:35,790 --> 00:38:40,540
specifically through it quickly but

00:38:37,830 --> 00:38:44,080
specifically sure so

00:38:40,540 --> 00:38:45,640
the in terms of hardware the the

00:38:44,080 --> 00:38:47,320
bandwidth between the flight control and

00:38:45,640 --> 00:38:49,840
the companion computer right now this is

00:38:47,320 --> 00:38:51,550
limited to something like maybe you can

00:38:49,840 --> 00:38:55,990
push it to a one point five mega serial

00:38:51,550 --> 00:39:02,230
port but then you might have reliability

00:38:55,990 --> 00:39:03,730
issues so there yeah and if we if you

00:39:02,230 --> 00:39:06,130
want tight integration between your

00:39:03,730 --> 00:39:08,020
computer vision system and your flight

00:39:06,130 --> 00:39:09,190
controller you need that bandwidth so

00:39:08,020 --> 00:39:12,400
that you can synchronize these two

00:39:09,190 --> 00:39:15,280
systems together tightly with with the

00:39:12,400 --> 00:39:17,200
IMU data with commands so that you don't

00:39:15,280 --> 00:39:20,830
have jerky movement all of these kinds

00:39:17,200 --> 00:39:22,359
of things it needs to be cheap enough

00:39:20,830 --> 00:39:25,600
depending on depending on your platform

00:39:22,359 --> 00:39:27,190
of course but for real scale for

00:39:25,600 --> 00:39:28,869
mass-market stuff we do need to get the

00:39:27,190 --> 00:39:30,430
price down we have to remember we're not

00:39:28,869 --> 00:39:32,230
trying to fly a computer vision systems

00:39:30,430 --> 00:39:35,080
around for the most part unless you're a

00:39:32,230 --> 00:39:36,460
surveyor but everybody else the computer

00:39:35,080 --> 00:39:38,140
vision system is just added weight and

00:39:36,460 --> 00:39:42,400
we'd like it to go away and just get the

00:39:38,140 --> 00:39:46,390
capabilities and widely available if you

00:39:42,400 --> 00:39:48,340
have if you have limitations and how

00:39:46,390 --> 00:39:52,090
much you can get how much in quantity

00:39:48,340 --> 00:39:54,850
and lead times then yeah the export

00:39:52,090 --> 00:39:58,600
regulations then people aren't going to

00:39:54,850 --> 00:40:00,609
be able to use your stuff yeah so I I

00:39:58,600 --> 00:40:01,690
think specifically we're there are a

00:40:00,609 --> 00:40:04,150
couple of things that we're addressing

00:40:01,690 --> 00:40:05,650
right now so one is adding Ethernet to

00:40:04,150 --> 00:40:07,750
the autopilot design that's really

00:40:05,650 --> 00:40:09,790
important for deeper integration that's

00:40:07,750 --> 00:40:13,930
happening we will hear more about that

00:40:09,790 --> 00:40:15,490
in the next session the overall px4 -

00:40:13,930 --> 00:40:17,109
Ross - communication is important

00:40:15,490 --> 00:40:19,000
because as you start to build more

00:40:17,109 --> 00:40:20,619
external sensor into it you don't want

00:40:19,000 --> 00:40:23,950
to go through math link every time and

00:40:20,619 --> 00:40:25,840
spend three working days just futzing

00:40:23,950 --> 00:40:28,869
messages through that's horrible

00:40:25,840 --> 00:40:31,330
you want to be straight through and the

00:40:28,869 --> 00:40:33,609
promise of mavs link is actually to be a

00:40:31,330 --> 00:40:38,350
stable API you don't need that for your

00:40:33,609 --> 00:40:42,100
CV system you need deep integration and

00:40:38,350 --> 00:40:45,130
then I think what we also are doing but

00:40:42,100 --> 00:40:47,050
that is still ongoing is figuring out

00:40:45,130 --> 00:40:49,570
well we have this flight control state

00:40:47,050 --> 00:40:51,280
machine control loop and now we have

00:40:49,570 --> 00:40:52,630
external inputs like actually the

00:40:51,280 --> 00:40:53,950
mission cannot be continued

00:40:52,630 --> 00:40:55,960
actually your

00:40:53,950 --> 00:40:58,450
my trajectory doesn't work like you're

00:40:55,960 --> 00:41:01,270
planted and we're figuring right now a

00:40:58,450 --> 00:41:02,050
lot of that out like how can be how can

00:41:01,270 --> 00:41:04,180
that be done

00:41:02,050 --> 00:41:08,170
what's architectural II better tightly

00:41:04,180 --> 00:41:10,660
coupled loosely coupled and I actually

00:41:08,170 --> 00:41:13,210
would be interested to learn like how

00:41:10,660 --> 00:41:15,460
many of you are doing that and have you

00:41:13,210 --> 00:41:17,589
thought in depth about it and quick

00:41:15,460 --> 00:41:19,300
background before you know we hear from

00:41:17,589 --> 00:41:21,550
the audience what I see a lot is that

00:41:19,300 --> 00:41:23,230
people just do off board control so they

00:41:21,550 --> 00:41:24,849
take the complete control away from the

00:41:23,230 --> 00:41:27,520
flight controller so they did they put

00:41:24,849 --> 00:41:29,950
in positive positions or velocities but

00:41:27,520 --> 00:41:32,170
what you end up with if you want to take

00:41:29,950 --> 00:41:34,030
that outside of an academic lab then you

00:41:32,170 --> 00:41:36,010
need to have low battery handling and

00:41:34,030 --> 00:41:38,170
fail saves and so you're going to

00:41:36,010 --> 00:41:39,820
re-implement everything you don't have

00:41:38,170 --> 00:41:41,440
it certified you don't have it tested by

00:41:39,820 --> 00:41:43,390
regulator you don't have thousands of

00:41:41,440 --> 00:41:45,820
flight hours on it or even more than

00:41:43,390 --> 00:41:48,640
that so it's it's kind of a losing

00:41:45,820 --> 00:41:50,440
battle your reimplemented px4 outside

00:41:48,640 --> 00:41:52,270
without all the support that goes into

00:41:50,440 --> 00:41:54,820
px4 so you're not going to get there

00:41:52,270 --> 00:41:56,440
which is why we interested in interfaces

00:41:54,820 --> 00:41:58,000
that allow this more hybrid approach

00:41:56,440 --> 00:41:59,890
where you retain all that face set

00:41:58,000 --> 00:42:04,660
functionality but feed in external

00:41:59,890 --> 00:42:06,730
inputs so who who sees who is like

00:42:04,660 --> 00:42:09,010
engaged with what's happening upstream

00:42:06,730 --> 00:42:12,130
on that front and who feels they need

00:42:09,010 --> 00:42:16,180
more information like who things they

00:42:12,130 --> 00:42:18,310
need more information okay that's

00:42:16,180 --> 00:42:20,079
actually a lot of people so I think we

00:42:18,310 --> 00:42:23,440
need to make sure to have a more

00:42:20,079 --> 00:42:33,760
effective def call or or end or

00:42:23,440 --> 00:42:37,440
documentation on it and a roadmap yeah

00:42:33,760 --> 00:42:37,440
so we saw that coming

00:43:05,480 --> 00:43:10,080
so the question is do we provide

00:43:08,310 --> 00:43:13,590
synchronization features and the answer

00:43:10,080 --> 00:43:16,020
is yes in multiple ways either

00:43:13,590 --> 00:43:18,750
triggering cameras or reading timestamps

00:43:16,020 --> 00:43:24,660
so it depends on the implementation but

00:43:18,750 --> 00:43:27,750
yes I mean you can add a setup a an

00:43:24,660 --> 00:43:29,490
extra port that puts out a time trigger

00:43:27,750 --> 00:43:30,930
or you can listen to a time trigger from

00:43:29,490 --> 00:43:32,610
a camera so you know when in frame is

00:43:30,930 --> 00:43:36,120
actually triggered and get a timestamp

00:43:32,610 --> 00:43:40,290
from that and the other side is that

00:43:36,120 --> 00:43:41,490
your serial link is slow as well so you

00:43:40,290 --> 00:43:42,810
have to remember that even if you do

00:43:41,490 --> 00:43:47,100
have good timestamps you're still going

00:43:42,810 --> 00:43:49,350
to have latency so if which in fact is

00:43:47,100 --> 00:43:51,270
not a problem because a full USB frame

00:43:49,350 --> 00:43:54,840
transfer is usually something like 15

00:43:51,270 --> 00:43:56,760
milliseconds yeah so and to some degree

00:43:54,840 --> 00:44:00,210
we can't handle the latency if you were

00:43:56,760 --> 00:44:02,250
watching Paul's presentation yesterday

00:44:00,210 --> 00:44:09,380
with the delayed time horizon fusion of

00:44:02,250 --> 00:44:09,380
the EKF but again this is it

00:44:29,970 --> 00:44:35,500
yeah but that that's how its implemented

00:44:32,380 --> 00:44:45,100
so you can use that today and that is

00:44:35,500 --> 00:44:48,940
what we've done since 2009 ich step

00:44:45,100 --> 00:44:51,610
forward I think yeah I think we've gone

00:44:48,940 --> 00:44:56,170
into this a little bit already quite a

00:44:51,610 --> 00:45:05,620
bit we're also like in the last three

00:44:56,170 --> 00:45:08,440
minutes yeah so stuff stuff that just

00:45:05,620 --> 00:45:10,690
high-level that I'd like to see minimum

00:45:08,440 --> 00:45:12,100
risk fast planning so somebody brought

00:45:10,690 --> 00:45:14,110
this up earlier of not flying over

00:45:12,100 --> 00:45:15,580
people and that also goes over

00:45:14,110 --> 00:45:16,810
infrastructure you don't wanna fly over

00:45:15,580 --> 00:45:19,180
buildings you don't know fly over roads

00:45:16,810 --> 00:45:21,730
and it would be great if we could do

00:45:19,180 --> 00:45:24,010
just a simple planning adjustment to say

00:45:21,730 --> 00:45:27,550
okay if you have to cross the road don't

00:45:24,010 --> 00:45:29,200
fly across it very very straight so that

00:45:27,550 --> 00:45:31,180
you spend a lot of time above it maybe

00:45:29,200 --> 00:45:32,650
put a gentle s in your pattern so that

00:45:31,180 --> 00:45:35,590
you minimize the time spent above it

00:45:32,650 --> 00:45:39,550
just little things like this full slam

00:45:35,590 --> 00:45:40,840
yeah everybody wants full slam it's it's

00:45:39,550 --> 00:45:43,450
a lot of work

00:45:40,840 --> 00:45:44,620
rtl if your GPS fails how do you know

00:45:43,450 --> 00:45:49,210
where your drone is how does it ever

00:45:44,620 --> 00:45:51,250
come back yeah structure following

00:45:49,210 --> 00:45:53,590
inspect the inspection people love this

00:45:51,250 --> 00:45:55,600
but again this is more application

00:45:53,590 --> 00:45:59,170
specific I'm not sure if this should be

00:45:55,600 --> 00:46:02,140
part of the saying if you're if you're

00:45:59,170 --> 00:46:04,240
planning to work on inspection like make

00:46:02,140 --> 00:46:06,580
sure to interface with the CV team

00:46:04,240 --> 00:46:09,220
because if we can build out the

00:46:06,580 --> 00:46:13,060
interfaces so people can do use case

00:46:09,220 --> 00:46:16,300
specific structure following on top of

00:46:13,060 --> 00:46:18,160
the obstacle avoidance then we get there

00:46:16,300 --> 00:46:19,750
where we want right not implementing

00:46:18,160 --> 00:46:22,480
something that the industry could as an

00:46:19,750 --> 00:46:24,550
end application but still leveraging it

00:46:22,480 --> 00:46:26,410
if you're kind of replacing the whole

00:46:24,550 --> 00:46:27,910
stack by doing your own obstacle

00:46:26,410 --> 00:46:30,100
avoidance which is not actually nicely

00:46:27,910 --> 00:46:32,140
integrated with px4 what will happen is

00:46:30,100 --> 00:46:34,510
that the obstacle avoidance will start

00:46:32,140 --> 00:46:36,070
to creep up into the application problem

00:46:34,510 --> 00:46:38,920
because others will come in and solve

00:46:36,070 --> 00:46:42,180
that problem so important to engage in

00:46:38,920 --> 00:46:42,180
particular if you want to differentiate

00:46:53,940 --> 00:46:59,859
yeah I mean that would be one way to do

00:46:56,410 --> 00:47:02,920
it and also to feed sort of avoidance

00:46:59,859 --> 00:47:05,589
vectors and rejections into that and so

00:47:02,920 --> 00:47:08,170
you can then essentially build an API on

00:47:05,589 --> 00:47:10,930
where you tell the system on the surface

00:47:08,170 --> 00:47:16,180
to go next so they can cooperatively

00:47:10,930 --> 00:47:18,039
work yeah and the last thing is actually

00:47:16,180 --> 00:47:19,660
something that's pretty critical which

00:47:18,039 --> 00:47:21,549
is interfacing with all of these flight

00:47:19,660 --> 00:47:22,930
modes and it's something that we're

00:47:21,549 --> 00:47:24,339
trying to move towards and the avoidance

00:47:22,930 --> 00:47:27,520
and hopefully we'll be able to prototype

00:47:24,339 --> 00:47:29,530
it but yeah it's again it's also

00:47:27,520 --> 00:47:31,690
application specific not everybody only

00:47:29,530 --> 00:47:37,720
wants to operate during auto modes or

00:47:31,690 --> 00:47:41,920
things like this so Lawrence went into

00:47:37,720 --> 00:47:44,049
the off-board mode we can the 1.9

00:47:41,920 --> 00:47:48,299
injector trajectory injection Martine is

00:47:44,049 --> 00:47:48,299
going to be presenting after lunch and

00:47:48,329 --> 00:47:54,849
yeah the integration is really a big

00:47:52,029 --> 00:47:58,839
issue in terms of making something that

00:47:54,849 --> 00:48:00,490
isn't just for a quick demo it's

00:47:58,839 --> 00:48:02,079
something that actually works when

00:48:00,490 --> 00:48:07,599
people who don't know how to use it try

00:48:02,079 --> 00:48:09,609
to use it and yeah I think this really

00:48:07,599 --> 00:48:13,150
goes into what we've said computer

00:48:09,609 --> 00:48:16,210
vision is hard we're here to help we

00:48:13,150 --> 00:48:18,220
know the system pretty well and the

00:48:16,210 --> 00:48:20,079
stuff that you want to do if it's

00:48:18,220 --> 00:48:23,020
something that everybody can benefit

00:48:20,079 --> 00:48:24,430
from we'd love to up stream it and it's

00:48:23,020 --> 00:48:26,430
not going to be a differentiating

00:48:24,430 --> 00:48:28,900
feature for long so you might as well

00:48:26,430 --> 00:48:33,760
make sure that it doesn't break and that

00:48:28,900 --> 00:48:35,619
you don't have to maintain it and no

00:48:33,760 --> 00:48:36,910
matter how hard how much we do it's

00:48:35,619 --> 00:48:39,970
never just going to be plug-and-play

00:48:36,910 --> 00:48:41,920
you're always going to for your use case

00:48:39,970 --> 00:48:44,890
you need to think about how that impacts

00:48:41,920 --> 00:48:49,500
the stuff around you but we can make it

00:48:44,890 --> 00:48:53,760
easy or at least easier

00:48:49,500 --> 00:48:55,840
yeah that's it for this talk awesome

00:48:53,760 --> 00:49:00,399
thank you

00:48:55,840 --> 00:49:00,399
[Applause]

00:49:05,050 --> 00:49:07,110

YouTube URL: https://www.youtube.com/watch?v=p-250Lvd_xw


