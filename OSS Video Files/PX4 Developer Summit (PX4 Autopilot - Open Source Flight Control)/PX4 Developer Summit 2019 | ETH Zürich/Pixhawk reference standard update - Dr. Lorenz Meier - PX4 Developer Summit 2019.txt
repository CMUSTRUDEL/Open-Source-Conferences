Title: Pixhawk reference standard update - Dr. Lorenz Meier - PX4 Developer Summit 2019
Publication date: 2019-07-03
Playlist: PX4 Developer Summit 2019 | ETH ZÃ¼rich
Description: 
	Lorenz Meier
cofounder, Auterion
PX4 Author
Captions: 
	00:00:08,040 --> 00:00:15,240
so as I'm setting up my microphone this

00:00:13,330 --> 00:00:17,860
is this is an interesting presentation

00:00:15,240 --> 00:00:19,780
it's an interesting presentation for a

00:00:17,860 --> 00:00:22,270
couple of reasons so first everybody in

00:00:19,780 --> 00:00:26,349
this room knows what pic Sark is has an

00:00:22,270 --> 00:00:28,480
opinion the second part is there lots of

00:00:26,349 --> 00:00:30,250
companies already invested into it in

00:00:28,480 --> 00:00:33,160
one way or the other right either you

00:00:30,250 --> 00:00:35,980
have decided for a particular built for

00:00:33,160 --> 00:00:38,650
it maybe you're actually manufacturing

00:00:35,980 --> 00:00:40,840
hardware and so you have products and

00:00:38,650 --> 00:00:43,300
there are other companies who also have

00:00:40,840 --> 00:00:47,140
products and so I want to thread on that

00:00:43,300 --> 00:00:49,750
really lightly but what's really needed

00:00:47,140 --> 00:00:51,280
is we saw a lot of fragmentation over

00:00:49,750 --> 00:00:55,240
the past couple of years

00:00:51,280 --> 00:00:59,830
we saw a fragmentation going from Pixar

00:00:55,240 --> 00:01:02,080
to or Pixar one actually which was

00:00:59,830 --> 00:01:04,269
pretty consistent you could buy a couple

00:01:02,080 --> 00:01:06,430
different units you got consistent

00:01:04,269 --> 00:01:08,860
results to something where we start to

00:01:06,430 --> 00:01:11,860
have a fragmented ecosystem and it's at

00:01:08,860 --> 00:01:16,780
a level where it's becoming tedious

00:01:11,860 --> 00:01:20,170
unsafe and expensive and so as the

00:01:16,780 --> 00:01:23,470
creator of Pixar I'm rien gauging with

00:01:20,170 --> 00:01:26,830
that problem I'm engaging it the usual

00:01:23,470 --> 00:01:28,260
way with a community process and so the

00:01:26,830 --> 00:01:31,950
goal is to bring the industry together

00:01:28,260 --> 00:01:33,940
and also create a design that's

00:01:31,950 --> 00:01:36,430
collecting feedback from the whole

00:01:33,940 --> 00:01:40,690
industry which was always the way right

00:01:36,430 --> 00:01:44,200
that it always was use case and user

00:01:40,690 --> 00:01:46,330
driven and for that we're also going to

00:01:44,200 --> 00:01:50,170
standardize a couple of buses and

00:01:46,330 --> 00:01:51,850
connectors that includes the the

00:01:50,170 --> 00:01:53,950
connectors that are around that includes

00:01:51,850 --> 00:01:56,380
the autopilot bus and a new payload bus

00:01:53,950 --> 00:01:59,530
and it's all very early days so I'm not

00:01:56,380 --> 00:02:02,290
going to present something that's done

00:01:59,530 --> 00:02:04,630
and finished and set in stone it's it's

00:02:02,290 --> 00:02:07,240
a continuum at the same time we've

00:02:04,630 --> 00:02:11,799
prototyped to make sure this is all

00:02:07,240 --> 00:02:13,720
buildable community process we've

00:02:11,799 --> 00:02:16,209
actually closed the vote I just see that

00:02:13,720 --> 00:02:20,500
now so if you click if you go on that

00:02:16,209 --> 00:02:24,040
doodle link you will see that there's a

00:02:20,500 --> 00:02:27,190
Sukhdev call every tuesday evening in

00:02:24,040 --> 00:02:29,950
european timezone morning PST we will

00:02:27,190 --> 00:02:32,290
try to establish a second one for the

00:02:29,950 --> 00:02:35,650
asian time zones because we want to be

00:02:32,290 --> 00:02:39,700
inclusive and that vote is i think still

00:02:35,650 --> 00:02:42,100
ongoing will be close to goal is to have

00:02:39,700 --> 00:02:44,610
two releases per year for the flight

00:02:42,100 --> 00:02:47,410
management unit revisions that's a

00:02:44,610 --> 00:02:50,650
design name of pixhawk always has been

00:02:47,410 --> 00:02:54,420
and there's going to be a tick tock

00:02:50,650 --> 00:02:56,980
design process so there's the fmu

00:02:54,420 --> 00:02:58,810
without anything revision which

00:02:56,980 --> 00:03:01,410
represents the latest technology and

00:02:58,810 --> 00:03:05,230
that's what you typically use as a

00:03:01,410 --> 00:03:07,920
developer as a hobbyist it's the latest

00:03:05,230 --> 00:03:11,320
and greatest it's not necessarily

00:03:07,920 --> 00:03:14,170
hardened or proven in a very significant

00:03:11,320 --> 00:03:17,590
way it's just a new cool thing and then

00:03:14,170 --> 00:03:20,830
there is the FM UV x version which is

00:03:17,590 --> 00:03:23,020
the same cpu architecture similar

00:03:20,830 --> 00:03:25,930
sensors maybe not the same because we've

00:03:23,020 --> 00:03:28,780
learned something and hardened it has a

00:03:25,930 --> 00:03:31,150
hardened power supply it has all the

00:03:28,780 --> 00:03:34,090
things you need for authentication it

00:03:31,150 --> 00:03:36,280
has isolated power domains for the

00:03:34,090 --> 00:03:40,840
sensors so you have three complete

00:03:36,280 --> 00:03:43,360
isolated sensor domains and that is

00:03:40,840 --> 00:03:45,790
intended for the industry so if you

00:03:43,360 --> 00:03:47,530
build a product you generally want to

00:03:45,790 --> 00:03:50,500
target FM uvx

00:03:47,530 --> 00:03:54,280
but for your internal R&D team you want

00:03:50,500 --> 00:03:56,350
to target the latest F new version then

00:03:54,280 --> 00:03:57,910
we will set more clear compatibility

00:03:56,350 --> 00:04:00,400
requirements because so far they were

00:03:57,910 --> 00:04:04,060
implicit but really with a lot of

00:04:00,400 --> 00:04:06,220
fracturing we want people to be binary

00:04:04,060 --> 00:04:10,030
compatible for the autopilot software

00:04:06,220 --> 00:04:12,820
because it's really adding a lot of load

00:04:10,030 --> 00:04:15,310
onto the dev team to support different

00:04:12,820 --> 00:04:17,260
boards and while we can't support

00:04:15,310 --> 00:04:21,669
different boards we cannot support

00:04:17,260 --> 00:04:24,280
safety or certification testing for n

00:04:21,669 --> 00:04:26,050
boards it's not possible no matter if

00:04:24,280 --> 00:04:28,990
you can do it in software but you cannot

00:04:26,050 --> 00:04:32,229
put the safety and certification

00:04:28,990 --> 00:04:34,380
evidence behind it and so we need that

00:04:32,229 --> 00:04:35,970
standard to be a lot more tight

00:04:34,380 --> 00:04:41,010
for two applications where you care

00:04:35,970 --> 00:04:44,160
about it so the next thing is the Pixar

00:04:41,010 --> 00:04:45,840
connector standard we already kind of

00:04:44,160 --> 00:04:48,060
have that so people are not diligent

00:04:45,840 --> 00:04:50,640
enough yet but it's in another to

00:04:48,060 --> 00:04:52,620
terrible shape then a new thing is the

00:04:50,640 --> 00:04:55,290
Pixar autopilot pass I will talk about

00:04:52,620 --> 00:04:59,520
that in a second and the Pixar payload

00:04:55,290 --> 00:05:01,650
bus both are not done both are in flux

00:04:59,520 --> 00:05:05,580
and now is the time to engage with it

00:05:01,650 --> 00:05:07,890
and for previous generations of hardware

00:05:05,580 --> 00:05:12,380
we don't have hardware for this yet I've

00:05:07,890 --> 00:05:15,600
referenced repo where this is all

00:05:12,380 --> 00:05:18,060
governance this will work similar to the

00:05:15,600 --> 00:05:20,850
open-source projects with Def call

00:05:18,060 --> 00:05:22,650
maintainer development community and

00:05:20,850 --> 00:05:26,040
industry stakeholders so make sure you

00:05:22,650 --> 00:05:28,620
engage on that there is a royalty free

00:05:26,040 --> 00:05:33,720
license for the pics of trademark if

00:05:28,620 --> 00:05:36,000
you're sticking to it and then the

00:05:33,720 --> 00:05:42,000
conditions are pretty much like USB

00:05:36,000 --> 00:05:46,190
right well think that like good okay the

00:05:42,000 --> 00:05:48,240
goal is not to you know be

00:05:46,190 --> 00:05:51,410
discriminative but instead to create a

00:05:48,240 --> 00:05:54,170
standard so what it what we'll have is

00:05:51,410 --> 00:05:56,430
making sure that you're using the right

00:05:54,170 --> 00:05:59,160
using it the right way that you're

00:05:56,430 --> 00:06:00,840
sticking to the connector standards that

00:05:59,160 --> 00:06:04,230
you're sticking to the autopilot bus

00:06:00,840 --> 00:06:06,180
standards and we probably will also need

00:06:04,230 --> 00:06:08,070
to talk about manufacturing standards

00:06:06,180 --> 00:06:10,470
and arm again looking for feedback

00:06:08,070 --> 00:06:14,100
because right now we have manufacturers

00:06:10,470 --> 00:06:18,330
that do per board testing some do no no

00:06:14,100 --> 00:06:21,060
testing some do temperature compensation

00:06:18,330 --> 00:06:23,820
and I think we will need to come up as

00:06:21,060 --> 00:06:25,890
an industry with customer expectations

00:06:23,820 --> 00:06:27,840
from well if you buy something that's

00:06:25,890 --> 00:06:29,700
fulfilling the standard what has it

00:06:27,840 --> 00:06:32,130
actually been tested for and this is

00:06:29,700 --> 00:06:34,830
true for any hardware standard right if

00:06:32,130 --> 00:06:36,480
you buy a USB device if you buy anything

00:06:34,830 --> 00:06:38,670
else it has gone through a certain

00:06:36,480 --> 00:06:42,090
minimum set of requirements and then you

00:06:38,670 --> 00:06:45,300
can still add your quality on top as a

00:06:42,090 --> 00:06:47,260
manufacturer what I don't have on the

00:06:45,300 --> 00:06:50,560
slide deck which is the

00:06:47,260 --> 00:06:53,400
sort of natural question coming up here

00:06:50,560 --> 00:06:55,210
is like okay great now I have actually

00:06:53,400 --> 00:06:57,670
fulfilled all this how do I

00:06:55,210 --> 00:06:59,260
differentiate as a manufacturer and I

00:06:57,670 --> 00:07:01,900
think there are tons of ways to

00:06:59,260 --> 00:07:04,840
differentiate it terms a form factor in

00:07:01,900 --> 00:07:06,910
terms of temperature range in terms of

00:07:04,840 --> 00:07:09,220
additional unit qualification and

00:07:06,910 --> 00:07:11,290
testing you're providing in terms of the

00:07:09,220 --> 00:07:13,870
carrier boards you're providing in terms

00:07:11,290 --> 00:07:16,240
of design and support services you're

00:07:13,870 --> 00:07:17,830
providing to drone manufacturers so

00:07:16,240 --> 00:07:21,940
there's a whole variety of business

00:07:17,830 --> 00:07:23,830
models but again differentiation for me

00:07:21,940 --> 00:07:25,570
is not getting something to the point

00:07:23,830 --> 00:07:27,520
that it's safe that's just not

00:07:25,570 --> 00:07:29,920
acceptable and will hold this whole

00:07:27,520 --> 00:07:32,500
industry down and that's why we're now

00:07:29,920 --> 00:07:38,020
engaging on the core project side on

00:07:32,500 --> 00:07:40,330
this Pixar connector standard that is

00:07:38,020 --> 00:07:42,790
something you all know those are the jst

00:07:40,330 --> 00:07:44,770
gh connectors but it's also important

00:07:42,790 --> 00:07:46,450
that the pinout is correct so that

00:07:44,770 --> 00:07:49,020
you're not plugging into an autopilot

00:07:46,450 --> 00:07:53,320
and now suddenly everything is reversed

00:07:49,020 --> 00:07:56,500
happens we need to prevent that then

00:07:53,320 --> 00:07:58,660
picture of autopilot bus that is a new

00:07:56,500 --> 00:08:00,970
cool thing so that's a hundred pin

00:07:58,660 --> 00:08:05,920
connector the pin out is right now not

00:08:00,970 --> 00:08:07,270
locked down we have a draft up and you

00:08:05,920 --> 00:08:09,520
also see something that looks like

00:08:07,270 --> 00:08:12,370
hardware and that is indeed a full

00:08:09,520 --> 00:08:13,960
design because as I was trying to come

00:08:12,370 --> 00:08:16,180
up with something I can present I

00:08:13,960 --> 00:08:18,580
thought like well I cannot really do a

00:08:16,180 --> 00:08:21,340
design without proving it I cannot

00:08:18,580 --> 00:08:23,620
create a standard without arguing that

00:08:21,340 --> 00:08:26,590
it's implementable so what we've done at

00:08:23,620 --> 00:08:28,900
Orion is built a complete board design

00:08:26,590 --> 00:08:31,930
that we're not intending to offer as a

00:08:28,900 --> 00:08:34,479
product but that is representing the

00:08:31,930 --> 00:08:37,840
reference design for Pixar so we have

00:08:34,479 --> 00:08:40,150
now again something showing how it's

00:08:37,840 --> 00:08:41,880
done driven from software requirements

00:08:40,150 --> 00:08:44,770
driven from the real application

00:08:41,880 --> 00:08:47,020
requirements and we will work with the

00:08:44,770 --> 00:08:48,340
manufacturing ecosystem so they can

00:08:47,020 --> 00:08:50,530
build their own version on it

00:08:48,340 --> 00:08:52,870
what is standardized is the connector

00:08:50,530 --> 00:08:58,990
and the mounting holes

00:08:52,870 --> 00:09:01,990
and so you get interoperability then

00:08:58,990 --> 00:09:04,180
picks our payload bus similar concept

00:09:01,990 --> 00:09:06,760
it's in an earlier stage I have no draft

00:09:04,180 --> 00:09:09,040
right now the goal is to create an

00:09:06,760 --> 00:09:13,890
interface that supports most payloads

00:09:09,040 --> 00:09:15,850
and applications so something that is

00:09:13,890 --> 00:09:23,560
specific enough that you can actually

00:09:15,850 --> 00:09:26,050
build it to a mechanical port and clip

00:09:23,560 --> 00:09:30,180
it on or twist it on or whatever it will

00:09:26,050 --> 00:09:32,830
be it should be a tool-less mounting and

00:09:30,180 --> 00:09:34,480
then have a defined connector and a

00:09:32,830 --> 00:09:37,150
defined software interface which is

00:09:34,480 --> 00:09:39,730
almost more important how you can talk

00:09:37,150 --> 00:09:43,150
to whatever is on there and I think

00:09:39,730 --> 00:09:44,440
that's very doable and we have for

00:09:43,150 --> 00:09:47,830
example interest from companies like

00:09:44,440 --> 00:09:51,670
uniq who want to participate there

00:09:47,830 --> 00:09:53,260
lead the way lead by example but I also

00:09:51,670 --> 00:09:56,080
think that it's really important to have

00:09:53,260 --> 00:09:57,640
this because in the ecosystem like ours

00:09:56,080 --> 00:10:00,390
where you have smaller companies working

00:09:57,640 --> 00:10:03,040
together not having that kills everybody

00:10:00,390 --> 00:10:05,110
because you have integration cost again

00:10:03,040 --> 00:10:06,700
and again and again and the industry is

00:10:05,110 --> 00:10:09,340
getting to a point where individual

00:10:06,700 --> 00:10:11,680
companies cannot afford another gimble

00:10:09,340 --> 00:10:14,710
integration another payload integration

00:10:11,680 --> 00:10:16,920
it's it's just delaying everything go

00:10:14,710 --> 00:10:16,920
ahead

00:10:30,550 --> 00:10:39,910
so Glenn from unique research just

00:10:36,220 --> 00:10:42,380
invited anybody to talk to him about

00:10:39,910 --> 00:10:45,110
about this about the standardization

00:10:42,380 --> 00:10:46,760
process we didn't even put the whole

00:10:45,110 --> 00:10:48,470
working group together yet so this is

00:10:46,760 --> 00:10:56,320
the right moment to engage and

00:10:48,470 --> 00:11:00,160
participate now let's quickly talk about

00:10:56,320 --> 00:11:00,160
yes sorry go ahead

00:11:03,910 --> 00:11:10,520
no no it's meant to be sort of we're

00:11:08,240 --> 00:11:11,990
essentially the whole thing weaving

00:11:10,520 --> 00:11:16,850
through what I'm trying to get through

00:11:11,990 --> 00:11:19,460
on this deaf summit is px4 is the thing

00:11:16,850 --> 00:11:21,800
that makes a drone fly and so we're

00:11:19,460 --> 00:11:24,740
taking everything one level up and so

00:11:21,800 --> 00:11:27,470
that connector will also cover actually

00:11:24,740 --> 00:11:27,920
the on-board computer have a connection

00:11:27,470 --> 00:11:32,210
to it

00:11:27,920 --> 00:11:36,410
Ethernet USB maybe both so that in an

00:11:32,210 --> 00:11:37,850
API that's linking to them to MAV SDK so

00:11:36,410 --> 00:11:39,710
that you're ending up with a whole

00:11:37,850 --> 00:11:56,450
system that allows you to get a

00:11:39,710 --> 00:11:58,430
programmable payload go ahead so the

00:11:56,450 --> 00:11:59,780
question was if the autopilot bus and

00:11:58,430 --> 00:12:02,150
the payload BES are overlapping

00:11:59,780 --> 00:12:05,540
so certainly signals from the autopilot

00:12:02,150 --> 00:12:07,850
bus go down to the payload so that in

00:12:05,540 --> 00:12:09,980
cases like typical example is a GPS

00:12:07,850 --> 00:12:13,880
trigger signal or capture signal for our

00:12:09,980 --> 00:12:16,010
Tek time sync that goes from the payload

00:12:13,880 --> 00:12:20,540
bus all the way to the autopilot bus to

00:12:16,010 --> 00:12:23,630
the autopilot but conceptually they're

00:12:20,540 --> 00:12:25,820
separate and this is what I just

00:12:23,630 --> 00:12:27,920
mentioned the motivation to do all this

00:12:25,820 --> 00:12:31,850
is we need seamless communication

00:12:27,920 --> 00:12:34,550
between the flight controller and the

00:12:31,850 --> 00:12:35,210
computer we need that on many different

00:12:34,550 --> 00:12:37,910
levels

00:12:35,210 --> 00:12:41,180
and to enable that we need to move to

00:12:37,910 --> 00:12:43,460
Ethernet and creating a standard

00:12:41,180 --> 00:12:46,520
connector is a great opportunity to put

00:12:43,460 --> 00:12:48,290
Ethernet as a standard feature in all

00:12:46,520 --> 00:12:50,060
the microcontrollers that are currently

00:12:48,290 --> 00:12:52,310
being used for flight controls already

00:12:50,060 --> 00:12:55,580
supported we've worked out that the

00:12:52,310 --> 00:12:58,010
pinout works and so life will hopefully

00:12:55,580 --> 00:12:59,630
become a lot easier because now you

00:12:58,010 --> 00:13:01,760
suddenly don't have that weird

00:12:59,630 --> 00:13:04,660
bottleneck anymore between your flight

00:13:01,760 --> 00:13:04,660
controller and your computer

00:13:15,279 --> 00:13:21,499
so the question is will we support the

00:13:18,589 --> 00:13:25,069
switches yes so the idea is that we will

00:13:21,499 --> 00:13:28,730
recommend standard 100 megabit probably

00:13:25,069 --> 00:13:32,410
gigabit switching equipment maybe even

00:13:28,730 --> 00:13:36,769
circumventing Faiz to have a really

00:13:32,410 --> 00:13:38,689
small simple network topology where you

00:13:36,769 --> 00:13:40,550
have I can think of at least four

00:13:38,689 --> 00:13:43,970
devices flight controller mission

00:13:40,550 --> 00:13:47,929
computer the payload the camera and the

00:13:43,970 --> 00:13:50,300
radio a lot of IP radios are Ethernet

00:13:47,929 --> 00:13:53,779
interface so we already are up to four

00:13:50,300 --> 00:13:56,119
devices so I think going forward we will

00:13:53,779 --> 00:13:59,089
have at least five port maybe eight

00:13:56,119 --> 00:14:01,309
ports which and I think the jury is

00:13:59,089 --> 00:14:05,269
still out on whether that's automotive

00:14:01,309 --> 00:14:08,059
to wire Ethernet whether it's consumer

00:14:05,269 --> 00:14:10,519
normal eight wire or maybe the reduced

00:14:08,059 --> 00:14:11,959
four wire pin out so that is something

00:14:10,519 --> 00:14:13,610
we're figuring out my personal

00:14:11,959 --> 00:14:15,769
prediction is a mix of four and eight

00:14:13,610 --> 00:14:18,949
wire will service in the short term best

00:14:15,769 --> 00:14:24,259
but again this is the start of this

00:14:18,949 --> 00:14:27,160
discussion then preview for the full

00:14:24,259 --> 00:14:30,529
design so we're going to enable a

00:14:27,160 --> 00:14:33,980
complete reference design that has I'm

00:14:30,529 --> 00:14:38,389
aboard autopilot board flight controller

00:14:33,980 --> 00:14:40,369
base board and helping the fragmentation

00:14:38,389 --> 00:14:46,879
that exists right now in the market that

00:14:40,369 --> 00:14:48,589
way if you want the full architecture

00:14:46,879 --> 00:14:50,449
like this is the crazy block diagram

00:14:48,589 --> 00:14:52,670
where everything is out just to show

00:14:50,449 --> 00:14:54,589
it's it's a mature design face and now

00:14:52,670 --> 00:15:00,709
we can have discussions make the changes

00:14:54,589 --> 00:15:03,139
and execute and it will include also the

00:15:00,709 --> 00:15:05,799
mechanical solution to deal with

00:15:03,139 --> 00:15:05,799
vibration

00:15:08,720 --> 00:15:13,430
I have also shown that high level so

00:15:11,180 --> 00:15:19,910
that's that's a draft of the autopilot

00:15:13,430 --> 00:15:22,370
module it's going to be about 28 28 by

00:15:19,910 --> 00:15:26,470
34 millimeters it's not a final design

00:15:22,370 --> 00:15:26,470
but to give you an idea of the size

00:15:26,680 --> 00:15:34,399
baseboard and then something that I

00:15:32,300 --> 00:15:36,920
think also needs to be part of it we

00:15:34,399 --> 00:15:39,589
need better computer vision developing

00:15:36,920 --> 00:15:43,579
development platforms that can also be

00:15:39,589 --> 00:15:48,259
used to reproduce results from whatever

00:15:43,579 --> 00:15:50,930
the US Australia China Switzerland and

00:15:48,259 --> 00:15:53,029
you can load a complete software load

00:15:50,930 --> 00:15:55,069
and you can verify the result and you

00:15:53,029 --> 00:15:57,319
can actually collaborate right now it's

00:15:55,069 --> 00:15:59,600
like in computer vision it's like

00:15:57,319 --> 00:16:01,250
everybody has their own pixhawk design

00:15:59,600 --> 00:16:03,529
and it's trying to argue about the

00:16:01,250 --> 00:16:08,230
sensor filtering pipeline that doesn't

00:16:03,529 --> 00:16:11,300
work and so we need one or two or three

00:16:08,230 --> 00:16:14,360
canonical reference vehicles that are

00:16:11,300 --> 00:16:16,399
exactly the same and that allowed this

00:16:14,360 --> 00:16:19,790
global community to collaborate on

00:16:16,399 --> 00:16:21,560
computer vision and also I find

00:16:19,790 --> 00:16:24,769
generally computer vision people are not

00:16:21,560 --> 00:16:27,980
particularly good with hardware so I

00:16:24,769 --> 00:16:30,829
think it will actually help us a lot to

00:16:27,980 --> 00:16:33,829
engage with more vision developers by

00:16:30,829 --> 00:16:39,680
making it less do-it-yourself soldiering

00:16:33,829 --> 00:16:42,050
and more about software yeah you've seen

00:16:39,680 --> 00:16:44,689
that already and I think we're just in

00:16:42,050 --> 00:16:46,899
time any questions right now in there so

00:16:44,689 --> 00:16:46,899
far

00:16:53,370 --> 00:16:58,500
so I have a question about the last

00:16:56,500 --> 00:17:00,760
slide about the reference design I

00:16:58,500 --> 00:17:02,830
you're mentioning the yeah you're

00:17:00,760 --> 00:17:06,339
mentioning an up core here specifically

00:17:02,830 --> 00:17:08,350
but what about other hardware options

00:17:06,339 --> 00:17:10,660
like the Qualcomm that's been around for

00:17:08,350 --> 00:17:14,680
some time is it not an option like what

00:17:10,660 --> 00:17:16,570
is the view on that so I think I'm open

00:17:14,680 --> 00:17:19,750
to anything and I think it would be

00:17:16,570 --> 00:17:22,270
healthy if we had an Intel an arm and an

00:17:19,750 --> 00:17:25,900
Nvidia option so I'm not discriminative

00:17:22,270 --> 00:17:27,760
what I find though is that the Intel

00:17:25,900 --> 00:17:34,030
platforms have the best memory bandwidth

00:17:27,760 --> 00:17:36,250
and the most people buy into the full

00:17:34,030 --> 00:17:37,990
processing potential of Nvidia but then

00:17:36,250 --> 00:17:40,720
actually don't go ahead and leverage it

00:17:37,990 --> 00:17:43,990
I'd love to change that and maybe as a

00:17:40,720 --> 00:17:46,030
community we can but I think we have to

00:17:43,990 --> 00:17:51,280
be honest to ourselves which platforms

00:17:46,030 --> 00:17:53,820
actually do work anyone else all the way

00:17:51,280 --> 00:17:53,820
to top

00:18:16,880 --> 00:18:22,260
so we've we've done a failure mode and

00:18:19,290 --> 00:18:24,809
effect analysis that I don't think we

00:18:22,260 --> 00:18:28,679
ever got polished and published but I

00:18:24,809 --> 00:18:30,690
think we would be happy to and that has

00:18:28,679 --> 00:18:33,330
driven some of the considerations here

00:18:30,690 --> 00:18:35,400
to essentially say well if you argue

00:18:33,330 --> 00:18:37,440
that you have for example sensors that

00:18:35,400 --> 00:18:38,970
can do voting between each other and

00:18:37,440 --> 00:18:41,490
they're all on the same power rail it's

00:18:38,970 --> 00:18:43,710
kind of obvious that it's not a great

00:18:41,490 --> 00:18:54,150
idea to have a single point of failure

00:18:43,710 --> 00:18:56,520
there yep yes I mean that's the whole

00:18:54,150 --> 00:18:59,309
idea that everybody now comes in and

00:18:56,520 --> 00:19:01,080
it's like okay here's an example and now

00:18:59,309 --> 00:19:03,330
we can have an informed discussion and

00:19:01,080 --> 00:19:05,730
challenge all the design questions and

00:19:03,330 --> 00:19:07,620
was concerned that if I present like hey

00:19:05,730 --> 00:19:12,480
yeah we should standardize this here

00:19:07,620 --> 00:19:14,280
then there is no concrete way forward so

00:19:12,480 --> 00:19:16,110
I think we have that now and yes it's

00:19:14,280 --> 00:19:19,070
it's important we get all that scrutiny

00:19:16,110 --> 00:19:19,070
on the whole design

00:19:36,640 --> 00:19:41,470
now we're certainly not going to the

00:19:38,900 --> 00:19:45,920
question was what about the standard

00:19:41,470 --> 00:19:48,590
Ethernet connector so now I think that's

00:19:45,920 --> 00:19:51,080
too big and and doesn't work we've

00:19:48,590 --> 00:19:55,880
successfully experimented with four wire

00:19:51,080 --> 00:19:58,490
buses with jst gh 100 megabit which is

00:19:55,880 --> 00:20:01,100
in the ethernet back for unshielded use

00:19:58,490 --> 00:20:03,140
but I'm open to other suggestions there

00:20:01,100 --> 00:20:03,980
is an embedded rugged smaller connector

00:20:03,140 --> 00:20:05,840
from hi rose

00:20:03,980 --> 00:20:07,940
but those are exactly the kinds of

00:20:05,840 --> 00:20:09,290
discussions I'd like to have we have a

00:20:07,940 --> 00:20:09,650
way forward but there might be better

00:20:09,290 --> 00:20:28,910
ones

00:20:09,650 --> 00:20:31,820
yeah so then what about noise internet

00:20:28,910 --> 00:20:34,730
yeah so noise on Ethernet and noise on

00:20:31,820 --> 00:20:38,030
USB 2 and USB 3 as a problem and that's

00:20:34,730 --> 00:20:43,520
why I think we almost need a custom

00:20:38,030 --> 00:20:46,040
design for drones and it's not bearable

00:20:43,520 --> 00:20:49,250
for the industry to for every company to

00:20:46,040 --> 00:20:50,930
learn that and it's also not good for

00:20:49,250 --> 00:20:53,570
the reputation of the industry and or

00:20:50,930 --> 00:20:55,790
px4 because people slap this together

00:20:53,570 --> 00:21:00,020
and it doesn't fly well and it's like oh

00:20:55,790 --> 00:21:02,780
the flight controller failed and so yeah

00:21:00,020 --> 00:21:05,690
it's I think it will end up being a very

00:21:02,780 --> 00:21:09,470
particular built of how we exactly do it

00:21:05,690 --> 00:21:11,660
so that we don't have the interference

00:21:09,470 --> 00:21:13,780
that usually comes with high frequency

00:21:11,660 --> 00:21:13,780
switching

00:21:38,510 --> 00:21:43,920
so the question was like how do you

00:21:41,820 --> 00:21:46,950
actually load software onto this and I

00:21:43,920 --> 00:21:48,960
think that will be initially still very

00:21:46,950 --> 00:21:50,490
involved in hands-on like in the early

00:21:48,960 --> 00:21:53,370
days of flight control but at least you

00:21:50,490 --> 00:21:56,940
now have standard hardware I do believe

00:21:53,370 --> 00:21:59,430
and and like full disclosure that is

00:21:56,940 --> 00:22:00,990
like how a Terran has been built I do

00:21:59,430 --> 00:22:03,360
believe that in the end of the day you

00:22:00,990 --> 00:22:04,830
need a software distribution for these

00:22:03,360 --> 00:22:07,260
vehicles the same way as you need a

00:22:04,830 --> 00:22:09,360
Linux distribution and that is a problem

00:22:07,260 --> 00:22:11,310
that that needs to be solved alright

00:22:09,360 --> 00:22:13,950
that was last question sorry we have to

00:22:11,310 --> 00:22:15,150
move on sumit please find dr. Mayer

00:22:13,950 --> 00:22:21,060
after the next session and the coffee

00:22:15,150 --> 00:22:22,950
break before well they set up I would

00:22:21,060 --> 00:22:24,420
like to ask the audience is there anyone

00:22:22,950 --> 00:22:27,510
interest here in participating in a

00:22:24,420 --> 00:22:31,740
working group of payload that Lawrence

00:22:27,510 --> 00:22:33,840
mentioned busy one two three four

00:22:31,740 --> 00:22:35,310
okay can you look for me after this

00:22:33,840 --> 00:22:37,620
session so we can write their number and

00:22:35,310 --> 00:22:42,260
we can get something organized thank you

00:22:37,620 --> 00:22:42,260
so next up we have thank you learns

00:22:42,600 --> 00:22:47,369
[Applause]

00:22:52,269 --> 00:22:54,330

YouTube URL: https://www.youtube.com/watch?v=oG4YNHO8Idw


