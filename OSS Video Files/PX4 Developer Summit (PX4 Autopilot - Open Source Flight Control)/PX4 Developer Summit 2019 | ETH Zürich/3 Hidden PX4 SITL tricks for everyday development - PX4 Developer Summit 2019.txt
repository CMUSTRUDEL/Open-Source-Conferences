Title: 3 Hidden PX4 SITL tricks for everyday development - PX4 Developer Summit 2019
Publication date: 2019-07-03
Playlist: PX4 Developer Summit 2019 | ETH ZÃ¼rich
Description: 
	Julian Oes
Senior Software Engineer, Auterion
PX4 Maintainer

This short presentation covers three somewhat hidden tricks for development in PX4 SITL that you might not have come across. It will consist of some background information as well as live demos of:

Bash scripting and SITL, how does it work, and what can you do.
Speed up, slow down, or even pause the simulation using lockstep.
How to debug and profile SITL using GDB, valgrind, and callgrind.
Captions: 
	00:00:13,280 --> 00:00:17,270
next up is julius and he's going to

00:00:15,440 --> 00:00:20,360
present the three hidden tricks for px4

00:00:17,270 --> 00:00:25,210
settle julian is a senior software year

00:00:20,360 --> 00:00:25,210
for author and thank you thank you yeah

00:00:26,940 --> 00:00:31,130
[Applause]

00:00:28,449 --> 00:00:36,020
thank you yeah so I'm generally working

00:00:31,130 --> 00:00:38,379
on on px4 and nav SDK and today I just

00:00:36,020 --> 00:00:40,850
have like a hands-on session that

00:00:38,379 --> 00:00:43,879
hopefully and everyone here in the room

00:00:40,850 --> 00:00:46,370
can take something away from sort of

00:00:43,879 --> 00:00:49,100
uncovering some hidden things that are

00:00:46,370 --> 00:00:53,809
actually the Deaf guides about Sydal but

00:00:49,100 --> 00:00:56,989
might not be might not be that you might

00:00:53,809 --> 00:01:01,390
not be familiar with I'm gonna start off

00:00:56,989 --> 00:01:05,690
with a picture of me in Switzerland

00:01:01,390 --> 00:01:08,210
point being I like the outdoors I like

00:01:05,690 --> 00:01:11,170
flying drones as well but at work every

00:01:08,210 --> 00:01:13,640
now and then I also need to sit down and

00:01:11,170 --> 00:01:15,470
because I'm lazy and I want to sit down

00:01:13,640 --> 00:01:16,569
and I don't want to go outside and of

00:01:15,470 --> 00:01:18,860
course there is the reason that

00:01:16,569 --> 00:01:21,259
development speed is faster if you can

00:01:18,860 --> 00:01:23,869
do it in simulation right there on your

00:01:21,259 --> 00:01:30,259
machine and and safer as well because

00:01:23,869 --> 00:01:33,229
you can crash many times before I go

00:01:30,259 --> 00:01:35,000
into the saddle tricks I think most of

00:01:33,229 --> 00:01:38,420
you are probably familiar with sidled

00:01:35,000 --> 00:01:40,550
just wanted to take small step back and

00:01:38,420 --> 00:01:43,099
explain what it is so software in the

00:01:40,550 --> 00:01:45,289
loop simulation you have everything

00:01:43,099 --> 00:01:47,030
running on your local computer

00:01:45,289 --> 00:01:50,959
the simulator on one side that's

00:01:47,030 --> 00:01:54,560
generally jameth sim or gazebo for sort

00:01:50,959 --> 00:01:57,590
of the common px4 case which publishes

00:01:54,560 --> 00:02:00,950
which simulates the world and publishes

00:01:57,590 --> 00:02:04,580
sensor values essentially sense that 2px

00:02:00,950 --> 00:02:07,000
4px for does all of its calculations and

00:02:04,580 --> 00:02:09,709
what it wants to do in that world and

00:02:07,000 --> 00:02:12,709
the output at the end is actuator

00:02:09,709 --> 00:02:15,470
outputs so motors and servos and that

00:02:12,709 --> 00:02:18,770
gets fed back into the simulator that

00:02:15,470 --> 00:02:24,010
then does sort of the physics does

00:02:18,770 --> 00:02:24,010
another step so now

00:02:24,140 --> 00:02:31,390
that's sort of the three tricks that I

00:02:27,290 --> 00:02:35,090
want to get into before I go into those

00:02:31,390 --> 00:02:40,100
who in the room has heard of that lock

00:02:35,090 --> 00:02:47,120
step thing force it okay what about

00:02:40,100 --> 00:02:50,480
shell scripting for sale Yeah Yeah what

00:02:47,120 --> 00:02:55,660
about debugging GDB GDB well grind or

00:02:50,480 --> 00:03:01,250
call grind okay cool thanks

00:02:55,660 --> 00:03:03,020
let's go lock step first so common

00:03:01,250 --> 00:03:06,830
problems we've seen with Sidel in the

00:03:03,020 --> 00:03:09,770
last years were sort of the cpu load

00:03:06,830 --> 00:03:13,010
being too high let's say you also do to

00:03:09,770 --> 00:03:15,680
some physics simulation not you do some

00:03:13,010 --> 00:03:18,980
3d simulation next to it or you have

00:03:15,680 --> 00:03:22,310
your browser open and it does some

00:03:18,980 --> 00:03:24,110
things and suddenly you have either px4

00:03:22,310 --> 00:03:26,180
missing samples or you have gazebo

00:03:24,110 --> 00:03:29,959
missing samples and they're sort of out

00:03:26,180 --> 00:03:32,120
of sync or struggle to keep up and yeah

00:03:29,959 --> 00:03:35,269
a common thing that you see is this yeah

00:03:32,120 --> 00:03:37,130
time out the sensor value missed sort of

00:03:35,269 --> 00:03:40,100
cryptic but what it usually meant is

00:03:37,130 --> 00:03:44,570
something can't keep up and you're

00:03:40,100 --> 00:03:49,370
losing samples and then if those samples

00:03:44,570 --> 00:03:50,900
sort of go on over too long then you can

00:03:49,370 --> 00:03:52,850
get like sort of like an interruption

00:03:50,900 --> 00:03:59,390
and you can lead to a crash if you're

00:03:52,850 --> 00:04:01,310
unlucky so how could we improve that so

00:03:59,390 --> 00:04:03,620
how does lockstep work basically the

00:04:01,310 --> 00:04:06,260
simulator and pics for now run in

00:04:03,620 --> 00:04:09,860
lockstep and what that means is that the

00:04:06,260 --> 00:04:11,959
simulator sets the time sorry sense

00:04:09,860 --> 00:04:15,980
sensor values including a timestamp and

00:04:11,959 --> 00:04:18,380
that timestamp then drives px4 so if no

00:04:15,980 --> 00:04:20,510
new timestamp is coming x4 doesn't do

00:04:18,380 --> 00:04:22,729
anything it basically is stuck waiting

00:04:20,510 --> 00:04:26,210
on the time at progressing

00:04:22,729 --> 00:04:30,050
once the x4 sends a new actuator output

00:04:26,210 --> 00:04:31,760
back to for instance gazebo and then the

00:04:30,050 --> 00:04:34,820
simulator does another step

00:04:31,760 --> 00:04:36,940
so they both wait on each other sort of

00:04:34,820 --> 00:04:42,760
one one sample goes goes

00:04:36,940 --> 00:04:44,680
around why should you use it so and I'm

00:04:42,760 --> 00:04:46,810
saying that because it's in 1:9 and I

00:04:44,680 --> 00:04:49,210
really think it's important so I'm

00:04:46,810 --> 00:04:51,730
asking the question why should I use a

00:04:49,210 --> 00:04:54,640
lock step and and so as already

00:04:51,730 --> 00:04:56,320
mentioned CPU usage is too high let

00:04:54,640 --> 00:04:58,150
lockstep you fine you can run this on

00:04:56,320 --> 00:04:59,460
some old computer not sure about that

00:04:58,150 --> 00:05:04,420
one

00:04:59,460 --> 00:05:06,340
you can now pause it might have worked

00:05:04,420 --> 00:05:08,710
before but right now you're sure that

00:05:06,340 --> 00:05:11,680
nothing will advance while you inspect

00:05:08,710 --> 00:05:15,120
what's going on while you use value do

00:05:11,680 --> 00:05:18,490
you keep poking and what we figured is

00:05:15,120 --> 00:05:20,230
eyes are abstracting the time there is a

00:05:18,490 --> 00:05:22,600
bonus to that you can now run the

00:05:20,230 --> 00:05:31,320
simulation faster or slower than real

00:05:22,600 --> 00:05:31,320
time there we go

00:05:31,759 --> 00:05:38,789
okay so how to pause that one's easy and

00:05:34,439 --> 00:05:41,099
gazebo you got a button and an EMF seem

00:05:38,789 --> 00:05:43,189
you can press P and the stops and P

00:05:41,099 --> 00:05:45,629
again and off you go

00:05:43,189 --> 00:05:47,909
how can you speed it up this is an

00:05:45,629 --> 00:05:50,579
environment variable so it's called px4

00:05:47,909 --> 00:05:54,859
sim speed factor so a factor of 10 means

00:05:50,579 --> 00:05:57,569
it's going to run up to 10x the time

00:05:54,859 --> 00:06:00,329
depending on your machine so often times

00:05:57,569 --> 00:06:03,509
I just put in 20 and then my desktop my

00:06:00,329 --> 00:06:07,409
- 15 X my laptop here might do for X and

00:06:03,509 --> 00:06:09,749
then you do your your normal make now

00:06:07,409 --> 00:06:13,649
Daniel has been working on sort of

00:06:09,749 --> 00:06:17,579
better vs code integration and in there

00:06:13,649 --> 00:06:20,069
you can do the same thing we just got

00:06:17,579 --> 00:06:22,439
emerged recently and it's this the same

00:06:20,069 --> 00:06:28,379
environment variable basically that you

00:06:22,439 --> 00:06:35,779
set in this task store JSON file so see

00:06:28,379 --> 00:06:39,539
if we can demo is we've got qgc with the

00:06:35,779 --> 00:06:45,959
mission loaded now I'm just going to set

00:06:39,539 --> 00:06:50,069
the speed to 20 as I said go as fast as

00:06:45,959 --> 00:06:52,729
possible and we're gonna use standard

00:06:50,069 --> 00:06:52,729
Whittle

00:07:01,540 --> 00:07:10,560
[Music]

00:07:03,349 --> 00:07:17,520
where's my upload button yes start that

00:07:10,560 --> 00:07:18,990
mission zoom out a bit here so we're

00:07:17,520 --> 00:07:20,940
trying to fly from ETH where we are

00:07:18,990 --> 00:07:25,650
right now over to the Oteri own

00:07:20,940 --> 00:07:29,430
headquarters along limit the river and

00:07:25,650 --> 00:07:31,590
so this is the standard veto and it's

00:07:29,430 --> 00:07:33,659
going at 16 meters per second but then

00:07:31,590 --> 00:07:39,620
if we look at the real time factor in

00:07:33,659 --> 00:07:43,620
gazebo right now it's 3 yeah 3 to 4 so

00:07:39,620 --> 00:07:45,569
what we can get on this machine as I

00:07:43,620 --> 00:07:47,130
said up to about 15 on the desktop I'm

00:07:45,569 --> 00:07:50,780
sure there is room for improvement if

00:07:47,130 --> 00:07:53,039
you find anything let me know

00:07:50,780 --> 00:07:59,039
the model still there it's just our

00:07:53,039 --> 00:08:01,610
cameras not yes okay over there I'm just

00:07:59,039 --> 00:08:01,610
going to descend

00:08:08,680 --> 00:08:19,820
right and we just covered I just wanted

00:08:14,060 --> 00:08:21,110
to check how far that was never mind I

00:08:19,820 --> 00:08:27,050
believe it was about three kilometers

00:08:21,110 --> 00:08:30,560
that we did in this short turn so number

00:08:27,050 --> 00:08:33,080
two shell scripting so you're probably

00:08:30,560 --> 00:08:37,490
familiar with the nutshell and sort of

00:08:33,080 --> 00:08:39,039
shell scripting and in it start up on on

00:08:37,490 --> 00:08:41,419
knotek's

00:08:39,039 --> 00:08:44,060
so it's a great way to sort of interact

00:08:41,419 --> 00:08:46,040
with the system to run your custom

00:08:44,060 --> 00:08:48,470
command to figure out what can the

00:08:46,040 --> 00:08:51,740
command even do or to use it at as

00:08:48,470 --> 00:08:56,839
debugging using top three these sorts of

00:08:51,740 --> 00:08:59,080
tools and turns out we actually have not

00:08:56,839 --> 00:09:03,230
quite the same but a very very similar

00:08:59,080 --> 00:09:07,100
system on force little or four four

00:09:03,230 --> 00:09:14,300
built on POSIX and all you have to do is

00:09:07,100 --> 00:09:17,510
add the bin folder in your of your build

00:09:14,300 --> 00:09:19,190
directory to your path and if you look

00:09:17,510 --> 00:09:21,490
at the LS output you can see that there

00:09:19,190 --> 00:09:25,310
is a whole bunch of aliases

00:09:21,490 --> 00:09:31,580
sorry symlinks to px4 with those names

00:09:25,310 --> 00:09:35,630
and so that mimics using using the px4

00:09:31,580 --> 00:09:38,230
modules as sort of executables when

00:09:35,630 --> 00:09:42,620
actually then they then get run against

00:09:38,230 --> 00:09:47,209
the px4 actual process and just spawning

00:09:42,620 --> 00:09:51,529
a thread looks like I have to demo this

00:09:47,209 --> 00:09:54,680
so that's not the one let's go here okay

00:09:51,529 --> 00:09:59,420
so what I want to show is I'm just going

00:09:54,680 --> 00:10:01,690
to run maths embarrass okay that's the

00:09:59,420 --> 00:10:01,690
Roman

00:10:02,130 --> 00:10:20,079
Jamison and now I want to interact in

00:10:13,149 --> 00:10:21,579
the same way as in the nutshell just

00:10:20,079 --> 00:10:25,120
need to go into my firmware their

00:10:21,579 --> 00:10:31,870
directory and I need to add the path as

00:10:25,120 --> 00:10:37,240
I showed before so export path down and

00:10:31,870 --> 00:10:39,910
I have now if all goes well let me do

00:10:37,240 --> 00:10:53,610
that without the speed-up so it's a bit

00:10:39,910 --> 00:10:56,860
easier to see okay

00:10:53,610 --> 00:11:01,019
commander takeoff

00:10:56,860 --> 00:11:01,019
oh I was too early

00:11:05,660 --> 00:11:15,160
[Music]

00:11:07,900 --> 00:11:16,710
yeah I've seen that one before there

00:11:15,160 --> 00:11:24,430
again

00:11:16,710 --> 00:11:27,279
cool and just to show them posting from

00:11:24,430 --> 00:11:30,010
before so I'm just go cause I'm cooking

00:11:27,279 --> 00:11:31,630
again and now I want to do some

00:11:30,010 --> 00:11:33,790
inspections that you're gonna do Europe

00:11:31,630 --> 00:11:37,000
top so in this case px for Europe top

00:11:33,790 --> 00:11:40,779
and I nicely in another terminal I can

00:11:37,000 --> 00:11:43,480
sort of look at this diagnostic and you

00:11:40,779 --> 00:11:46,960
can do the same thing again just need to

00:11:43,480 --> 00:11:49,750
add the pulse again and I can do

00:11:46,960 --> 00:11:54,220
something like kx4 listener let's look

00:11:49,750 --> 00:11:56,950
at sensor combined a thousand times and

00:11:54,220 --> 00:11:58,870
I get the listener right in some

00:11:56,950 --> 00:12:02,020
terminal and I can leave that running I

00:11:58,870 --> 00:12:07,589
can grep in there I can sort of have

00:12:02,020 --> 00:12:07,589
more things to to debug what's going on

00:12:08,970 --> 00:12:16,360
so that's shell scripting you've seen

00:12:12,640 --> 00:12:19,120
that um third one debugging with gdb

00:12:16,360 --> 00:12:21,940
valgrind and Cole grant I'm not going to

00:12:19,120 --> 00:12:24,820
cover like how to do gdb or grant or

00:12:21,940 --> 00:12:27,330
cold I'm just going to sort of quickly

00:12:24,820 --> 00:12:33,040
say how that's actually quite easily

00:12:27,330 --> 00:12:36,339
doable with px4 all you have to do is do

00:12:33,040 --> 00:12:42,089
underscore the model so iris or plain

00:12:36,339 --> 00:12:44,500
and gdb but that's as easy as it is and

00:12:42,089 --> 00:12:47,200
thanks to Danielle's recent work with

00:12:44,500 --> 00:12:56,529
Mia's code it's even possible out of out

00:12:47,200 --> 00:13:02,920
of Mia's code no no neither

00:12:56,529 --> 00:13:04,900
here's BS code there will be

00:13:02,920 --> 00:13:09,940
documentation on the vs code usage

00:13:04,900 --> 00:13:12,040
that's that's work in progress just

00:13:09,940 --> 00:13:13,779
going to make sure that my targets down

00:13:12,040 --> 00:13:17,050
here are correct then I'm clicking on

00:13:13,779 --> 00:13:21,990
the debug symbol here and all I have to

00:13:17,050 --> 00:13:21,990
do is press play and hope for the best

00:13:25,660 --> 00:13:33,860
okay so that's as usual so I can do

00:13:31,040 --> 00:13:36,589
commander takeoff no I can't that's

00:13:33,860 --> 00:13:37,970
usual anyway while we're waiting I can

00:13:36,589 --> 00:13:40,399
show you here that all the threats are

00:13:37,970 --> 00:13:47,810
running some of them are nicely named

00:13:40,399 --> 00:13:50,600
and I can press pause and I can go into

00:13:47,810 --> 00:13:53,079
sensors and I'm can check what's

00:13:50,600 --> 00:13:59,149
actually going on over there

00:13:53,079 --> 00:14:00,920
ignore them so in this case it's waiting

00:13:59,149 --> 00:14:03,230
on the semaphore it's waiting because

00:14:00,920 --> 00:14:09,050
lockstep gives it the next time stamp

00:14:03,230 --> 00:14:10,910
and so many threats are tend to be

00:14:09,050 --> 00:14:13,699
waiting on the next time so anyway and

00:14:10,910 --> 00:14:15,500
that and just play press play and you've

00:14:13,699 --> 00:14:19,279
seen that also the local variables were

00:14:15,500 --> 00:14:24,620
shown just how you wouldn't expect it in

00:14:19,279 --> 00:14:29,000
an ID breakpoints should work as well

00:14:24,620 --> 00:14:31,399
let me try to demo that so commander

00:14:29,000 --> 00:14:37,220
demo boom and we landed right in here

00:14:31,399 --> 00:14:45,829
where I said a breakpoint so welcome to

00:14:37,220 --> 00:14:49,699
the summit yep again that's what

00:14:45,829 --> 00:14:52,610
universe a memory detection memory error

00:14:49,699 --> 00:14:54,439
detection using vulgar and so well

00:14:52,610 --> 00:14:57,170
ground is a great tool to find

00:14:54,439 --> 00:14:59,899
uninitialized memory especially at the

00:14:57,170 --> 00:15:05,059
point when it's used find memory leaks

00:14:59,899 --> 00:15:06,380
and and and much it's much more powerful

00:15:05,059 --> 00:15:10,189
than that but that's just sort of the

00:15:06,380 --> 00:15:14,029
basics it can cover I suggest you look

00:15:10,189 --> 00:15:17,660
at the docks and resort to it if you

00:15:14,029 --> 00:15:22,009
need it again the usage is actually this

00:15:17,660 --> 00:15:25,519
big for is easy just your model

00:15:22,009 --> 00:15:30,139
underscore valve and that's it and what

00:15:25,519 --> 00:15:34,460
you get is a lot of a lot of verbose

00:15:30,139 --> 00:15:37,340
output like this and all this tell

00:15:34,460 --> 00:15:39,230
you is that some socket call so you're

00:15:37,340 --> 00:15:40,220
using data in a socket call that you're

00:15:39,230 --> 00:15:42,680
sending somewhere

00:15:40,220 --> 00:15:44,600
for instance points to uninitialized

00:15:42,680 --> 00:15:46,730
bytes and then it gives you all of the

00:15:44,600 --> 00:15:49,460
information that might help you in

00:15:46,730 --> 00:15:52,460
finding where this uninitialized value

00:15:49,460 --> 00:15:56,390
was initially created in this case some

00:15:52,460 --> 00:16:01,130
EK function just as an example what you

00:15:56,390 --> 00:16:04,700
might expect from well current profiling

00:16:01,130 --> 00:16:08,420
using coal ground coal ground is a tool

00:16:04,700 --> 00:16:11,180
on top of battle ground and it gives you

00:16:08,420 --> 00:16:13,700
profiling so function function call

00:16:11,180 --> 00:16:17,560
graphs function call counts time spent

00:16:13,700 --> 00:16:17,560
in the functions and much much more

00:16:18,070 --> 00:16:24,200
so so whatever you might need to profile

00:16:21,740 --> 00:16:26,900
and what's going on and so you can in my

00:16:24,200 --> 00:16:28,820
opinion do a lot of profiling before

00:16:26,900 --> 00:16:29,800
having to go onto the target happen to

00:16:28,820 --> 00:16:35,420
go onto the pixhawk

00:16:29,800 --> 00:16:38,240
and figure it out there what happens is

00:16:35,420 --> 00:16:41,660
that you get a dump a coal grant dot out

00:16:38,240 --> 00:16:45,200
file at the end of the simulation and

00:16:41,660 --> 00:16:48,280
you can then use or inspect that data in

00:16:45,200 --> 00:16:52,270
a tool like k cash grant is what i like

00:16:48,280 --> 00:16:56,150
if we zoom in on the picture here for

00:16:52,270 --> 00:16:58,940
instance that's just a quick little run

00:16:56,150 --> 00:17:03,080
that i did and i figured more or less

00:16:58,940 --> 00:17:06,560
that EKF is about using 20% of the cpu

00:17:03,080 --> 00:17:09,680
time and without further inspecting that

00:17:06,560 --> 00:17:11,720
but it seems about in it seems about in

00:17:09,680 --> 00:17:13,220
the order that we would expect and then

00:17:11,720 --> 00:17:17,020
you can sort of sue mean and all of

00:17:13,220 --> 00:17:24,530
these functions looking for whatever

00:17:17,020 --> 00:17:29,260
information we you need so okay what now

00:17:24,530 --> 00:17:31,670
I hope I could give you some ideas some

00:17:29,260 --> 00:17:33,710
tools in the back of your mind the next

00:17:31,670 --> 00:17:37,250
time when you and you debugging

00:17:33,710 --> 00:17:39,230
something you might resort to and it's

00:17:37,250 --> 00:17:43,340
all in the def guide except the vs code

00:17:39,230 --> 00:17:45,440
that's that's ramping up so just now you

00:17:43,340 --> 00:17:49,660
have two keywords look for that and I'm

00:17:45,440 --> 00:17:49,660
sure you can find something helpful

00:17:49,720 --> 00:17:56,430
and yeah thank you for your attention

00:17:52,270 --> 00:17:56,430
[Applause]

00:17:58,210 --> 00:18:09,850
Wow who knew the bogan could be so fun

00:18:00,789 --> 00:18:12,340
any questions for Julian yep first of

00:18:09,850 --> 00:18:18,490
all I want your best prompt how can I

00:18:12,340 --> 00:18:29,129
get your best prompt all right oh my

00:18:18,490 --> 00:18:29,129
satchel okay yeah okay thanks it

00:18:29,610 --> 00:18:38,679
apparently significant changes between

00:18:31,980 --> 00:18:41,110
Peaks for 1.8 and 1.9 cito setup can you

00:18:38,679 --> 00:18:42,940
maybe elaborate what what changes were

00:18:41,110 --> 00:18:46,240
because everything on my site everything

00:18:42,940 --> 00:18:52,299
broke and I don't use gazebo we have our

00:18:46,240 --> 00:18:55,929
own so first of all the transport

00:18:52,299 --> 00:18:57,610
changed from UDP to TCP and it actually

00:18:55,929 --> 00:19:00,100
expects it doesn't bring participe

00:18:57,610 --> 00:19:01,480
server it expects it says listening on

00:19:00,100 --> 00:19:03,610
which TCP port but that actually it's

00:19:01,480 --> 00:19:06,490
talking to it port and when it's

00:19:03,610 --> 00:19:09,700
complains with after that problem was

00:19:06,490 --> 00:19:12,580
solved it complains with where sensor

00:19:09,700 --> 00:19:17,619
values are stale even though it does

00:19:12,580 --> 00:19:20,049
receive them so yeah I probably can't

00:19:17,619 --> 00:19:22,419
give you the solutions now for all the

00:19:20,049 --> 00:19:26,470
things that changed and what I can see

00:19:22,419 --> 00:19:29,110
say yes we went from UDP to TCP because

00:19:26,470 --> 00:19:31,179
with UDP potentially if you run the

00:19:29,110 --> 00:19:34,299
simulation runs Island and takes 4 on

00:19:31,179 --> 00:19:35,830
another host you could lose on the on

00:19:34,299 --> 00:19:39,700
the networking you could lose packets so

00:19:35,830 --> 00:19:41,289
we had to add TCP now if that broke your

00:19:39,700 --> 00:19:44,820
simulation setup which might be

00:19:41,289 --> 00:19:48,850
different UDP is still an option you can

00:19:44,820 --> 00:19:51,249
you can we didn't delete UDP so to say

00:19:48,850 --> 00:19:53,080
so you can with some setting options go

00:19:51,249 --> 00:19:57,249
back to Europe II you can also go back

00:19:53,080 --> 00:20:04,600
to non lockstep it is it will only two

00:19:57,249 --> 00:20:07,720
major things were changed a log step and

00:20:04,600 --> 00:20:09,090
TCP is with only two major changes to

00:20:07,720 --> 00:20:13,720
your

00:20:09,090 --> 00:20:15,850
there was also changes to the shell

00:20:13,720 --> 00:20:17,679
implementation so how those things talk

00:20:15,850 --> 00:20:19,750
to each other and there was many more

00:20:17,679 --> 00:20:23,140
changes that I probably not aware of

00:20:19,750 --> 00:20:26,740
right now so and look at the changelog

00:20:23,140 --> 00:20:29,200
and the diff and approached me for

00:20:26,740 --> 00:20:32,620
anything that lockstep that you're stuck

00:20:29,200 --> 00:20:34,240
with I'd like to all of you that there

00:20:32,620 --> 00:20:36,580
have been several things coming up and

00:20:34,240 --> 00:20:38,799
every attack every now and then I my

00:20:36,580 --> 00:20:42,700
answer was you can try without lockstep

00:20:38,799 --> 00:20:45,190
sort of go to the previous behavior or

00:20:42,700 --> 00:20:47,740
you can implement a new thing but it

00:20:45,190 --> 00:20:50,200
takes some you need to make sure to

00:20:47,740 --> 00:20:55,140
adhere to to the lock stepping otherwise

00:20:50,200 --> 00:20:59,490
you will just stole any more questions

00:20:55,140 --> 00:20:59,490
no thank you for your time

00:20:59,890 --> 00:21:04,529

YouTube URL: https://www.youtube.com/watch?v=1Bs98kOwuK4


