Title: The elusive quest to measure developer productivity - GitHub Universe 2019
Publication date: 2019-12-13
Playlist: GitHub Universe 2019 - GitHub Product Updates
Description: 
	Presented by Abi Noda, Senior Product Manager at GitHub

A lot of people try to measure developer productivity. But is it actually possible? Abi has spent the past four years figuring out which metrics work and how they can be implemented in teams. In this talk, heâ€™ll share lessons from his journey and a few metrics that can help your team today.

About GitHub Universe:
GitHub Universe is a two-day conference dedicated to the creativity and curiosity of the largest software community in the world. Sessions cover topics from team culture to open source software across industries and technologies.

For more information on GitHub Universe, check the website:
https://githubuniverse.com
Captions: 
	00:00:00,680 --> 00:00:18,929
[Music]

00:00:19,289 --> 00:00:30,699
so from years ago it's the CEO for a

00:00:25,840 --> 00:00:32,980
company and customers were happy things

00:00:30,699 --> 00:00:38,410
are going pretty well I felt like I was

00:00:32,980 --> 00:00:41,850
doing a good job he recruited and hired

00:00:38,410 --> 00:00:45,300
some great people and the team was happy

00:00:41,850 --> 00:00:47,949
we had good workflows we was in github

00:00:45,300 --> 00:00:51,129
good pipelines and so our process felt

00:00:47,949 --> 00:00:53,440
efficient and we had continual

00:00:51,129 --> 00:00:55,539
one-on-ones and retros so people were

00:00:53,440 --> 00:00:57,420
constantly getting feedback on how they

00:00:55,539 --> 00:01:02,399
could improve

00:00:57,420 --> 00:01:07,450
so I'm pretty well I felt pretty good

00:01:02,399 --> 00:01:09,100
but after a while something bothering me

00:01:07,450 --> 00:01:12,550
I started feeling like we were

00:01:09,100 --> 00:01:15,250
plateauing I didn't know if we were

00:01:12,550 --> 00:01:18,280
actually getting better in fact I didn't

00:01:15,250 --> 00:01:21,910
even know if we were good or if I was

00:01:18,280 --> 00:01:23,500
doing my job I wasn't the only one

00:01:21,910 --> 00:01:27,580
interested in this question

00:01:23,500 --> 00:01:29,440
my boss was - yes everyone on the

00:01:27,580 --> 00:01:32,080
leadership team of the company to start

00:01:29,440 --> 00:01:33,640
reporting how they were doing metrics on

00:01:32,080 --> 00:01:37,120
how they were doing at our monthly

00:01:33,640 --> 00:01:38,979
meetings and he specifically asked me to

00:01:37,120 --> 00:01:41,290
report on an indicator of what we were

00:01:38,979 --> 00:01:46,810
getting done our team's productivity or

00:01:41,290 --> 00:01:48,970
output and I protested I told them I had

00:01:46,810 --> 00:01:51,270
never seen good metrics for doing this

00:01:48,970 --> 00:01:57,490
and all the metrics that I knew of

00:01:51,270 --> 00:01:59,710
simply weren't good but it well me I

00:01:57,490 --> 00:02:01,420
don't care what the metric is I don't

00:01:59,710 --> 00:02:08,250
care what the number is but just give me

00:02:01,420 --> 00:02:15,850
some number so I thought about it and

00:02:08,250 --> 00:02:19,030
the more I thought the more why wasn't

00:02:15,850 --> 00:02:21,400
there a metric I could use why didn't I

00:02:19,030 --> 00:02:24,220
have a way of measuring how well my team

00:02:21,400 --> 00:02:28,780
was doing and why hadn't this problem

00:02:24,220 --> 00:02:31,090
already been solved to try and find some

00:02:28,780 --> 00:02:33,250
answers I reached out to some mentors of

00:02:31,090 --> 00:02:34,480
mine and the first person I talked to

00:02:33,250 --> 00:02:36,370
was a CTO

00:02:34,480 --> 00:02:39,040
he'd been a CTO for over 20 years

00:02:36,370 --> 00:02:41,590
managed hundreds of engineers and now

00:02:39,040 --> 00:02:43,720
when I asked them how do you measure the

00:02:41,590 --> 00:02:45,790
productivity of your team she told me it

00:02:43,720 --> 00:02:47,260
was impossible he told me we were

00:02:45,790 --> 00:02:51,459
actually flawed in even asking that

00:02:47,260 --> 00:02:53,590
question I spoke to another mentor and

00:02:51,459 --> 00:02:55,440
he told me he was trying to figure out

00:02:53,590 --> 00:02:58,360
how to develop something like MBAs

00:02:55,440 --> 00:03:01,150
plus-minus effectively a way of

00:02:58,360 --> 00:03:03,459
measuring the value a team member is

00:03:01,150 --> 00:03:05,049
contributing but he had no way of

00:03:03,459 --> 00:03:08,230
figuring out how to actually calculate

00:03:05,049 --> 00:03:11,370
it I spoke to some other mentors and

00:03:08,230 --> 00:03:14,860
they were all at a lot also

00:03:11,370 --> 00:03:17,230
and I couldn't believe what I was

00:03:14,860 --> 00:03:19,480
hearing these companies were spending

00:03:17,230 --> 00:03:21,640
tens of millions of dollars on their

00:03:19,480 --> 00:03:24,099
engineering teams if they had absolutely

00:03:21,640 --> 00:03:26,380
no way of tracking or measuring how well

00:03:24,099 --> 00:03:29,260
they were doing let alone whether they

00:03:26,380 --> 00:03:31,599
were getting better or worse and this

00:03:29,260 --> 00:03:35,800
seemed crazy to me and every other

00:03:31,599 --> 00:03:39,069
possession profession sports marketing

00:03:35,800 --> 00:03:41,050
sales right there established ways of

00:03:39,069 --> 00:03:44,110
measuring higher organization is doing

00:03:41,050 --> 00:03:46,120
and how it can improve and in fact most

00:03:44,110 --> 00:03:48,700
most of these methods are generated

00:03:46,120 --> 00:03:51,040
through software ironically

00:03:48,700 --> 00:03:53,380
in the field of software development we

00:03:51,040 --> 00:03:54,910
haven't solved this problem we have we

00:03:53,380 --> 00:03:57,130
don't have established ways of measuring

00:03:54,910 --> 00:03:59,799
how well we're doing or how whether

00:03:57,130 --> 00:04:03,099
we're getting better or worse I thought

00:03:59,799 --> 00:04:06,819
to myself the had to be away and I was

00:04:03,099 --> 00:04:09,220
determined to figure it out so my name

00:04:06,819 --> 00:04:11,410
is Abby and I've spent the past several

00:04:09,220 --> 00:04:13,390
years figuring out what kinds of metrics

00:04:11,410 --> 00:04:15,310
can work on software teams and how

00:04:13,390 --> 00:04:17,799
metrics can be used in ways that

00:04:15,310 --> 00:04:21,970
positively change transform teams and

00:04:17,799 --> 00:04:23,380
behaviors I worked at github now before

00:04:21,970 --> 00:04:26,020
I worked at github I started a company

00:04:23,380 --> 00:04:27,220
called pull Panda and that pull Panda we

00:04:26,020 --> 00:04:29,500
developed a product called pull

00:04:27,220 --> 00:04:32,229
analytics which provided various metrics

00:04:29,500 --> 00:04:34,510
and analytics for teams now I'm working

00:04:32,229 --> 00:04:36,070
at github with an unbelievable team to

00:04:34,510 --> 00:04:38,380
help bring these capabilities to the

00:04:36,070 --> 00:04:40,030
rest of the world and today I'm going to

00:04:38,380 --> 00:04:41,410
tell you some lessons from my journey

00:04:40,030 --> 00:04:43,210
and trying to figure out how to measure

00:04:41,410 --> 00:04:45,880
different developer productivity and

00:04:43,210 --> 00:04:52,060
some tips for how you can gain value out

00:04:45,880 --> 00:04:53,979
of using metrics on your teams so a few

00:04:52,060 --> 00:04:56,110
months after I'd spoken to my mentors I

00:04:53,979 --> 00:04:59,560
actually quit my job to work on this

00:04:56,110 --> 00:05:01,120
problem full-time and I quickly realized

00:04:59,560 --> 00:05:03,039
that metrics are a really hard problem

00:05:01,120 --> 00:05:05,560
of course that's why they haven't been

00:05:03,039 --> 00:05:07,000
solved yet and the thing is that there

00:05:05,560 --> 00:05:09,850
are so many things in software

00:05:07,000 --> 00:05:12,789
engineering that we can measure but very

00:05:09,850 --> 00:05:15,160
few that I think we should it took me a

00:05:12,789 --> 00:05:17,830
while to realize this I spoke with many

00:05:15,160 --> 00:05:19,240
companies read up on all the literature

00:05:17,830 --> 00:05:22,030
and looked at all the products out there

00:05:19,240 --> 00:05:23,420
and I also spent a lot of time talking

00:05:22,030 --> 00:05:26,210
with my dad

00:05:23,420 --> 00:05:28,310
see my dad is a retired software

00:05:26,210 --> 00:05:31,070
developer and if there's one thing that

00:05:28,310 --> 00:05:32,780
developers and dads share in common it's

00:05:31,070 --> 00:05:35,030
that they have a lot of opinions and

00:05:32,780 --> 00:05:40,460
they like to voice them and I'll tell

00:05:35,030 --> 00:05:42,140
you more about my dad in a minute so one

00:05:40,460 --> 00:05:45,650
of the first metrics I looked at was

00:05:42,140 --> 00:05:47,420
commits right github already had

00:05:45,650 --> 00:05:48,980
different charts and graphs on commits

00:05:47,420 --> 00:05:51,380
so it seemed like something that was

00:05:48,980 --> 00:05:53,120
pretty easy to count I knew it wasn't

00:05:51,380 --> 00:05:55,310
gonna be the perfect metric but I

00:05:53,120 --> 00:05:59,060
thought hey you know maybe this might be

00:05:55,310 --> 00:06:01,280
useful and for starters having no

00:05:59,060 --> 00:06:04,070
metrics is sort of a red flag right in

00:06:01,280 --> 00:06:06,110
software we're constantly committing

00:06:04,070 --> 00:06:08,120
code so if there are no commits that

00:06:06,110 --> 00:06:11,510
means no work is getting done and that's

00:06:08,120 --> 00:06:17,410
a problem this metric is sounding

00:06:11,510 --> 00:06:20,120
awesome already and it gets even better

00:06:17,410 --> 00:06:22,790
so I spoke with a lot of developers and

00:06:20,120 --> 00:06:25,940
teams and we all sort of agreed that in

00:06:22,790 --> 00:06:28,760
general having small frequent commits is

00:06:25,940 --> 00:06:30,020
better than having infrequent large

00:06:28,760 --> 00:06:31,550
commits right it means you're

00:06:30,020 --> 00:06:35,360
continually deploying changes these

00:06:31,550 --> 00:06:37,610
changes are easier to manage and so with

00:06:35,360 --> 00:06:41,450
this metric if you increase the number

00:06:37,610 --> 00:06:44,750
of commits you have you in effect can in

00:06:41,450 --> 00:06:46,790
effect are also influencing your process

00:06:44,750 --> 00:06:49,340
such that you are committing smaller

00:06:46,790 --> 00:06:52,700
changes more frequently right so this

00:06:49,340 --> 00:06:56,150
metric is just sounding great I thought

00:06:52,700 --> 00:06:58,370
I was on some things I owed some CTOs

00:06:56,150 --> 00:07:01,450
this metric and explain my rationale and

00:06:58,370 --> 00:07:04,250
they told me it sounded pretty good and

00:07:01,450 --> 00:07:06,620
one night I was having a family dinner

00:07:04,250 --> 00:07:09,500
and my dad was there and I told him

00:07:06,620 --> 00:07:12,590
about it and he told me it was garbage

00:07:09,500 --> 00:07:14,960
he told me that this is an awful idea

00:07:12,590 --> 00:07:16,970
and that no developer would ever want to

00:07:14,960 --> 00:07:20,270
ever want to be measured by this sort of

00:07:16,970 --> 00:07:22,370
thing and you see my dad had been a

00:07:20,270 --> 00:07:24,770
developer for over 30 years before he

00:07:22,370 --> 00:07:27,260
retired and throughout his career he'd

00:07:24,770 --> 00:07:29,750
run into he had countless experiences

00:07:27,260 --> 00:07:32,690
where managers had rolled out bad

00:07:29,750 --> 00:07:35,270
metrics and may ruin their teams and

00:07:32,690 --> 00:07:36,330
made developers lives miserable had been

00:07:35,270 --> 00:07:40,919
terrible

00:07:36,330 --> 00:07:43,710
and he told me that tracking commits was

00:07:40,919 --> 00:07:45,330
a terrible idea for one thing just

00:07:43,710 --> 00:07:47,099
tracking the number of commits doesn't

00:07:45,330 --> 00:07:49,650
tell you anything about the actual value

00:07:47,099 --> 00:07:51,690
being delivered and if someone wanted to

00:07:49,650 --> 00:07:53,789
they could easily game it just by

00:07:51,690 --> 00:07:56,669
creating extra commits and this would be

00:07:53,789 --> 00:07:58,289
you know this wouldn't help the team so

00:07:56,669 --> 00:08:01,229
if you can't tell already my dad was

00:07:58,289 --> 00:08:03,000
super sensitive about metrics so

00:08:01,229 --> 00:08:05,099
sensitive in fact that he would

00:08:03,000 --> 00:08:06,840
blanketly reject almost any idea I

00:08:05,099 --> 00:08:07,830
pitched him on in terms of metrics I'd

00:08:06,840 --> 00:08:10,680
tell him dad

00:08:07,830 --> 00:08:13,349
hey how about how about this metric how

00:08:10,680 --> 00:08:14,940
about this one and blanketly he would

00:08:13,349 --> 00:08:16,710
just shake his head and tell me that the

00:08:14,940 --> 00:08:20,250
problem I was working on was impossible

00:08:16,710 --> 00:08:24,229
and he really he made me feel like I was

00:08:20,250 --> 00:08:24,229
speaking of evil or blasphemous things

00:08:24,289 --> 00:08:31,740
the tension between us was rising and

00:08:27,180 --> 00:08:33,510
one evening it erupted so I was at home

00:08:31,740 --> 00:08:36,479
I was actually reading the book

00:08:33,510 --> 00:08:38,490
accelerate which is an awesome book that

00:08:36,479 --> 00:08:40,320
analyzes high-performing teams and

00:08:38,490 --> 00:08:42,110
suggests some metrics that can be used

00:08:40,320 --> 00:08:44,970
for benchmarking your organization

00:08:42,110 --> 00:08:46,470
anyways I was reading this book and some

00:08:44,970 --> 00:08:48,420
will across well there are a lot of

00:08:46,470 --> 00:08:49,560
great ideas in that book but I was

00:08:48,420 --> 00:08:52,200
reading something and thought it was a

00:08:49,560 --> 00:08:55,560
great idea and my dad I was working at

00:08:52,200 --> 00:08:57,240
home at my parents house and my dad well

00:08:55,560 --> 00:09:00,329
I think he had been at the grocery store

00:08:57,240 --> 00:09:02,970
and I said hey Dad check this thing out

00:09:00,329 --> 00:09:06,329
that I just read and again he just shook

00:09:02,970 --> 00:09:08,850
his head at me and dismissed me and so I

00:09:06,329 --> 00:09:10,410
jut it back I said you know what's your

00:09:08,850 --> 00:09:14,459
what are you talking about what's your

00:09:10,410 --> 00:09:17,040
problem anyways we this kind of turned

00:09:14,459 --> 00:09:18,750
into a verbal boxing match to the point

00:09:17,040 --> 00:09:21,180
where at one point he he looked at me

00:09:18,750 --> 00:09:23,510
and said Abby you know you're not the

00:09:21,180 --> 00:09:26,760
Einstein of engineering metrics and

00:09:23,510 --> 00:09:28,649
given that I was at this point to voting

00:09:26,760 --> 00:09:31,829
my life to figuring this out I was a bit

00:09:28,649 --> 00:09:33,600
offended and so I started yelling at him

00:09:31,829 --> 00:09:38,730
and our fight escalated to the point

00:09:33,600 --> 00:09:41,670
where I had to leave the house so other

00:09:38,730 --> 00:09:44,329
night busts are proud of that moment but

00:09:41,670 --> 00:09:46,709
the more I think back to that conflict

00:09:44,329 --> 00:09:49,380
the more I think of it as a reminder of

00:09:46,709 --> 00:09:50,250
just how emotional this topic is for

00:09:49,380 --> 00:09:52,650
both developers

00:09:50,250 --> 00:09:55,260
and managers right my story at the

00:09:52,650 --> 00:09:57,090
beginning of this talk of not having a

00:09:55,260 --> 00:09:59,340
way to measure that was a powerful

00:09:57,090 --> 00:10:02,670
emotion and similarly for my father

00:09:59,340 --> 00:10:04,860
who'd time after time two negative

00:10:02,670 --> 00:10:06,060
experiences with metrics his fear and

00:10:04,860 --> 00:10:09,990
opposition and metrics

00:10:06,060 --> 00:10:12,570
was also really powerful and I think

00:10:09,990 --> 00:10:15,570
this is understandable right we all know

00:10:12,570 --> 00:10:19,320
that metrics can be used if misuse can

00:10:15,570 --> 00:10:21,620
harm our culture our processes and they

00:10:19,320 --> 00:10:24,720
can make developers lives miserable and

00:10:21,620 --> 00:10:27,150
it's not just choosing the wrong metrics

00:10:24,720 --> 00:10:32,280
that does this it's also how we use

00:10:27,150 --> 00:10:34,230
metrics on our teams so there a lot of

00:10:32,280 --> 00:10:36,450
ways that metrics can harm our teams and

00:10:34,230 --> 00:10:38,190
one obvious example would be if a

00:10:36,450 --> 00:10:41,490
manager we're using a metric like

00:10:38,190 --> 00:10:43,590
commits to reward or punish people on

00:10:41,490 --> 00:10:47,430
their team right this is this is not a

00:10:43,590 --> 00:10:49,560
good practice don't do this but less

00:10:47,430 --> 00:10:51,840
obvious ways in which metrics can also

00:10:49,560 --> 00:10:53,970
harm our teams and in fact even good

00:10:51,840 --> 00:10:59,900
metrics can be harmful when they're

00:10:53,970 --> 00:11:02,420
manifested or presented under the exact

00:10:59,900 --> 00:11:05,450
so this is one of the features we built

00:11:02,420 --> 00:11:07,400
in pole panda it shows the average code

00:11:05,450 --> 00:11:09,110
review turnaround time for everyone on

00:11:07,400 --> 00:11:11,900
your team rank from lowest to highest

00:11:09,110 --> 00:11:13,610
and I actually think code review

00:11:11,900 --> 00:11:16,940
turnaround time is a great metric and

00:11:13,610 --> 00:11:18,920
I'll talk more about it later but and

00:11:16,940 --> 00:11:21,130
just for clarity of you turnaround time

00:11:18,920 --> 00:11:23,240
is the time between someone on your team

00:11:21,130 --> 00:11:26,960
requesting a review and the reviewer

00:11:23,240 --> 00:11:29,240
responding so take a look at this page

00:11:26,960 --> 00:11:31,700
and ask yourself you know what kinds of

00:11:29,240 --> 00:11:33,260
negative behaviors do you think started

00:11:31,700 --> 00:11:37,450
occurring when teams started doing this

00:11:33,260 --> 00:11:37,450
it was actually really surprising to me

00:11:38,740 --> 00:11:44,180
thank you so there were a couple

00:11:41,060 --> 00:11:46,820
behaviors that I started observing that

00:11:44,180 --> 00:11:48,890
we're really interesting so one thing

00:11:46,820 --> 00:11:51,440
that happened is because teams started

00:11:48,890 --> 00:11:54,290
trying to opt to turn around reviews

00:11:51,440 --> 00:11:56,180
more quickly a lot of teams observe that

00:11:54,290 --> 00:11:57,830
people weren't actually doing real

00:11:56,180 --> 00:12:00,020
reviews they were just rubber stamping

00:11:57,830 --> 00:12:01,880
reviews in order to get them done but

00:12:00,020 --> 00:12:04,600
the quality of those reviews had really

00:12:01,880 --> 00:12:07,100
slipped and this of course wasn't good

00:12:04,600 --> 00:12:10,820
another really interesting consequence

00:12:07,100 --> 00:12:13,370
of this feature was that the time here

00:12:10,820 --> 00:12:16,370
the calculation of the time doesn't

00:12:13,370 --> 00:12:18,140
include weekends and so what started end

00:12:16,370 --> 00:12:20,209
up happening is that teams would stop

00:12:18,140 --> 00:12:22,279
requesting code reviews on Fridays

00:12:20,209 --> 00:12:24,620
because they they knew that it would

00:12:22,279 --> 00:12:25,550
mess up their stats right because people

00:12:24,620 --> 00:12:28,730
won't be able to get to them until

00:12:25,550 --> 00:12:30,650
Monday and so again these these weird

00:12:28,730 --> 00:12:32,600
behaviors started occurring on teams and

00:12:30,650 --> 00:12:34,880
it wasn't because this metric and of

00:12:32,600 --> 00:12:38,180
itself is bad it was because of the way

00:12:34,880 --> 00:12:41,810
they were presented and manifested in

00:12:38,180 --> 00:12:44,750
pull panda so we've looked at a couple

00:12:41,810 --> 00:12:46,610
ways metrics can backfire and this is

00:12:44,750 --> 00:12:49,279
really important because again to be

00:12:46,610 --> 00:12:50,750
successful you not only have to choose

00:12:49,279 --> 00:12:53,330
the right metrics and measure the right

00:12:50,750 --> 00:12:54,770
things but you also have to design the

00:12:53,330 --> 00:12:59,440
way you present metrics in the right

00:12:54,770 --> 00:13:04,070
ways a moment ago I talked about how

00:12:59,440 --> 00:13:05,240
commits is a problematic metric and but

00:13:04,070 --> 00:13:07,640
it's not the only one that spells

00:13:05,240 --> 00:13:09,890
trouble I think there are five common

00:13:07,640 --> 00:13:13,280
metrics that I see companies using all

00:13:09,890 --> 00:13:13,880
the time as a way of measuring output or

00:13:13,280 --> 00:13:17,120
product

00:13:13,880 --> 00:13:19,810
and I call these the flawed five in a

00:13:17,120 --> 00:13:22,340
moment I'll walk through these but first

00:13:19,810 --> 00:13:24,980
I've said the word productivity

00:13:22,340 --> 00:13:26,480
throughout this talk but I haven't we

00:13:24,980 --> 00:13:28,250
haven't really defined what it means in

00:13:26,480 --> 00:13:32,480
the context of software engineering and

00:13:28,250 --> 00:13:34,130
I have a funny story about this I you

00:13:32,480 --> 00:13:37,010
know spends a lot of time pondering this

00:13:34,130 --> 00:13:39,320
question and a few months ago I was in a

00:13:37,010 --> 00:13:41,180
meeting and I asked everyone in the room

00:13:39,320 --> 00:13:44,360
to share their definition of what

00:13:41,180 --> 00:13:44,870
productivity met one person raised their

00:13:44,360 --> 00:13:47,510
hand

00:13:44,870 --> 00:13:51,290
and suggested that it be measured

00:13:47,510 --> 00:13:54,860
similar to GDP in other words maybe the

00:13:51,290 --> 00:13:58,550
profit or yield per engineer in a

00:13:54,860 --> 00:14:00,950
company and I thought to myself you know

00:13:58,550 --> 00:14:03,500
that's interesting but it sounds kind of

00:14:00,950 --> 00:14:07,220
agricultural we're not building farms

00:14:03,500 --> 00:14:08,720
here we're building software and after

00:14:07,220 --> 00:14:10,730
this meeting I kept thinking about this

00:14:08,720 --> 00:14:13,430
and when I went home that night I

00:14:10,730 --> 00:14:17,300
actually just googled the definition of

00:14:13,430 --> 00:14:19,700
productivity and funny that the

00:14:17,300 --> 00:14:21,340
definition that came up was the state or

00:14:19,700 --> 00:14:24,770
quality of producing something

00:14:21,340 --> 00:14:26,450
especially crops I thought this was

00:14:24,770 --> 00:14:29,240
really funny I guess that person was

00:14:26,450 --> 00:14:32,120
spot on and of course it left me even

00:14:29,240 --> 00:14:33,680
more confused about you know what what

00:14:32,120 --> 00:14:36,440
the correct definition of productivity

00:14:33,680 --> 00:14:38,120
is in software development and I've

00:14:36,440 --> 00:14:39,770
asked many developers and leaders this

00:14:38,120 --> 00:14:42,440
question and I get all kinds of

00:14:39,770 --> 00:14:45,530
different responses but by far the most

00:14:42,440 --> 00:14:49,220
common response I get is is how much are

00:14:45,530 --> 00:14:51,410
we getting done right output and this

00:14:49,220 --> 00:14:53,450
makes sense because after all in

00:14:51,410 --> 00:14:56,060
software development we produce things

00:14:53,450 --> 00:15:01,850
and so it's a lot cool we want to

00:14:56,060 --> 00:15:03,410
measure how much we're producing but I

00:15:01,850 --> 00:15:06,050
think the problem in software

00:15:03,410 --> 00:15:08,690
development is that we can't measure how

00:15:06,050 --> 00:15:11,270
much we're producing right software

00:15:08,690 --> 00:15:12,950
development is not like a factory

00:15:11,270 --> 00:15:14,570
assembly line where you can just count

00:15:12,950 --> 00:15:16,760
up the number of widgets that are being

00:15:14,570 --> 00:15:18,890
produced and easily determine how much

00:15:16,760 --> 00:15:21,860
they cost I think that software

00:15:18,890 --> 00:15:24,740
development is more like art right an

00:15:21,860 --> 00:15:26,540
art just throwing more paint on the

00:15:24,740 --> 00:15:29,330
canvas isn't necessarily bad

00:15:26,540 --> 00:15:31,370
and similarly in software just doing

00:15:29,330 --> 00:15:34,010
more things or producing more lines of

00:15:31,370 --> 00:15:36,140
code or creating more commits is often

00:15:34,010 --> 00:15:40,850
the opposite of what we want to be doing

00:15:36,140 --> 00:15:42,980
in software and similarly it might take

00:15:40,850 --> 00:15:45,110
an artist a whole day just to figure out

00:15:42,980 --> 00:15:47,240
the perfect brushstroke to add to their

00:15:45,110 --> 00:15:49,610
painting and in software we all know

00:15:47,240 --> 00:15:52,160
that even really small changes in terms

00:15:49,610 --> 00:15:54,530
of lines of code right can take an

00:15:52,160 --> 00:15:58,430
immense amount of time and effort to

00:15:54,530 --> 00:16:01,340
figure out so in software we can't

00:15:58,430 --> 00:16:03,470
really measure output but unfortunately

00:16:01,340 --> 00:16:06,590
that doesn't stop people from trying

00:16:03,470 --> 00:16:09,020
and those flawed five metrics I referred

00:16:06,590 --> 00:16:11,240
to earlier earlier that's what they all

00:16:09,020 --> 00:16:13,880
share in common they're all metrics that

00:16:11,240 --> 00:16:15,770
are used to try to measure output to try

00:16:13,880 --> 00:16:21,470
to measure productivity and they don't

00:16:15,770 --> 00:16:23,360
work so we'll go through them so number

00:16:21,470 --> 00:16:25,730
of lines of code is a metric that's been

00:16:23,360 --> 00:16:28,400
around ever since people started writing

00:16:25,730 --> 00:16:31,340
software and it's a really bad measure

00:16:28,400 --> 00:16:33,200
of productivity right for starters

00:16:31,340 --> 00:16:35,690
there's different languages different

00:16:33,200 --> 00:16:38,330
formatting conventions so you know three

00:16:35,690 --> 00:16:40,310
lines of code and one language might be

00:16:38,330 --> 00:16:43,790
tens of code in another so it's really

00:16:40,310 --> 00:16:46,160
difficult to even compare on top of the

00:16:43,790 --> 00:16:51,230
I think any good software developer

00:16:46,160 --> 00:16:53,060
knows that one year refactoring code or

00:16:51,230 --> 00:16:55,430
writing good code what you're actually

00:16:53,060 --> 00:16:57,980
trying to do is create less code right

00:16:55,430 --> 00:17:00,080
and so when you use lines of code as a

00:16:57,980 --> 00:17:02,690
metric as a way of measuring output or

00:17:00,080 --> 00:17:06,110
productivity you actually incentivize

00:17:02,690 --> 00:17:08,390
the opposite of opposite programming

00:17:06,110 --> 00:17:14,840
practices and behaviors we want to build

00:17:08,390 --> 00:17:18,170
good software unfortunately is still a

00:17:14,840 --> 00:17:20,510
really common metric it's used many

00:17:18,170 --> 00:17:22,550
different companies in our industry in

00:17:20,510 --> 00:17:25,730
fact you know just a couple months ago I

00:17:22,550 --> 00:17:27,650
came across a company that was stack

00:17:25,730 --> 00:17:29,690
ranking developers based on a number of

00:17:27,650 --> 00:17:33,350
lines of code they wrote and actually

00:17:29,690 --> 00:17:35,000
firing people who ranked low and I think

00:17:33,350 --> 00:17:37,580
we all in this room recognize that

00:17:35,000 --> 00:17:40,610
that's a terrible practice but needs to

00:17:37,580 --> 00:17:42,830
stop but again it's it's surprising and

00:17:40,610 --> 00:17:46,929
how common the still is in our industry

00:17:42,830 --> 00:17:50,059
and we need to move away from this

00:17:46,929 --> 00:17:52,130
another metric I see that's more recent

00:17:50,059 --> 00:17:54,950
being used to measure productivity is

00:17:52,130 --> 00:17:57,559
poor request count and Counting pull

00:17:54,950 --> 00:17:59,539
requests seem to be a recent trend I was

00:17:57,559 --> 00:18:03,019
a meet up I was at a meet-up last year

00:17:59,539 --> 00:18:05,149
and a manager told me I think poor

00:18:03,019 --> 00:18:07,399
request con is the new vanity metric and

00:18:05,149 --> 00:18:09,980
I completely agree with them

00:18:07,399 --> 00:18:13,399
counting poor request is a vanity metric

00:18:09,980 --> 00:18:15,620
right it doesn't take into account the

00:18:13,399 --> 00:18:18,019
size or difficulty of those pull

00:18:15,620 --> 00:18:19,610
requests and really a day all it tells

00:18:18,019 --> 00:18:23,330
you is just how many pull requests were

00:18:19,610 --> 00:18:25,490
created so like lines of code this

00:18:23,330 --> 00:18:27,350
metric can encourage actually negative

00:18:25,490 --> 00:18:30,409
behaviors on your team right you don't

00:18:27,350 --> 00:18:31,850
want developers creating unnecessarily

00:18:30,409 --> 00:18:34,039
creating an excessive number of pull

00:18:31,850 --> 00:18:36,260
requests just simply throw metric and

00:18:34,039 --> 00:18:38,299
this is what happens when you

00:18:36,260 --> 00:18:42,500
incentivize or reward developers based

00:18:38,299 --> 00:18:44,600
on a metric like this I've actually seen

00:18:42,500 --> 00:18:47,559
this metric become really common in our

00:18:44,600 --> 00:18:50,269
industry and this is just one example

00:18:47,559 --> 00:18:52,970
this is actually get labs engineering

00:18:50,269 --> 00:18:55,580
okay ours and it's published on their

00:18:52,970 --> 00:18:56,899
website and in this okay are they say

00:18:55,580 --> 00:19:00,260
that their objective is to improve

00:18:56,899 --> 00:19:02,630
productivity by 60 percent and they

00:19:00,260 --> 00:19:04,639
intend to measure this and achieve this

00:19:02,630 --> 00:19:07,010
by increasing the number of merge

00:19:04,639 --> 00:19:10,340
request pull requests created per

00:19:07,010 --> 00:19:12,230
engineer by 20 percent I don't think

00:19:10,340 --> 00:19:14,510
this is a good practice I think kind

00:19:12,230 --> 00:19:16,940
pull requests may seem less offensive

00:19:14,510 --> 00:19:18,860
and less obviously wrong than counting

00:19:16,940 --> 00:19:23,539
lines of code but they both suffer from

00:19:18,860 --> 00:19:26,330
the same problems so another one is

00:19:23,539 --> 00:19:28,250
velocity points and I think velocity

00:19:26,330 --> 00:19:30,200
points can be an unpleasant subject I

00:19:28,250 --> 00:19:33,080
think a lot of developers just see them

00:19:30,200 --> 00:19:35,960
as a necessary evil I'm personally a big

00:19:33,080 --> 00:19:38,980
fan of velocity points I think that when

00:19:35,960 --> 00:19:41,809
used as designed there are a fantastic

00:19:38,980 --> 00:19:44,710
estimation tool and something you can

00:19:41,809 --> 00:19:47,330
use to forecast delivery on your team I

00:19:44,710 --> 00:19:50,389
think you run into problems though when

00:19:47,330 --> 00:19:52,490
try to turn velocity from forecasting

00:19:50,389 --> 00:19:54,379
and estimation tool into a measure of

00:19:52,490 --> 00:19:57,299
productivity or output

00:19:54,379 --> 00:19:59,129
when you reward people or teams based on

00:19:57,299 --> 00:20:02,309
the number of points they're delivering

00:19:59,129 --> 00:20:04,469
this immediately jeopardizes the

00:20:02,309 --> 00:20:08,070
accuracy of the estimates they provide

00:20:04,469 --> 00:20:10,590
because they're incentivized who inflate

00:20:08,070 --> 00:20:11,700
the number of points things take just

00:20:10,590 --> 00:20:15,299
inflate the number of points they

00:20:11,700 --> 00:20:16,830
deliver and when this happens velocity

00:20:15,299 --> 00:20:19,710
points ends up just being a meaningless

00:20:16,830 --> 00:20:21,210
metric so as you soon as you take in

00:20:19,710 --> 00:20:23,249
velocity points and start using it as a

00:20:21,210 --> 00:20:25,019
measure of output or productivity it

00:20:23,249 --> 00:20:33,330
becomes useless for its actual design

00:20:25,019 --> 00:20:36,929
purpose so finally there's a new metric

00:20:33,330 --> 00:20:39,809
that it's a new proprietary metric that

00:20:36,929 --> 00:20:41,940
a lot of the leading vendors providing

00:20:39,809 --> 00:20:43,320
engineering analytics tools have built

00:20:41,940 --> 00:20:45,719
into their products and it's called

00:20:43,320 --> 00:20:47,909
impact for those of you who aren't

00:20:45,719 --> 00:20:51,119
familiar with it impact is essentially

00:20:47,909 --> 00:20:52,379
lines of code but it also factors and

00:20:51,119 --> 00:20:56,609
other things like how many different

00:20:52,379 --> 00:20:58,950
files were touched or and and one amount

00:20:56,609 --> 00:21:01,859
of code that was change was new versus

00:20:58,950 --> 00:21:03,960
existing code and all these factors are

00:21:01,859 --> 00:21:07,019
combined to create what is called an

00:21:03,960 --> 00:21:08,759
impact score I've observed many

00:21:07,019 --> 00:21:10,529
companies that have tried to use this

00:21:08,759 --> 00:21:15,119
metric and in almost all cases

00:21:10,529 --> 00:21:17,129
developers have hated right and not only

00:21:15,119 --> 00:21:19,619
does this metric suffer from the same

00:21:17,129 --> 00:21:20,999
flaws as lines of code but it's also

00:21:19,619 --> 00:21:22,889
really difficult to understand there's

00:21:20,999 --> 00:21:25,519
so many things that go into calculating

00:21:22,889 --> 00:21:28,950
this that it becomes a national and

00:21:25,519 --> 00:21:31,229
lastly I think is a problem with the

00:21:28,950 --> 00:21:33,869
naming of this metric by calling it

00:21:31,229 --> 00:21:36,419
impact it suggests especially to

00:21:33,869 --> 00:21:38,820
executive and managers on how this

00:21:36,419 --> 00:21:41,429
metric should be used and it sends a

00:21:38,820 --> 00:21:43,830
strong signal that this be an end-all

00:21:41,429 --> 00:21:47,179
be-all way of evaluating and measuring

00:21:43,830 --> 00:21:47,179
the value of developers and

00:21:47,240 --> 00:21:51,140
and if you recall this story about my

00:21:49,399 --> 00:21:55,029
dad this is exactly the type of thing

00:21:51,140 --> 00:21:57,500
that upset I'm in drove them nuts

00:21:55,029 --> 00:22:00,500
so just to recap these are the flawed

00:21:57,500 --> 00:22:02,450
five metrics and all these metrics are

00:22:00,500 --> 00:22:04,250
ways that I see companies trying to

00:22:02,450 --> 00:22:06,890
measure output in order to measure

00:22:04,250 --> 00:22:09,080
productivity and they don't work right

00:22:06,890 --> 00:22:12,260
they're not accurate then some

00:22:09,080 --> 00:22:16,490
incentivize negative Baker's on teams

00:22:12,260 --> 00:22:18,049
and as I've done research on this one

00:22:16,490 --> 00:22:20,539
question I've had is you know why is it

00:22:18,049 --> 00:22:22,690
that so many companies so many people

00:22:20,539 --> 00:22:25,100
use these metrics despite their flaws

00:22:22,690 --> 00:22:30,200
why is it you know why does this keep

00:22:25,100 --> 00:22:31,279
happening and if you recall that story I

00:22:30,200 --> 00:22:33,110
shared at the beginning of the talk

00:22:31,279 --> 00:22:35,390
about me being a manager and not being

00:22:33,110 --> 00:22:38,630
able to measure that frustration I felt

00:22:35,390 --> 00:22:41,450
it's really powerful and I've spoke and

00:22:38,630 --> 00:22:43,450
as many people across our industry I

00:22:41,450 --> 00:22:48,380
found that this is a really common

00:22:43,450 --> 00:22:50,950
desire and need that people share I've

00:22:48,380 --> 00:22:53,899
met with leaders who are in charge of

00:22:50,950 --> 00:22:57,320
thousands of engineers and they have

00:22:53,899 --> 00:22:59,029
absolutely no idea what's going on let

00:22:57,320 --> 00:23:02,649
alone how well they're doing

00:22:59,029 --> 00:23:05,360
I've spoken with open-source maintainer

00:23:02,649 --> 00:23:07,370
projects in the world with no idea

00:23:05,360 --> 00:23:09,620
whether their communities are healthy

00:23:07,370 --> 00:23:12,190
whether they're growing or what the

00:23:09,620 --> 00:23:14,390
impact of their projects even are and

00:23:12,190 --> 00:23:16,100
these are all scenarios where

00:23:14,390 --> 00:23:18,200
measurement would be incredibly useful

00:23:16,100 --> 00:23:20,690
but where today there aren't really good

00:23:18,200 --> 00:23:23,630
ways of doing so and I think it's this

00:23:20,690 --> 00:23:26,510
this burning desire this desperation

00:23:23,630 --> 00:23:28,850
that leads us into the up measuring the

00:23:26,510 --> 00:23:31,490
wrong things or using metrics in the

00:23:28,850 --> 00:23:36,230
wrong ways even even when we see the

00:23:31,490 --> 00:23:38,270
flaws so to help prevent dubs from

00:23:36,230 --> 00:23:40,340
falling into these traps I think we need

00:23:38,270 --> 00:23:42,890
to better understand ourselves we really

00:23:40,340 --> 00:23:45,860
need to understand why we want to

00:23:42,890 --> 00:23:48,860
measure and this why is really important

00:23:45,860 --> 00:23:51,679
I think understanding this why helps us

00:23:48,860 --> 00:23:55,070
recognize our own biases and avoid the

00:23:51,679 --> 00:23:58,820
traps that I've talked about I think

00:23:55,070 --> 00:24:00,500
that in almost all cases our desire to

00:23:58,820 --> 00:24:04,300
measure falls into four

00:24:00,500 --> 00:24:07,400
for reasons and I'll go through them

00:24:04,300 --> 00:24:09,920
think the first and obvious reason we

00:24:07,400 --> 00:24:14,480
want to measure is to prompt action or

00:24:09,920 --> 00:24:17,440
inform our decisions I was talking with

00:24:14,480 --> 00:24:20,210
an engineering manager who was really

00:24:17,440 --> 00:24:22,700
confused being distributed and on their

00:24:20,210 --> 00:24:25,940
team in uneven ways and so what he

00:24:22,700 --> 00:24:28,130
wanted was some sort of ode how many

00:24:25,940 --> 00:24:30,500
reviews everyone on the team had a signs

00:24:28,130 --> 00:24:32,120
in real-time so that their team could

00:24:30,500 --> 00:24:34,970
use that to determine who should get the

00:24:32,120 --> 00:24:36,110
next code review there are lots of

00:24:34,970 --> 00:24:38,060
different cases like this for example

00:24:36,110 --> 00:24:40,130
maybe an open source I talked to a lot

00:24:38,060 --> 00:24:42,680
of maintainer x' who just want a way to

00:24:40,130 --> 00:24:44,690
quickly diagnose you know what are open

00:24:42,680 --> 00:24:47,330
things that haven't been responded to or

00:24:44,690 --> 00:24:50,600
work that's gone stale then to be

00:24:47,330 --> 00:24:54,580
followed up on and so again very common

00:24:50,600 --> 00:24:54,580
cases just you know what do I need to do

00:24:54,970 --> 00:25:01,850
another another reason I see is that you

00:24:59,360 --> 00:25:04,970
know all organizations all teams need

00:25:01,850 --> 00:25:07,040
some way of creating alignment for

00:25:04,970 --> 00:25:09,620
determing what is it we're trying to do

00:25:07,040 --> 00:25:12,170
and how can we measure whether we're

00:25:09,620 --> 00:25:14,510
actually doing it right so I'm sure I'll

00:25:12,170 --> 00:25:17,720
and all your team's you're familiar with

00:25:14,510 --> 00:25:20,240
things like ok ours and really when

00:25:17,720 --> 00:25:22,280
you're setting goals and doing something

00:25:20,240 --> 00:25:24,740
like ok ours right you need some way to

00:25:22,280 --> 00:25:27,020
actually come on by and it's

00:25:24,740 --> 00:25:29,150
quantitatively expressed your goal and

00:25:27,020 --> 00:25:31,970
verify that you're actually achieving it

00:25:29,150 --> 00:25:34,250
and this is another common use case I

00:25:31,970 --> 00:25:39,920
see for Y teams and executives and

00:25:34,250 --> 00:25:42,380
developers want to measure this one's

00:25:39,920 --> 00:25:44,840
one of the most interesting to me I was

00:25:42,380 --> 00:25:47,480
just talking to an engineering leader

00:25:44,840 --> 00:25:50,300
who was telling me a story he told me

00:25:47,480 --> 00:25:52,730
you know that he was looking for he was

00:25:50,300 --> 00:25:55,250
asking the board for 10 million dollars

00:25:52,730 --> 00:25:57,820
a 10 million dollar investment in his

00:25:55,250 --> 00:26:01,640
organization to increase headcount and

00:25:57,820 --> 00:26:03,650
procure some new tools and to ask for

00:26:01,640 --> 00:26:06,410
this he had to be able to actually show

00:26:03,650 --> 00:26:08,720
that this investment would improve their

00:26:06,410 --> 00:26:10,790
organization right and I think this

00:26:08,720 --> 00:26:13,059
happens all the time even as a myself as

00:26:10,790 --> 00:26:15,490
a manager when I went to my boss

00:26:13,059 --> 00:26:17,590
and ask for more budget to hire I needed

00:26:15,490 --> 00:26:20,470
something to be able to point to to

00:26:17,590 --> 00:26:23,980
justify this additional investment I was

00:26:20,470 --> 00:26:27,580
asking for another example of this would

00:26:23,980 --> 00:26:29,679
be you know engineering leader maybe

00:26:27,580 --> 00:26:32,230
make a decision a process change on your

00:26:29,679 --> 00:26:34,450
team on their team and they need a way

00:26:32,230 --> 00:26:37,389
with numbers to actually advocate and

00:26:34,450 --> 00:26:39,730
justify and confirm that this is having

00:26:37,389 --> 00:26:40,720
a positive effect and I think this is

00:26:39,730 --> 00:26:42,999
actually one of the most dangerous

00:26:40,720 --> 00:26:45,909
reasons why we measure because in all

00:26:42,999 --> 00:26:48,580
these situations we know what we want to

00:26:45,909 --> 00:26:51,789
do and we end up going fishing for a

00:26:48,580 --> 00:26:53,889
number that we can use to help sell what

00:26:51,789 --> 00:26:55,539
we're trying to do and in these

00:26:53,889 --> 00:26:59,080
situations it's easy to settle for a

00:26:55,539 --> 00:27:02,230
metric that may not be meaningful but

00:26:59,080 --> 00:27:04,779
just helps us tell our story and

00:27:02,230 --> 00:27:08,309
actually it's funny because we see that

00:27:04,779 --> 00:27:11,110
similar problem with github itself

00:27:08,309 --> 00:27:13,749
companies ask us all the time you know

00:27:11,110 --> 00:27:16,889
show us how github is improving our

00:27:13,749 --> 00:27:20,139
organization and in those conversations

00:27:16,889 --> 00:27:21,999
today into many of the similar problems

00:27:20,139 --> 00:27:24,519
where we see companies creating all

00:27:21,999 --> 00:27:26,590
kinds of different numbers and metrics

00:27:24,519 --> 00:27:28,720
that oftentimes don't mean a lot in

00:27:26,590 --> 00:27:33,399
order to justify their investment

00:27:28,720 --> 00:27:36,940
increases investment in github lastly

00:27:33,399 --> 00:27:40,509
all of us in the work we do we all we

00:27:36,940 --> 00:27:41,830
all aspire to have a higher purpose and

00:27:40,509 --> 00:27:43,779
what we're doing we all want to

00:27:41,830 --> 00:27:45,879
understand what is the impact that at

00:27:43,779 --> 00:27:48,850
work is actually having on the world and

00:27:45,879 --> 00:27:51,460
this is a theme that comes up most when

00:27:48,850 --> 00:27:53,440
I talk to open source developers who are

00:27:51,460 --> 00:27:55,929
investing all this time into their

00:27:53,440 --> 00:27:58,840
projects into their communities yet they

00:27:55,929 --> 00:28:01,360
don't really know whether all this work

00:27:58,840 --> 00:28:04,029
you know what it's going for and I think

00:28:01,360 --> 00:28:06,190
this is also true for us as individual

00:28:04,029 --> 00:28:09,279
software developers or for those of us

00:28:06,190 --> 00:28:11,049
who lead teams we want to feel good

00:28:09,279 --> 00:28:13,450
about the work we do and to do that we

00:28:11,049 --> 00:28:15,129
really need to understand you know what

00:28:13,450 --> 00:28:18,190
is the value we're delivering at the end

00:28:15,129 --> 00:28:21,039
of the day and again this is this is so

00:28:18,190 --> 00:28:22,659
higher purpose is another reason why I

00:28:21,039 --> 00:28:24,850
think we all want to be able to measure

00:28:22,659 --> 00:28:28,580
things

00:28:24,850 --> 00:28:30,680
so I've talked a lot about the flawed

00:28:28,580 --> 00:28:34,760
five metrics that don't work

00:28:30,680 --> 00:28:37,310
my father was fearful and opposed to any

00:28:34,760 --> 00:28:39,170
metrics but I do want to share some hope

00:28:37,310 --> 00:28:42,470
I do want to talk about some ways I

00:28:39,170 --> 00:28:46,270
found some cases where I found metrics

00:28:42,470 --> 00:28:51,380
do I can provide value to your teams I

00:28:46,270 --> 00:28:54,620
think there are really three poor as to

00:28:51,380 --> 00:28:58,700
making metrics work on your team the

00:28:54,620 --> 00:29:00,980
first is to measure assess not and I'll

00:28:58,700 --> 00:29:02,000
talk about more talk more about this in

00:29:00,980 --> 00:29:04,040
a minute

00:29:02,000 --> 00:29:06,950
and the other two I'll go into examples

00:29:04,040 --> 00:29:09,200
on but the first is to always measure

00:29:06,950 --> 00:29:12,580
against targets versus measuring

00:29:09,200 --> 00:29:15,320
absolute numbers and finally to never

00:29:12,580 --> 00:29:21,290
measure individual metrics especially

00:29:15,320 --> 00:29:23,500
historical metrics so when people ask me

00:29:21,290 --> 00:29:25,930
you know how do you measure productivity

00:29:23,500 --> 00:29:29,360
how do you measure performance of a

00:29:25,930 --> 00:29:31,580
engineering organization the question I

00:29:29,360 --> 00:29:33,680
ask them is well what does a

00:29:31,580 --> 00:29:36,680
high-performing organization even look

00:29:33,680 --> 00:29:39,560
like right what does it mean to be

00:29:36,680 --> 00:29:41,330
productive and I think what we know it

00:29:39,560 --> 00:29:44,000
doesn't mean what when you picture a

00:29:41,330 --> 00:29:46,070
high-performing organization I don't

00:29:44,000 --> 00:29:48,590
think what we picture is an organization

00:29:46,070 --> 00:29:51,110
that's writing menu lines of code or

00:29:48,590 --> 00:29:54,110
creating many pull requests or has a

00:29:51,110 --> 00:29:55,700
high velocity column right I think when

00:29:54,110 --> 00:29:58,850
you think of a productive organization

00:29:55,700 --> 00:30:00,920
what I picture is a team that is being

00:29:58,850 --> 00:30:03,350
responsive to one other that is

00:30:00,920 --> 00:30:06,410
collaborating efficiently right that has

00:30:03,350 --> 00:30:08,480
really efficient process and this is the

00:30:06,410 --> 00:30:11,060
response I give to people I ask this

00:30:08,480 --> 00:30:13,780
question I tell them that you know when

00:30:11,060 --> 00:30:16,700
we really want to measure productivity

00:30:13,780 --> 00:30:19,460
the the trap is to try to measure output

00:30:16,700 --> 00:30:21,230
but we just looked at how you know our

00:30:19,460 --> 00:30:23,780
ways of measuring output don't really

00:30:21,230 --> 00:30:26,780
work and so what I think better way is

00:30:23,780 --> 00:30:30,290
is to measure process when you measure

00:30:26,780 --> 00:30:32,450
process and when you prove process what

00:30:30,290 --> 00:30:35,420
you ultimately do is increase

00:30:32,450 --> 00:30:36,980
productivity and so it's really another

00:30:35,420 --> 00:30:38,150
means of the same ends of increasing

00:30:36,980 --> 00:30:40,490
productivity

00:30:38,150 --> 00:30:42,260
but and these are some examples of

00:30:40,490 --> 00:30:44,380
process metrics I think what's really

00:30:42,260 --> 00:30:46,970
cool about process metrics is that as

00:30:44,380 --> 00:30:49,430
developers we really care about this

00:30:46,970 --> 00:30:51,560
stuff these are all things that directly

00:30:49,430 --> 00:30:54,230
impact the day to day developer

00:30:51,560 --> 00:30:56,360
experience and when we measure these

00:30:54,230 --> 00:30:58,640
things we not only improve the

00:30:56,360 --> 00:31:01,340
experience for developers but we also

00:30:58,640 --> 00:31:03,260
have concrete numbers that we can use

00:31:01,340 --> 00:31:05,000
the show that our organizations are

00:31:03,260 --> 00:31:07,520
improving so I think measuring process

00:31:05,000 --> 00:31:09,980
is the best thing we can measure today

00:31:07,520 --> 00:31:12,260
to measure and increase productivity

00:31:09,980 --> 00:31:15,020
they give us a great tool to line

00:31:12,260 --> 00:31:17,570
organizations from top to bottom to

00:31:15,020 --> 00:31:20,390
provide executives and managers with

00:31:17,570 --> 00:31:22,580
something vacant used to quantitatively

00:31:20,390 --> 00:31:25,850
Express improvements on their team all

00:31:22,580 --> 00:31:27,020
at the same time creating you know

00:31:25,850 --> 00:31:33,290
improvements in the day to day

00:31:27,020 --> 00:31:35,240
experience of developers so number two

00:31:33,290 --> 00:31:39,350
on the list was to measure against art

00:31:35,240 --> 00:31:41,720
versus absolutes this is this is a chart

00:31:39,350 --> 00:31:43,820
from poll Panda it shows the average

00:31:41,720 --> 00:31:47,240
well it shows a breakdown of code review

00:31:43,820 --> 00:31:49,550
turnaround times on a team and when I

00:31:47,240 --> 00:31:51,170
found with a lot of process metrics is

00:31:49,550 --> 00:31:53,660
that it's interesting to be able to see

00:31:51,170 --> 00:31:55,880
you know what your average code review

00:31:53,660 --> 00:31:58,580
turnaround time is or how it's trending

00:31:55,880 --> 00:32:00,230
that's interesting to see but it's

00:31:58,580 --> 00:32:02,690
really not that useful and as I showed

00:32:00,230 --> 00:32:05,060
earlier with that leaderboard right it

00:32:02,690 --> 00:32:09,820
can also incentivize negative behaviors

00:32:05,060 --> 00:32:12,620
I think that a better approach is to

00:32:09,820 --> 00:32:14,990
measure all these metrics against

00:32:12,620 --> 00:32:17,900
targets that you define right no two

00:32:14,990 --> 00:32:20,960
teams are the same even within an

00:32:17,900 --> 00:32:22,730
organization and so I think the best

00:32:20,960 --> 00:32:25,100
approach for using these metrics is to

00:32:22,730 --> 00:32:27,950
allow every team in an organization to

00:32:25,100 --> 00:32:30,410
define a target so in this example this

00:32:27,950 --> 00:32:33,020
is saying you know team is setting a

00:32:30,410 --> 00:32:35,330
goal of 24 hours as their goal for code

00:32:33,020 --> 00:32:37,760
review turnaround time and then instead

00:32:35,330 --> 00:32:40,070
of measuring just what the average time

00:32:37,760 --> 00:32:42,350
for code reviews is what you're

00:32:40,070 --> 00:32:45,800
measuring is what is our success against

00:32:42,350 --> 00:32:47,960
the goal we've defined right so I think

00:32:45,800 --> 00:32:50,210
this is a much more useful way of using

00:32:47,960 --> 00:32:52,040
these metrics it also prevents those

00:32:50,210 --> 00:32:53,930
negative behaviors we looked at

00:32:52,040 --> 00:32:56,030
and I think this metric is also useful

00:32:53,930 --> 00:32:58,820
for cricketer and managers because they

00:32:56,030 --> 00:33:01,190
provide really simple snapshot and to

00:32:58,820 --> 00:33:04,340
how your team is doing and not measured

00:33:01,190 --> 00:33:07,010
by interpretation of you know whether a

00:33:04,340 --> 00:33:08,840
number to be higher or lower right but

00:33:07,010 --> 00:33:10,850
what this numbers house.you is how is

00:33:08,840 --> 00:33:18,320
how the team doing against the gold vase

00:33:10,850 --> 00:33:20,840
at and the final piece is going back to

00:33:18,320 --> 00:33:24,080
what we talked about earlier I've seen

00:33:20,840 --> 00:33:27,710
almost no cases where measuring

00:33:24,080 --> 00:33:29,780
individual developer stats and showing a

00:33:27,710 --> 00:33:32,120
historic historical number for

00:33:29,780 --> 00:33:34,160
individual developer stats is beneficial

00:33:32,120 --> 00:33:37,720
or at least beneficial enough to

00:33:34,160 --> 00:33:40,760
counteract the negative behaviors and

00:33:37,720 --> 00:33:42,820
they can introduce on our team I found

00:33:40,760 --> 00:33:46,460
that just the mere presence of

00:33:42,820 --> 00:33:48,080
individual metrics can influence teams

00:33:46,460 --> 00:33:50,720
negatively in powerful ways that was an

00:33:48,080 --> 00:33:53,150
example we looked at earlier and so when

00:33:50,720 --> 00:33:55,700
you're starting on a journey of using

00:33:53,150 --> 00:33:58,850
metrics on your team I would advise you

00:33:55,700 --> 00:34:04,910
to measure teams measure metrics based

00:33:58,850 --> 00:34:07,220
on team but not individuals all right

00:34:04,910 --> 00:34:11,570
that's it well thank you very much

00:34:07,220 --> 00:34:14,600
you can find me on Twitter at I'll be if

00:34:11,570 --> 00:34:17,000
you want to talk about metrics and I'll

00:34:14,600 --> 00:34:48,029
be up here taking questions after

00:34:17,000 --> 00:34:48,029

YouTube URL: https://www.youtube.com/watch?v=cRJZldsHS3c


