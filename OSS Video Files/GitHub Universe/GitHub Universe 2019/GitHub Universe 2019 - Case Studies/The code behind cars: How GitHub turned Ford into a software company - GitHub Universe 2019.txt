Title: The code behind cars: How GitHub turned Ford into a software company - GitHub Universe 2019
Publication date: 2019-12-14
Playlist: GitHub Universe 2019 - Case Studies
Description: 
	Presented by Tim Carmean, Central Software Process & Tools Supervisor, and Tom Erickson, Global Software Tools & Processes, Ford

Ford began writing software in the 1980s using assembly on a Motorola 8065 microcontroller to implement electronic fuel injection. Today, there are dozens of Electronic Control Units controlling the features and functions of modern automobiles. Writing code that powers vehicles carries unique environmental and regulatory compliance requirements, including functional safety, emissions, and warranty. Ford is transforming the way they think about software, thanks to GitHub.

This talk will discuss the history of software engineering at Ford, some of the unique requirements and challenges faced in their systemsâ€”and how GitHub is helping them deliver the products their customers want, with the quality they demand at the speed of the modern software industry.

About GitHub Universe:
GitHub Universe is a two-day conference dedicated to the creativity and curiosity of the largest software community in the world. Sessions cover topics from team culture to open source software across industries and technologies.

For more information on GitHub Universe, check the website:
https://githubuniverse.com
Captions: 
	00:00:00,680 --> 00:00:18,929
[Music]

00:00:21,050 --> 00:00:26,070
Henry Ford's affordable car put the

00:00:23,699 --> 00:00:29,250
world on wheels and made mobility

00:00:26,070 --> 00:00:31,710
accessible to everyone to him

00:00:29,250 --> 00:00:34,500
mobility met freedom freedom to choose

00:00:31,710 --> 00:00:37,680
where to live where to work and to play

00:00:34,500 --> 00:00:39,839
that freedom to move literally change

00:00:37,680 --> 00:00:44,010
the human experience and elevated the

00:00:39,839 --> 00:00:46,800
quality of life at Ford Mobility is and

00:00:44,010 --> 00:00:49,409
always has been so much more than just

00:00:46,800 --> 00:00:52,890
getting from point A to point B it's

00:00:49,409 --> 00:00:57,479
about progress human progress thinking

00:00:52,890 --> 00:00:59,939
far beyond the vehicle today we're still

00:00:57,479 --> 00:01:01,710
driven by this innovative mindset one

00:00:59,939 --> 00:01:05,729
that pushes us to challenge traditional

00:01:01,710 --> 00:01:08,700
ways of thinking of working of moving it

00:01:05,729 --> 00:01:12,090
sparks our imagination lets us cultivate

00:01:08,700 --> 00:01:14,040
fresh ideas and new approaches to find

00:01:12,090 --> 00:01:16,770
transportation solutions for a

00:01:14,040 --> 00:01:18,750
constantly changing world a world that's

00:01:16,770 --> 00:01:21,659
constantly challenged by this change

00:01:18,750 --> 00:01:23,759
this mindset is also the beacon that

00:01:21,659 --> 00:01:26,280
guides us as we transform from a

00:01:23,759 --> 00:01:29,039
traditional vehicle manufacturer into a

00:01:26,280 --> 00:01:31,499
true mobility company that offers not

00:01:29,039 --> 00:01:34,469
only bold products but exceptional

00:01:31,499 --> 00:01:37,049
consumer experiences to it smart

00:01:34,469 --> 00:01:40,439
vehicles for a smart world to move

00:01:37,049 --> 00:01:42,929
people safely confidently and freely but

00:01:40,439 --> 00:01:46,530
Ford is more than just steel and lines

00:01:42,929 --> 00:01:49,109
of code Ford is powered by our people

00:01:46,530 --> 00:01:52,469
because as diverse as our products and

00:01:49,109 --> 00:01:55,109
customers so is our company we not only

00:01:52,469 --> 00:01:57,929
celebrate diversity we embrace it

00:01:55,109 --> 00:02:01,499
because it makes us a better a stronger

00:01:57,929 --> 00:02:03,719
and a more robust company Ford is driven

00:02:01,499 --> 00:02:06,899
by our culture and a set of simple

00:02:03,719 --> 00:02:10,560
truths that guide us teach us and remind

00:02:06,899 --> 00:02:13,830
us every day of our purpose to take them

00:02:10,560 --> 00:02:16,950
and be empowered to ask questions to

00:02:13,830 --> 00:02:19,680
challenge customs to never be afraid to

00:02:16,950 --> 00:02:22,200
take an intelligent risk and to make a

00:02:19,680 --> 00:02:24,989
real difference and like it's always

00:02:22,200 --> 00:02:27,300
been at Ford it's working together from

00:02:24,989 --> 00:02:30,269
every corner of the globe to build great

00:02:27,300 --> 00:02:32,670
products to craft remarkable solutions

00:02:30,269 --> 00:02:35,849
to give back to the communities we serve

00:02:32,670 --> 00:02:39,030
and to collectively achieve something

00:02:35,849 --> 00:02:42,780
really meaningful it's making people's

00:02:39,030 --> 00:02:45,860
lives better and once again changing the

00:02:42,780 --> 00:02:45,860
way the world moves

00:02:45,940 --> 00:02:49,000
[Music]

00:03:16,720 --> 00:03:21,650
hey guys thanks for responding to my

00:03:19,520 --> 00:03:23,090
text so quickly follow me so I've got

00:03:21,650 --> 00:03:25,300
something really cool for you guys to

00:03:23,090 --> 00:03:25,300
take

00:03:26,160 --> 00:03:28,190
Oh

00:03:29,710 --> 00:03:38,290
[Music]

00:03:38,780 --> 00:03:46,170
this is pretty cool it really is Ford

00:03:41,760 --> 00:03:47,940
Mustang gt500 awesome man I mean perfect

00:03:46,170 --> 00:03:49,950
for the code-behind cards right half

00:03:47,940 --> 00:03:52,050
just and then control along 1.5 million

00:03:49,950 --> 00:03:54,630
lines of code wild into l8 meg flap

00:03:52,050 --> 00:03:55,890
Infineon trike or banner maker it's

00:03:54,630 --> 00:03:57,630
perfect for all the features in this

00:03:55,890 --> 00:03:58,980
thing so hey I'm glad you guys are

00:03:57,630 --> 00:04:00,360
excited so what are you gonna talk about

00:03:58,980 --> 00:04:02,100
at this conference yeah we're talking

00:04:00,360 --> 00:04:03,570
about how to get up his help a step up

00:04:02,100 --> 00:04:05,010
our software engineering game and

00:04:03,570 --> 00:04:07,530
setting us up for the future of how the

00:04:05,010 --> 00:04:10,110
world moves awesome get the word out

00:04:07,530 --> 00:04:12,890
there be safe have fun have a good trip

00:04:10,110 --> 00:04:12,890
alright thanks

00:04:15,290 --> 00:04:23,100
[Music]

00:04:26,160 --> 00:04:35,009
[Music]

00:04:37,240 --> 00:04:40,329
[Music]

00:04:41,680 --> 00:04:44,749
all right Jim Jim is this the right

00:04:44,240 --> 00:04:47,629
place

00:04:44,749 --> 00:04:49,479
how were united yeah I think so all

00:04:47,629 --> 00:04:51,650
right we're in the right place okay cool

00:04:49,479 --> 00:04:54,379
all right we're finally a good hub

00:04:51,650 --> 00:04:56,449
universe Tim yeah hey so what kind of

00:04:54,379 --> 00:04:58,779
engine that thing having it oh that's

00:04:56,449 --> 00:05:03,409
right I didn't let you drive

00:04:58,779 --> 00:05:05,840
it's a 5.2 liter v8 supercharged 760

00:05:03,409 --> 00:05:09,710
horsepower with a 7-speed dual-clutch

00:05:05,840 --> 00:05:12,529
transmission so not really that

00:05:09,710 --> 00:05:12,919
interesting well you have to drive it

00:05:12,529 --> 00:05:15,319
Jim

00:05:12,919 --> 00:05:17,029
so hello everybody I'm Tom Erickson from

00:05:15,319 --> 00:05:18,590
the powertrain division of Ford Motor

00:05:17,029 --> 00:05:21,439
Company and I'm here to talk about

00:05:18,590 --> 00:05:23,060
software and my name is Tim Kerr mian

00:05:21,439 --> 00:05:27,110
and I'm from the electrical and

00:05:23,060 --> 00:05:28,759
electronics division so today we're

00:05:27,110 --> 00:05:31,400
gonna talk I'm gonna cover it's the

00:05:28,759 --> 00:05:34,370
story of our software and powertrain and

00:05:31,400 --> 00:05:36,529
I'm gonna talk about our what it took to

00:05:34,370 --> 00:05:39,080
get github Enterprise into Ford Motor

00:05:36,529 --> 00:05:42,949
Company and some of the DevOps stuff

00:05:39,080 --> 00:05:45,500
we've been working on with powertrain so

00:05:42,949 --> 00:05:47,270
I started at Ford in 1991 and I didn't

00:05:45,500 --> 00:05:48,589
realize that was a pivotal time in

00:05:47,270 --> 00:05:50,719
software development at Ford Motor

00:05:48,589 --> 00:05:52,370
Company we didn't really use the term

00:05:50,719 --> 00:05:55,129
software engineer we call them

00:05:52,370 --> 00:05:58,039
strategists so the software was a big

00:05:55,129 --> 00:05:59,960
part of our control systems so when I

00:05:58,039 --> 00:06:01,699
first started I was working on one of

00:05:59,960 --> 00:06:05,659
the first generations of electronic

00:06:01,699 --> 00:06:08,000
engine control systems our equation of

00:06:05,659 --> 00:06:10,310
software systems but we focus a lot more

00:06:08,000 --> 00:06:13,819
on the controls and we developed a

00:06:10,310 --> 00:06:16,069
custom microprocessor 8061 but with

00:06:13,819 --> 00:06:18,199
Intel so it's based on the ad 886

00:06:16,069 --> 00:06:19,759
architecture now a lot of this switch

00:06:18,199 --> 00:06:23,089
why did we need electronic energy

00:06:19,759 --> 00:06:24,770
control well emissions was until in

00:06:23,089 --> 00:06:28,250
getting more and more challenging and so

00:06:24,770 --> 00:06:30,469
we needed to improve the performance of

00:06:28,250 --> 00:06:32,419
the system and eliminate some of the

00:06:30,469 --> 00:06:35,300
mechanical where that came from

00:06:32,419 --> 00:06:37,399
normal mechanical systems so all the

00:06:35,300 --> 00:06:39,620
source code was really assembly language

00:06:37,399 --> 00:06:42,020
we had a some custom opcode that was

00:06:39,620 --> 00:06:43,909
responsible for the new 8061

00:06:42,020 --> 00:06:46,789
our software architecture might look a

00:06:43,909 --> 00:06:48,030
little simple back then it was a single

00:06:46,789 --> 00:06:50,220
loop with interrupts

00:06:48,030 --> 00:06:52,020
based on the ignition firing order so

00:06:50,220 --> 00:06:54,260
one four to three is the firing order of

00:06:52,020 --> 00:06:58,230
a four-cylinder engine

00:06:54,260 --> 00:07:00,510
so the 8061 didn't include an on-chip

00:06:58,230 --> 00:07:03,570
memory at that point in time so when I

00:07:00,510 --> 00:07:06,120
first started that the chip on the upper

00:07:03,570 --> 00:07:08,640
left the 32 kuv EEPROM was wife and was

00:07:06,120 --> 00:07:10,740
my friends we would develop with that

00:07:08,640 --> 00:07:13,320
the one below it in the center is the

00:07:10,740 --> 00:07:15,210
actual production chip that is the a

00:07:13,320 --> 00:07:17,010
squared problem it did allow us to

00:07:15,210 --> 00:07:19,320
reprogram at least way back then

00:07:17,010 --> 00:07:21,120
eventually we evolved and got more and

00:07:19,320 --> 00:07:23,430
more memory so memory became a big part

00:07:21,120 --> 00:07:25,650
of our lives all of our code would just

00:07:23,430 --> 00:07:27,720
package into the small tiny memory so we

00:07:25,650 --> 00:07:29,880
have sector maps created for the

00:07:27,720 --> 00:07:32,190
assembly code and then the calibration

00:07:29,880 --> 00:07:34,200
data was separate on purpose we have

00:07:32,190 --> 00:07:36,840
built our code embed it and then we

00:07:34,200 --> 00:07:39,000
could modify the calibration data on the

00:07:36,840 --> 00:07:40,860
fly in the dynamometer or in the vehicle

00:07:39,000 --> 00:07:43,260
so that was a big part we had custom

00:07:40,860 --> 00:07:47,130
tools developed to really capture the

00:07:43,260 --> 00:07:51,030
calibration data itself so at Ford in

00:07:47,130 --> 00:07:53,460
the 70s and 80s our data processing

00:07:51,030 --> 00:07:55,229
group which later became IT really was

00:07:53,460 --> 00:07:56,550
embedded with digital at that time we

00:07:55,229 --> 00:07:59,040
grabbed some of their servers and

00:07:56,550 --> 00:08:01,440
started to develop our own tools to

00:07:59,040 --> 00:08:03,510
support software so you can see that we

00:08:01,440 --> 00:08:05,880
had to cut to develop a custom cross

00:08:03,510 --> 00:08:07,770
assembler for that new opcode we also

00:08:05,880 --> 00:08:09,780
had to do some change management tools

00:08:07,770 --> 00:08:11,340
since we really wasn't a lot of change

00:08:09,780 --> 00:08:13,380
management tools in the market at that

00:08:11,340 --> 00:08:15,150
time and then data management that

00:08:13,380 --> 00:08:16,919
special calibration data was really

00:08:15,150 --> 00:08:19,110
required so we had a whole bunch of

00:08:16,919 --> 00:08:22,020
custom tools all the code was was

00:08:19,110 --> 00:08:23,880
managed in a CMS tool from digital which

00:08:22,020 --> 00:08:26,160
maybe you guys have heard about that

00:08:23,880 --> 00:08:28,530
maybe not and then we had developed our

00:08:26,160 --> 00:08:30,330
own custom Asics so those were important

00:08:28,530 --> 00:08:32,909
application specific icees were were

00:08:30,330 --> 00:08:36,120
just you know a big part of the control

00:08:32,909 --> 00:08:38,339
system itself so evolution always

00:08:36,120 --> 00:08:40,229
happens electronics and in the 90s we

00:08:38,339 --> 00:08:42,810
really started to be a part of the

00:08:40,229 --> 00:08:45,240
ongoing telecom industry as chipset

00:08:42,810 --> 00:08:47,460
started to really embed more so we knew

00:08:45,240 --> 00:08:50,310
want it we had an opportunity to upgrade

00:08:47,460 --> 00:08:52,410
the 8061 to what we called in 1865 and

00:08:50,310 --> 00:08:54,420
then we included a lot of those custom

00:08:52,410 --> 00:08:57,300
Asics in the chip but we still didn't

00:08:54,420 --> 00:08:58,800
have on on-chip memory and we still had

00:08:57,300 --> 00:09:00,839
assembler code and we call this our

00:08:58,800 --> 00:09:01,870
generate our fifth generation and this

00:09:00,839 --> 00:09:04,810
was the actual

00:09:01,870 --> 00:09:07,210
model that fully eliminated carburetors

00:09:04,810 --> 00:09:09,610
globally prior to that the ich four was

00:09:07,210 --> 00:09:11,980
a US base and so we extended out in fact

00:09:09,610 --> 00:09:13,720
in 91 when I first started that's when I

00:09:11,980 --> 00:09:15,310
was a part of the International

00:09:13,720 --> 00:09:16,630
powertrain programs where we were

00:09:15,310 --> 00:09:18,190
implementing some of these control

00:09:16,630 --> 00:09:20,770
systems for other markets like South

00:09:18,190 --> 00:09:26,100
America and Europe and successfully

00:09:20,770 --> 00:09:28,990
eliminated carburetors so assembly code

00:09:26,100 --> 00:09:31,720
not necessarily most effective for us

00:09:28,990 --> 00:09:33,940
and we wanted to expand and and leverage

00:09:31,720 --> 00:09:36,210
some of the newer capabilities so C code

00:09:33,940 --> 00:09:38,920
was a pretty natural migration for us in

00:09:36,210 --> 00:09:41,740
1992 atria launched rational clearcase

00:09:38,920 --> 00:09:43,960
and so by 94 if we had that running in

00:09:41,740 --> 00:09:46,000
our own systems at Ford and that really

00:09:43,960 --> 00:09:48,850
gave us a little chance to share our

00:09:46,000 --> 00:09:50,950
code a little more control labeling of

00:09:48,850 --> 00:09:52,750
the code and so forth but really we

00:09:50,950 --> 00:09:55,060
still needed to evolve PowerPC the

00:09:52,750 --> 00:09:57,330
risk-based processors were new and we

00:09:55,060 --> 00:10:00,670
wanted to get on board with that

00:09:57,330 --> 00:10:02,650
so our continued to changed we you know

00:10:00,670 --> 00:10:04,690
we do a lot all the software in-house so

00:10:02,650 --> 00:10:06,910
we developed our own real-time operating

00:10:04,690 --> 00:10:09,730
system that allowed us to create feature

00:10:06,910 --> 00:10:12,190
code that now expanded the content well

00:10:09,730 --> 00:10:13,930
beyond the hundred or so features we

00:10:12,190 --> 00:10:16,060
were doing at that time all the driver

00:10:13,930 --> 00:10:16,930
code for all the hardware interfaces and

00:10:16,060 --> 00:10:19,120
other Asics

00:10:16,930 --> 00:10:21,220
we're also embedded there and we had

00:10:19,120 --> 00:10:23,140
more loops that we could leverage so all

00:10:21,220 --> 00:10:25,779
the feature engineers could actually

00:10:23,140 --> 00:10:27,190
start to leverage those individual loop

00:10:25,779 --> 00:10:31,870
times for whatever was important for

00:10:27,190 --> 00:10:34,390
their control systems now we were

00:10:31,870 --> 00:10:36,279
already global Ford's been actually

00:10:34,390 --> 00:10:40,089
global since the beginning of the

00:10:36,279 --> 00:10:41,680
company in the 1990 no three so we were

00:10:40,089 --> 00:10:44,830
already global but our feature set was

00:10:41,680 --> 00:10:46,750
growing beyond 200 so we really had to

00:10:44,830 --> 00:10:48,760
start multi citing our clearcase all

00:10:46,750 --> 00:10:50,920
over the country all over the world and

00:10:48,760 --> 00:10:52,990
so I had served my team had servers in

00:10:50,920 --> 00:10:55,300
Australia Brazil and Europe and

00:10:52,990 --> 00:10:57,970
clearcase really started to have a lot

00:10:55,300 --> 00:11:00,790
of admin overhead now I had custom tools

00:10:57,970 --> 00:11:04,950
custom scripts multi-sided code

00:11:00,790 --> 00:11:08,350
everywhere it was a very big challenge

00:11:04,950 --> 00:11:09,790
and at the same time every other system

00:11:08,350 --> 00:11:11,500
in the vehicle started really developing

00:11:09,790 --> 00:11:15,339
their own digital control systems or

00:11:11,500 --> 00:11:15,760
interfaces so as those teams started up

00:11:15,339 --> 00:11:18,010
they would

00:11:15,760 --> 00:11:19,360
choose other tools so I had we had lived

00:11:18,010 --> 00:11:21,370
enclaves of different toolsets

00:11:19,360 --> 00:11:24,399
throughout the company so that really

00:11:21,370 --> 00:11:26,290
drove us to to to get some sort of

00:11:24,399 --> 00:11:28,000
commonality you know the powertrain was

00:11:26,290 --> 00:11:29,800
already pretty agile we were running

00:11:28,000 --> 00:11:31,750
even in the 90s we could do build

00:11:29,800 --> 00:11:33,100
software on a weekly basis all those

00:11:31,750 --> 00:11:36,430
other teams were working with supplier

00:11:33,100 --> 00:11:38,470
partners and so oftentimes it would be a

00:11:36,430 --> 00:11:40,690
three month turnaround or old waterfall

00:11:38,470 --> 00:11:43,209
models where the things that would take

00:11:40,690 --> 00:11:45,010
forever to come out and so our vehicle

00:11:43,209 --> 00:11:47,050
teams were really super frustrated with

00:11:45,010 --> 00:11:49,149
you know powertrains there all the time

00:11:47,050 --> 00:11:51,220
and then Nevada the body considered

00:11:49,149 --> 00:11:52,899
module or restraints module I got to

00:11:51,220 --> 00:11:57,699
wait three months so that was a big

00:11:52,899 --> 00:12:00,870
challenge for us so what are our key

00:11:57,699 --> 00:12:02,800
challenges we have a big legacy in our

00:12:00,870 --> 00:12:05,470
powertrain systems that are very

00:12:02,800 --> 00:12:07,570
parochial I run my own data center right

00:12:05,470 --> 00:12:11,320
now I have a number of servers that are

00:12:07,570 --> 00:12:12,850
really kind of limited and therefore I

00:12:11,320 --> 00:12:16,050
can't scale this for all those other

00:12:12,850 --> 00:12:18,970
teams that need infrastructure and tools

00:12:16,050 --> 00:12:21,519
I'm not that old data center I just got

00:12:18,970 --> 00:12:24,190
a message overnight that it was over

00:12:21,519 --> 00:12:25,870
temping so I need to get out of that we

00:12:24,190 --> 00:12:28,060
need standard methods across all of our

00:12:25,870 --> 00:12:29,680
software community and our vehicles are

00:12:28,060 --> 00:12:31,660
starting to get platforms that can

00:12:29,680 --> 00:12:34,569
distribute our features across the whole

00:12:31,660 --> 00:12:36,790
network so a full network in the vehicle

00:12:34,569 --> 00:12:38,470
is our future so development tool stack

00:12:36,790 --> 00:12:41,319
has really needed that can be integrated

00:12:38,470 --> 00:12:47,560
and leveraged let's go and this is where

00:12:41,319 --> 00:12:51,190
I step in all right he stepped in it so

00:12:47,560 --> 00:12:53,880
in 2014 I was working in our research

00:12:51,190 --> 00:12:56,620
and advanced infotainment department and

00:12:53,880 --> 00:12:59,500
at that time our mission was to I

00:12:56,620 --> 00:13:01,060
develop prototype software to provide

00:12:59,500 --> 00:13:04,089
new infotainment experiences to our

00:13:01,060 --> 00:13:07,149
customers to support this effort we kind

00:13:04,089 --> 00:13:11,709
of needed a newer modern tool chain that

00:13:07,149 --> 00:13:18,010
would support like a fail fast and ship

00:13:11,709 --> 00:13:19,630
often sort of mentality and having an

00:13:18,010 --> 00:13:21,670
open-source background from college I

00:13:19,630 --> 00:13:24,519
gravitated towards the tool towards the

00:13:21,670 --> 00:13:27,939
toolset in that space so git was

00:13:24,519 --> 00:13:29,059
obviously at the center of that part of

00:13:27,939 --> 00:13:32,179
this

00:13:29,059 --> 00:13:34,899
this newer effort was to be partnering

00:13:32,179 --> 00:13:36,649
with universities and other like

00:13:34,899 --> 00:13:41,749
non-traditional suppliers in the

00:13:36,649 --> 00:13:44,329
automotive space so I took a took a page

00:13:41,749 --> 00:13:46,989
took a note from my buddy Gotham he

00:13:44,329 --> 00:13:50,539
teaches at Michigan Tech University and

00:13:46,989 --> 00:13:53,929
part of his coursework he teaches how to

00:13:50,539 --> 00:13:55,999
use git and how to use github and that's

00:13:53,929 --> 00:13:58,729
how that's how his students turn in

00:13:55,999 --> 00:13:59,899
homework so if you're not using if

00:13:58,729 --> 00:14:01,369
you're not version controlling your

00:13:59,899 --> 00:14:04,129
stuff and get and you're not submitting

00:14:01,369 --> 00:14:05,799
a pull request in github you're not

00:14:04,129 --> 00:14:08,569
getting full credit on your assignment

00:14:05,799 --> 00:14:10,869
and so what this means is that you know

00:14:08,569 --> 00:14:13,489
this is one example of many where

00:14:10,869 --> 00:14:17,449
students are learning these newer modern

00:14:13,489 --> 00:14:18,679
tools in University and Tom's gonna talk

00:14:17,449 --> 00:14:23,269
a little bit more about why that's

00:14:18,679 --> 00:14:25,249
important in a little later so after a

00:14:23,269 --> 00:14:28,219
short tools comparison we landed on

00:14:25,249 --> 00:14:31,069
github enterprise and our purchasing

00:14:28,219 --> 00:14:33,679
folks negotiated a deal where we could

00:14:31,069 --> 00:14:35,329
get a small price break if we bought two

00:14:33,679 --> 00:14:38,449
hundred and fifty seats instead of a

00:14:35,329 --> 00:14:42,199
hundred that we that we were planning

00:14:38,449 --> 00:14:44,329
for and so with some and with some help

00:14:42,199 --> 00:14:46,039
from some friends and IT we managed to

00:14:44,329 --> 00:14:48,529
get github enterprise up and running in

00:14:46,039 --> 00:14:51,589
a few hours once all that once all the

00:14:48,529 --> 00:14:55,279
license details were worked out not even

00:14:51,589 --> 00:14:58,339
know what get was at that point so it

00:14:55,279 --> 00:15:00,859
took about a month - for word-of-mouth

00:14:58,339 --> 00:15:03,699
to spread that somebody was running an

00:15:00,859 --> 00:15:06,499
instance at github in the in the company

00:15:03,699 --> 00:15:10,039
so since I had a hundred and fifty extra

00:15:06,499 --> 00:15:11,569
seats I kind of instituted a policy you

00:15:10,039 --> 00:15:13,429
know if you want to come and kick the

00:15:11,569 --> 00:15:14,629
tires on this thing you know I've got

00:15:13,429 --> 00:15:16,459
extra seats but you got to understand

00:15:14,629 --> 00:15:19,819
the ground rules right this thing's in a

00:15:16,459 --> 00:15:21,469
lab it's not backed up right and there's

00:15:19,819 --> 00:15:23,539
no uptime guarantee or anything like

00:15:21,469 --> 00:15:25,299
that and I made people promise like hey

00:15:23,539 --> 00:15:26,959
you can't put production code in here

00:15:25,299 --> 00:15:29,929
obviously you can see where this is

00:15:26,959 --> 00:15:34,479
going of course they put production code

00:15:29,929 --> 00:15:37,159
in there yeah so what I didn't realize

00:15:34,479 --> 00:15:38,809
as I was handing out these seats to

00:15:37,159 --> 00:15:41,749
people that I didn't know inside of the

00:15:38,809 --> 00:15:42,580
company the people that I was handing

00:15:41,749 --> 00:15:44,770
these out to

00:15:42,580 --> 00:15:46,030
the engineers in our in our IT

00:15:44,770 --> 00:15:50,950
department that were architecting our

00:15:46,030 --> 00:15:54,070
next-generation data center so this is

00:15:50,950 --> 00:15:55,690
by this time we're in like 2015 github

00:15:54,070 --> 00:15:56,560
hadn't officially launched yet it was

00:15:55,690 --> 00:15:59,650
already a critical piece of

00:15:56,560 --> 00:16:01,150
infrastructure in the company and I

00:15:59,650 --> 00:16:03,070
think you know one of the coolest

00:16:01,150 --> 00:16:04,540
examples i I've learned from those guys

00:16:03,070 --> 00:16:05,920
that were that were architecting the

00:16:04,540 --> 00:16:07,930
next-gen data center is how they manage

00:16:05,920 --> 00:16:09,700
the load balancer so it's you know it's

00:16:07,930 --> 00:16:11,080
a modern load balancer it's got a web

00:16:09,700 --> 00:16:12,970
interface and everything like that

00:16:11,080 --> 00:16:14,820
that they can use to configure it but

00:16:12,970 --> 00:16:17,500
they lock that interfacing to read-only

00:16:14,820 --> 00:16:21,430
if you want to make a change on the load

00:16:17,500 --> 00:16:24,640
balancer I you have to open up a pull

00:16:21,430 --> 00:16:26,680
request to the repo and that kit fires

00:16:24,640 --> 00:16:29,530
off a web hook which kicks off a full C

00:16:26,680 --> 00:16:32,080
ICD pipeline that goes through all the

00:16:29,530 --> 00:16:33,820
CI checks and if everything passes it

00:16:32,080 --> 00:16:36,100
actually merges the pull request and

00:16:33,820 --> 00:16:39,580
deploys the code to the load balancer I

00:16:36,100 --> 00:16:42,280
think that's pretty cool yeah from a you

00:16:39,580 --> 00:16:43,630
know forward perspective who knew right

00:16:42,280 --> 00:16:47,440
yeah true software-defined

00:16:43,630 --> 00:16:50,770
infrastructure also in the summer of

00:16:47,440 --> 00:16:54,970
2016 we launched to get up Enterprise to

00:16:50,770 --> 00:16:56,980
about 500 devs so by 2017 our

00:16:54,970 --> 00:17:00,040
infotainment teams were really going

00:16:56,980 --> 00:17:02,110
strong delivery more it became more and

00:17:00,040 --> 00:17:07,089
more challenging so we really needed to

00:17:02,110 --> 00:17:09,640
develop something new and so a task

00:17:07,089 --> 00:17:10,990
force was put together Tim and I and a

00:17:09,640 --> 00:17:13,150
number of other team members from

00:17:10,990 --> 00:17:15,490
powertrain infotainment core software

00:17:13,150 --> 00:17:17,740
input in information technology really

00:17:15,490 --> 00:17:20,110
wanted to create a ubiquitous set of

00:17:17,740 --> 00:17:22,120
tools that we can really consents on and

00:17:20,110 --> 00:17:24,190
use it for and really came up with this

00:17:22,120 --> 00:17:27,190
mantra tools to be simple to use

00:17:24,190 --> 00:17:30,220
powerful easy easily integrated so that

00:17:27,190 --> 00:17:32,500
develop teams can really deliver so I

00:17:30,220 --> 00:17:35,170
told Tim I said okay I'm in clear case I

00:17:32,500 --> 00:17:37,660
I can't I got all my build environment

00:17:35,170 --> 00:17:40,870
embedded in this customs said oh I need

00:17:37,660 --> 00:17:42,850
a new build environment so we decided

00:17:40,870 --> 00:17:44,470
that my team is I didn't have enough

00:17:42,850 --> 00:17:46,870
team members or people I couldn't just

00:17:44,470 --> 00:17:49,090
just drop stop production I had to do

00:17:46,870 --> 00:17:50,800
something so we discussed it we said we

00:17:49,090 --> 00:17:52,840
know what we have this great internship

00:17:50,800 --> 00:17:55,360
programs and co-op students and early

00:17:52,840 --> 00:17:56,410
graduates on rotational programs we need

00:17:55,360 --> 00:17:58,480
to leverage that

00:17:56,410 --> 00:18:00,430
github knowledge that they've gotten

00:17:58,480 --> 00:18:02,740
developed in college so we brought those

00:18:00,430 --> 00:18:04,390
team members on board and and we called

00:18:02,740 --> 00:18:07,360
and so I'm a little bit of a history

00:18:04,390 --> 00:18:09,010
buff so automotive history is one of my

00:18:07,360 --> 00:18:10,450
favorite things and one of the big parts

00:18:09,010 --> 00:18:12,280
of the Ford Motor Company when Henry

00:18:10,450 --> 00:18:14,530
Ford passed away henry ford ii took over

00:18:12,280 --> 00:18:16,510
he was 28 years old when he took over

00:18:14,530 --> 00:18:17,950
Ford Motor Company and so he didn't know

00:18:16,510 --> 00:18:19,870
how to run the company very well he

00:18:17,950 --> 00:18:22,330
hired a whole bunch of young executives

00:18:19,870 --> 00:18:24,250
and that's them there in 1946 and they

00:18:22,330 --> 00:18:25,840
were called the whiz kids so I I

00:18:24,250 --> 00:18:28,780
immediately started calling my young

00:18:25,840 --> 00:18:29,980
people with kids and so thanks a lot to

00:18:28,780 --> 00:18:32,290
those guys that are out there a couple

00:18:29,980 --> 00:18:34,120
of one of them's here today and they

00:18:32,290 --> 00:18:39,370
really helped us to accelerate the

00:18:34,120 --> 00:18:41,440
delivery of our pipeline yeah so the

00:18:39,370 --> 00:18:43,980
first thing that we did was we we pulled

00:18:41,440 --> 00:18:47,910
a powertrain application out of

00:18:43,980 --> 00:18:51,130
clearcase and we put it into github in a

00:18:47,910 --> 00:18:54,010
monolithic repo or a mono repo we knew

00:18:51,130 --> 00:18:55,780
going in that mono repo wasn't going to

00:18:54,010 --> 00:18:57,460
be up to the task of handling the

00:18:55,780 --> 00:18:59,200
complexity of our development patterns

00:18:57,460 --> 00:19:04,420
but our goal was just to get the thing

00:18:59,200 --> 00:19:05,920
to build so getting getting code out of

00:19:04,420 --> 00:19:08,860
clearcase and into github is a

00:19:05,920 --> 00:19:11,890
non-trivial task and it challenged you

00:19:08,860 --> 00:19:13,540
know our group of whiz kids to write

00:19:11,890 --> 00:19:15,310
some you know custom scripts and some

00:19:13,540 --> 00:19:18,550
automation to help make that go a little

00:19:15,310 --> 00:19:22,180
smoother so they spent three months just

00:19:18,550 --> 00:19:24,580
straight-up hacking the make files to

00:19:22,180 --> 00:19:27,160
unwind all the hooks that clearcase has

00:19:24,580 --> 00:19:30,100
in it had had in them from the you know

00:19:27,160 --> 00:19:31,630
current production build process I'm a

00:19:30,100 --> 00:19:38,130
little bit different kind of a history

00:19:31,630 --> 00:19:40,690
buff so the whiz kids got us to a point

00:19:38,130 --> 00:19:44,230
where we had a solid demo that we could

00:19:40,690 --> 00:19:46,510
show to get buy-in and so then we

00:19:44,230 --> 00:19:50,530
started to take a look at you know mono

00:19:46,510 --> 00:19:53,920
repo and we need to decide you know

00:19:50,530 --> 00:19:59,110
where do we put the complexity of you

00:19:53,920 --> 00:20:00,610
know of our of our software right so we

00:19:59,110 --> 00:20:02,260
started to look at sub modules but we

00:20:00,610 --> 00:20:03,880
decided that you know sub modules kind

00:20:02,260 --> 00:20:05,380
of push the complexity down to the

00:20:03,880 --> 00:20:07,420
developer so now that's one extra thing

00:20:05,380 --> 00:20:09,480
for them to manage and we didn't want to

00:20:07,420 --> 00:20:10,710
do that is

00:20:09,480 --> 00:20:13,650
that's when we started engaging with

00:20:10,710 --> 00:20:16,350
github services so in early 2018 we

00:20:13,650 --> 00:20:18,120
talked to get up services and you know a

00:20:16,350 --> 00:20:20,760
couple months later that's when that's

00:20:18,120 --> 00:20:22,919
when Jared from github join joined our

00:20:20,760 --> 00:20:28,470
team to help us out with who you know

00:20:22,919 --> 00:20:31,650
with our DevOps journey so our our sort

00:20:28,470 --> 00:20:34,530
of strategy we kind of demoed in our

00:20:31,650 --> 00:20:36,090
current build process where in clearcase

00:20:34,530 --> 00:20:39,980
we have an app list file that kind of

00:20:36,090 --> 00:20:41,850
describes what the build looks like and

00:20:39,980 --> 00:20:43,650
Jared thought that we could get

00:20:41,850 --> 00:20:45,600
something similar going with Jenkins and

00:20:43,650 --> 00:20:52,320
we started calling this concept and

00:20:45,600 --> 00:20:54,900
manifest so the manifest is a is a yeah

00:20:52,320 --> 00:20:56,730
Mel structure it's readable by humans

00:20:54,900 --> 00:20:58,860
machines can be auto-generated it's

00:20:56,730 --> 00:21:01,710
pretty cool I didn't take this very long

00:20:58,860 --> 00:21:03,120
at all to get our mono repo building and

00:21:01,710 --> 00:21:06,600
we liked it because we could you know

00:21:03,120 --> 00:21:09,030
cascade this this you know definition

00:21:06,600 --> 00:21:11,190
file to various layers of the codebase

00:21:09,030 --> 00:21:13,200
so it was extensible it was flexible it

00:21:11,190 --> 00:21:16,350
could operate at many many different

00:21:13,200 --> 00:21:18,660
layers of the architecture so after we

00:21:16,350 --> 00:21:20,640
had that kind of figured out we took a

00:21:18,660 --> 00:21:23,520
look at the components themselves or the

00:21:20,640 --> 00:21:25,500
smallest unit of you know of the code

00:21:23,520 --> 00:21:28,169
code base and we're looking at like a

00:21:25,500 --> 00:21:31,260
one-to-one component to repo sort of

00:21:28,169 --> 00:21:34,340
relationship so we have about 250 of

00:21:31,260 --> 00:21:37,140
those in our in our current context and

00:21:34,340 --> 00:21:40,320
the build process for those is more or

00:21:37,140 --> 00:21:42,990
less the same so we took we took

00:21:40,320 --> 00:21:45,690
advantage of Jenkins class libraries to

00:21:42,990 --> 00:21:48,059
abstract a lot of that out which left us

00:21:45,690 --> 00:21:50,250
with simple one to two line Jenkins

00:21:48,059 --> 00:21:52,710
files we really like this pattern

00:21:50,250 --> 00:21:55,590
because if we needed to update the build

00:21:52,710 --> 00:21:57,000
process for any reason we all we have to

00:21:55,590 --> 00:21:59,010
do is submit a pull request to one

00:21:57,000 --> 00:22:01,350
repository to change the the class

00:21:59,010 --> 00:22:03,000
library and all 250 components

00:22:01,350 --> 00:22:07,679
automatically consume that as soon as

00:22:03,000 --> 00:22:09,600
the PR emerges so the next part was how

00:22:07,679 --> 00:22:11,820
to spawn how do we how do we kick off

00:22:09,600 --> 00:22:15,000
these builds how do we spawn them right

00:22:11,820 --> 00:22:17,340
so given again that all these 250

00:22:15,000 --> 00:22:18,720
components are more or less the same

00:22:17,340 --> 00:22:21,210
from a build perspective they all use

00:22:18,720 --> 00:22:23,340
the same tools you know use the same you

00:22:21,210 --> 00:22:24,840
know process to build can't

00:22:23,340 --> 00:22:26,400
to make a lot of sense we could build

00:22:24,840 --> 00:22:29,910
one containers wanded up multiple

00:22:26,400 --> 00:22:32,280
multiple times and they you know get get

00:22:29,910 --> 00:22:33,780
things to work that way and I really

00:22:32,280 --> 00:22:35,280
loved that because you know I've got

00:22:33,780 --> 00:22:38,010
this data center of old servers I'm

00:22:35,280 --> 00:22:40,200
constrained I need a fully elastic

00:22:38,010 --> 00:22:40,560
capable containerized system yeah that's

00:22:40,200 --> 00:22:43,050
right

00:22:40,560 --> 00:22:45,420
so you know our IT department runs a

00:22:43,050 --> 00:22:47,220
runs a kubernetes cluster internally as

00:22:45,420 --> 00:22:49,530
part of this you know next-gen data

00:22:47,220 --> 00:22:50,610
center effort and I co manage what we

00:22:49,530 --> 00:22:53,760
call the software development ecosystem

00:22:50,610 --> 00:22:55,260
product and our mantra and that team is

00:22:53,760 --> 00:22:56,520
kind of like no matter what kind of

00:22:55,260 --> 00:22:59,070
software you're developing there's a

00:22:56,520 --> 00:23:00,870
common set of tools that that you kind

00:22:59,070 --> 00:23:03,120
of need in order to be productive

00:23:00,870 --> 00:23:05,330
two of those tools in our opinion inside

00:23:03,120 --> 00:23:10,620
of our company are github in Jenkins

00:23:05,330 --> 00:23:13,260
and so as part of our Jenkins work we we

00:23:10,620 --> 00:23:15,450
developed we developed a pattern of

00:23:13,260 --> 00:23:19,410
running Jenkins inside a kubernetes we

00:23:15,450 --> 00:23:21,210
call it Jenkins and using Jen Cates we

00:23:19,410 --> 00:23:22,860
took our powertrain build from 45

00:23:21,210 --> 00:23:24,810
minutes in the current production

00:23:22,860 --> 00:23:26,670
context down to 10 minutes

00:23:24,810 --> 00:23:28,680
and Jared actually think that we can get

00:23:26,670 --> 00:23:31,050
this down to four boy that sounds

00:23:28,680 --> 00:23:33,360
awesome to me and what's really elastic

00:23:31,050 --> 00:23:35,670
I can expand can't go I need them sorry

00:23:33,360 --> 00:23:36,990
I need ya that's t hey he needs the

00:23:35,670 --> 00:23:39,930
capacity and what's really cool is a

00:23:36,990 --> 00:23:41,160
couple of weeks ago we actually ooh we

00:23:39,930 --> 00:23:43,530
actually took this whole thing and

00:23:41,160 --> 00:23:45,090
dropped it into Azure just to see if we

00:23:43,530 --> 00:23:48,030
could and all it took was a one-line

00:23:45,090 --> 00:23:49,710
code change and it was awesome so if you

00:23:48,030 --> 00:23:51,360
think about it this this whole concept

00:23:49,710 --> 00:23:56,340
really isn't all that different from the

00:23:51,360 --> 00:23:57,840
from the assembly line so this is gonna

00:23:56,340 --> 00:23:59,610
you know kind of bring us to the end of

00:23:57,840 --> 00:24:01,350
our talk but I just wanted to share some

00:23:59,610 --> 00:24:03,720
lessons learned from our experience in

00:24:01,350 --> 00:24:05,820
implementing github Enterprise inside of

00:24:03,720 --> 00:24:09,630
inside of you know a hundred-year-old

00:24:05,820 --> 00:24:11,430
company so the the first thing I would

00:24:09,630 --> 00:24:13,950
recommend is anticipate rapid growth

00:24:11,430 --> 00:24:15,900
when we started we had our use case that

00:24:13,950 --> 00:24:17,730
we were planning for was a hundred devs

00:24:15,900 --> 00:24:21,750
in you know some small research

00:24:17,730 --> 00:24:25,080
department right and today our instance

00:24:21,750 --> 00:24:29,670
is pushing about 10,000 users out of our

00:24:25,080 --> 00:24:31,650
own datacenter on Prem on Prem yep so

00:24:29,670 --> 00:24:34,260
the next the next thing I would

00:24:31,650 --> 00:24:36,420
recommend is you know obviously github

00:24:34,260 --> 00:24:36,750
is the largest open source development

00:24:36,420 --> 00:24:38,880
plan

00:24:36,750 --> 00:24:40,560
form on the planet you know we learned

00:24:38,880 --> 00:24:41,640
that in the keynote you know Matt thinks

00:24:40,560 --> 00:24:43,260
we're gonna hit a hundred million

00:24:41,640 --> 00:24:48,300
developers or something like that by

00:24:43,260 --> 00:24:49,320
2025 which is crazy and the power of

00:24:48,300 --> 00:24:51,810
launching something like it of

00:24:49,320 --> 00:24:53,250
enterprise inside of your network is you

00:24:51,810 --> 00:24:55,590
know it can facilitate an inner source

00:24:53,250 --> 00:24:58,620
model and really help to drive a culture

00:24:55,590 --> 00:25:01,080
change in inside of your company so to

00:24:58,620 --> 00:25:06,870
that effect I would take a real hard

00:25:01,080 --> 00:25:08,520
look about organizations and how what

00:25:06,870 --> 00:25:10,200
what kind of policies you want to put in

00:25:08,520 --> 00:25:11,790
place for allowing people to create

00:25:10,200 --> 00:25:14,040
organizations this is something that

00:25:11,790 --> 00:25:15,780
getup beats me up all the time about

00:25:14,040 --> 00:25:18,860
because we have how many we got today

00:25:15,780 --> 00:25:23,220
over 1,700 yeah about 1,700

00:25:18,860 --> 00:25:24,510
organizations but this is since since

00:25:23,220 --> 00:25:26,310
I'm up on stage and they're not I'm

00:25:24,510 --> 00:25:28,290
gonna hit back a little bit because when

00:25:26,310 --> 00:25:29,970
we launched github Enterprise it didn't

00:25:28,290 --> 00:25:31,950
have the capability that it does today

00:25:29,970 --> 00:25:34,110
with like nested teams and organizations

00:25:31,950 --> 00:25:36,810
was really the way to accomplish some of

00:25:34,110 --> 00:25:38,700
the some of the you know security goals

00:25:36,810 --> 00:25:40,620
that we that we had internal to the

00:25:38,700 --> 00:25:43,520
company right

00:25:40,620 --> 00:25:46,620
but if I were launching it again to date

00:25:43,520 --> 00:25:49,560
there's a little checkbox in in the

00:25:46,620 --> 00:25:51,810
management console that that'll turn off

00:25:49,560 --> 00:25:54,390
the ability for people to to create

00:25:51,810 --> 00:25:56,190
organizations and then we'd put some you

00:25:54,390 --> 00:25:58,860
know sort of policies in place what if I

00:25:56,190 --> 00:26:02,460
want my own work though then you gotta

00:25:58,860 --> 00:26:04,350
have a good reason all right the next

00:26:02,460 --> 00:26:07,200
thing I would recommend is rate limits

00:26:04,350 --> 00:26:09,600
yeah take a since github enterprise very

00:26:07,200 --> 00:26:13,350
quickly you know kind of became business

00:26:09,600 --> 00:26:15,810
critical for us a you know keeping an

00:26:13,350 --> 00:26:19,770
operational is you know it's a it's a

00:26:15,810 --> 00:26:21,150
big deal for a company like Ford if you

00:26:19,770 --> 00:26:22,830
know Tom's not able to produce software

00:26:21,150 --> 00:26:25,370
and brings an assembly line down we're

00:26:22,830 --> 00:26:28,020
talking you know what million dollars

00:26:25,370 --> 00:26:31,740
dollars million dollars a day sometimes

00:26:28,020 --> 00:26:33,540
depending on the vehicle yeah so rate

00:26:31,740 --> 00:26:35,490
limits go a long way to you know helping

00:26:33,540 --> 00:26:37,560
us helping us keep our users in check

00:26:35,490 --> 00:26:38,850
and like ooh what what we've been

00:26:37,560 --> 00:26:40,550
finding is that we've got a lot of

00:26:38,850 --> 00:26:42,510
people that you know they want to do CI

00:26:40,550 --> 00:26:44,040
but they don't necessarily know how to

00:26:42,510 --> 00:26:45,570
set it up they don't know about webhook

00:26:44,040 --> 00:26:48,240
capability and stuff like that so they

00:26:45,570 --> 00:26:49,860
just they just slam the API hey as it

00:26:48,240 --> 00:26:51,929
changed as it changes it changed

00:26:49,860 --> 00:26:58,620
that's why I'm working with Jim so we

00:26:51,929 --> 00:27:00,330
have the good good actors right and and

00:26:58,620 --> 00:27:01,740
so you know putting a rate limits in

00:27:00,330 --> 00:27:03,840
place kind of you know it protects your

00:27:01,740 --> 00:27:07,019
infrastructure from from going down and

00:27:03,840 --> 00:27:09,029
the last thing that we do is you know we

00:27:07,019 --> 00:27:10,350
we pipe all of our logs to Splunk and

00:27:09,029 --> 00:27:13,350
we've got a lot of custom dashboards

00:27:10,350 --> 00:27:15,720
inside of Splunk so if Tom starts

00:27:13,350 --> 00:27:18,360
banging away at the API 10,000 times an

00:27:15,720 --> 00:27:21,600
hour then then I'm gonna know pretty

00:27:18,360 --> 00:27:25,799
much immediately and you know I'm gonna

00:27:21,600 --> 00:27:29,399
go tap them on the shoulder so yeah

00:27:25,799 --> 00:27:30,809
that's that's about it and thanks for

00:27:29,399 --> 00:27:32,399
taking some time out of your day to come

00:27:30,809 --> 00:27:33,690
listen to us talk and hear our story

00:27:32,399 --> 00:27:35,730
yeah we really appreciate you all

00:27:33,690 --> 00:27:37,740
attending today and we've got a lot of

00:27:35,730 --> 00:27:39,659
other knowledge we can talk to you about

00:27:37,740 --> 00:27:40,889
and so we'll go from there

00:27:39,659 --> 00:27:44,220
yeah you're gonna let me drive home

00:27:40,889 --> 00:27:46,110
right I really need you to with all the

00:27:44,220 --> 00:27:49,380
snow we got in Michigan I'll let you

00:27:46,110 --> 00:27:49,800
drive all right thanks everybody thanks

00:27:49,380 --> 00:27:51,640
guys

00:27:49,800 --> 00:28:22,859
[Applause]

00:27:51,640 --> 00:28:22,859

YouTube URL: https://www.youtube.com/watch?v=EOy7-lhPV5g


