Title: Don't be a robot: Automating workflows at scale - GitHub Universe 2019
Publication date: 2019-12-13
Playlist: GitHub Universe 2019 - Skills
Description: 
	Presented by Mariatta Wijaya, Backend Engineer and Python Core Developer at Zapier

Managing a large open source project like CPython is no easy task. Learn how the Python core team automated their GitHub workflow with bots, making it easier for maintainers and contributors to collaborate together. Even if youâ€™re not managing a large project, you can still build your own bot! Hear some ideas on what you can automate and personalize on GitHub to build at your best. Donâ€™t be a robot, build one.

About GitHub Universe:
GitHub Universe is a two-day conference dedicated to the creativity and curiosity of the largest software community in the world. Sessions cover topics from team culture to open source software across industries and technologies.

For more information on GitHub Universe, check the website:
https://githubuniverse.com
Captions: 
	00:00:00,580 --> 00:00:14,179
[Music]

00:00:17,200 --> 00:00:24,920
thanks for coming so my name is Mara and

00:00:22,250 --> 00:00:26,600
I live in Vancouver Canada with my

00:00:24,920 --> 00:00:30,920
husband and two children

00:00:26,600 --> 00:00:34,880
I work as back an engineer at zapier and

00:00:30,920 --> 00:00:36,140
I'm involved in various communities like

00:00:34,880 --> 00:00:39,320
pi ladies

00:00:36,140 --> 00:00:41,890
I run the PI Cascades conference and I

00:00:39,320 --> 00:00:45,020
contribute to open source projects and

00:00:41,890 --> 00:00:46,129
when you contribute too much to open

00:00:45,020 --> 00:00:47,930
source projects

00:00:46,129 --> 00:00:50,390
one day they want to give you the commit

00:00:47,930 --> 00:00:53,960
right to it and that's how I became one

00:00:50,390 --> 00:00:55,670
of the Python core developers so if

00:00:53,960 --> 00:00:58,190
you're not familiar with the term Python

00:00:55,670 --> 00:01:03,019
core developers it means I can merge

00:00:58,190 --> 00:01:07,460
pull request to Python as a Python code

00:01:03,019 --> 00:01:12,500
available my expertise area of expertise

00:01:07,460 --> 00:01:15,530
is emoji and the core workflow now if

00:01:12,500 --> 00:01:18,140
you're wondering what is an expert in

00:01:15,530 --> 00:01:21,140
emoji like what is this about I don't

00:01:18,140 --> 00:01:23,630
know I they never really asked me

00:01:21,140 --> 00:01:28,850
opinion about emojis so let me tell you

00:01:23,630 --> 00:01:30,830
about our core workflow there is this

00:01:28,850 --> 00:01:33,080
one question about our workflow that I

00:01:30,830 --> 00:01:38,210
get asked again and again we got these

00:01:33,080 --> 00:01:42,650
big problems is that please when can you

00:01:38,210 --> 00:01:47,300
merge my pull requests I checked like

00:01:42,650 --> 00:01:52,250
two hours ago we have nine 999 open pull

00:01:47,300 --> 00:01:55,850
requests and I'm really sorry but core

00:01:52,250 --> 00:02:01,850
developers don't scale we are

00:01:55,850 --> 00:02:04,220
outnumbered there are about 15 still

00:02:01,850 --> 00:02:06,380
active core developers and there are so

00:02:04,220 --> 00:02:10,459
many of you wanting to help and

00:02:06,380 --> 00:02:13,870
contribute and make Python better but we

00:02:10,459 --> 00:02:13,870
can't go through all them

00:02:14,660 --> 00:02:21,950
well the other problem is that our

00:02:19,010 --> 00:02:24,800
workflow contributing to cpython is

00:02:21,950 --> 00:02:28,250
actually super complicated

00:02:24,800 --> 00:02:29,240
we have this big checklist is this a bug

00:02:28,250 --> 00:02:32,390
ordered feature

00:02:29,240 --> 00:02:35,240
have you signed the CLA that did you

00:02:32,390 --> 00:02:37,940
write tests did the test passes did you

00:02:35,240 --> 00:02:40,940
write the Nishio has somebody requested

00:02:37,940 --> 00:02:43,000
this fix or you just you just want it

00:02:40,940 --> 00:02:46,490
for yourself

00:02:43,000 --> 00:02:48,770
is there a news entry are your

00:02:46,490 --> 00:02:53,080
first-time contributor do we need to

00:02:48,770 --> 00:02:56,780
back port this is it's super complicated

00:02:53,080 --> 00:03:01,010
so I want to focus on one of these

00:02:56,780 --> 00:03:03,320
problems back porting to give a little

00:03:01,010 --> 00:03:07,120
bit of context like what exactly is a

00:03:03,320 --> 00:03:10,610
back part backporting is the act of

00:03:07,120 --> 00:03:14,810
applying changes from the origin of

00:03:10,610 --> 00:03:19,250
software to the old original - in case

00:03:14,810 --> 00:03:22,940
you don't realize Python currently we

00:03:19,250 --> 00:03:25,460
maintain four different versions the

00:03:22,940 --> 00:03:31,700
master branch right now will become

00:03:25,460 --> 00:03:39,800
Python 3 9 the 3 9 0 will do like next

00:03:31,700 --> 00:03:41,780
week we have the 3 8 + 3 7 branch we

00:03:39,800 --> 00:03:45,830
will release three eight one three seven

00:03:41,780 --> 00:03:49,060
six in about few weeks let's not talk

00:03:45,830 --> 00:03:49,060
about 2.7

00:03:52,420 --> 00:04:00,680
so backporting is how you will get three

00:03:56,810 --> 00:04:03,319
eight one and three seven six in a few

00:04:00,680 --> 00:04:06,590
weeks time so it's very important

00:04:03,319 --> 00:04:10,430
process for us now consider this

00:04:06,590 --> 00:04:12,829
scenario you're using Python you found

00:04:10,430 --> 00:04:15,739
back in F strings which is the best

00:04:12,829 --> 00:04:19,340
strings there which was introduced in

00:04:15,739 --> 00:04:23,240
Python 3 6 so if you have a buck what

00:04:19,340 --> 00:04:26,449
happens we will target as we will need

00:04:23,240 --> 00:04:27,949
to fix this not just in 3 6 in fact we

00:04:26,449 --> 00:04:32,330
don't fix 3 6 anymore

00:04:27,949 --> 00:04:39,430
we will first fake we will fix it in the

00:04:32,330 --> 00:04:42,800
newer versions all of Master 3 9 3 & 3 7

00:04:39,430 --> 00:04:45,349
but we will first you will first make

00:04:42,800 --> 00:04:47,870
pull request to the 3 9 the latest

00:04:45,349 --> 00:04:49,699
branch first and then we are going to

00:04:47,870 --> 00:04:51,919
review it we're going to perform all

00:04:49,699 --> 00:04:55,220
those checks make sure everything's good

00:04:51,919 --> 00:04:58,070
and only after we merge it then we will

00:04:55,220 --> 00:05:03,590
cherry-pick and back port to the 3 8 & 3

00:04:58,070 --> 00:05:06,979
7 let me go one step deeper and tell you

00:05:03,590 --> 00:05:09,470
how this really works this is how we

00:05:06,979 --> 00:05:12,139
used to do it we used to write all of

00:05:09,470 --> 00:05:15,010
this by hand back porting cherry picking

00:05:12,139 --> 00:05:18,860
first we need to fetch checkout a branch

00:05:15,010 --> 00:05:22,430
do a git cherry-pick push it to master

00:05:18,860 --> 00:05:25,820
right push it to Arjun delete the branch

00:05:22,430 --> 00:05:29,090
and then we close our terminal and go to

00:05:25,820 --> 00:05:30,620
github and create a pull request for

00:05:29,090 --> 00:05:36,409
every commit that needs to be back

00:05:30,620 --> 00:05:39,520
ported for every branch this is very

00:05:36,409 --> 00:05:46,310
important we need this but it's also

00:05:39,520 --> 00:05:48,169
tedious repetitive boring thankfully we

00:05:46,310 --> 00:05:50,840
figure out a better way to do this we

00:05:48,169 --> 00:05:53,810
created a command line script called

00:05:50,840 --> 00:05:56,630
cherry picker so now it looks more like

00:05:53,810 --> 00:05:59,000
this just a one-liner cherry pick past

00:05:56,630 --> 00:06:02,570
the commit hash tell it which branches

00:05:59,000 --> 00:06:06,250
to back port - I thought we will be

00:06:02,570 --> 00:06:06,250
happy these cells are a problem

00:06:06,459 --> 00:06:14,509
but there are some problems with it

00:06:09,129 --> 00:06:17,779
first I need to be on a computer on a

00:06:14,509 --> 00:06:20,629
laptop and that's that's a big problem

00:06:17,779 --> 00:06:23,389
like if I merge if I can March a pull

00:06:20,629 --> 00:06:26,029
request while sitting on the beach on my

00:06:23,389 --> 00:06:27,979
phone why do I have to wait until I'm

00:06:26,029 --> 00:06:31,580
back on the computer to do this right

00:06:27,979 --> 00:06:36,289
it's a big problem and because I have to

00:06:31,580 --> 00:06:41,599
wait sometimes I forgot so things get

00:06:36,289 --> 00:06:44,360
missed and then people start using this

00:06:41,599 --> 00:06:52,669
command line tool that I wrote that was

00:06:44,360 --> 00:06:55,610
not good they found bugs it then adds

00:06:52,669 --> 00:07:04,039
more work to me now I need to support

00:06:55,610 --> 00:07:08,979
this for people who use the screen and

00:07:04,039 --> 00:07:12,860
it's just a boring thing to do so I

00:07:08,979 --> 00:07:17,689
thought well there needs to be a better

00:07:12,860 --> 00:07:22,899
way to do this we know it is possible to

00:07:17,689 --> 00:07:25,490
automate it so let's build the bot so I

00:07:22,899 --> 00:07:27,529
started figuring out something learning

00:07:25,490 --> 00:07:32,119
how to build github BOTS by reading

00:07:27,529 --> 00:07:33,979
github developer guide and the the exit

00:07:32,119 --> 00:07:36,979
architecture looks like this basically

00:07:33,979 --> 00:07:39,619
you can subscribe to web hook events

00:07:36,979 --> 00:07:43,129
from github it will tell you when

00:07:39,619 --> 00:07:45,199
something happens on github say there is

00:07:43,129 --> 00:07:48,409
a pull request that would create a pull

00:07:45,199 --> 00:07:50,949
request what's open label issue created

00:07:48,409 --> 00:07:55,159
there are lots of events to subscribe to

00:07:50,949 --> 00:07:57,649
and because get happens to send you

00:07:55,159 --> 00:08:03,229
these events you need to have a web

00:07:57,649 --> 00:08:07,069
service running for cpython of course we

00:08:03,229 --> 00:08:10,179
write it in in Python we deployed the

00:08:07,069 --> 00:08:10,179
web service to Heroku

00:08:10,889 --> 00:08:17,879
and from our web service we can make API

00:08:14,639 --> 00:08:20,430
calls to github the web service can

00:08:17,879 --> 00:08:23,520
create poor requests it can merge pull

00:08:20,430 --> 00:08:25,819
request there are lots of ability that

00:08:23,520 --> 00:08:30,900
your web service can do you can make

00:08:25,819 --> 00:08:33,570
various different API calls so the

00:08:30,900 --> 00:08:37,159
architecture looks more like this we are

00:08:33,570 --> 00:08:39,690
going to wait for the peer merge event

00:08:37,159 --> 00:08:43,680
run that command line script the cherry

00:08:39,690 --> 00:08:45,810
picker once that's done just open a pull

00:08:43,680 --> 00:08:48,140
request right it's it's pretty

00:08:45,810 --> 00:08:48,140
straightforward

00:08:53,420 --> 00:09:03,600
when as you recall but the from previous

00:08:59,540 --> 00:09:08,339
screens where I show you all of this git

00:09:03,600 --> 00:09:12,170
commands so internally it runs a set of

00:09:08,339 --> 00:09:17,490
git git fetch and everything that means

00:09:12,170 --> 00:09:20,459
in order for the bot to to work it first

00:09:17,490 --> 00:09:24,720
needs a copy of the see Python it is to

00:09:20,459 --> 00:09:26,940
clone it and the trouble is see python

00:09:24,720 --> 00:09:30,899
is really really old is like 30 years

00:09:26,940 --> 00:09:34,589
old it takes at least two minutes to

00:09:30,899 --> 00:09:37,100
clone and a few more seconds to run the

00:09:34,589 --> 00:09:40,470
cherry-pick

00:09:37,100 --> 00:09:44,850
however Heroku web service turns out

00:09:40,470 --> 00:09:46,829
after 30 seconds so this is another

00:09:44,850 --> 00:09:51,000
problem that I had to try to figure out

00:09:46,829 --> 00:09:53,370
I don't know how to make C Python clones

00:09:51,000 --> 00:09:58,980
faster it's just it's just big it takes

00:09:53,370 --> 00:10:03,089
that time so I have to be creative and

00:09:58,980 --> 00:10:05,490
figure out how to solve this but this is

00:10:03,089 --> 00:10:07,890
actually supported in Heroku you can run

00:10:05,490 --> 00:10:11,760
background tests and in Python you can

00:10:07,890 --> 00:10:14,490
use a library like salary so your web

00:10:11,760 --> 00:10:17,880
service can receive the web hook event

00:10:14,490 --> 00:10:21,540
and then just start a background task to

00:10:17,880 --> 00:10:22,830
perform all those of long running long

00:10:21,540 --> 00:10:26,459
running tasks

00:10:22,830 --> 00:10:30,990
so this is how our github what works

00:10:26,459 --> 00:10:33,720
it's not so complicated and this is our

00:10:30,990 --> 00:10:36,779
most prolific Peter but we call her Miss

00:10:33,720 --> 00:10:39,020
Islington in case you're wondering miss

00:10:36,779 --> 00:10:40,760
Islington is the name of the witch from

00:10:39,020 --> 00:10:47,070
monty python's

00:10:40,760 --> 00:10:48,660
the holy grail sketch so Miss Islington

00:10:47,070 --> 00:10:52,170
is three years old

00:10:48,660 --> 00:10:54,720
2017 we build it before their words

00:10:52,170 --> 00:10:56,940
github actions or anything completely

00:10:54,720 --> 00:11:01,200
open-source you can check the codebase

00:10:56,940 --> 00:11:05,339
to study it it's written in Python 3 6

00:11:01,200 --> 00:11:09,870
and the web service of choice we use a

00:11:05,339 --> 00:11:14,670
io HTTP which is asynchronous web server

00:11:09,870 --> 00:11:18,390
and web file but the real magic that

00:11:14,670 --> 00:11:21,390
makes building get her boss easy it's

00:11:18,390 --> 00:11:25,470
really the gadget hub library which is

00:11:21,390 --> 00:11:28,680
an asynchronous library written by a

00:11:25,470 --> 00:11:31,829
fellow Python core developer from Canada

00:11:28,680 --> 00:11:34,740
Brad cannon so if you you're interested

00:11:31,829 --> 00:11:35,550
in build your own github integration in

00:11:34,740 --> 00:11:38,010
Python

00:11:35,550 --> 00:11:44,329
I really recommend checking out Gidget

00:11:38,010 --> 00:11:48,360
up here's a little code snippet of how

00:11:44,329 --> 00:11:53,160
the code base of Miss Islington using

00:11:48,360 --> 00:11:55,829
github and a io HTTP from the top when

00:11:53,160 --> 00:11:58,950
it says router register for requests

00:11:55,829 --> 00:12:01,290
closed that's where that's like the SS

00:11:58,950 --> 00:12:03,660
I'm subscribing that the pull request

00:12:01,290 --> 00:12:06,990
close events it's it's just one line

00:12:03,660 --> 00:12:10,470
like that and then we try to figure out

00:12:06,990 --> 00:12:12,390
the state of the pull request figure out

00:12:10,470 --> 00:12:17,190
the commit hash all those data are

00:12:12,390 --> 00:12:19,529
passed by github once we figure out the

00:12:17,190 --> 00:12:22,680
commit hash we knows we try to figure

00:12:19,529 --> 00:12:26,370
out where to back for it to and then

00:12:22,680 --> 00:12:29,600
just kicks off the task to backward so

00:12:26,370 --> 00:12:32,040
it's straightforward is this not

00:12:29,600 --> 00:12:32,870
complicated there's nothing magical to

00:12:32,040 --> 00:12:36,020
it

00:12:32,870 --> 00:12:39,500
so this was um one of the most exciting

00:12:36,020 --> 00:12:42,380
moments in my life when the bots when

00:12:39,500 --> 00:12:46,730
this is mrs. Lincoln's first pull

00:12:42,380 --> 00:12:51,490
request as successfully backported at a

00:12:46,730 --> 00:12:53,480
pull request this was September 2017

00:12:51,490 --> 00:12:54,200
immediately after she made a pull

00:12:53,480 --> 00:12:56,780
request

00:12:54,200 --> 00:12:59,660
she got scolded by our other BOTS for

00:12:56,780 --> 00:13:04,010
her not signed the CLA so it was fun to

00:12:59,660 --> 00:13:09,980
watch other problems I used to have with

00:13:04,010 --> 00:13:12,350
cherry picker now gun right like I'm not

00:13:09,980 --> 00:13:14,120
waiting I don't I can do this from my

00:13:12,350 --> 00:13:16,040
come up from my phone I don't need to

00:13:14,120 --> 00:13:20,000
wait until I'm back on the crown on the

00:13:16,040 --> 00:13:22,040
computer and I don't need to worry about

00:13:20,000 --> 00:13:24,170
supporting cherry picker for other

00:13:22,040 --> 00:13:27,760
people just make sure it works for Miss

00:13:24,170 --> 00:13:30,140
Islington and it's not boring anymore

00:13:27,760 --> 00:13:36,250
but there's still one more problem is

00:13:30,140 --> 00:13:39,860
that this process is still pretty slow

00:13:36,250 --> 00:13:42,770
it has something to do with our other

00:13:39,860 --> 00:13:47,440
parts of the workflow waiting for tests

00:13:42,770 --> 00:13:52,840
to pass we have lots of checks we do

00:13:47,440 --> 00:13:55,040
that needs to there are required to pass

00:13:52,840 --> 00:13:58,700
waiting for all of these to be done

00:13:55,040 --> 00:14:02,990
takes at least 30 minutes for one pull

00:13:58,700 --> 00:14:07,280
request I don't want to wait right so

00:14:02,990 --> 00:14:10,220
what if what if we let the bots wait and

00:14:07,280 --> 00:14:12,800
just tell me it's all done like this and

00:14:10,220 --> 00:14:17,630
we totally have this spoiler and we

00:14:12,800 --> 00:14:19,730
built this kind of integration the code

00:14:17,630 --> 00:14:22,300
to do that looks more like this and

00:14:19,730 --> 00:14:25,940
we're just waiting for the status event

00:14:22,300 --> 00:14:28,910
the earth status check event and then it

00:14:25,940 --> 00:14:34,310
makes a few more additional API calls to

00:14:28,910 --> 00:14:36,620
figure out to figure out which which PR

00:14:34,310 --> 00:14:40,560
it is what is the status and then to

00:14:36,620 --> 00:14:45,670
actually post the comment of the status

00:14:40,560 --> 00:14:48,400
so so now we've accomplished this we

00:14:45,670 --> 00:14:49,300
made the bad ways and/or my lives

00:14:48,400 --> 00:14:52,960
problems

00:14:49,300 --> 00:14:55,870
ourself I thought I felt great because

00:14:52,960 --> 00:14:58,750
not only I crossed one problem

00:14:55,870 --> 00:15:04,620
I crossed through problems and I thought

00:14:58,750 --> 00:15:04,620
I've fulfilled my purpose in my life

00:15:04,860 --> 00:15:11,470
then one day there is an email to the

00:15:08,140 --> 00:15:15,670
Python commands another code available

00:15:11,470 --> 00:15:22,180
was thinking like why don't the bot just

00:15:15,670 --> 00:15:26,200
merge the peer for us right this is not

00:15:22,180 --> 00:15:31,870
an easy thing to do because merging

00:15:26,200 --> 00:15:37,750
requires a commit right we don't give

00:15:31,870 --> 00:15:40,980
out commits it's easily to people out of

00:15:37,750 --> 00:15:44,770
millions of Python users in the world

00:15:40,980 --> 00:15:48,760
only hundred people have to commit right

00:15:44,770 --> 00:15:53,140
like are we really going to want to give

00:15:48,760 --> 00:15:55,480
commit right to a code - but I guess if

00:15:53,140 --> 00:15:57,820
if we write in Python with F strings

00:15:55,480 --> 00:16:01,150
maybe it's okay so we build it we wrote

00:15:57,820 --> 00:16:07,260
it and it's it's really just few lines

00:16:01,150 --> 00:16:13,630
of code just make one call to merge it

00:16:07,260 --> 00:16:15,220
is easy and then we get coming right -

00:16:13,630 --> 00:16:18,840
but that's how it did it

00:16:15,220 --> 00:16:24,310
so our word problem looks more like this

00:16:18,840 --> 00:16:30,550
notice how little work co-developer is

00:16:24,310 --> 00:16:32,680
doing the bot does most of it the core

00:16:30,550 --> 00:16:36,760
developer can now focus on actually

00:16:32,680 --> 00:16:40,540
reviewing it this is the point in my

00:16:36,760 --> 00:16:45,430
life when I realized like how did we

00:16:40,540 --> 00:16:47,350
live without this I really thought we'll

00:16:45,430 --> 00:16:51,220
be happy this would be our happiest

00:16:47,350 --> 00:16:53,250
moment I never thought will ever give

00:16:51,220 --> 00:16:58,189
commit right - bye

00:16:53,250 --> 00:17:04,049
but now after we did it just huh

00:16:58,189 --> 00:17:06,299
we can we can go back we'll spoiled and

00:17:04,049 --> 00:17:09,299
now that I know just how much things can

00:17:06,299 --> 00:17:13,020
be automated I started asking myself

00:17:09,299 --> 00:17:17,339
what other BOTS can be built and in fact

00:17:13,020 --> 00:17:19,439
I got grumpy if I sleep I find myself

00:17:17,339 --> 00:17:24,049
needing to do things that can be

00:17:19,439 --> 00:17:27,319
automated I get upset and disappointed

00:17:24,049 --> 00:17:32,130
when I see other open-source maintainer

00:17:27,319 --> 00:17:34,260
do things that can be automated and when

00:17:32,130 --> 00:17:37,250
I asked them like why why don't you have

00:17:34,260 --> 00:17:42,350
BOTS why are you doing this

00:17:37,250 --> 00:17:45,690
they give me a one or two answers one

00:17:42,350 --> 00:17:47,610
they didn't know how to build a butt or

00:17:45,690 --> 00:17:53,640
they just didn't know it can be

00:17:47,610 --> 00:17:57,150
automated - they had no idea like what

00:17:53,640 --> 00:17:59,909
what do they need to automate so to help

00:17:57,150 --> 00:18:02,490
you spire you I'm going to share even

00:17:59,909 --> 00:18:04,770
more examples of bots and automations

00:18:02,490 --> 00:18:06,720
that I've done that I really haven't

00:18:04,770 --> 00:18:09,690
seen other people doing it and I hope it

00:18:06,720 --> 00:18:15,990
really inspire you to look at your own

00:18:09,690 --> 00:18:17,940
workflow and automate I have a but this

00:18:15,990 --> 00:18:21,630
is my own personal bot that

00:18:17,940 --> 00:18:26,940
automatically formats code using black

00:18:21,630 --> 00:18:30,120
formatter when black it so if to give

00:18:26,940 --> 00:18:32,190
more context black is like a linter but

00:18:30,120 --> 00:18:34,650
it automatically updates your code

00:18:32,190 --> 00:18:38,549
instead of saying hey you have an error

00:18:34,650 --> 00:18:42,720
on this line so totally come I totally

00:18:38,549 --> 00:18:46,650
recommend I I want this because I don't

00:18:42,720 --> 00:18:50,789
want to worry about having to have

00:18:46,650 --> 00:18:54,600
having to configure it when it came out

00:18:50,789 --> 00:18:57,750
I started reading how how you can setup

00:18:54,600 --> 00:19:02,020
black on your project

00:18:57,750 --> 00:19:05,800
um if you read at the readme file for

00:19:02,020 --> 00:19:09,820
black it has a big long list like if you

00:19:05,800 --> 00:19:12,670
use this IDE install a plug-in or if you

00:19:09,820 --> 00:19:19,800
use that IDE install another plugin like

00:19:12,670 --> 00:19:25,300
download it and just a mere thought of

00:19:19,800 --> 00:19:28,540
needing to download something but like I

00:19:25,300 --> 00:19:30,250
know it's boring and if you have more

00:19:28,540 --> 00:19:34,570
than one computer you have to install it

00:19:30,250 --> 00:19:38,260
again and if you maintain projects

00:19:34,570 --> 00:19:41,350
you then have to tell your contributors

00:19:38,260 --> 00:19:46,330
hey install black on your computer on

00:19:41,350 --> 00:19:49,570
you and it's it's I don't know it's a

00:19:46,330 --> 00:19:52,600
lot of work so I build a bot something

00:19:49,570 --> 00:19:56,200
that I can easily install on github just

00:19:52,600 --> 00:19:58,510
with a few clicks on my phone and runs

00:19:56,200 --> 00:20:02,290
black I don't even need to install black

00:19:58,510 --> 00:20:07,110
myself so this is my pride and joy

00:20:02,290 --> 00:20:12,790
III wish everybody has a butt like this

00:20:07,110 --> 00:20:16,660
they please they needs a butt and he so

00:20:12,790 --> 00:20:20,560
he wants a way to just not have pull

00:20:16,660 --> 00:20:23,230
requests and he has in his repository

00:20:20,560 --> 00:20:25,720
and he has his own reasons like he wants

00:20:23,230 --> 00:20:30,100
it to be in maintenance mode he's okay

00:20:25,720 --> 00:20:34,420
with people filing issues and when he

00:20:30,100 --> 00:20:40,210
asks on Twitter people are telling him

00:20:34,420 --> 00:20:43,510
move to get up um I like it lab I use it

00:20:40,210 --> 00:20:45,970
at work I think moving to another

00:20:43,510 --> 00:20:50,560
repository is is a pretty complicated

00:20:45,970 --> 00:20:53,740
process as a comparison it took two

00:20:50,560 --> 00:20:56,200
years for cpython to move from one

00:20:53,740 --> 00:21:00,070
repository to another from mercurial to

00:20:56,200 --> 00:21:02,860
github that took two years building a

00:21:00,070 --> 00:21:04,090
bot is so much simpler and if it's

00:21:02,860 --> 00:21:08,250
really

00:21:04,090 --> 00:21:11,620
just wait for the PR open event and

00:21:08,250 --> 00:21:13,990
automatic quick closing you're still

00:21:11,620 --> 00:21:17,200
thinking no this is really too much work

00:21:13,990 --> 00:21:21,730
to do it really just four lines of code

00:21:17,200 --> 00:21:24,730
like this and I have that I have the

00:21:21,730 --> 00:21:28,000
source code you know is apache license

00:21:24,730 --> 00:21:32,410
if you're interested you can do this you

00:21:28,000 --> 00:21:36,220
can build a button about once a year i

00:21:32,410 --> 00:21:38,830
take a break from volunteering from any

00:21:36,220 --> 00:21:44,490
open source activities so I call it my

00:21:38,830 --> 00:21:47,680
art of open source period um my hiatus

00:21:44,490 --> 00:21:50,650
but because I've been active in lots of

00:21:47,680 --> 00:21:53,230
open-source projects sometimes people

00:21:50,650 --> 00:21:57,040
don't realize they still try to ping me

00:21:53,230 --> 00:22:00,550
on github so to set up boundaries and to

00:21:57,040 --> 00:22:05,800
remind them I have my own out of

00:22:00,550 --> 00:22:10,180
open-source auto-reply but it's

00:22:05,800 --> 00:22:12,790
accomplished using zapier on the app

00:22:10,180 --> 00:22:16,990
here you can have the new github mention

00:22:12,790 --> 00:22:19,180
trigger I still need to write a little

00:22:16,990 --> 00:22:21,910
bit of Python script and you can add

00:22:19,180 --> 00:22:27,130
that into the appeal and it creates a

00:22:21,910 --> 00:22:31,260
comment like this you can build but that

00:22:27,130 --> 00:22:34,210
grades your contributors two days ago

00:22:31,260 --> 00:22:38,920
right here and github universe I let a

00:22:34,210 --> 00:22:41,440
workshop in the maintainer track in that

00:22:38,920 --> 00:22:43,660
workshop we together we build a github

00:22:41,440 --> 00:22:45,190
bots that say thanks to the main take

00:22:43,660 --> 00:22:48,550
another thanks for installing the github

00:22:45,190 --> 00:22:51,100
bot say thanks to first-time

00:22:48,550 --> 00:22:54,400
contributors who make pull requests to

00:22:51,100 --> 00:23:00,010
your repository we did this in under one

00:22:54,400 --> 00:23:02,710
hour it's it's not her so I think you

00:23:00,010 --> 00:23:04,930
should have something like this and if

00:23:02,710 --> 00:23:08,110
you were an add up at the workshop I

00:23:04,930 --> 00:23:10,570
published my materials online say it

00:23:08,110 --> 00:23:14,030
with bots github university the docs io

00:23:10,570 --> 00:23:18,830
so you can follow along

00:23:14,030 --> 00:23:21,230
so no more excuses you don't know how to

00:23:18,830 --> 00:23:24,410
build a but I have written the tutorial

00:23:21,230 --> 00:23:27,290
for you it uses Python uses lots of a

00:23:24,410 --> 00:23:30,080
strings nothing magical to it you can do

00:23:27,290 --> 00:23:33,830
it and if you're still wondering of what

00:23:30,080 --> 00:23:37,070
kind of things you can automate really

00:23:33,830 --> 00:23:38,900
take a look at your own workflow like if

00:23:37,070 --> 00:23:42,380
you find yourself if you have a

00:23:38,900 --> 00:23:45,830
checklist you have to remind yourself

00:23:42,380 --> 00:23:48,200
about a checklist that's the time you

00:23:45,830 --> 00:23:50,810
want to write the but for it don't don't

00:23:48,200 --> 00:23:54,410
do the checklist don't don't do that

00:23:50,810 --> 00:23:57,220
I'm I if I see you doing manual things

00:23:54,410 --> 00:24:01,940
if I'm in your project I will tell you

00:23:57,220 --> 00:24:04,210
let's build the word for this so don't

00:24:01,940 --> 00:24:07,430
be a robot don't do the boring things

00:24:04,210 --> 00:24:08,250
build a body Nora me thank you so much

00:24:07,430 --> 00:24:12,740
for listening

00:24:08,250 --> 00:24:41,130
[Applause]

00:24:12,740 --> 00:24:41,130

YouTube URL: https://www.youtube.com/watch?v=GayKuDpi97o


