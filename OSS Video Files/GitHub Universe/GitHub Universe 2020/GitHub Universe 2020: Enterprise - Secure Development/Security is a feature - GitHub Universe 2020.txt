Title: Security is a feature - GitHub Universe 2020
Publication date: 2020-12-09
Playlist: GitHub Universe 2020: Enterprise - Secure Development
Description: 
	Presented by Keith Hoodlet, Senior Manager, Application Experience, Thermo Fisher Scientific

In today's world, we find no shortage of headlines about how $APPLICATION was found to have a critical remote code execution bug, or how $COMPANY had a data breach because they failed to patch their instance of $OPEN_SOURCE_PROJECT. As the rest of the world slowly adopts Agile ceremonies and DevOps patterns, we continue to find that security is sent to the backlog and forgotten. This talk challenges the status quo by discussing how companies can and should treat security like a featureâ€”something to be constantly maintained and improved upon. We'll also cover the tools and techniques you can use to develop more secure software.

For more from GitHub Universe 2020, visit https://githubuniverse.com

As always, feel free to leave us a comment below and don't forget to subscribe: http://bit.ly/subgithub

Thanks!

Connect with us.
Facebook: http://fb.com/github
Twitter: http://twitter.com/github
LinkedIn: http://linkedin.com/company/github

About GitHub
GitHub is the best place to share code with friends, co-workers, classmates, and complete strangers. Millions of people use GitHub to build amazing things together. For more info, go to http://github.com
Captions: 
	00:00:06,560 --> 00:00:09,679
thank you so much for that nice intros

00:00:08,240 --> 00:00:11,200
uh it's great to be here and honestly

00:00:09,679 --> 00:00:12,400
really exciting to talk about security

00:00:11,200 --> 00:00:13,599
as a feature today

00:00:12,400 --> 00:00:15,599
um we're going to be going through a few

00:00:13,599 --> 00:00:17,440
different ideas in this concept in terms

00:00:15,599 --> 00:00:19,359
of why companies might not think of

00:00:17,440 --> 00:00:21,039
security as a feature of course what

00:00:19,359 --> 00:00:22,960
they do think of as a feature first

00:00:21,039 --> 00:00:24,960
and then going into what happens when

00:00:22,960 --> 00:00:26,000
they don't but also of course

00:00:24,960 --> 00:00:28,240
some of the good things that can come

00:00:26,000 --> 00:00:29,519
from thinking of security like a feature

00:00:28,240 --> 00:00:31,119
going ahead and then how you can

00:00:29,519 --> 00:00:32,160
implement that within your tool chain or

00:00:31,119 --> 00:00:33,920
your process

00:00:32,160 --> 00:00:35,040
uh some further learning and uh and

00:00:33,920 --> 00:00:36,239
we'll take it from there so let's go

00:00:35,040 --> 00:00:37,040
ahead and dive right in this is gonna be

00:00:36,239 --> 00:00:39,120
great

00:00:37,040 --> 00:00:40,480
um so first of all a little bit about

00:00:39,120 --> 00:00:43,600
myself

00:00:40,480 --> 00:00:46,559
uh so at a high level uh of course

00:00:43,600 --> 00:00:48,079
i am as the intro says there the senior

00:00:46,559 --> 00:00:49,760
manager of application experience here

00:00:48,079 --> 00:00:51,840
at thermo fisher scientific

00:00:49,760 --> 00:00:53,280
uh i am responsible for the teams that

00:00:51,840 --> 00:00:54,800
make up the largest enterprise

00:00:53,280 --> 00:00:56,320
applications that we have here at thermo

00:00:54,800 --> 00:00:58,079
fisher including

00:00:56,320 --> 00:00:59,680
the conference office and service

00:00:58,079 --> 00:01:02,239
technologies teams um

00:00:59,680 --> 00:01:03,680
which do an excellent job uh themselves

00:01:02,239 --> 00:01:04,239
keeping the business running especially

00:01:03,680 --> 00:01:05,600
during

00:01:04,239 --> 00:01:07,760
uh the situation that we're in with the

00:01:05,600 --> 00:01:08,880
global pandemic really uh hats off to

00:01:07,760 --> 00:01:10,000
them in terms of all of the great work

00:01:08,880 --> 00:01:10,880
that they're doing to keep us moving

00:01:10,000 --> 00:01:12,240
forward

00:01:10,880 --> 00:01:13,920
uh in a past life here at thermal

00:01:12,240 --> 00:01:15,759
fissure scientific i was the senior

00:01:13,920 --> 00:01:17,280
manager of global devsecops i built the

00:01:15,759 --> 00:01:18,560
devsecops and application security

00:01:17,280 --> 00:01:20,320
program from the ground up

00:01:18,560 --> 00:01:22,240
uh which was a really great challenge

00:01:20,320 --> 00:01:23,920
and experience uh and it's funny because

00:01:22,240 --> 00:01:25,280
i am on record as saying devsecops

00:01:23,920 --> 00:01:27,439
doesn't exist but

00:01:25,280 --> 00:01:28,720
uh and then it became my title and so i

00:01:27,439 --> 00:01:30,640
kind of had to adopt it and really

00:01:28,720 --> 00:01:32,560
embrace it and since have

00:01:30,640 --> 00:01:34,079
uh just a little bit of background about

00:01:32,560 --> 00:01:35,680
myself and the perspective that i bring

00:01:34,079 --> 00:01:37,280
to this conversation

00:01:35,680 --> 00:01:38,960
so formerly i hosted the application

00:01:37,280 --> 00:01:40,720
security weekly podcast starting back in

00:01:38,960 --> 00:01:43,280
2018 with paul acadorian

00:01:40,720 --> 00:01:44,880
episodes zero zero to 55 because we

00:01:43,280 --> 00:01:47,759
start from counting at zero

00:01:44,880 --> 00:01:48,399
in the deaf world uh i was a rank 65 bug

00:01:47,759 --> 00:01:50,479
crowd

00:01:48,399 --> 00:01:51,600
bug bounty hunter back in 2018 and an

00:01:50,479 --> 00:01:52,720
mvp

00:01:51,600 --> 00:01:54,240
and when i'm writing some code i really

00:01:52,720 --> 00:01:55,680
love to jump into visual studio code

00:01:54,240 --> 00:01:57,439
it's a great platform for those of you

00:01:55,680 --> 00:01:59,360
that haven't had a chance to jump in and

00:01:57,439 --> 00:02:01,119
get your feet wet uh personally i love

00:01:59,360 --> 00:02:02,399
writing in python and bash javascript is

00:02:01,119 --> 00:02:04,000
something i'm still trying to pick up

00:02:02,399 --> 00:02:05,600
golang is another favorite of mine when

00:02:04,000 --> 00:02:06,719
i get an opportunity

00:02:05,600 --> 00:02:08,080
and there are a couple projects i want

00:02:06,719 --> 00:02:09,920
to highlight i did start the infosec

00:02:08,080 --> 00:02:11,760
mentors project or restarted it really

00:02:09,920 --> 00:02:12,800
and made it open source

00:02:11,760 --> 00:02:14,400
and then of course i'm working on

00:02:12,800 --> 00:02:16,160
another project that's private currently

00:02:14,400 --> 00:02:17,680
called the secure functions project but

00:02:16,160 --> 00:02:19,920
will eventually be released open source

00:02:17,680 --> 00:02:21,360
once it's ready for the world to embrace

00:02:19,920 --> 00:02:23,040
uh think of it more like an object

00:02:21,360 --> 00:02:24,720
relational mapper for security

00:02:23,040 --> 00:02:26,239
uh in terms of the way that you can put

00:02:24,720 --> 00:02:27,760
security into your code and some of

00:02:26,239 --> 00:02:30,480
those sensitive functions that you

00:02:27,760 --> 00:02:32,239
that you build on uh that said uh some

00:02:30,480 --> 00:02:33,280
of my hobbies i love to read i can

00:02:32,239 --> 00:02:34,480
always recommend books and i'll have

00:02:33,280 --> 00:02:35,920
some here for you today

00:02:34,480 --> 00:02:37,680
uh writing is something that i enjoy

00:02:35,920 --> 00:02:39,440
doing on occasion and then gaming

00:02:37,680 --> 00:02:40,879
uh breath of the wild legend of zelda is

00:02:39,440 --> 00:02:42,640
a favorite of mine right now

00:02:40,879 --> 00:02:44,160
uh and of course during times when we're

00:02:42,640 --> 00:02:45,680
not in covet i love to travel can't wait

00:02:44,160 --> 00:02:47,760
to get back to japan and say

00:02:45,680 --> 00:02:49,040
uh ohio gozaimasu to all my friends out

00:02:47,760 --> 00:02:51,599
there in japan

00:02:49,040 --> 00:02:53,120
uh so let's jump in so first of all you

00:02:51,599 --> 00:02:54,480
know what makes something a feature

00:02:53,120 --> 00:02:57,599
right that's something that is

00:02:54,480 --> 00:02:58,879
is often uh discussed in concerning uh

00:02:57,599 --> 00:02:59,840
the project management or product

00:02:58,879 --> 00:03:01,200
management team

00:02:59,840 --> 00:03:02,560
the dev teams they always say well

00:03:01,200 --> 00:03:04,480
that's not really a feature security's

00:03:02,560 --> 00:03:05,519
not a feature uh and that's because of

00:03:04,480 --> 00:03:06,959
course features are things that

00:03:05,519 --> 00:03:08,319
customers ask you for right they're the

00:03:06,959 --> 00:03:09,519
things that people want to see the

00:03:08,319 --> 00:03:11,040
things that

00:03:09,519 --> 00:03:12,400
people will complain about if they don't

00:03:11,040 --> 00:03:14,159
have it in your application and so

00:03:12,400 --> 00:03:15,840
therefore they'll tell you about it

00:03:14,159 --> 00:03:18,000
then of course there's resources in

00:03:15,840 --> 00:03:19,200
terms of people time or money

00:03:18,000 --> 00:03:20,959
those are things that get allocated to

00:03:19,200 --> 00:03:21,360
features whatever you're allocating your

00:03:20,959 --> 00:03:23,040
people

00:03:21,360 --> 00:03:24,080
your money and your time to those are

00:03:23,040 --> 00:03:25,680
the features you're working on whether

00:03:24,080 --> 00:03:26,640
you're calling calling them a feature or

00:03:25,680 --> 00:03:28,239
not

00:03:26,640 --> 00:03:29,200
and then features well generally

00:03:28,239 --> 00:03:30,400
speaking if you build it you're going to

00:03:29,200 --> 00:03:31,599
make sure that it's regularly tested

00:03:30,400 --> 00:03:32,959
you're going to make sure that it works

00:03:31,599 --> 00:03:33,920
the way that you want it to

00:03:32,959 --> 00:03:36,080
and you're going to make sure that it

00:03:33,920 --> 00:03:37,920
continues to get enhanced over time

00:03:36,080 --> 00:03:39,440
generally speaking you're not going to

00:03:37,920 --> 00:03:41,120
take a feature out unless of course it's

00:03:39,440 --> 00:03:43,120
just really not used or

00:03:41,120 --> 00:03:45,040
it's so totally broken that it's it's

00:03:43,120 --> 00:03:46,159
not worth continuing and working on

00:03:45,040 --> 00:03:48,080
but otherwise you're going to make that

00:03:46,159 --> 00:03:50,400
thing better those are the features that

00:03:48,080 --> 00:03:52,799
your company is investing in

00:03:50,400 --> 00:03:53,760
so why isn't security considered a

00:03:52,799 --> 00:03:55,280
feature uh

00:03:53,760 --> 00:03:56,560
and this is kind of an interesting topic

00:03:55,280 --> 00:03:58,080
because one of the things that i'll

00:03:56,560 --> 00:03:59,519
often ask dev teams after they've done

00:03:58,080 --> 00:04:01,040
some security review

00:03:59,519 --> 00:04:02,959
of their applications as they'll say do

00:04:01,040 --> 00:04:04,640
you have a banking app on your phone

00:04:02,959 --> 00:04:06,080
now that doesn't always translate

00:04:04,640 --> 00:04:07,920
depending on where you are in the world

00:04:06,080 --> 00:04:09,599
some cash heavy cultures don't really

00:04:07,920 --> 00:04:12,799
use banking applications might

00:04:09,599 --> 00:04:14,400
do ecommerce but um alaska dev

00:04:12,799 --> 00:04:16,000
are you using some some sort of

00:04:14,400 --> 00:04:17,040
financial transaction application on

00:04:16,000 --> 00:04:18,560
your phone and the answer is almost

00:04:17,040 --> 00:04:20,239
universally yes

00:04:18,560 --> 00:04:22,479
well um one of the questions that you

00:04:20,239 --> 00:04:23,840
should be asking is would you use it if

00:04:22,479 --> 00:04:25,040
it had the vulnerabilities that your

00:04:23,840 --> 00:04:26,320
application has

00:04:25,040 --> 00:04:28,080
and that's when you know security is a

00:04:26,320 --> 00:04:29,919
feature because it's not something

00:04:28,080 --> 00:04:31,360
that people were asking you for but it

00:04:29,919 --> 00:04:33,280
was something that you and the people

00:04:31,360 --> 00:04:34,560
using your applications are expecting

00:04:33,280 --> 00:04:36,160
uh in a lot of ways i like to say this

00:04:34,560 --> 00:04:37,759
is kind of like the faucet that you go

00:04:36,160 --> 00:04:39,280
to or the sink that you may go to

00:04:37,759 --> 00:04:41,040
and when you turn that left knob you

00:04:39,280 --> 00:04:42,000
expect the water to be hot that's

00:04:41,040 --> 00:04:43,600
universally true

00:04:42,000 --> 00:04:45,199
you didn't have to ask anyone for it and

00:04:43,600 --> 00:04:46,160
you didn't have to tell the plumber to

00:04:45,199 --> 00:04:48,000
install it that way

00:04:46,160 --> 00:04:49,280
it's just the way that that operates and

00:04:48,000 --> 00:04:50,880
so in a lot of ways that's the way that

00:04:49,280 --> 00:04:52,560
people think of security today is it's

00:04:50,880 --> 00:04:54,000
one of those utilities that you just

00:04:52,560 --> 00:04:56,240
expect it to be there and expect it to

00:04:54,000 --> 00:04:58,560
work as intended

00:04:56,240 --> 00:04:59,840
of course you will give money and time

00:04:58,560 --> 00:05:01,919
to security but

00:04:59,840 --> 00:05:03,440
uh generally not as a feature you'll do

00:05:01,919 --> 00:05:04,400
it when there's a bomb about to go off

00:05:03,440 --> 00:05:06,800
in terms of some

00:05:04,400 --> 00:05:07,680
vulnerability in a dependency or in your

00:05:06,800 --> 00:05:09,600
code base

00:05:07,680 --> 00:05:10,720
that's been uncovered or if those bombs

00:05:09,600 --> 00:05:12,080
have already exploded

00:05:10,720 --> 00:05:13,919
you're going to spend time and money on

00:05:12,080 --> 00:05:15,360
those things to very quickly fix them

00:05:13,919 --> 00:05:16,479
and it tends to be very disruptive when

00:05:15,360 --> 00:05:18,880
you do that

00:05:16,479 --> 00:05:19,840
unfortunately when that happens you're

00:05:18,880 --> 00:05:21,199
going to be

00:05:19,840 --> 00:05:22,479
disrupting all of the other features

00:05:21,199 --> 00:05:23,199
that your customers have asked you for

00:05:22,479 --> 00:05:26,000
that they're

00:05:23,199 --> 00:05:27,280
outwardly expressing that they want and

00:05:26,000 --> 00:05:29,199
finally of course

00:05:27,280 --> 00:05:30,880
security is often tested but not

00:05:29,199 --> 00:05:32,240
reliably and not necessarily by people

00:05:30,880 --> 00:05:33,680
that you want to be testing those

00:05:32,240 --> 00:05:35,199
applications

00:05:33,680 --> 00:05:36,800
there are some examples that i have here

00:05:35,199 --> 00:05:38,720
in a couple slides but i like to think

00:05:36,800 --> 00:05:41,199
of this like cellular service you expect

00:05:38,720 --> 00:05:42,800
it to work and it's often tested but

00:05:41,199 --> 00:05:44,080
it's not always reliable and it's not

00:05:42,800 --> 00:05:44,320
always working the way that you want it

00:05:44,080 --> 00:05:46,160
to

00:05:44,320 --> 00:05:47,600
well i'll hate to tell you but if you

00:05:46,160 --> 00:05:49,039
have an application that's publicly

00:05:47,600 --> 00:05:50,400
facing to the internet or an application

00:05:49,039 --> 00:05:52,320
that people can download

00:05:50,400 --> 00:05:54,240
uh from the internet it's probably being

00:05:52,320 --> 00:05:55,440
tested and people may or may not tell

00:05:54,240 --> 00:05:57,360
you about it and they may use it for

00:05:55,440 --> 00:05:58,720
nefarious purposes which is unfortunate

00:05:57,360 --> 00:06:01,600
but it's one of those reasons why we

00:05:58,720 --> 00:06:03,280
need to take security seriously

00:06:01,600 --> 00:06:04,880
so of course what happens when you don't

00:06:03,280 --> 00:06:06,560
take security seriously what are those

00:06:04,880 --> 00:06:08,400
things that occur in the world

00:06:06,560 --> 00:06:10,240
as a result of that well first of all

00:06:08,400 --> 00:06:11,919
vulnerabilities continue to pile up

00:06:10,240 --> 00:06:13,440
uh if you don't fix one vulnerability

00:06:11,919 --> 00:06:14,639
you're probably going to lead to a chain

00:06:13,440 --> 00:06:15,759
of vulnerabilities multiple

00:06:14,639 --> 00:06:17,600
vulnerabilities it's

00:06:15,759 --> 00:06:19,280
it's a challenge a good example of that

00:06:17,600 --> 00:06:22,160
is unfortunately capital one

00:06:19,280 --> 00:06:24,000
they had a breach due to uh basically a

00:06:22,160 --> 00:06:25,680
lack of security in the implementation

00:06:24,000 --> 00:06:28,160
of some of their applications and

00:06:25,680 --> 00:06:30,000
due to cultural challenges they lost a

00:06:28,160 --> 00:06:31,360
number of very talented people

00:06:30,000 --> 00:06:32,800
because of the insecurity and the way

00:06:31,360 --> 00:06:34,639
that their culture really thought about

00:06:32,800 --> 00:06:36,880
security inside the workplace

00:06:34,639 --> 00:06:39,440
now from the fines themselves it was

00:06:36,880 --> 00:06:41,840
estimated to cost about 150 million us

00:06:39,440 --> 00:06:43,280
dollars for them to pay for all of the

00:06:41,840 --> 00:06:44,479
different fines and regulations that

00:06:43,280 --> 00:06:46,160
they got struck with

00:06:44,479 --> 00:06:48,400
um but the total cost of the company in

00:06:46,160 --> 00:06:50,000
terms of buying all those security tools

00:06:48,400 --> 00:06:52,080
hiring new staff

00:06:50,000 --> 00:06:54,479
upgrading all of their applications was

00:06:52,080 --> 00:06:56,000
estimated over 500 million us dollars

00:06:54,479 --> 00:06:57,759
that's a lot of money that they could

00:06:56,000 --> 00:06:59,120
have been investing in other ways or

00:06:57,759 --> 00:07:00,800
they could have made smaller investments

00:06:59,120 --> 00:07:02,800
in security and been a lot better off

00:07:00,800 --> 00:07:04,720
over the long term as a result of it

00:07:02,800 --> 00:07:05,840
you also see vulnerabilities leading to

00:07:04,720 --> 00:07:08,479
bad publicity

00:07:05,840 --> 00:07:10,319
uh key example of that is uber uh back

00:07:08,479 --> 00:07:11,440
in the day and this is not too long ago

00:07:10,319 --> 00:07:13,280
there was a data breach

00:07:11,440 --> 00:07:15,120
of over a hundred thousand us dollars

00:07:13,280 --> 00:07:16,319
that was paid out via a bug bounty

00:07:15,120 --> 00:07:19,120
program

00:07:16,319 --> 00:07:21,199
that they ended up losing their cso our

00:07:19,120 --> 00:07:22,960
chief security officer over because

00:07:21,199 --> 00:07:24,720
of course it was seen as a cover-up and

00:07:22,960 --> 00:07:26,240
that chief security officer is now being

00:07:24,720 --> 00:07:27,759
brought up on criminal charges as a

00:07:26,240 --> 00:07:28,639
result of trying to cover up uh the

00:07:27,759 --> 00:07:30,479
breach event

00:07:28,639 --> 00:07:31,919
it was really unfortunate both for for

00:07:30,479 --> 00:07:33,840
uber who does generally a pretty good

00:07:31,919 --> 00:07:35,280
job of security and well quite frankly

00:07:33,840 --> 00:07:37,039
for all of their customers

00:07:35,280 --> 00:07:38,639
that were caught up in all of that and

00:07:37,039 --> 00:07:40,160
then finally of course there's zoom

00:07:38,639 --> 00:07:41,919
now zoom is a great product and they're

00:07:40,160 --> 00:07:43,680
one of those companies that uh

00:07:41,919 --> 00:07:44,800
is used universally to try and get us

00:07:43,680 --> 00:07:45,440
through the situation that we're in

00:07:44,800 --> 00:07:47,360
today

00:07:45,440 --> 00:07:48,960
um but here's the challenge these global

00:07:47,360 --> 00:07:51,120
pandemic situations happen

00:07:48,960 --> 00:07:52,639
hopefully once in a lifetime when you

00:07:51,120 --> 00:07:53,840
see these situations where the company

00:07:52,639 --> 00:07:55,039
can actually transform the way that

00:07:53,840 --> 00:07:57,520
their business operates

00:07:55,039 --> 00:07:58,879
and then the market uh kind of capture

00:07:57,520 --> 00:07:59,520
that they can actually realize as a

00:07:58,879 --> 00:08:00,879
result

00:07:59,520 --> 00:08:03,199
of being a superior product in the

00:08:00,879 --> 00:08:04,400
marketplace unfortunately for them they

00:08:03,199 --> 00:08:05,520
had some end-to-end encryption

00:08:04,400 --> 00:08:07,199
challenges that were brought forward

00:08:05,520 --> 00:08:08,319
right as this all kicked off

00:08:07,199 --> 00:08:09,840
and of course then they had some

00:08:08,319 --> 00:08:10,319
security vulnerabilities that were piled

00:08:09,840 --> 00:08:11,840
on top

00:08:10,319 --> 00:08:13,440
now they've rushed to hire a chief

00:08:11,840 --> 00:08:15,680
security officer and

00:08:13,440 --> 00:08:16,479
bring in security as new feature sets in

00:08:15,680 --> 00:08:17,599
their application

00:08:16,479 --> 00:08:19,520
they could have avoided that and

00:08:17,599 --> 00:08:21,440
actually captured a great bigger part of

00:08:19,520 --> 00:08:23,039
the market share out there in the world

00:08:21,440 --> 00:08:24,720
if they had actually considered security

00:08:23,039 --> 00:08:26,000
a feature from the get-go and now their

00:08:24,720 --> 00:08:26,720
competitors have caught up and in some

00:08:26,000 --> 00:08:27,840
cases are

00:08:26,720 --> 00:08:30,319
stealing that market share that they

00:08:27,840 --> 00:08:30,319
could have grabbed

00:08:30,479 --> 00:08:32,880
and it doesn't have to be this way quite

00:08:31,919 --> 00:08:34,399
frankly there are a number of things

00:08:32,880 --> 00:08:35,680
that we can do as developers and as

00:08:34,399 --> 00:08:37,120
security professionals to make our

00:08:35,680 --> 00:08:38,399
applications more secure

00:08:37,120 --> 00:08:40,000
i like to think of this as the broken

00:08:38,399 --> 00:08:40,880
windows theory when it comes to security

00:08:40,000 --> 00:08:42,800
as lending

00:08:40,880 --> 00:08:44,320
back in the 1990s we had challenges when

00:08:42,800 --> 00:08:46,240
it came to

00:08:44,320 --> 00:08:47,440
really crime happening in new york city

00:08:46,240 --> 00:08:48,800
here in the united states it was

00:08:47,440 --> 00:08:50,959
continuing to rise

00:08:48,800 --> 00:08:52,000
it was rampant and almost universal

00:08:50,959 --> 00:08:53,920
within the city

00:08:52,000 --> 00:08:55,360
and one of the psychological theories

00:08:53,920 --> 00:08:56,880
around this was because of broken

00:08:55,360 --> 00:08:58,320
windows and graffiti

00:08:56,880 --> 00:08:59,920
found throughout the city especially in

00:08:58,320 --> 00:09:02,640
subway cars and their

00:08:59,920 --> 00:09:03,680
kind of public transit systems one of

00:09:02,640 --> 00:09:05,120
the ways they fixed that

00:09:03,680 --> 00:09:06,800
they actually took those subway cars out

00:09:05,120 --> 00:09:08,080
of production they repainted them and

00:09:06,800 --> 00:09:09,519
then sent them back into the production

00:09:08,080 --> 00:09:10,959
as that paint was drying so that they

00:09:09,519 --> 00:09:11,760
could show that the city really cared

00:09:10,959 --> 00:09:12,880
about

00:09:11,760 --> 00:09:14,160
the people that lived there and the

00:09:12,880 --> 00:09:15,279
public transit systems that they were

00:09:14,160 --> 00:09:16,720
investing in

00:09:15,279 --> 00:09:18,320
so in the same way we should do that

00:09:16,720 --> 00:09:19,839
within our code when it comes to

00:09:18,320 --> 00:09:21,519
finding those dangerous functions like

00:09:19,839 --> 00:09:24,080
dangerously

00:09:21,519 --> 00:09:24,800
set html for example within the react

00:09:24,080 --> 00:09:26,080
framework

00:09:24,800 --> 00:09:27,839
and of course establishing coding

00:09:26,080 --> 00:09:29,920
standards can help us be a little bit

00:09:27,839 --> 00:09:31,600
more precise about making sure that we

00:09:29,920 --> 00:09:33,040
maintain the code base and make sure

00:09:31,600 --> 00:09:34,640
that it's groomed on a regular basis to

00:09:33,040 --> 00:09:35,920
be healthy and clean

00:09:34,640 --> 00:09:37,519
and then of course there's security

00:09:35,920 --> 00:09:39,279
security as unit testing when we think

00:09:37,519 --> 00:09:41,040
about the tomatoes and the tomato sauce

00:09:39,279 --> 00:09:42,640
uh i like to say check your recipe and

00:09:41,040 --> 00:09:44,480
check your ingredients and by checking

00:09:42,640 --> 00:09:45,920
your recipe i mean static analysis going

00:09:44,480 --> 00:09:46,800
ahead and taking a look at your code to

00:09:45,920 --> 00:09:48,640
make sure that you're not

00:09:46,800 --> 00:09:50,000
inserting any sort of vulnerable

00:09:48,640 --> 00:09:51,440
functions or

00:09:50,000 --> 00:09:53,279
uh calling things in a way that you

00:09:51,440 --> 00:09:54,880
really shouldn't be such as calling

00:09:53,279 --> 00:09:57,040
directly to your sql database as opposed

00:09:54,880 --> 00:09:58,320
to using an object relational mapper

00:09:57,040 --> 00:10:00,240
and then checking your ingredients

00:09:58,320 --> 00:10:02,240
dependency check uh or depend

00:10:00,240 --> 00:10:03,519
dependency checking it's one of those

00:10:02,240 --> 00:10:04,720
tool sets that can really help you

00:10:03,519 --> 00:10:05,920
understand that the ingredients that

00:10:04,720 --> 00:10:06,560
you're putting into your applications

00:10:05,920 --> 00:10:08,240
are fresh

00:10:06,560 --> 00:10:09,839
that they're continuously being updated

00:10:08,240 --> 00:10:11,279
and that they're actually going ahead

00:10:09,839 --> 00:10:12,000
and solving some of those problems that

00:10:11,279 --> 00:10:13,839
you're seeing

00:10:12,000 --> 00:10:15,040
when it comes to the vulnerabilities at

00:10:13,839 --> 00:10:16,480
the end of the day if you make a great

00:10:15,040 --> 00:10:17,680
recipe with rotten ingredients it's

00:10:16,480 --> 00:10:18,079
going to turn out pretty bad for your

00:10:17,680 --> 00:10:20,160
health

00:10:18,079 --> 00:10:21,360
and of course for anyone that's trying

00:10:20,160 --> 00:10:23,279
to consume that

00:10:21,360 --> 00:10:24,959
and then i like to think of finally that

00:10:23,279 --> 00:10:26,880
throwing throwing spaghetti at the wall

00:10:24,959 --> 00:10:28,720
in terms of integration testing

00:10:26,880 --> 00:10:30,320
so that's that whole idea of making sure

00:10:28,720 --> 00:10:31,519
things stick so

00:10:30,320 --> 00:10:32,880
of course you can do that with web

00:10:31,519 --> 00:10:34,720
applications today using dynamic

00:10:32,880 --> 00:10:35,600
analysis i have a couple recommendations

00:10:34,720 --> 00:10:37,360
here in terms of

00:10:35,600 --> 00:10:39,120
some tools that you can go ahead and use

00:10:37,360 --> 00:10:40,720
to do that but making sure that you're

00:10:39,120 --> 00:10:41,920
actually checking the inputs that you're

00:10:40,720 --> 00:10:43,279
throwing into your code

00:10:41,920 --> 00:10:45,760
to make sure that your application is

00:10:43,279 --> 00:10:47,200
reacting in safe and secure ways

00:10:45,760 --> 00:10:48,800
and then for compiled applications

00:10:47,200 --> 00:10:50,399
there's fuzzing basically again it's

00:10:48,800 --> 00:10:51,760
like throwing spaghetti at the uh

00:10:50,399 --> 00:10:53,600
at the wall to see if it sticks or

00:10:51,760 --> 00:10:55,279
throwing a bunch of inputs at your code

00:10:53,600 --> 00:10:56,240
to see what your application does when

00:10:55,279 --> 00:10:57,519
you throw it something that it's not

00:10:56,240 --> 00:10:59,040
really anticipating

00:10:57,519 --> 00:11:00,240
so there are a lot of ways that we can

00:10:59,040 --> 00:11:01,519
solve this problem when it comes to

00:11:00,240 --> 00:11:04,399
treating security as a feature

00:11:01,519 --> 00:11:06,079
as we develop and then of course there

00:11:04,399 --> 00:11:06,640
are benefits to treating security as a

00:11:06,079 --> 00:11:07,920
feature

00:11:06,640 --> 00:11:10,079
a good example of that as attack

00:11:07,920 --> 00:11:11,519
complexity increases one of the things

00:11:10,079 --> 00:11:13,279
that i like to think about here is why

00:11:11,519 --> 00:11:14,720
are phishing attacks still so prevalent

00:11:13,279 --> 00:11:16,959
because people fall for them first of

00:11:14,720 --> 00:11:18,320
all and because the more complex attacks

00:11:16,959 --> 00:11:20,079
are really expensive

00:11:18,320 --> 00:11:21,600
we can look at the zero day market when

00:11:20,079 --> 00:11:24,079
it comes to things like

00:11:21,600 --> 00:11:25,360
uh ios or android vulnerabilities that

00:11:24,079 --> 00:11:27,279
are out there today where you've had

00:11:25,360 --> 00:11:28,160
zero days to apply a patch or implement

00:11:27,279 --> 00:11:29,680
security

00:11:28,160 --> 00:11:31,040
and quite frankly those costs are going

00:11:29,680 --> 00:11:32,399
up and that's a good thing because what

00:11:31,040 --> 00:11:34,640
that ends up meaning is that

00:11:32,399 --> 00:11:36,720
the attacker ends up being a very small

00:11:34,640 --> 00:11:39,360
subset of the world's uh landscape

00:11:36,720 --> 00:11:41,040
it ends up being state actors as opposed

00:11:39,360 --> 00:11:42,160
to cheeky kids on the internet for an

00:11:41,040 --> 00:11:43,920
example

00:11:42,160 --> 00:11:45,279
and so that way your application will be

00:11:43,920 --> 00:11:46,160
a little bit more robust and quite

00:11:45,279 --> 00:11:47,839
frankly

00:11:46,160 --> 00:11:50,079
you're out running a majority of the

00:11:47,839 --> 00:11:51,360
bears of course it also differentiates

00:11:50,079 --> 00:11:53,440
your project or your product if you

00:11:51,360 --> 00:11:55,120
think about apple for example

00:11:53,440 --> 00:11:56,399
they're almost universally known for a

00:11:55,120 --> 00:11:57,680
lot of the security and privacy

00:11:56,399 --> 00:11:58,399
implementations that they've put in

00:11:57,680 --> 00:12:00,560
place

00:11:58,399 --> 00:12:01,920
we can also look at examples within the

00:12:00,560 --> 00:12:03,920
software development landscape such as

00:12:01,920 --> 00:12:06,480
react versus angularjs

00:12:03,920 --> 00:12:08,320
back in the day angularjs the original

00:12:06,480 --> 00:12:10,160
version of it had a sandbox and that

00:12:08,320 --> 00:12:11,519
sandbox had a lot of escapes and it led

00:12:10,160 --> 00:12:12,959
to a lot of vulnerabilities such as

00:12:11,519 --> 00:12:15,839
remote code execution

00:12:12,959 --> 00:12:17,040
or even a full remote reverse shell i've

00:12:15,839 --> 00:12:18,480
taught a couple trainings that have

00:12:17,040 --> 00:12:19,200
shown exactly how this works and

00:12:18,480 --> 00:12:20,720
thankfully

00:12:19,200 --> 00:12:22,560
google has addressed that with later

00:12:20,720 --> 00:12:24,639
versions of angular such as by removing

00:12:22,560 --> 00:12:26,560
the sandbox in the original angularjs

00:12:24,639 --> 00:12:28,079
because people were using it wrong

00:12:26,560 --> 00:12:29,440
and in this way if we think of security

00:12:28,079 --> 00:12:31,120
as a feature from the get-go we can

00:12:29,440 --> 00:12:32,480
actually write on secure frameworks and

00:12:31,120 --> 00:12:34,160
languages like rust

00:12:32,480 --> 00:12:36,399
to eliminate a vast majority of the

00:12:34,160 --> 00:12:38,320
vulnerabilities that enter our landscape

00:12:36,399 --> 00:12:39,920
and of course once you go ahead and

00:12:38,320 --> 00:12:41,600
invest in security as a feature it

00:12:39,920 --> 00:12:43,200
allows you to save time and money

00:12:41,600 --> 00:12:45,600
it's that return on investment the

00:12:43,200 --> 00:12:47,360
compounding interest that allows you to

00:12:45,600 --> 00:12:49,120
actually go ahead and focus on other

00:12:47,360 --> 00:12:50,800
investments and experimentation so that

00:12:49,120 --> 00:12:53,120
you can grab more market share

00:12:50,800 --> 00:12:54,480
and of course differentiate your product

00:12:53,120 --> 00:12:57,200
and then pay down those other technical

00:12:54,480 --> 00:12:59,440
debts that you might be encountering

00:12:57,200 --> 00:13:00,880
so where to get started right how can we

00:12:59,440 --> 00:13:02,000
actually start implementing these things

00:13:00,880 --> 00:13:03,600
and i always like to say of course

00:13:02,000 --> 00:13:04,959
people are probably the most important

00:13:03,600 --> 00:13:06,720
thing within your organization

00:13:04,959 --> 00:13:08,320
the next most important thing is that

00:13:06,720 --> 00:13:08,880
process and you have to think about a

00:13:08,320 --> 00:13:10,720
few things

00:13:08,880 --> 00:13:12,240
first of all what speed of development

00:13:10,720 --> 00:13:14,480
do you need to actually be hitting are

00:13:12,240 --> 00:13:16,720
you a web application that needs to have

00:13:14,480 --> 00:13:19,120
sub millisecond or rather excuse me sub

00:13:16,720 --> 00:13:21,519
second or millisecond deployments

00:13:19,120 --> 00:13:23,279
or are you building a product that has a

00:13:21,519 --> 00:13:24,480
i don't know six month release cycle

00:13:23,279 --> 00:13:25,600
and it doesn't need to be patched right

00:13:24,480 --> 00:13:26,800
away because it's not connected to the

00:13:25,600 --> 00:13:28,160
internet or it's not supposed to be

00:13:26,800 --> 00:13:30,000
connected to the internet

00:13:28,160 --> 00:13:32,160
that's really going to shape how you

00:13:30,000 --> 00:13:33,839
think about solving security problems

00:13:32,160 --> 00:13:35,519
a really good example of that is

00:13:33,839 --> 00:13:37,279
thinking about how fast you might fix a

00:13:35,519 --> 00:13:38,880
problem if it was impacting your revenue

00:13:37,279 --> 00:13:39,519
generation in some way such as being

00:13:38,880 --> 00:13:40,720
able to

00:13:39,519 --> 00:13:42,720
have people go through a checkout

00:13:40,720 --> 00:13:45,680
process if you react

00:13:42,720 --> 00:13:46,399
faster than security for that thing

00:13:45,680 --> 00:13:48,160
because it's

00:13:46,399 --> 00:13:49,440
impacting your revenue you probably

00:13:48,160 --> 00:13:51,360
should think about how you can actually

00:13:49,440 --> 00:13:52,639
make security react faster as well in

00:13:51,360 --> 00:13:53,760
terms of implementing them as part of

00:13:52,639 --> 00:13:55,120
that process

00:13:53,760 --> 00:13:56,800
and then of course think of your breadth

00:13:55,120 --> 00:13:57,279
of testing you want to be considerate

00:13:56,800 --> 00:13:58,560
about

00:13:57,279 --> 00:14:00,480
not only how much are you actually

00:13:58,560 --> 00:14:02,079
covering your code with unit tests and

00:14:00,480 --> 00:14:02,480
integration tests that follow that happy

00:14:02,079 --> 00:14:03,839
path

00:14:02,480 --> 00:14:05,040
but work with your security team to

00:14:03,839 --> 00:14:06,000
think about how you can follow the

00:14:05,040 --> 00:14:07,279
unhappy path

00:14:06,000 --> 00:14:09,279
through the things that your application

00:14:07,279 --> 00:14:10,880
that it's not expecting or that it would

00:14:09,279 --> 00:14:12,880
should handle gracefully or

00:14:10,880 --> 00:14:14,399
would uh otherwise avoid falling over

00:14:12,880 --> 00:14:15,920
because of the unhappy

00:14:14,399 --> 00:14:17,920
or malicious unit test that you're

00:14:15,920 --> 00:14:20,160
throwing at it and then of course think

00:14:17,920 --> 00:14:22,480
about that mean time to resolution

00:14:20,160 --> 00:14:24,079
measure of course how fast it can take

00:14:22,480 --> 00:14:24,800
you to solve some of the problems within

00:14:24,079 --> 00:14:26,560
your code base

00:14:24,800 --> 00:14:28,320
that are very traditional bugs impacting

00:14:26,560 --> 00:14:30,000
your day-to-day users and then think

00:14:28,320 --> 00:14:31,760
about how fast you can react to your

00:14:30,000 --> 00:14:33,120
security vulnerabilities if they're

00:14:31,760 --> 00:14:35,040
going to the backlog and living there

00:14:33,120 --> 00:14:36,880
forever and never getting resolved

00:14:35,040 --> 00:14:38,800
you probably are going to encounter an

00:14:36,880 --> 00:14:40,079
issue at some point in the history of

00:14:38,800 --> 00:14:41,040
your application as a result of those

00:14:40,079 --> 00:14:41,920
vulnerabilities that are going

00:14:41,040 --> 00:14:43,680
unaddressed

00:14:41,920 --> 00:14:44,800
so measure it and then bring it forward

00:14:43,680 --> 00:14:46,720
to your leadership to make sure that it

00:14:44,800 --> 00:14:48,079
gets addressed on a regular basis

00:14:46,720 --> 00:14:49,760
which gets to the last point of course

00:14:48,079 --> 00:14:50,320
which is allocating time for technical

00:14:49,760 --> 00:14:51,839
debt

00:14:50,320 --> 00:14:53,519
i like to say that if you allocate time

00:14:51,839 --> 00:14:55,760
to fix those things uh

00:14:53,519 --> 00:14:56,720
periodically fix the broken windows

00:14:55,760 --> 00:14:59,279
paint the walls

00:14:56,720 --> 00:15:00,160
change uh change the drapes it allows

00:14:59,279 --> 00:15:02,480
you in this case

00:15:00,160 --> 00:15:03,760
to improve your code over time making

00:15:02,480 --> 00:15:05,120
the house worth living in and the

00:15:03,760 --> 00:15:06,639
neighborhood a better place for your

00:15:05,120 --> 00:15:08,399
customers to live in

00:15:06,639 --> 00:15:10,160
so if you allocate about 20 time for

00:15:08,399 --> 00:15:11,279
technical debt over time

00:15:10,160 --> 00:15:13,360
you're going to end up being able to

00:15:11,279 --> 00:15:15,040
release faster to have better testing

00:15:13,360 --> 00:15:18,000
and resolve problems quicker

00:15:15,040 --> 00:15:19,199
it pays itself in the long term and then

00:15:18,000 --> 00:15:19,760
of course in terms of some tools that

00:15:19,199 --> 00:15:21,279
you can use

00:15:19,760 --> 00:15:23,519
i like to say with static analysis

00:15:21,279 --> 00:15:25,440
github's advanced securities toolset is

00:15:23,519 --> 00:15:27,760
phenomenal their acquisition of semel

00:15:25,440 --> 00:15:29,279
is light years ahead of other products

00:15:27,760 --> 00:15:30,800
in the space and i say that from

00:15:29,279 --> 00:15:32,800
being a code security engineer at

00:15:30,800 --> 00:15:34,800
varicode in a past life

00:15:32,800 --> 00:15:36,160
it is one of those tools that can really

00:15:34,800 --> 00:15:37,519
make a difference in your codebase and i

00:15:36,160 --> 00:15:38,959
strongly encourage any open source

00:15:37,519 --> 00:15:40,959
project to check that out

00:15:38,959 --> 00:15:42,160
and then if you have ruby as your main

00:15:40,959 --> 00:15:44,320
code base uh

00:15:42,160 --> 00:15:45,759
breakman great tool open source it's

00:15:44,320 --> 00:15:47,839
publicly available i think they now have

00:15:45,759 --> 00:15:49,839
a paid version but also a free version

00:15:47,839 --> 00:15:51,199
and then soda cube is another great one

00:15:49,839 --> 00:15:52,560
as well from a static analysis

00:15:51,199 --> 00:15:54,720
perspective to give you some

00:15:52,560 --> 00:15:56,079
some ideas on things you can do and then

00:15:54,720 --> 00:15:57,839
from dynamic analysis

00:15:56,079 --> 00:15:59,199
the open web application security

00:15:57,839 --> 00:16:01,839
project or owasp

00:15:59,199 --> 00:16:02,480
has the zed attack proxy or zap that

00:16:01,839 --> 00:16:04,399
electric

00:16:02,480 --> 00:16:06,320
uh symbol that you see there great

00:16:04,399 --> 00:16:08,320
dynamic analysis tool has an api

00:16:06,320 --> 00:16:09,680
functionality to it is free

00:16:08,320 --> 00:16:10,880
and is something i strongly encourage

00:16:09,680 --> 00:16:11,759
people to check out and start using

00:16:10,880 --> 00:16:13,440
regularly

00:16:11,759 --> 00:16:15,600
just to see what happens again throw

00:16:13,440 --> 00:16:18,399
that spaghetti at your code and see what

00:16:15,600 --> 00:16:19,920
sticks uh then there's w3af by andreas

00:16:18,399 --> 00:16:22,240
riancho who is another

00:16:19,920 --> 00:16:24,079
great developer who has provided a nice

00:16:22,240 --> 00:16:26,240
dynamic analysis attack toolset

00:16:24,079 --> 00:16:27,680
really great for java and other tools

00:16:26,240 --> 00:16:28,399
which are very common in the enterprise

00:16:27,680 --> 00:16:30,079
today

00:16:28,399 --> 00:16:31,759
dependency checking again making sure

00:16:30,079 --> 00:16:34,000
that you check the ingredients

00:16:31,759 --> 00:16:35,040
as well as of the static analysis recipe

00:16:34,000 --> 00:16:36,079
dependibot

00:16:35,040 --> 00:16:37,839
really great tool if you're on the

00:16:36,079 --> 00:16:39,680
github platform which i would think that

00:16:37,839 --> 00:16:41,600
you probably are if you're watching this

00:16:39,680 --> 00:16:43,519
uh and then of course osp's dependency

00:16:41,600 --> 00:16:43,839
check tool uh if you need another thing

00:16:43,519 --> 00:16:45,519
to

00:16:43,839 --> 00:16:46,560
go ahead and look into the environment

00:16:45,519 --> 00:16:48,000
and make sure that things are working

00:16:46,560 --> 00:16:48,880
appropriately and the libraries you're

00:16:48,000 --> 00:16:51,440
using are fresh

00:16:48,880 --> 00:16:52,880
and secure and then secrets management

00:16:51,440 --> 00:16:54,320
making sure that you're actually dealing

00:16:52,880 --> 00:16:56,399
with those problems

00:16:54,320 --> 00:16:58,160
of committing secrets to your code by

00:16:56,399 --> 00:16:59,279
understanding how that works and making

00:16:58,160 --> 00:17:01,920
sure that

00:16:59,279 --> 00:17:03,600
people understand how to use the secrets

00:17:01,920 --> 00:17:03,839
fault that you're using of course cyber

00:17:03,600 --> 00:17:05,600
arc

00:17:03,839 --> 00:17:07,360
conjure also has another solution in the

00:17:05,600 --> 00:17:09,120
space and i strongly recommend you check

00:17:07,360 --> 00:17:11,520
it out

00:17:09,120 --> 00:17:13,120
and then for further learning i strongly

00:17:11,520 --> 00:17:14,720
recommend these three books to just

00:17:13,120 --> 00:17:15,439
about anyone that i talk to the devops

00:17:14,720 --> 00:17:17,039
handbook

00:17:15,439 --> 00:17:18,640
is something that every individual

00:17:17,039 --> 00:17:20,240
contributor whether you're a developer

00:17:18,640 --> 00:17:21,919
or a project manager

00:17:20,240 --> 00:17:23,520
or someone that's working with a

00:17:21,919 --> 00:17:25,760
software product in some way

00:17:23,520 --> 00:17:26,640
should read front to back because it

00:17:25,760 --> 00:17:27,919
will cover

00:17:26,640 --> 00:17:29,600
pretty much every use case that you can

00:17:27,919 --> 00:17:30,960
think of including part six which is

00:17:29,600 --> 00:17:32,960
about security

00:17:30,960 --> 00:17:34,480
which is why i often say devsecops is

00:17:32,960 --> 00:17:35,919
the buzzword today but it's really just

00:17:34,480 --> 00:17:37,200
part of devops it's always been part of

00:17:35,919 --> 00:17:38,480
the devops handbook and it's something

00:17:37,200 --> 00:17:39,440
that i encourage a lot of people to go

00:17:38,480 --> 00:17:41,039
read

00:17:39,440 --> 00:17:42,640
for those people that are either in the

00:17:41,039 --> 00:17:44,640
manager's path or

00:17:42,640 --> 00:17:46,240
in terms of their career or are looking

00:17:44,640 --> 00:17:48,000
to get into management i strongly

00:17:46,240 --> 00:17:49,200
encourage camille fournier's book the

00:17:48,000 --> 00:17:51,120
manager's path

00:17:49,200 --> 00:17:52,480
uh largely because it brings that human

00:17:51,120 --> 00:17:52,960
element to the problems that we deal

00:17:52,480 --> 00:17:54,480
with

00:17:52,960 --> 00:17:56,000
it thinks about of course making sure

00:17:54,480 --> 00:17:57,360
that you're not burning yourself out or

00:17:56,000 --> 00:17:59,600
your team's out

00:17:57,360 --> 00:18:02,080
and it talks through kind of every level

00:17:59,600 --> 00:18:03,120
from a lead engineer all the way through

00:18:02,080 --> 00:18:04,960
cto

00:18:03,120 --> 00:18:06,880
on what your world will look like as a

00:18:04,960 --> 00:18:07,600
result of moving down that path in your

00:18:06,880 --> 00:18:09,039
career

00:18:07,600 --> 00:18:11,200
and then finally for those leaders that

00:18:09,039 --> 00:18:11,760
are watching i strongly strongly

00:18:11,200 --> 00:18:13,440
encourage

00:18:11,760 --> 00:18:15,360
reading lean enterprise it is one of

00:18:13,440 --> 00:18:16,720
those books that will bring forward

00:18:15,360 --> 00:18:18,080
in the first half of the book a lot of

00:18:16,720 --> 00:18:18,720
the ideas that you see in the devops

00:18:18,080 --> 00:18:21,600
handbook

00:18:18,720 --> 00:18:22,960
but in the second half it's pure gold it

00:18:21,600 --> 00:18:24,000
will talk through a lot of the different

00:18:22,960 --> 00:18:24,799
challenges that you're going to

00:18:24,000 --> 00:18:26,559
experience

00:18:24,799 --> 00:18:28,000
and then of course how to slowly break

00:18:26,559 --> 00:18:29,200
them down and rethink about

00:18:28,000 --> 00:18:31,360
the way that you're going to address

00:18:29,200 --> 00:18:34,480
them and then move forward and build a

00:18:31,360 --> 00:18:36,000
better enterprise as a result

00:18:34,480 --> 00:18:37,360
and finally i just want to say thank you

00:18:36,000 --> 00:18:38,400
to a few people that are near and dear

00:18:37,360 --> 00:18:40,240
to my heart

00:18:38,400 --> 00:18:42,640
first and foremost is my lovely wife

00:18:40,240 --> 00:18:42,960
sarah she is really the light of my life

00:18:42,640 --> 00:18:45,760
and

00:18:42,960 --> 00:18:47,120
i'm i'm very blessed to have her as a

00:18:45,760 --> 00:18:48,559
part of it and especially

00:18:47,120 --> 00:18:50,720
living in such interesting times as

00:18:48,559 --> 00:18:52,160
these she has been a continued light

00:18:50,720 --> 00:18:54,480
and encouraging me to do things like

00:18:52,160 --> 00:18:55,679
this and continuing to move forward

00:18:54,480 --> 00:18:57,840
and then of course there's my good

00:18:55,679 --> 00:19:00,240
friend and my sensei jason haddocks who

00:18:57,840 --> 00:19:02,240
has taught me an incredible amount about

00:19:00,240 --> 00:19:03,360
not only information security and web

00:19:02,240 --> 00:19:05,200
application hacking

00:19:03,360 --> 00:19:06,880
but about being a good human being and

00:19:05,200 --> 00:19:08,240
jason is absolutely just one of the very

00:19:06,880 --> 00:19:09,840
best that i know

00:19:08,240 --> 00:19:12,160
and then finally there's my good buddy

00:19:09,840 --> 00:19:13,360
at github adam matthews a huge shout out

00:19:12,160 --> 00:19:14,799
and thank you to adam

00:19:13,360 --> 00:19:16,960
of course for recommending that i get

00:19:14,799 --> 00:19:18,880
involved in this uh but also for

00:19:16,960 --> 00:19:20,640
encouraging me to continue to rethink

00:19:18,880 --> 00:19:22,080
about the way that github can make

00:19:20,640 --> 00:19:22,799
changes in the enterprise and make it

00:19:22,080 --> 00:19:24,960
better and

00:19:22,799 --> 00:19:26,880
allowing us here at thermo fisher to

00:19:24,960 --> 00:19:28,320
engage with the team there at github

00:19:26,880 --> 00:19:30,320
and making sure that they hear of all

00:19:28,320 --> 00:19:32,160
the things that we'd really love to do

00:19:30,320 --> 00:19:33,840
so with that as i always used to end my

00:19:32,160 --> 00:19:35,039
podcast i just want to remind everyone

00:19:33,840 --> 00:19:39,200
to git commit

00:19:35,039 --> 00:19:39,200

YouTube URL: https://www.youtube.com/watch?v=GNs-6gFZ2CM


