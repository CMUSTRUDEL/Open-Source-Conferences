Title: Accelerating software development safely with GitHub Enterprise - GitHub Universe 2020
Publication date: 2020-12-09
Playlist: GitHub Universe 2020: Enterprise - Secure Development
Description: 
	Presented by Maya Ross, Director of Product, Enterprise, GitHub

In this session, we are introducing the biggest ever GitHub Enterprise Server release, and a host of improvements to the GitHub Enterprise account to help you run your business securely and at scale. We'll show you how you can use GitHub Enterprise Server to manage your whole CI/CD pipeline using Actions, the number one CI solution on GitHub.com. You’ll also see how you can manage your packages, find security vulnerabilies before they hit production, and enable your developers to work on the go with GitHub’s mobile apps—for the first time ever on GitHub Enterprise Server. 

For more from GitHub Universe 2020, visit https://githubuniverse.com

As always, feel free to leave us a comment below and don't forget to subscribe: http://bit.ly/subgithub

Thanks!

Connect with us.
Facebook: http://fb.com/github
Twitter: http://twitter.com/github
LinkedIn: http://linkedin.com/company/github

About GitHub
GitHub is the best place to share code with friends, co-workers, classmates, and complete strangers. Millions of people use GitHub to build amazing things together. For more info, go to http://github.com
Captions: 
	00:00:07,520 --> 00:00:10,639
hello

00:00:08,320 --> 00:00:11,599
that was a awesome introduction thank

00:00:10,639 --> 00:00:14,000
you so much

00:00:11,599 --> 00:00:15,599
it's uh great to be here today hope

00:00:14,000 --> 00:00:18,720
you're all enjoying universe

00:00:15,599 --> 00:00:19,920
got to check out the keynote earlier and

00:00:18,720 --> 00:00:20,880
today i'm going to be talking to you a

00:00:19,920 --> 00:00:23,920
little bit about

00:00:20,880 --> 00:00:25,840
github enterprise so myself and my

00:00:23,920 --> 00:00:28,720
colleagues spend a lot of time

00:00:25,840 --> 00:00:29,519
talking to administrators people like

00:00:28,720 --> 00:00:32,480
keith who

00:00:29,519 --> 00:00:33,280
run devops tooling for their companies

00:00:32,480 --> 00:00:35,920
and

00:00:33,280 --> 00:00:37,680
we know that you've got a lot to do um

00:00:35,920 --> 00:00:40,160
and it's pretty hard sometimes

00:00:37,680 --> 00:00:41,920
you have to secure all your software and

00:00:40,160 --> 00:00:42,879
your applications across the supply

00:00:41,920 --> 00:00:45,600
chain

00:00:42,879 --> 00:00:47,039
you need to help your teams to automate

00:00:45,600 --> 00:00:49,680
workflows so they can

00:00:47,039 --> 00:00:52,160
focus on what they do best you need to

00:00:49,680 --> 00:00:55,760
try and build a culture of collaboration

00:00:52,160 --> 00:00:59,280
virtual teams communities of practice um

00:00:55,760 --> 00:01:01,920
to help swarm around new ideas and

00:00:59,280 --> 00:01:03,760
products that you want to launch and of

00:01:01,920 --> 00:01:05,439
course you need to make sure that all of

00:01:03,760 --> 00:01:09,200
the tools you're responsible for

00:01:05,439 --> 00:01:12,240
are available secure and governed

00:01:09,200 --> 00:01:13,840
and achieving those things is hard at

00:01:12,240 --> 00:01:16,880
github we have one

00:01:13,840 --> 00:01:19,280
underlying philosophy for how we help

00:01:16,880 --> 00:01:20,799
companies big and small to achieve goals

00:01:19,280 --> 00:01:23,520
like these

00:01:20,799 --> 00:01:25,439
and that is to empower developers with

00:01:23,520 --> 00:01:27,200
an integrated platform

00:01:25,439 --> 00:01:28,640
and in this talk i'm going to talk to

00:01:27,200 --> 00:01:31,119
you about how you can

00:01:28,640 --> 00:01:32,320
use some of the capabilities in github

00:01:31,119 --> 00:01:35,360
enterprise

00:01:32,320 --> 00:01:35,759
to achieve goals like that but first of

00:01:35,360 --> 00:01:38,400
all

00:01:35,759 --> 00:01:40,159
what are those capabilities so those

00:01:38,400 --> 00:01:43,439
capabilities set across

00:01:40,159 --> 00:01:48,079
four core pillars coding

00:01:43,439 --> 00:01:50,399
automation security and planning

00:01:48,079 --> 00:01:52,479
and all of those set on our kind of

00:01:50,399 --> 00:01:55,759
secure enterprise foundation

00:01:52,479 --> 00:01:59,280
that allows administrators to secure

00:01:55,759 --> 00:02:01,759
your uh code and access to it

00:01:59,280 --> 00:02:03,680
and to govern it through policies it

00:02:01,759 --> 00:02:06,079
also enables you to build a community

00:02:03,680 --> 00:02:08,720
and crucially tap into the power of that

00:02:06,079 --> 00:02:11,039
github.com community

00:02:08,720 --> 00:02:12,720
and i'm extremely pleased to say that

00:02:11,039 --> 00:02:15,520
all of these capabilities

00:02:12,720 --> 00:02:17,280
are now coming to enterprise server to

00:02:15,520 --> 00:02:19,840
our thousands of customers

00:02:17,280 --> 00:02:21,040
running github enterprise in their own

00:02:19,840 --> 00:02:23,440
environments

00:02:21,040 --> 00:02:24,560
our enterprise server includes github

00:02:23,440 --> 00:02:27,760
actions

00:02:24,560 --> 00:02:30,640
packages advanced security code scanning

00:02:27,760 --> 00:02:31,440
and secret scanning and also comes with

00:02:30,640 --> 00:02:34,879
support for

00:02:31,440 --> 00:02:37,280
our ios and android apps

00:02:34,879 --> 00:02:39,519
those apps are amazing they have more

00:02:37,280 --> 00:02:42,560
than a million downloads

00:02:39,519 --> 00:02:45,040
and they're gonna enable developers to

00:02:42,560 --> 00:02:46,400
collaborate check notifications approve

00:02:45,040 --> 00:02:49,440
pull requests from

00:02:46,400 --> 00:02:50,440
you know in bed in the bath on a bus no

00:02:49,440 --> 00:02:52,560
matter where they are

00:02:50,440 --> 00:02:54,800
[Music]

00:02:52,560 --> 00:02:56,239
but github enterprise sits across the

00:02:54,800 --> 00:02:59,920
cloud as well

00:02:56,239 --> 00:03:02,640
and we have a few hundred companies

00:02:59,920 --> 00:03:04,800
who are using uh github enterprise in a

00:03:02,640 --> 00:03:07,440
hybrid environment so they're using both

00:03:04,800 --> 00:03:09,200
enterprise server and enterprise cloud

00:03:07,440 --> 00:03:10,319
together and i'm going to show you some

00:03:09,200 --> 00:03:13,200
ways today that

00:03:10,319 --> 00:03:15,840
you can do that so let's talk first of

00:03:13,200 --> 00:03:18,480
all about that enterprise foundation

00:03:15,840 --> 00:03:20,720
so what is an enterprise account at

00:03:18,480 --> 00:03:21,760
github for those of you who haven't seen

00:03:20,720 --> 00:03:23,599
one before

00:03:21,760 --> 00:03:25,920
we'll just go through these kind of

00:03:23,599 --> 00:03:28,799
basics so an enterprise account

00:03:25,920 --> 00:03:30,640
is an umbrella around your users and

00:03:28,799 --> 00:03:33,680
around your organizations

00:03:30,640 --> 00:03:34,480
for many companies uh it's a way to

00:03:33,680 --> 00:03:36,159
consolidate

00:03:34,480 --> 00:03:38,400
different orgs that their teams have

00:03:36,159 --> 00:03:40,560
spun up in order to create

00:03:38,400 --> 00:03:42,159
one team and kind of one governed

00:03:40,560 --> 00:03:44,319
environment

00:03:42,159 --> 00:03:45,200
and that secure umbrella for your team

00:03:44,319 --> 00:03:47,840
comes with

00:03:45,200 --> 00:03:50,159
a certain set of capabilities that help

00:03:47,840 --> 00:03:51,760
you secure and govern it

00:03:50,159 --> 00:03:53,280
a couple that i'm going to walk through

00:03:51,760 --> 00:03:55,840
today are new so

00:03:53,280 --> 00:03:57,360
verified domains and get events in the

00:03:55,840 --> 00:04:00,720
enterprise cloud

00:03:57,360 --> 00:04:01,200
audit log are new capabilities just

00:04:00,720 --> 00:04:04,959
coming

00:04:01,200 --> 00:04:05,920
into beta now so let's hop in and just

00:04:04,959 --> 00:04:15,760
do a quick demo

00:04:05,920 --> 00:04:19,199
of that enterprise account

00:04:15,760 --> 00:04:21,120
all right so here we have a

00:04:19,199 --> 00:04:22,560
enterprise cloud account just a demo one

00:04:21,120 --> 00:04:25,520
that i have set up

00:04:22,560 --> 00:04:27,120
and it has four organizations in it you

00:04:25,520 --> 00:04:28,880
can have any number of orgs that you

00:04:27,120 --> 00:04:30,960
want some companies have one

00:04:28,880 --> 00:04:33,280
some companies have thousands or even

00:04:30,960 --> 00:04:35,759
tens of thousands depending on how they

00:04:33,280 --> 00:04:38,000
want to manage their company

00:04:35,759 --> 00:04:39,759
and each of these organizations can have

00:04:38,000 --> 00:04:42,560
different security and governance

00:04:39,759 --> 00:04:45,040
policies applied to them

00:04:42,560 --> 00:04:46,800
i can also see all of the people in my

00:04:45,040 --> 00:04:49,680
company so here i just have

00:04:46,800 --> 00:04:50,240
a company of three whole people and i

00:04:49,680 --> 00:04:52,560
can see

00:04:50,240 --> 00:04:53,840
some security information about each

00:04:52,560 --> 00:04:56,320
person

00:04:53,840 --> 00:04:58,560
now i mentioned that you can use

00:04:56,320 --> 00:05:00,800
enterprise in a hybrid way

00:04:58,560 --> 00:05:02,960
here one of the things you can do if you

00:05:00,800 --> 00:05:05,120
have both cloud and server is to see

00:05:02,960 --> 00:05:06,320
all of your users across both

00:05:05,120 --> 00:05:08,840
environments

00:05:06,320 --> 00:05:10,320
and that is enabled through github

00:05:08,840 --> 00:05:13,840
connect

00:05:10,320 --> 00:05:16,720
if i jump into my security settings i

00:05:13,840 --> 00:05:18,080
can have a look at some of those uh ip

00:05:16,720 --> 00:05:20,080
security settings

00:05:18,080 --> 00:05:21,440
so first of all the one that most

00:05:20,080 --> 00:05:24,479
companies set up first

00:05:21,440 --> 00:05:27,520
is saml authentication this delegates

00:05:24,479 --> 00:05:30,880
authentication to your identity provider

00:05:27,520 --> 00:05:33,440
here i have this set up with octa

00:05:30,880 --> 00:05:35,120
so you can see i could sign in of course

00:05:33,440 --> 00:05:38,400
it will just sign me straight in

00:05:35,120 --> 00:05:41,039
oh no it won't um and uh

00:05:38,400 --> 00:05:42,160
that ensures that all of your enterprise

00:05:41,039 --> 00:05:44,400
assets

00:05:42,160 --> 00:05:45,840
can only be accessed by people signed in

00:05:44,400 --> 00:05:48,320
through your idp

00:05:45,840 --> 00:05:49,919
we've also recently added support for

00:05:48,320 --> 00:05:51,120
automated provisioning and

00:05:49,919 --> 00:05:54,479
deprovisioning

00:05:51,120 --> 00:05:56,319
for anyone using octa so this means that

00:05:54,479 --> 00:05:57,440
whenever somebody joins your

00:05:56,319 --> 00:05:59,120
organization

00:05:57,440 --> 00:06:01,520
or leaves it their account will be

00:05:59,120 --> 00:06:03,199
created or removed automatically

00:06:01,520 --> 00:06:04,880
this is particularly great when you're

00:06:03,199 --> 00:06:05,440
off boarding people and you want to

00:06:04,880 --> 00:06:08,880
remove

00:06:05,440 --> 00:06:11,039
access quickly their account will be

00:06:08,880 --> 00:06:15,600
removed from github within minutes

00:06:11,039 --> 00:06:18,160
when it is removed from your idp group

00:06:15,600 --> 00:06:20,000
iplowless is one of our more advanced

00:06:18,160 --> 00:06:22,080
conditional access policies and it

00:06:20,000 --> 00:06:24,240
enables you to ensure that your

00:06:22,080 --> 00:06:26,240
enterprise resources can only be

00:06:24,240 --> 00:06:27,199
accessed by people in your corporate

00:06:26,240 --> 00:06:31,280
network

00:06:27,199 --> 00:06:33,120
here i have a couple set up

00:06:31,280 --> 00:06:35,039
moving on let's have a look at verified

00:06:33,120 --> 00:06:36,160
domains so as i mentioned this is one of

00:06:35,039 --> 00:06:39,280
our newer features

00:06:36,160 --> 00:06:41,199
it's just about to launch in beta

00:06:39,280 --> 00:06:42,880
and what this enables you to do is to

00:06:41,199 --> 00:06:45,680
ensure that no

00:06:42,880 --> 00:06:47,919
data is lost through the email channel

00:06:45,680 --> 00:06:49,039
essentially by verifying domains that

00:06:47,919 --> 00:06:52,000
you own

00:06:49,039 --> 00:06:53,120
if you verify a domain users will only

00:06:52,000 --> 00:06:56,080
be able to receive

00:06:53,120 --> 00:06:56,960
email notifications uh if they have an

00:06:56,080 --> 00:07:00,400
email address

00:06:56,960 --> 00:07:04,560
at one of those domains so we can just

00:07:00,400 --> 00:07:04,560
add one briefly

00:07:05,680 --> 00:07:11,919
you can see all i need to do is to add

00:07:08,800 --> 00:07:13,840
this to my dns record and then the

00:07:11,919 --> 00:07:16,000
domain will be verified within a couple

00:07:13,840 --> 00:07:18,080
of days

00:07:16,000 --> 00:07:20,080
hopping over to that audit log so of

00:07:18,080 --> 00:07:23,199
course the ability to audit the whole

00:07:20,080 --> 00:07:23,599
enterprise is crucially important and

00:07:23,199 --> 00:07:26,240
here

00:07:23,599 --> 00:07:27,039
we have a single view of all events that

00:07:26,240 --> 00:07:29,520
are going

00:07:27,039 --> 00:07:31,360
on across all organizations and all

00:07:29,520 --> 00:07:33,039
users

00:07:31,360 --> 00:07:34,400
as i mentioned one of the big things

00:07:33,039 --> 00:07:36,639
that we've been working on this year

00:07:34,400 --> 00:07:38,400
is to add gear events to the enterprise

00:07:36,639 --> 00:07:40,720
cloud audit log and i'm just going to

00:07:38,400 --> 00:07:43,280
show you briefly how that works

00:07:40,720 --> 00:07:44,800
so first of all many of our customers

00:07:43,280 --> 00:07:48,479
like to query the audit log

00:07:44,800 --> 00:07:52,639
through the api and we can do that here

00:07:48,479 --> 00:07:55,199
just a quick example here just querying

00:07:52,639 --> 00:07:56,560
only get events from my enterprise and

00:07:55,199 --> 00:07:59,759
you can see it's bringing up

00:07:56,560 --> 00:08:01,919
get fetch events get clone uh

00:07:59,759 --> 00:08:03,360
and get push events from across the

00:08:01,919 --> 00:08:05,840
enterprise

00:08:03,360 --> 00:08:07,680
i can query both git and github events

00:08:05,840 --> 00:08:10,560
at the same time if you want to

00:08:07,680 --> 00:08:12,080
or just one or the other you can also

00:08:10,560 --> 00:08:14,479
export those

00:08:12,080 --> 00:08:15,440
uh get events jose and your github

00:08:14,479 --> 00:08:17,120
events

00:08:15,440 --> 00:08:18,560
next year we'll be adding those get

00:08:17,120 --> 00:08:21,680
events to this ui

00:08:18,560 --> 00:08:25,120
as well now let's just hop

00:08:21,680 --> 00:08:26,960
in to one of my organizations

00:08:25,120 --> 00:08:28,879
um we're going to look at optodemo

00:08:26,960 --> 00:08:32,080
platform

00:08:28,879 --> 00:08:34,560
so here you can see we have a couple of

00:08:32,080 --> 00:08:36,479
repos these are internal repos

00:08:34,560 --> 00:08:37,919
which means they're visible by everyone

00:08:36,479 --> 00:08:40,080
across my enterprise

00:08:37,919 --> 00:08:42,800
internal repos are really the foundation

00:08:40,080 --> 00:08:44,880
of inner sourcing with github

00:08:42,800 --> 00:08:47,120
and one of these repos is building a

00:08:44,880 --> 00:08:49,839
company wiki

00:08:47,120 --> 00:08:51,279
this is a company wiki built on private

00:08:49,839 --> 00:08:54,000
pages

00:08:51,279 --> 00:08:54,880
private pages again is another new

00:08:54,000 --> 00:08:57,680
feature

00:08:54,880 --> 00:08:59,600
which is in beta now and which is gonna

00:08:57,680 --> 00:09:00,800
launch for everybody before the end of

00:08:59,600 --> 00:09:02,720
the year

00:09:00,800 --> 00:09:04,720
and what it means is that you can create

00:09:02,720 --> 00:09:05,680
pages just as you know and love them

00:09:04,720 --> 00:09:07,920
with github

00:09:05,680 --> 00:09:09,680
which are only accessible by people in

00:09:07,920 --> 00:09:11,760
your enterprise

00:09:09,680 --> 00:09:13,519
and the visibility is built of the

00:09:11,760 --> 00:09:16,000
visibility of your repo

00:09:13,519 --> 00:09:16,880
so this is an internal repo which means

00:09:16,000 --> 00:09:19,760
the page bill

00:09:16,880 --> 00:09:21,760
offer is visible by everyone in my

00:09:19,760 --> 00:09:24,720
enterprise

00:09:21,760 --> 00:09:26,560
perfect for company wikis in fact we use

00:09:24,720 --> 00:09:29,680
a private page for the github

00:09:26,560 --> 00:09:32,160
intranet and our engineering wiki here's

00:09:29,680 --> 00:09:33,920
a basic example

00:09:32,160 --> 00:09:35,200
one of the other things i really like

00:09:33,920 --> 00:09:38,320
about private pages

00:09:35,200 --> 00:09:40,959
is this edit flow so now since i have

00:09:38,320 --> 00:09:43,600
write access on that repo i can edit the

00:09:40,959 --> 00:09:47,120
private page directly from here

00:09:43,600 --> 00:09:49,040
make changes commit it and then those

00:09:47,120 --> 00:09:50,800
uh changes will go live within just a

00:09:49,040 --> 00:09:53,920
couple of minutes really nice

00:09:50,800 --> 00:09:55,040
integrated workflow and great especially

00:09:53,920 --> 00:09:57,600
for people who

00:09:55,040 --> 00:10:00,000
aren't so technical but need to maintain

00:09:57,600 --> 00:10:03,200
knowledge basis

00:10:00,000 --> 00:10:04,160
let's just go back to my wiki just want

00:10:03,200 --> 00:10:06,000
to touch briefly

00:10:04,160 --> 00:10:07,600
on some branch protection rules and how

00:10:06,000 --> 00:10:08,320
we're extending them you might have seen

00:10:07,600 --> 00:10:10,240
a little bit

00:10:08,320 --> 00:10:11,680
of this in the keynote if you manage to

00:10:10,240 --> 00:10:13,760
watch it

00:10:11,680 --> 00:10:15,600
so here i have a couple of branch

00:10:13,760 --> 00:10:18,480
protection rules set up

00:10:15,600 --> 00:10:20,560
which means that any code changes need

00:10:18,480 --> 00:10:21,600
to be reviewed first of all by a third

00:10:20,560 --> 00:10:24,160
party

00:10:21,600 --> 00:10:26,240
and then by my code owners normally

00:10:24,160 --> 00:10:29,600
often a security or expert team

00:10:26,240 --> 00:10:31,680
before they're merged in github has also

00:10:29,600 --> 00:10:33,440
recently expanded the same concept to

00:10:31,680 --> 00:10:35,440
environment protection rules

00:10:33,440 --> 00:10:37,120
so if you're using github actions for

00:10:35,440 --> 00:10:40,079
your ci cd flows

00:10:37,120 --> 00:10:41,360
you can put in checks on environment

00:10:40,079 --> 00:10:43,600
deployments

00:10:41,360 --> 00:10:45,200
just have a quick look at that here i

00:10:43,600 --> 00:10:48,399
have another repo

00:10:45,200 --> 00:10:51,040
it's set up with these environments and

00:10:48,399 --> 00:10:52,720
my production environment has a

00:10:51,040 --> 00:10:54,800
environment protection rule again

00:10:52,720 --> 00:10:56,720
saying that i need to have a couple of

00:10:54,800 --> 00:11:00,560
reviewers

00:10:56,720 --> 00:11:02,959
jump over to actions we can see

00:11:00,560 --> 00:11:04,000
a pull request that has been merged in

00:11:02,959 --> 00:11:07,200
and then deployed

00:11:04,000 --> 00:11:07,680
through my environments and as per my

00:11:07,200 --> 00:11:10,720
rule

00:11:07,680 --> 00:11:12,720
it has been approved by me this

00:11:10,720 --> 00:11:14,000
is one of the biggest things that we've

00:11:12,720 --> 00:11:16,720
shipped in the last few months

00:11:14,000 --> 00:11:18,079
chris pat is doing a talk deep diving

00:11:16,720 --> 00:11:19,040
into this new experience i'd really

00:11:18,079 --> 00:11:22,480
encourage you

00:11:19,040 --> 00:11:22,480
to go watch it if you can

00:11:22,720 --> 00:11:25,839
all right so

00:11:25,920 --> 00:11:29,839
let's just hop back here

00:11:31,920 --> 00:11:36,640
so there we have done a kind of brief

00:11:33,680 --> 00:11:38,880
overview of the enterprise account

00:11:36,640 --> 00:11:40,480
but we talked a bit about reliability

00:11:38,880 --> 00:11:43,920
and availability

00:11:40,480 --> 00:11:44,560
and we know that for our enterprise

00:11:43,920 --> 00:11:47,839
customers

00:11:44,560 --> 00:11:50,880
this is really your priority number one

00:11:47,839 --> 00:11:53,279
and 50 million people rely on github to

00:11:50,880 --> 00:11:54,959
build and share their code and the same

00:11:53,279 --> 00:11:56,000
platform the same code that powers

00:11:54,959 --> 00:11:58,399
github.com

00:11:56,000 --> 00:12:00,560
also powers our github enterprise

00:11:58,399 --> 00:12:02,880
offerings

00:12:00,560 --> 00:12:04,240
we know from our ghes customers in

00:12:02,880 --> 00:12:06,240
particular that

00:12:04,240 --> 00:12:08,560
um you know they're under a lot of

00:12:06,240 --> 00:12:10,240
pressure to administer this

00:12:08,560 --> 00:12:11,839
product make it available to their

00:12:10,240 --> 00:12:14,079
company and

00:12:11,839 --> 00:12:16,000
over the last year we have been making

00:12:14,079 --> 00:12:18,320
big changes to work more in the open and

00:12:16,000 --> 00:12:20,160
more transparently at github

00:12:18,320 --> 00:12:22,320
we launched the github public roadmap

00:12:20,160 --> 00:12:22,720
earlier this year and in this fame we're

00:12:22,320 --> 00:12:24,800
now

00:12:22,720 --> 00:12:27,200
announcing a new change to how we

00:12:24,800 --> 00:12:30,639
release enterprise server

00:12:27,200 --> 00:12:31,120
so from enterprise server 3.0 we will

00:12:30,639 --> 00:12:33,200
start

00:12:31,120 --> 00:12:34,399
every feature release with a release

00:12:33,200 --> 00:12:36,079
candidate build

00:12:34,399 --> 00:12:38,079
that's a build that's gone through full

00:12:36,079 --> 00:12:40,880
github testing but one that we're

00:12:38,079 --> 00:12:41,760
putting out there for you to pick up

00:12:40,880 --> 00:12:45,120
test

00:12:41,760 --> 00:12:46,800
try bash around and give us feedback on

00:12:45,120 --> 00:12:48,720
and when we're happy based on your

00:12:46,800 --> 00:12:52,160
feedback that it is

00:12:48,720 --> 00:12:52,880
very stable release we'll i think this

00:12:52,160 --> 00:12:55,360
is going to make

00:12:52,880 --> 00:12:57,279
a big difference to the overall

00:12:55,360 --> 00:13:00,000
reliability of the product

00:12:57,279 --> 00:13:01,200
and i'm excited for this change if you

00:13:00,000 --> 00:13:02,480
have any thoughts on this

00:13:01,200 --> 00:13:05,279
love to chat to you about it in the

00:13:02,480 --> 00:13:07,200
discussion later

00:13:05,279 --> 00:13:08,480
so just moving on to those other pillars

00:13:07,200 --> 00:13:10,480
i'm just going to do a quick

00:13:08,480 --> 00:13:12,079
whiz round uh some of the other main

00:13:10,480 --> 00:13:15,360
capabilities that you get

00:13:12,079 --> 00:13:18,320
through github enterprise first of all

00:13:15,360 --> 00:13:20,240
automation so github has really built

00:13:18,320 --> 00:13:22,639
the community standard for automation

00:13:20,240 --> 00:13:23,600
with github actions sure you will have

00:13:22,639 --> 00:13:26,320
seen this before

00:13:23,600 --> 00:13:28,639
but actions is the number one ci tool on

00:13:26,320 --> 00:13:29,680
github.com and it's achieved that status

00:13:28,639 --> 00:13:32,480
in just a year

00:13:29,680 --> 00:13:34,000
after launching and we now have 6000

00:13:32,480 --> 00:13:35,600
actions on the marketplace

00:13:34,000 --> 00:13:37,200
which i just think is an amazing

00:13:35,600 --> 00:13:40,320
testament to

00:13:37,200 --> 00:13:42,959
how easy it is for developers to

00:13:40,320 --> 00:13:45,199
build actions i'm going to show you

00:13:42,959 --> 00:13:47,360
quickly how you can start using actions

00:13:45,199 --> 00:13:50,240
on enterprise server to do some very

00:13:47,360 --> 00:13:50,240
common workflows

00:13:54,240 --> 00:13:58,880
all right so here i have a enterprise

00:13:57,519 --> 00:14:02,320
server 3.0

00:13:58,880 --> 00:14:03,120
instance spun up and i'm going to talk

00:14:02,320 --> 00:14:05,279
first of all

00:14:03,120 --> 00:14:06,320
briefly about how you can set up some

00:14:05,279 --> 00:14:09,600
policies across

00:14:06,320 --> 00:14:10,560
your enterprise so first of all i'm

00:14:09,600 --> 00:14:12,639
going to decide

00:14:10,560 --> 00:14:13,600
which of my orgs should have access to

00:14:12,639 --> 00:14:16,560
actions

00:14:13,600 --> 00:14:18,160
this you people usually decide based on

00:14:16,560 --> 00:14:21,040
managing cost

00:14:18,160 --> 00:14:22,399
um and i'm gonna enable just my ml team

00:14:21,040 --> 00:14:25,040
to have it

00:14:22,399 --> 00:14:25,600
i can also decide whether to allow all

00:14:25,040 --> 00:14:27,839
actions

00:14:25,600 --> 00:14:29,360
including actions from the marketplace

00:14:27,839 --> 00:14:32,160
just ones we've built

00:14:29,360 --> 00:14:33,279
or select actions for example ones

00:14:32,160 --> 00:14:36,399
created by

00:14:33,279 --> 00:14:38,560
github i'm going to allow all actions

00:14:36,399 --> 00:14:40,399
and these the marketplace actions are

00:14:38,560 --> 00:14:42,240
going to be available to my private

00:14:40,399 --> 00:14:45,120
enterprise server instance

00:14:42,240 --> 00:14:47,040
because i have enabled github connect so

00:14:45,120 --> 00:14:48,959
i've mentioned connect a couple of times

00:14:47,040 --> 00:14:50,880
one of the things it does now that we've

00:14:48,959 --> 00:14:52,880
launched actions is bring

00:14:50,880 --> 00:14:54,160
that all of those marketplace actions to

00:14:52,880 --> 00:14:57,360
make them available

00:14:54,160 --> 00:14:58,320
on server i can also set my log

00:14:57,360 --> 00:15:00,399
retention period

00:14:58,320 --> 00:15:02,160
i'm going to make that a long time and i

00:15:00,399 --> 00:15:05,040
don't want to lose any data

00:15:02,160 --> 00:15:06,800
and then i'm going to set up a couple of

00:15:05,040 --> 00:15:09,760
self-hosted runners

00:15:06,800 --> 00:15:11,360
so it's super easy to set up takes about

00:15:09,760 --> 00:15:14,560
five or ten minutes to get

00:15:11,360 --> 00:15:16,399
all of your runners configured again i

00:15:14,560 --> 00:15:18,240
can decide whether to make them

00:15:16,399 --> 00:15:19,920
those runners available to the whole

00:15:18,240 --> 00:15:23,600
enterprise or

00:15:19,920 --> 00:15:25,279
just selected organizations

00:15:23,600 --> 00:15:26,639
so let's just jump in and look at

00:15:25,279 --> 00:15:30,720
actions working

00:15:26,639 --> 00:15:34,240
on one of my repos here i have a

00:15:30,720 --> 00:15:37,680
repo set up with a couple of actions

00:15:34,240 --> 00:15:40,240
workflows already built in

00:15:37,680 --> 00:15:41,920
let's have a look at one of these so

00:15:40,240 --> 00:15:45,199
first of all

00:15:41,920 --> 00:15:45,839
i have a ci workflow this ci workflow is

00:15:45,199 --> 00:15:48,560
going to run

00:15:45,839 --> 00:15:50,399
on every push or pull request on my

00:15:48,560 --> 00:15:52,399
self-hosted runners

00:15:50,399 --> 00:15:54,560
and it's going to check out my code run

00:15:52,399 --> 00:15:58,880
my ci tests

00:15:54,560 --> 00:16:01,199
my second workflow is then going to run

00:15:58,880 --> 00:16:02,800
whenever i create a release again on my

00:16:01,199 --> 00:16:04,800
self-hosted runners

00:16:02,800 --> 00:16:06,399
it's going to check out my code and it's

00:16:04,800 --> 00:16:10,560
going to

00:16:06,399 --> 00:16:13,839
publish a package to my package registry

00:16:10,560 --> 00:16:14,639
we can see here the full workflow search

00:16:13,839 --> 00:16:18,160
the logs

00:16:14,639 --> 00:16:21,440
download them um makes debugging

00:16:18,160 --> 00:16:24,639
really easy if something goes wrong

00:16:21,440 --> 00:16:25,759
if i want to set up a new action all i

00:16:24,639 --> 00:16:27,920
do is click here

00:16:25,759 --> 00:16:30,079
and immediately i have access to a bunch

00:16:27,920 --> 00:16:33,360
of templates and mention this github

00:16:30,079 --> 00:16:36,399
created actions they're all here

00:16:33,360 --> 00:16:39,120
in addition we also have a

00:16:36,399 --> 00:16:39,600
template that my org administrator has

00:16:39,120 --> 00:16:43,839
made

00:16:39,600 --> 00:16:46,320
for me it's a mlt ci workflow

00:16:43,839 --> 00:16:46,959
and this is a workflow template that's

00:16:46,320 --> 00:16:49,519
available

00:16:46,959 --> 00:16:51,759
across my organization next year we'll

00:16:49,519 --> 00:16:52,399
be adding enterprise-wide templates as

00:16:51,759 --> 00:16:54,079
well

00:16:52,399 --> 00:16:55,519
which will be great particularly for

00:16:54,079 --> 00:16:58,320
companies operating

00:16:55,519 --> 00:17:00,880
in more high-compliance high-governed

00:16:58,320 --> 00:17:00,880
environments

00:17:01,440 --> 00:17:05,839
alrighty so

00:17:07,280 --> 00:17:11,439
let's just go back the next thing i

00:17:10,400 --> 00:17:15,039
wanted to

00:17:11,439 --> 00:17:16,000
cover briefly is security and how you

00:17:15,039 --> 00:17:19,199
can simplify

00:17:16,000 --> 00:17:21,039
and automate that so as

00:17:19,199 --> 00:17:23,360
kind of keith talked about uh just

00:17:21,039 --> 00:17:24,319
previously um finding and fixing

00:17:23,360 --> 00:17:27,439
vulnerabilities

00:17:24,319 --> 00:17:30,240
is really notoriously difficult and

00:17:27,439 --> 00:17:32,360
um this is very much a structural issue

00:17:30,240 --> 00:17:35,440
we have 575

00:17:32,360 --> 00:17:37,679
570 times more developers in the world

00:17:35,440 --> 00:17:39,440
than security researchers

00:17:37,679 --> 00:17:41,840
and as we keep coding we keep

00:17:39,440 --> 00:17:44,000
introducing new vulnerabilities

00:17:41,840 --> 00:17:46,080
we're not getting any better at just

00:17:44,000 --> 00:17:48,880
naturally spotting vulnerabilities

00:17:46,080 --> 00:17:50,160
so github our approach to addressing

00:17:48,880 --> 00:17:52,799
this problem

00:17:50,160 --> 00:17:54,400
is to bring that community together with

00:17:52,799 --> 00:17:57,679
the right tooling to help

00:17:54,400 --> 00:17:59,520
you secure code now

00:17:57,679 --> 00:18:02,080
our security capabilities have grown

00:17:59,520 --> 00:18:04,240
massively over the last year

00:18:02,080 --> 00:18:05,120
advanced security offers both code

00:18:04,240 --> 00:18:07,039
scanning and

00:18:05,120 --> 00:18:09,280
secret scanning which are automated

00:18:07,039 --> 00:18:11,760
security scanning tools

00:18:09,280 --> 00:18:12,320
and in addition to that our dependency

00:18:11,760 --> 00:18:14,720
alerts

00:18:12,320 --> 00:18:16,720
automated security fixes in the advisory

00:18:14,720 --> 00:18:19,760
database and making sure that

00:18:16,720 --> 00:18:21,360
both private and open source repos are

00:18:19,760 --> 00:18:23,039
staying secure

00:18:21,360 --> 00:18:24,559
let's have a brief look again at how

00:18:23,039 --> 00:18:29,280
this is operating on

00:18:24,559 --> 00:18:32,400
enterprise server 3.0

00:18:29,280 --> 00:18:35,919
okay so here i

00:18:32,400 --> 00:18:39,440
have another enterprise server instance

00:18:35,919 --> 00:18:40,240
and it has a repo setup the first thing

00:18:39,440 --> 00:18:42,400
you'll notice

00:18:40,240 --> 00:18:45,440
is that we have found some security

00:18:42,400 --> 00:18:47,440
vulnerabilities in my dependencies

00:18:45,440 --> 00:18:48,559
now this information is coming from the

00:18:47,440 --> 00:18:51,679
github uh

00:18:48,559 --> 00:18:53,360
depend advisory database which is on

00:18:51,679 --> 00:18:54,880
github.com

00:18:53,360 --> 00:18:56,799
and it's coming to my private

00:18:54,880 --> 00:18:59,440
environment again through

00:18:56,799 --> 00:19:00,960
github connect so we're bringing actions

00:18:59,440 --> 00:19:02,559
we're bringing user information

00:19:00,960 --> 00:19:04,080
and we're bringing the security

00:19:02,559 --> 00:19:05,039
information into your private

00:19:04,080 --> 00:19:08,960
environment

00:19:05,039 --> 00:19:12,160
through connect i also have those

00:19:08,960 --> 00:19:13,360
automated security scans running on my

00:19:12,160 --> 00:19:15,840
pull requests

00:19:13,360 --> 00:19:16,640
and here let's have a look see what they

00:19:15,840 --> 00:19:19,360
found

00:19:16,640 --> 00:19:21,200
so code scanning has found a few

00:19:19,360 --> 00:19:23,200
vulnerabilities

00:19:21,200 --> 00:19:25,120
first missing rate limiting this is a

00:19:23,200 --> 00:19:25,840
vulnerability that can lead to ddos

00:19:25,120 --> 00:19:29,600
attacks

00:19:25,840 --> 00:19:33,360
or brute force password attacks codeql

00:19:29,600 --> 00:19:35,520
has found this issue and the code

00:19:33,360 --> 00:19:37,280
scanning tool has also given me a bunch

00:19:35,520 --> 00:19:39,200
of recommendations on what i need to do

00:19:37,280 --> 00:19:41,120
to fix it

00:19:39,200 --> 00:19:42,240
now you can see all of the source code

00:19:41,120 --> 00:19:45,520
for these queries

00:19:42,240 --> 00:19:47,200
in this public codeql repo

00:19:45,520 --> 00:19:48,559
and the queries here are written by

00:19:47,200 --> 00:19:51,440
github staff

00:19:48,559 --> 00:19:53,120
and by the security researcher community

00:19:51,440 --> 00:19:54,880
here's an example of one that's under

00:19:53,120 --> 00:19:57,360
development right now

00:19:54,880 --> 00:19:59,679
written by jonathan who is a github

00:19:57,360 --> 00:20:00,960
staff and a security researcher in

00:19:59,679 --> 00:20:02,720
boston

00:20:00,960 --> 00:20:04,080
and through code scanning we're going to

00:20:02,720 --> 00:20:05,919
bring his knowledge

00:20:04,080 --> 00:20:07,200
expertise and the work he's doing to

00:20:05,919 --> 00:20:10,320
contribute to this

00:20:07,200 --> 00:20:12,640
directly to your company

00:20:10,320 --> 00:20:14,320
going back let's just look quickly at my

00:20:12,640 --> 00:20:16,080
secret scanning alerts

00:20:14,320 --> 00:20:18,159
secret scanning has picked up that i

00:20:16,080 --> 00:20:21,120
have put in two

00:20:18,159 --> 00:20:21,679
aws secrets and this is a very common

00:20:21,120 --> 00:20:24,720
way

00:20:21,679 --> 00:20:28,240
that um customer data is

00:20:24,720 --> 00:20:29,760
stolen it's let me know

00:20:28,240 --> 00:20:31,919
that it's found them and if i've

00:20:29,760 --> 00:20:33,360
deployed that to production i can rotate

00:20:31,919 --> 00:20:35,919
and revoke those secrets

00:20:33,360 --> 00:20:37,280
if not if i haven't deployed yet hey

00:20:35,919 --> 00:20:39,760
it's enabled me to

00:20:37,280 --> 00:20:40,400
avert what could become a big security

00:20:39,760 --> 00:20:48,960
breach

00:20:40,400 --> 00:20:53,600
for my company alrighty

00:20:48,960 --> 00:20:56,480
so just gonna wrap up um

00:20:53,600 --> 00:20:57,200
see this slide there we go so we've gone

00:20:56,480 --> 00:20:59,520
through today

00:20:57,200 --> 00:21:00,880
uh the github enterprise platform and

00:20:59,520 --> 00:21:03,600
how it provides a very

00:21:00,880 --> 00:21:04,320
integrated community power platform to

00:21:03,600 --> 00:21:06,960
help

00:21:04,320 --> 00:21:08,960
companies administrators and developers

00:21:06,960 --> 00:21:10,240
to achieve the kind of goals that we

00:21:08,960 --> 00:21:12,960
outlined

00:21:10,240 --> 00:21:13,520
i hope that was a useful overview for

00:21:12,960 --> 00:21:15,679
you guys

00:21:13,520 --> 00:21:19,200
and looking forward to your questions

00:21:15,679 --> 00:21:19,200

YouTube URL: https://www.youtube.com/watch?v=utQ6IJLAL-I


