Title: Visual tests on every pull request - GitHub Universe 2020
Publication date: 2020-12-10
Playlist: GitHub Universe 2020: Developer - DevOps
Description: 
	Presented by Angie Jones, Principal Developer Advocate, Applitools

You’ve created your GitHub repo. You have multiple contributors. You’re reviewing the pull requests. All the signs of a healthy project are there...but what about the tests? Not only do you need tests to ensure your application isn't regressing, but if it’s a frontend application, you'll need visual tests to verify that your application still looks right. In this talk, Angie Jones will discuss AI-powered visual testing and how to integrate it with your build process using GitHub Actions.

For more from GitHub Universe 2020, visit https://githubuniverse.com

As always, feel free to leave us a comment below and don't forget to subscribe: http://bit.ly/subgithub

Thanks!

Connect with us.
Facebook: http://fb.com/github
Twitter: http://twitter.com/github
LinkedIn: http://linkedin.com/company/github

About GitHub
GitHub is the best place to share code with friends, co-workers, classmates, and complete strangers. Millions of people use GitHub to build amazing things together. For more info, go to http://github.com
Captions: 
	00:00:01,670 --> 00:00:06,319
[Music]

00:00:05,680 --> 00:00:09,679
hello

00:00:06,319 --> 00:00:11,200
everyone and thank you so much for

00:00:09,679 --> 00:00:14,400
coming to this session

00:00:11,200 --> 00:00:15,200
today i'm going to talk about visual

00:00:14,400 --> 00:00:18,160
testing

00:00:15,200 --> 00:00:19,279
but first i want us to start off with a

00:00:18,160 --> 00:00:31,679
little game

00:00:19,279 --> 00:00:34,000
of who done it

00:00:31,679 --> 00:00:35,200
clearly somebody in this room murdered

00:00:34,000 --> 00:00:38,800
lord smythe

00:00:35,200 --> 00:00:41,280
who at precisely 3 34 this afternoon

00:00:38,800 --> 00:00:42,480
was brutally bludgeoned to death with a

00:00:41,280 --> 00:00:44,640
blunt instrument

00:00:42,480 --> 00:00:45,840
i want each of you to tell me your

00:00:44,640 --> 00:00:47,760
whereabouts

00:00:45,840 --> 00:00:51,039
at precisely the time that this

00:00:47,760 --> 00:00:53,680
dastardly deed took place

00:00:51,039 --> 00:00:54,800
i was polishing the brass in the master

00:00:53,680 --> 00:00:57,120
bedroom

00:00:54,800 --> 00:00:58,079
i was buttering his lordship scones

00:00:57,120 --> 00:01:01,440
below stairs

00:00:58,079 --> 00:01:02,640
son why i was planting my petunias in

00:01:01,440 --> 00:01:07,119
the potting shed

00:01:02,640 --> 00:01:08,799
constable arrest lady smythe

00:01:07,119 --> 00:01:10,320
but how did you know madam as any

00:01:08,799 --> 00:01:12,159
horticulturist will tell you one does

00:01:10,320 --> 00:01:15,520
not plant petunias until may

00:01:12,159 --> 00:01:17,200
is out take her away it's just a matter

00:01:15,520 --> 00:01:22,000
of observation

00:01:17,200 --> 00:01:22,000
the real question is how observant were

00:01:24,840 --> 00:01:27,840
you

00:01:29,280 --> 00:01:32,720
clearly somebody in this room murdered

00:01:31,600 --> 00:01:36,320
lord smythe

00:01:32,720 --> 00:01:38,799
who at precisely 3 34 this afternoon

00:01:36,320 --> 00:01:40,000
was brutally bludgeoned to death with a

00:01:38,799 --> 00:01:42,159
blunt instrument

00:01:40,000 --> 00:01:43,360
i want each of you to tell me your

00:01:42,159 --> 00:01:45,280
whereabouts

00:01:43,360 --> 00:01:48,560
at precisely the time that this

00:01:45,280 --> 00:01:51,200
dastardly deed took place

00:01:48,560 --> 00:01:52,399
i was polishing the brass in the master

00:01:51,200 --> 00:01:54,640
bedroom

00:01:52,399 --> 00:01:56,320
i was buttering his lordship scones

00:01:54,640 --> 00:01:59,040
below stairs and so

00:01:56,320 --> 00:02:00,159
well i was planting my petunias in the

00:01:59,040 --> 00:02:08,399
potting shed

00:02:00,159 --> 00:02:11,680
constable arrest lady smythe

00:02:08,399 --> 00:02:14,319
so did you catch those differences

00:02:11,680 --> 00:02:17,040
or maybe the most important one where

00:02:14,319 --> 00:02:19,760
the dead man got up and walked away

00:02:17,040 --> 00:02:21,280
probably not right because we all suffer

00:02:19,760 --> 00:02:23,760
from what's called

00:02:21,280 --> 00:02:24,319
unintentional blindness and this is

00:02:23,760 --> 00:02:27,840
where

00:02:24,319 --> 00:02:30,080
we we don't catch new or unexpected

00:02:27,840 --> 00:02:32,720
things that come into our viewport

00:02:30,080 --> 00:02:33,519
because we're so focused on a specific

00:02:32,720 --> 00:02:35,680
thing

00:02:33,519 --> 00:02:36,560
and this is especially true when we talk

00:02:35,680 --> 00:02:39,440
about

00:02:36,560 --> 00:02:40,720
testing our software right we're so

00:02:39,440 --> 00:02:43,200
focused on

00:02:40,720 --> 00:02:45,840
just getting the code out we might do a

00:02:43,200 --> 00:02:49,280
little bit of testing to see if the

00:02:45,840 --> 00:02:51,360
absolute happy path works and we miss

00:02:49,280 --> 00:02:52,720
a lot of other things that are going on

00:02:51,360 --> 00:02:55,519
around us

00:02:52,720 --> 00:02:56,800
so how do we solve for this well

00:02:55,519 --> 00:02:59,120
typically we'll

00:02:56,800 --> 00:03:01,680
automate our tests because we figure if

00:02:59,120 --> 00:03:03,760
we automate these tests and we know

00:03:01,680 --> 00:03:05,920
it's going to take the same steps every

00:03:03,760 --> 00:03:07,200
single time it's going to make the same

00:03:05,920 --> 00:03:09,519
assertions

00:03:07,200 --> 00:03:11,200
every single time and that way we're

00:03:09,519 --> 00:03:14,800
safe right

00:03:11,200 --> 00:03:17,200
ah not so fast what if i told you

00:03:14,800 --> 00:03:18,879
that by automating your test you're

00:03:17,200 --> 00:03:22,080
actually scripting

00:03:18,879 --> 00:03:25,519
in the unintentional blindness

00:03:22,080 --> 00:03:28,840
why yes because most of the

00:03:25,519 --> 00:03:32,000
automation tools out there are

00:03:28,840 --> 00:03:35,120
interrogating and querying the dom

00:03:32,000 --> 00:03:37,120
for answers but what about the look and

00:03:35,120 --> 00:03:39,840
feel of the application what about

00:03:37,120 --> 00:03:40,720
the gui that our customers are actually

00:03:39,840 --> 00:03:44,319
using

00:03:40,720 --> 00:03:46,640
right for example what if

00:03:44,319 --> 00:03:47,519
some text on the page that we're looking

00:03:46,640 --> 00:03:50,000
for we

00:03:47,519 --> 00:03:51,120
in our automated test we ask is this

00:03:50,000 --> 00:03:52,799
text present

00:03:51,120 --> 00:03:55,200
and it says yes because it's looking in

00:03:52,799 --> 00:03:56,239
the dom but what about if that text was

00:03:55,200 --> 00:03:58,480
the same color

00:03:56,239 --> 00:04:00,239
as the background and therefore couldn't

00:03:58,480 --> 00:04:03,200
be seen by the users

00:04:00,239 --> 00:04:03,920
what if some element that the customer

00:04:03,200 --> 00:04:07,200
needed to

00:04:03,920 --> 00:04:09,519
interact with was overlapped by another

00:04:07,200 --> 00:04:11,280
element and therefore they couldn't

00:04:09,519 --> 00:04:13,439
what if when we start changing those

00:04:11,280 --> 00:04:15,519
viewport sizes the

00:04:13,439 --> 00:04:18,400
element or the text or something is

00:04:15,519 --> 00:04:20,079
bleeding off the edge of the page

00:04:18,400 --> 00:04:22,400
none of these things can be caught with

00:04:20,079 --> 00:04:25,520
the traditional test automation

00:04:22,400 --> 00:04:27,759
tools now when i talk about this

00:04:25,520 --> 00:04:28,800
people start thinking that these are

00:04:27,759 --> 00:04:31,199
edge cases

00:04:28,800 --> 00:04:32,080
but let me tell you once i was trained

00:04:31,199 --> 00:04:35,120
to

00:04:32,080 --> 00:04:35,520
uh discover visual bugs i started seeing

00:04:35,120 --> 00:04:38,400
them

00:04:35,520 --> 00:04:39,440
everywhere let me show you a couple of

00:04:38,400 --> 00:04:41,840
examples

00:04:39,440 --> 00:04:43,040
so this is cinemax this is the second

00:04:41,840 --> 00:04:45,919
largest cinema

00:04:43,040 --> 00:04:46,400
chain in the planet so not a little

00:04:45,919 --> 00:04:50,160
small

00:04:46,400 --> 00:04:50,560
mom-and-pop shop and they had a visual

00:04:50,160 --> 00:04:52,479
bug

00:04:50,560 --> 00:04:54,880
on the page that asked you if you want

00:04:52,479 --> 00:04:57,600
to store your credit card information

00:04:54,880 --> 00:04:59,280
so notice there the two labels are not

00:04:57,600 --> 00:05:01,199
aligned with the radio button and when

00:04:59,280 --> 00:05:02,800
we see this it looks kind of goofy and

00:05:01,199 --> 00:05:05,199
we might want to laugh and

00:05:02,800 --> 00:05:06,800
think of this as a lower severity bug

00:05:05,199 --> 00:05:09,680
however

00:05:06,800 --> 00:05:13,120
let me ask you this question would you

00:05:09,680 --> 00:05:15,759
store your credit card information here

00:05:13,120 --> 00:05:16,400
probably not right i sure wouldn't why

00:05:15,759 --> 00:05:18,000
not

00:05:16,400 --> 00:05:19,520
because in the back of our heads we

00:05:18,000 --> 00:05:21,440
don't trust this page

00:05:19,520 --> 00:05:23,520
with our credit card information when we

00:05:21,440 --> 00:05:26,000
look at this and see

00:05:23,520 --> 00:05:26,560
this we think how do they miss this

00:05:26,000 --> 00:05:28,800
right

00:05:26,560 --> 00:05:30,240
they must not test this which is what

00:05:28,800 --> 00:05:32,800
kim alluded to

00:05:30,240 --> 00:05:33,600
in this tweet here and if they didn't

00:05:32,800 --> 00:05:35,440
catch this

00:05:33,600 --> 00:05:38,160
part i know they're not testing the back

00:05:35,440 --> 00:05:40,479
end of this is what we think

00:05:38,160 --> 00:05:41,520
but i have a theory i think they did

00:05:40,479 --> 00:05:43,759
test it

00:05:41,520 --> 00:05:45,039
in fact i think they automated the test

00:05:43,759 --> 00:05:48,240
for this

00:05:45,039 --> 00:05:50,320
and if they automated the test for this

00:05:48,240 --> 00:05:51,600
those labels are present the radio

00:05:50,320 --> 00:05:54,240
buttons are present

00:05:51,600 --> 00:05:56,000
technically this is functional and this

00:05:54,240 --> 00:05:59,039
is how this sort of thing gets shipped

00:05:56,000 --> 00:06:01,440
to production here's another example

00:05:59,039 --> 00:06:03,280
open table so open table is where you go

00:06:01,440 --> 00:06:05,280
to make restaurant reservations and

00:06:03,280 --> 00:06:06,400
i used to live in north carolina home of

00:06:05,280 --> 00:06:08,080
the barbecue

00:06:06,400 --> 00:06:09,919
and i went back to visit i wanted to

00:06:08,080 --> 00:06:12,240
catch up with some old friends

00:06:09,919 --> 00:06:14,240
so i went to open table to make a nice

00:06:12,240 --> 00:06:15,360
sized reservation for seven people and

00:06:14,240 --> 00:06:17,680
they gave me some

00:06:15,360 --> 00:06:18,479
times to choose from and when i chose

00:06:17,680 --> 00:06:21,680
the time

00:06:18,479 --> 00:06:23,520
a model appeared and i was a bit

00:06:21,680 --> 00:06:24,000
confused at first because there's

00:06:23,520 --> 00:06:26,319
nothing

00:06:24,000 --> 00:06:28,080
centered here but as i got to looking

00:06:26,319 --> 00:06:30,319
around notice in the upper right corner

00:06:28,080 --> 00:06:33,360
there there's two select buttons

00:06:30,319 --> 00:06:34,639
and on those two select buttons there's

00:06:33,360 --> 00:06:36,960
nothing that's telling me what i'm

00:06:34,639 --> 00:06:38,240
selecting right first of all like why is

00:06:36,960 --> 00:06:41,280
there two of them

00:06:38,240 --> 00:06:43,600
why are they not aligned

00:06:41,280 --> 00:06:43,600
and

00:06:44,319 --> 00:06:48,479
what am i selecting you know so i did

00:06:46,800 --> 00:06:51,520
what any of you would do

00:06:48,479 --> 00:06:53,120
and i opened chrome dev tools and began

00:06:51,520 --> 00:06:55,680
to dig around the dom

00:06:53,120 --> 00:06:57,039
and when i did so i realized that hey

00:06:55,680 --> 00:06:59,919
there are labels

00:06:57,039 --> 00:07:01,280
present there they're just as far away

00:06:59,919 --> 00:07:04,479
from those select buttons

00:07:01,280 --> 00:07:06,160
as possible so

00:07:04,479 --> 00:07:08,319
i wanted this barbecue i went ahead and

00:07:06,160 --> 00:07:10,400
made the reservation much like our

00:07:08,319 --> 00:07:11,759
automation tools would be able to do

00:07:10,400 --> 00:07:13,759
because they're interrogating the

00:07:11,759 --> 00:07:15,039
diamond interacting with the elements

00:07:13,759 --> 00:07:17,120
via the dom

00:07:15,039 --> 00:07:19,039
then they're able to complete the test

00:07:17,120 --> 00:07:21,599
but as a user

00:07:19,039 --> 00:07:22,960
not so much right this is pretty much

00:07:21,599 --> 00:07:25,360
unusable

00:07:22,960 --> 00:07:26,000
from a customer standpoint our customers

00:07:25,360 --> 00:07:27,759
aren't

00:07:26,000 --> 00:07:29,680
necessarily engineers they're not

00:07:27,759 --> 00:07:31,599
digging around in chrome devtools to

00:07:29,680 --> 00:07:33,919
complete your reservation

00:07:31,599 --> 00:07:36,880
i cringe thinking about how much money

00:07:33,919 --> 00:07:36,880
is lost here

00:07:36,960 --> 00:07:41,120
now these aren't just one-offs this

00:07:38,560 --> 00:07:43,919
happens to your favorite tech companies

00:07:41,120 --> 00:07:45,680
as well look at this one from amazon

00:07:43,919 --> 00:07:47,759
like i mentioned earlier

00:07:45,680 --> 00:07:49,680
changing the viewport size i promise you

00:07:47,759 --> 00:07:50,720
those mobile wheels is where those

00:07:49,680 --> 00:07:53,840
visual bugs

00:07:50,720 --> 00:07:55,280
live okay so right here not only is

00:07:53,840 --> 00:07:57,599
someone about to buy

00:07:55,280 --> 00:07:58,560
something they want to increase the

00:07:57,599 --> 00:08:00,720
quantity

00:07:58,560 --> 00:08:02,400
so they are multiplying the amount of

00:08:00,720 --> 00:08:04,639
money they're going to spend

00:08:02,400 --> 00:08:05,840
and they're faced with this visual bug

00:08:04,639 --> 00:08:07,919
right

00:08:05,840 --> 00:08:09,599
almost makes it unusable if it's more

00:08:07,919 --> 00:08:10,879
than two

00:08:09,599 --> 00:08:12,960
who knows if they're going to complete

00:08:10,879 --> 00:08:16,160
this transaction or not but

00:08:12,960 --> 00:08:19,199
if we had tests for this this would pass

00:08:16,160 --> 00:08:21,120
also look at facebook here

00:08:19,199 --> 00:08:22,639
so this is their marketplace where

00:08:21,120 --> 00:08:26,319
they're going to

00:08:22,639 --> 00:08:29,199
buy products look at the text there

00:08:26,319 --> 00:08:31,440
oh my goodness the width is not wide

00:08:29,199 --> 00:08:33,440
enough and the text is down the edge of

00:08:31,440 --> 00:08:35,839
the page you have pictures here

00:08:33,440 --> 00:08:37,680
where you can barely read the text but

00:08:35,839 --> 00:08:40,479
what would our automated tools see

00:08:37,680 --> 00:08:41,440
yes the text is present and everything

00:08:40,479 --> 00:08:43,839
would pass

00:08:41,440 --> 00:08:44,480
although this makes me not want to spend

00:08:43,839 --> 00:08:47,519
my money

00:08:44,480 --> 00:08:49,360
i'll tell you that much and then

00:08:47,519 --> 00:08:50,800
here's another example one of my

00:08:49,360 --> 00:08:54,000
favorite ones this is

00:08:50,800 --> 00:08:57,600
instagram and this is

00:08:54,000 --> 00:09:00,720
a sponsored ad this is content

00:08:57,600 --> 00:09:03,760
that someone paid to have premium

00:09:00,720 --> 00:09:06,160
you know placement on instagram here

00:09:03,760 --> 00:09:07,519
and yet it looks like this again our

00:09:06,160 --> 00:09:10,000
automated test

00:09:07,519 --> 00:09:12,160
what we ask is this text present yes

00:09:10,000 --> 00:09:14,640
it's this text present yes

00:09:12,160 --> 00:09:17,839
nothing indicates that it's actually

00:09:14,640 --> 00:09:20,640
overlapping each other right

00:09:17,839 --> 00:09:22,720
how much money is lost here if i'm

00:09:20,640 --> 00:09:24,160
buying this ad i'm no longer going to do

00:09:22,720 --> 00:09:27,519
it with instagram in fact i want a

00:09:24,160 --> 00:09:29,920
refund on this one right

00:09:27,519 --> 00:09:31,519
twitter look at the tweets overlapping

00:09:29,920 --> 00:09:34,560
you see this what do you do

00:09:31,519 --> 00:09:37,440
you close the app

00:09:34,560 --> 00:09:38,320
even google on this pre-order button

00:09:37,440 --> 00:09:40,720
here

00:09:38,320 --> 00:09:41,600
right and this one is not so bad but it

00:09:40,720 --> 00:09:44,000
is still

00:09:41,600 --> 00:09:45,360
a point of purchase which means some

00:09:44,000 --> 00:09:47,680
high salaries

00:09:45,360 --> 00:09:50,240
google engineer needs to stop innovating

00:09:47,680 --> 00:09:53,200
new features to come and track this down

00:09:50,240 --> 00:09:53,760
not a good use of their time the great

00:09:53,200 --> 00:09:55,920
news

00:09:53,760 --> 00:09:58,399
is we don't have to live like this

00:09:55,920 --> 00:10:01,440
visual testing can be automated

00:09:58,399 --> 00:10:04,160
so what is visual testing exactly well

00:10:01,440 --> 00:10:04,640
visual testing is where you know when

00:10:04,160 --> 00:10:06,560
you

00:10:04,640 --> 00:10:08,160
you know you're writing your your

00:10:06,560 --> 00:10:10,160
initial test

00:10:08,160 --> 00:10:12,240
and you're looking at the app as a human

00:10:10,160 --> 00:10:14,399
being right there

00:10:12,240 --> 00:10:16,880
we can take a screenshot of your

00:10:14,399 --> 00:10:19,920
application that's in its golden state

00:10:16,880 --> 00:10:22,000
and we'll consider this the baseline and

00:10:19,920 --> 00:10:24,399
then for every regression run it's going

00:10:22,000 --> 00:10:25,839
to take another screenshot and compare

00:10:24,399 --> 00:10:28,399
those two screenshots

00:10:25,839 --> 00:10:29,200
to detect if there are any visual

00:10:28,399 --> 00:10:31,040
differences

00:10:29,200 --> 00:10:33,120
you know the stuff on the screen that

00:10:31,040 --> 00:10:34,800
our customer is actually seeing

00:10:33,120 --> 00:10:37,360
that's what we're going to look for

00:10:34,800 --> 00:10:39,440
right now visual testing isn't

00:10:37,360 --> 00:10:40,959
entirely new it's been around for a

00:10:39,440 --> 00:10:44,560
while in the industry

00:10:40,959 --> 00:10:45,040
but as an industry we weren't doing this

00:10:44,560 --> 00:10:47,519
right

00:10:45,040 --> 00:10:48,640
we were using pixel to pixel comparison

00:10:47,519 --> 00:10:50,720
to do this

00:10:48,640 --> 00:10:53,519
the problem with pixel pixel comparison

00:10:50,720 --> 00:10:57,680
is extremely flaky it was not

00:10:53,519 --> 00:11:00,560
designed to test software now

00:10:57,680 --> 00:11:02,240
here are some examples in the first case

00:11:00,560 --> 00:11:04,000
this is our baseline image and the

00:11:02,240 --> 00:11:06,959
second case is the regression run

00:11:04,000 --> 00:11:10,160
the regression run failed this gated

00:11:06,959 --> 00:11:12,959
deployment so we didn't get a deploy

00:11:10,160 --> 00:11:13,440
why did this fail well notice in the

00:11:12,959 --> 00:11:15,120
second

00:11:13,440 --> 00:11:17,279
image that google search button is

00:11:15,120 --> 00:11:19,920
bolding well

00:11:17,279 --> 00:11:22,640
if you put your mouse over that button

00:11:19,920 --> 00:11:25,680
that's the hover effect of that button

00:11:22,640 --> 00:11:27,440
so this is automated test automated

00:11:25,680 --> 00:11:28,240
software there's no human involved here

00:11:27,440 --> 00:11:30,560
which means

00:11:28,240 --> 00:11:31,760
it just so happened that the mouse

00:11:30,560 --> 00:11:33,600
landed right there

00:11:31,760 --> 00:11:35,200
right we don't want to write code to

00:11:33,600 --> 00:11:37,440
make sure the mouse isn't landing in

00:11:35,200 --> 00:11:39,519
certain places this is annoying

00:11:37,440 --> 00:11:41,360
here's another example who can see why

00:11:39,519 --> 00:11:44,320
this one failed

00:11:41,360 --> 00:11:45,440
yep if you said that there's no cursor

00:11:44,320 --> 00:11:48,640
in the second

00:11:45,440 --> 00:11:50,880
one you're right the cursor after bad is

00:11:48,640 --> 00:11:54,000
solid and the second one is not

00:11:50,880 --> 00:11:55,600
well cursors blink people right so you

00:11:54,000 --> 00:11:56,079
don't want your deployment to fail

00:11:55,600 --> 00:11:59,279
because

00:11:56,079 --> 00:12:01,680
the the screenshot was captured

00:11:59,279 --> 00:12:02,560
you know when the cursor was blinking or

00:12:01,680 --> 00:12:05,760
something like that

00:12:02,560 --> 00:12:07,760
goofy right the great news

00:12:05,760 --> 00:12:09,680
appletools has come up with a much more

00:12:07,760 --> 00:12:13,680
sophisticated approach to doing this

00:12:09,680 --> 00:12:16,800
it utilizes ai to mimic the human

00:12:13,680 --> 00:12:18,480
eye and brain and be able to compare

00:12:16,800 --> 00:12:21,200
these images just like

00:12:18,480 --> 00:12:22,480
we would as a human being so here's

00:12:21,200 --> 00:12:24,320
another little game

00:12:22,480 --> 00:12:26,160
you all don't get to play because you

00:12:24,320 --> 00:12:30,240
let the dead man get up and walk

00:12:26,160 --> 00:12:32,480
right so i ran this through um

00:12:30,240 --> 00:12:34,720
pixel to pixel comparison and then i ran

00:12:32,480 --> 00:12:37,760
it through appliques api

00:12:34,720 --> 00:12:38,079
um their ai algorithm and when i ran it

00:12:37,760 --> 00:12:40,720
through

00:12:38,079 --> 00:12:41,839
the pics of the pixel engines look at

00:12:40,720 --> 00:12:44,639
this

00:12:41,839 --> 00:12:45,440
it flagged everything it's so sensitive

00:12:44,639 --> 00:12:48,560
every little

00:12:45,440 --> 00:12:52,000
white space shift gets highlighted right

00:12:48,560 --> 00:12:54,399
this is not built for testing software

00:12:52,000 --> 00:12:55,279
versus when i ran it through applique's

00:12:54,399 --> 00:12:58,399
api

00:12:55,279 --> 00:12:59,360
look at that just as we would it

00:12:58,399 --> 00:13:03,279
captures

00:12:59,360 --> 00:13:06,480
the differences okay so we're going to

00:13:03,279 --> 00:13:09,279
add this to an existing test just so i

00:13:06,480 --> 00:13:12,720
can show you how it works in action

00:13:09,279 --> 00:13:15,920
so here is the application under test

00:13:12,720 --> 00:13:18,639
it's a simple single page app

00:13:15,920 --> 00:13:20,000
um eight of my favorite books on testing

00:13:18,639 --> 00:13:23,200
and the way this works is

00:13:20,000 --> 00:13:25,920
you would type in uh

00:13:23,200 --> 00:13:26,560
some query here i type in test and this

00:13:25,920 --> 00:13:28,880
shows

00:13:26,560 --> 00:13:30,240
all of the books that have the word test

00:13:28,880 --> 00:13:33,120
as part of their title

00:13:30,240 --> 00:13:34,399
all right so the test for this this is

00:13:33,120 --> 00:13:37,600
written in

00:13:34,399 --> 00:13:39,920
javascript with cypress but

00:13:37,600 --> 00:13:41,279
everything that i say today applies to

00:13:39,920 --> 00:13:43,120
any language you're using

00:13:41,279 --> 00:13:44,399
any test framework so don't get caught

00:13:43,120 --> 00:13:47,360
up on that part all right

00:13:44,399 --> 00:13:48,639
so here's the test we are querying for

00:13:47,360 --> 00:13:51,199
the word test

00:13:48,639 --> 00:13:52,079
we are expecting these five books to

00:13:51,199 --> 00:13:54,399
come back

00:13:52,079 --> 00:13:55,440
and we assert on that by making sure

00:13:54,399 --> 00:13:58,000
there are

00:13:55,440 --> 00:14:00,480
five exactly five books returned and

00:13:58,000 --> 00:14:02,079
then we make sure that the titles match

00:14:00,480 --> 00:14:05,920
the ones there in

00:14:02,079 --> 00:14:09,279
our array okay now

00:14:05,920 --> 00:14:11,279
let's say i wanted to add a little

00:14:09,279 --> 00:14:14,320
bouncy effect with css

00:14:11,279 --> 00:14:16,639
unlike you all i suck at css right so i

00:14:14,320 --> 00:14:18,959
mess up things all the time but i have

00:14:16,639 --> 00:14:19,920
tests so i can do whatever i want

00:14:18,959 --> 00:14:23,279
because

00:14:19,920 --> 00:14:25,279
i have tests right so i just check this

00:14:23,279 --> 00:14:25,839
in and i know that it'll catch if i do

00:14:25,279 --> 00:14:28,560
anything

00:14:25,839 --> 00:14:29,120
goofy right okay so here's the test

00:14:28,560 --> 00:14:31,660
again

00:14:29,120 --> 00:14:32,959
look at it and then

00:14:31,660 --> 00:14:34,639
[Music]

00:14:32,959 --> 00:14:37,199
this is what the application actually

00:14:34,639 --> 00:14:39,839
looks like with that test

00:14:37,199 --> 00:14:39,839
catch this

00:14:40,399 --> 00:14:46,160
no look at this test it's green

00:14:43,680 --> 00:14:47,279
i love green like the next person but i

00:14:46,160 --> 00:14:50,000
want my red when

00:14:47,279 --> 00:14:50,959
when it means something you know so this

00:14:50,000 --> 00:14:53,519
test has passed

00:14:50,959 --> 00:14:55,440
even though with a single line of css i

00:14:53,519 --> 00:14:57,680
literally flipped this application

00:14:55,440 --> 00:14:59,120
on its head again this is why we need

00:14:57,680 --> 00:15:02,639
the visual testing

00:14:59,120 --> 00:15:05,199
so i can revamp that test right

00:15:02,639 --> 00:15:06,720
not only am i getting rid of a lot of

00:15:05,199 --> 00:15:08,639
code but i'm going to have

00:15:06,720 --> 00:15:10,000
more coverage here with the visual

00:15:08,639 --> 00:15:13,360
testing so

00:15:10,000 --> 00:15:16,720
there's three simple commands

00:15:13,360 --> 00:15:19,839
the api is called eyes

00:15:16,720 --> 00:15:20,320
beautiful so my first command on line

00:15:19,839 --> 00:15:24,240
three

00:15:20,320 --> 00:15:27,519
is to open your eyes ah

00:15:24,240 --> 00:15:28,639
poetry right the next command i say to

00:15:27,519 --> 00:15:31,040
check the window

00:15:28,639 --> 00:15:32,720
this is the magic this is what's going

00:15:31,040 --> 00:15:33,279
to take the screenshot it's going to

00:15:32,720 --> 00:15:35,759
send that

00:15:33,279 --> 00:15:37,600
up to the aptitudes cloud that if

00:15:35,759 --> 00:15:39,199
there's none there already that'll

00:15:37,600 --> 00:15:41,600
become our baseline

00:15:39,199 --> 00:15:42,800
if there is one already it will compare

00:15:41,600 --> 00:15:45,360
to the baseline

00:15:42,800 --> 00:15:46,240
and then the final command is closurized

00:15:45,360 --> 00:15:49,519
we're done here

00:15:46,240 --> 00:15:52,000
folks so let's run that one against that

00:15:49,519 --> 00:15:52,959
flipped application and notice now we

00:15:52,000 --> 00:15:55,360
get that red

00:15:52,959 --> 00:15:57,519
failure and we can see here in the

00:15:55,360 --> 00:15:59,519
aptitudes dashboard

00:15:57,519 --> 00:16:01,040
what's different so it highlighted the

00:15:59,519 --> 00:16:04,720
differences for us

00:16:01,040 --> 00:16:07,519
beautiful okay now the

00:16:04,720 --> 00:16:09,279
thing about visual testing in that way

00:16:07,519 --> 00:16:11,120
is that it's capturing everything yes

00:16:09,279 --> 00:16:12,959
we've totally eliminated the

00:16:11,120 --> 00:16:15,279
unintentional blindness there

00:16:12,959 --> 00:16:17,279
but sometimes we don't want to capture

00:16:15,279 --> 00:16:19,759
every single thing we might want to just

00:16:17,279 --> 00:16:20,639
scope down to a certain area of the

00:16:19,759 --> 00:16:24,240
application

00:16:20,639 --> 00:16:25,759
right so i can do that in that check

00:16:24,240 --> 00:16:28,959
window command by just

00:16:25,759 --> 00:16:30,160
passing in the target so i want a

00:16:28,959 --> 00:16:33,279
specific region

00:16:30,160 --> 00:16:35,519
and then a css selector for that region

00:16:33,279 --> 00:16:37,839
that way it'll only take a picture of

00:16:35,519 --> 00:16:41,120
that specific region so

00:16:37,839 --> 00:16:44,800
here i only get this book right and this

00:16:41,120 --> 00:16:47,920
is great uh definitely scopes it down

00:16:44,800 --> 00:16:49,920
however we kind of reintroduce a little

00:16:47,920 --> 00:16:51,519
bit of unintentional blindness when we

00:16:49,920 --> 00:16:54,880
scope it that way

00:16:51,519 --> 00:16:55,759
for example here i'm typing in agile

00:16:54,880 --> 00:16:57,600
testing but

00:16:55,759 --> 00:16:59,839
none of the books went away because

00:16:57,600 --> 00:17:02,560
filter is broken now

00:16:59,839 --> 00:17:03,360
and our test would not catch that

00:17:02,560 --> 00:17:06,160
because

00:17:03,360 --> 00:17:07,600
we told it find that agile testing book

00:17:06,160 --> 00:17:10,319
and make sure it's beautiful

00:17:07,600 --> 00:17:12,480
well it's there and it's beautiful and

00:17:10,319 --> 00:17:13,839
it kind of misses everything else that's

00:17:12,480 --> 00:17:15,760
going around it

00:17:13,839 --> 00:17:17,120
now you're still in control we're

00:17:15,760 --> 00:17:19,679
utilizing ai

00:17:17,120 --> 00:17:20,480
but you need to be the boss here right

00:17:19,679 --> 00:17:23,360
so we can

00:17:20,480 --> 00:17:25,360
enhance our tests we can mix and match

00:17:23,360 --> 00:17:26,160
visual assertions with functional

00:17:25,360 --> 00:17:27,679
assertions

00:17:26,160 --> 00:17:30,080
so on line three there i'm going to

00:17:27,679 --> 00:17:32,080
slide that assertion back in here

00:17:30,080 --> 00:17:33,520
and say make sure that it's only one

00:17:32,080 --> 00:17:36,000
book that comes back

00:17:33,520 --> 00:17:36,720
and then go ahead and visually verify

00:17:36,000 --> 00:17:38,559
that book

00:17:36,720 --> 00:17:40,640
all right so that gives us the strength

00:17:38,559 --> 00:17:42,720
and the power that we need

00:17:40,640 --> 00:17:44,799
now some people will ask me about

00:17:42,720 --> 00:17:46,880
dynamic content and say well angie i'm

00:17:44,799 --> 00:17:49,360
not using static data so

00:17:46,880 --> 00:17:52,720
maybe mine won't look so great or i

00:17:49,360 --> 00:17:55,840
can't use visual testing to verify it

00:17:52,720 --> 00:17:58,720
wrong you can so aptitude has four

00:17:55,840 --> 00:18:00,000
different algorithms right um to do the

00:17:58,720 --> 00:18:02,480
comparisons the first

00:18:00,000 --> 00:18:04,559
one is strict that's the default one we

00:18:02,480 --> 00:18:05,280
didn't have to specify that one the next

00:18:04,559 --> 00:18:07,760
one is

00:18:05,280 --> 00:18:10,080
exact which does picks with a pixel i

00:18:07,760 --> 00:18:12,240
already told you pixel to pixel sucks

00:18:10,080 --> 00:18:13,360
you're not gonna use pixel pixel right

00:18:12,240 --> 00:18:15,679
right great

00:18:13,360 --> 00:18:16,559
the third one is content where it goes

00:18:15,679 --> 00:18:18,720
colorblind

00:18:16,559 --> 00:18:19,840
and it only verifies the content on the

00:18:18,720 --> 00:18:23,440
page and

00:18:19,840 --> 00:18:25,919
not necessarily the colors okay

00:18:23,440 --> 00:18:29,039
and then the last one is layout this

00:18:25,919 --> 00:18:29,760
utilizes ai in a different way to make

00:18:29,039 --> 00:18:32,320
sure

00:18:29,760 --> 00:18:32,880
that the layout of the page is okay

00:18:32,320 --> 00:18:36,000
right

00:18:32,880 --> 00:18:36,559
so not necessarily the content but it

00:18:36,000 --> 00:18:39,919
detects

00:18:36,559 --> 00:18:43,120
a pattern on the page

00:18:39,919 --> 00:18:45,039
so for example with our books in the

00:18:43,120 --> 00:18:46,320
baseline image i have advanced selenium

00:18:45,039 --> 00:18:47,840
followed by cucumber

00:18:46,320 --> 00:18:49,840
and then in the regression i have

00:18:47,840 --> 00:18:52,320
cucumber followed by advanced selenium

00:18:49,840 --> 00:18:52,880
because i use the layout mode this will

00:18:52,320 --> 00:18:54,320
pass

00:18:52,880 --> 00:18:56,000
it's just making sure things aren't

00:18:54,320 --> 00:18:59,039
overlapping or looking goofy

00:18:56,000 --> 00:19:02,240
there all right in addition

00:18:59,039 --> 00:19:04,799
to doing it on a specific

00:19:02,240 --> 00:19:06,160
browser this can also work

00:19:04,799 --> 00:19:08,799
cross-platform

00:19:06,160 --> 00:19:09,520
so apple tools has this ultra fast grid

00:19:08,799 --> 00:19:12,720
where you can

00:19:09,520 --> 00:19:13,440
specify what configurations you want to

00:19:12,720 --> 00:19:16,559
run against

00:19:13,440 --> 00:19:19,600
and what this does is it takes

00:19:16,559 --> 00:19:22,400
your javascript your dom

00:19:19,600 --> 00:19:23,440
your css basically the state of your

00:19:22,400 --> 00:19:25,200
application

00:19:23,440 --> 00:19:26,960
blast it across all of the

00:19:25,200 --> 00:19:30,000
configurations that you like to

00:19:26,960 --> 00:19:33,200
because remember i told you visual bugs

00:19:30,000 --> 00:19:36,240
they lie in those um uh

00:19:33,200 --> 00:19:38,240
viewport changes right so it'll verify

00:19:36,240 --> 00:19:40,160
all of that for you in parallel

00:19:38,240 --> 00:19:42,240
lightning fast to do

00:19:40,160 --> 00:19:44,080
notice here i'm specifying i want

00:19:42,240 --> 00:19:46,480
firefox chrome in ie

00:19:44,080 --> 00:19:47,600
11. there's also support for edge and

00:19:46,480 --> 00:19:49,600
safari

00:19:47,600 --> 00:19:52,080
not only the browser i'm saying i want

00:19:49,600 --> 00:19:55,120
iphone 10 and landscaping portrait mode

00:19:52,080 --> 00:19:56,480
i can do iphone 12 i can do galaxy

00:19:55,120 --> 00:19:58,080
whatever i want to do

00:19:56,480 --> 00:19:59,760
my test doesn't have to change so i

00:19:58,080 --> 00:20:00,320
don't have to go back into all those

00:19:59,760 --> 00:20:03,760
tests

00:20:00,320 --> 00:20:06,320
and update them this is working perfect

00:20:03,760 --> 00:20:07,760
and so then i can see how my application

00:20:06,320 --> 00:20:10,000
looks i don't have to download this

00:20:07,760 --> 00:20:12,080
stuff i don't have to have a device form

00:20:10,000 --> 00:20:14,320
all of that is handled in the cloud for

00:20:12,080 --> 00:20:15,120
me and this is what it looks like on my

00:20:14,320 --> 00:20:20,080
dashboard

00:20:15,120 --> 00:20:24,159
notice there we have those devices in

00:20:20,080 --> 00:20:26,799
browsers and configurations also

00:20:24,159 --> 00:20:27,679
integrates seamlessly with github

00:20:26,799 --> 00:20:30,799
actions

00:20:27,679 --> 00:20:33,440
so you can have these visual tests run

00:20:30,799 --> 00:20:34,799
on every single pull request and you

00:20:33,440 --> 00:20:37,360
don't have to worry you can

00:20:34,799 --> 00:20:38,799
actually do whatever you want because

00:20:37,360 --> 00:20:41,120
you have tests

00:20:38,799 --> 00:20:41,919
all right so that's visual testing in a

00:20:41,120 --> 00:20:49,360
nutshell

00:20:41,919 --> 00:20:52,080
what questions can i answer

00:20:49,360 --> 00:20:52,080

YouTube URL: https://www.youtube.com/watch?v=tIIKWGLrzkQ


