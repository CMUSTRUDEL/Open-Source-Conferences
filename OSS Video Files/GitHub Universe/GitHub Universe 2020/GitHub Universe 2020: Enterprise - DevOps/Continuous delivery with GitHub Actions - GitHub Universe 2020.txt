Title: Continuous delivery with GitHub Actions - GitHub Universe 2020
Publication date: 2020-12-10
Playlist: GitHub Universe 2020: Enterprise - DevOps
Description: 
	Presented by Chris Patterson, Product Manager, GitHub

The community-powered in GitHub Actions enable you to automate your software lifecycle from idea to production. In this demo centric session you will learn how to use GitHub Actions to build a secure deployment pipeline for your applications.

0:00 - Intro and GitHub Actions Growth Metrics
3:55 - Protect Environments
5:36 - Scope Secrets to Environments
7:02 - Track Deployed Environments
7:51 - Vizualize complex workflows
8:44 - Demo

For more from GitHub Universe 2020, visit https://githubuniverse.com

As always, feel free to leave us a comment below and don't forget to subscribe: http://bit.ly/subgithub

Thanks!

Connect with us.
Facebook: http://fb.com/github
Twitter: http://twitter.com/github
LinkedIn: http://linkedin.com/company/github

About GitHub
GitHub is the best place to share code with friends, co-workers, classmates, and complete strangers. Millions of people use GitHub to build amazing things together. For more info, go to http://github.com
Captions: 
	00:00:01,110 --> 00:00:04,189
[Music]

00:00:06,319 --> 00:00:09,440
all right thank you so much for that

00:00:08,240 --> 00:00:11,679
incredibly kind

00:00:09,440 --> 00:00:12,880
introduction guys um it's very

00:00:11,679 --> 00:00:14,320
flattering and i

00:00:12,880 --> 00:00:15,920
certainly will do my best to try to

00:00:14,320 --> 00:00:18,240
stand up to it

00:00:15,920 --> 00:00:19,439
as uh ms bitchin my name is chris

00:00:18,240 --> 00:00:21,760
patterson and i'm a

00:00:19,439 --> 00:00:23,279
product manager for github actions i've

00:00:21,760 --> 00:00:24,160
been working on github actions ever

00:00:23,279 --> 00:00:27,199
since

00:00:24,160 --> 00:00:29,039
uh we we really started

00:00:27,199 --> 00:00:30,640
almost two years ago now actually been

00:00:29,039 --> 00:00:31,840
working on github actions and building

00:00:30,640 --> 00:00:34,239
it out

00:00:31,840 --> 00:00:35,760
and uh before we get started with uh

00:00:34,239 --> 00:00:37,040
today's topic which is really talking

00:00:35,760 --> 00:00:38,719
about how we can

00:00:37,040 --> 00:00:40,480
improve continuous delivery with github

00:00:38,719 --> 00:00:41,040
actions and really focusing on some of

00:00:40,480 --> 00:00:44,079
those

00:00:41,040 --> 00:00:45,600
really neat features that you guys saw

00:00:44,079 --> 00:00:47,360
in the keynote from that i wanted to

00:00:45,600 --> 00:00:48,879
talk a little bit about where github

00:00:47,360 --> 00:00:51,520
actions has grown

00:00:48,879 --> 00:00:52,079
uh since we launched it actually at

00:00:51,520 --> 00:00:54,320
universe

00:00:52,079 --> 00:00:55,120
one year ago today since it went or not

00:00:54,320 --> 00:00:58,640
today at least

00:00:55,120 --> 00:01:01,840
about one year ago uh since it went ga

00:00:58,640 --> 00:01:06,720
so github actions has grown massively

00:01:01,840 --> 00:01:08,960
right now um we run about 75 million

00:01:06,720 --> 00:01:10,799
jobs at the slide says 73 but i looked

00:01:08,960 --> 00:01:12,000
this morning about 75 million different

00:01:10,799 --> 00:01:14,720
jobs a month

00:01:12,000 --> 00:01:16,320
across a wide variety of workloads ci is

00:01:14,720 --> 00:01:17,200
probably the most common thing that

00:01:16,320 --> 00:01:20,799
people

00:01:17,200 --> 00:01:22,000
uh absolutely automate but the amazing

00:01:20,799 --> 00:01:24,479
growth has really come

00:01:22,000 --> 00:01:25,439
i think due to the community and if we

00:01:24,479 --> 00:01:27,200
look across

00:01:25,439 --> 00:01:29,200
sort of all of the different ci's that

00:01:27,200 --> 00:01:31,439
happen on github we definitely

00:01:29,200 --> 00:01:32,720
believe actions is by far the the number

00:01:31,439 --> 00:01:34,079
one uh we

00:01:32,720 --> 00:01:37,520
we seem to do the most at least from

00:01:34,079 --> 00:01:40,320
what we can see but the marketplace

00:01:37,520 --> 00:01:42,399
has been just an incredible uh growth

00:01:40,320 --> 00:01:43,759
factor there are more than 6 200

00:01:42,399 --> 00:01:45,680
different actions

00:01:43,759 --> 00:01:47,840
that are used that are available in the

00:01:45,680 --> 00:01:51,360
marketplace and

00:01:47,840 --> 00:01:53,360
if we look at uh the telemetry across

00:01:51,360 --> 00:01:56,799
all of github actions we actually see

00:01:53,360 --> 00:01:58,479
closer to 10 000 different actions used

00:01:56,799 --> 00:01:59,600
across different organizations and we

00:01:58,479 --> 00:02:00,799
think that's pretty incredible because

00:01:59,600 --> 00:02:02,799
that means people are

00:02:00,799 --> 00:02:04,240
are both using the community but also

00:02:02,799 --> 00:02:06,840
taking advantage of

00:02:04,240 --> 00:02:08,000
of using actions within their own

00:02:06,840 --> 00:02:09,360
organizations

00:02:08,000 --> 00:02:11,200
and so i just really want to thank the

00:02:09,360 --> 00:02:14,800
community for that incredible

00:02:11,200 --> 00:02:17,680
uh vote of confidence frankly so

00:02:14,800 --> 00:02:19,360
in today's topic talk about continuous

00:02:17,680 --> 00:02:22,000
delivery with github actions and

00:02:19,360 --> 00:02:23,440
you know this is always a fun topic

00:02:22,000 --> 00:02:24,319
because continuous delivery means a lot

00:02:23,440 --> 00:02:25,520
of different things to a lot of

00:02:24,319 --> 00:02:27,360
different people but

00:02:25,520 --> 00:02:29,200
uh specifically the actions you know the

00:02:27,360 --> 00:02:29,920
question actually i got from a couple of

00:02:29,200 --> 00:02:31,280
people

00:02:29,920 --> 00:02:32,959
uh when i first started talking about

00:02:31,280 --> 00:02:34,720
what we were doing was well i can do a

00:02:32,959 --> 00:02:35,840
cd with actions today actions can be

00:02:34,720 --> 00:02:37,599
triggered off of lots of different

00:02:35,840 --> 00:02:39,680
events pull requests and push and new

00:02:37,599 --> 00:02:42,160
releases and things like that

00:02:39,680 --> 00:02:44,080
and that is absolutely true in fact i

00:02:42,160 --> 00:02:45,680
did a talk at satellite back in the

00:02:44,080 --> 00:02:47,519
spring of of a way you could do a

00:02:45,680 --> 00:02:48,959
continuous delivery workflow with github

00:02:47,519 --> 00:02:50,959
actions but

00:02:48,959 --> 00:02:52,080
when i talk to different types of

00:02:50,959 --> 00:02:54,080
customers and

00:02:52,080 --> 00:02:55,760
a lot of them tend to be sort of more

00:02:54,080 --> 00:02:57,680
enterprise focused or

00:02:55,760 --> 00:02:59,440
are customers that have compliance needs

00:02:57,680 --> 00:03:00,720
there definitely were some gaps that i

00:02:59,440 --> 00:03:03,599
thought we needed to fill

00:03:00,720 --> 00:03:04,080
and so really what i want to talk about

00:03:03,599 --> 00:03:06,720
is is

00:03:04,080 --> 00:03:08,319
yes while you can do continuous delivery

00:03:06,720 --> 00:03:10,000
with actions today

00:03:08,319 --> 00:03:11,920
we thought that we could do a better job

00:03:10,000 --> 00:03:13,680
and and frankly we think we can continue

00:03:11,920 --> 00:03:15,599
to do a better job even beyond what we

00:03:13,680 --> 00:03:18,400
are shipping now

00:03:15,599 --> 00:03:18,879
so what i wanted to talk about for this

00:03:18,400 --> 00:03:22,319
talk

00:03:18,879 --> 00:03:23,680
are really focusing on four i call it

00:03:22,319 --> 00:03:26,959
four-ish

00:03:23,680 --> 00:03:30,000
new key capabilities in github actions

00:03:26,959 --> 00:03:31,760
that we think working together really

00:03:30,000 --> 00:03:32,560
help you take your continuous delivery

00:03:31,760 --> 00:03:35,040
workflows

00:03:32,560 --> 00:03:36,239
kind of to a next level and and then

00:03:35,040 --> 00:03:37,840
over time

00:03:36,239 --> 00:03:39,599
some of these capabilities we really

00:03:37,840 --> 00:03:41,840
have some great ideas

00:03:39,599 --> 00:03:43,120
uh of ways we think we can build on them

00:03:41,840 --> 00:03:44,879
but also

00:03:43,120 --> 00:03:46,239
you know as we have been doing all along

00:03:44,879 --> 00:03:46,879
i think we can learn a lot from the

00:03:46,239 --> 00:03:50,319
community

00:03:46,879 --> 00:03:51,120
and how they can how you guys frankly

00:03:50,319 --> 00:03:53,599
take

00:03:51,120 --> 00:03:55,519
these capabilities and do interesting

00:03:53,599 --> 00:03:57,920
things with them

00:03:55,519 --> 00:03:59,280
so to start out i'm going to talk about

00:03:57,920 --> 00:04:00,000
the capabilities and then we're going to

00:03:59,280 --> 00:04:02,159
go into a

00:04:00,000 --> 00:04:03,680
set of demos to look at how they can be

00:04:02,159 --> 00:04:07,040
put into practice

00:04:03,680 --> 00:04:09,680
so the first one i sort of term protect

00:04:07,040 --> 00:04:10,560
and what we implemented was protected

00:04:09,680 --> 00:04:12,400
environments

00:04:10,560 --> 00:04:15,120
and the idea here is we wanted to

00:04:12,400 --> 00:04:17,759
prevent unauthorized deployments

00:04:15,120 --> 00:04:19,280
and in order to to think about how that

00:04:17,759 --> 00:04:20,479
might work with with github actions in

00:04:19,280 --> 00:04:21,840
fact you've seen this this on the

00:04:20,479 --> 00:04:22,560
roadmap if you looked at our public

00:04:21,840 --> 00:04:23,680
roadmap

00:04:22,560 --> 00:04:25,280
we have something called manual

00:04:23,680 --> 00:04:27,199
approvals and there were a couple of

00:04:25,280 --> 00:04:29,120
different ways that we thought about

00:04:27,199 --> 00:04:30,240
implementing that kind of feature but in

00:04:29,120 --> 00:04:32,479
the end we

00:04:30,240 --> 00:04:34,320
relied on this concept that we really

00:04:32,479 --> 00:04:36,479
introduced with pull request which was

00:04:34,320 --> 00:04:38,639
required reviewers for code to move

00:04:36,479 --> 00:04:40,560
and thought about how we could take that

00:04:38,639 --> 00:04:42,000
same idea and move it into

00:04:40,560 --> 00:04:43,680
deployment and think about required

00:04:42,000 --> 00:04:45,840
reviewers for deployments

00:04:43,680 --> 00:04:47,759
and so this is configured on your repo

00:04:45,840 --> 00:04:50,000
settings outside of the workflow

00:04:47,759 --> 00:04:51,680
and when you try to deploy to a given

00:04:50,000 --> 00:04:54,960
environment

00:04:51,680 --> 00:04:57,280
if a set of reviewers is required the

00:04:54,960 --> 00:04:58,880
system will pause that job before it

00:04:57,280 --> 00:05:01,039
ever goes to a runner

00:04:58,880 --> 00:05:02,479
and send out a series of notifications

00:05:01,039 --> 00:05:05,120
and require a person

00:05:02,479 --> 00:05:06,720
in this list or or somebody in a team to

00:05:05,120 --> 00:05:09,520
come and say it's okay for that job to

00:05:06,720 --> 00:05:11,520
continue to deploy to that environment

00:05:09,520 --> 00:05:13,360
and the other thing we did with this is

00:05:11,520 --> 00:05:16,160
we wanted to make sure we had good

00:05:13,360 --> 00:05:16,639
separation of concerns and so in order

00:05:16,160 --> 00:05:18,960
to

00:05:16,639 --> 00:05:20,800
be in this list you actually only need

00:05:18,960 --> 00:05:23,280
read access to the environment

00:05:20,800 --> 00:05:24,639
or sorry read access to the repository

00:05:23,280 --> 00:05:25,919
and that allows you to have people that

00:05:24,639 --> 00:05:28,080
approve deployments that don't

00:05:25,919 --> 00:05:31,199
necessarily have the ability to

00:05:28,080 --> 00:05:35,120
uh to alter code which some

00:05:31,199 --> 00:05:37,919
organizations want now this is great

00:05:35,120 --> 00:05:38,960
but without the ability to protect your

00:05:37,919 --> 00:05:40,720
secrets

00:05:38,960 --> 00:05:42,960
uh this actually isn't that helpful

00:05:40,720 --> 00:05:45,280
because you know for example

00:05:42,960 --> 00:05:47,039
in the current uh github actions you

00:05:45,280 --> 00:05:47,840
have repository level secrets and that's

00:05:47,039 --> 00:05:49,120
great but

00:05:47,840 --> 00:05:51,199
anybody with right access to the

00:05:49,120 --> 00:05:54,880
repository can alter those secrets

00:05:51,199 --> 00:05:55,280
and or use those secrets and so we chose

00:05:54,880 --> 00:05:58,319
to

00:05:55,280 --> 00:06:00,960
uh implement another scope for secrets

00:05:58,319 --> 00:06:03,120
and as we did this uh we actually built

00:06:00,960 --> 00:06:05,919
it in a way that we thinks

00:06:03,120 --> 00:06:06,960
we did in a way that we think um we can

00:06:05,919 --> 00:06:10,080
expand to other

00:06:06,960 --> 00:06:13,600
things um so for example

00:06:10,080 --> 00:06:16,240
um we uh

00:06:13,600 --> 00:06:17,280
sorry we had the um we had the reposcope

00:06:16,240 --> 00:06:18,720
secrets and now we have environment

00:06:17,280 --> 00:06:21,840
scope secrets and

00:06:18,720 --> 00:06:22,720
with those things um we have the ability

00:06:21,840 --> 00:06:24,479
to potentially just

00:06:22,720 --> 00:06:26,240
produce other scopes and the way these

00:06:24,479 --> 00:06:29,840
environment scope secrets work

00:06:26,240 --> 00:06:31,360
is you can um the job that does the

00:06:29,840 --> 00:06:32,560
deployment doesn't get access to these

00:06:31,360 --> 00:06:34,720
secrets

00:06:32,560 --> 00:06:36,000
until after the approval so after the

00:06:34,720 --> 00:06:37,440
required reviewers go through so that

00:06:36,000 --> 00:06:40,880
protects those secrets from

00:06:37,440 --> 00:06:41,680
unauthorized access next we heard from a

00:06:40,880 --> 00:06:43,120
lot of people that

00:06:41,680 --> 00:06:44,880
you know they want to be able to track

00:06:43,120 --> 00:06:46,319
what is currently in a particular

00:06:44,880 --> 00:06:47,280
environment whether that environment is

00:06:46,319 --> 00:06:49,680
production

00:06:47,280 --> 00:06:50,800
or if that environment is a staging or

00:06:49,680 --> 00:06:52,479
whatever and

00:06:50,800 --> 00:06:54,000
you know one of the questions asked

00:06:52,479 --> 00:06:55,280
actually the previous session was about

00:06:54,000 --> 00:06:57,759
how you could track which

00:06:55,280 --> 00:06:59,120
you know work items or which issues uh

00:06:57,759 --> 00:07:00,880
had been moved into a particular

00:06:59,120 --> 00:07:03,280
environment and

00:07:00,880 --> 00:07:04,000
starting to build this new activity log

00:07:03,280 --> 00:07:06,800
uh here

00:07:04,000 --> 00:07:07,919
is is part of our goal to to really move

00:07:06,800 --> 00:07:09,759
in that direction

00:07:07,919 --> 00:07:12,000
and this is kind of where this kind of

00:07:09,759 --> 00:07:15,120
four-ish new capabilities comes in

00:07:12,000 --> 00:07:17,039
because this deployments view

00:07:15,120 --> 00:07:18,720
actually exists in github today it just

00:07:17,039 --> 00:07:20,160
isn't very commonly used because it's a

00:07:18,720 --> 00:07:20,720
little bit hard to make it show up and

00:07:20,160 --> 00:07:22,479
so

00:07:20,720 --> 00:07:25,039
we integrated took some of the existing

00:07:22,479 --> 00:07:26,639
platform in github and integrated

00:07:25,039 --> 00:07:29,759
directly into actions to make it easy

00:07:26,639 --> 00:07:32,960
for you to get this list of deployments

00:07:29,759 --> 00:07:35,440
and finally uh we wanted to give you a

00:07:32,960 --> 00:07:37,599
much better way to visually track

00:07:35,440 --> 00:07:39,199
how your workflows are progressing you

00:07:37,599 --> 00:07:41,120
know as you have these more complex

00:07:39,199 --> 00:07:42,800
workflows particularly ones that do

00:07:41,120 --> 00:07:44,560
sort of pipeline style deployments to

00:07:42,800 --> 00:07:48,639
different environments or

00:07:44,560 --> 00:07:51,759
maybe have rich matrices or other

00:07:48,639 --> 00:07:53,599
concepts having the ability to see where

00:07:51,759 --> 00:07:55,520
those go and sort of track their

00:07:53,599 --> 00:07:56,960
progress at this very visual level

00:07:55,520 --> 00:07:59,280
we think improves just the overall

00:07:56,960 --> 00:08:01,120
usability of actions

00:07:59,280 --> 00:08:02,800
the usability of more complex workflows

00:08:01,120 --> 00:08:07,199
and the ability to debug

00:08:02,800 --> 00:08:10,240
potential issues so with that being said

00:08:07,199 --> 00:08:12,000
i want to go now to a demo and take a

00:08:10,240 --> 00:08:15,280
look at how these things can be put

00:08:12,000 --> 00:08:15,280
together in practice

00:08:19,120 --> 00:08:22,560
all right so here i've got a demo

00:08:21,680 --> 00:08:24,319
application

00:08:22,560 --> 00:08:26,960
that is a really really basic

00:08:24,319 --> 00:08:29,840
application really really basic app

00:08:26,960 --> 00:08:32,800
and what it does is it just simply goes

00:08:29,840 --> 00:08:34,640
and lists out popular repos on github by

00:08:32,800 --> 00:08:37,279
language

00:08:34,640 --> 00:08:39,680
in fact this application is the same one

00:08:37,279 --> 00:08:41,360
that i've used previously in cd demos

00:08:39,680 --> 00:08:43,440
but i wanted and i really wanted to kind

00:08:41,360 --> 00:08:44,320
of show you how we've improved things so

00:08:43,440 --> 00:08:46,000
what i'm going to do

00:08:44,320 --> 00:08:48,000
is first thing i'm going to do is i'm

00:08:46,000 --> 00:08:49,600
going to go and make a quick code change

00:08:48,000 --> 00:08:52,839
just to kind of kick off the process and

00:08:49,600 --> 00:08:56,399
then we'll talk through how this works

00:08:52,839 --> 00:08:59,680
so let's go to source

00:08:56,399 --> 00:09:01,760
here and i'm going to simply add

00:08:59,680 --> 00:09:03,120
another language to our header there

00:09:01,760 --> 00:09:06,480
we're going to go add

00:09:03,120 --> 00:09:06,480
i don't know let's do rust

00:09:07,600 --> 00:09:14,720
so go down and say adding rest

00:09:12,320 --> 00:09:17,120
and like a good citizen i'm going to

00:09:14,720 --> 00:09:17,120
actually

00:09:18,080 --> 00:09:21,440
use a pull request and commit to a

00:09:19,680 --> 00:09:22,000
different branch so we're going to

00:09:21,440 --> 00:09:26,240
propose that

00:09:22,000 --> 00:09:28,399
file change create that pull request

00:09:26,240 --> 00:09:30,640
and then this is immediately going to

00:09:28,399 --> 00:09:31,200
sort of start off the overall experience

00:09:30,640 --> 00:09:33,760
so

00:09:31,200 --> 00:09:36,080
first thing you see that happens is my

00:09:33,760 --> 00:09:39,279
deploy site workflow has kicked off to

00:09:36,080 --> 00:09:41,040
build this particular application and

00:09:39,279 --> 00:09:44,880
while that's going

00:09:41,040 --> 00:09:48,720
let's go ahead and navigate over to it

00:09:44,880 --> 00:09:51,279
so we can take a look at how things are

00:09:48,720 --> 00:09:52,399
moving so first off if i click here the

00:09:51,279 --> 00:09:54,080
first thing you'll see is this great

00:09:52,399 --> 00:09:55,120
visual view and i can immediately see

00:09:54,080 --> 00:09:56,959
that

00:09:55,120 --> 00:09:58,560
yep build's going to happen and then

00:09:56,959 --> 00:09:59,920
it's going to take one of these branches

00:09:58,560 --> 00:10:01,360
just depending on

00:09:59,920 --> 00:10:03,279
how things are configured for this

00:10:01,360 --> 00:10:05,680
particular workflow and we go look at

00:10:03,279 --> 00:10:08,800
how this is set up

00:10:05,680 --> 00:10:09,200
go to my deploy workflow here i've got a

00:10:08,800 --> 00:10:11,120
job

00:10:09,200 --> 00:10:13,120
that sets up to build and all it does is

00:10:11,120 --> 00:10:14,880
it builds my site and builds a container

00:10:13,120 --> 00:10:16,240
and this is one of the places where the

00:10:14,880 --> 00:10:18,399
power of the community has really come

00:10:16,240 --> 00:10:20,240
in to help is i've taken advantage

00:10:18,399 --> 00:10:22,000
of some really incredible actions

00:10:20,240 --> 00:10:22,640
written by docker one of our partners

00:10:22,000 --> 00:10:26,000
here

00:10:22,640 --> 00:10:27,360
uh to build my container and using this

00:10:26,000 --> 00:10:29,120
nice build and push action

00:10:27,360 --> 00:10:32,320
i'm getting some caching to help my

00:10:29,120 --> 00:10:34,079
improve my container build speed

00:10:32,320 --> 00:10:36,000
and just a lot of work that i didn't

00:10:34,079 --> 00:10:36,959
have to go script myself but the next

00:10:36,000 --> 00:10:40,000
thing you see is

00:10:36,959 --> 00:10:43,279
this deploy to review app here and

00:10:40,000 --> 00:10:45,600
it's got a dependency on build

00:10:43,279 --> 00:10:47,279
but right away there's this new keyword

00:10:45,600 --> 00:10:47,839
called environment listed as part of

00:10:47,279 --> 00:10:50,160
this job

00:10:47,839 --> 00:10:52,399
and this is really how you connect the

00:10:50,160 --> 00:10:55,200
continuous delivery the new environments

00:10:52,399 --> 00:10:56,720
uh scenarios to your job and so i simply

00:10:55,200 --> 00:10:58,959
said i'm gonna reference an environment

00:10:56,720 --> 00:11:01,680
an environment named review lab

00:10:58,959 --> 00:11:03,040
and then because this particular job

00:11:01,680 --> 00:11:05,040
actually deploys a new

00:11:03,040 --> 00:11:06,640
instance of my application for every

00:11:05,040 --> 00:11:08,800
single pull request

00:11:06,640 --> 00:11:10,160
i'm taking advantage of another great

00:11:08,800 --> 00:11:11,519
feature from actions which is the

00:11:10,160 --> 00:11:14,720
ability to have actions

00:11:11,519 --> 00:11:16,480
output a particular value and in this

00:11:14,720 --> 00:11:20,160
case this deploy web apps

00:11:16,480 --> 00:11:22,800
uh action written by the azure team

00:11:20,160 --> 00:11:24,640
uh outputs the url that was that was

00:11:22,800 --> 00:11:26,560
deployed to for this thing and so i've

00:11:24,640 --> 00:11:29,200
just bound it here and if i go back

00:11:26,560 --> 00:11:30,480
and look at my pull request i can

00:11:29,200 --> 00:11:31,839
immediately see

00:11:30,480 --> 00:11:33,519
a couple of really interesting things

00:11:31,839 --> 00:11:35,839
happen so first off we see

00:11:33,519 --> 00:11:37,200
the build has completed i'm going to go

00:11:35,839 --> 00:11:39,200
show the environment and we can

00:11:37,200 --> 00:11:40,959
already see that this pull request is

00:11:39,200 --> 00:11:42,000
being deployed to the review lab

00:11:40,959 --> 00:11:44,399
environment

00:11:42,000 --> 00:11:45,760
by this particular workflow and you know

00:11:44,399 --> 00:11:47,120
we started to really

00:11:45,760 --> 00:11:50,399
you know connect those things together

00:11:47,120 --> 00:11:53,040
in fact this workflow is completed

00:11:50,399 --> 00:11:54,959
and right here in my pull request view i

00:11:53,040 --> 00:11:57,120
can see view deployment

00:11:54,959 --> 00:11:59,440
so let's go ahead and click on that and

00:11:57,120 --> 00:12:01,040
i get a really quick access to

00:11:59,440 --> 00:12:03,600
this particular application instance

00:12:01,040 --> 00:12:04,720
i've deployed i can see rust is there

00:12:03,600 --> 00:12:06,800
it's going to load my popular

00:12:04,720 --> 00:12:09,120
repositories and that looks really

00:12:06,800 --> 00:12:09,120
awesome

00:12:09,200 --> 00:12:12,399
fantastic so everything looks good in

00:12:10,880 --> 00:12:12,880
this case and i'm actually going to go

00:12:12,399 --> 00:12:16,800
ahead

00:12:12,880 --> 00:12:16,800
and merge this pull request

00:12:17,839 --> 00:12:21,360
merging this pull request is going to

00:12:19,279 --> 00:12:22,079
kick off just like you would expect some

00:12:21,360 --> 00:12:24,880
additional

00:12:22,079 --> 00:12:26,160
workflows um in this case that workflow

00:12:24,880 --> 00:12:27,600
is going to take a slightly different

00:12:26,160 --> 00:12:30,079
path

00:12:27,600 --> 00:12:30,880
and so while this progresses let's take

00:12:30,079 --> 00:12:33,120
a look at how

00:12:30,880 --> 00:12:35,920
i would go about configuring some of

00:12:33,120 --> 00:12:38,800
these new capabilities

00:12:35,920 --> 00:12:40,639
so in this case uh we're gonna go build

00:12:38,800 --> 00:12:42,399
our container again and we'll deploy the

00:12:40,639 --> 00:12:44,720
staging deploy to production

00:12:42,399 --> 00:12:46,880
but if i go over into my settings tab i

00:12:44,720 --> 00:12:50,000
see a couple of new interesting things

00:12:46,880 --> 00:12:51,279
so first off i go to secrets i can take

00:12:50,000 --> 00:12:53,519
a look and see

00:12:51,279 --> 00:12:55,040
that i've got these new contacts so i've

00:12:53,519 --> 00:12:56,000
got hey we've got environment secrets

00:12:55,040 --> 00:12:57,680
that's new

00:12:56,000 --> 00:13:00,079
and i've got this azure subscription

00:12:57,680 --> 00:13:02,480
secret here and interestingly i have a

00:13:00,079 --> 00:13:04,720
the exact same name secret right here

00:13:02,480 --> 00:13:06,399
and what this does is it lets me

00:13:04,720 --> 00:13:08,320
continue to build on this idea that

00:13:06,399 --> 00:13:10,959
secrets are important

00:13:08,320 --> 00:13:12,480
for the particular context i'm in so if

00:13:10,959 --> 00:13:13,760
i went and looked at my workflow the

00:13:12,480 --> 00:13:15,680
workflow i design

00:13:13,760 --> 00:13:17,519
always references this single secret

00:13:15,680 --> 00:13:18,959
called azure subscription secret

00:13:17,519 --> 00:13:21,440
it's just that when it's running in the

00:13:18,959 --> 00:13:23,279
context of say

00:13:21,440 --> 00:13:25,120
a particular environment in this case

00:13:23,279 --> 00:13:26,880
any environment other than production so

00:13:25,120 --> 00:13:29,360
just the repo or review

00:13:26,880 --> 00:13:31,519
or staging it gets one instance of the

00:13:29,360 --> 00:13:33,440
secret this is this one

00:13:31,519 --> 00:13:34,959
but when it runs in the context of the

00:13:33,440 --> 00:13:37,200
production environment

00:13:34,959 --> 00:13:39,839
it gets this other instance and so it

00:13:37,200 --> 00:13:41,360
lets me create workflows that

00:13:39,839 --> 00:13:43,040
work kind of regardless of which

00:13:41,360 --> 00:13:44,639
environment they're targeting

00:13:43,040 --> 00:13:46,720
which can really be helpful for

00:13:44,639 --> 00:13:48,480
maintenance

00:13:46,720 --> 00:13:49,920
so if i click on manage environment here

00:13:48,480 --> 00:13:52,480
we can go and take a look at

00:13:49,920 --> 00:13:53,600
a couple of different uh things that are

00:13:52,480 --> 00:13:56,240
going on so we see

00:13:53,600 --> 00:13:56,720
we've got this secret right here that's

00:13:56,240 --> 00:13:59,680
uh

00:13:56,720 --> 00:14:00,959
that's going on and then i've got my

00:13:59,680 --> 00:14:04,480
protection rules

00:14:00,959 --> 00:14:06,160
and so as a repository owner so i happen

00:14:04,480 --> 00:14:08,000
to be a repository owner or or

00:14:06,160 --> 00:14:09,360
admin in the case of org owned

00:14:08,000 --> 00:14:11,279
repositories

00:14:09,360 --> 00:14:12,720
i'm able to go here and set these

00:14:11,279 --> 00:14:15,519
protection rules

00:14:12,720 --> 00:14:16,480
um and so by required reviewers i made

00:14:15,519 --> 00:14:19,519
it myself

00:14:16,480 --> 00:14:19,519
as i mentioned before

00:14:20,079 --> 00:14:24,240
i can i can add different different sets

00:14:22,720 --> 00:14:26,560
of people so i could add a team if i

00:14:24,240 --> 00:14:29,760
wanted to

00:14:26,560 --> 00:14:31,360
and then when the required reviewers

00:14:29,760 --> 00:14:33,920
when the reviewer is triggered

00:14:31,360 --> 00:14:35,519
um somebody from this set so either a

00:14:33,920 --> 00:14:37,440
person from the team or or if the

00:14:35,519 --> 00:14:39,440
individual person listened here has to

00:14:37,440 --> 00:14:41,279
approve that and for now we just said

00:14:39,440 --> 00:14:42,800
it's just one person in the list

00:14:41,279 --> 00:14:44,320
i think it'll be interesting to get some

00:14:42,800 --> 00:14:45,519
feedback from the community from the

00:14:44,320 --> 00:14:46,959
people that use it on

00:14:45,519 --> 00:14:49,440
if you want to have a minimum required

00:14:46,959 --> 00:14:52,480
reviewers or other kinds of things

00:14:49,440 --> 00:14:54,240
we've also added this weight timer to a

00:14:52,480 --> 00:14:56,240
force a certain amount of wait time

00:14:54,240 --> 00:14:58,079
before a deployment's allowed and that

00:14:56,240 --> 00:15:00,240
could be useful if you want to maybe

00:14:58,079 --> 00:15:02,320
run some tests or run some validation on

00:15:00,240 --> 00:15:03,199
say a pre on staging before production

00:15:02,320 --> 00:15:05,040
happens

00:15:03,199 --> 00:15:06,320
uh and so you want to force a force a

00:15:05,040 --> 00:15:09,040
certain amount of time to sit in a

00:15:06,320 --> 00:15:11,360
particular environment

00:15:09,040 --> 00:15:12,720
so if we go back and take a look here we

00:15:11,360 --> 00:15:15,120
can see how our

00:15:12,720 --> 00:15:15,839
workflows progression we see another

00:15:15,120 --> 00:15:18,639
really

00:15:15,839 --> 00:15:19,600
cool new feature uh come up in our

00:15:18,639 --> 00:15:22,320
visual

00:15:19,600 --> 00:15:23,440
graph here and that was a progress bar

00:15:22,320 --> 00:15:26,720
that you saw briefly

00:15:23,440 --> 00:15:29,040
on this staging element

00:15:26,720 --> 00:15:30,320
and the idea there is in the case of

00:15:29,040 --> 00:15:31,759
long deployments

00:15:30,320 --> 00:15:33,680
you might have a bunch of different

00:15:31,759 --> 00:15:35,519
steps and be able to see how much time

00:15:33,680 --> 00:15:36,399
has passed and how much potential time

00:15:35,519 --> 00:15:37,839
remains

00:15:36,399 --> 00:15:40,079
right here from the graph can be really

00:15:37,839 --> 00:15:42,639
helpful you also have this url

00:15:40,079 --> 00:15:44,079
to the environment to quickly have

00:15:42,639 --> 00:15:45,839
access to go see

00:15:44,079 --> 00:15:48,000
where it is and so i'm going to go click

00:15:45,839 --> 00:15:50,560
on that we'll launch and i can see

00:15:48,000 --> 00:15:53,199
immediately what's in staging and say oh

00:15:50,560 --> 00:15:55,120
that looks great

00:15:53,199 --> 00:15:57,199
the feature seems to be there and so i

00:15:55,120 --> 00:16:00,160
could go through and approve it

00:15:57,199 --> 00:16:02,000
now i can see right here if i happen to

00:16:00,160 --> 00:16:02,480
have been looking at this particular

00:16:02,000 --> 00:16:04,800
screen

00:16:02,480 --> 00:16:06,560
right now that i need to approve it but

00:16:04,800 --> 00:16:08,240
also you know we know that there's a lot

00:16:06,560 --> 00:16:09,920
of cases where you might not be right in

00:16:08,240 --> 00:16:11,519
front of it so we've integrated with a

00:16:09,920 --> 00:16:13,279
couple of different things so first

00:16:11,519 --> 00:16:16,000
we've integrated with your standard web

00:16:13,279 --> 00:16:18,800
notifications uh so that you can

00:16:16,000 --> 00:16:19,519
immediately see the fact that somebody

00:16:18,800 --> 00:16:21,920
has

00:16:19,519 --> 00:16:22,560
this new approval requested notification

00:16:21,920 --> 00:16:25,600
type

00:16:22,560 --> 00:16:27,040
for a particular run and if i click on

00:16:25,600 --> 00:16:28,480
that that's going to take me right there

00:16:27,040 --> 00:16:30,079
so i can click on there

00:16:28,480 --> 00:16:31,759
and we've also started to do some other

00:16:30,079 --> 00:16:32,959
work to integrate in other places i

00:16:31,759 --> 00:16:35,680
think you saw

00:16:32,959 --> 00:16:36,480
in the keynote nat had a really neat

00:16:35,680 --> 00:16:38,160
little

00:16:36,480 --> 00:16:39,759
vignette at the end where he launched

00:16:38,160 --> 00:16:41,040
dark mode and you saw sort of a sneak

00:16:39,759 --> 00:16:42,160
preview of some work we're doing with

00:16:41,040 --> 00:16:44,480
the mobile app

00:16:42,160 --> 00:16:46,079
we've also done a lot of work with the

00:16:44,480 --> 00:16:48,480
team who works on the slack

00:16:46,079 --> 00:16:50,800
integration to integrate those there and

00:16:48,480 --> 00:16:53,680
you'll start to see these roll out

00:16:50,800 --> 00:16:55,040
again and we we think that as we use all

00:16:53,680 --> 00:16:57,440
of these endpoints

00:16:55,040 --> 00:16:59,360
for github we can really help drive that

00:16:57,440 --> 00:17:01,120
culture of of rapid deployment and

00:16:59,360 --> 00:17:03,360
unblocking your team

00:17:01,120 --> 00:17:04,559
from where you are exactly how you need

00:17:03,360 --> 00:17:07,280
to

00:17:04,559 --> 00:17:09,360
so if we go back and look at this i

00:17:07,280 --> 00:17:11,919
click simply click on this button

00:17:09,360 --> 00:17:13,600
and i can click on the production

00:17:11,919 --> 00:17:15,039
environment and if i had more than one

00:17:13,600 --> 00:17:17,199
review that had been requested

00:17:15,039 --> 00:17:18,880
i would see that right here i hit

00:17:17,199 --> 00:17:20,880
approve

00:17:18,880 --> 00:17:22,559
and that's going to let this job

00:17:20,880 --> 00:17:25,520
continue in a minute

00:17:22,559 --> 00:17:27,839
it will kick off on this deployment to

00:17:25,520 --> 00:17:30,240
my production environment

00:17:27,839 --> 00:17:32,720
and if i come back after the fact and i

00:17:30,240 --> 00:17:35,039
want to know hey who deployed this

00:17:32,720 --> 00:17:37,120
uh who or who approved this deployment

00:17:35,039 --> 00:17:38,160
you get a full audit log of exactly who

00:17:37,120 --> 00:17:40,400
made the approval

00:17:38,160 --> 00:17:41,200
made the approval uh and who made any

00:17:40,400 --> 00:17:44,880
comments

00:17:41,200 --> 00:17:47,760
again you can see that progress bar

00:17:44,880 --> 00:17:48,480
so we think that pull all those things

00:17:47,760 --> 00:17:51,520
together

00:17:48,480 --> 00:17:54,480
uh really do add up to the ability to do

00:17:51,520 --> 00:17:56,000
very very um rich continuous delivery

00:17:54,480 --> 00:17:58,400
workflows with github actions

00:17:56,000 --> 00:18:00,000
we have a lot of plans to enhance this

00:17:58,400 --> 00:18:02,240
capability in the future

00:18:00,000 --> 00:18:03,679
you know for example the protection

00:18:02,240 --> 00:18:05,280
rules for environments we really see

00:18:03,679 --> 00:18:06,880
that as a great potential point for

00:18:05,280 --> 00:18:08,720
integration

00:18:06,880 --> 00:18:10,559
and i'll be definitely looking for your

00:18:08,720 --> 00:18:12,559
comments and github discussions and of

00:18:10,559 --> 00:18:14,640
course on the community forum

00:18:12,559 --> 00:18:16,160
in the future on ways you guys take

00:18:14,640 --> 00:18:18,559
advantage of these capabilities

00:18:16,160 --> 00:18:19,280
and ideas for what you'd like to see

00:18:18,559 --> 00:18:21,919
them go to

00:18:19,280 --> 00:18:21,919
in the future

00:18:22,559 --> 00:18:28,320
so let's go back and

00:18:25,600 --> 00:18:30,080
the big question of course is when is

00:18:28,320 --> 00:18:33,440
this going to be available

00:18:30,080 --> 00:18:33,440
so right now

00:18:33,760 --> 00:18:37,120
this capability is all going to roll out

00:18:35,840 --> 00:18:39,760
to github.com

00:18:37,120 --> 00:18:41,520
in public beta on december 15th so about

00:18:39,760 --> 00:18:42,880
a week from today

00:18:41,520 --> 00:18:45,039
you guys will be able to take advantage

00:18:42,880 --> 00:18:47,919
of it in all your public repos

00:18:45,039 --> 00:18:49,600
there's no beta sign up process so you

00:18:47,919 --> 00:18:51,440
can just if you're already using actions

00:18:49,600 --> 00:18:53,360
you'll just see it show up

00:18:51,440 --> 00:18:54,720
if you're a repo owner repo admin you

00:18:53,360 --> 00:18:57,360
can start creating environments and

00:18:54,720 --> 00:18:59,440
protection rules and environment secrets

00:18:57,360 --> 00:19:01,280
and those docs roll out on exactly how

00:18:59,440 --> 00:19:03,840
you take advantage of the environment

00:19:01,280 --> 00:19:07,120
keyword in your workflows

00:19:03,840 --> 00:19:08,400
so with that i'd like to go back to the

00:19:07,120 --> 00:19:11,520
host and

00:19:08,400 --> 00:19:11,520

YouTube URL: https://www.youtube.com/watch?v=36hY0-O4STg


