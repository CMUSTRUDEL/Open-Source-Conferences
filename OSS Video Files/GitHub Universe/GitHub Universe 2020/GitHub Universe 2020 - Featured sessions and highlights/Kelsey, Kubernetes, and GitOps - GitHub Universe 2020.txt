Title: Kelsey, Kubernetes, and GitOps - GitHub Universe 2020
Publication date: 2020-12-10
Playlist: GitHub Universe 2020 - Featured sessions and highlights
Description: 
	Presented by Kelsey Hightower, Principal Engineer, Google 

This session will dive into Kelsey's journey into Kubernetes as a contributor and a member of the cloud native community. This session will also take a look at the current state of managing Kubernetes based infrastructure through collaboration and how GitOps fits into the big picture.

For more from GitHub Universe 2020, visit https://githubuniverse.com

As always, feel free to leave us a comment below and don't forget to subscribe: http://bit.ly/subgithub

Thanks!

Connect with us.
Facebook: http://fb.com/github
Twitter: http://twitter.com/github
LinkedIn: http://linkedin.com/company/github

About GitHub
GitHub is the best place to share code with friends, co-workers, classmates, and complete strangers. Millions of people use GitHub to build amazing things together. For more info, go to http://github.com
Captions: 
	00:00:10,330 --> 00:00:27,339
[Music]

00:00:29,960 --> 00:00:33,440
[Music]

00:00:36,150 --> 00:00:41,079
[Music]

00:00:42,840 --> 00:00:48,779
do

00:00:43,840 --> 00:00:48,779
[Music]

00:00:50,000 --> 00:00:56,559
hello welcome so i'm kelsey

00:00:53,440 --> 00:01:00,559
and this talk is kinda has a weird title

00:00:56,559 --> 00:01:01,760
kelsey kubernetes and get ops

00:01:00,559 --> 00:01:04,080
i think you would think those three

00:01:01,760 --> 00:01:06,000
things go together given my status in

00:01:04,080 --> 00:01:07,840
the kubernetes community

00:01:06,000 --> 00:01:10,240
but if you really want to understand

00:01:07,840 --> 00:01:12,560
kelsey you kind of have to understand

00:01:10,240 --> 00:01:14,479
the whole person we like to label

00:01:12,560 --> 00:01:16,880
ourselves technologists

00:01:14,479 --> 00:01:18,640
and just like many others i've used many

00:01:16,880 --> 00:01:19,119
labels over my career but the first

00:01:18,640 --> 00:01:22,479
label

00:01:19,119 --> 00:01:25,040
i've ever had um like many people

00:01:22,479 --> 00:01:26,400
i've worked in fast food specifically

00:01:25,040 --> 00:01:28,000
mcdonald's

00:01:26,400 --> 00:01:30,400
where you get the purple hat and the

00:01:28,000 --> 00:01:30,799
shirt to match uh you come home smelling

00:01:30,400 --> 00:01:33,040
like

00:01:30,799 --> 00:01:33,840
french fries and whatever they fight it

00:01:33,040 --> 00:01:36,799
in

00:01:33,840 --> 00:01:37,439
and a lot of my work ethic a lot of my

00:01:36,799 --> 00:01:40,079
maturity

00:01:37,439 --> 00:01:42,960
this this nature of being a professional

00:01:40,079 --> 00:01:46,479
started for me around the age of 15.

00:01:42,960 --> 00:01:49,520
and there's a long trajectory between

00:01:46,479 --> 00:01:51,680
those humble beginnings to the person

00:01:49,520 --> 00:01:53,119
you speak in front of you today or

00:01:51,680 --> 00:01:55,200
commit to your open source or your

00:01:53,119 --> 00:01:58,799
favorite open source project

00:01:55,200 --> 00:02:01,040
and a lot of us try to figure out

00:01:58,799 --> 00:02:02,719
what's the success behind it and i don't

00:02:01,040 --> 00:02:04,399
have a lot of answers but i know i've

00:02:02,719 --> 00:02:07,119
been on this marathon for

00:02:04,399 --> 00:02:09,679
a little while now and there's a big

00:02:07,119 --> 00:02:12,640
checkpoint in my career i remember

00:02:09,679 --> 00:02:14,000
getting my first like real corporate job

00:02:12,640 --> 00:02:14,800
you know the one where they make you

00:02:14,000 --> 00:02:17,920
wear

00:02:14,800 --> 00:02:18,800
uh slacks monday tuesday wednesday

00:02:17,920 --> 00:02:21,599
thursday

00:02:18,800 --> 00:02:22,400
and then on friday everything turned out

00:02:21,599 --> 00:02:25,280
okay

00:02:22,400 --> 00:02:27,120
you'll get to wear jeans and it was a

00:02:25,280 --> 00:02:28,480
financial services job

00:02:27,120 --> 00:02:30,319
and i remember i was a system

00:02:28,480 --> 00:02:33,519
administrator just learning things like

00:02:30,319 --> 00:02:35,599
python and all this automation stuff and

00:02:33,519 --> 00:02:38,480
it's really what i lean into ops big

00:02:35,599 --> 00:02:41,680
time this is when outage's production

00:02:38,480 --> 00:02:43,040
really mattered a ton and i remember one

00:02:41,680 --> 00:02:44,720
of our outages

00:02:43,040 --> 00:02:46,160
we're sitting in one of those war rooms

00:02:44,720 --> 00:02:47,680
and for y'all watching this that have

00:02:46,160 --> 00:02:49,840
never been in a war room

00:02:47,680 --> 00:02:52,239
think about a very small office space

00:02:49,840 --> 00:02:55,040
with the bunch of chairs lined around

00:02:52,239 --> 00:02:56,720
and everyone's on their laptop sometimes

00:02:55,040 --> 00:02:57,519
pretending that they're actually working

00:02:56,720 --> 00:02:58,879
on the problem

00:02:57,519 --> 00:03:01,599
even though they don't know what's going

00:02:58,879 --> 00:03:03,280
on and i remember

00:03:01,599 --> 00:03:05,120
we're taking longer than normal to

00:03:03,280 --> 00:03:06,959
resolve the issue and

00:03:05,120 --> 00:03:08,720
the company i work with they process

00:03:06,959 --> 00:03:09,920
credit cards you know the things you

00:03:08,720 --> 00:03:12,480
keep in your wallet

00:03:09,920 --> 00:03:13,920
and they also process the ebt card so

00:03:12,480 --> 00:03:16,080
for people that are getting

00:03:13,920 --> 00:03:17,519
assistance from the government they have

00:03:16,080 --> 00:03:18,560
these plastic cards and

00:03:17,519 --> 00:03:20,159
the reason why they give them those

00:03:18,560 --> 00:03:21,280
plastic cards instead of this different

00:03:20,159 --> 00:03:23,519
form of money

00:03:21,280 --> 00:03:24,480
is there's a lot of pride in dignity and

00:03:23,519 --> 00:03:26,000
convenience

00:03:24,480 --> 00:03:28,400
being able to swipe and pay for your

00:03:26,000 --> 00:03:32,000
groceries so during this outage

00:03:28,400 --> 00:03:34,400
guess what those cards don't work

00:03:32,000 --> 00:03:35,360
and i remember the cto walking into the

00:03:34,400 --> 00:03:38,000
room

00:03:35,360 --> 00:03:39,760
and i'm not sure if everybody was taking

00:03:38,000 --> 00:03:41,440
everything super serious and

00:03:39,760 --> 00:03:43,519
maybe i wasn't as focused as i should

00:03:41,440 --> 00:03:45,200
have been and i remember him walking

00:03:43,519 --> 00:03:48,319
into the room and he told us really

00:03:45,200 --> 00:03:50,239
impactful story and he said

00:03:48,319 --> 00:03:51,360
while we're trying to figure this issue

00:03:50,239 --> 00:03:54,480
out

00:03:51,360 --> 00:03:56,319
we have a customer that's been going up

00:03:54,480 --> 00:03:58,159
and down the grocery sale

00:03:56,319 --> 00:04:00,080
basket full of groceries maybe this

00:03:58,159 --> 00:04:01,599
person has their kids with them

00:04:00,080 --> 00:04:03,280
and they're in this checkout line and

00:04:01,599 --> 00:04:07,200
they're about to go next

00:04:03,280 --> 00:04:10,640
now it's their turn and all they have

00:04:07,200 --> 00:04:12,080
is this ebt card and they go to swipe it

00:04:10,640 --> 00:04:13,680
to pay for their groceries that have

00:04:12,080 --> 00:04:16,720
already been rung up

00:04:13,680 --> 00:04:18,239
neatly placing the bags and the ebt card

00:04:16,720 --> 00:04:20,239
doesn't work

00:04:18,239 --> 00:04:21,359
and here we are sitting around this room

00:04:20,239 --> 00:04:23,840
believing

00:04:21,359 --> 00:04:26,000
that we have all the time in the world

00:04:23,840 --> 00:04:28,240
to resolve the issue

00:04:26,000 --> 00:04:30,080
it's just another outage we'll restart

00:04:28,240 --> 00:04:33,120
some servers and eventually

00:04:30,080 --> 00:04:36,320
the system will come back up

00:04:33,120 --> 00:04:38,000
and he explained to us that unlike a lot

00:04:36,320 --> 00:04:39,919
of our other customers

00:04:38,000 --> 00:04:41,199
this person doesn't have another credit

00:04:39,919 --> 00:04:44,160
card to go to

00:04:41,199 --> 00:04:46,000
or another form of payment if that car

00:04:44,160 --> 00:04:48,080
continues to decline

00:04:46,000 --> 00:04:49,600
then they're going to be stuck or the

00:04:48,080 --> 00:04:51,440
most embarrassing thing having to put

00:04:49,600 --> 00:04:53,440
all of those groceries back

00:04:51,440 --> 00:04:56,240
and then leave home or leave the grocery

00:04:53,440 --> 00:04:57,759
store empty-handed

00:04:56,240 --> 00:04:59,840
at that particular checkpoint in my

00:04:57,759 --> 00:05:01,600
career i kind of understood that

00:04:59,840 --> 00:05:03,840
there's a lot more than just writing

00:05:01,600 --> 00:05:05,840
scripts and throwing them at servers and

00:05:03,840 --> 00:05:09,440
hoping they work

00:05:05,840 --> 00:05:11,199
we need better tools we have to take the

00:05:09,440 --> 00:05:13,520
situation a little bit more serious

00:05:11,199 --> 00:05:16,000
start to understand things like sla and

00:05:13,520 --> 00:05:17,840
building resilient systems

00:05:16,000 --> 00:05:19,039
and also figuring out what the hell is

00:05:17,840 --> 00:05:20,960
going on

00:05:19,039 --> 00:05:23,360
why don't so many of us fly blind in

00:05:20,960 --> 00:05:24,000
production and in some cases laugh and

00:05:23,360 --> 00:05:27,360
joke about

00:05:24,000 --> 00:05:29,039
it the systems that i grew up on

00:05:27,360 --> 00:05:30,400
they were just like these black boxes

00:05:29,039 --> 00:05:32,400
that we owned

00:05:30,400 --> 00:05:34,000
even though we could log into them most

00:05:32,400 --> 00:05:35,120
of us didn't even know what was running

00:05:34,000 --> 00:05:37,440
or how it ran

00:05:35,120 --> 00:05:39,360
we just knew if you restarted enough it

00:05:37,440 --> 00:05:41,440
would eventually work

00:05:39,360 --> 00:05:42,800
we always think we have all the time in

00:05:41,440 --> 00:05:45,199
the world

00:05:42,800 --> 00:05:47,120
and i remember a lot of people telling

00:05:45,199 --> 00:05:48,960
me you know success is measured in time

00:05:47,120 --> 00:05:52,000
i remember getting award like

00:05:48,960 --> 00:05:53,600
top 40 under 40. and i always thought to

00:05:52,000 --> 00:05:54,240
myself it's like why is there a time

00:05:53,600 --> 00:05:56,000
limit

00:05:54,240 --> 00:05:58,479
on this kind of thing right why is there

00:05:56,000 --> 00:06:00,080
not um

00:05:58,479 --> 00:06:01,520
more opportunities for success to have

00:06:00,080 --> 00:06:04,240
nothing to do with your time

00:06:01,520 --> 00:06:05,280
the truth is there is no time limit so

00:06:04,240 --> 00:06:06,880
i'm going to do right now is i'm going

00:06:05,280 --> 00:06:09,440
to share my screen

00:06:06,880 --> 00:06:11,360
and this is a very interesting number if

00:06:09,440 --> 00:06:12,880
you're using github you may be

00:06:11,360 --> 00:06:15,440
fascinated with the number of github

00:06:12,880 --> 00:06:17,759
stars uh apparently if you get over like

00:06:15,440 --> 00:06:19,520
100 github stars

00:06:17,759 --> 00:06:21,120
you can probably raise an a round in

00:06:19,520 --> 00:06:23,680
silicon valley so

00:06:21,120 --> 00:06:25,280
those numbers do have meaning but this

00:06:23,680 --> 00:06:29,280
number on the screen

00:06:25,280 --> 00:06:30,800
one hour 59 minutes and 40 seconds

00:06:29,280 --> 00:06:34,160
if you pay attention to the sporting

00:06:30,800 --> 00:06:36,800
world this is the current world record

00:06:34,160 --> 00:06:38,639
for the fastest human being to run a

00:06:36,800 --> 00:06:40,720
marathon

00:06:38,639 --> 00:06:41,680
most people can't run a single mile in

00:06:40,720 --> 00:06:44,720
an hour

00:06:41,680 --> 00:06:44,720
and 59 minutes

00:06:45,039 --> 00:06:50,880
but eliot kipchoge he did it

00:06:48,800 --> 00:06:52,960
and we tend to put the person who

00:06:50,880 --> 00:06:56,720
crosses the finish line first

00:06:52,960 --> 00:06:59,520
in the foreground look at this picture

00:06:56,720 --> 00:07:01,120
notice behind him all the other runners

00:06:59,520 --> 00:07:02,880
are cheering

00:07:01,120 --> 00:07:05,520
that seems a bit odd it's supposed to be

00:07:02,880 --> 00:07:07,759
a marathon that's like a race

00:07:05,520 --> 00:07:10,319
winner take all there's only one first

00:07:07,759 --> 00:07:14,800
place finish

00:07:10,319 --> 00:07:14,800
but the people behind him if you watch

00:07:14,840 --> 00:07:20,960
this if you watch what happened

00:07:18,960 --> 00:07:23,440
the people behind them are also

00:07:20,960 --> 00:07:25,280
world-class marathon runners

00:07:23,440 --> 00:07:26,720
in this picture you see eight people in

00:07:25,280 --> 00:07:29,199
a peloton formation

00:07:26,720 --> 00:07:30,960
you can see birds fly like this as well

00:07:29,199 --> 00:07:31,599
the whole goal is to protect the runner

00:07:30,960 --> 00:07:34,319
from

00:07:31,599 --> 00:07:35,599
any wind resistance or and help them

00:07:34,319 --> 00:07:38,400
keep pace

00:07:35,599 --> 00:07:39,520
there's about 30 other world class

00:07:38,400 --> 00:07:43,120
runners

00:07:39,520 --> 00:07:46,000
in this formation all of them are taking

00:07:43,120 --> 00:07:48,479
turns so maybe you run a few miles

00:07:46,000 --> 00:07:50,560
and maybe the top two guys switch out

00:07:48,479 --> 00:07:52,720
the other two join in

00:07:50,560 --> 00:07:54,479
now any of them any of the 30 who've

00:07:52,720 --> 00:07:56,000
been training for months to help them

00:07:54,479 --> 00:07:57,759
break this

00:07:56,000 --> 00:07:59,599
world record of a person running a

00:07:57,759 --> 00:08:00,960
marathon in less than two hours

00:07:59,599 --> 00:08:04,560
something we didn't think was humanly

00:08:00,960 --> 00:08:07,280
possible they all decided that

00:08:04,560 --> 00:08:08,879
it was his goal and they would be the

00:08:07,280 --> 00:08:10,840
supporting cast

00:08:08,879 --> 00:08:12,319
and they stayed in this formation to

00:08:10,840 --> 00:08:16,720
perfection switching

00:08:12,319 --> 00:08:20,319
in and out without slowing him down

00:08:16,720 --> 00:08:22,240
now if you ask vendors how

00:08:20,319 --> 00:08:24,560
does this work maybe we don't talk about

00:08:22,240 --> 00:08:26,160
the human beings and their upbringing

00:08:24,560 --> 00:08:27,759
maybe we don't talk about all the

00:08:26,160 --> 00:08:29,360
practice

00:08:27,759 --> 00:08:31,039
depending on how you ask maybe if you

00:08:29,360 --> 00:08:34,240
ask nike they would say

00:08:31,039 --> 00:08:37,680
it's got to be the shoes honestly

00:08:34,240 --> 00:08:40,159
i have never met anyone walking around

00:08:37,680 --> 00:08:41,680
saying that they wanted some elliot kipp

00:08:40,159 --> 00:08:44,320
chokies

00:08:41,680 --> 00:08:45,360
they look great for running marathons

00:08:44,320 --> 00:08:48,800
but i don't know if you're going to be

00:08:45,360 --> 00:08:51,440
rocking these at any sporting event

00:08:48,800 --> 00:08:53,600
so the truth is it's the humans that

00:08:51,440 --> 00:08:55,519
should be front and center

00:08:53,600 --> 00:08:56,800
today we'll be talking about kubernetes

00:08:55,519 --> 00:08:59,200
and get ops and

00:08:56,800 --> 00:09:00,480
the thing that kind of depresses me a

00:08:59,200 --> 00:09:03,600
little is that we tend to put

00:09:00,480 --> 00:09:05,120
all these tools before the humans that

00:09:03,600 --> 00:09:07,279
use them

00:09:05,120 --> 00:09:09,200
when you think about git it's one of the

00:09:07,279 --> 00:09:10,480
world's best collaboration tools for

00:09:09,200 --> 00:09:12,640
writing software

00:09:10,480 --> 00:09:14,399
and github is where we all meet and

00:09:12,640 --> 00:09:15,839
collaborate

00:09:14,399 --> 00:09:17,600
but it's the people that make all of

00:09:15,839 --> 00:09:19,360
this work and

00:09:17,600 --> 00:09:21,120
when people think about kubernetes they

00:09:19,360 --> 00:09:24,320
want to hyper index and

00:09:21,120 --> 00:09:26,080
hyper over my optimize on containers

00:09:24,320 --> 00:09:28,399
versus this other thing

00:09:26,080 --> 00:09:30,160
and you could do that you can click on

00:09:28,399 --> 00:09:32,160
all the hacker news links and

00:09:30,160 --> 00:09:33,920
have about 10 000 tabs in your web

00:09:32,160 --> 00:09:35,760
browser but if you focus on the

00:09:33,920 --> 00:09:37,120
technology i don't think you'll ever get

00:09:35,760 --> 00:09:38,480
it

00:09:37,120 --> 00:09:40,399
what we've been doing with all of these

00:09:38,480 --> 00:09:43,040
platforms is serializing

00:09:40,399 --> 00:09:45,120
the way we work there's been a lot of

00:09:43,040 --> 00:09:46,640
ideas over the last 20 years and

00:09:45,120 --> 00:09:49,760
a lot of them have been serializing

00:09:46,640 --> 00:09:51,120
kubernetes that's the gist of it

00:09:49,760 --> 00:09:52,880
i know people want it to be more

00:09:51,120 --> 00:09:54,640
complicated than that there should be a

00:09:52,880 --> 00:09:57,519
series of best practices

00:09:54,640 --> 00:09:59,680
hell i even wrote a book about it but

00:09:57,519 --> 00:10:02,000
the truth is there's just practice

00:09:59,680 --> 00:10:05,680
and as we learn we'll contribute to

00:10:02,000 --> 00:10:08,720
those things

00:10:05,680 --> 00:10:10,480
if you have a clear goal if you know

00:10:08,720 --> 00:10:12,640
what you're trying to do

00:10:10,480 --> 00:10:14,240
maybe you know where the finish line is

00:10:12,640 --> 00:10:16,720
you can actually bring in all of these

00:10:14,240 --> 00:10:19,360
people and all of these tools

00:10:16,720 --> 00:10:21,440
and they should be aiding you to go

00:10:19,360 --> 00:10:24,480
faster than you can by yourself

00:10:21,440 --> 00:10:25,680
now elliot kipchoge he is a world-class

00:10:24,480 --> 00:10:28,560
marathon runner

00:10:25,680 --> 00:10:29,600
he's never ran the marathon in less than

00:10:28,560 --> 00:10:31,680
two hours

00:10:29,600 --> 00:10:33,279
he's gotten close but he's never been

00:10:31,680 --> 00:10:35,440
able to do it on his own

00:10:33,279 --> 00:10:37,040
and sometimes because he's the only one

00:10:35,440 --> 00:10:38,240
in front and there's no one there to

00:10:37,040 --> 00:10:42,399
push him

00:10:38,240 --> 00:10:44,320
but with this setup it changed the game

00:10:42,399 --> 00:10:46,160
and if you do it right and you keep

00:10:44,320 --> 00:10:47,760
these kind of north stars clear

00:10:46,160 --> 00:10:50,000
then i think it makes it much easier to

00:10:47,760 --> 00:10:52,320
understand how all the technology comes

00:10:50,000 --> 00:10:54,000
together and the people around it

00:10:52,320 --> 00:10:55,839
you can wrap that around you and then

00:10:54,000 --> 00:10:57,200
use it to push you forward

00:10:55,839 --> 00:11:00,240
that's the way you got to think about

00:10:57,200 --> 00:11:02,079
this if you want to understand get ops

00:11:00,240 --> 00:11:04,079
you got to understand the why why are

00:11:02,079 --> 00:11:05,760
you using it what's important about it

00:11:04,079 --> 00:11:07,360
what's the peloton formation you're

00:11:05,760 --> 00:11:10,560
trying to build around you

00:11:07,360 --> 00:11:13,360
and is it designed to help you go faster

00:11:10,560 --> 00:11:15,920
are you just doing stuff because people

00:11:13,360 --> 00:11:18,800
said it on twitter

00:11:15,920 --> 00:11:20,480
so now we're going to jump into kind of

00:11:18,800 --> 00:11:23,680
this live demo

00:11:20,480 --> 00:11:25,200
about how all of this works so

00:11:23,680 --> 00:11:27,120
i'm going to switch over to my screen

00:11:25,200 --> 00:11:28,640
now but i want you to keep that thing in

00:11:27,120 --> 00:11:30,160
mind

00:11:28,640 --> 00:11:32,079
we should be using these tools to

00:11:30,160 --> 00:11:34,079
augment what we're doing

00:11:32,079 --> 00:11:36,240
not become the whole thing that we're

00:11:34,079 --> 00:11:39,360
doing

00:11:36,240 --> 00:11:42,560
so one thing we have to think about is

00:11:39,360 --> 00:11:44,320
what is our actual goal

00:11:42,560 --> 00:11:46,320
most people write software to put it in

00:11:44,320 --> 00:11:47,680
the hands of their customers

00:11:46,320 --> 00:11:49,760
so in this case we're going to have a

00:11:47,680 --> 00:11:51,279
very simple app because what i want you

00:11:49,760 --> 00:11:53,120
to do is focus on

00:11:51,279 --> 00:11:54,800
the actual workflow that's what this

00:11:53,120 --> 00:11:56,720
whole get off things about

00:11:54,800 --> 00:11:58,079
what type of application can you deploy

00:11:56,720 --> 00:11:59,920
i don't know what kind of applications

00:11:58,079 --> 00:12:02,160
can you write

00:11:59,920 --> 00:12:02,959
so you see i'm rocking that new dark

00:12:02,160 --> 00:12:06,000
thing

00:12:02,959 --> 00:12:07,440
maybe this is going to be the new trend

00:12:06,000 --> 00:12:09,519
and i just have a simple app it's called

00:12:07,440 --> 00:12:11,200
hello universe and as a developer if you

00:12:09,519 --> 00:12:13,360
put your developer hat on

00:12:11,200 --> 00:12:15,120
you have some very specific goals your

00:12:13,360 --> 00:12:18,240
goal is to write code that

00:12:15,120 --> 00:12:20,079
hopefully works and then deploy it to

00:12:18,240 --> 00:12:21,760
the proper environments and then you

00:12:20,079 --> 00:12:24,959
should be able to hit an endpoint

00:12:21,760 --> 00:12:26,000
and get some results that's the goal

00:12:24,959 --> 00:12:28,320
i'm going to show you what that goal

00:12:26,000 --> 00:12:30,480
looks like when in practice so basically

00:12:28,320 --> 00:12:33,920
i'm here on my command line

00:12:30,480 --> 00:12:39,839
and if i run curl https

00:12:33,920 --> 00:12:39,839
and it's called hello universe

00:12:40,800 --> 00:12:44,560
and then i just have it running on my

00:12:42,279 --> 00:12:46,800
hightowerlabs.com domain

00:12:44,560 --> 00:12:49,519
and there it is it works and currently i

00:12:46,800 --> 00:12:52,959
have version one running

00:12:49,519 --> 00:12:56,079
so now what is all this get get ops hype

00:12:52,959 --> 00:12:58,079
about why is it going to change the way

00:12:56,079 --> 00:13:01,279
you think about things and work

00:12:58,079 --> 00:13:02,560
the honest truth it shouldn't

00:13:01,279 --> 00:13:05,440
if you think about the way you write

00:13:02,560 --> 00:13:06,959
code today if you're a developer there's

00:13:05,440 --> 00:13:07,519
a big chance if you're walking watching

00:13:06,959 --> 00:13:10,320
this talk

00:13:07,519 --> 00:13:11,440
that you're already using git think

00:13:10,320 --> 00:13:14,240
about it

00:13:11,440 --> 00:13:15,360
when you write code you tend to make a

00:13:14,240 --> 00:13:18,000
few commits

00:13:15,360 --> 00:13:20,079
and then you push it up you can run that

00:13:18,000 --> 00:13:21,760
binary locally if you really wanted to

00:13:20,079 --> 00:13:23,600
i can i can do something like hello

00:13:21,760 --> 00:13:24,560
universe i have this binary that's on my

00:13:23,600 --> 00:13:27,600
machine

00:13:24,560 --> 00:13:28,880
i can run it locally and if i were to go

00:13:27,600 --> 00:13:31,839
to another tab and call

00:13:28,880 --> 00:13:33,600
curl on localhost the thing you expect

00:13:31,839 --> 00:13:34,959
to happen should happen i could hit this

00:13:33,600 --> 00:13:36,639
on port 8080

00:13:34,959 --> 00:13:38,000
and there we go that's pretty

00:13:36,639 --> 00:13:39,440
straightforward

00:13:38,000 --> 00:13:41,680
and then you push your code to some

00:13:39,440 --> 00:13:42,800
repository but here's the thing

00:13:41,680 --> 00:13:44,959
if you really want to know how this

00:13:42,800 --> 00:13:46,079
works i think one of the best examples

00:13:44,959 --> 00:13:48,160
that i've seen online

00:13:46,079 --> 00:13:49,839
is probably to the people who coined the

00:13:48,160 --> 00:13:53,600
term weave works

00:13:49,839 --> 00:13:54,880
they call get ops and the whole goal

00:13:53,600 --> 00:13:57,199
behind git ops is that

00:13:54,880 --> 00:13:59,440
imagine if you were to able to use the

00:13:57,199 --> 00:14:01,360
same development workflow

00:13:59,440 --> 00:14:03,040
for managing infrastructure but here's a

00:14:01,360 --> 00:14:04,000
twist we've been doing this for a super

00:14:03,040 --> 00:14:05,600
long time

00:14:04,000 --> 00:14:07,839
a lot of people will look back to like

00:14:05,600 --> 00:14:09,760
puppet and chef and ansible

00:14:07,839 --> 00:14:11,519
and we wrote a lot of code back thing

00:14:09,760 --> 00:14:12,480
and yeah a lot of us checked into

00:14:11,519 --> 00:14:15,199
version control

00:14:12,480 --> 00:14:16,480
so what's new about this this looks like

00:14:15,199 --> 00:14:18,000
the same thing we've been doing and

00:14:16,480 --> 00:14:18,800
someone just came up with a better name

00:14:18,000 --> 00:14:21,199
for it

00:14:18,800 --> 00:14:22,880
that's probably true and they raised a

00:14:21,199 --> 00:14:25,440
lot of cash behind it

00:14:22,880 --> 00:14:26,000
but the ideas are solid why are they

00:14:25,440 --> 00:14:29,040
solid

00:14:26,000 --> 00:14:31,199
well there's a twist here given

00:14:29,040 --> 00:14:33,279
kubernetes and the way it works

00:14:31,199 --> 00:14:34,560
we now can start to treat infrastructure

00:14:33,279 --> 00:14:36,000
as data

00:14:34,560 --> 00:14:37,600
and a lot of people say nope i thought

00:14:36,000 --> 00:14:39,839
it was infrastructure as code

00:14:37,600 --> 00:14:41,760
yeah you can write a lot of code but

00:14:39,839 --> 00:14:43,440
code has some other issues to it

00:14:41,760 --> 00:14:44,959
one you need something that understands

00:14:43,440 --> 00:14:46,800
that programming language in order to

00:14:44,959 --> 00:14:49,360
write that code parse that code

00:14:46,800 --> 00:14:51,120
validate that code and those tools exist

00:14:49,360 --> 00:14:53,360
don't get me wrong

00:14:51,120 --> 00:14:54,800
but the idea that if we can write code

00:14:53,360 --> 00:14:57,360
or config

00:14:54,800 --> 00:14:59,680
as data maybe we can simplify this i

00:14:57,360 --> 00:15:01,839
know what you're thinking oh more yaml

00:14:59,680 --> 00:15:03,040
look yaml ain't that bad stop

00:15:01,839 --> 00:15:06,240
complaining

00:15:03,040 --> 00:15:08,000
it's readable you can modify it and we

00:15:06,240 --> 00:15:10,240
can run things like static analysis

00:15:08,000 --> 00:15:12,160
without having a compiler or something

00:15:10,240 --> 00:15:15,199
that can parse that language

00:15:12,160 --> 00:15:15,519
an overview this is what it looks like i

00:15:15,199 --> 00:15:17,760
know

00:15:15,519 --> 00:15:20,639
people get this super complicated i know

00:15:17,760 --> 00:15:23,839
a lot of people will talk about cicd

00:15:20,639 --> 00:15:25,519
and pipelines and deploying two trillion

00:15:23,839 --> 00:15:27,279
times a day

00:15:25,519 --> 00:15:29,120
even though they don't have a reason to

00:15:27,279 --> 00:15:30,560
deploy 2 trillion times a day

00:15:29,120 --> 00:15:32,720
it's something we brag about at

00:15:30,560 --> 00:15:36,160
conferences don't worry

00:15:32,720 --> 00:15:37,839
it isn't real the truth is it's all

00:15:36,160 --> 00:15:39,920
about the workflow

00:15:37,839 --> 00:15:41,839
how you encapsulate that workflow well

00:15:39,920 --> 00:15:44,959
that's going to be up to you

00:15:41,839 --> 00:15:46,079
look at this diagram as a developer on

00:15:44,959 --> 00:15:48,480
the left side

00:15:46,079 --> 00:15:49,839
you write code it goes into a version

00:15:48,480 --> 00:15:51,519
control system

00:15:49,839 --> 00:15:52,800
and then ideally you're going to produce

00:15:51,519 --> 00:15:55,600
an artifact so here's where this

00:15:52,800 --> 00:15:58,959
kubernetes connection comes into play

00:15:55,600 --> 00:16:00,480
kubernetes requires a container as the

00:15:58,959 --> 00:16:02,480
price of admission

00:16:00,480 --> 00:16:04,000
oh i know what you're saying oh my god i

00:16:02,480 --> 00:16:05,600
got to build a container this is the

00:16:04,000 --> 00:16:07,519
hardest thing in the world

00:16:05,600 --> 00:16:09,199
oh it's going to take me 7 000 years to

00:16:07,519 --> 00:16:10,959
learn how to build a container

00:16:09,199 --> 00:16:12,800
and i asked people like wow have you

00:16:10,959 --> 00:16:15,040
even tried

00:16:12,800 --> 00:16:15,920
like seriously have you tried to build a

00:16:15,040 --> 00:16:18,240
container

00:16:15,920 --> 00:16:19,600
before you start freaking out think

00:16:18,240 --> 00:16:22,639
about what's required

00:16:19,600 --> 00:16:25,120
right if you know how to

00:16:22,639 --> 00:16:26,560
build your app locally right like these

00:16:25,120 --> 00:16:28,320
are the same kind of commands i would

00:16:26,560 --> 00:16:30,320
put in the build script

00:16:28,320 --> 00:16:31,600
then in my case i keep things super

00:16:30,320 --> 00:16:35,120
simple i

00:16:31,600 --> 00:16:37,040
build my app the same way i normally do

00:16:35,120 --> 00:16:39,120
and then based on the results here this

00:16:37,040 --> 00:16:42,480
hello universe binary

00:16:39,120 --> 00:16:45,199
i simply copy it from my build step

00:16:42,480 --> 00:16:46,959
and then package it we're really talking

00:16:45,199 --> 00:16:48,240
about glorified tar balls but they're

00:16:46,959 --> 00:16:49,759
really powerful

00:16:48,240 --> 00:16:51,920
but they are very similar to using

00:16:49,759 --> 00:16:54,240
things like a ruby gems or

00:16:51,920 --> 00:16:55,120
a war file if you come from the java

00:16:54,240 --> 00:16:57,199
world

00:16:55,120 --> 00:16:58,720
you got to package software in something

00:16:57,199 --> 00:16:59,759
why not pick something that's super

00:16:58,720 --> 00:17:01,279
universal

00:16:59,759 --> 00:17:03,199
that's the selling point if you don't

00:17:01,279 --> 00:17:05,280
like docker files there are other tools

00:17:03,199 --> 00:17:08,559
that can build container images

00:17:05,280 --> 00:17:10,160
get over it once you do then the world

00:17:08,559 --> 00:17:11,600
kind of opens up to this other thing

00:17:10,160 --> 00:17:13,439
that we're talking about

00:17:11,600 --> 00:17:14,640
in order for this get off things to work

00:17:13,439 --> 00:17:16,160
the way we're talking about it with

00:17:14,640 --> 00:17:17,439
declarative infrastructure

00:17:16,160 --> 00:17:19,280
we don't want to be dealing with the

00:17:17,439 --> 00:17:22,799
differences between node.js

00:17:19,280 --> 00:17:25,679
python and go we want to have a normal

00:17:22,799 --> 00:17:26,400
consistent object or artifact to deal

00:17:25,679 --> 00:17:27,760
with

00:17:26,400 --> 00:17:30,480
let's go back to the diagram really

00:17:27,760 --> 00:17:31,520
quickly notice this container registry

00:17:30,480 --> 00:17:33,600
component

00:17:31,520 --> 00:17:36,320
that's the key to normalizing your

00:17:33,600 --> 00:17:38,160
workflow across all your applications

00:17:36,320 --> 00:17:39,520
so what's the contract between you and

00:17:38,160 --> 00:17:41,760
the developer well

00:17:39,520 --> 00:17:43,120
as the developer your job is to write

00:17:41,760 --> 00:17:45,360
code that works

00:17:43,120 --> 00:17:46,160
ideally it's secure as well and then if

00:17:45,360 --> 00:17:48,240
you do that

00:17:46,160 --> 00:17:49,360
we can automate the process of building

00:17:48,240 --> 00:17:53,039
those docker files

00:17:49,360 --> 00:17:55,840
so it's on you to put a description of

00:17:53,039 --> 00:17:57,360
how to build your app right and then

00:17:55,840 --> 00:17:58,960
when it's done

00:17:57,360 --> 00:18:01,200
you can actually create that entry point

00:17:58,960 --> 00:18:03,120
so we know how to run it

00:18:01,200 --> 00:18:05,120
so how do we automate this well github

00:18:03,120 --> 00:18:07,120
has a really nice feature

00:18:05,120 --> 00:18:08,720
so in github you can actually do

00:18:07,120 --> 00:18:11,520
something pretty neat

00:18:08,720 --> 00:18:12,240
you can set up some actions basically so

00:18:11,520 --> 00:18:15,280
when i push

00:18:12,240 --> 00:18:16,640
this repository or tag a branch in this

00:18:15,280 --> 00:18:19,039
repository

00:18:16,640 --> 00:18:20,640
it'll kick off a set of actions and they

00:18:19,039 --> 00:18:21,919
have all of these nice little brew

00:18:20,640 --> 00:18:24,320
plants that say hey

00:18:21,919 --> 00:18:26,160
whenever code is checked in here push to

00:18:24,320 --> 00:18:28,559
some repository

00:18:26,160 --> 00:18:30,799
before my talk i was bum i was producing

00:18:28,559 --> 00:18:33,919
a few versions i have a v1 tag

00:18:30,799 --> 00:18:35,520
and a v2 tag and with these releases

00:18:33,919 --> 00:18:37,039
just by doing the normal git

00:18:35,520 --> 00:18:38,720
operations that i tend to do when i'm

00:18:37,039 --> 00:18:41,039
writing code well

00:18:38,720 --> 00:18:42,240
i can rely on github actions to take

00:18:41,039 --> 00:18:45,360
over

00:18:42,240 --> 00:18:48,720
that commit and then it will go through

00:18:45,360 --> 00:18:51,679
and actually build my image for me and

00:18:48,720 --> 00:18:53,919
push it to a repository does all this in

00:18:51,679 --> 00:18:56,320
the background every time i commit or

00:18:53,919 --> 00:18:57,360
or tag something and then once that's

00:18:56,320 --> 00:18:59,280
ready

00:18:57,360 --> 00:19:01,520
the important part here is you want to

00:18:59,280 --> 00:19:02,720
push it to a central repository

00:19:01,520 --> 00:19:04,559
if you haven't been paying attention

00:19:02,720 --> 00:19:06,960
github also has a new

00:19:04,559 --> 00:19:09,440
container repository so you can manage

00:19:06,960 --> 00:19:11,919
packages for all your repositories

00:19:09,440 --> 00:19:12,960
look here this is a hello universe daca

00:19:11,919 --> 00:19:14,160
repository

00:19:12,960 --> 00:19:16,320
now if you're new to this and you're not

00:19:14,160 --> 00:19:18,000
quite sure how that all works just know

00:19:16,320 --> 00:19:20,799
that each of those tags

00:19:18,000 --> 00:19:22,320
produces one of these container images

00:19:20,799 --> 00:19:23,360
that i can either pull locally on my

00:19:22,320 --> 00:19:25,360
laptop

00:19:23,360 --> 00:19:26,720
something like kubernetes or some

00:19:25,360 --> 00:19:28,799
serverless platform that supports

00:19:26,720 --> 00:19:30,640
containers

00:19:28,799 --> 00:19:33,039
now that we have repository let's pop

00:19:30,640 --> 00:19:34,480
back over to that diagram

00:19:33,039 --> 00:19:36,559
again i don't think this has to be as

00:19:34,480 --> 00:19:38,080
complex as a lot of people make it at

00:19:36,559 --> 00:19:39,919
least not the fundamentals

00:19:38,080 --> 00:19:41,679
so now we have this part of the loop

00:19:39,919 --> 00:19:44,400
established

00:19:41,679 --> 00:19:45,440
checking in our code and making

00:19:44,400 --> 00:19:48,720
container images

00:19:45,440 --> 00:19:51,039
got it so at this point we're now ready

00:19:48,720 --> 00:19:52,799
to start releasing our application to

00:19:51,039 --> 00:19:55,280
something like kubernetes

00:19:52,799 --> 00:19:56,160
now how do you go about that well you

00:19:55,280 --> 00:19:59,760
can do

00:19:56,160 --> 00:20:01,679
simple ops and what ops looks like is

00:19:59,760 --> 00:20:05,120
in this world of the declarative world

00:20:01,679 --> 00:20:08,480
is ops is about writing yaml files yay

00:20:05,120 --> 00:20:10,320
one time for the yaml files you'll learn

00:20:08,480 --> 00:20:13,039
to love yam while i promise you

00:20:10,320 --> 00:20:14,559
and if you have like vs code and any of

00:20:13,039 --> 00:20:16,480
those robust editors

00:20:14,559 --> 00:20:18,880
it will help you write a lot more yaml

00:20:16,480 --> 00:20:20,720
so don't worry yamo is your friend

00:20:18,880 --> 00:20:22,240
what does that yaml stuff look like i'm

00:20:20,720 --> 00:20:24,640
just going to show you one

00:20:22,240 --> 00:20:26,640
here's a deployment file really the goal

00:20:24,640 --> 00:20:29,200
here is you to articulate

00:20:26,640 --> 00:20:29,840
what you want the system to do i want to

00:20:29,200 --> 00:20:33,280
deploy

00:20:29,840 --> 00:20:35,760
this version of my application

00:20:33,280 --> 00:20:36,960
i want this much memory and cpu you get

00:20:35,760 --> 00:20:39,280
the idea

00:20:36,960 --> 00:20:41,039
but ideally you can have tools that help

00:20:39,280 --> 00:20:43,360
you generate these configs

00:20:41,039 --> 00:20:45,520
they're very explicit but the whole

00:20:43,360 --> 00:20:47,679
point here is that they're declared

00:20:45,520 --> 00:20:50,000
we're not writing any scripts we're not

00:20:47,679 --> 00:20:50,720
using any custom languages or any custom

00:20:50,000 --> 00:20:53,200
tools

00:20:50,720 --> 00:20:54,559
we're just crafting some data the nice

00:20:53,200 --> 00:20:55,600
thing about this data is that we can

00:20:54,559 --> 00:20:58,159
push it to

00:20:55,600 --> 00:20:59,039
any kubernetes cluster that we want the

00:20:58,159 --> 00:21:01,520
goal is

00:20:59,039 --> 00:21:03,039
between the deployment object and the

00:21:01,520 --> 00:21:04,320
service that allows me to attach this to

00:21:03,039 --> 00:21:07,280
a load balancer

00:21:04,320 --> 00:21:09,760
and a horizontal scaling config i have

00:21:07,280 --> 00:21:11,919
the three components that i need

00:21:09,760 --> 00:21:13,039
for dealing with my infrastructure so

00:21:11,919 --> 00:21:14,240
how does that work

00:21:13,039 --> 00:21:17,039
well there's a bunch of things you can

00:21:14,240 --> 00:21:19,600
do here let's go back to the diagram

00:21:17,039 --> 00:21:20,320
in this diagram notice one thing that i

00:21:19,600 --> 00:21:24,000
like

00:21:20,320 --> 00:21:27,200
this idea of splitting out the config

00:21:24,000 --> 00:21:28,960
repo from the source code repo

00:21:27,200 --> 00:21:30,880
and a lot of people like oh no you want

00:21:28,960 --> 00:21:33,039
to keep everything together

00:21:30,880 --> 00:21:34,880
i don't think you want to do that when

00:21:33,039 --> 00:21:36,480
you get to day two and day three there's

00:21:34,880 --> 00:21:37,840
going to be situations where all you

00:21:36,480 --> 00:21:41,280
want to do is

00:21:37,840 --> 00:21:43,520
modify the config and then push it

00:21:41,280 --> 00:21:45,440
in those cases you may not want to have

00:21:43,520 --> 00:21:46,799
a very complex build process

00:21:45,440 --> 00:21:48,880
that has to know the difference between

00:21:46,799 --> 00:21:51,039
a config change or

00:21:48,880 --> 00:21:52,159
the app itself and then it gets really

00:21:51,039 --> 00:21:54,080
tricky when you start to deal with

00:21:52,159 --> 00:21:56,320
multiple environments

00:21:54,080 --> 00:21:57,120
that one set of configs may not work

00:21:56,320 --> 00:21:59,600
well across

00:21:57,120 --> 00:22:00,480
multiple environments especially over

00:21:59,600 --> 00:22:02,559
time

00:22:00,480 --> 00:22:04,720
so if i were you i would consider

00:22:02,559 --> 00:22:07,039
following this pattern this blueprint

00:22:04,720 --> 00:22:08,880
keep your config repo separate so what

00:22:07,039 --> 00:22:10,559
does that look like in the github world

00:22:08,880 --> 00:22:12,720
well you probably know what this looks

00:22:10,559 --> 00:22:13,360
like if i click over here to my github

00:22:12,720 --> 00:22:15,200
tab

00:22:13,360 --> 00:22:17,600
i just have another repository where i'm

00:22:15,200 --> 00:22:20,559
storing all of my configs

00:22:17,600 --> 00:22:22,799
and here i can have my same git flow i

00:22:20,559 --> 00:22:25,120
can do pull requests i can review them

00:22:22,799 --> 00:22:27,280
and all of my configs are just sitting

00:22:25,120 --> 00:22:29,360
here underneath

00:22:27,280 --> 00:22:30,880
this directory called kubernetes i can

00:22:29,360 --> 00:22:32,480
have other deployment targets maybe

00:22:30,880 --> 00:22:33,360
you're using a serverless platform like

00:22:32,480 --> 00:22:34,720
cloudrun

00:22:33,360 --> 00:22:36,720
in that case you may have another

00:22:34,720 --> 00:22:37,600
directory of declarative configs that

00:22:36,720 --> 00:22:40,080
you put there

00:22:37,600 --> 00:22:42,480
but the goal is these are just all data

00:22:40,080 --> 00:22:44,720
artifacts that can be consumed

00:22:42,480 --> 00:22:46,240
by some other system that can actually

00:22:44,720 --> 00:22:49,840
take your declarative thing

00:22:46,240 --> 00:22:51,200
and make it work now let's pop back over

00:22:49,840 --> 00:22:52,640
to that diagram and one thing i want you

00:22:51,200 --> 00:22:54,320
to pay attention to is you have two

00:22:52,640 --> 00:22:57,039
choices here

00:22:54,320 --> 00:22:58,240
you can have something push these

00:22:57,039 --> 00:23:00,240
configs

00:22:58,240 --> 00:23:02,799
into your clusters but i want you to

00:23:00,240 --> 00:23:04,880
think about that for a second

00:23:02,799 --> 00:23:06,400
push versus pull is a debate that goes

00:23:04,880 --> 00:23:08,960
back long time

00:23:06,400 --> 00:23:11,280
not sure it's settled but the idea is

00:23:08,960 --> 00:23:13,200
that when those configs are ready

00:23:11,280 --> 00:23:16,000
that's when you want them to go to your

00:23:13,200 --> 00:23:18,240
target if you have lots of clusters one

00:23:16,000 --> 00:23:19,600
model may work better than the other

00:23:18,240 --> 00:23:21,840
one thing i like to do is give myself

00:23:19,600 --> 00:23:23,679
the flexibility to have different

00:23:21,840 --> 00:23:25,919
kubernetes clusters

00:23:23,679 --> 00:23:27,280
have different versions of the config

00:23:25,919 --> 00:23:28,320
even at the same time

00:23:27,280 --> 00:23:30,000
let's see what that looks like in

00:23:28,320 --> 00:23:32,240
practice really quickly so i have a

00:23:30,000 --> 00:23:35,200
couple of live clusters running

00:23:32,240 --> 00:23:37,120
in my infrastructure i basically have

00:23:35,200 --> 00:23:40,080
something in us west one

00:23:37,120 --> 00:23:40,720
u.s east four and i have another one in

00:23:40,080 --> 00:23:44,000
u.s

00:23:40,720 --> 00:23:45,600
west one in the b zone

00:23:44,000 --> 00:23:47,200
now what i'm going to do is i'm going to

00:23:45,600 --> 00:23:49,919
treat this second cluster in u.s

00:23:47,200 --> 00:23:51,520
west as my canary cluster now this is

00:23:49,919 --> 00:23:53,600
where things get a little interesting

00:23:51,520 --> 00:23:55,679
i'm going to go with the pull model i'm

00:23:53,600 --> 00:23:57,679
using a tool called config sync and

00:23:55,679 --> 00:23:58,880
there's other great tools out there some

00:23:57,679 --> 00:24:01,440
made by weaveworks

00:23:58,880 --> 00:24:03,200
and many others the choice is up to you

00:24:01,440 --> 00:24:04,960
they all have different feature sets

00:24:03,200 --> 00:24:07,600
pick something that works but the

00:24:04,960 --> 00:24:11,279
fundamentals are roughly the same

00:24:07,600 --> 00:24:15,200
we want these clusters to link

00:24:11,279 --> 00:24:16,960
to our configuration repository

00:24:15,200 --> 00:24:19,440
this is the core premise to what we're

00:24:16,960 --> 00:24:21,279
doing we want these artifacts to work

00:24:19,440 --> 00:24:22,720
so here's the other thing we want to do

00:24:21,279 --> 00:24:26,159
i want to leverage

00:24:22,720 --> 00:24:27,679
multiple branches that way maybe i want

00:24:26,159 --> 00:24:30,480
1.0 deployed to

00:24:27,679 --> 00:24:31,279
all of the clusters and when 2.0 is

00:24:30,480 --> 00:24:33,679
ready

00:24:31,279 --> 00:24:35,840
maybe i tell just one cluster that it

00:24:33,679 --> 00:24:36,640
should be running the 2.0 version of my

00:24:35,840 --> 00:24:39,600
configs

00:24:36,640 --> 00:24:42,159
and we'll see what that looks like all

00:24:39,600 --> 00:24:44,559
right so let's see where we are

00:24:42,159 --> 00:24:46,320
at this point we have everything set in

00:24:44,559 --> 00:24:48,960
terms of our config

00:24:46,320 --> 00:24:50,400
i have online tool called nomos which is

00:24:48,960 --> 00:24:52,080
part of the command line tool that

00:24:50,400 --> 00:24:53,679
allows me to interact with the config

00:24:52,080 --> 00:24:54,960
sync repositories

00:24:53,679 --> 00:24:57,360
so what i'm going to do now is going to

00:24:54,960 --> 00:24:58,840
run the nomos command and i'm just going

00:24:57,360 --> 00:25:00,080
to get the status of my current

00:24:58,840 --> 00:25:02,640
deployments

00:25:00,080 --> 00:25:04,480
so if i run the status command it's

00:25:02,640 --> 00:25:06,000
going to connect to my clusters

00:25:04,480 --> 00:25:08,400
and tell me the current status of the

00:25:06,000 --> 00:25:09,600
repositories that it's been syncing to

00:25:08,400 --> 00:25:13,200
while that's running what i'm going to

00:25:09,600 --> 00:25:14,559
do now is run that curl command again

00:25:13,200 --> 00:25:16,400
and you'll notice that we're hitting our

00:25:14,559 --> 00:25:19,520
universal url

00:25:16,400 --> 00:25:20,400
and that universal url is pointed at all

00:25:19,520 --> 00:25:22,000
of my

00:25:20,400 --> 00:25:23,919
kubernetes clusters i have a load

00:25:22,000 --> 00:25:27,279
balancer sitting here

00:25:23,919 --> 00:25:31,360
and that load balancer is pointing to

00:25:27,279 --> 00:25:34,000
three different clusters hello universe

00:25:31,360 --> 00:25:34,480
is pointing to all of those zones here

00:25:34,000 --> 00:25:37,919
we go

00:25:34,480 --> 00:25:40,480
down here so with that

00:25:37,919 --> 00:25:41,120
if i hit the global url i'll be routed

00:25:40,480 --> 00:25:44,159
to

00:25:41,120 --> 00:25:46,000
the cluster that's nearest to me so if i

00:25:44,159 --> 00:25:49,279
run this command here

00:25:46,000 --> 00:25:51,120
we should be getting the 1.0 version

00:25:49,279 --> 00:25:52,400
if we look at our syncing we'll see that

00:25:51,120 --> 00:25:55,760
all three clusters

00:25:52,400 --> 00:25:58,480
u.s west one a and east

00:25:55,760 --> 00:25:59,440
all of them are syncing to the 1.0

00:25:58,480 --> 00:26:02,559
branch

00:25:59,440 --> 00:26:04,400
of my hello world universe config and

00:26:02,559 --> 00:26:06,240
they're all in sync

00:26:04,400 --> 00:26:08,159
and i'm getting the right version

00:26:06,240 --> 00:26:10,159
everything's working nicely

00:26:08,159 --> 00:26:12,320
so now i want to make that change well

00:26:10,159 --> 00:26:13,760
of course you update your code

00:26:12,320 --> 00:26:16,640
and you go back to the flow that you're

00:26:13,760 --> 00:26:18,080
used to checking your code

00:26:16,640 --> 00:26:20,320
and then what will happen is a bill

00:26:18,080 --> 00:26:21,520
process will kick off

00:26:20,320 --> 00:26:24,159
drop something in your package

00:26:21,520 --> 00:26:26,080
repository give you a new tag that's

00:26:24,159 --> 00:26:28,559
eligible for deployment

00:26:26,080 --> 00:26:30,799
and then all you have to do is make a

00:26:28,559 --> 00:26:32,400
change in the config repository now

00:26:30,799 --> 00:26:33,679
there's ways to automate this but i just

00:26:32,400 --> 00:26:34,880
want to show you how it works underneath

00:26:33,679 --> 00:26:37,679
the covers

00:26:34,880 --> 00:26:39,600
your goal is on that separate branch

00:26:37,679 --> 00:26:41,520
where those configs live

00:26:39,600 --> 00:26:44,240
well those configs i'm going to show you

00:26:41,520 --> 00:26:46,559
the differently quickly

00:26:44,240 --> 00:26:48,400
if you look at those configs on the

00:26:46,559 --> 00:26:49,520
second branch there's only one small

00:26:48,400 --> 00:26:52,159
change

00:26:49,520 --> 00:26:54,720
and the change here is just to that

00:26:52,159 --> 00:26:58,000
deployment artifact

00:26:54,720 --> 00:27:00,640
if you look here i just went from 1.0

00:26:58,000 --> 00:27:02,320
to 2.0 and it's sitting in this branch

00:27:00,640 --> 00:27:04,880
ready to be released

00:27:02,320 --> 00:27:07,760
so how do we release it to the cluster

00:27:04,880 --> 00:27:09,520
well there's one thing we gotta do here

00:27:07,760 --> 00:27:10,880
when i set up these clusters to pull

00:27:09,520 --> 00:27:12,960
from that repository

00:27:10,880 --> 00:27:15,200
i did a little bit of work ahead of time

00:27:12,960 --> 00:27:16,559
at this config management directory

00:27:15,200 --> 00:27:18,240
and if you look at them they're

00:27:16,559 --> 00:27:19,679
currently all the same but let's look at

00:27:18,240 --> 00:27:20,559
the one that i've deemed our canary

00:27:19,679 --> 00:27:22,480
cluster

00:27:20,559 --> 00:27:24,320
so what i've done is i have a separate

00:27:22,480 --> 00:27:26,880
load balancer

00:27:24,320 --> 00:27:28,080
that's sending traffic only to one of

00:27:26,880 --> 00:27:31,520
these clusters

00:27:28,080 --> 00:27:33,600
and it's called hello universe canary

00:27:31,520 --> 00:27:34,720
if i click on that you'll see i have its

00:27:33,600 --> 00:27:36,960
own ip address

00:27:34,720 --> 00:27:38,000
its own set of domain names and it's

00:27:36,960 --> 00:27:42,080
only pointed to

00:27:38,000 --> 00:27:46,399
one of my clusters uswest

00:27:42,080 --> 00:27:47,600
b now is we'll hit that endpoint and i'm

00:27:46,399 --> 00:27:48,399
going to show you the last step that you

00:27:47,600 --> 00:27:51,760
have to do

00:27:48,399 --> 00:27:53,679
as i wrap up this demo so we'll do curl

00:27:51,760 --> 00:27:55,679
and this time we'll throw canary into

00:27:53,679 --> 00:27:57,919
the front of this so we'll say canary

00:27:55,679 --> 00:27:58,720
dot hello universe and we'll get the

00:27:57,919 --> 00:28:01,919
version

00:27:58,720 --> 00:28:03,200
as expected we're getting 1.0 now i have

00:28:01,919 --> 00:28:05,120
those stages changed

00:28:03,200 --> 00:28:06,640
i have the containers built we only need

00:28:05,120 --> 00:28:08,240
to do one more thing here

00:28:06,640 --> 00:28:11,120
we'll update the config management

00:28:08,240 --> 00:28:12,320
config just for that one cluster so

00:28:11,120 --> 00:28:15,440
we'll say usbs

00:28:12,320 --> 00:28:16,159
west1b and we'll come over here and say

00:28:15,440 --> 00:28:18,760
look

00:28:16,159 --> 00:28:20,000
i want to sync instead of the branch

00:28:18,760 --> 00:28:22,720
2.1.0

00:28:20,000 --> 00:28:23,279
we'll change it to 2.0 and then what

00:28:22,720 --> 00:28:26,320
we'll do

00:28:23,279 --> 00:28:28,320
here is we'll tell that cluster

00:28:26,320 --> 00:28:31,039
that it should re-prioritize where it's

00:28:28,320 --> 00:28:34,080
pulling config and the way we do that

00:28:31,039 --> 00:28:36,000
is we run a command so i'm going to be

00:28:34,080 --> 00:28:37,440
talking to specifically that cluster in

00:28:36,000 --> 00:28:39,200
us west1

00:28:37,440 --> 00:28:41,200
and i'm going to tell it to grab that

00:28:39,200 --> 00:28:43,760
new config

00:28:41,200 --> 00:28:45,679
we're reaching that last mile now if i

00:28:43,760 --> 00:28:49,279
push this config up what will happen and

00:28:45,679 --> 00:28:49,279
we'll pop back over to the diagram

00:28:50,559 --> 00:28:55,279
once this config is in place that

00:28:52,799 --> 00:28:58,320
kubernetes cluster will go to that new

00:28:55,279 --> 00:29:00,559
branch of that config repo and then try

00:28:58,320 --> 00:29:02,960
to update the state of the world

00:29:00,559 --> 00:29:04,480
based on those configs the nice thing

00:29:02,960 --> 00:29:06,240
about this workflow is that developers

00:29:04,480 --> 00:29:07,200
can keep checking in code and tagging

00:29:06,240 --> 00:29:08,399
releases

00:29:07,200 --> 00:29:11,120
and then those will flow into the

00:29:08,399 --> 00:29:11,840
container registry only when the config

00:29:11,120 --> 00:29:14,080
repo is

00:29:11,840 --> 00:29:14,960
updated specifically for a specific

00:29:14,080 --> 00:29:17,200
environment

00:29:14,960 --> 00:29:18,399
will it go and pull the right container

00:29:17,200 --> 00:29:20,000
at the right time

00:29:18,399 --> 00:29:22,559
so for most people once you get this

00:29:20,000 --> 00:29:23,919
stuff set up you end up working like you

00:29:22,559 --> 00:29:25,440
were normally working

00:29:23,919 --> 00:29:27,600
now you kind of have this get out

00:29:25,440 --> 00:29:30,080
workflow on both sides

00:29:27,600 --> 00:29:31,520
you can start the diff review changes

00:29:30,080 --> 00:29:32,880
merge them in

00:29:31,520 --> 00:29:34,159
so with that in place one thing we're

00:29:32,880 --> 00:29:36,399
going to do now is going to run that no

00:29:34,159 --> 00:29:38,720
most command one more time

00:29:36,399 --> 00:29:40,480
and what should happen is i should see

00:29:38,720 --> 00:29:42,480
that second cluster or that canary

00:29:40,480 --> 00:29:43,679
cluster starting to sync

00:29:42,480 --> 00:29:45,520
if i go over here and look at the

00:29:43,679 --> 00:29:46,320
cluster output we'll look at our

00:29:45,520 --> 00:29:48,080
workloads

00:29:46,320 --> 00:29:51,120
and we should see kubernetes hard at

00:29:48,080 --> 00:29:54,159
work trying to replace

00:29:51,120 --> 00:29:55,200
some of those old versions of my app one

00:29:54,159 --> 00:29:57,600
by one or

00:29:55,200 --> 00:29:58,880
how i direct it based on my controller

00:29:57,600 --> 00:29:59,600
that's doing the work inside of the

00:29:58,880 --> 00:30:01,919
cluster

00:29:59,600 --> 00:30:03,120
remember everything's declarative on my

00:30:01,919 --> 00:30:05,600
side

00:30:03,120 --> 00:30:07,360
i got a few more pods to go we'll hit

00:30:05,600 --> 00:30:09,840
refresh here to see if everything is up

00:30:07,360 --> 00:30:09,840
to date

00:30:10,720 --> 00:30:14,640
and we have one more that we're shutting

00:30:12,720 --> 00:30:16,720
down but so far it looks like everything

00:30:14,640 --> 00:30:18,799
is green and we're ready to test

00:30:16,720 --> 00:30:20,480
so let's see if this works we'll go back

00:30:18,799 --> 00:30:24,159
to our command line

00:30:20,480 --> 00:30:26,320
and we'll hit that canary endpoint again

00:30:24,159 --> 00:30:28,320
and we see it's on 2.0 and just to be

00:30:26,320 --> 00:30:30,880
sure that everything is working

00:30:28,320 --> 00:30:31,679
we'll hit the global load balancer and

00:30:30,880 --> 00:30:33,120
ideally

00:30:31,679 --> 00:30:35,200
we're going to bounce around to various

00:30:33,120 --> 00:30:36,320
endpoints but since i'm closest to this

00:30:35,200 --> 00:30:38,960
particular zone

00:30:36,320 --> 00:30:40,640
i'm still getting 2.0 now there's many

00:30:38,960 --> 00:30:42,240
ways you can go about this maybe use

00:30:40,640 --> 00:30:44,320
github actions to

00:30:42,240 --> 00:30:45,440
validate those configs before you put

00:30:44,320 --> 00:30:47,600
them into a branch

00:30:45,440 --> 00:30:49,919
and then maybe you automate the process

00:30:47,600 --> 00:30:51,200
of grabbing the latest container version

00:30:49,919 --> 00:30:53,600
from the container registry

00:30:51,200 --> 00:30:55,120
updating the configs so with that i'm

00:30:53,600 --> 00:30:56,320
going to stop the presentation

00:30:55,120 --> 00:30:59,039
and hopefully you have a better

00:30:56,320 --> 00:31:00,720
understanding of how git ops works

00:30:59,039 --> 00:31:02,320
there's a lot more you can do here we

00:31:00,720 --> 00:31:04,320
just scratched the surface

00:31:02,320 --> 00:31:06,320
a lot of people are looking at this as a

00:31:04,320 --> 00:31:08,399
very complex thing but remember

00:31:06,320 --> 00:31:10,080
you already know most of the workloads

00:31:08,399 --> 00:31:11,120
you've probably already been working

00:31:10,080 --> 00:31:12,720
this way

00:31:11,120 --> 00:31:14,559
it's just about combining these two

00:31:12,720 --> 00:31:15,600
things and understanding the the little

00:31:14,559 --> 00:31:17,840
catch here

00:31:15,600 --> 00:31:19,519
is declarative infrastructure like this

00:31:17,840 --> 00:31:20,320
really requires something that can

00:31:19,519 --> 00:31:22,559
manage

00:31:20,320 --> 00:31:23,360
the full life cycle of your apps or your

00:31:22,559 --> 00:31:24,640
databases

00:31:23,360 --> 00:31:33,679
and with that like to end the

00:31:24,640 --> 00:31:35,760
presentation thank you

00:31:33,679 --> 00:31:35,760

YouTube URL: https://www.youtube.com/watch?v=yIAa5wHsfw4


