Title: revo.js 2019 - Martin Hochel - The (Real) State of Web Components
Publication date: 2019-10-25
Playlist: Revo.js Conf 2019
Description: 
	The (Real) State of Web Components
Presented by Martin Hochel, at revo.js 2019
https://revojs.ro/2019/speakers/martin-hochel
---
2018 is gonna be the year of Web Components they said... Was it? The year is 2019 and people are asking, are Web Components everywhere? Probably not. Why?

This talk will try to answer all these questions you might be asking yourself, by going through a real evaluation of Web Components as the primary tool for authoring web pages and applications.
Captions: 
	00:00:00,720 --> 00:00:08,230
[Music]

00:00:11,730 --> 00:00:28,619
all right use the plot for are you ready

00:00:22,090 --> 00:00:28,619
for this talk are you ready all right

00:00:29,520 --> 00:00:34,750
let's do it

00:00:31,379 --> 00:00:37,239
so hi everyone my name is Martin Huckle

00:00:34,750 --> 00:00:38,890
I work as a principal engineer at Porto

00:00:37,239 --> 00:00:41,789
board in Prague Czech Republic

00:00:38,890 --> 00:00:44,110
I'm also GD for web and Microsoft MVP

00:00:41,789 --> 00:00:47,140
you can follow me on twitter my handle

00:00:44,110 --> 00:00:49,630
is martin underscore hotel I published

00:00:47,140 --> 00:00:52,899
technical articles admin medium.com and

00:00:49,630 --> 00:00:54,910
I do some open source at github last but

00:00:52,899 --> 00:00:57,250
not least I'm also organizing the

00:00:54,910 --> 00:01:01,649
biggest JavaScript meetup in drag it's

00:00:57,250 --> 00:01:05,409
called ng party yes that ng stands for

00:01:01,649 --> 00:01:09,280
next generation meetup JavaScript group

00:01:05,409 --> 00:01:10,750
and if you are into podcasts I recently

00:01:09,280 --> 00:01:12,549
started a new initiative

00:01:10,750 --> 00:01:16,780
it's called tech stable so check it out

00:01:12,549 --> 00:01:19,530
Spotify or iTunes all right before I

00:01:16,780 --> 00:01:24,009
start his talk there is disclaimer I

00:01:19,530 --> 00:01:27,369
might be biased what I mean by that well

00:01:24,009 --> 00:01:31,600
I used various kind of libraries and

00:01:27,369 --> 00:01:35,350
stuff so I made like some and I may be

00:01:31,600 --> 00:01:38,770
kind of skeptical about others so the

00:01:35,350 --> 00:01:40,479
bias is there right also you might you

00:01:38,770 --> 00:01:43,389
might be asking if I'm experienced

00:01:40,479 --> 00:01:45,399
enough to talk about web components so

00:01:43,389 --> 00:01:48,279
to give you some background I used to be

00:01:45,399 --> 00:01:50,619
a former core member of sketches which

00:01:48,279 --> 00:01:52,420
is a micro library for building web

00:01:50,619 --> 00:01:54,099
components which is very cool if you

00:01:52,420 --> 00:01:57,609
should definitely check it out and also

00:01:54,099 --> 00:02:00,880
I use web components in production so

00:01:57,609 --> 00:02:03,149
what do you think should I go on should

00:02:00,880 --> 00:02:03,149
I go on

00:02:03,389 --> 00:02:14,349
alright so this is the most important

00:02:10,959 --> 00:02:18,130
quote of this talk which we will

00:02:14,349 --> 00:02:21,460
elaborate in edom in more detail so

00:02:18,130 --> 00:02:23,350
maybe you have you heard or saw in a

00:02:21,460 --> 00:02:24,190
recent months or weeks some kind of

00:02:23,350 --> 00:02:27,880
tweets

00:02:24,190 --> 00:02:31,350
or articles we title like web components

00:02:27,880 --> 00:02:35,110
will replace your front-end framework

00:02:31,350 --> 00:02:38,110
that sounds intimidating right like what

00:02:35,110 --> 00:02:41,610
doesn't mean I need to rewrite my app

00:02:38,110 --> 00:02:46,480
again oh no

00:02:41,610 --> 00:02:54,490
so also last year they have been tweets

00:02:46,480 --> 00:02:57,730
like 2018 the year of web components so

00:02:54,490 --> 00:02:59,070
it's 2019 and our web components

00:02:57,730 --> 00:03:03,090
everywhere

00:02:59,070 --> 00:03:06,960
well according with the chromestatus.com

00:03:03,090 --> 00:03:12,370
6% of all pages today use web components

00:03:06,960 --> 00:03:14,230
so is this a lot I don't know maybe it

00:03:12,370 --> 00:03:17,230
is when you take into consideration how

00:03:14,230 --> 00:03:20,320
many web pages are out there and I don't

00:03:17,230 --> 00:03:24,040
know how they get this number but it

00:03:20,320 --> 00:03:26,530
might be biased as well like everyone

00:03:24,040 --> 00:03:28,209
that is using YouTube player on its side

00:03:26,530 --> 00:03:30,250
is basically using web components

00:03:28,209 --> 00:03:35,489
because the whole YouTube is written

00:03:30,250 --> 00:03:39,670
about components so 6% I don't know

00:03:35,489 --> 00:03:42,489
so why only 6% maybe there is no good

00:03:39,670 --> 00:03:46,150
browser support right so according to

00:03:42,489 --> 00:03:48,880
can I use comm we see a table and all

00:03:46,150 --> 00:03:51,340
those evergreen browsers are in green

00:03:48,880 --> 00:03:53,320
numbers so it's very well supported

00:03:51,340 --> 00:03:56,170
well except if you wanna support

00:03:53,320 --> 00:03:58,390
Internet Explorer or current edge or

00:03:56,170 --> 00:04:06,040
Opera Mini who is using cupramine

00:03:58,390 --> 00:04:08,980
anyways right so we are all good okay to

00:04:06,040 --> 00:04:11,230
better understand why web components

00:04:08,980 --> 00:04:14,230
should even replace or frameworks and be

00:04:11,230 --> 00:04:15,940
everywhere we need to understand why web

00:04:14,230 --> 00:04:19,720
components what problems do they solve

00:04:15,940 --> 00:04:23,140
right and there is no better way to

00:04:19,720 --> 00:04:27,700
learn than giving your hands dirty so

00:04:23,140 --> 00:04:30,220
what's right a web component and yes I'm

00:04:27,700 --> 00:04:30,669
gonna do live coding because nothing can

00:04:30,220 --> 00:04:36,280
go wrong

00:04:30,669 --> 00:04:37,810
right alright before we start let's see

00:04:36,280 --> 00:04:40,900
what we're gonna implement we

00:04:37,810 --> 00:04:44,020
gonna implement this WC - counter custom

00:04:40,900 --> 00:04:47,560
element by the way the WC isn't for

00:04:44,020 --> 00:04:48,820
restroom there's just an abbreviation

00:04:47,560 --> 00:04:51,490
for webcomponent

00:04:48,820 --> 00:04:53,020
it's a prefix WC so we will implement a

00:04:51,490 --> 00:04:54,730
counter component we will have two

00:04:53,020 --> 00:04:57,130
buttons for increment and decrement and

00:04:54,730 --> 00:04:59,889
we will render the current count in the

00:04:57,130 --> 00:05:04,540
middle of those two buttons so let's

00:04:59,889 --> 00:05:07,090
switch my screen to the editor on the

00:05:04,540 --> 00:05:10,150
right side I am an editor on the left

00:05:07,090 --> 00:05:15,940
side there is a web browser rendering my

00:05:10,150 --> 00:05:20,229
index.html page so we already have

00:05:15,940 --> 00:05:21,970
defined or WC - counter tag also we have

00:05:20,229 --> 00:05:24,820
some script tag that is including

00:05:21,970 --> 00:05:28,180
implementation of our component so what

00:05:24,820 --> 00:05:31,750
we go there alright so how do you

00:05:28,180 --> 00:05:33,930
implement custom element use a class so

00:05:31,750 --> 00:05:37,720
we already defined a class named counter

00:05:33,930 --> 00:05:40,770
right here which extends a HTML element

00:05:37,720 --> 00:05:43,990
this is how you define a custom element

00:05:40,770 --> 00:05:45,729
now we have some we have two methods

00:05:43,990 --> 00:05:47,580
within this implementation constructor

00:05:45,729 --> 00:05:50,860
and connect a callback

00:05:47,580 --> 00:05:52,720
so let me unfold connect the callback

00:05:50,860 --> 00:05:55,570
implementation and we have here some

00:05:52,720 --> 00:05:58,450
console.log mounted but if i refresh my

00:05:55,570 --> 00:06:01,539
browser I can't see anything

00:05:58,450 --> 00:06:03,820
why is that well to make this component

00:06:01,539 --> 00:06:06,760
alive you need to register it the global

00:06:03,820 --> 00:06:10,990
registry so let me do that so I will

00:06:06,760 --> 00:06:12,250
write custom elements dot define and now

00:06:10,990 --> 00:06:14,110
I need to provide the first argument

00:06:12,250 --> 00:06:19,889
which is going to be the name of our new

00:06:14,110 --> 00:06:22,300
tag so in records it's WC - counter and

00:06:19,889 --> 00:06:25,570
the second argument is the reference of

00:06:22,300 --> 00:06:28,020
our counter class all right I press save

00:06:25,570 --> 00:06:32,710
and we can see in the condo console log

00:06:28,020 --> 00:06:33,240
was mounted so now it works awesome all

00:06:32,710 --> 00:06:38,860
right

00:06:33,240 --> 00:06:40,360
oops now need to implement some template

00:06:38,860 --> 00:06:42,310
right because now we are seeing anything

00:06:40,360 --> 00:06:45,160
on the screen so how do you implement

00:06:42,310 --> 00:06:47,610
templates for custom elements well we

00:06:45,160 --> 00:06:50,919
need to create variable called template

00:06:47,610 --> 00:06:51,830
we will assign to this variable return

00:06:50,919 --> 00:06:54,920
value of DoCoMo

00:06:51,830 --> 00:06:57,470
and dot create element we will create a

00:06:54,920 --> 00:06:59,600
tag name called template so now we have

00:06:57,470 --> 00:07:01,820
new instance in our template variable

00:06:59,600 --> 00:07:04,430
last but not least I need to assign

00:07:01,820 --> 00:07:08,180
inner HTML of this variable a string

00:07:04,430 --> 00:07:11,480
literal and all I already prepared the

00:07:08,180 --> 00:07:15,320
template here so I don't have to type it

00:07:11,480 --> 00:07:18,170
so let's copy it and use it within our

00:07:15,320 --> 00:07:20,990
template string so what we have we have

00:07:18,170 --> 00:07:22,970
a button with some class Inc then we

00:07:20,990 --> 00:07:26,230
have a div with class count another

00:07:22,970 --> 00:07:30,560
button with class Dec decrementing right

00:07:26,230 --> 00:07:32,870
but still there is no content because we

00:07:30,560 --> 00:07:36,050
need to instantiate this template within

00:07:32,870 --> 00:07:39,080
our component how to do that we need to

00:07:36,050 --> 00:07:41,120
go to constructor / class counter and I

00:07:39,080 --> 00:07:43,910
need to append child so I'm invoking

00:07:41,120 --> 00:07:47,660
this dot append child with a new clone

00:07:43,910 --> 00:07:52,730
of my used template I press save we can

00:07:47,660 --> 00:07:55,220
see two buttons on the screen right cool

00:07:52,730 --> 00:07:58,100
what's next well because we are using

00:07:55,220 --> 00:08:01,040
loyal api's we need to do some

00:07:58,100 --> 00:08:03,950
imperative handling so I'm creating this

00:08:01,040 --> 00:08:07,430
underscore PRF or property on the class

00:08:03,950 --> 00:08:08,990
which consists of some object and within

00:08:07,430 --> 00:08:11,690
this object we have some properties that

00:08:08,990 --> 00:08:14,360
are querying or template where this dot

00:08:11,690 --> 00:08:18,620
query selector so it's a vanilla

00:08:14,360 --> 00:08:20,480
JavaScript right okay what's next I want

00:08:18,620 --> 00:08:22,220
to have some interaction so for that I

00:08:20,480 --> 00:08:25,450
need to register some event listeners

00:08:22,220 --> 00:08:28,760
for my buttons so I'm invoking at

00:08:25,450 --> 00:08:31,250
underscore view ref dot Inc button at

00:08:28,760 --> 00:08:33,560
event listener on click and I'm console

00:08:31,250 --> 00:08:36,590
logging in that call back in like

00:08:33,560 --> 00:08:38,510
increment and also the opposite for the

00:08:36,590 --> 00:08:41,690
decrement button I'm console logging

00:08:38,510 --> 00:08:43,580
decrement alright let's save this let's

00:08:41,690 --> 00:08:46,310
drive the button works I'm clicking on

00:08:43,580 --> 00:08:47,720
the thumbs up so we could lock Inc and

00:08:46,310 --> 00:08:52,220
on the thumbs-down

00:08:47,720 --> 00:08:55,340
we got lock decrement so that works but

00:08:52,220 --> 00:08:58,130
I don't see that counter in my view so

00:08:55,340 --> 00:09:01,580
one needs to be done well we need to

00:08:58,130 --> 00:09:03,200
render so good practice is to render

00:09:01,580 --> 00:09:04,940
within connect the callback which is

00:09:03,200 --> 00:09:05,690
invoked when the component is physically

00:09:04,940 --> 00:09:08,990
mounted in the

00:09:05,690 --> 00:09:11,900
so again I'm reducing the reference

00:09:08,990 --> 00:09:13,790
underscore URF that count view and I'm

00:09:11,900 --> 00:09:14,870
assigning to text not text content some

00:09:13,790 --> 00:09:18,410
dummy value zero

00:09:14,870 --> 00:09:20,300
I've saved and now the zero is on my

00:09:18,410 --> 00:09:23,660
screen but nothing works

00:09:20,300 --> 00:09:26,630
now incrementation or documentation so

00:09:23,660 --> 00:09:29,060
needs to be done well I need to create

00:09:26,630 --> 00:09:31,520
some internal state so how do we create

00:09:29,060 --> 00:09:34,220
state in web components mmm

00:09:31,520 --> 00:09:36,370
there is no state like in react cetera

00:09:34,220 --> 00:09:41,090
so for web components we need to create

00:09:36,370 --> 00:09:44,950
getters and setters so let me do that so

00:09:41,090 --> 00:09:47,540
first I'm gonna create some internal

00:09:44,950 --> 00:09:49,100
property instance named underscore

00:09:47,540 --> 00:09:51,650
account and this is going to be the

00:09:49,100 --> 00:09:54,470
source of truth for my state and I'm

00:09:51,650 --> 00:09:58,700
gonna assign this value zero and I'm

00:09:54,470 --> 00:10:00,890
gonna create getter for count and it's

00:09:58,700 --> 00:10:05,150
gonna return my internal this that count

00:10:00,890 --> 00:10:08,840
and also setter and count which will

00:10:05,150 --> 00:10:11,140
accept any value I'm gonna set to my new

00:10:08,840 --> 00:10:15,740
discount that new value

00:10:11,140 --> 00:10:19,880
cool and now I need to render so before

00:10:15,740 --> 00:10:21,500
I go to that let me just extract the

00:10:19,880 --> 00:10:23,720
assignment of County you text content

00:10:21,500 --> 00:10:28,280
from kinetic callback to a new render

00:10:23,720 --> 00:10:30,440
method and this is not part of the web

00:10:28,280 --> 00:10:32,630
components API this is just my by some

00:10:30,440 --> 00:10:35,540
common method that I implemented and I

00:10:32,630 --> 00:10:36,080
need to call this that render from

00:10:35,540 --> 00:10:39,560
within

00:10:36,080 --> 00:10:42,350
Kinetico back and now to make our stay

00:10:39,560 --> 00:10:46,120
reactive I need to imperatively call

00:10:42,350 --> 00:10:50,690
this render with from within or setter

00:10:46,120 --> 00:10:51,310
who that's not very nice but this is

00:10:50,690 --> 00:10:54,380
what we got

00:10:51,310 --> 00:10:56,839
alright last but not least I need to add

00:10:54,380 --> 00:11:02,420
the logic within my callback listeners

00:10:56,839 --> 00:11:05,540
so I will just increment my discount

00:11:02,420 --> 00:11:10,010
setter with one and in the opposite I

00:11:05,540 --> 00:11:12,860
will recommend it by one cool now let's

00:11:10,010 --> 00:11:13,490
try those buttons and nothing's

00:11:12,860 --> 00:11:17,750
happening

00:11:13,490 --> 00:11:19,490
hmm and why I need to remove this dummy

00:11:17,750 --> 00:11:23,720
zero string from account

00:11:19,490 --> 00:11:25,970
the text content and I'm gonna set it

00:11:23,720 --> 00:11:28,810
together of discount and because I'm

00:11:25,970 --> 00:11:32,630
using typescript behind the scenes I

00:11:28,810 --> 00:11:36,170
need to cast it to string to make it

00:11:32,630 --> 00:11:38,810
type safe alright so let's try to click

00:11:36,170 --> 00:11:42,580
on those buttons nice

00:11:38,810 --> 00:11:42,580
so it's incrementing and decrementing

00:11:42,880 --> 00:11:52,540
cool what about those buttons they have

00:11:49,520 --> 00:11:55,580
purple background who is doing that hmm

00:11:52,540 --> 00:11:58,670
let me check it out so I'm going back to

00:11:55,580 --> 00:12:00,230
index.html and what I have here is a

00:11:58,670 --> 00:12:04,300
declaration since declaration of the

00:12:00,230 --> 00:12:07,339
button with all those styling properties

00:12:04,300 --> 00:12:09,640
that's bad I want to have my component

00:12:07,339 --> 00:12:13,310
encapsulated how can we achieve that

00:12:09,640 --> 00:12:14,930
what's called the shadow Dom so we need

00:12:13,310 --> 00:12:16,670
to create a shadow root within the

00:12:14,930 --> 00:12:19,490
constructor of our class let's do this I

00:12:16,670 --> 00:12:21,529
will create some distillate property and

00:12:19,490 --> 00:12:25,730
I will assigned to this property return

00:12:21,529 --> 00:12:28,220
value of this dot attached shadow and it

00:12:25,730 --> 00:12:30,500
accepts a configuration object mode and

00:12:28,220 --> 00:12:34,100
now we're gonna use open value for that

00:12:30,500 --> 00:12:36,680
and now we need to do a slight change we

00:12:34,100 --> 00:12:38,720
are not using anymore this node for

00:12:36,680 --> 00:12:40,610
rendering so source of truth is our

00:12:38,720 --> 00:12:42,560
shadow root so I need to refactor this

00:12:40,610 --> 00:12:44,779
the append child to this dot append

00:12:42,560 --> 00:12:47,029
child and also I can't query anymore

00:12:44,779 --> 00:12:49,820
what Wyatt is that query selector but I

00:12:47,029 --> 00:12:53,570
need to use this dot root that curry

00:12:49,820 --> 00:12:55,970
selector if I save we can see we get rid

00:12:53,570 --> 00:12:58,240
of those styles so component is now

00:12:55,970 --> 00:13:00,790
perfectly encapsulated which is awesome

00:12:58,240 --> 00:13:03,920
there is internal linking abstractions

00:13:00,790 --> 00:13:06,829
alright let's add some styles how do we

00:13:03,920 --> 00:13:13,029
add styles I already prepared some

00:13:06,829 --> 00:13:18,459
styles so let's copy those and I'm gonna

00:13:13,029 --> 00:13:21,440
just create a style tag with no template

00:13:18,459 --> 00:13:23,990
and let me just add those Styles within

00:13:21,440 --> 00:13:25,610
the style tag I press save I mean we

00:13:23,990 --> 00:13:26,600
have our newly styled buttons with a

00:13:25,610 --> 00:13:29,810
gray background

00:13:26,600 --> 00:13:31,130
nice borders and count value in the

00:13:29,810 --> 00:13:34,020
middle everything works

00:13:31,130 --> 00:13:36,029
nice let's say we won

00:13:34,020 --> 00:13:39,330
add some teaming capabilities to this

00:13:36,029 --> 00:13:43,709
component so maybe I didn't notice but I

00:13:39,330 --> 00:13:45,570
did of course I'm using CSS variables to

00:13:43,709 --> 00:13:49,170
define background color and border

00:13:45,570 --> 00:13:51,149
radius for my button selector right and

00:13:49,170 --> 00:13:53,459
this is the public API for dimming

00:13:51,149 --> 00:13:57,570
capabilities of my component so I have

00:13:53,459 --> 00:14:00,990
here button - BG - color button - border

00:13:57,570 --> 00:14:03,540
- radius so if someone for the outside

00:14:00,990 --> 00:14:06,690
world wants to theme this component you

00:14:03,540 --> 00:14:10,410
can do that by creating a new route

00:14:06,690 --> 00:14:12,209
selector and we reusing those variables

00:14:10,410 --> 00:14:14,490
with some values in your case again I

00:14:12,209 --> 00:14:18,990
use black background color and 50%

00:14:14,490 --> 00:14:23,959
radius I / save bank I've styled my

00:14:18,990 --> 00:14:26,580
component that's nice alright blasting

00:14:23,959 --> 00:14:29,839
what about content projection what I

00:14:26,580 --> 00:14:33,870
mean by that well let's say I wanna use

00:14:29,839 --> 00:14:37,110
dome composition so I want to render

00:14:33,870 --> 00:14:40,170
some tag within my shadow root in our

00:14:37,110 --> 00:14:44,660
case we're gonna use h2 tag to render a

00:14:40,170 --> 00:14:50,310
title for our WC - counter I press save

00:14:44,660 --> 00:14:52,260
well the counter is not there no why is

00:14:50,310 --> 00:14:55,020
that well because shadow Dom is

00:14:52,260 --> 00:14:56,790
consuming it thanksfully enough shadow

00:14:55,020 --> 00:14:59,040
Dom has this powerful feature called

00:14:56,790 --> 00:15:01,200
content projection so all I need to do

00:14:59,040 --> 00:15:04,950
is to introduce a slots tag within my

00:15:01,200 --> 00:15:08,880
template I press save the counter is

00:15:04,950 --> 00:15:10,230
there the original h2 tag cool so there

00:15:08,880 --> 00:15:12,570
are many many others feature many other

00:15:10,230 --> 00:15:14,990
features but I don't have time for that

00:15:12,570 --> 00:15:21,180
so make sure to grab me after this talk

00:15:14,990 --> 00:15:23,520
cool let's go back to slides so during

00:15:21,180 --> 00:15:26,490
this live coding we showcased our

00:15:23,520 --> 00:15:28,820
various features of web components like

00:15:26,490 --> 00:15:31,410
we have encapsulate encapsulation of

00:15:28,820 --> 00:15:33,630
composition we have some ability they

00:15:31,410 --> 00:15:35,700
are plug and play they have a C runtime

00:15:33,630 --> 00:15:38,459
right there are no dependencies at all

00:15:35,700 --> 00:15:41,730
and web components have also great

00:15:38,459 --> 00:15:46,220
interrupts with frameworks on the other

00:15:41,730 --> 00:15:46,220
hand there are some cons

00:15:46,550 --> 00:15:52,250
and now let's talk a bit about the

00:15:49,850 --> 00:15:54,649
scones Charlotte because not everything

00:15:52,250 --> 00:16:01,390
in webcomponent world are rainbows and

00:15:54,649 --> 00:16:05,300
butterflies first issue global namespace

00:16:01,390 --> 00:16:07,790
so as we did in the live coding you need

00:16:05,300 --> 00:16:10,190
to invoke custom elements that define to

00:16:07,790 --> 00:16:12,860
register your element to the global

00:16:10,190 --> 00:16:16,370
registry right that might be an issue

00:16:12,860 --> 00:16:19,520
why well if anyone else in this world

00:16:16,370 --> 00:16:21,620
will define some custom element with the

00:16:19,520 --> 00:16:24,709
same name as you did your application

00:16:21,620 --> 00:16:28,100
will run into errors so that might be

00:16:24,709 --> 00:16:30,440
issue for some thankfully enough there

00:16:28,100 --> 00:16:33,529
is a proposal from namespace registry

00:16:30,440 --> 00:16:35,680
there is no ETA but at least we have

00:16:33,529 --> 00:16:38,570
some proposal so that's good

00:16:35,680 --> 00:16:42,890
issue number two progressive enhancement

00:16:38,570 --> 00:16:45,770
and accessibility so we already know how

00:16:42,890 --> 00:16:47,570
to define web component in this case

00:16:45,770 --> 00:16:49,940
we're using some class fancy button

00:16:47,570 --> 00:16:52,370
which extends HTML element and again we

00:16:49,940 --> 00:16:56,300
define that tag and then we use that new

00:16:52,370 --> 00:16:59,480
W C - friends - fancy - button within

00:16:56,300 --> 00:17:01,910
your markup right so this is not

00:16:59,480 --> 00:17:04,699
accessible and it doesn't follow

00:17:01,910 --> 00:17:06,589
progressive enhancement guidelines if I

00:17:04,699 --> 00:17:09,800
will turn off JavaScript only thing I

00:17:06,589 --> 00:17:11,240
gonna see is fancy button text and if

00:17:09,800 --> 00:17:14,809
you want to implement accessibility you

00:17:11,240 --> 00:17:18,860
need to do it on your own but not all

00:17:14,809 --> 00:17:20,870
hope is lost there is another way how to

00:17:18,860 --> 00:17:24,439
define components called customized

00:17:20,870 --> 00:17:26,990
building elements so there is a slight

00:17:24,439 --> 00:17:29,360
modification how you extend your classes

00:17:26,990 --> 00:17:32,510
in our case we extend or fancy button

00:17:29,360 --> 00:17:34,670
with particular class in your case HTML

00:17:32,510 --> 00:17:36,470
button element and then we need to

00:17:34,670 --> 00:17:39,200
provide a third argument within custom

00:17:36,470 --> 00:17:41,300
elements to define which is the object

00:17:39,200 --> 00:17:43,850
it property extends and then you need to

00:17:41,300 --> 00:17:47,929
name that particular tag that you want

00:17:43,850 --> 00:17:50,330
to extend last but the least or use it

00:17:47,929 --> 00:17:53,210
will just right button standard button

00:17:50,330 --> 00:17:55,250
tag in your markup with this attribute

00:17:53,210 --> 00:17:57,650
and value of this attribute needs to be

00:17:55,250 --> 00:18:00,110
the name of your new custom element that

00:17:57,650 --> 00:18:02,210
you register nice so cuz

00:18:00,110 --> 00:18:04,039
customized building elements for

00:18:02,210 --> 00:18:07,130
progressive enhancement guidelines and

00:18:04,039 --> 00:18:10,659
are accessible by default that's great

00:18:07,130 --> 00:18:14,090
news indeed hmm

00:18:10,659 --> 00:18:15,740
so maybe you didn't know this when I

00:18:14,090 --> 00:18:19,630
showcase this table from can I use

00:18:15,740 --> 00:18:26,659
dot-com there are some remarks regarding

00:18:19,630 --> 00:18:29,409
Safari iOS Safari say sudbury supports

00:18:26,659 --> 00:18:41,990
autonomous custom elements but not

00:18:29,409 --> 00:18:45,590
customized building elements so Apple is

00:18:41,990 --> 00:18:47,260
not gonna implement those so yeah you

00:18:45,590 --> 00:18:50,690
cannot use it

00:18:47,260 --> 00:18:54,740
unfortunately what about developer

00:18:50,690 --> 00:18:57,429
experience well as we showcase within

00:18:54,740 --> 00:19:00,409
the live coding session it's very raw

00:18:57,429 --> 00:19:02,600
low-level Tom a pee eyes and this was

00:19:00,409 --> 00:19:04,760
very contrived example imagine building

00:19:02,600 --> 00:19:06,649
some more complex component right

00:19:04,760 --> 00:19:07,399
handling all that rendering to be

00:19:06,649 --> 00:19:09,320
efficient

00:19:07,399 --> 00:19:13,130
all these callbacks that's quite

00:19:09,320 --> 00:19:15,169
cumbersome to implement so there is this

00:19:13,130 --> 00:19:19,399
quote from a famous guy I don't know if

00:19:15,169 --> 00:19:20,929
you know him he stated this at the

00:19:19,399 --> 00:19:21,740
religious conference I don't know this

00:19:20,929 --> 00:19:25,309
conference at all

00:19:21,740 --> 00:19:31,090
to alter a web components you'll need a

00:19:25,309 --> 00:19:35,380
library remember you will need a library

00:19:31,090 --> 00:19:38,779
and now you Mac might be asking right so

00:19:35,380 --> 00:19:40,880
what's your problem and what's the

00:19:38,779 --> 00:19:44,750
problem using a library so there are

00:19:40,880 --> 00:19:47,500
various issues issue number one you will

00:19:44,750 --> 00:19:52,340
need to learn another framework or

00:19:47,500 --> 00:19:55,519
another set of api's right the second

00:19:52,340 --> 00:19:59,090
thing there is this promise of zero run

00:19:55,519 --> 00:20:02,210
time because use the platform right well

00:19:59,090 --> 00:20:05,029
if use the library we have a dependency

00:20:02,210 --> 00:20:10,779
so basically the runtime is kind of

00:20:05,029 --> 00:20:13,420
oxymoron to elaborate a little bit more

00:20:10,779 --> 00:20:17,890
let's take a look at some numbers

00:20:13,420 --> 00:20:20,410
here we have some very like popular web

00:20:17,890 --> 00:20:23,590
component libraries with some payload

00:20:20,410 --> 00:20:26,679
sizes that they come with so we have lit

00:20:23,590 --> 00:20:28,750
HTM lead element which has also seven

00:20:26,679 --> 00:20:30,970
almost seven kilobytes minified gzip

00:20:28,750 --> 00:20:35,040
then we have Haunted library which has

00:20:30,970 --> 00:20:39,309
five kilobytes and xTag 6.5 kilobytes

00:20:35,040 --> 00:20:42,640
okay so what so let's consider consider

00:20:39,309 --> 00:20:46,450
this again very contrived example you

00:20:42,640 --> 00:20:50,020
have some HTML page right and this page

00:20:46,450 --> 00:20:51,610
is using six web components and every of

00:20:50,020 --> 00:20:54,760
those components is using different

00:20:51,610 --> 00:20:55,870
library right and because web component

00:20:54,760 --> 00:20:58,480
needs to be encapsulated in

00:20:55,870 --> 00:21:01,210
plug-and-play they need to be bundled

00:20:58,480 --> 00:21:03,850
with those particle libraries and if you

00:21:01,210 --> 00:21:05,820
are going to do some math for these six

00:21:03,850 --> 00:21:11,200
web components we got almost 40

00:21:05,820 --> 00:21:16,030
kilobytes JavaScript right that's more

00:21:11,200 --> 00:21:18,460
than reactive Dom of course you need to

00:21:16,030 --> 00:21:21,309
add the implementation size etc etc so

00:21:18,460 --> 00:21:26,470
that's that's my main primary issue with

00:21:21,309 --> 00:21:26,860
libraries zero runtime is a myth another

00:21:26,470 --> 00:21:30,640
issue

00:21:26,860 --> 00:21:33,910
SVG you cannot use web components to

00:21:30,640 --> 00:21:36,910
encapsulate parts of SVG because SVG has

00:21:33,910 --> 00:21:39,910
a separate namespace so everything

00:21:36,910 --> 00:21:41,860
outside is ignored easy if you wanna

00:21:39,910 --> 00:21:45,130
learn more there is a link with a whole

00:21:41,860 --> 00:21:48,880
Twitter feed so check it out now the

00:21:45,130 --> 00:21:52,440
issue forms I mean who is using forms

00:21:48,880 --> 00:21:56,980
right anybody is using forms in the room

00:21:52,440 --> 00:22:00,360
no one person to haha come on you are

00:21:56,980 --> 00:22:03,309
lying all right

00:22:00,360 --> 00:22:05,169
so again there are various issues with

00:22:03,309 --> 00:22:08,890
forms and web components caused by

00:22:05,169 --> 00:22:12,580
shadow Dom for instance you have brought

00:22:08,890 --> 00:22:14,620
in standard form submit thankfully half

00:22:12,580 --> 00:22:16,360
the folks from the standards know about

00:22:14,620 --> 00:22:18,880
this issue and there is a huge proposal

00:22:16,360 --> 00:22:21,100
document to mitigate this issue again

00:22:18,880 --> 00:22:24,450
there are no ETS but hopefully it's

00:22:21,100 --> 00:22:24,450
going to be fixed soon

00:22:24,519 --> 00:22:34,129
last issue service surrendering so there

00:22:30,169 --> 00:22:37,039
was this light at the end of the shadow

00:22:34,129 --> 00:22:40,399
Dom tunnel called declarative shadow Dom

00:22:37,039 --> 00:22:42,710
it's an awesome proposal which would

00:22:40,399 --> 00:22:45,379
basically allow you to define all these

00:22:42,710 --> 00:22:47,239
shadow roots declaratively and with that

00:22:45,379 --> 00:22:51,799
server-side rendering would just work

00:22:47,239 --> 00:22:58,149
without any tooling at all but well this

00:22:51,799 --> 00:23:00,229
proposal was declined very sad

00:22:58,149 --> 00:23:02,359
anyways server-side rendering is still

00:23:00,229 --> 00:23:04,549
possible you need to build some PI point

00:23:02,359 --> 00:23:12,470
around it we put it here or you can use

00:23:04,549 --> 00:23:16,330
skate /s s our library cool so as we saw

00:23:12,470 --> 00:23:19,369
web components have pros and goes but I

00:23:16,330 --> 00:23:25,039
wanted to say is that all these pros and

00:23:19,369 --> 00:23:30,279
cons can be achieved today without web

00:23:25,039 --> 00:23:34,009
components right even that zero runtime

00:23:30,279 --> 00:23:36,139
promise is almost possible without web

00:23:34,009 --> 00:23:38,289
components with very small libraries

00:23:36,139 --> 00:23:41,210
like react or svelte

00:23:38,289 --> 00:23:46,369
which is a compiler that compiles to

00:23:41,210 --> 00:23:49,849
very efficient low-level JavaScript so

00:23:46,369 --> 00:23:54,009
now you might be asking dude your hater

00:23:49,849 --> 00:23:54,009
right we should ditch web components

00:23:54,609 --> 00:23:58,639
absolutely not

00:23:56,029 --> 00:24:03,190
they are here to stay as will react

00:23:58,639 --> 00:24:07,700
angular you and other popular frameworks

00:24:03,190 --> 00:24:10,970
ok the question is should you learn web

00:24:07,700 --> 00:24:13,570
components absolutely right it's just

00:24:10,970 --> 00:24:15,470
another skill set in your two books and

00:24:13,570 --> 00:24:18,109
because web components are tightly

00:24:15,470 --> 00:24:21,049
coupled to Dom which is expanding your

00:24:18,109 --> 00:24:24,609
knowledge about how that works so it's

00:24:21,049 --> 00:24:32,179
learning to go for it last question

00:24:24,609 --> 00:24:35,850
should you use web components well that

00:24:32,179 --> 00:24:39,580
depends on your particular use case

00:24:35,850 --> 00:24:46,120
so in my career I found few use cases

00:24:39,580 --> 00:24:49,540
when it's a good good idea to use up

00:24:46,120 --> 00:24:51,220
components let me go through those if

00:24:49,540 --> 00:24:53,560
you're implementing design systems I

00:24:51,220 --> 00:24:57,130
need to support teams with various

00:24:53,560 --> 00:24:59,830
frameworks web components are excellent

00:24:57,130 --> 00:25:02,050
choice if you just wanna build plug-ins

00:24:59,830 --> 00:25:05,730
for WordPress or traditional server and

00:25:02,050 --> 00:25:08,140
pages again web components good choice

00:25:05,730 --> 00:25:09,850
if you're implementing micro front ends

00:25:08,140 --> 00:25:12,180
and when I have this strong

00:25:09,850 --> 00:25:15,580
encapsulation between those various apps

00:25:12,180 --> 00:25:18,520
again web components are a very viable

00:25:15,580 --> 00:25:21,700
choice and last but not least if you are

00:25:18,520 --> 00:25:25,930
migrating for angularjs to angular also

00:25:21,700 --> 00:25:27,280
consider using web components and if

00:25:25,930 --> 00:25:29,770
you're really gonna use that components

00:25:27,280 --> 00:25:34,210
I recommend three ways how to implement

00:25:29,770 --> 00:25:35,950
those number one the best way just use

00:25:34,210 --> 00:25:40,270
your framework right

00:25:35,950 --> 00:25:44,440
currently angular swelled and UJS can

00:25:40,270 --> 00:25:46,480
compile the web components also if you

00:25:44,440 --> 00:25:48,640
want to go really into web components

00:25:46,480 --> 00:25:51,030
consider using stencil which is a

00:25:48,640 --> 00:25:53,950
compiler that uses web components and

00:25:51,030 --> 00:25:57,010
compiles to panel other components very

00:25:53,950 --> 00:25:58,990
very optimized way and soon enough folks

00:25:57,010 --> 00:26:01,540
from stencil team are gonna open source

00:25:58,990 --> 00:26:05,080
that the compiler will be able to

00:26:01,540 --> 00:26:06,790
compile to angular components and react

00:26:05,080 --> 00:26:10,360
components so that's a very powerful

00:26:06,790 --> 00:26:13,510
feature indeed and number three if you

00:26:10,360 --> 00:26:16,150
have the skill and courage just use the

00:26:13,510 --> 00:26:21,850
raw web components and vanilla

00:26:16,150 --> 00:26:26,320
JavaScript all right we're almost at the

00:26:21,850 --> 00:26:28,690
end so let's recap so at the beginning

00:26:26,320 --> 00:26:31,750
of this presentation there was this

00:26:28,690 --> 00:26:36,460
quote web components we replace your

00:26:31,750 --> 00:26:38,890
front-end framework right so I don't

00:26:36,460 --> 00:26:41,710
think so that's the truth statement it's

00:26:38,890 --> 00:26:45,010
kind of myth they are here you can use

00:26:41,710 --> 00:26:46,590
them or not but you don't have to be

00:26:45,010 --> 00:26:48,910
intimidated that oh no

00:26:46,590 --> 00:26:50,410
since tomorrow I need to learn

00:26:48,910 --> 00:26:55,690
web components they start rewriting

00:26:50,410 --> 00:26:58,480
everything not at all as I used to say

00:26:55,690 --> 00:27:01,330
use the right tool for the right job if

00:26:58,480 --> 00:27:03,550
you wanna use up components go for it if

00:27:01,330 --> 00:27:04,060
your team wants these web components go

00:27:03,550 --> 00:27:08,850
for it

00:27:04,060 --> 00:27:13,180
no worries all right before I wrap up

00:27:08,850 --> 00:27:15,610
let me remind you about one thing the

00:27:13,180 --> 00:27:20,790
only change is Const

00:27:15,610 --> 00:27:23,740
and remember respect is everything

00:27:20,790 --> 00:27:26,160
thanks for having me and enjoy the rest

00:27:23,740 --> 00:27:26,160
of the conference

00:27:26,310 --> 00:27:30,480
[Applause]

00:27:30,920 --> 00:27:38,599

YouTube URL: https://www.youtube.com/watch?v=mYGEBuq1ppI


