Title: Mozilla Security Research Summit 2019 - The path to tracking protection for every user
Publication date: 2019-06-24
Playlist: 2019 SF Security Research Summit
Description: 
	Steven Englehardt - Not all third parties are equal: The path to tracking protection for every user

Talk from the 2019 SF Security Research Summit (https://events.mozilla.org/moz2019securityresearchsummit). This event is part of the Security Engineering University Relationship Framework (SURF) initiative, which aims to increase collaboration between Mozilla and the academic community. We would like to leverage academic talent to help explore security and privacy research problems, and to strengthen Mozilla's ties to the academic community. Mozilla security engineers aim to actively participate in the research community through thesis supervision, collaborations, placements and Mozilla-hosted security summits. For more info see: https://surf.mozilla.org/

Slides: https://drive.google.com/open?id=1CXvOT0srj-L1iSaMM8whsufWS1UVlGxh
Captions: 
	00:00:00,260 --> 00:00:05,730
so today I want to give kind of an

00:00:02,550 --> 00:00:08,250
update on the ante tracking stuff that

00:00:05,730 --> 00:00:11,179
we're doing in Firefox point out things

00:00:08,250 --> 00:00:14,280
that we aren't exactly sure what to do

00:00:11,179 --> 00:00:15,690
for a couple things and kind of pose

00:00:14,280 --> 00:00:19,460
that as hey this would be awesome to

00:00:15,690 --> 00:00:21,359
have input on so to get started I

00:00:19,460 --> 00:00:23,519
probably don't need to convince many

00:00:21,359 --> 00:00:25,080
folks here that the web needs some type

00:00:23,519 --> 00:00:26,640
of default on tracking protection but I

00:00:25,080 --> 00:00:29,039
like to show a slide like this just in

00:00:26,640 --> 00:00:30,359
case because it shows how horrible

00:00:29,039 --> 00:00:30,869
things are right you connect to four

00:00:30,359 --> 00:00:32,730
websites

00:00:30,869 --> 00:00:34,649
and there's 300 different third parties

00:00:32,730 --> 00:00:36,840
that almost 300 right that you're

00:00:34,649 --> 00:00:38,430
connecting to and right now in most

00:00:36,840 --> 00:00:39,989
browsers there's not really much

00:00:38,430 --> 00:00:41,219
stopping them from tracking you right if

00:00:39,989 --> 00:00:42,930
they choose to set a unique cookie they

00:00:41,219 --> 00:00:44,309
can do that and they can track you

00:00:42,930 --> 00:00:46,200
across websites if they happen to be

00:00:44,309 --> 00:00:49,260
embedded on more than one which many are

00:00:46,200 --> 00:00:50,520
and it's not really just cookie tracking

00:00:49,260 --> 00:00:52,440
that's a problem right there's kind of

00:00:50,520 --> 00:00:53,940
three classes of tracking that I like to

00:00:52,440 --> 00:00:55,289
think about one is like browser State

00:00:53,940 --> 00:00:57,180
right actually setting an identifier on

00:00:55,289 --> 00:00:59,100
the browser the next is browser

00:00:57,180 --> 00:01:00,719
fingerprinting IP address all these

00:00:59,100 --> 00:01:02,640
stateless identifiers you can use to

00:01:00,719 --> 00:01:04,530
identify the browser and the third is

00:01:02,640 --> 00:01:07,110
identity and so I'll quickly talk

00:01:04,530 --> 00:01:08,640
through these three areas and what

00:01:07,110 --> 00:01:11,729
Firefox is doing in each of them and

00:01:08,640 --> 00:01:13,619
where we could use some help and I also

00:01:11,729 --> 00:01:15,439
want to make the point that these two

00:01:13,619 --> 00:01:18,990
areas are kind of the only place we can

00:01:15,439 --> 00:01:20,610
control tracking with identity and this

00:01:18,990 --> 00:01:21,990
is the example there is like collecting

00:01:20,610 --> 00:01:23,759
someone's email address and using that

00:01:21,990 --> 00:01:25,590
as the identifier as opposed to

00:01:23,759 --> 00:01:27,570
generating a random one right it's hard

00:01:25,590 --> 00:01:29,369
for us to control that because email

00:01:27,570 --> 00:01:31,259
addresses go everywhere and they should

00:01:29,369 --> 00:01:32,579
you know if someone's signing up for a

00:01:31,259 --> 00:01:36,270
mailing list it should go to a first

00:01:32,579 --> 00:01:38,700
party so we have limited ability to

00:01:36,270 --> 00:01:40,049
influence that those areas but let's

00:01:38,700 --> 00:01:41,130
start with cookies right and the first

00:01:40,049 --> 00:01:42,869
thing you might think is let's just

00:01:41,130 --> 00:01:45,990
block all third party cookies well we

00:01:42,869 --> 00:01:48,450
did try that and then in May 2013 and we

00:01:45,990 --> 00:01:50,189
postponed it and now it's six years

00:01:48,450 --> 00:01:52,170
later and it's still postponed but we're

00:01:50,189 --> 00:01:53,430
hoping to change that and I'll talk

00:01:52,170 --> 00:01:56,640
about the things we're doing to change

00:01:53,430 --> 00:01:58,110
that but we wanted to look back at that

00:01:56,640 --> 00:01:59,610
and say hey can we actually just block

00:01:58,110 --> 00:02:01,829
all third party cookies right can we do

00:01:59,610 --> 00:02:04,320
that and as I mentioned before we have

00:02:01,829 --> 00:02:05,909
the ability to run studies so we were

00:02:04,320 --> 00:02:07,409
able to actually run a study on this now

00:02:05,909 --> 00:02:09,840
and what I'm showing here is a

00:02:07,409 --> 00:02:11,760
comparison of a group of users that had

00:02:09,840 --> 00:02:13,440
all third party cookies blocked and a

00:02:11,760 --> 00:02:15,810
group of users that didn't have

00:02:13,440 --> 00:02:17,370
blocking right and what we saw was for

00:02:15,810 --> 00:02:19,800
the users with all third parties cookies

00:02:17,370 --> 00:02:21,660
blocked just over a one to two week

00:02:19,800 --> 00:02:23,100
period as people were ramping up and

00:02:21,660 --> 00:02:25,860
getting into the study

00:02:23,100 --> 00:02:28,650
there was a 1% drop in a number of and

00:02:25,860 --> 00:02:30,540
active users for that branch in general

00:02:28,650 --> 00:02:32,400
right and then there was two to five

00:02:30,540 --> 00:02:34,530
percent drop in users who were active

00:02:32,400 --> 00:02:36,630
for more than ten hours and so that was

00:02:34,530 --> 00:02:38,460
so significant that we just turned off

00:02:36,630 --> 00:02:40,350
that cohort immediately as soon as we

00:02:38,460 --> 00:02:42,420
did that first analysis and so

00:02:40,350 --> 00:02:43,920
essentially we're bleeding users if we

00:02:42,420 --> 00:02:46,020
block all third party cookies we know we

00:02:43,920 --> 00:02:47,910
can't do that but what we could do

00:02:46,020 --> 00:02:49,740
perhaps is block tracking cookies and

00:02:47,910 --> 00:02:52,110
I'll talk about that but what we see

00:02:49,740 --> 00:02:54,870
here in that green line on the graph is

00:02:52,110 --> 00:02:56,760
we actually didn't really affect active

00:02:54,870 --> 00:02:58,050
hours for blocking tracking cookies and

00:02:56,760 --> 00:03:00,330
so I'll go into that a little bit more

00:02:58,050 --> 00:03:02,430
detail but the core problem right the

00:03:00,330 --> 00:03:05,160
reason we lost so many users is that

00:03:02,430 --> 00:03:07,080
this one identifier one storage location

00:03:05,160 --> 00:03:08,790
used for basically everything that a

00:03:07,080 --> 00:03:10,590
website might want to do right

00:03:08,790 --> 00:03:12,750
cross-site tracking which is something

00:03:10,590 --> 00:03:14,250
we we really don't want to happen but

00:03:12,750 --> 00:03:16,260
also things like add performance

00:03:14,250 --> 00:03:18,209
measurement federated login first party

00:03:16,260 --> 00:03:20,730
login fraud detection CAPTCHA device

00:03:18,209 --> 00:03:22,770
recognition right analytics and so many

00:03:20,730 --> 00:03:24,390
more and so if you just block all third

00:03:22,770 --> 00:03:27,930
party cookies you block a bunch of these

00:03:24,390 --> 00:03:29,700
and things break and so the kind of new

00:03:27,930 --> 00:03:31,380
approach that we're taking is it needs

00:03:29,700 --> 00:03:33,420
to be on by default we don't want users

00:03:31,380 --> 00:03:35,459
to have to understand that there's a

00:03:33,420 --> 00:03:37,140
threat out there and how to to say you

00:03:35,459 --> 00:03:38,850
like understand what cookies are and

00:03:37,140 --> 00:03:40,260
know that they should disable them if

00:03:38,850 --> 00:03:42,540
they just want a private experience on

00:03:40,260 --> 00:03:43,890
the web like that's not what Mozilla

00:03:42,540 --> 00:03:47,220
stands for right that it's kind of

00:03:43,890 --> 00:03:48,900
against the mission we want to block

00:03:47,220 --> 00:03:50,280
trackers and maybe we don't block the

00:03:48,900 --> 00:03:52,350
tracking techniques and a good example

00:03:50,280 --> 00:03:53,700
is fingerprinting it's really hard to

00:03:52,350 --> 00:03:55,260
change the browser to not be

00:03:53,700 --> 00:03:56,760
fingerprinted all but what if we just

00:03:55,260 --> 00:03:58,170
blocked the finger printers and I'll

00:03:56,760 --> 00:04:00,780
talk a little bit more about that and

00:03:58,170 --> 00:04:02,520
then not breaking experiences users care

00:04:00,780 --> 00:04:05,790
about because as I pointed out if we do

00:04:02,520 --> 00:04:07,350
that we lose a lot of users and so the

00:04:05,790 --> 00:04:09,180
first thing we did was we published an

00:04:07,350 --> 00:04:10,920
anti tracking policy that basically said

00:04:09,180 --> 00:04:13,410
these are the things that might end up

00:04:10,920 --> 00:04:15,570
with you being blocked or downgraded in

00:04:13,410 --> 00:04:17,040
some way in Firefox and basically

00:04:15,570 --> 00:04:18,510
participating in cross-site tracking

00:04:17,040 --> 00:04:20,370
whether it's cookie based or you're a

00:04:18,510 --> 00:04:21,989
parameter based and I won't be able to

00:04:20,370 --> 00:04:23,280
go into that during the talk but I have

00:04:21,989 --> 00:04:25,320
some backup sides if people are

00:04:23,280 --> 00:04:27,630
interested and then browser

00:04:25,320 --> 00:04:30,970
fingerprinting or super cookie use it

00:04:27,630 --> 00:04:32,770
so let's start with browser state well

00:04:30,970 --> 00:04:34,510
like I said before rather than trying to

00:04:32,770 --> 00:04:36,580
block all third-party cookies what if we

00:04:34,510 --> 00:04:38,860
just blocked tracking cookies and we

00:04:36,580 --> 00:04:41,080
defined trackers by parties that are on

00:04:38,860 --> 00:04:44,160
the disconnect block list disconnect

00:04:41,080 --> 00:04:46,810
does a policy review of seeing does this

00:04:44,160 --> 00:04:50,080
privacy policy allow a third party to

00:04:46,810 --> 00:04:52,270
collect data share data and so on and so

00:04:50,080 --> 00:04:54,820
we have a list of about 2,500 tracking

00:04:52,270 --> 00:04:56,170
domains and we block everything that's

00:04:54,820 --> 00:04:57,810
on this list which you probably can't

00:04:56,170 --> 00:05:00,630
read and it's okay it's a lot of things

00:04:57,810 --> 00:05:05,410
but it's things like local storage

00:05:00,630 --> 00:05:07,930
cookies broadcast service workers and so

00:05:05,410 --> 00:05:09,760
on as well as connections right so we

00:05:07,930 --> 00:05:12,190
prevent TLS session tickets from being

00:05:09,760 --> 00:05:14,850
reused we prevent connection reuse so

00:05:12,190 --> 00:05:17,380
kind of any way that a tracker could

00:05:14,850 --> 00:05:19,090
track you across to top-level domains

00:05:17,380 --> 00:05:20,350
we're trying to remove that when we say

00:05:19,090 --> 00:05:23,950
block cookies right and we generally

00:05:20,350 --> 00:05:25,180
just say blocking cookies but we still

00:05:23,950 --> 00:05:27,460
run into this problem that I mentioned

00:05:25,180 --> 00:05:30,250
before that some of this even for those

00:05:27,460 --> 00:05:32,560
2,500 domains the cookies are still dual

00:05:30,250 --> 00:05:34,540
use and the the good examples to give

00:05:32,560 --> 00:05:35,980
our Google and Facebook right they have

00:05:34,540 --> 00:05:38,380
tracking cookies on their main domains

00:05:35,980 --> 00:05:40,630
and they also provide login that users

00:05:38,380 --> 00:05:42,010
care about but kind of the insight we

00:05:40,630 --> 00:05:43,750
had when thinking about this is that

00:05:42,010 --> 00:05:45,760
users also interact with those services

00:05:43,750 --> 00:05:47,740
so someone's going to go and click on a

00:05:45,760 --> 00:05:50,169
continue with Facebook or can can you

00:05:47,740 --> 00:05:51,730
continue with Google button and what we

00:05:50,169 --> 00:05:54,040
can do is when we see that click happen

00:05:51,730 --> 00:05:56,050
at least during the ramp-up period we

00:05:54,040 --> 00:05:57,550
can automatically grant access as soon

00:05:56,050 --> 00:06:00,160
as we see the click and I don't have

00:05:57,550 --> 00:06:01,750
time to go into the details the links on

00:06:00,160 --> 00:06:05,080
the bottom of the slides here can you

00:06:01,750 --> 00:06:07,540
can dig in if you want but basically we

00:06:05,080 --> 00:06:08,980
then unblock google.com for example in

00:06:07,540 --> 00:06:10,930
this example if someone's interacting

00:06:08,980 --> 00:06:12,280
with them but only on the page when

00:06:10,930 --> 00:06:13,780
which they interacted so it really

00:06:12,280 --> 00:06:15,700
limits the scope of tracking we don't

00:06:13,780 --> 00:06:17,230
just unblock them everywhere we block it

00:06:15,700 --> 00:06:17,700
where they've attempted attempted to

00:06:17,230 --> 00:06:19,780
login

00:06:17,700 --> 00:06:22,780
we unblock it where they have attempted

00:06:19,780 --> 00:06:24,460
to login but really we want to move away

00:06:22,780 --> 00:06:27,040
from this like automatic kind of

00:06:24,460 --> 00:06:28,210
heuristic style of granting access and

00:06:27,040 --> 00:06:30,820
move to something a little bit more

00:06:28,210 --> 00:06:32,740
programmatic and for that Apple actually

00:06:30,820 --> 00:06:34,660
proposed the storage access API and

00:06:32,740 --> 00:06:36,400
we've implemented it and basically it

00:06:34,660 --> 00:06:38,740
allows an embedded party when they

00:06:36,400 --> 00:06:40,960
receive interaction to say I'd actually

00:06:38,740 --> 00:06:42,580
like access to my main cookie jar so I

00:06:40,960 --> 00:06:46,630
can have the users authentication

00:06:42,580 --> 00:06:47,830
cookies for example and we've seen

00:06:46,630 --> 00:06:51,430
adoption of it already

00:06:47,830 --> 00:06:53,530
so from large parties so Amazon pay uses

00:06:51,430 --> 00:06:55,479
it right now Facebook is using it for

00:06:53,530 --> 00:06:57,580
their embedded commenting probably other

00:06:55,479 --> 00:06:58,960
embedded Facebook things these are just

00:06:57,580 --> 00:07:01,030
the two examples we know about so that's

00:06:58,960 --> 00:07:02,710
awesome to see and that's allowing us

00:07:01,030 --> 00:07:04,870
hopefully in the future will allow us to

00:07:02,710 --> 00:07:06,460
kind of expand the set of cookies that

00:07:04,870 --> 00:07:09,490
were blocking and remove those

00:07:06,460 --> 00:07:10,720
heuristics that I talked about but what

00:07:09,490 --> 00:07:13,330
does it mean to request storage access

00:07:10,720 --> 00:07:15,640
well that varies based on browser in

00:07:13,330 --> 00:07:18,070
Safari I believe they prompt on every

00:07:15,640 --> 00:07:19,600
request assuming the party had the party

00:07:18,070 --> 00:07:22,210
making the request had been visited

00:07:19,600 --> 00:07:23,710
before so it prevents you know some

00:07:22,210 --> 00:07:25,570
random third party who you don't

00:07:23,710 --> 00:07:27,190
actually want to interact with from

00:07:25,570 --> 00:07:29,260
making a request just because they click

00:07:27,190 --> 00:07:30,460
jack that you know they just you know

00:07:29,260 --> 00:07:34,479
grabbed your click when you made it

00:07:30,460 --> 00:07:36,010
click on something else we don't like to

00:07:34,479 --> 00:07:38,289
prompt because we don't really know if

00:07:36,010 --> 00:07:39,760
users will understand this so what we're

00:07:38,289 --> 00:07:41,919
doing right now is having heuristics

00:07:39,760 --> 00:07:44,410
where we have an automatic set of grants

00:07:41,919 --> 00:07:46,479
on up to five sites or and it can go a

00:07:44,410 --> 00:07:48,550
little bit higher and the basic idea

00:07:46,479 --> 00:07:50,320
there being something like Amazon pay

00:07:48,550 --> 00:07:52,419
we're not you're not going to be logging

00:07:50,320 --> 00:07:54,370
in or paying with Amazon on more than

00:07:52,419 --> 00:07:56,410
five domains in a session most likely so

00:07:54,370 --> 00:07:57,700
if your amazon pay you know you'll just

00:07:56,410 --> 00:07:59,470
work and the users won't see anything

00:07:57,700 --> 00:08:01,450
but if you are a tracker who wants to

00:07:59,470 --> 00:08:03,400
track on every single page and you're

00:08:01,450 --> 00:08:05,289
trying to get users to you're trying to

00:08:03,400 --> 00:08:07,720
track users using this API then users

00:08:05,289 --> 00:08:09,520
will start seeing this prompt so it's

00:08:07,720 --> 00:08:11,620
not perfect and we love a better way to

00:08:09,520 --> 00:08:14,380
say do login where login doesn't cause

00:08:11,620 --> 00:08:18,400
these prompts to appear but we don't

00:08:14,380 --> 00:08:20,919
have that just yet so moving on to I P

00:08:18,400 --> 00:08:22,570
address stateless tracking I'm gonna

00:08:20,919 --> 00:08:24,160
focus on device fingerprinting so if

00:08:22,570 --> 00:08:26,650
you're not familiar with that the idea

00:08:24,160 --> 00:08:28,240
is instead of a tracker setting a cookie

00:08:26,650 --> 00:08:30,490
on the device that has a unique

00:08:28,240 --> 00:08:33,070
identifier in it the tracker could read

00:08:30,490 --> 00:08:34,419
the properties from the device and this

00:08:33,070 --> 00:08:35,770
is just giving an example of the type of

00:08:34,419 --> 00:08:37,800
properties they could read right it

00:08:35,770 --> 00:08:40,300
could be your fonts it could be your

00:08:37,800 --> 00:08:42,610
screen resolution and they can even draw

00:08:40,300 --> 00:08:44,740
things to canvas and hash that and use

00:08:42,610 --> 00:08:46,600
that as part of an identifier alright so

00:08:44,740 --> 00:08:48,880
all of these various things you know

00:08:46,600 --> 00:08:49,990
using all the various web api's and just

00:08:48,880 --> 00:08:51,760
teasing out an additional amount of

00:08:49,990 --> 00:08:53,610
entropy from each of them and so fixing

00:08:51,760 --> 00:08:55,920
all the API is is pretty hard

00:08:53,610 --> 00:08:57,840
and what we're seeing is that

00:08:55,920 --> 00:09:00,360
fingerprinting use is still growing so

00:08:57,840 --> 00:09:03,120
back in 2016 when I measured this with

00:09:00,360 --> 00:09:05,910
my former advisor we found that it was

00:09:03,120 --> 00:09:09,180
1.6 percent of the top million sites had

00:09:05,910 --> 00:09:10,650
finger printers embedded know that in

00:09:09,180 --> 00:09:12,810
more recent measurements that's up to

00:09:10,650 --> 00:09:14,280
3.8 percent and actually when we look at

00:09:12,810 --> 00:09:15,900
the top thousand sites in that

00:09:14,280 --> 00:09:18,770
measurement we see it on something like

00:09:15,900 --> 00:09:21,210
10 to 12 percent of them so this is

00:09:18,770 --> 00:09:22,770
something that users are experiencing

00:09:21,210 --> 00:09:24,990
every single day right as they're

00:09:22,770 --> 00:09:26,490
browsing they're being fingerprinted so

00:09:24,990 --> 00:09:28,380
we want to do something about that even

00:09:26,490 --> 00:09:30,510
if we can't fix all the fingerprinting

00:09:28,380 --> 00:09:32,340
that's happening on the web and so what

00:09:30,510 --> 00:09:34,050
we've done is we have fingerprinting

00:09:32,340 --> 00:09:36,360
protection now built into content

00:09:34,050 --> 00:09:38,040
blocking which is our general kind of

00:09:36,360 --> 00:09:40,620
blocking trackers blocking tracking

00:09:38,040 --> 00:09:42,840
cookies feature and it's available in

00:09:40,620 --> 00:09:44,730
Firefox 67 which just shipped to users

00:09:42,840 --> 00:09:46,440
but it's also on by default and Firefox

00:09:44,730 --> 00:09:47,700
nightly like I mentioned if you use

00:09:46,440 --> 00:09:50,190
nightly if you want to see the coolest

00:09:47,700 --> 00:09:52,470
things that we're doing and the way that

00:09:50,190 --> 00:09:54,600
we do that is we crawl the web and we

00:09:52,470 --> 00:09:57,360
use technican of heuristic based

00:09:54,600 --> 00:09:59,010
techniques to look at what calls a

00:09:57,360 --> 00:10:01,140
script is making see if they appear to

00:09:59,010 --> 00:10:02,370
be fingerprinting scripts I believe

00:10:01,140 --> 00:10:04,860
Sarah will probably go into a lot more

00:10:02,370 --> 00:10:06,780
detail on that later in her talk but

00:10:04,860 --> 00:10:08,580
basically we we kind of flag scripts as

00:10:06,780 --> 00:10:10,740
potential finger printers and then we

00:10:08,580 --> 00:10:12,900
ship that over to disconnect and say hey

00:10:10,740 --> 00:10:14,100
we think these are finger printers could

00:10:12,900 --> 00:10:15,540
you make sure that their finger printers

00:10:14,100 --> 00:10:18,090
they do a bunch of verification

00:10:15,540 --> 00:10:20,300
themselves and then we end up they end

00:10:18,090 --> 00:10:22,800
up shipping a list back to Firefox and

00:10:20,300 --> 00:10:24,540
they do an awesome job of it I'm giving

00:10:22,800 --> 00:10:26,490
an example here on the side of the slide

00:10:24,540 --> 00:10:28,020
where they do dig into scripts and make

00:10:26,490 --> 00:10:30,210
sure that they do contain fingerprinting

00:10:28,020 --> 00:10:33,020
code and they also that they do send

00:10:30,210 --> 00:10:36,390
that resulting fingerprint off to some

00:10:33,020 --> 00:10:37,830
remote location and right now that list

00:10:36,390 --> 00:10:40,710
has a hundred and thirty-eight verified

00:10:37,830 --> 00:10:42,210
finger printers and that covers 75% of

00:10:40,710 --> 00:10:44,160
the known instances from the measurement

00:10:42,210 --> 00:10:45,270
that I mentioned before of course you

00:10:44,160 --> 00:10:46,620
know we could be missing things in that

00:10:45,270 --> 00:10:48,540
measurement but of the stuff we know

00:10:46,620 --> 00:10:51,800
about we're blocking a significant

00:10:48,540 --> 00:10:54,210
portion of it by using this block list

00:10:51,800 --> 00:10:56,820
and we have had some success in not

00:10:54,210 --> 00:10:58,920
changing practices so tiny MCE is an

00:10:56,820 --> 00:11:00,540
example of an HTML editor

00:10:58,920 --> 00:11:02,130
they had a fingerprinting script

00:11:00,540 --> 00:11:03,720
embedded in it once they found out about

00:11:02,130 --> 00:11:05,310
this feature they said hey we don't want

00:11:03,720 --> 00:11:06,630
to be blocked we remove the

00:11:05,310 --> 00:11:07,470
fingerprinting could you take us off the

00:11:06,630 --> 00:11:11,040
list

00:11:07,470 --> 00:11:12,840
that's cool but a challenge is a lot of

00:11:11,040 --> 00:11:15,270
anti fraud happens with fingerprinting

00:11:12,840 --> 00:11:17,100
in particular highlighting two things

00:11:15,270 --> 00:11:19,650
here stripe is on the fingerprinting

00:11:17,100 --> 00:11:21,390
list from disconnect and stripe does

00:11:19,650 --> 00:11:22,980
payment processing right if we block

00:11:21,390 --> 00:11:25,770
that payments aren't going to go through

00:11:22,980 --> 00:11:27,450
for users see if science does account

00:11:25,770 --> 00:11:29,370
defense and also payment processing

00:11:27,450 --> 00:11:30,750
defense so again if we block that it's

00:11:29,370 --> 00:11:33,180
going to cause problems in a specific

00:11:30,750 --> 00:11:35,160
example is we were blocking Arcos labs

00:11:33,180 --> 00:11:36,420
CAPTCHA because they were doing

00:11:35,160 --> 00:11:38,850
fingerprinting as part of the CAPTCHA

00:11:36,420 --> 00:11:40,260
and any user who had that block turned

00:11:38,850 --> 00:11:42,420
on wouldn't have been able to sign up to

00:11:40,260 --> 00:11:44,550
github so like massive amounts of

00:11:42,420 --> 00:11:46,560
breakage where I can imagine that graph

00:11:44,550 --> 00:11:50,070
not just being two to five percent of

00:11:46,560 --> 00:11:52,380
users leaving and so my request for the

00:11:50,070 --> 00:11:54,360
audience here is a safer way to do anti

00:11:52,380 --> 00:11:57,510
fraud if you're familiar with the

00:11:54,360 --> 00:11:59,070
privacy press project I think it is a

00:11:57,510 --> 00:12:01,170
nice step in that direction and I would

00:11:59,070 --> 00:12:02,820
love to see more things like that that

00:12:01,170 --> 00:12:05,400
allow anti-fraud providers to move to

00:12:02,820 --> 00:12:07,200
safer techniques to preventing fraud and

00:12:05,400 --> 00:12:09,360
not just relying on a global identifier

00:12:07,200 --> 00:12:12,960
that can collect data in any way they

00:12:09,360 --> 00:12:15,690
wish and lastly I want to talk about

00:12:12,960 --> 00:12:18,030
identity and why we can't where we

00:12:15,690 --> 00:12:21,120
struggle to prevent identity based

00:12:18,030 --> 00:12:23,280
tracking so to give an idea of actually

00:12:21,120 --> 00:12:25,080
what identity based tracking is let's

00:12:23,280 --> 00:12:27,660
say I'm on this social dot example

00:12:25,080 --> 00:12:29,280
website they embed into the main context

00:12:27,660 --> 00:12:32,220
in the page the mainframe they embed a

00:12:29,280 --> 00:12:33,690
script from tracker dot example and they

00:12:32,220 --> 00:12:35,070
also have a mailing list sign up right

00:12:33,690 --> 00:12:36,390
you put in your email you're just trying

00:12:35,070 --> 00:12:37,710
to sign up for this social website

00:12:36,390 --> 00:12:39,540
everything's good

00:12:37,710 --> 00:12:40,920
but then the tracking script says oh

00:12:39,540 --> 00:12:43,290
okay there's an email in that box now

00:12:40,920 --> 00:12:45,030
let's grab it and then send it back to

00:12:43,290 --> 00:12:48,090
ourselves and then share it with other

00:12:45,030 --> 00:12:50,370
folks and so we see the sending of this

00:12:48,090 --> 00:12:52,890
we see sent we see emails being sent to

00:12:50,370 --> 00:12:55,020
third parties I can link you to some

00:12:52,890 --> 00:12:56,580
research on that so we know that this is

00:12:55,020 --> 00:12:57,780
happening and of course once third

00:12:56,580 --> 00:12:59,370
parties have it we don't know what they

00:12:57,780 --> 00:13:01,380
do with it but it would be very easy to

00:12:59,370 --> 00:13:03,510
share and sometimes this happens in

00:13:01,380 --> 00:13:05,490
hashed form but hashed emails are kind

00:13:03,510 --> 00:13:08,520
of just as good of an identifier as and

00:13:05,490 --> 00:13:10,350
plaintext so what we could do in Firefox

00:13:08,520 --> 00:13:12,450
is block that script right now we fixed

00:13:10,350 --> 00:13:14,820
the problem we don't have to worry about

00:13:12,450 --> 00:13:16,830
it anymore but the problem is there's

00:13:14,820 --> 00:13:19,830
nothing stopping it from just moving to

00:13:16,830 --> 00:13:21,180
this right a PII based tracking does not

00:13:19,830 --> 00:13:23,580
use device identifier

00:13:21,180 --> 00:13:24,360
so there's essentially nothing we can do

00:13:23,580 --> 00:13:27,960
to stop it

00:13:24,360 --> 00:13:29,550
right if this des site chose to send the

00:13:27,960 --> 00:13:31,140
email back to themselves and then run an

00:13:29,550 --> 00:13:33,000
ad auction on the back end based on that

00:13:31,140 --> 00:13:35,070
they could do it right there's nothing

00:13:33,000 --> 00:13:37,650
stopping them and we would just see okay

00:13:35,070 --> 00:13:40,140
this user sign up for a mailing list and

00:13:37,650 --> 00:13:42,330
so solutions to prevent this if anyone

00:13:40,140 --> 00:13:46,050
has ideas we would love to hear them

00:13:42,330 --> 00:13:48,210
we're thinking about it as well and so

00:13:46,050 --> 00:13:52,140
my ask for you is kind of in summary is

00:13:48,210 --> 00:13:54,120
help us find better technical ways to do

00:13:52,140 --> 00:13:56,580
federated login to do device reputation

00:13:54,120 --> 00:13:58,260
and anti fraud and to do ad attribution

00:13:56,580 --> 00:14:01,020
measurement and actually Google and face

00:13:58,260 --> 00:14:02,760
at Google and Apple recently released

00:14:01,020 --> 00:14:04,290
proposals to do ad attribution

00:14:02,760 --> 00:14:06,360
measurement which I didn't have time to

00:14:04,290 --> 00:14:08,730
include in the talk today

00:14:06,360 --> 00:14:10,830
help us find violations of these anti

00:14:08,730 --> 00:14:12,030
tracking policies we're looking for them

00:14:10,830 --> 00:14:13,830
and we want to add more people to the

00:14:12,030 --> 00:14:16,740
block list but if you find folks that

00:14:13,830 --> 00:14:18,090
are violating and one of our policies

00:14:16,740 --> 00:14:19,530
and we're not blocking them like let us

00:14:18,090 --> 00:14:20,820
know and we will try to do something

00:14:19,530 --> 00:14:22,980
about it

00:14:20,820 --> 00:14:25,620
and lastly help us explore some solution

00:14:22,980 --> 00:14:27,420
maybe it's a regulatory solution to

00:14:25,620 --> 00:14:28,710
prevent identity based tracking so

00:14:27,420 --> 00:14:30,640
thanks so much looking forward to

00:14:28,710 --> 00:14:34,190
chatting

00:14:30,640 --> 00:14:34,190

YouTube URL: https://www.youtube.com/watch?v=lpVM7c9-y-s


