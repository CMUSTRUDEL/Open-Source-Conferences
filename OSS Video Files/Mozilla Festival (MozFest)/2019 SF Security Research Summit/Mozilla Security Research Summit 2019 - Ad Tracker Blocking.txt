Title: Mozilla Security Research Summit 2019 - Ad Tracker Blocking
Publication date: 2019-06-24
Playlist: 2019 SF Security Research Summit
Description: 
	Umar Iqbal - Ad/Tracker Blocking

Talk from the 2019 SF Security Research Summit (https://events.mozilla.org/moz2019securityresearchsummit). This event is part of the Security Engineering University Relationship Framework (SURF) initiative, which aims to increase collaboration between Mozilla and the academic community. We would like to leverage academic talent to help explore security and privacy research problems, and to strengthen Mozilla's ties to the academic community. Mozilla security engineers aim to actively participate in the research community through thesis supervision, collaborations, placements and Mozilla-hosted security summits. For more info see: https://surf.mozilla.org/

Slides: https://drive.google.com/open?id=1zgEIxnCHprDsCJ54j8oefzqR7ywnceYA
Captions: 
	00:00:01,530 --> 00:00:05,009
and everyone my name is Zoomer

00:00:03,210 --> 00:00:06,859
I'm from unity of Iowa and I made to

00:00:05,009 --> 00:00:09,059
talk about adding tracker blocking I

00:00:06,859 --> 00:00:12,929
will start with giving an overview of

00:00:09,059 --> 00:00:13,500
life cycle event adding tracker so add

00:00:12,929 --> 00:00:15,630
sir

00:00:13,500 --> 00:00:17,490
audio-visual promotion content I will

00:00:15,630 --> 00:00:19,590
you see here right at the corner is an

00:00:17,490 --> 00:00:23,189
image but they are usually created with

00:00:19,590 --> 00:00:25,590
JavaScript which results in initiation

00:00:23,189 --> 00:00:28,710
of initiative request and that results

00:00:25,590 --> 00:00:31,710
in a markup so as a whole both Erickson

00:00:28,710 --> 00:00:35,430
trackers are combination of JavaScript

00:00:31,710 --> 00:00:39,300
HTTP and HTML in case of ads the markup

00:00:35,430 --> 00:00:42,540
is the HTML around the add image and

00:00:39,300 --> 00:00:44,910
case of trackers is mostly 1x1 pixel tag

00:00:42,540 --> 00:00:46,140
so both as an attacker here involves all

00:00:44,910 --> 00:00:50,280
three layers of the web stack with

00:00:46,140 --> 00:00:52,020
JavaScript as T TD p and sgml so now

00:00:50,280 --> 00:00:54,840
that we have studied looked at the

00:00:52,020 --> 00:00:57,539
anatomy of how action trackers work

00:00:54,840 --> 00:01:00,079
let's see what existing Fidelis use and

00:00:57,539 --> 00:01:04,379
how do they block these ads and trackers

00:01:00,079 --> 00:01:06,840
so most of the art filters use solutions

00:01:04,379 --> 00:01:08,580
use Pinterest which are crowd-sourced so

00:01:06,840 --> 00:01:11,299
users give their feedback and in the

00:01:08,580 --> 00:01:15,869
feedback is translated to rules

00:01:11,299 --> 00:01:18,990
deadlocks request at the HTTP level hide

00:01:15,869 --> 00:01:21,360
the add HTML elements and swaps

00:01:18,990 --> 00:01:23,520
execution of JavaScript that helps those

00:01:21,360 --> 00:01:25,170
ads and trackers so one important point

00:01:23,520 --> 00:01:27,960
to note here is that these solutions

00:01:25,170 --> 00:01:29,610
work at all things T latest part in a

00:01:27,960 --> 00:01:31,860
solution but previously we have seen

00:01:29,610 --> 00:01:33,720
that all the agent trackers are like

00:01:31,860 --> 00:01:35,729
combination of these three layers if

00:01:33,720 --> 00:01:36,810
they were to look at their whole context

00:01:35,729 --> 00:01:41,360
there would have been much more

00:01:36,810 --> 00:01:44,189
effective secondly this whole process is

00:01:41,360 --> 00:01:46,470
manually created which brings a lot of

00:01:44,189 --> 00:01:48,920
problems first of all the prices so on

00:01:46,470 --> 00:01:51,119
dad they're very slow they take at

00:01:48,920 --> 00:01:52,530
longest like weeks and months to add

00:01:51,119 --> 00:01:54,990
rules for and we discovered ads and

00:01:52,530 --> 00:01:57,170
trackers and secondly our prices has

00:01:54,990 --> 00:02:00,420
also shown that they are Intendant bigot

00:01:57,170 --> 00:02:03,780
thousands rules and only like 10% of

00:02:00,420 --> 00:02:04,619
those words are used and totally they're

00:02:03,780 --> 00:02:07,290
error-prone

00:02:04,619 --> 00:02:09,989
so slowness and tendency makes this

00:02:07,290 --> 00:02:12,420
Pinterest under block content so they

00:02:09,989 --> 00:02:13,620
less some let's imagine tracker sue Oro

00:02:12,420 --> 00:02:16,680
block content we score

00:02:13,620 --> 00:02:20,670
this breakage also to address these two

00:02:16,680 --> 00:02:22,920
problems we in our research we utilized

00:02:20,670 --> 00:02:25,260
the cross layer context contextual

00:02:22,920 --> 00:02:27,690
information to identify ad interacting

00:02:25,260 --> 00:02:30,959
related patterns so the basic idea is

00:02:27,690 --> 00:02:34,620
that we instrument a browser and kept it

00:02:30,959 --> 00:02:36,959
defiantly interaction details of ads the

00:02:34,620 --> 00:02:39,239
whole web page rendering which involves

00:02:36,959 --> 00:02:40,980
the creation of element attribute

00:02:39,239 --> 00:02:42,659
modification and script execution and

00:02:40,980 --> 00:02:44,489
request initiation and whole bunch of

00:02:42,659 --> 00:02:46,620
other stuff so that pool find

00:02:44,489 --> 00:02:49,109
indirection details is modeled as a

00:02:46,620 --> 00:02:51,810
graph and that we see and you see that

00:02:49,109 --> 00:02:55,650
these fine gate interaction details are

00:02:51,810 --> 00:02:56,970
actually very useful and the ad and

00:02:55,650 --> 00:02:59,480
tracking patterns stand out from the

00:02:56,970 --> 00:03:02,010
functional patterns inside those graphs

00:02:59,480 --> 00:03:05,069
we then used existing filters to label

00:03:02,010 --> 00:03:06,900
those behavioral patterns and feed those

00:03:05,069 --> 00:03:09,900
behavioral patterns to a machine

00:03:06,900 --> 00:03:11,549
learning classifier and from that

00:03:09,900 --> 00:03:14,400
machining classifier we were able to

00:03:11,549 --> 00:03:17,669
identify patterns to add in trackers and

00:03:14,400 --> 00:03:20,970
functional content one example of those

00:03:17,669 --> 00:03:22,769
patterns is that we saw that ads and

00:03:20,970 --> 00:03:24,720
trackers mostly interact with others in

00:03:22,769 --> 00:03:27,299
trackers one of a pitch and they have

00:03:24,720 --> 00:03:28,889
their own less squared it leaks whereas

00:03:27,299 --> 00:03:30,720
the functional content kind of interacts

00:03:28,889 --> 00:03:33,810
with the overall page so the key idea

00:03:30,720 --> 00:03:35,760
here is that we capture the context or

00:03:33,810 --> 00:03:37,980
the behavior of these ads in trackers

00:03:35,760 --> 00:03:41,480
and basically try to differentiate that

00:03:37,980 --> 00:03:44,190
and generalize it with machine learning

00:03:41,480 --> 00:03:46,410
we also are also planning to open source

00:03:44,190 --> 00:03:48,989
this intra meditation which can then be

00:03:46,410 --> 00:03:50,810
applied to more specific problems data

00:03:48,989 --> 00:03:55,049
trackers and some other problems as well

00:03:50,810 --> 00:03:57,930
and one example of that technique is the

00:03:55,049 --> 00:03:59,760
its use in fingerprinting we are

00:03:57,930 --> 00:04:02,299
collaborating with Stephen here at

00:03:59,760 --> 00:04:04,530
Firefox and the idea is to use

00:04:02,299 --> 00:04:06,540
contextual information within a script

00:04:04,530 --> 00:04:09,389
which could be its syntactic structure

00:04:06,540 --> 00:04:11,699
and then its interaction with the

00:04:09,389 --> 00:04:13,680
overall page which will involve how its

00:04:11,699 --> 00:04:15,870
interacting either the content is like

00:04:13,680 --> 00:04:19,260
sending request is it interacting with

00:04:15,870 --> 00:04:21,719
the other content of the web page so

00:04:19,260 --> 00:04:24,300
combining all their information we have

00:04:21,719 --> 00:04:25,469
we have seen encouraging users and we

00:04:24,300 --> 00:04:26,620
will have to move forward with this

00:04:25,469 --> 00:04:28,330
approach and

00:04:26,620 --> 00:04:31,810
have like more interesting results I

00:04:28,330 --> 00:04:34,240
know a Greek lute and welcome questions

00:04:31,810 --> 00:04:36,250
about instrumentation or using these

00:04:34,240 --> 00:04:37,949
techniques into more specific techniques

00:04:36,250 --> 00:04:39,880
and anything about the presentation

00:04:37,949 --> 00:04:44,139
thank you

00:04:39,880 --> 00:04:44,139

YouTube URL: https://www.youtube.com/watch?v=C2wvSeu_NnQ


