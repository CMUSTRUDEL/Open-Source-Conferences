Title: Ghost: Headless Node.js CMS for Publishing - Bristol JS - June 2019
Publication date: 2019-07-02
Playlist: Bristol JS
Description: 
	Ghost - The most popular headless Node.js CMS for professional publishing

Dave, a Developer Advocate at Ghost, shows the various ways in which Ghost can bring a rich content editing experience to your next web project, whether itâ€™s a modern JAMstack site or a large web application

_

About Pusher Sessions:

We're bringing the meetup to you. With Sessions, you can watch recordings of top-notch talks from developer meetups -- wherever and whenever you want.

Meetups are a great way to learn from our peers and to keep up with the latest trends and technologies. As developers ourselves, we at Pusher wanted to bring this great content to more people... So we built Sessions. On Sessions, you can watch talks that interest you and subscribe to be notified when new content gets added.

If you run a meetup and want to get involved, kindly get in touch.

_

About Pusher:

Pusher is a hosted service with APIs, developer tools and open source libraries that greatly simplify integrating real-time functionality into web and mobile applications. 

Pusher will automatically scale when required, removing all the pain of setting up and maintaining a secure, real-time infrastructure. 

Pusher is already trusted to do so by thousands of developers and companies like GitHub, MailChimp, the Financial Times, Buffer and many more. 

Getting started takes just a few seconds: simply go to pusher.com and create a free account. Happy hacking!
Captions: 
	00:00:00,060 --> 00:00:03,360
yeah I'm going to talking about ghosts

00:00:01,350 --> 00:00:06,870
on the jam stack so I'm gonna give you a

00:00:03,360 --> 00:00:07,859
few questions after I've introduced

00:00:06,870 --> 00:00:09,900
myself

00:00:07,859 --> 00:00:13,740
yeah I'm David Dan's I'm developer

00:00:09,900 --> 00:00:17,369
advocate at goes I'm David danced on

00:00:13,740 --> 00:00:19,199
pretty much every platform you can

00:00:17,369 --> 00:00:24,480
normally find me on Twitter I'm happy to

00:00:19,199 --> 00:00:28,230
talk on there amongst other things so

00:00:24,480 --> 00:00:32,250
yeah a few questions so raise your hand

00:00:28,230 --> 00:00:33,809
if you know what Jam stack is or means

00:00:32,250 --> 00:00:39,770
or I've heard of it

00:00:33,809 --> 00:00:43,800
oh we got we've got a small handful okay

00:00:39,770 --> 00:00:49,590
second question have you heard of ghost

00:00:43,800 --> 00:00:57,719
oh wow that would be the projector great

00:00:49,590 --> 00:01:00,510
anyway yes is everybody use ghost or

00:00:57,719 --> 00:01:04,680
aware of ghosts or anything like that so

00:01:00,510 --> 00:01:06,150
we've got a couple of hands so I'll

00:01:04,680 --> 00:01:08,159
explain jump stack stuff a little bit

00:01:06,150 --> 00:01:13,020
later but I'll explain what ghost is

00:01:08,159 --> 00:01:15,840
first ghost is a publishing platform you

00:01:13,020 --> 00:01:19,049
can host a blog with it you can run a

00:01:15,840 --> 00:01:22,320
blog with it you can manage your content

00:01:19,049 --> 00:01:25,790
on your site various different

00:01:22,320 --> 00:01:28,080
publishing methods we have we have a few

00:01:25,790 --> 00:01:31,380
publishers on our platform so

00:01:28,080 --> 00:01:35,909
distillation DuckDuckGo square full

00:01:31,380 --> 00:01:38,460
story troy hunt to name a few

00:01:35,909 --> 00:01:42,720
but what I need to do is I need to

00:01:38,460 --> 00:01:44,850
explain how ghost would one work with

00:01:42,720 --> 00:01:47,549
whatever platform that you're using and

00:01:44,850 --> 00:01:49,770
to how that relates to jam stack which

00:01:47,549 --> 00:01:52,740
I've said before so I'm going to try and

00:01:49,770 --> 00:01:56,009
fill in a few of these question marks so

00:01:52,740 --> 00:01:58,500
ghost itself is comprised of three core

00:01:56,009 --> 00:02:00,930
components there's the admin interface

00:01:58,500 --> 00:02:05,479
the Enver admin interface runs on top of

00:02:00,930 --> 00:02:08,489
em PJs there's the ghost API itself and

00:02:05,479 --> 00:02:11,360
the handlebars front-end template

00:02:08,489 --> 00:02:13,430
framework which is where we have all our

00:02:11,360 --> 00:02:15,200
template files and

00:02:13,430 --> 00:02:17,810
the front end basically that would be

00:02:15,200 --> 00:02:20,470
where your theme lives and you've edit

00:02:17,810 --> 00:02:23,300
it so so are you so wish

00:02:20,470 --> 00:02:26,510
now with the ghost API we've we've

00:02:23,300 --> 00:02:28,790
updated it somewhat recently so it can

00:02:26,510 --> 00:02:32,120
be used as a headless CMS which means we

00:02:28,790 --> 00:02:33,650
can take out the handlebars J s front

00:02:32,120 --> 00:02:37,250
end and swap out for something like

00:02:33,650 --> 00:02:39,710
Gadsby anyone used Gatsby or heard of it

00:02:37,250 --> 00:02:44,750
we've got one I've got a couple of hands

00:02:39,710 --> 00:02:47,240
full you tried it cool so just to

00:02:44,750 --> 00:02:48,440
briefly explain it Gatsby is a static

00:02:47,240 --> 00:02:49,880
site generator that might be

00:02:48,440 --> 00:02:52,370
trivializing it a little bit some people

00:02:49,880 --> 00:02:55,370
might say it's a bit more than that but

00:02:52,370 --> 00:02:58,130
essentially you can build a website with

00:02:55,370 --> 00:03:01,610
Gadsby it runs on top of react and it

00:02:58,130 --> 00:03:03,680
allows you to build websites so what you

00:03:01,610 --> 00:03:06,860
can do is you can take the ghost API and

00:03:03,680 --> 00:03:08,420
plug it straight into Gadsby and enrich

00:03:06,860 --> 00:03:10,910
it with all the content from your ghost

00:03:08,420 --> 00:03:11,870
blog or ghost publishing platform and

00:03:10,910 --> 00:03:13,750
that's what you're pay use post

00:03:11,870 --> 00:03:16,610
navigation everything like that and

00:03:13,750 --> 00:03:19,610
create a website from it and these

00:03:16,610 --> 00:03:23,630
static site generators can consume this

00:03:19,610 --> 00:03:26,600
API so so this is kind of why I was

00:03:23,630 --> 00:03:28,670
talking about with Jam stack I'm gonna

00:03:26,600 --> 00:03:30,230
briefly explain Jam site there's a lot

00:03:28,670 --> 00:03:33,230
of resources out there to explain what

00:03:30,230 --> 00:03:36,860
Jam stack is but Jam stack so you have

00:03:33,230 --> 00:03:41,510
JavaScript so that's the Gatsby in this

00:03:36,860 --> 00:03:43,760
case you have ap ice which is what ghost

00:03:41,510 --> 00:03:46,370
will be doing in this case and you have

00:03:43,760 --> 00:03:49,100
markup which is the produced output of

00:03:46,370 --> 00:03:51,380
that generative tool so that's where the

00:03:49,100 --> 00:03:55,030
Jam stack comes from essentially it's

00:03:51,380 --> 00:03:58,040
just like a buzz word for a type of

00:03:55,030 --> 00:03:59,180
stack you might use so lamp stack

00:03:58,040 --> 00:04:01,489
there's all sorts of different other

00:03:59,180 --> 00:04:04,280
ones but yeah it's a it's a buzz word

00:04:01,489 --> 00:04:07,520
but it's to do with these static sites

00:04:04,280 --> 00:04:11,510
that produce static code at the end

00:04:07,520 --> 00:04:15,709
result so we've got a couple of others

00:04:11,510 --> 00:04:18,590
here so we've got next we've got 11 T

00:04:15,709 --> 00:04:21,500
we've got Hugo and got like whole over

00:04:18,590 --> 00:04:24,980
ones and they can all use the ghost API

00:04:21,500 --> 00:04:27,410
they can just pull that content through

00:04:24,980 --> 00:04:31,190
to build out a website with those with

00:04:27,410 --> 00:04:32,750
that data essentially anyone used any of

00:04:31,190 --> 00:04:39,550
these others I feel like it's gonna be a

00:04:32,750 --> 00:04:42,560
bit tenuous if so Hugo next great

00:04:39,550 --> 00:04:44,990
eleventy cool okay so I've got a few

00:04:42,560 --> 00:04:47,180
kind of floating around in there yeah

00:04:44,990 --> 00:04:49,490
like I said it's an API so you can use

00:04:47,180 --> 00:04:53,780
that with any of these and a whole bunch

00:04:49,490 --> 00:04:55,610
more so our documentation is growing at

00:04:53,780 --> 00:04:57,680
the minute we do have pretty good

00:04:55,610 --> 00:05:01,940
documentation on how to use it use the

00:04:57,680 --> 00:05:03,710
ghost API with Gatsby we are working on

00:05:01,940 --> 00:05:06,620
the others and we want to expand that so

00:05:03,710 --> 00:05:09,080
then we can use or share the method in

00:05:06,620 --> 00:05:10,970
which you would use the ghost API itself

00:05:09,080 --> 00:05:14,330
of course we've got a pretty extensive

00:05:10,970 --> 00:05:16,820
API documentation so we've got the

00:05:14,330 --> 00:05:19,940
Gatsby documentation on how to use that

00:05:16,820 --> 00:05:22,840
with ghost this is a personal blog post

00:05:19,940 --> 00:05:26,950
of mine on how to use eleventy with

00:05:22,840 --> 00:05:29,420
ghost and like I said the full API

00:05:26,950 --> 00:05:30,830
documentation is there for you to kind

00:05:29,420 --> 00:05:33,110
of pick through and stuff like that but

00:05:30,830 --> 00:05:35,030
we hope to make that a little bit more

00:05:33,110 --> 00:05:37,220
filled out so then you don't have to be

00:05:35,030 --> 00:05:41,360
navigating all of those different

00:05:37,220 --> 00:05:43,550
endpoints so like I said all go we've

00:05:41,360 --> 00:05:46,790
got now we've kind of got a jam stack

00:05:43,550 --> 00:05:49,070
forming here so client so we think about

00:05:46,790 --> 00:05:51,850
client as well so client would or

00:05:49,070 --> 00:05:54,380
whatever whoever's writing in the

00:05:51,850 --> 00:05:57,140
publishing tool so they'd write their

00:05:54,380 --> 00:05:59,120
content in the admin interface that

00:05:57,140 --> 00:06:02,540
would go through the API and then that

00:05:59,120 --> 00:06:06,800
would then in turn be outputted into

00:06:02,540 --> 00:06:09,290
what not out put it but sucked into the

00:06:06,800 --> 00:06:11,090
Gatsby application and then built out as

00:06:09,290 --> 00:06:13,280
a website so it's going through this

00:06:11,090 --> 00:06:15,950
step process so this is a kind of jam

00:06:13,280 --> 00:06:17,630
stack right here but of course we've got

00:06:15,950 --> 00:06:18,590
like hosted somewhere no one's going to

00:06:17,630 --> 00:06:20,720
see this you're gonna have this just

00:06:18,590 --> 00:06:22,370
locally on your computer so we've been

00:06:20,720 --> 00:06:25,310
using net Liffe eye for a few different

00:06:22,370 --> 00:06:27,260
tools for a few different applications

00:06:25,310 --> 00:06:29,390
and trying out in different ways or of

00:06:27,260 --> 00:06:31,340
course others you could do AWS you get

00:06:29,390 --> 00:06:34,850
you know I guess you could I still an

00:06:31,340 --> 00:06:38,389
FTP if you really wanted to but the

00:06:34,850 --> 00:06:41,479
advantage of neckla fie is that it is a

00:06:38,389 --> 00:06:44,689
building its a deployable platform so we

00:06:41,479 --> 00:06:47,330
can every time we do so say you've got

00:06:44,689 --> 00:06:51,069
the project on a github repo every time

00:06:47,330 --> 00:06:53,530
there's a commit to master you can then

00:06:51,069 --> 00:06:56,750
net liffe I would then automatically

00:06:53,530 --> 00:06:59,810
rebuild and publish that website so it

00:06:56,750 --> 00:07:01,699
would kind of go along for the ride so

00:06:59,810 --> 00:07:04,129
anytime you made a change to your gatsby

00:07:01,699 --> 00:07:06,610
projects it would rebuild and then

00:07:04,129 --> 00:07:11,090
redeploy that site automatically to your

00:07:06,610 --> 00:07:12,379
live site so that's been working well

00:07:11,090 --> 00:07:14,419
for us it's been working well for me so

00:07:12,379 --> 00:07:16,279
this is looking pretty good I think this

00:07:14,419 --> 00:07:18,650
is like a setup I would be quite happy

00:07:16,279 --> 00:07:19,939
with I mean this is quite different to

00:07:18,650 --> 00:07:23,029
what a lot of you may have been using

00:07:19,939 --> 00:07:25,039
already but there isn't like a bit of a

00:07:23,029 --> 00:07:26,779
floor with this and that is it's all

00:07:25,039 --> 00:07:29,659
well and good if the developer makes a

00:07:26,779 --> 00:07:31,819
change but what excuse me what if the

00:07:29,659 --> 00:07:34,789
content creator or the content editor

00:07:31,819 --> 00:07:36,860
makes the change how do we get the API

00:07:34,789 --> 00:07:38,930
to talk to net liffe I directly and

00:07:36,860 --> 00:07:40,310
rebuild the website because we won't

00:07:38,930 --> 00:07:42,949
want to do commits every time someone

00:07:40,310 --> 00:07:45,379
makes a content change with that we

00:07:42,949 --> 00:07:48,159
would use web hooks so web hooks would

00:07:45,379 --> 00:07:50,960
then communicate between the API and

00:07:48,159 --> 00:07:53,330
your hosting platform well in this case

00:07:50,960 --> 00:07:55,610
net worth I and they would communicate

00:07:53,330 --> 00:07:58,129
in order to redeploy the website every

00:07:55,610 --> 00:08:01,940
time there was a content change so there

00:07:58,129 --> 00:08:04,250
are hooks that we've got in the API that

00:08:01,940 --> 00:08:06,860
we can listen to and communicate between

00:08:04,250 --> 00:08:09,889
the two so we have documentation on this

00:08:06,860 --> 00:08:11,629
as well we have integrations with net

00:08:09,889 --> 00:08:15,500
the fie we've got other integration

00:08:11,629 --> 00:08:16,759
methods as well I mean I like net to

00:08:15,500 --> 00:08:18,610
fight quite a lot so I'm probably a bit

00:08:16,759 --> 00:08:23,089
biased but you could do this with other

00:08:18,610 --> 00:08:25,430
tooling as well Oroku yeah you could you

00:08:23,089 --> 00:08:27,379
could I guess you could get her pages

00:08:25,430 --> 00:08:28,279
yeah you can do that incrementally I

00:08:27,379 --> 00:08:31,130
guess you could do that we'd get hub

00:08:28,279 --> 00:08:38,430
actions or something like that

00:08:31,130 --> 00:08:40,950
now dot Shu s3 I mean I think net flight

00:08:38,430 --> 00:08:43,409
is on s3 so it's like I guess yes so

00:08:40,950 --> 00:08:45,660
same thing sorry

00:08:43,409 --> 00:08:48,150
anyway what I wanted to expand on on

00:08:45,660 --> 00:08:51,780
this but we didn't have time to do is

00:08:48,150 --> 00:08:53,760
that these stacks are really good these

00:08:51,780 --> 00:08:55,410
at least Jam stack websites are really

00:08:53,760 --> 00:08:59,160
good but what I find really interesting

00:08:55,410 --> 00:09:02,030
is extending this into react native

00:08:59,160 --> 00:09:05,790
projects or some sort of different

00:09:02,030 --> 00:09:09,690
application of this of this use so we

00:09:05,790 --> 00:09:11,970
had an example of what if you had a

00:09:09,690 --> 00:09:14,880
react native project and that would be

00:09:11,970 --> 00:09:16,500
like an iOS app or an Android app and it

00:09:14,880 --> 00:09:18,420
had terms and conditions on it and that

00:09:16,500 --> 00:09:19,740
terms and conditions is the exact same

00:09:18,420 --> 00:09:23,610
terms and conditions you have on the

00:09:19,740 --> 00:09:25,890
website you could tell the app to just

00:09:23,610 --> 00:09:27,450
open up a web page and at the end of

00:09:25,890 --> 00:09:30,180
that and you would have to load it every

00:09:27,450 --> 00:09:32,790
time you go there or you could use the

00:09:30,180 --> 00:09:35,700
ghost API and take send that content to

00:09:32,790 --> 00:09:38,450
both the application and the website at

00:09:35,700 --> 00:09:40,710
the same time so that content would be

00:09:38,450 --> 00:09:42,360
parity that would be exactly the same

00:09:40,710 --> 00:09:45,140
but they will be appearing in different

00:09:42,360 --> 00:09:47,040
resources in different locations and

00:09:45,140 --> 00:09:48,720
that wouldn't mean you have to load a

00:09:47,040 --> 00:09:50,600
webpage inside the application is

00:09:48,720 --> 00:09:53,480
sometimes it kind of looks a little bit

00:09:50,600 --> 00:09:56,100
clunky so I think there's a lot of

00:09:53,480 --> 00:09:59,910
versatility here with the ghost API

00:09:56,100 --> 00:10:08,090
being or the ghost administrator being a

00:09:59,910 --> 00:10:11,990
headless CMS is the backend it goes like

00:10:08,090 --> 00:10:14,030
something else right so I should have

00:10:11,990 --> 00:10:17,210
explained that a bit better and I will

00:10:14,030 --> 00:10:19,730
try to do that now the database bit yeah

00:10:17,210 --> 00:10:22,730
so ghost comes in two forms there is

00:10:19,730 --> 00:10:25,400
ghost itself that you can sign up to you

00:10:22,730 --> 00:10:27,590
at ghost org so you can sign up and

00:10:25,400 --> 00:10:29,390
create a publication there or you can

00:10:27,590 --> 00:10:31,100
have the self hosted version which is

00:10:29,390 --> 00:10:32,870
completely open source and free for you

00:10:31,100 --> 00:10:34,400
to use you can just download that and

00:10:32,870 --> 00:10:35,870
install that that can be on a Heroku

00:10:34,400 --> 00:10:38,030
instance or something like that and

00:10:35,870 --> 00:10:40,910
that's where the whole thing would live

00:10:38,030 --> 00:10:42,740
so it's a node application and the front

00:10:40,910 --> 00:10:45,080
end is well the admin to play system

00:10:42,740 --> 00:10:48,380
with ember so it's all there for you to

00:10:45,080 --> 00:10:52,220
install and do what you want and how in

00:10:48,380 --> 00:10:54,909
that sense cool

00:10:52,220 --> 00:10:54,909

YouTube URL: https://www.youtube.com/watch?v=ya7Ss-LjrRc


