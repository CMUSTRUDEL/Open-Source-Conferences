Title: An Introduction to Gatsby and GraphQL - Bristol JS - March 2019
Publication date: 2019-04-01
Playlist: Bristol JS
Description: 
	Presented by George Smerin.

Gatsby is a modern front-end framework for React, powered by GraphQL. It has become hugely popular amongst developers for building their personal websites, but is capable of much more than that. In this talk, we'll look at what makes the Gatsby developer experience so good, and how you can get started with it right away. We'll also get an insight into the benefits of GraphQL, and why Gatsby is the perfect starting point for trying out this powerful querying language.

_

About Pusher Sessions:

We're bringing the meetup to you. With Sessions, you can watch recordings of top-notch talks from developer meetups -- wherever and whenever you want.

Meetups are a great way to learn from our peers and to keep up with the latest trends and technologies. As developers ourselves, we at Pusher wanted to bring this great content to more people... So we built Sessions. On Sessions, you can watch talks that interest you and subscribe to be notified when new content gets added.

If you run a meetup and want to get involved, kindly get in touch.

_

About Pusher:

Pusher is a hosted service with APIs, developer tools and open source libraries that greatly simplify integrating real-time functionality into web and mobile applications. 

Pusher will automatically scale when required, removing all the pain of setting up and maintaining a secure, real-time infrastructure. 

Pusher is already trusted to do so by thousands of developers and companies like GitHub, MailChimp, the Financial Times, Buffer and many more. 

Getting started takes just a few seconds: simply go to pusher.com and create a free account. Happy hacking!
Captions: 
	00:00:00,000 --> 00:00:04,140
my name is Jorge smearin and I'm a

00:00:01,680 --> 00:00:06,960
musician and web developer were mostly a

00:00:04,140 --> 00:00:08,790
front-end web developer over the past

00:00:06,960 --> 00:00:10,920
few years I've been working in product

00:00:08,790 --> 00:00:13,559
teams building web applications in react

00:00:10,920 --> 00:00:16,920
I've really loved adapting my workflow

00:00:13,559 --> 00:00:18,990
to using components and JSX and getting

00:00:16,920 --> 00:00:21,210
fully immersed in the reactor ecosystem

00:00:18,990 --> 00:00:24,720
with all the tools and plugins and

00:00:21,210 --> 00:00:26,369
frameworks that surround it so since

00:00:24,720 --> 00:00:28,980
I've started working with react I've

00:00:26,369 --> 00:00:30,840
wanted to transform my stagnant old

00:00:28,980 --> 00:00:33,480
personal website into something that

00:00:30,840 --> 00:00:35,160
better reflects the work I'm doing today

00:00:33,480 --> 00:00:37,710
and also something that inspires me to

00:00:35,160 --> 00:00:39,719
want to write more content about the

00:00:37,710 --> 00:00:45,750
things I'm learning in both music and

00:00:39,719 --> 00:00:47,370
technology actually so yes I've tried a

00:00:45,750 --> 00:00:49,890
few different ways of doing that with

00:00:47,370 --> 00:00:52,649
create react app and next J's framework

00:00:49,890 --> 00:00:55,050
and yeah got some got it looking quite

00:00:52,649 --> 00:00:57,780
nice but always fell down when it came

00:00:55,050 --> 00:00:59,160
to bringing in data because obviously

00:00:57,780 --> 00:01:00,750
I've got day job and I'm trying to do it

00:00:59,160 --> 00:01:02,340
in evenings and the weekends and

00:01:00,750 --> 00:01:05,610
everything I tried just seemed like

00:01:02,340 --> 00:01:07,770
overkill to be honest I'd do it for a

00:01:05,610 --> 00:01:10,049
few evenings and then I'd just get a bit

00:01:07,770 --> 00:01:12,659
bored I guess well life would take over

00:01:10,049 --> 00:01:14,729
so I'd forget about it and until I'd

00:01:12,659 --> 00:01:18,090
pick it up again when I had a new

00:01:14,729 --> 00:01:19,890
approach to try out and so leaders say

00:01:18,090 --> 00:01:21,990
it took a while and up there was no site

00:01:19,890 --> 00:01:24,360
being launched and anyway that will

00:01:21,990 --> 00:01:26,250
change when I heard about Gatsby it was

00:01:24,360 --> 00:01:29,400
last summer they introduced version 2

00:01:26,250 --> 00:01:31,799
and almost straightaway lots of people

00:01:29,400 --> 00:01:32,909
seem to be writing about it online and

00:01:31,799 --> 00:01:35,820
talking about it

00:01:32,909 --> 00:01:39,479
so some notable developers like Dan

00:01:35,820 --> 00:01:41,189
Abramov West boss Joe hooks Kent C Dodds

00:01:39,479 --> 00:01:44,759
they were all talking about rebuilding

00:01:41,189 --> 00:01:46,490
their sites in Gatsby so obviously took

00:01:44,759 --> 00:01:48,810
note of that and gave it a go and

00:01:46,490 --> 00:01:50,220
needless to say obviously quite liked it

00:01:48,810 --> 00:01:53,729
otherwise that's why I'm standing here

00:01:50,220 --> 00:01:55,560
today yeah I was really amazed by how

00:01:53,729 --> 00:01:58,170
quick it was to get up and running and

00:01:55,560 --> 00:01:59,969
build out the site but mostly the things

00:01:58,170 --> 00:02:01,649
I've been struggling with with my other

00:01:59,969 --> 00:02:03,899
approaches was bringing the data and

00:02:01,649 --> 00:02:08,250
where to host the content it was just

00:02:03,899 --> 00:02:09,989
made so simple by Gatsby and also to

00:02:08,250 --> 00:02:11,459
really finish off the site and give it

00:02:09,989 --> 00:02:13,770
sort of the level of finesse that I

00:02:11,459 --> 00:02:16,730
really wanted to be very proud of it

00:02:13,770 --> 00:02:19,950
that was also made really easy okay so

00:02:16,730 --> 00:02:22,140
thank you Gatsby I'm gonna give tonight

00:02:19,950 --> 00:02:25,140
a sort of a fairly short introduction

00:02:22,140 --> 00:02:27,750
into what Gatsby is why you might want

00:02:25,140 --> 00:02:29,430
to use it and and how are you do sit and

00:02:27,750 --> 00:02:31,770
then we're looking a little bit of depth

00:02:29,430 --> 00:02:34,230
at some of the best features I think it

00:02:31,770 --> 00:02:36,480
has to offer feel free to ask any

00:02:34,230 --> 00:02:40,260
questions as we go along but at the end

00:02:36,480 --> 00:02:43,830
we'll have a Q&A session okay so what is

00:02:40,260 --> 00:02:45,810
Gatsby I'm just out of interest how many

00:02:43,830 --> 00:02:51,750
people here have actually used Gatsby

00:02:45,810 --> 00:02:53,700
before okay not too many that's good so

00:02:51,750 --> 00:02:55,890
this is just an introductory talk so I

00:02:53,700 --> 00:02:58,770
hope it's a value to you guys who have

00:02:55,890 --> 00:03:00,300
used it and goes but yeah for the rest

00:02:58,770 --> 00:03:04,650
of you it is just an introduction so

00:03:00,300 --> 00:03:08,600
what is Gatsby Gatsby is a framework for

00:03:04,650 --> 00:03:11,010
react and it's powered by graph QL and

00:03:08,600 --> 00:03:13,590
now if you know exactly sure what graph

00:03:11,010 --> 00:03:19,260
QL is we're going to look at that a bit

00:03:13,590 --> 00:03:22,800
closer very soon Gatsby is used to build

00:03:19,260 --> 00:03:25,260
static progressive web apps now what

00:03:22,800 --> 00:03:28,380
does that mean well static because

00:03:25,260 --> 00:03:31,200
Gatsby generate static HTML files from

00:03:28,380 --> 00:03:33,120
your source code it's great for building

00:03:31,200 --> 00:03:35,400
websites that don't rely on a lot of

00:03:33,120 --> 00:03:36,570
dynamic content so you're not going to

00:03:35,400 --> 00:03:39,120
want to use it to build the next

00:03:36,570 --> 00:03:41,370
Facebook or Twitter but is great for a

00:03:39,120 --> 00:03:45,210
personal blog or a brochure store

00:03:41,370 --> 00:03:47,880
website now a static site generator zone

00:03:45,210 --> 00:03:50,400
nothing new but with Gatsby one thing

00:03:47,880 --> 00:03:52,800
it's really important to realize is that

00:03:50,400 --> 00:03:55,560
while it does generate static HTML files

00:03:52,800 --> 00:03:58,350
for the pages of our site these pages

00:03:55,560 --> 00:03:59,850
are still made up of react components so

00:03:58,350 --> 00:04:02,370
we aren't limited to only building

00:03:59,850 --> 00:04:05,400
static sites you can still go off and

00:04:02,370 --> 00:04:07,640
fetch Pape data on page load and use it

00:04:05,400 --> 00:04:10,350
within your react app as you'd expect

00:04:07,640 --> 00:04:12,990
now to differentiate themselves from

00:04:10,350 --> 00:04:14,790
other static generators site generators

00:04:12,990 --> 00:04:17,670
that's where I guess they've gone with

00:04:14,790 --> 00:04:19,530
static progressive web apps as I'm sure

00:04:17,670 --> 00:04:23,850
quite a few of you know a progressive

00:04:19,530 --> 00:04:25,680
web app is a website that well a very

00:04:23,850 --> 00:04:27,520
brief description is a very web site

00:04:25,680 --> 00:04:32,650
that uses some modern browser feet

00:04:27,520 --> 00:04:35,319
say for example it's a it works offline

00:04:32,650 --> 00:04:37,900
in some situations and it's also

00:04:35,319 --> 00:04:40,569
installable to your phone similar to a

00:04:37,900 --> 00:04:43,030
native app would be there's a few other

00:04:40,569 --> 00:04:45,729
things it's actually just the checklist

00:04:43,030 --> 00:04:48,009
of best practices but gatsby makes it

00:04:45,729 --> 00:04:52,229
very easy to fulfill those criteria and

00:04:48,009 --> 00:04:56,050
make your website a progressive web app

00:04:52,229 --> 00:04:57,940
ok yes so it's not doesn't make it a

00:04:56,050 --> 00:04:59,860
progressive web app out of the box there

00:04:57,940 --> 00:05:02,740
is a little bit of configuration but it

00:04:59,860 --> 00:05:04,419
probably took me half an hour to take

00:05:02,740 --> 00:05:05,979
all the criteria that made it

00:05:04,419 --> 00:05:10,240
progressive web app so it's very happy

00:05:05,979 --> 00:05:12,849
with that ok so we've talked about what

00:05:10,240 --> 00:05:17,199
Gatsby is now why would you want to use

00:05:12,849 --> 00:05:18,849
it now if you've done any reading on

00:05:17,199 --> 00:05:22,240
Gatsby that's all you've probably

00:05:18,849 --> 00:05:25,210
noticed this little phrase they've got

00:05:22,240 --> 00:05:27,880
it is blazing fast and it is true

00:05:25,210 --> 00:05:29,349
performance is really at the heart of

00:05:27,880 --> 00:05:32,560
what the Gatsby team is trying to

00:05:29,349 --> 00:05:35,710
achieve I mean as with any static site

00:05:32,560 --> 00:05:38,740
generator Gatsby generates HTML files at

00:05:35,710 --> 00:05:41,770
Build time so these are them ready to be

00:05:38,740 --> 00:05:45,030
sent to the straight to the browser when

00:05:41,770 --> 00:05:47,710
a user requests them this differs to

00:05:45,030 --> 00:05:49,570
server-side rendering for example which

00:05:47,710 --> 00:05:52,539
is when the HTML is created by the

00:05:49,570 --> 00:05:53,860
server at the time of request and only

00:05:52,539 --> 00:05:55,630
when it's ready will it be sent to the

00:05:53,860 --> 00:05:58,300
browser so that's always going to be a

00:05:55,630 --> 00:06:02,650
little bit slower than using static HTML

00:05:58,300 --> 00:06:05,500
files so gatsby also gives you code and

00:06:02,650 --> 00:06:08,469
data splitting by default that means

00:06:05,500 --> 00:06:11,620
that only the critical CSS JavaScript

00:06:08,469 --> 00:06:13,840
and data are sent to the browser other

00:06:11,620 --> 00:06:15,969
resources can then be pre fetched after

00:06:13,840 --> 00:06:21,909
page load meaning that further pages

00:06:15,969 --> 00:06:24,370
loads are even faster another major

00:06:21,909 --> 00:06:27,190
benefit is that is very cheap and easy

00:06:24,370 --> 00:06:28,599
to host you can simply upload the build

00:06:27,190 --> 00:06:31,360
folder to any old shared hosting

00:06:28,599 --> 00:06:33,729
provider and it will work with no extra

00:06:31,360 --> 00:06:36,880
configuration again these are just HTML

00:06:33,729 --> 00:06:38,279
files were dealing with there are some

00:06:36,880 --> 00:06:41,410
much better hosting options available

00:06:38,279 --> 00:06:43,270
these can handle your build process and

00:06:41,410 --> 00:06:47,230
automatically but we're going to look at

00:06:43,270 --> 00:06:50,230
those a bit more towards the end the

00:06:47,230 --> 00:06:52,990
other key benefit for me is it's got

00:06:50,230 --> 00:06:55,030
great developer experience it's so quick

00:06:52,990 --> 00:06:57,400
to get up and running and there's a vast

00:06:55,030 --> 00:07:01,150
array of Gatsby plugins which will make

00:06:57,400 --> 00:07:03,460
adding certain functionality a breeze in

00:07:01,150 --> 00:07:05,410
particular the plugins that deal with

00:07:03,460 --> 00:07:07,480
pulling in data are going to save you a

00:07:05,410 --> 00:07:09,550
lot of time and also the plugins that

00:07:07,480 --> 00:07:13,140
deal with images are just fantastic so

00:07:09,550 --> 00:07:13,140
we'll look at that in a minute right

00:07:16,680 --> 00:07:25,000
how does Gatsby work well and it's very

00:07:21,640 --> 00:07:27,730
simplest you add a component for each

00:07:25,000 --> 00:07:31,630
page of your website into a folder named

00:07:27,730 --> 00:07:33,790
Pages Gatsby will then convert every

00:07:31,630 --> 00:07:37,360
ponent component in the pages directory

00:07:33,790 --> 00:07:40,300
into an HTML file with the URL the same

00:07:37,360 --> 00:07:42,550
as the component name now if you're then

00:07:40,300 --> 00:07:45,670
just about to deploy the site you just

00:07:42,550 --> 00:07:48,280
upload that build folder but also during

00:07:45,670 --> 00:07:49,900
development it does set up a server so

00:07:48,280 --> 00:07:51,940
you can see your changes in real time

00:07:49,900 --> 00:07:54,280
with hot reloading because no one wants

00:07:51,940 --> 00:07:54,610
to be refreshing the page anymore do

00:07:54,280 --> 00:08:00,910
they

00:07:54,610 --> 00:08:02,920
to see your changes okay so Gatsby gets

00:08:00,910 --> 00:08:06,460
much more interesting when you start to

00:08:02,920 --> 00:08:08,740
pull in data from other sources those

00:08:06,460 --> 00:08:10,120
sources could be an existing CMS which

00:08:08,740 --> 00:08:12,940
you just want to build a new front-end

00:08:10,120 --> 00:08:14,790
for so that could be web press Drupal or

00:08:12,940 --> 00:08:17,440
others because they expose a REST API

00:08:14,790 --> 00:08:19,870
and you can hook into that or Gatsby can

00:08:17,440 --> 00:08:22,840
and they could be one of the new breed

00:08:19,870 --> 00:08:26,800
of headless CMS's such as content for

00:08:22,840 --> 00:08:29,560
firebase graph CMS or sanity they could

00:08:26,800 --> 00:08:31,450
be just about any other API they could

00:08:29,560 --> 00:08:33,969
also be local files from within your

00:08:31,450 --> 00:08:36,280
project source code such as markdown

00:08:33,969 --> 00:08:38,530
JSON or CSV

00:08:36,280 --> 00:08:40,330
now I've got speed say themselves that

00:08:38,530 --> 00:08:41,530
they can pull data from anywhere I'm not

00:08:40,330 --> 00:08:43,630
going to go and make that claim that's

00:08:41,530 --> 00:08:45,340
up to them to say but those are the ones

00:08:43,630 --> 00:08:46,990
that I've looked into and they're

00:08:45,340 --> 00:08:49,390
definitely work and there's a nice

00:08:46,990 --> 00:08:51,790
plug-in to help make it easy for you to

00:08:49,390 --> 00:08:53,080
do that to configure it now I'd say one

00:08:51,790 --> 00:08:54,820
of the reasons it's become very popular

00:08:53,080 --> 00:08:58,150
in the developer community

00:08:54,820 --> 00:09:00,040
is that it's the simplest way of getting

00:08:58,150 --> 00:09:04,030
up and running with a blog for example

00:09:00,040 --> 00:09:07,240
is to use markdown files for the blog

00:09:04,030 --> 00:09:10,900
posts now it might not seem quite as

00:09:07,240 --> 00:09:12,400
nice as using a CMS but from sure for no

00:09:10,900 --> 00:09:14,710
one here is afraid to head it to

00:09:12,400 --> 00:09:16,780
markdown fo and the best thing about

00:09:14,710 --> 00:09:20,260
that is that those are just stored in a

00:09:16,780 --> 00:09:22,210
directory within your project source so

00:09:20,260 --> 00:09:23,860
you don't have to have another server or

00:09:22,210 --> 00:09:25,870
another application and then we're

00:09:23,860 --> 00:09:29,290
hosting so they're all stored within the

00:09:25,870 --> 00:09:32,470
same project as the rest of your Gatsby

00:09:29,290 --> 00:09:34,690
code at the start of the markdown file

00:09:32,470 --> 00:09:36,790
we've got the front meta section which

00:09:34,690 --> 00:09:38,290
is wakens and put some important

00:09:36,790 --> 00:09:41,050
information the only one that's really

00:09:38,290 --> 00:09:44,230
necessary is the path because when

00:09:41,050 --> 00:09:46,630
you're consuming these the posts you

00:09:44,230 --> 00:09:48,940
obviously need to you've got to create

00:09:46,630 --> 00:09:51,850
the page so it's needs to know what path

00:09:48,940 --> 00:09:53,740
to use other things such as date and

00:09:51,850 --> 00:09:55,000
title are pretty obvious and you can

00:09:53,740 --> 00:09:58,300
have whatever you want

00:09:55,000 --> 00:09:59,620
tags categories and excerpt because

00:09:58,300 --> 00:10:01,360
later on you're going to be able to

00:09:59,620 --> 00:10:04,420
query for this data and use it however

00:10:01,360 --> 00:10:06,580
you want with JavaScript so this is just

00:10:04,420 --> 00:10:08,500
a very simple example and the rest of

00:10:06,580 --> 00:10:11,400
the markdown file is just as you'd

00:10:08,500 --> 00:10:14,770
expect that's the content of your post

00:10:11,400 --> 00:10:16,840
so using markdown is obviously going to

00:10:14,770 --> 00:10:19,900
be much better suited to developers such

00:10:16,840 --> 00:10:21,580
as ourselves for a personal blog it's

00:10:19,900 --> 00:10:22,960
not going to be quite as useful if

00:10:21,580 --> 00:10:25,120
you've got a client who's going to be

00:10:22,960 --> 00:10:26,620
updating their own content so in that

00:10:25,120 --> 00:10:29,290
situation you're going to want to use

00:10:26,620 --> 00:10:31,900
one of the options from the previous

00:10:29,290 --> 00:10:34,240
list such as WordPress or Drupal or a

00:10:31,900 --> 00:10:37,320
headless CMS is probably the best option

00:10:34,240 --> 00:10:37,320
if you're starting afresh

00:10:38,400 --> 00:10:45,370
okay so Gatsby is pulling in data from a

00:10:43,690 --> 00:10:47,020
variety of sources so you configure it

00:10:45,370 --> 00:10:50,830
to do that and you've got some plugins

00:10:47,020 --> 00:10:53,050
that make it pretty straightforward now

00:10:50,830 --> 00:10:56,470
you need to access that data and that's

00:10:53,050 --> 00:10:59,680
where graph QL comes in graphic where

00:10:56,470 --> 00:11:01,870
there's a querying language developed by

00:10:59,680 --> 00:11:05,110
Facebook a few years ago it's gaining in

00:11:01,870 --> 00:11:07,220
popularity and Gatsby is a great place

00:11:05,110 --> 00:11:08,990
to start using it

00:11:07,220 --> 00:11:11,270
because you don't actually have to set

00:11:08,990 --> 00:11:13,250
up the server yourself you can just use

00:11:11,270 --> 00:11:18,340
the query language we're gonna look at

00:11:13,250 --> 00:11:18,340
exactly how a graph QL query looks now

00:11:20,620 --> 00:11:26,810
so this would be this is a bit of a

00:11:24,080 --> 00:11:28,250
contrived example but this would be what

00:11:26,810 --> 00:11:30,560
would you would see in your react

00:11:28,250 --> 00:11:32,870
component so generally at the page level

00:11:30,560 --> 00:11:35,750
but you can also do it in some

00:11:32,870 --> 00:11:37,730
situations from any component so this is

00:11:35,750 --> 00:11:40,340
a graph QL query it does look like Java

00:11:37,730 --> 00:11:43,250
Script is probably intended to look

00:11:40,340 --> 00:11:46,840
fairly similar but it's not so a

00:11:43,250 --> 00:11:51,070
JavaScript object okay so here we're

00:11:46,840 --> 00:11:54,440
querying for a post with the ID of 1 2 3

00:11:51,070 --> 00:11:56,330
now with a typical rest api and you

00:11:54,440 --> 00:11:59,990
might hit an endpoint for a post and

00:11:56,330 --> 00:12:01,580
pass it that ID of 1 2 3 but you don't

00:11:59,990 --> 00:12:04,730
really have too much control over what

00:12:01,580 --> 00:12:07,460
gets returned so you typically get the

00:12:04,730 --> 00:12:09,080
title the date you might get an excerpt

00:12:07,460 --> 00:12:13,070
you might get all of the content for

00:12:09,080 --> 00:12:16,100
that post tags categories which is great

00:12:13,070 --> 00:12:17,680
in a lot of situations but if for

00:12:16,100 --> 00:12:20,120
example you just want to get the title

00:12:17,680 --> 00:12:24,260
then you would use a query like this and

00:12:20,120 --> 00:12:25,910
what will be returned is looks very

00:12:24,260 --> 00:12:28,640
similar this is a this is a JavaScript

00:12:25,910 --> 00:12:30,530
object gets returned and then that

00:12:28,640 --> 00:12:32,540
gatsby makes that data immediately

00:12:30,530 --> 00:12:38,810
available within your react component

00:12:32,540 --> 00:12:40,460
via props if you want to add the path to

00:12:38,810 --> 00:12:44,000
the query it's just literally this

00:12:40,460 --> 00:12:46,700
simple and the data that returns will

00:12:44,000 --> 00:12:49,580
show the path as well so their tagline

00:12:46,700 --> 00:12:56,870
asks for what you need get exactly that

00:12:49,580 --> 00:13:00,410
is pretty accurate if we want multiple

00:12:56,870 --> 00:13:01,550
posts then an array will be returned so

00:13:00,410 --> 00:13:04,730
you can see down here we've got an array

00:13:01,550 --> 00:13:06,950
of posts gatsby also really elegantly

00:13:04,730 --> 00:13:09,050
handles sorting and filtering and

00:13:06,950 --> 00:13:11,540
limiting the data that's returned as you

00:13:09,050 --> 00:13:14,870
can see in the top we've got posts order

00:13:11,540 --> 00:13:17,150
by created at now that's more of a

00:13:14,870 --> 00:13:20,930
Gatsby terminology up there but I think

00:13:17,150 --> 00:13:22,519
all graph QL works in a similar way

00:13:20,930 --> 00:13:26,949
and you've got a variety of options

00:13:22,519 --> 00:13:29,420
depending on what where you're using it

00:13:26,949 --> 00:13:31,249
okay so as I said yeah these graph QL

00:13:29,420 --> 00:13:33,019
queries are run from within you're

00:13:31,249 --> 00:13:34,519
directly from him within the react

00:13:33,019 --> 00:13:37,040
component that's going to consume the

00:13:34,519 --> 00:13:39,259
data and gatsby makes available via

00:13:37,040 --> 00:13:41,139
props so it's really easy and it's all

00:13:39,259 --> 00:13:43,999
in one place and it's all done for you

00:13:41,139 --> 00:13:45,889
and yes a gatsby is a great place to

00:13:43,999 --> 00:13:48,139
learn to get familiar with graph QL

00:13:45,889 --> 00:13:50,209
because I think graph QL is going to get

00:13:48,139 --> 00:13:56,509
more popular in the future and it's a

00:13:50,209 --> 00:13:58,100
good time to be learning it ok so now

00:13:56,509 --> 00:14:01,249
we're going to have a bit of an example

00:13:58,100 --> 00:14:02,209
of just how fast get Spears I said to

00:14:01,249 --> 00:14:04,699
you at the start that I've been

00:14:02,209 --> 00:14:06,949
rebuilding my site and took me a while

00:14:04,699 --> 00:14:09,529
but I eventually he did launch it two

00:14:06,949 --> 00:14:13,040
weeks ago it is quite simple and it's

00:14:09,529 --> 00:14:15,439
actually focused on some music stuff I

00:14:13,040 --> 00:14:16,759
did last year but in the future I'm

00:14:15,439 --> 00:14:19,899
probably going to add in some more

00:14:16,759 --> 00:14:25,129
technical technology stuff so here's

00:14:19,899 --> 00:14:27,980
here it is so I've got a nice big banner

00:14:25,129 --> 00:14:29,660
and three images and some contents this

00:14:27,980 --> 00:14:36,050
is the home page and this is what I've

00:14:29,660 --> 00:14:38,300
been testing for performance I used the

00:14:36,050 --> 00:14:40,160
light house audit tool which is

00:14:38,300 --> 00:14:41,509
available in chrome dev tools and sure a

00:14:40,160 --> 00:14:43,699
lot of you are familiar with that and

00:14:41,509 --> 00:14:47,290
that gives you scores for performance

00:14:43,699 --> 00:14:50,120
SEO accessibility best practices and

00:14:47,290 --> 00:14:52,759
progressive web app functionality I'm

00:14:50,120 --> 00:14:54,740
pleased to say that this home page at

00:14:52,759 --> 00:14:57,079
least ranks 100% in all of those

00:14:54,740 --> 00:15:01,790
categories and gatsby really did make

00:14:57,079 --> 00:15:05,389
that pretty easy so here are some of the

00:15:01,790 --> 00:15:07,759
figures you probably can't see that some

00:15:05,389 --> 00:15:11,540
of the figures at the back have made it

00:15:07,759 --> 00:15:16,220
a little bit bigger okay so this is the

00:15:11,540 --> 00:15:19,129
this is the values when lighthouse by

00:15:16,220 --> 00:15:23,089
its default setting is to simulate a fat

00:15:19,129 --> 00:15:26,149
3G network with a slower CPU and four

00:15:23,089 --> 00:15:27,679
times slower okay so these aren't the

00:15:26,149 --> 00:15:30,529
real figures if you are looking at it on

00:15:27,679 --> 00:15:34,279
a laptop now to get a hundred percent

00:15:30,529 --> 00:15:36,410
score the first meaningful paint

00:15:34,279 --> 00:15:38,509
house thinks that should be 1.6 seconds

00:15:36,410 --> 00:15:41,180
Gatsby's done in naught point nine so

00:15:38,509 --> 00:15:43,790
that's just over half perceptual speed

00:15:41,180 --> 00:15:46,639
index is a little bit quicker at one

00:15:43,790 --> 00:15:49,249
second and the time to interactive is a

00:15:46,639 --> 00:15:51,529
lot faster so the target is five seconds

00:15:49,249 --> 00:15:55,249
which does seem quite slow but remember

00:15:51,529 --> 00:15:56,420
this is a throttled network and Gatsby's

00:15:55,249 --> 00:15:58,069
done in two seconds

00:15:56,420 --> 00:16:00,439
so that's a really big saving there and

00:15:58,069 --> 00:16:03,319
bear in mind that is the targets to get

00:16:00,439 --> 00:16:05,629
an 100% score so read into that what you

00:16:03,319 --> 00:16:08,569
will have obviously not the be-all and

00:16:05,629 --> 00:16:11,240
end-all but it's a good good gauge I

00:16:08,569 --> 00:16:15,649
think so if you want to see what the

00:16:11,240 --> 00:16:17,930
performance is like on a normal Wi-Fi

00:16:15,649 --> 00:16:19,490
network so might just my one at home it

00:16:17,930 --> 00:16:21,559
does vary a little bit when you refresh

00:16:19,490 --> 00:16:24,709
it so I haven't done it loads of times

00:16:21,559 --> 00:16:30,230
to get the fastest but typically these

00:16:24,709 --> 00:16:32,959
are the scores not point one seconds for

00:16:30,230 --> 00:16:35,540
the first meaningful paint not point

00:16:32,959 --> 00:16:37,040
five seconds perceptual speed index I'm

00:16:35,540 --> 00:16:39,350
not exactly sure what that is but I

00:16:37,040 --> 00:16:41,389
think it's just a general guide perhaps

00:16:39,350 --> 00:16:42,980
someone can tell me later but the one I

00:16:41,389 --> 00:16:47,029
think is really important is time to

00:16:42,980 --> 00:16:49,430
interactive so that's gone from five

00:16:47,029 --> 00:16:53,059
seconds which was that I get to not 0.2

00:16:49,430 --> 00:16:55,660
seconds to be interactive I did look at

00:16:53,059 --> 00:16:57,920
some of my old and I don't want to diss

00:16:55,660 --> 00:17:00,500
this web press because I think it's

00:16:57,920 --> 00:17:01,790
still fantastic and I certainly know my

00:17:00,500 --> 00:17:03,649
career on it but I look back at some of

00:17:01,790 --> 00:17:05,600
the sites I did quite a few years ago

00:17:03,649 --> 00:17:07,909
that haven't changed and some of them

00:17:05,600 --> 00:17:10,549
where Rick quite a lot closer to 10

00:17:07,909 --> 00:17:14,240
seconds so I'm pretty happy with not 0.2

00:17:10,549 --> 00:17:15,589
seconds there okay so we looked at

00:17:14,240 --> 00:17:17,929
performance and hopefully you'll agree

00:17:15,589 --> 00:17:20,480
it is pretty fast and I know that my

00:17:17,929 --> 00:17:22,789
site wasn't particularly large but one

00:17:20,480 --> 00:17:25,039
thing it did have was a big banner image

00:17:22,789 --> 00:17:27,589
and three images and they are they do

00:17:25,039 --> 00:17:31,220
come out good quality so that's a good

00:17:27,589 --> 00:17:33,830
time to talk about gatsby plugins one of

00:17:31,220 --> 00:17:36,309
my favorite one by far and the one that

00:17:33,830 --> 00:17:38,990
really made me think that it was worth

00:17:36,309 --> 00:17:44,330
pursuing Gatsby is the Gatsby image

00:17:38,990 --> 00:17:48,250
plug-in and how it handles images okay

00:17:44,330 --> 00:17:50,809
so what's Gatsby image it is a

00:17:48,250 --> 00:17:53,540
it gives you a component to use within

00:17:50,809 --> 00:17:56,390
your react files that is fairly similar

00:17:53,540 --> 00:18:00,380
in syntax to using just a normal image

00:17:56,390 --> 00:18:02,270
tag in HTML but what you do need to do

00:18:00,380 --> 00:18:05,690
which is a bit of extra work you do need

00:18:02,270 --> 00:18:08,450
to query for your images via graph QL so

00:18:05,690 --> 00:18:10,760
you typically have your images stored in

00:18:08,450 --> 00:18:13,190
a folder anywhere within your project

00:18:10,760 --> 00:18:17,150
you can figure gaps be to look inside

00:18:13,190 --> 00:18:20,210
that folder and then it will create put

00:18:17,150 --> 00:18:22,130
these images into the graph QL server so

00:18:20,210 --> 00:18:24,050
within your component you can query for

00:18:22,130 --> 00:18:27,350
that image that you want with the file

00:18:24,050 --> 00:18:30,559
name and it will return an object with a

00:18:27,350 --> 00:18:32,780
load of data about that actual image and

00:18:30,559 --> 00:18:34,940
what gatsby also does using image sharp

00:18:32,780 --> 00:18:37,420
is it processes it into a variety of

00:18:34,940 --> 00:18:40,550
different sizes as it sees appropriate

00:18:37,420 --> 00:18:43,490
when you pass that data object into the

00:18:40,550 --> 00:18:45,950
gatsby image component and it gets

00:18:43,490 --> 00:18:49,400
that's when it starts to get clever okay

00:18:45,950 --> 00:18:51,950
so it detects your what device or

00:18:49,400 --> 00:18:54,860
browser you're on viewport width and it

00:18:51,950 --> 00:18:59,870
decides which image to show you and one

00:18:54,860 --> 00:19:03,980
thing I love is it actually loads a tiny

00:18:59,870 --> 00:19:05,679
blurred pixelated version and then as

00:19:03,980 --> 00:19:08,330
soon as the page is finished loading

00:19:05,679 --> 00:19:10,700
it'll load the what it deems to be the

00:19:08,330 --> 00:19:12,380
best size version for the page it'll

00:19:10,700 --> 00:19:14,570
load that and it will just gradually

00:19:12,380 --> 00:19:16,910
fade up and if you look at the site or

00:19:14,570 --> 00:19:19,130
any gaps new site that users get to the

00:19:16,910 --> 00:19:22,190
image it does look I just think it looks

00:19:19,130 --> 00:19:24,710
really cool and it's obviously it's a

00:19:22,190 --> 00:19:26,990
big part of the reason why the home page

00:19:24,710 --> 00:19:29,240
of my site loads so fast is because all

00:19:26,990 --> 00:19:32,660
it is loading is a powerful kilobyte

00:19:29,240 --> 00:19:35,780
image and the real image even that is

00:19:32,660 --> 00:19:40,179
only 39 kilobytes so to put that into

00:19:35,780 --> 00:19:43,309
context this is an 1,800 by 450 I think

00:19:40,179 --> 00:19:45,620
banner so it's quite large that's the

00:19:43,309 --> 00:19:48,230
size that Gatsby has decided to show I

00:19:45,620 --> 00:19:50,590
think my original one was 3,000 pixels

00:19:48,230 --> 00:19:54,080
wide that I put in the project directory

00:19:50,590 --> 00:19:56,330
so it's chosen an 1,800 pixel image for

00:19:54,080 --> 00:19:59,990
probably a screener browser about the

00:19:56,330 --> 00:20:01,120
size of my macbook here or a standard

00:19:59,990 --> 00:20:05,740
laptop

00:20:01,120 --> 00:20:08,290
I tried to resize my image in Photoshop

00:20:05,740 --> 00:20:11,050
from whatever it was at maximum

00:20:08,290 --> 00:20:12,330
resolution down to 1,800 and then used

00:20:11,050 --> 00:20:14,830
what compression tools were available

00:20:12,330 --> 00:20:17,170
and I think the closest I could get it

00:20:14,830 --> 00:20:21,940
with the same sort of quality was about

00:20:17,170 --> 00:20:23,530
90 kilobytes when I did pull the when I

00:20:21,940 --> 00:20:24,820
did pull the quality down so it was

00:20:23,530 --> 00:20:26,980
closer to 40 kilobytes

00:20:24,820 --> 00:20:28,630
it just looked lawful now I'm not afraid

00:20:26,980 --> 00:20:29,920
to shop expert and there's probably some

00:20:28,630 --> 00:20:31,570
much better there obviously asked and

00:20:29,920 --> 00:20:34,060
much better tools out there but I

00:20:31,570 --> 00:20:36,910
couldn't easily get it anywhere close to

00:20:34,060 --> 00:20:38,200
that small by myself manually and the

00:20:36,910 --> 00:20:40,090
fact that Gatsby does it all for you

00:20:38,200 --> 00:20:42,940
automatically pretty much out of the box

00:20:40,090 --> 00:20:45,640
I think is great now none of these

00:20:42,940 --> 00:20:49,480
things necessarily exceptional but the

00:20:45,640 --> 00:20:53,970
fact it does it almost all for you is is

00:20:49,480 --> 00:20:56,440
great okay so that gets the image now to

00:20:53,970 --> 00:20:58,150
this is a bit of a short talk to round

00:20:56,440 --> 00:20:59,980
it off we're going to talk about hosting

00:20:58,150 --> 00:21:02,410
it's something I mentioned earlier and

00:20:59,980 --> 00:21:06,310
it's one of the areas where Gatsby and

00:21:02,410 --> 00:21:08,200
to be honest all static sites are going

00:21:06,310 --> 00:21:10,990
to be a lot easier gonna make your life

00:21:08,200 --> 00:21:15,670
a lot easier than a react application or

00:21:10,990 --> 00:21:17,020
another JavaScript application so what

00:21:15,670 --> 00:21:18,430
do we went from hosting where we

00:21:17,020 --> 00:21:20,170
obviously want it to be if it's for a

00:21:18,430 --> 00:21:21,940
personal site we want it to be easy and

00:21:20,170 --> 00:21:24,850
cheap if it's for a client then that's

00:21:21,940 --> 00:21:26,050
not necessarily concerned so much but

00:21:24,850 --> 00:21:29,620
certainly we want it to be easy and

00:21:26,050 --> 00:21:32,800
cheap we want it to be easy to upload

00:21:29,620 --> 00:21:35,710
definitely so let's look at we're gonna

00:21:32,800 --> 00:21:37,450
look at you and this isn't none of this

00:21:35,710 --> 00:21:39,190
as a sales pitch but we're gonna look at

00:21:37,450 --> 00:21:41,440
one host in particular that stands out

00:21:39,190 --> 00:21:43,480
for me and that's net laugh I I don't

00:21:41,440 --> 00:21:46,300
know if anyone's heard of net LeFay but

00:21:43,480 --> 00:21:48,300
I'm sure some of you have neckla fie is

00:21:46,300 --> 00:21:51,190
kind of based its business model around

00:21:48,300 --> 00:21:54,760
gatsby I think will so they're pretty

00:21:51,190 --> 00:21:57,160
popular for view as well and a lot of

00:21:54,760 --> 00:21:58,540
other sites they base their business

00:21:57,160 --> 00:22:02,860
model about making it as easy as

00:21:58,540 --> 00:22:07,270
possible to host this kind of site so

00:22:02,860 --> 00:22:08,860
what does it do you upload your source

00:22:07,270 --> 00:22:10,660
code to github and once you've

00:22:08,860 --> 00:22:12,970
configured neckla firing given access

00:22:10,660 --> 00:22:14,680
which is dead easy it will automatically

00:22:12,970 --> 00:22:16,030
deploy your site

00:22:14,680 --> 00:22:18,160
and then every time you check in a

00:22:16,030 --> 00:22:21,160
change to get up it will automatically

00:22:18,160 --> 00:22:24,610
push that my site takes just under a

00:22:21,160 --> 00:22:26,530
minute from when I push up the source

00:22:24,610 --> 00:22:28,360
code to being live and it does that all

00:22:26,530 --> 00:22:30,130
automatically obviously if something's

00:22:28,360 --> 00:22:31,930
gone wrong it will fail and not upload

00:22:30,130 --> 00:22:33,660
it and you do have a chance to roll back

00:22:31,930 --> 00:22:36,580
immediately

00:22:33,660 --> 00:22:41,740
so you've got continuous integration and

00:22:36,580 --> 00:22:44,320
deployment there with notify now it is

00:22:41,740 --> 00:22:45,730
free if you are hosting a personal blog

00:22:44,320 --> 00:22:47,980
and I think you've got a hundred

00:22:45,730 --> 00:22:50,020
gigabytes per month bandwidth which I

00:22:47,980 --> 00:22:52,060
don't think I'm gonna be getting through

00:22:50,020 --> 00:22:54,460
anytime soon so there are obviously a

00:22:52,060 --> 00:22:57,100
big focus on getting us people like us

00:22:54,460 --> 00:23:01,720
to use it it doesn't seem too expensive

00:22:57,100 --> 00:23:03,660
for some of the bigger plans which will

00:23:01,720 --> 00:23:06,580
allow multiple developers to work on it

00:23:03,660 --> 00:23:10,650
but yeah for my purposes it's free so

00:23:06,580 --> 00:23:14,500
that's a big bonus for me okay now

00:23:10,650 --> 00:23:16,360
probably okay come to one of the

00:23:14,500 --> 00:23:20,950
disadvantages of Gatsby right at the

00:23:16,360 --> 00:23:24,070
very end which is that if you hook it up

00:23:20,950 --> 00:23:26,620
to an external CMS such as WordPress or

00:23:24,070 --> 00:23:29,590
Drupal or content full or any of the

00:23:26,620 --> 00:23:33,700
others because gatsby is generating

00:23:29,590 --> 00:23:36,610
static files it doesn't know what your

00:23:33,700 --> 00:23:40,420
CMS is doing because the site is built

00:23:36,610 --> 00:23:42,700
and then uploaded and then any changes

00:23:40,420 --> 00:23:44,950
you make in your CMS and not Gatsby

00:23:42,700 --> 00:23:46,660
doesn't really know about that again

00:23:44,950 --> 00:23:50,410
that is obviously the disadvantage Java

00:23:46,660 --> 00:23:53,310
static sites in this context but what a

00:23:50,410 --> 00:23:56,320
net fight will do is it will accept say

00:23:53,310 --> 00:23:57,820
we set up a web hook so you can quite

00:23:56,320 --> 00:24:01,060
easily configure well I don't know

00:23:57,820 --> 00:24:03,370
depends on the CMS but presumably it's

00:24:01,060 --> 00:24:06,130
quite easy to add this web hook anytime

00:24:03,370 --> 00:24:07,960
you update a post add a new one or in

00:24:06,130 --> 00:24:11,260
other situations which you can configure

00:24:07,960 --> 00:24:13,540
that will send a notification to neckla

00:24:11,260 --> 00:24:15,910
Phi should then start the build process

00:24:13,540 --> 00:24:19,630
pull in your new data create the static

00:24:15,910 --> 00:24:21,220
HTML files and deploy it and I think

00:24:19,630 --> 00:24:25,360
that's about as simple as you're going

00:24:21,220 --> 00:24:28,010
to be able to get it okay so that is the

00:24:25,360 --> 00:24:30,890
end of my talk on Gatsby

00:24:28,010 --> 00:24:32,780
I hope you've been useful even for those

00:24:30,890 --> 00:24:34,730
of you who've done a bit of Gatsby

00:24:32,780 --> 00:24:37,910
before I really think it's worth

00:24:34,730 --> 00:24:39,620
checking out I mean obviously it's most

00:24:37,910 --> 00:24:41,450
useful if you are really act developer

00:24:39,620 --> 00:24:43,220
if you're used to angular review then

00:24:41,450 --> 00:24:46,309
it's not necessarily going to have quite

00:24:43,220 --> 00:24:47,570
the same attraction but yeah I feel like

00:24:46,309 --> 00:24:48,950
me into react and you want to

00:24:47,570 --> 00:24:52,340
particularly if you want to work on a

00:24:48,950 --> 00:24:54,200
personal site or a side project or even

00:24:52,340 --> 00:24:56,230
yep certainly for client work I think it

00:24:54,200 --> 00:24:59,450
is going to be a good thing especially

00:24:56,230 --> 00:25:01,700
digital and creative agencies I do think

00:24:59,450 --> 00:25:03,740
that it should be more popular or will

00:25:01,700 --> 00:25:08,809
get more popular for that type of work

00:25:03,740 --> 00:25:09,620
definitely ok so that's it does anyone

00:25:08,809 --> 00:25:15,309
got any questions

00:25:09,620 --> 00:25:19,250
so yeah routing in a SP 8 well Gatsby I

00:25:15,309 --> 00:25:22,250
think as I mentioned before and whatever

00:25:19,250 --> 00:25:24,290
components you put in the pages

00:25:22,250 --> 00:25:25,730
directory and page directory is

00:25:24,290 --> 00:25:27,620
something to get set up for you

00:25:25,730 --> 00:25:29,630
especially if you use one of the Gatsby

00:25:27,620 --> 00:25:32,660
starters I didn't mention that there's

00:25:29,630 --> 00:25:34,790
amazing host of starter packages so it

00:25:32,660 --> 00:25:37,040
gives you pages directory it looks in

00:25:34,790 --> 00:25:40,820
there any components in there it will

00:25:37,040 --> 00:25:43,960
make a new page with that component and

00:25:40,820 --> 00:25:47,540
the the URL will be the same as the

00:25:43,960 --> 00:25:50,360
component name so that's what it does

00:25:47,540 --> 00:25:53,660
when it comes to more dynamic content

00:25:50,360 --> 00:25:56,630
like blog posts and you have to use the

00:25:53,660 --> 00:25:59,299
there's a create pages API which you

00:25:56,630 --> 00:26:02,690
hook into the note build process and

00:25:59,299 --> 00:26:05,690
that build time you sort of get your

00:26:02,690 --> 00:26:09,020
pages you loop over them take the path

00:26:05,690 --> 00:26:11,450
for each and you create a page and with

00:26:09,020 --> 00:26:14,270
that path so it's fairly simple but I

00:26:11,450 --> 00:26:15,860
didn't go into that in detail here and

00:26:14,270 --> 00:26:17,390
it is the kind of thing that you just

00:26:15,860 --> 00:26:20,480
look at a few of the starter packages

00:26:17,390 --> 00:26:23,150
and it it makes sense and to do that to

00:26:20,480 --> 00:26:26,929
answer your question ok great so does it

00:26:23,150 --> 00:26:30,350
pre render the HTML yes it does renders

00:26:26,929 --> 00:26:33,650
all the HTML I'm having inspected it too

00:26:30,350 --> 00:26:36,290
closely exactly what it does but it does

00:26:33,650 --> 00:26:39,950
definitely render the HTML so the page

00:26:36,290 --> 00:26:41,880
is very usable just as an HTML page but

00:26:39,950 --> 00:26:43,500
then it brings in the JavaScript later

00:26:41,880 --> 00:26:45,780
think it does some pretty clever stuff

00:26:43,500 --> 00:26:48,780
so that's why I can't give you any exact

00:26:45,780 --> 00:26:50,430
answer of exactly how it works it you

00:26:48,780 --> 00:26:53,190
know once it's all loaded it does give

00:26:50,430 --> 00:26:55,470
you a fully functional react app and all

00:26:53,190 --> 00:26:57,240
of your life cycle methods in your

00:26:55,470 --> 00:27:00,630
components within that page they're all

00:26:57,240 --> 00:27:02,040
still going to work so would the posts

00:27:00,630 --> 00:27:05,850
the query with graph go would that

00:27:02,040 --> 00:27:10,470
replace the loop in WordPress yes it

00:27:05,850 --> 00:27:13,140
would because in in WordPress its were

00:27:10,470 --> 00:27:15,540
sense of use it but the you use the loop

00:27:13,140 --> 00:27:18,720
in your template files and this

00:27:15,540 --> 00:27:20,970
basically replaces the need for template

00:27:18,720 --> 00:27:23,880
files so if you're using WordPress you

00:27:20,970 --> 00:27:26,370
would still set up WordPress but you

00:27:23,880 --> 00:27:28,800
would use it just for the backend so

00:27:26,370 --> 00:27:31,200
your clients or yourself would upload

00:27:28,800 --> 00:27:34,800
the content and then web press exposes a

00:27:31,200 --> 00:27:38,190
REST API so this would just pull in the

00:27:34,800 --> 00:27:40,260
data and you wouldn't you'd completely

00:27:38,190 --> 00:27:42,210
bypass all of your template files in

00:27:40,260 --> 00:27:44,190
WordPress so they wouldn't get used in

00:27:42,210 --> 00:27:46,140
the loop would ya there's no way to use

00:27:44,190 --> 00:27:49,410
the loop so you just do it all in

00:27:46,140 --> 00:27:50,790
JavaScript you'd loop over the objects

00:27:49,410 --> 00:27:53,250
with the array that you get back you

00:27:50,790 --> 00:27:58,680
loop over that and use a Content so I

00:27:53,250 --> 00:28:00,660
mean it's web presses it's great I'm

00:27:58,680 --> 00:28:02,880
definitely not knocking it it's is

00:28:00,660 --> 00:28:05,130
fantastic and it is not this is not

00:28:02,880 --> 00:28:08,010
going to be a direct replacement for for

00:28:05,130 --> 00:28:10,380
a wordpress theme if you're on a bit of

00:28:08,010 --> 00:28:13,590
a time budget and you're used in you're

00:28:10,380 --> 00:28:15,000
used to using WordPress it is definitely

00:28:13,590 --> 00:28:17,100
going to add in quite a bit of

00:28:15,000 --> 00:28:18,600
complexity having a Gatsby up on top so

00:28:17,100 --> 00:28:21,150
you do need to really want the

00:28:18,600 --> 00:28:26,480
performance and the features that react

00:28:21,150 --> 00:28:26,480
and Gatsby Gatsby give you okay

00:28:29,670 --> 00:28:31,730

YouTube URL: https://www.youtube.com/watch?v=D33HrJoNapc


