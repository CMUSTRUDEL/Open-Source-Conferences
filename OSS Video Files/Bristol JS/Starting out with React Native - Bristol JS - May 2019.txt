Title: Starting out with React Native - Bristol JS - May 2019
Publication date: 2019-06-05
Playlist: Bristol JS
Description: 
	Stephen Kempin

React Native is one the fastest growing frameworks for building native apps. In this lightning talk we will look at starting out with React Native, itâ€™s pros and cons and how it compares to web view based solutions such as Ionic.

We will also look at how React Native compares to React, what Expo is and what basic libraries (such as React Navigation) you will need to start building your first React Native app.

Finally, we will briefly look at creating standalone apps and uploading these to Google Play and Apple iTunes, and the typical experiences involved in both.

This talk is for anyone with an interest in cross platform mobile development in general, especially React and Ionic.

Key examples used in this talk include:

- Lyrics King
https://github.com/SKempin/Lyrics-King-React-Native

https://expo.io/@skempin/lyrics-king

_

About Pusher Sessions:

We're bringing the meetup to you. With Sessions, you can watch recordings of top-notch talks from developer meetups -- wherever and whenever you want.

Meetups are a great way to learn from our peers and to keep up with the latest trends and technologies. As developers ourselves, we at Pusher wanted to bring this great content to more people... So we built Sessions. On Sessions, you can watch talks that interest you and subscribe to be notified when new content gets added.

If you run a meetup and want to get involved, kindly get in touch.

_

About Pusher:

Pusher is a hosted service with APIs, developer tools and open source libraries that greatly simplify integrating real-time functionality into web and mobile applications. 

Pusher will automatically scale when required, removing all the pain of setting up and maintaining a secure, real-time infrastructure. 

Pusher is already trusted to do so by thousands of developers and companies like GitHub, MailChimp, the Financial Times, Buffer and many more. 

Getting started takes just a few seconds: simply go to pusher.com and create a free account. Happy hacking!
Captions: 
	00:00:00,030 --> 00:00:05,460
you use rap native here before he's used

00:00:04,650 --> 00:00:09,090
Expo

00:00:05,460 --> 00:00:14,099
before and there's anyone published any

00:00:09,090 --> 00:00:15,389
apps to the app stores okay so basically

00:00:14,099 --> 00:00:18,570
this is gonna be a very kind of

00:00:15,389 --> 00:00:22,140
high-level overview of starting out with

00:00:18,570 --> 00:00:24,439
rap native so it'd be a bit background

00:00:22,140 --> 00:00:26,250
to myself so I'm a front-end developer

00:00:24,439 --> 00:00:29,730
actually started out in graphic design

00:00:26,250 --> 00:00:34,469
before went into development I went

00:00:29,730 --> 00:00:37,110
through flash to start with still got it

00:00:34,469 --> 00:00:40,110
supportive well this has and and then

00:00:37,110 --> 00:00:43,079
moved on to HTML and did a lot of

00:00:40,110 --> 00:00:46,110
WordPress and I worked for a SEO agency

00:00:43,079 --> 00:00:48,410
for several years and and most recently

00:00:46,110 --> 00:00:51,960
I've been at the University of Bristol

00:00:48,410 --> 00:00:57,420
doing we at with SharePoint the newest

00:00:51,960 --> 00:00:59,280
SPFs SharePoint in my own projects I've

00:00:57,420 --> 00:01:02,129
been doing a bit of ionic and my

00:00:59,280 --> 00:01:06,990
experiences of react have led me to to

00:01:02,129 --> 00:01:08,070
do some react native projects so just a

00:01:06,990 --> 00:01:09,540
quick overview of what I'm going to go

00:01:08,070 --> 00:01:11,220
through actually in a start with ionic

00:01:09,540 --> 00:01:12,930
just as a an example because I think

00:01:11,220 --> 00:01:15,240
it's quite a good starting point the

00:01:12,930 --> 00:01:18,869
reasons I moved to react native from

00:01:15,240 --> 00:01:20,220
ionic what X sorry at verses throughout

00:01:18,869 --> 00:01:22,080
native so if you've done a bit react

00:01:20,220 --> 00:01:26,180
before how many people done react

00:01:22,080 --> 00:01:29,340
you're using me at a lot of people ok

00:01:26,180 --> 00:01:31,950
Expo a bit of explanation of that what

00:01:29,340 --> 00:01:34,189
you'd need in terms of on top of Expo to

00:01:31,950 --> 00:01:36,000
actually make fully working up and

00:01:34,189 --> 00:01:39,930
getting into the App Store's

00:01:36,000 --> 00:01:41,610
which is sometimes a bit of a process so

00:01:39,930 --> 00:01:43,710
just through the overview this is one

00:01:41,610 --> 00:01:47,430
the first apps are built there which was

00:01:43,710 --> 00:01:49,829
with ionic it was for name so yes for

00:01:47,430 --> 00:01:52,670
Qataris it was basically a reference app

00:01:49,829 --> 00:01:54,479
for scales musical scales and modes

00:01:52,670 --> 00:01:56,880
underneath the hood this is actually

00:01:54,479 --> 00:01:58,860
just angular so until recently ionic was

00:01:56,880 --> 00:02:03,840
purely based on angular it was basically

00:01:58,860 --> 00:02:06,390
a native wrapper both the latest version

00:02:03,840 --> 00:02:09,840
allow now allows you to view in react as

00:02:06,390 --> 00:02:13,110
well but I started with this and it was

00:02:09,840 --> 00:02:13,630
I publish this to Google Play and got a

00:02:13,110 --> 00:02:15,910
fair few

00:02:13,630 --> 00:02:18,690
sails and it was good enough for the

00:02:15,910 --> 00:02:21,340
time but I kind of got a little bit

00:02:18,690 --> 00:02:22,450
frustrated because you're quite limited

00:02:21,340 --> 00:02:25,120
because our the other day is just a

00:02:22,450 --> 00:02:26,950
website so if you're trying to make an

00:02:25,120 --> 00:02:28,420
app feel like a native app but it's a

00:02:26,950 --> 00:02:31,210
different website I'm sure we all

00:02:28,420 --> 00:02:34,090
understand that's very limiting in terms

00:02:31,210 --> 00:02:38,020
of design in performance and animations

00:02:34,090 --> 00:02:39,220
and all those things so mainly so the

00:02:38,020 --> 00:02:42,130
web viewers have one the biggest issue

00:02:39,220 --> 00:02:44,110
issues with ionic and this isn't having

00:02:42,130 --> 00:02:44,500
a go on it was great for what it's used

00:02:44,110 --> 00:02:46,480
for

00:02:44,500 --> 00:02:48,910
then these were my issues with it and

00:02:46,480 --> 00:02:50,080
which is why I went to react native but

00:02:48,910 --> 00:02:51,700
yeah as I said it was basically just the

00:02:50,080 --> 00:02:54,550
website so you're quite limited in

00:02:51,700 --> 00:02:57,340
layout he did down to the CSS and HTML

00:02:54,550 --> 00:03:00,700
obviously you've been using Cordova to

00:02:57,340 --> 00:03:02,260
access any native features of the phone

00:03:00,700 --> 00:03:04,450
itself so anything like the camera

00:03:02,260 --> 00:03:07,150
storage file systems you're going

00:03:04,450 --> 00:03:09,910
through Cordova's libraries to do that

00:03:07,150 --> 00:03:13,240
and that's court I was really good but

00:03:09,910 --> 00:03:16,180
again I didn't feel it was quite as good

00:03:13,240 --> 00:03:19,450
as a around library that like react

00:03:16,180 --> 00:03:21,310
native or flutter offer as I said used

00:03:19,450 --> 00:03:23,170
to be based on angular and now it's

00:03:21,310 --> 00:03:24,880
actually like to use react in view and

00:03:23,170 --> 00:03:28,840
no framework could all if you if you

00:03:24,880 --> 00:03:31,660
don't want to so these are my main

00:03:28,840 --> 00:03:33,280
reasons I said the web peas are slow one

00:03:31,660 --> 00:03:35,110
of biggest problems I found that apps

00:03:33,280 --> 00:03:36,550
didn't feel native in terms of their

00:03:35,110 --> 00:03:38,260
performance I think we can all kind of

00:03:36,550 --> 00:03:40,510
relate to that if you ever use a we have

00:03:38,260 --> 00:03:41,800
used to use front of the face book out

00:03:40,510 --> 00:03:45,670
the original face book out that was

00:03:41,800 --> 00:03:47,380
built in HTML and they ended up we doing

00:03:45,670 --> 00:03:49,840
it as native code because it just didn't

00:03:47,380 --> 00:03:51,820
have that performance to it you can tell

00:03:49,840 --> 00:03:54,100
when it's well until reason you could

00:03:51,820 --> 00:03:55,330
tell when it wasn't a real app and that

00:03:54,100 --> 00:03:58,030
was one of the things that frustrated me

00:03:55,330 --> 00:04:00,610
he couldn't do animations really again

00:03:58,030 --> 00:04:04,090
it's a website so it got limited on what

00:04:00,610 --> 00:04:05,740
you could do compared to thinking again

00:04:04,090 --> 00:04:07,390
native apps and things like snapchat for

00:04:05,740 --> 00:04:08,950
example or apps like that with a lot of

00:04:07,390 --> 00:04:11,560
animations and there's nothing like that

00:04:08,950 --> 00:04:13,420
possible really and it had a heavy

00:04:11,560 --> 00:04:15,850
reliance on third-party libraries and on

00:04:13,420 --> 00:04:17,230
called over and I found quite a few

00:04:15,850 --> 00:04:19,140
books on that because again you're using

00:04:17,230 --> 00:04:21,880
third-party libraries to try and achieve

00:04:19,140 --> 00:04:25,870
something and fully user into thinking

00:04:21,880 --> 00:04:29,680
it's it's natively written so

00:04:25,870 --> 00:04:32,050
cut the prose I found with react the

00:04:29,680 --> 00:04:33,910
performance will start it isn't quite as

00:04:32,050 --> 00:04:35,770
good as a truly native but it's very

00:04:33,910 --> 00:04:38,500
close and I get that depends on what

00:04:35,770 --> 00:04:40,240
you're doing in the app itself there's a

00:04:38,500 --> 00:04:43,449
huge community absolutely understand

00:04:40,240 --> 00:04:45,880
reactors skyrocketing really is the main

00:04:43,449 --> 00:04:47,979
framework pretty much and because of

00:04:45,880 --> 00:04:50,560
that there's a big library of of

00:04:47,979 --> 00:04:53,080
additional V out native libraries that

00:04:50,560 --> 00:04:55,360
you can use there's a lot of ready-made

00:04:53,080 --> 00:04:57,760
components like the reason react itself

00:04:55,360 --> 00:05:00,520
and again that's that's expanding quite

00:04:57,760 --> 00:05:05,800
rapidly animation support is really good

00:05:00,520 --> 00:05:07,810
you can use several libraries to to

00:05:05,800 --> 00:05:10,389
animates you can they also use an

00:05:07,810 --> 00:05:11,740
article Lottie where you can use got the

00:05:10,389 --> 00:05:13,060
know the program as an Adobe program

00:05:11,740 --> 00:05:15,250
where you can animate and they can

00:05:13,060 --> 00:05:19,150
migrate those animations into out native

00:05:15,250 --> 00:05:22,360
and they they feel like natively coded

00:05:19,150 --> 00:05:23,410
animations and more importantly as well

00:05:22,360 --> 00:05:27,160
than all those things probably is

00:05:23,410 --> 00:05:32,520
stability that I found it crashed ahead

00:05:27,160 --> 00:05:36,220
of a lot less than then a hybrid app did

00:05:32,520 --> 00:05:37,630
so this is a few examples of live apps

00:05:36,220 --> 00:05:39,220
on the App Store's and out which have

00:05:37,630 --> 00:05:41,050
been built we've got native so it

00:05:39,220 --> 00:05:42,789
Facebook use it partially in their own

00:05:41,050 --> 00:05:45,250
app it's not wholly wrap native but

00:05:42,789 --> 00:05:48,639
there are no nois stations and these all

00:05:45,250 --> 00:05:50,200
taken from from facebook site as well so

00:05:48,639 --> 00:05:52,780
the apps manager is built with it I know

00:05:50,200 --> 00:05:55,180
Instagram uses it heavily the youth

00:05:52,780 --> 00:05:57,130
Skype app has been entirely built with

00:05:55,180 --> 00:06:00,580
react native quite recently they didn't

00:05:57,130 --> 00:06:01,720
entirely build on that the fa confidence

00:06:00,580 --> 00:06:04,770
of Facebook conference up

00:06:01,720 --> 00:06:06,039
they build purely and wrap native

00:06:04,770 --> 00:06:09,610
Pinterest

00:06:06,039 --> 00:06:12,729
use it at the Fairmount that leaves

00:06:09,610 --> 00:06:14,320
again several other quite large firms

00:06:12,729 --> 00:06:18,970
using it but I think these are kind of

00:06:14,320 --> 00:06:20,169
the flagship ones so one of the biggest

00:06:18,970 --> 00:06:21,400
things if you're starting out is

00:06:20,169 --> 00:06:24,780
probably what the differences between

00:06:21,400 --> 00:06:28,300
yeah if you've got a grounding in that

00:06:24,780 --> 00:06:29,830
so definitely as I found which kind of

00:06:28,300 --> 00:06:35,050
summed it up is it reactors at library

00:06:29,830 --> 00:06:36,700
and native is a framework so one of the

00:06:35,050 --> 00:06:38,500
first things you'll see is there's no

00:06:36,700 --> 00:06:39,730
divs obviously cuz it's not it's not a

00:06:38,500 --> 00:06:44,020
website

00:06:39,730 --> 00:06:45,190
so view tax with place dibs but aside

00:06:44,020 --> 00:06:48,700
from that if you're coming from about

00:06:45,190 --> 00:06:50,730
background it's very easy to to migrate

00:06:48,700 --> 00:06:53,080
and start building apps because it's

00:06:50,730 --> 00:06:54,370
it's the same underneath really it's

00:06:53,080 --> 00:06:56,470
just using slightly different tags and

00:06:54,370 --> 00:06:59,140
obviously sort of an ecosystem but

00:06:56,470 --> 00:07:02,560
fundamentally it's the same it doesn't

00:06:59,140 --> 00:07:06,660
use CSS again it's not website so it

00:07:02,560 --> 00:07:08,670
uses you can write JavaScript CSS in GIS

00:07:06,660 --> 00:07:11,890
but it's not using that under the hood

00:07:08,670 --> 00:07:14,590
if a layout is using flexbox and that

00:07:11,890 --> 00:07:16,060
allows a lot powerful styling which

00:07:14,590 --> 00:07:19,510
again was one of my main issues with

00:07:16,060 --> 00:07:21,730
hybrid mobile apps and has also many

00:07:19,510 --> 00:07:26,110
other inbuilt features we shall briefly

00:07:21,730 --> 00:07:28,200
touch on it's just an example code from

00:07:26,110 --> 00:07:30,010
there from the Facebook site again but

00:07:28,200 --> 00:07:31,810
this looks very familiar

00:07:30,010 --> 00:07:34,660
there's really no difference between

00:07:31,810 --> 00:07:37,000
this under basic react web app apartment

00:07:34,660 --> 00:07:40,990
you see here the view tags have replaced

00:07:37,000 --> 00:07:45,100
div tags and you importing text as well

00:07:40,990 --> 00:07:46,840
so there's no divs or spans Texas rafted

00:07:45,100 --> 00:07:51,450
in text tag images are wrapped in images

00:07:46,840 --> 00:07:51,450
tags again it's quite self-explanatory

00:07:51,720 --> 00:07:59,650
this is example of flexbox so submit to

00:07:55,720 --> 00:08:01,390
achieve again in hybrid apps but if you

00:07:59,650 --> 00:08:03,370
know flexbox if you're using it again

00:08:01,390 --> 00:08:09,820
it's very straightforward to achieve

00:08:03,370 --> 00:08:11,620
quite powerful layouts it's a couple of

00:08:09,820 --> 00:08:13,390
definitions i've found which is first

00:08:11,620 --> 00:08:14,920
something up jobs react jess is a

00:08:13,390 --> 00:08:16,930
JavaScript library that useful shorts in

00:08:14,920 --> 00:08:18,610
a high-performance UI layer we are

00:08:16,930 --> 00:08:24,490
natives an entire platform allowing you

00:08:18,610 --> 00:08:26,230
to build native across mobile apps so if

00:08:24,490 --> 00:08:27,580
you look at react native this is what

00:08:26,230 --> 00:08:29,620
you're fully fired to start with this

00:08:27,580 --> 00:08:31,570
thing called Expo and this was slightly

00:08:29,620 --> 00:08:32,890
confusing for me because I have no idea

00:08:31,570 --> 00:08:36,040
what I was really doing and this was

00:08:32,890 --> 00:08:40,510
quite new when I first started out so

00:08:36,040 --> 00:08:42,880
Expo is a tool chain basically so when

00:08:40,510 --> 00:08:44,110
the annex was first released there was

00:08:42,880 --> 00:08:45,280
quite a few issues with developers

00:08:44,110 --> 00:08:47,740
getting to grips with it because the

00:08:45,280 --> 00:08:49,510
amount of setup that it took just to to

00:08:47,740 --> 00:08:52,130
produce a running out to build an app

00:08:49,510 --> 00:08:55,449
just locally

00:08:52,130 --> 00:08:59,959
Expo was a somewhat of an answer to that

00:08:55,449 --> 00:09:03,980
so effectively it allows you to build

00:08:59,959 --> 00:09:06,649
your apps in simulators and on your

00:09:03,980 --> 00:09:08,810
phone through JavaScript much quicker it

00:09:06,649 --> 00:09:10,279
would be to compile native code and

00:09:08,810 --> 00:09:13,459
actually run that every time you want to

00:09:10,279 --> 00:09:15,440
make a change so it's a effectively a

00:09:13,459 --> 00:09:17,199
tool chain but it actually does more

00:09:15,440 --> 00:09:19,730
than that as well so it allows you to

00:09:17,199 --> 00:09:22,519
eventually build the app itself in the

00:09:19,730 --> 00:09:25,550
cloud so what that means is with react

00:09:22,519 --> 00:09:27,589
native if you reject from Expo and just

00:09:25,550 --> 00:09:30,880
using the app native rule you'd have to

00:09:27,589 --> 00:09:33,190
have a Mac to build for IRS and

00:09:30,880 --> 00:09:37,639
obviously you'd have to have them

00:09:33,190 --> 00:09:39,800
Android the Android library stalled in

00:09:37,639 --> 00:09:41,930
order to build for that where is with

00:09:39,800 --> 00:09:44,269
expo you can basically upload your final

00:09:41,930 --> 00:09:45,829
code and it's built in the cloud on

00:09:44,269 --> 00:09:48,250
their servers and will give you the

00:09:45,829 --> 00:09:50,839
binary files which is a huge advantage

00:09:48,250 --> 00:09:54,649
especially if you don't want it by a map

00:09:50,839 --> 00:09:57,050
to build for IRS and above apart from

00:09:54,649 --> 00:09:59,000
that as well it allows was also several

00:09:57,050 --> 00:10:02,269
features but over-the-air updates is a

00:09:59,000 --> 00:10:03,769
massive advantage so the this is

00:10:02,269 --> 00:10:05,000
something that's there's several

00:10:03,769 --> 00:10:07,009
different versions of bit expo

00:10:05,000 --> 00:10:08,810
integrates its own again what it means

00:10:07,009 --> 00:10:10,970
is that once you've done your changes

00:10:08,810 --> 00:10:14,149
and you push your code up to expose

00:10:10,970 --> 00:10:17,329
servers you can create binary standalone

00:10:14,149 --> 00:10:20,630
apps however you can also allow that

00:10:17,329 --> 00:10:22,699
code to be pushed to existing apps which

00:10:20,630 --> 00:10:25,459
already gone through the App Store's if

00:10:22,699 --> 00:10:27,800
it's JavaScript and HTML and CSS so if

00:10:25,459 --> 00:10:30,380
it's not apt name for example all like

00:10:27,800 --> 00:10:31,910
the manifest files you can make changes

00:10:30,380 --> 00:10:33,380
over the air without having to release

00:10:31,910 --> 00:10:36,319
updates through the App Store's

00:10:33,380 --> 00:10:38,029
which is a huge bonus because actually

00:10:36,319 --> 00:10:39,139
downloading and the binaries and

00:10:38,029 --> 00:10:41,240
uploading those and go through that at

00:10:39,139 --> 00:10:47,029
the app store process every time is a

00:10:41,240 --> 00:10:48,920
very time-consuming process itself so

00:10:47,029 --> 00:10:51,560
there's a few the features and I'll give

00:10:48,920 --> 00:10:53,480
you a screen shot in a minute the Winx

00:10:51,560 --> 00:10:55,699
player you can monitor the progress of

00:10:53,480 --> 00:10:58,939
your app with the toolchain so as it

00:10:55,699 --> 00:11:01,880
builds on your on the C CLI that it the

00:10:58,939 --> 00:11:03,980
expert built it allows actually build

00:11:01,880 --> 00:11:05,720
much quicker than local builds

00:11:03,980 --> 00:11:09,920
you can share apps with the end users

00:11:05,720 --> 00:11:11,570
via Expo app itself so on the meet at

00:11:09,920 --> 00:11:13,430
website I've got an open source app

00:11:11,570 --> 00:11:15,170
which is linked on there so if you

00:11:13,430 --> 00:11:18,830
download the Expo app from Google Play

00:11:15,170 --> 00:11:20,930
or iTunes you can then scan the barcode

00:11:18,830 --> 00:11:22,820
so if your QR code or get the link of

00:11:20,930 --> 00:11:24,920
any Expo up which is basically just the

00:11:22,820 --> 00:11:27,110
app that's been pushed to expose servers

00:11:24,920 --> 00:11:28,550
and win it clean that wrapper so

00:11:27,110 --> 00:11:30,410
effectively if you want to create an app

00:11:28,550 --> 00:11:31,460
for your company and not have to go

00:11:30,410 --> 00:11:33,770
through the App Store's

00:11:31,460 --> 00:11:36,020
something internal this is a much more

00:11:33,770 --> 00:11:38,660
streamlined to 9/2 quicker way of doing

00:11:36,020 --> 00:11:41,480
that than having to pay to be on itunes

00:11:38,660 --> 00:11:45,350
etc as I mentioned you can publish

00:11:41,480 --> 00:11:47,720
over-the-air updates and no need for Mac

00:11:45,350 --> 00:11:50,780
security develop iOS it's just a

00:11:47,720 --> 00:11:55,760
screenshot of the kinda interface that

00:11:50,780 --> 00:11:57,230
explain it I supposed to provide so

00:11:55,760 --> 00:12:01,520
again this is a QR code that you can

00:11:57,230 --> 00:12:03,380
scan locally and see your changes within

00:12:01,520 --> 00:12:05,240
30 seconds to been allowed how powerful

00:12:03,380 --> 00:12:09,320
your mobile is to compile those changes

00:12:05,240 --> 00:12:11,180
in real time and again there's not much

00:12:09,320 --> 00:12:13,160
difference at all this in terms of the

00:12:11,180 --> 00:12:15,200
code I'm just in this example importing

00:12:13,160 --> 00:12:18,920
some Expo library if this was just an

00:12:15,200 --> 00:12:20,450
icon is library but it's all just

00:12:18,920 --> 00:12:23,420
reacting to at the end of the day it's

00:12:20,450 --> 00:12:25,880
just another library and this is the

00:12:23,420 --> 00:12:32,720
expert client itself you can download

00:12:25,880 --> 00:12:35,690
from the app stores if anyone's

00:12:32,720 --> 00:12:38,060
interested this is the OK source app

00:12:35,690 --> 00:12:40,490
that I created for portfolio so that's

00:12:38,060 --> 00:12:42,350
available on github and again if you get

00:12:40,490 --> 00:12:44,990
that client exploit client app you can

00:12:42,350 --> 00:12:46,790
scan the barcode or click the link and

00:12:44,990 --> 00:12:49,130
run that up instantly without having to

00:12:46,790 --> 00:12:52,880
actually download the app itself not

00:12:49,130 --> 00:12:54,650
loaded be up to the app stores for that

00:12:52,880 --> 00:12:59,000
reason it's it's a demonstration of

00:12:54,650 --> 00:13:01,190
exactly that so the only downside is

00:12:59,000 --> 00:13:03,800
that if you're using Expo you might be

00:13:01,190 --> 00:13:05,120
limited by what it offers so it does

00:13:03,800 --> 00:13:07,390
offer the most things you'd want out the

00:13:05,120 --> 00:13:11,000
box but if you're doing some more custom

00:13:07,390 --> 00:13:12,950
you maybe you wanted right some native

00:13:11,000 --> 00:13:15,940
code you would then have to detach from

00:13:12,950 --> 00:13:15,940
expert

00:13:16,140 --> 00:13:20,070
this is possible you can detach from

00:13:17,880 --> 00:13:22,400
wrap native generally and way but if you

00:13:20,070 --> 00:13:24,750
want to detach from it it will then

00:13:22,400 --> 00:13:27,090
compile it down to a roar react native

00:13:24,750 --> 00:13:31,650
up again so you are then able to add in

00:13:27,090 --> 00:13:34,980
features whether in Java or Swift or

00:13:31,650 --> 00:13:36,780
whatever you whatever using for for that

00:13:34,980 --> 00:13:39,200
itself so you're not limited you know

00:13:36,780 --> 00:13:42,060
you're not locked into expo permanently

00:13:39,200 --> 00:13:45,060
so again I have to I've got going in

00:13:42,060 --> 00:13:46,830
fact every Expo I next had to find out

00:13:45,060 --> 00:13:48,060
what was doing with navigation so expert

00:13:46,830 --> 00:13:50,220
doesn't come with any navigation out the

00:13:48,060 --> 00:13:53,550
box which again is it's not very clear

00:13:50,220 --> 00:13:54,930
so you will just end up with a screen so

00:13:53,550 --> 00:13:59,190
again there are several options for that

00:13:54,930 --> 00:14:02,190
also options for the UI and with the UI

00:13:59,190 --> 00:14:05,490
elements react navigation is now fully

00:14:02,190 --> 00:14:08,010
the biggest library that you can use for

00:14:05,490 --> 00:14:09,600
it so with navigation it's all

00:14:08,010 --> 00:14:12,860
JavaScript based they've really

00:14:09,600 --> 00:14:15,780
performed put a lot performance into

00:14:12,860 --> 00:14:17,910
optimization into that library to try

00:14:15,780 --> 00:14:19,980
and match it to native performers and

00:14:17,910 --> 00:14:23,370
again out the box I don't think most

00:14:19,980 --> 00:14:25,320
would probably tell there is more native

00:14:23,370 --> 00:14:27,360
ones that use the UI layer rather than

00:14:25,320 --> 00:14:29,430
JavaScript however for those you'd have

00:14:27,360 --> 00:14:31,440
to detach from X vote things for that

00:14:29,430 --> 00:14:32,940
reason of not detaching the react levy

00:14:31,440 --> 00:14:35,160
Asian navigation is really going to take

00:14:32,940 --> 00:14:37,620
it off and it's become pretty much the

00:14:35,160 --> 00:14:40,830
main library it allows you to create

00:14:37,620 --> 00:14:42,150
stacks and drawers and tabs and pretty

00:14:40,830 --> 00:14:43,350
much any opponent general navigation

00:14:42,150 --> 00:14:47,610
layout that you're probably familiar

00:14:43,350 --> 00:14:48,900
with using and again it's very simple it

00:14:47,610 --> 00:14:50,340
really didn't take long at all for me to

00:14:48,900 --> 00:14:52,830
kind of get my head around it and

00:14:50,340 --> 00:14:55,410
actually build it an app tap navigation

00:14:52,830 --> 00:14:59,370
that would be very familiar to any any

00:14:55,410 --> 00:15:01,850
user clean this is another library I

00:14:59,370 --> 00:15:03,750
ended up using a lot native elements so

00:15:01,850 --> 00:15:07,080
again you don't get anything out the box

00:15:03,750 --> 00:15:08,700
so this these are all custom elements

00:15:07,080 --> 00:15:11,640
that you can just drop in it saves a lot

00:15:08,700 --> 00:15:13,230
of time in time to style up and work on

00:15:11,640 --> 00:15:16,140
the UI elements of things which you

00:15:13,230 --> 00:15:19,800
would expect to be part of react native

00:15:16,140 --> 00:15:21,570
itself and native basis is another one

00:15:19,800 --> 00:15:25,020
and I think about native basis if you

00:15:21,570 --> 00:15:27,090
use any of their components they are

00:15:25,020 --> 00:15:30,180
styled automatically thought are though

00:15:27,090 --> 00:15:31,980
I RS or Android so again it's cross

00:15:30,180 --> 00:15:35,760
form you don't have to put individual

00:15:31,980 --> 00:15:38,010
styling in touch briefly on the App

00:15:35,760 --> 00:15:40,010
Store's themselves so I've played to

00:15:38,010 --> 00:15:42,089
both app stores Google Play and iTunes

00:15:40,010 --> 00:15:44,190
if you're not doing anything without

00:15:42,089 --> 00:15:47,910
stores before the main difference is

00:15:44,190 --> 00:15:50,250
probably cost and Google Play $25

00:15:47,910 --> 00:15:53,040
one-time membership they take 30% per

00:15:50,250 --> 00:15:57,180
app and there's 59 to see it that's 50

00:15:53,040 --> 00:15:59,790
90 minimum charge the review times I

00:15:57,180 --> 00:16:01,560
find it really short you can update your

00:15:59,790 --> 00:16:03,779
apps and roll those out very quickly and

00:16:01,560 --> 00:16:08,010
it seems to be a little more open than

00:16:03,779 --> 00:16:10,529
Apple in terms of quality control apples

00:16:08,010 --> 00:16:13,380
people expensive $99 a year every year

00:16:10,529 --> 00:16:17,160
they take 30% again and then a 99p

00:16:13,380 --> 00:16:18,930
minimum charge my experience with Apple

00:16:17,160 --> 00:16:20,910
is that it took about two weeks to

00:16:18,930 --> 00:16:23,310
review my first app and came back with

00:16:20,910 --> 00:16:25,080
several quite ambiguous issues with it

00:16:23,310 --> 00:16:28,080
which actually took a phone call from

00:16:25,080 --> 00:16:29,430
them in California she called me to

00:16:28,080 --> 00:16:32,550
discuss it in the end because it was me

00:16:29,430 --> 00:16:34,560
they weren't being very clear and again

00:16:32,550 --> 00:16:36,930
you Puli experience this is just again

00:16:34,560 --> 00:16:38,220
their philosophy versus Google they're

00:16:36,930 --> 00:16:40,800
very protective of what goes on their

00:16:38,220 --> 00:16:42,870
app stores and also they're quite slow

00:16:40,800 --> 00:16:45,029
in that sense if you updates your app

00:16:42,870 --> 00:16:47,490
you can take several days figure out

00:16:45,029 --> 00:16:49,200
that would like to go out and they're

00:16:47,490 --> 00:16:52,500
very very stringent on their quality

00:16:49,200 --> 00:16:54,330
guidelines and this is a review a few of

00:16:52,500 --> 00:16:56,940
apps I've got published so again I've

00:16:54,330 --> 00:16:58,470
mentioned the guitar is alamos and a

00:16:56,940 --> 00:17:00,600
couple of tour apps which I've written

00:16:58,470 --> 00:17:05,220
one in Bristol of all the Banksy tours

00:17:00,600 --> 00:17:06,360
and Beatles locations in Liverpool if

00:17:05,220 --> 00:17:11,220
you're interested for you to check those

00:17:06,360 --> 00:17:13,439
out and finally I'm available hi folks

00:17:11,220 --> 00:17:16,050
I've just finished my current couldn't

00:17:13,439 --> 00:17:17,069
roll literally this week currently the

00:17:16,050 --> 00:17:20,240
University of which still gotta finish

00:17:17,069 --> 00:17:22,390
on Friday so please get in touch and

00:17:20,240 --> 00:17:27,669
that's it

00:17:22,390 --> 00:17:27,669

YouTube URL: https://www.youtube.com/watch?v=iRKe2PG8wFM


