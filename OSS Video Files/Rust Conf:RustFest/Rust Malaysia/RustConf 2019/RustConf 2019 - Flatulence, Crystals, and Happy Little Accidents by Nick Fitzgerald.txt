Title: RustConf 2019 - Flatulence, Crystals, and Happy Little Accidents by Nick Fitzgerald
Publication date: 2019-09-19
Playlist: RustConf 2019
Description: 
	RustConf 2019 - Flatulence, Crystlas, and Happy Little Accidents by Nick Fitzgerald

Sometimes programming Rust can feel like serious business. Let's reject the absurdity of the real world and slip into solipsism with generative art. How does Rust hold up as a paint brush? And what can we learn when our fantasy worlds bleed back into reality?
Captions: 
	                              [Music]                               oh hi everybody yeah I'm Nick thanks for                               coming to my talk about algorithmic art                               and rust before we get into the art and                               we get into the rust I'd like to share                               kind of my journey about how I got here                               so I do rust things for work these days                               I work on ah yeah hey are you gonna see                               the title slide alright yeah so I do                                rust things for work these days I do the                                intersection of rust and webassembly and                                I like to make fast things I like to                                make robust and reliable things I like                                to create tools that have good developer                                experiences and support many different                                use cases and help other people build                                fast robust and reliable things and I                                love my job but you know it's a lot of                                serious business right so what am i                                doing in my spare time outside of work                                well you know flashback to you know a                                year ago or so I'm mostly writing side                                projects in rust for fun but these side                                projects tend to be you know kind of                                like semi related to things I'm doing at                                work and then they had this tendency to                                actually just become part of work and I                                had this realization that I was just                                working the whole time and you know this                                isn't a recipe for a well-rounded life                                right so I took up pottery as a hobby                                and you know the physicality of getting                                my hands dirty and you know getting the                                clay in between my fingers really                                appealed to me but I wanted something                                you know that couldn't turn into work                                something that didn't have stakeholders                                or users reporting bugs or requesting                                features something that was just for me                                where I could relax and have fun and                                what I liked about the pottery process                                was that like every step along the way                                from like lump of clay to finished piece                                has so much depth and so many facets to                                it that you could spend a lifetime                                really digging into it you know if you                                love throwing on the wheel you can make                                these like long skinny vases and play                                with shape and form or you can even make                                your own glaze from scratch like matte                                with this piece here and in particular                                with glaze what I liked was it often                                felt like the hole was greater than the                                parts                                there's this sort of element of surprise                                because before you fire the piece the                                glaze is kind of chalky and it's dull                                and then after it comes out of the kiln                                it's like glassy and and shiny and                                colorful and you can combine glazes you                                know by mixing them together or you can                                layer one glaze on top of another glaze                                and at some point I discovered that if I                                put you know a thin layer of black glaze                                on top of my green glaze I got something                                that was kind of metallic and shimmery                                almost like an oil slick and neither                                glaze alone had this property but you                                combine them together and like something                                new emerges I liked this effect so much                                that I tried to recreate it with a                                series of five different bowls but only                                one actually survived the whole process                                into a finished piece and it's because                                it turns out that pottery is quite                                difficult and it requires a lot of                                patience you know things can break at                                every step of the way and when they                                break it tends to be irreparable because                                unlike software you don't have these                                niceties like undo and version control                                you know this difficulty is really part                                of the craft and it's what makes you                                know these really beautiful pieces that                                get finished so impressive because all                                the work it took to get there but I had                                this personal realization which is that                                despite all of these things that I                                really loved about pottery I was getting                                more frustrated by the difficulty than I                                was relaxing and having fun which were                                my original goals so I kind of heard of                                generative art or algorithmic art where                                people would write programs to generate                                images or little animation loops or                                maybe music and I recognized that there                                was kind of a similarity with pottery                                and kind of that surprise of combining                                glazes because generative art artists                                 are often searching for like a set of                                 very simple rules that when you combine                                 them they kind of create emergent                                 behavior that's bigger than any of those                                 single individual rules by themselves I                                 think a really good example of this is                                 process                                                    the way that this image is generated is                                 kind of behind the scenes there's                                 actually a simulation of a bunch of                                 circles moving around and whenever the                                 circles overlap or kind of touch each                                 other a line is drawn from the center of                                 one circle to the other circle and you                                 know these the sorry no code says you                                 know draw these trellises or create this                                 like echoing spiderweb effect this is                                 something that emerges from the process                                 to delight us and to surprise us and you                                 know I could look at pieces like this                                 and really appreciate their beauty                                 you know both on an artistic and                                 technical level but I wasn't quite                                 overcome by the urge to make this stuff                                 myself yet because there's still                                 something missing for me there's nothing                                 physical that I could hold in my hands                                 and that's when I discovered pen                                 plotters so a pen plotter is a robot it                                 has an arm and a hand and you take a pen                                 and you put your pen in the robots hand                                 and you say please draw something for me                                 and then kind of crucially important you                                 know it actually draws what you ask it                                 to and so now you can actually have a                                 physical pen and paper artifact of your                                 generative algorithm and I think that                                 this physical pen plotter medium                                 actually allows for even more emergence                                 than then software does because there                                 are more variables that you don't have                                 complete control over for example a pen                                 doesn't draw a perfect euclidean lines                                 with zero area different pens have                                 different widths they have different                                 colors                                 a ballpoint pen is going to draw a                                 different line from a fountain pen is                                 gonna draw a different line from a                                 marker it's gonna be different from a                                 gel pen and ink bleeds and so you have                                 to kind of grapple with that or maybe                                 you can purposely move your pen even                                 slower to get more bleeding and kind of                                 use that as an artistic effect colors                                 combine just like the ways you can                                 combine glazes and maybe you draw a blue                                 line on a yellow line and now you have a                                 unique green that you don't have any                                 marker to draw the only way to get that                                 is through combination I think that this                                 piece by Paul Records really takes                                 advantage of the medium superbly the way                                 that the rectangles overlap and the                                 colors combine kind of suggests a                                 transparency and a depth kind of                                 like a third dimension that doesn't                                 really exist in the code that only comes                                 out once you put it on paper and this                                 physicality of the pen of the pen                                 plotter medium this is what I was                                 missing from generative art in general                                 and so at this point I'm hooked and I                                 make my decision                                 I want to make algorithmic art and I                                 want to bring it into the physical world                                 with a pen plotter so I bought an ACCI                                 draw which is a popular pen plotter                                 these days but at this point I have a                                 whole lot more excitement than I have                                 knowledge I don't actually know how to                                 get the pen plotter to draw something                                 and what I learned was that the easiest                                 way is to use SVG SVG stands for                                 scalable vector graphics and it's an                                 image format but unlike most image                                 formats that you might know like JPEGs                                 or gifts it doesn't talk about pixels at                                 all                                 SVG talks about shapes and paths and                                 these shapes and paths are described                                 within an abstract coordinate space and                                 what the pen plotter can actually do is                                 it can scale that coordinate space up                                 and down to the size of the paper that                                 it's drawing on or the size of the                                 drawing that you're making and then it                                 will draw those scaled shapes and paths                                 so how many people here know HTML or XML                                 all right everybody that's awesome so as                                 you can see SVG is also a text format                                 that features many pointy brackets so                                 basically everyone who raised your hand                                 like you're you've taken your first step                                 towards being a generative artist and                                 this is actually the russ code generated                                 that previous SVG snippet because I                                 don't want to take any old SVG off the                                 internet and plot that what I want to do                                 is I want to generate my own SVG's and I                                 want to do that with russ so if you                                 search crates i/o for SVG the first hit                                 is the SVG crate and that's what's used                                 here it gives you this really nice                                 builder style API for kind of describing                                 and composing SVG elements and you can                                 get surprisingly far using just the SVG                                 crate so what this is doing is it's                                 actually drawing a triangle and the data                                 is a sequence of strokes in the                                 coordinate space and this is ultimately                                 what controls the pen so it says you                                 know move to this point and then draw a                                 line to that                                 point etc the path element is sort of                                 like the styles for the strokes so what                                 this is saying is that these strokes                                 should be thick and they should be blue                                 and then the area that's inside should                                 be filled in pink and then finally the                                 document is sort of the whole SVG image                                 and describes what kind of box in that                                 coordinate space is ultimately rendered                                 as the image now to get the SVG from you                                 know your computer to the EXCI draw I                                 use this tool called saxy and it gives                                 you this really nice web front-end for                                 kind of controlling the Pens up and down                                 height and kind of centering on the page                                 and I can't recommend it highly enough                                 if you're using an actually draw use                                 saxy and so here's the results of of                                 rendering it on the left that's a                                 software rendering of triangle SVG and                                 on the right this is a photograph of                                 triangle SVG as drawn by the pen plotter                                 with gel pen on black paper and so we                                 said that these lines should be thick                                 and they should be blue and that the                                 inside should be filled pink and yes the                                 software renderer did that but the pen                                 plotter can't because it can only draw                                 with the color of the pen that you gave                                 it and it basically ignores any sort of                                 fill so now that I can generate SVG's                                 and I can plot SVG's I kind of set an                                 exercise for myself how many different                                 ways could I fill a rectangle with                                 interesting pattern of strokes where I                                 parameter I parameterize this fill by                                 like a darkness value where a zero                                 darkness value means basically empty                                 there's no strokes in there and a one                                 darkness value means it's completely                                 full and there's just strokes covering                                 the whole thing so basically how many                                 implementations of this trait could I                                 make here are a few of the results so                                 this is rectangle eight with darkness                                 values                                                                   to generate rectangle eight is to move                                 some distance D along each of those                                 outer edges of the rectangle and so now                                 you have four points and you connect                                 those points by into a new quadrilateral                                 and then you continue recursively on                                 that new quadrilateral until basically                                 everything meets up in the center this                                 is rectangle two                                 the algorithm for rectangle                                         choose a random point within the                                 rectangle and then start generating                                 boxes outwards until it meets the                                 corners of the outer rectangle and so if                                 you have like a lower darkness value                                 you'll get fewer boxes that are kind of                                 spaced a little bit further apart and                                 you do a higher darkness value well                                 there will be more rectangles that are                                 packed really closely together and now                                 that I had a bunch of ways to create                                 rectangles I want to see how can I                                 combine them together and you can do                                 that by tiling them and then I could                                 vary that darkness value in how many                                 different interesting ways could I vary                                 the darkness value for a tiling this is                                 tiling                                                           darkness value for a particular                                 rectangle within the tiling is                                 determined by which row it appears in                                 and so the very top row has a darkness                                 value of                                                                 darkness value of                                                       interpolates as you go down the rows                                 between                                                          vertical gradient effect                                 this is tiling three of rectangle two                                 and the darkness for a particular                                 rectangle within this tiling is                                 determined by how close is it to the                                 center of the tiling and then a little                                 bit of random noise is introduced to                                 kind of perturb the results and make it                                 appear more organic and what I really                                 like about this one is that it kind of                                 has this kaleidoscope effect that maybe                                 looks like stained glass or even ripples                                 of on some geometric water right and I                                 like this because I wasn't intending to                                 get that it just kind of emerged from                                 the tiling and you know I liked that so                                 this was my favorite of the tiling                                 exercise and I decided to plot it so                                 here's a photo of that same image as                                 drawn by the pen plotter with black                                 ballpoint pen on white paper after                                 plotting I was kind of hit with another                                 surprise which is that the lines drawn                                 by the pen were much thicker and darker                                 than the lines drawn by the software                                 renderer and so it doesn't really look                                 you know like stained glass so much                                 anymore it's almost like there's a ghost                                 type Pokemon that's kind of                                 materializing from another dimension or                                 something right but it's cool either way                                 and so I think you know when you're                                 starting something new                                 often the hardest part is exterior at a                                 blank canvas and simultaneously having                                 an infinite number of options of things                                 that you could do but also not even                                 knowing what those infinite things are                                 and I think the best thing to do in this                                 situation is to completely sidestep the                                 problem by defining some set of                                 constraints and then as an exercise                                 fulfilling that constraints in as many                                 ways as you possibly can so how many                                 ways can you fill a rectangle how many                                 ways can you create a custom brushstroke                                 that follows a given path how many ways                                 can you visualize Perlin noise which is                                 a noise that gives you smooth gradients                                 of values instead of just random values                                 how many different kinds of random                                 Walker's can you create that move                                 through your coordinate space and                                 interesting ways maybe one is a particle                                 with random force applied to it maybe                                 another is a pendulum that swings but                                 then randomly chooses to swing from the                                 other side and it moves around and then                                 once you have these kind of base things                                 how can you combine them in interesting                                 ways can you tile the rectangles and                                 then vary the darkness value in                                 interesting ways                                 can you take the path drawn by one of                                 your random walkers and feed that into                                 one of your custom brushstrokes the                                 other thing that I think I really took                                 away from this is that you don't need                                 much to start making plotter art you                                 don't need to learn a big framework like                                 processing or p                                                      frameworks you can just start doing this                                 stuff now and so these first pieces were                                 made with just the SVG crate and SVG is                                 already a pretty rich language for                                 making drawings and I mentioned this                                 because learning new frameworks can be                                 intimidating they tend to have wide API                                 surfaces and many concepts to learn and                                 sometimes the best way to start                                 something is to just hit the ground                                 running and then later once you have a                                 problem that a framework can solve for                                 you maybe that's the time to reach for                                 the framework right so for example as we                                 saw with triangle that SVG you know                                 plotters don't support all of the                                 features that software vendors do for                                 SVG and so software renderers will fill                                 in shapes with colors or gradients but a                                 plotter will only draw that outline and                                 it can                                 we do that in the pens color that you                                 give it and if you want kind of a fill                                 well you have to do that yourself and                                 you need to describe that in actual                                 lines that the pen plotters going to                                 draw such as like a crosshatch pattern                                 and software and/or software renderers                                 will draw elements in order so a later                                 element that's drawn on top of an                                 earlier element can actually cover it up                                 and it can include it and with a plotter                                 it will also draw those elements in                                 order and the result is that you'll draw                                 the first element and then the second                                 element and you have two elements drawn                                 on top of each other and so if you want                                 occlusion with the pen plotter you have                                 to actually do that in software before                                 you even give it to the plotter and you                                 need to only generate pads that are not                                 covered up by anything else and so when                                 you start running into these sorts of                                 problems like now is the time to reach                                 for a library that helps you out or to                                 find a framework that that will do this                                 stuff for you or you can create your own                                 personal framework like I did I started                                 digging into the rabbit hole of                                 computational geometry and kind of                                 collecting my utilities together and I                                 named this set of crates fits Jen's art                                 but you know as a name fit shins are it                                 was really just too bloated and so to                                 release some of that pressure                                 it became part hence the the flatulence                                 in the talks title but I promise this is                                 the only fart joke in this talk and                                 nothing else is going to slip out                                 so I follow a few people on Twitter who                                 do microscope photography art this photo                                 is actually an extreme close-up of                                 aspirin crystals like aspirin like you'd                                 take for a headache and it was taken by                                 Carole rule Arden what I really like                                 about this photo is the way that there's                                 these kind of zones of crystals that fit                                 together and there's these kind of lines                                 radiating out from their centers that                                 almost look like exploding fireworks and                                 they have this kind of colorful pinwheel                                 effect going on I think this is really                                 quite cool and very inspiring and so I                                 would like to make you know some                                 plaughter art that's inspired by crystal                                 microscopy like this and these zones                                 really remind me of Voronoi diagrams a                                 Voronoi diagram is a partition of the                                 two-dimensional plane where you have a                                 set of seed points the seed points are                                 the black dots in this image and then                                 for every infinite point on the plane                                 you color that point by which seed it's                                 closest to and the result are these                                 zones similar to our crystal photo and                                 this makes sense because you can create                                 a Voronoi diagram by doing kind of like                                 a parallel flood-fill outwards from each                                 of those seed points at the same time at                                 the same rate and until they run into                                 something else from another seed and                                 this is kind of intuitively similar                                 maybe to the way that a crystal is                                 growing outwards until it hits another                                 crystal and it can't grow anymore so we                                 can use this understanding of Voronoi                                 diagrams to actually design an algorithm                                 for generating crystal inspired art and                                 so what I came up with is this choose                                 endpoints to be your seeds and then for                                 many more n of random points for each of                                 those find which seed is closest to it                                 and then draw a line to it and the hope                                 is that these lines are going to create                                 that sort of exploding fireworks                                 aesthetic and so this simple algorithm                                 actually works pretty well here it is                                 plotted on black paper with white gel                                 pen and already I can see the                                 resemblance right I can see the zones I                                 can see the fireworks                                 the only difference from the algorithm                                 that was just presented is that these                                 lines aren't                                 all the way to the seed there kind of                                 stopping partway just to give it a                                 little bit more breathing room and be a                                 little less crowded and next I wanted to                                 get more crystals of varying sizes you                                 know smaller and big ones and so my idea                                 for that was like what if I assigned                                 each of these crystals or each of the                                 seeds a gravity level and well it didn't                                 really come out at all how I intended                                 but you know I think it looks kind of                                 cool it really doubled down on maybe the                                 explosion style so you know ultimately                                 it's a happy little accident at the                                 other thing to note is that I introduced                                 an attempt to copy the pinwheel effect                                 and so what this is doing is it's not                                 just drawing a line to the center                                 regardless it looks at what is the angle                                 from this point to the scene and then                                 based on that angle it varies the length                                 of the line to kind of create that                                 two-tone pinwheel effect this is another                                 variation where now we're only choosing                                 points from within a circle and maybe it                                 looks like a contaminated petri dish but                                 I think maybe this is my favorite of the                                 series so it's kind of cool and this                                 final variation is using colors for that                                 pinwheel effect directly and and so the                                 AXI draw can only hold a single pen with                                 a single color right and so to plot this                                 I had to actually split out each of                                 those colors into different SVG layers                                 and then in between plotting each of                                 those layers I manually switched out the                                 Pens to switch the color and so this is                                 I think three or four layers right here                                 so is this kind of famous saying that                                 good artists copy but great artists                                 steal and since I'm really new at this                                 I'm happy to aim for just good but I                                 think the lesson here is to find                                 inspiration in something and then copy                                 it and you know maybe that something is                                 somebody else's plot or art that you                                 want to learn how it works or maybe it's                                 some vintage                                                            want to bring into the modern era or                                 maybe it's translating something that's                                 completely unrelated to computers and to                                 plotters into the plotter medium for                                 example maybe                                 the patterns of cracks on the glaze of                                 some pottery piece that you really like                                 or maybe it's the way that plants and                                 flowers and leaves kind of grow at this                                 in this mathematical way but I would be                                 lying to you if I said that I only had a                                 string of easy successes and it was                                 smooth sailing the whole time so earlier                                 I kind of presented the process as right                                 arrest program and then you use that                                 Russ program to generate an SVG and then                                 you plot that SVG with the pen plotter                                 and everything goes right every time the                                 first time and of course that's grossly                                 simplified I don't write perfect                                 programs on the first try sometimes                                 people say have rust or Haskell or                                 languages with interesting type systems                                 that if it compiles then it works                                 unfortunately I haven't found that to be                                 the case because I haven't figured out a                                 way to encode my aesthetic taste into                                 something that the borrowed checker can                                 encode can check at compile time right                                 but like kind of more fundamentally                                 often what I'm doing is I'm searching                                 for emergence I'm looking for the                                 unexpected I'm trying to be surprised                                 and so I don't actually know what it is                                 that I should be encoding into the type                                 system yet because I haven't found it                                 yet and so it's really happening is that                                 there's this feedback loop where I                                 generate some SPG's and then I look at                                 the SVG's and I say oh this is cool                                 that's not cool I go back and I tweak                                 the program and I look at the new SVG's                                 and I go oh yeah even more of that and                                 you know back and forth right until I'm                                 happy and then I plot it but the problem                                 is that this feedback loop is really too                                 slow and it involves a lot of manual                                 work on my part right I'm editing                                 sources and I say hey cargo please                                 compile this program please run this                                 program and then if there are no errors                                 and it generated an SVG okay oh I have                                 to alt-tab the firefox and then i have                                 to refresh that i actually see the new                                 SVG and then i alt-tab back to Emacs                                 when I'm ready to make changes I don't                                 have timing data for how long like one                                 iteration of this loop took but if I                                 were to estimate I'd say I'd probably be                                 at least like three or four whole                                 seconds before I was ready to kind of                                 like respond to anything and                                 and kind of do the next loop so luckily                                 this nice person Benjamin wrote an                                 article about what kind of tooling and                                 infrastructure you might want when                                 you're doing generative art and lays out                                 you know how to solve a bunch of                                 problems including this kind of instant                                 feedback problem and his advice is use a                                 file watcher and whenever you change any                                 source file in your project                                 automatically recompile the project                                 automatically rerun it and generate a                                 new image and if it compiled okay and it                                 generated a new SVG image okay then                                 actually save that image in your                                 repository and make a git commit like                                 just automatically and so this way you                                 never lose any image that you'll ever                                 generate and you have exactly the code                                 that generated that image so maybe                                 you're riffing on one idea right now you                                 can always go back at a later time and                                 riff on a completely different idea and                                 this is like exactly the kind of thing                                 that you cannot do with pottery so I                                 implemented a command line tool for the                                 fart framework and I really enjoy you                                 know saving all of these images and                                 stuff and it did speed up my feedback                                 loop a little bit but it really didn't                                 solve the problem this doesn't look that                                 different from the last version of the                                 feedback loop and so it's like yeah I'm                                 not manually kicking off compiles and                                 I'm not manually running the program but                                 I am still waiting on those compiles to                                 finish in this language that's kind of                                 infamous for not having great compile                                 time straight and I'm still doing all                                 this context switching with this alt                                 tabbing back and forth and I'm still                                 refreshing manually so I actually wanted                                 to dig into like what kinds of commits                                 am I actually making and so I looked at                                 a random sample of commits from one of                                 my projects that was using the file                                 watcher tool I went through each of                                 those commits and I categorized what                                 kind of change was that making and it                                 fell into just three buckets algorithmic                                 changes are you know sort of the beefier                                 changes things that are changing loops                                 or introducing if else's and these sorts                                 of things constant changes are me saying                                 I'm using this normal distribution that                                 I'm sampling random numbers from what if                                 the standard deviation was                                             of                                                                     and formatting changes are me running                                 rust format essentially and you know I                                 kind of knew deep down but to to have                                 empirical evidence that I'm spending the                                 majority of my time like                                                waiting on compiles to change                                          like it kind of blows my mind so what I                                 really wanted was some way to have                                 constant values in my program that I                                 could actually change in between runs of                                 the program without recompiling the                                 program so I invented this brand new                                 thing which I call user constants you                                 might know them by the name environment                                 variables but user constants aren't just                                 environment variables there's kind of                                 some infrastructure that goes along with                                 it to kind of make the whole process                                 really smooth and fast and so that                                 starts with a local server and the local                                 server serves up a web UI and every time                                 the generative program uses a new user                                 constant it creates a form input                                 dynamically in the web UI which is kind                                 of what's on the left here and you can                                 actually go into that form input and                                 tweak the constant value and this is                                 going to create a post request from the                                 web UI to the local server the local                                 server is going to update the                                 environment variable it's going to rerun                                 the program to generate a new SVG and                                 then the local server is going to send                                 that new SVG back to the web UI where                                 the preview is refreshed automatically                                 additionally I discovered this simple                                 effective thing that some people call                                 window management                                 so now I'm actually running a split                                 screen with Emacs on one side and the                                 web UI on the other side and so I don't                                 need to do all this context switching                                 anymore because I just kind of have                                 everything at my fingertips now and and                                 so for constant tweaking which were                                     of my changes right the critical path                                 for my feedback loop is now just edit                                 the constant and then essentially look                                 at what the images that's updated and                                 like technically yes I do need to rerun                                 the program but it happens automatically                                 for me and I'm not waiting around for                                 the program to finish running right this                                 is rust unless we were doing something                                 you know pretty bad it should be pretty                                 quick and so the previous screenshot it                                 says it took less than                                                 to generate that image which is really                                 just barely human perceptible so finally                                 my feedback loop is near instantaneous                                 and as a results I'm able to explore                                 more ideas faster than I previously                                 could and that's helping me make new                                 pieces that I'm increasingly happy with                                 such as this one and at the end of the                                 day I have a hobby that is not work                                 something that's just for me and I'm                                 having fun making algorithmic art with                                 rust and bringing it into the physical                                 world with a pen plotter                                 I hope my story has inspired some of you                                 to try your hand at plotter art or                                 generative art in general or maybe even                                 pick up pottery but I think a lot of                                 these takeaways are kind of generally                                 applicable not just to artistic                                 programming but professional programming                                 and maybe even other domains as well you                                 know can you define constraints for                                 yourself to make a problem smaller or                                 easier to solve can you break something                                 down into pieces if you want to learn                                 something try copying it if you want to                                 bring fresh new ideas into your domain                                 copy something from another domain and                                 if you want to boost your efficiency you                                 should treat your iteration time                                 actually as an optimization problem and                                 you should profile and gather empirical                                 evidence about what you're doing and                                 what you're waiting on and then you                                 should customize your tools or even                                 build your own custom tooling to make                                 that faster here are a few resources                                 that I found helpful that you can peruse                                 on your own time if you want to get more                                 into generative art and plotter art                                 and that's everything I have thank you                                 very much                                 [Music]
YouTube URL: https://www.youtube.com/watch?v=fQtOq33YAhY


