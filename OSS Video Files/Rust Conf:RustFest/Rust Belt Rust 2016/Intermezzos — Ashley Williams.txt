Title: Intermezzos â€” Ashley Williams
Publication date: 2017-10-25
Playlist: Rust Belt Rust 2016
Description: 
	Materials for this talk are available at https://intermezzos.github.io/rustbeltrust2016/#1
Captions: 
	00:00:05,100 --> 00:00:11,760
hey everyone as you might notice this is

00:00:09,010 --> 00:00:14,530
not a talk about rust and translation

00:00:11,760 --> 00:00:18,520
it's cool because it does say that on

00:00:14,530 --> 00:00:20,020
schedule I'm gonna head but pull

00:00:18,520 --> 00:00:23,759
inaudible is that like a sports thing

00:00:20,020 --> 00:00:28,179
alright cool something like that and and

00:00:23,759 --> 00:00:30,970
we're gone hopefully we'll be back up in

00:00:28,179 --> 00:00:34,720
a second zevran having a good time a

00:00:30,970 --> 00:00:37,329
tres Belle rust yeah I am extremely

00:00:34,720 --> 00:00:39,820
excited that Carolyn Jake and the entire

00:00:37,329 --> 00:00:41,110
team decided to throw this there's some

00:00:39,820 --> 00:00:46,930
of my favorite people and I like coming

00:00:41,110 --> 00:00:49,620
to Pittsburgh a lot so what's up with

00:00:46,930 --> 00:00:49,620
the slides

00:00:52,240 --> 00:00:55,220
alright

00:00:53,220 --> 00:00:57,820
[Music]

00:00:55,220 --> 00:00:57,820
hi

00:01:03,600 --> 00:01:06,960
if the trick is unplugging it and

00:01:05,729 --> 00:01:10,310
plugging it back in i'm going to be

00:01:06,960 --> 00:01:10,310
pretty sad myself

00:01:18,250 --> 00:01:28,090
alright we're back yeah got it to a B

00:01:23,890 --> 00:01:30,000
teams AV is so hard alright cool so I'm

00:01:28,090 --> 00:01:33,670
actually giving a talk today about

00:01:30,000 --> 00:01:34,990
intermezzo which is a teaching operating

00:01:33,670 --> 00:01:38,830
system and I'll get into that in a

00:01:34,990 --> 00:01:42,040
second but hi my name is Ashley Williams

00:01:38,830 --> 00:01:43,869
I go by a g-dubs on twitter you may know

00:01:42,040 --> 00:01:46,740
me from that I don't recommend you

00:01:43,869 --> 00:01:49,750
follow me on twitter i tweet too much

00:01:46,740 --> 00:01:51,940
and so I'm a little bit out of my

00:01:49,750 --> 00:01:53,860
element because I actually work for a

00:01:51,940 --> 00:01:58,060
company called NPM does anyone here know

00:01:53,860 --> 00:02:00,490
what mpm is cool no left bad jokes I

00:01:58,060 --> 00:02:02,950
swear take you out if you do that

00:02:00,490 --> 00:02:06,100
anyways I work for a company called mpm

00:02:02,950 --> 00:02:08,500
we're a package manager for javascript I

00:02:06,100 --> 00:02:11,020
sit on the board of directors of a

00:02:08,500 --> 00:02:12,489
language called nodejs well it's not

00:02:11,020 --> 00:02:13,510
really a language it's a runtime but

00:02:12,489 --> 00:02:16,000
again these are details that don't

00:02:13,510 --> 00:02:18,760
matter you could say that I'm a

00:02:16,000 --> 00:02:20,560
JavaScript person and I was so glad to

00:02:18,760 --> 00:02:23,019
hear that conversation about tribalism

00:02:20,560 --> 00:02:25,180
earlier because sometimes in the rest

00:02:23,019 --> 00:02:27,940
community you hear grumbles about this

00:02:25,180 --> 00:02:30,489
lovely little language but I started out

00:02:27,940 --> 00:02:32,230
actually as a rubios and the language

00:02:30,489 --> 00:02:35,590
that I learned right after Ruby was

00:02:32,230 --> 00:02:38,230
actually erling uh in general you could

00:02:35,590 --> 00:02:41,650
say that I really really really love

00:02:38,230 --> 00:02:43,420
programming languages so much and one of

00:02:41,650 --> 00:02:46,630
the reasons I like programming languages

00:02:43,420 --> 00:02:49,570
is because i really like thinking about

00:02:46,630 --> 00:02:50,970
thinking um i don't have a computer

00:02:49,570 --> 00:02:54,519
science degree my degree is in

00:02:50,970 --> 00:02:56,410
neuroscience and philosophy but that

00:02:54,519 --> 00:02:59,380
being said I do like thinking about the

00:02:56,410 --> 00:03:02,470
thinking that happens when people write

00:02:59,380 --> 00:03:04,690
code and one of the things that this

00:03:02,470 --> 00:03:06,489
kind of desire of mine has led to is

00:03:04,690 --> 00:03:08,500
working on this really neat project

00:03:06,489 --> 00:03:10,570
called intermezzo sand some of you got

00:03:08,500 --> 00:03:14,049
to be part of our very first workshop

00:03:10,570 --> 00:03:18,010
yesterday but this project actually

00:03:14,049 --> 00:03:20,739
started from a little funny story but

00:03:18,010 --> 00:03:22,989
first I'll say inner bezos is a teaching

00:03:20,739 --> 00:03:25,360
operating system specifically focused on

00:03:22,989 --> 00:03:27,930
introducing systems programming concepts

00:03:25,360 --> 00:03:30,000
to people who could have no

00:03:27,930 --> 00:03:32,010
programming language but are not

00:03:30,000 --> 00:03:33,810
familiar with systems programming one of

00:03:32,010 --> 00:03:35,700
the ways that the people who work I

00:03:33,810 --> 00:03:37,620
don't like to describe it is that it's

00:03:35,700 --> 00:03:41,730
like okay you can write some JavaScript

00:03:37,620 --> 00:03:43,650
now let's write an operating system and

00:03:41,730 --> 00:03:45,540
the way this kind of started was was

00:03:43,650 --> 00:03:46,500
sort of interesting so I started this

00:03:45,540 --> 00:03:49,230
with someone who will go completely

00:03:46,500 --> 00:03:51,750
unnamed but he looks exactly like his

00:03:49,230 --> 00:03:54,090
Twitter photo um but you may or may not

00:03:51,750 --> 00:03:55,590
have seen on he he was like hey do you

00:03:54,090 --> 00:03:57,750
want like stay in tonight put on some

00:03:55,590 --> 00:04:01,230
comfy pants and do a neat colonel

00:03:57,750 --> 00:04:03,689
tutorial and I was like oh yeah heck yes

00:04:01,230 --> 00:04:07,970
I do let's get close to the middle let's

00:04:03,689 --> 00:04:15,120
do this and then I was like oh wait wait

00:04:07,970 --> 00:04:19,320
can I write an operating system should I

00:04:15,120 --> 00:04:21,810
write an operating system like I was so

00:04:19,320 --> 00:04:23,220
worried I baked a whole cake just

00:04:21,810 --> 00:04:26,160
kidding I don't know how to bake a cake

00:04:23,220 --> 00:04:28,080
but I was nervous and part of this

00:04:26,160 --> 00:04:30,720
nervousness was coming from the fact

00:04:28,080 --> 00:04:33,690
that there's this amazing little website

00:04:30,720 --> 00:04:36,330
called OS dev org has anyone been to

00:04:33,690 --> 00:04:40,110
this website keep your hands up if you

00:04:36,330 --> 00:04:41,250
were motivated and throughs by it all

00:04:40,110 --> 00:04:42,659
right well I'm going to talk to you

00:04:41,250 --> 00:04:44,789
about a part that made me feel pretty

00:04:42,659 --> 00:04:46,620
terrible all right and it's this page

00:04:44,789 --> 00:04:48,510
called required knowledge and there's

00:04:46,620 --> 00:04:50,190
some really really special parts in this

00:04:48,510 --> 00:04:53,599
but just to make sure it's absolutely

00:04:50,190 --> 00:04:56,400
clear I think that this page is garbage

00:04:53,599 --> 00:04:58,050
total garbage so it starts off by saying

00:04:56,400 --> 00:05:01,800
that you need to have an understanding

00:04:58,050 --> 00:05:04,050
of basic computer science which includes

00:05:01,800 --> 00:05:08,880
being intimately familiar with

00:05:04,050 --> 00:05:10,710
hexadecimal and binary notation who here

00:05:08,880 --> 00:05:13,110
is intimately familiar with hexadecimal

00:05:10,710 --> 00:05:14,490
notation all right there were more

00:05:13,110 --> 00:05:16,199
people in Germany who felt like they

00:05:14,490 --> 00:05:18,270
were when i did this other time but

00:05:16,199 --> 00:05:20,580
seriously you would have intimately

00:05:18,270 --> 00:05:23,639
familiar whatever i don't know that is

00:05:20,580 --> 00:05:24,840
ridiculous all right then they went

00:05:23,639 --> 00:05:26,070
ahead and said with programming

00:05:24,840 --> 00:05:28,380
experience that learning about

00:05:26,070 --> 00:05:32,099
programming with an operating systems

00:05:28,380 --> 00:05:33,930
project is considered harmful all right

00:05:32,099 --> 00:05:36,150
let's just do away with considered

00:05:33,930 --> 00:05:36,990
harmful that's like not a cool thing to

00:05:36,150 --> 00:05:40,110
say and doesn't make

00:05:36,990 --> 00:05:43,110
any sense uh and lastly they let you

00:05:40,110 --> 00:05:45,240
know that failure to comply with any of

00:05:43,110 --> 00:05:49,140
this required knowledge would make you

00:05:45,240 --> 00:05:50,940
look silly and that's how you know the

00:05:49,140 --> 00:05:53,820
website is mostly run by 15 year old

00:05:50,940 --> 00:05:55,170
boys I know this because I have at least

00:05:53,820 --> 00:05:56,670
one confirmed person who is a

00:05:55,170 --> 00:05:59,790
fifteen-year-old boy who's really into

00:05:56,670 --> 00:06:01,410
this website uh-huh so yes failure to

00:05:59,790 --> 00:06:03,300
comply will make you look silly I mean

00:06:01,410 --> 00:06:05,730
looking silly maybe isn't all that awful

00:06:03,300 --> 00:06:08,010
but anyways this is not a cool idea I'm

00:06:05,730 --> 00:06:09,420
not into this at all and so what's

00:06:08,010 --> 00:06:12,180
interesting is that when we think about

00:06:09,420 --> 00:06:13,830
doing developing of operating systems or

00:06:12,180 --> 00:06:16,470
any systems level programming there's

00:06:13,830 --> 00:06:19,560
definitely this social feel that like

00:06:16,470 --> 00:06:21,150
this is for the leet programmers is not

00:06:19,560 --> 00:06:23,220
for like oh you like write CSS

00:06:21,150 --> 00:06:26,400
definitely don't write an operating

00:06:23,220 --> 00:06:28,830
system stay away this is not for you and

00:06:26,400 --> 00:06:30,390
that's really goofy and so to go back to

00:06:28,830 --> 00:06:32,850
the story when the intermezzo spread

00:06:30,390 --> 00:06:34,650
kind of came to its inception was this

00:06:32,850 --> 00:06:36,360
kernel tutorial and this kernel tutorial

00:06:34,650 --> 00:06:38,670
was written by this awesome person in

00:06:36,360 --> 00:06:40,590
Philip oper been and it was a series of

00:06:38,670 --> 00:06:43,350
blog post called writing an operating

00:06:40,590 --> 00:06:46,020
system in rust and you can check that

00:06:43,350 --> 00:06:48,440
out by going to this URL right here and

00:06:46,020 --> 00:06:50,820
it was super great the idea is that

00:06:48,440 --> 00:06:53,310
anybody can write an operating system

00:06:50,820 --> 00:06:55,650
and not only can anyone right one but

00:06:53,310 --> 00:06:57,390
they should write one all right so I was

00:06:55,650 --> 00:07:00,060
like all right yeah I can operating

00:06:57,390 --> 00:07:03,030
system and so can you this is great all

00:07:00,060 --> 00:07:06,030
right let's do this so I did that night

00:07:03,030 --> 00:07:09,810
we stayed in worked for like five or six

00:07:06,030 --> 00:07:12,570
hours and I got this amazing very very

00:07:09,810 --> 00:07:15,300
very very very small operating system

00:07:12,570 --> 00:07:17,460
that i wrote in rust and I was extremely

00:07:15,300 --> 00:07:19,140
excited to share this of course you see

00:07:17,460 --> 00:07:20,790
here like okay this is an operating

00:07:19,140 --> 00:07:24,000
system it looks like you printed hollow

00:07:20,790 --> 00:07:27,180
world to the terminal and I did and it

00:07:24,000 --> 00:07:29,370
is an operating system but there is a

00:07:27,180 --> 00:07:31,680
good question of like what what is

00:07:29,370 --> 00:07:34,710
operating system right like what the

00:07:31,680 --> 00:07:36,240
heck you might be hard pressed to

00:07:34,710 --> 00:07:38,220
actually kind of define what an

00:07:36,240 --> 00:07:40,080
operating system is and it turns out

00:07:38,220 --> 00:07:41,850
that a lot of people people who are very

00:07:40,080 --> 00:07:44,400
respected in operating systems also

00:07:41,850 --> 00:07:45,810
struggle with defining it so there's

00:07:44,400 --> 00:07:47,550
three definitions that we were able to

00:07:45,810 --> 00:07:49,140
find on this first one comes from a book

00:07:47,550 --> 00:07:49,480
called modern operating systems and they

00:07:49,140 --> 00:07:51,550
say

00:07:49,480 --> 00:07:53,680
it's hard to pin down what an operating

00:07:51,550 --> 00:07:55,780
system is other than saying it is the

00:07:53,680 --> 00:07:56,800
software that runs in kernel mode so

00:07:55,780 --> 00:07:58,540
that's like a bunch of words that they

00:07:56,800 --> 00:08:01,210
also haven't defined so we have no

00:07:58,540 --> 00:08:03,370
definition so far and even that is not

00:08:01,210 --> 00:08:06,190
always true so no definition that's also

00:08:03,370 --> 00:08:08,230
not always true cool part of the problem

00:08:06,190 --> 00:08:10,960
is that operating systems perform to

00:08:08,230 --> 00:08:13,570
basically unrelated functions providing

00:08:10,960 --> 00:08:15,370
application programmers a clean abstract

00:08:13,570 --> 00:08:17,860
set of resources instead of the messy

00:08:15,370 --> 00:08:20,470
hardware ones and then also managing

00:08:17,860 --> 00:08:21,880
these hardware resources okay so we have

00:08:20,470 --> 00:08:25,840
something going on with a kind of like

00:08:21,880 --> 00:08:27,490
some abstractions hardware the next but

00:08:25,840 --> 00:08:28,810
like they're not like really deciding

00:08:27,490 --> 00:08:32,110
you know haven't really said anything

00:08:28,810 --> 00:08:34,180
for sure so the next one very short a

00:08:32,110 --> 00:08:35,890
book called three easy pieces and they

00:08:34,180 --> 00:08:40,660
say virtualization concurrency and

00:08:35,890 --> 00:08:43,270
persistence those are good words yeah

00:08:40,660 --> 00:08:45,280
all right I still don't understand what

00:08:43,270 --> 00:08:46,660
operating system is and then so here

00:08:45,280 --> 00:08:49,420
from something called exterminate all

00:08:46,660 --> 00:08:51,340
operating systems abstractions we see

00:08:49,420 --> 00:08:53,920
that an operating system is software

00:08:51,340 --> 00:08:57,490
that securely multiplexes and abstracts

00:08:53,920 --> 00:08:59,610
physical resources wait for it we

00:08:57,490 --> 00:09:02,260
believe that the definition specifically

00:08:59,610 --> 00:09:03,880
this definition specifically its view on

00:09:02,260 --> 00:09:07,690
the operating system as an abstract ER

00:09:03,880 --> 00:09:11,170
of hardware is crippling and wrong all

00:09:07,690 --> 00:09:13,000
right so what's all right we don't

00:09:11,170 --> 00:09:14,980
really have a definition what's going on

00:09:13,000 --> 00:09:17,410
so in in the interim asus book we have

00:09:14,980 --> 00:09:19,930
to deal with this question and so we

00:09:17,410 --> 00:09:21,190
define it like this and so of course a

00:09:19,930 --> 00:09:22,630
bunch of the people who we just read

00:09:21,190 --> 00:09:25,300
their definitions kind of say this is

00:09:22,630 --> 00:09:27,130
wrong but we say an operating system is

00:09:25,300 --> 00:09:30,070
a program that provides a platform for

00:09:27,130 --> 00:09:32,380
other programs it provides mainly two

00:09:30,070 --> 00:09:34,630
things to these programs abstractions

00:09:32,380 --> 00:09:36,820
and isolation and abstractions in

00:09:34,630 --> 00:09:39,280
isolation kind of work as two sides of

00:09:36,820 --> 00:09:40,590
the same piece of paper here and so then

00:09:39,280 --> 00:09:42,490
the question is kind of like well

00:09:40,590 --> 00:09:44,200
abstractions isn't that what we're doing

00:09:42,490 --> 00:09:45,250
all the time in computer science maybe

00:09:44,200 --> 00:09:47,550
it's what we're doing all the time

00:09:45,250 --> 00:09:50,500
always but what kinds of upper

00:09:47,550 --> 00:09:51,700
abstractions so the common abstractions

00:09:50,500 --> 00:09:53,080
that an operating system is going to

00:09:51,700 --> 00:09:55,500
provide are going to be things like

00:09:53,080 --> 00:09:58,030
address spaces memory protection

00:09:55,500 --> 00:09:59,710
processes files and sometimes

00:09:58,030 --> 00:10:01,820
input/output devices so when we looked

00:09:59,710 --> 00:10:03,980
at my tiny little operating system what

00:10:01,820 --> 00:10:07,100
was doing it was dealing with outputting

00:10:03,980 --> 00:10:10,100
to the screen and so yes it was a very

00:10:07,100 --> 00:10:11,720
very small operating system but there's

00:10:10,100 --> 00:10:13,520
a kind of deep way of talking about

00:10:11,720 --> 00:10:14,840
these abstractions and why particularly

00:10:13,520 --> 00:10:18,020
the abstractions of an operating system

00:10:14,840 --> 00:10:19,580
are important so what you can imagine is

00:10:18,020 --> 00:10:22,850
that you have a program and you want

00:10:19,580 --> 00:10:24,560
that program to run on Hardware a if you

00:10:22,850 --> 00:10:26,330
just have Hardware a writing a program

00:10:24,560 --> 00:10:28,280
just for Hardware a isn't all that

00:10:26,330 --> 00:10:29,900
difficult but it's also not all that

00:10:28,280 --> 00:10:32,480
interesting and it turns out that we

00:10:29,900 --> 00:10:34,700
have a lot of hardware so if we want to

00:10:32,480 --> 00:10:37,280
write a program for Hardware a and

00:10:34,700 --> 00:10:39,200
hardware be what we need to do is we

00:10:37,280 --> 00:10:41,360
need to put an abstraction in the middle

00:10:39,200 --> 00:10:43,700
and what we see here is that operating

00:10:41,360 --> 00:10:47,570
system is going to be that exact

00:10:43,700 --> 00:10:48,980
abstraction now you might also be

00:10:47,570 --> 00:10:50,960
familiar with the fact that you might

00:10:48,980 --> 00:10:53,750
want to write programs for more than one

00:10:50,960 --> 00:10:55,490
operating system and then what you can

00:10:53,750 --> 00:10:57,200
see here is we follow this same pattern

00:10:55,490 --> 00:10:58,910
of abstraction and throw a virtual

00:10:57,200 --> 00:11:01,340
machine right there in the middle now

00:10:58,910 --> 00:11:02,780
again with the tribalism of languages

00:11:01,340 --> 00:11:04,490
perhaps we don't have people who are so

00:11:02,780 --> 00:11:06,170
fond of Java here but this is one of the

00:11:04,490 --> 00:11:08,390
awesome things that Java did with javas

00:11:06,170 --> 00:11:10,220
virtual machine so these abstractions

00:11:08,390 --> 00:11:11,930
can while they follow the same kind of

00:11:10,220 --> 00:11:14,720
pattern be really important and have

00:11:11,930 --> 00:11:16,850
huge implications so we have this kind

00:11:14,720 --> 00:11:19,190
of generic pattern of how these

00:11:16,850 --> 00:11:22,790
abstractions were where we say we have a

00:11:19,190 --> 00:11:26,360
and a is explicitly written for X but

00:11:22,790 --> 00:11:28,940
I'd really like to support x and y and

00:11:26,360 --> 00:11:35,150
so I'm going to put abstraction be in

00:11:28,940 --> 00:11:37,370
the middle all right so quick break if

00:11:35,150 --> 00:11:38,810
you get anything from this talk I love

00:11:37,370 --> 00:11:40,820
throwing this quote in my talks this is

00:11:38,810 --> 00:11:42,500
a mathematician named George eat box and

00:11:40,820 --> 00:11:44,870
so we're talking about abstractions

00:11:42,500 --> 00:11:49,040
right and so he has this amazing quote

00:11:44,870 --> 00:11:50,570
and he says remember all models are here

00:11:49,040 --> 00:11:55,130
we can understand the word abstractions

00:11:50,570 --> 00:11:58,130
remember all abstractions are wrong the

00:11:55,130 --> 00:12:02,030
practical question is how wrong do they

00:11:58,130 --> 00:12:03,650
have to be to not be useful so why am I

00:12:02,030 --> 00:12:05,540
saying this I'm saying this is because

00:12:03,650 --> 00:12:07,850
of my favorite definition of operating

00:12:05,540 --> 00:12:09,470
systems is an operating systems job is

00:12:07,850 --> 00:12:12,140
to lie

00:12:09,470 --> 00:12:13,520
all right it is providing abstractions

00:12:12,140 --> 00:12:15,110
and is providing those abstractions and

00:12:13,520 --> 00:12:16,640
those abstractions are lies we're going

00:12:15,110 --> 00:12:18,680
to tell the program the program can use

00:12:16,640 --> 00:12:20,510
all Denari there's no other programs out

00:12:18,680 --> 00:12:22,940
there when it's running a program i can

00:12:20,510 --> 00:12:24,560
just believe that all right now that's

00:12:22,940 --> 00:12:26,150
kind of heavy and so if you're trying to

00:12:24,560 --> 00:12:28,280
get beginners excited about operating

00:12:26,150 --> 00:12:29,660
systems I mean depending on to the type

00:12:28,280 --> 00:12:31,040
of person maybe you could be like we're

00:12:29,660 --> 00:12:33,950
gonna build a program that's just full

00:12:31,040 --> 00:12:36,860
of lies and you're like let's do it but

00:12:33,950 --> 00:12:40,040
instead instead we went with this word

00:12:36,860 --> 00:12:42,440
intermezzo which is a noun that means a

00:12:40,040 --> 00:12:44,240
light dramatic musical or performance

00:12:42,440 --> 00:12:46,190
that's inserted between acts of a play

00:12:44,240 --> 00:12:48,380
and this was a really great name for a

00:12:46,190 --> 00:12:50,000
lot of reasons first off it really

00:12:48,380 --> 00:12:51,410
played on that idea of abstractions that

00:12:50,000 --> 00:12:54,020
the abstractions is what you stick in

00:12:51,410 --> 00:12:55,520
the middle of something but also it's

00:12:54,020 --> 00:12:57,860
something kind of light this is a hobby

00:12:55,520 --> 00:13:00,230
OS right we're not actually trying to

00:12:57,860 --> 00:13:02,630
like rewrite Linux or UNIX we don't want

00:13:00,230 --> 00:13:04,850
to do that and so this is the name that

00:13:02,630 --> 00:13:06,860
we chose for the project now the next

00:13:04,850 --> 00:13:08,180
question is where it may be we kind of

00:13:06,860 --> 00:13:10,970
have an idea of what an operating system

00:13:08,180 --> 00:13:12,170
is what the heck is a kernel sometimes

00:13:10,970 --> 00:13:13,970
people say Colonel and they mean

00:13:12,170 --> 00:13:15,320
operating system I think or Colonel

00:13:13,970 --> 00:13:17,540
output what is the difference all right

00:13:15,320 --> 00:13:19,820
so this is definitely a little bit fuzzy

00:13:17,540 --> 00:13:22,100
and you hear things like the software

00:13:19,820 --> 00:13:24,440
that runs in kernel mode but even that's

00:13:22,100 --> 00:13:26,720
not always true the way I use the word

00:13:24,440 --> 00:13:28,820
colonel is just a mean this is like the

00:13:26,720 --> 00:13:30,110
kind of core part of the operating

00:13:28,820 --> 00:13:32,300
system so you have an operating system

00:13:30,110 --> 00:13:34,370
in the colonel it's kind of the middle

00:13:32,300 --> 00:13:35,960
part and if you have a super super small

00:13:34,370 --> 00:13:38,630
one maybe the middle part is just the

00:13:35,960 --> 00:13:39,800
whole part so an operating system or

00:13:38,630 --> 00:13:41,120
Colonel I kind of use them

00:13:39,800 --> 00:13:42,830
interchangeably and if you'd like to

00:13:41,120 --> 00:13:47,090
fight with me about that we can do it in

00:13:42,830 --> 00:13:48,170
the hallway all right so a lot of things

00:13:47,090 --> 00:13:49,460
and this has become something that's

00:13:48,170 --> 00:13:51,650
kind of popular recently is they're all

00:13:49,460 --> 00:13:52,820
different types of kernels so one that

00:13:51,650 --> 00:13:55,430
you might be familiar with UNIX

00:13:52,820 --> 00:13:58,010
monolithic kernel but there's also micro

00:13:55,430 --> 00:14:00,080
kernels and EXO kernels and yoona

00:13:58,010 --> 00:14:03,290
kernels and all these different types of

00:14:00,080 --> 00:14:06,200
kernels I don't know there's so many

00:14:03,290 --> 00:14:07,370
types all right what's the difference I

00:14:06,200 --> 00:14:09,830
don't know it's whatever someone

00:14:07,370 --> 00:14:12,150
recently said in medium and that joke

00:14:09,830 --> 00:14:16,800
was so good at broke the AV again

00:14:12,150 --> 00:14:23,370
whoo yeah I don't know why the AV didn't

00:14:16,800 --> 00:14:29,220
work anymore all right have you tried

00:14:23,370 --> 00:14:33,120
plugging it in let's see I do not know

00:14:29,220 --> 00:14:40,290
so how cool is it that it's not raining

00:14:33,120 --> 00:14:42,240
today yeah all right let's see and we're

00:14:40,290 --> 00:14:44,430
back all right that may or may not be

00:14:42,240 --> 00:14:46,620
happening every once in a while so let's

00:14:44,430 --> 00:14:48,000
get used to it cool so again if you

00:14:46,620 --> 00:14:49,590
missed any of the important types of

00:14:48,000 --> 00:14:52,290
kernels they're all listed here I did

00:14:49,590 --> 00:14:54,840
post my slides please write medium think

00:14:52,290 --> 00:14:56,550
pieces on all of them um but yeah okay

00:14:54,840 --> 00:14:58,800
all these different types of kernels all

00:14:56,550 --> 00:15:00,150
these white dude actors have no idea

00:14:58,800 --> 00:15:01,320
what's going on and probably the people

00:15:00,150 --> 00:15:04,470
read and girls don't know what's going

00:15:01,320 --> 00:15:05,730
on so a big theme here is that systems

00:15:04,470 --> 00:15:07,560
programming it's supposed to be so

00:15:05,730 --> 00:15:09,210
official in serious was like most of the

00:15:07,560 --> 00:15:10,950
times we're just kind of making it up as

00:15:09,210 --> 00:15:12,660
we go we don't even have like a defined

00:15:10,950 --> 00:15:15,300
like ontology for how to even talk about

00:15:12,660 --> 00:15:16,680
these things all right so then the next

00:15:15,300 --> 00:15:18,960
question is all right so you're gonna

00:15:16,680 --> 00:15:20,580
build an operating system what kind of

00:15:18,960 --> 00:15:22,650
operating system you know my gosh

00:15:20,580 --> 00:15:23,760
there's a lot of questions here a lot of

00:15:22,650 --> 00:15:26,760
questions and it turns out what kind of

00:15:23,760 --> 00:15:29,850
operating system it doesn't matter all

00:15:26,760 --> 00:15:32,280
right we could waste tons of time trying

00:15:29,850 --> 00:15:33,720
to design this perfect operating system

00:15:32,280 --> 00:15:36,060
we could spend time drying it out

00:15:33,720 --> 00:15:38,340
writing all product specs but will never

00:15:36,060 --> 00:15:39,900
actually build it and the whole point of

00:15:38,340 --> 00:15:41,580
the inter mrs. project is that you're

00:15:39,900 --> 00:15:43,260
going in and getting dirty and just

00:15:41,580 --> 00:15:45,150
trying to figure some stuff out all

00:15:43,260 --> 00:15:46,740
right the goal here is to learn and it's

00:15:45,150 --> 00:15:48,740
definitely not to make the best

00:15:46,740 --> 00:15:50,880
operating system that ever existed

00:15:48,740 --> 00:15:52,320
recently when we were talking about like

00:15:50,880 --> 00:15:53,760
as we're continuing to build in our maze

00:15:52,320 --> 00:15:55,920
us out or like oh maybe we'll do like

00:15:53,760 --> 00:15:57,900
any kind of unique style way but then

00:15:55,920 --> 00:15:59,520
recently we've been talking about mm

00:15:57,900 --> 00:16:01,770
futures is out and Ross that's pretty

00:15:59,520 --> 00:16:03,930
cool what if we kind of modeled the the

00:16:01,770 --> 00:16:06,120
operating system on like v8 and the

00:16:03,930 --> 00:16:07,830
event loop and no that'd be that'd be

00:16:06,120 --> 00:16:09,630
pretty neat and like is that going to be

00:16:07,830 --> 00:16:11,220
the best operating system ever probably

00:16:09,630 --> 00:16:15,060
not but it's probably going to be really

00:16:11,220 --> 00:16:16,980
interesting so again when you're talking

00:16:15,060 --> 00:16:18,690
about what is operating system finally

00:16:16,980 --> 00:16:20,370
as like gosh this question what is it

00:16:18,690 --> 00:16:23,100
what is it and it came up with this

00:16:20,370 --> 00:16:24,180
because I'm a huge Carl Sagan fan so

00:16:23,100 --> 00:16:25,920
what does

00:16:24,180 --> 00:16:27,570
operating system if you wish to computer

00:16:25,920 --> 00:16:29,070
from scratch you must first invent the

00:16:27,570 --> 00:16:31,140
universe I mean invent an operating

00:16:29,070 --> 00:16:33,570
system the operating system is kind of

00:16:31,140 --> 00:16:35,370
the universe here and it's funny because

00:16:33,570 --> 00:16:36,870
I originally when were the first docs

00:16:35,370 --> 00:16:38,700
that ever gave is called if you wish to

00:16:36,870 --> 00:16:40,560
learn es6 from scratch you must first

00:16:38,700 --> 00:16:42,089
invent the universe and i realized last

00:16:40,560 --> 00:16:43,920
night i'm pretty sure all the conference

00:16:42,089 --> 00:16:48,149
talks I've ever given are just slowly

00:16:43,920 --> 00:16:49,830
becoming the same talk so the Holy kind

00:16:48,149 --> 00:16:51,510
of message here that I really want to

00:16:49,830 --> 00:16:53,940
say is guess operating systems cool

00:16:51,510 --> 00:16:55,140
let's do some stuff but you know if you

00:16:53,940 --> 00:16:56,910
want to be an awesome program or

00:16:55,140 --> 00:16:58,770
whatever you don't have to invent the

00:16:56,910 --> 00:17:01,589
universe but that's not really the

00:16:58,770 --> 00:17:04,110
problem it's it's the idea that if you

00:17:01,589 --> 00:17:06,240
want to a lot of people tell you you

00:17:04,110 --> 00:17:07,800
can't and i want to say no if you want

00:17:06,240 --> 00:17:12,660
to invent the universe you absolutely

00:17:07,800 --> 00:17:14,850
can and if you want to you should and

00:17:12,660 --> 00:17:16,890
that's the whole point of intermezzo so

00:17:14,850 --> 00:17:18,300
what we're doing here is like let's make

00:17:16,890 --> 00:17:20,220
the computer do a thing with like

00:17:18,300 --> 00:17:21,630
basically nothing else that's that's

00:17:20,220 --> 00:17:22,770
what building an operating system is

00:17:21,630 --> 00:17:25,740
when we're thinking about the inter

00:17:22,770 --> 00:17:29,660
maces project um and as I say get low

00:17:25,740 --> 00:17:32,630
you know get low level programming yeah

00:17:29,660 --> 00:17:36,150
sorry i'm trying to delete it sorry um

00:17:32,630 --> 00:17:37,800
okay all right so let's take a look at

00:17:36,150 --> 00:17:40,530
what inner mrs. actually looks like so

00:17:37,800 --> 00:17:42,450
we're gonna do some awesome demo time in

00:17:40,530 --> 00:17:44,280
a second but one of the tricky things

00:17:42,450 --> 00:17:45,540
about building an operating system is

00:17:44,280 --> 00:17:47,010
there's actually quite a few

00:17:45,540 --> 00:17:49,620
prerequisites it's kind of complicated

00:17:47,010 --> 00:17:51,120
so what I'll quickly do before we do

00:17:49,620 --> 00:17:52,830
some demos is talk about kind of getting

00:17:51,120 --> 00:17:54,570
up and running what our Linux

00:17:52,830 --> 00:17:57,450
dependencies are and some utilities that

00:17:54,570 --> 00:17:58,860
you can use to help yourself out and so

00:17:57,450 --> 00:18:00,600
when I talk about getting up and running

00:17:58,860 --> 00:18:02,130
I absolutely love the street this from a

00:18:00,600 --> 00:18:03,900
colleague of mine from a few years ago

00:18:02,130 --> 00:18:05,790
and he writes I wonder how many

00:18:03,900 --> 00:18:08,040
programmers want their entire career

00:18:05,790 --> 00:18:10,380
without ever getting their development

00:18:08,040 --> 00:18:11,580
environment working anyone in here who

00:18:10,380 --> 00:18:13,679
still doesn't have their development

00:18:11,580 --> 00:18:16,980
environment working yeah there we go

00:18:13,679 --> 00:18:19,590
yeah this stuff is so hard I was

00:18:16,980 --> 00:18:21,210
recently a friend visited me in New York

00:18:19,590 --> 00:18:23,100
City and we're kind of talking about the

00:18:21,210 --> 00:18:25,710
intermezzo project and he was like he

00:18:23,100 --> 00:18:27,929
finally was just like how do you do that

00:18:25,710 --> 00:18:30,360
like don't you're already running an

00:18:27,929 --> 00:18:32,100
operating system on your computer so how

00:18:30,360 --> 00:18:33,600
do you and like yeah this is really

00:18:32,100 --> 00:18:34,710
really hard its kind of even hard to

00:18:33,600 --> 00:18:36,360
conceive you don't even know what

00:18:34,710 --> 00:18:36,659
questions to really ask to figure out

00:18:36,360 --> 00:18:39,419
what

00:18:36,659 --> 00:18:41,970
tools so these are the tools that the

00:18:39,419 --> 00:18:44,070
interim asos project uses there's

00:18:41,970 --> 00:18:46,109
something called Nazem which is the

00:18:44,070 --> 00:18:47,940
assembler there's been called LD which

00:18:46,109 --> 00:18:49,559
is the linker if you're working on a Mac

00:18:47,940 --> 00:18:50,669
you have to like use a different linker

00:18:49,559 --> 00:18:52,799
and that makes everything difficult

00:18:50,669 --> 00:18:55,619
believe it or not the Mac operating

00:18:52,799 --> 00:18:57,720
system is by far the hardest one to get

00:18:55,619 --> 00:19:00,210
this stuff working on so for all of its

00:18:57,720 --> 00:19:01,889
like ease of use for all these other

00:19:00,210 --> 00:19:03,720
things it was extremely difficult to get

00:19:01,889 --> 00:19:05,340
this kind of stuff started what I

00:19:03,720 --> 00:19:07,349
originally was working on Phil Opperman

00:19:05,340 --> 00:19:09,269
Stu torial I'm actually listed in his

00:19:07,349 --> 00:19:11,759
blog post now because I started trying

00:19:09,269 --> 00:19:13,979
to build it on my Chromebook pixel and

00:19:11,759 --> 00:19:15,149
couldn't forward the graphics and then I

00:19:13,979 --> 00:19:16,619
tried to get it up and running on the

00:19:15,149 --> 00:19:18,389
mac and i eventually had to write like a

00:19:16,619 --> 00:19:20,970
vagrant file for it because it was just

00:19:18,389 --> 00:19:22,830
completely completely impossible luckily

00:19:20,970 --> 00:19:25,200
somebody has written an awesome script

00:19:22,830 --> 00:19:28,529
that usually can mostly take care of all

00:19:25,200 --> 00:19:31,379
the things you need computers right how

00:19:28,529 --> 00:19:32,849
do they work so after the linker there's

00:19:31,379 --> 00:19:34,200
this thing called grub this is probably

00:19:32,849 --> 00:19:35,999
the one thing that you've maybe seen

00:19:34,200 --> 00:19:37,769
before if you haven't worked in any sort

00:19:35,999 --> 00:19:39,029
of operating systems development it's

00:19:37,769 --> 00:19:40,529
that thing that kind of shows up at the

00:19:39,029 --> 00:19:42,389
beginning of your like I don't know

00:19:40,529 --> 00:19:43,739
probably this is like a decade ago it

00:19:42,389 --> 00:19:45,119
would show up at the beginning when

00:19:43,739 --> 00:19:47,159
you're booting up your computer if say

00:19:45,119 --> 00:19:48,869
you had like a rescue disk in there and

00:19:47,159 --> 00:19:50,429
you could select it as like blue and

00:19:48,869 --> 00:19:54,779
white you knew that you were in trouble

00:19:50,429 --> 00:19:58,830
if you saw it yeah and then after grub

00:19:54,779 --> 00:20:02,119
there's this amazing I imagine it's X or

00:19:58,830 --> 00:20:06,029
ISO but i really like calling it Teresa

00:20:02,119 --> 00:20:08,549
um so please confirm that I'm a hundred

00:20:06,029 --> 00:20:10,739
percent correct only I am NOT I don't

00:20:08,549 --> 00:20:12,720
want to be disabused of this idea but

00:20:10,739 --> 00:20:14,460
then finally the thing that really is

00:20:12,720 --> 00:20:15,629
what made it click for me is the how are

00:20:14,460 --> 00:20:17,460
you actually going to develop this

00:20:15,629 --> 00:20:20,099
operating system is this super-awesome

00:20:17,460 --> 00:20:21,869
thing called chemo which depending on

00:20:20,099 --> 00:20:23,879
what type of operating system you are

00:20:21,869 --> 00:20:25,919
trying to run on what type of hardware

00:20:23,879 --> 00:20:28,950
on your computer is either just a

00:20:25,919 --> 00:20:31,289
virtualizer or an emulator so it's going

00:20:28,950 --> 00:20:33,269
to let you be able to build things on to

00:20:31,289 --> 00:20:35,909
run operating systems like on a virtual

00:20:33,269 --> 00:20:37,499
hardware or you could just you can also

00:20:35,909 --> 00:20:39,210
emulate different types of hardware so

00:20:37,499 --> 00:20:43,409
you can try writing operating systems

00:20:39,210 --> 00:20:45,479
for those as well so and then finally

00:20:43,409 --> 00:20:46,919
there's these neat utilities so

00:20:45,479 --> 00:20:48,070
something I do have to say about

00:20:46,919 --> 00:20:49,900
operating systems de ville

00:20:48,070 --> 00:20:51,610
and this is why it's so great that we're

00:20:49,900 --> 00:20:54,040
able to move some of it so much of our

00:20:51,610 --> 00:20:56,200
project into rust is because when you're

00:20:54,040 --> 00:20:59,860
not in rust the error messages are

00:20:56,200 --> 00:21:01,150
really really bad like just fill the

00:20:59,860 --> 00:21:03,550
screen with a bunch of garbage that does

00:21:01,150 --> 00:21:05,620
not make any sense when I first gave

00:21:03,550 --> 00:21:07,930
this talk I actually did some assembly

00:21:05,620 --> 00:21:10,060
live coding and messed up and was able

00:21:07,930 --> 00:21:12,310
to demonstrate just how terrible those

00:21:10,060 --> 00:21:14,290
errors are we won't be live coding

00:21:12,310 --> 00:21:16,630
assembly today but take it from me the

00:21:14,290 --> 00:21:19,210
errors are pretty brutal but these are

00:21:16,630 --> 00:21:21,610
two pretty awesome utilities that you

00:21:19,210 --> 00:21:23,740
can install that will be able to let you

00:21:21,610 --> 00:21:26,230
kind of inspect the binaries and stuff

00:21:23,740 --> 00:21:29,530
that you end up creating and that can be

00:21:26,230 --> 00:21:31,000
nice so when we're thinking about

00:21:29,530 --> 00:21:32,680
building an operating system we kind of

00:21:31,000 --> 00:21:36,040
need to understand alright what happens

00:21:32,680 --> 00:21:37,810
when we turn on our computer and luckily

00:21:36,040 --> 00:21:39,070
we have a lot of us when we're doing

00:21:37,810 --> 00:21:41,020
development don't have to think about

00:21:39,070 --> 00:21:44,110
these things but in general what happens

00:21:41,020 --> 00:21:45,850
is the first step is you have the

00:21:44,110 --> 00:21:47,730
hardware load something called BIOS

00:21:45,850 --> 00:21:50,230
which stands for basic input/output

00:21:47,730 --> 00:21:51,850
service all of these names sounds like

00:21:50,230 --> 00:21:56,080
kind of like dystopian generic

00:21:51,850 --> 00:21:58,090
corporations to me and then BIOS loads

00:21:56,080 --> 00:22:00,100
grub which I like to think of us like a

00:21:58,090 --> 00:22:03,250
cute little worm but it stands for grand

00:22:00,100 --> 00:22:07,450
unified bootloader which definitely

00:22:03,250 --> 00:22:10,660
sounds fascist and then lastly lastly

00:22:07,450 --> 00:22:13,810
then grub roads are colonel all right

00:22:10,660 --> 00:22:15,190
and so we've done all of this and part

00:22:13,810 --> 00:22:17,530
of the reason this was able to work is

00:22:15,190 --> 00:22:19,570
because you use that thing called LD to

00:22:17,530 --> 00:22:21,520
link some stuff together and so this

00:22:19,570 --> 00:22:23,020
linking is talking about how sections in

00:22:21,520 --> 00:22:25,180
input file should be mapped to the

00:22:23,020 --> 00:22:26,680
output files this is really like at

00:22:25,180 --> 00:22:30,250
least in the way I understand it like

00:22:26,680 --> 00:22:32,350
pretty just fancy concatenation but

00:22:30,250 --> 00:22:34,480
what's important about this is that it

00:22:32,350 --> 00:22:36,820
just makes sure that the header info is

00:22:34,480 --> 00:22:39,160
up at the top so that grub knows what

00:22:36,820 --> 00:22:40,840
the heck is trying to load and you can

00:22:39,160 --> 00:22:42,190
understand these headers like similar to

00:22:40,840 --> 00:22:44,410
the way you think of requests and

00:22:42,190 --> 00:22:45,940
response headers in HTTP it's really

00:22:44,410 --> 00:22:49,240
that it's just giving you some metadata

00:22:45,940 --> 00:22:52,630
about what you need to do and so what

00:22:49,240 --> 00:22:54,310
comes next after that and so this is a

00:22:52,630 --> 00:22:55,900
really complicated part and this is by

00:22:54,310 --> 00:22:58,300
far the hardest part that we've done in

00:22:55,900 --> 00:22:59,830
the operating system so far is jumping

00:22:58,300 --> 00:23:02,049
into longbow does

00:22:59,830 --> 00:23:04,570
here no one long mood is all right cool

00:23:02,049 --> 00:23:06,669
we got some people so when every

00:23:04,570 --> 00:23:09,220
computer starts up it originally thinks

00:23:06,669 --> 00:23:12,190
that it's in 32-bit mode even though it

00:23:09,220 --> 00:23:14,679
could potentially be in 64-bit mode and

00:23:12,190 --> 00:23:16,600
so every time it starts up it needs to

00:23:14,679 --> 00:23:18,850
do this kind of impossible thing which

00:23:16,600 --> 00:23:20,799
is like I think I'm one thing and I am

00:23:18,850 --> 00:23:22,269
just going to dive into this impossible

00:23:20,799 --> 00:23:24,429
thing that I maybe can't do and then

00:23:22,269 --> 00:23:26,679
suddenly oh I am okay I could I could be

00:23:24,429 --> 00:23:29,409
64 bit and when we were doing the

00:23:26,679 --> 00:23:31,510
workshop yesterday steve said is very

00:23:29,409 --> 00:23:33,399
endearing that my computer is willing to

00:23:31,510 --> 00:23:36,070
jump off a cliff for me every time it

00:23:33,399 --> 00:23:39,970
turns on so that's probably the best way

00:23:36,070 --> 00:23:41,889
to describe what long that is um ok so

00:23:39,970 --> 00:23:43,059
we've talked a lot about all these kind

00:23:41,889 --> 00:23:44,500
of different steps in the operating

00:23:43,059 --> 00:23:47,440
system let's take a look at what

00:23:44,500 --> 00:23:51,370
intermezzo 'he's actually looks like so

00:23:47,440 --> 00:23:57,340
may the demo gods be with me hopefully

00:23:51,370 --> 00:24:00,159
we also keep the AV alright so firstly

00:23:57,340 --> 00:24:02,919
I'll say I've posted all these slides

00:24:00,159 --> 00:24:03,940
and the demos to the github and tweeted

00:24:02,919 --> 00:24:05,889
them out so if you're interested in

00:24:03,940 --> 00:24:08,320
playing around with these but this is

00:24:05,889 --> 00:24:11,049
the actual interim Asus code that you

00:24:08,320 --> 00:24:11,950
can also contribute to so the first

00:24:11,049 --> 00:24:15,190
thing I'm going to do is just going to

00:24:11,950 --> 00:24:17,889
load up our bare bones colonel so we can

00:24:15,190 --> 00:24:19,539
see in here this is actually running in

00:24:17,889 --> 00:24:25,360
Russ so we've written it out and rust

00:24:19,539 --> 00:24:28,120
and we can take a look at this and so

00:24:25,360 --> 00:24:30,940
what we have right now is here's our k

00:24:28,120 --> 00:24:34,870
main and inside this safe block we have

00:24:30,940 --> 00:24:36,669
a bunch of these lines and so what you

00:24:34,870 --> 00:24:39,370
can see here pretty much is happening is

00:24:36,669 --> 00:24:41,529
I'm defining a variable and this right

00:24:39,370 --> 00:24:43,690
here is the location on the screen that

00:24:41,529 --> 00:24:48,309
I want to put something and then right

00:24:43,690 --> 00:24:53,380
here is actually a a set of characters

00:24:48,309 --> 00:24:55,210
and color codes in hex alright so let's

00:24:53,380 --> 00:24:58,090
take a look at what this looks like so I

00:24:55,210 --> 00:25:00,970
can just run make run right here I'm

00:24:58,090 --> 00:25:03,429
going to pop this up and here is the

00:25:00,970 --> 00:25:07,120
amazing operating system saying hi to

00:25:03,429 --> 00:25:07,870
rust belt rust this is the Doge offered

00:25:07,120 --> 00:25:13,900
you

00:25:07,870 --> 00:25:15,730
I spent so long manipulating those

00:25:13,900 --> 00:25:19,630
little numbers to try and get get it

00:25:15,730 --> 00:25:22,840
it's ridiculous um so but fundamentally

00:25:19,630 --> 00:25:26,770
like if we take a look at this that code

00:25:22,840 --> 00:25:29,350
again this code is not great and so if

00:25:26,770 --> 00:25:31,930
you wanted you know I mean this is

00:25:29,350 --> 00:25:36,100
basically just like the most technically

00:25:31,930 --> 00:25:37,660
complex mspaint ever um like extremely

00:25:36,100 --> 00:25:39,160
complicated all I want to do is like put

00:25:37,660 --> 00:25:42,610
colors and words on the screen and I'm

00:25:39,160 --> 00:25:46,890
doing this instead and so oh there we go

00:25:42,610 --> 00:25:48,880
it's all right I know how to fix it I

00:25:46,890 --> 00:25:50,710
don't know what's going on if I have

00:25:48,880 --> 00:25:56,350
like an electromagnetic field around me

00:25:50,710 --> 00:25:58,990
oh I was I was not hating on ms paint at

00:25:56,350 --> 00:26:02,410
all that was that was all love trust me

00:25:58,990 --> 00:26:05,470
on that love ms paint all right and

00:26:02,410 --> 00:26:07,540
we're back cool um yes so again I'm

00:26:05,470 --> 00:26:10,510
doing that is there are definitely ways

00:26:07,540 --> 00:26:14,710
that we can use rust to make this

00:26:10,510 --> 00:26:17,500
abstraction a lot nicer so let's take a

00:26:14,710 --> 00:26:19,990
look at that so one of the last uh I

00:26:17,500 --> 00:26:23,530
guess systems programming rust dates

00:26:19,990 --> 00:26:26,230
that I was on uh-huh we decided that we

00:26:23,530 --> 00:26:28,870
were like let's let's write this vga

00:26:26,230 --> 00:26:32,080
driver and let's write it in rust and

00:26:28,870 --> 00:26:34,150
let's test drive it and the reason that

00:26:32,080 --> 00:26:35,620
we're able to do this is because the way

00:26:34,150 --> 00:26:38,170
things are printed to the screen is just

00:26:35,620 --> 00:26:40,120
memory mapped so we can kind of abstract

00:26:38,170 --> 00:26:43,240
this idea of what we're printing onto

00:26:40,120 --> 00:26:45,100
the screen as a slice and then we can

00:26:43,240 --> 00:26:46,660
all we need to do is take that slice and

00:26:45,100 --> 00:26:48,220
then just stick it onto the screen and

00:26:46,660 --> 00:26:50,530
it will pray write out all those

00:26:48,220 --> 00:26:53,800
characters and so what we did is we

00:26:50,530 --> 00:26:56,559
abstracted out the vga driver which is

00:26:53,800 --> 00:26:58,300
here and i'll pull this up here so again

00:26:56,559 --> 00:27:01,150
this is another rust project and we have

00:26:58,300 --> 00:27:04,809
some tests and so like any good show a

00:27:01,150 --> 00:27:07,390
little bit of this is pre-baked but if i

00:27:04,809 --> 00:27:09,910
run cargo test alright we can see a one

00:27:07,390 --> 00:27:12,160
failure and this is this flush method

00:27:09,910 --> 00:27:15,280
and what the flush method is going to do

00:27:12,160 --> 00:27:18,340
is it's going to take a slice that we

00:27:15,280 --> 00:27:21,360
have inside of a struct called vga I'll

00:27:18,340 --> 00:27:21,360
but to pop that up here

00:27:21,769 --> 00:27:27,840
right so we're in here and we just have

00:27:24,240 --> 00:27:30,360
this simple struct we're kind of doing a

00:27:27,840 --> 00:27:32,940
fun thing with a generics up there which

00:27:30,360 --> 00:27:34,679
I'm not going to explain right now but

00:27:32,940 --> 00:27:38,159
we have this struct where we have this

00:27:34,679 --> 00:27:39,809
slice that is that fun generic then we

00:27:38,159 --> 00:27:41,970
have a buffer which is just this array

00:27:39,809 --> 00:27:43,649
of you eights and then we have a

00:27:41,970 --> 00:27:45,059
position so again we can kind of see

00:27:43,649 --> 00:27:46,950
what we saw on that previous screen

00:27:45,059 --> 00:27:48,419
where the position is really just where

00:27:46,950 --> 00:27:51,330
on the screen do we want to start

00:27:48,419 --> 00:27:53,039
placing something and then the buffer is

00:27:51,330 --> 00:27:56,639
going to be that data that we want to

00:27:53,039 --> 00:27:58,049
write to it and then the slice is going

00:27:56,639 --> 00:28:00,450
to be we're going to take that data in

00:27:58,049 --> 00:28:02,249
the buffer and we're going to put it

00:28:00,450 --> 00:28:03,869
onto the slice and the slice is going to

00:28:02,249 --> 00:28:05,970
be how it ends up getting written to the

00:28:03,869 --> 00:28:08,059
screen and so the one method that we

00:28:05,970 --> 00:28:10,619
need to right now is that flush method

00:28:08,059 --> 00:28:13,309
so based on what I just told you right

00:28:10,619 --> 00:28:15,659
now we're just panicking as one should

00:28:13,309 --> 00:28:18,749
we're writing systems code it's scary

00:28:15,659 --> 00:28:20,249
it's not really all that scary and so

00:28:18,749 --> 00:28:21,659
with this flush method based on the

00:28:20,249 --> 00:28:24,799
structures that we've already built all

00:28:21,659 --> 00:28:30,149
we need to do is say self dot slice as

00:28:24,799 --> 00:28:34,970
mute and then we're going to clone from

00:28:30,149 --> 00:28:39,360
slice and we're just going to grab that

00:28:34,970 --> 00:28:41,580
buffer data here and so writing this we

00:28:39,360 --> 00:28:46,350
can just save it and then I run cargo

00:28:41,580 --> 00:28:48,059
test and we're passing gay I have to say

00:28:46,350 --> 00:28:49,710
being able to do systems programming in

00:28:48,059 --> 00:28:51,480
a test driven way it was like kind of

00:28:49,710 --> 00:28:53,909
awesome it gives you a lot more security

00:28:51,480 --> 00:28:55,019
than like when we were originally doing

00:28:53,909 --> 00:28:56,340
it and I'll show you some screenshots

00:28:55,019 --> 00:28:58,169
from that where we're just throwing

00:28:56,340 --> 00:29:00,740
stuff out there and saying like will the

00:28:58,169 --> 00:29:03,499
computer light on fire I have no idea

00:29:00,740 --> 00:29:06,570
all right so now that we have our vga

00:29:03,499 --> 00:29:08,279
driver working we can now take this ross

00:29:06,570 --> 00:29:11,309
that we've written right here and we can

00:29:08,279 --> 00:29:13,399
drop it into that bare bones colonel so

00:29:11,309 --> 00:29:15,670
let's go back to our bare bones colonel

00:29:13,399 --> 00:29:18,790
here we are

00:29:15,670 --> 00:29:20,350
all right clear this um this is big

00:29:18,790 --> 00:29:22,570
enough for everyone to see I tried to

00:29:20,350 --> 00:29:26,020
guess alright cool just shout at me if

00:29:22,570 --> 00:29:31,270
it's not alright so in here we're going

00:29:26,020 --> 00:29:34,060
to go into our main up CD into yeah I

00:29:31,270 --> 00:29:36,960
could job Ashley live coding is scary

00:29:34,060 --> 00:29:39,100
alright so we have all of this

00:29:36,960 --> 00:29:43,650
fascinating code inside this unsafe

00:29:39,100 --> 00:29:43,650
block we're going to get rid of all that

00:29:43,770 --> 00:29:53,020
yeah yeah deleting code is fun um yay

00:29:48,850 --> 00:29:55,300
love to the encode ok so now inside the

00:29:53,020 --> 00:29:58,600
safe block what we're going to do is

00:29:55,300 --> 00:30:00,400
we're going to use our vga crate so to

00:29:58,600 --> 00:30:03,400
use that we're going to go into our

00:30:00,400 --> 00:30:05,260
cargo tamil and we're going to add it as

00:30:03,400 --> 00:30:09,670
a dependency just get rid of that

00:30:05,260 --> 00:30:10,930
quickly alright if you are new to us and

00:30:09,670 --> 00:30:14,410
didn't know that you can just kind of

00:30:10,930 --> 00:30:16,960
pass something to a path you can it's

00:30:14,410 --> 00:30:18,880
pretty neat so we can just point that to

00:30:16,960 --> 00:30:21,280
our vga right there and then we're also

00:30:18,880 --> 00:30:22,600
going to need our Lib C because

00:30:21,280 --> 00:30:24,250
basically what we're doing with that

00:30:22,600 --> 00:30:25,660
relationship between the slice and the

00:30:24,250 --> 00:30:27,970
buffer is just so they could basically

00:30:25,660 --> 00:30:30,990
I'm Emma coffee and so that's what we're

00:30:27,970 --> 00:30:34,390
going to be using here so we'll add that

00:30:30,990 --> 00:30:44,290
and then we'll go back into our main

00:30:34,390 --> 00:30:47,070
pull them in extern create VG alright

00:30:44,290 --> 00:30:49,450
and then i'm also going to need to use

00:30:47,070 --> 00:30:51,610
when we are doing this we are also

00:30:49,450 --> 00:30:57,460
implementing the right trait so i need

00:30:51,610 --> 00:31:00,460
to make sure that that is in scope cool

00:30:57,460 --> 00:31:02,770
so we should be ready now to use our vga

00:31:00,460 --> 00:31:04,810
crate of course someone out there is

00:31:02,770 --> 00:31:07,240
being like I'll see a typo it's gonna

00:31:04,810 --> 00:31:09,880
break well we'll find out that's what

00:31:07,240 --> 00:31:11,260
the compilers for all right so in here

00:31:09,880 --> 00:31:13,180
now instead of just writing out all

00:31:11,260 --> 00:31:16,060
those variables with like the totally

00:31:13,180 --> 00:31:18,310
indecipherable numbers now we can say

00:31:16,060 --> 00:31:25,270
something like led

00:31:18,310 --> 00:31:26,590
GA equal vga vga new all right and then

00:31:25,270 --> 00:31:30,580
what is this going to take this is going

00:31:26,590 --> 00:31:35,290
to have to take some sort of slice so we

00:31:30,580 --> 00:31:37,450
can make our slice here and that slice

00:31:35,290 --> 00:31:43,060
is going to be kind of just like kind of

00:31:37,450 --> 00:31:44,710
funky method from raw parts mute and

00:31:43,060 --> 00:31:46,930
that's because we really don't have like

00:31:44,710 --> 00:31:49,570
a lot of stuff when we're writing a

00:31:46,930 --> 00:31:51,400
operating system so we have to kind of

00:31:49,570 --> 00:31:54,550
do it from nothing and so this is going

00:31:51,400 --> 00:31:58,060
to take two things it takes a location

00:31:54,550 --> 00:32:00,880
and a length ah yes thank you that would

00:31:58,060 --> 00:32:02,860
be brutal I'd be so sad mess it up

00:32:00,880 --> 00:32:04,390
alright so we're going to give it the

00:32:02,860 --> 00:32:07,260
location of just the top part of the

00:32:04,390 --> 00:32:10,390
screen there I always forget how many

00:32:07,260 --> 00:32:11,650
zeros I need it's very complicated but

00:32:10,390 --> 00:32:13,060
luckily we're not doing as many

00:32:11,650 --> 00:32:16,240
complicated numbers as we were doing

00:32:13,060 --> 00:32:21,490
before I'm going to take this as a mute

00:32:16,240 --> 00:32:22,480
you ate no no all right i'm making a

00:32:21,490 --> 00:32:24,580
little smaller just so we can actually

00:32:22,480 --> 00:32:25,840
read it across the screen and then we're

00:32:24,580 --> 00:32:29,500
going to give it that length of four

00:32:25,840 --> 00:32:32,880
thousand all right and so this slice we

00:32:29,500 --> 00:32:36,690
should be able to pass to our vga and

00:32:32,880 --> 00:32:40,030
this is being mute pretty sure yes

00:32:36,690 --> 00:32:41,980
alright so with just this setup now

00:32:40,030 --> 00:32:43,960
instead of having to write all of that

00:32:41,980 --> 00:32:47,500
stuff that i wrote before now i could

00:32:43,960 --> 00:32:53,760
just tell my vga to write a stir and so

00:32:47,500 --> 00:32:53,760
what should I have it say hello world

00:32:56,720 --> 00:33:03,590
poof that escalated quickly all right

00:33:01,520 --> 00:33:05,870
all right and so I shouldn't be able to

00:33:03,590 --> 00:33:11,059
write this and then i can say vga dot

00:33:05,870 --> 00:33:12,530
flush all right the reason we do it in

00:33:11,059 --> 00:33:14,150
these two steps is because we wanted to

00:33:12,530 --> 00:33:16,280
write to the screen all at once and not

00:33:14,150 --> 00:33:18,289
in some weird incremental way all right

00:33:16,280 --> 00:33:20,090
so assuming that I haven't completely

00:33:18,289 --> 00:33:23,059
messed up all of this typing we should

00:33:20,090 --> 00:33:29,350
be able to now come in here say make run

00:33:23,059 --> 00:33:32,809
up all right what did I do wrong hmm I

00:33:29,350 --> 00:33:37,820
think I did a javascript thing probably

00:33:32,809 --> 00:33:46,510
that's usually what happens yes this is

00:33:37,820 --> 00:33:49,720
not JSON this V equals all right ooh and

00:33:46,510 --> 00:33:49,720
witness me

00:33:54,419 --> 00:33:58,269
alright so that was a lot of typing we

00:33:56,950 --> 00:34:00,639
did it really fast but the whole point

00:33:58,269 --> 00:34:02,080
was to say that when we use rust in

00:34:00,639 --> 00:34:03,549
assistant development we can take

00:34:02,080 --> 00:34:06,339
something that is like kind of really

00:34:03,549 --> 00:34:07,869
difficult and like fiddly and give

00:34:06,339 --> 00:34:10,000
ourselves some dice abstractions to work

00:34:07,869 --> 00:34:12,099
with so that can be fun so now it's much

00:34:10,000 --> 00:34:14,710
easier to take this amazing operating

00:34:12,099 --> 00:34:16,450
system / fancy ms paint and like write

00:34:14,710 --> 00:34:20,020
all sorts of colors and words to the

00:34:16,450 --> 00:34:22,899
screen it's very fun yeah all right so

00:34:20,020 --> 00:34:24,819
this is actually at the point like we

00:34:22,899 --> 00:34:26,349
are doing workshops with intermezzo slow

00:34:24,819 --> 00:34:27,819
down this is the place that we get to

00:34:26,349 --> 00:34:30,639
but the colonel is actually

00:34:27,819 --> 00:34:34,359
significantly further along and so just

00:34:30,639 --> 00:34:35,919
quickly i want to show you i'm gonna

00:34:34,359 --> 00:34:39,069
yell that but i want to show you where

00:34:35,919 --> 00:34:42,099
it's at right now and so what you can do

00:34:39,069 --> 00:34:45,760
in the kernel now is you can say hey

00:34:42,099 --> 00:34:49,029
Russ bow rust so you can actually type

00:34:45,760 --> 00:34:51,490
in shift doesn't work so the only thing

00:34:49,029 --> 00:34:54,309
I can do is this weird like shouty winky

00:34:51,490 --> 00:34:55,419
face but yeah a shoddy winky face from

00:34:54,309 --> 00:34:57,039
the colonel and so this is where the

00:34:55,419 --> 00:34:58,150
colonel is right now and if you're

00:34:57,039 --> 00:35:00,700
interested in playing around with this

00:34:58,150 --> 00:35:03,039
we have like quite a few things that you

00:35:00,700 --> 00:35:05,410
can go for go to from here if you want

00:35:03,039 --> 00:35:06,849
to start playing with that alright so

00:35:05,410 --> 00:35:09,309
that's the end of the demos and let me

00:35:06,849 --> 00:35:12,279
wrap it up with some some quick final

00:35:09,309 --> 00:35:14,140
thoughts so one of the key things about

00:35:12,279 --> 00:35:15,640
intermezzo siz that it's not just oh

00:35:14,140 --> 00:35:18,430
let's write an operating system it's

00:35:15,640 --> 00:35:19,660
let's write a book alongside the

00:35:18,430 --> 00:35:21,849
operating system and that's pretty

00:35:19,660 --> 00:35:24,970
intense so why would you do that and

00:35:21,849 --> 00:35:26,950
this is a really cool cartoon that

00:35:24,970 --> 00:35:28,270
Leslie the import talks about in a talk

00:35:26,950 --> 00:35:32,740
called writing for developers and he

00:35:28,270 --> 00:35:34,390
says oh I'm about to read it so we'll

00:35:32,740 --> 00:35:36,700
just do that because I don't have any

00:35:34,390 --> 00:35:38,650
time anymore but he says writing is

00:35:36,700 --> 00:35:41,559
nature's way of letting you know how

00:35:38,650 --> 00:35:44,859
sloppy your thinking is and for a very

00:35:41,559 --> 00:35:46,990
long time I've kind of reappropriation I

00:35:44,859 --> 00:35:49,420
also like to say that teaching is

00:35:46,990 --> 00:35:53,140
nature's way of letting you know how

00:35:49,420 --> 00:35:55,599
sloppy your understanding is and so the

00:35:53,140 --> 00:35:56,799
key point here is that when you're

00:35:55,599 --> 00:35:58,450
teaching yourself something new one of

00:35:56,799 --> 00:36:00,640
the best ways to really understand it is

00:35:58,450 --> 00:36:03,279
to write it down and then also try and

00:36:00,640 --> 00:36:04,420
teach it to other people so I want to

00:36:03,279 --> 00:36:05,900
encourage you to go ride some

00:36:04,420 --> 00:36:08,240
irresponsible code

00:36:05,900 --> 00:36:11,870
and then go teach somebody else to do

00:36:08,240 --> 00:36:13,640
the same here is what this looked like

00:36:11,870 --> 00:36:15,800
what I was trying to work on scroll and

00:36:13,640 --> 00:36:18,200
i forgot to multiply how many columns i

00:36:15,800 --> 00:36:21,050
had by 2 as it scrolled down a big green

00:36:18,200 --> 00:36:22,550
thing started happening is really really

00:36:21,050 --> 00:36:26,150
funny and just kind of made all this

00:36:22,550 --> 00:36:27,590
weird glitch art and so just a lot of

00:36:26,150 --> 00:36:30,410
people have been really motivated by

00:36:27,590 --> 00:36:31,610
this intermezzo project and so when

00:36:30,410 --> 00:36:33,950
you're also doing these types of things

00:36:31,610 --> 00:36:35,690
you can also be motivating these people

00:36:33,950 --> 00:36:37,250
there is an audience out there even if

00:36:35,690 --> 00:36:39,080
you don't believe you are an expert in

00:36:37,250 --> 00:36:41,390
something there's an audience for the

00:36:39,080 --> 00:36:44,810
way you explained it and so we had our

00:36:41,390 --> 00:36:47,300
very first intermezzo workshop yesterday

00:36:44,810 --> 00:36:48,590
which was super awesome and a lot of

00:36:47,300 --> 00:36:51,230
people participated and that was

00:36:48,590 --> 00:36:52,730
fantastic one of the fun things that I

00:36:51,230 --> 00:36:56,750
wasn't able to show you in your demo is

00:36:52,730 --> 00:36:58,730
that if you shift the position by one it

00:36:56,750 --> 00:37:00,500
inverts the color codes and the

00:36:58,730 --> 00:37:03,490
characters and the color that we use for

00:37:00,500 --> 00:37:06,260
default is actually the smiley face

00:37:03,490 --> 00:37:07,760
character so if you messed it up you

00:37:06,260 --> 00:37:09,140
just got a bunch of smiley faces which

00:37:07,760 --> 00:37:10,550
is honestly what I think is the best

00:37:09,140 --> 00:37:13,670
it's like let's write some terrible code

00:37:10,550 --> 00:37:15,500
and have it smile at us it's awesome so

00:37:13,670 --> 00:37:18,350
I want to encourage you contribute to

00:37:15,500 --> 00:37:19,850
intermezzo so we're only okay so the

00:37:18,350 --> 00:37:21,290
last time when i did my first talking to

00:37:19,850 --> 00:37:22,520
normes as it was nine months old and i

00:37:21,290 --> 00:37:24,140
thought that was kind of like a strange

00:37:22,520 --> 00:37:28,430
incubation period so i just said it

00:37:24,140 --> 00:37:30,350
again but seven souls now we've got lots

00:37:28,430 --> 00:37:32,630
of contributors and you don't have to

00:37:30,350 --> 00:37:34,670
just contribute code to contribute

00:37:32,630 --> 00:37:37,730
there's also the book which also accepts

00:37:34,670 --> 00:37:39,500
tons of contributors so we wanted we

00:37:37,730 --> 00:37:41,270
want you to contribute to intermezzo we

00:37:39,500 --> 00:37:43,250
think you're great whoever you are if

00:37:41,270 --> 00:37:44,900
you have that nagging feeling in the

00:37:43,250 --> 00:37:46,790
back of your head saying oh I can't

00:37:44,900 --> 00:37:49,190
write an operating system tell it that

00:37:46,790 --> 00:37:51,200
you don't think so all right if someone

00:37:49,190 --> 00:37:54,800
says failure to comply will make you

00:37:51,200 --> 00:37:57,560
look silly all right that's awesome cool

00:37:54,800 --> 00:38:00,520
let's all look silly so yes I can

00:37:57,560 --> 00:38:04,289
operating system and so can do thanks

00:38:00,520 --> 00:38:04,289

YouTube URL: https://www.youtube.com/watch?v=s3B-0ndna5c


