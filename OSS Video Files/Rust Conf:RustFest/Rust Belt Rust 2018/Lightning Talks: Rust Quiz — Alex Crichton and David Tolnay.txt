Title: Lightning Talks: Rust Quiz — Alex Crichton and David Tolnay
Publication date: 2018-11-28
Playlist: Rust Belt Rust 2018
Description: 
	See more at https://dtolnay.github.io/rust-quiz/
Captions: 
	00:00:08,970 --> 00:00:13,840
[Applause]

00:00:11,320 --> 00:00:14,990
I'm David and this is Alex and we put

00:00:13,840 --> 00:00:16,520
together

00:00:14,990 --> 00:00:18,200
so it turns your neighbor to the left to

00:00:16,520 --> 00:00:20,270
the right and whoever you know less well

00:00:18,200 --> 00:00:21,980
work with them and answering these four

00:00:20,270 --> 00:00:24,020
questions these are going to be in the

00:00:21,980 --> 00:00:26,510
form of a short Russ program that

00:00:24,020 --> 00:00:28,160
compiles and prints some number and we

00:00:26,510 --> 00:00:31,550
need you to tell us what number it

00:00:28,160 --> 00:00:33,260
prints work with your neighbor and after

00:00:31,550 --> 00:00:35,829
50 seconds Alex or I will give the

00:00:33,260 --> 00:00:35,829
explanation

00:00:40,899 --> 00:00:44,109
don't stop

00:00:50,280 --> 00:00:56,399
work with your neighbors let me talk

00:00:53,399 --> 00:00:56,399
socialize

00:01:19,140 --> 00:01:22,590
I'm about to show the answer and I'd

00:01:20,850 --> 00:01:24,570
like to hear happy noises if your team

00:01:22,590 --> 00:01:26,850
got it right and learning noises if you

00:01:24,570 --> 00:01:28,560
guessed wrong this program prints one

00:01:26,850 --> 00:01:31,080
because we disambiguate method ball

00:01:28,560 --> 00:01:32,940
syntax like this we just ambigú eight

00:01:31,080 --> 00:01:34,770
method call syntax as a referring to the

00:01:32,940 --> 00:01:36,600
method F and not the field F if you

00:01:34,770 --> 00:01:37,650
wanted to call the function pointer F

00:01:36,600 --> 00:01:42,290
you would have to write parentheses

00:01:37,650 --> 00:01:42,290
around the field access question to

00:01:44,420 --> 00:02:14,120
discuss discuss this is a team sport you

00:02:11,160 --> 00:02:14,120
have about ten seconds

00:02:21,800 --> 00:02:26,310
all right the answer here is one two

00:02:24,480 --> 00:02:26,700
four three this high question has to

00:02:26,310 --> 00:02:27,690
wait

00:02:26,700 --> 00:02:30,959
happy noises you've got to write

00:02:27,690 --> 00:02:32,910
learning noises if you got it wrong the

00:02:30,959 --> 00:02:35,340
question here has to do with drop if you

00:02:32,910 --> 00:02:36,690
the first value we were binding X by the

00:02:35,340 --> 00:02:38,220
value in this let binding which means we

00:02:36,690 --> 00:02:39,420
have to drop the field D immediately

00:02:38,220 --> 00:02:40,860
whereas on the second let binding here

00:02:39,420 --> 00:02:42,360
abiding it by reference which means we

00:02:40,860 --> 00:02:44,250
have to keep the entire struct around

00:02:42,360 --> 00:02:45,540
which means that three goes out of scope

00:02:44,250 --> 00:02:49,400
at the very end printing three at the

00:02:45,540 --> 00:02:49,400
very end question three

00:03:13,280 --> 00:03:36,480
as a hint one of these foreclosures is

00:03:17,370 --> 00:03:39,090
not like the other three closures this

00:03:36,480 --> 00:03:40,650
program prints one two three and if we

00:03:39,090 --> 00:03:42,330
run this through rust format we can see

00:03:40,650 --> 00:03:44,940
why because the fourth closure is being

00:03:42,330 --> 00:03:47,190
interpreted as two statements an empty a

00:03:44,940 --> 00:03:51,480
curly blaze braced block and a reference

00:03:47,190 --> 00:04:18,390
to s for not a bitwise the end question

00:03:51,480 --> 00:04:21,030
for final question discuss discuss as a

00:04:18,390 --> 00:04:23,760
hint the argument to the function P is

00:04:21,030 --> 00:04:26,120
guaranteed to be e enum colon colon

00:04:23,760 --> 00:04:26,120
second

00:04:41,229 --> 00:04:51,650
five seconds the answer here is one so

00:04:49,940 --> 00:04:53,060
this high comes out as a result of a

00:04:51,650 --> 00:04:55,009
compiler warning which will helpfully

00:04:53,060 --> 00:04:57,050
tell us that the first arm here matches

00:04:55,009 --> 00:05:00,110
any value and the second arm is actually

00:04:57,050 --> 00:05:02,389
dead code we didn't match enum : : first

00:05:00,110 --> 00:05:09,860
we only matched the variable first so

00:05:02,389 --> 00:05:11,389
happy noises if you enjoyed this we have

00:05:09,860 --> 00:05:13,039
some other examples and we're thinking

00:05:11,389 --> 00:05:14,750
about posting them online later so stay

00:05:13,039 --> 00:05:17,410
tuned we might have a lot more fun

00:05:14,750 --> 00:05:17,410

YouTube URL: https://www.youtube.com/watch?v=QtDj9R6vtA8


