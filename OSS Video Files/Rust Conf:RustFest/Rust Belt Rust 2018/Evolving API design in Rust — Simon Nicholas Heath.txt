Title: Evolving API design in Rust â€” Simon Nicholas Heath
Publication date: 2018-11-28
Playlist: Rust Belt Rust 2018
Description: 
	As Rust is a young language containing many innovative features, questions about how to structure Rust libraries and API's are common. Heavy use of metaprogramming and trait constraints can make libraries hard to understand and use, but also bring great power to reason about programs at compile-time. How do you design a library that exploits the power of Rust without making new users say 'This is way too complicated to bother with'? We will discuss these issues using an existing Rust crate as a case study in both designing an API and how it is influenced by the API decisions of the crates it uses as dependencies.

---

Simon is a recovering geologist who has always been interested in programming and a general language nerd, and now works as a software engineering consultant. He started using Rust seriously shortly after the 1.0 release and is interested in using it in video games, operating systems and distributed network infrastructure.
YouTube URL: https://www.youtube.com/watch?v=Xt1JOVeQ5hw


