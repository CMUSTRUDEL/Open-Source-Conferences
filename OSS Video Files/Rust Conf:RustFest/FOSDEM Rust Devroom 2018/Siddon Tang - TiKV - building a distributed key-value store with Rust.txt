Title: Siddon Tang - TiKV - building a distributed key-value store with Rust
Publication date: 2018-02-06
Playlist: FOSDEM Rust Devroom 2018
Description: 
	A transactional key-value store powered by Raft

Itâ€™s not an easy thing to build a modern Key-Value database which supports the distributed transaction, horizontal scalability, etc. But this is exactly what we are doing and we have built such a database from scratch using Rust. The database is named TiKV. In this talk, I will share how we use Rust to build the storage, to support replication across geographically distributed data networks, to implement an RPC framework, to inject failure for tests, and to monitor the key metrics of the whole cluster.

To build a distributed Key-Value store from scratch, we need to consider many things. In this talk, I will share with you the following experiences when we build TiKV.

Siddon Tang is the Chief Engineer of PingCAP. He has been working on TiDB, the next generation HTAP database, and TiKV, a distributed key-value store. He is an open source lover and has developed quite a few Rust libraries like rust-prometheus, rust-grpc, rust-rocksdb, etc.

Rust devroom @ FOSDEM 2018
https://fosdem.org/2018/schedule/event/rust_distributed_kv_store/

These talks have been recorded at FOSDEM (https://fosdem.org/)
This work is licensed under the Creative Commons Attribution 2.0 Belgium Licence.
To view a copy of this licence, visit http://creativecommons.org/licenses/by/2.0/be/deed.en
Captions: 
	00:00:04,610 --> 00:00:11,180
hey mask you me sis to see your hair

00:00:07,759 --> 00:00:14,599
today I will talk about how we use rah

00:00:11,180 --> 00:00:17,420
to build a distributed transaction a key

00:00:14,599 --> 00:00:20,000
value database before we start let me

00:00:17,420 --> 00:00:21,580
introduce myself my name is Tong nil a

00:00:20,000 --> 00:00:24,470
Chinese guy as you can see an

00:00:21,580 --> 00:00:27,740
underachiever I had a pink hair and I

00:00:24,470 --> 00:00:30,740
have been dirty by the distributed

00:00:27,740 --> 00:00:32,449
database pidb and the Tai Chi V and we

00:00:30,740 --> 00:00:34,760
also open source an hour and have

00:00:32,449 --> 00:00:37,760
developed some open source a black write

00:00:34,760 --> 00:00:39,290
with TB Comalcalco master codex arch and

00:00:37,760 --> 00:00:42,460
reform issues et cetera

00:00:39,290 --> 00:00:46,309
/ that's all this is

00:00:42,460 --> 00:00:51,979
agenda at first I will give you a brief

00:00:46,309 --> 00:00:54,199
introduction about why would you use

00:00:51,979 --> 00:00:56,930
tubular transactional criminal database

00:00:54,199 --> 00:01:00,470
the problem for us yeah I will show you

00:00:56,930 --> 00:01:03,080
the hierarchy we sought for the database

00:01:00,470 --> 00:01:04,699
and alas I will show you how we combine

00:01:03,080 --> 00:01:11,030
them war into our database

00:01:04,699 --> 00:01:13,220
ok that's so when we want to build a

00:01:11,030 --> 00:01:16,610
distributed transactional key value

00:01:13,220 --> 00:01:19,670
database we found that we need a tool

00:01:16,610 --> 00:01:21,380
will meet many many problem and we

00:01:19,670 --> 00:01:25,130
needed to conquer many many challenges

00:01:21,380 --> 00:01:29,180
that face oh why is that

00:01:25,130 --> 00:01:31,970
like when we must guarantee our database

00:01:29,180 --> 00:01:35,659
is a data consistency and our database

00:01:31,970 --> 00:01:37,610
is scalable under stable and has a high

00:01:35,659 --> 00:01:40,940
performance and has a higher order

00:01:37,610 --> 00:01:43,540
ability of course we must read our

00:01:40,940 --> 00:01:45,800
database follow the acid compliance and

00:01:43,540 --> 00:01:50,240
many other a prominent we needed to

00:01:45,800 --> 00:01:54,909
conquer so that night they this award

00:01:50,240 --> 00:01:58,190
and I may have for us so what can we do

00:01:54,909 --> 00:02:02,060
in a traditional Chinese saying a high

00:01:58,190 --> 00:02:03,860
building or low foundation so there are

00:02:02,060 --> 00:02:07,220
many medicines we needed to conquer and

00:02:03,860 --> 00:02:12,290
but we camp you need from bottom to the

00:02:07,220 --> 00:02:13,800
top with different hierarchies so let's

00:02:12,290 --> 00:02:18,660
begin

00:02:13,800 --> 00:02:20,990
but at the first but at first we needed

00:02:18,660 --> 00:02:28,110
to choose a language to be late

00:02:20,990 --> 00:02:30,000
it's a rust here okay okay you guys are

00:02:28,110 --> 00:02:31,680
familiar with this so I won't talk about

00:02:30,000 --> 00:02:34,860
these animal enough forgive me

00:02:31,680 --> 00:02:39,320
so let you slack you build our database

00:02:34,860 --> 00:02:42,090
from scratch the first thing is that

00:02:39,320 --> 00:02:43,560
because we are database the for the

00:02:42,090 --> 00:02:46,230
first problem is how we can save our

00:02:43,560 --> 00:02:47,940
data in the local machine and recall

00:02:46,230 --> 00:02:50,370
there can be no database so we are

00:02:47,940 --> 00:02:52,530
choose available story engine there are

00:02:50,370 --> 00:02:55,050
many squeal engines in a war neck Rock

00:02:52,530 --> 00:02:56,640
to me like a lever de Guerre tiger and

00:02:55,050 --> 00:02:59,130
the eternal row under you can use even

00:02:56,640 --> 00:03:03,870
beauty is by yourself but here which

00:02:59,130 --> 00:03:07,080
shows the rock to be why rock to me use

00:03:03,870 --> 00:03:09,210
a sm-3 as you can see Alison tree had a

00:03:07,080 --> 00:03:11,130
high performance for the ride is

00:03:09,210 --> 00:03:13,260
traumatic for the random ride and had a

00:03:11,130 --> 00:03:15,410
good performance for the read and the

00:03:13,260 --> 00:03:18,300
rock 3 medium itself that loss of

00:03:15,410 --> 00:03:21,510
optimization to speed up the rocks DB

00:03:18,300 --> 00:03:24,300
and the provided a lot of features about

00:03:21,510 --> 00:03:26,580
knack in jet ski the fire team is branch

00:03:24,300 --> 00:03:31,260
cue later the user build their service

00:03:26,580 --> 00:03:33,300
on top easily on top of a rock to DB and

00:03:31,260 --> 00:03:35,340
a lot of reason is that ought to be is

00:03:33,300 --> 00:03:37,320
very stable and I you to get user in the

00:03:35,340 --> 00:03:40,130
my rocks and rock rock

00:03:37,320 --> 00:03:43,470
TV so we departed to the rock to be

00:03:40,130 --> 00:03:45,720
headed up is a project where we call the

00:03:43,470 --> 00:03:48,720
rock TV is a stapler a library and we

00:03:45,720 --> 00:03:50,880
work our own rust wiper here you can

00:03:48,720 --> 00:03:54,570
have a try if you want to use a rock to

00:03:50,880 --> 00:03:57,270
be in your router project rocks me is

00:03:54,570 --> 00:04:00,360
cool but you can only stay with your

00:03:57,270 --> 00:04:01,140
data in loco one machine if the one more

00:04:00,360 --> 00:04:04,500
train crashed

00:04:01,140 --> 00:04:06,150
oak your data is lost so here we need

00:04:04,500 --> 00:04:09,780
that you find a way to replicate our

00:04:06,150 --> 00:04:11,430
data into Marty machine to guarantee our

00:04:09,780 --> 00:04:14,070
data safety of course we must guarantee

00:04:11,430 --> 00:04:15,000
our data consistency how we can you pair

00:04:14,070 --> 00:04:18,359
with you the raft

00:04:15,000 --> 00:04:22,970
anybody here know rock yeah oh yes that

00:04:18,359 --> 00:04:25,440
cool ruff ruff is a common-sense

00:04:22,970 --> 00:04:27,220
distributing the constants of altruism

00:04:25,440 --> 00:04:29,560
either use if

00:04:27,220 --> 00:04:30,970
on the replica Lord when the client

00:04:29,560 --> 00:04:33,400
won't even write something to the

00:04:30,970 --> 00:04:36,310
service and we were you first we were

00:04:33,400 --> 00:04:38,320
use a raft to append the comment to the

00:04:36,310 --> 00:04:41,230
rough log and the angular radical

00:04:38,320 --> 00:04:43,030
algorithm to replicated a raft command

00:04:41,230 --> 00:04:45,490
into the mounting machines after

00:04:43,030 --> 00:04:47,800
majority of the load except a rough log

00:04:45,490 --> 00:04:49,870
we can sing the rough log is committed

00:04:47,800 --> 00:04:52,500
and can apply the rock to the same

00:04:49,870 --> 00:04:54,790
machine then return the read our client

00:04:52,500 --> 00:04:57,280
using rather can't help us to keep the

00:04:54,790 --> 00:05:01,750
data consistency and doodle replication

00:04:57,280 --> 00:05:03,790
automatically roughly is good but it

00:05:01,750 --> 00:05:05,200
can't fade up in the constable or your

00:05:03,790 --> 00:05:09,190
data in one motion

00:05:05,200 --> 00:05:14,320
we run your data grows huge and huge so

00:05:09,190 --> 00:05:16,390
how how we can do here we can when you

00:05:14,320 --> 00:05:19,690
take root large and a large we can

00:05:16,390 --> 00:05:22,480
submit our data into market graphic

00:05:19,690 --> 00:05:25,450
group here you can see that we we so

00:05:22,480 --> 00:05:29,710
treat our water in her as a invading he

00:05:25,450 --> 00:05:31,450
ordered hash map sorry map industry and

00:05:29,710 --> 00:05:33,610
it's a bit our water data include

00:05:31,450 --> 00:05:35,830
different experience and the each clear

00:05:33,610 --> 00:05:38,640
and crisp on get to a rough group here

00:05:35,830 --> 00:05:41,140
we use again we use a market rock q

00:05:38,640 --> 00:05:44,470
suppose that data horizontal scalability

00:05:41,140 --> 00:05:48,240
so how can I do this example

00:05:44,470 --> 00:05:51,520
if we'll all we have three load ABC and

00:05:48,240 --> 00:05:54,310
we add a new load T and we want to

00:05:51,520 --> 00:05:57,280
transfer more our data reading to the

00:05:54,310 --> 00:06:00,040
data from C to the team how we can do

00:05:57,280 --> 00:06:03,240
luckily we can use a raft interlock

00:06:00,040 --> 00:06:06,730
every algorithm membership change

00:06:03,240 --> 00:06:08,560
necklace we can use a raft of membership

00:06:06,730 --> 00:06:10,780
change completely change a load directly

00:06:08,560 --> 00:06:14,800
to add a new replica of reading to

00:06:10,780 --> 00:06:16,960
unload of T yeah we can use a raft

00:06:14,800 --> 00:06:19,540
how many shiny ribbon load to remove the

00:06:16,960 --> 00:06:22,000
replica from C as you can see using

00:06:19,540 --> 00:06:24,310
rough that we can we easily transfer the

00:06:22,000 --> 00:06:27,370
data from Lois agility and the to dock

00:06:24,310 --> 00:06:31,050
that your Anna do that it our horizontal

00:06:27,370 --> 00:06:35,229
scaling V very easy that's cool

00:06:31,050 --> 00:06:38,080
and we build our own the ruff-ruff

00:06:35,229 --> 00:06:41,080
implication here is very stable and you

00:06:38,080 --> 00:06:43,600
can even if you want to butyl your

00:06:41,080 --> 00:06:46,090
use a consensus algorithm in your

00:06:43,600 --> 00:06:47,860
service you can have a try and you use

00:06:46,090 --> 00:06:53,620
it under you can even using in your

00:06:47,860 --> 00:06:55,690
production environment now we have

00:06:53,620 --> 00:06:58,330
Martin raft you will support either

00:06:55,690 --> 00:07:00,970
transaction either horizontal stability

00:06:58,330 --> 00:07:05,199
but a lot of problem is that therefore

00:07:00,970 --> 00:07:07,960
that distributed transaction let me

00:07:05,199 --> 00:07:10,120
consider the following case for example

00:07:07,960 --> 00:07:12,250
for the bank transfer if you want to

00:07:10,120 --> 00:07:15,550
transfer some celery from account to

00:07:12,250 --> 00:07:17,770
account be but I'm not keep both a and

00:07:15,550 --> 00:07:20,500
the B are in deeper in the load so here

00:07:17,770 --> 00:07:22,180
we are in different imarco Marty rough

00:07:20,500 --> 00:07:24,250
groups under here

00:07:22,180 --> 00:07:25,690
here we needed to come so the problem

00:07:24,250 --> 00:07:28,509
that how we can keep the data

00:07:25,690 --> 00:07:31,020
consistency quality market low crossing

00:07:28,509 --> 00:07:34,949
market load crossing Marty rough groups

00:07:31,020 --> 00:07:39,639
that's easy we can use the traditional

00:07:34,949 --> 00:07:42,759
two-phase commit to PC but as you can

00:07:39,639 --> 00:07:45,250
see that QBC has some problems so here

00:07:42,759 --> 00:07:48,760
we use optimizer two-phase commit

00:07:45,250 --> 00:07:50,710
inspired by Google pack later and it has

00:07:48,760 --> 00:07:52,389
a market version concurrent control and

00:07:50,710 --> 00:07:54,610
a provider so we're celebrity or

00:07:52,389 --> 00:07:57,580
isolation and supporter or committee

00:07:54,610 --> 00:07:59,320
transaction I don't I won't talk more

00:07:57,580 --> 00:08:01,060
about our distributed transactions here

00:07:59,320 --> 00:08:03,280
we call it a lot relative that in this

00:08:01,060 --> 00:08:05,680
topic so I was to give it tsuki be if

00:08:03,280 --> 00:08:13,599
you pay attention to it you can search

00:08:05,680 --> 00:08:16,780
apoplectic paper and the more so no seem

00:08:13,599 --> 00:08:19,000
to go the better a lot of problem is

00:08:16,780 --> 00:08:21,970
that because we are distributed at

00:08:19,000 --> 00:08:23,889
ransack distribute the database and we

00:08:21,970 --> 00:08:25,509
have many machines and many services and

00:08:23,889 --> 00:08:28,210
each services needed to commune with

00:08:25,509 --> 00:08:31,570
each other through like a work so how we

00:08:28,210 --> 00:08:34,990
can do this here we choose the RPC Java

00:08:31,570 --> 00:08:38,800
C is a PC framework developed by Google

00:08:34,990 --> 00:08:41,260
and had used in many famous projects

00:08:38,800 --> 00:08:42,969
like you ladies like if CD and the

00:08:41,260 --> 00:08:45,490
charity has many language support later

00:08:42,969 --> 00:08:49,360
you can use Java you can use a prop last

00:08:45,490 --> 00:08:51,579
go long PHP Python you are set for many

00:08:49,360 --> 00:08:53,740
language supported and job say it's

00:08:51,579 --> 00:08:54,820
based on HTTP queue so you can get a

00:08:53,740 --> 00:08:59,260
benefit at

00:08:54,820 --> 00:09:03,370
you directly lack charity to s-sorry

00:08:59,260 --> 00:09:07,750
HTTP so yeah we did I show you you did

00:09:03,370 --> 00:09:12,430
you see jobs Google has provided a state

00:09:07,750 --> 00:09:14,920
official state job is a library has full

00:09:12,430 --> 00:09:16,840
API and you Larry Klein streaming server

00:09:14,920 --> 00:09:19,690
streaming and the duplex screaming they

00:09:16,840 --> 00:09:23,710
are very powerful but anarchy this idea

00:09:19,690 --> 00:09:26,290
this API are asynchronous as you can see

00:09:23,710 --> 00:09:29,560
you liking a synchro lured called is a

00:09:26,290 --> 00:09:34,060
letter mayor for us and you can even get

00:09:29,560 --> 00:09:38,590
stuck into the cone go back here but

00:09:34,060 --> 00:09:42,310
luckily in Rasta we can use futures here

00:09:38,590 --> 00:09:43,810
you simply simple example when we call

00:09:42,310 --> 00:09:45,820
the Euler API you know we return a

00:09:43,810 --> 00:09:47,740
future and then we can use the future

00:09:45,820 --> 00:09:50,320
wait and the world a poodle future later

00:09:47,740 --> 00:09:52,600
so here we use a lot of futures to

00:09:50,320 --> 00:09:56,380
provided a synchronous API for usually

00:09:52,600 --> 00:09:59,320
use and it will build our own job is a

00:09:56,380 --> 00:10:01,060
wrapper here if you want to use your job

00:09:59,320 --> 00:10:09,690
using your own service to people you're

00:10:01,060 --> 00:10:14,790
obviously from work please have a try so

00:10:09,690 --> 00:10:17,140
that's the database take take shift so

00:10:14,790 --> 00:10:18,970
velara thing that we can the terrorize

00:10:17,140 --> 00:10:21,400
can work well but a lot of things is

00:10:18,970 --> 00:10:25,720
that how we can guarantee our database

00:10:21,400 --> 00:10:31,000
work we're here we can use some monitor

00:10:25,720 --> 00:10:34,090
two more hours to check our database can

00:10:31,000 --> 00:10:37,540
work well warlord currently chrome

00:10:34,090 --> 00:10:40,710
issues is thermal is a famous monitor in

00:10:37,540 --> 00:10:44,590
the world loud so we decided to use a

00:10:40,710 --> 00:10:46,960
pro me shoot some provided for at a

00:10:44,590 --> 00:10:48,570
counter educates women his program and a

00:10:46,960 --> 00:10:51,100
summary below here we only with

00:10:48,570 --> 00:10:54,250
chemistry counter cage and his program

00:10:51,100 --> 00:10:56,410
there is a simple example and you can

00:10:54,250 --> 00:10:58,960
see you can use a rigid counter to reach

00:10:56,410 --> 00:11:03,190
together counter a premiership counter

00:10:58,960 --> 00:11:06,040
and increase min the counter we also

00:11:03,190 --> 00:11:08,800
build our own premiership decline in the

00:11:06,040 --> 00:11:11,410
rust you can have our try and this

00:11:08,800 --> 00:11:14,230
rough clay is interested in the

00:11:11,410 --> 00:11:16,989
promotion of a short walk or a hive or

00:11:14,230 --> 00:11:21,360
you know already so you can try have it

00:11:16,989 --> 00:11:21,360
right now

00:11:22,050 --> 00:11:29,860
finally let's go here testy you might

00:11:26,290 --> 00:11:32,850
appealing testing is the most important

00:11:29,860 --> 00:11:37,420
thing in to build a distributed database

00:11:32,850 --> 00:11:39,309
maybe we need a queue because we needed

00:11:37,420 --> 00:11:42,970
because we are building a database and

00:11:39,309 --> 00:11:46,869
the way needed our customer trust us and

00:11:42,970 --> 00:11:49,420
we must ensure that our to it they are

00:11:46,869 --> 00:11:52,600
data in our database cannot be lost

00:11:49,420 --> 00:11:54,759
cannot be corrupted so how we can do how

00:11:52,600 --> 00:11:58,059
can we do this I think the only way is

00:11:54,759 --> 00:12:00,730
to do born you test him and the way near

00:11:58,059 --> 00:12:03,040
that you Pro do many many tests him and

00:12:00,730 --> 00:12:04,929
for you uncle we needed to do you need

00:12:03,040 --> 00:12:07,449
traditional unit testing integration

00:12:04,929 --> 00:12:10,749
testing and the human we can do chaos

00:12:07,449 --> 00:12:15,040
testing many many more but I don't cover

00:12:10,749 --> 00:12:17,920
them all here but here we mention about

00:12:15,040 --> 00:12:19,899
a fair point injection testing the point

00:12:17,920 --> 00:12:22,540
that your injection is the sphere is

00:12:19,899 --> 00:12:24,819
reappointing inspired by a freebsd fear

00:12:22,540 --> 00:12:27,369
and you can see that you can pull here

00:12:24,819 --> 00:12:29,639
here we you regret will reach a selfie

00:12:27,369 --> 00:12:33,399
of winter like in the function foo and

00:12:29,639 --> 00:12:36,069
trigger failure outside when the program

00:12:33,399 --> 00:12:37,149
ran and enter the function panic oh

00:12:36,069 --> 00:12:42,879
that's cool

00:12:37,149 --> 00:12:45,129
so this our wrath of your pointer

00:12:42,879 --> 00:12:48,279
inflammation if you want to ingest ama

00:12:45,129 --> 00:12:55,179
failure into a service and do some funny

00:12:48,279 --> 00:12:58,779
things and you can have a try so what

00:12:55,179 --> 00:13:01,809
that's what and now we can I have making

00:12:58,779 --> 00:13:04,480
the world hierarchy about and now let's

00:13:01,809 --> 00:13:07,329
convert comment him together this is a

00:13:04,480 --> 00:13:10,660
whole architecture a war from the pollen

00:13:07,329 --> 00:13:12,399
to Lata Rock TB to save data using raft

00:13:10,660 --> 00:13:16,059
here replicator and a doodle data

00:13:12,399 --> 00:13:17,589
horizontal and had Emma City and the

00:13:16,059 --> 00:13:20,139
transfer distribute transaction API you

00:13:17,589 --> 00:13:22,370
Jabba took for communication and user

00:13:20,139 --> 00:13:25,490
promise use for Molitor

00:13:22,370 --> 00:13:25,820
that's cool so least of all the whole

00:13:25,490 --> 00:13:29,330
thing

00:13:25,820 --> 00:13:33,170
Peggy Peggy Lee is lucky to be here

00:13:29,330 --> 00:13:35,630
transactional database and I'll call you

00:13:33,170 --> 00:13:38,930
the reading in raft thank you

00:13:35,630 --> 00:13:43,300
many user have user in Thai Cavey many

00:13:38,930 --> 00:13:46,190
user degrees using many in the

00:13:43,300 --> 00:13:49,610
production environment and as I can see

00:13:46,190 --> 00:13:53,900
I can know that one Thai cubic Lassiter

00:13:49,610 --> 00:13:56,960
had allowed deploy about 140 machines

00:13:53,900 --> 00:14:00,589
for one time three cluster in production

00:13:56,960 --> 00:14:05,950
and from language hello one complains

00:14:00,589 --> 00:14:09,760
that their data is both that's cool but

00:14:05,950 --> 00:14:13,070
this is law this in Lord our final goal

00:14:09,760 --> 00:14:15,260
here I will ask you a question which I

00:14:13,070 --> 00:14:18,410
don't mention which I don't ask you

00:14:15,260 --> 00:14:20,480
before at the first that's why we were

00:14:18,410 --> 00:14:23,240
we want to build a distributed a

00:14:20,480 --> 00:14:28,029
transactional cable database we're not

00:14:23,240 --> 00:14:30,980
only for the be we aim higher

00:14:28,029 --> 00:14:34,010
first we want to build a distribute in a

00:14:30,980 --> 00:14:36,980
relational database this is a tidy be

00:14:34,010 --> 00:14:39,709
tidy B will build my circle layer on top

00:14:36,980 --> 00:14:44,029
of a high key v2 provided a distributed

00:14:39,709 --> 00:14:46,459
online transaction processing solution

00:14:44,029 --> 00:14:49,190
you can use it high DB and not using my

00:14:46,459 --> 00:14:54,500
circuit or actually with Jionni with

00:14:49,190 --> 00:14:56,950
load compatible Lea and we was a one

00:14:54,500 --> 00:15:00,650
computer distributor analytical database

00:14:56,950 --> 00:15:02,630
this is a tie Spock we can you can run

00:15:00,650 --> 00:15:04,790
the Apache smart on top of attack Yuma

00:15:02,630 --> 00:15:07,730
directly and that you provide or anyway

00:15:04,790 --> 00:15:13,430
provided or distributed online analytic

00:15:07,730 --> 00:15:15,290
database solution so what also hear what

00:15:13,430 --> 00:15:17,360
they are we're going to go we wanted to

00:15:15,290 --> 00:15:22,670
go to build a hybrid transactional

00:15:17,360 --> 00:15:27,020
analytic processing database this is a

00:15:22,670 --> 00:15:29,959
big future of war as you can see that we

00:15:27,020 --> 00:15:33,170
have a tidy be to provide an OLTP and

00:15:29,959 --> 00:15:34,880
type Spock you provide OAP and the you

00:15:33,170 --> 00:15:35,790
can even you want to use or rock

00:15:34,880 --> 00:15:38,130
transaction

00:15:35,790 --> 00:15:39,899
you can use tagowit directly this is a

00:15:38,130 --> 00:15:44,519
whole picture under this is Albert I'll

00:15:39,899 --> 00:15:45,829
go oh and an argument goal is to use the

00:15:44,519 --> 00:15:57,089
one database for your data

00:15:45,829 --> 00:15:58,440
yes that's what thank you by the way we

00:15:57,089 --> 00:16:00,480
are hearing you we are talking to Tyler

00:15:58,440 --> 00:16:02,630
you're going to pay increase signature

00:16:00,480 --> 00:16:02,630
earth

00:16:15,320 --> 00:16:20,130
you see you ask me that that how do how

00:16:18,360 --> 00:16:26,760
we handle the deadlock in a distributed

00:16:20,130 --> 00:16:29,000
transaction that look well before the

00:16:26,760 --> 00:16:33,630
hour per second mole is optimistic or

00:16:29,000 --> 00:16:35,880
mystic transaction so if you make so for

00:16:33,630 --> 00:16:38,310
transact long to handle a and the key a

00:16:35,880 --> 00:16:41,340
and a beer and second behind along to

00:16:38,310 --> 00:16:43,860
also long 208 and a B and we were at

00:16:41,340 --> 00:16:47,400
first we have sort of a the world of

00:16:43,860 --> 00:16:50,850
keys Mac a and a B and then commit a yet

00:16:47,400 --> 00:16:54,830
so because the committed key is not

00:16:50,850 --> 00:16:54,830
sorted so you can't be taught that log

00:16:55,040 --> 00:17:17,790
yeah yeah order keep you what committed

00:16:57,630 --> 00:17:20,460
is yes Christine you asked me that we

00:17:17,790 --> 00:17:25,770
all the ladies hold up select short

00:17:20,460 --> 00:17:33,930
isolation so how we can support serious

00:17:25,770 --> 00:17:36,150
success sorry si si SSI yes now because

00:17:33,930 --> 00:17:40,260
you peek as you can see we some whole

00:17:36,150 --> 00:17:43,410
MVCC and everything is only for si so if

00:17:40,260 --> 00:17:46,440
we want to use support SSI when we move

00:17:43,410 --> 00:17:49,620
we must measure user to write a circle

00:17:46,440 --> 00:17:52,140
like slack for update expecially to

00:17:49,620 --> 00:17:54,780
support either SSI that's a that's a

00:17:52,140 --> 00:17:57,620
mediator is the only singer only way we

00:17:54,780 --> 00:17:57,620
can do here now

00:18:00,770 --> 00:18:19,130
oh you asked me that

00:18:15,710 --> 00:18:21,890
mmm we have building or C Webber but um

00:18:19,130 --> 00:18:24,410
many other people and sorry I don't know

00:18:21,890 --> 00:18:27,890
him but I know he's the water of niÃ±o I

00:18:24,410 --> 00:18:29,420
had pure pure roster inflammation but

00:18:27,890 --> 00:18:32,480
the white way you still choose that you

00:18:29,420 --> 00:18:35,810
have C well her because we have we build

00:18:32,480 --> 00:18:37,400
a CL we want to use the IBC about one

00:18:35,810 --> 00:18:40,160
years ago at that time

00:18:37,400 --> 00:18:43,010
there's no stable inflammation and and

00:18:40,160 --> 00:18:44,810
there are only over the only stable

00:18:43,010 --> 00:18:48,410
inflammation either say you have it's a

00:18:44,810 --> 00:18:52,010
Seiko libraries we have to use it evil

00:18:48,410 --> 00:18:55,360
and but later if you the pure wrath

00:18:52,010 --> 00:18:58,280
information is coming and we can very a

00:18:55,360 --> 00:19:13,820
commercial cry to use a there's our

00:18:58,280 --> 00:19:18,440
player oh yes you asked me which

00:19:13,820 --> 00:19:20,270
secretary I would do we support I said

00:19:18,440 --> 00:19:22,760
I'm sorry

00:19:20,270 --> 00:19:25,070
Heidi be we built on my second layer on

00:19:22,760 --> 00:19:27,530
top take away so you can ward us

00:19:25,070 --> 00:19:30,530
so-called dialogue over type my circle

00:19:27,530 --> 00:19:35,840
we support it but we don't stop holder

00:19:30,530 --> 00:19:40,190
sorry we don't support wait sorry I I

00:19:35,840 --> 00:19:42,050
have a tooth we support joining it's

00:19:40,190 --> 00:19:44,330
burning lots of how you might circle

00:19:42,050 --> 00:19:48,080
some holding post critical we lost

00:19:44,330 --> 00:19:53,060
somehow Hawaii we lost about closet door

00:19:48,080 --> 00:19:55,130
yeah maybe warm the circle function we

00:19:53,060 --> 00:19:58,400
support it I know so you can transfer

00:19:55,130 --> 00:20:00,890
you can convert your you change your

00:19:58,400 --> 00:20:02,630
bezel ad from my circle to my career

00:20:00,890 --> 00:20:08,860
you're being away from my cell go to the

00:20:02,630 --> 00:20:08,860
tiny bees it generally yeah

00:20:13,169 --> 00:20:20,380
yeah you you you asked me that that ty

00:20:17,919 --> 00:20:23,590
kv supporter some API for the

00:20:20,380 --> 00:20:26,590
transactional yeah of course I because

00:20:23,590 --> 00:20:28,360
as you can see there take away much

00:20:26,590 --> 00:20:31,510
probably in the transactional API so

00:20:28,360 --> 00:20:36,789
like so like user you'd like add a menu

00:20:31,510 --> 00:20:38,890
three not sorry like this user can you

00:20:36,789 --> 00:20:40,780
do likely to pay you the begin to start

00:20:38,890 --> 00:20:43,059
transaction and then you get using

00:20:40,780 --> 00:20:44,770
courgette and I use course at and again

00:20:43,059 --> 00:20:58,690
committed transaction date all opposed

00:20:44,770 --> 00:21:01,270
to supporting on you tacky me you asked

00:20:58,690 --> 00:21:03,419
me that you thought spikey we support

00:21:01,270 --> 00:21:03,419
beam

00:21:04,990 --> 00:21:08,210
[Music]

00:21:46,139 --> 00:22:00,909
my transaction transaction

00:21:50,950 --> 00:22:02,619
oh my togepi not yes oh we have a we

00:22:00,909 --> 00:22:05,049
have a penal affiliation but not in

00:22:02,619 --> 00:22:07,840
tightly be you see in tidy be because

00:22:05,049 --> 00:22:09,940
you can enter a work or the circle you

00:22:07,840 --> 00:22:13,600
throat ID be so can't hairy we can

00:22:09,940 --> 00:22:16,509
record a solid or the circle or not do

00:22:13,600 --> 00:22:17,950
record in our yoga implementation but at

00:22:16,509 --> 00:22:21,070
a spin or it's not different it's

00:22:17,950 --> 00:22:22,659
different from the magical okay and we

00:22:21,070 --> 00:22:25,330
can use Urbino under using you can use a

00:22:22,659 --> 00:22:27,820
pin or two synchro synchronised order

00:22:25,330 --> 00:22:29,889
your data from the tiny be to our lab to

00:22:27,820 --> 00:22:30,429
our there are surveys the neck single

00:22:29,889 --> 00:22:33,909
Tula

00:22:30,429 --> 00:22:43,600
Kafka or you back search or even another

00:22:33,909 --> 00:22:45,820
tidy be we can use the pin lock yes yes

00:22:43,600 --> 00:22:48,399
that's a good question Mac I don't

00:22:45,820 --> 00:22:51,220
mention present here entirely because

00:22:48,399 --> 00:22:57,639
relative in this topic and butter you

00:22:51,220 --> 00:22:59,499
can I'm sorry I don't make sure I tidy

00:22:57,639 --> 00:23:02,100
taking me a little only provided but I

00:22:59,499 --> 00:23:04,450
try second API you do provide and

00:23:02,100 --> 00:23:08,200
compensated if yeah well you look casada

00:23:04,450 --> 00:23:10,720
casal is the same does concern in HBase

00:23:08,200 --> 00:23:12,610
and you can push down your some logic to

00:23:10,720 --> 00:23:15,100
the activity rectory and do some

00:23:12,610 --> 00:23:20,159
calculation and a retainer which are we

00:23:15,100 --> 00:23:20,159
already do this but I don't mission is

00:23:27,720 --> 00:23:35,230
yeah

00:23:28,980 --> 00:23:35,230

YouTube URL: https://www.youtube.com/watch?v=mSRwr7I-ZOg


