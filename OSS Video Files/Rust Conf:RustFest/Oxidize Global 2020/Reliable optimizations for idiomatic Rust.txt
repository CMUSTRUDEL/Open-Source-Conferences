Title: Reliable optimizations for idiomatic Rust
Publication date: 2020-11-06
Playlist: Oxidize Global 2020
Description: 
	Optimizations are mainly known for

 - making code fast,
 - aggravating undefined behavior, and
 - making developers suffer during debugging.


In the Rust compiler we have a scheme that allows us to optimize code without affecting the debug-ability while at the same time actually causing compile time speed ups. This talk first introduces the MIR, on which the Rust compiler does optimizations. Then various concepts are explained, which allow us to write idiomatic Rust and still getting performance that hand-crafted low level code can’t beat. Finally an outlook on cool-things-to-come ™️ shows how language-guaranteed optimizations can be leveraged in resource constrained environments.
YouTube URL: https://www.youtube.com/watch?v=Tr9CiKg-z4c


