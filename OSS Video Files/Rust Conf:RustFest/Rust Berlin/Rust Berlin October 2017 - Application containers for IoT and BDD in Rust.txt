Title: Rust Berlin October 2017 - Application containers for IoT and BDD in Rust
Publication date: 2017-10-19
Playlist: Rust Berlin
Description: 
	We are aware of audio issues in Vincents talk and are working on providing subtitles as a replacement.

Arvid E. Picciani (https://github.com/aep)

Application container deployment for the Internet of Things with Rust

Solving containerization on very constrained devices will enable a new way we deliver system updates to embedded systems. We'll learn about one possible approach with korhal's bolter and how it ties into the interplanetary hash router to deliver content addressable system updates to microcontrollers anywhere, without a cloud.


Arvid is a controversial break-the-whole-box-thinker getting hired to put Linux on stuff where Linux would prefer to not be with deadlines you'd prefer to not have. He's currently CTO of superscale networks and Founder of korhal.io, an organization dedicated to liberating IoT and preventing consumer lock-in.


Vincent Esche (https://github.com/regexident)

rspec and what it takes to make a BDD test framework in stable Rust

While the existence of native language-level support for unit testing in Rust is a blessing, classical JUnit-style unit testing can feel a bit antiquated at times. You. Just. Keep. Repeating. Yourself. This is where BDD frameworks come in with their shared scopes and user-friendly matchers. Rspec's aim is to provide the BDD testing experience to Rust without the need to bend over backwards or drink the nightly kool-aid. Tests should be just as stable as the rest of your code, if not more. After all who tests your tests if those break?


A mobile dev lead writing Swift at an emerging fitness/health and IoT startup in Berlin by day, and Rustacean by night, Vincent authored cargo modules and rustfmt's comprehensive configuration guide and is currently working on a modern and extensible Support Vector Machine implementation in Rust.
YouTube URL: https://www.youtube.com/watch?v=-9DXoSEdNoc


