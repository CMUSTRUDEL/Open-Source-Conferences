Title: Building a CO2 Measuring Device with Embedded Rust â€” Tanks Transfeld
Publication date: 2019-11-15
Playlist: Rust and Tell Berlin
Description: 
	From the Berlin Rust's October "Rust and Tell" Meetup (https://www.meetup.com/Rust-Berlin/)

"Rust and Tellâ€œ is a monthly event to share ideas, and learn about new things in and about Rust. Meet fellow Rustaceans, share your learnings, get motivated and inspired. Weâ€™re open to any and all kinds of talks about any subjects that you think will be interesting to an audience interested in Rust. Whether you're an experienced Rust developer or just getting started, we strongly encourage you to share your learnings.

Tanks Transfield: https://twitter.com/Mirabellensaft

Hosted at Prisma: prisma.io

ðŸŽ¥ Filmed by iStream: http://www.istream.pl/
Captions: 
	00:00:03,770 --> 00:00:08,040
hello everyone

00:00:05,790 --> 00:00:10,920
yeah I'm going to talk to you about

00:00:08,040 --> 00:00:15,049
building as carbon dioxide measuring

00:00:10,920 --> 00:00:19,260
device with embedded rest and since I

00:00:15,049 --> 00:00:24,029
like to dig into stuff from right in the

00:00:19,260 --> 00:00:26,519
beginning and into very detail I am

00:00:24,029 --> 00:00:29,279
making this into a story of how to turn

00:00:26,519 --> 00:00:35,850
an amount of molecules in the air into a

00:00:29,279 --> 00:00:38,280
human readable number Who am I - thanks

00:00:35,850 --> 00:00:40,230
transferred my pronouns are they them

00:00:38,280 --> 00:00:43,260
I'm a former teacher for chemistry and

00:00:40,230 --> 00:00:46,170
art and now I do embed the development

00:00:43,260 --> 00:00:48,149
and teach Russ at Ferris systems and you

00:00:46,170 --> 00:00:53,760
can find me on Twitter and github under

00:00:48,149 --> 00:00:55,829
the name it happens left I am also an

00:00:53,760 --> 00:01:00,149
organizer organizer of wrasse bridge

00:00:55,829 --> 00:01:03,510
Berlin and we have a well respite an

00:01:00,149 --> 00:01:07,740
organization that helps marginalize

00:01:03,510 --> 00:01:10,590
people to learn rust and we have a

00:01:07,740 --> 00:01:13,350
workshop on November 23rd and we still

00:01:10,590 --> 00:01:15,869
need coaches so if you like teaching

00:01:13,350 --> 00:01:20,220
Russ or even if you have never taught

00:01:15,869 --> 00:01:32,670
Russ but like to try it I encourage you

00:01:20,220 --> 00:01:38,280
to sign up as a coach and yeah so back

00:01:32,670 --> 00:01:42,990
to their co2 measuring device the

00:01:38,280 --> 00:01:46,950
hardware I use is one cent a sensor from

00:01:42,990 --> 00:01:50,040
sensory on the SCD 30 which is a

00:01:46,950 --> 00:01:52,799
non-dispersive infrared carbon dioxide

00:01:50,040 --> 00:01:56,219
sensor and we talk about I I will

00:01:52,799 --> 00:01:58,909
explain to you what that means and which

00:01:56,219 --> 00:02:03,560
also measures temperature and humidity

00:01:58,909 --> 00:02:07,590
the microcontroller I uses aid if DWM

00:02:03,560 --> 00:02:11,270
1001 def Development Board and also lots

00:02:07,590 --> 00:02:11,270
of wires and a breadboard

00:02:12,770 --> 00:02:19,580
I will talk a bit about chemistry but

00:02:17,090 --> 00:02:22,310
don't be afraid the only two things you

00:02:19,580 --> 00:02:24,770
need to know beforehand is that matter

00:02:22,310 --> 00:02:32,620
is made out of atoms and there is a

00:02:24,770 --> 00:02:37,120
spectrum of electromagnetic radiation so

00:02:32,620 --> 00:02:41,060
atoms bond together to form molecules I

00:02:37,120 --> 00:02:43,340
have two examples one is carbon dioxide

00:02:41,060 --> 00:02:46,820
we're just made out of two oxygen atoms

00:02:43,340 --> 00:02:48,590
and one carbon atom and one water

00:02:46,820 --> 00:02:52,510
molecule which is made out of two

00:02:48,590 --> 00:02:54,830
hydrogen atoms and one oxygen atom and

00:02:52,510 --> 00:02:57,670
the important part here is that

00:02:54,830 --> 00:03:03,680
molecules have geometry despite both

00:02:57,670 --> 00:03:08,900
obvious having are made of I mean are

00:03:03,680 --> 00:03:14,510
made out of three atoms the one is in a

00:03:08,900 --> 00:03:20,200
line and the other one has an angle the

00:03:14,510 --> 00:03:24,080
principle this sensor is built is

00:03:20,200 --> 00:03:25,880
actually pretty simple we have a sample

00:03:24,080 --> 00:03:28,910
chamber with an opening where the

00:03:25,880 --> 00:03:31,810
ambient air can flow in and out and at

00:03:28,910 --> 00:03:36,230
the one side there's an infrared source

00:03:31,810 --> 00:03:39,920
the Rays go down to a bandpass filter

00:03:36,230 --> 00:03:43,100
which only that's through specific

00:03:39,920 --> 00:03:48,470
wavelength and they are passed to an in

00:03:43,100 --> 00:03:52,750
a passive infrared sensor infrared

00:03:48,470 --> 00:03:57,320
radiation is on the spectrum of elected

00:03:52,750 --> 00:04:00,830
so electromagnetic radiation pretty much

00:03:57,320 --> 00:04:04,700
right outside of the spectrum of visible

00:04:00,830 --> 00:04:11,840
light so oftentimes it's referred to as

00:04:04,700 --> 00:04:15,680
infrared infrared light and wavelength

00:04:11,840 --> 00:04:21,020
that is most interesting for this type

00:04:15,680 --> 00:04:22,710
of sensor is the wavelength at 1

00:04:21,020 --> 00:04:26,639
micrometer

00:04:22,710 --> 00:04:31,470
which is indicated with the arrow yeah

00:04:26,639 --> 00:04:33,900
infrared interacts with molecules the

00:04:31,470 --> 00:04:36,810
molecules absorb energy and they start

00:04:33,900 --> 00:04:39,000
to vibrate this is a carbon dioxide

00:04:36,810 --> 00:04:42,030
molecule showing the different kinds of

00:04:39,000 --> 00:04:43,830
vibrations it can do and other than in

00:04:42,030 --> 00:04:46,229
this gif usually more than one type of

00:04:43,830 --> 00:04:48,780
vibration can appear at the same time in

00:04:46,229 --> 00:04:53,090
the same molecule and additionally to

00:04:48,780 --> 00:04:59,610
that molecule spin so molecules are a

00:04:53,090 --> 00:05:04,110
very wobbly subject and not static at

00:04:59,610 --> 00:05:06,389
all so the substances increase in

00:05:04,110 --> 00:05:18,150
temperature as the vibrations of the

00:05:06,389 --> 00:05:20,550
single molecules dissipate as heat so

00:05:18,150 --> 00:05:23,030
the wavelength at which different types

00:05:20,550 --> 00:05:25,650
of molecules absorb infrared is

00:05:23,030 --> 00:05:31,820
characteristic each substance has a

00:05:25,650 --> 00:05:37,110
distinct profile so you can see they are

00:05:31,820 --> 00:05:41,250
carbon dioxide has peaks here at 4.2

00:05:37,110 --> 00:05:44,639
micrometers and here about two and a

00:05:41,250 --> 00:05:51,270
half and back in the end between 14 and

00:05:44,639 --> 00:05:53,340
16 it has some smaller Peaks too and the

00:05:51,270 --> 00:05:57,030
profiles of other molecules look

00:05:53,340 --> 00:06:01,020
different but these profiles are not

00:05:57,030 --> 00:06:04,080
completely unique and for us the overlap

00:06:01,020 --> 00:06:07,889
between carbon dioxide and water is very

00:06:04,080 --> 00:06:10,580
important as you can see this carbon

00:06:07,889 --> 00:06:16,590
dioxide peak almost shares the same peak

00:06:10,580 --> 00:06:19,080
with water and as the height of the peak

00:06:16,590 --> 00:06:24,840
indicates the amount of the substance

00:06:19,080 --> 00:06:27,990
detected water is a huge distraction

00:06:24,840 --> 00:06:30,740
when wanting to measure carbon dioxide

00:06:27,990 --> 00:06:30,740
with infrared

00:06:34,840 --> 00:06:48,409
so how do we deal with that problem the

00:06:41,330 --> 00:06:51,979
bandpass filter this the bandpass filter

00:06:48,409 --> 00:06:56,150
filter only lets specific wavelengths

00:06:51,979 --> 00:06:58,460
through transmission is the amount of

00:06:56,150 --> 00:07:01,819
electromagnetic for magnetic radiation

00:06:58,460 --> 00:07:04,310
that passes through something the

00:07:01,819 --> 00:07:06,860
transmission for infrared through the

00:07:04,310 --> 00:07:09,169
filter goes up for the same wavelength

00:07:06,860 --> 00:07:12,949
where the transmission of infrared

00:07:09,169 --> 00:07:15,259
through carbon dioxide goes down this

00:07:12,949 --> 00:07:18,400
way only infrared that could have been

00:07:15,259 --> 00:07:21,409
absorbed by carbon dioxide but was not

00:07:18,400 --> 00:07:27,219
ends up on the other side of the filter

00:07:21,409 --> 00:07:29,839
and the wavelength at which water

00:07:27,219 --> 00:07:33,129
molecules absorb infrared to is

00:07:29,839 --> 00:07:40,279
basically shut out so we got rid of

00:07:33,129 --> 00:07:43,430
problem for now how can this be used to

00:07:40,279 --> 00:07:45,589
count molecules this is actually pretty

00:07:43,430 --> 00:07:47,599
straightforward because the more

00:07:45,589 --> 00:07:49,279
molecules in the path of the light the

00:07:47,599 --> 00:07:52,520
less light can pass through the sample

00:07:49,279 --> 00:07:55,610
chamber into the filter this is called

00:07:52,520 --> 00:07:59,710
the Lambert Bayer law which is an

00:07:55,610 --> 00:07:59,710
important law for spectroscopy

00:08:05,930 --> 00:08:11,060
after the bandpass filter there is the

00:08:08,660 --> 00:08:14,690
passive infrared sensor which converts

00:08:11,060 --> 00:08:17,270
the remaining infrared into voltage it

00:08:14,690 --> 00:08:20,180
consists of a very simple a polarized

00:08:17,270 --> 00:08:22,190
crystal incoming remaining infrared is

00:08:20,180 --> 00:08:24,199
absorbed and the crystal heats up

00:08:22,190 --> 00:08:28,430
basically with the same mechanism as the

00:08:24,199 --> 00:08:30,350
carbon dioxide molecule does because the

00:08:28,430 --> 00:08:32,990
ions and the crystal will start

00:08:30,350 --> 00:08:35,719
vibrating the change in temperature

00:08:32,990 --> 00:08:37,640
leads to a change in the polarization of

00:08:35,719 --> 00:08:42,789
the crystal which can be measured as a

00:08:37,640 --> 00:08:47,120
change in the electric potential so

00:08:42,789 --> 00:08:50,209
conclusion when the carbon dioxide

00:08:47,120 --> 00:08:52,730
concentration goes up the infrared

00:08:50,209 --> 00:08:54,560
transmission goes down the heat goes

00:08:52,730 --> 00:08:57,560
down and the electric potential goes

00:08:54,560 --> 00:09:01,160
down when carbon dioxide concentration

00:08:57,560 --> 00:09:04,580
is low the infrared transmission goes up

00:09:01,160 --> 00:09:10,760
it the crystal gets warmer and there's a

00:09:04,580 --> 00:09:14,360
higher electric potential the next step

00:09:10,760 --> 00:09:17,750
is the sensor firmware which converts

00:09:14,360 --> 00:09:20,209
the voltage an analog signal into

00:09:17,750 --> 00:09:23,240
digital signal the carbon dioxide

00:09:20,209 --> 00:09:26,480
concentration is inversely proportionate

00:09:23,240 --> 00:09:30,680
to voltage and a conversion factor is

00:09:26,480 --> 00:09:32,029
previously obtained by calibration but

00:09:30,680 --> 00:09:35,000
there are two things that have to be

00:09:32,029 --> 00:09:37,370
factored m1 is a temperature offset and

00:09:35,000 --> 00:09:40,430
the other one is humidity where water

00:09:37,370 --> 00:09:42,709
again plays a role the higher

00:09:40,430 --> 00:09:45,320
temperature leads to less carbon dioxide

00:09:42,709 --> 00:09:49,220
molecules being detected because heat

00:09:45,320 --> 00:09:52,520
leads to the expansion of the gas in the

00:09:49,220 --> 00:09:55,970
sample chamber and higher pressure

00:09:52,520 --> 00:10:01,610
inside will press molecules outside of

00:09:55,970 --> 00:10:04,900
the chamber and the water content in the

00:10:01,610 --> 00:10:07,700
air is extremely variable especially

00:10:04,900 --> 00:10:09,800
when there's a lot of people present or

00:10:07,700 --> 00:10:13,490
when weather is changing when it's

00:10:09,800 --> 00:10:17,290
raining outside and water molecules

00:10:13,490 --> 00:10:19,370
basically dilute the sample so to have

00:10:17,290 --> 00:10:22,310
values that can

00:10:19,370 --> 00:10:25,880
be comparable to others we always need

00:10:22,310 --> 00:10:30,380
to have basically a dry sample so the

00:10:25,880 --> 00:10:32,570
humidity is subtracted from that so this

00:10:30,380 --> 00:10:37,360
is why the sensor has its own

00:10:32,570 --> 00:10:37,360
temperature sensor and a humidity sensor

00:10:38,290 --> 00:10:47,510
next step is we need to talk the board

00:10:43,730 --> 00:10:51,710
needs to talk to the center and it does

00:10:47,510 --> 00:10:56,300
so through a protocol and the one I use

00:10:51,710 --> 00:10:59,960
is I squared C I squared C consists of

00:10:56,300 --> 00:11:03,050
two signal lines one is the serial data

00:10:59,960 --> 00:11:06,410
line and one is this your clock line and

00:11:03,050 --> 00:11:09,650
this is on a very abstract level what

00:11:06,410 --> 00:11:12,880
the signal looks like this is basically

00:11:09,650 --> 00:11:17,870
voltage high and low for each line the

00:11:12,880 --> 00:11:20,120
clock goes just high and low pretty

00:11:17,870 --> 00:11:24,950
regularly what you would expect from a

00:11:20,120 --> 00:11:26,750
clock and the data goes up and down

00:11:24,950 --> 00:11:31,339
depending on what kind of bit is

00:11:26,750 --> 00:11:34,700
transmitted and each signal package

00:11:31,339 --> 00:11:44,690
starts with a start byte and bit and

00:11:34,700 --> 00:11:49,670
ends with and stop it so the software I

00:11:44,690 --> 00:11:52,430
wrote sends these signals and in the

00:11:49,670 --> 00:11:59,270
form of commands and this is basically

00:11:52,430 --> 00:12:02,150
what a command looks like the boxes in

00:11:59,270 --> 00:12:06,680
the lighter color we don't have to worry

00:12:02,150 --> 00:12:10,339
about because the crate that is used for

00:12:06,680 --> 00:12:13,850
this protocol does that for us and the

00:12:10,339 --> 00:12:17,510
other ones you as a program we have to

00:12:13,850 --> 00:12:20,170
do you have you need an address and you

00:12:17,510 --> 00:12:23,420
need to know the commands which are

00:12:20,170 --> 00:12:25,750
usually to be found in data sheets of

00:12:23,420 --> 00:12:27,310
the devices you're talking to and

00:12:25,750 --> 00:12:31,700
oftentimes

00:12:27,310 --> 00:12:33,530
you also need the so called CRC bytes

00:12:31,700 --> 00:12:35,810
which is

00:12:33,530 --> 00:12:40,340
because send a lot of data you want to

00:12:35,810 --> 00:12:42,560
make sure it doesn't get corrupted so I

00:12:40,340 --> 00:12:50,450
have three examples that I will also

00:12:42,560 --> 00:12:53,780
demonstrate later we send this is

00:12:50,450 --> 00:12:57,740
basically what command looks like for

00:12:53,780 --> 00:13:04,310
telling the sensor to start measuring we

00:12:57,740 --> 00:13:06,380
send a write command - this is the

00:13:04,310 --> 00:13:09,740
command part this is the address

00:13:06,380 --> 00:13:13,370
and sometimes arguments are used which

00:13:09,740 --> 00:13:20,720
is true for this case they're both 0 and

00:13:13,370 --> 00:13:23,180
a CRC bit right and this is just telling

00:13:20,720 --> 00:13:27,080
the sensor to start doing something but

00:13:23,180 --> 00:13:29,930
sometimes we also need the sensor to

00:13:27,080 --> 00:13:35,060
talk back to us like in this case we

00:13:29,930 --> 00:13:38,540
this is a command to ask the sensor if

00:13:35,060 --> 00:13:43,390
data is ready so there's an answer to be

00:13:38,540 --> 00:13:48,350
expected this time I also show you the

00:13:43,390 --> 00:13:51,890
function that does this we have a write

00:13:48,350 --> 00:13:54,850
buffer which needs 2 bytes which are the

00:13:51,890 --> 00:13:58,610
commands you can see and the pink line

00:13:54,850 --> 00:14:00,860
and we have a read buffer which is the

00:13:58,610 --> 00:14:07,550
length of the answer we expect which is

00:14:00,860 --> 00:14:09,620
3 bytes in this case the answer can is

00:14:07,550 --> 00:14:14,600
the either be yes or no so either data

00:14:09,620 --> 00:14:17,840
is ready or not so the answer can be 0

00:14:14,600 --> 00:14:23,950
or 1 in this case it's 1 if data is

00:14:17,840 --> 00:14:27,440
writing and when data is ready we can

00:14:23,950 --> 00:14:32,300
tell the sensor to send the measurements

00:14:27,440 --> 00:14:35,420
the data and of course here the answer

00:14:32,300 --> 00:14:39,010
is not just yes or no but a lot of bytes

00:14:35,420 --> 00:14:39,010
for the data

00:14:42,920 --> 00:14:50,850
so I will guide you I will give you a

00:14:48,270 --> 00:14:53,100
quick overview over the code and then

00:14:50,850 --> 00:14:56,490
demonstrate with the logic analyzer how

00:14:53,100 --> 00:14:59,160
the software talks to the sensor a logic

00:14:56,490 --> 00:15:02,340
analyzer is a device used for debugging

00:14:59,160 --> 00:15:04,470
embedded systems it is hooked up to the

00:15:02,340 --> 00:15:06,420
signal lines and measures the voltage

00:15:04,470 --> 00:15:08,520
and basically takes a snapshot of the

00:15:06,420 --> 00:15:15,300
conversation between the board and the

00:15:08,520 --> 00:15:18,170
sensor and need a couple of seconds to

00:15:15,300 --> 00:15:18,170
set that up

00:15:28,449 --> 00:15:40,880
yeah this is the coat this first part is

00:15:36,490 --> 00:15:44,509
about setting up the board and setting

00:15:40,880 --> 00:15:47,720
up the protocol then there is a delay

00:15:44,509 --> 00:15:51,800
for because the sensor needs time to

00:15:47,720 --> 00:15:56,029
power up and the first command which you

00:15:51,800 --> 00:16:00,019
remember is start measuring then the

00:15:56,029 --> 00:16:03,410
program goes into a loop which asks the

00:16:00,019 --> 00:16:05,149
sensor if data is ready and if the

00:16:03,410 --> 00:16:08,449
answer to that is true

00:16:05,149 --> 00:16:11,529
it breaks the loop and blinks green LEDs

00:16:08,449 --> 00:16:15,880
and goes into the next loop which

00:16:11,529 --> 00:16:18,230
continues to measure carbon dioxide

00:16:15,880 --> 00:16:24,769
concentration the temperature and the

00:16:18,230 --> 00:16:35,089
humidity and prints that out and this is

00:16:24,769 --> 00:16:46,220
what I will show to you first have to

00:16:35,089 --> 00:16:53,290
start the debugger which loads the

00:16:46,220 --> 00:16:53,290
program onto the microcontroller and

00:16:55,149 --> 00:17:06,230
this is the software for the logic

00:16:59,750 --> 00:17:10,220
analyzer which kind of has to be loaded

00:17:06,230 --> 00:17:14,839
and we'll just take a picture of the

00:17:10,220 --> 00:17:21,289
conversation once it's happening and the

00:17:14,839 --> 00:17:25,089
first line I want to show you is the

00:17:21,289 --> 00:17:25,089
breakpoint at line 51

00:17:26,280 --> 00:17:32,210
I forgot something

00:17:38,420 --> 00:17:54,450
okay this is the output of the logic

00:17:50,130 --> 00:17:58,740
analyzer showing exactly the blocks I

00:17:54,450 --> 00:18:03,350
showed you before the address the to the

00:17:58,740 --> 00:18:16,670
right head acknowledge the command and

00:18:03,350 --> 00:18:26,390
the arguments and the CRC build the next

00:18:16,670 --> 00:18:26,390
command is if data is ready

00:18:37,090 --> 00:18:42,159
what do you expect a state already or

00:18:40,010 --> 00:18:42,159
not

00:18:43,480 --> 00:18:55,090
well usually after this long time of

00:18:46,130 --> 00:18:55,090
course it's ready so here's the one and

00:19:00,070 --> 00:19:10,690
the last one is getting the measurement

00:19:28,310 --> 00:19:37,010
and here we have all those bytes which

00:19:33,830 --> 00:19:39,290
are still not human readable but this is

00:19:37,010 --> 00:19:42,740
the temperature the carbon dioxide

00:19:39,290 --> 00:19:48,380
content of this room and the humidity in

00:19:42,740 --> 00:19:50,800
bytes separated by a CRC bytes so we

00:19:48,380 --> 00:20:03,760
still don't have a human readable number

00:19:50,800 --> 00:20:03,760
but this is the thing I show you next

00:20:06,820 --> 00:20:15,640
you have to do eat all the breakpoints

00:20:10,420 --> 00:20:26,960
and now it continues in the measurement

00:20:15,640 --> 00:20:32,890
mode loop except that the number is real

00:20:26,960 --> 00:20:32,890
wallet it's way higher than I expected

00:20:33,610 --> 00:20:40,630
we have a carbon dioxide concentration

00:20:36,740 --> 00:20:42,800
of over 3,000 parts per million and

00:20:40,630 --> 00:20:44,660
1,000 parts per million is the

00:20:42,800 --> 00:20:45,510
concentration way you're supposed to

00:20:44,660 --> 00:20:49,450
open the window

00:20:45,510 --> 00:20:54,640
[Laughter]

00:20:49,450 --> 00:20:54,640
[Applause]

00:20:57,539 --> 00:21:26,529
yeah do you have any questions so that

00:21:06,070 --> 00:21:28,690
or it would probably absorb other to all

00:21:26,529 --> 00:21:31,419
of the spectrum and the bandpass filter

00:21:28,690 --> 00:21:34,409
just passes the wavelengths that are

00:21:31,419 --> 00:21:34,409
absorbed so

00:21:50,080 --> 00:21:58,990
well the problem is that almost

00:21:52,730 --> 00:22:04,720
everything is an emitter for for an

00:21:58,990 --> 00:22:22,220
applied so you would have more

00:22:04,720 --> 00:22:26,060
distracting signals yeah the sensor

00:22:22,220 --> 00:22:28,720
costs about 50 euro and the board is

00:22:26,060 --> 00:22:28,720
like 35

00:22:39,230 --> 00:22:45,550
it took me it actually took me weeks to

00:22:42,050 --> 00:22:52,130
get that far but this is the first

00:22:45,550 --> 00:22:55,220
embedded West project I did and it was

00:22:52,130 --> 00:22:58,760
kind of frustrating because as you can

00:22:55,220 --> 00:23:05,660
basically see through this talk embedded

00:22:58,760 --> 00:23:11,090
systems have so many layers and the rest

00:23:05,660 --> 00:23:14,780
code was the most easy thing in yeah

00:23:11,090 --> 00:23:17,780
that was it was kind of treble the rest

00:23:14,780 --> 00:23:20,420
code was trivial but getting the all the

00:23:17,780 --> 00:23:26,480
parts working together with resistors

00:23:20,420 --> 00:23:30,700
and all the yeah small details and that

00:23:26,480 --> 00:23:30,700
took quite a long time to figure out

00:23:37,150 --> 00:23:45,460
[Laughter]

00:23:41,410 --> 00:23:50,150
depends on how good your frustration

00:23:45,460 --> 00:23:53,600
tolerance is but let's say if you have

00:23:50,150 --> 00:23:56,900
never done embedded stuff start with I

00:23:53,600 --> 00:24:01,160
don't know micro Pisan yeah no it's

00:23:56,900 --> 00:24:05,020
seriously let's and but then it's after

00:24:01,160 --> 00:24:05,020
that probably totally cool

00:24:11,860 --> 00:24:46,910
that was that is part of the crate my

00:24:43,370 --> 00:24:50,900
personal feeling is that it's kind of

00:24:46,910 --> 00:24:53,780
you have to expect to invest time

00:24:50,900 --> 00:24:57,770
because there might be a driver for your

00:24:53,780 --> 00:24:59,750
part or not in my case there was a

00:24:57,770 --> 00:25:02,240
driver which wasn't working with the

00:24:59,750 --> 00:25:07,190
board so I ended up driving writing my

00:25:02,240 --> 00:25:13,970
own driver anyway so that's kind of what

00:25:07,190 --> 00:25:28,970
you have to expect but yeah you get to

00:25:13,970 --> 00:25:32,450
write drivers okay I will put a lot of

00:25:28,970 --> 00:25:41,030
carbon dioxide measuring devices in our

00:25:32,450 --> 00:25:44,690
office I will design these devices they

00:25:41,030 --> 00:25:47,860
will have they have will have an

00:25:44,690 --> 00:25:50,960
interface they will have a display that

00:25:47,860 --> 00:25:54,620
will display these numbers and they will

00:25:50,960 --> 00:25:58,960
send the data to a central raspberry pi

00:25:54,620 --> 00:25:58,960
which will do a nice data things with it

00:26:00,360 --> 00:26:02,420
you

00:26:07,800 --> 00:26:14,999

YouTube URL: https://www.youtube.com/watch?v=HybHkK2P3yI


