Title: RustConf 2019 - Opening Keynote by Steve Klabnik & Florian Gilcher
Publication date: 2019-09-16
Playlist: RustConf 2019
Description: 
	RustConf 2019 - Opening Keynote by Steve Klabnik & Florian Gilcher

Rust has wild years behind it: we released Rust 1.0 just a little over 4 years ago. We released 37 stable versions of the compiler and countless other releases. Edition 2018 happened. async/await is finally here! And this is not counting the uptake of general crates!

We're successful! Indeed, the Rust programming language and project are some of fastest growing globally. But Edition 2018 also was a breakpoint: it was a common goal to work towards. That is now gone.

With the explosive growth also comes a growing understanding of our processes and community, but also growing unclarity. Steve and Florian will share their thoughts on the last year(s) and especially on the future. This keynote wants to encourage you to form your own and grow a common understanding how to carve our way forward!
Captions: 
	00:00:08,770 --> 00:00:14,410
[Music]

00:00:17,110 --> 00:00:21,980
so yeah good morning everybody welcome

00:00:19,520 --> 00:00:22,730
to Russ Kampf how many of you is at your

00:00:21,980 --> 00:00:25,760
first

00:00:22,730 --> 00:00:28,340
Russ comp that is amazing and wonderful

00:00:25,760 --> 00:00:30,830
welcome we're really excited to have you

00:00:28,340 --> 00:00:32,419
here I'm always surprised by the number

00:00:30,830 --> 00:00:33,650
like every year it gets to be more and

00:00:32,419 --> 00:00:35,150
more people what you think is a

00:00:33,650 --> 00:00:37,220
conference would go on it would be less

00:00:35,150 --> 00:00:44,690
and less but we're clearly like growing

00:00:37,220 --> 00:00:53,600
that's super super exciting so yeah I I

00:00:44,690 --> 00:00:56,059
saw this tweet yesterday and I I am NOT

00:00:53,600 --> 00:00:58,129
the CEO of rust nor am I here to tell

00:00:56,059 --> 00:00:59,570
you that we've removed string but I

00:00:58,129 --> 00:01:01,280
thought this is really funny and

00:00:59,570 --> 00:01:03,320
interesting not just because it's like a

00:01:01,280 --> 00:01:04,610
very good tweet but I think it also got

00:01:03,320 --> 00:01:06,650
to a little bit of what we're gonna like

00:01:04,610 --> 00:01:08,540
talk about here today which is like

00:01:06,650 --> 00:01:10,490
there is a fundamental difference about

00:01:08,540 --> 00:01:13,310
rust and rust off because we don't have

00:01:10,490 --> 00:01:15,619
the same degree of like top-down miss

00:01:13,310 --> 00:01:17,360
that a lot of other like projects and

00:01:15,619 --> 00:01:19,310
like companies have even though we're

00:01:17,360 --> 00:01:21,500
giving the core team keynote a lot of

00:01:19,310 --> 00:01:23,390
this is kind of about like your role in

00:01:21,500 --> 00:01:24,710
leadership not like our roles as to

00:01:23,390 --> 00:01:27,560
what's going on so this is like funny

00:01:24,710 --> 00:01:29,270
but I think also very insightful so for

00:01:27,560 --> 00:01:33,079
some backgrounds a little bit about the

00:01:29,270 --> 00:01:34,909
both of us I'm Steve and before rust I

00:01:33,079 --> 00:01:36,320
did Ruby and Ruby on Rails stuff a long

00:01:34,909 --> 00:01:39,259
time ago and that was really great I

00:01:36,320 --> 00:01:41,929
started writing rust in 2012 so I'm one

00:01:39,259 --> 00:01:45,289
of the older folks around here I joined

00:01:41,929 --> 00:01:46,789
the core team in 2014 and I'm the

00:01:45,289 --> 00:01:50,090
co-author of the rust programming

00:01:46,789 --> 00:01:52,009
language so that's pretty cool it took

00:01:50,090 --> 00:01:53,359
me a very long time and Carol and I

00:01:52,009 --> 00:01:56,119
worked really hard on it but I'm super

00:01:53,359 --> 00:01:57,530
super proud the most thing you need to

00:01:56,119 --> 00:02:00,469
know about me is I tweet far too much

00:01:57,530 --> 00:02:02,119
and so not only did too much of my

00:02:00,469 --> 00:02:03,799
personal account but I'm also rustling

00:02:02,119 --> 00:02:06,109
on Twitter but like don't tell anyone

00:02:03,799 --> 00:02:07,880
that other people on the team have

00:02:06,109 --> 00:02:12,160
access to and tweet sometimes but most

00:02:07,880 --> 00:02:14,630
of the time like that that's me so yeah

00:02:12,160 --> 00:02:16,100
yes hi I'm Lauren this is actually my

00:02:14,630 --> 00:02:18,950
first time to the yes and this is also

00:02:16,100 --> 00:02:21,560
my first time running giving a keynote

00:02:18,950 --> 00:02:24,080
and that's quite funny because I've

00:02:21,560 --> 00:02:26,569
replaced tweeting by running events I

00:02:24,080 --> 00:02:28,280
run meetups like the rust meetup that

00:02:26,569 --> 00:02:30,349
founded in Berlin alone has over 100

00:02:28,280 --> 00:02:34,219
events we're doing that together as a

00:02:30,349 --> 00:02:35,900
team obviously I'm my partner rust was

00:02:34,219 --> 00:02:38,930
or into the last project was getting

00:02:35,900 --> 00:02:42,379
becoming a community member in 2015 on

00:02:38,930 --> 00:02:45,379
the invitation of Steve and now being an

00:02:42,379 --> 00:02:48,230
observer to core which is like the path

00:02:45,379 --> 00:02:51,290
to joining core since this year and I

00:02:48,230 --> 00:02:53,030
spent the time training rust and forming

00:02:51,290 --> 00:02:55,340
a company around it and the fun thing

00:02:53,030 --> 00:02:58,310
was giving my first keynote on stage for

00:02:55,340 --> 00:03:00,139
Steve is Steve's first keynote was on

00:02:58,310 --> 00:03:03,079
Euro Camp 2012 which was the first

00:03:00,139 --> 00:03:07,669
conference Iran so kind of there's a

00:03:03,079 --> 00:03:12,260
long history yes so let's get started

00:03:07,669 --> 00:03:15,590
with the interesting stuff yeah so first

00:03:12,260 --> 00:03:17,389
thing we wanted to do is recap what's

00:03:15,590 --> 00:03:19,699
like gone on this year there's been a

00:03:17,389 --> 00:03:22,280
lot of stuff happening in rust world and

00:03:19,699 --> 00:03:23,750
it's really easy when you like pay

00:03:22,280 --> 00:03:25,819
attention to every single release that

00:03:23,750 --> 00:03:27,949
happens to not like take a step back and

00:03:25,819 --> 00:03:31,579
look at just like how much stuff we

00:03:27,949 --> 00:03:33,949
actually like accomplished and so yeah

00:03:31,579 --> 00:03:42,280
there's some some achievements yeah

00:03:33,949 --> 00:03:45,139
Microsoft is sponsoring so yeah yeah so

00:03:42,280 --> 00:03:46,310
first of all the developer survey in

00:03:45,139 --> 00:03:49,370
Stack Overflow

00:03:46,310 --> 00:03:51,949
we've won for the third time in a row as

00:03:49,370 --> 00:03:57,790
the language that people want I want to

00:03:51,949 --> 00:04:00,560
make and yeah so one interesting thing

00:03:57,790 --> 00:04:02,509
specifically what this is is the most

00:04:00,560 --> 00:04:04,040
loved programming language and what that

00:04:02,509 --> 00:04:05,689
means is people that are using it today

00:04:04,040 --> 00:04:07,250
that want to keep using it in the future

00:04:05,689 --> 00:04:08,930
and so when you're a young small

00:04:07,250 --> 00:04:10,729
language that's really easy because the

00:04:08,930 --> 00:04:12,799
only people that use it are the people

00:04:10,729 --> 00:04:14,090
that love it so the measure of success

00:04:12,799 --> 00:04:15,680
for a programming language is really

00:04:14,090 --> 00:04:18,469
when people who don't love it are forced

00:04:15,680 --> 00:04:19,820
to use it at their jobs right so people

00:04:18,469 --> 00:04:21,199
people would always say like oh yeah

00:04:19,820 --> 00:04:22,849
rust won this a couple years in a row

00:04:21,199 --> 00:04:23,990
but that's because like you know no one

00:04:22,849 --> 00:04:26,389
uses it so it's fine

00:04:23,990 --> 00:04:27,889
but this year we actually got more love

00:04:26,389 --> 00:04:30,650
like that number increased as the

00:04:27,889 --> 00:04:32,690
community grew so you know surveys are

00:04:30,650 --> 00:04:34,310
like kind of silly or whatever but like

00:04:32,690 --> 00:04:36,230
it looks nice whatever I'll put on a

00:04:34,310 --> 00:04:39,770
slide anyway

00:04:36,230 --> 00:04:42,900
then if services silly competitions

00:04:39,770 --> 00:04:43,910
there is the yearly I CFP international

00:04:42,900 --> 00:04:47,090
conference for functional programming

00:04:43,910 --> 00:04:50,310
contest where everyone can enter and

00:04:47,090 --> 00:04:53,640
it's a reasonably hard contest to enter

00:04:50,310 --> 00:04:56,820
and there's always one winner every year

00:04:53,640 --> 00:04:59,550
and they call the language that wins the

00:04:56,820 --> 00:05:02,270
language of choice for discriminating

00:04:59,550 --> 00:05:04,910
hackers and we've won that this year and

00:05:02,270 --> 00:05:08,390
the year before and last year both yeah

00:05:04,910 --> 00:05:08,390
so that's pretty cool

00:05:10,190 --> 00:05:16,770
conferences my lifeblood so last year we

00:05:14,400 --> 00:05:19,460
had three conference brands there was

00:05:16,770 --> 00:05:23,100
Rosco obviously this was spelled rust

00:05:19,460 --> 00:05:25,080
which is the tiny conference in the Rust

00:05:23,100 --> 00:05:27,660
Belt which I heard is awesome that I was

00:05:25,080 --> 00:05:30,480
not able to visit sadly and in Europe

00:05:27,660 --> 00:05:33,810
we've got rust fest but since last year

00:05:30,480 --> 00:05:38,270
we actually gained seven new conferences

00:05:33,810 --> 00:05:43,680
rust rush one in Asia Colorado gold rust

00:05:38,270 --> 00:05:45,840
Great Pond rust low Tom in Montevideo

00:05:43,680 --> 00:05:46,610
also great conference the organizers

00:05:45,840 --> 00:05:49,020
around here

00:05:46,610 --> 00:05:51,510
Russ Tokyo is coming up there was

00:05:49,020 --> 00:05:53,280
oxidize conf conf or a conference

00:05:51,510 --> 00:05:55,710
focused on just embedded development of

00:05:53,280 --> 00:05:58,410
rust and another one in Europe Ross lab

00:05:55,710 --> 00:06:00,780
Italy so that's a total for we went from

00:05:58,410 --> 00:06:02,280
three conferences to ten and those are

00:06:00,780 --> 00:06:05,550
all conferences that will probably

00:06:02,280 --> 00:06:06,870
repeat so actually I love conference

00:06:05,550 --> 00:06:08,030
organisers can you all give them a huge

00:06:06,870 --> 00:06:15,810
applause

00:06:08,030 --> 00:06:18,300
[Applause]

00:06:15,810 --> 00:06:20,340
up until this year I had physically

00:06:18,300 --> 00:06:22,260
attended every single rust conference

00:06:20,340 --> 00:06:23,850
that had happens and this year was the

00:06:22,260 --> 00:06:26,280
year that broke me and I finally could

00:06:23,850 --> 00:06:28,320
not go to actually all of them so that's

00:06:26,280 --> 00:06:30,270
a measure of success as well I take it

00:06:28,320 --> 00:06:31,890
all so tiny secret behind of all of

00:06:30,270 --> 00:06:36,680
those most of them are run by old

00:06:31,890 --> 00:06:40,710
rubyists yeah it's true all right so

00:06:36,680 --> 00:06:42,840
yeah and Berlin we have rosbridge the

00:06:40,710 --> 00:06:44,730
events that run around at the

00:06:42,840 --> 00:06:46,980
conferences that are trying to get more

00:06:44,730 --> 00:06:49,620
organized people into rust and the

00:06:46,980 --> 00:06:51,480
Berlin chapter of the rest community has

00:06:49,620 --> 00:06:53,460
actually started its own local West

00:06:51,480 --> 00:06:55,740
 Kaptur to continuously run those

00:06:53,460 --> 00:06:57,780
events in the city and they have just

00:06:55,740 --> 00:06:59,340
formed two days ago so would also be

00:06:57,780 --> 00:07:10,320
great to give a huge round of applause

00:06:59,340 --> 00:07:12,960
yeah brand-new more celebration

00:07:10,320 --> 00:07:15,840
there's the weekly newsletter this week

00:07:12,960 --> 00:07:19,110
in rust and they have probably picked

00:07:15,840 --> 00:07:22,229
this week specifically six years ago to

00:07:19,110 --> 00:07:24,100
release number 300 this choose that I'll

00:07:22,229 --> 00:07:28,259
see you around applause to them

00:07:24,100 --> 00:07:28,259
[Applause]

00:07:28,570 --> 00:07:35,230
it's a huge effort and it's amazing how

00:07:32,200 --> 00:07:39,400
well they manage to really release that

00:07:35,230 --> 00:07:41,680
every week and make sure it runs even

00:07:39,400 --> 00:07:44,860
when we had even when the language was

00:07:41,680 --> 00:07:46,870
very very young and volatile they've

00:07:44,860 --> 00:07:48,670
been with us for yeah this is basically

00:07:46,870 --> 00:07:49,960
your one-stop shop to learn everything

00:07:48,670 --> 00:07:51,400
was going on in the rest world and

00:07:49,960 --> 00:07:54,310
there's no comments so people aren't

00:07:51,400 --> 00:07:55,660
arguing with each other any webpage

00:07:54,310 --> 00:08:00,130
without comments is better than a

00:07:55,660 --> 00:08:01,540
webpage with comments so another huge

00:08:00,130 --> 00:08:04,240
thing that happened this year that is

00:08:01,540 --> 00:08:05,980
like in the past like we're when we talk

00:08:04,240 --> 00:08:08,530
about this year we mean like from August

00:08:05,980 --> 00:08:11,410
to August not like you know 2019 or

00:08:08,530 --> 00:08:13,930
whatever it to be clear Rus 2018 and

00:08:11,410 --> 00:08:15,970
finally shipped in December which is a

00:08:13,930 --> 00:08:18,400
super huge effort amongst the entire

00:08:15,970 --> 00:08:20,830
project from a lot of people and it took

00:08:18,400 --> 00:08:22,960
a lot of work and so we're really happy

00:08:20,830 --> 00:08:25,690
and excited that that's the thing that

00:08:22,960 --> 00:08:27,160
was successful you know up until the

00:08:25,690 --> 00:08:28,480
last second you're always like oh is

00:08:27,160 --> 00:08:30,160
this actually happening and then you

00:08:28,480 --> 00:08:30,940
know it finally actually happens so

00:08:30,160 --> 00:08:39,849
that's really cool

00:08:30,940 --> 00:08:41,620
so we did it and to talk about that like

00:08:39,849 --> 00:08:46,270
it's one thing but actually it was like

00:08:41,620 --> 00:08:47,620
a lot of stuff so as a small example of

00:08:46,270 --> 00:08:48,610
the number of things that we ended up

00:08:47,620 --> 00:08:50,790
actually shipping

00:08:48,610 --> 00:08:53,890
there's the brand new module system

00:08:50,790 --> 00:08:56,020
infiltrate in all the places the dine

00:08:53,890 --> 00:08:57,970
keyword to make dynamic dispatch a

00:08:56,020 --> 00:08:59,770
little more obvious to people non

00:08:57,970 --> 00:09:03,220
lexical lifetimes which basically means

00:08:59,770 --> 00:09:04,660
rust complains at me less default match

00:09:03,220 --> 00:09:06,490
bindings this is one of my favorite

00:09:04,660 --> 00:09:09,370
features never write the ref keyword

00:09:06,490 --> 00:09:11,500
ever again more lifetime elision and

00:09:09,370 --> 00:09:13,240
inference actually I had to remove the

00:09:11,500 --> 00:09:15,430
advanced lifetimes chapter of the book

00:09:13,240 --> 00:09:16,900
because all my examples no longer needed

00:09:15,430 --> 00:09:18,490
the syntax that it showed off the

00:09:16,900 --> 00:09:18,700
compiler just infers it now so that's

00:09:18,490 --> 00:09:21,989
cool

00:09:18,700 --> 00:09:21,989
[Applause]

00:09:22,190 --> 00:09:25,589
it doesn't mean I get bugs filed now

00:09:24,480 --> 00:09:27,209
where people like wait where did the

00:09:25,589 --> 00:09:28,470
syntax go and like you don't need it

00:09:27,209 --> 00:09:31,740
anymore

00:09:28,470 --> 00:09:34,310
the the inclusive range operator dot

00:09:31,740 --> 00:09:35,970
equals which took a really long time to

00:09:34,310 --> 00:09:37,860
surprisingly you would think that

00:09:35,970 --> 00:09:40,589
inclusive range is not complicated but

00:09:37,860 --> 00:09:42,750
programming language design is hard sim

00:09:40,589 --> 00:09:44,790
D happens keeping up on our speed stuff

00:09:42,750 --> 00:09:47,190
we got the beginnings of incremental

00:09:44,790 --> 00:09:48,630
compilation and like global allocators

00:09:47,190 --> 00:09:51,779
and stuff too and this is obviously an

00:09:48,630 --> 00:09:53,190
extremely short list but like you know

00:09:51,779 --> 00:09:56,209
there's a lot of stuff that's happened

00:09:53,190 --> 00:09:59,070
recently and it's been it's been great

00:09:56,209 --> 00:10:01,260
but more specifically what you all want

00:09:59,070 --> 00:10:09,570
to hear about I think is that I bet you

00:10:01,260 --> 00:10:11,399
can't wait for async/await originally

00:10:09,570 --> 00:10:13,589
sort of planned to be part of the 2018

00:10:11,399 --> 00:10:15,089
edition shipping but you know here we

00:10:13,589 --> 00:10:17,070
are a little while later and it's taken

00:10:15,089 --> 00:10:21,120
a while but that's because it's so good

00:10:17,070 --> 00:10:22,620
like good things just take time so more

00:10:21,120 --> 00:10:26,550
specifically I don't know if you saw

00:10:22,620 --> 00:10:28,589
pull requests 63 209 happened recently

00:10:26,550 --> 00:10:31,079
which also is an amazing like measure of

00:10:28,589 --> 00:10:33,060
how you know active the Russ project is

00:10:31,079 --> 00:10:35,130
like we've had five digit numbers of

00:10:33,060 --> 00:10:38,399
pull requests but uh this actually

00:10:35,130 --> 00:10:41,160
merged a couple days ago so this is now

00:10:38,399 --> 00:10:43,290
actually going to be stable sometime in

00:10:41,160 --> 00:10:45,630
the future originally we were hoping to

00:10:43,290 --> 00:10:47,579
be like it stabilized yesterday we're on

00:10:45,630 --> 00:10:49,350
stage woohoo but now it's like okay

00:10:47,579 --> 00:10:52,529
you'll get it in like eight weeks or

00:10:49,350 --> 00:10:54,389
whatever so that's fine it is enriched

00:10:52,529 --> 00:10:55,829
in Wednesday so it was merged before the

00:10:54,389 --> 00:10:59,069
keynote yeah yeah that's that's what

00:10:55,829 --> 00:11:00,329
actually counts and it's also important

00:10:59,069 --> 00:11:02,670
I think there's been so much hype around

00:11:00,329 --> 00:11:04,350
async/await to remember to there's even

00:11:02,670 --> 00:11:07,230
more good stuff coming this is like the

00:11:04,350 --> 00:11:08,579
MVP version of the feature so the lang

00:11:07,230 --> 00:11:10,800
team is been working super hard on this

00:11:08,579 --> 00:11:11,880
for a really long time and they

00:11:10,800 --> 00:11:14,180
definitely I think deserve a round of

00:11:11,880 --> 00:11:14,180
applause

00:11:15,150 --> 00:11:25,540
it's I I think everyone knows how long a

00:11:23,170 --> 00:11:27,580
cinco eight took but I don't think that

00:11:25,540 --> 00:11:29,650
most people actually know how long it

00:11:27,580 --> 00:11:32,890
took so if you'll bear with me I like to

00:11:29,650 --> 00:11:36,940
play amateur sort of rust historian and

00:11:32,890 --> 00:11:38,470
so this sort of started like in most

00:11:36,940 --> 00:11:41,620
people would cite this is Erin Turin's

00:11:38,470 --> 00:11:43,090
blog zero-cost futures in rust and this

00:11:41,620 --> 00:11:46,360
kind of like announced the futures

00:11:43,090 --> 00:11:49,690
library and if you notice that was in

00:11:46,360 --> 00:11:51,580
August of 2016 so like it's been like

00:11:49,690 --> 00:11:53,710
three years and what's really

00:11:51,580 --> 00:11:55,660
interesting too is at the end there

00:11:53,710 --> 00:11:56,830
mention like async/await is like you

00:11:55,660 --> 00:11:58,330
know oh we're doing this futures thing

00:11:56,830 --> 00:11:58,930
but like this is useful because of

00:11:58,330 --> 00:12:00,840
async/await

00:11:58,930 --> 00:12:04,330
and so most people would be like wow

00:12:00,840 --> 00:12:07,350
it's taken since since 2016 to ship this

00:12:04,330 --> 00:12:11,080
and that's sort of true but did you know

00:12:07,350 --> 00:12:14,740
that a long time ago there were futures

00:12:11,080 --> 00:12:17,770
in a standard library in the sink

00:12:14,740 --> 00:12:19,690
package we had this this future struct

00:12:17,770 --> 00:12:22,510
this is a screenshot of Russ stock back

00:12:19,690 --> 00:12:24,280
in the zero point ten days but he goes

00:12:22,510 --> 00:12:27,700
even further back than that actually I

00:12:24,280 --> 00:12:29,620
did some digging and in 0.5 which

00:12:27,700 --> 00:12:31,450
incidentally is one of the first

00:12:29,620 --> 00:12:33,790
versions of Russ that I ever used this

00:12:31,450 --> 00:12:35,710
says July 3rd 2013 but it definitely

00:12:33,790 --> 00:12:37,390
released earlier than that actually

00:12:35,710 --> 00:12:39,780
who knows github metadata I think we

00:12:37,390 --> 00:12:42,280
made tagged too late or something but

00:12:39,780 --> 00:12:44,020
here's what rust code looked like back

00:12:42,280 --> 00:12:45,760
then this is sort of a little small

00:12:44,020 --> 00:12:46,870
maybe on this slide so you might want to

00:12:45,760 --> 00:12:49,120
check it out later but this is actually

00:12:46,870 --> 00:12:52,480
an example of the pull the stuff out of

00:12:49,120 --> 00:12:54,550
the future code the first thing I want

00:12:52,480 --> 00:12:58,990
you to notice is this the return type is

00:12:54,550 --> 00:13:00,880
ampersand self /a a long time ago that's

00:12:58,990 --> 00:13:02,860
the one of the syntax is that we tried

00:13:00,880 --> 00:13:05,050
to use for lifetime so if you hate the

00:13:02,860 --> 00:13:08,230
syntax for lifetimes think of this as

00:13:05,050 --> 00:13:10,030
better or worse maybe you like it I

00:13:08,230 --> 00:13:11,980
don't know there's also some other

00:13:10,030 --> 00:13:13,590
interesting things you'll notice in the

00:13:11,980 --> 00:13:16,960
middle of this match block it says fail

00:13:13,590 --> 00:13:18,820
tilde quote recursive fortunate forcing

00:13:16,960 --> 00:13:20,560
a future this is two features that used

00:13:18,820 --> 00:13:23,440
to exist the first is that panic used to

00:13:20,560 --> 00:13:24,850
be called fail way back when

00:13:23,440 --> 00:13:26,320
and this is near and dear to me because

00:13:24,850 --> 00:13:28,570
I actually submitted the pull request to

00:13:26,320 --> 00:13:30,760
rename it and then I wrote a script on

00:13:28,570 --> 00:13:32,290
github to fork every Russ project and

00:13:30,760 --> 00:13:34,180
send them a pull request saying hey

00:13:32,290 --> 00:13:37,210
sorry I broke your code but here's a PR

00:13:34,180 --> 00:13:39,160
to update it to panic instead so that

00:13:37,210 --> 00:13:41,020
was cool and then the squiggly like this

00:13:39,160 --> 00:13:44,050
is basically the dot to string of the

00:13:41,020 --> 00:13:45,910
day so there was syntax for own types

00:13:44,050 --> 00:13:46,360
and it used the squiggle so that's kind

00:13:45,910 --> 00:13:48,640
of cool

00:13:46,360 --> 00:13:51,040
lastly right above this bottom match

00:13:48,640 --> 00:13:54,850
block self dot state and then like

00:13:51,040 --> 00:13:58,390
bracket - bracket state mem swap had

00:13:54,850 --> 00:14:01,390
syntax in the language at the time which

00:13:58,390 --> 00:14:02,950
is pretty cool so it turns out that like

00:14:01,390 --> 00:14:05,710
this has been in the making for like a

00:14:02,950 --> 00:14:07,720
very very very long time not just like

00:14:05,710 --> 00:14:10,120
the most recent efforts which obviously

00:14:07,720 --> 00:14:11,710
are also Herculean but like it just it

00:14:10,120 --> 00:14:14,200
takes a really long time to make great

00:14:11,710 --> 00:14:16,360
features and async/await is like super

00:14:14,200 --> 00:14:17,680
fantastic and rust especially because we

00:14:16,360 --> 00:14:19,390
have one of the most performance and

00:14:17,680 --> 00:14:22,420
like interesting implementations of the

00:14:19,390 --> 00:14:24,340
idea that is existed this is sort of a

00:14:22,420 --> 00:14:26,110
field report recently from the Libre

00:14:24,340 --> 00:14:30,610
folks so Facebook's cryptocurrency

00:14:26,110 --> 00:14:33,640
shenanigans if you if you look at their

00:14:30,610 --> 00:14:35,200
like forum basically this is a post they

00:14:33,640 --> 00:14:36,850
made which is really fantastic they've

00:14:35,200 --> 00:14:38,860
been using async await since I think

00:14:36,850 --> 00:14:40,270
roughly the start of the year and I'm

00:14:38,860 --> 00:14:41,470
not gonna read all the shenanigans to

00:14:40,270 --> 00:14:43,960
you I just want to mostly put that up

00:14:41,470 --> 00:14:45,160
there but the reason that they set a

00:14:43,960 --> 00:14:46,780
single weight is awesome and if you

00:14:45,160 --> 00:14:48,010
haven't like heard of async await or if

00:14:46,780 --> 00:14:49,780
you haven't been doing async stuff and

00:14:48,010 --> 00:14:50,830
rust I want to sort of briefly explain

00:14:49,780 --> 00:14:52,840
like a lot of people don't understand

00:14:50,830 --> 00:14:54,610
why it's so deeply desired they're like

00:14:52,840 --> 00:14:56,770
we already have futures and async like

00:14:54,610 --> 00:14:58,180
what's the big deal and usually that's

00:14:56,770 --> 00:15:00,250
said by people who have not written a

00:14:58,180 --> 00:15:02,290
ton of async code because like futures

00:15:00,250 --> 00:15:04,750
are great but because the baro checker

00:15:02,290 --> 00:15:06,610
does not understand the combinators of

00:15:04,750 --> 00:15:08,230
futures you end up doing stuff like this

00:15:06,610 --> 00:15:10,000
so here's an example of updating a hash

00:15:08,230 --> 00:15:13,900
map where you have to wrap it in an arc

00:15:10,000 --> 00:15:15,580
in a mutex and then for each you know

00:15:13,900 --> 00:15:18,220
future that comes down the stream

00:15:15,580 --> 00:15:20,320
you have to like undo the lock and deal

00:15:18,220 --> 00:15:21,970
with the ref counts and then you do it

00:15:20,320 --> 00:15:23,110
again and you have to unlock it here and

00:15:21,970 --> 00:15:24,970
so there's all this overhead that

00:15:23,110 --> 00:15:26,920
doesn't actually need to be there and so

00:15:24,970 --> 00:15:29,980
what this code turned into in their code

00:15:26,920 --> 00:15:31,810
base looks much more like this so you

00:15:29,980 --> 00:15:33,880
have an async block and then inside of

00:15:31,810 --> 00:15:35,800
it you're able to call stream next Auto

00:15:33,880 --> 00:15:37,209
and then just write your regular code so

00:15:35,800 --> 00:15:38,769
there's no arc reference counting

00:15:37,209 --> 00:15:40,600
there's no more mutex back-and-forth you

00:15:38,769 --> 00:15:42,670
just write regular sort of rust code

00:15:40,600 --> 00:15:44,350
with a couple a sinks and a weight

00:15:42,670 --> 00:15:47,769
sprinkled in there and you get you know

00:15:44,350 --> 00:15:49,680
super super powerful fast code so this

00:15:47,769 --> 00:15:52,120
has been like a really really awesome

00:15:49,680 --> 00:15:55,690
thing and people are definitely super

00:15:52,120 --> 00:15:57,069
excited about it and as an example of

00:15:55,690 --> 00:15:58,569
like I mentioned this briefly a minute

00:15:57,069 --> 00:15:59,949
ago but like one of the things that I

00:15:58,569 --> 00:16:01,899
think is really interesting and why

00:15:59,949 --> 00:16:04,630
async/await is huge for rust is because

00:16:01,899 --> 00:16:06,040
we are in a super super fast at it so

00:16:04,630 --> 00:16:07,540
all benchmarks are done but this

00:16:06,040 --> 00:16:10,720
benchmarks looks good and so I'm putting

00:16:07,540 --> 00:16:13,389
it on a slide anyway take this with a

00:16:10,720 --> 00:16:14,680
giant grain of salt because C++ is

00:16:13,389 --> 00:16:16,839
actually coming for us but on this

00:16:14,680 --> 00:16:19,810
benchmark we still are the fastest by

00:16:16,839 --> 00:16:22,480
far you notice a stick score and ax xpg

00:16:19,810 --> 00:16:24,279
both are the gold standards in this

00:16:22,480 --> 00:16:26,769
particular test and the next best

00:16:24,279 --> 00:16:28,839
framework is at 65% so it's like almost

00:16:26,769 --> 00:16:31,180
twice as fast as the next nearest one on

00:16:28,839 --> 00:16:32,740
this this particular benchmark so the

00:16:31,180 --> 00:16:35,019
point is is that like it's super high

00:16:32,740 --> 00:16:37,779
performant and really easy to use and

00:16:35,019 --> 00:16:42,279
I'm definitely super super excited about

00:16:37,779 --> 00:16:44,589
it know C++ is coming for us is a nice

00:16:42,279 --> 00:16:46,240
thing to say after like three years of

00:16:44,589 --> 00:16:51,630
trying to be and the level playfully a

00:16:46,240 --> 00:16:57,889
playing field with C and C++ we hear ya

00:16:51,630 --> 00:16:59,480
[Applause]

00:16:57,889 --> 00:17:01,100
one last funny part about that before

00:16:59,480 --> 00:17:02,449
you know you get your next thing I

00:17:01,100 --> 00:17:04,069
forgot I want to make a slide about this

00:17:02,449 --> 00:17:05,899
but I didn't do it you always think

00:17:04,069 --> 00:17:08,329
about things last second there's

00:17:05,899 --> 00:17:10,610
recently been a discussion Russ 20:18

00:17:08,329 --> 00:17:12,649
has been successful enough and like we

00:17:10,610 --> 00:17:14,689
modeled it after the way that Java and

00:17:12,649 --> 00:17:16,250
C++ do their compilation stuff but

00:17:14,689 --> 00:17:19,100
they're now people trying to seriously

00:17:16,250 --> 00:17:20,899
proposed that C++ adopts additions as a

00:17:19,100 --> 00:17:22,789
concept because they think it's been so

00:17:20,899 --> 00:17:24,230
successful for us and they want a way to

00:17:22,789 --> 00:17:26,149
advance their language forward without

00:17:24,230 --> 00:17:27,439
breaking old people's code so I also

00:17:26,149 --> 00:17:29,210
just think that like that's a great

00:17:27,439 --> 00:17:30,860
impact that we've had is that like

00:17:29,210 --> 00:17:32,840
introducing interesting ideas to other

00:17:30,860 --> 00:17:34,850
languages and their ability to like do

00:17:32,840 --> 00:17:39,380
things so that's also been been super

00:17:34,850 --> 00:17:41,029
good sorry anyway slide it's also quick

00:17:39,380 --> 00:17:43,639
quite fun that when we constructed the

00:17:41,029 --> 00:17:45,260
stock because Edition 2018 was a huge

00:17:43,639 --> 00:17:47,659
amount of labour and everyone came away

00:17:45,260 --> 00:17:49,909
exhausted and so when we started

00:17:47,659 --> 00:17:52,850
constructing that keynote it was a much

00:17:49,909 --> 00:17:56,510
more thoughtful and like focused on the

00:17:52,850 --> 00:17:58,309
things that went wrong thing and when we

00:17:56,510 --> 00:18:00,980
actually started or like hey let's have

00:17:58,309 --> 00:18:03,679
a look at what we all achieved there was

00:18:00,980 --> 00:18:06,110
just a bigger pile of things that we

00:18:03,679 --> 00:18:09,019
wanted to talk about giving it a lot

00:18:06,110 --> 00:18:12,139
more positive spin it's amazing for what

00:18:09,019 --> 00:18:14,750
the teams have done so also one thing

00:18:12,139 --> 00:18:16,279
that I forgot on the slides the embedded

00:18:14,750 --> 00:18:18,980
working group has made embedded

00:18:16,279 --> 00:18:21,200
development on Ross stable last year

00:18:18,980 --> 00:18:24,169
August and since then it has been

00:18:21,200 --> 00:18:26,330
picking up usually so we're now also in

00:18:24,169 --> 00:18:29,510
the embedded space as a newcomer but

00:18:26,330 --> 00:18:32,380
yeah yeah huge round of applause to them

00:18:29,510 --> 00:18:32,380
yeah

00:18:32,570 --> 00:18:39,690
[Applause]

00:18:35,840 --> 00:18:42,929
hey so let's talk about teams I just did

00:18:39,690 --> 00:18:44,370
account this morning there's an we have

00:18:42,929 --> 00:18:47,100
automated everything there's now a

00:18:44,370 --> 00:18:48,960
repository rustling slash team where it

00:18:47,100 --> 00:18:51,320
can have a look at who's in which group

00:18:48,960 --> 00:18:53,940
who has access to what and who's

00:18:51,320 --> 00:18:56,760
officially in one of the many teams that

00:18:53,940 --> 00:18:58,289
we have and Russ now has over 200 team

00:18:56,760 --> 00:19:00,299
members making us one of the largest

00:18:58,289 --> 00:19:02,870
open source projects just focused on one

00:19:00,299 --> 00:19:05,039
product operating systems or

00:19:02,870 --> 00:19:06,690
distributions are obviously larger where

00:19:05,039 --> 00:19:09,539
you have where they have this amount of

00:19:06,690 --> 00:19:11,820
maintainers just for small packages and

00:19:09,539 --> 00:19:13,440
this is missing some people that we want

00:19:11,820 --> 00:19:15,150
to onboard over the next weeks like for

00:19:13,440 --> 00:19:17,850
example whole translation team the rest

00:19:15,150 --> 00:19:19,830
website now has six translations and

00:19:17,850 --> 00:19:22,470
more coming down the stream and there's

00:19:19,830 --> 00:19:23,820
a huge amount of people working on them

00:19:22,470 --> 00:19:25,679
and they're probably going to start

00:19:23,820 --> 00:19:28,770
working on the books and whatever later

00:19:25,679 --> 00:19:30,630
so that's a huge thing and the other

00:19:28,770 --> 00:19:32,549
kind that I made is how many people have

00:19:30,630 --> 00:19:35,039
actually contributed to one repository

00:19:32,549 --> 00:19:36,929
on github.com slash lost lang this is

00:19:35,039 --> 00:19:39,000
including our Fork of the yellow VM and

00:19:36,929 --> 00:19:42,440
Jade Malik just for make sure I did

00:19:39,000 --> 00:19:50,010
who else who's got a patch in somewhere

00:19:42,440 --> 00:19:51,750
yeah we can for those people there's

00:19:50,010 --> 00:19:54,390
fifty four hundred of you in the world

00:19:51,750 --> 00:19:57,870
somewhere that's awesome that's great

00:19:54,390 --> 00:19:59,730
and we won also they're one of the

00:19:57,870 --> 00:20:03,179
largest projects that we have around and

00:19:59,730 --> 00:20:07,260
that's a huge amount management and but

00:20:03,179 --> 00:20:09,659
yet being part of the community team the

00:20:07,260 --> 00:20:12,570
more and more I get the feeling that

00:20:09,659 --> 00:20:14,400
some people do contribute but then never

00:20:12,570 --> 00:20:16,470
counted somewhere like they're running

00:20:14,400 --> 00:20:19,260
an event they're running a meet-up

00:20:16,470 --> 00:20:22,260
they're running something they're

00:20:19,260 --> 00:20:25,070
teaching or whatever and it becomes more

00:20:22,260 --> 00:20:28,650
and more of a problem how do we give

00:20:25,070 --> 00:20:32,700
appropriate credit there or what do we

00:20:28,650 --> 00:20:35,520
even think is contributing to the russ

00:20:32,700 --> 00:20:36,630
project and you can put up a wide scope

00:20:35,520 --> 00:20:38,340
there um

00:20:36,630 --> 00:20:40,140
because you've got that you did that

00:20:38,340 --> 00:20:41,909
fifty four hundred by downloading the

00:20:40,140 --> 00:20:43,230
git repos and looking and get logs but

00:20:41,909 --> 00:20:44,390
there are so many people that have done

00:20:43,230 --> 00:20:46,520
so much work that is

00:20:44,390 --> 00:20:49,190
so important to rust and deserve to be

00:20:46,520 --> 00:20:50,690
thanked and recognized for it and it's

00:20:49,190 --> 00:20:52,370
really hard when like we're used to

00:20:50,690 --> 00:20:53,930
making computers do the job but we can't

00:20:52,370 --> 00:20:55,460
be like computer who has been all the

00:20:53,930 --> 00:20:56,750
organizing teams of all of the rust

00:20:55,460 --> 00:20:58,940
conferences right like that doesn't

00:20:56,750 --> 00:21:01,070
actually work and so this is a tough

00:20:58,940 --> 00:21:03,410
problem that we don't like tackle in a

00:21:01,070 --> 00:21:05,240
personal model actually if we're a

00:21:03,410 --> 00:21:07,280
language that wants to be adopt but the

00:21:05,240 --> 00:21:08,810
reason why I joined the rust project

00:21:07,280 --> 00:21:11,840
back ban is because it always had the

00:21:08,810 --> 00:21:14,510
air of we want to build something that

00:21:11,840 --> 00:21:16,760
people use so if you want to be a

00:21:14,510 --> 00:21:21,080
project that's in the hands of people

00:21:16,760 --> 00:21:23,630
just being at a company and we're an

00:21:21,080 --> 00:21:25,130
open source project and telling people

00:21:23,630 --> 00:21:29,210
this would be something interesting to

00:21:25,130 --> 00:21:31,790
adopt and trying to get a raise adoption

00:21:29,210 --> 00:21:33,920
of language is already contribution we

00:21:31,790 --> 00:21:36,080
can't lock that anywhere we never find a

00:21:33,920 --> 00:21:38,480
trace of that so how do we make sure

00:21:36,080 --> 00:21:39,800
that people are aware that this is

00:21:38,480 --> 00:21:42,140
already something that we consider

00:21:39,800 --> 00:21:43,220
contribution probably even buying a

00:21:42,140 --> 00:21:46,100
ticket to this conference I would

00:21:43,220 --> 00:21:51,370
consider contribution it's a pretty wide

00:21:46,100 --> 00:21:53,930
scope and a actually a problem that is

00:21:51,370 --> 00:21:55,670
that comes up in practice so I'm not

00:21:53,930 --> 00:21:57,800
just talking about it like something

00:21:55,670 --> 00:21:59,800
that goes on in my mind but something

00:21:57,800 --> 00:22:02,570
that we as a community team experience

00:21:59,800 --> 00:22:04,430
that some people just feel like hey I

00:22:02,570 --> 00:22:07,280
actually invest the time into this but I

00:22:04,430 --> 00:22:09,170
don't feel like I get like at least the

00:22:07,280 --> 00:22:11,270
recognition back and a lot of the

00:22:09,170 --> 00:22:14,480
recognition happens on the hallway here

00:22:11,270 --> 00:22:16,460
so if you meet someone consider like

00:22:14,480 --> 00:22:18,470
talking to them about what they were

00:22:16,460 --> 00:22:20,600
involved in and actually just saying

00:22:18,470 --> 00:22:23,120
thank you that's a pretty big power move

00:22:20,600 --> 00:22:24,710
to say I'm giving people the feeling

00:22:23,120 --> 00:22:27,200
that the work they have invested into

00:22:24,710 --> 00:22:33,170
the project they're there around is is

00:22:27,200 --> 00:22:35,720
really really important because

00:22:33,170 --> 00:22:39,350
like I recently last week read a nice

00:22:35,720 --> 00:22:41,510
comment about why is Ross popular why do

00:22:39,350 --> 00:22:43,370
people take every announcement that the

00:22:41,510 --> 00:22:45,950
rest project doesn't just put it out

00:22:43,370 --> 00:22:48,500
everywhere and someone responded to that

00:22:45,950 --> 00:22:50,540
question with its built in large part by

00:22:48,500 --> 00:22:52,520
Mozilla which enjoys special love as an

00:22:50,540 --> 00:22:54,020
open source company and that's actually

00:22:52,520 --> 00:22:56,150
quite interesting people still perceive

00:22:54,020 --> 00:23:00,830
it at that but even when we had rosters

00:22:56,150 --> 00:23:03,410
Kiev we the statistic was already like

00:23:00,830 --> 00:23:05,930
75% of what's built on the worst project

00:23:03,410 --> 00:23:08,300
is built by non-muslims we are

00:23:05,930 --> 00:23:11,240
incredibly good at having non-modular

00:23:08,300 --> 00:23:13,940
contributions not to diminish the value

00:23:11,240 --> 00:23:15,500
that Mozilla have brought to it the

00:23:13,940 --> 00:23:17,870
second is Ross provides tangible bama

00:23:15,500 --> 00:23:20,000
benefits it solves practical problems

00:23:17,870 --> 00:23:22,070
but the third is the community is nice

00:23:20,000 --> 00:23:24,770
and talented so it's fun to see what

00:23:22,070 --> 00:23:26,960
they up to and that's all about you and

00:23:24,770 --> 00:23:29,870
not about us this is nothing that any

00:23:26,960 --> 00:23:33,050
people that are on the teams or in kora

00:23:29,870 --> 00:23:35,150
or whatever have in any way done it's

00:23:33,050 --> 00:23:36,920
the whole air around the community of

00:23:35,150 --> 00:23:38,660
being interested being interested in

00:23:36,920 --> 00:23:41,480
adoption being interested to try out new

00:23:38,660 --> 00:23:44,630
things building awesome libraries blog

00:23:41,480 --> 00:23:50,920
posts bad jokes like we all contribute

00:23:44,630 --> 00:23:50,920
in our own special ways more puns please

00:23:51,580 --> 00:23:56,060
but that also brings a lot of

00:23:53,720 --> 00:23:57,170
organizational challenges to the project

00:23:56,060 --> 00:24:00,110
and that's becoming more and more

00:23:57,170 --> 00:24:01,550
problematic and we need more people that

00:24:00,110 --> 00:24:04,040
do actually manage the project just to

00:24:01,550 --> 00:24:07,550
make sure that stays in shape and that

00:24:04,040 --> 00:24:08,840
is it stays running so we need people

00:24:07,550 --> 00:24:10,550
who are not building new stuff but

00:24:08,840 --> 00:24:13,250
making sure that stuff that exists

00:24:10,550 --> 00:24:14,810
remains in the state that it is that

00:24:13,250 --> 00:24:17,630
also means we need to train up new

00:24:14,810 --> 00:24:18,800
people on managing and that is one of

00:24:17,630 --> 00:24:21,650
the shifts that's happening this year

00:24:18,800 --> 00:24:23,240
new people are stepping up and one of

00:24:21,650 --> 00:24:24,680
the problems in there there and this is

00:24:23,240 --> 00:24:26,690
what the community it's important that

00:24:24,680 --> 00:24:29,230
the community stays kind about it those

00:24:26,690 --> 00:24:32,690
people will fail at their tasks in

00:24:29,230 --> 00:24:34,520
different degrees probably even hard and

00:24:32,690 --> 00:24:36,530
it must be possible that they are

00:24:34,520 --> 00:24:39,050
allowed to do that

00:24:36,530 --> 00:24:41,660
because otherwise you don't learn and

00:24:39,050 --> 00:24:44,900
the rest project has people in team

00:24:41,660 --> 00:24:46,910
management that are 23 year olds to

00:24:44,900 --> 00:24:48,710
somewhere that's an incredible chance

00:24:46,910 --> 00:24:51,260
this is actually how I got into Ruby

00:24:48,710 --> 00:24:52,940
Ellen truly at the University and the

00:24:51,260 --> 00:24:55,160
Ruby community was so kind to allow me

00:24:52,940 --> 00:24:58,520
to try out my stuff and just be bad at

00:24:55,160 --> 00:25:00,620
it which I couldn't do at the University

00:24:58,520 --> 00:25:02,810
and we as a community I have a chance to

00:25:00,620 --> 00:25:06,200
give other people the ability to join

00:25:02,810 --> 00:25:09,740
the Russ project and we have that

00:25:06,200 --> 00:25:11,360
experience for their own personal lives

00:25:09,740 --> 00:25:12,620
yeah and I think all the stuff ties in

00:25:11,360 --> 00:25:13,790
together I've been thinking about this a

00:25:12,620 --> 00:25:15,890
lot not just because we've had these

00:25:13,790 --> 00:25:18,230
challenges in rust but I actually became

00:25:15,890 --> 00:25:19,490
a product manager at my new job recently

00:25:18,230 --> 00:25:21,890
and so I've been reading about

00:25:19,490 --> 00:25:23,240
management stuff and a thing that I ever

00:25:21,890 --> 00:25:24,920
thought about before but a concept I

00:25:23,240 --> 00:25:26,930
came across when I was looking up like

00:25:24,920 --> 00:25:28,790
why do we call people staff engineers is

00:25:26,930 --> 00:25:30,590
in like traditional management there's

00:25:28,790 --> 00:25:33,050
this distinction between line employees

00:25:30,590 --> 00:25:34,550
and staff employees line employees are

00:25:33,050 --> 00:25:36,560
the people who like do the work that

00:25:34,550 --> 00:25:37,970
actually furthers the business and staff

00:25:36,560 --> 00:25:39,560
employees are the people that do the

00:25:37,970 --> 00:25:41,900
work that keeps the organization going

00:25:39,560 --> 00:25:44,570
and so open source has traditionally had

00:25:41,900 --> 00:25:46,270
a ton of like line folks you know like

00:25:44,570 --> 00:25:48,800
sending in patches is very much like

00:25:46,270 --> 00:25:51,350
furthering the goals of the language but

00:25:48,800 --> 00:25:54,020
as we like grow open-source projects

00:25:51,350 --> 00:25:55,670
into like larger organizations we also

00:25:54,020 --> 00:25:57,730
need help from people doing all this

00:25:55,670 --> 00:26:00,440
sort of like support work in some sense

00:25:57,730 --> 00:26:02,360
and like there's other like not not

00:26:00,440 --> 00:26:04,610
support in like a like helping users

00:26:02,360 --> 00:26:06,260
support but like supporting the goals of

00:26:04,610 --> 00:26:08,330
the organization in a way that's not

00:26:06,260 --> 00:26:10,220
sending in patches and like this is an

00:26:08,330 --> 00:26:12,410
area where we as a project are like a

00:26:10,220 --> 00:26:14,060
little deficient and are looking to sort

00:26:12,410 --> 00:26:15,650
of like improve I am terrible at

00:26:14,060 --> 00:26:16,700
scheduling and running meetings don't

00:26:15,650 --> 00:26:19,160
tell the people who hired me as a

00:26:16,700 --> 00:26:20,510
manager but that's like a skill that's

00:26:19,160 --> 00:26:22,250
like important and needed in the RUS

00:26:20,510 --> 00:26:24,230
project and so it's like a thing that I

00:26:22,250 --> 00:26:25,790
would like to work at because it's not

00:26:24,230 --> 00:26:30,410
it's something we need and I'm not good

00:26:25,790 --> 00:26:32,570
at so you know yeah okay goes further um

00:26:30,410 --> 00:26:33,890
we're growing so fast that we regularly

00:26:32,570 --> 00:26:36,080
need to set up new working groups

00:26:33,890 --> 00:26:38,120
constructors last year we actually had

00:26:36,080 --> 00:26:39,500
to put in a moratorium on setting up new

00:26:38,120 --> 00:26:41,600
working groups because we just couldn't

00:26:39,500 --> 00:26:44,840
handle the load before edition 2018 to

00:26:41,600 --> 00:26:47,480
get new people and on and we're slowly

00:26:44,840 --> 00:26:49,220
starting to ramp that up again but it's

00:26:47,480 --> 00:26:52,910
still the people who currently are

00:26:49,220 --> 00:26:55,090
forwarding the language have to get that

00:26:52,910 --> 00:26:59,259
as a second task and

00:26:55,090 --> 00:27:01,299
so we arranging our products of this

00:26:59,259 --> 00:27:03,309
that this becomes a constant task that

00:27:01,299 --> 00:27:06,039
we can help with is one of the

00:27:03,309 --> 00:27:08,259
challenges of this year also because

00:27:06,039 --> 00:27:11,230
we've grown so big as a community and

00:27:08,259 --> 00:27:13,299
also as a in usage um dealing with our

00:27:11,230 --> 00:27:15,249
legal framework has become an actual

00:27:13,299 --> 00:27:16,899
issue this is something that for reasons

00:27:15,249 --> 00:27:18,519
of this being legalities mostly is

00:27:16,899 --> 00:27:22,090
hidden but we need to talk to lawyers

00:27:18,519 --> 00:27:23,649
more and that's that's for example

00:27:22,090 --> 00:27:26,080
something where it becomes problematic

00:27:23,649 --> 00:27:28,809
when someone's is responsible for

00:27:26,080 --> 00:27:31,210
running crates AO on the legal side they

00:27:28,809 --> 00:27:34,259
can't be a volunteer because I really

00:27:31,210 --> 00:27:36,610
don't want to get volunteers sued for

00:27:34,259 --> 00:27:39,220
not replying on an email it turns out

00:27:36,610 --> 00:27:40,720
the people that enforce laws don't care

00:27:39,220 --> 00:27:42,249
when you're like sorry this is my side

00:27:40,720 --> 00:27:45,369
project I don't have time to like follow

00:27:42,249 --> 00:27:46,899
the law so it's like kind of important

00:27:45,369 --> 00:27:48,700
that we comply with those things and

00:27:46,899 --> 00:27:50,169
like a lot of people and programmers

00:27:48,700 --> 00:27:52,299
don't think that open-source has to like

00:27:50,169 --> 00:27:54,669
deal with legal a lot but like you know

00:27:52,299 --> 00:27:56,110
especially in running crates IO is like

00:27:54,669 --> 00:27:57,460
one of the bigger things right now but

00:27:56,110 --> 00:27:59,619
like there will be other things in the

00:27:57,460 --> 00:28:01,990
future where you know dealing with

00:27:59,619 --> 00:28:04,990
lawyers is important and that deserves

00:28:01,990 --> 00:28:06,999
to be like you know work that is not

00:28:04,990 --> 00:28:09,820
just like whoever happens to have time

00:28:06,999 --> 00:28:11,200
on Saturday it's also very popular in

00:28:09,820 --> 00:28:12,999
open-source communities that we only see

00:28:11,200 --> 00:28:14,110
coding as contribution but the people

00:28:12,999 --> 00:28:16,690
who are dating with that side are

00:28:14,110 --> 00:28:19,559
actually like making sure that we can

00:28:16,690 --> 00:28:23,559
sleep well is is great

00:28:19,559 --> 00:28:25,149
but we haven't still and that's our task

00:28:23,559 --> 00:28:28,749
for next year we haven't found a katuns

00:28:25,149 --> 00:28:30,610
there we have definitely committed the

00:28:28,749 --> 00:28:33,519
error for example setting up a working

00:28:30,610 --> 00:28:34,929
group before summer then to just figure

00:28:33,519 --> 00:28:37,899
out that everyone actually wants to go

00:28:34,929 --> 00:28:39,519
on holidays that's a very bad time so

00:28:37,899 --> 00:28:41,169
people didn't attend any kind of

00:28:39,519 --> 00:28:44,850
meetings because for good reasons I'm on

00:28:41,169 --> 00:28:50,409
holiday so I got the family time so yeah

00:28:44,850 --> 00:28:54,549
yeah autumn next so it's time to review

00:28:50,409 --> 00:28:56,619
and change our practices and that review

00:28:54,549 --> 00:28:59,679
also needs feedback so if someone's like

00:28:56,619 --> 00:29:01,690
huh I'm seeing something that could work

00:28:59,679 --> 00:29:03,220
better or if you have experience from

00:29:01,690 --> 00:29:06,279
another open-source project where you

00:29:03,220 --> 00:29:08,520
know you've solved something we they

00:29:06,279 --> 00:29:10,500
open to talk to anyone

00:29:08,520 --> 00:29:12,000
on any of the teams and help them

00:29:10,500 --> 00:29:13,920
improve a lot of the reason why we're

00:29:12,000 --> 00:29:16,140
successful as we are as due to like our

00:29:13,920 --> 00:29:17,970
and other folks in rusts history

00:29:16,140 --> 00:29:20,190
specifically in Ruby but also in other

00:29:17,970 --> 00:29:22,530
projects like the reason that cargo is

00:29:20,190 --> 00:29:24,030
the way it is is because yahuda had

00:29:22,530 --> 00:29:25,290
worked on bundler and had learned what

00:29:24,030 --> 00:29:27,330
worked well and what didn't work well

00:29:25,290 --> 00:29:30,630
and same in a lot of crates iOS stuff

00:29:27,330 --> 00:29:32,100
and like a lot of the aspects are things

00:29:30,630 --> 00:29:34,260
that we have brought from things that we

00:29:32,100 --> 00:29:36,210
did before rust and you know we don't

00:29:34,260 --> 00:29:38,190
have experience everywhere and so like

00:29:36,210 --> 00:29:39,900
like we took the RFC process sort of

00:29:38,190 --> 00:29:41,250
from Python and their pet process is

00:29:39,900 --> 00:29:44,580
another a great example of a language

00:29:41,250 --> 00:29:45,990
influencing us and so you know if you

00:29:44,580 --> 00:29:47,160
work in a project and you have some

00:29:45,990 --> 00:29:48,450
stuff that works really well like

00:29:47,160 --> 00:29:49,650
there's a lot of stuff that we don't do

00:29:48,450 --> 00:29:51,420
really well and it would be great to

00:29:49,650 --> 00:29:56,760
figure out someone who does and there

00:29:51,420 --> 00:29:59,220
was the answer so we can improve yeah so

00:29:56,760 --> 00:30:02,820
and one thing that I would like to talk

00:29:59,220 --> 00:30:04,610
about from my experience is a lot of the

00:30:02,820 --> 00:30:07,100
problems that I see popping up

00:30:04,610 --> 00:30:10,620
everywhere around like people getting

00:30:07,100 --> 00:30:12,570
angry at the project or disgruntled are

00:30:10,620 --> 00:30:14,760
actually communication problems and one

00:30:12,570 --> 00:30:16,830
of the things that we don't do quite

00:30:14,760 --> 00:30:18,420
quite as much is modeling what the

00:30:16,830 --> 00:30:21,210
communication of the bus project is and

00:30:18,420 --> 00:30:24,559
because we're growing that constantly

00:30:21,210 --> 00:30:28,110
changes so when I joined like the roast

00:30:24,559 --> 00:30:30,929
like ecosystem it was basically 10

00:30:28,110 --> 00:30:33,630
hackers somewhere and a couple of people

00:30:30,929 --> 00:30:35,280
around it so you could just on any kind

00:30:33,630 --> 00:30:36,690
of communication assume that everyone

00:30:35,280 --> 00:30:38,490
had a full picture of what Ross

00:30:36,690 --> 00:30:41,220
currently was and was building nightly

00:30:38,490 --> 00:30:44,910
every 5 days and would just be ok was

00:30:41,220 --> 00:30:47,300
figuring out and what just broke and

00:30:44,910 --> 00:30:51,150
where they would find out what broke and

00:30:47,300 --> 00:30:54,450
since then that has been growing all the

00:30:51,150 --> 00:30:56,010
time and just a couple of weeks ago I

00:30:54,450 --> 00:30:58,830
read it read an interesting blog post

00:30:56,010 --> 00:31:02,630
about from the developer developer

00:30:58,830 --> 00:31:04,920
relationship community how they model

00:31:02,630 --> 00:31:08,010
communication with their communities and

00:31:04,920 --> 00:31:11,040
what they're using is a model that they

00:31:08,010 --> 00:31:15,120
call Orbitz so basically you try to

00:31:11,040 --> 00:31:16,919
figure out are there groups that orbit

00:31:15,120 --> 00:31:18,540
around our project or around me

00:31:16,919 --> 00:31:20,790
personally or around my working group

00:31:18,540 --> 00:31:22,140
and

00:31:20,790 --> 00:31:24,060
do I need to communicate with them and

00:31:22,140 --> 00:31:25,970
the nice thing about this model is it's

00:31:24,060 --> 00:31:29,220
actually not bad to be in orbit for

00:31:25,970 --> 00:31:31,500
orbit for basically says I really don't

00:31:29,220 --> 00:31:33,840
care about what you're doing as long as

00:31:31,500 --> 00:31:35,550
my product works and my stuff builds and

00:31:33,840 --> 00:31:37,110
I know about all the important stuff

00:31:35,550 --> 00:31:40,890
that I need to know about what breaks

00:31:37,110 --> 00:31:43,080
and what not while oh with one is those

00:31:40,890 --> 00:31:45,570
are basically personal friends that I

00:31:43,080 --> 00:31:47,760
need to regularly talk to and two and

00:31:45,570 --> 00:31:50,070
three are other ones we probably would

00:31:47,760 --> 00:31:53,430
have a different kind of modeling there

00:31:50,070 --> 00:31:55,380
but the important part is the more and

00:31:53,430 --> 00:31:57,030
more we grow the more and more we grow

00:31:55,380 --> 00:31:59,340
groups that need different kinds of

00:31:57,030 --> 00:32:00,870
communication some just need to change

00:31:59,340 --> 00:32:02,160
law others need very direct

00:32:00,870 --> 00:32:05,400
communication and because of the size of

00:32:02,160 --> 00:32:07,350
a project we're starting to be in an

00:32:05,400 --> 00:32:10,620
area where even communication between

00:32:07,350 --> 00:32:12,300
team members already has that notion

00:32:10,620 --> 00:32:14,310
where some people just want to be

00:32:12,300 --> 00:32:15,660
informed what a team does some people

00:32:14,310 --> 00:32:17,880
want to be consulted what a team does

00:32:15,660 --> 00:32:20,610
for people that remember last year's

00:32:17,880 --> 00:32:23,580
keynote why wasn't I consulted is a huge

00:32:20,610 --> 00:32:25,170
problem but also finding out why do

00:32:23,580 --> 00:32:27,480
people feel like they should be

00:32:25,170 --> 00:32:30,720
consulted and how can I make sure that I

00:32:27,480 --> 00:32:33,870
can find those people and arrange them

00:32:30,720 --> 00:32:35,460
properly in that model is very very

00:32:33,870 --> 00:32:36,840
important yeah and I think that

00:32:35,460 --> 00:32:39,120
something is really tough about this is

00:32:36,840 --> 00:32:41,670
this is not work that you can do once

00:32:39,120 --> 00:32:44,790
because as we grow and change these

00:32:41,670 --> 00:32:45,780
needs grow and change and so like you

00:32:44,790 --> 00:32:47,310
know you talked about the number of

00:32:45,780 --> 00:32:50,130
people being able to see things because

00:32:47,310 --> 00:32:52,140
the community is small but like another

00:32:50,130 --> 00:32:53,730
way this manifests for example earlier I

00:32:52,140 --> 00:32:56,940
mentioned when I changed fail to panic

00:32:53,730 --> 00:32:58,560
and I wrote that script I looked up

00:32:56,940 --> 00:33:01,350
everything on github and I think it was

00:32:58,560 --> 00:33:04,920
like 65 projects on github that happened

00:33:01,350 --> 00:33:07,200
to be panicking basically and so I was

00:33:04,920 --> 00:33:09,210
able to like send a PR to literally

00:33:07,200 --> 00:33:11,430
every person with like fairly minimal

00:33:09,210 --> 00:33:13,080
effort as we've grown you know we

00:33:11,430 --> 00:33:15,120
developed crater which is like a super

00:33:13,080 --> 00:33:17,250
wonderful tool to be able to you know

00:33:15,120 --> 00:33:18,960
see like oh is this impact like what is

00:33:17,250 --> 00:33:21,270
the impact of a particular change and

00:33:18,960 --> 00:33:23,580
like how is that going to affect the

00:33:21,270 --> 00:33:27,270
rust world because for a long time you

00:33:23,580 --> 00:33:29,450
know we had basically like servo and

00:33:27,270 --> 00:33:31,070
then like open source code like other

00:33:29,450 --> 00:33:32,600
open-source code that's like on crazy IO

00:33:31,070 --> 00:33:35,059
because we didn't have a lot of adoption

00:33:32,600 --> 00:33:37,639
within companies but now we've grown to

00:33:35,059 --> 00:33:39,889
the point where like crater while it's

00:33:37,639 --> 00:33:41,960
still an amazing tool can't actually

00:33:39,889 --> 00:33:43,460
like tell us what the real-world impact

00:33:41,960 --> 00:33:45,919
of changes to the language are going to

00:33:43,460 --> 00:33:48,080
be because like we don't have access to

00:33:45,919 --> 00:33:49,880
say like Microsoft or Facebook's

00:33:48,080 --> 00:33:51,740
internal repositories where they're

00:33:49,880 --> 00:33:53,870
doing private you know code or whatever

00:33:51,740 --> 00:33:55,610
and so the infor team has some ideas on

00:33:53,870 --> 00:33:57,649
how to work there but like the point is

00:33:55,610 --> 00:33:59,179
if you would analyze how that worked at

00:33:57,649 --> 00:34:01,850
any given point in the project's

00:33:59,179 --> 00:34:03,950
lifetime like and you stuck with it the

00:34:01,850 --> 00:34:06,169
entire time the situation has changed

00:34:03,950 --> 00:34:07,399
from out from underneath your feet and

00:34:06,169 --> 00:34:10,070
so we haven't needed to like think about

00:34:07,399 --> 00:34:11,300
these kind of things before but like as

00:34:10,070 --> 00:34:13,339
we grow we'll need to continue

00:34:11,300 --> 00:34:14,510
reevaluating these kind of things so I'm

00:34:13,339 --> 00:34:16,820
sure this is a theme that you'll see

00:34:14,510 --> 00:34:18,560
like in the future in general that you

00:34:16,820 --> 00:34:19,579
know as we grow stuff changes it's

00:34:18,560 --> 00:34:20,149
different so you need to do different

00:34:19,579 --> 00:34:22,339
things

00:34:20,149 --> 00:34:23,659
it seems very basic but it's hard to

00:34:22,339 --> 00:34:25,369
actually internalize that that's true

00:34:23,659 --> 00:34:28,790
also for some time that just works

00:34:25,369 --> 00:34:31,089
organically one interesting experience I

00:34:28,790 --> 00:34:33,800
had over the last week Aaron started

00:34:31,089 --> 00:34:35,629
writing a marketing handbook for us like

00:34:33,800 --> 00:34:37,460
one or half years ago or something like

00:34:35,629 --> 00:34:39,079
that and that kind of window the way

00:34:37,460 --> 00:34:40,460
because people didn't have the time but

00:34:39,079 --> 00:34:42,530
during the last three months I had

00:34:40,460 --> 00:34:45,349
multiple people finding out that the

00:34:42,530 --> 00:34:48,470
shell of this book exists and asking us

00:34:45,349 --> 00:34:50,450
directly hey could I actually contribute

00:34:48,470 --> 00:34:52,369
to that could I like take all your

00:34:50,450 --> 00:34:54,260
experience and just put it into that

00:34:52,369 --> 00:34:56,929
book what would you be up for an

00:34:54,260 --> 00:34:58,550
interview so even communicating we've

00:34:56,929 --> 00:35:00,770
got interest in writing something and my

00:34:58,550 --> 00:35:02,990
theory around this is the people that

00:35:00,770 --> 00:35:05,390
were doing marketing for us previously

00:35:02,990 --> 00:35:07,670
was a small enough group that we could

00:35:05,390 --> 00:35:11,270
just do that verbally and now it's

00:35:07,670 --> 00:35:12,859
becoming more and more that that we

00:35:11,270 --> 00:35:14,300
don't have the time anymore to actually

00:35:12,859 --> 00:35:15,589
talk to everyone who is interested in

00:35:14,300 --> 00:35:18,980
that so we need to write it down so

00:35:15,589 --> 00:35:21,589
writing down more is like if you enjoyed

00:35:18,980 --> 00:35:24,349
writing please talk to us we've got a

00:35:21,589 --> 00:35:26,859
lot of writing to do writing scales it's

00:35:24,349 --> 00:35:26,859
wonderful

00:35:28,380 --> 00:35:33,840
so and the final thing I would like to

00:35:31,510 --> 00:35:37,960
talk about is guarantees well as quality

00:35:33,840 --> 00:35:42,280
rust gives the project gives guarantees

00:35:37,960 --> 00:35:44,140
we've got t1 t2 t3 targets for example

00:35:42,280 --> 00:35:44,890
and we have some writing around what

00:35:44,140 --> 00:35:47,500
that means

00:35:44,890 --> 00:35:49,810
we got the language guarantees in itself

00:35:47,500 --> 00:35:53,290
the stability guarantees that we have

00:35:49,810 --> 00:35:55,360
our security policy and all that but

00:35:53,290 --> 00:35:58,690
that's actually not what people like us

00:35:55,360 --> 00:36:01,570
for because guarantees are only the last

00:35:58,690 --> 00:36:05,380
line and that's something that people

00:36:01,570 --> 00:36:07,450
often miss what people enjoy rust for is

00:36:05,380 --> 00:36:09,430
the quality that we constantly deliver

00:36:07,450 --> 00:36:10,990
and that's actually higher than the

00:36:09,430 --> 00:36:12,310
guarantees that we have for example we

00:36:10,990 --> 00:36:15,940
have a couple of targets that are

00:36:12,310 --> 00:36:17,830
officially Tier two but people are using

00:36:15,940 --> 00:36:21,210
them because they experience for them is

00:36:17,830 --> 00:36:23,760
oh they're great and we can use them

00:36:21,210 --> 00:36:28,810
absolutely no problem

00:36:23,760 --> 00:36:31,600
it's just declining quality is possible

00:36:28,810 --> 00:36:33,430
and if you are not aggressive about

00:36:31,600 --> 00:36:35,050
keeping it up to the current state and

00:36:33,430 --> 00:36:38,470
if you're not tracking what your current

00:36:35,050 --> 00:36:41,590
level of quality is we might actually

00:36:38,470 --> 00:36:44,200
get down to yeah just reaching our

00:36:41,590 --> 00:36:46,000
guarantees we could have put future 0.1

00:36:44,200 --> 00:36:47,620
into the standard library immediately

00:36:46,000 --> 00:36:50,050
instead of making it a separate thing

00:36:47,620 --> 00:36:51,520
and you know I don't even know if

00:36:50,050 --> 00:36:53,860
async/await would have been really

00:36:51,520 --> 00:36:55,660
possible actually on top of the

00:36:53,860 --> 00:36:57,010
particular version of futures due to the

00:36:55,660 --> 00:36:58,870
changes that we had to make in the

00:36:57,010 --> 00:37:00,760
intermediate years and so there's

00:36:58,870 --> 00:37:02,890
definitely this sort of like trap that

00:37:00,760 --> 00:37:04,690
we may fall into where there's pressure

00:37:02,890 --> 00:37:06,220
to ship things because we want to get

00:37:04,690 --> 00:37:08,350
stuff done and we want people to use it

00:37:06,220 --> 00:37:10,330
but at the same time like those three

00:37:08,350 --> 00:37:12,310
years of like pain of not having a

00:37:10,330 --> 00:37:13,300
single weight is also the reason that we

00:37:12,310 --> 00:37:15,190
have an extremely high quality

00:37:13,300 --> 00:37:17,890
world-class implementation of that

00:37:15,190 --> 00:37:19,420
feature and figuring out where like what

00:37:17,890 --> 00:37:21,070
stuff is okay to ship a little bit

00:37:19,420 --> 00:37:23,200
earlier and what stuff really needs to

00:37:21,070 --> 00:37:25,300
take time to polish is really important

00:37:23,200 --> 00:37:28,120
and difficult and it's really important

00:37:25,300 --> 00:37:30,340
to be honest and subtle around this for

00:37:28,120 --> 00:37:32,650
example just last week the goal the

00:37:30,340 --> 00:37:35,530
final goal for having async/await

00:37:32,650 --> 00:37:37,540
in beta was the last beta release last

00:37:35,530 --> 00:37:38,560
week and we didn't actually manage that

00:37:37,540 --> 00:37:40,690
for a number of

00:37:38,560 --> 00:37:42,970
reasons people didn't figure out fast

00:37:40,690 --> 00:37:45,490
enough that it's probably going to be

00:37:42,970 --> 00:37:47,440
delayed which meant we couldn't allocate

00:37:45,490 --> 00:37:50,980
enough resources to it because kind of

00:37:47,440 --> 00:37:53,770
the message got lost and in the end the

00:37:50,980 --> 00:37:55,660
release team doing what was in my

00:37:53,770 --> 00:37:57,460
opinion the right decision saying hey

00:37:55,660 --> 00:37:58,900
you know what we're not going to rush in

00:37:57,460 --> 00:38:00,880
the feature last minute just because we

00:37:58,900 --> 00:38:03,610
wanted to have it out for 138 and that

00:38:00,880 --> 00:38:06,100
was a good decision it was a quality

00:38:03,610 --> 00:38:10,180
decision but it's still important that

00:38:06,100 --> 00:38:12,520
we do call that a problem like there

00:38:10,180 --> 00:38:14,230
have been issues in the process it would

00:38:12,520 --> 00:38:16,330
have been quality wise better if you

00:38:14,230 --> 00:38:18,640
actually hit the communicated deadline

00:38:16,330 --> 00:38:21,130
that people were expecting at the

00:38:18,640 --> 00:38:22,960
quality level that we wanted to and the

00:38:21,130 --> 00:38:26,470
subtlety honesty comes in at the moment

00:38:22,960 --> 00:38:29,200
where we need to take this event just

00:38:26,470 --> 00:38:32,590
neutrally and talk about okay how could

00:38:29,200 --> 00:38:34,420
we have improved in and could we have

00:38:32,590 --> 00:38:36,760
improved our processes or where are the

00:38:34,420 --> 00:38:38,080
flaws in our processes to actually make

00:38:36,760 --> 00:38:40,060
sure that we could have caught that

00:38:38,080 --> 00:38:41,800
early and got it over the finish line on

00:38:40,060 --> 00:38:46,200
the date we wanted and the quality we

00:38:41,800 --> 00:38:49,180
want it it's not about blaming anyone

00:38:46,200 --> 00:38:51,130
classic management thing it's not about

00:38:49,180 --> 00:38:55,000
the blame it's about like figuring out

00:38:51,130 --> 00:38:57,430
hey why weren't we able to both reach

00:38:55,000 --> 00:39:00,160
our personal or our project goals and

00:38:57,430 --> 00:39:03,820
the quality goals that we that we want

00:39:00,160 --> 00:39:05,080
to push out to the community yeah and

00:39:03,820 --> 00:39:06,580
this also takes like a big

00:39:05,080 --> 00:39:08,200
back-and-forth between you all and the

00:39:06,580 --> 00:39:10,000
teams as well right because it's like

00:39:08,200 --> 00:39:11,530
your goal to communicate to us what

00:39:10,000 --> 00:39:12,460
stuff that you want and it's our job to

00:39:11,530 --> 00:39:14,530
make that happen

00:39:12,460 --> 00:39:16,240
but that also requires some charity on

00:39:14,530 --> 00:39:18,310
both ends whenever you ask for something

00:39:16,240 --> 00:39:19,690
that we feel is impossible or when we

00:39:18,310 --> 00:39:21,130
ship something that's like a little

00:39:19,690 --> 00:39:23,380
later than maybe we originally said

00:39:21,130 --> 00:39:25,510
right so it's like a symbiotic like work

00:39:23,380 --> 00:39:27,100
together kind of like situation and that

00:39:25,510 --> 00:39:29,560
requires this kind of honesty and

00:39:27,100 --> 00:39:31,180
subtlety with each other so that you

00:39:29,560 --> 00:39:33,040
know there's not like a whole big

00:39:31,180 --> 00:39:34,750
animosity between everything about how

00:39:33,040 --> 00:39:36,880
stuff goes like I've worked in languages

00:39:34,750 --> 00:39:38,680
and ecosystems where the users of the

00:39:36,880 --> 00:39:40,270
language like hate the team that makes

00:39:38,680 --> 00:39:42,820
the language and it's like not a great

00:39:40,270 --> 00:39:44,620
place to be in so we don't we don't want

00:39:42,820 --> 00:39:46,150
that to happen the rest also that's

00:39:44,620 --> 00:39:47,730
that's a fun thing that I experienced as

00:39:46,150 --> 00:39:50,430
a non

00:39:47,730 --> 00:39:52,200
non first language English speaker a lot

00:39:50,430 --> 00:39:53,820
of these discussions need some

00:39:52,200 --> 00:39:55,680
intercultural understanding especially

00:39:53,820 --> 00:39:57,359
coming from the Ruby world where a lot

00:39:55,680 --> 00:40:00,390
of the maintained is of the language are

00:39:57,359 --> 00:40:02,190
not the best English speakers like

00:40:00,390 --> 00:40:05,550
trying to get on the discussion level

00:40:02,190 --> 00:40:08,340
where you do give people some slack for

00:40:05,550 --> 00:40:09,930
oh maybe they're not as good at speaking

00:40:08,340 --> 00:40:12,690
my native tongue as I am

00:40:09,930 --> 00:40:14,820
so probably discussions I've seen a lot

00:40:12,690 --> 00:40:16,170
of discussions go wrong because someone

00:40:14,820 --> 00:40:17,520
was ignoring that the other person

00:40:16,170 --> 00:40:18,980
speaking actually wasn't good at the

00:40:17,520 --> 00:40:26,880
language that they were speaking in and

00:40:18,980 --> 00:40:29,609
misunderstanding their points yeah so as

00:40:26,880 --> 00:40:31,080
a conclusion one thing that I always

00:40:29,609 --> 00:40:34,350
liked about the rest project it was

00:40:31,080 --> 00:40:36,060
pragmatic active and results based so

00:40:34,350 --> 00:40:38,430
pragmatic in the sense of we actually

00:40:36,060 --> 00:40:40,590
want to solve problems in the sense of

00:40:38,430 --> 00:40:45,210
we want to come up with an idea that

00:40:40,590 --> 00:40:47,220
solves problems in short to medium run

00:40:45,210 --> 00:40:50,010
we're not aiming for the moving of like

00:40:47,220 --> 00:40:51,570
in 20 years we rebuilding a research

00:40:50,010 --> 00:40:53,190
language that in 20 years might be

00:40:51,570 --> 00:40:54,510
picked up rust was always the language

00:40:53,190 --> 00:40:56,580
that would take the languages from the

00:40:54,510 --> 00:40:59,310
90s pick up their ideas reintegrate them

00:40:56,580 --> 00:41:02,119
and actually give it to people and it

00:40:59,310 --> 00:41:06,960
was also always an active project it is

00:41:02,119 --> 00:41:09,690
incredibly geared by what are actual

00:41:06,960 --> 00:41:11,520
problems that our users have how can we

00:41:09,690 --> 00:41:15,740
solve them and how can we integrate that

00:41:11,520 --> 00:41:19,470
into a good whole like the whole

00:41:15,740 --> 00:41:21,750
features story from like five six seven

00:41:19,470 --> 00:41:25,230
years ago is it is an instance of that

00:41:21,750 --> 00:41:27,300
how can we take this idea and actually

00:41:25,230 --> 00:41:29,460
turn it into something that is usable

00:41:27,300 --> 00:41:31,440
and productive for people it might take

00:41:29,460 --> 00:41:35,880
five years or it might take just two

00:41:31,440 --> 00:41:39,060
weeks and that we are always trying to

00:41:35,880 --> 00:41:40,890
figure out what the what those are and

00:41:39,060 --> 00:41:42,780
that we are actively trying to figure

00:41:40,890 --> 00:41:45,660
out what the issues are and asking

00:41:42,780 --> 00:41:47,010
people one thing that I always also

00:41:45,660 --> 00:41:49,650
enjoyed about the RUS project is how

00:41:47,010 --> 00:41:51,210
open we were to go to companies and say

00:41:49,650 --> 00:41:53,580
hey you know what you're using our

00:41:51,210 --> 00:41:55,560
language could you tell us what your

00:41:53,580 --> 00:41:57,300
current problems with it are so that we

00:41:55,560 --> 00:41:58,860
are more informed on what we actually

00:41:57,300 --> 00:42:01,980
should solve

00:41:58,860 --> 00:42:04,320
and the last thing is I find it

00:42:01,980 --> 00:42:06,990
incredibly interest n't to actually

00:42:04,320 --> 00:42:09,720
check if something that we have done has

00:42:06,990 --> 00:42:11,370
given us the results that we wanted and

00:42:09,720 --> 00:42:13,500
there's certainly things that we have

00:42:11,370 --> 00:42:17,120
introduced in the last three years that

00:42:13,500 --> 00:42:20,760
for example people just don't use these

00:42:17,120 --> 00:42:23,370
we thought that they would do it it's

00:42:20,760 --> 00:42:25,020
not like we got a huge record a track

00:42:23,370 --> 00:42:26,670
record of building stuff that people

00:42:25,020 --> 00:42:29,130
don't use but it has happened

00:42:26,670 --> 00:42:31,440
yep there's some level of rust maturity

00:42:29,130 --> 00:42:32,640
is like our mistakes accrue like a at

00:42:31,440 --> 00:42:34,350
one point oh I was like everything's

00:42:32,640 --> 00:42:37,230
great we've made no mistakes now I'm

00:42:34,350 --> 00:42:39,120
like we've made some mistakes that's

00:42:37,230 --> 00:42:40,620
like a level of maturity right as that

00:42:39,120 --> 00:42:41,970
like you know you have to live with

00:42:40,620 --> 00:42:44,190
these mistakes and make the best of the

00:42:41,970 --> 00:42:48,630
future instead of you know having these

00:42:44,190 --> 00:42:51,930
things happen so and yeah as a final

00:42:48,630 --> 00:42:53,520
final final message we like in terms of

00:42:51,930 --> 00:42:56,160
the core team but also the rust teams

00:42:53,520 --> 00:42:58,890
need all of you who are maybe not on a

00:42:56,160 --> 00:43:00,780
team to help and it doesn't mean like

00:42:58,890 --> 00:43:01,980
necessarily join the team although

00:43:00,780 --> 00:43:04,080
obviously if that's the thing you want

00:43:01,980 --> 00:43:06,270
to do that would be super fantastic but

00:43:04,080 --> 00:43:07,770
like you know making sure to keep us

00:43:06,270 --> 00:43:10,020
accountable for the decisions that we're

00:43:07,770 --> 00:43:11,790
making and the path of the language you

00:43:10,020 --> 00:43:14,370
know making sure to be empathetic about

00:43:11,790 --> 00:43:15,900
the fact that it's hard to do so you

00:43:14,370 --> 00:43:18,210
know like all sorts of different like

00:43:15,900 --> 00:43:21,180
help running conferences help teaching

00:43:18,210 --> 00:43:22,890
Russ to people writing more libraries to

00:43:21,180 --> 00:43:24,570
put on crates audio like there are so

00:43:22,890 --> 00:43:28,670
many ways that you can help and we

00:43:24,570 --> 00:43:33,150
really want you to help us and yeah

00:43:28,670 --> 00:43:34,930
Morton that's good closing sweet nothing

00:43:33,150 --> 00:43:40,500
to add thank you so much everybody

00:43:34,930 --> 00:43:53,800
[Applause]

00:43:40,500 --> 00:43:53,800

YouTube URL: https://www.youtube.com/watch?v=FSrQX4uYuOM


