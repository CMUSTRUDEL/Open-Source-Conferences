Title: Aïssata Maiga - Build your own (Rust-y) robot! — RustFest Global 2020
Publication date: 2020-12-19
Playlist: RustFest Global 2020
Description: 
	Let's discover how to adapt an easy, popular and beloved Arduino project to Rust! The obstacle avoiding robot is perfect to discover no-std Rust and make a cute robot to play with.

More at https://rustfest.global/session/21-build-your-own-(rust-y)-robot/
Captions: 
	00:00:02,960 --> 00:00:07,120
isata

00:00:04,160 --> 00:00:08,800
meijer lets me know how to make bots

00:00:07,120 --> 00:00:11,280
without arduino

00:00:08,800 --> 00:00:12,240
writing rust to move her bot to my

00:00:11,280 --> 00:00:14,000
groove

00:00:12,240 --> 00:00:17,920
sure there will be some cool stuff to

00:00:14,000 --> 00:00:17,920
see no

00:00:18,720 --> 00:00:23,119
hello i'm isata mega just your regular

00:00:21,359 --> 00:00:23,920
computer science student and i live in

00:00:23,119 --> 00:00:25,680
sweden

00:00:23,920 --> 00:00:27,279
i discovered draws this summer and

00:00:25,680 --> 00:00:28,720
immediately fell in love with it

00:00:27,279 --> 00:00:31,519
like a lot of you in the audience i'm

00:00:28,720 --> 00:00:33,440
pretty sure so let's just start

00:00:31,519 --> 00:00:36,079
this presentation will be about making a

00:00:33,440 --> 00:00:38,000
robot in rust and working with no std

00:00:36,079 --> 00:00:39,200
it's a fun project to try for yourself

00:00:38,000 --> 00:00:41,040
or with children

00:00:39,200 --> 00:00:43,120
it's also very easy the most

00:00:41,040 --> 00:00:45,520
intimidating part is just to get started

00:00:43,120 --> 00:00:47,280
and order stuff from the internet

00:00:45,520 --> 00:00:48,719
i will start by showing you the robot

00:00:47,280 --> 00:00:50,640
and then explain everything you need to

00:00:48,719 --> 00:00:53,199
know about every part of the code

00:00:50,640 --> 00:00:53,920
and share a lot of mistakes i've made

00:00:53,199 --> 00:00:57,199
and then

00:00:53,920 --> 00:00:58,239
there will be a little surprise i used

00:00:57,199 --> 00:01:00,800
to create a viral

00:00:58,239 --> 00:01:02,160
in that project and i got a lot of help

00:01:00,800 --> 00:01:05,360
from reichs who is the

00:01:02,160 --> 00:01:06,799
creator of this grade so it has great

00:01:05,360 --> 00:01:09,760
documentation

00:01:06,799 --> 00:01:10,640
a lot of templates how to start your own

00:01:09,760 --> 00:01:12,479
project

00:01:10,640 --> 00:01:13,920
and of course how to configure your

00:01:12,479 --> 00:01:17,119
cargo

00:01:13,920 --> 00:01:20,240
your cargo file and

00:01:17,119 --> 00:01:21,119
basic templates but it also has many

00:01:20,240 --> 00:01:25,360
examples

00:01:21,119 --> 00:01:29,200
for every arduino board

00:01:25,360 --> 00:01:34,079
so for example i'm using a you know

00:01:29,200 --> 00:01:35,920
and if you go to examples you can

00:01:34,079 --> 00:01:38,079
check how to blink a led and implement

00:01:35,920 --> 00:01:38,560
it directly which is traditionally the

00:01:38,079 --> 00:01:40,640
first

00:01:38,560 --> 00:01:42,000
the hello world of embedded systems i

00:01:40,640 --> 00:01:45,280
would say

00:01:42,000 --> 00:01:49,040
so it works great and i really

00:01:45,280 --> 00:01:49,040
recommended it heartfully

00:01:51,280 --> 00:01:55,280
the component first with time you will

00:01:53,360 --> 00:01:56,960
notice that all components are standard

00:01:55,280 --> 00:01:58,799
and pretty much the same

00:01:56,960 --> 00:02:00,079
but the easiest way to get started is

00:01:58,799 --> 00:02:02,320
just to buy a kit

00:02:00,079 --> 00:02:03,200
many are available on banggood ebay or

00:02:02,320 --> 00:02:05,439
amazon

00:02:03,200 --> 00:02:06,960
so if you just google smart car arduino

00:02:05,439 --> 00:02:08,640
or electronic smart car

00:02:06,960 --> 00:02:10,640
you should see a bunch of suppliers from

00:02:08,640 --> 00:02:13,120
which you can choose the cheapest start

00:02:10,640 --> 00:02:16,160
at around 10 or 15 euros

00:02:13,120 --> 00:02:19,120
if you want to assemble it's the same

00:02:16,160 --> 00:02:19,920
if you just google assembly smart car

00:02:19,120 --> 00:02:22,640
arduino

00:02:19,920 --> 00:02:25,520
you will have a lot of really good video

00:02:22,640 --> 00:02:27,840
i also link them in my repository

00:02:25,520 --> 00:02:28,879
then a word of caution and a good

00:02:27,840 --> 00:02:32,720
opportunity to

00:02:28,879 --> 00:02:35,040
to share my big error number one

00:02:32,720 --> 00:02:36,560
in most assembly videos and on the

00:02:35,040 --> 00:02:39,040
ripple

00:02:36,560 --> 00:02:41,120
there is usually schematics that follow

00:02:39,040 --> 00:02:44,239
you must be very careful to follow them

00:02:41,120 --> 00:02:45,760
and to plug things as they look like as

00:02:44,239 --> 00:02:47,599
they look on the image

00:02:45,760 --> 00:02:48,959
but the most important is to make sure

00:02:47,599 --> 00:02:51,760
that the circuit is

00:02:48,959 --> 00:02:53,440
grounded that means that all ground

00:02:51,760 --> 00:02:55,920
cables

00:02:53,440 --> 00:02:57,360
are connected that the circuit has a

00:02:55,920 --> 00:03:00,640
common ground

00:02:57,360 --> 00:03:02,480
if not bad things will happen

00:03:00,640 --> 00:03:04,959
but things also called undefined

00:03:02,480 --> 00:03:06,319
behavior so if you are here and nothing

00:03:04,959 --> 00:03:07,760
is working and you are getting

00:03:06,319 --> 00:03:10,400
frustrated

00:03:07,760 --> 00:03:12,400
just check if everything has a common

00:03:10,400 --> 00:03:14,480
ground

00:03:12,400 --> 00:03:15,519
i don't know is ideal to begin this kind

00:03:14,480 --> 00:03:17,120
of project

00:03:15,519 --> 00:03:18,959
they are relatively affordable and there

00:03:17,120 --> 00:03:20,560
are tons of tutorials on robot making

00:03:18,959 --> 00:03:22,480
with arduino

00:03:20,560 --> 00:03:24,000
what is great with the brand is the

00:03:22,480 --> 00:03:26,560
ecosystem

00:03:24,000 --> 00:03:28,159
all the libraries and the ide but we

00:03:26,560 --> 00:03:30,560
can't use that in frost

00:03:28,159 --> 00:03:32,720
and that's where average has you covered

00:03:30,560 --> 00:03:34,319
arduino is using a 8-bit microcontroller

00:03:32,720 --> 00:03:36,799
called avir

00:03:34,319 --> 00:03:39,319
from the avir family i meant the one on

00:03:36,799 --> 00:03:43,200
the uno and the nano is at the mega

00:03:39,319 --> 00:03:45,599
328p you can access it with gpio which

00:03:43,200 --> 00:03:50,080
has the general purpose input output

00:03:45,599 --> 00:03:53,120
pins those little holes

00:03:50,080 --> 00:03:56,000
and over protocols

00:03:53,120 --> 00:03:58,000
so what do i mean by that is you are not

00:03:56,000 --> 00:03:59,360
programming all the board

00:03:58,000 --> 00:04:01,840
but you are programming the

00:03:59,360 --> 00:04:05,680
microcontroller

00:04:01,840 --> 00:04:08,799
this one that you can see

00:04:05,680 --> 00:04:08,799
here on this board

00:04:09,680 --> 00:04:13,280
there is arduino and arduino as we can

00:04:12,640 --> 00:04:14,959
say

00:04:13,280 --> 00:04:17,760
when you will order your kit it will

00:04:14,959 --> 00:04:17,760
come with a board

00:04:18,079 --> 00:04:23,600
it is a clone and it works as well as a

00:04:21,199 --> 00:04:25,199
regular arduino for this kind of project

00:04:23,600 --> 00:04:26,000
i will now tell you about the servo

00:04:25,199 --> 00:04:28,080
motors

00:04:26,000 --> 00:04:30,479
but also the timers which are very

00:04:28,080 --> 00:04:32,800
important in this kind of project

00:04:30,479 --> 00:04:34,080
i will of course show you what i mean uh

00:04:32,800 --> 00:04:37,440
with an animation

00:04:34,080 --> 00:04:38,479
at the end of this slide so the servo

00:04:37,440 --> 00:04:40,960
motor is a simple

00:04:38,479 --> 00:04:43,199
rotating motor but we do not need it to

00:04:40,960 --> 00:04:46,400
go all the way to obtain the rotation

00:04:43,199 --> 00:04:48,000
so we can think of it as a light dimmer

00:04:46,400 --> 00:04:50,560
we will use something called pulse width

00:04:48,000 --> 00:04:51,919
modulation

00:04:50,560 --> 00:04:53,759
if you're having some nice romantic

00:04:51,919 --> 00:04:55,040
dinner with your partner you need to

00:04:53,759 --> 00:04:57,919
control the light

00:04:55,040 --> 00:04:58,639
right and this is what we are going to

00:04:57,919 --> 00:05:00,880
do

00:04:58,639 --> 00:05:03,039
we are going to control the duty cycle

00:05:00,880 --> 00:05:04,639
duty cycles are nothing mystical

00:05:03,039 --> 00:05:06,400
it's the fraction of time where the

00:05:04,639 --> 00:05:07,840
signal is active

00:05:06,400 --> 00:05:09,759
in other words we are going to tell the

00:05:07,840 --> 00:05:11,280
microcontroller how do we want

00:05:09,759 --> 00:05:13,039
how long do we want the signal to be

00:05:11,280 --> 00:05:16,639
active

00:05:13,039 --> 00:05:18,800
now pre-scaling

00:05:16,639 --> 00:05:20,639
all microcontrollers have an internal

00:05:18,800 --> 00:05:22,479
clock and the internal clock of the

00:05:20,639 --> 00:05:25,440
atamega 328p

00:05:22,479 --> 00:05:26,560
is 16 megahertz we define a period of

00:05:25,440 --> 00:05:29,680
time as one

00:05:26,560 --> 00:05:32,639
divided by frequency so

00:05:29,680 --> 00:05:34,240
6 1 divided by 16 million is really fast

00:05:32,639 --> 00:05:36,560
it's 60 nanoseconds

00:05:34,240 --> 00:05:38,639
we can't work with that even if we

00:05:36,560 --> 00:05:41,199
multiply by two at the power of eight

00:05:38,639 --> 00:05:45,280
which is the size of the timer register

00:05:41,199 --> 00:05:45,280
it will overflow in a few milliseconds

00:05:45,759 --> 00:05:52,160
so now is a good time to share a big

00:05:48,960 --> 00:05:55,199
error number two um

00:05:52,160 --> 00:05:57,520
on the microcontroller the timers do not

00:05:55,199 --> 00:05:58,720
all have the same size so you must must

00:05:57,520 --> 00:06:01,199
make sure

00:05:58,720 --> 00:06:02,160
that you are doing the calculation with

00:06:01,199 --> 00:06:05,120
the right timer

00:06:02,160 --> 00:06:06,880
or the right size if nothing is working

00:06:05,120 --> 00:06:09,919
and your calculations are all wrong

00:06:06,880 --> 00:06:09,919
it might be the cause

00:06:11,360 --> 00:06:15,800
so we are going to reduce the frequency

00:06:14,160 --> 00:06:20,960
by dividing it by

00:06:15,800 --> 00:06:24,160
1024 we then can work with a cycle of

00:06:20,960 --> 00:06:24,160
16 milliseconds

00:06:24,720 --> 00:06:29,759
why do we do that most servo motors have

00:06:27,759 --> 00:06:32,639
a frequency of 60 hertz

00:06:29,759 --> 00:06:34,000
and short duty cycles so for example to

00:06:32,639 --> 00:06:37,199
center it

00:06:34,000 --> 00:06:39,039
you need to set it high for 1.5

00:06:37,199 --> 00:06:42,800
milliseconds so 1.5

00:06:39,039 --> 00:06:45,840
divided by 16 times the

00:06:42,800 --> 00:06:49,280
size of the register is 24 ticks

00:06:45,840 --> 00:06:52,319
so let's go and look at some code

00:06:49,280 --> 00:06:55,680
so this is the code for the servomotor

00:06:52,319 --> 00:06:58,960
so first the magic numbers

00:06:55,680 --> 00:07:00,880
that we calculated together so to center

00:06:58,960 --> 00:07:02,479
it we divide the time that we found

00:07:00,880 --> 00:07:06,160
in the data sheet with the prescaled

00:07:02,479 --> 00:07:09,440
period times the size of the register

00:07:06,160 --> 00:07:12,720
and then we declare a mutable timer

00:07:09,440 --> 00:07:13,520
a mutable pin you note that the timer is

00:07:12,720 --> 00:07:16,639
pre-scaled

00:07:13,520 --> 00:07:19,759
with a factor of 1024

00:07:16,639 --> 00:07:20,080
and then the mutable pin is d3 and then

00:07:19,759 --> 00:07:24,800
we

00:07:20,080 --> 00:07:26,720
enable it so how do we know

00:07:24,800 --> 00:07:29,199
how to do that we can go into

00:07:26,720 --> 00:07:32,880
documentation

00:07:29,199 --> 00:07:34,479
and you can see here that i just

00:07:32,880 --> 00:07:37,199
followed the documentation please note

00:07:34,479 --> 00:07:40,880
that eric's is using timer 0

00:07:37,199 --> 00:07:42,639
and pin d5 and it's very important to

00:07:40,880 --> 00:07:45,680
choose them right

00:07:42,639 --> 00:07:48,319
because uh they are hardwired actually

00:07:45,680 --> 00:07:50,000
so this is my big er number three so

00:07:48,319 --> 00:07:53,280
timer two that i'm using

00:07:50,000 --> 00:07:55,440
is hardwire to pd3

00:07:53,280 --> 00:07:57,599
so if you are going to use another timer

00:07:55,440 --> 00:07:59,919
for the servo you have to make sure that

00:07:57,599 --> 00:08:03,120
using the right pin

00:07:59,919 --> 00:08:06,160
so if we go back to the code

00:08:03,120 --> 00:08:07,919
so here you see that i just have a

00:08:06,160 --> 00:08:11,039
mutable delay to

00:08:07,919 --> 00:08:12,400
make the rotation not too fast then we

00:08:11,039 --> 00:08:15,759
just set

00:08:12,400 --> 00:08:19,199
the duty to 24 uh sorry

00:08:15,759 --> 00:08:22,080
to 2156

00:08:19,199 --> 00:08:22,560
so we set it right that's why we use

00:08:22,080 --> 00:08:25,039
constants

00:08:22,560 --> 00:08:27,039
so we set it right we wait a bit we set

00:08:25,039 --> 00:08:29,039
it we center it again and then we

00:08:27,039 --> 00:08:30,720
wait a bit 400 milliseconds and then we

00:08:29,039 --> 00:08:41,039
put it to the left

00:08:30,720 --> 00:08:44,399
and i'm going to show how it looked like

00:08:41,039 --> 00:08:47,440
so now the sensor

00:08:44,399 --> 00:08:49,920
so you can think of the sensor as a bat

00:08:47,440 --> 00:08:52,320
a bat sends sound wave every now and

00:08:49,920 --> 00:08:54,080
then and wait for them to return

00:08:52,320 --> 00:08:55,839
to calculate how far is it from an

00:08:54,080 --> 00:08:57,200
obstacle and this is exactly how it

00:08:55,839 --> 00:09:00,240
works

00:08:57,200 --> 00:09:02,320
so we need to send sound waves about

00:09:00,240 --> 00:09:05,519
every 100 milliseconds

00:09:02,320 --> 00:09:08,720
the sensor has a trigger and an echo

00:09:05,519 --> 00:09:10,959
the trigger turns it on and

00:09:08,720 --> 00:09:12,880
sends a sound wave when the obstacle is

00:09:10,959 --> 00:09:15,120
met the sound wave will bounce

00:09:12,880 --> 00:09:17,600
on it and return as the echo and we will

00:09:15,120 --> 00:09:19,440
measure the length of it

00:09:17,600 --> 00:09:22,160
there are many details but i will just

00:09:19,440 --> 00:09:25,279
cover the ones i will show in the code

00:09:22,160 --> 00:09:26,240
we will use a timer another timer timer

00:09:25,279 --> 00:09:27,839
1.

00:09:26,240 --> 00:09:29,600
this one does not need as much

00:09:27,839 --> 00:09:32,640
pre-scaling as

00:09:29,600 --> 00:09:36,480
timer 2 that we use for the servo so we

00:09:32,640 --> 00:09:39,440
will just make it 64 times slower

00:09:36,480 --> 00:09:40,000
so another magic number that i would

00:09:39,440 --> 00:09:42,959
like to

00:09:40,000 --> 00:09:44,560
explain is 58 that you will see in the

00:09:42,959 --> 00:09:48,080
code

00:09:44,560 --> 00:09:50,399
so the sound is traveling 340 meter

00:09:48,080 --> 00:09:52,160
in one second it will bounce on an

00:09:50,399 --> 00:09:55,279
obstacle and come back

00:09:52,160 --> 00:09:59,440
so we need to calculate 34 000

00:09:55,279 --> 00:10:05,040
divided by 2 in millisecond

00:09:59,440 --> 00:10:08,880
so it's going to be 0.017

00:10:05,040 --> 00:10:11,680
which is the same than 1 divided by 58.

00:10:08,880 --> 00:10:13,600
also every tick is 4 milliseconds so you

00:10:11,680 --> 00:10:14,720
will see multiplication by 4 that is

00:10:13,600 --> 00:10:16,640
suspicious

00:10:14,720 --> 00:10:18,720
you do not need to pay attention to all

00:10:16,640 --> 00:10:20,399
those details i just explained the magic

00:10:18,720 --> 00:10:21,120
numbers because i know some of you are

00:10:20,399 --> 00:10:25,040
interested

00:10:21,120 --> 00:10:29,120
in them this is the code

00:10:25,040 --> 00:10:30,640
for the sensor so we are using timer 1

00:10:29,120 --> 00:10:32,560
which is 16 bit

00:10:30,640 --> 00:10:34,320
and we are pre-scaling it with a factor

00:10:32,560 --> 00:10:37,600
of 64 here

00:10:34,320 --> 00:10:40,160
we declare a mutable trigger

00:10:37,600 --> 00:10:41,839
that i connected to pin d12 and

00:10:40,160 --> 00:10:44,880
configured into output

00:10:41,839 --> 00:10:46,480
all pins are output by default oh sorry

00:10:44,880 --> 00:10:47,680
input by default that's why you need to

00:10:46,480 --> 00:10:50,959
configure it into an

00:10:47,680 --> 00:10:54,600
output and then you need to

00:10:50,959 --> 00:10:57,600
to declare an echo i that i connected to

00:10:54,600 --> 00:10:59,440
pnt11

00:10:57,600 --> 00:11:01,760
so you don't need to configure it into

00:10:59,440 --> 00:11:02,399
input and because they're all input by

00:11:01,760 --> 00:11:04,000
default

00:11:02,399 --> 00:11:05,519
and then you don't need to have it

00:11:04,000 --> 00:11:06,240
mutable because we're just going to

00:11:05,519 --> 00:11:09,440
monitor

00:11:06,240 --> 00:11:09,440
how long it is high

00:11:09,600 --> 00:11:16,640
those in the comments are

00:11:12,720 --> 00:11:19,519
commandos to get your

00:11:16,640 --> 00:11:19,519
console working

00:11:20,160 --> 00:11:24,079
so with uh you can get the address of

00:11:23,200 --> 00:11:26,240
you

00:11:24,079 --> 00:11:29,680
of your arduino and then if you type

00:11:26,240 --> 00:11:31,760
screen then devty

00:11:29,680 --> 00:11:33,279
and then the address of your arduino

00:11:31,760 --> 00:11:36,000
with the portrait you can see

00:11:33,279 --> 00:11:38,399
everything how everything is showing on

00:11:36,000 --> 00:11:38,399
the screen

00:11:39,360 --> 00:11:43,839
to see things on the screen you will

00:11:41,519 --> 00:11:47,360
need a serial

00:11:43,839 --> 00:11:50,079
so uh with a receiver a sender

00:11:47,360 --> 00:11:50,800
and a baud rate so this is nothing to

00:11:50,079 --> 00:11:52,720
worry about

00:11:50,800 --> 00:11:54,160
this is something that is described in

00:11:52,720 --> 00:11:56,959
the documentation

00:11:54,160 --> 00:11:58,160
so if you just copy paste declaration of

00:11:56,959 --> 00:12:00,959
a serial you

00:11:58,160 --> 00:12:00,959
it's going to work

00:12:03,360 --> 00:12:06,959
and then in an infinite loop we are

00:12:05,440 --> 00:12:10,240
going to write

00:12:06,959 --> 00:12:13,360
zero unsafely to the timer

00:12:10,240 --> 00:12:15,760
set the trigger high for 10 microseconds

00:12:13,360 --> 00:12:19,760
and then set the trigger low again so

00:12:15,760 --> 00:12:19,760
this is going to send the sound wave

00:12:20,560 --> 00:12:24,480
then we have to manage an eventual error

00:12:23,200 --> 00:12:27,920
with the hardware

00:12:24,480 --> 00:12:31,200
so if we have

00:12:27,920 --> 00:12:32,880
waited for more than 50 000 ticks

00:12:31,200 --> 00:12:34,959
it means that we have waited for more

00:12:32,880 --> 00:12:38,000
than 200 milliseconds

00:12:34,959 --> 00:12:41,440
so this is probably an error so we need

00:12:38,000 --> 00:12:44,240
to use to exit the loop

00:12:41,440 --> 00:12:45,040
since rust is is allowing us to name

00:12:44,240 --> 00:12:47,200
loops we

00:12:45,040 --> 00:12:50,000
just write continue to where we continue

00:12:47,200 --> 00:12:50,000
to the outer loop

00:12:50,399 --> 00:12:53,920
if not if we have detected something we

00:12:52,480 --> 00:12:57,519
just write

00:12:53,920 --> 00:13:00,000
zero to the timer register

00:12:57,519 --> 00:13:00,639
and then we monitor how long the echo is

00:13:00,000 --> 00:13:02,880
high

00:13:00,639 --> 00:13:05,200
means that we don't do anything while

00:13:02,880 --> 00:13:08,639
the echo is high

00:13:05,200 --> 00:13:10,639
then we get the number of ticks in the

00:13:08,639 --> 00:13:12,160
timer register divided by the magic

00:13:10,639 --> 00:13:15,040
number 58

00:13:12,160 --> 00:13:17,920
and multiply it by 4 because the unit is

00:13:15,040 --> 00:13:17,920
4 milliseconds

00:13:18,160 --> 00:13:24,800
and then we wait a hundred milliseconds

00:13:21,279 --> 00:13:25,839
between two sound waves so 100

00:13:24,800 --> 00:13:30,160
milliseconds

00:13:25,839 --> 00:13:33,600
is corresponding to 25006

00:13:30,160 --> 00:13:49,839
and at last we print on the screen

00:13:33,600 --> 00:13:49,839
how far we are from the target

00:14:03,920 --> 00:14:08,079
now i want to show the motor driver

00:14:06,480 --> 00:14:10,240
elisia white said that the first time

00:14:08,079 --> 00:14:12,959
you will see a motor move because

00:14:10,240 --> 00:14:15,040
you decided it you will be hooked the

00:14:12,959 --> 00:14:16,399
arduino does not have enough power to

00:14:15,040 --> 00:14:19,600
move the motors

00:14:16,399 --> 00:14:22,480
so we connect it to the driver

00:14:19,600 --> 00:14:25,120
and connect the logical pins to the

00:14:22,480 --> 00:14:25,120
arduino

00:14:25,600 --> 00:14:30,079
which means that you will be plugging

00:14:28,240 --> 00:14:34,000
the cable for the wheels

00:14:30,079 --> 00:14:37,279
in those two those

00:14:34,000 --> 00:14:37,839
are to communicate with the battery and

00:14:37,279 --> 00:14:40,240
this

00:14:37,839 --> 00:14:41,440
is a five volt logical pin that i'm

00:14:40,240 --> 00:14:46,079
going to use

00:14:41,440 --> 00:14:47,920
in the demo they are also enable pin to

00:14:46,079 --> 00:14:59,839
to control the speed but this is going

00:14:47,920 --> 00:14:59,839
to be for rusty 2.0

00:15:10,480 --> 00:15:14,000
so now it's time for the walkthrough and

00:15:12,399 --> 00:15:17,120
talking a bit about

00:15:14,000 --> 00:15:19,839
no std so why do we

00:15:17,120 --> 00:15:20,240
have to work with no std which is rust

00:15:19,839 --> 00:15:23,600
no

00:15:20,240 --> 00:15:25,360
standard code on the microcontroller and

00:15:23,600 --> 00:15:28,160
in embedded there is no os

00:15:25,360 --> 00:15:29,199
to allocate memory on the heap that

00:15:28,160 --> 00:15:30,959
means that

00:15:29,199 --> 00:15:32,399
we need to do it ourselves and to

00:15:30,959 --> 00:15:34,399
indicate

00:15:32,399 --> 00:15:36,240
to the compiler that we are going to

00:15:34,399 --> 00:15:39,680
work with no std

00:15:36,240 --> 00:15:42,959
and no main we also need to

00:15:39,680 --> 00:15:44,720
build with cargo plus nightly build

00:15:42,959 --> 00:15:47,199
to indicate that we are going to use

00:15:44,720 --> 00:15:47,199
nightly

00:15:47,839 --> 00:15:54,399
to get the cargo dome

00:15:50,959 --> 00:15:55,440
configuration you can again go to

00:15:54,399 --> 00:15:58,880
average

00:15:55,440 --> 00:16:00,000
documentation here and everything is

00:15:58,880 --> 00:16:02,639
explained in

00:16:00,000 --> 00:16:03,920
point five this is what you need for

00:16:02,639 --> 00:16:09,440
your cargo file

00:16:03,920 --> 00:16:12,000
so we can go back to the code so

00:16:09,440 --> 00:16:13,519
we are going to because we are in no std

00:16:12,000 --> 00:16:16,800
we are going to

00:16:13,519 --> 00:16:20,320
need to import a panic handler

00:16:16,800 --> 00:16:22,000
so panic health here and those two are

00:16:20,320 --> 00:16:25,360
the crates that i'm importing from

00:16:22,000 --> 00:16:25,360
average to make it work

00:16:25,759 --> 00:16:30,560
those three those three crates are

00:16:28,000 --> 00:16:32,480
modules that i used to

00:16:30,560 --> 00:16:34,240
to separate my code when i was

00:16:32,480 --> 00:16:37,680
refactoring because i thought

00:16:34,240 --> 00:16:39,040
that it would be more clear and also

00:16:37,680 --> 00:16:42,720
because i was training with

00:16:39,040 --> 00:16:42,720
rust data structures

00:16:43,440 --> 00:16:47,920
to make it work you will need some

00:16:45,199 --> 00:16:50,240
constants how long do you want

00:16:47,920 --> 00:16:51,839
your robot to wait between two actions

00:16:50,240 --> 00:16:54,880
the minimum distance

00:16:51,839 --> 00:16:57,360
you want it to have between between

00:16:54,880 --> 00:16:58,959
itself and an obstacle and what is an

00:16:57,360 --> 00:17:02,000
acceptable distance to make an

00:16:58,959 --> 00:17:04,959
alternative choice so this

00:17:02,000 --> 00:17:06,959
macro is an attribute macro since we're

00:17:04,959 --> 00:17:09,600
working with no std we have to indicate

00:17:06,959 --> 00:17:12,799
that is the point of entry of the code

00:17:09,600 --> 00:17:14,559
and the exclamation mark here is uh

00:17:12,799 --> 00:17:16,799
never type it means that nothing should

00:17:14,559 --> 00:17:19,919
return from this function

00:17:16,799 --> 00:17:21,760
so we start by downloading downloading

00:17:19,919 --> 00:17:25,439
everything we have

00:17:21,760 --> 00:17:25,439
um on the mcu

00:17:26,959 --> 00:17:32,240
and then we collapse all the pins into a

00:17:30,080 --> 00:17:33,679
single variable that we're going to use

00:17:32,240 --> 00:17:36,799
here

00:17:33,679 --> 00:17:38,320
this is the general timer that we has

00:17:36,799 --> 00:17:40,400
been pre-skilled

00:17:38,320 --> 00:17:41,600
by a factor of 64 that we're going to

00:17:40,400 --> 00:17:45,440
use

00:17:41,600 --> 00:17:46,720
mostly with the the sensor but also as a

00:17:45,440 --> 00:17:48,799
general

00:17:46,720 --> 00:17:51,280
time checker for the whole project and

00:17:48,799 --> 00:17:54,559
then the timer 2

00:17:51,280 --> 00:17:56,480
and its pin d3 that we're going to use

00:17:54,559 --> 00:17:58,480
for the servo

00:17:56,480 --> 00:17:59,919
then i created the servo unit and the

00:17:58,480 --> 00:18:02,320
sensor unit

00:17:59,919 --> 00:18:03,440
this was mostly to work with ros data

00:18:02,320 --> 00:18:07,120
structures

00:18:03,440 --> 00:18:10,240
you absolutely do not need to to do that

00:18:07,120 --> 00:18:14,960
it's going to work fine

00:18:10,240 --> 00:18:18,640
then i connected those logical pins

00:18:14,960 --> 00:18:21,600
to d7 d6 d5 and d4

00:18:18,640 --> 00:18:21,600
and gave them

00:18:24,080 --> 00:18:28,559
gave them very long variable names to

00:18:26,880 --> 00:18:31,840
refer to each wheel

00:18:28,559 --> 00:18:33,840
and then those pins can be downgraded

00:18:31,840 --> 00:18:35,280
downgraded means that they can be put in

00:18:33,840 --> 00:18:37,600
a mutable array

00:18:35,280 --> 00:18:39,760
that we can send to other modules to

00:18:37,600 --> 00:18:42,240
make to modify them

00:18:39,760 --> 00:18:43,120
but main is still wheels is still the

00:18:42,240 --> 00:18:46,559
owner

00:18:43,120 --> 00:18:48,240
of those wheels and then the infinite

00:18:46,559 --> 00:18:50,960
loop that is going to control

00:18:48,240 --> 00:18:52,960
a robot it's still called outer loop and

00:18:50,960 --> 00:18:56,480
it starts with the

00:18:52,960 --> 00:18:58,320
servo unit that is rotated to the front

00:18:56,480 --> 00:18:59,840
and then the wheels are going to move

00:18:58,320 --> 00:19:03,039
forward

00:18:59,840 --> 00:19:04,240
we're reading the value with the sensor

00:19:03,039 --> 00:19:07,280
continuously

00:19:04,240 --> 00:19:10,000
but if the value is smaller than the

00:19:07,280 --> 00:19:13,440
minimal distance that we decided

00:19:10,000 --> 00:19:13,440
then we are going to stop the wheels

00:19:13,840 --> 00:19:18,000
i'm going to show a bit later how to

00:19:16,480 --> 00:19:20,880
stop the wheels

00:19:18,000 --> 00:19:21,919
and then check the distance at the right

00:19:20,880 --> 00:19:24,640
we are going to use the

00:19:21,919 --> 00:19:26,160
to turn the servo to the right uh get

00:19:24,640 --> 00:19:28,000
the value here

00:19:26,160 --> 00:19:29,360
wait between two action and then do the

00:19:28,000 --> 00:19:33,120
same for the left

00:19:29,360 --> 00:19:35,440
and the rest is just a if else sandwich

00:19:33,120 --> 00:19:36,480
if the value on the left is bigger than

00:19:35,440 --> 00:19:39,200
the value on the right

00:19:36,480 --> 00:19:41,840
and if it's an acceptable distance like

00:19:39,200 --> 00:19:43,840
if there is not another obstacle here

00:19:41,840 --> 00:19:44,960
then we are going to turn the wheels

00:19:43,840 --> 00:19:47,600
left

00:19:44,960 --> 00:19:49,280
and then continue to the outer loop that

00:19:47,600 --> 00:19:52,880
is go forward

00:19:49,280 --> 00:19:55,760
else if the value on the right is

00:19:52,880 --> 00:19:58,240
better then we're going to turn right

00:19:55,760 --> 00:20:02,000
and then continue to the outer loop

00:19:58,240 --> 00:20:04,880
else we're just going to go backwards

00:20:02,000 --> 00:20:04,880
and turn right

00:20:05,360 --> 00:20:08,400
so i'm going to show the motor i think

00:20:07,120 --> 00:20:12,480
this is

00:20:08,400 --> 00:20:12,480
the only thing that i didn't show

00:20:14,799 --> 00:20:19,360
so we can decide the constant for how

00:20:17,919 --> 00:20:24,320
long do we want our

00:20:19,360 --> 00:20:27,039
car to turn and moving forward it's just

00:20:24,320 --> 00:20:28,960
receiving a mutable reference to the

00:20:27,039 --> 00:20:31,679
wheels

00:20:28,960 --> 00:20:33,280
this type seems really really long but

00:20:31,679 --> 00:20:34,880
you know how you do with rust

00:20:33,280 --> 00:20:36,720
when you don't know type you just

00:20:34,880 --> 00:20:38,720
declare another type and the compiler

00:20:36,720 --> 00:20:40,480
compiler is going to complain and give

00:20:38,720 --> 00:20:42,720
you the right type and then you can just

00:20:40,480 --> 00:20:46,880
copy paste it

00:20:42,720 --> 00:20:49,840
i did some unpacking here i

00:20:46,880 --> 00:20:51,200
put the wheels into a new array to make

00:20:49,840 --> 00:20:54,880
sure that

00:20:51,200 --> 00:20:57,039
i write it correctly

00:20:54,880 --> 00:20:58,400
and then you just need when you go

00:20:57,039 --> 00:21:01,919
forward you just need to

00:20:58,400 --> 00:21:03,600
set the forward the left

00:21:01,919 --> 00:21:06,480
forward motion and the right forward

00:21:03,600 --> 00:21:08,159
motion high and the left backward motion

00:21:06,480 --> 00:21:10,480
in the right backward motion

00:21:08,159 --> 00:21:10,480
low

00:21:11,679 --> 00:21:16,559
and to turn right you need to stop the

00:21:14,960 --> 00:21:20,080
wheels

00:21:16,559 --> 00:21:22,799
that is exactly the i mean to

00:21:20,080 --> 00:21:23,520
to stop the wheels you just need to set

00:21:22,799 --> 00:21:26,400
all the pins

00:21:23,520 --> 00:21:27,919
low right i just re removed it from the

00:21:26,400 --> 00:21:31,520
presentation for

00:21:27,919 --> 00:21:35,039
a clarity and to turn right

00:21:31,520 --> 00:21:37,840
you have to set the

00:21:35,039 --> 00:21:39,120
the left forward wheel high and the

00:21:37,840 --> 00:21:42,480
right forward

00:21:39,120 --> 00:21:45,200
will low for an amount of time so

00:21:42,480 --> 00:21:48,320
if you move the left wheel the robot is

00:21:45,200 --> 00:21:48,320
going to turn to the right

00:21:52,080 --> 00:21:56,240
you need to know where to find help

00:21:54,480 --> 00:21:57,440
actually if there is one thing you must

00:21:56,240 --> 00:22:00,240
get from this top

00:21:57,440 --> 00:22:02,159
is where to find help the ros community

00:22:00,240 --> 00:22:04,400
is very welcoming and one of their core

00:22:02,159 --> 00:22:06,159
values is to provide a safe friendly and

00:22:04,400 --> 00:22:07,919
welcoming environment

00:22:06,159 --> 00:22:09,679
this is a community in which i felt safe

00:22:07,919 --> 00:22:11,120
and comfortable from day one

00:22:09,679 --> 00:22:12,960
you can ask any question on the

00:22:11,120 --> 00:22:14,880
community forum

00:22:12,960 --> 00:22:16,640
then the rust embedded working group is

00:22:14,880 --> 00:22:18,480
also living by those values

00:22:16,640 --> 00:22:20,240
overall people have been providing me

00:22:18,480 --> 00:22:22,000
with technical consultancy

00:22:20,240 --> 00:22:24,480
as well as psychological support since

00:22:22,000 --> 00:22:26,400
the start of my adventures in rust

00:22:24,480 --> 00:22:28,240
when i arrived to the embedded matrix

00:22:26,400 --> 00:22:30,080
people realized i did not know anything

00:22:28,240 --> 00:22:33,280
and send me to do some homework

00:22:30,080 --> 00:22:35,039
but help me anyway i want particularly

00:22:33,280 --> 00:22:38,840
to thank reichs who mentored me

00:22:35,039 --> 00:22:41,280
helped me with his create a viral and my

00:22:38,840 --> 00:22:42,880
code

00:22:41,280 --> 00:22:44,320
so that's it thank you very much for

00:22:42,880 --> 00:22:47,440
your attention

00:22:44,320 --> 00:22:49,840
uh all the project is on on github

00:22:47,440 --> 00:22:51,760
so please don't hesitate to do whatever

00:22:49,840 --> 00:22:55,280
you want with it and

00:22:51,760 --> 00:22:56,240
show me what you did you can ask me any

00:22:55,280 --> 00:22:58,640
question you like

00:22:56,240 --> 00:23:02,400
and i think that's it thank you very

00:22:58,640 --> 00:23:02,400
much again and it's time for the

00:23:06,840 --> 00:23:16,660
surprise

00:23:09,340 --> 00:23:16,660
[Music]

00:23:21,200 --> 00:23:24,799
rusty wanna see me riding rusty wanna

00:23:24,240 --> 00:23:28,559
see me

00:23:24,799 --> 00:23:33,039
riding rusty my servos burn

00:23:28,559 --> 00:23:37,840
let's blink i think i'm cool to see you

00:23:33,039 --> 00:23:37,840
riding rusty won't see me

00:23:38,300 --> 00:23:41,349
[Music]

00:23:48,840 --> 00:23:51,840
is

00:23:59,790 --> 00:24:05,840
[Music]

00:24:02,840 --> 00:24:05,840
is

00:24:19,770 --> 00:24:22,839
[Music]

00:24:25,410 --> 00:24:28,749
[Music]

00:24:31,520 --> 00:24:37,200
that was incredible

00:24:34,640 --> 00:24:38,880
it's so good that you all could not see

00:24:37,200 --> 00:24:41,039
me during the talk because it was just

00:24:38,880 --> 00:24:44,400
me grinning from ear to ear and like

00:24:41,039 --> 00:24:44,400
clapping my hands off

00:24:45,200 --> 00:24:48,640
i said i was excited about this talk but

00:24:47,039 --> 00:24:51,679
wow

00:24:48,640 --> 00:24:54,880
um thank you so much

00:24:51,679 --> 00:24:57,279
that was an incredible talk and

00:24:54,880 --> 00:24:58,400
yeah like you mentioned the community at

00:24:57,279 --> 00:25:00,960
the end

00:24:58,400 --> 00:25:02,960
and your love for it and you're being

00:25:00,960 --> 00:25:06,159
such an integral part of it

00:25:02,960 --> 00:25:08,400
at least timmy shows so much

00:25:06,159 --> 00:25:09,600
because it's that spirit you like you

00:25:08,400 --> 00:25:11,200
just held our hand

00:25:09,600 --> 00:25:13,200
through all of that if somebody wanted

00:25:11,200 --> 00:25:14,240
to try that out you were like i messed

00:25:13,200 --> 00:25:17,440
up here there

00:25:14,240 --> 00:25:20,240
and you know ah

00:25:17,440 --> 00:25:20,799
thank you so much that was really really

00:25:20,240 --> 00:25:23,919
great

00:25:20,799 --> 00:25:25,360
and as a special treat i mean besides

00:25:23,919 --> 00:25:27,760
the amazing ending

00:25:25,360 --> 00:25:28,720
uh isata is actually here to join us for

00:25:27,760 --> 00:25:30,559
a live q a

00:25:28,720 --> 00:25:32,400
so i'm going to add her on now and we

00:25:30,559 --> 00:25:33,840
had a lot of questions in the chat

00:25:32,400 --> 00:25:36,320
so we'll try to get through as many of

00:25:33,840 --> 00:25:39,679
those as we can

00:25:36,320 --> 00:25:41,520
so hi isata you're live with us now

00:25:39,679 --> 00:25:43,120
hello thank you so much you are

00:25:41,520 --> 00:25:46,640
fantastic

00:25:43,120 --> 00:25:48,480
fantastic sorry i'm all confused with

00:25:46,640 --> 00:25:50,000
english right now i mean you had to

00:25:48,480 --> 00:25:51,440
watch your own talk i don't know how you

00:25:50,000 --> 00:25:56,240
could do that personally i can't

00:25:51,440 --> 00:26:00,080
yes on youtube don't ask we do oh

00:25:56,240 --> 00:26:00,400
my voice what an amazing talk really i

00:26:00,080 --> 00:26:02,080
was

00:26:00,400 --> 00:26:04,480
i was so excited i absolutely called

00:26:02,080 --> 00:26:06,320
dibs on introducing and being here for

00:26:04,480 --> 00:26:10,240
this talk

00:26:06,320 --> 00:26:10,960
um so um in the chat you actually

00:26:10,240 --> 00:26:12,720
mentioned

00:26:10,960 --> 00:26:14,080
that you were kind of cringing because

00:26:12,720 --> 00:26:14,960
there were some things you would have

00:26:14,080 --> 00:26:16,720
liked to correct

00:26:14,960 --> 00:26:18,559
do you want to do so now just so we have

00:26:16,720 --> 00:26:20,000
it you know like you notice these things

00:26:18,559 --> 00:26:21,200
you don't need any angry

00:26:20,000 --> 00:26:22,799
there's not going to be any angry

00:26:21,200 --> 00:26:24,320
youtube comments but you know our

00:26:22,799 --> 00:26:27,360
community is great but

00:26:24,320 --> 00:26:29,919
yeah that's true do you want to make

00:26:27,360 --> 00:26:32,559
any corrections oh there there are so

00:26:29,919 --> 00:26:32,559
many uh

00:26:34,640 --> 00:26:38,159
you know at some point i say something

00:26:36,240 --> 00:26:43,279
about this the sound and then i

00:26:38,159 --> 00:26:45,760
i jump from 340 to 334 thousand

00:26:43,279 --> 00:26:46,320
and it's because you know it was really

00:26:45,760 --> 00:26:48,400
weird

00:26:46,320 --> 00:26:50,559
uh it's because i was looking in meters

00:26:48,400 --> 00:26:51,360
and then in centimeters and i forgot to

00:26:50,559 --> 00:26:54,480
do that

00:26:51,360 --> 00:26:55,520
to explain it and then oh i don't even

00:26:54,480 --> 00:26:58,000
know what to say and then

00:26:55,520 --> 00:26:59,279
i i saw that in my comments i write

00:26:58,000 --> 00:27:03,120
something about the god

00:26:59,279 --> 00:27:07,360
but that was embarrassing

00:27:03,120 --> 00:27:09,520
like how to be a god but uh i meant that

00:27:07,360 --> 00:27:11,600
the sensor is working like a butt and

00:27:09,520 --> 00:27:14,480
well let's just forget that

00:27:11,600 --> 00:27:15,520
oh i mean if it's fair at all i think it

00:27:14,480 --> 00:27:17,279
was very clear

00:27:15,520 --> 00:27:18,799
like i know we're we're multicultural

00:27:17,279 --> 00:27:19,440
and everything so everyone might not be

00:27:18,799 --> 00:27:20,880
uh

00:27:19,440 --> 00:27:22,640
might might not be on the same

00:27:20,880 --> 00:27:24,480
technological or

00:27:22,640 --> 00:27:25,840
or english speaking level but i actually

00:27:24,480 --> 00:27:27,279
thought the two things you mentioned

00:27:25,840 --> 00:27:29,760
were fairly clear

00:27:27,279 --> 00:27:31,279
so you know but thank you for clearing

00:27:29,760 --> 00:27:33,039
that up too

00:27:31,279 --> 00:27:34,399
yeah maybe i should not speak about all

00:27:33,039 --> 00:27:36,080
the errors but

00:27:34,399 --> 00:27:38,159
you know speak about the community

00:27:36,080 --> 00:27:40,880
because instead of

00:27:38,159 --> 00:27:42,320
thinking about the bad things the the

00:27:40,880 --> 00:27:43,919
good things that's true that when i

00:27:42,320 --> 00:27:46,000
joined the ross community it was just

00:27:43,919 --> 00:27:48,000
the only time that i used my

00:27:46,000 --> 00:27:50,000
my own name and my own picture on the

00:27:48,000 --> 00:27:52,480
internet and i never do that because

00:27:50,000 --> 00:27:54,399
you know you're always afraid of me

00:27:52,480 --> 00:27:57,039
comments and abuse and

00:27:54,399 --> 00:27:58,320
but yeah like from day one it never

00:27:57,039 --> 00:28:00,840
happened

00:27:58,320 --> 00:28:02,080
it never happened and i felt so welcomed

00:28:00,840 --> 00:28:04,720
anywhere

00:28:02,080 --> 00:28:05,760
i think i made a full request after a

00:28:04,720 --> 00:28:08,720
week

00:28:05,760 --> 00:28:10,320
so that's amazing you know i know people

00:28:08,720 --> 00:28:11,440
who've been in the industry for years

00:28:10,320 --> 00:28:14,640
and years

00:28:11,440 --> 00:28:16,559
and they're too scared uh to make prs to

00:28:14,640 --> 00:28:18,399
put their stuff out there so that's

00:28:16,559 --> 00:28:19,600
really cool it's so great that you

00:28:18,399 --> 00:28:21,520
actually went for it

00:28:19,600 --> 00:28:23,120
and that you felt safe and comfortable

00:28:21,520 --> 00:28:24,320
to do so i hope

00:28:23,120 --> 00:28:26,000
you know that's why i love your

00:28:24,320 --> 00:28:27,840
mentoring work as well you mentioning

00:28:26,000 --> 00:28:29,039
that and you're sharing so much with us

00:28:27,840 --> 00:28:31,039
because

00:28:29,039 --> 00:28:33,760
you're encouraging other people to feel

00:28:31,039 --> 00:28:37,120
safe to go for it to also try it and

00:28:33,760 --> 00:28:38,559
that's amazing so thank you so much um

00:28:37,120 --> 00:28:40,720
do you mind if i go into a couple of

00:28:38,559 --> 00:28:44,240
questions that were on the chat

00:28:40,720 --> 00:28:46,880
uh no please yeah my child is here

00:28:44,240 --> 00:28:49,200
that's all right don't worry about it

00:28:46,880 --> 00:28:52,559
we're all at home

00:28:49,200 --> 00:28:56,559
we're all in it together um so i think

00:28:52,559 --> 00:28:59,440
a couple of fun ones for you first um

00:28:56,559 --> 00:29:00,320
so you know there was kind of the line

00:28:59,440 --> 00:29:03,200
of thinking of

00:29:00,320 --> 00:29:05,039
why robots is it hard to start off with

00:29:03,200 --> 00:29:09,120
something that's embedded

00:29:05,039 --> 00:29:11,279
and what your next planned robot is

00:29:09,120 --> 00:29:13,039
i think people are very fascinated by

00:29:11,279 --> 00:29:15,600
the topic of embedded and

00:29:13,039 --> 00:29:17,600
robots so please like i saw how excited

00:29:15,600 --> 00:29:20,159
you're for it

00:29:17,600 --> 00:29:22,159
yeah uh okay so what i really wanted to

00:29:20,159 --> 00:29:24,080
convey with this talk was

00:29:22,159 --> 00:29:26,480
uh it's it's not that hard you have to

00:29:24,080 --> 00:29:28,320
have you have to have help and

00:29:26,480 --> 00:29:29,679
if you have the right help it's not it's

00:29:28,320 --> 00:29:32,480
not that difficult and

00:29:29,679 --> 00:29:33,360
the most difficult is really how do i

00:29:32,480 --> 00:29:35,440
start with it

00:29:33,360 --> 00:29:37,840
and this is what i wanted to show in my

00:29:35,440 --> 00:29:39,360
talk how do you get started and then

00:29:37,840 --> 00:29:41,120
i mean i'm pretty sure all of you you

00:29:39,360 --> 00:29:41,919
have you have your own idea you have

00:29:41,120 --> 00:29:43,760
your own

00:29:41,919 --> 00:29:44,960
you're on your own objective you you

00:29:43,760 --> 00:29:47,200
have your own yeah

00:29:44,960 --> 00:29:49,200
crazy stuff that you want to implement i

00:29:47,200 --> 00:29:50,799
was talking robots so i don't know

00:29:49,200 --> 00:29:52,640
uh every time i speak to people

00:29:50,799 --> 00:29:54,640
everybody comes up with with great

00:29:52,640 --> 00:29:57,200
things so i just wanted to show

00:29:54,640 --> 00:29:58,799
how yeah the components that i'm using

00:29:57,200 --> 00:30:01,760
how can you

00:29:58,799 --> 00:30:02,720
how do they work so you can put them to

00:30:01,760 --> 00:30:04,000
use

00:30:02,720 --> 00:30:06,559
i don't know maybe you want to have a

00:30:04,000 --> 00:30:09,279
fridge that comments

00:30:06,559 --> 00:30:10,960
if you open it at night so yeah this is

00:30:09,279 --> 00:30:14,000
something you can do with

00:30:10,960 --> 00:30:16,480
with this stuff but when um yeah

00:30:14,000 --> 00:30:17,760
absolutely you get started well that's

00:30:16,480 --> 00:30:20,000
what i wanted to say like

00:30:17,760 --> 00:30:21,200
watching your talk i was definitely like

00:30:20,000 --> 00:30:22,720
oh i'm gonna

00:30:21,200 --> 00:30:24,480
i love that you mentioned where to get

00:30:22,720 --> 00:30:26,320
the things how to spot

00:30:24,480 --> 00:30:27,679
fakes and stuff because definitely

00:30:26,320 --> 00:30:30,960
watching your talk i was like

00:30:27,679 --> 00:30:34,159
i want to do something too like i really

00:30:30,960 --> 00:30:36,640
want to go by component

00:30:34,159 --> 00:30:37,600
and it's really cool it's really fun and

00:30:36,640 --> 00:30:39,039
easy so

00:30:37,600 --> 00:30:42,000
please go for it and then you have to

00:30:39,039 --> 00:30:42,000
show me i want to see

00:30:42,399 --> 00:30:49,760
ah so yeah any any thank you for that um

00:30:45,440 --> 00:30:53,520
any any future plans for more robots

00:30:49,760 --> 00:30:56,240
oh yeah i so i i i brought my

00:30:53,520 --> 00:30:57,360
root off to skull so now it's just it's

00:30:56,240 --> 00:31:01,600
not

00:30:57,360 --> 00:31:04,720
yet done as you see the the head is not

00:31:01,600 --> 00:31:08,159
it's not it can't be close but i

00:31:04,720 --> 00:31:09,440
this is also um you know you can do that

00:31:08,159 --> 00:31:11,600
with um

00:31:09,440 --> 00:31:12,640
whatever small board you want and then a

00:31:11,600 --> 00:31:15,279
small sensor

00:31:12,640 --> 00:31:19,600
and then uh it reacts to sun but also to

00:31:15,279 --> 00:31:22,399
shock so if you if you

00:31:19,600 --> 00:31:23,120
turn the battery on first because then

00:31:22,399 --> 00:31:24,559
the demo

00:31:23,120 --> 00:31:27,039
with one of the demo is not going to

00:31:24,559 --> 00:31:29,279
work and you can put some

00:31:27,039 --> 00:31:31,120
lead into it and then program that thing

00:31:29,279 --> 00:31:34,240
with a few for loops

00:31:31,120 --> 00:31:36,399
and that is so cool thank you for

00:31:34,240 --> 00:31:40,240
bringing it that's an excellent

00:31:36,399 --> 00:31:42,159
project yeah i hope

00:31:40,240 --> 00:31:45,679
that's amazing i hope people are

00:31:42,159 --> 00:31:49,519
entering into the q a to get to see this

00:31:45,679 --> 00:31:53,200
that's so cool oh wow

00:31:49,519 --> 00:31:57,120
thank you thank you

00:31:53,200 --> 00:31:59,039
thank you i'm all sweaty and happy and

00:31:57,120 --> 00:32:01,120
oh that's just part of being the

00:31:59,039 --> 00:32:05,039
community and and part of

00:32:01,120 --> 00:32:08,320
you know getting to partake in this um

00:32:05,039 --> 00:32:10,159
so i think

00:32:08,320 --> 00:32:11,840
i wanted to jump onto more technical

00:32:10,159 --> 00:32:14,320
questions but i think

00:32:11,840 --> 00:32:15,600
um we actually have to go to the next

00:32:14,320 --> 00:32:16,960
talk

00:32:15,600 --> 00:32:18,880
but i mean you got to show us the next

00:32:16,960 --> 00:32:20,000
project so that's super cool thank you

00:32:18,880 --> 00:32:22,960
so much for joining us

00:32:20,000 --> 00:32:23,760
thank you for everything i'm just uh i'm

00:32:22,960 --> 00:32:26,480
so happy to be

00:32:23,760 --> 00:32:28,320
here it's been so amazing thank you for

00:32:26,480 --> 00:32:31,279
being here um

00:32:28,320 --> 00:32:32,880
we'll see you in the chat right yes that

00:32:31,279 --> 00:32:34,720
was great

00:32:32,880 --> 00:32:36,080
wonderful thank you so much for joining

00:32:34,720 --> 00:32:37,840
us again

00:32:36,080 --> 00:32:43,840
i mean not by because we'll be in the

00:32:37,840 --> 00:32:43,840
chat we'll see in the chat exactly

00:32:47,039 --> 00:32:49,120

YouTube URL: https://www.youtube.com/watch?v=K2n3uS5BAR8


