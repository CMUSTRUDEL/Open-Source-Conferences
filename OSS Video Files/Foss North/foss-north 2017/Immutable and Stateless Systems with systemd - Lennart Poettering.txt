Title: Immutable and Stateless Systems with systemd - Lennart Poettering
Publication date: 2017-04-29
Playlist: foss-north 2017
Description: 
	In many embedded and IoT applications, but also on trusted web servers and end-user devices, read-only and cryptographically protected OS images are essential. In this talk I will discuss how systemd helps with setups like this, how to create and update immutable, stateless and volatile OS images, and how systemd will help you booting and keeping them up.

Discussed technologies will be systemd itself, Verity, the "mkosi" experimental image generator, systemd volatile boot modes, and more.

--

Lennart Pottering from Red Hat is known for systemd, PulseAudio, Avahi and more. He has been contributing to open source since the early 2000's.

http://foss-north.se/talks.html#poettering
Captions: 
	00:00:00,030 --> 00:00:06,210
strange coincidence with the three first

00:00:02,700 --> 00:00:14,849
speakers we're open Berlin but soroban

00:00:06,210 --> 00:00:18,000
is yeah so just okay I think you might

00:00:14,849 --> 00:00:19,859
want it slightly closer this doesn't

00:00:18,000 --> 00:00:25,230
work out in the background good yep

00:00:19,859 --> 00:00:28,380
awesome okay I'm going to do Sally time

00:00:25,230 --> 00:00:31,640
Eagle targeting but then again I try not

00:00:28,380 --> 00:00:34,320
to go too much into technical example if

00:00:31,640 --> 00:00:37,649
you guys are not that much interested if

00:00:34,320 --> 00:00:38,790
you also really love oh in general by

00:00:37,649 --> 00:00:40,770
the way if you have any questions about

00:00:38,790 --> 00:00:42,690
a subsidized presenting absolutely

00:00:40,770 --> 00:00:44,300
interrupting right away I much prefer

00:00:42,690 --> 00:00:48,750
having talks well we have a discussion

00:00:44,300 --> 00:00:51,510
between you and me instead of just me

00:00:48,750 --> 00:00:52,980
talking and you listening so yeah done

00:00:51,510 --> 00:00:56,430
wait with questions to the end it's just

00:00:52,980 --> 00:00:59,899
interrupting right away and I'm going I

00:00:56,430 --> 00:01:02,520
work on system V of course and with this

00:00:59,899 --> 00:01:05,489
talk I kind of want to vent to you a

00:01:02,520 --> 00:01:07,500
little bit about something on I call

00:01:05,489 --> 00:01:10,650
immutable data systems with a finding or

00:01:07,500 --> 00:01:13,710
just something we have been working on

00:01:10,650 --> 00:01:19,110
it towards with system D and in general

00:01:13,710 --> 00:01:20,759
slowly but surely this certainly need an

00:01:19,110 --> 00:01:23,610
introduction is everybody in our system

00:01:20,759 --> 00:01:29,390
is just somebody not know what system

00:01:23,610 --> 00:01:32,820
you okay I don't take that serious but

00:01:29,390 --> 00:01:34,140
yeah so appreciate to me is assistant

00:01:32,820 --> 00:01:35,850
manager right and so it's kind of

00:01:34,140 --> 00:01:40,470
obvious to do something with systems

00:01:35,850 --> 00:01:42,630
then next but yes Larry Ganem and what

00:01:40,470 --> 00:01:44,310
do you actually need my systems here I'm

00:01:42,630 --> 00:01:45,270
an operating systems guy and that's

00:01:44,310 --> 00:01:47,850
precisely what I mean

00:01:45,270 --> 00:01:49,560
I mean operating systems I mean systems

00:01:47,850 --> 00:01:51,659
like newer computers but not just

00:01:49,560 --> 00:01:53,100
computers mobile phone cars whatever

00:01:51,659 --> 00:01:55,460
else everything that runs an operating

00:01:53,100 --> 00:02:00,240
system basically what do I mean by

00:01:55,460 --> 00:02:01,380
immutable system like immutable system

00:02:00,240 --> 00:02:04,920
in there in the context I'm talking

00:02:01,380 --> 00:02:08,890
about well here is about security it's

00:02:04,920 --> 00:02:14,500
about having an OS image that is

00:02:08,890 --> 00:02:17,020
cannot be modified by an attacker I mean

00:02:14,500 --> 00:02:18,910
we live in a world these days like a

00:02:17,020 --> 00:02:21,850
host known world where everybody knows

00:02:18,910 --> 00:02:24,250
that the NSA and private hackers and who

00:02:21,850 --> 00:02:26,440
else are capable is doing large-scale

00:02:24,250 --> 00:02:28,720
attacks across the entire regiment and

00:02:26,440 --> 00:02:31,360
collects and botnets and whatever was

00:02:28,720 --> 00:02:33,400
exploited systems I think in that world

00:02:31,360 --> 00:02:35,410
for coming from an average isn't

00:02:33,400 --> 00:02:37,090
perspective it's kind of my duty in a

00:02:35,410 --> 00:02:38,950
way to make sure that that people who

00:02:37,090 --> 00:02:40,300
use our stuff to those operating system

00:02:38,950 --> 00:02:43,360
to build systems with our operating

00:02:40,300 --> 00:02:47,230
system do it in a way that makes these

00:02:43,360 --> 00:02:48,610
kind of things difficult and yeah this

00:02:47,230 --> 00:02:49,840
is where mutable systems come into play

00:02:48,610 --> 00:02:51,959
immutable system basically means that

00:02:49,840 --> 00:02:54,670
you have a read-only disk image and

00:02:51,959 --> 00:02:57,450
that's why you boot on off every time

00:02:54,670 --> 00:03:01,060
and that there is no way to manipulate

00:02:57,450 --> 00:03:03,670
that disk image and still be able to use

00:03:01,060 --> 00:03:05,709
the device right so this is basically

00:03:03,670 --> 00:03:07,570
the way how you can ensure that that

00:03:05,709 --> 00:03:09,370
that the device only runs the original

00:03:07,570 --> 00:03:11,800
words in the vendor supply or you

00:03:09,370 --> 00:03:14,050
supplied and cannot be modified by

00:03:11,800 --> 00:03:16,300
somebody else hack into it modify a

00:03:14,050 --> 00:03:17,610
change slightly and turn it into a

00:03:16,300 --> 00:03:20,140
botnet

00:03:17,610 --> 00:03:22,690
member or something like that right so

00:03:20,140 --> 00:03:24,430
the idea basically is set for on my

00:03:22,690 --> 00:03:27,970
laptop for example I could make sure

00:03:24,430 --> 00:03:30,250
that this latter was only run precisely

00:03:27,970 --> 00:03:32,650
that's operating system version that I

00:03:30,250 --> 00:03:34,510
put together and if somebody got access

00:03:32,650 --> 00:03:36,940
to my device which they will eventually

00:03:34,510 --> 00:03:39,010
to know later like the evil made right

00:03:36,940 --> 00:03:40,989
like um when I leave my left of it

00:03:39,010 --> 00:03:43,450
that's how more the hotel or something

00:03:40,989 --> 00:03:46,420
like that then I can be sure that when I

00:03:43,450 --> 00:03:48,220
go back to my laptop um at least the

00:03:46,420 --> 00:03:50,680
software hasn't been meted manipulated

00:03:48,220 --> 00:03:54,040
or complement to it or if it has been

00:03:50,680 --> 00:03:56,100
manipulated will refuse to boot this is

00:03:54,040 --> 00:03:59,140
not only relevant for me as a hacker and

00:03:56,100 --> 00:04:00,640
my paranoia it's generally I think how

00:03:59,140 --> 00:04:02,950
computers has to be designed these days

00:04:00,640 --> 00:04:06,310
right regardless if you build a car or

00:04:02,950 --> 00:04:09,459
you feel that a light bulb or you build

00:04:06,310 --> 00:04:11,170
anything right anything ever it it

00:04:09,459 --> 00:04:13,269
really or if you build a server by the

00:04:11,170 --> 00:04:16,269
way too um if you build anything that is

00:04:13,269 --> 00:04:18,070
publicly accessible physically or so the

00:04:16,269 --> 00:04:18,870
internet um you need to make sure that

00:04:18,070 --> 00:04:23,550
you

00:04:18,870 --> 00:04:25,440
so yeah the other thing that's in the

00:04:23,550 --> 00:04:29,250
type of my talk I use the stadia

00:04:25,440 --> 00:04:31,590
assistance what do I mean by that now

00:04:29,250 --> 00:04:34,139
that I mean that a system doesn't

00:04:31,590 --> 00:04:36,030
actually maintain spec right and what

00:04:34,139 --> 00:04:38,340
the precise definition of state in

00:04:36,030 --> 00:04:40,199
particularly in particular and

00:04:38,340 --> 00:04:43,260
incorporation to configuration learning

00:04:40,199 --> 00:04:47,010
isn't entirely clear that is what what

00:04:43,260 --> 00:04:49,260
is the person say that yeah there's

00:04:47,010 --> 00:04:52,220
nothing stored during runtime on disk or

00:04:49,260 --> 00:04:54,450
if it is under there's a nice way to

00:04:52,220 --> 00:04:57,750
remove it for example by power cycling

00:04:54,450 --> 00:04:59,370
right so estate the system is basically

00:04:57,750 --> 00:05:00,870
one where you have to get a key every

00:04:59,370 --> 00:05:02,910
time you turn long it's an exactly the

00:05:00,870 --> 00:05:05,220
same you expected to be right so that's

00:05:02,910 --> 00:05:07,050
um if it only boots athletes the exact

00:05:05,220 --> 00:05:08,850
version of software that you wanted to

00:05:07,050 --> 00:05:10,110
boot up then you know that there's

00:05:08,850 --> 00:05:13,650
nothing else left over from the previous

00:05:10,110 --> 00:05:15,900
one um yeah I mean televizzle can mean

00:05:13,650 --> 00:05:17,460
either that that happens on every boot

00:05:15,900 --> 00:05:19,169
up but it can also mean that it happens

00:05:17,460 --> 00:05:21,419
only on select food herbs like for

00:05:19,169 --> 00:05:23,940
example to press the factory reset

00:05:21,419 --> 00:05:25,919
button or something like that

00:05:23,940 --> 00:05:27,600
you have a last thing in the title what

00:05:25,919 --> 00:05:30,330
this can be and I think you know what

00:05:27,600 --> 00:05:34,080
that is so I'm not going to talk about

00:05:30,330 --> 00:05:35,970
that um yeah kind of cleanse of why

00:05:34,080 --> 00:05:37,830
already a little bit it's primarily

00:05:35,970 --> 00:05:40,830
about security we live in this world

00:05:37,830 --> 00:05:44,880
where IOT and web servers are universal

00:05:40,830 --> 00:05:46,620
and in that world I think this is how

00:05:44,880 --> 00:05:49,260
devices have to be designed these days

00:05:46,620 --> 00:05:50,910
right I mean it hasn't sunk in into the

00:05:49,260 --> 00:05:53,700
air and minds of the amplitude

00:05:50,910 --> 00:05:55,050
developers so far properly really like

00:05:53,700 --> 00:05:57,720
because we have all these light bulbs

00:05:55,050 --> 00:06:00,180
that can be used as partners and it

00:05:57,720 --> 00:06:03,150
hasn't sunk in into the general mind of

00:06:00,180 --> 00:06:04,740
the administrative either because data

00:06:03,150 --> 00:06:07,580
centers are still exploitable in the big

00:06:04,740 --> 00:06:09,810
scale like this but I think as

00:06:07,580 --> 00:06:11,550
development progresses hasn't yet more

00:06:09,810 --> 00:06:13,950
IOT devices that we can get even more

00:06:11,550 --> 00:06:16,830
service and this is really where what I

00:06:13,950 --> 00:06:19,380
think has to go to and it's not just me

00:06:16,830 --> 00:06:21,810
who has this weird idea like what we do

00:06:19,380 --> 00:06:25,140
with system is just we follow what what

00:06:21,810 --> 00:06:28,770
others have pioneered because like you

00:06:25,140 --> 00:06:30,390
big ecosystem like you know it was

00:06:28,770 --> 00:06:33,630
Chromebooks and things like that that

00:06:30,390 --> 00:06:34,830
are already in the hands of end users

00:06:33,630 --> 00:06:37,650
devices that have this kind of

00:06:34,830 --> 00:06:40,020
protection what I think though like what

00:06:37,650 --> 00:06:41,820
was a my duty as listen you guys to make

00:06:40,020 --> 00:06:44,730
it easy to develop some similar system

00:06:41,820 --> 00:06:48,630
outside of whose immediate chrome focus

00:06:44,730 --> 00:06:50,370
or any other focus also due to the the

00:06:48,630 --> 00:06:51,420
Snowden revelations like the big

00:06:50,370 --> 00:06:53,190
companies like Facebook and Google

00:06:51,420 --> 00:06:55,200
started developing that there's a

00:06:53,190 --> 00:06:58,110
trusted data center right and the tops

00:06:55,200 --> 00:06:59,580
of data centers do that means that they

00:06:58,110 --> 00:07:01,590
have huge data centers where I'd like to

00:06:59,580 --> 00:07:03,960
have you tons and tons of computers they

00:07:01,590 --> 00:07:05,460
cannot really control but the people

00:07:03,960 --> 00:07:07,560
have physical access to them are all

00:07:05,460 --> 00:07:09,510
trusted right because I mean it's too

00:07:07,560 --> 00:07:11,940
large it's too many people so when they

00:07:09,510 --> 00:07:14,130
do is they solve the problem with

00:07:11,940 --> 00:07:16,740
software and make sure that in the

00:07:14,130 --> 00:07:18,180
facebook cluster the Facebook operating

00:07:16,740 --> 00:07:20,130
system is the only thing that can run

00:07:18,180 --> 00:07:21,450
and if somebody gets physical access to

00:07:20,130 --> 00:07:23,220
a server and then in the Facebook

00:07:21,450 --> 00:07:25,500
cluster that you will not have the

00:07:23,220 --> 00:07:27,180
ability to just plug in an own version

00:07:25,500 --> 00:07:29,520
of the operating system put the doubler

00:07:27,180 --> 00:07:31,140
boot right so the key for them is really

00:07:29,520 --> 00:07:35,160
the traffic data center so that they

00:07:31,140 --> 00:07:38,130
know yeah only the stuff that actually

00:07:35,160 --> 00:07:40,560
the textbook engineers compiled put

00:07:38,130 --> 00:07:42,960
together is a stuffable boot nothing

00:07:40,560 --> 00:07:46,050
else will and if people manage to

00:07:42,960 --> 00:07:48,270
exploit it it's a power cycle will put

00:07:46,050 --> 00:07:51,180
everything back to to to where it was

00:07:48,270 --> 00:07:53,160
supposed to be and i think that is the

00:07:51,180 --> 00:07:55,410
ability to to hack something like the

00:07:53,160 --> 00:07:57,870
only thing would be the US right like so

00:07:55,410 --> 00:07:59,760
that it can break stuff by making it not

00:07:57,870 --> 00:08:00,960
work but you cannot break stuff like

00:07:59,760 --> 00:08:03,690
doing it something out that it's

00:08:00,960 --> 00:08:05,130
supposed to do so the firing of all of

00:08:03,690 --> 00:08:10,890
what i'm talking about security but it's

00:08:05,130 --> 00:08:12,360
also Buster's robustness means that yeah

00:08:10,890 --> 00:08:15,270
if you have a device if you haven't

00:08:12,360 --> 00:08:17,430
served yet any kind of system that you

00:08:15,270 --> 00:08:18,480
can be sure that it only exists in one

00:08:17,430 --> 00:08:21,150
version one version

00:08:18,480 --> 00:08:24,150
precisely and that the various versions

00:08:21,150 --> 00:08:26,340
of what you have in the wild cannot

00:08:24,150 --> 00:08:28,000
differ from each other right so that

00:08:26,340 --> 00:08:31,000
they cannot send

00:08:28,000 --> 00:08:33,120
like there is no no uncertainty in the

00:08:31,000 --> 00:08:35,080
way house for example updates on our

00:08:33,120 --> 00:08:38,710
coming to play like for example like

00:08:35,080 --> 00:08:40,450
many of the a MIDI devices that are

00:08:38,710 --> 00:08:42,940
currently in the wild I guess use

00:08:40,450 --> 00:08:44,890
traditional Lynette's ways to do package

00:08:42,940 --> 00:08:46,510
management like billions rpm work with

00:08:44,890 --> 00:08:49,450
death or something like that if you do

00:08:46,510 --> 00:08:51,280
that you never know what do you actually

00:08:49,450 --> 00:08:52,570
end up with like on the final isn't

00:08:51,280 --> 00:08:55,060
because it might be renewed at the wrong

00:08:52,570 --> 00:08:56,650
time and because I saw Simpsons and

00:08:55,060 --> 00:08:58,360
things like that are generally not they

00:08:56,650 --> 00:09:00,160
don't give any guarantees about how

00:08:58,360 --> 00:09:01,660
exactly round things will be a business

00:09:00,160 --> 00:09:03,340
so you always have this problem that

00:09:01,660 --> 00:09:05,530
yeah the longer these machines are in

00:09:03,340 --> 00:09:07,360
the wild the Spurs are is actually disc

00:09:05,530 --> 00:09:10,270
net image will deviate from each other

00:09:07,360 --> 00:09:11,710
because it all like gets up to to the

00:09:10,270 --> 00:09:15,190
runtime of the scripts that do the

00:09:11,710 --> 00:09:18,850
updates and ends up with so um but

00:09:15,190 --> 00:09:20,410
having mutable systems meaning you have

00:09:18,850 --> 00:09:23,410
one disk image and that's cryptographic

00:09:20,410 --> 00:09:24,910
talker cryptographically verified and is

00:09:23,410 --> 00:09:27,340
exactly the version he has on the one

00:09:24,910 --> 00:09:29,710
and get this rebus because you know Eve

00:09:27,340 --> 00:09:31,840
it's my version or there's no version

00:09:29,710 --> 00:09:34,660
but it cannot be something I don't have

00:09:31,840 --> 00:09:35,950
to have on the control something that

00:09:34,660 --> 00:09:38,470
it's really closely related to this is

00:09:35,950 --> 00:09:40,960
atomic updates right like the idea that

00:09:38,470 --> 00:09:43,660
that if you have an appliance in the

00:09:40,960 --> 00:09:46,060
wild it should run one version of the

00:09:43,660 --> 00:09:47,980
operating system or is a next version of

00:09:46,060 --> 00:09:50,110
the operating system but never something

00:09:47,980 --> 00:09:51,910
half upgraded now something where some

00:09:50,110 --> 00:09:55,300
of the Debian packages rpm package has

00:09:51,910 --> 00:09:57,220
been upgraded in other head model yes

00:09:55,300 --> 00:09:58,810
this is kind of side effect what you get

00:09:57,220 --> 00:10:01,510
him right like because you will

00:09:58,810 --> 00:10:04,240
cryptographic assignment and verify

00:10:01,510 --> 00:10:07,630
two specific versions um but nothing in

00:10:04,240 --> 00:10:09,640
the treaty I already can't measure that

00:10:07,630 --> 00:10:13,720
little element zone on embedded devices

00:10:09,640 --> 00:10:16,540
or on a name forever that figures IOT um

00:10:13,720 --> 00:10:19,510
there's also hydrogen service right

00:10:16,540 --> 00:10:22,510
trust data center order I mentioned so

00:10:19,510 --> 00:10:24,460
yeah um kind of a point that I have with

00:10:22,510 --> 00:10:26,620
his talks with you that make us think in

00:10:24,460 --> 00:10:28,540
by like I know that that people here

00:10:26,620 --> 00:10:30,610
from from the automotive industry but

00:10:28,540 --> 00:10:32,560
regardless if you build a car or if you

00:10:30,610 --> 00:10:34,330
build a life well but in terms of the

00:10:32,560 --> 00:10:36,040
significance acuity matters and matters

00:10:34,330 --> 00:10:38,440
all the way down to the operating

00:10:36,040 --> 00:10:41,290
and you should when you put together you

00:10:38,440 --> 00:10:42,130
apply and think about that and figure

00:10:41,290 --> 00:10:45,480
something out

00:10:42,130 --> 00:10:48,160
when you made a great really hard to to

00:10:45,480 --> 00:10:49,870
expose itself now security means closet

00:10:48,160 --> 00:10:50,890
computing like at least one this model

00:10:49,870 --> 00:10:53,970
and I'm trying to follow their

00:10:50,890 --> 00:10:57,660
oppressive computing a guest has a

00:10:53,970 --> 00:11:00,700
problem like people think probably

00:10:57,660 --> 00:11:02,620
complicated and this to the no but it

00:11:00,700 --> 00:11:05,020
also has that name bad reputation

00:11:02,620 --> 00:11:06,910
open-source community because people

00:11:05,020 --> 00:11:08,830
miss on the standard of the way how

00:11:06,910 --> 00:11:10,450
Microsoft can control the ecosystem and

00:11:08,830 --> 00:11:13,560
and nobody else can happen systems

00:11:10,450 --> 00:11:16,810
anymore anyway that have true probably

00:11:13,560 --> 00:11:19,510
is that but it also incredibly powerful

00:11:16,810 --> 00:11:21,220
because it also enables like the people

00:11:19,510 --> 00:11:24,940
who built systems like you yourselves

00:11:21,220 --> 00:11:26,440
and your company to to improve security

00:11:24,940 --> 00:11:28,480
and make sure that nobody help can

00:11:26,440 --> 00:11:33,640
manipulate your own devices supported

00:11:28,480 --> 00:11:36,160
the devices itself so yeah we offer

00:11:33,640 --> 00:11:38,080
freely is only run code from the vendor

00:11:36,160 --> 00:11:40,420
in the version on the members in the

00:11:38,080 --> 00:11:42,160
combination of the vendor then you have

00:11:40,420 --> 00:11:44,110
resistance to hacking resistant to

00:11:42,160 --> 00:11:47,110
hacking in this kind in this case does

00:11:44,110 --> 00:11:49,180
not mean that people wouldn't be able to

00:11:47,110 --> 00:11:50,860
exploit a software they still will be

00:11:49,180 --> 00:11:53,380
able to do that because as long as

00:11:50,860 --> 00:11:55,510
people write software NC and as long as

00:11:53,380 --> 00:11:57,130
humans write the software to build

00:11:55,510 --> 00:11:59,950
revolvers and vulnerable to hacking in

00:11:57,130 --> 00:12:02,500
one way or another but the key mean is

00:11:59,950 --> 00:12:04,090
that um you know that these view these

00:12:02,500 --> 00:12:06,010
modifications has to make are not

00:12:04,090 --> 00:12:08,650
persistent but always a power type of

00:12:06,010 --> 00:12:12,520
the reboot um can put things back into

00:12:08,650 --> 00:12:14,050
two or so many a factory you set and

00:12:12,520 --> 00:12:15,460
always put things back exactly into the

00:12:14,050 --> 00:12:21,130
spot that it want it to be in where you

00:12:15,460 --> 00:12:22,450
know that it works yes again and what

00:12:21,130 --> 00:12:23,850
I'm talking about you is this in no way

00:12:22,450 --> 00:12:25,410
let's take

00:12:23,850 --> 00:12:27,540
and in fact the computing has been

00:12:25,410 --> 00:12:29,430
around for a while like it is in every

00:12:27,540 --> 00:12:31,050
letter you can buy because Microsoft

00:12:29,430 --> 00:12:32,550
requires is even though that platform

00:12:31,050 --> 00:12:34,680
isn't designed like that in the

00:12:32,550 --> 00:12:36,330
scientist but Michael it requires you to

00:12:34,680 --> 00:12:37,920
find six if you turn in our computer so

00:12:36,330 --> 00:12:39,690
baby easy means that whatever you buy

00:12:37,920 --> 00:12:41,370
off-the-shelf these days allows you to

00:12:39,690 --> 00:12:46,110
implement such a system where you can

00:12:41,370 --> 00:12:48,090
enroll EO private and private keys that

00:12:46,110 --> 00:12:49,680
make sure that yeah nobody can

00:12:48,090 --> 00:12:51,630
manipulate might think that you for

00:12:49,680 --> 00:12:53,430
example now to be honest I actually

00:12:51,630 --> 00:12:57,740
didn't do that here on my Nexus because

00:12:53,430 --> 00:12:57,740
I probably didn't I tell you to do but

00:12:58,010 --> 00:13:03,870
my talk is really about making that easy

00:13:00,390 --> 00:13:05,760
so that um in more manageable cases

00:13:03,870 --> 00:13:08,070
right leg where you not so much focus on

00:13:05,760 --> 00:13:09,990
general purpose but on a specific use

00:13:08,070 --> 00:13:12,120
case ways that you can make this happen

00:13:09,990 --> 00:13:17,580
and can build a system in some time

00:13:12,120 --> 00:13:18,570
secure in this regard so yeah

00:13:17,580 --> 00:13:20,100
you if I think if it is pretty

00:13:18,570 --> 00:13:23,190
universally take in though when it

00:13:20,100 --> 00:13:26,580
doesn't make use of that but Chromebooks

00:13:23,190 --> 00:13:28,440
actually um tiny at this design

00:13:26,580 --> 00:13:32,660
originally and made it popular in the PC

00:13:28,440 --> 00:13:35,640
market Chromebooks are has is wonderful

00:13:32,660 --> 00:13:37,950
functionality that whatever you do you

00:13:35,640 --> 00:13:39,900
know it will always run the Google

00:13:37,950 --> 00:13:42,390
version of the operating system and you

00:13:39,900 --> 00:13:44,250
cannot manipulate it right basically

00:13:42,390 --> 00:13:46,890
means I can give anyone I know my

00:13:44,250 --> 00:13:48,660
Chromebook even people I do not know and

00:13:46,890 --> 00:13:53,430
then I get it back from them I have a

00:13:48,660 --> 00:13:55,320
reasonable level of certainty that they

00:13:53,430 --> 00:13:57,900
were unable to modify the software and

00:13:55,320 --> 00:13:59,430
cannot under get to what I'm doing

00:13:57,900 --> 00:14:01,890
they're like taking pictures and then

00:13:59,430 --> 00:14:04,080
hack into my camera equipment or first I

00:14:01,890 --> 00:14:05,310
mean it is always like everything I'm

00:14:04,080 --> 00:14:07,830
talking about your software of course

00:14:05,310 --> 00:14:10,680
right they can still mend it hardware

00:14:07,830 --> 00:14:13,110
and manipulate the hardware and then a

00:14:10,680 --> 00:14:15,060
kilo or whatever they want but I think

00:14:13,110 --> 00:14:16,770
as a software guy is definitely my duty

00:14:15,060 --> 00:14:18,060
to make this as hard as possible on the

00:14:16,770 --> 00:14:22,380
software side so that's what the times

00:14:18,060 --> 00:14:24,090
really about so yeah commonplace is like

00:14:22,380 --> 00:14:25,590
you can do in a commodity hardware these

00:14:24,090 --> 00:14:29,370
days even though it's not generally done

00:14:25,590 --> 00:14:30,990
and you can buy it already and if you

00:14:29,370 --> 00:14:34,010
buy the right product to do this kind of

00:14:30,990 --> 00:14:36,810
things in for Chromebooks for example

00:14:34,010 --> 00:14:39,690
now can we still be part of things

00:14:36,810 --> 00:14:41,670
we want to make this easy to deploy and

00:14:39,690 --> 00:14:44,220
all the other kind of devices because

00:14:41,670 --> 00:14:47,220
ultimately I think most of the early

00:14:44,220 --> 00:14:48,780
solar appliances or my otda appliance is

00:14:47,220 --> 00:14:50,130
probably used in more traditional Linux

00:14:48,780 --> 00:14:52,230
in one way or another which does not

00:14:50,130 --> 00:14:53,940
have these good functionality out of the

00:14:52,230 --> 00:14:56,040
box like for example if I install debian

00:14:53,940 --> 00:14:57,510
fedora or something like that it will

00:14:56,040 --> 00:15:00,150
not deliver this out of the box you have

00:14:57,510 --> 00:15:03,630
to roll this on your own with this TV we

00:15:00,150 --> 00:15:05,790
try to make this generically manageable

00:15:03,630 --> 00:15:07,980
so that it can build you an image it can

00:15:05,790 --> 00:15:10,530
build the entire trust range and that's

00:15:07,980 --> 00:15:13,260
what the talks really about now this is

00:15:10,530 --> 00:15:14,850
the being such a generic piece of what a

00:15:13,260 --> 00:15:17,700
modern operating system on a Linux

00:15:14,850 --> 00:15:21,180
operating system is this means that we

00:15:17,700 --> 00:15:23,700
try to focus on the day except now sexy

00:15:21,180 --> 00:15:26,880
food and the contents around that exist

00:15:23,700 --> 00:15:29,520
a major limitation right and yes my sexy

00:15:26,880 --> 00:15:31,140
food is what is calling on on on PCs but

00:15:29,520 --> 00:15:32,910
that doesn't mean that's the only way

00:15:31,140 --> 00:15:34,620
how do we do things like many of them

00:15:32,910 --> 00:15:35,660
I'm at at hardware like arm systems

00:15:34,620 --> 00:15:38,370
generally has a civil

00:15:35,660 --> 00:15:40,350
mecha-suit mechanism but it's always the

00:15:38,370 --> 00:15:42,440
diffict of the system so insistently

00:15:40,350 --> 00:15:44,760
while we focus a lot on us I only think

00:15:42,440 --> 00:15:46,380
many of the steps that we did to get

00:15:44,760 --> 00:15:48,750
that way are actually generically useful

00:15:46,380 --> 00:15:50,970
even the other context except that yeah

00:15:48,750 --> 00:15:57,450
we most careful generic stressin alone

00:15:50,970 --> 00:15:58,830
specific so any questions so far I hope

00:15:57,450 --> 00:16:00,839
I'm not sticking to month I know that I

00:15:58,830 --> 00:16:02,700
very fast but I'm figuring this audience

00:16:00,839 --> 00:16:06,480
with language barriers and really that

00:16:02,700 --> 00:16:08,339
is it um no questions okay

00:16:06,480 --> 00:16:09,960
so the various component that I want to

00:16:08,339 --> 00:16:11,970
really talk about here about getting to

00:16:09,960 --> 00:16:14,310
this goal that we get to systems that

00:16:11,970 --> 00:16:16,380
entirely I'm very fine and everything in

00:16:14,310 --> 00:16:18,300
step now the following like first of all

00:16:16,380 --> 00:16:19,620
trusted boot meaning that the system

00:16:18,300 --> 00:16:21,210
refused to do anything that was

00:16:19,620 --> 00:16:22,830
manipulated anything that is not the

00:16:21,210 --> 00:16:25,830
version that the remainder or you

00:16:22,830 --> 00:16:27,630
crazily wanted to do the next thing is

00:16:25,830 --> 00:16:30,720
austere system is up you need to make

00:16:27,630 --> 00:16:33,060
sure that the the resources that the

00:16:30,720 --> 00:16:35,339
system requires during runtime the file

00:16:33,060 --> 00:16:37,890
in directories are exactly that version

00:16:35,339 --> 00:16:40,700
also that the vendor wanted to serve so

00:16:37,890 --> 00:16:43,800
you need at runtime verify disk access

00:16:40,700 --> 00:16:45,690
another thing is like that it's really

00:16:43,800 --> 00:16:47,660
important in UNIX is not traditionally

00:16:45,690 --> 00:16:50,780
designed to work in that way

00:16:47,660 --> 00:16:54,500
right you can have only Brutus but it

00:16:50,780 --> 00:16:57,830
comes with with quite a set of problems

00:16:54,500 --> 00:16:59,000
in particular if you want to genetically

00:16:57,830 --> 00:17:01,250
make it possible that we can have

00:16:59,000 --> 00:17:03,710
factory set then you can boot up with an

00:17:01,250 --> 00:17:06,470
entirely empty stage and configuration

00:17:03,710 --> 00:17:08,030
and everything works correctly the first

00:17:06,470 --> 00:17:11,300
thing that I'm going to talk about here

00:17:08,030 --> 00:17:14,060
is about building these images in a way

00:17:11,300 --> 00:17:15,830
because um this is actually complex

00:17:14,060 --> 00:17:17,840
because if you do all the complexity you

00:17:15,830 --> 00:17:21,770
need to be able to build kernel to build

00:17:17,840 --> 00:17:23,870
disk images that has the group could

00:17:21,770 --> 00:17:25,910
project cryptographic primitives

00:17:23,870 --> 00:17:26,510
attached and that makes all this

00:17:25,910 --> 00:17:29,000
possible

00:17:26,510 --> 00:17:31,400
the first thing let's look into traffic

00:17:29,000 --> 00:17:33,280
booting my recommendation for that is

00:17:31,400 --> 00:17:36,200
used something called can reboot

00:17:33,280 --> 00:17:38,510
attributes 19 months lied about that

00:17:36,200 --> 00:17:40,190
later is a kind of leadership and

00:17:38,510 --> 00:17:42,350
certainly the idea is that you should

00:17:40,190 --> 00:17:47,570
have two letter you sign your kernels

00:17:42,350 --> 00:17:49,940
the kernel images are it should carry

00:17:47,570 --> 00:17:51,800
which specific positives they can do to

00:17:49,940 --> 00:17:55,640
so that you have this basically the

00:17:51,800 --> 00:17:59,870
first link in your chain then enroll

00:17:55,640 --> 00:18:01,850
your keys in Tobias and yeah the

00:17:59,870 --> 00:18:03,410
kilometers health portion actually just

00:18:01,850 --> 00:18:05,620
be the kernel image it should be also in

00:18:03,410 --> 00:18:08,300
attorneys commands of the metadata and

00:18:05,620 --> 00:18:09,620
yeah that's the first step of saying the

00:18:08,300 --> 00:18:12,980
prosecute now let's take a step back

00:18:09,620 --> 00:18:15,800
there was a lot of things to digest so

00:18:12,980 --> 00:18:17,300
that has been a talked about what I see

00:18:15,800 --> 00:18:20,030
boots again if you go to something like

00:18:17,300 --> 00:18:23,810
make it work you might notice Gumi boot

00:18:20,030 --> 00:18:25,220
it's basically right many things many

00:18:23,810 --> 00:18:28,250
people think it's kind of takes over the

00:18:25,220 --> 00:18:29,690
role that Rob has on those pcs but

00:18:28,250 --> 00:18:32,840
actually does it because grab a boot

00:18:29,690 --> 00:18:35,950
loader and the boot is actually more of

00:18:32,840 --> 00:18:38,600
a boot menu and what it does is just

00:18:35,950 --> 00:18:43,610
extract silly looks for kernels on on on

00:18:38,600 --> 00:18:46,760
on on disk and draw the browser menu and

00:18:43,610 --> 00:18:48,440
can order them but it won't actually

00:18:46,760 --> 00:18:51,230
boot with karna so it actually tells it

00:18:48,440 --> 00:18:53,180
a certain way to put them so it's not an

00:18:51,230 --> 00:18:54,590
access component really it's just a just

00:18:53,180 --> 00:18:58,040
a pretty big thing you don't actually

00:18:54,590 --> 00:19:00,140
need it like like on you fi systems the

00:18:58,040 --> 00:19:03,470
farm was actually capable pudding

00:19:00,140 --> 00:19:05,870
directly there's no requirement saying

00:19:03,470 --> 00:19:07,370
the bootloader for that there is no

00:19:05,870 --> 00:19:09,440
requirement it has brute money or

00:19:07,370 --> 00:19:11,840
anything like that you can just put the

00:19:09,440 --> 00:19:14,450
kernels directly however has this

00:19:11,840 --> 00:19:16,400
benefit that does present users with a

00:19:14,450 --> 00:19:19,970
friendly menu but more interesting need

00:19:16,400 --> 00:19:21,500
is capable of looking at your multicolor

00:19:19,970 --> 00:19:23,630
installed multiple operating system

00:19:21,500 --> 00:19:25,160
versions will be able to sort them by a

00:19:23,630 --> 00:19:26,750
version and then pick the nearest one

00:19:25,160 --> 00:19:28,730
automatically so that if you upgrade

00:19:26,750 --> 00:19:36,169
that you always end up with the newest

00:19:28,730 --> 00:19:40,280
one in the same way the question well is

00:19:36,169 --> 00:19:42,890
the unified binary so it's like yeah I

00:19:40,280 --> 00:19:45,470
don't really want to go to be too much

00:19:42,890 --> 00:19:47,030
detail about us is you hire the complex

00:19:45,470 --> 00:19:48,230
system it's kind of operating system of

00:19:47,030 --> 00:19:50,600
its own that happens to be in the

00:19:48,230 --> 00:19:52,610
firmware and in your eye you can have

00:19:50,600 --> 00:19:55,730
executables and executables can be for

00:19:52,610 --> 00:19:57,890
example a driver they can be games and

00:19:55,730 --> 00:19:59,510
you can write games directly runs inside

00:19:57,890 --> 00:20:02,540
of summer without any further operating

00:19:59,510 --> 00:20:04,510
system the world but as a person people

00:20:02,540 --> 00:20:07,370
do that and the kernels are generally

00:20:04,510 --> 00:20:09,020
ufi binaries as well and so that people

00:20:07,370 --> 00:20:11,890
and so everything that happens is that

00:20:09,020 --> 00:20:17,240
people start and then start the kernel

00:20:11,890 --> 00:20:17,990
as the next binary epic loot is not a

00:20:17,240 --> 00:20:19,460
system your brother

00:20:17,990 --> 00:20:21,290
but actually the sources don't really

00:20:19,460 --> 00:20:22,460
have too much to do with something we're

00:20:21,290 --> 00:20:24,169
actually thinking about splitting out as

00:20:22,460 --> 00:20:26,690
a repository and you figure out what

00:20:24,169 --> 00:20:28,040
would we do with that and it's not a

00:20:26,690 --> 00:20:31,130
decision the umbrella which is kind of

00:20:28,040 --> 00:20:33,020
odd because there are certain levels of

00:20:31,130 --> 00:20:34,340
integration systemd but I didn't

00:20:33,020 --> 00:20:36,530
actually want to go too much into detail

00:20:34,340 --> 00:20:37,370
with that let's go back to the earlier

00:20:36,530 --> 00:20:41,540
one

00:20:37,370 --> 00:20:44,059
thank you and in a moment I'm proposing

00:20:41,540 --> 00:20:46,850
identities that you trusted you sign

00:20:44,059 --> 00:20:49,070
like any in use I pick a good body BEC

00:20:46,850 --> 00:20:50,960
if you do it you upload into the

00:20:49,070 --> 00:20:55,720
firmware a couple of like epigraphic

00:20:50,960 --> 00:20:59,210
cities like ours 18 and then these keys

00:20:55,720 --> 00:21:01,309
basically say that anything any binary

00:20:59,210 --> 00:21:02,870
any you fi finally was executed on their

00:21:01,309 --> 00:21:04,700
system must have defined with one of

00:21:02,870 --> 00:21:06,169
those keys I realize it's a bit more

00:21:04,700 --> 00:21:08,419
complex if on the next build of an

00:21:06,169 --> 00:21:10,060
entire PKI but let's just for the sake

00:21:08,419 --> 00:21:12,670
of simplicity addictive

00:21:10,060 --> 00:21:15,670
explanation so what everything suggests

00:21:12,670 --> 00:21:16,990
is sign that boot menu which always pick

00:21:15,670 --> 00:21:19,090
the newest version of the kernel you

00:21:16,990 --> 00:21:20,590
have find your kernels but make sure

00:21:19,090 --> 00:21:22,630
that the kernel images actually consists

00:21:20,590 --> 00:21:24,400
of forcing the contest internally the

00:21:22,630 --> 00:21:26,200
command line in the metadata the

00:21:24,400 --> 00:21:27,760
metadata is just where look at the

00:21:26,200 --> 00:21:28,930
worsen stranger things like that doesn't

00:21:27,760 --> 00:21:32,800
really matter what to look at is in

00:21:28,930 --> 00:21:34,690
detail and the for instant ink and code

00:21:32,800 --> 00:21:36,730
in the kernel images which positive they

00:21:34,690 --> 00:21:39,400
will boot meaning and that we always

00:21:36,730 --> 00:21:40,930
have the link towards one specific

00:21:39,400 --> 00:21:42,970
version of the father's movie boots and

00:21:40,930 --> 00:21:45,490
how do you do that actually you do it by

00:21:42,970 --> 00:21:48,580
encoding like it on the command line on

00:21:45,490 --> 00:21:50,380
the chrome outline yeah I kind of a this

00:21:48,580 --> 00:21:52,810
really message it and came and could

00:21:50,380 --> 00:21:54,280
complete touch with Linux kernel in one

00:21:52,810 --> 00:21:57,370
way another not already put again across

00:21:54,280 --> 00:21:59,950
the mud line so I know this is hard to

00:21:57,370 --> 00:22:01,240
to grass here and I know that many of

00:21:59,950 --> 00:22:03,280
you would probably not understand

00:22:01,240 --> 00:22:04,860
everything input here but I have the

00:22:03,280 --> 00:22:08,860
message I want to get across is that

00:22:04,860 --> 00:22:13,390
doesn't this stuff exists right and you

00:22:08,860 --> 00:22:17,200
can actually deploy right now and it's

00:22:13,390 --> 00:22:19,330
not too hard to do so let's talk about

00:22:17,200 --> 00:22:22,420
the next component on my earliest life

00:22:19,330 --> 00:22:25,000
very high disk access my suggestions

00:22:22,420 --> 00:22:26,560
that is you see America you get very

00:22:25,000 --> 00:22:28,930
feel nothing to resistivity or anything

00:22:26,560 --> 00:22:31,270
the Americas something that was editable

00:22:28,930 --> 00:22:33,190
in kernel in the context of the Google

00:22:31,270 --> 00:22:35,200
people working in Chromebook it the same

00:22:33,190 --> 00:22:37,900
basically from the storage technology

00:22:35,200 --> 00:22:41,230
led Chromebooks use what the America

00:22:37,900 --> 00:22:44,620
does it basically you spent in fine it

00:22:41,230 --> 00:22:48,460
um a cryptographic hash this so-called

00:22:44,620 --> 00:22:51,970
top-level has and after you did that you

00:22:48,460 --> 00:22:55,510
basically it makes sure that everything

00:22:51,970 --> 00:22:59,170
that is rabbit from a disk has to match

00:22:55,510 --> 00:23:02,800
that action away another to be permitted

00:22:59,170 --> 00:23:06,070
through so what it does making is the

00:23:02,800 --> 00:23:07,000
online verification that the date have

00:23:06,070 --> 00:23:09,460
stored on disk

00:23:07,000 --> 00:23:11,080
matches exactly one specific version and

00:23:09,460 --> 00:23:15,760
that one specific versions identified by

00:23:11,080 --> 00:23:18,730
that hash so yeah certainly makes it

00:23:15,760 --> 00:23:20,980
very easy to use that basically on test

00:23:18,730 --> 00:23:23,170
immune systems you can't mess it out the

00:23:20,980 --> 00:23:26,590
kernel command line instead of the

00:23:23,170 --> 00:23:28,000
root equals some way how you reference

00:23:26,590 --> 00:23:29,770
and petitioner child in the root file

00:23:28,000 --> 00:23:32,410
system you can actually certified would

00:23:29,770 --> 00:23:33,790
hash and if you do that it does two

00:23:32,410 --> 00:23:36,040
things first of all it finds the

00:23:33,790 --> 00:23:37,840
petition that matches every hash but

00:23:36,040 --> 00:23:42,100
second of all it also sets up the

00:23:37,840 --> 00:23:45,130
imperative that evolve one to two only

00:23:42,100 --> 00:23:48,820
commit access to that specific one the

00:23:45,130 --> 00:23:50,320
data on it that not just the hookah but

00:23:48,820 --> 00:23:52,900
let's take a step back again about the

00:23:50,320 --> 00:23:55,750
embarrassing so it's a little penalty by

00:23:52,900 --> 00:23:57,250
another module again I don't want to

00:23:55,750 --> 00:24:00,700
lose myself or too much in detail I

00:23:57,250 --> 00:24:03,550
think I'm already beyond that I guess

00:24:00,700 --> 00:24:05,830
but still there's a lot of kernel thing

00:24:03,550 --> 00:24:07,930
and every single just access at the

00:24:05,830 --> 00:24:09,820
moment of the axis is very affect it is

00:24:07,930 --> 00:24:12,100
opposed to verification through the

00:24:09,820 --> 00:24:14,740
verification of download right I mean if

00:24:12,100 --> 00:24:18,100
you do if you do Demyan system updates

00:24:14,740 --> 00:24:20,050
or something like that like they all

00:24:18,100 --> 00:24:21,790
have gaps or with DNA or whatever

00:24:20,050 --> 00:24:23,710
they're called they all tend to very

00:24:21,790 --> 00:24:25,480
fine Kripa guarantee verify the packages

00:24:23,710 --> 00:24:28,420
that they're downloaded before they're

00:24:25,480 --> 00:24:33,940
installed right that's a good thing but

00:24:28,420 --> 00:24:36,250
it has one problem it is it is not safe

00:24:33,940 --> 00:24:38,500
against offline modification right if

00:24:36,250 --> 00:24:40,990
somebody told Damien doesn't upgrade

00:24:38,500 --> 00:24:43,120
right and the the packages are verified

00:24:40,990 --> 00:24:44,800
at that moment and then he steps away

00:24:43,120 --> 00:24:47,200
from the computer and somebody else gets

00:24:44,800 --> 00:24:49,630
access to the computer he can modify any

00:24:47,200 --> 00:24:51,760
bind he wants on the file system and on

00:24:49,630 --> 00:24:53,500
the next photo will never be noticed

00:24:51,760 --> 00:24:54,130
right because there's no further

00:24:53,500 --> 00:24:56,140
verification

00:24:54,130 --> 00:25:00,880
they're only very keen to place their in

00:24:56,140 --> 00:25:03,340
DNS in in rpm and object was at the time

00:25:00,880 --> 00:25:04,900
the pendulum actually installs right now

00:25:03,340 --> 00:25:06,880
other ways of doing verification and

00:25:04,900 --> 00:25:10,330
other is the mode of verification where

00:25:06,880 --> 00:25:12,100
Andrew DUP we verified that the set of

00:25:10,330 --> 00:25:14,950
files that you want to give this are

00:25:12,100 --> 00:25:17,050
still on modified but that is not

00:25:14,950 --> 00:25:19,000
necessarily unnecessarily efficient

00:25:17,050 --> 00:25:20,920
right because if you have a large image

00:25:19,000 --> 00:25:23,200
the basically means the entire list

00:25:20,920 --> 00:25:26,080
needs to be read into memory verified

00:25:23,200 --> 00:25:29,680
and if it doesn't match it has to to

00:25:26,080 --> 00:25:31,000
shut down so you have very few enables

00:25:29,680 --> 00:25:33,340
you to do this kind of verification to

00:25:31,000 --> 00:25:34,490
do it on the fly right so that every

00:25:33,340 --> 00:25:37,130
single access

00:25:34,490 --> 00:25:38,660
is verified at the moment it is done so

00:25:37,130 --> 00:25:40,460
you don't have to do anything advanced

00:25:38,660 --> 00:25:42,350
and you can be absolutely sure that

00:25:40,460 --> 00:25:43,760
there's no offline modification possible

00:25:42,350 --> 00:25:49,460
because it would recognize this because

00:25:43,760 --> 00:25:51,290
you verify at the moment of the axis any

00:25:49,460 --> 00:25:53,750
questions so far like this will mean

00:25:51,290 --> 00:25:55,310
that the system could family in an hour

00:25:53,750 --> 00:25:57,020
so when we have your first part of the

00:25:55,310 --> 00:25:58,820
system that has been modified exactly

00:25:57,020 --> 00:26:01,400
there so you make any team a and

00:25:58,820 --> 00:26:02,780
detection or flop manipulation right but

00:26:01,400 --> 00:26:04,040
the idea of course is like why would

00:26:02,780 --> 00:26:06,350
anyone even into it because of the

00:26:04,040 --> 00:26:07,880
females that individual just practice

00:26:06,350 --> 00:26:10,450
that he will not be able to manipulate

00:26:07,880 --> 00:26:13,870
it with the other without you meddling

00:26:10,450 --> 00:26:17,090
and any other questions at this moment

00:26:13,870 --> 00:26:19,070
so this is fine

00:26:17,090 --> 00:26:21,290
now the way more once does

00:26:19,070 --> 00:26:23,120
cryptographically is build a so-called

00:26:21,290 --> 00:26:26,930
Merkle tree and Merkle trees basically

00:26:23,120 --> 00:26:29,810
hash tree use of like a tree of passes

00:26:26,930 --> 00:26:32,030
like grid build on each other and the

00:26:29,810 --> 00:26:34,130
topmost hash you specified but it

00:26:32,030 --> 00:26:35,960
basically commits that every single

00:26:34,130 --> 00:26:38,600
block has to match the top-level hash

00:26:35,960 --> 00:26:40,130
but everything will block to verify and

00:26:38,600 --> 00:26:41,680
you just have to follow the tree with I

00:26:40,130 --> 00:26:44,180
don't know look it up on Wikipedia

00:26:41,680 --> 00:26:46,370
there's a keyword of Merkle trees not

00:26:44,180 --> 00:26:51,320
like the German Chancellor Michael would

00:26:46,370 --> 00:26:53,360
max it right and yeah I mean is amazing

00:26:51,320 --> 00:26:55,460
it is read like a shot some of the file

00:26:53,360 --> 00:26:57,770
except that you don't have to go through

00:26:55,460 --> 00:27:00,380
the entire file to verify but you can do

00:26:57,770 --> 00:27:06,800
that by block any other questions

00:27:00,380 --> 00:27:09,830
response well the performance penalty is

00:27:06,800 --> 00:27:11,780
well there is padding of course but then

00:27:09,830 --> 00:27:13,190
again I don't know eyes before my

00:27:11,780 --> 00:27:14,390
testing I don't care and if on the

00:27:13,190 --> 00:27:16,490
Chromebooks you don't care right like

00:27:14,390 --> 00:27:19,070
the Chromebooks or anything when super

00:27:16,490 --> 00:27:22,790
smell arm things that nobody care

00:27:19,070 --> 00:27:25,400
it's like I mean also the clearly what

00:27:22,790 --> 00:27:27,350
the kernel does is it catches stuff

00:27:25,400 --> 00:27:30,080
right like every bit of memory that is

00:27:27,350 --> 00:27:32,690
in system today if you did a cache if

00:27:30,080 --> 00:27:34,880
it's not used otherwise right so after

00:27:32,690 --> 00:27:36,590
the verification was done as long as the

00:27:34,880 --> 00:27:39,500
stuff stays a memory it don't have to

00:27:36,590 --> 00:27:40,980
verify again also cryptography isn't

00:27:39,500 --> 00:27:42,480
really exotic thing anymore

00:27:40,980 --> 00:27:44,429
stage right like most of the emitted

00:27:42,480 --> 00:27:46,440
hardware even if it's low generally

00:27:44,429 --> 00:27:50,160
comes with some form or flow of crypto

00:27:46,440 --> 00:27:52,320
accelerator so in general I don't think

00:27:50,160 --> 00:27:55,440
it's too bad of course a few of you if

00:27:52,320 --> 00:27:59,429
you work on freaking slow CPU then sure

00:27:55,440 --> 00:28:01,440
don't do it but I mean you have to pay

00:27:59,429 --> 00:28:03,929
for the security there's no no no that

00:28:01,440 --> 00:28:06,990
um but I think it worth it it in today

00:28:03,929 --> 00:28:13,919
slow um any other questions

00:28:06,990 --> 00:28:17,280
disappointment there moon or some places

00:28:13,919 --> 00:28:19,559
but it's not equal to recruiting it is

00:28:17,280 --> 00:28:21,540
possible to from their user space go to

00:28:19,559 --> 00:28:24,240
the bootloader it laser pulse with the

00:28:21,540 --> 00:28:27,270
software can pop what they call it

00:28:24,240 --> 00:28:28,890
upgrade the software are there well so

00:28:27,270 --> 00:28:30,450
so well the doesn't I'm doing here

00:28:28,890 --> 00:28:33,150
doesn't really talk about out there so

00:28:30,450 --> 00:28:35,220
much right but I'm not going to solve

00:28:33,150 --> 00:28:37,890
the entire equation for you but I will

00:28:35,220 --> 00:28:39,030
sell bits of it on I'm skating is

00:28:37,890 --> 00:28:41,490
something that I think is very

00:28:39,030 --> 00:28:43,799
interesting and maybe we'll do it

00:28:41,490 --> 00:28:45,690
eventually but I'm not going to deal

00:28:43,799 --> 00:28:48,210
with that to you right there but of

00:28:45,690 --> 00:28:49,919
course yeah humming update like they

00:28:48,210 --> 00:28:51,600
think this sounds kind of way how you

00:28:49,919 --> 00:28:54,270
get your time I got this and their

00:28:51,600 --> 00:28:58,580
systems like your back arrests reason

00:28:54,270 --> 00:29:02,190
Alex talked about and that these days um

00:28:58,580 --> 00:29:05,700
but yeah it's kind of not what I'm

00:29:02,190 --> 00:29:07,169
talking as much about other and almost

00:29:05,700 --> 00:29:10,559
time to actually have until five or

00:29:07,169 --> 00:29:12,750
something I don't know how strictly they

00:29:10,559 --> 00:29:15,090
are with five so if you're done one

00:29:12,750 --> 00:29:17,100
minute to five I'm good okay so we can

00:29:15,090 --> 00:29:19,260
see how many questions we can make okay

00:29:17,100 --> 00:29:22,350
let's talk about the surface biggest

00:29:19,260 --> 00:29:24,660
hauls of the better now if you have

00:29:22,350 --> 00:29:26,580
these immutable file system images right

00:29:24,660 --> 00:29:29,370
like the ones where only one specific

00:29:26,580 --> 00:29:31,470
image can be booted on that has been

00:29:29,370 --> 00:29:34,290
signed by you or like a couple of them

00:29:31,470 --> 00:29:35,340
all the ones that design and then you

00:29:34,290 --> 00:29:38,340
have the problem like everything

00:29:35,340 --> 00:29:40,110
surrounding but UNIX isn't we designed

00:29:38,340 --> 00:29:42,150
to be run that way right like you have

00:29:40,110 --> 00:29:43,140
scheduled are like like traditionally

00:29:42,150 --> 00:29:44,760
muscle distributions

00:29:43,140 --> 00:29:47,760
run with it we'd only move at all and

00:29:44,760 --> 00:29:49,890
then distributions got updated analogy

00:29:47,760 --> 00:29:52,410
that generally can accept that reservoir

00:29:49,890 --> 00:29:57,360
generally it consumes required to

00:29:52,410 --> 00:30:00,000
dividable so there are different ways

00:29:57,360 --> 00:30:02,850
how you can do things right now I like

00:30:00,000 --> 00:30:04,410
um for now I will just focus on three

00:30:02,850 --> 00:30:06,870
directories actually need user s theme

00:30:04,410 --> 00:30:09,060
bar user being always with only in this

00:30:06,870 --> 00:30:11,130
mode but at the invar sometimes needs to

00:30:09,060 --> 00:30:12,840
be writable this counted in two

00:30:11,130 --> 00:30:15,360
different ways you going to persistent

00:30:12,840 --> 00:30:16,530
or volatile way like if it's the system

00:30:15,360 --> 00:30:18,360
that basically means that's like a

00:30:16,530 --> 00:30:19,680
traditional file system advises and next

00:30:18,360 --> 00:30:22,620
time you boot it's still the same way

00:30:19,680 --> 00:30:24,690
all the time however means that yeah the

00:30:22,620 --> 00:30:28,170
change like every modification make that

00:30:24,690 --> 00:30:30,240
change you make their only live as long

00:30:28,170 --> 00:30:32,520
as the system's up to the system's down

00:30:30,240 --> 00:30:36,330
it's lost and the next time you put it

00:30:32,520 --> 00:30:38,970
up again start fresh system II already

00:30:36,330 --> 00:30:40,920
has quite a bit of my groundwork implies

00:30:38,970 --> 00:30:42,360
photographer schemes like that for

00:30:40,920 --> 00:30:44,790
example a assistant heat up volatile

00:30:42,360 --> 00:30:47,610
which is a carnal command option it's a

00:30:44,790 --> 00:30:51,390
take screen wait is free and possible

00:30:47,610 --> 00:30:53,250
parameters like yes/no and state if you

00:30:51,390 --> 00:30:54,990
specify system be thought volatility

00:30:53,250 --> 00:30:55,620
both know you get the traditional unix

00:30:54,990 --> 00:30:57,420
behavior

00:30:55,620 --> 00:31:00,450
nothing's volatile here is everything is

00:30:57,420 --> 00:31:04,140
persistent however if you specify equal

00:31:00,450 --> 00:31:06,690
to s you get a fully volatile system and

00:31:04,140 --> 00:31:10,980
that specifically means that epsilonv

00:31:06,690 --> 00:31:13,710
are armed are mounted at empty temporary

00:31:10,980 --> 00:31:16,290
directory like tempest s so basically

00:31:13,710 --> 00:31:19,650
that it boot up with nothing but snacks

00:31:16,290 --> 00:31:21,090
user so anyone with cash any change of

00:31:19,650 --> 00:31:23,100
configuration any change of state

00:31:21,090 --> 00:31:25,380
anywhere where configuration is at scene

00:31:23,100 --> 00:31:27,450
where statements met mark is lost as

00:31:25,380 --> 00:31:28,970
soon as parallel and then there's

00:31:27,450 --> 00:31:32,550
another parameter called system we've

00:31:28,970 --> 00:31:35,310
also equal state if you do that the next

00:31:32,550 --> 00:31:37,590
people will assess it is on which is if

00:31:35,310 --> 00:31:39,780
you're using mutable systems that means

00:31:37,590 --> 00:31:41,940
it's redone but there's much more is

00:31:39,780 --> 00:31:43,950
still mounted as 10% right this is this

00:31:41,940 --> 00:31:46,170
makes management probably sense for main

00:31:43,950 --> 00:31:47,850
ndidates environments where it should

00:31:46,170 --> 00:31:49,770
not be possible to change configuration

00:31:47,850 --> 00:31:51,080
but still should be possible to collect

00:31:49,770 --> 00:31:56,179
logs and other

00:31:51,080 --> 00:31:57,950
more like less dangerous stuff then of

00:31:56,179 --> 00:32:00,470
course if you configure stuff like I do

00:31:57,950 --> 00:32:01,760
that the FSM right now you can put an

00:32:00,470 --> 00:32:03,529
activist and everything you live in

00:32:01,760 --> 00:32:05,679
system will always support that so if

00:32:03,529 --> 00:32:09,950
you if you say in at the effect of that

00:32:05,679 --> 00:32:12,019
flash in wash LD mounted form from

00:32:09,950 --> 00:32:15,049
persistent disk little yes but of course

00:32:12,019 --> 00:32:17,630
will work little bit back out of that

00:32:15,049 --> 00:32:20,620
and I can already mention that in this

00:32:17,630 --> 00:32:22,760
ski less user likes let's use our is

00:32:20,620 --> 00:32:25,149
considered a unified sites for vendor

00:32:22,760 --> 00:32:27,350
ask resources always immutable

00:32:25,149 --> 00:32:28,700
discrimination of slash user isn't

00:32:27,350 --> 00:32:31,490
really the definition that we always

00:32:28,700 --> 00:32:33,409
hand on Linux right for those serving

00:32:31,490 --> 00:32:35,990
around longer and none of the using that

00:32:33,409 --> 00:32:38,090
was big discussion I'm looking for Dora

00:32:35,990 --> 00:32:40,880
for example like four years ago

00:32:38,090 --> 00:32:42,950
something about the unified slash user

00:32:40,880 --> 00:32:45,010
and the discussion was basically about

00:32:42,950 --> 00:32:48,860
making that happen

00:32:45,010 --> 00:32:51,049
meaning that instead of distributing

00:32:48,860 --> 00:32:55,760
files from packages all over the file

00:32:51,049 --> 00:32:58,580
system in slash live in slash Benin's

00:32:55,760 --> 00:33:00,649
much Aston and less user in a couple of

00:32:58,580 --> 00:33:02,620
other places but everything that is

00:33:00,649 --> 00:33:05,200
read-only in comes from the vendor

00:33:02,620 --> 00:33:07,460
should be unified as much user

00:33:05,200 --> 00:33:09,409
ultimately meaning that yeah it becomes

00:33:07,460 --> 00:33:12,200
unified types of an electric doses and

00:33:09,409 --> 00:33:13,909
then Espen and live like these

00:33:12,200 --> 00:33:15,769
traditional directories that existed in

00:33:13,909 --> 00:33:18,590
the root directory which is be some

00:33:15,769 --> 00:33:20,600
links left so I just blew the context of

00:33:18,590 --> 00:33:22,130
a blog that I to me but in this scheme

00:33:20,600 --> 00:33:23,600
so we have slash user for the unified

00:33:22,130 --> 00:33:25,760
types of when the right resources and

00:33:23,600 --> 00:33:29,840
Etsy is the unifying

00:33:25,760 --> 00:33:31,220
place for configuration um we are less

00:33:29,840 --> 00:33:33,769
strict on this one this can be either

00:33:31,220 --> 00:33:35,510
immutable if you want your system not to

00:33:33,769 --> 00:33:37,460
be able to change configuration you can

00:33:35,510 --> 00:33:40,519
also be volatile assistant what about

00:33:37,460 --> 00:33:42,789
meaning as we've already explained and

00:33:40,519 --> 00:33:45,350
then switch wires the same thing not all

00:33:42,789 --> 00:33:47,330
but for state well what the difference

00:33:45,350 --> 00:33:50,779
is between state and configuration isn't

00:33:47,330 --> 00:33:53,330
always clear right like three things

00:33:50,779 --> 00:33:53,960
like law probably fall under the big

00:33:53,330 --> 00:33:55,880
umbrella

00:33:53,960 --> 00:33:59,080
state and things like configuration

00:33:55,880 --> 00:34:02,530
files of course kind of

00:33:59,080 --> 00:34:04,870
belonging to at CM - configuration but

00:34:02,530 --> 00:34:06,640
it's always clear this distinction right

00:34:04,870 --> 00:34:08,980
there a lot of things that the tires do

00:34:06,640 --> 00:34:11,200
not really fit into either our citizens

00:34:08,980 --> 00:34:13,270
of what it actually means of course is

00:34:11,200 --> 00:34:16,030
up to you or the package or the right of

00:34:13,270 --> 00:34:17,650
the software but I think all the

00:34:16,030 --> 00:34:19,450
extremes we can define these two things

00:34:17,650 --> 00:34:23,130
and it also makes sense to distinguish

00:34:19,450 --> 00:34:25,960
them and it's the white dealings do it

00:34:23,130 --> 00:34:28,150
on these combinations I think at least

00:34:25,960 --> 00:34:29,710
five or reading relevant but yes like

00:34:28,150 --> 00:34:31,990
everything like of course we're talking

00:34:29,710 --> 00:34:33,580
about a mutable system so issues of user

00:34:31,990 --> 00:34:35,620
will always be relearning but you can

00:34:33,580 --> 00:34:38,260
have the version where s is read-only or

00:34:35,620 --> 00:34:40,510
you where you have persistent or at the

00:34:38,260 --> 00:34:45,160
volatile and a couple of combinations of

00:34:40,510 --> 00:34:48,340
bar I think always that XE Pro needs to

00:34:45,160 --> 00:34:50,620
be morbid only than says large probably

00:34:48,340 --> 00:34:55,810
never makes sense to have configuration

00:34:50,620 --> 00:34:57,970
a volatile but state resistance I think

00:34:55,810 --> 00:35:00,490
that's kind I don't see the point of

00:34:57,970 --> 00:35:06,220
that but ignoring that these are

00:35:00,490 --> 00:35:07,540
probably the useful donation well yeah

00:35:06,220 --> 00:35:09,010
sure when you have a bit down other

00:35:07,540 --> 00:35:11,260
directories right like these ones are

00:35:09,010 --> 00:35:13,150
the three most relevant directories I

00:35:11,260 --> 00:35:15,730
think there is the UNIX file system

00:35:13,150 --> 00:35:18,070
variety knows quite a number of other

00:35:15,730 --> 00:35:21,790
modes in flash as our deep slash home as

00:35:18,070 --> 00:35:24,550
less gas / suzettesp Rockledge tenant or

00:35:21,790 --> 00:35:25,930
something like that now somehow is here

00:35:24,550 --> 00:35:28,360
because I don't think that are that

00:35:25,930 --> 00:35:32,170
interesting right because they are like

00:35:28,360 --> 00:35:34,090
things like proxies and dead are they

00:35:32,170 --> 00:35:35,920
are API they don't actually physically

00:35:34,090 --> 00:35:38,860
mean anything they're just the way how

00:35:35,920 --> 00:35:42,190
they look like to name is the operating

00:35:38,860 --> 00:35:44,050
system concepts during runtime more

00:35:42,190 --> 00:35:45,460
interesting is probably is left hand but

00:35:44,050 --> 00:35:48,250
the in locking that it doesn't really

00:35:45,460 --> 00:35:50,320
matter where / temps from it can be

00:35:48,250 --> 00:35:51,120
memory can be on disk but because it's

00:35:50,320 --> 00:35:54,040
inherently

00:35:51,120 --> 00:35:55,540
volatile it's nothing we have to talk

00:35:54,040 --> 00:35:57,670
about because it can be initialized from

00:35:55,540 --> 00:36:01,270
0 as a group more interesting as a slash

00:35:57,670 --> 00:36:03,490
home and life as are we and that's

00:36:01,270 --> 00:36:06,020
allowed mostly because I don't know it's

00:36:03,490 --> 00:36:10,040
like for that they are relevant

00:36:06,020 --> 00:36:11,270
and we have quite a few of automatic

00:36:10,040 --> 00:36:13,850
infrastructure for that incisor to

00:36:11,270 --> 00:36:17,600
stopping and talking about later but I

00:36:13,850 --> 00:36:20,210
think like for for for for most IOT

00:36:17,600 --> 00:36:22,310
devices for most a MIDI devices for most

00:36:20,210 --> 00:36:24,590
a service lion - they probably matter

00:36:22,310 --> 00:36:27,680
too much red flash home if something is

00:36:24,590 --> 00:36:29,990
primarily useful on my laptop LED or

00:36:27,680 --> 00:36:31,400
anybody laptop on a Chromebook kind of

00:36:29,990 --> 00:36:35,360
thing and I'm not saying that the

00:36:31,400 --> 00:36:37,310
relevant but I'm also saying that yeah

00:36:35,360 --> 00:36:38,540
it's a very specific area that make

00:36:37,310 --> 00:36:40,310
sense and probably you could even argue

00:36:38,540 --> 00:36:43,100
that special just belong somewhat left

00:36:40,310 --> 00:36:46,430
bar anyway I mean you know in cases

00:36:43,100 --> 00:36:50,450
whole is like a surrogate for the user

00:36:46,430 --> 00:36:52,460
you know users the UNIX concept and I'm

00:36:50,450 --> 00:36:53,990
not sure like good that it makes like

00:36:52,460 --> 00:36:55,820
yeah we can talk about that too but I

00:36:53,990 --> 00:37:00,350
mean these flies are supposed to come

00:36:55,820 --> 00:37:01,700
out only this much so yeah I want recent

00:37:00,350 --> 00:37:03,410
sort of a factory or said right like we

00:37:01,700 --> 00:37:05,860
have talked a lot about volatile systems

00:37:03,410 --> 00:37:08,660
and system systems and things like that

00:37:05,860 --> 00:37:10,640
you should not forget that there has to

00:37:08,660 --> 00:37:12,890
be usually in Manatee devices a

00:37:10,640 --> 00:37:14,119
controller factory reset meaning that if

00:37:12,890 --> 00:37:16,160
you have a system that is not entirely

00:37:14,119 --> 00:37:18,050
volatile you still might want to have a

00:37:16,160 --> 00:37:19,790
way I can recite it to the version of

00:37:18,050 --> 00:37:23,180
the country when I came out of the

00:37:19,790 --> 00:37:24,890
factory so yeah even if you have a

00:37:23,180 --> 00:37:28,580
persistent at the invar there needs to

00:37:24,890 --> 00:37:30,260
be nearly reset now I greatly talk about

00:37:28,580 --> 00:37:31,640
this I like if we have a volatile system

00:37:30,260 --> 00:37:33,590
that the volatility that actually is

00:37:31,640 --> 00:37:35,630
empty during boot that sounds

00:37:33,590 --> 00:37:39,170
conceptually easing but actually making

00:37:35,630 --> 00:37:41,119
that work on UNIX is pretty nasty right

00:37:39,170 --> 00:37:43,369
booting up with an empty bar is much

00:37:41,119 --> 00:37:46,040
easier why is booting up with acting so

00:37:43,369 --> 00:37:46,250
hard is because in Etsy you have things

00:37:46,040 --> 00:37:49,070
like

00:37:46,250 --> 00:37:51,680
FB possibility right which is the user

00:37:49,070 --> 00:37:53,869
database now the user database is called

00:37:51,680 --> 00:37:55,820
user database so if you don't have local

00:37:53,869 --> 00:37:57,950
users you would assume you need them but

00:37:55,820 --> 00:37:59,780
actually you do because it's system

00:37:57,950 --> 00:38:01,040
users generally generate it with how you

00:37:59,780 --> 00:38:02,810
feel like if you run a web

00:38:01,040 --> 00:38:04,880
server on your on your system you

00:38:02,810 --> 00:38:07,820
usually has its own private user so if

00:38:04,880 --> 00:38:09,859
you want run with an empty HP you don't

00:38:07,820 --> 00:38:12,160
have users and then your system look

00:38:09,859 --> 00:38:14,510
very different than what goes to be

00:38:12,160 --> 00:38:15,890
insistently we try to come up with

00:38:14,510 --> 00:38:18,770
schemes to make that happen

00:38:15,890 --> 00:38:21,110
all right so that even mr. Buddha was an

00:38:18,770 --> 00:38:22,580
the empty a C and an empty bar that

00:38:21,110 --> 00:38:25,190
there are ways that you can make sure

00:38:22,580 --> 00:38:28,010
that if we notice that we will populate

00:38:25,190 --> 00:38:30,230
it initially with a couple of things I

00:38:28,010 --> 00:38:31,160
don't want to go into detail already

00:38:30,230 --> 00:38:33,860
because I don't have so much time

00:38:31,160 --> 00:38:36,170
anymore about the specific functionality

00:38:33,860 --> 00:38:37,880
on this thing is this me temple is a big

00:38:36,170 --> 00:38:40,670
thing for that and system exists users

00:38:37,880 --> 00:38:42,860
will solve this system you think it

00:38:40,670 --> 00:38:44,960
basically allows you to define system

00:38:42,860 --> 00:38:47,780
users in that part of such user with

00:38:44,960 --> 00:38:50,090
probably belong to any way instead of

00:38:47,780 --> 00:38:58,340
let's actually flow for system uses a

00:38:50,090 --> 00:38:59,930
question sure I mean so the question was

00:38:58,340 --> 00:39:02,270
regarding why not use over the event

00:38:59,930 --> 00:39:03,770
that's that's I mean option like I mean

00:39:02,270 --> 00:39:05,480
it's not a traditionally viable option

00:39:03,770 --> 00:39:09,860
Linux but it certainly is an option

00:39:05,480 --> 00:39:12,830
today I think you know I would much

00:39:09,860 --> 00:39:15,290
rather do this cleanly and make the UNIX

00:39:12,830 --> 00:39:17,360
Araki work well this kind of thing input

00:39:15,290 --> 00:39:20,030
to me the overlay stuff kind of kind of

00:39:17,360 --> 00:39:21,710
is the cheap way out right you can all

00:39:20,030 --> 00:39:23,600
the fact that these ministers with

00:39:21,710 --> 00:39:26,660
complex and you just put something on

00:39:23,600 --> 00:39:28,220
top to make it changes not hit the disk

00:39:26,660 --> 00:39:30,890
or things like that it also has a

00:39:28,220 --> 00:39:33,740
problem like I kind of like this very

00:39:30,890 --> 00:39:36,440
clear separation that smash users only

00:39:33,740 --> 00:39:38,000
read only and that /fc special R has a

00:39:36,440 --> 00:39:39,859
precise semantics that I want them to be

00:39:38,000 --> 00:39:42,619
meaning viable and volatile of vital and

00:39:39,859 --> 00:39:45,770
persistent right but if you put it over

00:39:42,619 --> 00:39:48,200
a file system on top then it's congas

00:39:45,770 --> 00:39:49,700
blurred right I don't know if it's

00:39:48,200 --> 00:39:51,140
deafening option if you if you need a

00:39:49,700 --> 00:39:52,369
quick solution to make something like

00:39:51,140 --> 00:39:55,970
this happen now it's probably a better

00:39:52,369 --> 00:39:58,970
option but then again I think I'm not in

00:39:55,970 --> 00:40:01,790
this indicate like it's not my job to

00:39:58,970 --> 00:40:04,790
come up with solutions and it's just

00:40:01,790 --> 00:40:07,190
work now I think my job is more like

00:40:04,790 --> 00:40:09,230
like trying to work on the operating

00:40:07,190 --> 00:40:11,540
system in the long run to make it in the

00:40:09,230 --> 00:40:13,970
long run team and I think the much

00:40:11,540 --> 00:40:15,619
cleaner way is if we just clearly stick

00:40:13,970 --> 00:40:17,960
to these definitions of a CDN

00:40:15,619 --> 00:40:19,760
configuration of our being station human

00:40:17,960 --> 00:40:22,190
being the operating system vendor and

00:40:19,760 --> 00:40:22,799
make that work because that we don't

00:40:22,190 --> 00:40:25,319
need

00:40:22,799 --> 00:40:26,789
complexity by getting over land and also

00:40:25,319 --> 00:40:29,509
not without problems rather because it

00:40:26,789 --> 00:40:32,849
really doesn't diplomat co6 like em

00:40:29,509 --> 00:40:34,619
environment them in realize I think half

00:40:32,849 --> 00:40:36,509
of the deployment of overlays that's

00:40:34,619 --> 00:40:37,920
probably created more problems than

00:40:36,509 --> 00:40:38,609
myself with this scheme but that's

00:40:37,920 --> 00:40:45,119
another discussion

00:40:38,609 --> 00:40:46,829
I thought these configurations I see

00:40:45,119 --> 00:40:49,529
they can have that but generally and

00:40:46,829 --> 00:40:51,420
like if you package them they you put

00:40:49,529 --> 00:40:54,869
them in such user the ten palpating

00:40:51,420 --> 00:40:56,009
looked at various places but generally

00:40:54,869 --> 00:40:58,079
we follow this logically there's

00:40:56,009 --> 00:41:00,509
something shifts along with the package

00:40:58,079 --> 00:41:02,369
it will also slash user if something is

00:41:00,509 --> 00:41:06,299
if your configuration has an atom to put

00:41:02,369 --> 00:41:07,739
the method the last thing which I only

00:41:06,299 --> 00:41:10,019
like partners to talk about that I

00:41:07,739 --> 00:41:12,059
wanted to briefly touch is a tool that

00:41:10,019 --> 00:41:13,890
we have been recently working on under

00:41:12,059 --> 00:41:16,709
the system via brother called mpos I

00:41:13,890 --> 00:41:20,219
that stands for make operating system

00:41:16,709 --> 00:41:22,679
image it's the tool like many others

00:41:20,219 --> 00:41:25,170
already exist the basic allows you to

00:41:22,679 --> 00:41:27,119
take it as short build an image from and

00:41:25,170 --> 00:41:30,509
the reason why I think it's interesting

00:41:27,119 --> 00:41:32,009
and and obviously the white people have

00:41:30,509 --> 00:41:33,989
so many tools like later in whatever

00:41:32,009 --> 00:41:38,160
they're called it do kind of same thing

00:41:33,989 --> 00:41:40,799
the relevance is why this exists is it

00:41:38,160 --> 00:41:43,140
supposedly likely free emotion Eric and

00:41:40,799 --> 00:41:45,119
all also discovery meaning

00:41:43,140 --> 00:41:49,709
yeah you can't you generate something

00:41:45,119 --> 00:41:51,420
with it with an MBR image from that yeah

00:41:49,709 --> 00:41:53,309
and it doesn't do any of these this Oaks

00:41:51,420 --> 00:41:55,289
out stuff but what it does instead is

00:41:53,309 --> 00:41:58,109
planning negatively and the will give

00:41:55,289 --> 00:41:59,969
you the full trust chain right suppose

00:41:58,109 --> 00:42:02,099
the variety of distributions can build

00:41:59,969 --> 00:42:03,630
engine images are images that are

00:42:02,099 --> 00:42:05,009
averages with it and then it's all

00:42:03,630 --> 00:42:06,420
system in a couple of options but it

00:42:05,009 --> 00:42:09,179
won't give you every option on plant

00:42:06,420 --> 00:42:11,339
very quick it will it will try to reduce

00:42:09,179 --> 00:42:15,449
complexity a little bit by trying to

00:42:11,339 --> 00:42:16,529
focus on keeping things like in some

00:42:15,449 --> 00:42:18,779
ways well-defined

00:42:16,529 --> 00:42:23,999
like the images are alter all those

00:42:18,779 --> 00:42:27,239
coverable meaning that that the petition

00:42:23,999 --> 00:42:30,749
tables explaining Kylie how the system

00:42:27,239 --> 00:42:32,729
is set up so that if you look at the

00:42:30,749 --> 00:42:33,550
image it can Thomas position to look at

00:42:32,729 --> 00:42:35,560
the petition table

00:42:33,550 --> 00:42:37,180
know how to mount it in wet amount which

00:42:35,560 --> 00:42:40,180
is not the case traditional in exile in

00:42:37,180 --> 00:42:42,160
us and usually somehow need to know

00:42:40,180 --> 00:42:44,140
where the root file wisdom is and then

00:42:42,160 --> 00:42:45,910
from the root filesystem you can read at

00:42:44,140 --> 00:42:48,790
the ss7 it tells you something about

00:42:45,910 --> 00:42:50,320
further petition but in this scheme we

00:42:48,790 --> 00:42:51,850
store everything in a citation table

00:42:50,320 --> 00:42:54,910
everything GPT because it's actually

00:42:51,850 --> 00:42:57,130
doesn't really matter what it does what

00:42:54,910 --> 00:42:59,560
generally the other tools like let's

00:42:57,130 --> 00:43:03,100
don't do it do the entire trust chain

00:42:59,560 --> 00:43:06,220
so um if you build an image language it

00:43:03,100 --> 00:43:08,770
will actually generate very key hashes

00:43:06,220 --> 00:43:11,070
for you it will find a kernel for you

00:43:08,770 --> 00:43:13,570
and make all the second boot stuff

00:43:11,070 --> 00:43:15,550
relatively manageable for even those

00:43:13,570 --> 00:43:17,740
people who don't really want to deal

00:43:15,550 --> 00:43:19,270
with the complexity of traffic group it

00:43:17,740 --> 00:43:21,130
doesn't solve it entirely like for

00:43:19,270 --> 00:43:23,710
example the complexity of actually

00:43:21,130 --> 00:43:26,620
generating your own keypad and enrolling

00:43:23,710 --> 00:43:29,200
the key on your system I don't care like

00:43:26,620 --> 00:43:33,400
it's not my job to do that something you

00:43:29,200 --> 00:43:35,620
have to do but everything beyond that it

00:43:33,400 --> 00:43:38,500
will do for you it is also built for

00:43:35,620 --> 00:43:40,930
developers meaning like it has these do

00:43:38,500 --> 00:43:42,430
you think like a lagoon and two-phase

00:43:40,930 --> 00:43:44,800
building so it's actually built image

00:43:42,430 --> 00:43:46,390
twice one image like the first image is

00:43:44,800 --> 00:43:48,040
built with with development headers and

00:43:46,390 --> 00:43:51,790
these kind of things so that you can can

00:43:48,040 --> 00:43:53,950
put that stuff in your adultery and then

00:43:51,790 --> 00:43:55,120
it will build correctly because all the

00:43:53,950 --> 00:43:58,510
head of the installed and under the

00:43:55,120 --> 00:44:00,700
second bill after it generated all those

00:43:58,510 --> 00:44:02,410
artifacts but this time will leave out

00:44:00,700 --> 00:44:04,930
everything that was necessary for the

00:44:02,410 --> 00:44:08,170
build time and it just build you the

00:44:04,930 --> 00:44:10,300
reduced thing we use and couriers I for

00:44:08,170 --> 00:44:12,220
a couple of different things we all one

00:44:10,300 --> 00:44:15,400
of the main things is we actually use it

00:44:12,220 --> 00:44:18,760
or why we wrote it to test this to me

00:44:15,400 --> 00:44:21,280
itself right if you check out certainly

00:44:18,760 --> 00:44:23,500
from the Byzantine military you will

00:44:21,280 --> 00:44:26,860
actually find one of those M cozy recipe

00:44:23,500 --> 00:44:29,700
files there and the basically allows you

00:44:26,860 --> 00:44:32,350
to take a time get version of system D

00:44:29,700 --> 00:44:34,150
and generate a disk image from it with

00:44:32,350 --> 00:44:34,850
the active current version of Debian or

00:44:34,150 --> 00:44:36,650
the kind

00:44:34,850 --> 00:44:38,180
Fedora where's all the dependencies

00:44:36,650 --> 00:44:40,220
pulled it together so that we can

00:44:38,180 --> 00:44:42,200
actually properly test system D for

00:44:40,220 --> 00:44:45,920
various distributions without ever

00:44:42,200 --> 00:44:49,670
having to do anything menu mko times

00:44:45,920 --> 00:44:52,310
written titan i mean if you could say a

00:44:49,670 --> 00:44:56,720
little more than a fancy way of calling

00:44:52,310 --> 00:44:58,760
DNS root install but yeah the good

00:44:56,720 --> 00:45:00,050
things like the focus of it is really

00:44:58,760 --> 00:45:03,680
about making things easy for developers

00:45:00,050 --> 00:45:06,260
and for people who build appliances who

00:45:03,680 --> 00:45:09,110
just won't have like you want hang the

00:45:06,260 --> 00:45:11,570
see stuff and then in the end could get

00:45:09,110 --> 00:45:16,970
an image out of it that pulls in all the

00:45:11,570 --> 00:45:18,680
stuff properly um yeah I mean I could

00:45:16,970 --> 00:45:20,450
just briefly touch a lot of the stuff

00:45:18,680 --> 00:45:22,940
that I'm talking I know that much of

00:45:20,450 --> 00:45:26,150
this way too complex to grasp move this

00:45:22,940 --> 00:45:27,260
quickly um oh what I still wanted to

00:45:26,150 --> 00:45:29,300
make sure is that you understand like

00:45:27,260 --> 00:45:31,670
visit to lots of different things right

00:45:29,300 --> 00:45:33,080
and while maybe the US I support Nancy

00:45:31,670 --> 00:45:34,730
boot is not relevant to you because you

00:45:33,080 --> 00:45:36,440
do Emirates doesn't only care about the

00:45:34,730 --> 00:45:37,730
arm various doing trusted boot either

00:45:36,440 --> 00:45:39,650
you show a lot of the things that are

00:45:37,730 --> 00:45:42,230
touched here for example 10,000 systems

00:45:39,650 --> 00:45:43,700
whatever out kind of will make sense to

00:45:42,230 --> 00:45:46,610
you and you can use them in that context

00:45:43,700 --> 00:45:49,130
so this is just toolbox let's get you

00:45:46,610 --> 00:45:50,480
off the ground is nowhere complete some

00:45:49,130 --> 00:45:52,220
like something has something that I

00:45:50,480 --> 00:45:54,350
would like it to be but it never will

00:45:52,220 --> 00:45:55,760
probably be so quickly that you can just

00:45:54,350 --> 00:45:59,690
take it and still be system when you're

00:45:55,760 --> 00:46:03,440
done right there's my last slide about

00:45:59,690 --> 00:46:08,930
the outlook here might I'm kind of over

00:46:03,440 --> 00:46:11,210
just miss okay I'm just going so they're

00:46:08,930 --> 00:46:13,280
like the only would be that's done this

00:46:11,210 --> 00:46:15,800
functionality is having entirely trusted

00:46:13,280 --> 00:46:17,690
disk access right like so that's that

00:46:15,800 --> 00:46:19,880
you have K notes that cannot be

00:46:17,690 --> 00:46:22,310
methylated with people noticing is

00:46:19,880 --> 00:46:24,530
something what the first things actually

00:46:22,310 --> 00:46:27,590
not just houses with that already works

00:46:24,530 --> 00:46:29,420
like an spawn is is a component system

00:46:27,590 --> 00:46:31,280
is abetting allows you to run like

00:46:29,420 --> 00:46:32,840
little OS containers on top of system

00:46:31,280 --> 00:46:34,160
yourself something a doctor but it's not

00:46:32,840 --> 00:46:37,730
doctor and it's more focused on running

00:46:34,160 --> 00:46:41,060
entire operating systems and just micro

00:46:37,730 --> 00:46:43,160
services but in an spawned this

00:46:41,060 --> 00:46:44,430
functionality like this the the entire

00:46:43,160 --> 00:46:47,880
key support and things like

00:46:44,430 --> 00:46:49,170
is indeed the petition table support all

00:46:47,880 --> 00:46:51,630
this auto-discovery stuff is all

00:46:49,170 --> 00:46:54,120
built-in right so you can actually build

00:46:51,630 --> 00:46:56,760
an image with MK o si you can put it on

00:46:54,120 --> 00:46:58,800
physical media in a trusted environment

00:46:56,760 --> 00:47:01,020
like with full verification but it can

00:46:58,800 --> 00:47:03,390
also boot it with an spawn and also get

00:47:01,020 --> 00:47:06,000
the full very education that that at the

00:47:03,390 --> 00:47:08,250
moment that contain our access its own

00:47:06,000 --> 00:47:11,700
files you get the verification in the

00:47:08,250 --> 00:47:15,720
background then something we are working

00:47:11,700 --> 00:47:17,130
on now is a concept called portable

00:47:15,720 --> 00:47:18,330
service they did it come up talk about

00:47:17,130 --> 00:47:20,910
that and other conferences about that

00:47:18,330 --> 00:47:22,800
it's something we want to go to it's

00:47:20,910 --> 00:47:26,430
kind of our answer to containers because

00:47:22,800 --> 00:47:27,750
I think containers a weird and as much

00:47:26,430 --> 00:47:29,640
of this function is used in that

00:47:27,750 --> 00:47:31,280
portable services concept as well as you

00:47:29,640 --> 00:47:33,180
are interested in the kind of stuff

00:47:31,280 --> 00:47:35,970
going you keep I think they might be

00:47:33,180 --> 00:47:39,930
talk or two with a video about bottled

00:47:35,970 --> 00:47:43,140
services and something else that I

00:47:39,930 --> 00:47:44,820
really care about is what we don't cover

00:47:43,140 --> 00:47:46,740
enough always cover your suspension

00:47:44,820 --> 00:47:49,520
rather let's not talk about that but the

00:47:46,740 --> 00:47:51,240
last thing is kind of interesting is

00:47:49,520 --> 00:47:52,590
you're having there is a complete

00:47:51,240 --> 00:47:55,290
transfer chain for one disk image is

00:47:52,590 --> 00:47:57,690
usually not enough right leg because if

00:47:55,290 --> 00:47:59,430
you will sell a built-in handle device

00:47:57,690 --> 00:48:01,170
that we never update right you always

00:47:59,430 --> 00:48:04,140
need at least two versions of the

00:48:01,170 --> 00:48:05,790
operating system on each device like the

00:48:04,140 --> 00:48:08,160
version that you run and the next

00:48:05,790 --> 00:48:09,360
version of you're upgrading to or the

00:48:08,160 --> 00:48:12,750
version that you run and the last

00:48:09,360 --> 00:48:14,730
version of the upgraded small so what

00:48:12,750 --> 00:48:17,640
kind of necessary still is that we have

00:48:14,730 --> 00:48:23,100
a scheme when we automatic in robustly

00:48:17,640 --> 00:48:25,410
can boot a system so that we try to boot

00:48:23,100 --> 00:48:26,850
it try to put it again as it fails try

00:48:25,410 --> 00:48:28,800
to put it again at the sale for the

00:48:26,850 --> 00:48:30,900
after three times trying that we were

00:48:28,800 --> 00:48:32,160
brought to the old version that's that's

00:48:30,900 --> 00:48:35,220
something that Chromebooks for example

00:48:32,160 --> 00:48:37,230
implemented kind of necessity for having

00:48:35,220 --> 00:48:38,850
reading really quick release cycles

00:48:37,230 --> 00:48:40,560
these days because the quicker you

00:48:38,850 --> 00:48:42,240
release cycles are more frequently your

00:48:40,560 --> 00:48:44,550
update your systems if you're the last

00:48:42,240 --> 00:48:47,550
time that's real that you actually have

00:48:44,550 --> 00:48:49,170
to test your right and so with

00:48:47,550 --> 00:48:51,330
Chromebooks on these kind of things um

00:48:49,170 --> 00:48:54,000
the start is tested in the wild I like

00:48:51,330 --> 00:48:55,460
it this is shifted people but being able

00:48:54,000 --> 00:48:57,710
to do that means

00:48:55,460 --> 00:48:59,900
that yeah you need to have them recovery

00:48:57,710 --> 00:49:03,140
if things go wrong and the stuff does

00:48:59,900 --> 00:49:05,599
not build up anymore is it good so yeah

00:49:03,140 --> 00:49:08,990
I can probably talk about that and we

00:49:05,599 --> 00:49:11,660
talked about just that part and only

00:49:08,990 --> 00:49:12,650
that part two but anyway this is all I

00:49:11,660 --> 00:49:14,270
have

00:49:12,650 --> 00:49:17,030
I like we're being kicked out it can

00:49:14,270 --> 00:49:19,700
take more questions yeah I'm opposed

00:49:17,030 --> 00:49:24,160
that is saying thank you to some people

00:49:19,700 --> 00:49:27,109
what we get theta so I like to thank you

00:49:24,160 --> 00:49:33,470
Richard and John showed up with very

00:49:27,109 --> 00:49:34,940
short healthy and I want to thank all of

00:49:33,470 --> 00:49:39,349
you for showing up and all the speakers

00:49:34,940 --> 00:49:58,309
for showing up and thank ya many thank

00:49:39,349 --> 00:50:00,290
you so could you prevent occasions and

00:49:58,309 --> 00:50:02,839
festivals of you verified into the

00:50:00,290 --> 00:50:05,390
deathbed but really want to make sure

00:50:02,839 --> 00:50:07,430
that someone else is something as well

00:50:05,390 --> 00:50:10,010
so the question was regarding temp

00:50:07,430 --> 00:50:13,220
effective we do anywhere we don't turn

00:50:10,010 --> 00:50:14,119
it off it should actually work and so

00:50:13,220 --> 00:50:15,920
the question was regarding cancer

00:50:14,119 --> 00:50:18,559
message we do any verification that

00:50:15,920 --> 00:50:20,390
tempest has by by its nature this is

00:50:18,559 --> 00:50:22,400
multi right like you just turn off the

00:50:20,390 --> 00:50:25,579
computer and when you thought again

00:50:22,400 --> 00:50:28,130
because Rama doesn't keep this up you

00:50:25,579 --> 00:50:30,559
start fresh so there's no offline

00:50:28,130 --> 00:50:32,660
changes possible because we always

00:50:30,559 --> 00:50:35,420
started French anyway so no we do not

00:50:32,660 --> 00:50:38,240
don't do them like the implied

00:50:35,420 --> 00:50:41,240
assumption is let discs like like CF

00:50:38,240 --> 00:50:43,430
cards rotating is whatever he has they

00:50:41,240 --> 00:50:45,980
are subject to offline modification but

00:50:43,430 --> 00:50:52,380
ROM being stuff that is lashed out on

00:50:45,980 --> 00:50:57,089
each food um is not it is only

00:50:52,380 --> 00:51:00,569
I am sorry for this or really for

00:50:57,089 --> 00:51:02,789
leaving you with the resources in me so

00:51:00,569 --> 00:51:04,349
pretty much everything I talked about is

00:51:02,789 --> 00:51:06,539
actually in a release version in the in

00:51:04,349 --> 00:51:07,920
the most recent one except for the stuff

00:51:06,539 --> 00:51:09,960
of course that I talked about in the

00:51:07,920 --> 00:51:11,519
Outlook slide which we're the first one

00:51:09,960 --> 00:51:13,650
actually already existed - but the other

00:51:11,519 --> 00:51:15,630
ones don't and we still have to figure

00:51:13,650 --> 00:51:17,640
all of that out um yeah but it's still

00:51:15,630 --> 00:51:26,190
work-in-progress right but kind of

00:51:17,640 --> 00:51:31,769
important so could you have all the

00:51:26,190 --> 00:51:33,630
little stuff in the Umbrian or well I

00:51:31,769 --> 00:51:35,519
mean how can either you set up your view

00:51:33,630 --> 00:51:37,799
of your individual IOT system is of

00:51:35,519 --> 00:51:39,960
course up to you there's the thing that

00:51:37,799 --> 00:51:41,970
we really want to do here is come up

00:51:39,960 --> 00:51:44,460
with a generic way like how I think it

00:51:41,970 --> 00:51:46,109
probably makes sense to do um and if you

00:51:44,460 --> 00:51:48,150
want to make your life easy then maybe

00:51:46,109 --> 00:51:50,970
you've adopted but you really don't have

00:51:48,150 --> 00:51:53,700
to if you use this scheme then slash

00:51:50,970 --> 00:51:55,470
user would be in a mutable file system

00:51:53,700 --> 00:51:57,240
and it can be large right like depending

00:51:55,470 --> 00:51:58,920
on what kind of a MIDI devices will be

00:51:57,240 --> 00:52:01,890
ten megabytes but it can be hundred

00:51:58,920 --> 00:52:03,809
megabyte there could be a gigabyte now

00:52:01,890 --> 00:52:07,769
of course usually Ram is much smaller

00:52:03,809 --> 00:52:09,359
than that mmm better devices but I mean

00:52:07,769 --> 00:52:10,980
ultimately if you have a small device

00:52:09,359 --> 00:52:12,359
and lots of RAM then yeah the Linux

00:52:10,980 --> 00:52:14,369
kernel is it will eventually cache

00:52:12,359 --> 00:52:16,230
everything as less user into into Ram

00:52:14,369 --> 00:52:18,480
and then you run entirely out of run but

00:52:16,230 --> 00:52:21,839
that I mean it's kind of what I care for

00:52:18,480 --> 00:52:23,730
really the kernel question right and how

00:52:21,839 --> 00:52:28,579
you size your ram against you your

00:52:23,730 --> 00:52:33,890
persistent disk but what is read-only

00:52:28,579 --> 00:52:36,180
more in lecture the loop of the site

00:52:33,890 --> 00:52:38,460
let's actually very good question of the

00:52:36,180 --> 00:52:42,240
thing is it actually is so and what I

00:52:38,460 --> 00:52:44,430
didn't really put any focus on here is

00:52:42,240 --> 00:52:46,230
like this and if I say oh there's a

00:52:44,430 --> 00:52:49,109
volatile boot time switch that I

00:52:46,230 --> 00:52:52,200
mentioned that and I said it was yes and

00:52:49,109 --> 00:52:53,579
I was state so if you select state what

00:52:52,200 --> 00:52:58,259
happens actually is that the root

00:52:53,579 --> 00:53:01,200
filesystem is really only and it's

00:52:58,259 --> 00:53:02,150
actually a real device and that includes

00:53:01,200 --> 00:53:04,010
then implicit

00:53:02,150 --> 00:53:06,619
slash user but slash wires mommy from

00:53:04,010 --> 00:53:09,140
Tampa that but if you do the full

00:53:06,619 --> 00:53:11,420
volatile stuff then this means that only

00:53:09,140 --> 00:53:14,480
slash user is on disk and the entire

00:53:11,420 --> 00:53:16,609
root directory right including slash

00:53:14,480 --> 00:53:17,930
Etsy including slash bar but also

00:53:16,609 --> 00:53:20,779
including anything else you might have

00:53:17,930 --> 00:53:22,250
there that's well time right but that's

00:53:20,779 --> 00:53:24,260
kind of the two months we support

00:53:22,250 --> 00:53:26,059
natively in system via doesn't mean that

00:53:24,260 --> 00:53:27,799
some of you have to run but that's kind

00:53:26,059 --> 00:53:29,960
of what we were focused on we didn't

00:53:27,799 --> 00:53:32,210
really see any particularly reason to

00:53:29,960 --> 00:53:35,539
support a mode where you have slash

00:53:32,210 --> 00:53:35,839
read-only but then se model on tap at

00:53:35,539 --> 00:53:37,579
rest

00:53:35,839 --> 00:53:40,880
like that button and usually there's not

00:53:37,579 --> 00:53:43,849
much in in slash anyway that wasn't

00:53:40,880 --> 00:53:45,380
supplied by the vendor right it's I mean

00:53:43,849 --> 00:53:57,920
some animals do that but in general

00:53:45,380 --> 00:53:59,390
there's no real madrid or well you know

00:53:57,920 --> 00:54:01,069
i am personally not a big fan of crap I

00:53:59,390 --> 00:54:02,900
think rap is an over engineered crazy

00:54:01,069 --> 00:54:05,569
piece of thing and nobody needs that

00:54:02,900 --> 00:54:07,700
right like because actually the the USI

00:54:05,569 --> 00:54:09,589
firmware generally make a completely

00:54:07,700 --> 00:54:11,359
unnecessary to have a bootloader right

00:54:09,589 --> 00:54:13,549
the only reason as people exist is not

00:54:11,359 --> 00:54:17,059
because we want a bootloader it's really

00:54:13,549 --> 00:54:20,589
just about a offering a friendly menu to

00:54:17,059 --> 00:54:22,520
users who human users and be

00:54:20,589 --> 00:54:24,230
automatically selecting like this

00:54:22,520 --> 00:54:26,660
covering available kernels and picking

00:54:24,230 --> 00:54:30,859
one of the first one now when we when we

00:54:26,660 --> 00:54:32,809
did the easy as the boot initially we

00:54:30,859 --> 00:54:35,119
did that at the time the US I was not

00:54:32,809 --> 00:54:36,950
the the thing you always got right like

00:54:35,119 --> 00:54:39,770
whether still substantially amount of

00:54:36,950 --> 00:54:41,240
computers it didn't do us I and at that

00:54:39,770 --> 00:54:43,220
point in time I actually read the

00:54:41,240 --> 00:54:45,319
similar scheme for ground like a grub

00:54:43,220 --> 00:54:47,059
module but never emerged but if you look

00:54:45,319 --> 00:54:48,950
for a deals to fine it was invested or

00:54:47,059 --> 00:54:53,390
appendages or live in a very weird way

00:54:48,950 --> 00:54:55,029
but I don't know I I never ran any of

00:54:53,390 --> 00:54:57,529
the free biases so I don't really know

00:54:55,029 --> 00:55:00,049
how they works but if they do implement

00:54:57,529 --> 00:55:02,869
use I and then SP boot will just work

00:55:00,049 --> 00:55:03,960
and there's no reason to use as kyboot

00:55:02,869 --> 00:55:05,910
if they I mean they can

00:55:03,960 --> 00:55:07,560
to matter directly the people is one

00:55:05,910 --> 00:55:09,630
possible implementation but again as you

00:55:07,560 --> 00:55:10,920
but it's a stupid Peters cup right like

00:55:09,630 --> 00:55:12,480
it just goes through a couple of

00:55:10,920 --> 00:55:14,790
directories and looks for kernels in

00:55:12,480 --> 00:55:17,130
there and embed for the output together

00:55:14,790 --> 00:55:19,380
its menu that that logic isn't hard that

00:55:17,130 --> 00:55:22,170
is better and it's not trivial either

00:55:19,380 --> 00:55:24,119
but it's certainly not as complex as

00:55:22,170 --> 00:55:26,369
people generally assume at google it has

00:55:24,119 --> 00:55:29,010
to be and absolutely know this complex

00:55:26,369 --> 00:55:49,770
of scrubbers so that's like kind of a

00:55:29,010 --> 00:55:51,450
question I'm wondering so the next wise

00:55:49,770 --> 00:55:53,010
people actually came to our system your

00:55:51,450 --> 00:55:55,200
comp last year by the way you're all

00:55:53,010 --> 00:55:56,820
invited again okay this time actually

00:55:55,200 --> 00:55:59,880
will not be called system deed company

00:55:56,820 --> 00:56:00,960
more it will be called all systems go

00:55:59,880 --> 00:56:02,880
and it will be a little bit broader

00:56:00,960 --> 00:56:05,099
because the stuff that I'm talking about

00:56:02,880 --> 00:56:06,690
here for example isn't really too

00:56:05,099 --> 00:56:08,339
clearly involved with system being like

00:56:06,690 --> 00:56:11,220
a service manager either it's more about

00:56:08,339 --> 00:56:13,740
this general ecosystem but anyway and

00:56:11,220 --> 00:56:16,589
they were the Nexus to ask people where

00:56:13,740 --> 00:56:17,880
this is income philosophy and I think

00:56:16,589 --> 00:56:23,820
many of the concepts they came up with

00:56:17,880 --> 00:56:25,440
are awesome but um much like was a tonic

00:56:23,820 --> 00:56:28,260
like the Red Hat Atomics thing which is

00:56:25,440 --> 00:56:31,380
OS 3 there's one major difference of

00:56:28,260 --> 00:56:34,050
this scheme we do to this scheme and

00:56:31,380 --> 00:56:36,839
that is this scheme with the embarrass

00:56:34,050 --> 00:56:40,140
II is kind of focused on having strictly

00:56:36,839 --> 00:56:42,780
immutable stuff meaning that the file

00:56:40,140 --> 00:56:46,140
system itself is being protected right

00:56:42,780 --> 00:56:47,790
so that file system like that the people

00:56:46,140 --> 00:56:49,619
cannot corrupt the file system because

00:56:47,790 --> 00:56:52,470
it will also be recognized this is

00:56:49,619 --> 00:56:54,450
different from systems like OS 3 or a

00:56:52,470 --> 00:56:57,180
Mixel s or things like that because they

00:56:54,450 --> 00:56:58,680
generally assume likely they look one

00:56:57,180 --> 00:57:02,490
level of bus they assume that the file

00:56:58,680 --> 00:57:05,010
system is trusted it's okay but then on

00:57:02,490 --> 00:57:06,359
the file system they when they drop

00:57:05,010 --> 00:57:08,460
stuff there then they do the

00:57:06,359 --> 00:57:10,349
verification and these hashes and

00:57:08,460 --> 00:57:13,020
whatever else to match things up

00:57:10,349 --> 00:57:14,400
correctly but I think it ultimately

00:57:13,020 --> 00:57:15,610
doesn't deliver the same level of trust

00:57:14,400 --> 00:57:17,490
because it does not protect it

00:57:15,610 --> 00:57:21,910
anyway to offline modifications right

00:57:17,490 --> 00:57:24,370
it's like yeah this thing I think is way

00:57:21,910 --> 00:57:26,850
more secure and I think I personally

00:57:24,370 --> 00:57:30,600
think though I know that people disagree

00:57:26,850 --> 00:57:33,850
this is the way to go um but I mean

00:57:30,600 --> 00:57:35,980
ultimately I think in the broader

00:57:33,850 --> 00:57:38,650
ecosystem an exacta system people don't

00:57:35,980 --> 00:57:41,710
agree at all that cryptography and at

00:57:38,650 --> 00:57:43,390
this level and only having a MIDI

00:57:41,710 --> 00:57:44,860
devices that are always strictly

00:57:43,390 --> 00:57:45,730
verified is actually the weather girl I

00:57:44,860 --> 00:57:48,790
personally think it's absolutely

00:57:45,730 --> 00:57:50,500
necessary but yeah I don't know this is

00:57:48,790 --> 00:57:53,050
really where you put yourself you built

00:57:50,500 --> 00:57:55,480
entirely on trusted systems built more

00:57:53,050 --> 00:57:57,760
trusted systems like OS tree and Nick

00:57:55,480 --> 00:57:59,530
soils where you do verification at the

00:57:57,760 --> 00:58:03,460
install phase or update phase but not

00:57:59,530 --> 00:58:05,170
any offline protection or the entirely

00:58:03,460 --> 00:58:08,980
trusted stuff where you actually are

00:58:05,170 --> 00:58:11,890
safe again offline stuff and I'm I'm

00:58:08,980 --> 00:58:14,170
very much sure we should go to hole why

00:58:11,890 --> 00:58:26,640
because otherwise going over the

00:58:14,170 --> 00:58:29,950
exercise I'm still interested in a

00:58:26,640 --> 00:58:31,750
secure solution that were you have this

00:58:29,950 --> 00:58:34,450
implication between the paint being

00:58:31,750 --> 00:58:37,360
submitted we didn't mention oh pretty

00:58:34,450 --> 00:58:38,770
for I think specific reasons but then I

00:58:37,360 --> 00:58:41,230
think you might be working on something

00:58:38,770 --> 00:58:43,480
else but you had a sauce on table or we

00:58:41,230 --> 00:58:47,560
don't have to keep things going wrong

00:58:43,480 --> 00:58:49,030
with a tentacle um so yeah I mean keep

00:58:47,560 --> 00:58:50,500
ask the questions probably because you

00:58:49,030 --> 00:58:53,530
remember what we talked about it fought

00:58:50,500 --> 00:58:56,290
them right I I didn't remember someone

00:58:53,530 --> 00:58:58,600
but uh Tara was the proceeded invention

00:58:56,290 --> 00:59:01,900
at least those efforts that those pretty

00:58:58,600 --> 00:59:04,300
boys well I mean I think I mean our

00:59:01,900 --> 00:59:06,250
story is great but I also think it

00:59:04,300 --> 00:59:08,740
doesn't ultimately deliver the things

00:59:06,250 --> 00:59:10,900
that I think we have to deliver these

00:59:08,740 --> 00:59:12,240
days like being the group entire second

00:59:10,900 --> 00:59:15,610
security

00:59:12,240 --> 00:59:17,200
but yeah there's a reason like like what

00:59:15,610 --> 00:59:18,490
we talked about it autumn was a tool

00:59:17,200 --> 00:59:20,530
that I'm working on is called C I think

00:59:18,490 --> 00:59:23,110
and I haven't really made a public yet

00:59:20,530 --> 00:59:24,359
in the number of people I did introduce

00:59:23,110 --> 00:59:27,809
it into

00:59:24,359 --> 00:59:30,509
is it to them personally and see I think

00:59:27,809 --> 00:59:32,579
the tool that basically it's a it's a I

00:59:30,509 --> 00:59:35,700
can probably do it an entire talk about

00:59:32,579 --> 00:59:39,059
just that it's an it's something like a

00:59:35,700 --> 00:59:42,779
between get and between our thing and

00:59:39,059 --> 00:59:45,089
probably even between os3 and the thing

00:59:42,779 --> 00:59:46,470
that it tries to do is that if you build

00:59:45,089 --> 00:59:48,140
images like this like if you build

00:59:46,470 --> 00:59:50,849
systems like this year you of course

00:59:48,140 --> 00:59:52,499
have regular dates and you have updates

00:59:50,849 --> 00:59:53,880
over and over and again and this scheme

00:59:52,499 --> 00:59:55,950
kind of suggests that you always keep

00:59:53,880 --> 00:59:58,739
two complete copies of them right and

00:59:55,950 --> 01:00:00,720
then you download to completes copies

00:59:58,739 --> 01:00:04,079
right and every time you update you

01:00:00,720 --> 01:00:06,690
would update entire image again this of

01:00:04,079 --> 01:00:08,609
course is problematic right os3 I'm

01:00:06,690 --> 01:00:10,230
sauce is much better because they only

01:00:08,609 --> 01:00:13,019
download the individual files that have

01:00:10,230 --> 01:00:14,690
changed and others like UNIX well same

01:00:13,019 --> 01:00:17,519
thing

01:00:14,690 --> 01:00:19,259
there is a see anything that I was that

01:00:17,519 --> 01:00:23,359
I'm working on right like actually at

01:00:19,259 --> 01:00:26,039
the moment works differently it tries to

01:00:23,359 --> 01:00:27,749
like it basically take the series ation

01:00:26,039 --> 01:00:30,089
of everything chunked it up into blocks

01:00:27,749 --> 01:00:31,559
but these blocks are like for those if

01:00:30,089 --> 01:00:35,309
you even know the arsenic algorithms

01:00:31,559 --> 01:00:38,880
would use that they basically the levy

01:00:35,309 --> 01:00:41,880
blocks are the same as they contain the

01:00:38,880 --> 01:00:43,859
same data I'm like in respect to size

01:00:41,880 --> 01:00:46,410
and the impassionate and everything so

01:00:43,859 --> 01:00:48,150
we see realize everything we check it up

01:00:46,410 --> 01:00:50,670
into blocks and then these blocks are

01:00:48,150 --> 01:00:52,529
individually downloaded and you have the

01:00:50,670 --> 01:00:54,749
benefit that if you do an upgrade you

01:00:52,529 --> 01:00:56,640
can first use what you already have in

01:00:54,749 --> 01:00:59,220
the seed and the only dime to download

01:00:56,640 --> 01:01:02,940
the chunks that you're missing which the

01:00:59,220 --> 01:01:05,039
way it's written and like the focus is

01:01:02,940 --> 01:01:07,349
on being able to reuse as much as

01:01:05,039 --> 01:01:09,809
possible meaning by getting if you do

01:01:07,349 --> 01:01:11,700
have every quick release cycle see

01:01:09,809 --> 01:01:12,569
generally most of your tree stays

01:01:11,700 --> 01:01:14,940
exactly the same

01:01:12,569 --> 01:01:16,529
right like for example time zone stuff

01:01:14,940 --> 01:01:18,779
will probably never change right like

01:01:16,529 --> 01:01:20,279
you have it's a large file it'll always

01:01:18,779 --> 01:01:23,670
be the same because time those don't

01:01:20,279 --> 01:01:26,789
change okay they do but not very often

01:01:23,670 --> 01:01:28,559
so um the idea really is about

01:01:26,789 --> 01:01:31,470
recognizing these these similarities and

01:01:28,559 --> 01:01:34,049
not downloading it over and over again

01:01:31,470 --> 01:01:36,210
let's call CA think you're getting good

01:01:34,049 --> 01:01:36,790
at minutes you will see that that's kind

01:01:36,210 --> 01:01:40,030
of where

01:01:36,790 --> 01:01:41,890
of micro Mexico these days I didn't make

01:01:40,030 --> 01:01:42,820
it public yet right I didn't read a blog

01:01:41,890 --> 01:01:44,800
story about that

01:01:42,820 --> 01:01:47,170
because I want to cover a couple of more

01:01:44,800 --> 01:01:48,070
things but it will solve some of these

01:01:47,170 --> 01:01:50,200
things right

01:01:48,070 --> 01:01:52,390
ultimately I care about comfortably with

01:01:50,200 --> 01:01:55,030
GPT and GPT does not permit of course

01:01:52,390 --> 01:01:58,120
that you have a petition to the overlap

01:01:55,030 --> 01:02:01,420
right the good content of necessity so

01:01:58,120 --> 01:02:03,070
what I what I want to be able to is that

01:02:01,420 --> 01:02:04,900
at least we don't have to always

01:02:03,070 --> 01:02:07,420
download the same over and over

01:02:04,900 --> 01:02:10,960
again so that even though you have to

01:02:07,420 --> 01:02:12,910
just two copies on just locally you will

01:02:10,960 --> 01:02:16,000
not always download them all the time

01:02:12,910 --> 01:02:17,920
over and over again but yeah that's kind

01:02:16,000 --> 01:02:19,420
of I don't know it kind of fits like

01:02:17,920 --> 01:02:21,190
safesync fits into this entire scheme

01:02:19,420 --> 01:02:24,400
because it solves the like the next

01:02:21,190 --> 01:02:25,030
thing like the update stuff but it's not

01:02:24,400 --> 01:02:26,530
finished

01:02:25,030 --> 01:02:29,260
right at the work-in-progress and that's

01:02:26,530 --> 01:02:35,290
why then talk about that publicly yes on

01:02:29,260 --> 01:02:37,300
except to sound select people but yeah I

01:02:35,290 --> 01:02:38,800
mean it's not secret either right like

01:02:37,300 --> 01:02:46,840
if you want to know more about that just

01:02:38,800 --> 01:02:47,680
off me and I figure I love it so how do

01:02:46,840 --> 01:02:50,320
you all hello

01:02:47,680 --> 01:02:54,670
yeah but could you have between inter

01:02:50,320 --> 01:02:57,070
and everything but like we construct it

01:02:54,670 --> 01:02:59,560
so option two and pull them in selecting

01:02:57,070 --> 01:03:01,930
only going one and yeah we could like

01:02:59,560 --> 01:03:04,480
like actually sign up see all three as a

01:03:01,930 --> 01:03:05,770
Baltimore yeah that's exactly what I

01:03:04,480 --> 01:03:07,630
think Ann do for you

01:03:05,770 --> 01:03:10,060
so with AC I think it actually loaded

01:03:07,630 --> 01:03:12,070
journalism no this isn't you know me

01:03:10,060 --> 01:03:13,660
sort yeah I was thinking about that we

01:03:12,070 --> 01:03:15,520
could like we should talk about that in

01:03:13,660 --> 01:03:18,040
person anyway yeah I thought about

01:03:15,520 --> 01:03:21,970
precisely doing that one of those days

01:03:18,040 --> 01:03:23,590
maybe but what it's already supports if

01:03:21,970 --> 01:03:26,800
you look into it it can actually take

01:03:23,590 --> 01:03:28,480
any like shadows chunks that you have

01:03:26,800 --> 01:03:29,740
stored somewhere on the internet and

01:03:28,480 --> 01:03:32,620
make them available at the local

01:03:29,740 --> 01:03:34,780
blocking light right so then you can

01:03:32,620 --> 01:03:37,330
actually mount it like like any way you

01:03:34,780 --> 01:03:38,950
want um and that's kind of what you want

01:03:37,330 --> 01:03:40,540
except that of course you want to have

01:03:38,950 --> 01:03:43,269
it one step further and that instead of

01:03:40,540 --> 01:03:46,719
using like a queues you know

01:03:43,269 --> 01:03:48,130
like a NBD sake block device we probably

01:03:46,719 --> 01:03:49,689
wanted to come through that internally

01:03:48,130 --> 01:03:50,919
and taught of device number sometimes I

01:03:49,689 --> 01:03:53,499
think people can't edit it but let's

01:03:50,919 --> 01:03:56,319
talk about that an input but anyway I'm

01:03:53,499 --> 01:03:57,429
sorry for it so much no no okay thank

01:03:56,319 --> 01:03:58,989
you very much for all the questions I

01:03:57,429 --> 01:04:00,130
very much appreciate if I get there's

01:03:58,989 --> 01:04:02,559
much question because it kind of makes

01:04:00,130 --> 01:04:03,999
me feel that some people at least stood

01:04:02,559 --> 01:04:06,429
a bit of what I was talking about here

01:04:03,999 --> 01:04:14,619
so thank you very much for that thank

01:04:06,429 --> 01:04:15,189
you so I think implied thing see you

01:04:14,619 --> 01:04:27,819
next year

01:04:15,189 --> 01:04:30,130
I just going to say it what figures out

01:04:27,819 --> 01:04:33,039
don't really get some great things over

01:04:30,130 --> 01:04:34,569
for like audience but actually get to a

01:04:33,039 --> 01:04:37,409
question that's a little bit and we have

01:04:34,569 --> 01:04:40,179
come from like an Indian company just

01:04:37,409 --> 01:04:42,609
finished talking knowing opportunity I

01:04:40,179 --> 01:04:45,130
mean these people is a media site to

01:04:42,609 --> 01:04:47,709
give the flower to stop us and then

01:04:45,130 --> 01:04:51,309
after I think I think and enterocolitis

01:04:47,709 --> 01:04:53,939
about her to practice our rather

01:04:51,309 --> 01:04:53,939
colander

01:04:54,530 --> 01:05:01,820
sir they're like an effort like this to

01:04:58,760 --> 01:05:04,700
mega to do the folks a mess up then

01:05:01,820 --> 01:05:07,220
smashes would be peppered at Albemarle

01:05:04,700 --> 01:05:12,410
Trinity and then you wouldn't let it my

01:05:07,220 --> 01:05:14,030
user the other day and whatever you help

01:05:12,410 --> 01:05:16,340
you in the clashes here and it goes

01:05:14,030 --> 01:05:19,550
that's profit reading this is only so

01:05:16,340 --> 01:05:22,420
their display be really really yeah I

01:05:19,550 --> 01:05:22,420

YouTube URL: https://www.youtube.com/watch?v=pL0AMLiwPj8


