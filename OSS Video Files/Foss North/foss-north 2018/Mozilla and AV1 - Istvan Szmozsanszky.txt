Title: Mozilla and AV1 - Istvan Szmozsanszky
Publication date: 2018-04-27
Playlist: foss-north 2018
Description: 
	The first thing that jumps to one's mind when someone mentions "pooling" in the context of media codecs is usually patents. Alliance of Open Media's first codec, AV1 breaks this stereotype by actually pooling *contributors*, as it consolidates the best parts, ideas and developer talent of Google's AV9/AV10, Cisco's Thor and Xiph's Daala codecs into a royalty-free and open source video codec that's not only supported by several other industry giants like Microsoft, Netflix and Apple, but is set to even beat the top-of-the-line (and patent-encumbered) HEVC codec in compression ratio. Mozilla Research has been a contributor to the development of Daala for years now and as AV1 shapes up to be the open and free codec the Internet always deserved (and one Mozilla has been fighting for) the 

Emerging Technologies division have further upped the stakes. As developing a cutting-edge codec requires cutting-edge technologies, Mozilla's ET division has been working on various, distributed browser-based tools to ease collaboration and hasten the solidification of such a diverse codebase.
In the talk I will introduce AV1, what industry dynamics contributed to its inception and how Mozilla has developed and employed several, in-browser tools, incorporating bleeding-edge technologies like Emscripten-compiled library modules in ASM.js and WebAssembly to help the contributors iterate and bugfix newer versions of the bitstream itself, as well as the encoder and decoder.

---

István Szmozsánszky (or Flaki, for short) is a web developer and trainer from Budapest, Hungary. He teaches JavaScript and frontend development, at his consulting company Skylark he helps clients build cutting-edge web application and he works with Mozilla's Developer Relations team on promoting modern web technologies. He loves to dig deep into JavaScript language and engine internals and playing (quite literally!) with hardware and microcontrollers. 

http://foss-north.se/2018/speakers-and-talks.html#iszmozsanszky
Captions: 
	00:00:13,370 --> 00:00:24,450
yeah so hello fast North this is my

00:00:22,290 --> 00:00:24,930
issue a special scheme my co-presenter

00:00:24,450 --> 00:00:31,490
Beyla

00:00:24,930 --> 00:00:31,490
the Fox a bit more about me

00:00:31,820 --> 00:00:37,460
mistress mask is sounded a bit too harsh

00:00:34,800 --> 00:00:40,980
you can just go with Blacky

00:00:37,460 --> 00:00:44,850
that's my Twitter handle I'm a map

00:00:40,980 --> 00:00:47,820
dealer for like a long longer time

00:00:44,850 --> 00:00:51,510
didn't want to admit I've been doing a

00:00:47,820 --> 00:00:53,190
lot of JavaScript lately I really like

00:00:51,510 --> 00:00:57,000
doing JavaScript on the hardware

00:00:53,190 --> 00:01:00,329
I work it's a different hardware project

00:00:57,000 --> 00:01:03,390
so I'm I'm very very bummed that I have

00:01:00,329 --> 00:01:06,479
been missing yesterday's for shops and

00:01:03,390 --> 00:01:08,759
my fries have been tweeting really cool

00:01:06,479 --> 00:01:12,990
things that you have been up to at the

00:01:08,759 --> 00:01:15,360
hardware shop yesterday and I'm a

00:01:12,990 --> 00:01:17,970
missile attack speaker that's all the

00:01:15,360 --> 00:01:20,390
blue colors and hearts and it which is

00:01:17,970 --> 00:01:23,580
like a community program from Missoula

00:01:20,390 --> 00:01:25,830
to empower contributors to speak at

00:01:23,580 --> 00:01:28,110
conferences and spread the good word I

00:01:25,830 --> 00:01:31,200
also work with the Deverell team at

00:01:28,110 --> 00:01:33,780
Mozilla spreading the good word about

00:01:31,200 --> 00:01:36,509
other stuff and managing community and

00:01:33,780 --> 00:01:38,640
developer events so if you are

00:01:36,509 --> 00:01:44,900
interested in knowing a bit more about

00:01:38,640 --> 00:01:48,630
that I can help you with that this is a

00:01:44,900 --> 00:01:53,009
this is a new talk I haven't really been

00:01:48,630 --> 00:01:55,590
giving talks on anyone but it's very

00:01:53,009 --> 00:01:59,659
underrated and it's very cool so I

00:01:55,590 --> 00:02:04,200
decided to take this one up and try to

00:01:59,659 --> 00:02:06,899
try to introduce you to this technology

00:02:04,200 --> 00:02:11,610
that you probably never heard of but if

00:02:06,899 --> 00:02:15,780
you are fancy people and a huge fan of

00:02:11,610 --> 00:02:17,100
free and open-source and that kind of

00:02:15,780 --> 00:02:20,360
stuff this is probably gonna be

00:02:17,100 --> 00:02:20,360
interesting to you yay

00:02:21,050 --> 00:02:27,260
all right has anybody heard of Av long

00:02:23,750 --> 00:02:28,850
before oh okay and thank you very much

00:02:27,260 --> 00:02:30,770
if you have any questions we'll find me

00:02:28,850 --> 00:02:34,670
out of time all right

00:02:30,770 --> 00:02:41,300
right so what is this thing

00:02:34,670 --> 00:02:45,160
so we'll have to start a bit bit a bit a

00:02:41,300 --> 00:02:50,210
few years back quite a few years back to

00:02:45,160 --> 00:02:52,310
like figure out what is a b14 I can tell

00:02:50,210 --> 00:02:53,780
you that it's a video codec and you

00:02:52,310 --> 00:02:57,260
could probably have probably read that

00:02:53,780 --> 00:03:00,560
so what does Mozilla I'm gonna do I have

00:02:57,260 --> 00:03:03,800
to do with a v1 or and the video codec

00:03:00,560 --> 00:03:06,470
in the first place that's a very good

00:03:03,800 --> 00:03:08,810
question and for that question you have

00:03:06,470 --> 00:03:11,810
to know what missiles mission is the

00:03:08,810 --> 00:03:13,690
Soyuz mission even though you might know

00:03:11,810 --> 00:03:18,710
them from the Firefox web-browser

00:03:13,690 --> 00:03:21,110
missile mission x-rays states that what

00:03:18,710 --> 00:03:24,790
missile is after is to keep the Internet

00:03:21,110 --> 00:03:26,870
as a open and accessible public resource

00:03:24,790 --> 00:03:30,140
accessible to everybody

00:03:26,870 --> 00:03:32,380
and when you get to that point it

00:03:30,140 --> 00:03:35,780
actually gets very interesting because

00:03:32,380 --> 00:03:38,740
the the web browser itself is not the

00:03:35,780 --> 00:03:42,890
only thing and the only way to access

00:03:38,740 --> 00:03:45,530
the Internet these days and the Internet

00:03:42,890 --> 00:03:49,790
has grew big enough large enough that

00:03:45,530 --> 00:03:52,240
you actually need to tap into other ways

00:03:49,790 --> 00:03:52,240
and other

00:03:52,420 --> 00:03:59,630
unvisited borders and and other journeys

00:03:56,990 --> 00:04:02,290
that you will need to keep it open and

00:03:59,630 --> 00:04:07,160
accessible for everybody

00:04:02,290 --> 00:04:10,760
Mozilla took up a project joined forces

00:04:07,160 --> 00:04:13,910
with the EXIF org foundation if you have

00:04:10,760 --> 00:04:17,330
ever listened to an OGG audio file or

00:04:13,910 --> 00:04:20,180
I've heard of divor best format Mozilla

00:04:17,330 --> 00:04:24,130
had been trying to make sure browsers

00:04:20,180 --> 00:04:24,130
implement they all morbus format

00:04:24,290 --> 00:04:29,720
to put those formats into the browser

00:04:26,780 --> 00:04:34,190
why because it was very important for

00:04:29,720 --> 00:04:36,980
Mozilla to be able to have a audio file

00:04:34,190 --> 00:04:39,200
format an audio codec format that is

00:04:36,980 --> 00:04:43,400
free to implement them free to use by

00:04:39,200 --> 00:04:45,740
everybody and consequently that can be

00:04:43,400 --> 00:04:48,650
accessed on every single platform that

00:04:45,740 --> 00:04:52,670
browsers exist on it took a long way

00:04:48,650 --> 00:04:56,530
took a long time but eventually they

00:04:52,670 --> 00:04:56,530
created a codec called

00:04:57,070 --> 00:05:01,910
greater codec called opus that you can

00:05:00,350 --> 00:05:04,700
only see on the screen that was

00:05:01,910 --> 00:05:09,410
basically an amalgamation of two codecs

00:05:04,700 --> 00:05:13,120
one is a very as a internal research

00:05:09,410 --> 00:05:15,710
Kodak of Skype that was called speaks

00:05:13,120 --> 00:05:18,740
that was very good at transmitting audio

00:05:15,710 --> 00:05:22,340
at very low bit rates that human

00:05:18,740 --> 00:05:27,050
conversations could happen and they

00:05:22,340 --> 00:05:29,840
merged into this opus format there were

00:05:27,050 --> 00:05:32,000
base for audio codec they had been

00:05:29,840 --> 00:05:35,090
working on which is very good at

00:05:32,000 --> 00:05:38,270
transmitting audio at high frequencies

00:05:35,090 --> 00:05:41,450
and Weidman audios like like stereo the

00:05:38,270 --> 00:05:43,130
multi or multi audio codecs now happy

00:05:41,450 --> 00:05:46,370
free is already like pretty much paid

00:05:43,130 --> 00:05:48,560
and free but it wasn't back them and all

00:05:46,370 --> 00:05:52,130
the started and one of the reasons was

00:05:48,560 --> 00:05:54,020
all did this is that this format

00:05:52,130 --> 00:05:57,169
wouldn't be patent and cumbered and

00:05:54,020 --> 00:05:59,390
those dust could be used anywhere and by

00:05:57,169 --> 00:06:01,880
anybody implemented in any browser or

00:05:59,390 --> 00:06:06,110
any other open-source project this was a

00:06:01,880 --> 00:06:08,720
huge success opus is now currently a

00:06:06,110 --> 00:06:11,810
standard and is required to be in every

00:06:08,720 --> 00:06:15,010
browser it's used in WebRTC so you can

00:06:11,810 --> 00:06:19,370
converse in WebRTC and actually it

00:06:15,010 --> 00:06:24,650
became a better codec than any of the

00:06:19,370 --> 00:06:27,260
paint royal any of the proprietary

00:06:24,650 --> 00:06:28,289
formats out there so you can see like

00:06:27,260 --> 00:06:30,990
the open

00:06:28,289 --> 00:06:33,300
the blue line so hopeless actually was a

00:06:30,990 --> 00:06:37,680
huge success that Mozilla decided that

00:06:33,300 --> 00:06:41,039
maybe I know I know this this might be a

00:06:37,680 --> 00:06:43,529
this might be a huge undertaking but

00:06:41,039 --> 00:06:45,599
let's try figure out if we can do this

00:06:43,529 --> 00:06:48,180
with video again well video is

00:06:45,599 --> 00:06:51,149
definitely a larger undertaking so

00:06:48,180 --> 00:06:54,990
that's where dollar came in today again

00:06:51,149 --> 00:06:58,559
with the safe foundation Mozilla started

00:06:54,990 --> 00:07:02,719
this work to work on a video codec that

00:06:58,559 --> 00:07:05,189
was so different that was so

00:07:02,719 --> 00:07:08,330
fundamentally different from all the

00:07:05,189 --> 00:07:12,149
things that were out there on the market

00:07:08,330 --> 00:07:16,319
that it would by definition not be

00:07:12,149 --> 00:07:17,339
infringing on any patents out there so

00:07:16,319 --> 00:07:20,309
that

00:07:17,339 --> 00:07:23,189
dala came out with this doll eyes and

00:07:20,309 --> 00:07:27,449
research video codec that mozilla and

00:07:23,189 --> 00:07:29,909
ands if the engineers working on it try

00:07:27,449 --> 00:07:34,110
to figure out ways to do browser and

00:07:29,909 --> 00:07:36,479
video encoding in ways that wasn't

00:07:34,110 --> 00:07:40,860
really like tried before or like a

00:07:36,479 --> 00:07:45,719
completely different fundamentals that

00:07:40,860 --> 00:07:47,879
would enable them to provide a better

00:07:45,719 --> 00:07:51,990
experience and they're open experience

00:07:47,879 --> 00:07:55,259
to people a good compression ratio but

00:07:51,990 --> 00:07:59,339
also a completely freely implementable

00:07:55,259 --> 00:08:02,309
format so this is what the dolla formats

00:07:59,339 --> 00:08:05,909
wiki page states currently the dinner

00:08:02,309 --> 00:08:08,009
after they saw a video format that are

00:08:05,909 --> 00:08:13,469
free to implement and use and distribute

00:08:08,009 --> 00:08:15,539
anybody and one that has a reference

00:08:13,469 --> 00:08:20,550
implementation with technical

00:08:15,539 --> 00:08:24,629
performance superior to h.265 h.265 HEV

00:08:20,550 --> 00:08:27,809
C you might have heard of in other

00:08:24,629 --> 00:08:31,870
places it's currently like the state of

00:08:27,809 --> 00:08:37,409
the art of the app tag family Codex

00:08:31,870 --> 00:08:42,729
you have heard oft epic - or like h.264

00:08:37,409 --> 00:08:46,510
which is ABC this is like the state of

00:08:42,729 --> 00:08:48,820
the art of there's that cleric family so

00:08:46,510 --> 00:08:51,220
Mozilla put the bar very high saying

00:08:48,820 --> 00:08:54,220
that we want to make something open and

00:08:51,220 --> 00:08:59,230
and freely accessible but also want to

00:08:54,220 --> 00:09:03,250
make sure that it's actually beats a HEV

00:08:59,230 --> 00:09:06,640
C at its birthday why did they do this

00:09:03,250 --> 00:09:07,720
why was it so important well the

00:09:06,640 --> 00:09:12,630
Internet

00:09:07,720 --> 00:09:16,210
this is Cisco's database the Internet

00:09:12,630 --> 00:09:19,060
contains a large amount of content of

00:09:16,210 --> 00:09:21,220
all shapes and forms but what's clearly

00:09:19,060 --> 00:09:23,920
visible so if you have a look at the

00:09:21,220 --> 00:09:28,210
internet video bar and there's so these

00:09:23,920 --> 00:09:29,830
are their better by its verb month of

00:09:28,210 --> 00:09:32,170
internet traffic

00:09:29,830 --> 00:09:35,230
this is Cisco's data and projection of

00:09:32,170 --> 00:09:39,610
how this applies better per month is

00:09:35,230 --> 00:09:42,370
gonna grow now now the it's it's not

00:09:39,610 --> 00:09:45,280
really like it doesn't really say a lot

00:09:42,370 --> 00:09:47,770
to say you know it's 42,000 petabytes

00:09:45,280 --> 00:09:48,730
per month wait a video data transferred

00:09:47,770 --> 00:09:50,800
on the Internet

00:09:48,730 --> 00:09:52,900
but when you compare it to web email and

00:09:50,800 --> 00:09:57,400
other day job which is nine thousand

00:09:52,900 --> 00:10:01,080
that means video or the outweighs all

00:09:57,400 --> 00:10:05,970
other Internet traffic one one one four

00:10:01,080 --> 00:10:09,550
four so it's like 70% or a of the

00:10:05,970 --> 00:10:15,040
Internet traffic is already video and

00:10:09,550 --> 00:10:18,280
this is projected to grow to almost more

00:10:15,040 --> 00:10:20,470
than 18% of the Internet and one of

00:10:18,280 --> 00:10:23,860
four-fifths of the Internet is gonna be

00:10:20,470 --> 00:10:25,990
a video data transfer and obviously this

00:10:23,860 --> 00:10:27,850
happens on all over the place but also

00:10:25,990 --> 00:10:31,060
happens a lot in browsers you want to

00:10:27,850 --> 00:10:35,290
watch Netflix you want to be able to

00:10:31,060 --> 00:10:39,070
watch cat videos and YouTube or you know

00:10:35,290 --> 00:10:41,350
stream your games to to people or like

00:10:39,070 --> 00:10:46,390
life coding as people you know

00:10:41,350 --> 00:10:49,420
these days on Twitch so this is bound to

00:10:46,390 --> 00:10:54,250
grow especially because we are coming up

00:10:49,420 --> 00:10:57,250
led to a timer for where a full HD video

00:10:54,250 --> 00:11:05,770
is not enough where 4k video is emerging

00:10:57,250 --> 00:11:07,690
or a 360 video of VR and they are so we

00:11:05,770 --> 00:11:12,580
are definitely gonna be outgrowing the

00:11:07,690 --> 00:11:15,340
current data throughput that current

00:11:12,580 --> 00:11:20,530
codecs care providers so this might be

00:11:15,340 --> 00:11:23,710
able to explain why this why a need for

00:11:20,530 --> 00:11:26,890
a non patent encumbered and high

00:11:23,710 --> 00:11:28,960
efficiency codec arose and it wasn't

00:11:26,890 --> 00:11:32,050
just you know a thing in Missoula

00:11:28,960 --> 00:11:35,230
it actually was across the industry and

00:11:32,050 --> 00:11:39,280
justified people who were doing video

00:11:35,230 --> 00:11:42,910
which is basically everybody they decide

00:11:39,280 --> 00:11:45,640
that they were seeking a new Savior if

00:11:42,910 --> 00:11:49,080
you will a new hero to save them from

00:11:45,640 --> 00:11:53,230
having to pay royalties and having to

00:11:49,080 --> 00:11:58,360
submit you patent encumbered codex video

00:11:53,230 --> 00:12:00,370
codecs and also to reduce their improve

00:11:58,360 --> 00:12:04,030
the compression of the current video

00:12:00,370 --> 00:12:08,290
codecs this is where the hero came in

00:12:04,030 --> 00:12:10,950
the face of for not this border but this

00:12:08,290 --> 00:12:14,850
for it was a horrible day

00:12:10,950 --> 00:12:19,480
experimental codec developed by Cisco

00:12:14,850 --> 00:12:22,900
and they tried to standardize it to be

00:12:19,480 --> 00:12:26,170
included into the browser as a method of

00:12:22,900 --> 00:12:29,890
video conferencing cisco does a bunch of

00:12:26,170 --> 00:12:34,740
boys over IP systems so they were

00:12:29,890 --> 00:12:37,660
already super into this this whole

00:12:34,740 --> 00:12:40,450
decoupling and getting rid of

00:12:37,660 --> 00:12:43,420
royalty-free codecs so they already

00:12:40,450 --> 00:12:46,150
support all focus in all their work

00:12:43,420 --> 00:12:47,830
voice voice over IP projects but they

00:12:46,150 --> 00:12:49,900
also have like WebEx and a bunch of

00:12:47,830 --> 00:12:51,220
other stuff that they are doing skin

00:12:49,900 --> 00:12:54,750
sharing video call

00:12:51,220 --> 00:12:58,949
rinsing and they were they decided to do

00:12:54,750 --> 00:13:02,730
something about the correct situation

00:12:58,949 --> 00:13:06,879
that was one other thing it turns out

00:13:02,730 --> 00:13:09,189
vp9 is actually a quiet gruesome handgun

00:13:06,879 --> 00:13:15,579
and decided not to include that into the

00:13:09,189 --> 00:13:19,480
slides so by but vp9 is also a video

00:13:15,579 --> 00:13:22,389
codec developed by Google if you ever

00:13:19,480 --> 00:13:26,290
heard of vp8 you probably have came

00:13:22,389 --> 00:13:28,629
across it as a open source and reusable

00:13:26,290 --> 00:13:30,480
codec that's included in two new

00:13:28,629 --> 00:13:32,620
browsers already as a mandatory

00:13:30,480 --> 00:13:37,350
technology that browsers need to

00:13:32,620 --> 00:13:42,610
implement in for example video tags for

00:13:37,350 --> 00:13:46,720
WebRTC support this and the problem with

00:13:42,610 --> 00:13:52,360
vp8 is first of all it has issues with

00:13:46,720 --> 00:13:54,639
hardware support but also the bigger

00:13:52,360 --> 00:14:00,399
problem with vp8 is it couldn't have

00:13:54,639 --> 00:14:02,350
been the only thing because h.264 was

00:14:00,399 --> 00:14:06,759
also included as a mandatory

00:14:02,350 --> 00:14:09,490
implementable thing for a lot of reasons

00:14:06,759 --> 00:14:13,360
Google was pushing vp9 to improve

00:14:09,490 --> 00:14:16,209
Windows and managed to bring vp9 the new

00:14:13,360 --> 00:14:20,110
version of the video video codec on par

00:14:16,209 --> 00:14:22,389
being HEV see what happened later is all

00:14:20,110 --> 00:14:24,750
these people found each other hey we are

00:14:22,389 --> 00:14:28,059
kind of doing the same thing why not

00:14:24,750 --> 00:14:31,420
wanna try to pool our resources and

00:14:28,059 --> 00:14:34,870
figure out how to do this to get it so

00:14:31,420 --> 00:14:38,290
from this a very unlikely Alliance came

00:14:34,870 --> 00:14:40,949
out of this very unlikely Alliance is

00:14:38,290 --> 00:14:46,569
called the Alliance for open median or

00:14:40,949 --> 00:14:50,649
Aon for short and that's those are all

00:14:46,569 --> 00:14:53,350
those those folks you see here all part

00:14:50,649 --> 00:14:58,900
of Eliza media now the interesting part

00:14:53,350 --> 00:15:01,090
is you will find every single browser or

00:14:58,900 --> 00:15:04,000
browser vendor I would say browser

00:15:01,090 --> 00:15:07,630
vendor but now you know that these are

00:15:04,000 --> 00:15:10,420
browsers family vendors mostly so Google

00:15:07,630 --> 00:15:12,820
is here so WebKit is that so

00:15:10,420 --> 00:15:14,500
blink is there Apple is here which is

00:15:12,820 --> 00:15:16,750
very surprising because they just

00:15:14,500 --> 00:15:22,980
announced that they are supporting HEV C

00:15:16,750 --> 00:15:26,080
and iOS in 2017 and this basically goes

00:15:22,980 --> 00:15:29,380
head-on with HEV see there's technology

00:15:26,080 --> 00:15:34,360
but you will see content creators

00:15:29,380 --> 00:15:36,640
hardware vendors video content of video

00:15:34,360 --> 00:15:40,960
content creators video that actually

00:15:36,640 --> 00:15:44,290
announced support just recently when the

00:15:40,960 --> 00:15:47,190
bitstream was finalized which was last

00:15:44,290 --> 00:15:50,590
month I think I think around February

00:15:47,190 --> 00:15:52,900
they just said no the bitstream was

00:15:50,590 --> 00:15:57,120
finalized last month but Videoland

00:15:52,900 --> 00:16:02,440
already has support for a a v1 decoding

00:15:57,120 --> 00:16:05,620
which is they if you have rim if you

00:16:02,440 --> 00:16:07,240
remember the opening slides so this is

00:16:05,620 --> 00:16:11,080
how it looks like it is full glory

00:16:07,240 --> 00:16:14,530
so the right hand side you see ABC and

00:16:11,080 --> 00:16:16,270
pact for ABC which is h.264 and on the

00:16:14,530 --> 00:16:21,060
left hand side you see the same betrayed

00:16:16,270 --> 00:16:23,680
500 kilobits per second a v1 codec and

00:16:21,060 --> 00:16:26,170
you probably don't see anything on this

00:16:23,680 --> 00:16:28,720
because of slides and projection but the

00:16:26,170 --> 00:16:31,060
quality is very non so noticeable and

00:16:28,720 --> 00:16:34,900
obviously like h.264 is like the

00:16:31,060 --> 00:16:38,230
previous generation technique encoding

00:16:34,900 --> 00:16:41,250
technique but you don't have to believe

00:16:38,230 --> 00:16:44,110
your eyes to believe that a v1 actually

00:16:41,250 --> 00:16:46,810
manages to not just do a royalty free

00:16:44,110 --> 00:16:48,880
and open codec but it can actually

00:16:46,810 --> 00:16:52,980
create better compression performance

00:16:48,880 --> 00:16:56,440
how much better there was actually a

00:16:52,980 --> 00:16:58,660
that was actually a study at Moscow

00:16:56,440 --> 00:17:01,420
State University last year end of last

00:16:58,660 --> 00:17:03,190
year and this also goes that because it

00:17:01,420 --> 00:17:05,400
was end of last year it was using a

00:17:03,190 --> 00:17:09,339
previous version of the codec and

00:17:05,400 --> 00:17:11,650
contrary to what it might seem

00:17:09,339 --> 00:17:15,520
actually the codec might have regressed

00:17:11,650 --> 00:17:19,770
since L in performance but it's still

00:17:15,520 --> 00:17:23,020
safe to safe to state that the expected

00:17:19,770 --> 00:17:24,850
gains over HEV C which is like the

00:17:23,020 --> 00:17:31,380
state-of-the-art and next continuation

00:17:24,850 --> 00:17:34,930
Kodak a TMP group is at least for 30% so

00:17:31,380 --> 00:17:39,790
you can see everyone right here at 55%

00:17:34,930 --> 00:17:43,510
as you can see HEV see on the left and

00:17:39,790 --> 00:17:46,330
vp9 a pH pH TVC is an vp9 a practically

00:17:43,510 --> 00:17:48,340
the two bits down on the heart that are

00:17:46,330 --> 00:17:51,760
in a bad best in this area and therefore

00:17:48,340 --> 00:17:55,630
our right hand side you see h.264 and

00:17:51,760 --> 00:18:00,310
all the previous generation video

00:17:55,630 --> 00:18:02,110
technologies no like I said like this is

00:18:00,310 --> 00:18:04,480
not just somebody like sitting at their

00:18:02,110 --> 00:18:07,270
computer and trying to do stuff this was

00:18:04,480 --> 00:18:12,310
actually the media graphics and media

00:18:07,270 --> 00:18:14,140
lab in Moscow State University but now

00:18:12,310 --> 00:18:16,210
that the bitstream is finalized which

00:18:14,140 --> 00:18:19,270
has just happened which basically means

00:18:16,210 --> 00:18:22,260
the binary format is now not non non

00:18:19,270 --> 00:18:26,200
changing we're gonna have more and more

00:18:22,260 --> 00:18:26,560
interesting results to come how does it

00:18:26,200 --> 00:18:29,050
do that

00:18:26,560 --> 00:18:31,480
how does it do it everyone what does

00:18:29,050 --> 00:18:35,010
what what does it maybe want you to

00:18:31,480 --> 00:18:37,630
achieve this now everyone is basically

00:18:35,010 --> 00:18:41,560
taking all these ideas from all these

00:18:37,630 --> 00:18:43,780
browser vendors on personal projects in

00:18:41,560 --> 00:18:44,500
video coding technology and brings it

00:18:43,780 --> 00:18:49,780
all together

00:18:44,500 --> 00:18:53,140
it's basically a strange creature with

00:18:49,780 --> 00:18:56,170
parts of vp9 parts of for and parts of

00:18:53,140 --> 00:18:58,630
Missoula's dala built into it and when

00:18:56,170 --> 00:19:00,420
we're talking about video codecs like

00:18:58,630 --> 00:19:02,650
these strange creatures are basically

00:19:00,420 --> 00:19:05,680
there are different tools different

00:19:02,650 --> 00:19:11,200
encoding techniques different ways to

00:19:05,680 --> 00:19:14,620
search for redundancies in the input and

00:19:11,200 --> 00:19:17,590
making a figuring out how to reuse there

00:19:14,620 --> 00:19:20,340
were those redo that redundancies to

00:19:17,590 --> 00:19:24,210
make sure we are not throwing

00:19:20,340 --> 00:19:26,790
bits and bytes away no it's extra hard

00:19:24,210 --> 00:19:30,570
to do this obviously when you have all

00:19:26,790 --> 00:19:34,410
these vendors out out looking for blood

00:19:30,570 --> 00:19:37,430
trying to get some royalty payments from

00:19:34,410 --> 00:19:42,120
you when you're infringing some

00:19:37,430 --> 00:19:45,120
theoretical patents they are holding how

00:19:42,120 --> 00:19:48,150
a B 1 M words this is actually it is

00:19:45,120 --> 00:19:52,830
built from the ground up with the notion

00:19:48,150 --> 00:19:58,200
that it has to not infringe any outside

00:19:52,830 --> 00:20:01,110
vendors patents and every every

00:19:58,200 --> 00:20:03,180
supporter of the the video codec so all

00:20:01,110 --> 00:20:04,980
the vendors you have seen there they

00:20:03,180 --> 00:20:07,680
actually are pulling their penance and

00:20:04,980 --> 00:20:11,160
they are releasing this as as open and

00:20:07,680 --> 00:20:14,660
freely usable so everyone actually is

00:20:11,160 --> 00:20:18,030
like a collection of almost 30 tools to

00:20:14,660 --> 00:20:20,190
encode video content into this bit

00:20:18,030 --> 00:20:25,140
stream I was mentioning that is a binary

00:20:20,190 --> 00:20:27,150
format that is the encoded video format

00:20:25,140 --> 00:20:30,930
that you were going to be using later to

00:20:27,150 --> 00:20:34,140
decode some of these tools so I'm like I

00:20:30,930 --> 00:20:39,870
said I'm not a video engineer or not a

00:20:34,140 --> 00:20:43,230
codec engineer I do but if you're really

00:20:39,870 --> 00:20:46,050
interested or a bunch of blog posts in

00:20:43,230 --> 00:20:48,150
the dollar project how they do this did

00:20:46,050 --> 00:20:49,920
as I said the dollar project was a

00:20:48,150 --> 00:20:51,840
research project so you can actually

00:20:49,920 --> 00:20:53,760
look it up and there are plenty of

00:20:51,840 --> 00:20:56,040
documentation about their

00:20:53,760 --> 00:20:59,220
experimentation of trying to create

00:20:56,040 --> 00:21:04,200
something out of scratch that was not

00:20:59,220 --> 00:21:06,270
infringing other ideas basically and a

00:21:04,200 --> 00:21:10,200
bunch of those ideas actually made it to

00:21:06,270 --> 00:21:15,330
the final a v1 codec to train so the

00:21:10,200 --> 00:21:17,340
chroma from luma filter is a one of the

00:21:15,330 --> 00:21:20,820
more interesting and more easily

00:21:17,340 --> 00:21:26,310
understandable pieces of this technology

00:21:20,820 --> 00:21:28,590
which basically this was also a banished

00:21:26,310 --> 00:21:35,039
all before as

00:21:28,590 --> 00:21:37,740
mentioned that likeness is actually very

00:21:35,039 --> 00:21:40,590
easily perceived by the eyes and the

00:21:37,740 --> 00:21:43,529
differences in likeness of the screen so

00:21:40,590 --> 00:21:47,520
this is my video codecs primarily encode

00:21:43,529 --> 00:21:52,770
this and only encode color information

00:21:47,520 --> 00:21:55,320
is a secondary less detailed data so the

00:21:52,770 --> 00:21:59,039
chroma from luma filter actually does

00:21:55,320 --> 00:22:02,700
this when it actually reuses the chroma

00:21:59,039 --> 00:22:06,750
the lightness values and tries to

00:22:02,700 --> 00:22:11,539
predict the colors from from previous

00:22:06,750 --> 00:22:14,279
frames of the video you already have a

00:22:11,539 --> 00:22:17,070
predictor for the lightness of the elta

00:22:14,279 --> 00:22:22,860
frame and it uses this predicted

00:22:17,070 --> 00:22:25,350
lightness cue to create a chroma channel

00:22:22,860 --> 00:22:29,779
which is like colorization of the the

00:22:25,350 --> 00:22:32,490
block this is one of the the

00:22:29,779 --> 00:22:34,710
experimental code experimental tools

00:22:32,490 --> 00:22:37,140
change that the dollar project

00:22:34,710 --> 00:22:40,080
contributed to the final Abyan to sell

00:22:37,140 --> 00:22:42,059
and the other interesting one is the

00:22:40,080 --> 00:22:46,260
constraint directional and has been

00:22:42,059 --> 00:22:53,850
filter the interesting thing about this

00:22:46,260 --> 00:22:57,929
is that it actually is is two filters a

00:22:53,850 --> 00:23:00,809
mesh together and so it uses one of the

00:22:57,929 --> 00:23:04,470
dollar projects the regnant filter and

00:23:00,809 --> 00:23:06,600
it uses another filter the low-pass

00:23:04,470 --> 00:23:08,940
filter for the Tor project which was the

00:23:06,600 --> 00:23:13,010
Cisco project so the interesting thing

00:23:08,940 --> 00:23:17,720
is from this cooperation it turns out

00:23:13,010 --> 00:23:21,149
the actually when you implement and

00:23:17,720 --> 00:23:25,679
basically they fuse the two filters into

00:23:21,149 --> 00:23:28,440
into one step so they they took the

00:23:25,679 --> 00:23:31,289
drinking filter and added the low-pass

00:23:28,440 --> 00:23:33,809
filter filter into the same it's sent

00:23:31,289 --> 00:23:37,289
into the same stuff turns out this

00:23:33,809 --> 00:23:38,570
actually fixes a bunch of issues in a

00:23:37,289 --> 00:23:41,600
part this is a

00:23:38,570 --> 00:23:45,139
filtering face so these filters are used

00:23:41,600 --> 00:23:48,080
menu actually predicted from your data

00:23:45,139 --> 00:23:49,130
how sure how your video frames should

00:23:48,080 --> 00:23:52,909
look like

00:23:49,130 --> 00:23:56,090
these filters operate on that jury it

00:23:52,909 --> 00:23:58,460
output and try to fix the artifacts that

00:23:56,090 --> 00:24:03,889
were generated by the encoding process

00:23:58,460 --> 00:24:07,789
so what this this joint filter does them

00:24:03,889 --> 00:24:13,039
it turns out it actually creates a

00:24:07,789 --> 00:24:16,940
better output which is just a way to say

00:24:13,039 --> 00:24:18,649
you know the signal noise ratio drops so

00:24:16,940 --> 00:24:20,750
that means it creates a better view and

00:24:18,649 --> 00:24:24,529
the closer approximation of the original

00:24:20,750 --> 00:24:26,990
image when these two filters are met and

00:24:24,529 --> 00:24:29,149
merged together than if they are used

00:24:26,990 --> 00:24:31,840
like separately so if you only use one

00:24:29,149 --> 00:24:35,179
filter or the only or you only use

00:24:31,840 --> 00:24:38,059
Cisco's filter for example but also if

00:24:35,179 --> 00:24:40,700
you only use Dallas filter at that apply

00:24:38,059 --> 00:24:44,929
the other field which is super

00:24:40,700 --> 00:24:46,809
interesting that how big corporations

00:24:44,929 --> 00:24:49,269
like this could produce results

00:24:46,809 --> 00:24:53,330
completely unexpected

00:24:49,269 --> 00:24:56,110
to the engineers so again like you don't

00:24:53,330 --> 00:24:59,590
see too much too many changes in this

00:24:56,110 --> 00:25:02,899
but there are some comparisons that

00:24:59,590 --> 00:25:07,940
highlight how how well this could

00:25:02,899 --> 00:25:09,769
actually operate on the on the designs

00:25:07,940 --> 00:25:12,379
there was a blog post about this in the

00:25:09,769 --> 00:25:16,370
dalla filter interestingly at the dal

00:25:12,379 --> 00:25:19,639
filter so dalla uses elapsed transforms

00:25:16,370 --> 00:25:24,129
which is something quite new in the

00:25:19,639 --> 00:25:27,590
video in video encoders at least and

00:25:24,129 --> 00:25:30,230
they were quite worried because these

00:25:27,590 --> 00:25:32,899
last transfer generated some artifacts

00:25:30,230 --> 00:25:35,779
that they were worried that it's going

00:25:32,899 --> 00:25:38,299
to report jeopardize the whole operation

00:25:35,779 --> 00:25:41,870
that they're they're gonna screw it up

00:25:38,299 --> 00:25:42,830
and actually when this whole merging

00:25:41,870 --> 00:25:44,899
happened and

00:25:42,830 --> 00:25:47,929
they had a look into this low-pass

00:25:44,899 --> 00:25:50,539
filter of Cisco it turns out it fixed

00:25:47,929 --> 00:25:53,630
all these like artifacts that remained

00:25:50,539 --> 00:25:55,539
after the process there's a very nice

00:25:53,630 --> 00:25:58,220
blog post about this of the dalla

00:25:55,539 --> 00:26:01,519
project page if you want to learn more

00:25:58,220 --> 00:26:03,340
about them and there's one more thing

00:26:01,519 --> 00:26:06,799
that I wanted to talk about just briefly

00:26:03,340 --> 00:26:09,320
which is the a OM analyzer or the AV one

00:26:06,799 --> 00:26:11,210
and bitstream analyzer which is also

00:26:09,320 --> 00:26:13,929
something that was worked on by this

00:26:11,210 --> 00:26:17,179
joint group of engineers and was a thing

00:26:13,929 --> 00:26:19,580
mostly contributed by Mozilla which is

00:26:17,179 --> 00:26:25,519
basically this tool this is an embrasure

00:26:19,580 --> 00:26:28,460
tool that people could use to compare

00:26:25,519 --> 00:26:30,620
different inputs and outputs they're

00:26:28,460 --> 00:26:34,460
coded with different versions of the

00:26:30,620 --> 00:26:36,440
early encoders so if you want to

00:26:34,460 --> 00:26:41,419
actually check this out I'm gonna send

00:26:36,440 --> 00:26:43,460
you a link so you can actually have a

00:26:41,419 --> 00:26:47,350
look at earlier versions of the encoder

00:26:43,460 --> 00:26:51,470
and compared to encoded video streams

00:26:47,350 --> 00:26:54,500
using different encoders in quality and

00:26:51,470 --> 00:26:58,820
this is what engineers used so there is

00:26:54,500 --> 00:27:01,010
a blog post about this called the ABA

00:26:58,820 --> 00:27:03,289
Longbeach battery analyzer by the

00:27:01,010 --> 00:27:06,980
Creator my company Tia who works on

00:27:03,289 --> 00:27:09,740
Mozilla research where he explains all

00:27:06,980 --> 00:27:12,350
the the things by this super cool and

00:27:09,740 --> 00:27:13,850
this is also one of the reasons why it's

00:27:12,350 --> 00:27:16,519
super cool because it's just a browser

00:27:13,850 --> 00:27:20,330
too so they were actually running like

00:27:16,519 --> 00:27:24,110
comparisons sending links to people for

00:27:20,330 --> 00:27:25,639
visual test manual tests how do you like

00:27:24,110 --> 00:27:27,590
this picture which one you like better

00:27:25,639 --> 00:27:30,320
they could actually send these two

00:27:27,590 --> 00:27:34,809
pictures and gate or data that they

00:27:30,320 --> 00:27:37,760
couldn't that they couldn't Gator using

00:27:34,809 --> 00:27:41,960
mathematical tests like signal-to-noise

00:27:37,760 --> 00:27:48,080
ratios of lightness but the other thing

00:27:41,960 --> 00:27:50,539
is and we are getting Keeley to the to

00:27:48,080 --> 00:27:53,230
the part where okay so this sounds cool

00:27:50,539 --> 00:27:55,700
but what is the catch the other thing is

00:27:53,230 --> 00:28:00,289
because it takes a long time too

00:27:55,700 --> 00:28:04,159
video frames using the research encoder

00:28:00,289 --> 00:28:06,260
that we currently have it actually when

00:28:04,159 --> 00:28:08,899
they do when they do this they actually

00:28:06,260 --> 00:28:12,200
use like huge clusters computers in the

00:28:08,899 --> 00:28:15,019
cloud to encode different sample videos

00:28:12,200 --> 00:28:17,470
we knew you were a newer versions of the

00:28:15,019 --> 00:28:20,090
codec as they were do what developing it

00:28:17,470 --> 00:28:22,669
this actually resulted in a problem that

00:28:20,090 --> 00:28:26,269
they actually wanted to be able to work

00:28:22,669 --> 00:28:29,690
on these and coded streams centrally so

00:28:26,269 --> 00:28:33,350
this was also what what brought life

00:28:29,690 --> 00:28:36,710
just online a bit stream analyzer and

00:28:33,350 --> 00:28:42,409
just a burn on the royalty maths that we

00:28:36,710 --> 00:28:44,840
have here is there is for all the

00:28:42,409 --> 00:28:47,450
reasons why this is super important this

00:28:44,840 --> 00:28:52,100
this technology could be super important

00:28:47,450 --> 00:28:55,820
even without the gains in in the

00:28:52,100 --> 00:28:58,429
encoding performance this technology

00:28:55,820 --> 00:29:00,710
alone would be saving at least a hundred

00:28:58,429 --> 00:29:03,830
100 million dollars just from missoula

00:29:00,710 --> 00:29:05,840
loaning licensing fees which also goes

00:29:03,830 --> 00:29:08,480
for other big companies and if you have

00:29:05,840 --> 00:29:12,110
if you just type into your bra a search

00:29:08,480 --> 00:29:14,840
engine at HEB see royalty or HEV c

00:29:12,110 --> 00:29:17,389
patents you will see that the dependence

00:29:14,840 --> 00:29:22,490
situation about HEV c has stood even

00:29:17,389 --> 00:29:25,850
worse that it was for ABC so this is not

00:29:22,490 --> 00:29:28,760
this is actual huge problem in the

00:29:25,850 --> 00:29:31,130
industry is not just not having to pay

00:29:28,760 --> 00:29:34,610
hundreds of millions of dollars for

00:29:31,130 --> 00:29:37,850
codecs and for the use of codecs but

00:29:34,610 --> 00:29:39,320
also not being able to predict how much

00:29:37,850 --> 00:29:42,440
you will have to be paying because

00:29:39,320 --> 00:29:47,419
anytime somebody can pop up with a bunch

00:29:42,440 --> 00:29:49,700
of patents under there under the

00:29:47,419 --> 00:29:53,299
floorboards of their grandmother and you

00:29:49,700 --> 00:29:56,659
know they can sue you for using and

00:29:53,299 --> 00:29:58,250
infringing those patents so even if like

00:29:56,659 --> 00:30:01,850
the performance wouldn't have been that

00:29:58,250 --> 00:30:05,690
cool this will be a huge boon to a lot

00:30:01,850 --> 00:30:08,390
of the companies not having to play pay

00:30:05,690 --> 00:30:12,830
these royalties so just a few

00:30:08,390 --> 00:30:14,419
closing things about okay so this song

00:30:12,830 --> 00:30:17,059
is very cool but you know where's the

00:30:14,419 --> 00:30:20,480
catch well the catch first of all is

00:30:17,059 --> 00:30:24,740
availability as I mentioned this has

00:30:20,480 --> 00:30:28,010
just entered the bitstream phase that

00:30:24,740 --> 00:30:31,309
means you have a non changing binary

00:30:28,010 --> 00:30:33,649
representation of encoded bitstream but

00:30:31,309 --> 00:30:36,860
encoders and decoders and hardware

00:30:33,649 --> 00:30:40,039
devices are still yet to come to devote

00:30:36,860 --> 00:30:42,350
to the market it also considered a

00:30:40,039 --> 00:30:46,100
problem about encoding performance

00:30:42,350 --> 00:30:48,289
because they have been trying to turn

00:30:46,100 --> 00:30:50,630
the maximum out of the encoder and not

00:30:48,289 --> 00:30:52,970
really optimize it currently this takes

00:30:50,630 --> 00:30:55,820
about this is about 200 times slower

00:30:52,970 --> 00:30:57,559
than the vp9 encoder that means when you

00:30:55,820 --> 00:31:00,889
are trying to like for example they

00:30:57,559 --> 00:31:03,889
actually demonstrated live streaming in

00:31:00,889 --> 00:31:07,789
here but they actually had to use a

00:31:03,889 --> 00:31:12,620
think like a 200 CPU cluster to be able

00:31:07,789 --> 00:31:16,100
to to do like a full HD video livestream

00:31:12,620 --> 00:31:20,690
so but I like I said hardware vendors

00:31:16,100 --> 00:31:23,779
are are into AV a om so actually we were

00:31:20,690 --> 00:31:28,279
expecting hardware support to arrive

00:31:23,779 --> 00:31:30,289
pretty soon and also software support

00:31:28,279 --> 00:31:33,799
for devices this should be in in

00:31:30,289 --> 00:31:36,320
browsers by the end of the year as long

00:31:33,799 --> 00:31:38,929
as the decoding part goes it actually is

00:31:36,320 --> 00:31:41,710
in Firefox already and just one more

00:31:38,929 --> 00:31:44,779
word on the decoding part so currently

00:31:41,710 --> 00:31:47,169
decoding actually is pretty good you can

00:31:44,779 --> 00:31:51,039
just use a normal computer to decode a

00:31:47,169 --> 00:31:54,139
1080p stream in a desktop browser

00:31:51,039 --> 00:31:55,970
Firefox actually has a version that the

00:31:54,139 --> 00:31:58,100
nightly version actually includes that

00:31:55,970 --> 00:32:01,340
you can in a option that you can enable

00:31:58,100 --> 00:32:04,130
this but the problem is hardware

00:32:01,340 --> 00:32:06,169
decoding is not there right now because

00:32:04,130 --> 00:32:09,830
this is a completely new technology that

00:32:06,169 --> 00:32:14,120
means it is going to be problematic for

00:32:09,830 --> 00:32:17,090
stuff like in training your battery on

00:32:14,120 --> 00:32:18,500
your laptop if you want to watch a you

00:32:17,090 --> 00:32:21,740
know all the

00:32:18,500 --> 00:32:25,100
episodes of your favorite series on a

00:32:21,740 --> 00:32:26,510
long flight this might be a problem but

00:32:25,100 --> 00:32:28,670
in a few years this is going to be

00:32:26,510 --> 00:32:30,440
resolved and you're expecting

00:32:28,670 --> 00:32:34,760
experimental hardware to come out very

00:32:30,440 --> 00:32:37,400
soon and actually Netflix for example is

00:32:34,760 --> 00:32:40,910
already planning to to provide

00:32:37,400 --> 00:32:43,130
experimental shrimps so and this is

00:32:40,910 --> 00:32:45,500
gonna be in Firefox and Chrome very soon

00:32:43,130 --> 00:32:48,050
chrome already ships vp9 so it's going

00:32:45,500 --> 00:32:49,970
to be a small step for them and if you

00:32:48,050 --> 00:32:52,370
want to know more Michael

00:32:49,970 --> 00:32:55,280
Nathan Aggie and Michael Devon eaten it

00:32:52,370 --> 00:32:57,050
just gave a a very good presentation

00:32:55,280 --> 00:33:00,620
about this so you can just check that

00:32:57,050 --> 00:33:02,750
out in the link click vanish when you go

00:33:00,620 --> 00:33:04,880
check out the slide so I don't know I

00:33:02,750 --> 00:33:07,640
get online but they're gonna be online

00:33:04,880 --> 00:33:09,230
here when I push them life mouse hex is

00:33:07,640 --> 00:33:11,780
tweeting about all the stuff that

00:33:09,230 --> 00:33:13,610
Mozilla is doing like cool stuff on the

00:33:11,780 --> 00:33:16,160
research division division and the

00:33:13,610 --> 00:33:18,890
developers doing that's me and this is a

00:33:16,160 --> 00:33:21,280
Kiki compression itself so thank you

00:33:18,890 --> 00:33:21,280
very much

00:33:23,150 --> 00:33:27,189

YouTube URL: https://www.youtube.com/watch?v=BUPCLR0okYw


