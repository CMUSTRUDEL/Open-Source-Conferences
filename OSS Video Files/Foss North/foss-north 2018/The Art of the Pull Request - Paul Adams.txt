Title: The Art of the Pull Request - Paul Adams
Publication date: 2018-04-28
Playlist: foss-north 2018
Description: 
	Take a moment to ask yourself, "what are Pull Requests for?"

Typically PRs are used as a means to communicate that some body of work has been done and is ready to be merged. But is this an optimal use of PRs? If we submit a PR after the work has been completed, have we missed a golden opportunity to collaborate?

PRs should be treated like the basic unit of collaboration within GitHub-based projects. By using PRs as communication medium and not simply as a review mechanism, we can create opportunities to communicate better within our projects, enhance the on-boarding of new contributors and help catch potential problems early.

In this short talk, I show off the good, the bad and the ugly of PRs and provide a template for best practice which encourages communication and collaboration within your community.

---

Paul Adams is the Open Source Lead for Europe's largest e-commerce platform, Zalando. Paul works in support of a team that helps to grow a community around Zalando's open source technologies and to consult internally on how best to operate in an open manner. Paul is known as a long-time contributor to the KDE community but these days, spends most of his contribution time working on Habitat. 

http://foss-north.se/2018/speakers-and-talks.html#padams
Captions: 
	00:00:15,309 --> 00:00:19,730
okay right so let me get cracking then

00:00:17,840 --> 00:00:20,869
because then we've got three talks to

00:00:19,730 --> 00:00:22,550
get through in this session and I

00:00:20,869 --> 00:00:24,400
promised Johanna would be as quickly as

00:00:22,550 --> 00:00:29,390
possible the next week get through them

00:00:24,400 --> 00:00:35,150
so hi my name's Paul Adams I am the lead

00:00:29,390 --> 00:00:37,940
for open source at solando means in

00:00:35,150 --> 00:00:40,700
practice that in short I run a team

00:00:37,940 --> 00:00:42,829
inside zalando that develops the

00:00:40,700 --> 00:00:46,040
company's strategy around open source

00:00:42,829 --> 00:00:49,850
and inner source and then coaches the

00:00:46,040 --> 00:00:51,320
wider organization on that strategy and

00:00:49,850 --> 00:00:54,490
the safe implementation and making sure

00:00:51,320 --> 00:00:59,810
that we meaningfully benefit from that

00:00:54,490 --> 00:01:01,700
from that strategy before I get into the

00:00:59,810 --> 00:01:04,699
lambda I would never normally talk too

00:01:01,700 --> 00:01:08,090
much about the lambda people in Europe

00:01:04,699 --> 00:01:09,350
kind of know roughly what we do and kind

00:01:08,090 --> 00:01:10,700
of what kind of scale but for the

00:01:09,350 --> 00:01:12,140
purposes of this talk the scale is

00:01:10,700 --> 00:01:14,450
actually kind of important so I'm going

00:01:12,140 --> 00:01:15,890
to get to that but before I do just a

00:01:14,450 --> 00:01:18,999
quick question for the room what's the

00:01:15,890 --> 00:01:23,060
hardest problem within software engineer

00:01:18,999 --> 00:01:38,990
anyone they mean so I may be straight

00:01:23,060 --> 00:01:42,229
straight leaving punchline to this talk

00:01:38,990 --> 00:01:44,959
is the punchline really is that when you

00:01:42,229 --> 00:01:46,759
when you when you get me wrong you

00:01:44,959 --> 00:01:49,850
really can't affect how your product is

00:01:46,759 --> 00:01:52,039
perceived and how it is used anywhere no

00:01:49,850 --> 00:01:54,619
the distinctness of optimal results and

00:01:52,039 --> 00:01:57,340
I'm going to posit the pull request is a

00:01:54,619 --> 00:02:00,369
great example of that

00:01:57,340 --> 00:02:03,679
another good problem is is growth and

00:02:00,369 --> 00:02:04,520
the problems caused by growth and what

00:02:03,679 --> 00:02:06,320
organization

00:02:04,520 --> 00:02:08,629
have to go through when they grow is

00:02:06,320 --> 00:02:21,440
really kind of like my starting position

00:02:08,629 --> 00:02:22,340
for this this whole short talk so I'm

00:02:21,440 --> 00:02:24,170
gonna start by talking a little bit

00:02:22,340 --> 00:02:28,760
about community I'm gonna talk about

00:02:24,170 --> 00:02:30,860
community inside my organization which

00:02:28,760 --> 00:02:32,959
might seem like the funny concept is

00:02:30,860 --> 00:02:34,760
it's a company and maybe the idea of

00:02:32,959 --> 00:02:38,030
community inside the company might seem

00:02:34,760 --> 00:02:41,480
like a strange thing I will then go on

00:02:38,030 --> 00:02:44,060
to look then really talk about what is

00:02:41,480 --> 00:02:46,849
it full request how do we actually use

00:02:44,060 --> 00:02:48,200
them what we see them as and then

00:02:46,849 --> 00:02:50,569
ultimately I'm going to take us down as

00:02:48,200 --> 00:02:53,120
little journey towards what I actually

00:02:50,569 --> 00:02:54,799
think they are useful and what we should

00:02:53,120 --> 00:02:58,579
be or how we should be benefiting from

00:02:54,799 --> 00:03:03,079
this particular feature the thing I'll

00:02:58,579 --> 00:03:05,090
say at this point because manners are

00:03:03,079 --> 00:03:09,970
very github user and because of course

00:03:05,090 --> 00:03:11,900
you know this sort of lots of projects

00:03:09,970 --> 00:03:13,340
everything I'm going to talk about in

00:03:11,900 --> 00:03:17,989
the next over 15 18 minutes is very

00:03:13,340 --> 00:03:20,269
github centric but actually if you're a

00:03:17,989 --> 00:03:23,870
user of review board or anything similar

00:03:20,269 --> 00:03:24,950
to that the same concepts apply on the

00:03:23,870 --> 00:03:29,780
only thing that's different is the

00:03:24,950 --> 00:03:32,299
terminology so you know how do you go

00:03:29,780 --> 00:03:33,709
about starting a company how do you go

00:03:32,299 --> 00:03:35,780
about starting it with the tech company

00:03:33,709 --> 00:03:38,060
right you have more you have a little

00:03:35,780 --> 00:03:42,380
founders and the founders put together

00:03:38,060 --> 00:03:43,790
some really crappy products solando is

00:03:42,380 --> 00:03:47,239
crappy product that those of you don't

00:03:43,790 --> 00:03:49,579
know I mean solando sold flip-flops

00:03:47,239 --> 00:03:51,799
online to people who lived in Berlin

00:03:49,579 --> 00:03:55,430
right other sister take really

00:03:51,799 --> 00:03:56,750
restrictive products but a party the

00:03:55,430 --> 00:03:58,280
founders had a good idea

00:03:56,750 --> 00:04:00,560
and it turns out the people of Berlin

00:03:58,280 --> 00:04:02,269
really like buying flip-flops so if

00:04:00,560 --> 00:04:04,459
you're the first to market flip-flops

00:04:02,269 --> 00:04:06,390
Ella then who knows where you can know

00:04:04,459 --> 00:04:07,980
where you can go from there

00:04:06,390 --> 00:04:10,290
typically where you go is you go from

00:04:07,980 --> 00:04:12,600
your team of founders making a crappy

00:04:10,290 --> 00:04:14,550
product to them hiring your first two

00:04:12,600 --> 00:04:17,040
expert engineers who then build a better

00:04:14,550 --> 00:04:19,140
version of that product who then it span

00:04:17,040 --> 00:04:21,239
the the range of functionality of that

00:04:19,140 --> 00:04:23,220
product and your founding team becomes

00:04:21,239 --> 00:04:25,530
two teams becomes three teams and if

00:04:23,220 --> 00:04:33,169
your product becomes hyper successful

00:04:25,530 --> 00:04:36,060
becomes well kind of like this size so

00:04:33,169 --> 00:04:39,169
surrounded by now is it makes about four

00:04:36,060 --> 00:04:44,220
and a half billion years a year it has

00:04:39,169 --> 00:04:45,810
15,000 employees it's not even a team

00:04:44,220 --> 00:04:48,210
anymore at some point when you keep

00:04:45,810 --> 00:04:49,770
adding teams and you become a team of

00:04:48,210 --> 00:04:51,930
teams and then you become a team of team

00:04:49,770 --> 00:04:55,440
of teams there comes this point where

00:04:51,930 --> 00:04:55,919
it's like you've got any kind of team

00:04:55,440 --> 00:04:58,530
anymore

00:04:55,919 --> 00:05:01,020
you are a community and you therefore

00:04:58,530 --> 00:05:02,700
have to kind of act like a community and

00:05:01,020 --> 00:05:04,740
treat your intern or community

00:05:02,700 --> 00:05:07,620
differently than you did before and

00:05:04,740 --> 00:05:08,790
organizations get very large this is

00:05:07,620 --> 00:05:10,440
something they have to learn how to do

00:05:08,790 --> 00:05:12,270
how do I stop treating this thing like a

00:05:10,440 --> 00:05:15,690
team anymore like they're more like the

00:05:12,270 --> 00:05:17,160
community normally like I said I only

00:05:15,690 --> 00:05:18,419
avoid presenting this kind of

00:05:17,160 --> 00:05:20,430
information because for most conferences

00:05:18,419 --> 00:05:22,350
interest is not useful start work for

00:05:20,430 --> 00:05:23,760
the context of this talk is important

00:05:22,350 --> 00:05:25,590
and the other thing I want to follow up

00:05:23,760 --> 00:05:29,580
with now is just quickly talk about so

00:05:25,590 --> 00:05:34,440
off those 50,000 3,000 otech so this is

00:05:29,580 --> 00:05:36,390
engineers product specialism US scrum

00:05:34,440 --> 00:05:37,650
masters whatever anything that goes into

00:05:36,390 --> 00:05:41,490
actually building of the technical

00:05:37,650 --> 00:05:43,770
product it's about 2,000 people more

00:05:41,490 --> 00:05:47,460
importantly for this tour that really

00:05:43,770 --> 00:05:55,110
means about 200 teams I think it's more

00:05:47,460 --> 00:05:56,920
like 230 2015 when you get to this kind

00:05:55,110 --> 00:05:59,560
of size and

00:05:56,920 --> 00:06:00,820
continuing to grow you start asking

00:05:59,560 --> 00:06:02,800
yourself questions about how do i

00:06:00,820 --> 00:06:04,480
coordinate all of this how do i create

00:06:02,800 --> 00:06:06,880
this sense of community how do I give

00:06:04,480 --> 00:06:09,040
these 2000 people forget the $50,000

00:06:06,880 --> 00:06:11,500
spokes on the 2000 how do we give them a

00:06:09,040 --> 00:06:13,330
sense of shared purpose and vision which

00:06:11,500 --> 00:06:16,150
is kind of key to having a community and

00:06:13,330 --> 00:06:18,580
then how do I just enable them to to

00:06:16,150 --> 00:06:20,110
just you know get on with it right

00:06:18,580 --> 00:06:21,610
because of course you can when you get

00:06:20,110 --> 00:06:24,250
to this size you know there's no time

00:06:21,610 --> 00:06:45,130
for micromanaging anymore you just have

00:06:24,250 --> 00:06:48,970
to enable these teams so there's this

00:06:45,130 --> 00:06:51,390
he's an economist he certainly by his

00:06:48,970 --> 00:06:54,970
writings he's definitely an expert on

00:06:51,390 --> 00:06:58,330
teams so this type of damping for this

00:06:54,970 --> 00:07:00,760
book called could drive and the drive is

00:06:58,330 --> 00:07:03,370
all about how do you motivate teams of

00:07:00,760 --> 00:07:08,350
knowledge workers to achieve greatness

00:07:03,370 --> 00:07:14,740
basically and the sort of central

00:07:08,350 --> 00:07:17,950
pillars of that text were around mastery

00:07:14,740 --> 00:07:20,920
so really enabling teams to do the best

00:07:17,950 --> 00:07:22,630
they can by training them giving them

00:07:20,920 --> 00:07:24,160
plenty of head space and time to train

00:07:22,630 --> 00:07:27,610
themselves and improve their practices

00:07:24,160 --> 00:07:29,890
and so on purpose every team should have

00:07:27,610 --> 00:07:32,170
a very clearly defined product vision

00:07:29,890 --> 00:07:33,790
right they that team builds a big or

00:07:32,170 --> 00:07:36,690
that team built a set of things and that

00:07:33,790 --> 00:07:39,130
is their purpose into wider organization

00:07:36,690 --> 00:07:41,140
and then the final one is autonomy which

00:07:39,130 --> 00:07:43,030
is the one that's normally misunderstood

00:07:41,140 --> 00:07:44,740
and I'm going to posit this is the line

00:07:43,030 --> 00:07:46,240
that's gonna get me fired I'm pretty

00:07:44,740 --> 00:07:46,750
sure autonomy was the thing that's

00:07:46,240 --> 00:07:48,700
around

00:07:46,750 --> 00:07:50,950
wrong and continues to someone get it

00:07:48,700 --> 00:07:53,410
wrong because what time is this notion

00:07:50,950 --> 00:07:56,500
of you know my team is its master of its

00:07:53,410 --> 00:07:59,710
own destiny right I own my own my

00:07:56,500 --> 00:08:02,530
product that I built and then the other

00:07:59,710 --> 00:08:05,560
teams can take it or leave it right and

00:08:02,530 --> 00:08:07,810
it kind of creates a internal market so

00:08:05,560 --> 00:08:09,760
I could tell you how you know inside

00:08:07,810 --> 00:08:12,550
cervando there are teams that have

00:08:09,760 --> 00:08:15,340
shockingly similar products right but

00:08:12,550 --> 00:08:16,990
day but even internally we have our own

00:08:15,340 --> 00:08:18,250
customers and that you know those

00:08:16,990 --> 00:08:20,320
customers and that team serves those

00:08:18,250 --> 00:08:23,070
customers is just a natural consequence

00:08:20,320 --> 00:08:27,220
of a line to use to have this sense of

00:08:23,070 --> 00:08:28,660
autonomy but this is great in

00:08:27,220 --> 00:08:32,440
environments whether you really care

00:08:28,660 --> 00:08:34,240
about agility where your microservice

00:08:32,440 --> 00:08:37,030
based most of this concept of I really

00:08:34,240 --> 00:08:38,770
own just this little thing it works well

00:08:37,030 --> 00:08:40,960
in other forms of service-oriented

00:08:38,770 --> 00:08:42,340
architecture as well to some extent but

00:08:40,960 --> 00:08:44,590
then if you're very much DevOps

00:08:42,340 --> 00:08:46,450
microservices I am my little product and

00:08:44,590 --> 00:08:48,990
it's part of a bigger picture this kind

00:08:46,450 --> 00:08:51,610
of model was really great but it is

00:08:48,990 --> 00:08:58,930
missing this one thing this is what I'm

00:08:51,610 --> 00:09:11,110
gonna get to so what is it here some on

00:08:58,930 --> 00:09:14,560
whatsapp or quest ok mechanism for

00:09:11,110 --> 00:09:20,730
proposing a change anyone you know go to

00:09:14,560 --> 00:09:20,730
Venus it's a close match

00:09:23,650 --> 00:09:26,770
anything else

00:09:33,280 --> 00:09:36,680
okay method of contribution where

00:09:35,480 --> 00:09:38,060
someone give up to something that's

00:09:36,680 --> 00:09:40,580
bigger than themselves it's all kind of

00:09:38,060 --> 00:09:44,180
good it at the right direction um we

00:09:40,580 --> 00:09:47,540
should probably ask github what is a

00:09:44,180 --> 00:09:51,710
pull request so this is what I'll have

00:09:47,540 --> 00:09:53,630
to say no matter what they say it's a

00:09:51,710 --> 00:09:55,160
pull request like you tell others about

00:09:53,630 --> 00:09:59,060
changes you've pushed to a github

00:09:55,160 --> 00:10:01,610
repository does anyone want to disagree

00:09:59,060 --> 00:10:04,880
with this and say we came from what is

00:10:01,610 --> 00:10:08,060
now alright so this is what github say

00:10:04,880 --> 00:10:09,620
um I think there's some problems with

00:10:08,060 --> 00:10:12,500
this is a definition of a pull request

00:10:09,620 --> 00:10:15,770
and this really comes to the heart of

00:10:12,500 --> 00:10:19,340
what I want to get to do so the first

00:10:15,770 --> 00:10:21,440
thing is it's after the fact right I'm

00:10:19,340 --> 00:10:24,860
pushing a change that I've already made

00:10:21,440 --> 00:10:27,140
right this is this is the central clock

00:10:24,860 --> 00:10:29,060
up right this is like I go off when I

00:10:27,140 --> 00:10:30,800
just do something unilaterally and then

00:10:29,060 --> 00:10:32,600
I tell everyone that I have done it all

00:10:30,800 --> 00:10:36,520
right very after the fact which is not

00:10:32,600 --> 00:10:39,800
great the next what they use is late

00:10:36,520 --> 00:10:42,500
letters week right it's like you know

00:10:39,800 --> 00:10:44,480
you know the project has allowed me to

00:10:42,500 --> 00:10:45,500
do this how very nice of the project to

00:10:44,480 --> 00:10:49,370
allow me to contribute

00:10:45,500 --> 00:10:50,960
it doesn't really inspire contribution

00:10:49,370 --> 00:10:53,900
right it's just like not contribute

00:10:50,960 --> 00:10:55,550
don't contribute okay right it's not

00:10:53,900 --> 00:10:58,360
very enthusiastic right and it'll really

00:10:55,550 --> 00:11:01,010
make people want to use this mechanism

00:10:58,360 --> 00:11:02,450
and then the final thing as others who

00:11:01,010 --> 00:11:07,010
the others who am I telling when I do

00:11:02,450 --> 00:11:08,540
this you know you know github as a tool

00:11:07,010 --> 00:11:11,710
has its problems because a causative

00:11:08,540 --> 00:11:14,090
basically brings centralization back to

00:11:11,710 --> 00:11:16,490
to what is otherwise distributed version

00:11:14,090 --> 00:11:17,680
control but if you imagine other

00:11:16,490 --> 00:11:19,120
mechanisms where you

00:11:17,680 --> 00:11:20,290
you get property and you have lots of

00:11:19,120 --> 00:11:20,970
them over to depression stuff all over

00:11:20,290 --> 00:11:23,140
the place

00:11:20,970 --> 00:11:25,450
discontent this concept of humor the

00:11:23,140 --> 00:11:28,600
others right who might actually

00:11:25,450 --> 00:11:30,310
communicated this message to so you know

00:11:28,600 --> 00:11:32,520
it's not wrong but I think we can do

00:11:30,310 --> 00:11:32,520
better

00:11:35,070 --> 00:11:38,920
it's my suggestion it's an asynchronous

00:11:37,120 --> 00:11:40,839
form of communication there's like to

00:11:38,920 --> 00:11:44,700
collect all the information related to

00:11:40,839 --> 00:11:44,700
the development of a specific feature

00:11:46,500 --> 00:11:56,470
Heather he doesn't think it's better

00:11:51,720 --> 00:11:59,620
yeah this is just something I spit bolt

00:11:56,470 --> 00:12:00,880
right I could understand I think I

00:11:59,620 --> 00:12:03,550
didn't eat myself come up with reasons

00:12:00,880 --> 00:12:06,310
why it's not great but I think overall I

00:12:03,550 --> 00:12:08,709
prefer this because it captivates all

00:12:06,310 --> 00:12:11,080
sorts of stuff most importantly that

00:12:08,709 --> 00:12:12,940
this is a form of communication as an

00:12:11,080 --> 00:12:15,520
asynchronous form of communication which

00:12:12,940 --> 00:12:17,140
is that is actually an important thing

00:12:15,520 --> 00:12:22,990
to acknowledge and get to the reason why

00:12:17,140 --> 00:12:26,380
I know so let's take a look at support

00:12:22,990 --> 00:12:28,450
requests so in my spare time I'm gonna

00:12:26,380 --> 00:12:31,180
spare time I have I contribute to a

00:12:28,450 --> 00:12:32,970
project called habitat by chef so here's

00:12:31,180 --> 00:12:36,760
an example of someone contributing to

00:12:32,970 --> 00:12:40,620
habitat by share rather NQ of the about

00:12:36,760 --> 00:12:42,970
mq two three seven one and airline 220

00:12:40,620 --> 00:12:48,630
what do we score this out of ten is a

00:12:42,970 --> 00:12:50,040
pull request one why is it only no one

00:12:48,630 --> 00:12:52,720
[Music]

00:12:50,040 --> 00:12:54,700
knows why they did this maybe this is a

00:12:52,720 --> 00:12:56,800
security update and actually super

00:12:54,700 --> 00:13:00,700
important that this gets emerged right

00:12:56,800 --> 00:13:02,440
and it's not why did they do it this is

00:13:00,700 --> 00:13:04,420
an enable some other feature that's

00:13:02,440 --> 00:13:06,490
elsewhere right maybe there's some where

00:13:04,420 --> 00:13:07,100
there is an issue that says that

00:13:06,490 --> 00:13:09,190
effectively

00:13:07,100 --> 00:13:10,970
have to do this prerequisite to

00:13:09,190 --> 00:13:12,740
implementing that each other crime

00:13:10,970 --> 00:13:14,300
there's no motivation yet we have

00:13:12,740 --> 00:13:17,510
actually no reason we don't know why

00:13:14,300 --> 00:13:19,220
this was done right it just was who

00:13:17,510 --> 00:13:27,320
would emerge this if you if you actually

00:13:19,220 --> 00:13:29,060
have the right would you might be able

00:13:27,320 --> 00:13:32,060
to you might be able to discern more

00:13:29,060 --> 00:13:33,710
from from commits right venereal you are

00:13:32,060 --> 00:13:36,530
now putting more effort on the

00:13:33,710 --> 00:13:41,510
maintainer right maintainer x' tend to

00:13:36,530 --> 00:13:42,860
be poor in time so yes you're actually

00:13:41,510 --> 00:13:45,110
perfectly correct you could go delve

00:13:42,860 --> 00:13:46,790
into the commence but you have a

00:13:45,110 --> 00:13:48,590
mechanism for making life easy for the

00:13:46,790 --> 00:13:50,210
maintainer and here it's just not being

00:13:48,590 --> 00:13:51,650
used right so now you're forcing the

00:13:50,210 --> 00:13:53,540
maintainer to go into the individual

00:13:51,650 --> 00:13:57,200
commits to see what was actually

00:13:53,540 --> 00:13:58,760
happening there what's the probability

00:13:57,200 --> 00:14:00,620
if I go and look at the commits that

00:13:58,760 --> 00:14:02,360
even the commit messages are meaningful

00:14:00,620 --> 00:14:05,480
Dylan what would happen at the port

00:14:02,360 --> 00:14:09,200
request they maintain as out it is a

00:14:05,480 --> 00:14:11,380
product maintainer idea I first may have

00:14:09,200 --> 00:14:13,760
found a pretty deep correlation between

00:14:11,380 --> 00:14:18,950
crappy pull requests and crappy current

00:14:13,760 --> 00:14:23,810
messages so much information to go on

00:14:18,950 --> 00:14:25,520
here alright so this is my friend howdy

00:14:23,810 --> 00:14:27,650
we used to work together at creepy these

00:14:25,520 --> 00:14:30,530
are ones they say here this implements

00:14:27,650 --> 00:14:32,480
issued 2200 hi there there's PRI the

00:14:30,530 --> 00:14:34,580
basic support for crepes as a database

00:14:32,480 --> 00:14:36,980
back into metal base we know that

00:14:34,580 --> 00:14:39,260
certain tests fail etc but we open the

00:14:36,980 --> 00:14:40,880
pr to start the discussion of what is

00:14:39,260 --> 00:14:42,650
still to do and how we can overcome

00:14:40,880 --> 00:14:44,180
certain problems were facing during the

00:14:42,650 --> 00:14:45,860
implementation of the driver let's say

00:14:44,180 --> 00:14:47,840
this they've done and then there's even

00:14:45,860 --> 00:14:49,220
a little to-do box I'm waiting for a

00:14:47,840 --> 00:14:51,080
sign you show that you sign the

00:14:49,220 --> 00:14:54,440
contributor License Agreement so this is

00:14:51,080 --> 00:14:59,510
even like a template as PR um give this

00:14:54,440 --> 00:15:01,520
over tana yeah it's an it's not perfect

00:14:59,510 --> 00:15:03,170
not nothing ever is but this is a solid

00:15:01,520 --> 00:15:05,350
7 maybe even 8 if you're feeling

00:15:03,170 --> 00:15:05,350
generous

00:15:06,420 --> 00:15:13,000
so we all kind of have like an innate

00:15:09,209 --> 00:15:15,550
kind of feeling about how what a pull

00:15:13,000 --> 00:15:16,660
request feels like um I'm not going to

00:15:15,550 --> 00:15:24,070
do something that will tell you not to

00:15:16,660 --> 00:15:25,959
do so

00:15:24,070 --> 00:15:28,029
this really kind of I want to illustrate

00:15:25,959 --> 00:15:30,760
my ultimate point with this pull request

00:15:28,029 --> 00:15:31,930
on my initial message which I'm not

00:15:30,760 --> 00:15:34,149
going to bother reading it out going to

00:15:31,930 --> 00:15:35,589
the detail is not great like even my own

00:15:34,149 --> 00:15:37,540
approach to this pull request is

00:15:35,589 --> 00:15:39,970
probably a 5 out of 10 but at least they

00:15:37,540 --> 00:15:41,980
at least I made it clear as to what I am

00:15:39,970 --> 00:15:44,200
getting up to but what's important here

00:15:41,980 --> 00:15:45,820
is what happens after this so I made a

00:15:44,200 --> 00:15:47,350
little message to say in addition to

00:15:45,820 --> 00:15:48,670
what I've said in the title I'm actually

00:15:47,350 --> 00:15:52,120
bringing in some additional dependencies

00:15:48,670 --> 00:15:56,620
that weren't here before I've got some

00:15:52,120 --> 00:15:59,170
ask a question here others and Bob tell

00:15:56,620 --> 00:16:01,930
this and stuff a human being does a

00:15:59,170 --> 00:16:05,980
review and gives me all of this feedback

00:16:01,930 --> 00:16:10,149
I push some more commits monitors I've

00:16:05,980 --> 00:16:11,980
done here despite doing satisfying the

00:16:10,149 --> 00:16:15,339
reviews or puts a big fat do not merge

00:16:11,980 --> 00:16:16,870
inevitable offend them that day then

00:16:15,339 --> 00:16:19,240
there's more questions why did you do

00:16:16,870 --> 00:16:21,519
this blah right and then time passes

00:16:19,240 --> 00:16:23,350
you'll see this was something happened

00:16:21,519 --> 00:16:24,579
between one of the July and March where

00:16:23,350 --> 00:16:26,350
this poor request just got ignored

00:16:24,579 --> 00:16:27,790
because of this do not merge right and

00:16:26,350 --> 00:16:29,680
then eventually someone comes back to me

00:16:27,790 --> 00:16:31,690
and at least more staff and pretty

00:16:29,680 --> 00:16:34,920
pictures happen eventually

00:16:31,690 --> 00:16:37,030
you know keep going and finally finally

00:16:34,920 --> 00:16:39,220
someone says oK you've suffered enough

00:16:37,030 --> 00:16:43,120
Paul I'm going after this thing right

00:16:39,220 --> 00:16:44,890
took a while to get to that stage on the

00:16:43,120 --> 00:16:50,980
important thing here is that was

00:16:44,890 --> 00:16:53,380
basically but like I said when I came on

00:16:50,980 --> 00:16:55,330
my own description of a pull request all

00:16:53,380 --> 00:16:57,730
of the communication about that feature

00:16:55,330 --> 00:16:59,830
was in one place there was not something

00:16:57,730 --> 00:17:01,810
over here on a mailing list there was

00:16:59,830 --> 00:17:03,970
not something tucked away over here on I

00:17:01,810 --> 00:17:05,470
actually know there was a bit on slack

00:17:03,970 --> 00:17:07,150
actually but by-and-large

00:17:05,470 --> 00:17:08,650
anything meaningful including decisions

00:17:07,150 --> 00:17:10,780
and why is this happening all happened

00:17:08,650 --> 00:17:12,550
inside the pull request so all of the

00:17:10,780 --> 00:17:14,319
content related to that feature that I

00:17:12,550 --> 00:17:19,329
had worked on was all in one place for

00:17:14,319 --> 00:17:21,040
time immemorial let's talk a little bit

00:17:19,329 --> 00:17:22,329
about PR templating people always talk

00:17:21,040 --> 00:17:23,920
about like you know meaningful commit

00:17:22,329 --> 00:17:26,800
messages but actually what goes into a

00:17:23,920 --> 00:17:28,690
meaningful pull request how do you make

00:17:26,800 --> 00:17:30,010
this basic form of communication

00:17:28,690 --> 00:17:32,770
meaningful somebody already throughout

00:17:30,010 --> 00:17:34,990
motivation as a suggestion if they're if

00:17:32,770 --> 00:17:36,670
you are if it satisfies an issue you

00:17:34,990 --> 00:17:38,230
must link to the issue because then that

00:17:36,670 --> 00:17:39,060
makes the communication kind of end to

00:17:38,230 --> 00:17:41,770
end

00:17:39,060 --> 00:17:43,300
not just your motivation because that's

00:17:41,770 --> 00:17:46,090
like why did you do this thing but also

00:17:43,300 --> 00:17:47,440
what did you do you know that was the

00:17:46,090 --> 00:17:48,400
failure of that first law request

00:17:47,440 --> 00:17:50,500
example right

00:17:48,400 --> 00:17:53,440
was this a bug-fix was this a new

00:17:50,500 --> 00:17:55,240
feature you know what actually happened

00:17:53,440 --> 00:17:57,690
inside that pull request but to make the

00:17:55,240 --> 00:18:00,700
maintainer life easy by precisely

00:17:57,690 --> 00:18:02,620
dissolving and then any sanitary

00:18:00,700 --> 00:18:08,000
conditions like you know maybe your

00:18:02,620 --> 00:18:10,760
project has inside

00:18:08,000 --> 00:18:11,960
you may have something like has the CLA

00:18:10,760 --> 00:18:15,620
bein signed if it's an external

00:18:11,960 --> 00:18:17,840
contributor or have you really unit

00:18:15,620 --> 00:18:20,030
tested if you contribute to anything

00:18:17,840 --> 00:18:22,070
like say I don't know I used to work on

00:18:20,030 --> 00:18:23,240
cloned if anyone remembers a plug won't

00:18:22,070 --> 00:18:25,100
have this thing about you have to grab a

00:18:23,240 --> 00:18:28,510
unit test in the back so this is the

00:18:25,100 --> 00:18:28,510
kind of thing that you might test inside

00:18:28,930 --> 00:18:33,680
how do you actually do this in practice

00:18:31,430 --> 00:18:36,050
so in the real world I want to talk a

00:18:33,680 --> 00:18:38,060
little bit about you know how you do

00:18:36,050 --> 00:18:42,020
this inside an organization and how this

00:18:38,060 --> 00:18:43,640
actually syncs up your communication if

00:18:42,020 --> 00:18:45,140
you I'm gonna create strong because

00:18:43,640 --> 00:18:48,200
loads of organizations do scrum but it

00:18:45,140 --> 00:18:49,730
doesn't matter you probably have a

00:18:48,200 --> 00:18:51,590
meeting where you do planning right

00:18:49,730 --> 00:18:53,810
that's a great time to open up your pull

00:18:51,590 --> 00:18:55,490
request so at the time when the team

00:18:53,810 --> 00:18:56,990
says it were going to do something you

00:18:55,490 --> 00:18:58,640
can actually just open up a pull request

00:18:56,990 --> 00:18:59,870
because just open empty commits inside

00:18:58,640 --> 00:19:01,160
of it for those of you who don't know

00:18:59,870 --> 00:19:04,070
that that feature of get you should

00:19:01,160 --> 00:19:06,070
learn it is very useful so you could

00:19:04,070 --> 00:19:09,230
just push an empty commit and get going

00:19:06,070 --> 00:19:11,090
and then you've got them do the work do

00:19:09,230 --> 00:19:14,000
all of the communication inside that

00:19:11,090 --> 00:19:15,590
pull request and if you have two hundred

00:19:14,000 --> 00:19:17,330
and thirty teams two hundred teams

00:19:15,590 --> 00:19:20,630
certainly anything more than a handful

00:19:17,330 --> 00:19:23,390
of teams communicating asynchronous like

00:19:20,630 --> 00:19:24,890
this becomes hyper important because

00:19:23,390 --> 00:19:26,690
your team across has its own agenda

00:19:24,890 --> 00:19:30,200
really don't want to be interrupting

00:19:26,690 --> 00:19:32,240
each other constantly and there's a

00:19:30,200 --> 00:19:35,150
reason for that right and the reason for

00:19:32,240 --> 00:19:40,190
that is it's it's common ways off our

00:19:35,150 --> 00:19:41,780
common ways more SoCo is more basically

00:19:40,190 --> 00:19:43,400
says the structure of your the

00:19:41,780 --> 00:19:46,870
communication patterns inside your

00:19:43,400 --> 00:19:48,590
application will be symbiotic with the

00:19:46,870 --> 00:19:51,140
communication structures that actually

00:19:48,590 --> 00:19:55,450
produce that piece of software if you

00:19:51,140 --> 00:19:57,219
have a bunch of autonomous

00:19:55,450 --> 00:19:58,379
teams that are empowered to do that

00:19:57,219 --> 00:20:02,109
thing and they communicate

00:19:58,379 --> 00:20:03,519
asynchronously over a bus then that's

00:20:02,109 --> 00:20:05,109
how the teams have to communicate as

00:20:03,519 --> 00:20:06,929
well by necessity if you try and do

00:20:05,109 --> 00:20:09,279
anything else if you try and enforce

00:20:06,929 --> 00:20:10,509
real-time communication in an

00:20:09,279 --> 00:20:13,690
environment where the teams are working

00:20:10,509 --> 00:20:16,690
asynchronously it just gets messy I'm

00:20:13,690 --> 00:20:18,909
using pull requests like this is a great

00:20:16,690 --> 00:20:20,409
way of solving this problem and it's

00:20:18,909 --> 00:20:23,109
something that we're currently working

00:20:20,409 --> 00:20:28,629
on inside its Orlando so these pillars

00:20:23,109 --> 00:20:30,639
of mastery and our autonomy and the

00:20:28,629 --> 00:20:33,009
other one that I've just forgotten what

00:20:30,639 --> 00:20:36,039
they're missing is alignment and an

00:20:33,009 --> 00:20:38,499
asynchronous form of alignment and the

00:20:36,039 --> 00:20:40,690
punchline to all of this is really that

00:20:38,499 --> 00:20:42,399
is what you can use pull requests for

00:20:40,690 --> 00:20:44,829
and to go back to my original point

00:20:42,399 --> 00:20:46,450
about naming the problem is that they

00:20:44,829 --> 00:20:51,249
probably should have called the peer

00:20:46,450 --> 00:20:52,929
review and not pull request last but not

00:20:51,249 --> 00:20:55,119
least a few details on me I hope you've

00:20:52,929 --> 00:20:56,589
enjoyed this please do people always ask

00:20:55,119 --> 00:20:58,929
about this you can just email me please

00:20:56,589 --> 00:21:01,690
go ahead or hit me up on Twitter I'm

00:20:58,929 --> 00:21:03,989
always happy to answer questions thank

00:21:01,690 --> 00:21:03,989
you very much

00:21:05,570 --> 00:21:43,340
oh yeah there's a question in the back

00:21:08,510 --> 00:21:45,800
someone who is the loser okay so um so

00:21:43,340 --> 00:21:47,180
the resident here so the question there

00:21:45,800 --> 00:21:48,710
was like it sounds like I'm trying to

00:21:47,180 --> 00:21:50,930
use pull requests where issues would get

00:21:48,710 --> 00:21:51,740
used I'm gonna answer that very very

00:21:50,930 --> 00:21:54,130
briefly

00:21:51,740 --> 00:21:57,320
let's talk afterwards for more in depth

00:21:54,130 --> 00:22:00,460
issues a grateful for user stories right

00:21:57,320 --> 00:22:03,620
so this is a description of of it's a

00:22:00,460 --> 00:22:04,940
customer's problem right but what user

00:22:03,620 --> 00:22:06,160
stories are not good for for the

00:22:04,940 --> 00:22:08,450
technical details of the implementation

00:22:06,160 --> 00:22:09,920
which is why I say you should map your

00:22:08,450 --> 00:22:11,420
poor request back to an issue right so

00:22:09,920 --> 00:22:12,980
you work with your product specialist

00:22:11,420 --> 00:22:16,130
your product owner to develop a user

00:22:12,980 --> 00:22:17,630
story which is very product focused but

00:22:16,130 --> 00:22:19,340
then when the team gets together and

00:22:17,630 --> 00:22:20,630
then actually starts to plan how do we

00:22:19,340 --> 00:22:22,130
implement this then you have a more

00:22:20,630 --> 00:22:24,050
technical discussion it's not product

00:22:22,130 --> 00:22:25,970
focused it's it's engineering focused

00:22:24,050 --> 00:22:27,440
and that's a good point where you

00:22:25,970 --> 00:22:29,360
actually open up a pull request which

00:22:27,440 --> 00:22:31,370
leads back to the issue so now I have my

00:22:29,360 --> 00:22:32,990
issue as a product related statement and

00:22:31,370 --> 00:22:35,300
my pull request is a very technical

00:22:32,990 --> 00:22:37,220
conversation that's the distinction I'd

00:22:35,300 --> 00:22:38,690
like to make up I do not have time for

00:22:37,220 --> 00:22:41,200
your question but you can come and grab

00:22:38,690 --> 00:22:41,200
me a fleece

00:22:43,320 --> 00:22:46,210
right

00:22:44,470 --> 00:22:49,649
oh yeah absolutely yeah yeah of course

00:22:46,210 --> 00:22:49,649

YouTube URL: https://www.youtube.com/watch?v=vXs5ZiILO0s


