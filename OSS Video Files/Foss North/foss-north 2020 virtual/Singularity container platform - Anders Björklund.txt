Title: Singularity container platform - Anders BjÃ¶rklund
Publication date: 2020-03-24
Playlist: foss-north 2020 virtual
Description: 
	Lightning talk from foss-north 2020


https://foss-north.se/2020/speakers-and-talks.html#lt-abjorklund
Captions: 
	00:00:00,030 --> 00:00:06,000
welcome to force north the virtual

00:00:03,149 --> 00:00:08,130
edition we would like to thank all our

00:00:06,000 --> 00:00:12,330
sponsors and partners in this difficult

00:00:08,130 --> 00:00:15,830
situation our gold sponsors look soft

00:00:12,330 --> 00:00:20,000
and ansible by Red Hat

00:00:15,830 --> 00:00:22,220
our silver sponsors ITRs group and make

00:00:20,000 --> 00:00:25,900
it right

00:00:22,220 --> 00:00:28,960
our base sponsors

00:00:25,900 --> 00:00:31,150
our partner projects the open source

00:00:28,960 --> 00:00:34,239
community and the region of Gothenburg

00:00:31,150 --> 00:00:36,309
and a huge thanks to our awesome

00:00:34,239 --> 00:00:38,650
community this would not have been

00:00:36,309 --> 00:00:41,230
possible without you

00:00:38,650 --> 00:00:42,880
my name is I'm disappearance I've been

00:00:41,230 --> 00:00:44,830
working with containers and doing some

00:00:42,880 --> 00:00:47,320
different presentations on it and I

00:00:44,830 --> 00:00:50,710
would like to share maybe a lesser-known

00:00:47,320 --> 00:00:54,220
container platform and it's called the

00:00:50,710 --> 00:00:57,130
singularity and it's optimized for

00:00:54,220 --> 00:00:58,150
something called HPC which I will

00:00:57,130 --> 00:01:00,850
describe what that is

00:00:58,150 --> 00:01:03,700
high-performance computing but I find it

00:01:00,850 --> 00:01:07,060
also useful for enterprise computing and

00:01:03,700 --> 00:01:11,260
it has a lot of security things it has

00:01:07,060 --> 00:01:14,200
addressed so in high performance

00:01:11,260 --> 00:01:18,130
computing scenarios you normally have

00:01:14,200 --> 00:01:21,760
multiple users logging into a single

00:01:18,130 --> 00:01:23,710
shared server or multiple servers and we

00:01:21,760 --> 00:01:26,320
typically have a shared network home

00:01:23,710 --> 00:01:29,430
folder so you at the same home and all

00:01:26,320 --> 00:01:32,560
machines you've typically the own tab

00:01:29,430 --> 00:01:36,160
access to the privileged user the root

00:01:32,560 --> 00:01:38,500
user and we will come back to this there

00:01:36,160 --> 00:01:40,690
is of course admin but we will have this

00:01:38,500 --> 00:01:43,390
access but you as a regular user will

00:01:40,690 --> 00:01:45,730
not have it and this is admin will open

00:01:43,390 --> 00:01:47,170
call strict with security requirement

00:01:45,730 --> 00:01:49,780
since you're sharing this environment

00:01:47,170 --> 00:01:53,790
with lots of other users and typically

00:01:49,780 --> 00:01:59,170
this system runs older system versions

00:01:53,790 --> 00:02:03,970
in the HPC community there is a high

00:01:59,170 --> 00:02:07,390
need for performance that is CPU IO disk

00:02:03,970 --> 00:02:09,489
network performance and also access to

00:02:07,390 --> 00:02:12,970
specialized Hardware a GPU or MPI

00:02:09,489 --> 00:02:16,410
between different servers so that's a

00:02:12,970 --> 00:02:18,700
typical scenario in this case and

00:02:16,410 --> 00:02:21,250
unfortunately I'm I don't have a

00:02:18,700 --> 00:02:24,100
supercomputer to myself but I work about

00:02:21,250 --> 00:02:27,370
with big C purpose-built and it shares a

00:02:24,100 --> 00:02:30,030
lot of these typical performance

00:02:27,370 --> 00:02:30,030
requirements

00:02:32,709 --> 00:02:39,469
so now you have an old system and you

00:02:36,319 --> 00:02:42,290
want to run new software and then you

00:02:39,469 --> 00:02:44,810
typically turn to a doctor and then you

00:02:42,290 --> 00:02:46,640
have your regular user log in to the

00:02:44,810 --> 00:02:48,859
system and thinking yeah this is Linux

00:02:46,640 --> 00:02:52,879
system I know how to use this will yes

00:02:48,859 --> 00:02:54,650
the doer docker run and then and so you

00:02:52,879 --> 00:02:56,150
find it okay claim somewhere and then

00:02:54,650 --> 00:02:59,750
you do docker on and then you're faced

00:02:56,150 --> 00:03:01,939
with a super helpful message that you

00:02:59,750 --> 00:03:04,939
also need a docket team and running

00:03:01,939 --> 00:03:08,299
somewhere ok so you try to remember how

00:03:04,939 --> 00:03:10,099
do we start that one see you country

00:03:08,299 --> 00:03:12,919
system dear news try to start the

00:03:10,099 --> 00:03:15,139
document and you get another helpful

00:03:12,919 --> 00:03:19,280
message saying that you are not the

00:03:15,139 --> 00:03:22,430
studio on this system and that also

00:03:19,280 --> 00:03:27,200
there will be reported so what do you do

00:03:22,430 --> 00:03:29,090
you turn to assist admin and you say to

00:03:27,200 --> 00:03:34,069
them yeah I would like to run this

00:03:29,090 --> 00:03:36,049
docker demon that lets me run stuff and

00:03:34,069 --> 00:03:39,560
then they come back with their have full

00:03:36,049 --> 00:03:42,019
response right no you can't do that

00:03:39,560 --> 00:03:45,739
because we will not audit this system

00:03:42,019 --> 00:03:48,440
and then yeah you've stuck with the

00:03:45,739 --> 00:03:51,069
legacy versions of whatever this you log

00:03:48,440 --> 00:03:51,069
into and

00:03:51,160 --> 00:03:54,820
and then your guess but that's presently

00:03:53,200 --> 00:03:56,980
try something else so you're trying to

00:03:54,820 --> 00:04:02,170
roulette start a virtual machine that we

00:03:56,980 --> 00:04:05,560
can talk in and nurses party call doc

00:04:02,170 --> 00:04:08,260
machine in you it will let you start up

00:04:05,560 --> 00:04:12,070
VM assuming you have a way to do that

00:04:08,260 --> 00:04:15,420
and then you can connect this VM and try

00:04:12,070 --> 00:04:15,420
to do your stuff and

00:04:16,100 --> 00:04:19,109
while you're doing that then you realize

00:04:17,840 --> 00:04:23,189
that

00:04:19,109 --> 00:04:26,580
and maybe this VM is not maybe I only

00:04:23,189 --> 00:04:31,050
get a part of and the things I'm doing

00:04:26,580 --> 00:04:32,849
here and I seem to be in a completely

00:04:31,050 --> 00:04:34,830
new system in all my fighters went

00:04:32,849 --> 00:04:36,990
missing and I can't find my tools and

00:04:34,830 --> 00:04:39,930
those GPU devices seems to be gone as

00:04:36,990 --> 00:04:41,969
well and well I don't have the full

00:04:39,930 --> 00:04:45,090
network access because my sis admin has

00:04:41,969 --> 00:04:47,250
blocked some of it so yeah answer me

00:04:45,090 --> 00:04:49,590
he/she is there because you're in a new

00:04:47,250 --> 00:04:54,180
machine now and not on the computer just

00:04:49,590 --> 00:04:56,190
left so you try to find out find other

00:04:54,180 --> 00:05:00,090
ways to do this and there are some new

00:04:56,190 --> 00:05:03,180
products also options to all products

00:05:00,090 --> 00:05:06,900
that you run containers without being

00:05:03,180 --> 00:05:09,270
route and typically these systems

00:05:06,900 --> 00:05:11,909
requires a newer kernel in order to work

00:05:09,270 --> 00:05:15,360
perfectly and typically you don't have

00:05:11,909 --> 00:05:16,979
that so that might be a showstopper you

00:05:15,360 --> 00:05:18,900
might also need some new version of

00:05:16,979 --> 00:05:23,279
shadow or something that will let you

00:05:18,900 --> 00:05:24,810
run and then maybe the file system

00:05:23,279 --> 00:05:26,099
performance system for two years still

00:05:24,810 --> 00:05:28,550
on the native system or the network

00:05:26,099 --> 00:05:30,960
performance is not what you used to and

00:05:28,550 --> 00:05:32,550
you're still running as root in the

00:05:30,960 --> 00:05:37,110
container and your files are not

00:05:32,550 --> 00:05:38,879
accessible nor that stings so what if

00:05:37,110 --> 00:05:40,800
there was a different way to do this and

00:05:38,879 --> 00:05:44,580
that's where does singularity project

00:05:40,800 --> 00:05:46,770
comes in so the singularity is a Linux

00:05:44,580 --> 00:05:50,400
container platform it's optimized for

00:05:46,770 --> 00:05:53,909
this HPC scenario and it also works in

00:05:50,400 --> 00:05:56,370
an enterprise setting it's fairly new in

00:05:53,909 --> 00:05:58,800
version 1 was released in 2016 and there

00:05:56,370 --> 00:06:01,680
was a rewrite in the go programming

00:05:58,800 --> 00:06:03,509
language in 2018 with version 3

00:06:01,680 --> 00:06:06,960
previously it was written in the C

00:06:03,509 --> 00:06:11,490
programming language it's sponsored by

00:06:06,960 --> 00:06:13,889
the Lawrence Berkeley Lab laboratory

00:06:11,490 --> 00:06:16,199
which is then housing from these

00:06:13,889 --> 00:06:18,790
supercomputers and it's open source and

00:06:16,199 --> 00:06:26,890
BBS device

00:06:18,790 --> 00:06:29,050
and it uses now single file format where

00:06:26,890 --> 00:06:34,030
everything needed to run your container

00:06:29,050 --> 00:06:38,620
is included in a single file and this

00:06:34,030 --> 00:06:40,750
file is both executable and in mutable

00:06:38,620 --> 00:06:44,580
by default and it can be signed by the

00:06:40,750 --> 00:06:47,170
sysadmin and it can be hosted on these

00:06:44,580 --> 00:06:50,350
network file systems and everything and

00:06:47,170 --> 00:06:53,680
it is also based on demand when you run

00:06:50,350 --> 00:06:58,270
it from a docker image or you can create

00:06:53,680 --> 00:07:03,630
yourself using a definition and this is

00:06:58,270 --> 00:07:03,630
now where I try to demo how tool works

00:07:06,350 --> 00:07:11,920
and hopefully you can still see it

00:07:14,790 --> 00:07:22,760
yeah so I'm

00:07:19,730 --> 00:07:26,480
running at myself in my normal directory

00:07:22,760 --> 00:07:28,250
and when I run some basic commands they

00:07:26,480 --> 00:07:30,640
look kind of similar to what they would

00:07:28,250 --> 00:07:34,370
do in doctor will see the comparison

00:07:30,640 --> 00:07:36,260
before so when I run something that is

00:07:34,370 --> 00:07:40,780
not existing on the machine it will be

00:07:36,260 --> 00:07:40,780
converted to this native SIF formats

00:07:41,370 --> 00:07:46,040
and when I run it I will say that I'm

00:07:43,919 --> 00:07:48,070
running as myself

00:07:46,040 --> 00:07:52,210
and

00:07:48,070 --> 00:07:54,790
still have access to my files and you

00:07:52,210 --> 00:07:59,380
can also create these six images

00:07:54,790 --> 00:08:01,570
separately ahead of time and from

00:07:59,380 --> 00:08:03,490
existing docker images these are not

00:08:01,570 --> 00:08:05,200
signed because typically don't know how

00:08:03,490 --> 00:08:07,870
that docker image was created but you

00:08:05,200 --> 00:08:10,780
can sign it in a separate step just

00:08:07,870 --> 00:08:13,050
create an executable file so you can

00:08:10,780 --> 00:08:16,840
execute this and it will run through

00:08:13,050 --> 00:08:20,050
singularity run and you are inside your

00:08:16,840 --> 00:08:22,780
container and the format itself is

00:08:20,050 --> 00:08:24,730
similar to l4 other container formats

00:08:22,780 --> 00:08:27,190
that we it will package different things

00:08:24,730 --> 00:08:29,860
and you can see that the file system is

00:08:27,190 --> 00:08:31,750
a good store compressed on your disk so

00:08:29,860 --> 00:08:35,800
it's not unpacked like inductors so

00:08:31,750 --> 00:08:38,460
that's conception space as well and when

00:08:35,800 --> 00:08:42,900
you do the similar commands in dr. it

00:08:38,460 --> 00:08:47,080
would typically run as the reducer and

00:08:42,900 --> 00:08:49,830
it will also normally create a new file

00:08:47,080 --> 00:08:49,830
system for you

00:08:51,500 --> 00:08:54,650
be somewhat confusing if you're trying

00:08:53,090 --> 00:08:58,990
to use your regular tools and you just

00:08:54,650 --> 00:09:04,790
wanted to use some in your system files

00:08:58,990 --> 00:09:09,860
and so if you want to do it as an

00:09:04,790 --> 00:09:15,130
experiment you can make your image right

00:09:09,860 --> 00:09:15,130
book and you can make your

00:09:15,459 --> 00:09:20,329
your container actually contains stuff

00:09:17,959 --> 00:09:22,819
and you can also run with the rootless

00:09:20,329 --> 00:09:27,319
these are available as options there if

00:09:22,819 --> 00:09:29,420
not the default in addition to the thing

00:09:27,319 --> 00:09:32,419
at RIT and in itself there is also

00:09:29,420 --> 00:09:34,669
support for kubernetes for orchestrating

00:09:32,419 --> 00:09:36,679
their support for running on Mac and on

00:09:34,669 --> 00:09:38,959
Windows and you can get commercial

00:09:36,679 --> 00:09:42,790
support including a container library

00:09:38,959 --> 00:09:42,790
and a remote builder of images

00:09:44,840 --> 00:09:53,870
you

00:09:46,310 --> 00:09:56,660
and that is a singularity thank you

00:09:53,870 --> 00:10:00,290
right I have a question here are you

00:09:56,660 --> 00:10:03,920
ready yeah thanks for the talk by the

00:10:00,290 --> 00:10:06,920
way it's a reason why to not use the hot

00:10:03,920 --> 00:10:10,820
devices set up our user research group

00:10:06,920 --> 00:10:13,830
in the HPC settings

00:10:10,820 --> 00:10:18,210
so the main reason would be that you

00:10:13,830 --> 00:10:19,500
either require 110% of the hardware

00:10:18,210 --> 00:10:22,380
you're running on so you're trying to

00:10:19,500 --> 00:10:24,120
get every last bit of performance out

00:10:22,380 --> 00:10:28,350
which you typically optimized for the

00:10:24,120 --> 00:10:31,500
microarchitecture you're on or you have

00:10:28,350 --> 00:10:33,930
a concerns about memory usage maybe some

00:10:31,500 --> 00:10:35,840
machines are idling and hogging memory

00:10:33,930 --> 00:10:39,540
from other users on the same machine

00:10:35,840 --> 00:10:43,779
considerations like that but that is

00:10:39,540 --> 00:10:46,480
available as an option of course and

00:10:43,779 --> 00:10:48,129
if you require specific kernel modules

00:10:46,480 --> 00:10:50,949
and so on that's probably the way you

00:10:48,129 --> 00:10:52,629
want to go then because as you know the

00:10:50,949 --> 00:10:55,199
containers will still share the host

00:10:52,629 --> 00:10:55,199

YouTube URL: https://www.youtube.com/watch?v=prPtItXskyg


