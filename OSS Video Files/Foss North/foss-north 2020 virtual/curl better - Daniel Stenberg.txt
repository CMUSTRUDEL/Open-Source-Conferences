Title: curl better - Daniel Stenberg
Publication date: 2020-05-12
Playlist: foss-north 2020 virtual
Description: 
	Talk details: https://foss-north.se/2020/speakers-and-talks.html#dstenberg
Conference details: https://foss-north.se/2020/
Captions: 
	00:00:00,030 --> 00:00:05,730
welcome to force north the virtual

00:00:02,879 --> 00:00:08,010
edition we would like to thank all our

00:00:05,730 --> 00:00:12,059
sponsors and partners in this difficult

00:00:08,010 --> 00:00:15,549
situation our gold sponsors look soft

00:00:12,059 --> 00:00:19,720
and ansible by Red Hat

00:00:15,549 --> 00:00:21,950
our silver sponsors ITRs group and make

00:00:19,720 --> 00:00:25,590
it right

00:00:21,950 --> 00:00:28,650
our base sponsors

00:00:25,590 --> 00:00:30,840
our partner projects the open source

00:00:28,650 --> 00:00:33,960
community and the region of Gothenburg

00:00:30,840 --> 00:00:35,940
and a huge thanks to our awesome

00:00:33,960 --> 00:00:40,559
community this would not have been

00:00:35,940 --> 00:00:42,780
possible without you welcome everyone I

00:00:40,559 --> 00:00:45,900
hope you enjoyed your lunch and got some

00:00:42,780 --> 00:00:49,110
sunshine next up is Daniel Steinberg who

00:00:45,900 --> 00:00:52,530
will talk about how to curl better so I

00:00:49,110 --> 00:00:55,110
simply hand it over to you Daniel hi

00:00:52,530 --> 00:00:58,020
thank you you want a hi everyone I'm

00:00:55,110 --> 00:01:03,120
looking into a screen here talking to

00:00:58,020 --> 00:01:06,660
you so how to curl better first I just

00:01:03,120 --> 00:01:10,619
wanted them to let you know that I am

00:01:06,660 --> 00:01:13,350
Daniel Stanbury of course I founded curl

00:01:10,619 --> 00:01:16,470
back in 1998 and still there lead

00:01:13,350 --> 00:01:18,840
developer and I do curl development full

00:01:16,470 --> 00:01:21,450
time every day these days I'm employed

00:01:18,840 --> 00:01:25,259
by wolf as a sell we sell commercial

00:01:21,450 --> 00:01:28,440
curl support for those who wanted I've

00:01:25,259 --> 00:01:30,420
been doing this for a long time and I

00:01:28,440 --> 00:01:34,800
figure this would be a fun time for me

00:01:30,420 --> 00:01:37,319
to just share some tricks and tips about

00:01:34,800 --> 00:01:40,200
how to do curl and I'm sure that a lot

00:01:37,319 --> 00:01:42,869
of you know what curly is what it isn't

00:01:40,200 --> 00:01:43,500
and what to do and but I'm going to tell

00:01:42,869 --> 00:01:45,869
you anyway

00:01:43,500 --> 00:01:49,050
to sort of get everyone on board and and

00:01:45,869 --> 00:01:50,729
I'm sure there can be some tidbits for

00:01:49,050 --> 00:01:52,470
everyone so first a little bit of a

00:01:50,729 --> 00:01:56,580
roundup here what curly is what it isn't

00:01:52,470 --> 00:01:59,039
and how how it come to be the way it is

00:01:56,580 --> 00:02:01,380
for everyone because it's different for

00:01:59,039 --> 00:02:03,030
everyone and why is that right and then

00:02:01,380 --> 00:02:04,830
I'm going to run over a bunch of

00:02:03,030 --> 00:02:07,020
different options and a little bit how

00:02:04,830 --> 00:02:09,690
to you and why they exist as they are

00:02:07,020 --> 00:02:13,290
and what options to you not use so much

00:02:09,690 --> 00:02:15,090
perhaps and why so and then of course a

00:02:13,290 --> 00:02:18,290
little Q&A in the end so if you have

00:02:15,090 --> 00:02:20,220
questions really about anything curl but

00:02:18,290 --> 00:02:22,680
possibly about what I'm going to talk

00:02:20,220 --> 00:02:27,630
about so go ahead and and the field I

00:02:22,680 --> 00:02:30,180
mean into the question thing that you

00:02:27,630 --> 00:02:33,689
want is running here so and I will get

00:02:30,180 --> 00:02:37,409
to them in the end I my plan is here to

00:02:33,689 --> 00:02:39,360
not to talk for a long time but maybe 30

00:02:37,409 --> 00:02:41,820
40 minutes and then we can have

00:02:39,360 --> 00:02:44,880
discussion on questions and answers and

00:02:41,820 --> 00:02:46,470
then then I'm gonna be out of your face

00:02:44,880 --> 00:02:50,400
and you can go on and do whatever you

00:02:46,470 --> 00:02:51,690
want okay so curl done just get a brown

00:02:50,400 --> 00:02:53,280
on board here is an open-source project

00:02:51,690 --> 00:02:56,220
we do a come on lying to you let me do a

00:02:53,280 --> 00:02:59,490
library we transfer data into we

00:02:56,220 --> 00:03:01,020
actually do internet transfers right we

00:02:59,490 --> 00:03:05,700
specify the transfers as you were else

00:03:01,020 --> 00:03:07,890
that's why the URL in the name Carl can

00:03:05,700 --> 00:03:10,200
do a lot of things supports 24 different

00:03:07,890 --> 00:03:12,030
transfer protocols and a busload of

00:03:10,200 --> 00:03:14,730
features and here are some of them that

00:03:12,030 --> 00:03:16,350
sort of just hang on one screen we can

00:03:14,730 --> 00:03:18,870
ignore that for now but we can just

00:03:16,350 --> 00:03:21,570
agree that curl is sort of us we saw a

00:03:18,870 --> 00:03:24,810
man die for Internet transfers it can do

00:03:21,570 --> 00:03:27,230
a lot of things and I'm going to get

00:03:24,810 --> 00:03:29,580
into some of those things today and

00:03:27,230 --> 00:03:33,180
explain a little bit about concepts and

00:03:29,580 --> 00:03:35,700
everything but first who makes curl and

00:03:33,180 --> 00:03:38,040
what how did it end up like this

00:03:35,700 --> 00:03:42,480
or how how is it like this like now so

00:03:38,040 --> 00:03:43,890
curl is pretty much the result of 2,200

00:03:42,480 --> 00:03:47,160
contributors having helped out over the

00:03:43,890 --> 00:03:50,450
years and helping out means basically

00:03:47,160 --> 00:03:54,150
anything riding dogs reporting bugs

00:03:50,450 --> 00:03:58,350
coming with code stuff like that and

00:03:54,150 --> 00:04:01,049
we're about 700 700 700 Thurs who ridden

00:03:58,350 --> 00:04:05,970
code merchants didn't get repository

00:04:01,049 --> 00:04:09,120
about 150 OD sorceress or servers right

00:04:05,970 --> 00:04:11,610
something per year and we're about 12 10

00:04:09,120 --> 00:04:13,620
12 people that actually do can commit

00:04:11,610 --> 00:04:16,500
some more per year and we're basically

00:04:13,620 --> 00:04:19,229
me doing that every year for the 22

00:04:16,500 --> 00:04:23,280
years now so a lot of people involved so

00:04:19,229 --> 00:04:25,410
it's it's I might be sort of the captain

00:04:23,280 --> 00:04:29,370
on the boat but I'm suddenly not alone

00:04:25,410 --> 00:04:31,440
in this adventure so curl has to some

00:04:29,370 --> 00:04:34,380
extent already sort of conquered the

00:04:31,440 --> 00:04:35,940
world and the image here on the right is

00:04:34,380 --> 00:04:39,090
the Nasdaq building in New York with a

00:04:35,940 --> 00:04:41,400
fancy car command line on the big screen

00:04:39,090 --> 00:04:42,840
there so but how come it conquered how

00:04:41,400 --> 00:04:47,190
are coming with bins

00:04:42,840 --> 00:04:49,689
sort of successful putting air quotes so

00:04:47,190 --> 00:04:54,819
far but we sort of Korea

00:04:49,689 --> 00:04:56,619
curl at the right time before or in the

00:04:54,819 --> 00:04:59,529
beginning of the episode of internet

00:04:56,619 --> 00:05:01,629
boost in the East I started my first day

00:04:59,529 --> 00:05:03,789
to be stuff in 1996 the first curl

00:05:01,629 --> 00:05:06,189
version came in 1998 and then we sort of

00:05:03,789 --> 00:05:08,679
served on the Internet big internet wave

00:05:06,189 --> 00:05:10,779
and it's been open source everyone can

00:05:08,679 --> 00:05:12,699
run it everywhere and it's really really

00:05:10,779 --> 00:05:14,799
portable so you can run it on whatever

00:05:12,699 --> 00:05:18,610
operating system or platform you want

00:05:14,799 --> 00:05:20,439
and of course it is also backwards

00:05:18,610 --> 00:05:22,179
compatible that means that it's easy for

00:05:20,439 --> 00:05:23,979
everyone to write something depend on it

00:05:22,179 --> 00:05:25,539
and it'll just keep on working you can

00:05:23,979 --> 00:05:27,849
upgrade your scripts and upgrade your

00:05:25,539 --> 00:05:30,909
curl over the years and it'll work the

00:05:27,849 --> 00:05:33,009
same way and you can be sure of that and

00:05:30,909 --> 00:05:34,959
it's also a very stable product so all

00:05:33,009 --> 00:05:37,599
of this makes it very easy for everyone

00:05:34,959 --> 00:05:41,259
to rely on Carl and use curl for

00:05:37,599 --> 00:05:44,649
whatever you want so and it also don't

00:05:41,259 --> 00:05:47,289
exist in many places we started in 98 it

00:05:44,649 --> 00:05:52,929
shipped ships actually it's still ships

00:05:47,289 --> 00:05:56,409
in Mac OS since 2001 it's been it's a in

00:05:52,929 --> 00:05:58,749
the stock Windows 10 since 2018 it's

00:05:56,409 --> 00:06:00,789
been in it's in every Linux distribution

00:05:58,749 --> 00:06:04,659
since through this a long time the first

00:06:00,789 --> 00:06:05,919
line is history added it in 99 and of

00:06:04,659 --> 00:06:08,050
course it's available in all the other

00:06:05,919 --> 00:06:09,639
operating systems so and if not you can

00:06:08,050 --> 00:06:11,679
build it from source and a lot of people

00:06:09,639 --> 00:06:17,949
also build it from source anyway for

00:06:11,679 --> 00:06:20,679
various reasons then and it also exists

00:06:17,949 --> 00:06:22,509
in a lot of different flavors right so

00:06:20,679 --> 00:06:24,729
there are million little 8 millions

00:06:22,509 --> 00:06:30,159
probably billions of build combinations

00:06:24,729 --> 00:06:32,649
you can select on and off among roughly

00:06:30,159 --> 00:06:35,169
30 different 30 dependencies like TLS

00:06:32,649 --> 00:06:38,769
libraries libraries for SSH libraries

00:06:35,169 --> 00:06:42,159
for compression libraries for a lot of

00:06:38,769 --> 00:06:44,169
different things so any random place you

00:06:42,159 --> 00:06:45,939
find curl you may find that they've

00:06:44,169 --> 00:06:47,589
selected a different set of third-party

00:06:45,939 --> 00:06:49,569
dependencies that they build curl with

00:06:47,589 --> 00:06:51,639
and then it ends up differently and we

00:06:49,569 --> 00:06:53,259
also have very frequent releases we do

00:06:51,639 --> 00:06:58,719
releases every second months based

00:06:53,259 --> 00:06:59,919
basically so given given time and

00:06:58,719 --> 00:07:01,990
different distributions different

00:06:59,919 --> 00:07:02,830
reported in when you will and also see

00:07:01,990 --> 00:07:05,380
if

00:07:02,830 --> 00:07:08,530
current versions of Carl whatever you

00:07:05,380 --> 00:07:10,170
use car basically it's very rarely the

00:07:08,530 --> 00:07:12,880
same in two places

00:07:10,170 --> 00:07:15,370
it also supports as I mentioned before a

00:07:12,880 --> 00:07:17,200
lot of protocols and options and today

00:07:15,370 --> 00:07:19,300
I'm only going to I'm going to stick to

00:07:17,200 --> 00:07:21,250
talk about Carl the command-line tool

00:07:19,300 --> 00:07:23,530
I'm not a library girl library

00:07:21,250 --> 00:07:25,270
liberalism is vastly used by

00:07:23,530 --> 00:07:27,730
applications and devices and everything

00:07:25,270 --> 00:07:30,610
who wants to build internet transfer

00:07:27,730 --> 00:07:32,290
powers into their tools or or devices

00:07:30,610 --> 00:07:34,360
but I'm going to talk about the command

00:07:32,290 --> 00:07:37,180
line to curl you know the one you seen

00:07:34,360 --> 00:07:40,780
in the prompt or running your scripts it

00:07:37,180 --> 00:07:42,460
knows a lot of protocols 24 transfer

00:07:40,780 --> 00:07:44,380
protocols as I mentioned there are some

00:07:42,460 --> 00:07:47,730
other protocols of course under the hood

00:07:44,380 --> 00:07:50,610
but today I'm going to talk about

00:07:47,730 --> 00:07:53,800
specifically one protocol and of course

00:07:50,610 --> 00:07:55,540
these supports of all these different

00:07:53,800 --> 00:07:58,570
protocols all these different features

00:07:55,540 --> 00:08:02,020
it has a lot of command-line options 230

00:07:58,570 --> 00:08:03,700
of them as we speak that 230 first

00:08:02,020 --> 00:08:05,890
option is being added and will be

00:08:03,700 --> 00:08:09,820
included in the next release so we're

00:08:05,890 --> 00:08:11,800
constantly adding new options to the

00:08:09,820 --> 00:08:14,410
command line to a lot of them as you can

00:08:11,800 --> 00:08:16,630
then imagine so I'm not going to talk

00:08:14,410 --> 00:08:18,430
about all of them today of course I'm

00:08:16,630 --> 00:08:19,750
going to talk about HTTP and it should

00:08:18,430 --> 00:08:23,170
be asked in this presentation I'm going

00:08:19,750 --> 00:08:25,570
to limit my explanations to a subset of

00:08:23,170 --> 00:08:26,800
the options to sort of some of the

00:08:25,570 --> 00:08:28,150
important ones some of the cool ones

00:08:26,800 --> 00:08:32,490
some maybe some other ones you didn't

00:08:28,150 --> 00:08:34,630
really know and care about before so I

00:08:32,490 --> 00:08:36,280
wanted to show you this little graph I

00:08:34,630 --> 00:08:38,350
media the day this shows the number of

00:08:36,280 --> 00:08:41,080
command line options over time in the

00:08:38,350 --> 00:08:43,360
curve project so we started out with 24

00:08:41,080 --> 00:08:47,830
options come online options back in 1998

00:08:43,360 --> 00:08:55,030
and we have are now a 230 231 in the

00:08:47,830 --> 00:08:57,490
month so yes yeah growing fast ok but

00:08:55,030 --> 00:09:00,250
we're talking about HTTP and HTTPS today

00:08:57,490 --> 00:09:01,810
so what is HP HP is that this simple

00:09:00,250 --> 00:09:03,850
protocol you've seen it a lot of times

00:09:01,810 --> 00:09:08,610
you know it what it is basically here

00:09:03,850 --> 00:09:10,840
there's you and there's the server and

00:09:08,610 --> 00:09:12,760
what do and what do we do with that

00:09:10,840 --> 00:09:14,830
you're right we send the request to the

00:09:12,760 --> 00:09:16,170
server we send a method in the past with

00:09:14,830 --> 00:09:18,389
some headers and

00:09:16,170 --> 00:09:20,639
body and we get that back from the

00:09:18,389 --> 00:09:23,399
server right response response code we

00:09:20,639 --> 00:09:25,410
get headers antibody that is HTTP and it

00:09:23,399 --> 00:09:26,250
looks like this if you look at it from a

00:09:25,410 --> 00:09:29,910


00:09:26,250 --> 00:09:32,310
protocol dump way you know here's a

00:09:29,910 --> 00:09:34,320
request with some headers and here's a

00:09:32,310 --> 00:09:36,120
response then with a response code at

00:09:34,320 --> 00:09:38,850
the top the 200 there and headers and

00:09:36,120 --> 00:09:40,620
content that's the body you've seen it

00:09:38,850 --> 00:09:45,060
this is the same thing it basically has

00:09:40,620 --> 00:09:46,920
looked like this since in the mid-90s it

00:09:45,060 --> 00:09:49,920
looked very similar before the mid

00:09:46,920 --> 00:09:51,959
nineties to but not a HP wanted to 0

00:09:49,920 --> 00:09:58,649
introduced this look basically in this

00:09:51,959 --> 00:10:01,620
came 1996 so anyway that's that's that's

00:09:58,649 --> 00:10:04,769
HP done and curl is minimal behavior by

00:10:01,620 --> 00:10:09,480
default I call it or I like to call it

00:10:04,769 --> 00:10:12,779
the list so that means that it does only

00:10:09,480 --> 00:10:14,610
what it has to do and nothing else by

00:10:12,779 --> 00:10:16,139
default so there's a basic set of hand

00:10:14,610 --> 00:10:18,779
headers and there's no fancy

00:10:16,139 --> 00:10:20,399
functionality so you have to if you want

00:10:18,779 --> 00:10:23,610
to wanted to do something more than just

00:10:20,399 --> 00:10:25,339
the basic stuff you add that option and

00:10:23,610 --> 00:10:27,630
you tell it to do the other things and

00:10:25,339 --> 00:10:29,850
basically all the options that add

00:10:27,630 --> 00:10:32,880
things or ask curls do anything they're

00:10:29,850 --> 00:10:34,380
on and off so you if you want to two

00:10:32,880 --> 00:10:35,699
different things you have to do it with

00:10:34,380 --> 00:10:38,519
two different options and you can turn

00:10:35,699 --> 00:10:43,529
them on and off individually it means

00:10:38,519 --> 00:10:45,870
that your you have a really fine grain

00:10:43,529 --> 00:10:48,630
control exactly what curl will do and

00:10:45,870 --> 00:10:50,190
understand and not do it on and off if

00:10:48,630 --> 00:10:52,050
you just want the basic stuff you don't

00:10:50,190 --> 00:10:55,470
tell it to do it if you want it fancy

00:10:52,050 --> 00:10:57,420
you ask for it and of course just a

00:10:55,470 --> 00:10:59,790
basic man and after thing there are long

00:10:57,420 --> 00:11:01,980
options and short options and by name

00:10:59,790 --> 00:11:07,110
right so you could for example use - yes

00:11:01,980 --> 00:11:10,589
I I will say - for that - - a sign in

00:11:07,110 --> 00:11:12,779
front of s hair I call it - so you can

00:11:10,589 --> 00:11:17,670
use - s instead of their longer version

00:11:12,779 --> 00:11:21,240
called - - silent and a lot of options

00:11:17,670 --> 00:11:24,569
of course won't have this short option

00:11:21,240 --> 00:11:26,100
because 230 230 options they're not

00:11:24,569 --> 00:11:27,390
enough letters in the alphabet so you

00:11:26,100 --> 00:11:28,949
actually have shown options for them all

00:11:27,390 --> 00:11:29,940
but there are showed up there are a lot

00:11:28,949 --> 00:11:32,100
of short options

00:11:29,940 --> 00:11:34,490
I think there's a single letter left for

00:11:32,100 --> 00:11:37,620
the four short options and that's a

00:11:34,490 --> 00:11:41,810
quick quiz for you to come up with which

00:11:37,620 --> 00:11:44,700
of the letters aren't used yet but so

00:11:41,810 --> 00:11:53,280
that's that's the options on how we use

00:11:44,700 --> 00:11:56,520
it okay Zipp coffee here we go so we

00:11:53,280 --> 00:11:59,670
start out with curl the most simple way

00:11:56,520 --> 00:12:02,580
you can do it you just ask you want to

00:11:59,670 --> 00:12:05,130
do it HCP yet that's curl and you enter

00:12:02,580 --> 00:12:07,740
in this case not even a URL this is just

00:12:05,130 --> 00:12:10,020
a host name right but curl will assume

00:12:07,740 --> 00:12:12,690
that this is actually a URL say it will

00:12:10,020 --> 00:12:14,940
transform it to URL for you maybe you

00:12:12,690 --> 00:12:16,830
meant HTTP colon slash slash example.com

00:12:14,940 --> 00:12:19,980
and you'll do that for you and you get

00:12:16,830 --> 00:12:21,900
the response body on the screen because

00:12:19,980 --> 00:12:25,800
you didn't tell it where to go so it got

00:12:21,900 --> 00:12:32,460
just sent to standard out so this is

00:12:25,800 --> 00:12:35,490
more like how well maybe Unix commands

00:12:32,460 --> 00:12:38,730
are typically sort of usually usually

00:12:35,490 --> 00:12:40,800
work send everything to standard out but

00:12:38,730 --> 00:12:42,510
you can know then also send get to see

00:12:40,800 --> 00:12:45,270
the response header so in this and in

00:12:42,510 --> 00:12:48,030
this case we have we now write full URL

00:12:45,270 --> 00:12:51,480
here it should be s : / example.com and

00:12:48,030 --> 00:12:54,210
we have the - I forget the in the

00:12:51,480 --> 00:12:56,160
headers included in the output so then

00:12:54,210 --> 00:12:59,070
we get the response code we get headers

00:12:56,160 --> 00:13:04,470
back and we get the body this is still a

00:12:59,070 --> 00:13:05,790
get request or a shippi fancy so yep you

00:13:04,470 --> 00:13:08,760
name you get to see the headers and you

00:13:05,790 --> 00:13:10,530
get to see the body um and of course if

00:13:08,760 --> 00:13:13,650
you wanted to do something with the body

00:13:10,530 --> 00:13:17,310
what if you get some fancy content here

00:13:13,650 --> 00:13:20,250
if you would for example or get JSON you

00:13:17,310 --> 00:13:22,140
could type it into the JQ to get Q being

00:13:20,250 --> 00:13:26,220
a cool tool to handle JSON and it'll

00:13:22,140 --> 00:13:28,650
show it in a fancy way like this right

00:13:26,220 --> 00:13:30,090
instead of just everything on a single

00:13:28,650 --> 00:13:32,550
line without any new lines in them

00:13:30,090 --> 00:13:36,000
blurred if you would do this with a

00:13:32,550 --> 00:13:38,370
image or a movie or a sound clip you

00:13:36,000 --> 00:13:40,140
would of course not want that on your

00:13:38,370 --> 00:13:42,140
terminal you wouldn't save that to a

00:13:40,140 --> 00:13:45,900
file

00:13:42,140 --> 00:13:48,920
man you can also check the URL for

00:13:45,900 --> 00:13:52,410
example with a head request just ask the

00:13:48,920 --> 00:13:54,840
server about details of the resource so

00:13:52,410 --> 00:13:56,910
you ask with the capital I - capital I

00:13:54,840 --> 00:13:58,140
and it's at the head and you won't get

00:13:56,910 --> 00:14:01,620
it in body you will only get the

00:13:58,140 --> 00:14:03,900
response headers yes just mean for use

00:14:01,620 --> 00:14:05,790
you can see the size to date the server

00:14:03,900 --> 00:14:07,140
info and whatever and it's the 200 you

00:14:05,790 --> 00:14:08,940
didn't know the resource exists and

00:14:07,140 --> 00:14:10,200
there's no body because hair doesn't

00:14:08,940 --> 00:14:15,090
return it the body

00:14:10,200 --> 00:14:18,600
it never does ok easy peasy just to

00:14:15,090 --> 00:14:21,350
simple little things and and again curl

00:14:18,600 --> 00:14:23,700
only does what you ask sit for so it

00:14:21,350 --> 00:14:25,800
does everything as basic as possible

00:14:23,700 --> 00:14:28,890
until you ask for something more so if

00:14:25,800 --> 00:14:32,280
you for example do like this you wanna

00:14:28,890 --> 00:14:35,280
you query a new resource that's

00:14:32,280 --> 00:14:37,710
redirected redirected being it should be

00:14:35,280 --> 00:14:39,630
linked with them for it should actually

00:14:37,710 --> 00:14:42,330
ask for another resource rather than

00:14:39,630 --> 00:14:44,700
this this has moved or you want to go to

00:14:42,330 --> 00:14:46,860
the other place so if you ask just you

00:14:44,700 --> 00:14:49,440
ask for head here you get the content

00:14:46,860 --> 00:14:52,320
you get the 302 which means a redirect

00:14:49,440 --> 00:14:53,820
one redirect kind there are several

00:14:52,320 --> 00:14:55,710
different kinds but we can ignore that

00:14:53,820 --> 00:14:58,560
for now and it says a location which

00:14:55,710 --> 00:14:59,010
actually is Dundee a pointer to the new

00:14:58,560 --> 00:15:02,370
place

00:14:59,010 --> 00:15:04,320
but yeah and there's nobody but curl

00:15:02,370 --> 00:15:06,330
won't go there you will still get just

00:15:04,320 --> 00:15:09,270
get this because you haven't asked curl

00:15:06,330 --> 00:15:12,240
to follow the redirect yes you just

00:15:09,270 --> 00:15:15,570
basically investigated the sign here you

00:15:12,240 --> 00:15:17,550
didn't follow the sign so instead if you

00:15:15,570 --> 00:15:20,820
wanted to actually follow the request

00:15:17,550 --> 00:15:24,450
you would ask you would add the in this

00:15:20,820 --> 00:15:26,610
case the - capital L which is them asks

00:15:24,450 --> 00:15:29,310
it asks curl to follow the redirect and

00:15:26,610 --> 00:15:31,500
then you would get both first the

00:15:29,310 --> 00:15:33,630
redirect code and then it'll follow the

00:15:31,500 --> 00:15:36,270
redirect and you will get the sort of

00:15:33,630 --> 00:15:38,880
the final destination and if it would

00:15:36,270 --> 00:15:40,590
actually follow a lot of redirects here

00:15:38,880 --> 00:15:42,360
if you if he'd if this would be

00:15:40,590 --> 00:15:45,990
redirected several steps it would follow

00:15:42,360 --> 00:15:48,030
all the steps which could be a lot of

00:15:45,990 --> 00:15:50,130
them and it has a loop detection so

00:15:48,030 --> 00:15:53,010
it'll actually stop after a certain

00:15:50,130 --> 00:15:54,760
amount of redirects so we want to treat

00:15:53,010 --> 00:15:57,380
infinitely

00:15:54,760 --> 00:15:59,960
this is how it works done right so you

00:15:57,380 --> 00:16:01,460
have to ask for everything to enable it

00:15:59,960 --> 00:16:05,560
otherwise it won't do it

00:16:01,460 --> 00:16:08,150
another little fancy thing that that is

00:16:05,560 --> 00:16:10,880
sometimes forgotten about with curl is

00:16:08,150 --> 00:16:16,040
that it supports what we call alright

00:16:10,880 --> 00:16:19,280
nobody what we call URL globing which is

00:16:16,040 --> 00:16:21,350
a feature that some shells provide on

00:16:19,280 --> 00:16:22,940
the round but some don't and curl

00:16:21,350 --> 00:16:24,890
supports it natively so you can for

00:16:22,940 --> 00:16:27,980
example get a range of documents like

00:16:24,890 --> 00:16:30,800
this automatically one to nine here all

00:16:27,980 --> 00:16:32,450
those web pages in one go and it'll send

00:16:30,800 --> 00:16:34,880
them in this case also standard out

00:16:32,450 --> 00:16:36,290
which is probably not what you want or

00:16:34,880 --> 00:16:38,630
you can get everything with a zero

00:16:36,290 --> 00:16:41,120
prefixed one to ninety nine zero

00:16:38,630 --> 00:16:45,200
prefixed or you can get a e to Zed in

00:16:41,120 --> 00:16:47,210
alphabetical range like this and you can

00:16:45,200 --> 00:16:50,090
even do it more fancy stuff you can set

00:16:47,210 --> 00:16:52,190
them to every other step from one to

00:16:50,090 --> 00:16:54,110
nine so it'll just step by two in step

00:16:52,190 --> 00:16:56,000
step by one one by one or you can do

00:16:54,110 --> 00:17:00,530
that with letters as these steps three

00:16:56,000 --> 00:17:03,920
letters at a time and in case you don't

00:17:00,530 --> 00:17:08,089
want this said sort of sent to standard

00:17:03,920 --> 00:17:11,120
out or the terminal but which you rarely

00:17:08,089 --> 00:17:12,770
want right so you can save them like

00:17:11,120 --> 00:17:16,459
this and this is a fancy little thing so

00:17:12,770 --> 00:17:19,010
you can see here the pound sign the hash

00:17:16,459 --> 00:17:20,570
tag in the in the - o option here is

00:17:19,010 --> 00:17:24,350
this for the saving so it'll actually

00:17:20,570 --> 00:17:27,200
get that parameter from the range in the

00:17:24,350 --> 00:17:30,290
URL it'll be the first range will then

00:17:27,200 --> 00:17:32,660
be put there so this will save file save

00:17:30,290 --> 00:17:35,480
underscore one dot HTML save underscore

00:17:32,660 --> 00:17:40,780
2 dot dot HTML said and save underscore

00:17:35,480 --> 00:17:44,750
3 dot HTML and so on and you can also do

00:17:40,780 --> 00:17:47,180
comma separated and strings like this so

00:17:44,750 --> 00:17:51,080
it'll get this different ham cheese and

00:17:47,180 --> 00:17:53,390
pineapple images and save them as JPEGs

00:17:51,080 --> 00:17:55,880
like this and of course you can combine

00:17:53,390 --> 00:17:58,880
everything in one command line if you

00:17:55,880 --> 00:18:00,830
want to so you can ask for both ranges

00:17:58,880 --> 00:18:02,790
or different kinds and these separated

00:18:00,830 --> 00:18:05,820
comma separate the lists

00:18:02,790 --> 00:18:08,250
and you could have got say that in

00:18:05,820 --> 00:18:11,280
different outfits I still so you could

00:18:08,250 --> 00:18:14,790
it could end up really large amount of

00:18:11,280 --> 00:18:17,010
transfers if you want you and sometimes

00:18:14,790 --> 00:18:19,440
when you do all this fancy stuff with

00:18:17,010 --> 00:18:21,030
curl you will find yourself in a

00:18:19,440 --> 00:18:22,470
position where curl doesn't do exactly

00:18:21,030 --> 00:18:25,170
what you want and you were wondering why

00:18:22,470 --> 00:18:27,210
it doesn't work what should I do to fix

00:18:25,170 --> 00:18:30,030
my command line so then you add this

00:18:27,210 --> 00:18:32,790
dash V and it'll show you a lot of

00:18:30,030 --> 00:18:34,440
details 3 for verbose of course it's

00:18:32,790 --> 00:18:36,180
actually - - verbose if you do it the

00:18:34,440 --> 00:18:39,150
long version and it'll tell you about

00:18:36,180 --> 00:18:39,770
things like IP addresses protocol

00:18:39,150 --> 00:18:43,350
details

00:18:39,770 --> 00:18:46,980
TLS details and then you'll see also see

00:18:43,350 --> 00:18:48,450
the actual requests going out you won't

00:18:46,980 --> 00:18:50,670
actually see the request body in this

00:18:48,450 --> 00:18:52,650
case but maybe a lot of details and then

00:18:50,670 --> 00:18:54,780
you will get the headers back and you

00:18:52,650 --> 00:18:56,640
will get the body as well in this case

00:18:54,780 --> 00:19:00,360
the command line saves the body to dev

00:18:56,640 --> 00:19:03,690
News you won't see but always remember -

00:19:00,360 --> 00:19:06,150
V is a key to solving your issues you

00:19:03,690 --> 00:19:08,250
that helps you see what is going sent

00:19:06,150 --> 00:19:12,120
and hope you understand what's wrong

00:19:08,250 --> 00:19:14,970
right with your command line and when

00:19:12,120 --> 00:19:17,520
does it's not enough you don't add more

00:19:14,970 --> 00:19:19,560
V's and some UNIX tools or Linux tools

00:19:17,520 --> 00:19:22,230
that you know you can add more V's to be

00:19:19,560 --> 00:19:24,960
a more verbose and a lot of people don't

00:19:22,230 --> 00:19:26,610
add more restock bvv or what everybody

00:19:24,960 --> 00:19:28,170
would curl that doesn't change anything

00:19:26,610 --> 00:19:28,620
you can have as many of these as you

00:19:28,170 --> 00:19:30,240
want

00:19:28,620 --> 00:19:32,970
but it won't change anything you won't

00:19:30,240 --> 00:19:39,480
get more data so what you want to do

00:19:32,970 --> 00:19:41,610
instead is I'll show you later because

00:19:39,480 --> 00:19:44,220
there's more tricks to getting more info

00:19:41,610 --> 00:19:48,450
but I just wanted to say a few other

00:19:44,220 --> 00:19:50,730
ways to extend your HTTP request is one

00:19:48,450 --> 00:19:52,200
you want to add provide custom HTTP

00:19:50,730 --> 00:19:53,700
headers in your request maybe you want

00:19:52,200 --> 00:19:56,460
to send a magic disco header in your

00:19:53,700 --> 00:19:59,820
request or you want to set a special

00:19:56,460 --> 00:20:02,910
user agent in your request because let's

00:19:59,820 --> 00:20:04,680
be honest some servers will deny your

00:20:02,910 --> 00:20:06,360
request if it sees to this curl but you

00:20:04,680 --> 00:20:08,400
can say yet your discs going tonight and

00:20:06,360 --> 00:20:10,800
then you might get your response back

00:20:08,400 --> 00:20:14,460
and you can even remove the user agent

00:20:10,800 --> 00:20:16,650
header completely by by doing it like

00:20:14,460 --> 00:20:18,900
this without having any right side

00:20:16,650 --> 00:20:20,520
I'll remove the header from the request

00:20:18,900 --> 00:20:22,620
and you can do this little magic thing

00:20:20,520 --> 00:20:26,730
by putting a semicolon there it's and

00:20:22,620 --> 00:20:30,000
blank field for this header in the

00:20:26,730 --> 00:20:32,250
request so you can sort of this way you

00:20:30,000 --> 00:20:33,930
can handicraft your request to look

00:20:32,250 --> 00:20:37,890
exactly the way you want or mimic

00:20:33,930 --> 00:20:40,470
another client browser whatever you want

00:20:37,890 --> 00:20:42,150
to do if you want to post basic data

00:20:40,470 --> 00:20:45,960
like for example you want to send an

00:20:42,150 --> 00:20:47,700
update to web page or log in or anything

00:20:45,960 --> 00:20:50,280
in this case for example I want to send

00:20:47,700 --> 00:20:52,620
my name is Daniel to this server I just

00:20:50,280 --> 00:20:54,660
put it with dash D and it makes a simple

00:20:52,620 --> 00:20:56,430
toast to that server and you get a

00:20:54,660 --> 00:21:00,780
response and everything back in this

00:20:56,430 --> 00:21:03,150
case we have the - I so we get a get the

00:21:00,780 --> 00:21:04,800
headers back on the terminal and we get

00:21:03,150 --> 00:21:08,520
the content - because we didn't send the

00:21:04,800 --> 00:21:10,980
content anyway we can post a-fightin we

00:21:08,520 --> 00:21:13,560
just we just prefixed it with an @ sign

00:21:10,980 --> 00:21:18,360
so add file I mean it'll send that as a

00:21:13,560 --> 00:21:21,990
post we can composed from standard input

00:21:18,360 --> 00:21:26,310
so just type whatever and we post with

00:21:21,990 --> 00:21:28,860
an m @ - and it'll post in standard

00:21:26,310 --> 00:21:31,200
input instead or we can ask Carl to

00:21:28,860 --> 00:21:33,510
treat the files binary so don't ignore

00:21:31,200 --> 00:21:37,200
in new lines or anything and just send

00:21:33,510 --> 00:21:39,210
it exactly as this or we can use that

00:21:37,200 --> 00:21:41,280
and send a binary from the file as well

00:21:39,210 --> 00:21:42,600
and we can add a header custom header

00:21:41,280 --> 00:21:44,370
like in this case if you want to send

00:21:42,600 --> 00:21:46,500
JSON sometimes you want to tell the

00:21:44,370 --> 00:21:48,720
server that this is actually Jason

00:21:46,500 --> 00:21:58,380
coming in the post then you can do it

00:21:48,720 --> 00:22:02,100
like that and then when people started

00:21:58,380 --> 00:22:04,620
doing things like this you often want to

00:22:02,100 --> 00:22:06,270
do for example you also want to do post

00:22:04,620 --> 00:22:08,940
is one way to send data to a chippy

00:22:06,270 --> 00:22:10,920
server boot is another put is usually a

00:22:08,940 --> 00:22:13,320
way to sort of replace instead of

00:22:10,920 --> 00:22:15,000
sending data to a resources you it's

00:22:13,320 --> 00:22:16,890
actually more meant to replace a

00:22:15,000 --> 00:22:18,870
resource with this content so they

00:22:16,890 --> 00:22:21,660
they're similar but slightly different

00:22:18,870 --> 00:22:23,790
in semantics but then you do it like

00:22:21,660 --> 00:22:26,840
this anyway you just use the uppercase T

00:22:23,790 --> 00:22:30,260
and you put a local file like this

00:22:26,840 --> 00:22:33,260
and it'll push and in this case we're -

00:22:30,260 --> 00:22:35,150
I again so we get to response headers

00:22:33,260 --> 00:22:37,580
and I get the response body because we

00:22:35,150 --> 00:22:39,680
didn't save it and if we are not happy

00:22:37,580 --> 00:22:42,140
with post and Putin yet than had we can

00:22:39,680 --> 00:22:49,850
change the method we send to the server

00:22:42,140 --> 00:22:51,710
with with the capital X option so we so

00:22:49,850 --> 00:22:54,050
we do that based on so we want to send a

00:22:51,710 --> 00:22:56,840
put but we want to change them it should

00:22:54,050 --> 00:23:01,700
be method so we send it as a swoosh

00:22:56,840 --> 00:23:04,760
instead like this is a PC but here's

00:23:01,700 --> 00:23:08,000
here's the key here the - X should be

00:23:04,760 --> 00:23:09,830
used sparingly and only for the cases

00:23:08,000 --> 00:23:12,200
where you really want to use something

00:23:09,830 --> 00:23:16,430
else than what curl can do by itself so

00:23:12,200 --> 00:23:18,490
you shouldn't it's a bit tricky thing to

00:23:16,430 --> 00:23:22,520
use here so I'm going to explain why so

00:23:18,490 --> 00:23:25,460
using capital X too much can lead to

00:23:22,520 --> 00:23:26,900
pain so for example here's like here's

00:23:25,460 --> 00:23:28,940
the typical case that we see a lot of

00:23:26,900 --> 00:23:31,490
people this is one of the most abused

00:23:28,940 --> 00:23:31,730
you curled command line cases in the

00:23:31,490 --> 00:23:33,740
world

00:23:31,730 --> 00:23:35,830
the internet you want to post something

00:23:33,740 --> 00:23:40,010
here like post data you send it to this

00:23:35,830 --> 00:23:42,080
site and we add this - capital X here

00:23:40,010 --> 00:23:43,960
for for no good reason because this will

00:23:42,080 --> 00:23:47,380
do a post anyway without us sighting so

00:23:43,960 --> 00:23:50,210
like that we don't need that right so

00:23:47,380 --> 00:23:51,980
then we do like this oh we want to

00:23:50,210 --> 00:23:55,190
follow a redirect as well so we add this

00:23:51,980 --> 00:23:56,930
- capital L at the end we want to follow

00:23:55,190 --> 00:24:00,470
the redirect that we get back from this

00:23:56,930 --> 00:24:03,320
post but II this is probably not what

00:24:00,470 --> 00:24:06,230
you want and this is a very common

00:24:03,320 --> 00:24:08,000
mistake because now it'll send post in

00:24:06,230 --> 00:24:11,300
the one following the redirect as well

00:24:08,000 --> 00:24:11,720
which in often cases this wouldn't do

00:24:11,300 --> 00:24:18,380
otherwise

00:24:11,720 --> 00:24:20,660
so basically avoid it so it means that

00:24:18,380 --> 00:24:22,250
capital X means that you'll use that in

00:24:20,660 --> 00:24:26,510
all requests even when it follows

00:24:22,250 --> 00:24:29,090
redirects otherwise the redirect code

00:24:26,510 --> 00:24:31,970
will tell Carl what method to use and

00:24:29,090 --> 00:24:34,520
dash X will override that and you will

00:24:31,970 --> 00:24:36,970
be sorry and unhappy and it'll not work

00:24:34,520 --> 00:24:40,520
the way you want to

00:24:36,970 --> 00:24:42,470
so only you stash capital X if it uses

00:24:40,520 --> 00:24:46,880
if you want a different method than curl

00:24:42,470 --> 00:24:49,390
would use itself to put shortly ins and

00:24:46,880 --> 00:24:54,350
and just briefly and just remember this

00:24:49,390 --> 00:24:56,510
avoid it don't use - capital X unless

00:24:54,350 --> 00:24:58,940
you really have to but you very rarely

00:24:56,510 --> 00:25:02,180
have to it's okay

00:24:58,940 --> 00:25:05,060
going further and faster into cookies

00:25:02,180 --> 00:25:07,310
cookies are just headers really and we

00:25:05,060 --> 00:25:11,540
already seen how we can add headers and

00:25:07,310 --> 00:25:14,210
in requests about cookies or more sort

00:25:11,540 --> 00:25:17,240
of advanced headers so they're really

00:25:14,210 --> 00:25:19,220
name value pairs we send in headers or

00:25:17,240 --> 00:25:21,320
we get them from a server we can send

00:25:19,220 --> 00:25:24,770
them back from the client if it matches

00:25:21,320 --> 00:25:27,860
sort of conditions like a host name and

00:25:24,770 --> 00:25:29,330
passports and everything and again curl

00:25:27,860 --> 00:25:31,700
doesn't know about cookies unless you

00:25:29,330 --> 00:25:35,170
ask curl to know about cookies and then

00:25:31,700 --> 00:25:37,370
it works like this you for example um

00:25:35,170 --> 00:25:39,830
alright first I wanted to mention that

00:25:37,370 --> 00:25:42,050
yeah you need you actually have separate

00:25:39,830 --> 00:25:44,150
options for reading cookies from a file

00:25:42,050 --> 00:25:46,430
and writing cookies to a file and it

00:25:44,150 --> 00:25:51,260
sort of saving cookies after a session

00:25:46,430 --> 00:25:53,300
so you would do like this here here's a

00:25:51,260 --> 00:25:55,040
final example save all the cookies from

00:25:53,300 --> 00:25:57,440
this side so you would ask you would

00:25:55,040 --> 00:25:59,510
request a page from this side any cookie

00:25:57,440 --> 00:26:01,160
you get back or cookies number of

00:25:59,510 --> 00:26:03,590
cookies it'll save in the cookie jar and

00:26:01,160 --> 00:26:05,810
then you could for example do another

00:26:03,590 --> 00:26:07,100
request to the same site and read back

00:26:05,810 --> 00:26:09,410
the cookies that you saved in the

00:26:07,100 --> 00:26:11,330
previous invoke and it'll use send those

00:26:09,410 --> 00:26:13,910
cookies back exactly like your browser

00:26:11,330 --> 00:26:16,610
would or or any other issue PEEP web

00:26:13,910 --> 00:26:18,200
client would do and so and you could use

00:26:16,610 --> 00:26:20,630
both of them at the same in the same

00:26:18,200 --> 00:26:22,700
command line and it'll it'll work with

00:26:20,630 --> 00:26:24,920
cookies and here's an exam I just wanted

00:26:22,700 --> 00:26:27,320
to show you roughly how such a cookie

00:26:24,920 --> 00:26:30,200
jar would look like this is just very

00:26:27,320 --> 00:26:32,510
basic simple fake cookie it would look

00:26:30,200 --> 00:26:34,550
like this it doesn't really matter what

00:26:32,510 --> 00:26:35,930
all the fields means but I'm just wanted

00:26:34,550 --> 00:26:39,500
to show you there is a text file with

00:26:35,930 --> 00:26:42,980
the contents by the cookie the contents

00:26:39,500 --> 00:26:46,610
of the cookie jar

00:26:42,980 --> 00:26:48,799
it's okay and in a typical login case if

00:26:46,610 --> 00:26:51,350
you want to do like how you log into a

00:26:48,799 --> 00:26:53,299
website with a browser if you would do

00:26:51,350 --> 00:26:56,360
that with curl you would typically

00:26:53,299 --> 00:26:57,909
combine a post and saving cookies and

00:26:56,360 --> 00:27:01,070
then you would do like this you would

00:26:57,909 --> 00:27:03,559
save cookies for example when you go to

00:27:01,070 --> 00:27:06,169
the log in form of a special site your

00:27:03,559 --> 00:27:08,000
own favorite site and on that log in

00:27:06,169 --> 00:27:10,580
form maybe you want to provide your

00:27:08,000 --> 00:27:12,799
username and password and you want to

00:27:10,580 --> 00:27:15,260
make sure that you use the cookies and

00:27:12,799 --> 00:27:18,500
you save the updated cookies and in this

00:27:15,260 --> 00:27:21,529
case boom if you get logged in by that

00:27:18,500 --> 00:27:24,470
request you can in your third request

00:27:21,529 --> 00:27:27,919
here actually request data and that's on

00:27:24,470 --> 00:27:33,049
that side as a logged in user this is

00:27:27,919 --> 00:27:34,549
sort of just basic steps how most modern

00:27:33,049 --> 00:27:36,679
web sites actually work these days you

00:27:34,549 --> 00:27:39,950
log in with a post and you keep keep

00:27:36,679 --> 00:27:41,450
session as a cookie it'll be slightly

00:27:39,950 --> 00:27:45,289
more complicated sometimes when the

00:27:41,450 --> 00:27:47,210
sites it uses a lot of JavaScript and

00:27:45,289 --> 00:27:49,480
other things that ruins your day but

00:27:47,210 --> 00:27:54,289
okay this is the basic concept of this

00:27:49,480 --> 00:27:57,529
and today of course as i mentioned c or

00:27:54,289 --> 00:27:59,179
everybody knows we're using HPS right

00:27:57,529 --> 00:28:03,320
for everything these days so you want to

00:27:59,179 --> 00:28:07,940
try to get stuff from your own site with

00:28:03,320 --> 00:28:09,440
HTTPS instead of HTTP but then you run

00:28:07,940 --> 00:28:11,750
into problems right if you will do it

00:28:09,440 --> 00:28:14,870
like this if you try to get a web page

00:28:11,750 --> 00:28:16,639
from your localhost for example you will

00:28:14,870 --> 00:28:19,700
see that you have certificate problems

00:28:16,639 --> 00:28:22,190
because your site on your localhost

00:28:19,700 --> 00:28:24,769
won't have them you don't have the

00:28:22,190 --> 00:28:26,419
circuit certificate for this IP address

00:28:24,769 --> 00:28:28,250
right so it won't work to do it like

00:28:26,419 --> 00:28:30,919
they said then you can ask curl to

00:28:28,250 --> 00:28:34,399
ignore the certificates checks if you

00:28:30,919 --> 00:28:37,250
want you but we don't condone that and

00:28:34,399 --> 00:28:38,809
it's yeah it doesn't work for cookies

00:28:37,250 --> 00:28:40,899
either so if you're a host actually it's

00:28:38,809 --> 00:28:44,429
name something it doesn't work when you

00:28:40,899 --> 00:28:46,139
access it with the wrong name

00:28:44,429 --> 00:28:50,029
then you can live like this you can

00:28:46,139 --> 00:28:52,499
provide a host header to this site and

00:28:50,029 --> 00:28:54,659
then then this actually makes it work

00:28:52,499 --> 00:28:57,389
with cookies but it doesn't work with

00:28:54,659 --> 00:28:59,220
virtual servers because virtual service

00:28:57,389 --> 00:29:01,950
when you do it with TLS you want it to

00:28:59,220 --> 00:29:04,169
have the proper server name in the

00:29:01,950 --> 00:29:05,639
already in the TLS handshake and this

00:29:04,169 --> 00:29:07,649
doesn't so it doesn't work for that

00:29:05,639 --> 00:29:09,990
either so curl has another way to do it

00:29:07,649 --> 00:29:13,649
and this is the fancy way today so you

00:29:09,990 --> 00:29:18,210
add the - - rizal this is basically a

00:29:13,649 --> 00:29:22,320
way to provide the an IP address for a

00:29:18,210 --> 00:29:23,850
hostname that you make up or rather you

00:29:22,320 --> 00:29:25,559
provide the IP address for whatever

00:29:23,850 --> 00:29:28,710
hostname you want like this if you want

00:29:25,559 --> 00:29:30,570
to if you want to access example.com on

00:29:28,710 --> 00:29:32,909
your own host because you run your own

00:29:30,570 --> 00:29:35,009
you won't have you run your own copy of

00:29:32,909 --> 00:29:37,919
the example.com server on your local

00:29:35,009 --> 00:29:40,700
host you can just tell curl that this is

00:29:37,919 --> 00:29:44,999
the IP address for example.com right now

00:29:40,700 --> 00:29:47,249
so this it makes it work with them with

00:29:44,999 --> 00:29:49,289
TLS and certificates and it works with

00:29:47,249 --> 00:29:51,419
cookies and it's virtue will it it works

00:29:49,289 --> 00:29:53,820
even if you have virtual setup so if you

00:29:51,419 --> 00:29:55,440
run more than one server on your look at

00:29:53,820 --> 00:29:57,749
how you still work for that year it's a

00:29:55,440 --> 00:29:59,789
pretty convenient way you can even

00:29:57,749 --> 00:30:02,159
there's almost another option that is

00:29:59,789 --> 00:30:04,919
called connect to which is slightly

00:30:02,159 --> 00:30:07,440
different but achieves almost the same

00:30:04,919 --> 00:30:09,779
thing mostly so here you can actually

00:30:07,440 --> 00:30:12,360
tell curl to connect to another host

00:30:09,779 --> 00:30:14,759
name instead of the original host name

00:30:12,360 --> 00:30:17,549
and even change port number if you want

00:30:14,759 --> 00:30:19,679
here so you can do a lot of tricks if

00:30:17,549 --> 00:30:22,379
you want to access a server on a

00:30:19,679 --> 00:30:25,320
temporary site like when you develop the

00:30:22,379 --> 00:30:27,360
site or when you want to test just one

00:30:25,320 --> 00:30:30,809
particular load balancer perhaps out of

00:30:27,360 --> 00:30:32,009
a set of many so you know where to go

00:30:30,809 --> 00:30:34,529
and you don't want to use them

00:30:32,009 --> 00:30:37,470
it would narrate DNS round-robin or

00:30:34,529 --> 00:30:39,749
whatever it does so okay you can do a

00:30:37,470 --> 00:30:40,470
lot of fancy things so let's see other

00:30:39,749 --> 00:30:43,649
fancy things

00:30:40,470 --> 00:30:45,929
oh right let's just pause and say don't

00:30:43,649 --> 00:30:50,700
use - Kay to disable certificate checks

00:30:45,929 --> 00:30:52,369
and now avoid it so you want to do get

00:30:50,700 --> 00:30:55,360
more details out of your command line

00:30:52,369 --> 00:30:59,020
Karl tool so then

00:30:55,360 --> 00:31:02,860
I mentioned before hum using more V's in

00:30:59,020 --> 00:31:06,429
them the verbose option doesn't help you

00:31:02,860 --> 00:31:06,970
because it won't add more data so

00:31:06,429 --> 00:31:10,059
instead

00:31:06,970 --> 00:31:12,370
curl provides the this option called - -

00:31:10,059 --> 00:31:15,549
trace asking this also actually one

00:31:12,370 --> 00:31:17,740
called just - - trace they're similar

00:31:15,549 --> 00:31:19,720
and they add a lot more detail it

00:31:17,740 --> 00:31:21,570
basically send everything they show you

00:31:19,720 --> 00:31:26,049
everything that curls sends in and out

00:31:21,570 --> 00:31:28,450
sends out and gets in sorry it'll help

00:31:26,049 --> 00:31:30,429
you identify exactly what is going on

00:31:28,450 --> 00:31:32,710
something like in this case you can see

00:31:30,429 --> 00:31:36,130
this is a simple post sent to this

00:31:32,710 --> 00:31:39,669
server example of calm and then you can

00:31:36,130 --> 00:31:42,220
see like this and exactly what kind of

00:31:39,669 --> 00:31:44,350
request looks like what kind of data it

00:31:42,220 --> 00:31:46,240
sends that is sensitive exact send this

00:31:44,350 --> 00:31:47,470
data as opposed down there you see the

00:31:46,240 --> 00:31:50,919
third line from the bottom you can see

00:31:47,470 --> 00:31:52,419
the post data getting send it out and of

00:31:50,919 --> 00:31:54,370
course this is a simple case but in more

00:31:52,419 --> 00:31:56,410
complicated cases you'll you can verify

00:31:54,370 --> 00:31:58,540
that the post or the request looks

00:31:56,410 --> 00:32:00,370
exactly the way you want it and intended

00:31:58,540 --> 00:32:02,740
it to be and you can see every single

00:32:00,370 --> 00:32:06,730
byte that curl gets back to and you can

00:32:02,740 --> 00:32:11,340
verify that it actually is it matches

00:32:06,730 --> 00:32:11,340
whatever you think it should look like

00:32:11,730 --> 00:32:16,000
other ways to extract sort of

00:32:14,470 --> 00:32:17,710
information from your request or

00:32:16,000 --> 00:32:20,470
transfers when you use curl the command

00:32:17,710 --> 00:32:23,890
line tool is the funny write out option

00:32:20,470 --> 00:32:26,799
- W so you use it like this

00:32:23,890 --> 00:32:30,610
it's a serve string with the bunch of

00:32:26,799 --> 00:32:32,950
variables for you to get data out of

00:32:30,610 --> 00:32:34,809
chrome with so you'd use it like this

00:32:32,950 --> 00:32:36,730
basic write out and then the text and

00:32:34,809 --> 00:32:39,100
you have variables in there

00:32:36,730 --> 00:32:40,990
to use and you have fancy and fun

00:32:39,100 --> 00:32:43,059
variables there's a range and I think

00:32:40,990 --> 00:32:45,460
there's around 30 different ones so far

00:32:43,059 --> 00:32:47,860
you can get content type you can the HP

00:32:45,460 --> 00:32:50,830
version remote IP address local IP

00:32:47,860 --> 00:32:53,530
address you can download speed and we're

00:32:50,830 --> 00:32:55,240
introducing the the JSON variable that I

00:32:53,530 --> 00:32:57,610
know a lot of people are looking for

00:32:55,240 --> 00:32:59,830
with you with which will output all of

00:32:57,610 --> 00:33:01,540
these variables as a JSON object so soon

00:32:59,830 --> 00:33:05,169
you will get everything is a JSON object

00:33:01,540 --> 00:33:06,520
so to information is not actually data

00:33:05,169 --> 00:33:07,860
from the transfer but it's information

00:33:06,520 --> 00:33:10,559
Oh

00:33:07,860 --> 00:33:14,130
the most recent transfer like this you

00:33:10,559 --> 00:33:18,480
would use right out Jason like this - w

00:33:14,130 --> 00:33:21,779
and this percent brace Jason brace which

00:33:18,480 --> 00:33:24,330
is a way of just specifying that we want

00:33:21,779 --> 00:33:26,490
that variable output and it sends the

00:33:24,330 --> 00:33:29,789
variable output to standard out here so

00:33:26,490 --> 00:33:32,490
we saved the action file to the with -

00:33:29,789 --> 00:33:34,230
oh we save it to file on disk and we

00:33:32,490 --> 00:33:36,299
pass this in this case to JQ again

00:33:34,230 --> 00:33:39,269
because JQ is a cool jason till and

00:33:36,299 --> 00:33:41,880
it'll look like this maybe not color

00:33:39,269 --> 00:33:43,950
coded like this but anyway it'll pretty

00:33:41,880 --> 00:33:46,669
print it that's JQ doing it and so

00:33:43,950 --> 00:33:49,620
there's this is Jason coming from Carl

00:33:46,669 --> 00:33:53,779
with metadata about the particular

00:33:49,620 --> 00:33:53,779
transfer from that URL right now

00:33:54,100 --> 00:34:03,220
nice right so running forward right so

00:34:00,270 --> 00:34:07,120
what if you do all of this and you're

00:34:03,220 --> 00:34:08,800
thinking well I want to do a to love

00:34:07,120 --> 00:34:10,240
this instead instead of running my

00:34:08,800 --> 00:34:12,970
command lines I want to write the Lib

00:34:10,240 --> 00:34:15,820
curl using tool that does the same thing

00:34:12,970 --> 00:34:18,250
and then curl has the fun command line

00:34:15,820 --> 00:34:20,429
one of my favorite command line options

00:34:18,250 --> 00:34:23,320
to curl is the dash dash lip curl option

00:34:20,429 --> 00:34:24,159
so you use it like this you write the

00:34:23,320 --> 00:34:26,080
curl command line

00:34:24,159 --> 00:34:27,730
whatever curl command line you can think

00:34:26,080 --> 00:34:29,500
of really you add all the options and

00:34:27,730 --> 00:34:33,250
then you add this dash dash lip curl and

00:34:29,500 --> 00:34:35,440
the source code dot C and curl will then

00:34:33,250 --> 00:34:37,300
generate that source code and then you

00:34:35,440 --> 00:34:41,619
compile the source code and you run it

00:34:37,300 --> 00:34:44,320
and it'll that that application will

00:34:41,619 --> 00:34:47,440
then perform the same operation as your

00:34:44,320 --> 00:34:49,990
command line did like this if you in

00:34:47,440 --> 00:34:52,780
this example if you would do that just

00:34:49,990 --> 00:34:54,750
getting that example.com URL it would

00:34:52,780 --> 00:34:58,030
generate the source code that looks

00:34:54,750 --> 00:35:02,350
roughly like this it's a template it

00:34:58,030 --> 00:35:04,540
dude it does the transfer in this case a

00:35:02,350 --> 00:35:06,520
very simple transfer and it doesn't add

00:35:04,540 --> 00:35:08,200
anything magic but that's the that's the

00:35:06,520 --> 00:35:10,030
header that's the source code for it and

00:35:08,200 --> 00:35:12,190
you could just build it immediately and

00:35:10,030 --> 00:35:15,070
run it and you have your own lip color

00:35:12,190 --> 00:35:16,810
using application and it's a really good

00:35:15,070 --> 00:35:19,000
kickstart because whatever you want to

00:35:16,810 --> 00:35:20,290
do of course you don't I mean you want

00:35:19,000 --> 00:35:21,970
to do something slightly more advanced

00:35:20,290 --> 00:35:24,430
than this possibly but this is a really

00:35:21,970 --> 00:35:28,480
good way to get going get started with

00:35:24,430 --> 00:35:29,599
your lip color using the application and

00:35:28,480 --> 00:35:31,770
of course

00:35:29,599 --> 00:35:34,730
and here's this it's not yet bus

00:35:31,770 --> 00:35:38,010
whatever you want to do like with your a

00:35:34,730 --> 00:35:40,500
lot of use cases come from you know your

00:35:38,010 --> 00:35:41,940
use sit somewhere with your browse have

00:35:40,500 --> 00:35:44,130
you done something you want to make sure

00:35:41,940 --> 00:35:46,200
that you can redo that operation with

00:35:44,130 --> 00:35:48,059
curl after you've done it the same way

00:35:46,200 --> 00:35:50,579
the browser would do it like login to

00:35:48,059 --> 00:35:53,880
that site or download that file or view

00:35:50,579 --> 00:35:55,440
that image and then all browsers

00:35:53,880 --> 00:35:59,589
nowadays

00:35:55,440 --> 00:36:02,680
Firefox Chrome Edge and Safari they all

00:35:59,589 --> 00:36:04,420
have this copy as curl option these are

00:36:02,680 --> 00:36:06,369
three different screenshots they're

00:36:04,420 --> 00:36:08,619
variable by now but so they basically

00:36:06,369 --> 00:36:11,019
probably looks a little bit different

00:36:08,619 --> 00:36:12,670
these days in all of them but all of the

00:36:11,019 --> 00:36:14,980
major browsers they have this copyist

00:36:12,670 --> 00:36:16,599
curl option in their networking debug

00:36:14,980 --> 00:36:19,450
tool so if you go into these debug tools

00:36:16,599 --> 00:36:21,039
section of the browser and you can see

00:36:19,450 --> 00:36:22,660
all the difference requests for a

00:36:21,039 --> 00:36:24,430
website and you can select one of those

00:36:22,660 --> 00:36:26,920
lines and you can go into the

00:36:24,430 --> 00:36:30,279
right-click it and select copy as curl

00:36:26,920 --> 00:36:32,529
and then you get then you get a command

00:36:30,279 --> 00:36:34,599
line copied to your clipboard for a

00:36:32,529 --> 00:36:36,369
command line that would use curl to get

00:36:34,599 --> 00:36:39,519
that request exactly the way the browser

00:36:36,369 --> 00:36:42,819
would do it basically like this BAM

00:36:39,519 --> 00:36:47,319
here's an example of Firefox doing a

00:36:42,819 --> 00:36:50,859
request and as an example actually

00:36:47,319 --> 00:36:54,400
actually this gets the curl front web

00:36:50,859 --> 00:36:57,849
page and the exact same web page from

00:36:54,400 --> 00:37:01,299
from Chrome it looks like this and

00:36:57,849 --> 00:37:03,190
they'll they're there long and a bit

00:37:01,299 --> 00:37:05,619
overly complicated but this is because

00:37:03,190 --> 00:37:08,410
it sets the exact same header set that

00:37:05,619 --> 00:37:10,390
the browsers are using anyway that's the

00:37:08,410 --> 00:37:12,640
way it works so if you have a command

00:37:10,390 --> 00:37:14,650
line if you have a request you want to

00:37:12,640 --> 00:37:16,569
mimic with curl from the browser it's an

00:37:14,650 --> 00:37:19,839
easy way to get started and of course

00:37:16,569 --> 00:37:22,390
after you do this you usually go through

00:37:19,839 --> 00:37:23,740
this list of options and trim it a

00:37:22,390 --> 00:37:25,660
little bit and make sure that it

00:37:23,740 --> 00:37:28,390
actually that's exactly what you want to

00:37:25,660 --> 00:37:30,789
and not the way you got it copied from

00:37:28,390 --> 00:37:33,880
the beginning so it's the first step

00:37:30,789 --> 00:37:36,930
it's not the finest and if that's not

00:37:33,880 --> 00:37:42,730
enough you can do like this you can do

00:37:36,930 --> 00:37:44,950
enter the SSL key log file way of spying

00:37:42,730 --> 00:37:46,660
on your browser when were spying on curl

00:37:44,950 --> 00:37:48,670
and making sure that everything looks

00:37:46,660 --> 00:37:52,329
the same especially if you for example

00:37:48,670 --> 00:37:54,849
want to mimic several steps of

00:37:52,329 --> 00:37:56,140
operations that you browser does and you

00:37:54,849 --> 00:37:58,869
wanna make sure the curl does the same

00:37:56,140 --> 00:38:00,430
thing maybe then you can snoop on them

00:37:58,869 --> 00:38:03,160
and make sure that I'm verify that they

00:38:00,430 --> 00:38:04,779
look and behave the same right so you

00:38:03,160 --> 00:38:07,119
just need these things you need

00:38:04,779 --> 00:38:09,970
Wireshark and you need this environment

00:38:07,119 --> 00:38:11,269
variable called SSL key log file all in

00:38:09,970 --> 00:38:16,579
uppercase knows

00:38:11,269 --> 00:38:18,859
this and you tell both yeah well like

00:38:16,579 --> 00:38:22,339
this you specified a white shark where

00:38:18,859 --> 00:38:24,709
to load steal our secrets and SSL key

00:38:22,339 --> 00:38:25,999
log file tells the tools where to store

00:38:24,709 --> 00:38:28,399
the secrets so basically they should

00:38:25,999 --> 00:38:31,849
point to the same file and curl and your

00:38:28,399 --> 00:38:34,729
browser can save those secrets in that

00:38:31,849 --> 00:38:38,299
file and make sure that white shark uses

00:38:34,729 --> 00:38:41,419
it like this you set the environment

00:38:38,299 --> 00:38:43,189
variable to perth path name like perhaps

00:38:41,419 --> 00:38:44,989
like this TLS key i just made up the

00:38:43,189 --> 00:38:49,249
path there you can use whatever path you

00:38:44,989 --> 00:38:51,199
want and then you run curl so and the

00:38:49,249 --> 00:38:53,599
day of course it doesn't help you right

00:38:51,199 --> 00:38:58,009
but then and you need to have fire my

00:38:53,599 --> 00:38:59,719
short find up in next to that and then

00:38:58,009 --> 00:39:02,719
in for why short you go into this

00:38:59,719 --> 00:39:07,099
premaster secret log file setting which

00:39:02,719 --> 00:39:09,769
is under the SSL protocol section and

00:39:07,099 --> 00:39:11,539
then you so that tell while short read

00:39:09,769 --> 00:39:14,119
your secrets from here and when you do

00:39:11,539 --> 00:39:15,739
that you can then enable why short to

00:39:14,119 --> 00:39:16,899
snoop on the network traffic and it will

00:39:15,739 --> 00:39:19,699
automatically

00:39:16,899 --> 00:39:21,169
decrypt and analyze the TLS traffic for

00:39:19,699 --> 00:39:24,799
you even if it's completely

00:39:21,169 --> 00:39:26,839
I mean it's TLS so it's no longer

00:39:24,799 --> 00:39:28,579
encrypted and hidden for in Wireshark so

00:39:26,839 --> 00:39:31,399
you can actually see the protocol stuff

00:39:28,579 --> 00:39:34,429
yeah in detail in this case the

00:39:31,399 --> 00:39:36,979
screenshot here is an HTTP to transfer

00:39:34,429 --> 00:39:39,139
him well a lot of it should be two

00:39:36,979 --> 00:39:40,880
frames just showing off how it looks

00:39:39,139 --> 00:39:43,009
like when you analyze Taylor's traffic

00:39:40,880 --> 00:39:45,949
and it you can do that with curl and you

00:39:43,009 --> 00:39:48,409
can do that with yeah with the browser

00:39:45,949 --> 00:39:53,809
both Firefox and Chrome support that a

00:39:48,409 --> 00:39:55,219
little key log style okay and and of

00:39:53,809 --> 00:39:56,569
course curls supports a lot of different

00:39:55,219 --> 00:39:58,249
protocols and we talked about the HTP

00:39:56,569 --> 00:40:01,699
here but curl also supports a lot of

00:39:58,249 --> 00:40:03,279
different HTTP protocols if the p 1.0

00:40:01,699 --> 00:40:06,049
shipped in 96 as I mentioned before

00:40:03,279 --> 00:40:08,630
headers looked that way we learned how

00:40:06,049 --> 00:40:12,949
had Harris looked like back in the 90s

00:40:08,630 --> 00:40:16,009
and then well in the 2015 we shipped HP

00:40:12,949 --> 00:40:18,259
to an AGP to sends hair slightly

00:40:16,009 --> 00:40:20,869
differently but we we like to pretend

00:40:18,259 --> 00:40:22,909
that it doesn't in curl so even though

00:40:20,869 --> 00:40:24,369
there's there are now different it

00:40:22,909 --> 00:40:27,240
should be protocols HP

00:40:24,369 --> 00:40:29,470
threes coming curl supported in an

00:40:27,240 --> 00:40:30,940
experimental way now Karen still

00:40:29,470 --> 00:40:32,680
pretends that all headers look and

00:40:30,940 --> 00:40:35,069
worked like they didn't HP one at once

00:40:32,680 --> 00:40:38,589
or one at zero so all headers will

00:40:35,069 --> 00:40:41,259
appear as they've always done so

00:40:38,589 --> 00:40:43,450
whatever you tell Carlton used HTTP

00:40:41,259 --> 00:40:46,299
versions if you ask it to use one zero

00:40:43,450 --> 00:40:48,970
one at one two or three the headers will

00:40:46,299 --> 00:40:51,039
you pass to it and the headers you will

00:40:48,970 --> 00:40:53,890
get back they'll still look at the same

00:40:51,039 --> 00:40:58,299
way and they actually chappy version

00:40:53,890 --> 00:40:59,319
will be sort of you won't really have to

00:40:58,299 --> 00:41:01,660
bother about that

00:40:59,319 --> 00:41:03,849
it'll say which IP version you'd use it

00:41:01,660 --> 00:41:05,559
so you will know it but you the headers

00:41:03,849 --> 00:41:08,769
and everything will look the same

00:41:05,559 --> 00:41:11,049
pretty transparently said you'll make

00:41:08,769 --> 00:41:12,730
sure that even if your servers upgrade

00:41:11,049 --> 00:41:16,240
to version two or version 3 and your

00:41:12,730 --> 00:41:17,890
curl scripts do as well you still can

00:41:16,240 --> 00:41:22,480
use the headers the same way as you did

00:41:17,890 --> 00:41:25,230
your headers 20 years ago it should be

00:41:22,480 --> 00:41:28,210
three support is experimental it works

00:41:25,230 --> 00:41:33,039
mostly you should try it out it's fun

00:41:28,210 --> 00:41:35,289
but it's not so the final thing all

00:41:33,039 --> 00:41:38,170
right and then if you want to do adding

00:41:35,289 --> 00:41:39,670
even more spice to this if you think you

00:41:38,170 --> 00:41:41,349
want to do a lot of different things on

00:41:39,670 --> 00:41:43,150
the same command line and a lot of

00:41:41,349 --> 00:41:44,920
people do right because if you do it all

00:41:43,150 --> 00:41:46,599
the same command line we can reuse a lot

00:41:44,920 --> 00:41:48,400
of caches we'll reuse connections and

00:41:46,599 --> 00:41:50,559
everything like in this example here we

00:41:48,400 --> 00:41:54,519
can send the same post to do to two

00:41:50,559 --> 00:41:58,779
different URLs send user the user is

00:41:54,519 --> 00:42:00,730
Daniel to both these URLs but maybe I

00:41:58,779 --> 00:42:02,680
want to send a post first and then a get

00:42:00,730 --> 00:42:05,739
from another URL and then I could do it

00:42:02,680 --> 00:42:07,960
like this I add the - - next option in

00:42:05,739 --> 00:42:12,039
between which will which will pretty

00:42:07,960 --> 00:42:14,559
much reset the command line option

00:42:12,039 --> 00:42:16,660
parser and go back to the default so in

00:42:14,559 --> 00:42:18,910
this particular example we're looking at

00:42:16,660 --> 00:42:21,099
on here on the screen we first send a

00:42:18,910 --> 00:42:23,259
post to diff to the example of com

00:42:21,099 --> 00:42:25,180
domain reset all the command line

00:42:23,259 --> 00:42:27,869
options and then we have a get to the

00:42:25,180 --> 00:42:31,390
next one because the that's the default

00:42:27,869 --> 00:42:33,489
method we can also sort of reverse the

00:42:31,390 --> 00:42:35,589
option and do get first and do the dash

00:42:33,489 --> 00:42:36,740
dash next and then we send a post to the

00:42:35,589 --> 00:42:38,900
second URL

00:42:36,740 --> 00:42:41,869
and of course there's no limited number

00:42:38,900 --> 00:42:46,400
of URLs or - necks that you can use so

00:42:41,869 --> 00:42:48,170
you can use that a lot if you want to or

00:42:46,400 --> 00:42:50,150
feel the need to and then of course it

00:42:48,170 --> 00:42:52,100
since it doesn't quit here in between

00:42:50,150 --> 00:42:53,630
ill reuse connections and caches and

00:42:52,100 --> 00:42:56,000
everything it'll be much faster than

00:42:53,630 --> 00:43:03,140
doing multiple their command on you

00:42:56,000 --> 00:43:05,270
works so and by this I hope that I've

00:43:03,140 --> 00:43:07,240
sort of the T story imagination a little

00:43:05,270 --> 00:43:09,770
bit about what to do with kerlun how to

00:43:07,240 --> 00:43:13,730
figure out how to do it and use it

00:43:09,770 --> 00:43:18,230
better and everything I realized that

00:43:13,730 --> 00:43:22,040
I've only sort of touched on what 12 14

00:43:18,230 --> 00:43:23,630
18 different options and there are many

00:43:22,040 --> 00:43:25,480
more many of the options are cost

00:43:23,630 --> 00:43:29,900
protocol specifics that I want really

00:43:25,480 --> 00:43:31,220
mattered for HP but this I hope you at

00:43:29,900 --> 00:43:34,670
least showed you some of them and some

00:43:31,220 --> 00:43:38,119
of these things was actually new to you

00:43:34,670 --> 00:43:41,390
and interesting so get in there start

00:43:38,119 --> 00:43:47,480
using more curl and avoid - capital X

00:43:41,390 --> 00:43:50,540
and don't use - K either but

00:43:47,480 --> 00:43:52,609
try out everything and of course all

00:43:50,540 --> 00:43:54,650
that I said here in my little

00:43:52,609 --> 00:43:57,230
presentation here today all of this and

00:43:54,650 --> 00:43:58,760
a lot more is also documented and

00:43:57,230 --> 00:44:03,170
detailed in this little book everything

00:43:58,760 --> 00:44:07,340
curl which is our my attempt to document

00:44:03,170 --> 00:44:08,869
most of the curl project options and

00:44:07,340 --> 00:44:11,570
curl command line and everything in

00:44:08,869 --> 00:44:14,060
current really so that's why it's called

00:44:11,570 --> 00:44:17,510
everything curl so and it's available

00:44:14,060 --> 00:44:19,460
online in PDF and and web version so go

00:44:17,510 --> 00:44:21,680
will read that if you want to dig into

00:44:19,460 --> 00:44:23,540
all these details even more and of

00:44:21,680 --> 00:44:26,720
course feel free to help out in the

00:44:23,540 --> 00:44:31,670
project we always need and appreciate

00:44:26,720 --> 00:44:35,960
your help to get even better code bug

00:44:31,670 --> 00:44:40,609
reports patches yelling whatever you

00:44:35,960 --> 00:44:46,040
think you we need in the project so help

00:44:40,609 --> 00:44:48,260
out thank you any questions here yeah

00:44:46,040 --> 00:44:50,720
exactly hi thank you very much for this

00:44:48,260 --> 00:44:53,660
talk with so many deep insights and

00:44:50,720 --> 00:44:56,420
tricks we do actually have quite a lot

00:44:53,660 --> 00:45:00,550
of questions so let's get to them so the

00:44:56,420 --> 00:45:04,730
first question is by drew food Sidney

00:45:00,550 --> 00:45:10,460
other situations where it is better or

00:45:04,730 --> 00:45:15,710
easier to use W get yes there are of

00:45:10,460 --> 00:45:18,650
course and let me just sidestep that for

00:45:15,710 --> 00:45:20,930
one second I said that we we don't have

00:45:18,650 --> 00:45:23,060
that much of a big event W get the curl

00:45:20,930 --> 00:45:26,510
or really but it's I like to entertain

00:45:23,060 --> 00:45:28,880
that notion this feel feels fun but you

00:45:26,510 --> 00:45:31,040
know of course I was I would say that W

00:45:28,880 --> 00:45:33,920
ghetto court it has this recursive

00:45:31,040 --> 00:45:35,300
option which is primarily one that curl

00:45:33,920 --> 00:45:37,940
really doesn't have so if you want to

00:45:35,300 --> 00:45:39,560
download one resource that links to

00:45:37,940 --> 00:45:41,780
other resources like images or stun

00:45:39,560 --> 00:45:44,150
sheets or whatever anyone and get an

00:45:41,780 --> 00:45:46,580
entire website or whatever then W get is

00:45:44,150 --> 00:45:48,680
of course your friend and curl will make

00:45:46,580 --> 00:45:52,910
that really hard for you so that I would

00:45:48,680 --> 00:45:56,990
say that's the obvious case okay okay

00:45:52,910 --> 00:45:59,330
great then the next question is how did

00:45:56,990 --> 00:46:02,859
you decide on the name and the

00:45:59,330 --> 00:46:02,859
pronunciation of curve

00:46:03,109 --> 00:46:09,920
well so it of course has a long history

00:46:06,859 --> 00:46:11,540
since I started working on yeah I

00:46:09,920 --> 00:46:12,740
started on the when I started working

00:46:11,540 --> 00:46:14,119
with httpclient

00:46:12,740 --> 00:46:15,830
I call it there should be get from the

00:46:14,119 --> 00:46:17,630
beginning because I based it on another

00:46:15,830 --> 00:46:19,550
- we called A to B get started off it

00:46:17,630 --> 00:46:22,430
well I didn't even start it myself so

00:46:19,550 --> 00:46:24,410
and then it it grew into URL get when it

00:46:22,430 --> 00:46:26,359
got more support than the HTTP and then

00:46:24,410 --> 00:46:28,640
I said one day I thought it supported

00:46:26,359 --> 00:46:30,260
upload as well and then URL get turned

00:46:28,640 --> 00:46:32,060
out to be a bad name as well because it

00:46:30,260 --> 00:46:34,369
wasn't only get anymore and then I

00:46:32,060 --> 00:46:36,920
wanted to and I wanted to change the

00:46:34,369 --> 00:46:39,140
name in one way to make sure that I

00:46:36,920 --> 00:46:41,210
didn't have to keep changing it all the

00:46:39,140 --> 00:46:42,980
time and I wanted it to be short I

00:46:41,210 --> 00:46:45,890
wanted to have URL in the name because

00:46:42,980 --> 00:46:48,710
it worked with URL and then I you know

00:46:45,890 --> 00:46:51,410
names are really hard I came up with URL

00:46:48,710 --> 00:46:54,530
maybe the C could stand for client and

00:46:51,410 --> 00:46:58,730
it could also see it stand for just C as

00:46:54,530 --> 00:47:00,890
in sort of a fun pun as in C the URL so

00:46:58,730 --> 00:47:03,619
that's where I went with with curl and

00:47:00,890 --> 00:47:05,780
I'll call the pronunciation wise it felt

00:47:03,619 --> 00:47:07,490
like how else would you pronounce curl

00:47:05,780 --> 00:47:10,040
it's an it's actually an English word

00:47:07,490 --> 00:47:11,990
and you call it curl curly curl so of

00:47:10,040 --> 00:47:12,560
course it would be pronounced curl that

00:47:11,990 --> 00:47:16,460
was easy

00:47:12,560 --> 00:47:20,720
okay great thank you then the next one

00:47:16,460 --> 00:47:22,910
here is by yes / how do you test curl

00:47:20,720 --> 00:47:24,590
before releasing it considering all

00:47:22,910 --> 00:47:28,700
options and built variants

00:47:24,590 --> 00:47:32,300
oh that's a good question it's really

00:47:28,700 --> 00:47:37,850
hard I would would start a previous so

00:47:32,300 --> 00:47:40,550
we have a huge amount of CI we have a

00:47:37,850 --> 00:47:42,410
huge amount of test cases and we test a

00:47:40,550 --> 00:47:44,480
lot of different build combinations and

00:47:42,410 --> 00:47:47,869
on a lot of different platforms and

00:47:44,480 --> 00:47:51,410
tools and everything and of course we do

00:47:47,869 --> 00:47:53,300
that to a large extent but no we don't

00:47:51,410 --> 00:47:56,500
test all combinations and we don't test

00:47:53,300 --> 00:47:59,480
all possible platforms and we don't so

00:47:56,500 --> 00:48:01,790
no we do as best as we can but there are

00:47:59,480 --> 00:48:05,000
of course white spots that we don't test

00:48:01,790 --> 00:48:06,920
enough and usually we try to test all

00:48:05,000 --> 00:48:09,530
the popular combinations and on all the

00:48:06,920 --> 00:48:12,109
popular platforms and hopefully that'll

00:48:09,530 --> 00:48:14,300
cover it good enough but of course there

00:48:12,109 --> 00:48:17,150
will always be some gaps that we miss

00:48:14,300 --> 00:48:23,780
I think usually we end up in a pretty

00:48:17,150 --> 00:48:27,349
good place okay then the next one is the

00:48:23,780 --> 00:48:30,440
school from windows have all these

00:48:27,349 --> 00:48:37,820
options isn't it just an alias to some

00:48:30,440 --> 00:48:40,910
PowerShell command first curl the

00:48:37,820 --> 00:48:41,630
project that that I participate in that

00:48:40,910 --> 00:48:44,030
I found it

00:48:41,630 --> 00:48:45,590
we of course make a curl exactly the

00:48:44,030 --> 00:48:47,690
same on all platforms the curl on

00:48:45,590 --> 00:48:49,460
Windows it actually will work exactly

00:48:47,690 --> 00:48:51,770
the way it does on all the other

00:48:49,460 --> 00:48:54,410
platforms and we've shipped curl on

00:48:51,770 --> 00:48:55,849
Windows for well maybe we didn't do it

00:48:54,410 --> 00:49:00,170
the first few months but we've done it

00:48:55,849 --> 00:49:03,080
for almost 22 years and then along when

00:49:00,170 --> 00:49:05,359
we made curl popular everywhere suddenly

00:49:03,080 --> 00:49:07,130
one day Microsoft in their infinite

00:49:05,359 --> 00:49:09,950
wisdom decided that they should create

00:49:07,130 --> 00:49:12,980
alias in PowerShell that it's called

00:49:09,950 --> 00:49:14,630
curl that is almost completely a broken

00:49:12,980 --> 00:49:17,810
curl it doesn't work like curl but you

00:49:14,630 --> 00:49:20,540
could make an alias and I don't know why

00:49:17,810 --> 00:49:24,230
it was never a good idea I've complained

00:49:20,540 --> 00:49:25,820
to them and I said I somebody might know

00:49:24,230 --> 00:49:27,349
that I also sent them a pull request to

00:49:25,820 --> 00:49:30,740
remove that alias when they made the

00:49:27,349 --> 00:49:33,560
code open but they rejected my full

00:49:30,740 --> 00:49:37,400
request but but anyway since then since

00:49:33,560 --> 00:49:41,300
they then they've also nowadays they

00:49:37,400 --> 00:49:43,160
ship the real curl so since March 2018

00:49:41,300 --> 00:49:45,650
which I mentioned in my talk here they

00:49:43,160 --> 00:49:47,480
ship the real curl not the alias they

00:49:45,650 --> 00:49:50,180
ship the alias as well but they ship the

00:49:47,480 --> 00:49:52,520
real curl as well so the it's this our

00:49:50,180 --> 00:49:54,710
code shipped in Windows 10 since two

00:49:52,520 --> 00:49:57,109
years back and that works the same way

00:49:54,710 --> 00:49:59,990
as curled us everywhere else with the

00:49:57,109 --> 00:50:04,190
same caveat that they of course have

00:49:59,990 --> 00:50:06,580
selected a set of dependencies and build

00:50:04,190 --> 00:50:09,500
options for their particular bills so

00:50:06,580 --> 00:50:12,200
when you run curl on Windows 10 it might

00:50:09,500 --> 00:50:14,839
not works exactly the same as when you

00:50:12,200 --> 00:50:16,970
do run curl on your linden exist or

00:50:14,839 --> 00:50:18,440
something depending on the version and

00:50:16,970 --> 00:50:20,500
the particular build options they used

00:50:18,440 --> 00:50:26,440
when they built curve in the marks

00:50:20,500 --> 00:50:30,070
of HQ okay thank you

00:50:26,440 --> 00:50:32,470
then if you had the opportunity to

00:50:30,070 --> 00:50:36,960
restart today would you still have

00:50:32,470 --> 00:50:36,960
chosen C as your programming language

00:50:37,110 --> 00:50:43,150
good question

00:50:39,100 --> 00:50:45,790
it depends / if I wanted Carl to become

00:50:43,150 --> 00:50:50,130
what it is today there there wouldn't be

00:50:45,790 --> 00:50:50,130
any other choice I would say because

00:50:51,060 --> 00:50:58,300
because of many reasons because curl

00:50:53,830 --> 00:51:00,160
runs on 70 as run or is running on 72

00:50:58,300 --> 00:51:02,320
different operating systems it's run on

00:51:00,160 --> 00:51:05,710
20 different CPU architectures

00:51:02,320 --> 00:51:09,330
there's just nothing comes even close

00:51:05,710 --> 00:51:11,710
when when running on this funny new

00:51:09,330 --> 00:51:14,440
computer languages so sure I could

00:51:11,710 --> 00:51:16,690
rewrite it in rust if I was happy with

00:51:14,440 --> 00:51:19,540
the three major platforms or maybe five

00:51:16,690 --> 00:51:21,760
and so on so sure that could have been

00:51:19,540 --> 00:51:24,160
but if you if I wanted if you if I

00:51:21,760 --> 00:51:25,840
wanted this 10 billion installations or

00:51:24,160 --> 00:51:28,630
something that we count on now I would

00:51:25,840 --> 00:51:31,030
say that C would be mandatory to get

00:51:28,630 --> 00:51:33,640
that coverage and we have a lot of our

00:51:31,030 --> 00:51:35,740
users using it in tiny devices on on

00:51:33,640 --> 00:51:39,220
obscure operating systems and everything

00:51:35,740 --> 00:51:41,820
so I think C has been one key factor to

00:51:39,220 --> 00:51:44,230
why Curly's as widespread as it is today

00:51:41,820 --> 00:51:47,490
so yeah it depends on what I wanted to

00:51:44,230 --> 00:51:47,490
do if I if I

00:51:47,589 --> 00:51:55,119
I would stick to see okay and the next

00:51:52,210 --> 00:51:59,950
one by Hendrick does curl support

00:51:55,119 --> 00:52:04,210
globally set options like the W get RC

00:51:59,950 --> 00:52:06,069
file for W get yes it does

00:52:04,210 --> 00:52:08,349
I mean the curl and curl command line

00:52:06,069 --> 00:52:12,420
tool has a dot curl or C file that it

00:52:08,349 --> 00:52:12,420
supports for reading options at started

00:52:12,880 --> 00:52:23,510
okay great and then Frank asks are you a

00:52:17,540 --> 00:52:26,360
fan of the - lol of Jim hi Frank

00:52:23,510 --> 00:52:30,970
yes of course I'm a fan so yeah it since

00:52:26,360 --> 00:52:34,130
since curl has a lot of options and also

00:52:30,970 --> 00:52:35,960
also since you can basically all the

00:52:34,130 --> 00:52:37,910
letters are used for something you can

00:52:35,960 --> 00:52:40,850
make up fun sentences by making sure

00:52:37,910 --> 00:52:43,490
that you just so the lol is one of those

00:52:40,850 --> 00:52:45,980
fun things I remember one of my my

00:52:43,490 --> 00:52:48,500
favorite options I think it's the Stack

00:52:45,980 --> 00:52:51,530
Overflow option when someone said that

00:52:48,500 --> 00:52:57,020
the - oh J is a killer option and I

00:52:51,530 --> 00:52:58,370
think that's for the younger ones in the

00:52:57,020 --> 00:53:01,220
audience you might not catch that but

00:52:58,370 --> 00:53:03,320
still so yeah you can make out really

00:53:01,220 --> 00:53:06,050
funny and and the the same thing that

00:53:03,320 --> 00:53:07,970
you know when you add more V - V it

00:53:06,050 --> 00:53:09,710
doesn't add anything if you add more

00:53:07,970 --> 00:53:12,110
capital else it doesn't add anything

00:53:09,710 --> 00:53:15,800
more either so lol is of course the

00:53:12,110 --> 00:53:21,020
famous L o capital once so yes you can

00:53:15,800 --> 00:53:23,210
make a fun or funny area just command

00:53:21,020 --> 00:53:26,980
lines by adding more letters to it so

00:53:23,210 --> 00:53:28,220
yes it's it's a game where I know Frank

00:53:26,980 --> 00:53:31,880
okay

00:53:28,220 --> 00:53:34,400
then drew says that that slip curl is

00:53:31,880 --> 00:53:37,400
great thanks for the tip and then I have

00:53:34,400 --> 00:53:40,100
a personal question how do you approach

00:53:37,400 --> 00:53:40,700
UX of the command line to so many

00:53:40,100 --> 00:53:43,040
options

00:53:40,700 --> 00:53:45,020
does it grow organically do you

00:53:43,040 --> 00:53:46,970
sometimes break break backwards

00:53:45,020 --> 00:53:49,640
compatibility or how do you do that

00:53:46,970 --> 00:53:52,100
we don't break backwards compatibility

00:53:49,640 --> 00:53:53,570
which is one of our problems that I mean

00:53:52,100 --> 00:53:55,100
but that supposed to bless blessing and

00:53:53,570 --> 00:53:56,450
a curse right so it's a blessing for all

00:53:55,100 --> 00:53:58,670
the users that have something running

00:53:56,450 --> 00:54:00,410
since the 15 years so they don't have to

00:53:58,670 --> 00:54:02,630
upgrade their scripts it's a bit of a

00:54:00,410 --> 00:54:05,210
curse when we come up with or understand

00:54:02,630 --> 00:54:06,950
that maybe we did it really bad five

00:54:05,210 --> 00:54:08,150
years ago there wasn't such a good idea

00:54:06,950 --> 00:54:09,650
to do it that way

00:54:08,150 --> 00:54:12,080
now we have a much better idea how we

00:54:09,650 --> 00:54:13,970
wouldn't wanted it to be but we can't

00:54:12,080 --> 00:54:15,530
really remove the old stuff because

00:54:13,970 --> 00:54:19,490
that's the way it's been working for a

00:54:15,530 --> 00:54:21,320
while so it's so therefore the UX is not

00:54:19,490 --> 00:54:23,690
ideal it sort of it grows organically

00:54:21,320 --> 00:54:24,660
and it's grown in its two different ways

00:54:23,690 --> 00:54:28,319
and

00:54:24,660 --> 00:54:31,079
and styles so it's I think it hurts

00:54:28,319 --> 00:54:33,260
usability in one way but it done it was

00:54:31,079 --> 00:54:36,450
the benefits because it also it has the

00:54:33,260 --> 00:54:38,940
great benefit that every all the command

00:54:36,450 --> 00:54:40,980
lines that ever you worked before they

00:54:38,940 --> 00:54:44,789
still work so if you actually have you

00:54:40,980 --> 00:54:46,410
know if I wrote a mailing list post 12

00:54:44,789 --> 00:54:47,940
years ago explaining how something

00:54:46,410 --> 00:54:50,160
worked it still works that way so

00:54:47,940 --> 00:54:51,839
documentation is really easy to maintain

00:54:50,160 --> 00:54:53,549
as well right because it's the same

00:54:51,839 --> 00:54:55,079
thing and we can just add the

00:54:53,549 --> 00:54:56,940
documentation all the time and we

00:54:55,079 --> 00:54:58,829
basically don't every risk that we

00:54:56,940 --> 00:55:00,480
actually have to go back and find

00:54:58,829 --> 00:55:02,430
outdated documentation and make sure

00:55:00,480 --> 00:55:04,109
that we document the new way well we

00:55:02,430 --> 00:55:06,480
have a little bit of that anyway but it

00:55:04,109 --> 00:55:10,799
was sort of not so much at this so I

00:55:06,480 --> 00:55:13,470
think it's it's both good and bad okay

00:55:10,799 --> 00:55:16,140
looking great thanks a lot that was all

00:55:13,470 --> 00:55:20,390
the questions and thanks again for the

00:55:16,140 --> 00:55:26,670
great talk I at least learnt a lot so

00:55:20,390 --> 00:55:28,680
okay yeah thank you very much to to both

00:55:26,670 --> 00:55:31,069
Daniel and all our viewers and all our

00:55:28,680 --> 00:55:31,069
sponsors

00:55:31,410 --> 00:55:35,760
and with that I would like to thank our

00:55:33,809 --> 00:55:38,210
speakers our sponsors and all our

00:55:35,760 --> 00:55:38,210
viewers

00:55:44,030 --> 00:55:46,090

YouTube URL: https://www.youtube.com/watch?v=LzU3_00dSXc


