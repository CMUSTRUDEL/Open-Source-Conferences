Title: Getting started with your smart, connected, vehicle project - Dimitris Platis
Publication date: 2020-03-24
Playlist: foss-north 2020 virtual
Description: 
	Lightning talk from foss-north 2020


https://foss-north.se/2020/speakers-and-talks.html#lt-dplatis
Captions: 
	00:00:00,030 --> 00:00:06,000
welcome to force north the virtual

00:00:03,149 --> 00:00:08,130
edition we would like to thank all our

00:00:06,000 --> 00:00:12,330
sponsors and partners in this difficult

00:00:08,130 --> 00:00:15,830
situation our gold sponsors look soft

00:00:12,330 --> 00:00:20,000
and ansible by Red Hat

00:00:15,830 --> 00:00:22,220
our silver sponsors ITRs group and make

00:00:20,000 --> 00:00:25,900
it right

00:00:22,220 --> 00:00:28,960
our base sponsors

00:00:25,900 --> 00:00:31,119
our partner projects the open source

00:00:28,960 --> 00:00:34,239
community and the region of Gothenburg

00:00:31,119 --> 00:00:36,309
and a huge thanks to our awesome

00:00:34,239 --> 00:00:39,340
community this would not have been

00:00:36,309 --> 00:00:41,500
possible without you hello everybody my

00:00:39,340 --> 00:00:43,900
name is mitrice and I'm going to talk to

00:00:41,500 --> 00:00:46,660
you a bit about getting started with

00:00:43,900 --> 00:00:48,790
your smart connected vehicle project the

00:00:46,660 --> 00:00:53,140
twist is that I'm not talking about an

00:00:48,790 --> 00:00:54,190
actual proper vehicle but a mini project

00:00:53,140 --> 00:00:57,250
grade

00:00:54,190 --> 00:01:00,280
robot that I've been working with over

00:00:57,250 --> 00:01:03,070
the last years so very briefly about me

00:01:00,280 --> 00:01:06,220
I'm Dimitri's I grew up in rhodos Greece

00:01:03,070 --> 00:01:06,940
I work for adamant and Gothenburg

00:01:06,220 --> 00:01:09,130
University

00:01:06,940 --> 00:01:13,810
I like embedded systems software

00:01:09,130 --> 00:01:19,150
architecture API and I'm a lot into open

00:01:13,810 --> 00:01:21,820
source so pretty much every evening I am

00:01:19,150 --> 00:01:25,770
into different open-source projects and

00:01:21,820 --> 00:01:27,790
especially I really like ones that are

00:01:25,770 --> 00:01:31,120
involving both software and hardware

00:01:27,790 --> 00:01:33,220
even though I'm basically a software guy

00:01:31,120 --> 00:01:36,520
I do like to play around with hardware I

00:01:33,220 --> 00:01:40,210
see that's the necessary evil to do cool

00:01:36,520 --> 00:01:45,070
stuff if I may say so so I'm going to

00:01:40,210 --> 00:01:48,100
briefly talk about the smart car and we

00:01:45,070 --> 00:01:53,340
like to call it the versatile and easy

00:01:48,100 --> 00:01:58,979
to use platform for hope a great project

00:01:53,340 --> 00:02:02,260
so in a nutshell it's a platform it

00:01:58,979 --> 00:02:06,460
focuses on software so it has a pretty

00:02:02,260 --> 00:02:08,440
much Hardware agnostic library meaning

00:02:06,460 --> 00:02:14,379
that it can work on multiple boards and

00:02:08,440 --> 00:02:16,629
with multiple motor and car vehicle

00:02:14,379 --> 00:02:18,640
setup configuration and additionally it

00:02:16,629 --> 00:02:21,909
has built-in support for multiple

00:02:18,640 --> 00:02:23,500
sensors the latest iteration of the

00:02:21,909 --> 00:02:24,909
hardware because remember you can just

00:02:23,500 --> 00:02:28,860
take the software and run it wherever

00:02:24,909 --> 00:02:31,170
the latest iteration of the hardware has

00:02:28,860 --> 00:02:34,310
is based around an ESB 32

00:02:31,170 --> 00:02:38,130
microcontroller and this gives us access

00:02:34,310 --> 00:02:41,250
connectivity with Wi-Fi or Bluetooth and

00:02:38,130 --> 00:02:44,340
even for the more advanced users some

00:02:41,250 --> 00:02:48,690
real-time operating system functions it

00:02:44,340 --> 00:02:51,750
comes with a microscope wheel encoders

00:02:48,690 --> 00:02:54,060
that are able to measure how much the

00:02:51,750 --> 00:02:57,690
car has moved and also towards which

00:02:54,060 --> 00:03:03,000
direction it has some sockets for for

00:02:57,690 --> 00:03:05,340
micro lidar sensors 5 volt tolerant pins

00:03:03,000 --> 00:03:08,850
which is very important for hobby

00:03:05,340 --> 00:03:12,300
projects since too many low-grade chip

00:03:08,850 --> 00:03:15,570
sensors still work on 5 volts it takes

00:03:12,300 --> 00:03:21,240
AAA batteries and it is fully open

00:03:15,570 --> 00:03:24,600
source software and hardware I can find

00:03:21,240 --> 00:03:28,170
so the I hope this shows up well its

00:03:24,600 --> 00:03:32,150
many video so this project has been used

00:03:28,170 --> 00:03:34,920
in in order to teach students about

00:03:32,150 --> 00:03:38,310
system development in Gothenburg

00:03:34,920 --> 00:03:43,500
University for the last I think four or

00:03:38,310 --> 00:03:45,690
five years so students get one of these

00:03:43,500 --> 00:03:48,000
cars in the videos you can see some

00:03:45,690 --> 00:03:49,530
older versions of the car but we're

00:03:48,000 --> 00:03:53,730
using Arduino mega

00:03:49,530 --> 00:03:56,130
so a much simpler approach and the idea

00:03:53,730 --> 00:03:58,500
is that they get a car and their tasks

00:03:56,130 --> 00:04:01,080
in the compulsory university course is

00:03:58,500 --> 00:04:03,240
to create a system around it and during

00:04:01,080 --> 00:04:05,130
the course they learned that there are

00:04:03,240 --> 00:04:08,130
challenges when working with

00:04:05,130 --> 00:04:10,890
cyber-physical system and it's not only

00:04:08,130 --> 00:04:12,630
about the code it's about integrating

00:04:10,890 --> 00:04:16,080
the code that runs from different

00:04:12,630 --> 00:04:18,930
physical components making sure that

00:04:16,080 --> 00:04:21,330
quality is being assured continuously

00:04:18,930 --> 00:04:24,390
things are being tested automatically

00:04:21,330 --> 00:04:26,850
and so on so you should definitely check

00:04:24,390 --> 00:04:29,670
those their project out they've been

00:04:26,850 --> 00:04:35,070
doing for the last I said four or five

00:04:29,670 --> 00:04:37,200
years and perhaps I don't like if it's

00:04:35,070 --> 00:04:42,030
possible I would like to see if I can

00:04:37,200 --> 00:04:45,610
serve my Visual Studio code

00:04:42,030 --> 00:04:49,090
it's not real it doesn't like it but I

00:04:45,610 --> 00:04:50,259
can probably sell my desktop and I hope

00:04:49,090 --> 00:04:53,830
you can still see it

00:04:50,259 --> 00:04:56,650
if not if you cannot see videos to your

00:04:53,830 --> 00:04:58,570
code please let me know um so I'm going

00:04:56,650 --> 00:05:01,870
to show you how to write get started

00:04:58,570 --> 00:05:05,919
with a very simple and common on the

00:05:01,870 --> 00:05:09,280
other hand setup so this is by the way

00:05:05,919 --> 00:05:13,660
very bare minimum Arduino sketch and I

00:05:09,280 --> 00:05:15,820
will quickly just mention setup is the

00:05:13,660 --> 00:05:18,160
function that get run once on every boot

00:05:15,820 --> 00:05:19,840
of the microcontroller and loop is a

00:05:18,160 --> 00:05:21,759
function that basically it's like a wild

00:05:19,840 --> 00:05:23,949
true statement everything that is in it

00:05:21,759 --> 00:05:27,190
runs after the setup and then runs

00:05:23,949 --> 00:05:30,729
continuously so you could get started

00:05:27,190 --> 00:05:34,599
very easily you could include the smart

00:05:30,729 --> 00:05:37,419
girl library and then we would naturally

00:05:34,599 --> 00:05:39,099
start by assembling the current code so

00:05:37,419 --> 00:05:41,349
the whole library is very object

00:05:39,099 --> 00:05:48,340
oriented let's say we have to blast

00:05:41,349 --> 00:05:52,210
motors and I will call it left motor and

00:05:48,340 --> 00:05:54,659
then you specify the GPIO pins that the

00:05:52,210 --> 00:05:58,240
motor is connected on let's say for the

00:05:54,659 --> 00:06:00,760
for this presentation that it's

00:05:58,240 --> 00:06:03,460
connected the two pins that determine

00:06:00,760 --> 00:06:07,830
the direction they are 12 and 13 and pin

00:06:03,460 --> 00:06:13,229
14 specifies the speed so it's a PWM

00:06:07,830 --> 00:06:18,990
signal let's create the second motor I

00:06:13,229 --> 00:06:22,599
will put it on 15 16 and 17

00:06:18,990 --> 00:06:24,880
so now there is support for other kinds

00:06:22,599 --> 00:06:29,020
of motors that like motors control V and

00:06:24,880 --> 00:06:30,880
ESC or a servo motor for steering so the

00:06:29,020 --> 00:06:33,070
idea is that you can control your car in

00:06:30,880 --> 00:06:36,340
two different ways you can control it

00:06:33,070 --> 00:06:38,050
like a tank which is the default case

00:06:36,340 --> 00:06:41,530
with a platform that will supply the

00:06:38,050 --> 00:06:42,849
students but you could maybe have at the

00:06:41,530 --> 00:06:46,240
very different kind of has an actual

00:06:42,849 --> 00:06:48,159
steering wheel and so these things we

00:06:46,240 --> 00:06:51,599
call differential control and acraman

00:06:48,159 --> 00:06:55,180
control and regardless of your setup you

00:06:51,599 --> 00:06:58,960
could use these motors since you know

00:06:55,180 --> 00:07:02,320
inherit the classes are following pretty

00:06:58,960 --> 00:07:07,630
good interfaces but in our case let's

00:07:02,320 --> 00:07:13,870
control it like a tank and and alright

00:07:07,630 --> 00:07:15,669
motor so after we have established the

00:07:13,870 --> 00:07:20,280
way we control a car let's add some

00:07:15,669 --> 00:07:23,139
sensors we are gonna use this gy 50

00:07:20,280 --> 00:07:25,360
gyroscope and we're gonna specify an

00:07:23,139 --> 00:07:27,759
offset for it which is the value that it

00:07:25,360 --> 00:07:32,860
gives you when it's being completely

00:07:27,759 --> 00:07:36,820
still and let's add some gyroscopes

00:07:32,860 --> 00:07:38,800
which we call odometers left the domitor

00:07:36,820 --> 00:07:41,620
where you specify the pin let's say it's

00:07:38,800 --> 00:07:44,229
pinging number into number one then we

00:07:41,620 --> 00:07:46,539
specify a lambda which is the interrupt

00:07:44,229 --> 00:07:56,190
service routine and that will be invoked

00:07:46,539 --> 00:07:56,190
once a pulse comes and we want to sorry

00:07:57,780 --> 00:08:07,300
sorry I have a very small screen so you

00:08:02,139 --> 00:08:15,340
can see I might have done a spelling

00:08:07,300 --> 00:08:22,000
mistake somewhere but so yes yes let's

00:08:15,340 --> 00:08:28,180
see how this goes so after you have set

00:08:22,000 --> 00:08:32,740
up everything and you probably also need

00:08:28,180 --> 00:08:34,330
to specify some where the pulses per

00:08:32,740 --> 00:08:37,360
meter but I'll leave that later you

00:08:34,330 --> 00:08:41,909
eventually create your car out of

00:08:37,360 --> 00:08:50,670
everything your way of controlling the

00:08:41,909 --> 00:08:54,970
gyroscope and to odometers that you have

00:08:50,670 --> 00:08:56,980
one more semicolon yeah I know I have

00:08:54,970 --> 00:09:00,430
done another problem so let's ignore

00:08:56,980 --> 00:09:02,470
those for now yeah okay so I'm not gonna

00:09:00,430 --> 00:09:05,440
run these so just

00:09:02,470 --> 00:09:08,440
so if you basically then to control it

00:09:05,440 --> 00:09:11,860
you can use the said speed and you may

00:09:08,440 --> 00:09:15,759
want it to 50% of the speed motor

00:09:11,860 --> 00:09:20,470
running forward and you may want it to

00:09:15,759 --> 00:09:23,110
start turning a 20 degree angle so

00:09:20,470 --> 00:09:25,089
depending on your setup if you have an

00:09:23,110 --> 00:09:27,699
actual depending of your way of

00:09:25,089 --> 00:09:32,220
controlling the car actually this will

00:09:27,699 --> 00:09:35,319
try to simulate a 20 degree angle

00:09:32,220 --> 00:09:38,079
movement or if you would have way an

00:09:35,319 --> 00:09:39,730
acumen control meaning with an actual

00:09:38,079 --> 00:09:46,569
steering wheel it would actually turn

00:09:39,730 --> 00:09:59,649
your several motor at 20 degrees let me

00:09:46,569 --> 00:10:03,250
try to again my so yeah I believe I am

00:09:59,649 --> 00:10:06,579
good in time so overall you can find

00:10:03,250 --> 00:10:10,060
everything hardware software so if you

00:10:06,579 --> 00:10:11,949
see the new platform is made up of two

00:10:10,060 --> 00:10:12,910
PCBs that are stacked on top of each

00:10:11,949 --> 00:10:15,130
other

00:10:12,910 --> 00:10:18,310
where you can basically solder

00:10:15,130 --> 00:10:21,790
everything and put everything all snugly

00:10:18,310 --> 00:10:25,230
on it so things don't fall apart you can

00:10:21,790 --> 00:10:28,209
find this is a quick link to the repo

00:10:25,230 --> 00:10:31,389
everything is published with an MIT

00:10:28,209 --> 00:10:34,949
license and if we have time I'm willing

00:10:31,389 --> 00:10:34,949
to take any questions thank you so much

00:10:35,910 --> 00:10:41,410
okay first of all this is henrik by the

00:10:38,319 --> 00:10:45,339
way brave always nice to see someone

00:10:41,410 --> 00:10:50,800
live hacking hmm that's much too much

00:10:45,339 --> 00:10:54,639
there were some syntax error so yeah big

00:10:50,800 --> 00:10:57,279
I'm wondering I saw that you are using I

00:10:54,639 --> 00:11:00,819
know because I myself so have it this is

00:10:57,279 --> 00:11:04,389
an ego trip from my side and what do you

00:11:00,819 --> 00:11:06,790
think about the Arduino IDE and as

00:11:04,389 --> 00:11:12,189
compared to a more like command line

00:11:06,790 --> 00:11:14,220
version that you're using now I am still

00:11:12,189 --> 00:11:16,560
using the Arduino IDE to

00:11:14,220 --> 00:11:19,230
you are in flux the microcontroller I

00:11:16,560 --> 00:11:22,890
know there may be some more advanced

00:11:19,230 --> 00:11:26,730
solution like platform IO but I'm

00:11:22,890 --> 00:11:29,120
typically using the ID to push to

00:11:26,730 --> 00:11:30,560
finally like push the code okay

00:11:29,120 --> 00:11:34,140
interesting

00:11:30,560 --> 00:11:37,010
I'll send you a link to my product yes

00:11:34,140 --> 00:11:37,010

YouTube URL: https://www.youtube.com/watch?v=f6RSPFDie2o


