Title: Component-based Design System and Development - David Halasz & Tereza Novotna
Publication date: 2019-04-18
Playlist: foss-north 2019
Description: 
	How do you bring order to this chaotic web frontend climate fueled by the ever-changing technologies driving it? We - a UX Designer and a Software Engineer - will introduce you to the concept of WebComponents, and how we can achieve order through evolving from Bootstrap to CSS grid based design system.
Target Audience: designers and engineers. our talk introduces the importance of collaboration and bringing designers and engineers together.
The Red Hat portfolio includes about 50 different products. There was a need for a design system as different patterns were build over and over again which led to inconsistency. The UXD goal is to bring consistent user experience to the entire Red Hat portfolio. This talk explains why it is important to have a unified look and feel. Patternfly is an open-source design system that helps our designers and engineers build user friendly products. As the frontend technologies are constantly evolving, this design system has to evolve with them. We would like to talk about the history and evolution of PatternFly - how it was created and how it tries to handle the continuous evolution of the frontend landscape. Perspectives from both design and engineering will be included.

---

Tereza is an Interaction Designer and Software Engineer @Red Hat

https://foss-north.se/2019/speakers-and-talks.html#tnovotna
Captions: 
	00:00:15,599 --> 00:00:21,150
all right I hope you all had a good

00:00:18,180 --> 00:00:24,119
lunch and would like to welcome you to

00:00:21,150 --> 00:00:32,400
our next talk component based design

00:00:24,119 --> 00:00:36,420
system and development so let me

00:00:32,400 --> 00:00:39,210
introduce David David is a software

00:00:36,420 --> 00:00:41,610
engineer at Red Hat Alberta based in

00:00:39,210 --> 00:00:44,790
Freneau the Czech Republic and he works

00:00:41,610 --> 00:00:46,830
on metahumans lien ruby he used to be

00:00:44,790 --> 00:00:50,700
maintainer of pen and fly which is our

00:00:46,830 --> 00:00:53,550
design system yesterday I think he got

00:00:50,700 --> 00:01:03,750
back from Minsk Belarus where he was

00:00:53,550 --> 00:01:06,240
speaking at become he loves JavaScript

00:01:03,750 --> 00:01:12,479
but he is really good at playing guitar

00:01:06,240 --> 00:01:13,250
and so he was serozha in life there we

00:01:12,479 --> 00:01:15,929
have a picture

00:01:13,250 --> 00:01:19,020
she's an interactional interaction

00:01:15,929 --> 00:01:21,150
designer and 4/10 and she oversees the

00:01:19,020 --> 00:01:23,460
design of the things I'm working on from

00:01:21,150 --> 00:01:26,189
engineering site so managed enqueue and

00:01:23,460 --> 00:01:27,630
also other projects like Foreman or

00:01:26,189 --> 00:01:30,530
insights

00:01:27,630 --> 00:01:32,880
she lives seven years in North Carolina

00:01:30,530 --> 00:01:35,549
she got there with an athletic

00:01:32,880 --> 00:01:39,600
scholarship as a runner she even has a

00:01:35,549 --> 00:01:42,420
Wikipedia page check her out she loves

00:01:39,600 --> 00:01:45,689
working with us engineers and she's

00:01:42,420 --> 00:01:51,540
trying to bring the human perspective to

00:01:45,689 --> 00:01:56,869
the technology we do so we both work at

00:01:51,540 --> 00:01:56,869
Red Hat which is all about open source

00:01:57,229 --> 00:02:04,680
based in Brno I've mentioned that from

00:01:59,820 --> 00:02:07,380
the Czech Republic and yeah this is our

00:02:04,680 --> 00:02:10,459
largest engineering facility in Europe

00:02:07,380 --> 00:02:15,120
and as you know Red Hat had a lot of

00:02:10,459 --> 00:02:17,340
products over 40 different ones some of

00:02:15,120 --> 00:02:19,440
them have user interfaces some of them

00:02:17,340 --> 00:02:21,269
not we are not going to talk about it

00:02:19,440 --> 00:02:23,970
was which don't have user interfaces

00:02:21,269 --> 00:02:25,739
because I think you know why and when

00:02:23,970 --> 00:02:27,209
you have four different products as a

00:02:25,739 --> 00:02:28,380
challenge because they all look

00:02:27,209 --> 00:02:31,710
different

00:02:28,380 --> 00:02:33,780
they come from different parts of the

00:02:31,710 --> 00:02:36,600
world they were different but developed

00:02:33,780 --> 00:02:40,440
by different people how do we make them

00:02:36,600 --> 00:02:42,810
look similar when they belong to what

00:02:40,440 --> 00:02:48,060
you're looking at is a few screenshots

00:02:42,810 --> 00:02:51,360
of when we were starting several

00:02:48,060 --> 00:02:53,610
products they don't look similar and

00:02:51,360 --> 00:02:55,710
probably the only similar thing it could

00:02:53,610 --> 00:02:58,440
be the Red Hat logo not even the buttons

00:02:55,710 --> 00:03:02,310
are the same and it was a challenge not

00:02:58,440 --> 00:03:06,330
only from the consistency but it was

00:03:02,310 --> 00:03:08,610
hard to use when people purchase Red Hat

00:03:06,330 --> 00:03:09,900
products or use Red Hat products they

00:03:08,610 --> 00:03:14,520
were used a certain kind of the behavior

00:03:09,900 --> 00:03:19,950
and this was confusing this all started

00:03:14,520 --> 00:03:22,200
back in history 2013 when the uxd team

00:03:19,950 --> 00:03:28,550
uxd stands for user experience design

00:03:22,200 --> 00:03:32,250
had only 5 people and their goal was to

00:03:28,550 --> 00:03:35,550
make the look and feel of Red Hat

00:03:32,250 --> 00:03:42,210
products more consistent to create a

00:03:35,550 --> 00:03:45,450
system that could help all the overall

00:03:42,210 --> 00:03:47,610
user experience was a chaos open-source

00:03:45,450 --> 00:03:50,370
projects were known for it's not the

00:03:47,610 --> 00:03:55,580
greatest user experience and that

00:03:50,370 --> 00:03:55,580
interfaces felt disconnected as a whole

00:03:55,760 --> 00:04:01,830
so the team started working on a

00:03:58,380 --> 00:04:04,560
solution the solution that can be shared

00:04:01,830 --> 00:04:08,070
with designers and engineers in an

00:04:04,560 --> 00:04:09,510
open-source way some developers

00:04:08,070 --> 00:04:13,560
front-end developers they didn't want to

00:04:09,510 --> 00:04:17,040
think about front-end but when we had

00:04:13,560 --> 00:04:19,680
some guidelines they could find a way

00:04:17,040 --> 00:04:23,630
how to make it more user friendly days

00:04:19,680 --> 00:04:27,260
it was helpful for them so they cared

00:04:23,630 --> 00:04:30,570
there was a need for a design system

00:04:27,260 --> 00:04:35,580
different products will were build over

00:04:30,570 --> 00:04:38,310
and over again the patterns were not

00:04:35,580 --> 00:04:42,110
consistent and it took a lot for

00:04:38,310 --> 00:04:42,110
designers and engineers to agree

00:04:42,300 --> 00:04:48,000
so here's an example you're looking at a

00:04:45,060 --> 00:04:50,850
modal a basic Moodle you have buttons

00:04:48,000 --> 00:04:52,140
and button there on the left are a

00:04:50,850 --> 00:04:55,980
supposed to be on the left or is

00:04:52,140 --> 00:04:57,810
supposed to be on the right but do we

00:04:55,980 --> 00:05:02,340
need some guidelines or should we even

00:04:57,810 --> 00:05:04,800
flip them and things like that people

00:05:02,340 --> 00:05:07,260
argue don't argued what's right what's

00:05:04,800 --> 00:05:10,410
not then it was misleading when in some

00:05:07,260 --> 00:05:13,200
products it was different locations and

00:05:10,410 --> 00:05:18,200
back and forth so we needed some

00:05:13,200 --> 00:05:18,200
guidelines to unify our design system

00:05:18,560 --> 00:05:26,480
why do we need an entire system for this

00:05:23,480 --> 00:05:31,620
we wanted to improve consistency

00:05:26,480 --> 00:05:34,920
increase usability reduce time cost to

00:05:31,620 --> 00:05:40,320
market but also share the best practices

00:05:34,920 --> 00:05:45,110
with the community what is the design

00:05:40,320 --> 00:05:52,560
system do we know what design system is

00:05:45,110 --> 00:05:55,650
few people so design system is a these

00:05:52,560 --> 00:05:58,530
are guidelines rules constraints and

00:05:55,650 --> 00:06:05,340
principles implemented in design and

00:05:58,530 --> 00:06:07,800
code some of you many of you have seen

00:06:05,340 --> 00:06:12,450
or heard or used material design by

00:06:07,800 --> 00:06:14,700
Google sales Walsh so sales force has

00:06:12,450 --> 00:06:19,460
its own lightining design system as well

00:06:14,700 --> 00:06:22,710
and both companies Google and Salesforce

00:06:19,460 --> 00:06:27,000
have a pretty wide variety of portfolio

00:06:22,710 --> 00:06:30,240
and it's nearly impossible to maintain

00:06:27,000 --> 00:06:32,370
consistency without a system so design

00:06:30,240 --> 00:06:37,500
system acts as a connective tissue that

00:06:32,370 --> 00:06:40,530
brings to portfolio together so I'm also

00:06:37,500 --> 00:06:42,420
here not just smiling I would like to

00:06:40,530 --> 00:06:45,150
talk about after the competition

00:06:42,420 --> 00:06:49,260
analysis about our design system we call

00:06:45,150 --> 00:06:51,810
it pattern fly similar to other edhead

00:06:49,260 --> 00:06:54,810
projects it has a community around

00:06:51,810 --> 00:06:55,260
itself but unlike others it focuses more

00:06:54,810 --> 00:06:59,130
on

00:06:55,260 --> 00:07:01,320
designers under the hood it's a custom

00:06:59,130 --> 00:07:05,160
mousse rep it was a custom with SERPs

00:07:01,320 --> 00:07:07,290
tiling with some jQuery components like

00:07:05,160 --> 00:07:09,630
date picker Stein picker tree view and

00:07:07,290 --> 00:07:12,000
all the stuff that bootstrap doesn't

00:07:09,630 --> 00:07:14,340
provide it was a little more enterprise

00:07:12,000 --> 00:07:16,040
looking but the problem is with this is

00:07:14,340 --> 00:07:23,310
a lot of external javascript

00:07:16,040 --> 00:07:26,640
dependencies so the first success when

00:07:23,310 --> 00:07:30,930
we're starting about 2013 came at Red

00:07:26,640 --> 00:07:33,900
Hat summit we're looking at the old

00:07:30,930 --> 00:07:35,460
screens when we applied our pattern fly

00:07:33,900 --> 00:07:40,560
design systems to all of them it

00:07:35,460 --> 00:07:45,810
improved you can see there is a general

00:07:40,560 --> 00:07:48,480
layout their colors we could tell even

00:07:45,810 --> 00:07:52,470
from this these few screenshots these

00:07:48,480 --> 00:08:00,930
products belong to one family so the

00:07:52,470 --> 00:08:02,640
team succeeded yeah but then in the

00:08:00,930 --> 00:08:05,610
fronton world there was a drastic change

00:08:02,640 --> 00:08:08,070
in the JavaScript world a lot of dry

00:08:05,610 --> 00:08:10,380
berries appeared that and still appear

00:08:08,070 --> 00:08:13,560
in every month and they changed the way

00:08:10,380 --> 00:08:15,870
how we think about front and the all the

00:08:13,560 --> 00:08:19,080
fundamentals of front-end development

00:08:15,870 --> 00:08:20,660
and speaking about angular react and all

00:08:19,080 --> 00:08:23,850
the others you probably know them

00:08:20,660 --> 00:08:27,270
problem what was that our engineer

00:08:23,850 --> 00:08:28,800
started loving and using them and we

00:08:27,270 --> 00:08:31,980
didn't have support for it because we're

00:08:28,800 --> 00:08:34,530
running old jQuery things so our

00:08:31,980 --> 00:08:36,060
designers our engineers just ignored

00:08:34,530 --> 00:08:38,430
pattern fly and started implementing

00:08:36,060 --> 00:08:41,550
their own components in angular react or

00:08:38,430 --> 00:08:45,140
any other of cool framework so basically

00:08:41,550 --> 00:08:47,460
this happened and this led to

00:08:45,140 --> 00:08:48,990
inconsistencies because everyone

00:08:47,460 --> 00:08:54,030
implemented their components in their

00:08:48,990 --> 00:08:56,370
own framework it costs fragmentation

00:08:54,030 --> 00:08:59,850
across the products again so as a

00:08:56,370 --> 00:09:01,590
band-aid solution we started to

00:08:59,850 --> 00:09:05,480
implement pattern fly widgets in these

00:09:01,590 --> 00:09:07,950
libraries like angular react angular 2

00:09:05,480 --> 00:09:09,180
so we started to implement the same

00:09:07,950 --> 00:09:10,920
components

00:09:09,180 --> 00:09:12,900
the problem with this if you look at

00:09:10,920 --> 00:09:14,370
this those community graph of those

00:09:12,900 --> 00:09:16,020
ripples you can see that some of them

00:09:14,370 --> 00:09:17,550
are more developed than the others which

00:09:16,020 --> 00:09:20,280
means that some of those libraries

00:09:17,550 --> 00:09:22,890
contain more components and you could

00:09:20,280 --> 00:09:24,750
end up with a setup where you need more

00:09:22,890 --> 00:09:28,230
than one library just to have the right

00:09:24,750 --> 00:09:30,540
set of components for your product so we

00:09:28,230 --> 00:09:33,930
learned what that we need a universal

00:09:30,540 --> 00:09:39,210
solution which is a little megalomaniac

00:09:33,930 --> 00:09:41,220
right so as you can see here usually

00:09:39,210 --> 00:09:44,550
finding a universal solution that helps

00:09:41,220 --> 00:09:46,830
everyone in the world is not possible

00:09:44,550 --> 00:09:50,600
we just wanted something suboptimal that

00:09:46,830 --> 00:09:54,300
would help our things so we came up with

00:09:50,600 --> 00:09:55,860
components components and components we

00:09:54,300 --> 00:09:58,380
realize that we cannot swim against the

00:09:55,860 --> 00:10:00,270
current but by splitting the pattern fly

00:09:58,380 --> 00:10:04,380
into smaller pieces it can be easier to

00:10:00,270 --> 00:10:07,680
react pun intended to changes so our

00:10:04,380 --> 00:10:09,870
plan was this we wanted to remove all

00:10:07,680 --> 00:10:11,850
JavaScript from the quarry pooh-bah have

00:10:09,870 --> 00:10:12,620
just a pure CSS library with all the

00:10:11,850 --> 00:10:15,750
look and feel

00:10:12,620 --> 00:10:17,880
split up pattern fly into atomic very

00:10:15,750 --> 00:10:21,570
small components that behave like a mini

00:10:17,880 --> 00:10:24,270
repository so that our people can just

00:10:21,570 --> 00:10:27,810
include the libraries they want and they

00:10:24,270 --> 00:10:30,780
need to use we chose one framework to

00:10:27,810 --> 00:10:33,090
implement all of it and we made a layer

00:10:30,780 --> 00:10:35,610
that allows it to coexist with the old

00:10:33,090 --> 00:10:37,560
technologies so you can include angular

00:10:35,610 --> 00:10:40,770
stuff into a react component and vice

00:10:37,560 --> 00:10:43,530
versa for easier transition and about

00:10:40,770 --> 00:10:44,400
bootstrap after the custom styling we no

00:10:43,530 --> 00:10:47,340
longer need it

00:10:44,400 --> 00:10:49,470
all so it's not very enterprise looking

00:10:47,340 --> 00:10:52,920
and we didn't want it to have the jQuery

00:10:49,470 --> 00:10:55,230
dependency at all and the dependency on

00:10:52,920 --> 00:10:59,760
third-party libraries so basically this

00:10:55,230 --> 00:11:04,980
happened we made our own bootstrap and

00:10:59,760 --> 00:11:07,320
woohoo so meet pattern fly next that's

00:11:04,980 --> 00:11:09,060
the fourth version of pattern fly it has

00:11:07,320 --> 00:11:11,120
all the things I described without

00:11:09,060 --> 00:11:14,640
bootstrap without jQuery it has isolated

00:11:11,120 --> 00:11:16,440
components it's open source you can

00:11:14,640 --> 00:11:19,560
check it out you can try it in the beta

00:11:16,440 --> 00:11:20,520
version and the development model now

00:11:19,560 --> 00:11:22,930
looks like this

00:11:20,520 --> 00:11:25,750
so there is a thin layer of

00:11:22,930 --> 00:11:29,050
CSS styling great and great system which

00:11:25,750 --> 00:11:31,060
is developed fully by the UX team there

00:11:29,050 --> 00:11:33,820
are some atomic components like buttons

00:11:31,060 --> 00:11:35,620
and dropdowns and all those little

00:11:33,820 --> 00:11:37,690
pieces that you can Lego together to

00:11:35,620 --> 00:11:40,320
build something bigger also developed by

00:11:37,690 --> 00:11:44,070
you XD because they are so shared across

00:11:40,320 --> 00:11:46,600
products then the UX D team and

00:11:44,070 --> 00:11:49,089
engineering is working together to make

00:11:46,600 --> 00:11:52,600
more complicated components by putting

00:11:49,089 --> 00:11:54,430
together those atomic components and the

00:11:52,600 --> 00:11:57,000
engineering is using those components on

00:11:54,430 --> 00:12:03,100
the higher level in their own products

00:11:57,000 --> 00:12:08,380
so this is how we collaborate it's fun

00:12:03,100 --> 00:12:14,500
to work with each other I'm going to

00:12:08,380 --> 00:12:16,750
talk mention more about pattern fly our

00:12:14,500 --> 00:12:19,930
goal is to apply pattern fly to all of

00:12:16,750 --> 00:12:23,680
our products and it means understanding

00:12:19,930 --> 00:12:28,510
in a pattern fly patterns but also how

00:12:23,680 --> 00:12:30,640
they should be applied consistency is

00:12:28,510 --> 00:12:33,430
important consistency is one of the most

00:12:30,640 --> 00:12:35,650
powerful usability principles when

00:12:33,430 --> 00:12:40,230
things always behave the same user don't

00:12:35,650 --> 00:12:44,650
have to worry about what will happen and

00:12:40,230 --> 00:12:47,110
if we are using the components over and

00:12:44,650 --> 00:12:49,150
over again we can eliminate the

00:12:47,110 --> 00:12:53,170
confusion and make it easier for the

00:12:49,150 --> 00:12:57,240
user so we can end up having a

00:12:53,170 --> 00:13:03,209
consistent behavior and patterns and

00:12:57,240 --> 00:13:03,209
build the application more quick quicker

00:13:05,520 --> 00:13:15,240
so what we are looking at is a basic

00:13:10,209 --> 00:13:18,610
component this component is reusable

00:13:15,240 --> 00:13:21,310
when we have many of them we have a lot

00:13:18,610 --> 00:13:25,630
of components that can be assembled

00:13:21,310 --> 00:13:28,300
together and we can build with them go

00:13:25,630 --> 00:13:29,680
back we're still building with the

00:13:28,300 --> 00:13:32,020
components

00:13:29,680 --> 00:13:35,050
one component doesn't build a product

00:13:32,020 --> 00:13:35,920
but when we have many of them and we

00:13:35,050 --> 00:13:40,510
take care of them

00:13:35,920 --> 00:13:42,250
we can build a castle and we can even

00:13:40,510 --> 00:13:46,240
build more castles with the same

00:13:42,250 --> 00:13:47,950
component and the users or the people

00:13:46,240 --> 00:13:50,590
who live in the caster who use the

00:13:47,950 --> 00:13:52,330
castle are going to know that we can

00:13:50,590 --> 00:13:54,340
have four of them they will know that

00:13:52,330 --> 00:13:57,670
there is a behavior where we kind of

00:13:54,340 --> 00:13:58,690
kitchen but also that we can find a

00:13:57,670 --> 00:14:01,090
horse

00:13:58,690 --> 00:14:04,870
table and it's going to be the same way

00:14:01,090 --> 00:14:09,310
the same behavior and that's what

00:14:04,870 --> 00:14:13,120
consistency means for the user so you

00:14:09,310 --> 00:14:16,540
XDS started our team started with five

00:14:13,120 --> 00:14:21,490
brave people in 2013 there was a need

00:14:16,540 --> 00:14:23,800
for more people to work on our product

00:14:21,490 --> 00:14:27,220
and we grew exponentially it right now

00:14:23,800 --> 00:14:29,980
it's about hundred of us and we are

00:14:27,220 --> 00:14:34,110
working together with engineering teams

00:14:29,980 --> 00:14:40,090
to create and build successful products

00:14:34,110 --> 00:14:44,830
and it's fun to work with each other we

00:14:40,090 --> 00:14:47,040
enjoy bringing ideas to life and we

00:14:44,830 --> 00:14:51,430
embrace the collaboration between

00:14:47,040 --> 00:14:54,040
designers and engineers there can be a

00:14:51,430 --> 00:14:56,320
designer who designs the greatest thing

00:14:54,040 --> 00:14:58,330
in the universe but if it's not

00:14:56,320 --> 00:14:59,730
consulting with an engineer in terms of

00:14:58,330 --> 00:15:03,430
technical limitations

00:14:59,730 --> 00:15:05,380
we're not moving fast and we're always

00:15:03,430 --> 00:15:10,030
looking for a balance but it's about

00:15:05,380 --> 00:15:12,930
teamwork it's about collaboration sum it

00:15:10,030 --> 00:15:15,880
up it's about continuous involvement

00:15:12,930 --> 00:15:18,010
evolvement about communication between

00:15:15,880 --> 00:15:19,990
designers and engineers and adjusting

00:15:18,010 --> 00:15:22,240
the right solution this thing we

00:15:19,990 --> 00:15:24,430
presented to you is not a final product

00:15:22,240 --> 00:15:27,010
it's an continuously evolving strategy

00:15:24,430 --> 00:15:30,630
where we can react a game pun intended

00:15:27,010 --> 00:15:33,170
to the changes in the front-end world

00:15:30,630 --> 00:15:39,350
taxonomic

00:15:33,170 --> 00:15:44,040
[Applause]

00:15:39,350 --> 00:15:48,720
so any questions in the audience if you

00:15:44,040 --> 00:15:49,800
don't have questions we do you already

00:15:48,720 --> 00:15:55,350
have microphones

00:15:49,800 --> 00:16:01,430
I see three kinds of questions let's

00:15:55,350 --> 00:16:04,680
start here so is this only about

00:16:01,430 --> 00:16:08,670
web-based components or does it also

00:16:04,680 --> 00:16:11,460
apply for the desktop or desktop based

00:16:08,670 --> 00:16:12,770
applications or even mobile applications

00:16:11,460 --> 00:16:15,300
well

00:16:12,770 --> 00:16:17,100
components now with react native and I

00:16:15,300 --> 00:16:19,050
know angular has something similar and

00:16:17,100 --> 00:16:22,050
electron and all the things from the web

00:16:19,050 --> 00:16:24,480
actually appearing in the desktop and

00:16:22,050 --> 00:16:27,150
the mobile applications I think this can

00:16:24,480 --> 00:16:31,710
be universal but in pattern fly we

00:16:27,150 --> 00:16:32,910
support only web based interfaces yes so

00:16:31,710 --> 00:16:37,050
where were the other two questions

00:16:32,910 --> 00:16:39,570
here's one you mentioned that the design

00:16:37,050 --> 00:16:42,780
system is open source and community

00:16:39,570 --> 00:16:47,580
based so how is it for let's say a

00:16:42,780 --> 00:16:49,980
company to adopt the design system and

00:16:47,580 --> 00:16:53,040
you said for home so we have a pool of

00:16:49,980 --> 00:16:54,480
variables that are customizable if you

00:16:53,040 --> 00:16:57,090
mean this part that how you have you

00:16:54,480 --> 00:16:59,670
will tailor it for for a company yeah so

00:16:57,090 --> 00:17:02,370
we have we have one version is what what

00:16:59,670 --> 00:17:06,360
is for the community part and we have a

00:17:02,370 --> 00:17:09,180
set of CSS or SAS libraries for our own

00:17:06,360 --> 00:17:15,060
things with our own assets and that's

00:17:09,180 --> 00:17:16,890
how we compile it separately right you

00:17:15,060 --> 00:17:20,310
can write your own and use it with

00:17:16,890 --> 00:17:22,470
pattern flight no problem yeah so she's

00:17:20,310 --> 00:17:24,270
curious like the applications that you

00:17:22,470 --> 00:17:26,970
have they're based on bootstrap and kind

00:17:24,270 --> 00:17:29,370
of the older versions how are you moving

00:17:26,970 --> 00:17:31,530
them into using this new system like are

00:17:29,370 --> 00:17:33,030
you actually changing those thing to

00:17:31,530 --> 00:17:35,070
react or do you have some way of

00:17:33,030 --> 00:17:38,340
applying that like do you have some kind

00:17:35,070 --> 00:17:42,030
of you know using the CSS with bootstrap

00:17:38,340 --> 00:17:44,640
based projects or yes so we are trying

00:17:42,030 --> 00:17:47,190
to get rid of bootstrap so all the

00:17:44,640 --> 00:17:48,690
pieces are like puzzles so you can take

00:17:47,190 --> 00:17:49,980
out the piece of the puzzle and put the

00:17:48,690 --> 00:17:52,890
new component

00:17:49,980 --> 00:17:55,200
the new place we try to make it so

00:17:52,890 --> 00:17:57,240
compatible that it would work so we're

00:17:55,200 --> 00:17:59,429
building the CSS variables and then

00:17:57,240 --> 00:18:02,340
building moving that into the actual

00:17:59,429 --> 00:18:04,260
react components and you can load the

00:18:02,340 --> 00:18:05,970
old library and the new library into the

00:18:04,260 --> 00:18:08,250
same codebase at the same time they are

00:18:05,970 --> 00:18:12,110
compatible but in this sense tail has

00:18:08,250 --> 00:18:18,030
the same look and feel yep

00:18:12,110 --> 00:18:21,960
any more hands alright I'll ask a

00:18:18,030 --> 00:18:28,559
question if anyone here who uses a

00:18:21,960 --> 00:18:31,980
living design system can you share more

00:18:28,559 --> 00:18:38,850
do you have questions would you like to

00:18:31,980 --> 00:18:40,919
use pen and fly why can you say it's

00:18:38,850 --> 00:18:42,750
SUSE we have something similar so but I

00:18:40,919 --> 00:18:45,330
don't know I mean I'm not in design team

00:18:42,750 --> 00:18:48,290
I mean the coding team is know know

00:18:45,330 --> 00:18:51,210
about it and we've used it for one

00:18:48,290 --> 00:18:54,390
project in particular working on that we

00:18:51,210 --> 00:18:56,400
moved from you know it was yeah so had

00:18:54,390 --> 00:18:58,440
its own style it was the rails on Ruby

00:18:56,400 --> 00:19:01,350
rails app and we moved to using that

00:18:58,440 --> 00:19:04,290
kind of common framework but it's still

00:19:01,350 --> 00:19:06,390
we're still using bootstrap and so it's

00:19:04,290 --> 00:19:08,070
kind of yeah we're looking at it and

00:19:06,390 --> 00:19:10,140
taking the CSS and copying but we don't

00:19:08,070 --> 00:19:13,380
have any way of like systematically

00:19:10,140 --> 00:19:15,120
moving components over to the new design

00:19:13,380 --> 00:19:23,130
so that's why I'm curious if you had

00:19:15,120 --> 00:19:25,410
some some experience in that the

00:19:23,130 --> 00:19:29,490
experience and moving from bootstrap to

00:19:25,410 --> 00:19:30,270
components yeah so bootstrap was painful

00:19:29,490 --> 00:19:32,790
at the end for us

00:19:30,270 --> 00:19:35,220
I mean from the documentation side it's

00:19:32,790 --> 00:19:37,530
awesome that you have huge community and

00:19:35,220 --> 00:19:39,720
forums and everything but anytime you

00:19:37,530 --> 00:19:42,660
want to build something custom you bump

00:19:39,720 --> 00:19:45,809
into obstacles so it was a trade of made

00:19:42,660 --> 00:19:49,260
by the UX engineers that we should drop

00:19:45,809 --> 00:19:51,540
it and our components are trying to be

00:19:49,260 --> 00:19:53,990
as much compatible as possible with the

00:19:51,540 --> 00:19:53,990
old world

00:19:57,530 --> 00:20:01,960
I think she has more questions prepared

00:20:07,460 --> 00:20:11,120
you should always bring your own

00:20:08,690 --> 00:20:26,090
questions to Scandinavia we're shy by

00:20:11,120 --> 00:20:28,760
nature any more questions I think we are

00:20:26,090 --> 00:20:29,140
all set I would say thank you thank you

00:20:28,760 --> 00:20:34,929
all

00:20:29,140 --> 00:20:34,929
[Applause]

00:20:39,950 --> 00:20:42,010

YouTube URL: https://www.youtube.com/watch?v=fNWe0GQzp28


