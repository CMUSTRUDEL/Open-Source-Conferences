Title: 17,000 contributions in 32K RAM - Jan Jongboom
Publication date: 2019-04-20
Playlist: foss-north 2019
Description: 
	The future of computing is tiny. Most computers are not desktop, laptops, tablets or mobile phones, but microcontrollers. Small, integrated systems with a few KB of RAM. And their presence is ever growing. Last year alone 31 billion (!) of them were shipped, up from 23 billion in 2015. And they get more capable every day. A modern embedded system has threads, can run Python or JavaScript, and use machine learning models. Why are you not developing for them yet?
In this talk you'll learn that microcontrollers are not scary, that there's no magic involved, and that working in very constrained systems is actually very fun! You'll also learn a thing or two about getting things to run for years on a battery, try that with a web app. In this talk we'll use Mbed OS, the largest open source Real-Time Operating System for microcontrollers. In 2018 over 17,000 commits were landed in the project, it has over 400 unique contributors, and is licensed under the Apache 2.0 license.

---

Jan Jongboom is an embedded engineer and Developer Evangelist IoT at Arm, always looking for ways to connect more devices to the internet. He has shipped devices, worked on the latest network tech, climbed upon buildings to install gateways and there's a monument in San Francisco with his name on it. Before he joined the IoT bandwagon he was a core contributor to Firefox OS, and he wrote hundreds of patches to various open source projects.

https://foss-north.se/2019/speakers-and-talks.html#jjongboom
Captions: 
	00:00:16,190 --> 00:00:22,580
all right 10:00 a.m. sharp the sound

00:00:19,610 --> 00:00:25,070
audio quality good enough yeah perfect

00:00:22,580 --> 00:00:27,349
so actually the first person that was

00:00:25,070 --> 00:00:28,520
using a microphone like this was in the

00:00:27,349 --> 00:00:30,770
90s was Madonna

00:00:28,520 --> 00:00:32,390
so she pioneered that every time I'm now

00:00:30,770 --> 00:00:35,470
on stage talking with one of these I

00:00:32,390 --> 00:00:37,820
feel like a little like like a rockstar

00:00:35,470 --> 00:00:40,519
my name is Yong Yong boom I'm here to

00:00:37,820 --> 00:00:42,739
talk about 17000 contributions in 32

00:00:40,519 --> 00:00:44,210
kilobytes of RAM which is a very tiny

00:00:42,739 --> 00:00:47,360
amount that I'll show you what we've

00:00:44,210 --> 00:00:51,559
done and how we have done that I work at

00:00:47,360 --> 00:00:54,110
arm arm is a company that is very little

00:00:51,559 --> 00:00:55,969
known outside of engineering worlds and

00:00:54,110 --> 00:00:58,760
even inside the engineering worlds it's

00:00:55,969 --> 00:01:00,620
not that well-known our main job is that

00:00:58,760 --> 00:01:05,899
we design computer processor

00:01:00,620 --> 00:01:07,970
architectures so what we do is we create

00:01:05,899 --> 00:01:09,619
reference designs for example for a new

00:01:07,970 --> 00:01:13,130
processor that might go into a mobile

00:01:09,619 --> 00:01:16,070
phone like my iPhone but also basically

00:01:13,130 --> 00:01:17,600
95% of all the smart phones and we

00:01:16,070 --> 00:01:19,640
create an ecosystem around that so we

00:01:17,600 --> 00:01:22,399
designed the reference implementation we

00:01:19,640 --> 00:01:24,530
design the architecture we design the

00:01:22,399 --> 00:01:25,819
tools around it software tools but then

00:01:24,530 --> 00:01:28,360
we leave it at that and then we have

00:01:25,819 --> 00:01:33,050
other manufacturers companies like nxb

00:01:28,360 --> 00:01:36,470
Apple Sam Soon that will actually take

00:01:33,050 --> 00:01:37,849
those designs and put it into silicon so

00:01:36,470 --> 00:01:39,950
we are fabulous we don't have any

00:01:37,849 --> 00:01:42,740
factories ourselves but we will work

00:01:39,950 --> 00:01:45,410
together with this really big community

00:01:42,740 --> 00:01:48,369
of other silicon partners that help us

00:01:45,410 --> 00:01:52,280
actually get these things on the markets

00:01:48,369 --> 00:01:53,630
my job which is kind of funny like 10

00:01:52,280 --> 00:01:57,410
years ago this was a job I don't think

00:01:53,630 --> 00:01:59,750
even exists it is that I run arms

00:01:57,410 --> 00:02:02,660
developer evangelism team so we're a

00:01:59,750 --> 00:02:04,340
small group of people that care about

00:02:02,660 --> 00:02:07,130
how people are using our products and

00:02:04,340 --> 00:02:11,239
try to influence other developers to

00:02:07,130 --> 00:02:13,370
start developing on arm that's kind of

00:02:11,239 --> 00:02:16,280
funny because that's also how I got it

00:02:13,370 --> 00:02:18,739
to force north I think the best way of

00:02:16,280 --> 00:02:20,800
getting people to use your product is by

00:02:18,739 --> 00:02:23,209
showing them what they can build with it

00:02:20,800 --> 00:02:25,370
and show them the right ways of building

00:02:23,209 --> 00:02:28,710
with it and open source is a really

00:02:25,370 --> 00:02:30,570
really great vehicle for that so it's

00:02:28,710 --> 00:02:32,520
it's kind of the best way to educate the

00:02:30,570 --> 00:02:33,930
user by showing them what they can do

00:02:32,520 --> 00:02:37,440
with it and how they can do something

00:02:33,930 --> 00:02:39,120
with it that's like kind of a clear

00:02:37,440 --> 00:02:42,690
winner so I've been doing open source

00:02:39,120 --> 00:02:46,140
for lost seven of years full time so I

00:02:42,690 --> 00:02:48,150
worked at cloud9 IDE it's not part of

00:02:46,140 --> 00:02:50,120
Amazon Web Services so we were building

00:02:48,150 --> 00:02:52,710
with the first open-source clouds

00:02:50,120 --> 00:02:55,500
development development environments

00:02:52,710 --> 00:02:57,930
really fun after that I moved to Telenor

00:02:55,500 --> 00:03:00,440
which is typically not a company that

00:02:57,930 --> 00:03:03,420
people associate with open source but

00:03:00,440 --> 00:03:07,170
Telenor is really active in Southeast

00:03:03,420 --> 00:03:09,660
Asia and about seven years ago mozilla

00:03:07,170 --> 00:03:11,760
started a new project firefox OS we were

00:03:09,660 --> 00:03:13,680
saying we want to bring very cheap

00:03:11,760 --> 00:03:15,240
smartphones to that part of the world

00:03:13,680 --> 00:03:16,650
the part of the world where very little

00:03:15,240 --> 00:03:19,140
people have either access to the

00:03:16,650 --> 00:03:21,600
Internet or access to smartphones and we

00:03:19,140 --> 00:03:24,120
want to do that through devices that are

00:03:21,600 --> 00:03:26,430
have access to the open web rather than

00:03:24,120 --> 00:03:29,430
a closed ecosystem there are companies

00:03:26,430 --> 00:03:32,070
like Google with with Android in parts

00:03:29,430 --> 00:03:34,380
and their Play services and Apple is

00:03:32,070 --> 00:03:35,460
trying to do so till newer kind of like

00:03:34,380 --> 00:03:37,050
that I don't think they'll like the

00:03:35,460 --> 00:03:39,330
open-source aspect of it but they really

00:03:37,050 --> 00:03:42,390
like the not being dependent on Google

00:03:39,330 --> 00:03:44,340
and Apple part of it and it hired me and

00:03:42,390 --> 00:03:46,370
a couple of other people from cloud 9 to

00:03:44,340 --> 00:03:48,030
help them build that vision

00:03:46,370 --> 00:03:51,480
unfortunately that didn't go anywhere

00:03:48,030 --> 00:03:55,800
and for me it's kind of funny Firefox is

00:03:51,480 --> 00:03:58,560
still alive but it lives on as a

00:03:55,800 --> 00:04:03,180
protocol to iOS these days kai OS is

00:03:58,560 --> 00:04:06,480
right now this the largest the most used

00:04:03,180 --> 00:04:09,210
mobile operating system in India they

00:04:06,480 --> 00:04:11,730
sell about 50 million phones with Kos

00:04:09,210 --> 00:04:13,770
every quarter there's a you success

00:04:11,730 --> 00:04:17,430
these are on really cheap kind of

00:04:13,770 --> 00:04:19,020
feature slash smartphones but it's built

00:04:17,430 --> 00:04:21,330
in a school open-source foundation but

00:04:19,020 --> 00:04:23,490
it's not open source anymore but it's

00:04:21,330 --> 00:04:25,380
kind of it's it's really weird we we

00:04:23,490 --> 00:04:26,370
spend all this time with hundreds of

00:04:25,380 --> 00:04:28,410
engineers trying to build this

00:04:26,370 --> 00:04:29,730
open-source ecosystem and everyone

00:04:28,410 --> 00:04:31,230
Mozilla kinda gave up on it and the

00:04:29,730 --> 00:04:33,390
operators gave up on it some other

00:04:31,230 --> 00:04:36,030
company said ok cool things should work

00:04:33,390 --> 00:04:37,470
well close source it and built like this

00:04:36,030 --> 00:04:39,680
really big business out of it it's kind

00:04:37,470 --> 00:04:39,680
of ironic

00:04:40,070 --> 00:04:44,090
I mean it's also open source right it's

00:04:42,560 --> 00:04:46,220
it's not always like the outcome that

00:04:44,090 --> 00:04:48,950
you like but on the other hand we have

00:04:46,220 --> 00:04:50,990
people now using the open web on all

00:04:48,950 --> 00:04:55,550
these smartphones so three and a half

00:04:50,990 --> 00:04:57,410
years ago I moved to arm in there like

00:04:55,550 --> 00:05:00,170
basically everything that my team does

00:04:57,410 --> 00:05:01,730
is open source because I can't really

00:05:00,170 --> 00:05:04,970
show people what they can do with our

00:05:01,730 --> 00:05:06,290
tech if it's sitting this is something

00:05:04,970 --> 00:05:08,660
that marketing departments really like

00:05:06,290 --> 00:05:10,460
if it's sitting behind like a paywall or

00:05:08,660 --> 00:05:12,140
like a place where you need to fill in

00:05:10,460 --> 00:05:13,970
your email address in your name for a

00:05:12,140 --> 00:05:15,410
white paper it's tough the developers

00:05:13,970 --> 00:05:18,290
don't like so we we try to do everything

00:05:15,410 --> 00:05:21,200
out in the open and how is he open

00:05:18,290 --> 00:05:22,340
source as well is that kind of it's like

00:05:21,200 --> 00:05:24,800
Stack Overflow

00:05:22,340 --> 00:05:27,170
but then for bigger engineering problems

00:05:24,800 --> 00:05:28,490
it's like outflow when that came out ten

00:05:27,170 --> 00:05:30,350
years ago for me that was a revelation

00:05:28,490 --> 00:05:32,510
it was great like there's all these

00:05:30,350 --> 00:05:34,450
people that try to get like the common

00:05:32,510 --> 00:05:37,220
knowledge that we have as engineers

00:05:34,450 --> 00:05:38,810
accessible in a really easy way really

00:05:37,220 --> 00:05:42,020
to the points like I'm looking for

00:05:38,810 --> 00:05:44,000
problem X and some will say okay wait

00:05:42,020 --> 00:05:47,480
hey have you tried Y or does the

00:05:44,000 --> 00:05:49,730
solution is Z and how I approach open

00:05:47,480 --> 00:05:50,660
source is that I think that what open

00:05:49,730 --> 00:05:52,250
source project we can do this on a

00:05:50,660 --> 00:05:54,710
bigger scale for like complete

00:05:52,250 --> 00:05:56,600
engineering projects not just I need to

00:05:54,710 --> 00:05:59,870
know how I use feature accent language

00:05:56,600 --> 00:06:03,650
why but rather I have this big problem

00:05:59,870 --> 00:06:05,240
and no one has solved it before and if I

00:06:03,650 --> 00:06:07,850
can solve it and I tried and get up

00:06:05,240 --> 00:06:10,010
maybe someone thinks it's useful so what

00:06:07,850 --> 00:06:12,440
kind of striking and it this is a

00:06:10,010 --> 00:06:14,180
project that I've wrote with the last

00:06:12,440 --> 00:06:18,800
commits about four and a half years ago

00:06:14,180 --> 00:06:22,640
in November 2014 on mapping data from

00:06:18,800 --> 00:06:27,440
cell towers to a location basically

00:06:22,640 --> 00:06:29,510
protocol open cell ID and in those four

00:06:27,440 --> 00:06:31,340
and a half years no one has ever opened

00:06:29,510 --> 00:06:35,240
an issue no one has ever forked the

00:06:31,340 --> 00:06:38,030
projects up until a few months ago all

00:06:35,240 --> 00:06:39,680
of a sudden I get an email from this

00:06:38,030 --> 00:06:41,120
user is saying hey I'm using his in

00:06:39,680 --> 00:06:43,820
production and running into this issue

00:06:41,120 --> 00:06:48,950
after after I'm using it for multiple

00:06:43,820 --> 00:06:50,120
days I like that's cool and that

00:06:48,950 --> 00:06:51,740
sounds not really a community building

00:06:50,120 --> 00:06:53,630
around the project but you realized that

00:06:51,740 --> 00:06:55,930
there's very narrow

00:06:53,630 --> 00:06:58,100
subset of a problem like how do I map

00:06:55,930 --> 00:06:59,900
cell towers to a certain location

00:06:58,100 --> 00:07:02,510
there's other people that are also

00:06:59,900 --> 00:07:04,160
looking at that issue and maybe they're

00:07:02,510 --> 00:07:07,160
not engaging with your project in that

00:07:04,160 --> 00:07:08,600
sense but there but they encounter the

00:07:07,160 --> 00:07:09,860
same issue did googled for it or they

00:07:08,600 --> 00:07:11,180
search for it and they found your

00:07:09,860 --> 00:07:15,110
project and I started actually using

00:07:11,180 --> 00:07:19,010
that it made this even cooler right we

00:07:15,110 --> 00:07:22,700
have the opportunity as engineers to

00:07:19,010 --> 00:07:24,260
share not just simple answers

00:07:22,700 --> 00:07:26,450
engineering questions share actually

00:07:24,260 --> 00:07:27,890
complete solutions for things and that's

00:07:26,450 --> 00:07:30,140
the thing with the power of open sources

00:07:27,890 --> 00:07:32,360
of course me it's relatively easy to say

00:07:30,140 --> 00:07:33,890
that I've been worked I've been paid to

00:07:32,360 --> 00:07:36,320
work in open source for last seven and a

00:07:33,890 --> 00:07:38,750
half years but it's something that even

00:07:36,320 --> 00:07:39,920
if I'm doing like non pay at work it's

00:07:38,750 --> 00:07:43,010
something I really like to do like

00:07:39,920 --> 00:07:45,230
currently but 250 repositories on get up

00:07:43,010 --> 00:07:46,820
and I I'd like to encourage I've got a

00:07:45,230 --> 00:07:48,980
preaching to the choir area right we're

00:07:46,820 --> 00:07:51,620
at an open source conference I like to

00:07:48,980 --> 00:07:54,080
think that if you do something useful

00:07:51,620 --> 00:07:55,760
even even when you don't think it's like

00:07:54,080 --> 00:07:57,470
directly useful for someone else or it's

00:07:55,760 --> 00:07:58,700
not like this big open source project

00:07:57,470 --> 00:08:02,240
that you're going to build a huge

00:07:58,700 --> 00:08:04,490
community around if you solve this this

00:08:02,240 --> 00:08:06,560
problem it might be very narrow very

00:08:04,490 --> 00:08:09,530
specific to what you're doing at this

00:08:06,560 --> 00:08:11,600
point just throw it up there four years

00:08:09,530 --> 00:08:12,800
down the line someone might run someone

00:08:11,600 --> 00:08:14,900
might email you and say hey actually

00:08:12,800 --> 00:08:17,930
using this in production and it actually

00:08:14,900 --> 00:08:23,450
helps me solve a real business need so

00:08:17,930 --> 00:08:24,970
it's going pool alright so I think this

00:08:23,450 --> 00:08:29,270
has got an interesting graph and how the

00:08:24,970 --> 00:08:32,360
IT in general is growing during arms

00:08:29,270 --> 00:08:35,469
existence it took us about 22 years to

00:08:32,360 --> 00:08:38,870
ship the first 50 50 billion processors

00:08:35,469 --> 00:08:41,120
so basically from 91 when we launched

00:08:38,870 --> 00:08:43,880
the very first products that an ARM

00:08:41,120 --> 00:08:47,060
processor in it was the Apple Newton the

00:08:43,880 --> 00:08:49,040
first Apple wearable up until 2013 it

00:08:47,060 --> 00:08:50,840
took 50 billion chips then it took only

00:08:49,040 --> 00:08:54,440
four years to ship another 50 billion

00:08:50,840 --> 00:08:55,940
and last year we should 25 billion and

00:08:54,440 --> 00:08:59,180
we're expecting 200 billion in four

00:08:55,940 --> 00:09:01,550
years and up so it's kind of when people

00:08:59,180 --> 00:09:04,370
ask me like when is this like big

00:09:01,550 --> 00:09:06,200
Cambrian explosion if I of devices in

00:09:04,370 --> 00:09:08,480
general it's going to happen

00:09:06,200 --> 00:09:12,230
already anthems this devices everywhere

00:09:08,480 --> 00:09:14,540
and like everything about 25 billion

00:09:12,230 --> 00:09:17,120
processor is just the share that that is

00:09:14,540 --> 00:09:18,380
arm architecture in its do you think

00:09:17,120 --> 00:09:19,910
like where it is going these are not

00:09:18,380 --> 00:09:21,530
going in our traditional computer so we

00:09:19,910 --> 00:09:25,940
thought about what computers were 20

00:09:21,530 --> 00:09:27,740
years ago like this is actually 20 years

00:09:25,940 --> 00:09:30,220
ago the Barbie computer it's like it's

00:09:27,740 --> 00:09:30,220
like a real thing

00:09:31,220 --> 00:09:35,780
LT our lazy game review has a really

00:09:33,140 --> 00:09:39,140
good review about this thing and of the

00:09:35,780 --> 00:09:41,600
90s and Norden BBC micro which is kind

00:09:39,140 --> 00:09:43,940
of one of the one of the founders or one

00:09:41,600 --> 00:09:46,490
of the founding members it's an acorn of

00:09:43,940 --> 00:09:47,900
arm and not even in mobile phones I mean

00:09:46,490 --> 00:09:49,610
there's a tremendous amount of mobile

00:09:47,900 --> 00:09:51,050
phone so I think we're shipping a one

00:09:49,610 --> 00:09:53,150
and a half billion phones every year

00:09:51,050 --> 00:09:56,530
there are there but it's nothing close

00:09:53,150 --> 00:10:00,680
to this 25 billion if you look at where

00:09:56,530 --> 00:10:04,720
products are actually going like in cars

00:10:00,680 --> 00:10:07,190
for example the Tesla Model S has 65

00:10:04,720 --> 00:10:13,100
processors is used what they call it an

00:10:07,190 --> 00:10:14,480
automotive 65 processors if I'm looking

00:10:13,100 --> 00:10:16,400
I was I was in the market for a new

00:10:14,480 --> 00:10:18,950
toothbrush shows I was walking around

00:10:16,400 --> 00:10:20,090
London Stansted Airport it's really hard

00:10:18,950 --> 00:10:26,380
to find an electric toothbrush without

00:10:20,090 --> 00:10:28,850
Bluetooth these days this way and also

00:10:26,380 --> 00:10:30,470
so consumer electronics is a really big

00:10:28,850 --> 00:10:32,240
market like I was just looking through

00:10:30,470 --> 00:10:35,540
my kitchen and I what counting on the

00:10:32,240 --> 00:10:36,590
electrical electrical appliances that

00:10:35,540 --> 00:10:38,660
have some sort of processing power

00:10:36,590 --> 00:10:40,490
already in there and then industrial

00:10:38,660 --> 00:10:42,320
markets like these big crow but this is

00:10:40,490 --> 00:10:46,660
how most of our products are made these

00:10:42,320 --> 00:10:49,280
days um I bought a piano the other day

00:10:46,660 --> 00:10:53,360
so does anyone know what which one is

00:10:49,280 --> 00:10:57,980
this Nord it needs yeah so it's an or

00:10:53,360 --> 00:11:00,020
piano three really cool so there's three

00:10:57,980 --> 00:11:02,960
distinct processors in the Nords there's

00:11:00,020 --> 00:11:03,620
a distinct processor in the monitor and

00:11:02,960 --> 00:11:06,920
one of the other one

00:11:03,620 --> 00:11:09,050
and even in a foot pedal as a processor

00:11:06,920 --> 00:11:12,820
it was weird like I just bought six

00:11:09,050 --> 00:11:15,910
computers and I can play music on it um

00:11:12,820 --> 00:11:18,080
so ever if we're looking it's like

00:11:15,910 --> 00:11:19,430
computers are not computers anymore in

00:11:18,080 --> 00:11:20,150
this thing self what we thought about

00:11:19,430 --> 00:11:24,560
what computers

00:11:20,150 --> 00:11:25,910
90s but rather everything we seal the

00:11:24,560 --> 00:11:28,850
shipment and I've all the growth that we

00:11:25,910 --> 00:11:32,060
see is run mic controllers think of it

00:11:28,850 --> 00:11:34,310
as as like a 1 by 1 centimeter little

00:11:32,060 --> 00:11:35,779
blob that has everything in there so

00:11:34,310 --> 00:11:37,910
it's a processor ram and memory

00:11:35,779 --> 00:11:39,350
everything you need to run kinda the

00:11:37,910 --> 00:11:42,320
only thing you need to pair this with is

00:11:39,350 --> 00:11:45,830
an oscillator that's that's it so these

00:11:42,320 --> 00:11:48,440
are small square centimeter I think the

00:11:45,830 --> 00:11:51,800
cheap one or two dollars they come with

00:11:48,440 --> 00:11:53,930
everything in silicon in one package and

00:11:51,800 --> 00:11:56,120
really efficient if you don't do

00:11:53,930 --> 00:11:58,220
anything with them which is kind of nice

00:11:56,120 --> 00:11:59,870
I mean no one wants to know wants their

00:11:58,220 --> 00:12:02,810
devices to suck up all the energy in

00:11:59,870 --> 00:12:05,570
your house downsides of course is that

00:12:02,810 --> 00:12:07,670
once they're slow like 100 megahertz

00:12:05,570 --> 00:12:11,120
maybe that's really kind of fast and

00:12:07,670 --> 00:12:14,630
very limited in in memory mostly RAM so

00:12:11,120 --> 00:12:16,040
but Ram is already quite a bit um just

00:12:14,630 --> 00:12:18,560
to show you look how small this is this

00:12:16,040 --> 00:12:20,570
is a nest if you guys are familiar with

00:12:18,560 --> 00:12:23,870
that like the rounds thermostat thing

00:12:20,570 --> 00:12:27,160
that's that's my controller that's it

00:12:23,870 --> 00:12:27,160
and this is like 8 centimeters in height

00:12:27,970 --> 00:12:31,459
so they differ a little bit an

00:12:29,810 --> 00:12:32,990
application process to want you find in

00:12:31,459 --> 00:12:35,060
your computer they're very similar and

00:12:32,990 --> 00:12:37,580
at same sense I mean it's still 32 bits

00:12:35,060 --> 00:12:39,920
mostly like your computer maybe 64 bits

00:12:37,580 --> 00:12:41,630
but are there normal computer processor

00:12:39,920 --> 00:12:43,400
you still write normal programming

00:12:41,630 --> 00:12:44,540
languages with them and the main

00:12:43,400 --> 00:12:49,459
difference that they don't have a memory

00:12:44,540 --> 00:12:51,080
management units so if your Linux box

00:12:49,459 --> 00:12:53,600
your windows box starts up a new process

00:12:51,080 --> 00:12:56,180
you don't get access to the direct

00:12:53,600 --> 00:12:58,760
access to the RAM it creates a virtual

00:12:56,180 --> 00:13:00,650
memory space and whenever you write like

00:12:58,760 --> 00:13:03,290
a certain bit in RAM and watching mapped

00:13:00,650 --> 00:13:04,790
it to physical memory and it does like

00:13:03,290 --> 00:13:06,440
bounce checking there so you can't write

00:13:04,790 --> 00:13:09,410
outside of your process that's something

00:13:06,440 --> 00:13:11,029
we don't have on micro Soler's it also

00:13:09,410 --> 00:13:13,580
means there's no BIOS there's no

00:13:11,029 --> 00:13:17,029
processors there's kind of no security

00:13:13,580 --> 00:13:18,680
in that sense now containerization the

00:13:17,029 --> 00:13:19,370
the big upside is that it's really fast

00:13:18,680 --> 00:13:22,610
to wake up

00:13:19,370 --> 00:13:24,290
so for us we say if you want to wake up

00:13:22,610 --> 00:13:26,089
from sleep it needs to be able to do the

00:13:24,290 --> 00:13:27,560
10 nanoseconds and if you want to wake

00:13:26,089 --> 00:13:29,780
up from deep sleep it's about 10

00:13:27,560 --> 00:13:32,560
milliseconds you know it's right doing

00:13:29,780 --> 00:13:32,560
that on your computer

00:13:33,559 --> 00:13:37,589
and so real-time AF some access to

00:13:35,999 --> 00:13:39,809
general purpose input and output ports

00:13:37,589 --> 00:13:43,410
this is not unique to my controllers

00:13:39,809 --> 00:13:45,569
because if you take if you take a mobile

00:13:43,410 --> 00:13:47,910
phone and you look at like the the

00:13:45,569 --> 00:13:49,529
volume buttons typically the volume

00:13:47,910 --> 00:13:51,689
buttons are implemented as a physical

00:13:49,529 --> 00:13:53,220
keyboard if you look at the Linux kernel

00:13:51,689 --> 00:13:55,139
for an Android phone with physical

00:13:53,220 --> 00:13:57,540
volume buttons you'll see that's kind of

00:13:55,139 --> 00:14:00,540
like a keyboard with two columns and one

00:13:57,540 --> 00:14:01,949
row because you know the concept of a

00:14:00,540 --> 00:14:03,689
keyboard was already there in the Linux

00:14:01,949 --> 00:14:05,850
kernel so why reinvent the wheel and

00:14:03,689 --> 00:14:07,350
that's mapped to three GPIO pins so you

00:14:05,850 --> 00:14:08,730
kind of have that already on on phones

00:14:07,350 --> 00:14:10,319
or an application processors but it's

00:14:08,730 --> 00:14:11,970
really broken a little mic controller

00:14:10,319 --> 00:14:13,649
typically have a hundred pins or

00:14:11,970 --> 00:14:21,920
something icky used for all kinds of of

00:14:13,649 --> 00:14:24,119
purposes to connect new sensors yeah

00:14:21,920 --> 00:14:25,949
once again on the sides so typically if

00:14:24,119 --> 00:14:27,209
you want to get started developing for

00:14:25,949 --> 00:14:30,029
my controller you do that through

00:14:27,209 --> 00:14:32,939
development boards so this this is a

00:14:30,029 --> 00:14:38,490
Nordic semiconductors NRF 51 developed

00:14:32,939 --> 00:14:40,290
in Finland so it's Norway's sorry I

00:14:38,490 --> 00:14:43,410
actually worked in the same building as

00:14:40,290 --> 00:14:45,779
then when I was in Telenor so so it's

00:14:43,410 --> 00:14:47,040
about a centimeter square but it also

00:14:45,779 --> 00:14:50,100
has bluetooth support but it's gonna

00:14:47,040 --> 00:14:52,529
cool now when people see this they think

00:14:50,100 --> 00:14:54,689
hey that looks awfully familiar to

00:14:52,529 --> 00:14:56,759
another like small computer they don't

00:14:54,689 --> 00:14:59,240
know for hobbiest purposes it's the

00:14:56,759 --> 00:15:01,290
Raspberry Pi this is not my controller

00:14:59,240 --> 00:15:03,209
it might look like it a little bit

00:15:01,290 --> 00:15:05,160
because you have these GPS broken outs

00:15:03,209 --> 00:15:07,589
and you have kind of everything in a

00:15:05,160 --> 00:15:10,769
single SOC but this is a full-blown

00:15:07,589 --> 00:15:12,839
application processor so if you start

00:15:10,769 --> 00:15:13,920
using this thing to monitor your

00:15:12,839 --> 00:15:16,339
temperature in your house you're

00:15:13,920 --> 00:15:22,589
certainly abusing a quad-core machine to

00:15:16,339 --> 00:15:23,850
get some data from a sensor so it's kind

00:15:22,589 --> 00:15:26,699
of different application posters my

00:15:23,850 --> 00:15:27,689
controller for me and think if we're if

00:15:26,699 --> 00:15:29,009
we're looking at like the projects is

00:15:27,689 --> 00:15:31,589
that the arm is making like the people

00:15:29,009 --> 00:15:34,559
higher up in the suits they expect a

00:15:31,589 --> 00:15:36,990
trillion devices by 2030 to be on the

00:15:34,559 --> 00:15:38,639
market there's an amazing amount like a

00:15:36,990 --> 00:15:40,860
really big part of his will be

00:15:38,639 --> 00:15:42,809
microcontrollers so if you want to get

00:15:40,860 --> 00:15:44,850
into that that right now is kind of the

00:15:42,809 --> 00:15:46,290
early as you could start yesterday would

00:15:44,850 --> 00:15:48,499
be better but today is the next big

00:15:46,290 --> 00:15:48,499
thing

00:15:48,839 --> 00:15:56,589
no I said we don't have a Beals we have

00:15:55,120 --> 00:15:58,720
very limited RAM and we don't have an

00:15:56,589 --> 00:16:01,240
MMU so we kindly can't really run a

00:15:58,720 --> 00:16:03,730
full-blown operating system as as Linux

00:16:01,240 --> 00:16:06,490
on this so winning arm we started

00:16:03,730 --> 00:16:10,769
thinking okay if you want to build

00:16:06,490 --> 00:16:13,209
something similar to an operating system

00:16:10,769 --> 00:16:17,560
but specifically for microns holders

00:16:13,209 --> 00:16:20,800
like where should we start we feel that

00:16:17,560 --> 00:16:23,500
like a lot of the software parts that we

00:16:20,800 --> 00:16:27,160
have on these devices are very similar

00:16:23,500 --> 00:16:27,939
between devices so I need stuff like a

00:16:27,160 --> 00:16:32,829
filesystem

00:16:27,939 --> 00:16:36,009
I need a flash driver that can actually

00:16:32,829 --> 00:16:41,050
handle that can help power outages

00:16:36,009 --> 00:16:43,000
nicely if you remember that's the file

00:16:41,050 --> 00:16:46,000
system the file system

00:16:43,000 --> 00:16:47,920
that's a mighty that does that is used

00:16:46,000 --> 00:16:51,040
in quite a bit of IOT devices but it's

00:16:47,920 --> 00:16:54,759
not powerful powerful safe resilient at

00:16:51,040 --> 00:16:56,350
all so if you just like jank it out

00:16:54,759 --> 00:16:58,420
while it's doing reading or writing the

00:16:56,350 --> 00:17:01,000
chances that your Felson table is

00:16:58,420 --> 00:17:02,589
corrupt is very big it's kind of on

00:17:01,000 --> 00:17:04,510
IOT device with my controls because

00:17:02,589 --> 00:17:06,069
there's no power down sequence people

00:17:04,510 --> 00:17:08,020
just whatever the battery dies okay

00:17:06,069 --> 00:17:10,179
there we go now my file system is

00:17:08,020 --> 00:17:10,990
corrupt that's not great so we need to

00:17:10,179 --> 00:17:12,909
do stuff

00:17:10,990 --> 00:17:15,130
typically these devices have like little

00:17:12,909 --> 00:17:17,650
flash chips where they write data and

00:17:15,130 --> 00:17:20,380
but they don't have a dedicated flash

00:17:17,650 --> 00:17:22,209
controller so if you want to use flash

00:17:20,380 --> 00:17:25,449
flash is a limited set of erase and

00:17:22,209 --> 00:17:27,069
write cycles so if you want to make sure

00:17:25,449 --> 00:17:29,830
the other thing lasts over ten years she

00:17:27,069 --> 00:17:32,380
needs to spread out your rights over the

00:17:29,830 --> 00:17:34,450
over the flash but you're not really

00:17:32,380 --> 00:17:35,950
gonna do to the in software because that

00:17:34,450 --> 00:17:37,690
is really hard you need to know like

00:17:35,950 --> 00:17:41,140
which blocks have I used before which

00:17:37,690 --> 00:17:44,080
blocks am I going to use next so an SSD

00:17:41,140 --> 00:17:46,000
has a flash controller that does we're

00:17:44,080 --> 00:17:49,090
leveling so it automatically spreads it

00:17:46,000 --> 00:17:51,280
out over over the physical structure of

00:17:49,090 --> 00:17:52,809
the flash we don't really have that

00:17:51,280 --> 00:17:54,039
because it's way too expensive so we

00:17:52,809 --> 00:17:55,450
want to do this software and that's

00:17:54,039 --> 00:17:56,890
something you don't really gonna you're

00:17:55,450 --> 00:17:59,110
not really going to write for your own

00:17:56,890 --> 00:18:01,090
project but it's something I love

00:17:59,110 --> 00:18:03,279
you need a networking stack because you

00:18:01,090 --> 00:18:07,210
want to connect your new smart meter to

00:18:03,279 --> 00:18:08,889
the Internet's probably some crypto to

00:18:07,210 --> 00:18:10,779
make sure that he device can't be taken

00:18:08,889 --> 00:18:14,649
over easily said all these like common

00:18:10,779 --> 00:18:16,590
parts so with in arm we thought there's

00:18:14,649 --> 00:18:18,999
really a ton of are devices out there

00:18:16,590 --> 00:18:20,889
they all share the same architecture so

00:18:18,999 --> 00:18:22,840
it's relatively easy to write software

00:18:20,889 --> 00:18:24,999
in a in the same way for all of them

00:18:22,840 --> 00:18:26,289
these are all things that are overlooked

00:18:24,999 --> 00:18:28,870
quite often if we look at the current

00:18:26,289 --> 00:18:31,210
IOT market look specifically iit because

00:18:28,870 --> 00:18:32,409
security is much bigger threat there but

00:18:31,210 --> 00:18:36,220
also and wider my controller

00:18:32,409 --> 00:18:38,200
developments is an idea we're just going

00:18:36,220 --> 00:18:39,639
to do that in the very same way as

00:18:38,200 --> 00:18:42,700
people have started building linux as a

00:18:39,639 --> 00:18:44,080
like a collaborative effort it's not

00:18:42,700 --> 00:18:45,970
linen store files who sits behind the

00:18:44,080 --> 00:18:48,580
computer and like bill sees like all

00:18:45,970 --> 00:18:50,499
these companies together building this

00:18:48,580 --> 00:18:53,259
so we wanted to do something similar we

00:18:50,499 --> 00:18:56,049
start at the prison called embed so

00:18:53,259 --> 00:18:59,110
Emmet is an open source free and open

00:18:56,049 --> 00:18:59,740
source operating system 47 Mike

00:18:59,110 --> 00:19:01,360
controllers

00:18:59,740 --> 00:19:03,789
make it easy to develop for my

00:19:01,360 --> 00:19:05,799
controllers in a safe way and have all

00:19:03,789 --> 00:19:07,990
these kind of basic things abstracted

00:19:05,799 --> 00:19:09,340
away for you just like you and Linux

00:19:07,990 --> 00:19:10,899
don't have to wait don't need to know

00:19:09,340 --> 00:19:13,330
what actually happens if you call F open

00:19:10,899 --> 00:19:16,539
and that's something we want to do as

00:19:13,330 --> 00:19:18,759
well so so at the basis we have a real

00:19:16,539 --> 00:19:20,379
time operating system kernel because we

00:19:18,759 --> 00:19:23,049
really like the ability to use threats

00:19:20,379 --> 00:19:26,919
this kind of thing I mean my controller

00:19:23,049 --> 00:19:28,029
has it's a single processor how am I

00:19:26,919 --> 00:19:29,830
going to do threads do we want to

00:19:28,029 --> 00:19:30,070
implement a scheduler myself no probably

00:19:29,830 --> 00:19:32,679
not

00:19:30,070 --> 00:19:34,269
it is a porting layer we couldn't live

00:19:32,679 --> 00:19:36,279
over a hundred 70 different development

00:19:34,269 --> 00:19:40,210
board supported to it from 20 different

00:19:36,279 --> 00:19:43,419
vendors or so some securities and

00:19:40,210 --> 00:19:45,610
connectivity like we have actual

00:19:43,419 --> 00:19:46,629
connectivity stacks Laura Laura when

00:19:45,610 --> 00:19:51,850
Bluetooth Low Energy

00:19:46,629 --> 00:19:53,409
Narim and IOT Wi-Fi etc and I said like

00:19:51,850 --> 00:19:54,940
completely open-source community builds

00:19:53,409 --> 00:19:58,480
so the whole project is a party to

00:19:54,940 --> 00:20:00,789
licensed we have a developer community

00:19:58,480 --> 00:20:02,320
about 350,000 developers right now that

00:20:00,789 --> 00:20:04,929
are using it to build their own

00:20:02,320 --> 00:20:06,850
application on top but also contributing

00:20:04,929 --> 00:20:10,090
back to the operating system so last

00:20:06,850 --> 00:20:12,820
year we landed 3,000 patches into the OS

00:20:10,090 --> 00:20:15,550
from a wide variety of people

00:20:12,820 --> 00:20:18,970
we have companies working together with

00:20:15,550 --> 00:20:20,440
us actually contribute so and what I'm

00:20:18,970 --> 00:20:22,240
kind of proud of is if you look at like

00:20:20,440 --> 00:20:23,800
the gate up contributors to out to my

00:20:22,240 --> 00:20:25,600
console or real-time operating systems

00:20:23,800 --> 00:20:29,410
like the number of unique contributors

00:20:25,600 --> 00:20:33,010
we have over 400 and the rest is

00:20:29,410 --> 00:20:35,530
actually all way below 300 I don't want

00:20:33,010 --> 00:20:37,630
to see this is like a competitor thing I

00:20:35,530 --> 00:20:40,630
mean we are actually working with this

00:20:37,630 --> 00:20:42,130
effort guys inland RL also our project

00:20:40,630 --> 00:20:44,860
but it's a couple of different ways of

00:20:42,130 --> 00:20:47,470
approaching the same problem really

00:20:44,860 --> 00:20:50,560
successful like we do quite a bit of the

00:20:47,470 --> 00:20:52,570
contribute of contributing so about half

00:20:50,560 --> 00:20:55,660
then a quarter's by our partners today

00:20:52,570 --> 00:20:58,180
maintain the board packages and then a

00:20:55,660 --> 00:21:00,690
quarter is coming from the open source

00:20:58,180 --> 00:21:04,960
community and he's kind of see this like

00:21:00,690 --> 00:21:07,480
big growth around 2016 because that's

00:21:04,960 --> 00:21:08,890
the moment that we said okay before we

00:21:07,480 --> 00:21:10,720
were only like a Hartford section layer

00:21:08,890 --> 00:21:12,160
so there's one way of programming all

00:21:10,720 --> 00:21:14,620
these different development boards but

00:21:12,160 --> 00:21:16,900
that was kind of it and from 2016 we

00:21:14,620 --> 00:21:18,400
said okay we want to do more we want to

00:21:16,900 --> 00:21:20,860
start getting to peripherals what I'm

00:21:18,400 --> 00:21:22,840
gonna start doing Network drivers and

00:21:20,860 --> 00:21:24,900
actually make it like a proper kind of

00:21:22,840 --> 00:21:26,830
bit more focus on the Internet of Things

00:21:24,900 --> 00:21:28,600
appliances but still useful for other

00:21:26,830 --> 00:21:30,730
opens for other my controller

00:21:28,600 --> 00:21:34,270
development as well so it's going pretty

00:21:30,730 --> 00:21:36,330
well um we have a release schedule every

00:21:34,270 --> 00:21:39,700
three months we do a feature release

00:21:36,330 --> 00:21:41,170
like proper proper release train it

00:21:39,700 --> 00:21:45,400
works in on every two weeks we do patch

00:21:41,170 --> 00:21:46,630
releases and the governance structure of

00:21:45,400 --> 00:21:51,850
the project is still a little bit with

00:21:46,630 --> 00:21:53,230
arm so we don't have a proper Technical

00:21:51,850 --> 00:21:55,810
Committee and a Marketing Committee in

00:21:53,230 --> 00:21:58,240
the kind of stuff but we're currently

00:21:55,810 --> 00:22:03,970
developing that so we will have a

00:21:58,240 --> 00:22:05,140
properly properly strain with it also in

00:22:03,970 --> 00:22:06,490
a way where like people in the community

00:22:05,140 --> 00:22:08,350
can take a little bit more effort right

00:22:06,490 --> 00:22:10,030
now the only the big way of getting

00:22:08,350 --> 00:22:12,220
influence is ok please open pull

00:22:10,030 --> 00:22:15,010
requests but we want to have a bit more

00:22:12,220 --> 00:22:18,100
of a committee style I'm doing so ever

00:22:15,010 --> 00:22:21,070
quite a large developer community most

00:22:18,100 --> 00:22:23,230
of them live at I am vertical so this is

00:22:21,070 --> 00:22:25,480
for example the Q&A section

00:22:23,230 --> 00:22:26,350
what's kind of funny to me is that I was

00:22:25,480 --> 00:22:28,240
looking at

00:22:26,350 --> 00:22:29,559
these were like aust I did a screenshot

00:22:28,240 --> 00:22:32,679
yesterday when I was sitting in one of

00:22:29,559 --> 00:22:34,000
the keynotes and I saw like nine

00:22:32,679 --> 00:22:36,370
questions and all of them had at least

00:22:34,000 --> 00:22:37,690
one answer I thought that's cool and and

00:22:36,370 --> 00:22:40,299
most of these questions are not even

00:22:37,690 --> 00:22:42,010
answered by armed they're answered by

00:22:40,299 --> 00:22:44,530
people either in the community or by our

00:22:42,010 --> 00:22:46,900
partners if I have a problem with a

00:22:44,530 --> 00:22:48,669
certain st boards then it's kind of cool

00:22:46,900 --> 00:22:50,230
that appear from SD or actually looking

00:22:48,669 --> 00:22:52,809
at it and I say okay yeah maybe you're

00:22:50,230 --> 00:22:54,640
using this in a different way like not

00:22:52,809 --> 00:22:58,480
all micro solar issues are easily

00:22:54,640 --> 00:22:59,620
abstracted if I set a ticker I said

00:22:58,480 --> 00:23:03,520
something that needs to fire every

00:22:59,620 --> 00:23:06,070
second then I need to drive like an

00:23:03,520 --> 00:23:07,210
underlying timer peripheral but that is

00:23:06,070 --> 00:23:09,610
something that's implemented differently

00:23:07,210 --> 00:23:12,130
in every device or maybe I'm using a

00:23:09,610 --> 00:23:13,210
low-power ticker or maybe I'm using an

00:23:12,130 --> 00:23:15,340
internal oscillator instead of the

00:23:13,210 --> 00:23:17,200
external oscillator like kind of differs

00:23:15,340 --> 00:23:18,730
what kind of behavior you have so well

00:23:17,200 --> 00:23:22,150
we try to give like a single API it's

00:23:18,730 --> 00:23:23,799
not always completely possible so these

00:23:22,150 --> 00:23:25,390
are just some other questions also like

00:23:23,799 --> 00:23:28,000
here we have someone from st from a

00:23:25,390 --> 00:23:30,159
vendor that I show that's telling like

00:23:28,000 --> 00:23:31,330
hey you have to you do this and we have

00:23:30,159 --> 00:23:33,789
someone from the community either

00:23:31,330 --> 00:23:34,840
actually say hey you know you can't do

00:23:33,789 --> 00:23:36,580
this with like the built in libraries

00:23:34,840 --> 00:23:38,950
but we have this other library that

00:23:36,580 --> 00:23:40,390
someone already wrote for you maybe try

00:23:38,950 --> 00:23:43,450
that and then we have people from our

00:23:40,390 --> 00:23:46,090
own official community team that is

00:23:43,450 --> 00:23:48,760
actually replying is comment so for us

00:23:46,090 --> 00:23:50,830
community building around this is we can

00:23:48,760 --> 00:23:52,480
do our part both in writing the code and

00:23:50,830 --> 00:23:56,500
in you know answering any questions that

00:23:52,480 --> 00:23:57,400
people have but for me and that's you

00:23:56,500 --> 00:23:59,740
know that's why I like working with

00:23:57,400 --> 00:24:01,090
developers is that everyone here is like

00:23:59,740 --> 00:24:02,650
going get up and start opening a pull

00:24:01,090 --> 00:24:04,600
request against whatever we want to do

00:24:02,650 --> 00:24:06,669
or go to forums and start helping

00:24:04,600 --> 00:24:10,150
someone that is where the actual power

00:24:06,669 --> 00:24:13,390
of open-source kicks in as well and we

00:24:10,150 --> 00:24:15,520
also need to make money though like we

00:24:13,390 --> 00:24:17,580
have a business units currently with I

00:24:15,520 --> 00:24:19,870
think five hundred people working on

00:24:17,580 --> 00:24:21,610
variety of IT things and embed is like

00:24:19,870 --> 00:24:22,960
one of these things we still need to

00:24:21,610 --> 00:24:26,169
make money so one of the things we do is

00:24:22,960 --> 00:24:28,990
commercial support so we do long-term

00:24:26,169 --> 00:24:31,870
releases for people that buy community

00:24:28,990 --> 00:24:34,150
buy buy commercial support so we say

00:24:31,870 --> 00:24:35,890
okay well the five eleven release will

00:24:34,150 --> 00:24:37,780
maintain that for you and backboard

00:24:35,890 --> 00:24:39,580
security fixes and will make sure that

00:24:37,780 --> 00:24:41,700
you have someone to call whenever you

00:24:39,580 --> 00:24:43,080
need to

00:24:41,700 --> 00:24:44,759
it's relatively expensive if you think

00:24:43,080 --> 00:24:48,179
of our cheapest Sport Package right now

00:24:44,759 --> 00:24:50,370
it's $36,000 a year but look at these

00:24:48,179 --> 00:24:52,139
these the products that this goes into

00:24:50,370 --> 00:24:53,639
are perks that shape and hundreds

00:24:52,139 --> 00:24:56,549
hundreds of thousands or millions of

00:24:53,639 --> 00:24:59,820
devices so having someone the coal

00:24:56,549 --> 00:25:02,460
whenever you know if you look at like

00:24:59,820 --> 00:25:04,769
the development cycle for embedded

00:25:02,460 --> 00:25:07,200
products or Mike Rotolo products you

00:25:04,769 --> 00:25:07,759
kind of start with kind of what do I

00:25:07,200 --> 00:25:10,230
need to do

00:25:07,759 --> 00:25:13,139
it's very waterful right it's it's

00:25:10,230 --> 00:25:15,059
really hard to do like an agile method

00:25:13,139 --> 00:25:18,960
when you need to order a hundred

00:25:15,059 --> 00:25:20,340
thousand PCBs to go to a factory so you

00:25:18,960 --> 00:25:22,200
can start with like what do I need to do

00:25:20,340 --> 00:25:24,240
what what are my requirements then you

00:25:22,200 --> 00:25:25,769
start kind of gathering like the

00:25:24,240 --> 00:25:28,169
hardware requirements that you need to

00:25:25,769 --> 00:25:30,240
have after that you start doing a little

00:25:28,169 --> 00:25:32,519
bit of like POC work if at that point

00:25:30,240 --> 00:25:34,440
you realize guys something is amiss or I

00:25:32,519 --> 00:25:36,990
need to repaint my boards that's

00:25:34,440 --> 00:25:39,029
relatively easy because you do low

00:25:36,990 --> 00:25:41,460
volumes you probably do your

00:25:39,029 --> 00:25:43,169
manufacturing somewhere locally when I

00:25:41,460 --> 00:25:45,389
was in Telenor we had a we had a plant

00:25:43,169 --> 00:25:47,429
literally to two kilometers from our

00:25:45,389 --> 00:25:49,399
office so whenever we wanted to do

00:25:47,429 --> 00:25:52,769
something we just like drove over there

00:25:49,399 --> 00:25:54,029
and then told them okay can we change a

00:25:52,769 --> 00:25:56,309
little bit like the board designer like

00:25:54,029 --> 00:25:57,690
yeah fine after that you're gonna freeze

00:25:56,309 --> 00:26:00,929
your components both hardware and

00:25:57,690 --> 00:26:02,879
software so at this point you you're not

00:26:00,929 --> 00:26:04,830
going to do major changes in your design

00:26:02,879 --> 00:26:06,929
you might say okay well this flash chip

00:26:04,830 --> 00:26:08,730
was actually not great but I'm gonna use

00:26:06,929 --> 00:26:11,419
like a different variant of the same of

00:26:08,730 --> 00:26:13,590
the same chip that's fine

00:26:11,419 --> 00:26:15,090
you're not gonna say okay well I'm gonna

00:26:13,590 --> 00:26:16,649
upgrade my operating system version

00:26:15,090 --> 00:26:18,389
right now because that will trigger a

00:26:16,649 --> 00:26:20,789
complete redesign cycle of your of your

00:26:18,389 --> 00:26:24,330
product so then you do the you kind of

00:26:20,789 --> 00:26:26,370
do the finish hardware design they do

00:26:24,330 --> 00:26:27,960
they do software design at that point if

00:26:26,370 --> 00:26:29,129
you realize during your software design

00:26:27,960 --> 00:26:32,070
okay now I need to change something

00:26:29,129 --> 00:26:33,750
in my hardware gets really expensive so

00:26:32,070 --> 00:26:35,250
if you if you have someone I can

00:26:33,750 --> 00:26:37,259
actually help you back port a kind of

00:26:35,250 --> 00:26:39,620
thing that's actually worth it little

00:26:37,259 --> 00:26:43,230
bit of a sidetrack

00:26:39,620 --> 00:26:44,610
so we do community engagements one of

00:26:43,230 --> 00:26:48,450
the things that we found out that really

00:26:44,610 --> 00:26:50,669
works is our office our series so every

00:26:48,450 --> 00:26:52,320
two weeks we take one of the core

00:26:50,669 --> 00:26:56,040
engineers in the products

00:26:52,320 --> 00:26:58,260
this case Bartek he is our tech lead for

00:26:56,040 --> 00:27:00,540
all of MLS and he designed our low-power

00:26:58,260 --> 00:27:01,980
ap ice so we asked him them to come in

00:27:00,540 --> 00:27:04,380
we have on YouTube we have a live stream

00:27:01,980 --> 00:27:08,250
takes about an hour 30 minutes of

00:27:04,380 --> 00:27:10,919
talking and 30 minutes of Q&A and we

00:27:08,250 --> 00:27:12,210
present whatever we're working on and a

00:27:10,919 --> 00:27:13,590
really big part of that is the Q&A

00:27:12,210 --> 00:27:15,540
section because this is for the

00:27:13,590 --> 00:27:16,890
community a way of talking with the

00:27:15,540 --> 00:27:20,460
people to actually build the products

00:27:16,890 --> 00:27:22,320
and see what their design choices are so

00:27:20,460 --> 00:27:24,600
afterwards also always lost thirty

00:27:22,320 --> 00:27:27,750
minutes are a Q&A the questions roll

00:27:24,600 --> 00:27:29,700
roll through as they are asked and then

00:27:27,750 --> 00:27:31,320
we'll ask them on the stream so it's

00:27:29,700 --> 00:27:32,790
gonna cool I mean if you look at like

00:27:31,320 --> 00:27:39,090
numbers these one has about a thousand

00:27:32,790 --> 00:27:41,970
views yeah sure that's a lot or not a

00:27:39,090 --> 00:27:43,230
lot but it's kind of you're building

00:27:41,970 --> 00:27:44,340
like something for embedded systems and

00:27:43,230 --> 00:27:46,320
you have a hundred people in the room

00:27:44,340 --> 00:27:47,490
look at what I need to do right now to

00:27:46,320 --> 00:27:51,030
get a hundred people in the room I need

00:27:47,490 --> 00:27:53,220
to fly to good some work and open my

00:27:51,030 --> 00:27:55,200
laptop and start talking here and so

00:27:53,220 --> 00:27:57,360
doing this online as it's a lot easy to

00:27:55,200 --> 00:27:58,890
scale although it's a lot easier to see

00:27:57,360 --> 00:28:00,630
if you guys are engaged with me if I'm

00:27:58,890 --> 00:28:02,010
looking you in the eye rather than if

00:28:00,630 --> 00:28:03,960
you're on the stream but actually

00:28:02,010 --> 00:28:05,970
through the Q&A we get we get technical

00:28:03,960 --> 00:28:08,100
I think the record number of questions

00:28:05,970 --> 00:28:13,440
we ever had was 75 in one of these

00:28:08,100 --> 00:28:14,760
streams our documentation very similar

00:28:13,440 --> 00:28:17,419
to what we do with your pray system

00:28:14,760 --> 00:28:20,309
itself also lives and get up

00:28:17,419 --> 00:28:23,040
we don't whole we showed on our own

00:28:20,309 --> 00:28:25,230
website also because we have like kind

00:28:23,040 --> 00:28:26,610
of like cool widgets like inline code

00:28:25,230 --> 00:28:29,940
fragments that you can then open

00:28:26,610 --> 00:28:31,679
directly in your browser and like test

00:28:29,940 --> 00:28:33,750
it out on your actual development board

00:28:31,679 --> 00:28:36,030
but you can't really do and get up so we

00:28:33,750 --> 00:28:36,900
have like a cross compilation step that

00:28:36,030 --> 00:28:38,450
takes it from here

00:28:36,900 --> 00:28:41,250
versions it and polish it on our website

00:28:38,450 --> 00:28:45,440
but everything listen get up everyone

00:28:41,250 --> 00:28:48,450
wants to do something they can do that a

00:28:45,440 --> 00:28:51,150
downside of building a product was

00:28:48,450 --> 00:28:53,520
relatively complex so we do a lot of

00:28:51,150 --> 00:28:56,580
commits wave 170 development boards like

00:28:53,520 --> 00:28:57,840
how do you keep it stable so we've

00:28:56,580 --> 00:28:59,370
invested quite a bit in continuous

00:28:57,840 --> 00:29:02,730
integration that we run on all our pull

00:28:59,370 --> 00:29:05,880
requests now so this is how our this is

00:29:02,730 --> 00:29:07,470
how our CI test setup looked like

00:29:05,880 --> 00:29:10,380
a year and a half ago just a bunch of

00:29:07,470 --> 00:29:13,320
boards that we we put in a closet in our

00:29:10,380 --> 00:29:16,350
Austin office and this is how it looks

00:29:13,320 --> 00:29:18,900
now so we have proper racks we currently

00:29:16,350 --> 00:29:20,670
have over 1,000 development boards and

00:29:18,900 --> 00:29:22,320
their tests and every time a pull

00:29:20,670 --> 00:29:24,690
request comes in will actually run our

00:29:22,320 --> 00:29:27,150
complete test suite on this so we

00:29:24,690 --> 00:29:29,160
started we sorry we have over a thousand

00:29:27,150 --> 00:29:31,380
11 under 50 functional tests we have

00:29:29,160 --> 00:29:33,480
system tests we have simulated test

00:29:31,380 --> 00:29:35,190
cetera and for every release now we run

00:29:33,480 --> 00:29:38,340
about forty thousand hours of testing on

00:29:35,190 --> 00:29:39,780
real hardware and that's gonna it's cool

00:29:38,340 --> 00:29:41,400
and the whole test suite is also like

00:29:39,780 --> 00:29:45,480
all the testing tools everything that we

00:29:41,400 --> 00:29:47,250
use that we build to facilitate this is

00:29:45,480 --> 00:29:48,720
also open source you can just you can

00:29:47,250 --> 00:29:51,000
take a development board you can run our

00:29:48,720 --> 00:29:52,440
test setup and then it will tell you

00:29:51,000 --> 00:29:54,330
exactly what passes and what fails

00:29:52,440 --> 00:29:56,670
that's kind of cool and that's kind of

00:29:54,330 --> 00:30:02,040
the only way to ensure do we actually

00:29:56,670 --> 00:30:03,480
have quality so beside the community

00:30:02,040 --> 00:30:06,270
plan the other way that we make money is

00:30:03,480 --> 00:30:09,240
that we use it as a facilitating tool so

00:30:06,270 --> 00:30:10,350
we have protocol pelion and barely on

00:30:09,240 --> 00:30:11,700
those device management and data

00:30:10,350 --> 00:30:15,120
management the connectivity management

00:30:11,700 --> 00:30:16,470
for large amounts of IOT devices so if a

00:30:15,120 --> 00:30:17,880
customer comes to us and say hey I want

00:30:16,470 --> 00:30:19,980
to build a million of million IOT

00:30:17,880 --> 00:30:22,290
devices your problem becomes a lot

00:30:19,980 --> 00:30:23,400
bigger than I have a device on when I

00:30:22,290 --> 00:30:24,900
connect to the internet I've like a

00:30:23,400 --> 00:30:27,000
little temperature sensor in my house

00:30:24,900 --> 00:30:27,960
and it needs to send some data you need

00:30:27,000 --> 00:30:29,730
to start thinking about what is the

00:30:27,960 --> 00:30:30,900
identity of this device do I trust it

00:30:29,730 --> 00:30:32,910
you need to start thinking of a

00:30:30,900 --> 00:30:35,490
lifecycle management like if this device

00:30:32,910 --> 00:30:37,680
is still running in two years but I want

00:30:35,490 --> 00:30:39,510
to add some functionality is there a way

00:30:37,680 --> 00:30:42,660
for me to patch that functionality in

00:30:39,510 --> 00:30:44,550
the device what if I transfer ownership

00:30:42,660 --> 00:30:46,310
of my company to another company how do

00:30:44,550 --> 00:30:49,140
I swap the certificates and device outs

00:30:46,310 --> 00:30:51,240
etc for us having a common operating

00:30:49,140 --> 00:30:53,190
system that we can use as the basis for

00:30:51,240 --> 00:30:54,840
those devices is really nice and we

00:30:53,190 --> 00:30:57,090
build services on top of that so it's

00:30:54,840 --> 00:30:58,440
kind of a hybrids and hybrid approach

00:30:57,090 --> 00:31:00,630
where we can make some money of

00:30:58,440 --> 00:31:08,160
commercial sports but also services

00:31:00,630 --> 00:31:10,200
built on top of open source yes it is

00:31:08,160 --> 00:31:11,400
I don't expect anyone actually like look

00:31:10,200 --> 00:31:14,550
over this life this is like all the

00:31:11,400 --> 00:31:16,020
blocks that we do so there's a if you

00:31:14,550 --> 00:31:18,570
look at like our what our community is

00:31:16,020 --> 00:31:21,210
doing they do like high-level stuff like

00:31:18,570 --> 00:31:22,800
for example library if you have a like

00:31:21,210 --> 00:31:25,740
an accelerometer something that can

00:31:22,800 --> 00:31:26,490
measure if you're like doing like cool

00:31:25,740 --> 00:31:27,930
moves with it

00:31:26,490 --> 00:31:29,520
that is something their community often

00:31:27,930 --> 00:31:32,250
builds applications that is where

00:31:29,520 --> 00:31:34,230
community builds then we provide all the

00:31:32,250 --> 00:31:36,420
blue parts our partners provide all the

00:31:34,230 --> 00:31:40,290
red parts so it's kind of like how

00:31:36,420 --> 00:31:46,110
everything fits together I'm actually

00:31:40,290 --> 00:31:48,570
skip over this for time yeah so how we

00:31:46,110 --> 00:31:50,130
do our porting layer it's kind of like

00:31:48,570 --> 00:31:53,010
as the engineer in me this is kind of

00:31:50,130 --> 00:31:55,560
like fascinating like if you look at

00:31:53,010 --> 00:31:57,480
like how peripheral works like how we

00:31:55,560 --> 00:31:59,130
how we want to design our API and our

00:31:57,480 --> 00:32:02,910
peripheral actually works it's

00:31:59,130 --> 00:32:05,220
completely different if so this is how

00:32:02,910 --> 00:32:07,320
how an embrace application looks if you

00:32:05,220 --> 00:32:09,660
want to just blink an LED it's very

00:32:07,320 --> 00:32:13,710
simple he includes our library then we

00:32:09,660 --> 00:32:18,000
say digital I also have an out port now

00:32:13,710 --> 00:32:19,140
I've sound on interesting um I was

00:32:18,000 --> 00:32:22,530
actually doing this on my kitchen floor

00:32:19,140 --> 00:32:24,780
so have you not actually talking through

00:32:22,530 --> 00:32:26,640
this but is you say well I want to

00:32:24,780 --> 00:32:28,500
toggle that pin on and off and then I

00:32:26,640 --> 00:32:29,850
wait and then that's it so if you're

00:32:28,500 --> 00:32:32,550
looking at like how that actually looks

00:32:29,850 --> 00:32:38,490
is that there's not such a thing as a as

00:32:32,550 --> 00:32:41,460
a pin known to the hardware so the

00:32:38,490 --> 00:32:43,050
hardware is sitting on a bus and I can

00:32:41,460 --> 00:32:44,640
do stuff with that bus and one of those

00:32:43,050 --> 00:32:47,870
pins might be on the bus and I can

00:32:44,640 --> 00:32:50,670
either toggle it on or toggle it off now

00:32:47,870 --> 00:32:53,760
how that actually works is that there's

00:32:50,670 --> 00:32:54,540
a memory space 32-bit memory space 30

00:32:53,760 --> 00:32:57,120
bit microcontroller

00:32:54,540 --> 00:33:02,460
and those buses are mapped to certain

00:32:57,120 --> 00:33:04,620
memory addresses so typically in for a

00:33:02,460 --> 00:33:09,330
lot of the are my controllers SRAM

00:33:04,620 --> 00:33:11,910
starts at 0 X 2 lots of zeros up until

00:33:09,330 --> 00:33:14,040
well maybe let's say 256 K of RAM

00:33:11,910 --> 00:33:16,380
something like that I mean a your

00:33:14,040 --> 00:33:17,760
peripherals are mapped to 0 X 4 lots of

00:33:16,380 --> 00:33:20,490
stuff and then your other things like

00:33:17,760 --> 00:33:21,310
external RAM or external flash coming up

00:33:20,490 --> 00:33:22,810
even

00:33:21,310 --> 00:33:25,840
but everything on your device has a

00:33:22,810 --> 00:33:30,310
memory address so whenever I say I want

00:33:25,840 --> 00:33:33,190
to write a one - that led somewhere in

00:33:30,310 --> 00:33:34,620
our in our hardware abstraction layer

00:33:33,190 --> 00:33:38,410
which is implemented by the vendor

00:33:34,620 --> 00:33:41,830
sometimes been saying ok well the red

00:33:38,410 --> 00:33:45,760
LED is mapped to a bus and that bus is

00:33:41,830 --> 00:33:50,500
memory mapped to address 0 x4 0 0 0 2 0

00:33:45,760 --> 00:33:52,210
0 0 and if you want to write a 1 to it

00:33:50,500 --> 00:33:53,950
you if that all the way to the

00:33:52,210 --> 00:33:55,630
left and your right to that address and

00:33:53,950 --> 00:33:57,130
if you want to turn it off you

00:33:55,630 --> 00:33:58,930
the other way around they write through

00:33:57,130 --> 00:34:01,410
different address so that's kind of but

00:33:58,930 --> 00:34:06,340
that's reads that stuff that is

00:34:01,410 --> 00:34:07,240
completely unique for the vendor and

00:34:06,340 --> 00:34:09,429
that is something that we don't really

00:34:07,240 --> 00:34:11,470
want to do so in our Portugal ater we

00:34:09,429 --> 00:34:13,540
say well you need to give us a couple of

00:34:11,470 --> 00:34:15,669
primitives like what is the general

00:34:13,540 --> 00:34:18,040
purpose input and output ports and what

00:34:15,669 --> 00:34:20,290
can I write to it and then the vendor

00:34:18,040 --> 00:34:23,889
implements this kind of code it says ok

00:34:20,290 --> 00:34:25,540
well in this case these pins are on this

00:34:23,889 --> 00:34:27,220
bus it is how you toggle it on and talk

00:34:25,540 --> 00:34:30,399
a lit up so that's they have a lot of

00:34:27,220 --> 00:34:33,790
freedom in that so we try to like

00:34:30,399 --> 00:34:36,730
abstract away over it so we do stuff

00:34:33,790 --> 00:34:39,070
like thread synchronization and and

00:34:36,730 --> 00:34:40,510
safety etc around it and the vendor just

00:34:39,070 --> 00:34:42,760
tells us like what are there's very

00:34:40,510 --> 00:34:46,169
unique features of your hardware and

00:34:42,760 --> 00:34:48,220
it's also for event there's a way of

00:34:46,169 --> 00:34:49,600
it's kind of one of the issues that you

00:34:48,220 --> 00:34:52,419
think you see if you're building a

00:34:49,600 --> 00:34:54,700
product like this is that a vendor looks

00:34:52,419 --> 00:34:56,379
at it and say ok well I sell my board

00:34:54,700 --> 00:34:58,420
but people write exactly the same code

00:34:56,379 --> 00:34:59,500
for it and then they can also run it on

00:34:58,420 --> 00:35:01,990
a completely different board from a

00:34:59,500 --> 00:35:04,930
different vendor why would they pick me

00:35:01,990 --> 00:35:06,850
except for price but these things are

00:35:04,930 --> 00:35:10,900
like wildly different like some vendors

00:35:06,850 --> 00:35:13,210
they specialize in in deep sleep

00:35:10,900 --> 00:35:15,250
mechanisms make sure that you your

00:35:13,210 --> 00:35:16,690
standby current is always the lowest so

00:35:15,250 --> 00:35:18,910
I'm have more time or peripherals like

00:35:16,690 --> 00:35:22,540
there's more Hardware timers in there so

00:35:18,910 --> 00:35:24,100
3 years we try to abstract differences

00:35:22,540 --> 00:35:25,630
away but they're still unique features

00:35:24,100 --> 00:35:29,770
on certain boards that might you might

00:35:25,630 --> 00:35:31,030
want to pick one way or another say a

00:35:29,770 --> 00:35:34,330
low-power I think one of the cool things

00:35:31,030 --> 00:35:36,850
that we've done which is often lacking

00:35:34,330 --> 00:35:38,080
and Bennet's products especially if you

00:35:36,850 --> 00:35:43,060
look at like kind of the maker movement

00:35:38,080 --> 00:35:44,350
is low-power design because we we kind

00:35:43,060 --> 00:35:47,080
of always say is what we don't offer

00:35:44,350 --> 00:35:48,490
just like an operating like a real-time

00:35:47,080 --> 00:35:50,710
operating system package but we offer

00:35:48,490 --> 00:35:52,150
all these drivers and these networking

00:35:50,710 --> 00:35:53,650
layers that's around top of it we can

00:35:52,150 --> 00:35:55,930
make like one thing that fits really

00:35:53,650 --> 00:35:57,520
well together and one way where it

00:35:55,930 --> 00:36:02,890
shines is in our is in our low power

00:35:57,520 --> 00:36:04,030
modes so we can if the board supports it

00:36:02,890 --> 00:36:05,590
because you need the end of a low-power

00:36:04,030 --> 00:36:10,270
timer you need a timer that can run

00:36:05,590 --> 00:36:15,010
without the MCU then you can actually go

00:36:10,270 --> 00:36:19,240
automatically in sleep so this is what I

00:36:15,010 --> 00:36:21,040
wanted so this is blinky like the same

00:36:19,240 --> 00:36:23,170
application that is show just before and

00:36:21,040 --> 00:36:25,600
this is if you don't have sleep features

00:36:23,170 --> 00:36:27,700
in your board's efforts current will

00:36:25,600 --> 00:36:31,150
hover at about forty three milliamps

00:36:27,700 --> 00:36:33,160
which is quite a lot like let's say do

00:36:31,150 --> 00:36:35,080
you have a little lipo battery like the

00:36:33,160 --> 00:36:39,190
one that goes in your phone has maybe

00:36:35,080 --> 00:36:41,110
1500 milliamp hours so can come so it

00:36:39,190 --> 00:36:43,420
can for one hour can do 15 under

00:36:41,110 --> 00:36:45,310
milliamps so at 43 milliamp we do times

00:36:43,420 --> 00:36:48,850
30 you can run it for about 30 hours on

00:36:45,310 --> 00:36:52,480
a battery like it's not exact science in

00:36:48,850 --> 00:36:54,220
excise but about 30 hours however if we

00:36:52,480 --> 00:36:55,540
then introduce a deep sleep ap ice and

00:36:54,220 --> 00:36:57,790
this is on a board it doesn't even

00:36:55,540 --> 00:36:59,680
support like super deep sleep wakes

00:36:57,790 --> 00:37:03,070
Liang go down to about three hundreds

00:36:59,680 --> 00:37:05,650
nano amps so all of a sudden our battery

00:37:03,070 --> 00:37:08,680
lifetime is goes from 30 hours in 3000

00:37:05,650 --> 00:37:10,900
hours on the same battery and that's

00:37:08,680 --> 00:37:12,460
kind of cool and the only way that we

00:37:10,900 --> 00:37:14,710
can do that is because we know exactly

00:37:12,460 --> 00:37:15,850
what's what we ship with the OS and we

00:37:14,710 --> 00:37:18,160
can make sure that everything like fits

00:37:15,850 --> 00:37:19,450
together nicely so we can even trigger

00:37:18,160 --> 00:37:21,370
that automatically so if you take a

00:37:19,450 --> 00:37:24,430
board that supports it you write your

00:37:21,370 --> 00:37:26,050
application you hook up power monitoring

00:37:24,430 --> 00:37:32,620
device you actually see that it probably

00:37:26,050 --> 00:37:34,630
goes into deep sleep skip over deaths ci

00:37:32,620 --> 00:37:36,550
getting started a set we have 170

00:37:34,630 --> 00:37:38,050
different development boards you can

00:37:36,550 --> 00:37:39,600
either kind of pick either one of them

00:37:38,050 --> 00:37:41,800
this is a small subsection

00:37:39,600 --> 00:37:43,720
there's actually way more but at some

00:37:41,800 --> 00:37:44,940
point is got tired of copy and pasting

00:37:43,720 --> 00:37:49,150
my screen

00:37:44,940 --> 00:37:50,890
so this is about 90 of them typically

00:37:49,150 --> 00:37:53,230
you want to do something with it's like

00:37:50,890 --> 00:37:56,319
a little computer that sits somewhere in

00:37:53,230 --> 00:37:59,020
your home that then just compute things

00:37:56,319 --> 00:38:00,369
it's not very useful kind of what what

00:37:59,020 --> 00:38:03,250
makes this fun for me is that you can

00:38:00,369 --> 00:38:04,829
attach new sensors to it and get some

00:38:03,250 --> 00:38:09,250
extra knowledge from the outside world

00:38:04,829 --> 00:38:10,390
so you take a sensor like so I set all

00:38:09,250 --> 00:38:13,390
the way at the beginning use like a

00:38:10,390 --> 00:38:15,010
development board because if I have a

00:38:13,390 --> 00:38:17,260
little chip four centimeter by

00:38:15,010 --> 00:38:20,290
centimeter and it's like a hundred pin

00:38:17,260 --> 00:38:24,520
package then my pins are like this small

00:38:20,290 --> 00:38:25,720
icon solar that small so so way of like

00:38:24,520 --> 00:38:27,369
doing that I said well we'll use a

00:38:25,720 --> 00:38:29,680
development board and all these pins map

00:38:27,369 --> 00:38:31,900
to one of these pins on the development

00:38:29,680 --> 00:38:33,460
board itself so it makes easy let's say

00:38:31,900 --> 00:38:36,880
I use a moisture sensor something that

00:38:33,460 --> 00:38:38,980
can like so that the resistor value on

00:38:36,880 --> 00:38:42,670
the sensor changes depending on how wet

00:38:38,980 --> 00:38:44,050
there's running this running area so you

00:38:42,670 --> 00:38:45,849
can use this to put it in a plant and

00:38:44,050 --> 00:38:49,510
then it will tell you how moist the

00:38:45,849 --> 00:38:52,630
plant is she literally connected is just

00:38:49,510 --> 00:38:54,609
a bunch of wires for this sensor you

00:38:52,630 --> 00:38:58,089
have a signal wires as an analog sensor

00:38:54,609 --> 00:39:01,000
because the resistor value ifs powering

00:38:58,089 --> 00:39:03,190
if grounds put a bunch of wires someone

00:39:01,000 --> 00:39:05,260
actually asked me young people always

00:39:03,190 --> 00:39:07,690
say like red for power and black for

00:39:05,260 --> 00:39:09,490
grounds are these wires difference like

00:39:07,690 --> 00:39:10,960
no the electrons don't flow in a

00:39:09,490 --> 00:39:17,710
different way depending on the color of

00:39:10,960 --> 00:39:20,650
that doesn't matter so you connect those

00:39:17,710 --> 00:39:23,650
two like a pin on the board so we can

00:39:20,650 --> 00:39:27,010
use like an I don't like so not all pins

00:39:23,650 --> 00:39:28,690
are equal so some pins can be used as

00:39:27,010 --> 00:39:30,280
like an analog input some can only use

00:39:28,690 --> 00:39:32,589
as digital input some support like

00:39:30,280 --> 00:39:34,540
really high frequency protocols like SPI

00:39:32,589 --> 00:39:37,750
so you need to look at like your data

00:39:34,540 --> 00:39:40,390
sheets what we have here is kind of the

00:39:37,750 --> 00:39:43,180
Arduino shield form factor and those of

00:39:40,390 --> 00:39:45,130
all the pins are like the same in like

00:39:43,180 --> 00:39:50,380
the same location always know that here

00:39:45,130 --> 00:39:52,180
there's analog pins so you connect those

00:39:50,380 --> 00:39:54,490
and in this case like these are the pins

00:39:52,180 --> 00:39:56,640
and that's it and then from there you

00:39:54,490 --> 00:39:58,570
can go to our online compiler so

00:39:56,640 --> 00:40:00,940
typically developments for

00:39:58,570 --> 00:40:02,890
really annoying because when I started

00:40:00,940 --> 00:40:05,890
doing this the only tools that I could

00:40:02,890 --> 00:40:09,070
use for on Windows I had to like buy a

00:40:05,890 --> 00:40:10,570
paid debugger and I look into my VM and

00:40:09,070 --> 00:40:12,610
I started coding and it was all really

00:40:10,570 --> 00:40:14,860
annoying so kind of got fed up with that

00:40:12,610 --> 00:40:17,470
so here we have like an online compilers

00:40:14,860 --> 00:40:19,420
you go there you write some code in the

00:40:17,470 --> 00:40:22,180
browser you click compile and then it

00:40:19,420 --> 00:40:25,030
downloads a binary file and you direct a

00:40:22,180 --> 00:40:26,680
binary file onto there on the dev board

00:40:25,030 --> 00:40:28,870
it's kind of like a mesh storage device

00:40:26,680 --> 00:40:31,240
USB mass storage device and then it will

00:40:28,870 --> 00:40:32,890
flash we do that actually to another

00:40:31,240 --> 00:40:34,180
project if it's open source if your

00:40:32,890 --> 00:40:36,220
interests in this kind of thing we made

00:40:34,180 --> 00:40:38,680
an open-source debugging probe called

00:40:36,220 --> 00:40:40,630
tap link and that allows us to do these

00:40:38,680 --> 00:40:42,190
mass storage device flushing and

00:40:40,630 --> 00:40:44,500
debugging and also those UART over

00:40:42,190 --> 00:40:46,720
serial another way if you want to start

00:40:44,500 --> 00:40:50,230
offline with avid studio released for

00:40:46,720 --> 00:40:51,400
Windows and Mac OS just yet a week so

00:40:50,230 --> 00:40:53,200
that allows you to do it when you're

00:40:51,400 --> 00:40:55,210
offline environments but we also

00:40:53,200 --> 00:40:59,620
integrate with traditional and merritt

00:40:55,210 --> 00:41:00,730
IDs like IR and Kyle and DK then yeah we

00:40:59,620 --> 00:41:02,880
can start reading some data from the

00:41:00,730 --> 00:41:05,260
from the moisture sensor again analog in

00:41:02,880 --> 00:41:06,730
that tells me that abstracts everything

00:41:05,260 --> 00:41:08,770
away like how these pins work underneath

00:41:06,730 --> 00:41:10,420
I can read some value and I printed out

00:41:08,770 --> 00:41:16,060
somewhere send it to to a certain

00:41:10,420 --> 00:41:17,590
location in lost five minutes before we

00:41:16,060 --> 00:41:19,390
had QA I want to highlight a couple of

00:41:17,590 --> 00:41:21,550
other projects that we're doing so we

00:41:19,390 --> 00:41:23,170
run Emmet labs which kind of are our

00:41:21,550 --> 00:41:26,050
scratch space for things that are

00:41:23,170 --> 00:41:28,180
interesting but are not really

00:41:26,050 --> 00:41:30,460
production quality yet however it is all

00:41:28,180 --> 00:41:32,560
open source so you can you can buy a dev

00:41:30,460 --> 00:41:35,350
board and get started with it

00:41:32,560 --> 00:41:38,230
it lives in laps of em become so very I

00:41:35,350 --> 00:41:39,340
know the URLs really hard for that's it

00:41:38,230 --> 00:41:45,430
three of the things that I want to

00:41:39,340 --> 00:41:47,320
highlight one is image yes it's a

00:41:45,430 --> 00:41:51,190
project that I've been leading with in

00:41:47,320 --> 00:41:53,770
arm Michael's always get more powerful

00:41:51,190 --> 00:41:55,330
every year so like a typical micro solar

00:41:53,770 --> 00:41:58,030
these days one that you can buy for two

00:41:55,330 --> 00:42:00,100
bucks has two and a 56k of ram and about

00:41:58,030 --> 00:42:02,020
a hundred megahertz of processor speed

00:42:00,100 --> 00:42:04,480
and that's actually something we could

00:42:02,020 --> 00:42:06,160
do a lot with so together with the

00:42:04,480 --> 00:42:08,260
JavaScript foundation together with Sam

00:42:06,160 --> 00:42:11,650
zoom and the unit Intel and unity of

00:42:08,260 --> 00:42:12,339
sigit we worked on a JavaScript runtime

00:42:11,650 --> 00:42:14,349
that can run

00:42:12,339 --> 00:42:16,390
these constraints so that JavaScript

00:42:14,349 --> 00:42:18,630
runtime is called Jerry scripts it's

00:42:16,390 --> 00:42:21,279
completely ACMA scripts 5.1 compatible

00:42:18,630 --> 00:42:24,099
and i can render about 64 kilobytes of

00:42:21,279 --> 00:42:26,529
RAM so that allows you to give a kind of

00:42:24,099 --> 00:42:28,630
interpreted language running on these

00:42:26,529 --> 00:42:30,880
microcontrollers so it consists of like

00:42:28,630 --> 00:42:33,549
like a mapping layer from C++ to

00:42:30,880 --> 00:42:37,839
JavaScript and then like an interactive

00:42:33,549 --> 00:42:39,339
shell etc so I don't see this as like D

00:42:37,839 --> 00:42:41,109
way and program mic controllers but

00:42:39,339 --> 00:42:43,390
rather giving like scripting abilities

00:42:41,109 --> 00:42:48,130
to your customers so we have a customer

00:42:43,390 --> 00:42:50,440
that is using that is building like

00:42:48,130 --> 00:42:52,539
lockers the he use and train stations

00:42:50,440 --> 00:42:53,950
but like the actual logic and like how

00:42:52,539 --> 00:42:56,499
much you need to pay and what like the

00:42:53,950 --> 00:42:58,809
the payment structure is and like when

00:42:56,499 --> 00:43:00,609
they need to lock again that is stuff

00:42:58,809 --> 00:43:02,589
that they want there then they would

00:43:00,609 --> 00:43:04,690
their customers to be able to change so

00:43:02,589 --> 00:43:07,299
it may turn of like a no threats type of

00:43:04,690 --> 00:43:08,650
flow editor they changed the way they

00:43:07,299 --> 00:43:10,210
change the business logic then they push

00:43:08,650 --> 00:43:12,369
the compiled JavaScript to the device

00:43:10,210 --> 00:43:14,259
and they run that in the interpreter

00:43:12,369 --> 00:43:17,229
which is kind of a really cool mix of

00:43:14,259 --> 00:43:22,440
two concepts coming together the other

00:43:17,229 --> 00:43:24,729
thing is the MS emulator so I figured

00:43:22,440 --> 00:43:26,589
back when I was doing stuff for Telenor

00:43:24,729 --> 00:43:29,229
we were using Emscripten which is an

00:43:26,589 --> 00:43:32,559
LLVM to JavaScript or webassembly

00:43:29,229 --> 00:43:35,440
compiler so that can take c++ and output

00:43:32,559 --> 00:43:36,549
some JavaScript or web assembly and I

00:43:35,440 --> 00:43:40,839
figured well we have a really big

00:43:36,549 --> 00:43:42,880
codebase in a cup is a C++ why can't I

00:43:40,839 --> 00:43:44,469
run my embedded application in the

00:43:42,880 --> 00:43:45,460
browser it would make it a lot faster so

00:43:44,469 --> 00:43:47,349
we did that

00:43:45,460 --> 00:43:49,900
so the Emmett simulator takes all of

00:43:47,349 --> 00:43:51,190
them at OS with a custom like hardware

00:43:49,900 --> 00:43:52,989
section layer specifically for the

00:43:51,190 --> 00:43:54,099
browser and then cross compiles that you

00:43:52,989 --> 00:43:58,930
can now run your application in the

00:43:54,099 --> 00:44:00,309
browser so that looks like this so you

00:43:58,930 --> 00:44:07,059
know I couldn't have stuff and I can

00:44:00,309 --> 00:44:07,329
write my C++ here change my pin there we

00:44:07,059 --> 00:44:09,849
go

00:44:07,329 --> 00:44:12,099
really cool so and we even do stuff like

00:44:09,849 --> 00:44:14,829
networking layers etc so it's very fun

00:44:12,099 --> 00:44:16,210
we used a we were doing like an actual

00:44:14,829 --> 00:44:18,130
products something that we needed to

00:44:16,210 --> 00:44:19,809
present that an alliance 90% of the code

00:44:18,130 --> 00:44:21,190
that we wrote was actually written in

00:44:19,809 --> 00:44:23,739
the simulators before we actually tested

00:44:21,190 --> 00:44:26,640
it somewhere else so kind of cool then a

00:44:23,739 --> 00:44:26,640
very last thing is

00:44:26,730 --> 00:44:31,420
there's a lot of developments right now

00:44:29,230 --> 00:44:33,940
in getting neural networks to run on

00:44:31,420 --> 00:44:35,770
really small devices so you might have

00:44:33,940 --> 00:44:38,080
seen at the tensorflow summit Google's

00:44:35,770 --> 00:44:40,060
present the tens of relies for micro

00:44:38,080 --> 00:44:43,060
trollers there's a project that my team

00:44:40,060 --> 00:44:45,100
has been involved in and I think that is

00:44:43,060 --> 00:44:47,340
really cool because device that up until

00:44:45,100 --> 00:44:49,990
two years ago could only act as like

00:44:47,340 --> 00:44:53,230
something that got data from a sensor

00:44:49,990 --> 00:44:54,730
and then send it off can now okay now

00:44:53,230 --> 00:44:56,260
can I start running another on that

00:44:54,730 --> 00:44:57,610
working actually doing conclusions on

00:44:56,260 --> 00:44:59,890
its own and only sending a conclusion

00:44:57,610 --> 00:45:03,580
over we're just kind of cool so this is

00:44:59,890 --> 00:45:06,490
running on a on a $4 micron solar from

00:45:03,580 --> 00:45:07,780
SD on the dev boards and we're running a

00:45:06,490 --> 00:45:09,370
neural network that can actually

00:45:07,780 --> 00:45:12,160
recognize ditches that you write on the

00:45:09,370 --> 00:45:15,780
screen so it's done with Mike micro

00:45:12,160 --> 00:45:20,020
tensor so you see the banana for scale

00:45:15,780 --> 00:45:21,670
left so you press the button then the

00:45:20,020 --> 00:45:24,130
neural network runs we trained this on

00:45:21,670 --> 00:45:25,060
60,000 images of handwritten digits and

00:45:24,130 --> 00:45:28,720
then they tell you what actually

00:45:25,060 --> 00:45:31,570
happened and we can do it again with a

00:45:28,720 --> 00:45:32,710
thing so for us this is like one of the

00:45:31,570 --> 00:45:35,380
ways that we think that a meta

00:45:32,710 --> 00:45:37,330
development is going yeah we are we can

00:45:35,380 --> 00:45:38,710
all of a sudden run and interpreted

00:45:37,330 --> 00:45:42,010
languages on these we can real neural

00:45:38,710 --> 00:45:43,360
networks on these and there's billions

00:45:42,010 --> 00:45:45,970
and billions and billions coming out of

00:45:43,360 --> 00:45:47,950
factories every month so if there's ever

00:45:45,970 --> 00:45:52,510
a moment to get into this that would be

00:45:47,950 --> 00:45:53,710
today so to recap for QA I mean most

00:45:52,510 --> 00:45:55,570
computers that we currently ship they're

00:45:53,710 --> 00:45:56,290
not in your pocket they're not on your

00:45:55,570 --> 00:45:57,820
desktop anymore

00:45:56,290 --> 00:45:59,440
they're sitting everywhere they're all

00:45:57,820 --> 00:46:01,750
around us there's probably one of the

00:45:59,440 --> 00:46:05,310
Beamer and maybe one that actually

00:46:01,750 --> 00:46:05,310
controls the blinds here

00:46:05,880 --> 00:46:11,920
so for a long time building the building

00:46:10,060 --> 00:46:15,010
software for these devices and I've been

00:46:11,920 --> 00:46:17,020
there was really painful everything had

00:46:15,010 --> 00:46:18,520
to be done in C your assembly you could

00:46:17,020 --> 00:46:20,020
only do stuff on Windows there was no

00:46:18,520 --> 00:46:22,750
communities around it if you had any

00:46:20,020 --> 00:46:25,030
questions you were on your own with like

00:46:22,750 --> 00:46:26,680
a big manual from your vendor that's

00:46:25,030 --> 00:46:28,780
kind of it but it's not longer the case

00:46:26,680 --> 00:46:30,610
like we have communities around it we

00:46:28,780 --> 00:46:32,740
have open source projects around it we

00:46:30,610 --> 00:46:34,270
can do you know cool stuff like

00:46:32,740 --> 00:46:36,310
interpret languages or even machine

00:46:34,270 --> 00:46:37,420
learning on these devices so if you want

00:46:36,310 --> 00:46:39,130
to get started with that Emma Lewis is

00:46:37,420 --> 00:46:39,490
the place to go find more information at

00:46:39,130 --> 00:46:43,990
those

00:46:39,490 --> 00:46:45,850
both calm all right thank you Opeth

00:46:43,990 --> 00:46:54,480
given a thank you

00:46:45,850 --> 00:46:56,800
[Applause]

00:46:54,480 --> 00:47:12,070
do you have three minutes for Q&A if

00:46:56,800 --> 00:47:15,850
there's any it is very tight the ARM

00:47:12,070 --> 00:47:17,650
architecture oh so the question is how

00:47:15,850 --> 00:47:18,190
tight is Emma dough as to the ARM

00:47:17,650 --> 00:47:21,490
architecture

00:47:18,190 --> 00:47:23,530
it's very tight so we for the cortex I'm

00:47:21,490 --> 00:47:25,360
architecture we have thing called CMC's

00:47:23,530 --> 00:47:27,580
and CMT is kind of the abstraction layer

00:47:25,360 --> 00:47:30,610
over the cortex I'm course of all the

00:47:27,580 --> 00:47:32,290
vendors and that is we built on top of

00:47:30,610 --> 00:47:33,550
that so if you want to rent it on

00:47:32,290 --> 00:47:36,970
different architectures you would have

00:47:33,550 --> 00:47:51,070
to pour CMS's first so we don't support

00:47:36,970 --> 00:47:52,900
that at this point yes Kanaka Belle oh

00:47:51,070 --> 00:47:55,570
yeah I do I need to go paddle on the web

00:47:52,900 --> 00:47:57,430
browser on Linux No so we have a cross

00:47:55,570 --> 00:48:00,430
compilation tool chain called M it CLI

00:47:57,430 --> 00:48:04,420
it used jesusí for arm to compile your

00:48:00,430 --> 00:48:07,570
application through that what crypto

00:48:04,420 --> 00:48:10,050
stack do we have we bought a company

00:48:07,570 --> 00:48:11,950
called polar SSL a few years ago

00:48:10,050 --> 00:48:14,560
rebranded is an open source set

00:48:11,950 --> 00:48:17,890
completely as empathy LS and empathy LS

00:48:14,560 --> 00:48:20,340
is even on non arm architectures I think

00:48:17,890 --> 00:48:23,230
is by far the widely most widely used

00:48:20,340 --> 00:48:25,720
TLS sulfur Tila stack and in addition we

00:48:23,230 --> 00:48:27,940
do hard for obstruction so you can buy

00:48:25,720 --> 00:48:28,540
like a for microchip def crypt

00:48:27,940 --> 00:48:30,760
accelerator

00:48:28,540 --> 00:48:36,370
I'll take six wait a for example you can

00:48:30,760 --> 00:48:38,260
use that to do your crypto anymore

00:48:36,370 --> 00:48:41,160
alright then I want to thank you all and

00:48:38,260 --> 00:48:43,310
let's break for coffee and

00:48:41,160 --> 00:48:45,370
[Music]

00:48:43,310 --> 00:48:45,370
you

00:48:52,140 --> 00:48:54,200

YouTube URL: https://www.youtube.com/watch?v=hQf1DoPNpJc


