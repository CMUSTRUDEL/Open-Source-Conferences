Title: FreeBSD is not Linux - Niclas Zeising
Publication date: 2019-04-19
Playlist: foss-north 2019
Description: 
	FreeBSD is an advanced open source Unix-like operating system with roots in the Berkeley Software Distribution (BSD) Unix originally distributed by the University of California, Berkeley. It is one of the oldest and largest open source projects in the world, having recently celebrated it's 25th birthday. FreeBSD is used to power modern servers, desktops and embedded system and its advanced networking, storage and security features makes it the platform of choice for many of the busiest web sites and most pervasive networking and storage devices. When sending a network packet across the Internet, there is a good chance it will touch a FreeBSD system along the way.
This presentation will give an overview of the FreeBSD operating system and the FreeBSD project community. We will walk through what FreeBSD is, and the community behind it. I will also talk about the various features in FreeBSD, such as jails, ZFS, networking and virtualization and some of the places where FreeBSD can be found.

---

Niclas is an IT consultant based in Stockholm, Sweden, specializing in systems administration, IT operations, and IT security. He has been involved in the FreeBSD project for over a decade and has been a FreeBSD committer since 2012. Most notably, he's involved in the FreeBSD port of the xorg graphical environment and related software, working to improve the FreeBSD desktop experience as part of the Graphics Team. Niclas is also one of the organizers of the BSD Users Stockholm Meetup.

https://foss-north.se/2019/speakers-and-talks.html#nzeising
Captions: 
	00:00:16,020 --> 00:00:21,180
hello welcome to this talk but

00:00:18,150 --> 00:00:26,460
previously FreeBSD and freebie C's not

00:00:21,180 --> 00:00:29,400
Linux some background by to talk a been

00:00:26,460 --> 00:00:33,660
I've been going to two conferences and

00:00:29,400 --> 00:00:35,399
fast fast fast time for instance and

00:00:33,660 --> 00:00:37,770
stuff like that and you talk to a lot of

00:00:35,399 --> 00:00:39,840
people and they go like what's freebie

00:00:37,770 --> 00:00:42,660
see involve three be seized and

00:00:39,840 --> 00:00:44,430
open-source operating system a POSIX

00:00:42,660 --> 00:00:46,500
like open open source operating system

00:00:44,430 --> 00:00:50,579
and people doze like is that a Linux

00:00:46,500 --> 00:00:53,120
distribution well no it's not a Linux

00:00:50,579 --> 00:00:57,329
distribution spoiler alert

00:00:53,120 --> 00:00:59,609
so in this talk I'll I'll try to give an

00:00:57,329 --> 00:01:04,650
overview of what free business FreeBSD

00:00:59,609 --> 00:01:06,710
is and how it came to be a some of the

00:01:04,650 --> 00:01:09,320
feature it has and it was this will be a

00:01:06,710 --> 00:01:12,570
very high-level some some of the topics

00:01:09,320 --> 00:01:14,940
could be a one-day lecture style thing

00:01:12,570 --> 00:01:19,579
so from from a very high-level

00:01:14,940 --> 00:01:23,340
perspective in the first bit about me my

00:01:19,579 --> 00:01:27,259
name is Nicholas icing you can reach me

00:01:23,340 --> 00:01:31,530
there or several other other mainly

00:01:27,259 --> 00:01:34,110
mailing addresses I'm an IT consultant

00:01:31,530 --> 00:01:35,969
based in Stockholm in Sweden where I do

00:01:34,110 --> 00:01:38,790
systems administration unfortunately

00:01:35,969 --> 00:01:42,299
mostly Linux and bit of IT security

00:01:38,790 --> 00:01:45,539
DevOps stuff like that and when I'm not

00:01:42,299 --> 00:01:48,689
at work I do free beastie stuff I'm a

00:01:45,539 --> 00:01:51,450
free beastie committer since 2012 I've

00:01:48,689 --> 00:01:54,509
been a free beastie contributor for for

00:01:51,450 --> 00:01:57,799
over ten years and since 2019 it

00:01:54,509 --> 00:02:00,600
probably means closer to 15 years by now

00:01:57,799 --> 00:02:03,719
and so so I've been working on FreeBSD

00:02:00,600 --> 00:02:06,180
for for quite a while and I work mostly

00:02:03,719 --> 00:02:09,869
in ports I pretend I write documentation

00:02:06,180 --> 00:02:11,910
sometimes but time is limited so I work

00:02:09,869 --> 00:02:13,980
most in ports and I will explain what

00:02:11,910 --> 00:02:17,940
port is process as part of the

00:02:13,980 --> 00:02:22,050
presentation so first off how many in

00:02:17,940 --> 00:02:24,390
here has heard of FreeBSD before oh four

00:02:22,050 --> 00:02:28,860
eyes thank you how many people are using

00:02:24,390 --> 00:02:29,620
previously in some capacity not as many

00:02:28,860 --> 00:02:33,819
but

00:02:29,620 --> 00:02:37,180
few hands still so how many people has

00:02:33,819 --> 00:02:41,200
has it has or have used a PlayStation 3

00:02:37,180 --> 00:02:43,540
or a PlayStation 4 oh we have plenty of

00:02:41,200 --> 00:02:45,340
free PC users users in here so the

00:02:43,540 --> 00:02:48,420
operating system on play PlayStation 3

00:02:45,340 --> 00:02:52,420
and PlayStation 4 is is based on FreeBSD

00:02:48,420 --> 00:02:54,640
they took some version of FreeBSD made

00:02:52,420 --> 00:02:57,670
some some Sony took version free BC made

00:02:54,640 --> 00:03:00,519
some changes to it and they're out and

00:02:57,670 --> 00:03:02,230
developed developed it into internal

00:03:00,519 --> 00:03:07,180
operating system on PlayStation 3 and

00:03:02,230 --> 00:03:08,829
PlayStation 4 so another thing how many

00:03:07,180 --> 00:03:16,480
of you work to storage and I've heard of

00:03:08,829 --> 00:03:19,329
NetApp or working with meta net up is

00:03:16,480 --> 00:03:21,489
using FreeBSD Isilon which is another

00:03:19,329 --> 00:03:24,010
storage appliance for which I don't have

00:03:21,489 --> 00:03:26,739
in a picture is also using FreeBSD so

00:03:24,010 --> 00:03:29,230
more freebies users there are seats in

00:03:26,739 --> 00:03:37,090
the front I think there is some seats in

00:03:29,230 --> 00:03:39,579
the back if you prefer how many people

00:03:37,090 --> 00:03:43,290
in here are using or using Netflix to

00:03:39,579 --> 00:03:45,819
view you have a question

00:03:43,290 --> 00:03:50,500
yeah how many people are using Netflix

00:03:45,819 --> 00:03:54,400
to view things alright are through so

00:03:50,500 --> 00:03:56,349
yeah Netflix uses freebsd every bite

00:03:54,400 --> 00:03:58,900
well not every bite but every bite of a

00:03:56,349 --> 00:04:02,040
movie or documentary or TV series is

00:03:58,900 --> 00:04:05,410
served by FreeBSD the net flicks open

00:04:02,040 --> 00:04:11,910
connect appliance is its previously

00:04:05,410 --> 00:04:14,949
based it's well almost all FreeBSD so

00:04:11,910 --> 00:04:16,750
about a third of Internet traffic or 30%

00:04:14,949 --> 00:04:20,829
or something of Internet traffic at peak

00:04:16,750 --> 00:04:23,650
hour is served by FreeBSD it I think

00:04:20,829 --> 00:04:26,770
Netflix is getting close to serving 100

00:04:23,650 --> 00:04:29,620
Gig 100 gigabits out of a single single

00:04:26,770 --> 00:04:34,840
socket box by now they've been pushing

00:04:29,620 --> 00:04:37,560
the limits for for a number of years any

00:04:34,840 --> 00:04:37,560
what's up users

00:04:38,549 --> 00:04:42,939
unfortunately well what's up uses

00:04:40,929 --> 00:04:45,669
previously unless Facebook has changed

00:04:42,939 --> 00:04:49,469
it to recently but what's up is built

00:04:45,669 --> 00:04:49,469
everything is built on top on FreeBSD

00:04:50,009 --> 00:04:58,839
Apple Mac OS or OSX or what's it's

00:04:55,299 --> 00:05:01,989
called this today is is based on free BC

00:04:58,839 --> 00:05:05,379
well not everything but the POSIX player

00:05:01,989 --> 00:05:09,629
and the eunich see parts of Mac OS X is

00:05:05,379 --> 00:05:09,629
it's based on on a version of Ruby ste

00:05:09,869 --> 00:05:17,619
univer networking also previously you

00:05:14,439 --> 00:05:20,819
know is so the router or switch

00:05:17,619 --> 00:05:24,339
management interface it's free beastie

00:05:20,819 --> 00:05:25,509
so as you can see free BC and this is

00:05:24,339 --> 00:05:28,179
just a few of the places where you could

00:05:25,509 --> 00:05:30,459
places where you can find FreeBSD it's I

00:05:28,179 --> 00:05:33,399
mean we have almost all of you here here

00:05:30,459 --> 00:05:36,729
are free BC users in some way so as you

00:05:33,399 --> 00:05:39,639
can see it's it's it's in the mouth it's

00:05:36,729 --> 00:05:45,639
in multiple places but it's it's not

00:05:39,639 --> 00:05:49,659
very heard of it or not very known so to

00:05:45,639 --> 00:05:52,689
dive into it what is FreeBSD the the

00:05:49,659 --> 00:05:55,209
very very short perhaps almost elevator

00:05:52,689 --> 00:05:58,469
pitch show what free beasties perhaps a

00:05:55,209 --> 00:06:00,399
conference picture would previously is

00:05:58,469 --> 00:06:03,969
previously is a complete operating

00:06:00,399 --> 00:06:07,269
system in contrast to Linux which is a

00:06:03,969 --> 00:06:11,769
kernel and some tools previously is a

00:06:07,269 --> 00:06:14,439
complete operating system this means

00:06:11,769 --> 00:06:17,919
that the kernel the base utilities

00:06:14,439 --> 00:06:23,229
everything is developed together as one

00:06:17,919 --> 00:06:26,219
repository or in one one repository and

00:06:23,229 --> 00:06:28,569
it's everything released together and

00:06:26,219 --> 00:06:33,959
together with the glue to actually build

00:06:28,569 --> 00:06:38,889
something the lorries free BC is also

00:06:33,959 --> 00:06:41,409
documentation we have a lot of

00:06:38,889 --> 00:06:45,779
documentation both within the system as

00:06:41,409 --> 00:06:45,779
manual pages the FreeBSD handbook

00:06:47,920 --> 00:06:53,930
[Music]

00:06:49,160 --> 00:06:56,250
and so on some of it unfortunately is

00:06:53,930 --> 00:06:59,100
perhaps not as up-to-date as it should

00:06:56,250 --> 00:07:00,420
be but in general we have got good

00:06:59,100 --> 00:07:04,530
documentation we have plenty of

00:07:00,420 --> 00:07:12,320
documentation oops sorry

00:07:04,530 --> 00:07:19,100
a freebies these also over 30,000

00:07:12,320 --> 00:07:19,100
third-party packages so free/busy is a

00:07:19,430 --> 00:07:26,270
lot more than just an operating system

00:07:22,940 --> 00:07:31,320
and these packet is it's similar to

00:07:26,270 --> 00:07:35,010
Dijon more to apt or similar things like

00:07:31,320 --> 00:07:36,660
this so you can probably find your

00:07:35,010 --> 00:07:41,040
favorite software in there if it's not

00:07:36,660 --> 00:07:50,390
part of the base system lastly freebies

00:07:41,040 --> 00:07:50,390
DSA community it's a community of people

00:07:50,450 --> 00:07:55,980
working together for some reason the

00:07:54,300 --> 00:08:00,090
clickers keeps clicking even when I

00:07:55,980 --> 00:08:04,800
don't want it to click a previous

00:08:00,090 --> 00:08:08,340
community it's a bunch of people working

00:08:04,800 --> 00:08:11,730
together it's one of the oldest

00:08:08,340 --> 00:08:13,620
open-source projects in existence I will

00:08:11,730 --> 00:08:14,450
give a brief overview of a history you

00:08:13,620 --> 00:08:17,900
know in a bit

00:08:14,450 --> 00:08:21,410
it's also one of the largest

00:08:17,900 --> 00:08:24,060
democratically run open-source projects

00:08:21,410 --> 00:08:30,450
so there is no there is no leanest or

00:08:24,060 --> 00:08:33,290
walls there is no man or woman or person

00:08:30,450 --> 00:08:33,290
in charge at the top

00:08:35,760 --> 00:08:43,120
so there's this is this is the very very

00:08:38,830 --> 00:08:46,210
short overview of what freebies is but

00:08:43,120 --> 00:08:47,980
how did you get here so as you've seen

00:08:46,210 --> 00:08:49,600
when my clicker has been clicking or

00:08:47,980 --> 00:08:52,750
maybe I've been clicking on it without

00:08:49,600 --> 00:08:55,270
noticing next step we'll talk about is

00:08:52,750 --> 00:08:58,660
is the history how he got her and I

00:08:55,270 --> 00:09:00,279
slide disclaimer a I wasn't really

00:08:58,660 --> 00:09:03,820
around at the beginning so I don't know

00:09:00,279 --> 00:09:06,400
everything of it in there are people

00:09:03,820 --> 00:09:08,410
who've done much better jobs at talking

00:09:06,400 --> 00:09:11,460
of it the history of BSD in history of

00:09:08,410 --> 00:09:14,080
computing so if you're really interested

00:09:11,460 --> 00:09:16,660
Wikipedia is a good start I know Kirk

00:09:14,080 --> 00:09:18,279
McKusick has recorded lectures about the

00:09:16,660 --> 00:09:20,830
history of free beastie and history

00:09:18,279 --> 00:09:26,470
obesity in general so this is just a

00:09:20,830 --> 00:09:28,600
short overview of or history so in the

00:09:26,470 --> 00:09:33,400
beginning of time there was apparently

00:09:28,600 --> 00:09:38,940
something called multics well and then

00:09:33,400 --> 00:09:45,610
came Unix from Bell Labs in in the US

00:09:38,940 --> 00:09:50,339
and Bell lab version six of UNIX came to

00:09:45,610 --> 00:09:53,350
University of Berkeley in California and

00:09:50,339 --> 00:09:55,510
some people there found out that well

00:09:53,350 --> 00:10:01,959
there are some features missing or there

00:09:55,510 --> 00:10:03,550
are some things we don't like so so they

00:10:01,959 --> 00:10:09,040
started developing patches for for

00:10:03,550 --> 00:10:14,010
version six of Bell Labs UNIX a bunch of

00:10:09,040 --> 00:10:21,459
different things such as the X editor

00:10:14,010 --> 00:10:26,250
and later the VI editor a Pascal

00:10:21,459 --> 00:10:26,250
compiler and a bunch of other tools

00:10:27,820 --> 00:10:36,070
and these patches I mean people and by

00:10:32,020 --> 00:10:37,690
people I mean the 40-ish inside UNIX

00:10:36,070 --> 00:10:38,770
installations and computers in the world

00:10:37,690 --> 00:10:42,870
of it this time

00:10:38,770 --> 00:10:49,870
they started asking for these add-ons so

00:10:42,870 --> 00:10:52,570
in 1977 these patches billy-oh it

00:10:49,870 --> 00:10:55,270
started to compile these patches into

00:10:52,570 --> 00:10:57,010
something more similar to a distribution

00:10:55,270 --> 00:11:02,560
or something and they call it the

00:10:57,010 --> 00:11:12,520
berkeley software distribution and this

00:11:02,560 --> 00:11:14,500
was released in march of 1978 you still

00:11:12,520 --> 00:11:18,160
needed eighteen two years later Bell

00:11:14,500 --> 00:11:20,970
Labs UNIX or later eighteen T UNIX to

00:11:18,160 --> 00:11:23,710
use this it was just a patch set on top

00:11:20,970 --> 00:11:25,720
and you still needed which will be

00:11:23,710 --> 00:11:27,700
important later you still needed the

00:11:25,720 --> 00:11:31,380
license from eighteen T to to actually

00:11:27,700 --> 00:11:36,820
use this so what happened

00:11:31,380 --> 00:11:39,040
apparently the American DARPA the

00:11:36,820 --> 00:11:43,810
Defense Research something-something

00:11:39,040 --> 00:11:47,800
agency they needed a version of an

00:11:43,810 --> 00:11:50,950
operating system for the one chief

00:11:47,800 --> 00:11:52,150
operating system previously different

00:11:50,950 --> 00:11:54,070
parts that used different things and

00:11:52,150 --> 00:11:55,930
apparently militaries are big and

00:11:54,070 --> 00:11:59,800
standardization standardization

00:11:55,930 --> 00:12:02,920
standardly station so they started

00:11:59,800 --> 00:12:04,660
offering some money to to the computer

00:12:02,920 --> 00:12:10,690
research group at the University of

00:12:04,660 --> 00:12:14,700
California Berkeley and out of this came

00:12:10,690 --> 00:12:17,470
things like sockets and an IP stack in

00:12:14,700 --> 00:12:19,840
several other tools so so the beastie

00:12:17,470 --> 00:12:20,830
distribution or the beastie patch sat on

00:12:19,840 --> 00:12:24,010
top of Unix

00:12:20,830 --> 00:12:26,610
it grew I mean more and more releases

00:12:24,010 --> 00:12:26,610
came to me

00:12:35,610 --> 00:12:40,860
at this point in time I think we're in

00:12:38,220 --> 00:12:47,070
the middle of the 80s by now or even

00:12:40,860 --> 00:12:51,750
later in 80s someone realized that

00:12:47,070 --> 00:12:54,000
perhaps this 18 T code was not the

00:12:51,750 --> 00:12:56,430
greatest greatest thing to having had to

00:12:54,000 --> 00:12:59,940
have laying read because it requires all

00:12:56,430 --> 00:13:03,450
the users of BSD UNIX to also have a 18

00:12:59,940 --> 00:13:05,510
C license and those were apparently

00:13:03,450 --> 00:13:11,310
perhaps not the cheapest ones to get by

00:13:05,510 --> 00:13:13,519
so work started to remove the 18 T code

00:13:11,310 --> 00:13:17,250
from from bsd unix

00:13:13,519 --> 00:13:23,519
to avoid be having to avoid the need for

00:13:17,250 --> 00:13:26,130
an 18 t license and this led up to

00:13:23,519 --> 00:13:30,450
what's called networking release one and

00:13:26,130 --> 00:13:32,430
this was made available even to people

00:13:30,450 --> 00:13:34,500
without an 18 t license previously it

00:13:32,430 --> 00:13:37,740
always needed an 18 t license to use

00:13:34,500 --> 00:13:47,339
this but now you don't and this was

00:13:37,740 --> 00:13:53,940
released in June of 1989 this code was

00:13:47,339 --> 00:13:56,790
also ported to if the i386 the new I 386

00:13:53,940 --> 00:14:02,160
computer from ento or it is the

00:13:56,790 --> 00:14:04,500
descendant I have it here today and this

00:14:02,160 --> 00:14:09,180
was done in to two ways there was the

00:14:04,500 --> 00:14:14,160
free 386bsd port which was done by by

00:14:09,180 --> 00:14:18,959
William Yates and a proprietary bc / 386

00:14:14,160 --> 00:14:23,120
later called beastie OS by a company

00:14:18,959 --> 00:14:23,120
called berkeley software design or BSD I

00:14:24,020 --> 00:14:34,320
and 386bsd is important because that's

00:14:31,020 --> 00:14:38,810
that's the origin of FreeBSD and now we

00:14:34,320 --> 00:14:42,480
know we're in time where the early 1990s

00:14:38,810 --> 00:14:47,459
so the FreeBSD project started from from

00:14:42,480 --> 00:14:49,590
the code of 386bsd in 1993 the 386bsd

00:14:47,459 --> 00:14:53,100
project itself was

00:14:49,590 --> 00:14:54,810
was kind of short-lived on the other

00:14:53,100 --> 00:14:59,280
hand the other side of things you had

00:14:54,810 --> 00:15:02,640
bsdi proprietary or proprietary bsd

00:14:59,280 --> 00:15:06,210
license and in this AT&T found out about

00:15:02,640 --> 00:15:08,940
this and they claim they still own

00:15:06,210 --> 00:15:12,480
copyright to two parts of this code

00:15:08,940 --> 00:15:16,110
because as I said earlier did previously

00:15:12,480 --> 00:15:20,580
you needed 18t license to use this so

00:15:16,110 --> 00:15:20,940
18t sued and it didn't only sue B is the

00:15:20,580 --> 00:15:23,910
I

00:15:20,940 --> 00:15:26,990
they also sued University of Berkeley in

00:15:23,910 --> 00:15:26,990
California and the state of California

00:15:27,650 --> 00:15:37,070
and during this time Linux kind of grew

00:15:32,310 --> 00:15:40,980
up to the start of Linux kind of game so

00:15:37,070 --> 00:15:43,200
the 18 t lawsuit was settled a couple of

00:15:40,980 --> 00:15:45,570
other on I don't know a couple of files

00:15:43,200 --> 00:15:47,340
of code needed to be rewritten some some

00:15:45,570 --> 00:15:50,460
things needed to call copyright

00:15:47,340 --> 00:15:54,600
statement stuff like that and in 1994 a

00:15:50,460 --> 00:15:57,000
new release of BSD and a new release of

00:15:54,600 --> 00:15:59,190
previously happened and this meant that

00:15:57,000 --> 00:16:04,620
that the code from Berkeley the BSD code

00:15:59,190 --> 00:16:08,490
was finally free and I need some

00:16:04,620 --> 00:16:11,670
something to drink because so while

00:16:08,490 --> 00:16:16,860
standing over here sorry from the 386bsd

00:16:11,670 --> 00:16:24,870
code three major projects sprung up at

00:16:16,860 --> 00:16:30,060
the start we have net BSD which started

00:16:24,870 --> 00:16:31,890
in 1993 and their aim their goal is is

00:16:30,060 --> 00:16:37,940
to be as portable and operating system

00:16:31,890 --> 00:16:41,340
as possible they run on everything

00:16:37,940 --> 00:16:45,420
FreeBSD which is a topic for today also

00:16:41,340 --> 00:16:48,440
came after the same code 386 BSD code in

00:16:45,420 --> 00:16:51,780
1993 and the main goals for FreeBSD is

00:16:48,440 --> 00:16:54,300
to be a mainstream performant and secure

00:16:51,780 --> 00:16:57,720
operating system so run on mainstream

00:16:54,300 --> 00:16:59,520
platforms in random mainstream hardware

00:16:57,720 --> 00:17:03,540
trying to cram out as much as possible

00:16:59,520 --> 00:17:07,650
out of this hardware so 100 gigabits for

00:17:03,540 --> 00:17:11,939
for instance we also have OpenBSD which

00:17:07,650 --> 00:17:14,280
is the last of the free Big B's the bsd

00:17:11,939 --> 00:17:17,240
operating systems and that's a fork of

00:17:14,280 --> 00:17:19,770
net bsd that happened in 1996

00:17:17,240 --> 00:17:21,559
there are several are smaller several

00:17:19,770 --> 00:17:25,079
smaller projects that happen later

00:17:21,559 --> 00:17:28,620
dragonfly bsd which is a fork of free bc

00:17:25,079 --> 00:17:30,870
true OS which is a downstream project

00:17:28,620 --> 00:17:34,140
from freebsd FreeNAS another downstream

00:17:30,870 --> 00:17:38,809
project for previously mac OS x mac OS

00:17:34,140 --> 00:17:42,690
as i mentioned it's also descendant and

00:17:38,809 --> 00:17:44,700
these these all these wolves all of the

00:17:42,690 --> 00:17:46,799
NetBSD OpenBSD FreeBSD dragonfly BSD and

00:17:44,700 --> 00:17:49,380
so on they are separate operating

00:17:46,799 --> 00:17:51,830
systems so they have their own Goochland

00:17:49,380 --> 00:17:54,360
their own kernel their own tools

00:17:51,830 --> 00:17:57,750
there is no beastie distribution there

00:17:54,360 --> 00:17:59,760
is no common beasty kernel of course I

00:17:57,750 --> 00:18:04,290
mean we share code between each other

00:17:59,760 --> 00:18:05,880
because why why event well at least you

00:18:04,290 --> 00:18:10,880
can try to avoid inventing the wheel

00:18:05,880 --> 00:18:10,880
sometimes it's it's very fun

00:18:20,930 --> 00:18:27,320
so as I said in the beginning a whole

00:18:25,730 --> 00:18:30,320
bunch of companies use free beastie I

00:18:27,320 --> 00:18:34,250
use free beastie I'm not company but I

00:18:30,320 --> 00:18:37,730
use 50 and it's it's wildly spread out

00:18:34,250 --> 00:18:40,550
all around the world in fact I don't

00:18:37,730 --> 00:18:42,950
think you can send a package across the

00:18:40,550 --> 00:18:46,820
internet with it at some point touching

00:18:42,950 --> 00:18:49,220
a freebie system or a bsd system I don't

00:18:46,820 --> 00:18:51,980
have any sources for that but my best

00:18:49,220 --> 00:18:54,559
guess is well why should you use it and

00:18:51,980 --> 00:18:59,420
why are all these big companies using

00:18:54,559 --> 00:19:03,020
freebie see so over the years FreeBSD

00:18:59,420 --> 00:19:04,220
has developed some great tools and

00:19:03,020 --> 00:19:07,340
there's being some great generation

00:19:04,220 --> 00:19:10,400
for instance the Windows NT kernel back

00:19:07,340 --> 00:19:15,800
in the day took the tcp/ip stack from

00:19:10,400 --> 00:19:18,290
previously in tcp/ip was an original bsd

00:19:15,800 --> 00:19:21,260
invention or the sockets were an

00:19:18,290 --> 00:19:22,670
original bsd invention and it TCP stack

00:19:21,260 --> 00:19:25,220
from previous table and wound up in

00:19:22,670 --> 00:19:28,670
Windows there's several other examples

00:19:25,220 --> 00:19:30,700
of tools some companies use used entire

00:19:28,670 --> 00:19:36,350
operating system some companies use

00:19:30,700 --> 00:19:40,880
parts of it FreeBSD has a these days has

00:19:36,350 --> 00:19:43,490
a mature release module as I said we've

00:19:40,880 --> 00:19:46,160
been going on since 1993 you can find

00:19:43,490 --> 00:19:48,620
all the code since since day one

00:19:46,160 --> 00:19:52,280
basically in our subversion repository

00:19:48,620 --> 00:19:57,020
yes we use subversion there is a good

00:19:52,280 --> 00:19:58,970
clone of the separation repository we

00:19:57,020 --> 00:20:05,679
have a release mature release module

00:19:58,970 --> 00:20:10,460
with releases every six to nine months

00:20:05,679 --> 00:20:15,140
we try to keep within a stable release

00:20:10,460 --> 00:20:17,740
branch what is as we say we try to keep

00:20:15,140 --> 00:20:19,960
things or we do our best to keep things

00:20:17,740 --> 00:20:22,940
compatible so for instance on the

00:20:19,960 --> 00:20:25,250
previous T 11 release branch if I

00:20:22,940 --> 00:20:27,140
compile something for FreeBSD 11.0 it

00:20:25,250 --> 00:20:30,200
will still run on the upcoming free

00:20:27,140 --> 00:20:32,110
beastie 11.3 there is a small asterisk

00:20:30,200 --> 00:20:34,460
because sometimes people make mistakes

00:20:32,110 --> 00:20:35,030
but in general so within the release

00:20:34,460 --> 00:20:37,700
problem

00:20:35,030 --> 00:20:40,640
we try to keep something things

00:20:37,700 --> 00:20:42,440
compatible it's not just someone loving

00:20:40,640 --> 00:20:45,770
a new kernel with new interfaces over a

00:20:42,440 --> 00:20:47,810
wall somewhere and this comes from from

00:20:45,770 --> 00:20:55,760
having everything developed at the same

00:20:47,810 --> 00:20:58,580
place we also have our business friendly

00:20:55,760 --> 00:21:02,620
license as people like to say and this

00:20:58,580 --> 00:21:07,580
is one of the major differences between

00:21:02,620 --> 00:21:12,380
between Linux and between BSD so the

00:21:07,580 --> 00:21:15,110
LGPL or the GPL is as far as I

00:21:12,380 --> 00:21:17,150
understand it if you write if you modify

00:21:15,110 --> 00:21:20,240
code under GPL you have to distribute it

00:21:17,150 --> 00:21:23,950
under GPL so the GPL is contagious in in

00:21:20,240 --> 00:21:27,920
a way the BSD license is very short and

00:21:23,950 --> 00:21:29,300
it basically say says you're free to do

00:21:27,920 --> 00:21:32,960
whatever would you want to do with this

00:21:29,300 --> 00:21:34,850
code or these binaries yes you know give

00:21:32,960 --> 00:21:38,900
us some credit from for originally

00:21:34,850 --> 00:21:41,780
writing it that's it basically this

00:21:38,900 --> 00:21:44,900
means that for instance Sony can take

00:21:41,780 --> 00:21:47,120
the free BC operating system slap on

00:21:44,900 --> 00:21:50,090
their own things and distribute it in

00:21:47,120 --> 00:21:53,660
the PlayStation 4 places or 4G owners

00:21:50,090 --> 00:21:55,940
can take FreeBSD add your own secret

00:21:53,660 --> 00:22:06,650
sauce on top of it and this read it as

00:21:55,940 --> 00:22:07,040
CEO knows and some people are okay with

00:22:06,650 --> 00:22:09,320
this

00:22:07,040 --> 00:22:12,040
some are or not that's why we have

00:22:09,320 --> 00:22:12,040
multiple licenses

00:22:19,170 --> 00:22:23,250
but that's one of the major differences

00:22:21,000 --> 00:22:25,250
so if you're creating a downstream

00:22:23,250 --> 00:22:29,210
project and appliance based on FreeBSD

00:22:25,250 --> 00:22:32,640
you don't have to be perhaps as careful

00:22:29,210 --> 00:22:34,560
about just redistributing your changes

00:22:32,640 --> 00:22:36,240
and things like that there are some

00:22:34,560 --> 00:22:38,610
tools in the freebsd based system that

00:22:36,240 --> 00:22:41,490
are still GPL biased because there is

00:22:38,610 --> 00:22:43,170
currently no alternatives work is

00:22:41,490 --> 00:22:46,830
ongoing on getting rid of the GPL

00:22:43,170 --> 00:22:51,390
license but the kernel is for most part

00:22:46,830 --> 00:22:54,180
completely free we also have a opening

00:22:51,390 --> 00:22:57,510
at least from my point of view friendly

00:22:54,180 --> 00:22:59,490
a nice community is one of the main

00:22:57,510 --> 00:23:00,960
reasons I use free BC or I keep using

00:22:59,490 --> 00:23:03,390
freebies to keep developing FreeBSD is

00:23:00,960 --> 00:23:04,590
I've met great people all around the

00:23:03,390 --> 00:23:08,910
world and have friends all around the

00:23:04,590 --> 00:23:13,580
world granted it might be a bit hard to

00:23:08,910 --> 00:23:13,580
to to get the foot in the door

00:23:14,390 --> 00:23:18,690
unfortunately it's something we have to

00:23:16,980 --> 00:23:21,120
improve our onboarding process has to be

00:23:18,690 --> 00:23:23,910
improved but it's not generally it's an

00:23:21,120 --> 00:23:27,870
open and friendly and nice community and

00:23:23,910 --> 00:23:29,310
from our company perspective it's fairly

00:23:27,870 --> 00:23:31,500
easy to get patches in for instance

00:23:29,310 --> 00:23:35,160
Netflix contributes code you know you

00:23:31,500 --> 00:23:36,390
never contribute some code Sony perhaps

00:23:35,160 --> 00:23:43,440
contributes code but we don't know about

00:23:36,390 --> 00:23:46,350
it and so on as I mentioned earlier

00:23:43,440 --> 00:23:49,380
another reason perhaps these use FreeBSD

00:23:46,350 --> 00:23:52,530
and something that I want to touch some

00:23:49,380 --> 00:23:54,150
more on is is this complete operating

00:23:52,530 --> 00:23:56,970
system because that's another thing that

00:23:54,150 --> 00:23:59,430
sets us apart from from Linux as I said

00:23:56,970 --> 00:24:02,670
it's a complete operating system this

00:23:59,430 --> 00:24:08,610
means that the kernel and all the

00:24:02,670 --> 00:24:11,160
drivers a usual and utilities base usual

00:24:08,610 --> 00:24:14,190
and utilities I mean your file file miss

00:24:11,160 --> 00:24:16,910
handling utilities LS copy/move stuff

00:24:14,190 --> 00:24:21,420
like that volume and volume at volume

00:24:16,910 --> 00:24:25,590
manager for disks everything this is

00:24:21,420 --> 00:24:30,510
developed together and it's released

00:24:25,590 --> 00:24:32,750
together so there is no risk of if I get

00:24:30,510 --> 00:24:35,840
free beastie 1200 release there

00:24:32,750 --> 00:24:41,290
no risk of some tools not operating with

00:24:35,840 --> 00:24:45,520
other tools or anything like that and

00:24:41,290 --> 00:24:45,520
everything is hopefully tested together

00:24:46,360 --> 00:24:53,360
so there is no no concept of a bsd

00:24:50,660 --> 00:24:54,860
distribution so well in the linux

00:24:53,360 --> 00:24:57,140
distribution is what you get when you

00:24:54,860 --> 00:24:58,880
someone takes tools from all these

00:24:57,140 --> 00:25:01,430
different places slap them together

00:24:58,880 --> 00:25:04,670
hopefully test them and distribute them

00:25:01,430 --> 00:25:07,010
as a unit in previously that's automatic

00:25:04,670 --> 00:25:08,180
since everything is developed everything

00:25:07,010 --> 00:25:14,240
in the core operating system is

00:25:08,180 --> 00:25:16,250
developed together we get that free

00:25:14,240 --> 00:25:19,520
beastie is also distributed with all the

00:25:16,250 --> 00:25:22,610
developer tools needed to start working

00:25:19,520 --> 00:25:25,940
on FreeBSD granted you don't get your

00:25:22,610 --> 00:25:27,140
favorite editor you have to live with

00:25:25,940 --> 00:25:35,870
avi or

00:25:27,140 --> 00:25:39,080
IDI but compilers debuggers build glue

00:25:35,870 --> 00:25:40,130
to actually build that tools to build it

00:25:39,080 --> 00:25:42,380
such as make and things like that

00:25:40,130 --> 00:25:44,420
everything is included in the base

00:25:42,380 --> 00:25:48,410
package so if I install the base system

00:25:44,420 --> 00:25:51,590
I get everything I need to start working

00:25:48,410 --> 00:25:55,060
on FreeBSD to update it to compile it to

00:25:51,590 --> 00:26:00,410
modify it so I don't need to fetch

00:25:55,060 --> 00:26:02,000
things from different places on top of

00:26:00,410 --> 00:26:05,510
that we have a packaging system as I

00:26:02,000 --> 00:26:07,630
hinted about it's called ports and this

00:26:05,510 --> 00:26:13,960
is where you get third-party packages so

00:26:07,630 --> 00:26:19,180
you know many xorg and Emacs and them in

00:26:13,960 --> 00:26:23,750
you know 30,000 other pieces of software

00:26:19,180 --> 00:26:26,900
and this is similar to to to after to

00:26:23,750 --> 00:26:29,270
jam or to anything the difference is the

00:26:26,900 --> 00:26:33,350
base system is not not packaged not yet

00:26:29,270 --> 00:26:34,940
anyway bye bye to like that so the

00:26:33,350 --> 00:26:38,620
system when it comes out of the box it's

00:26:34,940 --> 00:26:42,050
it's ready for development if if your

00:26:38,620 --> 00:26:46,370
sense of development is well C or C++

00:26:42,050 --> 00:26:48,500
code in the kernel but or base utilities

00:26:46,370 --> 00:26:49,730
but it's ready for development and if

00:26:48,500 --> 00:26:54,679
you need something else between Python

00:26:49,730 --> 00:26:57,429
go rest it's in the package system so

00:26:54,679 --> 00:26:57,429
you can get that as well

00:27:09,480 --> 00:27:16,029
so that was an overview of free beastie

00:27:13,990 --> 00:27:22,570
what free beast is and the history of

00:27:16,029 --> 00:27:24,940
free BC vsts let's move on to to some of

00:27:22,570 --> 00:27:27,720
the features of free beastie watch what

00:27:24,940 --> 00:27:31,529
can this operating system actually do

00:27:27,720 --> 00:27:31,529
and what can you do for you

00:27:34,500 --> 00:27:41,139
so start off free beastie as good

00:27:37,600 --> 00:27:44,379
hardware support we support most of the

00:27:41,139 --> 00:27:46,950
latest things and some desktop hardware

00:27:44,379 --> 00:27:50,769
may lag a bit behind because

00:27:46,950 --> 00:27:52,899
unfortunately we don't have access to as

00:27:50,769 --> 00:27:55,570
much developer time and as much inside

00:27:52,899 --> 00:27:58,080
us as Linux but most hardware is well

00:27:55,570 --> 00:28:01,210
supported especially server hardware

00:27:58,080 --> 00:28:04,539
several companies support free beastie

00:28:01,210 --> 00:28:09,700
with drivers and documentation for

00:28:04,539 --> 00:28:13,899
further hardware which support multiple

00:28:09,700 --> 00:28:17,110
CPU architectures so you know your

00:28:13,899 --> 00:28:22,289
regular PI 386 and named a 6 to 4 stuff

00:28:17,110 --> 00:28:24,580
for x64 staff but also arm arm 64 MIPS

00:28:22,289 --> 00:28:27,100
PowerPC powers PC 64

00:28:24,580 --> 00:28:31,659
I still think SPARC sister forests are

00:28:27,100 --> 00:28:33,879
in but that's kind of dying we also

00:28:31,659 --> 00:28:38,080
support something that's called risk

00:28:33,879 --> 00:28:39,730
fire which is a fairly new thing which

00:28:38,080 --> 00:28:41,970
means it's probably at least 5 years old

00:28:39,730 --> 00:28:41,970
at this point

00:28:44,570 --> 00:28:48,919
another feature of previously that I'm

00:28:46,759 --> 00:28:50,389
find very attractive is I find it quite

00:28:48,919 --> 00:28:53,149
easy to configure the base system is

00:28:50,389 --> 00:28:55,099
easy to configure its you find the

00:28:53,149 --> 00:28:57,739
source you find the configure place it's

00:28:55,099 --> 00:29:00,499
it's it's in one place basically it's

00:28:57,739 --> 00:29:03,499
not spread out in multiple configure

00:29:00,499 --> 00:29:06,739
file configuration files it's not like

00:29:03,499 --> 00:29:08,239
it see just configure on RedHat stuff

00:29:06,739 --> 00:29:11,679
like that so it's fairly easy to

00:29:08,239 --> 00:29:11,679
configure fairly easy to use

00:29:21,210 --> 00:29:27,150
yeah we have five systems obviously it's

00:29:25,920 --> 00:29:29,700
very hard to have a complete operating

00:29:27,150 --> 00:29:32,520
system without any file systems you can

00:29:29,700 --> 00:29:37,190
probably tribe so we have the

00:29:32,520 --> 00:29:40,800
battle-hardened you know Ancients from

00:29:37,190 --> 00:29:45,450
BSD at Berkeley origin ufs or fast file

00:29:40,800 --> 00:29:46,770
system or universal file system or you

00:29:45,450 --> 00:29:50,040
know in Sweden we are saying that

00:29:46,770 --> 00:29:51,750
beloved kid has many names so I'm not

00:29:50,040 --> 00:29:53,910
sure EFSA's beloved but it has many

00:29:51,750 --> 00:29:57,390
names and this this file system has been

00:29:53,910 --> 00:30:00,420
is been around it exists in in different

00:29:57,390 --> 00:30:04,100
versions in I mean all the Beasties it

00:30:00,420 --> 00:30:07,020
exists in a lot of commercial unix is

00:30:04,100 --> 00:30:08,610
solaris for instance if hp-ux and stuff

00:30:07,020 --> 00:30:11,010
like that in different versions they're

00:30:08,610 --> 00:30:14,280
not entirely compatible so this is the

00:30:11,010 --> 00:30:15,690
bellhart and all file system and there's

00:30:14,280 --> 00:30:17,250
been some changes to it through the

00:30:15,690 --> 00:30:18,990
years it has journaling now it didn't

00:30:17,250 --> 00:30:22,200
have the beginning you don't have to do

00:30:18,990 --> 00:30:26,150
F check since forever and stuff like

00:30:22,200 --> 00:30:32,220
that we also have the the slightly newer

00:30:26,150 --> 00:30:35,910
file system CFS CFS the port of CSF CFS

00:30:32,220 --> 00:30:37,500
to FreeBSD was completed that were well

00:30:35,910 --> 00:30:39,950
the port is never completed because it's

00:30:37,500 --> 00:30:45,180
kept keep on updated but it first saw

00:30:39,950 --> 00:30:50,070
the light of day in nineteen in 27 so

00:30:45,180 --> 00:30:53,790
over ten years ago I'll just touch see

00:30:50,070 --> 00:30:55,860
if as briefly because I mean talking

00:30:53,790 --> 00:30:58,440
about CFS is at least an hour or maybe

00:30:55,860 --> 00:31:00,240
an whole day and I think you want will

00:30:58,440 --> 00:31:03,720
be the angle with me if I take that much

00:31:00,240 --> 00:31:05,370
time so CFS is a false advanced file

00:31:03,720 --> 00:31:05,820
system and a volume and Jers mac

00:31:05,370 --> 00:31:09,840
together

00:31:05,820 --> 00:31:13,950
it came originally from solaris it was

00:31:09,840 --> 00:31:15,480
ported as I said previously in 2007 and

00:31:13,950 --> 00:31:18,210
in previously is a first-class citizen

00:31:15,480 --> 00:31:21,480
is it's developed and released as part

00:31:18,210 --> 00:31:24,270
of the base system you can install on as

00:31:21,480 --> 00:31:26,280
see if you can install your computer

00:31:24,270 --> 00:31:27,840
your operating system your boot drive

00:31:26,280 --> 00:31:31,440
and everything on CFS from the Installer

00:31:27,840 --> 00:31:33,390
there's no need to fetch fetch packages

00:31:31,440 --> 00:31:35,780
or kernel modules or anything from from

00:31:33,390 --> 00:31:35,780
anywhere else

00:31:40,870 --> 00:31:48,429
we also have a bunch of other file

00:31:42,770 --> 00:31:48,429
systems fat fuse and so on and so forth

00:31:51,250 --> 00:31:59,059
moving on to security we have stuff like

00:31:54,409 --> 00:32:00,260
mandatory access control which is higher

00:31:59,059 --> 00:32:02,210
grade security I don't know it's

00:32:00,260 --> 00:32:04,820
basically you have to give everything

00:32:02,210 --> 00:32:07,429
access right

00:32:04,820 --> 00:32:09,799
it's it might be liked by you know

00:32:07,429 --> 00:32:12,230
secure instance military stuff like that

00:32:09,799 --> 00:32:16,490
I cannot say I understand it completely

00:32:12,230 --> 00:32:18,830
but if you need it it's there we have an

00:32:16,490 --> 00:32:21,289
audit framework to you know audit

00:32:18,830 --> 00:32:25,970
syscalls and what's going on on your on

00:32:21,289 --> 00:32:30,880
your very secure system and we have a

00:32:25,970 --> 00:32:33,289
tool called capsicum which is a process

00:32:30,880 --> 00:32:34,669
capabilities in containment tool so

00:32:33,289 --> 00:32:37,159
basically a process

00:32:34,669 --> 00:32:39,470
it tells I need to do this in this and

00:32:37,159 --> 00:32:41,210
this and only this and this is my

00:32:39,470 --> 00:32:44,840
understanding of it it's it's also a

00:32:41,210 --> 00:32:46,130
full day at least talk but so a process

00:32:44,840 --> 00:32:48,110
can declare I only need to do this

00:32:46,130 --> 00:32:51,020
things and you're somehow there are some

00:32:48,110 --> 00:32:52,309
things in the kernel to to tell the

00:32:51,020 --> 00:32:56,240
process that well you're not allowed to

00:32:52,309 --> 00:32:57,799
do this or stuff like that if you try to

00:32:56,240 --> 00:32:59,870
do something you declared that you want

00:32:57,799 --> 00:33:03,020
to and there's also some helpers in the

00:32:59,870 --> 00:33:06,320
kernel because certain things like DNS

00:33:03,020 --> 00:33:07,549
resolvers need things that perhaps you

00:33:06,320 --> 00:33:10,960
kind of provide your process or their

00:33:07,549 --> 00:33:10,960
services to help with that

00:33:14,040 --> 00:33:21,340
you also have Yale's which is another

00:33:18,040 --> 00:33:23,260
process containment tool as I've written

00:33:21,340 --> 00:33:31,060
here it's it's the original container

00:33:23,260 --> 00:33:33,610
platform because it kind of is its boys

00:33:31,060 --> 00:33:38,140
invaded invented in the late 1990s if

00:33:33,610 --> 00:33:42,070
I'm not mistaken and it's a way of it

00:33:38,140 --> 00:33:47,410
started as a chroot on steroids but it's

00:33:42,070 --> 00:33:50,290
a way of encapsulating processes in

00:33:47,410 --> 00:33:52,900
their own runtime environments basically

00:33:50,290 --> 00:33:55,270
so the process they're different yells

00:33:52,900 --> 00:33:57,370
they share the same kernel and stuff

00:33:55,270 --> 00:33:58,990
like that but they they have separate

00:33:57,370 --> 00:34:01,450
filesystem namespaces they kind of talk

00:33:58,990 --> 00:34:05,340
to each other apart from using you know

00:34:01,450 --> 00:34:07,600
regular networks and stuff like that so

00:34:05,340 --> 00:34:09,190
for instance you can have your web

00:34:07,600 --> 00:34:10,720
server in one Yale and you can have your

00:34:09,190 --> 00:34:12,790
other web server in another Yale and you

00:34:10,720 --> 00:34:16,300
can have a mail server in one in in the

00:34:12,790 --> 00:34:17,740
third Yale or you can have I mean if

00:34:16,300 --> 00:34:21,129
your hosting company you can have one

00:34:17,740 --> 00:34:23,020
web server in one Yale each for all

00:34:21,129 --> 00:34:24,190
their customers and you can give give

00:34:23,020 --> 00:34:27,010
your customers the route within that

00:34:24,190 --> 00:34:29,320
Yale that means they don't have it

00:34:27,010 --> 00:34:30,700
written the hosts so it's a fairly it's

00:34:29,320 --> 00:34:33,000
a very lightweight since they all share

00:34:30,700 --> 00:34:34,840
the same kernel is a very lightweight

00:34:33,000 --> 00:34:38,800
virtualization thing because there's no

00:34:34,840 --> 00:34:40,270
actual virtualization we also have a

00:34:38,800 --> 00:34:42,850
vert alized network stack so you can

00:34:40,270 --> 00:34:46,659
even give these yells separate network

00:34:42,850 --> 00:34:49,360
stacks or originally they share the

00:34:46,659 --> 00:34:54,520
network stack which perhaps gave some

00:34:49,360 --> 00:34:56,620
some some problems but these days you

00:34:54,520 --> 00:34:58,930
can have completely separate network

00:34:56,620 --> 00:35:02,110
stacks for all your nails so this is the

00:34:58,930 --> 00:35:06,070
original original container platform

00:35:02,110 --> 00:35:09,460
Solaris based our stones on it and I

00:35:06,070 --> 00:35:12,280
guess in a way it still trend for as an

00:35:09,460 --> 00:35:15,490
idea for for the container platforms in

00:35:12,280 --> 00:35:19,300
learning so today and I still don't

00:35:15,490 --> 00:35:20,950
think anyone has actually managed to

00:35:19,300 --> 00:35:23,260
break out of jails there's been some

00:35:20,950 --> 00:35:24,820
incidents where bad similes and stuff

00:35:23,260 --> 00:35:26,440
like that in the default installation

00:35:24,820 --> 00:35:27,700
has caused issues but I don't think

00:35:26,440 --> 00:35:31,220
anyone is actually

00:35:27,700 --> 00:35:35,630
broken out of a jail without using

00:35:31,220 --> 00:35:40,509
something else so we talked about

00:35:35,630 --> 00:35:44,630
networking and tcp/ip bsd is the

00:35:40,509 --> 00:35:46,849
original tcp/ip implementation today

00:35:44,630 --> 00:35:51,279
free bcs for IP version 4 and IP version

00:35:46,849 --> 00:35:56,029
6 support we have a thing called

00:35:51,279 --> 00:35:59,450
pluggable TCP stacks this means that you

00:35:56,029 --> 00:36:02,839
can change between different congestion

00:35:59,450 --> 00:36:04,220
control algorithms like that I am I know

00:36:02,839 --> 00:36:06,109
a bit about networking but I'm not a

00:36:04,220 --> 00:36:09,980
network engineer so I don't understand

00:36:06,109 --> 00:36:12,259
all of it but I mean one tcp/ip was

00:36:09,980 --> 00:36:14,569
invented you had long strings but it was

00:36:12,259 --> 00:36:18,230
very small these days we have short

00:36:14,569 --> 00:36:20,720
strings that are huge so there are

00:36:18,230 --> 00:36:22,190
different ways of handling this and you

00:36:20,720 --> 00:36:24,440
can plug in different congestion control

00:36:22,190 --> 00:36:26,319
algorithms different different ways or

00:36:24,440 --> 00:36:31,910
tuning your tcp/ip stack in previously

00:36:26,319 --> 00:36:36,289
too as I said push 100 gigabit you also

00:36:31,910 --> 00:36:40,190
have several firewalls IP FV is the most

00:36:36,289 --> 00:36:42,200
is the original ones we have PF which

00:36:40,190 --> 00:36:46,489
originally came from OpenBSD speaking of

00:36:42,200 --> 00:36:48,470
co-chairing stuff like we have a third

00:36:46,489 --> 00:36:50,589
one but we don't really talk about that

00:36:48,470 --> 00:36:50,589
one

00:36:51,759 --> 00:36:58,640
so most are free beastie are most

00:36:56,660 --> 00:37:01,099
architectures freebies for chooses to

00:36:58,640 --> 00:37:03,799
LLVM toolchain as opposed to the GCC

00:37:01,099 --> 00:37:06,200
toolchain so we use clang we use ll DB

00:37:03,799 --> 00:37:10,369
which is the debugger we use L LD which

00:37:06,200 --> 00:37:13,400
is the linker in C and C++ tool chains

00:37:10,369 --> 00:37:17,119
are not super interesting these days so

00:37:13,400 --> 00:37:20,269
we'll skip that previously was the first

00:37:17,119 --> 00:37:25,130
port outside of Solaris of dtrace as far

00:37:20,269 --> 00:37:28,039
as I know and dtrace is another you know

00:37:25,130 --> 00:37:30,640
day to day lecture thing but it's it's a

00:37:28,039 --> 00:37:35,210
way to do dynamic tracing your processes

00:37:30,640 --> 00:37:36,650
you can see inside system calls and it

00:37:35,210 --> 00:37:39,230
gives you a system transparency and this

00:37:36,650 --> 00:37:41,090
is a great tool for debugging for

00:37:39,230 --> 00:37:43,130
performance evaluations

00:37:41,090 --> 00:37:45,080
and things like that and this is built

00:37:43,130 --> 00:37:47,630
into this comes as part of the base

00:37:45,080 --> 00:37:51,950
system and then there are some tools and

00:37:47,630 --> 00:37:53,510
ports for for easier management but this

00:37:51,950 --> 00:37:59,690
is part of the freebsd base system and

00:37:53,510 --> 00:38:02,660
it's a first-class citizen we also have

00:37:59,690 --> 00:38:05,960
a hypervisor because who doesn't have a

00:38:02,660 --> 00:38:11,930
hypervisor dieses in freebsd it's called

00:38:05,960 --> 00:38:15,110
beehive and this is also this hyper Isis

00:38:11,930 --> 00:38:18,280
also ported to the Moose and its

00:38:15,110 --> 00:38:19,600
protection already it's ready for use

00:38:18,280 --> 00:38:23,020
[Music]

00:38:19,600 --> 00:38:25,880
free/busy can also use on send both as a

00:38:23,020 --> 00:38:29,920
clients of sorts and even as a dom0 I

00:38:25,880 --> 00:38:29,920
think it's called in sense and language

00:38:31,090 --> 00:38:39,650
we also have this the Linux system

00:38:35,480 --> 00:38:41,630
called emulation layer so what in the

00:38:39,650 --> 00:38:44,420
FreeBSD kernel there is a combat layers

00:38:41,630 --> 00:38:49,540
that makes it possible to run not all

00:38:44,420 --> 00:38:51,590
but a lot of Linux binaries and

00:38:49,540 --> 00:38:53,720
apparently I haven't done the benchmarks

00:38:51,590 --> 00:38:56,960
myself but in some cases they even run

00:38:53,720 --> 00:39:01,400
faster so it's possible for instance is

00:38:56,960 --> 00:39:03,740
set up in jail with a tool with a stack

00:39:01,400 --> 00:39:07,490
with a software stack from from Linux

00:39:03,740 --> 00:39:10,310
and run it William FreeBSD or you can

00:39:07,490 --> 00:39:13,870
use behave if you need so files such as

00:39:10,310 --> 00:39:13,870
Windows you can run Windows in behalf

00:39:20,810 --> 00:39:29,480
I talked a bit about ports and packages

00:39:23,060 --> 00:39:34,940
so ports is forces - previously packages

00:39:29,480 --> 00:39:38,390
basically and real I'm back I probably

00:39:34,940 --> 00:39:39,590
touch the keel ports is the source from

00:39:38,390 --> 00:39:43,220
which packages are built

00:39:39,590 --> 00:39:44,810
in short it used to be that from

00:39:43,220 --> 00:39:46,940
previously you had to compile all your

00:39:44,810 --> 00:39:51,080
third-party packages from ports by

00:39:46,940 --> 00:39:52,340
yourself these days we do have binary

00:39:51,080 --> 00:39:55,810
packages and we have had it for quite

00:39:52,340 --> 00:40:00,830
some time and these packages are built

00:39:55,810 --> 00:40:03,800
using the ports as source and ports is a

00:40:00,830 --> 00:40:05,720
set of make files in blue to tell you

00:40:03,800 --> 00:40:09,170
how you build this specific software

00:40:05,720 --> 00:40:11,600
such as Emacs on FreeBSD and this is all

00:40:09,170 --> 00:40:15,220
built by pod rear which is the tool that

00:40:11,600 --> 00:40:17,780
we use to build packages on FreeBSD and

00:40:15,220 --> 00:40:19,520
food rear is the tool used to build

00:40:17,780 --> 00:40:20,900
official packages you can also run this

00:40:19,520 --> 00:40:22,880
to yourself so for instance if you have

00:40:20,900 --> 00:40:25,130
company internal software or if you knew

00:40:22,880 --> 00:40:26,480
its special compiled flags and stuff

00:40:25,130 --> 00:40:28,730
like that you can use pure air to build

00:40:26,480 --> 00:40:30,980
your own package set point your free

00:40:28,730 --> 00:40:34,660
beastie hosts to well here's my packages

00:40:30,980 --> 00:40:34,660
use this to build and study

00:40:42,080 --> 00:40:50,570
so that was a bit about the BBC features

00:40:47,540 --> 00:40:53,150
I also want to mention a couple words

00:40:50,570 --> 00:40:55,610
about about how the free/busy project is

00:40:53,150 --> 00:41:00,280
run as I said early in the presentation

00:40:55,610 --> 00:41:02,360
freebie is one of the largest and oldest

00:41:00,280 --> 00:41:04,180
open-source software projects and also

00:41:02,360 --> 00:41:06,440
one of the oldest and largest

00:41:04,180 --> 00:41:12,020
democratically run open-source software

00:41:06,440 --> 00:41:15,520
projects so free BC is led by a core

00:41:12,020 --> 00:41:19,280
team the core team is nine people and

00:41:15,520 --> 00:41:23,270
they are elected every every two years

00:41:19,280 --> 00:41:24,770
from from the group of active its

00:41:23,270 --> 00:41:27,170
elected by the group of active

00:41:24,770 --> 00:41:28,310
previously committers and active

00:41:27,170 --> 00:41:31,700
previously committed someone has

00:41:28,310 --> 00:41:33,830
committed code I think at least in the

00:41:31,700 --> 00:41:37,930
latest year or something like that and

00:41:33,830 --> 00:41:40,910
we we people we elect from ourselves a

00:41:37,930 --> 00:41:43,010
group of people that acts sort of like a

00:41:40,910 --> 00:41:46,490
steering committee for FreeBSD they

00:41:43,010 --> 00:41:48,530
handle in some cases probably which

00:41:46,490 --> 00:41:51,650
technical direction we want to take they

00:41:48,530 --> 00:41:53,590
can act as arbiters of a conflict when

00:41:51,650 --> 00:41:57,200
people have disagreeing on technical

00:41:53,590 --> 00:41:59,810
solutions to things and they also decide

00:41:57,200 --> 00:42:02,600
who gets a commitment basically we also

00:41:59,810 --> 00:42:04,430
have underneath core or starting up more

00:42:02,600 --> 00:42:06,320
and more working groups because turns

00:42:04,430 --> 00:42:08,390
out nine people sometimes is too few

00:42:06,320 --> 00:42:10,700
people so for instance I'm part of the

00:42:08,390 --> 00:42:12,800
graphics working group for people

00:42:10,700 --> 00:42:14,360
interested in in graphics and exploring

00:42:12,800 --> 00:42:18,920
stuff on FreeBSD there's a networking

00:42:14,360 --> 00:42:20,060
working group there is probably two team

00:42:18,920 --> 00:42:23,720
working group there's a bunch of working

00:42:20,060 --> 00:42:25,190
so so this is this is how the project is

00:42:23,720 --> 00:42:31,160
managed and set up and this is how we

00:42:25,190 --> 00:42:34,430
try to make progress I also want to

00:42:31,160 --> 00:42:36,290
mention the FreeBSD Foundation the

00:42:34,430 --> 00:42:39,260
FreeBSD Foundation supports the FreeBSD

00:42:36,290 --> 00:42:42,980
project it's it's a separate thing but

00:42:39,260 --> 00:42:44,720
then also not a separate thing this is

00:42:42,980 --> 00:42:47,990
the entity that manages for instance

00:42:44,720 --> 00:42:49,400
donations if you if you have money left

00:42:47,990 --> 00:42:53,780
over you can donate to FreeBSD project

00:42:49,400 --> 00:42:55,640
and the previous foundation uses this to

00:42:53,780 --> 00:42:57,740
support the FreeBSD project the

00:42:55,640 --> 00:43:00,560
a couple developers on payroll they

00:42:57,740 --> 00:43:02,690
sponsor conferences sponsor developers

00:43:00,560 --> 00:43:05,390
to travel to conferences things like

00:43:02,690 --> 00:43:07,250
that thinks you need money for and the

00:43:05,390 --> 00:43:10,940
FreeBSD Foundation also acts as a legal

00:43:07,250 --> 00:43:13,400
entity for the free BC project so they

00:43:10,940 --> 00:43:16,910
apparently you need to keep track of

00:43:13,400 --> 00:43:19,490
your IP such as logos and trademarks and

00:43:16,910 --> 00:43:21,890
things like that so the previous

00:43:19,490 --> 00:43:29,660
foundation access to legal entity and if

00:43:21,890 --> 00:43:30,680
it's needed so where can you get free

00:43:29,660 --> 00:43:35,540
beastie I mean I've been talking for

00:43:30,680 --> 00:43:39,170
free BC for 45 minutes now and perhaps I

00:43:35,540 --> 00:43:41,600
hope all of you want to try that even

00:43:39,170 --> 00:43:45,650
you know not just on PlayStation 4 or

00:43:41,600 --> 00:43:48,140
you knows so some resources the main one

00:43:45,650 --> 00:43:52,880
the free BC website dub dub dub that

00:43:48,140 --> 00:43:55,880
free visit org we also mentioned we use

00:43:52,880 --> 00:43:58,010
subversion we do have a github mirror

00:43:55,880 --> 00:43:59,900
it's read-only unfortunately at least

00:43:58,010 --> 00:44:03,080
currently you can't make pull requests

00:43:59,900 --> 00:44:05,660
on github but just start working we have

00:44:03,080 --> 00:44:09,140
a github repository then we use bugzilla

00:44:05,660 --> 00:44:14,330
for managing peers we have mailing lists

00:44:09,140 --> 00:44:16,490
we have lots of mailing lists and and we

00:44:14,330 --> 00:44:18,920
have the freebsd handbook as a starting

00:44:16,490 --> 00:44:23,840
resource which is sort of the

00:44:18,920 --> 00:44:25,700
documentation so these are starting

00:44:23,840 --> 00:44:28,870
points if you want to try that there are

00:44:25,700 --> 00:44:31,610
ready-made images for VirtualBox or

00:44:28,870 --> 00:44:36,340
VMware and stuff like that installation

00:44:31,610 --> 00:44:36,340
ISOs so on

00:44:40,230 --> 00:44:47,640
that's that's that's about what I had so

00:44:44,150 --> 00:44:50,240
any questions any any comments any

00:44:47,640 --> 00:44:50,240
flamewars

00:44:50,780 --> 00:45:01,190
does it run on amiga hi i just wanted to

00:44:57,810 --> 00:45:05,579
ask a little bit about linux is called

00:45:01,190 --> 00:45:08,609
translation yep so last time I tried it

00:45:05,579 --> 00:45:11,490
out it was like quite impressive but not

00:45:08,609 --> 00:45:15,420
at the level which Alumnus achieves if

00:45:11,490 --> 00:45:17,820
you know their project where you can run

00:45:15,420 --> 00:45:22,020
basically any docker container right out

00:45:17,820 --> 00:45:27,150
of the box I'm not familiar with the

00:45:22,020 --> 00:45:28,619
with illumise when I don't I mean this

00:45:27,150 --> 00:45:30,300
holes have to be implemented there might

00:45:28,619 --> 00:45:37,829
be some missing I'm not familiar with

00:45:30,300 --> 00:45:41,339
what illumise has done in there is do or

00:45:37,829 --> 00:45:43,920
familiar with smart to us yep yeah at

00:45:41,339 --> 00:45:47,670
least yes you can basically run any

00:45:43,920 --> 00:45:50,569
docker container out of the box and it's

00:45:47,670 --> 00:45:54,420
basically transparent so it's for me

00:45:50,569 --> 00:45:56,069
using using it in a professional

00:45:54,420 --> 00:45:58,859
environment where Linux is very

00:45:56,069 --> 00:46:01,230
widespread it usually makes it easier to

00:45:58,859 --> 00:46:03,869
convince people to use that operating

00:46:01,230 --> 00:46:06,390
system so but yeah if you don't know it

00:46:03,869 --> 00:46:09,690
it's fine I'm not very familiar with the

00:46:06,390 --> 00:46:12,720
Luminess unfortunately yeah but if the

00:46:09,690 --> 00:46:14,940
free/busy of linux is called compiler is

00:46:12,720 --> 00:46:18,710
not enough you can always use run it in

00:46:14,940 --> 00:46:23,220
behave but sorry for not knowing about

00:46:18,710 --> 00:46:25,140
it's fine I just wanted to ask more

00:46:23,220 --> 00:46:27,839
questions I think we still have some

00:46:25,140 --> 00:46:30,000
time we have plenty of time you have

00:46:27,839 --> 00:46:36,770
plenty of time even eight minutes it's

00:46:30,000 --> 00:46:39,800
awesome no more hands no no more hands

00:46:36,770 --> 00:46:39,800
one more

00:46:47,210 --> 00:46:53,520
you mentioned that a couple of companies

00:46:49,950 --> 00:46:56,610
have contributed back code yep

00:46:53,520 --> 00:46:58,920
do you also are you also aware of how

00:46:56,610 --> 00:47:02,880
many companies like support the project

00:46:58,920 --> 00:47:05,400
with donations the FreeBSD Foundation

00:47:02,880 --> 00:47:10,110
has a list of both company and

00:47:05,400 --> 00:47:11,640
individual individual donors I don't

00:47:10,110 --> 00:47:15,060
know the rest on top of my head but

00:47:11,640 --> 00:47:18,930
there are several ones so if you go to

00:47:15,060 --> 00:47:23,040
the FreeBSD Foundation website there is

00:47:18,930 --> 00:47:24,930
a list of donors and I mean in some

00:47:23,040 --> 00:47:26,400
cases companies want to donate but I

00:47:24,930 --> 00:47:28,410
don't want to know that they have

00:47:26,400 --> 00:47:29,880
donated because perhaps they don't want

00:47:28,410 --> 00:47:32,490
want people to know that you're using

00:47:29,880 --> 00:47:36,210
previously so in some cases donations

00:47:32,490 --> 00:47:40,560
are anonymous perhaps yeah but there is

00:47:36,210 --> 00:47:43,820
a list yeah I'm curious how much

00:47:40,560 --> 00:47:47,880
maintenance like old architectures are

00:47:43,820 --> 00:47:50,310
for example you mentioned PowerPC being

00:47:47,880 --> 00:47:54,960
still maintained which I lost with

00:47:50,310 --> 00:48:01,080
Debian for example and like how long can

00:47:54,960 --> 00:48:04,220
we expect things to live question in the

00:48:01,080 --> 00:48:06,060
world not being a kernel kernel

00:48:04,220 --> 00:48:09,330
developer I don't know there are

00:48:06,060 --> 00:48:11,570
discussions about some of the older

00:48:09,330 --> 00:48:13,980
architectures such as Park System for

00:48:11,570 --> 00:48:17,940
being a burden rather than something

00:48:13,980 --> 00:48:19,170
that's still useful unfortunately I

00:48:17,940 --> 00:48:22,110
can't really answer your question

00:48:19,170 --> 00:48:24,930
depends on for a foreign architecture to

00:48:22,110 --> 00:48:27,530
be viable there has to be people using

00:48:24,930 --> 00:48:30,810
it and working on it has to be hardware

00:48:27,530 --> 00:48:33,840
that's readily available I guess in the

00:48:30,810 --> 00:48:36,240
power case of PowerPC it has some

00:48:33,840 --> 00:48:39,690
benefit of there being a PowerPC 64 port

00:48:36,240 --> 00:48:42,110
so put out knowing very much about power

00:48:39,690 --> 00:48:44,850
piece in PowerPC 64 there might be some

00:48:42,110 --> 00:48:47,940
some way for it to live on that way and

00:48:44,850 --> 00:48:54,370
stuff like that similar to to eyford 6x6

00:48:47,940 --> 00:48:56,860
and aimless is for x64 but

00:48:54,370 --> 00:48:59,290
I mean the as I said the platform has to

00:48:56,860 --> 00:49:01,690
be available hardware has to be

00:48:59,290 --> 00:49:03,370
available it has to have enough

00:49:01,690 --> 00:49:07,600
performance to actually run free BC

00:49:03,370 --> 00:49:09,910
because you need I mean you don't need a

00:49:07,600 --> 00:49:12,400
large computer in the world but you need

00:49:09,910 --> 00:49:18,580
at least a bit of RAM and a bit of CPU

00:49:12,400 --> 00:49:21,700
to run it I know that was the best-known

00:49:18,580 --> 00:49:23,170
answer in world but that's I think

00:49:21,700 --> 00:49:30,270
that's that's the best I can give you

00:49:23,170 --> 00:49:33,270
unfortunately do we have a last question

00:49:30,270 --> 00:49:33,270
otherwise

00:49:37,900 --> 00:49:49,419
would you consider FreeBSD to be more

00:49:40,630 --> 00:49:51,309
secure than the Linux yes or no no

00:49:49,419 --> 00:49:53,799
matter how I answer this one I will get

00:49:51,309 --> 00:49:58,719
Tomatoes thrown at me somehow so I think

00:49:53,799 --> 00:50:01,419
I think I will not answer it to be

00:49:58,719 --> 00:50:03,130
honest I mean I know a bit of IT

00:50:01,419 --> 00:50:08,109
security and stuff like that but I'm not

00:50:03,130 --> 00:50:09,819
a IT security researcher so I I'm too

00:50:08,109 --> 00:50:11,829
much of a coward to actually you know

00:50:09,819 --> 00:50:18,640
stick my chin out as we say in tradition

00:50:11,829 --> 00:50:21,729
and given give a good answer thank you

00:50:18,640 --> 00:50:23,289
thank you so yeah that was it if you

00:50:21,729 --> 00:50:24,909
have more questions or want to know more

00:50:23,289 --> 00:50:27,119
and what or want to try it out and

00:50:24,909 --> 00:50:30,459
anything I'm here today and tomorrow

00:50:27,119 --> 00:50:31,209
otherwise you can reach me an email on

00:50:30,459 --> 00:50:33,699
Twitter

00:50:31,209 --> 00:50:36,159
my name is really really easy to Google

00:50:33,699 --> 00:50:38,610
so you will probably find a way to

00:50:36,159 --> 00:50:44,530
contact me thank you

00:50:38,610 --> 00:50:44,530
[Applause]

00:50:50,450 --> 00:50:52,510

YouTube URL: https://www.youtube.com/watch?v=0Rfr-ztX4JE


