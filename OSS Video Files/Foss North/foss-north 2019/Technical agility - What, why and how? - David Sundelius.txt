Title: Technical agility - What, why and how? - David Sundelius
Publication date: 2019-04-19
Playlist: foss-north 2019
Description: 
	Is it just a buzzword that forces you to stand up during your morning meetings? No! Agility for the developer, the organization and the business are all parts of getting a workplace that is motivating and continually learning. During this time the technical part of agile will be presented, and how it can affect the organization, product and people. Some hands-on ideas on how to increase your organizations technical agility are also promised.

---

David has experience with rendering techniques for lighting, programming language development and front end architecture for web applications, but is now working as a technical agile coach. Heâ€™s main focus is to help team to continuously improve their work situation through technology, ways of working and self organization.

https://foss-north.se/2019/speakers-and-talks.html#dsundelius
Captions: 
	00:00:15,950 --> 00:00:22,040
hi I'm Dorothy Elias I'm here today to

00:00:19,340 --> 00:00:25,310
talk to you about technical agility I'm

00:00:22,040 --> 00:00:26,630
on technical agile coach at Praja and I

00:00:25,310 --> 00:00:29,420
work in a Gothenburg with the

00:00:26,630 --> 00:00:33,739
organization's to to make them more

00:00:29,420 --> 00:00:35,680
lightweight and more easy to change okay

00:00:33,739 --> 00:00:38,030
so why am i an agile coach at

00:00:35,680 --> 00:00:40,550
development conference that we are

00:00:38,030 --> 00:00:42,559
aren't we just the guys to tell you to

00:00:40,550 --> 00:00:45,250
to stand up during your morning meetings

00:00:42,559 --> 00:00:48,500
and report your story points in JIRA

00:00:45,250 --> 00:00:48,800
yeah I think some of you know what I

00:00:48,500 --> 00:00:50,750
mean

00:00:48,800 --> 00:00:53,390
for me that's not agile coaching at all

00:00:50,750 --> 00:00:57,409
I'm a softer engineer from Chalmers from

00:00:53,390 --> 00:00:59,320
the beginning I studied computer science

00:00:57,409 --> 00:01:02,210
algorithms logical languages here and

00:00:59,320 --> 00:01:04,659
focused on compiler construction so more

00:01:02,210 --> 00:01:08,150
of the metal hard stuff here

00:01:04,659 --> 00:01:10,159
but when I got out in the industry all

00:01:08,150 --> 00:01:12,229
of my code suddenly I worked as a

00:01:10,159 --> 00:01:15,140
front-end developer and architect for a

00:01:12,229 --> 00:01:17,270
while and but I noticed most of the

00:01:15,140 --> 00:01:18,830
things I did didn't actually create the

00:01:17,270 --> 00:01:20,600
value I wanted from for the customer

00:01:18,830 --> 00:01:22,460
because everything around in the

00:01:20,600 --> 00:01:26,450
organization hindered me from doing what

00:01:22,460 --> 00:01:29,450
I really did well and that's exactly the

00:01:26,450 --> 00:01:32,210
same thing that the that founded that

00:01:29,450 --> 00:01:35,299
gem investor that the people who who

00:01:32,210 --> 00:01:39,170
built this movement they thought that we

00:01:35,299 --> 00:01:42,979
developed software in the wrong way

00:01:39,170 --> 00:01:45,560
we worked by doing a lot of

00:01:42,979 --> 00:01:49,939
documentation and we we focused on how

00:01:45,560 --> 00:01:52,810
to to get our processes to work as as

00:01:49,939 --> 00:01:54,850
good as possible like optimizing a

00:01:52,810 --> 00:01:57,229
assembly line or something like that

00:01:54,850 --> 00:02:00,499
that kind of defeats the purpose of

00:01:57,229 --> 00:02:01,850
agility and and it strangles the

00:02:00,499 --> 00:02:04,600
innovation and creativity of the

00:02:01,850 --> 00:02:07,039
programmers we have studied a lot of

00:02:04,600 --> 00:02:09,080
time and we we can think about these

00:02:07,039 --> 00:02:11,750
kinds of stuff so let us just do the

00:02:09,080 --> 00:02:14,150
work that was the the founding energy of

00:02:11,750 --> 00:02:17,510
what drive driven the what I've driven

00:02:14,150 --> 00:02:20,270
the agile development since so this is

00:02:17,510 --> 00:02:24,980
the agile manifesto it's it's not called

00:02:20,270 --> 00:02:26,540
the agile methods or agile process or

00:02:24,980 --> 00:02:28,430
something like that this is a manifesto

00:02:26,540 --> 00:02:29,180
it's something we want to change within

00:02:28,430 --> 00:02:33,230
the

00:02:29,180 --> 00:02:35,569
the industry of social development so we

00:02:33,230 --> 00:02:37,129
think that the things to the left here

00:02:35,569 --> 00:02:38,719
are more important the things to the

00:02:37,129 --> 00:02:40,129
right may have some sort of value but

00:02:38,719 --> 00:02:42,469
the things to the left are the things

00:02:40,129 --> 00:02:46,010
that are important for for us inside of

00:02:42,469 --> 00:02:48,590
this industry we can't use certain tools

00:02:46,010 --> 00:02:51,829
they can be great but we need to focus

00:02:48,590 --> 00:02:53,239
on on individuals in interaction and if

00:02:51,829 --> 00:02:56,379
we don't think that we are using the

00:02:53,239 --> 00:02:58,700
right software methods or the right

00:02:56,379 --> 00:03:01,040
tools for for this purpose that's

00:02:58,700 --> 00:03:02,900
changed that the important thing is that

00:03:01,040 --> 00:03:08,000
we take care of the individuals and

00:03:02,900 --> 00:03:09,439
interactions all the great comprehensive

00:03:08,000 --> 00:03:11,269
documentation in the world can take

00:03:09,439 --> 00:03:13,730
great value for a customer unless we

00:03:11,269 --> 00:03:17,269
have some sort of working product so

00:03:13,730 --> 00:03:19,669
what we are trying to do is to to focus

00:03:17,269 --> 00:03:21,739
on having a working software and remove

00:03:19,669 --> 00:03:23,510
some part of the of the comprehensive

00:03:21,739 --> 00:03:27,769
documentation that could include all

00:03:23,510 --> 00:03:29,450
your old bsts tasks or or requirement

00:03:27,769 --> 00:03:31,760
documentation or something like that

00:03:29,450 --> 00:03:34,599
it's more important important with the

00:03:31,760 --> 00:03:38,419
working software and also the last one

00:03:34,599 --> 00:03:40,849
we need to doing a plan is is a good

00:03:38,419 --> 00:03:42,590
thing we can plan some store some stuff

00:03:40,849 --> 00:03:44,540
and we can try to plans things things

00:03:42,590 --> 00:03:46,340
but if something in the environment

00:03:44,540 --> 00:03:49,939
changes we need to be able to respond to

00:03:46,340 --> 00:03:52,159
change so when we work with

00:03:49,939 --> 00:03:53,720
organisations we usually try to divide

00:03:52,159 --> 00:03:56,150
ideality into three different parts the

00:03:53,720 --> 00:03:59,419
first one is the business ability so

00:03:56,150 --> 00:04:01,340
this is learning from the customer from

00:03:59,419 --> 00:04:04,009
the environment and changing our

00:04:01,340 --> 00:04:05,659
business models accordingly so for

00:04:04,009 --> 00:04:10,129
instance if we are a company that's

00:04:05,659 --> 00:04:11,870
great on building analog cameras and the

00:04:10,129 --> 00:04:13,519
industry doesn't want that anymore we

00:04:11,870 --> 00:04:14,720
need to the business ideality is the

00:04:13,519 --> 00:04:19,340
rate that we can change the direction

00:04:14,720 --> 00:04:21,620
for our business to go more towards more

00:04:19,340 --> 00:04:24,620
towards a new age for digital cameras

00:04:21,620 --> 00:04:27,139
for instance the organizational agility

00:04:24,620 --> 00:04:29,720
here's where we're scrum if you have

00:04:27,139 --> 00:04:31,909
heard about that that is where where

00:04:29,720 --> 00:04:35,030
that falls into it's how we work how we

00:04:31,909 --> 00:04:38,360
can work together and how we can change

00:04:35,030 --> 00:04:40,660
the organization to vote to fit the

00:04:38,360 --> 00:04:42,430
virus needs

00:04:40,660 --> 00:04:44,110
and the last one I think I'm going to

00:04:42,430 --> 00:04:46,900
talk about is a technical identity that

00:04:44,110 --> 00:04:48,670
is the purpose of this speech all of

00:04:46,900 --> 00:04:51,580
these things are necessary if we don't

00:04:48,670 --> 00:04:52,960
address the technical identity we will

00:04:51,580 --> 00:04:54,700
have a lot of problems and the

00:04:52,960 --> 00:04:58,470
organization won't actually be able to

00:04:54,700 --> 00:05:01,750
be as agile as you want to want it to be

00:04:58,470 --> 00:05:03,580
but we can't only do the technical of

00:05:01,750 --> 00:05:05,470
DLT that we probably need to change

00:05:03,580 --> 00:05:09,010
something about how the business works

00:05:05,470 --> 00:05:12,220
as well so what is technical identity

00:05:09,010 --> 00:05:13,960
then I define it as how well a

00:05:12,220 --> 00:05:16,780
technology and the development teams

00:05:13,960 --> 00:05:19,450
work to support fast and easy and smooth

00:05:16,780 --> 00:05:21,400
changes with an arm within that product

00:05:19,450 --> 00:05:24,400
to increase the value for the customer

00:05:21,400 --> 00:05:26,800
so how the actual value for the customer

00:05:24,400 --> 00:05:29,080
is usually created by changing something

00:05:26,800 --> 00:05:31,840
from what we have today because the

00:05:29,080 --> 00:05:34,450
world is constantly changing so we need

00:05:31,840 --> 00:05:36,280
to be able to change it and the rate at

00:05:34,450 --> 00:05:41,020
which we can do those changes are

00:05:36,280 --> 00:05:42,880
important for for technical identity the

00:05:41,020 --> 00:05:45,460
way we do usually do this within

00:05:42,880 --> 00:05:47,980
organizations is that I try to help

00:05:45,460 --> 00:05:50,050
teams to simplify their own their own

00:05:47,980 --> 00:05:53,500
way of writing their own processes their

00:05:50,050 --> 00:05:56,680
there things that they're using and we

00:05:53,500 --> 00:06:00,370
try to remove waste such as unnecessary

00:05:56,680 --> 00:06:03,040
or unnecessarily long meetings or stuff

00:06:00,370 --> 00:06:05,500
like that and we try to do whatever we

00:06:03,040 --> 00:06:07,390
can to optimize the time that it takes

00:06:05,500 --> 00:06:11,020
from one person within an organization

00:06:07,390 --> 00:06:13,270
or a user or a developer to to take

00:06:11,020 --> 00:06:16,720
something from an idea out to concrete

00:06:13,270 --> 00:06:19,240
value for the user I'm not going to talk

00:06:16,720 --> 00:06:22,240
about any best practices I really don't

00:06:19,240 --> 00:06:23,590
like that the description because if we

00:06:22,240 --> 00:06:25,090
had best practices then we could

00:06:23,590 --> 00:06:26,919
probably automate away everything right

00:06:25,090 --> 00:06:27,310
if we knew exactly the answer to

00:06:26,919 --> 00:06:29,140
everything

00:06:27,310 --> 00:06:32,620
then we could we don't need developers

00:06:29,140 --> 00:06:35,020
for that so these are just experimental

00:06:32,620 --> 00:06:36,760
ideas hopefully we'll have some idea you

00:06:35,020 --> 00:06:40,540
can try within your organization's when

00:06:36,760 --> 00:06:43,419
you get away from this Beach okay so has

00:06:40,540 --> 00:06:46,660
anyone read this book before the clean

00:06:43,419 --> 00:06:49,900
code so some of you have it's a great

00:06:46,660 --> 00:06:53,100
book it it is written by one of the

00:06:49,900 --> 00:06:56,400
original authors of the idea manifesto

00:06:53,100 --> 00:06:59,160
it handles how to write good code that

00:06:56,400 --> 00:07:01,950
is readable for other humans because

00:06:59,160 --> 00:07:03,450
when I sit down a write code most time I

00:07:01,950 --> 00:07:05,460
spend is not actually tapping the

00:07:03,450 --> 00:07:07,680
keyboard it's reading other people's

00:07:05,460 --> 00:07:10,590
code creating a model inside of my head

00:07:07,680 --> 00:07:13,290
on how to how the system works and where

00:07:10,590 --> 00:07:16,050
I can modify it to do the thing I want

00:07:13,290 --> 00:07:19,460
or reading my own code as well that

00:07:16,050 --> 00:07:23,010
could probably be worse sometime but

00:07:19,460 --> 00:07:24,330
when when trying to write the code the

00:07:23,010 --> 00:07:26,040
important thing is not to get the

00:07:24,330 --> 00:07:27,480
computer to actually understand what

00:07:26,040 --> 00:07:29,100
you're writing because that is the the

00:07:27,480 --> 00:07:32,520
easy part the hard part is to actually

00:07:29,100 --> 00:07:34,200
get get the both the next person reading

00:07:32,520 --> 00:07:38,790
it's to create that model in their head

00:07:34,200 --> 00:07:42,360
fast as fast as possible and also we

00:07:38,790 --> 00:07:44,160
would try to refactor our code a bit

00:07:42,360 --> 00:07:46,500
often because if we don't direct your

00:07:44,160 --> 00:07:48,690
code once in a while the environment

00:07:46,500 --> 00:07:51,750
will have changed in some way that that

00:07:48,690 --> 00:07:54,060
code is not really useful anymore or

00:07:51,750 --> 00:07:55,950
that it's its original purpose has

00:07:54,060 --> 00:07:58,800
changed at least so we should try to

00:07:55,950 --> 00:08:00,660
reflect as often as we can and also the

00:07:58,800 --> 00:08:04,110
boy schedule is an important takeaway

00:08:00,660 --> 00:08:07,140
from this book I think it's whenever you

00:08:04,110 --> 00:08:10,800
get to a code and you do a modification

00:08:07,140 --> 00:08:14,040
you try to leave it a bit little bit

00:08:10,800 --> 00:08:15,930
better than than it was before in that

00:08:14,040 --> 00:08:19,560
way we can increase the quality of the

00:08:15,930 --> 00:08:21,780
code all over the codebase so this is

00:08:19,560 --> 00:08:24,960
actually the thing that slows down most

00:08:21,780 --> 00:08:29,490
organizations in in fact the color DLT

00:08:24,960 --> 00:08:31,050
as well so here we have some sort of

00:08:29,490 --> 00:08:32,520
dependencies between teams I can give

00:08:31,050 --> 00:08:34,610
you an example from last week when I

00:08:32,520 --> 00:08:36,930
talked to a development team I work with

00:08:34,610 --> 00:08:38,610
they sat in the meeting and we were just

00:08:36,930 --> 00:08:41,490
about to decide on our highest top

00:08:38,610 --> 00:08:43,530
priority thing what we are going to what

00:08:41,490 --> 00:08:45,930
way we are going to do what technology

00:08:43,530 --> 00:08:49,530
we're going to use to solve the specific

00:08:45,930 --> 00:08:51,660
problem and they were just about to

00:08:49,530 --> 00:08:53,730
decide when someone said but what about

00:08:51,660 --> 00:08:55,920
this team they are working on on on this

00:08:53,730 --> 00:08:57,840
kind of thing as well and everyone just

00:08:55,920 --> 00:09:01,670
set back in the chair okay we wait for

00:08:57,840 --> 00:09:04,830
them and that is kind of a usual thing

00:09:01,670 --> 00:09:06,510
we we need something from someone else

00:09:04,830 --> 00:09:08,760
and then we can just relax and

00:09:06,510 --> 00:09:11,070
and not focus on our top priority but

00:09:08,760 --> 00:09:13,110
that meant that we will have to wait for

00:09:11,070 --> 00:09:15,810
for something to be done so if we want

00:09:13,110 --> 00:09:17,880
to have fast changing products we need

00:09:15,810 --> 00:09:19,949
to be able to to handle most of the

00:09:17,880 --> 00:09:23,130
dependencies ourselves within our our

00:09:19,949 --> 00:09:25,079
team to do that we first try to

00:09:23,130 --> 00:09:27,420
organizing cross-functional teams like

00:09:25,079 --> 00:09:30,300
we have every competence needed to be

00:09:27,420 --> 00:09:32,399
able to to deliver a whole product from

00:09:30,300 --> 00:09:35,850
an idea to value so we don't have any

00:09:32,399 --> 00:09:38,730
dependencies outside and we try to

00:09:35,850 --> 00:09:40,470
identify all the dependencies and try to

00:09:38,730 --> 00:09:43,529
motivate why they are there because some

00:09:40,470 --> 00:09:45,800
dependencies can bring value like for

00:09:43,529 --> 00:09:48,180
instance if we need some sort of shared

00:09:45,800 --> 00:09:50,160
graphical profile for a whole product or

00:09:48,180 --> 00:09:53,160
something that could bring value on some

00:09:50,160 --> 00:09:55,470
way but we need to measure that against

00:09:53,160 --> 00:09:59,250
our technical ingenuity because we need

00:09:55,470 --> 00:10:01,079
to know that if we if we have this

00:09:59,250 --> 00:10:02,930
dependency then we will be slower on

00:10:01,079 --> 00:10:05,779
changing things in the future

00:10:02,930 --> 00:10:08,250
and if possible it's another team's

00:10:05,779 --> 00:10:10,680
purpose to try to get more autonomous

00:10:08,250 --> 00:10:12,089
and try to break off existing

00:10:10,680 --> 00:10:16,620
dependencies so if you can try to

00:10:12,089 --> 00:10:20,339
eliminate those this is the Kinison

00:10:16,620 --> 00:10:24,420
framework it's a way to categorize a

00:10:20,339 --> 00:10:26,220
specific problem if we're over here it's

00:10:24,420 --> 00:10:28,230
some sort of obvious problem we have a

00:10:26,220 --> 00:10:30,510
problem and we can identify that problem

00:10:28,230 --> 00:10:33,540
and we can just do the best practice way

00:10:30,510 --> 00:10:35,579
of solving a problem and we will we know

00:10:33,540 --> 00:10:36,959
that we have the correct result

00:10:35,579 --> 00:10:41,610
afterwards for instance brushing my

00:10:36,959 --> 00:10:44,160
teeth teeth or doing the dishes if I do

00:10:41,610 --> 00:10:46,459
the exact same thing every time the

00:10:44,160 --> 00:10:49,740
exact same result will come out of it

00:10:46,459 --> 00:10:53,430
the next one is complicated problems

00:10:49,740 --> 00:10:55,949
they can be like a manufacturing line an

00:10:53,430 --> 00:10:58,230
assembly line we know we need to have

00:10:55,949 --> 00:11:00,750
some sort of knowledge about how to

00:10:58,230 --> 00:11:02,250
create one and we need to plan that but

00:11:00,750 --> 00:11:02,940
when we have done the plan we could just

00:11:02,250 --> 00:11:05,339
execute it

00:11:02,940 --> 00:11:08,490
execute it and it can get repeatable

00:11:05,339 --> 00:11:11,250
results in some way so that we need some

00:11:08,490 --> 00:11:12,720
good practices we can we can try to see

00:11:11,250 --> 00:11:15,089
the goal and we can plan towards to go

00:11:12,720 --> 00:11:17,730
on and execute then we go to the complex

00:11:15,089 --> 00:11:19,980
once for instance if you have a customer

00:11:17,730 --> 00:11:22,470
that comes to you and they want

00:11:19,980 --> 00:11:24,750
a computer system of some sort they

00:11:22,470 --> 00:11:26,400
usually don't have the complete system

00:11:24,750 --> 00:11:28,350
in their head because if they had that

00:11:26,400 --> 00:11:30,630
they could just write it down and and

00:11:28,350 --> 00:11:33,150
make it right there are a lot of

00:11:30,630 --> 00:11:35,220
technical things to choose from

00:11:33,150 --> 00:11:37,890
in all of these and we don't know the

00:11:35,220 --> 00:11:39,570
correct result again so we can't do the

00:11:37,890 --> 00:11:42,090
complete architecture in the beginning

00:11:39,570 --> 00:11:43,980
instead we try to do a minimum amount

00:11:42,090 --> 00:11:46,650
amount of architecture in the beginning

00:11:43,980 --> 00:11:49,680
tried to and to try to scale that up

00:11:46,650 --> 00:11:53,490
afterwards for instance if we want a

00:11:49,680 --> 00:11:55,680
great service that that has hundreds of

00:11:53,490 --> 00:11:58,020
service workers back and workers in some

00:11:55,680 --> 00:12:00,420
way we can start by using one and try to

00:11:58,020 --> 00:12:02,100
to have one customer using this and then

00:12:00,420 --> 00:12:03,510
scale it up instead of trying to build

00:12:02,100 --> 00:12:05,970
the architecture perfect from the

00:12:03,510 --> 00:12:10,800
beginning because we need to change that

00:12:05,970 --> 00:12:13,290
probably afterwards anyway high level

00:12:10,800 --> 00:12:14,460
automation this is probably basic

00:12:13,290 --> 00:12:16,800
knowledge for eating for all of you

00:12:14,460 --> 00:12:20,010
since you're working with the open

00:12:16,800 --> 00:12:22,890
source but we try to automate us as

00:12:20,010 --> 00:12:25,740
everything as as much as possible

00:12:22,890 --> 00:12:27,210
everything from from testing like the

00:12:25,740 --> 00:12:29,070
unit tests down there and the

00:12:27,210 --> 00:12:33,720
integration tests and Eitri tests and

00:12:29,070 --> 00:12:37,050
tests but also things like environment

00:12:33,720 --> 00:12:38,940
creation and to be able to run a correct

00:12:37,050 --> 00:12:40,710
production environment on each computer

00:12:38,940 --> 00:12:43,230
that for the developers are are

00:12:40,710 --> 00:12:45,930
essential to be able to try out things

00:12:43,230 --> 00:12:48,660
and to be able to test things from a

00:12:45,930 --> 00:12:52,520
correct perspective it also simplifies a

00:12:48,660 --> 00:12:55,590
lot of things afterwards if we can

00:12:52,520 --> 00:12:57,600
repeat all of these steps on our own

00:12:55,590 --> 00:12:59,490
computers that we will be able to to

00:12:57,600 --> 00:13:03,900
find bugs faster and we will be able to

00:12:59,490 --> 00:13:04,880
troubleshoot things easier operational

00:13:03,900 --> 00:13:08,700
excellence

00:13:04,880 --> 00:13:10,830
first of all DevOps is a is a movement

00:13:08,700 --> 00:13:13,560
as well it was created after agile but

00:13:10,830 --> 00:13:14,940
for me it has always been kind of hard

00:13:13,560 --> 00:13:16,230
to distinguish between between them

00:13:14,940 --> 00:13:20,940
because you can't do agile without

00:13:16,230 --> 00:13:22,590
DevOps is my hypothesis all the DevOps

00:13:20,940 --> 00:13:26,520
says that the dev and ops should be in

00:13:22,590 --> 00:13:28,710
the same team I like I told us but we I

00:13:26,520 --> 00:13:31,350
say that they should probably be the

00:13:28,710 --> 00:13:32,910
same people as well one person should be

00:13:31,350 --> 00:13:33,420
able to within a team should be able to

00:13:32,910 --> 00:13:37,830
do

00:13:33,420 --> 00:13:40,380
of upstairs and the dev tasks and this

00:13:37,830 --> 00:13:42,510
DevOps thinking is to shift the mindset

00:13:40,380 --> 00:13:46,560
from our system should never fail in

00:13:42,510 --> 00:13:50,010
production until to change it to we need

00:13:46,560 --> 00:13:52,410
to be able to recover fast we need to to

00:13:50,010 --> 00:13:54,660
be able to if something fails which we

00:13:52,410 --> 00:13:57,360
know it will in some cases because we

00:13:54,660 --> 00:13:59,370
can't create bug-free code so if if it

00:13:57,360 --> 00:14:01,860
will fail some point we need to be able

00:13:59,370 --> 00:14:02,190
to recover that fail faster faster than

00:14:01,860 --> 00:14:04,920
normal

00:14:02,190 --> 00:14:08,090
so instead of optimizing uptime we need

00:14:04,920 --> 00:14:11,370
to minimize the mean time to recovery

00:14:08,090 --> 00:14:13,290
Netflix has done a cool thing there they

00:14:11,370 --> 00:14:16,500
are reduced using something called chaos

00:14:13,290 --> 00:14:18,720
monkey testing this is where they place

00:14:16,500 --> 00:14:21,030
a service in their in their system and

00:14:18,720 --> 00:14:24,000
that service only purpose is to bring

00:14:21,030 --> 00:14:26,490
down other services so the in production

00:14:24,000 --> 00:14:29,670
they pull down random services at random

00:14:26,490 --> 00:14:31,680
times and the the way they're doing this

00:14:29,670 --> 00:14:34,890
why they are doing this is that they

00:14:31,680 --> 00:14:36,900
need to check that they can fast recover

00:14:34,890 --> 00:14:38,150
all the services and that nothing is a

00:14:36,900 --> 00:14:41,430
single point of failure in the system

00:14:38,150 --> 00:14:43,560
and if if it is then they won't notice

00:14:41,430 --> 00:14:47,280
it unless it's in production so they

00:14:43,560 --> 00:14:50,250
need to be able to fix it faster so that

00:14:47,280 --> 00:14:52,200
is an extreme case of trying to minimize

00:14:50,250 --> 00:14:58,590
mean time to recovery instead of

00:14:52,200 --> 00:15:01,230
maximizing uptime as well as the team

00:14:58,590 --> 00:15:05,610
working together we are usually working

00:15:01,230 --> 00:15:07,560
with with agile teams in some way and we

00:15:05,610 --> 00:15:10,050
tried to both have that cross-functional

00:15:07,560 --> 00:15:12,270
as we talked about earlier and also try

00:15:10,050 --> 00:15:15,360
to make each individual have be some

00:15:12,270 --> 00:15:18,540
sort of T shaping normally we we are

00:15:15,360 --> 00:15:20,700
educated like testers or you expecially

00:15:18,540 --> 00:15:24,630
or back-end developers the fronton

00:15:20,700 --> 00:15:27,570
developers in in a way when we are if

00:15:24,630 --> 00:15:28,800
someone if if a team only has one back

00:15:27,570 --> 00:15:31,020
in developer for instance and that

00:15:28,800 --> 00:15:32,850
person is sick then we will have a

00:15:31,020 --> 00:15:34,230
problem to deliver all the things that

00:15:32,850 --> 00:15:35,850
we need to do and we need to start

00:15:34,230 --> 00:15:38,100
waiting and the waiting is the thing we

00:15:35,850 --> 00:15:40,260
want to avoid so what we're trying to

00:15:38,100 --> 00:15:42,360
say is that is that within the team you

00:15:40,260 --> 00:15:44,460
should have some sort of T shaping so

00:15:42,360 --> 00:15:46,800
these over here are your skill levels in

00:15:44,460 --> 00:15:47,220
different kinds of tasks so if you're a

00:15:46,800 --> 00:15:49,230
bucket

00:15:47,220 --> 00:15:51,930
developer this might be Java or

00:15:49,230 --> 00:15:56,670
something or ago or something like that

00:15:51,930 --> 00:15:58,589
and this appear could be UX user testing

00:15:56,670 --> 00:16:01,589
or something so everyone should be able

00:15:58,589 --> 00:16:04,439
to do a little bit of everything but be

00:16:01,589 --> 00:16:08,009
specialized in their task in that way we

00:16:04,439 --> 00:16:10,800
can sort of create more agility in the

00:16:08,009 --> 00:16:13,079
organization the way we can't create a

00:16:10,800 --> 00:16:15,480
shipping is by programming or mob

00:16:13,079 --> 00:16:17,220
programming my team that I'm working

00:16:15,480 --> 00:16:21,810
with right now they are more programming

00:16:17,220 --> 00:16:24,029
100% of their time it's a really so more

00:16:21,810 --> 00:16:25,860
program if you haven't heard about it is

00:16:24,029 --> 00:16:28,620
that the whole team sit down in front of

00:16:25,860 --> 00:16:32,189
a screen and one person is writing seems

00:16:28,620 --> 00:16:35,189
fairly inefficient right the thing is

00:16:32,189 --> 00:16:37,050
that they are all giving their feedback

00:16:35,189 --> 00:16:40,290
on the code right away they won't have

00:16:37,050 --> 00:16:41,819
it send all these pull requests for from

00:16:40,290 --> 00:16:43,050
each other sitting right next to each

00:16:41,819 --> 00:16:43,379
other and they can give it back right

00:16:43,050 --> 00:16:46,829
Lee

00:16:43,379 --> 00:16:50,009
and so they won't they don't produce as

00:16:46,829 --> 00:16:52,230
much of bugs or or things that needed to

00:16:50,009 --> 00:16:54,569
be corrected and they create code that

00:16:52,230 --> 00:16:56,639
is readable right from the start so

00:16:54,569 --> 00:16:58,639
that's not for everyone but for some

00:16:56,639 --> 00:17:01,680
people it works really well

00:16:58,639 --> 00:17:05,730
they also have innovation days where

00:17:01,680 --> 00:17:08,299
they have Friday's each second week they

00:17:05,730 --> 00:17:11,130
can do whatever they want with whatever

00:17:08,299 --> 00:17:15,299
with whoever they want so customer

00:17:11,130 --> 00:17:17,250
service and and some developer could go

00:17:15,299 --> 00:17:20,309
together and create an internal app for

00:17:17,250 --> 00:17:22,140
the company for doing something the only

00:17:20,309 --> 00:17:23,400
the only thing with these days is that

00:17:22,140 --> 00:17:25,140
they have to show at the end of the day

00:17:23,400 --> 00:17:27,630
what they have done for the entire

00:17:25,140 --> 00:17:30,090
organization in that way they have

00:17:27,630 --> 00:17:32,970
created a lot of great innovative stuff

00:17:30,090 --> 00:17:37,620
that can be used to create new business

00:17:32,970 --> 00:17:43,490
ideas or a new new ways to simplify the

00:17:37,620 --> 00:17:46,260
their normal work life have you seen the

00:17:43,490 --> 00:17:48,659
measurements up there sometime lines of

00:17:46,260 --> 00:17:50,669
code per developer a number of bugs

00:17:48,659 --> 00:17:53,039
reported in the system or a number of

00:17:50,669 --> 00:17:57,270
story points delivered versus story

00:17:53,039 --> 00:18:00,820
points estimated I've been measured on

00:17:57,270 --> 00:18:03,519
this as a developer it was kind of

00:18:00,820 --> 00:18:05,679
see as an engineer to find cool ways to

00:18:03,519 --> 00:18:09,669
optimize these we're not actually

00:18:05,679 --> 00:18:12,429
creating any value at all like writing a

00:18:09,669 --> 00:18:14,860
lines of code is probably the worst one

00:18:12,429 --> 00:18:17,169
because then I can write a lot of code

00:18:14,860 --> 00:18:20,289
that actually only destroys the system

00:18:17,169 --> 00:18:22,179
and and don't create any value so if I'm

00:18:20,289 --> 00:18:25,389
getting paid based on how many lines of

00:18:22,179 --> 00:18:28,929
code I'm writing then then I will I will

00:18:25,389 --> 00:18:32,259
create just cheat code instead instead

00:18:28,929 --> 00:18:35,110
we should be able to to look at these

00:18:32,259 --> 00:18:37,629
three instead they could be could be

00:18:35,110 --> 00:18:40,480
possible measurements throughput is the

00:18:37,629 --> 00:18:44,470
the number of valuable increments that

00:18:40,480 --> 00:18:46,750
you make for instance like a user story

00:18:44,470 --> 00:18:48,549
if that user story is written in a way

00:18:46,750 --> 00:18:51,879
that it actually brings value to the

00:18:48,549 --> 00:18:54,490
customer so how many many items you make

00:18:51,879 --> 00:18:57,909
however big or however however small

00:18:54,490 --> 00:18:59,710
they are if if we optimize on this we

00:18:57,909 --> 00:19:02,019
will break down our tasks into smaller

00:18:59,710 --> 00:19:04,360
pieces and that will be able to then we

00:19:02,019 --> 00:19:07,450
will be able to release things off more

00:19:04,360 --> 00:19:09,549
often so that is good if we try to game

00:19:07,450 --> 00:19:12,190
this one it actually gets better anyway

00:19:09,549 --> 00:19:13,720
so so that's a good thing the lead time

00:19:12,190 --> 00:19:16,240
is the one I've talked about in the

00:19:13,720 --> 00:19:17,980
beginning from idea to to actual value

00:19:16,240 --> 00:19:21,100
for the customer try to minimize that

00:19:17,980 --> 00:19:23,860
time and the cycle time is the idea that

00:19:21,100 --> 00:19:26,559
from that the development team starts

00:19:23,860 --> 00:19:28,720
working on something until it's done so

00:19:26,559 --> 00:19:34,720
try to minimize that time and minimize

00:19:28,720 --> 00:19:37,269
waiting time actually okay so these are

00:19:34,720 --> 00:19:41,019
the the seven things I've talked about

00:19:37,269 --> 00:19:43,690
clean code try to lower the level of

00:19:41,019 --> 00:19:45,669
external dependencies try to do emergent

00:19:43,690 --> 00:19:49,600
architecture design high level of

00:19:45,669 --> 00:19:53,289
automation try to make your ops working

00:19:49,600 --> 00:19:54,490
really well try to make the team learn

00:19:53,289 --> 00:19:56,679
things faster together

00:19:54,490 --> 00:20:00,129
and to try to measure the right things

00:19:56,679 --> 00:20:01,899
and if we can do these things as

00:20:00,129 --> 00:20:04,809
developers we can increase the develop

00:20:01,899 --> 00:20:07,360
the agility of our organizations and

00:20:04,809 --> 00:20:10,419
that will probably create better working

00:20:07,360 --> 00:20:12,909
environments for all of us I think so I

00:20:10,419 --> 00:20:13,320
want us developers to actually bring

00:20:12,909 --> 00:20:17,790
back

00:20:13,320 --> 00:20:21,120
great the spirit of agility instead of

00:20:17,790 --> 00:20:44,340
talking about it like a management thank

00:20:21,120 --> 00:20:46,770
you very much questions hi so I'm not

00:20:44,340 --> 00:20:50,490
sure I completely understood about your

00:20:46,770 --> 00:20:54,780
emergent architecture slide because it

00:20:50,490 --> 00:20:57,960
was that one I mean to me I didn't see

00:20:54,780 --> 00:21:01,380
how it's actually about architecture but

00:20:57,960 --> 00:21:03,929
what I saw missing or or I don't know if

00:21:01,380 --> 00:21:08,610
what your opinion and this is you cannot

00:21:03,929 --> 00:21:10,740
be fast and you cannot deliver value so

00:21:08,610 --> 00:21:14,250
you can have very good throughput and

00:21:10,740 --> 00:21:16,500
everything even if you write user nice

00:21:14,250 --> 00:21:19,559
user stories so it is very important but

00:21:16,500 --> 00:21:22,919
to me if your system is not made in a

00:21:19,559 --> 00:21:24,750
way that can be experimenting so you can

00:21:22,919 --> 00:21:27,360
create experiment features so you can

00:21:24,750 --> 00:21:29,429
create new innovation and you can do it

00:21:27,360 --> 00:21:31,440
fast you can you will still be slow and

00:21:29,429 --> 00:21:36,650
you will still have all the problems

00:21:31,440 --> 00:21:38,910
that agile was created to battle so I

00:21:36,650 --> 00:21:40,830
was missing basically I saw this slide

00:21:38,910 --> 00:21:42,809
but I didn't I understand how it relates

00:21:40,830 --> 00:21:46,740
to software architecture do you have any

00:21:42,809 --> 00:21:48,809
any hints on software architecture and

00:21:46,740 --> 00:21:49,919
so I didn't see it addressed that's my

00:21:48,809 --> 00:21:53,010
point

00:21:49,919 --> 00:21:55,650
I get to it's a lot of things in in this

00:21:53,010 --> 00:21:59,090
slide and I skipped it through because

00:21:55,650 --> 00:22:04,080
the time was limited the idea is that

00:21:59,090 --> 00:22:06,390
architecture in in some way is it's a

00:22:04,080 --> 00:22:08,940
complex problem in software development

00:22:06,390 --> 00:22:13,530
in general or a complex is a complex

00:22:08,940 --> 00:22:17,250
problem so we need to attack it in a way

00:22:13,530 --> 00:22:19,230
that we can of course plan for for a bit

00:22:17,250 --> 00:22:22,919
forward but if we plan for the whole

00:22:19,230 --> 00:22:25,470
thing then we won't be able to to create

00:22:22,919 --> 00:22:26,630
we don't know the end goal or

00:22:25,470 --> 00:22:28,549
architecture

00:22:26,630 --> 00:22:31,580
so if we try to in the beginning to plan

00:22:28,549 --> 00:22:33,110
then we need to change our plan in the

00:22:31,580 --> 00:22:35,990
end so if we spend a lot of time on

00:22:33,110 --> 00:22:38,030
making a platform for instance of

00:22:35,990 --> 00:22:40,610
architecture platform that we are going

00:22:38,030 --> 00:22:41,870
to use later on then the whole business

00:22:40,610 --> 00:22:43,520
market change and we need to do

00:22:41,870 --> 00:22:45,169
something else then we have spent a lot

00:22:43,520 --> 00:22:48,860
of time doing something that is not

00:22:45,169 --> 00:22:51,679
needed so instead we try to make small

00:22:48,860 --> 00:22:53,750
chunks of our the architecture needed

00:22:51,679 --> 00:23:03,740
for for actually creating the value in

00:22:53,750 --> 00:23:05,539
shorter span that if you have created a

00:23:03,740 --> 00:23:07,760
platform that can is easy to change

00:23:05,539 --> 00:23:09,409
based on your business value so the

00:23:07,760 --> 00:23:11,059
platform one and what's in the platform

00:23:09,409 --> 00:23:13,789
is actually not made by the developers

00:23:11,059 --> 00:23:16,039
it should be made by the customer and

00:23:13,789 --> 00:23:18,440
the salespeople and so they should drive

00:23:16,039 --> 00:23:19,789
this what should the platform contain so

00:23:18,440 --> 00:23:22,429
if you have that then you don't need to

00:23:19,789 --> 00:23:23,720
refactor offer we often which is

00:23:22,429 --> 00:23:26,720
something you mentioned in the beginning

00:23:23,720 --> 00:23:29,510
and I also kind of disagree you should

00:23:26,720 --> 00:23:31,630
refactor until you get just barely good

00:23:29,510 --> 00:23:34,940
enough system for the things that matter

00:23:31,630 --> 00:23:39,159
but I for the platform I think it's

00:23:34,940 --> 00:23:41,630
important to get a nice platform that is

00:23:39,159 --> 00:23:43,520
consistent with the business values that

00:23:41,630 --> 00:23:45,350
you're after and if the business values

00:23:43,520 --> 00:23:48,890
Saints then of course your platform

00:23:45,350 --> 00:23:50,360
changes so that is why I pointed arca

00:23:48,890 --> 00:23:52,549
architecture software architecture that

00:23:50,360 --> 00:23:55,220
you can change things easily and fast I

00:23:52,549 --> 00:23:57,760
think we agree with each other but we

00:23:55,220 --> 00:24:05,659
can maybe talk about that afterwards

00:23:57,760 --> 00:24:09,679
more questions hi how would you make

00:24:05,659 --> 00:24:12,380
people who how do you make everyone work

00:24:09,679 --> 00:24:14,510
in an agile environment cuz I guess if

00:24:12,380 --> 00:24:15,740
some people don't want to do that yeah

00:24:14,510 --> 00:24:18,169
it's very difficult to get it to work

00:24:15,740 --> 00:24:21,470
and it's quite often that you can see

00:24:18,169 --> 00:24:24,500
certain individuals that prefer working

00:24:21,470 --> 00:24:28,100
alone and also by themselves and they

00:24:24,500 --> 00:24:31,039
yeah so so I guess that's that's an

00:24:28,100 --> 00:24:35,210
issue that I often see how do you combat

00:24:31,039 --> 00:24:40,410
that issue like that is basically my job

00:24:35,210 --> 00:24:42,210
I can try to explain but so basically

00:24:40,410 --> 00:24:44,760
or talking about people inside of the

00:24:42,210 --> 00:24:48,890
development team usually yes exactly so

00:24:44,760 --> 00:24:52,500
developers what I try to do is usually

00:24:48,890 --> 00:24:54,900
to get them to see what am i what am I

00:24:52,500 --> 00:24:56,700
work actually contributing to what are

00:24:54,900 --> 00:25:00,570
we supposed to what are we trying to do

00:24:56,700 --> 00:25:03,060
if and try to find their own inbuilt

00:25:00,570 --> 00:25:05,580
motivations and then I can present tools

00:25:03,060 --> 00:25:09,090
to them to to help them achieve those

00:25:05,580 --> 00:25:12,480
goals mostly those tools could be agile

00:25:09,090 --> 00:25:15,840
in some way or or they could be helped

00:25:12,480 --> 00:25:17,910
by for instance learning new stuff most

00:25:15,840 --> 00:25:20,250
developers try want to learn new stuff

00:25:17,910 --> 00:25:22,590
from someone else by working in a team

00:25:20,250 --> 00:25:25,710
that is the most efficient way of doing

00:25:22,590 --> 00:25:27,000
that so it's not a totally complete

00:25:25,710 --> 00:25:29,720
answers for trying to find their own

00:25:27,000 --> 00:25:32,580
motivations and try to to build on them

00:25:29,720 --> 00:25:34,860
to make a good team it's a good start I

00:25:32,580 --> 00:25:36,240
think because normally what I see in a

00:25:34,860 --> 00:25:39,510
good team is when people have opinions

00:25:36,240 --> 00:25:41,610
yeah and that's not that often that you

00:25:39,510 --> 00:25:43,650
see that is there also something you can

00:25:41,610 --> 00:25:45,990
give like an input how do you make

00:25:43,650 --> 00:25:48,090
people actually contribute to your

00:25:45,990 --> 00:25:50,610
working environment not just in lines of

00:25:48,090 --> 00:25:54,000
code but actually more of an on a higher

00:25:50,610 --> 00:25:56,550
abstracted level so to say there are

00:25:54,000 --> 00:25:58,830
several different reason why people

00:25:56,550 --> 00:26:00,600
won't contribute the most normal I've

00:25:58,830 --> 00:26:05,370
seen is that they are scared of losing

00:26:00,600 --> 00:26:07,920
their their face or they they are losing

00:26:05,370 --> 00:26:09,690
their status or some sort or actually

00:26:07,920 --> 00:26:11,460
losing their job in a very insecure

00:26:09,690 --> 00:26:13,350
environment so try to create an

00:26:11,460 --> 00:26:16,800
environment where it's actually okay to

00:26:13,350 --> 00:26:19,650
fail is a good start I think to do allow

00:26:16,800 --> 00:26:21,900
of people so if you are some sort of

00:26:19,650 --> 00:26:24,480
lead developer or something try to to

00:26:21,900 --> 00:26:27,750
show that okay I fail sometimes I do

00:26:24,480 --> 00:26:29,340
mistakes and then try to discuss those

00:26:27,750 --> 00:26:32,190
openly in the group and try to find

00:26:29,340 --> 00:26:35,520
solutions to them because people will

00:26:32,190 --> 00:26:38,210
start to share themselves share their

00:26:35,520 --> 00:26:40,890
own personality and their own authentic

00:26:38,210 --> 00:26:43,980
selves on the work in the workplace if

00:26:40,890 --> 00:26:45,660
they think it's safe you know so try to

00:26:43,980 --> 00:26:48,140
create some sort of psychological safety

00:26:45,660 --> 00:26:48,140
I think

00:26:50,250 --> 00:26:59,470
more questions okay all right thanks doc

00:26:58,539 --> 00:27:02,849
thank you very much

00:26:59,470 --> 00:27:02,849
[Applause]

00:27:09,549 --> 00:27:11,610

YouTube URL: https://www.youtube.com/watch?v=YmATY24inVc


