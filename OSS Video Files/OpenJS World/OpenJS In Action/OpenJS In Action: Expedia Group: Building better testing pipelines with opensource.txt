Title: OpenJS In Action: Expedia Group: Building better testing pipelines with opensource
Publication date: 2020-10-01
Playlist: OpenJS In Action
Description: 
	Robin Ginn, executive director of the OpenJS Foundation, interviewed Tiffany Le-Nguyen, Software Development Engineer at Expedia Group.
Captions: 
	00:00:02,080 --> 00:00:06,000
okay hi i'm robin again i'm the

00:00:04,160 --> 00:00:07,040
executive director of the open.js

00:00:06,000 --> 00:00:09,840
foundation

00:00:07,040 --> 00:00:10,800
i am here with tiffany linujen from

00:00:09,840 --> 00:00:12,160
expedia

00:00:10,800 --> 00:00:14,400
and we're going to talk to you about a

00:00:12,160 --> 00:00:16,720
really cool customer case study which is

00:00:14,400 --> 00:00:19,600
how expedia is using openjs

00:00:16,720 --> 00:00:20,880
foundation technologies so hey tiffany

00:00:19,600 --> 00:00:21,920
why don't you tell us a little bit more

00:00:20,880 --> 00:00:24,320
about yourself

00:00:21,920 --> 00:00:26,160
hi so i'm tiffany i've been working at

00:00:24,320 --> 00:00:28,640
expedia for the past

00:00:26,160 --> 00:00:30,000
two years and working on their landing

00:00:28,640 --> 00:00:32,160
pages as well as building

00:00:30,000 --> 00:00:33,840
their testing pipelines and generally

00:00:32,160 --> 00:00:34,719
trying to make the developer experience

00:00:33,840 --> 00:00:36,480
there

00:00:34,719 --> 00:00:38,480
they're good in my free time then i'm

00:00:36,480 --> 00:00:39,760
also a mentor for free code camp

00:00:38,480 --> 00:00:41,520
montreal and i teach

00:00:39,760 --> 00:00:42,879
new people how to code and can reach

00:00:41,520 --> 00:00:46,160
their development goals

00:00:42,879 --> 00:00:48,000
that's very cool um so for those few

00:00:46,160 --> 00:00:49,520
people maybe in the world who don't know

00:00:48,000 --> 00:00:51,840
about expedia just give us

00:00:49,520 --> 00:00:54,000
um a little description about um what

00:00:51,840 --> 00:00:57,280
you know what kind of company expedia is

00:00:54,000 --> 00:01:00,399
sure so expedia a rhetoric expedia group

00:00:57,280 --> 00:01:01,920
is a travel company that has is a

00:01:00,399 --> 00:01:04,320
multi-billion dollar industry with

00:01:01,920 --> 00:01:06,240
millions of users from all over

00:01:04,320 --> 00:01:07,360
all over the world booking properties

00:01:06,240 --> 00:01:10,240
and booking

00:01:07,360 --> 00:01:11,600
dates for their travels great i know i

00:01:10,240 --> 00:01:14,560
use it all the time

00:01:11,600 --> 00:01:15,840
so it's great to have you here um so

00:01:14,560 --> 00:01:17,439
sort of just broadly

00:01:15,840 --> 00:01:18,960
tell us about sort of the engineering

00:01:17,439 --> 00:01:20,320
team that you're on and what sort of

00:01:18,960 --> 00:01:22,960
challenges that you all

00:01:20,320 --> 00:01:24,479
face every day yeah right now my

00:01:22,960 --> 00:01:26,479
engineering team is facing some pretty

00:01:24,479 --> 00:01:28,640
interesting problems essentially

00:01:26,479 --> 00:01:29,520
expedia for context we have a lot of

00:01:28,640 --> 00:01:32,479
different brands

00:01:29,520 --> 00:01:34,320
and a lot of different pages which a lot

00:01:32,479 --> 00:01:36,159
of apps end up serving so that makes it

00:01:34,320 --> 00:01:36,799
so that we have a lot of duplication of

00:01:36,159 --> 00:01:38,799
code

00:01:36,799 --> 00:01:40,640
and issues of inconsistency throughout

00:01:38,799 --> 00:01:41,680
the user flow that we want to solve so

00:01:40,640 --> 00:01:42,399
that's what my team is doing we're

00:01:41,680 --> 00:01:43,920
trying to

00:01:42,399 --> 00:01:45,439
reduce that duplication reduce the

00:01:43,920 --> 00:01:46,720
inconsistencies and make sure we're all

00:01:45,439 --> 00:01:49,119
aligned in our

00:01:46,720 --> 00:01:50,799
in our design systems great so it then

00:01:49,119 --> 00:01:52,079
describes some of the solutions that

00:01:50,799 --> 00:01:54,079
you're building

00:01:52,079 --> 00:01:56,079
right now it's in order to kind of

00:01:54,079 --> 00:01:58,159
remove that that

00:01:56,079 --> 00:01:59,680
duplication then we are building this

00:01:58,159 --> 00:02:01,439
library which

00:01:59,680 --> 00:02:02,799
is kind of making business level

00:02:01,439 --> 00:02:04,159
components that

00:02:02,799 --> 00:02:06,399
can be reused throughout different

00:02:04,159 --> 00:02:08,640
clients that are tied to a graphql

00:02:06,399 --> 00:02:10,399
to to data so that people can just use

00:02:08,640 --> 00:02:12,400
it and plug and play for example a

00:02:10,399 --> 00:02:13,920
property card or a header or

00:02:12,400 --> 00:02:15,599
or something that has that's kind of

00:02:13,920 --> 00:02:18,959
attached to data

00:02:15,599 --> 00:02:20,239
and that will and that is also

00:02:18,959 --> 00:02:22,879
following accessibility norms

00:02:20,239 --> 00:02:23,360
performance seo kind of best practices

00:02:22,879 --> 00:02:25,760
as well

00:02:23,360 --> 00:02:27,280
and that's kind of what we're working on

00:02:25,760 --> 00:02:27,599
that's great i was going to ask you sort

00:02:27,280 --> 00:02:29,440
of

00:02:27,599 --> 00:02:31,200
what are some of the things that were

00:02:29,440 --> 00:02:32,160
really important from a developer point

00:02:31,200 --> 00:02:34,720
of view when you're

00:02:32,160 --> 00:02:36,239
dividing when you're building a solution

00:02:34,720 --> 00:02:36,879
so you just mentioned a few are there

00:02:36,239 --> 00:02:38,959
any

00:02:36,879 --> 00:02:40,480
sort of other top level ones i thought i

00:02:38,959 --> 00:02:41,920
i think i heard you mention some in your

00:02:40,480 --> 00:02:45,519
oz con talk

00:02:41,920 --> 00:02:47,200
yes yeah um yeah so i was saying is

00:02:45,519 --> 00:02:49,280
some accessibility concerns you know

00:02:47,200 --> 00:02:50,239
also concerns that we want to make sure

00:02:49,280 --> 00:02:53,040
that the bots

00:02:50,239 --> 00:02:54,720
are properly tracking and seeing through

00:02:53,040 --> 00:02:58,159
all the metadata that is on our page

00:02:54,720 --> 00:02:59,599
and uh i think that was oh yeah and also

00:02:58,159 --> 00:03:02,000
performance making sure that

00:02:59,599 --> 00:03:02,800
we our pages are not too slow and that

00:03:02,000 --> 00:03:04,879
we're not kind of

00:03:02,800 --> 00:03:06,480
pushing big libraries that are maybe a

00:03:04,879 --> 00:03:09,200
little bit too too hefty

00:03:06,480 --> 00:03:11,440
oh cool so tell us how did you build

00:03:09,200 --> 00:03:13,360
your solution what technologies did

00:03:11,440 --> 00:03:14,640
did you end up using and how were those

00:03:13,360 --> 00:03:17,680
all put together

00:03:14,640 --> 00:03:21,519
we ended up using typescript react

00:03:17,680 --> 00:03:24,080
node and graphql with

00:03:21,519 --> 00:03:25,360
react apollo so that's kind of the way

00:03:24,080 --> 00:03:27,920
that that library was built

00:03:25,360 --> 00:03:28,799
we have internally a ui library for kind

00:03:27,920 --> 00:03:31,360
of these

00:03:28,799 --> 00:03:33,920
these smaller pieces of the ui so the

00:03:31,360 --> 00:03:34,720
fundamental pieces like h1s and a tags

00:03:33,920 --> 00:03:36,640
buttons

00:03:34,720 --> 00:03:38,959
but we didn't have anything that would

00:03:36,640 --> 00:03:41,120
make a like a hotel card or a

00:03:38,959 --> 00:03:43,519
something that is a little bit bigger

00:03:41,120 --> 00:03:46,000
more business level and also tied to

00:03:43,519 --> 00:03:46,640
data which is kind of reused everywhere

00:03:46,000 --> 00:03:48,640
so

00:03:46,640 --> 00:03:50,000
those were the those are the texts that

00:03:48,640 --> 00:03:52,879
we use and we try to make it

00:03:50,000 --> 00:03:53,760
kind of server-side uh driven as well

00:03:52,879 --> 00:03:56,480
great

00:03:53,760 --> 00:03:57,920
um and then tell us about your testing

00:03:56,480 --> 00:04:01,120
yeah so

00:03:57,920 --> 00:04:03,200
yeah yeah so our testing suite is

00:04:01,120 --> 00:04:04,640
pretty robust and it has been kind of

00:04:03,200 --> 00:04:08,080
ongoing for the past

00:04:04,640 --> 00:04:10,720
couple of years uh we have

00:04:08,080 --> 00:04:11,920
an in unit test and antenna tests and an

00:04:10,720 --> 00:04:15,120
integration test

00:04:11,920 --> 00:04:17,440
so that's using just testing library for

00:04:15,120 --> 00:04:19,519
react in our case and then we have

00:04:17,440 --> 00:04:21,040
cyprus which uses book under the hood

00:04:19,519 --> 00:04:22,639
and for our end-to-end and our visual

00:04:21,040 --> 00:04:24,639
regression tests and then we use browser

00:04:22,639 --> 00:04:27,360
stack for some some smoke tests for

00:04:24,639 --> 00:04:28,080
cross-device and cross-browser testing

00:04:27,360 --> 00:04:31,199
as well

00:04:28,080 --> 00:04:33,840
oh great um and then i

00:04:31,199 --> 00:04:35,120
heard that you were using the eslint

00:04:33,840 --> 00:04:38,320
project

00:04:35,120 --> 00:04:40,960
yeah solutions tell us about that so

00:04:38,320 --> 00:04:42,000
eslin as you know is a is a pretty well

00:04:40,960 --> 00:04:43,600
known lender at this point

00:04:42,000 --> 00:04:45,280
and we use that at the step of the

00:04:43,600 --> 00:04:46,080
testing pipeline which is the static

00:04:45,280 --> 00:04:48,560
checks

00:04:46,080 --> 00:04:50,240
which catch so many bugs and and so many

00:04:48,560 --> 00:04:52,720
kind of formatting in code smells

00:04:50,240 --> 00:04:54,320
right before we we even push anything

00:04:52,720 --> 00:04:54,960
and so that for us it's really important

00:04:54,320 --> 00:04:58,080
because it's

00:04:54,960 --> 00:05:00,160
low cost but it's also

00:04:58,080 --> 00:05:01,199
there to resolve a lot of issues for us

00:05:00,160 --> 00:05:03,280
before we even ship

00:05:01,199 --> 00:05:04,320
right and so it's going to be catching

00:05:03,280 --> 00:05:08,160
it's going to be catching

00:05:04,320 --> 00:05:10,080
things like if you forgot to

00:05:08,160 --> 00:05:11,919
initiate a variable before using it or

00:05:10,080 --> 00:05:13,520
assign it some some value so we're able

00:05:11,919 --> 00:05:15,440
to catch those errors

00:05:13,520 --> 00:05:17,440
before they ship as well as for new

00:05:15,440 --> 00:05:19,280
users that come into expedia

00:05:17,440 --> 00:05:21,520
or people that are not really used to

00:05:19,280 --> 00:05:24,000
javascript typescript and react yet

00:05:21,520 --> 00:05:25,680
it kind of gives them the kind of these

00:05:24,000 --> 00:05:27,120
roles and these don't do this and don't

00:05:25,680 --> 00:05:29,120
follow these follow these types of

00:05:27,120 --> 00:05:30,720
standards instead of other standards

00:05:29,120 --> 00:05:32,400
so that's kind of how we we use it as

00:05:30,720 --> 00:05:34,000
well so to save the time

00:05:32,400 --> 00:05:35,520
from our more experienced ui engineers

00:05:34,000 --> 00:05:36,240
from having to kind of teach them and

00:05:35,520 --> 00:05:39,039
train them through

00:05:36,240 --> 00:05:41,039
the pull request reviews oh cool so

00:05:39,039 --> 00:05:42,960
describe like a common scenario because

00:05:41,039 --> 00:05:45,360
i use expedia all the time so

00:05:42,960 --> 00:05:46,639
tell me like if something's not working

00:05:45,360 --> 00:05:48,240
what is that what are the sort of the

00:05:46,639 --> 00:05:50,240
common things that you see and then how

00:05:48,240 --> 00:05:52,400
do you fix that

00:05:50,240 --> 00:05:54,000
um for related to eslint are really just

00:05:52,400 --> 00:05:57,759
kind of a general problem

00:05:54,000 --> 00:06:01,520
um either whichever you know

00:05:57,759 --> 00:06:03,120
yeah so for for us um if we

00:06:01,520 --> 00:06:05,039
we see on a page that there is an

00:06:03,120 --> 00:06:07,199
accessibility um

00:06:05,039 --> 00:06:08,639
bug somewhere where this image doesn't

00:06:07,199 --> 00:06:10,479
have an alt tag or just anchor

00:06:08,639 --> 00:06:12,319
tag doesn't have isn't connected to the

00:06:10,479 --> 00:06:13,680
proper buttons then that usually would

00:06:12,319 --> 00:06:16,319
end up getting flagged to us

00:06:13,680 --> 00:06:17,680
by our product managers and then that

00:06:16,319 --> 00:06:19,680
ends up going into the queue

00:06:17,680 --> 00:06:21,039
of our technical product managers and

00:06:19,680 --> 00:06:22,240
going back to developers

00:06:21,039 --> 00:06:24,160
that then have to kind of figure out

00:06:22,240 --> 00:06:25,680
what this this issue is that usually at

00:06:24,160 --> 00:06:27,600
that point we would look at the testing

00:06:25,680 --> 00:06:29,520
to see what tests have been written

00:06:27,600 --> 00:06:30,720
that would because we would have we

00:06:29,520 --> 00:06:33,199
should have been testing that

00:06:30,720 --> 00:06:34,800
anyway and then that kind of goes all

00:06:33,199 --> 00:06:36,560
back into fixing that bug so

00:06:34,800 --> 00:06:38,240
we much preferred at these things which

00:06:36,560 --> 00:06:39,199
could have been caught by eslint if we

00:06:38,240 --> 00:06:41,759
did have

00:06:39,199 --> 00:06:43,600
which we do have now in place uh eslim

00:06:41,759 --> 00:06:45,840
can help us catch those types of

00:06:43,600 --> 00:06:46,960
um accessibility bugs that are kind of

00:06:45,840 --> 00:06:49,120
surface level

00:06:46,960 --> 00:06:51,039
and at in that point we could have fixed

00:06:49,120 --> 00:06:54,240
it before even even shipping in

00:06:51,039 --> 00:06:55,759
oh great great so a lot of i mean you

00:06:54,240 --> 00:06:57,919
catch a lot before it even reaches a

00:06:55,759 --> 00:07:01,360
general consumer so that's

00:06:57,919 --> 00:07:03,280
that's huge yeah yeah of course um

00:07:01,360 --> 00:07:06,000
so i know you mentioned some other

00:07:03,280 --> 00:07:08,800
openjs foundation projects you're using

00:07:06,000 --> 00:07:10,319
a node.js for example how is expedia

00:07:08,800 --> 00:07:13,360
using node.js

00:07:10,319 --> 00:07:16,400
so notice we expedia used to be

00:07:13,360 --> 00:07:18,000
more java and jsp centric and there was

00:07:16,400 --> 00:07:21,360
a push to kind of modernize

00:07:18,000 --> 00:07:21,919
these these applications using node and

00:07:21,360 --> 00:07:24,560
react

00:07:21,919 --> 00:07:26,240
and and typescript so now most of our

00:07:24,560 --> 00:07:28,800
applications i'd say

00:07:26,240 --> 00:07:30,720
that are serving web pages are using

00:07:28,800 --> 00:07:32,560
using node um

00:07:30,720 --> 00:07:34,639
and it's been working very well i think

00:07:32,560 --> 00:07:36,800
that there's been a lot of

00:07:34,639 --> 00:07:38,720
training for kind of getting our java

00:07:36,800 --> 00:07:40,639
developers more familiar with javascript

00:07:38,720 --> 00:07:42,080
but node in itself has been going going

00:07:40,639 --> 00:07:44,960
very smoothly and we use node

00:07:42,080 --> 00:07:45,199
paired with express for for apps which

00:07:44,960 --> 00:07:48,800
is

00:07:45,199 --> 00:07:52,560
express of course is another open js

00:07:48,800 --> 00:07:54,560
project and to server pages and

00:07:52,560 --> 00:07:56,400
it's also part of our internal

00:07:54,560 --> 00:07:59,440
scaffolding and build tool

00:07:56,400 --> 00:08:00,800
so scaffolding is being kind of setting

00:07:59,440 --> 00:08:02,560
up that repository and

00:08:00,800 --> 00:08:04,639
the build tool kind of very similar to

00:08:02,560 --> 00:08:07,360
create react app we have our own

00:08:04,639 --> 00:08:07,840
uh that spins up these with these web

00:08:07,360 --> 00:08:10,479
apps

00:08:07,840 --> 00:08:12,800
and we use uh that scaffolding tool uses

00:08:10,479 --> 00:08:15,280
node and express and all those tools

00:08:12,800 --> 00:08:16,000
great that's great to hear um you're

00:08:15,280 --> 00:08:18,240
even using

00:08:16,000 --> 00:08:20,240
i talked about sort of the globalization

00:08:18,240 --> 00:08:21,039
aspect i think i heard you're using some

00:08:20,240 --> 00:08:22,800
of our

00:08:21,039 --> 00:08:24,720
our other technologies how do you

00:08:22,800 --> 00:08:27,919
globalize and scale your

00:08:24,720 --> 00:08:30,080
your apps yeah so as as you know our

00:08:27,919 --> 00:08:32,080
users are really from all over the world

00:08:30,080 --> 00:08:34,159
and they are purchasing

00:08:32,080 --> 00:08:35,760
or they're renting properties for

00:08:34,159 --> 00:08:38,159
certain dates and travels so

00:08:35,760 --> 00:08:39,839
having that invoice come out with really

00:08:38,159 --> 00:08:40,640
the proper currency the proper date

00:08:39,839 --> 00:08:43,120
formats is

00:08:40,640 --> 00:08:43,760
and and all that is extremely extremely

00:08:43,120 --> 00:08:45,600
important

00:08:43,760 --> 00:08:47,279
and also and i'm sure any developer

00:08:45,600 --> 00:08:49,360
would say dealing with dates and

00:08:47,279 --> 00:08:50,160
formatting and localization is a huge

00:08:49,360 --> 00:08:52,560
pain

00:08:50,160 --> 00:08:53,200
and having globalized air and globalized

00:08:52,560 --> 00:08:55,600
within our

00:08:53,200 --> 00:08:57,360
internal build and scaffolding tool is

00:08:55,600 --> 00:08:59,839
super helpful and makes that

00:08:57,360 --> 00:09:01,920
that really difficult complex piece of

00:08:59,839 --> 00:09:03,360
work really trivial for us to use

00:09:01,920 --> 00:09:06,240
that's great i'm sure the globalized

00:09:03,360 --> 00:09:09,680
maintainers will be happy to hear that

00:09:06,240 --> 00:09:11,440
absolutely so how do you all measure

00:09:09,680 --> 00:09:13,200
what you're building i mean from a

00:09:11,440 --> 00:09:14,160
developer point of view or maybe just

00:09:13,200 --> 00:09:15,760
your team

00:09:14,160 --> 00:09:17,440
what kinds of things do you look at

00:09:15,760 --> 00:09:20,720
overall

00:09:17,440 --> 00:09:22,720
uh we in terms of

00:09:20,720 --> 00:09:24,720
metrics what you're how do you measure

00:09:22,720 --> 00:09:27,519
your success

00:09:24,720 --> 00:09:27,839
we we do it in a few ways there's i

00:09:27,519 --> 00:09:29,440
think

00:09:27,839 --> 00:09:32,399
when i first joined it kind of started

00:09:29,440 --> 00:09:34,640
out as a conversion rates of how

00:09:32,399 --> 00:09:36,959
how many people were based on certain

00:09:34,640 --> 00:09:39,839
experience how many people were

00:09:36,959 --> 00:09:40,320
buying uh booking more properties based

00:09:39,839 --> 00:09:41,839
on if

00:09:40,320 --> 00:09:43,680
it was red or if it was blue or not

00:09:41,839 --> 00:09:46,320
that's not really an experiment but

00:09:43,680 --> 00:09:47,920
to show my point and now we're taking in

00:09:46,320 --> 00:09:51,519
account a little bit more

00:09:47,920 --> 00:09:54,640
qualitative data of trying to see well

00:09:51,519 --> 00:09:56,959
maybe right now it's it's not as

00:09:54,640 --> 00:09:58,640
impactful but in the long run then this

00:09:56,959 --> 00:09:59,519
is going to improve the customer

00:09:58,640 --> 00:10:02,000
experience and

00:09:59,519 --> 00:10:03,279
provide customer value in different

00:10:02,000 --> 00:10:05,120
other ways as well so

00:10:03,279 --> 00:10:06,480
i'm not a product manager but it's

00:10:05,120 --> 00:10:09,680
that's kind of how

00:10:06,480 --> 00:10:11,200
i see it being looked at great it sounds

00:10:09,680 --> 00:10:12,959
like you pretty have a really nice

00:10:11,200 --> 00:10:14,079
integration with the product managers

00:10:12,959 --> 00:10:17,360
your dev team

00:10:14,079 --> 00:10:19,440
probably marketing folks for seo

00:10:17,360 --> 00:10:20,959
yeah we have our we have our own seo

00:10:19,440 --> 00:10:21,839
team and we have our product managers

00:10:20,959 --> 00:10:24,320
that kind of

00:10:21,839 --> 00:10:25,920
really let us know uh why something is

00:10:24,320 --> 00:10:28,000
is winning or how how

00:10:25,920 --> 00:10:29,360
how it's doing and how we can improve it

00:10:28,000 --> 00:10:30,000
and the developers are right part of

00:10:29,360 --> 00:10:34,000
that

00:10:30,000 --> 00:10:37,839
that's pretty cool um great

00:10:34,000 --> 00:10:38,560
so um let's see what other questions do

00:10:37,839 --> 00:10:40,880
i have

00:10:38,560 --> 00:10:42,640
um one question i always like to ask

00:10:40,880 --> 00:10:44,800
developers when they're working

00:10:42,640 --> 00:10:46,240
is like what would be just a great day

00:10:44,800 --> 00:10:47,360
for you what's a great day when you come

00:10:46,240 --> 00:10:50,399
into work and you're like

00:10:47,360 --> 00:10:52,240
this is a great day a day a great day

00:10:50,399 --> 00:10:52,800
for me is when i don't have too many

00:10:52,240 --> 00:10:55,680
meetings

00:10:52,800 --> 00:10:57,839
and i can concentrate on on doing one

00:10:55,680 --> 00:10:59,680
task i'm i'm at a point where i

00:10:57,839 --> 00:11:01,760
most of what i do is helping others and

00:10:59,680 --> 00:11:03,279
kind of getting on meetings pairing and

00:11:01,760 --> 00:11:04,640
and figuring that out and that's great

00:11:03,279 --> 00:11:05,440
but sometimes they just want to be able

00:11:04,640 --> 00:11:07,600
to

00:11:05,440 --> 00:11:08,640
delve into a problem and spend a few

00:11:07,600 --> 00:11:10,880
days or

00:11:08,640 --> 00:11:12,000
even consecutive three hours of of

00:11:10,880 --> 00:11:13,680
solving it

00:11:12,000 --> 00:11:15,360
um and then being able to push it merge

00:11:13,680 --> 00:11:15,839
it in at the end having all the tests

00:11:15,360 --> 00:11:18,640
pass

00:11:15,839 --> 00:11:19,040
and that's that's a great day that's

00:11:18,640 --> 00:11:20,720
great

00:11:19,040 --> 00:11:22,560
well you've been sharing your expertise

00:11:20,720 --> 00:11:24,160
with others as well public speaking i

00:11:22,560 --> 00:11:26,079
know you spoke at open.js world in

00:11:24,160 --> 00:11:28,640
montreal so

00:11:26,079 --> 00:11:29,839
yeah and oh and uh the oscon superstream

00:11:28,640 --> 00:11:31,600
those are my first two

00:11:29,839 --> 00:11:33,360
speaker experiences hopefully i'll do

00:11:31,600 --> 00:11:35,120
more that's great and i know we have

00:11:33,360 --> 00:11:37,760
your slides on our website from

00:11:35,120 --> 00:11:39,279
uh from the montreal event for people

00:11:37,760 --> 00:11:41,360
who want to do a deep dive on some of

00:11:39,279 --> 00:11:44,959
the solutions

00:11:41,360 --> 00:11:46,399
great so is there anything i missed that

00:11:44,959 --> 00:11:46,959
you think would be important to share

00:11:46,399 --> 00:11:50,399
for

00:11:46,959 --> 00:11:53,120
developers working in in your space

00:11:50,399 --> 00:11:55,120
well i think that ui testing in general

00:11:53,120 --> 00:11:55,519
is is pretty new and there's a lot of

00:11:55,120 --> 00:11:58,079
new

00:11:55,519 --> 00:11:59,120
modern tools that can make make things a

00:11:58,079 --> 00:12:02,320
lot better

00:11:59,120 --> 00:12:04,160
um before and you had to kind of always

00:12:02,320 --> 00:12:06,639
use these selenium-based or

00:12:04,160 --> 00:12:07,600
rather web driver based tools and it was

00:12:06,639 --> 00:12:09,680
always kind of flaky

00:12:07,600 --> 00:12:11,920
and annoying and people would have to

00:12:09,680 --> 00:12:14,320
people even at expedia we have some

00:12:11,920 --> 00:12:16,720
repos that still kind of use these and

00:12:14,320 --> 00:12:18,639
it's always a pain to have to refactor

00:12:16,720 --> 00:12:20,079
or make any new changes if people dread

00:12:18,639 --> 00:12:20,800
that testing pipeline so i think it's

00:12:20,079 --> 00:12:22,320
important

00:12:20,800 --> 00:12:24,079
even though it's a little bit it can be

00:12:22,320 --> 00:12:26,560
a little bit daunting to look into

00:12:24,079 --> 00:12:28,720
these tools and to try to build it in a

00:12:26,560 --> 00:12:29,120
user-centric way which is not something

00:12:28,720 --> 00:12:31,120
that

00:12:29,120 --> 00:12:32,160
i think a lot of people would normally

00:12:31,120 --> 00:12:33,760
think about

00:12:32,160 --> 00:12:35,600
but it helps so much and it helps the

00:12:33,760 --> 00:12:37,920
developer experience

00:12:35,600 --> 00:12:39,040
that's so fast yeah that's very cool and

00:12:37,920 --> 00:12:40,560
that user-centric

00:12:39,040 --> 00:12:42,480
testing is really what you've been

00:12:40,560 --> 00:12:44,320
really sharing your knowledge so

00:12:42,480 --> 00:12:46,560
we really appreciate you sharing your

00:12:44,320 --> 00:12:48,560
knowledge with us the openjs foundation

00:12:46,560 --> 00:12:52,160
and all of our communities and

00:12:48,560 --> 00:12:55,040
i really appreciate expedia as a great

00:12:52,160 --> 00:13:05,120
case study for our technologies of

00:12:55,040 --> 00:13:05,120

YouTube URL: https://www.youtube.com/watch?v=FDF6SgtEvYY


