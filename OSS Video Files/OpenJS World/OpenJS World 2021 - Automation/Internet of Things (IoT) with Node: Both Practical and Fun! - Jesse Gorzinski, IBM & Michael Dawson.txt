Title: Internet of Things (IoT) with Node: Both Practical and Fun! - Jesse Gorzinski, IBM & Michael Dawson
Publication date: 2021-05-31
Playlist: OpenJS World 2021 - Automation
Description: 
	As we know, IoT devices are all around us. Donâ€™t get left behind as companies around the world create competitive advantage by gathering valuable data through IoT connected devices! This module will show you what software you need and how to start building the programs that will allow you to gather and process data.We will show you some simple devices as well as sample programs that can be used to integrate those devices with business systems.
Captions: 
	00:00:00,799 --> 00:00:04,560
so welcome to openjs world and today

00:00:03,199 --> 00:00:06,080
jesse and i are going to be talking to

00:00:04,560 --> 00:00:08,240
you about internet of things with

00:00:06,080 --> 00:00:09,599
node.js both practical and fun

00:00:08,240 --> 00:00:11,840
before we get started a little bit about

00:00:09,599 --> 00:00:14,799
ourselves i'm michael dawson

00:00:11,840 --> 00:00:16,480
the node.js lead for ibm and red hat

00:00:14,799 --> 00:00:18,000
what that means is i get to be

00:00:16,480 --> 00:00:19,439
an active community member i'm a

00:00:18,000 --> 00:00:20,480
collaborator member of the technical

00:00:19,439 --> 00:00:24,080
steering committee

00:00:20,480 --> 00:00:26,320
and generally active across the project

00:00:24,080 --> 00:00:27,840
it also gets to me that mean it means

00:00:26,320 --> 00:00:30,080
that i get to work with great teams

00:00:27,840 --> 00:00:32,239
across red hat and ibm

00:00:30,080 --> 00:00:33,520
for example jesse in terms of our

00:00:32,239 --> 00:00:34,640
support for node.js on different

00:00:33,520 --> 00:00:36,800
platforms

00:00:34,640 --> 00:00:38,079
as well as you know all sorts of things

00:00:36,800 --> 00:00:41,920
in terms of making node.js

00:00:38,079 --> 00:00:41,920
first-class citizens in our offerings

00:00:42,000 --> 00:00:46,480
and thank you michael i'm jesse i'm uh

00:00:44,239 --> 00:00:48,800
work with ibm as michael mentioned i'm

00:00:46,480 --> 00:00:50,879
the business architect of open source on

00:00:48,800 --> 00:00:52,160
a platform known as ibm i

00:00:50,879 --> 00:00:54,559
uh which you may have not heard about

00:00:52,160 --> 00:00:57,120
before but it's definitely a

00:00:54,559 --> 00:00:58,079
a platform with a strong im like strong

00:00:57,120 --> 00:01:00,320
footprint and it

00:00:58,079 --> 00:01:02,559
powered banks insurance companies all

00:01:00,320 --> 00:01:03,760
kinds of fortune 100 and fortune 500

00:01:02,559 --> 00:01:06,320
companies as well

00:01:03,760 --> 00:01:06,960
uh but in my role here at ibm i get to

00:01:06,320 --> 00:01:09,600
set the

00:01:06,960 --> 00:01:12,799
strategy around open source technologies

00:01:09,600 --> 00:01:13,439
for that ibm i platform around things

00:01:12,799 --> 00:01:17,200
like

00:01:13,439 --> 00:01:17,200
open source languages and iot

00:01:17,360 --> 00:01:20,640
so just before we get started a little

00:01:18,799 --> 00:01:22,159
bit of an idea of what we're going to go

00:01:20,640 --> 00:01:23,840
through so we're going to start with a

00:01:22,159 --> 00:01:26,560
brief introduction to iot

00:01:23,840 --> 00:01:27,680
and mqtt so what are they why are they

00:01:26,560 --> 00:01:30,240
important

00:01:27,680 --> 00:01:31,680
we'll look at using mqtt with node.js

00:01:30,240 --> 00:01:33,360
because they're a great fit

00:01:31,680 --> 00:01:35,920
we'll take a look at some real physical

00:01:33,360 --> 00:01:36,400
devices we'll talk about the anatomy of

00:01:35,920 --> 00:01:38,799
a simple

00:01:36,400 --> 00:01:40,079
mqtt light and temperature sensor sensor

00:01:38,799 --> 00:01:43,439
that might fit one of your business

00:01:40,079 --> 00:01:45,040
use cases we'll then show you mqtt and

00:01:43,439 --> 00:01:47,680
devices in action

00:01:45,040 --> 00:01:48,720
uh in a demo part we'll then touch on

00:01:47,680 --> 00:01:50,960
leveraging

00:01:48,720 --> 00:01:52,560
mqtt with the cloud and we'll finally

00:01:50,960 --> 00:01:53,920
we'll finish up with a few thoughts on

00:01:52,560 --> 00:01:57,040
reactive applications

00:01:53,920 --> 00:01:58,960
and kafka so

00:01:57,040 --> 00:02:00,240
to start with what is the internet of

00:01:58,960 --> 00:02:01,920
things

00:02:00,240 --> 00:02:04,640
generally it's what's used to refer to a

00:02:01,920 --> 00:02:07,040
network of physically connected devices

00:02:04,640 --> 00:02:09,119
these devices provide data often you

00:02:07,040 --> 00:02:09,759
know a constant stream of things like

00:02:09,119 --> 00:02:12,319
temperature

00:02:09,759 --> 00:02:13,680
pressure and so forth they can also

00:02:12,319 --> 00:02:15,120
often be controlled though you can send

00:02:13,680 --> 00:02:16,879
a message back to the device and you

00:02:15,120 --> 00:02:19,280
could turn a light on or off

00:02:16,879 --> 00:02:20,560
uh open a door those kinds of things and

00:02:19,280 --> 00:02:22,160
if you want a more

00:02:20,560 --> 00:02:24,640
comprehensive description you can go and

00:02:22,160 --> 00:02:27,920
check out the wikipedia listing

00:02:24,640 --> 00:02:29,760
for the internet of things now

00:02:27,920 --> 00:02:31,760
one of the most commonly used protocols

00:02:29,760 --> 00:02:35,280
with iot devices

00:02:31,760 --> 00:02:37,280
is mqtt it's uh mq

00:02:35,280 --> 00:02:39,200
it stands for mq telemetry transport was

00:02:37,280 --> 00:02:39,680
actually invited and invented by uh

00:02:39,200 --> 00:02:42,239
somebody

00:02:39,680 --> 00:02:44,080
at ibm quite a while ago and it's really

00:02:42,239 --> 00:02:47,280
popular because it's really lightweight

00:02:44,080 --> 00:02:48,879
you can do a publish and subscribe um so

00:02:47,280 --> 00:02:50,640
it's it's a message based where you you

00:02:48,879 --> 00:02:51,760
publish the topics and you can subscribe

00:02:50,640 --> 00:02:54,560
subscribe to talk

00:02:51,760 --> 00:02:56,160
topics but it's very small it's got a

00:02:54,560 --> 00:02:57,920
small footprint it requires low

00:02:56,160 --> 00:02:59,120
bandwidth so you can get it into small

00:02:57,920 --> 00:03:00,800
devices

00:02:59,120 --> 00:03:03,040
and it's fairly easy to use and that's

00:03:00,800 --> 00:03:05,760
you know kind of why it's so popular

00:03:03,040 --> 00:03:08,080
again you know if you want to go back to

00:03:05,760 --> 00:03:10,560
a reference you can look at mqtt.org in

00:03:08,080 --> 00:03:12,159
terms of the the formal definition there

00:03:10,560 --> 00:03:14,159
the great thing is it's asynchronous

00:03:12,159 --> 00:03:16,400
which is a really good fit for node.js

00:03:14,159 --> 00:03:18,080
as we know

00:03:16,400 --> 00:03:20,080
so let's dive into some of the specific

00:03:18,080 --> 00:03:20,560
terminology so the first thing you need

00:03:20,080 --> 00:03:23,920
to know

00:03:20,560 --> 00:03:25,760
is the client and the broker so clients

00:03:23,920 --> 00:03:28,159
are basically you know devices

00:03:25,760 --> 00:03:29,599
applications running on san ibmi or some

00:03:28,159 --> 00:03:32,480
other platform

00:03:29,599 --> 00:03:35,360
who connects to a topic either to

00:03:32,480 --> 00:03:37,680
publish or subscribe messages

00:03:35,360 --> 00:03:38,400
there's some great clients out there so

00:03:37,680 --> 00:03:40,640
faux

00:03:38,400 --> 00:03:42,239
and mqtt js so file is one which

00:03:40,640 --> 00:03:43,920
provides clients across a number of

00:03:42,239 --> 00:03:47,280
different platforms

00:03:43,920 --> 00:03:49,920
and languages mqtt js is a

00:03:47,280 --> 00:03:51,120
npm module i'm written by one of the the

00:03:49,920 --> 00:03:53,680
members of the

00:03:51,120 --> 00:03:55,439
node ecosystem and you know it's a great

00:03:53,680 --> 00:03:57,519
choice when we're using them

00:03:55,439 --> 00:03:59,360
the broker is the piece that actually

00:03:57,519 --> 00:04:02,480
provides

00:03:59,360 --> 00:04:02,959
the the message cues and the persistence

00:04:02,480 --> 00:04:04,879
and

00:04:02,959 --> 00:04:06,799
sort of the back and often mqtt is

00:04:04,879 --> 00:04:07,680
provided as a protocol along with a

00:04:06,799 --> 00:04:09,599
bunch of other

00:04:07,680 --> 00:04:11,680
uh protocols so later on jesse's going

00:04:09,599 --> 00:04:15,200
to show us uh amq

00:04:11,680 --> 00:04:18,160
and amq supports a number of different

00:04:15,200 --> 00:04:18,880
protocols mqtt being one of them

00:04:18,160 --> 00:04:21,519
mosquito

00:04:18,880 --> 00:04:22,320
is a you know a javascript pure

00:04:21,519 --> 00:04:23,680
javascript

00:04:22,320 --> 00:04:25,840
broker that you can also use for

00:04:23,680 --> 00:04:27,759
experiment experimentation as well so

00:04:25,840 --> 00:04:30,639
that's the client in the broker

00:04:27,759 --> 00:04:32,240
topics are basically you know an id that

00:04:30,639 --> 00:04:34,080
we subscribe to when we want to listen

00:04:32,240 --> 00:04:36,080
for messages or what we publish on when

00:04:34,080 --> 00:04:38,000
we want to send messages

00:04:36,080 --> 00:04:39,440
messages themselves are free form so

00:04:38,000 --> 00:04:41,680
they can basically be any

00:04:39,440 --> 00:04:42,960
any text so it's up to you to figure out

00:04:41,680 --> 00:04:44,240
what that formatting is going to look

00:04:42,960 --> 00:04:46,240
like

00:04:44,240 --> 00:04:48,160
and then qos stands for quality of

00:04:46,240 --> 00:04:49,440
service and mqtt provides three

00:04:48,160 --> 00:04:51,680
different qualities of service

00:04:49,440 --> 00:04:54,479
0 1 and 2 which we'll talk about in the

00:04:51,680 --> 00:04:57,600
subsequent slides

00:04:54,479 --> 00:04:59,680
so let's look at topics topics are

00:04:57,600 --> 00:05:01,440
uh you know one or more levels separated

00:04:59,680 --> 00:05:04,720
by a topic center separator

00:05:01,440 --> 00:05:05,840
and in in this example you know we have

00:05:04,720 --> 00:05:07,440
factory is one level

00:05:05,840 --> 00:05:09,600
floor is another level and machine is

00:05:07,440 --> 00:05:12,320
another level and i can

00:05:09,600 --> 00:05:14,960
you know ask when i subscribe i can i

00:05:12,320 --> 00:05:16,639
can subscribe to a very specific level

00:05:14,960 --> 00:05:18,240
you know so i can subscribe to factory

00:05:16,639 --> 00:05:19,360
floor machine one in which case i'll

00:05:18,240 --> 00:05:21,919
just get

00:05:19,360 --> 00:05:23,919
uh messages for that one topic or i can

00:05:21,919 --> 00:05:24,880
subscribe using wildcards which i show a

00:05:23,919 --> 00:05:26,960
little bit below

00:05:24,880 --> 00:05:28,800
so that i can get like all messages for

00:05:26,960 --> 00:05:30,320
topics that are underneath factory floor

00:05:28,800 --> 00:05:33,120
one for example

00:05:30,320 --> 00:05:34,960
there are a few restrictions um they

00:05:33,120 --> 00:05:37,199
must be at least one character each

00:05:34,960 --> 00:05:39,039
each level and they are case sensitive

00:05:37,199 --> 00:05:41,039
so it's good to be aware of

00:05:39,039 --> 00:05:42,639
wild cards which are very useful when

00:05:41,039 --> 00:05:44,479
you're subscribing on topics

00:05:42,639 --> 00:05:46,720
are the plus which matches a single

00:05:44,479 --> 00:05:49,039
level um

00:05:46,720 --> 00:05:51,120
so in in this case you know factory plus

00:05:49,039 --> 00:05:53,199
slash plus slash machine one will match

00:05:51,120 --> 00:05:55,280
factory floor 1 machine 1

00:05:53,199 --> 00:05:57,600
but not you know something where there's

00:05:55,280 --> 00:05:59,120
two intermediate levels like the second

00:05:57,600 --> 00:06:01,759
example

00:05:59,120 --> 00:06:03,280
the hash sign number sign matches

00:06:01,759 --> 00:06:04,720
multiple levels

00:06:03,280 --> 00:06:07,199
but it's only allowed at the end so it

00:06:04,720 --> 00:06:09,680
basically says i want to get

00:06:07,199 --> 00:06:10,800
messages for all topics below this route

00:06:09,680 --> 00:06:12,400
that i'm specifying

00:06:10,800 --> 00:06:14,000
and those end up being quite quite

00:06:12,400 --> 00:06:15,440
useful

00:06:14,000 --> 00:06:16,880
at very least if you're trying to figure

00:06:15,440 --> 00:06:17,840
out what topics are available and

00:06:16,880 --> 00:06:20,880
messages are

00:06:17,840 --> 00:06:21,520
are coming into you on quality of

00:06:20,880 --> 00:06:23,600
service

00:06:21,520 --> 00:06:25,919
uh there's three levels they're very

00:06:23,600 --> 00:06:28,720
simple you know zero is at most once

00:06:25,919 --> 00:06:29,600
one is at least once and two is exactly

00:06:28,720 --> 00:06:31,440
once

00:06:29,600 --> 00:06:33,759
and if you think about simple devices at

00:06:31,440 --> 00:06:35,680
least often you know at most once is

00:06:33,759 --> 00:06:37,360
is all you need if i'm sending a you

00:06:35,680 --> 00:06:39,280
know a stream of

00:06:37,360 --> 00:06:41,919
temperature readings it really doesn't

00:06:39,280 --> 00:06:45,520
matter if i me if i miss

00:06:41,919 --> 00:06:47,120
you know a message

00:06:45,520 --> 00:06:48,560
because the next one will come along and

00:06:47,120 --> 00:06:50,080
you know i'll still have the data but

00:06:48,560 --> 00:06:50,960
depending on your application you can

00:06:50,080 --> 00:06:52,560
use

00:06:50,960 --> 00:06:54,000
um some of the other ones which is like

00:06:52,560 --> 00:06:55,599
at least once you're guaranteed to have

00:06:54,000 --> 00:06:56,720
it delivered although it may be repeated

00:06:55,599 --> 00:06:59,039
in that case

00:06:56,720 --> 00:07:00,560
and then two is like its own you're only

00:06:59,039 --> 00:07:03,039
ever going to get it

00:07:00,560 --> 00:07:04,800
of course as you pick the higher levels

00:07:03,039 --> 00:07:06,160
there's going to be more overhead and so

00:07:04,800 --> 00:07:08,240
you know unless you really need to you

00:07:06,160 --> 00:07:10,800
know zero is probably the way to go

00:07:08,240 --> 00:07:12,080
the other thing is is that the qs is

00:07:10,800 --> 00:07:13,680
determined

00:07:12,080 --> 00:07:15,360
by the receiver so even if you actually

00:07:13,680 --> 00:07:17,120
ask for a higher

00:07:15,360 --> 00:07:18,479
quality of service when you're sending

00:07:17,120 --> 00:07:21,280
you may not get that on

00:07:18,479 --> 00:07:21,280
on the other end

00:07:21,520 --> 00:07:24,880
so now over to jesse to sort of give us

00:07:23,680 --> 00:07:26,240
a little bit of why are people

00:07:24,880 --> 00:07:29,360
interested in iot

00:07:26,240 --> 00:07:32,240
in our context yeah thanks michael and

00:07:29,360 --> 00:07:34,000
you know obviously it's easy to see that

00:07:32,240 --> 00:07:36,160
iot continues to play

00:07:34,000 --> 00:07:37,440
a growing part in everybody's day-to-day

00:07:36,160 --> 00:07:41,039
lives right i'm guessing

00:07:37,440 --> 00:07:42,880
each person attending today uses iot in

00:07:41,039 --> 00:07:44,160
some shape or fashion and probably with

00:07:42,880 --> 00:07:46,319
multiple devices

00:07:44,160 --> 00:07:49,680
right we have smart watches smart

00:07:46,319 --> 00:07:51,360
appliances smart tvs smart cars

00:07:49,680 --> 00:07:52,800
all of these things we call smart but we

00:07:51,360 --> 00:07:55,599
have iot devices

00:07:52,800 --> 00:07:57,199
uh more and more prevalently available

00:07:55,599 --> 00:07:59,840
in our life

00:07:57,199 --> 00:08:02,080
but from a business perspective if you

00:07:59,840 --> 00:08:03,199
are a developer or a manager or an

00:08:02,080 --> 00:08:05,919
architect

00:08:03,199 --> 00:08:06,960
and you're trying to see you know am i

00:08:05,919 --> 00:08:09,520
in an industry that

00:08:06,960 --> 00:08:10,479
cares about iot the short answer is most

00:08:09,520 --> 00:08:14,160
likely yes

00:08:10,479 --> 00:08:16,400
because iot technology now is really

00:08:14,160 --> 00:08:17,520
transcending across many different

00:08:16,400 --> 00:08:21,520
industries

00:08:17,520 --> 00:08:23,440
right so we have ibm i clients for

00:08:21,520 --> 00:08:25,199
instance in the trucking industry who

00:08:23,440 --> 00:08:26,319
are managing their fleet to make sure

00:08:25,199 --> 00:08:28,000
that

00:08:26,319 --> 00:08:29,840
things like the temperature of their

00:08:28,000 --> 00:08:30,319
meat when it's in shipment is good to

00:08:29,840 --> 00:08:32,800
keep

00:08:30,319 --> 00:08:34,560
the product safe and so on you know we

00:08:32,800 --> 00:08:36,000
have clients in the medical industry and

00:08:34,560 --> 00:08:37,760
they're investing in smart

00:08:36,000 --> 00:08:39,200
smart devices that are easier to

00:08:37,760 --> 00:08:41,360
maintain have

00:08:39,200 --> 00:08:43,440
lower rates of failure and things like

00:08:41,360 --> 00:08:45,760
that as well so iot

00:08:43,440 --> 00:08:48,560
is uh very prevalent in many many

00:08:45,760 --> 00:08:51,200
industries these days

00:08:48,560 --> 00:08:53,040
um okay now just oh yeah there you go we

00:08:51,200 --> 00:08:55,120
lost your video there for a second so

00:08:53,040 --> 00:08:56,240
you're back sorry i'm back all right

00:08:55,120 --> 00:09:00,240
fantastic

00:08:56,240 --> 00:09:02,000
um so we do have in there

00:09:00,240 --> 00:09:03,360
lost me again all right all right now

00:09:02,000 --> 00:09:06,080
now we see again

00:09:03,360 --> 00:09:08,480
all right fantastic um so a simple

00:09:06,080 --> 00:09:11,760
publisher example that we have here is

00:09:08,480 --> 00:09:13,600
uh written with that mqtt js project

00:09:11,760 --> 00:09:16,480
that michael mentioned

00:09:13,600 --> 00:09:18,720
that is relatively easy to use

00:09:16,480 --> 00:09:21,040
relatively flexible

00:09:18,720 --> 00:09:22,800
and it's kind of the tool of choice for

00:09:21,040 --> 00:09:26,640
us because of those

00:09:22,800 --> 00:09:26,640
reasons right um

00:09:26,959 --> 00:09:32,080
oh lost my video again

00:09:30,480 --> 00:09:33,839
we're getting a little bit of technical

00:09:32,080 --> 00:09:34,720
glitches a little bit of technical

00:09:33,839 --> 00:09:36,880
glitches

00:09:34,720 --> 00:09:38,720
uh the iot technology works much better

00:09:36,880 --> 00:09:42,720
than my current

00:09:38,720 --> 00:09:44,160
my current webcam technology but um

00:09:42,720 --> 00:09:45,920
top to bottom it's a pretty simple

00:09:44,160 --> 00:09:46,720
example in the sense that we just

00:09:45,920 --> 00:09:48,480
require

00:09:46,720 --> 00:09:50,000
some pretty common modules that you see

00:09:48,480 --> 00:09:54,240
with fs and path

00:09:50,000 --> 00:09:56,399
we require in this mqtt js module

00:09:54,240 --> 00:09:57,680
and you know most of the code is

00:09:56,399 --> 00:10:00,480
actually setting up

00:09:57,680 --> 00:10:02,000
the ssl bit because we chose in our

00:10:00,480 --> 00:10:04,560
demos that we set up

00:10:02,000 --> 00:10:06,560
to encrypt the communications with tls

00:10:04,560 --> 00:10:08,800
and so that requires us to set up the

00:10:06,560 --> 00:10:10,640
options with uh the client certificate

00:10:08,800 --> 00:10:11,920
and certificate authority trust stores

00:10:10,640 --> 00:10:13,519
and things like that

00:10:11,920 --> 00:10:15,920
and so really you can see we're just

00:10:13,519 --> 00:10:19,440
setting that up in this mqtt options

00:10:15,920 --> 00:10:21,440
object and then we call the mqtt.js

00:10:19,440 --> 00:10:23,440
library to connect to

00:10:21,440 --> 00:10:25,279
the broker of choice in this particular

00:10:23,440 --> 00:10:26,079
case it's an ibm i system we use for

00:10:25,279 --> 00:10:29,279
demo

00:10:26,079 --> 00:10:30,880
and then once we're subs connected we

00:10:29,279 --> 00:10:33,279
can subscribe to a topic

00:10:30,880 --> 00:10:34,640
and in this case we just spit that

00:10:33,279 --> 00:10:36,880
output out to

00:10:34,640 --> 00:10:37,920
the console just for quick demo debug

00:10:36,880 --> 00:10:39,760
purposes

00:10:37,920 --> 00:10:40,959
right and the previous one the previous

00:10:39,760 --> 00:10:44,000
page just showed you know

00:10:40,959 --> 00:10:46,079
actually publishing on the same topic

00:10:44,000 --> 00:10:47,600
yep absolutely and the code is pretty

00:10:46,079 --> 00:10:48,959
much the same it's just

00:10:47,600 --> 00:10:50,320
the only thing that's different is what

00:10:48,959 --> 00:10:52,079
are you going to do once you get

00:10:50,320 --> 00:10:55,200
connected you register

00:10:52,079 --> 00:10:58,800
a callback for a message received versus

00:10:55,200 --> 00:11:00,399
um calling the readily made apis for

00:10:58,800 --> 00:11:03,440
doing that simple publish

00:11:00,399 --> 00:11:04,959
to that mqtt broker that's right we just

00:11:03,440 --> 00:11:06,560
didn't want people you know anybody

00:11:04,959 --> 00:11:09,040
being able to publish to our broker so

00:11:06,560 --> 00:11:11,360
we added some security

00:11:09,040 --> 00:11:13,279
so now we can move on and actually look

00:11:11,360 --> 00:11:16,640
at some some devices

00:11:13,279 --> 00:11:17,200
the the you know the the the iot devices

00:11:16,640 --> 00:11:19,200
you can use

00:11:17,200 --> 00:11:20,399
range from all sorts of different things

00:11:19,200 --> 00:11:23,120
and sizes

00:11:20,399 --> 00:11:24,560
if you look at the the lower right

00:11:23,120 --> 00:11:26,560
that's an esp-01

00:11:24,560 --> 00:11:27,600
that's a very small but it has built-in

00:11:26,560 --> 00:11:29,440
wireless

00:11:27,600 --> 00:11:31,200
and you know enough memory to be able to

00:11:29,440 --> 00:11:33,440
run a small program

00:11:31,200 --> 00:11:35,279
and you know the one beside it is a

00:11:33,440 --> 00:11:36,079
slightly larger one that already has

00:11:35,279 --> 00:11:38,640
like a usb

00:11:36,079 --> 00:11:39,360
port it's uh it's one that i commonly

00:11:38,640 --> 00:11:40,720
use because

00:11:39,360 --> 00:11:42,399
you can just plug it in and now you've

00:11:40,720 --> 00:11:43,519
got something that's got some pins that

00:11:42,399 --> 00:11:47,120
you can use to

00:11:43,519 --> 00:11:48,480
turn things on and off take readings

00:11:47,120 --> 00:11:50,399
and then all the way up to something

00:11:48,480 --> 00:11:53,360
like on the top left where we have

00:11:50,399 --> 00:11:55,040
a raspberry pi where you can run you

00:11:53,360 --> 00:11:57,120
know a real operating system

00:11:55,040 --> 00:11:58,720
and you know all sorts of things in in

00:11:57,120 --> 00:12:00,720
between i kind of like the

00:11:58,720 --> 00:12:01,839
the the socket one on the on the right

00:12:00,720 --> 00:12:03,760
because that's one where actually you

00:12:01,839 --> 00:12:04,720
can load in your own javascript code

00:12:03,760 --> 00:12:06,880
connect to an it

00:12:04,720 --> 00:12:07,920
iot network and turn the light on and

00:12:06,880 --> 00:12:09,839
off and stuff like that

00:12:07,920 --> 00:12:12,000
in addition to some of the ones that

00:12:09,839 --> 00:12:14,000
we've built here

00:12:12,000 --> 00:12:16,160
uh this is another one i've worked on

00:12:14,000 --> 00:12:18,240
more recently it shows that uh the wemos

00:12:16,160 --> 00:12:20,800
mini d1 where it's it's a

00:12:18,240 --> 00:12:22,320
a weight sensor and so basically the the

00:12:20,800 --> 00:12:25,040
sensor that that reads the

00:12:22,320 --> 00:12:26,320
the weight um you know connects up to

00:12:25,040 --> 00:12:27,040
that little device which can then

00:12:26,320 --> 00:12:30,079
connect and

00:12:27,040 --> 00:12:33,279
send over mqtt the uh the weight of

00:12:30,079 --> 00:12:34,720
whatever you put on top of it

00:12:33,279 --> 00:12:36,800
you might also ask well what about some

00:12:34,720 --> 00:12:38,000
existing devices so instead of trying to

00:12:36,800 --> 00:12:40,560
to build my own

00:12:38,000 --> 00:12:42,880
you know build my own there's a bunch of

00:12:40,560 --> 00:12:44,160
devices but not all of them use mqtt so

00:12:42,880 --> 00:12:47,279
quite common pattern

00:12:44,160 --> 00:12:50,320
is to use a

00:12:47,279 --> 00:12:51,920
mqtt bridge where you have that bridge

00:12:50,320 --> 00:12:55,519
converting from whatever protocol the

00:12:51,920 --> 00:12:57,600
devices are using into the mqtt protocol

00:12:55,519 --> 00:12:59,200
in my example there's a lot of devices

00:12:57,600 --> 00:13:00,959
out there that you can get that run on

00:12:59,200 --> 00:13:02,959
433 megahertz

00:13:00,959 --> 00:13:04,079
and so like we have a door sensor a

00:13:02,959 --> 00:13:05,760
motion sensor

00:13:04,079 --> 00:13:08,720
actually a fire alarm that will go off

00:13:05,760 --> 00:13:11,360
and again send messages on 433

00:13:08,720 --> 00:13:12,320
the most right one is a is a temperature

00:13:11,360 --> 00:13:15,920
sensor

00:13:12,320 --> 00:13:19,040
and i have a bridge written in um

00:13:15,920 --> 00:13:19,920
in in node.js actually that can take the

00:13:19,040 --> 00:13:22,880
messages that come

00:13:19,920 --> 00:13:24,560
in through the fourth 433 megahertz and

00:13:22,880 --> 00:13:28,079
you know we can convert them to

00:13:24,560 --> 00:13:29,279
uh to mqtt and then use those messages

00:13:28,079 --> 00:13:31,200
and actually this one isn't written in

00:13:29,279 --> 00:13:34,399
node but this one's uh you know

00:13:31,200 --> 00:13:37,120
built on it on esp8266 that can can do

00:13:34,399 --> 00:13:37,120
that conversion

00:13:37,279 --> 00:13:41,600
so now let's look at what it would take

00:13:39,839 --> 00:13:43,040
to say build your own device just so you

00:13:41,600 --> 00:13:44,480
can see that it's really not that

00:13:43,040 --> 00:13:46,000
complicated what's going on in the

00:13:44,480 --> 00:13:47,360
devices if you want to build something

00:13:46,000 --> 00:13:49,440
that's purpose fit

00:13:47,360 --> 00:13:50,880
um you know in industrial cases you'll

00:13:49,440 --> 00:13:52,800
more likely want to

00:13:50,880 --> 00:13:54,000
buy a commercial device for support and

00:13:52,800 --> 00:13:55,680
so forth but

00:13:54,000 --> 00:13:57,360
you know if you want to start

00:13:55,680 --> 00:13:58,320
experimenting and sort of proof of

00:13:57,360 --> 00:13:59,440
concept

00:13:58,320 --> 00:14:00,800
what you might be able to do in your

00:13:59,440 --> 00:14:02,720
business this is a good way to go

00:14:00,800 --> 00:14:04,959
starting get started

00:14:02,720 --> 00:14:06,800
so let's imagine that for example your

00:14:04,959 --> 00:14:09,199
business grows plants

00:14:06,800 --> 00:14:11,360
maybe things like temperature humidity

00:14:09,199 --> 00:14:13,839
and light intensity throughout the day

00:14:11,360 --> 00:14:15,120
might be interesting and you know in

00:14:13,839 --> 00:14:16,720
this case this is something that i've

00:14:15,120 --> 00:14:19,760
set up i'm growing a few plants

00:14:16,720 --> 00:14:22,480
in my basement you know mint and

00:14:19,760 --> 00:14:23,120
basil some nice spices stuff like that

00:14:22,480 --> 00:14:24,800
and i

00:14:23,120 --> 00:14:26,160
ended up you know through through that

00:14:24,800 --> 00:14:28,639
device which you can see there

00:14:26,160 --> 00:14:29,519
it's built on again one of those esps

00:14:28,639 --> 00:14:33,279
and it collects

00:14:29,519 --> 00:14:35,600
slight temperature and humidity

00:14:33,279 --> 00:14:37,440
and like you know through the mqtt

00:14:35,600 --> 00:14:38,560
network i can fairly easily get that

00:14:37,440 --> 00:14:40,160
data out

00:14:38,560 --> 00:14:42,000
and then you know i put together a

00:14:40,160 --> 00:14:43,760
grafana dashboard that consumes that

00:14:42,000 --> 00:14:46,160
data and shows me you know the trends of

00:14:43,760 --> 00:14:48,639
the humidity temperature

00:14:46,160 --> 00:14:50,240
and light um you could set up alerts to

00:14:48,639 --> 00:14:51,920
say okay wait a sec the lights went off

00:14:50,240 --> 00:14:53,519
when they're not supposed to

00:14:51,920 --> 00:14:56,399
or if things are getting too hot too

00:14:53,519 --> 00:14:58,079
cold and so forth

00:14:56,399 --> 00:14:59,360
this is the version of devices that

00:14:58,079 --> 00:15:00,240
we're actually going to show you in in

00:14:59,360 --> 00:15:03,199
the demo

00:15:00,240 --> 00:15:04,480
um a slightly earlier version of those

00:15:03,199 --> 00:15:05,519
i'm just trying to raise it up so you

00:15:04,480 --> 00:15:08,800
can see it

00:15:05,519 --> 00:15:10,240
um and it builds in the dsp

00:15:08,800 --> 00:15:11,519
has a light which blinks every time it's

00:15:10,240 --> 00:15:14,480
sending the message and it collects

00:15:11,519 --> 00:15:16,160
light and temperature information

00:15:14,480 --> 00:15:18,480
this is the circuit diagram of what it

00:15:16,160 --> 00:15:20,480
looks like so we have that wemos

00:15:18,480 --> 00:15:22,959
which has a nice usb port you just plug

00:15:20,480 --> 00:15:23,920
in it's got a light sensor which is that

00:15:22,959 --> 00:15:25,519
gl device

00:15:23,920 --> 00:15:27,760
it's basically just a resistor that

00:15:25,519 --> 00:15:30,320
changes resistance

00:15:27,760 --> 00:15:31,040
based on the amount of light that there

00:15:30,320 --> 00:15:33,360
is

00:15:31,040 --> 00:15:34,959
it's connected to the analog pin on the

00:15:33,360 --> 00:15:37,360
the wemos

00:15:34,959 --> 00:15:38,880
through a you know a resistor divider so

00:15:37,360 --> 00:15:39,680
that you get a different value depending

00:15:38,880 --> 00:15:42,240
on how much light

00:15:39,680 --> 00:15:42,880
is being presented and then on the right

00:15:42,240 --> 00:15:46,639
hand side

00:15:42,880 --> 00:15:48,320
is a ds 18v20 which is a integrated

00:15:46,639 --> 00:15:50,480
temperature sensor

00:15:48,320 --> 00:15:51,759
and basically through sort of a one wire

00:15:50,480 --> 00:15:53,120
protocol

00:15:51,759 --> 00:15:54,560
you can talk to it ask for the

00:15:53,120 --> 00:15:56,000
temperature and it gives that back to

00:15:54,560 --> 00:15:58,560
you

00:15:56,000 --> 00:15:59,920
and then you know for uh as shown when

00:15:58,560 --> 00:16:02,079
i'm showing the device there's also an

00:15:59,920 --> 00:16:04,079
led that we can turn on turn off and

00:16:02,079 --> 00:16:07,680
it's set up to turn on and off

00:16:04,079 --> 00:16:09,199
whenever it's sending you some data

00:16:07,680 --> 00:16:12,320
looking at what's actually in the device

00:16:09,199 --> 00:16:13,839
itself uh we saw uh topics so when i

00:16:12,320 --> 00:16:15,519
introduced the concepts

00:16:13,839 --> 00:16:16,959
uh topics were one of the the important

00:16:15,519 --> 00:16:19,199
topics and you can see there the late

00:16:16,959 --> 00:16:20,880
topic the temp topic and the led topics

00:16:19,199 --> 00:16:22,399
so those are the topics that the device

00:16:20,880 --> 00:16:23,920
will publish on

00:16:22,399 --> 00:16:26,399
when there's a light reading a

00:16:23,920 --> 00:16:27,680
temperature reading or or

00:16:26,399 --> 00:16:29,519
you know basically you want to tell it

00:16:27,680 --> 00:16:32,399
to turn the light on or

00:16:29,519 --> 00:16:34,000
if the light changes on the right-hand

00:16:32,399 --> 00:16:35,920
side we see some of the code and again

00:16:34,000 --> 00:16:37,440
just like the case that that jesse

00:16:35,920 --> 00:16:38,240
showed us earlier in terms of the node

00:16:37,440 --> 00:16:39,920
client

00:16:38,240 --> 00:16:41,680
a lot of this is just boilerplate so

00:16:39,920 --> 00:16:43,519
that we can get our

00:16:41,680 --> 00:16:46,240
connection to the network and our

00:16:43,519 --> 00:16:46,240
certificates

00:16:47,600 --> 00:16:51,199
again over here is still more sort of

00:16:49,920 --> 00:16:52,320
boilerplate the nice thing that you'll

00:16:51,199 --> 00:16:54,160
notice here is like

00:16:52,320 --> 00:16:55,759
i didn't have to write the code to to

00:16:54,160 --> 00:16:57,040
query that that temperature sensor

00:16:55,759 --> 00:16:58,000
there's already a dallas temperature

00:16:57,040 --> 00:17:01,040
sensor

00:16:58,000 --> 00:17:03,120
um sort of library that's out there

00:17:01,040 --> 00:17:05,839
and so we can leverage those in in a lot

00:17:03,120 --> 00:17:07,869
of the things that we write

00:17:05,839 --> 00:17:10,400
these tend to be um

00:17:07,869 --> 00:17:12,000
[Music]

00:17:10,400 --> 00:17:14,000
you know they tend to work very much

00:17:12,000 --> 00:17:15,919
like you would expect an asynchronous

00:17:14,000 --> 00:17:17,760
system and if you're familiar with node

00:17:15,919 --> 00:17:19,600
um you know through callbacks so in this

00:17:17,760 --> 00:17:21,280
case you know part of the code is a

00:17:19,600 --> 00:17:21,839
callback that says when i get a message

00:17:21,280 --> 00:17:24,559
posted

00:17:21,839 --> 00:17:26,240
to a particular topic um this is the

00:17:24,559 --> 00:17:27,520
code that i want to run and in this case

00:17:26,240 --> 00:17:28,880
it says like you know when i get a

00:17:27,520 --> 00:17:30,080
message i'm going to tell i'm going to

00:17:28,880 --> 00:17:31,360
check whether that's a message telling

00:17:30,080 --> 00:17:34,160
me to turn the light on

00:17:31,360 --> 00:17:35,520
or turn the right off and associated you

00:17:34,160 --> 00:17:36,960
know it then calls the function that

00:17:35,520 --> 00:17:40,640
will actually write the pin

00:17:36,960 --> 00:17:42,480
to make that change now we start to get

00:17:40,640 --> 00:17:45,039
into the the code itself

00:17:42,480 --> 00:17:46,240
and you can see that i'm creating the

00:17:45,039 --> 00:17:49,520
pub sub client

00:17:46,240 --> 00:17:50,960
and i'm passing here that callback which

00:17:49,520 --> 00:17:52,799
we saw on the previous page

00:17:50,960 --> 00:17:54,240
to say okay this is the callback when

00:17:52,799 --> 00:17:55,520
you get a message that i want you

00:17:54,240 --> 00:17:56,799
i want you to run along with the

00:17:55,520 --> 00:17:57,760
connection info that says you know

00:17:56,799 --> 00:18:02,880
what's my

00:17:57,760 --> 00:18:05,760
mqtt port and server string

00:18:02,880 --> 00:18:06,799
the code itself here now is mostly

00:18:05,760 --> 00:18:10,000
around

00:18:06,799 --> 00:18:12,240
getting the certificates all set up and

00:18:10,000 --> 00:18:13,679
passing in a unique id the one of the

00:18:12,240 --> 00:18:15,600
key things is

00:18:13,679 --> 00:18:17,200
every client really should have its own

00:18:15,600 --> 00:18:19,039
id otherwise i found that some of the

00:18:17,200 --> 00:18:20,960
brokers get confused so in this case we

00:18:19,039 --> 00:18:23,520
use the

00:18:20,960 --> 00:18:24,880
the mac address as a unique id because

00:18:23,520 --> 00:18:28,160
that's going to be unique for every day

00:18:24,880 --> 00:18:31,280
every every device and

00:18:28,160 --> 00:18:33,280
you can see here that uh when we

00:18:31,280 --> 00:18:35,360
create our client so we you know create

00:18:33,280 --> 00:18:37,440
a client we've created a client

00:18:35,360 --> 00:18:38,960
and within this loop we basically at the

00:18:37,440 --> 00:18:42,160
the first we check to say

00:18:38,960 --> 00:18:45,200
are we connected to the the wi-fi if so

00:18:42,160 --> 00:18:47,280
let's start you know if if not let's

00:18:45,200 --> 00:18:48,480
actually say let's connect

00:18:47,280 --> 00:18:51,120
and here's where we're passing in that

00:18:48,480 --> 00:18:53,120
unique id and once we're connected

00:18:51,120 --> 00:18:56,640
we subscribe to the topic in this case

00:18:53,120 --> 00:18:58,559
the led topic that we can send

00:18:56,640 --> 00:19:00,480
then inside that loop the other thing we

00:18:58,559 --> 00:19:02,880
do is every so often so we've got our

00:19:00,480 --> 00:19:06,080
transmit interval seconds and delay

00:19:02,880 --> 00:19:09,120
we want to take the temperature sensor

00:19:06,080 --> 00:19:10,720
the temperature and light readings

00:19:09,120 --> 00:19:12,960
and publish them to a particular topic

00:19:10,720 --> 00:19:15,200
so we saw those topics uh earlier the

00:19:12,960 --> 00:19:17,039
temp topic and the light topic

00:19:15,200 --> 00:19:18,480
so this code basically you know

00:19:17,039 --> 00:19:19,679
interacts with the library that i

00:19:18,480 --> 00:19:21,520
mentioned

00:19:19,679 --> 00:19:22,880
converts it to a string because we said

00:19:21,520 --> 00:19:24,160
that the messages were just plain

00:19:22,880 --> 00:19:26,559
formatted text

00:19:24,160 --> 00:19:28,240
and then publishes to the temp topic and

00:19:26,559 --> 00:19:30,799
the light topic

00:19:28,240 --> 00:19:32,080
and then toggles the lead so that you

00:19:30,799 --> 00:19:34,880
get some feedback that is actually

00:19:32,080 --> 00:19:36,320
sending the data out

00:19:34,880 --> 00:19:37,919
now i showed you c plus plus if you

00:19:36,320 --> 00:19:39,200
don't like c plus and you want to do it

00:19:37,919 --> 00:19:39,679
in javascript i won't go through the

00:19:39,200 --> 00:19:42,320
same

00:19:39,679 --> 00:19:43,039
description but you can do that through

00:19:42,320 --> 00:19:44,720
esprino

00:19:43,039 --> 00:19:46,480
and you can write in javascript the code

00:19:44,720 --> 00:19:47,600
looks very similar you have a similar

00:19:46,480 --> 00:19:49,840
loop

00:19:47,600 --> 00:19:51,360
and in fact i did that to push the same

00:19:49,840 --> 00:19:53,440
code into

00:19:51,360 --> 00:19:54,720
a demo type that device like this and if

00:19:53,440 --> 00:19:56,559
you want to go check it out you can go

00:19:54,720 --> 00:19:57,039
check out my github repo to take a

00:19:56,559 --> 00:19:58,640
little more

00:19:57,039 --> 00:20:00,160
look and more detailed look through the

00:19:58,640 --> 00:20:02,080
code there

00:20:00,160 --> 00:20:07,840
so now we're at demo time i'll hand it

00:20:02,080 --> 00:20:07,840
back over to jesse

00:20:20,559 --> 00:20:23,679
so jesse you still there

00:20:23,919 --> 00:20:28,480
sorry about that yes i am here um we

00:20:26,960 --> 00:20:30,000
are going to walk you through a really

00:20:28,480 --> 00:20:31,360
quick demo and then we'll show you the

00:20:30,000 --> 00:20:32,799
code behind it

00:20:31,360 --> 00:20:34,400
uh what we're actually going to do is

00:20:32,799 --> 00:20:36,640
we're going to show

00:20:34,400 --> 00:20:38,240
uh consuming data from these light and

00:20:36,640 --> 00:20:38,960
temperature sensors that michael just

00:20:38,240 --> 00:20:40,720
talked about

00:20:38,960 --> 00:20:42,480
and then we're going to actually store

00:20:40,720 --> 00:20:45,360
that information in a database to be

00:20:42,480 --> 00:20:48,080
used by other database applications

00:20:45,360 --> 00:20:50,400
so set up to get this to this point i

00:20:48,080 --> 00:20:52,240
have active mq running on my system and

00:20:50,400 --> 00:20:52,720
happens to be an ibm i system but that's

00:20:52,240 --> 00:20:54,960
not

00:20:52,720 --> 00:20:56,240
uh necessarily relevant it can be

00:20:54,960 --> 00:20:57,280
anywhere because these are all very

00:20:56,240 --> 00:20:58,720
portable

00:20:57,280 --> 00:21:01,360
and we wrote a little bit of node code

00:20:58,720 --> 00:21:03,440
that i'll show you in a little

00:21:01,360 --> 00:21:05,440
what bit node.js code does it make sure

00:21:03,440 --> 00:21:06,559
that the database exists and you can see

00:21:05,440 --> 00:21:08,080
in this case it already

00:21:06,559 --> 00:21:09,760
has the schema and everything because

00:21:08,080 --> 00:21:12,240
we've run this before

00:21:09,760 --> 00:21:13,039
and now because those devices are

00:21:12,240 --> 00:21:15,440
sleeping

00:21:13,039 --> 00:21:17,679
and sending data as temperature changes

00:21:15,440 --> 00:21:19,280
or light changes or every 10 seconds

00:21:17,679 --> 00:21:20,960
you're going to see this light and

00:21:19,280 --> 00:21:23,840
temperature sensor data

00:21:20,960 --> 00:21:24,559
coming in on a periodic basis right and

00:21:23,840 --> 00:21:26,000
so

00:21:24,559 --> 00:21:29,039
when that light and temperature sensor

00:21:26,000 --> 00:21:32,880
comes in we see the console output here

00:21:29,039 --> 00:21:34,799
and that information is also available

00:21:32,880 --> 00:21:36,880
in the database and so i'm going to pop

00:21:34,799 --> 00:21:38,000
up an sql tool here where i'm doing a

00:21:36,880 --> 00:21:40,480
simple

00:21:38,000 --> 00:21:41,360
select from this table that i created

00:21:40,480 --> 00:21:44,559
this iot

00:21:41,360 --> 00:21:47,039
records table for temperature and

00:21:44,559 --> 00:21:48,720
center data and you can see there's a

00:21:47,039 --> 00:21:49,760
couple tabs that popped up down in the

00:21:48,720 --> 00:21:52,080
bottom

00:21:49,760 --> 00:21:53,440
and you can actually see uh the

00:21:52,080 --> 00:21:55,760
historical

00:21:53,440 --> 00:21:56,960
time behind the the various sensor

00:21:55,760 --> 00:21:59,679
values for temperature

00:21:56,960 --> 00:22:00,640
and for light as well so if you're

00:21:59,679 --> 00:22:02,880
interested that's

00:22:00,640 --> 00:22:04,159
that's the temperature in my uh my

00:22:02,880 --> 00:22:06,240
office

00:22:04,159 --> 00:22:08,240
and i can actually put my hand over the

00:22:06,240 --> 00:22:09,280
uh the sensors here if we want to see

00:22:08,240 --> 00:22:12,720
the light go down

00:22:09,280 --> 00:22:14,320
a fair amount um but maybe we'll come

00:22:12,720 --> 00:22:15,039
back and take a look at that afterwards

00:22:14,320 --> 00:22:16,240
if you want to

00:22:15,039 --> 00:22:18,640
go ahead and show the code yep if we

00:22:16,240 --> 00:22:20,799
have if we have time to do that we'll

00:22:18,640 --> 00:22:22,480
circle back and do that in a little bit

00:22:20,799 --> 00:22:23,520
but the code behind it is going to be

00:22:22,480 --> 00:22:26,559
very simple

00:22:23,520 --> 00:22:28,960
and very familiar to the code we showed

00:22:26,559 --> 00:22:31,840
you earlier in the presentation today

00:22:28,960 --> 00:22:32,880
um we're going to set up the connection

00:22:31,840 --> 00:22:34,880
to the broker in

00:22:32,880 --> 00:22:36,080
exactly the same way we showed you the

00:22:34,880 --> 00:22:38,400
example

00:22:36,080 --> 00:22:39,679
uh client certificate set up and the ssl

00:22:38,400 --> 00:22:42,480
setup and michael

00:22:39,679 --> 00:22:44,000
i need to stop sharing nope sorry i know

00:22:42,480 --> 00:22:48,080
i did stop sharing we need you

00:22:44,000 --> 00:22:48,080
we need the slides back up right um

00:22:49,039 --> 00:22:52,480
there we go sorry the only thing that's

00:22:50,720 --> 00:22:54,640
different is um

00:22:52,480 --> 00:22:55,840
you know when we're consuming data we

00:22:54,640 --> 00:22:58,039
showed you this one before we're

00:22:55,840 --> 00:23:01,200
consuming the data we stick it in

00:22:58,039 --> 00:23:02,480
console.log you see it in the terminal

00:23:01,200 --> 00:23:04,159
but we're going to take that a step

00:23:02,480 --> 00:23:05,679
further like i just showed so if you go

00:23:04,159 --> 00:23:08,240
on to the next slide

00:23:05,679 --> 00:23:09,360
we actually wrote some code to store it

00:23:08,240 --> 00:23:10,720
to the database

00:23:09,360 --> 00:23:12,640
and i'm not going to walk you through

00:23:10,720 --> 00:23:14,320
all the details here we're using an ibm

00:23:12,640 --> 00:23:17,200
i database connector

00:23:14,320 --> 00:23:19,039
creating a table if it doesn't exist and

00:23:17,200 --> 00:23:19,760
just doing some basic database setup

00:23:19,039 --> 00:23:22,960
there

00:23:19,760 --> 00:23:24,880
and if we go to the next slide all we

00:23:22,960 --> 00:23:26,240
did is we modified our callback for when

00:23:24,880 --> 00:23:28,320
we receive a message

00:23:26,240 --> 00:23:29,600
to do a simple insert into statement

00:23:28,320 --> 00:23:32,080
with sql

00:23:29,600 --> 00:23:33,919
and as you can see it's just a few lines

00:23:32,080 --> 00:23:36,080
of code to get that level of integration

00:23:33,919 --> 00:23:38,400
and so now any database application can

00:23:36,080 --> 00:23:39,760
interact with this iot data yeah and

00:23:38,400 --> 00:23:41,440
that's really i think one of the reasons

00:23:39,760 --> 00:23:43,760
why it's so popular is that

00:23:41,440 --> 00:23:45,360
really very small amount of code just a

00:23:43,760 --> 00:23:47,200
few steps and now you've got data

00:23:45,360 --> 00:23:48,960
flowing from the devices

00:23:47,200 --> 00:23:49,919
all the way into your database where you

00:23:48,960 --> 00:23:53,600
can you know take some more

00:23:49,919 --> 00:23:53,600
sophisticated action and stuff like that

00:23:54,240 --> 00:23:59,279
yep exactly so you know we've shown you

00:23:57,360 --> 00:24:00,799
actually connecting the devices directly

00:23:59,279 --> 00:24:02,960
to um

00:24:00,799 --> 00:24:04,159
the to a system which is running a

00:24:02,960 --> 00:24:06,159
broker

00:24:04,159 --> 00:24:07,679
if you don't want to set up that that

00:24:06,159 --> 00:24:09,279
yourself um

00:24:07,679 --> 00:24:11,600
or you want to make it something that's

00:24:09,279 --> 00:24:12,720
like can go across uh you know it's not

00:24:11,600 --> 00:24:14,480
necessarily stuck within your

00:24:12,720 --> 00:24:15,039
organization one good thing to do is

00:24:14,480 --> 00:24:17,440
leverage

00:24:15,039 --> 00:24:18,400
leverage the cloud so you could sort of

00:24:17,440 --> 00:24:19,840
do um

00:24:18,400 --> 00:24:21,520
what's shown in this first picture which

00:24:19,840 --> 00:24:24,480
is to move some of the pieces

00:24:21,520 --> 00:24:26,080
from your you know internal system out

00:24:24,480 --> 00:24:27,279
into containers running in the cloud and

00:24:26,080 --> 00:24:28,400
that's actually what i did for some of

00:24:27,279 --> 00:24:29,360
the applications i've been playing

00:24:28,400 --> 00:24:33,200
around with

00:24:29,360 --> 00:24:34,960
is i ran an mqtt broker in the cloud

00:24:33,200 --> 00:24:37,360
and then a node application and in this

00:24:34,960 --> 00:24:39,120
in this case it's an example where

00:24:37,360 --> 00:24:41,360
you know either through through a ui on

00:24:39,120 --> 00:24:43,120
a computer or on my phone

00:24:41,360 --> 00:24:44,480
i can it can talk to that controller

00:24:43,120 --> 00:24:46,000
that controller will convert you know

00:24:44,480 --> 00:24:48,159
whatever buttons you press to say

00:24:46,000 --> 00:24:50,640
turn on lights turn off lights into an

00:24:48,159 --> 00:24:52,000
mqtt message

00:24:50,640 --> 00:24:53,919
publish it to that broker that's in the

00:24:52,000 --> 00:24:55,200
cloud and then device that device which

00:24:53,919 --> 00:24:57,919
is a plug

00:24:55,200 --> 00:24:59,760
you know plugged into my house you know

00:24:57,919 --> 00:25:00,000
and is is connected to a wi-fi that can

00:24:59,760 --> 00:25:01,600
get

00:25:00,000 --> 00:25:03,360
out to the outside world connects to the

00:25:01,600 --> 00:25:05,120
broker and you you know

00:25:03,360 --> 00:25:06,880
now i'm controlling everything without

00:25:05,120 --> 00:25:10,080
having to be running a broker on

00:25:06,880 --> 00:25:12,000
my own premises but even better

00:25:10,080 --> 00:25:13,200
uh there's a number of iot platforms

00:25:12,000 --> 00:25:16,799
that you can get from

00:25:13,200 --> 00:25:18,000
from organizations and they will provide

00:25:16,799 --> 00:25:19,679
you

00:25:18,000 --> 00:25:21,440
all those pieces so that basically you

00:25:19,679 --> 00:25:22,799
can just say here's the devices i want

00:25:21,440 --> 00:25:27,279
to connect up to

00:25:22,799 --> 00:25:29,360
my my um my iot system

00:25:27,279 --> 00:25:30,640
and you know both from the devices and

00:25:29,360 --> 00:25:32,480
from the clients

00:25:30,640 --> 00:25:33,679
the thing i did want to mention here is

00:25:32,480 --> 00:25:34,799
that there's

00:25:33,679 --> 00:25:37,039
you know the one thing that's a little

00:25:34,799 --> 00:25:40,240
bit different is they often

00:25:37,039 --> 00:25:42,240
have a few more constraints over things

00:25:40,240 --> 00:25:44,240
like the topic so for example in this

00:25:42,240 --> 00:25:47,840
particular part of the code

00:25:44,240 --> 00:25:49,760
i show that um you know you need

00:25:47,840 --> 00:25:51,520
to change the light topics so they're

00:25:49,760 --> 00:25:53,279
structured in a way for example this is

00:25:51,520 --> 00:25:56,480
for the watson iot cloud

00:25:53,279 --> 00:25:58,000
in a way that that fits uh their their

00:25:56,480 --> 00:25:59,360
environment because it's a multi-tenant

00:25:58,000 --> 00:26:02,720
environment so in this case

00:25:59,360 --> 00:26:04,960
you know i need to say iot2 event lite

00:26:02,720 --> 00:26:07,440
and they even sometimes add some extra

00:26:04,960 --> 00:26:09,440
features in this case it's formatting

00:26:07,440 --> 00:26:11,279
so i can tell it what format the message

00:26:09,440 --> 00:26:13,279
is coming in

00:26:11,279 --> 00:26:15,120
and so you know i had to change the

00:26:13,279 --> 00:26:17,360
format of my my topics

00:26:15,120 --> 00:26:18,320
and i had to change uh the format of my

00:26:17,360 --> 00:26:20,240
messages

00:26:18,320 --> 00:26:22,080
the nice thing about that though is that

00:26:20,240 --> 00:26:24,240
then they let you very easily

00:26:22,080 --> 00:26:25,440
start to chart graph and work with that

00:26:24,240 --> 00:26:27,039
data because

00:26:25,440 --> 00:26:28,960
you know having it being structured as

00:26:27,039 --> 00:26:31,520
json for example they can extract it and

00:26:28,960 --> 00:26:32,720
you can put it on charts and so forth so

00:26:31,520 --> 00:26:34,240
if you're you're getting into this

00:26:32,720 --> 00:26:35,919
that's another good way to sort of have

00:26:34,240 --> 00:26:38,000
a quick bootstrap

00:26:35,919 --> 00:26:40,799
um to getting charts graphs and data and

00:26:38,000 --> 00:26:42,400
all that kind of stuff

00:26:40,799 --> 00:26:44,400
all right and i'll quickly just mention

00:26:42,400 --> 00:26:47,200
a couple other tools that are available

00:26:44,400 --> 00:26:48,960
for doing iot programming one of my

00:26:47,200 --> 00:26:49,840
favorites is node red which actually

00:26:48,960 --> 00:26:53,120
allows

00:26:49,840 --> 00:26:55,120
a low code graphical type of designer

00:26:53,120 --> 00:26:57,279
that allows you to just define your

00:26:55,120 --> 00:26:59,520
application logic as a flow of data

00:26:57,279 --> 00:27:01,760
through all these various nodes

00:26:59,520 --> 00:27:04,320
and i worked with a client once who

00:27:01,760 --> 00:27:06,880
actually set up a very large

00:27:04,320 --> 00:27:09,679
manufacturing integration with plc

00:27:06,880 --> 00:27:12,159
devices all linked up through node-red

00:27:09,679 --> 00:27:14,000
and it is uh it works like a charm and

00:27:12,159 --> 00:27:16,000
it's very simple to use very easy to

00:27:14,000 --> 00:27:17,200
prototype and deploy to production so

00:27:16,000 --> 00:27:18,480
that's something definitely worth

00:27:17,200 --> 00:27:20,960
looking into

00:27:18,480 --> 00:27:21,679
um and another trend that we're seeing

00:27:20,960 --> 00:27:24,240
is

00:27:21,679 --> 00:27:25,520
this whole notion of reactive systems

00:27:24,240 --> 00:27:27,760
and so if you go out and you read the

00:27:25,520 --> 00:27:30,720
reactive manifesto it comes in

00:27:27,760 --> 00:27:31,840
uh you know various key attributes that

00:27:30,720 --> 00:27:34,159
are

00:27:31,840 --> 00:27:36,399
are defined as a reactive system right

00:27:34,159 --> 00:27:39,600
it needs to be responsive

00:27:36,399 --> 00:27:42,159
elastic resilient and message driven

00:27:39,600 --> 00:27:44,000
right and so we're seeing an uptick in

00:27:42,159 --> 00:27:46,320
interest in messaging technologies and

00:27:44,000 --> 00:27:48,080
kafka is quickly becoming the mo this

00:27:46,320 --> 00:27:50,240
the standard mode of operation the

00:27:48,080 --> 00:27:53,200
messaging component of choice

00:27:50,240 --> 00:27:55,440
um and so as you're defined defining

00:27:53,200 --> 00:27:57,120
your plan for iot you need to also maybe

00:27:55,440 --> 00:27:58,640
take this into consideration as well

00:27:57,120 --> 00:28:00,640
because your iot data

00:27:58,640 --> 00:28:03,919
might need to very very well integrate

00:28:00,640 --> 00:28:05,120
with some kind of messaging system

00:28:03,919 --> 00:28:07,039
there's a product out there called

00:28:05,120 --> 00:28:09,120
apache camel which is really great

00:28:07,039 --> 00:28:10,880
as i say for tying anything to anything

00:28:09,120 --> 00:28:13,440
including tying iot

00:28:10,880 --> 00:28:14,960
devices and technologies to messaging

00:28:13,440 --> 00:28:17,039
systems as well

00:28:14,960 --> 00:28:18,240
so i'll hand it over to michael to wrap

00:28:17,039 --> 00:28:19,760
things up yeah

00:28:18,240 --> 00:28:21,279
i you know just to add on the reactive

00:28:19,760 --> 00:28:24,240
systems i think you know

00:28:21,279 --> 00:28:25,279
the structure uh that we've seen in like

00:28:24,240 --> 00:28:28,080
the mqtt

00:28:25,279 --> 00:28:29,440
uh side of things you know jesse and i

00:28:28,080 --> 00:28:31,679
you know joked that we

00:28:29,440 --> 00:28:33,440
we only use these devices every so often

00:28:31,679 --> 00:28:34,880
but they keep working i unplug them i

00:28:33,440 --> 00:28:36,799
plug them back in

00:28:34,880 --> 00:28:39,120
and so the reactive systems are sort of

00:28:36,799 --> 00:28:41,039
looking to leverage some of that same

00:28:39,120 --> 00:28:43,279
same approach where the pieces are

00:28:41,039 --> 00:28:46,000
detached and decoupled

00:28:43,279 --> 00:28:47,360
um and sort of the message broker is is

00:28:46,000 --> 00:28:49,039
the piece that lets you glue it all

00:28:47,360 --> 00:28:52,240
together but it's it's a very

00:28:49,039 --> 00:28:53,919
resilient um you know approach and way

00:28:52,240 --> 00:28:54,559
that you can scale and and yeah we see

00:28:53,919 --> 00:28:56,720
that um

00:28:54,559 --> 00:28:58,399
kafka is is quickly becoming the the

00:28:56,720 --> 00:28:59,039
choice there so when you're thinking

00:28:58,399 --> 00:29:01,039
about your

00:28:59,039 --> 00:29:02,480
your iot systems today it would be good

00:29:01,039 --> 00:29:05,360
to think about like how are you going to

00:29:02,480 --> 00:29:08,320
bridge that data into maybe a bigger

00:29:05,360 --> 00:29:10,840
uh you know kafka backbone that's

00:29:08,320 --> 00:29:13,039
serving your enterprise applications as

00:29:10,840 --> 00:29:14,640
well i think that's all the time that we

00:29:13,039 --> 00:29:16,960
have today we we hope you

00:29:14,640 --> 00:29:19,279
you enjoyed this sort of world whirlwind

00:29:16,960 --> 00:29:21,440
introduction to what iot is

00:29:19,279 --> 00:29:22,559
um some example of what some of the you

00:29:21,440 --> 00:29:25,520
know the the

00:29:22,559 --> 00:29:26,960
what it looks like in terms of of you

00:29:25,520 --> 00:29:28,240
know devices that you could build and

00:29:26,960 --> 00:29:31,520
experiment with

00:29:28,240 --> 00:29:33,520
how you use uh mqtt with node.js and how

00:29:31,520 --> 00:29:35,600
it's such a great fit because you know

00:29:33,520 --> 00:29:37,360
uh you know iot is all around being

00:29:35,600 --> 00:29:41,039
asynchronous and asynchronous events

00:29:37,360 --> 00:29:43,360
and node fits really nicely with that um

00:29:41,039 --> 00:29:44,320
and then you know we hope that you see

00:29:43,360 --> 00:29:45,760
that like it's

00:29:44,320 --> 00:29:47,360
really you know there's it's not that

00:29:45,760 --> 00:29:48,720
hard to get started to connect those

00:29:47,360 --> 00:29:51,039
devices in

00:29:48,720 --> 00:29:52,480
get the data into your database as just

00:29:51,039 --> 00:29:54,799
jesse showed

00:29:52,480 --> 00:29:55,679
and then even you know leverage the uh

00:29:54,799 --> 00:29:58,240
you know larger

00:29:55,679 --> 00:29:59,520
cloud-based iot systems or you know

00:29:58,240 --> 00:30:01,679
plugging into your more

00:29:59,520 --> 00:30:02,880
uh enterprise-oriented applications that

00:30:01,679 --> 00:30:05,840
might be using

00:30:02,880 --> 00:30:07,279
uh reactive approaches in kafka um so

00:30:05,840 --> 00:30:08,919
thanks for watching and

00:30:07,279 --> 00:30:11,919
we hope you enjoy the rest of the

00:30:08,919 --> 00:30:11,919

YouTube URL: https://www.youtube.com/watch?v=3NyDb-u1nz4


