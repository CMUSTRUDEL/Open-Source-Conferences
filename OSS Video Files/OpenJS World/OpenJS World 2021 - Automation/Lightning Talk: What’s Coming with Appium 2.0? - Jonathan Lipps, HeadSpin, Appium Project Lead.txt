Title: Lightning Talk: What’s Coming with Appium 2.0? - Jonathan Lipps, HeadSpin, Appium Project Lead
Publication date: 2021-06-01
Playlist: OpenJS World 2021 - Automation
Description: 
	Lightning Talk: What’s Coming with Appium 2.0? - Jonathan Lipps, HeadSpin, Appium Project Lead

It’s time for a little chat with the Appium team about what we’ve been working on and where we see the project headed with our next big release.
Captions: 
	00:00:00,080 --> 00:00:05,440
hi everyone i'm jonathan lips one of the

00:00:03,120 --> 00:00:07,600
maintainers of the appium project

00:00:05,440 --> 00:00:10,080
which is an impact project here in the

00:00:07,600 --> 00:00:12,559
openjs foundation

00:00:10,080 --> 00:00:13,840
if you haven't checked out appium before

00:00:12,559 --> 00:00:16,720
it's a node.js

00:00:13,840 --> 00:00:18,880
implementation of the webdriver protocol

00:00:16,720 --> 00:00:21,119
that allows you to target a variety of

00:00:18,880 --> 00:00:22,800
platforms for automation

00:00:21,119 --> 00:00:24,800
using the same protocol you might be

00:00:22,800 --> 00:00:29,119
familiar with from automating web

00:00:24,800 --> 00:00:30,560
apps via selenium most people use appium

00:00:29,119 --> 00:00:33,680
to automate ios

00:00:30,560 --> 00:00:36,160
and android native apps and it's become

00:00:33,680 --> 00:00:38,800
quite a popular way to enable ci for

00:00:36,160 --> 00:00:40,559
mobile apps

00:00:38,800 --> 00:00:42,320
appium's been around for over eight

00:00:40,559 --> 00:00:44,239
years now and we're getting close to

00:00:42,320 --> 00:00:46,239
releasing appium 2.0

00:00:44,239 --> 00:00:47,760
with some fun changes that i thought i

00:00:46,239 --> 00:00:50,559
would share with you all

00:00:47,760 --> 00:00:52,800
one of the main goals of appium 2.0 is

00:00:50,559 --> 00:00:55,360
to open up appium as a platform

00:00:52,800 --> 00:00:57,760
for automation development allowing

00:00:55,360 --> 00:00:58,000
anyone in the world to build new drivers

00:00:57,760 --> 00:01:01,760
or

00:00:58,000 --> 00:01:04,960
plugins for appium and share them

00:01:01,760 --> 00:01:05,920
what are appium drivers they are at a

00:01:04,960 --> 00:01:08,720
minimum

00:01:05,920 --> 00:01:10,799
a bit of node.js code that extends our

00:01:08,720 --> 00:01:12,560
base driver class

00:01:10,799 --> 00:01:14,960
and you can write your own appium

00:01:12,560 --> 00:01:18,479
drivers to target new or bespoke

00:01:14,960 --> 00:01:19,200
automation platforms are you developing

00:01:18,479 --> 00:01:21,439
your own

00:01:19,200 --> 00:01:23,680
operating system or app development

00:01:21,439 --> 00:01:25,759
framework for example

00:01:23,680 --> 00:01:26,799
you could easily build an appium driver

00:01:25,759 --> 00:01:29,600
for it

00:01:26,799 --> 00:01:30,320
for internal use or to give to app

00:01:29,600 --> 00:01:32,400
authors

00:01:30,320 --> 00:01:34,159
who build on your platform so they can

00:01:32,400 --> 00:01:36,159
easily add automation to their

00:01:34,159 --> 00:01:39,439
development cycle

00:01:36,159 --> 00:01:40,000
the promise of appium is w3c standard

00:01:39,439 --> 00:01:42,960
automation

00:01:40,000 --> 00:01:44,240
protocols applied to any possible

00:01:42,960 --> 00:01:47,920
operating system

00:01:44,240 --> 00:01:49,920
user interface and app platform

00:01:47,920 --> 00:01:50,960
we're working on a couple new drivers

00:01:49,920 --> 00:01:52,880
ourselves

00:01:50,960 --> 00:01:54,720
for release around the same time as

00:01:52,880 --> 00:01:57,040
appium 2.0

00:01:54,720 --> 00:01:58,880
including support for automation of the

00:01:57,040 --> 00:02:02,399
roku tv platform

00:01:58,880 --> 00:02:05,439
the tizen tv platform and chromebooks

00:02:02,399 --> 00:02:05,439
slash chrome os

00:02:05,680 --> 00:02:10,239
now what are appian plugins there are

00:02:07,840 --> 00:02:11,680
ways to extend the operation of appium

00:02:10,239 --> 00:02:14,879
with basically unlimited

00:02:11,680 --> 00:02:17,120
power and flexibility again by writing a

00:02:14,879 --> 00:02:20,000
bit of node.js code that extends one of

00:02:17,120 --> 00:02:21,440
our base classes

00:02:20,000 --> 00:02:24,080
some early plugins that have already

00:02:21,440 --> 00:02:26,160
been written for appium 2.0 include

00:02:24,080 --> 00:02:29,280
one that standardizes the element

00:02:26,160 --> 00:02:32,160
hierarchy across both ios and android

00:02:29,280 --> 00:02:33,760
or one that turns appium into a device

00:02:32,160 --> 00:02:36,720
management service that knows which

00:02:33,760 --> 00:02:39,440
mobile devices are available for testing

00:02:36,720 --> 00:02:39,760
or another that adds image recognition

00:02:39,440 --> 00:02:42,800
and

00:02:39,760 --> 00:02:43,599
processing capabilities to appium so you

00:02:42,800 --> 00:02:45,840
can navigate

00:02:43,599 --> 00:02:46,959
a user interface and interact with it

00:02:45,840 --> 00:02:48,959
purely visually

00:02:46,959 --> 00:02:51,840
without recourse to any actual

00:02:48,959 --> 00:02:53,440
underlying ui elements

00:02:51,840 --> 00:02:55,680
and we can imagine lots of other kinds

00:02:53,440 --> 00:02:57,680
of plugins especially ones that might

00:02:55,680 --> 00:02:59,440
integrate with other technologies or

00:02:57,680 --> 00:03:01,599
services

00:02:59,440 --> 00:03:03,760
so our hope for turning appium into a

00:03:01,599 --> 00:03:04,000
platform is that developers will be able

00:03:03,760 --> 00:03:06,480
to

00:03:04,000 --> 00:03:07,440
easily implement their own ideas package

00:03:06,480 --> 00:03:09,280
them up

00:03:07,440 --> 00:03:11,040
and make them available to anyone else

00:03:09,280 --> 00:03:13,519
who uses appium

00:03:11,040 --> 00:03:15,680
appium 2.0 will ship with a nice command

00:03:13,519 --> 00:03:18,400
line interface for finding and managing

00:03:15,680 --> 00:03:20,959
these drivers and plugins

00:03:18,400 --> 00:03:22,640
appium 2.0 will also see some important

00:03:20,959 --> 00:03:25,840
updates to appium desktop

00:03:22,640 --> 00:03:27,280
and appium inspector a set of electron

00:03:25,840 --> 00:03:30,000
apps that allow you to run

00:03:27,280 --> 00:03:31,760
an appium server and inspect mobile

00:03:30,000 --> 00:03:33,680
applications visually

00:03:31,760 --> 00:03:36,879
similar to how you appreciate using

00:03:33,680 --> 00:03:38,879
devtools in your browser

00:03:36,879 --> 00:03:40,879
the opium inspector comes with a lot of

00:03:38,879 --> 00:03:43,360
tools to make writing appium tests

00:03:40,879 --> 00:03:45,120
easy even for test authors who aren't

00:03:43,360 --> 00:03:47,440
app developers themselves

00:03:45,120 --> 00:03:49,360
or who might not have access to the app

00:03:47,440 --> 00:03:51,280
source code

00:03:49,360 --> 00:03:52,720
so those are some of the highlights for

00:03:51,280 --> 00:03:54,400
appium 2.0

00:03:52,720 --> 00:03:56,239
there's obviously a lot going on under

00:03:54,400 --> 00:03:58,000
the hood as we constantly try to keep

00:03:56,239 --> 00:03:58,480
our code base and workflows moving

00:03:58,000 --> 00:04:01,599
forward

00:03:58,480 --> 00:04:03,360
the same time as developing new stuff so

00:04:01,599 --> 00:04:04,239
i invite you to check out appium if you

00:04:03,360 --> 00:04:07,120
haven't before

00:04:04,239 --> 00:04:07,439
and definitely join us at the 2.0 branch

00:04:07,120 --> 00:04:10,640
on

00:04:07,439 --> 00:04:11,360
appium appium at github if you're

00:04:10,640 --> 00:04:12,959
interested

00:04:11,360 --> 00:04:15,000
in learning more about the code or

00:04:12,959 --> 00:04:18,000
helping out the project

00:04:15,000 --> 00:04:18,000

YouTube URL: https://www.youtube.com/watch?v=l8HJX177uhI


