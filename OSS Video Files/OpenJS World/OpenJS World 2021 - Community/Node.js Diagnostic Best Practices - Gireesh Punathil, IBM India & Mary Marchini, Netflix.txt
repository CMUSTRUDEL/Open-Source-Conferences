Title: Node.js Diagnostic Best Practices - Gireesh Punathil, IBM India & Mary Marchini, Netflix
Publication date: 2021-05-31
Playlist: OpenJS World 2021 - Community
Description: 
	The session will cover the philosophy of Diagnostics Best Practices deriving from identified user journeys, current state of and development efforts on Best Practices content. It will also provide highlights on the key best practices around major diagnostic use cases. We provide guidance on tool selection based on the associated user journey, deployment models and the tooling capability and maturity. The objective of the session is to spread the awareness and adoption of the user journey based diagnostic best practices for problem determination of Node.js deployments, leading to improved Node.js user experience.
Captions: 
	00:00:01,199 --> 00:00:04,640
hello everybody

00:00:03,040 --> 00:00:06,240
welcome and thank you for joining this

00:00:04,640 --> 00:00:08,400
presentation on the

00:00:06,240 --> 00:00:10,240
node.js diagnostics best practice

00:00:08,400 --> 00:00:12,400
documentation

00:00:10,240 --> 00:00:13,759
before we talk about what this session

00:00:12,400 --> 00:00:15,839
is all about and

00:00:13,759 --> 00:00:18,080
what is the stated purpose what are the

00:00:15,839 --> 00:00:20,240
expect outcomes etc

00:00:18,080 --> 00:00:22,320
let's provide a brief introduction about

00:00:20,240 --> 00:00:25,359
these speakers

00:00:22,320 --> 00:00:27,439
myself girish pinata i work for ibm

00:00:25,359 --> 00:00:29,519
i'm an architect with one of the team

00:00:27,439 --> 00:00:31,920
called ibm runtimes

00:00:29,519 --> 00:00:32,719
that's responsible for developing and

00:00:31,920 --> 00:00:35,520
supporting

00:00:32,719 --> 00:00:37,040
language runtimes such as java and

00:00:35,520 --> 00:00:39,520
node.js

00:00:37,040 --> 00:00:44,320
i'm also a member of the node.js

00:00:39,520 --> 00:00:47,200
technical steering committee

00:00:44,320 --> 00:00:49,200
and i'm mary martini i work at netflix

00:00:47,200 --> 00:00:51,280
as a senior performance engineer for the

00:00:49,200 --> 00:00:53,440
node.js platform team

00:00:51,280 --> 00:00:55,760
where we work to provide a curated and

00:00:53,440 --> 00:00:58,719
managed node.js experience

00:00:55,760 --> 00:01:01,039
for node.js developers across netflix

00:00:58,719 --> 00:01:04,800
i'm also a node.js csc member

00:01:01,039 --> 00:01:04,800
and tctor9 delegate

00:01:04,960 --> 00:01:08,479
all right so this is what we are going

00:01:06,880 --> 00:01:11,520
to cover today

00:01:08,479 --> 00:01:13,200
we provide a bit of introduction around

00:01:11,520 --> 00:01:16,560
the node.js project

00:01:13,200 --> 00:01:18,799
and the community we talk about the

00:01:16,560 --> 00:01:20,000
diagnostic working group what are the

00:01:18,799 --> 00:01:22,000
stated purpose

00:01:20,000 --> 00:01:24,799
what are the activities we perform in

00:01:22,000 --> 00:01:26,799
the working group etc

00:01:24,799 --> 00:01:28,960
then me provide a bit of introduction

00:01:26,799 --> 00:01:31,280
around the user journey

00:01:28,960 --> 00:01:33,280
what is the user journey around what are

00:01:31,280 --> 00:01:36,560
the governing principles

00:01:33,280 --> 00:01:39,759
or the philosophies on the user journey

00:01:36,560 --> 00:01:43,439
how the user journey is driving into the

00:01:39,759 --> 00:01:46,560
best practice documentation effort

00:01:43,439 --> 00:01:47,680
then we also provide a introduction to

00:01:46,560 --> 00:01:51,040
the

00:01:47,680 --> 00:01:52,880
tool tails and how that is going to

00:01:51,040 --> 00:01:55,439
drive into the

00:01:52,880 --> 00:01:56,719
user experience around the node.js

00:01:55,439 --> 00:02:00,640
diagnostics

00:01:56,719 --> 00:02:01,600
and finally we look at where do we stand

00:02:00,640 --> 00:02:04,479
in terms of the

00:02:01,600 --> 00:02:06,960
current status on the best practice

00:02:04,479 --> 00:02:08,879
documentation effort

00:02:06,960 --> 00:02:10,319
what are the challenges we face and what

00:02:08,879 --> 00:02:12,640
is the support that we need

00:02:10,319 --> 00:02:14,080
how people can get engaged what are the

00:02:12,640 --> 00:02:17,280
different initiatives where

00:02:14,080 --> 00:02:20,879
people can start contributing

00:02:17,280 --> 00:02:23,840
and make the best practice documentation

00:02:20,879 --> 00:02:23,840
a great success

00:02:26,480 --> 00:02:30,959
here is a very short introduction around

00:02:29,599 --> 00:02:34,640
the node.js project

00:02:30,959 --> 00:02:35,360
as well as the community well i'm sure

00:02:34,640 --> 00:02:38,239
there is

00:02:35,360 --> 00:02:40,560
no need for providing an elaborate

00:02:38,239 --> 00:02:43,200
introduction about what is node.js etc

00:02:40,560 --> 00:02:46,000
but i'm just providing a one-liner here

00:02:43,200 --> 00:02:49,599
for the sake of completeness

00:02:46,000 --> 00:02:52,720
node.js is a open source cross-platform

00:02:49,599 --> 00:02:56,480
javascript runtime but then

00:02:52,720 --> 00:02:57,519
what is v8 v8 is also an open source

00:02:56,480 --> 00:03:01,519
cross-platform

00:02:57,519 --> 00:03:05,280
javascript runtime what's the difference

00:03:01,519 --> 00:03:07,200
node.js is customized for

00:03:05,280 --> 00:03:09,360
optimally running in the back end as

00:03:07,200 --> 00:03:11,840
opposed to running in the browser

00:03:09,360 --> 00:03:13,519
and that specificity or that key

00:03:11,840 --> 00:03:16,159
differentiation

00:03:13,519 --> 00:03:17,120
makes it one of the very favorite

00:03:16,159 --> 00:03:20,560
runtime

00:03:17,120 --> 00:03:22,480
for hosting most of the modern workload

00:03:20,560 --> 00:03:26,720
that runs in the back end

00:03:22,480 --> 00:03:31,120
including the cloud the analytics the ai

00:03:26,720 --> 00:03:34,319
the mobile and the iot etc

00:03:31,120 --> 00:03:37,599
now coming to the node.js community

00:03:34,319 --> 00:03:40,480
it is governed by the opengls foundation

00:03:37,599 --> 00:03:42,159
what is opengls foundation it's the

00:03:40,480 --> 00:03:46,159
governing foundation

00:03:42,159 --> 00:03:49,120
or the premier home to a number of

00:03:46,159 --> 00:03:49,840
open source javascript projects the

00:03:49,120 --> 00:03:53,680
entity that

00:03:49,840 --> 00:03:57,599
actually runs this conference too

00:03:53,680 --> 00:04:00,799
the community is very much active

00:03:57,599 --> 00:04:02,080
with a number of active contributors and

00:04:00,799 --> 00:04:06,239
collaborators

00:04:02,080 --> 00:04:09,200
as well as a number of working groups

00:04:06,239 --> 00:04:10,319
which are essentially special focus

00:04:09,200 --> 00:04:12,799
forums

00:04:10,319 --> 00:04:12,799
as such

00:04:13,360 --> 00:04:19,519
we put extra effort

00:04:16,479 --> 00:04:23,199
and we put high standards on

00:04:19,519 --> 00:04:25,120
openness inclusivity and diversity

00:04:23,199 --> 00:04:26,479
and these are something which we

00:04:25,120 --> 00:04:29,360
constantly put

00:04:26,479 --> 00:04:31,919
a lot of effort on to keep high

00:04:29,360 --> 00:04:31,919
standards

00:04:33,840 --> 00:04:38,880
okay so what is diagnostic working group

00:04:38,960 --> 00:04:44,000
originally we started as two different

00:04:42,240 --> 00:04:47,120
working groups where back in

00:04:44,000 --> 00:04:47,680
2015 one is the post-modern working

00:04:47,120 --> 00:04:50,800
group

00:04:47,680 --> 00:04:53,919
that largely concerned around the

00:04:50,800 --> 00:04:55,520
dumb debugging and the second one being

00:04:53,919 --> 00:04:58,000
the tracing working group

00:04:55,520 --> 00:04:59,600
which was mostly focusing on the runtime

00:04:58,000 --> 00:05:02,960
pricing

00:04:59,600 --> 00:05:05,280
eventually around 2017 or so we felt the

00:05:02,960 --> 00:05:08,800
need for merging both the working groups

00:05:05,280 --> 00:05:12,160
because we found that there is a

00:05:08,800 --> 00:05:13,840
high degree of overlap in the objective

00:05:12,160 --> 00:05:16,880
as well as the way we work

00:05:13,840 --> 00:05:20,000
in both the working groups so that's how

00:05:16,880 --> 00:05:21,759
diagnostic working group was born what

00:05:20,000 --> 00:05:25,520
we do in the working group

00:05:21,759 --> 00:05:28,320
we make sure that there is a

00:05:25,520 --> 00:05:30,400
great user experience derived out of the

00:05:28,320 --> 00:05:34,160
node.js diagnostics

00:05:30,400 --> 00:05:37,199
so we are active

00:05:34,160 --> 00:05:40,720
in developing as well as attaining

00:05:37,199 --> 00:05:44,560
maturity to most of the healthiest grade

00:05:40,720 --> 00:05:47,759
diagnostic tools such as asynchronous

00:05:44,560 --> 00:05:51,199
profiling tracing

00:05:47,759 --> 00:05:56,160
dump debugging tools such as ll node

00:05:51,199 --> 00:05:58,800
ffdc tools such as diagnostic report

00:05:56,160 --> 00:06:00,479
each of these tools expose unique

00:05:58,800 --> 00:06:04,479
features or value adds

00:06:00,479 --> 00:06:07,120
in the overall diagnostic story

00:06:04,479 --> 00:06:09,199
now in terms of the activities we

00:06:07,120 --> 00:06:12,319
generally meet once in two weeks

00:06:09,199 --> 00:06:13,199
as a working group but we work and

00:06:12,319 --> 00:06:16,240
collaborate

00:06:13,199 --> 00:06:18,880
offline largely

00:06:16,240 --> 00:06:21,520
a few years ago the working group starts

00:06:18,880 --> 00:06:23,680
to investigate ways to ensure diagnostic

00:06:21,520 --> 00:06:24,800
tools were properly supported and

00:06:23,680 --> 00:06:27,360
documented

00:06:24,800 --> 00:06:29,280
as well as ensure stability across major

00:06:27,360 --> 00:06:32,000
note versions

00:06:29,280 --> 00:06:32,319
we soon realized that thinking in terms

00:06:32,000 --> 00:06:35,840
of

00:06:32,319 --> 00:06:38,240
two stability would be challenging

00:06:35,840 --> 00:06:39,360
because several diagnostic tools node

00:06:38,240 --> 00:06:42,960
rely on

00:06:39,360 --> 00:06:44,560
come from dependencies such as v8

00:06:42,960 --> 00:06:46,720
with that in mind the working group

00:06:44,560 --> 00:06:49,840
decided to shift focus from

00:06:46,720 --> 00:06:52,160
twos two user journeys with the goal of

00:06:49,840 --> 00:06:53,919
allowing the project to guarantee

00:06:52,160 --> 00:06:56,720
coverage of diagnostic

00:06:53,919 --> 00:06:57,520
use cases across not measures even if

00:06:56,720 --> 00:07:00,840
that meant

00:06:57,520 --> 00:07:02,080
changes to the tooling every once in a

00:07:00,840 --> 00:07:04,319
while

00:07:02,080 --> 00:07:07,039
the shift to user journeys also allowed

00:07:04,319 --> 00:07:10,080
us to better define supported workloads

00:07:07,039 --> 00:07:11,280
and deployment models as well as help us

00:07:10,080 --> 00:07:13,360
better understand

00:07:11,280 --> 00:07:15,280
which use cases should receive long-term

00:07:13,360 --> 00:07:17,039
support from the project

00:07:15,280 --> 00:07:19,520
we started to explore and document

00:07:17,039 --> 00:07:22,479
potential user journeys during meetings

00:07:19,520 --> 00:07:23,039
and as we dive deeper into each user

00:07:22,479 --> 00:07:25,599
journey

00:07:23,039 --> 00:07:27,199
we started to align existing tools to

00:07:25,599 --> 00:07:30,160
use cases

00:07:27,199 --> 00:07:30,880
and not the other way around as well as

00:07:30,160 --> 00:07:35,759
identify

00:07:30,880 --> 00:07:37,840
two tooling gaps for certain use cases

00:07:35,759 --> 00:07:40,960
we also started to use those user

00:07:37,840 --> 00:07:45,039
journeys to write guides that we will

00:07:40,960 --> 00:07:47,520
leave on the new node website

00:07:45,039 --> 00:07:48,560
these guides also called best practice

00:07:47,520 --> 00:07:51,199
documentation

00:07:48,560 --> 00:07:54,080
are step-by-step procedures on how to

00:07:51,199 --> 00:07:55,840
debug and troubleshoot node services

00:07:54,080 --> 00:07:58,240
those are being written based on user

00:07:55,840 --> 00:08:00,560
journeys therefore the guides and user

00:07:58,240 --> 00:08:02,080
journeys are online

00:08:00,560 --> 00:08:04,720
those guides will also provide

00:08:02,080 --> 00:08:06,800
instructions and pre-requirements

00:08:04,720 --> 00:08:08,000
to use diagnostic tools in production

00:08:06,800 --> 00:08:10,800
environments

00:08:08,000 --> 00:08:12,960
since some tools require note process to

00:08:10,800 --> 00:08:14,160
be preemptively configured in a certain

00:08:12,960 --> 00:08:15,680
way

00:08:14,160 --> 00:08:17,680
and because of the range of tools

00:08:15,680 --> 00:08:19,680
coherently available to users

00:08:17,680 --> 00:08:21,680
those guides are also loaded with case

00:08:19,680 --> 00:08:24,240
studies on different tools

00:08:21,680 --> 00:08:25,520
applied to similar issues with

00:08:24,240 --> 00:08:27,520
observations on

00:08:25,520 --> 00:08:29,759
when each two is preferred over the

00:08:27,520 --> 00:08:29,759
other

00:08:30,160 --> 00:08:33,760
okay now it makes a lot of sense to talk

00:08:32,719 --> 00:08:36,399
about the

00:08:33,760 --> 00:08:37,120
diagnostic tooling tiers in the context

00:08:36,399 --> 00:08:39,760
of the

00:08:37,120 --> 00:08:41,120
user experience with the node.js

00:08:39,760 --> 00:08:44,320
diagnostics

00:08:41,120 --> 00:08:47,760
what is tooling tears simply put

00:08:44,320 --> 00:08:51,200
it's a classification based on

00:08:47,760 --> 00:08:55,440
certain value parameters that we attach

00:08:51,200 --> 00:08:59,440
to the known set of diagnostic tools

00:08:55,440 --> 00:09:02,800
what are those value parameters such as

00:08:59,440 --> 00:09:03,839
how efficient the tool is in terms of

00:09:02,800 --> 00:09:07,680
debugging

00:09:03,839 --> 00:09:10,480
a specific use case and

00:09:07,680 --> 00:09:11,279
how much is the maturity level of the

00:09:10,480 --> 00:09:13,120
tool

00:09:11,279 --> 00:09:14,800
in terms of say for example the

00:09:13,120 --> 00:09:18,720
stability index

00:09:14,800 --> 00:09:22,560
and what is the overall adoption story

00:09:18,720 --> 00:09:25,279
of the tool in the user ecosystem

00:09:22,560 --> 00:09:27,360
and how well the tool is maintained by

00:09:25,279 --> 00:09:27,839
the tooling owners etc so these are some

00:09:27,360 --> 00:09:32,000
of the

00:09:27,839 --> 00:09:35,680
value parameters that decide what is the

00:09:32,000 --> 00:09:38,800
current tier of the tool now

00:09:35,680 --> 00:09:42,560
how does this classification help at all

00:09:38,800 --> 00:09:46,000
so in two ways number one it helps the

00:09:42,560 --> 00:09:49,680
releases to understand where

00:09:46,000 --> 00:09:50,160
do each of this tool reside in terms of

00:09:49,680 --> 00:09:52,640
the

00:09:50,160 --> 00:09:53,839
stability index and various parameters

00:09:52,640 --> 00:09:56,320
that i mentioned

00:09:53,839 --> 00:09:57,120
and take calculated decisions around

00:09:56,320 --> 00:09:59,839
inclusion

00:09:57,120 --> 00:10:01,360
in certain releases based on the

00:09:59,839 --> 00:10:04,720
long-term support strategy

00:10:01,360 --> 00:10:08,240
number one number two is it

00:10:04,720 --> 00:10:11,279
helps the uh contributors to the tooling

00:10:08,240 --> 00:10:14,480
to understand which tool reside in

00:10:11,279 --> 00:10:15,680
which uh state in terms of various value

00:10:14,480 --> 00:10:19,120
parameters

00:10:15,680 --> 00:10:22,320
and where to actually apply the focus

00:10:19,120 --> 00:10:24,800
where they get maximum value addition

00:10:22,320 --> 00:10:26,800
based on the current classification

00:10:24,800 --> 00:10:29,680
indices

00:10:26,800 --> 00:10:30,720
we constantly review the list and the

00:10:29,680 --> 00:10:33,120
state of the

00:10:30,720 --> 00:10:34,560
tiers of various diagnostic tools and

00:10:33,120 --> 00:10:37,920
make amendments

00:10:34,560 --> 00:10:40,240
based on the perceived

00:10:37,920 --> 00:10:42,959
change in state of any of these

00:10:40,240 --> 00:10:42,959
parameters

00:10:44,640 --> 00:10:50,160
so where do we stand with respect to the

00:10:47,680 --> 00:10:52,959
best practice documentation work

00:10:50,160 --> 00:10:54,079
well we have some initial structure in

00:10:52,959 --> 00:10:56,959
place

00:10:54,079 --> 00:10:58,240
we do have documents for few use cases

00:10:56,959 --> 00:11:01,680
that are

00:10:58,240 --> 00:11:05,040
ready to consume for example um

00:11:01,680 --> 00:11:07,839
the memory the profiling

00:11:05,040 --> 00:11:09,839
the abnormal termination etc these are

00:11:07,839 --> 00:11:12,320
ready to use already

00:11:09,839 --> 00:11:14,240
we are working on other use cases such

00:11:12,320 --> 00:11:18,399
as crash hang

00:11:14,240 --> 00:11:20,880
tracing etc so as i said previously

00:11:18,399 --> 00:11:22,240
for each of the use case we could have

00:11:20,880 --> 00:11:25,680
as many tools

00:11:22,240 --> 00:11:28,640
as relevant and from

00:11:25,680 --> 00:11:30,800
those perspective we can bring in more

00:11:28,640 --> 00:11:33,920
real world stories here

00:11:30,800 --> 00:11:37,519
as well as the demonstration

00:11:33,920 --> 00:11:40,320
of different tools that solves the

00:11:37,519 --> 00:11:41,200
same problem in different ways so that

00:11:40,320 --> 00:11:44,560
way

00:11:41,200 --> 00:11:46,560
that would enrich as well as

00:11:44,560 --> 00:11:48,320
improve the consumability of the

00:11:46,560 --> 00:11:51,920
documentation if we have

00:11:48,320 --> 00:11:57,839
different tools telling the same story

00:11:51,920 --> 00:11:57,839
in slightly different manner

00:11:59,040 --> 00:12:05,040
all right here is a screenshot of the

00:12:02,160 --> 00:12:06,320
top level work item that shows the

00:12:05,040 --> 00:12:09,519
current backlog

00:12:06,320 --> 00:12:11,519
basically item number 439 in the

00:12:09,519 --> 00:12:14,480
diagnostic repo

00:12:11,519 --> 00:12:16,639
i believe the list of items that we see

00:12:14,480 --> 00:12:20,880
here is the

00:12:16,639 --> 00:12:20,880
current state of affairs as of today

00:12:21,600 --> 00:12:28,240
this slide shows the folder structure

00:12:24,800 --> 00:12:31,680
of our best practice documentation

00:12:28,240 --> 00:12:34,880
as we can see we have a top level folder

00:12:31,680 --> 00:12:37,040
for each of the identified symptom

00:12:34,880 --> 00:12:38,160
or the use case whatever we want to call

00:12:37,040 --> 00:12:42,079
it

00:12:38,160 --> 00:12:46,320
and under each such top level folder

00:12:42,079 --> 00:12:49,519
we will have a readme file that explains

00:12:46,320 --> 00:12:52,880
the specific use case and a setup

00:12:49,519 --> 00:12:54,320
instruction that explains any special

00:12:52,880 --> 00:12:55,839
setting that's required for your

00:12:54,320 --> 00:12:59,360
production box

00:12:55,839 --> 00:13:02,320
in preparation of your system towards

00:12:59,360 --> 00:13:02,880
containing that specific use case or the

00:13:02,320 --> 00:13:06,639
production

00:13:02,880 --> 00:13:09,040
anomaly an investigation flow

00:13:06,639 --> 00:13:10,320
that shows how the case study will be

00:13:09,040 --> 00:13:13,760
carried out

00:13:10,320 --> 00:13:18,839
and the case study documentation itself

00:13:13,760 --> 00:13:21,680
and finally we can have as many steps

00:13:18,839 --> 00:13:24,800
duplicated wherein each of the step

00:13:21,680 --> 00:13:27,600
will take the specific use case

00:13:24,800 --> 00:13:29,680
through different tools so this will be

00:13:27,600 --> 00:13:32,399
on a best deferred basis

00:13:29,680 --> 00:13:33,519
we can have a specific use case with a

00:13:32,399 --> 00:13:36,480
single tool

00:13:33,519 --> 00:13:38,320
versus another use case with you know

00:13:36,480 --> 00:13:40,000
five or six different tools

00:13:38,320 --> 00:13:43,440
attacking the same use case through

00:13:40,000 --> 00:13:43,440
different angles etc

00:13:45,920 --> 00:13:50,079
the biggest challenge the working group

00:13:47,600 --> 00:13:52,160
is facing today is lack of progress

00:13:50,079 --> 00:13:53,680
the working group is small and the

00:13:52,160 --> 00:13:56,160
current members don't have enough

00:13:53,680 --> 00:13:58,639
bandwidth to push the work further

00:13:56,160 --> 00:14:00,320
besides that the user journeys and best

00:13:58,639 --> 00:14:02,880
practice segments still lack

00:14:00,320 --> 00:14:04,160
a more diverse range of workloads

00:14:02,880 --> 00:14:06,000
covered

00:14:04,160 --> 00:14:07,839
part of this problem is due to the small

00:14:06,000 --> 00:14:09,760
number of folks involved

00:14:07,839 --> 00:14:11,199
and due to the lack of involvement from

00:14:09,760 --> 00:14:13,600
brother community

00:14:11,199 --> 00:14:14,560
which resulted in only a few workloads

00:14:13,600 --> 00:14:16,399
covered

00:14:14,560 --> 00:14:19,279
those from communist currently engaged

00:14:16,399 --> 00:14:19,279
in the discussion

00:14:19,839 --> 00:14:24,079
there are several ways to help us in

00:14:21,920 --> 00:14:26,399
this work if you are interested

00:14:24,079 --> 00:14:27,680
the meetings are open to anyone who

00:14:26,399 --> 00:14:29,440
wants to join

00:14:27,680 --> 00:14:31,519
and meeting dates are available in the

00:14:29,440 --> 00:14:33,199
node project calendar

00:14:31,519 --> 00:14:35,199
or if you prefer to work more

00:14:33,199 --> 00:14:36,000
asynchronously the user journeys

00:14:35,199 --> 00:14:38,639
document

00:14:36,000 --> 00:14:40,079
as well as the best practices guides and

00:14:38,639 --> 00:14:42,399
more reviewers

00:14:40,079 --> 00:14:43,120
and since not everything covered in user

00:14:42,399 --> 00:14:46,320
journeys

00:14:43,120 --> 00:14:48,399
became best practice guides yet helping

00:14:46,320 --> 00:14:49,920
with writing new guides based on the

00:14:48,399 --> 00:14:52,560
user journey documents

00:14:49,920 --> 00:14:54,800
is also a great place to start and if

00:14:52,560 --> 00:14:56,959
you operate node.js in production

00:14:54,800 --> 00:14:58,880
or if you face some nasty bugs in the

00:14:56,959 --> 00:15:00,240
past and believe there are gaps in

00:14:58,880 --> 00:15:02,959
tooling

00:15:00,240 --> 00:15:04,959
bring us real world stories so we can

00:15:02,959 --> 00:15:07,120
incorporate more workloads

00:15:04,959 --> 00:15:08,800
and types of issues in user journey

00:15:07,120 --> 00:15:11,040
documents

00:15:08,800 --> 00:15:13,279
last but not least if you're also

00:15:11,040 --> 00:15:16,320
passionate about open source

00:15:13,279 --> 00:15:18,160
collaboration node.js and diagnostics

00:15:16,320 --> 00:15:21,279
you can join the working group and help

00:15:18,160 --> 00:15:21,279
us drive new work

00:15:22,320 --> 00:15:26,560
thank you so much for listening to our

00:15:24,240 --> 00:15:32,560
talk and we hope to see you on

00:15:26,560 --> 00:15:32,560

YouTube URL: https://www.youtube.com/watch?v=0XQF3V7Koks


