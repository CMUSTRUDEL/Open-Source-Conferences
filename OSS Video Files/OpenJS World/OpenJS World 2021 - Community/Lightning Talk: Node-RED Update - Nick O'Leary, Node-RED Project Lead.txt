Title: Lightning Talk: Node-RED Update - Nick O'Leary, Node-RED Project Lead
Publication date: 2021-06-01
Playlist: OpenJS World 2021 - Community
Description: 
	Lightning Talk: Node-RED Update - Nick O'Leary, Node-RED Project Lead
Captions: 
	00:00:00,080 --> 00:00:03,679
hi i'm nick o'leary from the node red

00:00:01,760 --> 00:00:04,560
project and i want to spend just a few

00:00:03,679 --> 00:00:05,839
minutes sharing

00:00:04,560 --> 00:00:08,080
some of the things we've been up to in

00:00:05,839 --> 00:00:10,960
the project recently and preview

00:00:08,080 --> 00:00:13,120
some of what we've got coming up earlier

00:00:10,960 --> 00:00:14,080
this year we released the 1.3 version of

00:00:13,120 --> 00:00:15,920
node red

00:00:14,080 --> 00:00:17,760
this was the latest milestone release

00:00:15,920 --> 00:00:19,520
that brought a number of new features to

00:00:17,760 --> 00:00:22,640
both the node-red editor

00:00:19,520 --> 00:00:24,640
and its runtime in the function node

00:00:22,640 --> 00:00:26,720
we've made it easier to load external

00:00:24,640 --> 00:00:28,400
modules to use in your code

00:00:26,720 --> 00:00:30,160
previously you'd have to install the

00:00:28,400 --> 00:00:32,000
module separately and then edit your

00:00:30,160 --> 00:00:34,880
settings file to tell node-red

00:00:32,000 --> 00:00:36,160
to make them available with this new

00:00:34,880 --> 00:00:38,800
feature enabled

00:00:36,160 --> 00:00:40,320
you can now specify the external modules

00:00:38,800 --> 00:00:41,200
straight in the edit dialog of the

00:00:40,320 --> 00:00:43,120
function node

00:00:41,200 --> 00:00:47,200
and have node-red automatically install

00:00:43,120 --> 00:00:47,200
them and make them available to the node

00:00:49,200 --> 00:00:53,120
for administrators when this feature is

00:00:51,199 --> 00:00:55,039
enabled we also provide

00:00:53,120 --> 00:00:56,800
allow and deny list options to write

00:00:55,039 --> 00:00:59,359
some control over what end users are

00:00:56,800 --> 00:01:01,600
able to install

00:00:59,359 --> 00:01:03,840
the mqtt nodes were updated to introduce

00:01:01,600 --> 00:01:05,840
mqtt v5 support

00:01:03,840 --> 00:01:07,280
v5 brings a whole host of new options to

00:01:05,840 --> 00:01:09,520
the protocol including

00:01:07,280 --> 00:01:13,760
improved message metadata request

00:01:09,520 --> 00:01:15,759
response messaging and message expiry

00:01:13,760 --> 00:01:18,000
under the covers we've introduced a new

00:01:15,759 --> 00:01:19,759
plugins framework for the platform

00:01:18,000 --> 00:01:21,680
plugins are a way to add additional

00:01:19,759 --> 00:01:22,479
functionality to both the runtime and

00:01:21,680 --> 00:01:24,240
editor

00:01:22,479 --> 00:01:25,520
and will be how we deliver some new

00:01:24,240 --> 00:01:27,520
features in the future

00:01:25,520 --> 00:01:28,880
keeping the course smaller and providing

00:01:27,520 --> 00:01:31,520
more choice over what additional

00:01:28,880 --> 00:01:33,600
features a user has installed

00:01:31,520 --> 00:01:36,000
with the 1.3 release we introduced

00:01:33,600 --> 00:01:38,640
support for two types of plugin

00:01:36,000 --> 00:01:40,560
first up are editor theme plugins they

00:01:38,640 --> 00:01:42,320
make it easier for users to install new

00:01:40,560 --> 00:01:43,520
themes and enable them straight in their

00:01:42,320 --> 00:01:44,479
settings file

00:01:43,520 --> 00:01:46,079
there's a great collection of

00:01:44,479 --> 00:01:47,040
contributed themes available at the

00:01:46,079 --> 00:01:51,040
node-red contrib

00:01:47,040 --> 00:01:53,759
themes repository the second plugin type

00:01:51,040 --> 00:01:55,759
are library source plugins these allow

00:01:53,759 --> 00:01:57,360
users to configure additional libraries

00:01:55,759 --> 00:01:59,280
that appear in their import export

00:01:57,360 --> 00:02:01,040
dialogs within the editor

00:01:59,280 --> 00:02:02,880
we've published a local file system

00:02:01,040 --> 00:02:04,159
plugin as a first example

00:02:02,880 --> 00:02:06,560
this allows you to create a second

00:02:04,159 --> 00:02:08,160
library stored on your local disk

00:02:06,560 --> 00:02:09,599
you could point that as a shared folder

00:02:08,160 --> 00:02:11,680
on dropbox for example

00:02:09,599 --> 00:02:13,280
and it gives you a quick and easy way to

00:02:11,680 --> 00:02:14,640
share flows with others with

00:02:13,280 --> 00:02:16,640
colleagues with whoever you're working

00:02:14,640 --> 00:02:17,840
with

00:02:16,640 --> 00:02:19,360
and there are lots of other smaller

00:02:17,840 --> 00:02:20,959
improvements throughout the project and

00:02:19,360 --> 00:02:22,640
you can find out lots more in the

00:02:20,959 --> 00:02:24,959
release blog post

00:02:22,640 --> 00:02:26,480
so now let's turn to what's coming up

00:02:24,959 --> 00:02:27,040
with the release plan we published last

00:02:26,480 --> 00:02:29,120
year

00:02:27,040 --> 00:02:31,360
1.3 is the last milestone release we'll

00:02:29,120 --> 00:02:33,280
be doing in the 1.x stream

00:02:31,360 --> 00:02:34,720
which now goes into maintenance mode

00:02:33,280 --> 00:02:35,599
where only critical fixes will get

00:02:34,720 --> 00:02:39,440
applied

00:02:35,599 --> 00:02:41,120
and in its place is coming node-red 2.0

00:02:39,440 --> 00:02:42,640
the main driver for the major version

00:02:41,120 --> 00:02:44,239
change is dropping support for old

00:02:42,640 --> 00:02:46,160
versions of node.js

00:02:44,239 --> 00:02:48,000
this has in turn allowed us to update a

00:02:46,160 --> 00:02:50,239
number of our core dependencies across

00:02:48,000 --> 00:02:52,319
major version changes

00:02:50,239 --> 00:02:54,080
now the goal is to minimize any braking

00:02:52,319 --> 00:02:54,720
changes so that for the majority of

00:02:54,080 --> 00:02:57,200
users

00:02:54,720 --> 00:02:59,120
it's going to be a seamless upgrade but

00:02:57,200 --> 00:03:02,000
there will inevitably be some areas that

00:02:59,120 --> 00:03:05,440
will need a bit more care

00:03:02,000 --> 00:03:07,200
one example is the http request node

00:03:05,440 --> 00:03:09,040
we're finally moving it off the long

00:03:07,200 --> 00:03:10,640
deprecated request module

00:03:09,040 --> 00:03:12,879
and we're moving it over to the got

00:03:10,640 --> 00:03:14,239
module now after looking at all the

00:03:12,879 --> 00:03:16,000
different alternatives available

00:03:14,239 --> 00:03:17,280
we decided that got would be the easiest

00:03:16,000 --> 00:03:18,640
to migrate to

00:03:17,280 --> 00:03:20,640
that said it was still quite a lot of

00:03:18,640 --> 00:03:21,120
work to do and made me appreciate just

00:03:20,640 --> 00:03:24,000
how much

00:03:21,120 --> 00:03:25,760
the request module did out of the box

00:03:24,000 --> 00:03:26,560
we're fairly confident users won't spot

00:03:25,760 --> 00:03:28,239
the difference

00:03:26,560 --> 00:03:30,560
but given the number of edge cases

00:03:28,239 --> 00:03:32,159
around dealing with http requests it is

00:03:30,560 --> 00:03:34,000
possible that something might slip past

00:03:32,159 --> 00:03:35,519
our unit tests

00:03:34,000 --> 00:03:37,280
we're also changing a few bits of

00:03:35,519 --> 00:03:39,680
default behavior in the case of

00:03:37,280 --> 00:03:40,480
clean new installs of node-red for

00:03:39,680 --> 00:03:42,879
example

00:03:40,480 --> 00:03:45,360
the new default settings file hard codes

00:03:42,879 --> 00:03:47,280
the flow file name to be flows.json

00:03:45,360 --> 00:03:48,640
we won't use the hostname as part of the

00:03:47,280 --> 00:03:51,040
file name anymore

00:03:48,640 --> 00:03:52,560
existing setting files won't get changed

00:03:51,040 --> 00:03:54,879
so instances that rely

00:03:52,560 --> 00:03:57,439
on the hostname will continue to behave

00:03:54,879 --> 00:03:59,519
in exactly the same way

00:03:57,439 --> 00:04:00,560
in the editor we've added an option to

00:03:59,519 --> 00:04:03,200
replace the ace

00:04:00,560 --> 00:04:04,159
text editor with monaco the text editor

00:04:03,200 --> 00:04:06,799
that microsoft

00:04:04,159 --> 00:04:08,720
uses in vs code now this gives a much

00:04:06,799 --> 00:04:09,120
richer code editing experience with much

00:04:08,720 --> 00:04:11,280
better

00:04:09,120 --> 00:04:12,799
auto complete content aware help all

00:04:11,280 --> 00:04:14,879
that sort of stuff

00:04:12,799 --> 00:04:16,560
the switch should be pretty transparent

00:04:14,879 --> 00:04:18,560
but it is possible there will be some

00:04:16,560 --> 00:04:20,959
third-party nodes in the ecosystem

00:04:18,560 --> 00:04:22,560
that bypass the apis we provided and try

00:04:20,959 --> 00:04:24,880
to use ace directly

00:04:22,560 --> 00:04:26,320
to that end users at this moment have to

00:04:24,880 --> 00:04:29,360
opt in to use monaco

00:04:26,320 --> 00:04:31,199
via their settings file we do plan to

00:04:29,360 --> 00:04:33,199
switch over fully to monaco in a future

00:04:31,199 --> 00:04:34,320
release

00:04:33,199 --> 00:04:36,400
now given the nature of all these

00:04:34,320 --> 00:04:38,080
changes we'll have an extended beta

00:04:36,400 --> 00:04:39,919
period for the 2.0 release

00:04:38,080 --> 00:04:42,720
with the first beta release coming later

00:04:39,919 --> 00:04:44,000
this month

00:04:42,720 --> 00:04:46,080
one of the benefits of low-code

00:04:44,000 --> 00:04:47,520
programming with tools like node-red

00:04:46,080 --> 00:04:49,280
is it abstracts away a lot of the

00:04:47,520 --> 00:04:50,080
technical details of how things are

00:04:49,280 --> 00:04:52,000
working

00:04:50,080 --> 00:04:54,080
it allows you to focus on solving the

00:04:52,000 --> 00:04:56,560
problem at hand

00:04:54,080 --> 00:04:58,160
but just because it's low code that

00:04:56,560 --> 00:04:59,040
doesn't mean you can't have the tools

00:04:58,160 --> 00:05:02,160
you need

00:04:59,040 --> 00:05:05,039
to make high quality applications

00:05:02,160 --> 00:05:07,280
and yes to help debug when things aren't

00:05:05,039 --> 00:05:10,160
going as they should

00:05:07,280 --> 00:05:11,520
to that end alongside the 2.0 release

00:05:10,160 --> 00:05:12,639
we're also going to be releasing a pair

00:05:11,520 --> 00:05:14,240
of new tools

00:05:12,639 --> 00:05:17,280
that's going to bring some new super

00:05:14,240 --> 00:05:20,080
powers to node-red flow developers

00:05:17,280 --> 00:05:22,080
first up is a flow debugger now this is

00:05:20,080 --> 00:05:24,639
going to act like regular code debuggers

00:05:22,080 --> 00:05:26,880
but at the flow level you're going to

00:05:24,639 --> 00:05:29,759
have set break points on node ports

00:05:26,880 --> 00:05:31,120
either inputs or outputs then whenever a

00:05:29,759 --> 00:05:34,160
message arrives at a breakpoint

00:05:31,120 --> 00:05:35,840
the entire runtime will get paused now

00:05:34,160 --> 00:05:37,440
when it's paused it will show you

00:05:35,840 --> 00:05:38,960
how many messages are queued up at each

00:05:37,440 --> 00:05:41,120
point in the flow

00:05:38,960 --> 00:05:43,039
and in the sidebar you can see the queue

00:05:41,120 --> 00:05:45,360
of messages in the order they are going

00:05:43,039 --> 00:05:47,680
to get processed

00:05:45,360 --> 00:05:49,199
each time you click the step button the

00:05:47,680 --> 00:05:49,840
next message is taken from the top of

00:05:49,199 --> 00:05:53,440
the queue

00:05:49,840 --> 00:05:54,639
and gets processed the message queue

00:05:53,440 --> 00:05:57,199
also lets you step

00:05:54,639 --> 00:05:59,520
individual messages out of order or even

00:05:57,199 --> 00:06:01,360
to remove them from the queue

00:05:59,520 --> 00:06:03,360
and we've got some great features coming

00:06:01,360 --> 00:06:05,759
in the future such as adding

00:06:03,360 --> 00:06:06,400
conditional break points or editing

00:06:05,759 --> 00:06:09,039
messages

00:06:06,400 --> 00:06:09,039
in flight

00:06:09,440 --> 00:06:15,039
the second tool is a flow linter nrlint

00:06:13,199 --> 00:06:16,960
this can be used to identify potential

00:06:15,039 --> 00:06:18,800
problems in the flow based on a large

00:06:16,960 --> 00:06:21,120
set of rules the linter will provide

00:06:18,800 --> 00:06:22,479
for example it can warn if you have an

00:06:21,120 --> 00:06:24,000
http input node

00:06:22,479 --> 00:06:26,639
that doesn't get connected to an hpv

00:06:24,000 --> 00:06:27,840
response node or if you have nodes that

00:06:26,639 --> 00:06:29,360
are physically overlapping and

00:06:27,840 --> 00:06:30,960
potentially obscuring each other in the

00:06:29,360 --> 00:06:33,120
workspace

00:06:30,960 --> 00:06:34,000
we've modeled the linter after eslint

00:06:33,120 --> 00:06:35,759
which will also

00:06:34,000 --> 00:06:37,440
bundle in one of our rules so you can

00:06:35,759 --> 00:06:39,680
use it to lint the javascript in your

00:06:37,440 --> 00:06:41,360
function nodes

00:06:39,680 --> 00:06:43,360
now we've designed the linter to run in

00:06:41,360 --> 00:06:44,560
the browser using a worker thread

00:06:43,360 --> 00:06:46,560
meaning it doesn't impact the

00:06:44,560 --> 00:06:48,479
performance of the editor

00:06:46,560 --> 00:06:50,319
the sidebar shows you the linting

00:06:48,479 --> 00:06:51,840
results and let you quickly navigate to

00:06:50,319 --> 00:06:53,840
the areas of the flow that might need

00:06:51,840 --> 00:06:56,400
some attention

00:06:53,840 --> 00:06:58,319
outside of the editor nrlint can also be

00:06:56,400 --> 00:07:01,120
installed and run as a command line tool

00:06:58,319 --> 00:07:02,960
against a flow json file this means it

00:07:01,120 --> 00:07:05,120
can be used to validate flows as part of

00:07:02,960 --> 00:07:06,880
build pipelines

00:07:05,120 --> 00:07:08,720
today we've got quite a minimal set of

00:07:06,880 --> 00:07:10,000
rules and a recent call

00:07:08,720 --> 00:07:12,080
for input from the community has

00:07:10,000 --> 00:07:13,199
generated a long list of great ideas

00:07:12,080 --> 00:07:16,160
and we hope to have lots of them

00:07:13,199 --> 00:07:17,759
implemented in time for the release

00:07:16,160 --> 00:07:20,000
but we're sure equally that there's

00:07:17,759 --> 00:07:21,759
going to be some perhaps more esoteric

00:07:20,000 --> 00:07:22,960
rules that perhaps don't belong in the

00:07:21,759 --> 00:07:25,680
core set

00:07:22,960 --> 00:07:26,639
for example some third-party nodes may

00:07:25,680 --> 00:07:29,280
want to introduce

00:07:26,639 --> 00:07:30,080
guidance about how their nodes are used

00:07:29,280 --> 00:07:31,759
so to support

00:07:30,080 --> 00:07:33,680
that the linter rules are entirely

00:07:31,759 --> 00:07:35,199
plugable allowing custom rules to be

00:07:33,680 --> 00:07:37,680
created and shared with the community

00:07:35,199 --> 00:07:40,240
via npm

00:07:37,680 --> 00:07:41,759
in wider project news we're going to be

00:07:40,240 --> 00:07:44,560
launching our not quite

00:07:41,759 --> 00:07:46,400
annual nerd red community survey soon we

00:07:44,560 --> 00:07:47,199
last ran it just over two years ago in

00:07:46,400 --> 00:07:48,639
00:07:47,199 --> 00:07:50,639
and got some great insights from the

00:07:48,639 --> 00:07:52,720
community we've decided

00:07:50,639 --> 00:07:54,319
it's time to rerun it with some updates

00:07:52,720 --> 00:07:55,520
so if you're a node-red user

00:07:54,319 --> 00:07:58,000
keep an eye out for that when it

00:07:55,520 --> 00:07:59,680
launches and that's

00:07:58,000 --> 00:08:00,800
everything i had for you today we're

00:07:59,680 --> 00:08:02,879
really looking forward to getting the

00:08:00,800 --> 00:08:05,280
node red 2.0 beta released

00:08:02,879 --> 00:08:06,319
and to let you play with the debugger

00:08:05,280 --> 00:08:07,759
and linter

00:08:06,319 --> 00:08:09,440
i really think they're going to be

00:08:07,759 --> 00:08:10,720
hugely useful tools for the nerdred

00:08:09,440 --> 00:08:12,400
community

00:08:10,720 --> 00:08:14,639
if you have any questions about anything

00:08:12,400 --> 00:08:16,720
you've heard today do come and ask in

00:08:14,639 --> 00:08:19,039
the forum or on snack

00:08:16,720 --> 00:08:21,919
and that's everything i've got bye for

00:08:19,039 --> 00:08:21,919

YouTube URL: https://www.youtube.com/watch?v=Xhx3OoaWIaw


