Title: i18n: Moving forward with the i18n WG, Node.js Intl, and ECMA 402
Publication date: 2019-05-31
Playlist: OpenJS Foundation Collaborator Summit, Berlin, May 2019
Description: 
	OpenJS Foundation Collaborator Summit, Berlin, 2019

More details: https://github.com/nodejs/summit/issues/164

A breakout session for members of the i18n WG to cover how we can continue to push forward efforts like:

* l10n: CommComm Initiatives for internationalizing the API docs, and the website redesign project.
* Intl in Node.js: How the i18n WG can focus on supporting current Intl development in node core, and get more folks to help out with the core WG.
* The i18n WG's role in ECMA 402: How we can scale the i18n WG's involvement and support for tc39 in ECMA 402, and what the current needs are that Node.js representatives can fulfill for pushing JavaScript's Intl specification forward.
Captions: 
	00:00:01,700 --> 00:00:05,550
was the agenda somewhere actually yeah

00:00:04,350 --> 00:00:09,290
that's what I'm doing now

00:00:05,550 --> 00:00:12,679
[Laughter]

00:00:09,290 --> 00:00:12,679
dynamic agenda

00:00:17,420 --> 00:00:20,469
[Music]

00:00:21,440 --> 00:01:53,009
yes yeah Leo and I redesign and I'm

00:01:52,200 --> 00:01:56,250
Chris Mills

00:01:53,009 --> 00:02:00,179
I am the content team manager and

00:01:56,250 --> 00:02:08,420
content lead for MVNO Mozilla and then

00:02:00,179 --> 00:02:11,220
we turned up to my session for work

00:02:08,420 --> 00:02:18,060
consulting for Vincent finished

00:02:11,220 --> 00:02:19,680
consulting company here because I found

00:02:18,060 --> 00:02:22,709
it interesting and fun to work on

00:02:19,680 --> 00:02:25,920
JavaScript localization projects message

00:02:22,709 --> 00:02:31,400
format is projects I maintain which is

00:02:25,920 --> 00:02:34,830
now no bjs project also make plural and

00:02:31,400 --> 00:02:38,459
they're the intramural rules polyfill

00:02:34,830 --> 00:02:42,000
is his mine and I recently have started

00:02:38,459 --> 00:02:49,920
messing around with the fluent project

00:02:42,000 --> 00:02:53,750
that Mozilla has grown a compiler have

00:02:49,920 --> 00:02:53,750
been hanging around occasionally indeed

00:03:06,019 --> 00:03:15,900
it was terrific actually working one of

00:03:09,209 --> 00:03:17,849
the things for into floral rules to

00:03:15,900 --> 00:03:20,970
polical for that to hit one of the

00:03:17,849 --> 00:03:23,340
things that is in the spec because I was

00:03:20,970 --> 00:03:25,470
messing around with it yeah you can take

00:03:23,340 --> 00:03:26,760
the same object and pass it to multiple

00:03:25,470 --> 00:03:43,349
different constructions and it just

00:03:26,760 --> 00:03:45,180
works it's semi magic yeah yeah hi I'm

00:03:43,349 --> 00:03:51,750
drew I've recently completed my

00:03:45,180 --> 00:03:54,329
graduation last about seven days yeah so

00:03:51,750 --> 00:03:55,799
I'm from India actually have been

00:03:54,329 --> 00:03:59,430
involved in the website redesign and in

00:03:55,799 --> 00:04:06,840
transition D yes also I will be joining

00:03:59,430 --> 00:04:07,980
as a software engineer actually I also I

00:04:06,840 --> 00:04:09,959
will be joining as a software engineer

00:04:07,980 --> 00:04:12,090
the front-end engineering team at clear

00:04:09,959 --> 00:04:14,609
tax which is one of the biggest or say

00:04:12,090 --> 00:04:20,729
the biggest platform for online taxi

00:04:14,609 --> 00:04:25,770
fillings in India hey I'm then the most

00:04:20,729 --> 00:04:33,419
organized person in the world I'm Ben

00:04:25,770 --> 00:04:40,320
hey hello again I work for envision the

00:04:33,419 --> 00:04:41,910
design and I am a part of the community

00:04:40,320 --> 00:04:45,440
committee for nodejs

00:04:41,910 --> 00:04:47,999
work on various initiatives including

00:04:45,440 --> 00:04:53,939
internationalization and so that's what

00:04:47,999 --> 00:04:57,679
brings me good yeah yeah really exciting

00:04:53,939 --> 00:04:57,679
things in the design world and

00:04:57,889 --> 00:05:00,889
internationalizing

00:05:02,209 --> 00:05:52,860
here yeah and I work on tc39 on

00:05:50,039 --> 00:05:57,779
different specifications including I can

00:05:52,860 --> 00:05:59,339
afford to and so yeah would be if if

00:05:57,779 --> 00:06:00,839
folks are interested one thing we could

00:05:59,339 --> 00:06:02,959
we could talk about is like what

00:06:00,839 --> 00:06:06,839
proposals are being discussed and what

00:06:02,959 --> 00:06:11,369
things we should discuss but Emily

00:06:06,839 --> 00:06:12,329
mentioned message format and well I

00:06:11,369 --> 00:06:16,649
guess that was sort of a different

00:06:12,329 --> 00:06:24,119
context but to make internationalization

00:06:16,649 --> 00:06:24,389
work for node.js you might oh yeah oh

00:06:24,119 --> 00:06:26,729
yeah

00:06:24,389 --> 00:06:28,589
hey can you introduce yourself Stephen

00:06:26,729 --> 00:06:31,199
certainly so I'm Stephen Lewis

00:06:28,589 --> 00:06:34,279
coming to you from sunny California you

00:06:31,199 --> 00:06:40,679
can see the Sun in the background there

00:06:34,279 --> 00:06:42,719
it's the Sun Sun is scheduled so and I

00:06:40,679 --> 00:06:46,909
work for IBM's global foundation esteem

00:06:42,719 --> 00:06:51,209
and I work on I see you in cldr

00:06:46,909 --> 00:06:54,959
libraries for with the Unicode project

00:06:51,209 --> 00:06:58,529
and with JavaScript one thing I've I've

00:06:54,959 --> 00:07:01,920
been involved in is getting no I C to be

00:06:58,529 --> 00:07:04,820
on by default in node version 12

00:07:01,920 --> 00:07:07,110
that was a kind of my first foray into

00:07:04,820 --> 00:07:11,120
JavaScript land and I've also been

00:07:07,110 --> 00:07:11,120
involved with ECMO for two committee

00:07:11,870 --> 00:07:16,050
Felix are you on the line there would

00:07:13,650 --> 00:07:18,390
you like to introduce yourself uh yeah

00:07:16,050 --> 00:07:19,980
sure I actually just found this on

00:07:18,390 --> 00:07:22,380
Twitter and thought it would be

00:07:19,980 --> 00:07:25,920
interesting to follow along so don't

00:07:22,380 --> 00:07:30,270
find that sounds great

00:07:25,920 --> 00:07:32,970
welcome well uh what's your story I'm a

00:07:30,270 --> 00:07:35,880
software engineer I work remote from

00:07:32,970 --> 00:07:39,660
Germany for a company in San Francisco

00:07:35,880 --> 00:07:43,470
called source graph and understand node

00:07:39,660 --> 00:07:46,950
enthusiasts Brad that sounds great well

00:07:43,470 --> 00:07:50,060
welcome excited to have you okay so

00:07:46,950 --> 00:07:55,620
there is a agenda published if you go to

00:07:50,060 --> 00:07:57,930
the summit issues so if you go to the no

00:07:55,620 --> 00:08:03,330
J summit issues I can everybody find

00:07:57,930 --> 00:08:04,860
that if they like and then go to should

00:08:03,330 --> 00:08:07,740
be at the top of the list and so I just

00:08:04,860 --> 00:08:09,570
updated it what it's 164 scroll down to

00:08:07,740 --> 00:08:16,980
the bottom there at the last comment I

00:08:09,570 --> 00:08:18,780
published the agenda as someone said I

00:08:16,980 --> 00:08:26,580
think it was Dan this can be a dynamic

00:08:18,780 --> 00:08:28,380
agenda so please feel free to you know

00:08:26,580 --> 00:08:31,350
there's enough here to fill up the next

00:08:28,380 --> 00:08:36,030
you know 45 minutes or whatever I feel

00:08:31,350 --> 00:08:37,950
like so let me start out with the first

00:08:36,030 --> 00:08:39,570
part of this session here so first I'd

00:08:37,950 --> 00:08:42,450
like to reiterate what this working

00:08:39,570 --> 00:08:45,930
group is about internationalization

00:08:42,450 --> 00:08:48,870
House is about three different concerns

00:08:45,930 --> 00:08:50,400
and one is translation so translation

00:08:48,870 --> 00:08:53,580
infrastructure for translation of

00:08:50,400 --> 00:08:57,990
textual assets like you know our

00:08:53,580 --> 00:09:00,120
documentation and our websites and how

00:08:57,990 --> 00:09:03,450
do we translate those into every

00:09:00,120 --> 00:09:08,940
language utilize the service the crowd

00:09:03,450 --> 00:09:10,410
in service to perform as a landing for

00:09:08,940 --> 00:09:13,900
translators to be able to translate

00:09:10,410 --> 00:09:18,730
those and we've set up the

00:09:13,900 --> 00:09:21,660
automated with the automation of putting

00:09:18,730 --> 00:09:24,790
translations in as PRS and to our

00:09:21,660 --> 00:09:28,000
documentation repository right now so

00:09:24,790 --> 00:09:31,720
there's that translating our stuff and

00:09:28,000 --> 00:09:34,780
the next would be int Oh implementation

00:09:31,720 --> 00:09:37,840
and OGS which is where Stephen and other

00:09:34,780 --> 00:09:40,420
folks are involved and we'll get into

00:09:37,840 --> 00:09:46,060
talking more about Oh Stephen did you

00:09:40,420 --> 00:09:50,650
were you able to get the agenda yes

00:09:46,060 --> 00:09:52,990
okay cool awesome so I'll give some room

00:09:50,650 --> 00:09:55,840
to Stephen to update us on that and just

00:09:52,990 --> 00:09:59,890
a little bit that we're excited to

00:09:55,840 --> 00:10:02,980
figure out how to support that team more

00:09:59,890 --> 00:10:07,270
and create ways to contribute to that

00:10:02,980 --> 00:10:10,300
initiative and then we also concern

00:10:07,270 --> 00:10:12,850
ourselves with support for tc39 and 402

00:10:10,300 --> 00:10:15,780
we're excited to hear from Dan today on

00:10:12,850 --> 00:10:18,430
current status on all the things and

00:10:15,780 --> 00:10:21,640
figure out ways that we can and what the

00:10:18,430 --> 00:10:25,180
needs are and how we can support support

00:10:21,640 --> 00:10:27,670
them so first I'm going to kick things

00:10:25,180 --> 00:10:29,560
off with the website redesign initiative

00:10:27,670 --> 00:10:33,400
which is a community committee

00:10:29,560 --> 00:10:36,730
initiative and we've been talking a

00:10:33,400 --> 00:10:39,910
little bit about the our needs but what

00:10:36,730 --> 00:10:46,960
I'd like to do now is create some action

00:10:39,910 --> 00:10:52,330
items for supporting new translations so

00:10:46,960 --> 00:10:57,220
this first item was mostly for me just

00:10:52,330 --> 00:10:59,770
to be able to connect on this yeah so

00:10:57,220 --> 00:11:01,870
really where we're at right now is we've

00:10:59,770 --> 00:11:06,370
got translation infrastructure set up

00:11:01,870 --> 00:11:09,460
but we need to target our your your

00:11:06,370 --> 00:11:13,630
textual assets right so we need to

00:11:09,460 --> 00:11:16,800
figure out how to you know consume that

00:11:13,630 --> 00:11:16,800
and then be able to

00:11:17,560 --> 00:11:22,690
publish it as an NPM module so that you

00:11:20,199 --> 00:11:24,190
can you know consume it so I think like

00:11:22,690 --> 00:11:25,480
we're just this kind of just like a

00:11:24,190 --> 00:11:29,500
quick update and then like you leave on

00:11:25,480 --> 00:11:34,120
to other things but we yeah I guess the

00:11:29,500 --> 00:11:36,009
the next steps are to set up an NPM

00:11:34,120 --> 00:11:37,870
account published you know publish the

00:11:36,009 --> 00:11:42,850
the module and update in version from

00:11:37,870 --> 00:11:45,670
there and all this to say you know like

00:11:42,850 --> 00:11:49,839
I think as we create a project board for

00:11:45,670 --> 00:11:52,600
that and I would love it if you know

00:11:49,839 --> 00:11:55,509
what's that redesigned to keep in touch

00:11:52,600 --> 00:11:58,360
with that but right now like what are

00:11:55,509 --> 00:12:01,389
your main concerns you know yes so we

00:11:58,360 --> 00:12:03,730
aren't blocked from new features quite

00:12:01,389 --> 00:12:10,480
yet just like this it'll be a blocker

00:12:03,730 --> 00:12:13,089
for launch we have a lot of feature

00:12:10,480 --> 00:12:16,170
edition static node morrow morning first

00:12:13,089 --> 00:12:16,170
event tomorrow morning website redesign

00:12:16,380 --> 00:12:21,670
and what next steps are I

00:12:18,880 --> 00:12:22,420
but yeah so we're we're not immediately

00:12:21,670 --> 00:12:24,430
blocked by it

00:12:22,420 --> 00:12:27,550
it will be a locker for switching it

00:12:24,430 --> 00:12:31,149
over to the main domain when that choice

00:12:27,550 --> 00:12:32,139
was made so I did from what it sounds

00:12:31,149 --> 00:12:35,050
like that we're mostly going to be

00:12:32,139 --> 00:12:36,699
working in markdown files we're gonna be

00:12:35,050 --> 00:12:38,410
pulling from a number of sources

00:12:36,699 --> 00:12:41,470
I believe we don't want to break up

00:12:38,410 --> 00:12:46,899
documentation from the court ridox all

00:12:41,470 --> 00:12:49,120
of them on site we don't want to we're

00:12:46,899 --> 00:12:51,310
not at the moment all the kind of like

00:12:49,120 --> 00:12:53,079
learning documentation like getting

00:12:51,310 --> 00:12:57,069
started documentation does live in the

00:12:53,079 --> 00:12:59,680
node-red repo right now but we may also

00:12:57,069 --> 00:13:01,600
start pulling in files from other repos

00:12:59,680 --> 00:13:04,000
like it would be nice if community page

00:13:01,600 --> 00:13:06,069
stuff could live in the Hong Kong repo

00:13:04,000 --> 00:13:09,339
you know try and keep documentation

00:13:06,069 --> 00:13:11,350
we're living alongside the team that is

00:13:09,339 --> 00:13:12,699
working with it on regular so we're

00:13:11,350 --> 00:13:16,540
hoping to take this kind of federated

00:13:12,699 --> 00:13:18,670
model pulling content and so we'll

00:13:16,540 --> 00:13:24,130
probably boom from open sources I'm not

00:13:18,670 --> 00:13:26,199
sure how that will affect we then have

00:13:24,130 --> 00:13:28,839
the flip side of this problem we're

00:13:26,199 --> 00:13:31,480
actually after stuff is scooped in

00:13:28,839 --> 00:13:33,970
translated through

00:13:31,480 --> 00:13:36,730
and the mando is published I need to

00:13:33,970 --> 00:13:37,750
make sure that we're updated so like we

00:13:36,730 --> 00:13:39,550
need something like greenkeeper or

00:13:37,750 --> 00:13:40,960
something up there just to keep keep

00:13:39,550 --> 00:13:42,460
this thing auto updating on the regular

00:13:40,960 --> 00:13:44,920
if we do go the module route for

00:13:42,460 --> 00:13:46,690
disseminating translations you're you're

00:13:44,920 --> 00:13:49,000
pulling from multiple markdown sources

00:13:46,690 --> 00:13:50,920
right currently it will be yeah right

00:13:49,000 --> 00:13:53,320
now the page as it is just comes from up

00:13:50,920 --> 00:13:56,020
there you design it's literally just

00:13:53,320 --> 00:13:59,560
like a little digest that Deb is a

00:13:56,020 --> 00:14:00,760
microsite that just has getting started

00:13:59,560 --> 00:14:02,530
documentation like starting to learn

00:14:00,760 --> 00:14:05,520
note but we're gonna expand it to have

00:14:02,530 --> 00:14:09,550
API Docs homepage downloads page

00:14:05,520 --> 00:14:12,550
community pages so we'll be pulling from

00:14:09,550 --> 00:14:14,230
a number different sources okay quick

00:14:12,550 --> 00:14:19,300
question just for more intending to get

00:14:14,230 --> 00:14:21,810
in what should that oh yeah so you mean

00:14:19,300 --> 00:14:27,910
the internationalization yeah yeah so

00:14:21,810 --> 00:14:31,990
hey Jory not a problem so when the what

00:14:27,910 --> 00:14:34,420
the internationalisation repo is going

00:14:31,990 --> 00:14:39,040
to export is a module containing all of

00:14:34,420 --> 00:14:42,970
the edge it's like one one giant JSON

00:14:39,040 --> 00:14:45,430
blob with all the texture translated

00:14:42,970 --> 00:14:48,730
Texas yeah so that it can be keyed and

00:14:45,430 --> 00:14:51,820
imported into the website or whatever

00:14:48,730 --> 00:14:53,350
the end destination is in it so we may

00:14:51,820 --> 00:14:55,510
want to consider when publishing that

00:14:53,350 --> 00:14:59,860
module for like publish a different one

00:14:55,510 --> 00:15:02,170
for repo um so that we're not like it's

00:14:59,860 --> 00:15:06,880
something bumps in the API Doc's we need

00:15:02,170 --> 00:15:09,280
to bump the text translations or you

00:15:06,880 --> 00:15:14,470
know learn documentation just keep that

00:15:09,280 --> 00:15:15,520
separation concerns there just yet

00:15:14,470 --> 00:15:19,570
something to consider is you kind of

00:15:15,520 --> 00:15:23,020
craft how that gets spit up also we

00:15:19,570 --> 00:15:24,970
probably don't want it is just like a

00:15:23,020 --> 00:15:27,250
giant monolithic JSON blob because you

00:15:24,970 --> 00:15:28,510
can't do the huge floating this we're

00:15:27,250 --> 00:15:32,800
doing about splitting or anything like

00:15:28,510 --> 00:15:34,540
that so yes it's kind of like per like

00:15:32,800 --> 00:15:42,880
one JSON from a markdown file if I would

00:15:34,540 --> 00:15:44,170
be best because here yeah but yeah the

00:15:42,880 --> 00:15:46,570
API Doc's are already

00:15:44,170 --> 00:15:48,730
translated understanding yeah we just

00:15:46,570 --> 00:15:50,290
don't have a published artifact that yes

00:15:48,730 --> 00:15:52,450
so actual action items it sounds like

00:15:50,290 --> 00:15:54,310
our okay and no Jessica so we can get

00:15:52,450 --> 00:15:56,620
translations for that come with a

00:15:54,310 --> 00:15:58,180
process for adding new repost the

00:15:56,620 --> 00:16:00,839
translation pipeline

00:15:58,180 --> 00:16:03,370
getting the module polishing down

00:16:00,839 --> 00:16:04,750
there's actually and then put action

00:16:03,370 --> 00:16:06,519
item it's mostly only website redesign

00:16:04,750 --> 00:16:07,959
side of how do we auto update and

00:16:06,519 --> 00:16:16,410
consume translations so that that's on

00:16:07,959 --> 00:16:16,410
us I think that's our integration yeah

00:16:16,860 --> 00:16:21,579
okay you know that makes perfect sense

00:16:19,589 --> 00:16:25,389
yeah I think we're gonna have to figure

00:16:21,579 --> 00:16:26,589
out how we yes definitely okay I think

00:16:25,389 --> 00:16:29,040
you covered all that we're going to

00:16:26,589 --> 00:16:32,920
figure out how we want to split it up

00:16:29,040 --> 00:16:35,860
consuming various or consuming disparate

00:16:32,920 --> 00:16:40,029
sources I think even I should stay in

00:16:35,860 --> 00:16:43,630
touch about how we're going to utilize

00:16:40,029 --> 00:16:46,360
that you know if that's I'm just trying

00:16:43,630 --> 00:16:48,850
to cite like should internationalization

00:16:46,360 --> 00:16:50,680
consume one thing from you or should we

00:16:48,850 --> 00:16:52,570
target all those things to since they

00:16:50,680 --> 00:16:53,829
might all be the source of truth because

00:16:52,570 --> 00:16:58,779
like getting down to one source the

00:16:53,829 --> 00:17:00,760
truth would be nice but okay yeah great

00:16:58,779 --> 00:17:03,820
I think in the interest of time and

00:17:00,760 --> 00:17:15,040
other stuff we can push along do you

00:17:03,820 --> 00:17:16,750
have any questions for me I also have

00:17:15,040 --> 00:17:19,179
other yeah I've been doing some

00:17:16,750 --> 00:17:20,650
documentation automation uh I work for

00:17:19,179 --> 00:17:22,480
this sort of thing so when would you

00:17:20,650 --> 00:17:24,250
think when you do get to the point to

00:17:22,480 --> 00:17:25,360
where you need to set up like a green

00:17:24,250 --> 00:17:28,120
keeper or something like that let me

00:17:25,360 --> 00:17:31,840
know because there's definitely ways

00:17:28,120 --> 00:17:34,059
that we should hook it into releases I

00:17:31,840 --> 00:17:43,960
think is the most important thing so you

00:17:34,059 --> 00:17:45,610
know cool okay nothing like that I'm

00:17:43,960 --> 00:17:48,220
going to refresh and just see if anybody

00:17:45,610 --> 00:17:57,789
I named ik we updated this completely

00:17:48,220 --> 00:18:03,519
also okay or no it's a I'm tired okay so

00:17:57,789 --> 00:18:06,479
let's move on to int L in no js' and the

00:18:03,519 --> 00:18:11,049
specifically Stevens area of expertise

00:18:06,479 --> 00:18:15,369
here and I my my only question here free

00:18:11,049 --> 00:18:17,649
Steven as far as facilitating a 18m repo

00:18:15,369 --> 00:18:22,210
is something I've noticed is there's a

00:18:17,649 --> 00:18:25,690
few people in the int L github team or

00:18:22,210 --> 00:18:28,720
like in the nodejs team and it just

00:18:25,690 --> 00:18:31,989
seems like you know there's not a great

00:18:28,720 --> 00:18:35,349
window for contributors to line or to

00:18:31,989 --> 00:18:40,950
help with getting into you know

00:18:35,349 --> 00:18:43,450
supporting int L like in ojs core and

00:18:40,950 --> 00:18:45,849
like it's like there's a few like a

00:18:43,450 --> 00:18:47,559
handful of active people working on

00:18:45,849 --> 00:18:51,820
those issues we have a tag you know that

00:18:47,559 --> 00:18:54,399
like right for whatever but like how can

00:18:51,820 --> 00:18:57,729
we support that group more I'd like to

00:18:54,399 --> 00:18:59,590
like create a contributing guide that

00:18:57,729 --> 00:19:01,330
kind of thing and what are your thoughts

00:18:59,590 --> 00:19:05,259
on that and then maybe you can give us

00:19:01,330 --> 00:19:08,080
an update on how ing line oj n.e

00:19:05,259 --> 00:19:11,379
you'd like to talk about sure well the

00:19:08,080 --> 00:19:14,379
one and one thing to to to keep in mind

00:19:11,379 --> 00:19:17,889
is that the IDL object in no jeaious its

00:19:14,379 --> 00:19:22,179
implementation comes directly from p8 so

00:19:17,889 --> 00:19:24,460
on the nodejs side a lot of the the

00:19:22,179 --> 00:19:27,429
items are are more in the realm of kind

00:19:24,460 --> 00:19:31,029
of packaging and options and

00:19:27,429 --> 00:19:35,919
configuration specifically data loading

00:19:31,029 --> 00:19:40,749
is is the it is often been the elephant

00:19:35,919 --> 00:19:44,679
in the room so to speak and as far as

00:19:40,749 --> 00:19:47,349
the as what's in note itself and so a

00:19:44,679 --> 00:19:50,830
lot of the eine seele contribution work

00:19:47,349 --> 00:19:53,950
actually happens in v8 which is where

00:19:50,830 --> 00:19:57,070
the actual implementation is for ITL and

00:19:53,950 --> 00:20:00,460
then the implementation of what v8 is

00:19:57,070 --> 00:20:04,019
calling is in the ICU project which is

00:20:00,460 --> 00:20:08,320
the international components for unicode

00:20:04,019 --> 00:20:11,230
it's a open source C C++ and also Java

00:20:08,320 --> 00:20:13,390
library from Unicode itself

00:20:11,230 --> 00:20:15,640
and so a lot of the work happens there

00:20:13,390 --> 00:20:18,480
or in the cldr

00:20:15,640 --> 00:20:22,420
repository which is the locale data

00:20:18,480 --> 00:20:24,430
which is also from Unicode the good

00:20:22,420 --> 00:20:28,810
thing is that the Unicode repositories

00:20:24,430 --> 00:20:31,300
are now all on github that was a

00:20:28,810 --> 00:20:37,420
migration just sealed era just moved a

00:20:31,300 --> 00:20:39,280
couple a month ago yes yes party weave

00:20:37,420 --> 00:20:43,420
around the table people are just saying

00:20:39,280 --> 00:20:46,840
yeah yes so it should be a lot easier to

00:20:43,420 --> 00:20:49,600
come access the what's happening with

00:20:46,840 --> 00:20:51,670
those projects and even open a PR into

00:20:49,600 --> 00:20:55,630
upstream so I know if that answers your

00:20:51,670 --> 00:20:59,260
question but in the so for example from

00:20:55,630 --> 00:21:01,840
my my history getting nodejs into sorry

00:20:59,260 --> 00:21:05,800
getting international turned on by

00:21:01,840 --> 00:21:08,890
default in nodejs 12 was a major

00:21:05,800 --> 00:21:11,920
milestone because the until support was

00:21:08,890 --> 00:21:14,290
there before but it was optional and had

00:21:11,920 --> 00:21:16,120
this build process and the big the big

00:21:14,290 --> 00:21:19,050
issue with that was data loading and

00:21:16,120 --> 00:21:25,960
data loading remains a major issue

00:21:19,050 --> 00:21:30,880
there's a an open open issue in the full

00:21:25,960 --> 00:21:35,860
ICU project I'm just gonna try to type

00:21:30,880 --> 00:21:38,710
while I'm speaking here I am yeah I'm

00:21:35,860 --> 00:21:41,230
typing directly into that if I don't

00:21:38,710 --> 00:21:45,640
click close one okay so I put a link to

00:21:41,230 --> 00:21:47,710
a open question on full ICU NPM and it's

00:21:45,640 --> 00:21:51,640
kind of a question of whether the data

00:21:47,710 --> 00:21:55,990
loading for fall ICU should should move

00:21:51,640 --> 00:21:59,310
out of NPM into Adobe get because we get

00:21:55,990 --> 00:22:04,300
a lot of concerns there was one just

00:21:59,310 --> 00:22:07,360
went open just a few two days ago about

00:22:04,300 --> 00:22:09,220
the way the FO ICU project actually

00:22:07,360 --> 00:22:15,520
works and fall I see is just a loader

00:22:09,220 --> 00:22:16,960
it's not it doesn't do anything fancy so

00:22:15,520 --> 00:22:19,150
anyway if I could get some eyes on that

00:22:16,960 --> 00:22:22,290
that one but the idea is to basically

00:22:19,150 --> 00:22:26,500
pull from IC from github instead of

00:22:22,290 --> 00:22:32,400
trying to do this hacky post install

00:22:26,500 --> 00:22:32,400
sub npm install that oh I see does it

00:22:32,760 --> 00:22:38,820
would be great to have a contributing

00:22:36,520 --> 00:22:40,990
guide I think what I what I'd started on

00:22:38,820 --> 00:22:44,140
previously was something that tries to

00:22:40,990 --> 00:22:46,600
explain the stack basically where all

00:22:44,140 --> 00:22:48,340
these different pieces come from if

00:22:46,600 --> 00:22:50,920
you're at the level of hey the date

00:22:48,340 --> 00:22:53,370
format is wrong when I try to print this

00:22:50,920 --> 00:22:55,870
date you're offering an end up having

00:22:53,370 --> 00:23:00,460
looking at that at the cldr side for

00:22:55,870 --> 00:23:03,160
example yeah that's great no I really

00:23:00,460 --> 00:23:08,950
appreciate your work on that and being

00:23:03,160 --> 00:23:11,850
able to like I think that's something

00:23:08,950 --> 00:23:14,890
that we can evolve and figure out how to

00:23:11,850 --> 00:23:19,630
so the thing that I perceive is there's

00:23:14,890 --> 00:23:22,960
going to like looking from looking from

00:23:19,630 --> 00:23:23,980
sort of like a high level people who are

00:23:22,960 --> 00:23:25,330
getting involved in this repository

00:23:23,980 --> 00:23:27,610
library and the work at the

00:23:25,330 --> 00:23:29,920
internationalisation working group we're

00:23:27,610 --> 00:23:32,890
just gonna need a verbose contributing

00:23:29,920 --> 00:23:34,330
guide that basically brings to light

00:23:32,890 --> 00:23:37,180
everything that you think you just said

00:23:34,330 --> 00:23:39,490
you know like from sort of the ground up

00:23:37,180 --> 00:23:41,560
and yeah and like that's something that

00:23:39,490 --> 00:23:44,320
I would I would love to do to focus on

00:23:41,560 --> 00:23:46,660
sharing like I mean even what I see you

00:23:44,320 --> 00:23:48,310
you know unicode and I see you and cldr

00:23:46,660 --> 00:23:51,610
and all these things are and how they

00:23:48,310 --> 00:23:55,300
work and how they support you know the

00:23:51,610 --> 00:23:57,730
int L object and that sort of thing so I

00:23:55,300 --> 00:24:00,250
think like creating a contribution guide

00:23:57,730 --> 00:24:02,290
there that is sort of like a knowledge

00:24:00,250 --> 00:24:04,120
dump and then how to support Unicode

00:24:02,290 --> 00:24:08,950
would be a great place to start

00:24:04,120 --> 00:24:10,600
as well as yeah I guess um I just want

00:24:08,950 --> 00:24:13,270
to figure out how we can bleed more help

00:24:10,600 --> 00:24:15,670
into what you're doing so the more that

00:24:13,270 --> 00:24:18,280
we evolve that conversation through the

00:24:15,670 --> 00:24:21,460
ITN repo of the better I think

00:24:18,280 --> 00:24:23,350
right yeah does anybody else have

00:24:21,460 --> 00:24:29,800
thoughts or questions on what Stephen

00:24:23,350 --> 00:24:31,560
discovered or potentially like to take

00:24:29,800 --> 00:24:36,120
the conversation in another direction

00:24:31,560 --> 00:24:36,120
based on int L in them

00:24:37,129 --> 00:24:44,789
what about shipping full I see you

00:24:39,720 --> 00:24:46,739
always by default yeah that that's a

00:24:44,789 --> 00:24:53,549
that there isn't there's an issue open

00:24:46,739 --> 00:24:58,200
that's for exactly that and I can I can

00:24:53,549 --> 00:25:00,419
try to link that one in here I mean I

00:24:58,200 --> 00:25:02,940
thought that would be my preference I

00:25:00,419 --> 00:25:06,059
mean the the terms English only are kind

00:25:02,940 --> 00:25:08,489
of grading shall we say I mean that's

00:25:06,059 --> 00:25:12,359
kind of what I spend my career trying to

00:25:08,489 --> 00:25:15,389
avoid is English only but the the the

00:25:12,359 --> 00:25:18,830
issue with that is is is just download

00:25:15,389 --> 00:25:22,440
slice but I'll put a link to the issue I

00:25:18,830 --> 00:25:24,259
would I would certainly support that but

00:25:22,440 --> 00:25:27,779
the other thing that we could do is have

00:25:24,259 --> 00:25:30,330
downloads provide both so basically just

00:25:27,779 --> 00:25:31,919
how a prebuilt binary there's a small

00:25:30,330 --> 00:25:37,830
one if you really want to download a

00:25:31,919 --> 00:25:39,659
small one but basically you know

00:25:37,830 --> 00:25:51,379
encourage people to just download just

00:25:39,659 --> 00:25:56,580
download the full full content yes yeah

00:25:51,379 --> 00:25:59,549
it's bloat if it's a basically double I

00:25:56,580 --> 00:26:02,369
doubles the size of the download so yeah

00:25:59,549 --> 00:26:04,409
there's like 40 percent and I guess

00:26:02,369 --> 00:26:05,190
it'll get worse over time any only get

00:26:04,409 --> 00:26:11,039
worse over time

00:26:05,190 --> 00:26:12,989
I mean it's 35 megabytes to 49 megabytes

00:26:11,039 --> 00:26:15,989
yeah I mean it is a real it's it's a

00:26:12,989 --> 00:26:18,090
real issue I mean it's not a it's not a

00:26:15,989 --> 00:26:19,769
trivial and I don't I just don't I'm

00:26:18,090 --> 00:26:21,330
trying not finding it at the same time I

00:26:19,769 --> 00:26:24,929
guess I shouldn't search and talk at the

00:26:21,330 --> 00:26:26,999
same time yeah but it is it is a I mean

00:26:24,929 --> 00:26:29,249
it is a real issue and I understand I

00:26:26,999 --> 00:26:33,799
mean I run I run note on a Raspberry Pi

00:26:29,249 --> 00:26:38,070
and and small devices and so there are

00:26:33,799 --> 00:26:39,779
cases where where people are more

00:26:38,070 --> 00:26:45,149
concerned about the the disk space then

00:26:39,779 --> 00:26:47,399
then then it's actualization you know

00:26:45,149 --> 00:26:50,770
not everything has text content flowing

00:26:47,399 --> 00:26:55,510
through it and you also might have some

00:26:50,770 --> 00:26:57,430
thing that's constrained in terms of no

00:26:55,510 --> 00:26:59,410
runtime footprint like if you're right

00:26:57,430 --> 00:27:03,790
if you're running on a server and you're

00:26:59,410 --> 00:27:06,130
paying for the disk space you know but

00:27:03,790 --> 00:27:07,930
so it's a it's a valid concern but I

00:27:06,130 --> 00:27:13,240
think I think there's some value to

00:27:07,930 --> 00:27:15,280
having the default be be full just so

00:27:13,240 --> 00:27:16,990
that it reduces the pain point because

00:27:15,280 --> 00:27:19,660
it's always the issue right we get these

00:27:16,990 --> 00:27:22,000
issues once in a while and node

00:27:19,660 --> 00:27:25,540
basically my date format doesn't work

00:27:22,000 --> 00:27:29,290
and the reason is because you're not

00:27:25,540 --> 00:27:31,350
using English and it it what's the

00:27:29,290 --> 00:27:36,010
phrase the objects the objects aren't

00:27:31,350 --> 00:27:38,590
don't look great on that it's like it's

00:27:36,010 --> 00:27:40,240
like how many people are in this

00:27:38,590 --> 00:27:42,520
situation where they need to run node on

00:27:40,240 --> 00:27:44,500
like a Raspberry Pi a very constrained

00:27:42,520 --> 00:27:48,070
versus how many people are there that

00:27:44,500 --> 00:27:51,130
are just running node in development

00:27:48,070 --> 00:27:53,590
environments to run backpack or run in a

00:27:51,130 --> 00:27:55,300
container or on the server but they

00:27:53,590 --> 00:27:58,780
don't really care they probably dump

00:27:55,300 --> 00:28:03,600
like tens and thousands of megabytes and

00:27:58,780 --> 00:28:06,460
node modules yeah I contain it so like

00:28:03,600 --> 00:28:09,040
could like the default distribution have

00:28:06,460 --> 00:28:11,020
it included and then there's a another

00:28:09,040 --> 00:28:14,170
binary distribution like a separate

00:28:11,020 --> 00:28:18,910
package like no - no ICU or something

00:28:14,170 --> 00:28:21,820
like that that is like the raspberry pi

00:28:18,910 --> 00:28:23,890
users can download and they would

00:28:21,820 --> 00:28:26,800
probably be aware that they they want to

00:28:23,890 --> 00:28:29,380
go for the minimum one more so than the

00:28:26,800 --> 00:28:32,830
people not know ICU

00:28:29,380 --> 00:28:35,160
it's ICU with English right yeah sorry

00:28:32,830 --> 00:28:37,210
where did is no I don't think that

00:28:35,160 --> 00:28:39,520
personally I don't believe that an

00:28:37,210 --> 00:28:41,860
argument that oh because of our thing

00:28:39,520 --> 00:28:45,340
we'd like to increase the size of node

00:28:41,860 --> 00:28:51,360
by 50% or 100% oh sorry that's not gonna

00:28:45,340 --> 00:28:54,510
fly but would it be conceivable or

00:28:51,360 --> 00:28:58,210
considerable to think about D

00:28:54,510 --> 00:28:59,980
specializing English and rather make it

00:28:58,210 --> 00:29:02,080
explicit that this distribution that

00:28:59,980 --> 00:29:04,100
you're downloading has just English in

00:29:02,080 --> 00:29:07,009
it and possibly

00:29:04,100 --> 00:29:10,070
in parallel with it a number of

00:29:07,009 --> 00:29:11,570
different other alternatives yeah yeah I

00:29:10,070 --> 00:29:15,200
mean that's just that's that's really

00:29:11,570 --> 00:29:16,909
just a question as far as what you know

00:29:15,200 --> 00:29:19,330
what we want to provide you know

00:29:16,909 --> 00:29:22,489
basically does this rise to the level of

00:29:19,330 --> 00:29:25,340
where we want to where where when people

00:29:22,489 --> 00:29:29,330
go to download that this is the this is

00:29:25,340 --> 00:29:31,909
there a be choice they've got an a/b

00:29:29,330 --> 00:29:33,460
choice now we just don't tell them that

00:29:31,909 --> 00:29:40,279
you're begging just think yeah right

00:29:33,460 --> 00:29:46,399
bill publish right now they have an H is

00:29:40,279 --> 00:29:49,239
good for you oh I I absolutely we don't

00:29:46,399 --> 00:29:51,710
even publish a binary right now language

00:29:49,239 --> 00:29:53,989
right you don't need to get that it at

00:29:51,710 --> 00:29:55,879
that time and they only have an a choice

00:29:53,989 --> 00:29:59,629
yeah I'm gonna have something that's

00:29:55,879 --> 00:30:01,639
crazy and comes from not probably I mean

00:29:59,629 --> 00:30:03,710
a full grasp for the the tech involved

00:30:01,639 --> 00:30:06,649
but it's something that we can't turn

00:30:03,710 --> 00:30:07,309
into packages so they you have a use

00:30:06,649 --> 00:30:11,210
case for it

00:30:07,309 --> 00:30:12,529
install it is there any remote

00:30:11,210 --> 00:30:17,359
possibility of having that type of

00:30:12,529 --> 00:30:18,799
opt-in as a package yeah yeah so

00:30:17,359 --> 00:30:23,239
basically there's a package called fall

00:30:18,799 --> 00:30:26,479
ICU and if you do npm install full ICU

00:30:23,239 --> 00:30:30,009
it turns around and duck and installs

00:30:26,479 --> 00:30:34,309
installs the data for you as a package

00:30:30,009 --> 00:30:36,080
but the thing is that the the data needs

00:30:34,309 --> 00:30:38,989
to be configured at startup time of

00:30:36,080 --> 00:30:40,519
noted v8 so you can't you can't just

00:30:38,989 --> 00:30:44,720
include it it's not really it's not

00:30:40,519 --> 00:30:47,720
really a module it's kind of just a post

00:30:44,720 --> 00:30:49,669
installed loader hack but it's a way

00:30:47,720 --> 00:30:52,929
that you can you can get the data on

00:30:49,669 --> 00:30:57,739
your disk by adding it to package JSON

00:30:52,929 --> 00:31:00,349
and this is documented in the in the in

00:30:57,739 --> 00:31:04,340
the readme yeah on the agenda we have a

00:31:00,349 --> 00:31:08,299
link to fall I see NPM number 36 is my

00:31:04,340 --> 00:31:12,320
question about pulling from ICU github

00:31:08,299 --> 00:31:14,090
release instead of doing a and a post

00:31:12,320 --> 00:31:15,980
install sorry having a post install

00:31:14,090 --> 00:31:17,310
script just do it download basically

00:31:15,980 --> 00:31:20,300
like a

00:31:17,310 --> 00:31:22,770
just to fetch from github rather than

00:31:20,300 --> 00:31:31,350
turning around and reinstalling a sub

00:31:22,770 --> 00:31:33,120
package that's not really a package it's

00:31:31,350 --> 00:31:34,950
really there's no problem with it right

00:31:33,120 --> 00:31:38,400
and it's very easy for the programmers

00:31:34,950 --> 00:31:40,110
perspective right yeah I mean I guess

00:31:38,400 --> 00:31:44,610
it's not like a regular node module but

00:31:40,110 --> 00:31:46,290
silly it's very easy right it's easy yes

00:31:44,610 --> 00:31:48,090
but and you know you can look at the if

00:31:46,290 --> 00:31:50,130
you if you look at the link there's a

00:31:48,090 --> 00:31:55,560
link tissue install process is broken

00:31:50,130 --> 00:31:58,620
unsafe so it's it is it's easy when it

00:31:55,560 --> 00:31:59,970
works basically I call it a hack because

00:31:58,620 --> 00:32:02,280
it's not

00:31:59,970 --> 00:32:08,280
first of all including it as a module

00:32:02,280 --> 00:32:10,830
doesn't actually get you data yes you

00:32:08,280 --> 00:32:12,840
have to start up the node you have to

00:32:10,830 --> 00:32:19,380
start the node runtime with the right

00:32:12,840 --> 00:32:22,080
option to include the the data so you

00:32:19,380 --> 00:32:24,270
know npm install and require this module

00:32:22,080 --> 00:32:26,310
doesn't do what npm install and require

00:32:24,270 --> 00:32:29,460
a module usually does which is pulling

00:32:26,310 --> 00:32:33,660
functionality so that's hack number one

00:32:29,460 --> 00:32:35,820
this is hack number two is that it's you

00:32:33,660 --> 00:32:39,420
know any package manager is trying to

00:32:35,820 --> 00:32:44,400
manage the transitive dependencies and

00:32:39,420 --> 00:32:46,580
this in this it breaks that by what when

00:32:44,400 --> 00:32:49,140
in post install it goes and installs

00:32:46,580 --> 00:32:51,540
another package and which package

00:32:49,140 --> 00:32:54,630
installs depends on the Indian Asst and

00:32:51,540 --> 00:32:58,650
the version of node that you're running

00:32:54,630 --> 00:33:03,690
so you can't predict it at you know

00:32:58,650 --> 00:33:05,880
original install time so it's that's why

00:33:03,690 --> 00:33:07,620
I call it a hack you know it's a

00:33:05,880 --> 00:33:11,130
convenience it's kind of a convenience

00:33:07,620 --> 00:33:15,000
when it works but it's it's it's not the

00:33:11,130 --> 00:33:18,780
best it's not the best approach I've

00:33:15,000 --> 00:33:20,760
used a full ICU by like setting an

00:33:18,780 --> 00:33:22,980
environment variable in my rental file

00:33:20,760 --> 00:33:25,920
that points to the global node modules

00:33:22,980 --> 00:33:29,400
for ICU but then like once you upgrade a

00:33:25,920 --> 00:33:31,110
node version right with NPM suddenly

00:33:29,400 --> 00:33:33,000
notes fails to star

00:33:31,110 --> 00:33:37,559
because it says like well couldn't find

00:33:33,000 --> 00:33:39,150
the ICU data I'm telling ya and then you

00:33:37,559 --> 00:33:41,970
have to like on every upgrade you have

00:33:39,150 --> 00:33:44,040
to reinstall whole ICU it just it

00:33:41,970 --> 00:33:48,240
wouldn't wait way more sense if that was

00:33:44,040 --> 00:33:50,400
not inside the node modules folder I

00:33:48,240 --> 00:33:54,210
don't know some somehow managed

00:33:50,400 --> 00:33:56,640
out-of-band not yeah that would that

00:33:54,210 --> 00:33:58,730
would be good and it really it could be

00:33:56,640 --> 00:34:00,920
it could go somewhere else

00:33:58,730 --> 00:34:06,000
easily I mean node could could have a

00:34:00,920 --> 00:34:11,060
directory that it it it expects now and

00:34:06,000 --> 00:34:11,060
and we we looked at there's an old issue

00:34:11,119 --> 00:34:19,139
to do to basically detect foal I see you

00:34:15,060 --> 00:34:21,149
venture got close just because you know

00:34:19,139 --> 00:34:24,530
really I needed I needed to figure out

00:34:21,149 --> 00:34:29,149
how to how to test it on all platforms

00:34:24,530 --> 00:34:31,679
but all I'll put a link to that one also

00:34:29,149 --> 00:34:34,080
awesome if you do that that'd be great

00:34:31,679 --> 00:34:37,409
Steven I think in the interest of time

00:34:34,080 --> 00:34:39,990
we're gonna yeah thank you so much for

00:34:37,409 --> 00:34:41,310
your updates I've seen it yeah I really

00:34:39,990 --> 00:34:43,679
appreciate it excited to connect with

00:34:41,310 --> 00:34:46,080
you again and spin up you know some

00:34:43,679 --> 00:34:48,030
regular working group sessions again I

00:34:46,080 --> 00:34:50,970
think the action item I'm taking from

00:34:48,030 --> 00:34:52,919
here as well is to update our

00:34:50,970 --> 00:34:53,520
contributing guide and kind of work with

00:34:52,919 --> 00:34:58,109
you on that

00:34:53,520 --> 00:35:03,930
yep okay let's spin over to what's going

00:34:58,109 --> 00:35:07,440
on with tc39 in ECMO 402 I think the you

00:35:03,930 --> 00:35:09,510
know the main question that I or the

00:35:07,440 --> 00:35:12,750
main I guess rhetorical question I'd

00:35:09,510 --> 00:35:14,869
like to answer more over time as how

00:35:12,750 --> 00:35:20,340
this working group can specifically

00:35:14,869 --> 00:35:23,580
support the 402 specification in a way

00:35:20,340 --> 00:35:27,000
that is useful and what are the needs

00:35:23,580 --> 00:35:31,290
and how do we create a more meaningful

00:35:27,000 --> 00:35:33,869
collaboration over time yet so I could

00:35:31,290 --> 00:35:38,730
talk about the difference across for to

00:35:33,869 --> 00:35:40,859
proposes that they are under discussion

00:35:38,730 --> 00:35:42,840
also Valerie I don't know if you're

00:35:40,859 --> 00:35:44,760
interested in presenting part of this or

00:35:42,840 --> 00:35:47,990
I didn't ask you to

00:35:44,760 --> 00:35:50,520
yes you don't know go ahead Oh Oh

00:35:47,990 --> 00:35:53,040
technically I believe we have 15 minutes

00:35:50,520 --> 00:35:55,050
for this session left on the other hunt

00:35:53,040 --> 00:35:57,420
there's nothing else scheduled for this

00:35:55,050 --> 00:36:04,560
room so I'm gonna go to another thing

00:35:57,420 --> 00:36:06,750
after this so the Intel API provides

00:36:04,560 --> 00:36:10,170
things like date-time format where you

00:36:06,750 --> 00:36:11,880
put in a date and you you can put in

00:36:10,170 --> 00:36:14,940
formatting options like including the

00:36:11,880 --> 00:36:16,440
locale but also including different like

00:36:14,940 --> 00:36:18,930
which components of the date you care

00:36:16,440 --> 00:36:21,300
about and it gives you a string which is

00:36:18,930 --> 00:36:27,540
locale dependent so there's there's a

00:36:21,300 --> 00:36:29,840
bunch of ongoing ongoing feature work to

00:36:27,540 --> 00:36:33,570
add more functionality to this like

00:36:29,840 --> 00:36:36,660
there's one PR that would add sort of

00:36:33,570 --> 00:36:39,660
Chinese calendar functionality certain

00:36:36,660 --> 00:36:41,700
kinds of like informal related lunar

00:36:39,660 --> 00:36:45,540
calendar sorry not lunar calendar like

00:36:41,700 --> 00:36:46,920
60-year cycle things but also about

00:36:45,540 --> 00:36:50,400
millisecond digits

00:36:46,920 --> 00:36:51,930
there's also with like number format

00:36:50,400 --> 00:36:56,310
there's ongoing work to add features

00:36:51,930 --> 00:37:01,200
like unit formatting or approximation

00:36:56,310 --> 00:37:03,720
with sort of millions or thousands we

00:37:01,200 --> 00:37:05,580
also have new for matters like relative

00:37:03,720 --> 00:37:09,390
time format which i think is shipping in

00:37:05,580 --> 00:37:13,680
node I don't know which version but and

00:37:09,390 --> 00:37:15,619
and Paroles which which Emily discussed

00:37:13,680 --> 00:37:20,280
[Music]

00:37:15,619 --> 00:37:21,240
and we're considering additional things

00:37:20,280 --> 00:37:23,790
like that

00:37:21,240 --> 00:37:25,290
there's also format format range to show

00:37:23,790 --> 00:37:26,280
the difference between two dates so

00:37:25,290 --> 00:37:28,710
these could be useful in

00:37:26,280 --> 00:37:31,350
internationalized web apps when they're

00:37:28,710 --> 00:37:33,690
trying to generate strings you can use

00:37:31,350 --> 00:37:36,440
the same functionality on both the

00:37:33,690 --> 00:37:36,440
client and the server

00:37:36,619 --> 00:37:43,950
that's the hope the web compat issue is

00:37:40,470 --> 00:37:45,420
is for the older features they're very

00:37:43,950 --> 00:37:47,790
broadly supported and I think you can

00:37:45,420 --> 00:37:49,980
you can count on the basics of date-time

00:37:47,790 --> 00:37:51,660
format number format and collator being

00:37:49,980 --> 00:37:56,760
there and then the other ones are more

00:37:51,660 --> 00:37:58,430
mixed and so I'm wondering like do you

00:37:56,760 --> 00:38:01,800
face these needs in node

00:37:58,430 --> 00:38:06,810
and what what functionality might be

00:38:01,800 --> 00:38:08,250
useful for you yeah one one high-level

00:38:06,810 --> 00:38:11,340
thing is something like project fluent

00:38:08,250 --> 00:38:13,830
should we should we eventually

00:38:11,340 --> 00:38:16,740
standardize something like like that

00:38:13,830 --> 00:38:20,160
which provides not just like a message

00:38:16,740 --> 00:38:21,810
formatting format string which could

00:38:20,160 --> 00:38:26,160
unify a lot of things when you have to

00:38:21,810 --> 00:38:27,660
get translators then you there's some

00:38:26,160 --> 00:38:28,650
point where you're choosing a format and

00:38:27,660 --> 00:38:30,390
there are various different tools that

00:38:28,650 --> 00:38:33,660
use different formats and then but also

00:38:30,390 --> 00:38:39,240
not just that but also the format for

00:38:33,660 --> 00:38:41,010
the the bundle which would be used which

00:38:39,240 --> 00:38:45,240
which has meaning both on the client and

00:38:41,010 --> 00:38:46,530
the server potentially and so project

00:38:45,240 --> 00:38:48,390
fluent goes in this area and this is

00:38:46,530 --> 00:38:51,300
sort of a frequently requested thing for

00:38:48,390 --> 00:38:53,880
echo 402 so it's something that I'm kind

00:38:51,300 --> 00:38:57,780
of wondering what whether you have

00:38:53,880 --> 00:39:01,290
thoughts on these things also just to

00:38:57,780 --> 00:39:05,040
say one thing about the compatibility on

00:39:01,290 --> 00:39:08,610
browsers is that really Firefox and

00:39:05,040 --> 00:39:10,530
Chrome and Safari are like up-to-date

00:39:08,610 --> 00:39:13,620
and have been really implementing Intel

00:39:10,530 --> 00:39:16,620
as we've been developing it and Ekrem

00:39:13,620 --> 00:39:18,960
afford to but Microsoft is far behind

00:39:16,620 --> 00:39:20,490
but as we know they're they're also

00:39:18,960 --> 00:39:23,310
switching out their JavaScript engine to

00:39:20,490 --> 00:39:26,790
the eight so going forward like soon

00:39:23,310 --> 00:39:29,280
enough we'll have Intel and all the and

00:39:26,790 --> 00:39:30,900
all the browsers well if you're

00:39:29,280 --> 00:39:32,880
interested in working on JavaScript

00:39:30,900 --> 00:39:36,420
engines there's still a lot of exciting

00:39:32,880 --> 00:39:42,810
work to do like on the Firefox and like

00:39:36,420 --> 00:39:44,400
some of them yeah Safari I'm not aware I

00:39:42,810 --> 00:39:46,950
guess Safari is not really working on

00:39:44,400 --> 00:39:48,720
new but features but they've come to the

00:39:46,950 --> 00:39:51,360
meetings they're all exist and so the

00:39:48,720 --> 00:39:53,970
great thing is that we have like buy-in

00:39:51,360 --> 00:39:56,310
from all three browsers about this and

00:39:53,970 --> 00:39:57,990
the person from Safari actually said

00:39:56,310 --> 00:40:00,780
that he'd be up for mentoring somebody

00:39:57,990 --> 00:40:01,920
wants to come in and implement this so

00:40:00,780 --> 00:40:04,380
if you're interested in getting involved

00:40:01,920 --> 00:40:06,300
in C++ coding and if you're interested

00:40:04,380 --> 00:40:08,380
in improving with compatibility of these

00:40:06,300 --> 00:40:11,829
things this could be great

00:40:08,380 --> 00:40:18,009
please I like how you said all three

00:40:11,829 --> 00:40:24,630
browsers it's very sad for all three

00:40:18,009 --> 00:40:24,630
browsers you know that's the world

00:40:24,779 --> 00:40:30,970
chromium truth note itself they're not

00:40:29,559 --> 00:40:33,089
quite complete I mean there are still a

00:40:30,970 --> 00:40:36,430
couple bugs still out there

00:40:33,089 --> 00:40:40,239
the reason why I have an Intel or world

00:40:36,430 --> 00:40:42,369
rules polyfill but still is because the

00:40:40,239 --> 00:40:44,979
minimum fraction digits is still not

00:40:42,369 --> 00:40:50,710
working practically anyone you have any

00:40:44,979 --> 00:40:54,369
she open for that yes there is so I'd

00:40:50,710 --> 00:40:56,880
recommend writing an email to Frank dang

00:40:54,369 --> 00:41:01,390
who's working on implementing this

00:40:56,880 --> 00:41:06,220
hidden really he's not commented on that

00:41:01,390 --> 00:41:11,069
in February something oh yeah 886 it's

00:41:06,220 --> 00:41:11,069
on the v8 well I'll take a look at that

00:41:11,190 --> 00:41:59,920
but it's like nearly complete what do

00:41:58,329 --> 00:42:02,489
you say the bug number was eight eight

00:41:59,920 --> 00:42:02,489
six six

00:42:05,950 --> 00:42:14,410
oh yeah that this is quite detailing

00:42:11,680 --> 00:42:19,000
regarding message formatting which he

00:42:14,410 --> 00:42:21,490
mentioned earlier I don't think there's

00:42:19,000 --> 00:42:27,220
a reason to do anything quite right away

00:42:21,490 --> 00:42:30,520
because fluid is the JavaScript

00:42:27,220 --> 00:42:33,549
implementation of that is still in zero

00:42:30,520 --> 00:42:36,010
point X and there's a like active

00:42:33,549 --> 00:42:40,329
discussion about the the API for that

00:42:36,010 --> 00:42:43,299
and it's the current API will change and

00:42:40,329 --> 00:42:45,190
break and it's just there's a discussion

00:42:43,299 --> 00:42:51,430
we're going to break it down this way or

00:42:45,190 --> 00:42:55,359
that way so it's not stable by any means

00:42:51,430 --> 00:43:13,299
yet okay oh it looks like they're

00:42:55,359 --> 00:43:16,119
they're making good progress on tissue I

00:43:13,299 --> 00:43:18,819
mean that when did the rules infraction

00:43:16,119 --> 00:43:20,829
ditches I think the only thing that the

00:43:18,819 --> 00:43:22,930
now fluent for example is instructing

00:43:20,829 --> 00:43:24,970
use the angel pool rules

00:43:22,930 --> 00:43:28,420
polyfill in order to get that one

00:43:24,970 --> 00:43:29,859
working everything else from until at

00:43:28,420 --> 00:43:42,099
least they're not saying that anything

00:43:29,859 --> 00:43:45,839
else in topology okay so I think it'll

00:43:42,099 --> 00:43:48,490
be interested moving along

00:43:45,839 --> 00:44:13,869
are there other proposals that you would

00:43:48,490 --> 00:44:17,319
like to so there's like until segment

00:44:13,869 --> 00:44:19,740
air is undergoing a bunch of potential

00:44:17,319 --> 00:44:19,740
change

00:44:22,890 --> 00:44:28,420
yeah gonna describe it well you should

00:44:26,230 --> 00:44:31,630
actually okay until display names is

00:44:28,420 --> 00:44:34,089
like a way for you to get certain big

00:44:31,630 --> 00:44:35,560
things like the names of all the

00:44:34,089 --> 00:44:37,359
countries in the world in all the

00:44:35,560 --> 00:44:40,089
different languages which is useful if

00:44:37,359 --> 00:44:43,359
you build a like a region picker well

00:44:40,089 --> 00:44:45,160
yeah they you you might have heard like

00:44:43,359 --> 00:44:46,330
oh the Unicode people want you to say

00:44:45,160 --> 00:44:48,010
words like code white

00:44:46,330 --> 00:44:49,210
it turns out there's all sorts of

00:44:48,010 --> 00:44:50,980
different words that in a

00:44:49,210 --> 00:44:56,260
nationalization world you're supposed to

00:44:50,980 --> 00:45:02,920
use like region rappin I wasn't gonna

00:44:56,260 --> 00:45:04,210
say anything but yeah you guys you could

00:45:02,920 --> 00:45:07,510
probably walk us through a lot of these

00:45:04,210 --> 00:45:09,460
yeah that's one of those well not mean

00:45:07,510 --> 00:45:12,580
Antarctica is not a country you know I

00:45:09,460 --> 00:45:16,800
mean it's you can take a it doesn't have

00:45:12,580 --> 00:45:16,800
to get political to to describe that

00:45:18,780 --> 00:45:24,700
right and then like what what is a

00:45:21,520 --> 00:45:27,250
language wait I guess people are okay

00:45:24,700 --> 00:45:28,060
using the word language but language is

00:45:27,250 --> 00:45:29,890
okay yeah

00:45:28,060 --> 00:45:36,670
and locale is supposed to be a place

00:45:29,890 --> 00:45:39,250
right anyway go yeah it also includes

00:45:36,670 --> 00:45:42,490
like names includes name is for a bunch

00:45:39,250 --> 00:45:44,140
of these different things and so that

00:45:42,490 --> 00:45:47,830
should help well on the way but you help

00:45:44,140 --> 00:45:49,300
reduce the binary size that has to be

00:45:47,830 --> 00:45:51,790
shipped over on the server

00:45:49,300 --> 00:45:53,260
I think it has the same function but it

00:45:51,790 --> 00:45:55,060
doesn't reduce the size of things to get

00:45:53,260 --> 00:45:57,070
shipped over but it reduces the amount

00:45:55,060 --> 00:46:00,130
of stuff that you have to did I do that

00:45:57,070 --> 00:46:02,380
you have to pull off of you know some

00:46:00,130 --> 00:46:04,420
NPM module and you can instead have a

00:46:02,380 --> 00:46:07,210
sort of higher level looking API for it

00:46:04,420 --> 00:46:10,470
and it allows you to externalize issues

00:46:07,210 --> 00:46:16,200
like the Czech Republic being check yet

00:46:10,470 --> 00:46:18,339
yeah did that happen yes this happened

00:46:16,200 --> 00:46:19,540
thing is they're they're always they're

00:46:18,339 --> 00:46:22,480
always things like this you know

00:46:19,540 --> 00:46:25,810
Swaziland is now Isla teeny and and such

00:46:22,480 --> 00:46:29,170
and but even besides changes just the

00:46:25,810 --> 00:46:30,910
the the load in in translation you know

00:46:29,170 --> 00:46:31,840
there's there's a lot of translated

00:46:30,910 --> 00:46:33,400
content

00:46:31,840 --> 00:46:35,370
you know my I work with our internal

00:46:33,400 --> 00:46:38,590
translation across the seas and tools

00:46:35,370 --> 00:46:42,100
and a lot of times people will have

00:46:38,590 --> 00:46:44,500
submit for translation you know a list

00:46:42,100 --> 00:46:47,020
of a list of regions a list of languages

00:46:44,500 --> 00:46:49,450
and if you don't have to translate the

00:46:47,020 --> 00:46:51,010
same stuff over and over you know you

00:46:49,450 --> 00:46:56,290
can spend your money and time on

00:46:51,010 --> 00:47:00,070
something else I mean there's a million

00:46:56,290 --> 00:47:02,800
application reasons for having display

00:47:00,070 --> 00:47:07,780
names really available you know through

00:47:02,800 --> 00:47:14,890
the but it does exacerbate the megabyte

00:47:07,780 --> 00:47:25,540
problems because the size of the browser

00:47:14,890 --> 00:47:29,530
so yeah yeah I expect though that that

00:47:25,540 --> 00:47:39,190
data is already there for for on the

00:47:29,530 --> 00:47:41,260
browser mnk pieces but think about the

00:47:39,190 --> 00:47:47,110
size of the download of the browser

00:47:41,260 --> 00:47:49,000
einar yes but some of the but the the I

00:47:47,110 --> 00:47:51,460
mean if the browser already shows an

00:47:49,000 --> 00:47:53,350
accept language pop-up that says enter

00:47:51,460 --> 00:47:56,440
the languages you want to translate then

00:47:53,350 --> 00:48:00,370
the browser already has a translated

00:47:56,440 --> 00:48:04,210
list of languages for example yes

00:48:00,370 --> 00:48:05,920
that's getting bigger now I think so I

00:48:04,210 --> 00:48:08,710
think this is something that we've been

00:48:05,920 --> 00:48:10,540
looking into in this group in it for

00:48:08,710 --> 00:48:12,310
both today I come up four or two things

00:48:10,540 --> 00:48:15,850
there's data that's already in the

00:48:12,310 --> 00:48:19,000
browser stuff like units use not in

00:48:15,850 --> 00:48:22,300
Chrome but that it's there in iOS so

00:48:19,000 --> 00:48:26,560
then it's kind of okay or moderately

00:48:22,300 --> 00:48:28,450
okay they ended up reducing the list of

00:48:26,560 --> 00:48:30,880
units that are supported so then the

00:48:28,450 --> 00:48:33,520
increment in binary size was less and

00:48:30,880 --> 00:48:35,290
that's you know working through the

00:48:33,520 --> 00:48:37,570
ization is there really kind of

00:48:35,290 --> 00:48:40,060
pragmatic people update their browser

00:48:37,570 --> 00:48:42,430
less if they have to download a bigger

00:48:40,060 --> 00:48:45,520
browser maybe I mean arguably of course

00:48:42,430 --> 00:48:48,640
all of this is shared not just big

00:48:45,520 --> 00:48:52,570
script engines but the whole ecosystem

00:48:48,640 --> 00:48:55,560
of everything running yeah on your

00:48:52,570 --> 00:48:58,180
system so it is arguable definitely

00:48:55,560 --> 00:49:00,790
getting that data and making it

00:48:58,180 --> 00:49:02,230
available ought to be on an even higher

00:49:00,790 --> 00:49:04,240
level effectually with the distributor

00:49:02,230 --> 00:49:05,860
distro that you use yeah arguably

00:49:04,240 --> 00:49:07,810
everybody should be updating their

00:49:05,860 --> 00:49:13,869
operating system frequently and that's

00:49:07,810 --> 00:49:15,340
it okay that doesn't that happens

00:49:13,869 --> 00:49:17,470
sometimes it doesn't happen other times

00:49:15,340 --> 00:49:18,960
chrome statically we've seen it's ICU

00:49:17,470 --> 00:49:24,040
and

00:49:18,960 --> 00:49:27,520
you can use some resources I'm I don't

00:49:24,040 --> 00:49:29,500
know all the all the details yeah it is

00:49:27,520 --> 00:49:31,119
an issue it is worth noticing issues

00:49:29,500 --> 00:49:34,090
doesn't it's not a it doesn't come for

00:49:31,119 --> 00:49:36,250
free yeah I'm curious because I'm new to

00:49:34,090 --> 00:49:38,830
the browser implementation side of

00:49:36,250 --> 00:49:42,910
things like what kind of footprint is

00:49:38,830 --> 00:49:46,030
adding these names you know incur and

00:49:42,910 --> 00:49:55,990
then like in comparison like how big of

00:49:46,030 --> 00:49:57,730
an increase is that about two numbers

00:49:55,990 --> 00:50:00,670
that we were talking about for this

00:49:57,730 --> 00:50:03,700
particular one for this ins old display

00:50:00,670 --> 00:50:05,800
names and there was one version where

00:50:03,700 --> 00:50:08,650
like the chrome binary would have been

00:50:05,800 --> 00:50:09,850
700 kilobytes larger yeah and then they

00:50:08,650 --> 00:50:11,230
had a bunch of different alternatives

00:50:09,850 --> 00:50:12,430
calculated out for like what if we

00:50:11,230 --> 00:50:15,280
looked at this stuff what if it looks

00:50:12,430 --> 00:50:16,810
too bad stuff you know I don't know what

00:50:15,280 --> 00:50:18,730
that in I don't know if that's what the

00:50:16,810 --> 00:50:20,590
question was you know it is yeah like

00:50:18,730 --> 00:50:23,380
what's the data size and I'm like in

00:50:20,590 --> 00:50:27,190
comparison to I don't know like in this

00:50:23,380 --> 00:50:32,470
in the standardization process like what

00:50:27,190 --> 00:50:35,830
I mean how much data is acceptable to

00:50:32,470 --> 00:50:37,770
increase with something like int L you

00:50:35,830 --> 00:50:40,630
know like what is there like a typical

00:50:37,770 --> 00:50:42,900
acceptable you know whatever anything

00:50:40,630 --> 00:50:48,970
right this is being discussed really

00:50:42,900 --> 00:50:51,040
it's so no I mean nobody notices and

00:50:48,970 --> 00:50:54,369
gets upset yeah it's usually like a

00:50:51,040 --> 00:50:56,320
different team that focuses on reducing

00:50:54,369 --> 00:50:59,400
the their binary size from the team

00:50:56,320 --> 00:50:59,400
that's trying to add the features

00:51:00,420 --> 00:51:05,890
complicated making process

00:51:03,730 --> 00:51:07,120
least that's how it seems at least our

00:51:05,890 --> 00:51:11,170
time people talk about it for Chrome and

00:51:07,120 --> 00:51:13,120
Firefox I have no idea how how a safari

00:51:11,170 --> 00:51:14,560
Inka structured I was gonna say I

00:51:13,120 --> 00:51:17,110
haven't got exact numbers but you

00:51:14,560 --> 00:51:19,030
constantly see discussions in the game

00:51:17,110 --> 00:51:26,230
platform tango nice to shave this bill

00:51:19,030 --> 00:51:28,870
motion moobus on the graph is sometimes

00:51:26,230 --> 00:51:31,090
like creeping upwards in chrome and then

00:51:28,870 --> 00:51:33,100
like putting this deliberate effort and

00:51:31,090 --> 00:51:35,350
fit it down and then it creeps upwards

00:51:33,100 --> 00:51:38,500
again because it's like writing any code

00:51:35,350 --> 00:51:41,590
it all increases the size right sure and

00:51:38,500 --> 00:51:43,480
I wonder if anyone has an idea of like a

00:51:41,590 --> 00:51:49,330
max size that they would like their

00:51:43,480 --> 00:51:51,160
browser to be to the extent that one

00:51:49,330 --> 00:51:52,810
does have such a size it doesn't seem to

00:51:51,160 --> 00:51:56,050
be making it through to our discussions

00:51:52,810 --> 00:51:59,530
and also you know where we're always

00:51:56,050 --> 00:52:03,910
trying to add more you know a colleague

00:51:59,530 --> 00:52:07,870
of mine is is going to visit the the

00:52:03,910 --> 00:52:10,960
Chickasaw a Chickasaw people and some

00:52:07,870 --> 00:52:13,200
other other groups language groups to

00:52:10,960 --> 00:52:19,510
try to bootstrap their language support

00:52:13,200 --> 00:52:21,370
of the Native American languages but but

00:52:19,510 --> 00:52:59,860
then but now you have new locales that

00:52:21,370 --> 00:53:02,400
are coming in basically so what's your

00:52:59,860 --> 00:53:02,400
application

00:53:12,079 --> 00:53:20,049
that might some of that logic or any of

00:53:15,439 --> 00:53:32,660
these initial here could you actually

00:53:20,049 --> 00:53:36,109
make bits of the ICU data yeah I had I

00:53:32,660 --> 00:53:38,059
had thought about this

00:53:36,109 --> 00:53:40,309
there's the shortness there's no

00:53:38,059 --> 00:53:42,380
mechanism for that now I thought about

00:53:40,309 --> 00:53:44,479
something like a callback handler or if

00:53:42,380 --> 00:53:46,910
you don't find data then callback to a

00:53:44,479 --> 00:53:58,519
user function and say let me go fetch it

00:53:46,910 --> 00:54:02,089
for you yeah we need a wrap-up because

00:53:58,519 --> 00:54:03,979
it's a three past the hour but I

00:54:02,089 --> 00:54:07,729
definitely have some action items here

00:54:03,979 --> 00:54:11,410
that I'd like to take for kind of I

00:54:07,729 --> 00:54:14,179
think it's more about making the

00:54:11,410 --> 00:54:16,160
contribution process for proposals and

00:54:14,179 --> 00:54:17,929
how to get involved less abstract to

00:54:16,160 --> 00:54:19,579
people who may want to contribute for

00:54:17,929 --> 00:54:20,989
the first time that sort of thing that's

00:54:19,579 --> 00:54:22,609
really important and we can do that

00:54:20,989 --> 00:54:23,900
through internationalisation but just

00:54:22,609 --> 00:54:27,229
having this conversation has been really

00:54:23,900 --> 00:54:29,239
really good to get visibility into it

00:54:27,229 --> 00:54:30,650
and I'm definitely learning a lot too so

00:54:29,239 --> 00:54:33,199
I'm really I'm really really thankful

00:54:30,650 --> 00:54:36,489
for you all to be here if it's cool I'd

00:54:33,199 --> 00:54:36,489
like to take a picture

00:54:53,120 --> 00:54:57,210
[Laughter]

00:55:14,220 --> 00:55:19,230
[Laughter]

00:55:30,710 --> 00:55:38,520
I'll put a link on that lazy load

00:55:33,000 --> 00:55:58,470
question I'll put a couple since we have

00:55:38,520 --> 00:56:00,120
to unload every language of French hey

00:55:58,470 --> 00:56:02,130
thank you for coming Stephen you're

00:56:00,120 --> 00:56:03,030
welcome hey I really I really really

00:56:02,130 --> 00:56:04,830
appreciate it

00:56:03,030 --> 00:56:05,910
Felix is already online I was said thank

00:56:04,830 --> 00:56:08,760
you but I really appreciate it for

00:56:05,910 --> 00:56:12,320
coming so early and thank you for always

00:56:08,760 --> 00:56:16,790
being up for doing rad stuff okay yeah

00:56:12,320 --> 00:56:16,790
hey we'll see you next time see you

00:56:27,960 --> 00:56:31,130
[Music]

00:56:41,019 --> 00:56:43,079

YouTube URL: https://www.youtube.com/watch?v=e5xaIRUMtjs


