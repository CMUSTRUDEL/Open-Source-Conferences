Title: Node.js Release Working Group
Publication date: 2019-06-03
Playlist: OpenJS Foundation Collaborator Summit, Berlin, May 2019
Description: 
	OpenJS Foundation Collaborator Summit, Berlin, 2019
Captions: 
	00:00:28,970 --> 00:00:38,879
the current researching kind of varies

00:00:33,149 --> 00:00:56,640
between one per week may take a little

00:00:38,879 --> 00:01:01,230
bit less we release mere moments trying

00:00:56,640 --> 00:01:04,890
to do the number of conflicts in Turkey

00:01:01,230 --> 00:01:08,369
which means that we assume as a fisheye

00:01:04,890 --> 00:01:10,680
lens we have a look at it and then we

00:01:08,369 --> 00:01:17,729
open the bank report Wizards and we're

00:01:10,680 --> 00:01:21,320
patch so we do and Pacific everything is

00:01:17,729 --> 00:01:24,479
not breaking change from the signature

00:01:21,320 --> 00:01:28,409
to then when the original care is

00:01:24,479 --> 00:01:29,759
they've on top and then being or even

00:01:28,409 --> 00:01:38,070
through while reviewing some of the

00:01:29,759 --> 00:01:41,159
repairs to ask as possible changes as

00:01:38,070 --> 00:01:45,780
long as we do that that's fun because um

00:01:41,159 --> 00:01:47,729
yeah I would actually say is more case

00:01:45,780 --> 00:01:50,130
where we care less about that than

00:01:47,729 --> 00:01:52,950
before because we do beg for it

00:01:50,130 --> 00:01:56,759
everything release team backwards mmm

00:01:52,950 --> 00:01:59,130
whoever did Kara or release team ever

00:01:56,759 --> 00:02:01,770
much like in this case you just have to

00:01:59,130 --> 00:02:04,350
make sure it's backwards from some

00:02:01,770 --> 00:02:06,030
carries we can directly say it's making

00:02:04,350 --> 00:02:08,550
sense because breaking changes

00:02:06,030 --> 00:02:11,340
helplessly everything it does is great

00:02:08,550 --> 00:02:14,130
but most PRS can normally do like okay

00:02:11,340 --> 00:02:15,870
you switch like this part

00:02:14,130 --> 00:02:19,440
and then the rest of the hold still

00:02:15,870 --> 00:02:23,940
same-same but I mean and the breaking

00:02:19,440 --> 00:02:27,180
changes calm and then you have less

00:02:23,940 --> 00:02:29,850
confidence because in the beginning when

00:02:27,180 --> 00:02:30,360
we do release find a major it's easy

00:02:29,850 --> 00:02:33,810
going

00:02:30,360 --> 00:02:36,000
looks like everything went cool the more

00:02:33,810 --> 00:02:38,760
release you do the more conflicts hit

00:02:36,000 --> 00:02:42,330
one of the rights to always prevent is

00:02:38,760 --> 00:03:03,510
blaming chairs out of order here another

00:02:42,330 --> 00:03:13,470
corner we know just maybe when we hit me

00:03:03,510 --> 00:03:15,480
legs we have amazing back requested so

00:03:13,470 --> 00:03:18,420
now we're attend events where we can

00:03:15,480 --> 00:03:24,150
pull in really changes people either ask

00:03:18,420 --> 00:03:28,710
for or likely request the branches like

00:03:24,150 --> 00:03:32,690
that's a really trying to do in that

00:03:28,710 --> 00:03:37,710
heat event all its birth you have that

00:03:32,690 --> 00:03:45,060
forever so yeah there's no way it's

00:03:37,710 --> 00:03:50,840
that's what we can do I'm going will

00:03:45,060 --> 00:03:50,840
become easier also for the maintenance

00:03:54,080 --> 00:04:02,750
so I'd assume open that's what

00:04:24,169 --> 00:04:27,169
previously

00:05:18,110 --> 00:05:55,740
yes and everything everything is

00:05:51,000 --> 00:06:24,419
configured something the question is is

00:05:55,740 --> 00:06:25,620
there a checklist that's that's one of

00:06:24,419 --> 00:06:28,409
the things that I'd like to do

00:06:25,620 --> 00:06:38,060
eventually is like on say I'm just a bit

00:06:28,409 --> 00:06:38,060
I was thinking

00:07:34,040 --> 00:07:46,800
create worse sometimes they change

00:07:42,930 --> 00:08:02,700
something in the now that so you

00:07:46,800 --> 00:08:07,020
actually like there's only one correct

00:08:02,700 --> 00:08:19,830
order which the commits can land that we

00:08:07,020 --> 00:08:21,510
do which this is even less confident

00:08:19,830 --> 00:08:22,920
because now we have like it almost

00:08:21,510 --> 00:08:31,140
always right

00:08:22,920 --> 00:08:35,370
well really increasing incrementing log

00:08:31,140 --> 00:08:39,210
of the PR numbers like can't you just go

00:08:35,370 --> 00:08:41,820
back or no no no we land in carries yeah

00:08:39,210 --> 00:08:44,099
here are number orders when was open but

00:08:41,820 --> 00:08:48,720
like some PR explained right away

00:08:44,099 --> 00:08:51,630
other's techniques years right but even

00:08:48,720 --> 00:08:56,030
if like anyone that takes weeks we the

00:08:51,630 --> 00:08:56,030
ones in the future still be no okay

00:09:12,560 --> 00:09:26,250
like Lenape are now you like

00:09:17,240 --> 00:09:30,180
turns out first PR so rafael is joining

00:09:26,250 --> 00:09:32,910
the zoom chat and I'm just gonna let him

00:09:30,180 --> 00:09:35,280
know that there's it's a pretty small

00:09:32,910 --> 00:09:37,890
group here there's only two people from

00:09:35,280 --> 00:09:41,580
the release working group that's F

00:09:37,890 --> 00:10:38,450
creates and Reuben rich water and then

00:09:41,580 --> 00:10:38,450
it's me Tierney while he and me know and

00:10:41,990 --> 00:10:45,920
what we are working on is

00:10:48,230 --> 00:10:51,289
[Music]

00:10:55,350 --> 00:11:00,669
[Music]

00:11:05,170 --> 00:11:09,309
you chose an example also just to

00:11:07,720 --> 00:11:17,739
clarify what you say when you landed me

00:11:09,309 --> 00:11:19,420
here here but major change majors come a

00:11:17,739 --> 00:11:20,649
little trouble hearing it in here but

00:11:19,420 --> 00:11:27,660
it's I'm just a little bit trouble is

00:11:20,649 --> 00:11:45,339
this this looks like it would might be

00:11:27,660 --> 00:11:47,559
the microphone so and this is actually

00:11:45,339 --> 00:11:49,329
it just means there is a conflict in

00:11:47,559 --> 00:11:51,730
some way in this period that the

00:11:49,329 --> 00:11:53,889
releaser cannot resolve on its own

00:11:51,730 --> 00:11:56,379
immediately because sometimes they're

00:11:53,889 --> 00:11:58,179
like tiny conflicts that I just we

00:11:56,379 --> 00:12:01,209
solved right away while ending the

00:11:58,179 --> 00:12:03,189
commits mmm like if it's obvious you

00:12:01,209 --> 00:12:06,160
know and then then you can do it and you

00:12:03,189 --> 00:12:07,869
run the test and everything passable but

00:12:06,160 --> 00:12:10,299
if it's not that way and it's

00:12:07,869 --> 00:12:12,759
conflicting and then you go into the PR

00:12:10,299 --> 00:12:15,329
and market as Beckford requested with

00:12:12,759 --> 00:12:19,779
the current release it you're preparing

00:12:15,329 --> 00:12:22,929
and then many old bank or it has to be

00:12:19,779 --> 00:12:26,199
open for it take ported to 11 they are

00:12:22,929 --> 00:12:28,419
back for two tubers makes that means it

00:12:26,199 --> 00:12:31,269
was requested and it is now back ported

00:12:28,419 --> 00:12:35,860
which is a bit redundant because we

00:12:31,269 --> 00:12:40,389
don't normally use it then we have don't

00:12:35,860 --> 00:12:43,779
land on version which means sometimes we

00:12:40,389 --> 00:12:47,199
say explicitly this should only be back

00:12:43,779 --> 00:12:49,329
ported until a specific version which

00:12:47,199 --> 00:12:52,539
could be important for allocated v8

00:12:49,329 --> 00:12:55,959
change and because I mean some change

00:12:52,539 --> 00:12:58,149
might be December minor but it could be

00:12:55,959 --> 00:12:59,919
like the slow down on old versions but

00:12:58,149 --> 00:13:02,410
the performance improvement on new

00:12:59,919 --> 00:13:05,109
versions so depending on the v8 version

00:13:02,410 --> 00:13:09,359
as an example yeah and then you reach a

00:13:05,109 --> 00:13:09,359
man plus that like can we

00:13:19,819 --> 00:13:40,410
all right you see it so that's the don't

00:13:37,259 --> 00:13:41,999
land and that's always during the

00:13:40,410 --> 00:13:44,429
lending process already normally

00:13:41,999 --> 00:13:47,730
sometimes someone might come also later

00:13:44,429 --> 00:13:50,970
on but that's super rare not only we

00:13:47,730 --> 00:13:54,929
just don't have it and then we have the

00:13:50,970 --> 00:13:57,769
version whatever version it is and we

00:13:54,929 --> 00:14:07,009
use it for open back court be ours

00:13:57,769 --> 00:14:07,009
mm-hmm this is not in a long knowingly

00:14:07,160 --> 00:14:12,929
which means that when you manually

00:14:10,259 --> 00:14:16,949
backward something this label would be

00:14:12,929 --> 00:14:19,879
attached to it okay you know often

00:14:16,949 --> 00:14:23,220
people couldn't tie to this well like

00:14:19,879 --> 00:14:27,449
brackets yes except in the title it's

00:14:23,220 --> 00:14:30,149
always good to dude and and like almost

00:14:27,449 --> 00:14:39,179
no collaborator knows how to use these

00:14:30,149 --> 00:14:41,249
labels it kind of sounds like y'all are

00:14:39,179 --> 00:14:48,989
really overworked and improving process

00:14:41,249 --> 00:14:51,449
is a nice to have yeah so yeah because

00:14:48,989 --> 00:14:55,649
for example one very typical mistake

00:14:51,449 --> 00:15:01,139
that people do is that they and let's

00:14:55,649 --> 00:15:03,869
say mmm they want to have a PR BEC

00:15:01,139 --> 00:15:05,730
imported on a specific release line then

00:15:03,869 --> 00:15:08,009
they actively at the back court

00:15:05,730 --> 00:15:11,140
requested label now that does exactly

00:15:08,009 --> 00:15:15,110
the opposite of what I actually want

00:15:11,140 --> 00:15:15,110
[Laughter]

00:15:16,970 --> 00:15:24,480
think renaming the label would be yeah

00:15:21,410 --> 00:15:26,160
yeah because all those we've discovered

00:15:24,480 --> 00:15:28,669
on this product naming labels is hard

00:15:26,160 --> 00:15:30,990
and I submit to you the offer ready

00:15:28,669 --> 00:15:33,250
exactly it was like multiple things but

00:15:30,990 --> 00:15:36,470
oh my god

00:15:33,250 --> 00:15:41,570
and it's still not really a lot of

00:15:36,470 --> 00:15:49,280
people use it no sorry didn't mean to

00:15:41,570 --> 00:15:51,620
get us off topic things today I'm not

00:15:49,280 --> 00:15:54,290
sure how will we socialized it you can

00:15:51,620 --> 00:15:56,540
search PRS and hit that court requested

00:15:54,290 --> 00:15:57,920
to tend or X and you can actually you

00:15:56,540 --> 00:16:01,280
could try and picking up one of those

00:15:57,920 --> 00:16:03,140
PRS and then basically open the diff and

00:16:01,280 --> 00:16:04,040
try to apply that if to the Tendo ex

00:16:03,140 --> 00:16:05,720
released line

00:16:04,040 --> 00:16:07,340
so normally sometimes it's as simple as

00:16:05,720 --> 00:16:09,320
a few variables if that the names

00:16:07,340 --> 00:16:13,400
changed you just need to reflect that

00:16:09,320 --> 00:16:17,330
change back on your branch it typically

00:16:13,400 --> 00:16:18,650
the owner of the original PL will do the

00:16:17,330 --> 00:16:20,450
backcourt for it because they're the

00:16:18,650 --> 00:16:21,800
most familiar but it's not everyone

00:16:20,450 --> 00:16:25,210
keeps up with it and there's something

00:16:21,800 --> 00:16:29,780
around student years so would

00:16:25,210 --> 00:16:32,360
backporting a forgotten unloved PR be a

00:16:29,780 --> 00:16:34,040
good first or second contribution for

00:16:32,360 --> 00:16:38,990
someone because my my feeling has always

00:16:34,040 --> 00:16:41,090
been back ports tend to require

00:16:38,990 --> 00:16:44,120
following a bunch more instructions

00:16:41,090 --> 00:16:46,370
about what what branch to open it

00:16:44,120 --> 00:16:48,590
against and then you know how to resolve

00:16:46,370 --> 00:16:50,510
the the end of the conflict that

00:16:48,590 --> 00:16:53,270
resulted back port being requested in

00:16:50,510 --> 00:16:55,220
the first place but I also kind of

00:16:53,270 --> 00:16:57,020
wonder if having a bunch of instructions

00:16:55,220 --> 00:16:59,210
to follow is actually good for first

00:16:57,020 --> 00:17:00,770
time person they're like that's much

00:16:59,210 --> 00:17:12,830
better than just being left to their own

00:17:00,770 --> 00:17:16,250
devices because you've got the code

00:17:12,830 --> 00:17:17,960
there so you you don't necessarily need

00:17:16,250 --> 00:17:20,240
for a trend feature you just need to

00:17:17,960 --> 00:17:21,860
know like out how to apply that exact

00:17:20,240 --> 00:17:23,510
therefore that code change to the

00:17:21,860 --> 00:17:26,090
unreleased line which can be quite a

00:17:23,510 --> 00:17:30,910
nice intuitive way of starting to

00:17:26,090 --> 00:17:36,640
contribute to cool okay um I have some

00:17:30,910 --> 00:17:39,680
on that okay um because it's actually

00:17:36,640 --> 00:17:43,220
often challenging to know like

00:17:39,680 --> 00:17:45,770
especially let's take ten to alpha when

00:17:43,220 --> 00:17:50,630
you bet port some PRS or like you

00:17:45,770 --> 00:17:53,210
14050 2:8 this is so immense that and

00:17:50,630 --> 00:17:57,110
then you have like often the worst

00:17:53,210 --> 00:17:59,870
backward carriers are C++ code so people

00:17:57,110 --> 00:18:03,020
have to be very knowledgeable about the

00:17:59,870 --> 00:18:05,660
actual code that was changed and not

00:18:03,020 --> 00:18:08,570
only about the change itself but also

00:18:05,660 --> 00:18:10,130
about former implementation and about

00:18:08,570 --> 00:18:12,110
whatever change is causing a counselor

00:18:10,130 --> 00:18:14,330
yellow bleah as well and then and to

00:18:12,110 --> 00:18:15,890
know how to resolve that conflict and

00:18:14,330 --> 00:18:18,140
not only the conflict because sometimes

00:18:15,890 --> 00:18:21,320
changed my Glenn but then a code change

00:18:18,140 --> 00:18:24,140
in another place you change the logic

00:18:21,320 --> 00:18:26,810
that you have to identify why it is

00:18:24,140 --> 00:18:28,400
breaking you had to run yeah so this is

00:18:26,810 --> 00:18:30,980
actually quite challenging so it's

00:18:28,400 --> 00:18:32,780
actually for the request yeah for the

00:18:30,980 --> 00:18:34,190
ones I've been sitting there like there

00:18:32,780 --> 00:18:36,500
are certainly back ports where it's just

00:18:34,190 --> 00:18:38,060
like oh it's just a white space diff

00:18:36,500 --> 00:18:40,730
that needs to be sorted out you know

00:18:38,060 --> 00:18:48,830
there are easy ones for those those tend

00:18:40,730 --> 00:18:50,600
to just get done sometimes when you're

00:18:48,830 --> 00:18:53,630
you're up late preparing a release

00:18:50,600 --> 00:18:55,630
though 200 commit sin and you can see

00:18:53,630 --> 00:18:58,520
like a load of white space changes or

00:18:55,630 --> 00:19:00,110
lots of written conflicts I'll just have

00:18:58,520 --> 00:19:02,300
to back ported labor long because I

00:19:00,110 --> 00:19:04,850
think I cannot stay up another half now

00:19:02,300 --> 00:19:07,220
just to get this ended when I've got a

00:19:04,850 --> 00:19:08,990
hundred more but then you've got the

00:19:07,220 --> 00:19:12,200
issue where I'm now waiting for that

00:19:08,990 --> 00:19:14,960
commit to be back ported or the order

00:19:12,200 --> 00:19:16,790
goes like it's a compromise I'm either

00:19:14,960 --> 00:19:19,460
sacrificing the order in which it lands

00:19:16,790 --> 00:19:23,780
or I can't land any more commits and

00:19:19,460 --> 00:19:26,390
when we're only doing one minor per

00:19:23,780 --> 00:19:34,940
quarter for an Audi s release line yeah

00:19:26,390 --> 00:19:37,270
we we can't wait for a guess it is going

00:19:34,940 --> 00:19:40,100
to become easier when we have the

00:19:37,270 --> 00:19:40,850
automation process and then is this

00:19:40,100 --> 00:19:47,090
thing work done

00:19:40,850 --> 00:19:49,310
no okay and I mean I I can probably do

00:19:47,090 --> 00:19:50,840
either automation or I mean this is

00:19:49,310 --> 00:19:52,910
something I've one do for a while I can

00:19:50,840 --> 00:19:56,120
do automation or releases so do you

00:19:52,910 --> 00:19:58,340
choose for example was and like we meet

00:19:56,120 --> 00:20:00,050
asbestos multiple times but time is so

00:19:58,340 --> 00:20:01,940
limited for all these

00:20:00,050 --> 00:20:06,440
so what you will also work with a lot of

00:20:01,940 --> 00:20:08,660
station yeah and and like Michael and it

00:20:06,440 --> 00:20:13,370
is doing a lot of work there and they

00:20:08,660 --> 00:20:15,380
shed Lao and me and the thing is with

00:20:13,370 --> 00:20:17,990
all the releases you have to run in CJ

00:20:15,380 --> 00:20:20,930
Martin yeah and then there is a lot of

00:20:17,990 --> 00:20:22,340
flakes in there and a lot of PRS that

00:20:20,930 --> 00:20:25,130
you have to update you have to resolve

00:20:22,340 --> 00:20:26,720
the conflicts my modules breaking when

00:20:25,130 --> 00:20:30,890
you have to update the list you have to

00:20:26,720 --> 00:20:36,590
up to the code yeah it's a lot triage

00:20:30,890 --> 00:20:38,510
and Simmons a big time six yeah so it's

00:20:36,590 --> 00:20:40,940
just very very time-consuming and we

00:20:38,510 --> 00:20:43,730
needed and to release more versions so

00:20:40,940 --> 00:20:46,250
the time was invested into releasing new

00:20:43,730 --> 00:20:48,860
versions instead of automated music yeah

00:20:46,250 --> 00:20:51,230
but if you miss something about during

00:20:48,860 --> 00:20:54,920
the release you know right away or it

00:20:51,230 --> 00:20:58,400
has been time that you lived and it they

00:20:54,920 --> 00:21:01,820
passed the new Liza mistake and then you

00:20:58,400 --> 00:21:04,790
have you have to be Simon version okay

00:21:01,820 --> 00:21:07,130
and then does that happen very often so

00:21:04,790 --> 00:21:09,830
I just did recently but it was like I

00:21:07,130 --> 00:21:11,540
mean that's happening it's the exception

00:21:09,830 --> 00:21:13,130
not the rule but it certainly happens

00:21:11,540 --> 00:21:14,780
there is really something on a Tuesday

00:21:13,130 --> 00:21:19,690
and then we realized oh my gosh we

00:21:14,780 --> 00:21:22,010
should not really something very strong

00:21:19,690 --> 00:21:26,600
there are very different opinions of the

00:21:22,010 --> 00:21:28,910
days so but the main problem about this

00:21:26,600 --> 00:21:33,350
is all comes down to when the individual

00:21:28,910 --> 00:21:35,150
person s yeah I think that should

00:21:33,350 --> 00:21:37,010
override all the concerns about oh we

00:21:35,150 --> 00:21:39,670
don't want to do release on from yes

00:21:37,010 --> 00:21:41,300
especially especially and and

00:21:39,670 --> 00:21:42,980
counter-intuitively perhaps that's

00:21:41,300 --> 00:21:45,470
especially true with security releases

00:21:42,980 --> 00:21:47,570
we we want to get them out when we can

00:21:45,470 --> 00:21:49,880
get them out and yeah you know like

00:21:47,570 --> 00:21:51,590
people cuz like we we we don't surprise

00:21:49,880 --> 00:21:53,090
people with them we tell you know you

00:21:51,590 --> 00:21:54,680
know we post a week in advance we're

00:21:53,090 --> 00:21:56,630
gonna do a security you were a new

00:21:54,680 --> 00:21:58,370
security release on some on or around

00:21:56,630 --> 00:22:02,300
such-and-such a day at such-and-such a

00:21:58,370 --> 00:22:03,770
time and you know sorry if it's on a

00:22:02,300 --> 00:22:05,780
Friday and you think they shouldn't be

00:22:03,770 --> 00:22:09,670
done on Fridays matter like you know

00:22:05,780 --> 00:22:09,670
we're we're telling you in advance and

00:22:10,150 --> 00:22:13,140
then of course there's Sam there Sam's

00:22:12,530 --> 00:22:15,360
proposal

00:22:13,140 --> 00:22:17,130
actually like have a regular cadence for

00:22:15,360 --> 00:22:18,990
security release is a very very good

00:22:17,130 --> 00:22:21,600
idea because the release team can set

00:22:18,990 --> 00:22:22,920
aside time and the users can set aside

00:22:21,600 --> 00:22:24,810
time and it'll be like Patch Tuesday

00:22:22,920 --> 00:22:27,090
everybody will know when it's coming a

00:22:24,810 --> 00:22:28,890
long long long way in advance so I guess

00:22:27,090 --> 00:22:32,430
the question I have is like I would love

00:22:28,890 --> 00:22:36,720
to do both but there's one automation

00:22:32,430 --> 00:22:38,670
and releases okay first so so you put in

00:22:36,720 --> 00:22:45,170
the cart way for the horse you're trying

00:22:38,670 --> 00:22:45,170
to figure out which one to do right yeah

00:22:49,910 --> 00:22:55,520
yeah and then figure out what you're

00:22:52,710 --> 00:22:57,270
going to get like game releases or yeah

00:22:55,520 --> 00:22:58,590
yeah you're not you're not gonna be able

00:22:57,270 --> 00:23:06,720
to automate without actually doing yeah

00:22:58,590 --> 00:23:25,860
we're probably be my yes can do the

00:23:06,720 --> 00:23:27,810
releases reason and like I also like

00:23:25,860 --> 00:23:31,650
just recently I was angry about myself

00:23:27,810 --> 00:23:37,130
when did a small mistake in and the

00:23:31,650 --> 00:23:40,050
multiple changes was just early on and

00:23:37,130 --> 00:23:43,140
well the notable changes is missing a

00:23:40,050 --> 00:23:46,230
name from it well it because it changed

00:23:43,140 --> 00:23:53,880
in release notes in a memo and I copied

00:23:46,230 --> 00:23:56,610
something wrong yeah and because of that

00:23:53,880 --> 00:24:03,060
mistakes happen I guess I'm the only one

00:23:56,610 --> 00:24:05,790
who noticed but so as far as process

00:24:03,060 --> 00:24:09,960
goes you said that miles has been

00:24:05,790 --> 00:24:13,290
onboarding you yeah and so the way you

00:24:09,960 --> 00:24:14,190
envisioned helping newer people get

00:24:13,290 --> 00:24:15,960
familiar with it

00:24:14,190 --> 00:24:18,780
did you mean that they would pay you

00:24:15,960 --> 00:24:24,930
back on the existing process or you were

00:24:18,780 --> 00:24:26,210
going to start your own meetings to any

00:24:24,930 --> 00:24:28,700
of us kid and

00:24:26,210 --> 00:24:32,179
what I've started doing is scheduling

00:24:28,700 --> 00:24:34,009
time at work when I'm allocated to work

00:24:32,179 --> 00:24:36,139
on backporting and things yeah and I

00:24:34,009 --> 00:24:37,789
think Shelley does look similar amongst

00:24:36,139 --> 00:24:39,679
us and then we went for a phaser

00:24:37,789 --> 00:24:41,419
stifling resume whenever we were doing

00:24:39,679 --> 00:24:44,119
it yeah people were talking and just

00:24:41,419 --> 00:24:47,029
shouting what we're doing talk free okay

00:24:44,119 --> 00:24:51,470
people have time right cool cool

00:24:47,029 --> 00:24:54,549
I hope this problem is some early

00:24:51,470 --> 00:24:58,369
position what is the motivation behind

00:24:54,549 --> 00:25:00,409
back putting everything in the upper

00:24:58,369 --> 00:25:02,899
branches to the healthiest branches

00:25:00,409 --> 00:25:05,590
ideally we should be looking at only the

00:25:02,899 --> 00:25:09,950
stable ones or the ones which are

00:25:05,590 --> 00:25:12,980
actually required by users yeah I think

00:25:09,950 --> 00:25:14,539
it's an complex cutting forwards so if

00:25:12,980 --> 00:25:16,220
you back for everything you're less

00:25:14,539 --> 00:25:19,700
likely to get conflicts when something

00:25:16,220 --> 00:25:22,279
that comes in yeah but then that works

00:25:19,700 --> 00:25:24,519
against the ideas philosophy for example

00:25:22,279 --> 00:25:28,070
in the the bleeding edge we see

00:25:24,519 --> 00:25:30,350
something breaks quite often we see that

00:25:28,070 --> 00:25:33,289
and we are actually inheriting all those

00:25:30,350 --> 00:25:36,259
breakages into the areas we do have time

00:25:33,289 --> 00:25:38,450
frames so your any special things back

00:25:36,259 --> 00:25:41,629
once it's been in current like X number

00:25:38,450 --> 00:25:43,369
of weeks yeah and and there are some

00:25:41,629 --> 00:25:45,860
it's kind of like a release a

00:25:43,369 --> 00:25:47,119
case-by-case basis there are some PRS

00:25:45,860 --> 00:25:49,190
and eight miles and myself definitely

00:25:47,119 --> 00:25:51,529
with that and we've seen people have

00:25:49,190 --> 00:25:53,450
posted issues on it and we haven't

00:25:51,529 --> 00:25:54,980
pulled that back so it's not like a

00:25:53,450 --> 00:25:57,830
black and white absolutely everything

00:25:54,980 --> 00:26:01,519
gets pulled back there is some cherry

00:25:57,830 --> 00:26:04,789
picking of which - should go in yeah

00:26:01,519 --> 00:26:06,710
it's not clear is I think our

00:26:04,789 --> 00:26:10,999
documentation so it's based on a best

00:26:06,710 --> 00:26:13,879
case we pull back or we can yeah so is

00:26:10,999 --> 00:26:19,549
it possible to classify the features

00:26:13,879 --> 00:26:23,779
which are landing at in the master in a

00:26:19,549 --> 00:26:26,299
way that these changes and the family of

00:26:23,779 --> 00:26:29,509
changes what is happening over there is

00:26:26,299 --> 00:26:32,809
potentially backward porting graduate so

00:26:29,509 --> 00:26:35,720
that you can actually start back but

00:26:32,809 --> 00:26:38,149
yeah I prefer that way myself if it was

00:26:35,720 --> 00:26:39,710
when you open this I was an author

00:26:38,149 --> 00:26:42,810
you're like should this

00:26:39,710 --> 00:26:45,180
10:8 and if you added labels at that

00:26:42,810 --> 00:26:47,480
point it would be easier for us because

00:26:45,180 --> 00:26:50,910
we would know what needs to come back

00:26:47,480 --> 00:26:54,090
that way you're reducing your work and

00:26:50,910 --> 00:26:56,550
Lord and start back coating as soon as

00:26:54,090 --> 00:27:01,200
possible so that you don't face the

00:26:56,550 --> 00:27:04,140
problem of complexities and done in the

00:27:01,200 --> 00:27:06,960
other way around so normally we say by

00:27:04,140 --> 00:27:09,920
default every every minute and we'll be

00:27:06,960 --> 00:27:12,870
back for it but if you if anyone

00:27:09,920 --> 00:27:16,830
expresses concerns about it during in

00:27:12,870 --> 00:27:19,680
the PR or even later they add the don't

00:27:16,830 --> 00:27:22,520
land on version really slap the - it

00:27:19,680 --> 00:27:25,770
creates wrong land and that also

00:27:22,520 --> 00:27:28,890
automatically implicitly implies that

00:27:25,770 --> 00:27:31,700
all conversions below that one and

00:27:28,890 --> 00:27:36,060
should also not be taken into account

00:27:31,700 --> 00:27:38,550
mmm normally we add I every explicitly

00:27:36,060 --> 00:27:41,120
but it is actually from the release team

00:27:38,550 --> 00:27:46,590
done implicitly for all versions below

00:27:41,120 --> 00:27:51,180
hmm and so we have something like that

00:27:46,590 --> 00:27:54,390
we also have the base for LTS which

00:27:51,180 --> 00:27:57,840
means like nth moment as the same thing

00:27:54,390 --> 00:28:00,480
then there is a at least I think two

00:27:57,840 --> 00:28:03,560
weeks time frame you think it yeah two

00:28:00,480 --> 00:28:06,660
or three yeah and and the PR has to be

00:28:03,560 --> 00:28:10,590
released already on a different release

00:28:06,660 --> 00:28:15,960
I'm on the current one before it may be

00:28:10,590 --> 00:28:19,860
big parted at all - I want the LTS ones

00:28:15,960 --> 00:28:22,410
and I'm I don't know but it was there

00:28:19,860 --> 00:28:24,240
any in like did he have any complains or

00:28:22,410 --> 00:28:30,000
concerns because quietly

00:28:24,240 --> 00:28:32,040
I mean aware that yeah there wasn't any

00:28:30,000 --> 00:28:35,670
complaint as such but the way I look at

00:28:32,040 --> 00:28:39,450
it is LDS by default should not change

00:28:35,670 --> 00:28:42,120
at all it should focus only on field

00:28:39,450 --> 00:28:44,940
reported issues and the issue is

00:28:42,120 --> 00:28:47,160
resolved in the latest branches latest

00:28:44,940 --> 00:28:52,070
releases to put back for it because it's

00:28:47,160 --> 00:28:52,070
already fixed and has some amount of

00:28:53,330 --> 00:28:57,690
test cases that's wrong on that and

00:28:55,860 --> 00:29:01,200
proven to be stable then you can

00:28:57,690 --> 00:29:03,870
graduate to the LDS yeah I was kind of

00:29:01,200 --> 00:29:07,770
speaking to some other similar saying

00:29:03,870 --> 00:29:10,830
why do we put minus in LTS release lines

00:29:07,770 --> 00:29:15,750
for like nine to ten months because if

00:29:10,830 --> 00:29:17,970
you didn't and people would happen

00:29:15,750 --> 00:29:20,010
incentive to me back to the latest LTS

00:29:17,970 --> 00:29:22,500
you use the new features that would be

00:29:20,010 --> 00:29:24,060
less work for us because we'd only have

00:29:22,500 --> 00:29:27,390
to have that cool yeah

00:29:24,060 --> 00:29:29,610
fixes oh I think we would still backup

00:29:27,390 --> 00:29:31,470
features if people raise cases for them

00:29:29,610 --> 00:29:34,380
that those features would obviously

00:29:31,470 --> 00:29:37,230
conflict at all yeah I don't have the

00:29:34,380 --> 00:29:41,160
numbers but I see issues coming from the

00:29:37,230 --> 00:29:43,950
field which are from the healthiest so

00:29:41,160 --> 00:29:46,590
if you actually look at in a systematic

00:29:43,950 --> 00:29:49,080
manner we can see that some of these

00:29:46,590 --> 00:29:53,120
issues are coming from backwater issues

00:29:49,080 --> 00:29:56,810
backwater peers yeah

00:29:53,120 --> 00:29:59,700
for example something which works on

00:29:56,810 --> 00:30:02,100
10.15 bricks in ten or fifteen sixteen

00:29:59,700 --> 00:30:06,060
so definitely it come from back both

00:30:02,100 --> 00:30:09,570
yeah yeah it's something this could

00:30:06,060 --> 00:30:12,300
happen with a fix as well it could

00:30:09,570 --> 00:30:14,310
happen with the fix as well but yeah

00:30:12,300 --> 00:30:18,330
that's a classical regression but

00:30:14,310 --> 00:30:20,550
whereas in this case it was a feature

00:30:18,330 --> 00:30:27,630
which was not intended to touch this

00:30:20,550 --> 00:30:31,470
area of core at all and yeah it's all

00:30:27,630 --> 00:30:34,950
regression but you're not addressing the

00:30:31,470 --> 00:30:38,340
users pain point as you are not

00:30:34,950 --> 00:30:40,220
addressing a reporter issue you're you

00:30:38,340 --> 00:30:42,540
know entering a feature

00:30:40,220 --> 00:30:44,970
fixing some of those problem but

00:30:42,540 --> 00:30:51,660
eventually causing some other use case

00:30:44,970 --> 00:30:54,720
to break we don't I think he'll be a

00:30:51,660 --> 00:30:57,660
pretty dramatic change to say we let we

00:30:54,720 --> 00:31:00,300
kind of be saying it goes straight into

00:30:57,660 --> 00:31:03,540
maintenance after coroner come battle

00:31:00,300 --> 00:31:06,680
will only get like victors to regression

00:31:03,540 --> 00:31:08,930
bug fixes maybe I

00:31:06,680 --> 00:31:11,230
I maybe have some exception saying that

00:31:08,930 --> 00:31:14,450
some - good plan that we tell follows

00:31:11,230 --> 00:31:17,210
yeah and I guess it's an interesting

00:31:14,450 --> 00:31:19,460
point definitely and we could discuss it

00:31:17,210 --> 00:31:22,700
but then I guess it should be a bigger

00:31:19,460 --> 00:31:24,710
round because this sounds like a huge

00:31:22,700 --> 00:31:28,750
thing they've changed like like about

00:31:24,710 --> 00:31:32,300
every really fine we've had so far yeah

00:31:28,750 --> 00:31:34,340
I would not even want you beside this as

00:31:32,300 --> 00:31:36,110
the release group but more like all

00:31:34,340 --> 00:31:38,600
collaborators sure yeah

00:31:36,110 --> 00:31:39,890
but it's a clear trade-off between how

00:31:38,600 --> 00:31:41,240
much time you are spending on

00:31:39,890 --> 00:31:45,590
development effort

00:31:41,240 --> 00:31:47,390
I mean you reduce you you tend to do

00:31:45,590 --> 00:31:49,730
back put as much as possible to reduce

00:31:47,390 --> 00:31:53,480
the development effort but on the other

00:31:49,730 --> 00:31:57,380
side the side effect is going to be

00:31:53,480 --> 00:32:00,680
consumers the one element somehow when I

00:31:57,380 --> 00:32:04,640
mentioned this earlier was that and we

00:32:00,680 --> 00:32:06,440
want people to be able to try out the

00:32:04,640 --> 00:32:13,040
features on older released lines before

00:32:06,440 --> 00:32:15,530
they upgrade if we don't backcourt some

00:32:13,040 --> 00:32:16,910
of the minors by any additional features

00:32:15,530 --> 00:32:20,290
they wouldn't have that opportunity to

00:32:16,910 --> 00:32:24,310
test something out or they're unloading

00:32:20,290 --> 00:32:34,160
that's going to be more disruptive than

00:32:24,310 --> 00:32:46,720
us because right now everything happens

00:32:34,160 --> 00:32:46,720
in the master branch I cannot I mean I

00:32:50,560 --> 00:33:00,020
know I mean I mean I finally I find I

00:32:54,110 --> 00:33:03,200
certainly finally the argument that not

00:33:00,020 --> 00:33:06,200
you know that by by keeping the LTS

00:33:03,200 --> 00:33:11,660
branches as up to as in sync as possible

00:33:06,200 --> 00:33:13,850
with master it greatly simplifies you

00:33:11,660 --> 00:33:15,740
know the the maintenance of those

00:33:13,850 --> 00:33:18,590
branches in that you know new things

00:33:15,740 --> 00:33:20,419
land much more easily and there aren't

00:33:18,590 --> 00:33:23,869
big impossible

00:33:20,419 --> 00:33:26,470
plus plus heavy back ports that need to

00:33:23,869 --> 00:33:29,629
happen on the other hand I also

00:33:26,470 --> 00:33:31,549
understand the expectation you know the

00:33:29,629 --> 00:33:33,049
default expectation of an end-user is

00:33:31,549 --> 00:33:35,210
when they is when they have a branch

00:33:33,049 --> 00:33:38,059
that's marked LTS this is not a node

00:33:35,210 --> 00:33:40,549
thing this is you know what LTS is to

00:33:38,059 --> 00:33:42,379
most people is something that will you

00:33:40,549 --> 00:33:45,019
know that will be supported for a long

00:33:42,379 --> 00:33:46,970
time and on and and and I mean it's

00:33:45,019 --> 00:33:48,080
really all though okay so they support

00:33:46,970 --> 00:33:49,580
for a long time and undergo minimal

00:33:48,080 --> 00:33:50,899
changes and certainly no breaking

00:33:49,580 --> 00:33:53,570
changes although we're not talking about

00:33:50,899 --> 00:33:56,149
making breaking changes LTS but then on

00:33:53,570 --> 00:33:57,590
the other hand I do think that the main

00:33:56,149 --> 00:33:59,480
thing for most people is that it's

00:33:57,590 --> 00:34:00,619
supported for a long time that they that

00:33:59,480 --> 00:34:03,710
they're never they're not going to have

00:34:00,619 --> 00:34:06,460
to endure breaking changes but not not

00:34:03,710 --> 00:34:10,669
not necessarily that there won't be you

00:34:06,460 --> 00:34:12,889
know a lot of updates so I don't know so

00:34:10,669 --> 00:34:15,649
I mean I mean and ultimately this the

00:34:12,889 --> 00:34:18,139
release working groups decision but I do

00:34:15,649 --> 00:34:20,059
also completely appreciate Rubens

00:34:18,139 --> 00:34:21,470
comment that like this is not the type

00:34:20,059 --> 00:34:33,379
of decision I want just the release

00:34:21,470 --> 00:34:37,429
group we want to support not the new

00:34:33,379 --> 00:34:41,119
features that would be spotty for over

00:34:37,429 --> 00:34:43,760
yes that we care about not the release

00:34:41,119 --> 00:34:45,559
case like it's okay it's okay if there's

00:34:43,760 --> 00:34:45,980
a lot of little documentation updates in

00:34:45,559 --> 00:34:48,349
the world

00:34:45,980 --> 00:34:49,730
you pick a release and that's what you

00:34:48,349 --> 00:34:59,420
stick with for a while and then you

00:34:49,730 --> 00:35:01,549
eventually upgrade actually like mostly

00:34:59,420 --> 00:35:07,040
fests are not about the bad things but

00:35:01,549 --> 00:35:09,290
about also I mean I mean the whole okay

00:35:07,040 --> 00:35:11,290
I just on that is it from the same

00:35:09,290 --> 00:35:13,910
people where is it from

00:35:11,290 --> 00:35:15,589
so what I'm saying is is it from

00:35:13,910 --> 00:35:18,200
indifferent people asking like

00:35:15,589 --> 00:35:19,760
individual features or is it like one

00:35:18,200 --> 00:35:21,740
group asking for a new feature over and

00:35:19,760 --> 00:35:23,809
over and over it's different persons

00:35:21,740 --> 00:35:25,280
yeah so that that that doesn't exclude

00:35:23,809 --> 00:35:27,049
what I or what I I'm asserting because

00:35:25,280 --> 00:35:28,670
like if someone wants one feature they

00:35:27,049 --> 00:35:32,420
might get that an investing on effort

00:35:28,670 --> 00:35:33,790
and then they want upward yeah so if it

00:35:32,420 --> 00:35:35,530
was a same group coming

00:35:33,790 --> 00:35:36,640
multiple times I would say okay that's

00:35:35,530 --> 00:35:39,490
an indicator that they want to

00:35:36,640 --> 00:35:42,070
consistently update but if it's like

00:35:39,490 --> 00:35:43,600
people out randomly asking for for you

00:35:42,070 --> 00:35:45,130
know this feature of that feature that's

00:35:43,600 --> 00:35:48,760
not necessary signal that they're like

00:35:45,130 --> 00:35:50,500
try all trying to update fast and like I

00:35:48,760 --> 00:35:52,810
mean with my experience of both

00:35:50,500 --> 00:35:54,910
Microsoft and outsource like people

00:35:52,810 --> 00:35:57,120
stick they the conversion and that's

00:35:54,910 --> 00:36:00,820
where they stay

00:35:57,120 --> 00:36:02,230
so there's another there's another thing

00:36:00,820 --> 00:36:05,050
that we haven't actually touched upon

00:36:02,230 --> 00:36:07,510
here which is that there's not all

00:36:05,050 --> 00:36:09,160
there's actually like like we're talking

00:36:07,510 --> 00:36:11,170
about like current and then LTS but

00:36:09,160 --> 00:36:13,990
there's actually two flavors of LTS

00:36:11,170 --> 00:36:18,550
right like we like like for the first

00:36:13,990 --> 00:36:24,280
year LTS active and then there's LTS

00:36:18,550 --> 00:36:25,840
maintenance and sure sure I mean shame

00:36:24,280 --> 00:36:27,880
in the point the point the point is that

00:36:25,840 --> 00:36:31,090
whatever they're named you can make the

00:36:27,880 --> 00:36:32,530
case that the you know that yeah once

00:36:31,090 --> 00:36:34,570
it's in once it's in maintenance once

00:36:32,530 --> 00:36:37,090
it's in its final year we're not back

00:36:34,570 --> 00:36:39,370
we're not gonna bother like we're gonna

00:36:37,090 --> 00:36:41,950
release only when there's a security fix

00:36:39,370 --> 00:36:43,210
or a critical bug otherwise we're not

00:36:41,950 --> 00:36:47,620
touching it in fact that might already

00:36:43,210 --> 00:36:49,060
be what we did yes and so and and so

00:36:47,620 --> 00:36:51,580
that would be consistent with what

00:36:49,060 --> 00:36:55,030
you're suggesting but then the LTS

00:36:51,580 --> 00:36:56,710
active line could be something that is I

00:36:55,030 --> 00:36:59,530
mean yeah I mean it's right there the

00:36:56,710 --> 00:37:02,050
name right active it's not you know it's

00:36:59,530 --> 00:37:09,310
it's getting more than just critical

00:37:02,050 --> 00:37:10,870
fixes and security I think we we only do

00:37:09,310 --> 00:37:13,870
it for the current really it was career

00:37:10,870 --> 00:37:16,090
this is only current and LTS so so it's

00:37:13,870 --> 00:37:17,890
at most four branches because there's

00:37:16,090 --> 00:37:19,450
really there's a brief window where

00:37:17,890 --> 00:37:21,760
there's three L Tia where there's two

00:37:19,450 --> 00:37:23,830
maintenance LTS branch isn't one active

00:37:21,760 --> 00:37:38,980
LTS branch but usually it's it's see I

00:37:23,830 --> 00:37:41,590
usually it's three branches because well

00:37:38,980 --> 00:37:43,150
well I mean so there's a lot of inputs

00:37:41,590 --> 00:37:45,520
here right like there's what what do end

00:37:43,150 --> 00:37:47,380
users and customers expect there's what

00:37:45,520 --> 00:37:48,040
to the companies who support a lot of

00:37:47,380 --> 00:37:51,100
end users

00:37:48,040 --> 00:37:53,560
customers the IBM's the the near forms

00:37:51,100 --> 00:37:56,650
the note sources the Microsoft's what do

00:37:53,560 --> 00:37:58,810
they expect and then there's what can we

00:37:56,650 --> 00:38:02,680
do that doesn't make the volunteer

00:37:58,810 --> 00:38:04,600
releasers completely miserable yeah and

00:38:02,680 --> 00:38:06,670
then from these things and these things

00:38:04,600 --> 00:38:08,380
might be at odds so I think it survey is

00:38:06,670 --> 00:38:11,890
a good idea but I also think that like

00:38:08,380 --> 00:38:14,770
you know kind of like actually actively

00:38:11,890 --> 00:38:16,000
thinking about what if what if what we

00:38:14,770 --> 00:38:17,380
need and what our customers need are

00:38:16,000 --> 00:38:19,840
very different things

00:38:17,380 --> 00:38:21,790
how do we resolve that because yeah I

00:38:19,840 --> 00:38:24,070
suspect it's more likely that that's the

00:38:21,790 --> 00:38:25,450
case than that it's not the case well

00:38:24,070 --> 00:38:30,040
because that's the other thing like what

00:38:25,450 --> 00:38:32,980
I really hear is pretty much the space I

00:38:30,040 --> 00:38:35,410
know your is your suggestion but for me

00:38:32,980 --> 00:38:39,340
I think the main things that we could do

00:38:35,410 --> 00:38:41,500
as many as releasing workgroup is either

00:38:39,340 --> 00:38:43,270
we keep it at the moment that we beg

00:38:41,500 --> 00:38:45,850
hurt everything after a specific time

00:38:43,270 --> 00:38:49,060
and we try to actually get everything in

00:38:45,850 --> 00:38:50,920
there like really everything we were

00:38:49,060 --> 00:38:52,870
just talking about earlier we started to

00:38:50,920 --> 00:38:55,950
beg for things and were majors in the

00:38:52,870 --> 00:38:58,630
zember pathway so we add a specific

00:38:55,950 --> 00:39:00,880
commit on top of this ever maker that

00:38:58,630 --> 00:39:06,610
makes a summer patch to move to breaking

00:39:00,880 --> 00:39:10,570
changes um and on the other hand we

00:39:06,610 --> 00:39:13,150
could an extent the maintenance phase of

00:39:10,570 --> 00:39:15,160
the LTS release which is pretty much

00:39:13,150 --> 00:39:19,380
exactly that that we only beg poured

00:39:15,160 --> 00:39:23,770
some fixes like only patch commits and

00:39:19,380 --> 00:39:25,870
security visas and then it would mean

00:39:23,770 --> 00:39:27,940
okay we have to do less releases overall

00:39:25,870 --> 00:39:32,290
which was less commit so that's also

00:39:27,940 --> 00:39:35,160
okay and but I don't know

00:39:32,290 --> 00:39:37,510
so here's little banners you know I

00:39:35,160 --> 00:39:38,710
think I know what I would recommend if I

00:39:37,510 --> 00:39:42,010
were on the release working group which

00:39:38,710 --> 00:39:44,350
I not but I would I would say do what

00:39:42,010 --> 00:39:46,330
you do what you were planning on doing

00:39:44,350 --> 00:39:47,950
like you know backport everything I'm

00:39:46,330 --> 00:39:50,350
not back port but land everything in the

00:39:47,950 --> 00:39:55,390
same order you know - the breaking

00:39:50,350 --> 00:39:58,060
change parts and but like actively seek

00:39:55,390 --> 00:40:01,600
feedback like from people like people

00:39:58,060 --> 00:40:03,160
people might think they

00:40:01,600 --> 00:40:04,420
be bothered by something that when it

00:40:03,160 --> 00:40:05,710
actually happens they're not bothered

00:40:04,420 --> 00:40:07,150
and vice versa they might think they

00:40:05,710 --> 00:40:11,860
want something that when they actually

00:40:07,150 --> 00:40:13,450
get it it causes them problems I mean it

00:40:11,860 --> 00:40:15,310
might not be a bad idea to pursue

00:40:13,450 --> 00:40:17,110
something you know something you know

00:40:15,310 --> 00:40:20,340
message it let people know it's

00:40:17,110 --> 00:40:22,300
happening and so just see what happens

00:40:20,340 --> 00:40:24,010
it's not like it's not like you can't

00:40:22,300 --> 00:40:27,990
decide to just stop doing that

00:40:24,010 --> 00:40:27,990
you can absolutely any point just stop

00:40:30,090 --> 00:40:35,680
doing something though once it's already

00:40:32,620 --> 00:40:37,120
announced to people seems like there

00:40:35,680 --> 00:40:38,800
would be inertia and they would push

00:40:37,120 --> 00:40:41,320
back people don't like it when I'm try

00:40:38,800 --> 00:40:43,870
together don't like somebody being taken

00:40:41,320 --> 00:40:45,550
away but people have you taken away from

00:40:43,870 --> 00:40:51,280
this case is the release working group

00:40:45,550 --> 00:40:53,110
like you know I mean we should probably

00:40:51,280 --> 00:41:02,350
consult in one conversation go ahead and

00:40:53,110 --> 00:41:04,210
keep talking like people don't have

00:41:02,350 --> 00:41:07,030
signals for when a superior lease

00:41:04,210 --> 00:41:09,580
happens it's very not straightforward

00:41:07,030 --> 00:41:12,460
like a bunch of individuals tweeted and

00:41:09,580 --> 00:41:14,410
nodejs by retweeted by email now guess

00:41:12,460 --> 00:41:16,540
that that's the only thing so that comes

00:41:14,410 --> 00:41:20,470
down so different part because our

00:41:16,540 --> 00:41:22,390
communication with changes is not great

00:41:20,470 --> 00:41:29,400
like last week

00:41:22,390 --> 00:41:36,340
I've been on a conference and a clock

00:41:29,400 --> 00:41:38,650
doesn't know about what and it all came

00:41:36,340 --> 00:41:41,980
down to documentation and knowledge

00:41:38,650 --> 00:41:44,260
about changes yeah like people did not

00:41:41,980 --> 00:41:47,170
know that something was in a specificity

00:41:44,260 --> 00:41:50,650
so they don't know that the teacher was

00:41:47,170 --> 00:41:52,450
actually in no chess at all I really

00:41:50,650 --> 00:41:54,250
like us to like making a list of what's

00:41:52,450 --> 00:41:56,650
in and I think it exists somewhere but

00:41:54,250 --> 00:41:59,020
it's like not something we use yes but

00:41:56,650 --> 00:42:01,360
like between what's in each release so

00:41:59,020 --> 00:42:04,210
we do have the change mark but that's

00:42:01,360 --> 00:42:07,900
something not consumable yeah for people

00:42:04,210 --> 00:42:11,530
and and I guess that comes a little bit

00:42:07,900 --> 00:42:14,890
in that direction but it's not really

00:42:11,530 --> 00:42:16,599
about release group in this case

00:42:14,890 --> 00:42:21,119
release group is mainly focusing on

00:42:16,599 --> 00:42:24,369
doing movies but this is mainly about

00:42:21,119 --> 00:42:27,190
bringing knowledge and information to

00:42:24,369 --> 00:42:36,400
the user and this is something we really

00:42:27,190 --> 00:42:39,390
have to understand this is how it's a

00:42:36,400 --> 00:42:39,390

YouTube URL: https://www.youtube.com/watch?v=n1Uz2H-2Abg


