Title: Rethinking Transpilation in JavaScript Package Distribution
Publication date: 2019-06-05
Playlist: OpenJS Foundation Collaborator Summit, Berlin, May 2019
Description: 
	OpenJS Foundation Collaborator Summit, Berlin, 2019
Captions: 
	00:00:16,480 --> 00:00:34,550
[Music]

00:00:28,490 --> 00:00:34,550
it's a Christian nobody

00:00:44,920 --> 00:01:03,059
I'm just happy this work was yeah it's

00:00:49,210 --> 00:01:03,059
the brain room was to mr. speaker

00:01:12,510 --> 00:01:15,559
[Music]

00:01:22,700 --> 00:01:25,739
[Music]

00:01:46,860 --> 00:01:49,980
[Music]

00:01:50,860 --> 00:03:21,870
so we have a surprise activity and and

00:03:19,519 --> 00:03:23,790
then

00:03:21,870 --> 00:03:28,019
like feel good next up what's the future

00:03:23,790 --> 00:03:30,060
yeah and so so good about me I'm a first

00:03:28,019 --> 00:03:34,620
generation American child of Somali

00:03:30,060 --> 00:03:45,090
immigrants and multilingual world

00:03:34,620 --> 00:03:50,040
traveler so this is so positive excited

00:03:45,090 --> 00:03:52,860
to be talking today is on distributing

00:03:50,040 --> 00:03:54,480
packages like we're distributing

00:03:52,860 --> 00:03:56,310
JavaScript packages that contain

00:03:54,480 --> 00:03:59,370
unnecessary below and polyfills from

00:03:56,310 --> 00:04:01,530
trans file code and so would anyone

00:03:59,370 --> 00:04:11,010
would we all agree with that statement

00:04:01,530 --> 00:04:12,780
yes npm no okay let me share my story so

00:04:11,010 --> 00:04:15,889
how does my story intersect with this

00:04:12,780 --> 00:04:26,580
problem of bloat in our dependencies so

00:04:15,889 --> 00:04:29,180
I puzzled I was typing words you got a

00:04:26,580 --> 00:04:33,900
resource-constrained tiny single core

00:04:29,180 --> 00:04:36,960
computer it's an electronic waste

00:04:33,900 --> 00:04:40,500
project and I have luxury of like only

00:04:36,960 --> 00:04:42,690
targeting Chrome 74 and you know I'm

00:04:40,500 --> 00:04:45,930
ready to like use a little modern

00:04:42,690 --> 00:04:49,110
JavaScript and when kind of doing some

00:04:45,930 --> 00:04:51,090
performance and analysis work and trying

00:04:49,110 --> 00:04:56,910
to figure out where is this coming from

00:04:51,090 --> 00:04:59,220
I looking at my dependencies and it was

00:04:56,910 --> 00:05:01,440
really frustrating to me because I'm

00:04:59,220 --> 00:05:04,560
trying to you know I only need to target

00:05:01,440 --> 00:05:08,610
from 74 which has a wide support for the

00:05:04,560 --> 00:05:11,639
s5 and a bunch of 15 and a bunch of

00:05:08,610 --> 00:05:15,000
other cool features beyond that span

00:05:11,639 --> 00:05:17,070
expect here but my dependencies which

00:05:15,000 --> 00:05:20,700
are actually pejorative my application I

00:05:17,070 --> 00:05:23,729
were stuck in 2014 and so it was really

00:05:20,700 --> 00:05:27,180
painful thing for me and I had to jump

00:05:23,729 --> 00:05:29,940
us and you know everything from like

00:05:27,180 --> 00:05:32,060
just you know use source of github get

00:05:29,940 --> 00:05:36,270
around and chemic nor

00:05:32,060 --> 00:05:40,440
trying to kind of for myself so that I

00:05:36,270 --> 00:05:43,550
could just upload and save you my you

00:05:40,440 --> 00:05:45,990
know and performance for my for my board

00:05:43,550 --> 00:05:49,290
so so that's my problem

00:05:45,990 --> 00:05:53,780
but why should you all care about and if

00:05:49,290 --> 00:06:01,640
you care this kind of shepherdson storm

00:05:53,780 --> 00:06:01,640
most this isn't a new problem most

00:06:01,940 --> 00:06:08,490
packages actually leverage them to a

00:06:06,210 --> 00:06:09,720
very large extent which means that you

00:06:08,490 --> 00:06:11,490
know the code that we write that's

00:06:09,720 --> 00:06:14,220
actually you need to our application is

00:06:11,490 --> 00:06:15,930
actually a pretty small fraction and I

00:06:14,220 --> 00:06:19,170
think there's no report that came out

00:06:15,930 --> 00:06:21,360
for JavaScript in 2018 and the stats

00:06:19,170 --> 00:06:24,780
were around ten to one so you know every

00:06:21,360 --> 00:06:27,720
ten lines of code is someone else's and

00:06:24,780 --> 00:06:29,790
so I can kind of take that metric and

00:06:27,720 --> 00:06:35,040
you look at scaling the web and you know

00:06:29,790 --> 00:06:37,350
how obviously that's a pretty good size

00:06:35,040 --> 00:06:41,880
of the web so it's a pretty big problem

00:06:37,350 --> 00:06:46,410
that you should all care so how does

00:06:41,880 --> 00:06:49,470
this web user experience right so I mean

00:06:46,410 --> 00:06:51,660
serve locally slow experiences it's more

00:06:49,470 --> 00:06:54,090
fights over the wire but more

00:06:51,660 --> 00:06:59,580
importantly for me somebody who dies

00:06:54,090 --> 00:07:04,650
very kind of conscious about time now

00:06:59,580 --> 00:07:07,770
and just you know what it means to be a

00:07:04,650 --> 00:07:10,500
new internet user markets working off

00:07:07,770 --> 00:07:13,170
you know resource constraint devices not

00:07:10,500 --> 00:07:15,180
necessarily a fancy word like like I had

00:07:13,170 --> 00:07:18,630
but you know maybe a ten dollar phone or

00:07:15,180 --> 00:07:22,170
30 where you know data your mobile data

00:07:18,630 --> 00:07:24,150
is currency you know so so it might

00:07:22,170 --> 00:07:27,840
matter in emerging markets not only do

00:07:24,150 --> 00:07:30,540
the web experiences like they're just

00:07:27,840 --> 00:07:34,260
tremendously crappier with all that

00:07:30,540 --> 00:07:39,050
JavaScript load right and you know I

00:07:34,260 --> 00:07:43,140
love you know I open my mentor New York

00:07:39,050 --> 00:07:45,030
and I know you all love the web in

00:07:43,140 --> 00:07:46,740
emerging markets people

00:07:45,030 --> 00:07:49,110
for the first time you know they haven't

00:07:46,740 --> 00:07:52,020
had the luxury of ever owning a desktop

00:07:49,110 --> 00:07:54,660
device or not remember having any

00:07:52,020 --> 00:07:58,860
different way to get online right and so

00:07:54,660 --> 00:08:01,260
we have these we have these experiences

00:07:58,860 --> 00:08:05,220
of what it means to be on the web that

00:08:01,260 --> 00:08:06,570
are shaped and its really constrained on

00:08:05,220 --> 00:08:08,310
these pretty constrained devices and

00:08:06,570 --> 00:08:10,440
we're competing with you know native

00:08:08,310 --> 00:08:12,180
Android apps that are already like on

00:08:10,440 --> 00:08:14,240
the device that are in their language

00:08:12,180 --> 00:08:17,460
that are you know that have pre cached

00:08:14,240 --> 00:08:20,040
files that are faster than use and

00:08:17,460 --> 00:08:21,540
easier to use you know so why wouldn't

00:08:20,040 --> 00:08:24,420
why wouldn't use her an emerging market

00:08:21,540 --> 00:08:25,800
like want to use this Universal Yemen

00:08:24,420 --> 00:08:28,470
that's like not in their language that's

00:08:25,800 --> 00:08:31,560
slow and floating in like custom money

00:08:28,470 --> 00:08:34,590
right and so they can lose the further

00:08:31,560 --> 00:08:36,810
right so as you know there's user land

00:08:34,590 --> 00:08:43,160
experience of the web and as folks who

00:08:36,810 --> 00:08:45,450
understand you know mechanisms community

00:08:43,160 --> 00:08:48,150
let's take a look and kind of examine

00:08:45,450 --> 00:08:50,250
you know what this means for the health

00:08:48,150 --> 00:08:53,700
of that and why this is bad for all of

00:08:50,250 --> 00:08:57,600
us and water first started again our

00:08:53,700 --> 00:08:59,130
dependencies are the majority of our web

00:08:57,600 --> 00:09:03,350
application code that we should and

00:08:59,130 --> 00:09:07,380
they're stuck in 2004 a 14 we also have

00:09:03,350 --> 00:09:10,380
native features that are not getting

00:09:07,380 --> 00:09:12,630
used or that are underutilized right and

00:09:10,380 --> 00:09:16,160
so there's opportunities there's there's

00:09:12,630 --> 00:09:20,520
mrs. miss opportunity here for kind of

00:09:16,160 --> 00:09:22,560
harvesting new features at scale you

00:09:20,520 --> 00:09:23,340
know which it's like really unfortunate

00:09:22,560 --> 00:09:25,650
and very sad

00:09:23,340 --> 00:09:29,040
you ever tried to deep trance pause code

00:09:25,650 --> 00:09:31,380
anybody not fun right so there's you

00:09:29,040 --> 00:09:33,060
know there's a bunch of native debugging

00:09:31,380 --> 00:09:36,180
tools that we don't even have access to

00:09:33,060 --> 00:09:38,280
anyway you know source maps to be able

00:09:36,180 --> 00:09:43,080
to kind of step through you know you

00:09:38,280 --> 00:09:45,750
know ASIC function cleanly and sanely

00:09:43,080 --> 00:09:49,050
you know and lastly you know all the

00:09:45,750 --> 00:09:51,210
unnecessary flows it's not just the

00:09:49,050 --> 00:09:54,900
bloat there's a bug factor that's

00:09:51,210 --> 00:09:57,560
actually pretty serious and distributed

00:09:54,900 --> 00:09:57,560
at scale so

00:09:57,690 --> 00:10:02,670
and lastly unreadable code and all of

00:09:59,820 --> 00:10:05,520
that lost kind of author intent which is

00:10:02,670 --> 00:10:07,590
like just an unfortunate thing you know

00:10:05,520 --> 00:10:13,910
so these a few source are definitely

00:10:07,590 --> 00:10:17,670
gone modern doctor so you know so I

00:10:13,910 --> 00:10:23,130
think this is one that's not community

00:10:17,670 --> 00:10:25,230
and I have invited here's one of the big

00:10:23,130 --> 00:10:28,080
meat-eaters and babble I mean kind of

00:10:25,230 --> 00:10:39,180
we're talking a lot of stuff with as

00:10:28,080 --> 00:10:42,780
I've been and it's kind of Earth's world

00:10:39,180 --> 00:10:46,140
of like cryptic bugs at scale I you know

00:10:42,780 --> 00:10:49,650
and we're should be heavily transpose

00:10:46,140 --> 00:10:51,750
everything pong field and are and we're

00:10:49,650 --> 00:10:54,150
building upon that infrastructure which

00:10:51,750 --> 00:10:56,160
now means that we're also relying on

00:10:54,150 --> 00:10:57,960
these pucks at scale which you know

00:10:56,160 --> 00:11:04,410
which means you know library authors

00:10:57,960 --> 00:11:06,420
like even if they want to publish you

00:11:04,410 --> 00:11:10,380
know real JavaScript right leg stage

00:11:06,420 --> 00:11:11,460
stage for JavaScript they don't even

00:11:10,380 --> 00:11:16,820
feel comfortable doing it because people

00:11:11,460 --> 00:11:19,650
have come to rely on various kind of

00:11:16,820 --> 00:11:21,720
populist and plugs that we can exported

00:11:19,650 --> 00:11:23,070
throughout our system I just want to

00:11:21,720 --> 00:11:25,590
kind of walk you through this matrix a

00:11:23,070 --> 00:11:28,770
little bit can you read this as up here

00:11:25,590 --> 00:11:32,820
for folks in the balcony yeah fantastic

00:11:28,770 --> 00:11:39,570
so this is there there's some

00:11:32,820 --> 00:11:42,180
differences so we have transponder code

00:11:39,570 --> 00:11:44,310
I'm gonna start like one two three so

00:11:42,180 --> 00:11:47,880
transpile code and polyfills

00:11:44,310 --> 00:11:51,060
can never can sometimes never ever ever

00:11:47,880 --> 00:11:52,530
ever ever ever ever equal native

00:11:51,060 --> 00:11:55,070
implementation can we all agree on that

00:11:52,530 --> 00:11:57,690
right so that's problem number one

00:11:55,070 --> 00:12:02,480
problem number two that's interesting

00:11:57,690 --> 00:12:09,270
transpose code and polyfills they work

00:12:02,480 --> 00:12:10,690
but everybody knows and there's books if

00:12:09,270 --> 00:12:12,220
we do know about

00:12:10,690 --> 00:12:13,839
we also sometimes don't know about it

00:12:12,220 --> 00:12:15,490
too much later that we're kind of

00:12:13,839 --> 00:12:18,610
shipping and exporting in scale so

00:12:15,490 --> 00:12:21,190
that's that's bad right and so there was

00:12:18,610 --> 00:12:23,319
disputed responsibility matrix like

00:12:21,190 --> 00:12:25,810
whose bug is it anyway so let's look at

00:12:23,319 --> 00:12:27,670
the table looking at browsers you know

00:12:25,810 --> 00:12:31,600
so one of the problems is you know we

00:12:27,670 --> 00:12:35,709
have transphobic code poly code

00:12:31,600 --> 00:12:38,920
sometimes it's different targets that

00:12:35,709 --> 00:12:43,680
we're shipping for process but a number

00:12:38,920 --> 00:12:43,680
my problem it kind of trying to unify

00:12:44,100 --> 00:12:49,180
interoperability here is that we have a

00:12:46,089 --> 00:12:51,040
variable native support for forget for

00:12:49,180 --> 00:12:53,439
features additionally we also have

00:12:51,040 --> 00:12:55,480
browser most right so is it a browser

00:12:53,439 --> 00:12:57,459
plugins a transpiler bug is it like a

00:12:55,480 --> 00:12:59,680
half-baked feature is it you know so

00:12:57,459 --> 00:13:03,269
it's pretty complicated and when you

00:12:59,680 --> 00:13:03,269
talk to folks in the bundler and

00:13:04,050 --> 00:13:09,339
translate compiler communities and talk

00:13:07,180 --> 00:13:11,829
to library authors that are publishing

00:13:09,339 --> 00:13:15,899
its tail UV sometimes of the number of

00:13:11,829 --> 00:13:15,899
kind of cryptic issues that pop up

00:13:17,160 --> 00:13:23,500
fantastic yeah okay okay so uh and

00:13:21,430 --> 00:13:24,880
lastly I just kind of wanted to put it

00:13:23,500 --> 00:13:25,569
out there it's a public service

00:13:24,880 --> 00:13:28,449
announcement

00:13:25,569 --> 00:13:30,970
you know transmittal code and you know

00:13:28,449 --> 00:13:33,160
and the uses of use of a polyfill it's

00:13:30,970 --> 00:13:35,470
meant to be a stopgap right who's never

00:13:33,160 --> 00:13:36,880
ever ever ever been to status codes

00:13:35,470 --> 00:13:39,310
never meant to be something that we just

00:13:36,880 --> 00:13:40,930
stuck with forever and they kind of

00:13:39,310 --> 00:13:42,550
become these fixtures these permanent

00:13:40,930 --> 00:13:46,180
fixtures that we just like happily

00:13:42,550 --> 00:13:47,740
install and often question and so

00:13:46,180 --> 00:13:49,889
there's an interesting that I'd like to

00:13:47,740 --> 00:13:52,360
point out here because we talked about

00:13:49,889 --> 00:13:53,949
two kinds of code right there's like the

00:13:52,360 --> 00:13:55,959
code that you've authored there's the

00:13:53,949 --> 00:13:58,120
code that came from you know our

00:13:55,959 --> 00:14:01,750
wonderful contributors all around the

00:13:58,120 --> 00:14:03,399
world and web developers I think have

00:14:01,750 --> 00:14:09,819
solved this problem for their

00:14:03,399 --> 00:14:14,100
application code by creating a dynamic

00:14:09,819 --> 00:14:18,970
way for for us to be able to pick our

00:14:14,100 --> 00:14:23,850
targets and and therefore kind of like

00:14:18,970 --> 00:14:23,850
the minimally transpose version of

00:14:24,190 --> 00:14:27,670
for you know the browsers that we're

00:14:25,630 --> 00:14:30,250
turning so this case to these kind of

00:14:27,670 --> 00:14:34,600
called quick developers staged less than

00:14:30,250 --> 00:14:39,430
for JavaScript and you know our love of

00:14:34,600 --> 00:14:42,310
proposals is pretty simple slide that

00:14:39,430 --> 00:14:49,630
kind of demonstrates folks familiar with

00:14:42,310 --> 00:14:52,860
babel preset are you okay so for those

00:14:49,630 --> 00:14:57,810
who are not so when we first kind of

00:14:52,860 --> 00:15:01,390
began our six to five like you know

00:14:57,810 --> 00:15:04,600
shift of code bases we can have these

00:15:01,390 --> 00:15:10,710
yearning presets or we said okay you can

00:15:04,600 --> 00:15:13,090
transfer all down to sixteen roll around

00:15:10,710 --> 00:15:16,060
sixteen and seventeen we just kind of

00:15:13,090 --> 00:15:24,130
pushed the basement or an important and

00:15:16,060 --> 00:15:29,770
then scaling well we created way of

00:15:24,130 --> 00:15:32,770
basically dynamically kind of adjusting

00:15:29,770 --> 00:15:37,360
our targets and and that's great so this

00:15:32,770 --> 00:15:39,700
is kind of fixed in some sense but

00:15:37,360 --> 00:15:41,890
there's a serious cost like iterating in

00:15:39,700 --> 00:15:45,460
scale because you know those those are

00:15:41,890 --> 00:15:48,610
those presets that i showed you they

00:15:45,460 --> 00:15:50,380
still have reading wide scale usage on

00:15:48,610 --> 00:15:51,360
the web and it doesn't matter Henry's

00:15:50,380 --> 00:15:55,150
right here you can tell you like

00:15:51,360 --> 00:15:58,690
deprecated for years 2015 as if this

00:15:55,150 --> 00:16:00,910
week was still 1.2 million pounds like

00:15:58,690 --> 00:16:02,740
just kind of insane so is what

00:16:00,910 --> 00:16:05,920
developers there's a pretty large cost

00:16:02,740 --> 00:16:09,480
to kind of sum of the four sides that we

00:16:05,920 --> 00:16:11,740
made even in with good intentions and

00:16:09,480 --> 00:16:13,540
anything for me you know thinking about

00:16:11,740 --> 00:16:15,640
this problem it's I've learned it like

00:16:13,540 --> 00:16:19,390
this is a pretty multifaceted problem

00:16:15,640 --> 00:16:23,380
and multifaceted means this is something

00:16:19,390 --> 00:16:26,110
that touches every single link element

00:16:23,380 --> 00:16:29,290
of our distribution pipeline it starts

00:16:26,110 --> 00:16:30,730
all the way like it starts you know a

00:16:29,290 --> 00:16:34,420
library author decides they're going to

00:16:30,730 --> 00:16:36,250
publish and it ends when the last byte

00:16:34,420 --> 00:16:38,140
of JavaScript has been a person like

00:16:36,250 --> 00:16:40,630
downloaded I the user

00:16:38,140 --> 00:16:42,070
on a given target and so in thinking

00:16:40,630 --> 00:16:45,640
about the scope of this distribution

00:16:42,070 --> 00:16:48,790
pipeline I've identified these kind of

00:16:45,640 --> 00:16:54,700
nine stakeholder murmurs as interesting

00:16:48,790 --> 00:16:56,800
and as kind of critical to coming up

00:16:54,700 --> 00:16:58,630
with the solution for this problem

00:16:56,800 --> 00:17:00,459
because I think we've kind of tried to

00:16:58,630 --> 00:17:08,670
solve it from certain angles and it's

00:17:00,459 --> 00:17:13,150
not known community or by like webpack

00:17:08,670 --> 00:17:14,980
like this is like a full like an

00:17:13,150 --> 00:17:16,540
ecosystem wide thing is I'm just gonna

00:17:14,980 --> 00:17:19,270
read out all these in help so you

00:17:16,540 --> 00:17:25,480
synthesize it strums for library authors

00:17:19,270 --> 00:17:30,640
and him engineering in our package

00:17:25,480 --> 00:17:33,040
distribution babble tech typescript and

00:17:30,640 --> 00:17:35,169
other compiler containers fun containers

00:17:33,040 --> 00:17:37,480
web developers and web developers here's

00:17:35,169 --> 00:17:38,620
kind of a big frame because it for me

00:17:37,480 --> 00:17:40,660
it's what the filters that are working

00:17:38,620 --> 00:17:42,970
at scale what developers that are

00:17:40,660 --> 00:17:53,890
working kind of an intermediate scaling

00:17:42,970 --> 00:17:57,549
and really it's about low floors and you

00:17:53,890 --> 00:18:00,809
know can spend hours tweaking there I'm

00:17:57,549 --> 00:18:03,309
so so we have a content delivery network

00:18:00,809 --> 00:18:05,470
folks actually decide whether it's

00:18:03,309 --> 00:18:11,380
called engineers or infrastructure

00:18:05,470 --> 00:18:14,080
people I just I just called the CDN

00:18:11,380 --> 00:18:15,429
folks node governance web platform

00:18:14,080 --> 00:18:24,850
engineers at what what what

00:18:15,429 --> 00:18:26,320
justification authors perfect so so so

00:18:24,850 --> 00:18:27,850
these are the people that I think are

00:18:26,320 --> 00:18:30,760
important to this conversation that's

00:18:27,850 --> 00:18:35,230
what you need to know and what I'm

00:18:30,760 --> 00:18:37,419
asking you today I came here today I see

00:18:35,230 --> 00:18:40,559
this summit is a really interesting

00:18:37,419 --> 00:18:44,650
opportunity to kind of get a snapshot of

00:18:40,559 --> 00:18:47,440
data from people that are like that fit

00:18:44,650 --> 00:18:49,540
a lot of those buckets I also think it

00:18:47,440 --> 00:18:50,770
starts here right the front-end

00:18:49,540 --> 00:18:54,400
communities Ted hi

00:18:50,770 --> 00:18:58,480
and p.m. hours dead

00:18:54,400 --> 00:19:02,470
no more tweets right so for better or

00:18:58,480 --> 00:19:04,960
worst you know we hijacked your hijacked

00:19:02,470 --> 00:19:05,850
our ecosystem for for lots of good

00:19:04,960 --> 00:19:09,730
reasons too

00:19:05,850 --> 00:19:13,570
and so I think starting here for me is

00:19:09,730 --> 00:19:16,870
actually a very important important

00:19:13,570 --> 00:19:19,330
first step in kind of like understanding

00:19:16,870 --> 00:19:23,860
manners in the landscape and better

00:19:19,330 --> 00:19:26,920
understanding what place what's what me

00:19:23,860 --> 00:19:31,390
to do so we're gonna be good facilitated

00:19:26,920 --> 00:19:34,330
discussion next we're all I want

00:19:31,390 --> 00:19:36,280
everybody here to do is kind of think a

00:19:34,330 --> 00:19:38,320
little bit about like we're gonna think

00:19:36,280 --> 00:19:45,250
of it that you hopefully hopefully know

00:19:38,320 --> 00:19:50,100
what to and if you don't and also tell

00:19:45,250 --> 00:19:55,420
me after this if you think that you know

00:19:50,100 --> 00:19:57,970
but with your stakeholder hat and hats

00:19:55,420 --> 00:20:00,100
how does this problem affect you right

00:19:57,970 --> 00:20:03,929
and I told you how it affected me as

00:20:00,100 --> 00:20:03,929
somebody who's trying to compile a

00:20:04,440 --> 00:20:12,580
device and I told you oh you know how I

00:20:08,140 --> 00:20:14,950
fixed it in a keyring and for me your

00:20:12,580 --> 00:20:17,350
apartments to any solution it's

00:20:14,950 --> 00:20:21,070
definitely gonna be you know and that's

00:20:17,350 --> 00:20:24,580
not gonna be the same but that's mine

00:20:21,070 --> 00:20:26,950
and so all we want to know today is what

00:20:24,580 --> 00:20:29,020
what is what how does problem affect you

00:20:26,950 --> 00:20:35,440
and how does it intersect with your

00:20:29,020 --> 00:20:41,140
workflows and what the non goals are

00:20:35,440 --> 00:20:42,220
right we're not gonna like and I don't

00:20:41,140 --> 00:20:44,470
want that to be the focus of the

00:20:42,220 --> 00:20:48,970
conversation so we're not designing a

00:20:44,470 --> 00:20:52,809
solution we're not driving in census and

00:20:48,970 --> 00:20:56,110
we're not so this is just the rapid fire

00:20:52,809 --> 00:20:58,630
breaks four-week session and with that I

00:20:56,110 --> 00:21:02,880
want to have some facilities the

00:20:58,630 --> 00:21:02,880
Fowler's competing facilitators

00:21:04,210 --> 00:21:10,360
young terror minute minutes sick I

00:21:08,710 --> 00:21:13,269
apologize Filippenko

00:21:10,360 --> 00:21:15,389
and add embellishments and also they see

00:21:13,269 --> 00:21:15,389
you

00:21:15,669 --> 00:21:21,389
Jori your story story and Rory alright

00:21:19,419 --> 00:21:27,159
Rory Tara

00:21:21,389 --> 00:21:33,190
just a slice for Adam and Valerie and

00:21:27,159 --> 00:21:34,570
myself of melt and so ok so - we're

00:21:33,190 --> 00:21:37,149
gonna actually group breaking up with

00:21:34,570 --> 00:21:39,220
two groups so you need to sit closer to

00:21:37,149 --> 00:21:46,409
each other so everyone who's

00:21:39,220 --> 00:21:49,240
participating laptop's

00:21:46,409 --> 00:21:50,940
might actually read your laptop with you

00:21:49,240 --> 00:21:54,970
cuz you're going to need it so everyone

00:21:50,940 --> 00:22:00,419
you can fill in two tables of six these

00:21:54,970 --> 00:22:00,419
first four tables here and the tables

00:22:18,029 --> 00:22:58,919
you can say their instructions once

00:23:12,720 --> 00:23:15,779
[Music]

00:23:49,780 --> 00:24:20,650
we have five groups okay so next thing

00:23:56,590 --> 00:24:20,650
you see there is a milk cream uniform

00:24:22,810 --> 00:24:36,020
form there's a QR codes well if you want

00:24:31,040 --> 00:24:47,510
just a few people in each bribe or you

00:24:36,020 --> 00:24:57,230
can submit the and the form has three

00:24:47,510 --> 00:25:05,930
questions one is your number one two

00:24:57,230 --> 00:25:08,570
three four five counterclockwise so yeah

00:25:05,930 --> 00:25:20,360
remember there's also for the idea that

00:25:08,570 --> 00:25:22,970
you're submitting that problem also when

00:25:20,360 --> 00:25:25,460
you kind of what respected like what

00:25:22,970 --> 00:25:27,049
stakeholder can have on and then

00:25:25,460 --> 00:25:29,090
the questions that ml was asking before

00:25:27,049 --> 00:25:31,100
like how is this problem clicked in you

00:25:29,090 --> 00:25:33,500
in the past have you encountered it how

00:25:31,100 --> 00:25:34,940
does it affect your work that's one one

00:25:33,500 --> 00:25:36,679
question and then the next question is

00:25:34,940 --> 00:25:39,799
what are some constraints you have in

00:25:36,679 --> 00:25:41,390
the solution to this problem so now in

00:25:39,799 --> 00:25:44,000
your little groups because hopefully you

00:25:41,390 --> 00:25:49,309
don't know someone in it I go around and

00:25:44,000 --> 00:25:52,789
introduce yourself just your stakeholder

00:25:49,309 --> 00:25:55,789
hat if you have one and then discuss her

00:25:52,789 --> 00:25:59,230
who are the problems we have these

00:25:55,789 --> 00:26:01,010
lovely facilitators

00:25:59,230 --> 00:26:04,809
some of them have already claimed the

00:26:01,010 --> 00:26:04,809
group so you to each get that group

00:26:08,620 --> 00:26:14,350
they're just here to help kind of like

00:26:11,240 --> 00:26:14,350
help keep you on track

00:26:45,730 --> 00:26:48,829
[Music]

00:27:13,020 --> 00:27:16,820
[Laughter]

00:29:09,910 --> 00:29:12,979
[Music]

00:29:24,870 --> 00:29:28,020
[Music]

00:30:15,230 --> 00:30:22,399
my Rick here from the internet I'm

00:30:19,559 --> 00:30:26,269
wondering if there's all the discussions

00:30:22,399 --> 00:30:30,350
numbers been accounted for and if not

00:30:26,269 --> 00:30:30,350
this number is to do

00:31:19,930 --> 00:31:23,059
[Music]

00:33:45,690 --> 00:33:48,789
[Music]

00:34:06,460 --> 00:34:11,799
[Music]

00:35:34,650 --> 00:35:37,729
[Music]

00:37:17,270 --> 00:37:20,469
[Applause]

00:39:02,590 --> 00:39:05,749
[Music]

00:48:10,030 --> 00:48:13,099
[Music]

00:48:22,180 --> 00:48:25,280
[Music]

00:49:15,029 --> 00:49:38,470
yeah really like we could just go around

00:49:33,160 --> 00:49:47,230
like each table just to summarize a few

00:49:38,470 --> 00:49:48,849
points that you volunteer for me to

00:49:47,230 --> 00:49:51,400
summarize if you point so that ever gets

00:49:48,849 --> 00:49:53,940
it here we're talking about so table

00:49:51,400 --> 00:49:53,940
number one

00:50:14,150 --> 00:50:18,960
number points about Fred spyler fatigue

00:50:16,790 --> 00:50:22,560
learning curve is hard speciality of

00:50:18,960 --> 00:50:26,040
building projects that require just

00:50:22,560 --> 00:50:28,440
training the most challenging bundler

00:50:26,040 --> 00:50:31,800
fatigue is also hard to debug their

00:50:28,440 --> 00:50:33,450
problems and happen in one year updating

00:50:31,800 --> 00:50:35,700
any dependency committee or seeing any

00:50:33,450 --> 00:50:38,460
changes in their problems are not 10x

00:50:35,700 --> 00:50:40,620
because you get information

00:50:38,460 --> 00:50:43,770
another interesting point is like when

00:50:40,620 --> 00:50:45,000
when big big websites have multiple

00:50:43,770 --> 00:50:46,670
applications like single page

00:50:45,000 --> 00:50:50,130
application so search from Sandy me

00:50:46,670 --> 00:50:51,690
oldest of them you have you know n level

00:50:50,130 --> 00:50:54,090
complexity hold of different packages

00:50:51,690 --> 00:50:58,860
I'm doing the same to me and that

00:50:54,090 --> 00:51:01,890
affects the user experience in terms of

00:50:58,860 --> 00:51:07,490
constraints or requirements we kept

00:51:01,890 --> 00:51:07,490
interesting ones the platform in the

00:51:16,670 --> 00:52:03,180
[Music]

00:51:17,840 --> 00:52:06,120
process there's a choice like I said we

00:52:03,180 --> 00:52:10,160
actually reject that premise we believe

00:52:06,120 --> 00:52:15,030
transpose very good the number of things

00:52:10,160 --> 00:52:16,170
doing it code bloat and the reasons why

00:52:15,030 --> 00:52:18,150
we actually transfer

00:52:16,170 --> 00:52:20,430
there's some difficult age cases we have

00:52:18,150 --> 00:52:22,710
these in black script and big holes kind

00:52:20,430 --> 00:52:25,050
of transport to an exact ocean mode

00:52:22,710 --> 00:52:26,880
because the enterprise with very strict

00:52:25,050 --> 00:52:28,650
eating we do that latest version but you

00:52:26,880 --> 00:52:32,430
get one goes from the latest version

00:52:28,650 --> 00:52:35,460
because that's all we get so as a whole

00:52:32,430 --> 00:52:39,270
we grieve the minimalist approach I

00:52:35,460 --> 00:52:44,300
think is going out but we do not believe

00:52:39,270 --> 00:52:44,300
there's a problem to be solved questions

00:52:45,890 --> 00:52:53,700
and was everybody at your table type

00:52:49,380 --> 00:52:55,230
scripts so I'm curious for the first

00:52:53,700 --> 00:53:05,910
users are you guys that was an

00:52:55,230 --> 00:53:09,630
interesting that's fascinating number

00:53:05,910 --> 00:53:11,790
three has JavaScript library authors and

00:53:09,630 --> 00:53:14,250
about a Latina we hope that this man is

00:53:11,790 --> 00:53:18,750
not very representative of the typical

00:53:14,250 --> 00:53:21,360
JavaScript using population Babel we

00:53:18,750 --> 00:53:24,330
decided is both a problem and the

00:53:21,360 --> 00:53:25,830
solution the library maintains among us

00:53:24,330 --> 00:53:28,290
are very happy that we have battle to

00:53:25,830 --> 00:53:31,190
allow us to address that compact with

00:53:28,290 --> 00:53:33,600
earlier versions of node but when we

00:53:31,190 --> 00:53:35,880
look at the writer drumstick onions we

00:53:33,600 --> 00:53:38,640
find that people often have to change

00:53:35,880 --> 00:53:40,410
that they inherited or perhaps set up

00:53:38,640 --> 00:53:42,090
fall in cooks event there's a lot of

00:53:40,410 --> 00:53:52,110
complexity there that they're not

00:53:42,090 --> 00:53:53,850
necessarily ready for the translation

00:53:52,110 --> 00:53:55,680
even though it could benefit them

00:53:53,850 --> 00:53:58,230
because they don't have the time you

00:53:55,680 --> 00:54:00,900
invest in learning the tools so we

00:53:58,230 --> 00:54:03,930
waited till chained complexity as as one

00:54:00,900 --> 00:54:06,120
of our columns not many of us use

00:54:03,930 --> 00:54:09,680
typescript we also find there's

00:54:06,120 --> 00:54:22,880
complexity and missing documentation

00:54:09,680 --> 00:54:27,270
I would so I think we kind of bashed on

00:54:22,880 --> 00:54:28,470
this table and it really just comes down

00:54:27,270 --> 00:54:31,170
to the number

00:54:28,470 --> 00:54:32,579
number carcasses most people don't get

00:54:31,170 --> 00:54:35,220
the time to understand the code as a

00:54:32,579 --> 00:54:38,299
pilot to write and then end up with a

00:54:35,220 --> 00:54:40,890
number of issues when they need to solve

00:54:38,299 --> 00:54:44,339
functional issues some of the other

00:54:40,890 --> 00:54:46,950
machines is when you have multiple

00:54:44,339 --> 00:54:50,989
libraries that are 32 transpiling that

00:54:46,950 --> 00:54:55,079
use competing polyfills you know some

00:54:50,989 --> 00:54:59,039
different versions of the promise or any

00:54:55,079 --> 00:55:00,329
promises are seen a few others where

00:54:59,039 --> 00:55:02,489
they end up inflicting with one another

00:55:00,329 --> 00:55:09,989
finally apply the same polyfills to the

00:55:02,489 --> 00:55:12,690
same intrinsics yeah beats like run some

00:55:09,989 --> 00:55:47,130
of the comparisons with native on some

00:55:12,690 --> 00:55:55,380
of the same issues there's the two

00:55:47,130 --> 00:55:58,170
things yes I can what is that debugging

00:55:55,380 --> 00:56:01,829
experience is awful with transformation

00:55:58,170 --> 00:56:07,349
which is not anybody I'm sure everybody

00:56:01,829 --> 00:56:09,989
else awful both in the browser and awful

00:56:07,349 --> 00:56:15,499
air for node on the server because node

00:56:09,989 --> 00:56:15,499
does not support source maps and then

00:56:19,819 --> 00:56:26,660
benchmark show that that code is faster

00:56:22,499 --> 00:56:30,269
than using thematic JavaScript so

00:56:26,660 --> 00:56:32,160
browser you people people who are

00:56:30,269 --> 00:56:32,940
working on optimizing v8 and other

00:56:32,160 --> 00:56:35,190
jumpers

00:56:32,940 --> 00:56:37,079
don't bother optimizing for the internet

00:56:35,190 --> 00:56:39,680
JavaScript people are it's kind of

00:56:37,079 --> 00:56:39,680
chicken and egg problem

00:56:39,970 --> 00:57:10,630
the browsers aren't going to prioritize

00:56:41,670 --> 00:57:11,860
optimizing fantastic first of all thank

00:57:10,630 --> 00:57:15,130
you thank you thank you

00:57:11,860 --> 00:57:17,500
this was an exercise trying to

00:57:15,130 --> 00:57:20,950
understand take a snapshot of the

00:57:17,500 --> 00:57:23,410
landscape drive requirements get

00:57:20,950 --> 00:57:25,840
constraints understand where people

00:57:23,410 --> 00:57:28,870
disagree to understand where they agree

00:57:25,840 --> 00:57:31,570
so then I can kind of Shepherd this

00:57:28,870 --> 00:57:33,040
forward throughout the community instead

00:57:31,570 --> 00:57:34,120
what's next how do we keep this

00:57:33,040 --> 00:57:36,880
conversation going

00:57:34,120 --> 00:57:39,220
I'll be here a day to this data set will

00:57:36,880 --> 00:57:40,990
be published we have lots of Holly

00:57:39,220 --> 00:57:45,220
conversations tomorrow if folks are

00:57:40,990 --> 00:57:58,570
inspired like you know unconference

00:57:45,220 --> 00:57:59,290
session or what a so I think it's

00:57:58,570 --> 00:58:01,840
obvious it's gonna take a

00:57:59,290 --> 00:58:05,080
cross-functional group to do this this

00:58:01,840 --> 00:58:07,090
is a problem spans both standard and the

00:58:05,080 --> 00:58:09,900
web communities I suppose all the

00:58:07,090 --> 00:58:17,860
peripheral infrastructure that happened

00:58:09,900 --> 00:58:20,830
and I am putting forward an initiative a

00:58:17,860 --> 00:58:24,310
little bit been an informal initiative

00:58:20,830 --> 00:58:28,390
already like today like literally like

00:58:24,310 --> 00:58:29,380
or just created and to basically solve

00:58:28,390 --> 00:58:30,880
this problems it was an independent

00:58:29,380 --> 00:58:35,970
JavaScript package distribution

00:58:30,880 --> 00:58:39,640
community group sole focus is to drive

00:58:35,970 --> 00:58:40,690
solution and figure out how how we can

00:58:39,640 --> 00:58:43,290
solve this problem throughout our

00:58:40,690 --> 00:58:43,290
ecosystem

00:58:47,070 --> 00:58:51,320
and you sit in contributing feedback

00:58:52,250 --> 00:58:58,290
Constable's home whatever like and

00:58:55,790 --> 00:59:00,870
please combine me and that's our that's

00:58:58,290 --> 00:59:03,660
created so I think if you're what access

00:59:00,870 --> 00:59:23,400
peer just like keeping abreast of the

00:59:03,660 --> 00:59:29,340
conversation issue number one issue one

00:59:23,400 --> 00:59:31,140
seventy one seventy and yeah and so and

00:59:29,340 --> 00:59:35,430
then I'm going to publish the results of

00:59:31,140 --> 00:59:38,510
this so you guys can all and I kind of

00:59:35,430 --> 00:59:41,760
this is a huge problem right create

00:59:38,510 --> 00:59:43,740
massive problem we're unfurling

00:59:41,760 --> 00:59:47,190
ourselves from all this kind of complex

00:59:43,740 --> 00:59:49,920
technical debt but this with this a

00:59:47,190 --> 00:59:51,720
quote never doubt that a small group of

00:59:49,920 --> 00:59:53,760
citizen of concerns the distance can

00:59:51,720 --> 00:59:56,940
change the world indeed it is the only

00:59:53,760 --> 00:59:59,300
thing that ever has so thank you for

00:59:56,940 --> 00:59:59,300
your time

00:59:59,800 --> 01:00:01,839

YouTube URL: https://www.youtube.com/watch?v=9ohIcsyMoO8


