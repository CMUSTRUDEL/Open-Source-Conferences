Title: Inspector protocol in production
Publication date: 2019-05-31
Playlist: OpenJS Foundation Collaborator Summit, Berlin, May 2019
Description: 
	OpenJS Foundation Collaborator Summit, Berlin, 2019
Captions: 
	00:00:00,000 --> 00:00:08,130
is a special protocol and it just car

00:00:04,710 --> 00:00:10,950
sound mr. Berger use cases in production

00:00:08,130 --> 00:00:17,609
and we will discuss some issues what we

00:00:10,950 --> 00:00:20,960
have right now so issues the most

00:00:17,609 --> 00:00:25,680
exciting part and in first issue that

00:00:20,960 --> 00:00:27,330
actually it my main main issue for me

00:00:25,680 --> 00:00:29,580
right now just because I'm trying to go

00:00:27,330 --> 00:00:31,830
this debugger for no justice no or

00:00:29,580 --> 00:00:33,570
production budget partial about

00:00:31,830 --> 00:00:36,890
production but you use child processes

00:00:33,570 --> 00:00:41,010
is actually how to debug child process

00:00:36,890 --> 00:00:45,090
the problem is that it's very critical

00:00:41,010 --> 00:00:45,660
export using WebSockets and inspector by

00:00:45,090 --> 00:00:47,760
yourself

00:00:45,660 --> 00:00:49,710
try to generate some port and by default

00:00:47,760 --> 00:00:52,770
it to use one port definitely doesn't

00:00:49,710 --> 00:00:54,660
work do you have multiple processors but

00:00:52,770 --> 00:00:59,219
it can automatically generate random

00:00:54,660 --> 00:01:01,590
port if you pass zero and after you pass

00:00:59,219 --> 00:01:03,449
zero the main questions how to get this

00:01:01,590 --> 00:01:09,090
generated port back sectional connect

00:01:03,449 --> 00:01:11,460
and right now the approach that is super

00:01:09,090 --> 00:01:14,280
ugly it's only works when you can

00:01:11,460 --> 00:01:16,320
control foul notice about them you just

00:01:14,280 --> 00:01:18,090
parse the city error and gives us

00:01:16,320 --> 00:01:21,060
WebSocket you are out of here

00:01:18,090 --> 00:01:25,100
but if chanters you to see the error or

00:01:21,060 --> 00:01:25,100
something like this it will not work so

00:01:25,520 --> 00:01:32,930
have anyone debug child processes okay

00:01:36,200 --> 00:01:45,829
okay so the possible solutions here it's

00:01:43,380 --> 00:01:48,390
the main problems artificial how to

00:01:45,829 --> 00:01:51,740
discover this port how to report its

00:01:48,390 --> 00:01:54,420
part it's probably can use some

00:01:51,740 --> 00:01:57,149
alternative transport to report this

00:01:54,420 --> 00:01:59,130
part for example diagnostic require

00:01:57,149 --> 00:02:03,360
little just introduced an experimental

00:01:59,130 --> 00:02:06,360
and maybe if you have some other ideas

00:02:03,360 --> 00:02:11,220
how can report it and can be easily

00:02:06,360 --> 00:02:13,270
consumed by your tool it will be nice so

00:02:11,220 --> 00:02:17,230
I know vias code allows

00:02:13,270 --> 00:02:19,600
to attach to um like note processes that

00:02:17,230 --> 00:02:20,320
don't even explicitly open dance back

00:02:19,600 --> 00:02:23,530
port yet

00:02:20,320 --> 00:02:26,530
oh maybe list them all so maybe look

00:02:23,530 --> 00:02:28,180
through how to a did that yeah they

00:02:26,530 --> 00:02:32,100
actually use signals they can send

00:02:28,180 --> 00:02:36,220
signal yeah and then open a deathless

00:02:32,100 --> 00:02:39,220
socket actually the problems it is not a

00:02:36,220 --> 00:02:43,570
sound out environment actually prohibit

00:02:39,220 --> 00:02:45,940
using signals so they are not at that

00:02:43,570 --> 00:02:49,350
point I will take a look again maybe

00:02:45,940 --> 00:02:49,350
they introduced something better

00:02:50,580 --> 00:02:58,720
okay

00:02:51,790 --> 00:03:03,790
yes problem the main problem the man and

00:02:58,720 --> 00:03:08,590
biggest topic actually I believe I of

00:03:03,790 --> 00:03:12,040
robots actually secures is how is it

00:03:08,590 --> 00:03:16,030
secure to his practical production from

00:03:12,040 --> 00:03:19,590
one point of view as long as you are not

00:03:16,030 --> 00:03:22,750
leaking WebSocket URL it should be fine

00:03:19,590 --> 00:03:24,910
but at the same time I remember the

00:03:22,750 --> 00:03:27,340
second part of security is not exposing

00:03:24,910 --> 00:03:30,220
too much information as possible and now

00:03:27,340 --> 00:03:32,770
if you leak for a second URL someone get

00:03:30,220 --> 00:03:36,750
for access to protocol it come someone

00:03:32,770 --> 00:03:42,070
can debug it can execute remote code and

00:03:36,750 --> 00:03:51,610
anything like this we even had a

00:03:42,070 --> 00:03:54,160
security yeah the idea was the problem

00:03:51,610 --> 00:03:55,930
was that Netflix for by default exposed

00:03:54,160 --> 00:03:58,390
protocol using zero zero zero zero

00:03:55,930 --> 00:04:01,959
interface or some predictable port and

00:03:58,390 --> 00:04:04,690
was it was too much too easy to connect

00:04:01,959 --> 00:04:09,360
I actually seen this in the world like

00:04:04,690 --> 00:04:09,360
people exposed in the debugger ready

00:04:11,489 --> 00:04:18,880
yeah it's very good point first of all

00:04:15,480 --> 00:04:21,520
there are some very simple layer of

00:04:18,880 --> 00:04:24,000
security right now that you need to get

00:04:21,520 --> 00:04:27,170
full WebSocket URL to come back textual

00:04:24,000 --> 00:04:29,540
but unfortunately by default

00:04:27,170 --> 00:04:32,450
note on the port on the inspector port

00:04:29,540 --> 00:04:34,760
not you'll expose Jason end point where

00:04:32,450 --> 00:04:37,190
you can go and get its full website URL

00:04:34,760 --> 00:04:38,990
so the first measure very

00:04:37,190 --> 00:04:54,980
straightforward they actually have four

00:04:38,990 --> 00:05:21,950
requests to introduce a flag that should

00:04:54,980 --> 00:05:26,060
be if you are not exposing any port and

00:05:21,950 --> 00:05:28,520
you wonder on trust just cause you don't

00:05:26,060 --> 00:05:31,610
use actually independent so you verify

00:05:28,520 --> 00:05:34,310
all of them then yes it works but if you

00:05:31,610 --> 00:05:36,350
around on trusted code then it can for

00:05:34,310 --> 00:05:39,440
example then here on to knows is the

00:05:36,350 --> 00:05:50,690
same my instance one not can connect to

00:05:39,440 --> 00:05:52,880
not an addressed to on strim I mean

00:05:50,690 --> 00:05:55,520
security problem is been around to know

00:05:52,880 --> 00:05:58,250
that your assignment compromise on NPM

00:05:55,520 --> 00:06:00,620
package and uses NPM package to brute

00:05:58,250 --> 00:06:08,480
force all ports and connecting as

00:06:00,620 --> 00:06:15,680
notices all the emotional yes because

00:06:08,480 --> 00:06:17,600
you can programmatically start yeah so

00:06:15,680 --> 00:06:20,150
first firmly sexual licking the staff

00:06:17,600 --> 00:06:23,630
secretary RL if you can avoid licking it

00:06:20,150 --> 00:06:26,360
will define but I mean if it's final

00:06:23,630 --> 00:06:29,240
licked another problem is actually

00:06:26,360 --> 00:06:32,120
exposing too much information and one of

00:06:29,240 --> 00:06:35,630
the suggestion by Ally and China

00:06:32,120 --> 00:06:38,800
Yujin was that we need to whitelist

00:06:35,630 --> 00:06:40,940
the miles that actually available a lot

00:06:38,800 --> 00:06:43,190
it might work

00:06:40,940 --> 00:06:46,450
I mean if you need to only profiler or

00:06:43,190 --> 00:06:50,350
only if you only some part of protocol

00:06:46,450 --> 00:06:52,970
possibly work but at the same time

00:06:50,350 --> 00:06:56,300
protocol by itself was not designed to

00:06:52,970 --> 00:06:58,550
be right in this environment for example

00:06:56,300 --> 00:07:01,190
you need travel time demand for a lot of

00:06:58,550 --> 00:07:03,710
inspection and if you enable in profiler

00:07:01,190 --> 00:07:05,510
you cannot get it if you enable and keep

00:07:03,710 --> 00:07:07,520
profiler it's much harder to get

00:07:05,510 --> 00:07:09,970
explicit objects is that sometimes I

00:07:07,520 --> 00:07:13,070
mean it's something that you can work on

00:07:09,970 --> 00:07:14,540
but it's something question how to solve

00:07:13,070 --> 00:07:17,330
if you can find the idea by the laser

00:07:14,540 --> 00:07:20,270
it's the link and there are a lot of

00:07:17,330 --> 00:07:24,050
discussion happens there and please join

00:07:20,270 --> 00:07:49,240
and share any Europe committees is

00:07:24,050 --> 00:07:51,560
talking about make this is not yet and

00:07:49,240 --> 00:07:52,850
it's not going to help having a flag to

00:07:51,560 --> 00:07:53,690
disable it because they're not gonna

00:07:52,850 --> 00:07:56,419
know about it

00:07:53,690 --> 00:07:58,310
yes I agree but at the same time I'm in

00:07:56,419 --> 00:08:04,430
business to your cause for example I

00:07:58,310 --> 00:08:05,900
feel like if you go to Chrome inspect to

00:08:04,430 --> 00:08:14,750
find you know process yeah how that's

00:08:05,900 --> 00:08:19,040
how it goes yes yes you can find a

00:08:14,750 --> 00:08:21,500
second point there but it'll make it so

00:08:19,040 --> 00:08:27,169
that if you general debugging with the

00:08:21,500 --> 00:08:30,070
signal it doesn't expose we can't do it

00:08:27,169 --> 00:08:34,490
I mean yes we definitely can right now

00:08:30,070 --> 00:08:37,419
they remove as much as possible its

00:08:34,490 --> 00:08:40,250
final time yes but if for example

00:08:37,419 --> 00:08:43,219
visually I caused you a signal they

00:08:40,250 --> 00:08:45,890
expect to have this parts the other

00:08:43,219 --> 00:08:49,520
thing is that still like security was

00:08:45,890 --> 00:08:51,840
brought up as wrongly issues making the

00:08:49,520 --> 00:09:01,620
case that turning

00:08:51,840 --> 00:09:04,830
production security one thing I think

00:09:01,620 --> 00:09:07,650
people like comfortable because of yes

00:09:04,830 --> 00:09:09,110
people aren't comfortable tutorial it's

00:09:07,650 --> 00:09:15,060
great for debugging you don't clean

00:09:09,110 --> 00:09:20,670
these are the solutions I delight to say

00:09:15,060 --> 00:09:23,670
that protocol if we instance next step

00:09:20,670 --> 00:09:25,860
from security protocol was designed to

00:09:23,670 --> 00:09:28,710
the way is a it is rated from production

00:09:25,860 --> 00:09:30,570
from performance point of view from I'm

00:09:28,710 --> 00:09:33,300
mostly from performance point of view

00:09:30,570 --> 00:09:39,410
and actually used to automate crump a

00:09:33,300 --> 00:09:43,140
lot and used by different companies and

00:09:39,410 --> 00:09:47,280
Thunder I mean the only aspect that was

00:09:43,140 --> 00:09:48,090
not to compliant time for a desired for

00:09:47,280 --> 00:09:51,390
security

00:09:48,090 --> 00:09:54,300
I mean security was support for why not

00:09:51,390 --> 00:09:56,460
it it's not easy to get a part it's what

00:09:54,300 --> 00:09:59,940
it's not easier to get for WebSocket URL

00:09:56,460 --> 00:10:01,890
and it's enough for our use case but in

00:09:59,940 --> 00:10:04,160
production a is not an imagined as we

00:10:01,890 --> 00:10:07,140
like most get more control over

00:10:04,160 --> 00:10:09,870
everything so I like to say that

00:10:07,140 --> 00:10:13,950
performance is solved and nothing is

00:10:09,870 --> 00:10:16,080
solved I know all about its result if

00:10:13,950 --> 00:10:17,610
you need something you definitely need

00:10:16,080 --> 00:10:19,950
to pay for something like profiler

00:10:17,610 --> 00:10:20,850
there's some overhead but if you don't

00:10:19,950 --> 00:10:22,980
need profiler

00:10:20,850 --> 00:10:25,170
in this some Picasa form difficult or

00:10:22,980 --> 00:10:30,060
business unit there's not something like

00:10:25,170 --> 00:10:30,680
Netflix is already very are using not

00:10:30,060 --> 00:11:00,810
yet

00:10:30,680 --> 00:11:01,890
it was when you use some concept from

00:11:00,810 --> 00:11:04,840
Randleman

00:11:01,890 --> 00:11:08,160
example if you capture heap snapshot

00:11:04,840 --> 00:11:11,380
and you'd like to get objects back then

00:11:08,160 --> 00:11:14,020
the objects back rent an immense lecture

00:11:11,380 --> 00:11:17,529
demise arts expose all objects

00:11:14,020 --> 00:11:21,760
instruction in bloom enter everything

00:11:17,529 --> 00:11:24,930
about this action so you can get your

00:11:21,760 --> 00:11:27,550
profile but yeah you can load it or

00:11:24,930 --> 00:11:30,940
automatically analyze it but if you'd

00:11:27,550 --> 00:11:33,400
like to inspect it and get better

00:11:30,940 --> 00:11:35,650
picture of what is actually new he'll be

00:11:33,400 --> 00:11:39,339
intern time limited that's how to

00:11:35,650 --> 00:11:42,160
practice I mean I notice that most stop

00:11:39,339 --> 00:11:45,790
he'll work and you'll be able to get a

00:11:42,160 --> 00:11:51,400
lot of me on date out of it but it was

00:11:45,790 --> 00:11:54,220
never actually considered to predict or

00:11:51,400 --> 00:12:00,790
never was built his idea that can be

00:11:54,220 --> 00:12:10,680
used with different amounts next we

00:12:00,790 --> 00:12:10,680
check also being true because I know you

00:12:21,870 --> 00:12:34,660
like process manager I definitely need

00:12:29,530 --> 00:12:38,170
to take the work I I don't know what is

00:12:34,660 --> 00:12:40,060
but as far as I know they're very alert

00:12:38,170 --> 00:12:43,089
to soldiers how to get violent

00:12:40,060 --> 00:12:46,570
information out of not it some types

00:12:43,089 --> 00:12:49,709
that you can use their sound but used to

00:12:46,570 --> 00:12:54,400
have some Chow students to get profiling

00:12:49,709 --> 00:13:08,560
and I mean to get your file out of known

00:12:54,400 --> 00:13:11,320
process there's there's some days and if

00:13:08,560 --> 00:13:15,300
you really want to do it you can I get

00:13:11,320 --> 00:13:15,300
some new books

00:13:17,080 --> 00:13:26,270
yeah so yeah they use finally most like

00:13:24,110 --> 00:13:30,440
today you suspect but I need to check

00:13:26,270 --> 00:13:32,240
hidden and as a possible solution for

00:13:30,440 --> 00:13:34,400
the security problem is do not use

00:13:32,240 --> 00:13:37,130
WebSocket and use alternative transport

00:13:34,400 --> 00:13:39,830
layer on vibes it just derailed born in

00:13:37,130 --> 00:13:44,030
locally and inspected by production of

00:13:39,830 --> 00:13:46,130
work in progress by you drill I will

00:13:44,030 --> 00:13:49,310
help using to finish it and it'll solve

00:13:46,130 --> 00:13:52,430
some problems for example chrome when

00:13:49,310 --> 00:13:57,650
exposing protocol is pipe when requires

00:13:52,430 --> 00:13:59,840
mechanic security well again it's it's

00:13:57,650 --> 00:14:03,770
two different problems access protocol

00:13:59,840 --> 00:14:19,220
and what further Cox falls problems are

00:14:03,770 --> 00:14:20,240
spread is much easier to solve I need to

00:14:19,220 --> 00:14:22,820
double check how it's actually

00:14:20,240 --> 00:14:24,560
implemented I know that chromic shall

00:14:22,820 --> 00:14:28,250
have implantation of pie for each

00:14:24,560 --> 00:14:31,700
platform and then you to actually map it

00:14:28,250 --> 00:14:35,720
to about the condition and assure but

00:14:31,700 --> 00:14:37,970
yeah it's possible solution and

00:14:35,720 --> 00:14:42,980
something not about dishes but fishy

00:14:37,970 --> 00:14:45,020
requests Network inspection is a blow

00:14:42,980 --> 00:14:48,530
from dirty conference and people start

00:14:45,020 --> 00:14:50,900
to use inspector say very fast go to the

00:14:48,530 --> 00:14:56,540
point where they'd like to have some way

00:14:50,900 --> 00:14:59,570
to network and the main problem is cow

00:14:56,540 --> 00:15:11,000
and act not here and what we should

00:14:59,570 --> 00:15:12,800
search I mean I took 12 and yeah it's

00:15:11,000 --> 00:15:14,030
just if you'd like to talk about network

00:15:12,800 --> 00:15:17,050
inspection if you need metal

00:15:14,030 --> 00:15:19,190
construction and if you like to help us

00:15:17,050 --> 00:15:21,260
there

00:15:19,190 --> 00:15:24,860
please join hello from diagnostic issues

00:15:21,260 --> 00:15:30,370
song right now I'm a teacher pass

00:15:24,860 --> 00:15:30,370

YouTube URL: https://www.youtube.com/watch?v=MPQ--UZLLM4


