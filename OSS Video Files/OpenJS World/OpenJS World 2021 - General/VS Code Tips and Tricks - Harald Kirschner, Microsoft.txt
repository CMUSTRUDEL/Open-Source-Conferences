Title: VS Code Tips and Tricks - Harald Kirschner, Microsoft
Publication date: 2021-05-31
Playlist: OpenJS World 2021 - General
Description: 
	VS Code Tips and Tricks new for 2021
Captions: 
	00:00:04,560 --> 00:00:10,559
and

00:00:06,399 --> 00:00:13,679
tricks i open js

00:00:10,559 --> 00:00:14,799
i just got everything ready i'm going to

00:00:13,679 --> 00:00:17,840
present

00:00:14,799 --> 00:00:20,960
to you the best tips and tricks

00:00:17,840 --> 00:00:23,600
that you hopefully can add to your

00:00:20,960 --> 00:00:25,760
day-to-day of coding to have more fun be

00:00:23,600 --> 00:00:29,279
more productive and efficient

00:00:25,760 --> 00:00:32,160
and show off to your friends

00:00:29,279 --> 00:00:34,960
what else do you tip some tricks and

00:00:32,160 --> 00:00:37,840
maybe they learn something new too

00:00:34,960 --> 00:00:38,480
i work on vs code so tips and tricks

00:00:37,840 --> 00:00:41,600
talks

00:00:38,480 --> 00:00:42,320
are a ton of fun for me as well because

00:00:41,600 --> 00:00:46,079
i can

00:00:42,320 --> 00:00:48,160
blend in my personal favorites that i

00:00:46,079 --> 00:00:49,280
show off to everybody who cares to

00:00:48,160 --> 00:00:51,680
listen

00:00:49,280 --> 00:00:52,800
and i can go back to the recent release

00:00:51,680 --> 00:00:55,199
notes

00:00:52,800 --> 00:00:56,719
and get all the amazing work that the

00:00:55,199 --> 00:01:00,239
team has done

00:00:56,719 --> 00:01:01,440
in front of you so you can start using

00:01:00,239 --> 00:01:04,159
them

00:01:01,440 --> 00:01:06,880
and i can go all the way back kind of

00:01:04,159 --> 00:01:10,240
beneath the surface obvious code

00:01:06,880 --> 00:01:13,439
where a lot of amazing features linger

00:01:10,240 --> 00:01:17,280
that users haven't discovered yet so

00:01:13,439 --> 00:01:20,640
i am happy this is my happy place

00:01:17,280 --> 00:01:23,759
to show these tips and tricks to you

00:01:20,640 --> 00:01:26,320
to get things started i mentioned you

00:01:23,759 --> 00:01:28,640
can show these tips and tricks to others

00:01:26,320 --> 00:01:29,439
so how can you best show that often

00:01:28,640 --> 00:01:33,119
there's

00:01:29,439 --> 00:01:36,400
keyboard shortcuts involved and commands

00:01:33,119 --> 00:01:38,960
and all these little ui

00:01:36,400 --> 00:01:40,880
pieces one has to uncover and explain

00:01:38,960 --> 00:01:43,759
how to get there

00:01:40,880 --> 00:01:44,159
so the best way to give tips and tricks

00:01:43,759 --> 00:01:47,920
is

00:01:44,159 --> 00:01:49,520
a remember the command and b

00:01:47,920 --> 00:01:52,799
if you know the command and use it more

00:01:49,520 --> 00:01:55,439
often learn the shortcut

00:01:52,799 --> 00:01:57,360
let's start with that so when you want

00:01:55,439 --> 00:02:02,640
to demo something

00:01:57,360 --> 00:02:02,640
you can enable screencast mode

00:02:03,040 --> 00:02:07,200
you did that so now everything i do in

00:02:05,920 --> 00:02:11,360
vs code

00:02:07,200 --> 00:02:14,319
is highlighted by vs code itself

00:02:11,360 --> 00:02:15,200
if i go back to what i just did type in

00:02:14,319 --> 00:02:16,800
screencast

00:02:15,200 --> 00:02:18,319
hitting command shift p to open the

00:02:16,800 --> 00:02:21,680
command palette first

00:02:18,319 --> 00:02:23,680
or f1

00:02:21,680 --> 00:02:25,120
screencast is already recently used so

00:02:23,680 --> 00:02:27,760
it's already

00:02:25,120 --> 00:02:28,720
now would be off i want to switch it on

00:02:27,760 --> 00:02:32,480
again

00:02:28,720 --> 00:02:34,400
here we go so now if you

00:02:32,480 --> 00:02:36,400
show all your crazy shortcuts you

00:02:34,400 --> 00:02:38,000
customize and learn the new commands

00:02:36,400 --> 00:02:42,560
that you have memorized

00:02:38,000 --> 00:02:42,560
this will help to explain it much better

00:02:42,800 --> 00:02:46,480
this is how obvious code comes out of

00:02:45,120 --> 00:02:49,680
the box

00:02:46,480 --> 00:02:50,560
so part one is we're looking at what are

00:02:49,680 --> 00:02:53,200
kind of

00:02:50,560 --> 00:02:55,120
the customizations that you can do to

00:02:53,200 --> 00:02:58,159
make vs code

00:02:55,120 --> 00:02:59,280
adapt better to your workflow to get the

00:02:58,159 --> 00:03:02,239
tools you most

00:02:59,280 --> 00:03:03,760
use most right in front of you and to

00:03:02,239 --> 00:03:06,400
get just different styles

00:03:03,760 --> 00:03:06,959
that everybody has in the development

00:03:06,400 --> 00:03:10,400
into

00:03:06,959 --> 00:03:11,120
the tool we use most outer box vs code

00:03:10,400 --> 00:03:13,840
comes with

00:03:11,120 --> 00:03:16,159
a lot of amazing tools already there's

00:03:13,840 --> 00:03:19,599
extensions for everything you need

00:03:16,159 --> 00:03:21,920
under the moon and it's a highly

00:03:19,599 --> 00:03:23,760
adaptable ui

00:03:21,920 --> 00:03:26,959
so the first part already showed with a

00:03:23,760 --> 00:03:29,920
screencast mode let's check

00:03:26,959 --> 00:03:32,560
that first so we know it's on and i can

00:03:29,920 --> 00:03:35,840
present what i'm doing

00:03:32,560 --> 00:03:39,200
first off i love

00:03:35,840 --> 00:03:42,480
autosave mode because i keep

00:03:39,200 --> 00:03:43,840
trying to perfect my code and don't save

00:03:42,480 --> 00:03:47,200
enough

00:03:43,840 --> 00:03:47,840
and if i have autosave mode on i make

00:03:47,200 --> 00:03:50,799
sure

00:03:47,840 --> 00:03:51,840
to save often even though i don't hit

00:03:50,799 --> 00:03:55,599
command s

00:03:51,840 --> 00:03:58,000
or hit go into the menu

00:03:55,599 --> 00:03:59,120
and then my build pipelines often set up

00:03:58,000 --> 00:04:01,599
to give me

00:03:59,120 --> 00:04:04,000
an instant preview so i can actually

00:04:01,599 --> 00:04:04,319
work on my code and keep coding away and

00:04:04,000 --> 00:04:07,519
see

00:04:04,319 --> 00:04:08,400
instantly what i'm doing so let's enable

00:04:07,519 --> 00:04:10,959
that

00:04:08,400 --> 00:04:12,959
we open settings move that to the right

00:04:10,959 --> 00:04:16,160
and split pane

00:04:12,959 --> 00:04:17,919
get a little bit more room and autosave

00:04:16,160 --> 00:04:19,600
is actually the first option right on

00:04:17,919 --> 00:04:23,040
top

00:04:19,600 --> 00:04:25,680
to show you how to search you hit up

00:04:23,040 --> 00:04:28,720
auto save within the command

00:04:25,680 --> 00:04:30,479
and it actually shows you two options so

00:04:28,720 --> 00:04:33,919
if i go from off

00:04:30,479 --> 00:04:35,600
to after delay it will now save my file

00:04:33,919 --> 00:04:38,560
every

00:04:35,600 --> 00:04:40,240
every one second so go into this file

00:04:38,560 --> 00:04:43,440
which isn't edited yet

00:04:40,240 --> 00:04:45,840
if i comment something out

00:04:43,440 --> 00:04:48,000
now i have it marked modified after a

00:04:45,840 --> 00:04:51,040
second

00:04:48,000 --> 00:04:53,919
if i edit edit again wait a second

00:04:51,040 --> 00:04:56,639
it's now saved on focus change does the

00:04:53,919 --> 00:04:58,960
same when you switch between taps

00:04:56,639 --> 00:05:00,400
so if you finish it work in one file

00:04:58,960 --> 00:05:05,360
switch to another

00:05:00,400 --> 00:05:08,400
now the file is saved as well if i

00:05:05,360 --> 00:05:11,520
move to on window change

00:05:08,400 --> 00:05:16,080
now if i focus out of vs code

00:05:11,520 --> 00:05:18,880
and back in things are being saved

00:05:16,080 --> 00:05:20,320
and back in so now we have deletions and

00:05:18,880 --> 00:05:23,120
modifications

00:05:20,320 --> 00:05:25,120
all saved let's revert that switch back

00:05:23,120 --> 00:05:27,440
and it saved

00:05:25,120 --> 00:05:28,400
what i recommend is after delay it's the

00:05:27,440 --> 00:05:30,720
easiest

00:05:28,400 --> 00:05:32,080
keeps your work saved you never lose it

00:05:30,720 --> 00:05:34,720
and you keep seeing your changes

00:05:32,080 --> 00:05:38,000
as you work which is makes me feel

00:05:34,720 --> 00:05:41,600
productive at least

00:05:38,000 --> 00:05:45,919
next one up is how

00:05:41,600 --> 00:05:49,280
we actually use the ui this code has

00:05:45,919 --> 00:05:52,560
this left activity bar and it's great

00:05:49,280 --> 00:05:54,800
you have search you have source control

00:05:52,560 --> 00:05:56,639
you have debugging and you can find your

00:05:54,800 --> 00:05:59,039
extensions

00:05:56,639 --> 00:06:00,560
what i don't like i often especially on

00:05:59,039 --> 00:06:01,680
a smaller screen when i work on my

00:06:00,560 --> 00:06:04,080
laptop

00:06:01,680 --> 00:06:05,120
i want to hide and show the sidebar as

00:06:04,080 --> 00:06:08,000
needed

00:06:05,120 --> 00:06:10,720
because if i have the files open i don't

00:06:08,000 --> 00:06:13,840
need to go in there

00:06:10,720 --> 00:06:16,400
but that means probably one of

00:06:13,840 --> 00:06:18,240
you who doesn't like that the windows

00:06:16,400 --> 00:06:21,919
and everything moves around

00:06:18,240 --> 00:06:25,520
so there's two cams sidebar on the left

00:06:21,919 --> 00:06:26,560
and sidebar no right now when you close

00:06:25,520 --> 00:06:31,120
it

00:06:26,560 --> 00:06:32,880
my code stays put which is good

00:06:31,120 --> 00:06:34,800
so you can move anytime back and there's

00:06:32,880 --> 00:06:39,520
a command going with that

00:06:34,800 --> 00:06:41,440
toggle sidebar

00:06:39,520 --> 00:06:43,919
you already see cyber visibility with i

00:06:41,440 --> 00:06:46,479
have been using command b

00:06:43,919 --> 00:06:48,400
and you can see toggle sidebar position

00:06:46,479 --> 00:06:50,319
so let's move it back

00:06:48,400 --> 00:06:53,280
so you can confuse and you can follow

00:06:50,319 --> 00:06:55,680
along on your own

00:06:53,280 --> 00:06:56,960
vs code can do a lot more customizations

00:06:55,680 --> 00:07:00,479
in the ui

00:06:56,960 --> 00:07:03,120
very commonly is

00:07:00,479 --> 00:07:03,919
dragging these icons around where you

00:07:03,120 --> 00:07:07,039
need them

00:07:03,919 --> 00:07:07,919
so you can move extensions up or down

00:07:07,039 --> 00:07:10,960
but let's get a little bit more

00:07:07,919 --> 00:07:14,560
interesting so let's open the terminal

00:07:10,960 --> 00:07:17,120
and what i find a really good way

00:07:14,560 --> 00:07:19,199
to bring things together where i look at

00:07:17,120 --> 00:07:22,479
them at the same time

00:07:19,199 --> 00:07:27,199
is moving for example the debug console

00:07:22,479 --> 00:07:30,240
into the run and debug

00:07:27,199 --> 00:07:31,280
activity bar view now they're in the

00:07:30,240 --> 00:07:33,520
same spot

00:07:31,280 --> 00:07:36,080
i can start debugging i can see my break

00:07:33,520 --> 00:07:38,080
points i can see the debug log output

00:07:36,080 --> 00:07:40,479
i might even be able to close this so i

00:07:38,080 --> 00:07:44,400
have more room for my code

00:07:40,479 --> 00:07:48,400
that's one way get away

00:07:44,400 --> 00:07:50,319
um is search search

00:07:48,400 --> 00:07:52,319
is really amazing in this small sidebar

00:07:50,319 --> 00:07:56,639
for some quick

00:07:52,319 --> 00:08:00,319
quick searches um you look around

00:07:56,639 --> 00:08:04,639
you find your lines you're looking for

00:08:00,319 --> 00:08:04,639
but i also like it down here

00:08:06,000 --> 00:08:10,240
now if i go into search i actually do

00:08:08,319 --> 00:08:13,919
have a lot more room

00:08:10,240 --> 00:08:16,400
and can see the longer lines as well

00:08:13,919 --> 00:08:18,080
so that's another way so bring a search

00:08:16,400 --> 00:08:21,120
back

00:08:18,080 --> 00:08:24,319
i can also bring for example the

00:08:21,120 --> 00:08:27,840
problems view over here

00:08:24,319 --> 00:08:31,120
so now as i go through my problems

00:08:27,840 --> 00:08:34,399
i can again maximize the space i need

00:08:31,120 --> 00:08:36,640
so make the best of the room you have

00:08:34,399 --> 00:08:38,560
on a small screen on a large screen

00:08:36,640 --> 00:08:41,839
adapt it to whatever you need

00:08:38,560 --> 00:08:45,279
but if you get into a weird spot

00:08:41,839 --> 00:08:48,000
you can reset the view locations

00:08:45,279 --> 00:08:49,200
and bring everything back where it was

00:08:48,000 --> 00:08:52,320
what i like to do

00:08:49,200 --> 00:08:55,360
to extend that i showed off search

00:08:52,320 --> 00:08:59,600
in the panel below another way to

00:08:55,360 --> 00:09:02,800
search is using it within the editor

00:08:59,600 --> 00:09:05,120
so we're looking for search

00:09:02,800 --> 00:09:05,120
mode

00:09:06,800 --> 00:09:10,240
it's your search mode and we switch that

00:09:08,720 --> 00:09:12,480
to reuse editor

00:09:10,240 --> 00:09:13,440
which means it will only open in the

00:09:12,480 --> 00:09:15,120
other always

00:09:13,440 --> 00:09:18,000
using the same window if you already

00:09:15,120 --> 00:09:18,000
have search open

00:09:18,399 --> 00:09:25,360
now if we hit search command shift f

00:09:23,200 --> 00:09:26,720
it opens over here so we can actually

00:09:25,360 --> 00:09:29,760
reduce it remove it here

00:09:26,720 --> 00:09:30,399
we don't need any more we can always

00:09:29,760 --> 00:09:33,360
access it

00:09:30,399 --> 00:09:35,360
with the command if we need to or a

00:09:33,360 --> 00:09:39,279
shortcut

00:09:35,360 --> 00:09:41,680
if you search now you'll find that

00:09:39,279 --> 00:09:42,880
it's okay you keep losing your search

00:09:41,680 --> 00:09:46,959
results so now i just

00:09:42,880 --> 00:09:49,519
go back my search go there over here

00:09:46,959 --> 00:09:50,000
so the other setting i recommend with

00:09:49,519 --> 00:09:55,040
that

00:09:50,000 --> 00:09:55,040
is search double click behavior

00:09:55,360 --> 00:09:58,640
in this case it's go to location which

00:09:57,120 --> 00:10:01,519
is default

00:09:58,640 --> 00:10:03,279
and open location to the side is what

00:10:01,519 --> 00:10:06,320
brings the magic

00:10:03,279 --> 00:10:06,800
so now they give to search some space i

00:10:06,320 --> 00:10:09,680
can now

00:10:06,800 --> 00:10:11,440
actually browse through my search

00:10:09,680 --> 00:10:14,560
results

00:10:11,440 --> 00:10:18,560
which get a lot of space in the editor

00:10:14,560 --> 00:10:22,160
with all lines presented and they open

00:10:18,560 --> 00:10:24,959
on the right side to let me use the code

00:10:22,160 --> 00:10:26,720
so this is my favorite style of

00:10:24,959 --> 00:10:29,680
searching

00:10:26,720 --> 00:10:33,839
and it gives me this really nice

00:10:29,680 --> 00:10:33,839
overview of the code

00:10:34,880 --> 00:10:38,720
so let's look at word wrap because you

00:10:37,200 --> 00:10:40,880
can see there's

00:10:38,720 --> 00:10:42,640
a lot of things missing if you use vs

00:10:40,880 --> 00:10:46,079
code in a small space

00:10:42,640 --> 00:10:49,839
or with many split editors

00:10:46,079 --> 00:10:53,680
back to settings word wrap

00:10:49,839 --> 00:10:56,320
is default of envious code

00:10:53,680 --> 00:10:57,519
if you switch it on that's the first

00:10:56,320 --> 00:11:01,440
option

00:10:57,519 --> 00:11:04,560
or the easiest this code will break

00:11:01,440 --> 00:11:07,360
lines whenever they hit

00:11:04,560 --> 00:11:08,480
the borders of the editor which is

00:11:07,360 --> 00:11:12,000
really nice

00:11:08,480 --> 00:11:13,360
for smaller screens just to make things

00:11:12,000 --> 00:11:15,920
fit especially if you

00:11:13,360 --> 00:11:16,480
if you used to be writing longer lines

00:11:15,920 --> 00:11:20,079
like in

00:11:16,480 --> 00:11:23,600
augmentation or markdown

00:11:20,079 --> 00:11:26,240
the other way is word web column

00:11:23,600 --> 00:11:26,880
which then uses the word rep column

00:11:26,240 --> 00:11:29,279
setting

00:11:26,880 --> 00:11:29,920
which is set to 80 and it will just

00:11:29,279 --> 00:11:32,160
break

00:11:29,920 --> 00:11:33,519
on that so the editor window doesn't do

00:11:32,160 --> 00:11:36,079
anything anymore

00:11:33,519 --> 00:11:38,560
but it's just breaking on the 80

00:11:36,079 --> 00:11:41,279
characters limit

00:11:38,560 --> 00:11:42,800
the last option is bounded which is a

00:11:41,279 --> 00:11:45,360
combination of both

00:11:42,800 --> 00:11:46,399
it still uses the 80 limit 80 character

00:11:45,360 --> 00:11:49,440
limit

00:11:46,399 --> 00:11:52,480
to set the limit for each line

00:11:49,440 --> 00:11:55,839
but you can also go in

00:11:52,480 --> 00:11:58,160
and now we'll pick up the editor

00:11:55,839 --> 00:11:59,760
really useful to have it's my default

00:11:58,160 --> 00:12:01,680
user to have it on

00:11:59,760 --> 00:12:03,760
so i can see all the code without

00:12:01,680 --> 00:12:07,200
scrolling left and right

00:12:03,760 --> 00:12:10,720
next up what's really typical in my flow

00:12:07,200 --> 00:12:12,800
is creating a lot of files so like to

00:12:10,720 --> 00:12:16,079
create markdown files

00:12:12,800 --> 00:12:18,000
so when you open up vs code onto a file

00:12:16,079 --> 00:12:21,279
there's not much there and then you have

00:12:18,000 --> 00:12:23,120
to pick the language mode down here

00:12:21,279 --> 00:12:25,360
that's like markdown and now i can take

00:12:23,120 --> 00:12:28,399
my notes

00:12:25,360 --> 00:12:28,399
the other way to do this

00:12:28,639 --> 00:12:35,839
is picking up

00:12:31,760 --> 00:12:39,120
the default default

00:12:35,839 --> 00:12:40,720
language mode

00:12:39,120 --> 00:12:43,440
let's go up here default formatter

00:12:40,720 --> 00:12:46,560
default language that's it

00:12:43,440 --> 00:12:48,160
so default language mode is assigned to

00:12:46,560 --> 00:12:50,240
every new file you create that's

00:12:48,160 --> 00:12:53,839
untitled

00:12:50,240 --> 00:12:56,320
so reset that to markdown

00:12:53,839 --> 00:12:57,839
now each file we create will

00:12:56,320 --> 00:13:01,120
automatically

00:12:57,839 --> 00:13:01,120
be a markdown file

00:13:03,040 --> 00:13:08,480
which is great for taking notes or just

00:13:05,360 --> 00:13:11,760
scribbling down your to-do

00:13:08,480 --> 00:13:15,120
the other option is setting it to

00:13:11,760 --> 00:13:17,680
active ad editor language

00:13:15,120 --> 00:13:18,399
which will pick up the latest the last

00:13:17,680 --> 00:13:23,120
file

00:13:18,399 --> 00:13:26,399
you have in index.js create a new file

00:13:23,120 --> 00:13:28,880
will create an index.js file

00:13:26,399 --> 00:13:30,560
open the function and everything is

00:13:28,880 --> 00:13:32,720
already set to javascript and i can save

00:13:30,560 --> 00:13:35,920
it wherever i need

00:13:32,720 --> 00:13:38,720
if i am in an html file

00:13:35,920 --> 00:13:40,399
i can continue creating more html files

00:13:38,720 --> 00:13:43,920
really useful

00:13:40,399 --> 00:13:46,399
and feels just right next up

00:13:43,920 --> 00:13:48,079
you see i already created a lot of

00:13:46,399 --> 00:13:51,760
different files i'm working on

00:13:48,079 --> 00:13:53,519
my project pin tabs was one of the most

00:13:51,760 --> 00:13:56,720
requested features

00:13:53,519 --> 00:13:58,399
that we had in our backlog

00:13:56,720 --> 00:14:00,000
and it finally landed in the recent

00:13:58,399 --> 00:14:02,399
releases

00:14:00,000 --> 00:14:03,360
let me show you how it works in this

00:14:02,399 --> 00:14:06,000
case

00:14:03,360 --> 00:14:07,680
i'm working on app.js as my main project

00:14:06,000 --> 00:14:09,279
and i keep clicking around in other

00:14:07,680 --> 00:14:12,320
parts of the project

00:14:09,279 --> 00:14:15,360
but i keep i don't want to lose app.js

00:14:12,320 --> 00:14:17,199
i can just hit pin on that file

00:14:15,360 --> 00:14:18,480
on the tab and now you see a little pin

00:14:17,199 --> 00:14:20,639
appearing

00:14:18,480 --> 00:14:22,160
and it's it will not not go away it will

00:14:20,639 --> 00:14:25,600
always stay around

00:14:22,160 --> 00:14:26,639
can't just close it similar to in the

00:14:25,600 --> 00:14:30,639
browser

00:14:26,639 --> 00:14:33,199
these tabs are made to stay

00:14:30,639 --> 00:14:35,279
pin tabs has some really cool

00:14:33,199 --> 00:14:38,720
customizations as well

00:14:35,279 --> 00:14:40,160
pin tabs tabs

00:14:38,720 --> 00:14:42,160
you can make them a little bit more

00:14:40,160 --> 00:14:43,199
compact because this file is taking a

00:14:42,160 --> 00:14:47,120
lot of space

00:14:43,199 --> 00:14:49,839
in my tab bar all the time now compact

00:14:47,120 --> 00:14:51,120
allows you to just limit it to the file

00:14:49,839 --> 00:14:53,600
icon

00:14:51,120 --> 00:14:54,560
and shrink will still show you the first

00:14:53,600 --> 00:14:58,160
characters

00:14:54,560 --> 00:15:00,160
so as you pin more files

00:14:58,160 --> 00:15:01,760
you have still an idea of what's behind

00:15:00,160 --> 00:15:04,160
them

00:15:01,760 --> 00:15:06,880
i like this part especially this works

00:15:04,160 --> 00:15:06,880
well for me now

00:15:06,959 --> 00:15:10,000
so what else can i do to actually make

00:15:08,720 --> 00:15:13,920
use of all these

00:15:10,000 --> 00:15:17,760
tabs i have opened to see them

00:15:13,920 --> 00:15:21,440
we just recently as well added

00:15:17,760 --> 00:15:21,440
wrap tabs

00:15:22,320 --> 00:15:28,560
to enable it finally

00:15:25,600 --> 00:15:30,079
all the files i have open and the tabs i

00:15:28,560 --> 00:15:33,440
keep hoarding

00:15:30,079 --> 00:15:34,880
are at my fingertips so i can close them

00:15:33,440 --> 00:15:36,240
i can clean them up maybe i want to get

00:15:34,880 --> 00:15:39,680
my space back

00:15:36,240 --> 00:15:41,680
but this really allows you to remove

00:15:39,680 --> 00:15:43,759
just need to scroll and go left and

00:15:41,680 --> 00:15:47,120
right to refine things

00:15:43,759 --> 00:15:51,680
so that plus pin tabs allows you to

00:15:47,120 --> 00:15:51,680
really get on top of your tab hoarding

00:15:52,560 --> 00:15:56,399
so we customize the ui we customized

00:15:55,360 --> 00:15:59,120
tabs

00:15:56,399 --> 00:16:01,040
we really improved our productivity and

00:15:59,120 --> 00:16:02,639
now i really don't want to lose those

00:16:01,040 --> 00:16:05,360
changes

00:16:02,639 --> 00:16:06,639
the way to do that to not just back your

00:16:05,360 --> 00:16:08,560
changes up

00:16:06,639 --> 00:16:10,560
but also bring them in all the other bs

00:16:08,560 --> 00:16:11,120
code machines like your personal one and

00:16:10,560 --> 00:16:14,959
you

00:16:11,120 --> 00:16:18,639
work one and your vms you can use

00:16:14,959 --> 00:16:20,480
settings sync it's built into vs code so

00:16:18,639 --> 00:16:23,839
nothing else to install

00:16:20,480 --> 00:16:25,600
just go into the menu here turn on

00:16:23,839 --> 00:16:28,160
settings sync

00:16:25,600 --> 00:16:30,000
it will ask you which pieces of your

00:16:28,160 --> 00:16:33,040
customizations you want to

00:16:30,000 --> 00:16:34,000
bring in i want to bring everything you

00:16:33,040 --> 00:16:36,560
sign in

00:16:34,000 --> 00:16:37,920
you pick the channel i'm on insiders so

00:16:36,560 --> 00:16:38,320
i'm not going to pick that you can have

00:16:37,920 --> 00:16:40,160
both

00:16:38,320 --> 00:16:41,920
installed site by site and sync

00:16:40,160 --> 00:16:44,240
differently

00:16:41,920 --> 00:16:47,839
i'm going to pick my github account you

00:16:44,240 --> 00:16:47,839
can also pick your microsoft login

00:16:48,079 --> 00:16:55,759
and now this code uploads

00:16:51,759 --> 00:16:58,800
everything that i customized

00:16:55,759 --> 00:17:00,959
onto my account

00:16:58,800 --> 00:17:02,399
and it's turned on any changes that i

00:17:00,959 --> 00:17:05,600
made

00:17:02,399 --> 00:17:08,240
like the settings everything else

00:17:05,600 --> 00:17:10,799
is now securely backed up and i can

00:17:08,240 --> 00:17:13,980
bring into the next vs code instance

00:17:10,799 --> 00:17:15,039
this is a fresh vs code installation

00:17:13,980 --> 00:17:17,760
[Music]

00:17:15,039 --> 00:17:18,959
that has nothing set up look at the

00:17:17,760 --> 00:17:22,720
settings

00:17:18,959 --> 00:17:25,760
it's empty nothing happened here

00:17:22,720 --> 00:17:28,799
i want to get my changes in so in this

00:17:25,760 --> 00:17:32,080
instance as well turn on settings sync

00:17:28,799 --> 00:17:35,120
select everything pick insiders

00:17:32,080 --> 00:17:36,400
github accounts save to my system now it

00:17:35,120 --> 00:17:38,720
will get

00:17:36,400 --> 00:17:39,840
everything in it's already there what

00:17:38,720 --> 00:17:42,400
happened

00:17:39,840 --> 00:17:43,760
so now if i customize further here let's

00:17:42,400 --> 00:17:46,400
pick a color theme

00:17:43,760 --> 00:17:47,600
maybe in today i'm in the mood for some

00:17:46,400 --> 00:17:51,039
more

00:17:47,600 --> 00:17:54,320
red and

00:17:51,039 --> 00:17:54,320
let's keep working over here

00:17:54,799 --> 00:17:59,360
settings extensions everything will be

00:17:58,400 --> 00:18:02,880
synchronized

00:17:59,360 --> 00:18:05,120
across your vs code and always one tap

00:18:02,880 --> 00:18:05,120
away

00:18:05,440 --> 00:18:12,400
next up let's look at intellisense

00:18:09,280 --> 00:18:14,960
and javascript debugging one of the most

00:18:12,400 --> 00:18:16,480
useful things on a day to day while

00:18:14,960 --> 00:18:18,720
using vs code

00:18:16,480 --> 00:18:20,080
and how we can make it even easier with

00:18:18,720 --> 00:18:23,520
the right shortcuts

00:18:20,080 --> 00:18:25,520
and the right settings first off expand

00:18:23,520 --> 00:18:29,039
and shrink selection

00:18:25,520 --> 00:18:32,720
this shortcut and during screencast mode

00:18:29,039 --> 00:18:36,080
is one of the most powerful to navigate

00:18:32,720 --> 00:18:39,360
your elements quickly pressing

00:18:36,080 --> 00:18:41,679
ctrl shift left and right

00:18:39,360 --> 00:18:42,640
allows you to go from your current

00:18:41,679 --> 00:18:45,760
selection

00:18:42,640 --> 00:18:48,880
expanding it and shrinking it back

00:18:45,760 --> 00:18:49,520
to the next expression up and down this

00:18:48,880 --> 00:18:54,000
works great

00:18:49,520 --> 00:18:57,440
in html to get the whole tag

00:18:54,000 --> 00:19:00,559
or just a part of the attribute

00:18:57,440 --> 00:19:02,160
the whole tag the parent parent element

00:19:00,559 --> 00:19:05,840
and then going up to the whole document

00:19:02,160 --> 00:19:08,880
and all the way back

00:19:05,840 --> 00:19:11,200
in javascript it works the same way

00:19:08,880 --> 00:19:12,559
you can select the current word the

00:19:11,200 --> 00:19:15,600
current object

00:19:12,559 --> 00:19:16,240
the current function call and all the

00:19:15,600 --> 00:19:20,320
way

00:19:16,240 --> 00:19:24,320
up and down one special trick

00:19:20,320 --> 00:19:27,440
it works in markdown expanding here

00:19:24,320 --> 00:19:31,039
we'll select the current code block

00:19:27,440 --> 00:19:33,440
then going up to the next header

00:19:31,039 --> 00:19:34,799
this way you can quickly navigate even

00:19:33,440 --> 00:19:37,520
within markdown

00:19:34,799 --> 00:19:40,080
giving the that vs code knows a lot

00:19:37,520 --> 00:19:43,039
about your code

00:19:40,080 --> 00:19:44,559
the next trick we have powered up is

00:19:43,039 --> 00:19:47,679
intellisense

00:19:44,559 --> 00:19:51,520
the insert mode if i go

00:19:47,679 --> 00:19:54,640
for example in the router

00:19:51,520 --> 00:19:55,679
intellisense command space is what

00:19:54,640 --> 00:19:57,520
powers

00:19:55,679 --> 00:19:59,120
this autocomplete i go back on the

00:19:57,520 --> 00:20:03,600
router i will see

00:19:59,120 --> 00:20:06,799
all the methods on the express runner

00:20:03,600 --> 00:20:10,000
if i now go in and hit delete

00:20:06,799 --> 00:20:13,600
it will insert the value

00:20:10,000 --> 00:20:16,159
going into settings searching for

00:20:13,600 --> 00:20:16,159
suggest

00:20:17,600 --> 00:20:23,600
insert as insert mode

00:20:21,200 --> 00:20:25,840
you have the editor suggest insert mode

00:20:23,600 --> 00:20:28,640
let's switch it to replace by default

00:20:25,840 --> 00:20:30,000
which i feel more intuitive it does

00:20:28,640 --> 00:20:32,880
delete the text which is why

00:20:30,000 --> 00:20:33,760
insert is the default so you don't lose

00:20:32,880 --> 00:20:37,280
any of your

00:20:33,760 --> 00:20:40,799
text now if i start with the old get

00:20:37,280 --> 00:20:43,280
i can now go back pick this

00:20:40,799 --> 00:20:43,280
what about

00:20:44,559 --> 00:20:52,799
just post now this function is replaced

00:20:48,320 --> 00:20:55,280
we can do the same in other elements

00:20:52,799 --> 00:20:58,720
get element by id i could replace it

00:20:55,280 --> 00:20:58,720
with get elements by tag name

00:20:59,120 --> 00:21:02,720
and the whole thing so you can go back

00:21:01,760 --> 00:21:05,280
and forth

00:21:02,720 --> 00:21:06,000
and expand and reduce what you're

00:21:05,280 --> 00:21:10,240
looking for

00:21:06,000 --> 00:21:12,720
if it's just a simple rename select it

00:21:10,240 --> 00:21:13,520
how do you find out that this exists

00:21:12,720 --> 00:21:17,200
does the other

00:21:13,520 --> 00:21:21,679
suggest status bar

00:21:17,200 --> 00:21:24,720
which is a neat addition to

00:21:21,679 --> 00:21:27,280
the suggestion box that's popping up

00:21:24,720 --> 00:21:29,200
now vs code will tell you how to do

00:21:27,280 --> 00:21:32,159
replace which is the default

00:21:29,200 --> 00:21:34,320
and how to toggle over to an insert now

00:21:32,159 --> 00:21:37,679
if i have

00:21:34,320 --> 00:21:40,240
the get rid note i press command

00:21:37,679 --> 00:21:40,880
enter it will actually do the old way of

00:21:40,240 --> 00:21:43,840
the insert

00:21:40,880 --> 00:21:45,120
which i switched off you can also show

00:21:43,840 --> 00:21:47,520
more

00:21:45,120 --> 00:21:48,960
it's especially useful for web

00:21:47,520 --> 00:21:51,919
functionality control

00:21:48,960 --> 00:21:53,039
space you can see the very rich

00:21:51,919 --> 00:21:56,559
documentation for

00:21:53,039 --> 00:21:57,200
css html and javascript that comes baked

00:21:56,559 --> 00:21:59,679
in

00:21:57,200 --> 00:22:02,400
all the rich typescript annotations that

00:21:59,679 --> 00:22:02,400
your code has

00:22:02,480 --> 00:22:05,600
you can also resize those if you need

00:22:04,799 --> 00:22:08,400
more space

00:22:05,600 --> 00:22:09,600
or less space on a small screen i love

00:22:08,400 --> 00:22:12,960
to have those

00:22:09,600 --> 00:22:13,600
it's a little bigger the next feature

00:22:12,960 --> 00:22:15,120
area

00:22:13,600 --> 00:22:17,440
i'd like to share some tips and tricks

00:22:15,120 --> 00:22:20,559
for is the javascript debugger

00:22:17,440 --> 00:22:21,039
that comes built in with vs code last

00:22:20,559 --> 00:22:23,520
year

00:22:21,039 --> 00:22:25,600
the team launched a new version and has

00:22:23,520 --> 00:22:27,679
a few tricks up its sleeves that make it

00:22:25,600 --> 00:22:29,840
really easy to set up without doing the

00:22:27,679 --> 00:22:32,799
whole launch to adjacent dance

00:22:29,840 --> 00:22:34,159
and getting the team on boarded the

00:22:32,799 --> 00:22:35,919
first way

00:22:34,159 --> 00:22:38,480
to debug any script that you already

00:22:35,919 --> 00:22:41,600
have to find in a package or json

00:22:38,480 --> 00:22:45,360
is this code lens that gets added to

00:22:41,600 --> 00:22:47,760
the file hit debug

00:22:45,360 --> 00:22:48,880
start this will launch a javascript

00:22:47,760 --> 00:22:52,720
debug terminal

00:22:48,880 --> 00:22:56,400
for you with the script executing

00:22:52,720 --> 00:23:01,280
now the script is running and my server

00:22:56,400 --> 00:23:01,280
is up i can open a browser

00:23:02,960 --> 00:23:09,200
that shows the output my beautiful app

00:23:06,559 --> 00:23:11,440
now the debugging is running i can go

00:23:09,200 --> 00:23:14,400
into my server side code

00:23:11,440 --> 00:23:14,400
set breakpoints

00:23:16,159 --> 00:23:23,520
refresh and debug everything

00:23:19,679 --> 00:23:26,640
i like to know about if i step over this

00:23:23,520 --> 00:23:27,440
and now the image path set i can edit

00:23:26,640 --> 00:23:30,880
things

00:23:27,440 --> 00:23:30,880
which is the amazing part of debugging

00:23:31,360 --> 00:23:37,760
and continue now when at the button the

00:23:34,559 --> 00:23:40,799
cat is replaced by a dog

00:23:37,760 --> 00:23:40,799
which is how it should be

00:23:43,919 --> 00:23:50,480
refishing again without the break point

00:23:47,039 --> 00:23:54,400
we have the old cat back

00:23:50,480 --> 00:23:57,200
this is one way the other way is

00:23:54,400 --> 00:23:58,080
launching a javascript debug terminal on

00:23:57,200 --> 00:24:02,000
your own

00:23:58,080 --> 00:24:04,240
if you kill this terminal go

00:24:02,000 --> 00:24:07,600
into the command palette search for

00:24:04,240 --> 00:24:07,600
javascript debug terminal

00:24:07,840 --> 00:24:15,039
and get this it's opens up

00:24:11,600 --> 00:24:15,679
in the terminal panel but now every node

00:24:15,039 --> 00:24:19,360
script

00:24:15,679 --> 00:24:20,720
you execute from here will be launched

00:24:19,360 --> 00:24:23,840
in debug mode

00:24:20,720 --> 00:24:25,520
even just a simple file and script like

00:24:23,840 --> 00:24:26,480
this that doesn't even have a package of

00:24:25,520 --> 00:24:31,600
json

00:24:26,480 --> 00:24:37,039
i can now launch set a breakpoint in

00:24:31,600 --> 00:24:37,039
hit note hello dot js

00:24:38,400 --> 00:24:44,960
and start debugging while you debug

00:24:42,480 --> 00:24:45,600
everything that happens will be printed

00:24:44,960 --> 00:24:48,720
to the

00:24:45,600 --> 00:24:49,200
debug console so i now continue i will

00:24:48,720 --> 00:24:52,480
see the

00:24:49,200 --> 00:24:56,240
world output here so you get logging

00:24:52,480 --> 00:25:00,799
and debugging all in one combined within

00:24:56,240 --> 00:25:04,000
vs code so no context switching

00:25:00,799 --> 00:25:04,000
the other way to launch

00:25:04,480 --> 00:25:09,840
let's use the same let's use the same

00:25:08,240 --> 00:25:13,279
debug terminal

00:25:09,840 --> 00:25:14,799
for our app we knew we had a breakpoint

00:25:13,279 --> 00:25:18,400
here before

00:25:14,799 --> 00:25:20,000
if we just hit npm start now

00:25:18,400 --> 00:25:22,240
same thing will happen all the node

00:25:20,000 --> 00:25:23,919
processes are launched

00:25:22,240 --> 00:25:26,080
are being inspected and running in the

00:25:23,919 --> 00:25:30,400
debugger

00:25:26,080 --> 00:25:33,120
if we now reload the app

00:25:30,400 --> 00:25:36,080
we're again paused we can now again just

00:25:33,120 --> 00:25:39,760
like in the browser go to debug console

00:25:36,080 --> 00:25:44,080
and inspect the state of the app

00:25:39,760 --> 00:25:47,120
now it's undefined stepping one back in

00:25:44,080 --> 00:25:48,320
it's again defined we can poke around at

00:25:47,120 --> 00:25:49,760
all the little

00:25:48,320 --> 00:25:51,600
things that are running within the app

00:25:49,760 --> 00:25:57,520
we can expand the objects and everything

00:25:51,600 --> 00:26:00,000
else happening within the debug console

00:25:57,520 --> 00:26:01,360
the best trick what i find it really

00:26:00,000 --> 00:26:04,000
connects it all

00:26:01,360 --> 00:26:05,679
it's not just going from the server side

00:26:04,000 --> 00:26:06,799
but also going to the client side as

00:26:05,679 --> 00:26:08,799
well

00:26:06,799 --> 00:26:10,559
now that the app is running it prints

00:26:08,799 --> 00:26:13,919
out where it's running

00:26:10,559 --> 00:26:17,200
so if i launch this

00:26:13,919 --> 00:26:20,480
link it will open chrome

00:26:17,200 --> 00:26:20,480
with the debugger connected

00:26:21,840 --> 00:26:25,840
i'm going to remove this breakpoint so

00:26:23,200 --> 00:26:25,840
you have loads

00:26:25,919 --> 00:26:28,480
now we have the app running in the

00:26:27,120 --> 00:26:29,520
browser and

00:26:28,480 --> 00:26:31,279
[Music]

00:26:29,520 --> 00:26:34,480
this file which is running in the

00:26:31,279 --> 00:26:38,000
browser is running in debug mode

00:26:34,480 --> 00:26:40,480
if i set a breakpoint here i can now

00:26:38,000 --> 00:26:41,520
inspect the state of everything of the

00:26:40,480 --> 00:26:46,880
world

00:26:41,520 --> 00:26:50,400
within vs code again go to debug console

00:26:46,880 --> 00:26:54,480
see what is power toggled

00:26:50,400 --> 00:26:58,240
i can change power toggled

00:26:54,480 --> 00:27:01,760
really screw up the state of the world

00:26:58,240 --> 00:27:04,960
move the breakpoint continue

00:27:01,760 --> 00:27:08,960
now oh yeah now

00:27:04,960 --> 00:27:11,520
i want it but makes the point

00:27:08,960 --> 00:27:14,159
let's fix it again set the breakpoint

00:27:11,520 --> 00:27:14,159
hit the button

00:27:14,720 --> 00:27:21,120
so reset for toggled

00:27:17,840 --> 00:27:23,200
and continue the other way to go about

00:27:21,120 --> 00:27:25,039
it

00:27:23,200 --> 00:27:26,480
and this bridge is the gap to console

00:27:25,039 --> 00:27:31,039
logging is adding log

00:27:26,480 --> 00:27:31,039
points paw is

00:27:31,679 --> 00:27:38,480
toggled now that

00:27:34,960 --> 00:27:39,679
enter this is a log point and every time

00:27:38,480 --> 00:27:42,480
again in the browser

00:27:39,679 --> 00:27:43,679
when this code runs it will not break

00:27:42,480 --> 00:27:46,799
and pause

00:27:43,679 --> 00:27:49,919
but actually just print the statement

00:27:46,799 --> 00:27:52,000
and the expression i added i find the

00:27:49,919 --> 00:27:55,840
new javascript debugger amazing

00:27:52,000 --> 00:27:58,399
any app i run i run it through vs code

00:27:55,840 --> 00:28:00,240
so anytime i run into an issue i have

00:27:58,399 --> 00:28:00,960
something i need to clarify within the

00:28:00,240 --> 00:28:02,480
code

00:28:00,960 --> 00:28:04,720
i can just add a lock point or a

00:28:02,480 --> 00:28:07,919
breakpoint and do whatever i need to do

00:28:04,720 --> 00:28:09,919
to get to the root cause of it for me

00:28:07,919 --> 00:28:11,760
that's a lot easier than sprinkling in

00:28:09,919 --> 00:28:13,440
console logs and occasionally forgetting

00:28:11,760 --> 00:28:17,840
one when i committed

00:28:13,440 --> 00:28:17,840
so try it out hopefully you like it too

00:28:18,240 --> 00:28:21,760
now that our app is running and the

00:28:20,000 --> 00:28:24,320
debugger attached i can show you the

00:28:21,760 --> 00:28:27,120
last and probably most amazing part

00:28:24,320 --> 00:28:27,840
of the new infrastructure it's really

00:28:27,120 --> 00:28:30,640
important

00:28:27,840 --> 00:28:32,399
to make things fast for your app not

00:28:30,640 --> 00:28:33,360
just in the back end where you serve the

00:28:32,399 --> 00:28:35,200
data

00:28:33,360 --> 00:28:36,720
and serve the pages but also in the

00:28:35,200 --> 00:28:39,440
front end where things have to

00:28:36,720 --> 00:28:41,120
be responsive for the user to actually

00:28:39,440 --> 00:28:44,880
click on

00:28:41,120 --> 00:28:48,159
looking at my app i created this slash

00:28:44,880 --> 00:28:50,080
data endpoint that takes a while

00:28:48,159 --> 00:28:51,919
to serve this really important business

00:28:50,080 --> 00:28:54,880
data

00:28:51,919 --> 00:28:54,880
looking at the app

00:28:55,200 --> 00:28:59,600
there's the code let's find out why is

00:28:57,679 --> 00:29:02,720
it slow

00:28:59,600 --> 00:29:04,080
to start profiling we have to look at

00:29:02,720 --> 00:29:07,279
the call stack

00:29:04,080 --> 00:29:09,520
within the run and debug menu and then

00:29:07,279 --> 00:29:11,279
see the take performance profile button

00:29:09,520 --> 00:29:14,480
on the left little circle

00:29:11,279 --> 00:29:15,679
with a dot inside take performance

00:29:14,480 --> 00:29:17,919
profile is also the

00:29:15,679 --> 00:29:20,320
command that you can look up and maybe

00:29:17,919 --> 00:29:24,720
assign to a hotkey

00:29:20,320 --> 00:29:28,640
let's start profiling this one

00:29:24,720 --> 00:29:32,399
the node.js process for about

00:29:28,640 --> 00:29:36,799
10 seconds go back to server

00:29:32,399 --> 00:29:38,640
hit it with requests refresh a few times

00:29:36,799 --> 00:29:40,559
as soon as the 10 seconds are over vs

00:29:38,640 --> 00:29:43,520
code will serve us

00:29:40,559 --> 00:29:44,720
with the profile profiles by default

00:29:43,520 --> 00:29:47,120
sorted by self time

00:29:44,720 --> 00:29:49,520
which shows you the function first that

00:29:47,120 --> 00:29:52,720
does the most computing

00:29:49,520 --> 00:29:54,880
in this case it's merge.js the other

00:29:52,720 --> 00:29:56,880
aggregate is total time which also

00:29:54,880 --> 00:30:00,320
includes all the leave nodes of that

00:29:56,880 --> 00:30:02,240
function and everything it calls into

00:30:00,320 --> 00:30:04,240
so going to merge we can actually go in

00:30:02,240 --> 00:30:07,039
this is called by merge sort

00:30:04,240 --> 00:30:08,480
and the novice function and doing some

00:30:07,039 --> 00:30:10,000
more processing so let's look at the

00:30:08,480 --> 00:30:12,399
function itself

00:30:10,000 --> 00:30:13,200
within vs code you will get a code lens

00:30:12,399 --> 00:30:16,480
that

00:30:13,200 --> 00:30:19,120
shows the profiling layer we collected

00:30:16,480 --> 00:30:20,000
in the context of the function for

00:30:19,120 --> 00:30:22,480
app.js

00:30:20,000 --> 00:30:24,320
this also shows forget data with self

00:30:22,480 --> 00:30:26,240
time and total time

00:30:24,320 --> 00:30:27,600
showing here that this function itself

00:30:26,240 --> 00:30:30,559
was really fast but

00:30:27,600 --> 00:30:33,200
overall in total it called some really

00:30:30,559 --> 00:30:35,360
expensive functions

00:30:33,200 --> 00:30:37,440
the other way to monitor is using the

00:30:35,360 --> 00:30:40,720
real-time performance

00:30:37,440 --> 00:30:42,399
let's give it some room and we can see

00:30:40,720 --> 00:30:44,640
this real-time performance graph

00:30:42,399 --> 00:30:47,600
which is provided by an extension

00:30:44,640 --> 00:30:50,799
install the vs code.js profile flame

00:30:47,600 --> 00:30:53,919
extension which adds this panel

00:30:50,799 --> 00:30:57,039
to the run and debug panel

00:30:53,919 --> 00:30:58,399
now we see cpu and heap let's give it

00:30:57,039 --> 00:31:00,399
something to do

00:30:58,399 --> 00:31:01,679
we can see the cpu usage is going up to

00:31:00,399 --> 00:31:03,919
100 percent

00:31:01,679 --> 00:31:05,279
and the heap because of gcn is also

00:31:03,919 --> 00:31:06,480
going up

00:31:05,279 --> 00:31:08,799
and that you see it's happening and

00:31:06,480 --> 00:31:12,480
things are lower again the same

00:31:08,799 --> 00:31:13,760
works on the front end now if we go into

00:31:12,480 --> 00:31:16,960
the call stack

00:31:13,760 --> 00:31:16,960
and select the browser

00:31:17,360 --> 00:31:22,000
we'll get even more data now we can

00:31:20,320 --> 00:31:25,760
monitor

00:31:22,000 --> 00:31:25,760
going back to our original page

00:31:25,840 --> 00:31:31,360
we can monitor dom nodes and layouts

00:31:29,360 --> 00:31:32,480
and style recalculations on an ongoing

00:31:31,360 --> 00:31:35,519
basis

00:31:32,480 --> 00:31:36,799
monitoring how fast or front-end is and

00:31:35,519 --> 00:31:41,600
what potentially could cause

00:31:36,799 --> 00:31:42,880
issues i'm excited for how easy this

00:31:41,600 --> 00:31:45,279
makes it

00:31:42,880 --> 00:31:46,799
to work on performance as you do your

00:31:45,279 --> 00:31:48,799
day-to-day coding

00:31:46,799 --> 00:31:49,840
not just for your back end but also your

00:31:48,799 --> 00:31:53,760
front end

00:31:49,840 --> 00:31:53,760
and all in one interface

00:31:54,240 --> 00:31:58,559
that was it thanks so much for watching

00:31:56,880 --> 00:31:59,519
i hope you have a blast adding these

00:31:58,559 --> 00:32:02,000
tips and tricks

00:31:59,519 --> 00:32:03,760
to your daily routine with vs code

00:32:02,000 --> 00:32:06,080
follow us on twitter and techtalk

00:32:03,760 --> 00:32:07,600
for even more tips and tricks and keep

00:32:06,080 --> 00:32:09,279
checking out the release notes that we

00:32:07,600 --> 00:32:11,120
put out on a monthly basis

00:32:09,279 --> 00:32:13,679
for any new additions that might help

00:32:11,120 --> 00:32:20,159
you i'm herald kirschner

00:32:13,679 --> 00:32:20,159

YouTube URL: https://www.youtube.com/watch?v=pcbhZVUaRJc


