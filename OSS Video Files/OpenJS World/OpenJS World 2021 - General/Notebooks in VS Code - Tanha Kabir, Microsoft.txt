Title: Notebooks in VS Code - Tanha Kabir, Microsoft
Publication date: 2021-05-31
Playlist: OpenJS World 2021 - General
Description: 
	A deep dive into what Notebooks are and how to use them in VS Code.
Captions: 
	00:00:00,799 --> 00:00:05,200
hello welcome to

00:00:03,040 --> 00:00:06,319
learning more about notebooks in visual

00:00:05,200 --> 00:00:08,960
studio code

00:00:06,319 --> 00:00:11,040
my name is tana and i am a program

00:00:08,960 --> 00:00:13,280
manager on the vs code team

00:00:11,040 --> 00:00:14,400
and today i'll walk you through what

00:00:13,280 --> 00:00:17,520
notebooks are

00:00:14,400 --> 00:00:19,359
and what they look like in vs code as

00:00:17,520 --> 00:00:22,320
well as some custom notebooks that we

00:00:19,359 --> 00:00:24,880
have that are exclusive to bs code

00:00:22,320 --> 00:00:25,680
so let's get started and the first

00:00:24,880 --> 00:00:29,279
question

00:00:25,680 --> 00:00:32,320
to ask is what is

00:00:29,279 --> 00:00:34,719
a notebook what makes a notebook so

00:00:32,320 --> 00:00:35,520
a notebook consists of three types of

00:00:34,719 --> 00:00:38,000
items

00:00:35,520 --> 00:00:40,320
one is a markdown cell and these are

00:00:38,000 --> 00:00:41,280
rich markdown cells that can contain

00:00:40,320 --> 00:00:44,239
headers

00:00:41,280 --> 00:00:45,280
bullets images whatever you would

00:00:44,239 --> 00:00:47,360
normally expect

00:00:45,280 --> 00:00:48,399
to be able to be rendered in a markdown

00:00:47,360 --> 00:00:51,280
cell

00:00:48,399 --> 00:00:52,160
code and this right in this example is

00:00:51,280 --> 00:00:55,440
python

00:00:52,160 --> 00:00:56,000
but it could be any any other major

00:00:55,440 --> 00:00:59,280
language

00:00:56,000 --> 00:01:02,320
like javascript java r

00:00:59,280 --> 00:01:04,400
julia many other languages and then

00:01:02,320 --> 00:01:05,600
finally output cells that correspond to

00:01:04,400 --> 00:01:09,040
code cells

00:01:05,600 --> 00:01:11,439
and these outputs can be complex like

00:01:09,040 --> 00:01:12,080
this data frame here which is

00:01:11,439 --> 00:01:16,320
essentially

00:01:12,080 --> 00:01:18,560
just a csv view of data

00:01:16,320 --> 00:01:21,200
as well as they can be interactive so it

00:01:18,560 --> 00:01:23,920
could be a plot

00:01:21,200 --> 00:01:25,280
or it could just be plain text so just

00:01:23,920 --> 00:01:28,720
like your system

00:01:25,280 --> 00:01:32,560
print lines or your console logs

00:01:28,720 --> 00:01:34,400
so notebooks are pretty interesting and

00:01:32,560 --> 00:01:36,079
they've definitely become really popular

00:01:34,400 --> 00:01:39,280
in recent years but they're actually

00:01:36,079 --> 00:01:40,159
not that new of a concept so notebooks

00:01:39,280 --> 00:01:42,799
were first

00:01:40,159 --> 00:01:43,840
uh coined as literate programming by

00:01:42,799 --> 00:01:46,960
donald knuth

00:01:43,840 --> 00:01:48,880
from stanford university in 1984. so he

00:01:46,960 --> 00:01:51,759
was working on his thesis

00:01:48,880 --> 00:01:52,720
on various algorithms and programs that

00:01:51,759 --> 00:01:55,439
he was working on

00:01:52,720 --> 00:01:56,320
and he wanted to be able to share his

00:01:55,439 --> 00:01:58,079
code

00:01:56,320 --> 00:01:59,920
to someone else and be completely human

00:01:58,079 --> 00:02:01,360
readable he didn't want to have to

00:01:59,920 --> 00:02:04,159
explain what was happening

00:02:01,360 --> 00:02:04,719
and have to guide a user through what's

00:02:04,159 --> 00:02:06,640
happening

00:02:04,719 --> 00:02:08,959
with a separate piece of documentation

00:02:06,640 --> 00:02:11,520
so he wanted all in one document

00:02:08,959 --> 00:02:12,800
so he came up with this idea of having

00:02:11,520 --> 00:02:15,200
these code macros

00:02:12,800 --> 00:02:16,400
in inserted within rich text so he can

00:02:15,200 --> 00:02:18,959
explain what's happening

00:02:16,400 --> 00:02:20,879
and then have some code that shows how

00:02:18,959 --> 00:02:23,520
to do whatever he's explaining

00:02:20,879 --> 00:02:26,000
and then have some possible outputs in

00:02:23,520 --> 00:02:29,040
like in relation with that code

00:02:26,000 --> 00:02:29,840
and this is how he did his thesis in the

00:02:29,040 --> 00:02:32,000
80s

00:02:29,840 --> 00:02:33,760
and he actually created a book from the

00:02:32,000 --> 00:02:35,599
concept of literature programming

00:02:33,760 --> 00:02:37,440
over here that you can see and this is

00:02:35,599 --> 00:02:40,640
actually available online

00:02:37,440 --> 00:02:42,879
if you want to get it today so that's

00:02:40,640 --> 00:02:43,200
what he did first and then in 1988 will

00:02:42,879 --> 00:02:46,080
from

00:02:43,200 --> 00:02:46,720
alpha wolfer mathematica came out came

00:02:46,080 --> 00:02:48,720
around

00:02:46,720 --> 00:02:50,400
and thought hey you know notebook

00:02:48,720 --> 00:02:52,239
interface is really great and would be

00:02:50,400 --> 00:02:54,400
good for our platform

00:02:52,239 --> 00:02:55,840
so it works really well with math as

00:02:54,400 --> 00:02:57,840
well so you can do

00:02:55,840 --> 00:02:59,599
some explanation of what's happening

00:02:57,840 --> 00:03:00,239
below in the formula and then you can

00:02:59,599 --> 00:03:02,640
have some

00:03:00,239 --> 00:03:04,000
code formulas and you can have some

00:03:02,640 --> 00:03:06,560
possible outputs for that so

00:03:04,000 --> 00:03:08,319
this could be graphs plots whatever

00:03:06,560 --> 00:03:09,599
that's related to the math formula that

00:03:08,319 --> 00:03:12,400
you have above

00:03:09,599 --> 00:03:12,800
so that was in 1988 and then it was a

00:03:12,400 --> 00:03:15,040
bit

00:03:12,800 --> 00:03:16,640
quiet after that there wasn't too much

00:03:15,040 --> 00:03:19,840
going on in the notebook space

00:03:16,640 --> 00:03:21,280
until 2015 when the jupiter notebooks

00:03:19,840 --> 00:03:22,959
were launched and the jupiter community

00:03:21,280 --> 00:03:24,480
was born and

00:03:22,959 --> 00:03:26,159
jupiter notebooks have been a huge

00:03:24,480 --> 00:03:27,680
success since then especially in the

00:03:26,159 --> 00:03:29,920
data science community

00:03:27,680 --> 00:03:31,599
where a lot of inside data scientists

00:03:29,920 --> 00:03:34,959
use notebooks to

00:03:31,599 --> 00:03:38,239
do various analysis on data

00:03:34,959 --> 00:03:40,000
to explain different processes and

00:03:38,239 --> 00:03:40,480
explain some machine learning concepts

00:03:40,000 --> 00:03:43,280
and

00:03:40,480 --> 00:03:44,239
have a really cool form of both playing

00:03:43,280 --> 00:03:46,879
around with code

00:03:44,239 --> 00:03:48,640
as well as sharing code with others and

00:03:46,879 --> 00:03:50,480
sharing concepts with others

00:03:48,640 --> 00:03:52,239
so in the last decade it's been really

00:03:50,480 --> 00:03:53,760
big and you can

00:03:52,239 --> 00:03:55,360
play with jupyter notebooks in many

00:03:53,760 --> 00:03:58,879
different platforms including

00:03:55,360 --> 00:04:00,879
vs code so what do

00:03:58,879 --> 00:04:01,920
jupiter notebooks and other kinds of

00:04:00,879 --> 00:04:04,799
notebooks looks like

00:04:01,920 --> 00:04:06,400
look like in vs code let's jump into a

00:04:04,799 --> 00:04:10,080
demo

00:04:06,400 --> 00:04:12,080
so i have vs code insiders

00:04:10,080 --> 00:04:14,000
and the insider version you always get

00:04:12,080 --> 00:04:15,680
the latest up-to-date features

00:04:14,000 --> 00:04:17,359
that the vs code team is working on and

00:04:15,680 --> 00:04:18,400
it's actually the version that the vs

00:04:17,359 --> 00:04:22,079
code team

00:04:18,400 --> 00:04:24,160
works on uses to work on vs code daily

00:04:22,079 --> 00:04:25,199
so that's what it looks like and i have

00:04:24,160 --> 00:04:28,000
a bunch of

00:04:25,199 --> 00:04:29,280
example notebooks over here so let's

00:04:28,000 --> 00:04:31,120
start with looking at what

00:04:29,280 --> 00:04:32,639
jupyter notebooks looks like look like

00:04:31,120 --> 00:04:34,639
in vs code they are currently the most

00:04:32,639 --> 00:04:37,040
popular kind of notebook

00:04:34,639 --> 00:04:37,840
so what does the hello world of jupiter

00:04:37,040 --> 00:04:39,440
look like

00:04:37,840 --> 00:04:41,680
well we start off with the notebook file

00:04:39,440 --> 00:04:44,639
so they end in i pi y and v

00:04:41,680 --> 00:04:46,160
so let's create a new one new file and

00:04:44,639 --> 00:04:49,840
let's call this

00:04:46,160 --> 00:04:51,520
hello i pi y and v and so with that vs

00:04:49,840 --> 00:04:54,639
code knows it's a notebook you can see

00:04:51,520 --> 00:04:56,320
that icon change and let's hit enter

00:04:54,639 --> 00:04:58,560
and cool and we're introduced with a

00:04:56,320 --> 00:04:59,360
brand new cell um it's already set to

00:04:58,560 --> 00:05:01,759
python

00:04:59,360 --> 00:05:03,280
and it will be running python and you

00:05:01,759 --> 00:05:05,120
can click here and choose

00:05:03,280 --> 00:05:06,880
different types of languages you want to

00:05:05,120 --> 00:05:10,320
run i'm just going to run

00:05:06,880 --> 00:05:12,320
python of this version for today

00:05:10,320 --> 00:05:14,000
and you can add whatever code you'd want

00:05:12,320 --> 00:05:15,520
to here so let's start with

00:05:14,000 --> 00:05:17,840
print and i actually get all the

00:05:15,520 --> 00:05:19,919
intellisense and everything that i would

00:05:17,840 --> 00:05:22,000
expect from normal vs code editors

00:05:19,919 --> 00:05:24,560
all within the notebook so print i see a

00:05:22,000 --> 00:05:26,560
lot of helpful information

00:05:24,560 --> 00:05:28,720
but i'm just going to go ahead and enter

00:05:26,560 --> 00:05:32,000
and then i'm going to type in this

00:05:28,720 --> 00:05:33,360
string hello world and then i can run

00:05:32,000 --> 00:05:34,639
this

00:05:33,360 --> 00:05:36,639
it's taking a second to connect and

00:05:34,639 --> 00:05:38,880
there we go and so we have a code cell

00:05:36,639 --> 00:05:41,440
and an output cell and as you can see we

00:05:38,880 --> 00:05:43,360
have options to add more code cells

00:05:41,440 --> 00:05:44,800
or more markdown cells so let's look at

00:05:43,360 --> 00:05:46,880
what a markdown cell looks like

00:05:44,800 --> 00:05:48,400
so when we have empty markdown cell

00:05:46,880 --> 00:05:49,199
looks like this we can double click to

00:05:48,400 --> 00:05:51,919
edit

00:05:49,199 --> 00:05:53,600
and we get the markdown editor that

00:05:51,919 --> 00:05:54,800
you're used to in vs code so we can do

00:05:53,600 --> 00:05:57,440
hello world

00:05:54,800 --> 00:05:59,120
you can even do some bullet points let's

00:05:57,440 --> 00:06:02,160
say one

00:05:59,120 --> 00:06:06,400
two three

00:06:02,160 --> 00:06:07,600
a space for that and cool and as you can

00:06:06,400 --> 00:06:09,919
see so we get

00:06:07,600 --> 00:06:11,520
rich markdown cells here we can do

00:06:09,919 --> 00:06:14,240
bullet points you can do images

00:06:11,520 --> 00:06:16,080
links whatever you'd expect to do in

00:06:14,240 --> 00:06:18,160
richmond cells and we can have

00:06:16,080 --> 00:06:19,440
as many code cells as many markdown

00:06:18,160 --> 00:06:22,800
cells it'd be like

00:06:19,440 --> 00:06:25,840
unlimited opportunities here

00:06:22,800 --> 00:06:28,960
and that this is a cool hello world view

00:06:25,840 --> 00:06:30,880
of what a jupiter notebook looks like or

00:06:28,960 --> 00:06:33,120
notebooks in general looks like

00:06:30,880 --> 00:06:34,639
but let's look at what a more realistic

00:06:33,120 --> 00:06:37,360
real world view looks like

00:06:34,639 --> 00:06:38,400
so i'm going to close this for a second

00:06:37,360 --> 00:06:41,280
and open up this

00:06:38,400 --> 00:06:42,080
other notebook that i have so this

00:06:41,280 --> 00:06:45,120
notebook

00:06:42,080 --> 00:06:46,160
is trying to analyze washington state

00:06:45,120 --> 00:06:48,240
covedita

00:06:46,160 --> 00:06:50,560
so a lot of communities around the world

00:06:48,240 --> 00:06:54,000
they are publishing their

00:06:50,560 --> 00:06:56,240
covet data for people to analyze use

00:06:54,000 --> 00:06:57,039
and you know you can create many models

00:06:56,240 --> 00:07:00,080
off of them

00:06:57,039 --> 00:07:01,599
to see any trends and so this notebook

00:07:00,080 --> 00:07:02,479
we're just doing some exploratory

00:07:01,599 --> 00:07:04,800
analysis

00:07:02,479 --> 00:07:07,120
on the washington state cover data

00:07:04,800 --> 00:07:10,560
that's available to us

00:07:07,120 --> 00:07:12,240
so i had the kova data downloaded and i

00:07:10,560 --> 00:07:13,120
downloaded and kept it in this folder

00:07:12,240 --> 00:07:16,160
with the csv

00:07:13,120 --> 00:07:17,280
file and i can explain to whoever is

00:07:16,160 --> 00:07:19,520
using my notebook

00:07:17,280 --> 00:07:21,599
how to get started so i can explain what

00:07:19,520 --> 00:07:22,720
package the neat packages they need and

00:07:21,599 --> 00:07:25,520
packages

00:07:22,720 --> 00:07:26,560
are the same as like npm like node

00:07:25,520 --> 00:07:28,160
dependencies

00:07:26,560 --> 00:07:29,680
so you install them in your machine and

00:07:28,160 --> 00:07:31,520
then you can use them so

00:07:29,680 --> 00:07:33,199
in this in this cell what it's doing is

00:07:31,520 --> 00:07:35,039
just going through and installing this

00:07:33,199 --> 00:07:36,560
pandas package which i'll be using to

00:07:35,039 --> 00:07:38,800
read the csv

00:07:36,560 --> 00:07:39,599
i already ran this so i don't need to

00:07:38,800 --> 00:07:42,160
run this

00:07:39,599 --> 00:07:43,360
but i can add as many installations as i

00:07:42,160 --> 00:07:45,680
need

00:07:43,360 --> 00:07:47,280
and then i can import that library in

00:07:45,680 --> 00:07:50,879
that package that i just got

00:07:47,280 --> 00:07:54,000
so let's run this it's connected to that

00:07:50,879 --> 00:07:54,560
python runtime cool so it looks like we

00:07:54,000 --> 00:07:56,560
have

00:07:54,560 --> 00:07:57,599
panda successfully imported so let's

00:07:56,560 --> 00:08:00,160
actually check

00:07:57,599 --> 00:08:01,840
so we are going to now use this library

00:08:00,160 --> 00:08:04,000
to read a csv

00:08:01,840 --> 00:08:05,039
and then this head function just shows

00:08:04,000 --> 00:08:10,080
us the first

00:08:05,039 --> 00:08:13,199
five lines of the csv so let's run that

00:08:10,080 --> 00:08:15,919
very cool we can see this is from the

00:08:13,199 --> 00:08:19,199
csv we see a couple of counties

00:08:15,919 --> 00:08:23,199
some day information related to

00:08:19,199 --> 00:08:26,400
when the uh cases started how many cases

00:08:23,199 --> 00:08:27,360
and some ages so the age part is

00:08:26,400 --> 00:08:29,120
actually pretty cool

00:08:27,360 --> 00:08:30,560
and it would be very cool to plot what

00:08:29,120 --> 00:08:32,080
this looks like so

00:08:30,560 --> 00:08:33,680
let's actually try to do that so let's

00:08:32,080 --> 00:08:35,599
start with

00:08:33,680 --> 00:08:37,440
uh let's remove some of the columns that

00:08:35,599 --> 00:08:39,200
we don't need so

00:08:37,440 --> 00:08:41,039
we don't need unknown age i don't think

00:08:39,200 --> 00:08:42,640
that's a column we need so let's try

00:08:41,039 --> 00:08:45,279
removing that so

00:08:42,640 --> 00:08:46,080
start covet data and as and this is

00:08:45,279 --> 00:08:48,800
available

00:08:46,080 --> 00:08:50,720
across cells so states it holds states

00:08:48,800 --> 00:08:54,080
so let's start with covet data

00:08:50,720 --> 00:08:56,640
and let's try uh

00:08:54,080 --> 00:08:56,640
dropping

00:08:57,519 --> 00:09:05,680
unknown unknown

00:09:02,480 --> 00:09:09,680
h with the axis

00:09:05,680 --> 00:09:12,560
of and let's run it

00:09:09,680 --> 00:09:14,320
okay cool that looks about right all

00:09:12,560 --> 00:09:17,360
right so we dropped unknown age

00:09:14,320 --> 00:09:19,680
let's also drop total cases so

00:09:17,360 --> 00:09:20,560
notebooks actually hold states so right

00:09:19,680 --> 00:09:23,120
now

00:09:20,560 --> 00:09:24,959
uh actually i didn't actually set the

00:09:23,120 --> 00:09:26,640
variable to be this so let's actually

00:09:24,959 --> 00:09:30,160
update this variable

00:09:26,640 --> 00:09:33,120
so now it's the original minus

00:09:30,160 --> 00:09:34,240
unknown age let's run that again okay

00:09:33,120 --> 00:09:35,839
cool

00:09:34,240 --> 00:09:37,279
and let's make another cell so we can

00:09:35,839 --> 00:09:39,279
actually see what that looks like to

00:09:37,279 --> 00:09:41,279
verify

00:09:39,279 --> 00:09:43,120
so this once again we'll just return the

00:09:41,279 --> 00:09:43,839
first couple so we see that unknown age

00:09:43,120 --> 00:09:45,519
is gone

00:09:43,839 --> 00:09:46,959
that's great okay and then now let's

00:09:45,519 --> 00:09:48,160
update this variable to remove some of

00:09:46,959 --> 00:09:51,120
the other

00:09:48,160 --> 00:09:52,160
uh column so i also don't want probable

00:09:51,120 --> 00:09:54,240
cases

00:09:52,160 --> 00:09:55,440
so let's get rid of that one so let's

00:09:54,240 --> 00:09:57,440
run this cell

00:09:55,440 --> 00:09:58,720
and then let's run this cell great

00:09:57,440 --> 00:10:02,880
that's gone

00:09:58,720 --> 00:10:06,079
let's also remove confirmed cases

00:10:02,880 --> 00:10:08,399
let's turn this cell run this cell

00:10:06,079 --> 00:10:10,000
great and then let's also remove total

00:10:08,399 --> 00:10:13,120
cases

00:10:10,000 --> 00:10:14,560
when this cell read this cell okay i

00:10:13,120 --> 00:10:16,240
think that should work so i think i

00:10:14,560 --> 00:10:18,560
should be able to plot it so let's look

00:10:16,240 --> 00:10:22,399
at what that looks like so i have

00:10:18,560 --> 00:10:25,040
my covet data that i imported and then i

00:10:22,399 --> 00:10:26,480
can just run the plot function on it

00:10:25,040 --> 00:10:27,279
don't have any arguments so let's see

00:10:26,480 --> 00:10:30,640
what that looks like

00:10:27,279 --> 00:10:31,440
great so this is kind of cool i get to

00:10:30,640 --> 00:10:35,279
see

00:10:31,440 --> 00:10:38,240
a plot like a histogram of the

00:10:35,279 --> 00:10:39,440
frequency of the number of cases

00:10:38,240 --> 00:10:41,040
according to their age

00:10:39,440 --> 00:10:42,640
so that's pretty cool and so these are

00:10:41,040 --> 00:10:43,920
some of the examples of the kind of

00:10:42,640 --> 00:10:46,480
outputs that you can get

00:10:43,920 --> 00:10:48,000
and you can install many more libraries

00:10:46,480 --> 00:10:51,600
and dependencies

00:10:48,000 --> 00:10:54,079
to get many more kinds of outputs

00:10:51,600 --> 00:10:55,519
and so this is kind of the standard data

00:10:54,079 --> 00:10:58,000
science flow that you do

00:10:55,519 --> 00:10:59,600
you can even actually inspect so right

00:10:58,000 --> 00:11:00,000
now it's not very clear what the state

00:10:59,600 --> 00:11:03,839
of this

00:11:00,000 --> 00:11:05,519
covid variable is so i can use the

00:11:03,839 --> 00:11:08,399
variable explorer

00:11:05,519 --> 00:11:10,320
and i can actually see that i have this

00:11:08,399 --> 00:11:14,160
code variable and i can actually

00:11:10,320 --> 00:11:16,800
open it up in a full screen and

00:11:14,160 --> 00:11:18,399
and i get a full like csv view of it so

00:11:16,800 --> 00:11:19,920
this is helpful just to make sure

00:11:18,399 --> 00:11:21,519
i don't know i'm running a lot of

00:11:19,920 --> 00:11:24,640
different cells in different

00:11:21,519 --> 00:11:25,760
uh orders so it's hard to tell sometimes

00:11:24,640 --> 00:11:26,560
you know what the state of a certain

00:11:25,760 --> 00:11:28,880
variable is

00:11:26,560 --> 00:11:30,560
so i can use this variable explorer to

00:11:28,880 --> 00:11:32,959
just verify that it's in the state that

00:11:30,560 --> 00:11:35,360
i'd like

00:11:32,959 --> 00:11:36,160
so that is a standard data science

00:11:35,360 --> 00:11:39,440
example

00:11:36,160 --> 00:11:42,959
of using jupiter notebooks to clean

00:11:39,440 --> 00:11:45,120
analyze and view some data but what does

00:11:42,959 --> 00:11:47,680
uh jupiter notebooks look like from a

00:11:45,120 --> 00:11:50,880
playground repel example

00:11:47,680 --> 00:11:52,639
so i have this other notebook here which

00:11:50,880 --> 00:11:55,680
is a typescript notebook so

00:11:52,639 --> 00:11:57,200
as you can see it's using typescript as

00:11:55,680 --> 00:11:59,040
its runtime and has the language of

00:11:57,200 --> 00:12:01,040
typescript selected

00:11:59,040 --> 00:12:02,639
and i'm using this notebook to play

00:12:01,040 --> 00:12:03,279
around with this express server that i

00:12:02,639 --> 00:12:05,440
have

00:12:03,279 --> 00:12:06,720
and specifically also to play around the

00:12:05,440 --> 00:12:09,600
axios

00:12:06,720 --> 00:12:10,000
library because i don't 100 know you

00:12:09,600 --> 00:12:11,519
know

00:12:10,000 --> 00:12:13,040
how it works and i want to make sure

00:12:11,519 --> 00:12:16,160
that it works in the way that i expect

00:12:13,040 --> 00:12:18,880
before i'm adding it into my code base

00:12:16,160 --> 00:12:21,120
so let's start by running this server so

00:12:18,880 --> 00:12:23,600
i'm going to go into the package.json

00:12:21,120 --> 00:12:25,839
and i'm going to hit run script over

00:12:23,600 --> 00:12:25,839
here

00:12:27,120 --> 00:12:31,279
cool that it looks like it's running so

00:12:29,040 --> 00:12:34,880
let's go back into our notebook

00:12:31,279 --> 00:12:36,720
and i already uh npm installed axios so

00:12:34,880 --> 00:12:39,120
i can just run this

00:12:36,720 --> 00:12:41,200
this will start typescript and start

00:12:39,120 --> 00:12:43,120
this base request instance and now i can

00:12:41,200 --> 00:12:44,959
use that request instance across

00:12:43,120 --> 00:12:47,040
many different cells so i can start off

00:12:44,959 --> 00:12:49,760
with just running the basics

00:12:47,040 --> 00:12:52,240
to get the home page which is just the

00:12:49,760 --> 00:12:55,440
default express homepage at the moment

00:12:52,240 --> 00:12:57,920
i also created an endpoint called api

00:12:55,440 --> 00:12:59,519
so i can call that and i can see oh very

00:12:57,920 --> 00:13:02,800
cool i can grab that

00:12:59,519 --> 00:13:04,560
i can copy and paste this cell and

00:13:02,800 --> 00:13:06,000
change this to okay i want to actually

00:13:04,560 --> 00:13:10,160
grab users

00:13:06,000 --> 00:13:13,519
so let me type this users instead

00:13:10,160 --> 00:13:16,160
run that cool i get three names

00:13:13,519 --> 00:13:18,480
and i can use this to play around with

00:13:16,160 --> 00:13:19,040
axios get it to how i like play around

00:13:18,480 --> 00:13:21,839
with

00:13:19,040 --> 00:13:22,959
how my express server is reacting to

00:13:21,839 --> 00:13:25,920
different

00:13:22,959 --> 00:13:27,279
calls and you know work on my code at

00:13:25,920 --> 00:13:29,360
the same time

00:13:27,279 --> 00:13:31,040
and so this is pretty helpful when

00:13:29,360 --> 00:13:31,760
you're working on both the back end and

00:13:31,040 --> 00:13:33,839
the front end

00:13:31,760 --> 00:13:35,200
but you don't really want to go in and

00:13:33,839 --> 00:13:38,560
set up this large project

00:13:35,200 --> 00:13:40,079
or inject all of this into a project

00:13:38,560 --> 00:13:41,440
that you already have so you can

00:13:40,079 --> 00:13:43,680
take a notebook and work on it

00:13:41,440 --> 00:13:44,880
independently in an isolated space and

00:13:43,680 --> 00:13:47,040
then when you're happy

00:13:44,880 --> 00:13:47,920
like oh yeah i'm kind of happy with how

00:13:47,040 --> 00:13:50,160
this access work

00:13:47,920 --> 00:13:51,920
is working then i might copy and paste

00:13:50,160 --> 00:13:55,279
over the code into

00:13:51,920 --> 00:13:58,160
my client-side app so

00:13:55,279 --> 00:13:58,880
this is helpful and it was cool to use

00:13:58,160 --> 00:14:01,839
but you know

00:13:58,880 --> 00:14:02,880
it's a lot of code and sometimes i'm

00:14:01,839 --> 00:14:04,959
only working

00:14:02,880 --> 00:14:07,519
on my express server and i'm not really

00:14:04,959 --> 00:14:10,800
working on the client side

00:14:07,519 --> 00:14:11,279
so i want to create a notebook that will

00:14:10,800 --> 00:14:14,480
help me

00:14:11,279 --> 00:14:16,639
just do rest calls and not deal with any

00:14:14,480 --> 00:14:18,560
of the code that's associated with it

00:14:16,639 --> 00:14:20,240
but i want to do this all from vs code

00:14:18,560 --> 00:14:22,240
because i want to be as close to me

00:14:20,240 --> 00:14:25,680
developing my server

00:14:22,240 --> 00:14:26,639
so i at the beginning of working on the

00:14:25,680 --> 00:14:29,120
vs code team

00:14:26,639 --> 00:14:30,079
decided to be very cool to create a

00:14:29,120 --> 00:14:33,519
notebook

00:14:30,079 --> 00:14:35,120
that will run rest calls and so this is

00:14:33,519 --> 00:14:37,760
a custom notebook which

00:14:35,120 --> 00:14:38,720
is why it doesn't have the ipynb ending

00:14:37,760 --> 00:14:41,519
it's not part of

00:14:38,720 --> 00:14:42,639
the jupyter ecosystem but it's instead a

00:14:41,519 --> 00:14:46,480
special notebook

00:14:42,639 --> 00:14:48,000
that can only be run on vs code and so

00:14:46,480 --> 00:14:49,519
let's look at what that looks like so it

00:14:48,000 --> 00:14:52,800
has the name restbook

00:14:49,519 --> 00:14:54,800
and if i click into it i see

00:14:52,800 --> 00:14:56,320
that i don't have it running or now so

00:14:54,800 --> 00:14:58,079
let's start running it so i

00:14:56,320 --> 00:14:59,920
have the same markdown cells but i have

00:14:58,079 --> 00:15:03,120
a special a special

00:14:59,920 --> 00:15:05,360
rest book language and this language

00:15:03,120 --> 00:15:07,199
uh introduces all these the syntax

00:15:05,360 --> 00:15:08,639
highlighting and such so let's start by

00:15:07,199 --> 00:15:09,839
running one and see what it looks like

00:15:08,639 --> 00:15:12,800
so let's run

00:15:09,839 --> 00:15:14,240
the basics cool so i got this cool view

00:15:12,800 --> 00:15:18,000
which is different from the other

00:15:14,240 --> 00:15:20,639
uh this view over here

00:15:18,000 --> 00:15:22,560
it looks a bit nicer in my opinion and i

00:15:20,639 --> 00:15:25,199
can go through the different areas of

00:15:22,560 --> 00:15:26,720
information i can see what i sent i can

00:15:25,199 --> 00:15:28,720
see the headers that i get back and i

00:15:26,720 --> 00:15:30,959
can see the data i can even

00:15:28,720 --> 00:15:32,320
switch to a different kind of output so

00:15:30,959 --> 00:15:34,560
there's a built-in

00:15:32,320 --> 00:15:36,480
html view and i can actually see what

00:15:34,560 --> 00:15:37,839
that looks like so yeah that looks like

00:15:36,480 --> 00:15:40,240
the html that i expect

00:15:37,839 --> 00:15:41,120
from my express app i can go back to

00:15:40,240 --> 00:15:43,040
this view

00:15:41,120 --> 00:15:45,440
i can make sure that certain things

00:15:43,040 --> 00:15:47,199
exist so let's say i want to make sure

00:15:45,440 --> 00:15:48,959
that express exists

00:15:47,199 --> 00:15:51,279
i can enter search and i can see okay

00:15:48,959 --> 00:15:54,000
yeah cool this is exactly what i expect

00:15:51,279 --> 00:15:55,360
and like other notebooks i can keep

00:15:54,000 --> 00:15:57,440
running in other cells

00:15:55,360 --> 00:15:59,279
so this one it doesn't show that much

00:15:57,440 --> 00:16:02,160
state across cells

00:15:59,279 --> 00:16:03,040
it's a lot of just querying so i can

00:16:02,160 --> 00:16:06,399
grab users

00:16:03,040 --> 00:16:08,240
then i can grab all the users and then

00:16:06,399 --> 00:16:11,120
i can grab the information for a

00:16:08,240 --> 00:16:14,320
specific user

00:16:11,120 --> 00:16:15,440
and that's all very cool but

00:16:14,320 --> 00:16:17,600
you know when i was working on this

00:16:15,440 --> 00:16:19,519
notebook and when i gave previous

00:16:17,600 --> 00:16:21,920
presentations someone

00:16:19,519 --> 00:16:24,240
gave a really cool feature request idea

00:16:21,920 --> 00:16:25,440
of actually utilizing the state part of

00:16:24,240 --> 00:16:28,240
notebooks and actually

00:16:25,440 --> 00:16:29,199
using the information from one notebook

00:16:28,240 --> 00:16:32,560
in another

00:16:29,199 --> 00:16:33,920
so to do that i implemented that in my

00:16:32,560 --> 00:16:36,639
custom language

00:16:33,920 --> 00:16:37,279
where i can declare something to belong

00:16:36,639 --> 00:16:40,320
to a certain

00:16:37,279 --> 00:16:43,600
variable so let's say let's foo equals

00:16:40,320 --> 00:16:47,519
this now when i run it foo has

00:16:43,600 --> 00:16:50,320
the value of the return from this call

00:16:47,519 --> 00:16:52,480
so now i can actually use foo over here

00:16:50,320 --> 00:16:56,240
instead of the hardcore name sana

00:16:52,480 --> 00:16:59,519
so i can do dollar sign foo

00:16:56,240 --> 00:17:02,240
and let's grab from the data that we got

00:16:59,519 --> 00:17:05,600
back and it was the first item

00:17:02,240 --> 00:17:06,640
and now if i run it i get the same call

00:17:05,600 --> 00:17:08,240
again with sana

00:17:06,640 --> 00:17:10,480
and i can get all of her information and

00:17:08,240 --> 00:17:11,919
now i can you know dynamically choose

00:17:10,480 --> 00:17:15,600
the second user

00:17:11,919 --> 00:17:17,520
and so on and so on so that's helpful

00:17:15,600 --> 00:17:18,640
if i just want to have almost like a

00:17:17,520 --> 00:17:20,240
test class

00:17:18,640 --> 00:17:22,079
in my notebook where this is kind of my

00:17:20,240 --> 00:17:23,760
testing but not an official

00:17:22,079 --> 00:17:25,839
testing suite but just a side testing

00:17:23,760 --> 00:17:27,679
suite which i use to just

00:17:25,839 --> 00:17:30,480
mess around with my server and make sure

00:17:27,679 --> 00:17:33,760
that it works in the way i expect

00:17:30,480 --> 00:17:35,760
and i can also do uh

00:17:33,760 --> 00:17:37,600
sorry i have a lot of little gnats in my

00:17:35,760 --> 00:17:40,559
house

00:17:37,600 --> 00:17:42,000
i can also do post requests so i can

00:17:40,559 --> 00:17:44,320
send to my server

00:17:42,000 --> 00:17:46,559
hello world i can see that my server

00:17:44,320 --> 00:17:48,559
says it's received this and

00:17:46,559 --> 00:17:50,240
that looks good and then this is all

00:17:48,559 --> 00:17:52,960
useful but

00:17:50,240 --> 00:17:55,360
what's even more useful is to also have

00:17:52,960 --> 00:17:57,840
api keys because we don't always

00:17:55,360 --> 00:17:58,880
want to be saving our sensitive

00:17:57,840 --> 00:18:02,080
information

00:17:58,880 --> 00:18:04,559
just purely in data like this so

00:18:02,080 --> 00:18:06,559
the other very cool part about doing

00:18:04,559 --> 00:18:08,720
custom notebooks and using

00:18:06,559 --> 00:18:10,080
vs code apis to make notebooks is that

00:18:08,720 --> 00:18:12,080
you also get access to

00:18:10,080 --> 00:18:13,600
all of the other apis that vs code

00:18:12,080 --> 00:18:15,600
already supports so i get

00:18:13,600 --> 00:18:17,280
access to all the language apis and

00:18:15,600 --> 00:18:18,640
that's what i can use to make a very

00:18:17,280 --> 00:18:20,559
rich language so if

00:18:18,640 --> 00:18:23,280
i can get auto completions like this

00:18:20,559 --> 00:18:26,559
user agent and i can say you know

00:18:23,280 --> 00:18:27,679
the user agent is me for example and i

00:18:26,559 --> 00:18:29,039
can get

00:18:27,679 --> 00:18:31,200
like all the syntax highlighting

00:18:29,039 --> 00:18:34,480
everything that you would expect

00:18:31,200 --> 00:18:36,240
from language apis but i can also get

00:18:34,480 --> 00:18:38,559
access to the secrets api

00:18:36,240 --> 00:18:40,320
which is an api that allows you to save

00:18:38,559 --> 00:18:42,799
sensitive information

00:18:40,320 --> 00:18:43,840
to your vs code that's not available

00:18:42,799 --> 00:18:46,799
that you can use

00:18:43,840 --> 00:18:48,080
later in your various extensions so what

00:18:46,799 --> 00:18:49,039
does that actually look like so let's

00:18:48,080 --> 00:18:51,600
start

00:18:49,039 --> 00:18:52,799
with i have this command called secret

00:18:51,600 --> 00:18:54,160
so command shift p

00:18:52,799 --> 00:18:56,080
you open up the command palette and you

00:18:54,160 --> 00:18:59,360
can search for rest book secrets

00:18:56,080 --> 00:19:00,559
so enter that and let's add a new secret

00:18:59,360 --> 00:19:06,000
so let's

00:19:00,559 --> 00:19:09,600
call it my secret secret key

00:19:06,000 --> 00:19:10,720
cool and then let's make my secret key

00:19:09,600 --> 00:19:13,520
be openjs

00:19:10,720 --> 00:19:16,720
is the value all right so looks like we

00:19:13,520 --> 00:19:16,720
successfully saved that

00:19:17,280 --> 00:19:21,360
all right i took a quick pause to deal

00:19:19,280 --> 00:19:22,960
with this fly that was bothering me

00:19:21,360 --> 00:19:25,120
but all right so we have our secrets

00:19:22,960 --> 00:19:27,440
saved so let's look at how to use it so

00:19:25,120 --> 00:19:29,840
we can add a code cell

00:19:27,440 --> 00:19:31,520
and let's start another request

00:19:29,840 --> 00:19:34,640
localhost

00:19:31,520 --> 00:19:37,120
and let me just check yes so i have

00:19:34,640 --> 00:19:38,000
this endpoint called secret so let's use

00:19:37,120 --> 00:19:41,919
this i'll just copy

00:19:38,000 --> 00:19:45,120
this over and we can use that

00:19:41,919 --> 00:19:47,760
and then and then i can actually access

00:19:45,120 --> 00:19:51,039
my secrets like this so i can do secrets

00:19:47,760 --> 00:19:53,039
and then dot my secret key and if i send

00:19:51,039 --> 00:19:55,679
it i can see that

00:19:53,039 --> 00:19:56,720
i respond with i have a secret and if i

00:19:55,679 --> 00:19:58,799
look at the actual

00:19:56,720 --> 00:19:59,760
logs of my server i see that i've

00:19:58,799 --> 00:20:02,799
actually received

00:19:59,760 --> 00:20:04,799
that same secret that says openjs

00:20:02,799 --> 00:20:06,240
and if i look at the information about

00:20:04,799 --> 00:20:09,440
the request i sent

00:20:06,240 --> 00:20:11,039
i actually hide the secret so this is

00:20:09,440 --> 00:20:12,960
super useful for if you want to share

00:20:11,039 --> 00:20:14,240
this notebook with others but you don't

00:20:12,960 --> 00:20:15,919
want to send them the sensitive

00:20:14,240 --> 00:20:17,120
information all the sensitive

00:20:15,919 --> 00:20:18,880
information is hidden

00:20:17,120 --> 00:20:20,400
but you can still use it to make those

00:20:18,880 --> 00:20:22,799
calls and

00:20:20,400 --> 00:20:25,280
the cool useful part of this is you

00:20:22,799 --> 00:20:28,159
could have your co-worker or your friend

00:20:25,280 --> 00:20:29,679
have a secret or the api key saved in

00:20:28,159 --> 00:20:31,280
their secrets as

00:20:29,679 --> 00:20:32,799
hopefully the same name and then they

00:20:31,280 --> 00:20:33,520
can run the notebook and get the exact

00:20:32,799 --> 00:20:36,720
same result

00:20:33,520 --> 00:20:39,200
but you're not ever risking the risk of

00:20:36,720 --> 00:20:40,640
actually sharing your secret api keys

00:20:39,200 --> 00:20:42,480
anywhere

00:20:40,640 --> 00:20:44,640
and just to make sure this worked let's

00:20:42,480 --> 00:20:45,919
try changing this api key so let's go

00:20:44,640 --> 00:20:48,320
back to our secrets

00:20:45,919 --> 00:20:50,159
and we see this my secret api key let's

00:20:48,320 --> 00:20:51,280
view the secret and let's just change it

00:20:50,159 --> 00:20:54,080
so let's call it

00:20:51,280 --> 00:20:55,760
hello instead enter and so now i see

00:20:54,080 --> 00:20:57,440
that i've saved it and let's run it one

00:20:55,760 --> 00:20:59,600
more time

00:20:57,440 --> 00:21:01,120
all right so from this view it looks the

00:20:59,600 --> 00:21:03,840
exact same because

00:21:01,120 --> 00:21:04,799
for the encryption part you don't really

00:21:03,840 --> 00:21:08,320
see anything

00:21:04,799 --> 00:21:08,799
but as you can see that i have a

00:21:08,320 --> 00:21:11,760
different

00:21:08,799 --> 00:21:13,440
response so i can use as many api keys

00:21:11,760 --> 00:21:15,200
as i want i can save as many secrets i

00:21:13,440 --> 00:21:17,200
can change them as i need

00:21:15,200 --> 00:21:19,520
and that's super helpful for actually

00:21:17,200 --> 00:21:22,559
doing rest calls

00:21:19,520 --> 00:21:23,679
so this is one example of a custom

00:21:22,559 --> 00:21:26,159
notebook that's

00:21:23,679 --> 00:21:27,120
solely nvs code that's using the vs code

00:21:26,159 --> 00:21:28,960
apis

00:21:27,120 --> 00:21:30,799
to create the notebook and as well as

00:21:28,960 --> 00:21:33,440
integrate with the rest of the

00:21:30,799 --> 00:21:34,240
extensibility and functionality that vs

00:21:33,440 --> 00:21:37,440
code offers

00:21:34,240 --> 00:21:39,200
extensions we have another example and

00:21:37,440 --> 00:21:40,640
i'll close these for now

00:21:39,200 --> 00:21:42,640
we have another example called the

00:21:40,640 --> 00:21:45,120
github issues notebook

00:21:42,640 --> 00:21:46,960
so the github issues notebook started

00:21:45,120 --> 00:21:50,000
from a need from our team

00:21:46,960 --> 00:21:51,840
that where we live on github

00:21:50,000 --> 00:21:54,159
all of our issues are there our roadmap

00:21:51,840 --> 00:21:56,080
is there iteration plans are there

00:21:54,159 --> 00:21:57,679
literally everything is on github

00:21:56,080 --> 00:21:59,919
including all of our bugs

00:21:57,679 --> 00:22:01,760
and we get several hundreds of bugs

00:21:59,919 --> 00:22:03,039
every day we get a lot a lot of bugs i

00:22:01,760 --> 00:22:05,039
think if you look on the repo now

00:22:03,039 --> 00:22:08,080
there's probably about 5 000 issues

00:22:05,039 --> 00:22:10,640
there's a lot going on all the time and

00:22:08,080 --> 00:22:12,000
it's pretty annoying to have to open up

00:22:10,640 --> 00:22:13,840
a browser every single

00:22:12,000 --> 00:22:15,520
time and go on to the repo and then

00:22:13,840 --> 00:22:18,720
search for the

00:22:15,520 --> 00:22:20,400
specific kind of like issues that you

00:22:18,720 --> 00:22:21,840
want like specific labels and such and

00:22:20,400 --> 00:22:22,640
you have to do this for each individual

00:22:21,840 --> 00:22:25,520
repo

00:22:22,640 --> 00:22:26,799
and also the vs code team a lot of our

00:22:25,520 --> 00:22:28,640
work is spread across

00:22:26,799 --> 00:22:30,720
several different repos because we like

00:22:28,640 --> 00:22:32,080
to separate the work out into smaller

00:22:30,720 --> 00:22:33,919
extensions

00:22:32,080 --> 00:22:35,760
so a lot of times people on the vs co

00:22:33,919 --> 00:22:36,799
team are managing multiple sections all

00:22:35,760 --> 00:22:38,320
at the same time

00:22:36,799 --> 00:22:40,000
and so it's extra annoying to have to

00:22:38,320 --> 00:22:43,440
open up different repos and check

00:22:40,000 --> 00:22:45,760
different repos for the same

00:22:43,440 --> 00:22:47,280
same values of this is i'm the author

00:22:45,760 --> 00:22:50,480
and these are bugs assigned to me

00:22:47,280 --> 00:22:52,960
or open to me or whatever so to help us

00:22:50,480 --> 00:22:53,520
with that experience we made the issues

00:22:52,960 --> 00:22:55,760
notebook

00:22:53,520 --> 00:22:57,520
and so this helps us triage and work

00:22:55,760 --> 00:22:59,520
through all those github issues

00:22:57,520 --> 00:23:00,799
all within vs code all within one

00:22:59,520 --> 00:23:03,280
notebook

00:23:00,799 --> 00:23:05,360
so it follows the same github language

00:23:03,280 --> 00:23:08,559
where we have things like repo

00:23:05,360 --> 00:23:10,640
and we have is open assignee etc

00:23:08,559 --> 00:23:11,600
but we also added a couple extra things

00:23:10,640 --> 00:23:13,760
variables

00:23:11,600 --> 00:23:14,960
uh so dollar sign repo referring to this

00:23:13,760 --> 00:23:17,440
is now a variable

00:23:14,960 --> 00:23:18,159
of repo there's another variable of who

00:23:17,440 --> 00:23:21,200
i am

00:23:18,159 --> 00:23:22,799
which is my my github handle tanaka beer

00:23:21,200 --> 00:23:25,600
so if i run it it actually ends up

00:23:22,799 --> 00:23:28,080
running all of our notebook cells

00:23:25,600 --> 00:23:28,880
and you can see that it's going for this

00:23:28,080 --> 00:23:30,080
one it's

00:23:28,880 --> 00:23:33,039
going through these three different

00:23:30,080 --> 00:23:35,360
repos all at once so the vs code repo

00:23:33,039 --> 00:23:36,720
the github pull request extension and

00:23:35,360 --> 00:23:39,360
the remote extension

00:23:36,720 --> 00:23:40,159
and looking for all the issues that i've

00:23:39,360 --> 00:23:41,600
created

00:23:40,159 --> 00:23:43,279
and so this is really helpful to see

00:23:41,600 --> 00:23:44,880
everything in one view and i can even

00:23:43,279 --> 00:23:46,880
open all these issues

00:23:44,880 --> 00:23:48,320
and if i click this button it will open

00:23:46,880 --> 00:23:51,600
00:23:48,320 --> 00:23:53,679
tabs all each with each individual issue

00:23:51,600 --> 00:23:54,960
so that's a really easy way to just go

00:23:53,679 --> 00:23:59,360
through all of your issues

00:23:54,960 --> 00:24:01,360
um let's look at specifically our my

00:23:59,360 --> 00:24:03,840
repo that i want to see so all the open

00:24:01,360 --> 00:24:05,520
issues where i'm assigned to in my repo

00:24:03,840 --> 00:24:07,039
so i see these so i need to add these

00:24:05,520 --> 00:24:10,480
three features to

00:24:07,039 --> 00:24:11,200
my rest book and we actually use this

00:24:10,480 --> 00:24:14,400
extension

00:24:11,200 --> 00:24:16,080
on the vs code team so if you clone vs

00:24:14,400 --> 00:24:18,240
code which i have right here if you

00:24:16,080 --> 00:24:19,679
clone vs code you'll you'll see this

00:24:18,240 --> 00:24:21,600
folder notebooks

00:24:19,679 --> 00:24:22,960
and we have a bunch of different

00:24:21,600 --> 00:24:24,640
notebooks that we use to

00:24:22,960 --> 00:24:27,039
go through all the different issues we

00:24:24,640 --> 00:24:28,960
have uh end game related things which

00:24:27,039 --> 00:24:30,799
are when we're releasing we have some

00:24:28,960 --> 00:24:32,000
extra issues and work that we have to do

00:24:30,799 --> 00:24:33,919
around we keep

00:24:32,000 --> 00:24:35,360
track of paper cuts here we keep track

00:24:33,919 --> 00:24:37,279
of everything and

00:24:35,360 --> 00:24:39,520
this is what our team uses and we add a

00:24:37,279 --> 00:24:41,120
lot of information about how to do the

00:24:39,520 --> 00:24:43,039
different roles if you're on

00:24:41,120 --> 00:24:44,799
inbox tracking which really means just

00:24:43,039 --> 00:24:46,159
going through all the open issues on our

00:24:44,799 --> 00:24:47,919
repo for that week

00:24:46,159 --> 00:24:50,799
you get a lot of information on how to

00:24:47,919 --> 00:24:53,840
do that and then you also get

00:24:50,799 --> 00:24:56,080
already sorry you get

00:24:53,840 --> 00:24:57,520
code cells that show you what to run to

00:24:56,080 --> 00:24:59,600
get all that information

00:24:57,520 --> 00:25:01,200
and we use this heavily in the vs code

00:24:59,600 --> 00:25:02,960
team to iterate through all of our

00:25:01,200 --> 00:25:05,360
issues

00:25:02,960 --> 00:25:07,760
so that's a second example of a custom

00:25:05,360 --> 00:25:11,360
notebook that is useful in the vs

00:25:07,760 --> 00:25:13,760
code and we have one more example

00:25:11,360 --> 00:25:14,799
so the last example is we have a cousin

00:25:13,760 --> 00:25:18,240
notebook so

00:25:14,799 --> 00:25:20,559
cousteau is a language that we use

00:25:18,240 --> 00:25:21,520
in our team to create through all of our

00:25:20,559 --> 00:25:24,000
data

00:25:21,520 --> 00:25:25,919
it's an open language and we use kutso

00:25:24,000 --> 00:25:27,120
to just go through all the telemetry

00:25:25,919 --> 00:25:30,880
data that we have

00:25:27,120 --> 00:25:32,159
so kuso offers some playground data so

00:25:30,880 --> 00:25:36,320
these are store events

00:25:32,159 --> 00:25:38,880
and this notebook is connecting to that

00:25:36,320 --> 00:25:40,080
cousteau cluster and you can use the

00:25:38,880 --> 00:25:43,919
custo language

00:25:40,080 --> 00:25:46,559
so i can run this and i get the outputs

00:25:43,919 --> 00:25:48,559
of what they would look like in cousteau

00:25:46,559 --> 00:25:49,600
a couple bugs here and there with the

00:25:48,559 --> 00:25:51,200
rendering but

00:25:49,600 --> 00:25:53,440
this is pretty much exactly what it

00:25:51,200 --> 00:25:55,440
looks like in custo and so i can do some

00:25:53,440 --> 00:25:56,320
more fancy stuff so kusto allows us to

00:25:55,440 --> 00:25:59,360
do some

00:25:56,320 --> 00:26:00,559
graphing so i can put all this data on a

00:25:59,360 --> 00:26:02,640
chart so i can see

00:26:00,559 --> 00:26:04,960
by state which ones are the more popular

00:26:02,640 --> 00:26:07,120
states for storms

00:26:04,960 --> 00:26:08,720
so running this i see okay texas is

00:26:07,120 --> 00:26:10,159
pretty popular and these are quite

00:26:08,720 --> 00:26:11,600
these are also like interactive charts

00:26:10,159 --> 00:26:12,960
as you can see when i hover over i get

00:26:11,600 --> 00:26:15,360
some exact numbers

00:26:12,960 --> 00:26:18,000
so i see that texas is quite popular and

00:26:15,360 --> 00:26:19,919
then kansas is the second popular

00:26:18,000 --> 00:26:21,840
and you know that was cool but i want to

00:26:19,919 --> 00:26:23,760
see a pie chart version so i can run the

00:26:21,840 --> 00:26:25,520
same query but just finish it off with a

00:26:23,760 --> 00:26:27,279
pie chart

00:26:25,520 --> 00:26:28,799
and then i i get an interactive pie

00:26:27,279 --> 00:26:31,039
chart like this and so

00:26:28,799 --> 00:26:32,880
in this notebook it's a really quick and

00:26:31,039 --> 00:26:33,760
easy way to play around with the data

00:26:32,880 --> 00:26:36,320
that we have

00:26:33,760 --> 00:26:37,520
and see what what we get and then we i

00:26:36,320 --> 00:26:38,640
can share this notebook with my

00:26:37,520 --> 00:26:41,679
coworkers

00:26:38,640 --> 00:26:45,039
to see you know oh hey look at this

00:26:41,679 --> 00:26:46,720
pie chart of data so yeah this is

00:26:45,039 --> 00:26:48,880
one other way of interacting and

00:26:46,720 --> 00:26:51,279
normally we would use

00:26:48,880 --> 00:26:52,320
azure data azure data explorer which is

00:26:51,279 --> 00:26:54,640
a website where we

00:26:52,320 --> 00:26:56,159
run custom queries on but this is all

00:26:54,640 --> 00:26:58,240
within vs code all in

00:26:56,159 --> 00:27:00,240
one spot and i can run multiple queries

00:26:58,240 --> 00:27:02,000
on the same page and then send someone

00:27:00,240 --> 00:27:03,520
hey this is my analysis this is what i

00:27:02,000 --> 00:27:06,080
see so this is

00:27:03,520 --> 00:27:06,960
like data science but it's not using any

00:27:06,080 --> 00:27:08,960
standard

00:27:06,960 --> 00:27:10,720
language it's using kusto language which

00:27:08,960 --> 00:27:14,480
is a specialized language

00:27:10,720 --> 00:27:18,320
within microsoft so these are

00:27:14,480 --> 00:27:21,360
some custom notebooks going back to

00:27:18,320 --> 00:27:22,399
my powerpoint so at first i showed you

00:27:21,360 --> 00:27:24,240
jupiter notebooks

00:27:22,399 --> 00:27:26,240
uh and that is a standard experience

00:27:24,240 --> 00:27:28,000
outside of vs code and within vs code

00:27:26,240 --> 00:27:30,880
except vs code has a couple extra

00:27:28,000 --> 00:27:32,240
extensive features um but then i also

00:27:30,880 --> 00:27:34,399
showed you custom

00:27:32,240 --> 00:27:35,440
custom notebooks not jupiter custom

00:27:34,399 --> 00:27:37,120
notebooks

00:27:35,440 --> 00:27:39,360
and these are notebooks that are made

00:27:37,120 --> 00:27:40,480
especially for vs code that's using vs

00:27:39,360 --> 00:27:42,640
code apis

00:27:40,480 --> 00:27:44,000
to create the notebook and it only works

00:27:42,640 --> 00:27:47,039
within bs code

00:27:44,000 --> 00:27:48,799
and so this was the rest book this was

00:27:47,039 --> 00:27:51,520
the github issues notebook and this was

00:27:48,799 --> 00:27:53,919
also the cousteau notebook

00:27:51,520 --> 00:27:54,799
and the cool part is anyone can make a

00:27:53,919 --> 00:27:56,880
custom notebook

00:27:54,799 --> 00:27:58,720
we have our api open you can use it

00:27:56,880 --> 00:28:00,240
today you can make your custom notebook

00:27:58,720 --> 00:28:01,919
to do whatever you'd like

00:28:00,240 --> 00:28:03,679
and you get the full engineering support

00:28:01,919 --> 00:28:05,440
from us so you'll get all the security

00:28:03,679 --> 00:28:06,799
and performance from us

00:28:05,440 --> 00:28:09,120
the notebooks will have access to all

00:28:06,799 --> 00:28:10,399
the key bindings the editors have access

00:28:09,120 --> 00:28:12,159
to the themes

00:28:10,399 --> 00:28:13,760
you get everything that you would expect

00:28:12,159 --> 00:28:15,760
from normal editor but you can

00:28:13,760 --> 00:28:17,600
make your own notebook you can use a

00:28:15,760 --> 00:28:19,039
rich api that already exists

00:28:17,600 --> 00:28:20,880
for other parts like i showed you with

00:28:19,039 --> 00:28:23,520
the language api you can use

00:28:20,880 --> 00:28:25,200
you can use the secrets api you can use

00:28:23,520 --> 00:28:26,799
all of the other apis that vs code

00:28:25,200 --> 00:28:28,880
offers for extensions

00:28:26,799 --> 00:28:30,000
and you can be discoverable through the

00:28:28,880 --> 00:28:31,200
marketplace

00:28:30,000 --> 00:28:32,720
and this is really exciting because

00:28:31,200 --> 00:28:33,520
we're excited to see what kind of

00:28:32,720 --> 00:28:36,720
domains

00:28:33,520 --> 00:28:38,480
come out of this come out of notebooks

00:28:36,720 --> 00:28:40,320
these we just showed you a couple but

00:28:38,480 --> 00:28:42,159
we're very excited very

00:28:40,320 --> 00:28:43,760
excited to see what you guys will come

00:28:42,159 --> 00:28:46,240
up with with

00:28:43,760 --> 00:28:47,840
this api and what kind of cool notebooks

00:28:46,240 --> 00:28:50,559
that are outside of experiences that we

00:28:47,840 --> 00:28:50,559
already have today

00:28:50,880 --> 00:28:56,399
so thank you for attending this talk and

00:28:54,000 --> 00:28:58,080
getting a deep dive into notebooks

00:28:56,399 --> 00:28:59,440
some next steps you can do to explore

00:28:58,080 --> 00:29:02,799
notebooks further one

00:28:59,440 --> 00:29:04,799
is you can install insiders so that that

00:29:02,799 --> 00:29:07,279
way you get the latest experience

00:29:04,799 --> 00:29:09,120
with notebooks and any other features

00:29:07,279 --> 00:29:10,640
that vs code is working on

00:29:09,120 --> 00:29:12,640
and if you want to create your own

00:29:10,640 --> 00:29:15,440
notebook i did a live stream

00:29:12,640 --> 00:29:17,440
two months ago on vs code about how to

00:29:15,440 --> 00:29:19,600
actually create a notebook and i did

00:29:17,440 --> 00:29:21,200
i coded up a notebook within the live

00:29:19,600 --> 00:29:21,679
stream so you can see how easy it is to

00:29:21,200 --> 00:29:23,039
do it

00:29:21,679 --> 00:29:24,960
takes about 30 minutes in that live

00:29:23,039 --> 00:29:26,640
stream and it's really easy to get

00:29:24,960 --> 00:29:29,440
started so there's a link

00:29:26,640 --> 00:29:29,919
um that you'll you'll have access to for

00:29:29,440 --> 00:29:32,640
this

00:29:29,919 --> 00:29:33,679
youtube link but yeah and thank you so

00:29:32,640 --> 00:29:36,159
much for joining

00:29:33,679 --> 00:29:37,600
uh hopefully you get creative and i'm

00:29:36,159 --> 00:29:38,240
we're very excited to see what kind of

00:29:37,600 --> 00:29:40,559
notebooks

00:29:38,240 --> 00:29:41,520
show up in the marketplace from you guys

00:29:40,559 --> 00:29:45,279
thank you guys

00:29:41,520 --> 00:29:45,279

YouTube URL: https://www.youtube.com/watch?v=g7k14HuWK8U


