Title: OpenJS Foundation AMA: Node-RED
Publication date: 2020-08-27
Playlist: OpenJS AMAs
Description: 
	Node-RED creators Nick O'Leary and Dave Conway-Jones chat with John Walicki and answer user-submitted questions about Node-RED.

The OpenJS Foundation is a member-supported non-profit organization that provides a neutral home for some of the most important project in the JavaScript ecosystem.  
Learn more and join us at https://openjsf.org
Captions: 
	00:00:04,490 --> 00:00:11,880
and your life welcome everyone

00:00:08,790 --> 00:00:15,240
thanks for joining our open Jas

00:00:11,880 --> 00:00:19,369
foundation livestream today and I am

00:00:15,240 --> 00:00:23,310
really delighted to have with me today

00:00:19,369 --> 00:00:26,250
Dave and Nick to join us for our chat

00:00:23,310 --> 00:00:29,789
first I hope that everyone is safe and

00:00:26,250 --> 00:00:32,309
healthy and staying appropriately social

00:00:29,789 --> 00:00:35,059
distancing a couple of things that I do

00:00:32,309 --> 00:00:37,890
want to cover for logistics reasons

00:00:35,059 --> 00:00:41,430
first want to remind everyone of our

00:00:37,890 --> 00:00:45,059
code of conduct and I'll be selecting

00:00:41,430 --> 00:00:48,750
appropriate questions from the prepared

00:00:45,059 --> 00:00:51,120
remarks and our submitted questions and

00:00:48,750 --> 00:00:54,180
from the live streams every couple of

00:00:51,120 --> 00:00:57,120
minutes I'll be checking to see if any

00:00:54,180 --> 00:00:59,879
questions are coming in and we'll we'll

00:00:57,120 --> 00:01:01,920
turn to those but I've prepared a whole

00:00:59,879 --> 00:01:05,549
set of questions I think that we will

00:01:01,920 --> 00:01:07,560
have fun with this really delighted so

00:01:05,549 --> 00:01:10,740
so let's get to it

00:01:07,560 --> 00:01:13,710
Nick Dave co-creators of the node-red

00:01:10,740 --> 00:01:16,920
project maintainer is really delighted

00:01:13,710 --> 00:01:19,880
that you're here with us today please

00:01:16,920 --> 00:01:21,540
take a moment to introduce yourselves

00:01:19,880 --> 00:01:24,860
thanks John

00:01:21,540 --> 00:01:26,299
so I'm Nick O'Leary as you say

00:01:24,860 --> 00:01:29,670
co-creative node-red

00:01:26,299 --> 00:01:31,259
I'm sure many many who follow the

00:01:29,670 --> 00:01:34,680
node-red project on the forum aware of

00:01:31,259 --> 00:01:37,040
it is will will know Dave and I and you

00:01:34,680 --> 00:01:40,829
know be aware of everything we do but

00:01:37,040 --> 00:01:43,020
yeah essentially we're the guys behind

00:01:40,829 --> 00:01:46,530
the curtain who created node-red

00:01:43,020 --> 00:01:50,070
originally what seven years ago now and

00:01:46,530 --> 00:01:52,259
have been plugging away at it and you

00:01:50,070 --> 00:01:57,060
know working to to build out the project

00:01:52,259 --> 00:02:01,920
we have today and I'm Dave Conway Jones

00:01:57,060 --> 00:02:04,290
so pleased to see you all guys online as

00:02:01,920 --> 00:02:06,630
Nick said I've been created about seven

00:02:04,290 --> 00:02:09,179
years ago I'm now part of IBM Research

00:02:06,630 --> 00:02:11,190
and we've been using this tool ever

00:02:09,179 --> 00:02:13,470
since for various things we've been

00:02:11,190 --> 00:02:15,390
building non-stop as

00:02:13,470 --> 00:02:20,430
go long so we keep extending it with

00:02:15,390 --> 00:02:22,650
your hope so Nick let's start off with a

00:02:20,430 --> 00:02:25,920
quick retrospective on the node-red

00:02:22,650 --> 00:02:28,170
history tell us what's what's been going

00:02:25,920 --> 00:02:29,130
on for the last seven years what's been

00:02:28,170 --> 00:02:33,600
going on

00:02:29,130 --> 00:02:36,570
so Amy briefly you know node-red came

00:02:33,600 --> 00:02:38,580
about as as a side project when Dave and

00:02:36,570 --> 00:02:41,250
I worked together in in our emerging

00:02:38,580 --> 00:02:43,560
technologies group wanting just to play

00:02:41,250 --> 00:02:45,240
around some technologies wanting to

00:02:43,560 --> 00:02:48,680
create some tooling that just made our

00:02:45,240 --> 00:02:50,880
life easier doing our day job of

00:02:48,680 --> 00:02:53,700
creating Internet of Things type

00:02:50,880 --> 00:02:57,420
projects but you know typically very

00:02:53,700 --> 00:02:59,400
quick turnaround very experimental just

00:02:57,420 --> 00:03:02,280
you know don't want spend huge amounts

00:02:59,400 --> 00:03:03,930
of time in deep code you just want to

00:03:02,280 --> 00:03:08,880
try and build a solution prove an idea

00:03:03,930 --> 00:03:12,150
and move on type of idea so yeah yeah it

00:03:08,880 --> 00:03:13,770
it it seems an obvious thing now but you

00:03:12,150 --> 00:03:16,350
know at the time it was you know what

00:03:13,770 --> 00:03:20,340
would it mean to have some tooling that

00:03:16,350 --> 00:03:22,170
let you abstract away the lines of code

00:03:20,340 --> 00:03:24,600
you have to write you know more than

00:03:22,170 --> 00:03:25,800
capable of writing that code but you

00:03:24,600 --> 00:03:27,959
know the more time you spend writing

00:03:25,800 --> 00:03:31,620
boilerplate code is less time you're

00:03:27,959 --> 00:03:34,950
actually bringing value to a to whatever

00:03:31,620 --> 00:03:36,989
you're doing so yeah I think it was

00:03:34,950 --> 00:03:39,269
ultimately just looking for a way to

00:03:36,989 --> 00:03:40,950
make our lives easier and and wanting to

00:03:39,269 --> 00:03:44,630
play around with new technologies you

00:03:40,950 --> 00:03:47,430
know at the time I wanted an excuse to

00:03:44,630 --> 00:03:50,190
do a bit of a deep dive into nodejs

00:03:47,430 --> 00:03:51,989
as a programming environment so node-red

00:03:50,190 --> 00:03:53,810
is pretty much the first thing I built

00:03:51,989 --> 00:03:56,100
in nodejs

00:03:53,810 --> 00:03:58,230
also wanted to play around with its

00:03:56,100 --> 00:04:00,540
browser visualizations and seeing what

00:03:58,230 --> 00:04:03,239
you could do and you know all these

00:04:00,540 --> 00:04:06,320
streams kind of came together in my mind

00:04:03,239 --> 00:04:09,030
for for what has turned into node-red

00:04:06,320 --> 00:04:10,860
and I was working on some projects where

00:04:09,030 --> 00:04:13,560
I was actually out sitting in the cold

00:04:10,860 --> 00:04:15,930
field somewhere trying to type cold code

00:04:13,560 --> 00:04:17,669
with cold fingers saying there's got to

00:04:15,930 --> 00:04:19,560
be a better way so when showed me the

00:04:17,669 --> 00:04:21,570
very first prototype of this I so

00:04:19,560 --> 00:04:23,820
grabbed it said yeah absolutely I need

00:04:21,570 --> 00:04:27,420
that when I when styled hacker wear that

00:04:23,820 --> 00:04:29,130
over the weekend and broke completely

00:04:27,420 --> 00:04:31,530
back out of my hands and said let's do

00:04:29,130 --> 00:04:33,450
this properly let's build it into a tool

00:04:31,530 --> 00:04:36,150
that can be extended and be useful to

00:04:33,450 --> 00:04:38,910
for other things did you have particular

00:04:36,150 --> 00:04:42,600
use cases in mind in that early days

00:04:38,910 --> 00:04:46,890
when it was just coming together or was

00:04:42,600 --> 00:04:50,250
it truly just a nodejs experiment so the

00:04:46,890 --> 00:04:52,440
original scenario was about MQTT

00:04:50,250 --> 00:04:56,220
messaging so if you're familiar with

00:04:52,440 --> 00:04:58,050
mqtt it's very lightweight published and

00:04:56,220 --> 00:05:00,990
subscribe' messaging you you subscribe

00:04:58,050 --> 00:05:02,760
or you listen to a topic and you publish

00:05:00,990 --> 00:05:05,310
messages to that topic

00:05:02,760 --> 00:05:08,550
you know we have a long history in our

00:05:05,310 --> 00:05:10,800
group with mqtt and and projects using

00:05:08,550 --> 00:05:14,310
it so that in fact the very very very

00:05:10,800 --> 00:05:16,710
first version of the code before we had

00:05:14,310 --> 00:05:20,730
come up with the name even was primarily

00:05:16,710 --> 00:05:22,980
about mapping messages that get

00:05:20,730 --> 00:05:26,190
published to one end qtg topic to a

00:05:22,980 --> 00:05:28,560
different entity top t topic maybe doing

00:05:26,190 --> 00:05:30,930
a bit of changing the message as it

00:05:28,560 --> 00:05:32,610
flowed between the two and I think it

00:05:30,930 --> 00:05:35,790
was it was you know Dave sat in that

00:05:32,610 --> 00:05:38,340
field knew he had to plug in a I think

00:05:35,790 --> 00:05:41,310
of a GPS or some sensor over a serial

00:05:38,340 --> 00:05:43,080
connection so you know unlike day two he

00:05:41,310 --> 00:05:45,960
was saying it's great but now how do I

00:05:43,080 --> 00:05:48,060
get my serial data in and you know that

00:05:45,960 --> 00:05:51,120
was when I then took it off him and went

00:05:48,060 --> 00:05:53,700
and worked out how we could make it a

00:05:51,120 --> 00:05:56,220
little bit more extensible and the idea

00:05:53,700 --> 00:05:59,250
of having these pluggable nodes started

00:05:56,220 --> 00:06:01,770
yeah really early on in the project and

00:05:59,250 --> 00:06:03,660
so the second node that was created

00:06:01,770 --> 00:06:06,960
after the second set of nodes was the

00:06:03,660 --> 00:06:10,050
serial nodes and because they've needed

00:06:06,960 --> 00:06:12,810
it in a project that day and I think for

00:06:10,050 --> 00:06:15,270
near for the first month or so every

00:06:12,810 --> 00:06:17,780
every new bit of function that was added

00:06:15,270 --> 00:06:20,820
was because we had a project that needed

00:06:17,780 --> 00:06:22,770
some new bit of function which meant

00:06:20,820 --> 00:06:25,680
which was really good because it meant

00:06:22,770 --> 00:06:27,720
we stayed focused on actual requirements

00:06:25,680 --> 00:06:30,480
you know this wasn't we weren't

00:06:27,720 --> 00:06:33,210
imagining use cases we had real use

00:06:30,480 --> 00:06:35,030
cases and real problems to solve and you

00:06:33,210 --> 00:06:38,880
know that that sort of sustained the

00:06:35,030 --> 00:06:40,169
requirements for for the first leg of

00:06:38,880 --> 00:06:43,349
its existence

00:06:40,169 --> 00:06:45,569
I know we'll talk about it later but on

00:06:43,349 --> 00:06:47,699
the very early use cases we actually do

00:06:45,569 --> 00:06:50,129
that intertwined up the production line

00:06:47,699 --> 00:06:53,310
in a factory with using no great so

00:06:50,129 --> 00:06:58,770
because they had a bunch of sensors big

00:06:53,310 --> 00:07:00,599
talk when we could use it to so you guys

00:06:58,770 --> 00:07:03,810
have mentioned that you worked in the

00:07:00,599 --> 00:07:06,449
emerging technologies Department that

00:07:03,810 --> 00:07:08,879
IBM herds lean and so you guys had a lot

00:07:06,449 --> 00:07:11,879
of latitude what's it been like to work

00:07:08,879 --> 00:07:14,159
in the open to work with open source to

00:07:11,879 --> 00:07:18,150
collaborate with the community for the

00:07:14,159 --> 00:07:21,270
last couple of years so certainly in our

00:07:18,150 --> 00:07:23,460
mind the goal was always that this

00:07:21,270 --> 00:07:27,749
needed to be an open source thing you

00:07:23,460 --> 00:07:29,969
know just the Bing Percy long long

00:07:27,749 --> 00:07:33,060
supporter of the open source way of

00:07:29,969 --> 00:07:35,610
developing but also in in the part of

00:07:33,060 --> 00:07:37,439
the organization we are were you know

00:07:35,610 --> 00:07:39,839
this this was a side project you knew

00:07:37,439 --> 00:07:42,449
this was not a an effort to build some

00:07:39,839 --> 00:07:47,430
big product this this was a tool that

00:07:42,449 --> 00:07:50,219
was useful to us and and had immediate

00:07:47,430 --> 00:07:54,300
relevance but we were not a group there

00:07:50,219 --> 00:07:57,180
to create new products as such and we

00:07:54,300 --> 00:07:58,710
very quickly recognized the value as

00:07:57,180 --> 00:08:00,330
much of value as there is in the core of

00:07:58,710 --> 00:08:01,349
node-red the real value is in that

00:08:00,330 --> 00:08:03,689
pallet of gnomes

00:08:01,349 --> 00:08:07,379
yeah the nodes represent what you can do

00:08:03,689 --> 00:08:09,060
and you know the rates that we were

00:08:07,379 --> 00:08:12,419
having to spend time writing nodes

00:08:09,060 --> 00:08:15,749
ourselves we kind of just knew

00:08:12,419 --> 00:08:17,819
instinctively the best way to expand the

00:08:15,749 --> 00:08:21,930
platform was to get other people writing

00:08:17,819 --> 00:08:23,159
the nodes for us so as we went through

00:08:21,930 --> 00:08:25,199
the process and got the various

00:08:23,159 --> 00:08:27,389
approvals as of course you have to do in

00:08:25,199 --> 00:08:31,979
in corporate environments to open-source

00:08:27,389 --> 00:08:34,199
it you know there was that was a speedy

00:08:31,979 --> 00:08:36,120
process I may have spoken about that

00:08:34,199 --> 00:08:38,010
before I mean people can find like the

00:08:36,120 --> 00:08:42,449
talk I did it monkey grow a few years

00:08:38,010 --> 00:08:44,660
ago about about that process when we

00:08:42,449 --> 00:08:47,819
open sourced it we very consciously

00:08:44,660 --> 00:08:51,930
removed any barrier we could imagine to

00:08:47,819 --> 00:08:52,920
other people creating nodes and you know

00:08:51,930 --> 00:08:55,500
I think in

00:08:52,920 --> 00:08:58,889
anyways that has been one of the keys to

00:08:55,500 --> 00:09:01,160
our to the success the project has had

00:08:58,889 --> 00:09:04,500
and that the popularity it's gained is

00:09:01,160 --> 00:09:06,899
because people aren't constrained to the

00:09:04,500 --> 00:09:09,480
functionality that Dave and I the core

00:09:06,899 --> 00:09:13,170
contributors if you like have time to -

00:09:09,480 --> 00:09:17,220
right so yeah you know that it's been a

00:09:13,170 --> 00:09:19,529
huge benefit to the project so IOT

00:09:17,220 --> 00:09:21,269
devices really lend themselves to flow

00:09:19,529 --> 00:09:23,699
based event-driven programming

00:09:21,269 --> 00:09:27,120
techniques what was the secret sauce

00:09:23,699 --> 00:09:33,990
that really let node-red become so

00:09:27,120 --> 00:09:36,959
popular in you know the IOT space well I

00:09:33,990 --> 00:09:38,880
think because that that's the the space

00:09:36,959 --> 00:09:40,560
we were using it you know we were

00:09:38,880 --> 00:09:43,019
running it as Dave said on raspberry

00:09:40,560 --> 00:09:45,089
PI's and factories in in fields

00:09:43,019 --> 00:09:48,510
connected to all sorts of interesting

00:09:45,089 --> 00:09:50,670
sensors it very much came from an

00:09:48,510 --> 00:09:52,800
Internet of Things philosophy but being

00:09:50,670 --> 00:09:54,630
event-driven because the sense of reads

00:09:52,800 --> 00:09:55,550
and data you need to do something with

00:09:54,630 --> 00:10:00,209
it

00:09:55,550 --> 00:10:02,940
and we very consciously when we open

00:10:00,209 --> 00:10:05,699
sourced it led the project under that

00:10:02,940 --> 00:10:06,930
sort of banner that it's visual

00:10:05,699 --> 00:10:10,260
programming for the Internet of Things

00:10:06,930 --> 00:10:11,610
and because again you know what six and

00:10:10,260 --> 00:10:13,890
half seven years ago when we actually

00:10:11,610 --> 00:10:16,079
open sourced it yeah the Internet of

00:10:13,890 --> 00:10:21,480
Things as an idea and a concept was very

00:10:16,079 --> 00:10:24,990
much at its at its peak of hype so you

00:10:21,480 --> 00:10:25,500
know that that helped get interest in

00:10:24,990 --> 00:10:28,410
the project

00:10:25,500 --> 00:10:29,550
but also I think it just a lot of

00:10:28,410 --> 00:10:31,019
individuals the fact we're doing it on

00:10:29,550 --> 00:10:34,649
Raspberry Pi the fact we were doing it

00:10:31,019 --> 00:10:37,459
on you know being an open project made

00:10:34,649 --> 00:10:39,720
it very accessible to a huge audience of

00:10:37,459 --> 00:10:41,370
individuals who you know they're not

00:10:39,720 --> 00:10:43,260
having to spend lots of money on

00:10:41,370 --> 00:10:46,829
specialist kit for this you know it's a

00:10:43,260 --> 00:10:49,110
Raspberry Pi it's you know like $50 and

00:10:46,829 --> 00:10:51,600
you know there there are away with it

00:10:49,110 --> 00:10:54,720
types of things so they're a huge part

00:10:51,600 --> 00:10:56,699
of our individual developer community if

00:10:54,720 --> 00:10:59,180
you like are people doing interesting

00:10:56,699 --> 00:11:02,910
things in their homes home automation

00:10:59,180 --> 00:11:04,320
you know it isn't you're not tied to

00:11:02,910 --> 00:11:07,230
having to do

00:11:04,320 --> 00:11:10,860
to industrial automation type projects

00:11:07,230 --> 00:11:12,389
with it it is very flexible I think the

00:11:10,860 --> 00:11:13,889
other the other piece is because it

00:11:12,389 --> 00:11:18,839
doesn't abstract away some of the

00:11:13,889 --> 00:11:20,550
boilerplate stuff like HTTP and a wharf

00:11:18,839 --> 00:11:21,990
indication and some of the other you

00:11:20,550 --> 00:11:24,060
know nitty-gritty things that people

00:11:21,990 --> 00:11:26,819
would have to write otherwise it does

00:11:24,060 --> 00:11:29,940
open it up to more lower level

00:11:26,819 --> 00:11:32,220
programmers lower skilled programmers

00:11:29,940 --> 00:11:34,440
maybe or people willing to learn or

00:11:32,220 --> 00:11:36,060
education the areas and whatever so why

00:11:34,440 --> 00:11:38,069
miss out the face of who can actually go

00:11:36,060 --> 00:11:41,220
over this technology actually put its

00:11:38,069 --> 00:11:42,959
use so indeed an awful lot of people we

00:11:41,220 --> 00:11:47,329
are seeing these days are using it in

00:11:42,959 --> 00:11:49,680
places like industrial use cases and

00:11:47,329 --> 00:11:51,959
production lines and in home automation

00:11:49,680 --> 00:11:53,009
whatever where they come from a you know

00:11:51,959 --> 00:11:54,750
they've got an engineering background

00:11:53,009 --> 00:11:56,009
and they got a hardware background they

00:11:54,750 --> 00:11:57,870
know how to pull things together and

00:11:56,009 --> 00:11:59,579
they build bits of kin whatever but may

00:11:57,870 --> 00:12:02,449
not have the actual programming skills

00:11:59,579 --> 00:12:04,259
to go and do some very low-level pieces

00:12:02,449 --> 00:12:07,259
essentially allows them until you

00:12:04,259 --> 00:12:10,310
actually get on them get on and build

00:12:07,259 --> 00:12:14,190
things and actually make things useful

00:12:10,310 --> 00:12:16,380
to use really so I keep being no Reds

00:12:14,190 --> 00:12:18,569
first playground and and we know that no

00:12:16,380 --> 00:12:21,870
Reds graduated to lots of other use

00:12:18,569 --> 00:12:27,269
cases can you tell us where else no red

00:12:21,870 --> 00:12:28,769
has become popular so we've always seen

00:12:27,269 --> 00:12:29,550
it being used in any sort of

00:12:28,769 --> 00:12:33,319
event-driven

00:12:29,550 --> 00:12:37,529
application style so whether that's

00:12:33,319 --> 00:12:39,839
building microservices rest api HTTP

00:12:37,529 --> 00:12:43,319
driven workloads that type of thing I

00:12:39,839 --> 00:12:45,930
mean it it really doesn't need to be

00:12:43,319 --> 00:12:48,630
constrained to to the IOT space and then

00:12:45,930 --> 00:12:52,529
that is you know we as I said we

00:12:48,630 --> 00:12:54,569
certainly started out under the IOT

00:12:52,529 --> 00:12:56,310
banner but you know over time

00:12:54,569 --> 00:13:00,180
particularly over the last year's we got

00:12:56,310 --> 00:13:03,089
to our 1/2 own release we've backed away

00:13:00,180 --> 00:13:06,810
if you like from labeling it IOT as much

00:13:03,089 --> 00:13:10,019
and trying to broaden the the labeling

00:13:06,810 --> 00:13:14,010
out to be more you know event-driven

00:13:10,019 --> 00:13:15,779
apps so a space we saw it very early on

00:13:14,010 --> 00:13:17,700
and again one of the great things about

00:13:15,779 --> 00:13:20,280
this being an open source project

00:13:17,700 --> 00:13:21,630
is you quickly lose sight of what people

00:13:20,280 --> 00:13:23,430
are doing with it you know it's no

00:13:21,630 --> 00:13:26,310
longer your little thing that people

00:13:23,430 --> 00:13:28,680
keep updating with what they're doing so

00:13:26,310 --> 00:13:32,480
just out of the blue we had some people

00:13:28,680 --> 00:13:34,770
contact us saying they were using it

00:13:32,480 --> 00:13:37,860
that they were developing a mobile

00:13:34,770 --> 00:13:41,820
banking application and they were using

00:13:37,860 --> 00:13:43,890
node-red as a development tool for the

00:13:41,820 --> 00:13:46,410
backend of this app now they weren't

00:13:43,890 --> 00:13:51,090
using it for the production system but

00:13:46,410 --> 00:13:52,620
as a developer organization they needed

00:13:51,090 --> 00:13:56,010
to be developing their mobile app in

00:13:52,620 --> 00:13:59,450
parallel to the backend but that meant

00:13:56,010 --> 00:14:01,980
the two teams were constantly sort of

00:13:59,450 --> 00:14:03,930
blocking each other because one needed

00:14:01,980 --> 00:14:04,380
the other to make progress well with

00:14:03,930 --> 00:14:06,870
node-red

00:14:04,380 --> 00:14:11,730
the mobile app team managed to mock up

00:14:06,870 --> 00:14:15,180
the entire back-end API in a day and

00:14:11,730 --> 00:14:16,470
then that gave them a test server that

00:14:15,180 --> 00:14:21,510
they could then focus on the mobile app

00:14:16,470 --> 00:14:25,440
and build their app against and yeah it

00:14:21,510 --> 00:14:28,020
wasn't useless because there's quite a

00:14:25,440 --> 00:14:32,190
few people come to think of know Brad as

00:14:28,020 --> 00:14:35,130
our prototyping tool and and because

00:14:32,190 --> 00:14:39,260
real programmers program in you know

00:14:35,130 --> 00:14:43,800
pick your favorite language C Java C++

00:14:39,260 --> 00:14:45,720
Ross go down the list assembler and and

00:14:43,800 --> 00:14:48,360
so how do you respond to the question

00:14:45,720 --> 00:14:51,510
where is it a prototyping tool or is it

00:14:48,360 --> 00:14:53,760
can you use it in production so there's

00:14:51,510 --> 00:14:56,430
no doubt that again in the very early

00:14:53,760 --> 00:14:59,490
days we did talk about it as it's great

00:14:56,430 --> 00:15:02,790
for that quick application development

00:14:59,490 --> 00:15:04,800
and prototyping but you know and it's

00:15:02,790 --> 00:15:07,770
absolutely matured um you know

00:15:04,800 --> 00:15:10,500
stabilized you to go interview very

00:15:07,770 --> 00:15:14,490
quickly and there are tons of examples

00:15:10,500 --> 00:15:16,550
of people using it in production we've

00:15:14,490 --> 00:15:19,140
got a huge list of companies who are

00:15:16,550 --> 00:15:21,900
using node-red in their own products of

00:15:19,140 --> 00:15:24,720
services whether it's services they sell

00:15:21,900 --> 00:15:26,610
or products they sell or they're using

00:15:24,720 --> 00:15:28,310
it internally but you know that's still

00:15:26,610 --> 00:15:30,480
production because they're still

00:15:28,310 --> 00:15:31,470
supporting their internal users through

00:15:30,480 --> 00:15:37,350
some

00:15:31,470 --> 00:15:39,150
application developed in node-red so we

00:15:37,350 --> 00:15:40,890
certainly do see it being used in

00:15:39,150 --> 00:15:42,300
production and often there's a case of

00:15:40,890 --> 00:15:45,660
you you build your prototype and if your

00:15:42,300 --> 00:15:47,280
prototype works and it's tested and it's

00:15:45,660 --> 00:15:48,870
solid it's like well at what point does

00:15:47,280 --> 00:15:54,090
it stop being a prototype and it becomes

00:15:48,870 --> 00:15:56,910
actually this works so but you're right

00:15:54,090 --> 00:15:59,400
about the comment about the idea that

00:15:56,910 --> 00:16:02,520
you don't see the code and I mean this

00:15:59,400 --> 00:16:05,670
is true of low code programming as a

00:16:02,520 --> 00:16:06,590
general concept you know not just with

00:16:05,670 --> 00:16:08,760
node-red

00:16:06,590 --> 00:16:11,310
but it's it's all about levels of

00:16:08,760 --> 00:16:12,870
abstraction and where what level of

00:16:11,310 --> 00:16:15,810
abstraction do you as a developer feel

00:16:12,870 --> 00:16:17,670
comfortable because see you reeled off a

00:16:15,810 --> 00:16:19,860
long list of programming languages there

00:16:17,670 --> 00:16:21,900
it's like well each programming language

00:16:19,860 --> 00:16:24,690
is just an abstraction on the next layer

00:16:21,900 --> 00:16:27,120
down so with each abstraction you are

00:16:24,690 --> 00:16:29,550
giving up some degree of control some

00:16:27,120 --> 00:16:33,180
degree of seeing the the individual

00:16:29,550 --> 00:16:35,190
lines of code now mythili was something

00:16:33,180 --> 00:16:37,170
with with low code programming like

00:16:35,190 --> 00:16:40,290
node-red is perhaps a bigger step

00:16:37,170 --> 00:16:43,290
because the abstraction is is different

00:16:40,290 --> 00:16:46,530
perhaps then going from C to JavaScript

00:16:43,290 --> 00:16:48,900
or whatever it might be but you know but

00:16:46,530 --> 00:16:52,560
the fact remains is as a programmer it

00:16:48,900 --> 00:16:58,080
does let you focus on the design of the

00:16:52,560 --> 00:17:01,890
logic of your application and there's no

00:16:58,080 --> 00:17:03,570
harm in that and it's different types of

00:17:01,890 --> 00:17:05,400
programmer as well definitely because

00:17:03,570 --> 00:17:07,020
people learn in different ways people

00:17:05,400 --> 00:17:08,610
think in different ways some people you

00:17:07,020 --> 00:17:12,569
know like drawing pictures and diagrams

00:17:08,610 --> 00:17:17,459
and flows of things to that drawing

00:17:12,569 --> 00:17:19,980
things on whiteboards let's explore that

00:17:17,459 --> 00:17:23,339
for a minute because popular right now

00:17:19,980 --> 00:17:26,040
are these low programming techniques and

00:17:23,339 --> 00:17:28,500
models and no red is an interesting half

00:17:26,040 --> 00:17:31,170
way in between a low code programming

00:17:28,500 --> 00:17:35,910
technique you still can write JavaScript

00:17:31,170 --> 00:17:37,860
if you need to with no red but so where

00:17:35,910 --> 00:17:43,380
do you see no red fitting in the low

00:17:37,860 --> 00:17:44,750
code programming world so I think you

00:17:43,380 --> 00:17:47,510
know the reality is

00:17:44,750 --> 00:17:50,860
it still takes a bit of experience to

00:17:47,510 --> 00:17:53,510
get going with no dread if you're not if

00:17:50,860 --> 00:17:55,610
if you're an individual looking to

00:17:53,510 --> 00:17:58,070
download it and run it because you know

00:17:55,610 --> 00:17:59,630
you need to install nodejs and you need

00:17:58,070 --> 00:18:02,890
to know how to have n install no dread

00:17:59,630 --> 00:18:05,300
so yeah there is still a bunch of

00:18:02,890 --> 00:18:09,530
frankly command-line things you have to

00:18:05,300 --> 00:18:10,790
do to get going there dread so but

00:18:09,530 --> 00:18:12,950
you're quite right once once you've got

00:18:10,790 --> 00:18:15,560
no dread going you can do a lot with it

00:18:12,950 --> 00:18:17,690
without worrying about code but it it

00:18:15,560 --> 00:18:21,050
does give you the hooks to get in and

00:18:17,690 --> 00:18:22,880
write code if you need to so yeah it

00:18:21,050 --> 00:18:26,240
does sort of hit that middle spot

00:18:22,880 --> 00:18:30,740
between completely isolating you from

00:18:26,240 --> 00:18:35,660
any line of code at all to forcing you

00:18:30,740 --> 00:18:37,840
to do everything in code and you know so

00:18:35,660 --> 00:18:40,850
there are plenty of low code

00:18:37,840 --> 00:18:44,210
alternatives out there lots are done as

00:18:40,850 --> 00:18:46,040
hosted services so people often look at

00:18:44,210 --> 00:18:49,250
like if this than that is a you know

00:18:46,040 --> 00:18:55,070
very popular example that is no that's

00:18:49,250 --> 00:18:56,660
no code programming where you know it's

00:18:55,070 --> 00:18:59,930
the service they offer is just a

00:18:56,660 --> 00:19:03,170
completely abstract out the Thiet the

00:18:59,930 --> 00:19:05,540
code entirely so yeah no dread has this

00:19:03,170 --> 00:19:07,280
middle ground and that that's I think

00:19:05,540 --> 00:19:11,170
one of its strengths in that it can sort

00:19:07,280 --> 00:19:13,460
of play across that wider audience and

00:19:11,170 --> 00:19:18,320
the point Dave made earlier you know the

00:19:13,460 --> 00:19:21,800
fact that our audience can be a broad

00:19:18,320 --> 00:19:24,500
range of experience you can have a

00:19:21,800 --> 00:19:27,680
domain expert you know an engineer who

00:19:24,500 --> 00:19:30,290
who knows far more about their domain

00:19:27,680 --> 00:19:32,320
than I do they know how to solve the

00:19:30,290 --> 00:19:34,880
problems if they can break it up into

00:19:32,320 --> 00:19:38,690
the sort of the logical flow chart of

00:19:34,880 --> 00:19:41,540
steps so no dread the fact that no dread

00:19:38,690 --> 00:19:44,960
allows them to express that they can

00:19:41,540 --> 00:19:46,310
look at a no read flow and use their

00:19:44,960 --> 00:19:48,950
domain knowledge and their domain

00:19:46,310 --> 00:19:51,680
expertise to intuit what that's doing

00:19:48,950 --> 00:19:55,100
and help just helps them your rod and

00:19:51,680 --> 00:19:56,600
okuda screenful have coned it is that

00:19:55,100 --> 00:19:57,860
level of abstraction that does make it

00:19:56,600 --> 00:20:01,520
more accessible

00:19:57,860 --> 00:20:04,490
cool so so let's talk about 2020 last

00:20:01,520 --> 00:20:07,670
year was a big year node-red 1.0 you

00:20:04,490 --> 00:20:10,309
threw down the production gauntlet and

00:20:07,670 --> 00:20:15,410
and so where do you see no red today and

00:20:10,309 --> 00:20:18,980
what's coming next well so yet we

00:20:15,410 --> 00:20:22,070
reached our the big 1.0 milestone in I

00:20:18,980 --> 00:20:23,720
think it was October last year yeah that

00:20:22,070 --> 00:20:26,090
was a major point for us to get to you

00:20:23,720 --> 00:20:29,150
know big stake in the ground of you know

00:20:26,090 --> 00:20:30,770
we've ticked off all the major items we

00:20:29,150 --> 00:20:34,010
had in our roadmap of saying you know

00:20:30,770 --> 00:20:35,450
this is this is good this is you know

00:20:34,010 --> 00:20:39,470
absolutely something you can move

00:20:35,450 --> 00:20:42,020
forward with confidence in that said you

00:20:39,470 --> 00:20:44,059
know we aren't done by any means there's

00:20:42,020 --> 00:20:51,230
there's a whole bunch of areas we want

00:20:44,059 --> 00:20:53,590
to expand on one of the one of the areas

00:20:51,230 --> 00:20:56,360
particularly in production usage that

00:20:53,590 --> 00:20:58,580
our story is weaker than it should be at

00:20:56,360 --> 00:21:01,790
the moment is around testing and how you

00:20:58,580 --> 00:21:05,620
can integrate testing into your node-red

00:21:01,790 --> 00:21:07,820
devant experience so we've got some

00:21:05,620 --> 00:21:11,419
start of some interesting conversations

00:21:07,820 --> 00:21:13,940
in the community around what is what is

00:21:11,419 --> 00:21:16,850
the node-red experience user experience

00:21:13,940 --> 00:21:21,559
for for creating tests that sit

00:21:16,850 --> 00:21:25,070
alongside your main flows so that's

00:21:21,559 --> 00:21:28,160
interesting and then you know we've

00:21:25,070 --> 00:21:30,260
always had these there are so many

00:21:28,160 --> 00:21:32,260
different ways we could go you know one

00:21:30,260 --> 00:21:35,570
of our perennial challenges is just

00:21:32,260 --> 00:21:38,780
trying to prioritize what we do we don't

00:21:35,570 --> 00:21:40,850
have the resource we would like to be

00:21:38,780 --> 00:21:44,530
able to pursue every op every

00:21:40,850 --> 00:21:47,390
opportunity that's out there so there's

00:21:44,530 --> 00:21:51,320
looking more at edge computing for

00:21:47,390 --> 00:21:52,520
example looking at how could you I mean

00:21:51,320 --> 00:21:56,419
one of the things I've spoken about

00:21:52,520 --> 00:21:58,370
before that motivates my some of the

00:21:56,419 --> 00:22:01,100
prioritization I I put forward is around

00:21:58,370 --> 00:22:05,809
this idea of being able to draw a flow

00:22:01,100 --> 00:22:08,870
in node-red that represents the logic

00:22:05,809 --> 00:22:11,059
from what runs on a device maybe it runs

00:22:08,870 --> 00:22:12,710
on 10,000 devices

00:22:11,059 --> 00:22:15,470
all the way through to the logic that

00:22:12,710 --> 00:22:18,200
runs in the cloud to manage the data

00:22:15,470 --> 00:22:21,289
coming from those devices but thinking

00:22:18,200 --> 00:22:23,240
about it of in terms of an event happens

00:22:21,289 --> 00:22:24,740
on a device what is the life cycle of

00:22:23,240 --> 00:22:27,529
that event all the way through to

00:22:24,740 --> 00:22:29,240
something happening on the server so in

00:22:27,529 --> 00:22:31,460
node-red being able to draw that

00:22:29,240 --> 00:22:33,580
end-to-end flow and being able to

00:22:31,460 --> 00:22:36,830
identify the different parts of the flow

00:22:33,580 --> 00:22:41,149
that you live in different they don't

00:22:36,830 --> 00:22:42,740
all run in one place you know what would

00:22:41,149 --> 00:22:45,350
it look like to then hit that deploy

00:22:42,740 --> 00:22:49,039
button and have that all broken up

00:22:45,350 --> 00:22:52,850
packaged and then pushed out to multiple

00:22:49,039 --> 00:22:54,080
places that yeah that's that's been a

00:22:52,850 --> 00:22:56,419
high-level concept I've talked about

00:22:54,080 --> 00:22:57,769
before that you know thinking about you

00:22:56,419 --> 00:23:01,399
know what are the missing pieces in the

00:22:57,769 --> 00:23:03,529
project what we want to do and more

00:23:01,399 --> 00:23:12,440
immediately you know we've got the 1.1

00:23:03,529 --> 00:23:15,619
release coming up pretty soon we've so

00:23:12,440 --> 00:23:17,960
one that one's got the ability to group

00:23:15,619 --> 00:23:19,820
nodes in the in the workspace and by

00:23:17,960 --> 00:23:23,570
which I mean like you might be familiar

00:23:19,820 --> 00:23:25,249
in in PowerPoint or keynote whatever it

00:23:23,570 --> 00:23:27,649
is you literally you know select some

00:23:25,249 --> 00:23:30,139
nodes group them you can then move those

00:23:27,649 --> 00:23:32,059
nodes around as a single entity but then

00:23:30,139 --> 00:23:34,669
the group can have a border it can have

00:23:32,059 --> 00:23:37,429
a background it can have a label so you

00:23:34,669 --> 00:23:41,149
can start visually documenting your

00:23:37,429 --> 00:23:42,710
flows that's what's in 1.1 but the the

00:23:41,149 --> 00:23:45,110
longer-term roadmap for the group

00:23:42,710 --> 00:23:47,629
feature is to then allow those groups to

00:23:45,110 --> 00:23:48,980
have properties so again that speaks

00:23:47,629 --> 00:23:52,369
back to that concept I've just mentioned

00:23:48,980 --> 00:23:54,980
about 2.2 different places the group

00:23:52,369 --> 00:23:58,700
could then be the way to say this group

00:23:54,980 --> 00:24:00,830
of nodes deploy to my devices this group

00:23:58,700 --> 00:24:02,679
goes to my gateways this group deploys

00:24:00,830 --> 00:24:06,259
to the cloud for example

00:24:02,679 --> 00:24:09,679
so it's grouping there's some redesign

00:24:06,259 --> 00:24:14,389
work of the sidebar to help try and make

00:24:09,679 --> 00:24:16,999
it easier to manage I mean the bulk of

00:24:14,389 --> 00:24:20,240
our users that we talk to you regularly

00:24:16,999 --> 00:24:22,610
on the forum are the Raspberry Pi user

00:24:20,240 --> 00:24:24,870
and they use it at a rap raspberry pie

00:24:22,610 --> 00:24:27,300
scale so they might have

00:24:24,870 --> 00:24:29,850
you know a dozen tabs in the editor

00:24:27,300 --> 00:24:34,380
maybe maybe they've got you know a few

00:24:29,850 --> 00:24:36,660
dozen nodes yeah but every now and in

00:24:34,380 --> 00:24:38,910
some crops turns I'm says well I've got

00:24:36,660 --> 00:24:42,120
about 200 tabs in my editor and I've got

00:24:38,910 --> 00:24:43,650
a few thousand nodes and we sort of

00:24:42,120 --> 00:24:46,740
think well you know that that's a scale

00:24:43,650 --> 00:24:49,800
of usage that goes beyond the sort of

00:24:46,740 --> 00:24:52,110
day-to-day experience so looking at you

00:24:49,800 --> 00:24:54,900
know how can we try make it easier to

00:24:52,110 --> 00:24:57,660
manage those large installations of

00:24:54,900 --> 00:25:00,750
node-red and then there's a whole host

00:24:57,660 --> 00:25:03,750
of interesting bits and pieces that have

00:25:00,750 --> 00:25:08,340
sort of crept along so we hope to have a

00:25:03,750 --> 00:25:09,690
beta of 1.1 in the next week or so you

00:25:08,340 --> 00:25:11,550
know we've got a few more pull requests

00:25:09,690 --> 00:25:13,230
that just need tidying up and merging

00:25:11,550 --> 00:25:18,059
before we we do that

00:25:13,230 --> 00:25:20,010
but you know it's on its way one of the

00:25:18,059 --> 00:25:21,990
things I'd say is that you know a lot of

00:25:20,010 --> 00:25:23,550
the features of get put in there are you

00:25:21,990 --> 00:25:26,160
know do come from the users in the

00:25:23,550 --> 00:25:29,130
community they come back with great

00:25:26,160 --> 00:25:30,420
feedback all the time high level

00:25:29,130 --> 00:25:32,190
features I wouldn't it be great if we

00:25:30,420 --> 00:25:34,650
can do this down to the low level things

00:25:32,190 --> 00:25:36,660
like and I don't understand why this you

00:25:34,650 --> 00:25:38,160
know once button does that you know you

00:25:36,660 --> 00:25:41,670
need better documentation and you know

00:25:38,160 --> 00:25:45,270
all the way down the stack we get good

00:25:41,670 --> 00:25:48,240
feedback from from from users and that

00:25:45,270 --> 00:25:51,050
is what drives day to day little tweaks

00:25:48,240 --> 00:25:55,470
and announcements that make it better so

00:25:51,050 --> 00:25:57,030
there was there's a question about some

00:25:55,470 --> 00:25:59,700
of the new features or

00:25:57,030 --> 00:26:03,090
feature requests and and some people

00:25:59,700 --> 00:26:07,200
think horizontally in a flow and some

00:26:03,090 --> 00:26:10,710
people think vertically in a more in a

00:26:07,200 --> 00:26:14,190
comic column a set of techniques have

00:26:10,710 --> 00:26:15,120
you explored doing changing the way the

00:26:14,190 --> 00:26:20,970
nodes

00:26:15,120 --> 00:26:23,550
flow so this has yeah this has been one

00:26:20,970 --> 00:26:26,190
of those of perkily like bubbling along

00:26:23,550 --> 00:26:27,330
in the background should we say so you

00:26:26,190 --> 00:26:29,370
know the questions been asked before

00:26:27,330 --> 00:26:32,840
about you know what why do our flows go

00:26:29,370 --> 00:26:36,750
horizontally rather than vertically yeah

00:26:32,840 --> 00:26:38,910
turns with you that that was a I didn't

00:26:36,750 --> 00:26:41,130
make a conscious choice if you like when

00:26:38,910 --> 00:26:42,630
on day one of creating no dread it just

00:26:41,130 --> 00:26:45,240
seemed to me to make sense to go from

00:26:42,630 --> 00:26:49,950
left to right because that's that's just

00:26:45,240 --> 00:26:53,280
what felt natural at the time but but we

00:26:49,950 --> 00:26:55,350
know you know that there are lots of

00:26:53,280 --> 00:26:57,420
valid reasons why someone might want to

00:26:55,350 --> 00:27:01,440
draw their flows vertically going top to

00:26:57,420 --> 00:27:03,210
bottom so much so we know there's some

00:27:01,440 --> 00:27:05,370
users in the node-red Japan user group

00:27:03,210 --> 00:27:06,990
who are you know a really active user

00:27:05,370 --> 00:27:08,910
group and get some really interesting

00:27:06,990 --> 00:27:11,400
stuff coming from them

00:27:08,910 --> 00:27:16,110
they've actually provided we now have a

00:27:11,400 --> 00:27:17,850
pool request that allows node-red to

00:27:16,110 --> 00:27:21,750
draw the flows vertically rather than

00:27:17,850 --> 00:27:24,090
horizontally some of the challenges

00:27:21,750 --> 00:27:26,010
around that though are now sort of going

00:27:24,090 --> 00:27:28,700
beyond just how do you draw them

00:27:26,010 --> 00:27:31,160
vertically rather than horizontally its

00:27:28,700 --> 00:27:34,530
challenges around the user experience of

00:27:31,160 --> 00:27:37,470
how does that mean we have to mix

00:27:34,530 --> 00:27:39,990
horizontal and vertical if someone

00:27:37,470 --> 00:27:44,280
creates a flow that's vertically aligned

00:27:39,990 --> 00:27:48,180
and a horizontal editor imports it what

00:27:44,280 --> 00:27:51,420
do we do and so that so we've sort of

00:27:48,180 --> 00:27:53,100
got beyond the basic task of have we got

00:27:51,420 --> 00:27:55,380
the code to draw things vertically and

00:27:53,100 --> 00:27:57,330
you know we have that code now we're

00:27:55,380 --> 00:27:59,150
kind of at the point now well now we've

00:27:57,330 --> 00:28:02,250
got that we've got to try and figure out

00:27:59,150 --> 00:28:04,560
how do we make that part of the node-red

00:28:02,250 --> 00:28:08,550
experience without compromising the

00:28:04,560 --> 00:28:12,030
node-red experience so yeah so that's

00:28:08,550 --> 00:28:15,060
not currently in the 1.1 plan it's

00:28:12,030 --> 00:28:17,540
because it's to us a slightly knit well

00:28:15,060 --> 00:28:20,310
in my mind lower priority based on

00:28:17,540 --> 00:28:21,420
conversations but again if people in the

00:28:20,310 --> 00:28:25,350
community you feel strongly about that

00:28:21,420 --> 00:28:27,270
we can bring it back but you just know

00:28:25,350 --> 00:28:29,180
that there's a bunch of bench of user

00:28:27,270 --> 00:28:33,660
experience design still to be done to

00:28:29,180 --> 00:28:36,990
sort that out properly so there's

00:28:33,660 --> 00:28:40,200
another question here Nick about doing

00:28:36,990 --> 00:28:43,350
an encrypted node-red application where

00:28:40,200 --> 00:28:46,710
you would create a flow and then sort of

00:28:43,350 --> 00:28:49,590
package it into an app similar to an

00:28:46,710 --> 00:28:51,510
electron standalone application that you

00:28:49,590 --> 00:28:52,260
would run on that native operating

00:28:51,510 --> 00:28:55,559
system

00:28:52,260 --> 00:28:58,830
Windows Linux Mac mm-hmm any thoughts

00:28:55,559 --> 00:29:00,559
yet about that so I think they're two

00:28:58,830 --> 00:29:05,130
slightly different ideas there around

00:29:00,559 --> 00:29:06,600
the packaging so on the net Dave talked

00:29:05,130 --> 00:29:10,799
about the electron side but on the

00:29:06,600 --> 00:29:14,520
encrypted side that's a it's a hard

00:29:10,799 --> 00:29:17,429
problem to do right because any sort of

00:29:14,520 --> 00:29:21,510
encryption well something's got to have

00:29:17,429 --> 00:29:24,240
a key that can decrypt it so yeah

00:29:21,510 --> 00:29:27,630
there's in terms of trying to create

00:29:24,240 --> 00:29:29,970
well best you can do is obfuscation but

00:29:27,630 --> 00:29:31,860
ultimately the code is going to be there

00:29:29,970 --> 00:29:34,080
that someone can examine I mean you can

00:29:31,860 --> 00:29:36,450
decompile java or you can you know

00:29:34,080 --> 00:29:41,220
there's there's ways and means of

00:29:36,450 --> 00:29:42,900
inspecting code so yeah if it's a model

00:29:41,220 --> 00:29:46,230
that people are interested in and of

00:29:42,900 --> 00:29:49,530
course we're open to discussing it but I

00:29:46,230 --> 00:29:52,169
think there's enough hard problems to

00:29:49,530 --> 00:29:54,980
try and solve there that it's not

00:29:52,169 --> 00:29:57,270
something where we are actively pursuing

00:29:54,980 --> 00:30:00,059
we know there's some interest around

00:29:57,270 --> 00:30:04,350
encrypting of sub flows in node-red

00:30:00,059 --> 00:30:07,380
so allow sub flows to become things that

00:30:04,350 --> 00:30:09,360
can be more easily shared between users

00:30:07,380 --> 00:30:11,610
but perhaps you don't want to share the

00:30:09,360 --> 00:30:13,490
inner workings with the user because it

00:30:11,610 --> 00:30:15,960
might contain proprietary information

00:30:13,490 --> 00:30:18,360
but again you're having done a bit of

00:30:15,960 --> 00:30:22,890
design work around that it's a hard

00:30:18,360 --> 00:30:25,950
problem to deal with the key management

00:30:22,890 --> 00:30:28,799
of how you encrypt how would you decide

00:30:25,950 --> 00:30:31,320
who can decrypt it and once one person

00:30:28,799 --> 00:30:32,940
could decrypt it then you know anyone

00:30:31,320 --> 00:30:36,059
can get hold of that key and decrypt it

00:30:32,940 --> 00:30:39,540
potentially so it's a Newton problem but

00:30:36,059 --> 00:30:41,730
it there's no easy answers that's for

00:30:39,540 --> 00:30:44,750
the electron side again that splits into

00:30:41,730 --> 00:30:48,360
at least two versions as well there's a

00:30:44,750 --> 00:30:50,220
there's a thought about do you just have

00:30:48,360 --> 00:30:52,110
a no great electron that way it's

00:30:50,220 --> 00:30:53,820
basically just the IDE for doing editing

00:30:52,110 --> 00:30:55,230
flows and you pointed out a flow or you

00:30:53,820 --> 00:30:58,559
pointed a different machine or whatever

00:30:55,230 --> 00:31:00,870
it is and created basically a note of an

00:30:58,559 --> 00:31:04,070
editor that's an electron app so that

00:31:00,870 --> 00:31:05,730
you just run the Nexen file there you go

00:31:04,070 --> 00:31:07,260
then

00:31:05,730 --> 00:31:08,549
the other the other thought is well but

00:31:07,260 --> 00:31:10,440
you can also build things like

00:31:08,549 --> 00:31:11,549
dashboards and it might be outs of

00:31:10,440 --> 00:31:13,769
dashboards later and those are there

00:31:11,549 --> 00:31:15,450
which is actually your app with a front

00:31:13,769 --> 00:31:16,950
end on it in which case you just don't

00:31:15,450 --> 00:31:19,529
want the editor piece used one yet show

00:31:16,950 --> 00:31:23,570
application running and we already have

00:31:19,529 --> 00:31:26,190
there's also there's a electron no Grid

00:31:23,570 --> 00:31:28,350
project out on github that I run which

00:31:26,190 --> 00:31:30,990
is they've got a basic skeleton for that

00:31:28,350 --> 00:31:32,429
people want to use that and try that and

00:31:30,990 --> 00:31:33,899
that works in that mode they basically

00:31:32,429 --> 00:31:36,630
have it gives you a dashboard you run

00:31:33,899 --> 00:31:40,740
your dashboard but don't expose the

00:31:36,630 --> 00:31:43,230
editor if you want to explore that for a

00:31:40,740 --> 00:31:45,389
minute because then in production you

00:31:43,230 --> 00:31:49,350
really want to separate the editor from

00:31:45,389 --> 00:31:53,419
the runtime and so so just being able to

00:31:49,350 --> 00:31:55,919
run sort of a headless node-red flows

00:31:53,419 --> 00:31:59,370
becomes a really important part of that

00:31:55,919 --> 00:32:03,510
12 factor make it repeatable and

00:31:59,370 --> 00:32:06,240
controlled do you see NORAD's scaling up

00:32:03,510 --> 00:32:08,399
in a in a production set of environments

00:32:06,240 --> 00:32:10,500
where you you've got pretty heavy

00:32:08,399 --> 00:32:12,389
workloads you don't really want to bring

00:32:10,500 --> 00:32:16,110
the editor along you just want to bring

00:32:12,389 --> 00:32:17,970
the runtime forward yeah so we already

00:32:16,110 --> 00:32:20,490
have all the bits and bits to do that

00:32:17,970 --> 00:32:22,620
today and that is a pattern you can do I

00:32:20,490 --> 00:32:25,950
think what's distinct about the electron

00:32:22,620 --> 00:32:27,960
side is it's the user experience of how

00:32:25,950 --> 00:32:33,029
you install it frankly you know it's

00:32:27,960 --> 00:32:34,980
it's a a operating system native

00:32:33,029 --> 00:32:38,250
installer whether it's your own Mac

00:32:34,980 --> 00:32:40,350
Linux Windows you know it you get a it

00:32:38,250 --> 00:32:44,250
feels like a native app that you're

00:32:40,350 --> 00:32:46,380
installing so so in the case of you've

00:32:44,250 --> 00:32:48,899
created something that presents data on

00:32:46,380 --> 00:32:50,880
a node or a dashboard or any other and

00:32:48,899 --> 00:32:53,760
you've the dashboard tool kits that are

00:32:50,880 --> 00:32:55,950
out there for node-red you know if that

00:32:53,760 --> 00:33:00,000
dashboard is the application you want to

00:32:55,950 --> 00:33:02,909
distribute to users then then that

00:33:00,000 --> 00:33:05,370
electron model is an interesting one on

00:33:02,909 --> 00:33:07,289
that on the 12 factor side absolutely

00:33:05,370 --> 00:33:10,110
you know you you want to have version

00:33:07,289 --> 00:33:15,149
control you want to have repeatable

00:33:10,110 --> 00:33:16,980
builds and yeah I and I've gone blank on

00:33:15,149 --> 00:33:18,850
most of the other 12 factors but yeah

00:33:16,980 --> 00:33:21,399
they are they're they're well

00:33:18,850 --> 00:33:23,919
and we have good patterns for how you do

00:33:21,399 --> 00:33:26,919
12 factor 4 with no dread without the

00:33:23,919 --> 00:33:29,200
editor whether it's doing it with

00:33:26,919 --> 00:33:31,450
containers whether it's doing you know

00:33:29,200 --> 00:33:34,529
we've seen people doing interesting

00:33:31,450 --> 00:33:36,809
things around Kubb cuban eighties around

00:33:34,529 --> 00:33:39,159
managing node-red

00:33:36,809 --> 00:33:41,380
applications and again that's the space

00:33:39,159 --> 00:33:45,240
I would like the node-red project to

00:33:41,380 --> 00:33:49,990
have more content on and more patterns

00:33:45,240 --> 00:33:52,870
within the project but just in terms of

00:33:49,990 --> 00:33:54,460
where our resource and effort has so far

00:33:52,870 --> 00:33:58,330
been applied that that isn't something

00:33:54,460 --> 00:33:59,950
we've we've produced a content around

00:33:58,330 --> 00:34:04,389
but but we know people in the community

00:33:59,950 --> 00:34:06,279
are doing it quite successfully so let's

00:34:04,389 --> 00:34:09,010
talk about some best practices there

00:34:06,279 --> 00:34:11,770
because we you know we all see you know

00:34:09,010 --> 00:34:14,859
people sharing flows in the in the forum

00:34:11,770 --> 00:34:19,240
and some of them are giant hairball

00:34:14,859 --> 00:34:22,300
spaghetti of of code and and I you know

00:34:19,240 --> 00:34:26,619
I've through my evolution of becoming a

00:34:22,300 --> 00:34:29,589
no dread programmer do you have any tips

00:34:26,619 --> 00:34:33,040
for the audience around writing good

00:34:29,589 --> 00:34:35,349
readable no read flows and how to

00:34:33,040 --> 00:34:39,579
construct them the types of techniques

00:34:35,349 --> 00:34:42,069
you might recommend oh it's just I mean

00:34:39,579 --> 00:34:43,990
the starting point is often just get a

00:34:42,069 --> 00:34:46,300
bit more familiar with the core set of

00:34:43,990 --> 00:34:48,040
nodes the basic set of nodes because

00:34:46,300 --> 00:34:52,599
there's a lot of functionality in those

00:34:48,040 --> 00:34:54,849
nodes that if you're coming from a a

00:34:52,599 --> 00:34:56,109
coding background you might

00:34:54,849 --> 00:34:57,310
instinctively just reach for the

00:34:56,109 --> 00:35:01,390
function node where you can write

00:34:57,310 --> 00:35:04,660
JavaScript and then you you risk ending

00:35:01,390 --> 00:35:06,790
up with you know of an input node where

00:35:04,660 --> 00:35:08,380
the event comes in then a function node

00:35:06,790 --> 00:35:10,810
with a few hundred lines of JavaScript

00:35:08,380 --> 00:35:16,349
and then an output node and you've kind

00:35:10,810 --> 00:35:16,349
of lost the benefit of loco programming

00:35:16,500 --> 00:35:22,140
that said there are times when that is a

00:35:19,089 --> 00:35:26,800
absolutely valid and useful pattern but

00:35:22,140 --> 00:35:28,510
there's a lot of you know a lot of basic

00:35:26,800 --> 00:35:31,790
building blocks in the palette that you

00:35:28,510 --> 00:35:34,730
can you can use and a lot of function

00:35:31,790 --> 00:35:41,840
that you can you can rely on in those

00:35:34,730 --> 00:35:42,890
core nodes then it's looking at one of

00:35:41,840 --> 00:35:45,770
you know people talk about spaghetti

00:35:42,890 --> 00:35:47,810
code you know code that's sprawling and

00:35:45,770 --> 00:35:49,430
just a real mess one of the downsides of

00:35:47,810 --> 00:35:52,070
the visual programming like no dread is

00:35:49,430 --> 00:35:54,850
you literally draw spaghetti on the

00:35:52,070 --> 00:35:57,710
screen rather than metaphorically so

00:35:54,850 --> 00:36:00,830
just thinking about how you lay out the

00:35:57,710 --> 00:36:03,920
flows you we have things like the link

00:36:00,830 --> 00:36:06,590
node that allow you to break a wire and

00:36:03,920 --> 00:36:08,300
so you don't see the wire on-screen so

00:36:06,590 --> 00:36:11,420
the flow can jump from one point to

00:36:08,300 --> 00:36:13,430
another you know just think about the

00:36:11,420 --> 00:36:16,640
visual presentation and the group

00:36:13,430 --> 00:36:19,010
feature coming one-to-one I think will

00:36:16,640 --> 00:36:21,980
be quite useful for helping users

00:36:19,010 --> 00:36:25,280
document their flows and create clean

00:36:21,980 --> 00:36:27,260
code as it were I'm definitely looking

00:36:25,280 --> 00:36:29,900
forward to the grouping feature I do

00:36:27,260 --> 00:36:32,500
quite a bit of layout and thought about

00:36:29,900 --> 00:36:35,960
how I want to building the flow first

00:36:32,500 --> 00:36:39,640
before I before I just dive into you

00:36:35,960 --> 00:36:41,990
know grabbing every node in a pallet

00:36:39,640 --> 00:36:44,450
tentacle using things like link nodes

00:36:41,990 --> 00:36:46,490
and sub flows is also very very handy to

00:36:44,450 --> 00:36:48,110
actually sort of clean up your page by

00:36:46,490 --> 00:36:50,540
using lymph nodes so other than tab

00:36:48,110 --> 00:36:52,820
different tabs together or just even on

00:36:50,540 --> 00:36:57,140
one place user stuff lots of wires going

00:36:52,820 --> 00:36:58,940
back across the page so you know in some

00:36:57,140 --> 00:37:04,880
of the larger apps that I've constructed

00:36:58,940 --> 00:37:08,330
multiple flow tabs link nodes talking to

00:37:04,880 --> 00:37:10,400
backends talking to devices building web

00:37:08,330 --> 00:37:13,640
interfaces and dashboards

00:37:10,400 --> 00:37:16,930
do you have developers now coming and

00:37:13,640 --> 00:37:23,900
with really large production node-red

00:37:16,930 --> 00:37:27,890
applications and flows yeah yeah I mean

00:37:23,900 --> 00:37:32,240
we do see well we hit do here tales of

00:37:27,890 --> 00:37:34,340
of large flows large large installations

00:37:32,240 --> 00:37:36,490
often we get to hear about them because

00:37:34,340 --> 00:37:38,720
people are raising problems not

00:37:36,490 --> 00:37:41,270
necessarily around things not working

00:37:38,720 --> 00:37:44,420
but you know we get some great user

00:37:41,270 --> 00:37:49,730
feedback in terms of usability

00:37:44,420 --> 00:37:52,160
so a good example is the runtime the

00:37:49,730 --> 00:37:54,230
node-red runtime is single tenant it's

00:37:52,160 --> 00:37:58,760
running one set of flows it's not a

00:37:54,230 --> 00:38:00,410
multi-user runtime but it does allow you

00:37:58,760 --> 00:38:02,210
to have multiple editors connected to it

00:38:00,410 --> 00:38:03,890
at the same time with people working on

00:38:02,210 --> 00:38:05,869
different you know working on the flows

00:38:03,890 --> 00:38:08,510
at the same time and if one user deploys

00:38:05,869 --> 00:38:10,309
changes it notifies all the other users

00:38:08,510 --> 00:38:13,000
and interrupts them and they have to

00:38:10,309 --> 00:38:15,710
merge the changes in there and then so

00:38:13,000 --> 00:38:18,819
it's better than it used to be because

00:38:15,710 --> 00:38:21,500
it used to be.we you could very easily

00:38:18,819 --> 00:38:24,670
over right someone's changes because you

00:38:21,500 --> 00:38:28,250
didn't know they're deployed and update

00:38:24,670 --> 00:38:29,599
it so that's good that we don't know

00:38:28,250 --> 00:38:31,190
that doesn't happen

00:38:29,599 --> 00:38:33,049
the downside is it can be quite a

00:38:31,190 --> 00:38:35,289
disruptive experience when you have two

00:38:33,049 --> 00:38:38,480
people where to sing at the same time so

00:38:35,289 --> 00:38:40,670
again that's an area I would like us to

00:38:38,480 --> 00:38:43,670
improve and do some more sort of

00:38:40,670 --> 00:38:48,049
automatic merging and more real-time

00:38:43,670 --> 00:38:50,509
editing between multiple users so like

00:38:48,049 --> 00:38:53,029
in Google Docs where you can see

00:38:50,509 --> 00:38:57,049
people's edits at the same time you know

00:38:53,029 --> 00:38:59,329
what would one of one of my many side

00:38:57,049 --> 00:39:02,569
projects that I've started but not done

00:38:59,329 --> 00:39:04,789
much on is what is that how would we

00:39:02,569 --> 00:39:06,500
work so that if two users have the

00:39:04,789 --> 00:39:08,440
editor open at the same time they can

00:39:06,500 --> 00:39:11,089
see what the other person is doing and

00:39:08,440 --> 00:39:14,630
it doesn't matter who hits deploy it's

00:39:11,089 --> 00:39:17,059
it's less disruptive so but it's it's

00:39:14,630 --> 00:39:20,359
the user feedback you know Dave and I

00:39:17,059 --> 00:39:23,029
use no dread in the way we use it that's

00:39:20,359 --> 00:39:24,380
just you know two examples across many

00:39:23,029 --> 00:39:28,039
thousand different ways you could use

00:39:24,380 --> 00:39:30,200
node-red so you know the best way to

00:39:28,039 --> 00:39:31,880
improve the user experience is to get

00:39:30,200 --> 00:39:35,390
that feedback to us and let us know what

00:39:31,880 --> 00:39:37,730
works what doesn't work turn the

00:39:35,390 --> 00:39:41,359
conversation to node read node

00:39:37,730 --> 00:39:43,690
programmers so my typical approach when

00:39:41,359 --> 00:39:46,910
I want to experiment with a new API is

00:39:43,690 --> 00:39:49,789
to you know poke it with an HTTP request

00:39:46,910 --> 00:39:54,079
node I build a table I build a chart I

00:39:49,789 --> 00:39:57,380
dropped some data on a map I'm certain

00:39:54,079 --> 00:39:58,190
that node-red programmers do similar

00:39:57,380 --> 00:40:00,380
things

00:39:58,190 --> 00:40:02,990
well would you say to a developer who's

00:40:00,380 --> 00:40:05,329
it sort of at that cusp of he I should

00:40:02,990 --> 00:40:07,369
really turn that API into a node red

00:40:05,329 --> 00:40:12,289
node where would they go for for

00:40:07,369 --> 00:40:14,930
guidance and help for that so it's an

00:40:12,289 --> 00:40:16,579
area where as as with so much you know

00:40:14,930 --> 00:40:18,440
we want more documentation we want more

00:40:16,579 --> 00:40:22,309
education material around how to do some

00:40:18,440 --> 00:40:27,049
of this stuff when it comes to creating

00:40:22,309 --> 00:40:28,549
new nodes for the pallet there's again

00:40:27,049 --> 00:40:29,720
one of the great things of having you

00:40:28,549 --> 00:40:31,280
know what two and a half thousand

00:40:29,720 --> 00:40:32,839
third-party nodes publish to the

00:40:31,280 --> 00:40:35,569
community is there are a lot of examples

00:40:32,839 --> 00:40:40,010
out there lots of examples you can learn

00:40:35,569 --> 00:40:40,880
from cribbed from but you know I will

00:40:40,010 --> 00:40:43,280
fully acknowledge you know our

00:40:40,880 --> 00:40:46,549
documentation covers a lot of the basics

00:40:43,280 --> 00:40:49,460
but hasn't necessarily kept up with

00:40:46,549 --> 00:40:51,770
everything that is possible to do so

00:40:49,460 --> 00:40:56,089
again if people are looking for ways to

00:40:51,770 --> 00:40:58,910
get involved if people are interested in

00:40:56,089 --> 00:41:00,200
helping out the narrow project then you

00:40:58,910 --> 00:41:02,359
know and that they have some experience

00:41:00,200 --> 00:41:05,210
around doing this stuff than your

00:41:02,359 --> 00:41:08,809
documentation is is always a very

00:41:05,210 --> 00:41:10,970
welcome way to to help the community so

00:41:08,809 --> 00:41:13,010
how do you think developers can

00:41:10,970 --> 00:41:15,470
contribute to the project in

00:41:13,010 --> 00:41:18,470
translations and design and forum

00:41:15,470 --> 00:41:22,940
questions and documentation where what

00:41:18,470 --> 00:41:24,829
can we be doing to help you guys all

00:41:22,940 --> 00:41:27,140
those above yeah absolutely honest and

00:41:24,829 --> 00:41:28,640
documentation translations we can go

00:41:27,140 --> 00:41:31,640
like two translations or three

00:41:28,640 --> 00:41:33,490
translations at the moment you know we

00:41:31,640 --> 00:41:35,930
are definitely not language expert so

00:41:33,490 --> 00:41:38,930
yeah anyone who wants to help do some

00:41:35,930 --> 00:41:40,130
the translations that'd be great but we

00:41:38,930 --> 00:41:41,750
kind of need like more than one person

00:41:40,130 --> 00:41:44,900
per language because if you need some

00:41:41,750 --> 00:41:49,940
work we just take somebody's word for it

00:41:44,900 --> 00:41:52,339
without checking it and nodes obviously

00:41:49,940 --> 00:41:55,460
improving nodes feedback on those is

00:41:52,339 --> 00:41:57,170
always good indeed there are some other

00:41:55,460 --> 00:41:58,700
projects out there but there's a no gen

00:41:57,170 --> 00:42:00,470
project we have which actually helped

00:41:58,700 --> 00:42:02,000
generate nodes from function notes if

00:42:00,470 --> 00:42:04,609
you got a function though you convert it

00:42:02,000 --> 00:42:07,069
into a real node if one and didn't

00:42:04,609 --> 00:42:08,539
because I mentioned you know take some

00:42:07,069 --> 00:42:10,180
phones and make those into nodes a bomb

00:42:08,539 --> 00:42:12,190
some point in the future

00:42:10,180 --> 00:42:15,970
those are things that are

00:42:12,190 --> 00:42:18,140
around helping some we're developing

00:42:15,970 --> 00:42:20,270
some of the other bigger features that

00:42:18,140 --> 00:42:22,070
mentioned and we like that you know we

00:42:20,270 --> 00:42:23,870
do need help with designing and

00:42:22,070 --> 00:42:25,540
discussing them as well because you know

00:42:23,870 --> 00:42:27,590
some of these are great ideas that

00:42:25,540 --> 00:42:29,870
somebody's proposed and there's a quick

00:42:27,590 --> 00:42:31,550
arguing if a quick discussion about it

00:42:29,870 --> 00:42:33,680
they will goes quiet and then nothing

00:42:31,550 --> 00:42:36,280
happens and so so time so why wasn't

00:42:33,680 --> 00:42:38,630
happen because it needs much bigger

00:42:36,280 --> 00:42:40,850
in-depth discussion and we need people

00:42:38,630 --> 00:42:42,830
to actually engage and help help with

00:42:40,850 --> 00:42:47,510
those discussions and extra feedback

00:42:42,830 --> 00:42:49,460
force on these bigger topics because we

00:42:47,510 --> 00:42:51,980
can't no you can't get it all by

00:42:49,460 --> 00:42:53,180
ourselves all the time and if we just if

00:42:51,980 --> 00:42:54,290
we sort of leave you didn't think about

00:42:53,180 --> 00:42:57,230
it we'll just be sitting there thinking

00:42:54,290 --> 00:42:59,960
about it for a long time so you guys

00:42:57,230 --> 00:43:02,600
spend a lot of time in the forum

00:42:59,960 --> 00:43:04,190
engaging with the community and you know

00:43:02,600 --> 00:43:08,600
you've been working in now in the open

00:43:04,190 --> 00:43:11,300
for about seven years it's open is

00:43:08,600 --> 00:43:14,510
really an entire mindset now you guys

00:43:11,300 --> 00:43:18,250
have I've been creating code and it's

00:43:14,510 --> 00:43:20,480
out there for critique and admiration

00:43:18,250 --> 00:43:22,820
it's sometimes rough-and-tumble

00:43:20,480 --> 00:43:25,250
sometimes it's inspiring how do you guys

00:43:22,820 --> 00:43:26,120
wade through the forum and the constant

00:43:25,250 --> 00:43:29,230
questions there

00:43:26,120 --> 00:43:32,690
what's your experiences with open source

00:43:29,230 --> 00:43:34,580
it's a mixed bag I think everyone who's

00:43:32,690 --> 00:43:38,090
been experiencing open source for some

00:43:34,580 --> 00:43:40,550
time is you know you you want the great

00:43:38,090 --> 00:43:42,230
things about having a large community of

00:43:40,550 --> 00:43:45,260
being an open community is you get

00:43:42,230 --> 00:43:48,530
people asking questions from all sorts

00:43:45,260 --> 00:43:50,450
of different backgrounds experiences you

00:43:48,530 --> 00:43:55,880
know they don't know us we don't know

00:43:50,450 --> 00:43:58,550
them so you know it's it's there's a

00:43:55,880 --> 00:44:02,540
there's certainly a skill to manage in

00:43:58,550 --> 00:44:04,010
the community that you know you need to

00:44:02,540 --> 00:44:08,000
recognize whenever someone asks a

00:44:04,010 --> 00:44:09,350
question you don't know who they are you

00:44:08,000 --> 00:44:12,080
don't know what mood they're in you

00:44:09,350 --> 00:44:14,300
don't know how much they know and you

00:44:12,080 --> 00:44:17,030
you can't assume anything about them so

00:44:14,300 --> 00:44:21,500
it does take you know it does take

00:44:17,030 --> 00:44:24,290
effort to to matter to work in the

00:44:21,500 --> 00:44:25,849
community and keep it a positive healthy

00:44:24,290 --> 00:44:27,589
environment I think

00:44:25,849 --> 00:44:29,839
you know I think based on feedback we

00:44:27,589 --> 00:44:32,359
have you know we do a fairly good job in

00:44:29,839 --> 00:44:36,049
the neighborhood community to keep it a

00:44:32,359 --> 00:44:39,499
welcoming environment there's a great

00:44:36,049 --> 00:44:44,509
group of people on the forum who you

00:44:39,499 --> 00:44:46,219
know who now you know there's it's it's

00:44:44,509 --> 00:44:48,289
gone from the case where Dave and I have

00:44:46,219 --> 00:44:49,969
to answer every question to you know

00:44:48,289 --> 00:44:51,469
Dave and I chip in when there's

00:44:49,969 --> 00:44:54,739
something useful for us to chip in but

00:44:51,469 --> 00:44:57,519
but the community really does get

00:44:54,739 --> 00:45:00,199
involved and support each other which is

00:44:57,519 --> 00:45:02,089
positive and indeed they have skills way

00:45:00,199 --> 00:45:07,819
beyond that I was in many aspects of

00:45:02,089 --> 00:45:10,039
who's really good be engaged in the

00:45:07,819 --> 00:45:12,079
community in their forums as well there

00:45:10,039 --> 00:45:14,509
there's a question that I wanted to

00:45:12,079 --> 00:45:16,910
bring up just came through on the on the

00:45:14,509 --> 00:45:19,729
YouTube but it was it's about no read on

00:45:16,910 --> 00:45:24,069
constrained devices and and that sort of

00:45:19,729 --> 00:45:28,279
leads into edge so edge devices sort of

00:45:24,069 --> 00:45:30,829
yester constrained by memory and CPU we

00:45:28,279 --> 00:45:33,829
we want to be able to run node-red at

00:45:30,829 --> 00:45:36,619
the edge but running in a constrained

00:45:33,829 --> 00:45:39,859
environment sometimes tough have you

00:45:36,619 --> 00:45:44,150
guys done any modeling to to show how to

00:45:39,859 --> 00:45:48,529
tweet no dread how to tweak the flows so

00:45:44,150 --> 00:45:50,839
that performs well on the edge and to be

00:45:48,529 --> 00:45:52,130
honest I spend a lot of time playing

00:45:50,839 --> 00:45:56,299
with things at the edge on the small

00:45:52,130 --> 00:45:58,509
devices and the answer is only owned by

00:45:56,299 --> 00:46:01,219
you know trying and and things like that

00:45:58,509 --> 00:46:02,569
really do again this goes back to summer

00:46:01,219 --> 00:46:04,279
tuning and it was talking about we don't

00:46:02,569 --> 00:46:06,529
have you know some expertise in

00:46:04,279 --> 00:46:09,170
profiling and things like that and we do

00:46:06,529 --> 00:46:12,769
have an IV WRTV a memory profiler

00:46:09,170 --> 00:46:15,709
sometimes yeah yeah I mean the we do

00:46:12,769 --> 00:46:17,329
have a no wrt bill that's out there so

00:46:15,709 --> 00:46:18,949
you can use open wrt somebody's

00:46:17,329 --> 00:46:24,049
mentioned I think an open question there

00:46:18,949 --> 00:46:25,699
um but we can there are certain things I

00:46:24,049 --> 00:46:27,709
mean the key things remember are most of

00:46:25,699 --> 00:46:30,469
these are our messages are objects that

00:46:27,709 --> 00:46:32,299
passed around through memory so if you

00:46:30,469 --> 00:46:34,160
know you feel as a small device with a

00:46:32,299 --> 00:46:35,690
small amount of memory if you then hook

00:46:34,160 --> 00:46:39,290
up a video camera to it and start

00:46:35,690 --> 00:46:40,430
sending big JPEGs around you will you

00:46:39,290 --> 00:46:43,580
we'll be filling up the memory with

00:46:40,430 --> 00:46:47,150
JPEGs until they get redeemed up by no

00:46:43,580 --> 00:46:49,840
itself no chess itself so it's some of

00:46:47,150 --> 00:46:52,760
its down to the underlying no chess and

00:46:49,840 --> 00:46:54,500
can that run on the device is that

00:46:52,760 --> 00:46:55,670
supported on the device as well most

00:46:54,500 --> 00:46:57,560
certainly some of the smaller devices

00:46:55,670 --> 00:47:01,310
now know chess and now starting to

00:46:57,560 --> 00:47:04,340
abandon 32-bit for some of the older

00:47:01,310 --> 00:47:09,410
devices and things like that so we are

00:47:04,340 --> 00:47:13,010
kind of sitting on top on no GS that's

00:47:09,410 --> 00:47:15,340
an issue point in itself so what we are

00:47:13,010 --> 00:47:17,990
so aware of you know there are other

00:47:15,340 --> 00:47:18,940
jobs runtimes designed for smaller

00:47:17,990 --> 00:47:24,050
devices

00:47:18,940 --> 00:47:28,160
IO tjs Esprit no you know a bunch of

00:47:24,050 --> 00:47:30,920
really interesting platforms now the

00:47:28,160 --> 00:47:33,230
node-red runtime is designed for no js'

00:47:30,920 --> 00:47:36,280
you unashamedly so you can't just drop

00:47:33,230 --> 00:47:38,360
it onto one of those of the runtimes but

00:47:36,280 --> 00:47:41,920
I'd certainly think that there's an

00:47:38,360 --> 00:47:44,870
interesting project to be done around

00:47:41,920 --> 00:47:48,050
being able to for a subset of nodes

00:47:44,870 --> 00:47:50,380
being able to do code generation the

00:47:48,050 --> 00:47:54,860
targets one of those lighter white

00:47:50,380 --> 00:47:57,140
JavaScript runtimes so whether it's a

00:47:54,860 --> 00:47:58,490
cut-down node-red runtime or it's

00:47:57,140 --> 00:48:01,280
actually doing code generation I don't

00:47:58,490 --> 00:48:02,540
know but yeah we again we've long talked

00:48:01,280 --> 00:48:06,790
around that would be really interesting

00:48:02,540 --> 00:48:10,940
idea get to the point where you can

00:48:06,790 --> 00:48:13,150
deploy a flow to a tiny device yeah

00:48:10,940 --> 00:48:16,340
you're not going to be able to do

00:48:13,150 --> 00:48:18,140
install arbitrary nodes it would have to

00:48:16,340 --> 00:48:20,060
be a custom palette of nodes for that

00:48:18,140 --> 00:48:22,190
device therefore being implemented for

00:48:20,060 --> 00:48:24,230
that device but but again you know the

00:48:22,190 --> 00:48:26,630
programming model is there and there's

00:48:24,230 --> 00:48:28,880
no reason why it couldn't be the

00:48:26,630 --> 00:48:32,750
node-red user experience couldn't be

00:48:28,880 --> 00:48:35,450
extended to target other platforms so

00:48:32,750 --> 00:48:38,090
one step above those really constrained

00:48:35,450 --> 00:48:41,710
devices are the newer raspberry pi for

00:48:38,090 --> 00:48:44,900
the Jetson Nano they're actually pretty

00:48:41,710 --> 00:48:49,450
substantial small board Linux computers

00:48:44,900 --> 00:48:53,120
I want the question about edge and maybe

00:48:49,450 --> 00:48:56,840
starting to drift towards doing AI

00:48:53,120 --> 00:49:00,920
inferencing an AI prediction do you see

00:48:56,840 --> 00:49:06,380
no dread plus AI becoming an important

00:49:00,920 --> 00:49:07,850
pattern in the future absolutely yeah I

00:49:06,380 --> 00:49:09,440
mean we're certainly playing around with

00:49:07,850 --> 00:49:11,570
tensorflow chess I know this mother

00:49:09,440 --> 00:49:16,160
colleagues of ours met from that forum

00:49:11,570 --> 00:49:19,010
as well and that is certainly a lot of

00:49:16,160 --> 00:49:20,690
interest and traction again though some

00:49:19,010 --> 00:49:22,820
of it need does need to run on top of

00:49:20,690 --> 00:49:25,160
the runtimes underneath so we kind of

00:49:22,820 --> 00:49:27,320
rely on some of you have already done

00:49:25,160 --> 00:49:29,030
the binaries for in this case that case

00:49:27,320 --> 00:49:31,840
tends to flow but also moving over

00:49:29,030 --> 00:49:32,960
things like can you run optimizing

00:49:31,840 --> 00:49:36,500
nodejs

00:49:32,960 --> 00:49:37,850
honor my folks have those devices in

00:49:36,500 --> 00:49:40,610
quite a lot of the problem sometimes

00:49:37,850 --> 00:49:43,190
these days is they they GPUs and no jess

00:49:40,610 --> 00:49:46,880
is single threaded so how do you take

00:49:43,190 --> 00:49:49,340
advantage of a GPU nodejs and that's my

00:49:46,880 --> 00:49:52,610
way beyond the scope of this project per

00:49:49,340 --> 00:49:53,930
se some people have cracked it we're

00:49:52,610 --> 00:49:56,270
quite a few rapid with a node and

00:49:53,930 --> 00:49:59,300
Maconie in the palette I've seen some

00:49:56,270 --> 00:50:02,060
really interesting tensorflow jas node

00:49:59,300 --> 00:50:04,700
starting to bubble up in from the

00:50:02,060 --> 00:50:07,400
community and be it's going to be a fun

00:50:04,700 --> 00:50:10,280
ride to see where edge and node red can

00:50:07,400 --> 00:50:14,060
go together but but so let's do the next

00:50:10,280 --> 00:50:16,790
thing about edge is managing them with

00:50:14,060 --> 00:50:20,920
containerized workloads so I'm really

00:50:16,790 --> 00:50:22,730
would love to hear your perspectives on

00:50:20,920 --> 00:50:26,990
containerization and where you think

00:50:22,730 --> 00:50:33,880
node red with kubernetes with openshift

00:50:26,990 --> 00:50:39,350
with operators could be going so from a

00:50:33,880 --> 00:50:42,650
abstract no dry perspective yeah we we

00:50:39,350 --> 00:50:44,030
focus on being a node.js application and

00:50:42,650 --> 00:50:46,100
you know that beings with the lowest

00:50:44,030 --> 00:50:50,210
common denominator of of what node red

00:50:46,100 --> 00:50:51,980
is then looking at okay well how do you

00:50:50,210 --> 00:50:53,270
then take that application and how do

00:50:51,980 --> 00:50:56,920
you run it

00:50:53,270 --> 00:50:58,970
where have you made use to run it so yep

00:50:56,920 --> 00:51:02,330
containerization it's important one we

00:50:58,970 --> 00:51:05,570
do have our docker images we've kicked

00:51:02,330 --> 00:51:06,860
around ideas and but they are yeah at

00:51:05,570 --> 00:51:08,780
this stage just I do

00:51:06,860 --> 00:51:11,230
over a cup of coffee rather than

00:51:08,780 --> 00:51:13,850
anything in the actual backlog around

00:51:11,230 --> 00:51:17,990
what if in the node-red editor there was

00:51:13,850 --> 00:51:21,430
a build site bar that gave you a almost

00:51:17,990 --> 00:51:25,130
a one-click experience to building a

00:51:21,430 --> 00:51:28,190
custom docker image from your flows for

00:51:25,130 --> 00:51:32,330
example you know lots of interesting

00:51:28,190 --> 00:51:34,100
concepts there that yeah when you look

00:51:32,330 --> 00:51:37,940
at whether it's Cuban eighties whether

00:51:34,100 --> 00:51:40,100
it's OpenShift whether it's even sort of

00:51:37,940 --> 00:51:44,000
service environments where whatever it

00:51:40,100 --> 00:51:47,870
might be you know our projects focus is

00:51:44,000 --> 00:51:49,250
being a node.js runtime that we can run

00:51:47,870 --> 00:51:52,220
and this is what we say we run wherever

00:51:49,250 --> 00:51:55,880
you can run no js' so you know we don't

00:51:52,220 --> 00:51:57,730
we don't want to limit ourselves or or

00:51:55,880 --> 00:52:02,030
the imagination in terms of the art

00:51:57,730 --> 00:52:04,760
possible you know we talked a bit about

00:52:02,030 --> 00:52:06,290
the electron stuff creating a standalone

00:52:04,760 --> 00:52:09,740
and storable version of node-red

00:52:06,290 --> 00:52:12,110
again that would just be a an

00:52:09,740 --> 00:52:14,150
alternative way of consuming node-red it

00:52:12,110 --> 00:52:16,700
wouldn't replace what you can do today

00:52:14,150 --> 00:52:18,890
you know you would still we would still

00:52:16,700 --> 00:52:21,500
be in npm module that can be installed

00:52:18,890 --> 00:52:23,870
and and run as a completely embedded

00:52:21,500 --> 00:52:26,360
runtime in a bigger node.js application

00:52:23,870 --> 00:52:28,820
whatever it might be but the electron

00:52:26,360 --> 00:52:30,710
wrapping would make it more consumable

00:52:28,820 --> 00:52:32,450
to a different class of user perhaps

00:52:30,710 --> 00:52:35,270
someone who doesn't have internet access

00:52:32,450 --> 00:52:38,060
so they can't run an NPM install but

00:52:35,270 --> 00:52:40,400
they can copy a zip file on a thumb

00:52:38,060 --> 00:52:42,340
drive to get a native installer that

00:52:40,400 --> 00:52:47,270
installs the application onto a

00:52:42,340 --> 00:52:48,980
disconnected device for example so yes

00:52:47,270 --> 00:52:51,260
you know containerization is important

00:52:48,980 --> 00:52:52,910
when we have our docker images but you

00:52:51,260 --> 00:52:56,060
know in my mind it's just one of the

00:52:52,910 --> 00:52:57,590
many different avenues of how we look to

00:52:56,060 --> 00:53:01,940
deliver node-red into different

00:52:57,590 --> 00:53:04,160
environments so I wanted to ask Dave a

00:53:01,940 --> 00:53:06,320
question about node Brad dashboards

00:53:04,160 --> 00:53:09,890
there was a question from our submitted

00:53:06,320 --> 00:53:13,250
comments asking about refreshing no read

00:53:09,890 --> 00:53:17,060
dashboard to adopt a more modern

00:53:13,250 --> 00:53:20,390
framework like reactor vous angular 1.0

00:53:17,060 --> 00:53:20,539
sort of archaic at this point but really

00:53:20,390 --> 00:53:22,249
a

00:53:20,539 --> 00:53:25,509
amazing things are being done with no

00:53:22,249 --> 00:53:30,199
red dashboard we see some great notes

00:53:25,509 --> 00:53:33,109
just in the last year the red node uik

00:53:30,199 --> 00:53:34,910
ball and level and LED there's lots of

00:53:33,109 --> 00:53:38,779
interesting things but what's your

00:53:34,910 --> 00:53:41,539
thoughts on replacing the their

00:53:38,779 --> 00:53:43,219
framework yeah okay so to be honest the

00:53:41,539 --> 00:53:45,890
dashboard was always like a side project

00:53:43,219 --> 00:53:48,289
in Sofia we we adopted because it was

00:53:45,890 --> 00:53:52,039
providing a great visualization give

00:53:48,289 --> 00:53:53,449
provided by the guy in the community we

00:53:52,039 --> 00:53:54,919
then actually had to go off and do some

00:53:53,449 --> 00:53:59,539
real work and he couldn't maintain it

00:53:54,919 --> 00:54:01,369
for a while so we adopted it um it's not

00:53:59,539 --> 00:54:03,559
the core the product project that cool

00:54:01,369 --> 00:54:07,069
project is obviously the main node-red

00:54:03,559 --> 00:54:08,959
the dashboard is is however in our first

00:54:07,069 --> 00:54:11,779
class citizen and we try and maintain it

00:54:08,959 --> 00:54:13,969
and enhance it and by added allowing

00:54:11,779 --> 00:54:17,359
other people to now add extra widgets to

00:54:13,969 --> 00:54:21,799
it that should enhance it some more but

00:54:17,359 --> 00:54:23,839
yeah we internally don't have any desire

00:54:21,799 --> 00:54:25,759
to rewrite the whole thing again from

00:54:23,839 --> 00:54:27,289
scratch we're quite happy to let other

00:54:25,759 --> 00:54:28,819
people do that if someone else wants to

00:54:27,289 --> 00:54:31,880
propose a project to bring forward a

00:54:28,819 --> 00:54:34,969
project there is a lower-level project

00:54:31,880 --> 00:54:36,709
called UI builder from from Julien in

00:54:34,969 --> 00:54:38,209
the in the community you've done a great

00:54:36,709 --> 00:54:40,849
job they're providing which is basically

00:54:38,209 --> 00:54:42,949
a bare-bones framework hooks hooks into

00:54:40,849 --> 00:54:44,419
node-red and all of them so you need to

00:54:42,949 --> 00:54:46,999
bring your own frameworks with no great

00:54:44,419 --> 00:54:48,349
to build your own dashboards so the

00:54:46,999 --> 00:54:50,749
other problem with dashboards in state

00:54:48,349 --> 00:54:52,159
now they all start to look the same so

00:54:50,749 --> 00:54:53,869
everyone's got their own opinion on

00:54:52,159 --> 00:54:55,519
which way it should look different so

00:54:53,869 --> 00:54:58,369
you know we're not going to go and

00:54:55,519 --> 00:55:00,579
preach as that and bring out a new

00:54:58,369 --> 00:55:02,839
dashboard any time soon

00:55:00,579 --> 00:55:05,959
the other interesting point when we talk

00:55:02,839 --> 00:55:07,459
about modernizing frameworks feedback we

00:55:05,959 --> 00:55:09,529
sometimes or questions we sometimes get

00:55:07,459 --> 00:55:11,390
you talk about this of the sorts of

00:55:09,529 --> 00:55:13,609
questions we get in the community you

00:55:11,390 --> 00:55:15,319
know we get the questions of when you're

00:55:13,609 --> 00:55:18,439
going to rewrite it in typescript or

00:55:15,319 --> 00:55:22,130
when are you gonna change the editor UI

00:55:18,439 --> 00:55:25,939
toolkit to be something more modern than

00:55:22,130 --> 00:55:29,509
jQuery and and jobs it's like well in my

00:55:25,939 --> 00:55:31,789
mind I purposely chose not to adopt any

00:55:29,509 --> 00:55:34,670
of the frameworks you know if seven

00:55:31,789 --> 00:55:36,830
years ago we'd picked the latest angular

00:55:34,670 --> 00:55:38,270
we would have had to have expended a

00:55:36,830 --> 00:55:40,520
huge amount of resource between then and

00:55:38,270 --> 00:55:43,250
now just keeping current with the

00:55:40,520 --> 00:55:46,160
toolkits as they've done however many

00:55:43,250 --> 00:55:49,160
major version bumps over time so it does

00:55:46,160 --> 00:55:53,740
mean you to create the node you eyes yes

00:55:49,160 --> 00:55:56,000
it's it's jQuery and JavaScript you know

00:55:53,740 --> 00:55:59,450
there's nothing wrong with that you can

00:55:56,000 --> 00:56:01,970
do a heck of a lot with it yes so it

00:55:59,450 --> 00:56:04,340
means it's a it's not the programming

00:56:01,970 --> 00:56:10,040
experience you get with like vue.js

00:56:04,340 --> 00:56:11,720
framework or react but you know we've it

00:56:10,040 --> 00:56:14,720
was a conscious choice to try and keep

00:56:11,720 --> 00:56:19,550
it relatively vanilla so that we

00:56:14,720 --> 00:56:22,550
wouldn't be tied to upstream projects

00:56:19,550 --> 00:56:24,140
that decide to you know deprecated and

00:56:22,550 --> 00:56:28,760
make into a major version that

00:56:24,140 --> 00:56:31,070
completely breaks previous things so but

00:56:28,760 --> 00:56:35,060
that said you know if people wanted to

00:56:31,070 --> 00:56:37,070
explore how what would it mean to create

00:56:35,060 --> 00:56:39,530
a node you are using react or whatever

00:56:37,070 --> 00:56:40,940
it might be what what would the node

00:56:39,530 --> 00:56:42,770
editor need to do to be able to support

00:56:40,940 --> 00:56:47,210
that I think that would be a genuinely

00:56:42,770 --> 00:56:49,220
interesting project but again to avoid

00:56:47,210 --> 00:56:50,950
getting too opinionated on toolkits

00:56:49,220 --> 00:56:55,670
other than having the opinion that we

00:56:50,950 --> 00:56:57,800
don't want to be opinionated we are

00:56:55,670 --> 00:56:59,960
coming close to at our time I've got two

00:56:57,800 --> 00:57:02,600
more questions here that I wanted to

00:56:59,960 --> 00:57:04,760
very quickly as I look down through this

00:57:02,600 --> 00:57:06,770
emitted questions I'm you guys got a

00:57:04,760 --> 00:57:11,330
couple of really nice love letters here

00:57:06,770 --> 00:57:13,460
justice in thanking you and Dave for

00:57:11,330 --> 00:57:16,310
your work in the community and work on

00:57:13,460 --> 00:57:20,300
node rad and I just want to reflect that

00:57:16,310 --> 00:57:23,450
I think many of us building really fun

00:57:20,300 --> 00:57:26,660
amazing apps on top of your work and I

00:57:23,450 --> 00:57:28,820
think that's a great testament to to

00:57:26,660 --> 00:57:30,860
your commitment over many years so thank

00:57:28,820 --> 00:57:34,040
you for that well thank you and thank

00:57:30,860 --> 00:57:35,900
you all for pushing this direction and

00:57:34,040 --> 00:57:38,390
so what do you guys think about doing

00:57:35,900 --> 00:57:40,400
more of this this discussion format and

00:57:38,390 --> 00:57:42,050
they asked me any things have you

00:57:40,400 --> 00:57:45,380
thought about doing a node read

00:57:42,050 --> 00:57:47,810
conference someday or or more regulars

00:57:45,380 --> 00:57:50,890
know Brad meetup we're all working

00:57:47,810 --> 00:57:54,260
from home in this new virtual world

00:57:50,890 --> 00:57:56,570
YouTube live in zoom sessions and why

00:57:54,260 --> 00:57:57,890
not what are you guys about doing

00:57:56,570 --> 00:58:01,340
something on a more

00:57:57,890 --> 00:58:03,500
yeah well absolutely so I mentioned the

00:58:01,340 --> 00:58:05,600
node-red Japan user group your very

00:58:03,500 --> 00:58:07,970
consciousness the time we have remaining

00:58:05,600 --> 00:58:09,860
so the new pan user group have been

00:58:07,970 --> 00:58:12,830
really active for a number of years now

00:58:09,860 --> 00:58:15,550
they do have regular meetups and they

00:58:12,830 --> 00:58:19,090
last year held a conference in Tokyo and

00:58:15,550 --> 00:58:22,520
they are currently planning a conference

00:58:19,090 --> 00:58:24,500
for fourth quarter this year but

00:58:22,520 --> 00:58:27,260
obviously you know given given the world

00:58:24,500 --> 00:58:29,870
situation who knows where

00:58:27,260 --> 00:58:32,180
whether that what whether that's going

00:58:29,870 --> 00:58:34,400
to be able to go ahead or not I've

00:58:32,180 --> 00:58:37,490
always yeah I'd love to be able to do

00:58:34,400 --> 00:58:39,470
some sort of node-red event again the

00:58:37,490 --> 00:58:40,670
fact we're kind of stuck to doing things

00:58:39,470 --> 00:58:44,540
virtually you actually works in our

00:58:40,670 --> 00:58:47,270
favor so yeah you know let's see let's

00:58:44,540 --> 00:58:49,700
see what happens this year let's see

00:58:47,270 --> 00:58:51,680
what happens over the summer it would be

00:58:49,700 --> 00:58:54,320
great to put together some sort of

00:58:51,680 --> 00:58:58,490
virtual event and but also do some more

00:58:54,320 --> 00:59:02,840
regular virtual meetups ways took to

00:58:58,490 --> 00:59:06,020
talk in the community great well I think

00:59:02,840 --> 00:59:08,240
I want to wrap up here with a huge shout

00:59:06,020 --> 00:59:09,800
out and thank you Nick thank you Dave I

00:59:08,240 --> 00:59:12,170
wanted to thank the community for

00:59:09,800 --> 00:59:15,820
joining us today and you know continued

00:59:12,170 --> 00:59:18,260
conversations in the in the channels

00:59:15,820 --> 00:59:20,960
really delighted that the open jazz

00:59:18,260 --> 00:59:24,500
foundation brought us all together are

00:59:20,960 --> 00:59:26,360
for this ask me anything and so Wow any

00:59:24,500 --> 00:59:29,480
last thoughts and we'll close ourselves

00:59:26,360 --> 00:59:30,920
up yeah finally for me if his you know

00:59:29,480 --> 00:59:32,900
any questions we didn't get round to

00:59:30,920 --> 00:59:34,340
whatever please just join us on in no

00:59:32,900 --> 00:59:37,570
bread slack channel or on the discourse

00:59:34,340 --> 00:59:40,340
forum we'll be there we're always there

00:59:37,570 --> 00:59:42,140
yeah no absolutely you know thank you to

00:59:40,340 --> 00:59:44,120
everyone you know those those who know

00:59:42,140 --> 00:59:46,790
us who have long-standing members the

00:59:44,120 --> 00:59:48,020
community those who are joining this for

00:59:46,790 --> 00:59:50,600
the first time trying to find out more

00:59:48,020 --> 00:59:51,950
about node-red yeah thank you to the

00:59:50,600 --> 00:59:55,130
community it's the community that makes

00:59:51,950 --> 00:59:57,140
open-source and you know yes Dave and I

00:59:55,130 --> 00:59:58,610
spend our time writing code but frankly

00:59:57,140 --> 01:00:00,260
you know the code would be meaningless

00:59:58,610 --> 01:00:01,170
without without the community behind it

01:00:00,260 --> 01:00:04,559
so you know

01:00:01,170 --> 01:00:06,950
thank you to ever thanks everyone

01:00:04,559 --> 01:00:06,950

YouTube URL: https://www.youtube.com/watch?v=gGr1SX7nxfw


