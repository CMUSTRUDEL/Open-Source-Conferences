Title: OpenJS Foundation AMA: jQuery
Publication date: 2020-08-27
Playlist: OpenJS AMAs
Description: 
	The OpenJS Foundation is a member-supported non-profit organization that provides a neutral home for some of the most important project in the JavaScript ecosystem.  
Learn more and join us at https://openjsf.org
Captions: 
	00:00:02,600 --> 00:00:11,509
cool looks like we are live according to

00:00:06,799 --> 00:00:15,000
the zoom let Rachel confirm we are live

00:00:11,509 --> 00:00:16,890
super duper ok well good morning

00:00:15,000 --> 00:00:19,980
everyone or evening or afternoon

00:00:16,890 --> 00:00:22,260
depending on your locality proper

00:00:19,980 --> 00:00:24,390
greeting to you my name is joy person

00:00:22,260 --> 00:00:28,019
I'm the open days foundations and

00:00:24,390 --> 00:00:31,650
community manager and today we are

00:00:28,019 --> 00:00:34,590
asking questions about the Open Jazz

00:00:31,650 --> 00:00:38,730
foundation impact project probably the

00:00:34,590 --> 00:00:40,829
impact project of all time jQuery and to

00:00:38,730 --> 00:00:43,950
answer those questions I am joined by

00:00:40,829 --> 00:00:48,329
the very wonderful Dave methan and Timmy

00:00:43,950 --> 00:00:53,100
Willison dave has been a contributor to

00:00:48,329 --> 00:00:55,230
the jQuery project since 2006 and led a

00:00:53,100 --> 00:00:58,910
lot of the project initiatives over the

00:00:55,230 --> 00:01:01,260
course of his 14 year history notably

00:00:58,910 --> 00:01:08,100
leading the releases for core versions

00:01:01,260 --> 00:01:10,740
1.7 through 2.1 hi Dave and and Timmy

00:01:08,100 --> 00:01:14,939
has been a jQuery core team contributor

00:01:10,740 --> 00:01:16,409
and member since 2011 and its core team

00:01:14,939 --> 00:01:19,170
lead since 2015

00:01:16,409 --> 00:01:24,119
he's also the lead front-end engineer at

00:01:19,170 --> 00:01:26,700
spoke stack so as we visit today if you

00:01:24,119 --> 00:01:29,520
have any questions for for them during

00:01:26,700 --> 00:01:30,990
the same a please tweet them at open JSF

00:01:29,520 --> 00:01:34,650
on Twitter or if you're watching the

00:01:30,990 --> 00:01:37,439
live stream you can also use the chat

00:01:34,650 --> 00:01:40,320
functionality there and myself and and

00:01:37,439 --> 00:01:43,439
my colleague Rachel will be sure to get

00:01:40,320 --> 00:01:45,860
them asked so hey guys how are y'all

00:01:43,439 --> 00:01:45,860
doing this morning

00:01:48,409 --> 00:01:55,110
so you know it's kind of funny to say

00:01:52,020 --> 00:01:58,110
out loud that you have been contributing

00:01:55,110 --> 00:02:04,320
to open source since on this project

00:01:58,110 --> 00:02:09,030
specifically since 2006 and 2011 so it's

00:02:04,320 --> 00:02:11,189
jquery's been around for like a while

00:02:09,030 --> 00:02:13,560
it's so so I think one of the

00:02:11,189 --> 00:02:15,299
interesting things to think about

00:02:13,560 --> 00:02:18,359
compared to a lot of other open-source

00:02:15,299 --> 00:02:22,739
projects is what it takes to maintain a

00:02:18,359 --> 00:02:25,379
project that's it's not kind of its kind

00:02:22,739 --> 00:02:30,540
of older what are some of those

00:02:25,379 --> 00:02:34,560
challenges you know the kind of you face

00:02:30,540 --> 00:02:38,150
that probably other projects don't tell

00:02:34,560 --> 00:02:39,959
me you want to go first sure so I think

00:02:38,150 --> 00:02:44,370
the biggest challenge is probably

00:02:39,959 --> 00:02:46,739
backwards compatibility where there are

00:02:44,370 --> 00:02:49,049
changes that we would like to make but

00:02:46,739 --> 00:02:52,500
it would just break too much code in the

00:02:49,049 --> 00:02:55,949
wild because jQuery has been out for so

00:02:52,500 --> 00:03:00,269
long and it's so ubiquitous at this

00:02:55,949 --> 00:03:03,620
point so we have to be very sensitive to

00:03:00,269 --> 00:03:06,090
that and make small incremental changes

00:03:03,620 --> 00:03:07,620
and some changes we'll never be able to

00:03:06,090 --> 00:03:12,480
make because it would just break too

00:03:07,620 --> 00:03:14,209
much that mandate of don't break the web

00:03:12,480 --> 00:03:17,790
is something y'all take really seriously

00:03:14,209 --> 00:03:20,669
and can you give some examples of some

00:03:17,790 --> 00:03:25,319
of the changes that like you you have to

00:03:20,669 --> 00:03:29,729
kind of consider really carefully David

00:03:25,319 --> 00:03:32,040
yes give something yeah just just about

00:03:29,729 --> 00:03:34,650
every change we make I think at one

00:03:32,040 --> 00:03:36,379
point probably 10 years ago I said every

00:03:34,650 --> 00:03:38,400
change jQuery makes is a breaking change

00:03:36,379 --> 00:03:41,699
because regardless of whether it's

00:03:38,400 --> 00:03:44,519
documented or not people have come to

00:03:41,699 --> 00:03:49,979
expect certain behavior even if it's not

00:03:44,519 --> 00:03:51,810
documented to be to never change so that

00:03:49,979 --> 00:03:55,769
even includes things that are that are

00:03:51,810 --> 00:04:01,169
security bugs so we have we had a

00:03:55,769 --> 00:04:03,500
feature in Ajax that would accept the

00:04:01,169 --> 00:04:06,030
content type from a server to say oh

00:04:03,500 --> 00:04:08,780
you're you the server are telling us

00:04:06,030 --> 00:04:11,250
this is a script I'm will execute it and

00:04:08,780 --> 00:04:14,969
someone pointed out well that can be a

00:04:11,250 --> 00:04:17,519
security bug you may be indicating

00:04:14,969 --> 00:04:20,820
somewhat untrusted site normally you're

00:04:17,519 --> 00:04:22,270
getting text back but if an attacker was

00:04:20,820 --> 00:04:24,880
to be able to say

00:04:22,270 --> 00:04:27,099
you'd start executing we said yeah

00:04:24,880 --> 00:04:29,470
that's true but they're people who are

00:04:27,099 --> 00:04:33,400
depending on this automatic detection of

00:04:29,470 --> 00:04:36,099
types able to run their real servers and

00:04:33,400 --> 00:04:39,250
so we don't want just go and and change

00:04:36,099 --> 00:04:42,819
it in a minor release and break

00:04:39,250 --> 00:04:46,419
everybody's code so those dilemmas we

00:04:42,819 --> 00:04:47,410
face making any change is we're probably

00:04:46,419 --> 00:04:51,610
know we're probably going to break

00:04:47,410 --> 00:04:54,610
someone's code that the only the only

00:04:51,610 --> 00:04:57,520
saving grace we have versus say roster

00:04:54,610 --> 00:05:00,250
is that people choose whether they're

00:04:57,520 --> 00:05:03,580
going to change their version very most

00:05:00,250 --> 00:05:06,039
time or its what a browser does an

00:05:03,580 --> 00:05:09,370
update they really have a higher risk of

00:05:06,039 --> 00:05:11,560
breaking the web yeah sometimes it's not

00:05:09,370 --> 00:05:14,830
even about changing something that's

00:05:11,560 --> 00:05:16,690
been documented we if we have to be

00:05:14,830 --> 00:05:19,720
careful even changing things that aren't

00:05:16,690 --> 00:05:21,849
documented that people are relying on

00:05:19,720 --> 00:05:27,039
that we're discovering that they're

00:05:21,849 --> 00:05:30,669
relying on like removing jQuery browser

00:05:27,039 --> 00:05:35,050
for instance there might have been a lot

00:05:30,669 --> 00:05:38,080
of people using that to sniff the user

00:05:35,050 --> 00:05:42,280
agent and that wasn't really why I was

00:05:38,080 --> 00:05:47,139
there it was just a convenience property

00:05:42,280 --> 00:05:52,240
for us internally and we eventually

00:05:47,139 --> 00:05:55,419
removed it because we considered it you

00:05:52,240 --> 00:05:58,419
know not the best practice to sniff

00:05:55,419 --> 00:06:00,280
abroad rate browser agent may be used we

00:05:58,419 --> 00:06:07,449
wanted people to instead do feature

00:06:00,280 --> 00:06:09,880
tests and that's was still a tough

00:06:07,449 --> 00:06:15,509
change to make because I'm sure it broke

00:06:09,880 --> 00:06:15,509
some code people are not relying on that

00:06:16,110 --> 00:06:23,860
is there anything you wish you had known

00:06:19,509 --> 00:06:26,110
or thought about like back in the day

00:06:23,860 --> 00:06:28,330
you know it's probably hard to imagine

00:06:26,110 --> 00:06:32,880
like oh the project I'm working on is

00:06:28,330 --> 00:06:35,020
gonna be the most popular JavaScript

00:06:32,880 --> 00:06:37,690
library ever

00:06:35,020 --> 00:06:42,910
no that's that's yeah I don't think

00:06:37,690 --> 00:06:44,830
anybody saw that coming if you were able

00:06:42,910 --> 00:06:47,740
to go back in time and give yourself

00:06:44,830 --> 00:06:50,110
selves some advice about you know what

00:06:47,740 --> 00:06:52,390
to do now to prepare for maintaining it

00:06:50,110 --> 00:06:59,650
today you know what do you wish you had

00:06:52,390 --> 00:07:02,260
known I've got a couple for that I think

00:06:59,650 --> 00:07:05,140
the most the most critical advice for

00:07:02,260 --> 00:07:08,550
anyone both for us in the past the past

00:07:05,140 --> 00:07:11,290
us and also anyone creating software

00:07:08,550 --> 00:07:13,090
that is used by a lot of people is to be

00:07:11,290 --> 00:07:16,620
very conservative in what you add to

00:07:13,090 --> 00:07:20,110
learn how to say no in a nice way

00:07:16,620 --> 00:07:22,180
because everything you add becomes a

00:07:20,110 --> 00:07:24,880
liability for the future so we would

00:07:22,180 --> 00:07:27,070
quite often say oh wouldn't it be nice

00:07:24,880 --> 00:07:29,440
to have a method to tell us whether

00:07:27,070 --> 00:07:33,880
something is a number and we put it in

00:07:29,440 --> 00:07:37,030
but like what like is a sequence of 130

00:07:33,880 --> 00:07:38,830
digits a number well technically yes but

00:07:37,030 --> 00:07:43,110
it's not really a valid JavaScript

00:07:38,830 --> 00:07:46,300
number for many applications so we would

00:07:43,110 --> 00:07:48,700
constantly be be adding things and then

00:07:46,300 --> 00:07:50,260
regretting it later saying you know we

00:07:48,700 --> 00:07:52,740
would have been better if we had made

00:07:50,260 --> 00:07:55,210
this a plug-in something that wasn't

00:07:52,740 --> 00:08:00,550
central to the application so that we

00:07:55,210 --> 00:08:04,960
could have their you know disowned it or

00:08:00,550 --> 00:08:06,940
or you know or had some other plugin for

00:08:04,960 --> 00:08:09,880
the people who read a different behavior

00:08:06,940 --> 00:08:13,990
than we had defined yet if I can add to

00:08:09,880 --> 00:08:16,750
that I think if we could have known the

00:08:13,990 --> 00:08:19,030
future in terms of how the specs would

00:08:16,750 --> 00:08:20,380
evolve there didn't there would have

00:08:19,030 --> 00:08:25,000
been a lot of things that we would have

00:08:20,380 --> 00:08:27,460
waited on and not added or altered a

00:08:25,000 --> 00:08:33,120
little bit because that's that's the way

00:08:27,460 --> 00:08:33,120
the spec was going to turn out so jQuery

00:08:33,270 --> 00:08:41,860
kind of led the specs in that way but

00:08:35,560 --> 00:08:44,350
they didn't always define them and like

00:08:41,860 --> 00:08:45,730
for instance I'm skipping ahead a little

00:08:44,350 --> 00:08:48,300
bit but I think we have a question about

00:08:45,730 --> 00:08:48,300
deferreds

00:08:48,470 --> 00:08:54,019
we I would have liked it had we not

00:08:51,649 --> 00:08:56,420
added deferreds at all and just use

00:08:54,019 --> 00:09:00,740
native promises but they weren't out yet

00:08:56,420 --> 00:09:03,129
hmm they were still being defined and it

00:09:00,740 --> 00:09:05,689
it turned out that the behavior of

00:09:03,129 --> 00:09:07,220
promises alt was a little bit different

00:09:05,689 --> 00:09:10,550
than what we thought would they were

00:09:07,220 --> 00:09:15,009
going to be as the deferreds are still

00:09:10,550 --> 00:09:15,009
different than problem promises although

00:09:15,069 --> 00:09:18,680
that's an overstatement because we still

00:09:17,300 --> 00:09:23,120
have dot then which is completely

00:09:18,680 --> 00:09:26,230
promises compliant but there's still an

00:09:23,120 --> 00:09:35,509
odd mixture because dot done isn't

00:09:26,230 --> 00:09:37,790
promises compliant yeah I think we we

00:09:35,509 --> 00:09:39,949
also we just ran into a lot of

00:09:37,790 --> 00:09:42,980
situations I think where we were kind of

00:09:39,949 --> 00:09:45,589
ahead of the curve like we were part of

00:09:42,980 --> 00:09:48,800
the process the thinking process and

00:09:45,589 --> 00:09:51,439
creating some Banford but during that

00:09:48,800 --> 00:09:54,170
process it would come out the other end

00:09:51,439 --> 00:09:56,750
looking a little different than we than

00:09:54,170 --> 00:09:59,930
we had defined but at that point we had

00:09:56,750 --> 00:10:02,240
millions of people using our API so we

00:09:59,930 --> 00:10:03,860
could just say well you know for reasons

00:10:02,240 --> 00:10:05,480
of being standard we're going to abandon

00:10:03,860 --> 00:10:10,100
all you guys and break all your code

00:10:05,480 --> 00:10:13,040
mm-hmm so I mean that's that's something

00:10:10,100 --> 00:10:15,170
that's a very difficult line to walk

00:10:13,040 --> 00:10:18,110
because the only way you can kind of

00:10:15,170 --> 00:10:21,889
push things is to get it out there and

00:10:18,110 --> 00:10:23,540
let people experiment so I don't think

00:10:21,889 --> 00:10:25,519
we would want to say oh we're just not

00:10:23,540 --> 00:10:28,009
going to put any of these things here it

00:10:25,519 --> 00:10:31,180
would have been good to have a mechanism

00:10:28,009 --> 00:10:33,470
by which we could have like had like

00:10:31,180 --> 00:10:37,339
supported plugins or something that

00:10:33,470 --> 00:10:41,059
weren't built baked right into baked

00:10:37,339 --> 00:10:42,529
right into jQuery right like even Ajax

00:10:41,059 --> 00:10:44,569
could have been a plugin because there

00:10:42,529 --> 00:10:47,959
were so many libraries already dedicated

00:10:44,569 --> 00:10:50,660
to that and then we got fetch which is

00:10:47,959 --> 00:10:53,059
largely based on jQuery at Ajax and

00:10:50,660 --> 00:10:56,889
that's that's one more situation where I

00:10:53,059 --> 00:10:59,720
think also the design of our api's mean

00:10:56,889 --> 00:11:01,550
we we had what I would call like

00:10:59,720 --> 00:11:02,240
internal functionality in the API so

00:11:01,550 --> 00:11:03,830
rather

00:11:02,240 --> 00:11:05,570
having something that exposed the

00:11:03,830 --> 00:11:08,600
critical parts that you could string

00:11:05,570 --> 00:11:11,180
together fetch is actually a wonderful

00:11:08,600 --> 00:11:14,540
API in this way you know fetch me some

00:11:11,180 --> 00:11:17,390
stuff and then try to convert it to JSON

00:11:14,540 --> 00:11:20,330
and then do this but you're on it's all

00:11:17,390 --> 00:11:23,779
from the outside you're doing that

00:11:20,330 --> 00:11:25,250
whereas what Ajax did is it said fetch

00:11:23,779 --> 00:11:26,990
me some stuff and I'm going to pass you

00:11:25,250 --> 00:11:28,399
a flag telling you what type I think it

00:11:26,990 --> 00:11:31,160
is or what type you should try to

00:11:28,399 --> 00:11:33,230
interpret it as there were there were

00:11:31,160 --> 00:11:35,060
every time we added a feature to Ajax we

00:11:33,230 --> 00:11:38,390
had to add more flags to it

00:11:35,060 --> 00:11:42,440
so Ajax is by far the most complex API

00:11:38,390 --> 00:11:45,830
in jQuery because of that and if we had

00:11:42,440 --> 00:11:48,200
been able to expose more of the raw

00:11:45,830 --> 00:11:49,730
functionality and let the user string it

00:11:48,200 --> 00:11:56,330
together I think it would have been a

00:11:49,730 --> 00:11:58,630
much easier to use API but to your point

00:11:56,330 --> 00:12:02,029
it was also pretty you know

00:11:58,630 --> 00:12:07,160
groundbreaking you know at the time and

00:12:02,029 --> 00:12:09,950
the project in many ways helped push

00:12:07,160 --> 00:12:13,279
this the language development the

00:12:09,950 --> 00:12:16,220
standard development along probably more

00:12:13,279 --> 00:12:17,720
quickly than it would have than the

00:12:16,220 --> 00:12:21,860
language would have evolved with without

00:12:17,720 --> 00:12:23,870
jQuery so you know I mean if you would

00:12:21,860 --> 00:12:25,640
yes you could go back in time and maybe

00:12:23,870 --> 00:12:29,000
do things a little differently but do

00:12:25,640 --> 00:12:33,500
you think we'd have the same the same

00:12:29,000 --> 00:12:36,170
language that we do today yeah that's a

00:12:33,500 --> 00:12:39,290
great point I think Jay Curry's legacy

00:12:36,170 --> 00:12:42,320
isn't so much its popularity or like the

00:12:39,290 --> 00:12:47,410
api's in themselves it's how they

00:12:42,320 --> 00:12:47,410
influenced the web as a whole and how

00:12:47,470 --> 00:12:51,709
you know what we got query selector all

00:12:49,850 --> 00:12:54,740
which is largely based on the selector

00:12:51,709 --> 00:12:57,230
engines the JavaScript selector engines

00:12:54,740 --> 00:13:01,490
and fetch and there are countless

00:12:57,230 --> 00:13:05,450
examples but I think it just goes to

00:13:01,490 --> 00:13:12,310
show how good John Resig was at creating

00:13:05,450 --> 00:13:16,750
api's and when they got so popular and

00:13:12,310 --> 00:13:16,750
carried over into native world

00:13:16,839 --> 00:13:23,720
that I think that's something to be

00:13:18,890 --> 00:13:27,790
proud of as as a project yeah definitely

00:13:23,720 --> 00:13:32,270
we you know the jQuery project has

00:13:27,790 --> 00:13:35,750
fluence standards but to your point Joey

00:13:32,270 --> 00:13:39,320
I think they that standards always move

00:13:35,750 --> 00:13:42,350
slowly and deliberately both the web Dom

00:13:39,320 --> 00:13:46,220
standards and JavaScript and they move

00:13:42,350 --> 00:13:49,460
so slowly that are still that have not

00:13:46,220 --> 00:13:51,830
yet been memorialized inside the Dom API

00:13:49,460 --> 00:13:54,980
that are proposed that are jQuery

00:13:51,830 --> 00:13:58,700
features so you know had the world

00:13:54,980 --> 00:14:01,339
needed to wait that long you know 15

00:13:58,700 --> 00:14:03,230
years they wouldn't have wanted to wait

00:14:01,339 --> 00:14:03,710
that long some other solution had to be

00:14:03,230 --> 00:14:09,860
found

00:14:03,710 --> 00:14:13,580
jQuery was part of that yeah I guess

00:14:09,860 --> 00:14:18,339
having it in jQuery first like I said

00:14:13,580 --> 00:14:21,320
help push the standards along and

00:14:18,339 --> 00:14:26,150
allowed people kind of like Babel is now

00:14:21,320 --> 00:14:28,400
where someone has a proposal for echo

00:14:26,150 --> 00:14:30,680
script they can immediately write a

00:14:28,400 --> 00:14:34,760
babel plugin for it and you can start

00:14:30,680 --> 00:14:36,770
using it at stage zero that's kind of

00:14:34,760 --> 00:14:38,930
the modern version I think of what

00:14:36,770 --> 00:14:42,020
jQuery was I think that's a great

00:14:38,930 --> 00:14:46,400
comparison and I hadn't actually thought

00:14:42,020 --> 00:14:48,500
about it that way so you know I think

00:14:46,400 --> 00:14:51,320
another in addition to the standards

00:14:48,500 --> 00:14:54,709
impact and influence on standards the

00:14:51,320 --> 00:14:57,709
other place I see personally jquery's

00:14:54,709 --> 00:15:02,000
legacy at play is in just open source

00:14:57,709 --> 00:15:05,660
community and I'll share a little bit

00:15:02,000 --> 00:15:08,020
about my background I when I first got

00:15:05,660 --> 00:15:12,050
into open source jQuery was the first

00:15:08,020 --> 00:15:14,000
community that I discovered and it was

00:15:12,050 --> 00:15:18,560
mind-blowing because there was you know

00:15:14,000 --> 00:15:21,440
there was this big team of people and it

00:15:18,560 --> 00:15:24,380
was so welcoming and there was the the

00:15:21,440 --> 00:15:26,690
IRC channels and and all of all of that

00:15:24,380 --> 00:15:29,630
kind of thing and today working with

00:15:26,690 --> 00:15:33,589
open source communities it it's so

00:15:29,630 --> 00:15:36,079
funny to see little things that we we

00:15:33,589 --> 00:15:40,519
were doing with jQuery you know that are

00:15:36,079 --> 00:15:42,350
now kind of common practice open more of

00:15:40,519 --> 00:15:47,029
an open governance style and things like

00:15:42,350 --> 00:15:49,550
that you know I kind of wonder what how

00:15:47,029 --> 00:15:51,589
you all think about how the open-source

00:15:49,550 --> 00:16:01,730
community has evolved and cutting your

00:15:51,589 --> 00:16:05,630
initial foray into to the project I

00:16:01,730 --> 00:16:08,269
think that we've we did pioneer a lot of

00:16:05,630 --> 00:16:10,850
that and again I think a lot of credit

00:16:08,269 --> 00:16:14,810
goes to John rosy because he had a

00:16:10,850 --> 00:16:20,240
personality that was that was very much

00:16:14,810 --> 00:16:23,300
inviting and inclusive we just followed

00:16:20,240 --> 00:16:29,750
that pattern in creating especially for

00:16:23,300 --> 00:16:30,920
the jQuery core team I think you know

00:16:29,750 --> 00:16:33,259
especially as you go through the life

00:16:30,920 --> 00:16:35,750
cycle of a project if you go back when

00:16:33,259 --> 00:16:39,079
we've got hundreds of contributors to

00:16:35,750 --> 00:16:40,910
jQuery core the majority of them the

00:16:39,079 --> 00:16:43,910
first ten years when it was really

00:16:40,910 --> 00:16:48,199
actively being developed and as you get

00:16:43,910 --> 00:16:52,730
to the point where you were changes and

00:16:48,199 --> 00:16:57,500
the impact of changes are highly more

00:16:52,730 --> 00:16:59,269
highly felt I think with a small of who

00:16:57,500 --> 00:17:05,449
have kind of gotten those battle scars

00:16:59,269 --> 00:17:08,949
me Timmy we call trying to think of who

00:17:05,449 --> 00:17:14,240
else who particularly active Gib said

00:17:08,949 --> 00:17:17,630
Richard Gibson but you you've got folks

00:17:14,240 --> 00:17:20,510
who have been around long enough to know

00:17:17,630 --> 00:17:24,799
they've stepped on the mines before and

00:17:20,510 --> 00:17:26,750
so they don't tend to you know be quite

00:17:24,799 --> 00:17:32,299
as quick to say oh let's just go change

00:17:26,750 --> 00:17:34,610
something but that sometimes comes off

00:17:32,299 --> 00:17:36,470
to a community at this point in the

00:17:34,610 --> 00:17:38,330
evolution of jQuery it sometimes comes

00:17:36,470 --> 00:17:41,020
off as being like not wanting

00:17:38,330 --> 00:17:42,360
contributions but it's just more of a

00:17:41,020 --> 00:17:46,200
concern

00:17:42,360 --> 00:17:48,120
as contributions come in that the end

00:17:46,200 --> 00:17:49,679
the person making the proposal doesn't

00:17:48,120 --> 00:17:52,980
understand the impact and we've tried to

00:17:49,679 --> 00:17:55,650
fix that problem by having documents in

00:17:52,980 --> 00:17:57,600
our wiki that talked about the criteria

00:17:55,650 --> 00:18:00,480
we use for deciding the whether to make

00:17:57,600 --> 00:18:04,020
changes or not I think that's helped

00:18:00,480 --> 00:18:06,420
some as well but even like I said I mean

00:18:04,020 --> 00:18:08,549
being able to say no diplomatically even

00:18:06,420 --> 00:18:12,960
for a growing project is a very

00:18:08,549 --> 00:18:15,000
important thing but it also tends to

00:18:12,960 --> 00:18:18,720
make contributors feel like well you

00:18:15,000 --> 00:18:20,700
don't want my stuff yeah I think that's

00:18:18,720 --> 00:18:22,590
that's a good point like Mike Sheriff I

00:18:20,700 --> 00:18:26,120
think brought that up once when he said

00:18:22,590 --> 00:18:29,070
he was just getting started and he

00:18:26,120 --> 00:18:30,870
introduced a change or you know he

00:18:29,070 --> 00:18:33,900
opened an issue and then he opened a

00:18:30,870 --> 00:18:39,900
pull request and it was his first pull

00:18:33,900 --> 00:18:43,919
request on any project and it I ended up

00:18:39,900 --> 00:18:50,070
closing it and rewriting the patch and

00:18:43,919 --> 00:18:53,190
fixing it myself but in that process I

00:18:50,070 --> 00:18:55,919
think the whole team tried to be as

00:18:53,190 --> 00:18:58,799
diplomatic as possible and talk to him

00:18:55,919 --> 00:19:02,030
as we were making the changes we just

00:18:58,799 --> 00:19:04,290
made the change a little faster and

00:19:02,030 --> 00:19:09,900
differently than he was expecting

00:19:04,290 --> 00:19:12,590
but after that Mike became one of our

00:19:09,900 --> 00:19:16,620
strongest contributors and a team member

00:19:12,590 --> 00:19:20,910
and he's got plenty of patches landed

00:19:16,620 --> 00:19:24,690
himself now and he's also one of the

00:19:20,910 --> 00:19:26,970
people who I think has gotten that fear

00:19:24,690 --> 00:19:28,470
instilled in him when it comes to making

00:19:26,970 --> 00:19:32,280
changes we were just talking about this

00:19:28,470 --> 00:19:34,049
on Twitter last week about how there's

00:19:32,280 --> 00:19:36,030
certain changes you go oh we can make

00:19:34,049 --> 00:19:37,950
this change and you have to back it out

00:19:36,030 --> 00:19:39,809
you say oh well we could have made it if

00:19:37,950 --> 00:19:45,299
we did it this way do it again it's back

00:19:39,809 --> 00:19:46,559
it out so that's I think we're you know

00:19:45,299 --> 00:19:50,150
trying to create a community where

00:19:46,559 --> 00:19:53,460
people feel like they can ask for things

00:19:50,150 --> 00:19:56,070
but also they it's further to explain to

00:19:53,460 --> 00:20:00,420
them why you're asking them to make

00:19:56,070 --> 00:20:05,640
Changez or why the changes yeah I think

00:20:00,420 --> 00:20:09,120
it's easy for team members of a love a

00:20:05,640 --> 00:20:11,660
popular project to be offended when an

00:20:09,120 --> 00:20:17,030
issue opens like just a little bit a

00:20:11,660 --> 00:20:23,460
little bit offended and treat there were

00:20:17,030 --> 00:20:27,270
the poster in a way that isn't necessary

00:20:23,460 --> 00:20:30,810
polite or were you you're already on the

00:20:27,270 --> 00:20:34,170
defensive and so we had a policy to try

00:20:30,810 --> 00:20:36,360
to negate that in that you always have

00:20:34,170 --> 00:20:39,330
to thank them for opening an issue and

00:20:36,360 --> 00:20:43,410
starting from that state of mind helps

00:20:39,330 --> 00:20:48,740
you to be more accepting of possible

00:20:43,410 --> 00:20:51,780
issues and not get defensive right away

00:20:48,740 --> 00:20:54,690
and that that was a community policy

00:20:51,780 --> 00:20:59,660
that I think has carried over to lots of

00:20:54,690 --> 00:21:04,170
other projects I think it certainly

00:20:59,660 --> 00:21:08,040
helps people feel more attracted and

00:21:04,170 --> 00:21:11,130
positive about you know the project and

00:21:08,040 --> 00:21:13,230
not just the project but also the the

00:21:11,130 --> 00:21:16,170
things that the community did around it

00:21:13,230 --> 00:21:17,910
right like the learn website and the IRC

00:21:16,170 --> 00:21:21,780
channel and the events and things like

00:21:17,910 --> 00:21:24,690
that like you know and and feel great

00:21:21,780 --> 00:21:33,600
about wearing the right let's do more

00:21:24,690 --> 00:21:38,210
swag and stuff like that so I think

00:21:33,600 --> 00:21:43,920
about jQuery you know as kind of a

00:21:38,210 --> 00:21:48,300
prototypical kind of like as a sort of a

00:21:43,920 --> 00:21:49,920
web standards historian as one of the

00:21:48,300 --> 00:21:53,030
first projects that really started to

00:21:49,920 --> 00:21:56,310
try and like define what a successful

00:21:53,030 --> 00:21:59,880
open source project a successful and

00:21:56,310 --> 00:22:06,870
great framework really was and do you

00:21:59,880 --> 00:22:11,239
see jQuery is a great framework and like

00:22:06,870 --> 00:22:14,659
do you see it as a as sort of the

00:22:11,239 --> 00:22:17,179
pioneer that it did I do

00:22:14,659 --> 00:22:24,479
tell me do you want to take that first

00:22:17,179 --> 00:22:28,529
sure I I guess I do so I owe a lot of

00:22:24,479 --> 00:22:30,479
but I owe my start to jQuery really so I

00:22:28,529 --> 00:22:35,009
I guess I have a more personal

00:22:30,479 --> 00:22:38,070
connection than some people might to

00:22:35,009 --> 00:22:40,739
just a JavaScript library so I would I

00:22:38,070 --> 00:22:43,669
was in class in a computer science class

00:22:40,739 --> 00:22:46,169
I think it was a database class and

00:22:43,669 --> 00:22:48,989
someone from Chattanooga a developer

00:22:46,169 --> 00:22:52,460
came and spoke at our class and told

00:22:48,989 --> 00:22:52,460
everybody that they had to learn jQuery

00:22:52,489 --> 00:23:02,729
and so I did and I got really into the

00:23:00,299 --> 00:23:05,549
code and I started looking at the issues

00:23:02,729 --> 00:23:10,519
and I just picked a few and started you

00:23:05,549 --> 00:23:12,869
know submitting pull requests and

00:23:10,519 --> 00:23:17,070
eventually I submitted so many pull

00:23:12,869 --> 00:23:21,479
requests that John pulled me aside one

00:23:17,070 --> 00:23:22,979
day and just asked me if I want to

00:23:21,479 --> 00:23:29,099
commit access because he was tired of

00:23:22,979 --> 00:23:31,769
Mert merging my poll crests so I wore

00:23:29,099 --> 00:23:43,049
him down and that's all that's how I got

00:23:31,769 --> 00:23:44,789
on the team and being on the team is

00:23:43,049 --> 00:23:48,119
really you know it's a good thing to

00:23:44,789 --> 00:23:51,629
have on a resume but more than that I

00:23:48,119 --> 00:23:53,989
think it's taught me a lot working with

00:23:51,629 --> 00:24:01,619
great people like Dave and we call and

00:23:53,989 --> 00:24:02,879
Richard and everybody and I got to meet

00:24:01,619 --> 00:24:07,109
a lot of people especially when there

00:24:02,879 --> 00:24:09,149
were jQuery conferences going on there

00:24:07,109 --> 00:24:15,389
was a lot of amazing talent giving talks

00:24:09,149 --> 00:24:19,109
and not even just attending so it was

00:24:15,389 --> 00:24:21,409
really meaningful time for me yeah in my

00:24:19,109 --> 00:24:21,409
career

00:24:22,700 --> 00:24:29,270
I don't know if I necessarily got the

00:24:26,060 --> 00:24:32,690
impact of jQuery at the time like

00:24:29,270 --> 00:24:40,730
looking back I kind of I'm kind of

00:24:32,690 --> 00:24:42,770
amazed at it yeah I obviously personally

00:24:40,730 --> 00:24:46,370
got a lot out of jQuery during all this

00:24:42,770 --> 00:24:47,990
time I think that is interesting you use

00:24:46,370 --> 00:24:51,170
the term framework because I think

00:24:47,990 --> 00:24:55,730
jQuery is definitely not framework it's

00:24:51,170 --> 00:24:59,780
really more of library and that our

00:24:55,730 --> 00:25:02,300
desire to kind of keep jQuery as a as a

00:24:59,780 --> 00:25:04,550
focused library meant that people had to

00:25:02,300 --> 00:25:06,650
go elsewhere to find ways to structure

00:25:04,550 --> 00:25:09,110
Apple you know bigger pages and

00:25:06,650 --> 00:25:13,280
applications and you saw things like

00:25:09,110 --> 00:25:15,350
back out of that where someone needed

00:25:13,280 --> 00:25:19,250
something that they could layered on top

00:25:15,350 --> 00:25:23,090
of jQuery ember actually was layered on

00:25:19,250 --> 00:25:26,330
top of jQuery I don't know yeah but the

00:25:23,090 --> 00:25:30,500
first version of angular at jQuery or a

00:25:26,330 --> 00:25:32,330
jQuery Lite in it so there was a lot of

00:25:30,500 --> 00:25:37,760
frameworks that were built on top of

00:25:32,330 --> 00:25:39,740
jQuery in the early days because the

00:25:37,760 --> 00:25:42,050
problem of that jQuery was trying to

00:25:39,740 --> 00:25:44,660
solve with Dom manipulation and browser

00:25:42,050 --> 00:25:48,290
independence was particularly hard

00:25:44,660 --> 00:25:53,830
during those times not quite as much

00:25:48,290 --> 00:25:57,560
today but even so the simplicity and the

00:25:53,830 --> 00:26:00,140
jquery api itself is still worthwhile

00:25:57,560 --> 00:26:08,620
even if you don't need it because you're

00:26:00,140 --> 00:26:12,470
not using IE 11 I think and that's a

00:26:08,620 --> 00:26:16,850
great place to segue into like the

00:26:12,470 --> 00:26:19,990
continuing utility of jQuery you know

00:26:16,850 --> 00:26:22,880
there's certainly been like it still

00:26:19,990 --> 00:26:24,560
powers a lot of the web it still powers

00:26:22,880 --> 00:26:28,880
a lot of these these frameworks that are

00:26:24,560 --> 00:26:31,610
still in use it's still you know one of

00:26:28,880 --> 00:26:33,890
those tools that is easy to just get

00:26:31,610 --> 00:26:38,840
started with you know and

00:26:33,890 --> 00:26:42,040
and I was looking at the HTTP archive

00:26:38,840 --> 00:26:44,030
data because it's just very

00:26:42,040 --> 00:26:46,640
mind-boggling to go look and see okay

00:26:44,030 --> 00:26:50,420
well what what where we at

00:26:46,640 --> 00:26:53,750
like how many web pages are using using

00:26:50,420 --> 00:26:58,750
jQuery and their Almanac from last year

00:26:53,750 --> 00:27:02,780
reported that it's in use by over 85% of

00:26:58,750 --> 00:27:06,950
desktop pages and 83 percent of mobile

00:27:02,780 --> 00:27:10,840
pages and that's a lot of that's a lot

00:27:06,950 --> 00:27:16,160
of web pages so you know I'm curious

00:27:10,840 --> 00:27:18,980
kind of how how that data factors in for

00:27:16,160 --> 00:27:22,299
you all as you think about maintaining

00:27:18,980 --> 00:27:28,100
jQuery today and also maintaining it

00:27:22,299 --> 00:27:30,040
into its into its future yeah it's

00:27:28,100 --> 00:27:34,610
interesting

00:27:30,040 --> 00:27:38,870
jQuery is still used a lot especially if

00:27:34,610 --> 00:27:41,240
you consider like global usage and I

00:27:38,870 --> 00:27:45,070
think I could be wrong about this but I

00:27:41,240 --> 00:27:49,790
think usage is even going up in China

00:27:45,070 --> 00:27:51,230
but I don't know if anyone on the jquery

00:27:49,790 --> 00:27:55,429
team really thinks of jquery as a

00:27:51,230 --> 00:27:57,620
growing project if you look at the data

00:27:55,429 --> 00:28:01,370
for what people are using in new

00:27:57,620 --> 00:28:03,350
projects it might be different existing

00:28:01,370 --> 00:28:09,110
websites probably still have jquery from

00:28:03,350 --> 00:28:11,660
being built years ago but like i don't

00:28:09,110 --> 00:28:16,460
personally use jquery in my projects i

00:28:11,660 --> 00:28:21,650
use react and Gatz me in XJS and other

00:28:16,460 --> 00:28:23,270
things so we we we don't have an

00:28:21,650 --> 00:28:25,820
evangelism team you know we're not

00:28:23,270 --> 00:28:27,799
actively seeking to gain more users we

00:28:25,820 --> 00:28:30,049
just want to take care of the users that

00:28:27,799 --> 00:28:33,500
we do have and maintain it well keep the

00:28:30,049 --> 00:28:36,500
docs up to date which is still plenty of

00:28:33,500 --> 00:28:41,150
work you know an incredible amount of

00:28:36,500 --> 00:28:43,419
work unfortunately yeah I think I would

00:28:41,150 --> 00:28:45,950
agree with Timmy there that we're not

00:28:43,419 --> 00:28:47,660
we're not looking to grow our base and

00:28:45,950 --> 00:28:53,300
obviously there's not a lot to grow from

00:28:47,660 --> 00:28:55,930
when you're at 85% I think that one of

00:28:53,300 --> 00:28:59,720
the things that distorts people's

00:28:55,930 --> 00:29:02,440
perceptions about you know jQuery not

00:28:59,720 --> 00:29:06,110
really being a thing anymore is that a

00:29:02,440 --> 00:29:08,380
lot of the focus of developers is on

00:29:06,110 --> 00:29:12,260
building some of the most complex

00:29:08,380 --> 00:29:14,600
systems that run on web browsers and

00:29:12,260 --> 00:29:17,630
those tend to be things that are using

00:29:14,600 --> 00:29:23,900
the newer frameworks are using react or

00:29:17,630 --> 00:29:27,320
angular or view or Ember and those those

00:29:23,900 --> 00:29:29,900
are all very good ways to manage the

00:29:27,320 --> 00:29:33,650
complexity of something that has huge

00:29:29,900 --> 00:29:35,720
amount of state that you need to that

00:29:33,650 --> 00:29:37,460
you need to keep track of I can't

00:29:35,720 --> 00:29:42,950
imagine trying to write face the

00:29:37,460 --> 00:29:44,930
Facebook site just using jQuery but if

00:29:42,950 --> 00:29:49,850
you look at the majority of the content

00:29:44,930 --> 00:29:52,610
on the web most of it is not really

00:29:49,850 --> 00:29:58,030
doesn't have that much state it's it's

00:29:52,610 --> 00:30:00,800
just kind of more reading type material

00:29:58,030 --> 00:30:03,500
probably the most complex stuff on the

00:30:00,800 --> 00:30:06,050
page or advertisements and I'm not sure

00:30:03,500 --> 00:30:09,470
I really want to you know to have people

00:30:06,050 --> 00:30:13,120
writing react advertisements the the

00:30:09,470 --> 00:30:14,840
thing that I that I think makes

00:30:13,120 --> 00:30:17,060
especially if you're going to use the

00:30:14,840 --> 00:30:19,280
app effectively and you want to use it

00:30:17,060 --> 00:30:22,970
like with if you want to render on the

00:30:19,280 --> 00:30:25,160
backend or react then that requires a

00:30:22,970 --> 00:30:26,750
complete reactive Rock we architecting

00:30:25,160 --> 00:30:30,130
of your system so if you look at all of

00:30:26,750 --> 00:30:36,530
the Drupal and WordPress and other

00:30:30,130 --> 00:30:39,320
existing backends out there those really

00:30:36,530 --> 00:30:42,260
have already baked a lot of the state

00:30:39,320 --> 00:30:44,840
management and content management into

00:30:42,260 --> 00:30:48,710
that and so when they push something

00:30:44,840 --> 00:30:50,330
down an approach that jQuery has like

00:30:48,710 --> 00:30:53,240
progressive enhancement where you say

00:30:50,330 --> 00:30:54,680
well basically we have HTML you just

00:30:53,240 --> 00:30:56,870
need to add some things to make it a

00:30:54,680 --> 00:31:00,860
little more lively jQuery still a good

00:30:56,870 --> 00:31:02,570
solution for doing that I think probably

00:31:00,860 --> 00:31:04,520
I can certainly say in the work that I'm

00:31:02,570 --> 00:31:06,440
doing it sounds like the work that

00:31:04,520 --> 00:31:08,320
Timmy's doing that's not really the

00:31:06,440 --> 00:31:12,860
paradigm we're trying to follow for the

00:31:08,320 --> 00:31:14,420
doing but jQuery obviously you know if

00:31:12,860 --> 00:31:17,260
you're running a wordpress site you're

00:31:14,420 --> 00:31:19,490
probably going to have jQuery there and

00:31:17,260 --> 00:31:21,170
you know trying to say well we're just

00:31:19,490 --> 00:31:22,880
going to throw that out and build a

00:31:21,170 --> 00:31:24,260
react the application on top of

00:31:22,880 --> 00:31:27,910
WordPress is probably not the most

00:31:24,260 --> 00:31:27,910
effective way to solve the problem

00:31:29,590 --> 00:31:37,610
that's a good point I'm recalling a

00:31:34,250 --> 00:31:39,799
quote from John rezzak when he did an

00:31:37,610 --> 00:31:41,450
interview with chess party he said I

00:31:39,799 --> 00:31:43,429
don't think we ever could have iterated

00:31:41,450 --> 00:31:46,419
on jQuery to the point at which we

00:31:43,429 --> 00:31:49,790
arrived at react or something like that

00:31:46,419 --> 00:31:55,460
it's just a different branch of the

00:31:49,790 --> 00:31:58,669
evolutionary tree and it was the same

00:31:55,460 --> 00:32:00,740
the same philosophy of not trying to

00:31:58,669 --> 00:32:02,809
evolve jQuery into a framework itself

00:32:00,740 --> 00:32:14,270
although people a few times people that

00:32:02,809 --> 00:32:18,910
asked us for that I think another thing

00:32:14,270 --> 00:32:23,480
is for a lot of folks learning to

00:32:18,910 --> 00:32:29,690
program you know that it's still one of

00:32:23,480 --> 00:32:34,190
these tools that gets taught in boot

00:32:29,690 --> 00:32:38,929
camps and code schools and things like

00:32:34,190 --> 00:32:42,890
that and because certainly for me I

00:32:38,929 --> 00:32:46,429
think it I found it very easy to learn

00:32:42,890 --> 00:32:49,070
and start to think about and reason

00:32:46,429 --> 00:32:52,280
about this was several years a few years

00:32:49,070 --> 00:32:54,770
ago and and I think that's still true do

00:32:52,280 --> 00:33:02,270
you think that jQuery will always have a

00:32:54,770 --> 00:33:08,740
place for folks learning JavaScript I

00:33:02,270 --> 00:33:13,960
don't know about always so historically

00:33:08,740 --> 00:33:13,960
it's kind of been a mixed bag I think

00:33:14,510 --> 00:33:22,200
for instance it bugs it it bugs me

00:33:19,980 --> 00:33:28,820
sometimes to see jQuery on a resume

00:33:22,200 --> 00:33:32,160
um it's instead of JavaScript because

00:33:28,820 --> 00:33:37,740
it's really just JavaScript it's just a

00:33:32,160 --> 00:33:39,030
JavaScript library and I think there

00:33:37,740 --> 00:33:41,309
were a lot of beginners that you know

00:33:39,030 --> 00:33:43,289
learned the jQuery API and didn't

00:33:41,309 --> 00:33:45,929
necessarily have an understanding of how

00:33:43,289 --> 00:33:48,950
JavaScript worked you know that they

00:33:45,929 --> 00:33:50,450
weren't familiar with prototypes or

00:33:48,950 --> 00:33:52,679
anything

00:33:50,450 --> 00:33:54,809
like they get native to the language

00:33:52,679 --> 00:33:56,720
exactly and they're you could obviously

00:33:54,809 --> 00:33:59,309
do for loops and things like that except

00:33:56,720 --> 00:34:01,669
let that's that's a funny example too

00:33:59,309 --> 00:34:07,669
because oftentimes you end up using

00:34:01,669 --> 00:34:13,980
jQuery each instead of a for loop and

00:34:07,669 --> 00:34:19,530
you know in in for instance in the

00:34:13,980 --> 00:34:23,520
jquery events when you bind an event the

00:34:19,530 --> 00:34:25,800
context so that this variable is the

00:34:23,520 --> 00:34:28,740
element itself and not the element

00:34:25,800 --> 00:34:32,700
wrapped in jquery and that was done

00:34:28,740 --> 00:34:38,490
intentionally because john thought that

00:34:32,700 --> 00:34:41,730
once you're in in there you more often

00:34:38,490 --> 00:34:45,960
in a knot would want to use the native

00:34:41,730 --> 00:34:47,879
element but so often you'd see people

00:34:45,960 --> 00:34:52,200
just wrapping in a jQuery and continuing

00:34:47,879 --> 00:34:57,720
to use and jQuery api's instead of any

00:34:52,200 --> 00:35:02,190
standard native ones so that's that's

00:34:57,720 --> 00:35:04,619
where I think jQuery maybe slows like

00:35:02,190 --> 00:35:08,790
how quickly you learn native JavaScript

00:35:04,619 --> 00:35:10,500
on the other hand jQuery so there's a

00:35:08,790 --> 00:35:14,160
there's a completely other side of that

00:35:10,500 --> 00:35:18,030
coin where jQuery gets a lot of people

00:35:14,160 --> 00:35:21,830
interested or hat has gotten a lot of

00:35:18,030 --> 00:35:25,260
people interested and made some things

00:35:21,830 --> 00:35:28,360
approachable and easy like the home page

00:35:25,260 --> 00:35:30,580
of jQuery I think used to have

00:35:28,360 --> 00:35:32,740
a really simple animation that you could

00:35:30,580 --> 00:35:35,680
do with one call where you just select

00:35:32,740 --> 00:35:40,960
an element and then show it and it would

00:35:35,680 --> 00:35:46,500
animate out the the text and are doing

00:35:40,960 --> 00:35:52,870
that with one line was really cool and

00:35:46,500 --> 00:35:54,400
for beginners who just wanted to add a

00:35:52,870 --> 00:35:58,120
little something to their website

00:35:54,400 --> 00:36:00,850
maybe animation or something else they

00:35:58,120 --> 00:36:04,270
could use a plug-in and a lot of it was

00:36:00,850 --> 00:36:05,650
just copy/paste development and they

00:36:04,270 --> 00:36:09,700
could get things up up and running

00:36:05,650 --> 00:36:11,800
really quickly and that was sort of what

00:36:09,700 --> 00:36:17,440
got them into it and then they started

00:36:11,800 --> 00:36:21,250
digging into the code and learning so in

00:36:17,440 --> 00:36:26,290
that sense it really helped people to

00:36:21,250 --> 00:36:30,460
learn JavaScript just to just as a spark

00:36:26,290 --> 00:36:32,800
I think it's you know especially looking

00:36:30,460 --> 00:36:37,630
at the period of time when jQuery was

00:36:32,800 --> 00:36:40,300
created 2005-2006 time frame it was

00:36:37,630 --> 00:36:45,210
really difficult to do even simple

00:36:40,300 --> 00:36:48,070
animation simple Ajax a lot of that was

00:36:45,210 --> 00:36:50,560
it all required a bunch of JavaScript

00:36:48,070 --> 00:36:53,230
and people would create their own little

00:36:50,560 --> 00:36:55,030
custom libraries of various kinds that

00:36:53,230 --> 00:36:59,910
would sometimes only work for certain

00:36:55,030 --> 00:37:03,580
special codes oh but you know out today

00:36:59,910 --> 00:37:08,710
most of animations can be done with CSS

00:37:03,580 --> 00:37:11,050
and are the best done with CSS most of

00:37:08,710 --> 00:37:15,820
Ajax can be done with simple fetches and

00:37:11,050 --> 00:37:18,640
a few little odds and ends but it's

00:37:15,820 --> 00:37:21,130
still relatively easy to do all of that

00:37:18,640 --> 00:37:24,970
with with jQuery as well it's just that

00:37:21,130 --> 00:37:27,940
even even for those of us who like

00:37:24,970 --> 00:37:30,280
jQuery we would prefer that people use

00:37:27,940 --> 00:37:32,080
the standards that are already there

00:37:30,280 --> 00:37:34,180
because they're more efficient they're

00:37:32,080 --> 00:37:38,260
better on battery for mobile devices

00:37:34,180 --> 00:37:40,720
those kind of things so you know we

00:37:38,260 --> 00:37:43,950
should expect things to have

00:37:40,720 --> 00:37:48,220
all that you know you have a car from

00:37:43,950 --> 00:37:50,230
1990 it's not going to be nearly as it's

00:37:48,220 --> 00:37:51,550
not just the age of the car it's all the

00:37:50,230 --> 00:37:53,560
features that have been put in the car

00:37:51,550 --> 00:38:00,340
so you got backup cameras and sideview

00:37:53,560 --> 00:38:03,550
cameras and airbags really jQuery was it

00:38:00,340 --> 00:38:05,230
was the right tool for that time and it

00:38:03,550 --> 00:38:08,200
still has a lot of features that are

00:38:05,230 --> 00:38:12,700
useful today many parts of it that are

00:38:08,200 --> 00:38:23,650
have been superseded by either CSS or

00:38:12,700 --> 00:38:25,540
JavaScript or Dom api's there so and you

00:38:23,650 --> 00:38:29,290
would speaking about like learning I

00:38:25,540 --> 00:38:32,730
think we had one question from the

00:38:29,290 --> 00:38:36,780
audience about the difference between

00:38:32,730 --> 00:38:42,000
load on load and document dot ready and

00:38:36,780 --> 00:38:42,000
I think this is just more of a you know

00:38:42,480 --> 00:38:47,200
can you explain it

00:38:44,380 --> 00:38:51,160
kind of question and what do you want to

00:38:47,200 --> 00:38:56,730
take that yeah why don't you wants you

00:38:51,160 --> 00:38:59,410
start Dave off all right so yeah there's

00:38:56,730 --> 00:39:01,780
one of the one of the confusions about

00:38:59,410 --> 00:39:04,690
this is that there are events that occur

00:39:01,780 --> 00:39:08,080
in event when it occurs if you're

00:39:04,690 --> 00:39:10,060
listening for it you can react to it

00:39:08,080 --> 00:39:12,370
it's like a tree falling in the forest

00:39:10,060 --> 00:39:17,560
right you you don't hear it unless

00:39:12,370 --> 00:39:22,330
you're there so document has been loaded

00:39:17,560 --> 00:39:24,190
event the window onload if you've

00:39:22,330 --> 00:39:26,290
attached an event before the window has

00:39:24,190 --> 00:39:28,510
finished bloating before the document is

00:39:26,290 --> 00:39:30,700
finished loading you'll get an event

00:39:28,510 --> 00:39:33,460
delivered to your Handler and you can do

00:39:30,700 --> 00:39:35,410
something that comes pretty late in the

00:39:33,460 --> 00:39:39,010
process because that's after all the

00:39:35,410 --> 00:39:42,580
images and other tables on the page have

00:39:39,010 --> 00:39:44,770
completely loaded there's also in the

00:39:42,580 --> 00:39:49,240
Dom world there's an event called Dom

00:39:44,770 --> 00:39:51,730
content ready and that occurs when the

00:39:49,240 --> 00:39:54,400
entire HTML document has been poked

00:39:51,730 --> 00:39:56,830
meant but before potentially

00:39:54,400 --> 00:40:00,460
for any images or other things that are

00:39:56,830 --> 00:40:04,200
in the document have arrived and again

00:40:00,460 --> 00:40:07,890
you have to be listening for that event

00:40:04,200 --> 00:40:10,830
to be able to react to it

00:40:07,890 --> 00:40:12,580
both of those things are sometimes

00:40:10,830 --> 00:40:15,220
constraints that you don't want to have

00:40:12,580 --> 00:40:19,420
to deal with so jQuery has a document

00:40:15,220 --> 00:40:21,850
ready API that says I'm going to give

00:40:19,420 --> 00:40:24,670
you a function and if the documents

00:40:21,850 --> 00:40:28,570
ready call it if the document becomes

00:40:24,670 --> 00:40:30,730
ready later call it so that eliminates

00:40:28,570 --> 00:40:32,740
the need to be there to watch the tree

00:40:30,730 --> 00:40:36,700
fall in the forest to hear it you can

00:40:32,740 --> 00:40:38,680
just you know at any point say has the

00:40:36,700 --> 00:40:41,020
tree fall and if the trees fallen then

00:40:38,680 --> 00:40:43,270
it executes this function that's

00:40:41,020 --> 00:40:46,300
probably the biggest benefit of document

00:40:43,270 --> 00:40:48,700
ready but it still turns out that

00:40:46,300 --> 00:40:52,090
there's complications to that there

00:40:48,700 --> 00:40:53,950
aren't that I'd like people want to be

00:40:52,090 --> 00:41:01,960
able to run this code as quickly as soon

00:40:53,950 --> 00:41:03,070
as possible but but no sooner so if you

00:41:01,960 --> 00:41:04,600
want to be able to manipulate the

00:41:03,070 --> 00:41:07,900
document before it shows up on the

00:41:04,600 --> 00:41:11,320
screen so that you can avoid any flash

00:41:07,900 --> 00:41:14,560
upon the screen sometimes even today

00:41:11,320 --> 00:41:17,710
jQuery has issues where people use their

00:41:14,560 --> 00:41:20,620
Nations functionality and it means that

00:41:17,710 --> 00:41:21,970
jQuery can't call your function quite as

00:41:20,620 --> 00:41:24,550
quickly as you might want it to be

00:41:21,970 --> 00:41:33,810
called what do you have to add to that

00:41:24,550 --> 00:41:33,810
Timmy so the the simple answer is that

00:41:34,020 --> 00:41:39,940
the ready event happened sooner than the

00:41:36,730 --> 00:41:46,840
load event and it means that the

00:41:39,940 --> 00:41:49,120
document is interactive and but that

00:41:46,840 --> 00:41:50,620
that can happen before everything has

00:41:49,120 --> 00:41:56,050
loaded so there might be more scripts or

00:41:50,620 --> 00:41:58,300
images loading however when you get down

00:41:56,050 --> 00:42:01,900
into the implementation of that it can

00:41:58,300 --> 00:42:05,410
get really complicated because we can't

00:42:01,900 --> 00:42:06,900
we can't actually use interactive all

00:42:05,410 --> 00:42:09,870
the time

00:42:06,900 --> 00:42:12,240
because there are still bugs in certain

00:42:09,870 --> 00:42:15,510
browsers that we support so we we try to

00:42:12,240 --> 00:42:17,460
use interactive where possible I think I

00:42:15,510 --> 00:42:21,330
can't remember we've gone back and forth

00:42:17,460 --> 00:42:24,240
on this so many times because we just

00:42:21,330 --> 00:42:26,310
keep encountering bugs with it what's

00:42:24,240 --> 00:42:28,440
that I said this is a bike share thing

00:42:26,310 --> 00:42:37,020
that's all we were talking with him yeah

00:42:28,440 --> 00:42:42,710
last week right so we want users to be

00:42:37,020 --> 00:42:44,520
able to trust that you know

00:42:42,710 --> 00:42:46,560
document.ready will happen as soon as

00:42:44,520 --> 00:42:49,500
possible in any browser that they're

00:42:46,560 --> 00:42:53,220
using and that's that's a hard thing to

00:42:49,500 --> 00:42:55,740
guarantee and there there are still a

00:42:53,220 --> 00:43:02,670
couple of open issues about it after all

00:42:55,740 --> 00:43:08,430
this time that said most of the time

00:43:02,670 --> 00:43:14,310
it's fine and it's it's just something

00:43:08,430 --> 00:43:15,750
that I would want to consult the jQuery

00:43:14,310 --> 00:43:18,660
source if I was going to do that

00:43:15,750 --> 00:43:24,720
natively just to make sure I'm not

00:43:18,660 --> 00:43:26,580
missing the bugs so there's a there's an

00:43:24,720 --> 00:43:30,060
interesting conversation about whether

00:43:26,580 --> 00:43:34,470
you need jQuery and this is a good

00:43:30,060 --> 00:43:37,770
example in that no you don't necessarily

00:43:34,470 --> 00:43:41,660
need jQuery but you might want to check

00:43:37,770 --> 00:43:43,920
if you need to fix these bugs as well

00:43:41,660 --> 00:43:46,410
that's that's actually a really great

00:43:43,920 --> 00:43:48,150
point if you go to a stack overflow

00:43:46,410 --> 00:43:51,810
where people are answering tough

00:43:48,150 --> 00:43:53,700
questions about the Dom even if it's not

00:43:51,810 --> 00:43:55,770
a jQuery question somebody will say well

00:43:53,700 --> 00:43:58,490
you need to handle this case because if

00:43:55,770 --> 00:44:01,290
you look at the jQuery source you'll see

00:43:58,490 --> 00:44:04,340
that this is you know that we're having

00:44:01,290 --> 00:44:04,340
to deal with this so

00:44:06,100 --> 00:44:14,930
so we're and nearing the end of our of

00:44:11,030 --> 00:44:17,210
our allotted time but to kind of wrap up

00:44:14,930 --> 00:44:20,810
I was curious if we could talk a bit

00:44:17,210 --> 00:44:22,850
more about jquery's future which you

00:44:20,810 --> 00:44:26,120
know I think it's a good point that you

00:44:22,850 --> 00:44:28,370
make the projects attempting to grow but

00:44:26,120 --> 00:44:31,370
it kind of is organically especially in

00:44:28,370 --> 00:44:35,450
different geographic areas where do you

00:44:31,370 --> 00:44:37,790
all see the project in the next say you

00:44:35,450 --> 00:44:41,150
know 5 10 as it nears the end of its

00:44:37,790 --> 00:44:49,070
second decade where do you see this

00:44:41,150 --> 00:44:54,710
project going for Jamie well we do have

00:44:49,070 --> 00:44:57,970
a roadmap for jQuery core and that's

00:44:54,710 --> 00:45:00,290
available on our github in our wiki that

00:44:57,970 --> 00:45:03,020
shows some of the plans we have for the

00:45:00,290 --> 00:45:05,620
projects and documents them one of the

00:45:03,020 --> 00:45:07,820
major things I think we want to do is

00:45:05,620 --> 00:45:10,910
change the infrastructure for our

00:45:07,820 --> 00:45:14,650
websites or update it at least because a

00:45:10,910 --> 00:45:20,330
lot of that stuff is really old and

00:45:14,650 --> 00:45:24,020
needs to be updated we we're going to

00:45:20,330 --> 00:45:28,490
continue maintaining the source code and

00:45:24,020 --> 00:45:31,070
the documentation as best we can and I

00:45:28,490 --> 00:45:32,830
should point out that all of us are all

00:45:31,070 --> 00:45:37,310
of us on the jquery team are volunteers

00:45:32,830 --> 00:45:40,250
with full time jobs so we don't always

00:45:37,310 --> 00:45:47,330
have very much time to to spend on

00:45:40,250 --> 00:45:51,440
jQuery each week although recently we

00:45:47,330 --> 00:45:57,560
call one of our team members it has been

00:45:51,440 --> 00:46:00,890
killing it doing a lot of the work that

00:45:57,560 --> 00:46:05,170
we've been wanting to do and so I'm very

00:46:00,890 --> 00:46:10,160
grateful to him that he gets to spend

00:46:05,170 --> 00:46:11,510
his company donates some of his time so

00:46:10,160 --> 00:46:14,450
he gets to spend a certain percentage of

00:46:11,510 --> 00:46:16,070
his time on open-source and he was

00:46:14,450 --> 00:46:19,390
focused on angular for a while but now

00:46:16,070 --> 00:46:19,390
he's back on jQuery

00:46:19,950 --> 00:46:26,070
but anyway in 5-10 years I think jQuery

00:46:23,940 --> 00:46:28,470
will still be going strong

00:46:26,070 --> 00:46:31,470
it might not the usage will probably be

00:46:28,470 --> 00:46:34,310
down a bit globally but it'll still be

00:46:31,470 --> 00:46:40,260
pretty high and it will still need to be

00:46:34,310 --> 00:46:42,839
maintained and supported do you think

00:46:40,260 --> 00:46:47,280
Dave yeah I agree with that I think

00:46:42,839 --> 00:46:49,140
jQuery when you've got 85% usage across

00:46:47,280 --> 00:46:54,000
the internet that's not going away

00:46:49,140 --> 00:46:57,030
anytime soon so so jQuery is not going

00:46:54,000 --> 00:46:59,970
anywhere I think that the the big

00:46:57,030 --> 00:47:03,920
challenge that jQuery has which is

00:46:59,970 --> 00:47:08,339
really not necessarily up to the team is

00:47:03,920 --> 00:47:10,800
to deal with the issues of security

00:47:08,339 --> 00:47:13,700
problems that are existing in their

00:47:10,800 --> 00:47:18,390
peoples code that uses jQuery

00:47:13,700 --> 00:47:20,910
potentially in jQuery itself probably

00:47:18,390 --> 00:47:23,510
times these change the changes can't be

00:47:20,910 --> 00:47:25,950
maybe without breaking existing code and

00:47:23,510 --> 00:47:29,849
sometimes the breakage be serious enough

00:47:25,950 --> 00:47:32,069
that that people would have to go into

00:47:29,849 --> 00:47:36,720
websites that haven't been updated for

00:47:32,069 --> 00:47:43,440
five years and that's not gonna be easy

00:47:36,720 --> 00:47:47,010
so I think we you know as write and we

00:47:43,440 --> 00:47:49,950
can't just patch the latest version and

00:47:47,010 --> 00:47:52,290
stuff like that people are you know weak

00:47:49,950 --> 00:47:55,800
we can come out you we can update jQuery

00:47:52,290 --> 00:47:57,540
three or jQuery four or jQuery five but

00:47:55,800 --> 00:48:01,560
they'll still be a ton of people on

00:47:57,540 --> 00:48:03,390
jQuery one into right we've talked about

00:48:01,560 --> 00:48:07,440
trying to make some of the changes that

00:48:03,390 --> 00:48:10,530
are security issues there but it's

00:48:07,440 --> 00:48:14,190
difficult because it does break existing

00:48:10,530 --> 00:48:16,859
code and we need you know we really

00:48:14,190 --> 00:48:18,900
don't we're very serious about not

00:48:16,859 --> 00:48:22,440
breaking people's code if they want to

00:48:18,900 --> 00:48:25,319
update they can update but the issue

00:48:22,440 --> 00:48:29,460
quite often is websites are written by

00:48:25,319 --> 00:48:31,400
people and someone purchases for example

00:48:29,460 --> 00:48:33,450
a wordpress theme and the theme

00:48:31,400 --> 00:48:36,090
something that

00:48:33,450 --> 00:48:37,800
you know that they they the person who

00:48:36,090 --> 00:48:40,140
bought it has no idea what it does but

00:48:37,800 --> 00:48:45,420
it used this jQuery and it uses an old

00:48:40,140 --> 00:48:48,240
version of jQuery so you know at some

00:48:45,420 --> 00:48:50,400
point that needs to be updated I think

00:48:48,240 --> 00:48:54,570
that's a problem for a lot of ecosystems

00:48:50,400 --> 00:48:56,580
like Drupal and WordPress and several

00:48:54,570 --> 00:48:59,250
others that use jQuery as part of their

00:48:56,580 --> 00:49:00,870
their system right and if they have the

00:48:59,250 --> 00:49:04,850
same problem we have with backwards

00:49:00,870 --> 00:49:04,850
compatibility and needing to make

00:49:05,300 --> 00:49:11,130
incremental changes and very small

00:49:08,190 --> 00:49:16,070
changes so that they don't upset the

00:49:11,130 --> 00:49:21,240
ecosystem too much and part of that is

00:49:16,070 --> 00:49:22,950
not updating jQuery because we've made

00:49:21,240 --> 00:49:25,380
ranking changes and have moved on to

00:49:22,950 --> 00:49:30,390
major versions and dropped browser

00:49:25,380 --> 00:49:34,380
support for old browsers like IE 8 9 i

00:49:30,390 --> 00:49:38,960
think a 10 in coming up here for a

00:49:34,380 --> 00:49:38,960
version 4 and that's not something

00:49:39,380 --> 00:49:45,600
wordpress necessarily wants to do just

00:49:42,090 --> 00:49:50,790
yet and even if they did it could take a

00:49:45,600 --> 00:49:55,680
long time for them to update so this

00:49:50,790 --> 00:50:00,360
cascading set of product management sort

00:49:55,680 --> 00:50:03,390
of strategies between like jQuery as the

00:50:00,360 --> 00:50:05,970
jQuery product the WordPress product the

00:50:03,390 --> 00:50:07,980
product of the theme builder for example

00:50:05,970 --> 00:50:10,280
and all that sort of stuff and all that

00:50:07,980 --> 00:50:17,460
has to kind of work together in order to

00:50:10,280 --> 00:50:20,250
somehow write there's a lot of there's a

00:50:17,460 --> 00:50:24,950
lot of other platforms out there that

00:50:20,250 --> 00:50:28,920
use jQuery I was involved in nonprofit

00:50:24,950 --> 00:50:31,320
fundraising software a couple of years

00:50:28,920 --> 00:50:34,680
ago there are four or five different

00:50:31,320 --> 00:50:36,540
systems that are all expecting to have

00:50:34,680 --> 00:50:40,650
jQuery there to build all of their

00:50:36,540 --> 00:50:43,140
donation pages and that you know those

00:50:40,650 --> 00:50:44,880
are small enough systems that nobody's

00:50:43,140 --> 00:50:46,740
going to go back and reinvent and

00:50:44,880 --> 00:50:48,080
redesign all of those it's just too much

00:50:46,740 --> 00:50:51,500
work

00:50:48,080 --> 00:50:54,320
they're going to if they're not actively

00:50:51,500 --> 00:51:01,520
developed it'll just don't have to age

00:50:54,320 --> 00:51:06,170
out somehow mmm that's probably a bigger

00:51:01,520 --> 00:51:08,750
problem than we can solve it is you are

00:51:06,170 --> 00:51:10,550
a very smart you're both very smart so I

00:51:08,750 --> 00:51:13,190
do have all the faith that if anybody

00:51:10,550 --> 00:51:15,830
could solve it you could but probably

00:51:13,190 --> 00:51:19,810
not in your spare time which to Timmy's

00:51:15,830 --> 00:51:23,210
point you work on jQuery as volunteers

00:51:19,810 --> 00:51:27,170
what is sort of the last question what

00:51:23,210 --> 00:51:30,590
is it that the community can do you know

00:51:27,170 --> 00:51:34,430
to to support y'all to support the

00:51:30,590 --> 00:51:37,370
project and you know what can we what

00:51:34,430 --> 00:51:40,820
can we do we users of consumers of

00:51:37,370 --> 00:51:43,130
jQuery well we're always looking for

00:51:40,820 --> 00:51:46,190
more contributors and not necessarily in

00:51:43,130 --> 00:51:49,880
the code it could be documentation or

00:51:46,190 --> 00:51:53,260
the websites specifically the docs

00:51:49,880 --> 00:51:56,720
website or the home page for jQuery comm

00:51:53,260 --> 00:52:01,210
and that we have issues on github that

00:51:56,720 --> 00:52:03,620
are labeled I think it's help wanted

00:52:01,210 --> 00:52:08,990
so that'd be a good place to start if

00:52:03,620 --> 00:52:15,200
you're looking to contribute otherwise

00:52:08,990 --> 00:52:18,410
just moral support I guess I think the

00:52:15,200 --> 00:52:21,160
the idea that we we actually been

00:52:18,410 --> 00:52:23,450
talking about completely changing our

00:52:21,160 --> 00:52:26,930
documentation platform because it's a

00:52:23,450 --> 00:52:30,020
pretty old set up based off of XML and

00:52:26,930 --> 00:52:33,860
XSL don't know what that is then you're

00:52:30,020 --> 00:52:37,070
very fortunate but we'd like to move to

00:52:33,860 --> 00:52:39,560
something a little more modern that that

00:52:37,070 --> 00:52:42,290
would allow us it would allow

00:52:39,560 --> 00:52:43,670
contributors to contribute changes more

00:52:42,290 --> 00:52:46,910
easily because right now it's pretty

00:52:43,670 --> 00:52:49,970
difficult to do that the other thing

00:52:46,910 --> 00:52:51,500
people could do is update their versions

00:52:49,970 --> 00:52:55,490
of jQuery especially if you're using

00:52:51,500 --> 00:52:57,590
jQuery one or two you know try to try to

00:52:55,490 --> 00:53:00,410
update or a recent version of jQuery if

00:52:57,590 --> 00:53:01,080
you are using it because and we have

00:53:00,410 --> 00:53:03,290
tools like

00:53:01,080 --> 00:53:06,750
jquery migrated to make that easier

00:53:03,290 --> 00:53:09,750
because those versions do have security

00:53:06,750 --> 00:53:14,490
bugs they support browsers that no

00:53:09,750 --> 00:53:18,240
longer exists a merchants 10 smaller and

00:53:14,490 --> 00:53:24,000
if you're using jQuery migrate take it

00:53:18,240 --> 00:53:27,180
out for production yes so sometimes we

00:53:24,000 --> 00:53:30,950
see we see that console.log jQuery my

00:53:27,180 --> 00:53:33,570
crate is loaded on production websites

00:53:30,950 --> 00:53:37,730
people file bugs saying please remove

00:53:33,570 --> 00:53:37,730
this so that nobody knows I'm doing it

00:53:40,160 --> 00:53:44,100
but it's it's just meant to be a

00:53:42,240 --> 00:53:50,400
development tool but once you make the

00:53:44,100 --> 00:53:54,570
changes it can be removed okay

00:53:50,400 --> 00:53:58,170
well and I think that's probably good

00:53:54,570 --> 00:54:01,590
good question to end on there um let me

00:53:58,170 --> 00:54:04,860
just thank both of you Dave and Timmy

00:54:01,590 --> 00:54:10,470
for dialing in today and chatting with

00:54:04,860 --> 00:54:14,040
us and sharing your experience with our

00:54:10,470 --> 00:54:18,480
broader open J's foundation community if

00:54:14,040 --> 00:54:21,600
you watched please give Dave Dave muffin

00:54:18,480 --> 00:54:24,510
or at Timmy well you know a nice little

00:54:21,600 --> 00:54:27,180
heart emoji on Twitter to show that

00:54:24,510 --> 00:54:30,230
support and for all that they do for the

00:54:27,180 --> 00:54:34,980
web you guys keep the web running really

00:54:30,230 --> 00:54:37,530
and I personally thank you so I hope

00:54:34,980 --> 00:54:40,700
you've enjoyed it and appreciate you all

00:54:37,530 --> 00:54:46,400
tuning in we'll see you for another AMA

00:54:40,700 --> 00:54:48,300
where you can a you a a ask us thank you

00:54:46,400 --> 00:54:50,900
thank you very much

00:54:48,300 --> 00:54:50,900

YouTube URL: https://www.youtube.com/watch?v=GNJ1gTj4p2s


