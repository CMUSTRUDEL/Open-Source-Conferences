Title: Making Capacitor Flux with NativeScript and an Ionic Friend - Nathan Walker, nStudio LLC
Publication date: 2021-05-31
Playlist: OpenJS World 2021 - Development
Description: 
	Capacitor is an open source runtime for building Web Native apps backed by the Ionic Framework team allowing you to take your JavaScript app and submerge it into the exciting world of platform api’s and devices for diverse developments. NativeScript is an open source technology empowering JavaScript developers with access to native platform api’s. The marriage of Capacitor and NativeScript provides some exciting capabilities for enriched development experiences and end user satisfaction. Let’s take a look together at how we can make Capacitor “flux” at 88 mph with NativeScript for far reaching JavaScript applications.
Captions: 
	00:00:00,000 --> 00:00:03,520
hi my name is nathan walker thank you

00:00:02,240 --> 00:00:05,759
for joining us all here

00:00:03,520 --> 00:00:07,600
in celebrating javascript a language we

00:00:05,759 --> 00:00:09,920
all hold so dear

00:00:07,600 --> 00:00:11,599
i'm an open source contributor largely

00:00:09,920 --> 00:00:13,519
around javascript

00:00:11,599 --> 00:00:15,519
i also serve on the technical steering

00:00:13,519 --> 00:00:16,080
committee for nativescript which is an

00:00:15,519 --> 00:00:18,080
open source

00:00:16,080 --> 00:00:21,520
framework allowing you to code platform

00:00:18,080 --> 00:00:23,840
apis directly from javascript

00:00:21,520 --> 00:00:26,800
i'm also co-founder of in studio which

00:00:23,840 --> 00:00:28,480
is a software services company

00:00:26,800 --> 00:00:30,480
i'd like to take a moment and talk

00:00:28,480 --> 00:00:31,840
briefly about what nativescript is for

00:00:30,480 --> 00:00:34,320
those who are not as familiar

00:00:31,840 --> 00:00:36,320
before we embark on a fun journey of a

00:00:34,320 --> 00:00:38,480
mobile app user

00:00:36,320 --> 00:00:40,719
what we're referring to with platform

00:00:38,480 --> 00:00:42,800
apis is the native language that

00:00:40,719 --> 00:00:43,760
is used on that particular device

00:00:42,800 --> 00:00:46,160
platform

00:00:43,760 --> 00:00:47,280
objective-c and swift being used on ios

00:00:46,160 --> 00:00:49,120
and mac os

00:00:47,280 --> 00:00:50,719
and java in kotlin for example being

00:00:49,120 --> 00:00:52,399
used on android

00:00:50,719 --> 00:00:54,320
what we see here in this example is a

00:00:52,399 --> 00:00:56,480
snippet of objective c code

00:00:54,320 --> 00:00:58,719
that we can write using native script

00:00:56,480 --> 00:01:00,399
with familiar javascript syntax

00:00:58,719 --> 00:01:02,079
this is all without leaving your

00:01:00,399 --> 00:01:03,600
javascript ide

00:01:02,079 --> 00:01:05,760
and allows you to go to source

00:01:03,600 --> 00:01:08,400
documentation without

00:01:05,760 --> 00:01:10,400
learning a whole new set of apis just to

00:01:08,400 --> 00:01:13,280
get at that particular platform

00:01:10,400 --> 00:01:15,439
api you can just use what you find in

00:01:13,280 --> 00:01:17,600
source documentation directly in your

00:01:15,439 --> 00:01:19,920
javascript development

00:01:17,600 --> 00:01:21,600
another example here showing a java

00:01:19,920 --> 00:01:24,720
class which extends

00:01:21,600 --> 00:01:26,720
for example java laying object and we

00:01:24,720 --> 00:01:28,799
can also construct one of these using

00:01:26,720 --> 00:01:29,600
javascript semantics and we could pass

00:01:28,799 --> 00:01:32,159
it an array

00:01:29,600 --> 00:01:34,240
a typical javascript array to that

00:01:32,159 --> 00:01:35,360
actual method that was in that java

00:01:34,240 --> 00:01:38,079
class

00:01:35,360 --> 00:01:38,880
again this is all occurring in real time

00:01:38,079 --> 00:01:41,200
in front of you

00:01:38,880 --> 00:01:43,439
in your javascript development to show

00:01:41,200 --> 00:01:46,560
one last example using java

00:01:43,439 --> 00:01:48,320
we can again use very standard java apis

00:01:46,560 --> 00:01:51,280
that have been around for years like

00:01:48,320 --> 00:01:52,079
java io file and constructing a file

00:01:51,280 --> 00:01:55,040
class

00:01:52,079 --> 00:01:57,520
and using those apis directly again in

00:01:55,040 --> 00:01:59,439
our javascript development

00:01:57,520 --> 00:02:01,520
what this leads to is a number of

00:01:59,439 --> 00:02:03,840
interesting development scenarios

00:02:01,520 --> 00:02:06,320
for example because you have full access

00:02:03,840 --> 00:02:09,039
to the platform apis

00:02:06,320 --> 00:02:09,759
you obviously have access to the

00:02:09,039 --> 00:02:12,400
platform

00:02:09,759 --> 00:02:13,120
view language as well nativescript

00:02:12,400 --> 00:02:15,440
provides

00:02:13,120 --> 00:02:16,319
a core library that gives a pretty

00:02:15,440 --> 00:02:18,480
concise

00:02:16,319 --> 00:02:20,640
view markup language on top of this as

00:02:18,480 --> 00:02:23,200
well if we look at nativescript's core

00:02:20,640 --> 00:02:23,840
repo here and we dive into the source

00:02:23,200 --> 00:02:26,640
code

00:02:23,840 --> 00:02:29,040
you'll find familiar classes for those

00:02:26,640 --> 00:02:32,000
particular platforms at their base for

00:02:29,040 --> 00:02:34,319
example every layout container on ios

00:02:32,000 --> 00:02:35,200
is actually a ui view like you would

00:02:34,319 --> 00:02:37,920
typically do

00:02:35,200 --> 00:02:38,239
with ios development what this provides

00:02:37,920 --> 00:02:41,360
for

00:02:38,239 --> 00:02:41,920
is rich platform development and you can

00:02:41,360 --> 00:02:44,480
do this

00:02:41,920 --> 00:02:46,480
in all sorts of creative endeavors when

00:02:44,480 --> 00:02:48,000
it comes to building an application for

00:02:46,480 --> 00:02:50,080
that particular device

00:02:48,000 --> 00:02:52,080
this is an example showing all sorts of

00:02:50,080 --> 00:02:54,560
apis being engaged with

00:02:52,080 --> 00:02:57,040
for the ios platform and developing a

00:02:54,560 --> 00:02:58,959
pretty dynamic ui

00:02:57,040 --> 00:03:01,040
but what if you're not familiar with

00:02:58,959 --> 00:03:03,680
platform view development

00:03:01,040 --> 00:03:04,560
and your particular development style is

00:03:03,680 --> 00:03:07,920
with of course

00:03:04,560 --> 00:03:08,319
html and the dom this is what the great

00:03:07,920 --> 00:03:10,560
team

00:03:08,319 --> 00:03:11,519
at ionic has developed with ionic

00:03:10,560 --> 00:03:14,319
framework

00:03:11,519 --> 00:03:15,280
these are really high quality toolkits

00:03:14,319 --> 00:03:18,080
that you can build

00:03:15,280 --> 00:03:20,159
mobile uis using the familiar dom this

00:03:18,080 --> 00:03:21,280
lets you build these controls fully with

00:03:20,159 --> 00:03:23,360
html

00:03:21,280 --> 00:03:25,360
and a whole framework behind this to

00:03:23,360 --> 00:03:27,440
deal with different paradigms on that

00:03:25,360 --> 00:03:28,959
particular device ui

00:03:27,440 --> 00:03:30,560
the ionic team has also developed

00:03:28,959 --> 00:03:32,560
capacitor js

00:03:30,560 --> 00:03:33,840
which is the mobile run time that allows

00:03:32,560 --> 00:03:36,239
you to take these

00:03:33,840 --> 00:03:38,159
web view developments and deploy them

00:03:36,239 --> 00:03:41,040
onto these devices

00:03:38,159 --> 00:03:42,480
nativescript also works with capacitor

00:03:41,040 --> 00:03:43,200
the native script for capacitor

00:03:42,480 --> 00:03:46,080
integration

00:03:43,200 --> 00:03:46,480
allows you to use native script directly

00:03:46,080 --> 00:03:49,280
from

00:03:46,480 --> 00:03:50,879
ionic components and integrate and do

00:03:49,280 --> 00:03:51,680
all sorts of creative platform

00:03:50,879 --> 00:03:54,720
development

00:03:51,680 --> 00:03:56,799
directly from your ionic code base

00:03:54,720 --> 00:03:57,760
instead of me explaining this

00:03:56,799 --> 00:04:00,159
integration

00:03:57,760 --> 00:04:02,239
let's sit back relax and watch an

00:04:00,159 --> 00:04:04,319
entertaining journey through time

00:04:02,239 --> 00:04:06,159
of how a mobile app user encounters

00:04:04,319 --> 00:04:07,120
struggles and how this particular

00:04:06,159 --> 00:04:15,840
integration

00:04:07,120 --> 00:04:15,840
can help enjoy

00:04:16,209 --> 00:04:20,509
[Music]

00:04:21,519 --> 00:04:25,520
hey hi there where to downtown austin

00:04:24,720 --> 00:04:29,840
please

00:04:25,520 --> 00:04:29,840
of course

00:04:30,620 --> 00:04:36,320
[Music]

00:04:32,400 --> 00:04:38,320
hey i know that one book of mormon right

00:04:36,320 --> 00:04:39,520
by those sapphire guys what were their

00:04:38,320 --> 00:04:43,840
names yeah

00:04:39,520 --> 00:04:43,840
yeah let me check

00:04:47,840 --> 00:04:52,639
great scott why did you stop the music

00:04:50,800 --> 00:04:55,759
it's the app

00:04:52,639 --> 00:05:00,080
now i have to download the file again

00:04:55,759 --> 00:05:00,080
and it's 1.21 gigabytes too

00:05:03,840 --> 00:05:08,960
tell you what that's going to take some

00:05:05,120 --> 00:05:11,280
getting used to choice

00:05:08,960 --> 00:05:12,960
you know see i'm super excited about

00:05:11,280 --> 00:05:14,400
this app we're building i'm already

00:05:12,960 --> 00:05:15,600
having a ton of fun with angular and

00:05:14,400 --> 00:05:17,919
capacitor 3.

00:05:15,600 --> 00:05:19,600
and yesterday i started prototyping a

00:05:17,919 --> 00:05:21,280
few of the key features but i'm running

00:05:19,600 --> 00:05:23,039
into a little bit of trouble

00:05:21,280 --> 00:05:25,199
like i tried a few available video

00:05:23,039 --> 00:05:27,440
plugins i'm struggling to get that

00:05:25,199 --> 00:05:29,039
yeah that picture in picture behavior

00:05:27,440 --> 00:05:30,960
you know like when you

00:05:29,039 --> 00:05:33,199
switch apps and you get that little tiny

00:05:30,960 --> 00:05:34,479
box of streaming video i can't quite

00:05:33,199 --> 00:05:38,080
pull that off

00:05:34,479 --> 00:05:39,520
um you have any ideas yeah we can use

00:05:38,080 --> 00:05:41,199
the script to create our own video

00:05:39,520 --> 00:05:42,800
player hang on

00:05:41,199 --> 00:05:44,400
you mean that small community native

00:05:42,800 --> 00:05:45,360
view framework thing that died a long

00:05:44,400 --> 00:05:46,639
time ago

00:05:45,360 --> 00:05:49,600
i want to create this app with angular

00:05:46,639 --> 00:05:52,639
and capacitor 3oc

00:05:49,600 --> 00:05:53,759
well um you nato script is not just for

00:05:52,639 --> 00:05:56,240
an interview handling

00:05:53,759 --> 00:05:58,319
it can actually be used with capacitor

00:05:56,240 --> 00:06:01,360
and i can show you how

00:05:58,319 --> 00:06:03,680
really okay so let's

00:06:01,360 --> 00:06:04,840
start with installing our make a script

00:06:03,680 --> 00:06:07,360
capacitor

00:06:04,840 --> 00:06:09,520
plugin okay i didn't realize this this

00:06:07,360 --> 00:06:14,319
is just an npm package we can install

00:06:09,520 --> 00:06:14,319
yeah nice so it's done

00:06:14,720 --> 00:06:22,000
okay so this is what you get after

00:06:18,319 --> 00:06:25,360
you install the package a nice little

00:06:22,000 --> 00:06:28,000
helper so this this is like

00:06:25,360 --> 00:06:29,440
little helpers we can sprinkle into our

00:06:28,000 --> 00:06:32,720
ionic capacitor

00:06:29,440 --> 00:06:36,000
yes okay next

00:06:32,720 --> 00:06:40,000
we would create our angular component

00:06:36,000 --> 00:06:43,199
which would host our video

00:06:40,000 --> 00:06:44,000
player code this is our angular

00:06:43,199 --> 00:06:47,120
component we

00:06:44,000 --> 00:06:50,800
just generated and here

00:06:47,120 --> 00:06:54,000
is um the definition for help us

00:06:50,800 --> 00:06:55,039
yeah oh interesting so these apis are

00:06:54,000 --> 00:06:58,000
accessible to us

00:06:55,039 --> 00:06:58,880
in capacitor that we create here exactly

00:06:58,000 --> 00:07:03,840
so now

00:06:58,880 --> 00:07:03,840
that's why i start wiring up some code

00:07:04,960 --> 00:07:09,280
so here we would import the newly

00:07:07,680 --> 00:07:12,240
created index

00:07:09,280 --> 00:07:14,000
custom api that we'll be using in

00:07:12,240 --> 00:07:16,720
capacitor

00:07:14,000 --> 00:07:17,599
this is what exposes that api for us to

00:07:16,720 --> 00:07:22,400
use i guess

00:07:17,599 --> 00:07:25,199
yes okay so here's our first helper to

00:07:22,400 --> 00:07:26,000
create the video player and we'll use

00:07:25,199 --> 00:07:29,199
the

00:07:26,000 --> 00:07:30,000
av player view controller um for apple

00:07:29,199 --> 00:07:32,560
docs

00:07:30,000 --> 00:07:33,440
uh it also supports your video and

00:07:32,560 --> 00:07:36,639
picture

00:07:33,440 --> 00:07:38,880
which you would like i see so

00:07:36,639 --> 00:07:40,319
you think that creating this player here

00:07:38,880 --> 00:07:42,080
is going to allow us to engage with that

00:07:40,319 --> 00:07:45,280
picture-in-picture behavior i'm after

00:07:42,080 --> 00:07:48,479
better yes it will

00:07:45,280 --> 00:07:50,319
okay so now i'll see you can get some

00:07:48,479 --> 00:07:53,520
nice intellisense

00:07:50,319 --> 00:07:54,240
and we'll choose to use the new method

00:07:53,520 --> 00:07:57,440
on the

00:07:54,240 --> 00:08:00,639
controller it's really a convenience

00:07:57,440 --> 00:08:03,680
method which helps us to create a

00:08:00,639 --> 00:08:05,120
native instance of that controller so

00:08:03,680 --> 00:08:08,080
now back to the component

00:08:05,120 --> 00:08:09,199
the angular component as you see we use

00:08:08,080 --> 00:08:11,520
the

00:08:09,199 --> 00:08:12,319
helper that we created from the native

00:08:11,520 --> 00:08:14,560
object

00:08:12,319 --> 00:08:15,520
got it you know this is pretty

00:08:14,560 --> 00:08:18,000
interesting oc

00:08:15,520 --> 00:08:19,520
i was wondering the other day like oc

00:08:18,000 --> 00:08:22,080
fortune that's a really

00:08:19,520 --> 00:08:23,599
awesome name at that and i was kind of

00:08:22,080 --> 00:08:25,680
curious like where the

00:08:23,599 --> 00:08:26,960
fortune comes from like did your family

00:08:25,680 --> 00:08:28,560
have some

00:08:26,960 --> 00:08:30,160
fortune in the past like what's the

00:08:28,560 --> 00:08:32,640
history there

00:08:30,160 --> 00:08:33,519
um well i really like to know about that

00:08:32,640 --> 00:08:37,200
fortune

00:08:33,519 --> 00:08:39,680
but i'm just from the caribbean

00:08:37,200 --> 00:08:41,440
trinidad to be good to be exact some

00:08:39,680 --> 00:08:44,720
would know it as

00:08:41,440 --> 00:08:46,959
the city home of soka also

00:08:44,720 --> 00:08:48,480
we have the greatest show on earth which

00:08:46,959 --> 00:08:52,480
is called carnival

00:08:48,480 --> 00:08:56,240
and we are also the creators of

00:08:52,480 --> 00:09:00,080
the steel drum ah

00:08:56,240 --> 00:09:02,720
boy i love the steel drum good stuff

00:09:00,080 --> 00:09:04,080
so now that's all let's go on to setting

00:09:02,720 --> 00:09:05,839
up that audio session

00:09:04,080 --> 00:09:08,399
so again you're just kind of following

00:09:05,839 --> 00:09:10,240
the platform documentation

00:09:08,399 --> 00:09:11,839
to create this video player and this

00:09:10,240 --> 00:09:13,440
this audio session is just something

00:09:11,839 --> 00:09:15,120
that is important

00:09:13,440 --> 00:09:17,360
apparently according to the docs for us

00:09:15,120 --> 00:09:21,440
to do to set this player up

00:09:17,360 --> 00:09:23,200
ah yes it is got it

00:09:21,440 --> 00:09:25,040
so along with setting up the audio

00:09:23,200 --> 00:09:27,680
session

00:09:25,040 --> 00:09:28,560
you would also need to set the category

00:09:27,680 --> 00:09:31,440
as well

00:09:28,560 --> 00:09:31,440
go documents

00:09:31,680 --> 00:09:36,080
so let's grab that from here as you can

00:09:34,399 --> 00:09:39,760
see we get some nice help from

00:09:36,080 --> 00:09:43,600
all the intellisense so

00:09:39,760 --> 00:09:46,640
we wrap that up in a nice try catch

00:09:43,600 --> 00:09:47,360
so it would show us any errors we need

00:09:46,640 --> 00:09:50,640
or

00:09:47,360 --> 00:09:53,920
the player running to any problems

00:09:50,640 --> 00:09:55,120
why do we um nathan you have um google

00:09:53,920 --> 00:09:58,160
your name

00:09:55,120 --> 00:09:58,640
i i'm sorry google my name no i'm not

00:09:58,160 --> 00:10:01,839
i'm

00:09:58,640 --> 00:10:01,839
i hope i'm not that vain

00:10:02,160 --> 00:10:05,839
um well if you do have a quick search

00:10:04,720 --> 00:10:09,920
you would find

00:10:05,839 --> 00:10:12,079
a hockey player a hockey player

00:10:09,920 --> 00:10:15,519
uh yeah no yeah i wish i knew how to

00:10:12,079 --> 00:10:15,519
play hockey that's not me

00:10:16,800 --> 00:10:23,440
okay so on to the playback behavior

00:10:19,839 --> 00:10:23,440
you need to set up a player

00:10:23,920 --> 00:10:30,839
let's create that player instance

00:10:27,279 --> 00:10:33,600
again here using the convenience method

00:10:30,839 --> 00:10:35,440
new i i see you don't get any

00:10:33,600 --> 00:10:36,480
intellisense right there off that player

00:10:35,440 --> 00:10:40,000
controller

00:10:36,480 --> 00:10:42,480
yeah we just needed to set the instance

00:10:40,000 --> 00:10:42,480
there it is

00:10:43,279 --> 00:10:49,120
okay so here we would use a helper

00:10:46,399 --> 00:10:50,640
that the plugin gives us to grab the

00:10:49,120 --> 00:10:52,560
currently presented

00:10:50,640 --> 00:10:54,399
view controller interesting so this is

00:10:52,560 --> 00:10:55,600
an api that comes from nave script

00:10:54,399 --> 00:10:57,440
capacitor

00:10:55,600 --> 00:11:00,000
and this gives us access to the view

00:10:57,440 --> 00:11:02,800
controller that is hosting our ionic

00:11:00,000 --> 00:11:03,200
app on ios in this case is that right

00:11:02,800 --> 00:11:06,320
yeah

00:11:03,200 --> 00:11:08,800
that's that's correct okay

00:11:06,320 --> 00:11:09,600
so here we would add that player view

00:11:08,800 --> 00:11:12,560
controller

00:11:09,600 --> 00:11:14,079
to the root controller well so oh see

00:11:12,560 --> 00:11:16,720
i'm kind of confused here

00:11:14,079 --> 00:11:17,440
so you're adding it to our capacitor app

00:11:16,720 --> 00:11:19,519
but

00:11:17,440 --> 00:11:20,480
like i'm kind of confused like where is

00:11:19,519 --> 00:11:23,440
it going to end up

00:11:20,480 --> 00:11:25,200
on screen i mean you're just adding

00:11:23,440 --> 00:11:27,440
these things to the capacitor app i mean

00:11:25,200 --> 00:11:30,480
we got to put it somewhere on the screen

00:11:27,440 --> 00:11:34,000
you know we will add it here now um

00:11:30,480 --> 00:11:36,320
by setting the player controller fuse

00:11:34,000 --> 00:11:36,320
frame

00:11:37,360 --> 00:11:44,399
so we can use the device metrics

00:11:41,360 --> 00:11:47,760
screen metrics so we would grab the

00:11:44,399 --> 00:11:50,880
screen size from it and we

00:11:47,760 --> 00:11:54,639
would use the width and

00:11:50,880 --> 00:11:55,680
create a nice little inset i see so you

00:11:54,639 --> 00:11:58,320
you're sort of using

00:11:55,680 --> 00:12:00,320
exactly the same methodology you would

00:11:58,320 --> 00:12:05,680
on this particular platform

00:12:00,320 --> 00:12:11,360
to position this uh player on screen

00:12:05,680 --> 00:12:16,000
yeah okay set up a nice little size

00:12:11,360 --> 00:12:20,079
and that's it also positioning

00:12:16,000 --> 00:12:23,440
so now we are going to setting up the

00:12:20,079 --> 00:12:26,800
url that we will need to play here

00:12:23,440 --> 00:12:29,519
we'll be using the url and password

00:12:26,800 --> 00:12:30,399
to on new player okay i think i follow

00:12:29,519 --> 00:12:33,920
where you're going

00:12:30,399 --> 00:12:36,959
you're creating yet another helper api

00:12:33,920 --> 00:12:37,279
so we can dynamically control the url of

00:12:36,959 --> 00:12:39,680
our

00:12:37,279 --> 00:12:40,959
playing video is it do am i following

00:12:39,680 --> 00:12:44,560
you right

00:12:40,959 --> 00:12:47,200
yes yeah your own point

00:12:44,560 --> 00:12:48,000
okay all right so after create that new

00:12:47,200 --> 00:12:51,200
player

00:12:48,000 --> 00:12:53,680
which would have our url and we assign

00:12:51,200 --> 00:12:56,320
it to the controller then we hit play

00:12:53,680 --> 00:12:57,760
so now back to the component we would

00:12:56,320 --> 00:13:01,200
set up a

00:12:57,760 --> 00:13:05,040
input that we can grab the url from

00:13:01,200 --> 00:13:07,360
that we can feed to our custom api

00:13:05,040 --> 00:13:10,560
now now that's pretty interesting so

00:13:07,360 --> 00:13:13,519
here we have an angular ionic component

00:13:10,560 --> 00:13:15,519
where you defined a url input that can

00:13:13,519 --> 00:13:17,519
then be passed dynamically

00:13:15,519 --> 00:13:19,279
to a native video streaming player that

00:13:17,519 --> 00:13:22,720
we just coded

00:13:19,279 --> 00:13:24,240
on the fly and that will play whatever

00:13:22,720 --> 00:13:26,880
url we passed to it

00:13:24,240 --> 00:13:28,800
and is that correct yeah that's that's

00:13:26,880 --> 00:13:35,839
correct you are falling

00:13:28,800 --> 00:13:35,839
pretty good oh see this is this is huge

00:13:37,200 --> 00:13:41,040
hey hi there where to downtown austin

00:13:40,240 --> 00:13:43,519
please

00:13:41,040 --> 00:13:43,519
of course

00:13:45,600 --> 00:13:51,600
[Music]

00:13:47,760 --> 00:13:53,600
hey i know that one book of mormon right

00:13:51,600 --> 00:13:54,959
it's by those south park guys what were

00:13:53,600 --> 00:14:03,839
their names yeah

00:13:54,959 --> 00:14:03,839
yeah let me check

00:14:10,720 --> 00:14:17,030
i kind of wish i didn't have to leave

00:14:12,079 --> 00:14:20,360
the app to get more info

00:14:17,030 --> 00:14:20,360
[Music]

00:14:21,680 --> 00:14:25,040
you know see i was thinking i'm

00:14:23,760 --> 00:14:26,079
following what you're doing here it's

00:14:25,040 --> 00:14:27,920
pretty straightforward

00:14:26,079 --> 00:14:29,440
i'm going to add an on event and remove

00:14:27,920 --> 00:14:31,360
event api

00:14:29,440 --> 00:14:33,199
and i want to create a little event bus

00:14:31,360 --> 00:14:33,760
system where we can shuttle some events

00:14:33,199 --> 00:14:35,839
around

00:14:33,760 --> 00:14:37,680
uh what we're doing and i feel like we

00:14:35,839 --> 00:14:38,880
can do some neat interactions with our

00:14:37,680 --> 00:14:41,440
capacitor app

00:14:38,880 --> 00:14:42,800
if we can get events off of this and

00:14:41,440 --> 00:14:44,560
since we're using angular i'm just going

00:14:42,800 --> 00:14:47,519
to use rxjs to set this

00:14:44,560 --> 00:14:48,720
up so just a simple event bus around a

00:14:47,519 --> 00:14:51,440
subject

00:14:48,720 --> 00:14:52,720
and i'll track the callbacks that could

00:14:51,440 --> 00:14:55,440
be wired in from

00:14:52,720 --> 00:14:56,560
our angular component and just emit that

00:14:55,440 --> 00:14:58,800
out of our

00:14:56,560 --> 00:15:00,160
subject here and i think this will give

00:14:58,800 --> 00:15:03,360
us what we need

00:15:00,160 --> 00:15:06,240
yeah well um i have an idea you can

00:15:03,360 --> 00:15:07,519
use the player delegate actually but it

00:15:06,240 --> 00:15:11,199
makes an event

00:15:07,519 --> 00:15:14,560
when paypal started or it was ended

00:15:11,199 --> 00:15:15,920
i see interesting okay so this this

00:15:14,560 --> 00:15:18,639
delegate thing

00:15:15,920 --> 00:15:19,440
is the ability to sort of wire in some

00:15:18,639 --> 00:15:21,360
events

00:15:19,440 --> 00:15:22,560
that you get off this player and and

00:15:21,360 --> 00:15:24,240
you're going to try to set up one of

00:15:22,560 --> 00:15:27,440
these delegates here

00:15:24,240 --> 00:15:29,839
yes exactly okay

00:15:27,440 --> 00:15:31,680
so now this is interesting what are you

00:15:29,839 --> 00:15:33,920
doing with this native class thing i've

00:15:31,680 --> 00:15:37,440
never seen that before

00:15:33,920 --> 00:15:41,360
all right so this native class decorator

00:15:37,440 --> 00:15:44,800
is really a helper so we can generate

00:15:41,360 --> 00:15:47,920
the native um side using

00:15:44,800 --> 00:15:48,320
what's given to us from typescript got

00:15:47,920 --> 00:15:50,399
it and

00:15:48,320 --> 00:15:52,399
what about this objective c protocols

00:15:50,399 --> 00:15:53,279
that sounds kind of wild what's going on

00:15:52,399 --> 00:15:56,720
there

00:15:53,279 --> 00:15:59,120
okay so with that it gives

00:15:56,720 --> 00:15:59,839
the runtime the information that's

00:15:59,120 --> 00:16:03,600
needed

00:15:59,839 --> 00:16:06,399
for that class so basically it tells

00:16:03,600 --> 00:16:07,680
the runtime that this class has these

00:16:06,399 --> 00:16:10,880
protocols

00:16:07,680 --> 00:16:14,079
so it should follow these protocols from

00:16:10,880 --> 00:16:16,160
objective c got it okay

00:16:14,079 --> 00:16:18,240
now it'd be really neat if like you

00:16:16,160 --> 00:16:21,440
could actually get intellisense

00:16:18,240 --> 00:16:23,600
on what comes from these protocols

00:16:21,440 --> 00:16:24,880
like is there a way to do that yeah

00:16:23,600 --> 00:16:28,079
you'll get that

00:16:24,880 --> 00:16:29,839
by using the implements ah

00:16:28,079 --> 00:16:31,680
now i'm familiar with implements just in

00:16:29,839 --> 00:16:33,440
typescript so it works like that just

00:16:31,680 --> 00:16:37,040
the same way

00:16:33,440 --> 00:16:39,199
um or less yes interesting oh i see some

00:16:37,040 --> 00:16:42,800
intellisense on some methods there

00:16:39,199 --> 00:16:46,079
okay yes so now we could use your

00:16:42,800 --> 00:16:50,800
event buff and created some

00:16:46,079 --> 00:16:52,480
effects okay now i'm following you

00:16:50,800 --> 00:16:53,920
so these events are going to be called

00:16:52,480 --> 00:16:55,839
back from our player and we're going to

00:16:53,920 --> 00:16:56,240
use the event bus system that i set up

00:16:55,839 --> 00:16:58,880
to

00:16:56,240 --> 00:17:00,560
shuttle those events back out so we

00:16:58,880 --> 00:17:05,120
should be able to react to those

00:17:00,560 --> 00:17:08,319
in capacitor uh exactly

00:17:05,120 --> 00:17:10,400
got it got it okay now you're kind of

00:17:08,319 --> 00:17:12,240
just setting up the ability to

00:17:10,400 --> 00:17:14,079
kind of connect that delegate to our

00:17:12,240 --> 00:17:17,120
player i guess

00:17:14,079 --> 00:17:19,520
yeah so so the controller

00:17:17,120 --> 00:17:20,959
would feed it the delegate that we just

00:17:19,520 --> 00:17:24,640
created

00:17:20,959 --> 00:17:27,600
got it so back to the component we would

00:17:24,640 --> 00:17:29,679
use the event secret oh this is pretty

00:17:27,600 --> 00:17:33,600
sweet so this is the on event

00:17:29,679 --> 00:17:36,240
api that i added here

00:17:33,600 --> 00:17:36,880
and we can now wire into events that are

00:17:36,240 --> 00:17:39,520
coming off

00:17:36,880 --> 00:17:41,039
anything that we created over there and

00:17:39,520 --> 00:17:41,760
this will give us some good reaction

00:17:41,039 --> 00:17:44,480
points

00:17:41,760 --> 00:17:45,840
in the dom so we could perhaps maybe

00:17:44,480 --> 00:17:49,039
maybe we could have a scrolling

00:17:45,840 --> 00:17:50,480
area of text that actually scrolls up

00:17:49,039 --> 00:17:52,640
and takes the whole screen when the

00:17:50,480 --> 00:17:54,640
video pops out in picture and picture

00:17:52,640 --> 00:17:56,320
it i assume we could probably do that

00:17:54,640 --> 00:17:58,480
sort of thing

00:17:56,320 --> 00:17:59,520
yeah you can do that um yeah that sounds

00:17:58,480 --> 00:18:01,840
good

00:17:59,520 --> 00:18:01,840
sweet

00:18:06,380 --> 00:18:09,479
[Music]

00:18:09,840 --> 00:18:15,840
turn it off

00:18:16,960 --> 00:18:21,600
oh if you like that one you're gonna

00:18:18,880 --> 00:18:21,600
like this one

00:18:22,810 --> 00:18:29,110
[Music]

00:18:25,280 --> 00:18:34,049
ah anastasia another good one

00:18:29,110 --> 00:18:34,049
[Music]

00:18:34,240 --> 00:18:41,679
ah what happened

00:18:38,320 --> 00:18:44,559
the battery died now i lost my place in

00:18:41,679 --> 00:18:44,559
the video too

00:18:45,440 --> 00:18:49,760
hey you know i was just thinking like

00:18:47,039 --> 00:18:50,640
what happens if a user's watching this

00:18:49,760 --> 00:18:52,400
musical

00:18:50,640 --> 00:18:54,880
and right at the best moment of the

00:18:52,400 --> 00:18:58,320
musical their their phone dies

00:18:54,880 --> 00:19:02,240
uh like unexpectedly um

00:18:58,320 --> 00:19:05,039
well i have an idea we can wire up a

00:19:02,240 --> 00:19:07,679
event for that so we'll know when the

00:19:05,039 --> 00:19:10,960
battery is our tree is low

00:19:07,679 --> 00:19:15,919
oh good idea yeah

00:19:10,960 --> 00:19:15,919
so let's set up the api here

00:19:16,240 --> 00:19:21,120
okay so another helper method here to

00:19:18,080 --> 00:19:23,840
listen to the battery level change

00:19:21,120 --> 00:19:25,440
oh you used no only need a script

00:19:23,840 --> 00:19:28,960
capacitor docs

00:19:25,440 --> 00:19:32,400
there's a nice little api to register

00:19:28,960 --> 00:19:35,840
our broadcast receiver which we'll use

00:19:32,400 --> 00:19:36,080
to get the events okay so here we'll set

00:19:35,840 --> 00:19:38,559
up

00:19:36,080 --> 00:19:39,760
the callback and we'll grab a few

00:19:38,559 --> 00:19:42,880
properties

00:19:39,760 --> 00:19:45,840
that we can use to

00:19:42,880 --> 00:19:47,760
emit a percent ah got it and then i

00:19:45,840 --> 00:19:50,720
guess when it's toggled off you just

00:19:47,760 --> 00:19:53,120
you're just unregistering that yeah you

00:19:50,720 --> 00:19:56,480
don't want those lying around

00:19:53,120 --> 00:19:58,320
got it well i could probably do ios

00:19:56,480 --> 00:19:59,760
i know that in the docs it mentions

00:19:58,320 --> 00:20:02,880
using the current device

00:19:59,760 --> 00:20:06,000
battery i think monitoring enabled

00:20:02,880 --> 00:20:08,480
allows me to turn it on and off and from

00:20:06,000 --> 00:20:09,120
there i think i can use just a standard

00:20:08,480 --> 00:20:11,679
ios

00:20:09,120 --> 00:20:13,679
observer to basically observe a system

00:20:11,679 --> 00:20:14,720
notification when the battery level

00:20:13,679 --> 00:20:16,799
changes

00:20:14,720 --> 00:20:18,320
i i think that's straightforward enough

00:20:16,799 --> 00:20:21,039
and will probably give us the

00:20:18,320 --> 00:20:22,080
the notice that we need so i can

00:20:21,039 --> 00:20:23,760
probably use this

00:20:22,080 --> 00:20:25,280
looks like we got intellisense on it

00:20:23,760 --> 00:20:28,640
there's a battery level did

00:20:25,280 --> 00:20:30,159
change notification we can wire in too

00:20:28,640 --> 00:20:32,159
and these other arguments i don't think

00:20:30,159 --> 00:20:35,679
we care about so we can just

00:20:32,159 --> 00:20:37,840
get our call back and emit uh when that

00:20:35,679 --> 00:20:40,400
occurs so we get sort of the same thing

00:20:37,840 --> 00:20:43,200
a percentage of battery level

00:20:40,400 --> 00:20:44,080
yeah and i guess if i if i track if i

00:20:43,200 --> 00:20:46,400
track that

00:20:44,080 --> 00:20:49,840
observation i can just remove it when we

00:20:46,400 --> 00:20:49,840
turn it off

00:20:50,400 --> 00:20:54,559
so back to our component or angular

00:20:53,600 --> 00:20:58,320
component

00:20:54,559 --> 00:21:00,480
we would wire up that listener now okay

00:20:58,320 --> 00:21:02,080
well that's pretty sweet so we can wire

00:21:00,480 --> 00:21:02,640
in the battery level listener right

00:21:02,080 --> 00:21:05,679
there

00:21:02,640 --> 00:21:07,520
in the angular component and just notify

00:21:05,679 --> 00:21:08,400
the user that their phone is about to

00:21:07,520 --> 00:21:11,760
die

00:21:08,400 --> 00:21:13,120
you can do that and you can also see the

00:21:11,760 --> 00:21:16,720
position

00:21:13,120 --> 00:21:16,720
what you think nice

00:21:17,280 --> 00:21:22,159
my sister was a dancer but she got oh if

00:21:20,320 --> 00:21:24,400
you like that one you're gonna like this

00:21:22,159 --> 00:21:24,400
one

00:21:24,559 --> 00:21:28,080
now that we're here

00:21:25,880 --> 00:21:32,640
[Music]

00:21:28,080 --> 00:21:32,640
ah anastasia another good one

00:21:34,930 --> 00:21:43,679
[Music]

00:21:40,480 --> 00:21:45,679
what happened well the battery died but

00:21:43,679 --> 00:21:48,480
it's okay because it saved my place so i

00:21:45,679 --> 00:21:52,480
can resume it whenever i charge my phone

00:21:48,480 --> 00:21:55,520
say do you have a phone charger no need

00:21:52,480 --> 00:21:59,360
we've arrived at your destination

00:21:55,520 --> 00:22:13,840
open js world 2022

00:21:59,360 --> 00:22:13,840
thanks doc

00:22:17,679 --> 00:22:19,760

YouTube URL: https://www.youtube.com/watch?v=OInjFvniccU


