Title: One Source to Rule them All - John Niedzwiecki, Disney Streaming Services
Publication date: 2021-05-31
Playlist: OpenJS World 2021 - Development
Description: 
	We live in a world of applications. There’s a constant tug-of-war between wanting to maintain only one source code versus our app having a home everywhere our users are found. With Angular, we can write web apps that run great on both desktops and on mobile. When combined with NativeScript, we can take the next step and run our JavaScript natively on mobile devices. We’ll look at how to create both a web app and a native iOS and Android application from one codebase, sharing our code between the web and native. Together we can forge our apps using the power of Angular and Nativescript and finally have one source to rule them all. One Source to rule them all, One Source to find them, One Source to bring them all and in the Nativescript bind them.
Captions: 
	00:00:02,399 --> 00:00:09,760
welcome to one source to rule them all

00:00:05,759 --> 00:00:12,240
we want it all it's not uncommon that we

00:00:09,760 --> 00:00:13,840
and decision makers really want it all

00:00:12,240 --> 00:00:15,519
in a world of applications we want both

00:00:13,840 --> 00:00:16,320
a web presence and a native mobile

00:00:15,519 --> 00:00:17,680
presence

00:00:16,320 --> 00:00:20,480
what we don't want is to maintain

00:00:17,680 --> 00:00:22,000
competing parallel code bases

00:00:20,480 --> 00:00:24,000
what this leads to is a tug-of-war

00:00:22,000 --> 00:00:26,240
between wanting to maintain only

00:00:24,000 --> 00:00:31,840
one source code versus our app having a

00:00:26,240 --> 00:00:31,840
home everywhere that our users are found

00:00:32,000 --> 00:00:37,360
so who am i well i'm a kilt wearing

00:00:35,840 --> 00:00:39,040
coder

00:00:37,360 --> 00:00:40,480
my name is john zwicky i like to call

00:00:39,040 --> 00:00:41,600
myself your friendly neighborhood kilted

00:00:40,480 --> 00:00:43,120
coder

00:00:41,600 --> 00:00:45,120
if i was on stage today you'd be seeing

00:00:43,120 --> 00:00:46,399
my kilt but right now you show me this

00:00:45,120 --> 00:00:48,879
little tiny box

00:00:46,399 --> 00:00:49,840
um i'm a husband a father currently a

00:00:48,879 --> 00:00:52,239
mini farmer

00:00:49,840 --> 00:00:52,960
i love pathfinder which is tabletop rpg

00:00:52,239 --> 00:00:54,399
cooking

00:00:52,960 --> 00:00:56,160
and the disney parks which i live in

00:00:54,399 --> 00:00:56,960
florida so it works out convenient for

00:00:56,160 --> 00:00:58,800
me

00:00:56,960 --> 00:01:00,320
i'm also tech lead at disney streaming i

00:00:58,800 --> 00:01:02,480
build software to help support the media

00:01:00,320 --> 00:01:04,080
processing for disney plus

00:01:02,480 --> 00:01:05,360
but i'm also very passionate about

00:01:04,080 --> 00:01:08,560
native script which is why i'm giving

00:01:05,360 --> 00:01:08,560
that talk this talk today

00:01:09,439 --> 00:01:12,799
we're going to forge one source and it's

00:01:11,119 --> 00:01:15,040
going to be forged in javascript

00:01:12,799 --> 00:01:16,960
you might notice some veiled references

00:01:15,040 --> 00:01:17,680
to a certain movie that involves some

00:01:16,960 --> 00:01:20,720
hobbits

00:01:17,680 --> 00:01:23,119
a dwarf an elf you might notice

00:01:20,720 --> 00:01:24,720
parallels there

00:01:23,119 --> 00:01:26,080
so what are we going to do today well

00:01:24,720 --> 00:01:27,119
we're going to talk about what do we

00:01:26,080 --> 00:01:28,880
want

00:01:27,119 --> 00:01:30,159
um then we're going to go on to what is

00:01:28,880 --> 00:01:31,680
native script maybe it's going to be the

00:01:30,159 --> 00:01:33,759
key here on how we're going to get to

00:01:31,680 --> 00:01:34,799
this end goal of one source

00:01:33,759 --> 00:01:36,880
we're going to talk about how do we

00:01:34,799 --> 00:01:38,079
share code because we said that's what

00:01:36,880 --> 00:01:39,119
part of what we want is to share code

00:01:38,079 --> 00:01:39,360
and then we're going to look explicitly

00:01:39,119 --> 00:01:41,040
at

00:01:39,360 --> 00:01:44,079
xplat which is one of the solutions you

00:01:41,040 --> 00:01:47,040
can have for sharing code

00:01:44,079 --> 00:01:47,520
so let's touch again on what do we want

00:01:47,040 --> 00:01:49,360
so

00:01:47,520 --> 00:01:51,040
we want both a web and a native

00:01:49,360 --> 00:01:52,399
application that is the goal of what we

00:01:51,040 --> 00:01:54,159
want to get to here

00:01:52,399 --> 00:01:55,759
and we want code reuse if we make a

00:01:54,159 --> 00:01:57,439
really cool avatar selector

00:01:55,759 --> 00:01:58,719
we want to be able to use it on web and

00:01:57,439 --> 00:02:00,240
on native and want to have that same

00:01:58,719 --> 00:02:01,360
experience for our users especially if

00:02:00,240 --> 00:02:03,680
it's really cool

00:02:01,360 --> 00:02:05,200
what we don't want is to have multiple

00:02:03,680 --> 00:02:07,360
separate projects

00:02:05,200 --> 00:02:08,640
and sometimes as front-end developers we

00:02:07,360 --> 00:02:09,920
just want to get to play with native

00:02:08,640 --> 00:02:11,360
without the overhead of learning another

00:02:09,920 --> 00:02:12,400
language we want to use the tools that

00:02:11,360 --> 00:02:14,080
we already have

00:02:12,400 --> 00:02:15,520
and that's where native script comes

00:02:14,080 --> 00:02:19,120
into play

00:02:15,520 --> 00:02:19,120
so what is nativescript

00:02:20,080 --> 00:02:23,920
nativescript is an open source framework

00:02:21,920 --> 00:02:26,879
designed to empower javascript with

00:02:23,920 --> 00:02:26,879
native apis

00:02:27,120 --> 00:02:31,200
it allows you to choose the flavor that

00:02:29,360 --> 00:02:33,200
you already love

00:02:31,200 --> 00:02:34,640
do you want to code in javascript maybe

00:02:33,200 --> 00:02:37,040
you like types and typescript

00:02:34,640 --> 00:02:38,160
i know i do do you like your framework

00:02:37,040 --> 00:02:40,319
of angular

00:02:38,160 --> 00:02:41,599
do you prefer to use ionic or view or

00:02:40,319 --> 00:02:43,680
react or even spell

00:02:41,599 --> 00:02:45,519
guess what all of these can be used with

00:02:43,680 --> 00:02:47,840
nativescript so all of these can be used

00:02:45,519 --> 00:02:49,680
to develop a native application

00:02:47,840 --> 00:02:52,560
and using the javascript tools that you

00:02:49,680 --> 00:02:52,560
are used to using

00:02:53,200 --> 00:02:55,280
everything you need to find out about

00:02:54,319 --> 00:02:57,200
native script can be found on

00:02:55,280 --> 00:02:59,760
nativescript.org that is your home to

00:02:57,200 --> 00:02:59,760
start with

00:02:59,920 --> 00:03:03,440
so native script gives you native

00:03:01,360 --> 00:03:04,080
performance it is very extensible it's

00:03:03,440 --> 00:03:06,400
very easy

00:03:04,080 --> 00:03:08,560
to pull in new things in a native script

00:03:06,400 --> 00:03:10,080
to do new native experiences

00:03:08,560 --> 00:03:11,440
uh it allows you to develop with what

00:03:10,080 --> 00:03:11,840
you already know as we talked about all

00:03:11,440 --> 00:03:14,319
those

00:03:11,840 --> 00:03:15,120
things you can use um it's cross

00:03:14,319 --> 00:03:19,120
platform

00:03:15,120 --> 00:03:21,599
so it works for both android and ios

00:03:19,120 --> 00:03:23,840
it is free and open source and it has a

00:03:21,599 --> 00:03:25,519
strong backing

00:03:23,840 --> 00:03:27,840
nativescript is actually an incubating

00:03:25,519 --> 00:03:29,120
project under the openjs foundation

00:03:27,840 --> 00:03:30,720
which means they are in the process of

00:03:29,120 --> 00:03:32,720
completing their onboarding to fully

00:03:30,720 --> 00:03:36,239
join the foundation so it's got the

00:03:32,720 --> 00:03:36,239
backing here of openjs

00:03:40,080 --> 00:03:43,840
native script layer so the way this

00:03:42,480 --> 00:03:44,640
works is

00:03:43,840 --> 00:03:47,040
we're going to see here we're going to

00:03:44,640 --> 00:03:49,200
write our app logic in angular

00:03:47,040 --> 00:03:50,480
so the ui will have an html like syntax

00:03:49,200 --> 00:03:54,000
to generate that native ui

00:03:50,480 --> 00:03:57,439
and we'll style it with css so

00:03:54,000 --> 00:03:59,920
how are we going to share our code

00:03:57,439 --> 00:04:01,760
so in angular a component has a

00:03:59,920 --> 00:04:05,760
typescript class

00:04:01,760 --> 00:04:05,760
an html template and a style sheet

00:04:05,920 --> 00:04:10,239
in native script with angular you have a

00:04:08,319 --> 00:04:12,319
component that has a typescript class an

00:04:10,239 --> 00:04:14,879
html like syntax template

00:04:12,319 --> 00:04:15,680
and a style sheet i think you see where

00:04:14,879 --> 00:04:17,280
we're going here

00:04:15,680 --> 00:04:19,120
so if all these things were the same you

00:04:17,280 --> 00:04:20,160
could easily just have two html files

00:04:19,120 --> 00:04:21,440
and two style sheets in the same

00:04:20,160 --> 00:04:22,160
javascript code if everything was the

00:04:21,440 --> 00:04:23,360
same

00:04:22,160 --> 00:04:25,680
and they would be able to be able to

00:04:23,360 --> 00:04:29,840
reuse we're going to go steps beyond

00:04:25,680 --> 00:04:29,840
access not quite what we want

00:04:30,000 --> 00:04:33,199
so let's look at some of the fundamental

00:04:31,680 --> 00:04:34,479
lessons of good

00:04:33,199 --> 00:04:36,960
code sharing so these are from the

00:04:34,479 --> 00:04:40,240
native script tsc technical

00:04:36,960 --> 00:04:42,000
steering committee so

00:04:40,240 --> 00:04:43,600
a lot of words here to keep it brief

00:04:42,000 --> 00:04:45,440
this is their first lesson learns really

00:04:43,600 --> 00:04:47,040
what this is it's about making devs

00:04:45,440 --> 00:04:49,040
lives easier

00:04:47,040 --> 00:04:50,720
share now and easily and make it

00:04:49,040 --> 00:04:53,440
maintain and scale

00:04:50,720 --> 00:04:53,440
easily later

00:04:53,919 --> 00:04:58,320
number two is to use existing tooling

00:04:56,880 --> 00:05:00,320
you know we don't want to integrate

00:04:58,320 --> 00:05:01,440
with something new tooling just to be

00:05:00,320 --> 00:05:04,800
able to do this code sharing we want to

00:05:01,440 --> 00:05:04,800
use the tooling we already have

00:05:05,039 --> 00:05:08,720
number three what this really boils down

00:05:07,600 --> 00:05:10,080
to is we don't want to add new

00:05:08,720 --> 00:05:11,280
extensions or structures just for the

00:05:10,080 --> 00:05:12,800
sake of sharing

00:05:11,280 --> 00:05:14,479
so we shouldn't have a new file

00:05:12,800 --> 00:05:17,840
extension we need just be able to share

00:05:14,479 --> 00:05:20,320
we're using html it should be html

00:05:17,840 --> 00:05:21,600
we also want to follow good standards

00:05:20,320 --> 00:05:22,000
for code organization we don't want to

00:05:21,600 --> 00:05:24,080
add

00:05:22,000 --> 00:05:25,199
extra layers just because it's what

00:05:24,080 --> 00:05:26,880
makes sharing work

00:05:25,199 --> 00:05:29,360
those extra layers are okay if they're

00:05:26,880 --> 00:05:32,160
going to be for the purposes of

00:05:29,360 --> 00:05:34,880
actually organizing our code in a way

00:05:32,160 --> 00:05:34,880
that makes sense

00:05:35,360 --> 00:05:39,120
number four this really comes down to

00:05:36,960 --> 00:05:40,240
will boil down to it's easy to identify

00:05:39,120 --> 00:05:42,400
and distribute

00:05:40,240 --> 00:05:43,840
separately um so it's easy to know

00:05:42,400 --> 00:05:44,880
shared code from non-shared code and

00:05:43,840 --> 00:05:46,160
it's easy to know what you're going to

00:05:44,880 --> 00:05:47,199
do and how you're going to separate

00:05:46,160 --> 00:05:48,639
what's going to be deployed if you're

00:05:47,199 --> 00:05:50,880
deploying your native app versus your

00:05:48,639 --> 00:05:50,880
web

00:05:51,120 --> 00:05:55,039
and finally number five is to use

00:05:53,280 --> 00:05:56,000
fundamental javascript and typescript

00:05:55,039 --> 00:05:58,400
sharing approaches so

00:05:56,000 --> 00:05:59,840
there are already inherently ways to do

00:05:58,400 --> 00:06:03,280
that in javascript typescript so we

00:05:59,840 --> 00:06:03,280
should use those in our approach

00:06:03,680 --> 00:06:09,039
so from this there are some recommended

00:06:06,400 --> 00:06:09,039
solutions

00:06:10,400 --> 00:06:13,759
the first one is narwhal nx dev tools

00:06:12,560 --> 00:06:15,120
with native script nx

00:06:13,759 --> 00:06:16,639
this is center around javascript and

00:06:15,120 --> 00:06:17,919
typescript which means it meets lessons

00:06:16,639 --> 00:06:20,160
one and five

00:06:17,919 --> 00:06:22,240
it uses standard build tooling which

00:06:20,160 --> 00:06:24,720
means meets lesson two

00:06:22,240 --> 00:06:26,080
there's no custom file extensions so

00:06:24,720 --> 00:06:28,400
meets lesson three

00:06:26,080 --> 00:06:29,919
and nx splits into apps and libs to

00:06:28,400 --> 00:06:31,520
identify targets that consume shared

00:06:29,919 --> 00:06:32,000
code so you have your apps for these are

00:06:31,520 --> 00:06:34,479
your

00:06:32,000 --> 00:06:35,360
individual applications for web and

00:06:34,479 --> 00:06:36,639
native

00:06:35,360 --> 00:06:38,240
and then you have your libs for your

00:06:36,639 --> 00:06:39,520
shared code so that's lesson four it's

00:06:38,240 --> 00:06:41,039
easy to tell what is shared and what's

00:06:39,520 --> 00:06:43,680
not

00:06:41,039 --> 00:06:44,720
um in general nx practices can have a

00:06:43,680 --> 00:06:46,400
little bit of a learning curve if you're

00:06:44,720 --> 00:06:48,160
not used to using them

00:06:46,400 --> 00:06:50,080
but once you do get over that everything

00:06:48,160 --> 00:06:52,240
else is just what you already need to

00:06:50,080 --> 00:06:52,240
know

00:06:52,880 --> 00:06:56,400
second is the one that we'll talk more

00:06:54,319 --> 00:06:58,639
about afterwards is

00:06:56,400 --> 00:07:00,240
normal nx dev tools but with n studio x

00:06:58,639 --> 00:07:02,319
plat so this is centered around

00:07:00,240 --> 00:07:04,160
javascript and typescript it uses

00:07:02,319 --> 00:07:06,080
standard build tooling

00:07:04,160 --> 00:07:08,000
there's no custom file extensions and

00:07:06,080 --> 00:07:09,440
because nx it's built on top of nx it

00:07:08,000 --> 00:07:10,880
uses that same splitting between apps

00:07:09,440 --> 00:07:13,199
and libs to identify the target so this

00:07:10,880 --> 00:07:15,199
meets all fiber lessons

00:07:13,199 --> 00:07:16,960
what it does is this builds on top of

00:07:15,199 --> 00:07:19,120
native script nx to scale across more

00:07:16,960 --> 00:07:20,160
paradigms and it provides an opinionated

00:07:19,120 --> 00:07:22,080
architecture

00:07:20,160 --> 00:07:23,599
provided by expat to help avoid common

00:07:22,080 --> 00:07:24,880
pitfalls

00:07:23,599 --> 00:07:26,800
that are learned from cross-platform

00:07:24,880 --> 00:07:28,880
development

00:07:26,800 --> 00:07:30,400
this is developed by n studio has done a

00:07:28,880 --> 00:07:32,639
lot of development in native script and

00:07:30,400 --> 00:07:35,840
a lot of shared development so these are

00:07:32,639 --> 00:07:37,759
opinionated as much as angular is um way

00:07:35,840 --> 00:07:39,680
to do it but some of the common pitfalls

00:07:37,759 --> 00:07:42,000
they've learned in doing exactly what we

00:07:39,680 --> 00:07:45,360
want to do here today

00:07:42,000 --> 00:07:47,919
this is why this is my method of choice

00:07:45,360 --> 00:07:47,919
that i use

00:07:48,160 --> 00:07:51,759
next another option is yarn workspaces

00:07:50,400 --> 00:07:52,879
so this is center on javascript and

00:07:51,759 --> 00:07:54,800
typescript

00:07:52,879 --> 00:07:56,479
uses standard build tooling and no

00:07:54,800 --> 00:07:57,840
custom file extensions

00:07:56,479 --> 00:07:59,759
unfortunately this doesn't meet lesson

00:07:57,840 --> 00:08:00,720
four um you can share and link

00:07:59,759 --> 00:08:02,080
dependencies

00:08:00,720 --> 00:08:03,759
but you're kind of on your own for

00:08:02,080 --> 00:08:05,680
organizational structure there's no out

00:08:03,759 --> 00:08:08,240
of the box deployment and distribution

00:08:05,680 --> 00:08:09,039
for app targets versus shared code um so

00:08:08,240 --> 00:08:10,639
it's got a little bit

00:08:09,039 --> 00:08:12,240
of to go there but if you're already

00:08:10,639 --> 00:08:13,919
using yarn workspaces

00:08:12,240 --> 00:08:15,680
this can be a good solution for you and

00:08:13,919 --> 00:08:18,080
your team

00:08:15,680 --> 00:08:19,199
and the last recommended one is learn so

00:08:18,080 --> 00:08:20,080
this is center on javascript and

00:08:19,199 --> 00:08:22,479
typescript

00:08:20,080 --> 00:08:24,000
uses standard build tooling no custom

00:08:22,479 --> 00:08:25,520
file extensions but again we're missing

00:08:24,000 --> 00:08:27,360
lesson four

00:08:25,520 --> 00:08:29,360
this is a tool for managing javascript

00:08:27,360 --> 00:08:30,720
projects with multiple packages

00:08:29,360 --> 00:08:31,919
again you have your own you're on your

00:08:30,720 --> 00:08:33,120
own for organizational structure and

00:08:31,919 --> 00:08:34,640
there's no out-of-the-box deployment

00:08:33,120 --> 00:08:35,680
distribution for app targets versus

00:08:34,640 --> 00:08:37,519
shared code

00:08:35,680 --> 00:08:38,719
this is more geared towards open source

00:08:37,519 --> 00:08:40,159
library management with no

00:08:38,719 --> 00:08:41,519
extra helpful tooling for workspace

00:08:40,159 --> 00:08:42,479
management but again if you're using

00:08:41,519 --> 00:08:46,000
learn already

00:08:42,479 --> 00:08:46,000
this could be a very good option for you

00:08:46,320 --> 00:08:49,360
let's talk through xplat because it's

00:08:48,000 --> 00:08:52,839
what i use

00:08:49,360 --> 00:08:55,839
xbot is cross-platform tools for nx

00:08:52,839 --> 00:08:58,399
workspaces

00:08:55,839 --> 00:08:59,920
xbot is an added value pack for nx to

00:08:58,399 --> 00:09:02,399
provide app generators and

00:08:59,920 --> 00:09:04,000
optional supporting architecture it

00:09:02,399 --> 00:09:05,040
supports various platforms including

00:09:04,000 --> 00:09:09,839
native script

00:09:05,040 --> 00:09:09,839
web ionic and also electron

00:09:10,000 --> 00:09:14,800
so first to get set up you're going to

00:09:12,720 --> 00:09:16,000
need to set up your native script

00:09:14,800 --> 00:09:17,680
so you can find anything you need to do

00:09:16,000 --> 00:09:18,640
here about docs.natoscript.org we're not

00:09:17,680 --> 00:09:19,839
going to walk through all this first

00:09:18,640 --> 00:09:22,160
you're going to have to have node

00:09:19,839 --> 00:09:24,080
which means you might want nvm or your

00:09:22,160 --> 00:09:25,600
own manager of choice

00:09:24,080 --> 00:09:27,279
you're gonna need the native script cli

00:09:25,600 --> 00:09:28,720
to build nativescript and then you're

00:09:27,279 --> 00:09:30,160
gonna need your app environment if you

00:09:28,720 --> 00:09:31,440
want to develop for android

00:09:30,160 --> 00:09:34,080
you're gonna need android studio and the

00:09:31,440 --> 00:09:36,480
jdk if you're gonna develop for mac

00:09:34,080 --> 00:09:37,360
um for ios you're going to need xcode

00:09:36,480 --> 00:09:38,959
xcode proj

00:09:37,360 --> 00:09:40,800
and cocoapods the steps are all there

00:09:38,959 --> 00:09:42,560
laid out for you exactly what to install

00:09:40,800 --> 00:09:44,240
what commands to run so it's

00:09:42,560 --> 00:09:46,160
very very good documentation on how to

00:09:44,240 --> 00:09:47,360
get set up and running

00:09:46,160 --> 00:09:48,560
i can vouch it it's pretty easy to do

00:09:47,360 --> 00:09:50,640
because i had to recently reset up my

00:09:48,560 --> 00:09:53,200
new machine for this and it was no

00:09:50,640 --> 00:09:53,200
problem at all

00:09:54,560 --> 00:09:57,760
then you need to start with creating an

00:09:56,000 --> 00:09:59,440
nx workspace you're going to use npx

00:09:57,760 --> 00:10:00,880
create annex workspace this will set up

00:09:59,440 --> 00:10:03,920
your workspace with all

00:10:00,880 --> 00:10:05,600
the base structure that you need um

00:10:03,920 --> 00:10:06,959
annex creates a suite of powerful and

00:10:05,600 --> 00:10:09,040
extensive dev tools

00:10:06,959 --> 00:10:10,240
to build an architect at scale so i

00:10:09,040 --> 00:10:11,360
encourage you to if you want to learn

00:10:10,240 --> 00:10:14,240
more about nx

00:10:11,360 --> 00:10:15,839
check out narwhal and rwl um this is

00:10:14,240 --> 00:10:17,200
their tools they're a great company

00:10:15,839 --> 00:10:19,839
and you know you can learn more about

00:10:17,200 --> 00:10:19,839
this there

00:10:20,880 --> 00:10:24,079
next you need to have your cli and

00:10:22,640 --> 00:10:25,839
explain so you're going to install your

00:10:24,079 --> 00:10:27,040
narwhal cli

00:10:25,839 --> 00:10:30,079
which is used for annex you're going to

00:10:27,040 --> 00:10:32,640
need to install the explain package

00:10:30,079 --> 00:10:33,600
you're going to need to add that to this

00:10:32,640 --> 00:10:34,959
app

00:10:33,600 --> 00:10:37,279
and then you're going to generate your

00:10:34,959 --> 00:10:37,600
app um nx generator app is going to set

00:10:37,279 --> 00:10:38,959
up

00:10:37,600 --> 00:10:41,600
individual apps you're going to build

00:10:38,959 --> 00:10:41,600
within this

00:10:43,120 --> 00:10:45,920
so when we want to generate an app

00:10:44,399 --> 00:10:47,360
you're going to give it an app name

00:10:45,920 --> 00:10:48,079
you're going to select the type of app

00:10:47,360 --> 00:10:49,360
to add

00:10:48,079 --> 00:10:50,640
and then it's going to generate the code

00:10:49,360 --> 00:10:52,160
you can see here you have different

00:10:50,640 --> 00:10:55,600
options electron express

00:10:52,160 --> 00:10:57,040
ionic native script nest node react web

00:10:55,600 --> 00:11:00,640
all types here that you're going to see

00:10:57,040 --> 00:11:02,959
when you want to generate an app

00:11:00,640 --> 00:11:04,480
so there's many benefits of using xplat

00:11:02,959 --> 00:11:05,760
first you get a robust structure for

00:11:04,480 --> 00:11:07,040
code sharing

00:11:05,760 --> 00:11:08,959
this also makes it easier to take

00:11:07,040 --> 00:11:11,360
advantage of deeper platform integration

00:11:08,959 --> 00:11:13,200
so when you want to use your web camera

00:11:11,360 --> 00:11:14,560
you can easily integrate how you do it

00:11:13,200 --> 00:11:16,480
on native versus how you're going to do

00:11:14,560 --> 00:11:18,880
it on the web

00:11:16,480 --> 00:11:20,399
it's also built to support large complex

00:11:18,880 --> 00:11:21,839
code bases with sharing so this

00:11:20,399 --> 00:11:23,920
allows you to build those very large

00:11:21,839 --> 00:11:25,519
scales application that can have a lot

00:11:23,920 --> 00:11:28,079
of independencies and different

00:11:25,519 --> 00:11:28,959
pieces with it and code share them very

00:11:28,079 --> 00:11:31,200
easily

00:11:28,959 --> 00:11:33,519
so it's definitely built for working at

00:11:31,200 --> 00:11:33,519
scale

00:11:34,240 --> 00:11:38,320
nx is designed to be using a mono repo

00:11:37,120 --> 00:11:40,399
so if you look here here's

00:11:38,320 --> 00:11:41,920
how it's going to break it down um this

00:11:40,399 --> 00:11:43,760
is not to talk about whether to use or

00:11:41,920 --> 00:11:45,040
not using monorepo this is built

00:11:43,760 --> 00:11:46,399
designed that you can easily have a

00:11:45,040 --> 00:11:48,240
monorepo if you don't want to have a non

00:11:46,399 --> 00:11:50,240
reboot you can still use this

00:11:48,240 --> 00:11:51,760
um but this is all about sharing code

00:11:50,240 --> 00:11:53,440
across the entire organization for reuse

00:11:51,760 --> 00:11:54,959
and a single set of dependencies so

00:11:53,440 --> 00:11:56,560
we're going to add multiple apps you can

00:11:54,959 --> 00:11:58,399
see here i've added

00:11:56,560 --> 00:12:00,000
a native script app called hobbit

00:11:58,399 --> 00:12:00,720
fitness pal and a web app called hobbit

00:12:00,000 --> 00:12:02,639
fitness pal

00:12:00,720 --> 00:12:04,880
and it also adds this end to end for

00:12:02,639 --> 00:12:06,399
testing for me

00:12:04,880 --> 00:12:07,920
you end up with this powerful code

00:12:06,399 --> 00:12:09,440
sharing structure you get the individual

00:12:07,920 --> 00:12:10,160
apps by types and you have the libs

00:12:09,440 --> 00:12:11,519
folder

00:12:10,160 --> 00:12:13,440
where you can see his expat and this is

00:12:11,519 --> 00:12:14,639
going to be all your shared code

00:12:13,440 --> 00:12:16,160
so you're going to have your two places

00:12:14,639 --> 00:12:17,519
you can see your libs this is all the

00:12:16,160 --> 00:12:19,200
shared code

00:12:17,519 --> 00:12:20,880
and then within that we'll see that you

00:12:19,200 --> 00:12:22,959
can have native script and web

00:12:20,880 --> 00:12:24,399
shared in its folders but then you also

00:12:22,959 --> 00:12:26,240
have your actual

00:12:24,399 --> 00:12:28,000
apps so you could have something that's

00:12:26,240 --> 00:12:29,519
shared for web that can be used in

00:12:28,000 --> 00:12:30,720
multiple web apps if you're going with

00:12:29,519 --> 00:12:32,480
the model repo here

00:12:30,720 --> 00:12:34,240
it doesn't have to be one native app one

00:12:32,480 --> 00:12:36,839
web app and shared code

00:12:34,240 --> 00:12:39,360
this can share across multiple

00:12:36,839 --> 00:12:40,959
applications

00:12:39,360 --> 00:12:42,639
so generating code with expat we gotta

00:12:40,959 --> 00:12:44,320
make sure we have the export options

00:12:42,639 --> 00:12:46,480
um so we're gonna look here if we ran

00:12:44,320 --> 00:12:47,839
help with generating a service here

00:12:46,480 --> 00:12:49,920
this is gonna tell us what our options

00:12:47,839 --> 00:12:50,959
are so you give it a name

00:12:49,920 --> 00:12:53,040
you can whether you're gonna target this

00:12:50,959 --> 00:12:54,639
into the feature section you can target

00:12:53,040 --> 00:12:56,160
what projects going to be on what

00:12:54,639 --> 00:12:57,600
platforms

00:12:56,160 --> 00:12:59,440
you want to skip some extra formatting

00:12:57,600 --> 00:13:01,040
files the dry run which is what we'll

00:12:59,440 --> 00:13:03,839
write i'll show you some here to see

00:13:01,040 --> 00:13:04,639
how they come out um skipping nx cache

00:13:03,839 --> 00:13:07,040
which is a

00:13:04,639 --> 00:13:08,560
to avoid building uh rebuilding the same

00:13:07,040 --> 00:13:09,680
code again and again which comes in very

00:13:08,560 --> 00:13:12,000
helpful if you're going to use annex

00:13:09,680 --> 00:13:13,519
cloud so you can use xcloud to build

00:13:12,000 --> 00:13:15,519
your apps without needing to build them

00:13:13,519 --> 00:13:16,800
locally and then obviously we're in the

00:13:15,519 --> 00:13:21,040
help command here to

00:13:16,800 --> 00:13:23,279
show us what options are available

00:13:21,040 --> 00:13:24,800
so let's create a shared service here

00:13:23,279 --> 00:13:27,519
we're going to generate it we have

00:13:24,800 --> 00:13:28,639
nxgenerate and then we specify at n

00:13:27,519 --> 00:13:31,279
studio

00:13:28,639 --> 00:13:31,839
angular service this will generate a

00:13:31,279 --> 00:13:36,000
service

00:13:31,839 --> 00:13:37,839
using the n studio x plot generators

00:13:36,000 --> 00:13:39,199
and if we call we're going to name of

00:13:37,839 --> 00:13:39,760
track we're going to say we want to do a

00:13:39,199 --> 00:13:41,279
dry run

00:13:39,760 --> 00:13:42,959
this will generate as you can see a

00:13:41,279 --> 00:13:45,680
service inside of libs

00:13:42,959 --> 00:13:47,360
x black core so this is where your

00:13:45,680 --> 00:13:49,440
shared services will go

00:13:47,360 --> 00:13:50,800
in your shared code base under xbot and

00:13:49,440 --> 00:13:53,680
this is a core because it's a service

00:13:50,800 --> 00:13:56,720
it's going to be the singleton

00:13:53,680 --> 00:13:56,720
so we're going to do that

00:13:56,800 --> 00:14:00,320
and generate create our own service

00:13:58,240 --> 00:14:02,480
called track overview service for our

00:14:00,320 --> 00:14:03,839
fake application here all it's going to

00:14:02,480 --> 00:14:05,680
do here is have a function

00:14:03,839 --> 00:14:07,519
that is going to get and return an

00:14:05,680 --> 00:14:09,040
observable of these track options with

00:14:07,519 --> 00:14:10,000
just some mock data in our code that's

00:14:09,040 --> 00:14:12,720
going to return these

00:14:10,000 --> 00:14:12,720
this data back

00:14:13,920 --> 00:14:18,079
let's look at something a little more

00:14:15,040 --> 00:14:19,839
complex and generate a component

00:14:18,079 --> 00:14:21,760
in explain first we're going to look at

00:14:19,839 --> 00:14:22,880
using the platforms flag

00:14:21,760 --> 00:14:25,440
so here we're going to generate a

00:14:22,880 --> 00:14:26,320
component and we'll use platforms web

00:14:25,440 --> 00:14:28,480
and native script

00:14:26,320 --> 00:14:29,600
with the flag of crate based drew this

00:14:28,480 --> 00:14:31,839
is going to create

00:14:29,600 --> 00:14:33,360
a shared component for the platform web

00:14:31,839 --> 00:14:33,760
and for the platform data script and

00:14:33,360 --> 00:14:35,040
it's going to

00:14:33,760 --> 00:14:37,120
also create a base component that

00:14:35,040 --> 00:14:40,079
they're going to use

00:14:37,120 --> 00:14:41,519
so we have libs explain features where

00:14:40,079 --> 00:14:42,240
this base component lives then we're

00:14:41,519 --> 00:14:44,160
going to have in

00:14:42,240 --> 00:14:45,600
explain web and explain native script

00:14:44,160 --> 00:14:48,880
we're going to have a meal

00:14:45,600 --> 00:14:50,240
list component html and typescript

00:14:48,880 --> 00:14:52,160
so this is going to generate them for

00:14:50,240 --> 00:14:54,320
the platforms this is saying hey

00:14:52,160 --> 00:14:56,399
create me a component that is for the

00:14:54,320 --> 00:14:59,040
web and for nativescript that will share

00:14:56,399 --> 00:15:01,839
a base component

00:14:59,040 --> 00:15:02,959
next we're going to generate a component

00:15:01,839 --> 00:15:05,360
with the

00:15:02,959 --> 00:15:06,000
projects flag here we can specify that

00:15:05,360 --> 00:15:08,639
we want to

00:15:06,000 --> 00:15:10,240
generate a component for the web hobbit

00:15:08,639 --> 00:15:11,279
fitness pal and the native script hobbit

00:15:10,240 --> 00:15:14,560
fitness pal

00:15:11,279 --> 00:15:15,839
projects for those actual apps this will

00:15:14,560 --> 00:15:18,480
create

00:15:15,839 --> 00:15:19,120
in the app's web hobbit fitness pal on

00:15:18,480 --> 00:15:20,880
the apps

00:15:19,120 --> 00:15:22,880
navigate puppet fitness pal it will

00:15:20,880 --> 00:15:25,199
create components and create their html

00:15:22,880 --> 00:15:27,279
and their typescript files

00:15:25,199 --> 00:15:29,839
you notice here we can't use the

00:15:27,279 --> 00:15:31,600
generate base component

00:15:29,839 --> 00:15:32,880
there's no shared implementation but we

00:15:31,600 --> 00:15:34,240
can change that and we can have a shared

00:15:32,880 --> 00:15:36,880
implementation ourselves

00:15:34,240 --> 00:15:41,040
just not out of the gen the generators

00:15:36,880 --> 00:15:44,399
off the base so here we have

00:15:41,040 --> 00:15:46,000
a home base component this is our home

00:15:44,399 --> 00:15:47,519
component it's always extending this

00:15:46,000 --> 00:15:51,360
base component

00:15:47,519 --> 00:15:52,880
um you see here we have a service

00:15:51,360 --> 00:15:54,240
that we're going to call we're going to

00:15:52,880 --> 00:15:55,920
get those tracking overviews that we

00:15:54,240 --> 00:15:56,800
call we're going to just put that into

00:15:55,920 --> 00:15:57,680
an observable

00:15:56,800 --> 00:16:00,800
that we're going to be able to use the

00:15:57,680 --> 00:16:03,759
async pipe on very very simple component

00:16:00,800 --> 00:16:05,279
very very simple typescript portion you

00:16:03,759 --> 00:16:07,600
can see this is one called home base

00:16:05,279 --> 00:16:10,560
component

00:16:07,600 --> 00:16:10,959
and then i created a home web component

00:16:10,560 --> 00:16:13,680
which

00:16:10,959 --> 00:16:14,639
extends the home base component nothing

00:16:13,680 --> 00:16:16,000
else to it

00:16:14,639 --> 00:16:18,399
doesn't need to do anything else all i

00:16:16,000 --> 00:16:20,240
need to do is get that data so we can

00:16:18,399 --> 00:16:21,519
display it

00:16:20,240 --> 00:16:23,279
displaying it is where it comes into

00:16:21,519 --> 00:16:24,800
place so the home web component has its

00:16:23,279 --> 00:16:26,880
html file that we're going to see here

00:16:24,800 --> 00:16:29,519
our normal html

00:16:26,880 --> 00:16:31,040
and style with our angular components

00:16:29,519 --> 00:16:31,839
here so we see we have a component for

00:16:31,040 --> 00:16:33,839
the header

00:16:31,839 --> 00:16:36,000
that we're adding we have a paragraph

00:16:33,839 --> 00:16:38,160
with some text and then we have a part

00:16:36,000 --> 00:16:40,240
where we're going to loop through those

00:16:38,160 --> 00:16:41,440
tracking overviews with the async

00:16:40,240 --> 00:16:42,240
pipe and display something there and

00:16:41,440 --> 00:16:44,560
we're going to have a button at the

00:16:42,240 --> 00:16:44,560
bottom

00:16:46,320 --> 00:16:49,040
next we're going to create a native

00:16:47,680 --> 00:16:50,480
script home component you notice it's

00:16:49,040 --> 00:16:52,000
the same as the web we're expanding the

00:16:50,480 --> 00:16:53,920
base component and no other change is

00:16:52,000 --> 00:16:55,279
needed the logic is the same there's no

00:16:53,920 --> 00:16:56,800
different logic needed all that this

00:16:55,279 --> 00:16:58,560
home component needs to do is get the

00:16:56,800 --> 00:17:00,639
data and display it

00:16:58,560 --> 00:17:02,240
the displaying is different so to

00:17:00,639 --> 00:17:03,519
display a native script we need to use

00:17:02,240 --> 00:17:04,559
nave script template so we said there's

00:17:03,519 --> 00:17:06,480
an html like

00:17:04,559 --> 00:17:07,839
syntax so you can see here we have tags

00:17:06,480 --> 00:17:10,240
just like we do in html

00:17:07,839 --> 00:17:11,280
but they have different needs so one of

00:17:10,240 --> 00:17:13,360
the things you have to worry about a lot

00:17:11,280 --> 00:17:15,199
in data script development is the layout

00:17:13,360 --> 00:17:16,160
so here you see we're using a doc layout

00:17:15,199 --> 00:17:17,360
to be able to dock something to the

00:17:16,160 --> 00:17:18,799
bottom and the top then we're going to

00:17:17,360 --> 00:17:20,000
use a grid layout

00:17:18,799 --> 00:17:21,760
for our button and we're going to put

00:17:20,000 --> 00:17:23,039
that at the bottom and then we'll have a

00:17:21,760 --> 00:17:26,400
stack layout

00:17:23,039 --> 00:17:27,679
with the header and a label for the text

00:17:26,400 --> 00:17:28,960
that was our paragraph tag and then

00:17:27,679 --> 00:17:29,919
we're going to have a wrap layout which

00:17:28,960 --> 00:17:31,360
we're going to create labels for the

00:17:29,919 --> 00:17:33,200
other parts so this is

00:17:31,360 --> 00:17:34,799
generating a ui that's going to look

00:17:33,200 --> 00:17:35,200
almost exactly the same between the two

00:17:34,799 --> 00:17:36,880
of them

00:17:35,200 --> 00:17:37,840
is the goal here they can be completely

00:17:36,880 --> 00:17:38,799
different they don't have to be anywhere

00:17:37,840 --> 00:17:40,480
close to the same

00:17:38,799 --> 00:17:42,160
but we're generating something similar

00:17:40,480 --> 00:17:44,160
to the other one just in the different

00:17:42,160 --> 00:17:47,840
ways of doing it

00:17:44,160 --> 00:17:47,840
create the same experience

00:17:48,000 --> 00:17:52,160
so getting things running is also quite

00:17:50,160 --> 00:17:54,080
easy to run the web app you just

00:17:52,160 --> 00:17:57,039
run nx serve and give the name of the

00:17:54,080 --> 00:17:57,039
app you want to run

00:17:58,000 --> 00:18:01,760
to run the native app again use nxrun

00:18:00,720 --> 00:18:04,880
the name of the app and

00:18:01,760 --> 00:18:06,400
use colon which platform you run on ios

00:18:04,880 --> 00:18:09,840
or android and then it will

00:18:06,400 --> 00:18:11,760
bring that app up so that's enough

00:18:09,840 --> 00:18:15,840
talking let's actually go ahead and see

00:18:11,760 --> 00:18:15,840
this in action

00:18:17,520 --> 00:18:20,880
so you can see here we have two

00:18:18,880 --> 00:18:22,799
different apps up and running we have

00:18:20,880 --> 00:18:24,640
our web app on the left and our mobile

00:18:22,799 --> 00:18:26,000
app on the right

00:18:24,640 --> 00:18:28,000
you can see we have the same basic thing

00:18:26,000 --> 00:18:30,080
here we have the name

00:18:28,000 --> 00:18:31,440
of the app the text of ensuring you

00:18:30,080 --> 00:18:32,480
don't miss any important meals of the

00:18:31,440 --> 00:18:34,080
day because

00:18:32,480 --> 00:18:35,520
hobbits eat a lot of times of the day so

00:18:34,080 --> 00:18:37,679
we need to make sure we are always

00:18:35,520 --> 00:18:39,679
eating our meals and tracking them

00:18:37,679 --> 00:18:41,120
so that we never miss because yes we had

00:18:39,679 --> 00:18:42,960
breakfast but did you have second

00:18:41,120 --> 00:18:45,919
breakfast did you have 11z's

00:18:42,960 --> 00:18:45,919
let's make sure of it

00:18:46,000 --> 00:18:48,720
so what we're going to do is we're going

00:18:47,200 --> 00:18:50,240
to go here we have this these are our

00:18:48,720 --> 00:18:52,160
two home components we created

00:18:50,240 --> 00:18:54,720
very similar and then we're going to go

00:18:52,160 --> 00:18:56,240
ahead and say okay we want to add

00:18:54,720 --> 00:18:58,320
so if we want to add we got to give the

00:18:56,240 --> 00:18:59,919
camera a moment here to load

00:18:58,320 --> 00:19:02,799
and then we can put a picture up of what

00:18:59,919 --> 00:19:02,799
we had to eat

00:19:03,200 --> 00:19:06,080
give it a name

00:19:07,440 --> 00:19:12,400
and then capture the picture

00:19:11,039 --> 00:19:14,240
and then it'll tell us our meal is

00:19:12,400 --> 00:19:15,520
tracked remembered to stop before

00:19:14,240 --> 00:19:17,280
nightfall

00:19:15,520 --> 00:19:19,840
and we can go onward and it will track

00:19:17,280 --> 00:19:21,440
that meal so that was using

00:19:19,840 --> 00:19:23,679
the code on the web to access the web

00:19:21,440 --> 00:19:25,919
camera on our native mobile app the

00:19:23,679 --> 00:19:27,360
weight access camera is different

00:19:25,919 --> 00:19:30,880
but if we go to track our app we have

00:19:27,360 --> 00:19:32,320
the same thing here we can add a name

00:19:30,880 --> 00:19:34,480
and then when we go to capture meal that

00:19:32,320 --> 00:19:36,720
will go to access the camera

00:19:34,480 --> 00:19:38,320
unfortunately the ios emulator doesn't

00:19:36,720 --> 00:19:39,840
allow me to access the camera right away

00:19:38,320 --> 00:19:41,120
so instead it access the camera roll but

00:19:39,840 --> 00:19:42,320
you'd get that same prompt that you

00:19:41,120 --> 00:19:43,679
normally do of do you want to go the

00:19:42,320 --> 00:19:45,360
camera you want to have

00:19:43,679 --> 00:19:47,440
so we can go ahead and say we just pick

00:19:45,360 --> 00:19:48,799
a picture and then instead of putting

00:19:47,440 --> 00:19:49,760
that other message up there we can just

00:19:48,799 --> 00:19:51,840
use the

00:19:49,760 --> 00:19:53,039
dialog native on the app and say hey pop

00:19:51,840 --> 00:19:54,640
me up a dialog

00:19:53,039 --> 00:19:56,559
you know notification is going to say

00:19:54,640 --> 00:19:58,240
this is the message here's the ok

00:19:56,559 --> 00:19:59,600
message they click ok

00:19:58,240 --> 00:20:01,600
and then they can go ahead and route it

00:19:59,600 --> 00:20:03,360
back to the home so it's great because

00:20:01,600 --> 00:20:05,600
you can use those native integrations

00:20:03,360 --> 00:20:08,720
here

00:20:05,600 --> 00:20:10,400
but still have the shared

00:20:08,720 --> 00:20:11,679
code base of the same idea here we want

00:20:10,400 --> 00:20:14,000
to display these things we want to allow

00:20:11,679 --> 00:20:15,840
you to add a meal and have

00:20:14,000 --> 00:20:17,200
that meal has an image and it has text

00:20:15,840 --> 00:20:18,400
we can do a lot more with it we can make

00:20:17,200 --> 00:20:19,679
selections we can do other cool things

00:20:18,400 --> 00:20:21,039
here but this is just the basic idea of

00:20:19,679 --> 00:20:26,480
what we want to do here

00:20:21,039 --> 00:20:26,480
so how did we go about doing that

00:20:27,200 --> 00:20:31,840
so we had a we created a meal ad based

00:20:29,919 --> 00:20:34,080
component

00:20:31,840 --> 00:20:35,039
which has this function to track a meal

00:20:34,080 --> 00:20:39,039
which knows how to call

00:20:35,039 --> 00:20:40,320
our track service with this meal object

00:20:39,039 --> 00:20:42,240
we're also going to give access to the

00:20:40,320 --> 00:20:45,840
router router

00:20:42,240 --> 00:20:45,840
for kind of that navigation that we saw

00:20:47,520 --> 00:20:50,799
so for the web when we're looking at

00:20:49,440 --> 00:20:53,280
this meal ad

00:20:50,799 --> 00:20:54,159
um we extend that meal ad base component

00:20:53,280 --> 00:20:55,200
and for the web

00:20:54,159 --> 00:20:58,480
we do something a little different here

00:20:55,200 --> 00:21:01,760
so you can see here on the navigator

00:20:58,480 --> 00:21:02,799
um we have navigator media devices and

00:21:01,760 --> 00:21:04,480
this is what we're doing to see that the

00:21:02,799 --> 00:21:06,880
camera is accessible and we're going to

00:21:04,480 --> 00:21:08,240
create these things to put the video in

00:21:06,880 --> 00:21:09,360
there so that preview that we saw here

00:21:08,240 --> 00:21:10,559
this is how we're going to get that

00:21:09,360 --> 00:21:13,840
there

00:21:10,559 --> 00:21:15,039
um and i had already allowed the camera

00:21:13,840 --> 00:21:16,320
to be used but if the first time you

00:21:15,039 --> 00:21:18,320
come to this app it'll actually prompt

00:21:16,320 --> 00:21:19,760
you do you want to allow the web camera

00:21:18,320 --> 00:21:21,919
and then i have this capture image

00:21:19,760 --> 00:21:23,919
function which basically is what's going

00:21:21,919 --> 00:21:25,679
to use that canvas native element

00:21:23,919 --> 00:21:27,120
to draw the image from the camera and

00:21:25,679 --> 00:21:28,640
then save it from there this

00:21:27,120 --> 00:21:30,480
just this is the process of how you can

00:21:28,640 --> 00:21:33,520
use your camera to take a picture

00:21:30,480 --> 00:21:37,039
on the web so this is my

00:21:33,520 --> 00:21:39,919
web way of let's take a picture

00:21:37,039 --> 00:21:44,400
from your web camera in order to save it

00:21:39,919 --> 00:21:45,919
for our meal

00:21:44,400 --> 00:21:47,760
now what this allows is then we can do

00:21:45,919 --> 00:21:48,880
the meal add component for the native

00:21:47,760 --> 00:21:51,039
script

00:21:48,880 --> 00:21:53,679
and here extend that same base meal that

00:21:51,039 --> 00:21:55,120
has that function to say track this meal

00:21:53,679 --> 00:21:56,960
but instead i can do it here with the

00:21:55,120 --> 00:21:59,360
native skip camera way

00:21:56,960 --> 00:22:01,200
and so we have this ability we have this

00:21:59,360 --> 00:22:02,240
requesting permissions to be able to use

00:22:01,200 --> 00:22:04,080
the camera

00:22:02,240 --> 00:22:05,919
to access the pictures and if we've

00:22:04,080 --> 00:22:07,919
already granted it it'll move along

00:22:05,919 --> 00:22:09,440
um and otherwise you can have an error

00:22:07,919 --> 00:22:10,720
if they reject that okay you can't check

00:22:09,440 --> 00:22:11,120
a picture but you can just put the name

00:22:10,720 --> 00:22:12,320
in

00:22:11,120 --> 00:22:13,440
um so you can handle it however you want

00:22:12,320 --> 00:22:15,919
to but the important part here is we

00:22:13,440 --> 00:22:17,240
have the same capture image function

00:22:15,919 --> 00:22:19,200
but instead this is going to call

00:22:17,240 --> 00:22:20,480
camera.take picture which is going to

00:22:19,200 --> 00:22:21,679
give us back

00:22:20,480 --> 00:22:23,360
this and that's what's going to either

00:22:21,679 --> 00:22:24,480
you're selecting it from your files or

00:22:23,360 --> 00:22:25,280
you're going to take the picture from

00:22:24,480 --> 00:22:26,559
the camera

00:22:25,280 --> 00:22:28,240
and it's going to hand that back off to

00:22:26,559 --> 00:22:29,919
the service and then we're going to take

00:22:28,240 --> 00:22:32,000
that we're going to call that same track

00:22:29,919 --> 00:22:34,480
meal function so both of these

00:22:32,000 --> 00:22:35,919
have a text box that had the meal name

00:22:34,480 --> 00:22:38,000
that we captured

00:22:35,919 --> 00:22:39,679
and then takes this image and puts it

00:22:38,000 --> 00:22:41,760
with it and then we'll send that off to

00:22:39,679 --> 00:22:43,120
the track meal function that's from our

00:22:41,760 --> 00:22:45,280
base component

00:22:43,120 --> 00:22:47,520
and then here instead of the other one

00:22:45,280 --> 00:22:49,600
we show some text on the screen here we

00:22:47,520 --> 00:22:51,679
create some alert options and then we

00:22:49,600 --> 00:22:52,320
say dialogues.alert to get that native

00:22:51,679 --> 00:22:54,080
alert

00:22:52,320 --> 00:22:55,840
so it'll look the way it is native on

00:22:54,080 --> 00:22:57,440
android or native on ios to give you

00:22:55,840 --> 00:22:57,840
that what that alert should look like

00:22:57,440 --> 00:22:59,679
and pop

00:22:57,840 --> 00:23:01,280
up and then when they say okay there

00:22:59,679 --> 00:23:04,640
we'll just navigate back to home which

00:23:01,280 --> 00:23:04,640
is where the router comes into play

00:23:07,679 --> 00:23:11,120
this gives you the basics to be able to

00:23:09,280 --> 00:23:12,880
create that one source

00:23:11,120 --> 00:23:14,720
so you can forge it now you have one

00:23:12,880 --> 00:23:15,679
source to rule them all one source to

00:23:14,720 --> 00:23:17,600
find them

00:23:15,679 --> 00:23:18,720
one source to bring them all and in the

00:23:17,600 --> 00:23:23,600
javascript

00:23:18,720 --> 00:23:26,640
bind them

00:23:23,600 --> 00:23:29,120
so go forge your precious create your

00:23:26,640 --> 00:23:30,640
native app create your mobile app

00:23:29,120 --> 00:23:32,720
and combine that with your web app and

00:23:30,640 --> 00:23:34,240
share that code base you know this gives

00:23:32,720 --> 00:23:34,880
you that starting point what you need to

00:23:34,240 --> 00:23:36,640
do and then

00:23:34,880 --> 00:23:38,480
it's up from there it's just up to your

00:23:36,640 --> 00:23:39,679
creativity on how you do there's so many

00:23:38,480 --> 00:23:41,120
great things you can do

00:23:39,679 --> 00:23:43,760
there's other great talks here at the

00:23:41,120 --> 00:23:45,039
openjs conference

00:23:43,760 --> 00:23:47,120
that are also on native script there's

00:23:45,039 --> 00:23:48,640
so many cool things you can do

00:23:47,120 --> 00:23:50,000
beyond this just giving the basis this

00:23:48,640 --> 00:23:51,360
is giving you that framework and then

00:23:50,000 --> 00:23:53,039
you can just go and create from there

00:23:51,360 --> 00:23:54,960
and create your very cool

00:23:53,039 --> 00:23:56,880
angular web app that you want and your

00:23:54,960 --> 00:23:58,320
native script or you can also work

00:23:56,880 --> 00:24:00,080
in the script without any remember all

00:23:58,320 --> 00:24:02,000
those other options are out there

00:24:00,080 --> 00:24:05,840
and allows you to work in what you are

00:24:02,000 --> 00:24:05,840
used to doing

00:24:06,320 --> 00:24:11,440
so as i said i am john is wiki you can

00:24:09,360 --> 00:24:12,640
find me online at kiltedcode

00:24:11,440 --> 00:24:15,520
that is my twitter that's where you'll

00:24:12,640 --> 00:24:17,440
find me on github kill2code.github.oh

00:24:15,520 --> 00:24:19,360
but this code will be available on the

00:24:17,440 --> 00:24:21,520
sides available on my twitter

00:24:19,360 --> 00:24:22,880
on the github you can find this code

00:24:21,520 --> 00:24:24,640
that i created up here

00:24:22,880 --> 00:24:30,799
um and check it out and play with it

00:24:24,640 --> 00:24:30,799

YouTube URL: https://www.youtube.com/watch?v=NZ0LUpcWyUw


