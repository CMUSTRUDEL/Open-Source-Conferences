Title: Upgrading to Fastify 3 - Austin Akers, Microsoft
Publication date: 2021-05-31
Playlist: OpenJS World 2021 - Development
Description: 
	Upgrading to Fastify 3 - Austin Akers, Microsoft

The lessons learned upgrading our codebase from Fastify 2.x to 3.x and how to mitigate migration headaches.

Join the speaker for live Q&A on Slack, channel - #openjs_world-development
Wednesday, June 2 from 14:20 - 14:40 PDT / 23:20 - 23:40 CEST
Thursday, June 3 from 13:00 - 13:20 PDT /  22:00 - 22:20 CEST
Captions: 
	00:00:00,000 --> 00:00:03,280
hello everyone thank you for coming to

00:00:02,159 --> 00:00:05,839
my talk today

00:00:03,280 --> 00:00:07,440
my name is austin akers i am a software

00:00:05,839 --> 00:00:09,840
engineer at microsoft

00:00:07,440 --> 00:00:10,719
and today we'll be discussing upgrading

00:00:09,840 --> 00:00:14,240
to fastify

00:00:10,719 --> 00:00:17,680
3 but more so the lessons learned

00:00:14,240 --> 00:00:19,600
from doing that now

00:00:17,680 --> 00:00:21,039
uh as a brief overview over the course

00:00:19,600 --> 00:00:22,640
of this presentation

00:00:21,039 --> 00:00:24,960
we'll be going over how we upgraded one

00:00:22,640 --> 00:00:26,560
of our back-end services docs render

00:00:24,960 --> 00:00:28,480
which is a service that improves the

00:00:26,560 --> 00:00:29,359
rendering and versatility of what we're

00:00:28,480 --> 00:00:32,719
able to do

00:00:29,359 --> 00:00:34,800
for the microsoft documentation from and

00:00:32,719 --> 00:00:37,440
as i said we upgraded it from fastify

00:00:34,800 --> 00:00:40,559
version 2 to fastify version 3.

00:00:37,440 --> 00:00:43,760
first we'll give a brief backstory and

00:00:40,559 --> 00:00:44,800
disclaimer about our code base then

00:00:43,760 --> 00:00:47,360
we'll go over the five

00:00:44,800 --> 00:00:49,280
lessons and some of these lessons might

00:00:47,360 --> 00:00:50,559
actually sound more like tips

00:00:49,280 --> 00:00:52,399
more so than they are lessons but

00:00:50,559 --> 00:00:54,559
nonetheless five lessons

00:00:52,399 --> 00:00:55,920
during the process of this fastify

00:00:54,559 --> 00:00:57,600
upgrade

00:00:55,920 --> 00:00:58,960
and just as a heads up these five

00:00:57,600 --> 00:01:00,160
lessons are also the heart of the

00:00:58,960 --> 00:01:02,960
presentation

00:01:00,160 --> 00:01:04,640
and last but not least will then end

00:01:02,960 --> 00:01:09,600
with the migration summary

00:01:04,640 --> 00:01:12,000
everyone cool with that awesome

00:01:09,600 --> 00:01:13,119
the backstory now let's start on the

00:01:12,000 --> 00:01:15,200
backstory and

00:01:13,119 --> 00:01:16,560
well for a quick disclaimer for anyone

00:01:15,200 --> 00:01:18,080
watching this talk

00:01:16,560 --> 00:01:20,880
i wanted to talk about our code base

00:01:18,080 --> 00:01:23,360
before the upgrade first off

00:01:20,880 --> 00:01:24,320
before we upgraded to fastify 3 our

00:01:23,360 --> 00:01:26,479
codebase was

00:01:24,320 --> 00:01:28,159
already using typescript certain topics

00:01:26,479 --> 00:01:29,840
or points in this talk

00:01:28,159 --> 00:01:31,439
could prove to be a bit a bit of a

00:01:29,840 --> 00:01:33,200
different experience for you

00:01:31,439 --> 00:01:34,640
if you're not using typescript and

00:01:33,200 --> 00:01:36,400
that's primarily because

00:01:34,640 --> 00:01:38,479
of us taking advantage of the type

00:01:36,400 --> 00:01:40,960
system provided within typescript

00:01:38,479 --> 00:01:41,840
right and fastify itself along with our

00:01:40,960 --> 00:01:45,439
code base

00:01:41,840 --> 00:01:48,479
uh are both written in typescript

00:01:45,439 --> 00:01:50,799
next our code base really isn't

00:01:48,479 --> 00:01:52,479
that large and i say that you know

00:01:50,799 --> 00:01:54,000
relative to an enterprise code base

00:01:52,479 --> 00:01:56,719
right especially

00:01:54,000 --> 00:01:57,840
uh especially that now i honestly would

00:01:56,719 --> 00:02:00,719
have to say that our

00:01:57,840 --> 00:02:02,000
code base would be the equivalent size

00:02:00,719 --> 00:02:05,040
of maybe

00:02:02,000 --> 00:02:08,000
a view twos code base

00:02:05,040 --> 00:02:10,000
maybe reacts but i just wanted to

00:02:08,000 --> 00:02:11,840
highlight that specifically because

00:02:10,000 --> 00:02:14,000
for individuals who may have a larger

00:02:11,840 --> 00:02:15,760
code base the lessons or approaches

00:02:14,000 --> 00:02:17,360
that i'll be discussing over the course

00:02:15,760 --> 00:02:18,239
of this presentation may not be

00:02:17,360 --> 00:02:21,760
applicable

00:02:18,239 --> 00:02:23,760
to your code base and last but not least

00:02:21,760 --> 00:02:25,360
all of our dependencies were current

00:02:23,760 --> 00:02:26,080
while upgrading we didn't have to worry

00:02:25,360 --> 00:02:29,280
much about

00:02:26,080 --> 00:02:31,599
breaking changes uh in other libraries

00:02:29,280 --> 00:02:32,640
which is very nice so that made the

00:02:31,599 --> 00:02:34,879
upgrade less

00:02:32,640 --> 00:02:36,879
complex in comparison to a lot of the

00:02:34,879 --> 00:02:40,239
upgrades i've done in the past on

00:02:36,879 --> 00:02:42,800
other projects now that we've

00:02:40,239 --> 00:02:45,200
covered all those three points let's

00:02:42,800 --> 00:02:45,200
dive in

00:02:45,760 --> 00:02:50,080
lesson one understand the breaking

00:02:49,040 --> 00:02:52,640
changes

00:02:50,080 --> 00:02:53,680
just like with many other libraries and

00:02:52,640 --> 00:02:56,160
frameworks

00:02:53,680 --> 00:02:57,360
major versioning usually comes with well

00:02:56,160 --> 00:02:59,680
breaking changes

00:02:57,360 --> 00:03:01,280
an example would be going from view two

00:02:59,680 --> 00:03:03,200
to view three

00:03:01,280 --> 00:03:04,400
um i was gonna say angular one to

00:03:03,200 --> 00:03:07,440
angular 2

00:03:04,400 --> 00:03:10,800
um and so on right

00:03:07,440 --> 00:03:12,959
um but if you think uh of if you think

00:03:10,800 --> 00:03:14,560
a major versioning upgrade of a library

00:03:12,959 --> 00:03:16,000
framework is going to break many parts

00:03:14,560 --> 00:03:18,000
of your application

00:03:16,000 --> 00:03:19,200
one thing that you need to do is you

00:03:18,000 --> 00:03:20,959
need to document

00:03:19,200 --> 00:03:22,959
the process right document that

00:03:20,959 --> 00:03:23,519
end-to-end process of how you might want

00:03:22,959 --> 00:03:26,799
to

00:03:23,519 --> 00:03:29,519
upgrade and uh tackle that right um

00:03:26,799 --> 00:03:30,840
and within doing so too uh assess the

00:03:29,519 --> 00:03:32,239
possible pain points within your

00:03:30,840 --> 00:03:34,879
application

00:03:32,239 --> 00:03:35,280
for for documenting just about anything

00:03:34,879 --> 00:03:38,000
i

00:03:35,280 --> 00:03:38,319
typically use onenote i know some people

00:03:38,000 --> 00:03:41,200
uh

00:03:38,319 --> 00:03:42,720
use uh notion i've just simply been

00:03:41,200 --> 00:03:45,120
using onenote since uh

00:03:42,720 --> 00:03:46,000
college if probably even high school

00:03:45,120 --> 00:03:48,959
right so i'm just very

00:03:46,000 --> 00:03:49,440
familiar with that but utilize that or

00:03:48,959 --> 00:03:51,760
those

00:03:49,440 --> 00:03:53,360
those applications to map out what parts

00:03:51,760 --> 00:03:55,519
or files of the code base

00:03:53,360 --> 00:03:57,439
that might give you trouble over the

00:03:55,519 --> 00:04:00,480
course of the upgrade

00:03:57,439 --> 00:04:03,680
i also if you don't know already

00:04:00,480 --> 00:04:05,760
fastify has a migration guide so i

00:04:03,680 --> 00:04:07,439
recommend if you haven't already look

00:04:05,760 --> 00:04:09,599
into that migration guide

00:04:07,439 --> 00:04:10,560
that is very helpful and there are very

00:04:09,599 --> 00:04:13,360
you there are

00:04:10,560 --> 00:04:15,280
useful snippets in there that'll show

00:04:13,360 --> 00:04:18,320
distinct examples from version

00:04:15,280 --> 00:04:20,639
festival version two to fastify version

00:04:18,320 --> 00:04:20,639
three

00:04:20,959 --> 00:04:28,080
and lesson two fix the foundation

00:04:24,240 --> 00:04:30,479
and go upwards or in other words

00:04:28,080 --> 00:04:32,320
establish a stable foundation and build

00:04:30,479 --> 00:04:35,360
on top of that

00:04:32,320 --> 00:04:37,120
when i joined the team and microsoft i

00:04:35,360 --> 00:04:38,560
took the initiative after talking to my

00:04:37,120 --> 00:04:39,120
boss you know setting up my environment

00:04:38,560 --> 00:04:40,880
and

00:04:39,120 --> 00:04:42,880
doing what uh and all the onboarding

00:04:40,880 --> 00:04:45,919
stuff of saying hey you know what i want

00:04:42,880 --> 00:04:47,840
to try tackling this major upgrade

00:04:45,919 --> 00:04:49,040
now i initially tried the standard

00:04:47,840 --> 00:04:52,080
approach of

00:04:49,040 --> 00:04:55,120
version bumping and digging into the

00:04:52,080 --> 00:04:58,240
large list of errors and attempting to

00:04:55,120 --> 00:04:59,440
uh tackle that turns out that wasn't the

00:04:58,240 --> 00:05:02,960
best approach

00:04:59,440 --> 00:05:05,360
it was rough i ended up abandoning

00:05:02,960 --> 00:05:07,440
and deleting the branch because it was

00:05:05,360 --> 00:05:10,160
so bad

00:05:07,440 --> 00:05:12,000
which brings me to uh my point right

00:05:10,160 --> 00:05:14,880
this upgrade itself

00:05:12,000 --> 00:05:16,240
took took me several tries so what i

00:05:14,880 --> 00:05:17,199
ended up doing was creating a fresh

00:05:16,240 --> 00:05:20,080
branch

00:05:17,199 --> 00:05:22,000
uh and attempted to find a different

00:05:20,080 --> 00:05:24,560
approach

00:05:22,000 --> 00:05:26,400
so what it initially came up with or

00:05:24,560 --> 00:05:30,320
what we eventually came up with was

00:05:26,400 --> 00:05:32,960
tackling the upgrade incrementally

00:05:30,320 --> 00:05:34,000
so stripping down the app to its basics

00:05:32,960 --> 00:05:37,199
functionality

00:05:34,000 --> 00:05:39,039
fix that foundation and then uh

00:05:37,199 --> 00:05:40,479
tackle the upgrade and well essentially

00:05:39,039 --> 00:05:42,080
increments right so adding on

00:05:40,479 --> 00:05:43,520
other plugins as well and the best part

00:05:42,080 --> 00:05:45,520
about this is that fastify

00:05:43,520 --> 00:05:46,560
made that approach uh easier because of

00:05:45,520 --> 00:05:48,639
its plug-in center

00:05:46,560 --> 00:05:50,320
architecture now as you can see to the

00:05:48,639 --> 00:05:53,600
right there are some plugins

00:05:50,320 --> 00:05:55,440
we've created and um as and as you can

00:05:53,600 --> 00:05:58,560
see here we have render we have

00:05:55,440 --> 00:06:01,600
engine off context content locale

00:05:58,560 --> 00:06:02,800
and error right well what i ended up

00:06:01,600 --> 00:06:04,880
doing was that i narrowed down the

00:06:02,800 --> 00:06:07,919
functionality to a core plug-in

00:06:04,880 --> 00:06:09,600
within our app and went onward from

00:06:07,919 --> 00:06:13,120
there and that core plugin

00:06:09,600 --> 00:06:13,680
was render which then speaking of

00:06:13,120 --> 00:06:16,560
plugins

00:06:13,680 --> 00:06:17,919
brings me to uh my next point inside of

00:06:16,560 --> 00:06:21,199
this point

00:06:17,919 --> 00:06:23,280
the plugin system

00:06:21,199 --> 00:06:25,280
the plug-in system changes were probably

00:06:23,280 --> 00:06:28,319
my favorite

00:06:25,280 --> 00:06:28,880
when upgrading the error messages just

00:06:28,319 --> 00:06:30,880
in general

00:06:28,880 --> 00:06:32,479
especially around plugins were quite

00:06:30,880 --> 00:06:35,440
helpful

00:06:32,479 --> 00:06:36,319
after uh upgrading our functions uh

00:06:35,440 --> 00:06:39,520
after upgrading

00:06:36,319 --> 00:06:41,440
our functions became more concise and

00:06:39,520 --> 00:06:42,720
easier to read and a great example of

00:06:41,440 --> 00:06:44,720
that is if you look here

00:06:42,720 --> 00:06:46,400
to the uh you know this the code

00:06:44,720 --> 00:06:48,800
snippets from version two to

00:06:46,400 --> 00:06:49,840
version three so let's go ahead and take

00:06:48,800 --> 00:06:52,720
a look at that

00:06:49,840 --> 00:06:53,360
right as you can see here from version

00:06:52,720 --> 00:06:56,240
two

00:06:53,360 --> 00:06:57,840
we're exporting a fastified plugin uh

00:06:56,240 --> 00:07:00,880
and as you can see here we have

00:06:57,840 --> 00:07:02,720
three parameters inside of this uh one

00:07:00,880 --> 00:07:04,560
stating that oh this is a pastifi that

00:07:02,720 --> 00:07:06,000
you know the instance within this is a

00:07:04,560 --> 00:07:08,479
fastify instance you know we have

00:07:06,000 --> 00:07:11,360
plug-in options and also next callback

00:07:08,479 --> 00:07:13,120
but if we take a look at version three

00:07:11,360 --> 00:07:15,680
we're able to consolidate that

00:07:13,120 --> 00:07:16,639
uh you know these four lines of code

00:07:15,680 --> 00:07:20,160
into

00:07:16,639 --> 00:07:24,639
one line and that's consolidated into

00:07:20,160 --> 00:07:27,759
the fastify plug-in callback interface

00:07:24,639 --> 00:07:30,319
now uh again uh you know

00:07:27,759 --> 00:07:31,039
so you know this right here is a great

00:07:30,319 --> 00:07:34,160
example

00:07:31,039 --> 00:07:36,319
of uh having you know of our function

00:07:34,160 --> 00:07:37,360
declarations becoming a lot more concise

00:07:36,319 --> 00:07:39,599
from version two

00:07:37,360 --> 00:07:41,520
to version three right and on top of

00:07:39,599 --> 00:07:43,599
this if you look at it it's also easier

00:07:41,520 --> 00:07:45,919
to understand

00:07:43,599 --> 00:07:46,879
now with all of that being stated i

00:07:45,919 --> 00:07:49,120
didn't really just

00:07:46,879 --> 00:07:50,879
come to this uh conclusion uh for the

00:07:49,120 --> 00:07:54,160
most part from looking at the

00:07:50,879 --> 00:07:56,639
errors within the uh with you know

00:07:54,160 --> 00:07:57,199
within the error messages in the cli

00:07:56,639 --> 00:07:59,440
right

00:07:57,199 --> 00:08:01,440
although they were very helpful uh there

00:07:59,440 --> 00:08:03,199
was still a level disconnect on my end

00:08:01,440 --> 00:08:04,560
on being able to truly understand how

00:08:03,199 --> 00:08:06,639
certain things work

00:08:04,560 --> 00:08:09,120
in the upgrade which brings me to my

00:08:06,639 --> 00:08:10,800
next lesson which is also a great point

00:08:09,120 --> 00:08:14,400
of reference as well

00:08:10,800 --> 00:08:17,759
lesson three referencing the fastify

00:08:14,400 --> 00:08:21,919
test cases now

00:08:17,759 --> 00:08:23,680
as i stated before the error messages um

00:08:21,919 --> 00:08:25,199
contained only a certain amount of

00:08:23,680 --> 00:08:27,199
information while it was very

00:08:25,199 --> 00:08:29,039
helpful i then tried to go out and

00:08:27,199 --> 00:08:32,080
reference the migration guide

00:08:29,039 --> 00:08:35,519
uh as great as that was as well too it

00:08:32,080 --> 00:08:38,159
also still had limited information

00:08:35,519 --> 00:08:39,760
and so what i ended up having had to do

00:08:38,159 --> 00:08:42,560
what i ended up

00:08:39,760 --> 00:08:43,680
doing was going inside the fastify

00:08:42,560 --> 00:08:46,880
source code

00:08:43,680 --> 00:08:49,360
and looking at the test cases that

00:08:46,880 --> 00:08:50,000
that implement things that i felt as

00:08:49,360 --> 00:08:52,800
though i

00:08:50,000 --> 00:08:53,519
may need or that you know replaced a

00:08:52,800 --> 00:08:55,760
certain

00:08:53,519 --> 00:08:57,200
functions or certain interfaces within

00:08:55,760 --> 00:08:59,519
uh version two

00:08:57,200 --> 00:09:01,120
uh you know for version three and a

00:08:59,519 --> 00:09:02,399
great example of that again if you want

00:09:01,120 --> 00:09:04,959
to take a look at this

00:09:02,399 --> 00:09:06,560
uh dive into the fastify source code

00:09:04,959 --> 00:09:10,240
inside the test folder

00:09:06,560 --> 00:09:13,279
look for plugin dot test uh hyphen d dot

00:09:10,240 --> 00:09:15,360
you know ts and what you'll see here is

00:09:13,279 --> 00:09:17,600
uh several things we have as you can see

00:09:15,360 --> 00:09:21,360
here you know at the bottom

00:09:17,600 --> 00:09:24,560
you'll find a testify plug-in async

00:09:21,360 --> 00:09:27,920
test case and you'll also find a fastify

00:09:24,560 --> 00:09:30,880
plug-in callback test case as well

00:09:27,920 --> 00:09:31,760
and these right here these test cases

00:09:30,880 --> 00:09:35,279
provided

00:09:31,760 --> 00:09:37,839
a skeleton for

00:09:35,279 --> 00:09:39,120
the functions that i uh you know for my

00:09:37,839 --> 00:09:40,880
functions for

00:09:39,120 --> 00:09:42,240
version three you know for our code base

00:09:40,880 --> 00:09:43,040
when we were converting it to version

00:09:42,240 --> 00:09:46,240
three

00:09:43,040 --> 00:09:49,440
which is really nice and to

00:09:46,240 --> 00:09:51,279
really put that into an example

00:09:49,440 --> 00:09:52,720
as you can see here what we're doing is

00:09:51,279 --> 00:09:54,160
that we're going to take that

00:09:52,720 --> 00:09:55,839
that test case or like you know that

00:09:54,160 --> 00:09:57,120
snippet of code which is the test plugin

00:09:55,839 --> 00:09:59,200
async which is

00:09:57,120 --> 00:10:01,760
implementing a you know as i said just

00:09:59,200 --> 00:10:03,120
implementing the fastify plug-in async

00:10:01,760 --> 00:10:05,760
interface and we're going to go ahead

00:10:03,120 --> 00:10:09,360
and try to convert our version to

00:10:05,760 --> 00:10:12,800
a code snippet into uh our version 3.

00:10:09,360 --> 00:10:14,800
now the thought process that i took into

00:10:12,800 --> 00:10:16,800
uh you know converting that version to

00:10:14,800 --> 00:10:18,399
uh you know stuff within our version 2

00:10:16,800 --> 00:10:20,560
codebase into version three was

00:10:18,399 --> 00:10:21,839
specifically around plugins was

00:10:20,560 --> 00:10:24,160
establishing on

00:10:21,839 --> 00:10:25,279
o is it a plugin right now as you can

00:10:24,160 --> 00:10:28,880
see here to the left

00:10:25,279 --> 00:10:31,279
we have uh site routes which is a

00:10:28,880 --> 00:10:32,240
plugin as you'll see and it's

00:10:31,279 --> 00:10:35,360
asynchronous

00:10:32,240 --> 00:10:35,760
right and the instance on it is happens

00:10:35,360 --> 00:10:37,519
to be

00:10:35,760 --> 00:10:38,880
an instance of fastified you know

00:10:37,519 --> 00:10:41,600
inheritance fastify

00:10:38,880 --> 00:10:43,440
instance right so what do we what can we

00:10:41,600 --> 00:10:43,839
and you know what can we uh infer from

00:10:43,440 --> 00:10:46,240
that

00:10:43,839 --> 00:10:47,600
well this right here happens to be a

00:10:46,240 --> 00:10:51,040
fastify plug-in

00:10:47,600 --> 00:10:53,200
that is a synchronous and

00:10:51,040 --> 00:10:54,560
if we look at our version three let's go

00:10:53,200 --> 00:10:55,920
ahead and take that information that we

00:10:54,560 --> 00:10:58,640
learned and implement that

00:10:55,920 --> 00:11:00,000
right so looking at that test case above

00:10:58,640 --> 00:11:02,480
as we can see here is that

00:11:00,000 --> 00:11:03,839
what we've learned is that we now have a

00:11:02,480 --> 00:11:06,320
fastify plug-in

00:11:03,839 --> 00:11:08,320
that is also that is asynchronous and

00:11:06,320 --> 00:11:09,040
for version three we did exactly that

00:11:08,320 --> 00:11:11,920
right

00:11:09,040 --> 00:11:12,560
so we now converted that version to

00:11:11,920 --> 00:11:15,440
cloud

00:11:12,560 --> 00:11:16,399
into uh into version three and we can

00:11:15,440 --> 00:11:20,240
see that

00:11:16,399 --> 00:11:22,640
we are using fastify plug-in async so

00:11:20,240 --> 00:11:24,640
uh certain uh cert just a certain

00:11:22,640 --> 00:11:26,399
thought process that went behind this

00:11:24,640 --> 00:11:28,160
and if you really sometimes even just

00:11:26,399 --> 00:11:28,640
talking out loud and trying to figure

00:11:28,160 --> 00:11:30,480
out

00:11:28,640 --> 00:11:33,040
figuring out a lot of this really comes

00:11:30,480 --> 00:11:35,839
to help in regards to

00:11:33,040 --> 00:11:37,200
uh you know in regards to the upgrade as

00:11:35,839 --> 00:11:39,040
well too

00:11:37,200 --> 00:11:40,399
but nonetheless the test cases proved to

00:11:39,040 --> 00:11:42,720
be very helpful

00:11:40,399 --> 00:11:43,440
and that was also a point of reference

00:11:42,720 --> 00:11:46,720
that i

00:11:43,440 --> 00:11:50,800
went to a lot over the course

00:11:46,720 --> 00:11:50,800
of the version 2 diversion 3 upgrade

00:11:52,160 --> 00:11:58,880
next lesson 4 now

00:11:56,240 --> 00:11:59,760
i always want to say this but typescript

00:11:58,880 --> 00:12:03,680
typescript

00:11:59,760 --> 00:12:06,480
typescript i cannot tell you enough how

00:12:03,680 --> 00:12:06,800
having our codebase in typescript made

00:12:06,480 --> 00:12:09,839
this

00:12:06,800 --> 00:12:11,600
upgrade substantially substantially less

00:12:09,839 --> 00:12:12,079
complex in comparison to what it

00:12:11,600 --> 00:12:15,360
probably

00:12:12,079 --> 00:12:17,519
would have been uh if we were using just

00:12:15,360 --> 00:12:18,399
vanilla javascript and that's primarily

00:12:17,519 --> 00:12:21,200
because of the

00:12:18,399 --> 00:12:21,920
typed the type system now just in

00:12:21,200 --> 00:12:24,079
general

00:12:21,920 --> 00:12:24,959
i'm sure you can probably go online and

00:12:24,079 --> 00:12:28,079
find

00:12:24,959 --> 00:12:29,680
hundreds of talks about typescript and

00:12:28,079 --> 00:12:31,920
about how amazing it is

00:12:29,680 --> 00:12:33,040
but for me specifically especially when

00:12:31,920 --> 00:12:35,279
it came to

00:12:33,040 --> 00:12:36,160
integrating myself uh inside the code

00:12:35,279 --> 00:12:39,279
base

00:12:36,160 --> 00:12:41,600
but also uh you know just in general um

00:12:39,279 --> 00:12:42,480
typescript is honestly expedited my

00:12:41,600 --> 00:12:46,000
workflow

00:12:42,480 --> 00:12:47,839
right and over the course of

00:12:46,000 --> 00:12:49,519
you know these uh you know over the

00:12:47,839 --> 00:12:53,120
course of the upgrade as well uh

00:12:49,519 --> 00:12:54,880
because of typescript i was able to

00:12:53,120 --> 00:12:56,880
just i was able to better dissect a lot

00:12:54,880 --> 00:12:58,480
of the errors that i was getting right a

00:12:56,880 --> 00:13:00,320
lot of these different error messages

00:12:58,480 --> 00:13:01,920
and be able to dive in look at a lot of

00:13:00,320 --> 00:13:04,160
the different interfaces

00:13:01,920 --> 00:13:04,959
and types and being able to better

00:13:04,160 --> 00:13:08,320
understand

00:13:04,959 --> 00:13:11,440
what exactly is going on at the heart of

00:13:08,320 --> 00:13:13,040
these errors but also within fastify as

00:13:11,440 --> 00:13:13,680
well considering that they converted

00:13:13,040 --> 00:13:17,279
their

00:13:13,680 --> 00:13:19,600
code base into typescript and

00:13:17,279 --> 00:13:21,200
last but not least it also lowered the

00:13:19,600 --> 00:13:21,839
bell curve right for me to be able to

00:13:21,200 --> 00:13:23,839
dive in

00:13:21,839 --> 00:13:26,399
and to effectively contribute into the

00:13:23,839 --> 00:13:27,360
code base because i was able to better

00:13:26,399 --> 00:13:29,760
understand

00:13:27,360 --> 00:13:31,519
what exactly was going on inside our

00:13:29,760 --> 00:13:34,399
code base

00:13:31,519 --> 00:13:35,680
so as we have here is just a snippet of

00:13:34,399 --> 00:13:37,519
uh just a part of the uh

00:13:35,680 --> 00:13:39,120
fastify code base you know just for

00:13:37,519 --> 00:13:42,399
loggers and interface

00:13:39,120 --> 00:13:42,399
uh logger interface so

00:13:43,680 --> 00:13:50,720
now uh last but not least

00:13:47,199 --> 00:13:55,199
we also have lesson five which

00:13:50,720 --> 00:13:58,240
i cannot say this more than enough

00:13:55,199 --> 00:14:01,120
having uh test cases right in fact just

00:13:58,240 --> 00:14:04,639
having test coverage in general

00:14:01,120 --> 00:14:08,320
turned out to be exceedingly helpful

00:14:04,639 --> 00:14:10,959
over the course of the upgrade now uh

00:14:08,320 --> 00:14:12,240
again our uh you know the test coverage

00:14:10,959 --> 00:14:15,519
uh inside our

00:14:12,240 --> 00:14:20,000
inside docs render happened to be around

00:14:15,519 --> 00:14:21,920
70 to um 80 we had in regards to uh

00:14:20,000 --> 00:14:23,680
coverage right so we had quite a quite a

00:14:21,920 --> 00:14:25,680
bit of test cases right and just

00:14:23,680 --> 00:14:27,279
overall although the test coverage

00:14:25,680 --> 00:14:29,680
itself wasn't 100

00:14:27,279 --> 00:14:31,199
um that's improving right hopefully you

00:14:29,680 --> 00:14:34,480
hope to get to 100 percent

00:14:31,199 --> 00:14:37,760
uh test coverage inside your app but

00:14:34,480 --> 00:14:40,240
70 to 80 percent uh was still very um

00:14:37,760 --> 00:14:41,440
helpful now and just in general right

00:14:40,240 --> 00:14:44,160
having test cases

00:14:41,440 --> 00:14:46,560
and especially during um major upgrades

00:14:44,160 --> 00:14:48,560
like these with breaking changes

00:14:46,560 --> 00:14:50,720
being able to have a point of reference

00:14:48,560 --> 00:14:53,519
and also being able to check

00:14:50,720 --> 00:14:54,000
uh how functionality was before and also

00:14:53,519 --> 00:14:57,120
the

00:14:54,000 --> 00:14:59,040
and also after the upgrade uh instilled

00:14:57,120 --> 00:15:00,959
a lot more confidence

00:14:59,040 --> 00:15:02,880
within the changes that were being made

00:15:00,959 --> 00:15:04,320
within our application right

00:15:02,880 --> 00:15:06,160
because the last thing you want to have

00:15:04,320 --> 00:15:08,000
are uh just

00:15:06,160 --> 00:15:10,320
you know having some sort of errors uh

00:15:08,000 --> 00:15:10,800
that are that there's some silent errors

00:15:10,320 --> 00:15:13,120
or just

00:15:10,800 --> 00:15:13,920
errors in general that you just you know

00:15:13,120 --> 00:15:16,399
that will

00:15:13,920 --> 00:15:17,279
essentially make it just slightly

00:15:16,399 --> 00:15:19,360
that'll essentially

00:15:17,279 --> 00:15:20,880
affect functionality or turn something

00:15:19,360 --> 00:15:23,120
to be slightly off right

00:15:20,880 --> 00:15:23,920
and last but not least there was also a

00:15:23,120 --> 00:15:27,040
level of

00:15:23,920 --> 00:15:29,839
consistency right so

00:15:27,040 --> 00:15:30,320
um again as i said it before there was

00:15:29,839 --> 00:15:32,880
that

00:15:30,320 --> 00:15:34,079
point of reference of functionality

00:15:32,880 --> 00:15:37,120
being able to know

00:15:34,079 --> 00:15:38,560
before and after hey this is what our

00:15:37,120 --> 00:15:40,639
application

00:15:38,560 --> 00:15:42,959
you know how it worked before the

00:15:40,639 --> 00:15:45,839
upgrade and we're wanting that same

00:15:42,959 --> 00:15:47,759
end result uh to happen so we aren't

00:15:45,839 --> 00:15:50,399
compromising you know compromising our

00:15:47,759 --> 00:15:52,000
end user experience uh but having that

00:15:50,399 --> 00:15:54,320
level of consistency

00:15:52,000 --> 00:15:55,040
and being able to check that uh you know

00:15:54,320 --> 00:15:57,600
before

00:15:55,040 --> 00:15:58,320
um and also after the upgrade proved to

00:15:57,600 --> 00:16:02,079
be

00:15:58,320 --> 00:16:04,160
a lot more uh just

00:16:02,079 --> 00:16:06,240
a lot more it just made us feel a lot

00:16:04,160 --> 00:16:08,959
more confident in regards to

00:16:06,240 --> 00:16:09,680
uh you know the code base after the

00:16:08,959 --> 00:16:12,880
upgrade

00:16:09,680 --> 00:16:15,279
and if you haven't already i recommend

00:16:12,880 --> 00:16:16,720
you uh well hey honestly the best time

00:16:15,279 --> 00:16:18,320
to get started is now

00:16:16,720 --> 00:16:19,920
but if you're looking for a testing

00:16:18,320 --> 00:16:23,199
library what we use

00:16:19,920 --> 00:16:24,800
for docs render is node tap or better

00:16:23,199 --> 00:16:28,240
yet

00:16:24,800 --> 00:16:29,839
node test anything protocol is

00:16:28,240 --> 00:16:31,279
what i'm remembering it as i'd have to

00:16:29,839 --> 00:16:32,560
check take a look but we're using

00:16:31,279 --> 00:16:34,560
nodetap

00:16:32,560 --> 00:16:36,079
um so if you aren't familiar with that

00:16:34,560 --> 00:16:38,480
search it up i recommend

00:16:36,079 --> 00:16:39,839
it i really really like it and what we

00:16:38,480 --> 00:16:43,440
have here at the very bottom

00:16:39,839 --> 00:16:46,399
as i said insert this code coverage a a

00:16:43,440 --> 00:16:47,519
test case uh tdd test driven development

00:16:46,399 --> 00:16:49,839
is pretty awesome

00:16:47,519 --> 00:16:50,720
so if you aren't doing it you should

00:16:49,839 --> 00:16:55,199
definitely do it

00:16:50,720 --> 00:16:58,480
okay now with all those five lessons

00:16:55,199 --> 00:17:01,199
covered uh the migration uh

00:16:58,480 --> 00:17:01,519
well at the end it was successful right

00:17:01,199 --> 00:17:03,920
but

00:17:01,519 --> 00:17:05,600
what exactly made that migration or made

00:17:03,920 --> 00:17:08,640
our migration successful

00:17:05,600 --> 00:17:10,799
well first off i mean we upgraded to

00:17:08,640 --> 00:17:12,959
fast by three

00:17:10,799 --> 00:17:14,559
virtual clap i know i love the

00:17:12,959 --> 00:17:17,600
excitement everyone

00:17:14,559 --> 00:17:19,439
right second there were no console

00:17:17,600 --> 00:17:22,640
errors

00:17:19,439 --> 00:17:25,839
and that's always a great thing

00:17:22,640 --> 00:17:26,880
third our code came out to beco our code

00:17:25,839 --> 00:17:29,840
came out to be

00:17:26,880 --> 00:17:30,880
a lot cleaner and even more concise than

00:17:29,840 --> 00:17:34,720
what it was

00:17:30,880 --> 00:17:35,120
uh in version two of what we're using

00:17:34,720 --> 00:17:38,640
for

00:17:35,120 --> 00:17:40,799
fastify right and as we saw earlier and

00:17:38,640 --> 00:17:42,799
in one of the lessons we saw how we were

00:17:40,799 --> 00:17:46,559
able to consolidate four lines of code

00:17:42,799 --> 00:17:47,919
into really one and i said as you saw

00:17:46,559 --> 00:17:48,799
there was probably two and that's

00:17:47,919 --> 00:17:50,320
because of the

00:17:48,799 --> 00:17:52,559
word wrap but it was essentially

00:17:50,320 --> 00:17:56,080
consolidating four lines of code

00:17:52,559 --> 00:17:58,640
into one line and so that conciseness

00:17:56,080 --> 00:17:59,440
made it and uh you know and cleanliness

00:17:58,640 --> 00:18:02,320
made it

00:17:59,440 --> 00:18:04,400
made it much much easier to read and

00:18:02,320 --> 00:18:07,120
also reference back to whenever

00:18:04,400 --> 00:18:08,880
it was necessary when going over the

00:18:07,120 --> 00:18:11,840
course of the upgrade

00:18:08,880 --> 00:18:12,720
and also another thing uh many of our

00:18:11,840 --> 00:18:16,720
test cases

00:18:12,720 --> 00:18:18,960
didn't break now granted some of them or

00:18:16,720 --> 00:18:20,960
quite a few of them needed to just have

00:18:18,960 --> 00:18:22,240
some minor tweaks and that's because of

00:18:20,960 --> 00:18:24,160
the upgrade itself right

00:18:22,240 --> 00:18:25,440
when you're mocking certain things but

00:18:24,160 --> 00:18:27,120
for the most part a lot of our test

00:18:25,440 --> 00:18:29,600
cases didn't break which is a good thing

00:18:27,120 --> 00:18:30,559
which goes to show us that our

00:18:29,600 --> 00:18:34,160
functionality

00:18:30,559 --> 00:18:34,720
remained uh if not similar the exact

00:18:34,160 --> 00:18:37,760
same

00:18:34,720 --> 00:18:40,799
before but also after the upgrade

00:18:37,760 --> 00:18:42,559
with some minor exceptions and last but

00:18:40,799 --> 00:18:45,679
not least what

00:18:42,559 --> 00:18:47,440
in my opinion is a determining factor

00:18:45,679 --> 00:18:48,960
the main determining factor on whether a

00:18:47,440 --> 00:18:53,840
migration was successful

00:18:48,960 --> 00:18:53,840
is the deployment and our deployment was

00:18:54,840 --> 00:18:59,440
smooth

00:18:56,000 --> 00:19:02,160
now for recommendations uh again

00:18:59,440 --> 00:19:03,919
uh after listening and you know looking

00:19:02,160 --> 00:19:05,919
at the migration summary going over

00:19:03,919 --> 00:19:07,440
our five lessons my recommendation for

00:19:05,919 --> 00:19:10,400
anyone wanting to upgrade from

00:19:07,440 --> 00:19:11,039
version two to version three first off

00:19:10,400 --> 00:19:13,360
document

00:19:11,039 --> 00:19:14,320
those changes right document the changes

00:19:13,360 --> 00:19:16,480
of

00:19:14,320 --> 00:19:17,440
and research those changes that uh you

00:19:16,480 --> 00:19:20,880
know that

00:19:17,440 --> 00:19:23,120
might prove to be very um you know

00:19:20,880 --> 00:19:24,000
intriguing or uh that might prove to be

00:19:23,120 --> 00:19:26,320
a pain

00:19:24,000 --> 00:19:27,360
over the course of that version to the

00:19:26,320 --> 00:19:30,720
version through upgrade

00:19:27,360 --> 00:19:33,360
and also assess your code base right

00:19:30,720 --> 00:19:35,440
next work from bottom to top so

00:19:33,360 --> 00:19:37,840
establish a firm foundation

00:19:35,440 --> 00:19:39,280
and build on top of that right now what

00:19:37,840 --> 00:19:42,000
we had initially as

00:19:39,280 --> 00:19:44,160
you saw was render was our core plug-in

00:19:42,000 --> 00:19:46,720
it was the heart of the application

00:19:44,160 --> 00:19:47,360
and being able to build up from there uh

00:19:46,720 --> 00:19:49,679
made

00:19:47,360 --> 00:19:51,520
everything much much easier and as we

00:19:49,679 --> 00:19:54,640
started building on top of

00:19:51,520 --> 00:19:56,320
render you know we were able to have

00:19:54,640 --> 00:19:58,320
even more points of reference

00:19:56,320 --> 00:19:59,360
but also uh having that strong

00:19:58,320 --> 00:20:02,480
foundation

00:19:59,360 --> 00:20:04,720
made the upgrade go a lot smoother and

00:20:02,480 --> 00:20:06,720
last and then another thing as well make

00:20:04,720 --> 00:20:09,360
sure you reference the fastify source

00:20:06,720 --> 00:20:12,159
code and also the test cases

00:20:09,360 --> 00:20:13,039
and and this goes for almost anyone or

00:20:12,159 --> 00:20:16,159
anything you know

00:20:13,039 --> 00:20:16,480
anyone who's wanting to find ways or you

00:20:16,159 --> 00:20:18,640
know

00:20:16,480 --> 00:20:20,880
when doing a migration especially a

00:20:18,640 --> 00:20:22,960
major migration wanting to

00:20:20,880 --> 00:20:25,280
better understand the ins and outs of

00:20:22,960 --> 00:20:25,760
what exactly is going on and how my code

00:20:25,280 --> 00:20:28,159
base

00:20:25,760 --> 00:20:29,360
is affected but also utilizing that as a

00:20:28,159 --> 00:20:32,880
point of reference

00:20:29,360 --> 00:20:36,159
for creating or you know essentially

00:20:32,880 --> 00:20:38,720
creating skeletons for a lot of your

00:20:36,159 --> 00:20:39,360
new functions that or that you'll be

00:20:38,720 --> 00:20:42,400
using

00:20:39,360 --> 00:20:45,440
right and another thing that

00:20:42,400 --> 00:20:46,400
again i recommend everyone does is take

00:20:45,440 --> 00:20:49,039
advantage of

00:20:46,400 --> 00:20:50,880
typescript if you haven't already please

00:20:49,039 --> 00:20:54,480
please do it

00:20:50,880 --> 00:20:56,159
typescript is phenomenal and again if it

00:20:54,480 --> 00:20:57,200
wasn't for our codebase being in

00:20:56,159 --> 00:20:58,880
typescript i

00:20:57,200 --> 00:21:00,960
do wholeheartedly believe that our

00:20:58,880 --> 00:21:03,520
upgrade would prove to be

00:21:00,960 --> 00:21:05,360
a bit more difficult than what it uh

00:21:03,520 --> 00:21:08,960
already you know than what it really

00:21:05,360 --> 00:21:10,960
was or could have been right so again

00:21:08,960 --> 00:21:12,559
typescript type subscribe script and

00:21:10,960 --> 00:21:16,080
last but not least

00:21:12,559 --> 00:21:20,000
uh having great test coverage

00:21:16,080 --> 00:21:20,799
in your application now test cases are

00:21:20,000 --> 00:21:22,880
amazing

00:21:20,799 --> 00:21:24,240
but again we were able to have roughly

00:21:22,880 --> 00:21:27,440
around 70 to

00:21:24,240 --> 00:21:30,720
80 percent of our app just you know

00:21:27,440 --> 00:21:33,360
being covered in tests so test coverages

00:21:30,720 --> 00:21:35,760
or test cases are a great way to make

00:21:33,360 --> 00:21:38,720
sure that your um

00:21:35,760 --> 00:21:40,640
that your application uh you know has a

00:21:38,720 --> 00:21:42,159
specific functionality so before and

00:21:40,640 --> 00:21:43,919
after the upgrade having that level of

00:21:42,159 --> 00:21:44,240
consistency but also having that source

00:21:43,919 --> 00:21:47,360
of

00:21:44,240 --> 00:21:49,600
truth to reference to make sure that

00:21:47,360 --> 00:21:51,120
nothing breaks silently within your

00:21:49,600 --> 00:21:54,799
application

00:21:51,120 --> 00:21:54,799
is fantastic in my opinion

00:21:55,360 --> 00:21:58,559
so if you enjoyed this talk let's

00:21:57,520 --> 00:22:02,120
connect

00:21:58,559 --> 00:22:03,440
my twitter is my twitter handler is what

00:22:02,120 --> 00:22:05,280
tweetmonster999

00:22:03,440 --> 00:22:07,120
uh if you have any questions again if

00:22:05,280 --> 00:22:08,720
you don't want to connect on twitter

00:22:07,120 --> 00:22:10,799
connect with me on linkedin or better

00:22:08,720 --> 00:22:12,720
yet if you think i'm pretty cool which

00:22:10,799 --> 00:22:14,159
you know i think i kind of am right feel

00:22:12,720 --> 00:22:17,440
free to follow me on

00:22:14,159 --> 00:22:18,960
github my github name is b-boy acres

00:22:17,440 --> 00:22:20,559
thank you again for coming to this talk

00:22:18,960 --> 00:22:23,600
i hope you enjoyed it

00:22:20,559 --> 00:22:25,440
and i hope everyone is enjoying uh

00:22:23,600 --> 00:22:27,440
not only just this conference right a

00:22:25,440 --> 00:22:30,720
lot of amazing speakers out here

00:22:27,440 --> 00:22:32,640
and i hope that you're able to uh well

00:22:30,720 --> 00:22:34,400
actually tweet me if you find a

00:22:32,640 --> 00:22:35,760
really awesome point or something

00:22:34,400 --> 00:22:38,320
interesting that you uh

00:22:35,760 --> 00:22:39,360
just that you found out or or something

00:22:38,320 --> 00:22:40,320
you've learned throughout the course of

00:22:39,360 --> 00:22:42,320
this uh

00:22:40,320 --> 00:22:44,240
you know this conference so again thank

00:22:42,320 --> 00:22:47,360
you i hope you all have a

00:22:44,240 --> 00:22:48,799
wonderful morning afternoon and evening

00:22:47,360 --> 00:22:54,240
since we're all around the world

00:22:48,799 --> 00:22:54,240

YouTube URL: https://www.youtube.com/watch?v=WlBRq5aak_o


