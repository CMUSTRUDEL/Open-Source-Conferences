Title: Scaling Accessibility in the Age of Components - Ayesha Mazumdar, Optimizely
Publication date: 2020-05-11
Playlist: Node + JS Interactive 2019
Description: 
	Scaling Accessibility in the Age of Components - Ayesha Mazumdar, Optimizely
Speakers: Ayesha Mazumdar
We often build component libraries to improve consistency, collaboration, and customization for a given product. But what if a component library could also scale accessibility across the entire organization? Building accessible components can help distribute responsibility across all of design and engineering, without needing everyone to be an expert on the nitty-gritty details. In this session, we'll go through specific component examples and use cases to help you and your team contribute to a better, more inclusive web.
Captions: 
	00:00:00,000 --> 00:00:07,010
I actually hit 12 o'clock and everyone

00:00:04,110 --> 00:00:10,230
hear me although in the back - yay

00:00:07,010 --> 00:00:11,519
awesome thank you all for joining I hope

00:00:10,230 --> 00:00:14,460
you're having a lovely time in Montreal

00:00:11,519 --> 00:00:16,109
I'm super excited to be here today's

00:00:14,460 --> 00:00:18,439
talk will be covering scaling

00:00:16,109 --> 00:00:20,430
accessibility in the age of components

00:00:18,439 --> 00:00:24,930
who here knows what accessibility

00:00:20,430 --> 00:00:26,279
already means awesome by the end of this

00:00:24,930 --> 00:00:31,080
hopefully everyone will be able to raise

00:00:26,279 --> 00:00:33,450
their hand so I'm Aisha I currently work

00:00:31,080 --> 00:00:36,030
as a senior UX engineer at Optimizely

00:00:33,450 --> 00:00:38,600
which is an experimentation software

00:00:36,030 --> 00:00:42,090
company some of you might use it

00:00:38,600 --> 00:00:43,770
familiar with it before that I was

00:00:42,090 --> 00:00:45,110
working on the Lightning design system

00:00:43,770 --> 00:00:48,120
at Salesforce

00:00:45,110 --> 00:00:50,070
most importantly I am dog mom - pepper

00:00:48,120 --> 00:00:52,920
there's a picture at the end if you can

00:00:50,070 --> 00:00:55,110
stick it out and I'm also a proud

00:00:52,920 --> 00:00:57,570
musical theater geek I spent a lot of

00:00:55,110 --> 00:00:59,520
time on stage singing and dancing and I

00:00:57,570 --> 00:01:04,080
joke that this is my new way of getting

00:00:59,520 --> 00:01:06,600
on stage even though I work in tech so

00:01:04,080 --> 00:01:10,229
my job as the UX engineer Optimizely

00:01:06,600 --> 00:01:12,360
generally covers four main areas the

00:01:10,229 --> 00:01:14,939
first one is our component library it's

00:01:12,360 --> 00:01:16,950
called oh you I stands for Optimizely UI

00:01:14,939 --> 00:01:20,580
if you're French it just looks like

00:01:16,950 --> 00:01:22,320
wheat we also have a design system the

00:01:20,580 --> 00:01:24,090
component library is obviously part of

00:01:22,320 --> 00:01:25,590
that it also includes lots of

00:01:24,090 --> 00:01:27,180
documentation on how to use the

00:01:25,590 --> 00:01:29,610
different components and one to you

00:01:27,180 --> 00:01:31,799
something over another also includes

00:01:29,610 --> 00:01:35,250
accessibility guidelines and our color

00:01:31,799 --> 00:01:37,770
tokens I spend part of my job working on

00:01:35,250 --> 00:01:40,380
that design system I also do a lot of

00:01:37,770 --> 00:01:42,810
prototyping so I partner with our PMS

00:01:40,380 --> 00:01:45,149
and our designers whenever they have

00:01:42,810 --> 00:01:47,549
something either new or updated that

00:01:45,149 --> 00:01:49,259
they want to test with customers I work

00:01:47,549 --> 00:01:52,619
with them to create a prototyping code

00:01:49,259 --> 00:01:54,810
typically HTML CSS react that they can

00:01:52,619 --> 00:01:58,079
use and put in front of customers before

00:01:54,810 --> 00:01:59,880
we start building I also every now and

00:01:58,079 --> 00:02:02,369
then get my hands dirty in the front-end

00:01:59,880 --> 00:02:04,380
code base so I'll make some UI UX

00:02:02,369 --> 00:02:06,509
updates especially if they're updates

00:02:04,380 --> 00:02:09,569
that need to be made because a component

00:02:06,509 --> 00:02:11,610
was updated but throughout all this work

00:02:09,569 --> 00:02:12,950
the underlying part is really the

00:02:11,610 --> 00:02:15,950
component library

00:02:12,950 --> 00:02:17,690
so I use this day-to-day a lot of our

00:02:15,950 --> 00:02:20,050
engineers also use it day-to-day our

00:02:17,690 --> 00:02:22,780
hope right is that everyone is using it

00:02:20,050 --> 00:02:25,430
but the other key part is also

00:02:22,780 --> 00:02:27,440
accessibility so together with the

00:02:25,430 --> 00:02:29,900
components and the accessibility work I

00:02:27,440 --> 00:02:32,239
try to integrate this even into

00:02:29,900 --> 00:02:34,099
something like prototypes because a lot

00:02:32,239 --> 00:02:36,319
of times prototyping code ends up being

00:02:34,099 --> 00:02:38,630
copy and pasted into our production code

00:02:36,319 --> 00:02:40,819
or it's a good starting point for our

00:02:38,630 --> 00:02:43,010
engineers and so I try to ensure that

00:02:40,819 --> 00:02:44,330
even our prototypes are accessible so

00:02:43,010 --> 00:02:46,489
that we start thinking about it at a

00:02:44,330 --> 00:02:48,319
very early on stage and our engineers

00:02:46,489 --> 00:02:49,940
are starting to think about the

00:02:48,319 --> 00:02:53,360
accessibility requirements that they are

00:02:49,940 --> 00:02:55,280
going to need to bake in later so given

00:02:53,360 --> 00:02:56,150
that my world revolves around components

00:02:55,280 --> 00:02:57,950
and accessibility

00:02:56,150 --> 00:03:00,530
I'll probably understand the title of

00:02:57,950 --> 00:03:02,780
this talk today we'll be going over

00:03:00,530 --> 00:03:05,239
three different components and the

00:03:02,780 --> 00:03:08,780
accessibility win you can get by making

00:03:05,239 --> 00:03:10,819
a few tweaks to the underlying code so

00:03:08,780 --> 00:03:12,170
we'll look at button icon and how this

00:03:10,819 --> 00:03:15,319
can improve the visuals of your

00:03:12,170 --> 00:03:17,540
application especially contrast look at

00:03:15,319 --> 00:03:19,519
inputs and what this means for screen

00:03:17,540 --> 00:03:23,239
readers we'll get into a little bit more

00:03:19,519 --> 00:03:26,120
later and a select drop-down a custom

00:03:23,239 --> 00:03:28,370
select drop-down and how you need to do

00:03:26,120 --> 00:03:32,540
work for the keyboard navigation part of

00:03:28,370 --> 00:03:33,829
that but before we get started for those

00:03:32,540 --> 00:03:34,940
of you who didn't raise your hand I just

00:03:33,829 --> 00:03:38,329
want to make sure we're all on the same

00:03:34,940 --> 00:03:40,370
page about what accessibility entails so

00:03:38,329 --> 00:03:42,920
the way I like to describe it is that I

00:03:40,370 --> 00:03:45,819
ensure everyone no matter their ability

00:03:42,920 --> 00:03:48,769
can perceive understand navigate

00:03:45,819 --> 00:03:51,410
contribute to and interact with an

00:03:48,769 --> 00:03:53,420
application basically anything one

00:03:51,410 --> 00:03:56,359
person can do another person can do

00:03:53,420 --> 00:03:58,599
doesn't matter their ability it's also

00:03:56,359 --> 00:04:00,680
commonly referred to as a 1:1 why

00:03:58,599 --> 00:04:02,150
because accessibility is kind of a hard

00:04:00,680 --> 00:04:05,480
word to spell I appreciate that

00:04:02,150 --> 00:04:07,010
abbreviation it's a 1:1 why because

00:04:05,480 --> 00:04:10,790
there are 11 letters between the a and

00:04:07,010 --> 00:04:13,660
the lion now who benefits from

00:04:10,790 --> 00:04:16,190
accessible and assistive technology a

00:04:13,660 --> 00:04:17,720
lot of times I think when we first think

00:04:16,190 --> 00:04:20,269
about this we just think of the

00:04:17,720 --> 00:04:22,390
permanent column people who are deaf or

00:04:20,269 --> 00:04:25,070
blind trying to use an application

00:04:22,390 --> 00:04:26,330
however the Microsoft team they have

00:04:25,070 --> 00:04:27,710
amazing accessibility to

00:04:26,330 --> 00:04:30,620
and they've created these inclusive

00:04:27,710 --> 00:04:33,939
design personas that I think do a great

00:04:30,620 --> 00:04:37,039
job in curve basically giving an idea of

00:04:33,939 --> 00:04:39,139
this applies to all of us right at any

00:04:37,039 --> 00:04:41,060
moment any given moment any one of us

00:04:39,139 --> 00:04:43,639
could benefit from assistive technology

00:04:41,060 --> 00:04:45,289
you might be a new parent and you have a

00:04:43,639 --> 00:04:47,150
baby in one arm and you're trying to

00:04:45,289 --> 00:04:50,180
navigate an entire application with just

00:04:47,150 --> 00:04:52,069
one hand or you might be a bartender and

00:04:50,180 --> 00:04:53,750
you benefit from having captions on on

00:04:52,069 --> 00:04:57,560
the TV because there's no way you're

00:04:53,750 --> 00:05:00,080
going to hear the TV one of my favorite

00:04:57,560 --> 00:05:03,680
examples of this is this detailed

00:05:00,080 --> 00:05:05,449
version from Margot about vision right

00:05:03,680 --> 00:05:07,129
you may be blind from birth in which

00:05:05,449 --> 00:05:09,830
case you might use a screen reader to

00:05:07,129 --> 00:05:11,810
interact with technology or you might

00:05:09,830 --> 00:05:13,460
have had eye surgery and suddenly you

00:05:11,810 --> 00:05:14,960
only have one eye at the moment you want

00:05:13,460 --> 00:05:17,270
the other ones covered by an eye patch

00:05:14,960 --> 00:05:20,120
you might also benefit from assistive

00:05:17,270 --> 00:05:22,550
technology ideally you probably benefit

00:05:20,120 --> 00:05:24,289
from at least good contrast so that even

00:05:22,550 --> 00:05:26,210
with your one eye and it's compensating

00:05:24,289 --> 00:05:28,810
you can still perceive everything on an

00:05:26,210 --> 00:05:30,710
application or it might be situational

00:05:28,810 --> 00:05:33,560
anyone here ever tried to work outside

00:05:30,710 --> 00:05:36,110
in the Sun and if a certain page has

00:05:33,560 --> 00:05:38,210
pretty low contrast ratios it can be

00:05:36,110 --> 00:05:40,759
really hard to see some of the items on

00:05:38,210 --> 00:05:42,589
the page or on the projector right is

00:05:40,759 --> 00:05:44,629
everyone ever done the projector test

00:05:42,589 --> 00:05:45,889
where it looks fine on your computer and

00:05:44,629 --> 00:05:48,050
you put it up on the projector and

00:05:45,889 --> 00:05:49,909
suddenly everything's washed out by

00:05:48,050 --> 00:05:55,750
improving contrast ratios we can make

00:05:49,909 --> 00:05:58,849
sure everyone gets to benefit secondly

00:05:55,750 --> 00:06:01,190
component libraries they are an amazing

00:05:58,849 --> 00:06:03,800
tool because every change you make to a

00:06:01,190 --> 00:06:06,229
component as long as your developers are

00:06:03,800 --> 00:06:07,490
using those components that change gets

00:06:06,229 --> 00:06:09,979
permeated throughout the entire

00:06:07,490 --> 00:06:11,870
ecosystem right you can make one change

00:06:09,979 --> 00:06:13,789
I can make one accessibility fix and

00:06:11,870 --> 00:06:16,909
suddenly everyone consuming that

00:06:13,789 --> 00:06:20,509
component also gets that fix super handy

00:06:16,909 --> 00:06:23,659
it's an ideal world to live in but it

00:06:20,509 --> 00:06:25,129
also means that every change gets

00:06:23,659 --> 00:06:27,889
permeated throughout the entire

00:06:25,129 --> 00:06:30,710
ecosystem so you can also introduce a

00:06:27,889 --> 00:06:34,789
bug and suddenly everyone consuming that

00:06:30,710 --> 00:06:37,310
component gets that bug bugs typically

00:06:34,789 --> 00:06:39,420
get caught with tests what might not get

00:06:37,310 --> 00:06:42,090
caught is an accessibility bug or a

00:06:39,420 --> 00:06:44,790
accessibility issue right if I make a

00:06:42,090 --> 00:06:47,040
change in a component that deters the

00:06:44,790 --> 00:06:48,600
accessibility the unfortunate part of

00:06:47,040 --> 00:06:50,040
component libraries is that everyone

00:06:48,600 --> 00:06:54,720
else consuming that component is

00:06:50,040 --> 00:06:56,130
suddenly inaccessible as well but with

00:06:54,720 --> 00:06:59,880
great power comes great responsibility

00:06:56,130 --> 00:07:02,430
and an endless opportunity to make the

00:06:59,880 --> 00:07:04,440
web more accessible place so if you have

00:07:02,430 --> 00:07:06,810
any influence over a component library

00:07:04,440 --> 00:07:08,010
you have a chance to scale the

00:07:06,810 --> 00:07:10,290
accessibility throughout your

00:07:08,010 --> 00:07:12,720
application just by making a few changes

00:07:10,290 --> 00:07:16,680
to the underlying components so that's

00:07:12,720 --> 00:07:18,300
what we'll dive into today so start with

00:07:16,680 --> 00:07:21,000
we'll look at the visual side of things

00:07:18,300 --> 00:07:25,980
is the interface visually legible and

00:07:21,000 --> 00:07:27,870
understandable for all users for button

00:07:25,980 --> 00:07:30,990
icons in particular there tend to be

00:07:27,870 --> 00:07:33,630
three key problem areas focus and hover

00:07:30,990 --> 00:07:40,200
States the contrast especially color

00:07:33,630 --> 00:07:42,780
contrast and titles that who is familiar

00:07:40,200 --> 00:07:45,450
with this beautiful fuzzy blue outline

00:07:42,780 --> 00:07:48,120
that the browser's have introduced all

00:07:45,450 --> 00:07:51,450
buttons and links right browser default

00:07:48,120 --> 00:07:53,940
has some kind of focus ring but a lot of

00:07:51,450 --> 00:07:55,320
people call it it's not the prettiest

00:07:53,940 --> 00:07:57,960
sometimes it's a little bit overwhelming

00:07:55,320 --> 00:08:00,930
or obnoxious it's also always a certain

00:07:57,960 --> 00:08:02,250
color so it might not fit your brand so

00:08:00,930 --> 00:08:05,610
how many people are familiar with this

00:08:02,250 --> 00:08:07,740
bit of code yeah I've done this I've

00:08:05,610 --> 00:08:09,900
done the button reset to outline:none

00:08:07,740 --> 00:08:12,780
I'm sure plenty of people in this room

00:08:09,900 --> 00:08:15,060
have also done it it's no ill intent

00:08:12,780 --> 00:08:17,760
right it's just that we want to have a

00:08:15,060 --> 00:08:19,650
better solution the problem is if we

00:08:17,760 --> 00:08:22,470
remove this we need to add something

00:08:19,650 --> 00:08:24,720
back right we can't just take this away

00:08:22,470 --> 00:08:26,490
and say all right we're great all good

00:08:24,720 --> 00:08:29,070
we don't have the ugly blue outlines

00:08:26,490 --> 00:08:31,560
anymore because now we've introduced a

00:08:29,070 --> 00:08:33,150
huge accessibility problem funny thing

00:08:31,560 --> 00:08:34,800
is that this was baked in right this was

00:08:33,150 --> 00:08:38,760
done for us and the browser's and now

00:08:34,800 --> 00:08:40,710
we're overriding it so when we look at

00:08:38,760 --> 00:08:43,350
our button icons these are directly from

00:08:40,710 --> 00:08:45,390
a UI when I first joined uh you might be

00:08:43,350 --> 00:08:49,560
wondering why I put the same button four

00:08:45,390 --> 00:08:51,120
times the fun secret is that this is not

00:08:49,560 --> 00:08:52,380
the same button four times this is

00:08:51,120 --> 00:08:55,020
actually a

00:08:52,380 --> 00:08:57,980
in four different states very different

00:08:55,020 --> 00:09:02,460
states the neutral the hover state

00:08:57,980 --> 00:09:04,650
focused and focused in hovered now I

00:09:02,460 --> 00:09:06,600
don't know about you I can't tell a

00:09:04,650 --> 00:09:08,520
difference between any of these I had a

00:09:06,600 --> 00:09:10,110
really hard time keeping the screenshots

00:09:08,520 --> 00:09:11,520
apart when I was trying to do this slide

00:09:10,110 --> 00:09:13,620
I had to remember which order I had done

00:09:11,520 --> 00:09:14,970
the screenshots and because they they

00:09:13,620 --> 00:09:17,040
don't look any different there is

00:09:14,970 --> 00:09:22,200
technically a color change for the

00:09:17,040 --> 00:09:26,070
hovers but it's practically missing now

00:09:22,200 --> 00:09:28,170
with a few fixes I've darkened the

00:09:26,070 --> 00:09:30,390
difference between neutral and hovers so

00:09:28,170 --> 00:09:32,400
the hover token is now using a shade a

00:09:30,390 --> 00:09:35,640
couple shades darker from our design

00:09:32,400 --> 00:09:38,450
tokens and instead of the outline I've

00:09:35,640 --> 00:09:41,490
added a box shadow for the focus state

00:09:38,450 --> 00:09:43,260
now these at least aren't starting to

00:09:41,490 --> 00:09:45,780
look a little bit different we could go

00:09:43,260 --> 00:09:47,880
further but this is a good starting

00:09:45,780 --> 00:09:49,530
point if I'm looking at this I can

00:09:47,880 --> 00:09:51,480
definitely see the difference between

00:09:49,530 --> 00:09:53,490
neutral and focus which is a huge

00:09:51,480 --> 00:09:55,320
improvement and there's a discernible

00:09:53,490 --> 00:09:59,250
difference between when I'm hovering and

00:09:55,320 --> 00:10:01,140
when I'm not easy fix this reminder if

00:09:59,250 --> 00:10:04,050
you take off the outline you need to put

00:10:01,140 --> 00:10:06,870
something back in in its place otherwise

00:10:04,050 --> 00:10:08,340
people trying to use the nav the

00:10:06,870 --> 00:10:10,740
application with keyboard navigation

00:10:08,340 --> 00:10:12,330
will lose track of where their focus is

00:10:10,740 --> 00:10:14,700
if they don't have a clear way to know

00:10:12,330 --> 00:10:19,140
exactly which element is currently being

00:10:14,700 --> 00:10:21,390
focused so the next bit

00:10:19,140 --> 00:10:23,430
this was our button icon component it's

00:10:21,390 --> 00:10:25,740
pretty straightforward you passed an

00:10:23,430 --> 00:10:28,520
icon name we automatically filled it

00:10:25,740 --> 00:10:31,110
with one of our dark purple color tokens

00:10:28,520 --> 00:10:34,470
but we got a request for some more

00:10:31,110 --> 00:10:38,400
customized ability and so we added a

00:10:34,470 --> 00:10:40,920
prop called icon fill its initial start

00:10:38,400 --> 00:10:43,140
was just a string prop type you could

00:10:40,920 --> 00:10:45,750
pass in any hex value it would update

00:10:43,140 --> 00:10:49,200
the fill of the SVG used in this button

00:10:45,750 --> 00:10:51,090
icon this is great it gives people a lot

00:10:49,200 --> 00:10:52,680
of chance for customization people are

00:10:51,090 --> 00:10:56,310
very happy right they can put any color

00:10:52,680 --> 00:10:58,950
they want the problem is they can put

00:10:56,310 --> 00:11:01,260
any color they want and there's no way

00:10:58,950 --> 00:11:03,480
to know that a certain developer has

00:11:01,260 --> 00:11:04,750
done the due diligence to make sure that

00:11:03,480 --> 00:11:06,790
this color

00:11:04,750 --> 00:11:09,760
would pass a contrast ratio against

00:11:06,790 --> 00:11:12,640
white you can see my favorite go to ABC

00:11:09,760 --> 00:11:14,680
ABC does not by any means past a

00:11:12,640 --> 00:11:18,280
contrast ratio against a white

00:11:14,680 --> 00:11:20,980
background so how do we improve this how

00:11:18,280 --> 00:11:23,230
do we prevent the onus being on

00:11:20,980 --> 00:11:27,070
developers to know exactly which color

00:11:23,230 --> 00:11:29,110
would be a good choice we created a

00:11:27,070 --> 00:11:32,430
little utility that looks like all of

00:11:29,110 --> 00:11:35,050
our color tokens that we export we

00:11:32,430 --> 00:11:36,580
behind the scenes do the test to make

00:11:35,050 --> 00:11:38,560
sure that each of these color tokens

00:11:36,580 --> 00:11:41,830
passes the contrast ratio against a

00:11:38,560 --> 00:11:44,170
white background and now our updated

00:11:41,830 --> 00:11:47,200
prop type no longer takes any arbitrary

00:11:44,170 --> 00:11:49,870
string it points to this map and it says

00:11:47,200 --> 00:11:52,840
you have to pick one of these colors we

00:11:49,870 --> 00:11:54,010
also change the token names a little bit

00:11:52,840 --> 00:11:56,470
to be a little bit more human-friendly

00:11:54,010 --> 00:12:02,290
so you don't remember base or blue dark

00:11:56,470 --> 00:12:04,510
we just say default aqua green orange so

00:12:02,290 --> 00:12:07,570
now as a developer you have to pick

00:12:04,510 --> 00:12:10,360
between one of these nine choices I see

00:12:07,570 --> 00:12:12,010
a little seem a little limiting but in

00:12:10,360 --> 00:12:14,140
reality this is actually a benefit for

00:12:12,010 --> 00:12:16,570
the designers as well and the aesthetic

00:12:14,140 --> 00:12:18,310
of the entire application because now we

00:12:16,570 --> 00:12:21,700
know all of our colors are actually

00:12:18,310 --> 00:12:24,040
being pulled from our official brand

00:12:21,700 --> 00:12:25,510
tokens right now our application is

00:12:24,040 --> 00:12:27,700
going to look a lot more consistent

00:12:25,510 --> 00:12:29,290
throughout all of our button icons so

00:12:27,700 --> 00:12:31,540
every time we have a green one it's

00:12:29,290 --> 00:12:34,150
going to be the same green instead of

00:12:31,540 --> 00:12:37,240
going across 15 different greens from

00:12:34,150 --> 00:12:39,670
every developers favorite shade and then

00:12:37,240 --> 00:12:41,589
for the accessibility side we can ensure

00:12:39,670 --> 00:12:46,870
that this icon is always going to pass

00:12:41,589 --> 00:12:49,180
contrast against the white lastly titles

00:12:46,870 --> 00:12:50,830
I use these a lot especially in

00:12:49,180 --> 00:12:52,390
something like the S code that has a lot

00:12:50,830 --> 00:12:53,500
of button icons and you're trying to

00:12:52,390 --> 00:12:55,990
figure out what all those different

00:12:53,500 --> 00:12:57,760
icons do you hover over it and the

00:12:55,990 --> 00:13:01,240
little tooltip pops up and tells you

00:12:57,760 --> 00:13:04,000
ideally what this button does now this

00:13:01,240 --> 00:13:05,650
title is also used for screen readers so

00:13:04,000 --> 00:13:07,960
if someone is navigating something with

00:13:05,650 --> 00:13:09,250
a screen reader this title is used to

00:13:07,960 --> 00:13:14,110
tell them what the button they're

00:13:09,250 --> 00:13:15,280
currently on is going to do the code

00:13:14,110 --> 00:13:15,910
underneath might look something like

00:13:15,280 --> 00:13:17,510
this

00:13:15,910 --> 00:13:19,280
if

00:13:17,510 --> 00:13:21,620
person passes in a prop stunt title

00:13:19,280 --> 00:13:25,100
we'll set that title attribute on the

00:13:21,620 --> 00:13:28,100
button itself now the key here is not

00:13:25,100 --> 00:13:31,460
making this optional we're using the is

00:13:28,100 --> 00:13:33,020
required attribute of the prop types to

00:13:31,460 --> 00:13:35,720
ensure that everyone who is using a

00:13:33,020 --> 00:13:37,700
button icon is adding this title that

00:13:35,720 --> 00:13:38,900
way that's at least one small Sandi

00:13:37,700 --> 00:13:41,090
check we can make to ensure that

00:13:38,900 --> 00:13:44,630
everyone's got a title on their bat and

00:13:41,090 --> 00:13:46,790
icons quality of the title is up to the

00:13:44,630 --> 00:13:48,530
developer that's where design system

00:13:46,790 --> 00:13:50,720
Doc's come in handy right you can say

00:13:48,530 --> 00:13:52,790
okay this shouldn't describe the icon

00:13:50,720 --> 00:13:56,000
like it shouldn't be paperclip it should

00:13:52,790 --> 00:13:57,530
be attach a file something like that but

00:13:56,000 --> 00:14:01,420
that's where a component library in a

00:13:57,530 --> 00:14:04,940
design system work hand in hand now

00:14:01,420 --> 00:14:05,770
button icons are surprisingly quite

00:14:04,940 --> 00:14:07,940
tricky

00:14:05,770 --> 00:14:10,220
unfortunately screen readers don't have

00:14:07,940 --> 00:14:11,720
a standard way of handling the title

00:14:10,220 --> 00:14:13,670
attribute you can't guarantee that

00:14:11,720 --> 00:14:15,500
that's going to work on a screen reader

00:14:13,670 --> 00:14:18,380
so there are a lot of different options

00:14:15,500 --> 00:14:20,060
I like using Aria label so that might

00:14:18,380 --> 00:14:22,070
look something like this I don't want to

00:14:20,060 --> 00:14:25,130
require users to pass yet another crop

00:14:22,070 --> 00:14:27,410
plus if I had a separate prop for Aria

00:14:25,130 --> 00:14:29,570
label and title they might get out of

00:14:27,410 --> 00:14:31,520
sync they might be different I don't

00:14:29,570 --> 00:14:34,460
need that I can just use the same title

00:14:31,520 --> 00:14:37,640
prop for the Aria label and the same way

00:14:34,460 --> 00:14:40,700
it'll be passed on to the component Sara

00:14:37,640 --> 00:14:42,470
suede on has an amazing article on I

00:14:40,700 --> 00:14:44,630
think six different ways you can make

00:14:42,470 --> 00:14:46,010
button icons accessible so I highly

00:14:44,630 --> 00:14:48,200
recommend checking out that article

00:14:46,010 --> 00:14:50,560
they're surprisingly more complicated

00:14:48,200 --> 00:14:50,560
than you might think

00:14:50,590 --> 00:14:56,240
alright screen readers and users easily

00:14:54,620 --> 00:14:59,000
interact with the content on the screen

00:14:56,240 --> 00:15:02,480
without seeing it who here has tried out

00:14:59,000 --> 00:15:04,640
a screen a number for a good good set of

00:15:02,480 --> 00:15:07,190
hands nice if you don't or if you

00:15:04,640 --> 00:15:09,380
haven't already known all Macs come with

00:15:07,190 --> 00:15:11,570
voiceover it's very easy to turn on

00:15:09,380 --> 00:15:13,520
there's also jaws there are a couple

00:15:11,570 --> 00:15:14,870
different options depending on what OS

00:15:13,520 --> 00:15:17,300
you're using what computer you're using

00:15:14,870 --> 00:15:19,760
but I highly recommend everyone here

00:15:17,300 --> 00:15:22,220
test it out at least once the very

00:15:19,760 --> 00:15:24,920
eye-opening experience and gives you a

00:15:22,220 --> 00:15:26,480
very good sense of what it's like to try

00:15:24,920 --> 00:15:29,110
to navigate something without being able

00:15:26,480 --> 00:15:29,110
to see it

00:15:29,900 --> 00:15:35,630
so looking at input this is a screenshot

00:15:33,170 --> 00:15:38,930
from our storybook these are the

00:15:35,630 --> 00:15:40,910
exported components we have 400 UI and

00:15:38,930 --> 00:15:43,640
when I first started I thought this is a

00:15:40,910 --> 00:15:46,190
little odd that is a little surprising

00:15:43,640 --> 00:15:49,580
that we export both an input component

00:15:46,190 --> 00:15:52,640
and a label component now the reason

00:15:49,580 --> 00:15:56,330
this is weird is because people start

00:15:52,640 --> 00:15:59,600
doing something like this so here API

00:15:56,330 --> 00:16:03,350
call is most likely a header for a

00:15:59,600 --> 00:16:05,120
section of information right but people

00:16:03,350 --> 00:16:07,430
are using a label component because in

00:16:05,120 --> 00:16:09,920
their mind it's labeling this section

00:16:07,430 --> 00:16:13,820
right that's a natural conclusion to

00:16:09,920 --> 00:16:16,490
come to from is this label component

00:16:13,820 --> 00:16:19,400
underneath is using the semantic label

00:16:16,490 --> 00:16:22,130
HTML element which is always supposed to

00:16:19,400 --> 00:16:24,530
be used with an input it doesn't

00:16:22,130 --> 00:16:28,010
semantically make sense to have a label

00:16:24,530 --> 00:16:30,500
without any Associated input so here

00:16:28,010 --> 00:16:32,900
label is being used for its style and

00:16:30,500 --> 00:16:35,030
not for its semantic meaning which has a

00:16:32,900 --> 00:16:36,650
really big accessibility issue we want

00:16:35,030 --> 00:16:38,780
to make sure that the components were

00:16:36,650 --> 00:16:41,180
using the underlying HTML elements

00:16:38,780 --> 00:16:43,450
especially are used appropriately and

00:16:41,180 --> 00:16:45,740
they apply in an appropriate situation

00:16:43,450 --> 00:16:48,800
versus this where they're being used

00:16:45,740 --> 00:16:52,070
just for stylistic differences so how

00:16:48,800 --> 00:16:54,140
can we fix this the result of having a

00:16:52,070 --> 00:16:56,090
separate label input a late separate

00:16:54,140 --> 00:16:59,000
label component is that our input

00:16:56,090 --> 00:17:02,020
component was very bare-bones the only

00:16:59,000 --> 00:17:04,670
required property was actually just type

00:17:02,020 --> 00:17:07,070
what that means is if I turn on a screen

00:17:04,670 --> 00:17:10,640
reader and I go to this input it's just

00:17:07,070 --> 00:17:12,260
going to read edit text blank if I'm a

00:17:10,640 --> 00:17:14,240
screen reader user and I can't see this

00:17:12,260 --> 00:17:16,610
I have no idea what input I'm suddenly

00:17:14,240 --> 00:17:18,890
found myself in it could be a phone

00:17:16,610 --> 00:17:22,040
number it could be a password there's no

00:17:18,890 --> 00:17:26,360
clue to me as a user to know what I'm

00:17:22,040 --> 00:17:28,670
supposed to be typing here if we look at

00:17:26,360 --> 00:17:31,160
the underlying code behind this issue we

00:17:28,670 --> 00:17:33,740
start to see the problem this code was

00:17:31,160 --> 00:17:36,650
relying on developers passing in a label

00:17:33,740 --> 00:17:40,520
property in order to properly apply an

00:17:36,650 --> 00:17:43,220
actual label element but if they didn't

00:17:40,520 --> 00:17:43,790
pass in this label all we got was an

00:17:43,220 --> 00:17:46,100
element of

00:17:43,790 --> 00:17:51,530
an input there was no Associated label

00:17:46,100 --> 00:17:54,740
for this input so a few quick changes

00:17:51,530 --> 00:17:58,670
for our input component we require an ID

00:17:54,740 --> 00:18:00,500
and we require a label now what this

00:17:58,670 --> 00:18:02,390
means is that in our code we no longer

00:18:00,500 --> 00:18:05,270
have an if statement right we know a

00:18:02,390 --> 00:18:08,120
label has been passed and we say okay

00:18:05,270 --> 00:18:11,410
use the label component this is the

00:18:08,120 --> 00:18:15,170
inputs ID this is the labels text and

00:18:11,410 --> 00:18:17,960
render the competi it put what that

00:18:15,170 --> 00:18:20,270
looks like further down is that the

00:18:17,960 --> 00:18:23,480
label is properly using a four attribute

00:18:20,270 --> 00:18:27,470
that points to the inputs ID and the

00:18:23,480 --> 00:18:30,170
input has that same ID so this match

00:18:27,470 --> 00:18:31,760
this four and the ID attribute those two

00:18:30,170 --> 00:18:34,790
matching and having the exact same

00:18:31,760 --> 00:18:37,040
string it is case-sensitive means that

00:18:34,790 --> 00:18:39,590
now my label is properly associated with

00:18:37,040 --> 00:18:41,570
my input so if I were using a screen

00:18:39,590 --> 00:18:47,390
reader it would say something like edit

00:18:41,570 --> 00:18:49,340
name next now a fun way to test this

00:18:47,390 --> 00:18:52,250
without going all the way into a screen

00:18:49,340 --> 00:18:53,680
reader yet you have to do that part but

00:18:52,250 --> 00:18:56,540
if you want to do a quick sanity check

00:18:53,680 --> 00:18:59,210
you actually click on the label of any

00:18:56,540 --> 00:19:01,580
input and it should automatically focus

00:18:59,210 --> 00:19:03,430
you in the input if it doesn't that

00:19:01,580 --> 00:19:06,140
means the two are not properly connected

00:19:03,430 --> 00:19:08,000
this also works for checkboxes and radio

00:19:06,140 --> 00:19:10,130
buttons if you ever click on the actual

00:19:08,000 --> 00:19:12,530
text like the read terms and conditions

00:19:10,130 --> 00:19:14,720
you click on that it should be checking

00:19:12,530 --> 00:19:17,420
the checkbox and they do that because

00:19:14,720 --> 00:19:20,060
the checkbox is a very small tap target

00:19:17,420 --> 00:19:22,340
right if you maybe are not the best

00:19:20,060 --> 00:19:24,170
Mouse user for whatever reason it can be

00:19:22,340 --> 00:19:26,390
very hard to be very particular about

00:19:24,170 --> 00:19:28,970
where you're clicking by making the

00:19:26,390 --> 00:19:32,120
label an access point for that checkbox

00:19:28,970 --> 00:19:33,380
you make it a lot easier for you this is

00:19:32,120 --> 00:19:35,600
it was just a quick way to ensure that

00:19:33,380 --> 00:19:39,290
those two attributes have been connected

00:19:35,600 --> 00:19:41,540
properly the last change we made was

00:19:39,290 --> 00:19:44,360
actually removing our exported label

00:19:41,540 --> 00:19:45,890
component right we no longer want people

00:19:44,360 --> 00:19:48,980
using this willy-nilly

00:19:45,890 --> 00:19:50,540
we know it's associated with inputs so

00:19:48,980 --> 00:19:53,420
it's going to be used underneath the

00:19:50,540 --> 00:19:56,350
surface the input component developers

00:19:53,420 --> 00:19:56,350
never have to worry about it

00:19:57,270 --> 00:20:02,160
last section keyboard navigation

00:19:59,630 --> 00:20:04,680
anything you can do with the mouse I can

00:20:02,160 --> 00:20:06,210
do with the keyboard vice versa right I

00:20:04,680 --> 00:20:12,480
shouldn't need to use my mouse in order

00:20:06,210 --> 00:20:15,600
to use a patient so many times we create

00:20:12,480 --> 00:20:18,390
customized select dropdowns so there is

00:20:15,600 --> 00:20:20,760
a native select element that uses option

00:20:18,390 --> 00:20:22,980
children this gives you kind of a

00:20:20,760 --> 00:20:25,050
default look sometimes you need to go

00:20:22,980 --> 00:20:27,240
beyond that you should have a very good

00:20:25,050 --> 00:20:29,640
use case for going beyond that you'll

00:20:27,240 --> 00:20:32,280
see why in a second but if we are

00:20:29,640 --> 00:20:34,200
creating our custom select drop-down

00:20:32,280 --> 00:20:36,360
there are a few things we need to do to

00:20:34,200 --> 00:20:38,190
the markup to make sure it works for

00:20:36,360 --> 00:20:41,520
both keyboard navigation and screen

00:20:38,190 --> 00:20:44,700
readers for example the trigger needs an

00:20:41,520 --> 00:20:47,370
aria has pop-up to true and are you

00:20:44,700 --> 00:20:50,930
expanded to true or false whether or not

00:20:47,370 --> 00:20:53,160
the drop-down is showing or not the

00:20:50,930 --> 00:20:57,870
containers surrounding the options

00:20:53,160 --> 00:20:59,880
should have a roll of menu and each item

00:20:57,870 --> 00:21:02,700
should have a role of either menu item

00:20:59,880 --> 00:21:04,620
or placeholder placeholder is used like

00:21:02,700 --> 00:21:06,000
if you have a heading for a certain

00:21:04,620 --> 00:21:07,770
number of options and then you have

00:21:06,000 --> 00:21:11,190
another heading those headings would be

00:21:07,770 --> 00:21:13,080
placeholders we also set tabindex equal

00:21:11,190 --> 00:21:15,180
to negative 1 so that we can

00:21:13,080 --> 00:21:17,490
programmatically focus on these items

00:21:15,180 --> 00:21:19,860
without introducing them into the tab

00:21:17,490 --> 00:21:21,840
series so you shouldn't be able to get

00:21:19,860 --> 00:21:24,570
to them with a keyboard but this lets us

00:21:21,840 --> 00:21:28,050
give a kind of foe focused state if you

00:21:24,570 --> 00:21:31,980
will this is an example of all the extra

00:21:28,050 --> 00:21:34,290
markup you need to add and then we have

00:21:31,980 --> 00:21:35,610
to go a step further now when you

00:21:34,290 --> 00:21:37,890
interact with a select drop-down

00:21:35,610 --> 00:21:40,440
especially the native one you can

00:21:37,890 --> 00:21:42,870
trigger the drop down to show by hitting

00:21:40,440 --> 00:21:44,700
Enter or space and then you can use your

00:21:42,870 --> 00:21:47,100
up and down arrows to go through the

00:21:44,700 --> 00:21:49,530
different options and then hit enter to

00:21:47,100 --> 00:21:51,630
select something now all of that is

00:21:49,530 --> 00:21:54,600
given to you by default at lebackes

00:21:51,630 --> 00:21:58,350
for free if you use the actual semantics

00:21:54,600 --> 00:22:00,270
select and option elements if you're

00:21:58,350 --> 00:22:03,360
rolling your own version you don't get

00:22:00,270 --> 00:22:05,370
that is why I emphasized have a very

00:22:03,360 --> 00:22:08,430
good reason for making your own because

00:22:05,370 --> 00:22:10,080
it's extra work this is a bit pseudocode

00:22:08,430 --> 00:22:11,909
as an example

00:22:10,080 --> 00:22:14,159
you need to be checking the different

00:22:11,909 --> 00:22:16,289
keys being pressed and see if it's

00:22:14,159 --> 00:22:18,419
something that you need to react to if

00:22:16,289 --> 00:22:21,899
I'm hitting the up or down key I'm going

00:22:18,419 --> 00:22:24,299
to stylistically maybe add a class that

00:22:21,899 --> 00:22:27,539
helps the user know okay where is my

00:22:24,299 --> 00:22:30,990
focus which one am I currently on in a

00:22:27,539 --> 00:22:32,730
sense Fame for escape if I hit the

00:22:30,990 --> 00:22:34,799
escape key I expect the drop-down to

00:22:32,730 --> 00:22:36,990
disappear this all stuff you have to

00:22:34,799 --> 00:22:41,269
wire up yourself if you're going to roll

00:22:36,990 --> 00:22:44,159
your own Fleck drop-down so this is my

00:22:41,269 --> 00:22:46,679
plea to you all to use a semantic

00:22:44,159 --> 00:22:49,019
element if it's present and if you don't

00:22:46,679 --> 00:22:50,399
need to build custom things then don't

00:22:49,019 --> 00:22:55,919
because it's definitely a lot more work

00:22:50,399 --> 00:22:58,620
so given all of this what is the big

00:22:55,919 --> 00:23:01,289
picture these were just a certain set of

00:22:58,620 --> 00:23:03,990
components that I chose to talk about we

00:23:01,289 --> 00:23:06,570
have about 54 maybe almost 16 now

00:23:03,990 --> 00:23:07,830
components and oh you eye there's a lot

00:23:06,570 --> 00:23:10,080
of different things I could talk about I

00:23:07,830 --> 00:23:12,630
could go in for hours but I'm hoping

00:23:10,080 --> 00:23:15,029
that some of this will be relevant to

00:23:12,630 --> 00:23:19,110
whatever you are working on so that you

00:23:15,029 --> 00:23:21,029
can help create accessible technology so

00:23:19,110 --> 00:23:23,100
my number one tip is start with your

00:23:21,029 --> 00:23:25,019
most ease components when I first

00:23:23,100 --> 00:23:27,059
started that Optimizely I was looking at

00:23:25,019 --> 00:23:29,220
this list of about 60 components and

00:23:27,059 --> 00:23:31,350
wondering okay all of these need

00:23:29,220 --> 00:23:35,250
accessibility help where do I start

00:23:31,350 --> 00:23:38,549
and my takeaway was let's look at what's

00:23:35,250 --> 00:23:40,889
the most used interface right we use

00:23:38,549 --> 00:23:42,630
button icons all over the place many

00:23:40,889 --> 00:23:44,610
applications do because they are a great

00:23:42,630 --> 00:23:48,179
space saver especially if you're doing

00:23:44,610 --> 00:23:49,919
editor type stuff taking up full-length

00:23:48,179 --> 00:23:52,169
buttons with text every time might not

00:23:49,919 --> 00:23:54,809
be an option so a lot of times we rely

00:23:52,169 --> 00:23:58,409
on button icons those are very prevalent

00:23:54,809 --> 00:24:01,380
in prevalent in the Optimizely UI same

00:23:58,409 --> 00:24:02,970
for inputs probably very common ours is

00:24:01,380 --> 00:24:04,260
very forum based there are a ton of

00:24:02,970 --> 00:24:06,870
inputs that you fill out on a regular

00:24:04,260 --> 00:24:09,389
basis if those inputs aren't accessible

00:24:06,870 --> 00:24:10,559
it's very hard to complete a standard

00:24:09,389 --> 00:24:14,159
workflow and Optimizely

00:24:10,559 --> 00:24:16,080
and same for select dropdowns we have

00:24:14,159 --> 00:24:18,510
custom select dropdowns especially ones

00:24:16,080 --> 00:24:21,070
that we use for setting your project

00:24:18,510 --> 00:24:24,130
type or navigating and

00:24:21,070 --> 00:24:26,259
trying to take any basic workflow with

00:24:24,130 --> 00:24:28,120
just your keyboard was very hard because

00:24:26,259 --> 00:24:30,370
our select dropdowns have no way of

00:24:28,120 --> 00:24:32,230
being keyboard accessible so you never

00:24:30,370 --> 00:24:33,669
had a way to choose your next thing

00:24:32,230 --> 00:24:36,370
so you're basically blocked you were

00:24:33,669 --> 00:24:39,070
stuck so my recommendation is look at

00:24:36,370 --> 00:24:43,049
what is in your UI most often and see

00:24:39,070 --> 00:24:43,049
what gives you the most win for fixing

00:24:43,559 --> 00:24:49,659
second make it easier to do the right

00:24:46,570 --> 00:24:51,730
thing so as we saw with button icons we

00:24:49,659 --> 00:24:54,850
can take the pressure off of our

00:24:51,730 --> 00:24:57,250
developers and move it on to the

00:24:54,850 --> 00:25:00,009
component itself do they need to worry

00:24:57,250 --> 00:25:02,080
about whether or not a color is passing

00:25:00,009 --> 00:25:03,460
the contrast ratio against white they

00:25:02,080 --> 00:25:05,649
shouldn't have to right they should just

00:25:03,460 --> 00:25:07,509
be able to say okay I need this is green

00:25:05,649 --> 00:25:11,019
because it's representing something

00:25:07,509 --> 00:25:13,990
maybe successful I'm going to use the

00:25:11,019 --> 00:25:15,279
green fill right this makes it easier

00:25:13,990 --> 00:25:17,110
for our developers to create accessible

00:25:15,279 --> 00:25:21,490
UI without maybe even knowing that

00:25:17,110 --> 00:25:25,240
they're doing it some things shouldn't

00:25:21,490 --> 00:25:27,220
be flexible like inputs right we don't

00:25:25,240 --> 00:25:30,309
want the flexibility of people using

00:25:27,220 --> 00:25:32,440
labels wherever they want we need to

00:25:30,309 --> 00:25:35,049
control some things in order to ensure

00:25:32,440 --> 00:25:37,600
that we are keeping accessibility top of

00:25:35,049 --> 00:25:39,429
mind this is also a great learning

00:25:37,600 --> 00:25:41,139
opportunity if people start asking you

00:25:39,429 --> 00:25:43,179
well why don't we have a label component

00:25:41,139 --> 00:25:44,980
you can explain to them they can learn

00:25:43,179 --> 00:25:48,220
that Oh labels are always associated

00:25:44,980 --> 00:25:49,690
with inputs so we've baked it in making

00:25:48,220 --> 00:25:51,879
that property the label property

00:25:49,690 --> 00:25:53,950
required is also a great learning moment

00:25:51,879 --> 00:25:55,720
if people start wondering oh why is this

00:25:53,950 --> 00:25:56,980
label required they might go look into

00:25:55,720 --> 00:25:58,259
the code and see what it's being used

00:25:56,980 --> 00:26:02,289
for

00:25:58,259 --> 00:26:05,200
and lastly good things take time and

00:26:02,289 --> 00:26:08,019
effort great life advice really it's not

00:26:05,200 --> 00:26:10,480
just for components but as I was looking

00:26:08,019 --> 00:26:11,200
at a huge list of components that needs

00:26:10,480 --> 00:26:13,840
to be updated

00:26:11,200 --> 00:26:16,299
I recommend tracking it against effort

00:26:13,840 --> 00:26:18,009
and impact right how much impact is this

00:26:16,299 --> 00:26:20,080
going to have and how long is it going

00:26:18,009 --> 00:26:24,309
to take how much effort is it going to

00:26:20,080 --> 00:26:26,320
take to fix it some things might be huge

00:26:24,309 --> 00:26:28,600
impact and very low effort like the

00:26:26,320 --> 00:26:30,250
button icons I think that's a very large

00:26:28,600 --> 00:26:32,830
impact across our application because

00:26:30,250 --> 00:26:33,770
it's used so often but it was a few

00:26:32,830 --> 00:26:37,910
lines that

00:26:33,770 --> 00:26:40,460
fixing right pretty simple versus select

00:26:37,910 --> 00:26:42,290
drop down select drop down also has a

00:26:40,460 --> 00:26:44,450
huge amount of impact because it's used

00:26:42,290 --> 00:26:47,750
so often but it's also a lot more work

00:26:44,450 --> 00:26:49,280
to make it simple so by kind of plotting

00:26:47,750 --> 00:26:51,280
these different components you can get a

00:26:49,280 --> 00:26:54,590
sense of okay this is where I start

00:26:51,280 --> 00:26:56,990
hopefully by intentionally creating

00:26:54,590 --> 00:26:59,060
these accessible components you can

00:26:56,990 --> 00:27:01,190
start to see the impact across your

00:26:59,060 --> 00:27:03,380
organization even if it's not immediate

00:27:01,190 --> 00:27:05,030
just by giving somewhat similar

00:27:03,380 --> 00:27:06,650
presentations to this I've had

00:27:05,030 --> 00:27:09,380
developers come up to me whenever they

00:27:06,650 --> 00:27:11,240
are creating new UI components and start

00:27:09,380 --> 00:27:14,240
asking me you know what do I need to do

00:27:11,240 --> 00:27:16,190
for accessibility is this accessible how

00:27:14,240 --> 00:27:18,770
do I test this what's the expected

00:27:16,190 --> 00:27:20,150
keyboard interaction so just talking

00:27:18,770 --> 00:27:22,430
about these things and starting to build

00:27:20,150 --> 00:27:24,380
them out introducing accessibility

00:27:22,430 --> 00:27:28,760
linters the great way to start building

00:27:24,380 --> 00:27:31,910
out this accessible culture a few

00:27:28,760 --> 00:27:33,800
resources marcy sutton really famous

00:27:31,910 --> 00:27:35,930
within accessibility world especially

00:27:33,800 --> 00:27:38,600
recently gave a talk at clarity and

00:27:35,930 --> 00:27:41,630
introduced me to fable and access works

00:27:38,600 --> 00:27:43,940
which are amazing amazing services that

00:27:41,630 --> 00:27:46,550
let you do usability testing with people

00:27:43,940 --> 00:27:47,600
with disabilities and so if you work at

00:27:46,550 --> 00:27:49,700
a company that doesn't have AI want

00:27:47,600 --> 00:27:51,530
anyone who needed lee uses a screen

00:27:49,700 --> 00:27:54,140
reader this is a great way to ensure

00:27:51,530 --> 00:27:56,120
that you are truly meeting all the

00:27:54,140 --> 00:27:58,250
requirements and making it an enjoyable

00:27:56,120 --> 00:28:01,790
experience for someone who relies on a

00:27:58,250 --> 00:28:04,730
screen reader the a11y project is a site

00:28:01,790 --> 00:28:06,560
you can go to has an amazing checklist

00:28:04,730 --> 00:28:08,690
I've covered a few things off of their

00:28:06,560 --> 00:28:10,910
checklist having gone into full depth

00:28:08,690 --> 00:28:13,310
just for the sake of time so I highly

00:28:10,910 --> 00:28:14,930
recommend checking that out and reading

00:28:13,310 --> 00:28:18,920
over and learning what it means to be

00:28:14,930 --> 00:28:21,080
accessible my biggest piece of advice is

00:28:18,920 --> 00:28:23,210
to use other design systems and

00:28:21,080 --> 00:28:25,370
component libraries don't reinvent the

00:28:23,210 --> 00:28:27,380
wheel right if you're gonna start

00:28:25,370 --> 00:28:29,990
building a date picker my advice is

00:28:27,380 --> 00:28:30,140
don't build a date picker just don't do

00:28:29,990 --> 00:28:32,990
it

00:28:30,140 --> 00:28:36,020
there are dozens out there there are

00:28:32,990 --> 00:28:37,790
accessible ones Airbnb is react dates is

00:28:36,020 --> 00:28:40,520
what we ended up using when we needed to

00:28:37,790 --> 00:28:41,990
build a date picker because the last

00:28:40,520 --> 00:28:44,960
thing you want to do is try to make that

00:28:41,990 --> 00:28:47,140
picker keyboard accessible there's a lot

00:28:44,960 --> 00:28:49,130
to it and screen reader usable

00:28:47,140 --> 00:28:51,470
so many different things you have to

00:28:49,130 --> 00:28:53,240
take into account it is not worth trying

00:28:51,470 --> 00:28:54,760
to do that yourself so if there is

00:28:53,240 --> 00:28:57,980
something out there that you can use

00:28:54,760 --> 00:28:59,930
start there the very first starting

00:28:57,980 --> 00:29:02,570
point should be the semantic HTML

00:28:59,930 --> 00:29:07,010
elements that already exist and then go

00:29:02,570 --> 00:29:09,860
from there so if you want to learn more

00:29:07,010 --> 00:29:12,200
or come say hi find me at the breaks or

00:29:09,860 --> 00:29:14,000
reach out on Twitter if you want to join

00:29:12,200 --> 00:29:15,980
me in building out accessible products

00:29:14,000 --> 00:29:19,640
you can check out our job openings page

00:29:15,980 --> 00:29:22,180
and with that the promised pepper

00:29:19,640 --> 00:29:31,059
picture thank you very much

00:29:22,180 --> 00:29:31,059

YouTube URL: https://www.youtube.com/watch?v=OxD8bU86Zv4


