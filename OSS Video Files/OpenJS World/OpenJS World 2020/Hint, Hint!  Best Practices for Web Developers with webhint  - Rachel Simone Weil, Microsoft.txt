Title: Hint, Hint!  Best Practices for Web Developers with webhint  - Rachel Simone Weil, Microsoft
Publication date: 2020-06-17
Playlist: OpenJS World 2020
Description: 
	
Captions: 
	00:00:00,829 --> 00:00:08,460
hint hint best practices for web

00:00:04,049 --> 00:00:10,800
developers with web hint hi i'm rachel

00:00:08,460 --> 00:00:12,900
simone weil and i was so excited to be

00:00:10,800 --> 00:00:16,170
here with you know virtually with all of

00:00:12,900 --> 00:00:19,830
you virtually at open jeaious world 2020

00:00:16,170 --> 00:00:22,070
so just to introduce myself for years I

00:00:19,830 --> 00:00:26,099
have been a passionate advocate for

00:00:22,070 --> 00:00:29,099
writing code to have fun to play and to

00:00:26,099 --> 00:00:32,520
make art most of my technical talks

00:00:29,099 --> 00:00:34,739
focus on stuff like this so this is an

00:00:32,520 --> 00:00:37,649
art installation I built recently where

00:00:34,739 --> 00:00:40,410
a glitchy television psychic asks you

00:00:37,649 --> 00:00:42,690
existential questions that you interact

00:00:40,410 --> 00:00:44,430
with using a vintage payphone

00:00:42,690 --> 00:00:47,010
I built it by actually reverse

00:00:44,430 --> 00:00:50,039
engineering this phone connecting it to

00:00:47,010 --> 00:00:52,710
a Raspberry Pi built a custom node.js

00:00:50,039 --> 00:00:55,320
web app that cycles through videos

00:00:52,710 --> 00:00:57,120
recorded on a camcorder that are

00:00:55,320 --> 00:01:00,059
processed with a video mixer from the

00:00:57,120 --> 00:01:01,559
90s that I circuit bent so this is sort

00:01:00,059 --> 00:01:04,110
of typical of the kind of work I'm

00:01:01,559 --> 00:01:06,960
interested in I think making art with

00:01:04,110 --> 00:01:08,790
code is a vitally important practice in

00:01:06,960 --> 00:01:11,310
part because of the personal and

00:01:08,790 --> 00:01:13,490
restorative power of fun as well as the

00:01:11,310 --> 00:01:15,840
cultural and political power of art

00:01:13,490 --> 00:01:17,280
that's a talk for another day though but

00:01:15,840 --> 00:01:19,860
hopefully this serves as a good

00:01:17,280 --> 00:01:23,369
introduction to me my creative practice

00:01:19,860 --> 00:01:25,740
and my perspective on coding so one

00:01:23,369 --> 00:01:28,560
thing I think about a lot as a digital

00:01:25,740 --> 00:01:31,380
artist is how to reach people in order

00:01:28,560 --> 00:01:33,240
for our games or our art or our you know

00:01:31,380 --> 00:01:36,180
small businesses storefronts or anything

00:01:33,240 --> 00:01:38,490
that we're working on to actually reach

00:01:36,180 --> 00:01:40,290
people and make a difference it has to

00:01:38,490 --> 00:01:42,659
work for those we're trying to reach

00:01:40,290 --> 00:01:44,100
right so for the web like the website

00:01:42,659 --> 00:01:46,439
has to work I don't think that's a

00:01:44,100 --> 00:01:48,180
controversial statement but what I mean

00:01:46,439 --> 00:01:50,610
is that whatever we're building on the

00:01:48,180 --> 00:01:53,630
web has to work with a variety of

00:01:50,610 --> 00:01:56,939
browsers devices network conditions

00:01:53,630 --> 00:01:58,979
assistive technologies and so on to be

00:01:56,939 --> 00:02:01,560
sure certain that we're not excluding

00:01:58,979 --> 00:02:03,240
perhaps even unintentionally you know

00:02:01,560 --> 00:02:06,450
excluding people who might really want

00:02:03,240 --> 00:02:08,789
to engage with what we're doing making

00:02:06,450 --> 00:02:10,590
the website work it's hard right like it

00:02:08,789 --> 00:02:13,270
works on my machine

00:02:10,590 --> 00:02:16,450
making web apps compatible across

00:02:13,270 --> 00:02:18,430
devices and accessible it's it's hard

00:02:16,450 --> 00:02:20,340
because many of the tools that we can

00:02:18,430 --> 00:02:22,960
use to ensure compatibility or

00:02:20,340 --> 00:02:25,150
accessibility security performance

00:02:22,960 --> 00:02:26,890
things like that there you're scattered

00:02:25,150 --> 00:02:29,530
across tabs they're scattered across

00:02:26,890 --> 00:02:31,900
tools they often intervene too late

00:02:29,530 --> 00:02:35,080
after we've already made a site that

00:02:31,900 --> 00:02:36,610
isn't accessible for example they often

00:02:35,080 --> 00:02:38,620
take us out of our existing dev

00:02:36,610 --> 00:02:40,840
workflows where they aren't really like

00:02:38,620 --> 00:02:42,700
tools at all there may be websites with

00:02:40,840 --> 00:02:45,400
tables and specs to read through which

00:02:42,700 --> 00:02:47,350
you know vital information no doubt but

00:02:45,400 --> 00:02:48,910
no wonder it feels so overwhelming to

00:02:47,350 --> 00:02:51,580
get everything right when there's so

00:02:48,910 --> 00:02:53,770
much to know everything's changing so

00:02:51,580 --> 00:02:56,170
quickly and there's not enough useful

00:02:53,770 --> 00:02:58,360
tooling to keep on top of it and get it

00:02:56,170 --> 00:03:01,060
done and I think that's why a lot of us

00:02:58,360 --> 00:03:03,490
end up just doing spot checks by hand

00:03:01,060 --> 00:03:06,430
and hoping for the best and just waiting

00:03:03,490 --> 00:03:08,860
for the bugs to roll in so I've

00:03:06,430 --> 00:03:11,050
definitely experienced this firsthand in

00:03:08,860 --> 00:03:13,420
my own work as a web developer slash

00:03:11,050 --> 00:03:15,310
artist and I've also heard from hundreds

00:03:13,420 --> 00:03:18,340
and hundreds of web developers in the

00:03:15,310 --> 00:03:20,050
course of my work at Microsoft where I'm

00:03:18,340 --> 00:03:23,320
a product manager for the new chromium

00:03:20,050 --> 00:03:25,510
based Microsoft edge dev tools in any

00:03:23,320 --> 00:03:28,420
case like the message is clear making

00:03:25,510 --> 00:03:30,550
sites compatible accessible you know plu

00:03:28,420 --> 00:03:32,140
a ready with all of these sort of

00:03:30,550 --> 00:03:33,700
up-to-the-minute best practices and

00:03:32,140 --> 00:03:36,190
latest features in place is a really

00:03:33,700 --> 00:03:38,410
hard work and that's why today I'm

00:03:36,190 --> 00:03:41,200
excited to be talking about web hint

00:03:38,410 --> 00:03:43,660
which is a free and open-source suite of

00:03:41,200 --> 00:03:45,670
tools that help you address these

00:03:43,660 --> 00:03:47,380
challenging and time-intensive parts of

00:03:45,670 --> 00:03:50,080
developing and debugging for the web

00:03:47,380 --> 00:03:52,060
before your app is out in the wild so

00:03:50,080 --> 00:03:54,040
that instead of trying to track down

00:03:52,060 --> 00:03:56,320
bugs and spending a lot of time

00:03:54,040 --> 00:03:58,870
collating resources to help you make

00:03:56,320 --> 00:04:00,640
sure your site is compatible you can get

00:03:58,870 --> 00:04:03,459
back to the really important stuff like

00:04:00,640 --> 00:04:06,130
remaking Windows 95 screen saver zin

00:04:03,459 --> 00:04:09,880
JavaScript I really wish you could hear

00:04:06,130 --> 00:04:13,420
the MIDI playing right now so what is

00:04:09,880 --> 00:04:16,269
web hint as the name suggests it gives

00:04:13,420 --> 00:04:19,720
hence to web developers but not like

00:04:16,269 --> 00:04:21,320
this we actually call it a customizable

00:04:19,720 --> 00:04:23,420
linter for the web

00:04:21,320 --> 00:04:26,030
because like a linter it analyzes your

00:04:23,420 --> 00:04:28,400
code in this case you know HTML CSS

00:04:26,030 --> 00:04:30,770
JavaScript typescript bundler

00:04:28,400 --> 00:04:32,930
configuration files templates and lets

00:04:30,770 --> 00:04:35,060
you know about things that won't work in

00:04:32,930 --> 00:04:37,670
you know Safari or Internet Explorer or

00:04:35,060 --> 00:04:39,950
won't work for screen reader users or

00:04:37,670 --> 00:04:42,620
you know what things pose a security

00:04:39,950 --> 00:04:44,840
risk or will break the experience for

00:04:42,620 --> 00:04:46,850
certain users like a linter it's

00:04:44,840 --> 00:04:49,160
customizable so if there are rules you

00:04:46,850 --> 00:04:51,260
want to disable or warnings you want to

00:04:49,160 --> 00:04:53,410
turn into errors you can see I'm

00:04:51,260 --> 00:04:57,470
actually doing that through a web

00:04:53,410 --> 00:04:59,750
configuration file like many good linter

00:04:57,470 --> 00:05:01,640
web hint also runs as a command-line

00:04:59,750 --> 00:05:04,310
tool so you can incorporate it into your

00:05:01,640 --> 00:05:06,770
CI workflow I've already installed web

00:05:04,310 --> 00:05:09,350
hint here via NPM and now I'm just

00:05:06,770 --> 00:05:13,850
running hint and the website I want to

00:05:09,350 --> 00:05:15,470
scan and here it's actually running an

00:05:13,850 --> 00:05:17,270
instance of that it's going to spit out

00:05:15,470 --> 00:05:21,680
an HTML report along with a short

00:05:17,270 --> 00:05:24,380
summary of findings weapon in addition

00:05:21,680 --> 00:05:26,390
to this also is available as AVS code

00:05:24,380 --> 00:05:28,670
extension where these insights are

00:05:26,390 --> 00:05:31,160
brought into vs code into your IDE

00:05:28,670 --> 00:05:33,230
directly so you can get feedback while

00:05:31,160 --> 00:05:36,290
you're coding and this is so so critical

00:05:33,230 --> 00:05:38,210
so you can see here I have issues both

00:05:36,290 --> 00:05:40,340
in the problems pane and then when I

00:05:38,210 --> 00:05:41,750
mouse over an item as well I'm getting

00:05:40,340 --> 00:05:45,290
those little squigglies to let me know

00:05:41,750 --> 00:05:48,860
that something's amiss in addition to

00:05:45,290 --> 00:05:52,160
all this webhead also offers a dev tools

00:05:48,860 --> 00:05:54,950
extension for Firefox edge and chrome

00:05:52,160 --> 00:05:57,680
and this will allow you to do runtime

00:05:54,950 --> 00:06:00,280
analysis on your page maybe as you're

00:05:57,680 --> 00:06:02,660
debugging or maybe after you've deployed

00:06:00,280 --> 00:06:04,670
so in this case web hint creates a new

00:06:02,660 --> 00:06:07,550
tab in the dev tools that extension

00:06:04,670 --> 00:06:10,400
where you can go and run on-demand scans

00:06:07,550 --> 00:06:12,950
and take a look at the results in

00:06:10,400 --> 00:06:15,470
addition to this there is even an online

00:06:12,950 --> 00:06:17,810
scanner for those who want a kind of

00:06:15,470 --> 00:06:19,490
more traditional audit this is great for

00:06:17,810 --> 00:06:22,100
non-technical folks you don't have to

00:06:19,490 --> 00:06:25,640
install anything it just runs straight

00:06:22,100 --> 00:06:28,490
on the web hint IO website so there are

00:06:25,640 --> 00:06:30,919
a lot of different offerings as part of

00:06:28,490 --> 00:06:32,750
web hint but instead of me just talking

00:06:30,919 --> 00:06:35,000
about all of these things I won't

00:06:32,750 --> 00:06:35,480
actually run through a demo building a

00:06:35,000 --> 00:06:37,580
web apps

00:06:35,480 --> 00:06:41,240
I can show you how web hint actually

00:06:37,580 --> 00:06:43,970
works so I am actually redoing my

00:06:41,240 --> 00:06:48,080
personal website and I have started with

00:06:43,970 --> 00:06:50,120
a totally almost totally blank repo no

00:06:48,080 --> 00:06:53,660
frameworks no dependencies just some

00:06:50,120 --> 00:06:56,750
blank a blank index.html blank style dot

00:06:53,660 --> 00:06:59,180
CSS keeping it really really simple

00:06:56,750 --> 00:07:01,460
today because I want to focus just on a

00:06:59,180 --> 00:07:03,680
web hint it's the only thing I've done

00:07:01,460 --> 00:07:05,360
here is you know create the repo on

00:07:03,680 --> 00:07:07,220
github I've cloned it down and I've

00:07:05,360 --> 00:07:09,590
added a github action that will run

00:07:07,220 --> 00:07:11,060
whenever I create a release and that

00:07:09,590 --> 00:07:13,580
will actually deploy my web app from

00:07:11,060 --> 00:07:15,530
github this is just the standard default

00:07:13,580 --> 00:07:17,150
vml file that gets created when you set

00:07:15,530 --> 00:07:19,190
up a github action for deploying to

00:07:17,150 --> 00:07:21,380
Azure obviously choose whatever hosting

00:07:19,190 --> 00:07:24,830
you want whatever pipeline you want I

00:07:21,380 --> 00:07:26,990
just wanted to try this out today so I'm

00:07:24,830 --> 00:07:30,290
gonna go ahead now and install the web

00:07:26,990 --> 00:07:32,990
hint extension for vs code and this is

00:07:30,290 --> 00:07:36,080
gonna help me get real-time feedback on

00:07:32,990 --> 00:07:37,970
my web code while I'm coding so let's go

00:07:36,080 --> 00:07:41,090
ahead and try this out I'm going to go

00:07:37,970 --> 00:07:43,490
back to my project here and open up my

00:07:41,090 --> 00:07:46,940
blank there's nothing scarier than a

00:07:43,490 --> 00:07:50,000
blank page I'm gonna go ahead I'm gonna

00:07:46,940 --> 00:07:51,830
do this just like very very old-school I

00:07:50,000 --> 00:07:54,710
deeply apologize but again I want to

00:07:51,830 --> 00:07:57,530
keep this really really simple I'm just

00:07:54,710 --> 00:08:01,970
gonna create the simplest HTML page I

00:07:57,530 --> 00:08:04,700
can think of all right so I think the

00:08:01,970 --> 00:08:06,530
next thing I want to do is add an image

00:08:04,700 --> 00:08:08,810
so for my website

00:08:06,530 --> 00:08:12,260
I have this great picture of me hanging

00:08:08,810 --> 00:08:13,550
out with Hello Kitty I vent it's it's

00:08:12,260 --> 00:08:16,180
someone in a Hello Kitty suit okay

00:08:13,550 --> 00:08:18,620
that's a story for another time

00:08:16,180 --> 00:08:21,610
you can see I've got a red squiggly

00:08:18,620 --> 00:08:24,620
under my image tag when I mouse over it

00:08:21,610 --> 00:08:26,270
or if I open up the problems pane MDS

00:08:24,620 --> 00:08:28,610
code I'm actually seeing web hint

00:08:26,270 --> 00:08:31,820
letting me know my image doesn't have

00:08:28,610 --> 00:08:33,370
alt text which is really valuable for

00:08:31,820 --> 00:08:36,680
accessibility for screen readers

00:08:33,370 --> 00:08:38,930
so now you can see as I add the alt tag

00:08:36,680 --> 00:08:40,790
here that problem immediately went away

00:08:38,930 --> 00:08:42,380
and that red underline went away so this

00:08:40,790 --> 00:08:44,570
is an awesome example of getting

00:08:42,380 --> 00:08:46,180
real-time feedback while you're coding

00:08:44,570 --> 00:08:48,190
about four

00:08:46,180 --> 00:08:49,899
sample accessibility problems of course

00:08:48,190 --> 00:08:53,970
accessibility is just one of the things

00:08:49,899 --> 00:08:56,620
that web hint checks alright so

00:08:53,970 --> 00:08:59,320
obviously this is a very simple demo

00:08:56,620 --> 00:09:01,149
let's do a little bit more depth so we

00:08:59,320 --> 00:09:03,700
can get a little bit more realistic and

00:09:01,149 --> 00:09:09,640
I'm gonna try something here let's see

00:09:03,700 --> 00:09:11,140
if this works okay ready awesome okay

00:09:09,640 --> 00:09:12,940
that is one cool thing about remote

00:09:11,140 --> 00:09:14,290
conferences writing that code would have

00:09:12,940 --> 00:09:17,890
taken a lot longer without a little

00:09:14,290 --> 00:09:19,360
video magic so now you can see that I've

00:09:17,890 --> 00:09:22,029
written some more code I've actually

00:09:19,360 --> 00:09:24,220
already gone through and addressed all

00:09:22,029 --> 00:09:26,620
of the errors so now I'm just left with

00:09:24,220 --> 00:09:28,600
warnings which are like nice to fix but

00:09:26,620 --> 00:09:30,100
won't necessarily break my build now I

00:09:28,600 --> 00:09:32,500
can go through these just like I would

00:09:30,100 --> 00:09:34,089
with a linter and fix them for my first

00:09:32,500 --> 00:09:36,370
check-in if I decide to which is super

00:09:34,089 --> 00:09:39,790
cool you can see here I have a lot of

00:09:36,370 --> 00:09:42,730
style issues those are actually related

00:09:39,790 --> 00:09:44,290
to a lot of content around CSS grid

00:09:42,730 --> 00:09:46,690
which has compatibility issues with

00:09:44,290 --> 00:09:48,190
Internet Explorer so now it's kind of up

00:09:46,690 --> 00:09:51,010
to me as a developer I can make the

00:09:48,190 --> 00:09:53,230
decision whether I want to fix those so

00:09:51,010 --> 00:09:55,750
that I have full compatibility with

00:09:53,230 --> 00:09:57,490
Internet Explorer or I could alter my

00:09:55,750 --> 00:09:57,970
webcam configuration to say hey in the

00:09:57,490 --> 00:10:00,339
future

00:09:57,970 --> 00:10:02,680
I actually don't warn me about IE

00:10:00,339 --> 00:10:05,620
compatibility that's not a browser that

00:10:02,680 --> 00:10:07,480
I'm targeting so yeah this is really

00:10:05,620 --> 00:10:10,089
cool now I mentioned that webhead has

00:10:07,480 --> 00:10:12,279
CLI as well which can be integrated into

00:10:10,089 --> 00:10:14,500
your release pipeline so obviously you'd

00:10:12,279 --> 00:10:16,690
love to catch as many issues as you can

00:10:14,500 --> 00:10:19,029
and development it because as soon as I

00:10:16,690 --> 00:10:20,740
save you a lot of time and obviously

00:10:19,029 --> 00:10:23,200
it's gonna it's gonna make your

00:10:20,740 --> 00:10:25,029
debugging a lot easier but you might

00:10:23,200 --> 00:10:27,910
miss some you might be inheriting legacy

00:10:25,029 --> 00:10:30,040
code there also some hints that can't

00:10:27,910 --> 00:10:31,900
run in the BS code extension because it

00:10:30,040 --> 00:10:34,000
does just do static analysis to keep it

00:10:31,900 --> 00:10:35,579
really performant so this is a great

00:10:34,000 --> 00:10:37,870
first pass to address a ton of issues

00:10:35,579 --> 00:10:39,640
but then it's even better to actually

00:10:37,870 --> 00:10:45,430
follow that up with a sort of runtime

00:10:39,640 --> 00:10:47,649
analysis so again for this project I if

00:10:45,430 --> 00:10:50,410
I want to integrate web hit into my

00:10:47,649 --> 00:10:53,260
pipeline I can actually just add web him

00:10:50,410 --> 00:10:55,000
into my oh yeah I don't even actually

00:10:53,260 --> 00:10:57,400
have a package love JSON yet so let me

00:10:55,000 --> 00:10:57,710
create one first first things first let

00:10:57,400 --> 00:10:59,960
me

00:10:57,710 --> 00:11:02,330
create a package that they sense I can

00:10:59,960 --> 00:11:05,720
actually add web hint as a dev

00:11:02,330 --> 00:11:09,680
dependency to this project and then I

00:11:05,720 --> 00:11:12,440
can kind of rely on that to run in my

00:11:09,680 --> 00:11:14,540
pipeline so I'm just gonna add keep in

00:11:12,440 --> 00:11:18,080
mind the NPM package for web hint is

00:11:14,540 --> 00:11:18,980
called hint I think if you try web hint

00:11:18,080 --> 00:11:21,410
it's not gonna work or a little

00:11:18,980 --> 00:11:23,840
readwrite to you but but just remember

00:11:21,410 --> 00:11:26,150
it is called hint when you bring it in

00:11:23,840 --> 00:11:28,670
from NPM and then I'm just going to go

00:11:26,150 --> 00:11:31,550
ahead and create a script in this

00:11:28,670 --> 00:11:33,410
package so JSON to run hint and here you

00:11:31,550 --> 00:11:35,840
can choose to run it against one or more

00:11:33,410 --> 00:11:37,880
local files of course you can run it for

00:11:35,840 --> 00:11:40,790
folders you could maybe have like a

00:11:37,880 --> 00:11:43,280
staging staging server or maybe you push

00:11:40,790 --> 00:11:45,080
files to staging first and then run the

00:11:43,280 --> 00:11:47,960
scan is totally up to you totally

00:11:45,080 --> 00:11:50,510
customizable so now I have this script

00:11:47,960 --> 00:11:53,690
I'm actually go back to my llamo file

00:11:50,510 --> 00:11:55,880
for my github action again you don't use

00:11:53,690 --> 00:11:56,750
github or either I'm just doing it

00:11:55,880 --> 00:11:59,480
because that's what I'm familiar with

00:11:56,750 --> 00:12:02,810
and I'm gonna add that script the NPM

00:11:59,480 --> 00:12:06,650
run hint right after the npm install so

00:12:02,810 --> 00:12:08,270
now you know when i run that github

00:12:06,650 --> 00:12:12,320
action it's going to run that script and

00:12:08,270 --> 00:12:14,300
that is pretty much it so let's go ahead

00:12:12,320 --> 00:12:16,130
and check this in and push it up to

00:12:14,300 --> 00:12:18,110
github again you know if you use github

00:12:16,130 --> 00:12:20,470
I'm just using it because it's what I'm

00:12:18,110 --> 00:12:23,210
most familiar with in terms of like

00:12:20,470 --> 00:12:25,370
pipeline integrations we have on the web

00:12:23,210 --> 00:12:27,050
hedione website some other examples of

00:12:25,370 --> 00:12:29,660
getting set up with travis circle

00:12:27,050 --> 00:12:31,760
they're all really similar just because

00:12:29,660 --> 00:12:33,650
this is a command-line tool so it's all

00:12:31,760 --> 00:12:37,760
pretty much the same underlying concept

00:12:33,650 --> 00:12:40,550
which is like run the script please so

00:12:37,760 --> 00:12:43,850
now I'm gonna go ahead and queue up a

00:12:40,550 --> 00:12:46,160
release in github and that will actually

00:12:43,850 --> 00:12:48,350
eventually trigger my github action so

00:12:46,160 --> 00:12:50,300
I'm actually getting a little bit new to

00:12:48,350 --> 00:12:52,190
all of this but it seems pretty easy I

00:12:50,300 --> 00:12:55,760
started trying it out yesterday I think

00:12:52,190 --> 00:12:57,650
it just works so that's pretty cool so

00:12:55,760 --> 00:13:00,050
what's gonna happen here is that I'm

00:12:57,650 --> 00:13:02,600
gonna create this release the github

00:13:00,050 --> 00:13:04,700
action is actually going to run web hint

00:13:02,600 --> 00:13:07,250
against my repo or my file or whatever

00:13:04,700 --> 00:13:09,880
I've selected in that script in my case

00:13:07,250 --> 00:13:12,460
I just chose that index.html

00:13:09,880 --> 00:13:14,740
and if it passes the checks its going to

00:13:12,460 --> 00:13:16,420
deploy a web app and if it doesn't pass

00:13:14,740 --> 00:13:19,060
the checks it's going to break the build

00:13:16,420 --> 00:13:21,460
and that's actually what we want right

00:13:19,060 --> 00:13:24,220
like we want to know if there are

00:13:21,460 --> 00:13:27,010
problems before we release our app not

00:13:24,220 --> 00:13:29,530
just after so in this case breaking the

00:13:27,010 --> 00:13:31,780
bill to be a good thing so you can see

00:13:29,530 --> 00:13:34,120
here it's actually running this pipeline

00:13:31,780 --> 00:13:36,430
it's pretty cool you can you can see

00:13:34,120 --> 00:13:39,310
every step this is just running through

00:13:36,430 --> 00:13:42,310
those steps in the yellow file that I

00:13:39,310 --> 00:13:43,870
showed earlier and then we can drill in

00:13:42,310 --> 00:13:46,540
here and actually watch this step

00:13:43,870 --> 00:13:48,630
running this is the thrilling part where

00:13:46,540 --> 00:13:52,570
we see whether the build passes or not

00:13:48,630 --> 00:13:55,150
yes it did okay cool so we scroll down

00:13:52,570 --> 00:13:58,030
here you can see it's actually reporting

00:13:55,150 --> 00:14:00,130
out that it did find it found one

00:13:58,030 --> 00:14:02,110
warning but it didn't find any errors

00:14:00,130 --> 00:14:04,960
and so it's it's actually pasta build

00:14:02,110 --> 00:14:07,210
and from this part you know all that's

00:14:04,960 --> 00:14:09,820
left to do is that it's going to deploy

00:14:07,210 --> 00:14:12,340
the site because the the web hint checks

00:14:09,820 --> 00:14:13,660
passed which is really cool I'm sure

00:14:12,340 --> 00:14:17,980
some of you wanted to see the build

00:14:13,660 --> 00:14:22,330
break in the live demo you know there's

00:14:17,980 --> 00:14:23,880
still time though who knows so this is

00:14:22,330 --> 00:14:26,050
really awesome as a proof of concept

00:14:23,880 --> 00:14:29,500
obviously it's just like a first pass

00:14:26,050 --> 00:14:31,870
very simple very very you know

00:14:29,500 --> 00:14:33,850
bare-bones but you can see that in a

00:14:31,870 --> 00:14:36,010
couple of minutes I was actually able to

00:14:33,850 --> 00:14:38,980
get this work working get it set up in

00:14:36,010 --> 00:14:41,680
the IDE get those checks straight into

00:14:38,980 --> 00:14:44,560
vs code and then actually integrate it

00:14:41,680 --> 00:14:46,480
into my deployment process as well but

00:14:44,560 --> 00:14:49,240
where this can get really powerful is

00:14:46,480 --> 00:14:52,720
when you start customizing web hint so

00:14:49,240 --> 00:14:54,070
maybe for example you think about my my

00:14:52,720 --> 00:14:56,320
website where I had all of those

00:14:54,070 --> 00:14:59,080
warnings about grid and Internet

00:14:56,320 --> 00:15:01,510
Explorer maybe I would actually like my

00:14:59,080 --> 00:15:03,240
build astray that fail if my features

00:15:01,510 --> 00:15:05,590
aren't compatible with all browsers

00:15:03,240 --> 00:15:07,660
maybe I want my bill to fail if I have

00:15:05,590 --> 00:15:10,840
any accessibility problem whatsoever

00:15:07,660 --> 00:15:13,720
and so that's where the hint RC file

00:15:10,840 --> 00:15:16,810
comes in so if you've used other linters

00:15:13,720 --> 00:15:19,630
like es lint has the es lint RC file

00:15:16,810 --> 00:15:22,899
it's a really similar concept we have a

00:15:19,630 --> 00:15:24,699
hint RC file and

00:15:22,899 --> 00:15:26,980
take a look at the web hand i/o website

00:15:24,699 --> 00:15:28,809
you'll find a lot of documentation about

00:15:26,980 --> 00:15:30,939
what you can configure in the hint RC

00:15:28,809 --> 00:15:32,949
file you can choose your parser you can

00:15:30,939 --> 00:15:34,629
choose which hints you want to run you

00:15:32,949 --> 00:15:36,009
can change how the results are output

00:15:34,629 --> 00:15:38,740
you know if you want them in an HTML

00:15:36,009 --> 00:15:41,889
file if you want the console you can

00:15:38,740 --> 00:15:44,199
change the severity of a hint so that

00:15:41,889 --> 00:15:47,110
things get flagged or don't get flagged

00:15:44,199 --> 00:15:49,119
by your testing pipeline keep in mind

00:15:47,110 --> 00:15:52,300
you don't actually need a hint RC file

00:15:49,119 --> 00:15:54,550
for using the S code or the CLI I didn't

00:15:52,300 --> 00:15:56,889
have one in my demo we do have defaults

00:15:54,550 --> 00:15:59,639
in place but that option is there if you

00:15:56,889 --> 00:16:02,230
want to get more customized results

00:15:59,639 --> 00:16:04,720
another cool thing is you can actually

00:16:02,230 --> 00:16:06,279
use you know the same hint RC files and

00:16:04,720 --> 00:16:07,689
feeis code in CLI so you have these sort

00:16:06,279 --> 00:16:09,819
of predictable checks throughout your

00:16:07,689 --> 00:16:12,459
pipeline and it's pretty easy to create

00:16:09,819 --> 00:16:15,160
a hint RC file using the command NPM

00:16:12,459 --> 00:16:18,100
create in tar see we have some Doc's on

00:16:15,160 --> 00:16:19,929
our website about that as well so you

00:16:18,100 --> 00:16:22,600
might be wondering like hey what are all

00:16:19,929 --> 00:16:24,699
these hints exactly why should I trust

00:16:22,600 --> 00:16:26,619
web hint to be the arbiter of best

00:16:24,699 --> 00:16:29,379
practices for the web and that's totally

00:16:26,619 --> 00:16:30,730
fair question the reality is we think

00:16:29,379 --> 00:16:33,129
web developers are in the best position

00:16:30,730 --> 00:16:36,249
to know what web developers need and

00:16:33,129 --> 00:16:38,139
what best practices are so on the web

00:16:36,249 --> 00:16:40,959
hat team you know we we think about it

00:16:38,139 --> 00:16:44,259
this way we aggregate information from

00:16:40,959 --> 00:16:47,559
up-to-date open source sources like you

00:16:44,259 --> 00:16:50,019
know MD ins compatibility api's we use

00:16:47,559 --> 00:16:52,990
axe core for surfacing accessibility

00:16:50,019 --> 00:16:55,059
information sneak and and other things

00:16:52,990 --> 00:16:57,579
like that and so we are not in charge of

00:16:55,059 --> 00:17:01,509
keeping these up to date we've rely on

00:16:57,579 --> 00:17:04,720
really I think sort of industry-leading

00:17:01,509 --> 00:17:07,149
open source communities to to surface us

00:17:04,720 --> 00:17:09,159
up and then in addition to that many of

00:17:07,149 --> 00:17:10,600
our hunts are hints come from the

00:17:09,159 --> 00:17:12,520
community as well like they come from

00:17:10,600 --> 00:17:14,260
you so it's as simple as you know

00:17:12,520 --> 00:17:16,809
creating an issue or a PR against web

00:17:14,260 --> 00:17:18,640
hint and saying like hey I think this is

00:17:16,809 --> 00:17:21,640
a check that would be really valuable to

00:17:18,640 --> 00:17:24,279
web developers you know that being said

00:17:21,640 --> 00:17:27,069
you can also create bespoke hints that

00:17:24,279 --> 00:17:28,899
are just for you or just for your team

00:17:27,069 --> 00:17:32,260
you don't have to contribute them back

00:17:28,899 --> 00:17:34,150
up so we have a tool for creating hints

00:17:32,260 --> 00:17:36,100
it's just NPM and it hit

00:17:34,150 --> 00:17:38,260
and you'll get watched through creating

00:17:36,100 --> 00:17:40,660
your own set of hints which you can

00:17:38,260 --> 00:17:42,820
import into your own projects without

00:17:40,660 --> 00:17:45,040
necessarily contributing them back up to

00:17:42,820 --> 00:17:47,350
web hints so this is again really cool

00:17:45,040 --> 00:17:49,510
for developing new hints that might be

00:17:47,350 --> 00:17:53,350
specific to your team or your

00:17:49,510 --> 00:17:55,390
organization so another thing I wanted

00:17:53,350 --> 00:17:57,670
to mention that's pretty exciting is

00:17:55,390 --> 00:17:59,230
that just a few days ago actually the

00:17:57,670 --> 00:18:01,720
edge dev tools team that I'm part of

00:17:59,230 --> 00:18:03,610
released an experimental feature in the

00:18:01,720 --> 00:18:05,860
dev tools where we actually bring in web

00:18:03,610 --> 00:18:09,030
hint directly into the dev tools to

00:18:05,860 --> 00:18:11,770
surface real time runtime analysis

00:18:09,030 --> 00:18:13,570
directly in schedules in a new panel

00:18:11,770 --> 00:18:16,660
called issues so you can see I've just

00:18:13,570 --> 00:18:19,270
enabled that experiment here and this is

00:18:16,660 --> 00:18:21,730
kind of like the web browser extension

00:18:19,270 --> 00:18:26,020
experience but it's better because it

00:18:21,730 --> 00:18:27,880
streams in and live updates and so it's

00:18:26,020 --> 00:18:30,070
not just like an on-demand audit it's

00:18:27,880 --> 00:18:32,350
kind of continuously updating as you

00:18:30,070 --> 00:18:34,120
navigate between pages and of course

00:18:32,350 --> 00:18:36,100
it's right there in the developer tools

00:18:34,120 --> 00:18:38,470
you're already using you don't have to

00:18:36,100 --> 00:18:40,540
install anything but what's even cooler

00:18:38,470 --> 00:18:42,280
is that when you actually go through and

00:18:40,540 --> 00:18:44,860
click you know click through these

00:18:42,280 --> 00:18:46,690
affected resources you get links to

00:18:44,860 --> 00:18:49,510
documentation to let you know how to fix

00:18:46,690 --> 00:18:51,550
things and you also get the ability to

00:18:49,510 --> 00:18:53,830
actually see what resources effect are

00:18:51,550 --> 00:18:56,080
affected and when you click on those as

00:18:53,830 --> 00:18:57,850
you can see here they're actually taking

00:18:56,080 --> 00:19:01,750
me to those relevant places in the

00:18:57,850 --> 00:19:04,000
network tab or in the sources tab so I

00:19:01,750 --> 00:19:08,290
have this really great like contextual

00:19:04,000 --> 00:19:11,290
tooling so you might be surprised to see

00:19:08,290 --> 00:19:13,300
how many issues the web hint website has

00:19:11,290 --> 00:19:16,630
right it's kind of ironic like don't we

00:19:13,300 --> 00:19:18,310
run web hint against webhead we do but

00:19:16,630 --> 00:19:20,440
as you look through these issues you'll

00:19:18,310 --> 00:19:22,450
see that these are largely issues with

00:19:20,440 --> 00:19:23,980
third-party code that we import so you

00:19:22,450 --> 00:19:27,490
can see there's like stuff from CBN's

00:19:23,980 --> 00:19:29,110
it's like Google Analytics stuff in the

00:19:27,490 --> 00:19:31,180
browser extension we actually give the

00:19:29,110 --> 00:19:33,100
user the ability to filter those out

00:19:31,180 --> 00:19:34,810
because we realize that you're not

00:19:33,100 --> 00:19:37,660
necessarily always in charge of

00:19:34,810 --> 00:19:39,460
third-party code and so in a future

00:19:37,660 --> 00:19:42,640
release of this web cam experiment dev

00:19:39,460 --> 00:19:44,710
tools we're also planning to give the

00:19:42,640 --> 00:19:46,120
users the ability to filter out third

00:19:44,710 --> 00:19:47,440
party because again you can't always

00:19:46,120 --> 00:19:50,590
control what you get

00:19:47,440 --> 00:19:53,710
CDN you can't necessarily go and fix

00:19:50,590 --> 00:19:57,690
something so if you want to try this it

00:19:53,710 --> 00:20:01,299
is an edge 85 and up and edge dev tools

00:19:57,690 --> 00:20:02,860
it's in just canary right now depending

00:20:01,299 --> 00:20:04,389
on when you're watching this I'm not

00:20:02,860 --> 00:20:07,090
sure what what version of edge will be

00:20:04,389 --> 00:20:09,250
latest but edge 85 and up you should be

00:20:07,090 --> 00:20:11,169
able to just go to dev tools go to dev

00:20:09,250 --> 00:20:14,049
tools settings and enable the web hint

00:20:11,169 --> 00:20:16,360
experiment restart dev tools and it

00:20:14,049 --> 00:20:18,720
should pop up for you this is a really

00:20:16,360 --> 00:20:20,980
cool example of a case where you know

00:20:18,720 --> 00:20:22,690
you know I'm excited about this because

00:20:20,980 --> 00:20:25,120
obviously I work on edge dev tools and

00:20:22,690 --> 00:20:27,340
web hint I've heard a lot of dev tools

00:20:25,120 --> 00:20:28,960
users say you know please help me with

00:20:27,340 --> 00:20:30,460
cross-browser testing it's so

00:20:28,960 --> 00:20:32,950
challenging help me with accessibility

00:20:30,460 --> 00:20:35,320
and then to be able to like go out and

00:20:32,950 --> 00:20:37,330
leverage an open-source tool like web

00:20:35,320 --> 00:20:39,940
hint to do that that's so like community

00:20:37,330 --> 00:20:43,659
oriented I think is really super super

00:20:39,940 --> 00:20:46,240
cool so I think in terms of what's next

00:20:43,659 --> 00:20:48,399
for the web hint project you know we've

00:20:46,240 --> 00:20:50,379
released our official v1 of the browser

00:20:48,399 --> 00:20:53,169
extensions the vs Co exceptions late

00:20:50,379 --> 00:20:56,470
last year this dev tools integration is

00:20:53,169 --> 00:20:58,149
super new there's a lot of new stuff and

00:20:56,470 --> 00:20:59,919
so I think what the team is really focus

00:20:58,149 --> 00:21:01,870
on now is just getting this in front of

00:20:59,919 --> 00:21:03,879
web developers spreading the word

00:21:01,870 --> 00:21:06,100
hearing from users so we can understand

00:21:03,879 --> 00:21:08,169
how to make these tools even better so

00:21:06,100 --> 00:21:09,610
if you're already using web hint or you

00:21:08,169 --> 00:21:12,100
think you might like to start now that

00:21:09,610 --> 00:21:15,149
you've seen some of what it can do I

00:21:12,100 --> 00:21:17,980
really encourage you to reach out to us

00:21:15,149 --> 00:21:20,710
let us know what you like what's

00:21:17,980 --> 00:21:23,470
confusing what could be better you can

00:21:20,710 --> 00:21:27,389
find us on github at web hint io twitter

00:21:23,470 --> 00:21:30,700
at web hint io and online at web hit io

00:21:27,389 --> 00:21:32,679
I'm pretty easy to remember huh I've

00:21:30,700 --> 00:21:34,809
also encouraged you like definitely feel

00:21:32,679 --> 00:21:36,850
free to reach out to me personally you

00:21:34,809 --> 00:21:39,789
can find me on Twitter at Party Time

00:21:36,850 --> 00:21:42,759
excellent I'm there way too much github

00:21:39,789 --> 00:21:44,590
HX l NT I would love to personally email

00:21:42,759 --> 00:21:46,809
with you a schedule video call if you're

00:21:44,590 --> 00:21:50,500
a user of webhead I would love to hear

00:21:46,809 --> 00:21:52,870
more about your experiences I did want

00:21:50,500 --> 00:21:54,730
to say too I know I didn't get a chance

00:21:52,870 --> 00:21:58,440
to finish my website I didn't even show

00:21:54,730 --> 00:22:01,240
it well I should that was systole

00:21:58,440 --> 00:22:02,980
I'm gonna continue working on my

00:22:01,240 --> 00:22:05,650
personal website and I'm actually

00:22:02,980 --> 00:22:07,240
planning to a livestream it on Twitch so

00:22:05,650 --> 00:22:08,980
you can find me on if you're interested

00:22:07,240 --> 00:22:10,450
in watching live coding I'm seeing some

00:22:08,980 --> 00:22:12,130
of the dev tools that I use in my own

00:22:10,450 --> 00:22:16,090
development process

00:22:12,130 --> 00:22:17,410
i'm on twitch also HX l NT i would love

00:22:16,090 --> 00:22:20,890
for you to come hang out with me and

00:22:17,410 --> 00:22:22,150
watch me build a website so I know I'm

00:22:20,890 --> 00:22:24,160
getting really close to the end of my

00:22:22,150 --> 00:22:26,530
time and I understand we're gonna pause

00:22:24,160 --> 00:22:28,630
here for some live Q&A for folks who are

00:22:26,530 --> 00:22:31,300
tuning in to open Jay s world in real

00:22:28,630 --> 00:22:33,610
time so I will see you there otherwise I

00:22:31,300 --> 00:22:35,830
really appreciate your time thank you so

00:22:33,610 --> 00:22:37,720
much to the open Jay s foundation webmin

00:22:35,830 --> 00:22:40,020
is an open Jay's foundation project so

00:22:37,720 --> 00:22:44,670
we really appreciate their support

00:22:40,020 --> 00:22:44,670

YouTube URL: https://www.youtube.com/watch?v=5qNxiBrOk1U


