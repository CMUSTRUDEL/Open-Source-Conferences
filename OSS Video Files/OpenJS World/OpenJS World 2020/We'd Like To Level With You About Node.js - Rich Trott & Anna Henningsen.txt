Title: We'd Like To Level With You About Node.js - Rich Trott & Anna Henningsen
Publication date: 2020-06-17
Playlist: OpenJS World 2020
Description: 
	We'd Like To Level With You About Node.js - Rich Trott, University of California, San Francisco & Anna Henningsen, NearForm
Captions: 
	00:00:00,060 --> 00:00:11,010
hi I'm rich that's a night Hey yeah and

00:00:08,269 --> 00:00:13,410
this is weird we don't know what to do

00:00:11,010 --> 00:00:15,630
we're recording this ahead of time this

00:00:13,410 --> 00:00:20,369
is not how we planned on on this

00:00:15,630 --> 00:00:21,480
happening but we're going to try this

00:00:20,369 --> 00:00:23,420
out see how this goes

00:00:21,480 --> 00:00:29,550
welcome to we'd like to level with you

00:00:23,420 --> 00:00:33,739
about nodejs oh yeah I guess that means

00:00:29,550 --> 00:00:36,270
I should introduce myself so language I

00:00:33,739 --> 00:00:38,219
on the no chest technical steering

00:00:36,270 --> 00:00:42,180
committee we both have been contributing

00:00:38,219 --> 00:00:45,629
to no just for a long time now in my

00:00:42,180 --> 00:00:50,309
cases I think four and a half years now

00:00:45,629 --> 00:00:52,680
which probably even a bit longer so yeah

00:00:50,309 --> 00:00:56,039
what so I work for a company called me a

00:00:52,680 --> 00:00:57,180
firm and particular in the department

00:00:56,039 --> 00:01:00,149
called me a firm research which

00:00:57,180 --> 00:01:03,809
basically means I get to do work on cool

00:01:00,149 --> 00:01:06,540
next-generation noisiest features and

00:01:03,809 --> 00:01:07,619
I'm rich truck I work for the universe

00:01:06,540 --> 00:01:09,659
California San Francisco in their

00:01:07,619 --> 00:01:13,080
library I've been involved in the course

00:01:09,659 --> 00:01:14,820
since I think 2015 I don't want to take

00:01:13,080 --> 00:01:16,650
credit for work I did not do this so I

00:01:14,820 --> 00:01:18,630
should point out that I did all of the

00:01:16,650 --> 00:01:21,720
slides except for this one and the next

00:01:18,630 --> 00:01:23,909
slide so you know more importantly she

00:01:21,720 --> 00:01:25,560
also wrote most of his talk so if

00:01:23,909 --> 00:01:29,400
there's anything technical and cool it's

00:01:25,560 --> 00:01:38,070
probably because she came up with it so

00:01:29,400 --> 00:01:41,820
yeah protests in the United States and

00:01:38,070 --> 00:01:45,090
Beyond about police brutality on black

00:01:41,820 --> 00:01:47,659
bodies and as we speak

00:01:45,090 --> 00:01:52,979
the nodejs website now looks like this

00:01:47,659 --> 00:01:57,420
for one week we have decided that we

00:01:52,979 --> 00:02:03,360
would have a list of black people who

00:01:57,420 --> 00:02:06,680
have been killed by police brutality and

00:02:03,360 --> 00:02:09,599
it's just a really really strange

00:02:06,680 --> 00:02:12,550
surreal time to be sitting here with my

00:02:09,599 --> 00:02:14,890
friend on on recording this talk about

00:02:12,550 --> 00:02:16,750
you know if you just a little bit like

00:02:14,890 --> 00:02:22,150
navel-gazing about note but I hope you

00:02:16,750 --> 00:02:25,000
like it so go right from that to abrupt

00:02:22,150 --> 00:02:30,070
transition to happy birthday eleven

00:02:25,000 --> 00:02:34,840
years Wow yeah so so so that slight

00:02:30,070 --> 00:02:38,410
refers to the first release of note the

00:02:34,840 --> 00:02:41,680
gate lock goes a bit gives a bit further

00:02:38,410 --> 00:02:45,040
into the past but this was the first

00:02:41,680 --> 00:02:48,460
release of note and it's been a whole 11

00:02:45,040 --> 00:02:49,930
years since then yeah so we're here

00:02:48,460 --> 00:02:54,040
today to talk about what went well and

00:02:49,930 --> 00:02:59,890
what hasn't gone well and we'll talk

00:02:54,040 --> 00:03:02,710
about Dino a little bit right you you

00:02:59,890 --> 00:03:07,120
took a look at this 0:01 commit and like

00:03:02,710 --> 00:03:09,760
all the files are gone yeah yeah so the

00:03:07,120 --> 00:03:12,880
commit message says it like fixed

00:03:09,760 --> 00:03:14,470
something to work on FreeBSD indeed

00:03:12,880 --> 00:03:16,210
build files and everything that the

00:03:14,470 --> 00:03:18,160
commit change is long gone but on none

00:03:16,210 --> 00:03:21,460
of the files in there have existed for

00:03:18,160 --> 00:03:24,850
years which kind of like it shows that

00:03:21,460 --> 00:03:28,630
no J's code it's not the same as it was

00:03:24,850 --> 00:03:31,900
five four or more years ago and

00:03:28,630 --> 00:03:35,170
certainly not eleven so to say yeah this

00:03:31,900 --> 00:03:39,610
is this is the contribution graph for

00:03:35,170 --> 00:03:41,590
node because I'm a graphics design pro I

00:03:39,610 --> 00:03:46,330
just the screenshot of the get up page

00:03:41,590 --> 00:03:48,490
and inverted sorry wait lots and lots of

00:03:46,330 --> 00:03:53,250
things have happened since the first

00:03:48,490 --> 00:03:55,570
release of note the most significant

00:03:53,250 --> 00:03:58,390
impact points are the ones that I've

00:03:55,570 --> 00:04:01,210
labeled here well I wouldn't call note

00:03:58,390 --> 00:04:05,350
fourteen like significant particularly

00:04:01,210 --> 00:04:07,450
but it is where we are right now and so

00:04:05,350 --> 00:04:09,490
some people might remember these zero to

00:04:07,450 --> 00:04:12,730
ten time that was a long time ago but it

00:04:09,490 --> 00:04:14,410
was and what was when lots of people got

00:04:12,730 --> 00:04:16,359
into notice in the first place

00:04:14,410 --> 00:04:19,510
it was definitely during the height

00:04:16,359 --> 00:04:21,340
phase it was also that height that got

00:04:19,510 --> 00:04:25,540
me into node in the first place

00:04:21,340 --> 00:04:30,100
some people might remember the OJS fork

00:04:25,540 --> 00:04:32,230
something that grew out of unhappiness

00:04:30,100 --> 00:04:36,640
with the governance model of node and

00:04:32,230 --> 00:04:38,080
that ultimately led to the to the

00:04:36,640 --> 00:04:41,950
governance structure that we have now

00:04:38,080 --> 00:04:43,750
when when the fart io chess was merged

00:04:41,950 --> 00:04:45,610
back into no chance it came with all new

00:04:43,750 --> 00:04:52,660
governance it was no longer corporate

00:04:45,610 --> 00:04:54,670
back yeah so the time when that happened

00:04:52,660 --> 00:04:58,630
was the ad for release that was the

00:04:54,670 --> 00:05:03,040
first post-merger release off of node

00:04:58,630 --> 00:05:05,350
and and that was kind of like when what

00:05:03,040 --> 00:05:06,910
I think when modern note development

00:05:05,350 --> 00:05:11,770
started not just because of the changed

00:05:06,910 --> 00:05:15,340
governance but also you know we got some

00:05:11,770 --> 00:05:19,450
of the es6 I think features yeah we

00:05:15,340 --> 00:05:24,670
cannot use steady the next thing on the

00:05:19,450 --> 00:05:27,850
timeline here is the CIO J's for which

00:05:24,670 --> 00:05:33,760
like it also grew out of unhappiness

00:05:27,850 --> 00:05:36,190
with no justice governance and and like

00:05:33,760 --> 00:05:38,350
I don't know if you want to call it

00:05:36,190 --> 00:05:40,990
successful or not but at the very least

00:05:38,350 --> 00:05:43,890
we did I would say we did get some good

00:05:40,990 --> 00:05:48,310
governance changes out of that and

00:05:43,890 --> 00:05:50,530
definitely also worker threads where you

00:05:48,310 --> 00:05:53,320
know it kind of provided a Greenfield to

00:05:50,530 --> 00:05:55,000
like play around with new ideas worker

00:05:53,320 --> 00:05:59,980
threads was definitely the main one that

00:05:55,000 --> 00:06:05,020
first got developed there and there's a

00:05:59,980 --> 00:06:06,340
big gap where 14 right I mean they're

00:06:05,020 --> 00:06:08,080
they're like there were some nice

00:06:06,340 --> 00:06:10,030
important things that happened since

00:06:08,080 --> 00:06:11,700
then like I don't see the introduction

00:06:10,030 --> 00:06:14,770
of async/await

00:06:11,700 --> 00:06:16,060
why am i mentioned the info release was

00:06:14,770 --> 00:06:18,730
the first one that actually came with

00:06:16,060 --> 00:06:23,620
you know some of the things that you

00:06:18,730 --> 00:06:25,570
would consider modern JavaScript and and

00:06:23,620 --> 00:06:27,760
it also had a very different governance

00:06:25,570 --> 00:06:30,100
model those things basically meant that

00:06:27,760 --> 00:06:32,280
you know the the the reason there are so

00:06:30,100 --> 00:06:35,650
many comments at that time was not

00:06:32,280 --> 00:06:37,600
because there were so many contributors

00:06:35,650 --> 00:06:38,770
like they're like what the current

00:06:37,600 --> 00:06:42,730
situation is

00:06:38,770 --> 00:06:45,580
it's more just like you know work was

00:06:42,730 --> 00:06:48,030
done in a very III would call it like

00:06:45,580 --> 00:06:50,590
move fast and break things away

00:06:48,030 --> 00:06:52,180
people were just pushing commit semester

00:06:50,590 --> 00:06:54,370
and you know they were writing code that

00:06:52,180 --> 00:06:56,980
would now be considered legacy code and

00:06:54,370 --> 00:07:00,280
that that one was so fine for the time I

00:06:56,980 --> 00:07:02,710
would say but definitely I kind of left

00:07:00,280 --> 00:07:06,490
us start with with you know legacy code

00:07:02,710 --> 00:07:09,010
so things that come from that time are

00:07:06,490 --> 00:07:11,830
all these frames versions no just has

00:07:09,010 --> 00:07:14,650
three different versions of screens

00:07:11,830 --> 00:07:15,850
basically and they are all from that

00:07:14,650 --> 00:07:19,630
time

00:07:15,850 --> 00:07:23,800
there's HTTP 1 the HTTP module that

00:07:19,630 --> 00:07:26,320
everybody uses and and particularly the

00:07:23,800 --> 00:07:29,680
TLS code and these are all things you

00:07:26,320 --> 00:07:33,160
know what in the context of that time it

00:07:29,680 --> 00:07:36,310
makes made sense to just get something

00:07:33,160 --> 00:07:39,670
together that works and and you know

00:07:36,310 --> 00:07:42,040
kind of say if we want to make this a

00:07:39,670 --> 00:07:45,790
bit cleaner we can do so later and then

00:07:42,040 --> 00:07:46,390
as has so often that kind of didn't

00:07:45,790 --> 00:07:50,530
happen

00:07:46,390 --> 00:07:53,290
so these are things that are like that

00:07:50,530 --> 00:07:55,870
have not seen all that much change since

00:07:53,290 --> 00:07:58,300
that period they are basically I mean

00:07:55,870 --> 00:08:02,680
they have been changed a lot but the

00:07:58,300 --> 00:08:03,760
basic structure is still there and

00:08:02,680 --> 00:08:05,680
that's kind of because you know we

00:08:03,760 --> 00:08:09,460
didn't have good as capsulation they're

00:08:05,680 --> 00:08:13,090
no symbols so basically everything was

00:08:09,460 --> 00:08:16,870
easily accessible from from NPM modules

00:08:13,090 --> 00:08:20,110
no Queen API is that would you know we

00:08:16,870 --> 00:08:26,190
would allow and p.m. modules to not hook

00:08:20,110 --> 00:08:28,480
into the internals of these things not

00:08:26,190 --> 00:08:30,520
it's definitely one of the things that

00:08:28,480 --> 00:08:33,370
you know I if I could redo them in node

00:08:30,520 --> 00:08:36,130
I I would completely replace them from

00:08:33,370 --> 00:08:38,440
scratch or or not not put them into no

00:08:36,130 --> 00:08:40,300
it at all and none of the people who

00:08:38,440 --> 00:08:43,480
originally wrote these are all that

00:08:40,300 --> 00:08:48,430
active anymore which is also kind of a

00:08:43,480 --> 00:08:50,860
bummer and particularly for TLS like one

00:08:48,430 --> 00:08:53,709
of the yeah if there's the security

00:08:50,860 --> 00:08:56,230
issue with us we can fix

00:08:53,709 --> 00:08:58,149
or if there is something else it just

00:08:56,230 --> 00:09:01,299
usually takes a long time till somebody

00:08:58,149 --> 00:09:03,040
gets around to actually putting the work

00:09:01,299 --> 00:09:08,069
and of understanding what the code does

00:09:03,040 --> 00:09:11,319
and and how it needs to be changed

00:09:08,069 --> 00:09:16,389
so yeah that's not a great situation for

00:09:11,319 --> 00:09:18,939
node to be in right so so one of the

00:09:16,389 --> 00:09:23,769
really nice things of the last year note

00:09:18,939 --> 00:09:27,069
I would say is so some new collaborator

00:09:23,769 --> 00:09:31,029
joint energy s team

00:09:27,069 --> 00:09:34,720
he's called Robert and he just putted a

00:09:31,029 --> 00:09:37,329
lot of work into yeah figuring out how

00:09:34,720 --> 00:09:39,459
should screams actually work what

00:09:37,329 --> 00:09:41,619
changes need to be made how can they say

00:09:39,459 --> 00:09:48,610
be made in a way that does not break

00:09:41,619 --> 00:09:50,799
everybody and and those of those 194

00:09:48,610 --> 00:09:54,970
comments that he has made since then

00:09:50,799 --> 00:09:57,040
think most of them are actually oh like

00:09:54,970 --> 00:09:59,350
almost all of them are screams related

00:09:57,040 --> 00:10:01,119
screws improvements and it doesn't look

00:09:59,350 --> 00:10:04,209
like if you if you really want to take

00:10:01,119 --> 00:10:08,499
something that's possible it just takes

00:10:04,209 --> 00:10:12,970
a lot of work yeah in it would have been

00:10:08,499 --> 00:10:16,839
nice to not have HDTV one in note court

00:10:12,970 --> 00:10:18,209
i s that was also one of the things that

00:10:16,839 --> 00:10:20,829
just made sense at the time

00:10:18,209 --> 00:10:22,540
and I can totally see that but it would

00:10:20,829 --> 00:10:24,639
also have been so nice to have things

00:10:22,540 --> 00:10:29,410
that can be implemented outside of node

00:10:24,639 --> 00:10:35,169
and that includes HTTP do to have them

00:10:29,410 --> 00:10:38,110
implemented in NPM modules and and yeah

00:10:35,169 --> 00:10:41,529
so I mean like there was there is this

00:10:38,110 --> 00:10:43,449
concept that node should have a small

00:10:41,529 --> 00:10:47,739
core and lots of people are in favor of

00:10:43,449 --> 00:10:48,939
that which basically means good thing I

00:10:47,739 --> 00:10:53,529
just said if it can be implemented

00:10:48,939 --> 00:10:56,079
outside of North Coraci but that's in

00:10:53,529 --> 00:10:59,679
practice not the way that noches is

00:10:56,079 --> 00:11:00,459
currently moving at all I would say so

00:10:59,679 --> 00:11:03,560
we there's always been this tension

00:11:00,459 --> 00:11:07,490
between two things that

00:11:03,560 --> 00:11:08,839
supposedly tenants won a small core

00:11:07,490 --> 00:11:11,990
which you see here and the others

00:11:08,839 --> 00:11:16,249
batteries included and those are like

00:11:11,990 --> 00:11:18,079
those are opposites you know like well

00:11:16,249 --> 00:11:20,089
yeah they're opposites I mean batteries

00:11:18,079 --> 00:11:23,870
included means that like you shouldn't

00:11:20,089 --> 00:11:27,230
have to go out and find a module to do

00:11:23,870 --> 00:11:29,540
fundamental things and I do think that

00:11:27,230 --> 00:11:32,360
you know as much as it's a pain point

00:11:29,540 --> 00:11:34,399
for us now to have HTTP in core rather

00:11:32,360 --> 00:11:39,649
than you know this stuff implemented

00:11:34,399 --> 00:11:42,459
elsewhere I do think that that having it

00:11:39,649 --> 00:11:47,899
in core was pretty important to early

00:11:42,459 --> 00:11:51,499
adoption so two things there yeah one

00:11:47,899 --> 00:11:53,329
like so I don't know how I would have

00:11:51,499 --> 00:11:54,680
felt about going the Python route but I

00:11:53,329 --> 00:11:57,290
think that would have been something

00:11:54,680 --> 00:11:59,689
that would have alleviated these small

00:11:57,290 --> 00:12:02,300
core concern to some degree like

00:11:59,689 --> 00:12:04,220
basically ship node and ship a bunch of

00:12:02,300 --> 00:12:08,500
packages with it but don't put it in the

00:12:04,220 --> 00:12:11,509
binary and then develop it separately

00:12:08,500 --> 00:12:14,180
that that is something that I could I

00:12:11,509 --> 00:12:16,519
would have preferred that over like

00:12:14,180 --> 00:12:18,559
putting everything into into the main

00:12:16,519 --> 00:12:23,379
repo and and shipping it as part of the

00:12:18,559 --> 00:12:25,970
binary and and for things like HTTP 2 or

00:12:23,379 --> 00:12:28,699
basically the same situation with HTTP 1

00:12:25,970 --> 00:12:32,050
I mean yeah sure window was created we

00:12:28,699 --> 00:12:35,930
didn't have things like Wasson

00:12:32,050 --> 00:12:39,350
but I I kind of hope that you know that

00:12:35,930 --> 00:12:42,230
technology is would be able to provide

00:12:39,350 --> 00:12:46,339
something like you know take this vast

00:12:42,230 --> 00:12:50,059
library that does a lot of HTTP to state

00:12:46,339 --> 00:12:52,819
management and that put that into

00:12:50,059 --> 00:12:55,459
awesome make that usable from JavaScript

00:12:52,819 --> 00:12:57,170
and just let that be it know native code

00:12:55,459 --> 00:13:00,199
evolve

00:12:57,170 --> 00:13:03,949
I think that's doable and I think that

00:13:00,199 --> 00:13:05,959
would be a lot nicer than then having

00:13:03,949 --> 00:13:10,100
native code involved at all in the

00:13:05,959 --> 00:13:12,610
actual result hmm yeah um obviously that

00:13:10,100 --> 00:13:12,610
wasn't an option

00:13:17,220 --> 00:13:21,210
of all modules that are currently

00:13:18,930 --> 00:13:24,030
available from the noches repple

00:13:21,210 --> 00:13:26,880
directly as a basically the list of

00:13:24,030 --> 00:13:30,900
built-in modules that are exposed by

00:13:26,880 --> 00:13:33,810
default without any flags and yeah it

00:13:30,900 --> 00:13:35,400
just turns out so like for lots of them

00:13:33,810 --> 00:13:37,320
there's no native code involved and

00:13:35,400 --> 00:13:39,990
there's really no reason why they should

00:13:37,320 --> 00:13:42,300
have to be in that core I mean language

00:13:39,990 --> 00:13:44,310
said for HTTP HTTP to TLS

00:13:42,300 --> 00:13:46,530
there's gotta be native code involves

00:13:44,310 --> 00:13:52,020
but you know it doesn't strictly have to

00:13:46,530 --> 00:13:54,270
be the case yeah so some what this says

00:13:52,020 --> 00:13:57,060
is basically there's quite a lot of no

00:13:54,270 --> 00:13:59,280
cord that doesn't really need to be in

00:13:57,060 --> 00:14:02,520
there or where it's totally reasonable

00:13:59,280 --> 00:14:05,160
to have userland alternatives if you're

00:14:02,520 --> 00:14:06,600
participating in India notjust main repo

00:14:05,160 --> 00:14:10,040
if you're watching the repo you get

00:14:06,600 --> 00:14:13,170
hundreds of kilo dafuk ations each day

00:14:10,040 --> 00:14:16,350
and that's that's kind of like so that

00:14:13,170 --> 00:14:19,350
kinda makes it all or nothing saying you

00:14:16,350 --> 00:14:21,720
can't just like be involved casually or

00:14:19,350 --> 00:14:24,540
it's it's hard to do so if you really

00:14:21,720 --> 00:14:27,030
want to keep up with what's going on and

00:14:24,540 --> 00:14:29,910
and I feel like splitting that up into

00:14:27,030 --> 00:14:32,160
multiple repositories would be really

00:14:29,910 --> 00:14:36,210
nice i I know people are thinking about

00:14:32,160 --> 00:14:38,690
that for some items I know I suggested

00:14:36,210 --> 00:14:41,130
it when we added a single storage but

00:14:38,690 --> 00:14:44,280
unfortunately there were enough people

00:14:41,130 --> 00:14:45,930
who agree with me I guess I'd like one

00:14:44,280 --> 00:14:51,180
thing that I don't like about this you

00:14:45,930 --> 00:14:53,700
know it's that it makes it difficult to

00:14:51,180 --> 00:14:57,740
implement like a low-level internal API

00:14:53,700 --> 00:15:00,660
that you can things on top of nicely and

00:14:57,740 --> 00:15:05,960
and you know have that be more Val

00:15:00,660 --> 00:15:09,210
defined I I would like to see that you

00:15:05,960 --> 00:15:11,760
know have more modularity inside of

00:15:09,210 --> 00:15:13,770
North core itself not have every part of

00:15:11,760 --> 00:15:15,870
of note region to every other part of

00:15:13,770 --> 00:15:17,970
note which is kind of what we are

00:15:15,870 --> 00:15:20,850
currently doing in a lot of a lot of

00:15:17,970 --> 00:15:23,250
cases yeah and in a lot of cases the way

00:15:20,850 --> 00:15:25,230
we in past the way we did it ended up

00:15:23,250 --> 00:15:28,430
exposing stuff to end-users for then

00:15:25,230 --> 00:15:28,430
right modules that reaches

00:15:29,030 --> 00:15:34,530
welcome right and and that kind of like

00:15:33,120 --> 00:15:36,570
press into the whole other direction

00:15:34,530 --> 00:15:40,200
which is basically that we are adding

00:15:36,570 --> 00:15:42,150
more things to note that that kind of

00:15:40,200 --> 00:15:44,580
feel like they should go into no car

00:15:42,150 --> 00:15:46,590
because well we're going for web

00:15:44,580 --> 00:15:48,330
compatibility here and in browsers they

00:15:46,590 --> 00:15:51,240
are also shipped by default as part of

00:15:48,330 --> 00:15:56,940
the browser and we're we're fine with

00:15:51,240 --> 00:16:00,060
that basically I think so so these are

00:15:56,940 --> 00:16:03,060
all things that are being added or have

00:16:00,060 --> 00:16:04,890
been added I mean this is like a good

00:16:03,060 --> 00:16:06,270
thing and at the same time like it means

00:16:04,890 --> 00:16:08,250
that we end up with like multiple

00:16:06,270 --> 00:16:10,770
conflicting like we now to URL

00:16:08,250 --> 00:16:14,310
implementations the old one and the web

00:16:10,770 --> 00:16:24,150
at one and we now have to to module

00:16:14,310 --> 00:16:37,860
implementations and we do keep adding

00:16:24,150 --> 00:16:40,890
stuff to note car and I don't know if

00:16:37,860 --> 00:16:43,980
you remember but do you know the number

00:16:40,890 --> 00:16:46,710
of deprecated API I know there's over a

00:16:43,980 --> 00:16:51,450
hundred deprecation codes that

00:16:46,710 --> 00:16:52,950
correspond zi yes it's like just short

00:16:51,450 --> 00:16:56,340
of one hundred and fifty deprecation

00:16:52,950 --> 00:17:01,380
codes for note I have strong feelings

00:16:56,340 --> 00:17:03,990
about what is on that slide now note

00:17:01,380 --> 00:17:07,170
just has the purpose of being stable and

00:17:03,990 --> 00:17:11,990
not like you know breaking changes are

00:17:07,170 --> 00:17:14,340
just like something that you can't do to

00:17:11,990 --> 00:17:16,560
there are thousands of noches developers

00:17:14,340 --> 00:17:18,900
need to update their own code that is

00:17:16,560 --> 00:17:20,790
usually legacy code and that makes

00:17:18,900 --> 00:17:24,420
upgrading from noches who urgent to

00:17:20,790 --> 00:17:27,210
notice version painful in a lot of cases

00:17:24,420 --> 00:17:30,090
and and so keeping the number of

00:17:27,210 --> 00:17:33,000
breaking changes Louis is kind of really

00:17:30,090 --> 00:17:37,850
important to me personally as far as the

00:17:33,000 --> 00:17:40,760
future of noches is concerned I have

00:17:37,850 --> 00:17:44,750
I feel like we've made like like certain

00:17:40,760 --> 00:17:45,950
missteps that I mean I'm not sure a lot

00:17:44,750 --> 00:17:48,130
of people who know decor would agree

00:17:45,950 --> 00:17:50,330
with me that they're that they were

00:17:48,130 --> 00:17:54,820
there were missteps actually I'd like

00:17:50,330 --> 00:17:57,830
your opinion on this one I to this day

00:17:54,820 --> 00:18:02,240
think that adding error codes was a

00:17:57,830 --> 00:18:08,750
mistake I understand the motivation I

00:18:02,240 --> 00:18:13,840
think the motivation is great but we're

00:18:08,750 --> 00:18:21,410
not particularly set up to manage large

00:18:13,840 --> 00:18:25,370
sets of things like that well and we end

00:18:21,410 --> 00:18:27,500
up with like a million far too specific

00:18:25,370 --> 00:18:30,290
ones and a bunch that are just catches

00:18:27,500 --> 00:18:32,090
and like we we all have debates about

00:18:30,290 --> 00:18:37,070
whether that this one of that one should

00:18:32,090 --> 00:18:38,630
be a type error or you know JavaScript

00:18:37,070 --> 00:18:40,790
comes with like five or six different

00:18:38,630 --> 00:18:42,740
error types and we only probably would

00:18:40,790 --> 00:18:45,860
need like three or four of whom just use

00:18:42,740 --> 00:18:49,550
them in the big motivation wasn't

00:18:45,860 --> 00:18:50,960
actually to help end well what in my

00:18:49,550 --> 00:18:52,610
opinion wasn't actually helped end users

00:18:50,960 --> 00:18:54,590
as much as you could argue it helps end

00:18:52,610 --> 00:18:56,150
users to like be able to like have an

00:18:54,590 --> 00:19:01,520
error code that they stood for although

00:18:56,150 --> 00:19:05,900
I don't think it actually does but the

00:19:01,520 --> 00:19:07,280
big motivation was that error codes it

00:19:05,900 --> 00:19:09,530
says we have error codes it meant that

00:19:07,280 --> 00:19:11,030
every time we change an error message we

00:19:09,530 --> 00:19:13,730
had to treat it as a breaking change

00:19:11,030 --> 00:19:16,070
because somebody in the ecosystem was

00:19:13,730 --> 00:19:19,010
probably checking the text of that error

00:19:16,070 --> 00:19:22,460
message I consider that kind in

00:19:19,010 --> 00:19:25,820
retrospect at least I consider that kind

00:19:22,460 --> 00:19:29,120
of friction a feature not a bug on of

00:19:25,820 --> 00:19:32,420
anybody how do you feel

00:19:29,120 --> 00:19:35,420
I agree with a lot of what you said yeah

00:19:32,420 --> 00:19:38,680
so so the big thing is here are messages

00:19:35,420 --> 00:19:41,150
our error codes are way too specific

00:19:38,680 --> 00:19:46,130
they're not specific in the way that's

00:19:41,150 --> 00:19:50,270
useful because any single method or you

00:19:46,130 --> 00:19:51,650
know whatever it's only gonna have like

00:19:50,270 --> 00:19:53,390
five or six error

00:19:51,650 --> 00:19:56,300
maybe at most that it's gonna possibly

00:19:53,390 --> 00:19:58,490
emit you don't need to have the full

00:19:56,300 --> 00:20:02,600
list of all I don't know hundreds I

00:19:58,490 --> 00:20:05,900
guess of error codes it what I don't

00:20:02,600 --> 00:20:08,120
like about how we did this is that the

00:20:05,900 --> 00:20:11,210
purpose was you know like you said to

00:20:08,120 --> 00:20:15,200
keep people from from parsing error

00:20:11,210 --> 00:20:17,030
messages but we kinda like didn't go all

00:20:15,200 --> 00:20:19,790
the way on that yeah they're still doing

00:20:17,030 --> 00:20:21,650
it and they're gonna keep doing it yeah

00:20:19,790 --> 00:20:23,240
and I'm pretty yellow because we're not

00:20:21,650 --> 00:20:24,380
providing a reason not to do that

00:20:23,240 --> 00:20:26,270
because for example you know there's

00:20:24,380 --> 00:20:29,780
error messages that are parametrized

00:20:26,270 --> 00:20:34,520
where you know there's some value that

00:20:29,780 --> 00:20:36,950
that goes in there and and that's not

00:20:34,520 --> 00:20:38,740
good because if we want to keep people

00:20:36,950 --> 00:20:42,440
from parsing error messages we should

00:20:38,740 --> 00:20:44,900
make that we should make that

00:20:42,440 --> 00:20:47,060
information programmatically accessible

00:20:44,900 --> 00:20:49,460
we should put it on the arrow object

00:20:47,060 --> 00:20:51,680
that we're creating instead of just like

00:20:49,460 --> 00:20:53,990
having a nice way too far out there

00:20:51,680 --> 00:21:04,550
don't give anyone ideas about making

00:20:53,990 --> 00:21:06,560
this more complicated place it's one

00:21:04,550 --> 00:21:12,530
that I would I would argue makes a lot

00:21:06,560 --> 00:21:15,110
of that sense then thirdly the so so one

00:21:12,530 --> 00:21:19,370
thing that I actually believe Java is

00:21:15,110 --> 00:21:23,360
doing right is is that it differentiates

00:21:19,370 --> 00:21:27,010
between you know runtime exceptions and

00:21:23,360 --> 00:21:31,400
programmatic errors a programming errors

00:21:27,010 --> 00:21:35,200
and and our error codes don't do that

00:21:31,400 --> 00:21:38,810
and that's not helpful and then fourthly

00:21:35,200 --> 00:21:41,240
you know for programming errors it does

00:21:38,810 --> 00:21:43,780
not make any sense to put that semver

00:21:41,240 --> 00:21:46,160
major a restriction in place I would say

00:21:43,780 --> 00:21:48,830
because people should not be expecting

00:21:46,160 --> 00:21:51,020
that kind of error to happen and then

00:21:48,830 --> 00:21:52,610
fifthly I feel like we have to spell

00:21:51,020 --> 00:21:54,620
like in common sense and dealing with

00:21:52,610 --> 00:21:57,290
error messages we have been just

00:21:54,620 --> 00:21:59,180
applying the route like way that error

00:21:57,290 --> 00:22:01,130
message changes or error code changes

00:21:59,180 --> 00:22:03,260
assembly major and not really thinking

00:22:01,130 --> 00:22:05,179
about how people actually put use these

00:22:03,260 --> 00:22:09,619
things in practice

00:22:05,179 --> 00:22:16,369
well what about you Sam let's talk about

00:22:09,619 --> 00:22:18,859
ESM right so so this slide this is

00:22:16,369 --> 00:22:21,249
basically what everybody wants people

00:22:18,859 --> 00:22:24,919
want to be able to require yes modules

00:22:21,249 --> 00:22:26,859
with require function and import comment

00:22:24,919 --> 00:22:30,889
yes modules like existing ecosystem

00:22:26,859 --> 00:22:34,339
modules just with import and these

00:22:30,889 --> 00:22:42,649
things are not going to happen that kind

00:22:34,339 --> 00:22:45,349
of sucks and and and we will be

00:22:42,649 --> 00:22:46,789
explaining why until the end of time and

00:22:45,349 --> 00:22:51,019
that's not any but that's not people's

00:22:46,789 --> 00:22:55,159
fault it's just the nature of yeah yeah

00:22:51,019 --> 00:23:01,789
and got some flack for anyway let's

00:22:55,159 --> 00:23:03,859
we'll get to the flack yeah so I mean

00:23:01,789 --> 00:23:05,839
the basic story here as I understand it

00:23:03,859 --> 00:23:08,570
and I know you said you agree with it

00:23:05,839 --> 00:23:10,519
it's like well the Java school language

00:23:08,570 --> 00:23:12,019
one would stay at modules because lots

00:23:10,519 --> 00:23:13,219
of people are using javascript in the

00:23:12,019 --> 00:23:15,289
browser and they don't really have a

00:23:13,219 --> 00:23:20,119
module system it would be really nice

00:23:15,289 --> 00:23:21,919
what they did and that was kind of

00:23:20,119 --> 00:23:24,080
developed in a way that did well with

00:23:21,919 --> 00:23:26,179
note because the first the existing

00:23:24,080 --> 00:23:29,119
ecosystem of modules was just not really

00:23:26,179 --> 00:23:33,950
taking an accountant at that at that

00:23:29,119 --> 00:23:35,839
point and and the reason how that worked

00:23:33,950 --> 00:23:37,789
out is that you know in browsers you

00:23:35,839 --> 00:23:40,399
wanna you have things like network

00:23:37,789 --> 00:23:43,489
latency that you want to think about and

00:23:40,399 --> 00:23:44,599
and and you don't really have that you

00:23:43,489 --> 00:23:46,999
know where you'll just load everything

00:23:44,599 --> 00:23:51,559
from disk which is pretty fast compared

00:23:46,999 --> 00:23:53,330
plate and and we just like so the way

00:23:51,559 --> 00:23:56,029
that this ended up working is that has a

00:23:53,330 --> 00:23:58,580
synchronous module system the web has

00:23:56,029 --> 00:23:59,960
somewhat asynchronous module system or

00:23:58,580 --> 00:24:04,519
at least that's the way it's kind of

00:23:59,960 --> 00:24:07,399
designed and notice just wasn't really

00:24:04,519 --> 00:24:08,869
fast to stand up and the committee

00:24:07,399 --> 00:24:11,330
meetings and say hey this is

00:24:08,869 --> 00:24:14,440
incompatible we're not gonna be able to

00:24:11,330 --> 00:24:17,660
to implement this in a way that makes

00:24:14,440 --> 00:24:19,670
the existing user base happy

00:24:17,660 --> 00:24:23,870
and that's kind of how we ended up with

00:24:19,670 --> 00:24:28,250
two pretty incompatible systems some

00:24:23,870 --> 00:24:32,360
some things are going well I'm I am

00:24:28,250 --> 00:24:34,700
really happy about this ratio it's like

00:24:32,360 --> 00:24:38,860
obviously not saying that every node

00:24:34,700 --> 00:24:41,390
contributor has about ten commits but

00:24:38,860 --> 00:24:44,870
it's a lot better than other open source

00:24:41,390 --> 00:24:46,610
projects and and I know lots of these

00:24:44,870 --> 00:24:47,630
are from these spikes that you mentioned

00:24:46,610 --> 00:24:51,170
earlier we're looking at the

00:24:47,630 --> 00:24:53,360
contribution graph where we had people

00:24:51,170 --> 00:24:57,530
in the room that did their first kinds

00:24:53,360 --> 00:25:00,020
but even without that it's it shows that

00:24:57,530 --> 00:25:01,900
there's significant community

00:25:00,020 --> 00:25:07,580
involvement

00:25:01,900 --> 00:25:09,320
yeah about that yeah so the API was

00:25:07,580 --> 00:25:12,710
actually one of the things that I really

00:25:09,320 --> 00:25:15,170
do use as a module developer I maintain

00:25:12,710 --> 00:25:18,290
a couple libraries that use an API for

00:25:15,170 --> 00:25:19,820
native add-ons and this screenshot is

00:25:18,290 --> 00:25:23,990
from one of these libraries from the

00:25:19,820 --> 00:25:26,390
conversion to an API and and I love an

00:25:23,990 --> 00:25:29,960
API it makes writing clean code for

00:25:26,390 --> 00:25:35,930
nodes so much easier you don't have to

00:25:29,960 --> 00:25:38,680
understand all the items that you need

00:25:35,930 --> 00:25:43,010
to know when you're working with VA

00:25:38,680 --> 00:25:47,420
directly anymore so it's it's a lot

00:25:43,010 --> 00:25:50,090
easier to write correct code and it's a

00:25:47,420 --> 00:25:52,820
lot easier to just write code in C++ or

00:25:50,090 --> 00:25:56,060
other languages that that are then

00:25:52,820 --> 00:25:58,010
turned into native add-ons so just to be

00:25:56,060 --> 00:26:00,200
clear the code on the left here it

00:25:58,010 --> 00:26:05,440
contains tons of misunderstandings about

00:26:00,200 --> 00:26:07,910
how the v8 API or its nan wrapper works

00:26:05,440 --> 00:26:09,530
because it was written before I like got

00:26:07,910 --> 00:26:11,330
into node core and started understanding

00:26:09,530 --> 00:26:15,590
all of these things and how to actually

00:26:11,330 --> 00:26:17,120
deal with with things properly and and

00:26:15,590 --> 00:26:19,540
now I don't have to care about that

00:26:17,120 --> 00:26:22,640
anymore when I'm writing out that's nice

00:26:19,540 --> 00:26:25,370
we talked about this bit earlier with

00:26:22,640 --> 00:26:27,410
the with what we could do with HTTP HTTP

00:26:25,370 --> 00:26:29,950
1 if we were to like write these from

00:26:27,410 --> 00:26:32,690
scratch now

00:26:29,950 --> 00:26:34,429
it's it's just it's cool that you can

00:26:32,690 --> 00:26:36,830
write code in other languages and let

00:26:34,429 --> 00:26:38,750
note run that and you can ship it

00:26:36,830 --> 00:26:41,450
anywhere you don't need to worry about

00:26:38,750 --> 00:26:44,570
operating systems or platform

00:26:41,450 --> 00:26:47,120
architectures or shared objects or

00:26:44,570 --> 00:26:49,100
anything like that

00:26:47,120 --> 00:26:53,230
you can just use node to run other

00:26:49,100 --> 00:26:53,230
languages code I think that's awesome

00:26:54,160 --> 00:26:57,380
[Music]

00:26:57,610 --> 00:27:07,220
yeah since Ryan will have given his talk

00:27:01,820 --> 00:27:09,530
yesterday at this point yeah so

00:27:07,220 --> 00:27:15,650
obviously we have no idea what Ryan is

00:27:09,530 --> 00:27:18,260
going to say if necessary I think we can

00:27:15,650 --> 00:27:21,710
get into that in the Q&A

00:27:18,260 --> 00:27:25,340
the tender release one zero zero is

00:27:21,710 --> 00:27:27,320
pretty freshly out and and obviously

00:27:25,340 --> 00:27:29,450
people have been talking about the

00:27:27,320 --> 00:27:33,260
future relationship of note and I know a

00:27:29,450 --> 00:27:36,440
lot but so it always seems like people

00:27:33,260 --> 00:27:38,900
think that that you know is going to

00:27:36,440 --> 00:27:39,830
split the ecosystem that Ian node are we

00:27:38,900 --> 00:27:44,500
going to move people in different

00:27:39,830 --> 00:27:47,179
directions and we end up with with like

00:27:44,500 --> 00:27:48,950
people who use only the one or people

00:27:47,179 --> 00:27:51,590
who use only the other and only write

00:27:48,950 --> 00:27:53,080
code for one out the other and and I

00:27:51,590 --> 00:27:59,090
don't think that's what's gonna happen

00:27:53,080 --> 00:28:00,880
I yeah i think so i mean it's it's

00:27:59,090 --> 00:28:02,929
already showing no chess is adding

00:28:00,880 --> 00:28:04,970
compatibility for the web api because

00:28:02,929 --> 00:28:06,350
well people write javascript for the web

00:28:04,970 --> 00:28:09,890
a lot and it's really popular

00:28:06,350 --> 00:28:11,720
I think Dino has some kind of energy as

00:28:09,890 --> 00:28:12,410
compatibility mechanisms that they're

00:28:11,720 --> 00:28:14,690
working on

00:28:12,410 --> 00:28:17,059
I'm really looking to it too much but I

00:28:14,690 --> 00:28:21,049
saw that you know they have comments off

00:28:17,059 --> 00:28:23,540
that kind in the video repo and get ax I

00:28:21,049 --> 00:28:26,200
think they're just all gonna move closer

00:28:23,540 --> 00:28:29,390
together in terms of what they can do

00:28:26,200 --> 00:28:32,809
share more AP is that everybody can code

00:28:29,390 --> 00:28:34,790
for and and and if people are happier

00:28:32,809 --> 00:28:37,900
running that code with with Dino then

00:28:34,790 --> 00:28:41,150
with note or vice versa then great I

00:28:37,900 --> 00:28:43,450
whatever works for people but what if

00:28:41,150 --> 00:28:43,450
we're all

00:28:45,100 --> 00:28:58,250
yeah I don't think it will I don't think

00:28:55,040 --> 00:28:59,810
you know I think you know the killer the

00:28:58,250 --> 00:29:01,940
you know there's there's too much too

00:28:59,810 --> 00:29:04,310
much riding on you know to you know the

00:29:01,940 --> 00:29:06,890
npm module system and things like that

00:29:04,310 --> 00:29:10,010
you know it's gonna create a lot of

00:29:06,890 --> 00:29:11,900
friction who the switch to Dino but they

00:29:10,010 --> 00:29:13,160
might and they might like it better and

00:29:11,900 --> 00:29:14,150
it might work better for them I don't

00:29:13,160 --> 00:29:17,590
know we'll see

00:29:14,150 --> 00:29:17,590

YouTube URL: https://www.youtube.com/watch?v=cMXPJwDhBBI


