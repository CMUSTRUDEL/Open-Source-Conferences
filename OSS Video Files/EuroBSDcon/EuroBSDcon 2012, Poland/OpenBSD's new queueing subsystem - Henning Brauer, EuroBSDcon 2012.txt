Title: OpenBSD's new queueing subsystem - Henning Brauer, EuroBSDcon 2012
Publication date: 2012-12-07
Playlist: EuroBSDcon 2012, Poland
Description: 
	EuroBSDcon 2012
Warsaw, Poland 18-21 October
Captions: 
	                              although it's only four combinations so                               eventually this works um welcome to my                               talk I'm heading I'm going to talk about                               the new music new queuing subsystem                               which is not entirely committed right                               now so lots of the stuff you're going to                               see here is actually not on the tree yet                               and good good news first I'm not trying                               to fit                                                               we're talking about queuing you're                                obviously talking about cues so what                                what cues are we talking about queues                                are really simple they are a temporary                                storage for four packets all over the                                stack a queue is usually nothing more                                but just the chain of em buffs using the                                the MF next pointers in the Ambo                                structure we are going to come to this                                in a little bit and traditionally                                they've always been processed in a                                   matter like the first packet that was                                cute was the first one to be dq'd at a                                later time umm quick recap how packet                                routes to the stack the Nano graphics                                card when it receives a packet                                interrupts the interrupt handler gets                                the packet of the dma rings of the                                alegres card puts it into the IP                                interrupt q of course we are ignoring                                ipv                                                                   soft interrupt that's basically just a                                flag that's being checked before the                                colonel would return to userland and                                then acts based on that the soft                                interrupt subsystem called IP enter to                                DQ those packets which in turn gives it                                to IP input which processes them one by                                one in the case of a forwarded packet                                which is what I usually care about we                                are end up in I pee forward and                                eventually if you're an IP output it                                gets put into the the queue of the                                outgoing                                on the neck for the outgoing connection                                and well there's of course the                                completion interrupted everything that                                we don't care about that here for the                                typical and simple case we are dealing                                with                                                                  encapsulation no IP signal channels no                                ipv                                                                    so for for these the simple case the                                typical forward packets                                              the aforementioned IP enter cube and                                there are the cues on the knicks for the                                outbound direction and if q is actually                                pretty damn simple you have the the hat                                of the queue but just a pointer to the                                head n buff you have a pointer to the                                tail this of course is kind of an                                optimization because if you want to cue                                a new packet it has to go to the end                                right so walking the entire chain to                                find out which ones last and then in                                queue is kind of expensive so it's much                                cheaper to keep the extra pointer yeah                                variable holding the current length you                                have a variable holding the maximum                                allowed length a counter for how many                                packets have been dropped and there's a                                congestion mechanism basically when we                                notice your con guess that I spare you                                the details how we do so we set a flag                                which make certain subsystems skip                                expensive parts of the works namely PF                                stops doing routes that evaluation span                                and only handles established connections                                when we reckon guess if you're dropping                                packets anyway this is just the more                                selective dropping but this is not the                                topic of this talk the basic human                                efforts we care about there's the                                aforementioned                                                        forever there's priority queue priority                                queuing is used to lower the latency for                                important packets of course it also has                                an effect when you have to                                dropping packets because then you are                                dropping to the lower priority funds                                first priority queue is really just                                changing the order in which we take the                                packets off the queue nothing else and                                obviously this really only makes a                                difference when the machine or the link                                behind the machine is overloaded we're                                very close to being overloaded if                                there's plenty of CPU power and plenty                                of bank available we are going to end up                                with like two or three or                                               the queue and can process them very fast                                 so reordering does not really make a                                 difference there there's one thing to                                 keep in mind it's very important you                                 must never ever reorder packets that                                 belong to a single TCP stream where's                                 TCP doesn't like reordering right the                                 other healing method we care about this                                 bandwidth shaping so we are having a                                 nice gigabit link and your uplink is                                 only a couple of megabytes and you're                                 giving giving bandwidth to your neighbor                                 or a customer whatever you don't want it                                 to use up all your bandwidth right so                                 some kind of limitation or limit the                                 bandwidth you use for downloading or                                 porous or your ssh session still work                                 actually I use prior queuing for that                                 bandal shaping obviously is more                                 complicated than prior Q then we                                 actually have to measure the bandwidth                                 certain classes of packets take up which                                 also implies that we have to classify                                 packet and if you're reaching the                                 bandwidth limit for that class of fact                                 that we have to delay them which in turn                                 means leaving them in the queues for a                                 little bit longer the classification                                 that's the decision how weak you a                                 packet the actual the actual queuing is                                 a separate step from the classification                                 classification just means we mark the                                 packet somehow details later                                 what we really do is is right the                                 priority value or qid the cue IDs are                                 invisible to the user into the amp of                                 packet header and this blingee obviously                                 of course for us PF to classify not just                                 because we love fear photos because it                                 just does not make sense to reimplement                                 the same thing over and over again the                                 actual translation shaping obviously has                                 to happen when we DQ packets and we have                                 to put the tea packets to the right cue                                 or sub Q at enqueue time we have to                                 process them in the right order and at                                 the right timing preventive shaping at                                 DQ time and obviously this can only                                 happen about the the iaf cuse because                                 otherwise we just have a packet of light                                 and no way to store it somewhere right                                 prior ization is being used for like any                                 Cuba no matter where it is because as                                 said this just changes order and lower                                 latency the bandwidth shaping also                                 pretty obviously it is only useful on                                 the outbound queue if you're doing                                 Banfield shaping on the IPL q this is                                 kind of useless so we put the packets to                                 another Q afterwards but they are being                                 delayed or sent out immediately again                                 right oh yes and at the IP in Turkey we                                 don't know the interface speed yet so we                                 have no idea whether that link is                                 congested or not priority queuing is                                 something we're pretty much always fun                                 there's always a certain type of traffic                                 or certain types of packets you don't                                 want to lose even if you're under under                                 severe load you don't want to lose carp                                 announcements if you lose carp                                 announcements your your back up host                                 will think that the Masters that'll take                                 over and suddenly you have a master                                 master situation a split brain situation                                 where they both think that they are the                                 only master and have to process traffic                                 which leads to duplicate of packets that                                 leads to all kinds of interesting                                 problems                                 and obviously the same is true for the                                 spanning-tree announcements another                                 another kind of typical case is somebody                                 again downloading way too much porn and                                 you cannot ssh into your router to fix                                 this so you do want to prioritize your                                 SSH management traffic over porn                                 downloads priority queue happens to be                                 everywhere if you look around the VLAN                                 header has a priority field Oh surprise                                 it's eight different values                                            switch is pretty much any switch these                                 days I think pretty I'm not familiar                                 with the home switches so don't ask me                                 about those but parking basically                                 everywhere all the better ones have                                                                                                             they have building classifiers but they                                 are extremely simple and usually not                                 good enough and many of the high-end                                 network interface cards these days have                                 multiple send cues so you can you can                                 use the hardware to to split those apart                                 and don't have to do it yourself I don't                                 think we support that in any driver yet                                 the author makers usually sell this as a                                 virtualization thing so each guest could                                 have a separate cube which doesn't make                                 too much sense but that's a different                                 topic if you can put the virtualization                                 David on it sells better right so um we                                 already have bandwidth shaping and for                                 our DQ in the form of odd q or Q is a                                 research project by ken j Roadshow he                                 did that around                                                       research project because bandwidth                                 shaping particular kind of new back van                                 his goal was to but nope his goal was to                                 investigate different queueing metals he                                 called the schedule respect van because                                 I said there was no experience with us                                 it was originally developed outside the                                 openbsd tree it was his thesis at the                                 University and since this was assigned a                                 research thing and then used to to                                 figure out which schedulers works best                                 it's highly modular and pluggable which                                 also means that there's a considerable                                 considerable overhead considerable                                 complexity that we typically don't want                                 to deal with with for production stuff                                 right it's okay for research but not for                                 production how does it work it replaced                                 the ifq struck that I showed earlier                                 with an i f lq it adds new and dq'ing                                 functions that i do the actual lamp in                                 shaping or or priority queuing and our                                 in famous I F dot H macros have to exist                                 in two versions one for fqs and Volvo I                                 frq and this is third one by the way                                 that's another topic whenever I worked                                 on I F dot H for too long I have to ask                                 for new brace keys for my laptops or q                                 has to be enabled exclusively for Purina                                 face as i mentioned the nad key                                 functions are being replaced the traffic                                 classification and configuration                                 originally happened with odd queues own                                 classifier and scheduler which was                                 barely usable if you could read the                                 documentation in Japanese otherwise hmm                                 so kenjiro Joe and myself merged all ql                                 PF to use PF as a classifier in                                      which also leads to the interesting                                 situation that i'm replacing my over                                 here the after the merge the simplified                                 all q had one priority scheduler and two                                 different bandwidth shaping ones we                                 initially had cbq that's class-based                                 queuing                                 and later added HFS see which is                                 heretical Pharaoh service curves which                                 I'm going to explain a little bit later                                 problems Herrick doesn't only come from                                 from China all you can't read a damn                                 projector it's a it's a Japanese man you                                 saying schnapps I keep being surprised                                 which German word spread around the                                 world and we're going to have schlubs                                 later so it uses the the separation                                 between the ift obstruct and the FLQ                                 struct has quite some drawbacks this                                 meat that each and every navigator of                                 his car driver had to be adjusted to be                                 converted to our queue and also means                                 that lots of support functions macros                                 had to exist about versions and as a                                 side effect the the cues that didn't                                 happen to be in the in the navigator of                                 his car drivers are not very not all q                                 capital which is of questionable use but                                 anyway the configuration for our cube as                                 I mentioned before was drastically                                 simplified by by putting the                                 configuration part at a PF but it was                                 still kind of complex most most of you                                 use PF right so who's who's using lq                                 here that's quite a few who's using hssc                                 Wow too that's more than I expected it's                                 way more than I expected basically even                                 with a simplified one it's still too                                 hard partially because one of the                                 decisions we /i took in                                                 so very hard to use comes down to that                                 the other issue is there's too much                                 overhead all the all the abstraction and                                 pluggable and modularization brings a                                 lot of code that has to run and of                                 course there is a cost to it this leads                                 to if you just enable or cure an                                 interface without doing any                                 classification or any apps actually                                 you lose about ten percent of                                 performance and I don't think that's                                 acceptable to give an idea about the on                                 queue size for itself it's nine thousand                                 lines of code and the diff to remove it                                 is more than                                                          priority queue the idea is it should be                                 extremely simple because seriously                                 priority queuing is is not rocket                                 science right you're just assigned                                 priority levels it should have very very                                 very low overhead and due to that we                                 wanted to be always on because as I                                 mentioned before we always want to                                 prioritize prioritize certain classes of                                 traffic like the carp announcements to                                 do that I'm what if I'd struct ifq and                                 the enqueue and dequeue macros at about                                 a handful of helper functions that don't                                 care they don't care about here and                                 instead of having one Q hat in distract                                 we simply have eight and the priority                                 value is in the packet header above so                                 instead of having one head in one tail                                 if you have an array of eight that's the                                 entire change the NQ function just takes                                 the priority value as a number from the                                 packet header and use that as an array                                 index of course means we have to verify                                 this isn't bounce before in queuing and                                 the TQ function just loops over them so                                 that's simple that's cheap there is no                                 configuration for that possible the                                 course is not required PF is still used                                 for classification in a very very very                                 simple way you just do a set prior to a                                 number between                                                     packets the priority field in the Indus                                 packet header is inherited from from the                                 VLAN header if it's coming in on a VLAN                                 interface and carp and spanning tree                                 announcements the bpdus are being                                 Prioress with                                 thought you don't have to do anything                                 but and its management you cannot turn                                 off the priority queue we don't believe                                 in buttons um that being nice and that                                 being entry we still need a way to do                                 bandwidth shaping there is no need to                                 have multiple schedulers the fact that                                 we had multiple ones was due to the                                 research part we only need                                            you see is the most flexible it was                                 pretty unusable because of the hard                                 configuration but the the actual                                 algorithm is the nicest of all of them                                 it's you can express cdq entirely in it                                 and it's also more precise than then CDQ                                 like the resolution is a bit better the                                 configuration keep writing on the point                                 the configuration getting that                                 straightforward and easy that was the                                 big challenge well turn out the very few                                 others but that was the biggest one h of                                 the C stands for hierarchical fair                                 service cues as it curves there's a type                                 of my sites a service curve consists of                                 a bandwidth a burst time at the second                                 bandwidth so um the for the first d                                 milliseconds like the time the first                                 time for the first time the queue or                                 they d they curve the packets matching                                 that criteria get the burst bandwidth                                 and afterwards they get the regular                                 bandwidth and of course the first time                                 and bandwidth are optional then it gets                                 the regular band with all the time each                                 edge of the CQ consists of three of                                 these service curves there's one                                 controlling the minimum assigned                                 bandwidth this is often referred to as                                 the real time sorry the real time                                 service curve the second is the target                                 band was like if all the cues are                                 overloaded for a long time that's the                                 man                                 they're that they all get and the third                                 is the maximum that this queue will ever                                 get which in practice means that you get                                 some bandwidth between min and Max and                                 we try to give you the share that's                                 defined by the middle one the target                                 band goes and so just like the CTQ                                 scheduler hsbc has a tree of cues so ty                                 rocky cove like the name implies each                                 queue has a parent except for the root                                 queue of course there's one root cube                                 per interface it's not a global one and                                 hevc always operates with borrowing so                                 each queue can borrow bandwidth from its                                 parent of that has bear bandwidth up                                 until it hits its maximum service curve                                 if it has one so the plan it's not a                                 five-year plan this time the plan was to                                 use the existing core hssc algorithm                                 including the code with a hue cleanups                                 remove all the orc you grew and the                                 three big parts to work on PF cool                                 especially the puzzle is set getting the                                 configuration right of the big challenge                                 the PF parts from the output is down to                                 setting up the the extra cues on the                                 engines and the classification as in                                 marking the packets and then of course                                 we have to hook the actual engine into                                 the N and D queuing macros functions                                 hooking edge receive in isn't all that                                 hard to be again modify our struck if Q                                 they're not introducing yet another ifq                                 variant they are modified be leave the                                 one by adding a pointer to hssc specific                                 stuff and a pointer to the token bucket                                 regulator specific stuff that I'll come                                 back to a little bit later if you're not                                 operating HS receive with on that                                 interface that is simply another pointer                                 the token bucket regulator RT br                                 controls how many packets get DQ'd when                                 like at which point in time it does not                                 do any bandwidth measurements itself                                 that's the drop that hssc fulfills and                                 the detail functions simply look at that                                 pointer not a pointer all the classic DQ                                 infections if there is a folder called                                 the hfac specific functions oops yes the                                 configuration again as mentioned the                                 first attempt to                                                         want the common cases the common use                                 cases should be as simple and                                 straightforward as possible and the more                                 complex parts should still be possible                                 they should still work and they should                                 still be readable working the syntax out                                 took a bunch of developers sitting in                                 your cave this is not going to work out                                 and in that I totally believe in a                                 whiteboard or a piece of paper but no                                 computer at all beer is optional that                                 helps all you can treat this again this                                 is an awesome awesome piece from Japan                                 it says beer communication be a                                 presentation for you I loved English so                                 um the Q setup and classification still                                 happens in pf there was a little bit of                                 debate whether the Q setup actually                                 belongs in pf because that's kind of                                 iffy but using something yet separate is                                 kind of strange too so we opted for                                 still keeping that part in pf the                                 classification does not change at all it                                 remains that what it is you match on                                 packets by some criteria and set q.q                                 name                                 if a cube by that name I said you can do                                 this anytime you can do this on the                                 inbound side by the time the packet hits                                 the outbound outbound interface the                                 outbound queuing if there is a queue by                                 that name we'll use it if it's not there                                 we'll just use the default cube so                                 that's the news on tix worked out with a                                 whiteboard lots of beer to define a root                                 cube root cube is simply a cue that does                                 not have a parent it sits on a specific                                 interface and it has some bandwidth the                                 children refer to their parent that's                                 exactly the opposite from the way or two                                 dated where the parent listed the                                 children that you had to specify                                 afterwards and why did I have the third                                 one there one ha that's why one of the                                 queues has to be marked as default q so                                 all packets that that hit that interface                                 that do not have a queue marker a queue                                 ID assigned to them or an invalid one as                                 in the queue that does not exist on that                                 interface go to the default q you can                                 limit the lengths that Q can take like                                 the maximum number of packets in that                                 queue just giving it a queue limit you                                 can specify burst time and burst                                 bandwidth so here gets hundred and boots                                 on average but for a hundred thirty                                 seconds it's allowed to use up                                     megabytes you can apply the minimum and                                 maximum bandwidth that's here that has a                                 maximum of                                                               burst                                                                  as its maximum but on average it only                                 gets                                    can I get basically no it's not                                 basically when it's idle it's not zero                                 queue lengths but it's it's pretty much                                 like that if it's idle that that                                 figuring that out is is not as simple as                                 looking at the culet so it's but                                 basically it's that once you go back to                                 idle you're allowed to burst again but                                 can you I'm coming back to this a little                                 bit so and i set the queue assignment                                 remains simple you just do set Q foo the                                 nice trick we have four priors                                 prioritizing empty TCP x let's TCP X                                 without payload that's important without                                 payload because otherwise this could be                                 abused and and packets marked with the                                 type of service lowly lay you can                                 specify too cutes in this case all                                 normal Packard's will go to the queue                                 foo and the empty tcp x and the low                                 delay packets will go through the q bar                                 then you have my figure this out almost                                 ten years ago on a DSL line a typical                                 teens align very or your uplink is much                                 slower than your downlink when he was                                 running a big download and try to do                                 interactive ssh work at the same time                                 the ssh session would lack like mad even                                 if he priorites pssh packets why because                                 the TCP X for his download for clogging                                 up his tiny bandwidth a tidy-up link                                 bandwidth so this one takes down the                                 interactive traffic and two slows down                                 the download                                 if you prioritize those TCP x your                                 download continues to be fast this                                 basically does not interfere with your                                 regular uplink views because those                                 packets are tiny that's what this is for                                 and fortunately SSH for interactive work                                 it marks the packets as low delay and if                                 you're doing park transfers like like                                 SCP it marks them as not normal what's                                 the other it's not throughput well                                 there's another term internally I keep                                 forgetting that whatever basically                                 meaning this is a bulk download so                                 status and outlook the simple priority                                 queue is committed it even was in                                     but the syntax wasn't final i change                                 this after                                                                                                                                   going to be any day it was about to be                                 released any day has the final syntax                                 finalized and father no for the for the                                 current five-year plan its final the                                 bandwidth                                                              five years this this is the final I'm                                 not saying final solution here the band                                 will shaper basically works on this                                 laptop so don't steal it I have backups                                 I invented out computing after after                                 losing a diff because I was being stupid                                 I started doing smtp back ups basically                                 I go to the directory when I'm working                                 into CVS different pipe this into mail                                 mail this to a random developer with the                                 subject you are back up                                 it works perfectly fine this is cloud                                 computing so I'm the status the root Q                                 is totally weird basically doesn't work                                 and neither can zero who did the                                 research in that area nor me really                                 understand why yet the children work                                 fine so revisiting what all Q was doing                                 the root Q in all Q was hidden when you                                 did the odd q on interface full-on well                                 that's bad if you did or q on n                                        always was a root underscore am                                         this was invisible so there was no                                 traffic assigned to it ever so I kinda                                 kind of think we might go for the same                                 idea and have an invisible implicit                                 route Q and be done with it but well                                 we'll try to figure this out a little                                 bit more this decision has not been                                 taking it and this is almost the                                 showstopper right now that's the outlook                                 for tonight host the ability to watch                                 the queuing in action is written that                                 works so that's PF kilo- VV SQ of course                                 there is no documentation but this                                 presentation yet there are several                                 consistently checks missing so you can                                 easily have an Android amber in your                                 face at                                                            distributed like children summing up to                                                                                                          not do what you expect in that case so                                 yeah there needs to be some checking the                                 performance should be much better than                                 RQ I have not actually mad at us yet but                                 I know it is one of the one of the                                 biggest costs surprisingly is the                                 constant calls to micro up time like                                 obviously HIV scene is very good very                                 very good timing like high resolution                                 timing and reading reading high                                 resolution timers is surprisingly                                 expensive                                 I will not attack this before I commit                                 this that is a lot of change                                         current situation that's kind of                                 self-contained problem we're looking for                                 issue for for solutions to that this is                                 probably going to be a solution that is                                 more generic and not just affecting the                                 queuing I still want to get us ready for                                                                                                         with the route q might get tough so it                                 might be in                                                          current five-year plan has a robotic                                 likelihood for the transition from all                                 q                                                                      in and parallel for some time so they                                 don't have to have to do the transition                                 to the new one immediately when you do                                 the release upright but unfortunately                                 some keywords clash and I don't want to                                 use really bad keywords for the new                                 subsystem just to maintain compatibility                                 with the old one so um we have to rename                                 some of the keywords that are cues using                                 right now for most this is the Q key                                 word so if you want to continue using oq                                 for release or two you have to change                                 your cue definitions to old q but what                                 all are you trying are you trying to                                 resurrect the switch PF to german death                                 shut up in tech so you do it um the the                                 idea of course is to get rid of our                                 queue eventually was having those                                 systems in there and parallel just makes                                 certain areas of the network stack very                                 hard to follow especially once again I f                                 dot H and once we got rid of all q                                 there's so much cleaner possible and air                                 flotation then it might be                                 understandable that mere mortals and I                                 might be able to work in there without                                 worrying out my brace keys all the time                                 any questions                                 skewing without configuration is the                                 question basically this probably comes                                 down to some form of fair sharing                                 algorithm I didn't leave me alone buffer                                 blood somebody good anyway no I'm not                                 saying this here I'm not into that I                                 don't see the point to be honest I do                                 think you want to be priority queuing                                 all the time as set to prior some                                 important stuff if you want to do any                                 bandwidth shaping you should do so                                 explicitly and last not least all this                                 queuing stuff is only really effective                                 if you're short of resources be at CPU                                 or be it bandwidth as long as you have                                 plenty of bandwidth and plenty of CPU or                                 system resources available it just                                 doesn't matter right because you're                                 sending out everything pretty fast                                 anyway the delay is going to be in the                                 network not in your machine and to                                 directly connect connected section of                                 the network                                 the point they're being is that the idea                                 is that if a packet has been queued up                                 for let's say                                                       better to throw away some packets at the                                 front of the queue that's right that of                                 the back of the queue simply to get the                                 signaling you know packet loss is a                                 signal to TCP to get that faster on the                                 whole round trip so that's basically                                 read on steroids well yes and it's a                                 computationally it's much simpler than                                 read so you don't have to solve that                                 slice and so on yes I I left red is                                 random early detection that's basically                                 the queuing system tries to two tries to                                 figure out early that it's about to run                                 its cuse full and early kind of randomly                                 dropping certain packets so so TCP                                 scales back and I have commented out all                                 the old red bits for now first step the                                 tip is way too big already and I want to                                 keep this and manageable pieces or                                 failed on this part but if I put the red                                 in right now it's going to be total                                 nightmare so we might opt for not going                                 for it but implementing that I have not                                 really spent time on that yet so I don't                                 know you should have a look at it                                 because it sounds interesting yeah yeah                                 and and it also the logic is not at the                                 end q time but at the DQ time so they de                                 cure to the towards the interface will                                 you know start dropping some packets if                                 there are in there too long so you                                 simply timestamp it the moment you put                                 it into the lower time studies expensive                                 well you can use TSE or something that                                 II you don't have to convince me anymore                                 you got people you said it simpler that                                 means less work for me                                 also also Peter keeps picking up my my                                 ground work and polish it to the point                                 where it's really usable by by the vast                                 majority of Houston I really like that                                 thank you then                                 you
YouTube URL: https://www.youtube.com/watch?v=CMv90lDHhB8


