Title: Challenges in identity management and authentication - Dag-Erling Sm√∏rgrav, EuroBSDcon 2012
Publication date: 2012-12-07
Playlist: EuroBSDcon 2012, Poland
Description: 
	EuroBSDcon 2012
Warsaw, Poland 18-21 October
Captions: 
	                              ok let's start over as I was saying my                               name is darling smug of I'm freebsd                               developer and an engineer at the                               University of Oslo in Norway I've been                               working with the security and                               authentication for both professionally                               and as a previously developer and                               sometimes those two have overlapped for                               over                                                                   about is basically i'm here to tell you                                that we're doing it wrong and we've been                                doing it wrong all along so the title of                                my presentation is challenges in                                identity management and authentication                                and I'm I'm here mostly with questions                                or mostly with I'm here mostly to point                                out what we're doing wrong but I also                                have some ideas on how we could do it                                right first some some terminology just                                make sure that we all understand each                                other identification or identity will I                                am in a broader sense identity                                management is the the act of or the fact                                of knowing who a person is or who a user                                is and knowing things about that user                                such as their username there-there uid                                their their real name things like that                                authentication is the act of verifying                                that a person who claims to be a                                specific user is actually or that a                                principal who claims to be a specific                                user actually is that user authorization                                and access control are often confused I                                I have made that mistake myself of                                saying authorization when actually mean                                access control access control is the act                                of verifying that the person have in                                front of you is actually allowed is                                actually authorized to do what that                                person is now trying to do or asking you                                to do for them authorization is actually                                the act of granting those permissions                                but it is commonly the word that word is                                commonly used mean access control so                                step into my time machine these are                                anchor you I hope you can read them if                                you recognize and these are etc'                                password entries for roots showing how                                they have evolved over time so the top                                line is a plane v                                                    line with a death hashed password and                                incidentally the salt is salt and the                                password is password I think don't                                remember generate in in all example the                                second one is a bsd master password line                                which as you can tell has extra fields                                it has a log in class which is empty and                                and a password expiry time in an account                                expiry time and this time i used                                extended desk hashing which is a                                different hash function and below that                                is the same line but with the md                                      and then the shop                                                     today in current so here is                                                                                                       don't count error checking and if you                                don't count the printf at the end that                                just says welcome it actually takes in a                                traditional v                                                   traditional unixware traditional                                traditional ett password world it only                                takes two lines to identify and                                authenticate a user this is a slightly                                more complex version of the same code                                I've just added two lines which check                                the expiry time so now we've gotten to                                that we've gone from there to there and                                and this final version does a lot more                                because it also does a little bit of                                access of access control after                                identifying and authenticating the user                                and verifying that the account hasn't                                expired which is not really                                authentication and not really of access                                control it's some somewhere in between                                its account management something like                                that what I do next is that I check that                                the user is a member of the group staff                                and that's access control that's an                                access control policy I now know that                                the user is who they say they are but I                                want to know if that user knowing that                                it is them is that user allowed to do                                what they're trying to do now okay                                so if we move forward a bit this is the                                copy this is a copy of you probably                                recognize it and a switch conf this one                                was taken from previously                                             when it was introduced and what NS which                                 comp introduced was a modularized                                 identity system because we now had                                 different ways of retrieving information                                 about a user of identifying a user we                                 actually had already had different ways                                 of doing it before but it was hard coded                                 so you had EGC password and then if you                                 had a plus at the end of the file you'd                                 check miss and possibly he's yet so DNS                                 the NSS brought a smuggler I station it                                 is now pulse it was now possible to                                 install plugins which would handle                                 different so you could install an ldap                                 plug-in for instance still can this is                                 Logan com from freebsd                                                  when that functionality was added but                                 it's when we actually started using it                                 for more than and just well this is when                                 we started making extensive use of it                                 I'm not going to talk too much about                                 Logan conf it actually doesn't have                                 anything to do with authentication it's                                 actually part of it should be viewed at                                 as part of the identity management                                 system because except for this line and                                 an equivalent line somewhere above there                                 all of this is just information about                                 the user it doesn't tell us anything                                 about how to verify that the user is who                                 they say they are                                 and if we keep moving forward in time we                                 get to freebsd this is from freebsd                                   it's an excerpt from Pam conf from                                 previously                                                             this was taken right before we switch to                                 pan dowdy to the new configuration                                 layout for Pam at that point we had                                 actually already had Pam since                                         we didn't it was only in freebsd five                                 that we started actually putting Pam                                 into absolutely everything in the base                                 system and and using it for more than                                 just a few specific things so we now                                 have a pan configuration that actually                                 lists the entire traditional UNIX of                                 engagement policy so you check no login                                 and then you check the password and                                 things like that so so the the                                 interesting thing is that both Pam and                                 NSS came from solaris and so we had pam                                 scenes                                                                  NS which since                                                     actually much older than pam but we                                 didn't adopt it and until much later for                                 some reason this is the Pam equivalent                                 of the code I showed you earlier so we                                 first have to initialize Pam and we tell                                 Pam that we want to use a specific                                 policy called system and by convention                                 normally when you use pam you use the                                 name of the of the application as the                                 name of the policy but you don't have to                                 then we have one service call there                                 which is an authenticates which there's                                 pretty much the same as the line I had                                 where I compared the                                 hashed password and well I'm not going                                 I'll actually i'll come back to this                                 code later so i'm not going to go                                 through it in detail but you can tell                                 that it is somewhat longer and more                                 complicated or complex and then the the                                 old world equivalent so i'm going to                                 move on now got actually going to start                                 about talking about what's wrong what                                 we're doing wrong by structural flaws i                                 mean flaws in the underlying model I                                 mean flaws in flaws that we can't just                                 flaws in how we think about it as                                 opposed to fall in how we we do it so                                 let's begin with identification this is                                 the slightly redacted dump of the                                 publicly available information about me                                 in the University of Oslo LDAP directory                                 or in one of our ldap directories                                 because we have several with varying                                 levels of detail and there is there's a                                 lot of there's a lot of information                                 there which won't fit in EGC password                                 for instance there's a line there that                                 says I'm an employee there is there's                                 line there that gives my postal address                                 there are several lines there with my                                 job title and there are lines there                                 which in a slightly roundabout way                                 actually encode in which department I                                 work in this is my university of oslo                                 webpage except it isn't I don't keep                                 anything there my phone number my street                                 address it doesn't have my it doesn't                                 have my office location but so there's a                                 lot of information there that apart from                                 maybe stuffing it in the geckos field                                 that you can't encode that in EDC                                 password and as a consequence as a                                 consequence you can tell that so this is                                 struck password this is our current                                 identification API our current identity                                 API is get PWM and get pwu ID which                                 returns a struct password which as you                                 can tell has no way of there is no way                                 to store that information in there this                                 is the equivalent for groups which is                                 also part of identity management knowing                                 that a user is member of group so our                                 group our notion concept of groups is                                 extremely simple the the API we have the                                 way we have of the standardized ap                                 interface we use for for group quieren                                 group membership at Sarah and it only                                 pretty much only cares about file groups                                 so there are no there is no way to have                                 a group there's no way to express sorry                                 sir there's no way to create a group                                 which has other groups as its members                                 for instance there is no hierarchy and                                 this is all we have so unless you unless                                 you you I was going to use the word                                 teaches probably not the correct word                                 but let's let's kiss unless you teach                                 your application that unless you tell                                 explicitly tell your application Europe                                 unless your application has actually                                 built in ldap support and you tell your                                 application that hey I'm actually using                                 ldap so you can use ldap to look up                                 additional information there is no way                                 for an application to get that                                 information even though we have NSS                                 underneath                                 which supports ldap in addition there is                                 no api for actually modifying this                                 information and the way we do it in the                                 traditional word if we're if we're still                                 using EDC password ec master password                                 etc the way we do it is actually we edit                                 the file and then we regenerate the                                 database and we're doing it where we're                                 sort of when we do that we're sort of                                 mowing the grass under the applications                                 feet there is no well divvy the the act                                 of regenerating the database is it sort                                 of atomic and there are locks in place                                 so there you shouldn't actually run into                                 any conflicts you shouldn't get a                                 inconsistent information but it's really                                 it's a hack and if you're using                                 something else than EDT password then                                 you have to know what it is that you're                                 using and you have to go there if you're                                 using ldap then you have to there is no                                 way to directly make changes from an                                 application that doesn't know that you                                 are using ldap so we the problem is in                                 both directions this is login conf again                                 which I'm bringing up again because when                                 we found the need and I'm saying we in a                                 very wide sense because this actually                                 predates freebsd if I remember correctly                                 Kirk login conf login classes do they                                 predate previously yeah they're from                                     or version so we decided that we needed                                 to store more information about users                                 and instead of instead of implementing a                                 generic API for storing information                                 about users may be for having you know                                 per user properties or something what we                                 got was a very specific API very                                 specifically named API in a very narrow                                 API for a very specific type of                                 information which is resource limits and                                 paths and environment variables and                                 things like that it's a key value store                                 so yes you could use it for pretty much                                 everything except that the file format                                 is very limited you can't as you can                                 tell there you can't store a column in                                 field in logan comp which is why the                                 path here is space separated instead of                                 colon separated and you have to do                                 translation when you get that                                 information from login get cap whatever                                 so structural flaws in authentication                                 and access control let's return to our                                 Pam example what you actually see                                 happening in these few lines of code is                                 authentication here at least on the                                 surface some sort of access control                                 there some sort of identity management                                 there because actually when you so when                                 I I start I first initialize Pam and I                                 tell Pam which policy I want to use and                                 I also tell Pam which the user and                                 trying to authenticate and the                                 specification says the X open single                                 sign-on blah blah which is the the sort                                 of standard for Pam actually says that                                 Pam module is allowed to modify that                                 username so the application should ask                                 once authentication is complete the                                 application should ask Pam what the real                                 login what the real user name is which                                 is what we do here and then we can do a                                 get PWM which goes to NS which which                                 goes to whatever maybe ldap we don't                                 know but what we do know is that it                                 doesn't go through Pam because they're                                 completely separate there is an                                 additional an additional problem here at                                 all which is that ostensibly we have                                 some sort of authentication some sort of                                 access control here but in fact we have                                 no idea what happened                                 when you called pan authenticate when                                 you call Pam account management I have a                                 pan configuration file here it again and                                 there is word I take this one from                                 there's a line I wanted to show you                                 which is panel log and so the thing is                                 that actually in the authentication                                 phase in so in a previous slides there                                 you can see the panel login line that's                                 not authentication that's checking if a                                 file exists in EDC and if that file                                 exists it means that we're preparing to                                 shut down for maintenance or something                                 and we shouldn't allow people to log in                                 at that has nothing to do with                                 authentication it could be construed as                                 a Zacks as access control but we're                                 actually doing it in the authentication                                 phase and then we have Pam UNIX if I'd                                 shown you the pan configuration for if I                                 shown you the pan configuration for this                                 go any faster if I've shown you the pan                                 configuration for a su or su do you'd                                 see that it checks the pan configuration                                 for suit checks that the user is a                                 member of wheel before it asks for the                                 users password which is also backward                                 because verifying that the user is a                                 member of wheel is access control and we                                 should authenticate the user so                                 basically we're we're making a decision                                 based on the identity of the user before                                 we even know that that identity is                                 correct before we've even authenticated                                 it the reason why it's done like that                                 the reason why the pan configuration for                                 su is like that is that that was a                                 historical behavior so when we Pam ified                                 so when we converted suit to use pan we                                 just created a configuration that                                 approximated the historical behavior is                                 closely closely as poss                                 but you can also see that the syntax is                                 extremely simple and there are many                                 things that would be that one would                                 think were obvious requirements that we                                 have no way of doing there is no way for                                 instance to tell Pam that I want at                                 least two out of these authentication                                 mechanisms to succeed and I have no way                                 of telling Pam that for instance if                                 you're logging in on the console it                                 should accept it should accept one of                                 them I mean if you're logging in on the                                 console your password is enough but if                                 you're logging in remotely I want you to                                 also provide a one-time code or an ssh                                 key in addition to your password there                                 is no way to express that in the pan                                 configurations index linux pam has a                                 slightly more complex syntax but it                                 can't do that either it's only a they                                 have a some sort of flow control they                                 can they can control they have a                                 slightly more fine-grained control over                                 when Pam returns instead of continuing                                 down the ladder down the down the list                                 so so what I was saying about having                                 different requirements based on where                                 the user is logging in from etc it is                                 such an obviously useful feature that                                 openssh this is an excerpt from the                                 openssh man page openssh actually has a                                 fairly fairly complex configuration                                 mechanism for expressing that sort of                                 policy you have match oops where you can                                 you can you can you have conditionals                                 you can match based on the user name                                 based on the group name on where you're                                 logging in from which can be either or                                 hostname or impress and you have a long                                 list of knobs that you can                                 based on that condition so as in a more                                 this is openssh specifically but more                                 generally openssh isn't the only                                 application to do that so what we what                                 we've ended up with is we have a                                 centralized authentication policy which                                 is so inexpressive that many                                 authentication and access control                                 decisions have actually been                                 decentralized or rather they haven't                                 they should have been centralized but                                 haven't been because because there is no                                 good way of doing it and so we have if                                 you have                                                                you have the pan configuration syntax                                 plus                                                                taxes for each of these applications                                 with different concepts and different                                 ways of expressing it and different                                 levels of functionality plus probably                                 several additional you have for instance                                 hosts don't allow TCP records in                                 addition I mean openssh is out of the                                 box approach TCP wrappers so you can do                                 access control at any even lower level                                 although you you could view tcp wrappers                                 are more part of the part of the                                 firewall really am not part of the                                 authentication or access control system                                 network level access control I'm going                                 to speak very briefly about technical                                 flaws by which I mean not so I've been                                 talking about conceptual flaws and and                                 technical flaws by technical flaws I                                 mean flaws in the way the tools we do                                 have work the way they're implemented so                                 just very briefly this is the Pam                                 conversation API this is how a pan                                 module                                 communicates with the user this is how a                                 pan module asks asks a user a question                                 and receives the answer from the user                                 and you can ask several questions you                                 can pass messages and you can pass                                 prompts and you can receive input from                                 the user it's somewhat limited but                                 actually quite flexible and it's done                                 with a call back when you before you                                 when you and when you initialize the pan                                 library before you start authentication                                 you have to register a conversation                                 function which is a callback which the                                 module will call when it needs to                                 communicate with user so this is what we                                 call inversion of control here's a very                                 simple I should probably have added                                 colors a depiction of the code path or                                 the control flow when an application                                 uses Pam to authenticate a user so the                                 application has an event loop let's say                                 for instance that this is sshd it has an                                 event loop that it uses to exchange the                                 packets with with the the ssh client and                                 at some point in that event loop it                                 decides that it needs to call Pam and                                 authenticate the user so it calls Pam                                 authenticates which goes into the                                 dispatcher in the pan library and the                                 dispatcher calls Pam modules one by one                                 based on the Pam configuration and                                 suddenly we get to a module here that                                 wants to talk to the user and what that                                 model does is that it calls the callback                                 function and waits for an answer so the                                 problem is of course that                                 at this point the event loop has                                 actually stopped the event will be                                 stalled waiting for pan authenticate to                                 return but we're trying to perform an                                 action which requires the event loop to                                 run because we need to send packets to                                 the ssh client and we need to receive                                 packets with the answer and that this                                 plane can't work as long as the event                                 will be stalled waiting for an                                 authenticator return actually my first                                 draft when I when I added Pam support                                 openssh my first draft actually ran the                                 event loop from within the Pam shim                                 layer so the event loop would call Pam                                 which would call the event loop and it                                 sort of worked because the event loop                                 was sort of reentrant betty actually                                 would have broken horribly with anything                                 slightly more complicated in the very                                 simple test cases I was using so what we                                 had to do was move Pam into a separate                                 process so that the event loop                                 communicates with the user and it                                 communicate asynchronously and it                                 communicates with Cam asynchronously                                 through call it a proxy that there's a                                 very thin layer that allows you to do a                                 remote and procedure call the problem is                                 that Pam modules expects to run in the                                 same process they expect to be running                                 in the in the in the process that will                                 eventually at some point either perform                                 an action on behalf of the user or for                                 can exact the users shell or something                                 and in this case it doesn't in this case                                 it runs in child process and all serve                                 sorts of things mostly work but only                                 mostly and for instance Pam modules can                                 set environment variables which will                                 then be exported to the users shell                                 but of course if they do something like                                 that if they do I mean a pen model that                                 has a side effect that affects the                                 process that actually calls the pan                                 module those side effects will be lost                                 because the process ceases to exist                                 before openssh starts the users hell                                 environment variables were a poor                                 example by the way because the the the                                 the Pam integration code in openssh                                 actually transfers them back so                                 environment variables work what doesn't                                 work is do they know they don't the Pam                                 SSH module starts is it yeah the Pam SSH                                 module starts an SSH agent on your                                 behalf after you've authenticated so the                                 palace SH module is a module that allows                                 you to authenticate yourself by typing                                 in the passphrase to your ssh key so if                                 i have an ssh key on the machine you're                                 logging in on so it's kind of backwards                                 it's not really intended to be used in                                 conjunction with ssafe is it's more like                                 when you login on on an X for instance                                 so you type in your password and and or                                 you type in your passphrase SS pay for                                 this password is instead of your                                 password and you're logged in and you                                 have an ssi agent and the SSA agent has                                 that key loaded in order for the ssh                                 agent to have that key loaded the pam                                 ssh module needs to either store that                                 key after having successfully decrypted                                 it using the passphrase you typing or it                                 has to store the passphrase so that it                                 can later decrypt the key again and that                                 doesn't work because that information is                                 not transmitted from the part of openssh                                 that actually runs the authentication                                 bit and the part of openness inside that                                 runs the section establish second                                 section set up in such and tear down but                                 which are parts of Pam that I am show                                 you oh yeah that was a red square                                 highlighting the callback                                 so I am now going to i believe i have                                 about                                                                that                                                                  minutes to talk about solutions i'm not                                 going to outline a solution instead are                                 going to i'm going to outline some                                 principles which should which we should                                 follow when when optimistically when we                                 try to solve this this problem so the                                 first principle consolidates identity                                 and authentication services i mentioned                                 this very briefly earlier we have NSS                                 which is modularized identity management                                 we have pam which is modularized                                 authentication and to a certain extent                                 account access control and to a certain                                 extent account management and a tiny                                 little bit of identity management it's a                                 hodgepodge of anyway but they don't talk                                 to each other and there's no shared code                                 you have a NSS ldap yeah if you're using                                 ldap and you're using ldap                                 authentication which is a bad idea                                 because it's based on storing the                                 password either in plain text of the                                 hashed password in the LDAP directory                                 which is a bad idea but never mind that                                 if you use those than the ldap NSS                                 module and the ldap am module are two                                 completely separate pieces of software                                 the only thing they have in common is                                 that they both use the openldap client                                 library to actually implement the ldap                                 protocol they don't communicate with                                 each other they don't cooperate in any                                 way so we need we need to we need to                                 merge these                                 these two we need we need to have we                                 need to have a framework where the                                 backend handles both identity management                                 and authentication so that we can do                                 things like like this we need to                                 centralize the authentication policies                                 sounds obvious but it's actually very                                 difficult because what this means is we                                 we can't we can't hope to ever fully                                 centralize all authentication decisions                                 because there are things like public key                                 authentication in openssh we can't move                                 that into some framework somewhere                                 because it's part of the underlying SSH                                 protocol it's so closely tied to the ssh                                 protocol that you it has to be                                 implemented in the ssh server but the                                 decision of whether to use it whether to                                 require whether to ask for a public key                                 whether to require a public key or                                 rather to require a sign challenge                                 anyway should be centralized and that is                                 actually possible because in ssh to you                                 can there are multiple authentication                                 mechanisms you can use one or several                                 and you can use them in any order and                                 you can you can switch back and forth                                 between them and actually openssh does                                 that if you look very closely at the                                 logs it will first run through the                                 entire list it will actually run through                                 the entire list twice and it does it                                 rests through the list first to                                 negotiate which ones to use and then it                                 runs through the list again to actually                                 use them and so so it would be possible                                 if openssh actually cooperates if we                                 have                                 a tight cooperation between the two                                 idiots it should be possible for for the                                 the authentication framework to tell                                 openssh hey can you please do public key                                 authentication now and tell me whether                                 that worked                                 it was ok never mind isolates identity                                 on the thinking authentication services                                 from what I call exposed surfaces if                                 you're familiar with how openssh there                                 is a privilege separation or if you                                 thought you're familiar with the concept                                 of privilege privilege separation then                                 you'll understand what I mean identity                                 management authentication are sensitive                                 they require for instance access to if                                 you're doing traditional UNIX                                 authentication then you need to be able                                 to access etcs PWD DB or ugc shadow or                                 whatever UTC master password get the                                 grid and you really don't want to do                                 that in the same process that also                                 speaks to the user and could potentially                                 contain a buffer overflow vulnerable                                 here or something or some sort of code                                 injection vulnerability that would then                                 allow the user to access that data store                                 directly you want to separate those                                 things open SSID does that with                                 privilege separation but you want to do                                 that across the board for instance su                                 does not a call spam directly and it                                 calls Pam so it calls Pam and does                                 potentially sensitive potentially                                 dangerous dangerous things because                                 before it knows that it can actually                                 trust the the or before it has a                                 reasonable expectation of being able to                                 trust a user so there are there are                                 worse cases than EDC master password                                 because that contains password hashes                                 but if you're doing tie a time-based                                 one-time passwords for instance if                                 you're using oath which is the same as                                 google authenticator the two in order to                                 verify the code that the user entered                                 you actually need the the key that we do                                 use to generate it so you actually have                                 to store the key in plain                                 just like with kerberos you have to the                                 kerberos a what's it called a key server                                 yes the server that grants the ticket                                 granting ticket actually has a plain                                 text copy of the of the password because                                 it's based on encrypting it's a zero                                 knowledge protocol based on encrypting a                                 challenge with the password if we take                                 this one step further we we can                                 completely isolate authentication from                                 the application entirely so we no longer                                 perform we no longer we don't perform                                 authentication and access control in a                                 child not even in a child process of the                                 application like openssh does so instead                                 we have a service we have a daemon                                 running somewhere and the application                                 communicates with that Damon with some                                 sort of remote procedure call interface                                 and that Damon provides identity                                 management services authentication                                 services very tightly controlled                                 interface complete separation between                                 them and we actually that actually has                                 that actually gives us some advantages                                 other than just improved security it                                 means that that service can cache                                 information in a way that you can't do                                 in openssh where you're only going to do                                 one request at a time and then lose your                                 context and sorry                                 we can also do something that we can do                                 a session set up and such and tear down                                 in a much better way than Pam desert and                                 we can also do first open last closed                                 operations for instance starting an SSH                                 agent the first time the user logs in                                 and then every subsequent subsequent                                 time the user logs in we just give the                                 user information about the already                                 running agent but when the user finally                                 logs out of all SSH sessions and                                 whatever then we kill the ssh agent we                                 can't currently do that with Pam because                                 Pam does not have a big view Pam only                                 sees the exact family sees one session                                 at a time it doesn't have and finally we                                 must dare to break or at least bend                                 compatibility previously the principle                                 of least astonishment etcetera backward                                 compatibility there they're good ideas                                 but i believe that sometimes previously                                 takes them too far and that we're we                                 seem to be afraid of introducing of                                 making large changes and incompatible                                 changes and we have to dare to do that                                 because we have to dare to do that we                                 also have an and we have to to dare we                                 have to trust our users to actually                                 understand the need for it instead of                                 instinctively being afraid that our                                 users will hate us for introducing such                                 a change of course we have to provide                                 backward compatibility because we are                                 not going to change every single                                 application in the world to support our                                 new framework if we develop such a                                 framework so we have to provide some                                 sort of backward compatibility we should                                 ideally be able to use third-party Pam                                 modules in some manner because of course                                 people are going to write pan modules                                 for stuff that we don't want to                                 necessarily want to implement in our                                 base system so we do have to provide                                 backward compatibility but we don't have                                 to emulate every single little detail                                 at the cost of actual functionality and                                 and at the cost of security which we                                 could have achieved if we dare to bend                                 compatibility and was it I think great                                 timing so any questions yes that's                                 interesting but yeah but radius first of                                 all this very network oriented so yeah                                 maybe you'd rewrite maybe take a radius                                 server and rewrite it to communicate                                 over unix socket or something like that                                 and radius has some nice properties such                                 as support for for back and forth                                 conversation so you can actually ask you                                 don't you don't it's not it can do to                                 challenge response and multiple I'm                                 going back and forth ask you for your                                 password ask you for a one-time code and                                 stuff like that it's nice protocol but                                 it's purely authentication it's not                                 identity management so it breaks my                                 first principle which is that we have to                                 consolidate identity management and                                 authentication next question                                 yeah I maybe I should have brought the                                 so it's called CDL and I think the                                 specification it is a thousand and fifty                                 pages long I should have brought a                                 printout just to show you CDL is                                 actually CD i'll try to do absolutely                                 everything it's not just authentication                                 and identity management i think it's                                 also an entire crypto framework so it                                 sort of replaces openssl and pam and NSS                                 and gssapi and whatever pretty much                                 everything ooh i forgot to mention                                 gssapi because this sipi is something                                 that we can absolutely not do with pam                                 because Pam can only pan is entirely                                 text based and gssapi is something that                                 we should support too much harder to                                 degree and then we do so we have open a                                 society supports gssapi in Kerberos                                 because it does them itself because pan                                 isn't capable of doing that so thank you                                 any further questions nope ok well thank                                 you for coming
YouTube URL: https://www.youtube.com/watch?v=iRQvrrIhq0k


