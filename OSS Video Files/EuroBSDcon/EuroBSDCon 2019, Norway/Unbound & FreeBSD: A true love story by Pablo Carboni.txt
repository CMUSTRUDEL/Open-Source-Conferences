Title: Unbound & FreeBSD: A true love story by Pablo Carboni
Publication date: 2019-10-27
Playlist: EuroBSDCon 2019, Norway
Description: 
	This presentation describes how a well-planned engineering project for a DNS infrastructure running on a very big cell phone company had to deal with unexpected issues from external factors, and how they were overcome with the invaluable help of the DNS software Unbound, in conjunction with the FreeBSD operating system.

We will explore:

    Numbers and facts from the former DNS service that was running degraded
    Why a local economical crisis changed the plans of hardware/software to be installed by a vendor
    Why triggered the deployment of open source software on recycled hardware by in-house sysadmins
    And why lasted about 6 months without hassle until situation got back to ‘normal’ state.

In the talk we will also see different approaches done on a little physical hardware lab, with the invaluable help of stress testing/monitoring CLI tools, plus well-written documentation like Calomel’s website for doing fine tuning on both DNS software/OS.

Finally, conclusions and lessons learned are provided to have a starting point with a solid base and provide the necessary tools for new DNS projects.

More Info:
https://2019.eurobsdcon.org/talk-speakers/#unbound
Captions: 
	00:00:03,550 --> 00:00:12,760
oh please well for my vocab only you

00:00:10,120 --> 00:00:25,900
will talk about unbolt and FreeBSD and

00:00:12,760 --> 00:00:31,030
how they lovely work together while

00:00:25,900 --> 00:00:36,250
using FreeBSD it's a story I face I

00:00:31,030 --> 00:00:41,290
suffered but we got fine happy it

00:00:36,250 --> 00:00:45,790
finishes with a happy smile six years

00:00:41,290 --> 00:00:59,200
ago almost and based on true events here

00:00:45,790 --> 00:01:02,790
there were two Bell so true aliens well

00:00:59,200 --> 00:01:02,790
some figures

00:01:05,260 --> 00:01:16,930
I'm I'm 42 years old I'm from Bucyrus

00:01:10,830 --> 00:01:19,870
Argentina where I worked last 20 20

00:01:16,930 --> 00:01:25,980
years ago as eunuchs a looming DNS

00:01:19,870 --> 00:01:30,100
arming natal me etc I love dinners love

00:01:25,980 --> 00:01:32,140
be as he especially previously well I

00:01:30,100 --> 00:01:37,990
used to work with Network Devices

00:01:32,140 --> 00:01:43,290
Network protocols very low-level RFC I

00:01:37,990 --> 00:01:48,010
used to read RFC text and sometimes to

00:01:43,290 --> 00:01:51,910
discuss friendly about it because of

00:01:48,010 --> 00:01:54,880
both implementations well sometimes I

00:01:51,910 --> 00:02:00,160
enjoy to develop with some languages

00:01:54,880 --> 00:02:02,590
like C language ban in an amateur way my

00:02:00,160 --> 00:02:07,180
contacts my personal contacts trader

00:02:02,590 --> 00:02:10,770
master long linked in the info

00:02:07,180 --> 00:02:14,950
information I will show you later I

00:02:10,770 --> 00:02:23,590
removed some sensitive things just in

00:02:14,950 --> 00:02:29,040
case the story six years ago I was

00:02:23,590 --> 00:02:34,870
gathering some KPIs from DNS servers

00:02:29,040 --> 00:02:43,690
appliances and we realized at the office

00:02:34,870 --> 00:02:49,390
that the CPU usage reach about 60% and

00:02:43,690 --> 00:02:56,170
no more queue acres per second reached

00:02:49,390 --> 00:03:00,180
until atop at lying but nothing else it

00:02:56,170 --> 00:03:05,800
got stuck and users experienced almost

00:03:00,180 --> 00:03:09,790
three seconds for waiting for for

00:03:05,800 --> 00:03:14,170
resolving their host names where word

00:03:09,790 --> 00:03:16,210
were those users my subscribers well

00:03:14,170 --> 00:03:18,270
there was

00:03:16,210 --> 00:03:24,170
[Music]

00:03:18,270 --> 00:03:24,170
were brave plants but in the meantime

00:03:24,890 --> 00:03:44,280
well - more than 2.5 the real numbers

00:03:29,700 --> 00:03:51,690
2.8 the truth 2.8 customers - horror

00:03:44,280 --> 00:03:58,230
appliances plateau lang from 12 p.m. at

00:03:51,690 --> 00:04:05,520
lunch until H p.m. well 60 percentage of

00:03:58,230 --> 00:04:11,840
usage and nothing nothing more 20,000

00:04:05,520 --> 00:04:15,140
queries per second per box this is fine

00:04:11,840 --> 00:04:18,810
everybody's floating but this is fine

00:04:15,140 --> 00:04:20,040
the hardware upgrade was planned in the

00:04:18,810 --> 00:04:27,360
middle of this story

00:04:20,040 --> 00:04:30,270
in the meantime part number to make it

00:04:27,360 --> 00:04:35,040
worse there were some firewalls in the

00:04:30,270 --> 00:04:38,720
middle of the network those firewalls

00:04:35,040 --> 00:04:45,690
were almost exploding because of high

00:04:38,720 --> 00:04:51,090
high traffic or UDP packets it was a

00:04:45,690 --> 00:04:54,120
mess sighs bang just for fun in the

00:04:51,090 --> 00:04:59,550
meantime I was playing I was touching in

00:04:54,120 --> 00:05:05,750
a nina love in a mini lab with a dell

00:04:59,550 --> 00:05:13,260
poweredge night 1950 am bound under

00:05:05,750 --> 00:05:16,800
previous the operating system Oh some

00:05:13,260 --> 00:05:24,210
people say hey Paula you must test it

00:05:16,800 --> 00:05:28,950
rocks okay I will give you a try well

00:05:24,210 --> 00:05:31,619
next steps the traffic because it was

00:05:28,950 --> 00:05:38,149
traversing several firewalls

00:05:31,619 --> 00:05:42,689
it needs to be being for optimized and

00:05:38,149 --> 00:05:48,419
we had to we have the job at that time

00:05:42,689 --> 00:05:50,579
they had to remove Dewar engineering for

00:05:48,419 --> 00:05:54,329
those firewalls and removed entirely

00:05:50,579 --> 00:06:03,799
from the network for were the the DNS

00:05:54,329 --> 00:06:08,579
traffic was traversing that car world

00:06:03,799 --> 00:06:16,529
the the hardware that was planned the it

00:06:08,579 --> 00:06:22,699
was it it was to load balancers +44 for

00:06:16,529 --> 00:06:28,859
servers with a commercial brand the

00:06:22,699 --> 00:06:32,249
software inside it should be see but not

00:06:28,859 --> 00:06:44,929
a humane SPECT because some issues

00:06:32,249 --> 00:06:50,659
happen later problems began that time

00:06:44,929 --> 00:06:54,029
2013 in Argentina we had a very a huge

00:06:50,659 --> 00:06:57,749
economical crisis we have economical

00:06:54,029 --> 00:07:03,689
issues so we have issues to import

00:06:57,749 --> 00:07:07,289
hardware so we why we we bought the

00:07:03,689 --> 00:07:10,979
hardware load balancers and servers but

00:07:07,289 --> 00:07:15,659
only load balancers arrived to the

00:07:10,979 --> 00:07:19,289
company so physical those four physical

00:07:15,659 --> 00:07:27,089
servers didn't arrive we have the half

00:07:19,289 --> 00:07:31,099
of the infrastructure so oh nothing to

00:07:27,089 --> 00:07:31,099
do with the euh protocol

00:07:35,370 --> 00:07:44,580
in the meantime the this was the love

00:07:39,430 --> 00:07:53,070
infrastructure dell poweredge previously

00:07:44,580 --> 00:07:57,700
8.4 running under amd64 architecture

00:07:53,070 --> 00:08:02,290
well unbound one point four point twenty

00:07:57,700 --> 00:08:07,150
one compiled with live event live event

00:08:02,290 --> 00:08:12,670
is a library that abstracts you the

00:08:07,150 --> 00:08:16,240
insides of sockets so you put live event

00:08:12,670 --> 00:08:20,980
with previously you can install linux we

00:08:16,240 --> 00:08:25,440
can install on our operating systems it

00:08:20,980 --> 00:08:29,470
uses for example in three basic ke q

00:08:25,440 --> 00:08:33,430
which you will expect high performance

00:08:29,470 --> 00:08:36,960
for freebsd instead of select functions

00:08:33,430 --> 00:08:41,010
of sockets these sockets

00:08:36,960 --> 00:08:46,270
well the version one point four point

00:08:41,010 --> 00:08:50,050
fourteen be very stable good very good

00:08:46,270 --> 00:08:54,510
comments no I didn't used DNS SEC

00:08:50,050 --> 00:09:00,700
because it with dot without hard work

00:08:54,510 --> 00:09:03,900
you will SPECT high CPU usage no no no

00:09:00,700 --> 00:09:06,790
CPU uses high latency for resolving

00:09:03,900 --> 00:09:11,530
queries

00:09:06,790 --> 00:09:14,470
I used DNS top it's a must

00:09:11,530 --> 00:09:24,100
Vienna stopped excellent tool I will

00:09:14,470 --> 00:09:30,720
show you lights among other tools DNS

00:09:24,100 --> 00:09:33,820
perf contains res perf and be a DNS

00:09:30,720 --> 00:09:37,150
package contains R as per an Dennis perf

00:09:33,820 --> 00:09:41,620
tools I've used in particular

00:09:37,150 --> 00:09:46,300
whispers its copyright from nominal now

00:09:41,620 --> 00:09:48,190
Akamai it it give you the same feeling

00:09:46,300 --> 00:09:53,440
that

00:09:48,190 --> 00:09:57,900
a real stress testing on a network you

00:09:53,440 --> 00:10:01,600
will see at least at that time there was

00:09:57,900 --> 00:10:08,160
it is still up and running that URL you

00:10:01,600 --> 00:10:12,670
can download up to ten millions of

00:10:08,160 --> 00:10:19,510
entries for random queries that people

00:10:12,670 --> 00:10:23,530
did in the past samples and I don't want

00:10:19,510 --> 00:10:29,350
to ask where where did they came from

00:10:23,530 --> 00:10:33,450
they come from those samples but some

00:10:29,350 --> 00:10:38,560
readings you must read calomel dot or

00:10:33,450 --> 00:10:44,910
it's a must if you get into that site

00:10:38,560 --> 00:10:48,490
that website you can look for how to

00:10:44,910 --> 00:10:53,350
several several utilities several

00:10:48,490 --> 00:10:59,850
protocols several several software for

00:10:53,350 --> 00:11:05,190
example mail so many servers how to

00:10:59,850 --> 00:11:10,950
dinner servers were ever including DNS

00:11:05,190 --> 00:11:12,370
among DNS and it includes FreeBSD and

00:11:10,950 --> 00:11:16,720
OpenBSD

00:11:12,370 --> 00:11:19,920
how to tune cut to the fine tuning on

00:11:16,720 --> 00:11:19,920
the network stack

00:11:26,060 --> 00:11:32,089
part number one of my master plan

00:11:29,300 --> 00:11:37,189
the service the service the DNS service

00:11:32,089 --> 00:11:42,259
was exploding well we have load

00:11:37,189 --> 00:11:45,189
balancers but no servers so I was a Palo

00:11:42,259 --> 00:11:49,519
you were playing and testing am bound

00:11:45,189 --> 00:11:51,980
when I give a try in testing /

00:11:49,519 --> 00:12:01,240
production yes or yes

00:11:51,980 --> 00:12:04,879
yes and that's how they they motivated

00:12:01,240 --> 00:12:08,089
they say well let's recycle some

00:12:04,879 --> 00:12:13,009
hardware boxes because we have no brand

00:12:08,089 --> 00:12:17,629
new hardware and try to get the most of

00:12:13,009 --> 00:12:30,129
that optimize every lead by taking every

00:12:17,629 --> 00:12:36,170
little bit and consume some premises

00:12:30,129 --> 00:12:39,680
some premise sorry my spelling some of

00:12:36,170 --> 00:12:43,430
them for example a cluster of load

00:12:39,680 --> 00:12:48,829
balancers there they are world two sides

00:12:43,430 --> 00:12:52,160
one cluster and our and our cluster that

00:12:48,829 --> 00:12:55,370
load balancer you must use only fifty

00:12:52,160 --> 00:13:01,550
thousand ports not more well you can use

00:12:55,370 --> 00:13:06,319
until 60,000 or 6253 it's it's it's

00:13:01,550 --> 00:13:12,350
better to use a lower quantity so if you

00:13:06,319 --> 00:13:16,370
Excel that kind of view exceed 50,000 if

00:13:12,350 --> 00:13:22,990
you exceed 65 Forte's you must use of

00:13:16,370 --> 00:13:26,209
course another VIP which was IP address

00:13:22,990 --> 00:13:30,500
several servers were behind those load

00:13:26,209 --> 00:13:36,220
balancers and three bsd was the premise

00:13:30,500 --> 00:13:39,280
for for the for serving the reserve for

00:13:36,220 --> 00:13:45,910
serving the rest queries and behind the

00:13:39,280 --> 00:13:49,990
balancers as as a way of protection plus

00:13:45,910 --> 00:13:59,110
load balancing and gives you the best of

00:13:49,990 --> 00:14:02,890
the service and another promise that

00:13:59,110 --> 00:14:06,790
every IP address I will use it should be

00:14:02,890 --> 00:14:12,130
up and running quickly here or here or

00:14:06,790 --> 00:14:15,640
here no no any costs it wasn't

00:14:12,130 --> 00:14:21,670
impossible to use any gas so they

00:14:15,640 --> 00:14:29,920
decided to use BGP BGP will slash 32 in

00:14:21,670 --> 00:14:36,730
mind for every IP address the big

00:14:29,920 --> 00:14:41,950
picture this was before the firewall the

00:14:36,730 --> 00:14:44,740
first that that figure of fire is it's a

00:14:41,950 --> 00:14:50,100
joke because it was exploding it was

00:14:44,740 --> 00:14:55,950
getting on fire one appliance per site

00:14:50,100 --> 00:14:59,680
until November 2013 at the same time

00:14:55,950 --> 00:15:01,810
mobiles they are trying queering and

00:14:59,680 --> 00:15:04,450
querying and querying and exploding the

00:15:01,810 --> 00:15:06,910
network exploding the firewalls inspired

00:15:04,450 --> 00:15:13,020
exploding the server exploding whatever

00:15:06,910 --> 00:15:18,210
and the traffic went to the servers

00:15:13,020 --> 00:15:18,210
those those appliances were resolvers

00:15:19,140 --> 00:15:31,180
the traffic to the authoritative servers

00:15:22,440 --> 00:15:35,260
were to the left a summary of what was

00:15:31,180 --> 00:15:38,460
happening at that time I'm sorry for the

00:15:35,260 --> 00:15:38,460
small phones

00:15:43,790 --> 00:15:53,240
the newest picture the same mobile

00:15:49,530 --> 00:15:57,390
subscribers customers but this time

00:15:53,240 --> 00:16:01,140
querying load balancers and the load

00:15:57,390 --> 00:16:06,020
balancers should redirect redirect the

00:16:01,140 --> 00:16:10,170
traffic the UDP and TCP traffic to those

00:16:06,020 --> 00:16:13,170
appliances sorry though to those two

00:16:10,170 --> 00:16:17,510
servers and one server I let you know

00:16:13,170 --> 00:16:25,560
why that that situation happened between

00:16:17,510 --> 00:16:29,660
November and November 2013 and May 2014

00:16:25,560 --> 00:16:34,320
the new see the new status was with

00:16:29,660 --> 00:16:40,550
servers with the CPU usage for those

00:16:34,320 --> 00:16:40,550
servers at less than 40%

00:16:40,950 --> 00:16:52,500
no more firewalls in the middle the

00:16:44,910 --> 00:16:58,760
traffic got lower very lower became very

00:16:52,500 --> 00:17:05,370
lower well that's the / 32 I said before

00:16:58,760 --> 00:17:11,130
regarding to the VIPs those load

00:17:05,370 --> 00:17:13,070
balancers do some functionality some

00:17:11,130 --> 00:17:20,100
features of those load balancers were

00:17:13,070 --> 00:17:21,660
BGP software demon so they they publish

00:17:20,100 --> 00:17:24,650
their Bips

00:17:21,660 --> 00:17:24,650
themselves

00:17:31,030 --> 00:17:39,670
part one for for doing fine tuning

00:17:34,580 --> 00:17:45,760
advertising system-level UDP sockets

00:17:39,670 --> 00:17:52,610
port range bag love Nick drivers timings

00:17:45,760 --> 00:17:55,970
interrupts modes and logs you should

00:17:52,610 --> 00:17:59,000
think about how many queries per second

00:17:55,970 --> 00:18:03,040
you will receive because if you love the

00:17:59,000 --> 00:18:09,700
whole info locally on physical drives

00:18:03,040 --> 00:18:09,700
the i/o will drop down considerably

00:18:10,750 --> 00:18:21,110
several instances in fact it was one one

00:18:17,680 --> 00:18:26,120
process wrong amount process will buy

00:18:21,110 --> 00:18:33,910
you let using between six and eight

00:18:26,120 --> 00:18:39,800
cores but I mean one thread one core

00:18:33,910 --> 00:18:48,500
well where is available queries are

00:18:39,800 --> 00:18:53,540
impaired core and etc some the tricky

00:18:48,500 --> 00:18:56,330
part you must to touch loader Kampf you

00:18:53,540 --> 00:19:03,040
must to touch how interrupt service

00:18:56,330 --> 00:19:06,800
requests for maximum threads three two

00:19:03,040 --> 00:19:11,720
to serve to listen to the packet and

00:19:06,800 --> 00:19:18,260
answer quickly well and we clusters and

00:19:11,720 --> 00:19:22,220
buffs interrupt handling directly max-q

00:19:18,260 --> 00:19:28,310
limit the work stream queues it should

00:19:22,220 --> 00:19:33,500
reach until here ten thousand ten ten

00:19:28,310 --> 00:19:38,860
ten thousand and two hundred forty the

00:19:33,500 --> 00:19:38,860
same for sending queue length

00:19:41,190 --> 00:19:51,429
there are more knobs but it's a very

00:19:44,919 --> 00:19:54,730
huge list another Morneau's this time

00:19:51,429 --> 00:19:59,619
with del count Kampf

00:19:54,730 --> 00:20:02,549
I mean Oh Eddie's Max's sake buff the

00:19:59,619 --> 00:20:09,549
maximum socket buffer size it's very

00:20:02,549 --> 00:20:14,289
important you must raise to 16 mega C 16

00:20:09,549 --> 00:20:18,100
million that were sent and Nick Borre

00:20:14,289 --> 00:20:22,980
buffer received the same fast forwarding

00:20:18,100 --> 00:20:26,259
between interface you they must not wait

00:20:22,980 --> 00:20:30,999
well since space you should raise the

00:20:26,259 --> 00:20:35,350
TCP buffers just in case at that time

00:20:30,999 --> 00:20:43,509
there were no so many TCP so many

00:20:35,350 --> 00:20:47,379
queries over TCP well Brazil until five

00:20:43,509 --> 00:20:51,779
hundred and twenty four thousand the

00:20:47,379 --> 00:20:51,779
backlog queue incoming TCP connections

00:20:52,080 --> 00:21:06,309
and the list again it's incomplete well

00:21:02,499 --> 00:21:10,739
time to four unbound among has a very

00:21:06,309 --> 00:21:13,840
same default but if you want more

00:21:10,739 --> 00:21:18,850
performance if you require you must you

00:21:13,840 --> 00:21:22,330
must change those parameters like number

00:21:18,850 --> 00:21:25,600
of threads it's important you must you

00:21:22,330 --> 00:21:29,200
must put my recommendation is to put

00:21:25,600 --> 00:21:32,919
less call that the current you have if

00:21:29,200 --> 00:21:36,809
you have eight course it's I prefer to

00:21:32,919 --> 00:21:41,259
put six or maybe seven but nothing more

00:21:36,809 --> 00:21:46,269
why because if you have terrible traffic

00:21:41,259 --> 00:21:52,350
and you must get into the console by

00:21:46,269 --> 00:21:52,350
using SSH you will blame it

00:21:52,740 --> 00:21:59,760
and the risk as loves memory lock

00:21:56,399 --> 00:22:01,799
contention some parameters I I was - I

00:21:59,760 --> 00:22:05,940
was playing with those parameters

00:22:01,799 --> 00:22:09,750
because I'm I'm a word but not so were

00:22:05,940 --> 00:22:12,539
what they do and the documentation for

00:22:09,750 --> 00:22:15,059
RAM bound says try to not touch those

00:22:12,539 --> 00:22:24,120
parameters those memory parameters as

00:22:15,059 --> 00:22:30,990
loves well so record set size memory

00:22:24,120 --> 00:22:35,130
size and that implies you if you when

00:22:30,990 --> 00:22:38,580
you query you use execute tons of

00:22:35,130 --> 00:22:42,240
queries those queries go to memory if

00:22:38,580 --> 00:22:45,120
the memory is small those queries the

00:22:42,240 --> 00:22:47,750
cache a will will discard those queries

00:22:45,120 --> 00:22:51,809
and you will SPECT

00:22:47,750 --> 00:22:55,520
more traffic so it's better to raise

00:22:51,809 --> 00:22:58,980
those values message memory cache size

00:22:55,520 --> 00:23:02,250
number of ports because queries per

00:22:58,980 --> 00:23:08,070
second is a a chorus per second it

00:23:02,250 --> 00:23:12,120
implies open ports at the same time how

00:23:08,070 --> 00:23:15,600
many queries do you want to receive per

00:23:12,120 --> 00:23:20,940
call because if you receive excessive

00:23:15,600 --> 00:23:25,860
queries your course we get we get you

00:23:20,940 --> 00:23:29,549
will get hit on their course so gate

00:23:25,860 --> 00:23:32,929
receive and send buffer again you must

00:23:29,549 --> 00:23:37,140
raise those level those are some

00:23:32,929 --> 00:23:42,770
recommendable technical recommend my

00:23:37,140 --> 00:23:42,770
recommendations for may 4 million

00:23:45,580 --> 00:23:55,239
part number five of of six there are

00:23:51,639 --> 00:24:00,009
some tools for example DNS top DNS top

00:23:55,239 --> 00:24:04,360
is like a top tool of every UNIX

00:24:00,009 --> 00:24:09,580
operating system but it shows you which

00:24:04,360 --> 00:24:16,210
IP address sorted by who's the guy who

00:24:09,580 --> 00:24:19,929
is is hitting your DNS service it shows

00:24:16,210 --> 00:24:22,749
you your IP address the IP address it

00:24:19,929 --> 00:24:26,769
shows you queries per second it shows

00:24:22,749 --> 00:24:30,700
you as total you can eat its

00:24:26,769 --> 00:24:36,460
capabilities for example it which you

00:24:30,700 --> 00:24:36,909
can show you the whole text for the

00:24:36,460 --> 00:24:41,139
query

00:24:36,909 --> 00:24:46,659
I mean host names or query types if you

00:24:41,139 --> 00:24:49,210
have quality flag like name server mail

00:24:46,659 --> 00:24:52,299
exchange or whatever it will appear and

00:24:49,210 --> 00:24:56,590
it will say hey this IP address it's

00:24:52,299 --> 00:24:59,559
hitting your server check well it will

00:24:56,590 --> 00:25:06,429
not say check you you will say at the

00:24:59,559 --> 00:25:10,600
top but it's you must check it doesn't

00:25:06,429 --> 00:25:14,529
touch nothing of whatever it's running

00:25:10,600 --> 00:25:23,980
on the server so you can you can execute

00:25:14,529 --> 00:25:27,789
without any hassle like wait and one one

00:25:23,980 --> 00:25:32,320
thing to keep in mind when you execute

00:25:27,789 --> 00:25:37,320
for first time it will show you just by

00:25:32,320 --> 00:25:41,409
default where what how many queries you

00:25:37,320 --> 00:25:44,950
you are receiving at that box but you

00:25:41,409 --> 00:25:49,480
must put how many queries you are

00:25:44,950 --> 00:25:52,690
sending answering so there are some

00:25:49,480 --> 00:25:57,539
options that you must put first

00:25:52,690 --> 00:26:00,790
I mean force to show you queries

00:25:57,539 --> 00:26:12,490
receiving receive

00:26:00,790 --> 00:26:16,690
queries answered well prosper it shows

00:26:12,490 --> 00:26:24,580
you maximum queries you can use on that

00:26:16,690 --> 00:26:28,000
server until it can it until it it

00:26:24,580 --> 00:26:31,390
reaches the limit

00:26:28,000 --> 00:26:35,830
I prefer over DNS Perth because Dena's

00:26:31,390 --> 00:26:39,700
perf it shows you every time the same

00:26:35,830 --> 00:26:44,350
stress testings over the host names

00:26:39,700 --> 00:26:55,440
I prefer experts send you a burst of

00:26:44,350 --> 00:26:55,440
chorus respirable that's deflation

00:27:01,010 --> 00:27:08,660
my sorry my notebook has no nose such

00:27:06,799 --> 00:27:11,900
amount of hardware for brittle looks or

00:27:08,660 --> 00:27:18,350
whatever so it's a little demo I

00:27:11,900 --> 00:27:24,080
recorded on our computer DNS stop at the

00:27:18,350 --> 00:27:30,650
top at the bottom below whisper in

00:27:24,080 --> 00:27:37,910
action so you as you can see queries and

00:27:30,650 --> 00:27:42,140
replies you can see below I you can see

00:27:37,910 --> 00:27:47,480
below when when it has no more replies

00:27:42,140 --> 00:27:51,320
to sin and it shows let me show you it

00:27:47,480 --> 00:27:56,770
shows here the maximum throughput this

00:27:51,320 --> 00:27:56,770
is the maximum the DNS server can reach

00:27:57,340 --> 00:28:07,250
queries and replies let's show again

00:28:02,720 --> 00:28:11,360
here here is the the tamiya random cross

00:28:07,250 --> 00:28:17,150
names nominal provides at that time it's

00:28:11,360 --> 00:28:20,090
it tries to send res per 60 65 thousand

00:28:17,150 --> 00:28:25,370
more than 65,000 queries per second and

00:28:20,090 --> 00:28:30,850
it waits for a reply and here are some

00:28:25,370 --> 00:28:34,549
and some query types this is a counter

00:28:30,850 --> 00:28:40,520
this is a counter the queries per second

00:28:34,549 --> 00:28:46,480
and this is an accumulated and how many

00:28:40,520 --> 00:28:46,480
time does it run the distress testing

00:28:53,929 --> 00:29:03,470
conclusions from the infrastructure

00:28:56,809 --> 00:29:06,840
first test I got around 10 until 15

00:29:03,470 --> 00:29:12,179
thousands of queries per second it was

00:29:06,840 --> 00:29:15,210
cool but I'd say why not to do fine

00:29:12,179 --> 00:29:21,710
tuning by following calomel that are

00:29:15,210 --> 00:29:25,019
instructions ok let's go and well a

00:29:21,710 --> 00:29:29,849
reminder I didn't use DNS SEC at that

00:29:25,019 --> 00:29:34,679
time after I was a after I played with

00:29:29,849 --> 00:29:39,570
fine tuning the box the box shown me

00:29:34,679 --> 00:29:45,470
show showed me fifty four thousand of

00:29:39,570 --> 00:29:45,470
queries per second so it was great

00:29:54,420 --> 00:30:04,920
the new dinner service how to her hello

00:30:00,210 --> 00:30:07,950
we assigned the new IP before addresses

00:30:04,920 --> 00:30:12,020
for the mobile subscribers is extremely

00:30:07,950 --> 00:30:16,920
easy you touch you touch the

00:30:12,020 --> 00:30:20,910
configuration and after the session of

00:30:16,920 --> 00:30:23,390
the mobile subscriber drop-down he tries

00:30:20,910 --> 00:30:30,350
to reconnect it will receive the new

00:30:23,390 --> 00:30:33,360
ipv4 addresses it was not a forced the

00:30:30,350 --> 00:30:37,200
disconnection a massive disconnection it

00:30:33,360 --> 00:30:41,400
was for example when you use your cell

00:30:37,200 --> 00:30:46,860
phone you power off or you disconnect

00:30:41,400 --> 00:30:48,770
because no no signal or whatever that's

00:30:46,860 --> 00:30:54,150
the time when interested the new setup

00:30:48,770 --> 00:31:00,020
or because those sessions contains the

00:30:54,150 --> 00:31:04,200
time out of 24 hours or almost well I

00:31:00,020 --> 00:31:07,380
used capture at that time all times for

00:31:04,200 --> 00:31:13,860
gathering information and doing fancy

00:31:07,380 --> 00:31:24,500
graphics DNS top I used to see how how

00:31:13,860 --> 00:31:31,310
was their behavior conclusions

00:31:24,500 --> 00:31:31,310
well rapid deployment on the love

00:31:32,400 --> 00:31:45,090
there were several factors bottleneck

00:31:39,140 --> 00:31:47,460
some priests d provide some nice or

00:31:45,090 --> 00:31:52,140
excellent performance without any

00:31:47,460 --> 00:31:57,600
hassles and no stability no performance

00:31:52,140 --> 00:32:01,440
issues in fact they they were up and

00:31:57,600 --> 00:32:06,890
running those servers without without

00:32:01,440 --> 00:32:06,890
Hank without nothing for about 6 months

00:32:07,260 --> 00:32:17,950
well the roll numbers those six months

00:32:12,930 --> 00:32:23,050
queries such as will 80,000 queries per

00:32:17,950 --> 00:32:31,380
second and November when end up and with

00:32:23,050 --> 00:32:31,380
two with 120,000 and at May of 2014

00:32:31,600 --> 00:32:39,880
response time drop down from three

00:32:36,010 --> 00:32:44,950
seconds for for every query to zero

00:32:39,880 --> 00:32:54,010
point one so the service was good was

00:32:44,950 --> 00:32:59,770
running fine the end well queries were

00:32:54,010 --> 00:33:04,210
made from my subscribers the quick and

00:32:59,770 --> 00:33:06,310
not so dirty solution was received so

00:33:04,210 --> 00:33:16,180
well they say hey Paulo

00:33:06,310 --> 00:33:20,440
this is a nice solution don'ts lessons

00:33:16,180 --> 00:33:24,580
learnt and don't don't put a firewall in

00:33:20,440 --> 00:33:30,760
the middle when you have very high

00:33:24,580 --> 00:33:35,820
traffic of the nests of queries don't

00:33:30,760 --> 00:33:39,120
trust on your appliance don't the

00:33:35,820 --> 00:33:43,690
specifications are okay but don't follow

00:33:39,120 --> 00:33:50,500
don't trust blindly and don't avoid high

00:33:43,690 --> 00:33:55,320
availability DNS infrastructure it's

00:33:50,500 --> 00:33:55,320
better to have a load balancer

00:34:00,800 --> 00:34:10,169
second part on deuce you must have KPIs

00:34:05,850 --> 00:34:16,429
for query per second UDP traffic of

00:34:10,169 --> 00:34:16,429
course TCP traffic - you can use desktop

00:34:16,790 --> 00:34:22,340
[Music]

00:34:17,899 --> 00:34:26,520
you must put load balancers and

00:34:22,340 --> 00:34:31,730
dedicated not for firewalls with general

00:34:26,520 --> 00:34:36,060
purpose for the traffic don't do use

00:34:31,730 --> 00:34:38,399
physical servers don't use virtual

00:34:36,060 --> 00:34:41,129
servers I

00:34:38,399 --> 00:34:43,230
I wouldn't put some something on a

00:34:41,129 --> 00:34:45,929
virtual infrastructure for high if you

00:34:43,230 --> 00:34:50,780
want high performance and you have high

00:34:45,929 --> 00:34:54,720
traffic if you expect high traffic use a

00:34:50,780 --> 00:35:00,360
scalable operating system on DNS like

00:34:54,720 --> 00:35:07,500
FreeBSD I am bound among has several

00:35:00,360 --> 00:35:13,010
nice features I love security in mine it

00:35:07,500 --> 00:35:24,380
has so many anti bad guys features that

00:35:13,010 --> 00:35:27,450
it's a nice software acknowledgments

00:35:24,380 --> 00:35:31,230
previously in a little of naneun

00:35:27,450 --> 00:35:34,230
machinery factory thank you to Mario's

00:35:31,230 --> 00:35:36,690
server ski he pushed me hey Paulo send

00:35:34,230 --> 00:35:39,440
your presentation say in chalk senses

00:35:36,690 --> 00:35:43,770
and send like the birth of Homer Simpson

00:35:39,440 --> 00:35:49,280
little bit I'm here iam and thank you to

00:35:43,770 --> 00:35:53,430
Alan jewel he said he helped me to

00:35:49,280 --> 00:35:58,110
polish my english and some words and

00:35:53,430 --> 00:36:00,660
some some and i for example don't do

00:35:58,110 --> 00:36:05,640
that kind of animations you put you must

00:36:00,660 --> 00:36:11,390
put raw text like like the previews well

00:36:05,640 --> 00:36:14,750
that's all questions

00:36:11,390 --> 00:36:14,750
any questions

00:36:20,040 --> 00:36:27,120
no witness oh hello Pablo thank you very

00:36:24,720 --> 00:36:28,770
much have you mean welcome or have you

00:36:27,120 --> 00:36:32,880
considered enabling the unisex

00:36:28,770 --> 00:36:37,800
validation yes but performance was a

00:36:32,880 --> 00:36:41,550
huge bottleneck for those all eight yeah

00:36:37,800 --> 00:36:44,340
eight years old servers so it was not

00:36:41,550 --> 00:36:48,150
the priority at that time today yes of

00:36:44,340 --> 00:36:53,220
course but no not with her work from

00:36:48,150 --> 00:36:56,310
twenty and seven or twenty and eight so

00:36:53,220 --> 00:36:57,420
I have a couple of topics first I agree

00:36:56,310 --> 00:37:01,140
with you you should use a physical

00:36:57,420 --> 00:37:03,950
server however some of my colleagues

00:37:01,140 --> 00:37:07,500
said I can who operate the L root server

00:37:03,950 --> 00:37:09,210
did a number of tests using different

00:37:07,500 --> 00:37:12,000
virtualization platforms for the

00:37:09,210 --> 00:37:15,750
authority server they run and they found

00:37:12,000 --> 00:37:17,910
that it was fine and again I agree with

00:37:15,750 --> 00:37:20,520
you but I just want to say some people

00:37:17,910 --> 00:37:22,470
have tested this and found that there's

00:37:20,520 --> 00:37:25,940
no real change in the latency or the

00:37:22,470 --> 00:37:29,340
isochronous the service to virtualize so

00:37:25,940 --> 00:37:31,410
yeah you you may want to soften your

00:37:29,340 --> 00:37:33,930
recommendation there a little second I

00:37:31,410 --> 00:37:41,700
have a question what is the use case for

00:37:33,930 --> 00:37:45,860
a 16 megabyte received socket buffer the

00:37:41,700 --> 00:37:50,520
socket buffer is that when you receive

00:37:45,860 --> 00:37:55,920
so many queries per second it receives

00:37:50,520 --> 00:37:58,830
it must put the content of the socket in

00:37:55,920 --> 00:38:02,360
some were in somewhere of the memory it

00:37:58,830 --> 00:38:09,120
has some payload those sockets and

00:38:02,360 --> 00:38:15,690
whatever but multiplied per 60,000 so it

00:38:09,120 --> 00:38:19,140
must contains it must contain it must

00:38:15,690 --> 00:38:23,280
store the content into that memory

00:38:19,140 --> 00:38:24,930
that's the final purpose I know the

00:38:23,280 --> 00:38:28,440
purpose but the use case in this

00:38:24,930 --> 00:38:30,400
situation would seem to be that you are

00:38:28,440 --> 00:38:33,579
willing to wait more

00:38:30,400 --> 00:38:35,680
than a second between when a packet is

00:38:33,579 --> 00:38:37,539
received by the unit by the network

00:38:35,680 --> 00:38:39,460
interface and when it is seen by Unbound

00:38:37,539 --> 00:38:42,339
and I want to suggest that the

00:38:39,460 --> 00:38:44,170
experience of the buffer bloat project

00:38:42,339 --> 00:38:48,190
which is online at buffer bloat net

00:38:44,170 --> 00:38:49,720
shows that if you cannot service the

00:38:48,190 --> 00:38:52,450
response quick enough if you can't

00:38:49,720 --> 00:38:54,220
actually get it in or out in a lot less

00:38:52,450 --> 00:38:56,260
time than that you will do more harm

00:38:54,220 --> 00:38:59,020
than good by actually processing it

00:38:56,260 --> 00:39:00,819
later so I want to suggest a change to

00:38:59,020 --> 00:39:05,470
your recommendation where you calculate

00:39:00,819 --> 00:39:08,920
the number of octets of a query payload

00:39:05,470 --> 00:39:11,440
and also the number of queries that you

00:39:08,920 --> 00:39:13,450
would receive worst case in 250

00:39:11,440 --> 00:39:16,000
milliseconds and set your socket buffers

00:39:13,450 --> 00:39:18,849
to that so that you will not be in a

00:39:16,000 --> 00:39:21,460
position of burning CPU resources to

00:39:18,849 --> 00:39:30,520
receive queries that you should not be

00:39:21,460 --> 00:39:37,650
answering yes my main problem at that

00:39:30,520 --> 00:39:40,569
time was just stop stop stop hitting the

00:39:37,650 --> 00:39:42,940
result the network resources stop

00:39:40,569 --> 00:39:44,829
hitting of course the nearest servers

00:39:42,940 --> 00:39:47,859
stop hitting whatever

00:39:44,829 --> 00:39:53,380
so some parameters like that they were

00:39:47,859 --> 00:39:56,500
over over sighted so that's the final it

00:39:53,380 --> 00:39:58,990
shows the final explanation yeah well

00:39:56,500 --> 00:40:02,410
everything was just in case because I

00:39:58,990 --> 00:40:05,170
understand I just noted that you are an

00:40:02,410 --> 00:40:07,510
expert and that this presentation will

00:40:05,170 --> 00:40:09,700
be watched and your parameters may be

00:40:07,510 --> 00:40:12,760
copied I want to suggest that everything

00:40:09,700 --> 00:40:16,000
we've learned about the buffer sizes is

00:40:12,760 --> 00:40:18,579
to measure them in time not in packets

00:40:16,000 --> 00:40:21,089
or bytes and to constrain the amount of

00:40:18,579 --> 00:40:23,619
time we are willing to buffer because

00:40:21,089 --> 00:40:26,049
yesterday's newspaper is worth less than

00:40:23,619 --> 00:40:27,849
today's and a one second old query is

00:40:26,049 --> 00:40:30,100
probably better left unanswered

00:40:27,849 --> 00:40:32,950
not only is

00:40:30,100 --> 00:40:36,300
it more not always better sometimes more

00:40:32,950 --> 00:40:39,880
is worse finally I want to say that when

00:40:36,300 --> 00:40:43,150
FreeBSD chose to move from bind to

00:40:39,880 --> 00:40:45,820
unbound in the base system or as the

00:40:43,150 --> 00:40:48,940
recommended platform I realized that my

00:40:45,820 --> 00:40:52,480
work at ISC was done because I got bind

00:40:48,940 --> 00:40:54,880
from BSD and when the BSD I used stopped

00:40:52,480 --> 00:41:01,810
using bind I started looking for a new

00:40:54,880 --> 00:41:03,730
job okay thank you what you're talking

00:41:01,810 --> 00:41:07,270
to that I have the same feeling about

00:41:03,730 --> 00:41:10,750
the socket buffer configuration because

00:41:07,270 --> 00:41:17,050
you increase the TCP socket buffer to

00:41:10,750 --> 00:41:18,880
the sixteen minimize but yes I think

00:41:17,050 --> 00:41:21,690
they're increasing the buffer size

00:41:18,880 --> 00:41:25,270
limits the maximum number of concurrent

00:41:21,690 --> 00:41:26,670
connection of the TCP so in the tcp case

00:41:25,270 --> 00:41:30,780
oh no

00:41:26,670 --> 00:41:34,600
curious about the what what how many

00:41:30,780 --> 00:41:40,180
concurrent connection you want to accept

00:41:34,600 --> 00:41:43,390
it sound okay under normal circumstances

00:41:40,180 --> 00:41:45,220
you have among I remember it contains

00:41:43,390 --> 00:41:50,080
all more at a time

00:41:45,220 --> 00:41:54,400
Tim open connection TCP connection so I

00:41:50,080 --> 00:41:58,300
modified that we had to modify that at

00:41:54,400 --> 00:42:00,400
the same time for TCP parameters of the

00:41:58,300 --> 00:42:05,109
operating system that's the explanation

00:42:00,400 --> 00:42:07,540
for our sizing such amount yes so

00:42:05,109 --> 00:42:09,970
another question is the what makes the

00:42:07,540 --> 00:42:12,250
upper limitation of the performance even

00:42:09,970 --> 00:42:15,810
after your optimization for example the

00:42:12,250 --> 00:42:15,810
CPU usage or memory

00:42:18,240 --> 00:42:27,730
lowered until 40 percent per core yeah

00:42:23,920 --> 00:42:31,290
so a determines the current so query per

00:42:27,730 --> 00:42:34,990
seconds so if you wanted more of

00:42:31,290 --> 00:42:39,700
performance so which all right limits

00:42:34,990 --> 00:42:43,540
the current yeah okay

00:42:39,700 --> 00:42:46,720
the thing is you need another

00:42:43,540 --> 00:42:51,850
more another additional IP addresses

00:42:46,720 --> 00:42:58,180
first um I mean a single server if you

00:42:51,850 --> 00:43:02,290
want a more trace you need two

00:42:58,180 --> 00:43:06,670
additional IP address for the server you

00:43:02,290 --> 00:43:10,450
need to raise some almost socket buffers

00:43:06,670 --> 00:43:13,660
mm-hmm but wait those resources have

00:43:10,450 --> 00:43:17,500
some limits I was playing with those

00:43:13,660 --> 00:43:25,110
limits maximum socket buffers the best

00:43:17,500 --> 00:43:33,910
value was until 8 million if I put 16 or

00:43:25,110 --> 00:43:38,770
24 20 million my several hand so what so

00:43:33,910 --> 00:43:43,510
8 million was a quiet value for no

00:43:38,770 --> 00:43:51,520
receiving any kind of problems that's

00:43:43,510 --> 00:43:54,250
the way I my my first step including

00:43:51,520 --> 00:43:57,610
reading the whole documentation it will

00:43:54,250 --> 00:44:02,230
be stress testing until reaching some

00:43:57,610 --> 00:44:07,750
point Vienna so I'm sparf know if you

00:44:02,230 --> 00:44:10,450
stop if you stop receiving answering you

00:44:07,750 --> 00:44:14,710
will get the the right parameters for

00:44:10,450 --> 00:44:18,670
for you you will put you will get the

00:44:14,710 --> 00:44:23,830
limits and you will say I need more

00:44:18,670 --> 00:44:29,500
servers it was more more than studying

00:44:23,830 --> 00:44:32,020
the studying the the parameters it was a

00:44:29,500 --> 00:44:35,020
play it was playing with those

00:44:32,020 --> 00:44:40,830
parameters and doing our capacity

00:44:35,020 --> 00:44:40,830
planning its a mix ok thank you

00:44:48,250 --> 00:44:51,000
anyone

00:44:52,430 --> 00:44:57,720
oh well thank you very much

00:44:57,040 --> 00:45:01,600
[Applause]

00:44:57,720 --> 00:45:01,600
[Music]

00:45:06,250 --> 00:45:08,310

YouTube URL: https://www.youtube.com/watch?v=_xCh20l-vHA


