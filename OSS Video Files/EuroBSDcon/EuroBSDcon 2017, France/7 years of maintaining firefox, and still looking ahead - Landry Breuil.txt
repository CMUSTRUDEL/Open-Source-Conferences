Title: 7 years of maintaining firefox, and still looking ahead - Landry Breuil
Publication date: 2019-10-15
Playlist: EuroBSDcon 2017, France
Description: 
	Description:

It’s 2017, and some (rare) people are still using OpenBSD as a main
laptop OS, and some of them are still using firefox (no, not everyone
moved to chromium) – let’s have a look at what happened since the
firefox 3.6 days, in terms of firefox features, toolchains struggle,
platform coverage, source patching, relationship with upstream, and what
challenges are ahead of us – spoiler alert: there will be rust. And
system limits. And multiprocess.

Speaker biography:

Landry Breuil has been an OpenBSD developer since 2007, mostly
hacking on ports, desktop environments and browsers – he works as a GIS
sysadmin in an small non-profit in France.
Captions: 
	00:00:00,000 --> 00:00:05,670
is our cheating tone sentence of

00:00:02,820 --> 00:00:09,139
terabytes of features making web web

00:00:05,670 --> 00:00:13,799
services with them in the public area so

00:00:09,139 --> 00:00:17,130
I'm almost not doing BSD at work I've

00:00:13,799 --> 00:00:19,350
been open BSD developer since 10 years

00:00:17,130 --> 00:00:22,830
maybe it would be ten years in next week

00:00:19,350 --> 00:00:25,160
or something like this it's been a while

00:00:22,830 --> 00:00:28,650
I've been contributing to Mozilla since

00:00:25,160 --> 00:00:31,710
2010 eleven more less six years and I've

00:00:28,650 --> 00:00:34,140
also been contributing developing

00:00:31,710 --> 00:00:38,550
helping the system in parts of the XFC

00:00:34,140 --> 00:00:41,670
project since 2006 so as a result of

00:00:38,550 --> 00:00:43,110
course I'm the safe see what maintainer

00:00:41,670 --> 00:00:44,940
since forever

00:00:43,110 --> 00:00:47,100
that's all I got my commit bit in open

00:00:44,940 --> 00:00:53,670
BSD and I've been the Mozilla pod

00:00:47,100 --> 00:00:57,210
maintainer by accident since 6 years so

00:00:53,670 --> 00:00:59,129
uh for start you can use open BSD as a

00:00:57,210 --> 00:01:02,579
desktop laptop writing system it just

00:00:59,129 --> 00:01:04,320
works you just use current use binary

00:01:02,579 --> 00:01:05,610
packages you have all the desktops you

00:01:04,320 --> 00:01:07,320
want you have the full-blown desktops

00:01:05,610 --> 00:01:09,150
the bloody desktops and everything you

00:01:07,320 --> 00:01:11,220
use the one you want if you want a small

00:01:09,150 --> 00:01:12,930
window major you can use one don't worry

00:01:11,220 --> 00:01:14,580
about that you have everything from

00:01:12,930 --> 00:01:17,850
browsers to mil-to-mil yet from games

00:01:14,580 --> 00:01:20,729
working suspend and resume so it's a

00:01:17,850 --> 00:01:22,229
perfect fit for the king if you just if

00:01:20,729 --> 00:01:24,240
you are just used to update your

00:01:22,229 --> 00:01:29,340
machines and when something breaks you

00:01:24,240 --> 00:01:33,210
know how to fix it speaking wider about

00:01:29,340 --> 00:01:34,799
Firefox itself it's been for me the

00:01:33,210 --> 00:01:37,259
leading web browser in open-source

00:01:34,799 --> 00:01:39,240
software communities for a decade and

00:01:37,259 --> 00:01:43,259
more I think I started using it when it

00:01:39,240 --> 00:01:49,110
was called Phoenix then Firebird then

00:01:43,259 --> 00:01:51,060
Firefox when I was a student that's not

00:01:49,110 --> 00:01:53,009
only Firefox there's also tender bird

00:01:51,060 --> 00:01:55,320
sea monkey which is the following of the

00:01:53,009 --> 00:01:58,170
Mozilla original Mozilla suit there was

00:01:55,320 --> 00:02:00,420
technology which was called Valrhona

00:01:58,170 --> 00:02:02,640
there's a huge community compared to the

00:02:00,420 --> 00:02:05,509
bsd quickies we know it's something I

00:02:02,640 --> 00:02:09,179
would say ten times bigger in terms of

00:02:05,509 --> 00:02:11,780
contributors in terms of engaged

00:02:09,179 --> 00:02:15,320
engagement in conferences people

00:02:11,780 --> 00:02:18,370
trying to do some net net neutrality

00:02:15,320 --> 00:02:21,110
politics there's much more than just the

00:02:18,370 --> 00:02:23,560
code and the project itself it's of

00:02:21,110 --> 00:02:26,120
course also a huge infrastructure

00:02:23,560 --> 00:02:27,770
Mozilla used to run all its

00:02:26,120 --> 00:02:30,410
infrastructure in its own data centers

00:02:27,770 --> 00:02:33,830
it's no moving more and more to the to

00:02:30,410 --> 00:02:36,320
the cloud for business reasons for cost

00:02:33,830 --> 00:02:40,310
reasons as a consequence at some point

00:02:36,320 --> 00:02:42,470
the Mozilla Foundation gave well I they

00:02:40,310 --> 00:02:44,720
were trying to get rid of lots of

00:02:42,470 --> 00:02:47,870
Mac minis that were used for building

00:02:44,720 --> 00:02:50,450
test infrastructure so we got something

00:02:47,870 --> 00:02:52,940
like 50 Mac minis in San Francisco it's

00:02:50,450 --> 00:02:55,580
been a funny funny pair of weeks to be

00:02:52,940 --> 00:02:57,800
able to distribute all of them to

00:02:55,580 --> 00:03:00,770
developers in open BSD we wanted to add

00:02:57,800 --> 00:03:01,820
a Mac Mini for development so you see

00:03:00,770 --> 00:03:04,430
that you can see that communities can

00:03:01,820 --> 00:03:06,320
communicate easily if you know the right

00:03:04,430 --> 00:03:08,720
persons if you are involved in both

00:03:06,320 --> 00:03:12,500
communities it's also a huge cut days

00:03:08,720 --> 00:03:15,470
it's freakin insane I mean in terms of

00:03:12,500 --> 00:03:19,519
lines of code it's for it ten times an

00:03:15,470 --> 00:03:25,370
operating system I would say it's it's a

00:03:19,519 --> 00:03:27,560
 maze I I don't know I don't know

00:03:25,370 --> 00:03:29,239
the code itself honestly I'm not good at

00:03:27,560 --> 00:03:32,090
cutting I'm not good at winging at all

00:03:29,239 --> 00:03:35,360
and I could say I'm good at fixing bugs

00:03:32,090 --> 00:03:37,190
and finding where it breaks and oh do

00:03:35,360 --> 00:03:38,920
you manage to build stuff that's the

00:03:37,190 --> 00:03:44,000
part where I can could say I'm good at

00:03:38,920 --> 00:03:45,980
they use mercurial lots of small let's

00:03:44,000 --> 00:03:49,220
say side projects are developed outside

00:03:45,980 --> 00:03:51,530
mercurial and they know more and more

00:03:49,220 --> 00:03:54,079
stuff in github so there are lots of

00:03:51,530 --> 00:03:56,090
techniques to impostor from github to

00:03:54,079 --> 00:03:59,720
material and you have things in both

00:03:56,090 --> 00:04:02,630
ways and it's a full-time job to keep up

00:03:59,720 --> 00:04:05,150
with that so I count of course since

00:04:02,630 --> 00:04:07,310
Firefox for theirs if that what's called

00:04:05,150 --> 00:04:08,510
the fast release schedule which is

00:04:07,310 --> 00:04:12,549
modeled after what

00:04:08,510 --> 00:04:14,890
común did so it's worth around 2011

00:04:12,549 --> 00:04:18,019
there's a new release every six week

00:04:14,890 --> 00:04:19,940
which means there are no big features

00:04:18,019 --> 00:04:21,440
every six weeks but you get a new real

00:04:19,940 --> 00:04:23,210
version every six weeks and it's

00:04:21,440 --> 00:04:23,910
supposed to be totally seamless for the

00:04:23,210 --> 00:04:26,760
end user

00:04:23,910 --> 00:04:30,840
you're not supposed to notice anything

00:04:26,760 --> 00:04:34,320
visible well it was it works most of the

00:04:30,840 --> 00:04:38,310
time the supported platforms by upstream

00:04:34,320 --> 00:04:43,830
of course main platforms windows from

00:04:38,310 --> 00:04:45,360
95% of the user base maybe Mac OS 4 4 5

00:04:43,830 --> 00:04:47,010
maybe 10 percent I don't really know the

00:04:45,360 --> 00:04:50,070
last numbers there are plenty of numbers

00:04:47,010 --> 00:04:53,190
on metrics but mozilla.org I think on

00:04:50,070 --> 00:04:54,990
the user the user the installed user

00:04:53,190 --> 00:04:57,210
base and probably like one to five

00:04:54,990 --> 00:05:01,800
percent for Linux and of course we have

00:04:57,210 --> 00:05:04,860
no idea for the others like and of

00:05:01,800 --> 00:05:06,720
course it's mostly support only on I 56

00:05:04,860 --> 00:05:08,700
in the 64 like the platforms that people

00:05:06,720 --> 00:05:11,430
actually can buy in the market and use

00:05:08,700 --> 00:05:13,230
as laptops arm is support way more than

00:05:11,430 --> 00:05:16,610
before of course I forgot about it but

00:05:13,230 --> 00:05:20,370
not really the supported platform on arm

00:05:16,610 --> 00:05:22,920
on arm on recent arms like if you have a

00:05:20,370 --> 00:05:26,130
smartphone which is two years old like

00:05:22,920 --> 00:05:27,660
this 60 euros

00:05:26,130 --> 00:05:29,730
you don't install the latest version

00:05:27,660 --> 00:05:31,260
because the instruction set of arm has

00:05:29,730 --> 00:05:32,700
been considered as deprecated so you

00:05:31,260 --> 00:05:35,010
need a new a smartphone the same thing

00:05:32,700 --> 00:05:37,740
for tablets I have a Galaxy Tab from

00:05:35,010 --> 00:05:42,230
2011 and I don't install anything more

00:05:37,740 --> 00:05:45,750
recent than Firefox 35 or 40 something

00:05:42,230 --> 00:05:47,460
people has been thinking its Mozilla is

00:05:45,750 --> 00:05:48,990
dying yeah it's the same thing the BSD

00:05:47,460 --> 00:05:50,970
is are dying and everything is dying but

00:05:48,990 --> 00:05:54,120
there are still people working on it

00:05:50,970 --> 00:05:56,040
lots of people there has been two or

00:05:54,120 --> 00:05:58,110
three years doing when the Mozilla

00:05:56,040 --> 00:06:00,330
Foundation developed Firefox OS which

00:05:58,110 --> 00:06:07,710
shifted a lots of interests compared to

00:06:00,330 --> 00:06:10,770
before where they were ok so I'm going

00:06:07,710 --> 00:06:12,810
to yell a bit louder I was saying that

00:06:10,770 --> 00:06:14,460
during two or three years the Mozilla

00:06:12,810 --> 00:06:17,100
Foundation tried to develop Firefox OS

00:06:14,460 --> 00:06:20,730
on the same code base which was full of

00:06:17,100 --> 00:06:23,940
nice ideas in the end the the market

00:06:20,730 --> 00:06:26,280
didn't reply quick totally positively so

00:06:23,940 --> 00:06:28,590
it was a fail but they learn lots of

00:06:26,280 --> 00:06:32,460
interesting things from this so it was a

00:06:28,590 --> 00:06:34,470
loss of money probably the idea of

00:06:32,460 --> 00:06:36,070
something like 600 engineers in Taiwan

00:06:34,470 --> 00:06:37,900
which had to be

00:06:36,070 --> 00:06:39,460
moved elsewhere so for the codebase

00:06:37,900 --> 00:06:40,930
itself it has been quite a description

00:06:39,460 --> 00:06:42,700
for two or three years because there was

00:06:40,930 --> 00:06:44,710
 loads of code for what dicker what

00:06:42,700 --> 00:06:47,140
was called good to gecko in code terms

00:06:44,710 --> 00:06:48,670
that could disrupt what was happening

00:06:47,140 --> 00:06:54,130
for Firefox for desktop so it was an

00:06:48,670 --> 00:06:59,230
interesting drawn it so yeah the rotor

00:06:54,130 --> 00:07:00,790
works historically of course insight

00:06:59,230 --> 00:07:03,390
Explorer was the main browser everyone

00:07:00,790 --> 00:07:06,220
not speaking only about the BS DS but

00:07:03,390 --> 00:07:08,410
Firefox one the browser were around 2000

00:07:06,220 --> 00:07:10,780
something and then chromium arrived and

00:07:08,410 --> 00:07:14,680
then Google for chief lots of money into

00:07:10,780 --> 00:07:17,560
chrome which is fine I won't enter into

00:07:14,680 --> 00:07:19,870
politics but the fact that some Google

00:07:17,560 --> 00:07:23,080
applications were much nicer on chromium

00:07:19,870 --> 00:07:24,520
because it's a it's a first main target

00:07:23,080 --> 00:07:26,950
platform because most of its pros it

00:07:24,520 --> 00:07:30,490
don't help the other browsers and you

00:07:26,950 --> 00:07:35,170
can think that right now in 2017 I think

00:07:30,490 --> 00:07:37,840
Firefox has a market share of 15 to 20

00:07:35,170 --> 00:07:42,670
percent let's say when it was around 40

00:07:37,840 --> 00:07:44,950
50 percent five or six years ago in the

00:07:42,670 --> 00:07:48,700
end it so it all matters the choice you

00:07:44,950 --> 00:07:51,160
want to do as a user if you care about

00:07:48,700 --> 00:07:53,470
having same defaults if you care about

00:07:51,160 --> 00:07:55,090
the politics behind what Mozilla is

00:07:53,470 --> 00:07:57,700
doing the end what chromium is doing

00:07:55,090 --> 00:08:00,310
with your user data it depends who you

00:07:57,700 --> 00:08:03,820
trust you are trusting more Mozilla or

00:08:00,310 --> 00:08:06,400
Google if you trust nobody then well you

00:08:03,820 --> 00:08:08,320
can use links or Nets off there are

00:08:06,400 --> 00:08:09,940
plenty of choices you don't have to use

00:08:08,320 --> 00:08:12,610
them but if you want to do some cell use

00:08:09,940 --> 00:08:14,740
full-blown JavaScript applications you

00:08:12,610 --> 00:08:17,610
don't really have the choice and it's a

00:08:14,740 --> 00:08:20,380
matter of habits

00:08:17,610 --> 00:08:21,640
lots of people have I've been picking

00:08:20,380 --> 00:08:23,740
graphs about yet

00:08:21,640 --> 00:08:24,820
chromium consumes less Firefox consume

00:08:23,740 --> 00:08:27,400
less resources

00:08:24,820 --> 00:08:29,080
honestly it's only metrics and it read

00:08:27,400 --> 00:08:33,370
depends on lots of factors that I have

00:08:29,080 --> 00:08:34,930
no idea you can you can use the number

00:08:33,370 --> 00:08:36,580
of the way you want in the end it all

00:08:34,930 --> 00:08:38,610
matters you can just choose the one you

00:08:36,580 --> 00:08:38,610
want

00:08:43,490 --> 00:08:48,110
we were young

00:08:45,800 --> 00:08:49,700
OpenBSD followed six there was the

00:08:48,110 --> 00:08:53,030
complicated from the transition between

00:08:49,700 --> 00:08:56,750
Firefox 3 and firefox 3.5 and 3.6 and

00:08:53,030 --> 00:08:59,780
Firefox 4 was coming and the current

00:08:56,750 --> 00:09:02,210
maintained wasn't replying to my emails

00:08:59,780 --> 00:09:04,580
about updating them

00:09:02,210 --> 00:09:07,160
it wasn't very responsive at that time

00:09:04,580 --> 00:09:08,540
he didn't have much time so I started

00:09:07,160 --> 00:09:11,150
looking as an interesting challenge like

00:09:08,540 --> 00:09:12,500
okay I can maybe update to Firefox 4 as

00:09:11,150 --> 00:09:14,330
I got interested

00:09:12,500 --> 00:09:17,240
yeah the fast the new fast schedule

00:09:14,330 --> 00:09:20,750
first really still looks interesting and

00:09:17,240 --> 00:09:24,110
it got me into the rabbits all for the

00:09:20,750 --> 00:09:26,240
years since then at that time Firefox

00:09:24,110 --> 00:09:28,460
was working perfectly fine on Mac PPC

00:09:26,240 --> 00:09:32,570
and Spock 64 it was building 2 on alpha

00:09:28,460 --> 00:09:35,000
I don't remember if I run it on alpha on

00:09:32,570 --> 00:09:39,590
a console screen like the real the real

00:09:35,000 --> 00:09:43,430
glass glass screen if you could see that

00:09:39,590 --> 00:09:45,980
the code base was aged it was working

00:09:43,430 --> 00:09:47,780
but jamaicans on 2 L everywhere so

00:09:45,980 --> 00:09:50,830
that's yeah ok people think it's

00:09:47,780 --> 00:09:54,200
horrible but still we know how to

00:09:50,830 --> 00:09:56,300
understand it and a kid that was not so

00:09:54,200 --> 00:10:00,040
bad we were able to build it with a

00:09:56,300 --> 00:10:05,030
system tool chain which was at that time

00:10:00,040 --> 00:10:07,460
GCC for and GCC free on some platforms

00:10:05,030 --> 00:10:10,610
but we had to use this before because it

00:10:07,460 --> 00:10:12,440
was C++ from 2010 which was requiring

00:10:10,610 --> 00:10:13,400
some stuff which were on present in GCC

00:10:12,440 --> 00:10:16,010
free

00:10:13,400 --> 00:10:20,600
there was Java plug-in of course coming

00:10:16,010 --> 00:10:24,850
from the GT gdj 1.5 there were a lots of

00:10:20,600 --> 00:10:26,630
other plugins NPAPI which is the way

00:10:24,850 --> 00:10:28,700
gecko enjoying

00:10:26,630 --> 00:10:32,450
allows plugins to interact with the

00:10:28,700 --> 00:10:36,110
browsers for Java for for a terminal in

00:10:32,450 --> 00:10:38,180
a tab which is funny quite useless for

00:10:36,110 --> 00:10:41,360
media playing outside of the browser

00:10:38,180 --> 00:10:43,040
there was there was a camellia plugin in

00:10:41,360 --> 00:10:44,480
the port there was something that I'm

00:10:43,040 --> 00:10:46,370
only talking about Firefox because there

00:10:44,480 --> 00:10:50,150
was model is the same thing in C monkey

00:10:46,370 --> 00:10:52,750
and a bird that was around 82 and red

00:10:50,150 --> 00:10:56,480
patches for lots of things without

00:10:52,750 --> 00:11:00,880
comments without I only add the CVS

00:10:56,480 --> 00:11:03,830
honestly gel itself was the toolkit

00:11:00,880 --> 00:11:05,840
Mozilla was promoting to build the

00:11:03,830 --> 00:11:08,120
graphical interface of the browser which

00:11:05,840 --> 00:11:10,400
is everything which is outside the

00:11:08,120 --> 00:11:13,490
browser window well I mean the the web

00:11:10,400 --> 00:11:15,620
page is was built around Excel and the

00:11:13,490 --> 00:11:17,770
runner was the runtime to be able to

00:11:15,620 --> 00:11:21,290
build applications using these toolkits

00:11:17,770 --> 00:11:24,050
it was still used a lot in 2010 and of

00:11:21,290 --> 00:11:27,530
course the West and the world to see

00:11:24,050 --> 00:11:30,320
monkey 1.7 something which was more less

00:11:27,530 --> 00:11:32,150
the Mozilla suit still building but

00:11:30,320 --> 00:11:35,090
without new features for people who were

00:11:32,150 --> 00:11:40,940
used to the old interface it's still

00:11:35,090 --> 00:11:45,350
available of course in 2013 after three

00:11:40,940 --> 00:11:47,720
years of nice work I managed to remove

00:11:45,350 --> 00:11:50,300
well to upstream all the patches most of

00:11:47,720 --> 00:11:54,620
the patches we had I got involved in the

00:11:50,300 --> 00:11:55,910
Mozilla community to build the ports the

00:11:54,620 --> 00:11:58,940
everything which was common was

00:11:55,910 --> 00:12:01,220
centralized in a module for the port 3

00:11:58,940 --> 00:12:03,050
which allowed me to do lots of cleanup

00:12:01,220 --> 00:12:05,300
and only have the important thing for

00:12:03,050 --> 00:12:09,320
Firefox and Thunderbird separately in

00:12:05,300 --> 00:12:12,170
there all make files we were already

00:12:09,320 --> 00:12:13,730
building with si Lang or GCC 4.6

00:12:12,170 --> 00:12:16,640
depending on the platforms since Firefox

00:12:13,730 --> 00:12:19,070
6:17 because I think at that point it

00:12:16,640 --> 00:12:21,770
was requiring some features from C++

00:12:19,070 --> 00:12:24,070
which weren't available in GCC for the

00:12:21,770 --> 00:12:28,370
tool that we asked we were still using

00:12:24,070 --> 00:12:31,550
in the base system HTML video and audio

00:12:28,370 --> 00:12:35,090
was working quite nice at that time they

00:12:31,550 --> 00:12:38,350
had imported the Lib AV codecs libraries

00:12:35,090 --> 00:12:41,180
through they called video and audio

00:12:38,350 --> 00:12:43,460
WebGL was working depending on your

00:12:41,180 --> 00:12:46,220
graphical chipset and if you had OpenGL

00:12:43,460 --> 00:12:51,260
working it was working quite nice there

00:12:46,220 --> 00:12:54,110
wasn't a port for the ESL line which was

00:12:51,260 --> 00:12:55,640
created with Firefox 10 I think because

00:12:54,110 --> 00:12:57,260
people were complaining that ok does

00:12:55,640 --> 00:12:59,360
release every six week but it's moving

00:12:57,260 --> 00:13:01,460
too fast and is breaking you our user

00:12:59,360 --> 00:13:03,200
flow so you need to provide a long-term

00:13:01,460 --> 00:13:05,840
support release so doesn't there was a

00:13:03,200 --> 00:13:09,130
new branch but there wasn't a port for

00:13:05,840 --> 00:13:09,130
it because I was considering

00:13:09,300 --> 00:13:13,860
India it wasn't work not that much work

00:13:12,390 --> 00:13:15,450
but I was conceiving it not that's

00:13:13,860 --> 00:13:17,370
interesting that if you want favor folks

00:13:15,450 --> 00:13:19,880
you just choose Firefox I don't want to

00:13:17,370 --> 00:13:24,180
maintain another separate copy of

00:13:19,880 --> 00:13:29,250
Firefox and I think at that time in 2013

00:13:24,180 --> 00:13:32,310
I already got to commit access at

00:13:29,250 --> 00:13:34,470
Mozilla because most of the developers I

00:13:32,310 --> 00:13:36,360
was reporting on our Apaches for the

00:13:34,470 --> 00:13:37,650
bugzilla and after a while they got

00:13:36,360 --> 00:13:39,780
really pissed at me because I was

00:13:37,650 --> 00:13:41,640
keeping creating bugs and pushing back

00:13:39,780 --> 00:13:43,650
patches and Indian was okay they will

00:13:41,640 --> 00:13:45,570
give you access and you'll commit your

00:13:43,650 --> 00:13:47,250
stuff which is Indian Mallis what

00:13:45,570 --> 00:13:49,440
happens in the BSD communities too if

00:13:47,250 --> 00:13:51,630
you RS the developers enough Swiss

00:13:49,440 --> 00:13:54,420
patches at some point you get blamed

00:13:51,630 --> 00:13:56,460
then you get so commit access so that

00:13:54,420 --> 00:13:59,130
was interesting at that time because I

00:13:56,460 --> 00:14:04,530
had to learn mercurial of course well

00:13:59,130 --> 00:14:06,120
coming from CVS was nice which is nice

00:14:04,530 --> 00:14:09,210
because with all the projects have been

00:14:06,120 --> 00:14:13,620
working outside of and PTSD have been I

00:14:09,210 --> 00:14:17,400
had to use git mercurial i think i i i i

00:14:13,620 --> 00:14:20,460
had to use most of the VCS available and

00:14:17,400 --> 00:14:22,710
that gives you a different view on the

00:14:20,460 --> 00:14:26,010
way communities work the tools they are

00:14:22,710 --> 00:14:27,990
using mozilla is reading a lot well

00:14:26,010 --> 00:14:29,550
everything happens through Bugzilla if

00:14:27,990 --> 00:14:31,260
you want to change a coma somewhere you

00:14:29,550 --> 00:14:32,790
have to file a bug which can be

00:14:31,260 --> 00:14:35,310
considered tedious but at least

00:14:32,790 --> 00:14:37,800
everything is tracked and you can trace

00:14:35,310 --> 00:14:39,900
back a change to ever did it with

00:14:37,800 --> 00:14:42,780
weather reviewed it and why was it

00:14:39,900 --> 00:14:45,660
committed which is a process which is

00:14:42,780 --> 00:14:50,700
quite interesting compared to what we

00:14:45,660 --> 00:14:54,360
can be used to see in the bsd and right

00:14:50,700 --> 00:14:56,850
now four years later WebGL is still sort

00:14:54,360 --> 00:14:59,640
of rocking the fact the only issue is my

00:14:56,850 --> 00:15:02,670
laptop or work desktop or on desktop

00:14:59,640 --> 00:15:04,200
only have all graphic jobs so it's not

00:15:02,670 --> 00:15:08,180
working for me but i know it's working

00:15:04,200 --> 00:15:11,100
for people who have recent Alduin

00:15:08,180 --> 00:15:13,710
javascript is not so not that fat not

00:15:11,100 --> 00:15:15,540
that fast which can be an issue because

00:15:13,710 --> 00:15:17,370
more and more stuff are relying on

00:15:15,540 --> 00:15:19,110
javascript all the time

00:15:17,370 --> 00:15:22,730
lots of bits of the graphical interface

00:15:19,110 --> 00:15:24,830
are being written well

00:15:22,730 --> 00:15:27,200
but they were written with zoo and they

00:15:24,830 --> 00:15:29,600
are now written with javascript so parts

00:15:27,200 --> 00:15:31,340
of the user interface are in JavaScript

00:15:29,600 --> 00:15:34,460
so if you need an efficient the return

00:15:31,340 --> 00:15:37,250
join WebRTC which is the technology

00:15:34,460 --> 00:15:39,740
behind interpersonal communications

00:15:37,250 --> 00:15:43,340
audio/video communications like Skype

00:15:39,740 --> 00:15:45,770
but in your browser the code which is in

00:15:43,340 --> 00:15:49,040
Mozilla is shared with chromium more or

00:15:45,770 --> 00:15:51,650
less and when it was imported in Mozilla

00:15:49,040 --> 00:15:54,380
it was quite funny while of patching

00:15:51,650 --> 00:15:56,390
figure out the build system which wasn't

00:15:54,380 --> 00:15:58,400
at all the Mozilla bits built system

00:15:56,390 --> 00:16:00,290
which was integrated partly in the

00:15:58,400 --> 00:16:03,470
Mozilla build system but still using the

00:16:00,290 --> 00:16:05,390
Gipper or that you don't really want to

00:16:03,470 --> 00:16:08,450
know how it works

00:16:05,390 --> 00:16:10,100
that was quite painful but right now I

00:16:08,450 --> 00:16:14,240
haven't tested it since maybe a year but

00:16:10,100 --> 00:16:17,840
you can use you can try using WebRTC on

00:16:14,240 --> 00:16:19,400
Firefox OpenBSD it will or you can try

00:16:17,840 --> 00:16:21,320
there are lots of websites using this

00:16:19,400 --> 00:16:22,700
technology you can share your microphone

00:16:21,320 --> 00:16:25,940
with it you can share your webcam with

00:16:22,700 --> 00:16:29,840
it it might work but don't trust me on

00:16:25,940 --> 00:16:31,490
this you can enable the military process

00:16:29,840 --> 00:16:36,020
feature of Firefox which is something

00:16:31,490 --> 00:16:38,390
that has been asked for long time by

00:16:36,020 --> 00:16:41,210
users because chromium added and it

00:16:38,390 --> 00:16:43,570
allowed them to separate resources from

00:16:41,210 --> 00:16:46,430
the content process from the UI process

00:16:43,570 --> 00:16:48,620
its Mozilla stuff

00:16:46,430 --> 00:16:51,620
tried to develop this for Firefox 4 and

00:16:48,620 --> 00:16:54,160
then totally gave up because it was they

00:16:51,620 --> 00:16:58,130
had imported inter process communication

00:16:54,160 --> 00:17:00,740
framework from chromium and it was

00:16:58,130 --> 00:17:03,650
totally abandoned after a while and it

00:17:00,740 --> 00:17:06,140
became something that there was more

00:17:03,650 --> 00:17:08,930
interest in it maybe one or two years

00:17:06,140 --> 00:17:12,290
ago again so it's working on open BSD

00:17:08,930 --> 00:17:14,150
you can have it it by you can check if

00:17:12,290 --> 00:17:16,940
it's working for you by going to about

00:17:14,150 --> 00:17:18,920
support and you have some line which

00:17:16,940 --> 00:17:21,380
says multi-process windows enabled or

00:17:18,920 --> 00:17:23,720
not or disabled by default or you can

00:17:21,380 --> 00:17:26,000
force enable it I still have to figure

00:17:23,720 --> 00:17:28,430
out what's what needs to be done so that

00:17:26,000 --> 00:17:30,590
it's enabled by default without doing

00:17:28,430 --> 00:17:32,660
anything because most of the time it's

00:17:30,590 --> 00:17:35,539
enabled by default only tested platforms

00:17:32,660 --> 00:17:38,510
we are not a tested platform of course

00:17:35,539 --> 00:17:40,429
in the poetry right now we have what I

00:17:38,510 --> 00:17:45,260
call what I call the mainline Firefox

00:17:40,429 --> 00:17:47,200
which is 555 dot 0 dot 356 is around the

00:17:45,260 --> 00:17:50,270
corner it will be released like next

00:17:47,200 --> 00:17:53,030
Tuesday or Wednesday so it's at they are

00:17:50,270 --> 00:17:56,480
see free there's a port for Firefox ESL

00:17:53,030 --> 00:17:58,100
which is right now 5257 will be released

00:17:56,480 --> 00:18:01,340
in November which will be a bit too late

00:17:58,100 --> 00:18:04,640
for open BSD 6.2 so I'll come back a bit

00:18:01,340 --> 00:18:07,150
on that later an external contributor

00:18:04,640 --> 00:18:11,780
made a pot for the top also a bundle

00:18:07,150 --> 00:18:14,360
which is a modified version of ESA bill

00:18:11,780 --> 00:18:16,700
bundling tall and some Firefox

00:18:14,360 --> 00:18:19,400
extensions to use HTTPS Everywhere and

00:18:16,700 --> 00:18:21,679
no script is enabled by default and

00:18:19,400 --> 00:18:23,929
everything is integrated correctly in

00:18:21,679 --> 00:18:26,480
five in the modified Firefox version so

00:18:23,929 --> 00:18:29,330
you you can use the table awesome button

00:18:26,480 --> 00:18:31,850
bundle on OpenBSD it should work right

00:18:29,330 --> 00:18:35,030
it should work without doing anything I

00:18:31,850 --> 00:18:37,880
was a bit reluctant to import it because

00:18:35,030 --> 00:18:41,990
as Mozilla contributors in some years

00:18:37,880 --> 00:18:45,559
I've only I've often had considered the

00:18:41,990 --> 00:18:49,309
tor browser developers has no style fork

00:18:45,559 --> 00:18:51,559
because they didn't tried that much to

00:18:49,309 --> 00:18:53,780
contribute back all the security and

00:18:51,559 --> 00:18:56,090
privacy patches they were doing into a

00:18:53,780 --> 00:18:59,720
browser bundle did what it was the case

00:18:56,090 --> 00:19:01,520
two years ago because the table was a

00:18:59,720 --> 00:19:04,190
developers themselves considered

00:19:01,520 --> 00:19:08,179
themselves way smarter than Mozilla

00:19:04,190 --> 00:19:09,740
developers I not smart enough to

00:19:08,179 --> 00:19:11,659
understand all the details but I know it

00:19:09,740 --> 00:19:13,520
improved a lot in the last year because

00:19:11,659 --> 00:19:15,770
right now the table also developers are

00:19:13,520 --> 00:19:19,490
feeling back way more practice than

00:19:15,770 --> 00:19:22,520
before upstream so in the end the things

00:19:19,490 --> 00:19:25,010
really improved and I think we imported

00:19:22,520 --> 00:19:26,570
the port last year and the country the

00:19:25,010 --> 00:19:30,260
open GC contributor we did this pot

00:19:26,570 --> 00:19:32,690
spend loads of hours and builds and

00:19:30,260 --> 00:19:34,549
he was always pushing the the port and

00:19:32,690 --> 00:19:37,460
after a while okay he spent so much time

00:19:34,549 --> 00:19:39,740
working on this I don't let this port

00:19:37,460 --> 00:19:41,690
outside of the poetry just to reward him

00:19:39,740 --> 00:19:43,820
of all the work he spent on it for like

00:19:41,690 --> 00:19:46,400
he's been working on the pot two years

00:19:43,820 --> 00:19:48,770
outside of the poetry which is insane

00:19:46,400 --> 00:19:51,890
dedication

00:19:48,770 --> 00:19:54,680
sorry self so the toolkit which is which

00:19:51,890 --> 00:19:56,870
is was used to create the graphical

00:19:54,680 --> 00:19:59,570
interface is more less dead I removed

00:19:56,870 --> 00:20:02,920
observing airport one months ago it was

00:19:59,570 --> 00:20:06,200
a good moment because it was excellent

00:20:02,920 --> 00:20:09,080
24 which was maintained for like maybe

00:20:06,200 --> 00:20:13,760
four or five years Thunderbird

00:20:09,080 --> 00:20:16,670
itself is still alive sadly it's it got

00:20:13,760 --> 00:20:18,800
cut off the Mozilla Foundation they are

00:20:16,670 --> 00:20:21,500
trying to get rid of the community which

00:20:18,800 --> 00:20:23,420
is developing Thunderbird because they

00:20:21,500 --> 00:20:26,000
are saying it's prevents Firefox from

00:20:23,420 --> 00:20:28,160
some innovations so the ten developers

00:20:26,000 --> 00:20:32,710
which are not that much are trying to

00:20:28,160 --> 00:20:37,040
struggle to keep up with Firefox yessuh

00:20:32,710 --> 00:20:41,110
after all in 2017 there are less and

00:20:37,040 --> 00:20:45,020
less people using full-blown mail client

00:20:41,110 --> 00:20:46,820
lots of people are using web mails so is

00:20:45,020 --> 00:20:48,710
it a good thing is the bad thing I don't

00:20:46,820 --> 00:20:52,750
really know but tunnel bird is still

00:20:48,710 --> 00:20:52,750
alive I'm using it at work

00:20:53,230 --> 00:20:59,510
the NPAPI part of the gecko engine is

00:20:57,740 --> 00:21:04,730
disappearing it will be removed in

00:20:59,510 --> 00:21:05,960
Firefox 57 - like to let place what's

00:21:04,730 --> 00:21:07,520
called the web extensions which is

00:21:05,960 --> 00:21:10,760
something which is which should be

00:21:07,520 --> 00:21:13,550
shared with chromium which changes the

00:21:10,760 --> 00:21:16,480
way plugins are allowed to modify the

00:21:13,550 --> 00:21:22,220
interface and it's it's meant as

00:21:16,480 --> 00:21:24,440
preventing let's say security issues

00:21:22,220 --> 00:21:28,430
coming from the plugins everything is

00:21:24,440 --> 00:21:29,990
separated in a different process and the

00:21:28,430 --> 00:21:32,270
web extension doesn't have access to

00:21:29,990 --> 00:21:35,270
lots of internal workings of the browser

00:21:32,270 --> 00:21:38,330
which led to several security issues in

00:21:35,270 --> 00:21:40,640
the past so lots of people have been

00:21:38,330 --> 00:21:46,220
complaining about that because lots of

00:21:40,640 --> 00:21:48,020
previous extensions add-ons found ported

00:21:46,220 --> 00:21:49,280
to the new web extension frameworks lots

00:21:48,020 --> 00:21:51,200
of people are complaining ok I'm going

00:21:49,280 --> 00:21:55,040
to stop using Firefox because this

00:21:51,200 --> 00:21:58,190
extension won't work in in Firefox 57

00:21:55,040 --> 00:21:59,960
it's a matter of time for the extent for

00:21:58,190 --> 00:22:00,800
the I don't developers who bought their

00:21:59,960 --> 00:22:05,150
code

00:22:00,800 --> 00:22:08,380
most of the men mainly used a add-ons

00:22:05,150 --> 00:22:11,060
are party to the new framework so it's a

00:22:08,380 --> 00:22:12,740
it works for most of the cases but there

00:22:11,060 --> 00:22:14,120
are only people welcome we are always

00:22:12,740 --> 00:22:17,420
people who are complaining about lots of

00:22:14,120 --> 00:22:21,410
things and of course right now Firefox

00:22:17,420 --> 00:22:25,340
on open BSD only runs on n64 and it

00:22:21,410 --> 00:22:29,420
struggles on our 386 I still have a net

00:22:25,340 --> 00:22:33,730
on netbook with 1 gigabyte of RAM which

00:22:29,420 --> 00:22:37,550
is 8 years old I can start Firefox on it

00:22:33,730 --> 00:22:40,520
and that's that's very sad because I

00:22:37,550 --> 00:22:43,790
used I've only used Firefox on all my

00:22:40,520 --> 00:22:46,190
machines and seeing it struggle I think

00:22:43,790 --> 00:22:49,280
before seeing a window it's like 30

00:22:46,190 --> 00:22:52,250
second maybe one minute once it started

00:22:49,280 --> 00:22:57,140
it's sort of works but you don't want to

00:22:52,250 --> 00:22:59,150
run you don't go to Google Maps only if

00:22:57,140 --> 00:23:03,740
you like paint and it's it's a sad state

00:22:59,150 --> 00:23:12,070
I gave up on the other platforms more on

00:23:03,740 --> 00:23:12,070
that later and now for the build parts

00:23:13,840 --> 00:23:18,050
so as we only have two supported

00:23:16,490 --> 00:23:20,750
platforms on OpenBSD I can build

00:23:18,050 --> 00:23:24,320
everything with salon we have salon in

00:23:20,750 --> 00:23:28,340
the base system but we are using the

00:23:24,320 --> 00:23:31,000
base system compiler owned in the 64 and

00:23:28,340 --> 00:23:35,480
I think it's stealing from ports on i386

00:23:31,000 --> 00:23:39,200
the GMAC auto confer to make auto he'll

00:23:35,480 --> 00:23:42,140
build system which was working fine but

00:23:39,200 --> 00:23:43,640
working fine for my standards for

00:23:42,140 --> 00:23:45,560
Mozilla it wasn't good enough because

00:23:43,640 --> 00:23:47,060
they couldn't parallelize lots of parts

00:23:45,560 --> 00:23:49,730
of the build system so it was replaced

00:23:47,060 --> 00:23:51,110
by their own drone build system is the

00:23:49,730 --> 00:23:54,740
good thing is the bad thing I don't

00:23:51,110 --> 00:23:58,850
really know the guys who are developing

00:23:54,740 --> 00:24:00,200
mesh which is due in German and the most

00:23:58,850 --> 00:24:01,820
build which is the equivalent of

00:24:00,200 --> 00:24:05,090
MacPhail the guys who are developing it

00:24:01,820 --> 00:24:07,970
are really really smart guys so I read

00:24:05,090 --> 00:24:09,620
lots of blog posts from them about all

00:24:07,970 --> 00:24:11,270
the IDS we are given system I'm not

00:24:09,620 --> 00:24:13,610
smart enough to understand lots of

00:24:11,270 --> 00:24:15,590
things but as

00:24:13,610 --> 00:24:18,020
the pot maintainer it's okay I just have

00:24:15,590 --> 00:24:19,640
to learn a different build system why

00:24:18,020 --> 00:24:22,360
not I have seen ores

00:24:19,640 --> 00:24:24,590
I've seen lots of Python build system I

00:24:22,360 --> 00:24:26,900
won't mention them because I'm going to

00:24:24,590 --> 00:24:29,030
be to get crazy but this one is also

00:24:26,900 --> 00:24:31,570
written in Python and it's not so bad

00:24:29,030 --> 00:24:36,670
the most build files are mollys

00:24:31,570 --> 00:24:40,520
declarative and it's not that bad

00:24:36,670 --> 00:24:43,040
firefox out depends on the rest language

00:24:40,520 --> 00:24:49,760
in Firefox 53 I'll come back to rest

00:24:43,040 --> 00:24:51,650
later we switch to GTA 3 for openbsd 6.1

00:24:49,760 --> 00:24:53,630
I think it was more or less at the same

00:24:51,650 --> 00:24:57,290
time that upstream decided to switch

00:24:53,630 --> 00:25:00,590
from GTA 2 to DTK free I think we were

00:24:57,290 --> 00:25:04,880
the first one to enable it by default in

00:25:00,590 --> 00:25:07,580
the line ax distributions I had been

00:25:04,880 --> 00:25:10,070
using it for some releases before it's

00:25:07,580 --> 00:25:11,720
been made default extreme it was working

00:25:10,070 --> 00:25:14,750
not that bad and lots of people wanted

00:25:11,720 --> 00:25:17,570
wanted to get rid of gtk 2 parts it

00:25:14,750 --> 00:25:20,000
relies on ICU for the internalization

00:25:17,570 --> 00:25:22,190
parts and sometimes you can build with

00:25:20,000 --> 00:25:24,740
the sustain where in the ICU sometimes

00:25:22,190 --> 00:25:26,809
you have to build the bundled ICU same

00:25:24,740 --> 00:25:28,880
thing for unspell for the spelling

00:25:26,809 --> 00:25:30,799
sometimes the version you have in the

00:25:28,880 --> 00:25:32,390
box 3 is enough sometimes you need to

00:25:30,799 --> 00:25:34,429
use the version which is in the sauce

00:25:32,390 --> 00:25:37,820
tree or Firefox Firefox of course

00:25:34,429 --> 00:25:39,590
bundles sqlite3 so sometimes you can use

00:25:37,820 --> 00:25:42,260
the system-wide one sometimes you use

00:25:39,590 --> 00:25:43,640
the internal ones and NSS and an SPR

00:25:42,260 --> 00:25:46,040
which are released from the past are

00:25:43,640 --> 00:25:47,530
still used a lot and it's the same thing

00:25:46,040 --> 00:25:50,600
they are developed by Mozilla as

00:25:47,530 --> 00:25:53,390
external projects which are imported in

00:25:50,600 --> 00:25:55,429
the Firefox tree and of course when

00:25:53,390 --> 00:25:58,040
there's a new NSS or an SP are released

00:25:55,429 --> 00:26:00,679
the Firefox build system says hey I want

00:25:58,040 --> 00:26:04,880
this last NSS and SPR version and SS is

00:26:00,679 --> 00:26:07,429
used mostly for the all the TLS SSL

00:26:04,880 --> 00:26:09,309
Certificates stuff and an SPI was the

00:26:07,429 --> 00:26:11,570
portable library but I still don't know

00:26:09,309 --> 00:26:14,480
why it's still here because lots of

00:26:11,570 --> 00:26:15,350
people at Mozilla I want to repeat for

00:26:14,480 --> 00:26:16,669
lots of reasons

00:26:15,350 --> 00:26:23,630
I think it's been developed since 20

00:26:16,669 --> 00:26:26,809
years it's still a struggle I had funny

00:26:23,630 --> 00:26:28,549
issues with rusts

00:26:26,809 --> 00:26:32,959
because of course there's more and more

00:26:28,549 --> 00:26:36,229
Moscow in Ukrainian and West is working

00:26:32,959 --> 00:26:39,529
on open BSD on f-86 but sometimes with

00:26:36,229 --> 00:26:42,229
default options it blows when building

00:26:39,529 --> 00:26:44,329
so of course on FATCA only had three

00:26:42,229 --> 00:26:48,669
gigabytes of memory or something so it

00:26:44,329 --> 00:26:51,619
leads to funny issues the JIT and Rhine

00:26:48,669 --> 00:26:54,739
is sort of funny too because they want

00:26:51,619 --> 00:26:59,299
to have their own memory management so

00:26:54,739 --> 00:27:01,489
I'd start he was around Firefox 54 or

00:26:59,299 --> 00:27:04,639
something the JavaScript engine

00:27:01,489 --> 00:27:06,829
allocates one gigabyte of memory that's

00:27:04,639 --> 00:27:09,139
all and then it's all memory management

00:27:06,829 --> 00:27:10,999
inside it which is quite funny when you

00:27:09,139 --> 00:27:14,209
have all secure all the security

00:27:10,999 --> 00:27:16,609
measures provided by the operating

00:27:14,209 --> 00:27:18,169
system memory management that you don't

00:27:16,609 --> 00:27:20,779
want to use because you are smarter than

00:27:18,169 --> 00:27:22,789
the operating system I am Not sure it's

00:27:20,779 --> 00:27:24,859
always a wise idea and of course all

00:27:22,789 --> 00:27:28,159
OpenBSD as a default user you can only

00:27:24,859 --> 00:27:31,129
allocate 768 maybe get megabytes of

00:27:28,159 --> 00:27:34,279
memory fault process so you start

00:27:31,129 --> 00:27:37,309
Firefox and it blows that happened a lot

00:27:34,279 --> 00:27:38,779
so you just have to patch it and some of

00:27:37,309 --> 00:27:41,440
the Mozilla developers working on the

00:27:38,779 --> 00:27:44,749
JavaScript engine are very friendly

00:27:41,440 --> 00:27:46,519
about the third parties and they are

00:27:44,749 --> 00:27:48,649
open to discussions they are very smart

00:27:46,519 --> 00:27:50,869
I am not smart enough to explain them ok

00:27:48,649 --> 00:27:54,469
we have those limits why are you doing

00:27:50,869 --> 00:27:57,979
this and I'm trying to make people talk

00:27:54,469 --> 00:28:00,199
to each other it's it's not that easy

00:27:57,979 --> 00:28:01,940
because often okay those guys are crazy

00:28:00,199 --> 00:28:03,859
they are doing silly things they

00:28:01,940 --> 00:28:05,929
shouldn't do this ok I can tell them but

00:28:03,859 --> 00:28:10,219
I can I can only tell them this I'm not

00:28:05,929 --> 00:28:12,559
able to explain them why or so it's I'm

00:28:10,219 --> 00:28:14,619
not able to fix that kind of thing only

00:28:12,559 --> 00:28:17,059
patch it and say ok just allocate

00:28:14,619 --> 00:28:20,440
reasonable amount and then allocate more

00:28:17,059 --> 00:28:23,179
if you need more that's most of the

00:28:20,440 --> 00:28:26,119
problems I have those days for building

00:28:23,179 --> 00:28:31,159
or for running you get memory explosions

00:28:26,119 --> 00:28:34,669
when you run heavy JavaScript this part

00:28:31,159 --> 00:28:36,529
in my opinion is the the part where

00:28:34,669 --> 00:28:39,609
we'll have the most problems in the in

00:28:36,529 --> 00:28:39,609
the future the JavaScript engine

00:28:40,450 --> 00:28:50,270
so oh I mean working daily well not

00:28:45,170 --> 00:28:52,070
daily on the Mozilla's for years I've

00:28:50,270 --> 00:28:55,580
been using bare metal machines

00:28:52,070 --> 00:28:58,910
I had 956 and a 1964 machine a sparc64

00:28:55,580 --> 00:29:01,910
machine stood at various places thanks

00:28:58,910 --> 00:29:05,030
to lots of generous donators I think I

00:29:01,910 --> 00:29:09,050
used four five six eight different

00:29:05,030 --> 00:29:12,460
machines over six years and last year I

00:29:09,050 --> 00:29:15,470
moved to use proxmox on a single machine

00:29:12,460 --> 00:29:19,400
guys from poo in the surfer friends lend

00:29:15,470 --> 00:29:22,220
me a machine with 64 cores and I put

00:29:19,400 --> 00:29:24,380
OpenBSD in the 64 on it and it was

00:29:22,220 --> 00:29:26,300
totally useless because the CPUs and the

00:29:24,380 --> 00:29:28,630
kernel were ping-ponging tasks all the

00:29:26,300 --> 00:29:32,990
time in the end you just

00:29:28,630 --> 00:29:36,710
proxmox you have KVM VMS I can have VMs

00:29:32,990 --> 00:29:39,440
for stable for current for f56 for 64

00:29:36,710 --> 00:29:42,110
bits and in the end you if you build on

00:29:39,440 --> 00:29:44,300
the KVM vm for firefox it should be

00:29:42,110 --> 00:29:46,370
around on this machine it should be

00:29:44,300 --> 00:29:48,260
around 2 hours and if I was trying to

00:29:46,370 --> 00:29:51,200
build it on the bare metal machine it

00:29:48,260 --> 00:29:53,150
was something about 3 to 4 hours which

00:29:51,200 --> 00:29:57,500
says a lot about multi-process

00:29:53,150 --> 00:30:00,890
performance for OpenBSD I've been using

00:29:57,500 --> 00:30:02,660
this boat since years Mozilla was

00:30:00,890 --> 00:30:05,450
originally using Dilbert - for all the

00:30:02,660 --> 00:30:07,070
internal CIA stuff they are moving

00:30:05,450 --> 00:30:09,260
through something called test cluster

00:30:07,070 --> 00:30:11,270
which have which I think have been

00:30:09,260 --> 00:30:16,990
developed by Mozilla for Mozilla to

00:30:11,270 --> 00:30:18,950
distribute tasks on the cloud mostly iws

00:30:16,990 --> 00:30:21,410
everything of course everything is

00:30:18,950 --> 00:30:24,370
public you can see the links I won't

00:30:21,410 --> 00:30:26,780
show you right now and I'm building

00:30:24,370 --> 00:30:29,720
that's mozilla-central which is the

00:30:26,780 --> 00:30:33,680
trunk and Mozilla beta which is the beta

00:30:29,720 --> 00:30:36,200
branch every night with the trunk and

00:30:33,680 --> 00:30:38,480
that produces a package not of an open

00:30:36,200 --> 00:30:40,160
GSD package that's a tarball with the

00:30:38,480 --> 00:30:43,550
binaries in it that you can just enter

00:30:40,160 --> 00:30:46,070
and run Firefox from it and I of course

00:30:43,550 --> 00:30:48,650
build package sign and distribute the

00:30:46,070 --> 00:30:50,900
released betas like for Firefox filiz

00:30:48,650 --> 00:30:51,440
there will be something between 10 to 12

00:30:50,900 --> 00:30:52,070
battles

00:30:51,440 --> 00:30:54,790
who is

00:30:52,070 --> 00:30:58,100
every week or every three or four days

00:30:54,790 --> 00:31:00,410
and I package them as an open BSD

00:30:58,100 --> 00:31:02,360
package and I distribute them on a

00:31:00,410 --> 00:31:04,610
separate package repository I sign the

00:31:02,360 --> 00:31:07,220
packages so that you can know that okay

00:31:04,610 --> 00:31:11,960
it does packages come from Andrew and

00:31:07,220 --> 00:31:14,450
that allows me to use betas on my

00:31:11,960 --> 00:31:16,280
machines so that I can dog food what's

00:31:14,450 --> 00:31:18,740
going to happen in next versions I

00:31:16,280 --> 00:31:22,460
encourage people to use those betas

00:31:18,740 --> 00:31:25,100
after all if it's in beta it's not that

00:31:22,460 --> 00:31:28,730
experimental and what's in nightly which

00:31:25,100 --> 00:31:30,770
can be quite funny and I manage the port

00:31:28,730 --> 00:31:32,840
and the different branches in each

00:31:30,770 --> 00:31:34,640
repositories outside of the port's tree

00:31:32,840 --> 00:31:36,380
and I only commit to the parse tree in

00:31:34,640 --> 00:31:38,480
the CVS when there's the released

00:31:36,380 --> 00:31:42,290
version that I know that I've tested it

00:31:38,480 --> 00:31:47,900
enough and I can just reach it to users

00:31:42,290 --> 00:31:51,050
and it's working quite fine since since

00:31:47,900 --> 00:31:52,870
those six or seven years I think we have

00:31:51,050 --> 00:31:56,180
the Firefox update in the parse tree

00:31:52,870 --> 00:31:57,890
like in the next in the three or four

00:31:56,180 --> 00:31:59,660
hours after it's released upstream and

00:31:57,890 --> 00:32:02,660
of course it often happens that you have

00:31:59,660 --> 00:32:04,610
dot zero dot one and a dot 0 dot true

00:32:02,660 --> 00:32:06,860
version with some days after the main

00:32:04,610 --> 00:32:08,780
release so you get that into the pass

00:32:06,860 --> 00:32:10,580
tree that that gave me lots and lots of

00:32:08,780 --> 00:32:17,090
free commits to the OpenBSD parse tree

00:32:10,580 --> 00:32:19,130
of course I try to track the CVS files

00:32:17,090 --> 00:32:21,860
in my git repository so that I can track

00:32:19,130 --> 00:32:24,200
which patches are temporary in my

00:32:21,860 --> 00:32:28,010
workflow and the ones that I will have

00:32:24,200 --> 00:32:29,720
to commit to CVS when I started there

00:32:28,010 --> 00:32:31,880
were lots and lots of patches right now

00:32:29,720 --> 00:32:34,850
there are almost none and I'm trying out

00:32:31,880 --> 00:32:36,680
to avoid committing but she's to CVS

00:32:34,850 --> 00:32:40,120
because that means I would have failed

00:32:36,680 --> 00:32:43,460
in pushing back the patch in 12 weeks

00:32:40,120 --> 00:32:46,460
since I know every day if nightly is

00:32:43,460 --> 00:32:48,830
building or not and I know every day is

00:32:46,460 --> 00:32:51,230
beta is building or not which is when

00:32:48,830 --> 00:32:54,230
the bill bot is read I have to go look

00:32:51,230 --> 00:32:58,720
at it and figure out if I need to fix

00:32:54,230 --> 00:32:58,720
something so maybe let's just see

00:33:10,920 --> 00:33:19,110
okay I don't have knit so we won't see

00:33:13,970 --> 00:33:21,480
forward about that I try to explain most

00:33:19,110 --> 00:33:24,060
of this workflow and to changing and

00:33:21,480 --> 00:33:27,390
deadly article the slides will probably

00:33:24,060 --> 00:33:30,660
be available I used to do slides in a

00:33:27,390 --> 00:33:32,760
web page and I found it funnier to

00:33:30,660 --> 00:33:34,410
reduce slides in a presentation in a

00:33:32,760 --> 00:33:37,380
terminal for someone working in web

00:33:34,410 --> 00:33:40,080
browsers it's it says a lot

00:33:37,380 --> 00:33:42,420
I have special uses for web browsers

00:33:40,080 --> 00:33:44,670
what's my workflow when I there's a new

00:33:42,420 --> 00:33:47,280
upstream varies I get mail every day

00:33:44,670 --> 00:33:49,160
telling me if there's a new version just

00:33:47,280 --> 00:33:51,690
have one line to change in a makefile

00:33:49,160 --> 00:33:53,520
event ready adjust dependencies if

00:33:51,690 --> 00:33:55,380
something doesn't build with the version

00:33:53,520 --> 00:33:57,600
of SQLite we have in the past tree or an

00:33:55,380 --> 00:34:00,510
SP error that kind of thing

00:33:57,600 --> 00:34:03,000
just grab the news first of all apply

00:34:00,510 --> 00:34:04,620
patches update patches if it's needed

00:34:03,000 --> 00:34:06,360
update the pedis if there are new files

00:34:04,620 --> 00:34:12,300
in the package which happens almost

00:34:06,360 --> 00:34:15,090
never package it upload it to my private

00:34:12,300 --> 00:34:18,360
server where the package is signed and

00:34:15,090 --> 00:34:20,700
distributed it in distributed I commit

00:34:18,360 --> 00:34:23,250
my work to my get triple which is also

00:34:20,700 --> 00:34:25,830
free and then people can just use the

00:34:23,250 --> 00:34:28,890
beta on their laptops they just have if

00:34:25,830 --> 00:34:31,980
they if they use my package repository

00:34:28,890 --> 00:34:33,780
in their environment in the package path

00:34:31,980 --> 00:34:35,669
variable they can just update and use

00:34:33,780 --> 00:34:37,860
the new beta version and I try to

00:34:35,669 --> 00:34:40,250
package most of them when I'm around the

00:34:37,860 --> 00:34:40,250
computer

00:34:46,899 --> 00:34:53,629
so ya bill boots what what what

00:34:50,089 --> 00:34:56,690
it's doing everyday it's building and I

00:34:53,629 --> 00:35:00,619
don't have anything to do I just have to

00:34:56,690 --> 00:35:03,589
look at it from time to time I only

00:35:00,619 --> 00:35:08,630
follow the RSS feed from the bill but to

00:35:03,589 --> 00:35:10,670
see if it's red or green most of the

00:35:08,630 --> 00:35:12,950
time it's working the trend has been

00:35:10,670 --> 00:35:16,730
building without patches most of the

00:35:12,950 --> 00:35:18,500
time since 2012 and it's building the

00:35:16,730 --> 00:35:21,260
default configuration the default

00:35:18,500 --> 00:35:25,010
upstream configuration so when something

00:35:21,260 --> 00:35:27,260
gets enabled by default you can see that

00:35:25,010 --> 00:35:29,720
it breaks quite fast for you because

00:35:27,260 --> 00:35:31,790
everyone forgot about what wasn't in the

00:35:29,720 --> 00:35:35,930
supported platforms it's building on

00:35:31,790 --> 00:35:39,650
OpenBSD 6556 freebsd in the 64 flow is

00:35:35,930 --> 00:35:41,930
providing me a bi vm for that and i'm

00:35:39,650 --> 00:35:43,339
not doing anything on it so sometimes it

00:35:41,930 --> 00:35:47,900
works sometimes it doesn't

00:35:43,339 --> 00:35:50,089
I don't maintain this slave I just have

00:35:47,900 --> 00:35:51,200
access to it to check the dependencies

00:35:50,089 --> 00:35:53,150
but other than that I'm not doing

00:35:51,200 --> 00:35:56,780
anything it's also building most of the

00:35:53,150 --> 00:35:57,950
time on FreeBSD and it provides what's

00:35:56,780 --> 00:36:01,700
called the Mozilla package that you can

00:35:57,950 --> 00:36:03,920
use to test for regressions if you know

00:36:01,700 --> 00:36:05,299
that some feature was working in the

00:36:03,920 --> 00:36:06,920
nightly build from yesterday and not

00:36:05,299 --> 00:36:09,530
know it's not it's not working you can

00:36:06,920 --> 00:36:11,839
grab the different binaries of course on

00:36:09,530 --> 00:36:13,549
open BSD the binaries are dependent on

00:36:11,839 --> 00:36:16,369
the libraries that were on the system on

00:36:13,549 --> 00:36:18,020
the B slave at that moment but I try to

00:36:16,369 --> 00:36:19,940
update the build slave every time

00:36:18,020 --> 00:36:22,099
there's a new open BSD snapshot so if

00:36:19,940 --> 00:36:24,710
you are using current you can use a

00:36:22,099 --> 00:36:26,809
current package of Mozilla on your open

00:36:24,710 --> 00:36:29,960
BSD currents I don't know of lots of

00:36:26,809 --> 00:36:32,420
people doing this but that provides

00:36:29,960 --> 00:36:35,119
everything needed to people who want to

00:36:32,420 --> 00:36:40,190
test for runtime regressions for what's

00:36:35,119 --> 00:36:43,430
the default Mozilla configuration so

00:36:40,190 --> 00:36:45,049
know a bit more about the relationship

00:36:43,430 --> 00:36:46,940
we have with upstream they know we are

00:36:45,049 --> 00:36:49,400
here at least for FreeBSD OpenBSD

00:36:46,940 --> 00:36:50,170
because we are two developers active a

00:36:49,400 --> 00:36:52,849
lot in Bugzilla

00:36:50,170 --> 00:36:55,160
eunbi from freebsd has been doing a lot

00:36:52,849 --> 00:36:57,440
recently I've been doing way less than

00:36:55,160 --> 00:37:00,740
before I had way less time for this so

00:36:57,440 --> 00:37:03,350
he took the job I had before

00:37:00,740 --> 00:37:06,470
of reporting a stream that stuff one

00:37:03,350 --> 00:37:09,980
building is doing more patch more

00:37:06,470 --> 00:37:12,200
touching than before than me and as I've

00:37:09,980 --> 00:37:14,510
been in these communities in six seven

00:37:12,200 --> 00:37:16,790
years I know lots of the Mozilla

00:37:14,510 --> 00:37:18,020
developers I know where they are working

00:37:16,790 --> 00:37:20,270
in which shall we have the code they are

00:37:18,020 --> 00:37:23,180
working I know who to ask for hints or

00:37:20,270 --> 00:37:24,200
reviews being on an IRC on the Messiah

00:37:23,180 --> 00:37:28,180
IRC Alps

00:37:24,200 --> 00:37:31,460
I've met lots of them live in Toronto in

00:37:28,180 --> 00:37:33,260
the Mozilla office yesterday two days

00:37:31,460 --> 00:37:35,540
two days ago in Faust them in different

00:37:33,260 --> 00:37:37,610
conferences and it's always nice so that

00:37:35,540 --> 00:37:39,260
they know ok yeah ok you are here you

00:37:37,610 --> 00:37:41,810
have to be as this and you can put a

00:37:39,260 --> 00:37:45,230
face on a name and ok we are going to

00:37:41,810 --> 00:37:48,200
try to be nice with you of course we are

00:37:45,230 --> 00:37:50,119
not afraid to platform and it was

00:37:48,200 --> 00:37:51,440
through some years ago they knew really

00:37:50,119 --> 00:37:54,920
knew that we were in and they were

00:37:51,440 --> 00:37:56,690
trying to ask me for feedback on patches

00:37:54,920 --> 00:37:59,930
that then you are going to land and

00:37:56,690 --> 00:38:01,760
might possibly break us it's a bit less

00:37:59,930 --> 00:38:04,850
true now because I've been less involved

00:38:01,760 --> 00:38:06,859
and you get lots and lots of bugs

00:38:04,850 --> 00:38:09,680
because some of the new Mozilla

00:38:06,859 --> 00:38:12,590
developers don't know that people are

00:38:09,680 --> 00:38:16,880
using Mozilla outside the gr1 supported

00:38:12,590 --> 00:38:20,470
in operating systems so you often gets a

00:38:16,880 --> 00:38:23,240
bill failure because we don't have the

00:38:20,470 --> 00:38:25,400
SPS profiler which is some feature that

00:38:23,240 --> 00:38:28,310
will have to be written from scratch for

00:38:25,400 --> 00:38:30,260
the BS DS and lots of people build a

00:38:28,310 --> 00:38:31,850
write code that rely on this feature and

00:38:30,260 --> 00:38:34,990
you get a new build feature ok it's

00:38:31,850 --> 00:38:41,680
always the same thing that's a bit

00:38:34,990 --> 00:38:46,430
sudden upstream is really welcoming

00:38:41,680 --> 00:38:48,650
contributions from outsiders as long as

00:38:46,430 --> 00:38:51,020
you provide us when you are reporting a

00:38:48,650 --> 00:38:53,240
bug to your favorite based BSD you have

00:38:51,020 --> 00:38:55,580
to provide details I was doing this it

00:38:53,240 --> 00:38:58,700
doesn't build since this changed you

00:38:55,580 --> 00:39:00,800
need to learn a bit about all the

00:38:58,700 --> 00:39:03,410
mechanics behind the Mozilla community

00:39:00,800 --> 00:39:05,359
and the tools they are using to be said

00:39:03,410 --> 00:39:09,050
to bisect and where to look in the code

00:39:05,359 --> 00:39:10,970
this change broke me and I have to come

00:39:09,050 --> 00:39:12,800
back to the valve that well that was

00:39:10,970 --> 00:39:14,930
where the discussion happened on this

00:39:12,800 --> 00:39:16,609
change and you file a new bug

00:39:14,930 --> 00:39:19,849
that says okay I'm blocking the this

00:39:16,609 --> 00:39:22,309
burg because since then I'm the build on

00:39:19,849 --> 00:39:23,690
my platform is broken after a while you

00:39:22,309 --> 00:39:26,779
really get used to it at the beginning

00:39:23,690 --> 00:39:28,039
it's it's quite out of here at all this

00:39:26,779 --> 00:39:29,869
community work but Indian is very

00:39:28,039 --> 00:39:32,630
interesting as you see the differences

00:39:29,869 --> 00:39:34,940
in the the workflows between the

00:39:32,630 --> 00:39:37,970
different projects and depends a lot on

00:39:34,940 --> 00:39:40,400
the project size of course if you are an

00:39:37,970 --> 00:39:43,480
appendage SD user and you have a bug on

00:39:40,400 --> 00:39:45,950
Firefox maybe it's not too open BSD

00:39:43,480 --> 00:39:49,549
specific well if it's something like

00:39:45,950 --> 00:39:51,619
memory exhaustion or it's probably open

00:39:49,549 --> 00:39:53,539
be specific with the limits we have but

00:39:51,619 --> 00:39:54,950
most of the time I'm not able to deal

00:39:53,539 --> 00:39:57,619
with it because I have no special

00:39:54,950 --> 00:39:58,849
knowledge in the code but I can tell you

00:39:57,619 --> 00:40:01,039
who to ask

00:39:58,849 --> 00:40:05,750
file a bug get involved in the community

00:40:01,039 --> 00:40:07,730
that will help me of course most of the

00:40:05,750 --> 00:40:19,809
time I'm only dealing with build system

00:40:07,730 --> 00:40:22,930
issues which is the easy part for me so

00:40:19,809 --> 00:40:28,309
different topic is something I started

00:40:22,930 --> 00:40:32,390
this year since I moved to kayvyun VMs

00:40:28,309 --> 00:40:33,950
on proxmox that's something that's been

00:40:32,390 --> 00:40:38,089
discussed a lot in OpenBSD about

00:40:33,950 --> 00:40:40,970
providing a bit he'd fixed packages for

00:40:38,089 --> 00:40:43,579
the stable versions of open GSD it's

00:40:40,970 --> 00:40:47,390
been discussed a lot it's opened for a

00:40:43,579 --> 00:40:49,599
while it's been provided by mg which is

00:40:47,390 --> 00:40:51,680
a separate company for a while for some

00:40:49,599 --> 00:40:54,650
packages which we are mostly the server

00:40:51,680 --> 00:40:57,410
packages and a figure that okay but

00:40:54,650 --> 00:40:59,270
people are using some people are using

00:40:57,410 --> 00:41:04,400
open BSD on their desktop they want to

00:40:59,270 --> 00:41:07,700
use table for reasons why not and it

00:41:04,400 --> 00:41:09,859
means that when you are using stable you

00:41:07,700 --> 00:41:11,390
are just choosing the version which

00:41:09,859 --> 00:41:13,880
wasn't which was in the release when it

00:41:11,390 --> 00:41:15,589
was cut which means after six weeks you

00:41:13,880 --> 00:41:19,309
are not using your supported release

00:41:15,589 --> 00:41:22,880
upstream you might be vulnerable to lots

00:41:19,309 --> 00:41:26,520
of problems so I started working on the

00:41:22,880 --> 00:41:30,000
stable v ends to back pot what

00:41:26,520 --> 00:41:31,590
in current to the poetry in the stable

00:41:30,000 --> 00:41:33,390
branch and of course it's not enough

00:41:31,590 --> 00:41:34,470
because if you commit to CBS people have

00:41:33,390 --> 00:41:38,250
to build their own package

00:41:34,470 --> 00:41:40,680
so the kayvyun viens allow me to package

00:41:38,250 --> 00:41:44,160
the updated versions which means that if

00:41:40,680 --> 00:41:45,930
you are using 6.1 and you use the

00:41:44,160 --> 00:41:47,880
repository pointing to the 6.1

00:41:45,930 --> 00:41:52,740
subdirectory of course you can have

00:41:47,880 --> 00:41:55,650
Firefox 55 dot 0 dot free and when 6 1

00:41:52,740 --> 00:41:57,540
when 6.1 was released with Firefox 53

00:41:55,650 --> 00:42:02,700
something I don't remember maybe it was

00:41:57,540 --> 00:42:04,590
48 and in the last month I got some

00:42:02,700 --> 00:42:06,960
users the numbers are interesting

00:42:04,590 --> 00:42:11,130
because it shows that almost nobody is

00:42:06,960 --> 00:42:12,630
actually using i386 it's not that much

00:42:11,130 --> 00:42:14,970
so I don't know if people are not

00:42:12,630 --> 00:42:18,540
trusting the packages I'm providing if

00:42:14,970 --> 00:42:21,630
it's too complicated to use them

00:42:18,540 --> 00:42:24,060
I don't tree know what to do about about

00:42:21,630 --> 00:42:26,490
it but I think it's nicer to use those

00:42:24,060 --> 00:42:28,470
to provide them stable packages so that

00:42:26,490 --> 00:42:30,000
they can directly install them on their

00:42:28,470 --> 00:42:32,070
on their machines instead of having to

00:42:30,000 --> 00:42:33,600
build them and for better packages throw

00:42:32,070 --> 00:42:39,660
me to see that some people are actually

00:42:33,600 --> 00:42:42,900
using the better our packages so yeah

00:42:39,660 --> 00:42:46,590
the topic about portability I gave up on

00:42:42,900 --> 00:42:49,380
PowerPC in sparc64 a long time ago net

00:42:46,590 --> 00:42:52,260
net Cerf is a perfectly fine browser

00:42:49,380 --> 00:42:54,570
which was developed for RISC OS which is

00:42:52,260 --> 00:42:55,920
insanely portable to lots of platform it

00:42:54,570 --> 00:42:58,650
works perfectly perfectly fine on

00:42:55,920 --> 00:43:01,740
PowerPC if you are still using a PowerPC

00:42:58,650 --> 00:43:04,170
laptop for sparc64 machine I gave them

00:43:01,740 --> 00:43:07,140
this multi newsmen with ear is doing an

00:43:04,170 --> 00:43:09,960
insane job as at trying to have net bsd

00:43:07,140 --> 00:43:11,370
sparc64 still having a working Firefox

00:43:09,960 --> 00:43:14,100
and I thank him for that because he

00:43:11,370 --> 00:43:14,760
knows lots of soft boxes packed 64 I

00:43:14,100 --> 00:43:16,380
know

00:43:14,760 --> 00:43:19,110
close to nothing about Spock CC for

00:43:16,380 --> 00:43:21,090
specifics you have engineers issues you

00:43:19,110 --> 00:43:23,130
have the unaligned access in the

00:43:21,090 --> 00:43:28,140
JavaScript engine you don't want to know

00:43:23,130 --> 00:43:30,030
what these hours and a bit now about the

00:43:28,140 --> 00:43:33,870
future I will try to go fast on this the

00:43:30,030 --> 00:43:35,550
five minutes rests is the future for

00:43:33,870 --> 00:43:38,430
Mozilla they developed the language

00:43:35,550 --> 00:43:41,109
themselves

00:43:38,430 --> 00:43:43,800
it does some pop variety add some masala

00:43:41,109 --> 00:43:47,710
on stackoverflow I think thus I saw

00:43:43,800 --> 00:43:49,210
numbers about developers using this

00:43:47,710 --> 00:43:52,330
language for lots of other things it's

00:43:49,210 --> 00:43:54,369
taking momentum I think it took some

00:43:52,330 --> 00:43:56,290
momentum to the go language of course

00:43:54,369 --> 00:43:59,740
there are lots of new shiny languages

00:43:56,290 --> 00:44:01,210
Swift and everything like every new

00:43:59,740 --> 00:44:05,230
language you have to have your own

00:44:01,210 --> 00:44:08,520
package manager which is called cargo

00:44:05,230 --> 00:44:12,190
which was a different part which is no

00:44:08,520 --> 00:44:14,080
inside rest the rest part has been

00:44:12,190 --> 00:44:15,880
maintained but by summary Sebastian Ali

00:44:14,080 --> 00:44:18,040
was doing an inside job at it I thank

00:44:15,880 --> 00:44:19,840
him a lot for that because you have of

00:44:18,040 --> 00:44:21,520
course as a language you have to

00:44:19,840 --> 00:44:24,220
bootstrap it so in my life to bootstrap

00:44:21,520 --> 00:44:26,910
it from Linux in the 64 to openbsd and

00:44:24,220 --> 00:44:29,680
64 going through crazy hoops and loops

00:44:26,910 --> 00:44:31,060
as it's developed by Mozilla they are

00:44:29,680 --> 00:44:34,840
releasing a new version of the language

00:44:31,060 --> 00:44:36,880
every six week and there are something

00:44:34,840 --> 00:44:38,710
called rest up to update the long edge

00:44:36,880 --> 00:44:42,160
compiler itself which is of course an

00:44:38,710 --> 00:44:45,250
issue for open these years the binaries

00:44:42,160 --> 00:44:47,440
are provided by a third party and you

00:44:45,250 --> 00:44:48,940
can't be sure that they will run on your

00:44:47,440 --> 00:44:50,470
machine because of the library

00:44:48,940 --> 00:44:53,650
dependencies the IBA

00:44:50,470 --> 00:44:55,780
everything and as Firefox roasts

00:44:53,650 --> 00:44:58,359
language language itself is supported on

00:44:55,780 --> 00:45:03,580
mostly the main main platforms Windows

00:44:58,359 --> 00:45:06,130
Linux arm Android Mac OS and open BSD is

00:45:03,580 --> 00:45:08,560
far from tier 1 I know FreeBSD NetBSD

00:45:06,130 --> 00:45:11,380
archaea 2 because they are providing

00:45:08,560 --> 00:45:13,359
rest up binaries upstream is providing

00:45:11,380 --> 00:45:13,869
rest up binaries because they are not

00:45:13,359 --> 00:45:18,630
the same

00:45:13,869 --> 00:45:21,040
ABI issues that we have open BSD and

00:45:18,630 --> 00:45:23,260
parts of the Mozilla code days are being

00:45:21,040 --> 00:45:25,840
slowly rewritten using rest which allows

00:45:23,260 --> 00:45:29,109
upstream to remove lots of parts of old

00:45:25,840 --> 00:45:31,420
code which is a since the 90s there has

00:45:29,109 --> 00:45:34,510
been a recent policy about making

00:45:31,420 --> 00:45:37,090
Firefox build system depend on the

00:45:34,510 --> 00:45:40,510
recent version of rust which can be a

00:45:37,090 --> 00:45:42,850
problem once I had the Mozilla nightly

00:45:40,510 --> 00:45:45,100
trunk failing to build because it was

00:45:42,850 --> 00:45:47,520
requiring rest the version was first

00:45:45,100 --> 00:45:50,050
which was released a stream the last day

00:45:47,520 --> 00:45:51,310
which is a bit short to have someone

00:45:50,050 --> 00:45:54,550
update the language on

00:45:51,310 --> 00:45:56,620
new operating system outside of gecko

00:45:54,550 --> 00:45:59,680
Mozilla's in the living cell which was a

00:45:56,620 --> 00:46:01,210
research project to build the web and

00:45:59,680 --> 00:46:03,760
join from scratch massively parallel

00:46:01,210 --> 00:46:06,040
everything in rest and now there's a

00:46:03,760 --> 00:46:08,380
what they call the Canton project which

00:46:06,040 --> 00:46:10,270
is to me great features features by

00:46:08,380 --> 00:46:11,980
features from the salvo gecko the from

00:46:10,270 --> 00:46:15,790
the cell one giant to echo inside

00:46:11,980 --> 00:46:18,760
firefox so there are four main parts and

00:46:15,790 --> 00:46:21,280
Zillow is the CSS and Ryan written in

00:46:18,760 --> 00:46:23,830
rust which is supposed to replace the

00:46:21,280 --> 00:46:28,420
CSS engine which is in gecko and that

00:46:23,830 --> 00:46:30,370
will happen by default for Firefox 57

00:46:28,420 --> 00:46:34,980
which is not that far away so it means

00:46:30,370 --> 00:46:34,980
lots of testing in the coming beta cycle

00:46:35,430 --> 00:46:43,090
and for open BSD what's Firefox feature

00:46:39,850 --> 00:46:45,850
on a pen BSD as I said I gave up totally

00:46:43,090 --> 00:46:48,370
on the other architectures I'm sorry for

00:46:45,850 --> 00:46:51,640
the ones who are using spark 64 PC I

00:46:48,370 --> 00:46:53,440
just can't deal with that it's too much

00:46:51,640 --> 00:46:55,830
pain I'm not smart enough to understand

00:46:53,440 --> 00:46:58,600
the specifics of the platform's

00:46:55,830 --> 00:47:02,620
upstreaming is more and more collectin

00:46:58,600 --> 00:47:04,780
to allow you to fix the wrong ingenuous

00:47:02,620 --> 00:47:07,210
platforms because it's lots of changes

00:47:04,780 --> 00:47:10,330
to push back upstream the next hurdle is

00:47:07,210 --> 00:47:12,850
to a stylo working life 86 because by

00:47:10,330 --> 00:47:15,010
default the CS the rest code in Firefox

00:47:12,850 --> 00:47:17,020
is built with all the information which

00:47:15,010 --> 00:47:18,490
of course explodes the memory limits

00:47:17,020 --> 00:47:22,300
that you have when you are building on a

00:47:18,490 --> 00:47:25,360
386 the next problem problem for me will

00:47:22,300 --> 00:47:28,090
be to enable the multi-process features

00:47:25,360 --> 00:47:30,400
it's working on open BSD right now we

00:47:28,090 --> 00:47:32,170
have one content process by default

00:47:30,400 --> 00:47:34,600
upstream is playing to move to four

00:47:32,170 --> 00:47:36,700
control cortex to move the network

00:47:34,600 --> 00:47:39,670
communications to a separate process to

00:47:36,700 --> 00:47:42,760
move the GPU communication to a separate

00:47:39,670 --> 00:47:44,800
process to have local file system access

00:47:42,760 --> 00:47:47,080
in a separate process for the sake of

00:47:44,800 --> 00:47:51,100
course of security and some boxing which

00:47:47,080 --> 00:47:53,020
means you need efficient IPC all open

00:47:51,100 --> 00:47:56,410
BSD it's working I don't know if it's

00:47:53,020 --> 00:47:58,840
efficient sometimes you get a real

00:47:56,410 --> 00:48:03,640
slowness in the browser I need to look

00:47:58,840 --> 00:48:06,100
at some boxing for Firefox 5757

00:48:03,640 --> 00:48:08,470
we'll be toted as the version was where

00:48:06,100 --> 00:48:11,080
everything is Sun boxed on the main

00:48:08,470 --> 00:48:12,970
maintain major platforms so need to

00:48:11,080 --> 00:48:14,470
catch up with that and figure out all

00:48:12,970 --> 00:48:16,270
you can pledge the different processes

00:48:14,470 --> 00:48:19,930
but first you need to have by default

00:48:16,270 --> 00:48:23,470
working and reliable energy process in

00:48:19,930 --> 00:48:25,390
Firefox need to figure out if I need to

00:48:23,470 --> 00:48:28,030
push the default image to something

00:48:25,390 --> 00:48:31,590
bigger I need some open recently I had

00:48:28,030 --> 00:48:34,210
to do act to use Mac OS code path

00:48:31,590 --> 00:48:36,130
because some feature was relying on same

00:48:34,210 --> 00:48:40,060
opened and for some reason we don't have

00:48:36,130 --> 00:48:43,270
shared semaphore on open BSD oh I have

00:48:40,060 --> 00:48:46,090
to bribe the you to write the feature in

00:48:43,270 --> 00:48:50,080
the kernel itself if he's not considered

00:48:46,090 --> 00:48:51,640
security sensitive and yeah of course

00:48:50,080 --> 00:48:53,770
the generally the stuff that gets

00:48:51,640 --> 00:48:54,360
enabled by default in the builds gets me

00:48:53,770 --> 00:48:58,150
in trouble

00:48:54,360 --> 00:48:59,950
not so most of the time I need to keep

00:48:58,150 --> 00:49:02,020
rust working if something opposed

00:48:59,950 --> 00:49:04,660
happens to semester and is not able to

00:49:02,020 --> 00:49:06,400
maintain rust I'm stuck with the Firefox

00:49:04,660 --> 00:49:08,860
version that will require all the

00:49:06,400 --> 00:49:09,940
reservation I have there's of could of

00:49:08,860 --> 00:49:12,280
course that the rest

00:49:09,940 --> 00:49:14,350
ABI target issues and John Sebastian

00:49:12,280 --> 00:49:16,210
dumbbell from phobias DS working with

00:49:14,350 --> 00:49:18,160
Sebastian with that on trying to push

00:49:16,210 --> 00:49:19,990
back upstream the idea of okay you

00:49:18,160 --> 00:49:22,330
provide binaries but you need to provide

00:49:19,990 --> 00:49:26,080
binaries for different ABI is FreeBSD 11

00:49:22,330 --> 00:49:28,780
FreeBSD 12 for open BSD we don't we

00:49:26,080 --> 00:49:30,640
don't we don't say that the ABI is

00:49:28,780 --> 00:49:32,890
stable for every release so that means

00:49:30,640 --> 00:49:35,050
providing binaries for everybody's just

00:49:32,890 --> 00:49:36,910
description in trying to have that kind

00:49:35,050 --> 00:49:39,520
of switch upon at runtime which will

00:49:36,910 --> 00:49:42,700
solve the problem for everyone but that

00:49:39,520 --> 00:49:46,030
has to be pushed back upstream WebRTC

00:49:42,700 --> 00:49:47,320
needs testing because I think it's an

00:49:46,030 --> 00:49:49,510
interesting technology in itself

00:49:47,320 --> 00:49:51,640
allowing lots of people to use video

00:49:49,510 --> 00:49:54,850
audio intercommunications without

00:49:51,640 --> 00:49:56,920
relying on skype or having linux running

00:49:54,850 --> 00:50:01,510
something for Skype or that kind of

00:49:56,920 --> 00:50:03,970
orals arm 64 might happen someday I know

00:50:01,510 --> 00:50:06,730
Peter Esther was doing on 64 package

00:50:03,970 --> 00:50:09,250
builds we'll look at all that's need to

00:50:06,730 --> 00:50:11,950
have gecko building on am 64 but that

00:50:09,250 --> 00:50:14,770
means you need rest that means you need

00:50:11,950 --> 00:50:17,050
lots of other bits but most of the code

00:50:14,770 --> 00:50:17,610
itself should be as I'm 64 spotted on

00:50:17,050 --> 00:50:24,210
Linux

00:50:17,610 --> 00:50:26,150
why nots on OpenBSD that's lots of IDs

00:50:24,210 --> 00:50:29,100
for the future I have way less than

00:50:26,150 --> 00:50:31,830
before I have less motivation to be

00:50:29,100 --> 00:50:34,200
honest so I'm still looking for LP

00:50:31,830 --> 00:50:37,830
people want to get involved in Mozilla

00:50:34,200 --> 00:50:40,460
in open BSD I welcome el but you just

00:50:37,830 --> 00:50:43,140
need to get used to the tool chains the

00:50:40,460 --> 00:50:45,030
different ways of building it but I

00:50:43,140 --> 00:50:47,880
think most of the stuff I'm doing is

00:50:45,030 --> 00:50:51,950
documented and public and of course

00:50:47,880 --> 00:50:54,080
available for questions to the point of

00:50:51,950 --> 00:51:02,520
questions

00:50:54,080 --> 00:51:08,620
[Applause]

00:51:02,520 --> 00:51:12,040
low on time sorry we have time for few

00:51:08,620 --> 00:51:16,540
questions so who's interested wants to

00:51:12,040 --> 00:51:19,110
start how did you get Muslim folks to

00:51:16,540 --> 00:51:22,060
accept patches for obesity at all at

00:51:19,110 --> 00:51:24,400
many years ago I tried doing that and I

00:51:22,060 --> 00:51:27,940
was told we're interests in Linux

00:51:24,400 --> 00:51:31,680
Windows Mac OS and the rest of you we

00:51:27,940 --> 00:51:31,680
don't want your patches in our repo I

00:51:33,240 --> 00:51:39,400
think it was just a matter of opening

00:51:36,520 --> 00:51:41,740
bugs and making sure the patch you are

00:51:39,400 --> 00:51:44,110
feeding back don't break anything of

00:51:41,740 --> 00:51:46,270
course but since it's not part of the

00:51:44,110 --> 00:51:48,280
supported architectures most of the time

00:51:46,270 --> 00:51:51,010
they don't really care because they are

00:51:48,280 --> 00:51:53,230
trying to be friendly honestly and it's

00:51:51,010 --> 00:51:55,270
just matter of getting to have people

00:51:53,230 --> 00:51:57,190
know you that you are here and you okay

00:51:55,270 --> 00:51:59,020
I have Android patches and I have to

00:51:57,190 --> 00:52:01,150
feedback them but first that meant I had

00:51:59,020 --> 00:52:02,680
to understand them why they were here

00:52:01,150 --> 00:52:04,210
because if you feedback the patch you

00:52:02,680 --> 00:52:06,520
have to explain okay I have this patch

00:52:04,210 --> 00:52:08,560
take it that doesn't work you just have

00:52:06,520 --> 00:52:12,670
to understand why it is here so I just

00:52:08,560 --> 00:52:14,860
add the CVS log which doesn't help a lot

00:52:12,670 --> 00:52:16,630
most of the time I remove dots of

00:52:14,860 --> 00:52:18,790
patches which actually were totally

00:52:16,630 --> 00:52:21,970
useless I try to remove all the patches

00:52:18,790 --> 00:52:24,070
which we are customizations I prefer

00:52:21,970 --> 00:52:27,360
having the defaults that upstream

00:52:24,070 --> 00:52:30,790
provides and try to stay away from

00:52:27,360 --> 00:52:32,830
customizations because when you report

00:52:30,790 --> 00:52:35,470
stuff upstream they prefer having the

00:52:32,830 --> 00:52:37,120
default options and configurations it

00:52:35,470 --> 00:52:39,250
was true some years ago now since I have

00:52:37,120 --> 00:52:42,760
a bit less time sometimes it acts

00:52:39,250 --> 00:52:45,040
removing some stuff I don't like it but

00:52:42,760 --> 00:52:46,450
they are really welcoming patches I feel

00:52:45,040 --> 00:52:49,240
it all depends on the way you feedback

00:52:46,450 --> 00:52:53,230
them and you have to go for Bugzilla and

00:52:49,240 --> 00:52:55,710
find someone to review them so now they

00:52:53,230 --> 00:52:57,550
are welcoming they are much more open to

00:52:55,710 --> 00:52:59,260
they have always been open to

00:52:57,550 --> 00:53:02,680
contributions but now they are trying to

00:52:59,260 --> 00:53:04,780
welcome new contributors and give in an

00:53:02,680 --> 00:53:07,270
easy path to feedback patches and to

00:53:04,780 --> 00:53:08,890
find the reviewer for me it's not an

00:53:07,270 --> 00:53:10,660
issue since I know most of the people

00:53:08,890 --> 00:53:13,190
where in which area they are working but

00:53:10,660 --> 00:53:15,859
no that's something which is suggesting

00:53:13,190 --> 00:53:17,780
reviewer based on the paths that are in

00:53:15,859 --> 00:53:20,510
your patch so that it's in this code

00:53:17,780 --> 00:53:23,089
code area so that the people responsible

00:53:20,510 --> 00:53:26,299
for this code area are those possible

00:53:23,089 --> 00:53:29,059
reviewers so that's part of the the way

00:53:26,299 --> 00:53:32,270
of dealing and six years ago it was less

00:53:29,059 --> 00:53:34,490
people to actually I think the biggest

00:53:32,270 --> 00:53:37,400
problem a couple of years ago was they

00:53:34,490 --> 00:53:39,890
expected you to find out who's

00:53:37,400 --> 00:53:43,280
responsible for reviewing something and

00:53:39,890 --> 00:53:44,450
not providing any help with that but at

00:53:43,280 --> 00:53:48,049
that time there was only a wiki page

00:53:44,450 --> 00:53:50,839
listing people names and the code area

00:53:48,049 --> 00:53:53,359
which worked but wasn't that easy and

00:53:50,839 --> 00:53:56,950
going to IRC and asking people it's the

00:53:53,359 --> 00:53:56,950
best way of finding the right person

00:54:02,049 --> 00:54:06,450
thank you

00:54:03,200 --> 00:54:06,450

YouTube URL: https://www.youtube.com/watch?v=Bmz9SpQe5Tg


