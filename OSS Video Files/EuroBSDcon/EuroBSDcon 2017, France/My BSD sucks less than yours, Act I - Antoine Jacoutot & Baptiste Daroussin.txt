Title: My BSD sucks less than yours, Act I - Antoine Jacoutot & Baptiste Daroussin
Publication date: 2019-10-16
Playlist: EuroBSDcon 2017, France
Description: 
	Description:

This talk will look at some of the differences between the FreeBSD and OpenBSD operating systems. It is not intended to be solely technical but will also show the different “visions” and design decisions that rule the way things are implemented.

We shall try and hit where it hurts when that makes sense. Obviously, both
speakers have their own personal and subjective preferences and will explain
why. Showing some of the weaknesses may encourage people to contribute in some areas.

This is the Act I of a totally biased talk from two different perspectives.

Speaker biography:

Antoine Jacoutot has been an OpenBSD developer since 2006. He is currently
working as an open source consultant and evangelist at D2SI.
Captions: 
	00:00:03,130 --> 00:00:06,200
[Music]

00:00:09,889 --> 00:00:14,719
Singh

00:00:12,100 --> 00:00:17,310
[Music]

00:00:14,719 --> 00:00:20,150
my name is Barry Stan I'm from the

00:00:17,310 --> 00:00:20,150
free/busy project

00:00:24,760 --> 00:00:34,990
[Music]

00:00:36,129 --> 00:00:41,109
yeah we often meet together to share our

00:00:38,829 --> 00:00:44,500
certain vision about what's going to be

00:00:41,109 --> 00:00:46,390
the next big thing in ite or how long

00:00:44,500 --> 00:00:48,609
these are philosophical discussion about

00:00:46,390 --> 00:00:50,140
technology in general that's how we

00:00:48,609 --> 00:00:53,200
predicted that the cloud would be a

00:00:50,140 --> 00:01:02,790
thing before it was the world was even

00:00:53,200 --> 00:01:02,790
[Music]

00:01:03,030 --> 00:01:07,170
absolutely

00:01:04,239 --> 00:01:11,560
anyway I see it worth around 5:00 p.m.

00:01:07,170 --> 00:01:13,690
beautiful afternoon yeah okay who are we

00:01:11,560 --> 00:01:16,590
kidding there yeah it was more something

00:01:13,690 --> 00:01:16,590
like 2:00 in the morning

00:01:22,800 --> 00:01:34,990
burgundy burgundy we're in France you

00:01:25,240 --> 00:01:37,090
can say you're drinking that thing so if

00:01:34,990 --> 00:01:39,130
noticed again we're in France we were

00:01:37,090 --> 00:01:41,310
having a burgundy front anyone in that

00:01:39,130 --> 00:01:41,310
case

00:01:49,500 --> 00:01:52,590
[Music]

00:01:56,190 --> 00:03:01,630
okay so we edges which are just these

00:02:57,940 --> 00:03:04,150
packages these are typically used when

00:03:01,630 --> 00:03:06,459
you have a software that comes with a

00:03:04,150 --> 00:03:09,190
huge amount of data for example that how

00:03:06,459 --> 00:03:11,709
do products for against packages and

00:03:09,190 --> 00:03:14,680
these very changed while the main

00:03:11,709 --> 00:03:16,690
characters change each starting today so

00:03:14,680 --> 00:03:19,780
instead of having a huge factor that

00:03:16,690 --> 00:03:22,049
power it's a complete set you just once

00:03:19,780 --> 00:03:22,049
more

00:03:39,320 --> 00:03:42,400
[Music]

00:03:52,040 --> 00:03:56,849
with that last one you read the wrong

00:03:55,530 --> 00:03:59,940
example unfree viously

00:03:56,849 --> 00:04:02,310
we have fine grain split package for PHP

00:03:59,940 --> 00:04:06,260
so if you're on PHP within I'm a

00:04:02,310 --> 00:04:06,260
Pinterest install PHP file that's IMAP

00:04:17,959 --> 00:04:23,310
you're correct there there are no trees

00:04:21,000 --> 00:04:25,080
suit packages and it would be nicer if

00:04:23,310 --> 00:04:26,729
you had them if you're speaking about

00:04:25,080 --> 00:04:29,340
flavors a good example would be probably

00:04:26,729 --> 00:04:32,599
open and up client complete with or

00:04:29,340 --> 00:04:32,599
without it's also supports

00:04:45,300 --> 00:04:53,199
probably bad things like removing half

00:04:47,949 --> 00:04:55,770
of your packages yes it's true that we

00:04:53,199 --> 00:04:58,780
do not have the flavors nor sub-packages

00:04:55,770 --> 00:05:01,830
better a lot of ongoing works actually

00:04:58,780 --> 00:05:06,629
flavors should be committed in the next

00:05:01,830 --> 00:05:10,449
hours days we talked about it yesterday

00:05:06,629 --> 00:05:14,229
so the thing is that work is pretty hard

00:05:10,449 --> 00:05:16,419
as it break the design of the way some

00:05:14,229 --> 00:05:19,659
tools that are a beliefs by some user

00:05:16,419 --> 00:05:22,630
works for example poor pasture and port

00:05:19,659 --> 00:05:25,690
upgrade and those tools are right not

00:05:22,630 --> 00:05:27,370
right now barely maintained so as soon

00:05:25,690 --> 00:05:30,819
as we make such modification we have no

00:05:27,370 --> 00:05:32,110
one to update those so on previous

00:05:30,819 --> 00:05:33,880
internet I will show you how to have a

00:05:32,110 --> 00:05:37,449
good path for user to try to avoid

00:05:33,880 --> 00:05:39,490
breaking scenes keep in mind that we do

00:05:37,449 --> 00:05:41,530
not release a package set but the post

00:05:39,490 --> 00:05:44,229
tree is a rolling release not try to a

00:05:41,530 --> 00:05:45,969
given release or such change will need

00:05:44,229 --> 00:05:48,880
to be smooth when it arrives

00:05:45,969 --> 00:05:50,500
which reminds me you guys do not support

00:05:48,880 --> 00:05:54,569
our wedding packages on a given release

00:05:50,500 --> 00:05:54,569
do you actually we

00:06:01,250 --> 00:06:04,310
[Music]

00:06:52,750 --> 00:06:55,879
[Music]

00:06:56,230 --> 00:07:01,220
that's not true

00:06:57,890 --> 00:07:03,110
package uses capsicum Tucson box average

00:07:01,220 --> 00:07:06,080
is possible to do to make a sound box

00:07:03,110 --> 00:07:09,320
since capsicum exists basically and

00:07:06,080 --> 00:07:12,230
packet also uses unprivileged user to

00:07:09,320 --> 00:07:16,250
fetch package or in every areas where we

00:07:12,230 --> 00:07:18,590
donated root privileges so waltz

00:07:16,250 --> 00:07:20,780
unboxing support it there for a long

00:07:18,590 --> 00:07:23,770
time and privilege user mechanism has

00:07:20,780 --> 00:07:27,130
been added quite recently but I actually

00:07:23,770 --> 00:07:27,130
got it in

00:07:57,510 --> 00:08:02,570
[Music]

00:08:06,509 --> 00:08:10,720
well that's true for FreeBSD now it's

00:08:09,430 --> 00:08:13,389
been a while now that we are building

00:08:10,720 --> 00:08:16,659
binary packages most of the tool you are

00:08:13,389 --> 00:08:18,009
speaking about are mostly to use the

00:08:16,659 --> 00:08:21,000
process read directly on a live system

00:08:18,009 --> 00:08:24,729
are rather than using the binary package

00:08:21,000 --> 00:08:28,979
which i think is a usage which is not

00:08:24,729 --> 00:08:43,630
supported by open BSD now FreeBSD

00:08:28,979 --> 00:08:46,240
hostages yeah one of the thing about the

00:08:43,630 --> 00:08:48,399
FreeBSD ports 3 you need to keep in mind

00:08:46,240 --> 00:08:53,850
that it works on ultra ported version of

00:08:48,399 --> 00:08:53,850
FreeBSD which yes it reminds me that

00:09:30,829 --> 00:09:49,160
so regarding these

00:09:57,280 --> 00:10:00,370
[Music]

00:10:44,730 --> 00:10:47,769
[Music]

00:10:51,380 --> 00:10:55,770
I will read it for you so that you

00:10:53,670 --> 00:10:58,710
understand so we have the normal

00:10:55,770 --> 00:11:01,020
releases those are releases which are

00:10:58,710 --> 00:11:03,540
published from a stable branch were

00:11:01,020 --> 00:11:05,340
support were supported by security

00:11:03,540 --> 00:11:08,160
officer for minimum of 12 months after

00:11:05,340 --> 00:11:09,870
the release for sufficient amount of

00:11:08,160 --> 00:11:12,570
time if needed

00:11:09,870 --> 00:11:15,420
to ensure that a new release for at

00:11:12,570 --> 00:11:17,930
least is out for at least three months

00:11:15,420 --> 00:11:21,540
before the older normal reads expires

00:11:17,930 --> 00:11:24,570
and then you get the extended one so

00:11:21,540 --> 00:11:26,970
selected release normally every second

00:11:24,570 --> 00:11:29,250
release plus the last one from each

00:11:26,970 --> 00:11:31,410
stable branch were supported by a

00:11:29,250 --> 00:11:33,450
security feature for a minimum of 24

00:11:31,410 --> 00:11:35,670
months after the release and for a

00:11:33,450 --> 00:11:37,440
sufficient additional time if needed to

00:11:35,670 --> 00:11:39,030
ensure that there is a newer extended

00:11:37,440 --> 00:11:43,130
release for the last three months before

00:11:39,030 --> 00:11:43,130
the older extended release expires

00:11:44,320 --> 00:11:50,589
yeah okay I agree it's a mess well

00:11:48,470 --> 00:11:52,580
actually I should say it was a mess

00:11:50,589 --> 00:11:56,240
furthermore it was causing a lot of

00:11:52,580 --> 00:11:58,010
issues when maintaining the port 3 as we

00:11:56,240 --> 00:12:00,830
had to wait for at least two years with

00:11:58,010 --> 00:12:04,399
this model to be able to use some modern

00:12:00,830 --> 00:12:08,779
tools in the pottery so it was kind of a

00:12:04,399 --> 00:12:13,130
pain well which aim that with FreeBSD

00:12:08,779 --> 00:12:15,830
eleven that oh so now the model is way

00:12:13,130 --> 00:12:19,250
easier to understand so its major

00:12:15,830 --> 00:12:22,880
version of a stable branch is explicitly

00:12:19,250 --> 00:12:25,190
supported for five years and then we can

00:12:22,880 --> 00:12:27,649
issue a new dot released whenever we

00:12:25,190 --> 00:12:29,750
want without extending that dates when

00:12:27,649 --> 00:12:31,279
we issue one all the previous one is

00:12:29,750 --> 00:12:32,570
maintained for only three months so you

00:12:31,279 --> 00:12:37,940
have three months to upgrade so going

00:12:32,570 --> 00:12:40,279
from 11 1 to 11 2 and then 7 3 so that

00:12:37,940 --> 00:12:42,770
way we can benefit the users and benefit

00:12:40,279 --> 00:12:45,910
stability for 5 years and at the same

00:12:42,770 --> 00:12:45,910
time they have the new features

00:12:50,190 --> 00:12:53,309
[Music]

00:13:08,610 --> 00:13:11,730
[Music]

00:13:15,689 --> 00:13:22,329
which seems mom you seem to have

00:13:20,829 --> 00:13:25,869
misunderstood one of the benefit of the

00:13:22,329 --> 00:13:26,980
new release model new feature as soon as

00:13:25,869 --> 00:13:29,679
they are not breaking binary

00:13:26,980 --> 00:13:31,389
compatibility or thing about armors to

00:13:29,679 --> 00:13:33,189
stable branch so as soon as we need a

00:13:31,389 --> 00:13:36,610
new feature we'll just issue new release

00:13:33,189 --> 00:13:38,170
and a new problem is solved so you get

00:13:36,610 --> 00:13:42,369
new release supporting those new

00:13:38,170 --> 00:13:44,709
features in it that you have to wait for

00:13:42,369 --> 00:13:46,540
at least two years before being able to

00:13:44,709 --> 00:13:49,259
use the modern tool available with the

00:13:46,540 --> 00:13:49,259
previous model

00:14:00,410 --> 00:14:14,200
the backboard

00:14:02,350 --> 00:14:16,270
usually given we do support binary of

00:14:14,200 --> 00:14:18,250
grade it's very easy on FreeBSD to

00:14:16,270 --> 00:14:21,070
upgrade from a meaner version to under

00:14:18,250 --> 00:14:23,050
the mini version by the way binary

00:14:21,070 --> 00:14:25,210
upgrades also works very nicely across

00:14:23,050 --> 00:14:27,490
major releases on FreeBSD

00:14:25,210 --> 00:14:29,800
but hey I must be losing you somewhere

00:14:27,490 --> 00:14:32,170
here because it's real you do not

00:14:29,800 --> 00:14:34,890
support binary upgrades neither for

00:14:32,170 --> 00:14:36,970
security fixes or across religious

00:14:34,890 --> 00:14:38,320
certainly it should be virtually as to

00:14:36,970 --> 00:14:40,480
maintain some of ability boxes in

00:14:38,320 --> 00:14:44,320
production yeah I see where you're going

00:14:40,480 --> 00:14:47,020
here the way put it is not entirely true

00:14:44,320 --> 00:14:50,080
great between releases are and our

00:14:47,020 --> 00:14:53,200
always in perfectly supported what is

00:14:50,080 --> 00:14:55,120
not supported are increased rates of the

00:14:53,200 --> 00:14:58,570
bassist and from one release to the

00:14:55,120 --> 00:15:01,680
other but it's that radiation and it's

00:14:58,570 --> 00:15:01,680
loading in place major

00:15:03,030 --> 00:15:08,700
so from your great positive polling is

00:15:06,810 --> 00:15:11,820
he is just one of the easiest and

00:15:08,700 --> 00:15:14,760
fastest ever encounter cherry buddha

00:15:11,820 --> 00:15:16,890
with your release put on the PSD around

00:15:14,760 --> 00:15:18,120
ease colonel and if you do the rest for

00:15:16,890 --> 00:15:19,980
you in like five minutes

00:15:18,120 --> 00:15:22,830
and also effects to our auto installer

00:15:19,980 --> 00:15:24,960
and go to a great huge ninety you can

00:15:22,830 --> 00:15:32,040
give it the path to an answer tying the

00:15:24,960 --> 00:15:35,150
dhcp interaction you can also read at

00:15:32,040 --> 00:15:45,960
least to the fact that see sparked the

00:15:35,150 --> 00:15:50,900
fire yeah well okay but what happens if

00:15:45,960 --> 00:15:50,900
you have to regret for security patches

00:15:57,770 --> 00:16:07,260
CVS this is change their beliefs sweetie

00:16:06,570 --> 00:16:10,530
I'm sorry

00:16:07,260 --> 00:16:13,640
which is a bassist another day to visit

00:16:10,530 --> 00:16:13,640
you fetch there

00:16:24,730 --> 00:16:29,210
well on the previous decide we do

00:16:27,620 --> 00:16:31,220
support as I said earlier in place

00:16:29,210 --> 00:16:34,760
binary upgrade via the freebies of the

00:16:31,220 --> 00:16:37,610
tool so the basic behind design behind

00:16:34,760 --> 00:16:41,210
freebies the update is that we create by

00:16:37,610 --> 00:16:43,730
narratives and we binary purchase system

00:16:41,210 --> 00:16:45,560
with the changes so it is very

00:16:43,730 --> 00:16:48,740
convenient to receive security fixes and

00:16:45,560 --> 00:16:51,290
very fast for that FreeBSD update also

00:16:48,740 --> 00:16:53,960
allows you to upgrade form one major

00:16:51,290 --> 00:16:56,900
version to one major really to another

00:16:53,960 --> 00:16:58,490
major release in place and the procedure

00:16:56,900 --> 00:17:01,160
is basically what happened under the

00:16:58,490 --> 00:17:05,000
hood first it installed a new kernel

00:17:01,160 --> 00:17:07,070
then it reboots on the new kernel then

00:17:05,000 --> 00:17:08,839
install the user and match configuration

00:17:07,070 --> 00:17:10,820
files and remove the fighters are not

00:17:08,839 --> 00:17:14,420
needed anymore in the new release and

00:17:10,820 --> 00:17:18,830
that works it works fairly nicely for a

00:17:14,420 --> 00:17:21,350
while now but fetching all the binary

00:17:18,830 --> 00:17:23,120
patches when you're upgrading from a

00:17:21,350 --> 00:17:25,820
major release to another major release

00:17:23,120 --> 00:17:28,190
can be very very long another issue is

00:17:25,820 --> 00:17:30,230
that producing the packages is not

00:17:28,190 --> 00:17:31,970
really the patches is not very trivial

00:17:30,230 --> 00:17:34,880
for freebies update as it needs

00:17:31,970 --> 00:17:38,090
reproducible builds to be effective

00:17:34,880 --> 00:17:40,370
that's why we are now looking forward to

00:17:38,090 --> 00:17:43,850
be able to provide a new mechanism based

00:17:40,370 --> 00:17:47,450
on package itself to be honest there is

00:17:43,850 --> 00:17:49,430
also drawbacks about in-place upgrades

00:17:47,450 --> 00:17:51,470
when we need to maintain strong backward

00:17:49,430 --> 00:17:53,480
compatibility on some kernel interfaces

00:17:51,470 --> 00:17:57,560
versus the rated user and close that

00:17:53,480 --> 00:17:59,720
goes with a particular cases is the FS

00:17:57,560 --> 00:18:02,450
it's an interesting thing to look at

00:17:59,720 --> 00:18:04,070
so le must consider the version in the

00:18:02,450 --> 00:18:07,970
kernel goes with the version the user

00:18:04,070 --> 00:18:09,590
and which is nice so if the modify the

00:18:07,970 --> 00:18:10,970
kernel interface without the user and

00:18:09,590 --> 00:18:13,880
tool that goes with and everything is

00:18:10,970 --> 00:18:15,500
fine but on FreeBSD because you reboot

00:18:13,880 --> 00:18:17,360
on a new kernel first then you might end

00:18:15,500 --> 00:18:19,040
up with a user and tools that are not

00:18:17,360 --> 00:18:19,640
compatible anymore with the kernel you

00:18:19,040 --> 00:18:21,980
put in

00:18:19,640 --> 00:19:08,480
so when we are receiving the batteries

00:18:21,980 --> 00:19:10,910
to update therapists and there is that's

00:19:08,480 --> 00:19:13,040
it where they pass an interesting policy

00:19:10,910 --> 00:19:14,720
that we have on FreeBSD is for our

00:19:13,040 --> 00:19:17,120
polish the principle of least

00:19:14,720 --> 00:19:20,390
astonishment it's a very strong policy

00:19:17,120 --> 00:19:25,000
on the freebsd saying that we should try

00:19:20,390 --> 00:19:25,000
very very hard to make

00:19:44,510 --> 00:19:50,110
just to satisfy third-party clients you

00:19:46,850 --> 00:20:02,090
guys kept the TSA and friction atsc DC

00:19:50,110 --> 00:20:03,919
sniper and ssh-1 support well Terry -

00:20:02,090 --> 00:20:06,860
Paula does not prevent him from making

00:20:03,919 --> 00:20:09,230
those change but if they are done they

00:20:06,860 --> 00:20:12,140
should be driven in a manner so that the

00:20:09,230 --> 00:20:14,270
user r1 known before this is

00:20:12,140 --> 00:20:35,450
particularly true on a given branch we

00:20:14,270 --> 00:20:38,660
usually make between GSA Depot cyclist

00:20:35,450 --> 00:20:41,480
and disabled ssh one substrate is a long

00:20:38,660 --> 00:20:43,580
time but we can th say and this is H one

00:20:41,480 --> 00:20:51,250
and three bs view for reasons which goes

00:20:43,580 --> 00:20:51,250
down to anyway

00:20:51,790 --> 00:20:57,940
speaking about delivering binary

00:20:55,330 --> 00:20:59,620
upgrades you guys must have a very hard

00:20:57,940 --> 00:21:01,900
time building the thing considering

00:20:59,620 --> 00:21:24,430
you're still using the giant plug almost

00:21:01,900 --> 00:21:30,160
everywhere each one and only one started

00:21:24,430 --> 00:21:33,210
so isn't that it's just me to say this

00:21:30,160 --> 00:21:35,710
was written for vivacity machines

00:21:33,210 --> 00:21:39,250
consider things like for example the

00:21:35,710 --> 00:21:40,930
distance between and that's the database

00:21:39,250 --> 00:21:45,690
into my machines with the Seventh

00:21:40,930 --> 00:21:45,690
Circuit's performance and

00:22:02,799 --> 00:22:07,549
how the change can be done in the

00:22:04,940 --> 00:22:09,620
freebies in the OpenBSD model I mean on

00:22:07,549 --> 00:22:12,080
previously he took a lot of time to get

00:22:09,620 --> 00:22:14,809
most of the architectural work done so

00:22:12,080 --> 00:22:17,539
that we can have a proper assembly and

00:22:14,809 --> 00:22:21,830
it also led us to some of our very good

00:22:17,539 --> 00:22:24,590
releases like freebies defied I'm not

00:22:21,830 --> 00:22:26,690
saying that the road we took is the one

00:22:24,590 --> 00:22:28,340
true way but I can't see how this can be

00:22:26,690 --> 00:22:42,559
achieving an increment all the way that

00:22:28,340 --> 00:22:45,440
is yours in fact from the spin working

00:22:42,559 --> 00:22:48,850
in the portrait our music poses

00:22:45,440 --> 00:22:54,080
different organizations just drastically

00:22:48,850 --> 00:22:57,049
since we've donated a few tests in

00:22:54,080 --> 00:22:58,999
coverage today OpenBSD scales paradise

00:22:57,049 --> 00:23:02,570
computer networks

00:22:58,999 --> 00:23:05,049
now these performance of more twitter

00:23:02,570 --> 00:23:05,049
feed

00:23:19,260 --> 00:23:25,000
well to be honest SMP is something that

00:23:22,360 --> 00:23:27,220
is always evolving right now our next

00:23:25,000 --> 00:23:29,080
challenge on FreeBSD side are are to

00:23:27,220 --> 00:23:31,420
have pattern emerge support to improve

00:23:29,080 --> 00:24:02,950
the overall looking systems by using

00:23:31,420 --> 00:24:05,620
Lopes mechanism for most operating

00:24:02,950 --> 00:24:13,179
system to do it and we do it again two

00:24:05,620 --> 00:24:17,080
times we're trying to implement

00:24:13,179 --> 00:24:22,779
something that is simple and

00:24:17,080 --> 00:24:22,779
so as I said it was easier for you so

00:24:23,110 --> 00:24:36,440
behind so what are you here maybe you

00:24:34,010 --> 00:24:39,230
can expend me something in OpenBSD I do

00:24:36,440 --> 00:24:41,570
not understand you seem to keep writing

00:24:39,230 --> 00:24:43,309
again and again your own tools when

00:24:41,570 --> 00:24:43,789
there are already BSD license Kunta

00:24:43,309 --> 00:24:48,730
parts

00:24:43,789 --> 00:24:48,730
I mean HTTP mmm

00:24:52,390 --> 00:24:55,499
[Music]

00:25:52,679 --> 00:25:57,970
right for example you took okay I can

00:25:55,779 --> 00:26:01,169
understand it but I mean when you have

00:25:57,970 --> 00:26:03,669
already some beers equality alternatives

00:26:01,169 --> 00:26:06,450
you're still doing it whatever beehive

00:26:03,669 --> 00:26:08,409
it was working it could be easily

00:26:06,450 --> 00:26:30,610
because easily fit the security

00:26:08,409 --> 00:26:32,289
requirements so just creating something

00:26:30,610 --> 00:26:34,570
from scratch instead of supporting

00:26:32,289 --> 00:26:36,909
something that is not for governor's the

00:26:34,570 --> 00:26:41,110
situation and we may have changed since

00:26:36,909 --> 00:26:43,260
now the boys have an issue with the next

00:26:41,110 --> 00:26:43,260
time

00:26:53,440 --> 00:27:00,350
works to depend on the choice behind

00:26:57,200 --> 00:27:03,290
extra rights but another example I could

00:27:00,350 --> 00:27:06,880
have is our capsicum you decided to make

00:27:03,290 --> 00:27:06,880
your own some boxing mechanism instead

00:27:15,460 --> 00:27:25,780
so assume you know is mostly didn't run

00:27:19,670 --> 00:27:25,780
with privilege separation is most of the

00:27:26,350 --> 00:27:33,140
chooser open accent let the wave is too

00:27:30,590 --> 00:27:35,180
big ears ago they also use privilege

00:27:33,140 --> 00:27:47,240
gratification for talking privileges as

00:27:35,180 --> 00:27:50,090
soon as possible experience environment

00:27:47,240 --> 00:27:52,400
and so because we're Saturn will talk

00:27:50,090 --> 00:27:54,170
but in addition to this it has ability

00:27:52,400 --> 00:27:56,840
village separated

00:27:54,170 --> 00:27:59,060
TMS speaker before the constraints

00:27:56,840 --> 00:28:01,070
feature with no metal shearing or

00:27:59,060 --> 00:28:28,310
energy passing

00:28:01,070 --> 00:28:30,770
and so foreign TP well you're right but

00:28:28,310 --> 00:28:33,470
there is one part behind that you have a

00:28:30,770 --> 00:28:34,580
half making fermentation you have an

00:28:33,470 --> 00:28:36,260
implementation that cannot authenticate

00:28:34,580 --> 00:28:39,040
the peer you're receiving the time from

00:28:36,260 --> 00:28:41,930
and this could be a huge problem and

00:28:39,040 --> 00:28:44,060
you're not using the sunrise mechanism

00:28:41,930 --> 00:28:45,710
in that case yeah you miss half of the

00:28:44,060 --> 00:28:48,560
feature and the basic ways to provide

00:28:45,710 --> 00:28:50,510
and yes I own I agree on the fact that

00:28:48,560 --> 00:28:53,690
most people won't care about some of

00:28:50,510 --> 00:28:55,220
those that said I would love that to get

00:28:53,690 --> 00:29:00,040
something out that the NCPD in the base

00:28:55,220 --> 00:29:00,040
system but an operative is probably too

00:29:07,810 --> 00:29:11,820
[Music]

00:29:09,270 --> 00:29:13,560
because no one cares and what does that

00:29:11,820 --> 00:29:16,290
one can stop the reference

00:29:13,560 --> 00:29:18,780
implementation an example wisp of math

00:29:16,290 --> 00:29:21,680
and algorithm and sometimes good enough

00:29:18,780 --> 00:29:21,680
really needs to be

00:29:46,690 --> 00:29:49,769
[Music]

00:29:54,210 --> 00:29:59,279
[Music]

00:30:09,110 --> 00:30:23,600
which which will generate a unique

00:31:09,930 --> 00:31:14,900
we also provide some polished mechanism

00:31:14,960 --> 00:31:19,800
we have an implementation which is in

00:31:18,090 --> 00:31:23,070
review right now openings

00:31:19,800 --> 00:31:23,940
Veon people to be able to review it on

00:31:23,070 --> 00:31:25,380
our side

00:31:23,940 --> 00:31:27,690
we have the mic framework which is a

00:31:25,380 --> 00:31:30,030
very interesting framework it's monitor

00:31:27,690 --> 00:31:32,640
access control it allows to restrict

00:31:30,030 --> 00:31:35,940
many many things with Mac you can

00:31:32,640 --> 00:31:38,160
restrict user access to system resources

00:31:35,940 --> 00:31:41,160
including knotting sockets open by other

00:31:38,160 --> 00:31:43,380
users or many other stuff you can also

00:31:41,160 --> 00:31:45,710
have a file like policy on file system

00:31:43,380 --> 00:31:49,320
to be way stricter than the regular

00:31:45,710 --> 00:31:51,810
positon rights you can restrict network

00:31:49,320 --> 00:31:53,990
interface accesses you can limit the

00:31:51,810 --> 00:31:56,130
scope of the process one can see

00:31:53,990 --> 00:32:00,030
compartmentalizing them into partition

00:31:56,130 --> 00:32:02,490
and way more things another interesting

00:32:00,030 --> 00:32:06,180
feature that we have is open DSM it's

00:32:02,490 --> 00:32:07,710
full feature all its system which you

00:32:06,180 --> 00:32:09,300
can use to monitor everything that

00:32:07,710 --> 00:32:11,640
happen on a system and you can

00:32:09,300 --> 00:32:13,970
distribute to log over central server

00:32:11,640 --> 00:32:18,140
it also support the Linux version of the

00:32:13,970 --> 00:32:18,140
protocol for the consolidation

00:32:21,310 --> 00:32:24,410
[Music]

00:32:29,710 --> 00:32:35,480
well let's unbox part capsicum is a very

00:32:33,620 --> 00:32:38,480
nice unboxing mechanism that we have on

00:32:35,480 --> 00:32:42,590
FreeBSD it leveraged the concept of

00:32:38,480 --> 00:32:45,200
capabilities what is very nice about it

00:32:42,590 --> 00:32:47,270
is also how you're inside the sandbox

00:32:45,200 --> 00:32:50,680
there is absolutely no way you can exit

00:32:47,270 --> 00:32:54,140
it even chie process energy capabilities

00:32:50,680 --> 00:32:55,880
that's by design it is really designed

00:32:54,140 --> 00:32:59,000
for developers to secure their own

00:32:55,880 --> 00:33:01,790
application by strictly researching the

00:32:59,000 --> 00:33:03,650
capability of an application to only

00:33:01,790 --> 00:33:06,140
what it really needs to be able to and

00:33:03,650 --> 00:33:09,560
strictly while this really needs to be

00:33:06,140 --> 00:33:11,150
able to do to do we have started

00:33:09,560 --> 00:33:13,790
converting most of the base system to

00:33:11,150 --> 00:33:16,220
use it we're not very there yet because

00:33:13,790 --> 00:33:19,010
yes the design of capsicum Allah is no

00:33:16,220 --> 00:33:23,020
compromised so it's not only that easy

00:33:19,010 --> 00:33:23,020
to convert existing software to capsicum

00:33:26,970 --> 00:33:31,220
[Music]

00:33:29,540 --> 00:33:33,110
potentially scores actually very good a

00:33:31,220 --> 00:33:36,020
very good summary of what holding the FT

00:33:33,110 --> 00:33:38,750
project is about develop practical and

00:33:36,020 --> 00:33:40,820
affordable security meaning simple and

00:33:38,750 --> 00:33:43,660
easy to implement and as enabled by

00:33:40,820 --> 00:33:46,670
default almost everywhere in the system

00:33:43,660 --> 00:33:50,030
30% of the base system was left after

00:33:46,670 --> 00:34:06,290
only two months today 85 to 90 percent

00:33:50,030 --> 00:34:08,690
of the exact number to both base to

00:34:06,290 --> 00:34:11,629
enter each week actually powered same

00:34:08,690 --> 00:34:29,090
models and reduce exposure to the ground

00:34:11,629 --> 00:34:33,440
so some sort of pre-cleared of Iceland I

00:34:29,090 --> 00:34:35,330
need some chicken s TTY obviously next

00:34:33,440 --> 00:34:38,600
process is forced into a respective

00:34:35,330 --> 00:34:42,110
service operating mode where this can be

00:34:38,600 --> 00:34:44,770
reduced any further restraint in

00:34:42,110 --> 00:34:44,770
operations

00:34:58,030 --> 00:35:02,890
the security feature that we do have in

00:35:00,040 --> 00:35:06,370
FreeBSD and we have it for a while is

00:35:02,890 --> 00:35:09,070
Kjell it allows us to create written

00:35:06,370 --> 00:35:11,410
container we have it on preview these

00:35:09,070 --> 00:35:14,560
things should be the for gifts for

00:35:11,410 --> 00:35:16,960
remember correctly it's very simple and

00:35:14,560 --> 00:35:19,530
easy to use almost everything can be

00:35:16,960 --> 00:35:22,390
visible and is disabled by default or

00:35:19,530 --> 00:35:25,620
can be restricted inside the jail so you

00:35:22,390 --> 00:35:29,530
can restrict Network file system access

00:35:25,620 --> 00:35:31,990
CPU memory routing tables and nowadays

00:35:29,530 --> 00:35:34,510
it can even be nested you can have their

00:35:31,990 --> 00:35:37,260
own data Festivus a dedicated or have

00:35:34,510 --> 00:35:37,260
you might work

00:35:40,330 --> 00:35:43,400
[Music]

00:35:43,569 --> 00:35:47,530
there's been a nation of import years

00:35:45,190 --> 00:35:49,900
ago called sis jail but it was abandoned

00:35:47,530 --> 00:35:52,420
because of an inherent design issue

00:35:49,900 --> 00:35:58,920
consists rates on which the two love

00:35:52,420 --> 00:35:58,920
based and basically allow exploitations

00:36:08,310 --> 00:36:16,630

YouTube URL: https://www.youtube.com/watch?v=cc54e2G9qDM


