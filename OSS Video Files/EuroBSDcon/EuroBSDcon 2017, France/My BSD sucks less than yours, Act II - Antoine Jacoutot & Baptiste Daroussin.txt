Title: My BSD sucks less than yours, Act II - Antoine Jacoutot & Baptiste Daroussin
Publication date: 2019-10-16
Playlist: EuroBSDcon 2017, France
Description: 
	Description:

This talk will look at some of the differences between the FreeBSD and OpenBSD operating systems. It is not intended to be solely technical but will also show the different “visions” and design decisions that rule the way things are implemented.

We shall try and hit where it hurts when that makes sense. Obviously, both
speakers have their own personal and subjective preferences and will explain
why. Showing some of the weaknesses may encourage people to contribute in some areas.

This is the Act II of a totally biased talk from two different perspectives.

Speaker biography:

Baptiste Daroussin has been a FreeBSD developer since 2010, member of the
FreeBSD core team since 2014, member of the portmgr team.
He is working at Gandi.net.
Captions: 
	00:00:07,520 --> 00:00:15,150
so the free/busy project is a community

00:00:11,940 --> 00:00:18,119
driven project the active developers do

00:00:15,150 --> 00:00:20,220
elect every two years a new core team of

00:00:18,119 --> 00:00:23,189
nine people responsible for deciding the

00:00:20,220 --> 00:00:25,050
project overall goals and directions as

00:00:23,189 --> 00:00:28,259
well as validating new committers

00:00:25,050 --> 00:00:31,199
proposals and work on the project of

00:00:28,259 --> 00:00:34,850
rural body bylaws the FreeBSD function

00:00:31,199 --> 00:00:38,070
foundation is 501 us-based nonprofit

00:00:34,850 --> 00:00:39,809
organization dedicated to supporting and

00:00:38,070 --> 00:00:42,750
promoting the FreeBSD project and

00:00:39,809 --> 00:00:45,329
community worldwide following comes from

00:00:42,750 --> 00:00:48,300
individual and corporate donation and is

00:00:45,329 --> 00:00:50,460
used from the manager project from

00:00:48,300 --> 00:00:52,649
conferences developers teammates

00:00:50,460 --> 00:00:55,109
provides travel grants for developer

00:00:52,649 --> 00:00:59,399
that's how a bunch of people are heading

00:00:55,109 --> 00:01:00,989
here the foundation purchases the

00:00:59,399 --> 00:01:03,350
hardware to improve and maintain the

00:01:00,989 --> 00:01:05,610
previously infrastructure and publishes

00:01:03,350 --> 00:01:07,890
previously white paper and marketing

00:01:05,610 --> 00:01:10,800
model to promote educate advocate for

00:01:07,890 --> 00:01:13,260
the FreeBSD project the foundation also

00:01:10,800 --> 00:01:15,720
represents a project in executing

00:01:13,260 --> 00:01:18,270
contracts license agreements and other

00:01:15,720 --> 00:01:21,470
legal arrangement that require a

00:01:18,270 --> 00:01:21,470
recognized legal entity

00:01:32,300 --> 00:01:35,409
[Music]

00:02:12,310 --> 00:02:15,379
[Music]

00:02:24,940 --> 00:02:30,639
[Music]

00:02:33,250 --> 00:02:39,550
remember people it is very important to

00:02:35,630 --> 00:02:39,550
both foundations yes

00:02:41,700 --> 00:02:45,320
[Music]

00:02:50,709 --> 00:02:56,780
have you tried to pass that netstat

00:02:53,120 --> 00:02:59,030
output with scripting languages well

00:02:56,780 --> 00:03:01,100
having a programmatically possible

00:02:59,030 --> 00:03:04,819
output is very handy to write software

00:03:01,100 --> 00:03:07,310
on top of FreeBSD quite quickly living

00:03:04,819 --> 00:03:08,780
so a very useful for that it provides

00:03:07,310 --> 00:03:29,660
the ability for programs you'll put some

00:03:08,780 --> 00:03:31,910
JSON or XML to be honest from that or I

00:03:29,660 --> 00:03:37,580
had to search hard to find a usefulness

00:03:31,910 --> 00:03:39,860
but I found one so how do you how do you

00:03:37,580 --> 00:03:42,769
with Swift language deal with some exe

00:03:39,860 --> 00:03:45,590
extensions like th flags all the

00:03:42,769 --> 00:03:49,030
languages are not aware of this so you

00:03:45,590 --> 00:03:49,030
can have it through the in the mixer

00:03:53,560 --> 00:03:56,659
[Music]

00:04:04,300 --> 00:04:08,980
honestly I have no argument about that

00:04:06,650 --> 00:04:08,980
one

00:04:09,180 --> 00:04:14,489
so the funny story behind this one is we

00:04:12,150 --> 00:04:17,820
discovered it at Europe easy con last

00:04:14,489 --> 00:04:20,209
year on someone else toke and everyone

00:04:17,820 --> 00:04:20,209
in the audience

00:04:31,140 --> 00:04:34,230
[Music]

00:05:26,190 --> 00:05:32,220
so our models inside there so for jail

00:05:29,970 --> 00:05:34,020
the provided default tools in base

00:05:32,220 --> 00:05:36,390
system are in my opinion good enough to

00:05:34,020 --> 00:05:39,180
manage them they are flexible they are

00:05:36,390 --> 00:05:40,950
nice they are simple to use and all

00:05:39,180 --> 00:05:43,020
external tools are mostly to provide

00:05:40,950 --> 00:05:46,290
some extra features like automated

00:05:43,020 --> 00:05:49,260
provisioning which I don't think didn't

00:05:46,290 --> 00:05:51,120
belong to base because they can evolve

00:05:49,260 --> 00:05:54,150
faster and if they are available in the

00:05:51,120 --> 00:05:57,690
boss 3 it's way easier to have updated

00:05:54,150 --> 00:06:00,110
version and remember that a branch will

00:05:57,690 --> 00:06:02,850
live for something like five years so

00:06:00,110 --> 00:06:05,910
considering that effects the only one I

00:06:02,850 --> 00:06:07,110
have in mind is be at ADM or ism which

00:06:05,910 --> 00:06:09,360
could be missing in the base system

00:06:07,110 --> 00:06:12,690
which would although have multiple boot

00:06:09,360 --> 00:06:14,370
environments this one will end up in the

00:06:12,690 --> 00:06:16,380
base system one day if not yet I haven't

00:06:14,370 --> 00:06:19,200
checked for what happened recently in

00:06:16,380 --> 00:06:22,770
that because it's useful but it's plan

00:06:19,200 --> 00:06:25,110
to considering the firewalls yeah true

00:06:22,770 --> 00:06:27,120
IPFW has been developed by and for

00:06:25,110 --> 00:06:29,070
FreeBSD but as long as we have people

00:06:27,120 --> 00:06:31,380
that are willing to actively maintain in

00:06:29,070 --> 00:06:39,390
order for her there is no issue with

00:06:31,380 --> 00:06:42,180
that regarding PF exactly so regarding

00:06:39,390 --> 00:06:43,740
PF it through it hasn't been synced for

00:06:42,180 --> 00:06:45,720
a couple of years but it's still

00:06:43,740 --> 00:06:48,990
actively maintained beside what you're

00:06:45,720 --> 00:06:51,600
saying and it has feature that are not

00:06:48,990 --> 00:06:54,000
yet available on open BSD which makes

00:06:51,600 --> 00:06:57,320
thinking they're difficult like we have

00:06:54,000 --> 00:07:00,180
is SMP support v-net is another example

00:06:57,320 --> 00:07:02,310
so remember it's all in our case about

00:07:00,180 --> 00:07:03,840
flexibility and yes some time and

00:07:02,310 --> 00:07:05,820
flexibility as a price you can have a

00:07:03,840 --> 00:07:08,390
multiple version for something but it's

00:07:05,820 --> 00:07:08,390
for users

00:07:15,000 --> 00:07:18,120
[Music]

00:07:29,270 --> 00:07:35,990
well flexibility doesn't mean complexity

00:07:32,190 --> 00:07:35,990
we also like simplicity in our case

00:07:41,610 --> 00:07:44,790
[Music]

00:07:59,750 --> 00:08:03,330
okay

00:08:01,320 --> 00:08:05,250
previously infamously we support

00:08:03,330 --> 00:08:07,470
multiple fire system and so are the

00:08:05,250 --> 00:08:09,810
naughty one being the original ufs that

00:08:07,470 --> 00:08:12,060
had evolved in the time so it's now

00:08:09,810 --> 00:08:15,720
support modern features like journaling

00:08:12,060 --> 00:08:17,460
soft updates trim etc we also of course

00:08:15,720 --> 00:08:21,030
support very modern fire systems which

00:08:17,460 --> 00:08:23,880
has ZFS as the first-class citizen our

00:08:21,030 --> 00:08:26,580
file system support is extended to some

00:08:23,880 --> 00:08:29,790
random otherfor system like ms-dos file

00:08:26,580 --> 00:08:32,220
system makes 2 3 & 4 without journaling

00:08:29,790 --> 00:08:35,279
NAND FS and more

00:08:32,220 --> 00:08:35,279
[Music]

00:08:41,000 --> 00:08:44,049
[Music]

00:09:40,400 --> 00:09:43,490
[Music]

00:09:49,660 --> 00:09:52,760
[Music]

00:09:53,050 --> 00:09:59,570
so on the under the hood we have the GM

00:09:56,120 --> 00:10:01,310
layer which is a powerful layer that

00:09:59,570 --> 00:10:04,730
provide the support for multi pass

00:10:01,310 --> 00:10:05,380
through G with the bus encryption led

00:10:04,730 --> 00:10:08,270
PDE

00:10:05,380 --> 00:10:11,240
mirroring the mirror Network transport

00:10:08,270 --> 00:10:13,070
way tickets also it allows to fake

00:10:11,240 --> 00:10:16,670
Hardware errors and single that with

00:10:13,070 --> 00:10:18,890
Gino very useful to tests we have a

00:10:16,670 --> 00:10:21,740
wonderful support for Isis targets with

00:10:18,890 --> 00:10:26,120
the city OD with the come from troubled

00:10:21,740 --> 00:10:27,740
layer it also includes a high

00:10:26,120 --> 00:10:31,280
availability support which is very nice

00:10:27,740 --> 00:10:33,620
we have ICD an initiator for ice cases

00:10:31,280 --> 00:10:36,380
on network our system a very good spot

00:10:33,620 --> 00:10:39,940
for NFS all version server and client

00:10:36,380 --> 00:10:42,740
even pmf SE support is coming very soon

00:10:39,940 --> 00:10:45,380
we provide an attitude to the lowest

00:10:42,740 --> 00:10:48,040
both of the storage devices it includes

00:10:45,380 --> 00:10:50,480
SAS devices with you two

00:10:48,040 --> 00:10:52,170
also we can talk native little sauce

00:10:50,480 --> 00:10:54,570
cards using

00:10:52,170 --> 00:10:59,190
native tools not having to use blobs

00:10:54,570 --> 00:11:01,830
from Alice I and other providers as a

00:10:59,190 --> 00:11:04,080
client of storage we also use a

00:11:01,830 --> 00:11:06,790
traditional AMD if we need to but

00:11:04,080 --> 00:11:08,900
recently we have a new shiny auto af-s

00:11:06,790 --> 00:11:26,480
[Music]

00:11:08,900 --> 00:11:26,480
happening so

00:11:31,180 --> 00:11:34,300
[Music]

00:12:12,780 --> 00:12:17,710
encryption we have multiple choice

00:12:14,980 --> 00:12:19,900
previously on top of the layer so we

00:12:17,710 --> 00:12:22,030
have Kelly ng be de because there are

00:12:19,900 --> 00:12:24,730
top of Geum then in men we can put any

00:12:22,030 --> 00:12:27,660
file system we want on top of it for

00:12:24,730 --> 00:12:31,870
Kelly since recently free vigil day 11

00:12:27,660 --> 00:12:33,820
we can support full disk encryption that

00:12:31,870 --> 00:12:37,360
is being decrypted by the bootloader is

00:12:33,820 --> 00:12:39,370
in the passphrase we also support not in

00:12:37,360 --> 00:12:41,530
base but developed for freebies year for

00:12:39,370 --> 00:12:45,490
system level encryption yeah something

00:12:41,530 --> 00:12:47,500
will be EFS which allows to encrypt only

00:12:45,490 --> 00:12:50,430
some directories on whatever for system

00:12:47,500 --> 00:12:50,430
there is under the hood

00:13:20,750 --> 00:13:23,889
[Music]

00:13:25,850 --> 00:13:31,710
by the way on FreeBSD using and creative

00:13:29,370 --> 00:13:34,950
swap is very very easy you just append

00:13:31,710 --> 00:13:37,020
Li in your f festival at your device's

00:13:34,950 --> 00:13:42,330
device name and then it's automatically

00:13:37,020 --> 00:13:49,470
happening has been encrypted 94 for many

00:13:42,330 --> 00:13:58,400
years with the new sh t GT priority with

00:13:49,470 --> 00:13:58,400
actually disables what

00:14:01,489 --> 00:14:05,999
openly as a rule where security

00:14:04,229 --> 00:14:09,229
enhancements where they plan to full

00:14:05,999 --> 00:14:09,229
with can party tunes

00:14:10,069 --> 00:14:15,919
speaking of teeth full sentence that's

00:14:13,169 --> 00:14:15,919
really something

00:14:50,710 --> 00:14:56,420
full feature on the network side FreeBSD

00:14:53,660 --> 00:14:58,610
is also very fulfilling back to the

00:14:56,420 --> 00:15:02,530
basic system all those demon make your

00:14:58,610 --> 00:15:02,530
basis in huge

00:15:15,350 --> 00:15:26,500
[Music]

00:15:28,820 --> 00:15:31,979
[Music]

00:15:34,600 --> 00:15:41,860
also encourages codes in taxation with

00:15:38,139 --> 00:15:45,449
the base system totally deaf community

00:15:41,860 --> 00:15:45,449
support more go to our story

00:15:47,750 --> 00:15:50,970
[Music]

00:16:15,010 --> 00:16:21,529
well a system for us is also Korean

00:16:18,410 --> 00:16:23,660
out-of-box general-purpose system for a

00:16:21,529 --> 00:16:25,279
full picture version of a given server

00:16:23,660 --> 00:16:26,779
can be installed from packages there is

00:16:25,279 --> 00:16:29,390
no reason why it should blow the base

00:16:26,779 --> 00:16:33,740
system with a soul if I did the example

00:16:29,390 --> 00:16:35,779
of MCA I mean if you need to run mga he

00:16:33,740 --> 00:16:37,550
would need to add tons too dependent on

00:16:35,779 --> 00:16:39,350
external libraries otherwise you have

00:16:37,550 --> 00:16:41,570
you won't have a full picture one I mean

00:16:39,350 --> 00:16:44,110
l-dub connections and device connections

00:16:41,570 --> 00:16:46,459
and these BAM connections everything

00:16:44,110 --> 00:16:48,740
that something you will get from from

00:16:46,459 --> 00:16:50,839
the basis from the port 3 so let's move

00:16:48,740 --> 00:16:53,690
that the upholstery why would I bother

00:16:50,839 --> 00:16:55,699
having a nation full feature HTTP server

00:16:53,690 --> 00:16:58,490
in some of my own storage on my storage

00:16:55,699 --> 00:17:00,680
server of course if ruby is did they

00:16:58,490 --> 00:17:04,010
remain 10 that cut then it's another

00:17:00,680 --> 00:17:05,720
thing then it could be in that's the

00:17:04,010 --> 00:17:08,630
reason why we ended up for example with

00:17:05,720 --> 00:17:11,809
3 firewalls which is the notification my

00:17:08,630 --> 00:17:13,730
opinion with the exception of couple of

00:17:11,809 --> 00:17:16,370
servers which are closely tied to the

00:17:13,730 --> 00:17:20,630
kernel interfaces like ice-cream target

00:17:16,370 --> 00:17:23,780
layer or NFS D we there is no interest

00:17:20,630 --> 00:17:25,520
to provide forfeitures server and if

00:17:23,780 --> 00:17:26,990
there if we have will you provide an app

00:17:25,520 --> 00:17:30,370
so that we can build a stripped-down

00:17:26,990 --> 00:17:30,370
version we really need

00:17:40,080 --> 00:17:43,170
[Music]

00:17:54,470 --> 00:18:01,229
[Music]

00:18:24,530 --> 00:18:30,470
[Music]

00:18:27,530 --> 00:18:32,960
previously by default in the forest as I

00:18:30,470 --> 00:18:35,240
said in the binary firm we only do

00:18:32,960 --> 00:18:38,090
support the plentiful FreeBSD us or by

00:18:35,240 --> 00:18:39,799
the Isis but keep in mind that strizheus

00:18:38,090 --> 00:18:42,950
is also what we use in embedded

00:18:39,799 --> 00:18:44,840
environment or inside appliances post

00:18:42,950 --> 00:18:46,880
needs lots of flexibility either

00:18:44,840 --> 00:18:49,340
stripping down the side of forum barrel

00:18:46,880 --> 00:18:50,990
or being able to replace one feature we

00:18:49,340 --> 00:18:54,470
do provide by their own implementation

00:18:50,990 --> 00:18:56,659
for some appliances also we encourage a

00:18:54,470 --> 00:18:58,940
lot vendor to work closely with the

00:18:56,659 --> 00:19:01,909
herbs room in our case meaning us yes

00:18:58,940 --> 00:19:04,419
yes previously vendors who come to you

00:19:01,909 --> 00:19:04,419
they meet

00:19:17,760 --> 00:19:25,430
[Music]

00:19:33,300 --> 00:19:36,349
[Music]

00:19:45,250 --> 00:19:50,090
if someone is willing to put a new

00:19:47,540 --> 00:19:51,830
feature and or a new knob to improve

00:19:50,090 --> 00:19:54,440
flexibility as long as it doesn't break

00:19:51,830 --> 00:19:58,610
FreeBSD Direction usability will accept

00:19:54,440 --> 00:20:00,290
its it's not a problem it gives us the

00:19:58,610 --> 00:20:02,540
flexibility we need in the base system

00:20:00,290 --> 00:20:04,850
and it's very nice to make freebsd

00:20:02,540 --> 00:20:07,190
usable in every single kind of niche

00:20:04,850 --> 00:20:10,760
usage if needed for example making a

00:20:07,190 --> 00:20:14,240
very seen storage server that runs on

00:20:10,760 --> 00:20:17,510
run this like we do in Gandhi which

00:20:14,240 --> 00:20:19,100
makes me think that we're spending I

00:20:17,510 --> 00:20:20,090
feel that OpenBSD does not support your

00:20:19,100 --> 00:20:22,280
model at all

00:20:20,090 --> 00:20:24,470
I find this very hungry too for

00:20:22,280 --> 00:20:25,130
flexibility and as I can load or unload

00:20:24,470 --> 00:20:28,460
feature

00:20:25,130 --> 00:20:31,070
Angemon if I need if I need it without

00:20:28,460 --> 00:20:33,080
having to rebuild the kernel or play

00:20:31,070 --> 00:20:34,300
with his control to evolve to be able to

00:20:33,080 --> 00:20:36,950
interact with the kernel configuration

00:20:34,300 --> 00:20:40,030
in the painful tuner to tune your

00:20:36,950 --> 00:20:40,030
problem open easy

00:20:48,670 --> 00:20:51,729
[Music]

00:21:14,299 --> 00:21:19,879
to make producing jobs in the u.s.

00:21:22,369 --> 00:21:29,129
relies a little bit the Stoke im3 be the

00:21:27,090 --> 00:21:31,169
we do support running Linux binaries

00:21:29,129 --> 00:21:34,769
natively if you have the Linux emulator

00:21:31,169 --> 00:21:38,249
also called the Linux emulation right

00:21:34,769 --> 00:21:40,169
now we do support linux i386 and mg 64

00:21:38,249 --> 00:21:43,619
binaries there are patches available to

00:21:40,169 --> 00:21:46,200
support Linux armories we also do

00:21:43,619 --> 00:21:49,080
support running old FreeBSD binaries on

00:21:46,200 --> 00:21:52,320
newer releases meaning that if one wants

00:21:49,080 --> 00:21:54,600
to create a shell to run FreeBSD for use

00:21:52,320 --> 00:22:00,840
alone binaries ribbies 11 it works out

00:21:54,600 --> 00:22:02,940
of box on the virtualization front we we

00:22:00,840 --> 00:22:04,679
have a really well featured we do

00:22:02,940 --> 00:22:08,190
support native virtualization the

00:22:04,679 --> 00:22:10,859
beehive it has many nice feature we have

00:22:08,190 --> 00:22:13,320
a net matte net map interface support

00:22:10,859 --> 00:22:15,480
VNC server supported color and almost

00:22:13,320 --> 00:22:18,690
any operating system guests as long as

00:22:15,480 --> 00:22:21,359
it's super clear to you and EFI it is

00:22:18,690 --> 00:22:24,299
also fully samba also fully sandbox via

00:22:21,359 --> 00:22:27,029
capsicum we also support external

00:22:24,299 --> 00:22:31,769
batteries in mechanism we are we can run

00:22:27,029 --> 00:22:33,509
natively 0 or the MU 4 exam or we also

00:22:31,769 --> 00:22:36,440
have virtual worlds in the boss 3 that

00:22:33,509 --> 00:22:36,440
works on FreeBSD

00:23:03,600 --> 00:23:06,740
[Music]

00:23:28,059 --> 00:23:33,049
well being open to vendors in my opinion

00:23:30,889 --> 00:23:34,760
is a pragmatic point of view and does

00:23:33,049 --> 00:23:37,340
not make us lose control of our resource

00:23:34,760 --> 00:23:39,500
at all actually we have very good

00:23:37,340 --> 00:23:42,139
relationship with until them are there

00:23:39,500 --> 00:23:47,269
emitters running through our usual

00:23:42,139 --> 00:23:50,120
process recruit new developers we review

00:23:47,269 --> 00:23:53,149
the code they submit we even extend it

00:23:50,120 --> 00:23:54,679
some time it's not unusual to see some

00:23:53,149 --> 00:23:57,590
vendor committers continuing to

00:23:54,679 --> 00:24:00,380
contribute to various the way after the

00:23:57,590 --> 00:24:02,240
life the said vendor so back in

00:24:00,380 --> 00:24:03,889
virtualization because that's what we

00:24:02,240 --> 00:24:06,940
are speaking about what is the situation

00:24:03,889 --> 00:24:06,940
of busy

00:24:10,950 --> 00:24:20,159
currently you can reliably run openbsd

00:24:14,519 --> 00:24:23,279
netbsd some distribution is deep now

00:24:20,159 --> 00:24:26,639
have any guidance provides a very nice

00:24:23,279 --> 00:24:29,100
user interface without en control since

00:24:26,639 --> 00:24:31,129
extruded and pledged breaking out the pn

00:24:29,100 --> 00:24:34,639
monitor means ending up in the Schrute

00:24:31,129 --> 00:24:37,950
obviously very reliable system causes

00:24:34,639 --> 00:24:41,009
the other virtualization technology that

00:24:37,950 --> 00:24:43,429
OpenBSD supports itself for real logical

00:24:41,009 --> 00:24:43,429
diamonds

00:24:44,149 --> 00:24:49,819
it's hardware virtualization the

00:24:47,569 --> 00:25:15,319
community resources are partitioned

00:24:49,819 --> 00:25:17,119
directly are the hardware design so

00:25:15,319 --> 00:25:19,729
we're speaking in the beginning about

00:25:17,119 --> 00:25:21,699
our project in tournaments but what

00:25:19,729 --> 00:25:24,649
about relationship with the external

00:25:21,699 --> 00:25:26,539
products in general for free B is the

00:25:24,649 --> 00:25:28,699
most upstream are happy to receive

00:25:26,539 --> 00:25:31,639
previous the unity patches and integrate

00:25:28,699 --> 00:25:33,319
them even be ones for example dealing

00:25:31,639 --> 00:25:36,529
and of streaming patches to Libra face

00:25:33,319 --> 00:25:38,509
was very easy process they welcomed all

00:25:36,529 --> 00:25:40,519
of them and they were even they even

00:25:38,509 --> 00:25:43,759
tried to set up a CIE so that they are

00:25:40,519 --> 00:25:45,559
not breaking our usage on the gnome

00:25:43,759 --> 00:25:51,139
front so you probably know better as an

00:25:45,559 --> 00:25:53,119
ohmmeter yourself we don't deal with the

00:25:51,139 --> 00:25:56,479
patches myself directly we have a good

00:25:53,119 --> 00:25:59,779
relationship with grape jelly maintainer

00:25:56,479 --> 00:26:03,049
x' who came to us to ensure that jelly B

00:25:59,779 --> 00:26:05,839
is working correctly on FreeBSD on the

00:26:03,049 --> 00:26:08,209
beers in general by the way and they

00:26:05,839 --> 00:26:10,579
even set up the ignominy I and FreeBSD

00:26:08,209 --> 00:26:13,389
to ensure that every bills are every

00:26:10,579 --> 00:26:13,389
single as fine as possible

00:26:13,970 --> 00:26:20,230
experience here like some strings are

00:26:17,150 --> 00:26:22,520
more open than other to thought leaders

00:26:20,230 --> 00:26:25,070
contributions in general are pretty

00:26:22,520 --> 00:26:26,510
happy to integrate our patches and

00:26:25,070 --> 00:26:30,440
sometimes they actually learn a thing or

00:26:26,510 --> 00:26:33,380
two about portability it is true that a

00:26:30,440 --> 00:26:35,660
few identified people within the free

00:26:33,380 --> 00:26:37,280
software community take some measure in

00:26:35,660 --> 00:26:40,690
bashing anything that is not the new

00:26:37,280 --> 00:26:44,210
ordinance but these are in the new

00:26:40,690 --> 00:26:47,120
opportunity for the ecosystems sometimes

00:26:44,210 --> 00:26:50,470
absolute can also be very close we have

00:26:47,120 --> 00:26:54,910
the OpenBSD developer also the bright no

00:26:50,470 --> 00:26:58,720
xxe who see our lingo physics era

00:26:54,910 --> 00:27:02,380
OpenBSD BDS training for server software

00:26:58,720 --> 00:27:02,380
video message

00:27:03,700 --> 00:27:07,900
also saw application can be very complex

00:27:06,370 --> 00:27:12,490
t42 it's important to be able to

00:27:07,900 --> 00:27:15,570
interact next a Twitter stream and what

00:27:12,490 --> 00:27:15,570
our expression

00:27:26,080 --> 00:27:38,859
[Music]

00:27:41,559 --> 00:27:47,299
so free/busy is pretty well for

00:27:44,809 --> 00:27:50,149
debugging by default based system we

00:27:47,299 --> 00:27:53,600
have a catch phrase trust to be able to

00:27:50,149 --> 00:27:55,549
track what an application is doing in

00:27:53,600 --> 00:27:57,409
particular when debugging a capsicum an

00:27:55,549 --> 00:27:59,659
application is very useful to have cat

00:27:57,409 --> 00:28:03,049
tries to solve you war the capability an

00:27:59,659 --> 00:28:06,289
application might be missing if any more

00:28:03,049 --> 00:28:08,750
importantly we now have DJed support in

00:28:06,289 --> 00:28:11,840
the base system which is a very powerful

00:28:08,750 --> 00:28:13,519
tool to be able to do some tracing when

00:28:11,840 --> 00:28:15,710
building the freebsd kernel for example

00:28:13,519 --> 00:28:18,169
we build it with all the lipid flags

00:28:15,710 --> 00:28:21,649
which are committed to the CTF format

00:28:18,169 --> 00:28:25,399
and our innocent and then they are all

00:28:21,649 --> 00:28:29,299
de traceable by default to help

00:28:25,399 --> 00:28:31,700
debugging we also have by default the

00:28:29,299 --> 00:28:34,730
debug flag activated when building and

00:28:31,700 --> 00:28:36,169
that was split from the binaries so that

00:28:34,730 --> 00:28:38,750
in ambient environment you don't end up

00:28:36,169 --> 00:28:40,549
with them I will DB and gdb has been

00:28:38,750 --> 00:28:44,919
configured at the no word to figure out

00:28:40,549 --> 00:28:48,139
was the past to those debug facts

00:28:44,919 --> 00:28:51,230
concerning the port 3 now lots of the

00:28:48,139 --> 00:28:53,090
application are the trace aware but the

00:28:51,230 --> 00:28:55,580
poultry itself is little bit with the

00:28:53,090 --> 00:28:57,919
debug flag yet we are working it's

00:28:55,580 --> 00:28:59,870
working progress the goal is to also

00:28:57,919 --> 00:29:01,669
extract the debug flag after building so

00:28:59,870 --> 00:29:03,409
that we can provide debug package so you

00:29:01,669 --> 00:29:07,090
have differences whenever you need it

00:29:03,409 --> 00:29:07,090
but not when you don't need it

00:29:36,090 --> 00:29:39,170
[Music]

00:29:44,290 --> 00:29:47,440
[Music]

00:29:53,500 --> 00:29:59,150
which is great and by the way I plan to

00:29:56,840 --> 00:30:00,580
import those BSD license version of CTF

00:29:59,150 --> 00:30:03,590
them and shevkov

00:30:00,580 --> 00:30:06,740
so it looks like you are slowly getting

00:30:03,590 --> 00:30:09,860
and therefore deeper for tracing so post

00:30:06,740 --> 00:30:15,560
project now are going to have was nice

00:30:09,860 --> 00:30:17,750
debugging capabilities that's another

00:30:15,560 --> 00:30:19,700
difference between open BSD and FreeBSD

00:30:17,750 --> 00:30:22,340
is a regarding authentication and

00:30:19,700 --> 00:30:25,700
authorization so on previously for the

00:30:22,340 --> 00:30:27,710
authentication we do you spam actually

00:30:25,700 --> 00:30:29,680
the open puppy implementation developed

00:30:27,710 --> 00:30:32,090
and maintained by a FreeBSD developer

00:30:29,680 --> 00:30:34,580
which is compatible with the spam

00:30:32,090 --> 00:30:37,700
specification it gives us access to a

00:30:34,580 --> 00:30:40,220
lot of various external modules even for

00:30:37,700 --> 00:30:43,520
most of them would prefer rely on our

00:30:40,220 --> 00:30:45,920
own implementation the nice thing in

00:30:43,520 --> 00:30:49,540
that it makes it simple to port common

00:30:45,920 --> 00:30:49,540
software that already support time

00:30:51,429 --> 00:30:59,139
previously the original came from BSD

00:30:55,389 --> 00:31:01,599
ISPs us one of the main difference

00:30:59,139 --> 00:31:04,029
between DSD Alabama is that our modules

00:31:01,599 --> 00:31:08,080
are basically libraries which must be

00:31:04,029 --> 00:31:10,830
loaded into the application EHR modules

00:31:08,080 --> 00:31:13,570
are actually separate applications or

00:31:10,830 --> 00:31:15,879
helpers located under the user the

00:31:13,570 --> 00:31:24,669
backside of its directory and that are

00:31:15,879 --> 00:31:33,249
run as separate process containers that

00:31:24,669 --> 00:31:35,739
means we will be the generation model

00:31:33,249 --> 00:31:37,059
that we use on our SD while still being

00:31:35,739 --> 00:31:40,299
able to provide a new way to

00:31:37,059 --> 00:31:42,020
authenticate adapter most unique in

00:31:40,299 --> 00:31:45,119
Vegas

00:31:42,020 --> 00:31:45,119
[Music]

00:31:52,700 --> 00:31:55,900
[Music]

00:32:12,940 --> 00:32:17,960
well in the case of open security

00:32:15,800 --> 00:32:19,580
advisory maybe it's also related to the

00:32:17,960 --> 00:32:21,440
fact that the office remaining new is

00:32:19,580 --> 00:32:23,600
being less attention for obvious reasons

00:32:21,440 --> 00:32:28,070
you just studied about the pom code

00:32:23,600 --> 00:32:31,280
itself but I it's true that the palm API

00:32:28,070 --> 00:32:33,920
is not simple to use and is also a very

00:32:31,280 --> 00:32:36,290
error-prone but in the open plan

00:32:33,920 --> 00:32:38,870
implementation what it's compatible with

00:32:36,290 --> 00:32:41,960
the official API it also provide plenty

00:32:38,870 --> 00:32:43,880
of extensions who Alpers that simplifies

00:32:41,960 --> 00:32:48,110
hiring support for timing application in

00:32:43,880 --> 00:32:50,930
a lesser open manner anyway for name

00:32:48,110 --> 00:32:53,750
services with use NSS which provide us a

00:32:50,930 --> 00:32:57,710
lot of flexibility as well through its

00:32:53,750 --> 00:32:59,900
modular nature not that our and API are

00:32:57,710 --> 00:33:03,530
is not a hundred percent compatible with

00:32:59,900 --> 00:33:06,230
the new DC one but we also provide NSE

00:33:03,530 --> 00:33:09,320
daemon which can catch name services

00:33:06,230 --> 00:33:10,820
responses for users but is not limited

00:33:09,320 --> 00:33:13,700
to that it cannot super from the

00:33:10,820 --> 00:33:15,530
requests which means the modules are no

00:33:13,700 --> 00:33:22,350
longer load into the deep sea but in a

00:33:15,530 --> 00:33:26,850
dedicated daemon virtual system users

00:33:22,350 --> 00:33:29,549
for traditional ye0 yes does not choose

00:33:26,850 --> 00:33:30,990
an SS so no - switched on top for

00:33:29,549 --> 00:33:57,090
basically the same reason it does not

00:33:30,990 --> 00:34:00,450
use BAM to be honest I still wonder why

00:33:57,090 --> 00:34:03,539
we have imported this YP to YP other

00:34:00,450 --> 00:34:05,220
tool but I mean it doesn't hurt and as

00:34:03,539 --> 00:34:07,110
far as I know I got feedback from others

00:34:05,220 --> 00:34:09,270
one University that was happy to see it

00:34:07,110 --> 00:34:12,450
to see it happen so that they could have

00:34:09,270 --> 00:34:16,829
a simple steps to my rights from knees

00:34:12,450 --> 00:34:19,829
to a lab so why not

00:34:16,829 --> 00:34:22,019
well so I guess that those things

00:34:19,829 --> 00:34:30,329
considered it's pretty obvious that my

00:34:22,019 --> 00:34:31,889
DSD suspense than yours I have to

00:34:30,329 --> 00:34:35,569
disagree another one and for me it's

00:34:31,889 --> 00:34:35,569
clear that my bsd success and yours

00:34:38,629 --> 00:34:44,849
that's it I think there are areas where

00:34:41,849 --> 00:34:53,429
we both sucks equally I mean what is the

00:34:44,849 --> 00:34:55,979
state of your wireless drivers yeah

00:34:53,429 --> 00:35:08,910
well that's a this foundation was done

00:34:55,979 --> 00:35:10,859
on the freebsd laptop we like to make

00:35:08,910 --> 00:35:25,979
fun of each other we are not only

00:35:10,859 --> 00:35:28,380
sharing in my opinion

00:35:25,979 --> 00:35:31,349
OpenBSD has an important role in the

00:35:28,380 --> 00:35:33,089
open social ecosystem you guys are

00:35:31,349 --> 00:35:35,160
talking very important project which

00:35:33,089 --> 00:35:35,640
would probably have never happened

00:35:35,160 --> 00:35:37,799
otherwise

00:35:35,640 --> 00:35:41,190
the most famous one being obviously

00:35:37,799 --> 00:35:43,289
OpenSSH but I really like how open you

00:35:41,190 --> 00:35:45,089
are true possibility for those software

00:35:43,289 --> 00:35:49,049
given the extra I'm gonna work it gives

00:35:45,089 --> 00:35:52,380
you if I think of open SMTP DT max man

00:35:49,049 --> 00:35:54,690
dock snd IO and many others there are

00:35:52,380 --> 00:35:56,849
very good example of that you are also

00:35:54,690 --> 00:35:58,829
teaching up streams about good and

00:35:56,849 --> 00:36:01,579
secure coding practices which is a very

00:35:58,829 --> 00:36:01,579
important thing to do

00:36:05,140 --> 00:36:10,970
and from where I stand

00:36:08,110 --> 00:36:13,520
that FreeBSD is important in the global

00:36:10,970 --> 00:36:15,890
ecosystem it's a real enterprise

00:36:13,520 --> 00:36:18,110
operating system and at saying I think

00:36:15,890 --> 00:36:22,460
it's a slowly filling only spot left by

00:36:18,110 --> 00:36:24,200
a solaris digital technology that's for

00:36:22,460 --> 00:36:26,690
sure and in some area is still on the

00:36:24,200 --> 00:36:31,730
edge of innovation some very large

00:36:26,690 --> 00:36:33,560
entities obviously use it thank you a

00:36:31,730 --> 00:36:37,220
lot of people that we may aware of debug

00:36:33,560 --> 00:36:38,810
bsd community in general so for me it's

00:36:37,220 --> 00:36:40,580
a very good weapon to make people aware

00:36:38,810 --> 00:36:49,610
that fringe operating system are

00:36:40,580 --> 00:36:51,500
certainly not like indian minutes for me

00:36:49,610 --> 00:36:53,390
freebsd the wonderful operating system

00:36:51,500 --> 00:36:57,020
it's very flexible and attractive in

00:36:53,390 --> 00:37:00,200
almost all use cases the project is very

00:36:57,020 --> 00:37:02,180
open and every and everyone from vendors

00:37:00,200 --> 00:37:04,970
to individual can have their place in

00:37:02,180 --> 00:37:07,220
the project well there are a lot of

00:37:04,970 --> 00:37:09,020
vendors involved and that contributes a

00:37:07,220 --> 00:37:11,050
free beer the the project remains

00:37:09,020 --> 00:37:13,430
completely community driven and

00:37:11,050 --> 00:37:14,930
individual can in the easily find their

00:37:13,430 --> 00:37:16,970
part in the project I'm a good example

00:37:14,930 --> 00:37:18,650
of that in my first two years have been

00:37:16,970 --> 00:37:20,690
able to drive into the project and

00:37:18,650 --> 00:37:24,170
change made some very important

00:37:20,690 --> 00:37:25,250
modification including taking the being

00:37:24,170 --> 00:37:30,080
part of the direction of the project

00:37:25,250 --> 00:37:32,060
itself is a small project but I'm very

00:37:30,080 --> 00:37:33,770
proud when I see that the summer we are

00:37:32,060 --> 00:37:35,350
the small amount of a person completely

00:37:33,770 --> 00:37:37,780
huge project

00:37:35,350 --> 00:37:41,950
FreeBSD and sometimes actually do they

00:37:37,780 --> 00:37:43,570
later if into heaven I like to do

00:37:41,950 --> 00:37:46,570
serious things without taking ourselves

00:37:43,570 --> 00:37:48,340
too seriously you guys say our

00:37:46,570 --> 00:37:50,350
performance starts we say that your

00:37:48,340 --> 00:37:54,220
security sucks I suppose there's some

00:37:50,350 --> 00:37:58,030
truth in gopher stereotype oh I see

00:37:54,220 --> 00:38:00,310
OpenBSD as kind of an incubator for new

00:37:58,030 --> 00:38:02,590
technologies that is not afraid to break

00:38:00,310 --> 00:38:05,530
things and sort of destroy to build

00:38:02,590 --> 00:38:08,440
approach I really encourage people to

00:38:05,530 --> 00:38:09,340
try and use it as a power editor or

00:38:08,440 --> 00:38:12,400
younger

00:38:09,340 --> 00:38:15,280
not just install it but really try music

00:38:12,400 --> 00:38:18,070
be surprised how many people actually a

00:38:15,280 --> 00:38:20,100
very small section of OpenBSD even

00:38:18,070 --> 00:38:22,840
within it appears the community itself

00:38:20,100 --> 00:38:25,720
within my experience besides the obvious

00:38:22,840 --> 00:38:27,850
benefits open BSD is known for practical

00:38:25,720 --> 00:38:30,010
security and often it has been one of

00:38:27,850 --> 00:38:33,100
the easiest offenders documented the

00:38:30,010 --> 00:38:35,820
operating system revenues and I see its

00:38:33,100 --> 00:38:37,830
simplicity as an art form

00:38:35,820 --> 00:38:42,140
thank you very much thank you very much

00:38:37,830 --> 00:38:42,140
oh and icing enzyme for monetary her

00:38:50,520 --> 00:38:53,670

YouTube URL: https://www.youtube.com/watch?v=4K7h-U9KeiQ


