Title: Bacula    nobody ever regretted making a backup - Dan Langille
Publication date: 2019-10-15
Playlist: EuroBSDcon 2017, France
Description: 
	Description:

In this talk, you will learn the basics of Bacula, a leading open source backup solution. As a Bacula developer, Dan has some unique insights into the use and deployment of Bacula. An avid user since 2004, he has used Bacula for his own networks and in commercial settings. 

Topic to cover will include:

- overview of Bacula: client, storage, director
- Jobs
- Pools
- FileSets
- running a job
- restoring a job
- copy/migrate jobs from one media to another

Speaker biography:

Dan Langille has been using FreeBSD since 1998 and almost immediately he started documenting his experiences. This online journal eventually became The FreeBSD Diary. Along the way, he founded a couple of conferences and created a few other websites. He is very good at describing the step-by-step procedures to perform a wide variety of tasks, from changing your prompt to creating and maintaining
jails.
Captions: 
	00:00:00,290 --> 00:00:07,770
good afternoon I'm crazy about backups

00:00:05,279 --> 00:00:10,170
for some reason I backup to disk then I

00:00:07,770 --> 00:00:11,940
copy it to tape and then I copy the

00:00:10,170 --> 00:00:14,190
tapes and I put the tape somewhere else

00:00:11,940 --> 00:00:15,980
and like have them in a bank vault and I

00:00:14,190 --> 00:00:18,930
have them in a friend's basement so

00:00:15,980 --> 00:00:23,640
hopefully if there's ever a disaster

00:00:18,930 --> 00:00:26,250
that I can restore so we're not going to

00:00:23,640 --> 00:00:27,779
cover insulation concurrent jobs or lots

00:00:26,250 --> 00:00:30,960
of other things this is basically an

00:00:27,779 --> 00:00:32,730
introduction to how I use Bakula and how

00:00:30,960 --> 00:00:35,790
you might get clever ideas about how you

00:00:32,730 --> 00:00:38,640
can use it too so basically Bakula is a

00:00:35,790 --> 00:00:39,989
set of programs they're independent

00:00:38,640 --> 00:00:43,710
module achievements solve them on

00:00:39,989 --> 00:00:46,620
different devices

00:00:43,710 --> 00:00:49,500
it is client-server so basically you've

00:00:46,620 --> 00:00:51,480
got a server that talks to a client

00:00:49,500 --> 00:00:54,710
which talks to a storage device and it

00:00:51,480 --> 00:00:54,710
just keeps going on from there

00:00:55,579 --> 00:01:00,329
people sometimes get shocked that Bakula

00:00:58,079 --> 00:01:02,670
does not use tur don't be upset that it

00:01:00,329 --> 00:01:06,570
doesn't use tar tar is good but it's not

00:01:02,670 --> 00:01:13,530
good for everything this little right

00:01:06,570 --> 00:01:15,780
this little bit here we go so copy all

00:01:13,530 --> 00:01:18,210
your comp files and your SQL files that

00:01:15,780 --> 00:01:19,799
you dump out somewhere else copy at

00:01:18,210 --> 00:01:22,409
several different places because if you

00:01:19,799 --> 00:01:24,570
lose your catalogue which we'll get to

00:01:22,409 --> 00:01:29,939
later it's horrible and you have to use

00:01:24,570 --> 00:01:35,579
B extract this is an old deck DLT 7000

00:01:29,939 --> 00:01:38,040
tape drive that I use that machine died

00:01:35,579 --> 00:01:39,810
shortly thereafter it's a deal T 8000 I

00:01:38,040 --> 00:01:41,820
found the seven thousands more reliable

00:01:39,810 --> 00:01:47,700
in the eight thousands this stores about

00:01:41,820 --> 00:01:50,310
80 gig compressed I backup to local disk

00:01:47,700 --> 00:01:53,549
everything streams down to the local ZFS

00:01:50,310 --> 00:01:56,850
server then gets copied to tape

00:01:53,549 --> 00:01:58,680
afterwards I used to copy the tape every

00:01:56,850 --> 00:02:02,780
day now I only copied a tape once a

00:01:58,680 --> 00:02:02,780
month mainly because it's summertime

00:02:05,210 --> 00:02:09,929
terminology the director is the thing

00:02:08,220 --> 00:02:12,060
that knows everything it's like your

00:02:09,929 --> 00:02:13,500
global process that does everything that

00:02:12,060 --> 00:02:16,110
nobody else wants

00:02:13,500 --> 00:02:19,800
to do but it does everything SD is your

00:02:16,110 --> 00:02:23,960
storage daemon dear and SD are often

00:02:19,800 --> 00:02:29,160
referred to as a server together those

00:02:23,960 --> 00:02:31,050
this is brand-new sorry so you want your

00:02:29,160 --> 00:02:33,450
dear and your SD always to be in the

00:02:31,050 --> 00:02:40,560
same version never get them out of sync

00:02:33,450 --> 00:02:42,540
your FD can be behind but never ahead so

00:02:40,560 --> 00:02:46,260
here are the steps in running a quick

00:02:42,540 --> 00:02:49,800
back up so you get unbe console it

00:02:46,260 --> 00:02:51,920
contacts the Bakula director and you say

00:02:49,800 --> 00:02:55,920
hey listen i want to run a job it

00:02:51,920 --> 00:02:57,510
contacts Bakula FD and it gets told that

00:02:55,920 --> 00:03:00,000
you're supposed to back up these files

00:02:57,510 --> 00:03:01,410
to the storage daemon it contacts a

00:03:00,000 --> 00:03:03,390
storage game room with the files that

00:03:01,410 --> 00:03:05,489
it's going to back up the storage game

00:03:03,390 --> 00:03:07,680
and puts those files on either the disk

00:03:05,489 --> 00:03:10,890
of the tape and then the storage daemon

00:03:07,680 --> 00:03:13,320
sends tobacco loader a list of things

00:03:10,890 --> 00:03:16,620
that get backed up that gets stored in

00:03:13,320 --> 00:03:18,269
the catalog because you when you go time

00:03:16,620 --> 00:03:20,299
when it's time to restore you use the

00:03:18,269 --> 00:03:22,920
catalog to find out where this stuff is

00:03:20,299 --> 00:03:25,410
this is a typical setup you have one

00:03:22,920 --> 00:03:27,690
director and a bunch of FDS that it

00:03:25,410 --> 00:03:29,940
talks to and the key thing here is a

00:03:27,690 --> 00:03:32,040
director always does the initiation it

00:03:29,940 --> 00:03:33,870
contacts the FD and tells it it's time

00:03:32,040 --> 00:03:36,120
to back up so the schedule isn't

00:03:33,870 --> 00:03:38,820
dictated by the clients is dictated

00:03:36,120 --> 00:03:42,180
centrally there is an option for an FD

00:03:38,820 --> 00:03:46,200
to do itself started back up but I never

00:03:42,180 --> 00:03:47,430
use it this is your usual starting point

00:03:46,200 --> 00:03:49,110
when you're getting started you have a

00:03:47,430 --> 00:03:50,820
directory you have an SD you have

00:03:49,110 --> 00:03:53,160
diskant a p-- and then you have a

00:03:50,820 --> 00:03:55,769
catalog server catalog server is the

00:03:53,160 --> 00:03:57,500
most important part of your backup we'll

00:03:55,769 --> 00:03:59,670
get to that later

00:03:57,500 --> 00:04:01,170
now we're getting a little more advanced

00:03:59,670 --> 00:04:04,019
here we have one directory you have

00:04:01,170 --> 00:04:05,940
multiple Lefty's all contacting it but

00:04:04,019 --> 00:04:07,350
you also have another Bakula director

00:04:05,940 --> 00:04:09,870
that contacts them as well

00:04:07,350 --> 00:04:11,880
these can be identically configured so

00:04:09,870 --> 00:04:13,410
that this FD thinks that that one and

00:04:11,880 --> 00:04:15,989
that one are identical and they can all

00:04:13,410 --> 00:04:17,729
connect in it's just the shared secrets

00:04:15,989 --> 00:04:19,700
that count when you're connecting

00:04:17,729 --> 00:04:22,440
through we'll get into that soon too

00:04:19,700 --> 00:04:25,289
so here's here you're going really crazy

00:04:22,440 --> 00:04:27,000
you've got one catalog director another

00:04:25,289 --> 00:04:27,300
storage name and over here a whole bunch

00:04:27,000 --> 00:04:29,849
of

00:04:27,300 --> 00:04:31,560
two different catalogs this is all very

00:04:29,849 --> 00:04:34,500
feasible you can have multiple databases

00:04:31,560 --> 00:04:36,900
that it writes into you can have one per

00:04:34,500 --> 00:04:40,800
client for example one per pool they'll

00:04:36,900 --> 00:04:43,710
get end up pools later so this is key to

00:04:40,800 --> 00:04:46,229
keep track of it's not based on cron you

00:04:43,710 --> 00:04:48,539
can run a backup manually and many

00:04:46,229 --> 00:04:50,129
configuration options can be set when

00:04:48,539 --> 00:04:52,680
you are running manually but when you

00:04:50,129 --> 00:04:54,810
run automatic it just uses the defaults

00:04:52,680 --> 00:04:57,030
and we'll get into in the defaults

00:04:54,810 --> 00:04:59,909
restores cannot be scheduled but they

00:04:57,030 --> 00:05:04,349
can be automated and by automated I say

00:04:59,909 --> 00:05:07,080
I mean HECO run restore equals blah blah

00:05:04,349 --> 00:05:09,650
blah pipe be console so you cannot have

00:05:07,080 --> 00:05:09,650
made it that way

00:05:09,719 --> 00:05:16,169
hot tip there that's running a job you

00:05:14,190 --> 00:05:18,180
can run that on the client and it pipes

00:05:16,169 --> 00:05:22,860
it to be console and then it backs up

00:05:18,180 --> 00:05:24,690
that client and that yes is just an auto

00:05:22,860 --> 00:05:26,940
prompt saying no I'm not going to prompt

00:05:24,690 --> 00:05:28,620
you so that's just an example so then

00:05:26,940 --> 00:05:30,840
it'll connect to the director it'll do

00:05:28,620 --> 00:05:32,759
that it'll there's a job being around it

00:05:30,840 --> 00:05:35,940
uses that catalog and it's cute that's

00:05:32,759 --> 00:05:43,289
it the jobs run might take a few hours

00:05:35,940 --> 00:05:47,330
but you started up these are these are a

00:05:43,289 --> 00:05:47,330
whole bunch of tools that come with back

00:05:48,889 --> 00:05:54,949
is it sleeping no it's not sleeping

00:05:57,639 --> 00:06:12,370
this is all in here the screen zone here

00:06:01,449 --> 00:06:15,520
okay because this screen keeps flashing

00:06:12,370 --> 00:06:24,909
as if out there it's as if the external

00:06:15,520 --> 00:06:27,449
screen is going away I turn this so you

00:06:24,909 --> 00:06:27,449
can see it

00:06:29,730 --> 00:06:32,510
it is

00:06:43,360 --> 00:06:50,060
so I can keep talking you don't need to

00:06:46,550 --> 00:06:52,130
see all the slides so be console is your

00:06:50,060 --> 00:06:54,650
main interface between your fingers and

00:06:52,130 --> 00:06:57,110
the rest of the system it seems a bit

00:06:54,650 --> 00:06:59,120
primitive to have a program that you run

00:06:57,110 --> 00:07:01,610
in order to access it so in that regard

00:06:59,120 --> 00:07:04,220
is not a true command-line tool but you

00:07:01,610 --> 00:07:06,770
can run the console from the command

00:07:04,220 --> 00:07:09,410
line so you can do it from the command

00:07:06,770 --> 00:07:11,570
line actually be console is really great

00:07:09,410 --> 00:07:13,850
because they actually when they're doing

00:07:11,570 --> 00:07:15,830
regression testing be consoles what all

00:07:13,850 --> 00:07:17,710
the commands are fed through so if

00:07:15,830 --> 00:07:22,820
anything be console is one of the best

00:07:17,710 --> 00:07:24,680
tested tools in the suite so it's not

00:07:22,820 --> 00:07:26,690
important to know the commands there is

00:07:24,680 --> 00:07:28,190
a utility that comes with it called be

00:07:26,690 --> 00:07:30,950
tape if you're going to use a tape drive

00:07:28,190 --> 00:07:32,930
run it through B tape it makes sure that

00:07:30,950 --> 00:07:36,260
all the configuration settings you have

00:07:32,930 --> 00:07:39,640
our appropriate it's almost like the

00:07:36,260 --> 00:07:39,640
external monitor is going away

00:07:46,990 --> 00:07:57,290
alright so sometimes in the status

00:07:55,190 --> 00:07:59,810
you'll see old jobs and stuff like that

00:07:57,290 --> 00:08:01,790
the same thing that temp logged I seen

00:07:59,810 --> 00:08:06,890
so many people waste time trying to get

00:08:01,790 --> 00:08:09,590
rid of these just move on it's important

00:08:06,890 --> 00:08:12,080
to note that it's not all runners route

00:08:09,590 --> 00:08:14,750
the directory runs is bacala Bakula

00:08:12,080 --> 00:08:17,270
storage runs is Bakula Bakula often it's

00:08:14,750 --> 00:08:20,510
in the operator user group so it can

00:08:17,270 --> 00:08:22,820
access the tape drives Bakula FD has to

00:08:20,510 --> 00:08:25,100
run his route wheel in order to read

00:08:22,820 --> 00:08:27,170
everything and also did you do be able

00:08:25,100 --> 00:08:29,510
to restore everything but you can

00:08:27,170 --> 00:08:34,130
configure Bakula FD so that it is

00:08:29,510 --> 00:08:38,060
read-only and it cannot do writes yeah

00:08:34,130 --> 00:08:39,910
there's a operator group this is a bit

00:08:38,060 --> 00:08:42,740
that confuses people all the time

00:08:39,910 --> 00:08:45,530
passwords are shared that's how you

00:08:42,740 --> 00:08:47,660
authenticate one daemon to another so

00:08:45,530 --> 00:08:50,420
you have the same storage secret in two

00:08:47,660 --> 00:08:52,730
different locations you have it in the

00:08:50,420 --> 00:08:54,529
director directors configuration fall

00:08:52,730 --> 00:08:56,959
and you have it in the storage Damon's

00:08:54,529 --> 00:08:58,639
configuration file so that's how they

00:08:56,959 --> 00:09:01,339
how they communicate they are not

00:08:58,639 --> 00:09:03,050
encrypted passwords you just secure the

00:09:01,339 --> 00:09:06,050
file in which these passwords are

00:09:03,050 --> 00:09:11,899
located and people get all uppity about

00:09:06,050 --> 00:09:15,889
that but no no all communication is done

00:09:11,899 --> 00:09:18,350
over an encrypted channel it's a shared

00:09:15,889 --> 00:09:19,820
secret so remember this bit and you'll

00:09:18,350 --> 00:09:22,250
have a much better life when it comes to

00:09:19,820 --> 00:09:23,870
setting it up a lot of the passwords

00:09:22,250 --> 00:09:25,970
look like they're encrypted because

00:09:23,870 --> 00:09:28,459
people use random text but literally you

00:09:25,970 --> 00:09:30,740
can just say this is my password : and

00:09:28,459 --> 00:09:32,660
that's your password you can use that so

00:09:30,740 --> 00:09:34,820
you have a back be console kampf

00:09:32,660 --> 00:09:36,709
you say I want to correct connect this

00:09:34,820 --> 00:09:38,720
director and that's just a name it's not

00:09:36,709 --> 00:09:42,470
an address or anything that's just the

00:09:38,720 --> 00:09:45,260
identifier used by the Bakula direct

00:09:42,470 --> 00:09:47,839
director at that location and that's the

00:09:45,260 --> 00:09:49,970
password they use so that same password

00:09:47,839 --> 00:09:53,120
will occur in the Bakula directors

00:09:49,970 --> 00:09:55,070
configuration there it is there so it

00:09:53,120 --> 00:10:01,399
listens on a different port they're all

00:09:55,070 --> 00:10:03,800
91 of 190 100 to 90 103 and what this is

00:10:01,399 --> 00:10:06,860
this defines who you are but this

00:10:03,800 --> 00:10:09,500
password is for people connecting to you

00:10:06,860 --> 00:10:12,980
not for you connecting somewhere else so

00:10:09,500 --> 00:10:15,620
whenever you have a clause that says is

00:10:12,980 --> 00:10:17,540
self referential that's the password for

00:10:15,620 --> 00:10:20,990
contacting you not for contacting

00:10:17,540 --> 00:10:23,510
someone else so everyone struggles with

00:10:20,990 --> 00:10:25,130
this everyone struggles with that's the

00:10:23,510 --> 00:10:27,260
first time through even I get stuck with

00:10:25,130 --> 00:10:30,740
it but it's a very good FAQ to go with

00:10:27,260 --> 00:10:33,260
it when it says the name and password do

00:10:30,740 --> 00:10:37,430
not match check and make sure the names

00:10:33,260 --> 00:10:39,529
and passwords match it's very so many

00:10:37,430 --> 00:10:42,050
people get stuck on this get right down

00:10:39,529 --> 00:10:44,329
to the TCP level make sure that you're

00:10:42,050 --> 00:10:48,350
contacting the right host do a TCP dump

00:10:44,329 --> 00:10:50,120
check your DNS try accessing replace the

00:10:48,350 --> 00:10:53,389
fully qualified domain name with an IP

00:10:50,120 --> 00:10:57,589
address somewhere something's wrong and

00:10:53,389 --> 00:11:02,209
it's not your name and password well it

00:10:57,589 --> 00:11:04,610
could okay every director and sorry

00:11:02,209 --> 00:11:08,000
every SD and FD needs at least one

00:11:04,610 --> 00:11:10,490
entry like this and that identifies who

00:11:08,000 --> 00:11:12,620
they will accept connections from there

00:11:10,490 --> 00:11:16,610
can be multiple instances of this for

00:11:12,620 --> 00:11:19,610
each Sdn FD so basically I'll talk to

00:11:16,610 --> 00:11:22,490
anyone or I'll talk to everyone that's

00:11:19,610 --> 00:11:25,250
listed in my configuration file a file

00:11:22,490 --> 00:11:26,959
set what do I backup that's a file so

00:11:25,250 --> 00:11:29,240
that's a list of files I'm going to back

00:11:26,959 --> 00:11:33,399
up can be a list of directories it can

00:11:29,240 --> 00:11:36,950
be a list of explicit files it can be

00:11:33,399 --> 00:11:39,050
auto-generated on on at runtime I have a

00:11:36,950 --> 00:11:41,600
script that says backup all these false

00:11:39,050 --> 00:11:43,579
hats and all it does is edifice lists

00:11:41,600 --> 00:11:46,940
and defines the ones that I want to

00:11:43,579 --> 00:11:50,180
backup I do that for jails basically

00:11:46,940 --> 00:11:52,459
each Jail is a separate file system and

00:11:50,180 --> 00:11:54,350
it may change over time so when I add a

00:11:52,459 --> 00:11:58,490
new jail it automatically gets included

00:11:54,350 --> 00:12:03,050
in the backup for the jails oh this part

00:11:58,490 --> 00:12:05,899
is important one file set per job don't

00:12:03,050 --> 00:12:08,329
try and make a job that backs up

00:12:05,899 --> 00:12:13,810
multiple file sets either create

00:12:08,329 --> 00:12:17,529
multiple jobs or create one big file set

00:12:13,810 --> 00:12:20,480
this is what a client resorts looks like

00:12:17,529 --> 00:12:23,120
it's a fully qualified domain name the

00:12:20,480 --> 00:12:26,829
catalog that you're going to use the

00:12:23,120 --> 00:12:29,860
password for this client this is what

00:12:26,829 --> 00:12:32,990
this will also be sorry

00:12:29,860 --> 00:12:35,449
this is specified in the director this

00:12:32,990 --> 00:12:37,000
for this particular client the director

00:12:35,449 --> 00:12:39,769
were contacted with this password

00:12:37,000 --> 00:12:42,290
supplying its own name so this is the

00:12:39,769 --> 00:12:46,390
shared secret which will also occur in

00:12:42,290 --> 00:12:50,779
the Bakula client configuration file

00:12:46,390 --> 00:12:52,880
now when I say client I say FD but the

00:12:50,779 --> 00:12:55,449
client is actually the host it's running

00:12:52,880 --> 00:12:58,699
on if you really want to get technical

00:12:55,449 --> 00:13:01,310
you can think of the Bakula FDS also

00:12:58,699 --> 00:13:03,829
being a server but it's it's it's a

00:13:01,310 --> 00:13:06,079
client running on the client which is a

00:13:03,829 --> 00:13:08,350
server because you're backing up a

00:13:06,079 --> 00:13:08,350
server

00:13:09,279 --> 00:13:16,190
schedules are just so flexible this is

00:13:12,829 --> 00:13:18,110
the one that I use I say that on the

00:13:16,190 --> 00:13:20,630
first Sunday of every month you run a

00:13:18,110 --> 00:13:23,720
every other Sunday is a differential all

00:13:20,630 --> 00:13:27,200
the other days are incremental pretty

00:13:23,720 --> 00:13:31,519
easy I actually go one step further and

00:13:27,200 --> 00:13:33,950
I say it's not shown here but I say all

00:13:31,519 --> 00:13:35,930
my full backups go into the full pool

00:13:33,950 --> 00:13:38,060
all the differential backups go into the

00:13:35,930 --> 00:13:43,940
differential pool you can get really

00:13:38,060 --> 00:13:46,310
really flexible here here's a job that's

00:13:43,940 --> 00:13:49,329
all you have to do to define a job is

00:13:46,310 --> 00:13:51,800
basically the name of the job job Def's

00:13:49,329 --> 00:13:55,370
basically all your jobs often have

00:13:51,800 --> 00:13:57,769
common definitions it's like an include

00:13:55,370 --> 00:14:00,019
file so job deafs is an include file

00:13:57,769 --> 00:14:02,269
think of it that way and there's a file

00:14:00,019 --> 00:14:07,459
set I'm gonna back up you can use the

00:14:02,269 --> 00:14:09,920
same false lot for multiple clients so

00:14:07,459 --> 00:14:13,519
these are the important bits about a job

00:14:09,920 --> 00:14:15,529
a job runs on just one client so on one

00:14:13,519 --> 00:14:18,709
server you're backing up one box you

00:14:15,529 --> 00:14:21,459
have one job the job has only one file

00:14:18,709 --> 00:14:24,620
set you can't specify model file sets

00:14:21,459 --> 00:14:27,350
the job backs up to exactly one storage

00:14:24,620 --> 00:14:29,360
location but then you can use copy or

00:14:27,350 --> 00:14:32,930
migrate to move that job to other

00:14:29,360 --> 00:14:35,779
storage locations there's just one

00:14:32,930 --> 00:14:37,880
schedule for the job but that schedule

00:14:35,779 --> 00:14:39,980
can say that if that job runs at

00:14:37,880 --> 00:14:42,440
different times on different levels on

00:14:39,980 --> 00:14:44,180
different days so schedule is not just

00:14:42,440 --> 00:14:47,420
like a cron job entry it's much more

00:14:44,180 --> 00:14:50,270
flexible you can have multiple jobs per

00:14:47,420 --> 00:14:52,010
client and I do it that way I have

00:14:50,270 --> 00:14:53,779
different ZFS data sets

00:14:52,010 --> 00:14:57,140
I want them backed up at different times

00:14:53,779 --> 00:15:01,970
on different media and for different

00:14:57,140 --> 00:15:03,649
reasons so don't think of don't limit

00:15:01,970 --> 00:15:07,130
yourself to just one job per client

00:15:03,649 --> 00:15:09,110
because one job per thing you want to

00:15:07,130 --> 00:15:10,670
backup and there might be multiple

00:15:09,110 --> 00:15:13,190
things that you want to backup on that

00:15:10,670 --> 00:15:16,300
client this is your job deaths that I

00:15:13,190 --> 00:15:20,029
told you about this is your include

00:15:16,300 --> 00:15:22,670
basically you put all these in a job job

00:15:20,029 --> 00:15:24,170
Steph include type thing I actually put

00:15:22,670 --> 00:15:26,089
my job deficit in a separate file and

00:15:24,170 --> 00:15:29,480
then include that into the Bakula

00:15:26,089 --> 00:15:31,100
director file but this is just shorthand

00:15:29,480 --> 00:15:31,670
so you don't have to specify the same

00:15:31,100 --> 00:15:35,630
thing and every

00:15:31,670 --> 00:15:38,210
job this is where I start saying things

00:15:35,630 --> 00:15:40,280
like okay when I'm backing up from tape

00:15:38,210 --> 00:15:41,750
I want to back up into this pool when

00:15:40,280 --> 00:15:43,910
I'm backing up to disc I'm going to back

00:15:41,750 --> 00:15:46,490
up into this pool you can put different

00:15:43,910 --> 00:15:48,650
priorities on jobs so that all of all of

00:15:46,490 --> 00:15:51,320
the stuff is backing up to SSD for

00:15:48,650 --> 00:15:53,150
example runs last because it's gonna

00:15:51,320 --> 00:15:56,420
take less time you're not worried about

00:15:53,150 --> 00:15:58,220
it so you want to run the the the hard

00:15:56,420 --> 00:16:01,760
drives that you're backing up into

00:15:58,220 --> 00:16:05,480
sooner or whatever priority you want to

00:16:01,760 --> 00:16:08,810
apply this bit about spooling data if

00:16:05,480 --> 00:16:11,120
you're backing up to tape you sometimes

00:16:08,810 --> 00:16:14,630
want to spool the data to a local drive

00:16:11,120 --> 00:16:17,090
and then back it up to tape spooling

00:16:14,630 --> 00:16:19,100
attributes generally you want to spool

00:16:17,090 --> 00:16:21,380
attributes of it at the end of the job

00:16:19,100 --> 00:16:23,960
it does a whole lot of inserting into

00:16:21,380 --> 00:16:27,620
the database catalog that speeds up

00:16:23,960 --> 00:16:29,150
backups generally job level we sort of

00:16:27,620 --> 00:16:32,510
covered full incremental and

00:16:29,150 --> 00:16:34,310
differential before but it's it's

00:16:32,510 --> 00:16:36,650
important to know the difference between

00:16:34,310 --> 00:16:39,620
the incremental and the differential the

00:16:36,650 --> 00:16:43,030
incremental is relative to whatever last

00:16:39,620 --> 00:16:46,700
backup ran successfully and that bit is

00:16:43,030 --> 00:16:50,630
important and that's the bet down there

00:16:46,700 --> 00:16:53,360
that dictates what a successful job is

00:16:50,630 --> 00:16:56,150
so differential is just since the last

00:16:53,360 --> 00:16:59,930
full backup incremental is since the

00:16:56,150 --> 00:17:01,880
last backup whatever so generally in in

00:16:59,930 --> 00:17:04,400
a month the worst case you'd be doing to

00:17:01,880 --> 00:17:05,990
restore at the end would be the full

00:17:04,400 --> 00:17:08,840
from the beginning of the month the

00:17:05,990 --> 00:17:10,790
differential from the last yes for

00:17:08,840 --> 00:17:13,280
Sunday's because you can have five

00:17:10,790 --> 00:17:17,300
Sundays and then all the incrementals

00:17:13,280 --> 00:17:19,430
from later on the week now this will not

00:17:17,300 --> 00:17:21,350
give you an accurate restore because

00:17:19,430 --> 00:17:23,120
sometimes you delete files sometime you

00:17:21,350 --> 00:17:24,440
add files but you'll get them all

00:17:23,120 --> 00:17:26,780
restored even though they've been

00:17:24,440 --> 00:17:28,730
deleted from disk there is a thing

00:17:26,780 --> 00:17:33,830
called an accurate backup we'll get to

00:17:28,730 --> 00:17:37,130
that next when it's backing up it looks

00:17:33,830 --> 00:17:39,980
at see time and M time so that means

00:17:37,130 --> 00:17:41,840
that if you copy a whole tree from one

00:17:39,980 --> 00:17:43,970
location to another it's not going to

00:17:41,840 --> 00:17:45,200
get backed up because the M times C time

00:17:43,970 --> 00:17:48,340
are the same

00:17:45,200 --> 00:17:50,960
that annoys some people doesn't annoy me

00:17:48,340 --> 00:17:56,210
this is where accurate backup comes in

00:17:50,960 --> 00:17:58,639
basically what happens is the the

00:17:56,210 --> 00:18:00,919
director sends the FD a-- list of files

00:17:58,639 --> 00:18:03,200
that are backed up last time and the FD

00:18:00,919 --> 00:18:06,200
compares out to what it finds and then

00:18:03,200 --> 00:18:09,440
it shifts the files over that aren't in

00:18:06,200 --> 00:18:11,539
that list so if you do a move it'll take

00:18:09,440 --> 00:18:15,070
note of that and send it over of course

00:18:11,539 --> 00:18:15,070
it comes at a cost

00:18:15,200 --> 00:18:19,490
virtual backups this is another feature

00:18:17,690 --> 00:18:21,769
that I've never used but I've heard

00:18:19,490 --> 00:18:24,740
really good things about every time you

00:18:21,769 --> 00:18:26,809
run a backup you have a full backup as a

00:18:24,740 --> 00:18:30,409
result and what it does is it jumbles

00:18:26,809 --> 00:18:33,700
things around logically and says ok this

00:18:30,409 --> 00:18:36,380
is now a full backup but in effect

00:18:33,700 --> 00:18:38,120
you're doing incrementals every day and

00:18:36,380 --> 00:18:45,919
is giving you a full at the end of the

00:18:38,120 --> 00:18:48,139
day we talked about priority before we

00:18:45,919 --> 00:18:50,659
talked about the schedule once you've

00:18:48,139 --> 00:18:55,130
got all that set up they all run for me

00:18:50,659 --> 00:18:57,409
it's at 555 UTC every day there's no

00:18:55,130 --> 00:18:59,120
reason for that time it's just

00:18:57,409 --> 00:19:04,130
conveniently in the middle of the night

00:18:59,120 --> 00:19:06,830
for me you can also have a schedule that

00:19:04,130 --> 00:19:10,100
says a job never runs so basically it's

00:19:06,830 --> 00:19:11,450
a schedule whatever never close bracket

00:19:10,100 --> 00:19:13,250
and that's for jobs that you want to

00:19:11,450 --> 00:19:16,820
have around that you only run manually

00:19:13,250 --> 00:19:21,649
and they never get run it run by Bakula

00:19:16,820 --> 00:19:22,940
dear this is a thing that gets people

00:19:21,649 --> 00:19:24,860
all the time if you make a change to

00:19:22,940 --> 00:19:28,000
your file set it's effectively a new

00:19:24,860 --> 00:19:31,669
file set the file set is actually md5

00:19:28,000 --> 00:19:33,740
checksum into the database and it says

00:19:31,669 --> 00:19:35,840
is this the same as the one I had before

00:19:33,740 --> 00:19:38,630
and if not it does a whole new backup

00:19:35,840 --> 00:19:40,760
because it is a different file set but

00:19:38,630 --> 00:19:44,720
you can get around that by saying ignore

00:19:40,760 --> 00:19:47,149
false out changes but then if you make a

00:19:44,720 --> 00:19:53,539
change it's not reflected until the next

00:19:47,149 --> 00:19:56,690
flow back up a volume think of a volume

00:19:53,539 --> 00:19:58,820
as a tape and use that for the first

00:19:56,690 --> 00:20:01,610
little while

00:19:58,820 --> 00:20:03,649
of learning Bakula that a volume is at

00:20:01,610 --> 00:20:06,769
eight and it's a physical thing and here

00:20:03,649 --> 00:20:09,019
it is I've got this tape don't confuse

00:20:06,769 --> 00:20:10,820
it with a filesystem volume because it

00:20:09,019 --> 00:20:12,710
also backs up to disk that's why I say

00:20:10,820 --> 00:20:15,039
forget about backing up to disks just

00:20:12,710 --> 00:20:17,720
think of backing up the tape so what

00:20:15,039 --> 00:20:21,130
it's key to remember that disk and tape

00:20:17,720 --> 00:20:25,720
are sort of treated the same internally

00:20:21,130 --> 00:20:28,190
and a backup can span multiple volumes

00:20:25,720 --> 00:20:31,159
you have a five gig tape you have a

00:20:28,190 --> 00:20:35,330
twenty gig backup you need four maybe

00:20:31,159 --> 00:20:38,450
only three tapes but that that's the

00:20:35,330 --> 00:20:39,860
concept to get in your mind first so

00:20:38,450 --> 00:20:42,529
when you're backing up to disk it

00:20:39,860 --> 00:20:45,080
creates a file it backs up into that

00:20:42,529 --> 00:20:46,850
file that's a volume it's not a it's not

00:20:45,080 --> 00:20:52,659
a file system volume it's a Bakula

00:20:46,850 --> 00:20:55,309
volume a pool is a collection of tapes

00:20:52,659 --> 00:20:57,019
you've got all your full backup tapes on

00:20:55,309 --> 00:20:59,629
this shelf you have all your incremental

00:20:57,019 --> 00:21:04,399
backup tapes on that shelf you go in you

00:20:59,629 --> 00:21:07,480
grab one from the pool it's important to

00:21:04,399 --> 00:21:11,659
know that a pool is a set of

00:21:07,480 --> 00:21:14,059
specifications this backup will be

00:21:11,659 --> 00:21:15,769
retained for three years and every

00:21:14,059 --> 00:21:17,929
volume that is created based on that

00:21:15,769 --> 00:21:20,120
pool shares the same characteristics at

00:21:17,929 --> 00:21:23,000
creation time you can change them

00:21:20,120 --> 00:21:25,340
manually later but that's the bit to

00:21:23,000 --> 00:21:27,620
keep in your mind when you're using

00:21:25,340 --> 00:21:29,870
pools you can have multiple pools I've

00:21:27,620 --> 00:21:32,419
got about ten or fifteen different pools

00:21:29,870 --> 00:21:36,769
that's a ridiculous amount given that

00:21:32,419 --> 00:21:41,539
it's just one person so a volume belongs

00:21:36,769 --> 00:21:44,419
to one pool but I can change pools after

00:21:41,539 --> 00:21:46,250
a volume has expired it can be put back

00:21:44,419 --> 00:21:48,379
into the scratch pool and then be used

00:21:46,250 --> 00:21:52,340
by any other pool when it needs a new

00:21:48,379 --> 00:21:54,649
volume so these are a lot of common pool

00:21:52,340 --> 00:21:56,720
attributes the most important one to

00:21:54,649 --> 00:21:58,879
remember is volume retention we'll get

00:21:56,720 --> 00:22:03,470
to that later and how there's two other

00:21:58,879 --> 00:22:07,039
retention periods as well label format

00:22:03,470 --> 00:22:09,019
isn't so so complex it's basically the

00:22:07,039 --> 00:22:11,269
name you give to the volume it's the

00:22:09,019 --> 00:22:12,620
logical volume name it also happens to

00:22:11,269 --> 00:22:14,870
be the physical name on

00:22:12,620 --> 00:22:18,260
squeen you using disk based backups but

00:22:14,870 --> 00:22:21,950
don't get too complex with with volume

00:22:18,260 --> 00:22:23,480
labels you as an operator don't care

00:22:21,950 --> 00:22:25,220
about the volume label it's just

00:22:23,480 --> 00:22:27,680
something for Bakula to use you never

00:22:25,220 --> 00:22:29,150
need to really know what it is except

00:22:27,680 --> 00:22:34,790
maybe when you're going to retrieve them

00:22:29,150 --> 00:22:37,760
from the safe undisclosed location so

00:22:34,790 --> 00:22:41,300
here's what a what my full file backup

00:22:37,760 --> 00:22:46,760
looks like I keep everything for three

00:22:41,300 --> 00:22:49,400
years in that pool and on disk it's five

00:22:46,760 --> 00:22:52,040
five gig max use whatever size you think

00:22:49,400 --> 00:22:57,470
makes sense it doesn't make sense to

00:22:52,040 --> 00:22:59,780
have a max size that's way way more than

00:22:57,470 --> 00:23:02,600
your usual backup or way way less than

00:22:59,780 --> 00:23:05,300
usual backup so have it a multiple type

00:23:02,600 --> 00:23:08,000
thing if you're doing 100 gig backups

00:23:05,300 --> 00:23:12,110
all the time if you have a 20 gig volume

00:23:08,000 --> 00:23:14,330
file that's not unreasonable the key to

00:23:12,110 --> 00:23:18,440
keep in mind is that when it comes time

00:23:14,330 --> 00:23:20,570
to recycle a volume it doesn't get that

00:23:18,440 --> 00:23:23,870
three year period doesn't start until

00:23:20,570 --> 00:23:25,460
the last time it was written to so you

00:23:23,870 --> 00:23:28,450
can be using it over several months

00:23:25,460 --> 00:23:31,610
three years doesn't start until the last

00:23:28,450 --> 00:23:33,380
right not the first rate so if you're

00:23:31,610 --> 00:23:34,520
older backups are no longer needed it

00:23:33,380 --> 00:23:37,370
doesn't matter they're not going to

00:23:34,520 --> 00:23:40,280
disappear until three years after the

00:23:37,370 --> 00:23:42,170
most recent backup that's why I tend to

00:23:40,280 --> 00:23:46,280
keep my volume size less than my total

00:23:42,170 --> 00:23:49,130
backup size diff pool there's not a lot

00:23:46,280 --> 00:23:51,410
of difference between the two just the

00:23:49,130 --> 00:23:53,390
time period in the names and the same

00:23:51,410 --> 00:23:56,540
with incremental and you can see the

00:23:53,390 --> 00:23:59,929
label format as well so it's all very

00:23:56,540 --> 00:24:01,640
straightforward it will not label a

00:23:59,929 --> 00:24:05,059
volume which is already labeled such as

00:24:01,640 --> 00:24:06,800
a tape okay so this is this is the what

00:24:05,059 --> 00:24:10,870
you have to go through in order to clear

00:24:06,800 --> 00:24:10,870
a label off a tape if you need to

00:24:11,410 --> 00:24:18,080
storage of resources on disk are nothing

00:24:14,809 --> 00:24:20,210
very special it's just it's just here go

00:24:18,080 --> 00:24:23,330
and contact this host through something

00:24:20,210 --> 00:24:26,080
running there back it up there the

00:24:23,330 --> 00:24:29,260
storage resource is very simple it

00:24:26,080 --> 00:24:31,840
again a password and a fully qualified

00:24:29,260 --> 00:24:33,880
domain name to go to and then over on

00:24:31,840 --> 00:24:36,429
the storage daemon which can be anywhere

00:24:33,880 --> 00:24:38,440
it can be running on the same house it

00:24:36,429 --> 00:24:41,340
can be running on a host on a different

00:24:38,440 --> 00:24:44,620
VPN it'll just contact it on the address

00:24:41,340 --> 00:24:47,529
now on this case the address on this

00:24:44,620 --> 00:24:49,299
side and the storage daemon means you

00:24:47,529 --> 00:24:51,190
should only listen on this IP address

00:24:49,299 --> 00:24:56,950
you may have multiple IP addresses on

00:24:51,190 --> 00:24:58,929
this host on the SD you say only this

00:24:56,950 --> 00:25:00,669
director can contact me and they have to

00:24:58,929 --> 00:25:02,440
supply that password otherwise I'm just

00:25:00,669 --> 00:25:04,000
going to ignore them I'm not gonna

00:25:02,440 --> 00:25:07,120
listen to anyone else that doesn't

00:25:04,000 --> 00:25:10,570
supply that special stuff so here we're

00:25:07,120 --> 00:25:13,570
backing up to this directory on disk

00:25:10,570 --> 00:25:15,639
it's file basically this just sets it up

00:25:13,570 --> 00:25:18,460
it has different meanings on a tape

00:25:15,639 --> 00:25:21,970
drive but on a file base backup this is

00:25:18,460 --> 00:25:24,789
sort of what it looks like this is the

00:25:21,970 --> 00:25:27,519
most important thing your catalog is

00:25:24,789 --> 00:25:29,080
everything protect it even more than

00:25:27,519 --> 00:25:34,090
your backups because without your

00:25:29,080 --> 00:25:35,470
catalog you're not screwed but you've

00:25:34,090 --> 00:25:39,159
got a very difficult time to get

00:25:35,470 --> 00:25:40,809
anything out okay because your catalog

00:25:39,159 --> 00:25:44,789
defines what was backed up where it was

00:25:40,809 --> 00:25:44,789
backed up from and where it is now

00:25:45,990 --> 00:25:50,080
there are ways of reproducing the

00:25:48,399 --> 00:25:52,809
catalog based on what's in your volumes

00:25:50,080 --> 00:25:55,269
but it means reading every single one of

00:25:52,809 --> 00:25:57,250
your volumes and reproducing the catalog

00:25:55,269 --> 00:26:03,519
one at a time and it's a tedious task

00:25:57,250 --> 00:26:07,690
and I wish it upon no one so with a

00:26:03,519 --> 00:26:10,389
catalog what can you do with it you can

00:26:07,690 --> 00:26:12,370
restore anything from anywhere to

00:26:10,389 --> 00:26:14,350
anywhere you don't have to restore to

00:26:12,370 --> 00:26:18,159
the same server it was backed up from

00:26:14,350 --> 00:26:21,669
you can restore it to another any client

00:26:18,159 --> 00:26:26,350
anywhere just from the comfort of your

00:26:21,669 --> 00:26:27,880
laptop sitting in the hot tub so we

00:26:26,350 --> 00:26:30,130
talked about retention four before

00:26:27,880 --> 00:26:32,710
retention does not refer to the volume

00:26:30,130 --> 00:26:35,409
itself on disk or on tape it refers to

00:26:32,710 --> 00:26:37,600
the catalog and keep that in mind it's

00:26:35,409 --> 00:26:39,550
how long the information how long the

00:26:37,600 --> 00:26:42,970
metadata is retained

00:26:39,550 --> 00:26:46,300
not necessarily how long the backup is

00:26:42,970 --> 00:26:49,240
retained okay because you may wind up

00:26:46,300 --> 00:26:52,540
not recycling that backup data until

00:26:49,240 --> 00:26:54,340
much later than that because you can

00:26:52,540 --> 00:27:02,380
still have the backup data but the

00:26:54,340 --> 00:27:04,780
metadata about that backup is gone there

00:27:02,380 --> 00:27:08,320
are three main types of retention

00:27:04,780 --> 00:27:11,650
specifications file job and volume the

00:27:08,320 --> 00:27:14,910
file metadata allows you to specify I

00:27:11,650 --> 00:27:18,340
want that file from that date restored

00:27:14,910 --> 00:27:20,800
the job metadata allows you to say I

00:27:18,340 --> 00:27:23,500
want that job restored from that from

00:27:20,800 --> 00:27:30,520
that date and the volume tells you

00:27:23,500 --> 00:27:33,160
what's on that volume so we've covered

00:27:30,520 --> 00:27:35,260
this already a little more attention so

00:27:33,160 --> 00:27:37,210
catalogs shrink and grow if all you're

00:27:35,260 --> 00:27:38,980
ever doing is backing up backing up

00:27:37,210 --> 00:27:41,410
backing up the catalog keeps getting

00:27:38,980 --> 00:27:43,570
bigger but you may have older jobs that

00:27:41,410 --> 00:27:47,680
are no longer on there and what you do

00:27:43,570 --> 00:27:49,270
is you go through a pruning process you

00:27:47,680 --> 00:27:49,930
can do that manually or you can do it

00:27:49,270 --> 00:27:52,840
automatically

00:27:49,930 --> 00:27:54,400
I do the pruning automatically and what

00:27:52,840 --> 00:27:56,920
it does this is is there anything in

00:27:54,400 --> 00:28:00,010
this catalog that is past its retention

00:27:56,920 --> 00:28:04,000
date yes there is okay get rid of it and

00:28:00,010 --> 00:28:06,370
it does it all automatically but keep in

00:28:04,000 --> 00:28:10,420
mind it's only getting rid of stuff in

00:28:06,370 --> 00:28:12,850
the catalog you can also perched up from

00:28:10,420 --> 00:28:14,560
the catalog irrespective of retention

00:28:12,850 --> 00:28:16,330
you're just saying delete it I don't

00:28:14,560 --> 00:28:17,620
care how long it was supposed to be in

00:28:16,330 --> 00:28:23,400
there just delete it

00:28:17,620 --> 00:28:23,400
whereas pruning follows retention rules

00:28:24,360 --> 00:28:29,560
you can do pruning manually or

00:28:26,770 --> 00:28:33,360
automatically I do it automatically yeah

00:28:29,560 --> 00:28:35,950
we talked briefly about a lost catalog

00:28:33,360 --> 00:28:41,260
don't do that

00:28:35,950 --> 00:28:43,210
I if you lose your catalog you didn't

00:28:41,260 --> 00:28:46,720
have a backup really have your catalog

00:28:43,210 --> 00:28:48,250
you need a backup of your catalog the

00:28:46,720 --> 00:28:51,160
extract you really don't want to do that

00:28:48,250 --> 00:28:53,260
but it's horrible it's absolutely

00:28:51,160 --> 00:28:55,780
horrible so what I do is every day

00:28:53,260 --> 00:28:59,860
a-after my backup jobs my last job that

00:28:55,780 --> 00:29:02,410
runs dumpster the catalog to disk then

00:28:59,860 --> 00:29:04,600
backs up that catalog in the Bakula and

00:29:02,410 --> 00:29:08,950
then in our sync job comes along every

00:29:04,600 --> 00:29:10,840
day and our sinks that 30 gigabyte file

00:29:08,950 --> 00:29:12,730
out two or three other locations along

00:29:10,840 --> 00:29:16,200
with all the configuration files as well

00:29:12,730 --> 00:29:18,910
so do that every day because one day

00:29:16,200 --> 00:29:21,190
your backup server is going to disappear

00:29:18,910 --> 00:29:22,810
and you're not going to well your

00:29:21,190 --> 00:29:23,860
catalog server is going to disappear and

00:29:22,810 --> 00:29:25,210
you're not going to you're going to have

00:29:23,860 --> 00:29:28,300
all your backups but you're not going to

00:29:25,210 --> 00:29:31,140
be able to do anything with them so yeah

00:29:28,300 --> 00:29:34,180
catalog is your best tool and seriously

00:29:31,140 --> 00:29:40,270
I'm trying to emphasize this so you take

00:29:34,180 --> 00:29:42,130
care with your catalog and the biggest

00:29:40,270 --> 00:29:44,620
demand I've seen for help is not the

00:29:42,130 --> 00:29:46,630
passwords because that's easy just go

00:29:44,620 --> 00:29:50,590
and read this but when they've lost

00:29:46,630 --> 00:29:53,680
their catalog recycling we we mentioned

00:29:50,590 --> 00:29:55,420
that about recycling you have a tape and

00:29:53,680 --> 00:29:57,130
you don't want to keep it forever after

00:29:55,420 --> 00:30:00,610
a while you want to rewrite what is on

00:29:57,130 --> 00:30:03,940
the tape recycling dictates when a tape

00:30:00,610 --> 00:30:05,830
can be reused apply that same logic to

00:30:03,940 --> 00:30:08,770
the volumes on the disk and that's what

00:30:05,830 --> 00:30:11,110
recycling is but this is the important

00:30:08,770 --> 00:30:14,620
bit Bakula will keep filling up your

00:30:11,110 --> 00:30:16,720
drive regardless of what you think it

00:30:14,620 --> 00:30:19,870
should be doing it it has no

00:30:16,720 --> 00:30:21,670
comprehension of how full your file

00:30:19,870 --> 00:30:23,650
system is it'll just keep creating a new

00:30:21,670 --> 00:30:28,120
volume and writing there there are

00:30:23,650 --> 00:30:30,370
directives that you can use you can put

00:30:28,120 --> 00:30:32,410
pools you can put restrictions on pools

00:30:30,370 --> 00:30:34,900
you can say the maximum number of volume

00:30:32,410 --> 00:30:36,310
the max size of this volume you do the

00:30:34,900 --> 00:30:38,920
math and that's how much disk space

00:30:36,310 --> 00:30:41,380
it'll take up but still monitor your

00:30:38,920 --> 00:30:44,620
disk space because one day your jobs are

00:30:41,380 --> 00:30:47,470
going to fail because they didn't they

00:30:44,620 --> 00:30:49,570
ran out of space there's the three types

00:30:47,470 --> 00:30:53,670
of retention we talked about there again

00:30:49,570 --> 00:30:56,050
it refers to the catalog not your backup

00:30:53,670 --> 00:30:59,950
this is the way I handle handle

00:30:56,050 --> 00:31:02,290
retention I put job file and volume

00:30:59,950 --> 00:31:03,850
retention all basically at three years

00:31:02,290 --> 00:31:06,280
because that's the maximum time in

00:31:03,850 --> 00:31:06,820
keeping any backup but then what I do is

00:31:06,280 --> 00:31:11,649
as

00:31:06,820 --> 00:31:15,610
copy a backup to a different pool that

00:31:11,649 --> 00:31:18,490
pool retention overrides it so any as

00:31:15,610 --> 00:31:20,620
soon as one retention period is gone the

00:31:18,490 --> 00:31:26,259
data can be removed from like from the

00:31:20,620 --> 00:31:28,299
catalog we covered this already its

00:31:26,259 --> 00:31:34,240
passwords or plain text so just shared

00:31:28,299 --> 00:31:38,009
shared secrets it can use for the

00:31:34,240 --> 00:31:42,250
catalog it can store in sequel Lite

00:31:38,009 --> 00:31:46,629
MySQL and Postgres for some odd reason I

00:31:42,250 --> 00:31:51,100
recommend only Postgres don't use SQLite

00:31:46,629 --> 00:31:53,919
it's not big enough and MySQL if if it

00:31:51,100 --> 00:31:56,139
fails I'm sorry for your loss

00:31:53,919 --> 00:32:01,929
disk versus tape yes some people just

00:31:56,139 --> 00:32:04,299
you know tape is really good I can

00:32:01,929 --> 00:32:06,970
easily transport a tape carry it with me

00:32:04,299 --> 00:32:09,549
to Europe no one thinks anything of it I

00:32:06,970 --> 00:32:11,200
can leave it at home whatever it's

00:32:09,549 --> 00:32:13,450
easier than transporting a disk in my

00:32:11,200 --> 00:32:16,000
opinion it's a little more stable

00:32:13,450 --> 00:32:21,070
usually but some people would like to

00:32:16,000 --> 00:32:22,809
argue with that but later there's not a

00:32:21,070 --> 00:32:24,700
lot of difference use tape use disk

00:32:22,809 --> 00:32:27,519
whatever I just like backing up to tape

00:32:24,700 --> 00:32:29,169
afterwards the disk space issue here is

00:32:27,519 --> 00:32:31,990
mentioned that we covered that already

00:32:29,169 --> 00:32:35,500
running a job it's pretty

00:32:31,990 --> 00:32:39,220
straightforward this is a type of output

00:32:35,500 --> 00:32:41,970
that you're likely to get it then gets

00:32:39,220 --> 00:32:45,070
queued and then runs in the background

00:32:41,970 --> 00:32:46,600
you need one job per thing that you want

00:32:45,070 --> 00:32:49,360
to backup but when we're storing you

00:32:46,600 --> 00:32:51,250
only need one restore job don't bother

00:32:49,360 --> 00:32:52,389
going and creating restore job for each

00:32:51,250 --> 00:32:54,460
client because all of these

00:32:52,389 --> 00:32:58,659
configuration items in your restored job

00:32:54,460 --> 00:33:00,850
can be overridden at runtime and

00:32:58,659 --> 00:33:02,980
remember restores are only done manually

00:33:00,850 --> 00:33:04,779
so you're going to be doing it manually

00:33:02,980 --> 00:33:08,230
and they made just worry about that

00:33:04,779 --> 00:33:10,840
later so when you go to restore job you

00:33:08,230 --> 00:33:14,259
get like 13 different 12 a dozen

00:33:10,840 --> 00:33:16,240
different choices you get here the ones

00:33:14,259 --> 00:33:20,110
that you probably use the most is in our

00:33:16,240 --> 00:33:20,830
list of files restore or select a backup

00:33:20,110 --> 00:33:23,890
for a class

00:33:20,830 --> 00:33:25,570
before a specified time sometimes it's

00:33:23,890 --> 00:33:28,800
number five but you just pick them when

00:33:25,570 --> 00:33:28,800
you need and go from there

00:33:31,330 --> 00:33:35,380
we're not going to do a demo these

00:33:33,550 --> 00:33:39,300
slides were originally for a three-hour

00:33:35,380 --> 00:33:39,300
lecture three hour tutorial

00:33:40,080 --> 00:33:45,490
tape drivers you don't need anything

00:33:42,700 --> 00:33:47,500
special tissues is a scuzzy file well

00:33:45,490 --> 00:33:50,800
generally it's a scuzzy layer you don't

00:33:47,500 --> 00:33:53,830
need anything special there is an empty

00:33:50,800 --> 00:33:55,810
exchanger that deals with MTX directly

00:33:53,830 --> 00:34:00,130
you can put any special thing in there

00:33:55,810 --> 00:34:03,490
you need yeah run your beat tape tests

00:34:00,130 --> 00:34:04,990
especially run a backup that spends two

00:34:03,490 --> 00:34:06,550
tapes if you're backing up two tapes

00:34:04,990 --> 00:34:11,020
because sometimes the tape driver

00:34:06,550 --> 00:34:14,410
doesn't really like spanning tapes read

00:34:11,020 --> 00:34:16,870
these two articles if you please that's

00:34:14,410 --> 00:34:18,610
where I documented all the fun I had

00:34:16,870 --> 00:34:21,160
when we first got it going because there

00:34:18,610 --> 00:34:25,690
is an error in the scuzzy driver that we

00:34:21,160 --> 00:34:29,250
get fixed use pseudo to test the Bakula

00:34:25,690 --> 00:34:31,540
commands like in sorry sue do sue

00:34:29,250 --> 00:34:33,610
imitate what Bakula is actually going to

00:34:31,540 --> 00:34:35,110
do don't run it by hand the biggest

00:34:33,610 --> 00:34:37,030
problem people run into and they're

00:34:35,110 --> 00:34:40,240
doing tape backups is they haven't

00:34:37,030 --> 00:34:42,070
tested the process as the Bakula user

00:34:40,240 --> 00:34:43,990
they said but it ran fine when I ran it

00:34:42,070 --> 00:34:45,730
from the command line you ran it as

00:34:43,990 --> 00:34:50,200
route which is not Bakula it's a

00:34:45,730 --> 00:34:52,660
different user we talked about a faucet

00:34:50,200 --> 00:34:54,669
change you can have multiple file

00:34:52,660 --> 00:34:59,950
systems but you may not want to backup

00:34:54,669 --> 00:35:02,140
your NFS mount when it's recycled it you

00:34:59,950 --> 00:35:04,290
can tell it to truncate before running

00:35:02,140 --> 00:35:06,490
and this is something obscure about

00:35:04,290 --> 00:35:09,400
dragonfly that somebody mentioned to me

00:35:06,490 --> 00:35:11,830
one day schooling we talked about

00:35:09,400 --> 00:35:15,780
spooling before

00:35:11,830 --> 00:35:19,330
don't worry sometimes not I got thought

00:35:15,780 --> 00:35:21,120
backing up gels in fact anytime you can

00:35:19,330 --> 00:35:23,320
snapshot what you're going to backup

00:35:21,120 --> 00:35:24,790
otherwise you can have a file that was

00:35:23,320 --> 00:35:25,990
written at the beginning of the backup

00:35:24,790 --> 00:35:29,080
and it gets written at the end of the

00:35:25,990 --> 00:35:30,850
backup and it's not consistent I put a

00:35:29,080 --> 00:35:34,720
script on github to do this sort of

00:35:30,850 --> 00:35:38,410
thing ignore you know

00:35:34,720 --> 00:35:40,450
don't get very fancy with volume labels

00:35:38,410 --> 00:35:42,790
just do something like that because you

00:35:40,450 --> 00:35:46,619
never have to reference this only Bakula

00:35:42,790 --> 00:35:46,619
has a reference this make it do the work

00:35:47,190 --> 00:36:01,740
questions there was a lot of slides in a

00:35:50,290 --> 00:36:01,740
very short period of time we have a live

00:36:05,520 --> 00:36:11,040
you you are using it to back up files

00:36:09,040 --> 00:36:14,410
which are stored in this and ZFS I

00:36:11,040 --> 00:36:17,800
suppose should your system crashes how

00:36:14,410 --> 00:36:23,560
do you where I got a tape yeah that's

00:36:17,800 --> 00:36:25,480
for the files but I mean the one of my

00:36:23,560 --> 00:36:29,190
servers that I backed up as crash how do

00:36:25,480 --> 00:36:31,750
I restore it hasn't happened yet

00:36:29,190 --> 00:36:35,290
but what I would do is I would reinstall

00:36:31,750 --> 00:36:36,790
the OS and then restore all the data

00:36:35,290 --> 00:36:38,800
because I only backup data I don't

00:36:36,790 --> 00:36:41,910
backup applications or anything like

00:36:38,800 --> 00:36:41,910
that I just backup the data

00:36:42,750 --> 00:36:48,250
no I don't back that up so basically

00:36:46,030 --> 00:36:53,800
this is a file level backup it's not a

00:36:48,250 --> 00:36:57,130
file system level backup what do you use

00:36:53,800 --> 00:36:59,260
to monitor voeckler to see that backups

00:36:57,130 --> 00:37:07,119
are running in storage and stuff like

00:36:59,260 --> 00:37:09,430
that I have a Nagios job Anna gaius

00:37:07,119 --> 00:37:12,640
check that looks to see how old the

00:37:09,430 --> 00:37:16,869
catalog backup is and since the catalog

00:37:12,640 --> 00:37:19,359
backup runs last it would be held up by

00:37:16,869 --> 00:37:20,710
any other job that couldn't run so I

00:37:19,359 --> 00:37:22,330
just checked to make sure that that's

00:37:20,710 --> 00:37:25,330
not more than 36 hours old

00:37:22,330 --> 00:37:29,170
and that happens a lot on Sundays it

00:37:25,330 --> 00:37:31,119
passes on layer do you have any

00:37:29,170 --> 00:37:32,800
experiences with encrypted backups

00:37:31,119 --> 00:37:35,320
because I think the cooler is able to

00:37:32,800 --> 00:37:37,420
deal with them I thought a lot about

00:37:35,320 --> 00:37:40,089
encrypted backups just like I thought

00:37:37,420 --> 00:37:42,490
about encrypted file systems but I

00:37:40,089 --> 00:37:44,520
figured that losing my encryption key

00:37:42,490 --> 00:37:48,130
was more dangerous than losing my data

00:37:44,520 --> 00:37:49,750
so I'm I meant the

00:37:48,130 --> 00:37:52,210
someone else getting access to my data

00:37:49,750 --> 00:37:54,850
that's what I meant by losing my data I

00:37:52,210 --> 00:37:56,710
I figure my threat model is not such

00:37:54,850 --> 00:37:59,710
that someone's going to steal my backups

00:37:56,710 --> 00:38:03,040
and when I send them off site they're

00:37:59,710 --> 00:38:04,570
not in the care of a third party but if

00:38:03,040 --> 00:38:08,470
I was doing that I would look at a

00:38:04,570 --> 00:38:10,690
encryption and you can figure the file

00:38:08,470 --> 00:38:12,520
daemon to do the encryption so it's

00:38:10,690 --> 00:38:16,630
encrypted when it leaves the file daemon

00:38:12,520 --> 00:38:20,410
and you can set it up so it cannot it

00:38:16,630 --> 00:38:23,620
only has that public key so you saw the

00:38:20,410 --> 00:38:25,570
private key off off off the server and

00:38:23,620 --> 00:38:28,030
only put it in when you need to do the

00:38:25,570 --> 00:38:30,460
restore I think the file daemon can deal

00:38:28,030 --> 00:38:32,140
with multiple public keys but I've not

00:38:30,460 --> 00:38:34,210
heard heard about anyone during that

00:38:32,140 --> 00:38:38,110
I've had seen discussions but I've not

00:38:34,210 --> 00:38:40,120
done it and the foul daemon can compress

00:38:38,110 --> 00:38:42,880
too before it sends it over the wire I

00:38:40,120 --> 00:38:45,400
think storage Damons can also compress

00:38:42,880 --> 00:38:51,310
but I rely on that a fast compression to

00:38:45,400 --> 00:38:54,040
do that next backups are really boring

00:38:51,310 --> 00:38:57,900
I'm surprised as so many people here I'm

00:38:54,040 --> 00:38:57,900
very impressed though they all came in

00:38:58,590 --> 00:39:03,340
can you you know most of us can name

00:39:01,510 --> 00:39:06,310
software developers that write this or

00:39:03,340 --> 00:39:10,960
that you can most of you know the people

00:39:06,310 --> 00:39:18,310
that wrote Python or Perl but nobody

00:39:10,960 --> 00:39:21,280
knows who wrote Bakula right nobody C no

00:39:18,310 --> 00:39:23,200
I wrote a small part current Seibold

00:39:21,280 --> 00:39:26,620
wrote most of it and he took over from

00:39:23,200 --> 00:39:31,570
someone before that so you don't get

00:39:26,620 --> 00:39:34,780
famous writing backup software unless it

00:39:31,570 --> 00:39:37,840
doesn't work here I'm tempted to do all

00:39:34,780 --> 00:39:39,160
my backups with ZFS replication which

00:39:37,840 --> 00:39:40,990
isn't supported at the moment in the

00:39:39,160 --> 00:39:42,580
angular is there any thoughts of adding

00:39:40,990 --> 00:39:44,140
it I think the only problem would be

00:39:42,580 --> 00:39:47,440
that the catalogue wouldn't know what

00:39:44,140 --> 00:39:50,920
files were where but if you if you

00:39:47,440 --> 00:39:52,570
analyzed the snapshot that you did back

00:39:50,920 --> 00:39:54,910
up with zero first replication you could

00:39:52,570 --> 00:39:56,680
add that to the catalog for the list of

00:39:54,910 --> 00:39:59,110
files so it has there been any progress

00:39:56,680 --> 00:40:01,000
in adding that tubercular no none at all

00:39:59,110 --> 00:40:05,140
because

00:40:01,000 --> 00:40:07,480
Bakula is a file-based backup solution

00:40:05,140 --> 00:40:09,670
not a filesystem base but what I would

00:40:07,480 --> 00:40:14,560
do if you wanted to do that is I would

00:40:09,670 --> 00:40:16,180
back up your replicated data because

00:40:14,560 --> 00:40:19,060
that's read-only and I would back that

00:40:16,180 --> 00:40:21,280
up in tubercular so that then if your

00:40:19,060 --> 00:40:23,200
replication failed or something you

00:40:21,280 --> 00:40:25,050
still have a copy in Bakula which

00:40:23,200 --> 00:40:28,980
happens to be on another is that a Fuss

00:40:25,050 --> 00:40:31,450
filesystem but your beauty there is that

00:40:28,980 --> 00:40:34,270
when you go to restore you can say I

00:40:31,450 --> 00:40:37,750
want a file from this date or I want all

00:40:34,270 --> 00:40:40,030
these files I just what really appealed

00:40:37,750 --> 00:40:42,369
to me when I was first looking at Bakula

00:40:40,030 --> 00:40:45,730
was the fact that it had a catalog and

00:40:42,369 --> 00:40:48,670
that Amanda at the time didn't and I was

00:40:45,730 --> 00:40:50,320
this close to deploying Amanda I had it

00:40:48,670 --> 00:40:52,420
all installed and stuff and someone said

00:40:50,320 --> 00:40:55,000
look here and the first thing I did was

00:40:52,420 --> 00:41:02,220
was give them a postcard because I

00:40:55,000 --> 00:41:02,220
didn't like MySQL as much other

00:41:09,750 --> 00:41:16,750
questions I experienced it so it's

00:41:12,910 --> 00:41:19,690
possible the fact is that you don't use

00:41:16,750 --> 00:41:21,190
piqué piqué i because you just have

00:41:19,690 --> 00:41:23,109
public keys and favorite keys on the

00:41:21,190 --> 00:41:25,180
authority certification authority that

00:41:23,109 --> 00:41:28,359
science but the configuration is named

00:41:25,180 --> 00:41:31,839
picker I and the TLS configuration is

00:41:28,359 --> 00:41:34,900
configured to use a PKI for

00:41:31,839 --> 00:41:38,830
authenticating everybody but it's quite

00:41:34,900 --> 00:41:40,810
messy and well I guess that if somewhere

00:41:38,830 --> 00:41:43,869
some people here had never used the

00:41:40,810 --> 00:41:44,550
Bakula the slide has maybe little bit

00:41:43,869 --> 00:41:49,300
confusing

00:41:44,550 --> 00:41:51,160
Atrocitus bit big piece of software size

00:41:49,300 --> 00:41:53,890
of fork project

00:41:51,160 --> 00:42:00,940
Boreas we won't talk about did you had

00:41:53,890 --> 00:42:05,349
experience with this when the fork

00:42:00,940 --> 00:42:08,530
happened it wasn't like it wasn't a good

00:42:05,349 --> 00:42:10,180
situation one of the things some of the

00:42:08,530 --> 00:42:12,550
things they did really annoyed the

00:42:10,180 --> 00:42:14,270
people that did the work on Bakula they

00:42:12,550 --> 00:42:17,630
did you know

00:42:14,270 --> 00:42:19,580
nice things like removing authors names

00:42:17,630 --> 00:42:21,920
from files and changing the copyright

00:42:19,580 --> 00:42:23,900
headers and stuff like that and so that

00:42:21,920 --> 00:42:28,910
created a lot of bad animosity between

00:42:23,900 --> 00:42:30,260
the groups and the I don't think there's

00:42:28,910 --> 00:42:33,770
a lot of difference between the two

00:42:30,260 --> 00:42:41,170
projects but I prefer Bakula because

00:42:33,770 --> 00:42:41,170
that's where I started and that blood

00:42:41,620 --> 00:42:46,820
but yeah basically they're about the

00:42:45,500 --> 00:42:51,140
same they have some different features

00:42:46,820 --> 00:42:54,430
but I'm beginning to think that a lot of

00:42:51,140 --> 00:43:04,790
features are floating between the two

00:42:54,430 --> 00:43:06,830
any other question databases and such

00:43:04,790 --> 00:43:11,960
like who can you solve pre exec hooks

00:43:06,830 --> 00:43:14,780
for doing a SQL dump or something there

00:43:11,960 --> 00:43:16,580
is a feature called run before or run

00:43:14,780 --> 00:43:19,880
after and it can run on the client or

00:43:16,580 --> 00:43:23,420
the server the server being bacala der

00:43:19,880 --> 00:43:25,100
and the client being the Bakula FD and

00:43:23,420 --> 00:43:27,320
so you can do whatever you want and

00:43:25,100 --> 00:43:29,540
that's literally what I do is in the run

00:43:27,320 --> 00:43:32,540
before job I do a PG dump to disk and

00:43:29,540 --> 00:43:35,480
then the examples that you see in the

00:43:32,540 --> 00:43:36,980
run after job it deletes the file I

00:43:35,480 --> 00:43:40,880
don't delete the file I leave it there

00:43:36,980 --> 00:43:43,940
because it's another copy but yeah that

00:43:40,880 --> 00:43:46,670
that's my preference is PG dump just

00:43:43,940 --> 00:43:49,340
because I like txt files for backing up

00:43:46,670 --> 00:43:50,960
databases I don't trust backing up the

00:43:49,340 --> 00:43:53,780
file system level although many people

00:43:50,960 --> 00:44:01,840
claim that that's just fine if you do it

00:43:53,780 --> 00:44:01,840
right I don't like any more questions

00:44:02,230 --> 00:44:06,190
thank you you're all very brave

00:44:06,390 --> 00:44:08,780

YouTube URL: https://www.youtube.com/watch?v=NHYF-0e2adU


