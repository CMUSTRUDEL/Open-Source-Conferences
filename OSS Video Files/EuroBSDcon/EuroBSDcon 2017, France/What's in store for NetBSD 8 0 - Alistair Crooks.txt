Title: What's in store for NetBSD 8 0 - Alistair Crooks
Publication date: 2019-10-16
Playlist: EuroBSDcon 2017, France
Description: 
	What's in store for NetBSD 8 0 - Alistair Crooks
Captions: 
	00:00:01,800 --> 00:00:06,839
thank you very much it's great to see so

00:00:03,899 --> 00:00:12,059
many old faces here just after that

00:00:06,839 --> 00:00:13,799
intro there and any new faces if anybody

00:00:12,059 --> 00:00:15,509
doesn't know me my name's Theo de Raadt

00:00:13,799 --> 00:00:18,359
and I'm selling you have to tell you

00:00:15,509 --> 00:00:19,619
that here to tell you that pledge was

00:00:18,359 --> 00:00:25,099
all a big joke

00:00:19,619 --> 00:00:26,699
okay anybody been to my talks before yes

00:00:25,099 --> 00:00:31,199
good good good good

00:00:26,699 --> 00:00:33,719
well this is the first one there are

00:00:31,199 --> 00:00:36,270
only two this time around but they're

00:00:33,719 --> 00:00:49,219
that they're not very easy so anybody

00:00:36,270 --> 00:00:49,219
get any ideas first first one sorry

00:00:50,340 --> 00:00:57,300
close but he's um imagine that's that

00:00:55,379 --> 00:01:00,649
I'm him and I'm calling you all a bunch

00:00:57,300 --> 00:01:05,570
of losers all right

00:01:00,649 --> 00:01:07,340
you're a bunch of losers I'd be

00:01:05,570 --> 00:01:11,729
disrespecting you

00:01:07,340 --> 00:01:17,100
right and in street talk I'd be dissing

00:01:11,729 --> 00:01:24,380
you with this what's the second one

00:01:17,100 --> 00:01:28,710
there spell well done and last one

00:01:24,380 --> 00:01:29,220
baseball swinging are miss thank you

00:01:28,710 --> 00:01:32,420
Scott

00:01:29,220 --> 00:01:35,729
so this spell myths

00:01:32,420 --> 00:01:40,079
we're dispelling the myths about net BSD

00:01:35,729 --> 00:01:41,909
eight so this talk is gonna have a

00:01:40,079 --> 00:01:43,710
number of statements up here with a

00:01:41,909 --> 00:01:45,509
little bit of clipart that's got a

00:01:43,710 --> 00:01:49,159
question mark on it and you have to

00:01:45,509 --> 00:01:52,200
guess whether it's true or false

00:01:49,159 --> 00:01:57,719
okay there's a bit bit more interactive

00:01:52,200 --> 00:02:02,060
than the usual talks so a long time to

00:01:57,719 --> 00:02:02,060
release net BSD eight true or false

00:02:03,110 --> 00:02:08,470
false

00:02:05,080 --> 00:02:10,090
true Oh got some truths excellent right

00:02:08,470 --> 00:02:15,370
you need to keep chatting them out folks

00:02:10,090 --> 00:02:17,620
right well I've just realized that

00:02:15,370 --> 00:02:22,540
presenter notes aren't coming up here so

00:02:17,620 --> 00:02:26,740
we're gonna have to go and see 7.0 at

00:02:22,540 --> 00:02:28,120
least in September 2015 and so we're

00:02:26,740 --> 00:02:30,550
talking about roughly two years between

00:02:28,120 --> 00:02:32,950
seven and eight that's longer than we

00:02:30,550 --> 00:02:35,140
like to have ideal it would be a year

00:02:32,950 --> 00:02:36,940
but it looks like we're going to ramp up

00:02:35,140 --> 00:02:38,710
that and and aim for a year going

00:02:36,940 --> 00:02:40,990
forward as well so we expect nine to be

00:02:38,710 --> 00:02:43,260
around about this time next year that's

00:02:40,990 --> 00:02:48,810
the plan anyway

00:02:43,260 --> 00:02:51,550
we've we started the process in June 6

00:02:48,810 --> 00:02:55,090
it's still there in the branch it's in

00:02:51,550 --> 00:02:56,410
beta at the moment and we expect it to

00:02:55,090 --> 00:03:00,160
be released

00:02:56,410 --> 00:03:03,520
real soon then still a few bugs to go

00:03:00,160 --> 00:03:06,880
and they're posted there for for people

00:03:03,520 --> 00:03:13,270
who want to have a look at them yeah

00:03:06,880 --> 00:03:19,560
please go okay next one no no packages

00:03:13,270 --> 00:03:25,150
available true or false false thank you

00:03:19,560 --> 00:03:32,459
right and I'm going to get you with this

00:03:25,150 --> 00:03:32,459
one I feel sure any guesses

00:03:34,680 --> 00:03:44,459
good guess but no and there's nothing

00:03:39,970 --> 00:03:53,880
Trump related as well yeah

00:03:44,459 --> 00:03:58,750
any guesses maybe maybe

00:03:53,880 --> 00:04:00,670
what's obama doing laughing yeah so the

00:03:58,750 --> 00:04:07,870
first part is ha

00:04:00,670 --> 00:04:12,580
as in hahaha second part is red you've

00:04:07,870 --> 00:04:18,310
got that yes hi red we're so we're gonna

00:04:12,580 --> 00:04:24,120
be talking about hardware here right

00:04:18,310 --> 00:04:28,419
next on old hardware only net BSD false

00:04:24,120 --> 00:04:31,930
any truths any trees no no nobody's

00:04:28,419 --> 00:04:35,490
gonna stick the neck out okay old

00:04:31,930 --> 00:04:38,080
hardware only well Jared McNeil up in

00:04:35,490 --> 00:04:39,360
Newfoundland has been quietly

00:04:38,080 --> 00:04:43,539
overachieving

00:04:39,360 --> 00:04:48,190
for last year and a bit I think all of

00:04:43,539 --> 00:04:50,610
this is his work with the arm ports in

00:04:48,190 --> 00:04:55,150
that BSD I don't know if any of you has

00:04:50,610 --> 00:04:59,560
taken the time out to to compile the the

00:04:55,150 --> 00:05:02,919
EVB arm port just recently I I did it

00:04:59,560 --> 00:05:06,580
just after an AMD 64 build on a on a

00:05:02,919 --> 00:05:09,400
slow VM which took five hours the EVB

00:05:06,580 --> 00:05:10,960
arm port took 11 hours and that's mainly

00:05:09,400 --> 00:05:19,180
because of all the kernels that we had

00:05:10,960 --> 00:05:22,530
there we're killing this in in huge

00:05:19,180 --> 00:05:26,260
detail so we talked about old hardware

00:05:22,530 --> 00:05:27,970
the kind of cortex names down the side

00:05:26,260 --> 00:05:31,930
you probably don't realize you don't

00:05:27,970 --> 00:05:34,330
know but the ones across here are fairly

00:05:31,930 --> 00:05:38,880
obvious very well known I think in the

00:05:34,330 --> 00:05:42,160
outside world so we're not just there on

00:05:38,880 --> 00:05:45,880
on old hardware where there are new

00:05:42,160 --> 00:05:48,070
hardware especially in the arm space now

00:05:45,880 --> 00:05:51,460
Jared explained all of this

00:05:48,070 --> 00:05:54,430
over over an hour to me and if anybody

00:05:51,460 --> 00:05:56,470
wants to go and have a look at the

00:05:54,430 --> 00:05:58,150
typescript in which he did this it's

00:05:56,470 --> 00:06:00,190
very very instructional I can tell you

00:05:58,150 --> 00:06:02,710
that it's in the form of a script file

00:06:00,190 --> 00:06:05,350
so you just play it back with script - P

00:06:02,710 --> 00:06:07,390
that and that should work on all the

00:06:05,350 --> 00:06:11,770
scripts that are out there in the BAS

00:06:07,390 --> 00:06:16,810
these but it gives a great idea of what

00:06:11,770 --> 00:06:20,380
he did why how he did it and not just

00:06:16,810 --> 00:06:27,220
the hardware stuff as well all the full

00:06:20,380 --> 00:06:30,420
device trees and so in Intel qat support

00:06:27,220 --> 00:06:32,530
came in from two of the iij developers

00:06:30,420 --> 00:06:36,430
I'm not sure if it's in tree at the

00:06:32,530 --> 00:06:42,330
moment or not but it is there and the

00:06:36,430 --> 00:06:42,330
ultimate support our new hardware there

00:06:43,800 --> 00:06:47,970
there's actually a screenshot of this I

00:06:46,450 --> 00:06:53,100
don't know if you can see down here

00:06:47,970 --> 00:06:56,080
there's that's the frame buffer and

00:06:53,100 --> 00:07:00,610
where is it on there maybe it's the next

00:06:56,080 --> 00:07:07,120
one yeah I think that's it there us be

00:07:00,610 --> 00:07:10,120
there at lati brilliant Felix toran in

00:07:07,120 --> 00:07:19,410
in Germany that did that and that's

00:07:10,120 --> 00:07:24,660
marvelous so any guesses true false

00:07:19,410 --> 00:07:24,660
partial what we partial

00:07:26,390 --> 00:07:30,480
yeah I'm compared to GCC we don't have

00:07:28,950 --> 00:07:32,850
all the architectures that they have for

00:07:30,480 --> 00:07:35,940
example but there is support for other

00:07:32,850 --> 00:07:37,650
new architectures there as well so yeah

00:07:35,940 --> 00:07:41,670
okay I'll give you the partial there

00:07:37,650 --> 00:07:43,170
crystal okay its entry you always be

00:07:41,670 --> 00:07:46,760
maintaining it

00:07:43,170 --> 00:07:49,050
it's still optional and off by default

00:07:46,760 --> 00:07:51,570
you're pointed out that the regular

00:07:49,050 --> 00:07:53,340
testing with the bulk builds is

00:07:51,570 --> 00:07:55,830
particularly good at finding compiler

00:07:53,340 --> 00:07:57,840
regressions and the other thing I'd note

00:07:55,830 --> 00:08:00,530
is that on the built but the bulk build

00:07:57,840 --> 00:08:03,960
stats that we see on the mailing lists

00:08:00,530 --> 00:08:06,960
the clang bulk builds typically have way

00:08:03,960 --> 00:08:08,880
more packages building not way more they

00:08:06,960 --> 00:08:13,260
have more packages building than GCC

00:08:08,880 --> 00:08:14,970
build well that's because your gives

00:08:13,260 --> 00:08:18,450
more efficient to doing these things or

00:08:14,970 --> 00:08:22,140
their manual doesn't doesn't do them

00:08:18,450 --> 00:08:24,450
self and I'm not too sure there we go

00:08:22,140 --> 00:08:28,290
if you're in the talk before this one

00:08:24,450 --> 00:08:30,510
Camilla was talking about ll DB and the

00:08:28,290 --> 00:08:32,610
debugging infrastructure one of the

00:08:30,510 --> 00:08:36,890
particular points that the cherry made

00:08:32,610 --> 00:08:42,839
there was about the the Lib buzzer and

00:08:36,890 --> 00:08:45,870
safe shield and the the sanitizers as

00:08:42,839 --> 00:08:57,589
well are very interesting for us and

00:08:45,870 --> 00:09:02,280
camels been doing some great work okay

00:08:57,589 --> 00:09:06,140
true/false may be partial partial

00:09:02,280 --> 00:09:11,640
because we have no top of the kernel

00:09:06,140 --> 00:09:13,770
virtualization yeah okay we've got

00:09:11,640 --> 00:09:18,210
saying of course had that for well over

00:09:13,770 --> 00:09:19,560
12 years now user mode we have there it

00:09:18,210 --> 00:09:22,260
doesn't work actually if you compile it

00:09:19,560 --> 00:09:25,140
just recently something in the the

00:09:22,260 --> 00:09:29,130
changes that will be actually sounded

00:09:25,140 --> 00:09:32,280
for the LD scripts have made it not not

00:09:29,130 --> 00:09:35,640
to compile we've got romp which is the

00:09:32,280 --> 00:09:39,170
kind of ultimate virtualization by

00:09:35,640 --> 00:09:39,170
namespace munging

00:09:40,080 --> 00:09:47,510
but we have no beehive or KVM equivalent

00:09:43,440 --> 00:09:50,029
or even the the PSD the OpenBSD be mmm

00:09:47,510 --> 00:09:52,529
that's probably a big hole that we have

00:09:50,029 --> 00:09:57,930
be great if somebody would would have a

00:09:52,529 --> 00:10:08,970
look at it okay no signing I can make a

00:09:57,930 --> 00:10:10,529
few signs Rios dad's trying to give me

00:10:08,970 --> 00:10:17,640
the American Sign Language for something

00:10:10,529 --> 00:10:20,399
they have any guesses partial we're

00:10:17,640 --> 00:10:24,000
talking about net BST here so I probably

00:10:20,399 --> 00:10:26,880
go for a no we don't have it but we do

00:10:24,000 --> 00:10:29,730
um we do sign the hashes of all the

00:10:26,880 --> 00:10:33,660
releases that we do which is a minor

00:10:29,730 --> 00:10:36,600
thing it's not great and you'd have to

00:10:33,660 --> 00:10:40,890
generate the hashes yourself to to work

00:10:36,600 --> 00:10:43,320
out whether it's good or not but having

00:10:40,890 --> 00:10:44,970
said that all of the meta log hashes

00:10:43,320 --> 00:10:47,880
that are created during build up shell

00:10:44,970 --> 00:10:51,000
they get installed on the machines and

00:10:47,880 --> 00:10:55,130
so it could be done automatically we do

00:10:51,000 --> 00:11:01,410
need to pick up a game here then write

00:10:55,130 --> 00:11:13,260
utilities in base and christos isn't

00:11:01,410 --> 00:11:14,700
allowed to answer this swap sorry hey

00:11:13,260 --> 00:11:18,810
I've got a script this will help you at

00:11:14,700 --> 00:11:21,209
there Martin but color LS is in package

00:11:18,810 --> 00:11:23,339
source and I have a script that will do

00:11:21,209 --> 00:11:26,240
it because I I need colors I need all

00:11:23,339 --> 00:11:28,290
the context they can get with my eyes

00:11:26,240 --> 00:11:30,870
anyway

00:11:28,290 --> 00:11:33,270
I'll say I know chrysalis is doing

00:11:30,870 --> 00:11:36,089
marvelous job they're updating all of

00:11:33,270 --> 00:11:38,699
the the third party stuff that we have

00:11:36,089 --> 00:11:41,279
in base there is now a small shell

00:11:38,699 --> 00:11:44,519
script called sis info which will do a

00:11:41,279 --> 00:11:48,000
kind of fight a fairly fine-grained job

00:11:44,519 --> 00:11:51,209
of working out what what specific

00:11:48,000 --> 00:11:52,920
versions of packages what specific

00:11:51,209 --> 00:11:53,340
versions of system information we have

00:11:52,920 --> 00:11:58,920
in the base

00:11:53,340 --> 00:12:01,470
system and as of last week I committed

00:11:58,920 --> 00:12:04,470
some stuff to do it on a desk there as

00:12:01,470 --> 00:12:06,810
well so we can actually work out from

00:12:04,470 --> 00:12:21,750
the desk there in build up shell what

00:12:06,810 --> 00:12:23,010
packages its next step small steps lots

00:12:21,750 --> 00:12:33,900
of them

00:12:23,010 --> 00:12:35,150
he's coming sorry okay I'll just repeat

00:12:33,900 --> 00:12:38,390
the question

00:12:35,150 --> 00:12:41,730
Christophe said he wanted it to be

00:12:38,390 --> 00:12:43,950
extended so that the latest version

00:12:41,730 --> 00:12:46,110
could be printed relative to to this

00:12:43,950 --> 00:12:48,630
this is actually a snapshot of what's

00:12:46,110 --> 00:12:50,040
installed on the system and that it

00:12:48,630 --> 00:12:53,550
would be nice to have that up on the

00:12:50,040 --> 00:12:56,940
website and so people can actually run

00:12:53,550 --> 00:12:58,800
it locally and check it against the of

00:12:56,940 --> 00:13:04,080
what's there that was going to be the

00:12:58,800 --> 00:13:05,610
next stage of this whole thing okay I'll

00:13:04,080 --> 00:13:15,350
let you off without answering the

00:13:05,610 --> 00:13:17,600
previous one partial I would say

00:13:15,350 --> 00:13:20,010
probably right

00:13:17,600 --> 00:13:22,260
we don't have any of the new modern

00:13:20,010 --> 00:13:28,170
congestion control algorithms or

00:13:22,260 --> 00:13:31,580
mitigation algorithms in in our TCP one

00:13:28,170 --> 00:13:34,920
of the bright spots was animal buyers

00:13:31,580 --> 00:13:37,380
can implementation for all of us who

00:13:34,920 --> 00:13:39,710
have cars and want to run net bsd in our

00:13:37,380 --> 00:13:39,710
cars

00:13:42,020 --> 00:13:48,810
miners and other things there yeah and

00:13:46,980 --> 00:13:51,480
the only other thing I could think of

00:13:48,810 --> 00:13:58,110
was that Roy's done some marvelous stuff

00:13:51,480 --> 00:14:00,210
with DHCP CD and I used to think that uh

00:13:58,110 --> 00:14:02,010
stuff it I'll just use the H Kline it

00:14:00,210 --> 00:14:03,960
works fine but if you actually have a

00:14:02,010 --> 00:14:06,990
look at the size of the executables the

00:14:03,960 --> 00:14:10,380
D H client one is about five Meg

00:14:06,990 --> 00:14:13,740
and the HCP CD comes in about 60 K or so

00:14:10,380 --> 00:14:15,959
so great work and I know Christus has

00:14:13,740 --> 00:14:18,029
been working closely with them on I'm

00:14:15,959 --> 00:14:20,540
getting some bugs fixed and Royce very

00:14:18,029 --> 00:14:23,880
responsive and it's great to have that

00:14:20,540 --> 00:14:25,850
but I'd agree in general networking is

00:14:23,880 --> 00:14:32,399
outdated

00:14:25,850 --> 00:14:34,920
so is it difficult to bill it for both

00:14:32,399 --> 00:14:36,899
thank you yes

00:14:34,920 --> 00:14:41,580
we have build up shell that's been

00:14:36,899 --> 00:14:44,580
around 15 years does cross OS building

00:14:41,580 --> 00:14:47,220
and cross platform building that's

00:14:44,580 --> 00:14:49,920
incredibly useful and a great selling

00:14:47,220 --> 00:14:51,750
point as well for net VST we've got to

00:14:49,920 --> 00:14:53,730
make image there which will build up an

00:14:51,750 --> 00:14:57,270
image for anybody who wants to run

00:14:53,730 --> 00:14:59,220
things and especially nice is you can

00:14:57,270 --> 00:15:02,850
actually add packages into that and get

00:14:59,220 --> 00:15:09,570
a straight image built for you like that

00:15:02,850 --> 00:15:11,250
it's now runs on privileged and we've

00:15:09,570 --> 00:15:14,610
got other things in package source that

00:15:11,250 --> 00:15:16,829
will make live CDs and may make a USB

00:15:14,610 --> 00:15:18,779
stick that you can boot from and just

00:15:16,829 --> 00:15:20,640
recently Jared's done some marvelous

00:15:18,779 --> 00:15:24,540
work with all the Ubud packages and

00:15:20,640 --> 00:15:33,209
Savannah as well didn't mean to wake you

00:15:24,540 --> 00:15:36,390
up and mentioned all the Ubud packages

00:15:33,209 --> 00:15:40,020
that's that's the ones I could find down

00:15:36,390 --> 00:15:41,279
there that would fit on our apologies

00:15:40,020 --> 00:15:44,760
you probably can't see them very well

00:15:41,279 --> 00:15:48,180
but yeah that's because there are a fair

00:15:44,760 --> 00:15:50,450
number often these days okay run by

00:15:48,180 --> 00:15:50,450
morons

00:15:53,129 --> 00:15:57,730
well I have to say in my case it's

00:15:55,779 --> 00:15:59,009
absolutely true if I have anything to do

00:15:57,730 --> 00:16:01,569
with it

00:15:59,009 --> 00:16:05,079
others take a large amount of time and

00:16:01,569 --> 00:16:06,939
effort to run the the the project and to

00:16:05,079 --> 00:16:10,149
do a whole lot of the administration of

00:16:06,939 --> 00:16:13,509
the petrol of the bank for example we

00:16:10,149 --> 00:16:15,069
have a board of directors and a core

00:16:13,509 --> 00:16:17,139
team which is the technical management

00:16:15,069 --> 00:16:20,649
so it's just like the company set up

00:16:17,139 --> 00:16:23,100
really we have a GM's every year and

00:16:20,649 --> 00:16:26,109
board elections every year as well so

00:16:23,100 --> 00:16:31,949
this is your chance to become a

00:16:26,109 --> 00:16:31,949
right how about this one

00:16:32,639 --> 00:16:39,759
true true false

00:16:36,579 --> 00:16:43,149
I'd have to say false actually we have

00:16:39,759 --> 00:16:49,089
no hammer one of the reasons for that is

00:16:43,149 --> 00:16:51,160
that it involves VFS changes our CFS is

00:16:49,089 --> 00:16:53,919
out to date but some Chuck's in them in

00:16:51,160 --> 00:16:56,799
the process of updating it looking

00:16:53,919 --> 00:17:00,850
forward to that LFS was worked on during

00:16:56,799 --> 00:17:04,600
the google Summer of Code and puffs and

00:17:00,850 --> 00:17:06,309
PUD allow fused file systems reliably so

00:17:04,600 --> 00:17:08,919
for all of the people who said that we

00:17:06,309 --> 00:17:12,029
we don't have modern file systems what

00:17:08,919 --> 00:17:12,029
ones are you thinking of

00:17:16,169 --> 00:17:23,079
okay yeah I'll give you give you that

00:17:18,909 --> 00:17:24,549
right so ZFS what what are the other

00:17:23,079 --> 00:17:28,809
ones that people are looking at you XD

00:17:24,549 --> 00:17:31,169
for NFS for it that's true yeah I'll

00:17:28,809 --> 00:17:31,169
give you that

00:17:31,740 --> 00:17:35,409
what'swhat's the state of the art and

00:17:33,580 --> 00:17:40,960
Linux at the moment have you given up

00:17:35,409 --> 00:17:44,130
and b-tree FS x FS is years old and

00:17:40,960 --> 00:17:44,130
doesn't work lively I believe

00:17:52,950 --> 00:17:57,240
you write the comment from the the

00:17:55,410 --> 00:18:00,750
audience of the livestream was that read

00:17:57,240 --> 00:18:12,690
have pulled the plug and btrfs so yeah

00:18:00,750 --> 00:18:14,190
okay right okay so there's still some

00:18:12,690 --> 00:18:19,800
discussion about this but we're not

00:18:14,190 --> 00:18:22,100
we're not doing that badly we have the

00:18:19,800 --> 00:18:26,400
filesystem switch that all of our

00:18:22,100 --> 00:18:31,650
backups are done using on tnf machines

00:18:26,400 --> 00:18:34,020
and so we're not doing that badly I

00:18:31,650 --> 00:18:36,710
don't think we've got Samba FS and the

00:18:34,020 --> 00:18:40,890
client one yeah

00:18:36,710 --> 00:18:42,300
true true no multipathing but yeah okay

00:18:40,890 --> 00:18:45,210
so maybe there is room for improvement

00:18:42,300 --> 00:18:53,730
maybe I was overall optimistic or

00:18:45,210 --> 00:19:03,200
something that I thought you'd added a

00:18:53,730 --> 00:19:03,200
new AES yeah okay

00:19:05,470 --> 00:19:12,480
it's probably fairly constant in the

00:19:07,450 --> 00:19:18,840
machines I run it on anyway no dtrace

00:19:12,480 --> 00:19:21,490
partial again because it's old sorry

00:19:18,840 --> 00:19:23,950
true yes yes and we certainly don't have

00:19:21,490 --> 00:19:27,000
some of the the mods that George is

00:19:23,950 --> 00:19:28,179
talking about earlier on this afternoon

00:19:27,000 --> 00:19:31,240
sorry

00:19:28,179 --> 00:19:34,960
stability yeah okay I'll give you all of

00:19:31,240 --> 00:19:37,720
that however Sivan has done the the

00:19:34,960 --> 00:19:41,080
necessary and added in the the DTrace

00:19:37,720 --> 00:19:44,350
toolkit scripts so it's not it's not

00:19:41,080 --> 00:19:47,529
forgotten about and will certainly track

00:19:44,350 --> 00:19:50,169
the open D trace stuff in it when it

00:19:47,529 --> 00:19:52,529
makes it into well I would keep

00:19:50,169 --> 00:19:52,529
happening

00:19:53,740 --> 00:20:00,000
I see somebody here was doing stuff in

00:19:58,090 --> 00:20:08,049
00:20:00,000 --> 00:20:09,190
yeah no nvme support oh thank you yes we

00:20:08,049 --> 00:20:13,059
brought it in

00:20:09,190 --> 00:20:17,289
no nakasang and jeremiah dollar check

00:20:13,059 --> 00:20:20,470
brought it in from open EST and it seems

00:20:17,289 --> 00:20:24,270
to be working fine certainly with with

00:20:20,470 --> 00:20:24,270
his tests okay

00:20:28,630 --> 00:20:37,960
okay we got a false and a partial and no

00:20:36,130 --> 00:20:39,820
he's still out there for review and he's

00:20:37,960 --> 00:20:44,230
still making changes I saw some at the

00:20:39,820 --> 00:20:46,810
end of last week but the there's

00:20:44,230 --> 00:20:52,710
definitely hope in sight for this kind

00:20:46,810 --> 00:20:52,710
of thing okay developers out of touch

00:20:54,140 --> 00:21:00,790
[Laughter]

00:20:56,580 --> 00:21:02,650
for me obviously true right whenever I

00:21:00,790 --> 00:21:05,200
travel I don't take keys with me I have

00:21:02,650 --> 00:21:07,810
loaner equipment and things like that

00:21:05,200 --> 00:21:09,640
means that nobody can email me it's

00:21:07,810 --> 00:21:14,320
great it really is if you want to relax

00:21:09,640 --> 00:21:16,780
for a while then do that so for my part

00:21:14,320 --> 00:21:20,590
I'm out of touch when I'm here when I

00:21:16,780 --> 00:21:22,660
travel yep

00:21:20,590 --> 00:21:28,960
so did everybody bring their private

00:21:22,660 --> 00:21:31,480
keys and two-factor tokens yeah okay so

00:21:28,960 --> 00:21:39,250
I'm going to claim claim victory on that

00:21:31,480 --> 00:21:48,900
one I think ok next one you're very

00:21:39,250 --> 00:21:52,860
quiet out there come on I'd say that we

00:21:48,900 --> 00:21:55,530
York has been beavering away on this for

00:21:52,860 --> 00:22:02,010
five six years you told me this morning

00:21:55,530 --> 00:22:06,370
yeah okay he's been doing conversions

00:22:02,010 --> 00:22:10,660
from CBS through a fossil and on to get

00:22:06,370 --> 00:22:12,280
for five years or so they've been very

00:22:10,660 --> 00:22:14,680
speed ups along the way and things like

00:22:12,280 --> 00:22:17,200
that but we certainly have get mirrors

00:22:14,680 --> 00:22:21,490
of the CBS tree the CBS trees obviously

00:22:17,200 --> 00:22:25,720
the master one that we've also got the

00:22:21,490 --> 00:22:29,380
bitbucket mercurial tree there which is

00:22:25,720 --> 00:22:31,540
fairly new last month at her and that's

00:22:29,380 --> 00:22:35,440
great for all of us who like mercurial

00:22:31,540 --> 00:22:41,820
and yeah thanks to yura for setting that

00:22:35,440 --> 00:22:41,820
up and i IJ's

00:22:42,220 --> 00:22:51,690
they do automatic conversions on using

00:22:45,909 --> 00:22:59,640
our fairly interesting JavaScript script

00:22:51,690 --> 00:22:59,640
so yeah that's that's fun okay

00:23:03,600 --> 00:23:14,260
testing is sorry I think looking at the

00:23:12,549 --> 00:23:15,850
project as a whole how would you see net

00:23:14,260 --> 00:23:26,860
vsts testing in the whole scheme of

00:23:15,850 --> 00:23:29,950
things yeah I'd I think the combination

00:23:26,860 --> 00:23:32,679
of rump and Anita and things like that

00:23:29,950 --> 00:23:35,110
give us a marvelous platform really for

00:23:32,679 --> 00:23:40,090
doing all of the continuous testing for

00:23:35,110 --> 00:23:42,730
working out whether networking is has

00:23:40,090 --> 00:23:45,690
been caused to to take more time due to

00:23:42,730 --> 00:23:48,970
one change and there's usually a list of

00:23:45,690 --> 00:23:53,620
commits that have happened since we know

00:23:48,970 --> 00:23:57,789
to test times I think that's great so

00:23:53,620 --> 00:23:59,169
that's the range this I think it was

00:23:57,789 --> 00:24:04,809
Christos was talking about this morning

00:23:59,169 --> 00:24:09,220
the the platforms where the testing is

00:24:04,809 --> 00:24:10,929
done and the frequency of those tests so

00:24:09,220 --> 00:24:12,760
I think our testes pretty pretty damn

00:24:10,929 --> 00:24:14,950
good actually you're right it could be

00:24:12,760 --> 00:24:16,720
better we could test more stuff and I

00:24:14,950 --> 00:24:21,059
think that's the idea going forward as

00:24:16,720 --> 00:24:23,799
well in we have a rule that any any new

00:24:21,059 --> 00:24:26,909
utility that comes on board we need

00:24:23,799 --> 00:24:29,320
tests for it it needs to be ATF tests

00:24:26,909 --> 00:24:31,090
though that's that's fairly onerous and

00:24:29,320 --> 00:24:35,169
things like that but we can always help

00:24:31,090 --> 00:24:36,880
you out with making tests into ATF tests

00:24:35,169 --> 00:24:38,590
some of us have done it a number of

00:24:36,880 --> 00:24:40,539
times and forgotten how to do it and

00:24:38,590 --> 00:24:43,419
then I have to go back again and so

00:24:40,539 --> 00:24:46,090
we've documented some of the move along

00:24:43,419 --> 00:24:50,679
the way I've also got some scripts to

00:24:46,090 --> 00:24:54,159
help us out doing this as well as well

00:24:50,679 --> 00:24:58,809
as that the these are the runs from

00:24:54,159 --> 00:25:00,340
September 2017 August 2017 and we can

00:24:58,809 --> 00:25:02,110
see that the times and the dates where

00:25:00,340 --> 00:25:04,539
things started failing and the tests

00:25:02,110 --> 00:25:07,620
that are failing that kind of thing I I

00:25:04,539 --> 00:25:11,130
think that's a great resource to have

00:25:07,620 --> 00:25:14,050
certainly in the run-up to

00:25:11,130 --> 00:25:17,020
to a release if you want to find that if

00:25:14,050 --> 00:25:19,990
any people can remember back to the five

00:25:17,020 --> 00:25:21,970
and the six days we're taking six seven

00:25:19,990 --> 00:25:24,040
months to try to find out where

00:25:21,970 --> 00:25:26,950
something had gone wrong over the last

00:25:24,040 --> 00:25:30,480
two years this is a great way of helping

00:25:26,950 --> 00:25:33,310
us out so we don't do that all again and

00:25:30,480 --> 00:25:34,780
if you're in Chris tosses talk yesterday

00:25:33,310 --> 00:25:40,690
you'll know all about reproducible

00:25:34,780 --> 00:25:43,480
builds so yeah I'll send you a redirect

00:25:40,690 --> 00:25:47,080
to the top that he gave and the paper as

00:25:43,480 --> 00:25:50,290
well one thing I have to say it was way

00:25:47,080 --> 00:25:51,520
more complicated than I expected the

00:25:50,290 --> 00:25:57,790
number of things that had to be changed

00:25:51,520 --> 00:26:02,260
her were marvelous were extensive

00:25:57,790 --> 00:26:04,150
I talked to Christos about he said we're

00:26:02,260 --> 00:26:06,970
the first PSD to complete the Debian run

00:26:04,150 --> 00:26:10,150
so you thought the very first big UNIX

00:26:06,970 --> 00:26:17,730
to complete the Debian run as well does

00:26:10,150 --> 00:26:18,970
that include all the Linux is okay okay

00:26:17,730 --> 00:26:21,520
interesting

00:26:18,970 --> 00:26:24,430
so rather rather a significant piece of

00:26:21,520 --> 00:26:26,620
work there and just a reminder that

00:26:24,430 --> 00:26:29,290
MINIX uses an FPS d-- user land and the

00:26:26,620 --> 00:26:31,210
builds a build scheme as well so they've

00:26:29,290 --> 00:26:32,620
got this almost for free that i've

00:26:31,210 --> 00:26:45,100
imagine they'll have to do some some

00:26:32,620 --> 00:26:50,440
changes but thank you right we have now

00:26:45,100 --> 00:26:52,990
fdt in entry you who aren't aware of

00:26:50,440 --> 00:26:54,370
that it's the the full device tree which

00:26:52,990 --> 00:26:56,800
means that we don't have to specify

00:26:54,370 --> 00:27:01,330
everything in kernel config files for

00:26:56,800 --> 00:27:04,930
example for ebbr boards and things like

00:27:01,330 --> 00:27:06,850
that it's it's a marvelous way of

00:27:04,930 --> 00:27:08,470
reducing the number of kernels and

00:27:06,850 --> 00:27:10,900
hopefully taking that build that I had

00:27:08,470 --> 00:27:13,540
from 11 RS down to a much more

00:27:10,900 --> 00:27:19,340
manageable five or six something like

00:27:13,540 --> 00:27:23,429
that so everything else that goes into

00:27:19,340 --> 00:27:25,590
Internet BSD ate the P trace fixes from

00:27:23,429 --> 00:27:28,380
chamomile that he was talking about at

00:27:25,590 --> 00:27:31,470
the end of his top there there's a new

00:27:28,380 --> 00:27:34,640
sound driver it went in we had some some

00:27:31,470 --> 00:27:37,169
issues but now everybody seems to be

00:27:34,640 --> 00:27:40,710
reporting that we could good sound I

00:27:37,169 --> 00:27:44,820
think across the board that's good

00:27:40,710 --> 00:27:49,679
Saito Suns fixes for the the faster

00:27:44,820 --> 00:27:54,059
Intel nicks and we mentioned the the new

00:27:49,679 --> 00:27:57,320
AES mode obviously not constant time but

00:27:54,059 --> 00:27:57,320
I'm sure that's going to come next week

00:27:58,159 --> 00:28:02,010
okay

00:27:59,850 --> 00:28:04,260
one of the things that Jared talked

00:28:02,010 --> 00:28:08,120
about in that script that I've pasted up

00:28:04,260 --> 00:28:11,399
there earlier was a new SD MMC driver

00:28:08,120 --> 00:28:14,460
which just allows us to to run much

00:28:11,399 --> 00:28:20,909
faster on the the SD cards that we were

00:28:14,460 --> 00:28:26,909
otherwise able to Maxine V yards has an

00:28:20,909 --> 00:28:33,450
a P map overhaul of AMD 64 and i386 my

00:28:26,909 --> 00:28:36,360
other stuff as well and Zen kernel

00:28:33,450 --> 00:28:41,940
module because that's the American

00:28:36,360 --> 00:28:46,289
spelling of it and some changes to

00:28:41,940 --> 00:28:51,120
Scotty control Lua is now at 5:34 in

00:28:46,289 --> 00:28:54,870
Carroll which is great if you missed any

00:28:51,120 --> 00:28:57,779
was BSD can there's a marvelous talk

00:28:54,870 --> 00:29:03,539
there about a lower based security model

00:28:57,779 --> 00:29:06,809
right these aren't examined that was

00:29:03,539 --> 00:29:10,700
created by a guy not related to the

00:29:06,809 --> 00:29:14,720
project at all very interesting talk and

00:29:10,700 --> 00:29:18,720
it allows us to sandbox various

00:29:14,720 --> 00:29:24,059
applications and utilities just through

00:29:18,720 --> 00:29:26,490
a different security model so XT four FS

00:29:24,059 --> 00:29:28,950
has been beefed up a bit it's still

00:29:26,490 --> 00:29:32,990
called ext 2 FS in the file system but

00:29:28,950 --> 00:29:37,220
yeah there are other bits in there

00:29:32,990 --> 00:29:37,220
it is yeah yeah that's right

00:29:37,250 --> 00:29:45,060
sorry about that yeah

00:29:40,260 --> 00:29:51,180
and yeah the turbo Channel USB stuff we

00:29:45,060 --> 00:29:54,480
saw earlier on all marvelous things the

00:29:51,180 --> 00:29:56,700
net MP safe network changes our entry

00:29:54,480 --> 00:30:00,150
they're not switched on but they are

00:29:56,700 --> 00:30:05,850
coming so we're getting there

00:30:00,150 --> 00:30:07,200
a NIC merged his it's USB work that he's

00:30:05,850 --> 00:30:09,750
been doing I think all the last two

00:30:07,200 --> 00:30:11,700
years or something like that again that

00:30:09,750 --> 00:30:14,580
gives us some USB 3 support so we're a

00:30:11,700 --> 00:30:17,040
lot better than we were previously this

00:30:14,580 --> 00:30:20,400
helps us work on yeah you were hardware

00:30:17,040 --> 00:30:24,660
and that GPD support including booting I

00:30:20,400 --> 00:30:27,420
come from John Amos I think and the the

00:30:24,660 --> 00:30:31,110
other marvelous forward-looking

00:30:27,420 --> 00:30:33,770
hardware you know thing that we have is

00:30:31,110 --> 00:30:36,140
PCI support for the for the Sharks

00:30:33,770 --> 00:30:40,860
anybody still running charts by the way

00:30:36,140 --> 00:30:42,630
well excellent - I threw mine out a

00:30:40,860 --> 00:30:45,930
couple of years ago I have to say that

00:30:42,630 --> 00:30:51,030
that was the last one I had but yes well

00:30:45,930 --> 00:30:55,640
done the pioneers here okay we brought

00:30:51,030 --> 00:30:58,710
in IP IP six out of control from FreeBSD

00:30:55,640 --> 00:31:06,060
Christo's is black this T is new in net

00:30:58,710 --> 00:31:08,940
BSD 8 as well I think and Maxim V yard

00:31:06,060 --> 00:31:11,400
rota scanner and has been running our

00:31:08,940 --> 00:31:15,330
source tree through looking for various

00:31:11,400 --> 00:31:17,970
leaks lot contentions and other things

00:31:15,330 --> 00:31:19,920
like that so there's a lot of security

00:31:17,970 --> 00:31:23,880
work that has been gone going on like

00:31:19,920 --> 00:31:25,800
that he also split the kernel P map this

00:31:23,880 --> 00:31:28,170
is where I get into the section where I

00:31:25,800 --> 00:31:29,820
know nothing about it and so my mouth is

00:31:28,170 --> 00:31:33,930
moving in words are coming out but they

00:31:29,820 --> 00:31:37,710
don't mean anything but he's been doing

00:31:33,930 --> 00:31:41,730
some security work to to separate the

00:31:37,710 --> 00:31:44,490
the user and the kernel mappings I think

00:31:41,730 --> 00:31:45,030
that are there I shall probably shut up

00:31:44,490 --> 00:31:49,980
about

00:31:45,030 --> 00:31:54,650
now it's probably best if I do that vio

00:31:49,980 --> 00:31:57,900
scuzzy helps as much with a lot of the

00:31:54,650 --> 00:32:01,470
the virtualization Pat platforms

00:31:57,900 --> 00:32:05,160
Benny helped brought brought us up on

00:32:01,470 --> 00:32:08,040
the compute engine so that's supported

00:32:05,160 --> 00:32:10,910
in eight I believe and all bugs fixed

00:32:08,040 --> 00:32:10,910
and things like that

00:32:11,240 --> 00:32:20,130
Andrea Stroud has done some work on

00:32:13,680 --> 00:32:23,490
Nouveau I think yep

00:32:20,130 --> 00:32:27,170
so yeah it's there now it wasn't before

00:32:23,490 --> 00:32:27,170
and we're good right

00:32:28,010 --> 00:32:32,870
so apart from having lots of slides here

00:32:30,780 --> 00:32:37,320
it looks like I'm going to finish early

00:32:32,870 --> 00:32:41,670
so I just say there's lots new in that

00:32:37,320 --> 00:32:44,850
VSD 88 kind of click the surface of it

00:32:41,670 --> 00:32:49,680
here I think lots of people are working

00:32:44,850 --> 00:32:52,980
very very hard it'll be available real

00:32:49,680 --> 00:32:58,500
real soon now for some version of real

00:32:52,980 --> 00:33:00,830
soon now and with that any questions and

00:32:58,500 --> 00:33:00,830
answers

00:33:10,960 --> 00:33:22,610
volunteers I was wondering if you could

00:33:18,050 --> 00:33:24,650
say something about the development of

00:33:22,610 --> 00:33:27,620
this particular release in comparison to

00:33:24,650 --> 00:33:31,820
the other ones has it been more painful

00:33:27,620 --> 00:33:35,420
or development you mean branching of it

00:33:31,820 --> 00:33:38,330
or do you mean the whole efforts leading

00:33:35,420 --> 00:33:46,900
up to the branch features and stuff like

00:33:38,330 --> 00:33:49,730
that so how volatile is the branch being

00:33:46,900 --> 00:33:54,470
from a personal point of view I haven't

00:33:49,730 --> 00:33:58,730
found it very volatile as in when I want

00:33:54,470 --> 00:34:02,180
to build it it's it's there previously I

00:33:58,730 --> 00:34:04,280
mean 10 20 years ago I'd come along and

00:34:02,180 --> 00:34:06,500
say you know what state is current in

00:34:04,280 --> 00:34:08,960
can I install it or something like that

00:34:06,500 --> 00:34:13,700
I haven't had to do that much at all

00:34:08,960 --> 00:34:15,500
just recently it's been there and and I

00:34:13,700 --> 00:34:18,350
think the the automatic testing the

00:34:15,500 --> 00:34:23,810
Anita stuff and especially the automatic

00:34:18,350 --> 00:34:26,210
runs have been largely to largely to

00:34:23,810 --> 00:34:30,800
blame for that lack of volatility or

00:34:26,210 --> 00:34:34,550
lack of instability I think I'd say we

00:34:30,800 --> 00:34:38,600
had some pretty nasty issues with GCC

00:34:34,550 --> 00:34:43,940
update and when not completely over that

00:34:38,600 --> 00:34:47,690
one yet and I think they were even worse

00:34:43,940 --> 00:34:50,210
in the past I remember em 68k managed to

00:34:47,690 --> 00:34:52,570
take an absolute dive some time when

00:34:50,210 --> 00:34:58,100
when we upgrade to GCC merely because

00:34:52,570 --> 00:35:00,890
GCC weren't interested in in MCC 8k code

00:34:58,100 --> 00:35:04,640
generation we'd horrendous bugs like

00:35:00,890 --> 00:35:06,470
that but the ones and yeah what we're

00:35:04,640 --> 00:35:09,110
still seeing the the the fallout from

00:35:06,470 --> 00:35:11,150
that I think but I don't remember seeing

00:35:09,110 --> 00:35:13,970
any any kind of really disastrous things

00:35:11,150 --> 00:35:15,620
happen in the last things I remember 20

00:35:13,970 --> 00:35:17,570
years ago Mike Croft managed to check

00:35:15,620 --> 00:35:21,830
something in unless the tree broken four

00:35:17,570 --> 00:35:23,119
to two weeks yeah and refused to change

00:35:21,830 --> 00:35:26,579
it either

00:35:23,119 --> 00:35:29,489
because it was micro I think the book

00:35:26,579 --> 00:35:32,759
the big broken sinks were all very

00:35:29,489 --> 00:35:35,309
subtle issues that didn't show up I

00:35:32,759 --> 00:35:36,329
could you just doing the white thing

00:35:35,309 --> 00:35:45,200
under a full moon

00:35:36,329 --> 00:35:49,650
yeah my question is about the tool chain

00:35:45,200 --> 00:35:51,839
so I had a glimpse of some conversations

00:35:49,650 --> 00:35:55,529
about GCC deprecating some platforms

00:35:51,839 --> 00:35:56,519
recently I'm not completely sure I

00:35:55,529 --> 00:35:59,789
understand all of it

00:35:56,519 --> 00:36:02,279
but is that going to affect us and what

00:35:59,789 --> 00:36:04,410
do we you know how are we as portable as

00:36:02,279 --> 00:36:07,950
we used to to different compiler chain

00:36:04,410 --> 00:36:11,959
tool chains let me try to answer that we

00:36:07,950 --> 00:36:14,999
have not upgraded to a version yet we're

00:36:11,959 --> 00:36:18,930
serious loss occurs for our

00:36:14,999 --> 00:36:20,700
architectures we are upgrading GCC in

00:36:18,930 --> 00:36:23,640
current right now to a version but it's

00:36:20,700 --> 00:36:27,449
not affected by that change so we have

00:36:23,640 --> 00:36:29,940
the most longest time for that old

00:36:27,449 --> 00:36:34,969
platforms and we are actively trying to

00:36:29,940 --> 00:36:34,969
get those platforms supported by LLVM

00:36:35,119 --> 00:36:42,739
and even Jesus see the plans not

00:36:38,369 --> 00:36:42,739
finalized yet as far as I can tell so

00:36:48,020 --> 00:36:52,510
well thank you very much for for letting

00:36:50,330 --> 00:36:55,149
me be a stuntman

00:36:52,510 --> 00:36:55,149

YouTube URL: https://www.youtube.com/watch?v=G9tqr9LlnHY


