Title: Using routing domains or tables in a production network - Peter Hessler
Publication date: 2019-10-13
Playlist: EuroBSDcon 2014, Bulgaria
Description: 
	Using routing domains or tables in a production network - Peter Hessler
Captions: 
	00:00:02,449 --> 00:00:25,890
Kessler how to use and abuse both so

00:00:20,910 --> 00:00:29,730
thank you yes I am Peter Hessler and I'm

00:00:25,890 --> 00:00:32,070
part of the OpenBSD project and so this

00:00:29,730 --> 00:00:34,200
talk was not originally on the schedule

00:00:32,070 --> 00:00:36,000
so I had to throw it together since last

00:00:34,200 --> 00:00:40,110
night so please forgive me if I'm a bit

00:00:36,000 --> 00:00:46,649
rusty on some of these things so we'll

00:00:40,110 --> 00:00:48,690
just start off and so there's always a

00:00:46,649 --> 00:00:52,500
question of what is in our table and

00:00:48,690 --> 00:00:54,870
what is in our domain so a running table

00:00:52,500 --> 00:00:57,600
was the first thing that we added and

00:00:54,870 --> 00:01:00,000
this was support for an alternate

00:00:57,600 --> 00:01:01,739
routing table that would be used this

00:01:00,000 --> 00:01:04,939
could be just simply simply an overlay

00:01:01,739 --> 00:01:07,680
on top of what was already in the system

00:01:04,939 --> 00:01:10,140
you could not have conflicting IP

00:01:07,680 --> 00:01:11,640
addresses in this it was only for four

00:01:10,140 --> 00:01:16,020
routes to different places over

00:01:11,640 --> 00:01:17,520
different links primarily this would be

00:01:16,020 --> 00:01:19,380
used for like a policy based routing

00:01:17,520 --> 00:01:21,960
system where you want to have all of

00:01:19,380 --> 00:01:23,759
your IP telephones come in on one

00:01:21,960 --> 00:01:25,860
interface and always use a specific

00:01:23,759 --> 00:01:29,579
interface that was low latency but slow

00:01:25,860 --> 00:01:31,740
whereas you want your web traffic to go

00:01:29,579 --> 00:01:37,020
over a different interface that would be

00:01:31,740 --> 00:01:39,570
faster but possibly high latency after

00:01:37,020 --> 00:01:41,520
we added writing the main support then

00:01:39,570 --> 00:01:46,560
you can have multiple routing tables

00:01:41,520 --> 00:01:48,450
belonging in a single our domain then so

00:01:46,560 --> 00:01:50,159
what is in our domain our domain is it's

00:01:48,450 --> 00:01:53,159
a completely independent routing

00:01:50,159 --> 00:01:56,850
instance and this is it's a virtualized

00:01:53,159 --> 00:01:59,189
router essentially in your machine you

00:01:56,850 --> 00:02:02,310
can have conflicting IP addresses you

00:01:59,189 --> 00:02:06,810
can do several hundred if you if you

00:02:02,310 --> 00:02:08,869
want to an interface however can only be

00:02:06,810 --> 00:02:14,040
assigned to one routing domain at a time

00:02:08,869 --> 00:02:17,250
this is also part of

00:02:14,040 --> 00:02:18,840
you know when a packet comes into the

00:02:17,250 --> 00:02:21,989
system which running domain does it

00:02:18,840 --> 00:02:26,159
belong to writing the mains always

00:02:21,989 --> 00:02:28,349
contain at least one routing table and

00:02:26,159 --> 00:02:33,239
and this is this the normal running

00:02:28,349 --> 00:02:35,519
table in your system so our domains was

00:02:33,239 --> 00:02:39,450
first added in open BSD 4.9 that was

00:02:35,519 --> 00:02:45,840
released in late 2009 originally it was

00:02:39,450 --> 00:02:48,329
for ipv4 only and sadly there was some

00:02:45,840 --> 00:02:50,879
work but it was not finished

00:02:48,329 --> 00:02:53,849
to include ipv6 support and that was

00:02:50,879 --> 00:02:56,639
finally finished in time for the 5.5

00:02:53,849 --> 00:03:03,480
release of open BSD released or earlier

00:02:56,639 --> 00:03:05,069
this year so there is there are related

00:03:03,480 --> 00:03:07,049
terminology that's commonly used in the

00:03:05,069 --> 00:03:11,370
networking field for this there is

00:03:07,049 --> 00:03:13,109
what's called vrf light and VR f vr f

00:03:11,370 --> 00:03:15,720
stands for virtual routing framework

00:03:13,109 --> 00:03:19,889
this is very common amongst the Cisco

00:03:15,720 --> 00:03:21,510
and juniper terminology VF light is

00:03:19,889 --> 00:03:23,790
multiple routing tables and multiple

00:03:21,510 --> 00:03:30,750
routing domains this is primarily done

00:03:23,790 --> 00:03:33,150
by hand it is entirely local to the

00:03:30,750 --> 00:03:35,310
system that you're running it on any

00:03:33,150 --> 00:03:38,549
system you connect to would not know and

00:03:35,310 --> 00:03:42,090
have no way of knowing if that system is

00:03:38,549 --> 00:03:44,489
running routing domains or not that's

00:03:42,090 --> 00:03:47,340
primarily where I spent most of my time

00:03:44,489 --> 00:03:52,260
with the vrf framework is doing is

00:03:47,340 --> 00:03:55,079
implementing the RF light and then you

00:03:52,260 --> 00:03:58,379
have V RF which is also commonly known

00:03:55,079 --> 00:04:03,090
as MPLS this is a technique that uses

00:03:58,379 --> 00:04:05,370
BGP and LPD most commonly large networks

00:04:03,090 --> 00:04:08,459
are doing this so for example you can

00:04:05,370 --> 00:04:10,680
imagine that a nationwide cable

00:04:08,459 --> 00:04:12,840
television and internet provider would

00:04:10,680 --> 00:04:16,430
use this to connect up all of their

00:04:12,840 --> 00:04:20,549
routers over least links between sites

00:04:16,430 --> 00:04:23,130
this would give you more routing choices

00:04:20,549 --> 00:04:26,000
or a simpler routing choices for a lot

00:04:23,130 --> 00:04:26,000
of those those links

00:04:26,800 --> 00:04:30,910
so there's a couple things that you need

00:04:29,080 --> 00:04:36,130
to be aware of when you want to use

00:04:30,910 --> 00:04:42,760
writing domains in OpenBSD you need to

00:04:36,130 --> 00:04:44,320
have a valid route I would say that so

00:04:42,760 --> 00:04:45,280
my recommendation is having a default

00:04:44,320 --> 00:04:47,320
route and they were in the routing

00:04:45,280 --> 00:04:52,810
domain even if the writing domain is

00:04:47,320 --> 00:04:55,570
only used to receive traffic from in the

00:04:52,810 --> 00:04:57,460
open busey Network stack we check the

00:04:55,570 --> 00:05:00,250
packets when they arrive for a variety

00:04:57,460 --> 00:05:03,730
of things is the checksum valid is an

00:05:00,250 --> 00:05:05,560
actually valid ipv4 IP packet etc and

00:05:03,730 --> 00:05:10,030
one of the checks that we do is we check

00:05:05,560 --> 00:05:12,370
do we have a route to send this packet

00:05:10,030 --> 00:05:14,920
to can we send it to its destination and

00:05:12,370 --> 00:05:17,890
we check this extremely early we check

00:05:14,920 --> 00:05:19,840
it before PF so you cannot use PF to

00:05:17,890 --> 00:05:25,090
steal the packet and move it to another

00:05:19,840 --> 00:05:27,760
routing domain at a previous job I was

00:05:25,090 --> 00:05:30,220
professionally supporting this with

00:05:27,760 --> 00:05:34,000
event Roenick systems and I would say

00:05:30,220 --> 00:05:36,820
about 80 to 90% of my support calls for

00:05:34,000 --> 00:05:40,090
writing domains was a missing default

00:05:36,820 --> 00:05:41,490
route so that should probably be one of

00:05:40,090 --> 00:05:43,570
the first thing that you do on this

00:05:41,490 --> 00:05:45,940
otherwise the packet arrives and you

00:05:43,570 --> 00:05:48,490
have no idea where it goes

00:05:45,940 --> 00:05:51,400
debugging can be painful because it is a

00:05:48,490 --> 00:05:53,770
different routing domain it may not

00:05:51,400 --> 00:05:56,740
always be where you think it is you when

00:05:53,770 --> 00:05:59,500
you run like route commands or other

00:05:56,740 --> 00:06:01,810
interface commands they all they by

00:05:59,500 --> 00:06:08,380
default operate on writing the name zero

00:06:01,810 --> 00:06:09,490
they can also operate on the the the

00:06:08,380 --> 00:06:13,600
writing the main can also be applied to

00:06:09,490 --> 00:06:15,790
processes which I will show later on so

00:06:13,600 --> 00:06:17,020
it's how do you know which writing

00:06:15,790 --> 00:06:19,300
domain that you're in you need to

00:06:17,020 --> 00:06:21,280
explicitly remember this and when you

00:06:19,300 --> 00:06:25,240
look at when you have when you build a

00:06:21,280 --> 00:06:27,520
mental image of the routing table you

00:06:25,240 --> 00:06:29,320
need to know which writing table it

00:06:27,520 --> 00:06:35,110
actually belongs to so you know where

00:06:29,320 --> 00:06:36,700
where it goes sometimes you want to keep

00:06:35,110 --> 00:06:38,350
the routing tables completely separate

00:06:36,700 --> 00:06:39,340
and the writing domains completely

00:06:38,350 --> 00:06:42,280
separate from each other and

00:06:39,340 --> 00:06:44,110
do normal routing through that that is

00:06:42,280 --> 00:06:46,480
the default use case and that works just

00:06:44,110 --> 00:06:48,100
perfectly fine through OpenBSD but

00:06:46,480 --> 00:06:49,870
occasionally you want to steal some

00:06:48,100 --> 00:06:52,960
traffic from one rounding domain and

00:06:49,870 --> 00:06:54,820
send it to another one in that case you

00:06:52,960 --> 00:06:59,080
would need to use a classifying engine

00:06:54,820 --> 00:07:00,790
and we use the PF framework -

00:06:59,080 --> 00:07:05,500
classifying to move the packets between

00:07:00,790 --> 00:07:10,240
the different writing domains so I will

00:07:05,500 --> 00:07:12,340
give a very simple set up here so you

00:07:10,240 --> 00:07:14,560
can see just how it is use and kind of

00:07:12,340 --> 00:07:18,220
build up a small network in your mind as

00:07:14,560 --> 00:07:21,220
I go through the other slides so

00:07:18,220 --> 00:07:24,700
probably the the key is the our domain

00:07:21,220 --> 00:07:28,320
one will assign the the running domain

00:07:24,700 --> 00:07:31,330
number one to the interface re0

00:07:28,320 --> 00:07:33,610
you need to do that to create a writing

00:07:31,330 --> 00:07:35,620
domain once the right of the main is

00:07:33,610 --> 00:07:38,800
created then you can start adding IP

00:07:35,620 --> 00:07:42,039
addresses and networks and routes and

00:07:38,800 --> 00:07:44,110
things like this when you add it when

00:07:42,039 --> 00:07:48,639
you when you change the routing domain

00:07:44,110 --> 00:07:51,100
of a network interface this will remove

00:07:48,639 --> 00:07:54,310
all configuration data from it so

00:07:51,100 --> 00:07:57,220
ordinarily when you make changes to an

00:07:54,310 --> 00:07:58,120
interface it leaves all the existing IP

00:07:57,220 --> 00:08:03,520
addresses on it

00:07:58,120 --> 00:08:05,710
however 1000 10 it may have a very

00:08:03,520 --> 00:08:08,260
important meaning on a different running

00:08:05,710 --> 00:08:09,400
the main and so we've decided that we

00:08:08,260 --> 00:08:11,830
just flush all the all the

00:08:09,400 --> 00:08:15,310
configurations of this interface and

00:08:11,830 --> 00:08:19,479
flip it over so it's recommend that you

00:08:15,310 --> 00:08:21,610
do this first to simplify simplify your

00:08:19,479 --> 00:08:23,400
configurations and you don't think that

00:08:21,610 --> 00:08:27,280
you have things that you don't really

00:08:23,400 --> 00:08:32,320
and then we create a local host on ello

00:08:27,280 --> 00:08:34,450
one that's just an arbitrary loopback

00:08:32,320 --> 00:08:36,909
interface you can choose whichever

00:08:34,450 --> 00:08:39,370
number you want to make things easier

00:08:36,909 --> 00:08:43,900
for myself I tend to use the same number

00:08:39,370 --> 00:08:46,630
as the writing domain it makes it a much

00:08:43,900 --> 00:08:49,690
easier to to imagine things and then I

00:08:46,630 --> 00:08:53,110
add a default route here pointing to

00:08:49,690 --> 00:08:55,750
1001 and I add this to the right

00:08:53,110 --> 00:09:00,100
number one and then because I want to be

00:08:55,750 --> 00:09:04,750
able to login with SSH on this we

00:09:00,100 --> 00:09:08,079
extended route to have an exec option to

00:09:04,750 --> 00:09:10,740
execute commands similar in the style of

00:09:08,079 --> 00:09:17,430
sudo except this runs it actually in

00:09:10,740 --> 00:09:20,170
that running domain and so this is a

00:09:17,430 --> 00:09:22,390
slightly cleaned up example of what it

00:09:20,170 --> 00:09:24,310
looks like so you see here you have the

00:09:22,390 --> 00:09:30,149
routing domain one has been changed the

00:09:24,310 --> 00:09:34,360
rest of it is normal same thing here and

00:09:30,149 --> 00:09:37,930
then also in that stat to take a look at

00:09:34,360 --> 00:09:41,140
your two routing table you add the - t1

00:09:37,930 --> 00:09:43,329
option and that will show you the

00:09:41,140 --> 00:09:46,329
routing table only for that specific

00:09:43,329 --> 00:09:48,339
routing domain as I mentioned earlier if

00:09:46,329 --> 00:09:50,649
you run just regular netstat it'll show

00:09:48,339 --> 00:09:56,050
you for the default routing domain which

00:09:50,649 --> 00:10:00,130
is also known as running domain 0 and

00:09:56,050 --> 00:10:01,930
here's an example from PF to make

00:10:00,130 --> 00:10:08,339
decisions and things with running the

00:10:01,930 --> 00:10:11,410
mains so this this anchor block here is

00:10:08,339 --> 00:10:14,019
any packet that arrives on routing the

00:10:11,410 --> 00:10:16,360
main number 15 will have this rule set

00:10:14,019 --> 00:10:20,709
applied it's a fairly fairly simple rule

00:10:16,360 --> 00:10:24,820
set default to block allow ICMP and we

00:10:20,709 --> 00:10:28,630
have a web server there apparently this

00:10:24,820 --> 00:10:31,690
line here well similar to this rule pass

00:10:28,630 --> 00:10:34,779
in traffic from that arrives on run

00:10:31,690 --> 00:10:35,800
anything number two and it'll retag it

00:10:34,779 --> 00:10:39,190
and send it out and running the main

00:10:35,800 --> 00:10:43,060
number four and then this line here

00:10:39,190 --> 00:10:47,230
allows us to aim at an at so any traffic

00:10:43,060 --> 00:10:50,130
coming from 10 0 / 16 going outside of

00:10:47,230 --> 00:10:52,899
the network moving that to the egress

00:10:50,130 --> 00:11:00,300
interface and will be put out on our

00:10:52,899 --> 00:11:02,709
table 20 so as you can see you can add

00:11:00,300 --> 00:11:06,700
white a few different things with PF you

00:11:02,709 --> 00:11:10,140
can use it as a selector and as a

00:11:06,700 --> 00:11:10,140
classifier so you can move the packets

00:11:14,580 --> 00:11:21,280
so what are some things that you would

00:11:17,230 --> 00:11:22,690
so in a very very common scenario in vrf

00:11:21,280 --> 00:11:25,060
light is that you would have a shared

00:11:22,690 --> 00:11:27,310
infrastructure you would have you know

00:11:25,060 --> 00:11:29,020
you'd be for example an isp you have a

00:11:27,310 --> 00:11:32,260
variety of customers connecting into

00:11:29,020 --> 00:11:35,020
your network directly and they like all

00:11:32,260 --> 00:11:37,150
customers use 10/8 as their IP address

00:11:35,020 --> 00:11:39,550
range and so they would want to come in

00:11:37,150 --> 00:11:43,000
and not have their traffic conflict with

00:11:39,550 --> 00:11:45,550
each other but you have backup servers

00:11:43,000 --> 00:11:46,780
that all of them use you have syslog

00:11:45,550 --> 00:11:49,960
servers all of them you use you would

00:11:46,780 --> 00:11:51,010
have you know whatever services that

00:11:49,960 --> 00:11:54,580
you're providing to them

00:11:51,010 --> 00:11:59,740
that all these customers would use so

00:11:54,580 --> 00:12:02,110
you would need to do so for you

00:11:59,740 --> 00:12:04,540
PF configurations to allow these sort of

00:12:02,110 --> 00:12:13,600
things in the classify based on on your

00:12:04,540 --> 00:12:16,390
needs you can have and as the the NAT 2

00:12:13,600 --> 00:12:19,750
example shows you could have many many

00:12:16,390 --> 00:12:21,010
many clients of yours go through

00:12:19,750 --> 00:12:23,440
multiple routing domains and then be

00:12:21,010 --> 00:12:27,040
sent out another one so they can share

00:12:23,440 --> 00:12:30,010
the same bandwidth pipe so for example

00:12:27,040 --> 00:12:32,980
this this NAT 2 line was actually used

00:12:30,010 --> 00:12:35,350
by one of our customers I've courted

00:12:32,980 --> 00:12:38,260
Gnana mised it but that was used by one

00:12:35,350 --> 00:12:42,370
of our customers to provide Internet

00:12:38,260 --> 00:12:45,520
services for I believe 10 client systems

00:12:42,370 --> 00:12:47,170
or 10 client routing domains and they

00:12:45,520 --> 00:12:53,140
all can't went out the same IP address

00:12:47,170 --> 00:12:55,690
and however all the traffic was fully

00:12:53,140 --> 00:12:58,990
separated in the writing domains on the

00:12:55,690 --> 00:13:00,610
inside of their network of course you

00:12:58,990 --> 00:13:01,870
can put monitoring servers and and

00:13:00,610 --> 00:13:06,880
whatever else you would need to share in

00:13:01,870 --> 00:13:10,000
infrastructure then you get to the full

00:13:06,880 --> 00:13:11,680
v RF or MPLS requires two different

00:13:10,000 --> 00:13:15,220
things it requires a label distribution

00:13:11,680 --> 00:13:19,390
protocol and in bgp to actually

00:13:15,220 --> 00:13:20,410
distribute the networks you would use LD

00:13:19,390 --> 00:13:23,530
pd to just

00:13:20,410 --> 00:13:25,540
to label each of the end points so it

00:13:23,530 --> 00:13:28,570
knows which network it belongs to and

00:13:25,540 --> 00:13:30,850
the distributed this across across the

00:13:28,570 --> 00:13:32,800
network and then on top of that you

00:13:30,850 --> 00:13:35,710
would have BGP that would distribute the

00:13:32,800 --> 00:13:40,450
network's aiming at each of the end

00:13:35,710 --> 00:13:44,020
point tunnels that will be basically all

00:13:40,450 --> 00:13:45,640
of the full vrf for now because as I

00:13:44,020 --> 00:13:48,250
mentioned I spent most of our time in VR

00:13:45,640 --> 00:13:53,920
flight and I simply don't remember all

00:13:48,250 --> 00:13:55,630
those details right now right now so as

00:13:53,920 --> 00:13:58,780
we put this into production we discover

00:13:55,630 --> 00:14:01,840
a lot of interesting things that happen

00:13:58,780 --> 00:14:05,560
to us as we're going through this the

00:14:01,840 --> 00:14:08,020
first one was the route exec and that

00:14:05,560 --> 00:14:10,150
was originally just a hack tool for us

00:14:08,020 --> 00:14:11,620
just to set up things and just get it

00:14:10,150 --> 00:14:13,660
working really fast without having to

00:14:11,620 --> 00:14:14,770
add routing the main support to each of

00:14:13,660 --> 00:14:22,090
the individual Damons

00:14:14,770 --> 00:14:24,970
that we wanted to add add to it it turns

00:14:22,090 --> 00:14:28,410
out to be now the officially recommended

00:14:24,970 --> 00:14:31,990
way to start multiple services in this

00:14:28,410 --> 00:14:35,170
when you have a a for example a web

00:14:31,990 --> 00:14:37,240
server and it is listening on it's

00:14:35,170 --> 00:14:39,340
listening on on ports it's bound

00:14:37,240 --> 00:14:41,680
normally to the default routing domain

00:14:39,340 --> 00:14:43,330
of routing the main 0 what if you also

00:14:41,680 --> 00:14:48,010
want it to listen on route in the main

00:14:43,330 --> 00:14:50,440
20 well either you can use you can use

00:14:48,010 --> 00:14:53,380
PF to take the traffic and send it

00:14:50,440 --> 00:14:56,320
across as necessary or you can start up

00:14:53,380 --> 00:14:57,910
a completely second instance possibly

00:14:56,320 --> 00:15:01,660
different configurations possibly

00:14:57,910 --> 00:15:06,430
pointing to a different area with the

00:15:01,660 --> 00:15:09,160
right exec this is the primary thing

00:15:06,430 --> 00:15:11,740
that we use now there are a few things

00:15:09,160 --> 00:15:13,180
basically network tools things that set

00:15:11,740 --> 00:15:18,250
the set routes

00:15:13,180 --> 00:15:19,870
need-to-know natively about about which

00:15:18,250 --> 00:15:21,970
running domain they are and there's a

00:15:19,870 --> 00:15:23,140
limited number of other Damons that need

00:15:21,970 --> 00:15:29,470
to know this which I'll get to in a few

00:15:23,140 --> 00:15:31,480
minutes yeah so adding a artemon to an

00:15:29,470 --> 00:15:33,360
interface as i mentioned it does erase

00:15:31,480 --> 00:15:34,739
the IP address configuration

00:15:33,360 --> 00:15:35,850
so it's highly recommended that you do

00:15:34,739 --> 00:15:37,049
this first thing before you start

00:15:35,850 --> 00:15:39,899
setting up the rest of it

00:15:37,049 --> 00:15:42,269
you also get into the question of what

00:15:39,899 --> 00:15:44,999
if you have you know your your 10

00:15:42,269 --> 00:15:47,069
Gigabit link into your switch and you

00:15:44,999 --> 00:15:49,110
want to have multiple VLANs on different

00:15:47,069 --> 00:15:51,569
routing domains connecting over the same

00:15:49,110 --> 00:15:56,220
link there's no issue there

00:15:51,569 --> 00:15:58,439
provided that the the child and the

00:15:56,220 --> 00:16:01,829
parent relationship is actually fairly

00:15:58,439 --> 00:16:03,439
split as it is with VLANs so there's no

00:16:01,829 --> 00:16:06,869
issues with that and you can even have

00:16:03,439 --> 00:16:09,089
native untagged traffic beyond writing

00:16:06,869 --> 00:16:11,660
the main five and then a VLAN sitting on

00:16:09,089 --> 00:16:15,749
top of that beyond writing the main 20

00:16:11,660 --> 00:16:18,869
and then you run into carp carp is

00:16:15,749 --> 00:16:20,519
actually it's mostly a full interface

00:16:18,869 --> 00:16:23,429
but there's enough that bleeds over to

00:16:20,519 --> 00:16:25,589
its parent and so the carp and the

00:16:23,429 --> 00:16:27,720
parent interface for carp must be in the

00:16:25,589 --> 00:16:31,589
same routing domain however you can do

00:16:27,720 --> 00:16:33,749
carp on VLAN unphysical and the Karpin

00:16:31,589 --> 00:16:34,829
VLAN can be on one writing domain and

00:16:33,749 --> 00:16:35,910
then you could have another set in

00:16:34,829 --> 00:16:41,189
another set another set there's no

00:16:35,910 --> 00:16:43,709
issues there fda-approved proxy we ran

00:16:41,189 --> 00:16:46,649
into a problem with this originally ftp

00:16:43,709 --> 00:16:49,079
proxy only allowed you to change one of

00:16:46,649 --> 00:16:52,369
only the destination routing routing

00:16:49,079 --> 00:16:55,259
domain turns out that this customer

00:16:52,369 --> 00:16:58,019
wanted nothing at all to run on the

00:16:55,259 --> 00:17:00,959
default routing domain that added a lot

00:16:58,019 --> 00:17:04,049
of very very interesting things that we

00:17:00,959 --> 00:17:05,639
had to add and support similar to what

00:17:04,049 --> 00:17:07,709
Ted was talking about in his talk about

00:17:05,639 --> 00:17:09,809
hostile environments if you can change

00:17:07,709 --> 00:17:13,860
something force it to change and see

00:17:09,809 --> 00:17:16,260
what breaks so they wanted to do FTP

00:17:13,860 --> 00:17:21,269
from and to different routing domains so

00:17:16,260 --> 00:17:23,669
we had to add support for this yeah so

00:17:21,269 --> 00:17:28,019
so the source and destination remains do

00:17:23,669 --> 00:17:30,419
match her for your thing ntpd became a

00:17:28,019 --> 00:17:33,210
very interesting problem for us because

00:17:30,419 --> 00:17:37,340
as I mentioned before normally you would

00:17:33,210 --> 00:17:39,570
use route exec to run the daemon again

00:17:37,340 --> 00:17:43,260
well what happens when you run multiple

00:17:39,570 --> 00:17:45,179
ntp demons on your machine they start

00:17:43,260 --> 00:17:47,370
fighting each other and time gets wildly

00:17:45,179 --> 00:17:50,370
out of sync on my test

00:17:47,370 --> 00:17:52,650
laptop I had about five different NTP

00:17:50,370 --> 00:17:56,760
Damon's running and after 30 minutes of

00:17:52,650 --> 00:18:00,240
wall time my clock was about five months

00:17:56,760 --> 00:18:03,300
ahead yeah

00:18:00,240 --> 00:18:04,410
so you yeah that gets very very ugly you

00:18:03,300 --> 00:18:06,360
don't want it you don't want to do that

00:18:04,410 --> 00:18:08,520
on as mr. Sheen that is either

00:18:06,360 --> 00:18:13,830
pretending to use time or pretending to

00:18:08,520 --> 00:18:16,559
serve time so I added quite a bit of

00:18:13,830 --> 00:18:19,080
configuration options to ntpd that allow

00:18:16,559 --> 00:18:22,350
you to for each of the individual listen

00:18:19,080 --> 00:18:24,150
server peer whatever to individually

00:18:22,350 --> 00:18:29,100
select which routing domain that it's

00:18:24,150 --> 00:18:30,300
using so you so you just run one ntpd

00:18:29,100 --> 00:18:32,160
and then you set up all your

00:18:30,300 --> 00:18:34,679
configuration so you want to listen only

00:18:32,160 --> 00:18:36,630
on the external and running at me 20 but

00:18:34,679 --> 00:18:38,100
you want to have individual services on

00:18:36,630 --> 00:18:44,040
running mains three four five and six

00:18:38,100 --> 00:18:46,470
and then as I showed earlier you have

00:18:44,040 --> 00:18:48,900
the on our domain option and that was

00:18:46,470 --> 00:18:50,700
added after the initial release because

00:18:48,900 --> 00:18:53,580
we discovered that we just wanted to

00:18:50,700 --> 00:18:55,470
match on all packets that arrived in on

00:18:53,580 --> 00:18:57,450
this writing domain that allowed us to

00:18:55,470 --> 00:19:05,940
radically simplify a lot of these rules

00:18:57,450 --> 00:19:07,350
that we were writing for them so yeah so

00:19:05,940 --> 00:19:11,130
best practices when you're running this

00:19:07,350 --> 00:19:14,520
is you definitely definitely want

00:19:11,130 --> 00:19:17,550
default routes or a full routing view in

00:19:14,520 --> 00:19:17,910
each routing domain this will bite you

00:19:17,550 --> 00:19:20,220
in the ass

00:19:17,910 --> 00:19:26,460
it will be very very painful and it's a

00:19:20,220 --> 00:19:29,190
very very common mistake as I said 80 to

00:19:26,460 --> 00:19:31,620
90% of my of all of our support calls at

00:19:29,190 --> 00:19:34,740
this company were due to missing routes

00:19:31,620 --> 00:19:38,309
and it will confuse the heck out of you

00:19:34,740 --> 00:19:40,800
so just do that take a look at what

00:19:38,309 --> 00:19:43,380
tricks are available in PF comms and see

00:19:40,800 --> 00:19:45,510
what you can do to simplify your

00:19:43,380 --> 00:19:48,690
configuration and to allow you to get a

00:19:45,510 --> 00:19:51,870
more accurate view of what you're trying

00:19:48,690 --> 00:19:54,660
to do and definitely spend as much time

00:19:51,870 --> 00:19:57,870
as you can in the planning stages both

00:19:54,660 --> 00:19:59,580
to both to minimize how many writing the

00:19:57,870 --> 00:20:01,530
means that you actually need to use and

00:19:59,580 --> 00:20:04,440
so you have a

00:20:01,530 --> 00:20:06,210
good solid understanding of what your

00:20:04,440 --> 00:20:11,340
network will look like after you have

00:20:06,210 --> 00:20:13,230
started deploying this it is complex a

00:20:11,340 --> 00:20:15,810
lot of people really want this feature

00:20:13,230 --> 00:20:19,460
because it is pushed quite heavily by

00:20:15,810 --> 00:20:21,960
some vendors and by some consultants who

00:20:19,460 --> 00:20:23,430
think it is a very neat idea

00:20:21,960 --> 00:20:25,380
which it is and they think that your

00:20:23,430 --> 00:20:28,380
network needs it which likely does not

00:20:25,380 --> 00:20:31,530
if you have control over all of the IP

00:20:28,380 --> 00:20:32,670
addresses in your network you very

00:20:31,530 --> 00:20:35,370
likely don't need it

00:20:32,670 --> 00:20:38,310
you can do everything else with normal

00:20:35,370 --> 00:20:41,040
traditional firewalling and v-- laning

00:20:38,310 --> 00:20:42,750
and segmentation but if you have

00:20:41,040 --> 00:20:45,300
multiple income if you have multiple

00:20:42,750 --> 00:20:46,950
links to third parties and you don't

00:20:45,300 --> 00:20:50,370
have control over what IP addresses they

00:20:46,950 --> 00:20:54,390
use especially if they're using internal

00:20:50,370 --> 00:20:56,040
RFC 1918 style addresses then writing

00:20:54,390 --> 00:21:05,370
the mains could be a good solution for

00:20:56,040 --> 00:21:09,900
this problem okay so uh I ran faster

00:21:05,370 --> 00:21:13,260
than I thought I do want to give special

00:21:09,900 --> 00:21:15,650
thanks so Henning Bower from OpenBSD

00:21:13,260 --> 00:21:18,360
project he added the initial routing

00:21:15,650 --> 00:21:20,760
multiple routing table support to the

00:21:18,360 --> 00:21:23,310
system he actually did that originally

00:21:20,760 --> 00:21:26,510
not for this feature but so he can get

00:21:23,310 --> 00:21:28,500
rid of the route to option in PF

00:21:26,510 --> 00:21:31,550
unfortunately it doesn't solve all of

00:21:28,500 --> 00:21:34,290
his problems so he still has to keep it

00:21:31,550 --> 00:21:38,070
Claudio Decker who is actually giving a

00:21:34,290 --> 00:21:40,260
talk right now about I scuzzy he

00:21:38,070 --> 00:21:43,950
actually wrote pretty much most of the

00:21:40,260 --> 00:21:45,900
code and explained it all did all the

00:21:43,950 --> 00:21:47,970
translations of the Cisco speak to what

00:21:45,900 --> 00:21:49,560
to what we call it and then answered all

00:21:47,970 --> 00:21:51,150
of my asinine questions as we were as

00:21:49,560 --> 00:21:52,680
we're getting up and going and he's the

00:21:51,150 --> 00:21:54,590
one who really beats into my head that

00:21:52,680 --> 00:21:57,450
we need to have to all the proper routes

00:21:54,590 --> 00:22:01,170
and I definitely need to thank Mike

00:21:57,450 --> 00:22:02,940
floater who actually did a lot of the

00:22:01,170 --> 00:22:04,740
work on integrating this into open BSD

00:22:02,940 --> 00:22:07,800
did a lot of the testing with us as well

00:22:04,740 --> 00:22:12,860
he also funded this with the company

00:22:07,800 --> 00:22:21,570
that he owned at the time so

00:22:12,860 --> 00:22:26,210
or any any questions no questions

00:22:21,570 --> 00:22:34,980
everyone understands nobody understands

00:22:26,210 --> 00:22:38,130
excellence I have to have two of Tim I'm

00:22:34,980 --> 00:22:40,500
of two minds with writing domains it is

00:22:38,130 --> 00:22:42,919
really cool and that we needed to to add

00:22:40,500 --> 00:22:45,780
support to for ipv6 which I finished up

00:22:42,919 --> 00:22:49,020
at a recent hackathon probably bout a

00:22:45,780 --> 00:22:52,230
year ago and because we need to make it

00:22:49,020 --> 00:22:55,559
full full featured on the other hand for

00:22:52,230 --> 00:22:58,260
most networks that people have this is

00:22:55,559 --> 00:23:00,299
overkill you don't need it it's very

00:22:58,260 --> 00:23:04,500
similar to like running a full BGP

00:23:00,299 --> 00:23:10,610
installation for your house you don't

00:23:04,500 --> 00:23:14,460
have a dynamic routing edge for you I

00:23:10,610 --> 00:23:18,030
wish PF is one thing deep flow BGP at

00:23:14,460 --> 00:23:20,600
your house is another most people simply

00:23:18,030 --> 00:23:23,039
don't have that type of networking at

00:23:20,600 --> 00:23:24,450
their location so it does it so the

00:23:23,039 --> 00:23:27,960
technology doesn't make a lot of sense

00:23:24,450 --> 00:23:29,309
to be used but when it but when you do

00:23:27,960 --> 00:23:31,470
need the sort of thing then we want to

00:23:29,309 --> 00:23:41,460
make it as powerful as possible and as

00:23:31,470 --> 00:23:51,030
useful as possible for you sorry we have

00:23:41,460 --> 00:23:54,510
a good question stop clapping it's

00:23:51,030 --> 00:23:56,490
possible to see or all our roots for

00:23:54,510 --> 00:23:59,850
different domains in one common not to

00:23:56,490 --> 00:24:01,169
check everyone know you have you would

00:23:59,850 --> 00:24:03,780
have to enumerate each of each of them

00:24:01,169 --> 00:24:06,150
separately yes okay thank you yep

00:24:03,780 --> 00:24:07,950
but when you do run the if config

00:24:06,150 --> 00:24:09,750
command that will tell you all of the

00:24:07,950 --> 00:24:12,650
interfaces that have a routing domain

00:24:09,750 --> 00:24:12,650
attached to them

00:24:22,840 --> 00:24:28,990
so just to be sure I understand

00:24:25,190 --> 00:24:31,570
correctly mmm so you're essentially a

00:24:28,990 --> 00:24:33,590
normal writing tip which is for

00:24:31,570 --> 00:24:39,350
everything no money and then you create

00:24:33,590 --> 00:24:42,140
the traffic domain which are basically

00:24:39,350 --> 00:24:43,280
yeah so so the when you start the

00:24:42,140 --> 00:24:46,059
machine and you get your Norton you

00:24:43,280 --> 00:24:48,830
start the networking layer you get a

00:24:46,059 --> 00:24:49,940
routing domain for yourself and by

00:24:48,830 --> 00:24:54,290
default it's writing the main number

00:24:49,940 --> 00:24:56,240
zero and within so that is that's the

00:24:54,290 --> 00:24:57,830
default that starts up with if you do

00:24:56,240 --> 00:24:59,510
nothing then nothing changes and

00:24:57,830 --> 00:25:03,320
everything behaves as you would normally

00:24:59,510 --> 00:25:04,940
expect when you start adding new new

00:25:03,320 --> 00:25:07,010
routing domains what happens is that

00:25:04,940 --> 00:25:08,450
that interface gets removed from the

00:25:07,010 --> 00:25:12,230
default routing domain it gets placed

00:25:08,450 --> 00:25:14,540
into its own separate one and so the

00:25:12,230 --> 00:25:20,000
traffic cannot cross over unless you use

00:25:14,540 --> 00:25:22,840
a technique like PF or you can route

00:25:20,000 --> 00:25:25,429
exec or you can even do a loopback

00:25:22,840 --> 00:25:26,900
from you know from your machine out to

00:25:25,429 --> 00:25:29,049
the switch and then back in on a

00:25:26,900 --> 00:25:36,860
different routing domain if you want

00:25:29,049 --> 00:25:38,179
which it makes sense sometimes like you

00:25:36,860 --> 00:25:53,960
have to do that sort of thing

00:25:38,179 --> 00:25:57,770
on occasion I I'm not familiar with it I

00:25:53,960 --> 00:26:00,110
haven't used it myself but it's probably

00:25:57,770 --> 00:26:01,669
very similar to to what Cisco calls the

00:26:00,110 --> 00:26:03,169
air flights they are the ones who wrote

00:26:01,669 --> 00:26:05,120
all the standards for this and wrote it

00:26:03,169 --> 00:26:08,950
all document all the original

00:26:05,120 --> 00:26:14,320
documentation so most people trying and

00:26:08,950 --> 00:26:14,320
behave in similar ways to what Cisco did

00:26:15,309 --> 00:26:47,539
yeah I am guessing so yes so yeah so as

00:26:45,649 --> 00:26:49,760
I mentioned so most of the hardware the

00:26:47,539 --> 00:26:52,850
hardware router vendors do this sort of

00:26:49,760 --> 00:26:56,750
thing they call it V RF and so Cisco

00:26:52,850 --> 00:26:57,590
certainly does it Juniper does it 3com

00:26:56,750 --> 00:26:59,330
does it I think

00:26:57,590 --> 00:27:02,690
Alcatel does it and like all the major

00:26:59,330 --> 00:27:06,710
ones do it as far as free software do as

00:27:02,690 --> 00:27:09,370
far as free software goes FreeBSD has it

00:27:06,710 --> 00:27:13,960
I don't remember what it's called I

00:27:09,370 --> 00:27:18,590
think so mm-hmm

00:27:13,960 --> 00:27:21,440
it's related to fibs it's multiple

00:27:18,590 --> 00:27:23,389
kernel fibs is important and that is

00:27:21,440 --> 00:27:27,590
what we call a routing tape an art on

00:27:23,389 --> 00:27:28,820
our table who is a different fib in it's

00:27:27,590 --> 00:27:32,240
it's part of it I just don't remember

00:27:28,820 --> 00:27:36,139
the name it's it's not very well known

00:27:32,240 --> 00:27:38,169
and Linux certainly has it but I just

00:27:36,139 --> 00:27:40,610
don't remember that it is because I

00:27:38,169 --> 00:27:43,000
avoid using that work and we run Linux

00:27:40,610 --> 00:27:43,000
whenever possible

00:27:47,880 --> 00:27:58,169
a question there on the side yeah one

00:27:51,480 --> 00:28:01,830
more yeah just to get clarification on

00:27:58,169 --> 00:28:04,950
the sing autotrophic exchange between

00:28:01,830 --> 00:28:08,760
routing domains you said the only way to

00:28:04,950 --> 00:28:14,360
do this is using PF right yeah okay um

00:28:08,760 --> 00:28:21,090
did you choose to use PF mmm to have

00:28:14,360 --> 00:28:22,320
stateful routing while PF gives us say

00:28:21,090 --> 00:28:22,919
for routing and that makes things a lot

00:28:22,320 --> 00:28:24,960
easier

00:28:22,919 --> 00:28:26,940
the main reason is because we did not

00:28:24,960 --> 00:28:29,850
want to create a a separate

00:28:26,940 --> 00:28:31,500
classification engine PF already knows

00:28:29,850 --> 00:28:35,760
all of this and PF would already have to

00:28:31,500 --> 00:28:37,830
deal with moving packets v through an

00:28:35,760 --> 00:28:41,190
arriving domain even if it never changed

00:28:37,830 --> 00:28:44,039
writing domains and so it did not it did

00:28:41,190 --> 00:28:46,740
not does not make sense to us to add yet

00:28:44,039 --> 00:28:49,289
another thing because what for example

00:28:46,740 --> 00:28:53,130
we moved all of the alt Q classification

00:28:49,289 --> 00:28:55,919
into PF and we move the we moved away

00:28:53,130 --> 00:28:58,350
from the separate NAT table into PF and

00:28:55,919 --> 00:29:01,309
so we're using PF to tag the packets and

00:28:58,350 --> 00:29:05,970
to make those decisions for us I

00:29:01,309 --> 00:29:09,390
understand because I had I had a simple

00:29:05,970 --> 00:29:10,799
set a similar set up some time ago with

00:29:09,390 --> 00:29:12,720
Juno's yep

00:29:10,799 --> 00:29:16,830
and they call it a routing instant --is

00:29:12,720 --> 00:29:21,450
but they braked it badly because they

00:29:16,830 --> 00:29:23,850
don't have that set for routing so in

00:29:21,450 --> 00:29:25,980
the north case you have to create rows

00:29:23,850 --> 00:29:28,169
back and forth between the are domains

00:29:25,980 --> 00:29:30,809
which makes them practically unusable

00:29:28,169 --> 00:29:32,850
yeah exactly and then that we wanted to

00:29:30,809 --> 00:29:36,450
definitely simplify our lives and we and

00:29:32,850 --> 00:29:38,190
we figured that since PF knows so much

00:29:36,450 --> 00:29:41,299
about the network then we just do it in

00:29:38,190 --> 00:29:49,280
there makes little sense to me okay

00:29:41,299 --> 00:29:49,280
other questions all right thank you

00:29:52,400 --> 00:29:56,489

YouTube URL: https://www.youtube.com/watch?v=5bcsDxmE0-A


