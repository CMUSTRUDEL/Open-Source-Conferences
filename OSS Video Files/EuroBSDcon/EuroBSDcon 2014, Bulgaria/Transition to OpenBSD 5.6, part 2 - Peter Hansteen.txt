Title: Transition to OpenBSD 5.6, part 2 - Peter Hansteen
Publication date: 2019-10-13
Playlist: EuroBSDcon 2014, Bulgaria
Description: 
	Who should take this course:

The intended audience or attendee profile is anybody who is considering making the jump to OpenBSD 5.6. You may be considering moving your systems wholly or partly to the new release from an earlier OpenBSD release or to move specific parts of your operation from a different Unix-like operating system to OpenBSD.To help make the session more targeted to your specific interests and needs, I would appreciate if, when you sign up for the session or soon after, send me an email to transition@bsdly.net with a brief description of what you would like to learn in this session, and to the extent you are allowed and feel it is appropriate, what your near or longer term future OpenBSD project is.

Description:

OpenBSD has been the source of a number of BSD innovations over the years, including but not limited to PF (the OpenBSD packet filter, now including a new traffic shaping engine), significantly improved IPSEC tools, OpenSSH (the free Secure Shell server and client), security enhancements including preemtive exploit mitigation, and various other advances of the art and engineering in various parts of the system.At the time of writing (early May 2014) the big news items for OpenBSD 5.6 seem to be the removal of the legacy ALTQ traffic shaping system after a one release grace period (the new traffic shaping system is now the only option), OpenSMTPD as the default mail transfer agent, the debut of the LibreSSL library as an in-tree developed project, the removal of BIND as the default DNS server in favor of nsd and unbound, plus switching the base httpd to nginx (retiring the forked apache 1.3), but it’s not set in stone yet and every release has enhancements that may not be immediately obvious until you start using the system.This session intends to help you tackle the transition to the newest OpenBSD release, highlighting enhancements in the new release and how to avoid any pitfalls that may turn up during the process.

Speaker biography:

Peter N. M. Hansteen is a consultant, writer and sysadmin based in Bergen, Norway. He has been tinkering with computers since the mid 1980s, mainly while working to document how the systems work and why they don’t, in English as well as his native Norwegian. Peter rediscovered Unixes about the time 386BSD appeared. After a few years on Linux, which included participation in the RFC1149 implementation (2001), he eventually migrated all important systems in his care to FreeBSD and OpenBSD.A long time freenix advocate, he is a member of the BLUG (Bergen (BSD and) Linux User Group) core group and a former vice president of NUUG (the Norwegian Unix User Group). During recent years a frequent lecturer and tutor with emphasis on OpenBSD and FreeBSD topics, author of several articles and The Book of PF (3rd edition No Starch Press 2011) and maintains his blogosphere presence at http://bsdly.blogspot.com.
Captions: 
	00:00:00,620 --> 00:00:09,000
turning on the microphone doesn't yeah

00:00:02,939 --> 00:00:12,330
okay it up twice it's nuts this

00:00:09,000 --> 00:00:16,560
time oh that's good oh now let's see if

00:00:12,330 --> 00:00:29,160
we can get some video up in here

00:00:16,560 --> 00:00:31,080
yes oh you've seen this already now that

00:00:29,160 --> 00:00:31,920
everybody's refreshed - any questions

00:00:31,080 --> 00:00:40,860
turn up

00:00:31,920 --> 00:00:46,399
well yes well if you're building your

00:00:40,860 --> 00:00:49,920
own ports you already it's a it's a

00:00:46,399 --> 00:00:51,300
parallel procedure well you can if

00:00:49,920 --> 00:00:55,140
you're building your own course you will

00:00:51,300 --> 00:01:00,300
check out the port Street um for keeping

00:00:55,140 --> 00:01:04,350
your packages of two dates its package

00:01:00,300 --> 00:01:08,150
ID - you updates from if they're all

00:01:04,350 --> 00:01:13,470
there has been a bit back and forth with

00:01:08,150 --> 00:01:15,689
updates for staples packages some

00:01:13,470 --> 00:01:18,110
periods we've had them others well for

00:01:15,689 --> 00:01:23,420
personal reasons there haven't been any

00:01:18,110 --> 00:01:26,420
so I would need to check what what the

00:01:23,420 --> 00:01:26,420
what

00:01:28,619 --> 00:01:35,939
what's the situation at at the moment

00:01:30,869 --> 00:01:38,450
but if you universe if there is an

00:01:35,939 --> 00:01:42,299
update to to the path to the package

00:01:38,450 --> 00:01:44,670
where it supports tree basically with

00:01:42,299 --> 00:01:47,579
the way the way you go for building a

00:01:44,670 --> 00:01:51,149
port locally is well chain changed that

00:01:47,579 --> 00:01:54,259
directory and Makemake install right in

00:01:51,149 --> 00:01:57,920
most cases that should shouldn't be

00:01:54,259 --> 00:02:00,780
shouldn't be really necessary because

00:01:57,920 --> 00:02:03,180
the the end product is the binary

00:02:00,780 --> 00:02:07,280
package anyway so package on package ad

00:02:03,180 --> 00:02:07,280
might as you get there is one available

00:02:08,239 --> 00:02:13,550
so anyway if you well for lazy people

00:02:12,540 --> 00:02:18,020
like me who

00:02:13,550 --> 00:02:23,060
from from snapshot to shush snapshot

00:02:18,020 --> 00:02:25,430
anyway there's upgrade for do the

00:02:23,060 --> 00:02:27,800
upgrade and do the package at - you go

00:02:25,430 --> 00:02:30,830
go get some coffee or something alright

00:02:27,800 --> 00:02:33,200
well and the system will will keep

00:02:30,830 --> 00:02:38,060
working anyway you can do do it in the

00:02:33,200 --> 00:02:40,490
background so some brittle applications

00:02:38,060 --> 00:02:44,150
like libera office sometimes get a

00:02:40,490 --> 00:02:48,760
little leafy libraries go away hundreds

00:02:44,150 --> 00:02:52,100
of them but you know it's and basically

00:02:48,760 --> 00:02:54,410
you will not see on things like your

00:02:52,100 --> 00:02:56,150
library version bumps will be but we'll

00:02:54,410 --> 00:02:57,830
release this anyway so it's really

00:02:56,150 --> 00:02:59,810
stable you won't really have that

00:02:57,830 --> 00:03:02,420
problem but you know there might be

00:02:59,810 --> 00:03:07,310
security updates to stuff like say

00:03:02,420 --> 00:03:09,820
Firefox so know there was it was a

00:03:07,310 --> 00:03:13,760
Firefox exploit this week was nice know

00:03:09,820 --> 00:03:17,180
like I'm not quite sure about the well

00:03:13,760 --> 00:03:18,770
the exact situation there but I'll pipe

00:03:17,180 --> 00:03:27,640
up a little mailing lists and something

00:03:18,770 --> 00:03:33,440
will tell you I guess now for upgrading

00:03:27,640 --> 00:03:41,870
we can almost do a demo upgrading rest

00:03:33,440 --> 00:03:49,630
of my notes here are no any suggestions

00:03:41,870 --> 00:03:49,630
any anything you're curious about yes

00:03:51,180 --> 00:04:07,859
oh go for it for the e for the Q mu oh I

00:04:05,430 --> 00:04:12,500
can fetch that from my command history I

00:04:07,859 --> 00:04:16,680
think oh I know just need to find the

00:04:12,500 --> 00:04:24,630
the correct journal which might be a

00:04:16,680 --> 00:04:28,070
challenge yes you know I'll I'll find it

00:04:24,630 --> 00:04:28,070
for you at some point

00:04:42,140 --> 00:04:44,170
Oh

00:04:57,580 --> 00:05:00,750
yeah here you

00:05:01,620 --> 00:05:12,000
so basically the you probably want

00:05:08,710 --> 00:05:12,000
larger fonts here

00:05:25,629 --> 00:05:31,210
I wish of course maybe the thing at a

00:05:27,249 --> 00:05:35,819
lot bigger sorry

00:05:31,210 --> 00:05:35,819
Alba just that in just a moment

00:05:42,070 --> 00:05:47,620
you know it's it applies to every term

00:05:44,440 --> 00:05:57,430
of my I have okay which will be sort of

00:05:47,620 --> 00:06:02,320
interesting after a while I guess anyway

00:05:57,430 --> 00:06:09,190
the the command line was yeah like you

00:06:02,320 --> 00:06:12,340
can probably see it up yes cue my system

00:06:09,190 --> 00:06:15,730
whatever the the imager you you will

00:06:12,340 --> 00:06:18,520
have created the image beforehand

00:06:15,730 --> 00:06:21,550
- cd-rom and you see it in the CD image

00:06:18,520 --> 00:06:23,200
so QM you can be well it's it's not a

00:06:21,550 --> 00:06:27,190
high-performance system but it's quite

00:06:23,200 --> 00:06:39,130
useful for just looking up stuff runs

00:06:27,190 --> 00:06:41,370
running running running emulations like

00:06:39,130 --> 00:06:44,430
and demonstrations like like these ones

00:06:41,370 --> 00:06:44,430
for a

00:07:03,380 --> 00:07:08,620
now if you wouldn't want to run a an

00:07:07,490 --> 00:07:12,380
upgrade

00:07:08,620 --> 00:07:16,840
well it'll be almost the same st the

00:07:12,380 --> 00:07:16,840
previous one was big

00:07:31,759 --> 00:07:37,250
well anyway well that's copying

00:07:58,270 --> 00:08:01,780
that we should

00:08:10,910 --> 00:08:17,240
actually I'm not quite sure which which

00:08:13,020 --> 00:08:24,389
be is the ID I just totally from but

00:08:17,240 --> 00:08:28,699
nice five six so you should be able to

00:08:24,389 --> 00:08:28,699
do an upgrade soon after this completes

00:08:30,379 --> 00:08:34,010
you for upgrade

00:08:40,780 --> 00:08:48,630
and the likely guess is your root

00:08:45,580 --> 00:08:55,720
filesystem doesn't process from check

00:08:48,630 --> 00:08:57,670
I'll ask politely whether well you have

00:08:55,720 --> 00:09:02,080
other file systems you want to check

00:08:57,670 --> 00:09:07,120
here's what I've also found the actually

00:09:02,080 --> 00:09:11,290
it uses the whatever configuration it

00:09:07,120 --> 00:09:19,450
finds on the on the root filesystem you

00:09:11,290 --> 00:09:21,760
provide for it it checks whether you

00:09:19,450 --> 00:09:24,940
want to to run a full the filesystem

00:09:21,760 --> 00:09:27,580
only ask if you want to do full file

00:09:24,940 --> 00:09:29,980
system checks on the on the non read

00:09:27,580 --> 00:09:34,150
file systems usually unless you know

00:09:29,980 --> 00:09:40,710
they're dirty well don't because they

00:09:34,150 --> 00:09:44,890
take does a very cursory check of the

00:09:40,710 --> 00:09:50,320
file systems anyway and as you can see

00:09:44,890 --> 00:09:53,890
the mountain mounting at this point you

00:09:50,320 --> 00:09:55,960
could as I mentioned earlier if you have

00:09:53,890 --> 00:10:01,270
the the upgrade sets on disk somewhere

00:09:55,960 --> 00:10:05,320
you know just disk and you will you will

00:10:01,270 --> 00:10:07,210
then next prompt will be where it where

00:10:05,320 --> 00:10:11,320
it is and your just everything is

00:10:07,210 --> 00:10:13,120
mounted under /mnt so it's um in my case

00:10:11,320 --> 00:10:16,690
it would be slightly I'm at M&T home

00:10:13,120 --> 00:10:20,110
Peter upgrade and go for it here we go

00:10:16,690 --> 00:10:25,450
for a CD which is the default anyway and

00:10:20,110 --> 00:10:31,500
I think we'll see here is the once we

00:10:25,450 --> 00:10:31,500
say which sense we want and I think you

00:10:31,680 --> 00:10:38,680
know I thought I thought we were going

00:10:35,470 --> 00:10:43,240
to see the the verification something

00:10:38,680 --> 00:10:48,430
went bad them anyway it's it just

00:10:43,240 --> 00:10:50,470
installs in a regular oh I screwed up

00:10:48,430 --> 00:10:53,190
something with the with the upgrade here

00:10:50,470 --> 00:10:55,470
then because on

00:10:53,190 --> 00:10:58,860
in most of the cases you would have seen

00:10:55,470 --> 00:11:01,290
the sign of hi verification first and

00:10:58,860 --> 00:11:03,300
then it starts installing from here on

00:11:01,290 --> 00:11:07,259
it's not really die interesting you know

00:11:03,300 --> 00:11:14,160
it's just regular install of our reg reg

00:11:07,259 --> 00:11:17,370
look upgrade it will at the end of here

00:11:14,160 --> 00:11:22,579
it will ask you to run sis merge which

00:11:17,370 --> 00:11:27,899
is well the same ID as freebies these

00:11:22,579 --> 00:11:29,129
merge master only well only only

00:11:27,899 --> 00:11:35,759
slightly different because this is

00:11:29,129 --> 00:11:39,509
Oakland and this would it can it used to

00:11:35,759 --> 00:11:44,009
be that it would require a pristine a

00:11:39,509 --> 00:11:46,589
source tree equivalent to your install

00:11:44,009 --> 00:11:49,220
sets it's been able to for quite a few

00:11:46,589 --> 00:11:54,839
of our releases to run off install sets

00:11:49,220 --> 00:11:57,089
for the pets and its exact sucess for

00:11:54,839 --> 00:11:59,759
the configuration for base system and

00:11:57,089 --> 00:12:02,399
the Nexus respectively now the yet set

00:11:59,759 --> 00:12:06,029
has been rolled into the base set anyway

00:12:02,399 --> 00:12:09,689
so you basically runs this merge and it

00:12:06,029 --> 00:12:15,350
will just merge your files much much the

00:12:09,689 --> 00:12:15,350
same as merged master does on FreeBSD

00:12:15,769 --> 00:12:21,000
depending on how far you jump it will be

00:12:18,350 --> 00:12:27,870
well a fairly quick and painless the

00:12:21,000 --> 00:12:31,040
conversion now I guess we could start

00:12:27,870 --> 00:12:38,040
going into the anecdotes of culling the

00:12:31,040 --> 00:12:40,649
the browser's well I don't know if

00:12:38,040 --> 00:12:41,939
anybody and have you follow me on

00:12:40,649 --> 00:12:44,880
Twitter or so forth

00:12:41,939 --> 00:12:48,630
if you do we would know that I have a

00:12:44,880 --> 00:12:53,129
sort of a young love-hate relationship

00:12:48,630 --> 00:12:54,509
with libera office I was well forgetting

00:12:53,129 --> 00:12:56,790
the during for doing the book us for

00:12:54,509 --> 00:12:58,680
since is a situation where I was writing

00:12:56,790 --> 00:13:00,480
writing stuff in Libre Office libera

00:12:58,680 --> 00:13:03,870
office has a number of bugs one of them

00:13:00,480 --> 00:13:07,149
is that if you're you do revision

00:13:03,870 --> 00:13:10,120
tracking as one does in no starch

00:13:07,149 --> 00:13:11,439
an editing process there is a high

00:13:10,120 --> 00:13:13,269
number of revisions you can actually

00:13:11,439 --> 00:13:18,490
have enough file before lebra office

00:13:13,269 --> 00:13:20,199
crashes so so so and of course it's and

00:13:18,490 --> 00:13:22,240
it's a memory hog the other memory hog

00:13:20,199 --> 00:13:24,670
is that any browser any modern browser

00:13:22,240 --> 00:13:24,850
is going to eat all memory to throw at

00:13:24,670 --> 00:13:28,569
it

00:13:24,850 --> 00:13:31,149
and and well I the time was running

00:13:28,569 --> 00:13:33,160
mainly run chrome which says quite

00:13:31,149 --> 00:13:38,769
helpfully and the package readme that

00:13:33,160 --> 00:13:45,850
the shared shared memory setting can be

00:13:38,769 --> 00:13:49,480
cranked to to accommodate stuff like

00:13:45,850 --> 00:13:51,850
here memory hogs like Chrome so I

00:13:49,480 --> 00:13:56,259
started doing that you can also do go by

00:13:51,850 --> 00:13:57,939
the by the you limit so this was well

00:13:56,259 --> 00:14:03,730
was still running on my whole think pad

00:13:57,939 --> 00:14:12,120
which was for a gig machine and it was

00:14:03,730 --> 00:14:16,079
getting painful and anyway if you log in

00:14:12,120 --> 00:14:21,009
on desktop you will be you will be one

00:14:16,079 --> 00:14:24,059
part of a staff staff group anyway these

00:14:21,009 --> 00:14:28,139
are these settings I data size infinity

00:14:24,059 --> 00:14:32,920
some of this is probably overkill and

00:14:28,139 --> 00:14:36,220
this baby here got up to a number where

00:14:32,920 --> 00:14:38,860
I think I'm probably up to about half

00:14:36,220 --> 00:14:41,620
the real memory in that system at the

00:14:38,860 --> 00:14:46,720
point but that's what at that point the

00:14:41,620 --> 00:14:49,209
the browser's started almost almost

00:14:46,720 --> 00:14:51,850
behaving not crashing randomly or just

00:14:49,209 --> 00:14:55,149
freezing for five minutes at a time or

00:14:51,850 --> 00:14:57,220
10 minutes even and then again well one

00:14:55,149 --> 00:14:59,110
thing two things happened I just got

00:14:57,220 --> 00:15:03,249
bored the switch to firefox which at the

00:14:59,110 --> 00:15:06,220
time was slightly better for it tends to

00:15:03,249 --> 00:15:10,809
well these monster programs tends to

00:15:06,220 --> 00:15:12,490
they tend to alternate be for the title

00:15:10,809 --> 00:15:15,309
of the buggy's through the program in

00:15:12,490 --> 00:15:20,440
your system so I tend to switch back and

00:15:15,309 --> 00:15:22,750
forth and unfortunately I'll run

00:15:20,440 --> 00:15:24,700
on Firefox on liver office and you will

00:15:22,750 --> 00:15:26,350
have a fight on your hands anyway

00:15:24,700 --> 00:15:29,050
at least inside four gigs ram

00:15:26,350 --> 00:15:32,440
fortunately I got lucky and got myself a

00:15:29,050 --> 00:15:36,790
a slightly better system so but you

00:15:32,440 --> 00:15:40,650
might you will it's very easy to get

00:15:36,790 --> 00:15:43,780
caught in down the rabbit hole for

00:15:40,650 --> 00:15:45,460
accommodating you know the stuff

00:15:43,780 --> 00:15:46,870
applications some of the reason they're

00:15:45,460 --> 00:15:52,660
much worse than the most server

00:15:46,870 --> 00:15:55,840
applications I can tell you so it's a

00:15:52,660 --> 00:15:57,850
potential rabbit hole for any war

00:15:55,840 --> 00:15:59,530
stories about that I'm glad to hear them

00:15:57,850 --> 00:16:04,480
I might even write about him at some

00:15:59,530 --> 00:16:10,240
point but let's see what's actually new

00:16:04,480 --> 00:16:15,520
in in the 5.6 this is what I've been

00:16:10,240 --> 00:16:19,180
waiting for right you can see the the

00:16:15,520 --> 00:16:23,770
full lists the canonical list is the one

00:16:19,180 --> 00:16:25,270
here actually it's it's not done here

00:16:23,770 --> 00:16:29,950
they're not that and done anything this

00:16:25,270 --> 00:16:33,880
and they're not done editing the the 5.6

00:16:29,950 --> 00:16:37,900
release page either because well 5.6

00:16:33,880 --> 00:16:40,180
it's not out yet it's let's see it's

00:16:37,900 --> 00:16:42,100
active in a couple of days since I since

00:16:40,180 --> 00:16:44,110
I checked so that there's probably some

00:16:42,100 --> 00:16:47,560
things that have happened I think you

00:16:44,110 --> 00:16:52,930
can actually pre-order yes you can you

00:16:47,560 --> 00:16:57,430
see is we this list is now it's getting

00:16:52,930 --> 00:17:01,600
fleshed out but I've got the the cliff

00:16:57,430 --> 00:17:04,540
notes here now the user can the big news

00:17:01,600 --> 00:17:06,939
in five five one of the big new like the

00:17:04,540 --> 00:17:14,319
new items in the five five was that the

00:17:06,939 --> 00:17:16,780
new traffic shaping system and before or

00:17:14,319 --> 00:17:18,670
five before five five the hunting was

00:17:16,780 --> 00:17:21,220
talking about wow we should probably

00:17:18,670 --> 00:17:22,089
keep both system and base for couple

00:17:21,220 --> 00:17:25,839
releases

00:17:22,089 --> 00:17:29,050
turned out it was too painful to him to

00:17:25,839 --> 00:17:32,470
maintain both so in five six old queue

00:17:29,050 --> 00:17:33,880
is gone you have to really have to if

00:17:32,470 --> 00:17:37,180
you want to do traffic shaping

00:17:33,880 --> 00:17:41,020
there's no way but new way if you're

00:17:37,180 --> 00:17:43,900
interested in looking at the new new

00:17:41,020 --> 00:17:48,810
traffic shaping we can do that and it

00:17:43,900 --> 00:17:48,810
takes not really

00:17:53,100 --> 00:17:58,860
yes the one that you may have downloaded

00:17:57,010 --> 00:18:02,140
already

00:17:58,860 --> 00:18:08,170
so there's also notes for the PF

00:18:02,140 --> 00:18:11,760
tutorial girl sent mail has now been

00:18:08,170 --> 00:18:15,070
superseded by the slightly more

00:18:11,760 --> 00:18:18,250
user-friendly SMTP D for us the default

00:18:15,070 --> 00:18:20,380
to MTA if you're running on a new

00:18:18,250 --> 00:18:22,960
install and you're not actually running

00:18:20,380 --> 00:18:27,010
a mail server you don't really know

00:18:22,960 --> 00:18:32,020
there's nobody but anyway SMTP D has a

00:18:27,010 --> 00:18:34,780
fairly PF like and human readable the

00:18:32,020 --> 00:18:39,100
configuration format so your typical

00:18:34,780 --> 00:18:45,820
SMTP t.com would be less than 20 lines

00:18:39,100 --> 00:18:49,990
compared to whatever send mail config

00:18:45,820 --> 00:18:53,110
would be or that's even in listen to in

00:18:49,990 --> 00:18:55,780
the simple cases it's even use even

00:18:53,110 --> 00:18:59,260
simpler and stuff like XM mark your post

00:18:55,780 --> 00:19:03,130
fix so unfortunately I haven't I haven't

00:18:59,260 --> 00:19:05,200
gotten around to books book quality

00:19:03,130 --> 00:19:07,380
conflicts to throw it yet but it might

00:19:05,200 --> 00:19:10,180
happen

00:19:07,380 --> 00:19:14,260
Kerberos wasn't based for quite a while

00:19:10,180 --> 00:19:16,060
during the by the Heimdall system

00:19:14,260 --> 00:19:18,070
problem was that ended up being

00:19:16,060 --> 00:19:24,490
unmaintained like nobody was actually

00:19:18,070 --> 00:19:27,100
using it so it's been removed with some

00:19:24,490 --> 00:19:32,590
ripple effect on the stuff I guess is HD

00:19:27,100 --> 00:19:35,260
telnet D to tell that you can there is

00:19:32,590 --> 00:19:40,030
it's returning as a as a bait s a

00:19:35,260 --> 00:19:45,810
package and with all the back-and-forth

00:19:40,030 --> 00:19:49,620
over bind name D

00:19:45,810 --> 00:19:55,770
vine is being retired if you want to run

00:19:49,620 --> 00:19:57,960
your you can still run bind on obesity

00:19:55,770 --> 00:20:00,480
if you install the package but it's been

00:19:57,960 --> 00:20:05,460
removed by this be removed from the base

00:20:00,480 --> 00:20:10,320
system basically the the the maintenance

00:20:05,460 --> 00:20:12,030
became too painful and the long-term

00:20:10,320 --> 00:20:16,620
plan which is now almost complete

00:20:12,030 --> 00:20:19,220
fruition is to use NST for the authority

00:20:16,620 --> 00:20:23,550
of name service and unbound for reserve

00:20:19,220 --> 00:20:27,390
recursive resolver which makes sense

00:20:23,550 --> 00:20:30,410
because a authority of the first name

00:20:27,390 --> 00:20:32,610
server and recursive resolver or a

00:20:30,410 --> 00:20:34,440
function functionality different enough

00:20:32,610 --> 00:20:45,900
that it makes sense to separate demons

00:20:34,440 --> 00:20:48,090
for him so for those of you who run web

00:20:45,900 --> 00:20:52,170
servers with just the OpenBSD based

00:20:48,090 --> 00:20:55,350
system the traditional httpd used to be

00:20:52,170 --> 00:20:57,270
a pork patchy 1.3 and I know that will

00:20:55,350 --> 00:20:58,590
bring chuckles Linux people because

00:20:57,270 --> 00:21:00,990
nobody's been using the Apache one

00:20:58,590 --> 00:21:04,230
mumbled for years and years and years

00:21:00,990 --> 00:21:06,900
the problem was back in the day that

00:21:04,230 --> 00:21:09,090
Apache you changed licenses and the

00:21:06,900 --> 00:21:14,520
fashion license was just not compatible

00:21:09,090 --> 00:21:17,970
with the BSD basis so we the open base

00:21:14,520 --> 00:21:20,840
to developers forked actually 1.3

00:21:17,970 --> 00:21:25,190
maintained it for many painful years

00:21:20,840 --> 00:21:29,420
somebody convinced the project that

00:21:25,190 --> 00:21:35,160
introducing nginx was a better solution

00:21:29,420 --> 00:21:40,950
so nginx is the default HTTP D in open

00:21:35,160 --> 00:21:41,610
beastie 5.6 we will see changes by five

00:21:40,950 --> 00:21:45,750
seven

00:21:41,610 --> 00:21:48,300
but nginx will be packaged as we already

00:21:45,750 --> 00:21:54,480
mentioned the installer no longer

00:21:48,300 --> 00:21:57,170
supports FTP and well don't be Stefano

00:21:54,480 --> 00:22:01,270
six is the W version

00:21:57,170 --> 00:22:04,520
for open for our OpenSSL replacement

00:22:01,270 --> 00:22:07,250
never SSL there will be at least one

00:22:04,520 --> 00:22:09,080
lever SSL talk at a conference when

00:22:07,250 --> 00:22:11,480
given by tenon angst who is deeply

00:22:09,080 --> 00:22:13,220
involved in this also the lady is also

00:22:11,480 --> 00:22:16,730
the author of sign if I so if you have

00:22:13,220 --> 00:22:18,440
any detail questions you would probably

00:22:16,730 --> 00:22:21,350
want you know I think taps worries rise

00:22:18,440 --> 00:22:30,800
for it by the way so you can probably go

00:22:21,350 --> 00:22:33,820
back him again on the there is was a lot

00:22:30,800 --> 00:22:36,830
of work that went into the brass a cell

00:22:33,820 --> 00:22:41,030
but thanks to extensive testing by the

00:22:36,830 --> 00:22:43,610
reports team very little if anything is

00:22:41,030 --> 00:22:46,900
actually use it as the only use

00:22:43,610 --> 00:22:46,900
development visible change I've been

00:22:47,410 --> 00:22:52,490
noticed is that the openness is no

00:22:49,550 --> 00:22:55,460
binary yeah it just keeps his name is

00:22:52,490 --> 00:23:00,500
moving to use a pin instead of user like

00:22:55,460 --> 00:23:02,900
was you used to be an user has been also

00:23:00,500 --> 00:23:06,860
if you're on the year point-to-point

00:23:02,900 --> 00:23:09,500
links you will need to consider whether

00:23:06,860 --> 00:23:15,800
you want to well I first if you were

00:23:09,500 --> 00:23:18,980
using the user land PPP demon it has

00:23:15,800 --> 00:23:30,440
been retired creating might involve

00:23:18,980 --> 00:23:34,820
moving to something else and yes we have

00:23:30,440 --> 00:23:37,010
our CP good old-fashioned really broken

00:23:34,820 --> 00:23:40,160
protocol it's nobody's been using that

00:23:37,010 --> 00:23:45,770
for years so it's been removed it's in

00:23:40,160 --> 00:23:48,320
the Attic G's be rappers most of the

00:23:45,770 --> 00:23:52,550
free UNIX is has TCP wrappers

00:23:48,320 --> 00:23:57,310
implemented via well where you control

00:23:52,550 --> 00:23:57,310
access my hosts deny or a hostess allow

00:23:57,880 --> 00:24:03,170
much of that well most of the stuff you

00:24:01,940 --> 00:24:06,230
want from there anyway

00:24:03,170 --> 00:24:08,390
since we have PF on at all times just

00:24:06,230 --> 00:24:11,870
convert those to PF rules

00:24:08,390 --> 00:24:14,450
you know you know what one well there

00:24:11,870 --> 00:24:17,170
are just well your system becomes

00:24:14,450 --> 00:24:23,179
cleaner because there are so there are

00:24:17,170 --> 00:24:28,100
fewer files to to keep updated our mail

00:24:23,179 --> 00:24:30,230
and you use PDE if you're really if you

00:24:28,100 --> 00:24:33,080
want the bang addresses you can have

00:24:30,230 --> 00:24:38,809
them but you will need to install all

00:24:33,080 --> 00:24:41,330
you is so an ancient even as well enough

00:24:38,809 --> 00:24:43,730
used to stuff way back but I don't

00:24:41,330 --> 00:25:04,580
remember it anymore so yeah if you're

00:24:43,730 --> 00:25:12,860
still still on there are a few more

00:25:04,580 --> 00:25:15,530
items which we could come back to we had

00:25:12,860 --> 00:25:22,040
well partly is a lot from the openness

00:25:15,530 --> 00:25:28,370
itself tobacco there were several of the

00:25:22,040 --> 00:25:31,130
older older hashes and ciphers from that

00:25:28,370 --> 00:25:35,419
oh that is HD supported and had in the

00:25:31,130 --> 00:25:39,530
default config we removed which meant at

00:25:35,419 --> 00:25:43,520
some point we would have a young we had

00:25:39,530 --> 00:25:45,919
a few older clients that just weren't

00:25:43,520 --> 00:25:48,559
able to well upgrade your old beast is

00:25:45,919 --> 00:25:50,120
in the system and there would be an

00:25:48,559 --> 00:25:52,160
assortment of clients that just were not

00:25:50,120 --> 00:25:54,770
able to connect to the Yale businesses

00:25:52,160 --> 00:25:56,630
because they were using older older

00:25:54,770 --> 00:26:01,340
ciphers that were just no longer

00:25:56,630 --> 00:26:04,160
supported there was a bit of head

00:26:01,340 --> 00:26:06,679
scratching over that on some sites but

00:26:04,160 --> 00:26:09,110
it was resolved even if you either

00:26:06,679 --> 00:26:12,049
well the preferred action is of course

00:26:09,110 --> 00:26:14,270
to upgrade the the clients to a new

00:26:12,049 --> 00:26:17,330
versus an SSH version and you'll be good

00:26:14,270 --> 00:26:18,050
if you can't do that you can reintroduce

00:26:17,330 --> 00:26:20,929
the

00:26:18,050 --> 00:26:25,850
the week ciphers it's all in some notes

00:26:20,929 --> 00:26:28,730
I won't be showing you but and again we

00:26:25,850 --> 00:26:34,460
as we mentioned earlier as examples and

00:26:28,730 --> 00:26:36,020
I exists with a little fairly extensive

00:26:34,460 --> 00:26:42,500
some of these examples are fairly

00:26:36,020 --> 00:26:44,420
extensive very late in the game four or

00:26:42,500 --> 00:26:48,410
five six the filter and grammar for a

00:26:44,420 --> 00:26:52,520
lady changed a bit so we have worked PF

00:26:48,410 --> 00:26:54,679
like Kalin figures are again and if

00:26:52,520 --> 00:26:57,679
running if you were running job on my

00:26:54,679 --> 00:27:01,809
386 and it broke in five five was back

00:26:57,679 --> 00:27:04,340
so well Oracle still doesn't care but

00:27:01,809 --> 00:27:08,090
and of course my version six

00:27:04,340 --> 00:27:11,059
configuration defaults you will notice

00:27:08,090 --> 00:27:13,790
on a fresh five six system that unless

00:27:11,059 --> 00:27:16,040
you specify for per interface that you

00:27:13,790 --> 00:27:18,200
actually one time version six it's not

00:27:16,040 --> 00:27:31,250
enable at all no not even link local

00:27:18,200 --> 00:27:34,670
address we can go over these in sequence

00:27:31,250 --> 00:27:39,800
I guess now upgrading to BC five six

00:27:34,670 --> 00:27:43,460
builders around the the install yes it's

00:27:39,800 --> 00:27:50,120
done it looks pretty much like the

00:27:43,460 --> 00:27:54,140
install it's worth keeping in mind that

00:27:50,120 --> 00:27:56,570
well even though you can you can try to

00:27:54,140 --> 00:27:59,450
upgrade and across several jumps the

00:27:56,570 --> 00:28:07,940
only support of the way is to go by

00:27:59,450 --> 00:28:10,910
increments of the point one and no it's

00:28:07,940 --> 00:28:13,429
a little cumbersome but and of course in

00:28:10,910 --> 00:28:17,000
some in some cases if you have a really

00:28:13,429 --> 00:28:19,790
long upgrade jumped it's probably better

00:28:17,000 --> 00:28:22,020
to do clean install and restore whatever

00:28:19,790 --> 00:28:26,380
you use your data from

00:28:22,020 --> 00:28:33,150
from from back up now we can try what

00:28:26,380 --> 00:28:33,150
the what the machine says here reboots

00:28:39,310 --> 00:28:58,260
and runs his merch yes yes yes actually

00:28:53,470 --> 00:28:58,260
we could we can take a peek at that

00:29:04,430 --> 00:29:13,910
it's actually a fairly simple operation

00:29:10,770 --> 00:29:13,910
[Music]

00:29:27,700 --> 00:29:31,620
slice four that are in the

00:30:00,670 --> 00:30:08,170
yes here it is upgrading packages

00:30:05,670 --> 00:30:11,530
basically you would do something like

00:30:08,170 --> 00:30:18,310
like this for use package info to dump

00:30:11,530 --> 00:30:23,230
whatever your your list of packages well

00:30:18,310 --> 00:30:26,730
anything else it's possibly overkill to

00:30:23,230 --> 00:30:29,200
do both here but anyway at least two

00:30:26,730 --> 00:30:33,490
package in for commands when dumped your

00:30:29,200 --> 00:30:41,130
list of packages and once you wish you

00:30:33,490 --> 00:30:46,270
got that you do a reinstall and the next

00:30:41,130 --> 00:30:52,540
next step you do then is after your sis

00:30:46,270 --> 00:30:56,110
much you do the fuzzy package match by

00:30:52,540 --> 00:30:58,690
fear feeding the the feeding package add

00:30:56,110 --> 00:31:01,210
your a list of packages it was a fuzzy

00:30:58,690 --> 00:31:03,490
match so it doesn't really you know the

00:31:01,210 --> 00:31:05,110
package package name usually is is very

00:31:03,490 --> 00:31:08,530
specific with the version number and

00:31:05,110 --> 00:31:12,190
name the patch number it does a fuzzy

00:31:08,530 --> 00:31:13,360
match and sees but it can get so he

00:31:12,190 --> 00:31:19,060
usually usually that works very very

00:31:13,360 --> 00:31:22,060
well and then of course for a more

00:31:19,060 --> 00:31:25,750
manual operation well you can package

00:31:22,060 --> 00:31:27,550
and fold up to file and before I

00:31:25,750 --> 00:31:29,430
discovered the actually could actually

00:31:27,550 --> 00:31:32,440
have package I had to read from the file

00:31:29,430 --> 00:31:34,570
have that file displayed somewhere and

00:31:32,440 --> 00:31:37,080
package a package name and it will get

00:31:34,570 --> 00:31:45,030
don't take care of the dependencies so

00:31:37,080 --> 00:31:50,010
but anyway package info - - M - Q

00:31:45,030 --> 00:31:53,390
it will do the you know will produce

00:31:50,010 --> 00:31:57,440
your package lists actually pers

00:31:53,390 --> 00:31:57,440
possible the package info

00:32:14,789 --> 00:32:20,669
no I'm not a suitors file yes

00:32:18,989 --> 00:32:24,059
why don't I don't think I always serve

00:32:20,669 --> 00:32:27,599
recommend people run do not logins route

00:32:24,059 --> 00:32:29,999
reduce you sudo thing you need to

00:32:27,599 --> 00:32:32,879
remember is that one thing you need to

00:32:29,999 --> 00:32:35,099
do is even if you're in wheel you're not

00:32:32,879 --> 00:32:38,729
in the default by default you're not in

00:32:35,099 --> 00:32:42,359
the in the sudoers file so what you do

00:32:38,729 --> 00:32:47,899
and you probably a few from remember

00:32:42,359 --> 00:32:58,789
your root password I hope I did yes by

00:32:47,899 --> 00:33:01,769
sudo and you really do not edit sudoers

00:32:58,789 --> 00:33:04,469
just using a regular a de jure you will

00:33:01,769 --> 00:33:11,039
 something up so what we're looking

00:33:04,469 --> 00:33:16,109
at here is just this is VI if you don't

00:33:11,039 --> 00:33:21,799
like the IO you have a problem so it's a

00:33:16,109 --> 00:33:28,199
managed VI VI run from from the ice sudo

00:33:21,799 --> 00:33:33,089
so the syntax will be checked and we're

00:33:28,199 --> 00:33:35,449
good so we can go back to actually now I

00:33:33,089 --> 00:33:35,449
can just

00:33:42,710 --> 00:33:53,170
I can justice merge and this should be

00:33:48,980 --> 00:33:57,140
fairly automatic because the this is a

00:33:53,170 --> 00:34:00,650
vanilla system not much change that

00:33:57,140 --> 00:34:02,900
isn't handled automatically if you have

00:34:00,650 --> 00:34:06,290
edited your your config files just like

00:34:02,900 --> 00:34:17,030
on FreeBSD you will be offered editing

00:34:06,290 --> 00:34:26,600
or merging well that's like qmu is not

00:34:17,030 --> 00:34:29,630
high performance system now you were

00:34:26,600 --> 00:34:35,810
asking about five five one of the things

00:34:29,630 --> 00:34:40,820
that happened and five five was time T

00:34:35,810 --> 00:34:43,330
turned sixty four-bit and this is one of

00:34:40,820 --> 00:34:48,560
the reasons well

00:34:43,330 --> 00:34:50,380
when time T turned sixty four-bit have

00:34:48,560 --> 00:34:59,300
changed the binary format of everything

00:34:50,380 --> 00:35:02,230
so the upgrade upgrader should five five

00:34:59,300 --> 00:35:08,000
are craters should take care of the the

00:35:02,230 --> 00:35:12,830
binaries the necessary conversions for

00:35:08,000 --> 00:35:15,800
the base system in case it doesn't well

00:35:12,830 --> 00:35:18,910
I think Moe is the one thing that

00:35:15,800 --> 00:35:22,010
tripped me up and during v55

00:35:18,910 --> 00:35:28,820
like the current run up to five five was

00:35:22,010 --> 00:35:31,450
that the master password database well

00:35:28,820 --> 00:35:33,830
the formula that one changed as well so

00:35:31,450 --> 00:35:38,369
after upgrading to that snapshot

00:35:33,830 --> 00:35:45,299
I couldn't log in there's no way I could

00:35:38,369 --> 00:35:49,559
the the the workaround was to boot from

00:35:45,299 --> 00:35:51,359
the from the you know they well either

00:35:49,559 --> 00:35:54,839
well they're two ways to do this either

00:35:51,359 --> 00:35:59,339
you run the the snapshot via the

00:35:54,839 --> 00:36:00,180
installer and once you're dropped to the

00:35:59,339 --> 00:36:04,710
shell there

00:36:00,180 --> 00:36:06,259
you run this command to regenerate your

00:36:04,710 --> 00:36:08,700
password database and you should be okay

00:36:06,259 --> 00:36:10,769
otherwise you do what I did

00:36:08,700 --> 00:36:17,279
root from the be CRT again dropped your

00:36:10,769 --> 00:36:19,680
shell and run this command and well you

00:36:17,279 --> 00:36:25,799
are a few binary files sir will just not

00:36:19,680 --> 00:36:29,219
be useful anymore so you just just zap

00:36:25,799 --> 00:36:36,499
them and yeah at the end I was able to

00:36:29,219 --> 00:36:36,499
log in and life went on now

00:36:39,180 --> 00:36:42,839
and for the

00:36:47,200 --> 00:36:58,599
yes like we like we saw in the or might

00:36:51,010 --> 00:37:01,900
have seen in the QM year yes um this

00:36:58,599 --> 00:37:04,480
March is fairly smart about the stuff

00:37:01,900 --> 00:37:06,760
like real what your permission should be

00:37:04,480 --> 00:37:09,640
on the config files and so forth so it

00:37:06,760 --> 00:37:11,680
you will always know it and notice it

00:37:09,640 --> 00:37:13,630
even if that doesn't do anything else it

00:37:11,680 --> 00:37:18,059
will check your permissions using em

00:37:13,630 --> 00:37:22,170
tree so if you for some reason dumb

00:37:18,059 --> 00:37:24,490
changes to to the permissions of

00:37:22,170 --> 00:37:27,790
directories because some you can run

00:37:24,490 --> 00:37:29,829
make some application run otherwise well

00:37:27,790 --> 00:37:32,049
you will need to go back and we need to

00:37:29,829 --> 00:37:35,849
fix the application or do redo your

00:37:32,049 --> 00:37:40,720
change I've I've had a fuse of these

00:37:35,849 --> 00:37:43,809
situations again always always like when

00:37:40,720 --> 00:37:47,200
you're for everything obesity as I said

00:37:43,809 --> 00:37:51,000
earlier everything has a man page there

00:37:47,200 --> 00:37:58,270
usually is a use useful FAQ so please

00:37:51,000 --> 00:38:01,420
read those first and for the upgrade

00:37:58,270 --> 00:38:03,849
fact well there is an upgrade that maybe

00:38:01,420 --> 00:38:06,369
pop it was not populated yet it will be

00:38:03,849 --> 00:38:10,089
and that's all it's traditionally you

00:38:06,369 --> 00:38:13,150
will find it that fact upgrade version

00:38:10,089 --> 00:38:17,470
number it probably will materialize

00:38:13,150 --> 00:38:21,069
minute next few weeks but you can it's

00:38:17,470 --> 00:38:25,089
over it's always a direct descendant of

00:38:21,069 --> 00:38:29,369
the following current fact anyway which

00:38:25,089 --> 00:38:29,369
is at let's see

00:38:31,619 --> 00:38:42,039
they're almost well there are variations

00:38:34,569 --> 00:38:43,929
but so if you're a brand - yes this is

00:38:42,039 --> 00:38:46,059
the format oh well so you can see a

00:38:43,929 --> 00:38:49,209
number of changes that things have have

00:38:46,059 --> 00:38:52,900
changed over over the years well

00:38:49,209 --> 00:39:00,329
actually over the last six months and we

00:38:52,900 --> 00:39:04,509
have here the the exact instructions for

00:39:00,329 --> 00:39:09,609
making sure that your system is it's

00:39:04,509 --> 00:39:11,829
what it should be now if you do the

00:39:09,609 --> 00:39:15,939
install or upgrade most of these things

00:39:11,829 --> 00:39:19,630
will will be handled automatically yeah

00:39:15,939 --> 00:39:27,419
if not by anything else then it's just

00:39:19,630 --> 00:39:30,969
merged we'll do it there are a number of

00:39:27,419 --> 00:39:37,479
smaller differences that we haven't

00:39:30,969 --> 00:39:40,089
covered yet and if you're upgrading it's

00:39:37,479 --> 00:39:42,189
probably worth looking through this

00:39:40,089 --> 00:39:43,929
anyway because there will be some so far

00:39:42,189 --> 00:39:48,900
so that I'm just not use useful anymore

00:39:43,929 --> 00:39:55,089
such as the TCP wrappers libraries and

00:39:48,900 --> 00:39:59,919
associated man pages you can just remove

00:39:55,089 --> 00:40:05,199
those and yes if you're running P flow

00:39:59,919 --> 00:40:11,019
net flow export from there from PF you

00:40:05,199 --> 00:40:18,699
may need to know about the the flow

00:40:11,019 --> 00:40:21,849
protocol version numbering and then yeah

00:40:18,699 --> 00:40:25,179
it's always useful to to read read this

00:40:21,849 --> 00:40:29,529
page well this is still called currents

00:40:25,179 --> 00:40:33,959
but yeah let's break here sometime after

00:40:29,529 --> 00:40:33,959
I think actually it's

00:40:35,060 --> 00:40:48,180
somewhere in this now it's actually late

00:40:44,820 --> 00:40:54,290
late July I think was when we we moved

00:40:48,180 --> 00:40:58,760
to no no I

00:40:54,290 --> 00:41:04,950
early August was when it when the the

00:40:58,760 --> 00:41:07,320
release was cut so we will have some

00:41:04,950 --> 00:41:09,480
items here that are actually not in five

00:41:07,320 --> 00:41:11,850
six so better way to a couple of weeks

00:41:09,480 --> 00:41:17,720
under you'll have the the canonical

00:41:11,850 --> 00:41:29,430
answer then again

00:41:17,720 --> 00:41:33,930
yes we've covered this card this one as

00:41:29,430 --> 00:41:35,340
well and again I like the having an

00:41:33,930 --> 00:41:38,310
example store the directory after that's

00:41:35,340 --> 00:41:40,530
is a great boost for for anyone who's

00:41:38,310 --> 00:41:42,930
was moving to the system because there

00:41:40,530 --> 00:41:47,850
are fewer active well if you were

00:41:42,930 --> 00:41:51,240
potentially active items to take care of

00:41:47,850 --> 00:41:55,050
and a base install there are stuff you

00:41:51,240 --> 00:41:59,040
can enable but there's basically a

00:41:55,050 --> 00:42:04,590
little less clutter old queue there are

00:41:59,040 --> 00:42:09,870
no networ people but for me of course

00:42:04,590 --> 00:42:12,440
this was what was the big one if you're

00:42:09,870 --> 00:42:16,860
running a mail server please consider

00:42:12,440 --> 00:42:20,010
running SMTP D open via the open SMTP D

00:42:16,860 --> 00:42:21,840
it has been ported there is there is a

00:42:20,010 --> 00:42:23,790
portable version that seems to run them

00:42:21,840 --> 00:42:30,920
basically every UNIX out there

00:42:23,790 --> 00:42:30,920
Oh certainly the Linux is it has

00:42:50,510 --> 00:43:03,320
man this is a very basic SMTP D config

00:42:58,000 --> 00:43:06,680
this one just handles local mail well if

00:43:03,320 --> 00:43:09,380
you uncomment the third-to-last line

00:43:06,680 --> 00:43:16,790
here it will be starting to accept mail

00:43:09,380 --> 00:43:19,340
for for the domain so basically this for

00:43:16,790 --> 00:43:21,710
a very basic you configure this will be

00:43:19,340 --> 00:43:25,790
this will be enough I compare that to

00:43:21,710 --> 00:43:27,710
your multi well some hundreds some

00:43:25,790 --> 00:43:33,170
hundreds of lines send mail config and

00:43:27,710 --> 00:43:41,930
you'll be very happy there are more

00:43:33,170 --> 00:43:45,440
involved examples possible that setting

00:43:41,930 --> 00:43:47,870
up setting up a SMTP D to do your

00:43:45,440 --> 00:43:50,060
bidding would possibly be a good

00:43:47,870 --> 00:43:55,850
tutorial but it won't be at this

00:43:50,060 --> 00:43:58,010
conference and then again if this isn't

00:43:55,850 --> 00:43:59,990
a beauty is the default MTA now if

00:43:58,010 --> 00:44:04,040
you're already using say postfix our

00:43:59,990 --> 00:44:08,920
exam you may need well you probably need

00:44:04,040 --> 00:44:12,530
to do the mailer column from RC conf

00:44:08,920 --> 00:44:16,670
checks for whether the stuff you do not

00:44:12,530 --> 00:44:21,710
want is enabled but it will be something

00:44:16,670 --> 00:44:34,130
like a sunburn hi Eve five minutes

00:44:21,710 --> 00:44:39,880
change anyway yes we covered a HTTP the

00:44:34,130 --> 00:44:39,880
white weeks ciphers Kerberos bind

00:44:39,980 --> 00:44:55,040
these pure rappers are male and well I

00:44:49,770 --> 00:45:00,090
was hoping to there is a very very

00:44:55,040 --> 00:45:05,490
entertaining presentation on the on

00:45:00,090 --> 00:45:08,640
YouTube by Bob back if you've never SSL

00:45:05,490 --> 00:45:10,100
if you're interested we can roll around

00:45:08,640 --> 00:45:12,660
that later if you like

00:45:10,100 --> 00:45:27,870
it's about in the three quarters of an

00:45:12,660 --> 00:45:32,220
hour worth looking into and well stuff

00:45:27,870 --> 00:45:34,380
we need that we will need to think about

00:45:32,220 --> 00:45:40,290
for all planning for the future five

00:45:34,380 --> 00:45:43,200
seven is only six months away and enter

00:45:40,290 --> 00:45:48,390
decks nginx had a very short life as

00:45:43,200 --> 00:45:53,760
part of the base system and so happened

00:45:48,390 --> 00:45:56,630
that relay DS author Rick flirt uh-oh he

00:45:53,760 --> 00:46:01,370
tweeted something like I woke up and

00:45:56,630 --> 00:46:01,370
found that I had committed a web server

00:46:01,940 --> 00:46:06,960
basically you something that spawned off

00:46:04,320 --> 00:46:09,980
the relay to you go bouncer that already

00:46:06,960 --> 00:46:15,240
had a lot of web server ish

00:46:09,980 --> 00:46:17,640
functionality in it so it's it's

00:46:15,240 --> 00:46:22,800
supposed to be very small and secure and

00:46:17,640 --> 00:46:28,500
it's still being worked on and it's if

00:46:22,800 --> 00:46:30,540
if you're upgrading well you can you can

00:46:28,500 --> 00:46:34,410
save will enter next then you probably

00:46:30,540 --> 00:46:37,560
need to move to the there's to the

00:46:34,410 --> 00:46:40,050
package version or you can adapt to get

00:46:37,560 --> 00:46:43,700
another conflict for a Matt and actually

00:46:40,050 --> 00:46:48,600
for myself I haven't quite done that yet

00:46:43,700 --> 00:46:51,900
one of the fairly exciting new things in

00:46:48,600 --> 00:46:53,240
four five seven will be the RC CTL

00:46:51,900 --> 00:46:57,590
utility

00:46:53,240 --> 00:47:00,710
which helps you manage your your arsenal

00:46:57,590 --> 00:47:03,800
Coney those are called local it was

00:47:00,710 --> 00:47:11,090
written mainly as a wrapper for things

00:47:03,800 --> 00:47:15,740
like puppet or ansible to automatically

00:47:11,090 --> 00:47:20,620
manipulate your config files but he can

00:47:15,740 --> 00:47:24,290
use from now from your command line and

00:47:20,620 --> 00:47:26,540
it looks like there is a plan at least a

00:47:24,290 --> 00:47:30,200
system or just merge just and itself to

00:47:26,540 --> 00:47:35,800
also handle package updates I think

00:47:30,200 --> 00:47:39,980
that's still a work in progress and for

00:47:35,800 --> 00:47:42,320
you know well as in every previous

00:47:39,980 --> 00:47:48,260
release there is a lot of hardware

00:47:42,320 --> 00:47:50,930
support the fixes all new drivers

00:47:48,260 --> 00:47:53,870
improve drivers I'm still hoping that

00:47:50,930 --> 00:47:55,490
the new version of the Intel wireless

00:47:53,870 --> 00:47:57,080
card that came with his laptop will be

00:47:55,490 --> 00:48:04,180
supported a nice release we don't know

00:47:57,080 --> 00:48:06,700
that yet we already have fairly good

00:48:04,180 --> 00:48:11,080
hardware support for a number of things

00:48:06,700 --> 00:48:16,820
and as you will you will see a lot of

00:48:11,080 --> 00:48:19,130
developers and our art well OBC

00:48:16,820 --> 00:48:22,130
developers in general Medrano beast the

00:48:19,130 --> 00:48:33,050
other laptops so we may have an agile or

00:48:22,130 --> 00:48:37,220
free beastie there and well as i've said

00:48:33,050 --> 00:48:43,610
earlier i tended intend this to be a

00:48:37,220 --> 00:48:45,620
mainly a questions driven the workshop i

00:48:43,610 --> 00:48:49,820
think i'm actually reached the end of my

00:48:45,620 --> 00:48:54,890
prepared notes we could go back in this

00:48:49,820 --> 00:48:56,120
and what bob ex-libris a cell

00:48:54,890 --> 00:49:00,740
presentation which is actually quite

00:48:56,120 --> 00:49:03,220
entertaining or well whatever you prefer

00:49:00,740 --> 00:49:03,220
really

00:49:04,860 --> 00:49:11,920
anyway this is a good time to remember

00:49:08,340 --> 00:49:16,000
to remind you that the best way to you

00:49:11,920 --> 00:49:19,120
to support the BC project is to send

00:49:16,000 --> 00:49:22,810
them money you can do that by buying

00:49:19,120 --> 00:49:24,270
stuff I think you can all you can you

00:49:22,810 --> 00:49:28,180
can now

00:49:24,270 --> 00:49:30,870
prewar know the pre-orders should be up

00:49:28,180 --> 00:49:30,870
fairly soon

00:49:33,900 --> 00:49:42,160
oops

00:49:35,020 --> 00:49:44,530
oh it's also if you're a rich person you

00:49:42,160 --> 00:49:47,110
know just want to get rid of money well

00:49:44,530 --> 00:49:51,120
you can go to the in donations page

00:49:47,110 --> 00:49:53,770
there is for I do not know whether the

00:49:51,120 --> 00:49:56,830
paperwork that can be provided by the

00:49:53,770 --> 00:49:59,020
Oakland BC foundation is interesting at

00:49:56,830 --> 00:50:01,360
all for European corporations but anyway

00:49:59,020 --> 00:50:06,280
for North American corporations this is

00:50:01,360 --> 00:50:09,160
a Canadian nonprofits that will provide

00:50:06,280 --> 00:50:13,450
anything that you the North American tax

00:50:09,160 --> 00:50:16,330
men will require talk to your boss if

00:50:13,450 --> 00:50:18,490
you're using obesity and any work talk

00:50:16,330 --> 00:50:21,010
to your boss borrowers credit card and

00:50:18,490 --> 00:50:23,710
make sure this large donation that will

00:50:21,010 --> 00:50:31,770
help help your healthy system can move

00:50:23,710 --> 00:50:34,660
forward and again I won't think this one

00:50:31,770 --> 00:50:41,400
I'll need to correct the URL for that

00:50:34,660 --> 00:50:46,120
one but all this will be available

00:50:41,400 --> 00:50:48,970
online that the roughly the URL I put in

00:50:46,120 --> 00:50:54,190
the in the notes as soon as we conclude

00:50:48,970 --> 00:50:57,720
here any further questions

00:50:54,190 --> 00:50:57,720
any inputs

00:50:59,630 --> 00:51:04,579
do we go Bob next presentation neither

00:51:06,470 --> 00:51:16,800
on I haven't done is that yes it will be

00:51:10,560 --> 00:51:19,250
well right after a concluded I'm always

00:51:16,800 --> 00:51:19,250
wondering

00:54:53,170 --> 00:54:56,289
[Music]

00:56:06,650 --> 00:56:09,739
[Music]

00:56:42,380 --> 00:56:45,479
[Music]

00:57:45,080 --> 00:57:48,280
[Music]

00:58:15,290 --> 00:58:19,730
[Music]

00:59:02,950 --> 00:59:12,020
sitting there for four years we found it

00:59:06,950 --> 00:59:15,560
by reading their bug tracker and we

00:59:12,020 --> 00:59:17,510
fixed it so and when you really get down

00:59:15,560 --> 00:59:20,420
to it that horrible code that you don't

00:59:17,510 --> 00:59:22,609
look at actively discourages outside

00:59:20,420 --> 00:59:24,829
involvement it actively discourages

00:59:22,609 --> 00:59:27,710
developers and the community from

00:59:24,829 --> 00:59:30,800
looking at it why we all look at it we

00:59:27,710 --> 00:59:33,730
say I don't have the time and energy to

00:59:30,800 --> 00:59:35,030
invest to understand this arcane stuff

00:59:33,730 --> 00:59:37,430
okay

00:59:35,030 --> 00:59:39,050
just to see if it's okay I'm going to

00:59:37,430 --> 00:59:41,839
hold the person who writes in this

00:59:39,050 --> 00:59:44,839
arcane style understands it enough and

00:59:41,839 --> 00:59:47,660
cares enough to take care of it okay

00:59:44,839 --> 00:59:49,430
that's a laugh I thought our keynote let

00:59:47,660 --> 00:59:51,230
you know our keynote speaker said oh

00:59:49,430 --> 00:59:52,910
it's so good that you know in this

00:59:51,230 --> 00:59:55,880
modern day and age we don't have to

00:59:52,910 --> 00:59:57,770
manually encode bite blanks and and you

00:59:55,880 --> 01:00:00,800
know sokka's is a word and all that

00:59:57,770 --> 01:00:03,260
stuff and I had to not snortin giggles I

01:00:00,800 --> 01:00:05,079
had open SSL code open on my screen that

01:00:03,260 --> 01:00:10,310
does exactly that

01:00:05,079 --> 01:00:13,730
so yeah the only real solution we

01:00:10,310 --> 01:00:15,890
decided was the graphic and with the

01:00:13,730 --> 01:00:18,109
actual bugs in the elevator rotting it's

01:00:15,890 --> 01:00:20,900
obvious it's not going to happen so we

01:00:18,109 --> 01:00:22,460
want to make sure that the basically the

01:00:20,900 --> 01:00:25,400
main changes are not maintained they're

01:00:22,460 --> 01:00:29,359
just adding to it so it was we imported

01:00:25,400 --> 01:00:31,520
101 G and I think about 30 seconds after

01:00:29,359 --> 01:00:35,090
the opressed the commit button to import

01:00:31,520 --> 01:00:37,820
Ong both EOI and you just started

01:00:35,090 --> 01:00:39,500
tearing things out of it and we just

01:00:37,820 --> 01:00:42,500
started ripping and tearing and

01:00:39,500 --> 01:00:44,720
threading and we didn't say anything or

01:00:42,500 --> 01:00:46,250
announce anything but slowly the the

01:00:44,720 --> 01:00:49,000
community noticed that there's this

01:00:46,250 --> 01:00:51,140
massive you know these enormous commits

01:00:49,000 --> 01:00:55,270
happening on the SSL branch

01:00:51,140 --> 01:00:57,800
OpenBSD the world started to notice so

01:00:55,270 --> 01:00:59,300
eventually we got around to announcing

01:00:57,800 --> 01:01:01,130
that is to be Perez's down we'll get

01:00:59,300 --> 01:01:03,080
into that but let's talk about like

01:01:01,130 --> 01:01:06,350
libre SSL goals are at least initially

01:01:03,080 --> 01:01:08,840
so our goals at the port are first and

01:01:06,350 --> 01:01:10,970
foremostly preserve api api

01:01:08,840 --> 01:01:13,100
compatibility with open ssl we want to

01:01:10,970 --> 01:01:15,680
be a drop-in replacement there is too

01:01:13,100 --> 01:01:19,550
much stuff in the ecosystem that already

01:01:15,680 --> 01:01:21,950
uses this api api okay so it's not like

01:01:19,550 --> 01:01:23,720
it's gonna be easy for us to say hey

01:01:21,950 --> 01:01:25,070
oh let's change it to a better behave

01:01:23,720 --> 01:01:27,290
you gotta trust me there's a better rate

01:01:25,070 --> 01:01:29,000
what better AP on pretty much any API

01:01:27,290 --> 01:01:31,340
might be better than what's there but

01:01:29,000 --> 01:01:33,440
that okay there's too much effort

01:01:31,340 --> 01:01:36,080
involved in too many other projects to

01:01:33,440 --> 01:01:39,710
change that right now and particularly

01:01:36,080 --> 01:01:42,080
not has a big staff so we want to

01:01:39,710 --> 01:01:44,840
preserve compatibility do drop-in

01:01:42,080 --> 01:01:47,540
replacement definitely we want to bring

01:01:44,840 --> 01:01:50,030
more people into working in looking at

01:01:47,540 --> 01:01:52,460
the code base and understanding what is

01:01:50,030 --> 01:01:55,880
going on in there by making it less

01:01:52,460 --> 01:01:58,310
horrible okay to some extent we've

01:01:55,880 --> 01:02:01,220
succeeded a considerable amount in that

01:01:58,310 --> 01:02:03,350
already it's actually really cool unlike

01:02:01,220 --> 01:02:04,940
the usual open BSD commenced where we'll

01:02:03,350 --> 01:02:07,130
talk around each other again yeah

01:02:04,940 --> 01:02:08,360
normally we review it's okay we do it

01:02:07,130 --> 01:02:09,920
hope you give a big occasion you made

01:02:08,360 --> 01:02:11,750
mistakes even when we all look at it and

01:02:09,920 --> 01:02:14,690
I think we've all had convinced where

01:02:11,750 --> 01:02:16,250
we've said yeah ok ok ok committed it

01:02:14,690 --> 01:02:18,440
and a few minutes later you know

01:02:16,250 --> 01:02:20,690
somebody randomly on list watching our

01:02:18,440 --> 01:02:23,000
commits will take missed this dumb

01:02:20,690 --> 01:02:25,050
little thing at oh wow yeah I did it's

01:02:23,000 --> 01:02:27,640
really nice to have community

01:02:25,050 --> 01:02:30,550
okay and that's something that you

01:02:27,640 --> 01:02:34,270
definitely just don't seem to have with

01:02:30,550 --> 01:02:37,990
the oh Vanessa definitely fix bugs and

01:02:34,270 --> 01:02:41,050
modern coding practices okay and trying

01:02:37,990 --> 01:02:42,610
to get portability right so before you

01:02:41,050 --> 01:02:44,380
might read about portability we're going

01:02:42,610 --> 01:02:47,170
to get into why it's so horrible I have

01:02:44,380 --> 01:02:49,390
talked about a lot how OpenSSH does

01:02:47,170 --> 01:02:52,000
portable now there's not open SSL this

01:02:49,390 --> 01:02:54,460
is an open SSH OpenBSD does not have

01:02:52,000 --> 01:02:56,230
anything to do with open SSL open BSD is

01:02:54,460 --> 01:02:58,750
the source of OpenSSH which we'll

01:02:56,230 --> 01:03:02,050
probably all use it has a mostly pretty

01:02:58,750 --> 01:03:04,180
good track record okay the first thing

01:03:02,050 --> 01:03:06,580
is how do you do this how we've done

01:03:04,180 --> 01:03:09,520
this for OpenSSH for many years is we

01:03:06,580 --> 01:03:13,090
assume the same target OS Obst of course

01:03:09,520 --> 01:03:16,420
for us and we code to that standard pick

01:03:13,090 --> 01:03:19,450
one go to it standard api's standard

01:03:16,420 --> 01:03:21,720
intrinsic style we be able to maintain

01:03:19,450 --> 01:03:25,120
the code on the above using modern c

01:03:21,720 --> 01:03:27,460
adapt when necessary finally it's

01:03:25,120 --> 01:03:29,350
important you provide portability shims

01:03:27,460 --> 01:03:32,620
that correctly do the things that the

01:03:29,350 --> 01:03:34,630
other OSS don't provide and only for

01:03:32,620 --> 01:03:36,610
those that need it you don't rewrite

01:03:34,630 --> 01:03:39,880
your own copies of live C string

01:03:36,610 --> 01:03:42,730
functions just because Linux is decided

01:03:39,880 --> 01:03:44,650
Knox how's your coffee okay you just

01:03:42,730 --> 01:03:48,850
provide a sterile coffee if you have any

01:03:44,650 --> 01:03:51,850
buildings okay don't whenever possible

01:03:48,850 --> 01:03:53,830
know if definite no compromise on what

01:03:51,850 --> 01:03:57,250
the intrinsic function to actually do

01:03:53,830 --> 01:04:00,190
hey so that means if there's a function

01:03:57,250 --> 01:04:03,610
called timing safe then with a man comp

01:04:00,190 --> 01:04:05,470
time safe that calm that probably that

01:04:03,610 --> 01:04:07,300
timing safe special variety of it

01:04:05,470 --> 01:04:09,670
probably means something you probably

01:04:07,300 --> 01:04:12,250
shouldn't just make that that calm okay

01:04:09,670 --> 01:04:14,350
it's probably bad if there's a function

01:04:12,250 --> 01:04:16,510
we use called explicit v-0 that your

01:04:14,350 --> 01:04:18,490
operating system doesn't have you might

01:04:16,510 --> 01:04:20,530
want to check why don't you chose to

01:04:18,490 --> 01:04:23,380
call the function called explicit b0

01:04:20,530 --> 01:04:26,370
rather than b0 and wonder why we might

01:04:23,380 --> 01:04:26,370
want to do that so

01:04:27,500 --> 01:04:32,940
see but this is how OpenSSH does border

01:04:30,990 --> 01:04:35,490
okay and you've probably all seen that

01:04:32,940 --> 01:04:38,849
used over this is a how does OpenSSL

01:04:35,490 --> 01:04:40,559
before well assume the OS provides

01:04:38,849 --> 01:04:45,329
nothing because you can't bring support

01:04:40,559 --> 01:04:47,069
for Windows 16 and Visual C 1.5 to do it

01:04:45,329 --> 01:04:51,420
heaven forbid portability being the

01:04:47,069 --> 01:04:53,339
biggest gold bull most logical go full

01:04:51,420 --> 01:04:57,030
of software development you have to do

01:04:53,339 --> 01:05:01,339
that the spaghetti massive if death is a

01:04:57,030 --> 01:05:04,650
def horror and when I say nested 17 deep

01:05:01,339 --> 01:05:09,660
you've been there I've been there it'll

01:05:04,650 --> 01:05:13,380
be if def OpenSSL DMS count else if open

01:05:09,660 --> 01:05:16,260
SSL win foo pound else if open SSL

01:05:13,380 --> 01:05:25,530
tandem bla pound else if openness

01:05:16,260 --> 01:05:27,119
yourself up pound else how'd it do in

01:05:25,530 --> 01:05:28,980
the middle of this they'll trick you and

01:05:27,119 --> 01:05:31,440
the goal is to find out the middle of

01:05:28,980 --> 01:05:33,030
this half screen of if desk where the

01:05:31,440 --> 01:05:38,010
thing that finally gives up and says

01:05:33,030 --> 01:05:41,250
yeah okay it's just POSIX okay but

01:05:38,010 --> 01:05:44,040
literally this it was throughout this

01:05:41,250 --> 01:05:46,109
code base it makes it incredibly hard to

01:05:44,040 --> 01:05:48,240
read it makes it incredibly hard to look

01:05:46,109 --> 01:05:50,700
at and maintain and to even find out

01:05:48,240 --> 01:05:53,280
when you look at a piece of arcane code

01:05:50,700 --> 01:05:56,760
is this being used is this not being is

01:05:53,280 --> 01:05:59,250
being compiled in not compiled in yeah

01:05:56,760 --> 01:06:00,720
so I would say it's definitely there put

01:05:59,250 --> 01:06:01,470
support abilities let's write it in a

01:06:00,720 --> 01:06:04,770
dialect called

01:06:01,470 --> 01:06:07,470
open SSL see it's not see in the sense

01:06:04,770 --> 01:06:10,230
that we know it okay you sure it's the C

01:06:07,470 --> 01:06:11,730
language but a lot of the normal library

01:06:10,230 --> 01:06:13,559
functions we know when used are not

01:06:11,730 --> 01:06:15,210
there where they are replaced with

01:06:13,559 --> 01:06:18,900
openness estate

01:06:15,210 --> 01:06:20,730
or bio versions of it that might work

01:06:18,900 --> 01:06:25,319
kind of like the way that the standard

01:06:20,730 --> 01:06:26,819
ones do or might not okay the games we

01:06:25,319 --> 01:06:29,940
met all those leaders and you force all

01:06:26,819 --> 01:06:31,380
platforms to use it again just because a

01:06:29,940 --> 01:06:33,630
platform

01:06:31,380 --> 01:06:36,660
just because will see doesn't cut

01:06:33,630 --> 01:06:40,140
this will see 1 point 5 2 has a linking

01:06:36,660 --> 01:06:42,540
error when you use an SM printf instead

01:06:40,140 --> 01:06:44,400
will do 20 lines of ster copies of bits

01:06:42,540 --> 01:06:46,710
into stuff and have a comment at the top

01:06:44,400 --> 01:06:49,760
I used it this way because SM printf

01:06:46,710 --> 01:06:52,250
pukes on visuals see 1 point 5 - hello

01:06:49,760 --> 01:06:56,490
it's probably time to retire that code

01:06:52,250 --> 01:06:59,220
ok so we did send many things to

01:06:56,490 --> 01:07:01,920
Valhalla episode support might

01:06:59,220 --> 01:07:05,160
right away as you people noticed that I

01:07:01,920 --> 01:07:06,630
killed it I said I believe my committed

01:07:05,160 --> 01:07:08,609
saying that if Norse legends were true

01:07:06,630 --> 01:07:11,220
episode it will meet me in Valhalla and

01:07:08,609 --> 01:07:14,670
we will be friends assuming I died with

01:07:11,220 --> 01:07:17,160
my fingers on the keyboard summoned off

01:07:14,670 --> 01:07:19,920
support of varying bryony's mac OS

01:07:17,160 --> 01:07:23,670
classic for pre OS 10 I hate to announce

01:07:19,920 --> 01:07:27,079
it if you've got a Mac SC 30 libra SSL

01:07:23,670 --> 01:07:28,589
will not work for you you will have to

01:07:27,079 --> 01:07:32,010
so sorry

01:07:28,589 --> 01:07:40,400
or put a fishbowl editor and put an Alex

01:07:32,010 --> 01:07:45,030
box into the screen win 16 VMs support I

01:07:40,400 --> 01:07:47,220
don't know if you can see the bottom we

01:07:45,030 --> 01:07:50,490
can talk a little bit about VMs support

01:07:47,220 --> 01:07:54,540
and VMs support tendrils in there were

01:07:50,490 --> 01:07:56,790
just astonishing and I say oh yeah we

01:07:54,540 --> 01:08:11,850
killed that three weeks ago with bits of

01:07:56,790 --> 01:08:14,250
it Zulu which is I believe

01:08:11,850 --> 01:08:19,140
two sips in his house in pound the final

01:08:14,250 --> 01:08:22,890
furnaces ldms and dreams and I believe

01:08:19,140 --> 01:08:25,109
that truly Cthulhu does live in founded

01:08:22,890 --> 01:08:27,870
by an openness without be a masochist

01:08:25,109 --> 01:08:31,010
there is no question of it we'll talk a

01:08:27,870 --> 01:08:31,010
little bit about that shortly

01:08:35,210 --> 01:08:42,630
please go live in another library yeah

01:08:39,920 --> 01:08:46,140
of course the memory allocator was an

01:08:42,630 --> 01:08:48,420
issue we killed it we removed it

01:08:46,140 --> 01:08:51,140
we removed the option to compile it into

01:08:48,420 --> 01:08:53,700
turn it on and we removed the code

01:08:51,140 --> 01:08:55,530
suddenly security tools started to

01:08:53,700 --> 01:08:57,290
notice that memory allocation issues are

01:08:55,530 --> 01:08:59,970
actually at work on this code base

01:08:57,290 --> 01:09:04,320
somebody ran it through Kobe ready right

01:08:59,970 --> 01:09:10,740
after we disabled it they may be able to

01:09:04,320 --> 01:09:17,580
do and they rancher Coverity and it's

01:09:10,740 --> 01:09:19,410
like oh wow excuse me and if you ever

01:09:17,580 --> 01:09:21,750
think there's people at Stanford with a

01:09:19,410 --> 01:09:25,109
an analyzer who are now running it

01:09:21,750 --> 01:09:25,770
through effectively and thank you so for

01:09:25,109 --> 01:09:27,660
the alligator

01:09:25,770 --> 01:09:29,190
we removed the debug panel off and other

01:09:27,660 --> 01:09:31,020
nasties inside the library that could

01:09:29,190 --> 01:09:33,839
sent private is the Box here's the

01:09:31,020 --> 01:09:36,990
problem the wrappers remain okay so

01:09:33,839 --> 01:09:39,839
crypto mouth open SSL now open SSL set

01:09:36,990 --> 01:09:42,690
debug now lock open SSL halt catch by

01:09:39,839 --> 01:09:45,240
term a lock debug change at runtime

01:09:42,690 --> 01:09:48,359
blah blah blah all of these things up

01:09:45,240 --> 01:09:50,040
aren't in open SSL exposed header files

01:09:48,359 --> 01:09:52,380
and this is the problem we're facing we

01:09:50,040 --> 01:09:54,330
don't know we touch screen packages

01:09:52,380 --> 01:09:57,660
actually call these functions of use

01:09:54,330 --> 01:10:00,540
them okay so in this case what we did I

01:09:57,660 --> 01:10:03,150
think I was treaded most of this what is

01:10:00,540 --> 01:10:04,170
that we simply would defend them selling

01:10:03,150 --> 01:10:05,900
the things that say turn on the

01:10:04,170 --> 01:10:07,800
debugging now look it just doesn't do

01:10:05,900 --> 01:10:09,840
okay

01:10:07,800 --> 01:10:11,520
the things that say replaced in our

01:10:09,840 --> 01:10:16,380
wrapper avantime it says yeah that

01:10:11,520 --> 01:10:18,460
didn't work okay and the actual malloc

01:10:16,380 --> 01:10:21,430
and free Rihanna

01:10:18,460 --> 01:10:24,400
are just using the standard intrinsic

01:10:21,430 --> 01:10:26,680
API from the operating system not trying

01:10:24,400 --> 01:10:28,750
to do clever things okay now

01:10:26,680 --> 01:10:30,790
interestingly you've let those rappers

01:10:28,750 --> 01:10:32,920
there but the library internally no

01:10:30,790 --> 01:10:36,250
longer uses them so part of our strategy

01:10:32,920 --> 01:10:38,320
to moving away from it is to if we don't

01:10:36,250 --> 01:10:39,760
like the safety on behalf of keep it for

01:10:38,320 --> 01:10:41,980
eternal battle bility but we're simply

01:10:39,760 --> 01:10:44,200
not going to use it inside so the league

01:10:41,980 --> 01:10:47,200
raster cell doesn't use openness Nomad

01:10:44,200 --> 01:10:49,180
along crypto malla there were few others

01:10:47,200 --> 01:10:52,510
there was there were a number of malloc

01:10:49,180 --> 01:10:53,860
flavors in there no I put that they

01:10:52,510 --> 01:10:55,930
don't leave a lot player we've removed

01:10:53,860 --> 01:11:00,130
them all all the things in there now

01:10:55,930 --> 01:11:01,900
abused melon Rihanna cowlick yeah ad hoc

01:11:00,130 --> 01:11:04,300
array which is actually they've done was

01:11:01,900 --> 01:11:07,690
added to OpenBSD zlib see it is

01:11:04,300 --> 01:11:09,730
non-standard but it's problem we saw

01:11:07,690 --> 01:11:12,700
occurring all over the place in open SSL

01:11:09,730 --> 01:11:16,989
and also in other parts of our tree and

01:11:12,700 --> 01:11:19,420
this is first of all but the necessary

01:11:16,989 --> 01:11:21,420
conversion leo is did my BA plus mam

01:11:19,420 --> 01:11:25,450
sentences zero me change those two comic

01:11:21,420 --> 01:11:28,630
but this one here now log X times y and

01:11:25,450 --> 01:11:32,590
I have 20 objects I think I got 20

01:11:28,630 --> 01:11:35,170
object 20 objects and I know family how

01:11:32,590 --> 01:11:37,719
you know of size 30 oh but wait I didn't

01:11:35,170 --> 01:11:42,640
really know how many I could have is

01:11:37,719 --> 01:11:46,150
this that computation can overflow and

01:11:42,640 --> 01:11:48,790
if it does battle stop happens okay

01:11:46,150 --> 01:11:50,890
where is our cow lock has a hopeless

01:11:48,790 --> 01:11:54,850
check for overflow and if it would

01:11:50,890 --> 01:11:56,290
overflow it returns it okay and so what

01:11:54,850 --> 01:11:58,150
we actually did is the problem is that

01:11:56,290 --> 01:11:59,890
people don't want to call a lock with

01:11:58,150 --> 01:12:01,570
the overflow checking because they also

01:11:59,890 --> 01:12:04,360
take the penalty of the memory set to

01:12:01,570 --> 01:12:06,880
zero so we actually added trionic array

01:12:04,360 --> 01:12:08,440
which is essentially Khao Lak with

01:12:06,880 --> 01:12:11,710
bounds checking on the integer

01:12:08,440 --> 01:12:13,330
multiplication okay and then allocate an

01:12:11,710 --> 01:12:16,570
object of that size without doing the

01:12:13,330 --> 01:12:18,660
memory zero okay in case you're

01:12:16,570 --> 01:12:21,489
wondering why we're paranoid about this

01:12:18,660 --> 01:12:22,330
we probably see the openness of alpha

01:12:21,489 --> 01:12:24,730
BSD where

01:12:22,330 --> 01:12:30,840
Paige with only two holes in 15 years

01:12:24,730 --> 01:12:30,840
one of those what's that

01:12:32,230 --> 01:12:36,160
so if you think we're being overly

01:12:33,850 --> 01:12:38,590
paranoid no these are the kind of things

01:12:36,160 --> 01:12:40,330
that cause problems and we've been bit

01:12:38,590 --> 01:12:43,570
in the Florida we won't be bit again and

01:12:40,330 --> 01:12:45,640
so yeah we need that little intrinsic we

01:12:43,570 --> 01:12:48,610
all array that does the proper range to

01:12:45,640 --> 01:12:50,380
the analog pin free of handle now since

01:12:48,610 --> 01:12:53,020
I don't know man

01:12:50,380 --> 01:12:54,640
but the hose Rudolph's tests were known

01:12:53,020 --> 01:12:59,020
ahead of time because the OpenSSL

01:12:54,640 --> 01:13:02,590
barians don't so we just know let's call

01:12:59,020 --> 01:13:07,570
them no call do the right thing finally

01:13:02,590 --> 01:13:10,390
entropy entropy is a fun thing that is

01:13:07,570 --> 01:13:12,820
used to generate keys and particularly

01:13:10,390 --> 01:13:14,710
with ssl generate ephemeral keys because

01:13:12,820 --> 01:13:16,300
your key your private key is used in

01:13:14,710 --> 01:13:19,060
this association through the initial

01:13:16,300 --> 01:13:20,170
initial hello if I I'm there but you

01:13:19,060 --> 01:13:22,060
really who you say you are there's a

01:13:20,170 --> 01:13:24,400
certificate all that good stuff but the

01:13:22,060 --> 01:13:26,290
actual encrypt is the decrypted stream

01:13:24,400 --> 01:13:28,480
is just encrypted with a symmetric

01:13:26,290 --> 01:13:31,150
cipher with two randomly chosen keys in

01:13:28,480 --> 01:13:32,890
each other okay and those randomly

01:13:31,150 --> 01:13:34,870
chosen keys need to come from an entropy

01:13:32,890 --> 01:13:37,840
source and that entropy source had

01:13:34,870 --> 01:13:39,820
better be pretty good obviously if you

01:13:37,840 --> 01:13:41,950
can predict what the random number

01:13:39,820 --> 01:13:44,260
generator was seated with and what it

01:13:41,950 --> 01:13:48,330
will do you can have a good idea to

01:13:44,260 --> 01:13:48,330
predict what the key will be and then

01:13:57,500 --> 01:14:02,760
that killed my browser well anyway you

01:14:00,420 --> 01:14:07,790
get an idea how much how much work it

01:14:02,760 --> 01:14:12,470
actually was to potential work there was

01:14:07,790 --> 01:14:14,460
enough to turn into live roses oh and it

01:14:12,470 --> 01:14:19,110
for that very reason

01:14:14,460 --> 01:14:21,990
NBC 5 photo 6 is isn't yeah is it an

01:14:19,110 --> 01:14:32,310
important release for no basic and

01:14:21,990 --> 01:14:34,970
everyone now we could go on I guess that

01:14:32,310 --> 01:14:40,170
won't just start the stuff again and

01:14:34,970 --> 01:14:44,520
depending on what watch depending on

01:14:40,170 --> 01:14:51,420
what we actually crashed on we will see

01:14:44,520 --> 01:14:54,510
something interesting right we ran our

01:14:51,420 --> 01:14:57,210
time allocation where we're actually

01:14:54,510 --> 01:15:03,030
looking at I think we're an hour if we

01:14:57,210 --> 01:15:06,990
oh it's not 12 o'clock one she's

01:15:03,030 --> 01:15:11,630
something until one there's hope there's

01:15:06,990 --> 01:15:11,630
coffee outside still Oh

01:15:26,150 --> 01:15:29,290
[Music]

01:15:32,520 --> 01:15:35,609
[Music]

01:15:38,670 --> 01:15:41,779
[Music]

01:16:33,490 --> 01:16:41,150
looks like we're having some some

01:16:36,140 --> 01:16:49,120
playback problems here I can try again I

01:16:41,150 --> 01:16:49,120
guess but or we could just break early I

01:16:51,070 --> 01:16:54,340
hang on

01:17:51,960 --> 01:17:59,619
we definitely your RSA key is pretty

01:17:56,260 --> 01:18:02,349
random you can make if you make open SSL

01:17:59,619 --> 01:18:04,960
check and to rethink our fail during RSA

01:18:02,349 --> 01:18:06,789
key generation it will emit the

01:18:04,960 --> 01:18:09,340
intermediate stages of RSA key

01:18:06,789 --> 01:18:18,099
generation into the random sub system to

01:18:09,340 --> 01:18:22,929
generate entropy we've seen how many

01:18:18,099 --> 01:18:24,789
places if we deleted this there is lots

01:18:22,929 --> 01:18:26,619
of little statics in that code chart so

01:18:24,789 --> 01:18:28,179
that at some period though string to

01:18:26,619 --> 01:18:32,559
give the random number generator an

01:18:28,179 --> 01:18:34,840
interview yeah of course the user will

01:18:32,559 --> 01:18:37,780
get the ID and get time of day all this

01:18:34,840 --> 01:18:40,719
fun stuff since these were always there

01:18:37,780 --> 01:18:42,519
again it's an attack target even if your

01:18:40,719 --> 01:18:44,530
OS is using the reasonable source of

01:18:42,519 --> 01:18:46,210
entropy if you can trick the library

01:18:44,530 --> 01:18:49,949
into saying I don't have enough entropy

01:18:46,210 --> 01:18:49,949
it will fall back to using these methods

01:18:55,389 --> 01:18:59,630
responsibility operating system if your

01:18:57,679 --> 01:19:00,739
operating system can't provide you with

01:18:59,630 --> 01:19:03,940
a good source of entropy

01:19:00,739 --> 01:19:03,940
we will not fade it

01:20:26,550 --> 01:20:31,610
okay something is just not working right

01:20:33,050 --> 01:20:49,020
yeah I guess this is fun to watch as

01:20:36,780 --> 01:20:52,070
well I think we've triggered something

01:20:49,020 --> 01:20:52,070
we don't want

01:21:04,369 --> 01:21:13,639
mr. paving or we could as I said just

01:21:09,739 --> 01:21:17,770
have free time for about an hour it's

01:21:13,639 --> 01:21:17,770
really up to you what you want to do

01:21:23,990 --> 01:21:33,210
you can make if you make OpenSSL check

01:21:27,150 --> 01:22:17,910
entropy thing or fail during our stages

01:21:33,210 --> 01:22:19,830
of our style is horrendous when it

01:22:17,910 --> 01:22:22,350
exists or when it's just random smile

01:22:19,830 --> 01:22:23,850
within a file we've done a lot of stuff

01:22:22,350 --> 01:22:25,860
since you decided we're going to port it

01:22:23,850 --> 01:22:28,410
we don't worry about upstream let's make

01:22:25,860 --> 01:22:30,240
this codebase readable you know you

01:22:28,410 --> 01:22:32,250
could like 10s or not Kanna

01:22:30,240 --> 01:22:34,110
what I can't I don't care I mean it's

01:22:32,250 --> 01:22:35,760
just do something consistent do

01:22:34,110 --> 01:22:37,800
something consistent document it to a

01:22:35,760 --> 01:22:39,810
standard that spawned the rest of the

01:22:37,800 --> 01:22:41,370
rope you can understand so the harvester

01:22:39,810 --> 01:22:44,100
will can start looking at your code and

01:22:41,370 --> 01:22:46,110
seeing where there are issues many eyes

01:22:44,100 --> 01:22:48,930
actually make stuff better or not worse

01:22:46,110 --> 01:22:51,120
and so we're KN effing the whole thing

01:22:48,930 --> 01:22:53,160
is it makes it more readable that

01:22:51,120 --> 01:22:54,960
sometimes makes the horrors visible

01:22:53,160 --> 01:22:57,570
which is the point and more readable

01:22:54,960 --> 01:22:59,850
hopefully means more developer

01:22:57,570 --> 01:23:07,560
involvement more community involvement

01:22:59,850 --> 01:23:10,170
not the OpenSSL bug tracking RT has been

01:23:07,560 --> 01:23:12,540
and continues to be a fantastic resource

01:23:10,170 --> 01:23:14,640
for us although a number of the people

01:23:12,540 --> 01:23:16,590
who are submitting boats to them now

01:23:14,640 --> 01:23:18,180
give them to us first or at the same

01:23:16,590 --> 01:23:20,640
time because they've kind of noticed

01:23:18,180 --> 01:23:24,860
that we actually fix them and say thank

01:23:20,640 --> 01:23:28,740
you would be good we like to do this and

01:23:24,860 --> 01:23:31,190
we report bugs there and they seem to go

01:23:28,740 --> 01:23:31,190
there to die

01:23:32,560 --> 01:23:45,730
we still fight shedding that null

01:23:33,970 --> 01:23:50,170
pointer chase large bike we were

01:23:45,730 --> 01:23:52,180
cheering the bike anyway so we keep

01:23:50,170 --> 01:23:54,670
fixing things and we they keep being

01:23:52,180 --> 01:23:59,370
passed up and there we go without

01:23:54,670 --> 01:24:03,720
actually yeah they didn't have a seat

01:23:59,370 --> 01:24:07,060
there's a way to fiddle with the ssl

01:24:03,720 --> 01:24:08,440
it's the negotiation options such that

01:24:07,060 --> 01:24:09,880
you can trick the library to follow the

01:24:08,440 --> 01:24:11,050
bots and following the golf partners so

01:24:09,880 --> 01:24:12,640
if you actually look at it close enough

01:24:11,050 --> 01:24:19,450
that you people are running open ssl you

01:24:12,640 --> 01:24:21,370
crash anybody okay this is I kind of

01:24:19,450 --> 01:24:24,340
been looted before all the api's are

01:24:21,370 --> 01:24:25,780
belong to include open ssl just about i

01:24:24,340 --> 01:24:28,870
don't think they've ever heard of static

01:24:25,780 --> 01:24:36,640
or or when they did they redefined how

01:24:28,870 --> 01:24:38,110
to find static global no they likely put

01:24:36,640 --> 01:24:40,180
absolutely everything into public better

01:24:38,110 --> 01:24:42,670
files and the result is we have this

01:24:40,180 --> 01:24:44,170
enormous space of api that could

01:24:42,670 --> 01:24:46,630
potentially be used by external

01:24:44,170 --> 01:24:48,670
applications and this is this kind of a

01:24:46,630 --> 01:24:50,350
big problem because there's a lot of

01:24:48,670 --> 01:24:51,880
this that publishin be used outside the

01:24:50,350 --> 01:24:53,710
library or isn't used outside the

01:24:51,880 --> 01:24:55,690
language that we can know for sure we're

01:24:53,710 --> 01:24:57,790
slowly finding out because if you change

01:24:55,690 --> 01:25:00,610
something or say nothing should use this

01:24:57,790 --> 01:25:03,250
we delete it we are our faithful courts

01:25:00,610 --> 01:25:05,980
guys and OpenBSD run a ports build on

01:25:03,250 --> 01:25:08,440
nine architectures and come back ago no

01:25:05,980 --> 01:25:09,940
you can't do that that stuff has

01:25:08,440 --> 01:25:11,830
happened so how are we going to fix it

01:25:09,940 --> 01:25:13,450
maybe sometimes that's oh this is an

01:25:11,830 --> 01:25:14,920
easy fix and the in these few pieces of

01:25:13,450 --> 01:25:16,480
software let's make the changes and send

01:25:14,920 --> 01:25:18,160
them upstream and that works and

01:25:16,480 --> 01:25:19,990
sometimes it's notice is too painful

01:25:18,160 --> 01:25:22,330
we'll we'll go back to to have you back

01:25:19,990 --> 01:25:24,400
in so we're actively doing the desk full

01:25:22,330 --> 01:25:26,320
of five as part of this development

01:25:24,400 --> 01:25:27,970
process is a continual

01:25:26,320 --> 01:25:29,860
let's fix the call of this month is

01:25:27,970 --> 01:25:31,660
trying to give you are consistent but

01:25:29,860 --> 01:25:33,780
let's do this continuous testing with

01:25:31,660 --> 01:25:33,780
before

01:25:38,560 --> 01:25:44,870
so yeah we put the suppose they go out

01:25:42,920 --> 01:25:47,090
on the dock and remove some of the

01:25:44,870 --> 01:25:48,770
unneeded stuff but the moment we're dead

01:25:47,090 --> 01:25:50,330
we'll be in pretty cautious trying to

01:25:48,770 --> 01:25:53,000
make sure that we can stand any

01:25:50,330 --> 01:25:54,800
compatible or mostly compatible with

01:25:53,000 --> 01:25:56,120
some of the ecosystem out there so if

01:25:54,800 --> 01:26:02,960
you think we just anew because they were

01:25:56,120 --> 01:26:05,300
dangerous and I said we move the library

01:26:02,960 --> 01:26:07,820
to use the intrinsic we can remove BIOS

01:26:05,300 --> 01:26:10,159
printf crypto mal but we stop using my

01:26:07,820 --> 01:26:12,530
ourselves we use regular amount of calif

01:26:10,159 --> 01:26:15,260
is rihanna's printf stroke add all those

01:26:12,530 --> 01:26:18,520
fun things the strange api is remain for

01:26:15,260 --> 01:26:22,429
compatibility but we don't use them okay

01:26:18,520 --> 01:26:25,969
normal POSIX API use hopefully more and

01:26:22,429 --> 01:26:35,239
easier developer involvement not I hope

01:26:25,969 --> 01:26:38,810
to figure out weird API yeah no I will

01:26:35,239 --> 01:26:41,960
not add same API primitives to live SSL

01:26:38,810 --> 01:26:43,699
because live SSL is not they see your

01:26:41,960 --> 01:26:45,590
operating system provides you with live

01:26:43,699 --> 01:26:52,900
C in the standard interface for a reason

01:26:45,590 --> 01:26:52,900
use it no

01:26:58,040 --> 01:27:03,210
well generally speaking you don't need

01:27:00,870 --> 01:27:06,090
to in an application call openness to

01:27:03,210 --> 01:27:07,679
something or vital now BIOS dirty or

01:27:06,090 --> 01:27:10,040
things like that you can choose in your

01:27:07,679 --> 01:27:13,770
application to just use the regular ones

01:27:10,040 --> 01:27:14,820
okay so since that was always kind of

01:27:13,770 --> 01:27:17,429
auction in the first place

01:27:14,820 --> 01:27:19,170
now do you still need to do like EVP

01:27:17,429 --> 01:27:20,489
interfaces to cyphers it up of course

01:27:19,170 --> 01:27:25,770
you do that those calls are going to

01:27:20,489 --> 01:27:27,750
change that those are the problems so

01:27:25,770 --> 01:27:30,449
some specific phone issues by I said

01:27:27,750 --> 01:27:32,730
printf this one I'm going to continue a

01:27:30,449 --> 01:27:35,850
little poke back and forth with field

01:27:32,730 --> 01:27:38,550
rod over it and so far I've lost I'm

01:27:35,850 --> 01:27:40,230
trying to suck Ted into my cause we're

01:27:38,550 --> 01:27:43,889
gonna eventually okay each other's dip

01:27:40,230 --> 01:27:46,889
and just do it my printout is like SM

01:27:43,889 --> 01:27:48,360
printer mostly except if you notice in

01:27:46,889 --> 01:27:50,730
print a passive protect will return

01:27:48,360 --> 01:27:52,560
minus one if it fails but normally if s

01:27:50,730 --> 01:27:55,920
in print F tries to print it to a string

01:27:52,560 --> 01:27:57,570
and camp and it would Trump date okay it

01:27:55,920 --> 01:28:00,870
returns the length that it would've

01:27:57,570 --> 01:28:02,340
needed to to print everything you want

01:28:00,870 --> 01:28:10,170
to do to that string so return a.length

01:28:02,340 --> 01:28:13,980
bigger than what you used to know the

01:28:10,170 --> 01:28:16,650
necessary our concern Lord promised this

01:28:13,980 --> 01:28:21,210
one doesn't do that is it with truncate

01:28:16,650 --> 01:28:23,310
it returns -1 every time and so when

01:28:21,210 --> 01:28:25,980
people assume that s imprint of behaves

01:28:23,310 --> 01:28:27,659
like this and printf bad things happen

01:28:25,980 --> 01:28:29,639
if they're actually calling violence in

01:28:27,659 --> 01:28:31,380
printf and it returns negative one

01:28:29,639 --> 01:28:35,010
instead of a large value that they are

01:28:31,380 --> 01:28:36,840
expecting so I've never even actually

01:28:35,010 --> 01:28:39,060
painted my way through this fear about

01:28:36,840 --> 01:28:43,320
500 calls to violence and protests in

01:28:39,060 --> 01:28:45,810
the library don't ask about probably

01:28:43,320 --> 01:28:47,100
approximately 480 of them didn't check

01:28:45,810 --> 01:28:50,190
the return value at all

01:28:47,100 --> 01:28:51,630
that's kinda okay if you don't care

01:28:50,190 --> 01:28:52,530
about truncation we still have to go

01:28:51,630 --> 01:28:55,020
through them make sure they actually

01:28:52,530 --> 01:28:56,550
should shouldn't care about complication

01:28:55,020 --> 01:28:58,850
but let's assume that they were okay

01:28:56,550 --> 01:28:58,850
with that

01:29:02,030 --> 01:29:06,530
the return code fully 3/4 of them

01:29:04,610 --> 01:29:09,829
assumed that the thing actually returned

01:29:06,530 --> 01:29:12,559
with SN printf returns and so it's like

01:29:09,829 --> 01:29:13,789
don't you have to preserve this thing to

01:29:12,559 --> 01:29:15,980
preserve its negative one that I'm

01:29:13,789 --> 01:29:17,659
looking at given that about 3/4 of the

01:29:15,980 --> 01:29:20,840
calls in the library or wrong I'm

01:29:17,659 --> 01:29:22,730
betting about more than that are wrong

01:29:20,840 --> 01:29:24,440
in the outside ecosystem and we should

01:29:22,730 --> 01:29:27,880
just change the API to be like I said

01:29:24,440 --> 01:29:31,010
printf it would probably be no worse so

01:29:27,880 --> 01:29:32,449
final sternum is not normal to do that

01:29:31,010 --> 01:29:34,489
you pass there deep enough corner it

01:29:32,449 --> 01:29:36,710
says bang thank you

01:29:34,489 --> 01:29:38,869
don't do that this one conveniently

01:29:36,710 --> 01:29:40,639
ignores novel so we can't get rid of

01:29:38,869 --> 01:29:41,869
this interface or make it the same as

01:29:40,639 --> 01:29:46,280
the standard because we don't know how

01:29:41,869 --> 01:29:50,329
many applications out there air had an

01:29:46,280 --> 01:29:53,289
error day this is my favorite function

01:29:50,329 --> 01:29:53,289
that I build it

01:30:01,409 --> 01:30:12,719
okay right I think it's probably unless

01:30:08,520 --> 01:30:14,030
we come up with any other Justin oh

01:30:12,719 --> 01:30:22,230
please

01:30:14,030 --> 01:30:25,139
source yours no this is just we just

01:30:22,230 --> 01:30:28,350
break early and be the first in line for

01:30:25,139 --> 01:30:34,860
lunch so right I hope you enjoyed the

01:30:28,350 --> 01:30:36,960
session well I am a number of open BC

01:30:34,860 --> 01:30:38,820
people will be around for a rest of the

01:30:36,960 --> 01:30:43,739
conference and we'll be taking questions

01:30:38,820 --> 01:30:49,010
in the end time some of us also respond

01:30:43,739 --> 01:30:51,270
to donations of beer and so forth well

01:30:49,010 --> 01:30:56,239
we'll keep you around so thanks for

01:30:51,270 --> 01:30:56,239

YouTube URL: https://www.youtube.com/watch?v=nxZ7EGT1POI


