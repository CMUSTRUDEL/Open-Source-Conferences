Title: Let’s make manuals more useful, part 1 - Ingo Schwarze
Publication date: 2019-10-13
Playlist: EuroBSDcon 2014, Bulgaria
Description: 
	Who should take this course:

This course is intended for the following audiences. For each group, the topic numbers that will be of the most immediate interest are listed, but the other topics are likely to be useful as well.

Software developers, since no software is complete without documentation – in particular, but not limited to, developers of publicly available, portable software. (1, 2, 3, 4, 0)
Operating system developers, since all operating system development and maintenance includes keeping the system’s native documentation, and the tools handling it, up to date. (5, 6, 7, 3, 4, 0)
Porters, that is, people porting software to a given operating system and providing ports and packages. Such work usually requires dealing with a wide variety of documentation formats. (6, 7, 3, 2, 4)
Documentation developers, that is, people specifically working on software manuals, even if they are not developing the software itself. (0, 1, 2, 3, 4, 7)
System administrators, to understand how documentation is written, built, installed, and indexed for searching, to help troubleshooting and supporting their users. (6, 2, 4, 1, 7)
Some end users of computers running BSD operating systems may also find the course interesting to better understand how to use documentation search and display tools and to get some background on how these tools, and documentation formatting and installation in general, works. (4, 0, 1, 7)
Attendants are expected to have basic experience using the command-line user interface of UNIX-like operating systems. Basic experience in programming and system administration may help understanding a few points, but is not required. Prior knowledge about documentation formatting and processing tools is not required, but doesn’t hurt either.

Ingo Schwarze will try to keep the content accessible for newcomers to the field of documentation formatting, but to also cover the newest developments and tools that specialists in the field will be interested in.

If participants drop Ingo Schwarze a mail beforehand to, preferably right after registering, stating their background and/or what they are most interested in, he can use such information to tune the course content towards the audience.

Description:

Manual pages have been a resource of critical importance in UNIX for more than 40 years, since Version 1 AT&T UNIX. The steady evolution of the mandoc toolbox during the last six years allows to leverage the various strengths of the concept much better than in the past and to deliver more useful documentation.
(0) The course will start with a brief introduction explaining what these strengths are, and providing some historical background.
After that, it will teach:

(1) How to get started using the mdoc(7) formatting language for writing new software manuals, how to do so without spending too much time learning the language, and which resources to use while working on mdoc(7) manuals.
(2) How to make sure that mdoc(7)-based documentation in a portable software distribution is portable, using the mandoc(1) -Tman output mode and the ./configure mechanism.
(3) How to support quality control of existing manuals using mandoc(1) – Tlint and other tools.
At about this point, there will be a working phase with hands-on exercises.

(4) How to use the mandoc-based apropos(1) search tool and how to build its databases with makewhatis(8).
(5) How to effectively integrate mandoc(1) as a manual formatter and manual page search system into the base system of a BSD operating system and what to pay attention to while doing so
(6) How to effectively use mandoc(1) as a manual formatter and manual page search system in a porting and packaging framework, and what to do about manuals that require groff(1) for correct formatting.
(7) Which next steps are recommended for the major BSD systems: OpenBSD, NetBSD, FreeBSD, DragonFly, …
Depending on what Ingo Schwarze gets done in mandoc development during the summer, he is likely to add one or two surprise topics to the course showing the latest developments.

Speaker biography:

Ingo Schwarze has been an OpenBSD user since 2001 and a developer
since 2009. He maintains the OpenBSD in-tree mandoc since making
it the only documentation formatter in the base system in 2009/2010.
He also maintains the portable mandoc distribution since 2013 and
the OpenBSD groff(1) port since 2010 and has contributed to various
parts of the OpenBSD userland, for example the Perl rewrite of the
security(8) script, as well as smaller contributions to man(1), to
the rc.d(8) framework, the yp(8) subsystem, the C library, and
various other programs. Outside the free software world, he studied
physics in Siegen/Germany and worked as a researcher in elementary
particle physics at CERN and at the University of Karlsruhe (KIT),
and as a Perl programmer for Sophos UTM.
Captions: 
	00:00:00,770 --> 00:00:09,929
so do you hear me again yeah okay so I

00:00:07,160 --> 00:00:14,370
not going to repeat Peter stunts or

00:00:09,929 --> 00:00:24,170
switching off the micro yo y'all kill me

00:00:14,370 --> 00:00:27,510
like this even in the back okay yeah

00:00:24,170 --> 00:00:30,720
yeah maybe we should just start I'm

00:00:27,510 --> 00:00:33,329
going to start with a short introduction

00:00:30,720 --> 00:00:37,680
anyway so if anybody is a few minutes

00:00:33,329 --> 00:00:40,469
later I won't miss that much welcome all

00:00:37,680 --> 00:00:42,629
of you to the documentation tutorial

00:00:40,469 --> 00:00:45,870
here at Euro BSD con

00:00:42,629 --> 00:00:49,860
let's make manuals more useful is the

00:00:45,870 --> 00:00:52,440
motto for today and I'm going to cover a

00:00:49,860 --> 00:00:57,539
relatively wide range of topics related

00:00:52,440 --> 00:01:02,989
to BSD system documentation some of the

00:00:57,539 --> 00:01:05,760
material is drawn from my two BSD Canada

00:01:02,989 --> 00:01:10,159
presentations three years ago and this

00:01:05,760 --> 00:01:12,780
may but the focus today is more in

00:01:10,159 --> 00:01:16,680
actually hands-on getting stuff done

00:01:12,780 --> 00:01:18,420
then I can the BSD Canada talks more

00:01:16,680 --> 00:01:21,119
technical stuff like how it was

00:01:18,420 --> 00:01:24,060
implemented and how it was integrated

00:01:21,119 --> 00:01:26,640
into system so today we are focusing on

00:01:24,060 --> 00:01:31,020
how do we really make manuals more

00:01:26,640 --> 00:01:41,840
useful I'll get to a kind of table of

00:01:31,020 --> 00:01:45,090
contents a bit later this yeah if we

00:01:41,840 --> 00:01:47,250
want to make manuals more useful then of

00:01:45,090 --> 00:01:49,259
course is the very first thing we must

00:01:47,250 --> 00:01:50,579
understand what our requirements for

00:01:49,259 --> 00:01:53,549
good documentation when it's

00:01:50,579 --> 00:01:56,189
documentation good two things are really

00:01:53,549 --> 00:01:57,899
completely obvious documentation needs

00:01:56,189 --> 00:02:01,290
to be correct and it needs to be

00:01:57,899 --> 00:02:04,290
complete what is sometimes overlooked is

00:02:01,290 --> 00:02:07,259
that it also needs to be concise because

00:02:04,290 --> 00:02:09,869
if it's lengthy and wordy then you lose

00:02:07,259 --> 00:02:12,569
a lot of time reading it and sometimes

00:02:09,869 --> 00:02:13,069
don't even find what you what you need

00:02:12,569 --> 00:02:17,150
to

00:02:13,069 --> 00:02:20,959
manuals for example a good example of a

00:02:17,150 --> 00:02:23,030
documentation violating that another

00:02:20,959 --> 00:02:26,450
point that is often overlooked is that

00:02:23,030 --> 00:02:28,969
documentation should ideally be all in

00:02:26,450 --> 00:02:31,670
one place easy to find and easy to

00:02:28,969 --> 00:02:33,859
access the typical way to violate that

00:02:31,670 --> 00:02:36,319
is to put your documentation on the web

00:02:33,859 --> 00:02:39,530
then people have to search for it first

00:02:36,319 --> 00:02:41,659
and even if they find it they will

00:02:39,530 --> 00:02:43,250
wonder whether it corresponds to the

00:02:41,659 --> 00:02:46,689
version of the software they are

00:02:43,250 --> 00:02:50,000
actually running so make it easy to find

00:02:46,689 --> 00:02:51,650
also it is not just plain text the

00:02:50,000 --> 00:02:54,379
software documentation typically

00:02:51,650 --> 00:02:56,329
contains lots of keywords from different

00:02:54,379 --> 00:02:58,909
languages that in some ways should be

00:02:56,329 --> 00:03:01,730
marked up so that they stand out that

00:02:58,909 --> 00:03:04,340
their function becomes clear it should

00:03:01,730 --> 00:03:07,400
be easy to read in particular if

00:03:04,340 --> 00:03:10,370
everybody adheres to a uniform style for

00:03:07,400 --> 00:03:14,720
display and markup it gets easier for

00:03:10,370 --> 00:03:17,930
users to get used to the style and also

00:03:14,720 --> 00:03:20,750
if people it would adhere to a uniform

00:03:17,930 --> 00:03:24,139
style of writing it it would get easier

00:03:20,750 --> 00:03:26,659
for people to edit documentation which

00:03:24,139 --> 00:03:29,989
is quite important to get it written

00:03:26,659 --> 00:03:32,470
first place so the formatted

00:03:29,989 --> 00:03:35,150
documentation should seem easy to uses

00:03:32,470 --> 00:03:37,940
the language to write it should seem

00:03:35,150 --> 00:03:40,879
easily easy to programmers and remember

00:03:37,940 --> 00:03:42,949
if there is no documentation the code is

00:03:40,879 --> 00:03:45,440
almost unusable and if it's badly

00:03:42,949 --> 00:03:50,299
documented that's about as bad as bad

00:03:45,440 --> 00:03:55,069
code because do what you want from the

00:03:50,299 --> 00:03:58,819
users perspective basically what users

00:03:55,069 --> 00:04:03,439
see is one tool the man command they are

00:03:58,819 --> 00:04:06,199
typing it finds the manuals in the file

00:04:03,439 --> 00:04:08,720
system it transparently calls formative

00:04:06,199 --> 00:04:10,879
on them and it displays the formatted

00:04:08,720 --> 00:04:14,870
text typically somewhere in the pager

00:04:10,879 --> 00:04:17,720
you may consider that trivial but

00:04:14,870 --> 00:04:19,579
actually this is exactly the point where

00:04:17,720 --> 00:04:23,560
during the last few months there has

00:04:19,579 --> 00:04:26,160
been considerable progress because now

00:04:23,560 --> 00:04:29,460
since about August so

00:04:26,160 --> 00:04:32,910
about last month we have one unified

00:04:29,460 --> 00:04:37,410
user interface for all of this

00:04:32,910 --> 00:04:40,410
we're formally several different tools

00:04:37,410 --> 00:04:43,440
apropos for searching man for steering

00:04:40,410 --> 00:04:46,980
the whole process man dog or an Rafa

00:04:43,440 --> 00:04:51,200
vomiting were required there is no you

00:04:46,980 --> 00:04:54,720
can now access all that functionality

00:04:51,200 --> 00:04:56,720
from just the man command with one set

00:04:54,720 --> 00:05:00,900
of options you don't need to learn

00:04:56,720 --> 00:05:04,740
various other commands I'll get to that

00:05:00,900 --> 00:05:07,350
in more detail semantic searching so

00:05:04,740 --> 00:05:09,600
things like I want to search for cross

00:05:07,350 --> 00:05:11,820
references or function names or

00:05:09,600 --> 00:05:14,280
something like that is available in

00:05:11,820 --> 00:05:17,580
production basically since Aprill this

00:05:14,280 --> 00:05:19,290
year and the new online interface

00:05:17,580 --> 00:05:21,600
containing the complete search

00:05:19,290 --> 00:05:24,300
functionality of the command line tool

00:05:21,600 --> 00:05:27,090
is online on the first mayor site since

00:05:24,300 --> 00:05:28,590
July this year so even though this

00:05:27,090 --> 00:05:33,150
sounds completely trivial

00:05:28,590 --> 00:05:37,710
exactly here progress has been made from

00:05:33,150 --> 00:05:41,010
the perspective of manual writers which

00:05:37,710 --> 00:05:43,770
are typically programmers so typically

00:05:41,010 --> 00:05:47,040
not especially in open-source software

00:05:43,770 --> 00:05:50,340
typically not people focusing on writing

00:05:47,040 --> 00:05:55,710
manuals it should be easy to write it

00:05:50,340 --> 00:05:57,600
should be easy to diff the source code

00:05:55,710 --> 00:06:00,210
of the manual as opposed to the manual

00:05:57,600 --> 00:06:04,050
when formatted for the user should also

00:06:00,210 --> 00:06:06,630
be easy to read and change of course it

00:06:04,050 --> 00:06:09,570
must support semantic markup it should

00:06:06,630 --> 00:06:13,350
readily produce various output formats

00:06:09,570 --> 00:06:20,669
and it should be easily portable quite a

00:06:13,350 --> 00:06:24,800
list of requirements we that is both

00:06:20,669 --> 00:06:29,160
Kristoff's and myself who wrote and

00:06:24,800 --> 00:06:30,500
maintained the man doc toolbox and also

00:06:29,160 --> 00:06:34,350
the OpenBSD

00:06:30,500 --> 00:06:36,600
developers recommended to use one simple

00:06:34,350 --> 00:06:38,690
versatile language for all of that with

00:06:36,600 --> 00:06:40,640
which is the end of language

00:06:38,690 --> 00:06:44,810
I will get into more detail about that

00:06:40,640 --> 00:06:47,390
later what it is how it works it is a

00:06:44,810 --> 00:06:49,730
language with a long tradition it is

00:06:47,390 --> 00:06:53,900
based of the on the rough language that

00:06:49,730 --> 00:06:56,750
was invented in 1964 fifty years ago it

00:06:53,900 --> 00:06:59,660
is the successor to the man traditional

00:06:56,750 --> 00:07:01,640
manual language that was used since

00:06:59,660 --> 00:07:03,590
since the 70s

00:07:01,640 --> 00:07:07,490
since the first version of Unix actually

00:07:03,590 --> 00:07:13,280
it was originally assigned beginning of

00:07:07,490 --> 00:07:15,890
the 90s 44.4 bsd and is nowadays it's

00:07:13,280 --> 00:07:17,990
mainly may implemented built-in man-dog

00:07:15,890 --> 00:07:19,760
and in growth in a very compatible way

00:07:17,990 --> 00:07:21,470
so it doesn't really matter which of the

00:07:19,760 --> 00:07:26,990
two tools you use you always get the

00:07:21,470 --> 00:07:30,680
same output also it's not not really an

00:07:26,990 --> 00:07:33,920
arcane or niche thing it's used as the

00:07:30,680 --> 00:07:36,920
default language by all the mayor be as

00:07:33,920 --> 00:07:39,200
DS and since this year also by illumos

00:07:36,920 --> 00:07:42,440
which which is quite surprising they

00:07:39,200 --> 00:07:44,690
switched in one single commit from not

00:07:42,440 --> 00:07:48,730
having it at all not even as an option

00:07:44,690 --> 00:07:48,730
to using it by default for everything

00:07:48,940 --> 00:07:56,500
now to get a bit a bit of a taste and to

00:07:53,420 --> 00:07:59,270
be a bit of historical background I'm

00:07:56,500 --> 00:08:02,240
showing a few historic slides let's

00:07:59,270 --> 00:08:04,880
start with a birthday celebration we

00:08:02,240 --> 00:08:08,000
have half a century almost exactly half

00:08:04,880 --> 00:08:13,040
a century of rough tradition now it was

00:08:08,000 --> 00:08:16,250
in 1964 that Gerry salsa at MIT writing

00:08:13,040 --> 00:08:19,780
his thesis was tired of typing and

00:08:16,250 --> 00:08:25,040
retyping on a mechanical typewriter and

00:08:19,780 --> 00:08:27,590
invented a language to have his thesis

00:08:25,040 --> 00:08:33,070
typeset on the computer which was called

00:08:27,590 --> 00:08:35,330
run off later renamed to Roth and the

00:08:33,070 --> 00:08:38,300
formatting requests many of the

00:08:35,330 --> 00:08:41,300
formatting requests he implemented and

00:08:38,300 --> 00:08:48,350
invented are still used today in in

00:08:41,300 --> 00:08:50,810
modern Roth the the machine you see here

00:08:48,350 --> 00:08:53,440
is the computer he was using an IBM

00:08:50,810 --> 00:08:53,440
mainframe

00:08:53,529 --> 00:09:02,570
now that guy is advertising something

00:08:59,300 --> 00:09:09,860
that is 50 years old why do we still use

00:09:02,570 --> 00:09:12,560
it sounds strange here you have some

00:09:09,860 --> 00:09:15,649
source code actually the source code of

00:09:12,560 --> 00:09:17,920
the next slide I'm I'm going to show the

00:09:15,649 --> 00:09:23,390
slides you see here are written in Roth

00:09:17,920 --> 00:09:26,839
and you see most of it is just text you

00:09:23,390 --> 00:09:29,959
can read it almost as if it were just a

00:09:26,839 --> 00:09:33,410
text file but in between you have these

00:09:29,959 --> 00:09:36,350
formatting commands requests and macros

00:09:33,410 --> 00:09:40,190
like here saying it's beginning a list

00:09:36,350 --> 00:09:42,050
it has a list item and also some of it

00:09:40,190 --> 00:09:44,029
is physical formatting make it a bit

00:09:42,050 --> 00:09:49,220
bigger or have a bit of space in between

00:09:44,029 --> 00:09:52,940
so that's that can easily be hand edited

00:09:49,220 --> 00:09:56,480
so that's how it the former slide looks

00:09:52,940 --> 00:09:58,550
when it's formatted it looks unobtrusive

00:09:56,480 --> 00:10:01,850
it doesn't hide or muddled the actual

00:09:58,550 --> 00:10:05,089
text it harmonizes very well with DIF

00:10:01,850 --> 00:10:09,050
quite to the contrary if you were doing

00:10:05,089 --> 00:10:13,579
it in XML it allows high quality output

00:10:09,050 --> 00:10:16,279
in multiple formats it works with simple

00:10:13,579 --> 00:10:18,500
fast portable readily available tools

00:10:16,279 --> 00:10:20,720
and there is no heavyweight or

00:10:18,500 --> 00:10:23,420
cumbersome to chains anywhere in the

00:10:20,720 --> 00:10:26,810
vicinity in particular you don't need

00:10:23,420 --> 00:10:28,940
any kind of XML for doing that in in one

00:10:26,810 --> 00:10:31,730
word keep it stupidly simple that's

00:10:28,940 --> 00:10:33,920
that's really important because neither

00:10:31,730 --> 00:10:35,839
the people that's what you always need

00:10:33,920 --> 00:10:38,180
to keep in mind neither the people

00:10:35,839 --> 00:10:41,209
reading the documentation nor the people

00:10:38,180 --> 00:10:43,760
writing them want to focus on the

00:10:41,209 --> 00:10:48,730
documentation they want to focus on the

00:10:43,760 --> 00:10:51,890
content or on the programming now I've

00:10:48,730 --> 00:10:54,500
talked a bit about the Rauf language but

00:10:51,890 --> 00:10:56,750
how did it happen that it became

00:10:54,500 --> 00:10:59,269
connected to manuals to documentation

00:10:56,750 --> 00:11:02,839
that goes back to the very first new

00:10:59,269 --> 00:11:05,160
version of research unix these are Ken

00:11:02,839 --> 00:11:09,000
Thompson and Dennis Ritchie

00:11:05,160 --> 00:11:12,180
with their pdp-11 computer at Bell Labs

00:11:09,000 --> 00:11:16,440
and when they prepared the first version

00:11:12,180 --> 00:11:20,209
they rewrote Roth in pdp-11 assembler

00:11:16,440 --> 00:11:23,279
and used that to format their manuals

00:11:20,209 --> 00:11:26,100
the section headers they introduced name

00:11:23,279 --> 00:11:29,490
synopsis description and so on are still

00:11:26,100 --> 00:11:32,189
in use today they were the right thing

00:11:29,490 --> 00:11:35,930
right from the start then in later

00:11:32,189 --> 00:11:38,790
versions of research unix since before

00:11:35,930 --> 00:11:42,600
they had macros that were a bit like

00:11:38,790 --> 00:11:45,810
what we have today and in v7 the man

00:11:42,600 --> 00:11:48,029
language was actually invented that is

00:11:45,810 --> 00:11:51,779
still the main language used today for

00:11:48,029 --> 00:11:53,639
the Linux manual page project B as these

00:11:51,779 --> 00:11:56,310
are no longer using it they are a bit

00:11:53,639 --> 00:12:02,670
more modern but Linux manual pages are

00:11:56,310 --> 00:12:07,529
still using the 1979 language from Bell

00:12:02,670 --> 00:12:09,930
Labs you might wonder ok now he's

00:12:07,529 --> 00:12:13,889
arrived in the 70s was there any

00:12:09,930 --> 00:12:19,529
progress in the last 35 years and yes

00:12:13,889 --> 00:12:24,060
indeed there was for 4.4 bsd the nearly

00:12:19,529 --> 00:12:26,939
final berkeley release a new formatting

00:12:24,060 --> 00:12:30,839
language was invented mainly to support

00:12:26,939 --> 00:12:32,399
semantic markup and cynthia livingston

00:12:30,839 --> 00:12:35,790
of USENIX

00:12:32,399 --> 00:12:39,689
reroute all the bsd manuals from man to

00:12:35,790 --> 00:12:42,240
MDOC which is the basis of the manuals

00:12:39,689 --> 00:12:46,380
we are still using today for the basic

00:12:42,240 --> 00:12:48,809
system use utilities that language has

00:12:46,380 --> 00:12:52,319
considerable expressive power we will

00:12:48,809 --> 00:12:55,170
see some examples later for semantic

00:12:52,319 --> 00:12:58,920
markup it works in practice as a

00:12:55,170 --> 00:13:01,259
standalone language so when you're

00:12:58,920 --> 00:13:03,809
writing your manuals with MDOC you only

00:13:01,259 --> 00:13:06,379
need em doc and nothing else by contrast

00:13:03,809 --> 00:13:10,230
if you're using the older man language

00:13:06,379 --> 00:13:12,389
then you regularly need low level rough

00:13:10,230 --> 00:13:16,009
instructions in between because that

00:13:12,389 --> 00:13:18,259
language is not complete not standalone

00:13:16,009 --> 00:13:21,649
consequently an N

00:13:18,259 --> 00:13:25,029
document is much easier on the eye than

00:13:21,649 --> 00:13:29,419
a manned document it has a more uniform

00:13:25,029 --> 00:13:32,660
view to it and also portability is no

00:13:29,419 --> 00:13:36,410
longer an issue because even if you are

00:13:32,660 --> 00:13:39,309
writing documentation for a legacy

00:13:36,410 --> 00:13:43,879
system that doesn't have an MDOT support

00:13:39,309 --> 00:13:47,689
the man-dog toolbox provides a converter

00:13:43,879 --> 00:13:50,269
I will get to more detail later and of

00:13:47,689 --> 00:13:52,639
course the the semantic markup you get

00:13:50,269 --> 00:13:54,919
with this MDOT language facilitates

00:13:52,639 --> 00:13:58,059
semantic searching which will also be

00:13:54,919 --> 00:14:02,869
one of the main topics of this tutorial

00:13:58,059 --> 00:14:05,509
this is some sample MDOT code again you

00:14:02,869 --> 00:14:08,779
see most of it is just plain text but

00:14:05,509 --> 00:14:11,239
then in between you have semantic

00:14:08,779 --> 00:14:14,419
instructions like here it is inserting

00:14:11,239 --> 00:14:16,879
the name of the utility here it has an

00:14:14,419 --> 00:14:19,729
internal cross-reference to another

00:14:16,879 --> 00:14:22,129
section here it has an external cross

00:14:19,729 --> 00:14:24,980
reference to another manual page and

00:14:22,129 --> 00:14:26,749
there is a prologue will we'll get to

00:14:24,980 --> 00:14:28,419
more detail just to have a first

00:14:26,749 --> 00:14:32,779
impression

00:14:28,419 --> 00:14:35,269
to summarize regarding the classic

00:14:32,779 --> 00:14:39,919
documentation formats three things

00:14:35,269 --> 00:14:43,209
really the Roth input syntax the MDOC

00:14:39,919 --> 00:14:46,489
semantic markup and the man

00:14:43,209 --> 00:14:49,819
presentational output format have proven

00:14:46,489 --> 00:14:52,569
timeless because they are so simple and

00:14:49,819 --> 00:14:55,759
so efficient many people have tried to

00:14:52,569 --> 00:14:57,739
come up with a better concept but

00:14:55,759 --> 00:15:00,379
basically all of these alternative

00:14:57,739 --> 00:15:04,309
concepts failed in some way or other the

00:15:00,379 --> 00:15:08,779
most prominent failure probably is the

00:15:04,309 --> 00:15:14,269
info utility recently Eric is Raymond

00:15:08,779 --> 00:15:16,669
and people say Richard Stallman have to

00:15:14,269 --> 00:15:18,129
agree to retire it and to replace it

00:15:16,669 --> 00:15:27,499
with something else

00:15:18,129 --> 00:15:30,700
so yeah now given that MDOC is really a

00:15:27,499 --> 00:15:34,000
good choice as a language

00:15:30,700 --> 00:15:37,000
we need tools for it of course the

00:15:34,000 --> 00:15:43,900
traditional tools like Roth or hell

00:15:37,000 --> 00:15:49,660
heirloom ruff-ruff work but man dog has

00:15:43,900 --> 00:15:52,030
a lot of advantages most of them are

00:15:49,660 --> 00:15:55,600
functional you you have all the

00:15:52,030 --> 00:15:59,680
functionality in one small binary it

00:15:55,600 --> 00:16:03,790
contains all the searching facilities

00:15:59,680 --> 00:16:06,700
it contains handling of all the input

00:16:03,790 --> 00:16:10,600
formats that typically appear in manual

00:16:06,700 --> 00:16:14,860
pages it ready produces various output

00:16:10,600 --> 00:16:17,620
formats it has an integrated support for

00:16:14,860 --> 00:16:22,180
M document conversion in case you need

00:16:17,620 --> 00:16:25,750
it it includes all the various commands

00:16:22,180 --> 00:16:29,530
like man doc man since a few months

00:16:25,750 --> 00:16:31,690
apropos what is Mac what is it is

00:16:29,530 --> 00:16:35,790
completely free so in particular there

00:16:31,690 --> 00:16:38,640
is no GPL code inside it is lightweight

00:16:35,790 --> 00:16:41,560
particularly don't need a C++ compiler

00:16:38,640 --> 00:16:45,400
it is portable it is small much smaller

00:16:41,560 --> 00:16:48,580
than growth actually and it is very fast

00:16:45,400 --> 00:16:52,210
even rough as a typesetting system is

00:16:48,580 --> 00:16:54,490
extremely fast now for manuals you don't

00:16:52,210 --> 00:16:58,660
need a full typesetting system so

00:16:54,490 --> 00:17:01,600
writing that thing in pure C we were

00:16:58,660 --> 00:17:04,589
able to get for typical n doc pages and

00:17:01,600 --> 00:17:07,810
that another factor of 5 and speed for

00:17:04,589 --> 00:17:10,000
pages like a shell manual you really

00:17:07,810 --> 00:17:13,329
even on a notebook you really notice

00:17:10,000 --> 00:17:19,990
that permitting was man dog is much

00:17:13,329 --> 00:17:22,540
faster than yeah the thing those linux

00:17:19,990 --> 00:17:26,079
guys are in aiming at they'll probably

00:17:22,540 --> 00:17:28,180
replace info with an ASCII doc doc book

00:17:26,079 --> 00:17:31,120
to a train the few times that it I

00:17:28,180 --> 00:17:33,310
experimented with that to try it was

00:17:31,120 --> 00:17:35,290
typically for the things you as a

00:17:33,310 --> 00:17:38,290
developer you usually have to do after

00:17:35,290 --> 00:17:41,770
editing manual it was typically a

00:17:38,290 --> 00:17:44,290
hundred times slower than the typical

00:17:41,770 --> 00:17:50,370
typical things you have to do was

00:17:44,290 --> 00:17:54,160
dog that's really amazing yep all this

00:17:50,370 --> 00:17:58,150
the the basic functionality of man dog

00:17:54,160 --> 00:18:01,270
is no longer new I already presented

00:17:58,150 --> 00:18:04,180
that three years ago at B as they can so

00:18:01,270 --> 00:18:11,140
by now it's quite mature and you can

00:18:04,180 --> 00:18:14,020
really rely on it in production yes so

00:18:11,140 --> 00:18:17,140
so much for the for the introduction a

00:18:14,020 --> 00:18:20,950
bit of motivation a bit of history let

00:18:17,140 --> 00:18:23,580
me give a brief overview what my ideas

00:18:20,950 --> 00:18:28,440
are what we could do here together today

00:18:23,580 --> 00:18:31,330
first if there is a need I will give a

00:18:28,440 --> 00:18:34,270
small introduction to the M doc

00:18:31,330 --> 00:18:40,900
formatting language then I will show you

00:18:34,270 --> 00:18:44,250
a bit about how to use that to to get

00:18:40,900 --> 00:18:47,740
manuals for portable software packages a

00:18:44,250 --> 00:18:51,010
bit larger part will be about quality

00:18:47,740 --> 00:18:53,680
control for exists existing many wheels

00:18:51,010 --> 00:18:55,600
how do I approach an existing code base

00:18:53,680 --> 00:19:00,450
and check where the documentation is

00:18:55,600 --> 00:19:03,160
really okay and after that we can have a

00:19:00,450 --> 00:19:04,920
hands-on working phase where you really

00:19:03,160 --> 00:19:10,360
can get you your fingers dirty

00:19:04,920 --> 00:19:12,670
experimenting with the stuff before I go

00:19:10,360 --> 00:19:16,630
on to present a bit about searching and

00:19:12,670 --> 00:19:20,410
displaying manuals that's the newest

00:19:16,630 --> 00:19:22,720
stuff we have in this tutorial and after

00:19:20,410 --> 00:19:24,820
the coffee break we go to system

00:19:22,720 --> 00:19:27,760
integration how do you need how do you

00:19:24,820 --> 00:19:30,730
use man doc demander toolset as a

00:19:27,760 --> 00:19:35,190
documentation formative in a base system

00:19:30,730 --> 00:19:40,120
or four ports after that again we can

00:19:35,190 --> 00:19:43,180
work a bit and then I'll wrap up about

00:19:40,120 --> 00:19:45,540
the status in the in the BSD status and

00:19:43,180 --> 00:19:49,450
Linux and what should be the next steps

00:19:45,540 --> 00:19:54,240
so I'm hoping that that we are through

00:19:49,450 --> 00:19:54,240
at around 7:00 at around 5:30

00:19:54,560 --> 00:20:04,130
good before we really get into it

00:19:59,120 --> 00:20:07,160
I propose that we have a very brief

00:20:04,130 --> 00:20:12,410
introduction of ourselves just about

00:20:07,160 --> 00:20:15,290
four sentences per per person just state

00:20:12,410 --> 00:20:17,090
your name what do you think your main

00:20:15,290 --> 00:20:19,730
role is like whether you consider

00:20:17,090 --> 00:20:22,160
yourself an application programmer a

00:20:19,730 --> 00:20:24,860
technical writer an operating system

00:20:22,160 --> 00:20:29,030
developed a system administrator B as

00:20:24,860 --> 00:20:35,120
the user whatever your project

00:20:29,030 --> 00:20:36,890
affiliation if any and what are you what

00:20:35,120 --> 00:20:43,730
is your most important goal for this

00:20:36,890 --> 00:20:46,790
tutorial so maybe let let me start my

00:20:43,730 --> 00:20:51,220
name is English Watson I'm the current

00:20:46,790 --> 00:20:54,890
man dog project lead at m.com lbs dlv

00:20:51,220 --> 00:20:56,960
I'm also an open BSD operating system

00:20:54,890 --> 00:20:59,150
developer dabbling here on terror in New

00:20:56,960 --> 00:21:01,280
Zealand in the sea lip and various

00:20:59,150 --> 00:21:06,110
utilities work wherever there is a need

00:21:01,280 --> 00:21:09,200
and my goal for today is to show you the

00:21:06,110 --> 00:21:11,150
current state of the art in BSD system

00:21:09,200 --> 00:21:14,860
documentation and to help you with any

00:21:11,150 --> 00:21:20,540
questions you might have in that area

00:21:14,860 --> 00:21:23,180
now I planned to say that it's not

00:21:20,540 --> 00:21:25,940
really a good idea that I start because

00:21:23,180 --> 00:21:27,680
the person who should really start this

00:21:25,940 --> 00:21:30,410
and who actually started this is

00:21:27,680 --> 00:21:33,680
Kristoff's Johnson's I think he will who

00:21:30,410 --> 00:21:36,190
will arrive at the latest for the

00:21:33,680 --> 00:21:41,590
working phases and then maybe we can

00:21:36,190 --> 00:21:44,360
he's the guy who wrote mango originally

00:21:41,590 --> 00:21:47,420
and he will be around for the working

00:21:44,360 --> 00:21:50,980
phases for your questions too but you

00:21:47,420 --> 00:21:50,980
know it's perhaps just

00:22:27,830 --> 00:22:41,550
and it was basically my tutorial may be

00:22:35,990 --> 00:22:43,590
seeing part names behind understand or

00:22:41,550 --> 00:22:49,520
anything understanding videos can help

00:22:43,590 --> 00:22:49,520
us in the way of translating the to die

00:22:50,240 --> 00:22:53,240
okay

00:23:01,240 --> 00:23:04,620
yeah good thing

00:23:44,390 --> 00:23:53,180
my name is Benson I'm PC user mainly but

00:23:50,850 --> 00:23:56,280
I do want to get into technical writing

00:23:53,180 --> 00:24:04,260
system administration and maybe some

00:23:56,280 --> 00:24:09,590
program and I've been actually subject

00:24:04,260 --> 00:24:09,590
and was very interested and did actually

00:24:11,180 --> 00:24:20,220
I'm quite fascinated with how it works

00:24:15,000 --> 00:24:23,900
and yeah so I like to deepen my

00:24:20,220 --> 00:24:23,900
knowledge what

00:24:54,840 --> 00:25:06,840
well I once wrote a good project so I

00:25:04,600 --> 00:25:06,840
haven't

00:26:00,160 --> 00:26:06,700
and riding long and complicated shared

00:26:04,960 --> 00:26:11,710
scripts and I want to be able to

00:26:06,700 --> 00:26:19,590
document my work to the degrees can buy

00:26:11,710 --> 00:26:19,590
a man okay it's good

00:26:32,160 --> 00:26:34,760
okay

00:26:35,299 --> 00:26:37,299
Oh

00:27:00,619 --> 00:27:07,889
okay yeah so if I go back to to this

00:27:04,739 --> 00:27:15,149
page then as far as I understand these

00:27:07,889 --> 00:27:18,859
are the first two points are probably

00:27:15,149 --> 00:27:22,440
really important for most of you so I

00:27:18,859 --> 00:27:28,489
would perhaps make sense that I expand a

00:27:22,440 --> 00:27:31,859
bit on those and these two are probably

00:27:28,489 --> 00:27:34,559
not so important because I understand

00:27:31,859 --> 00:27:37,199
there are no really FreeBSD or net bsd

00:27:34,559 --> 00:27:41,369
operating system developers around so

00:27:37,199 --> 00:27:43,849
you are not not likely to switch those

00:27:41,369 --> 00:27:48,379
systems tomorrow to use some different

00:27:43,849 --> 00:27:51,899
basic tools but I'll not cut that out

00:27:48,379 --> 00:27:55,440
completely because many of you said that

00:27:51,899 --> 00:27:58,349
you are interested in learning how the

00:27:55,440 --> 00:28:01,499
how the basics work and how stuff fits

00:27:58,349 --> 00:28:04,709
together and of course those are points

00:28:01,499 --> 00:28:09,809
for you you can learn a bit but maybe we

00:28:04,709 --> 00:28:13,619
should we should make this this face a

00:28:09,809 --> 00:28:18,019
bit longer so you can really get used to

00:28:13,619 --> 00:28:18,019
it yeah okay good

00:28:18,109 --> 00:28:29,789
so writing manuals how many of you

00:28:23,879 --> 00:28:32,669
already edited a manual page at some

00:28:29,789 --> 00:28:36,440
point in their life so took an existing

00:28:32,669 --> 00:28:40,049
manual page and changed something in it

00:28:36,440 --> 00:28:43,639
one or two okay not three here

00:28:40,049 --> 00:28:47,129
not very many how many of you already

00:28:43,639 --> 00:28:49,319
wrote a manual page from scratch so

00:28:47,129 --> 00:28:55,009
starting from nothing and wrote a

00:28:49,319 --> 00:28:58,649
completely new one nobody okay so

00:28:55,009 --> 00:29:01,620
getting the the basics is really

00:28:58,649 --> 00:29:04,320
important I think how many of

00:29:01,620 --> 00:29:06,390
you knew before coming here that there

00:29:04,320 --> 00:29:11,520
are two completely different languages

00:29:06,390 --> 00:29:14,000
for writing manuals man and MDOC okay

00:29:11,520 --> 00:29:19,740
most of half of you knew that

00:29:14,000 --> 00:29:25,530
interesting yeah okay yeah so let's

00:29:19,740 --> 00:29:31,380
let's get started with the with the

00:29:25,530 --> 00:29:35,970
basics of the MDOT language of course

00:29:31,380 --> 00:29:39,660
there are long introductions tutorials

00:29:35,970 --> 00:29:42,750
manuals about this language but the

00:29:39,660 --> 00:29:47,400
basic concepts you need to understand

00:29:42,750 --> 00:29:50,070
before you can start writing almost fit

00:29:47,400 --> 00:29:52,620
on one slide so my goal here is that as

00:29:50,070 --> 00:29:56,010
far as as fast as we can we get to

00:29:52,620 --> 00:29:59,070
really write stuff down and try it out

00:29:56,010 --> 00:30:02,100
and turn it that way but what you do

00:29:59,070 --> 00:30:06,530
need to know before is the distinction

00:30:02,100 --> 00:30:08,940
of text lines and requests macro lines

00:30:06,530 --> 00:30:13,309
request marking lines starting with the

00:30:08,940 --> 00:30:19,470
dot I already mentioned that a few times

00:30:13,309 --> 00:30:22,980
if you have a macro line the macro in

00:30:19,470 --> 00:30:26,780
this case the section header that is H

00:30:22,980 --> 00:30:31,140
macro can have arguments the arguments

00:30:26,780 --> 00:30:33,630
follow the macro and are separated by

00:30:31,140 --> 00:30:37,320
whitespace so here you have an example

00:30:33,630 --> 00:30:40,140
of macro with one argument and here the

00:30:37,320 --> 00:30:46,140
last one you have an example with two

00:30:40,140 --> 00:30:49,550
arguments the dot the full-stop ending

00:30:46,140 --> 00:30:52,790
the sentence is here actually put as a

00:30:49,550 --> 00:30:56,309
separate argument so that the formatter

00:30:52,790 --> 00:30:58,710
understands that it has to to put it

00:30:56,309 --> 00:31:02,550
right after the formatted version of the

00:30:58,710 --> 00:31:05,190
output of this this macro that's quite

00:31:02,550 --> 00:31:07,920
typical if you have punctuation you

00:31:05,190 --> 00:31:13,280
usually put the punctuation as the last

00:31:07,920 --> 00:31:15,170
argument on the preceding macro line and

00:31:13,280 --> 00:31:18,710
in case

00:31:15,170 --> 00:31:21,500
the arguments to the macro contain white

00:31:18,710 --> 00:31:26,090
space that would otherwise delimit

00:31:21,500 --> 00:31:31,370
arguments you can quote the whole

00:31:26,090 --> 00:31:34,240
argument and all this will be taking as

00:31:31,370 --> 00:31:38,570
a single argument here to the function

00:31:34,240 --> 00:31:40,910
argument arc row so you need to

00:31:38,570 --> 00:31:43,850
distinguish text lines and macro lines

00:31:40,910 --> 00:31:47,240
you need to understand that macros can

00:31:43,850 --> 00:31:49,790
optionally take arguments not all do

00:31:47,240 --> 00:31:51,410
some go without arguments and you need

00:31:49,790 --> 00:31:53,930
to understand that arguments are

00:31:51,410 --> 00:31:56,420
separated by whitespace and in case they

00:31:53,930 --> 00:32:01,400
contain whitespace you have to call

00:31:56,420 --> 00:32:05,270
quote them of course there are lots and

00:32:01,400 --> 00:32:07,580
lots more details about the syntax of

00:32:05,270 --> 00:32:10,760
the rough language Roth is actually

00:32:07,580 --> 00:32:13,550
among more quirky languages in case you

00:32:10,760 --> 00:32:16,030
ever need any details about the Roth leg

00:32:13,550 --> 00:32:21,560
language you can look them up in the

00:32:16,030 --> 00:32:25,730
Roth manual but for now that should get

00:32:21,560 --> 00:32:28,130
you started on the basic syntax so the

00:32:25,730 --> 00:32:33,800
next thing to worry about is to how

00:32:28,130 --> 00:32:37,160
structure your manual page every manual

00:32:33,800 --> 00:32:40,040
page starts with a prologue or get into

00:32:37,160 --> 00:32:42,230
more detail later and then has multiple

00:32:40,040 --> 00:32:45,830
sections so the content of the manual

00:32:42,230 --> 00:32:53,440
page is organized into sections I'll

00:32:45,830 --> 00:32:53,440
also get to that the prologue is

00:32:53,770 --> 00:32:59,810
actually quite quite easy to grasp

00:32:56,330 --> 00:33:04,690
because it's always the same macros in

00:32:59,810 --> 00:33:08,180
the same order you first put the date of

00:33:04,690 --> 00:33:12,980
the last change of the manual with the

00:33:08,180 --> 00:33:16,160
DD document date macro then the document

00:33:12,980 --> 00:33:19,070
title and the section number this is now

00:33:16,160 --> 00:33:22,220
the section in the manual like section 1

00:33:19,070 --> 00:33:27,250
use a utility section to system called

00:33:22,220 --> 00:33:28,760
section 3 library functions and so on

00:33:27,250 --> 00:33:31,700
here

00:33:28,760 --> 00:33:34,130
the document title is always in all caps

00:33:31,700 --> 00:33:37,580
such that it looks the same in all

00:33:34,130 --> 00:33:41,090
manuals the operating system macro is

00:33:37,580 --> 00:33:43,810
usually just left blank and filled in by

00:33:41,090 --> 00:33:46,310
the by the operating system by default

00:33:43,810 --> 00:33:48,830
then you have the first section header

00:33:46,310 --> 00:33:52,010
which is always named so the fourth the

00:33:48,830 --> 00:33:54,920
fourth line in every manual is always

00:33:52,010 --> 00:33:58,400
exactly the same line dot Sh name and

00:33:54,920 --> 00:34:01,430
the name section contains the name of

00:33:58,400 --> 00:34:03,890
the page again now in proper

00:34:01,430 --> 00:34:05,480
capitalization is particularly in Perl

00:34:03,890 --> 00:34:08,870
manuals it's important to get the

00:34:05,480 --> 00:34:12,410
capitalization right here and then a

00:34:08,870 --> 00:34:16,460
one-line description here you see a

00:34:12,410 --> 00:34:19,640
typical example the cat manual in

00:34:16,460 --> 00:34:24,490
OpenBSD was last changed July last year

00:34:19,640 --> 00:34:28,010
it is section one so we use a utility

00:34:24,490 --> 00:34:31,190
here you have the name in capitals here

00:34:28,010 --> 00:34:35,510
you have it as it stands usually and the

00:34:31,190 --> 00:34:40,340
one-line description what you should

00:34:35,510 --> 00:34:43,670
remember after writing your prologue

00:34:40,340 --> 00:34:46,130
count the lines if you have six lines

00:34:43,670 --> 00:34:48,170
it's probably complete if you have less

00:34:46,130 --> 00:34:55,040
than six lines look into the manual what

00:34:48,170 --> 00:34:56,990
you've missed now after the prologue and

00:34:55,040 --> 00:35:00,530
after the name section which is always

00:34:56,990 --> 00:35:03,050
the first section in most manuals you

00:35:00,530 --> 00:35:05,570
have the synopsis section the point

00:35:03,050 --> 00:35:08,210
about the synopsis section is to

00:35:05,570 --> 00:35:13,370
document only the syntax never any

00:35:08,210 --> 00:35:19,880
semantics just syntax for user utilities

00:35:13,370 --> 00:35:23,300
for section one manuals most of the time

00:35:19,880 --> 00:35:27,020
you can server survive with these format

00:35:23,300 --> 00:35:31,490
rules you obviously need the name of the

00:35:27,020 --> 00:35:35,210
utility you most of the time have some

00:35:31,490 --> 00:35:37,790
command line flags options and some

00:35:35,210 --> 00:35:41,560
command line arguments and usually some

00:35:37,790 --> 00:35:45,850
of these are optional so

00:35:41,560 --> 00:35:48,040
here is a simple synopsis section what

00:35:45,850 --> 00:35:49,480
you see also see here is that there is

00:35:48,040 --> 00:35:53,170
no text inside

00:35:49,480 --> 00:35:55,570
it's just semantically stating these are

00:35:53,170 --> 00:35:58,420
the arguments these are the flags this

00:35:55,570 --> 00:36:00,580
is optional this isn't optional so you

00:35:58,420 --> 00:36:03,760
don't describe anything here you also

00:36:00,580 --> 00:36:06,630
don't worry about formatting there is

00:36:03,760 --> 00:36:13,150
nothing like make this bold or make this

00:36:06,630 --> 00:36:15,250
italic it's just specifying the the the

00:36:13,150 --> 00:36:22,080
syntax and then the formatting is done

00:36:15,250 --> 00:36:26,740
completely automatically I'll take this

00:36:22,080 --> 00:36:30,600
example to the next slide and explain a

00:36:26,740 --> 00:36:37,600
bit about the structure of the language

00:36:30,600 --> 00:36:40,240
you see here that you actually have two

00:36:37,600 --> 00:36:42,940
macro codes on the same line

00:36:40,240 --> 00:36:46,680
the first as usual with the dot in front

00:36:42,940 --> 00:36:50,500
of it the second one without the dot in

00:36:46,680 --> 00:36:54,240
that case we say the ope the optional

00:36:50,500 --> 00:36:57,600
macro is calling the FL the flag macro

00:36:54,240 --> 00:37:01,270
so the optional macro is a so-called

00:36:57,600 --> 00:37:03,220
enclosure macro it opens the scope and

00:37:01,270 --> 00:37:06,070
then the scope can contain some text

00:37:03,220 --> 00:37:09,070
some other macros and at some point the

00:37:06,070 --> 00:37:16,600
scope closes again a bit like in sgml or

00:37:09,070 --> 00:37:23,010
xml elements that connect the one kind

00:37:16,600 --> 00:37:25,630
of block macros are those that excludes

00:37:23,010 --> 00:37:29,260
implicitly at the end of the line so the

00:37:25,630 --> 00:37:33,930
scope of the opie macro just extends to

00:37:29,260 --> 00:37:38,470
the end of the input line and that's it

00:37:33,930 --> 00:37:42,630
yeah one other thing you see here some

00:37:38,470 --> 00:37:46,210
macros have default arguments like here

00:37:42,630 --> 00:37:47,950
the AR the argument macro is giving

00:37:46,210 --> 00:37:51,370
without any arguments and in the

00:37:47,950 --> 00:37:54,460
formatted output you still see file dot

00:37:51,370 --> 00:37:55,309
dot dot which is what AR produces by

00:37:54,460 --> 00:37:59,059
default if you

00:37:55,309 --> 00:38:03,709
give arguments so that's what you need

00:37:59,059 --> 00:38:06,429
to get started with the synopsis of the

00:38:03,709 --> 00:38:10,279
user command if you need anything more

00:38:06,429 --> 00:38:12,289
look into the manual I will go to get to

00:38:10,279 --> 00:38:16,309
some more detail where you can look

00:38:12,289 --> 00:38:18,439
there for what it might be that you are

00:38:16,309 --> 00:38:21,499
not writing a manual for a user command

00:38:18,439 --> 00:38:23,779
but for a library function in that case

00:38:21,499 --> 00:38:27,589
you'd you need different macros in the

00:38:23,779 --> 00:38:31,789
synopsis like include file its function

00:38:27,589 --> 00:38:39,079
declaration oh hi Chris Thames yeah I'll

00:38:31,789 --> 00:38:41,359
yet include files function declarations

00:38:39,079 --> 00:38:43,999
functions arguments function types are

00:38:41,359 --> 00:38:46,989
stuff this is this is the list of macros

00:38:43,999 --> 00:38:49,819
you basically need in each and every

00:38:46,989 --> 00:38:57,979
function manual page here is a typical

00:38:49,819 --> 00:39:01,939
example and how it will form it one

00:38:57,979 --> 00:39:07,729
thing you can see here again is a block

00:39:01,939 --> 00:39:11,419
macro having a scope this fo but now it

00:39:07,729 --> 00:39:15,229
doesn't just extend to the end of the

00:39:11,419 --> 00:39:17,449
line but there are multiple lines inside

00:39:15,229 --> 00:39:22,880
giving the various function arguments

00:39:17,449 --> 00:39:26,809
and it only closes when you specify the

00:39:22,880 --> 00:39:28,759
explicit companion closure macro so

00:39:26,809 --> 00:39:31,549
there are two types of LOC macros

00:39:28,759 --> 00:39:35,380
implicit one extending to the end of the

00:39:31,549 --> 00:39:39,079
lines and explicit ones going on and on

00:39:35,380 --> 00:39:42,499
until you close them explicitly again a

00:39:39,079 --> 00:39:44,689
bit like in sgml X and in this case the

00:39:42,499 --> 00:39:47,419
difference is that in XML you have to

00:39:44,689 --> 00:39:50,299
close everything that you open so you

00:39:47,419 --> 00:39:54,289
always have the text clobbered with

00:39:50,299 --> 00:39:56,599
those chloro macros and here in most

00:39:54,289 --> 00:40:00,109
cases you get away with the implicit

00:39:56,599 --> 00:40:02,150
macros like this FA that just extends to

00:40:00,109 --> 00:40:06,519
the end of the line so close the text

00:40:02,150 --> 00:40:06,519
list good

00:40:09,040 --> 00:40:15,380
now we have the prologue the name

00:40:12,410 --> 00:40:17,120
section the synopsis section now we are

00:40:15,380 --> 00:40:20,630
done with the syntax now we have to

00:40:17,120 --> 00:40:24,110
start to talk about semantics and that's

00:40:20,630 --> 00:40:25,730
what the description section is for so

00:40:24,110 --> 00:40:27,590
at the beginning of the dis the next

00:40:25,730 --> 00:40:29,180
section is the description section and

00:40:27,590 --> 00:40:32,660
at the beginning of the description

00:40:29,180 --> 00:40:35,690
section the first thing you do is

00:40:32,660 --> 00:40:38,720
explain the purpose of the deeper the

00:40:35,690 --> 00:40:42,470
utility what is what is this for and

00:40:38,720 --> 00:40:45,530
then you describe the syntax and the

00:40:42,470 --> 00:40:47,750
semantics of all the features so that's

00:40:45,530 --> 00:40:51,140
really the meat of the manual page the

00:40:47,750 --> 00:40:54,740
description section be careful to be at

00:40:51,140 --> 00:40:57,530
the same time complete and concise so

00:40:54,740 --> 00:40:59,420
what you should definitely not do at the

00:40:57,530 --> 00:41:01,730
beginning of the description section is

00:40:59,420 --> 00:41:03,650
talk about history oh I wrote this

00:41:01,730 --> 00:41:08,150
utility because I thought it would be

00:41:03,650 --> 00:41:10,640
useful for these kinds of people it if

00:41:08,150 --> 00:41:13,670
you want to write that the proper place

00:41:10,640 --> 00:41:17,140
is right down here in the history

00:41:13,670 --> 00:41:19,580
section or somewhere there it may be

00:41:17,140 --> 00:41:22,820
interesting for people but right at the

00:41:19,580 --> 00:41:30,560
top at the description it's just

00:41:22,820 --> 00:41:32,720
annoying hmm in case your description

00:41:30,560 --> 00:41:37,430
gets very long even though you are

00:41:32,720 --> 00:41:40,190
concise you can split it into into

00:41:37,430 --> 00:41:44,690
multiple section the typical example is

00:41:40,190 --> 00:41:47,240
a shell manual that has lots and lots of

00:41:44,690 --> 00:41:49,190
sections but for smaller tools you'll

00:41:47,240 --> 00:41:52,760
probably not need that and you should

00:41:49,190 --> 00:41:54,890
stick to the standard section names

00:41:52,760 --> 00:41:57,410
because that makes it easier for users

00:41:54,890 --> 00:42:00,260
if you already know which sections to

00:41:57,410 --> 00:42:02,930
expect when opening a manual page you

00:42:00,260 --> 00:42:06,500
more easily find your way around it and

00:42:02,930 --> 00:42:10,460
I'm not going to explain all these

00:42:06,500 --> 00:42:12,350
sections right now because chances are

00:42:10,460 --> 00:42:14,560
you won't remember all of them anyway

00:42:12,350 --> 00:42:18,250
what you should know is

00:42:14,560 --> 00:42:22,280
various information typically goes into

00:42:18,250 --> 00:42:24,650
various other sections for example the

00:42:22,280 --> 00:42:27,380
return value goes into a specific

00:42:24,650 --> 00:42:30,710
section and some of these sections only

00:42:27,380 --> 00:42:34,070
apply to utilities and some only apply

00:42:30,710 --> 00:42:35,870
to functions but in case you wonder

00:42:34,070 --> 00:42:38,990
where to put some information for your

00:42:35,870 --> 00:42:41,330
specific case again just look at the

00:42:38,990 --> 00:42:43,130
manual it lists all those sections it

00:42:41,330 --> 00:42:46,160
lists what typically goes into those

00:42:43,130 --> 00:42:48,830
sections and it also lists which macros

00:42:46,160 --> 00:42:52,790
to use there so you can really look all

00:42:48,830 --> 00:43:00,580
that up at the time you need it and then

00:42:52,790 --> 00:43:04,040
get more used to it okay so now we have

00:43:00,580 --> 00:43:06,560
we basically have seen a first overview

00:43:04,040 --> 00:43:09,470
of everything that might be needed the

00:43:06,560 --> 00:43:11,480
preamble the name section is an OPS a

00:43:09,470 --> 00:43:14,780
section description and there are some

00:43:11,480 --> 00:43:16,880
more sections now in case we get stuck

00:43:14,780 --> 00:43:19,160
somewhere where do we look I already

00:43:16,880 --> 00:43:24,830
said the most important resource is the

00:43:19,160 --> 00:43:28,370
end of manual when you wonder which

00:43:24,830 --> 00:43:31,010
section to use for some for some

00:43:28,370 --> 00:43:33,110
information you want to convey you look

00:43:31,010 --> 00:43:37,250
into the manual structure section of

00:43:33,110 --> 00:43:39,860
that manual when you wonder which macros

00:43:37,250 --> 00:43:42,800
to use to mark up some specific syntax

00:43:39,860 --> 00:43:45,230
element you look into macro overview

00:43:42,800 --> 00:43:46,880
which is basically just one page where

00:43:45,230 --> 00:43:52,510
you have all the macros that are not

00:43:46,880 --> 00:43:56,150
duplicated I should perhaps show that I

00:43:52,510 --> 00:43:58,550
said we should a bit focus a bit more on

00:43:56,150 --> 00:44:04,330
this stuff because it will be more

00:43:58,550 --> 00:44:07,280
useful to you so I'm typing Man M doc

00:44:04,330 --> 00:44:10,940
which will probably show the wrong thing

00:44:07,280 --> 00:44:13,100
yes it shows the mo no documentation

00:44:10,940 --> 00:44:19,370
management tool that's not what we want

00:44:13,100 --> 00:44:24,080
so I call a man 7 M doc that's the

00:44:19,370 --> 00:44:26,050
markup language so here right the second

00:44:24,080 --> 00:44:27,610
chapter is the manual the manual

00:44:26,050 --> 00:44:31,510
structure where

00:44:27,610 --> 00:44:34,020
tells you which the usual ordering of

00:44:31,510 --> 00:44:37,690
the sections in a manual page is and

00:44:34,020 --> 00:44:41,850
also tells you in which kinds of manual

00:44:37,690 --> 00:44:47,380
pages to use or not use those sections

00:44:41,850 --> 00:44:50,590
then it explains the various sections

00:44:47,380 --> 00:44:52,540
for example right now I talked a bit

00:44:50,590 --> 00:44:54,550
about the synopsis sections because

00:44:52,540 --> 00:44:58,600
that's so important that's really the

00:44:54,550 --> 00:45:01,000
thing people look at first and here even

00:44:58,600 --> 00:45:05,680
in the manual itself you see some some

00:45:01,000 --> 00:45:08,140
examples so to write that now skipping

00:45:05,680 --> 00:45:11,890
all the sections the very next thing you

00:45:08,140 --> 00:45:15,640
find is the macro overview and here you

00:45:11,890 --> 00:45:20,020
have all the all the macros recommended

00:45:15,640 --> 00:45:22,080
for use so the most important ones are

00:45:20,020 --> 00:45:27,550
typically that the semantic markup

00:45:22,080 --> 00:45:29,470
macros and you see the the lists are not

00:45:27,550 --> 00:45:31,780
really that long for command-line

00:45:29,470 --> 00:45:33,790
utilities for function libraries there

00:45:31,780 --> 00:45:36,910
you can look I need something for this

00:45:33,790 --> 00:45:39,490
or that which one fits and then if you

00:45:36,910 --> 00:45:41,580
have a candidate and think that one

00:45:39,490 --> 00:45:45,760
might be good for what I'm trying to do

00:45:41,580 --> 00:45:49,420
then you can look at the macro reference

00:45:45,760 --> 00:45:52,540
right behind how that particular macro

00:45:49,420 --> 00:45:55,420
you consider using what the syntax is

00:45:52,540 --> 00:46:05,370
and whether it fits to the example it's

00:45:55,420 --> 00:46:08,980
given there so that's where you usually

00:46:05,370 --> 00:46:11,440
get up to speed by trying to write

00:46:08,980 --> 00:46:16,240
something and looking at the menu to

00:46:11,440 --> 00:46:19,930
find the right another good way to to

00:46:16,240 --> 00:46:24,550
get started is to just take an open B is

00:46:19,930 --> 00:46:27,420
the installation and look at the manuals

00:46:24,550 --> 00:46:30,880
in the base system how did other people

00:46:27,420 --> 00:46:32,800
write documentation for similar stuff

00:46:30,880 --> 00:46:35,440
there you will find good examples of

00:46:32,800 --> 00:46:39,130
macro usage good examples of standard

00:46:35,440 --> 00:46:41,080
wordings good examples where to put

00:46:39,130 --> 00:46:43,790
stuff and so on

00:46:41,080 --> 00:46:46,670
once you have written something even if

00:46:43,790 --> 00:46:50,990
it's not yet quite complete please run

00:46:46,670 --> 00:46:52,750
the command man doc - tee lint on it no

00:46:50,990 --> 00:46:57,260
matter whether you are running

00:46:52,750 --> 00:46:57,710
OpenBSD FreeBSD or net BSD or dragonfly

00:46:57,260 --> 00:47:00,260
or

00:46:57,710 --> 00:47:03,200
illumos it should always be available by

00:47:00,260 --> 00:47:06,560
default without installing anything that

00:47:03,200 --> 00:47:09,500
catches most syntax errors telling you

00:47:06,560 --> 00:47:12,680
in that line in that column something is

00:47:09,500 --> 00:47:17,060
weird in the following way please fix it

00:47:12,680 --> 00:47:23,450
and it may even provide some hints on

00:47:17,060 --> 00:47:25,190
style now and then so up to here it's

00:47:23,450 --> 00:47:30,890
really the standard tools that you

00:47:25,190 --> 00:47:35,200
alright always use below it's more when

00:47:30,890 --> 00:47:38,030
when stuff gets really difficult in case

00:47:35,200 --> 00:47:40,550
you read the m-dot manual and still

00:47:38,030 --> 00:47:45,620
wonder it doesn't seem quite clear then

00:47:40,550 --> 00:47:48,170
sometimes the gruff MDOC manual just

00:47:45,620 --> 00:47:55,580
because it has different wording might

00:47:48,170 --> 00:47:57,980
help to get it straight but usually the

00:47:55,580 --> 00:47:59,960
the standard end of our and doc manual

00:47:57,980 --> 00:48:02,180
is stricter than the rough one so it's

00:47:59,960 --> 00:48:04,280
more more to get the second view a

00:48:02,180 --> 00:48:07,780
second angle on the same thing that I'd

00:48:04,280 --> 00:48:12,260
help what may also help is kristaps and

00:48:07,780 --> 00:48:15,500
full tutorial at man pages dot PSD dot L

00:48:12,260 --> 00:48:17,630
V so if it turns out that you get into

00:48:15,500 --> 00:48:20,030
the habit of writing man pages you

00:48:17,630 --> 00:48:24,310
should definitely read that at some

00:48:20,030 --> 00:48:29,930
point too to get a full walkthrough and

00:48:24,310 --> 00:48:32,060
if after trying all that questions still

00:48:29,930 --> 00:48:35,390
remain you are always welcome to ask

00:48:32,060 --> 00:48:39,680
questions on the discuss at em doc and

00:48:35,390 --> 00:48:41,990
LB sdlc mailing this both kristaps and

00:48:39,680 --> 00:48:45,560
myself are always around there and

00:48:41,990 --> 00:48:49,670
various other developers like wiz of net

00:48:45,560 --> 00:48:53,240
bsd and foolish berlin of freebsd so

00:48:49,670 --> 00:48:54,180
usually we can help you there yeah so

00:48:53,240 --> 00:48:57,510
this is a

00:48:54,180 --> 00:48:59,520
very important slide by the way when we

00:48:57,510 --> 00:49:03,329
get into the working phase you can

00:48:59,520 --> 00:49:06,119
download these slides from the URL

00:49:03,329 --> 00:49:09,420
written on the board there so if if

00:49:06,119 --> 00:49:10,170
every anything got lost you can just

00:49:09,420 --> 00:49:14,490
look it up

00:49:10,170 --> 00:49:19,890
what is also on that in that directory

00:49:14,490 --> 00:49:24,240
is a handout that I've written down that

00:49:19,890 --> 00:49:26,369
is more suited to self-study than a set

00:49:24,240 --> 00:49:28,589
of slides so in full sentences and it

00:49:26,369 --> 00:49:30,450
also contains a lot more information it

00:49:28,589 --> 00:49:34,680
also contains the content of the

00:49:30,450 --> 00:49:48,150
previous talks in part updated all in in

00:49:34,680 --> 00:49:52,740
one one right hat yeah okay so oh yeah

00:49:48,150 --> 00:49:55,829
that's the next the next chapter any

00:49:52,740 --> 00:50:01,380
questions so far regarding how to write

00:49:55,829 --> 00:50:03,690
manual pages well the question will

00:50:01,380 --> 00:50:06,809
probably come up in the hands-on working

00:50:03,690 --> 00:50:10,920
phase then I'd suggest before I go on to

00:50:06,809 --> 00:50:12,420
the next much shorter section kristaps

00:50:10,920 --> 00:50:15,319
with your mind

00:50:12,420 --> 00:50:19,289
shortly presenting yourself we had a

00:50:15,319 --> 00:50:24,680
small round just saying the name the

00:50:19,289 --> 00:50:29,279
main the main role and affiliation and

00:50:24,680 --> 00:50:32,480
what you go for the tutorial is so that

00:50:29,279 --> 00:50:32,480
people get to know you

00:51:24,460 --> 00:51:27,790
yeah it is

00:51:40,140 --> 00:51:48,069
yeah so this this is the homepage for

00:51:44,739 --> 00:51:51,309
part of Amanda if you ever forget it you

00:51:48,069 --> 00:51:54,640
can just start from the OpenBSD homepage

00:51:51,309 --> 00:51:58,179
and right here

00:51:54,640 --> 00:52:01,779
besides OpenSSH and Liebherr ssl you

00:51:58,179 --> 00:52:07,150
have the link to the to the MDOT ml page

00:52:01,779 --> 00:52:09,369
and here below below history you have

00:52:07,150 --> 00:52:12,719
the link to the history of the UNIX

00:52:09,369 --> 00:52:17,289
manuals that kristaps wrote up were you

00:52:12,719 --> 00:52:19,539
you can see all the all the various

00:52:17,289 --> 00:52:22,209
version of Roffe that existed since the

00:52:19,539 --> 00:52:25,539
since the sixties who wrote it and

00:52:22,209 --> 00:52:43,839
ported it to which machines it's very

00:52:25,539 --> 00:52:46,839
nice stuff well Cynthia is the person

00:52:43,839 --> 00:52:49,659
who translated the manuals from man to

00:52:46,839 --> 00:52:52,299
MDOC but I still don't know who

00:52:49,659 --> 00:52:55,329
implemented the MDOC macros originally

00:52:52,299 --> 00:52:58,269
it must have been somebody of the

00:52:55,329 --> 00:53:06,309
computer systems research group and I'll

00:52:58,269 --> 00:53:09,819
probably ask Kirk what he knows about it

00:53:06,309 --> 00:53:12,249
he's around right now but we are getting

00:53:09,819 --> 00:53:14,849
a bit off-track I think the history is

00:53:12,249 --> 00:53:17,650
interesting but let's let's get back to

00:53:14,849 --> 00:53:21,689
to writing manuals because that's what

00:53:17,650 --> 00:53:27,159
you were you were here for Ian okay so

00:53:21,689 --> 00:53:33,099
before we get wrong talk before we get

00:53:27,159 --> 00:53:38,009
into the working phase oh yeah good

00:53:33,099 --> 00:53:42,039
behind but not badly and very briefly

00:53:38,009 --> 00:53:45,969
how do you use MDOC and demand or two

00:53:42,039 --> 00:53:49,779
for portable manuals so imagine you have

00:53:45,969 --> 00:53:50,720
some small sofa package of course you

00:53:49,779 --> 00:53:54,710
are documenting

00:53:50,720 --> 00:53:58,220
it but you expect that people are using

00:53:54,710 --> 00:54:02,359
it everywhere on on Linux and BSD on

00:53:58,220 --> 00:54:04,760
Solaris on commercial unix's wherever so

00:54:02,359 --> 00:54:06,800
in the past it was a problem to use the

00:54:04,760 --> 00:54:09,410
MDOT language because some operating

00:54:06,800 --> 00:54:12,980
systems of 25 years still don't support

00:54:09,410 --> 00:54:17,900
it that problem is gone just write your

00:54:12,980 --> 00:54:22,550
manuals in MDOC and then if you prepare

00:54:17,900 --> 00:54:25,430
a distribution trouble run man doc -

00:54:22,550 --> 00:54:28,369
teaming once on your MDOC manual it

00:54:25,430 --> 00:54:31,010
produces man output and i'm you package

00:54:28,369 --> 00:54:33,590
up both versions and just that at

00:54:31,010 --> 00:54:36,380
install time the configure script decide

00:54:33,590 --> 00:54:39,260
if it's if the target system you are

00:54:36,380 --> 00:54:42,290
just now installing on supports MDOC

00:54:39,260 --> 00:54:45,710
install MDOC if it doesn't install a man

00:54:42,290 --> 00:54:46,730
it's basically all there is to it - to

00:54:45,710 --> 00:54:49,910
get it portable

00:54:46,730 --> 00:54:51,800
when I first mentioned that in a in a

00:54:49,910 --> 00:54:55,640
conference I thought there would be a

00:54:51,800 --> 00:55:00,920
lot to to explain about it but actually

00:54:55,640 --> 00:55:04,160
it all fits almost on on one slide let's

00:55:00,920 --> 00:55:08,450
look at it just to demonstrate how easy

00:55:04,160 --> 00:55:11,060
it is in the with the example of the

00:55:08,450 --> 00:55:14,359
first portable software package that

00:55:11,060 --> 00:55:20,630
ever did it sudo maintained by Todd

00:55:14,359 --> 00:55:23,750
Miller in the project make file there

00:55:20,630 --> 00:55:26,839
are two maintainer targets one of the

00:55:23,750 --> 00:55:31,099
targets says if you want to get generate

00:55:26,839 --> 00:55:33,619
a man version of the pseudo manual start

00:55:31,099 --> 00:55:36,170
from the MDOT version of the pseudo

00:55:33,619 --> 00:55:41,270
manual and run the command man up -

00:55:36,170 --> 00:55:43,359
teaming on it if you want to generate a

00:55:41,270 --> 00:55:47,720
pre formatted version of the manual

00:55:43,359 --> 00:55:50,000
start from the end up version to my do

00:55:47,720 --> 00:55:51,950
not from man version from the original

00:55:50,000 --> 00:55:54,680
MDOT version run the standard model

00:55:51,950 --> 00:55:57,740
command on it and you get the pre

00:55:54,680 --> 00:55:59,960
formatted version then put all that the

00:55:57,740 --> 00:56:04,369
unlocked version the man version and pre

00:55:59,960 --> 00:56:07,160
format were into the distribution table

00:56:04,369 --> 00:56:09,049
and then long break you put it on the

00:56:07,160 --> 00:56:11,839
website and someone downloads it and

00:56:09,049 --> 00:56:13,640
wants to install it runs the configure

00:56:11,839 --> 00:56:18,049
script and then what the configure

00:56:13,640 --> 00:56:21,529
script does is scan the system is there

00:56:18,049 --> 00:56:23,869
Amanda binary around somewhere if the

00:56:21,529 --> 00:56:27,019
configure script finds man-dog it knows

00:56:23,869 --> 00:56:31,099
MDOC is supported so it installs the

00:56:27,019 --> 00:56:33,170
good MDOC pages if the configure script

00:56:31,099 --> 00:56:36,140
doesn't find man-dog it looks for an

00:56:33,170 --> 00:56:38,390
Roth the traditional tool for fun

00:56:36,140 --> 00:56:41,869
formatting manual pages if that isn't

00:56:38,390 --> 00:56:45,799
there Ryder well it's probably windows

00:56:41,869 --> 00:56:48,619
then don't know whatever it installs the

00:56:45,799 --> 00:56:52,009
pre-formatted pages chances as people

00:56:48,619 --> 00:56:55,579
can at least lead reset at least read

00:56:52,009 --> 00:56:59,930
plain text if it does find an Roth it

00:56:55,579 --> 00:57:02,839
tries to run and off with the MDOC macro

00:56:59,930 --> 00:57:05,960
set if that works it can again install

00:57:02,839 --> 00:57:12,109
the nice MDOC pages and if it doesn't it

00:57:05,960 --> 00:57:14,589
falls back to demand pages now if you

00:57:12,109 --> 00:57:18,769
want to provide a bit of sugar you can

00:57:14,589 --> 00:57:21,319
provide em with em doc or with man

00:57:18,769 --> 00:57:24,109
options to the configure script so that

00:57:21,319 --> 00:57:27,710
people can manually override this logic

00:57:24,109 --> 00:57:29,839
and that's basically all so like two

00:57:27,710 --> 00:57:33,109
lines in the project make foil as

00:57:29,839 --> 00:57:36,079
maintainer targets and about a hundred

00:57:33,109 --> 00:57:39,650
lines or so to implement this logic and

00:57:36,079 --> 00:57:43,339
portable shell code in the configure

00:57:39,650 --> 00:57:45,979
script and then you can your you can

00:57:43,339 --> 00:57:49,069
write your manuals in EM doc and they

00:57:45,979 --> 00:57:53,829
work everywhere even on HP UNIX or or

00:57:49,069 --> 00:57:53,829
Solaris 9 or whatever yes

00:58:05,150 --> 00:58:13,769
that depends on your software package so

00:58:08,940 --> 00:58:16,740
if you use Auto conf then you will do

00:58:13,769 --> 00:58:19,019
all this without account macros there

00:58:16,740 --> 00:58:22,200
are no standard ones but you can just

00:58:19,019 --> 00:58:24,539
steal the ones from sudo if you use

00:58:22,200 --> 00:58:27,109
something else whatever build system you

00:58:24,539 --> 00:58:29,309
like for example the handwritten

00:58:27,109 --> 00:58:31,319
configure script which works quite well

00:58:29,309 --> 00:58:33,180
it's problem for example what we're

00:58:31,319 --> 00:58:35,819
doing in the part of the portable amount

00:58:33,180 --> 00:58:40,819
of distribution then you just write

00:58:35,819 --> 00:58:46,380
those tests yourself by handers yeah as

00:58:40,819 --> 00:58:49,529
you wish good so that's all about how to

00:58:46,380 --> 00:58:53,720
prepare portable documentation basically

00:58:49,529 --> 00:58:58,230
any questions with respect to that No

00:58:53,720 --> 00:59:02,730
then before getting into the the working

00:58:58,230 --> 00:59:04,619
phase let's cover one more topic so that

00:59:02,730 --> 00:59:10,140
you have a bit of choice what you want

00:59:04,619 --> 00:59:12,660
to work on quality control so far the

00:59:10,140 --> 00:59:15,720
situation I talked about was we have

00:59:12,660 --> 00:59:17,640
some software and no documentation yet

00:59:15,720 --> 00:59:20,579
we are going to write documentation now

00:59:17,640 --> 00:59:22,529
I'm looking at something different I all

00:59:20,579 --> 00:59:25,019
I not only have the software but you

00:59:22,529 --> 00:59:27,390
also have the documentation and even

00:59:25,019 --> 00:59:31,019
documentation written in MDOC already

00:59:27,390 --> 00:59:35,089
but now I'm wondering whether it's any

00:59:31,019 --> 00:59:38,039
good or whether it needs improvement so

00:59:35,089 --> 00:59:41,160
which goals do we have in quality

00:59:38,039 --> 00:59:45,299
controls for manuals the most important

00:59:41,160 --> 00:59:48,329
first one is we have to make sure there

00:59:45,299 --> 00:59:51,420
are no fatal errors we have to make sure

00:59:48,329 --> 00:59:54,059
each manual actually produces output

00:59:51,420 --> 00:59:56,609
when you run the formatter on it it

00:59:54,059 --> 01:00:00,470
could crash the formatter or cause a

00:59:56,609 --> 01:00:03,450
fatal error even if there is some output

01:00:00,470 --> 01:00:05,970
we have to make sure that the output

01:00:03,450 --> 01:00:08,250
actually contains all the intended texts

01:00:05,970 --> 01:00:10,560
there might be syntax errors in the

01:00:08,250 --> 01:00:12,480
manual source code that

01:00:10,560 --> 01:00:14,340
drops part of the text so if the user

01:00:12,480 --> 01:00:18,030
looks at it something is missing would

01:00:14,340 --> 01:00:21,720
be bad we have to catch severe vomiting

01:00:18,030 --> 01:00:26,220
arrows like someone mistyped some width

01:00:21,720 --> 01:00:28,230
and it's all in two columns on the far

01:00:26,220 --> 01:00:31,440
right it's completely unreadable you

01:00:28,230 --> 01:00:34,050
don't want that in a manual we should

01:00:31,440 --> 01:00:36,930
try to catch typos and stylistic

01:00:34,050 --> 01:00:39,840
glitches obviously we might try to

01:00:36,930 --> 01:00:41,970
improve portability but please don't

01:00:39,840 --> 01:00:44,670
overdo that if you try to write your

01:00:41,970 --> 01:00:47,940
manuals in a way that tools from the

01:00:44,670 --> 01:00:49,530
1980s still properly format them then

01:00:47,940 --> 01:00:53,370
your manual source code will not be

01:00:49,530 --> 01:00:55,500
quite readable so what ability is good

01:00:53,370 --> 01:00:59,460
but not with tools from 30 years ago

01:00:55,500 --> 01:01:02,490
please you definitely should try to get

01:00:59,460 --> 01:01:09,270
the code robust so that it doesn't

01:01:02,490 --> 01:01:11,520
doesn't crash on small changes quite

01:01:09,270 --> 01:01:14,280
important thing is to unify the style

01:01:11,520 --> 01:01:16,380
the manuals are displayed so that users

01:01:14,280 --> 01:01:17,940
don't get confused because each manual

01:01:16,380 --> 01:01:22,440
looks completely different than the

01:01:17,940 --> 01:01:24,990
others you could even try to to unify a

01:01:22,440 --> 01:01:28,140
bit the EM no coding styles such that if

01:01:24,990 --> 01:01:30,750
anybody else is ever editing the manual

01:01:28,140 --> 01:01:32,880
the way the source code is written looks

01:01:30,750 --> 01:01:38,210
familiar and people get up to speed

01:01:32,880 --> 01:01:38,210
easily with your manuals and last thing

01:01:38,600 --> 01:01:46,920
checking the quality of existing manuals

01:01:44,100 --> 01:01:50,310
as a by-product often finds bugs in the

01:01:46,920 --> 01:01:52,440
tools bugs and the man dog furniture so

01:01:50,310 --> 01:01:55,560
that's also a reason it's a good thing

01:01:52,440 --> 01:01:58,950
to do report them by the way don't don't

01:01:55,560 --> 01:02:02,310
ignore them you see these are quite

01:01:58,950 --> 01:02:04,710
different goals and quite many so there

01:02:02,310 --> 01:02:07,830
are various tools to help with them of

01:02:04,710 --> 01:02:12,180
course some of these goals can't really

01:02:07,830 --> 01:02:14,340
be automated like finding still istic

01:02:12,180 --> 01:02:16,470
problems wording problems in the manuals

01:02:14,340 --> 01:02:20,040
that's a manual task you really need to

01:02:16,470 --> 01:02:24,470
use your judgment the most important

01:02:20,040 --> 01:02:24,470
tool is man dog - tee lint

01:02:24,980 --> 01:02:34,550
how does that work okay know one thing

01:02:29,420 --> 01:02:38,790
one thing before that mondo talent

01:02:34,550 --> 01:02:41,970
doesn't produce formatted output but it

01:02:38,790 --> 01:02:44,130
produces error and warning messages or

01:02:41,970 --> 01:02:48,960
even better if you have a good manual it

01:02:44,130 --> 01:02:52,350
doesn't produce anything at all now it's

01:02:48,960 --> 01:02:54,210
important to to really get those warning

01:02:52,350 --> 01:02:57,120
and error messages right it's it's

01:02:54,210 --> 01:03:00,090
obvious you don't want fatal errors

01:02:57,120 --> 01:03:01,770
because then if the user tries to format

01:03:00,090 --> 01:03:04,140
the manual there's no output doesn't

01:03:01,770 --> 01:03:07,560
work at all so we are trying to minimize

01:03:04,140 --> 01:03:10,770
that when mandoke started in 2009 in

01:03:07,560 --> 01:03:13,410
2008 2009 we had lots and lots of fatal

01:03:10,770 --> 01:03:15,630
errors so it even on real-world manuals

01:03:13,410 --> 01:03:18,060
it often happened they did type man-dog

01:03:15,630 --> 01:03:19,770
this manual and then you've got fatal

01:03:18,060 --> 01:03:23,040
error and no output and that's of course

01:03:19,770 --> 01:03:25,110
almost as bad as not having no manual in

01:03:23,040 --> 01:03:31,560
the first place that doesn't happen

01:03:25,110 --> 01:03:35,460
anymore or hardly ever but even if you

01:03:31,560 --> 01:03:37,800
don't have fatal errors it's important

01:03:35,460 --> 01:03:39,960
that if something is wrong in a manual

01:03:37,800 --> 01:03:46,530
it's really reported because otherwise

01:03:39,960 --> 01:03:49,050
people won't realize and can't fix it on

01:03:46,530 --> 01:03:52,890
the other hand reporting too many errors

01:03:49,050 --> 01:03:55,050
and warnings is bad as well because then

01:03:52,890 --> 01:03:58,080
users get annoyed and just switch the

01:03:55,050 --> 01:04:02,130
whole thing off and don't use it so it's

01:03:58,080 --> 01:04:04,380
it's kind of a small small Ridge you can

01:04:02,130 --> 01:04:08,700
throw down to the one side be too wordy

01:04:04,380 --> 01:04:11,310
or fall down to the other side and fail

01:04:08,700 --> 01:04:15,420
to report what is important and it's

01:04:11,310 --> 01:04:17,970
even worse you can fall down both sides

01:04:15,420 --> 01:04:20,040
at once fail to report the important

01:04:17,970 --> 01:04:22,620
stuff but report lots of unimportant

01:04:20,040 --> 01:04:24,030
things that was that happened to Amanda

01:04:22,620 --> 01:04:30,090
in the beginning too

01:04:24,030 --> 01:04:33,180
but we have done several cleanups again

01:04:30,090 --> 01:04:36,630
and again improve the messages so by now

01:04:33,180 --> 01:04:37,740
almost nothing that is reported is false

01:04:36,630 --> 01:04:43,290
positives

01:04:37,740 --> 01:04:47,670
some of the the warnings may be ignored

01:04:43,290 --> 01:04:51,150
in some cases but most nurses are really

01:04:47,670 --> 01:04:56,270
real and a wide range of problems is

01:04:51,150 --> 01:04:59,730
caught now and by the way all this

01:04:56,270 --> 01:05:02,160
applies to almost any software so if you

01:04:59,730 --> 01:05:04,410
have any software reporting warning and

01:05:02,160 --> 01:05:07,680
arrows you always have this this problem

01:05:04,410 --> 01:05:09,869
that you need to really need to report

01:05:07,680 --> 01:05:13,800
everything that is wrong but you

01:05:09,869 --> 01:05:17,790
shouldn't be too wordy and one thing

01:05:13,800 --> 01:05:23,280
people sometimes do in in that respect

01:05:17,790 --> 01:05:25,349
is to add switches so they invent 21 in

01:05:23,280 --> 01:05:28,349
classes that can be individually

01:05:25,349 --> 01:05:31,230
switched on and off compilers are a

01:05:28,349 --> 01:05:35,130
great example of that it's a very bad

01:05:31,230 --> 01:05:36,869
idea because nobody will remember all

01:05:35,130 --> 01:05:42,630
those switches people will getting

01:05:36,869 --> 01:05:45,450
annoyed will not really use them try try

01:05:42,630 --> 01:05:50,300
to get as few switches as possible that

01:05:45,450 --> 01:05:55,790
just works that just report what is

01:05:50,300 --> 01:06:00,720
relevant in in man doc we have exactly

01:05:55,790 --> 01:06:04,490
three levels that can be selected select

01:06:00,720 --> 01:06:07,920
only fatal errors that's the default

01:06:04,490 --> 01:06:10,650
select errors so something is severely

01:06:07,920 --> 01:06:14,570
miss formatted or information is lost or

01:06:10,650 --> 01:06:22,080
show all warnings but no more switches

01:06:14,570 --> 01:06:24,119
yeah so you come in with a large code

01:06:22,080 --> 01:06:27,960
base say the whole freebie is the

01:06:24,119 --> 01:06:30,750
operating system and you wonder what

01:06:27,960 --> 01:06:36,089
could I improve here the first thing is

01:06:30,750 --> 01:06:40,849
you should do is run this command till

01:06:36,089 --> 01:06:43,920
end W fatal overall manuals and

01:06:40,849 --> 01:06:47,790
hopefully none of the manuals will

01:06:43,920 --> 01:06:50,770
trigger an error at that level if any do

01:06:47,790 --> 01:06:52,510
that is what you should fix first

01:06:50,770 --> 01:06:58,960
because those are the manuals that can't

01:06:52,510 --> 01:07:01,150
be looked at at all in case you are just

01:06:58,960 --> 01:07:03,760
looking at a handful of manuals you can

01:07:01,150 --> 01:07:07,660
skip that skip those fatal errors will

01:07:03,760 --> 01:07:10,480
show up in the next step anyway by now

01:07:07,660 --> 01:07:12,760
there is basically only one class of

01:07:10,480 --> 01:07:15,580
fatal errors left and all those are

01:07:12,760 --> 01:07:18,670
related to file inclusion so there are

01:07:15,580 --> 01:07:22,320
two types of file inclusion one is the

01:07:18,670 --> 01:07:24,760
unsaved B D file macro which means just

01:07:22,320 --> 01:07:28,780
include a file verbatim from the

01:07:24,760 --> 01:07:33,010
operating system that is not supported

01:07:28,780 --> 01:07:35,770
by mandoke on purpose because it is

01:07:33,010 --> 01:07:38,800
unsafe we want man dog to be safe for a

01:07:35,770 --> 01:07:44,310
system administrator to run in a root

01:07:38,800 --> 01:07:47,740
shell even when there are bystanders so

01:07:44,310 --> 01:07:51,850
now if a malicious user writes a manual

01:07:47,740 --> 01:07:54,790
that contains an instruction please

01:07:51,850 --> 01:07:56,920
include the master password file here of

01:07:54,790 --> 01:08:01,330
verba tip and tricks the system

01:07:56,920 --> 01:08:04,720
administrator to run man dog on that bad

01:08:01,330 --> 01:08:08,070
manual while looking over his shoulder

01:08:04,720 --> 01:08:11,440
he will see the encrypted passwords so

01:08:08,070 --> 01:08:15,850
we don't support BD file and if your

01:08:11,440 --> 01:08:16,859
manual can't contain that man doc will

01:08:15,850 --> 01:08:21,400
abort

01:08:16,859 --> 01:08:24,490
similarly the Roth dot s o file

01:08:21,400 --> 01:08:28,359
inclusion request which is extensively

01:08:24,490 --> 01:08:30,190
used by the xorg manuals is only

01:08:28,359 --> 01:08:34,390
supported in the way needed actually

01:08:30,190 --> 01:08:37,210
needed that is only with relative parts

01:08:34,390 --> 01:08:39,640
not involving going up to parent

01:08:37,210 --> 01:08:43,779
directories for the same reason we don't

01:08:39,640 --> 01:08:46,390
want to include sensitive files so

01:08:43,779 --> 01:08:50,380
that's basically the only kind of fatal

01:08:46,390 --> 01:08:52,510
errors left that you might encounter in

01:08:50,380 --> 01:08:55,480
practice by the way these these

01:08:52,510 --> 01:08:57,490
mountains here are the ones that give

01:08:55,480 --> 01:09:01,859
the name to this room so this kind of

01:08:57,490 --> 01:09:01,859
fatal rule peeling

01:09:03,770 --> 01:09:08,960
next step and that's the most important

01:09:06,440 --> 01:09:12,529
step in in quality control is catching

01:09:08,960 --> 01:09:17,540
errors an error in man-dog language

01:09:12,529 --> 01:09:21,080
means either there is a serious risk

01:09:17,540 --> 01:09:24,020
that content gets lost or there is a

01:09:21,080 --> 01:09:27,819
serious risk that vomiting is completely

01:09:24,020 --> 01:09:34,150
garbled and looks really bad so you run

01:09:27,819 --> 01:09:34,150
man dirty lint in the arrow mode and

01:09:35,380 --> 01:09:42,620
almost always neat you need to fix

01:09:38,420 --> 01:09:44,960
anything that shows up there in a in a

01:09:42,620 --> 01:09:47,900
good quality codebase it will be very

01:09:44,960 --> 01:09:50,359
little in a bad quality codebase you can

01:09:47,900 --> 01:09:53,839
have several errors per manual page on

01:09:50,359 --> 01:09:58,250
average it really depends the typical

01:09:53,839 --> 01:10:02,690
types are unencoded non ASCII characters

01:09:58,250 --> 01:10:06,199
in input those are obviously syntax

01:10:02,690 --> 01:10:09,250
errors and unported all graph by the way

01:10:06,199 --> 01:10:13,070
doesn't report that it just does

01:10:09,250 --> 01:10:15,739
whatever happens with it I know no

01:10:13,070 --> 01:10:18,500
mistyped macro names very dangerous

01:10:15,739 --> 01:10:23,690
because usually unknown macros are just

01:10:18,500 --> 01:10:27,290
ignored ignored including the arguments

01:10:23,690 --> 01:10:29,389
which is information loss then blocking

01:10:27,290 --> 01:10:32,120
errors like opening a block never

01:10:29,389 --> 01:10:36,920
closing it again closing a book that was

01:10:32,120 --> 01:10:39,350
never opened in such stuff and severe

01:10:36,920 --> 01:10:42,469
issues with with arguments if there are

01:10:39,350 --> 01:10:44,389
macros with which are lacking essential

01:10:42,469 --> 01:10:47,179
arguments so that they don't work at all

01:10:44,389 --> 01:10:49,190
or if there are excess arguments that

01:10:47,179 --> 01:10:52,250
may contain important information but

01:10:49,190 --> 01:10:55,250
are ignored because the macro doesn't

01:10:52,250 --> 01:10:59,170
support so many arguments those are

01:10:55,250 --> 01:11:05,239
arrows so if you see arrows fix them

01:10:59,170 --> 01:11:09,110
final step once you have cleaned up all

01:11:05,239 --> 01:11:14,389
the arrows run mondo talent again

01:11:09,110 --> 01:11:17,119
without any - w-we argument

01:11:14,389 --> 01:11:21,350
then it will report everything it

01:11:17,119 --> 01:11:28,760
considers problematic in a low-quality

01:11:21,350 --> 01:11:35,889
tree expect lots of output in a good

01:11:28,760 --> 01:11:35,889
quality tree so for example the OpenBSD

01:11:36,310 --> 01:11:42,679
section to manuals the system call

01:11:39,590 --> 01:11:45,980
manuals that that's about 150 manuals

01:11:42,679 --> 01:11:47,409
also have grant total 30 warnings or

01:11:45,980 --> 01:11:52,270
something like that

01:11:47,409 --> 01:11:55,219
you really can get a tree warning clean

01:11:52,270 --> 01:11:58,550
there are sometimes a few false

01:11:55,219 --> 01:12:00,679
positives so it's it's usually good to

01:11:58,550 --> 01:12:03,170
fix most of them but use your judgement

01:12:00,679 --> 01:12:06,679
do not blindly just like with compiler

01:12:03,170 --> 01:12:10,760
warnings do not blind it there are

01:12:06,679 --> 01:12:13,130
various classes it's typically when

01:12:10,760 --> 01:12:14,989
stuff is used that doesn't completely

01:12:13,130 --> 01:12:18,530
gobble formatting it doesn't lose

01:12:14,989 --> 01:12:22,239
information that is bad style or not

01:12:18,530 --> 01:12:27,500
quite portable for various reasons yeah

01:12:22,239 --> 01:12:30,650
by the way all the messages you can you

01:12:27,500 --> 01:12:35,510
can expect are listed in the in the

01:12:30,650 --> 01:12:38,989
portable man dock manual itself so one

01:12:35,510 --> 01:12:43,960
way to get that and to get explanations

01:12:38,989 --> 01:12:47,869
of the the messages is to just go to the

01:12:43,960 --> 01:12:50,630
to the man dog home page and here look

01:12:47,869 --> 01:12:53,540
at the man dog manual if your operating

01:12:50,630 --> 01:12:56,330
system doesn't install the the full

01:12:53,540 --> 01:13:01,810
manual and here at the bottom you have

01:12:56,330 --> 01:13:01,810
the list of all the all the warnings

01:13:02,500 --> 01:13:10,400
wrong line sorry

01:13:04,389 --> 01:13:13,969
yeah so now on your tree you have looked

01:13:10,400 --> 01:13:17,420
for fatal errors fix them right away you

01:13:13,969 --> 01:13:20,570
have worked through all the usual errors

01:13:17,420 --> 01:13:25,969
and finally you had to look at warnings

01:13:20,570 --> 01:13:27,800
and maybe fix a few of them there are a

01:13:25,969 --> 01:13:32,630
few other tools that

01:13:27,800 --> 01:13:35,719
I'll just mention briefly in that pious

01:13:32,630 --> 01:13:39,250
deed they have been using the tool em

01:13:35,719 --> 01:13:42,320
dockland written by thomas Klausner with

01:13:39,250 --> 01:13:45,440
for a long time it's quite similar to my

01:13:42,320 --> 01:13:50,989
log T Lynch so it also focuses on

01:13:45,440 --> 01:13:53,150
caching syntax errors it used to have it

01:13:50,989 --> 01:13:55,070
used to catch additional errors that

01:13:53,150 --> 01:13:57,889
Murdoch didn't catch but most of these

01:13:55,070 --> 01:14:01,159
have been integrated into man-dog during

01:13:57,889 --> 01:14:04,369
the last few months so it's not it may

01:14:01,159 --> 01:14:10,820
sometimes find a bit more but it also

01:14:04,369 --> 01:14:15,380
has a much higher noise noise the signal

01:14:10,820 --> 01:14:17,540
ratio so that's more for if you want to

01:14:15,380 --> 01:14:19,489
be very careful you can use that too it

01:14:17,540 --> 01:14:22,489
should it's written in Perl it should

01:14:19,489 --> 01:14:24,800
basically work everywhere in that bsd

01:14:22,489 --> 01:14:30,650
there is a port and OpenBSD it's in the

01:14:24,800 --> 01:14:32,420
regression suits to run that one just

01:14:30,650 --> 01:14:35,239
give the names of the file you want to

01:14:32,420 --> 01:14:37,880
check on the command line and you

01:14:35,239 --> 01:14:45,940
usually don't lis need options except to

01:14:37,880 --> 01:14:49,550
suppress messages you don't want yeah a

01:14:45,940 --> 01:14:53,929
quite useful tool comes from FreeBSD it

01:14:49,550 --> 01:14:57,230
was written by Warren block it has a a

01:14:53,929 --> 01:15:00,340
quite different focus it doesn't know so

01:14:57,230 --> 01:15:04,090
much about syntax but it finds

01:15:00,340 --> 01:15:07,309
surprisingly many bad Spelling's and

01:15:04,090 --> 01:15:09,829
instances of bad styles so it has some

01:15:07,309 --> 01:15:13,219
kind of very simple artificial

01:15:09,829 --> 01:15:18,340
intelligence I'd say well not really but

01:15:13,219 --> 01:15:18,340
a bit in that direction he named it Igor

01:15:18,639 --> 01:15:26,659
because he thinks it's a useful servant

01:15:21,800 --> 01:15:29,780
like the ego in Frankenstein it is

01:15:26,659 --> 01:15:34,429
available both in FreeBSD and open BSD

01:15:29,780 --> 01:15:36,320
as a port and the way of using it is

01:15:34,429 --> 01:15:39,170
exactly the same as forensically and

01:15:36,320 --> 01:15:41,090
just give the file names and if it's too

01:15:39,170 --> 01:15:43,940
noisy you can

01:15:41,090 --> 01:15:50,750
shut it up a bit by using command-line

01:15:43,940 --> 01:15:55,099
options so that's really a good thing to

01:15:50,750 --> 01:15:59,239
run after man dog Keeneland if you if

01:15:55,099 --> 01:16:02,630
you want to yeah and finally well

01:15:59,239 --> 01:16:05,650
probably most of you won't do that in

01:16:02,630 --> 01:16:08,570
the man dog repository there's a very

01:16:05,650 --> 01:16:10,639
simple cell shell script to actually

01:16:08,570 --> 01:16:15,320
compare the output of man dog against

01:16:10,639 --> 01:16:17,659
the output of growth that's most useful

01:16:15,320 --> 01:16:19,099
for finding formatter bugs but sometimes

01:16:17,659 --> 01:16:21,469
what you when you have a lot of

01:16:19,099 --> 01:16:24,440
experience it can also be used to find

01:16:21,469 --> 01:16:27,920
constructions that are less portable I'm

01:16:24,440 --> 01:16:32,150
just mentioning it it's probably more

01:16:27,920 --> 01:16:36,110
advanced yeah and I think I will skip

01:16:32,150 --> 01:16:39,139
this one for now because it's even more

01:16:36,110 --> 01:16:42,260
advanced and go on just to the to the

01:16:39,139 --> 01:16:50,989
exercises before first people start

01:16:42,260 --> 01:16:55,630
sleeping I have I have sheets of

01:16:50,989 --> 01:16:55,630
exercises prepared here it's always to

01:16:57,340 --> 01:17:07,300
two sheets of paper you can pass them

01:17:01,909 --> 01:17:14,869
around the first page is some general

01:17:07,300 --> 01:17:17,570
remarks that I'll also give orally there

01:17:14,869 --> 01:17:19,610
is a very large number of exercises the

01:17:17,570 --> 01:17:21,829
intention is not that you work on all of

01:17:19,610 --> 01:17:23,780
them there is not enough time the

01:17:21,829 --> 01:17:28,460
intention is that you choose what

01:17:23,780 --> 01:17:30,440
interests you specifically so do not

01:17:28,460 --> 01:17:33,190
waste your time reading all the four

01:17:30,440 --> 01:17:36,380
pages of instructions just study those

01:17:33,190 --> 01:17:43,969
instructions you actually want to work

01:17:36,380 --> 01:17:46,880
on feel free to either work alone always

01:17:43,969 --> 01:17:50,480
partners two or three people together if

01:17:46,880 --> 01:17:53,389
you want to just as you like and very

01:17:50,480 --> 01:17:54,500
important do not be shy to ask questions

01:17:53,389 --> 01:17:56,990
either to the P

01:17:54,500 --> 01:17:59,510
sitting beside you or to anything you

01:17:56,990 --> 01:18:04,250
remember might know something about the

01:17:59,510 --> 01:18:08,180
area in particular feel free to come to

01:18:04,250 --> 01:18:10,970
kristaps crisps yeah

01:18:08,180 --> 01:18:13,370
or to me to ask questions what you

01:18:10,970 --> 01:18:16,070
really can do here and can't do so much

01:18:13,370 --> 01:18:18,830
at home is communicate you have all the

01:18:16,070 --> 01:18:23,060
time all the time and you want at home

01:18:18,830 --> 01:18:26,840
but talking to others really only works

01:18:23,060 --> 01:18:29,030
here and then in case you run into

01:18:26,840 --> 01:18:31,100
anything that is really tight if or

01:18:29,030 --> 01:18:33,650
time-consuming just do the first bit of

01:18:31,100 --> 01:18:36,770
it and then skip the rest and go on to

01:18:33,650 --> 01:18:40,490
to the next section such such that you

01:18:36,770 --> 01:18:42,500
have a chance to if there are any

01:18:40,490 --> 01:18:44,810
problems to find as many problems as

01:18:42,500 --> 01:18:48,770
possible that you can work out here and

01:18:44,810 --> 01:18:51,950
if you want to probably not all of you

01:18:48,770 --> 01:18:55,610
but if you think you find something

01:18:51,950 --> 01:18:58,490
really interesting for others speak to

01:18:55,610 --> 01:19:00,410
me or to yeah speak to me you might have

01:18:58,490 --> 01:19:02,810
a slot of one or two two or three

01:19:00,410 --> 01:19:04,880
minutes at the end to present it with

01:19:02,810 --> 01:19:07,730
your findings but you don't need to

01:19:04,880 --> 01:19:12,920
nobody will be forced to enter present

01:19:07,730 --> 01:19:15,440
anything so there are about seven or

01:19:12,920 --> 01:19:17,540
eight different exercises all of them

01:19:15,440 --> 01:19:23,810
are real-world exercises so I've

01:19:17,540 --> 01:19:26,330
prepared no exercises of the style of a

01:19:23,810 --> 01:19:30,530
classroom style it's it's always take

01:19:26,330 --> 01:19:33,460
some real tasks and work on it you can

01:19:30,530 --> 01:19:41,680
choose any that seems interesting to you

01:19:33,460 --> 01:19:50,230
but my recommendation is if you're

01:19:41,680 --> 01:19:56,390
primarily a software developer you might

01:19:50,230 --> 01:19:58,910
prefer to choose the one writing manual

01:19:56,390 --> 01:20:06,040
from scratch or translating a manual

01:19:58,910 --> 01:20:08,239
from from man to MDOC or checking

01:20:06,040 --> 01:20:10,070
existing manuals depending

01:20:08,239 --> 01:20:14,060
on what the software you are actually

01:20:10,070 --> 01:20:17,420
working on has so if it has no manual at

01:20:14,060 --> 01:20:19,580
all yet like you say it for your shell

01:20:17,420 --> 01:20:21,920
system administration that might be good

01:20:19,580 --> 01:20:24,200
for you if you already maintain a

01:20:21,920 --> 01:20:27,630
software project this has m'd of manuals

01:20:24,200 --> 01:20:29,560
maybe this one might might be a good one

01:20:27,630 --> 01:20:33,680
[Music]

01:20:29,560 --> 01:20:40,580
for probably this one is not recommended

01:20:33,680 --> 01:20:43,810
for people here if you are a system

01:20:40,580 --> 01:20:46,370
administrator than the things about

01:20:43,810 --> 01:20:51,920
locations and formats might be

01:20:46,370 --> 01:20:56,290
interesting but I would say no given you

01:20:51,920 --> 01:20:56,290
feedback where you come from I would say

01:20:56,860 --> 01:21:01,880
focusing on these in this working phase

01:20:59,510 --> 01:21:03,739
is probably better and getting to these

01:21:01,880 --> 01:21:05,810
and the second working phase when I've

01:21:03,739 --> 01:21:12,170
presented the things on searching is

01:21:05,810 --> 01:21:16,280
probably better yeah so for now the

01:21:12,170 --> 01:21:18,350
exercise is 1.1 to 2.2 are probably the

01:21:16,280 --> 01:21:21,020
best ones to work on because that's on

01:21:18,350 --> 01:21:24,920
stuff I've already presented and then we

01:21:21,020 --> 01:21:28,610
make the second phase a bit longer in

01:21:24,920 --> 01:21:31,040
case you're you're lost where to find

01:21:28,610 --> 01:21:35,290
the manuals the example manuals or the

01:21:31,040 --> 01:21:38,330
software a few of you might possibly

01:21:35,290 --> 01:21:40,400
talk to the people saying there are the

01:21:38,330 --> 01:21:44,660
system administrators and have actual

01:21:40,400 --> 01:21:47,140
software to document and team up to work

01:21:44,660 --> 01:21:47,140
on that

01:21:49,739 --> 01:21:54,480
so do any of you already have some

01:21:52,980 --> 01:22:04,980
software in mind that you are using

01:21:54,480 --> 01:22:08,760
regularly or where you know it's any of

01:22:04,980 --> 01:22:12,989
you using a bsd operating system

01:22:08,760 --> 01:22:17,489
regularly like FreeBSD or that PST or

01:22:12,989 --> 01:22:20,810
yeah so that's all so if if you have

01:22:17,489 --> 01:22:24,480
some software you really care about I

01:22:20,810 --> 01:22:27,360
recommend starting with that seeing

01:22:24,480 --> 01:22:31,530
whether it has manual pages if not work

01:22:27,360 --> 01:22:34,860
on it is if it has manual pages doing

01:22:31,530 --> 01:22:37,380
quality checks on on them if that's not

01:22:34,860 --> 01:22:46,610
the case you can try with your operating

01:22:37,380 --> 01:22:55,560
system and I probably also go around and

01:22:46,610 --> 01:22:59,090
try to help you find something that is

01:22:55,560 --> 01:22:59,090
good to get people stud

01:24:10,849 --> 01:24:18,979
Lipsett is do you have an example

01:24:15,809 --> 01:24:18,979
function from Dipset

01:24:34,700 --> 01:24:52,410
okay so that's what is that that is

01:24:41,040 --> 01:24:54,660
already em knock yeah well would be once

01:24:52,410 --> 01:25:17,810
I I'm not doing the exercise right now

01:24:54,660 --> 01:25:17,810
but this lip expert uses is which vomit

01:25:34,730 --> 01:25:42,050
GD is also man right now I think yeah so

01:26:25,170 --> 01:26:30,970
yes I think for you for you the it's

01:26:28,150 --> 01:26:35,020
it's probably easy right you you will

01:26:30,970 --> 01:26:38,020
probably work on on your own skirts and

01:26:35,020 --> 01:26:40,350
get something done there hey you have an

01:26:38,020 --> 01:26:40,350
idea

01:26:43,380 --> 01:27:10,980
good so that's an advanced topic yeah

01:27:17,930 --> 01:27:21,069
[Applause]

01:27:26,789 --> 01:27:36,559
ah if that's not possible

01:27:30,869 --> 01:27:36,559
okay that's bad hmm

01:27:38,090 --> 01:27:41,960
what I do I don't know

01:27:45,640 --> 01:27:59,159
[Applause]

01:28:00,130 --> 01:28:09,909
that's the one in OpenBSD works yeah

01:28:18,370 --> 01:28:43,120
okay yeah you have an idea okay

01:28:49,260 --> 01:28:52,260
some-something

01:28:53,619 --> 01:28:59,980
and you should probably pay attention

01:29:00,940 --> 01:29:12,050
it's bit more difficult in OpenBSD than

01:29:04,429 --> 01:29:14,719
in other systems because yeah I have

01:29:12,050 --> 01:29:17,659
something you should probably exclude

01:29:14,719 --> 01:29:20,449
you should probably not look at the see

01:29:17,659 --> 01:29:26,780
library and system con manuals those of

01:29:20,449 --> 01:29:32,539
excellent quality and so I mean what

01:29:26,780 --> 01:29:34,460
might be useful is net yeah something

01:29:32,539 --> 01:29:36,920
that you use and probably more in the

01:29:34,460 --> 01:29:38,840
area of system administration or network

01:29:36,920 --> 01:29:41,869
demons or something like that also the

01:29:38,840 --> 01:29:46,059
the base systems stuff was there to make

01:29:41,869 --> 01:29:46,059
quite good yeah okay

01:29:59,209 --> 01:30:40,019
so you have an idea - so which are the

01:30:25,530 --> 01:30:42,869
ones you're looking ssh-1 is but I don't

01:30:40,019 --> 01:30:48,059
it's it's a tricky a tricky thing

01:30:42,869 --> 01:30:51,809
because they they don't use the the

01:30:48,059 --> 01:30:54,179
portability stuff I've presented yet so

01:30:51,809 --> 01:30:59,699
they still have an old portability

01:30:54,179 --> 01:31:04,309
script which causes quirks so you could

01:30:59,699 --> 01:31:04,309
get a track there okay

01:31:13,340 --> 01:31:20,240
it is bigger - yes like when saloons or

01:31:17,960 --> 01:31:22,970
insisting she skipped off or obesity in

01:31:20,240 --> 01:31:24,290
just pot of my release top she just

01:31:22,970 --> 01:31:29,540
finished this isn't what's important

01:31:24,290 --> 01:31:31,940
where this had honest after yeah from

01:31:29,540 --> 01:31:38,060
flesh Martin middleman page to a little

01:31:31,940 --> 01:31:40,330
birdies man doc super decides to master

01:31:38,060 --> 01:31:40,330
yeah

01:31:54,329 --> 01:32:00,360
okay you already have some ideas no we

01:31:57,960 --> 01:32:12,270
have no laptop so itself ah that's the

01:32:00,360 --> 01:32:18,570
problem okay but maybe you could team up

01:32:12,270 --> 01:32:21,869
with somebody else so so far I found I

01:32:18,570 --> 01:32:24,389
found one person who is working on

01:32:21,869 --> 01:32:28,309
FreeBSD manual tracks one person who is

01:32:24,389 --> 01:32:33,599
working on open BSD manual checks and

01:32:28,309 --> 01:32:35,550
when you are preparing and another man

01:32:33,599 --> 01:32:39,719
to MDOC translation so that's probably

01:32:35,550 --> 01:32:42,230
the best thing you can you can do which

01:32:39,719 --> 01:32:47,030
of those seemed interesting to you then

01:32:42,230 --> 01:32:47,030
I can show you who is working on it

01:32:48,770 --> 01:32:55,550
Monty I'm not that would be the

01:32:50,909 --> 01:32:55,550
colleague writing behind you

01:32:58,650 --> 01:33:19,080
yeah the FreeBSD I think that was the

01:33:12,880 --> 01:33:22,810
colleague near the wall word of sailing

01:33:19,080 --> 01:33:26,200
the colleague near the wall world of

01:33:22,810 --> 01:33:31,870
sailing is working on FreeBSD should I

01:33:26,200 --> 01:33:33,700
ask you probably I remember rightly that

01:33:31,870 --> 01:33:35,890
you are working on quality checks on

01:33:33,700 --> 01:33:37,720
FreeBSD manuals there is this one

01:33:35,890 --> 01:33:40,030
participant who didn't bring in that

01:33:37,720 --> 01:33:44,530
book who is also interested interested

01:33:40,030 --> 01:33:48,210
in maybe you would like to team up so

01:33:44,530 --> 01:33:51,210
it's like over there that's nice

01:33:48,210 --> 01:33:51,210
ok

01:33:59,850 --> 01:34:03,009
[Music]

01:34:11,719 --> 01:34:17,760
if if you if none of the exercises

01:34:15,269 --> 01:34:20,449
appeal to you one is saying you could

01:34:17,760 --> 01:34:25,709
also do is look through kristaps

01:34:20,449 --> 01:34:29,639
tutorial because that's if your interest

01:34:25,709 --> 01:34:30,989
is really to learn writing manuals and

01:34:29,639 --> 01:34:34,590
to see how it's done and what's

01:34:30,989 --> 01:34:37,050
important and reading that thing in this

01:34:34,590 --> 01:34:37,499
20 minutes is also something that makes

01:34:37,050 --> 01:34:50,639
sense

01:34:37,499 --> 01:34:52,769
oh yes and even if if you notice

01:34:50,639 --> 01:34:56,099
anything that is hard to understand or

01:34:52,769 --> 01:34:59,039
anything where you you suspect something

01:34:56,099 --> 01:35:03,479
might be wrong from the level of typos

01:34:59,039 --> 01:35:05,849
up to really content arrows crew steps

01:35:03,479 --> 01:35:11,780
is around and would be very glad to to

01:35:05,849 --> 01:35:11,780
get feedback yeah that is okay

01:35:16,770 --> 01:35:23,130
so you were it is some idea what I was

01:35:20,820 --> 01:35:30,510
yeah I was just looking at the the man

01:35:23,130 --> 01:35:33,050
page for a no js' oh it's actually very

01:35:30,510 --> 01:35:41,100
brief it looks like most of it is just

01:35:33,050 --> 01:35:45,870
yes it hasn't actually been left yeah um

01:35:41,100 --> 01:35:50,340
so that is that is a man man page you

01:35:45,870 --> 01:35:54,710
see here the the dot SH the capital so

01:35:50,340 --> 01:36:07,650
if you run man doc - T lint on that one

01:35:54,710 --> 01:36:17,370
you will really get a lot of output it

01:36:07,650 --> 01:36:21,780
looks like okay no that is that is the

01:36:17,370 --> 01:36:24,720
graph MDOT manual page and written by

01:36:21,780 --> 01:36:31,440
vana Lim back it's it's also not a bad

01:36:24,720 --> 01:36:33,390
one but on if you want to work on OS 10

01:36:31,440 --> 01:36:39,780
you don't have mandoke installed by

01:36:33,390 --> 01:36:42,150
default so you would have to to install

01:36:39,780 --> 01:36:44,540
it it should be quite know just to

01:36:42,150 --> 01:36:47,670
compile it you don't need to install it

01:36:44,540 --> 01:36:50,930
relatively easy you download a table of

01:36:47,670 --> 01:36:50,930
Oh what is this

01:36:55,290 --> 01:37:03,360
you download the tarball from em Dokken

01:36:58,570 --> 01:37:03,360
lvsd lv probably just with the browser

01:37:04,410 --> 01:37:16,020
I'm talking yeah or start from the

01:37:07,600 --> 01:37:16,020
OpenBSD Manta yeah there it is back one

01:37:17,670 --> 01:37:27,580
okay you can just delete the path after

01:37:20,680 --> 01:37:38,680
the domain one more you know write that

01:37:27,580 --> 01:37:41,550
and then used released herbal you

01:37:38,680 --> 01:37:59,650
extract that into a temporary directory

01:37:41,550 --> 01:38:07,270
and just run okay just run configure and

01:37:59,650 --> 01:38:09,670
make okay well perhaps you speak up when

01:38:07,270 --> 01:38:12,750
you have the tab all extract it and I

01:38:09,670 --> 01:38:12,750
will help again yeah

01:38:18,469 --> 01:38:36,390
you're getting on yeah the OpenBSD

01:38:33,210 --> 01:38:40,890
manuals are are quite good where you

01:38:36,390 --> 01:38:45,360
could try if you insist on looking at

01:38:40,890 --> 01:38:48,300
OpenBSD manuals is installing the Eiger

01:38:45,360 --> 01:38:51,239
port and looking at stuff with Eiger

01:38:48,300 --> 01:38:54,390
chances are you will you will find typos

01:38:51,239 --> 01:38:59,810
with that one it's it's probably not not

01:38:54,390 --> 01:39:03,360
saying for working on for a long time

01:38:59,810 --> 01:39:10,620
but getting a bit of feel of Eiger could

01:39:03,360 --> 01:39:18,350
be interesting okay you're finding

01:39:10,620 --> 01:39:18,350
something okay

01:39:22,760 --> 01:39:28,000
well no problems you study time to get

01:39:25,610 --> 01:39:28,000
that going

01:39:38,440 --> 01:39:45,560
then you find anything interesting so

01:39:40,850 --> 01:39:49,720
far remember this is Iran London they

01:39:45,560 --> 01:39:52,700
have nothing avoid all the levels of

01:39:49,720 --> 01:39:54,470
warnings so now I'm trying to run

01:39:52,700 --> 01:39:56,360
everything in this area to see if

01:39:54,470 --> 01:39:57,890
there's something which is wrong with

01:39:56,360 --> 01:39:59,690
someone fine okay

01:39:57,890 --> 01:40:02,440
you don't get any warnings on the

01:39:59,690 --> 01:40:10,280
FreeBSD manuals

01:40:02,440 --> 01:40:14,330
okay yeah okay it's a price but that's

01:40:10,280 --> 01:40:19,690
good that FreeBSD is right on the point

01:40:14,330 --> 01:40:26,060
of switching from installing oh wait

01:40:19,690 --> 01:40:31,100
what would I install no I I mean which

01:40:26,060 --> 01:40:34,250
which manuals today do they install its

01:40:31,100 --> 01:40:36,410
dot yeah it's know it's it's unformatted

01:40:34,250 --> 01:40:40,280
yeah okay they so right now they are

01:40:36,410 --> 01:40:41,750
formatting with with broth yeah and they

01:40:40,280 --> 01:40:44,000
are on the point of switching to

01:40:41,750 --> 01:40:45,620
formatting with man doc so if they are

01:40:44,000 --> 01:40:50,120
already in a state where they have

01:40:45,620 --> 01:41:09,290
almost no warning that's quite good yeah

01:40:50,120 --> 01:41:11,060
but still try try running on all this at

01:41:09,290 --> 01:41:13,130
first I would write the product from

01:41:11,060 --> 01:41:17,030
scratch and the name section from

01:41:13,130 --> 01:41:18,860
scratch okay and then probably for the

01:41:17,030 --> 01:41:22,160
synopsis section which is the next thing

01:41:18,860 --> 01:41:25,220
I would look at the formatted output of

01:41:22,160 --> 01:41:29,450
the man manual and just write it down

01:41:25,220 --> 01:41:32,510
from scratch to and after that I would

01:41:29,450 --> 01:41:38,030
probably look both at the source code of

01:41:32,510 --> 01:41:42,550
the man and at the at the formatted

01:41:38,030 --> 01:41:42,550
version of man in the main text

01:41:43,550 --> 01:41:49,490
it's a bit more tricky well you have to

01:41:47,000 --> 01:41:52,790
you really have to mark up lots of

01:41:49,490 --> 01:41:55,190
things that are not marked up in man but

01:41:52,790 --> 01:41:57,170
you also there's also sometimes some

01:41:55,190 --> 01:42:03,610
mark up in man that you don't want to

01:41:57,170 --> 01:42:03,610
lose so yeah that's for getting started

01:42:12,900 --> 01:42:22,450
I'm trying to remember what's the what's

01:42:16,060 --> 01:42:25,650
the command to minus X for extract then

01:42:22,450 --> 01:42:28,510
you can use if it's compressed use that

01:42:25,650 --> 01:42:30,910
if you want to see the filenames while

01:42:28,510 --> 01:42:33,940
they are being extracted it's Li for

01:42:30,910 --> 01:42:37,530
verbose and then F and you give the file

01:42:33,940 --> 01:42:37,530
name the F is

01:42:47,890 --> 01:43:01,610
it will extract in in something like

01:42:54,610 --> 01:43:04,850
MDOC ml - version number so if you if

01:43:01,610 --> 01:43:07,340
you a good practice is to first exchange

01:43:04,850 --> 01:43:10,880
the X with the T for table of contents

01:43:07,340 --> 01:43:12,100
then you see word will extract - and if

01:43:10,880 --> 01:43:16,550
that pleases you

01:43:12,100 --> 01:43:22,400
yeah return so that's where it would

01:43:16,550 --> 01:43:25,000
extract - if that pleases you just do it

01:43:22,400 --> 01:43:25,000
with an X

01:43:26,350 --> 01:43:39,290
yeah now you can change into it right

01:43:33,770 --> 01:43:41,780
and just type dot configure dot slash

01:43:39,290 --> 01:43:51,290
configure sorry

01:43:41,780 --> 01:43:58,640
Oh what is not how did you get in

01:43:51,290 --> 01:44:02,050
oh it's table all I'll wait you know

01:43:58,640 --> 01:44:06,070
that's okay just type just I'd make

01:44:02,050 --> 01:44:06,070
let's see whether that works

01:44:06,980 --> 01:44:12,570
[Music]

01:44:08,390 --> 01:44:15,600
it's not the current release isn't fully

01:44:12,570 --> 01:44:20,850
okay the type of the I make fall place

01:44:15,600 --> 01:44:24,210
with capital m and let's see what we

01:44:20,850 --> 01:44:27,180
have to do for fun man dog that we don't

01:44:24,210 --> 01:44:33,090
need and that we don't need okay go down

01:44:27,180 --> 01:44:36,510
here just just move yeah you could also

01:44:33,090 --> 01:44:39,300
use a different editor as you like your

01:44:36,510 --> 01:44:42,780
targets you can comment that out we

01:44:39,300 --> 01:44:49,170
don't need that right so insert mode and

01:44:42,780 --> 01:44:52,760
then what you want to insert yes and

01:44:49,170 --> 01:45:00,450
escape to get out of it again yeah right

01:44:52,760 --> 01:45:05,870
so you don't need that yadda but that's

01:45:00,450 --> 01:45:10,230
that's don't hate to bother it's been to

01:45:05,870 --> 01:45:19,980
static you don't need that so it should

01:45:10,230 --> 01:45:29,000
I would hope that it works now wwq it is

01:45:19,980 --> 01:45:29,000
yeah okay try and make again

01:45:31,920 --> 01:45:41,150
what does it complain about so Darwin

01:45:37,139 --> 01:45:41,150
come up a lot so I'm wondering if

01:45:47,210 --> 01:45:53,990
can you show the beginning of the

01:45:49,550 --> 01:45:55,250
errormsgs instead of the end that's

01:45:53,990 --> 01:45:57,950
strange

01:45:55,250 --> 01:45:59,600
and maybe you should get kristaps to

01:45:57,950 --> 01:46:05,500
help Kristoff's you do know how to

01:45:59,600 --> 01:46:08,510
compile endo Cannell on Mac OS right

01:46:05,500 --> 01:46:11,560
yeah it should so it's just a

01:46:08,510 --> 01:46:15,020
distribution table oh if you can help to

01:46:11,560 --> 01:46:39,280
collect and I can look at something else

01:46:15,020 --> 01:46:39,280
thank you okay okay yes that makes sense

01:46:48,960 --> 01:47:00,450
ah okay I forgot to say that about Igor

01:46:56,610 --> 01:47:03,810
Igor is not at all afraid about false

01:47:00,450 --> 01:47:06,360
positives so there is a lot of noise and

01:47:03,810 --> 01:47:08,430
ego output I would guess that about half

01:47:06,360 --> 01:47:10,350
of what Igor it thought this actual

01:47:08,430 --> 01:47:14,040
arrows and the rest is noise and that's

01:47:10,350 --> 01:47:16,170
a typical case of noise so it's tough no

01:47:14,040 --> 01:47:37,680
directory so my clean maker

01:47:16,170 --> 01:47:47,610
oh great thanks yeah know that that's a

01:47:37,680 --> 01:47:51,180
buckin ego yes ego ego insists on a date

01:47:47,610 --> 01:47:53,940
format on a specific date format but you

01:47:51,180 --> 01:47:57,360
shouldn't put that just ignore that

01:47:53,940 --> 01:48:00,570
particular ego message ya know what what

01:47:57,360 --> 01:48:02,070
ego complains about is the MDOC date it

01:48:00,570 --> 01:48:04,980
doesn't know the MDOC date but you

01:48:02,070 --> 01:48:07,890
mustn't delete that so but the other

01:48:04,980 --> 01:48:11,790
things you find they are real so also

01:48:07,890 --> 01:48:17,010
the the don't it's a it's a good idea to

01:48:11,790 --> 01:48:18,989
to not use these contractions so you're

01:48:17,010 --> 01:48:22,140
very welcome to just prepare a complete

01:48:18,989 --> 01:48:26,460
patch of that okay send me a mail and I

01:48:22,140 --> 01:48:28,320
will committed and credit you if you

01:48:26,460 --> 01:48:30,690
like of course it's it's not a

01:48:28,320 --> 01:48:34,130
requirement but if you like we can do

01:48:30,690 --> 01:48:34,130
that I'd like to

01:48:41,810 --> 01:48:49,920
[Music]

01:48:44,160 --> 01:48:51,960
which well if it's if it's just

01:48:49,920 --> 01:48:55,650
formatting a turnstile errors in the

01:48:51,960 --> 01:48:58,350
manual you can even take be precise good

01:48:55,650 --> 01:48:59,640
yeah so you've found the first real bugs

01:48:58,350 --> 01:49:02,790
yet games

01:48:59,640 --> 01:49:13,560
yeah well I've committed to games

01:49:02,790 --> 01:49:19,530
multiple times okay so after it is quite

01:49:13,560 --> 01:49:22,010
an important page but it is one of the

01:49:19,530 --> 01:49:24,840
very very few pages that doesn't

01:49:22,010 --> 01:49:27,920
correspond to a specific utility yeah

01:49:24,840 --> 01:49:31,350
it's it's a bit like the help page or

01:49:27,920 --> 01:49:33,750
it's just documenting what you can do

01:49:31,350 --> 01:49:37,070
after installing the system so I'm also

01:49:33,750 --> 01:49:37,070
just going to have a look at

01:49:49,520 --> 01:50:01,910
and that is an open BSD system then just

01:49:53,420 --> 01:50:04,820
type locate after boot oh you don't have

01:50:01,910 --> 01:50:13,070
it you can if you want to you can run in

01:50:04,820 --> 01:50:21,530
a shell in the in the background sudo sh

01:50:13,070 --> 01:50:26,030
/ et Cie / weekly if you do that it will

01:50:21,530 --> 01:50:32,090
rebuild the database and then you can

01:50:26,030 --> 01:50:36,620
use it but if the location it is

01:50:32,090 --> 01:50:50,950
installed to is user share man man 8

01:50:36,620 --> 01:51:01,970
after boot dot 8 so that's the okay so

01:50:50,950 --> 01:51:10,760
place you have a page yeah just to

01:51:01,970 --> 01:51:13,100
replace it but I do not know I I'm not

01:51:10,760 --> 01:51:21,440
sure I would if it if it would be

01:51:13,100 --> 01:51:24,050
together yes general

01:51:21,440 --> 01:51:27,020
strongly in FreeBSD did they prefer to

01:51:24,050 --> 01:51:31,130
avoid contractions because it's easier

01:51:27,020 --> 01:51:33,830
to easier to read and I kind of agree

01:51:31,130 --> 01:51:36,440
with it if it would be the only thing to

01:51:33,830 --> 01:51:38,480
fix in a manual page I'm not exactly

01:51:36,440 --> 01:51:41,300
sure I would commit it but you found a

01:51:38,480 --> 01:51:46,870
real back of an author name that was not

01:51:41,300 --> 01:51:46,870
marked up so it can just pick them

01:52:13,330 --> 01:52:22,120
yeah sshd actually I reported that and

01:52:17,900 --> 01:52:25,160
agreed with djm to not fix it right now

01:52:22,120 --> 01:52:28,190
because it creates and portability

01:52:25,160 --> 01:52:30,380
problems with the stuff they are using

01:52:28,190 --> 01:52:33,100
for they have custom stuff for

01:52:30,380 --> 01:52:36,320
portability that doesn't handle it yet

01:52:33,100 --> 01:53:11,840
that is that isn't actually a known bug

01:52:36,320 --> 01:53:14,330
Yuri found but right just running the

01:53:11,840 --> 01:53:18,610
mondo command on it so man-dog file name

01:53:14,330 --> 01:53:18,610
and perhaps less after it

01:53:22,770 --> 01:53:42,120
yeah but that is actually correct that

01:53:39,870 --> 01:53:44,520
happens automatically the the MDOT

01:53:42,120 --> 01:53:48,300
language will format the name of the

01:53:44,520 --> 01:53:50,550
page in the title line in bold in man

01:53:48,300 --> 01:53:52,650
you have to do that manually so if your

01:53:50,550 --> 01:53:55,710
right a man manual you have to know that

01:53:52,650 --> 01:53:58,710
usually the the name and the title line

01:53:55,710 --> 01:54:01,290
is formatted bowed you have so you have

01:53:58,710 --> 01:54:03,390
to put put font instructions for a boat

01:54:01,290 --> 01:54:07,560
fondant obviously the manual order

01:54:03,390 --> 01:54:19,800
didn't do that that's that's one of the

01:54:07,560 --> 01:54:23,340
reasons why writing MDOC is easier you

01:54:19,800 --> 01:54:29,630
know I answered the wrong question if

01:54:23,340 --> 01:54:32,930
you the way this this boldness is

01:54:29,630 --> 01:54:36,090
achieved is with backspace escapes so

01:54:32,930 --> 01:54:39,150
what what man-dog actually puts into the

01:54:36,090 --> 01:54:42,390
file is an a backspace at another a then

01:54:39,150 --> 01:54:46,860
it's W backspace another W if you just

01:54:42,390 --> 01:54:48,630
put that to the console then you just

01:54:46,860 --> 01:54:51,540
see the last letter printed to easy

01:54:48,630 --> 01:54:56,210
position but let's interpret the back of

01:54:51,540 --> 01:54:56,210
space sequences and shows it in both

01:54:56,750 --> 01:55:04,020
space exactly yes yes you can you can

01:55:00,510 --> 01:55:06,860
use for example hex dump to to actually

01:55:04,020 --> 01:55:06,860
see how it looks like

01:55:17,870 --> 01:55:23,100
okay you are you're starting to to

01:55:20,940 --> 01:55:26,340
translate and to get up to speed so if

01:55:23,100 --> 01:55:29,100
there are any questions speak to others

01:55:26,340 --> 01:55:31,560
or earth crystals or ask me yeah

01:55:29,100 --> 01:55:35,239
but as long as as you as you are getting

01:55:31,560 --> 01:55:35,239
on I'm not

01:55:47,059 --> 01:55:50,590
okay let me see

01:56:08,290 --> 01:56:11,430

YouTube URL: https://www.youtube.com/watch?v=PmkmlYVs_xU


