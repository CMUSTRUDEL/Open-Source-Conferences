Title: Snapshots, replication and boot environments - Kris Moore
Publication date: 2019-10-14
Playlist: EuroBSDcon 2014, Bulgaria
Description: 
	Abstract:

In early 2013 the PC-BSD project decided to re-focus and fully embrace ZFS as its default and only file-system for both desktop and server deployments. This decision immediately spawned development of a new class of tools and utilities which assist users in unlocking the vast potential that ZFS brings to their system. In this talk we will take a look at ZFS Boot-Environments and the new Life-Preserver utility which assists users in ZFS management, including snapshots, replication, mirroring, bare-metal restores and more.

Speaker biography:

Kris Moore is the founder and lead developer of the PC-BSD project. He is also the co-host of the popular BSDNow video podcast. When not at home programming, he travels around the world giving talks and tutorials on various BSD related topics at Linux and BSD conferences alike. He currently lives in Tennessee (USA) with his wife and five children and enjoys playing bass guitar / video gaming in his (very limited) spare time.
Captions: 
	00:00:08,310 --> 00:00:13,380
and I would like to introduce you to

00:00:10,380 --> 00:00:17,220
Chris Moore working at AG system and

00:00:13,380 --> 00:00:19,170
mostly on pc-bsd side of things and is

00:00:17,220 --> 00:00:21,119
going to talk about DFS and all the

00:00:19,170 --> 00:00:32,070
bright new tools they have brought to

00:00:21,119 --> 00:00:33,690
pc-bsd and and that well thank you guys

00:00:32,070 --> 00:00:35,820
appreciate you being here this is kind

00:00:33,690 --> 00:00:38,160
of an IX doubleheader I guess

00:00:35,820 --> 00:00:40,470
back-to-back that's pretty cool but

00:00:38,160 --> 00:00:41,940
anyway appreciate getting to talk to you

00:00:40,470 --> 00:00:43,380
guys out here in Bulgaria this has

00:00:41,940 --> 00:00:45,240
already been a fun trip a little

00:00:43,380 --> 00:00:46,800
sleep-deprived but we'll see if we can

00:00:45,240 --> 00:00:48,690
get through this briskly since I have a

00:00:46,800 --> 00:00:50,010
fair number of slides and I do want to

00:00:48,690 --> 00:00:52,290
leave some times for questions and

00:00:50,010 --> 00:00:54,540
answers at the end I'm not really

00:00:52,290 --> 00:00:56,430
particular about how I do talk so if you

00:00:54,540 --> 00:00:57,990
see a have a question or something feel

00:00:56,430 --> 00:00:59,580
free to try and get my attention I made

00:00:57,990 --> 00:01:02,610
try and answer it on the spot if I can

00:00:59,580 --> 00:01:04,229
so I'm okay with that all right so today

00:01:02,610 --> 00:01:06,540
we're going to be talking about a lot of

00:01:04,229 --> 00:01:09,000
ZFS snapshots replications boot

00:01:06,540 --> 00:01:11,150
environments how ZFS utilities are

00:01:09,000 --> 00:01:13,109
changing what we do in pc-bsd and

00:01:11,150 --> 00:01:15,780
freebsd if you choose to use those

00:01:13,109 --> 00:01:17,520
utilities as Olivia said my name is

00:01:15,780 --> 00:01:20,159
Chris Moore I'm the founder of the

00:01:17,520 --> 00:01:22,259
pc-bsd project and so my day job is

00:01:20,159 --> 00:01:25,590
working on this kind of technology in

00:01:22,259 --> 00:01:27,270
workspace workstation related stuff so

00:01:25,590 --> 00:01:29,039
first of all question I got a lot when

00:01:27,270 --> 00:01:30,929
we made this shift was why are you guys

00:01:29,039 --> 00:01:34,140
moving to ZFS right

00:01:30,929 --> 00:01:35,520
why wouldn't we so you know we began to

00:01:34,140 --> 00:01:38,069
look at some of the reasons why we'd

00:01:35,520 --> 00:01:40,229
want to first of all the benefits have

00:01:38,069 --> 00:01:42,840
really just greatly outweighed the

00:01:40,229 --> 00:01:45,030
drawbacks for workstation usage now ufs

00:01:42,840 --> 00:01:47,939
was great it ran its course and did what

00:01:45,030 --> 00:01:49,259
it needed to do but when ZFS arrived it

00:01:47,939 --> 00:01:51,209
just brought with it a whole new class

00:01:49,259 --> 00:01:53,429
of things we could do on a desktop or

00:01:51,209 --> 00:01:56,609
even my laptop which weren't possible

00:01:53,429 --> 00:01:59,579
before and also last year when we moved

00:01:56,609 --> 00:02:02,069
in pc-bsd 9 - we went 64-bit only we

00:01:59,579 --> 00:02:04,439
just dropped the 32-bit release which

00:02:02,069 --> 00:02:06,990
you know annoyed the 20 users out there

00:02:04,439 --> 00:02:09,149
still we're running on 32-bit boxes but

00:02:06,990 --> 00:02:11,370
you know it just made sense for us like

00:02:09,149 --> 00:02:13,200
now we can also move to ZFS only and

00:02:11,370 --> 00:02:15,510
really focus our development effort on

00:02:13,200 --> 00:02:17,250
one file system and not have to be

00:02:15,510 --> 00:02:18,900
thinking always like oh how can I write

00:02:17,250 --> 00:02:20,400
this on ufs now and provide the same

00:02:18,900 --> 00:02:21,730
function how you're oh I need to disable

00:02:20,400 --> 00:02:24,120
90% of this

00:02:21,730 --> 00:02:26,709
utility because it won't run on ufs so

00:02:24,120 --> 00:02:28,360
and of course this allowed us to begin

00:02:26,709 --> 00:02:30,849
developing this new class the utilities

00:02:28,360 --> 00:02:32,950
and methods that are all possible due to

00:02:30,849 --> 00:02:34,420
the great ZFS file systems which thank

00:02:32,950 --> 00:02:36,430
you Pavel we did an interview with you

00:02:34,420 --> 00:02:38,319
yesterday for the BST now show talking

00:02:36,430 --> 00:02:40,660
about his porting experience bringing

00:02:38,319 --> 00:02:42,599
that over so watch for that in a future

00:02:40,660 --> 00:02:45,220
episode it's always fascinating to hear

00:02:42,599 --> 00:02:46,810
so food environments is what we're going

00:02:45,220 --> 00:02:48,970
to start with talking about today I'm

00:02:46,810 --> 00:02:49,870
first of all show of hands who's how

00:02:48,970 --> 00:02:53,170
many people have heard of boot

00:02:49,870 --> 00:02:58,540
environments know what they are ok so

00:02:53,170 --> 00:03:00,610
about 60% I'd say good good deal so kind

00:02:58,540 --> 00:03:02,950
of a brief overview of them they first

00:03:00,610 --> 00:03:04,660
originated in Solaris 10 and they

00:03:02,950 --> 00:03:07,090
essentially are just a method of using

00:03:04,660 --> 00:03:09,040
ZFS snapshots and clones to create an

00:03:07,090 --> 00:03:12,250
instant bootable backup of your

00:03:09,040 --> 00:03:14,410
operating system so what would you use

00:03:12,250 --> 00:03:16,090
this for well obviously it's most

00:03:14,410 --> 00:03:18,250
commonly going to be used before you do

00:03:16,090 --> 00:03:20,230
something quote-unquote dangerous you

00:03:18,250 --> 00:03:21,940
know maybe updating kernels applying

00:03:20,230 --> 00:03:24,610
some risky patch that you want to test

00:03:21,940 --> 00:03:26,680
out you're updating your world or in a

00:03:24,610 --> 00:03:29,019
desktop case we actually include your

00:03:26,680 --> 00:03:30,790
packages in with that too so on a

00:03:29,019 --> 00:03:32,650
desktop it can be just as annoying to

00:03:30,790 --> 00:03:34,810
upgrade and find out that X doesn't work

00:03:32,650 --> 00:03:36,760
anymore so we try and include that in a

00:03:34,810 --> 00:03:37,959
boot environment as well so you always

00:03:36,760 --> 00:03:40,450
have something to roll back to you

00:03:37,959 --> 00:03:42,910
should it fail so how do we do this in

00:03:40,450 --> 00:03:44,950
pc-bsd well at the moment we're doing

00:03:42,910 --> 00:03:47,019
this with grub which is used to perform

00:03:44,950 --> 00:03:50,410
the direct boot up of the freebsd kernel

00:03:47,019 --> 00:03:52,870
using the k freebsd feature we create a

00:03:50,410 --> 00:03:55,720
special ZFS data set layout which

00:03:52,870 --> 00:03:57,040
enables this type of usage and then if

00:03:55,720 --> 00:04:00,370
you've noticed in the port's tree your

00:03:57,040 --> 00:04:02,019
packages there's a be a DM utility which

00:04:00,370 --> 00:04:03,280
will allow you to manage your boot

00:04:02,019 --> 00:04:05,380
environments from the command line and

00:04:03,280 --> 00:04:07,120
then we kind of splat it a GUI on top of

00:04:05,380 --> 00:04:12,400
that to make it easy for workstation

00:04:07,120 --> 00:04:13,959
users so of course being a bsd

00:04:12,400 --> 00:04:15,400
conference the first thing people ask is

00:04:13,959 --> 00:04:17,739
why in the world would you go to grow up

00:04:15,400 --> 00:04:20,560
what are you doing well we didn't really

00:04:17,739 --> 00:04:22,810
have a choice so first of all it's able

00:04:20,560 --> 00:04:25,150
to very easily tie into the vADM command

00:04:22,810 --> 00:04:27,039
and provide menus and submenus for boot

00:04:25,150 --> 00:04:28,360
environments so I'll show you some

00:04:27,039 --> 00:04:30,159
pictures in a moment but in a nice

00:04:28,360 --> 00:04:31,720
graphical way you can browse to old

00:04:30,159 --> 00:04:33,820
snapshots and say I want to boot that

00:04:31,720 --> 00:04:34,630
boot that one in safe mode or boost that

00:04:33,820 --> 00:04:36,790
one with some

00:04:34,630 --> 00:04:38,800
and set and turned off and it just makes

00:04:36,790 --> 00:04:40,870
that real easy to configure and it's

00:04:38,800 --> 00:04:42,340
also what Solaris uses which if they

00:04:40,870 --> 00:04:45,220
went that route as well I assume they

00:04:42,340 --> 00:04:47,410
had good reasons and also it's 2014 and

00:04:45,220 --> 00:04:49,420
it was nice for a desktop to have an

00:04:47,410 --> 00:04:51,700
actual graphical bootloader that didn't

00:04:49,420 --> 00:04:52,150
look like it was 1994 rockin all over

00:04:51,700 --> 00:04:55,390
again

00:04:52,150 --> 00:04:57,250
so another you know side benefit we got

00:04:55,390 --> 00:04:59,050
was a much faster loading of the kernel

00:04:57,250 --> 00:05:00,670
and modules I don't know what disk mode

00:04:59,050 --> 00:05:02,710
it accesses them in but it just loads

00:05:00,670 --> 00:05:05,740
them a heck of a lot faster so that was

00:05:02,710 --> 00:05:07,750
a nice side benefit and recently this

00:05:05,740 --> 00:05:10,390
last year we were able to add full disk

00:05:07,750 --> 00:05:12,250
encryption using jelly and a single

00:05:10,390 --> 00:05:14,170
zpool which grub allowed us to do - I

00:05:12,250 --> 00:05:15,670
mean who knew and I was really shocked

00:05:14,170 --> 00:05:18,100
when I found out I think someone emailed

00:05:15,670 --> 00:05:19,690
in did you know grub can do jelly know

00:05:18,100 --> 00:05:21,160
what when did this happen is just

00:05:19,690 --> 00:05:23,410
something buried in the code there and

00:05:21,160 --> 00:05:25,240
we went took a look and sure enough it

00:05:23,410 --> 00:05:27,130
had jelly support so now we could do

00:05:25,240 --> 00:05:29,590
boot environments on a fully encrypted

00:05:27,130 --> 00:05:32,020
disk with no unencrypted kernel or boot

00:05:29,590 --> 00:05:33,490
or separate zpool or any of that you

00:05:32,020 --> 00:05:36,700
know nonsense that you'd normally have

00:05:33,490 --> 00:05:39,160
to do so you know another question we

00:05:36,700 --> 00:05:40,840
get is can I still use the BSD loader so

00:05:39,160 --> 00:05:42,700
yes if you're gonna go grab a pc-bsd

00:05:40,840 --> 00:05:45,400
install disk we give you the option to

00:05:42,700 --> 00:05:46,540
use the older BSD loader however you're

00:05:45,400 --> 00:05:48,490
going to miss out on the automatic

00:05:46,540 --> 00:05:51,030
integration with boot environments just

00:05:48,490 --> 00:05:53,890
because it doesn't do that at this time

00:05:51,030 --> 00:05:55,840
so and then of course the follow up

00:05:53,890 --> 00:05:57,310
would we ever switch back so that was

00:05:55,840 --> 00:05:58,810
part of why I come to these things and

00:05:57,310 --> 00:06:01,390
go to the dev summit and find out what's

00:05:58,810 --> 00:06:02,980
going on and as the BSD loader grows

00:06:01,390 --> 00:06:04,480
some of these features then yeah I'll be

00:06:02,980 --> 00:06:06,760
the first one to say yep we're ready to

00:06:04,480 --> 00:06:10,630
jump ship and go back over to the BSD

00:06:06,760 --> 00:06:13,090
l'heure so how do we do this magic well

00:06:10,630 --> 00:06:15,220
we just start with kind of a special ZFS

00:06:13,090 --> 00:06:17,590
layout so when we do these system

00:06:15,220 --> 00:06:19,060
installation I love the term tank and

00:06:17,590 --> 00:06:20,710
that's what it was in the original dock

00:06:19,060 --> 00:06:23,080
so I'm always going to call it that in

00:06:20,710 --> 00:06:25,600
our installer but we create our Z pool

00:06:23,080 --> 00:06:28,360
as tank whatever and then we will create

00:06:25,600 --> 00:06:30,250
a special route all uppercase data set

00:06:28,360 --> 00:06:32,520
and then within there you'll have your

00:06:30,250 --> 00:06:35,620
food environments will be listed and

00:06:32,520 --> 00:06:37,870
this first data set called default is

00:06:35,620 --> 00:06:39,370
what's going to be an apt and cloned to

00:06:37,870 --> 00:06:41,050
create new boot environment so that's

00:06:39,370 --> 00:06:43,030
going to be your starting place default

00:06:41,050 --> 00:06:44,950
as your original not to say you can't

00:06:43,030 --> 00:06:46,039
remove it later if at some point you

00:06:44,950 --> 00:06:48,259
corrupt that one or

00:06:46,039 --> 00:06:49,460
you know destroy it or you just have

00:06:48,259 --> 00:06:51,050
moved to a new snapshot for whatever

00:06:49,460 --> 00:06:52,909
reason I know I don't know if Alan

00:06:51,050 --> 00:06:55,159
Jude's in here but his lap talk like he

00:06:52,909 --> 00:06:56,749
has 11 currents on one of his boot

00:06:55,159 --> 00:06:58,879
environments and ten on another so he

00:06:56,749 --> 00:07:02,719
can toggle back and forth and it's just

00:06:58,879 --> 00:07:04,520
a really handy way to do that one thing

00:07:02,719 --> 00:07:06,589
I will note though any additional

00:07:04,520 --> 00:07:08,360
datasets you create in ZFS are not

00:07:06,589 --> 00:07:10,129
included in the boone environment which

00:07:08,360 --> 00:07:12,710
is important because I don't want my

00:07:10,129 --> 00:07:14,270
home directory for example to be snapped

00:07:12,710 --> 00:07:16,520
and included in boot environment if I

00:07:14,270 --> 00:07:17,599
want to go to an 11 kernel or something

00:07:16,520 --> 00:07:19,550
else and boot into different

00:07:17,599 --> 00:07:21,589
environments I expect my home data to be

00:07:19,550 --> 00:07:23,870
fresh and current and what I left it

00:07:21,589 --> 00:07:26,360
with so the way we do that is we create

00:07:23,870 --> 00:07:28,129
slash user and slash varsa datasets with

00:07:26,360 --> 00:07:30,379
the can mount off flag so that we can

00:07:28,129 --> 00:07:32,180
create sub child datasets of those while

00:07:30,379 --> 00:07:34,819
still preserving things like user bin

00:07:32,180 --> 00:07:38,180
user s pin user live in other parts of

00:07:34,819 --> 00:07:42,050
the system on the initial default data

00:07:38,180 --> 00:07:43,639
set so on a typical pc-bsd installation

00:07:42,050 --> 00:07:45,169
this is what it's going to mostly look

00:07:43,639 --> 00:07:46,909
like of course you can customize this

00:07:45,169 --> 00:07:49,339
during the install so your mileage may

00:07:46,909 --> 00:07:51,469
vary here but in this case what I've

00:07:49,339 --> 00:07:53,629
done is I have all my external data set

00:07:51,469 --> 00:07:55,309
so I keep my home directories out of the

00:07:53,629 --> 00:07:58,189
boot environments I keep my jails out of

00:07:55,309 --> 00:08:00,409
the boot environments ports source and

00:07:58,189 --> 00:08:01,729
then some various bar directories by

00:08:00,409 --> 00:08:04,039
default which again if you have

00:08:01,729 --> 00:08:05,839
particular needs you may customize that

00:08:04,039 --> 00:08:07,610
and say I want slash data to be its own

00:08:05,839 --> 00:08:10,849
thing and not include it with a boot

00:08:07,610 --> 00:08:12,559
environment as well so how do I manage

00:08:10,849 --> 00:08:13,969
these well it's pretty simple if you're

00:08:12,559 --> 00:08:15,860
on the command line and if that's your

00:08:13,969 --> 00:08:17,509
thing you just use the be admin utility

00:08:15,860 --> 00:08:19,969
and I'll show that in a minute how you

00:08:17,509 --> 00:08:21,589
do that but the B admin utility we've

00:08:19,969 --> 00:08:23,719
done some work with the port maintainer

00:08:21,589 --> 00:08:25,669
z-- and customized it so that when you

00:08:23,719 --> 00:08:27,349
create or remove boot environments that

00:08:25,669 --> 00:08:29,120
will automatically update the grub

00:08:27,349 --> 00:08:31,189
configuration and your menus will get

00:08:29,120 --> 00:08:34,099
populated with whatever you just did and

00:08:31,189 --> 00:08:36,139
added or removed environment also during

00:08:34,099 --> 00:08:38,389
package updates grub maybe Reese tamped

00:08:36,139 --> 00:08:40,819
as well so when I roll out a new version

00:08:38,389 --> 00:08:43,639
of grub to the pc-bsd users we made

00:08:40,819 --> 00:08:45,350
Reese tamp that on the disk because you

00:08:43,639 --> 00:08:46,639
want it to be consistent with what's on

00:08:45,350 --> 00:08:50,569
the boot environment and what's on the

00:08:46,639 --> 00:08:52,130
actual boot loader so usage is pretty

00:08:50,569 --> 00:08:53,660
simple B and min list is going to show

00:08:52,130 --> 00:08:56,540
you what boot environment you have on a

00:08:53,660 --> 00:08:57,769
fresh box I have my default in this case

00:08:56,540 --> 00:08:59,100
I'm just going to create a new one we'll

00:08:57,769 --> 00:09:01,230
call it new B for

00:08:59,100 --> 00:09:02,790
of a better word and it's gonna go ahead

00:09:01,230 --> 00:09:04,740
and create a new Grubb config it's gonna

00:09:02,790 --> 00:09:06,390
apply theme because Grubb does graphics

00:09:04,740 --> 00:09:08,670
you can theme it any way you like and

00:09:06,390 --> 00:09:10,770
then when I list yeah I have a new beat

00:09:08,670 --> 00:09:12,330
created which you can see is only using

00:09:10,770 --> 00:09:14,070
six hundred and seventy two K it's

00:09:12,330 --> 00:09:16,170
pretty small it's a snapshot and clone

00:09:14,070 --> 00:09:18,390
so it's only going to grow as as the

00:09:16,170 --> 00:09:22,770
contents change on the disk but they're

00:09:18,390 --> 00:09:24,600
real cheap and super fast to make so if

00:09:22,770 --> 00:09:25,860
you're on the desktop or laptop or a

00:09:24,600 --> 00:09:27,450
workstation of course we have a

00:09:25,860 --> 00:09:29,340
graphical utility for the exact same

00:09:27,450 --> 00:09:30,990
thing so you can always fire up the

00:09:29,340 --> 00:09:32,850
utility in our control panel and just

00:09:30,990 --> 00:09:36,690
you know add food environments as you

00:09:32,850 --> 00:09:38,610
see fit and then of course we have some

00:09:36,690 --> 00:09:39,900
basic grub configuration within the GUI

00:09:38,610 --> 00:09:41,400
as well so if you don't feel like

00:09:39,900 --> 00:09:43,590
looking at man pages and figuring out

00:09:41,400 --> 00:09:45,180
how grub syntax works you can come in

00:09:43,590 --> 00:09:46,830
here and say ooh but I also have windows

00:09:45,180 --> 00:09:49,110
on another disk I'd like to boot that or

00:09:46,830 --> 00:09:50,730
a linux partition you could add entries

00:09:49,110 --> 00:09:53,820
for that here as well and it'll handle

00:09:50,730 --> 00:09:55,710
all the config for you so how do you

00:09:53,820 --> 00:09:58,140
boot it so when you first install pc-bsd

00:09:55,710 --> 00:10:00,420
or true OS which is our server version

00:09:58,140 --> 00:10:01,860
by default we're not going to show the

00:10:00,420 --> 00:10:03,360
grub menu if you only have one in boot

00:10:01,860 --> 00:10:04,980
one boot environment there's really

00:10:03,360 --> 00:10:07,140
nothing to see it's up some safe mode

00:10:04,980 --> 00:10:08,850
options so it'll display a message

00:10:07,140 --> 00:10:10,440
saying hold down left shift if you want

00:10:08,850 --> 00:10:12,270
to see the menu otherwise I think it has

00:10:10,440 --> 00:10:14,790
a two second countdown it'll just go

00:10:12,270 --> 00:10:16,410
right into the boot but once bees are

00:10:14,790 --> 00:10:17,940
created though and you start having you

00:10:16,410 --> 00:10:19,770
know five or six to choose from then the

00:10:17,940 --> 00:10:21,810
menu will begin to appear by default and

00:10:19,770 --> 00:10:23,940
give you I think a five second countdown

00:10:21,810 --> 00:10:25,170
is the default to pick an alternate one

00:10:23,940 --> 00:10:25,650
if you need to boot into something

00:10:25,170 --> 00:10:28,110
different

00:10:25,650 --> 00:10:30,420
of course by default it's gonna you know

00:10:28,110 --> 00:10:31,680
boot the first entry which is probably

00:10:30,420 --> 00:10:34,080
the one you always are going to be on

00:10:31,680 --> 00:10:36,090
unless you have to rollback because you

00:10:34,080 --> 00:10:39,030
screwed up default somehow or a package

00:10:36,090 --> 00:10:40,590
upgrade one errant so that's what it

00:10:39,030 --> 00:10:41,940
looks like you boot it up you get nice

00:10:40,590 --> 00:10:43,500
graphics of course we did some pretty

00:10:41,940 --> 00:10:45,660
artwork and themes and it just looks

00:10:43,500 --> 00:10:47,250
nice there's no reason why you couldn't

00:10:45,660 --> 00:10:48,810
tweak that to have you know the various

00:10:47,250 --> 00:10:52,290
daemon backgrounds that are floating

00:10:48,810 --> 00:10:53,880
around the net as well so I'm grub

00:10:52,290 --> 00:10:55,350
customization though since I noticed the

00:10:53,880 --> 00:10:57,000
freebsd crowd I'm not sure how from

00:10:55,350 --> 00:10:58,950
there all you are with grub but we then

00:10:57,000 --> 00:11:01,500
get questions well how can I do this and

00:10:58,950 --> 00:11:03,660
grub to boot other options so most grub

00:11:01,500 --> 00:11:06,030
customization can be done via knobs in

00:11:03,660 --> 00:11:08,160
the file there under default grub and

00:11:06,030 --> 00:11:09,570
use a local Etsy and then any time you

00:11:08,160 --> 00:11:10,750
make a change to grub you just need to

00:11:09,570 --> 00:11:12,399
recreate the config file

00:11:10,750 --> 00:11:14,709
and that command is pretty simple just

00:11:12,399 --> 00:11:17,139
grab make config - oh and then you give

00:11:14,709 --> 00:11:19,420
it the path to your grub on dis

00:11:17,139 --> 00:11:20,949
configuration and so you can use that to

00:11:19,420 --> 00:11:22,779
prototype - if you just want to test

00:11:20,949 --> 00:11:24,310
without you know changing anything on

00:11:22,779 --> 00:11:26,139
the system just pointed at a temp file

00:11:24,310 --> 00:11:28,000
and then you can go inspect it by hand

00:11:26,139 --> 00:11:30,730
to see if it did what you expected it to

00:11:28,000 --> 00:11:32,680
do and if you take a look at boot grub

00:11:30,730 --> 00:11:34,870
grub dot CFG it's going to contain the

00:11:32,680 --> 00:11:37,209
boot up script which is mostly a shell

00:11:34,870 --> 00:11:40,120
style syntax so it's pretty easy to hack

00:11:37,209 --> 00:11:41,769
on and add new menu entries I personally

00:11:40,120 --> 00:11:43,750
really like it because it is so snotball

00:11:41,769 --> 00:11:45,910
it's not dealing the fourth which hey

00:11:43,750 --> 00:11:47,769
what do you know like that I appreciate

00:11:45,910 --> 00:11:49,269
that so some of the common options

00:11:47,769 --> 00:11:51,339
people are going to customize whether

00:11:49,269 --> 00:11:53,019
you want to have a hidden timeout that's

00:11:51,339 --> 00:11:55,209
that option I was telling you about

00:11:53,019 --> 00:11:57,970
where it doesn't show the menu unless

00:11:55,209 --> 00:12:00,100
you hold left shift and then the timeout

00:11:57,970 --> 00:12:01,930
for that which default would be which

00:12:00,100 --> 00:12:04,689
boot environment or which menu option to

00:12:01,930 --> 00:12:05,829
boot so say you are triple booting or

00:12:04,689 --> 00:12:07,569
you have you know I want to boot the

00:12:05,829 --> 00:12:09,250
fifth entry in the list that's where you

00:12:07,569 --> 00:12:12,220
would set it here and then recreate your

00:12:09,250 --> 00:12:13,930
fig default timeout is before auto boots

00:12:12,220 --> 00:12:15,519
and then of course themes and you can

00:12:13,930 --> 00:12:17,529
even do fonts so if you don't like the

00:12:15,519 --> 00:12:19,720
font we chose more power to you eye

00:12:17,529 --> 00:12:21,459
socket picking fonts so I'm always told

00:12:19,720 --> 00:12:31,600
I'd rather have this well go for it I

00:12:21,459 --> 00:12:33,279
don't mind yes yes yes next boot on

00:12:31,600 --> 00:12:35,769
FreeBSD so the way you would do that is

00:12:33,279 --> 00:12:37,509
it would yes there is a way to do it in

00:12:35,769 --> 00:12:38,860
that default file I don't have the

00:12:37,509 --> 00:12:40,629
option of my slides though so I can't

00:12:38,860 --> 00:12:42,420
remember the syntax but yeah it's in the

00:12:40,629 --> 00:12:45,639
it's in the dock on there

00:12:42,420 --> 00:12:47,110
okay so adding menu entries so the grub

00:12:45,639 --> 00:12:48,670
make config command is actually a shell

00:12:47,110 --> 00:12:51,459
script if you take a look at it it's not

00:12:48,670 --> 00:12:53,439
very complex and what it does is it and

00:12:51,459 --> 00:12:55,600
execute a series of shell scripts which

00:12:53,439 --> 00:12:58,600
are located on a freebsd system and user

00:12:55,600 --> 00:12:59,769
local Etsy grub deep there's gonna be

00:12:58,600 --> 00:13:02,439
some default files in this directory

00:12:59,769 --> 00:13:04,170
which are ordered by numbers and you

00:13:02,439 --> 00:13:07,120
know lower numbers get executed first

00:13:04,170 --> 00:13:08,649
greater later and what will happen is

00:13:07,120 --> 00:13:10,209
first of all these files may be

00:13:08,649 --> 00:13:12,519
overwritten by package upgrades so don't

00:13:10,209 --> 00:13:14,410
tweak those you may lose them as soon as

00:13:12,519 --> 00:13:16,180
you do a package upgrade but you can add

00:13:14,410 --> 00:13:17,980
new files into this directory so say you

00:13:16,180 --> 00:13:20,350
want to add custom menu entries again

00:13:17,980 --> 00:13:22,179
for Linux Windows any other operating

00:13:20,350 --> 00:13:24,110
system or type of options you want to

00:13:22,179 --> 00:13:25,550
boot with you can just supply

00:13:24,110 --> 00:13:27,769
a new shell file in there that echoes

00:13:25,550 --> 00:13:29,649
out five lines of syntax and that gets

00:13:27,769 --> 00:13:31,700
included in your config automatically

00:13:29,649 --> 00:13:34,880
additionally you can put a file called

00:13:31,700 --> 00:13:36,230
boot grub custom not CFG and that'll be

00:13:34,880 --> 00:13:37,940
sourced and thrown at the end of the

00:13:36,230 --> 00:13:39,500
config as well automatically so you got

00:13:37,940 --> 00:13:43,490
a couple locations where you can tweak

00:13:39,500 --> 00:13:45,350
your your boot setup so what does that

00:13:43,490 --> 00:13:46,970
look like for the uninitiated this is

00:13:45,350 --> 00:13:50,180
how we do a boot environment set up on

00:13:46,970 --> 00:13:51,860
pc-bsd so grub supports ZFS obviously

00:13:50,180 --> 00:13:54,440
otherwise we couldn't do this so we just

00:13:51,860 --> 00:13:57,440
load a couple grub modules ZFS in this

00:13:54,440 --> 00:13:59,990
case we're searching for the Z pool

00:13:57,440 --> 00:14:02,180
which tank one on my laptop and then

00:13:59,990 --> 00:14:04,070
we're using the kV BSD command and grub

00:14:02,180 --> 00:14:06,110
to boot the kernel and you'll notice I

00:14:04,070 --> 00:14:08,180
have slash route slash default in this

00:14:06,110 --> 00:14:10,459
case that's my default boot environment

00:14:08,180 --> 00:14:12,920
and dataset if you look at the menu all

00:14:10,459 --> 00:14:14,660
have maybe I think eight or nine blocks

00:14:12,920 --> 00:14:17,450
like this all pointing at different

00:14:14,660 --> 00:14:19,130
route slash you know backup of as of

00:14:17,450 --> 00:14:22,370
this date or whatever and that would be

00:14:19,130 --> 00:14:25,040
that data set it'll then load modules so

00:14:22,370 --> 00:14:27,529
we load the zpool cache and then we can

00:14:25,040 --> 00:14:28,910
set you know VFS route mount from that's

00:14:27,529 --> 00:14:30,829
kind of the magic they're telling it

00:14:28,910 --> 00:14:32,630
which boot environment to mount at the

00:14:30,829 --> 00:14:35,000
mount root problems and then of course

00:14:32,630 --> 00:14:38,000
we can load the freebsd modules via the

00:14:35,000 --> 00:14:40,360
module elf command in this case at the

00:14:38,000 --> 00:14:44,720
laptops I'm loading Nvidia ZFS

00:14:40,360 --> 00:14:46,779
VirtualBox etc one caveat I will mention

00:14:44,720 --> 00:14:50,089
here is grub doesn't do the automatic

00:14:46,779 --> 00:14:51,980
detection of dependencies for modules so

00:14:50,089 --> 00:14:53,329
if you load something that needs to load

00:14:51,980 --> 00:14:54,529
three other modules you need to list

00:14:53,329 --> 00:14:56,240
those as well it's not going to

00:14:54,529 --> 00:14:58,100
automatically grab those for you

00:14:56,240 --> 00:14:59,360
otherwise when you boot up the kernel

00:14:58,100 --> 00:15:01,730
sorry I tried to load this but it's

00:14:59,360 --> 00:15:03,290
messing something and it'll bail and you

00:15:01,730 --> 00:15:06,050
know you have to load it by hand later

00:15:03,290 --> 00:15:07,490
so that's the only real deal you have to

00:15:06,050 --> 00:15:09,440
pay attention to and then of course we

00:15:07,490 --> 00:15:11,390
can set kernel environment variables so

00:15:09,440 --> 00:15:12,800
take your pick whatever you need to set

00:15:11,390 --> 00:15:13,790
you can set it right in here your grub

00:15:12,800 --> 00:15:15,350
and away you go

00:15:13,790 --> 00:15:17,959
but that's pretty much a fully

00:15:15,350 --> 00:15:19,010
functional menu entry it's I tried to

00:15:17,959 --> 00:15:21,079
show a little bit more real-world

00:15:19,010 --> 00:15:25,670
example of what it would look like on my

00:15:21,079 --> 00:15:27,079
laptop for example okay so that's kind

00:15:25,670 --> 00:15:28,190
of what boot environments does but now

00:15:27,079 --> 00:15:29,449
we're going to take a look at the second

00:15:28,190 --> 00:15:32,000
part of the talk which is called life

00:15:29,449 --> 00:15:34,399
preserver which also integrates with all

00:15:32,000 --> 00:15:37,580
this and is something in pc-bsd in

00:15:34,399 --> 00:15:39,080
freebsd so what is the utility well

00:15:37,580 --> 00:15:41,320
first of all it's - it's a command-line

00:15:39,080 --> 00:15:44,510
Anna graphical front-end - basically

00:15:41,320 --> 00:15:46,520
scheduling ZFS snapshots and pruning -

00:15:44,510 --> 00:15:49,430
scheduled ZFS send and receive

00:15:46,520 --> 00:15:51,200
replication and zpool monitoring and

00:15:49,430 --> 00:15:53,720
better yet the feature I use it the most

00:15:51,200 --> 00:15:55,330
for is bare metal restore using the

00:15:53,720 --> 00:15:57,500
install media for pc-bsd

00:15:55,330 --> 00:16:00,050
we add into that here in just a moment

00:15:57,500 --> 00:16:01,880
so how do I get these utilities first of

00:16:00,050 --> 00:16:04,130
all it's included out of the box on any

00:16:01,880 --> 00:16:06,290
PC bsd install 10 point oh and later or

00:16:04,130 --> 00:16:08,990
sure OS which is the server version on

00:16:06,290 --> 00:16:11,240
the pc-bsd media it's also in FreeBSD

00:16:08,990 --> 00:16:13,010
ports and packages under cysts utils

00:16:11,240 --> 00:16:14,900
pc-bsd utils which would be all the

00:16:13,010 --> 00:16:15,800
command line stuff so if you're not

00:16:14,900 --> 00:16:17,750
running x11

00:16:15,800 --> 00:16:19,580
go for that one and then if of course if

00:16:17,750 --> 00:16:22,430
you want our GUI utilities we have that

00:16:19,580 --> 00:16:24,140
imports as well people ask me how

00:16:22,430 --> 00:16:27,140
updated those are we try and update them

00:16:24,140 --> 00:16:30,170
quarterly pc-bsd is moved to a quarterly

00:16:27,140 --> 00:16:31,580
update system so we get all our newest

00:16:30,170 --> 00:16:33,230
stuff out about every three months and

00:16:31,580 --> 00:16:34,910
that's when I update the port as well I

00:16:33,230 --> 00:16:37,010
try not to do it in between because a

00:16:34,910 --> 00:16:38,630
lot of times we're doing work and it's

00:16:37,010 --> 00:16:39,710
not quite stable and I don't want to put

00:16:38,630 --> 00:16:41,900
that in the fourth street till I know

00:16:39,710 --> 00:16:45,560
it's good enough for what we would put

00:16:41,900 --> 00:16:47,600
out for our users okay so scheduling

00:16:45,560 --> 00:16:49,190
snapshots so to get started with a

00:16:47,600 --> 00:16:50,780
snapshot schedule you can pretty much

00:16:49,190 --> 00:16:51,320
just use the following command from the

00:16:50,780 --> 00:16:52,820
command line

00:16:51,320 --> 00:16:55,430
we'll say I'll preserver I want to set

00:16:52,820 --> 00:16:57,230
up a cron snapshot job of whatever your

00:16:55,430 --> 00:16:58,730
pool is or it could be a data set if you

00:16:57,230 --> 00:17:00,980
don't if you're not into backing up or

00:16:58,730 --> 00:17:03,170
snapping your entire pool and then I'm

00:17:00,980 --> 00:17:05,240
gonna start it what time daily I want to

00:17:03,170 --> 00:17:06,830
do it at 22 and then the number 10 will

00:17:05,240 --> 00:17:08,420
be the number I want to keep so

00:17:06,830 --> 00:17:11,510
basically keep 10 days worth of

00:17:08,420 --> 00:17:13,250
snapshots auto pruning the rest and you

00:17:11,510 --> 00:17:15,320
can replace that 10 with some different

00:17:13,250 --> 00:17:17,449
options we'll have coarse daily at

00:17:15,320 --> 00:17:20,240
whatever the hour is we can say hourly

00:17:17,449 --> 00:17:21,770
30 minutes 10 minutes 5 minutes or we

00:17:20,240 --> 00:17:24,560
have the auto feature which I'll

00:17:21,770 --> 00:17:26,510
describe here in a second but what does

00:17:24,560 --> 00:17:28,520
that command you just going to create a

00:17:26,510 --> 00:17:30,410
cron entry no magic it's nothing super

00:17:28,520 --> 00:17:32,000
fancy you can edit this by hand if you

00:17:30,410 --> 00:17:33,530
want but it's just a nice front-end to

00:17:32,000 --> 00:17:36,500
parse that all out and figure out what

00:17:33,530 --> 00:17:38,150
to put in your crontab when it runs that

00:17:36,500 --> 00:17:39,530
script though here's pretty much what it

00:17:38,150 --> 00:17:41,150
does it's going to first confirm that

00:17:39,530 --> 00:17:43,250
the pool and data sets there and

00:17:41,150 --> 00:17:45,620
accessible and obviously it's not going

00:17:43,250 --> 00:17:48,300
to bomb out it's going to then create a

00:17:45,620 --> 00:17:50,309
new snapshot recursively by default

00:17:48,300 --> 00:17:51,750
that'll then selectively Otto prune old

00:17:50,309 --> 00:17:53,790
snapshots if you've reached the

00:17:51,750 --> 00:17:55,590
threshold where it's time to do that it

00:17:53,790 --> 00:17:58,080
can then also send out notification

00:17:55,590 --> 00:18:00,650
emails if you've enabled that and start

00:17:58,080 --> 00:18:03,510
Auto replication if you've enabled that

00:18:00,650 --> 00:18:05,160
so as I said before though the auto mode

00:18:03,510 --> 00:18:07,559
this is something new we added about six

00:18:05,160 --> 00:18:09,330
months ago auto modes kind of special it

00:18:07,559 --> 00:18:11,309
does a weird schedule where it'll create

00:18:09,330 --> 00:18:13,710
snapshots every five minutes which are

00:18:11,309 --> 00:18:15,929
kept for an hour and hourly snapshot

00:18:13,710 --> 00:18:18,179
will be kept for 24 hours a day then

00:18:15,929 --> 00:18:19,860
that daily snapshot though I guess the

00:18:18,179 --> 00:18:21,360
oldest one at midnight or whatever will

00:18:19,860 --> 00:18:23,760
be kept for a month and then a monthly

00:18:21,360 --> 00:18:26,220
snapshot for a year so you can use that

00:18:23,760 --> 00:18:28,320
too you know it's a pretty convenient

00:18:26,220 --> 00:18:30,210
way on my laptop in particular not

00:18:28,320 --> 00:18:32,640
necessarily for boot environments but in

00:18:30,210 --> 00:18:34,920
the case of oh my wife deleted a

00:18:32,640 --> 00:18:37,260
document oh I deleted that three weeks

00:18:34,920 --> 00:18:38,940
ago oh crap like okay and then we go see

00:18:37,260 --> 00:18:40,410
if we have the old snapshot oh there it

00:18:38,940 --> 00:18:43,020
is and you know a couple months ago

00:18:40,410 --> 00:18:46,110
snapshot no problem so I'm pretty handy

00:18:43,020 --> 00:18:47,850
way to do that so of course we have a

00:18:46,110 --> 00:18:50,610
graphical utility for it as well this is

00:18:47,850 --> 00:18:51,900
all written and cute so pretty standard

00:18:50,610 --> 00:18:53,580
when you first boot it up you don't have

00:18:51,900 --> 00:18:55,290
any pools being managed so it's kind of

00:18:53,580 --> 00:18:57,360
grayed out then we're gonna go say I

00:18:55,290 --> 00:18:58,770
want to manage a pool now and by default

00:18:57,360 --> 00:19:00,300
the GUI is going to default doing pools

00:18:58,770 --> 00:19:03,000
because we like to do the whole system

00:19:00,300 --> 00:19:04,590
not just particular data sets again this

00:19:03,000 --> 00:19:06,420
is for desktop users we're trying to

00:19:04,590 --> 00:19:08,280
make it as simple as possible I'm going

00:19:06,420 --> 00:19:09,360
to manage tank in this case and it's

00:19:08,280 --> 00:19:10,920
going to just kind of walk there and ask

00:19:09,360 --> 00:19:13,650
you the same questions when do you want

00:19:10,920 --> 00:19:15,059
to schedule your snapshots and then how

00:19:13,650 --> 00:19:17,250
many of them do you want to keep and

00:19:15,059 --> 00:19:19,080
then it'll it'll also ask you in days or

00:19:17,250 --> 00:19:20,850
total snapshots and it'll figure out the

00:19:19,080 --> 00:19:23,520
math so determine what that number might

00:19:20,850 --> 00:19:24,929
be at the end and then the last thing

00:19:23,520 --> 00:19:27,390
it's going to ask you is do you want to

00:19:24,929 --> 00:19:29,460
replicate and replications pretty cool

00:19:27,390 --> 00:19:31,679
we can scan the network and by default

00:19:29,460 --> 00:19:34,710
it can replicate to any system over SSH

00:19:31,679 --> 00:19:37,110
which supports ZFS receive so scanning

00:19:34,710 --> 00:19:39,660
will look for SSH running on ports on

00:19:37,110 --> 00:19:41,370
your network and in this case like my

00:19:39,660 --> 00:19:43,230
home network it will detect FreeNAS so I

00:19:41,370 --> 00:19:45,900
can just scan so there's my freeing as

00:19:43,230 --> 00:19:48,690
mini replicate to that box host name

00:19:45,900 --> 00:19:50,429
username it figures that out SSH port

00:19:48,690 --> 00:19:52,200
and then of course the remote data set

00:19:50,429 --> 00:19:54,929
you're going to replicate to on the box

00:19:52,200 --> 00:19:56,940
you'll need to mention that frequency so

00:19:54,929 --> 00:19:58,500
you can do it when the snapshots created

00:19:56,940 --> 00:20:00,380
which is going to be best for doing like

00:19:58,500 --> 00:20:01,910
a daily scenario or

00:20:00,380 --> 00:20:03,440
if you're doing you know snapshots every

00:20:01,910 --> 00:20:04,730
five minutes you may not want to try and

00:20:03,440 --> 00:20:06,590
replicate it every five minutes because

00:20:04,730 --> 00:20:08,450
that could take longer than the snapshot

00:20:06,590 --> 00:20:10,010
and that could get a little Messier so

00:20:08,450 --> 00:20:12,230
you may just want to say do it daily at

00:20:10,010 --> 00:20:14,030
2:00 a.m. or sometime when nobody is on

00:20:12,230 --> 00:20:17,750
the computer or whenever the network's

00:20:14,030 --> 00:20:19,430
not congested so in addition to all this

00:20:17,750 --> 00:20:20,930
the life preserver has a daemon that

00:20:19,430 --> 00:20:23,450
runs which also keeps track of your

00:20:20,930 --> 00:20:26,150
zpool disk space and it can then monitor

00:20:23,450 --> 00:20:27,770
if we hit 75% I've been told there's

00:20:26,150 --> 00:20:30,380
once you get close to that number ZFS

00:20:27,770 --> 00:20:32,510
gets a tad bit cranky so we can then

00:20:30,380 --> 00:20:34,010
auto prune old snapshots and it'll send

00:20:32,510 --> 00:20:35,570
out a warning like hey we had to remove

00:20:34,010 --> 00:20:37,340
this snapshot you were starting to get

00:20:35,570 --> 00:20:39,200
low on disk space on your pool you may

00:20:37,340 --> 00:20:40,720
want to take a look at that and those

00:20:39,200 --> 00:20:43,490
are all things you can turn on or off

00:20:40,720 --> 00:20:45,200
email notification very simple to set

00:20:43,490 --> 00:20:47,000
you just help preserve or set command

00:20:45,200 --> 00:20:49,430
and that'll set a lot of options but

00:20:47,000 --> 00:20:51,050
we'll just pass it an email and it'll

00:20:49,430 --> 00:20:52,640
use the mail command by default so you

00:20:51,050 --> 00:20:55,400
need to make sure that's configured to

00:20:52,640 --> 00:20:57,200
get out on your machine and then

00:20:55,400 --> 00:20:59,060
additional commands you can say I want

00:20:57,200 --> 00:21:00,920
to set disk usage warning at a certain

00:20:59,060 --> 00:21:03,110
percent and so when my disk gets 90%

00:21:00,920 --> 00:21:05,900
please warn me because maybe I'm not

00:21:03,110 --> 00:21:07,490
monitoring it every day but that's saved

00:21:05,900 --> 00:21:10,700
my bacon a couple times on my desktop

00:21:07,490 --> 00:21:12,350
because I run on that 240 gig SSD and

00:21:10,700 --> 00:21:13,520
all it takes is a few VMs running on

00:21:12,350 --> 00:21:16,430
there next thing you know it's like

00:21:13,520 --> 00:21:19,970
maybe 85% and I'm starting to get get a

00:21:16,430 --> 00:21:21,950
little full here so additional commands

00:21:19,970 --> 00:21:23,240
you can set the email options you know

00:21:21,950 --> 00:21:25,070
how what's the frequency you want to get

00:21:23,240 --> 00:21:27,470
emails do you want to get an email for

00:21:25,070 --> 00:21:28,640
everything it does which I do by default

00:21:27,470 --> 00:21:31,370
because I just want to know it did a

00:21:28,640 --> 00:21:33,650
snapshot it replicated or you can say

00:21:31,370 --> 00:21:36,320
just warn me if something failed or if

00:21:33,650 --> 00:21:37,910
there's a or warnings or more of a not

00:21:36,320 --> 00:21:39,320
necessarily a failure but hey you know

00:21:37,910 --> 00:21:40,670
we noticed something here you may want

00:21:39,320 --> 00:21:42,350
to check into it but then errors are

00:21:40,670 --> 00:21:44,360
like we tried to replicate and hey your

00:21:42,350 --> 00:21:46,370
backup server is not online or you know

00:21:44,360 --> 00:21:48,710
we couldn't connect or ZFS and receive

00:21:46,370 --> 00:21:51,710
failed for some reason those will be

00:21:48,710 --> 00:21:53,030
warnings and again very helpful

00:21:51,710 --> 00:21:55,850
depending on how much information you

00:21:53,030 --> 00:21:58,490
want to get from the utility so a recent

00:21:55,850 --> 00:21:59,780
update about last week and I apologize I

00:21:58,490 --> 00:22:02,330
forget the guys name I don't know if

00:21:59,780 --> 00:22:04,400
he's even here but somebody sent in

00:22:02,330 --> 00:22:06,020
patches where we can schedule ZFS scrubs

00:22:04,400 --> 00:22:07,970
in the same manner as well and get all

00:22:06,020 --> 00:22:09,590
the warnings and emails saying hey we

00:22:07,970 --> 00:22:12,140
fired off a scrub this month or this

00:22:09,590 --> 00:22:15,890
week or whatever here's your results and

00:22:12,140 --> 00:22:18,620
that'll be included in pc-bsd 10.1 which

00:22:15,890 --> 00:22:20,420
will coincide with FreeBSD 10.1 later

00:22:18,620 --> 00:22:23,870
this fall and of course all update the

00:22:20,420 --> 00:22:25,520
port so what about replication this is

00:22:23,870 --> 00:22:25,970
where it gets into the fun stuff for me

00:22:25,520 --> 00:22:28,190
anyway

00:22:25,970 --> 00:22:29,600
so what snapshots are enabled that's

00:22:28,190 --> 00:22:31,970
great but what happens if your system

00:22:29,600 --> 00:22:33,620
gets wiped out or your disk crashes so

00:22:31,970 --> 00:22:33,950
replication is kind of the answer to

00:22:33,620 --> 00:22:36,080
that

00:22:33,950 --> 00:22:37,430
so replication of course you can set up

00:22:36,080 --> 00:22:39,920
to run automatically or at a specific

00:22:37,430 --> 00:22:42,110
interval and as I said it runs over SSH

00:22:39,920 --> 00:22:43,400
by default some of that we may add may

00:22:42,110 --> 00:22:45,740
add some new options for that in the

00:22:43,400 --> 00:22:47,900
future we're working on it but it uses

00:22:45,740 --> 00:22:49,850
ZFS send and receive and it will require

00:22:47,900 --> 00:22:51,590
that the target system have a supported

00:22:49,850 --> 00:22:53,990
via ZFS version it needs to be capable

00:22:51,590 --> 00:22:57,410
of receiving whatever ZFS version your

00:22:53,990 --> 00:22:59,930
clients on in my case again I are

00:22:57,410 --> 00:23:02,030
freeing as minis FreeBSD 9 to something

00:22:59,930 --> 00:23:04,910
but I back up my ten boxes to it just

00:23:02,030 --> 00:23:06,260
fine so yeah as long as it's got a no

00:23:04,910 --> 00:23:08,180
it's because FreeNAS pulls in a lot of

00:23:06,260 --> 00:23:10,520
ZFS options that way ahead of time back

00:23:08,180 --> 00:23:13,100
towards it but starting a replications

00:23:10,520 --> 00:23:14,750
pretty easy so first of all you're going

00:23:13,100 --> 00:23:17,000
to need to create a ZFS data set and

00:23:14,750 --> 00:23:20,840
then of course an SSH user on the remote

00:23:17,000 --> 00:23:22,940
box I really don't like SSH in as route

00:23:20,840 --> 00:23:25,310
for obvious reasons that just doesn't

00:23:22,940 --> 00:23:27,470
make sense to me but ZFS makes this easy

00:23:25,310 --> 00:23:29,630
because you can allow that user certain

00:23:27,470 --> 00:23:32,240
permissions on the data set you created

00:23:29,630 --> 00:23:33,830
for receiving your backups so you'll run

00:23:32,240 --> 00:23:35,870
a command something similar to this this

00:23:33,830 --> 00:23:37,550
is in our documentation as well these

00:23:35,870 --> 00:23:39,560
are the options we want this user to

00:23:37,550 --> 00:23:40,790
have on this particular data set and

00:23:39,560 --> 00:23:43,340
that's where I'm going to replicate to

00:23:40,790 --> 00:23:44,630
and then starting the replication again

00:23:43,340 --> 00:23:46,190
is just a single command from the

00:23:44,630 --> 00:23:50,300
command line we're gonna add a

00:23:46,190 --> 00:23:52,040
replication task host user pour what are

00:23:50,300 --> 00:23:54,730
we replicating in this case I'm doing my

00:23:52,040 --> 00:23:57,020
entire pool so tank 1 the remote

00:23:54,730 --> 00:23:59,630
destination which would be whatever my

00:23:57,020 --> 00:24:01,790
remote pool is slash backups and sync is

00:23:59,630 --> 00:24:03,590
do it whenever I create a snapshot or it

00:24:01,790 --> 00:24:07,280
could be some hourly schedule you know 2

00:24:03,590 --> 00:24:08,900
a.m. whatever so what is the replication

00:24:07,280 --> 00:24:10,370
due again it's gonna create a cron entry

00:24:08,900 --> 00:24:12,440
as I showed earlier for the snapshot

00:24:10,370 --> 00:24:13,910
something similar there it'll then check

00:24:12,440 --> 00:24:17,210
the Z pool make sure everything's kosher

00:24:13,910 --> 00:24:19,670
there before we begin replication we set

00:24:17,210 --> 00:24:21,500
a backup i'll preserver ZFS property to

00:24:19,670 --> 00:24:24,110
keep track of when the last replication

00:24:21,500 --> 00:24:24,690
was done so we are able to parse that

00:24:24,110 --> 00:24:26,730
and figure

00:24:24,690 --> 00:24:28,080
out okay this has never been replicated

00:24:26,730 --> 00:24:31,140
before so we need to do a full

00:24:28,080 --> 00:24:33,120
replication stream back up everything if

00:24:31,140 --> 00:24:35,040
that flag is set we can then look and

00:24:33,120 --> 00:24:36,810
figure out oh this was the last data set

00:24:35,040 --> 00:24:39,150
replicated so let's do an incremental

00:24:36,810 --> 00:24:41,730
stream instead and it'll manage that

00:24:39,150 --> 00:24:44,010
it'll then kick off the ZFS and receive

00:24:41,730 --> 00:24:46,320
commands wait a while depending on how

00:24:44,010 --> 00:24:48,420
much data you're doing and then after a

00:24:46,320 --> 00:24:50,100
successful send it'll mark that back up

00:24:48,420 --> 00:24:52,230
I'll preserve a property with the last

00:24:50,100 --> 00:24:55,080
snapshot that was replicated saying okay

00:24:52,230 --> 00:24:57,600
we've taken care of up to this point and

00:24:55,080 --> 00:25:00,630
we can move on and come back to whatever

00:24:57,600 --> 00:25:02,700
needs to be done later so also we do a

00:25:00,630 --> 00:25:04,620
little extra magic in the replication we

00:25:02,700 --> 00:25:06,870
also build a complete list of zpool and

00:25:04,620 --> 00:25:08,820
data set properties because what we

00:25:06,870 --> 00:25:10,800
found when doing bare metal restores is

00:25:08,820 --> 00:25:12,930
some properties we may not send over

00:25:10,800 --> 00:25:14,880
properly and we need to set manually at

00:25:12,930 --> 00:25:16,980
install time so we create a list of

00:25:14,880 --> 00:25:19,680
those so we know oh he had these options

00:25:16,980 --> 00:25:21,060
specifically set and like now points

00:25:19,680 --> 00:25:23,610
would be a good example we don't mount

00:25:21,060 --> 00:25:25,230
anything on the remote end this list is

00:25:23,610 --> 00:25:27,420
then also saved off to the remote

00:25:25,230 --> 00:25:29,010
replication box just stored on my free

00:25:27,420 --> 00:25:31,440
nas system in the home directory there

00:25:29,010 --> 00:25:33,480
and then lastly it'll check okay do I

00:25:31,440 --> 00:25:36,810
need to notify the user that we did this

00:25:33,480 --> 00:25:39,330
and it'll send results and log files so

00:25:36,810 --> 00:25:41,070
a course with any backup the first time

00:25:39,330 --> 00:25:44,040
you do it it's gonna take a long time

00:25:41,070 --> 00:25:46,290
because it's doing everything during the

00:25:44,040 --> 00:25:47,730
replication we allow a new snapshots to

00:25:46,290 --> 00:25:49,560
be created so if you have a 10-hour

00:25:47,730 --> 00:25:51,690
replication that's not going to stop new

00:25:49,560 --> 00:25:53,370
snapshots from getting created it's just

00:25:51,690 --> 00:25:55,620
going to disable the auto pruning until

00:25:53,370 --> 00:25:57,360
we have successfully replicated the old

00:25:55,620 --> 00:26:00,750
snapshots so we're not deleting things

00:25:57,360 --> 00:26:02,580
as they're being sent across one note

00:26:00,750 --> 00:26:04,680
though if replication fails it may be

00:26:02,580 --> 00:26:07,080
required to reinitialize the remote side

00:26:04,680 --> 00:26:09,120
and we have a command for that that may

00:26:07,080 --> 00:26:10,950
go away here in the future when ZFS send

00:26:09,120 --> 00:26:12,390
and receive has resumed mode which we're

00:26:10,950 --> 00:26:14,250
greatly looking forward to because

00:26:12,390 --> 00:26:15,720
that'll fix the issue where you lose

00:26:14,250 --> 00:26:17,730
connection halfway and you end up with a

00:26:15,720 --> 00:26:21,060
partially replicated system and you'll

00:26:17,730 --> 00:26:23,160
be able to pick up where you left off so

00:26:21,060 --> 00:26:24,420
getting my stuff back you know backups

00:26:23,160 --> 00:26:26,640
are great but if you can't retrieve them

00:26:24,420 --> 00:26:27,840
they're no good right so once your

00:26:26,640 --> 00:26:29,490
snapshots are being created there's

00:26:27,840 --> 00:26:32,100
several ways you can revert or restore

00:26:29,490 --> 00:26:34,050
files so via the command line if you

00:26:32,100 --> 00:26:35,520
want to revert an entire data set you

00:26:34,050 --> 00:26:37,049
can of course use the revert snap

00:26:35,520 --> 00:26:39,389
command data set and then

00:26:37,049 --> 00:26:41,940
the snapshot name which will be some

00:26:39,389 --> 00:26:42,779
kind of Auto date that is created by a

00:26:41,940 --> 00:26:44,129
life preserver

00:26:42,779 --> 00:26:45,809
additionally of course you can browse

00:26:44,129 --> 00:26:48,779
this is a ZFS feature you can just

00:26:45,809 --> 00:26:51,659
browse the ZFS directory / snapshot and

00:26:48,779 --> 00:26:54,869
view state of all the files at the time

00:26:51,659 --> 00:26:57,179
that snapshot was created we also have

00:26:54,869 --> 00:26:58,860
the ability via the GUI to browse

00:26:57,179 --> 00:27:00,929
snapshot data as well as scroll

00:26:58,860 --> 00:27:03,330
backwards in time which is really cool

00:27:00,929 --> 00:27:04,980
so when I fire up the GUI on a system

00:27:03,330 --> 00:27:06,659
that's got life preserver running on it

00:27:04,980 --> 00:27:08,369
I can see when you know really quick

00:27:06,659 --> 00:27:10,590
snapshot of my system when the last

00:27:08,369 --> 00:27:12,570
snapshot was done I have a green last

00:27:10,590 --> 00:27:15,210
replication it was successful life is

00:27:12,570 --> 00:27:17,639
good there but where it gets fun is I

00:27:15,210 --> 00:27:19,169
can now pick a dataset in my case I'm

00:27:17,639 --> 00:27:21,119
gonna say look at my home directory and

00:27:19,169 --> 00:27:22,830
oh that source I didn't commit a couple

00:27:21,119 --> 00:27:24,179
weeks ago and I accidentally just nuked

00:27:22,830 --> 00:27:26,399
like it would be really nice to get that

00:27:24,179 --> 00:27:27,899
back so I can just browse my home

00:27:26,399 --> 00:27:29,970
directory find the directory where I

00:27:27,899 --> 00:27:32,309
thought it was and then just scroll back

00:27:29,970 --> 00:27:34,499
in time and see the state of those files

00:27:32,309 --> 00:27:36,059
that whatever time that snapshot was

00:27:34,499 --> 00:27:38,039
created which could be all the way back

00:27:36,059 --> 00:27:40,350
to a year if I'm using the auto option

00:27:38,039 --> 00:27:41,789
so again real handy and then you just

00:27:40,350 --> 00:27:43,350
click and say restore that and it'll

00:27:41,789 --> 00:27:46,529
plop it in to your current environment

00:27:43,350 --> 00:27:48,029
no problem so how about bare metal

00:27:46,529 --> 00:27:50,460
restores this is actually what I'm using

00:27:48,029 --> 00:27:53,369
mine mostly for at the house I have

00:27:50,460 --> 00:27:55,679
about seven workstations some for the

00:27:53,369 --> 00:27:58,320
kids some for the wife and couple for me

00:27:55,679 --> 00:28:00,749
and hardware fills things get old it's

00:27:58,320 --> 00:28:02,340
time to upgrade so a cool thing that we

00:28:00,749 --> 00:28:04,019
really wanted to have in the installer

00:28:02,340 --> 00:28:06,690
was the ability to do a bare metal

00:28:04,019 --> 00:28:08,249
restore from your replication you know

00:28:06,690 --> 00:28:09,779
the Freda has mini sitting on the

00:28:08,249 --> 00:28:12,869
network why can't I just pull that data

00:28:09,779 --> 00:28:13,889
back onto a new machine so at the moment

00:28:12,869 --> 00:28:15,389
I'll mentioned this is just in the

00:28:13,889 --> 00:28:17,039
graphical installer but we do have a

00:28:15,389 --> 00:28:19,889
text installer now we're gonna add that

00:28:17,039 --> 00:28:22,200
to it as well but it also lets me change

00:28:19,889 --> 00:28:24,869
and adjust as a zpool options so while

00:28:22,200 --> 00:28:26,399
I'm replicating all the data back my

00:28:24,869 --> 00:28:28,379
workstation for example I went from

00:28:26,399 --> 00:28:30,570
spinning disks to an SSD and I was like

00:28:28,379 --> 00:28:32,399
I want to change a few things when I do

00:28:30,570 --> 00:28:34,169
this for store so I got all my data back

00:28:32,399 --> 00:28:36,299
it boots and looks exactly like it did

00:28:34,169 --> 00:28:38,399
before but I changed some options for

00:28:36,299 --> 00:28:41,489
the zpool to make it run a little better

00:28:38,399 --> 00:28:43,529
on an SSD so what does that look like

00:28:41,489 --> 00:28:44,399
when you boot the graphical installer

00:28:43,529 --> 00:28:46,830
for pc-bsd

00:28:44,399 --> 00:28:47,909
instead of a desktop or server you'll

00:28:46,830 --> 00:28:50,170
have a third option which is just

00:28:47,909 --> 00:28:52,150
restore from a backup you've made

00:28:50,170 --> 00:28:53,800
that will then fire off the wizard where

00:28:52,150 --> 00:28:55,900
you're going to point it at whatever

00:28:53,800 --> 00:28:58,000
system it is that has your replication

00:28:55,900 --> 00:29:00,730
username password all that's going to

00:28:58,000 --> 00:29:02,950
get prompted for I didn't mention it

00:29:00,730 --> 00:29:05,200
earlier but when you create that data

00:29:02,950 --> 00:29:06,670
set on like my free now as mini you can

00:29:05,200 --> 00:29:08,920
backup multiple systems to that you

00:29:06,670 --> 00:29:10,450
don't have to do that per system and it

00:29:08,920 --> 00:29:12,850
keeps track of them by the hostname

00:29:10,450 --> 00:29:14,920
of the clients so when I connect to my

00:29:12,850 --> 00:29:16,660
freeing as mini I go oh cool I got four

00:29:14,920 --> 00:29:18,430
systems already they're replicated which

00:29:16,660 --> 00:29:20,170
one do I want to restore today they're

00:29:18,430 --> 00:29:23,410
all available via the same account I

00:29:20,170 --> 00:29:25,750
created and at that point it's going to

00:29:23,410 --> 00:29:27,850
take you to the kind of confirmation

00:29:25,750 --> 00:29:29,320
screen for the disk selection it's going

00:29:27,850 --> 00:29:30,940
to let you know four data sets you're

00:29:29,320 --> 00:29:32,770
going to be restoring your old data sets

00:29:30,940 --> 00:29:35,230
so you're not going to adjust those but

00:29:32,770 --> 00:29:36,550
here's the disk swap all that and of

00:29:35,230 --> 00:29:38,050
course you can click customize at this

00:29:36,550 --> 00:29:39,820
point and that's where it gets fun and

00:29:38,050 --> 00:29:41,500
you can go through and say okay I'm an

00:29:39,820 --> 00:29:43,570
advanced user let me tinker with some

00:29:41,500 --> 00:29:45,040
settings right so I'm gonna go through

00:29:43,570 --> 00:29:47,200
and say okay this is the disk I want to

00:29:45,040 --> 00:29:49,000
use oh I really like GPT let's do the

00:29:47,200 --> 00:29:51,750
force for K trick because I would like

00:29:49,000 --> 00:29:54,130
my Z pool to be with four K block size

00:29:51,750 --> 00:29:55,540
you know I'm installing to an SSD of

00:29:54,130 --> 00:29:57,430
course the bootloader I'm gonna leave is

00:29:55,540 --> 00:29:59,470
grub maybe I want to rename my pool

00:29:57,430 --> 00:30:00,520
because tank one got really boring and I

00:29:59,470 --> 00:30:03,850
want to come up with something new

00:30:00,520 --> 00:30:06,100
whatever you can do that a cool thing is

00:30:03,850 --> 00:30:07,930
to if you're doing a restore you don't

00:30:06,100 --> 00:30:09,670
have to go to the same type of Z pool so

00:30:07,930 --> 00:30:11,050
one of the servers I had was running on

00:30:09,670 --> 00:30:12,550
two disks and a mirror but then I got

00:30:11,050 --> 00:30:13,870
four disks in there and I was like oh

00:30:12,550 --> 00:30:16,000
well let's make a new mirror with

00:30:13,870 --> 00:30:17,470
Fordyce now or maybe I want to switch it

00:30:16,000 --> 00:30:19,510
to raid zero or whatever and restore all

00:30:17,470 --> 00:30:23,020
the same data back to it no big deal

00:30:19,510 --> 00:30:24,460
it'll just handle that and the last one

00:30:23,020 --> 00:30:25,900
it's gonna gray out all the data sets

00:30:24,460 --> 00:30:27,820
because again those are gonna be coming

00:30:25,900 --> 00:30:29,530
from your replication so that's gonna be

00:30:27,820 --> 00:30:31,630
something you don't get to set but you

00:30:29,530 --> 00:30:33,190
can adjust the swap size so my new

00:30:31,630 --> 00:30:36,640
system maybe needs more or less swap

00:30:33,190 --> 00:30:38,470
whatever you can adjust that right there

00:30:36,640 --> 00:30:40,690
how does this work though the pc-bsd

00:30:38,470 --> 00:30:42,550
installers using the pc sis install

00:30:40,690 --> 00:30:46,480
installation back in which I've given

00:30:42,550 --> 00:30:48,730
talks on in previous years and the PC

00:30:46,480 --> 00:30:51,970
sis install we added support for the ZFS

00:30:48,730 --> 00:30:54,040
restore option which basically says I'm

00:30:51,970 --> 00:30:55,900
going to be pulling all my data instead

00:30:54,040 --> 00:30:58,660
of from the disk files or packages from

00:30:55,900 --> 00:31:00,550
a ZFS send and receive stream it's going

00:30:58,660 --> 00:31:01,990
to use SSH as the transfer agent and

00:31:00,550 --> 00:31:03,430
then it's going to use pretty much the

00:31:01,990 --> 00:31:05,200
normal installation

00:31:03,430 --> 00:31:07,630
from that point on for doing dis

00:31:05,200 --> 00:31:10,810
configuration again all fully automated

00:31:07,630 --> 00:31:12,730
the GUI is just writing a config so what

00:31:10,810 --> 00:31:15,640
that looks like in an example PC sis

00:31:12,730 --> 00:31:17,440
install config is install modes EFS

00:31:15,640 --> 00:31:20,410
restore you put in some information

00:31:17,440 --> 00:31:21,700
about your SSH where your system is what

00:31:20,410 --> 00:31:24,340
the key is you're going to connect with

00:31:21,700 --> 00:31:26,260
the properties file that we're going to

00:31:24,340 --> 00:31:27,880
pull back and set those original data

00:31:26,260 --> 00:31:31,000
set properties and then the remote data

00:31:27,880 --> 00:31:33,100
set we're pulling from its how many is

00:31:31,000 --> 00:31:35,320
that 8 options 7 options it's really

00:31:33,100 --> 00:31:39,250
pretty minimal to start or restore all

00:31:35,320 --> 00:31:41,650
in a scripted manner so again as I

00:31:39,250 --> 00:31:43,300
mentioned to ZFS mirroring so during the

00:31:41,650 --> 00:31:45,000
system installation maybe you set up

00:31:43,300 --> 00:31:47,560
with a single disk or raid Z

00:31:45,000 --> 00:31:49,300
life-preserver has kind of a not so

00:31:47,560 --> 00:31:51,010
documented feature it's not in the GUI I

00:31:49,300 --> 00:31:52,930
don't believe but you can attach new

00:31:51,010 --> 00:31:54,520
disks via a life preserver which it's

00:31:52,930 --> 00:31:56,890
really not hard to do that with ZFS

00:31:54,520 --> 00:31:58,570
that's not the special part what what

00:31:56,890 --> 00:32:00,490
this utility is going to do though is

00:31:58,570 --> 00:32:02,440
when you run it and say ok I got a new

00:32:00,490 --> 00:32:04,240
disk it's going to first wipe the disk

00:32:02,440 --> 00:32:05,920
it's gonna create a matching style

00:32:04,240 --> 00:32:08,410
partition to the other discs in your

00:32:05,920 --> 00:32:10,150
pool GPT or MBR it's gonna then make

00:32:08,410 --> 00:32:11,800
that disk bootable grub and handle all

00:32:10,150 --> 00:32:13,900
those steps of stamping grub make sure

00:32:11,800 --> 00:32:15,760
the configs on it and whatnot so that

00:32:13,900 --> 00:32:18,010
it's ready to go it's literally one

00:32:15,760 --> 00:32:20,650
command it'll then insert the disk into

00:32:18,010 --> 00:32:22,000
the Z pool and then ZFS will happily go

00:32:20,650 --> 00:32:23,980
Andrey silver it and when that's done

00:32:22,000 --> 00:32:27,640
you're ready to rock and roll there was

00:32:23,980 --> 00:32:29,500
no more to it than that so that's pretty

00:32:27,640 --> 00:32:31,750
much the end of what I have prepared and

00:32:29,500 --> 00:32:33,310
I did have a reference here to my old pc

00:32:31,750 --> 00:32:35,530
sis install talk or if you want to see

00:32:33,310 --> 00:32:37,810
how our fully automated scriptable

00:32:35,530 --> 00:32:39,430
installer works and of course these

00:32:37,810 --> 00:32:41,800
slides are available at the following

00:32:39,430 --> 00:32:43,780
URL as well on slideshare.net

00:32:41,800 --> 00:32:45,940
and at this point i'll be happy to

00:32:43,780 --> 00:32:51,210
answer any questions if I can and tell

00:32:45,940 --> 00:32:51,210
you I can't if I can any questions guys

00:32:51,300 --> 00:32:55,980
yes oh no problem

00:32:58,690 --> 00:33:03,350
you can do the data set rename when you

00:33:00,920 --> 00:33:06,860
replicate yeah we don't support it at

00:33:03,350 --> 00:33:09,200
this time but we would like to it's hard

00:33:06,860 --> 00:33:11,630
send patches I would love to do it that

00:33:09,200 --> 00:33:17,390
would be fun oh we have a microphone for

00:33:11,630 --> 00:33:22,130
questions so when you have a bar as its

00:33:17,390 --> 00:33:25,970
own separate data set the package

00:33:22,130 --> 00:33:27,860
database then is global no so what we do

00:33:25,970 --> 00:33:30,200
is we create a VAR data set but we set

00:33:27,860 --> 00:33:31,610
it to count Mount equals off cool so

00:33:30,200 --> 00:33:34,100
it's actually a part of the boot

00:33:31,610 --> 00:33:36,380
environment so then we create var log as

00:33:34,100 --> 00:33:38,090
its own data set so that your logs

00:33:36,380 --> 00:33:39,920
persist between reboots because maybe

00:33:38,090 --> 00:33:41,450
you want to see why the previous boot

00:33:39,920 --> 00:33:47,270
environment failed to start for some

00:33:41,450 --> 00:33:48,710
reason any other questions guys oh cool

00:33:47,270 --> 00:33:49,890
well thank you guys so much for coming I

00:33:48,710 --> 00:33:55,400
really appreciate it

00:33:49,890 --> 00:34:01,780
[Applause]

00:33:55,400 --> 00:34:01,780

YouTube URL: https://www.youtube.com/watch?v=w-OoWiSldcQ


