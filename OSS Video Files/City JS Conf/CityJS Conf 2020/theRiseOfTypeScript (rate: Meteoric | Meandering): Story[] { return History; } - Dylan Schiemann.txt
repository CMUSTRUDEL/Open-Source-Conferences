Title: theRiseOfTypeScript (rate: Meteoric | Meandering): Story[] { return History; } - Dylan Schiemann
Publication date: 2020-10-03
Playlist: CityJS Conf 2020
Description: 
	As CEO of SitePen and co-founder of Dojo, Dylan Schiemann is an established presence in the JavaScript and open source communities. 

_________________________________________________________________

About Pusher Sessions:

We're bringing the meetup to you. With Sessions, you can watch recordings of top-notch talks from developer meetups -- wherever and whenever you want.

Meetups are a great way to learn from our peers and to keep up with the latest trends and technologies. As developers ourselves, we at Pusher wanted to bring this great content to more people... So we built Sessions. On Sessions, you can watch talks that interest you and subscribe to be notified when new content gets added.

If you run a meetup and want to get involved, kindly get in touch.

_________________________________________________________________

About Pusher:

Pusher is a hosted service with APIs, developer tools and open source libraries that greatly simplify integrating real-time functionality into web and mobile applications. 

Pusher will automatically scale when required, removing all the pain of setting up and maintaining a secure, real-time infrastructure. 

Pusher is already trusted to do so by thousands of developers and companies like GitHub, MailChimp, the Financial Times, Buffer and many more. 

Getting started takes just a few seconds: simply go to pusher.com and create a free account. Happy hacking!
Captions: 
	00:00:18,110 --> 00:00:24,050
[Music]

00:00:32,659 --> 00:00:39,479
[Music]

00:00:42,750 --> 00:00:50,719
[Music]

00:00:54,080 --> 00:00:57,280
[Music]

00:01:05,960 --> 00:01:12,550
[Music]

00:01:10,840 --> 00:01:21,449
so

00:01:12,550 --> 00:01:21,449
[Music]

00:01:25,540 --> 00:01:28,930
[Music]

00:01:30,799 --> 00:01:34,560
all right well that's my talk i think

00:01:32,320 --> 00:01:36,799
that about sums it up

00:01:34,560 --> 00:01:39,119
um more seriously uh thanks for joining

00:01:36,799 --> 00:01:41,600
me at city.js conf i'm dylan shivan

00:01:39,119 --> 00:01:42,320
and this is a talk about the history of

00:01:41,600 --> 00:01:44,159
typescript

00:01:42,320 --> 00:01:45,439
and look a look at some of the reasons

00:01:44,159 --> 00:01:47,920
of why it riot

00:01:45,439 --> 00:01:49,840
why it rose in popularity and just tell

00:01:47,920 --> 00:01:51,280
some of the stories along the way

00:01:49,840 --> 00:01:52,960
and a little bit of tech but it's

00:01:51,280 --> 00:01:55,759
actually a pretty

00:01:52,960 --> 00:01:56,320
low-tech slide so there's a lot of

00:01:55,759 --> 00:01:59,759
different

00:01:56,320 --> 00:02:02,320
things to know um about

00:01:59,759 --> 00:02:03,040
the web and about web technology in

00:02:02,320 --> 00:02:05,280
general

00:02:03,040 --> 00:02:06,799
but the reason this talk came to be is i

00:02:05,280 --> 00:02:08,160
was a really early proponent of

00:02:06,799 --> 00:02:10,160
typescript and people

00:02:08,160 --> 00:02:12,080
were sort of like hey dylan how did you

00:02:10,160 --> 00:02:14,080
know this was going to be good

00:02:12,080 --> 00:02:15,360
in 2012 or whenever it is i first

00:02:14,080 --> 00:02:17,200
started looking at it

00:02:15,360 --> 00:02:18,959
and i kind of just realized i actually

00:02:17,200 --> 00:02:20,640
have some perspective where i pick

00:02:18,959 --> 00:02:22,879
things early whether

00:02:20,640 --> 00:02:24,800
i'm right on time or not as debatable

00:02:22,879 --> 00:02:26,560
but for example in 1994

00:02:24,800 --> 00:02:28,560
i looked at the web a little bit and

00:02:26,560 --> 00:02:29,680
didn't really know what it was about and

00:02:28,560 --> 00:02:31,920
didn't really care

00:02:29,680 --> 00:02:33,280
and then i saw mosaic with the image tag

00:02:31,920 --> 00:02:33,760
and i was like well this is going to be

00:02:33,280 --> 00:02:36,560
big

00:02:33,760 --> 00:02:38,239
and then in 96 i saw javascript and i

00:02:36,560 --> 00:02:39,360
couldn't do much of anything at all

00:02:38,239 --> 00:02:41,120
but i thought wow this is going to be

00:02:39,360 --> 00:02:43,120
really powerful because now i can move

00:02:41,120 --> 00:02:44,720
an image on the web or i can change an

00:02:43,120 --> 00:02:47,120
image on the fly

00:02:44,720 --> 00:02:49,040
i bought some apple stock in 98 when the

00:02:47,120 --> 00:02:52,160
imac first came out

00:02:49,040 --> 00:02:55,200
i was a very early adopter of mozilla

00:02:52,160 --> 00:02:57,680
i sold most of my.com stocks

00:02:55,200 --> 00:02:59,680
early in the days i picked up svg in

00:02:57,680 --> 00:03:01,760
2001 and i mean it was a good 10 years

00:02:59,680 --> 00:03:03,360
before that really became truly viable

00:03:01,760 --> 00:03:05,760
across all platforms

00:03:03,360 --> 00:03:07,200
um but it was the belief that we needed

00:03:05,760 --> 00:03:09,200
to be able to draw natively in the

00:03:07,200 --> 00:03:11,920
browser in a scalable way

00:03:09,200 --> 00:03:13,760
i started dojo in 2004 which was one of

00:03:11,920 --> 00:03:14,879
the earliest javascript frameworks at

00:03:13,760 --> 00:03:18,000
the time

00:03:14,879 --> 00:03:19,920
i was an early webkit advocate we built

00:03:18,000 --> 00:03:21,040
uh webkit support which the time was

00:03:19,920 --> 00:03:23,360
safari

00:03:21,040 --> 00:03:25,519
quite early on obviously the iphone was

00:03:23,360 --> 00:03:27,200
big when node.js came out i thought that

00:03:25,519 --> 00:03:28,400
was going to be big phone gap and then

00:03:27,200 --> 00:03:29,280
typescript and there are other things

00:03:28,400 --> 00:03:30,840
along the way

00:03:29,280 --> 00:03:33,680
but these are all things that in

00:03:30,840 --> 00:03:34,799
hindsight might not be obvious and so

00:03:33,680 --> 00:03:37,040
i thought it'd be interesting to just

00:03:34,799 --> 00:03:38,799
sort of say how i look at the web and

00:03:37,040 --> 00:03:39,519
what made me think the typescript might

00:03:38,799 --> 00:03:40,959
be good

00:03:39,519 --> 00:03:42,720
and then sort of look at the history of

00:03:40,959 --> 00:03:44,400
typescript and maybe some of the

00:03:42,720 --> 00:03:46,720
inflection points that led to its

00:03:44,400 --> 00:03:48,080
success so we'll take a trip back to

00:03:46,720 --> 00:03:49,519
00:03:48,080 --> 00:03:51,360
um you're like well typescript didn't

00:03:49,519 --> 00:03:52,080
start till 2012. i'm confused but we'll

00:03:51,360 --> 00:03:53,680
get there

00:03:52,080 --> 00:03:55,680
so you know at the time it was like the

00:03:53,680 --> 00:03:58,319
end of the world y2k

00:03:55,680 --> 00:03:59,840
um party like it's 1999. and why is that

00:03:58,319 --> 00:04:01,439
relevant well that's when javascript had

00:03:59,840 --> 00:04:03,439
basically been established

00:04:01,439 --> 00:04:04,560
and pretty much as soon as javascript

00:04:03,439 --> 00:04:05,840
was established

00:04:04,560 --> 00:04:07,599
that's when people started to say well

00:04:05,840 --> 00:04:09,280
how do we fix this thing that brendan

00:04:07,599 --> 00:04:12,159
wrote in a couple weeks right

00:04:09,280 --> 00:04:13,599
and that's interesting but also what's

00:04:12,159 --> 00:04:15,280
more interesting is that a lot of the

00:04:13,599 --> 00:04:16,880
things that we use in typescript today

00:04:15,280 --> 00:04:18,400
were first proposed back then they just

00:04:16,880 --> 00:04:19,759
weren't proposed in a very

00:04:18,400 --> 00:04:22,079
javascript friendly way they weren't

00:04:19,759 --> 00:04:25,040
particularly good but there were classes

00:04:22,079 --> 00:04:25,840
packages types things like that there

00:04:25,040 --> 00:04:28,720
was

00:04:25,840 --> 00:04:30,080
e4x which looks very similar to jsx

00:04:28,720 --> 00:04:31,280
which didn't come out for another 10 or

00:04:30,080 --> 00:04:34,080
15 years

00:04:31,280 --> 00:04:35,520
but too many people took the word java a

00:04:34,080 --> 00:04:37,040
bit too literally

00:04:35,520 --> 00:04:38,960
and some of that was trying to turn

00:04:37,040 --> 00:04:42,160
javascript into a more java like

00:04:38,960 --> 00:04:44,160
language other things like gwt the or

00:04:42,160 --> 00:04:46,000
with the google web toolkit trying to

00:04:44,160 --> 00:04:47,199
let you write java code and transpile it

00:04:46,000 --> 00:04:49,120
to javascript there are other things

00:04:47,199 --> 00:04:51,600
that try to do that even today

00:04:49,120 --> 00:04:52,240
and es4 at the time was being championed

00:04:51,600 --> 00:04:54,560
by

00:04:52,240 --> 00:04:55,919
mozilla and adobe but microsoft and ibm

00:04:54,560 --> 00:04:57,360
and others were kind of against it but

00:04:55,919 --> 00:04:58,560
if you look at some of the features that

00:04:57,360 --> 00:05:01,120
are listed in there

00:04:58,560 --> 00:05:02,240
there are a lot of different influences

00:05:01,120 --> 00:05:03,680
that we're saying hey

00:05:02,240 --> 00:05:05,199
let's try to take something like

00:05:03,680 --> 00:05:06,479
actionscript let's try and take

00:05:05,199 --> 00:05:07,600
something

00:05:06,479 --> 00:05:09,759
some of these other experimental

00:05:07,600 --> 00:05:11,840
projects and turn them into javascript

00:05:09,759 --> 00:05:13,919
but what we thankfully did not end up

00:05:11,840 --> 00:05:14,639
with is this version of javascript which

00:05:13,919 --> 00:05:16,880
would be

00:05:14,639 --> 00:05:17,840
quite bad and quite a failure so what

00:05:16,880 --> 00:05:21,280
happened was

00:05:17,840 --> 00:05:22,880
es4 was cancelled because that was kind

00:05:21,280 --> 00:05:23,360
of the version of javascript that would

00:05:22,880 --> 00:05:25,759
have

00:05:23,360 --> 00:05:27,759
done all of these things and then a very

00:05:25,759 --> 00:05:29,360
quick version of es5 was introduced

00:05:27,759 --> 00:05:30,800
called harmony that basically

00:05:29,360 --> 00:05:32,240
standardized the things that were kind

00:05:30,800 --> 00:05:32,960
of already done in all the browsers at

00:05:32,240 --> 00:05:35,440
that point

00:05:32,960 --> 00:05:37,840
and then set what ended up being a six

00:05:35,440 --> 00:05:39,919
year course towards es6 which is kind of

00:05:37,840 --> 00:05:43,120
fitting or es 2015

00:05:39,919 --> 00:05:44,240
and basically that was our chance to

00:05:43,120 --> 00:05:46,639
start over

00:05:44,240 --> 00:05:48,160
and also around that time uh

00:05:46,639 --> 00:05:50,160
coffeescript came out it was kind of the

00:05:48,160 --> 00:05:50,479
first time people said oh maybe we could

00:05:50,160 --> 00:05:53,039
fix

00:05:50,479 --> 00:05:56,000
javascript with some transpilation and

00:05:53,039 --> 00:05:58,560
try out new language features but also

00:05:56,000 --> 00:05:59,680
the sort of early popular uh popularity

00:05:58,560 --> 00:06:02,960
of coffeescript

00:05:59,680 --> 00:06:04,720
led people to say hmm maybe we can add a

00:06:02,960 --> 00:06:05,919
lot of the nice and technical sugar we

00:06:04,720 --> 00:06:06,960
have in other languages and bringing

00:06:05,919 --> 00:06:08,880
that to javascript

00:06:06,960 --> 00:06:10,800
and it kind of gave the the group

00:06:08,880 --> 00:06:11,520
working on javascript a bit of a kick in

00:06:10,800 --> 00:06:13,840
the butt

00:06:11,520 --> 00:06:14,720
to work on that and make that faster and

00:06:13,840 --> 00:06:17,120
it did take

00:06:14,720 --> 00:06:18,479
like six or seven years to get from like

00:06:17,120 --> 00:06:20,720
first idea of es6

00:06:18,479 --> 00:06:22,479
to actually shipping it like all right

00:06:20,720 --> 00:06:23,680
dylan where's the typescript i'm getting

00:06:22,479 --> 00:06:25,520
there i promise

00:06:23,680 --> 00:06:27,120
so really what i wanted to set the stage

00:06:25,520 --> 00:06:29,680
for where the world was born because

00:06:27,120 --> 00:06:32,240
remember typescript came out 2012

00:06:29,680 --> 00:06:34,319
and es6 is 2015. so a lot of the things

00:06:32,240 --> 00:06:35,840
people complain about with typescript

00:06:34,319 --> 00:06:37,919
are the things that predate the

00:06:35,840 --> 00:06:40,319
standardization of features we rely on

00:06:37,919 --> 00:06:43,039
es6

00:06:40,319 --> 00:06:43,919
at the same time around 2010 a lot of

00:06:43,039 --> 00:06:45,840
people were like hey

00:06:43,919 --> 00:06:48,160
languages are challenging there's i'm

00:06:45,840 --> 00:06:48,639
sorry applications with javascript as a

00:06:48,160 --> 00:06:51,280
language

00:06:48,639 --> 00:06:53,039
are challenging and it wasn't really the

00:06:51,280 --> 00:06:54,880
web platform wasn't really designed for

00:06:53,039 --> 00:06:58,240
these things like html was

00:06:54,880 --> 00:06:59,759
essentially a content language not an

00:06:58,240 --> 00:07:02,160
application language

00:06:59,759 --> 00:07:03,840
javascript wasn't sort of structured for

00:07:02,160 --> 00:07:05,280
large scale applications

00:07:03,840 --> 00:07:07,360
a lot of features were missing we could

00:07:05,280 --> 00:07:10,240
talk about modules and classes or

00:07:07,360 --> 00:07:12,479
functional composition or whatever but

00:07:10,240 --> 00:07:14,880
fundamentally what's missing the most is

00:07:12,479 --> 00:07:16,800
interfaces and interfaces are the things

00:07:14,880 --> 00:07:19,440
that allow us to define

00:07:16,800 --> 00:07:20,000
the footprint of our api i mean hence

00:07:19,440 --> 00:07:23,120
the i

00:07:20,000 --> 00:07:24,400
in interfaces right and um so what this

00:07:23,120 --> 00:07:26,400
really said is like hey

00:07:24,400 --> 00:07:28,400
like we can't really define the

00:07:26,400 --> 00:07:30,160
footprint of our application and source

00:07:28,400 --> 00:07:31,520
code of what's intended to do

00:07:30,160 --> 00:07:32,800
and some people are like well hey that's

00:07:31,520 --> 00:07:34,560
great because javascript's super

00:07:32,800 --> 00:07:35,759
flexible and super dynamic but

00:07:34,560 --> 00:07:37,280
it doesn't mean you're supposed to write

00:07:35,759 --> 00:07:38,560
code in a way that you can't comprehend

00:07:37,280 --> 00:07:41,280
or can't explain

00:07:38,560 --> 00:07:42,400
what the intent or purposes of it are

00:07:41,280 --> 00:07:43,759
and so that's kind of

00:07:42,400 --> 00:07:44,960
why this became interesting and

00:07:43,759 --> 00:07:45,680
obviously a lot of these other things

00:07:44,960 --> 00:07:47,440
were sort of

00:07:45,680 --> 00:07:48,960
developer productivity benefits that

00:07:47,440 --> 00:07:53,360
people became used to

00:07:48,960 --> 00:07:55,680
from other environments so in 2010

00:07:53,360 --> 00:07:57,919
luke hogan and steve luca got together

00:07:55,680 --> 00:07:58,800
and they were tasked with coming up with

00:07:57,919 --> 00:08:00,879
a way to manage

00:07:58,800 --> 00:08:02,080
large-scale javascript code bases and

00:08:00,879 --> 00:08:03,120
you're like well where's the picture of

00:08:02,080 --> 00:08:04,400
anders and

00:08:03,120 --> 00:08:06,479
i'm like well actually anders wasn't

00:08:04,400 --> 00:08:08,479
there the first couple months so

00:08:06,479 --> 00:08:10,800
these guys got together and they were

00:08:08,479 --> 00:08:12,319
working on office 2010 now they were not

00:08:10,800 --> 00:08:13,440
working on the next version of clippy

00:08:12,319 --> 00:08:14,960
that could automatically write your

00:08:13,440 --> 00:08:16,240
tests for you but they were working on

00:08:14,960 --> 00:08:19,039
office 2010

00:08:16,240 --> 00:08:19,680
bing maps and visual studio as a group

00:08:19,039 --> 00:08:21,840
of

00:08:19,680 --> 00:08:23,039
projects and they wanted to be able to

00:08:21,840 --> 00:08:23,759
have some of the benefits they were

00:08:23,039 --> 00:08:26,319
getting with c

00:08:23,759 --> 00:08:27,599
sharp or c plus or f sharp or some of

00:08:26,319 --> 00:08:28,960
the other things they were doing

00:08:27,599 --> 00:08:30,319
but they knew they needed to target the

00:08:28,960 --> 00:08:31,440
web and they want to use javascript as

00:08:30,319 --> 00:08:32,880
the language

00:08:31,440 --> 00:08:35,200
there were other options available

00:08:32,880 --> 00:08:37,039
script sharp there was um

00:08:35,200 --> 00:08:38,240
the google closure compiler which ended

00:08:37,039 --> 00:08:40,159
up actually being a very

00:08:38,240 --> 00:08:41,360
important first part of the early

00:08:40,159 --> 00:08:43,919
versions of typescript and then of

00:08:41,360 --> 00:08:46,640
course coffeescript as inspiration

00:08:43,919 --> 00:08:47,519
so this project known as strata was put

00:08:46,640 --> 00:08:49,279
forward

00:08:47,519 --> 00:08:51,279
and the idea was to keep the language as

00:08:49,279 --> 00:08:54,560
similar as possible to javascript

00:08:51,279 --> 00:08:56,720
and the syntax would actually

00:08:54,560 --> 00:08:58,320
use the closure compiler at the time

00:08:56,720 --> 00:08:59,920
that was like the first step was to just

00:08:58,320 --> 00:09:01,920
use the closure compiler

00:08:59,920 --> 00:09:03,200
to read some type syntax or some

00:09:01,920 --> 00:09:05,200
interface definitions

00:09:03,200 --> 00:09:07,040
and then strip them out run it through a

00:09:05,200 --> 00:09:08,959
type checker and the closure compiler

00:09:07,040 --> 00:09:10,800
could do some type checking for you

00:09:08,959 --> 00:09:12,800
and then add some tooling on top of it

00:09:10,800 --> 00:09:16,880
so there was this nice demo day done

00:09:12,800 --> 00:09:19,200
i think it was february 1st of 2011 yeah

00:09:16,880 --> 00:09:20,720
and uh basically the they had an

00:09:19,200 --> 00:09:22,080
internal conference at microsoft and

00:09:20,720 --> 00:09:23,519
this was presented

00:09:22,080 --> 00:09:25,680
and there were some challenges along the

00:09:23,519 --> 00:09:27,120
way as there often are so what the main

00:09:25,680 --> 00:09:27,760
engineer who was tasked with working

00:09:27,120 --> 00:09:31,440
this

00:09:27,760 --> 00:09:32,720
had some rsi injuries i think or um

00:09:31,440 --> 00:09:35,360
he had a wrist injury and he couldn't

00:09:32,720 --> 00:09:36,640
actually write code so like the program

00:09:35,360 --> 00:09:39,760
manager

00:09:36,640 --> 00:09:41,760
hacked things together with in a true

00:09:39,760 --> 00:09:44,000
pure vaporware kind of way to show what

00:09:41,760 --> 00:09:45,760
it might look like and so here's some

00:09:44,000 --> 00:09:47,600
code that we found online that sort of

00:09:45,760 --> 00:09:49,200
shows what the first version at this

00:09:47,600 --> 00:09:51,680
demo looks like and you'll see the

00:09:49,200 --> 00:09:53,360
the first block of code is pulling in

00:09:51,680 --> 00:09:55,519
jquery which is kind of interesting it's

00:09:53,360 --> 00:09:57,360
just some query selector syntax

00:09:55,519 --> 00:09:58,880
and then there are a lot of statements

00:09:57,360 --> 00:10:00,320
on here that look fairly familiar and

00:09:58,880 --> 00:10:02,399
some of them are a little bit different

00:10:00,320 --> 00:10:03,680
so in a few cases you'll see like string

00:10:02,399 --> 00:10:06,240
name verses versus

00:10:03,680 --> 00:10:07,200
today like the type is always a

00:10:06,240 --> 00:10:08,640
predicate

00:10:07,200 --> 00:10:10,480
uh and there's just other things but a

00:10:08,640 --> 00:10:12,000
lot of it if you squint it looks kind of

00:10:10,480 --> 00:10:13,200
like typescript does today

00:10:12,000 --> 00:10:14,959
other than you wouldn't be running

00:10:13,200 --> 00:10:16,480
closure compiler and jquery in the

00:10:14,959 --> 00:10:19,519
browser to actually

00:10:16,480 --> 00:10:22,800
do typescript compilation

00:10:19,519 --> 00:10:26,240
so this demo day was a success and

00:10:22,800 --> 00:10:26,959
effectively this is how the team decided

00:10:26,240 --> 00:10:28,720
to

00:10:26,959 --> 00:10:31,760
microsoft decided to proceed with

00:10:28,720 --> 00:10:34,880
typescript so it was the side project

00:10:31,760 --> 00:10:36,800
the interpreter was written in f-sharp

00:10:34,880 --> 00:10:39,040
types were converted to closure compiler

00:10:36,800 --> 00:10:40,240
comments uh the closure compiler

00:10:39,040 --> 00:10:42,959
resulted code

00:10:40,240 --> 00:10:43,920
like did the type checking for us well

00:10:42,959 --> 00:10:45,839
for them

00:10:43,920 --> 00:10:47,920
and then it was hosted inside of

00:10:45,839 --> 00:10:49,440
silverlight inside of a browser so like

00:10:47,920 --> 00:10:50,720
this is a pretty messy process

00:10:49,440 --> 00:10:52,640
obviously it was just to prove that it

00:10:50,720 --> 00:10:53,680
could be done but then live error

00:10:52,640 --> 00:10:56,320
reporting

00:10:53,680 --> 00:10:58,160
was um basically provided in the browser

00:10:56,320 --> 00:11:01,200
and people thought it was cool and

00:10:58,160 --> 00:11:04,399
i don't know the exact story of how

00:11:01,200 --> 00:11:06,160
anders moved from c sharp to typescript

00:11:04,399 --> 00:11:07,680
but something happened at this demo day

00:11:06,160 --> 00:11:09,360
that caught his attention

00:11:07,680 --> 00:11:10,800
and he said hey i want to work on that

00:11:09,360 --> 00:11:12,800
or maybe someone said hey anders you

00:11:10,800 --> 00:11:14,800
should work on this and he said okay but

00:11:12,800 --> 00:11:16,240
i i've been meaning to ask him this for

00:11:14,800 --> 00:11:18,000
a while but he just hasn't gotten back

00:11:16,240 --> 00:11:20,959
to me yet so

00:11:18,000 --> 00:11:22,240
there's this um so fast forward almost

00:11:20,959 --> 00:11:25,760
18 months i think

00:11:22,240 --> 00:11:27,839
and then anders hosts this blog post

00:11:25,760 --> 00:11:29,360
about hey we're going to introduce

00:11:27,839 --> 00:11:31,279
typescript to the world and the

00:11:29,360 --> 00:11:33,200
and here's a little video a demo of it i

00:11:31,279 --> 00:11:33,920
think it was on referrals on youtube or

00:11:33,200 --> 00:11:36,000
where but

00:11:33,920 --> 00:11:37,680
um and the comments were brutal like

00:11:36,000 --> 00:11:40,640
this scott person was like

00:11:37,680 --> 00:11:42,000
this is the dumbest idea ever all right

00:11:40,640 --> 00:11:44,399
cool you know thanks

00:11:42,000 --> 00:11:45,600
um derek bailey agrees with scott says

00:11:44,399 --> 00:11:48,720
this is just

00:11:45,600 --> 00:11:52,399
worse than dart and

00:11:48,720 --> 00:11:55,360
um others sort of just felt like

00:11:52,399 --> 00:11:57,040
why do we need yet another js plus x

00:11:55,360 --> 00:11:58,480
language and kind of find these js plus

00:11:57,040 --> 00:12:01,200
x because this actually

00:11:58,480 --> 00:12:02,959
was announced like shortly before or

00:12:01,200 --> 00:12:04,160
shortly after react so it's kind of a

00:12:02,959 --> 00:12:05,760
funny alliteration

00:12:04,160 --> 00:12:08,079
but really there was not a lot of

00:12:05,760 --> 00:12:09,279
agreement other than like one person

00:12:08,079 --> 00:12:10,639
commenting on this so it was like i

00:12:09,279 --> 00:12:12,000
actually have to disagree with this i

00:12:10,639 --> 00:12:14,480
think this is a really nice idea because

00:12:12,000 --> 00:12:16,560
it's a typescript type system

00:12:14,480 --> 00:12:18,720
authored for typescript instead of a new

00:12:16,560 --> 00:12:20,720
language trying to replace javascript

00:12:18,720 --> 00:12:21,760
and that is fundamentally the beauty of

00:12:20,720 --> 00:12:23,600
typescript

00:12:21,760 --> 00:12:25,519
but the thing is at the time no one

00:12:23,600 --> 00:12:27,519
believed that microsoft would do like a

00:12:25,519 --> 00:12:28,320
true open source project this was the

00:12:27,519 --> 00:12:31,839
first

00:12:28,320 --> 00:12:33,839
like apache mit bsd

00:12:31,839 --> 00:12:35,839
style license project hosted at

00:12:33,839 --> 00:12:36,320
microsoft it was the first project they

00:12:35,839 --> 00:12:38,240
did

00:12:36,320 --> 00:12:39,920
where the road map was carried out in

00:12:38,240 --> 00:12:41,200
public and it was there's a lot of

00:12:39,920 --> 00:12:44,399
skepticism to be fair

00:12:41,200 --> 00:12:46,000
and so um it was introduced and

00:12:44,399 --> 00:12:47,519
they did that and then a couple days

00:12:46,000 --> 00:12:49,519
later like five days later they were a

00:12:47,519 --> 00:12:52,000
teased coffee you

00:12:49,519 --> 00:12:52,880
and here they are um there's one funny

00:12:52,000 --> 00:12:54,720
mistake

00:12:52,880 --> 00:12:56,240
in the talk where anders calls

00:12:54,720 --> 00:12:58,720
javascript java

00:12:56,240 --> 00:13:01,120
which probably made the audience cringe

00:12:58,720 --> 00:13:02,720
and um there's only like 15 likes and a

00:13:01,120 --> 00:13:04,320
few comments on this probably because

00:13:02,720 --> 00:13:05,200
the js coffee youtube misspelled

00:13:04,320 --> 00:13:08,000
anders's

00:13:05,200 --> 00:13:10,399
surname so like again like pretty funny

00:13:08,000 --> 00:13:13,040
that this video exists and almost no one

00:13:10,399 --> 00:13:13,519
has liked it on youtube but since that

00:13:13,040 --> 00:13:15,680
time

00:13:13,519 --> 00:13:17,760
quite a lot has changed for the first

00:13:15,680 --> 00:13:18,639
few years interest was pretty calm and

00:13:17,760 --> 00:13:20,880
then over the past

00:13:18,639 --> 00:13:22,800
five years interest has grown about as

00:13:20,880 --> 00:13:24,639
fast as language has ever grown in

00:13:22,800 --> 00:13:26,240
any programming language that i know of

00:13:24,639 --> 00:13:28,320
my history of typescript

00:13:26,240 --> 00:13:29,680
in 2004 i was working with alex russell

00:13:28,320 --> 00:13:31,839
on a predecessor a dojo called

00:13:29,680 --> 00:13:33,440
netwindows and microsoft gave alex a

00:13:31,839 --> 00:13:35,680
cease and desist order and basically

00:13:33,440 --> 00:13:37,440
said stop using the word windows

00:13:35,680 --> 00:13:39,120
so we kind of had a bit of a dislike for

00:13:37,440 --> 00:13:39,839
microsoft at the time so then fast

00:13:39,120 --> 00:13:42,720
forward

00:13:39,839 --> 00:13:44,399
2012 they now said like yeah microsoft

00:13:42,720 --> 00:13:46,000
open source that's really funny

00:13:44,399 --> 00:13:47,680
and honestly until about two or three

00:13:46,000 --> 00:13:48,880
years ago so for a good five years of

00:13:47,680 --> 00:13:50,399
typescript people like

00:13:48,880 --> 00:13:52,399
yeah but it's microsoft they're not real

00:13:50,399 --> 00:13:53,680
open source people and now

00:13:52,399 --> 00:13:55,920
i think the stats are that they

00:13:53,680 --> 00:13:58,639
contribute more open source

00:13:55,920 --> 00:13:59,519
code than anyone else out there which is

00:13:58,639 --> 00:14:01,279
pretty crazy

00:13:59,519 --> 00:14:03,360
i actually read a sci-fi story back in

00:14:01,279 --> 00:14:05,199
2000 about how microsoft

00:14:03,360 --> 00:14:07,199
did everything open source and embraced

00:14:05,199 --> 00:14:08,720
linux and the i can never find this

00:14:07,199 --> 00:14:10,480
story because it was like total

00:14:08,720 --> 00:14:12,320
ridiculous science fiction from the late

00:14:10,480 --> 00:14:13,519
90s early 2000s but it's pretty much

00:14:12,320 --> 00:14:15,600
turned out to be true

00:14:13,519 --> 00:14:16,959
other than windows is not yet a linux

00:14:15,600 --> 00:14:19,040
distribution

00:14:16,959 --> 00:14:20,320
anyway it took me a few months but

00:14:19,040 --> 00:14:22,720
people just kept saying hey

00:14:20,320 --> 00:14:23,519
like um are you gonna use typescript i'm

00:14:22,720 --> 00:14:25,600
like well

00:14:23,519 --> 00:14:26,720
uh let's look at it it took us a few

00:14:25,600 --> 00:14:27,519
months to decide but we made the

00:14:26,720 --> 00:14:30,240
decision in

00:14:27,519 --> 00:14:32,320
pretty much early to like mid to late

00:14:30,240 --> 00:14:34,160
2013 to rewrite dojo

00:14:32,320 --> 00:14:36,240
and typescript which was a pretty big

00:14:34,160 --> 00:14:36,720
decision it took us five years to do

00:14:36,240 --> 00:14:38,320
that

00:14:36,720 --> 00:14:40,560
but we're very happy to do that and a

00:14:38,320 --> 00:14:42,399
couple years i guess three years ago now

00:14:40,560 --> 00:14:43,839
i met with the typescript team up in

00:14:42,399 --> 00:14:45,680
redmond and had an amazing day just

00:14:43,839 --> 00:14:47,120
talking to them and what's cool about

00:14:45,680 --> 00:14:49,760
the typescript team

00:14:47,120 --> 00:14:52,320
is they invited us in and we were

00:14:49,760 --> 00:14:54,000
treated as like peers or equals rather

00:14:52,320 --> 00:14:55,760
than like hey we're allowing you to

00:14:54,000 --> 00:14:57,120
enter our space and we will talk down to

00:14:55,760 --> 00:14:58,639
you about compilers

00:14:57,120 --> 00:15:00,639
and that's pretty rare for a team as

00:14:58,639 --> 00:15:03,680
accomplished as the typescript team

00:15:00,639 --> 00:15:05,519
is so there's it's like well how did i

00:15:03,680 --> 00:15:07,600
know well i just sort of felt like

00:15:05,519 --> 00:15:08,880
we needed interfaces in javascript and

00:15:07,600 --> 00:15:11,519
that was a big deal

00:15:08,880 --> 00:15:13,680
right and without interfaces we couldn't

00:15:11,519 --> 00:15:14,160
solve the true interoperability problem

00:15:13,680 --> 00:15:16,160
of

00:15:14,160 --> 00:15:18,079
how do i define this api and how do i

00:15:16,160 --> 00:15:20,560
replace it with something else

00:15:18,079 --> 00:15:21,760
and know that it will work as expected

00:15:20,560 --> 00:15:23,440
and we tried to do this in the early

00:15:21,760 --> 00:15:25,279
days of dojo we had this like

00:15:23,440 --> 00:15:27,120
dojo query thing that was kind of like

00:15:25,279 --> 00:15:28,639
jquery we want to be able to swap jquery

00:15:27,120 --> 00:15:29,920
out for dojo query

00:15:28,639 --> 00:15:31,440
and it never quite worked because with

00:15:29,920 --> 00:15:32,880
each jquery update they would add new

00:15:31,440 --> 00:15:34,639
features that weren't really documented

00:15:32,880 --> 00:15:37,160
but were expected by users

00:15:34,639 --> 00:15:38,320
or at least weren't easy to predict so

00:15:37,160 --> 00:15:41,199
00:15:38,320 --> 00:15:42,560
was a lot of rewrites and a lot of churn

00:15:41,199 --> 00:15:44,480
from the typescript team i think they

00:15:42,560 --> 00:15:45,839
rewrote the compiler three or four times

00:15:44,480 --> 00:15:47,040
before they really felt like this is

00:15:45,839 --> 00:15:49,360
good to go

00:15:47,040 --> 00:15:50,880
but a big turning point was july 2014

00:15:49,360 --> 00:15:52,639
when they said hey

00:15:50,880 --> 00:15:54,160
we're moving from codeplex which was

00:15:52,639 --> 00:15:56,000
kind of the microsoft fake

00:15:54,160 --> 00:15:57,759
open source thing to github which was

00:15:56,000 --> 00:15:59,040
like the bastion of where you hosted an

00:15:57,759 --> 00:16:00,639
open source project

00:15:59,040 --> 00:16:02,160
and ironically now of course microsoft

00:16:00,639 --> 00:16:04,320
owns github but again back in the day

00:16:02,160 --> 00:16:07,199
that was a big step for microsoft

00:16:04,320 --> 00:16:08,000
to not insist on having control over

00:16:07,199 --> 00:16:11,199
every aspect

00:16:08,000 --> 00:16:12,880
of their code in their project so

00:16:11,199 --> 00:16:15,040
then things progressed and honestly we

00:16:12,880 --> 00:16:18,120
struggled a bit and i think before

00:16:15,040 --> 00:16:22,079
typescript 1.4 like the typescript

00:16:18,120 --> 00:16:23,360
1.1 to 1.4 was taking a while i remember

00:16:22,079 --> 00:16:25,040
i don't remember exactly the history of

00:16:23,360 --> 00:16:26,880
maybe it was 1.5 yeah i was like

00:16:25,040 --> 00:16:28,079
but there was a lot of months between

00:16:26,880 --> 00:16:28,959
releases and things weren't getting

00:16:28,079 --> 00:16:31,120
particularly

00:16:28,959 --> 00:16:33,440
fixed particularly quickly i think i

00:16:31,120 --> 00:16:34,240
wrote a fairly nasty email to jonathan

00:16:33,440 --> 00:16:36,079
turner that i

00:16:34,240 --> 00:16:37,440
fortunately can't seem to find or

00:16:36,079 --> 00:16:38,880
basically said hey like

00:16:37,440 --> 00:16:40,399
what's up are you gonna like make

00:16:38,880 --> 00:16:42,079
progress on this thing or should we just

00:16:40,399 --> 00:16:42,880
fork it and do our own thing for dojo

00:16:42,079 --> 00:16:45,040
and i'm sure

00:16:42,880 --> 00:16:45,920
anders kind of laughs like whatever like

00:16:45,040 --> 00:16:48,079
you're really gonna

00:16:45,920 --> 00:16:49,120
maintain your own compiler but we made

00:16:48,079 --> 00:16:50,880
this big bet like hey we're going to

00:16:49,120 --> 00:16:52,399
rewrite dojo on top of typescript and

00:16:50,880 --> 00:16:53,040
then things weren't getting done quickly

00:16:52,399 --> 00:16:55,360
enough

00:16:53,040 --> 00:16:56,240
and i don't think it was because of us

00:16:55,360 --> 00:16:58,160
but

00:16:56,240 --> 00:16:59,680
around the same time basically every two

00:16:58,160 --> 00:17:00,240
to three months they started doing a

00:16:59,680 --> 00:17:02,320
release

00:17:00,240 --> 00:17:03,360
and apparently the real reason it took

00:17:02,320 --> 00:17:04,079
so long is they were doing a pretty

00:17:03,360 --> 00:17:06,319
major rewrite

00:17:04,079 --> 00:17:07,120
again of the compiler to make it really

00:17:06,319 --> 00:17:10,880
good

00:17:07,120 --> 00:17:13,360
so 1.4 and 1.6 and 1.5 all had pretty

00:17:10,880 --> 00:17:15,039
major features which are outlined there

00:17:13,360 --> 00:17:17,120
that started to make typescript possible

00:17:15,039 --> 00:17:19,120
so union types intersection types and

00:17:17,120 --> 00:17:20,480
decorators and es modules support are

00:17:19,120 --> 00:17:22,240
all pretty big things

00:17:20,480 --> 00:17:24,160
that without typescript was kind of

00:17:22,240 --> 00:17:26,240
really weird and hacky and grotty

00:17:24,160 --> 00:17:29,360
and it still took a little while before

00:17:26,240 --> 00:17:31,840
it was ready for dojo um so

00:17:29,360 --> 00:17:33,679
in the spring of 2015 angular announced

00:17:31,840 --> 00:17:34,160
they were rewriting to typescript um

00:17:33,679 --> 00:17:36,000
they had

00:17:34,160 --> 00:17:37,679
taken typescript and added basically the

00:17:36,000 --> 00:17:39,520
equivalent of decorators

00:17:37,679 --> 00:17:40,880
and they got together with the

00:17:39,520 --> 00:17:42,559
typescript team and said hey like let's

00:17:40,880 --> 00:17:43,919
just merge this and get this working

00:17:42,559 --> 00:17:45,440
together so fortunately

00:17:43,919 --> 00:17:47,360
we didn't have a fork of typescript

00:17:45,440 --> 00:17:49,760
before it really gained popularity

00:17:47,360 --> 00:17:50,480
then um through the out the next year or

00:17:49,760 --> 00:17:52,080
so

00:17:50,480 --> 00:17:54,240
various projects started adopting it

00:17:52,080 --> 00:17:54,880
like angular and typescript 2.0 came out

00:17:54,240 --> 00:17:56,559
which was

00:17:54,880 --> 00:17:58,480
kind of the point when it went when

00:17:56,559 --> 00:17:59,600
typescript went from like i have to

00:17:58,480 --> 00:18:02,400
define the type of

00:17:59,600 --> 00:18:03,520
everything to hey this constant is

00:18:02,400 --> 00:18:05,200
obviously a string

00:18:03,520 --> 00:18:06,559
don't specify that it's a string i can

00:18:05,200 --> 00:18:08,400
figure that out for you

00:18:06,559 --> 00:18:10,320
that was kind of the starting point for

00:18:08,400 --> 00:18:12,000
hey maybe we can use typescript to

00:18:10,320 --> 00:18:13,440
analyze javascript code it took a little

00:18:12,000 --> 00:18:15,120
while longer for that

00:18:13,440 --> 00:18:16,799
that throughout that time there was a

00:18:15,120 --> 00:18:19,840
lot of support

00:18:16,799 --> 00:18:21,120
for new es features and an

00:18:19,840 --> 00:18:22,160
important decision was made which was

00:18:21,120 --> 00:18:23,840
the typescript was not going to

00:18:22,160 --> 00:18:25,200
introduce any more language features

00:18:23,840 --> 00:18:27,600
which was good because they had

00:18:25,200 --> 00:18:29,520
early on added decorators and classes

00:18:27,600 --> 00:18:31,840
and a few other things

00:18:29,520 --> 00:18:32,640
and they realize it's not great to add

00:18:31,840 --> 00:18:34,720
non-type

00:18:32,640 --> 00:18:37,039
syntax to the language because

00:18:34,720 --> 00:18:38,960
eventually tc39 will pick it up

00:18:37,039 --> 00:18:40,400
but keep in mind when they started this

00:18:38,960 --> 00:18:42,000
was like three years before

00:18:40,400 --> 00:18:43,919
es6 was done and there was really no

00:18:42,000 --> 00:18:45,360
idea like hey when's this thing going to

00:18:43,919 --> 00:18:46,960
be done

00:18:45,360 --> 00:18:48,400
so they had to make some bets they had

00:18:46,960 --> 00:18:50,000
to choose some syntax

00:18:48,400 --> 00:18:51,919
and some of what they get beat up over

00:18:50,000 --> 00:18:54,240
today is like why do you have this weird

00:18:51,919 --> 00:18:54,799
secondary syntax for importing modules

00:18:54,240 --> 00:18:58,240
or whatever

00:18:54,799 --> 00:19:00,720
things like that um around uh

00:18:58,240 --> 00:19:02,160
2.2 is when we're like okay we think

00:19:00,720 --> 00:19:04,720
this is ready for dojo

00:19:02,160 --> 00:19:05,919
um obviously angular shipped before that

00:19:04,720 --> 00:19:08,559
but we felt like

00:19:05,919 --> 00:19:11,120
without um being able to do sort of

00:19:08,559 --> 00:19:12,720
compositional mix-in style behavior

00:19:11,120 --> 00:19:14,400
typescript wasn't really going to work

00:19:12,720 --> 00:19:16,799
well for our audience so

00:19:14,400 --> 00:19:18,320
and really uh the first version of dojo2

00:19:16,799 --> 00:19:19,919
that shipped i think was with typescript

00:19:18,320 --> 00:19:21,679
2.6 so again like

00:19:19,919 --> 00:19:23,440
we waited quite a while and our thought

00:19:21,679 --> 00:19:26,080
process with dojo at least was hey

00:19:23,440 --> 00:19:27,520
we don't want to impose the pain of

00:19:26,080 --> 00:19:29,360
typescript on our users we want

00:19:27,520 --> 00:19:32,320
typescript to be purely a benefit we

00:19:29,360 --> 00:19:35,200
want the ergonomics to feel right

00:19:32,320 --> 00:19:36,320
then throughout 2017 there were a lot of

00:19:35,200 --> 00:19:39,200
releases

00:19:36,320 --> 00:19:41,039
a lot of stuff happened uh we started

00:19:39,200 --> 00:19:42,320
discussing ts conf it had been five

00:19:41,039 --> 00:19:43,120
years since typescript had been

00:19:42,320 --> 00:19:44,640
announced

00:19:43,120 --> 00:19:46,880
and the growth was really starting to

00:19:44,640 --> 00:19:49,120
pick up and that was pretty interesting

00:19:46,880 --> 00:19:50,400
and then what was interesting also is as

00:19:49,120 --> 00:19:52,559
this growth picked up the typescript

00:19:50,400 --> 00:19:53,120
team just kept getting like better and

00:19:52,559 --> 00:19:54,720
better at

00:19:53,120 --> 00:19:56,320
introducing features that people were

00:19:54,720 --> 00:19:57,919
complaining about and wanted

00:19:56,320 --> 00:19:59,760
but there were a few features that we

00:19:57,919 --> 00:20:02,000
talked about when we met with kit um

00:19:59,760 --> 00:20:03,120
with kits and kelly from dojo and psycho

00:20:02,000 --> 00:20:05,679
at the time

00:20:03,120 --> 00:20:07,120
and anders and daniel and muhammad and

00:20:05,679 --> 00:20:08,240
all and ryan and all the people who are

00:20:07,120 --> 00:20:10,720
on the typescript team

00:20:08,240 --> 00:20:11,679
which was the concept of like how do you

00:20:10,720 --> 00:20:13,760
define

00:20:11,679 --> 00:20:15,039
types for things that are fairly

00:20:13,760 --> 00:20:16,640
functional like

00:20:15,039 --> 00:20:18,799
uh and this is sort of known as a class

00:20:16,640 --> 00:20:20,159
of problems as variety kinds and anders

00:20:18,799 --> 00:20:21,600
has kind of been chipping away at this

00:20:20,159 --> 00:20:23,039
problem over the years

00:20:21,600 --> 00:20:25,520
and one of the interesting things about

00:20:23,039 --> 00:20:27,679
that is that the typescript team doesn't

00:20:25,520 --> 00:20:29,280
want timescript to turn into the eclipse

00:20:27,679 --> 00:20:29,840
experience so essentially they won't

00:20:29,280 --> 00:20:32,080
introduce

00:20:29,840 --> 00:20:33,039
features that they can't make fast in an

00:20:32,080 --> 00:20:34,480
ide

00:20:33,039 --> 00:20:36,320
and that's really important because what

00:20:34,480 --> 00:20:38,559
you don't really want is

00:20:36,320 --> 00:20:39,760
hey it's just this new feature and now i

00:20:38,559 --> 00:20:42,080
can't type

00:20:39,760 --> 00:20:43,360
in a brow you know in my ide or my text

00:20:42,080 --> 00:20:45,760
editor because it's too

00:20:43,360 --> 00:20:46,400
slow to do the checking as i go so then

00:20:45,760 --> 00:20:48,559
we

00:20:46,400 --> 00:20:50,080
had the first ts conf in 2018 i helped

00:20:48,559 --> 00:20:52,559
organize that as well

00:20:50,080 --> 00:20:53,120
uh stencil was released dojo 2 was

00:20:52,559 --> 00:20:55,840
released

00:20:53,120 --> 00:20:56,799
dojo3 was released a lot more features

00:20:55,840 --> 00:21:00,080
came out

00:20:56,799 --> 00:21:01,760
3.0 came out which was a pretty big um

00:21:00,080 --> 00:21:03,039
transition for the team this was the

00:21:01,760 --> 00:21:03,600
first time typescript was really

00:21:03,039 --> 00:21:06,320
designed

00:21:03,600 --> 00:21:08,320
to handle projects that maybe inherited

00:21:06,320 --> 00:21:10,400
other typescript projects and started to

00:21:08,320 --> 00:21:11,919
have a story around monorepos

00:21:10,400 --> 00:21:13,520
and also started out incremental

00:21:11,919 --> 00:21:15,600
compilation which made it

00:21:13,520 --> 00:21:16,720
a lot faster for bigger projects as well

00:21:15,600 --> 00:21:19,440
as for

00:21:16,720 --> 00:21:20,559
transpiling the typescript compiler

00:21:19,440 --> 00:21:23,360
itself

00:21:20,559 --> 00:21:24,080
um and then throughout 2018 2019 a lot

00:21:23,360 --> 00:21:26,080
more interesting

00:21:24,080 --> 00:21:27,280
things happened view 3 started to

00:21:26,080 --> 00:21:28,320
announce that they would rewrite and

00:21:27,280 --> 00:21:29,840
type script though

00:21:28,320 --> 00:21:32,320
obviously it's still taking a while for

00:21:29,840 --> 00:21:33,600
that to happen babel seven added support

00:21:32,320 --> 00:21:35,360
for typescript but really it just

00:21:33,600 --> 00:21:37,200
removes the type definitions

00:21:35,360 --> 00:21:39,440
so it's more just a compilation step

00:21:37,200 --> 00:21:40,880
option create react app

00:21:39,440 --> 00:21:42,640
now supported typescript natively

00:21:40,880 --> 00:21:45,120
instead of having to use another project

00:21:42,640 --> 00:21:46,880
spelt 3.0 was released at the time it

00:21:45,120 --> 00:21:47,280
was authored in typescript but didn't

00:21:46,880 --> 00:21:48,880
yet

00:21:47,280 --> 00:21:50,480
like make the typescript experience

00:21:48,880 --> 00:21:51,360
particularly elegant or usable though

00:21:50,480 --> 00:21:54,080
that would be fixed

00:21:51,360 --> 00:21:55,520
um this year actually and so there's

00:21:54,080 --> 00:21:57,520
just a lot of nice

00:21:55,520 --> 00:21:59,360
improvements both and there's some

00:21:57,520 --> 00:22:02,480
improvements in like four areas like

00:21:59,360 --> 00:22:05,360
the features itself tc39 features

00:22:02,480 --> 00:22:08,000
support for things frameworks need and

00:22:05,360 --> 00:22:09,600
language services and developer utility

00:22:08,000 --> 00:22:10,960
stuff that makes the experience better

00:22:09,600 --> 00:22:12,960
and better including for playing

00:22:10,960 --> 00:22:15,760
javascript applications

00:22:12,960 --> 00:22:17,280
and so the um obviously the interesting

00:22:15,760 --> 00:22:19,440
thing about that time is that

00:22:17,280 --> 00:22:20,960
typescript interest continues to improve

00:22:19,440 --> 00:22:22,559
which is not surprising

00:22:20,960 --> 00:22:24,559
given that people are happy with it but

00:22:22,559 --> 00:22:26,960
something happened like

00:22:24,559 --> 00:22:28,159
christmas or winter holiday break

00:22:26,960 --> 00:22:31,039
whatever you want to call it

00:22:28,159 --> 00:22:32,640
for 2018 all my friends who would sort

00:22:31,039 --> 00:22:34,400
of hated typescript like all right i'm

00:22:32,640 --> 00:22:36,159
going to sit down and give this a try

00:22:34,400 --> 00:22:37,760
and i just saw all sorts of tweets all

00:22:36,159 --> 00:22:39,360
over my twitter like hey i tried

00:22:37,760 --> 00:22:41,120
typescript i kind of like it this is

00:22:39,360 --> 00:22:42,720
weird like it's actually like giving me

00:22:41,120 --> 00:22:44,400
features i never knew i needed

00:22:42,720 --> 00:22:46,480
and it was kind of another big

00:22:44,400 --> 00:22:50,640
inflection point for the language

00:22:46,480 --> 00:22:51,520
then um 2019 early 2020 happened there

00:22:50,640 --> 00:22:53,760
was another

00:22:51,520 --> 00:22:55,200
ts comp there was an attempt to have a

00:22:53,760 --> 00:22:57,120
couple tears comes around the world but

00:22:55,200 --> 00:23:00,400
covid happened so whatever

00:22:57,120 --> 00:23:01,760
um and then a lot of uh the typescript

00:23:00,400 --> 00:23:03,520
team got their first

00:23:01,760 --> 00:23:05,039
features into the language they worked

00:23:03,520 --> 00:23:06,559
on optional chaining

00:23:05,039 --> 00:23:07,760
um and then they also worked on es

00:23:06,559 --> 00:23:08,559
private fields along with the team at

00:23:07,760 --> 00:23:09,600
bloomberg

00:23:08,559 --> 00:23:11,440
and it was cool because they were

00:23:09,600 --> 00:23:12,559
finally actually like hey we're not just

00:23:11,440 --> 00:23:14,159
creating something that

00:23:12,559 --> 00:23:15,760
extends typescript we're actually in

00:23:14,159 --> 00:23:16,799
javascript but we're actually working on

00:23:15,760 --> 00:23:18,159
improving

00:23:16,799 --> 00:23:20,640
the core language itself and

00:23:18,159 --> 00:23:24,320
contributing to part of that process

00:23:20,640 --> 00:23:28,559
and then earlier um this year

00:23:24,320 --> 00:23:30,159
we uh started to see angular 10 dojo7

00:23:28,559 --> 00:23:32,240
the typescript team worked with the

00:23:30,159 --> 00:23:34,480
svelte team to make uh

00:23:32,240 --> 00:23:35,360
typescript support official for svelte

00:23:34,480 --> 00:23:37,360
users

00:23:35,360 --> 00:23:38,799
as you know end developers not just for

00:23:37,360 --> 00:23:40,400
the internal framework

00:23:38,799 --> 00:23:42,720
and then coming up next month is the

00:23:40,400 --> 00:23:44,799
first tsp online thanks covid

00:23:42,720 --> 00:23:47,279
and then typescript 4.1 has already been

00:23:44,799 --> 00:23:48,880
announced after 4.0 last month

00:23:47,279 --> 00:23:51,200
and 4.1 is going to have some really

00:23:48,880 --> 00:23:52,480
interesting stuff around templates and

00:23:51,200 --> 00:23:54,000
working with those like the native

00:23:52,480 --> 00:23:55,440
template strings and how to type those

00:23:54,000 --> 00:23:58,080
which is pretty cool

00:23:55,440 --> 00:23:59,039
so a lot has happened in seven years of

00:23:58,080 --> 00:24:00,480
typescript

00:23:59,039 --> 00:24:02,080
and a huge amount of that is due to the

00:24:00,480 --> 00:24:03,600
sort of care and attention

00:24:02,080 --> 00:24:05,440
that has been given to the typescript

00:24:03,600 --> 00:24:08,159
community and

00:24:05,440 --> 00:24:10,000
obviously scott i haven't met you

00:24:08,159 --> 00:24:11,520
before i'm sure you're amazing but

00:24:10,000 --> 00:24:12,159
obviously you're a little bit wrong on

00:24:11,520 --> 00:24:14,320
this one

00:24:12,159 --> 00:24:15,520
so that's that's the case you know and

00:24:14,320 --> 00:24:17,440
instead

00:24:15,520 --> 00:24:18,799
typescript based on which survey you

00:24:17,440 --> 00:24:20,880
look at is

00:24:18,799 --> 00:24:22,159
one of the most popular languages out

00:24:20,880 --> 00:24:25,200
there and generally

00:24:22,159 --> 00:24:26,320
more loved than javascript for whatever

00:24:25,200 --> 00:24:28,640
that means

00:24:26,320 --> 00:24:30,320
and really that happened because it's a

00:24:28,640 --> 00:24:31,120
true open source project with an open

00:24:30,320 --> 00:24:33,760
transport

00:24:31,120 --> 00:24:35,760
parent map they didn't try to replace

00:24:33,760 --> 00:24:36,880
javascript like so many other languages

00:24:35,760 --> 00:24:38,960
have tried to do

00:24:36,880 --> 00:24:41,440
instead they created a type system and

00:24:38,960 --> 00:24:42,960
interface system for javascript itself

00:24:41,440 --> 00:24:45,120
which is actually surprisingly hard to

00:24:42,960 --> 00:24:46,559
do and they don't add features that are

00:24:45,120 --> 00:24:48,240
going to provide a poor developer

00:24:46,559 --> 00:24:49,600
experience or if they do they fix them

00:24:48,240 --> 00:24:51,600
really rapidly

00:24:49,600 --> 00:24:53,200
so that to me is what made like it was

00:24:51,600 --> 00:24:55,919
all about the interfaces

00:24:53,200 --> 00:24:57,760
and seeing the need and seeing a team

00:24:55,919 --> 00:25:00,480
that was actually dedicated and focused

00:24:57,760 --> 00:25:01,520
on fixing these problems so thank you

00:25:00,480 --> 00:25:03,520
i'm dylan i

00:25:01,520 --> 00:25:05,840
do a lot of things early on i created

00:25:03,520 --> 00:25:07,600
dojo used to be ceo at psycpen now i'm

00:25:05,840 --> 00:25:10,080
running a startup called livingspec

00:25:07,600 --> 00:25:11,520
i organize the halfstack conferences and

00:25:10,080 --> 00:25:12,960
a few other things you're welcome to

00:25:11,520 --> 00:25:15,840
find me ask questions

00:25:12,960 --> 00:25:15,840
thank you so much

00:25:16,430 --> 00:25:19,499
[Music]

00:25:26,810 --> 00:25:33,200
[Music]

00:25:31,120 --> 00:25:33,200

YouTube URL: https://www.youtube.com/watch?v=mvJU-iw_B8A


