Title: The State of Web Components - Ana Cidre - CityJS Conf 2020
Publication date: 2020-10-03
Playlist: CityJS Conf 2020
Description: 
	A decade in the making, Web Components, a standardised set of technologies allowing us to create reusable web components are now widely supported in modern browsers.

In this presentation we will take a look at the overall architecture and some common use cases and patterns of Web Components and why they are now a viable option. We will also look at future features to show how powerful web components are constantly improving.

Bio
Ana is a Developer Advocate at Auth0. She has a degree in Fine Arts and a Master in International Business Economics and Management, so she is not your usual software developer. She loves to code and she especially likes Angular. As a very active member of the community, she regularly organises meetups and conferences, like the amazing ngSpain. In Spain, where she’s currently based, she’s an organiser of GDG Vigo and the founder of GalsTech, a group for women in tech from Galicia. Because she is so passionate about diversity, she has also been named a Women Techmaker Ambassador.

Chapters / Excerpts:

Agenda [00:00:00]

What are web components [00:00:43]

HTML Template [00:01:35]

Custom Elements [00:02:24]

Shadow Dom [00:04:57]

ES Modules [00:06:36] 

Building a Simple UI Button [00:07:08] 

About Me [00:10:31]

Back in 2007 [00:12:48] 

Why consider Web Components [00:14:10] 

Slots [00:20:02] 

Browser Compatibility [00:20:37] 

Frameworks and Libraries [00:20:59] 

Ready Made UI Elements [00:23:22]

Cool Projects [00:24:16] 

The Future [00:25:10]

Q&A [00:27:53] 

_________________________________________________________________

About Pusher Sessions:

We're bringing the meetup to you. With Sessions, you can watch recordings of top-notch talks from developer meetups -- wherever and whenever you want.

Meetups are a great way to learn from our peers and to keep up with the latest trends and technologies. As developers ourselves, we at Pusher wanted to bring this great content to more people... So we built Sessions. On Sessions, you can watch talks that interest you and subscribe to be notified when new content gets added.

If you run a meetup and want to get involved, kindly get in touch.

_________________________________________________________________

About Pusher:

Pusher is a hosted service with APIs, developer tools and open source libraries that greatly simplify integrating real-time functionality into web and mobile applications. 

Pusher will automatically scale when required, removing all the pain of setting up and maintaining a secure, real-time infrastructure. 

Pusher is already trusted to do so by thousands of developers and companies like GitHub, MailChimp, the Financial Times, Buffer and many more. 

Getting started takes just a few seconds: simply go to pusher.com and create a free account. Happy hacking!
Captions: 
	00:00:18,030 --> 00:00:23,199
[Music]

00:00:22,640 --> 00:00:25,199
hello

00:00:23,199 --> 00:00:26,640
and welcome to my talk the state of web

00:00:25,199 --> 00:00:28,880
components

00:00:26,640 --> 00:00:30,560
today we're going to be going on to a

00:00:28,880 --> 00:00:31,119
journey that will be looking into the

00:00:30,560 --> 00:00:33,600
past

00:00:31,119 --> 00:00:35,280
coming to the present and looking right

00:00:33,600 --> 00:00:37,120
into the future

00:00:35,280 --> 00:00:39,360
but before we do go on this crazy

00:00:37,120 --> 00:00:40,399
journey let's figure out what web

00:00:39,360 --> 00:00:42,079
components are

00:00:40,399 --> 00:00:43,600
because after all this talk is called

00:00:42,079 --> 00:00:47,280
the state of web components

00:00:43,600 --> 00:00:49,120
so what are web components

00:00:47,280 --> 00:00:51,280
web components are components that are

00:00:49,120 --> 00:00:53,360
completely platform agnostic

00:00:51,280 --> 00:00:55,280
and what does this mean well this is

00:00:53,360 --> 00:00:56,840
just a fancy way to say that they run

00:00:55,280 --> 00:00:58,320
equally well across more than one

00:00:56,840 --> 00:01:00,879
platform

00:00:58,320 --> 00:01:02,559
but their main goal is actually to have

00:01:00,879 --> 00:01:04,559
as an encapsulation

00:01:02,559 --> 00:01:05,760
so that there won't be any styling or

00:01:04,559 --> 00:01:09,840
behavioral leakages

00:01:05,760 --> 00:01:12,000
in or out we can also

00:01:09,840 --> 00:01:13,600
encapsulate them into reusable packages

00:01:12,000 --> 00:01:15,560
so that we can then share them across

00:01:13,600 --> 00:01:16,880
teams and that way we gain maximum

00:01:15,560 --> 00:01:19,040
interoperability

00:01:16,880 --> 00:01:20,799
which is really nice and we'll take a

00:01:19,040 --> 00:01:23,840
look at the benefits of that

00:01:20,799 --> 00:01:26,159
in a bit later in the talk

00:01:23,840 --> 00:01:27,920
so web components actually consist of

00:01:26,159 --> 00:01:29,759
four main technologies it's not a

00:01:27,920 --> 00:01:31,200
technology in itself

00:01:29,759 --> 00:01:32,640
and let's take a look at these four

00:01:31,200 --> 00:01:34,079
technologies to get a better

00:01:32,640 --> 00:01:36,720
understanding of how these

00:01:34,079 --> 00:01:38,000
work so we're going to start with html

00:01:36,720 --> 00:01:41,759
template

00:01:38,000 --> 00:01:44,159
html template is basically a html tag

00:01:41,759 --> 00:01:46,079
called template it's nothing new it's

00:01:44,159 --> 00:01:47,280
been around for quite a while

00:01:46,079 --> 00:01:49,520
and that's where we're gonna put the

00:01:47,280 --> 00:01:51,439
template of our web components

00:01:49,520 --> 00:01:53,439
and what we can do when we create this

00:01:51,439 --> 00:01:54,399
is that we can clone it as many times as

00:01:53,439 --> 00:01:56,479
we like

00:01:54,399 --> 00:01:57,920
and by doing so the browser is only

00:01:56,479 --> 00:02:01,119
going to pass it once

00:01:57,920 --> 00:02:03,280
which really speeds things up for us so

00:02:01,119 --> 00:02:05,119
let's take a look at an example

00:02:03,280 --> 00:02:07,119
now here what we want to achieve is an

00:02:05,119 --> 00:02:09,039
image gallery with its corresponding

00:02:07,119 --> 00:02:12,080
images inside

00:02:09,039 --> 00:02:14,239
and this is how we would do it so all

00:02:12,080 --> 00:02:16,319
we're doing is adding the first image

00:02:14,239 --> 00:02:17,360
and then we're cloning it and like i

00:02:16,319 --> 00:02:19,599
said is

00:02:17,360 --> 00:02:22,560
that the browser will only pass this

00:02:19,599 --> 00:02:24,319
once no matter how many times we do this

00:02:22,560 --> 00:02:25,920
so that's quite nice it makes it nice

00:02:24,319 --> 00:02:28,480
and speedy and we have our template

00:02:25,920 --> 00:02:31,280
ready for our web component

00:02:28,480 --> 00:02:33,680
the next technology is custom elements

00:02:31,280 --> 00:02:35,840
so sometimes i hear custom elements used

00:02:33,680 --> 00:02:36,800
interchangeably with web components and

00:02:35,840 --> 00:02:38,560
however this is

00:02:36,800 --> 00:02:39,920
quite correct because it's just one of

00:02:38,560 --> 00:02:41,920
the technologies

00:02:39,920 --> 00:02:44,480
even though it is the technology that

00:02:41,920 --> 00:02:45,599
allows us to create that tag that html

00:02:44,480 --> 00:02:49,040
tag

00:02:45,599 --> 00:02:51,200
or we can um improve it already existing

00:02:49,040 --> 00:02:54,720
ones or extend them

00:02:51,200 --> 00:02:56,560
and this is really cool because um

00:02:54,720 --> 00:02:59,200
we can actually name them however we

00:02:56,560 --> 00:03:00,800
want to so we have our own html tag and

00:02:59,200 --> 00:03:02,879
we name it how we want to we just need

00:03:00,800 --> 00:03:04,080
to remember to add a dash so the browser

00:03:02,879 --> 00:03:05,280
knows that we're talking about a web

00:03:04,080 --> 00:03:08,319
component

00:03:05,280 --> 00:03:10,560
and how will we do this well this is a

00:03:08,319 --> 00:03:12,800
very very simplified version however

00:03:10,560 --> 00:03:14,239
we'll be going in this into more depth

00:03:12,800 --> 00:03:16,800
in just a bit

00:03:14,239 --> 00:03:19,280
so what we do is we have a class and in

00:03:16,800 --> 00:03:22,239
this case it's called login button

00:03:19,280 --> 00:03:23,680
and it's extended from the html element

00:03:22,239 --> 00:03:26,799
and we do this because

00:03:23,680 --> 00:03:28,799
um that way we're inheriting

00:03:26,799 --> 00:03:30,400
all of the all of the special methods

00:03:28,799 --> 00:03:31,760
that we're getting from html elements so

00:03:30,400 --> 00:03:33,680
that we have an attribute change

00:03:31,760 --> 00:03:35,280
callback we have a connected callback

00:03:33,680 --> 00:03:37,519
again things we will look at in just a

00:03:35,280 --> 00:03:39,440
second but i just want to note that

00:03:37,519 --> 00:03:40,239
these methods are called custom element

00:03:39,440 --> 00:03:42,239
reactions

00:03:40,239 --> 00:03:45,200
so if you hear me talking about that

00:03:42,239 --> 00:03:46,640
then this is what i'm referring to

00:03:45,200 --> 00:03:49,599
and then what we're doing at the bottom

00:03:46,640 --> 00:03:52,080
is calling custom elements.define

00:03:49,599 --> 00:03:53,760
and here we have the name the login dash

00:03:52,080 --> 00:03:55,840
button that's going to be the

00:03:53,760 --> 00:03:57,920
name of our html tag and then we have

00:03:55,840 --> 00:04:00,000
the login button now

00:03:57,920 --> 00:04:01,920
so um when the browser actually sees

00:04:00,000 --> 00:04:04,720
this it's going to construct

00:04:01,920 --> 00:04:06,480
and render a new instance of the login

00:04:04,720 --> 00:04:08,799
button class

00:04:06,480 --> 00:04:10,159
however this element will not behave

00:04:08,799 --> 00:04:11,840
like a html button

00:04:10,159 --> 00:04:14,799
unless the author adds all of the

00:04:11,840 --> 00:04:16,400
necessary attributes event listeners

00:04:14,799 --> 00:04:18,000
callbacks and accessibility

00:04:16,400 --> 00:04:21,199
functionality to handle

00:04:18,000 --> 00:04:22,639
user interactions and so forth so just

00:04:21,199 --> 00:04:24,400
keep that in mind

00:04:22,639 --> 00:04:26,720
that you have to add all of this

00:04:24,400 --> 00:04:28,720
yourself

00:04:26,720 --> 00:04:30,479
and that's what it would look like so if

00:04:28,720 --> 00:04:32,160
we wanted to add it to our html this is

00:04:30,479 --> 00:04:33,759
what our html tag would look like and

00:04:32,160 --> 00:04:36,000
then we have the style attribute there

00:04:33,759 --> 00:04:38,880
with some funkiness going on

00:04:36,000 --> 00:04:39,840
um if you're not used to css custom

00:04:38,880 --> 00:04:42,000
variables

00:04:39,840 --> 00:04:42,960
don't worry we're taking a look at them

00:04:42,000 --> 00:04:44,560
in just a bit

00:04:42,960 --> 00:04:47,520
but this is what they look like and you

00:04:44,560 --> 00:04:49,840
always have to add a dash dash before

00:04:47,520 --> 00:04:51,680
one of the major benefits of creating

00:04:49,840 --> 00:04:53,360
our own html tag

00:04:51,680 --> 00:04:56,479
is that we're getting rid of that div

00:04:53,360 --> 00:04:59,919
zip that we all love so much

00:04:56,479 --> 00:05:02,160
and yeah so we won't have this anymore

00:04:59,919 --> 00:05:03,680
now our third technology is shadow dom

00:05:02,160 --> 00:05:05,440
and this is the way that we actually

00:05:03,680 --> 00:05:07,120
encapsulate our web component

00:05:05,440 --> 00:05:08,479
so that we won't have any styling or

00:05:07,120 --> 00:05:11,440
behavioral leakages in

00:05:08,479 --> 00:05:13,199
or out and i don't know about you lot

00:05:11,440 --> 00:05:13,840
but it's happened to me that even me

00:05:13,199 --> 00:05:16,400
myself

00:05:13,840 --> 00:05:18,080
i've touched the general css and boom my

00:05:16,400 --> 00:05:20,560
component has changed

00:05:18,080 --> 00:05:22,560
and we don't want that to happen do we

00:05:20,560 --> 00:05:24,880
so we add our shadow dom

00:05:22,560 --> 00:05:26,240
and what we're doing here is calling a

00:05:24,880 --> 00:05:29,440
test shadow

00:05:26,240 --> 00:05:32,720
and we have mode open now

00:05:29,440 --> 00:05:34,560
this is so that the developer who's

00:05:32,720 --> 00:05:36,400
using the web component can manipulate

00:05:34,560 --> 00:05:37,600
the structure of the component using

00:05:36,400 --> 00:05:40,560
javascript

00:05:37,600 --> 00:05:42,400
and this is beneficial because i might

00:05:40,560 --> 00:05:44,800
have created an image gallery at the

00:05:42,400 --> 00:05:46,720
beginning when i created a template and

00:05:44,800 --> 00:05:47,840
for me it's just a simple image gallery

00:05:46,720 --> 00:05:49,120
that i'm going to use in a web

00:05:47,840 --> 00:05:53,039
application

00:05:49,120 --> 00:05:55,199
however imagine someone that has maybe a

00:05:53,039 --> 00:05:56,639
native mobile app and wants to use a

00:05:55,199 --> 00:05:58,400
slider right

00:05:56,639 --> 00:06:00,000
and find this kind of image gallery

00:05:58,400 --> 00:06:02,160
that's a slider

00:06:00,000 --> 00:06:03,600
and then they're like yeah well maybe i

00:06:02,160 --> 00:06:05,840
could actually use this

00:06:03,600 --> 00:06:07,039
to be a page slider and not just an

00:06:05,840 --> 00:06:09,280
image slider

00:06:07,039 --> 00:06:10,560
well if we leave mode open we're giving

00:06:09,280 --> 00:06:12,880
them the flexibility

00:06:10,560 --> 00:06:14,240
and possibility to do so whereas if we

00:06:12,880 --> 00:06:15,600
closed it then they wouldn't be able to

00:06:14,240 --> 00:06:18,080
do that

00:06:15,600 --> 00:06:19,120
so if you can leave it open but if you

00:06:18,080 --> 00:06:20,400
really really don't want to you can

00:06:19,120 --> 00:06:24,560
always close it

00:06:20,400 --> 00:06:25,919
and you put mode closed instead of open

00:06:24,560 --> 00:06:28,000
and then on the second line what we're

00:06:25,919 --> 00:06:30,319
doing is we're simply um

00:06:28,000 --> 00:06:31,919
appending we're cloning the template

00:06:30,319 --> 00:06:33,360
cloning the template and instead of

00:06:31,919 --> 00:06:36,400
appending it to the dom

00:06:33,360 --> 00:06:37,520
appending it to the show down and last

00:06:36,400 --> 00:06:40,160
but not least we have

00:06:37,520 --> 00:06:42,240
es modules and that way we can develop

00:06:40,160 --> 00:06:45,039
our web components in a modular way so

00:06:42,240 --> 00:06:46,800
if you're used to

00:06:45,039 --> 00:06:48,479
javascript application development

00:06:46,800 --> 00:06:50,800
you're used to modules

00:06:48,479 --> 00:06:52,800
and what we can then do is define the

00:06:50,800 --> 00:06:53,919
interface of your custom element in the

00:06:52,800 --> 00:06:56,240
js5

00:06:53,919 --> 00:06:57,599
which is then included with the type

00:06:56,240 --> 00:06:59,360
module attribute

00:06:57,599 --> 00:07:00,880
and this is basically what it would look

00:06:59,360 --> 00:07:02,479
like there

00:07:00,880 --> 00:07:04,400
so now we've covered the four

00:07:02,479 --> 00:07:06,479
technologies of web components

00:07:04,400 --> 00:07:08,240
let's actually put them all together and

00:07:06,479 --> 00:07:10,080
build a web component

00:07:08,240 --> 00:07:11,919
and what we're going to do is build a

00:07:10,080 --> 00:07:14,000
simple ui

00:07:11,919 --> 00:07:15,039
button which i'm going to call log in

00:07:14,000 --> 00:07:17,360
button

00:07:15,039 --> 00:07:18,720
but you can call it whatever you like

00:07:17,360 --> 00:07:20,479
and also

00:07:18,720 --> 00:07:22,800
what it's going to do is allow the

00:07:20,479 --> 00:07:23,840
developer to change the text inside the

00:07:22,800 --> 00:07:25,199
button

00:07:23,840 --> 00:07:27,280
so that's why we have that text

00:07:25,199 --> 00:07:27,919
attribute there it's a very simple ui

00:07:27,280 --> 00:07:30,080
button

00:07:27,919 --> 00:07:32,479
but please note that web components can

00:07:30,080 --> 00:07:35,520
be much much more powerful than this

00:07:32,479 --> 00:07:37,120
this is just an example so first we're

00:07:35,520 --> 00:07:38,080
going to create our template we have

00:07:37,120 --> 00:07:40,160
some styling

00:07:38,080 --> 00:07:41,520
which we will get back to i promise you

00:07:40,160 --> 00:07:42,880
we will get to the styling

00:07:41,520 --> 00:07:44,080
but it's an important part so we're

00:07:42,880 --> 00:07:46,479
going gonna have to pause a bit there

00:07:44,080 --> 00:07:48,560
but a tiny bit later

00:07:46,479 --> 00:07:49,680
and then what we have here is our button

00:07:48,560 --> 00:07:52,800
and we have

00:07:49,680 --> 00:07:54,960
two attributes id text which is what

00:07:52,800 --> 00:07:57,599
we're going to use to change

00:07:54,960 --> 00:08:00,800
the text attribute in our web component

00:07:57,599 --> 00:08:00,800
and then the class button

00:08:01,199 --> 00:08:05,280
here is where we are defining our custom

00:08:04,479 --> 00:08:07,120
element

00:08:05,280 --> 00:08:09,919
so we're going to call the class login

00:08:07,120 --> 00:08:11,759
button it's extending the html element

00:08:09,919 --> 00:08:14,080
also what i didn't mention before is

00:08:11,759 --> 00:08:15,919
that when we extend the html element

00:08:14,080 --> 00:08:18,240
we want it we're saying that we want it

00:08:15,919 --> 00:08:20,000
to be recognized as a dom element

00:08:18,240 --> 00:08:21,840
and then we have constructor and we call

00:08:20,000 --> 00:08:22,800
super so we have access to all the apis

00:08:21,840 --> 00:08:24,479
there

00:08:22,800 --> 00:08:26,080
we then need to add our shadow dom which

00:08:24,479 --> 00:08:27,840
we've already seen so we're not going to

00:08:26,080 --> 00:08:30,240
pause too much here

00:08:27,840 --> 00:08:31,520
and then here's where we're going to get

00:08:30,240 --> 00:08:34,080
the observed

00:08:31,520 --> 00:08:36,080
attribute static prop property and it's

00:08:34,080 --> 00:08:38,159
going to return an array with the name

00:08:36,080 --> 00:08:40,719
of the components attributes

00:08:38,159 --> 00:08:42,479
which in this case is just one and then

00:08:40,719 --> 00:08:44,480
this property is asking the browser to

00:08:42,479 --> 00:08:45,680
basically be notified when the value of

00:08:44,480 --> 00:08:48,720
any of these change

00:08:45,680 --> 00:08:50,800
any of these um attributes change

00:08:48,720 --> 00:08:52,800
so if we then want to capture these

00:08:50,800 --> 00:08:54,080
notifications from the browser we can do

00:08:52,800 --> 00:08:56,720
so by implementing

00:08:54,080 --> 00:08:58,240
the attribute change callback and this

00:08:56,720 --> 00:08:59,680
is one of the methods that i was talking

00:08:58,240 --> 00:09:02,560
about that's called custom

00:08:59,680 --> 00:09:04,320
element reactions and you can implement

00:09:02,560 --> 00:09:07,440
it to handle some events in the life

00:09:04,320 --> 00:09:09,279
cycle of the component

00:09:07,440 --> 00:09:11,760
then we have the connected callback

00:09:09,279 --> 00:09:13,440
which is another custom element reaction

00:09:11,760 --> 00:09:16,399
and this is actually called when the

00:09:13,440 --> 00:09:18,959
component is added to the pages dom

00:09:16,399 --> 00:09:20,959
and what we're saying here is basically

00:09:18,959 --> 00:09:22,880
this is our template and then

00:09:20,959 --> 00:09:24,240
we're just creating a render function

00:09:22,880 --> 00:09:26,240
there

00:09:24,240 --> 00:09:28,000
now in our render this is basically what

00:09:26,240 --> 00:09:31,600
we want to render

00:09:28,000 --> 00:09:33,600
and for text we want to get the text

00:09:31,600 --> 00:09:35,360
but if there isn't anything there in the

00:09:33,600 --> 00:09:39,040
attribute then what we have

00:09:35,360 --> 00:09:41,120
is this default value which is click me

00:09:39,040 --> 00:09:42,480
and that's just in case the first option

00:09:41,120 --> 00:09:44,640
doesn't exist

00:09:42,480 --> 00:09:46,399
and that's basically it we do have some

00:09:44,640 --> 00:09:47,600
accessibility things going on there

00:09:46,399 --> 00:09:49,440
which is great

00:09:47,600 --> 00:09:51,120
um it can be improved obviously but this

00:09:49,440 --> 00:09:54,000
is just a short demo

00:09:51,120 --> 00:09:56,080
and we have our login button there so if

00:09:54,000 --> 00:09:58,320
i were to change the attribute text

00:09:56,080 --> 00:09:59,279
that i put something else instead of

00:09:58,320 --> 00:10:00,959
login

00:09:59,279 --> 00:10:02,399
that would show up on the button now if

00:10:00,959 --> 00:10:04,720
you want to play around with this code

00:10:02,399 --> 00:10:06,480
you see the stack blitz logo at the top

00:10:04,720 --> 00:10:07,519
there you can just click on that when i

00:10:06,480 --> 00:10:11,040
share my slides

00:10:07,519 --> 00:10:13,040
and then you're good to go

00:10:11,040 --> 00:10:14,320
and pretty cool huh it's all very

00:10:13,040 --> 00:10:16,399
exciting

00:10:14,320 --> 00:10:18,399
um i don't know about you but i think

00:10:16,399 --> 00:10:20,079
it's pretty cool that we can build

00:10:18,399 --> 00:10:23,200
something so native to the web

00:10:20,079 --> 00:10:24,560
and then package it up and re reuse it

00:10:23,200 --> 00:10:26,959
across teams

00:10:24,560 --> 00:10:28,880
but who am i to be talking about this or

00:10:26,959 --> 00:10:31,040
be saying any of this

00:10:28,880 --> 00:10:33,279
because i haven't introduced myself yet

00:10:31,040 --> 00:10:36,240
so i'm anna cedrey

00:10:33,279 --> 00:10:38,160
and i'm a developer advocate for awesera

00:10:36,240 --> 00:10:39,200
now all serial is a flexible drop-in

00:10:38,160 --> 00:10:41,519
solution to add

00:10:39,200 --> 00:10:43,040
authentication authorization services to

00:10:41,519 --> 00:10:44,640
your applications

00:10:43,040 --> 00:10:46,079
if you have any questions about web

00:10:44,640 --> 00:10:48,320
components about all xero

00:10:46,079 --> 00:10:49,600
or just want to say hi feel free to

00:10:48,320 --> 00:10:52,079
reach out at any time

00:10:49,600 --> 00:10:53,519
my dms are open that is my twitter

00:10:52,079 --> 00:10:55,920
handle down there

00:10:53,519 --> 00:10:57,519
um and you'll see my twitter handle

00:10:55,920 --> 00:10:58,800
appearing and disappearing throughout

00:10:57,519 --> 00:11:01,920
the slide so

00:10:58,800 --> 00:11:03,600
feel free to reach out at any time now

00:11:01,920 --> 00:11:06,000
i'm not just a developer advocate for

00:11:03,600 --> 00:11:07,040
all xero i'm also a very active member

00:11:06,000 --> 00:11:09,680
in the community

00:11:07,040 --> 00:11:11,680
i'm the founder and organizer of both ng

00:11:09,680 --> 00:11:13,600
spain and girls tech

00:11:11,680 --> 00:11:15,600
ng spain is an angular conference based

00:11:13,600 --> 00:11:16,480
here in spain but due to the current

00:11:15,600 --> 00:11:18,399
situation

00:11:16,480 --> 00:11:19,920
well there isn't going to be one this

00:11:18,399 --> 00:11:22,640
year unfortunately

00:11:19,920 --> 00:11:25,440
but we hope that by the end of next year

00:11:22,640 --> 00:11:28,399
we'll get one on board

00:11:25,440 --> 00:11:28,880
girls tech is a local group for women in

00:11:28,399 --> 00:11:31,920
tech

00:11:28,880 --> 00:11:33,600
who it's a safe place for women who are

00:11:31,920 --> 00:11:35,120
either starting in tech or who want to

00:11:33,600 --> 00:11:37,360
be promoted or

00:11:35,120 --> 00:11:38,640
just have a voice right so it's

00:11:37,360 --> 00:11:40,800
something very local

00:11:38,640 --> 00:11:42,399
it's called gals because of girls but

00:11:40,800 --> 00:11:45,839
also because of the region

00:11:42,399 --> 00:11:47,600
where i am which is galicia and tech for

00:11:45,839 --> 00:11:50,000
obvious reasons

00:11:47,600 --> 00:11:51,040
and last but not least i'm a woman um

00:11:50,000 --> 00:11:53,360
ambassador i'm

00:11:51,040 --> 00:11:54,639
techmakers ambassador sorry and that's

00:11:53,360 --> 00:11:56,800
because i'm very passionate about

00:11:54,639 --> 00:11:58,560
diversity and inclusion

00:11:56,800 --> 00:12:00,160
so yeah feel free to reach out to me at

00:11:58,560 --> 00:12:03,120
any time

00:12:00,160 --> 00:12:05,120
now i just mentioned that it's all great

00:12:03,120 --> 00:12:06,959
with components right

00:12:05,120 --> 00:12:08,839
however when i speak to people about web

00:12:06,959 --> 00:12:10,160
components i get very different

00:12:08,839 --> 00:12:12,720
reactions

00:12:10,160 --> 00:12:13,200
well actually they're not that different

00:12:12,720 --> 00:12:16,320
they go

00:12:13,200 --> 00:12:17,519
along these sort of lines of oh my gosh

00:12:16,320 --> 00:12:21,040
why are you talking to me about word

00:12:17,519 --> 00:12:22,959
components to please stop

00:12:21,040 --> 00:12:24,320
and last but not least people that don't

00:12:22,959 --> 00:12:26,000
want to hear anything about web

00:12:24,320 --> 00:12:27,680
components

00:12:26,000 --> 00:12:29,519
and a good friend of mine he's a

00:12:27,680 --> 00:12:31,680
developer advocate too mike mike

00:12:29,519 --> 00:12:34,880
hartington hi mike

00:12:31,680 --> 00:12:36,880
um he did one of those i have an xyz

00:12:34,880 --> 00:12:38,959
joke right but about web components

00:12:36,880 --> 00:12:42,000
and it's i have a web component joke but

00:12:38,959 --> 00:12:44,320
you'll probably hate it for no reason

00:12:42,000 --> 00:12:46,480
so why is this why do we have this

00:12:44,320 --> 00:12:49,920
perception or conception of

00:12:46,480 --> 00:12:52,480
welcome plans well

00:12:49,920 --> 00:12:53,320
let's go back in time let's go back to

00:12:52,480 --> 00:12:57,440
around

00:12:53,320 --> 00:12:59,920
2007 when web components first started

00:12:57,440 --> 00:13:01,360
the problem was that not all browsers

00:12:59,920 --> 00:13:03,600
were on board

00:13:01,360 --> 00:13:05,440
apple was trying to do their own thing

00:13:03,600 --> 00:13:08,480
edge would have had to make a huge

00:13:05,440 --> 00:13:10,800
effort to make this possible and also

00:13:08,480 --> 00:13:12,000
if we wanted to create them and use

00:13:10,800 --> 00:13:13,600
polyfills well

00:13:12,000 --> 00:13:15,839
the polyfills weren't great they were

00:13:13,600 --> 00:13:19,279
pretty huge we're talking about 16k

00:13:15,839 --> 00:13:20,079
compressed and also shadow cannot be

00:13:19,279 --> 00:13:23,440
implemented

00:13:20,079 --> 00:13:25,920
as expected so

00:13:23,440 --> 00:13:26,800
all in all developers had a bad

00:13:25,920 --> 00:13:29,920
experience

00:13:26,800 --> 00:13:32,560
and they tried it didn't like it

00:13:29,920 --> 00:13:35,440
comic books tried again that's normally

00:13:32,560 --> 00:13:38,240
the kind of response i get

00:13:35,440 --> 00:13:40,240
but if we come back to the present to

00:13:38,240 --> 00:13:42,240
today

00:13:40,240 --> 00:13:44,720
that little rabbit or big rabbit in this

00:13:42,240 --> 00:13:47,120
case has news for you

00:13:44,720 --> 00:13:48,000
and it's that browsers have adopted web

00:13:47,120 --> 00:13:51,519
components

00:13:48,000 --> 00:13:54,720
we are not in the situation we were

00:13:51,519 --> 00:13:56,800
back in 2007. if you don't believe me

00:13:54,720 --> 00:13:58,639
take a look at this chat all major

00:13:56,800 --> 00:14:01,680
browsers are fully stable

00:13:58,639 --> 00:14:05,199
and edges too because they adopted

00:14:01,680 --> 00:14:07,440
chromium so there's no need to worry

00:14:05,199 --> 00:14:10,800
browsers are stable on all four

00:14:07,440 --> 00:14:12,880
technologies that we talked about

00:14:10,800 --> 00:14:14,720
but why should i even consider web

00:14:12,880 --> 00:14:16,079
components like i'm happy with my

00:14:14,720 --> 00:14:19,199
framework why should i

00:14:16,079 --> 00:14:21,199
go and learn something else well we'll

00:14:19,199 --> 00:14:23,120
get into the learning part later because

00:14:21,199 --> 00:14:26,320
it's not a big jump

00:14:23,120 --> 00:14:28,560
but i'm going to tell you why i think

00:14:26,320 --> 00:14:31,680
you should learn about web components

00:14:28,560 --> 00:14:33,040
and one of the biggest benefits from

00:14:31,680 --> 00:14:34,800
work components is that they're

00:14:33,040 --> 00:14:36,639
interoperable

00:14:34,800 --> 00:14:38,079
remember how earlier at the beginning i

00:14:36,639 --> 00:14:40,160
said that we can like

00:14:38,079 --> 00:14:42,639
package up our work components into

00:14:40,160 --> 00:14:44,720
reusable packages and encapsulate them

00:14:42,639 --> 00:14:48,320
and share them across teams

00:14:44,720 --> 00:14:49,040
well imagine that let's give you an

00:14:48,320 --> 00:14:52,160
example

00:14:49,040 --> 00:14:54,880
imagine that you work in a big company

00:14:52,160 --> 00:14:55,920
where there or maybe you do and yeah

00:14:54,880 --> 00:14:59,120
let's just

00:14:55,920 --> 00:15:00,880
go with the story um it's a big company

00:14:59,120 --> 00:15:02,720
where there are several product teams

00:15:00,880 --> 00:15:05,360
right and each product team

00:15:02,720 --> 00:15:07,040
has their own product obviously and we

00:15:05,360 --> 00:15:09,199
have a product team that's using

00:15:07,040 --> 00:15:10,800
angular we have another one using vue

00:15:09,199 --> 00:15:13,519
and last but not least we have one

00:15:10,800 --> 00:15:15,839
that's used in svelt

00:15:13,519 --> 00:15:17,600
however we need to create a whole new

00:15:15,839 --> 00:15:19,600
login process

00:15:17,600 --> 00:15:21,440
because we do for all of the product

00:15:19,600 --> 00:15:24,320
teams because we want the same user

00:15:21,440 --> 00:15:26,720
experience on this login process

00:15:24,320 --> 00:15:29,040
so what do we do are we going to really

00:15:26,720 --> 00:15:31,120
create this login process three times

00:15:29,040 --> 00:15:34,720
because even though we want to have

00:15:31,120 --> 00:15:37,199
like the same user experience

00:15:34,720 --> 00:15:37,759
well that would be three times the

00:15:37,199 --> 00:15:39,680
headaches

00:15:37,759 --> 00:15:42,160
three times sleepless nights and so

00:15:39,680 --> 00:15:44,079
forth if we were to create it was a web

00:15:42,160 --> 00:15:46,160
component however we'll just have to

00:15:44,079 --> 00:15:47,600
create it once and then share it across

00:15:46,160 --> 00:15:50,480
teams

00:15:47,600 --> 00:15:52,079
and i think that's so powerful and if

00:15:50,480 --> 00:15:52,880
you want to know the framework you're

00:15:52,079 --> 00:15:55,920
using

00:15:52,880 --> 00:15:56,720
actually adopts or has adopted web

00:15:55,920 --> 00:15:58,160
components

00:15:56,720 --> 00:16:00,720
you can do so by checking out this

00:15:58,160 --> 00:16:02,560
website custom elements everywhere

00:16:00,720 --> 00:16:04,480
it's made by rob dodson who was on the

00:16:02,560 --> 00:16:06,320
pilot polymer team

00:16:04,480 --> 00:16:09,440
and it tells you basically the

00:16:06,320 --> 00:16:12,320
percentage of how web component friendly

00:16:09,440 --> 00:16:13,759
your framework is so it's not like you

00:16:12,320 --> 00:16:16,240
have to leave your framework

00:16:13,759 --> 00:16:18,800
you can also create web components and

00:16:16,240 --> 00:16:20,800
add them to the framework of your choice

00:16:18,800 --> 00:16:22,320
also they have a much better performance

00:16:20,800 --> 00:16:23,839
because they're using things that are

00:16:22,320 --> 00:16:26,480
native to the browser they're using

00:16:23,839 --> 00:16:29,199
technologies that exist there already

00:16:26,480 --> 00:16:30,800
and you can see that depending on which

00:16:29,199 --> 00:16:32,560
library you choose to work with to

00:16:30,800 --> 00:16:34,240
create these web components because yes

00:16:32,560 --> 00:16:35,680
you don't have to create them in vanilla

00:16:34,240 --> 00:16:37,199
javascript we'll take a look at the

00:16:35,680 --> 00:16:38,720
libraries at the end

00:16:37,199 --> 00:16:41,120
but there are many libraries out there

00:16:38,720 --> 00:16:42,800
and depending on what library you use

00:16:41,120 --> 00:16:44,639
well the bundle size will be bigger or

00:16:42,800 --> 00:16:45,680
smaller and this is a good chart that

00:16:44,639 --> 00:16:47,199
shows it to you

00:16:45,680 --> 00:16:49,440
if you want to see more information on

00:16:47,199 --> 00:16:50,720
this i really go and i really recommend

00:16:49,440 --> 00:16:52,639
that you go and check out this source

00:16:50,720 --> 00:16:53,759
which i put there

00:16:52,639 --> 00:16:55,759
and we've already talked about

00:16:53,759 --> 00:16:58,000
encapsulation we don't want

00:16:55,759 --> 00:16:58,880
leaks but when we talk about

00:16:58,000 --> 00:17:00,880
encapsulation

00:16:58,880 --> 00:17:02,240
it reminds of us of something that i

00:17:00,880 --> 00:17:05,600
wanted to talk to you all about

00:17:02,240 --> 00:17:08,400
styling right so styling is so important

00:17:05,600 --> 00:17:10,079
because i might want an orange button

00:17:08,400 --> 00:17:11,600
but maybe you want a green button

00:17:10,079 --> 00:17:13,199
or maybe you want to style it however

00:17:11,600 --> 00:17:14,000
you may want you might even want a round

00:17:13,199 --> 00:17:17,039
button and go

00:17:14,000 --> 00:17:18,400
totally insane well there's ways to go

00:17:17,039 --> 00:17:20,880
about this

00:17:18,400 --> 00:17:22,400
and there's two ways first with css

00:17:20,880 --> 00:17:25,240
custom properties which was the

00:17:22,400 --> 00:17:28,640
preferred way because of the browser

00:17:25,240 --> 00:17:30,240
compatibility however um in a moment

00:17:28,640 --> 00:17:31,760
we'll see our second option and we'll

00:17:30,240 --> 00:17:33,679
also see that browsers are fully on

00:17:31,760 --> 00:17:36,240
board there too

00:17:33,679 --> 00:17:37,280
so benefits of using css custom

00:17:36,240 --> 00:17:40,480
properties

00:17:37,280 --> 00:17:42,000
is that you can um

00:17:40,480 --> 00:17:44,160
for example in the styling of my

00:17:42,000 --> 00:17:45,919
template i have a login button

00:17:44,160 --> 00:17:47,200
and then i have all the properties that

00:17:45,919 --> 00:17:49,919
i need and then i

00:17:47,200 --> 00:17:51,520
say which properties can be accessed to

00:17:49,919 --> 00:17:53,280
the outside to the user of the web

00:17:51,520 --> 00:17:55,039
component to the developer of the work

00:17:53,280 --> 00:17:57,440
component

00:17:55,039 --> 00:17:59,440
and you do so by calling var and then

00:17:57,440 --> 00:18:01,360
you open parentheses put the name of the

00:17:59,440 --> 00:18:03,280
variable css variable there

00:18:01,360 --> 00:18:04,799
always starting with a dash dash and

00:18:03,280 --> 00:18:07,440
then the default value

00:18:04,799 --> 00:18:09,760
there and that's basically it and then

00:18:07,440 --> 00:18:11,919
when the user uses the web component

00:18:09,760 --> 00:18:13,200
they call in the style that funkiness

00:18:11,919 --> 00:18:16,720
that we saw earlier

00:18:13,200 --> 00:18:17,360
dash dash background dash color or dash

00:18:16,720 --> 00:18:21,360
dash

00:18:17,360 --> 00:18:23,600
font dash wait um i just want to note

00:18:21,360 --> 00:18:25,039
that these are names that i gave them

00:18:23,600 --> 00:18:26,640
you can call them whatever you think you

00:18:25,039 --> 00:18:29,360
like but please make sure that they're

00:18:26,640 --> 00:18:31,919
readable and understandable

00:18:29,360 --> 00:18:32,480
second option is css shadow parts with

00:18:31,919 --> 00:18:35,760
the part

00:18:32,480 --> 00:18:37,840
sudo element and browsers

00:18:35,760 --> 00:18:39,520
are now on board which is really really

00:18:37,840 --> 00:18:41,280
cool because it's going to allow you to

00:18:39,520 --> 00:18:42,640
theme and style your web components

00:18:41,280 --> 00:18:44,880
accordingly

00:18:42,640 --> 00:18:46,240
so the cool thing about this is that oh

00:18:44,880 --> 00:18:46,880
by the way i forgot to mention the

00:18:46,240 --> 00:18:48,720
source

00:18:46,880 --> 00:18:50,400
really good article if you want to go

00:18:48,720 --> 00:18:51,919
more in depth about theming

00:18:50,400 --> 00:18:53,919
you should definitely check out this

00:18:51,919 --> 00:18:57,039
article by monica

00:18:53,919 --> 00:18:59,760
okay so we saw a simple button but it

00:18:57,039 --> 00:19:01,919
could be so much more it could be a form

00:18:59,760 --> 00:19:03,679
it could be a card and there might be

00:19:01,919 --> 00:19:05,919
certain parts of the web component that

00:19:03,679 --> 00:19:09,600
you want people to be able to style

00:19:05,919 --> 00:19:13,520
and other parts not for whatever reason

00:19:09,600 --> 00:19:15,200
well this can be done through the part

00:19:13,520 --> 00:19:16,720
pseudo element so you call the part

00:19:15,200 --> 00:19:17,520
attribute in your template and then you

00:19:16,720 --> 00:19:19,600
give it a name

00:19:17,520 --> 00:19:21,039
and then what the developer does is in

00:19:19,600 --> 00:19:23,440
the style sheet

00:19:21,039 --> 00:19:24,320
they call the web component the part

00:19:23,440 --> 00:19:26,720
pseudo element

00:19:24,320 --> 00:19:28,240
and the name of the part and then they

00:19:26,720 --> 00:19:30,160
can add whatever pseudo

00:19:28,240 --> 00:19:32,559
classes they want there like hover or

00:19:30,160 --> 00:19:35,840
placeholder or whatever they need

00:19:32,559 --> 00:19:38,559
and even though i mentioned that

00:19:35,840 --> 00:19:38,960
this would be more beneficial in a form

00:19:38,559 --> 00:19:41,919
or

00:19:38,960 --> 00:19:43,679
a card or something a bit more complex

00:19:41,919 --> 00:19:45,120
than just a button you can also do it on

00:19:43,679 --> 00:19:47,760
the button so see

00:19:45,120 --> 00:19:48,559
on our login button we're calling the

00:19:47,760 --> 00:19:50,960
part

00:19:48,559 --> 00:19:51,600
attribute and then we have the custom

00:19:50,960 --> 00:19:55,120
button

00:19:51,600 --> 00:19:56,880
name and then in the styling we have the

00:19:55,120 --> 00:19:59,200
login button element

00:19:56,880 --> 00:20:00,640
the part pseudo element and the name and

00:19:59,200 --> 00:20:02,640
then we can change whatever properties

00:20:00,640 --> 00:20:05,440
we want to there

00:20:02,640 --> 00:20:06,159
another cool thing are slots so this

00:20:05,440 --> 00:20:08,400
will give

00:20:06,159 --> 00:20:10,000
again more flexibility to the user of

00:20:08,400 --> 00:20:11,200
the developer the user of the web

00:20:10,000 --> 00:20:13,679
component

00:20:11,200 --> 00:20:15,760
to decide whether they want to use this

00:20:13,679 --> 00:20:18,080
part of the web component or not

00:20:15,760 --> 00:20:20,240
and it acts like a placeholder so all we

00:20:18,080 --> 00:20:20,960
need to do is inside our template add a

00:20:20,240 --> 00:20:22,720
slot

00:20:20,960 --> 00:20:24,240
remember to give it a name because

00:20:22,720 --> 00:20:26,799
otherwise the browser the browser is

00:20:24,240 --> 00:20:30,400
just going to choose it randomly

00:20:26,799 --> 00:20:32,880
and then the developer what they do

00:20:30,400 --> 00:20:34,960
is they then add the slot attribute the

00:20:32,880 --> 00:20:35,840
name of the slot and use it if they want

00:20:34,960 --> 00:20:37,760
to

00:20:35,840 --> 00:20:39,520
that's pretty cool and i'm just going to

00:20:37,760 --> 00:20:41,520
go back to browser compatibility one

00:20:39,520 --> 00:20:42,240
more time because i'm so happy about

00:20:41,520 --> 00:20:43,919
this

00:20:42,240 --> 00:20:45,919
and you should all be very excited about

00:20:43,919 --> 00:20:48,720
this too

00:20:45,919 --> 00:20:50,720
and yes internet explorer still exists

00:20:48,720 --> 00:20:51,760
not for long i've heard which is great

00:20:50,720 --> 00:20:54,320
news

00:20:51,760 --> 00:20:56,240
however polyfills do exist for internet

00:20:54,320 --> 00:20:57,520
explorer and they're very very tiny

00:20:56,240 --> 00:20:59,919
nothing to worry about they work

00:20:57,520 --> 00:21:02,559
fantastically

00:20:59,919 --> 00:21:04,000
right frameworks and libraries so i

00:21:02,559 --> 00:21:07,600
mentioned before

00:21:04,000 --> 00:21:10,559
that um i created the web component

00:21:07,600 --> 00:21:12,559
with vanilla javascript however we can

00:21:10,559 --> 00:21:13,520
create it with a library or a framework

00:21:12,559 --> 00:21:16,559
of our choice

00:21:13,520 --> 00:21:19,520
it's not like we have to do it with

00:21:16,559 --> 00:21:21,760
vanilla javascript and here are for a

00:21:19,520 --> 00:21:24,080
few libraries out there for you

00:21:21,760 --> 00:21:25,679
so we have lit element we have hybrids

00:21:24,080 --> 00:21:27,120
we have stencil which is really really

00:21:25,679 --> 00:21:30,159
good by the way

00:21:27,120 --> 00:21:32,240
polymer skjs slim js

00:21:30,159 --> 00:21:33,200
if you're an angular developer you have

00:21:32,240 --> 00:21:36,320
angular elements

00:21:33,200 --> 00:21:38,400
vue.js also allows you to do so but just

00:21:36,320 --> 00:21:39,840
to get an idea of what benefits you get

00:21:38,400 --> 00:21:41,840
from using a library

00:21:39,840 --> 00:21:43,360
i just want to take a moment to look at

00:21:41,840 --> 00:21:45,520
the element one

00:21:43,360 --> 00:21:47,200
because lit html and lit element are

00:21:45,520 --> 00:21:48,960
actually the future of polymer which is

00:21:47,200 --> 00:21:50,880
very exciting

00:21:48,960 --> 00:21:52,400
and actually the new official material

00:21:50,880 --> 00:21:54,960
design web components are

00:21:52,400 --> 00:21:56,080
based on lit element so that's quite

00:21:54,960 --> 00:21:57,520
nice

00:21:56,080 --> 00:22:00,159
now you don't need to see this code

00:21:57,520 --> 00:22:02,159
don't worry um i know you can't read it

00:22:00,159 --> 00:22:03,919
it's not like i want you to read it i

00:22:02,159 --> 00:22:05,360
just want you to see the size like the

00:22:03,919 --> 00:22:07,520
amount of lines of code

00:22:05,360 --> 00:22:09,760
there are now this was my button from

00:22:07,520 --> 00:22:12,080
before which i already showed you

00:22:09,760 --> 00:22:12,960
now if i were to recreate this the one

00:22:12,080 --> 00:22:16,240
that was built in

00:22:12,960 --> 00:22:16,559
vanilla js positively create this with

00:22:16,240 --> 00:22:18,960
lit

00:22:16,559 --> 00:22:20,640
element this would be the size this

00:22:18,960 --> 00:22:21,360
would be the amount of lines of code

00:22:20,640 --> 00:22:23,039
there are

00:22:21,360 --> 00:22:24,960
so you can see that it has reduced

00:22:23,039 --> 00:22:27,120
dramatically

00:22:24,960 --> 00:22:28,000
and there are much more benefits

00:22:27,120 --> 00:22:31,120
obviously

00:22:28,000 --> 00:22:35,440
so we have automatic render updates

00:22:31,120 --> 00:22:38,159
we have um remember earlier i said that

00:22:35,440 --> 00:22:38,960
the learning curve isn't steep if you're

00:22:38,159 --> 00:22:40,799
coming from

00:22:38,960 --> 00:22:42,799
like other frameworks well especially if

00:22:40,799 --> 00:22:45,760
you come from like react

00:22:42,799 --> 00:22:47,679
it's kind of like that so it has a jss

00:22:45,760 --> 00:22:50,240
jsx like

00:22:47,679 --> 00:22:51,600
um it's quite nice so it's not like

00:22:50,240 --> 00:22:53,520
you're gonna have to learn something

00:22:51,600 --> 00:22:55,600
completely different

00:22:53,520 --> 00:22:56,720
there's also no virtual dom except for

00:22:55,600 --> 00:23:00,080
lists so

00:22:56,720 --> 00:23:01,840
much less memory usage and makes things

00:23:00,080 --> 00:23:03,840
a lot faster

00:23:01,840 --> 00:23:05,360
it can work with bible and typescript if

00:23:03,840 --> 00:23:07,039
you're used to those and want to work

00:23:05,360 --> 00:23:09,120
with those that's totally okay

00:23:07,039 --> 00:23:11,360
there's no build step required and

00:23:09,120 --> 00:23:12,799
they're very tiny and light which we saw

00:23:11,360 --> 00:23:14,799
in the chart earlier

00:23:12,799 --> 00:23:16,080
but when i show the car um the slides

00:23:14,799 --> 00:23:18,159
you can

00:23:16,080 --> 00:23:19,760
you can then click on the source and dig

00:23:18,159 --> 00:23:22,880
in deeper to this

00:23:19,760 --> 00:23:24,799
so that's really really nice now

00:23:22,880 --> 00:23:26,480
if you don't want to create your own web

00:23:24,799 --> 00:23:28,480
component from scratch you just want to

00:23:26,480 --> 00:23:30,720
use something that's out there

00:23:28,480 --> 00:23:32,080
there are many many ready-made ui

00:23:30,720 --> 00:23:33,679
elements for you

00:23:32,080 --> 00:23:35,039
so there are libraries of them there's

00:23:33,679 --> 00:23:35,679
wired elements which is quite nice

00:23:35,039 --> 00:23:37,360
because like

00:23:35,679 --> 00:23:40,880
hand-drawn work components which is

00:23:37,360 --> 00:23:43,760
quite nice ionic is fantastic

00:23:40,880 --> 00:23:46,480
um you should really go try them out

00:23:43,760 --> 00:23:48,080
there's lion web components too

00:23:46,480 --> 00:23:50,240
actually we're going to take a look at

00:23:48,080 --> 00:23:50,559
ing in just a second because i want to

00:23:50,240 --> 00:23:52,240
go

00:23:50,559 --> 00:23:54,400
on to talking about companies that are

00:23:52,240 --> 00:23:56,400
actually adopting web components

00:23:54,400 --> 00:23:57,919
and there's a bunch more out there but

00:23:56,400 --> 00:23:59,440
here are just a few which i think you

00:23:57,919 --> 00:24:02,640
might recognize

00:23:59,440 --> 00:24:04,080
and you can see i want to talk about ing

00:24:02,640 --> 00:24:05,760
because i know that they're using web

00:24:04,080 --> 00:24:07,840
components for their features

00:24:05,760 --> 00:24:09,279
so this really emphasizes the fact that

00:24:07,840 --> 00:24:11,120
they don't need to be ui

00:24:09,279 --> 00:24:12,960
elements they can be so much more they

00:24:11,120 --> 00:24:15,360
are so powerful

00:24:12,960 --> 00:24:16,880
and to prove to you how powerful and

00:24:15,360 --> 00:24:18,799
cool they can be i just want to show you

00:24:16,880 --> 00:24:21,360
a few cool projects

00:24:18,799 --> 00:24:23,120
so we have the model viewer here and

00:24:21,360 --> 00:24:24,960
this is a way to easily display

00:24:23,120 --> 00:24:28,880
interactive 3d models

00:24:24,960 --> 00:24:30,480
on the web and an art in ar

00:24:28,880 --> 00:24:32,000
so this is really cool and it's a web

00:24:30,480 --> 00:24:35,360
component we

00:24:32,000 --> 00:24:37,919
also have medical imaging use cases

00:24:35,360 --> 00:24:40,400
we have this css doodle which allows you

00:24:37,919 --> 00:24:43,840
to create css patterns

00:24:40,400 --> 00:24:46,720
we have a color picker and we have

00:24:43,840 --> 00:24:47,760
this sware kit that now has a web

00:24:46,720 --> 00:24:49,760
component that can be

00:24:47,760 --> 00:24:50,799
implemented inside of their partner's

00:24:49,760 --> 00:24:52,960
hybrid apps

00:24:50,799 --> 00:24:53,919
and it's built with sensor js and ionic

00:24:52,960 --> 00:24:56,000
framework

00:24:53,919 --> 00:24:57,440
and these are just a few of many many

00:24:56,000 --> 00:25:01,279
many that are out there

00:24:57,440 --> 00:25:02,720
now i did this cool tweet where um

00:25:01,279 --> 00:25:04,400
if you look at the replies you'll see

00:25:02,720 --> 00:25:05,440
some of the amazing web components that

00:25:04,400 --> 00:25:08,080
are out there

00:25:05,440 --> 00:25:08,480
again this is just a few but feel free

00:25:08,080 --> 00:25:11,279
to

00:25:08,480 --> 00:25:11,760
take a look right so we've been to the

00:25:11,279 --> 00:25:14,480
past

00:25:11,760 --> 00:25:14,960
we went to 2007 we came back to today we

00:25:14,480 --> 00:25:18,000
see that

00:25:14,960 --> 00:25:21,039
web components today are awesome but

00:25:18,000 --> 00:25:23,120
what does the future look like so

00:25:21,039 --> 00:25:24,799
one thing i didn't mention was that

00:25:23,120 --> 00:25:25,840
these are elements these are

00:25:24,799 --> 00:25:27,840
technologies

00:25:25,840 --> 00:25:29,279
that are native to the browser so

00:25:27,840 --> 00:25:34,080
they're pretty

00:25:29,279 --> 00:25:35,919
we can we say future safe proof

00:25:34,080 --> 00:25:37,600
maybe maybe not you never know what the

00:25:35,919 --> 00:25:40,960
browser's in javascript

00:25:37,600 --> 00:25:42,799
but it's looking good but there are some

00:25:40,960 --> 00:25:44,799
cool things coming to web components and

00:25:42,799 --> 00:25:47,919
one of them is the custom state

00:25:44,799 --> 00:25:49,120
pseudo class so this feature lets custom

00:25:47,919 --> 00:25:52,400
elements explode

00:25:49,120 --> 00:25:56,080
expose their state via the state css

00:25:52,400 --> 00:25:58,240
pseudo class now um for example

00:25:56,080 --> 00:26:00,720
there are some four contra form controls

00:25:58,240 --> 00:26:02,320
that have an invalid state right

00:26:00,720 --> 00:26:04,880
and these are exposed through the

00:26:02,320 --> 00:26:08,000
invalid state pseudo class

00:26:04,880 --> 00:26:08,400
so just like bulletin elements just like

00:26:08,000 --> 00:26:10,880
this

00:26:08,400 --> 00:26:12,960
invalid pseudo class custom elements may

00:26:10,880 --> 00:26:14,240
also have states and web authors want to

00:26:12,960 --> 00:26:15,840
expose these states

00:26:14,240 --> 00:26:17,360
in a similar fashion to built-in

00:26:15,840 --> 00:26:19,039
elements and this will allow you to

00:26:17,360 --> 00:26:21,840
produce a

00:26:19,039 --> 00:26:23,360
declarative shutdown so this is going to

00:26:21,840 --> 00:26:25,200
be a declarative api

00:26:23,360 --> 00:26:27,600
and it's going to allow the creation of

00:26:25,200 --> 00:26:29,840
the shadow root or shadow dom using only

00:26:27,600 --> 00:26:31,679
html and no javascript

00:26:29,840 --> 00:26:33,919
it's also going to allow that web

00:26:31,679 --> 00:26:35,919
components that use the shadow dom

00:26:33,919 --> 00:26:37,520
to also make use of server-side

00:26:35,919 --> 00:26:40,720
rendering which i know is a

00:26:37,520 --> 00:26:43,520
big thing so that's really nice

00:26:40,720 --> 00:26:45,679
and last but not least um form

00:26:43,520 --> 00:26:47,120
participation api

00:26:45,679 --> 00:26:49,200
and this is going to allow custom

00:26:47,120 --> 00:26:50,720
element authors to provide integrated

00:26:49,200 --> 00:26:53,840
form controls that behave

00:26:50,720 --> 00:26:56,000
similarly to built-in elements and

00:26:53,840 --> 00:26:58,080
that way we're going to reduce the need

00:26:56,000 --> 00:26:59,360
for redundant runtime and load time

00:26:58,080 --> 00:27:01,520
infrastructure that

00:26:59,360 --> 00:27:03,200
exists only to replicate what browsers

00:27:01,520 --> 00:27:05,600
already do

00:27:03,200 --> 00:27:07,520
so as you can see the future is looking

00:27:05,600 --> 00:27:09,279
pretty pretty bright for web components

00:27:07,520 --> 00:27:12,799
and you can check these three out

00:27:09,279 --> 00:27:14,320
um on on them on github because they're

00:27:12,799 --> 00:27:16,960
really really cool

00:27:14,320 --> 00:27:18,480
and i think they should be tested and

00:27:16,960 --> 00:27:19,679
they i know they're coming out pretty

00:27:18,480 --> 00:27:22,640
soon

00:27:19,679 --> 00:27:23,919
so if you have any questions about web

00:27:22,640 --> 00:27:27,039
components or

00:27:23,919 --> 00:27:28,720
just want to say hi um please feel free

00:27:27,039 --> 00:27:31,440
to reach out

00:27:28,720 --> 00:27:33,200
my dms are open and thank you so much

00:27:31,440 --> 00:27:34,960
it's been a real honor speaking here

00:27:33,200 --> 00:27:48,500
today at ctjs

00:27:34,960 --> 00:27:53,360
so thank you

00:27:48,500 --> 00:27:54,480
[Music]

00:27:53,360 --> 00:27:57,520
thank you very much that talk that was

00:27:54,480 --> 00:27:59,679
very useful very interesting

00:27:57,520 --> 00:28:00,799
how'd you like it we have a few

00:27:59,679 --> 00:28:02,559
questions for you

00:28:00,799 --> 00:28:03,679
already i'll know they're the previous

00:28:02,559 --> 00:28:04,720
questions we'll wait for the new

00:28:03,679 --> 00:28:06,080
questions to come in

00:28:04,720 --> 00:28:08,320
if you have any questions please add

00:28:06,080 --> 00:28:09,840
them into the q a channel

00:28:08,320 --> 00:28:12,799
and i have a few questions for you if

00:28:09,840 --> 00:28:14,880
you don't mind though hannah um

00:28:12,799 --> 00:28:16,000
zero are you using web components or is

00:28:14,880 --> 00:28:17,120
it is it something you're playing with

00:28:16,000 --> 00:28:18,159
through work or is it like a

00:28:17,120 --> 00:28:21,279
just a personal thing you're playing

00:28:18,159 --> 00:28:24,559
with them it's just a personal thing

00:28:21,279 --> 00:28:27,840
i'm i've been trying to convince my team

00:28:24,559 --> 00:28:31,919
but it's not that easy we're very much

00:28:27,840 --> 00:28:35,840
um react focused so okay

00:28:31,919 --> 00:28:37,520
yeah okay we've got a question coming in

00:28:35,840 --> 00:28:39,440
is it possible to utilize styled

00:28:37,520 --> 00:28:41,679
components for styling web components or

00:28:39,440 --> 00:28:41,679
is it

00:28:42,159 --> 00:28:45,919
well you can i know there's i think it's

00:28:45,200 --> 00:28:48,000
called

00:28:45,919 --> 00:28:50,480
masquerades out there which allows you

00:28:48,000 --> 00:28:54,000
to do something very similar

00:28:50,480 --> 00:28:54,799
um i will i i recently saw an article on

00:28:54,000 --> 00:28:56,720
that so when you

00:28:54,799 --> 00:28:59,279
bring that up i'll try and find that and

00:28:56,720 --> 00:29:02,559
post that and the chat later

00:28:59,279 --> 00:29:04,799
obviously when you have stuff like

00:29:02,559 --> 00:29:06,399
i was talking about the earlier the the

00:29:04,799 --> 00:29:09,520
um css

00:29:06,399 --> 00:29:12,960
um sorry custom

00:29:09,520 --> 00:29:14,960
the css custom variables um

00:29:12,960 --> 00:29:16,080
you don't really need to do that because

00:29:14,960 --> 00:29:19,440
it kind of like

00:29:16,080 --> 00:29:21,279
overloads your component so i would

00:29:19,440 --> 00:29:23,840
really go with just

00:29:21,279 --> 00:29:24,840
what what i talked about my talk so css

00:29:23,840 --> 00:29:29,600
custom

00:29:24,840 --> 00:29:29,600
variables and also the um

00:29:30,000 --> 00:29:33,600
the theming i was talking about back

00:29:31,679 --> 00:29:35,039
there too so

00:29:33,600 --> 00:29:37,360
the built-in browser stuff essentially

00:29:35,039 --> 00:29:38,880
is yeah

00:29:37,360 --> 00:29:40,880
it's best to keep things simple and not

00:29:38,880 --> 00:29:43,919
over engineer right that way you

00:29:40,880 --> 00:29:46,320
also keep things small and fast so

00:29:43,919 --> 00:29:47,679
absolutely i like to keep them simple

00:29:46,320 --> 00:29:49,440
okay we've got another

00:29:47,679 --> 00:29:51,120
um question what's the coolest weirdest

00:29:49,440 --> 00:29:52,799
or most pointless use of components

00:29:51,120 --> 00:29:54,960
you've seen

00:29:52,799 --> 00:29:56,799
oh that's a good one the coolest is

00:29:54,960 --> 00:30:00,799
definitely the one i showed you first

00:29:56,799 --> 00:30:02,799
um the webvr one of the google

00:30:00,799 --> 00:30:04,000
the little astronaut thingy there that

00:30:02,799 --> 00:30:07,279
you can see

00:30:04,000 --> 00:30:11,200
that's really cool um

00:30:07,279 --> 00:30:15,120
weirdest huh

00:30:11,200 --> 00:30:18,240
i wouldn't i don't actually know and

00:30:15,120 --> 00:30:20,399
well i would what was the last one and

00:30:18,240 --> 00:30:21,919
the stupidest silliest um oh the

00:30:20,399 --> 00:30:22,799
questions disappeared it was uh the

00:30:21,919 --> 00:30:27,200
weirdest

00:30:22,799 --> 00:30:30,960
uh yeah the stupidest stupidest okay

00:30:27,200 --> 00:30:32,480
so i wouldn't say that there's a stupid

00:30:30,960 --> 00:30:34,960
web component because

00:30:32,480 --> 00:30:36,720
maybe you think that a simple ui button

00:30:34,960 --> 00:30:38,320
could be stupid however it could be

00:30:36,720 --> 00:30:42,159
really really useful

00:30:38,320 --> 00:30:44,320
so i don't find any web component stupid

00:30:42,159 --> 00:30:45,279
but um yeah there are some that are

00:30:44,320 --> 00:30:46,960
badly built

00:30:45,279 --> 00:30:49,600
there are plenty out there they're badly

00:30:46,960 --> 00:30:52,399
built so they don't work too well

00:30:49,600 --> 00:30:54,159
yeah but if you learn something in the

00:30:52,399 --> 00:30:57,600
process that's beneficial right so

00:30:54,159 --> 00:30:58,880
that's good definitely yeah

00:30:57,600 --> 00:31:01,120
okay this is one of the ones i was

00:30:58,880 --> 00:31:03,120
wondering about actually and so you

00:31:01,120 --> 00:31:04,960
mentioned ssr there

00:31:03,120 --> 00:31:06,480
yes and that there is the ability to do

00:31:04,960 --> 00:31:08,480
ssr

00:31:06,480 --> 00:31:09,919
i assume the main benefit of that is is

00:31:08,480 --> 00:31:12,559
sort of seo

00:31:09,919 --> 00:31:13,840
um what what is the story of seo is it

00:31:12,559 --> 00:31:15,679
are you

00:31:13,840 --> 00:31:17,279
is it is it basically a javascript app

00:31:15,679 --> 00:31:18,720
and the search engines call it like it's

00:31:17,279 --> 00:31:21,760
a javascript app or are they

00:31:18,720 --> 00:31:23,039
is there anything else going on there

00:31:21,760 --> 00:31:25,440
the actual question is what's the state

00:31:23,039 --> 00:31:27,360
of ssl web components

00:31:25,440 --> 00:31:29,279
so the state of ssr that's going to be

00:31:27,360 --> 00:31:32,320
coming soon with

00:31:29,279 --> 00:31:33,600
that new feature i do think that when it

00:31:32,320 --> 00:31:35,760
comes to seo it

00:31:33,600 --> 00:31:37,120
really depends on the web component that

00:31:35,760 --> 00:31:39,360
you build

00:31:37,120 --> 00:31:40,159
um if you're trying to make something

00:31:39,360 --> 00:31:42,880
very

00:31:40,159 --> 00:31:44,080
native to the browser such as the

00:31:42,880 --> 00:31:46,159
buttons

00:31:44,080 --> 00:31:47,360
um you do have to remember to add all of

00:31:46,159 --> 00:31:50,399
the features of

00:31:47,360 --> 00:31:51,679
um adding that you would to a button to

00:31:50,399 --> 00:31:52,960
make it like

00:31:51,679 --> 00:31:54,880
known to the browser as if it was a

00:31:52,960 --> 00:31:58,159
native button so

00:31:54,880 --> 00:31:58,799
and that in those cases um for seo

00:31:58,159 --> 00:32:01,279
purposes

00:31:58,799 --> 00:32:02,799
it's always good to add accessibility

00:32:01,279 --> 00:32:06,080
and

00:32:02,799 --> 00:32:06,080
make it more legible right

00:32:06,159 --> 00:32:11,039
okay um right we've got a loaded

00:32:09,840 --> 00:32:13,679
question i've not read the question i've

00:32:11,039 --> 00:32:15,200
just seen it loaded

00:32:13,679 --> 00:32:16,799
one we've taken a particular route one

00:32:15,200 --> 00:32:18,799
already but could you speak on

00:32:16,799 --> 00:32:19,919
accessibility with web components so

00:32:18,799 --> 00:32:22,640
yeah just talking about the

00:32:19,919 --> 00:32:24,399
um how accessible the components are

00:32:22,640 --> 00:32:26,559
yeah you have to implement that

00:32:24,399 --> 00:32:27,600
completely yourself and you should

00:32:26,559 --> 00:32:29,519
obviously

00:32:27,600 --> 00:32:31,679
anything that you're going to put public

00:32:29,519 --> 00:32:33,760
matrix accessibility friendly there's a

00:32:31,679 --> 00:32:34,159
golden standard checklist which you can

00:32:33,760 --> 00:32:36,000
check

00:32:34,159 --> 00:32:37,679
it's on github i'll drop that link later

00:32:36,000 --> 00:32:39,760
too um

00:32:37,679 --> 00:32:41,679
because it's really important that you

00:32:39,760 --> 00:32:43,279
do take these measures

00:32:41,679 --> 00:32:45,120
so if you do create a button don't

00:32:43,279 --> 00:32:47,919
forget to add that it's a button

00:32:45,120 --> 00:32:48,320
um if it is a button use a button tag

00:32:47,919 --> 00:32:50,080
and

00:32:48,320 --> 00:32:52,000
if you can't for whatever reason then

00:32:50,080 --> 00:32:52,480
use your area labels and whatnot there

00:32:52,000 --> 00:32:56,480
so

00:32:52,480 --> 00:32:56,480
please do take accessibility in mind

00:32:56,640 --> 00:32:59,840
if you're extending a native element

00:32:58,320 --> 00:33:00,880
then you get the benefits of the native

00:32:59,840 --> 00:33:02,559
elements

00:33:00,880 --> 00:33:04,480
from accessibility point of view would

00:33:02,559 --> 00:33:06,399
you yeah

00:33:04,480 --> 00:33:08,720
yeah but i guess the search engine

00:33:06,399 --> 00:33:08,720
wouldn't

00:33:09,760 --> 00:33:13,120
well that i'm not too sure about right

00:33:12,159 --> 00:33:15,919
now that you've mentioned

00:33:13,120 --> 00:33:17,519
it but i'm pretty sure you do have to

00:33:15,919 --> 00:33:18,880
make the extra effort when it comes to

00:33:17,519 --> 00:33:20,880
web component from what i've seen from

00:33:18,880 --> 00:33:24,320
the golden standard checklist

00:33:20,880 --> 00:33:25,360
because it's one of the yeah items on

00:33:24,320 --> 00:33:26,960
there

00:33:25,360 --> 00:33:29,200
okay right we've got another one here

00:33:26,960 --> 00:33:31,200
how complex work

00:33:29,200 --> 00:33:33,039
how complex web components could get for

00:33:31,200 --> 00:33:34,080
example putting payment in one part or

00:33:33,039 --> 00:33:36,640
for another

00:33:34,080 --> 00:33:39,120
could it face growing complexity as

00:33:36,640 --> 00:33:42,240
number of elements grow

00:33:39,120 --> 00:33:44,559
definitely but like everything

00:33:42,240 --> 00:33:45,519
do not over engineer them keep them

00:33:44,559 --> 00:33:47,919
simple keep them

00:33:45,519 --> 00:33:50,000
small you don't want to add too much

00:33:47,919 --> 00:33:51,279
complexity to one component because that

00:33:50,000 --> 00:33:52,880
web component won't

00:33:51,279 --> 00:33:54,640
serve for any other purpose and that

00:33:52,880 --> 00:33:55,440
takes out the purpose of web components

00:33:54,640 --> 00:33:56,559
right because they're meant to be

00:33:55,440 --> 00:33:57,840
reusable

00:33:56,559 --> 00:34:00,399
so make sure you keep them nice and

00:33:57,840 --> 00:34:03,200
simple and

00:34:00,399 --> 00:34:03,519
well if you need to make it complex then

00:34:03,200 --> 00:34:04,960
it's

00:34:03,519 --> 00:34:06,960
probably you're the only person that's

00:34:04,960 --> 00:34:11,040
going to be using it

00:34:06,960 --> 00:34:13,040
okay okay do you think that any more

00:34:11,040 --> 00:34:14,800
hurdles web components need to jump so

00:34:13,040 --> 00:34:17,040
people don't look so horrified

00:34:14,800 --> 00:34:18,480
like in a presentation when they're

00:34:17,040 --> 00:34:21,919
mentioned

00:34:18,480 --> 00:34:23,760
um honestly no i think

00:34:21,919 --> 00:34:25,200
they're there you just need to use them

00:34:23,760 --> 00:34:27,280
actually i was speaking to my colleague

00:34:25,200 --> 00:34:28,960
earlier sam he's also at the booth

00:34:27,280 --> 00:34:30,879
i was saying to him like if you want to

00:34:28,960 --> 00:34:31,599
use web components and just add it to

00:34:30,879 --> 00:34:33,359
your spell app

00:34:31,599 --> 00:34:34,879
location that you're already building

00:34:33,359 --> 00:34:36,159
just pick a web component that's already

00:34:34,879 --> 00:34:38,399
out there and open

00:34:36,159 --> 00:34:40,240
web components or wherever and just plug

00:34:38,399 --> 00:34:41,919
it in to see how it feels and what you

00:34:40,240 --> 00:34:43,119
feel like doing with it

00:34:41,919 --> 00:34:44,720
just so you get a feel for them you

00:34:43,119 --> 00:34:46,720
don't have to start a whole new

00:34:44,720 --> 00:34:49,440
application you can already

00:34:46,720 --> 00:34:50,560
use what you have and just plug one in

00:34:49,440 --> 00:34:52,560
makes sense

00:34:50,560 --> 00:34:54,480
have you this is just one for me i think

00:34:52,560 --> 00:34:57,839
we've got the main questions there

00:34:54,480 --> 00:34:58,880
um how are you packaging your components

00:34:57,839 --> 00:35:00,880
do you

00:34:58,880 --> 00:35:03,520
do you package it as like npm modules or

00:35:00,880 --> 00:35:06,000
what's the what's that

00:35:03,520 --> 00:35:07,599
you can but again if you do that you'll

00:35:06,000 --> 00:35:09,119
put them out to the public so make sure

00:35:07,599 --> 00:35:09,680
you're doing them properly look at that

00:35:09,119 --> 00:35:11,520
golden

00:35:09,680 --> 00:35:13,839
standard checklist that i love so much

00:35:11,520 --> 00:35:16,960
oh it's on there obviously

00:35:13,839 --> 00:35:17,760
yeah um but you can just like share them

00:35:16,960 --> 00:35:22,640
across teams

00:35:17,760 --> 00:35:22,640
as they are sir you don't need to

00:35:23,280 --> 00:35:27,599
very nice i think that's the main

00:35:25,920 --> 00:35:28,960
questions

00:35:27,599 --> 00:35:31,200
anything else you want to say before we

00:35:28,960 --> 00:35:33,119
disappear anna

00:35:31,200 --> 00:35:35,119
no that was actually pretty nice and

00:35:33,119 --> 00:35:37,280
quick

00:35:35,119 --> 00:35:39,280
thank you all so much thank you very

00:35:37,280 --> 00:35:41,599
much i think we've got little javascript

00:35:39,280 --> 00:35:43,599
bundles of joy coming up next

00:35:41,599 --> 00:35:44,800
um but we'll leave it there thank you

00:35:43,599 --> 00:35:59,280
very much

00:35:44,800 --> 00:35:59,280

YouTube URL: https://www.youtube.com/watch?v=xMGRF6pE764


