Title: A Real World Example of Functional Programming with fp-ts - Frederick Fogerty - CityJS Conf 2020
Publication date: 2020-10-03
Playlist: CityJS Conf 2020
Description: 
	Have you thought about learning Functional Programming, but have been daunted by all the technical jargon? Luckily, in this talk I wonâ€™t be exploring any technical concepts, and instead will be walking through a real-world Javascript project and discussing how we can refactor it to a more functional style using a TS library, fp-ts. We will be using Functors, Monads, Applicative, and more, without having to know what they are or how they work!

At the end of the talk you should be confident to actually write functional code, and not just understand it, in your own projects.

About
imgix - Software Engineer working on OSS

Chapters / Excerpts
Start [00:00:00] 

About Frederick [00:01:10] 

What's in this talk [00:01:55]
I'm first going to briefly go over what FP and FPS it FETs are the kind of benefits and why you should use this functional programming paradigm that is so popular and getting popularity.

FP/FP-TS & Pro's / Con's [00:03:03]

The App [00:08:32]
We've briefly gone through what functional programming is and what if BTS is, and its pros and cons.

Validation [00:13:39]

Promise as a Framework [00:14:20] 
You already know that familiar with promises and functional programming, because I believe with this mapping, then you can go and be more empowered

Task Either [00:17:43]
I've shown you a task either. And there's many other types which I'll get to at the end of the talk. But for now we're gonna use the task either.

Matching [00:19:43]
I thought about these behavior contracts. And that was for a reason we need to make sure that when we're writing functional code, that the functions will be cool and the framework we kind of pushed into always match. So how do you do that? 

Consuming the function in the original API [00:21:00]
Now let's take a look at what it looks like to consume this function in the original API. And so we had this function and what I want to focus on at first is again, the function contracts. 

Suggestions [00:24:06]
Refactoring [00:25:05] And I mentioned that one of the benefits was refactoring and I want to show how that looks like and how the toxicity helped us out.

Closing Thoughts [00:30:16]

Q&A [00:34:32]

_________________________________________________________________

About Pusher Sessions:

We're bringing the meetup to you. With Sessions, you can watch recordings of top-notch talks from developer meetups -- wherever and whenever you want.

Meetups are a great way to learn from our peers and to keep up with the latest trends and technologies. As developers ourselves, we at Pusher wanted to bring this great content to more people... So we built Sessions. On Sessions, you can watch talks that interest you and subscribe to be notified when new content gets added.

If you run a meetup and want to get involved, kindly get in touch.

_________________________________________________________________

About Pusher:

Pusher is a hosted service with APIs, developer tools and open source libraries that greatly simplify integrating real-time functionality into web and mobile applications. 

Pusher will automatically scale when required, removing all the pain of setting up and maintaining a secure, real-time infrastructure. 

Pusher is already trusted to do so by thousands of developers and companies like GitHub, MailChimp, the Financial Times, Buffer and many more. 

Getting started takes just a few seconds: simply go to pusher.com and create a free account. Happy hacking!
YouTube URL: https://www.youtube.com/watch?v=-U9HQembktY


