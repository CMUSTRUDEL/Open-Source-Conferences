Title: Roberto Polli - Extending HTTP for fun and non-profit
Publication date: 2020-09-15
Playlist: EuroPython 2020
Description: 
	"Extending HTTP for fun and non-profit
EuroPython 2020 - Talk - 2020-07-23 - Ni
Online

By Roberto Polli

Writing API guidelines is a best practice for standardizing APIs produced by thousands of service provider, but what happens when those rules are not backed by internet standards?

This talk proposes an iterative strategy for identify and standardize inside IETF key features of your API guidelines.
The steps includes feature landscaping, stakeholder identification and engagement, prototyping and writing an actual internet-draft.

The strategy is shown using two examples:
- rewriting of codeDigest/code header RFC3230 adding clarifications useful for implementors;
- proposing new codeRateLimit/code headers and engage with implementors (Microsoft, Red Hat, Kong, ..).



License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/
Please see our speaker release agreement for details: https://ep2020.europython.eu/events/speaker-release-agreement/

    "
Captions: 
	00:00:06,240 --> 00:00:11,360
cool so i'll introduce yourself so

00:00:08,240 --> 00:00:14,240
so we are in me um

00:00:11,360 --> 00:00:16,480
and roberto is going to talk to us about

00:00:14,240 --> 00:00:19,520
extending http for fun

00:00:16,480 --> 00:00:21,920
and non-profit oh the window is getting

00:00:19,520 --> 00:00:21,920
smaller

00:00:24,560 --> 00:00:34,800
hi everybody so yeah give him big hands

00:00:31,599 --> 00:00:36,640
hi everybody i am roberto poly from the

00:00:34,800 --> 00:00:38,960
italian digital transformation

00:00:36,640 --> 00:00:41,600
department

00:00:38,960 --> 00:00:43,600
my work is to create a national api

00:00:41,600 --> 00:00:46,879
ecosystem

00:00:43,600 --> 00:00:48,640
that is capable to connect public and

00:00:46,879 --> 00:00:53,120
the private sector

00:00:48,640 --> 00:00:56,160
and another of our goal is

00:00:53,120 --> 00:00:59,039
to provide cross-border services

00:00:56,160 --> 00:01:00,879
with the other european union countries

00:00:59,039 --> 00:01:04,799
and today i will present how

00:01:00,879 --> 00:01:09,840
while writing the italian api guidelines

00:01:04,799 --> 00:01:09,840
we started contributing to the http

00:01:10,840 --> 00:01:16,080
protocol

00:01:12,960 --> 00:01:18,240
so the agenda is the following after a

00:01:16,080 --> 00:01:22,159
brief

00:01:18,240 --> 00:01:25,280
rational about using api guidelines

00:01:22,159 --> 00:01:28,640
to achieve goals and results

00:01:25,280 --> 00:01:29,840
we show how you can create a minimal

00:01:28,640 --> 00:01:32,640
future landscape

00:01:29,840 --> 00:01:34,240
for your guidelines and identify

00:01:32,640 --> 00:01:38,320
relevant standards

00:01:34,240 --> 00:01:38,320
and communities to interact with

00:01:38,720 --> 00:01:42,640
then the strategy will be presented

00:01:42,159 --> 00:01:46,320
using

00:01:42,640 --> 00:01:49,040
two case studies the first one is about

00:01:46,320 --> 00:01:50,720
writing an internet draft that extends

00:01:49,040 --> 00:01:54,240
http

00:01:50,720 --> 00:01:57,439
starting from an old specification

00:01:54,240 --> 00:02:00,479
needing a refresh and the second

00:01:57,439 --> 00:02:03,600
one where we wrote

00:02:00,479 --> 00:02:06,399
a brand new specification

00:02:03,600 --> 00:02:07,200
from scratch to cover our use case that

00:02:06,399 --> 00:02:10,959
was not

00:02:07,200 --> 00:02:14,800
covered before which is the

00:02:10,959 --> 00:02:19,040
goal one of the goal of the italian

00:02:14,800 --> 00:02:22,160
digital strategy is to uniform the apis

00:02:19,040 --> 00:02:25,840
product produced by the

00:02:22,160 --> 00:02:28,160
the all italian agencies and

00:02:25,840 --> 00:02:29,360
this is quite challenging because we

00:02:28,160 --> 00:02:32,959
have

00:02:29,360 --> 00:02:36,480
uh well 60 million people

00:02:32,959 --> 00:02:39,840
more than 20 000 public agencies

00:02:36,480 --> 00:02:43,920
eight cities 20 regions with

00:02:39,840 --> 00:02:47,680
some autonomy

00:02:43,920 --> 00:02:51,360
and to be able to

00:02:47,680 --> 00:02:53,599
create a uniform environment for

00:02:51,360 --> 00:02:55,840
software produced by all those slides

00:02:53,599 --> 00:02:55,840
was

00:02:56,160 --> 00:03:01,599
was was not really easy the solution we

00:02:59,120 --> 00:03:04,640
found is to provide guidelines

00:03:01,599 --> 00:03:08,159
so that every agency should produce apis

00:03:04,640 --> 00:03:08,159
following those guidelines

00:03:09,519 --> 00:03:13,440
well when you write guidelines for the

00:03:12,000 --> 00:03:17,599
public sector

00:03:13,440 --> 00:03:19,680
you have a you have some risks

00:03:17,599 --> 00:03:21,599
because technical specification in

00:03:19,680 --> 00:03:25,200
government

00:03:21,599 --> 00:03:29,760
risk to mimic a bureaucratic environment

00:03:25,200 --> 00:03:33,040
so you can have over complexity because

00:03:29,760 --> 00:03:34,400
bureaucratic non-digital processes are

00:03:33,040 --> 00:03:37,599
just

00:03:34,400 --> 00:03:41,599
converted to convoluted

00:03:37,599 --> 00:03:44,840
apis without a good redesign

00:03:41,599 --> 00:03:46,000
you have time constrained engineering

00:03:44,840 --> 00:03:49,360
because

00:03:46,000 --> 00:03:53,280
a small group of people should

00:03:49,360 --> 00:03:56,640
address complex use cases

00:03:53,280 --> 00:03:58,840
within our short deadlines

00:03:56,640 --> 00:04:00,000
many times you have a closer development

00:03:58,840 --> 00:04:03,599
environment

00:04:00,000 --> 00:04:06,720
because the ait community is

00:04:03,599 --> 00:04:07,120
rarely involved and sometimes you have

00:04:06,720 --> 00:04:10,159
even

00:04:07,120 --> 00:04:13,280
closer specification

00:04:10,159 --> 00:04:17,040
and then redundancy because

00:04:13,280 --> 00:04:20,639
you are building uh

00:04:17,040 --> 00:04:22,880
stuff with existing standards

00:04:20,639 --> 00:04:24,800
but you are not keeping in touch with

00:04:22,880 --> 00:04:28,160
the original communities

00:04:24,800 --> 00:04:31,759
so maybe you start to customize

00:04:28,160 --> 00:04:35,919
the behavior of some specification

00:04:31,759 --> 00:04:38,080
you start customizing protocols

00:04:35,919 --> 00:04:40,000
without asking for feedback from the

00:04:38,080 --> 00:04:45,199
original communities

00:04:40,000 --> 00:04:45,199
and this is quite risky

00:04:45,919 --> 00:04:52,960
so when you write guidelines

00:04:49,840 --> 00:04:56,479
and you have to write something that

00:04:52,960 --> 00:05:00,160
should be followed by thousands

00:04:56,479 --> 00:05:03,120
of implementers and suppliers

00:05:00,160 --> 00:05:04,880
you have to prioritize your golem

00:05:03,120 --> 00:05:08,000
features

00:05:04,880 --> 00:05:11,120
when you prioritize your golem features

00:05:08,000 --> 00:05:14,240
it's easy to identify the stakeholder

00:05:11,120 --> 00:05:17,680
and the future landscaping you

00:05:14,240 --> 00:05:18,479
know easily which are the people you

00:05:17,680 --> 00:05:22,080
have to

00:05:18,479 --> 00:05:25,360
to talk and who you ask

00:05:22,080 --> 00:05:29,600
who you need to ask for and we need to

00:05:25,360 --> 00:05:34,160
keep in touch so about the goals

00:05:29,600 --> 00:05:34,160
we found essentially four goals

00:05:34,400 --> 00:05:38,479
one the first one was a consistent

00:05:37,759 --> 00:05:41,360
design

00:05:38,479 --> 00:05:43,120
we wanted that all the apis produced by

00:05:41,360 --> 00:05:46,880
the agencies

00:05:43,120 --> 00:05:49,600
had a consistent design and

00:05:46,880 --> 00:05:51,759
were based on a consistent rule set and

00:05:49,600 --> 00:05:56,160
another one very important

00:05:51,759 --> 00:05:59,199
is schema standardization because

00:05:56,160 --> 00:06:00,080
when you have to create an ecosystem you

00:05:59,199 --> 00:06:03,199
should

00:06:00,080 --> 00:06:06,880
rely on standard schemas and

00:06:03,199 --> 00:06:10,080
the meaning in the semantic of

00:06:06,880 --> 00:06:13,759
every field and

00:06:10,080 --> 00:06:17,280
of the objects you use should be

00:06:13,759 --> 00:06:17,280
confrontable for example

00:06:17,360 --> 00:06:22,080
if you use a person's schema you should

00:06:20,880 --> 00:06:24,639
name the fields

00:06:22,080 --> 00:06:26,080
in a consistent way you shouldn't use

00:06:24,639 --> 00:06:31,199
different fields

00:06:26,080 --> 00:06:31,199
for the same for the same

00:06:33,440 --> 00:06:40,319
for the same element and you should

00:06:38,080 --> 00:06:41,840
split fields in a consistent way for

00:06:40,319 --> 00:06:45,360
example

00:06:41,840 --> 00:06:48,240
if you split always name and surname

00:06:45,360 --> 00:06:49,120
every agencies should split name and

00:06:48,240 --> 00:06:52,720
surname

00:06:49,120 --> 00:06:56,400
and shouldn't mix up those fields

00:06:52,720 --> 00:06:59,120
another team is reliability and security

00:06:56,400 --> 00:07:01,280
we wanted to enforce a service

00:06:59,120 --> 00:07:04,400
management model

00:07:01,280 --> 00:07:04,960
to address cascading failures and we

00:07:04,400 --> 00:07:08,000
need the

00:07:04,960 --> 00:07:10,880
security frameworks that lower

00:07:08,000 --> 00:07:12,000
the legal risk for providers because if

00:07:10,880 --> 00:07:15,599
you don't have

00:07:12,000 --> 00:07:19,759
a consistent set of security rules

00:07:15,599 --> 00:07:24,800
agencies won't just provide api

00:07:19,759 --> 00:07:30,400
because they will be afraid of

00:07:24,800 --> 00:07:33,599
data breaches they will be afraid of

00:07:30,400 --> 00:07:36,960
falling on some

00:07:33,599 --> 00:07:38,000
gdpr regulation and other protection

00:07:36,960 --> 00:07:41,039
issues

00:07:38,000 --> 00:07:44,160
and then they will just

00:07:41,039 --> 00:07:47,280
avoid serving citizens

00:07:44,160 --> 00:07:50,160
and all this stuff should be done

00:07:47,280 --> 00:07:51,360
engaging and creating communities both

00:07:50,160 --> 00:07:54,639
in government

00:07:51,360 --> 00:07:58,800
in for developers for between

00:07:54,639 --> 00:08:02,240
implementers and standards

00:07:58,800 --> 00:08:04,879
so let's see um simple example

00:08:02,240 --> 00:08:05,919
consistent design schema reliability and

00:08:04,879 --> 00:08:09,440
security let's

00:08:05,919 --> 00:08:12,479
make a grid

00:08:09,440 --> 00:08:15,520
start with four rows those are

00:08:12,479 --> 00:08:17,919
our preliminary goals

00:08:15,520 --> 00:08:19,280
you can use your own if you are planning

00:08:17,919 --> 00:08:22,479
an ecosystem

00:08:19,280 --> 00:08:25,360
it is both valid for

00:08:22,479 --> 00:08:27,199
if you work in a company in a private

00:08:25,360 --> 00:08:30,240
company you can follow

00:08:27,199 --> 00:08:33,519
the very same framework

00:08:30,240 --> 00:08:37,279
so this pick your goals

00:08:33,519 --> 00:08:39,839
and then on the columns

00:08:37,279 --> 00:08:41,519
identify the relevant communities and

00:08:39,839 --> 00:08:44,080
technologies

00:08:41,519 --> 00:08:46,320
for example for the schema for the

00:08:44,080 --> 00:08:49,839
design for the reliability

00:08:46,320 --> 00:08:53,279
we always have to confront with all the

00:08:49,839 --> 00:08:53,680
national agencies we will keep in touch

00:08:53,279 --> 00:08:56,160
with

00:08:53,680 --> 00:08:58,320
other european countries and check let

00:08:56,160 --> 00:09:02,320
me see if your schemas for

00:08:58,320 --> 00:09:05,440
personal data are the same of

00:09:02,320 --> 00:09:06,160
mine which are the different how do you

00:09:05,440 --> 00:09:10,480
implement

00:09:06,160 --> 00:09:10,480
security features and so on

00:09:10,640 --> 00:09:17,760
this column the third column is the one

00:09:14,399 --> 00:09:20,880
on which we will focus today

00:09:17,760 --> 00:09:23,440
is the standard one

00:09:20,880 --> 00:09:24,160
these are the the column with ietf

00:09:23,440 --> 00:09:26,959
community

00:09:24,160 --> 00:09:28,080
the world web consortium standard

00:09:26,959 --> 00:09:31,680
communities

00:09:28,080 --> 00:09:34,320
and here we will put all the information

00:09:31,680 --> 00:09:35,680
and all the relevant standards that we

00:09:34,320 --> 00:09:38,480
are going to use

00:09:35,680 --> 00:09:39,200
to provide schema design reliability to

00:09:38,480 --> 00:09:40,959
achieve

00:09:39,200 --> 00:09:42,800
the schema design reliability and

00:09:40,959 --> 00:09:46,000
security goals

00:09:42,800 --> 00:09:47,920
finally we have communities

00:09:46,000 --> 00:09:49,760
one community can be the python

00:09:47,920 --> 00:09:52,480
communities for example

00:09:49,760 --> 00:09:53,279
but there are many other communities

00:09:52,480 --> 00:09:55,920
that can

00:09:53,279 --> 00:09:57,120
could be interested in works on security

00:09:55,920 --> 00:10:00,800
for example

00:09:57,120 --> 00:10:05,040
on design on schemas and another one

00:10:00,800 --> 00:10:08,079
we have vendors communities because

00:10:05,040 --> 00:10:11,120
if we have to provide features

00:10:08,079 --> 00:10:13,839
that people have to implement

00:10:11,120 --> 00:10:16,959
we will have to get feedback from

00:10:13,839 --> 00:10:20,240
vendors and this is very important

00:10:16,959 --> 00:10:23,519
so again those are the main

00:10:20,240 --> 00:10:25,839
uh communities we identified but sure

00:10:23,519 --> 00:10:27,040
in your context in your framework you

00:10:25,839 --> 00:10:30,079
can pick your own

00:10:27,040 --> 00:10:33,279
communities and then

00:10:30,079 --> 00:10:36,480
let's start to fill

00:10:33,279 --> 00:10:40,079
all the um

00:10:36,480 --> 00:10:43,200
cells of the grid with the standards

00:10:40,079 --> 00:10:44,480
for example for the schemas we decided

00:10:43,200 --> 00:10:48,320
to use

00:10:44,480 --> 00:10:52,160
between the others those standards

00:10:48,320 --> 00:10:55,279
the first one rfc 7807 is

00:10:52,160 --> 00:10:58,079
jason problem is a standard uh

00:10:55,279 --> 00:10:59,120
json schema for managing error and

00:10:58,079 --> 00:11:02,399
issues

00:10:59,120 --> 00:11:05,920
then we have a standard for timestamp

00:11:02,399 --> 00:11:09,040
we have one for currency codes and

00:11:05,920 --> 00:11:12,480
um languages

00:11:09,040 --> 00:11:15,760
we are we are using j

00:11:12,480 --> 00:11:17,920
so just uh write down all the relevant

00:11:15,760 --> 00:11:21,519
standard that you are going to use

00:11:17,920 --> 00:11:24,959
or that you are interested in for your

00:11:21,519 --> 00:11:28,399
api ecosystem on the design we

00:11:24,959 --> 00:11:32,240
relied heavily on the standard

00:11:28,399 --> 00:11:35,839
latest http specification that is rfc

00:11:32,240 --> 00:11:39,680
72 30 and over

00:11:35,839 --> 00:11:41,120
and another interesting community and

00:11:39,680 --> 00:11:45,279
specification

00:11:41,120 --> 00:11:48,079
is the open api specification

00:11:45,279 --> 00:11:51,120
under reliability we based everything on

00:11:48,079 --> 00:11:54,320
the http with a rust approach

00:11:51,120 --> 00:11:59,360
but now we found a missing

00:11:54,320 --> 00:12:03,440
feature in standard http

00:11:59,360 --> 00:12:06,720
you cannot find enough specification

00:12:03,440 --> 00:12:08,000
to provide a an integrated service

00:12:06,720 --> 00:12:12,160
management

00:12:08,000 --> 00:12:15,920
environment for such a large ecosystem

00:12:12,160 --> 00:12:18,639
so we just noted that we had to

00:12:15,920 --> 00:12:19,680
work on that and keep in touch with

00:12:18,639 --> 00:12:23,200
communities and

00:12:19,680 --> 00:12:25,839
investigate again on security

00:12:23,200 --> 00:12:28,000
we had similar issues because there are

00:12:25,839 --> 00:12:29,440
many specifications there is the digest

00:12:28,000 --> 00:12:32,480
header there is

00:12:29,440 --> 00:12:35,600
uh jason webb token jot and so on

00:12:32,480 --> 00:12:38,800
but there are even draft standards

00:12:35,600 --> 00:12:41,839
that are not consolidated and

00:12:38,800 --> 00:12:42,560
still there is not a no regulation

00:12:41,839 --> 00:12:46,720
framework

00:12:42,560 --> 00:12:51,279
so in http uh with a rest approach

00:12:46,720 --> 00:12:55,120
you don't have a very tight framework

00:12:51,279 --> 00:12:57,680
to define another remediation protocol

00:12:55,120 --> 00:12:58,959
and well on the other column the

00:12:57,680 --> 00:13:00,850
communities column

00:12:58,959 --> 00:13:03,999
we have a set of communities we

00:13:00,850 --> 00:13:03,999
[Music]

00:13:04,000 --> 00:13:10,160
engaged with during this work

00:13:07,839 --> 00:13:12,320
for example on the security staff we

00:13:10,160 --> 00:13:15,440
discuss it between itf

00:13:12,320 --> 00:13:16,000
w3c the http communities and then

00:13:15,440 --> 00:13:18,800
banking

00:13:16,000 --> 00:13:19,279
api communities that was very interested

00:13:18,800 --> 00:13:23,600
in

00:13:19,279 --> 00:13:23,600
such features

00:13:23,920 --> 00:13:32,880
so we now have agreed and the strategy

00:13:27,839 --> 00:13:35,519
to gather and get all the interesting

00:13:32,880 --> 00:13:36,880
technologies relevant technologies where

00:13:35,519 --> 00:13:41,680
and where we can

00:13:36,880 --> 00:13:47,040
find the missing blocks

00:13:41,680 --> 00:13:50,560
so let's start for the first use case

00:13:47,040 --> 00:13:53,360
we started the first use case and we

00:13:50,560 --> 00:13:56,240
started proposing solution we research

00:13:53,360 --> 00:13:59,600
and analyze actual solutions

00:13:56,240 --> 00:14:01,920
even if not standard and we include

00:13:59,600 --> 00:14:03,920
in our study experimental work and

00:14:01,920 --> 00:14:06,720
research papers

00:14:03,920 --> 00:14:09,199
we wanted to achieve as we said in the

00:14:06,720 --> 00:14:10,040
slide before a new revolution framework

00:14:09,199 --> 00:14:14,839
based on

00:14:10,040 --> 00:14:18,000
http we identified the virus building

00:14:14,839 --> 00:14:20,639
blocks for building such an arbitration

00:14:18,000 --> 00:14:20,639
framework

00:14:20,880 --> 00:14:25,279
and we focused on the simplest building

00:14:24,800 --> 00:14:28,800
block

00:14:25,279 --> 00:14:32,399
that wasn't completely covered

00:14:28,800 --> 00:14:35,040
by standard specification this was

00:14:32,399 --> 00:14:36,320
to ensure the integrity of the payload

00:14:35,040 --> 00:14:39,519
body

00:14:36,320 --> 00:14:42,880
of http requesting responses

00:14:39,519 --> 00:14:47,279
this was usually done with the digest

00:14:42,880 --> 00:14:52,320
specification with it

00:14:47,279 --> 00:14:52,320
but this specification it's not um

00:14:52,880 --> 00:14:59,839
it's not very used

00:14:56,839 --> 00:15:04,480
recently

00:14:59,839 --> 00:15:07,920
so the what did we do

00:15:04,480 --> 00:15:11,360
we started engaging with the community

00:15:07,920 --> 00:15:13,839
and this gave us a series of unexpected

00:15:11,360 --> 00:15:13,839
outcomes

00:15:15,360 --> 00:15:19,760
we found that many implementers didn't

00:15:18,720 --> 00:15:23,440
use the digest

00:15:19,760 --> 00:15:26,800
header in a proper way

00:15:23,440 --> 00:15:30,480
and this was because this

00:15:26,800 --> 00:15:34,079
specification was quite old and

00:15:30,480 --> 00:15:37,680
we then started to keep in touch with

00:15:34,079 --> 00:15:40,880
implementers and other http experts

00:15:37,680 --> 00:15:42,800
and everybody said okay the digest could

00:15:40,880 --> 00:15:46,000
be a suitable solution

00:15:42,800 --> 00:15:49,199
but it's quite old and somebody

00:15:46,000 --> 00:15:52,399
should just ride it

00:15:49,199 --> 00:15:56,399
but nobody has the time to do it then i

00:15:52,399 --> 00:15:59,759
volunteer for this kind of work

00:15:56,399 --> 00:16:03,360
and i draft a standard solution i

00:15:59,759 --> 00:16:08,639
rewrite revert all the digested

00:16:03,360 --> 00:16:09,680
specification i found cloudflare

00:16:08,639 --> 00:16:12,959
employees

00:16:09,680 --> 00:16:16,240
that helped me in this work and we

00:16:12,959 --> 00:16:19,839
wrote almost everything

00:16:16,240 --> 00:16:24,160
adding details and fixing loopholes

00:16:19,839 --> 00:16:28,399
we looked for um people

00:16:24,160 --> 00:16:31,440
to help us we spoke with suppliers we

00:16:28,399 --> 00:16:32,639
and vendors we got feedback and

00:16:31,440 --> 00:16:35,360
awareness from

00:16:32,639 --> 00:16:36,000
many implementers and then when we

00:16:35,360 --> 00:16:39,680
thought that

00:16:36,000 --> 00:16:41,279
everything was quite good we got back to

00:16:39,680 --> 00:16:45,839
the ietf

00:16:41,279 --> 00:16:49,759
and they said that they liked our work

00:16:45,839 --> 00:16:51,199
and this resulted in the adoption of

00:16:49,759 --> 00:16:55,759
this

00:16:51,199 --> 00:17:00,560
specification now that i was inside

00:16:55,759 --> 00:17:04,319
the uh http world group i learned a lot

00:17:00,560 --> 00:17:08,480
every even in on

00:17:04,319 --> 00:17:11,520
matters that i didn't know before and

00:17:08,480 --> 00:17:12,240
this helped me in improving our

00:17:11,520 --> 00:17:16,959
guidelines

00:17:12,240 --> 00:17:22,160
even on subjects that were not expected

00:17:16,959 --> 00:17:27,199
before then we continue to contribute

00:17:22,160 --> 00:17:30,000
to the draft and to other specification

00:17:27,199 --> 00:17:31,600
and we will do it until the digest

00:17:30,000 --> 00:17:35,600
internet draft will

00:17:31,600 --> 00:17:38,640
obsolate the old draft and became um

00:17:35,600 --> 00:17:41,840
a new rfc so the trick

00:17:38,640 --> 00:17:46,240
here was to join the community

00:17:41,840 --> 00:17:48,880
not as somebody which wanted to get

00:17:46,240 --> 00:17:49,919
something from the community but as a

00:17:48,880 --> 00:17:51,919
volunteer

00:17:49,919 --> 00:17:54,559
for an housekeeping work for something

00:17:51,919 --> 00:18:00,320
that everybody wanted to be done

00:17:54,559 --> 00:18:01,440
but nobody had the time to do here we

00:18:00,320 --> 00:18:05,919
can see

00:18:01,440 --> 00:18:09,760
the digest header draft

00:18:05,919 --> 00:18:11,840
this this draft provides a content

00:18:09,760 --> 00:18:15,760
integrity for various api

00:18:11,840 --> 00:18:16,720
included banking wants now it is widely

00:18:15,760 --> 00:18:19,919
used

00:18:16,720 --> 00:18:23,200
in conjunction with signatures and

00:18:19,919 --> 00:18:24,480
has now been adapted to the latest http

00:18:23,200 --> 00:18:26,720
specification

00:18:24,480 --> 00:18:28,960
it has better security consideration

00:18:26,720 --> 00:18:32,000
covering signature usage

00:18:28,960 --> 00:18:32,799
and clarify a lot of ambiguities in all

00:18:32,000 --> 00:18:36,080
these

00:18:32,799 --> 00:18:40,640
path we learned a lot

00:18:36,080 --> 00:18:43,919
so it was not just something that

00:18:40,640 --> 00:18:47,840
we did to

00:18:43,919 --> 00:18:51,840
push our use cases inside http

00:18:47,840 --> 00:18:51,840
but it was even something that

00:18:52,160 --> 00:18:58,720
we got from the http community

00:18:55,520 --> 00:19:02,080
that is very warm and that is full of

00:18:58,720 --> 00:19:07,039
very very knowledgeable

00:19:02,080 --> 00:19:07,039
people okay

00:19:08,160 --> 00:19:12,559
working with the first draft we made

00:19:11,440 --> 00:19:15,120
friendship

00:19:12,559 --> 00:19:16,400
with the http community we had the

00:19:15,120 --> 00:19:19,760
opportunity to

00:19:16,400 --> 00:19:24,400
learn a lot of interesting http

00:19:19,760 --> 00:19:27,600
features and in this way we got social

00:19:24,400 --> 00:19:31,039
with other http experts

00:19:27,600 --> 00:19:35,360
we become became knowledgeable

00:19:31,039 --> 00:19:38,799
of the itf process now we know

00:19:35,360 --> 00:19:42,240
how which are the steps

00:19:38,799 --> 00:19:45,440
that you have to to do

00:19:42,240 --> 00:19:47,919
between the writing of

00:19:45,440 --> 00:19:50,720
specification and the approval of the

00:19:47,919 --> 00:19:54,320
specification

00:19:50,720 --> 00:19:55,360
we got involved in other http

00:19:54,320 --> 00:19:57,840
specification

00:19:55,360 --> 00:19:58,799
that was very interesting and useful

00:19:57,840 --> 00:20:02,480
because

00:19:58,799 --> 00:20:06,000
in this way we learned a lot about

00:20:02,480 --> 00:20:08,159
security issues we have removed and

00:20:06,000 --> 00:20:11,039
fixed it in our guidelines

00:20:08,159 --> 00:20:12,720
and even we discovered the existence of

00:20:11,039 --> 00:20:15,280
the http 3

00:20:12,720 --> 00:20:17,200
and other interesting features that are

00:20:15,280 --> 00:20:22,240
now working progress

00:20:17,200 --> 00:20:22,240
inside the http world group so

00:20:22,799 --> 00:20:27,039
with the strength of all this social

00:20:25,919 --> 00:20:30,240
relation

00:20:27,039 --> 00:20:34,240
of the knowledge we got in working

00:20:30,240 --> 00:20:38,880
on the first specification we decided to

00:20:34,240 --> 00:20:41,360
work on another missing use case

00:20:38,880 --> 00:20:42,799
while the digest header was a missing

00:20:41,360 --> 00:20:44,480
use case

00:20:42,799 --> 00:20:47,360
that was based on an existing

00:20:44,480 --> 00:20:50,559
specification

00:20:47,360 --> 00:20:54,080
the second case was um

00:20:50,559 --> 00:20:57,360
we we worked in greenfield because uh

00:20:54,080 --> 00:20:59,600
there was no existing specification on

00:20:57,360 --> 00:21:02,880
that

00:20:59,600 --> 00:21:06,080
and this is the rate limit

00:21:02,880 --> 00:21:10,320
header fields for http

00:21:06,080 --> 00:21:14,240
when you issue a lot of http requests

00:21:10,320 --> 00:21:18,080
a server may be overloaded

00:21:14,240 --> 00:21:23,600
and if you if the server gives you just

00:21:18,080 --> 00:21:23,600
a limited amount of quota or request

00:21:23,760 --> 00:21:31,679
you may end out of requests and

00:21:27,200 --> 00:21:34,400
your requests will just receive an error

00:21:31,679 --> 00:21:35,679
a nice way that could that the server

00:21:34,400 --> 00:21:38,799
can do for you

00:21:35,679 --> 00:21:39,679
is to warn you and tell you in the

00:21:38,799 --> 00:21:42,880
response

00:21:39,679 --> 00:21:42,880
how many requests

00:21:43,200 --> 00:21:49,360
you are left so

00:21:46,320 --> 00:21:51,280
the current landscape is that when you

00:21:49,360 --> 00:21:54,960
use api gateways

00:21:51,280 --> 00:21:58,880
every api gateway returns

00:21:54,960 --> 00:22:01,919
this information in a different way

00:21:58,880 --> 00:22:05,600
so there are more than 12

00:22:01,919 --> 00:22:07,600
possible http rate limit headers because

00:22:05,600 --> 00:22:09,840
there is no specification there is no

00:22:07,600 --> 00:22:13,520
standards

00:22:09,840 --> 00:22:16,799
the the results is that many clients

00:22:13,520 --> 00:22:20,559
just ignored them and their request

00:22:16,799 --> 00:22:23,760
eventually fails we then wrote

00:22:20,559 --> 00:22:26,799
this draft together with the

00:22:23,760 --> 00:22:27,919
alex martinez from reddit where we

00:22:26,799 --> 00:22:30,720
standardize

00:22:27,919 --> 00:22:31,840
three red limit headers it's very simple

00:22:30,720 --> 00:22:35,039
drafts

00:22:31,840 --> 00:22:38,400
but there are some complexities for the

00:22:35,039 --> 00:22:41,440
management of security of the

00:22:38,400 --> 00:22:43,520
of this kind of draft

00:22:41,440 --> 00:22:45,760
and then we started working with

00:22:43,520 --> 00:22:49,120
suppliers and cloud providers

00:22:45,760 --> 00:22:52,320
to implement them in this case

00:22:49,120 --> 00:22:54,320
uh the integration the interactions with

00:22:52,320 --> 00:22:57,760
the http or group

00:22:54,320 --> 00:23:01,520
were not the core point okay

00:22:57,760 --> 00:23:05,039
of this specification the core point

00:23:01,520 --> 00:23:08,159
is to manage uh

00:23:05,039 --> 00:23:11,280
the api gateway vendors to implement it

00:23:08,159 --> 00:23:13,600
and then we have the kong api gateways

00:23:11,280 --> 00:23:15,360
implemented it the red artifiagados

00:23:13,600 --> 00:23:19,039
implemented it

00:23:15,360 --> 00:23:22,240
microsoft azure api getaways

00:23:19,039 --> 00:23:25,200
supported us and allowed to configure

00:23:22,240 --> 00:23:27,760
the api the azure api gateways

00:23:25,200 --> 00:23:29,200
to implement these features we have

00:23:27,760 --> 00:23:31,200
libraries that are currently

00:23:29,200 --> 00:23:35,360
implementing that

00:23:31,200 --> 00:23:35,360
there is a api from the british

00:23:35,840 --> 00:23:42,159
government that adopted this draft

00:23:38,960 --> 00:23:45,919
so in this uh in this work

00:23:42,159 --> 00:23:47,520
the the interaction in the communities

00:23:45,919 --> 00:23:51,840
were quite different

00:23:47,520 --> 00:23:51,840
and then the last slide

00:23:52,240 --> 00:23:55,760
there are some other communities and

00:23:54,960 --> 00:23:58,880
drafts

00:23:55,760 --> 00:24:00,559
and standards we are working on well

00:23:58,880 --> 00:24:01,840
there is the digest headers and the

00:24:00,559 --> 00:24:04,960
right limit headers

00:24:01,840 --> 00:24:07,840
i presented now we worked

00:24:04,960 --> 00:24:10,080
and managed to be approved even a couple

00:24:07,840 --> 00:24:11,679
of features into open avi just like the

00:24:10,080 --> 00:24:15,200
mutual tls

00:24:11,679 --> 00:24:18,320
and the summary metadata features

00:24:15,200 --> 00:24:22,640
we are working inside each eitf

00:24:18,320 --> 00:24:26,480
to support an http signatures protocol

00:24:22,640 --> 00:24:29,840
we are adding a metadata in open api and

00:24:26,480 --> 00:24:31,200
still continuing to work with suppliers

00:24:29,840 --> 00:24:34,480
and community

00:24:31,200 --> 00:24:37,120
to implement features

00:24:34,480 --> 00:24:37,840
that we missing features that we are

00:24:37,120 --> 00:24:40,640
needed

00:24:37,840 --> 00:24:41,840
that are needed for our guidelines well

00:24:40,640 --> 00:24:45,279
i'm

00:24:41,840 --> 00:24:47,760
finished i hope you

00:24:45,279 --> 00:24:49,200
enjoyed the presentation it was short

00:24:47,760 --> 00:24:52,720
but

00:24:49,200 --> 00:24:55,840
i tried to make it easy

00:24:52,720 --> 00:24:59,440
those are my references and

00:24:55,840 --> 00:25:02,400
well feedback welcome and questions

00:24:59,440 --> 00:25:02,400
questions welcome

00:25:03,919 --> 00:25:07,240
thank you roberto um if you want to drop

00:25:06,640 --> 00:25:10,480
a

00:25:07,240 --> 00:25:14,320
a question just use the zoom q

00:25:10,480 --> 00:25:18,080
a functionality please um we don't have

00:25:14,320 --> 00:25:18,080
any questions yet roberto

00:25:18,159 --> 00:25:26,320
let's just wait for a little bit okay

00:25:21,440 --> 00:25:26,320
in case we can even continue

00:25:27,200 --> 00:25:30,320
on this line on the

00:25:28,860 --> 00:25:33,360
[Music]

00:25:30,320 --> 00:25:34,400
talk and yeah the talk channel on this

00:25:33,360 --> 00:25:37,039
card

00:25:34,400 --> 00:25:37,039
on discord

00:25:37,679 --> 00:25:43,840
all right i'll just wait a little bit

00:25:39,520 --> 00:25:43,840
more and if not

00:25:49,679 --> 00:25:52,720
okay so if you have any more questions

00:25:52,000 --> 00:25:54,880
to oh

00:25:52,720 --> 00:25:56,559
there's a question here from diego with

00:25:54,880 --> 00:26:00,320
all these different institutions what's

00:25:56,559 --> 00:26:00,320
the main challenge for integration

00:26:01,200 --> 00:26:08,320
well the main challenge is

00:26:05,200 --> 00:26:11,679
probably the legacy and the knowledge

00:26:08,320 --> 00:26:14,720
of technology inside the

00:26:11,679 --> 00:26:15,200
the institution this is why we focused

00:26:14,720 --> 00:26:19,279
on

00:26:15,200 --> 00:26:22,320
our work with suppliers

00:26:19,279 --> 00:26:23,039
and technology providers because for

00:26:22,320 --> 00:26:26,159
example

00:26:23,039 --> 00:26:29,840
if i have products of the shelf

00:26:26,159 --> 00:26:33,600
products that supports a specification

00:26:29,840 --> 00:26:36,840
institutions can just uh

00:26:33,600 --> 00:26:39,679
use those products those open source

00:26:36,840 --> 00:26:43,200
products and

00:26:39,679 --> 00:26:47,840
doesn't they don't have to get

00:26:43,200 --> 00:26:50,960
too uh too deep into the technology

00:26:47,840 --> 00:26:54,240
issues so

00:26:50,960 --> 00:26:55,520
those are i think the main the main

00:26:54,240 --> 00:26:58,559
problems

00:26:55,520 --> 00:27:01,200
and yes and the legacy institutions have

00:26:58,559 --> 00:27:01,840
legacy software legacy architectures

00:27:01,200 --> 00:27:04,840
that

00:27:01,840 --> 00:27:06,960
and there is a very there are very long

00:27:04,840 --> 00:27:11,120
times

00:27:06,960 --> 00:27:16,159
for dismissing and renewing

00:27:11,120 --> 00:27:19,679
institution architectures

00:27:16,159 --> 00:27:22,720
all right thanks for veteran give give

00:27:19,679 --> 00:27:22,720
roberto big hands

00:27:22,960 --> 00:27:26,720

YouTube URL: https://www.youtube.com/watch?v=FoD3CCGUXrQ


