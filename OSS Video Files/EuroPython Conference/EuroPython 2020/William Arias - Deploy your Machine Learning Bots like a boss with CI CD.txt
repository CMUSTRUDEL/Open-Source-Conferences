Title: William Arias - Deploy your Machine Learning Bots like a boss with CI CD
Publication date: 2020-09-21
Playlist: EuroPython 2020
Description: 
	"Deploy your Machine Learning Bots like a boss with CI/CD
EuroPython 2020 - Talk - 2020-07-23 - Parrot Data Science
Online

By William Arias

Context: Today is relatively easy to create and train a conversational agent using Machine Learning Techniques, fire it up and showcase it in your computer

Problem: Sharing your chatbot with the outside world is not as easy as training your models. Load Balancer, Unit Test, Integration Tests, Differential Tests ... Text Analytics and retrain the models to better serve your audience goes way beyond the simple agent that runs in the developer environment

Solution: I want to show how from my experience of deploying bots to production, leveraging DevOps + DataScience skills along with an entry level knowledge of Databases, CI/CD and distributed systems you can take your prototypes to a next level, deploy, iterate  and re-train your models faster.

Pre-reqs: Entry level understanding of CI/CD Pipelines, NLP, jupyterhub, Version Control, Rasa



License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/
Please see our speaker release agreement for details: https://ep2020.europython.eu/events/speaker-release-agreement/

    "
Captions: 
	00:00:06,240 --> 00:00:10,160
so next

00:00:06,879 --> 00:00:11,040
is william arias and he's going to talk

00:00:10,160 --> 00:00:13,280
about

00:00:11,040 --> 00:00:16,400
deploying the machine learning bots like

00:00:13,280 --> 00:00:18,160
a boss using cicd um

00:00:16,400 --> 00:00:19,920
will you marry us you you work for

00:00:18,160 --> 00:00:22,960
gitlab is that correct

00:00:19,920 --> 00:00:24,720
hello yes i work at goodlab yeah perfect

00:00:22,960 --> 00:00:27,119
so you're the expert

00:00:24,720 --> 00:00:28,400
no so right where are you joining from

00:00:27,119 --> 00:00:31,039
by the way

00:00:28,400 --> 00:00:32,960
i am i am from colombia but i live in

00:00:31,039 --> 00:00:35,120
prague in czech republic

00:00:32,960 --> 00:00:37,040
ah right so it's a good time zone for

00:00:35,120 --> 00:00:39,360
you now yeah yeah

00:00:37,040 --> 00:00:41,120
okay excellent okay so please start

00:00:39,360 --> 00:00:44,800
sharing your screen and then

00:00:41,120 --> 00:00:47,200
you can take it away

00:00:44,800 --> 00:00:48,480
okay hello everyone so my name is

00:00:47,200 --> 00:00:50,640
william

00:00:48,480 --> 00:00:51,600
and today i want to share with you some

00:00:50,640 --> 00:00:55,199
of the

00:00:51,600 --> 00:00:58,559
learnings i had since i started like

00:00:55,199 --> 00:00:59,359
back in 2016 working with developing

00:00:58,559 --> 00:01:02,640
bots

00:00:59,359 --> 00:01:05,519
and i'm big fan of nlp and

00:01:02,640 --> 00:01:06,000
one of the use cases of a chatbot and in

00:01:05,519 --> 00:01:08,560
this

00:01:06,000 --> 00:01:09,040
in this talk i want to introduce you to

00:01:08,560 --> 00:01:11,119
how

00:01:09,040 --> 00:01:13,200
you can step up your game using

00:01:11,119 --> 00:01:13,920
principles of continuous integration and

00:01:13,200 --> 00:01:17,040
continuous

00:01:13,920 --> 00:01:21,280
delivery using rasa the

00:01:17,040 --> 00:01:24,320
framework for chatbots and gitlab cicd

00:01:21,280 --> 00:01:25,200
so why why why i decided that i wanted

00:01:24,320 --> 00:01:28,640
to share

00:01:25,200 --> 00:01:30,640
these learnings with you because

00:01:28,640 --> 00:01:33,200
when you start working on this as a

00:01:30,640 --> 00:01:36,000
hobbyist or as professional

00:01:33,200 --> 00:01:37,439
i have done both usually what you do is

00:01:36,000 --> 00:01:38,799
that you start behaving like a one

00:01:37,439 --> 00:01:41,920
person band

00:01:38,799 --> 00:01:43,280
so i i was reviewing the agenda of the

00:01:41,920 --> 00:01:45,439
talks today

00:01:43,280 --> 00:01:47,040
and if you have been following as well

00:01:45,439 --> 00:01:48,720
you can see that there are presentations

00:01:47,040 --> 00:01:50,880
that they are teaching you how to

00:01:48,720 --> 00:01:52,399
create a docker file how to deploy a

00:01:50,880 --> 00:01:54,240
model using docker

00:01:52,399 --> 00:01:55,759
how to serve it so you have to create an

00:01:54,240 --> 00:01:58,799
api and

00:01:55,759 --> 00:02:00,079
besides you have to use other tools for

00:01:58,799 --> 00:02:02,399
to create a model

00:02:00,079 --> 00:02:03,600
itself and at the end we start behaving

00:02:02,399 --> 00:02:05,439
more of this like this

00:02:03,600 --> 00:02:06,640
like like i don't know if you like the

00:02:05,439 --> 00:02:08,160
simpsons

00:02:06,640 --> 00:02:10,560
when i was doing that i remember this

00:02:08,160 --> 00:02:12,319
guy because we are a one one person band

00:02:10,560 --> 00:02:15,360
we are playing all the instruments

00:02:12,319 --> 00:02:16,319
so you start becoming or or you are

00:02:15,360 --> 00:02:19,280
expected

00:02:16,319 --> 00:02:20,000
to deliver a a an application that

00:02:19,280 --> 00:02:22,000
contains

00:02:20,000 --> 00:02:23,599
that has machine learning embedded you

00:02:22,000 --> 00:02:24,560
more of less have to be here like a one

00:02:23,599 --> 00:02:28,160
person but

00:02:24,560 --> 00:02:30,560
and know a lot of instruments and to

00:02:28,160 --> 00:02:32,000
learn how to play these instruments

00:02:30,560 --> 00:02:33,680
there is a learning curve

00:02:32,000 --> 00:02:36,480
that might be frustrating i was the

00:02:33,680 --> 00:02:39,840
other day um

00:02:36,480 --> 00:02:40,400
teaching assistant um yeah teaching

00:02:39,840 --> 00:02:43,599
assistant

00:02:40,400 --> 00:02:46,400
in some online course where the students

00:02:43,599 --> 00:02:47,599
they were able to create the model for a

00:02:46,400 --> 00:02:49,599
chatbot

00:02:47,599 --> 00:02:50,640
but then when they were asked to please

00:02:49,599 --> 00:02:53,280
deploy to

00:02:50,640 --> 00:02:54,800
aws and show us give us an end point

00:02:53,280 --> 00:02:56,080
where we can connect a channel and use

00:02:54,800 --> 00:02:58,080
the bot

00:02:56,080 --> 00:02:59,920
many of them they start struggling

00:02:58,080 --> 00:03:01,360
because that's not what you are supposed

00:02:59,920 --> 00:03:03,760
to necessarily

00:03:01,360 --> 00:03:04,400
be aware of you know the models you know

00:03:03,760 --> 00:03:06,080
how to try

00:03:04,400 --> 00:03:08,640
how to use different libraries to create

00:03:06,080 --> 00:03:10,480
the to classify intents to classify

00:03:08,640 --> 00:03:13,840
entities but not necessarily

00:03:10,480 --> 00:03:17,360
all the tooling that you are expected to

00:03:13,840 --> 00:03:19,519
more of less uh do have some

00:03:17,360 --> 00:03:20,640
some some knowledge to be able to serve

00:03:19,519 --> 00:03:23,760
a model so

00:03:20,640 --> 00:03:24,400
example let's say you use tensorflow for

00:03:23,760 --> 00:03:27,200
something

00:03:24,400 --> 00:03:28,959
for uh to create some sort some

00:03:27,200 --> 00:03:30,159
classification problem to solve some

00:03:28,959 --> 00:03:32,400
classification problem

00:03:30,159 --> 00:03:34,640
so your prototyping jupiter notebook and

00:03:32,400 --> 00:03:37,040
once you prototype jupiter notebook you

00:03:34,640 --> 00:03:38,480
you if you want to store and a probably

00:03:37,040 --> 00:03:40,480
you will need a database

00:03:38,480 --> 00:03:41,920
so you need to know which one should i

00:03:40,480 --> 00:03:44,400
use should i use something like

00:03:41,920 --> 00:03:47,440
cassandra for example or puzzle my sql

00:03:44,400 --> 00:03:49,519
and then as i've said before

00:03:47,440 --> 00:03:50,560
then if you start digging into this you

00:03:49,519 --> 00:03:52,480
will

00:03:50,560 --> 00:03:53,920
for sure you will find okay so i should

00:03:52,480 --> 00:03:56,239
deploy it as a container

00:03:53,920 --> 00:03:57,760
and then kubernetes and how do i deploy

00:03:56,239 --> 00:03:59,200
it should i create a virtual machine or

00:03:57,760 --> 00:04:00,640
should i go directly to the

00:03:59,200 --> 00:04:02,080
platform as a service or should i just

00:04:00,640 --> 00:04:02,799
use an api software as a service

00:04:02,080 --> 00:04:05,280
whatever

00:04:02,799 --> 00:04:07,920
and next to serve it to the other work

00:04:05,280 --> 00:04:09,280
so all of these things

00:04:07,920 --> 00:04:11,439
they are more of less what they call

00:04:09,280 --> 00:04:13,840
today full stack machine learning

00:04:11,439 --> 00:04:16,880
engineer or data scientist i don't know

00:04:13,840 --> 00:04:19,280
and i want to share with you what was

00:04:16,880 --> 00:04:22,479
the approach that i follow and how today

00:04:19,280 --> 00:04:23,919
if your purpose or if the challenge that

00:04:22,479 --> 00:04:26,240
you are facing is

00:04:23,919 --> 00:04:28,080
i want to create i don't know my own

00:04:26,240 --> 00:04:31,440
startup in which i will build

00:04:28,080 --> 00:04:34,400
chat bots for whatever business

00:04:31,440 --> 00:04:35,520
and you want to be fast and you want to

00:04:34,400 --> 00:04:38,560
deploy

00:04:35,520 --> 00:04:42,320
in a very very like close to

00:04:38,560 --> 00:04:44,880
standard professional way but also

00:04:42,320 --> 00:04:46,400
with iteration in mind and being fast so

00:04:44,880 --> 00:04:48,560
i want to show you how

00:04:46,400 --> 00:04:50,560
i did it how am i doing it and this is

00:04:48,560 --> 00:04:52,800
not like written in stone

00:04:50,560 --> 00:04:54,880
this can change and all these workflows

00:04:52,800 --> 00:04:57,759
you if you know the principles then you

00:04:54,880 --> 00:04:59,520
can adapt it to your own workflow so how

00:04:57,759 --> 00:05:02,720
is the the how i started

00:04:59,520 --> 00:05:04,960
to to divide this problem when i say

00:05:02,720 --> 00:05:06,479
it's taking me too much to deploy a

00:05:04,960 --> 00:05:09,199
chatbot to production

00:05:06,479 --> 00:05:11,280
it works in my machine the typical one

00:05:09,199 --> 00:05:14,240
it works in a machine it's very easy

00:05:11,280 --> 00:05:15,199
to run it in localhost but i want to

00:05:14,240 --> 00:05:16,800
deploy it

00:05:15,199 --> 00:05:18,960
and and if you are doing this for

00:05:16,800 --> 00:05:20,400
yourself as a one-person band or for a

00:05:18,960 --> 00:05:21,840
company you will find these these

00:05:20,400 --> 00:05:23,840
challenges so first

00:05:21,840 --> 00:05:24,880
i started thinking of it like what they

00:05:23,840 --> 00:05:26,639
are calling these days

00:05:24,880 --> 00:05:29,039
machine learning operations that this

00:05:26,639 --> 00:05:31,199
could be a workflow of that

00:05:29,039 --> 00:05:33,039
this talk is not necessarily about ml

00:05:31,199 --> 00:05:35,840
ops but it borrows

00:05:33,039 --> 00:05:37,520
some concepts from there so first you

00:05:35,840 --> 00:05:38,720
are aware that the model that you are

00:05:37,520 --> 00:05:41,199
creating

00:05:38,720 --> 00:05:42,320
has some some life cycle in which you

00:05:41,199 --> 00:05:45,520
have to go through all these

00:05:42,320 --> 00:05:47,120
steps that these are the ones that

00:05:45,520 --> 00:05:49,120
we are we are expected to be

00:05:47,120 --> 00:05:51,600
knowledgeable in how can i

00:05:49,120 --> 00:05:52,560
ingest the data how can i version it or

00:05:51,600 --> 00:05:54,800
label it

00:05:52,560 --> 00:05:56,960
and run the validation test training

00:05:54,800 --> 00:05:58,720
model fine tune it happy parameters

00:05:56,960 --> 00:06:01,120
analysis reading all these

00:05:58,720 --> 00:06:02,080
learning curves and then deploy and then

00:06:01,120 --> 00:06:04,479
get feedback

00:06:02,080 --> 00:06:06,000
so this is the only the model but one of

00:06:04,479 --> 00:06:06,720
the things that i learned that is very

00:06:06,000 --> 00:06:08,960
important

00:06:06,720 --> 00:06:10,560
when you want to scale these solutions

00:06:08,960 --> 00:06:11,440
and when you are not only developing for

00:06:10,560 --> 00:06:14,400
yourself but

00:06:11,440 --> 00:06:15,199
this even helps if it's for yourself

00:06:14,400 --> 00:06:17,360
because

00:06:15,199 --> 00:06:19,199
when you move to the process view of

00:06:17,360 --> 00:06:21,600
what you are attempting to do

00:06:19,199 --> 00:06:22,319
the first person that will be grateful

00:06:21,600 --> 00:06:24,479
three weeks

00:06:22,319 --> 00:06:26,000
later of a month later it's yourself you

00:06:24,479 --> 00:06:26,400
say oh that's so good that i put it in

00:06:26,000 --> 00:06:29,520
this

00:06:26,400 --> 00:06:32,319
in this view because now you understand

00:06:29,520 --> 00:06:33,280
all these steps and more or less how you

00:06:32,319 --> 00:06:36,560
can

00:06:33,280 --> 00:06:37,360
split their responsibilities and i put

00:06:36,560 --> 00:06:39,360
it here that

00:06:37,360 --> 00:06:41,280
one of them is a dialogue contributor

00:06:39,360 --> 00:06:43,680
because one of the things i have found

00:06:41,280 --> 00:06:44,880
while working developing chatbots with

00:06:43,680 --> 00:06:48,479
russell library

00:06:44,880 --> 00:06:50,080
or others is that you might be the

00:06:48,479 --> 00:06:51,840
let's say ex pro i don't like that word

00:06:50,080 --> 00:06:54,400
but you might be the most knowledgeable

00:06:51,840 --> 00:06:57,520
person in how to build

00:06:54,400 --> 00:07:00,400
the bot but you are not necessarily

00:06:57,520 --> 00:07:02,000
the subject matter expert of the topic

00:07:00,400 --> 00:07:04,960
that the bot is supposed to provide

00:07:02,000 --> 00:07:05,840
a service and in many cases the subject

00:07:04,960 --> 00:07:08,080
matter expert

00:07:05,840 --> 00:07:08,880
is a person that they are not developers

00:07:08,080 --> 00:07:11,919
or they are no

00:07:08,880 --> 00:07:13,120
they don't have any uh computer science

00:07:11,919 --> 00:07:14,800
software engineering

00:07:13,120 --> 00:07:16,639
background but they are the ones that

00:07:14,800 --> 00:07:18,319
they know what should be the training

00:07:16,639 --> 00:07:20,800
data that you fit to the bot

00:07:18,319 --> 00:07:21,840
they know what type of questions the the

00:07:20,800 --> 00:07:25,520
end users

00:07:21,840 --> 00:07:27,759
will will ask so in this way you also

00:07:25,520 --> 00:07:28,720
can start enabling other type of

00:07:27,759 --> 00:07:30,800
profiles

00:07:28,720 --> 00:07:31,759
in how can i incorporate their

00:07:30,800 --> 00:07:34,400
contributions

00:07:31,759 --> 00:07:36,080
to my process to create a better bot so

00:07:34,400 --> 00:07:38,720
this is a process view

00:07:36,080 --> 00:07:39,520
that it contains many of the steps from

00:07:38,720 --> 00:07:41,840
the

00:07:39,520 --> 00:07:43,039
model lifecycle view and what are the

00:07:41,840 --> 00:07:45,039
benefits of this when you

00:07:43,039 --> 00:07:46,160
when you do this first is a favor that

00:07:45,039 --> 00:07:48,160
you do to yourself

00:07:46,160 --> 00:07:50,080
but also you have a common understanding

00:07:48,160 --> 00:07:52,720
of this process for everyone

00:07:50,080 --> 00:07:54,160
so if next time there is an iteration

00:07:52,720 --> 00:07:56,479
that something should change

00:07:54,160 --> 00:07:57,599
now it's very easy for let's say some

00:07:56,479 --> 00:08:00,639
new employee or

00:07:57,599 --> 00:08:01,759
or for you one month later to retake and

00:08:00,639 --> 00:08:03,280
say okay this is

00:08:01,759 --> 00:08:05,039
this is what i was doing here is where i

00:08:03,280 --> 00:08:06,800
am and when you

00:08:05,039 --> 00:08:08,800
use this process modeling as well you

00:08:06,800 --> 00:08:10,240
can identify bottlenecks or where

00:08:08,800 --> 00:08:12,400
the things that you are doing might be

00:08:10,240 --> 00:08:15,360
failing and also

00:08:12,400 --> 00:08:17,280
this enables you with some standard that

00:08:15,360 --> 00:08:19,120
will enable iteration so you can improve

00:08:17,280 --> 00:08:20,160
with the passive time the performance of

00:08:19,120 --> 00:08:22,879
the chatbot

00:08:20,160 --> 00:08:24,319
and now like how does this looks so the

00:08:22,879 --> 00:08:27,759
components view

00:08:24,319 --> 00:08:30,400
and here this is the high level

00:08:27,759 --> 00:08:31,680
diagram of what i have architected that

00:08:30,400 --> 00:08:34,719
it works

00:08:31,680 --> 00:08:36,240
to a very decent level in which this

00:08:34,719 --> 00:08:39,360
could be the

00:08:36,240 --> 00:08:41,599
pilot or prototype but very decent no

00:08:39,360 --> 00:08:42,399
not poc hackathon level very decent

00:08:41,599 --> 00:08:45,839
pilot

00:08:42,399 --> 00:08:47,760
that i will go step by step

00:08:45,839 --> 00:08:49,200
and i will show you starting from from

00:08:47,760 --> 00:08:51,440
this part so

00:08:49,200 --> 00:08:52,560
what is in the in this part in the left

00:08:51,440 --> 00:08:54,720
the dialogues or

00:08:52,560 --> 00:08:56,720
python code this is your development

00:08:54,720 --> 00:08:57,839
environment this is where you have your

00:08:56,720 --> 00:09:00,080
pycharm or

00:08:57,839 --> 00:09:01,360
visual studio sublime text whatever here

00:09:00,080 --> 00:09:05,200
is where you have

00:09:01,360 --> 00:09:08,320
the your code or someone

00:09:05,200 --> 00:09:08,959
in dialogue in the certain format for

00:09:08,320 --> 00:09:11,600
your bot

00:09:08,959 --> 00:09:12,240
so the only thing you do once you invest

00:09:11,600 --> 00:09:15,440
time

00:09:12,240 --> 00:09:18,240
learning principles of cicd

00:09:15,440 --> 00:09:19,120
is that you work in your machine once

00:09:18,240 --> 00:09:21,120
you are happy

00:09:19,120 --> 00:09:23,120
with your changes or with whatever you

00:09:21,120 --> 00:09:26,480
did in your local environment

00:09:23,120 --> 00:09:29,040
you do git commit and get push to remote

00:09:26,480 --> 00:09:29,760
so what i am doing in my workflow is

00:09:29,040 --> 00:09:32,399
that

00:09:29,760 --> 00:09:33,440
i create i make a change or in this case

00:09:32,399 --> 00:09:35,680
for this example

00:09:33,440 --> 00:09:37,040
i am adding more dialogues to the bot so

00:09:35,680 --> 00:09:39,279
the bot knows

00:09:37,040 --> 00:09:41,440
knows more combinations and it is able

00:09:39,279 --> 00:09:44,000
to have better conversations

00:09:41,440 --> 00:09:44,640
this push will automatically and from

00:09:44,000 --> 00:09:47,440
here

00:09:44,640 --> 00:09:49,200
everything is automatic back in the day

00:09:47,440 --> 00:09:51,040
let's say four years ago when i started

00:09:49,200 --> 00:09:54,320
before using this

00:09:51,040 --> 00:09:56,640
you have to use the command command line

00:09:54,320 --> 00:09:57,440
and know each one of the commands that

00:09:56,640 --> 00:10:00,160
for example

00:09:57,440 --> 00:10:00,800
the rasa framework provides to do rasa

00:10:00,160 --> 00:10:04,320
train

00:10:00,800 --> 00:10:07,120
rasa cross validate or as test

00:10:04,320 --> 00:10:08,800
data all of these things so here what is

00:10:07,120 --> 00:10:12,160
what is happening is that

00:10:08,800 --> 00:10:14,800
once i commit the code automatically

00:10:12,160 --> 00:10:16,880
using gitlab ci it will start it will

00:10:14,800 --> 00:10:19,440
start some runners or

00:10:16,880 --> 00:10:21,519
containers or that was called runner

00:10:19,440 --> 00:10:24,880
that each one of these

00:10:21,519 --> 00:10:26,880
will run the steps that you usually will

00:10:24,880 --> 00:10:30,160
run manually so this is not

00:10:26,880 --> 00:10:32,079
nothing new for someone who is who has

00:10:30,160 --> 00:10:34,320
been working in traditional development

00:10:32,079 --> 00:10:36,240
for years but this is more tailored for

00:10:34,320 --> 00:10:38,880
people that maybe they come

00:10:36,240 --> 00:10:40,320
from with a math background or they are

00:10:38,880 --> 00:10:41,519
breaking into machine learning and they

00:10:40,320 --> 00:10:43,600
would like to build bots

00:10:41,519 --> 00:10:45,279
this is not necessarily knowledge that

00:10:43,600 --> 00:10:46,800
they have at least for example i didn't

00:10:45,279 --> 00:10:47,760
have it four years ago when i started

00:10:46,800 --> 00:10:50,640
these these

00:10:47,760 --> 00:10:52,079
good practices of sofa delivery so now

00:10:50,640 --> 00:10:53,600
that i discovered it that's why i said

00:10:52,079 --> 00:10:55,600
oh this is this makes my life it's

00:10:53,600 --> 00:10:58,800
easier i want to share with you

00:10:55,600 --> 00:11:01,040
so these these steps that are usually

00:10:58,800 --> 00:11:02,160
executed manually they start running in

00:11:01,040 --> 00:11:04,959
different machines

00:11:02,160 --> 00:11:06,959
so one one runner is going to validate

00:11:04,959 --> 00:11:09,839
that the data that you push

00:11:06,959 --> 00:11:10,880
to to the repository it's okay the

00:11:09,839 --> 00:11:13,760
format is is the

00:11:10,880 --> 00:11:15,839
is the one that the bot requires then

00:11:13,760 --> 00:11:18,160
the the data is complete

00:11:15,839 --> 00:11:19,920
and it will train the model and it will

00:11:18,160 --> 00:11:20,720
test the model and by test the model

00:11:19,920 --> 00:11:22,640
here

00:11:20,720 --> 00:11:24,240
is the concept of testing machine

00:11:22,640 --> 00:11:24,720
learning this with you can you can

00:11:24,240 --> 00:11:27,920
either

00:11:24,720 --> 00:11:29,680
create a testing uh test test data set

00:11:27,920 --> 00:11:30,959
that you will run against your model or

00:11:29,680 --> 00:11:33,200
you can do for example

00:11:30,959 --> 00:11:34,480
in this case of my demo i do cross

00:11:33,200 --> 00:11:36,800
validation

00:11:34,480 --> 00:11:37,680
with the data that i have available so

00:11:36,800 --> 00:11:41,040
assuming

00:11:37,680 --> 00:11:43,279
that each one of these steps

00:11:41,040 --> 00:11:44,160
it's successful then the model gets

00:11:43,279 --> 00:11:46,959
created

00:11:44,160 --> 00:11:47,760
so you have an artifact now and the the

00:11:46,959 --> 00:11:50,399
artifact

00:11:47,760 --> 00:11:51,440
is your model and if you are happy with

00:11:50,399 --> 00:11:53,120
the performance

00:11:51,440 --> 00:11:55,040
because when you test the model you will

00:11:53,120 --> 00:11:56,320
get some metrics of the performance of

00:11:55,040 --> 00:11:56,720
your model and if you are happy with

00:11:56,320 --> 00:11:58,959
that

00:11:56,720 --> 00:11:59,839
you say okay so now i want to do a merge

00:11:58,959 --> 00:12:02,000
request

00:11:59,839 --> 00:12:03,120
and and i want to put my bot into the

00:12:02,000 --> 00:12:05,040
main branch

00:12:03,120 --> 00:12:06,800
and this will deploy and this will

00:12:05,040 --> 00:12:07,680
deploy to production or staging of

00:12:06,800 --> 00:12:10,800
prepro

00:12:07,680 --> 00:12:14,399
and here this part of the paper trail

00:12:10,800 --> 00:12:17,279
this is this is one of the the key key

00:12:14,399 --> 00:12:18,880
key steps in machine learning operations

00:12:17,279 --> 00:12:19,200
that i am borrowing and bringing into

00:12:18,880 --> 00:12:21,839
this

00:12:19,200 --> 00:12:23,279
into this pipeline of serving chatbots

00:12:21,839 --> 00:12:26,639
is that

00:12:23,279 --> 00:12:29,600
whatever you do whatever you you change

00:12:26,639 --> 00:12:30,320
you make in your dialogues or in your

00:12:29,600 --> 00:12:33,040
code

00:12:30,320 --> 00:12:35,200
this by running these pipelines this

00:12:33,040 --> 00:12:37,440
will create a paper tray

00:12:35,200 --> 00:12:38,959
and what does it mean you will have a

00:12:37,440 --> 00:12:42,000
record of

00:12:38,959 --> 00:12:44,800
for example this snapshot of today

00:12:42,000 --> 00:12:45,760
the mo the model that was created today

00:12:44,800 --> 00:12:47,920
what type of the

00:12:45,760 --> 00:12:48,800
training data it used what was the code

00:12:47,920 --> 00:12:50,639
at that moment so

00:12:48,800 --> 00:12:52,800
in other words this is version control

00:12:50,639 --> 00:12:54,959
that is getting into a record

00:12:52,800 --> 00:12:56,800
that i post in a weekly and if someday

00:12:54,959 --> 00:12:57,200
you work in a company that they will get

00:12:56,800 --> 00:12:59,040
some

00:12:57,200 --> 00:13:00,320
audit and they have to show show me why

00:12:59,040 --> 00:13:02,480
your model

00:13:00,320 --> 00:13:04,560
was executing these predictions so you

00:13:02,480 --> 00:13:05,200
can easily go to the history of commits

00:13:04,560 --> 00:13:07,120
and say look

00:13:05,200 --> 00:13:08,720
this model had this training data and

00:13:07,120 --> 00:13:10,079
these were the parameters and here is

00:13:08,720 --> 00:13:11,360
the code and here is the data that we

00:13:10,079 --> 00:13:13,040
used to trade

00:13:11,360 --> 00:13:14,480
so this is the paper trade that this is

00:13:13,040 --> 00:13:17,360
required in

00:13:14,480 --> 00:13:18,000
in in the enterprise and also if you are

00:13:17,360 --> 00:13:20,000
just playing

00:13:18,000 --> 00:13:21,120
this paper trade helps you to keep track

00:13:20,000 --> 00:13:23,120
of your experiments

00:13:21,120 --> 00:13:24,240
and have some sort of report in which

00:13:23,120 --> 00:13:26,880
you can

00:13:24,240 --> 00:13:28,639
compare if you if whatever changes you

00:13:26,880 --> 00:13:30,399
were making was improving

00:13:28,639 --> 00:13:32,639
or deteriorating the performance of your

00:13:30,399 --> 00:13:34,720
model so once the model

00:13:32,639 --> 00:13:36,560
is ready and i'm happy with everything

00:13:34,720 --> 00:13:38,160
and all the steps and the testing

00:13:36,560 --> 00:13:40,160
from the software engineering point of

00:13:38,160 --> 00:13:41,440
view and machine learning is successful

00:13:40,160 --> 00:13:44,639
and i'm happy with everyone

00:13:41,440 --> 00:13:48,320
everything what i do here is that

00:13:44,639 --> 00:13:51,680
using this razer framework it provides

00:13:48,320 --> 00:13:54,959
uh api rest that you can

00:13:51,680 --> 00:13:57,440
deploy a model server the

00:13:54,959 --> 00:13:59,519
motor server in whatever you want in my

00:13:57,440 --> 00:14:02,560
case i'm using it in google cloud

00:13:59,519 --> 00:14:05,760
and then you can use this api api rest

00:14:02,560 --> 00:14:08,880
api to put more

00:14:05,760 --> 00:14:12,320
and make it active and once the model is

00:14:08,880 --> 00:14:13,440
is is there then it's it could be

00:14:12,320 --> 00:14:16,800
available

00:14:13,440 --> 00:14:18,320
to be tested by real users or or other

00:14:16,800 --> 00:14:21,040
people that they can serve as

00:14:18,320 --> 00:14:21,519
testers of your bot of your dialogues

00:14:21,040 --> 00:14:23,120
and

00:14:21,519 --> 00:14:24,639
but it doesn't finish there because

00:14:23,120 --> 00:14:27,440
until this point

00:14:24,639 --> 00:14:27,760
i could be quite happy that the only

00:14:27,440 --> 00:14:30,560
thing

00:14:27,760 --> 00:14:31,360
i had to do was let's update the

00:14:30,560 --> 00:14:34,959
knowledge

00:14:31,360 --> 00:14:36,399
base of my bot let's just do git add git

00:14:34,959 --> 00:14:38,320
commit git push

00:14:36,399 --> 00:14:40,320
it goes automatically through all of

00:14:38,320 --> 00:14:43,440
these steps i don't have to worry

00:14:40,320 --> 00:14:45,760
about putting manually

00:14:43,440 --> 00:14:47,360
executing commands and checking

00:14:45,760 --> 00:14:48,880
performance metrics because i can build

00:14:47,360 --> 00:14:49,839
the logic that if it's above certain

00:14:48,880 --> 00:14:52,800
threshold

00:14:49,839 --> 00:14:54,720
it's okay but once you are there and the

00:14:52,800 --> 00:14:56,240
model is served

00:14:54,720 --> 00:14:58,079
in this model server and is ready to

00:14:56,240 --> 00:15:00,240
take conversations it's very important

00:14:58,079 --> 00:15:02,000
to close the loop with some feedback and

00:15:00,240 --> 00:15:03,839
the way that i've been using this and i

00:15:02,000 --> 00:15:07,279
will show you later is that

00:15:03,839 --> 00:15:08,240
i am using the same rest api that

00:15:07,279 --> 00:15:11,279
provides

00:15:08,240 --> 00:15:14,800
the rasa framework to extract

00:15:11,279 --> 00:15:17,199
a record of dialogues or conversations

00:15:14,800 --> 00:15:18,160
that the bot has been having with real

00:15:17,199 --> 00:15:20,959
users

00:15:18,160 --> 00:15:22,000
so what what you can do here is that

00:15:20,959 --> 00:15:24,000
when you expose

00:15:22,000 --> 00:15:26,000
it to the other world and the robot is

00:15:24,000 --> 00:15:29,759
interacting with real

00:15:26,000 --> 00:15:31,920
people using different ways to say hi

00:15:29,759 --> 00:15:33,279
or to express an intent you can bring

00:15:31,920 --> 00:15:36,160
this back to

00:15:33,279 --> 00:15:37,360
to to your environment and some sort of

00:15:36,160 --> 00:15:39,040
data playground

00:15:37,360 --> 00:15:41,120
and here you can do what you like the

00:15:39,040 --> 00:15:45,680
most that is okay let's use

00:15:41,120 --> 00:15:48,560
pandas python libraries to analyze

00:15:45,680 --> 00:15:49,279
to to do nlp in other words and from

00:15:48,560 --> 00:15:52,800
there you can

00:15:49,279 --> 00:15:55,040
extract insights to later feed it back

00:15:52,800 --> 00:15:57,680
into the boat and retrain it and

00:15:55,040 --> 00:15:58,560
start continuing this what i say before

00:15:57,680 --> 00:16:01,759
this

00:15:58,560 --> 00:16:05,040
loop that enables interracial iteration

00:16:01,759 --> 00:16:07,120
to improve the boat performance

00:16:05,040 --> 00:16:08,160
so more of less what i'm telling you is

00:16:07,120 --> 00:16:11,680
that

00:16:08,160 --> 00:16:14,320
you you could be a one person band

00:16:11,680 --> 00:16:15,519
but you can also bring a conductor to

00:16:14,320 --> 00:16:17,279
your orchestra

00:16:15,519 --> 00:16:19,279
someone or something in this case

00:16:17,279 --> 00:16:22,079
technology that will help you

00:16:19,279 --> 00:16:23,600
orchestrate all of these manual steps

00:16:22,079 --> 00:16:26,240
and at the end of the day

00:16:23,600 --> 00:16:27,839
by using these principles of continuous

00:16:26,240 --> 00:16:30,880
integration and delivery

00:16:27,839 --> 00:16:33,920
will step up your game creating bots and

00:16:30,880 --> 00:16:34,880
very important really it will make your

00:16:33,920 --> 00:16:38,240
life easier

00:16:34,880 --> 00:16:40,079
i am a testimony of that i used to to to

00:16:38,240 --> 00:16:41,360
before as i was saying with the the

00:16:40,079 --> 00:16:44,720
other um

00:16:41,360 --> 00:16:46,079
with the other talks i i had sometimes

00:16:44,720 --> 00:16:48,079
when i wanted to make some change and

00:16:46,079 --> 00:16:49,199
the change was minimal like adding just

00:16:48,079 --> 00:16:52,480
one more sentence

00:16:49,199 --> 00:16:55,920
or changing it happened to us uh

00:16:52,480 --> 00:16:59,680
building a boat for this topic that

00:16:55,920 --> 00:17:01,360
have it here have us here online that is

00:16:59,680 --> 00:17:03,120
when we were building a boat like two

00:17:01,360 --> 00:17:04,400
months ago for frequent ask questions

00:17:03,120 --> 00:17:07,839
about

00:17:04,400 --> 00:17:09,199
coronavirus one day we were the boat was

00:17:07,839 --> 00:17:11,439
supposed to answer

00:17:09,199 --> 00:17:12,720
no don't use mask because masks should

00:17:11,439 --> 00:17:15,760
be used only by

00:17:12,720 --> 00:17:18,319
health professionals one day later no no

00:17:15,760 --> 00:17:18,880
the bot should reply yes yes you use

00:17:18,319 --> 00:17:21,760
create

00:17:18,880 --> 00:17:24,079
make your own mask and please use it so

00:17:21,760 --> 00:17:26,720
it was only one single change

00:17:24,079 --> 00:17:28,000
in one sentence of the bot and it will

00:17:26,720 --> 00:17:31,200
imply that you have to

00:17:28,000 --> 00:17:33,600
maybe jump into the docket

00:17:31,200 --> 00:17:35,760
much make the change many things here

00:17:33,600 --> 00:17:38,160
the only thing you have to do is

00:17:35,760 --> 00:17:39,679
just put it in your in your pie chart in

00:17:38,160 --> 00:17:42,480
your local environment

00:17:39,679 --> 00:17:44,080
update it git commit hit push and this

00:17:42,480 --> 00:17:47,760
will take care of that

00:17:44,080 --> 00:17:48,799
so uh this is how in this case i'm in

00:17:47,760 --> 00:17:51,760
powerpoint

00:17:48,799 --> 00:17:54,080
keynote so everything works in keynote

00:17:51,760 --> 00:17:57,360
so i want to show you a video

00:17:54,080 --> 00:17:59,600
of how it could look like so

00:17:57,360 --> 00:18:01,600
this i will share with you also a link

00:17:59,600 --> 00:18:04,320
this is public on youtube

00:18:01,600 --> 00:18:05,919
so here typical developer workflow i'm

00:18:04,320 --> 00:18:08,880
just creating a branch

00:18:05,919 --> 00:18:10,320
in which i want to work on my changes so

00:18:08,880 --> 00:18:14,240
once i create the branch

00:18:10,320 --> 00:18:18,160
i'm using the this is the rasa format

00:18:14,240 --> 00:18:18,799
to or to to add intents or knowledge to

00:18:18,160 --> 00:18:22,480
the bot

00:18:18,799 --> 00:18:25,679
i'm just adding two words okay i am

00:18:22,480 --> 00:18:26,080
i'm just adding two words here um hit

00:18:25,679 --> 00:18:29,120
add

00:18:26,080 --> 00:18:30,080
git commit and i'm here after i i commit

00:18:29,120 --> 00:18:32,320
the changes

00:18:30,080 --> 00:18:33,760
and i will push i will push them here is

00:18:32,320 --> 00:18:37,520
where the where the

00:18:33,760 --> 00:18:38,080
magic starts because i'm pushing to to

00:18:37,520 --> 00:18:40,400
remote

00:18:38,080 --> 00:18:42,000
and in the remote which is gitlab is

00:18:40,400 --> 00:18:44,799
where i have configured

00:18:42,000 --> 00:18:46,000
all this orchestration with my new newly

00:18:44,799 --> 00:18:49,919
hired conductor

00:18:46,000 --> 00:18:52,640
for my or orchestra so typical typical

00:18:49,919 --> 00:18:54,160
let's say developer workflow this is

00:18:52,640 --> 00:18:57,360
creating a merge request

00:18:54,160 --> 00:18:58,320
that when i come here and i this started

00:18:57,360 --> 00:19:02,000
automatically

00:18:58,320 --> 00:19:05,440
once i did the push automatically this

00:19:02,000 --> 00:19:07,919
started to run this pipeline which

00:19:05,440 --> 00:19:08,559
one of these steps are ensuring that

00:19:07,919 --> 00:19:10,720
when the bot

00:19:08,559 --> 00:19:12,480
is ready is because it's really ready to

00:19:10,720 --> 00:19:14,080
be deployed to the production

00:19:12,480 --> 00:19:16,559
and each one of these steps what they

00:19:14,080 --> 00:19:17,600
are doing is what i described in the

00:19:16,559 --> 00:19:19,520
diagram before

00:19:17,600 --> 00:19:21,440
is testing that the format or the

00:19:19,520 --> 00:19:22,960
template that we need to feed the

00:19:21,440 --> 00:19:26,559
training data to the bot

00:19:22,960 --> 00:19:28,000
is is correct it's testing it's creating

00:19:26,559 --> 00:19:30,400
the model

00:19:28,000 --> 00:19:31,760
and once that is creating a model is

00:19:30,400 --> 00:19:34,480
testing the model

00:19:31,760 --> 00:19:35,919
so typical developer workflow with the

00:19:34,480 --> 00:19:38,000
good practices so here

00:19:35,919 --> 00:19:39,280
what i'm showing is that i'm going one

00:19:38,000 --> 00:19:41,120
runner by runner

00:19:39,280 --> 00:19:43,360
and these are the the the different

00:19:41,120 --> 00:19:45,760
machines that are executing

00:19:43,360 --> 00:19:47,120
automatically the steps that i that i if

00:19:45,760 --> 00:19:47,760
i don't have this i will have to do

00:19:47,120 --> 00:19:49,760
manually

00:19:47,760 --> 00:19:51,039
in command line so by using these

00:19:49,760 --> 00:19:53,360
runners

00:19:51,039 --> 00:19:55,360
i am orchestrating automatically all

00:19:53,360 --> 00:19:57,840
these stages

00:19:55,360 --> 00:19:58,720
following good practices of development

00:19:57,840 --> 00:20:03,120
and here

00:19:58,720 --> 00:20:06,159
this is how my my workflow or pipeline

00:20:03,120 --> 00:20:08,320
looks like this is what the the bot

00:20:06,159 --> 00:20:09,600
the what i did what i provoked with this

00:20:08,320 --> 00:20:11,440
git commit is that

00:20:09,600 --> 00:20:13,280
is as i mentioned before these are the

00:20:11,440 --> 00:20:15,440
stages that

00:20:13,280 --> 00:20:17,679
it for this branch they will end up

00:20:15,440 --> 00:20:18,320
writing a report that the report is to

00:20:17,679 --> 00:20:21,360
say

00:20:18,320 --> 00:20:23,360
is this what will show me that

00:20:21,360 --> 00:20:26,240
the different artifacts that were

00:20:23,360 --> 00:20:28,080
created like these ones

00:20:26,240 --> 00:20:29,840
different artifacts that get created

00:20:28,080 --> 00:20:32,000
when i train the model

00:20:29,840 --> 00:20:34,320
such as a histogram showing the

00:20:32,000 --> 00:20:36,960
prediction confidence distribution

00:20:34,320 --> 00:20:38,960
or a json file that is showing me also

00:20:36,960 --> 00:20:39,600
some some sort of report of how they

00:20:38,960 --> 00:20:43,200
both

00:20:39,600 --> 00:20:46,320
uh perform based on that but this json

00:20:43,200 --> 00:20:47,760
is pretty helpful but it's not nice

00:20:46,320 --> 00:20:49,520
let's say for a business person that

00:20:47,760 --> 00:20:50,080
they just want to show me show me how it

00:20:49,520 --> 00:20:53,120
looks

00:20:50,080 --> 00:20:55,200
like in a nicer way so when i in this

00:20:53,120 --> 00:20:56,240
step that is called write reports what

00:20:55,200 --> 00:20:59,360
it's doing is in

00:20:56,240 --> 00:21:02,559
same gitlab is writing in the wiki

00:20:59,360 --> 00:21:04,159
uh the report of the experiment where

00:21:02,559 --> 00:21:06,880
you can auto generate

00:21:04,159 --> 00:21:07,200
this thing that you can later revisit or

00:21:06,880 --> 00:21:09,679
or

00:21:07,200 --> 00:21:11,280
keeping some track of the changes of

00:21:09,679 --> 00:21:12,559
your experiments of the or or of the

00:21:11,280 --> 00:21:14,559
model that is in production

00:21:12,559 --> 00:21:16,159
so once i'm happy with everything i can

00:21:14,559 --> 00:21:19,440
merge the

00:21:16,159 --> 00:21:20,159
the changes to my bot and here when i

00:21:19,440 --> 00:21:23,760
start

00:21:20,159 --> 00:21:26,240
merging this is a view of the rasa rasa

00:21:23,760 --> 00:21:27,919
model server in which as you can see

00:21:26,240 --> 00:21:29,360
that moment when i when i took this

00:21:27,919 --> 00:21:32,320
video

00:21:29,360 --> 00:21:33,200
the model that was active was a model of

00:21:32,320 --> 00:21:36,000
last sunday

00:21:33,200 --> 00:21:37,760
but here this was wednesday i'm running

00:21:36,000 --> 00:21:39,360
a pipeline that is merging the changes

00:21:37,760 --> 00:21:42,240
into the main

00:21:39,360 --> 00:21:42,480
main branch that once this this pipeline

00:21:42,240 --> 00:21:45,520
we

00:21:42,480 --> 00:21:48,799
will finish what it will

00:21:45,520 --> 00:21:52,159
show us here is about to to finish

00:21:48,799 --> 00:21:55,520
in the deploy stage there

00:21:52,159 --> 00:21:58,720
right there what is going on is that my

00:21:55,520 --> 00:22:01,120
my pipeline is talking to

00:21:58,720 --> 00:22:03,280
the model server to raza server and is

00:22:01,120 --> 00:22:05,360
saying i am ready the model went through

00:22:03,280 --> 00:22:07,440
all of the steps please deploy

00:22:05,360 --> 00:22:09,440
and once this is successful as we can

00:22:07,440 --> 00:22:10,559
see there i will refresh this page and

00:22:09,440 --> 00:22:13,200
you can see that now

00:22:10,559 --> 00:22:15,120
the model is ready was automatically

00:22:13,200 --> 00:22:17,360
deployed and made active

00:22:15,120 --> 00:22:18,640
and from there i can use tools like the

00:22:17,360 --> 00:22:21,280
ones that rasa offer

00:22:18,640 --> 00:22:22,559
to create a link to share this newly

00:22:21,280 --> 00:22:25,120
created bot

00:22:22,559 --> 00:22:26,000
with external people so they can test it

00:22:25,120 --> 00:22:28,320
and i can also

00:22:26,000 --> 00:22:30,640
leverage an approach of conversation

00:22:28,320 --> 00:22:32,880
driven development because from here

00:22:30,640 --> 00:22:34,400
before re deploying before following

00:22:32,880 --> 00:22:36,159
these steps that i just followed

00:22:34,400 --> 00:22:38,480
and if you deploy into production you

00:22:36,159 --> 00:22:41,280
can have more feedback of how the bot

00:22:38,480 --> 00:22:42,320
is performing so as if you appreciate

00:22:41,280 --> 00:22:44,320
the beauty of this

00:22:42,320 --> 00:22:45,679
you were working in python you made two

00:22:44,320 --> 00:22:48,720
or three changes

00:22:45,679 --> 00:22:49,520
you git commit git push and all of these

00:22:48,720 --> 00:22:52,640
things

00:22:49,520 --> 00:22:54,400
started automatically and to finish the

00:22:52,640 --> 00:22:56,880
to close the loop

00:22:54,400 --> 00:22:57,760
i want to show you the last part is that

00:22:56,880 --> 00:23:01,280
in this case

00:22:57,760 --> 00:23:03,200
i am i am using the api from rasa and i

00:23:01,280 --> 00:23:05,520
am bringing like

00:23:03,200 --> 00:23:08,080
okay we have five minutes and i'm using

00:23:05,520 --> 00:23:10,240
the the api from from raza to bring

00:23:08,080 --> 00:23:11,200
some of the dialogues or conversations

00:23:10,240 --> 00:23:13,120
that they bought had

00:23:11,200 --> 00:23:15,280
so this board was newly created only for

00:23:13,120 --> 00:23:18,480
this event so it doesn't have too much

00:23:15,280 --> 00:23:19,280
too many too much data but this can give

00:23:18,480 --> 00:23:21,440
you an idea

00:23:19,280 --> 00:23:23,760
that here the sky is the limit you can

00:23:21,440 --> 00:23:25,200
say okay i want to filter by number of

00:23:23,760 --> 00:23:28,400
intents but the

00:23:25,200 --> 00:23:31,039
the confident highest confidence of the

00:23:28,400 --> 00:23:32,799
best intent or what is the type of token

00:23:31,039 --> 00:23:33,440
that people are using the most are they

00:23:32,799 --> 00:23:34,960
saying

00:23:33,440 --> 00:23:36,480
hello the way i thought or are they

00:23:34,960 --> 00:23:39,120
saying hello i want these

00:23:36,480 --> 00:23:39,760
are they using to move the intent in one

00:23:39,120 --> 00:23:41,840
sentence

00:23:39,760 --> 00:23:43,440
and for example in this one i was just

00:23:41,840 --> 00:23:45,360
extracting the last word

00:23:43,440 --> 00:23:47,039
and this for example could give me a

00:23:45,360 --> 00:23:48,480
glimpse that look if the people are

00:23:47,039 --> 00:23:50,320
saying i'm a bit mad or i'm quite

00:23:48,480 --> 00:23:53,039
furious it's probably the bot is not

00:23:50,320 --> 00:23:54,080
it's not working in the way that i

00:23:53,039 --> 00:23:57,360
expect

00:23:54,080 --> 00:24:00,240
so to finish that i show you how

00:23:57,360 --> 00:24:01,440
it looks like and if you adopt these

00:24:00,240 --> 00:24:04,559
continuous integration

00:24:01,440 --> 00:24:07,120
and delivery practices it will

00:24:04,559 --> 00:24:08,720
allow you to have an orchestra for self

00:24:07,120 --> 00:24:10,240
with some conductor that will help you

00:24:08,720 --> 00:24:11,840
to make your life easier

00:24:10,240 --> 00:24:13,360
if you scale this up through a company

00:24:11,840 --> 00:24:14,400
this will increase communication and

00:24:13,360 --> 00:24:16,880
collaboration

00:24:14,400 --> 00:24:18,159
you can have a more reliable solution

00:24:16,880 --> 00:24:20,240
and at the end of the day

00:24:18,159 --> 00:24:21,679
it's setting you up to grow more from

00:24:20,240 --> 00:24:23,360
there you can grow from the manual

00:24:21,679 --> 00:24:23,919
development to the pipelines that i just

00:24:23,360 --> 00:24:26,720
show you

00:24:23,919 --> 00:24:28,480
to another point where you can think of

00:24:26,720 --> 00:24:30,000
fully automated processes

00:24:28,480 --> 00:24:32,559
like instead of using this what i was

00:24:30,000 --> 00:24:34,559
showing you an api to call the

00:24:32,559 --> 00:24:36,000
rasa api to bring conversations i could

00:24:34,559 --> 00:24:38,799
automate this job every

00:24:36,000 --> 00:24:40,400
day 8 pm and run some preliminary

00:24:38,799 --> 00:24:42,720
scripts

00:24:40,400 --> 00:24:45,039
and yeah so this is like the next step

00:24:42,720 --> 00:24:47,360
if you want to know more

00:24:45,039 --> 00:24:48,960
i have some links here and i will make

00:24:47,360 --> 00:24:49,760
available this is started project that

00:24:48,960 --> 00:24:53,360
you can fork

00:24:49,760 --> 00:24:55,520
and from there you can see how i i

00:24:53,360 --> 00:24:57,679
orchestrated all of this use it using

00:24:55,520 --> 00:24:59,520
gitlab and rasa from this project

00:24:57,679 --> 00:25:00,960
you can just copy change to your point

00:24:59,520 --> 00:25:02,080
it to your own server and it will be

00:25:00,960 --> 00:25:04,320
ready to

00:25:02,080 --> 00:25:06,720
to replicate what i just did or i just

00:25:04,320 --> 00:25:09,520
show you in this demo video

00:25:06,720 --> 00:25:10,400
so thank you i think this is i have

00:25:09,520 --> 00:25:12,880
three minutes so

00:25:10,400 --> 00:25:14,320
questions thank you very much william

00:25:12,880 --> 00:25:15,760
that was a very nice talk very

00:25:14,320 --> 00:25:19,120
interesting indeed

00:25:15,760 --> 00:25:22,400
so we have one question um

00:25:19,120 --> 00:25:23,120
the question is that what are the cons

00:25:22,400 --> 00:25:26,840
and pros

00:25:23,120 --> 00:25:28,159
of gitlab cicd versus having a jenkins

00:25:26,840 --> 00:25:32,559
server

00:25:28,159 --> 00:25:34,400
okay well if you already know jenkins

00:25:32,559 --> 00:25:36,320
so what are the pros and cons cons the

00:25:34,400 --> 00:25:39,440
learning curve if like me

00:25:36,320 --> 00:25:41,520
you came to this uh ci cd without

00:25:39,440 --> 00:25:42,240
knowing jenkins so gitlab is very easy

00:25:41,520 --> 00:25:44,240
to learn

00:25:42,240 --> 00:25:45,360
so that's one thing learning curve and

00:25:44,240 --> 00:25:47,520
and one one

00:25:45,360 --> 00:25:49,120
one pro is that in gitlab you have

00:25:47,520 --> 00:25:50,880
everything under the

00:25:49,120 --> 00:25:52,720
uh that is in a single app you don't

00:25:50,880 --> 00:25:56,320
have to switch environment for example

00:25:52,720 --> 00:26:00,080
here it is i have in one single view

00:25:56,320 --> 00:26:01,919
i have the pipelines here i can define

00:26:00,080 --> 00:26:04,320
everything and what i define in my

00:26:01,919 --> 00:26:06,480
project that will be my pipeline

00:26:04,320 --> 00:26:08,320
is automatically triggered and read by

00:26:06,480 --> 00:26:12,240
gitlab here for example

00:26:08,320 --> 00:26:13,600
so pros and cons pro if you don't if you

00:26:12,240 --> 00:26:15,360
if you are comfortable with learning

00:26:13,600 --> 00:26:17,760
this tool because it's very easy

00:26:15,360 --> 00:26:19,760
and everything is pre-integrated

00:26:17,760 --> 00:26:21,840
integrated as i say will make your life

00:26:19,760 --> 00:26:23,520
easier so you don't have to know to

00:26:21,840 --> 00:26:25,200
think about okay so i need to learn a

00:26:23,520 --> 00:26:28,640
new tool i need to learn jenkins

00:26:25,200 --> 00:26:31,200
plus rasa plus my own development

00:26:28,640 --> 00:26:31,919
here what the reason i like this a lot

00:26:31,200 --> 00:26:34,640
is because

00:26:31,919 --> 00:26:36,080
here is everything everything is here

00:26:34,640 --> 00:26:38,320
under this single application

00:26:36,080 --> 00:26:39,279
and whatever i push to my to my to this

00:26:38,320 --> 00:26:42,159
repository

00:26:39,279 --> 00:26:44,080
it will trigger a pipeline in in my in

00:26:42,159 --> 00:26:45,919
my gitlab ci

00:26:44,080 --> 00:26:47,200
so that's what that's something i can

00:26:45,919 --> 00:26:50,720
tell you from a point of view

00:26:47,200 --> 00:26:52,799
of gitlab fun

00:26:50,720 --> 00:26:54,000
but also personal point of view if you

00:26:52,799 --> 00:26:55,679
already know jenkins

00:26:54,000 --> 00:26:56,799
learning core okay go for the things you

00:26:55,679 --> 00:26:58,240
already know because at the other day

00:26:56,799 --> 00:26:59,840
you just want to make your life easier

00:26:58,240 --> 00:27:03,840
and deliver faster

00:26:59,840 --> 00:27:05,200
yeah okay thank you for that answer

00:27:03,840 --> 00:27:07,039
there's a second question i don't know

00:27:05,200 --> 00:27:09,360
whether we have time but

00:27:07,039 --> 00:27:10,559
is there a difference between gitlab ci

00:27:09,360 --> 00:27:13,600
cd and github

00:27:10,559 --> 00:27:16,880
actions well yes

00:27:13,600 --> 00:27:18,960
there are different products yes there

00:27:16,880 --> 00:27:22,399
are there are differences that

00:27:18,960 --> 00:27:24,559
is we can take it offline because um

00:27:22,399 --> 00:27:26,159
this is moving me into the conversation

00:27:24,559 --> 00:27:29,360
of competition the

00:27:26,159 --> 00:27:29,840
uh right but i can i can i can i can i

00:27:29,360 --> 00:27:31,679
can

00:27:29,840 --> 00:27:33,600
in the in the room sorry in the room

00:27:31,679 --> 00:27:35,360
because all of this is public for

00:27:33,600 --> 00:27:36,880
for for gitlab we have a competition

00:27:35,360 --> 00:27:39,440
page that if you google

00:27:36,880 --> 00:27:39,919
uh gitlabber should have actions in

00:27:39,440 --> 00:27:41,440
google

00:27:39,919 --> 00:27:43,279
this is public and you will find it

00:27:41,440 --> 00:27:45,039
there it's not like it's not

00:27:43,279 --> 00:27:46,480
possible for me to talk no you can do it

00:27:45,039 --> 00:27:47,919
and it's so transparent that you can

00:27:46,480 --> 00:27:49,600
have it only if you search for yourself

00:27:47,919 --> 00:27:52,159
but it's a quite long topic

00:27:49,600 --> 00:27:53,200
so okay so let's take that maybe offline

00:27:52,159 --> 00:27:55,679
into the

00:27:53,200 --> 00:27:58,080
into the talk chat uh we posted the link

00:27:55,679 --> 00:27:59,520
on the on the talk chat in discord and

00:27:58,080 --> 00:28:01,440
and so you can then find the

00:27:59,520 --> 00:28:02,640
talk room for this so thank you very

00:28:01,440 --> 00:28:04,720
much arias for the

00:28:02,640 --> 00:28:05,760
very nice talk let me give you your

00:28:04,720 --> 00:28:17,840
applause

00:28:05,760 --> 00:28:17,840

YouTube URL: https://www.youtube.com/watch?v=0nmk_0kD8C0


