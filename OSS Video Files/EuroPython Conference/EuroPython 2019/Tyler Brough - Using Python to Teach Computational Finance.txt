Title: Tyler Brough - Using Python to Teach Computational Finance
Publication date: 2019-09-03
Playlist: EuroPython 2019
Description: 
	"Using Python to Teach Computational Finance
[EuroPython 2019 - Talk - 2019-07-10 - Singapore [PyData track]
[Basel, CH]

By Tyler Brough

In this demo-driven session, we will introduce the Probo package for teaching Python programming and concepts from computational finance to beginning programmers in the domain of finance. We'll show how Python is the perfect tool for teaching computational thinking to develop deeper quantitative reasoning. Jupyter notebooks, together with Python packages such as NumPy and Pandas, provide the ideal learning environment. 

We will start by introducing the Probo package for derivative pricing and hedging. We will demo the pricing of European and American options via the famous Black-Scholes option pricing model. Other examples include Monte Carlo simulation and binomial trees. Using Probo, the answers to derivative pricing problems are right at the students' fingertips. Students can operationalize their understanding by going directly from the mathematics of derivative pricing theories to their implementation in clean and simple code.

We will end with a demonstration using Probo to teach the concept of dynamic hedging. Dynamic hedging is perhaps emthe/em crucial concept in modern financial derivatives theory. It is also one of the most difficult concepts to grasp. We'll show how developing deeper intuition is possible with computational thinking via Monte Carlo simulation of delta-hedging. By leveraging the power and simplicity of Python and Jupyter notebooks, the Probo package provides the ideal learning platform for students of computational finance.



License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/
Please see our speaker release agreement for details: https://ep2019.europython.eu/events/speaker-release-agreement/
Captions: 
	00:00:03,440 --> 00:00:12,410
so nine years ago this summer I had a

00:00:08,719 --> 00:00:13,820
freshly minted PhD in finance from the

00:00:12,410 --> 00:00:16,910
nearest of Arizona and I was about to

00:00:13,820 --> 00:00:21,890
post to my first academic job at Utah

00:00:16,910 --> 00:00:23,240
State University and my first academic

00:00:21,890 --> 00:00:26,109
teaching assignment was to teach the

00:00:23,240 --> 00:00:29,720
graduate levels sequence in econometrics

00:00:26,109 --> 00:00:31,849
and to tell you the truth I had a little

00:00:29,720 --> 00:00:33,110
bit of PTSD from my own learning

00:00:31,849 --> 00:00:35,000
experience coming through graduate

00:00:33,110 --> 00:00:39,230
school with that particular sequence and

00:00:35,000 --> 00:00:41,510
I was searching about for a new way a

00:00:39,230 --> 00:00:44,660
new a new way to teach econometrics and

00:00:41,510 --> 00:00:47,690
deliver it and as I was searching I was

00:00:44,660 --> 00:00:49,340
very fortunate to come across this what

00:00:47,690 --> 00:00:53,210
to me is very important paper by Peter

00:00:49,340 --> 00:00:56,379
Kennedy and Kennedy contends that we

00:00:53,210 --> 00:00:58,820
should teach statistics and econometrics

00:00:56,379 --> 00:01:01,699
especially the convergence concepts

00:00:58,820 --> 00:01:05,089
asymptotics with Monte Carlo simulation

00:01:01,699 --> 00:01:09,110
and that this helps the students bridge

00:01:05,089 --> 00:01:10,369
the gap of the concepts and connect with

00:01:09,110 --> 00:01:13,810
those concepts in a much more meaningful

00:01:10,369 --> 00:01:17,330
way than just the the symbolic

00:01:13,810 --> 00:01:19,369
mathematical representation he contends

00:01:17,330 --> 00:01:20,720
that most students after even several

00:01:19,369 --> 00:01:24,920
courses in statistics and econometrics

00:01:20,720 --> 00:01:27,140
don't fully internalize the main ideas

00:01:24,920 --> 00:01:29,390
of econometrics and my teaching

00:01:27,140 --> 00:01:33,049
experience is that that's very much the

00:01:29,390 --> 00:01:34,640
case and he points out that the the

00:01:33,049 --> 00:01:36,619
crucial concept for students to learn

00:01:34,640 --> 00:01:37,790
that defines statistical thinking as

00:01:36,619 --> 00:01:40,340
separate from the mathematical

00:01:37,790 --> 00:01:43,579
representation is that of the sampling

00:01:40,340 --> 00:01:46,399
distribution concept and simulation with

00:01:43,579 --> 00:01:49,670
the Monte Carlo method is particularly a

00:01:46,399 --> 00:01:52,399
powerful tool for that this paper sent

00:01:49,670 --> 00:01:53,990
me on a nine-year intellectual journey

00:01:52,399 --> 00:01:57,649
that I'm going to share with you a

00:01:53,990 --> 00:02:00,259
little bit about today but let me start

00:01:57,649 --> 00:02:02,149
with a demonstration imagine that your

00:02:00,259 --> 00:02:04,520
students of mine may be an introductory

00:02:02,149 --> 00:02:06,229
statistics or econometrics class and my

00:02:04,520 --> 00:02:08,660
task on the day is to teach you about

00:02:06,229 --> 00:02:11,239
the law of large numbers I could put up

00:02:08,660 --> 00:02:14,150
a definition from a textbook like this

00:02:11,239 --> 00:02:16,520
with some some words and a definition

00:02:14,150 --> 00:02:18,140
some mathematical representation

00:02:16,520 --> 00:02:21,080
I could go more in-depth with

00:02:18,140 --> 00:02:22,780
probability conversions concepts but my

00:02:21,080 --> 00:02:25,340
experience is when I put slides like

00:02:22,780 --> 00:02:27,470
like this one and the next one up that

00:02:25,340 --> 00:02:29,570
my students eyes glaze over and I and

00:02:27,470 --> 00:02:32,510
they don't connect with the material in

00:02:29,570 --> 00:02:37,790
any meaningful way and I tend to lose

00:02:32,510 --> 00:02:39,620
them imagine instead that I just start

00:02:37,790 --> 00:02:43,100
with a simple example everyone's seen

00:02:39,620 --> 00:02:46,160
the example from a baby statistics class

00:02:43,100 --> 00:02:48,770
of starting with rolling a fair die that

00:02:46,160 --> 00:02:51,170
has six sides and equal probability for

00:02:48,770 --> 00:02:53,270
each of the outcomes we can calculate

00:02:51,170 --> 00:02:56,270
with simple mathematics the expected

00:02:53,270 --> 00:03:01,220
value of the population of being 3.5 of

00:02:56,270 --> 00:03:02,900
course we can verify this in in Python

00:03:01,220 --> 00:03:05,870
with some simple calculations so that

00:03:02,900 --> 00:03:10,340
the students can verify this for

00:03:05,870 --> 00:03:12,320
themselves but even more meaningful I

00:03:10,340 --> 00:03:15,890
can only after a little bit of

00:03:12,320 --> 00:03:18,650
instruction about Python have them run a

00:03:15,890 --> 00:03:21,830
simulation like this so what this

00:03:18,650 --> 00:03:23,600
simulation does is it rolls the die a

00:03:21,830 --> 00:03:25,550
certain number of times and takes the

00:03:23,600 --> 00:03:29,150
average and what we see plotted is on

00:03:25,550 --> 00:03:31,250
the horizontal axis the sample size and

00:03:29,150 --> 00:03:35,110
the dot on the vertical axis is going to

00:03:31,250 --> 00:03:35,110
be the average taken from that side so

00:03:35,230 --> 00:03:40,670
they say don't run code in a

00:03:38,390 --> 00:03:43,730
presentation but I'm gonna risk it so

00:03:40,670 --> 00:03:46,130
imagine that we start with sample sizes

00:03:43,730 --> 00:03:51,500
one to ten so each of those ten points

00:03:46,130 --> 00:03:54,560
is an average taken from rolling the die

00:03:51,500 --> 00:03:59,180
that many times and what I can do for my

00:03:54,560 --> 00:04:01,160
students is simply increase the number

00:03:59,180 --> 00:04:02,810
of sample size runs that I do and you

00:04:01,160 --> 00:04:09,020
can start to visually see the

00:04:02,810 --> 00:04:12,200
convergence if we go to a thousand the

00:04:09,020 --> 00:04:14,660
the story became begins to be pretty

00:04:12,200 --> 00:04:16,670
clear here we can see this if I I'll

00:04:14,660 --> 00:04:19,520
stop at ten thousand because I don't

00:04:16,670 --> 00:04:21,530
want it to run and run but in the in

00:04:19,520 --> 00:04:23,690
this funnel-like shape of the graph the

00:04:21,530 --> 00:04:25,040
students can immediately play with and

00:04:23,690 --> 00:04:28,520
interact with and connect with the

00:04:25,040 --> 00:04:29,690
concept of the law of large numbers here

00:04:28,520 --> 00:04:31,760
we see that

00:04:29,690 --> 00:04:34,190
the sample average as the sample size

00:04:31,760 --> 00:04:36,950
increases converges to the true

00:04:34,190 --> 00:04:40,640
population size and so my experiences

00:04:36,950 --> 00:04:42,500
has confirmed Peter Kennedy's contention

00:04:40,640 --> 00:04:44,840
that teaching with simulation methods is

00:04:42,500 --> 00:04:46,220
a powerful pedagogical tool and I'm

00:04:44,840 --> 00:04:47,270
going to talk about how I've

00:04:46,220 --> 00:04:52,820
incorporated that in teaching

00:04:47,270 --> 00:04:54,590
computational finance so the year after

00:04:52,820 --> 00:04:56,570
I arrived one of my next academic

00:04:54,590 --> 00:04:58,580
assignments was to create a new course

00:04:56,570 --> 00:05:02,330
that hadn't been taught before in

00:04:58,580 --> 00:05:07,550
computational finance for our master's

00:05:02,330 --> 00:05:08,270
program but this this created a bit of a

00:05:07,550 --> 00:05:10,100
conundrum

00:05:08,270 --> 00:05:12,890
because most of my students had never

00:05:10,100 --> 00:05:15,530
programmed before they are trained in

00:05:12,890 --> 00:05:17,840
economics and in finance and have never

00:05:15,530 --> 00:05:19,760
coded before and what I wanted to avoid

00:05:17,840 --> 00:05:21,080
was the situation where at the end of

00:05:19,760 --> 00:05:22,790
the semester they feel a little bit like

00:05:21,080 --> 00:05:25,780
Delmar here I don't know if you've seen

00:05:22,790 --> 00:05:27,800
this particular clip from this film but

00:05:25,780 --> 00:05:30,980
Delmar is a little left out of the

00:05:27,800 --> 00:05:32,180
storyline and I don't want the kinds of

00:05:30,980 --> 00:05:35,320
abstractions that they're going to see

00:05:32,180 --> 00:05:37,970
in programming to leave them behind and

00:05:35,320 --> 00:05:40,370
what I want to do is is use this as an

00:05:37,970 --> 00:05:43,250
opportunity to help them to learn to

00:05:40,370 --> 00:05:46,850
think in a new way and so one of the

00:05:43,250 --> 00:05:48,980
question becomes what is the adequate

00:05:46,850 --> 00:05:51,260
level of abstraction to think about

00:05:48,980 --> 00:05:53,150
options and option pricing which one of

00:05:51,260 --> 00:05:55,760
the topics that we're going to to learn

00:05:53,150 --> 00:05:59,960
about in the computational finance

00:05:55,760 --> 00:06:01,910
course by a large the students come into

00:05:59,960 --> 00:06:05,300
my course with pretty strong math and

00:06:01,910 --> 00:06:07,460
statistics skills pretty pretty deep

00:06:05,300 --> 00:06:09,860
background as far as that goes but as I

00:06:07,460 --> 00:06:13,970
said most of them have never done any

00:06:09,860 --> 00:06:16,400
kind of programming and so my job is for

00:06:13,970 --> 00:06:19,180
the first third or so part portion of

00:06:16,400 --> 00:06:22,250
the course to teach them to program and

00:06:19,180 --> 00:06:24,620
my objective is to use this as an

00:06:22,250 --> 00:06:26,510
opportunity it's it is certainly a

00:06:24,620 --> 00:06:27,950
challenge but it can also be an

00:06:26,510 --> 00:06:30,710
opportunity to help them to learn to

00:06:27,950 --> 00:06:31,910
think in a new way that will augment and

00:06:30,710 --> 00:06:35,180
add to their mathematical and

00:06:31,910 --> 00:06:37,370
statistical thinking this has been

00:06:35,180 --> 00:06:40,240
referred to as computational and

00:06:37,370 --> 00:06:43,710
inferential thinking and of course

00:06:40,240 --> 00:06:45,840
python is an excellent tool for this

00:06:43,710 --> 00:06:48,660
it's designed for learners but they'll

00:06:45,840 --> 00:06:50,789
never outgrow it and so it's it's it's

00:06:48,660 --> 00:06:52,650
been a very powerful tool for the first

00:06:50,789 --> 00:06:56,159
third of the course to get them up to

00:06:52,650 --> 00:06:57,840
speed in basic programming and then to

00:06:56,159 --> 00:07:03,360
launch into computational finance

00:06:57,840 --> 00:07:06,629
concepts and again as I say I want to

00:07:03,360 --> 00:07:09,270
have them rather not just having a list

00:07:06,629 --> 00:07:11,879
of skills on their resume Python is

00:07:09,270 --> 00:07:13,919
wonderful as you know but I want them to

00:07:11,879 --> 00:07:20,970
leave with a new way of thinking about

00:07:13,919 --> 00:07:22,889
the world and whereas Kennedy is

00:07:20,970 --> 00:07:24,569
oriented towards econometrics students

00:07:22,889 --> 00:07:26,780
and he wants them to think about the

00:07:24,569 --> 00:07:29,280
concept of the sampling distribution

00:07:26,780 --> 00:07:30,960
which turns to turns out to be perfect

00:07:29,280 --> 00:07:33,780
for teaching econometrics at least of

00:07:30,960 --> 00:07:35,669
the classical variety I need to adapt

00:07:33,780 --> 00:07:37,710
this a little bit I want students to

00:07:35,669 --> 00:07:39,449
think about what we might call the

00:07:37,710 --> 00:07:41,370
predictive distribution because in

00:07:39,449 --> 00:07:43,800
finance we're always predicting forward

00:07:41,370 --> 00:07:45,090
a random variable a random outcome and I

00:07:43,800 --> 00:07:47,280
want them to be able to think about the

00:07:45,090 --> 00:07:48,719
payoff of an asset in terms of that

00:07:47,280 --> 00:07:50,880
predictive density but I can make a

00:07:48,719 --> 00:07:52,949
strong connection to Peter Kennedy's

00:07:50,880 --> 00:07:55,139
sampling distribution and the Monte

00:07:52,949 --> 00:08:01,259
Carlo method turns out to be a very

00:07:55,139 --> 00:08:04,139
powerful tool for that as well so I'll

00:08:01,259 --> 00:08:06,210
ask you if you can it's a little bit

00:08:04,139 --> 00:08:08,669
hard for for those who have many years

00:08:06,210 --> 00:08:10,020
of experience but to think back to the

00:08:08,669 --> 00:08:12,509
time when you were first learning to

00:08:10,020 --> 00:08:14,550
program for the first time and you came

00:08:12,509 --> 00:08:17,849
across concepts like variables and

00:08:14,550 --> 00:08:20,520
control flow and functions and how these

00:08:17,849 --> 00:08:22,289
new kinds of ways of thinking these new

00:08:20,520 --> 00:08:22,770
abstraction sort of changed your brain a

00:08:22,289 --> 00:08:27,419
little bit

00:08:22,770 --> 00:08:29,729
rewrite rewired your neural network and

00:08:27,419 --> 00:08:30,990
I get to see this every semester as the

00:08:29,729 --> 00:08:33,029
students come in and are learning to

00:08:30,990 --> 00:08:36,599
think in a new way every to every every

00:08:33,029 --> 00:08:38,550
every fall semester I myself learned to

00:08:36,599 --> 00:08:40,709
program with these intro books and they

00:08:38,550 --> 00:08:44,910
were wonderful with with little toy

00:08:40,709 --> 00:08:47,279
games so I'll ask you to think about

00:08:44,910 --> 00:08:49,410
what it was like to be a student maybe

00:08:47,279 --> 00:08:51,449
sitting in my class I also remember the

00:08:49,410 --> 00:08:53,880
summer that I decided to dive into mark

00:08:51,449 --> 00:08:56,420
Josh's book on design patterns an

00:08:53,880 --> 00:08:56,420
object-oriented

00:08:56,700 --> 00:09:01,200
and I wanted to be able to deliver this

00:08:59,250 --> 00:09:05,070
to the students but in a more accessible

00:09:01,200 --> 00:09:06,540
way C++ is is it would be a very

00:09:05,070 --> 00:09:08,670
powerful tool it's a kind of a gold

00:09:06,540 --> 00:09:09,870
standard in computational finance but

00:09:08,670 --> 00:09:11,580
it's a little bit inaccessible for my

00:09:09,870 --> 00:09:13,380
students never having program before but

00:09:11,580 --> 00:09:15,030
I wanted to sort of introduce some of

00:09:13,380 --> 00:09:17,520
these concepts especially the idea of

00:09:15,030 --> 00:09:21,090
design patterns with with

00:09:17,520 --> 00:09:24,210
object-oriented programming and so I

00:09:21,090 --> 00:09:25,800
want to introduce you to the module that

00:09:24,210 --> 00:09:29,490
my students and I build each semester

00:09:25,800 --> 00:09:31,110
together from the ground up it's for

00:09:29,490 --> 00:09:33,810
educational purposes it's to help the

00:09:31,110 --> 00:09:36,210
students understand a little bit about

00:09:33,810 --> 00:09:38,730
how to do some design in their

00:09:36,210 --> 00:09:40,740
programming oriented towards option

00:09:38,730 --> 00:09:44,250
pricing but it's it's not really geared

00:09:40,740 --> 00:09:45,900
towards production or research although

00:09:44,250 --> 00:09:47,190
on my last slide I'll mention a project

00:09:45,900 --> 00:09:55,590
that's it's moving probe o in that

00:09:47,190 --> 00:09:58,710
direction so the first place to start is

00:09:55,590 --> 00:10:01,650
to help the students conceive of an

00:09:58,710 --> 00:10:04,680
option contract outside of their

00:10:01,650 --> 00:10:06,930
textbook in in in some representation

00:10:04,680 --> 00:10:10,620
and code and so I begin with them with

00:10:06,930 --> 00:10:13,620
the facade design pattern and so here we

00:10:10,620 --> 00:10:16,440
have the option facade class and it

00:10:13,620 --> 00:10:17,850
composes three objects the option which

00:10:16,440 --> 00:10:20,640
is going to represent the option

00:10:17,850 --> 00:10:21,870
contract what we're calling engine here

00:10:20,640 --> 00:10:24,930
is going to be a pricing engine and that

00:10:21,870 --> 00:10:29,220
sort of abstracts out the idea of a

00:10:24,930 --> 00:10:31,200
pricing model and then the the data

00:10:29,220 --> 00:10:33,090
object is going to represent market data

00:10:31,200 --> 00:10:34,740
we end up not doing much with that but

00:10:33,090 --> 00:10:36,990
I'll mention it a little bit later and

00:10:34,740 --> 00:10:39,120
then there's a single method the price

00:10:36,990 --> 00:10:42,300
method and it's going to call out to the

00:10:39,120 --> 00:10:47,940
engines calculate method and because

00:10:42,300 --> 00:10:50,040
Python is so simple and easy to present

00:10:47,940 --> 00:10:52,800
this almost provides the students with

00:10:50,040 --> 00:10:55,560
the domain-specific language - price an

00:10:52,800 --> 00:10:59,310
option and help them think about that in

00:10:55,560 --> 00:11:04,140
as I say a new way a new mode of

00:10:59,310 --> 00:11:06,180
abstraction so for those not familiar

00:11:04,140 --> 00:11:09,180
with what an option is here's the

00:11:06,180 --> 00:11:09,960
textbook definition it's the right but

00:11:09,180 --> 00:11:12,750
not the obligation

00:11:09,960 --> 00:11:16,740
to buy or sell another asset called the

00:11:12,750 --> 00:11:20,370
underlying asset at a preset time at a

00:11:16,740 --> 00:11:21,420
preset price there are variations on

00:11:20,370 --> 00:11:23,520
that but that's the simplest definition

00:11:21,420 --> 00:11:25,050
so a call option is going to be the

00:11:23,520 --> 00:11:27,450
right to buy the underlying asset and

00:11:25,050 --> 00:11:30,060
put the right to sell it the strike

00:11:27,450 --> 00:11:32,490
price will be the preset price of the

00:11:30,060 --> 00:11:35,940
underlying asset and the expiry is going

00:11:32,490 --> 00:11:40,860
to be the date of of exercise at least

00:11:35,940 --> 00:11:44,089
if it's a European option so how can we

00:11:40,860 --> 00:11:47,160
represent this in code we start by

00:11:44,089 --> 00:11:50,040
creating a simple interface for the

00:11:47,160 --> 00:11:53,550
option contract that we can use derived

00:11:50,040 --> 00:11:55,230
classes to specialize and so I get to

00:11:53,550 --> 00:11:56,640
explain to the students the concept of

00:11:55,230 --> 00:11:59,430
an interface and help them think about

00:11:56,640 --> 00:12:01,620
that level of abstraction of something

00:11:59,430 --> 00:12:03,870
that can represent different kinds of

00:12:01,620 --> 00:12:06,330
option contracts and I draw your

00:12:03,870 --> 00:12:08,370
attention to the to the method the

00:12:06,330 --> 00:12:11,610
payoff that's going to be the the key

00:12:08,370 --> 00:12:13,890
way to help them think about how to

00:12:11,610 --> 00:12:20,040
price the option is through its payoff

00:12:13,890 --> 00:12:23,459
function so here's a simple concrete

00:12:20,040 --> 00:12:25,800
class called that which we call here the

00:12:23,459 --> 00:12:29,850
vanilla option simply because it's the

00:12:25,800 --> 00:12:31,620
simplest kind and what I'll draw your

00:12:29,850 --> 00:12:35,400
attention here to is in the payoff

00:12:31,620 --> 00:12:38,610
method simply calling out to a composed

00:12:35,400 --> 00:12:39,709
object payoff and that's going to allow

00:12:38,610 --> 00:12:42,510
us

00:12:39,709 --> 00:12:45,540
I'll give it a second more here just to

00:12:42,510 --> 00:12:47,640
look at the code but that that's going

00:12:45,540 --> 00:12:52,560
to allow us to use the strategy pattern

00:12:47,640 --> 00:12:56,329
so that at runtime we can swap out the

00:12:52,560 --> 00:12:58,740
payoff function for different kinds and

00:12:56,329 --> 00:13:00,600
this turns out to be really simple in

00:12:58,740 --> 00:13:02,550
Python because functions are first class

00:13:00,600 --> 00:13:07,170
objects and I don't have to create a

00:13:02,550 --> 00:13:09,480
higher level object to to pass into the

00:13:07,170 --> 00:13:11,820
auction contract so I can create two

00:13:09,480 --> 00:13:15,240
simple one-line functions to represent a

00:13:11,820 --> 00:13:17,670
call on a put option and by this time

00:13:15,240 --> 00:13:20,130
students are pretty familiar with

00:13:17,670 --> 00:13:23,730
writing functions and this turns out to

00:13:20,130 --> 00:13:26,520
be a pretty easy exercise for them

00:13:23,730 --> 00:13:30,030
so a simple demonstration of

00:13:26,520 --> 00:13:34,180
instantiating these so we can create a

00:13:30,030 --> 00:13:39,730
vanilla call option with here with a

00:13:34,180 --> 00:13:41,620
spot price of 41 dollars the expiry what

00:13:39,730 --> 00:13:44,440
will be the 1.0 that's one year to

00:13:41,620 --> 00:13:46,690
expiration and with a strike price of

00:13:44,440 --> 00:13:49,810
$40 and then I can simply pass the call

00:13:46,690 --> 00:13:53,320
payoff function to get to call payoff

00:13:49,810 --> 00:13:55,450
behavior and I can do the same thing for

00:13:53,320 --> 00:13:57,130
the put option here I've changed the

00:13:55,450 --> 00:13:59,920
spot price so that we have more

00:13:57,130 --> 00:14:01,420
interesting payoff and students can play

00:13:59,920 --> 00:14:03,910
with this in the notebook and get

00:14:01,420 --> 00:14:05,980
familiar with it and and really connect

00:14:03,910 --> 00:14:09,940
with the definition of what an option is

00:14:05,980 --> 00:14:11,740
and and these tools provide a very

00:14:09,940 --> 00:14:14,710
powerful pedagogical environment for

00:14:11,740 --> 00:14:17,710
students to learn and and sort of beyond

00:14:14,710 --> 00:14:19,900
the the austere representation in the

00:14:17,710 --> 00:14:27,280
textbook to get to know what options are

00:14:19,900 --> 00:14:28,450
all about so the the next biggest part

00:14:27,280 --> 00:14:30,370
of the course that we're gonna do is

00:14:28,450 --> 00:14:31,870
spend some time on developing different

00:14:30,370 --> 00:14:34,540
option pricing models which we're gonna

00:14:31,870 --> 00:14:36,820
represent here as pricing engines again

00:14:34,540 --> 00:14:38,260
just to help them maybe understand and

00:14:36,820 --> 00:14:41,590
begin to use some of the lingo that's

00:14:38,260 --> 00:14:43,330
used on the street but option pricing

00:14:41,590 --> 00:14:44,770
models are not unique and I want to

00:14:43,330 --> 00:14:47,080
think have them think about that in an

00:14:44,770 --> 00:14:50,710
abstract way and so once again we're

00:14:47,080 --> 00:14:52,960
going to use the strategy pattern and so

00:14:50,710 --> 00:14:55,090
we'll create a simple interface for the

00:14:52,960 --> 00:14:57,610
pricing engine with a single method

00:14:55,090 --> 00:14:59,740
called calculate and this allows

00:14:57,610 --> 00:15:01,870
flexibility to represent different kinds

00:14:59,740 --> 00:15:04,210
of pricing models so it could be an

00:15:01,870 --> 00:15:06,280
analytic model like the black Scholes

00:15:04,210 --> 00:15:08,140
model or it could be a new simple

00:15:06,280 --> 00:15:12,460
numerical model like the binomial model

00:15:08,140 --> 00:15:13,930
or even a PDE solver one in particular

00:15:12,460 --> 00:15:17,670
that I'll be showing you is the Monte

00:15:13,930 --> 00:15:21,490
Carlo pricing model simple form of that

00:15:17,670 --> 00:15:24,400
so here is a particular pricing engine

00:15:21,490 --> 00:15:26,050
the Monte Carlo engine and again if we

00:15:24,400 --> 00:15:27,910
look at the calculate method we can see

00:15:26,050 --> 00:15:31,900
that it's calling out to the composed

00:15:27,910 --> 00:15:35,860
object Pricer and that again makes it

00:15:31,900 --> 00:15:36,790
for the students so that creating

00:15:35,860 --> 00:15:39,730
different

00:15:36,790 --> 00:15:44,080
some pricing algorithms is as easy as

00:15:39,730 --> 00:15:45,040
writing different functions and so let

00:15:44,080 --> 00:15:46,780
me give just a little bit of

00:15:45,040 --> 00:15:49,180
mathematical review not too much I don't

00:15:46,780 --> 00:15:51,040
want to go too in depth but to explain a

00:15:49,180 --> 00:15:55,120
little bit what's going on with Monte

00:15:51,040 --> 00:15:58,540
Carlo option pricing we can we can take

00:15:55,120 --> 00:16:01,930
Peter Kennedy's idea about teaching

00:15:58,540 --> 00:16:05,830
econometrics with Monte Carlo method and

00:16:01,930 --> 00:16:07,330
simulation and apply that again adapting

00:16:05,830 --> 00:16:11,950
it to think about the predictive density

00:16:07,330 --> 00:16:14,800
for the option it turns out that that an

00:16:11,950 --> 00:16:16,600
option can be thought of as the present

00:16:14,800 --> 00:16:19,060
discounted value of an average payoff

00:16:16,600 --> 00:16:20,350
under under many thousands of

00:16:19,060 --> 00:16:21,700
simulations so the term in the

00:16:20,350 --> 00:16:26,410
parentheses is going to be the average

00:16:21,700 --> 00:16:28,270
payoff at the time of expiry so and here

00:16:26,410 --> 00:16:31,350
is going to be some big enough number

00:16:28,270 --> 00:16:33,550
for the law of large numbers to work and

00:16:31,350 --> 00:16:36,130
that term in the front e to the negative

00:16:33,550 --> 00:16:42,340
RT is going to represent a discounted

00:16:36,130 --> 00:16:44,290
value and so with that as background I

00:16:42,340 --> 00:16:47,140
can now show the simple function that

00:16:44,290 --> 00:16:48,520
students can write and again at this

00:16:47,140 --> 00:16:49,990
point in the course they're pretty adept

00:16:48,520 --> 00:16:51,610
at being able to write something like

00:16:49,990 --> 00:16:54,850
this if just a few lines of code to

00:16:51,610 --> 00:16:57,790
represent the Monte Carlo option pricing

00:16:54,850 --> 00:17:01,380
method the block of code in the middle

00:16:57,790 --> 00:17:04,089
there the the middle line represents the

00:17:01,380 --> 00:17:06,790
simulation this is vectorized so we're

00:17:04,089 --> 00:17:09,970
running many thousands of simulations

00:17:06,790 --> 00:17:12,880
here at the same time so Z is going to

00:17:09,970 --> 00:17:15,220
be an array the number that's

00:17:12,880 --> 00:17:17,740
replications long so that will drive

00:17:15,220 --> 00:17:20,589
many thousands of payoffs I can take the

00:17:17,740 --> 00:17:24,850
average int discount and I've got an

00:17:20,589 --> 00:17:30,420
option price so we can we can test this

00:17:24,850 --> 00:17:33,640
pretty simply for a European option

00:17:30,420 --> 00:17:39,280
using the naive Monte Carlo method so

00:17:33,640 --> 00:17:40,600
we'll do some imports from probe oh yeah

00:17:39,280 --> 00:17:42,400
maybe I'll take a second now and tell

00:17:40,600 --> 00:17:44,890
you about market data it doesn't do much

00:17:42,400 --> 00:17:47,290
right now except for abstract away the

00:17:44,890 --> 00:17:49,000
other bits of market data that are

00:17:47,290 --> 00:17:50,410
needed to price the option but at this

00:17:49,000 --> 00:17:52,810
point the students understand

00:17:50,410 --> 00:17:53,890
the idea of abstraction and I can tell

00:17:52,810 --> 00:17:56,290
them that this might represent a

00:17:53,890 --> 00:17:58,420
historical database maybe it's streaming

00:17:56,290 --> 00:18:01,360
data from Bloomberg the students have

00:17:58,420 --> 00:18:02,620
access to the Bloomberg terminal this

00:18:01,360 --> 00:18:06,430
last semester actually did have a

00:18:02,620 --> 00:18:09,850
student put behind the market data

00:18:06,430 --> 00:18:12,070
object a sequel historical database and

00:18:09,850 --> 00:18:16,420
we could use this to price historical

00:18:12,070 --> 00:18:18,640
options but typically that's just a

00:18:16,420 --> 00:18:20,860
small way to encapsulate those bits of

00:18:18,640 --> 00:18:23,650
data that are needed so here I'm going

00:18:20,860 --> 00:18:25,330
to get the the different bits that are

00:18:23,650 --> 00:18:28,420
needed the monte carlo engine and the

00:18:25,330 --> 00:18:31,810
naive monte carlo Pricer and i can set

00:18:28,420 --> 00:18:33,130
up the market data this is an example

00:18:31,810 --> 00:18:34,720
that comes out of their textbook so

00:18:33,130 --> 00:18:36,070
they're very familiar with it they've

00:18:34,720 --> 00:18:39,400
calculated it by hand they know the

00:18:36,070 --> 00:18:40,840
answer a priori with something like the

00:18:39,400 --> 00:18:42,700
black Scholes model or the binomial

00:18:40,840 --> 00:18:46,480
model so they have an idea about what

00:18:42,700 --> 00:18:50,500
the pricing method should the answer

00:18:46,480 --> 00:18:52,420
that it should yield and then we can set

00:18:50,500 --> 00:18:56,410
up here the option both the put in a

00:18:52,420 --> 00:18:59,080
call option and here so we've got a

00:18:56,410 --> 00:19:01,840
one-year two expiry a $40 strike strike

00:18:59,080 --> 00:19:06,010
price and I can instantiate the call on

00:19:01,840 --> 00:19:08,830
the put objects and here I'll just run a

00:19:06,010 --> 00:19:11,830
hundred thousand simulations using that

00:19:08,830 --> 00:19:16,240
naive Monte Carlo price or build the

00:19:11,830 --> 00:19:18,640
pricing engine and then we can use the

00:19:16,240 --> 00:19:20,620
option facade to encapsulate the the

00:19:18,640 --> 00:19:22,870
call option the pricing engine in the

00:19:20,620 --> 00:19:27,460
market data and call out to the price

00:19:22,870 --> 00:19:29,010
method and it will yield a the price of

00:19:27,460 --> 00:19:31,150
the option so the black Scholes

00:19:29,010 --> 00:19:32,950
benchmark here is actually six dollars

00:19:31,150 --> 00:19:34,360
and 96 cents so at a hundred thousand

00:19:32,950 --> 00:19:36,880
repetitions

00:19:34,360 --> 00:19:39,460
we're coming pretty close to the true

00:19:36,880 --> 00:19:41,230
black Scholes price and again with Monte

00:19:39,460 --> 00:19:47,140
Carlo simulation I can help them think

00:19:41,230 --> 00:19:49,240
about the option as the discounted

00:19:47,140 --> 00:19:51,310
average payoff and they've they've had

00:19:49,240 --> 00:19:54,250
to simulate through through this process

00:19:51,310 --> 00:19:56,140
to build this code we can do the same

00:19:54,250 --> 00:19:57,610
thing for the put option and they can

00:19:56,140 --> 00:19:59,800
compare that again to the black Scholes

00:19:57,610 --> 00:20:02,940
price I think this is a panty or two off

00:19:59,800 --> 00:20:02,940
it's pretty it's pretty close

00:20:03,510 --> 00:20:10,000
so I went a little bit fast I I thought

00:20:07,630 --> 00:20:12,669
I've had more less time than this but

00:20:10,000 --> 00:20:15,880
what's what's next for this project is

00:20:12,669 --> 00:20:19,540
to extend probe Oh in a couple different

00:20:15,880 --> 00:20:22,240
directions so one is a project called

00:20:19,540 --> 00:20:24,460
prese that we intend for academic

00:20:22,240 --> 00:20:26,470
research and production hopefully

00:20:24,460 --> 00:20:27,910
building that with some graduate

00:20:26,470 --> 00:20:30,880
students we're building on top of pi

00:20:27,910 --> 00:20:33,700
torch where we want performance and we

00:20:30,880 --> 00:20:35,260
want access to GPU comp compute pretty

00:20:33,700 --> 00:20:38,320
simply

00:20:35,260 --> 00:20:40,570
and one of the next directions for both

00:20:38,320 --> 00:20:43,030
teaching and research is to think about

00:20:40,570 --> 00:20:44,350
another layer of abstraction that might

00:20:43,030 --> 00:20:47,049
be referred to as agent based

00:20:44,350 --> 00:20:49,419
simulations so one of the key concepts

00:20:47,049 --> 00:20:51,669
in the black-scholes option pricing

00:20:49,419 --> 00:20:53,559
model and therefore any of the

00:20:51,669 --> 00:20:55,480
subsequent models is that of the Delta

00:20:53,559 --> 00:21:00,100
hedging market maker if you're familiar

00:20:55,480 --> 00:21:02,440
with that with that vocabulary and this

00:21:00,100 --> 00:21:04,299
is a concept that is is really

00:21:02,440 --> 00:21:06,250
challenging to help the students to

00:21:04,299 --> 00:21:09,820
think about the idea of a risk neutral

00:21:06,250 --> 00:21:12,460
density and the argument in black

00:21:09,820 --> 00:21:15,190
Scholes is that there is a market maker

00:21:12,460 --> 00:21:19,419
who is hedging an option that has been

00:21:15,190 --> 00:21:20,500
purchased or sold and through Monte

00:21:19,419 --> 00:21:23,650
Carlo simulation we can actually

00:21:20,500 --> 00:21:25,720
simulate that behavior and show that the

00:21:23,650 --> 00:21:28,480
black Scholes price will be a special

00:21:25,720 --> 00:21:30,400
case of this if the assumptions of the

00:21:28,480 --> 00:21:31,720
black Scholes model holds so we can take

00:21:30,400 --> 00:21:34,809
those assumptions and break them for

00:21:31,720 --> 00:21:37,720
example I can introduce different

00:21:34,809 --> 00:21:39,910
frictions like transactions costs or

00:21:37,720 --> 00:21:42,640
discrete hedging and we can see that

00:21:39,910 --> 00:21:44,890
that that will give a more general

00:21:42,640 --> 00:21:46,360
answer than the black Scholes and we're

00:21:44,890 --> 00:21:48,700
also using this with some of my graduate

00:21:46,360 --> 00:21:52,450
students in research to actually

00:21:48,700 --> 00:21:55,470
implement that as a pricing method and

00:21:52,450 --> 00:21:58,780
we refer to this as hedging Monte Carlo

00:21:55,470 --> 00:22:01,090
so I finished a little bit early but

00:21:58,780 --> 00:22:03,130
I'll take some questions if anyone has

00:22:01,090 --> 00:22:05,370
some thank you thank you for your time

00:22:03,130 --> 00:22:05,370
and attention

00:22:05,600 --> 00:22:11,130
[Applause]

00:22:21,799 --> 00:22:24,460
yeah

00:22:31,450 --> 00:22:35,419
we do do that yeah so one of the things

00:22:33,889 --> 00:22:36,679
we'll do is we'll look at say pull up

00:22:35,419 --> 00:22:38,629
Bloomberg and we'll look at what an

00:22:36,679 --> 00:22:41,929
options trading at and have have that

00:22:38,629 --> 00:22:45,139
conversation yeah mm-hmm and we also do

00:22:41,929 --> 00:22:47,659
other exercises like build in a implied

00:22:45,139 --> 00:22:49,549
volatility solver so they can see what

00:22:47,659 --> 00:22:52,100
when we take an observed option price

00:22:49,549 --> 00:22:53,929
what kind of volatility does that imply

00:22:52,100 --> 00:22:55,850
so they work through exercises using

00:22:53,929 --> 00:22:57,679
real-world data yeah it's a good

00:22:55,850 --> 00:22:59,840
question it helps them but now having

00:22:57,679 --> 00:23:01,909
this computational sort of framework to

00:22:59,840 --> 00:23:04,909
build with I hope some sort of wrestle

00:23:01,909 --> 00:23:06,669
with and make that that concept real for

00:23:04,909 --> 00:23:09,379
them whereas just the simple

00:23:06,669 --> 00:23:15,580
mathematical symbolic representations a

00:23:09,379 --> 00:23:15,580
little bit too abstract for them yeah

00:23:16,539 --> 00:23:23,269
yeah so about the first month or so I do

00:23:19,909 --> 00:23:24,590
a rapid instruction in Python most of

00:23:23,269 --> 00:23:26,419
them have never programmed before so I

00:23:24,590 --> 00:23:28,730
got to get him from there to what you

00:23:26,419 --> 00:23:32,029
just saw doing object-oriented with

00:23:28,730 --> 00:23:33,470
design patterns it's a bit fast and I'm

00:23:32,029 --> 00:23:36,919
sure my computer science colleagues

00:23:33,470 --> 00:23:40,009
would be a little bit horrified by how

00:23:36,919 --> 00:23:41,869
fast and and how sloppily ico when I get

00:23:40,009 --> 00:23:43,759
them there and then the next two thirds

00:23:41,869 --> 00:23:46,940
of the class so that the middle third is

00:23:43,759 --> 00:23:48,769
going to be teaching them the the

00:23:46,940 --> 00:23:51,080
various pricing models so we start with

00:23:48,769 --> 00:23:52,730
the binomial model and then we introduce

00:23:51,080 --> 00:23:54,289
black Scholes and the concepts of black

00:23:52,730 --> 00:23:56,419
Scholes and then we work through Monte

00:23:54,289 --> 00:23:59,029
Carlo for the rest of the semester they

00:23:56,419 --> 00:24:01,100
hit the students then have a project at

00:23:59,029 --> 00:24:05,960
the end of the semester and by this

00:24:01,100 --> 00:24:08,480
point you know were 75% 80% of the way

00:24:05,960 --> 00:24:11,419
through the course and their project is

00:24:08,480 --> 00:24:13,789
to extend Provo and to build in a new

00:24:11,419 --> 00:24:16,009
pricing engine or to price a new kind of

00:24:13,789 --> 00:24:18,289
object option or something like that and

00:24:16,009 --> 00:24:21,740
so the course is just over three months

00:24:18,289 --> 00:24:23,690
and we it's it's pretty ambitious but so

00:24:21,740 --> 00:24:26,539
far we've over the last couple of years

00:24:23,690 --> 00:24:27,919
we've we've been able to do it it's a

00:24:26,539 --> 00:24:29,960
full-time course on campus in our

00:24:27,919 --> 00:24:34,309
master's program yep mm-hmm

00:24:29,960 --> 00:24:36,289
and I had I mean we just created this

00:24:34,309 --> 00:24:37,879
whole cloth and I was just asked to

00:24:36,289 --> 00:24:39,980
create a course in computational finance

00:24:37,879 --> 00:24:40,900
and I had extreme freedom about what to

00:24:39,980 --> 00:24:44,710
do

00:24:40,900 --> 00:24:46,480
and so I devised this yeah I'm excited

00:24:44,710 --> 00:24:49,650
to hear anyone whose feedback on this if

00:24:46,480 --> 00:24:49,650
you have great ideas for me

00:25:03,490 --> 00:25:08,919
yes that's I definitely can in fact

00:25:06,960 --> 00:25:11,620
maybe we shouldn't admit this but the

00:25:08,919 --> 00:25:15,640
first year or two I was ambitious enough

00:25:11,620 --> 00:25:17,230
to try C++ because I I was I had I had

00:25:15,640 --> 00:25:19,809
assistant professor itis and I was going

00:25:17,230 --> 00:25:21,039
to teach them everything I knew and you

00:25:19,809 --> 00:25:23,049
know we were still fighting compiler

00:25:21,039 --> 00:25:27,460
errors by the by the time the finals

00:25:23,049 --> 00:25:29,140
were rolling around but yeah I by the

00:25:27,460 --> 00:25:31,120
time the students are working on their

00:25:29,140 --> 00:25:33,789
project to build a new pricing engine or

00:25:31,120 --> 00:25:35,620
to device a new option they know how to

00:25:33,789 --> 00:25:36,909
play around and break things and

00:25:35,620 --> 00:25:39,250
discover and so they have a

00:25:36,909 --> 00:25:41,049
computational platform with to do

00:25:39,250 --> 00:25:44,260
educational discovery on and I've

00:25:41,049 --> 00:25:46,450
definitely discovered that that that

00:25:44,260 --> 00:25:48,880
it's that it's a new way to think about

00:25:46,450 --> 00:25:52,809
and teach these concepts rather than

00:25:48,880 --> 00:25:54,909
just the the sort of austere textbook

00:25:52,809 --> 00:25:57,730
type of types of teaching and you know

00:25:54,909 --> 00:25:59,679
talk and talk kind of way and it's been

00:25:57,730 --> 00:26:02,429
very powerful learning tool yeah I think

00:25:59,679 --> 00:26:02,429
thanks for that question

00:26:03,600 --> 00:26:06,600
yeah

00:26:09,170 --> 00:26:16,160
I do both of those so I every lecture is

00:26:14,720 --> 00:26:18,380
gonna have a jupiter notebook attached

00:26:16,160 --> 00:26:20,990
with it and it's gonna be attached to

00:26:18,380 --> 00:26:23,290
something in their textbook once we get

00:26:20,990 --> 00:26:26,030
to the computational finance material

00:26:23,290 --> 00:26:28,190
but i have to go very rapidly for the

00:26:26,030 --> 00:26:29,240
first month through python and so i've

00:26:28,190 --> 00:26:31,730
tried different things but i've just

00:26:29,240 --> 00:26:34,970
created I think 10 or 11 of my own

00:26:31,730 --> 00:26:36,560
notebooks and I don't I'm I don't try to

00:26:34,970 --> 00:26:38,840
teach them all of Python I try to teach

00:26:36,560 --> 00:26:41,720
them enough to get going on the kinds of

00:26:38,840 --> 00:26:43,250
things we want to do and they continue

00:26:41,720 --> 00:26:45,500
to learn Python throughout the semester

00:26:43,250 --> 00:26:49,010
as they need extra bits to do their

00:26:45,500 --> 00:26:50,150
their their exercises but that's so far

00:26:49,010 --> 00:26:53,480
it's worked pretty well but yes they

00:26:50,150 --> 00:26:55,460
have a github repository and they know

00:26:53,480 --> 00:26:59,720
that that github repository is updated

00:26:55,460 --> 00:27:01,940
each lecture yeah and I can't imagine

00:26:59,720 --> 00:27:10,280
doing this without the notebook and

00:27:01,940 --> 00:27:13,090
these kinds of tools yeah well thank you

00:27:10,280 --> 00:27:13,090
for your time attention

00:27:13,150 --> 00:27:17,669

YouTube URL: https://www.youtube.com/watch?v=u3vRpKodgiU


