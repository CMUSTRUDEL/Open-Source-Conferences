Title: Marc-André Lemburg - Efficient Python development with small teams
Publication date: 2015-04-18
Playlist: EuroPython 2013
Description: 
	[EuroPython 2013] 
Marc-André Lemburg - Efficient Python development with small teams - 05 July 2013 "Track Lasagne"
Captions: 
	00:00:02,870 --> 00:00:06,500
with this grill

00:00:17,029 --> 00:00:26,400
okay thank you for being here we are

00:00:21,930 --> 00:00:29,640
here we marc-andre Lemberg his is a

00:00:26,400 --> 00:00:33,000
pythons core developer he has been the

00:00:29,640 --> 00:00:36,450
co he's is the co-founder of the Python

00:00:33,000 --> 00:00:39,870
software foundation but now he will

00:00:36,450 --> 00:00:43,980
share with us a few tips and tricks on

00:00:39,870 --> 00:00:47,160
how to manage up to program in python

00:00:43,980 --> 00:00:56,160
with small teams thank you Mark thank

00:00:47,160 --> 00:00:59,519
you very much ok most most of what I do

00:00:56,160 --> 00:01:02,489
was already said so I'm marg limburg I i

00:00:59,519 --> 00:01:06,720
am a Python core developer psf board

00:01:02,489 --> 00:01:09,840
member i'm also eps a board member the

00:01:06,720 --> 00:01:12,330
european society i have a company called

00:01:09,840 --> 00:01:15,320
eugenics com we do pizen projects and

00:01:12,330 --> 00:01:18,000
consulting for for our customers so we

00:01:15,320 --> 00:01:19,619
customer comes to us with a great idea

00:01:18,000 --> 00:01:21,420
they want it implement it they don't

00:01:19,619 --> 00:01:24,329
necessarily have the right skills for

00:01:21,420 --> 00:01:28,170
that and we help them to make that a

00:01:24,329 --> 00:01:34,100
reality I'm based in in Germany in this

00:01:28,170 --> 00:01:39,060
hood off and well I like nice things so

00:01:34,100 --> 00:01:42,439
just going to start right so this is the

00:01:39,060 --> 00:01:44,729
agenda I'm going to go through the talk

00:01:42,439 --> 00:01:47,280
I'm first going to give a short

00:01:44,729 --> 00:01:50,759
introduction I'm going to tell a few

00:01:47,280 --> 00:01:52,799
things about running projects then share

00:01:50,759 --> 00:01:55,259
a few things that we learned in the

00:01:52,799 --> 00:01:57,899
projects that we ran if you have any

00:01:55,259 --> 00:02:00,600
questions please speak up I think it's

00:01:57,899 --> 00:02:03,450
very important to get this talk kind of

00:02:00,600 --> 00:02:05,100
interactive if you don't want to

00:02:03,450 --> 00:02:07,469
interrupt the talk then you can take

00:02:05,100 --> 00:02:10,729
notes and we can have a QA afterwards

00:02:07,469 --> 00:02:10,729
and then discuss things there

00:02:11,320 --> 00:02:19,370
right let's start with the introduction

00:02:14,320 --> 00:02:22,610
so what's a typical IT project what you

00:02:19,370 --> 00:02:25,610
normally get in an IT project is you get

00:02:22,610 --> 00:02:27,200
a specification from the customer which

00:02:25,610 --> 00:02:29,810
basically details all the things that

00:02:27,200 --> 00:02:32,720
you have to do in the in the project

00:02:29,810 --> 00:02:36,290
then you write a prototype and of course

00:02:32,720 --> 00:02:37,970
we do that do that in in Python then you

00:02:36,290 --> 00:02:39,440
have to come up with the design and I

00:02:37,970 --> 00:02:41,960
had the talk yesterday about how to

00:02:39,440 --> 00:02:43,940
design these things and then the next

00:02:41,960 --> 00:02:47,180
step is you take the prototype and you

00:02:43,940 --> 00:02:50,360
convert into some real life kind of

00:02:47,180 --> 00:02:52,280
language like C++ or Java and then you

00:02:50,360 --> 00:02:54,890
have to plummet and support so that's

00:02:52,280 --> 00:02:57,710
the standard kind of IT project that you

00:02:54,890 --> 00:03:00,170
normally do now with with Python things

00:02:57,710 --> 00:03:02,300
work a little differently so first you

00:03:00,170 --> 00:03:04,940
start again with an idea specification

00:03:02,300 --> 00:03:07,610
it doesn't have to be duty it doesn't

00:03:04,940 --> 00:03:09,710
have to be too detailed because price

00:03:07,610 --> 00:03:13,670
makes it possible to easily change your

00:03:09,710 --> 00:03:16,700
project even within the actual

00:03:13,670 --> 00:03:18,110
implementation phase and even later on

00:03:16,700 --> 00:03:20,300
in the deployment phase so you can

00:03:18,110 --> 00:03:22,550
actually you can easily adapt it to new

00:03:20,300 --> 00:03:25,459
requirements so again you write the

00:03:22,550 --> 00:03:29,180
prototype in Python you design why you

00:03:25,459 --> 00:03:32,959
prototype so you don't you don't have to

00:03:29,180 --> 00:03:35,330
do a long up front design you can you

00:03:32,959 --> 00:03:36,560
can do that in smaller steps and then

00:03:35,330 --> 00:03:39,410
the prototype turns into the

00:03:36,560 --> 00:03:40,970
implementation so you completely skip

00:03:39,410 --> 00:03:44,540
the re-implementation face you don't

00:03:40,970 --> 00:03:47,300
need to use Java or C++ you may need it

00:03:44,540 --> 00:03:49,970
in a few places where you need lots of

00:03:47,300 --> 00:03:53,510
speed then you can fall to fall back to

00:03:49,970 --> 00:03:56,209
to to see and then have C extensions for

00:03:53,510 --> 00:03:58,310
Python doing the fast stuff but in

00:03:56,209 --> 00:04:00,310
general you can nowadays do most of the

00:03:58,310 --> 00:04:03,020
things in Python so you don't really

00:04:00,310 --> 00:04:04,459
need see developers on your project and

00:04:03,020 --> 00:04:06,750
then again you have to prime it and

00:04:04,459 --> 00:04:08,430
support

00:04:06,750 --> 00:04:10,890
so what are the advantages of doing

00:04:08,430 --> 00:04:12,870
Python projects well first of all like I

00:04:10,890 --> 00:04:14,820
said you can completely skip the

00:04:12,870 --> 00:04:18,840
implementation re implementation phase

00:04:14,820 --> 00:04:21,750
in Java or C++ and that makes it

00:04:18,840 --> 00:04:25,050
possible to to have a very lean kind of

00:04:21,750 --> 00:04:29,070
project setup you can easily adapt to

00:04:25,050 --> 00:04:30,600
changes it's very easy to to for example

00:04:29,070 --> 00:04:33,660
integrate new features into your

00:04:30,600 --> 00:04:35,550
application when you use Python it has

00:04:33,660 --> 00:04:38,070
an excellent time to market you can

00:04:35,550 --> 00:04:40,500
develop things very quickly you can work

00:04:38,070 --> 00:04:43,590
with smaller teams then you have to in a

00:04:40,500 --> 00:04:45,419
Java C++ project and overall and that's

00:04:43,590 --> 00:04:48,150
what the the customers usually like is

00:04:45,419 --> 00:04:50,750
it's the costs are much lower because

00:04:48,150 --> 00:04:55,050
you have to pay for fewer developers and

00:04:50,750 --> 00:04:56,610
so overall it so it's a complete win

00:04:55,050 --> 00:05:01,680
situation for the customer if you use

00:04:56,610 --> 00:05:03,870
Python now of course changing the

00:05:01,680 --> 00:05:07,530
standard model of IT projects also

00:05:03,870 --> 00:05:09,450
brings along some problems the the major

00:05:07,530 --> 00:05:11,340
problem is that you no longer have a try

00:05:09,450 --> 00:05:13,020
and error face what you'd normally do in

00:05:11,340 --> 00:05:14,340
an antique project with the prototype

00:05:13,020 --> 00:05:16,640
you no longer have because your

00:05:14,340 --> 00:05:19,740
prototype turns into your actual product

00:05:16,640 --> 00:05:21,900
so you need to be very careful when when

00:05:19,740 --> 00:05:24,840
writing that prototype so you need to

00:05:21,900 --> 00:05:26,130
focus very much on design the code that

00:05:24,840 --> 00:05:28,050
you're right has to be very flexible

00:05:26,130 --> 00:05:31,260
because you might need to make changes

00:05:28,050 --> 00:05:33,419
and something else is very important you

00:05:31,260 --> 00:05:35,520
need scalability and that has to be

00:05:33,419 --> 00:05:37,830
built right into the design from from

00:05:35,520 --> 00:05:39,690
the start you don't have this prototype

00:05:37,830 --> 00:05:42,690
phase anymore so you have to think about

00:05:39,690 --> 00:05:46,680
scalability right when you when you

00:05:42,690 --> 00:05:48,600
start your application design something

00:05:46,680 --> 00:05:51,360
else that's problematic is that you no

00:05:48,600 --> 00:05:53,790
longer have this linear project flow so

00:05:51,360 --> 00:05:57,780
that this no longer the the possibility

00:05:53,790 --> 00:06:00,419
to to develop the project in steps you

00:05:57,780 --> 00:06:01,500
often do have loops in it I mean you

00:06:00,419 --> 00:06:04,919
probably know that from agile

00:06:01,500 --> 00:06:06,240
development that you do always you you

00:06:04,919 --> 00:06:08,160
write something you go back to the

00:06:06,240 --> 00:06:10,830
customer show it to them then you

00:06:08,160 --> 00:06:12,390
discuss it then you get change requests

00:06:10,830 --> 00:06:16,500
and you put those change requests back

00:06:12,390 --> 00:06:19,529
into the product in the traditional IT

00:06:16,500 --> 00:06:22,169
development those phases exist

00:06:19,529 --> 00:06:25,349
as well but they are not as tightly

00:06:22,169 --> 00:06:28,139
bound into the project as with a Python

00:06:25,349 --> 00:06:29,729
project and so to overcome these

00:06:28,139 --> 00:06:36,269
challenges you need good project

00:06:29,729 --> 00:06:40,469
coordination right so running a project

00:06:36,269 --> 00:06:42,359
well first of all you have to have the

00:06:40,469 --> 00:06:43,889
project specifications so there are

00:06:42,359 --> 00:06:46,949
different types of projects that you can

00:06:43,889 --> 00:06:48,929
run you can have open source projects

00:06:46,949 --> 00:06:51,059
like for example OpenStack would be one

00:06:48,929 --> 00:06:53,189
or Python itself would be one you can

00:06:51,059 --> 00:06:55,109
have open-ended projects that don't

00:06:53,189 --> 00:06:58,649
necessarily have a fixed deadline but

00:06:55,109 --> 00:07:00,479
they basically say when you have the

00:06:58,649 --> 00:07:01,799
feature set completely developed and

00:07:00,479 --> 00:07:04,259
implemented then you're done yin and

00:07:01,799 --> 00:07:07,469
then you release we had that in passing

00:07:04,259 --> 00:07:11,369
some years ago and then change to fix

00:07:07,469 --> 00:07:13,199
that line trying to set up then you have

00:07:11,369 --> 00:07:15,269
that's a more typical case you have

00:07:13,199 --> 00:07:16,649
fixed deadline setups where you where

00:07:15,269 --> 00:07:19,829
the customer base you says I want to

00:07:16,649 --> 00:07:23,929
launch my new website or new new feature

00:07:19,829 --> 00:07:26,819
or new servers on a certain date and

00:07:23,929 --> 00:07:29,249
unfortunately those deadlines they are

00:07:26,819 --> 00:07:31,499
usually defined by the customer so you

00:07:29,249 --> 00:07:34,079
don't really have much much say in that

00:07:31,499 --> 00:07:37,769
and because customers often don't really

00:07:34,079 --> 00:07:39,299
know how to correctly estimate the time

00:07:37,769 --> 00:07:41,669
it takes to develop these things you

00:07:39,299 --> 00:07:45,079
have very short deadlines and so that's

00:07:41,669 --> 00:07:45,079
what I'm going to focus on

00:07:46,430 --> 00:07:51,449
okay so you know what kind of deadline

00:07:49,740 --> 00:07:53,010
you have now you need next thing that

00:07:51,449 --> 00:07:55,979
you have to do is you have to write a

00:07:53,010 --> 00:07:57,750
specification for your project the best

00:07:55,979 --> 00:07:59,729
thing that you can do is you develop

00:07:57,750 --> 00:08:03,660
that specification together with your

00:07:59,729 --> 00:08:05,570
client so you try to avoid the case that

00:08:03,660 --> 00:08:08,820
the client comes up to you with a

00:08:05,570 --> 00:08:11,729
pre-written specification say a 100 page

00:08:08,820 --> 00:08:14,130
document that you then have to take and

00:08:11,729 --> 00:08:17,639
then implement the reason I'm saying

00:08:14,130 --> 00:08:19,590
that is the customer will usually have a

00:08:17,639 --> 00:08:21,419
traditional IT project in mind and

00:08:19,590 --> 00:08:23,970
umpires and things work a little

00:08:21,419 --> 00:08:26,550
differently in many cases so it makes a

00:08:23,970 --> 00:08:28,850
lot of sense to tell the customer to not

00:08:26,550 --> 00:08:31,530
spend too much time into developing

00:08:28,850 --> 00:08:33,839
developing the specification up front

00:08:31,530 --> 00:08:37,500
but to instead make that part of the

00:08:33,839 --> 00:08:38,760
project and then you can because you're

00:08:37,500 --> 00:08:40,890
working with them to develop that

00:08:38,760 --> 00:08:42,539
specification you can take influence you

00:08:40,890 --> 00:08:44,760
can for example choose the right tools

00:08:42,539 --> 00:08:47,580
the right third-party libraries that you

00:08:44,760 --> 00:08:49,110
would like to use in your project you

00:08:47,580 --> 00:08:50,730
can you can hash out things like

00:08:49,110 --> 00:08:53,370
licensing problems with those

00:08:50,730 --> 00:08:57,450
third-party libraries that you want to

00:08:53,370 --> 00:09:00,029
choose and you can also try to influence

00:08:57,450 --> 00:09:02,730
the the deadline and via the milestones

00:09:00,029 --> 00:09:05,790
that you have in your project it's very

00:09:02,730 --> 00:09:08,850
important to to make the customer learn

00:09:05,790 --> 00:09:11,970
about these things we've often had to

00:09:08,850 --> 00:09:14,279
have the problem that we got it more or

00:09:11,970 --> 00:09:15,779
less complete specification we had to go

00:09:14,279 --> 00:09:17,220
back to the customer and make lots of

00:09:15,779 --> 00:09:19,200
changes of course the customer didn't

00:09:17,220 --> 00:09:21,060
like that because they aren't already

00:09:19,200 --> 00:09:24,750
invested a lot of time into writing it

00:09:21,060 --> 00:09:26,339
and it's eaten so it's very important if

00:09:24,750 --> 00:09:28,560
you have a customer for multiple

00:09:26,339 --> 00:09:31,740
projects to tell them that it's better

00:09:28,560 --> 00:09:35,459
to work that way and to avoid this

00:09:31,740 --> 00:09:37,320
duplication of work hey next thing is

00:09:35,459 --> 00:09:39,000
you need to build a team of course you

00:09:37,320 --> 00:09:44,040
need some developers you need a project

00:09:39,000 --> 00:09:45,240
manager I'm always using p.m. for that

00:09:44,040 --> 00:09:48,990
there are different ways of structuring

00:09:45,240 --> 00:09:53,040
your teams and eugenics we usually use

00:09:48,990 --> 00:09:55,320
small teams and we work with remote

00:09:53,040 --> 00:09:56,940
developers so that's what I'm going to

00:09:55,320 --> 00:09:59,399
focus on in the talk but of course there

00:09:56,940 --> 00:10:02,610
are other setups in Python general you

00:09:59,399 --> 00:10:04,319
don't have large teams on the projects

00:10:02,610 --> 00:10:07,380
because if you make the teams too large

00:10:04,319 --> 00:10:11,220
the overhead that gets added bye-bye

00:10:07,380 --> 00:10:15,690
communication and feedback it simply

00:10:11,220 --> 00:10:18,720
kills the efficiency in your project the

00:10:15,690 --> 00:10:20,880
reason is that it's very fast to develop

00:10:18,720 --> 00:10:23,430
you can very quickly develop things in

00:10:20,880 --> 00:10:25,470
Python and so the the developers often

00:10:23,430 --> 00:10:27,690
have to go back to the project manager

00:10:25,470 --> 00:10:30,269
to get feedback about their particular

00:10:27,690 --> 00:10:32,880
way of implementing something so the

00:10:30,269 --> 00:10:37,620
feed via the project manager becomes the

00:10:32,880 --> 00:10:39,870
bottleneck in the project yeah you

00:10:37,620 --> 00:10:43,170
mentioned our developers but testers are

00:10:39,870 --> 00:10:45,149
also part of the team issue can we

00:10:43,170 --> 00:10:48,779
attach this to the 10 developers so that

00:10:45,149 --> 00:10:53,519
we have 15 people in the team actually

00:10:48,779 --> 00:10:58,319
that's a good question I'd have to think

00:10:53,519 --> 00:11:01,319
about that yeah the reason is that we in

00:10:58,319 --> 00:11:02,910
we don't have separate testers so the

00:11:01,319 --> 00:11:05,449
developers write the unit test we always

00:11:02,910 --> 00:11:09,930
run the unit test so there's no separate

00:11:05,449 --> 00:11:12,480
step 44 actually for for having testers

00:11:09,930 --> 00:11:16,709
work on on the project that's something

00:11:12,480 --> 00:11:18,990
that's usually done by the customers so

00:11:16,709 --> 00:11:22,290
they they have the the Q they accuse a

00:11:18,990 --> 00:11:27,240
team then work on the application later

00:11:22,290 --> 00:11:29,880
on right so what I found is that but

00:11:27,240 --> 00:11:32,399
that's just my personal experiences that

00:11:29,880 --> 00:11:34,589
you can you can stay scale this up for

00:11:32,399 --> 00:11:37,380
Python projects to up to 10 developers

00:11:34,589 --> 00:11:38,850
but after that it gets inefficient so if

00:11:37,380 --> 00:11:41,430
you if you have more if you need more

00:11:38,850 --> 00:11:43,079
than 10 10 developers in a project and

00:11:41,430 --> 00:11:45,779
it's better to have multiple teams and

00:11:43,079 --> 00:11:48,149
then have those two the team project

00:11:45,779 --> 00:11:50,910
managers then report to the central

00:11:48,149 --> 00:11:55,100
project manager

00:11:50,910 --> 00:11:57,180
right so next thing is a team location

00:11:55,100 --> 00:11:59,340
typical setup is you have everyone

00:11:57,180 --> 00:12:00,750
sitting in the office networks fine it's

00:11:59,340 --> 00:12:04,260
very efficient because a short

00:12:00,750 --> 00:12:06,300
communication pass then you can have

00:12:04,260 --> 00:12:08,700
remote people you can have a mix of both

00:12:06,300 --> 00:12:10,920
and if you mix both then you have to pay

00:12:08,700 --> 00:12:13,080
attention to the communication overhead

00:12:10,920 --> 00:12:15,240
that you have with remote team members

00:12:13,080 --> 00:12:18,560
and it's very important to synchronize

00:12:15,240 --> 00:12:21,300
both this is important because the

00:12:18,560 --> 00:12:23,400
things can can easily be done in the

00:12:21,300 --> 00:12:25,590
office without having the remote people

00:12:23,400 --> 00:12:28,530
know about it so you have to make sure

00:12:25,590 --> 00:12:30,150
that the office people always use the

00:12:28,530 --> 00:12:31,740
standard communication mechanisms in

00:12:30,150 --> 00:12:35,940
your project so that everyone knows

00:12:31,740 --> 00:12:37,680
where the project currently is and the

00:12:35,940 --> 00:12:39,600
feedback loop that I just mentioned to

00:12:37,680 --> 00:12:42,900
the project manager also takes longer if

00:12:39,600 --> 00:12:47,880
you have remote people on your team so

00:12:42,900 --> 00:12:49,500
that's something to consider okay so you

00:12:47,880 --> 00:12:52,560
want to set up your team you know how

00:12:49,500 --> 00:12:54,810
many people you need and the next step

00:12:52,560 --> 00:12:57,260
is to to find the team members now if

00:12:54,810 --> 00:13:00,960
you have a large company you you can

00:12:57,260 --> 00:13:04,020
probably choose from quite a big pool of

00:13:00,960 --> 00:13:05,820
developers if you're like a so very

00:13:04,020 --> 00:13:08,010
smart company and we usually work with

00:13:05,820 --> 00:13:10,080
freelancers we have to go out to the end

00:13:08,010 --> 00:13:12,860
to the Python community and and user

00:13:10,080 --> 00:13:15,720
network to find the proper people for

00:13:12,860 --> 00:13:17,520
for that particular project what we

00:13:15,720 --> 00:13:19,140
usually do is we look at the various

00:13:17,520 --> 00:13:22,500
paths that we have in the project the

00:13:19,140 --> 00:13:26,040
various skills that we need say another

00:13:22,500 --> 00:13:28,500
PDF generation or web front end or

00:13:26,040 --> 00:13:32,030
database back and and then then we get

00:13:28,500 --> 00:13:36,480
specific highly skilled people for those

00:13:32,030 --> 00:13:38,340
developer positions it's very important

00:13:36,480 --> 00:13:40,170
if you have short deadlines that you you

00:13:38,340 --> 00:13:42,690
make the whole team as efficient as

00:13:40,170 --> 00:13:44,430
possible so you have to focus on

00:13:42,690 --> 00:13:46,830
developers that can actually work on

00:13:44,430 --> 00:13:49,230
their own and don't need to go back to

00:13:46,830 --> 00:13:52,110
the project manager a lot it's very

00:13:49,230 --> 00:13:53,970
important for for the project manager to

00:13:52,110 --> 00:13:56,400
be able to give a task to developer the

00:13:53,970 --> 00:13:58,820
tent to developer then goes away for a

00:13:56,400 --> 00:14:02,910
couple of days and then brings back a

00:13:58,820 --> 00:14:04,529
nicely working python package in an

00:14:02,910 --> 00:14:06,509
ideal world of course

00:14:04,529 --> 00:14:08,519
but that's something that you should

00:14:06,509 --> 00:14:11,160
focus on and you should make sure that

00:14:08,519 --> 00:14:13,620
the people are set up for this if you

00:14:11,160 --> 00:14:16,139
have longer running projects then it's

00:14:13,620 --> 00:14:18,629
also you can also have people on board

00:14:16,139 --> 00:14:21,029
that are basically trained on the job so

00:14:18,629 --> 00:14:22,259
you have beginners or intermediate on

00:14:21,029 --> 00:14:23,999
the project but if you have short

00:14:22,259 --> 00:14:29,670
deadlines very important to have get

00:14:23,999 --> 00:14:31,499
highly skilled people right and how do

00:14:29,670 --> 00:14:35,579
you get the team to work with those

00:14:31,499 --> 00:14:38,279
short deadlines well I'm going to talk

00:14:35,579 --> 00:14:40,649
about this from a project perspective

00:14:38,279 --> 00:14:45,389
because that's what I am in in the

00:14:40,649 --> 00:14:47,939
company the way that you get people to

00:14:45,389 --> 00:14:49,410
work quickly as you set deadlines just

00:14:47,939 --> 00:14:50,999
like the trust summer does with you you

00:14:49,410 --> 00:14:53,160
have to set that lens for the developers

00:14:50,999 --> 00:14:55,980
and get really angry if they don't meet

00:14:53,160 --> 00:14:58,740
the deadlines you have to be very

00:14:55,980 --> 00:15:01,170
responsive so if if a product if a

00:14:58,740 --> 00:15:02,999
developer ask a question it shouldn't

00:15:01,170 --> 00:15:05,670
take too long for for you to answer

00:15:02,999 --> 00:15:08,069
those questions and you have to then

00:15:05,670 --> 00:15:10,529
really work with them to get the problem

00:15:08,069 --> 00:15:15,899
that they have resolved you need to give

00:15:10,529 --> 00:15:17,370
feedback and and the feedback well I

00:15:15,899 --> 00:15:19,589
can't say this often enough you have to

00:15:17,370 --> 00:15:21,209
give give feedback to to to the

00:15:19,589 --> 00:15:24,240
developers because they want to know how

00:15:21,209 --> 00:15:26,069
good their work is so most of the time

00:15:24,240 --> 00:15:28,620
of course it works excellent so you need

00:15:26,069 --> 00:15:30,449
to tell that to the developers and that

00:15:28,620 --> 00:15:33,120
makes them feel right and feel good

00:15:30,449 --> 00:15:34,889
about it you also have to give them

00:15:33,120 --> 00:15:37,410
feedback that you learn from the

00:15:34,889 --> 00:15:40,709
customer which is also very important

00:15:37,410 --> 00:15:42,449
and of course as project manager you

00:15:40,709 --> 00:15:45,809
have to work just as hard as developers

00:15:42,449 --> 00:15:47,550
so that they see that it's not just them

00:15:45,809 --> 00:15:49,759
working hard but you're working hard as

00:15:47,550 --> 00:15:49,759
well

00:15:50,820 --> 00:15:56,410
communication there are two lines of

00:15:55,060 --> 00:15:58,600
communication that you have in a project

00:15:56,410 --> 00:16:00,160
one is from the project manager to the

00:15:58,600 --> 00:16:03,580
customer and the other is from the

00:16:00,160 --> 00:16:05,200
project manager to developers I found in

00:16:03,580 --> 00:16:07,270
my experience that you should always

00:16:05,200 --> 00:16:09,640
avoid communication between the customer

00:16:07,270 --> 00:16:13,540
developer or the developer and the

00:16:09,640 --> 00:16:16,600
customer the reason for that is there's

00:16:13,540 --> 00:16:18,850
actually many things it's for example

00:16:16,600 --> 00:16:20,650
developers to customer if you have that

00:16:18,850 --> 00:16:22,240
kind of communication the developers

00:16:20,650 --> 00:16:24,160
they don't know the setup that you have

00:16:22,240 --> 00:16:26,890
with the customer they don't necessarily

00:16:24,160 --> 00:16:29,140
know what you've discussed with them

00:16:26,890 --> 00:16:32,980
when setting up the projects and and the

00:16:29,140 --> 00:16:36,339
contracts and everything they may not

00:16:32,980 --> 00:16:39,460
know about or may not have the proper

00:16:36,339 --> 00:16:44,110
communication skills to talk to to the

00:16:39,460 --> 00:16:46,750
customer so that kind of direction of

00:16:44,110 --> 00:16:49,089
communication can can cause some con

00:16:46,750 --> 00:16:52,300
some problems and conflicts in your set

00:16:49,089 --> 00:16:53,890
up the other way around also doesn't

00:16:52,300 --> 00:16:56,130
necessarily work for example if you have

00:16:53,890 --> 00:16:58,540
a customer talk directly to a developer

00:16:56,130 --> 00:17:01,330
the customer can put pressure on the

00:16:58,540 --> 00:17:02,830
developer and then the developer doesn't

00:17:01,330 --> 00:17:05,350
know how to react to that because

00:17:02,830 --> 00:17:09,610
there's no project manager in between to

00:17:05,350 --> 00:17:11,770
buffer this pressure and that's

00:17:09,610 --> 00:17:15,339
something that that's very difficult to

00:17:11,770 --> 00:17:16,900
deal with for the developers and if you

00:17:15,339 --> 00:17:18,670
can you should you should not for

00:17:16,900 --> 00:17:20,290
example give the email addresses of the

00:17:18,670 --> 00:17:23,620
developers to the customer so that they

00:17:20,290 --> 00:17:26,500
can can't use that path they often like

00:17:23,620 --> 00:17:29,050
to use that path or want to use that

00:17:26,500 --> 00:17:32,260
kind of path because and I say the

00:17:29,050 --> 00:17:35,020
developers is not it's not reachable for

00:17:32,260 --> 00:17:37,300
some reason they want to be able to

00:17:35,020 --> 00:17:40,240
directly talk to the developers but it's

00:17:37,300 --> 00:17:43,830
better to just keep them waiting until

00:17:40,240 --> 00:17:43,830
you get back and you can handle the case

00:17:44,540 --> 00:17:50,870
yes that's the question

00:17:54,800 --> 00:17:59,780
usually between iterations the previous

00:17:58,040 --> 00:18:01,640
company I used to work with they were

00:17:59,780 --> 00:18:07,910
out it they'll always have a like a

00:18:01,640 --> 00:18:11,030
feedback session where without one

00:18:07,910 --> 00:18:14,390
period the clients and the developers

00:18:11,030 --> 00:18:16,340
kind of we're able to say well did we

00:18:14,390 --> 00:18:21,410
understand correctly the requirements

00:18:16,340 --> 00:18:24,290
are we headed the right direction that

00:18:21,410 --> 00:18:26,210
of course caused the you know the whole

00:18:24,290 --> 00:18:31,850
idea of feature creeps coming in and all

00:18:26,210 --> 00:18:33,620
that I have I was just wondering is

00:18:31,850 --> 00:18:36,770
there such a thing as a having a

00:18:33,620 --> 00:18:39,920
feedback moment between the client and

00:18:36,770 --> 00:18:42,620
the developer or should I even that

00:18:39,920 --> 00:18:44,630
should be avoided I would avoid even

00:18:42,620 --> 00:18:47,030
that I would just have the project

00:18:44,630 --> 00:18:49,730
manager be the central contact and not

00:18:47,030 --> 00:18:52,190
not have direct communication between

00:18:49,730 --> 00:18:54,500
the developers and the the customers

00:18:52,190 --> 00:18:57,380
it's because I mean the way that

00:18:54,500 --> 00:18:58,910
developers communicate is often very

00:18:57,380 --> 00:19:00,700
different from the way that the project

00:18:58,910 --> 00:19:05,020
manager communicates with the customer

00:19:00,700 --> 00:19:08,390
it has very much to do with politics in

00:19:05,020 --> 00:19:10,160
in setting up here I mean in in the

00:19:08,390 --> 00:19:14,030
communication you have to be careful

00:19:10,160 --> 00:19:16,310
what you say okay we could really the

00:19:14,030 --> 00:19:19,070
motivation behind I was a lot of the

00:19:16,310 --> 00:19:23,210
times the customer did not really know

00:19:19,070 --> 00:19:27,850
what they wanted it was more like this

00:19:23,210 --> 00:19:31,660
might be what we want shows something we

00:19:27,850 --> 00:19:35,810
investigate and we provide feedback and

00:19:31,660 --> 00:19:37,880
that's pretty much how the back and

00:19:35,810 --> 00:19:39,350
forth was happening right that that's

00:19:37,880 --> 00:19:41,060
something that the project manager

00:19:39,350 --> 00:19:42,470
should do and that's also what i have on

00:19:41,060 --> 00:19:44,540
this slideshare is this is basically

00:19:42,470 --> 00:19:47,480
about the the customer communication so

00:19:44,540 --> 00:19:49,340
the the project manager needs to give

00:19:47,480 --> 00:19:51,680
regular status updates to the client of

00:19:49,340 --> 00:19:54,500
course it's very important the project

00:19:51,680 --> 00:19:58,010
manager also has to get the client to

00:19:54,500 --> 00:20:02,120
tell him about project changes this may

00:19:58,010 --> 00:20:03,800
be obvious but in reality it's not so it

00:20:02,120 --> 00:20:06,080
often happens that the client makes some

00:20:03,800 --> 00:20:07,730
internal changes to the project or to

00:20:06,080 --> 00:20:08,240
the expectation of the project and

00:20:07,730 --> 00:20:11,770
doesn't tell

00:20:08,240 --> 00:20:15,200
the project manager so you have to be

00:20:11,770 --> 00:20:19,130
really pushing for for getting that

00:20:15,200 --> 00:20:21,020
information you have to manage deadlines

00:20:19,130 --> 00:20:23,600
you have to be very transparent about

00:20:21,020 --> 00:20:25,220
everything and with transparency what we

00:20:23,600 --> 00:20:27,260
usually do is we give them access to our

00:20:25,220 --> 00:20:30,770
back tracker so that they can look at

00:20:27,260 --> 00:20:32,960
the back tracker then again in reality

00:20:30,770 --> 00:20:35,240
they never do but there they feel very

00:20:32,960 --> 00:20:41,140
good about it to be able to access

00:20:35,240 --> 00:20:43,160
everything yeah well thank you right and

00:20:41,140 --> 00:20:45,020
your point was basically about

00:20:43,160 --> 00:20:47,090
developing and updating spirit the

00:20:45,020 --> 00:20:48,850
product specification during the project

00:20:47,090 --> 00:20:52,040
and that's basically this feedback loop

00:20:48,850 --> 00:20:53,300
so you have my phones in your project

00:20:52,040 --> 00:20:55,460
and every time you reach the myosin you

00:20:53,300 --> 00:20:57,860
show it to your customer and then you

00:20:55,460 --> 00:21:00,470
get feedback from them and then they say

00:20:57,860 --> 00:21:02,750
well I wanted this differently done or I

00:21:00,470 --> 00:21:05,780
want this to look like that or I need

00:21:02,750 --> 00:21:08,840
this new feature or you've implemented

00:21:05,780 --> 00:21:12,140
that in a different in a way that's not

00:21:08,840 --> 00:21:17,179
really what we thought it would be just

00:21:12,140 --> 00:21:22,010
kind of thing okay next take project

00:21:17,179 --> 00:21:24,679
communication this is very important we

00:21:22,010 --> 00:21:27,440
tried in in a few projects to do daily

00:21:24,679 --> 00:21:29,330
meetings with the developers so we had a

00:21:27,440 --> 00:21:31,400
one-hour meeting every day to to get

00:21:29,330 --> 00:21:33,679
updates from everyone that turn out to

00:21:31,400 --> 00:21:35,480
be very very inefficient because in the

00:21:33,679 --> 00:21:37,160
end we we ended up just basically

00:21:35,480 --> 00:21:38,990
discussing the problems of two or three

00:21:37,160 --> 00:21:40,309
developers in that meeting and all the

00:21:38,990 --> 00:21:42,200
other developers were just sitting there

00:21:40,309 --> 00:21:45,590
waiting for the meeting to get to be

00:21:42,200 --> 00:21:49,220
over to continue to work again so we

00:21:45,590 --> 00:21:51,710
stopped doing that there are various

00:21:49,220 --> 00:21:54,770
approaches to do project management to

00:21:51,710 --> 00:21:57,050
for example do weekly meetings after

00:21:54,770 --> 00:21:59,720
this the experience with the daily

00:21:57,050 --> 00:22:02,750
meetings we decided that we really don't

00:21:59,720 --> 00:22:05,480
need regular meetings instead what we do

00:22:02,750 --> 00:22:07,790
is we do meetings on demand and we

00:22:05,480 --> 00:22:09,200
always have an a chat window open so all

00:22:07,790 --> 00:22:11,720
the developers can always see what's

00:22:09,200 --> 00:22:14,179
going on and can also see the

00:22:11,720 --> 00:22:17,090
discussions but they don't have to sit

00:22:14,179 --> 00:22:20,410
there and wait for a meeting to to get

00:22:17,090 --> 00:22:22,780
over they can continue with their work

00:22:20,410 --> 00:22:24,640
and only monitor that chat winter every

00:22:22,780 --> 00:22:26,800
now and then for any new updates and

00:22:24,640 --> 00:22:30,040
then if something if something happens

00:22:26,800 --> 00:22:33,460
that needs all of the developers to be

00:22:30,040 --> 00:22:36,460
informed than you do a meeting yes

00:22:33,460 --> 00:22:38,500
another one yeah I think I think we

00:22:36,460 --> 00:22:41,920
should probably cue the questions a bit

00:22:38,500 --> 00:22:43,900
more no just second you get the mag in a

00:22:41,920 --> 00:22:47,470
minute and have you tried stand-ups and

00:22:43,900 --> 00:22:48,970
your team is like a grown team do the

00:22:47,470 --> 00:22:52,020
developers know each other like four

00:22:48,970 --> 00:22:54,880
years or do shuffle your teams around

00:22:52,020 --> 00:22:56,530
setups and team kind of you mean that's

00:22:54,880 --> 00:22:58,660
kind of weekly standup thing no daily

00:22:56,530 --> 00:23:01,360
like okay it's 50 minutes because an

00:22:58,660 --> 00:23:03,910
hour's very long but right out just 50

00:23:01,360 --> 00:23:07,330
minutes or 10 minutes it's looks pretty

00:23:03,910 --> 00:23:10,270
good I think well we we always work with

00:23:07,330 --> 00:23:12,910
remote people so if you if you do a

00:23:10,270 --> 00:23:14,710
remote meeting then weekly standup it

00:23:12,910 --> 00:23:16,000
still takes long because only one person

00:23:14,710 --> 00:23:20,160
can speak and all the others have to

00:23:16,000 --> 00:23:22,600
then have to listen and understand their

00:23:20,160 --> 00:23:23,650
we found it's much better to just use

00:23:22,600 --> 00:23:27,460
the chat window and do this

00:23:23,650 --> 00:23:29,080
asynchronously but that's just our

00:23:27,460 --> 00:23:31,780
experience I mean of course it probably

00:23:29,080 --> 00:23:34,330
works in different ways as well so this

00:23:31,780 --> 00:23:36,760
weekly standup or daily stand-up might

00:23:34,330 --> 00:23:40,450
might be a good idea for four other

00:23:36,760 --> 00:23:43,240
teams in the teams i worked in it's also

00:23:40,450 --> 00:23:48,070
like five people maximum or something

00:23:43,240 --> 00:23:50,230
and yeah we did daily stand-ups even

00:23:48,070 --> 00:23:53,550
remotely with something i can hang out

00:23:50,230 --> 00:23:57,010
for example and it's basically just

00:23:53,550 --> 00:24:00,510
everyone says is everything fine do I

00:23:57,010 --> 00:24:03,550
have tasks do I have any blockers and

00:24:00,510 --> 00:24:06,580
that you can then say okay I have a

00:24:03,550 --> 00:24:09,820
blocker here and I need you and you to

00:24:06,580 --> 00:24:12,910
have a meeting after rods and in general

00:24:09,820 --> 00:24:16,000
it's like 15 minutes or something where

00:24:12,910 --> 00:24:17,740
you just go quickly through it and then

00:24:16,000 --> 00:24:20,980
decide okay we need another meeting or

00:24:17,740 --> 00:24:22,750
yeah we can just continue right yeah

00:24:20,980 --> 00:24:27,130
maybe we should try that again with a 15

00:24:22,750 --> 00:24:28,870
minute meeting after this is this this

00:24:27,130 --> 00:24:30,430
attempt to do daily meetings we

00:24:28,870 --> 00:24:32,050
basically just started would be better

00:24:30,430 --> 00:24:33,639
to just use a chat window in a worked

00:24:32,050 --> 00:24:35,169
out well for us but of course

00:24:33,639 --> 00:24:42,369
doesn't necessarily mean it works out

00:24:35,169 --> 00:24:47,019
well for everyone right just see what I

00:24:42,369 --> 00:24:48,459
skipped oh no all right initial setup so

00:24:47,019 --> 00:24:51,899
you have to you have yeah if your team

00:24:48,459 --> 00:24:54,940
set up you have the specification

00:24:51,899 --> 00:24:58,179
written the next thing that you have to

00:24:54,940 --> 00:25:00,519
do is you have to set up milestones for

00:24:58,179 --> 00:25:03,609
your project this is very important

00:25:00,519 --> 00:25:04,899
because you first of all you every now

00:25:03,609 --> 00:25:06,609
and then you want to show your customer

00:25:04,899 --> 00:25:08,200
where you are so you want to have

00:25:06,609 --> 00:25:11,769
something that that more or less works

00:25:08,200 --> 00:25:14,829
and that you can then take into a

00:25:11,769 --> 00:25:16,629
customer meeting and demonstrate you

00:25:14,829 --> 00:25:20,320
need you also need this for the feedback

00:25:16,629 --> 00:25:22,229
loop it's also very important for the

00:25:20,320 --> 00:25:25,299
developers to work towards something

00:25:22,229 --> 00:25:28,389
that they can then basically release

00:25:25,299 --> 00:25:30,940
sort of so the way that we do it is we

00:25:28,389 --> 00:25:33,459
typically have a setup phase where you

00:25:30,940 --> 00:25:37,450
set up all the tools that you need for

00:25:33,459 --> 00:25:39,849
the project the basic documentation then

00:25:37,450 --> 00:25:41,320
we have a concept phase where we try out

00:25:39,849 --> 00:25:44,169
various things that we have in the

00:25:41,320 --> 00:25:46,299
project specification and see for

00:25:44,169 --> 00:25:49,029
example which third-party tools would be

00:25:46,299 --> 00:25:51,459
necessary and all would actually work

00:25:49,029 --> 00:25:53,039
and then you have two standard alpha

00:25:51,459 --> 00:25:57,009
bettor release candidate no release face

00:25:53,039 --> 00:25:58,570
there's nothing special to that after

00:25:57,009 --> 00:26:02,679
the release you always have a support

00:25:58,570 --> 00:26:05,799
face or you have if the if you know that

00:26:02,679 --> 00:26:08,169
the product is going to be developed

00:26:05,799 --> 00:26:10,149
over a certain amount of time they have

00:26:08,169 --> 00:26:11,799
update releases in between so for the

00:26:10,149 --> 00:26:14,379
update releases you always collect new

00:26:11,799 --> 00:26:18,450
features you implement them and then

00:26:14,379 --> 00:26:22,450
every now and then you do an update I

00:26:18,450 --> 00:26:24,309
mentioning these dis dis separately the

00:26:22,450 --> 00:26:26,079
update and the support releases because

00:26:24,309 --> 00:26:28,089
the the amount of activity in the

00:26:26,079 --> 00:26:31,239
project goes down significantly after

00:26:28,089 --> 00:26:33,309
you have a release that's simply because

00:26:31,239 --> 00:26:35,619
the the product will actually then get

00:26:33,309 --> 00:26:37,329
used you have a short very intense

00:26:35,619 --> 00:26:39,039
support face usually after with the

00:26:37,329 --> 00:26:41,289
release because they're of obviously

00:26:39,039 --> 00:26:43,059
there's no bugs in the application you

00:26:41,289 --> 00:26:45,639
can avoid them so you have to fix them

00:26:43,059 --> 00:26:47,190
very quickly but then after after a

00:26:45,639 --> 00:26:51,030
while things get get

00:26:47,190 --> 00:26:53,760
more well quiet and you can focus on

00:26:51,030 --> 00:26:55,050
other things if you have a longer

00:26:53,760 --> 00:26:56,820
running project that has multiple

00:26:55,050 --> 00:26:59,550
releases you always have to be aware of

00:26:56,820 --> 00:27:02,460
that so it may make sense for example to

00:26:59,550 --> 00:27:07,110
scare down up the the development team

00:27:02,460 --> 00:27:08,970
size during the this more quiet phase

00:27:07,110 --> 00:27:12,090
and then ramp it up again for the next

00:27:08,970 --> 00:27:14,280
update release in any case we do

00:27:12,090 --> 00:27:16,220
milestones every two or four weeks so

00:27:14,280 --> 00:27:19,080
you don't have to wait too long for thee

00:27:16,220 --> 00:27:22,680
for the might of milestones to go back

00:27:19,080 --> 00:27:24,270
to your customer and get feedback it's

00:27:22,680 --> 00:27:26,670
also very important to have project

00:27:24,270 --> 00:27:29,550
documentation set up this is important

00:27:26,670 --> 00:27:33,060
for a basically so that you don't lose

00:27:29,550 --> 00:27:35,280
information because you always discuss

00:27:33,060 --> 00:27:39,480
things in the project you make decisions

00:27:35,280 --> 00:27:41,850
in the project you come up with certain

00:27:39,480 --> 00:27:44,280
setups that you need and you should

00:27:41,850 --> 00:27:46,140
always document those things we use a

00:27:44,280 --> 00:27:48,780
wiki for that other people use text

00:27:46,140 --> 00:27:51,420
files rest files you can also use word

00:27:48,780 --> 00:27:53,190
or Google Doc or even a whiteboard and

00:27:51,420 --> 00:27:55,170
then if you're in the office and then

00:27:53,190 --> 00:27:59,670
put things on the whiteboard or an ISA

00:27:55,170 --> 00:28:01,650
pad if you're working remotely task

00:27:59,670 --> 00:28:04,980
management really nothing much new there

00:28:01,650 --> 00:28:06,870
you use a ticket system of course the

00:28:04,980 --> 00:28:09,090
only thing that you have to be careful

00:28:06,870 --> 00:28:11,840
with this at you when you open a ticket

00:28:09,090 --> 00:28:13,980
with a certain task the task should be

00:28:11,840 --> 00:28:17,370
easily manageable so it should be

00:28:13,980 --> 00:28:19,110
implementable in a few days not weeks of

00:28:17,370 --> 00:28:20,550
course you can also open it open a

00:28:19,110 --> 00:28:22,530
ticket with the task that takes

00:28:20,550 --> 00:28:24,870
something like an or three or four weeks

00:28:22,530 --> 00:28:27,690
to implement but then that needs to be

00:28:24,870 --> 00:28:29,400
what we call a meta ticket so it's it's

00:28:27,690 --> 00:28:31,710
not a ticket where you actually put the

00:28:29,400 --> 00:28:34,380
the all the patches on it's just a

00:28:31,710 --> 00:28:36,780
ticket for organizing other tickets that

00:28:34,380 --> 00:28:38,400
you open for the smaller chance so like

00:28:36,780 --> 00:28:41,130
in the talk yesterday you basically you

00:28:38,400 --> 00:28:43,500
take it launcherpro a problem and you

00:28:41,130 --> 00:28:45,300
break it up into smaller pieces and then

00:28:43,500 --> 00:28:49,650
you associate those those smaller

00:28:45,300 --> 00:28:52,650
tickets with that bigger one ticket

00:28:49,650 --> 00:28:54,690
categories yeah we we use track for for

00:28:52,650 --> 00:28:59,100
doing the ticket management it offers

00:28:54,690 --> 00:29:00,360
various kinds of types of tickets we

00:28:59,100 --> 00:29:01,890
found that

00:29:00,360 --> 00:29:04,020
the type of ticket is really not that

00:29:01,890 --> 00:29:06,120
important because we rarely filter on

00:29:04,020 --> 00:29:10,140
that maybe you have a special kind of

00:29:06,120 --> 00:29:11,790
type for features that you you come up

00:29:10,140 --> 00:29:14,910
during the project that you might want

00:29:11,790 --> 00:29:17,490
to implement or maybe ideas we have that

00:29:14,910 --> 00:29:19,620
in our system but other than that you

00:29:17,490 --> 00:29:22,230
just have it another task ticket type

00:29:19,620 --> 00:29:23,910
and that's it the components that you

00:29:22,230 --> 00:29:25,380
have should map to the the components

00:29:23,910 --> 00:29:27,120
that you have in your application design

00:29:25,380 --> 00:29:30,780
and of course you put the milestones in

00:29:27,120 --> 00:29:33,419
there right so how does the how does the

00:29:30,780 --> 00:29:34,950
work assignment work so the project

00:29:33,419 --> 00:29:36,780
manager is in charge of assigning the

00:29:34,950 --> 00:29:38,760
work to the various people and the

00:29:36,780 --> 00:29:42,480
project manager usually also opens these

00:29:38,760 --> 00:29:44,850
meta tickets the the assignment itself

00:29:42,480 --> 00:29:47,070
should should ideally if you want

00:29:44,850 --> 00:29:50,940
efficient work to be done to be based on

00:29:47,070 --> 00:29:52,950
on components so not task so you have in

00:29:50,940 --> 00:29:55,340
your team you typically have developers

00:29:52,950 --> 00:29:57,960
that own a particular component in your

00:29:55,340 --> 00:29:59,970
project and then if you have something

00:29:57,960 --> 00:30:01,290
to do in that if you have some task for

00:29:59,970 --> 00:30:04,440
that particular component you assigned

00:30:01,290 --> 00:30:06,840
to that particular developer it's very

00:30:04,440 --> 00:30:12,440
important to do loose coupling with

00:30:06,840 --> 00:30:12,440
those components because if you

00:30:13,610 --> 00:30:18,960
let's say you you have a typical problem

00:30:17,309 --> 00:30:22,860
where you have dependencies for example

00:30:18,960 --> 00:30:24,299
is when you do reports oh you first you

00:30:22,860 --> 00:30:28,649
need to define a report how it looks

00:30:24,299 --> 00:30:30,509
like then you need to get the database

00:30:28,649 --> 00:30:32,539
to actually create a report and then you

00:30:30,509 --> 00:30:36,809
need the report to be for example

00:30:32,539 --> 00:30:38,549
exportable as PDF and so those things

00:30:36,809 --> 00:30:41,519
they need different people usually in

00:30:38,549 --> 00:30:43,789
your in your project so the all people

00:30:41,519 --> 00:30:47,190
have to have to wait for the database to

00:30:43,789 --> 00:30:49,620
database developer to actually write the

00:30:47,190 --> 00:30:52,110
sequel that's needed to to build a

00:30:49,620 --> 00:30:54,269
rapport and then for the output you need

00:30:52,110 --> 00:30:56,190
one of the web guys to do the web report

00:30:54,269 --> 00:31:00,659
and you need one of the PDF guides to do

00:30:56,190 --> 00:31:02,639
the to do the PDF report so you don't

00:31:00,659 --> 00:31:05,429
have loose coupling between those so

00:31:02,639 --> 00:31:07,259
yeah that's a dependency everyone has to

00:31:05,429 --> 00:31:09,269
wait for the for the database developer

00:31:07,259 --> 00:31:11,460
so what you need to do is you need to

00:31:09,269 --> 00:31:15,000
make it possible for the people waiting

00:31:11,460 --> 00:31:16,529
on on this database guy for example to

00:31:15,000 --> 00:31:24,210
be able to work on other things in the

00:31:16,529 --> 00:31:25,590
meantime right and the next phase is in

00:31:24,210 --> 00:31:27,690
the project or of course you have to

00:31:25,590 --> 00:31:30,240
actually do the work after you've set it

00:31:27,690 --> 00:31:32,190
up then you have the release and then

00:31:30,240 --> 00:31:35,490
you have to support and afterwards you

00:31:32,190 --> 00:31:37,200
have the finalization face I'm not going

00:31:35,490 --> 00:31:40,049
to go much into detail here because I

00:31:37,200 --> 00:31:41,759
don't have enough time for this might do

00:31:40,049 --> 00:31:44,659
some some other talk about this some

00:31:41,759 --> 00:31:44,659
maybe next year

00:31:44,910 --> 00:31:51,730
the basic way that it works is that you

00:31:47,440 --> 00:31:53,950
go in you go in cycles you meet your

00:31:51,730 --> 00:31:56,170
your well hopefully you meet your

00:31:53,950 --> 00:31:59,320
deadlines you go to the customers show

00:31:56,170 --> 00:32:00,760
them your your milestone you go through

00:31:59,320 --> 00:32:03,790
the specification again you check

00:32:00,760 --> 00:32:05,230
whether everything is okay whether he

00:32:03,790 --> 00:32:09,720
actually did the customer actually

00:32:05,230 --> 00:32:12,820
expected things to work it in that way

00:32:09,720 --> 00:32:15,070
what we found in in projects very often

00:32:12,820 --> 00:32:16,900
is that you sometimes reach a point

00:32:15,070 --> 00:32:18,790
where you need information from the from

00:32:16,900 --> 00:32:21,550
the customer for example you need I know

00:32:18,790 --> 00:32:23,170
some maybe laws that you need to

00:32:21,550 --> 00:32:26,350
implement certain rules that you need to

00:32:23,170 --> 00:32:28,900
implement the reports have to look in a

00:32:26,350 --> 00:32:31,150
certain way so the the project manager

00:32:28,900 --> 00:32:32,770
always has to go to the customer and try

00:32:31,150 --> 00:32:35,530
to get that information from the

00:32:32,770 --> 00:32:38,590
customer and often enough it doesn't

00:32:35,530 --> 00:32:41,140
really work on in a timely manner so you

00:32:38,590 --> 00:32:44,950
don't get the information quick enough

00:32:41,140 --> 00:32:48,850
to actually implement the and meet those

00:32:44,950 --> 00:32:51,100
deadlines so what we usually do is we

00:32:48,850 --> 00:32:53,860
just make up some assumptions for these

00:32:51,100 --> 00:32:55,750
things or we just for example for a

00:32:53,860 --> 00:32:57,340
report we just write a very simple

00:32:55,750 --> 00:32:59,710
template and then just use that for the

00:32:57,340 --> 00:33:01,720
time being

00:32:59,710 --> 00:33:03,760
we found that to be the only way to

00:33:01,720 --> 00:33:06,580
actually work with some customers

00:33:03,760 --> 00:33:07,960
because it just takes much too long to

00:33:06,580 --> 00:33:10,059
wait for them to get back to you and

00:33:07,960 --> 00:33:11,740
then we show them the work and of course

00:33:10,059 --> 00:33:13,659
they complain because things don't work

00:33:11,740 --> 00:33:15,100
like they had expected and then we

00:33:13,659 --> 00:33:16,390
explained that we didn't have the

00:33:15,100 --> 00:33:19,270
information we had to make some choices

00:33:16,390 --> 00:33:21,279
for them and then we just fix things and

00:33:19,270 --> 00:33:23,950
that's again something where you need to

00:33:21,279 --> 00:33:25,510
educate your your customer and make them

00:33:23,950 --> 00:33:31,890
learn that these things are necessary

00:33:25,510 --> 00:33:34,090
and important right so lessons learned

00:33:31,890 --> 00:33:38,770
we found their different types of

00:33:34,090 --> 00:33:41,649
customers these are just a few one isn't

00:33:38,770 --> 00:33:43,659
a very experienced customer who already

00:33:41,649 --> 00:33:46,149
knows how Python works and how efficient

00:33:43,659 --> 00:33:48,820
python is and of course I expect you to

00:33:46,149 --> 00:33:54,490
be very efficient and very quick in

00:33:48,820 --> 00:33:57,309
everything that you do you need a need

00:33:54,490 --> 00:34:00,070
of a different way of talking to to

00:33:57,309 --> 00:34:02,590
these kinds of customers then the other

00:34:00,070 --> 00:34:04,659
types that you have here there's one

00:34:02,590 --> 00:34:06,960
type of customer that we often have is

00:34:04,659 --> 00:34:09,220
you have a customer that has great ideas

00:34:06,960 --> 00:34:12,550
mostly sales people that have great

00:34:09,220 --> 00:34:14,109
great ideas about products but they have

00:34:12,550 --> 00:34:16,810
absolutely no idea experience so they

00:34:14,109 --> 00:34:20,050
have no idea for example of coming up

00:34:16,810 --> 00:34:21,730
with proper estimates if you're lucky

00:34:20,050 --> 00:34:24,760
you can you can talk to the people

00:34:21,730 --> 00:34:26,770
before they publish deadlines for

00:34:24,760 --> 00:34:28,570
example before a product manager goes

00:34:26,770 --> 00:34:32,740
out to the public and says that in six

00:34:28,570 --> 00:34:34,480
months we have this product if you're

00:34:32,740 --> 00:34:37,570
not so lucky you just get that that line

00:34:34,480 --> 00:34:39,970
you have to deal with it and then we

00:34:37,570 --> 00:34:42,190
have had customers in the past that

00:34:39,970 --> 00:34:45,040
we're actually selling solutions that

00:34:42,190 --> 00:34:46,750
didn't exist yet so they were basically

00:34:45,040 --> 00:34:47,800
telling the customer where six months

00:34:46,750 --> 00:34:51,310
we're going to install this application

00:34:47,800 --> 00:34:53,349
on your system and not a single line

00:34:51,310 --> 00:34:56,190
happened written so not even the

00:34:53,349 --> 00:34:59,440
specification was was done yet so

00:34:56,190 --> 00:35:00,910
sometimes a bit difficult so how can you

00:34:59,440 --> 00:35:04,960
deal with that well first of all this

00:35:00,910 --> 00:35:07,330
yet you have to be very very clear in in

00:35:04,960 --> 00:35:09,369
talking to your customer you have to

00:35:07,330 --> 00:35:11,130
tell them what the limits are you have

00:35:09,369 --> 00:35:13,630
to tell them that you're just human and

00:35:11,130 --> 00:35:17,170
of course you make mistakes and

00:35:13,630 --> 00:35:19,750
things don't always work as intended you

00:35:17,170 --> 00:35:22,539
have to tell them about this concept of

00:35:19,750 --> 00:35:24,730
bugs that applications tend to have bugs

00:35:22,539 --> 00:35:27,339
even you try to even if you try to write

00:35:24,730 --> 00:35:30,700
as many units test as possible you still

00:35:27,339 --> 00:35:33,359
going to hit a few bucks and then you

00:35:30,700 --> 00:35:36,220
have to discuss with the customer to to

00:35:33,359 --> 00:35:38,819
match up their expectation with the

00:35:36,220 --> 00:35:41,559
realities of software development and

00:35:38,819 --> 00:35:43,569
find some kind of balance here for

00:35:41,559 --> 00:35:46,839
example if you get a chance it's very

00:35:43,569 --> 00:35:49,059
useful to define my stones together with

00:35:46,839 --> 00:35:50,980
them and then for example move features

00:35:49,059 --> 00:35:52,539
that they want in a very early phase too

00:35:50,980 --> 00:35:54,279
late a face in the project and that

00:35:52,539 --> 00:36:00,460
frees up time for other more important

00:35:54,279 --> 00:36:02,200
things you need to educate your customer

00:36:00,460 --> 00:36:03,430
in software development because they

00:36:02,200 --> 00:36:06,099
often don't know how software

00:36:03,430 --> 00:36:08,920
development works we sometimes had

00:36:06,099 --> 00:36:11,440
customers that that for example knew a

00:36:08,920 --> 00:36:13,900
bit of PHP and then they sat down and

00:36:11,440 --> 00:36:17,710
wrote a prototype and PHP took them half

00:36:13,900 --> 00:36:20,039
a day and then they thought well can't

00:36:17,710 --> 00:36:22,720
take much longer to write a Python right

00:36:20,039 --> 00:36:27,369
so of course if you if you're developing

00:36:22,720 --> 00:36:29,259
a production-quality application you

00:36:27,369 --> 00:36:33,400
have to have different things you need

00:36:29,259 --> 00:36:35,440
to have unit tests you need to have you

00:36:33,400 --> 00:36:36,940
need to have error handling you need to

00:36:35,440 --> 00:36:38,680
have proper logging you need to make

00:36:36,940 --> 00:36:40,180
sure that the application continues

00:36:38,680 --> 00:36:42,640
running in case something goes wrong

00:36:40,180 --> 00:36:44,410
somewhere all these things and of course

00:36:42,640 --> 00:36:45,910
that takes time to implement and you

00:36:44,410 --> 00:36:48,609
have to tell your customers that it

00:36:45,910 --> 00:36:50,559
takes time to implement something else

00:36:48,609 --> 00:36:52,720
that I talked about that yesterday but

00:36:50,559 --> 00:36:54,069
we factoring is very important so even

00:36:52,720 --> 00:36:56,109
though you've written something and it

00:36:54,069 --> 00:36:58,349
works and in the milestone you can show

00:36:56,109 --> 00:37:00,819
your customer than things actually work

00:36:58,349 --> 00:37:03,250
they may come up with new features based

00:37:00,819 --> 00:37:04,599
on what you show them and then you find

00:37:03,250 --> 00:37:06,099
that those features don't really match

00:37:04,599 --> 00:37:09,759
up to the implementation that you've

00:37:06,099 --> 00:37:11,589
done and the right thing to do of course

00:37:09,759 --> 00:37:14,200
in software development is then to to

00:37:11,589 --> 00:37:15,880
look at your your code refactor it so

00:37:14,200 --> 00:37:16,960
that it can handle both cases the one

00:37:15,880 --> 00:37:21,670
that you've already shown to your

00:37:16,960 --> 00:37:23,710
customer and the new feature and this is

00:37:21,670 --> 00:37:25,029
sometimes a bit difficult to to tell

00:37:23,710 --> 00:37:27,130
your customer because basically they're

00:37:25,029 --> 00:37:28,750
paying for for refactoring

00:37:27,130 --> 00:37:32,440
for redoing something that's already

00:37:28,750 --> 00:37:35,970
been done so PR you need to really

00:37:32,440 --> 00:37:35,970
demonstrate them that this works out

00:37:37,710 --> 00:37:43,630
then if you're in the support phase the

00:37:42,010 --> 00:37:45,370
poor basically means you watch the

00:37:43,630 --> 00:37:51,400
application running and you need to try

00:37:45,370 --> 00:37:53,320
to fix bugs if you're if you've done a

00:37:51,400 --> 00:37:56,710
good job in your project then of course

00:37:53,320 --> 00:37:58,750
the there won't be many bugs in your

00:37:56,710 --> 00:38:02,590
application and you won't hit very many

00:37:58,750 --> 00:38:04,270
roadblocks on the other hand watching

00:38:02,590 --> 00:38:06,100
the application monitoring it and

00:38:04,270 --> 00:38:09,760
looking through the work through the log

00:38:06,100 --> 00:38:11,680
files and doing data analysis of what

00:38:09,760 --> 00:38:13,690
goes in and what goes out it takes time

00:38:11,680 --> 00:38:18,220
but that's something that the customer

00:38:13,690 --> 00:38:21,700
doesn't see so basically the customer

00:38:18,220 --> 00:38:23,620
never gets any feedback from you but

00:38:21,700 --> 00:38:27,810
you're still you're still billing them

00:38:23,620 --> 00:38:29,980
with with a high amount of support hours

00:38:27,810 --> 00:38:33,250
and of course they tend to not

00:38:29,980 --> 00:38:34,750
understand and so that's something I

00:38:33,250 --> 00:38:36,520
don't have a good good answer to that

00:38:34,750 --> 00:38:37,870
one it's it's just you mean you

00:38:36,520 --> 00:38:40,660
basically selling this warm fuzzy

00:38:37,870 --> 00:38:42,520
feeling to them and they they will only

00:38:40,660 --> 00:38:45,310
notice if something goes wrong and then

00:38:42,520 --> 00:38:48,000
yell at you and if they're not seeing

00:38:45,310 --> 00:38:50,340
anything goes wrong they'll just and

00:38:48,000 --> 00:38:53,260
especially their controllers will just

00:38:50,340 --> 00:38:58,390
then come to you and say well why do we

00:38:53,260 --> 00:39:00,910
need this in the first place a similar

00:38:58,390 --> 00:39:04,870
problem is they're stirring the the

00:39:00,910 --> 00:39:07,450
milestone face if you're always on time

00:39:04,870 --> 00:39:09,460
with your with your milestones and you

00:39:07,450 --> 00:39:12,520
meet all the deadlines of course the

00:39:09,460 --> 00:39:15,570
customer should be happy about that but

00:39:12,520 --> 00:39:19,780
then in reality they get used to it and

00:39:15,570 --> 00:39:22,180
so if you come up to a milestone it's

00:39:19,780 --> 00:39:25,330
really hard to meet where you go away a

00:39:22,180 --> 00:39:28,090
free tight deadlines and you miss that

00:39:25,330 --> 00:39:29,500
deadline they get really angry at you so

00:39:28,090 --> 00:39:31,720
again this is something that you have to

00:39:29,500 --> 00:39:34,810
tell your customers you have to give

00:39:31,720 --> 00:39:36,520
them the right impression that meeting

00:39:34,810 --> 00:39:38,580
those deadlines was really hard work

00:39:36,520 --> 00:39:40,570
they should be more careful about

00:39:38,580 --> 00:39:42,880
adjusting their deadlines

00:39:40,570 --> 00:39:45,010
and you have to tell them that this is

00:39:42,880 --> 00:39:47,590
not the standard case necessarily

00:39:45,010 --> 00:39:50,980
happening if they set the deadlines the

00:39:47,590 --> 00:39:52,420
way that they used to again you have to

00:39:50,980 --> 00:39:54,700
talk to your customers be clear about

00:39:52,420 --> 00:39:59,440
these things and then they tend to

00:39:54,700 --> 00:40:04,300
understand and and come up with more

00:39:59,440 --> 00:40:06,010
realistic deadlines okay so I've been

00:40:04,300 --> 00:40:08,770
talking about deadlines a lot in the

00:40:06,010 --> 00:40:10,990
talk so I'm going to focus a bit about a

00:40:08,770 --> 00:40:12,790
bit on estimates so how do you come up

00:40:10,990 --> 00:40:15,700
with proper deadlines from your

00:40:12,790 --> 00:40:17,590
perspective well first of all it's a

00:40:15,700 --> 00:40:20,320
it's a it's a very hard problem coming

00:40:17,590 --> 00:40:22,720
up with proper deadlines and probably

00:40:20,320 --> 00:40:25,600
proper estimates for everything you need

00:40:22,720 --> 00:40:29,020
lots of experience the best thing that

00:40:25,600 --> 00:40:32,020
you can do is you can just create safety

00:40:29,020 --> 00:40:34,180
margins in your estimates and basically

00:40:32,020 --> 00:40:38,530
the way that I'm going to have a slight

00:40:34,180 --> 00:40:40,120
later on about that you need to you need

00:40:38,530 --> 00:40:42,340
to be you need to take many different

00:40:40,120 --> 00:40:44,020
things into account and maybe not you

00:40:42,340 --> 00:40:47,950
don't know all the different things that

00:40:44,020 --> 00:40:51,520
you need to take account into account so

00:40:47,950 --> 00:40:53,470
I've put up the slide here which is

00:40:51,520 --> 00:40:56,140
basically a recipe for doing estimates

00:40:53,470 --> 00:40:58,050
so some things that you usually don't

00:40:56,140 --> 00:41:00,790
think about when when doing estimates

00:40:58,050 --> 00:41:04,000
you don't think about the the project

00:41:00,790 --> 00:41:05,830
overhead so you just think about how

00:41:04,000 --> 00:41:06,970
long does it take to implement I don't

00:41:05,830 --> 00:41:09,340
know a certain class or certain

00:41:06,970 --> 00:41:11,080
functional method or feature you don't

00:41:09,340 --> 00:41:12,940
think about demos that you have to do to

00:41:11,080 --> 00:41:15,660
your to your customer you don't think

00:41:12,940 --> 00:41:17,950
about markups that they want because

00:41:15,660 --> 00:41:19,420
very often day they want to start

00:41:17,950 --> 00:41:22,660
selling their product very early in the

00:41:19,420 --> 00:41:24,100
development phase and so they need some

00:41:22,660 --> 00:41:26,230
kind of mock-ups of course that takes

00:41:24,100 --> 00:41:28,930
away development time again then you

00:41:26,230 --> 00:41:31,060
have customer meetings and meetings tend

00:41:28,930 --> 00:41:33,130
to take away lots of time any time for

00:41:31,060 --> 00:41:35,260
refactoring for unexpected complicate

00:41:33,130 --> 00:41:38,260
complications say you use a third-party

00:41:35,260 --> 00:41:41,200
library and that suddenly a sec falls on

00:41:38,260 --> 00:41:43,090
you so you need to go into that library

00:41:41,200 --> 00:41:46,630
and try to find the various problems

00:41:43,090 --> 00:41:49,420
with that library then you have the

00:41:46,630 --> 00:41:51,400
human factor people get sick or they go

00:41:49,420 --> 00:41:54,800
to a conference or

00:41:51,400 --> 00:41:56,240
go on a holiday or I don't know there's

00:41:54,800 --> 00:41:57,740
so many different things that can happen

00:41:56,240 --> 00:42:00,650
you need to factor that into the

00:41:57,740 --> 00:42:02,300
estimates and then of course you get new

00:42:00,650 --> 00:42:05,900
feature requests from your customer

00:42:02,300 --> 00:42:08,180
during the development and those costs

00:42:05,900 --> 00:42:10,850
overhead as well so what we really do is

00:42:08,180 --> 00:42:13,040
we we we try to come up with the proper

00:42:10,850 --> 00:42:16,460
estimate and then we put in a safety

00:42:13,040 --> 00:42:19,220
margin and the safety margin can be

00:42:16,460 --> 00:42:21,830
anything between 2 and PI that's what

00:42:19,220 --> 00:42:23,810
usually works so pretty well if you want

00:42:21,830 --> 00:42:26,780
to be on the safe side use PI and

00:42:23,810 --> 00:42:30,940
otherwise just start with two but never

00:42:26,780 --> 00:42:35,780
ever tell them you're expected estimate

00:42:30,940 --> 00:42:38,200
right and that's all I wanted to say any

00:42:35,780 --> 00:42:38,200
questions

00:42:47,640 --> 00:42:54,700
are you using code reviews in those

00:42:51,010 --> 00:42:57,630
small teams yes but but we were not

00:42:54,700 --> 00:43:00,130
currently using any of the code review

00:42:57,630 --> 00:43:04,089
the web interfaces that you have for

00:43:00,130 --> 00:43:06,730
code review so basically we look at the

00:43:04,089 --> 00:43:08,140
at the check-ins and we we have a

00:43:06,730 --> 00:43:09,700
mailing list where all the check-ins are

00:43:08,140 --> 00:43:11,530
sent this is basically something that

00:43:09,700 --> 00:43:14,010
that we copied from the Python

00:43:11,530 --> 00:43:17,170
development we have to check-in list and

00:43:14,010 --> 00:43:20,740
just like in Python we do reviews on on

00:43:17,170 --> 00:43:22,720
the check-in list so it works a bit

00:43:20,740 --> 00:43:25,510
differently for example from what the

00:43:22,720 --> 00:43:28,589
OpenStack team does we don't have this

00:43:25,510 --> 00:43:31,300
Ridge it kind of and checking everything

00:43:28,589 --> 00:43:35,290
up front before actually merging the two

00:43:31,300 --> 00:43:37,839
change into the into trunk of course we

00:43:35,290 --> 00:43:39,369
always try to keep trunk working but if

00:43:37,839 --> 00:43:41,559
it if it doesn't work for some reason

00:43:39,369 --> 00:43:45,099
it's a small team it's not that it's not

00:43:41,559 --> 00:43:46,720
that bad a thing to have all right yeah

00:43:45,099 --> 00:43:49,799
I mean of course people start yelling at

00:43:46,720 --> 00:43:54,430
you well I can't continue with this work

00:43:49,799 --> 00:43:58,420
you have to manage that hi very very

00:43:54,430 --> 00:44:01,569
nice talk and I would like to have a tip

00:43:58,420 --> 00:44:04,420
and tricks on how to get the

00:44:01,569 --> 00:44:06,940
specification after setting up setting

00:44:04,420 --> 00:44:09,460
the price because usually customer says

00:44:06,940 --> 00:44:11,140
okay well some I want something we may

00:44:09,460 --> 00:44:13,720
discuss that later tell me the price

00:44:11,140 --> 00:44:16,630
okay prices them now add fish or feature

00:44:13,720 --> 00:44:19,900
Fisher Fisher so what is the right well

00:44:16,630 --> 00:44:23,349
any trick yeah well trick the way that

00:44:19,900 --> 00:44:24,670
we do is or sometimes do it is we first

00:44:23,349 --> 00:44:29,140
of all we try not to do a fixed price

00:44:24,670 --> 00:44:31,869
project because fixed price projects

00:44:29,140 --> 00:44:34,660
always obviously to that situation that

00:44:31,869 --> 00:44:36,180
you're talking about so you in the fixed

00:44:34,660 --> 00:44:38,710
price project you always have a

00:44:36,180 --> 00:44:40,720
specification and then of course people

00:44:38,710 --> 00:44:43,420
start changing things all around and and

00:44:40,720 --> 00:44:46,299
what you normally do is you have this

00:44:43,420 --> 00:44:48,359
concept of change requests and then

00:44:46,299 --> 00:44:53,210
change requests are always built by time

00:44:48,359 --> 00:44:56,390
so you can do it that way

00:44:53,210 --> 00:44:58,550
but i would i would try to avoid that

00:44:56,390 --> 00:45:01,070
because it always gets into discussions

00:44:58,550 --> 00:45:02,990
because the customer or well the

00:45:01,070 --> 00:45:05,390
customer usually thinks that everything

00:45:02,990 --> 00:45:08,150
is already defined by the specification

00:45:05,390 --> 00:45:11,090
including the new feature that day that

00:45:08,150 --> 00:45:13,550
they want to see and that can cause a

00:45:11,090 --> 00:45:15,560
conflict and so it's usually better to

00:45:13,550 --> 00:45:18,680
just give them an estimate of the of the

00:45:15,560 --> 00:45:20,510
project cost and then if you're good

00:45:18,680 --> 00:45:22,810
you're you're basically they have to pay

00:45:20,510 --> 00:45:26,600
less than your estimate the initial one

00:45:22,810 --> 00:45:30,740
and you're working just by the hour okay

00:45:26,600 --> 00:45:33,560
so you still have a budget but it's not

00:45:30,740 --> 00:45:36,590
fixed price actually this is my estimate

00:45:33,560 --> 00:45:38,990
and then we will go in steps and feel

00:45:36,590 --> 00:45:41,390
each step so that you know that how much

00:45:38,990 --> 00:45:42,980
it costs a bright and if you see in the

00:45:41,390 --> 00:45:44,900
in the development that the costs are

00:45:42,980 --> 00:45:46,580
going to go over the budget and of

00:45:44,900 --> 00:45:48,830
course you have to talk to your customer

00:45:46,580 --> 00:45:50,150
again and explain to them that all these

00:45:48,830 --> 00:46:00,140
new features that they wanted in their

00:45:50,150 --> 00:46:03,950
took longer to implement um customer

00:46:00,140 --> 00:46:10,010
communication it seems like I've had

00:46:03,950 --> 00:46:13,540
enough a lot of experiences were of the

00:46:10,010 --> 00:46:16,990
customer really had difficulty I

00:46:13,540 --> 00:46:20,710
wouldn't say communicating but maintain

00:46:16,990 --> 00:46:20,710
channel of communication

00:46:21,890 --> 00:46:30,200
I was I was wondering if there were any

00:46:24,520 --> 00:46:34,670
form of pools or tricks that you that

00:46:30,200 --> 00:46:38,570
kind of you know kind of helped or at

00:46:34,670 --> 00:46:41,330
least promoted a sense of communication

00:46:38,570 --> 00:46:44,150
between you and your customers well for

00:46:41,330 --> 00:46:47,290
a customer did the customer relationship

00:46:44,150 --> 00:46:50,270
it makes sense to have regular meetings

00:46:47,290 --> 00:46:52,250
right even though it costs a bit of time

00:46:50,270 --> 00:46:54,980
but but it makes sense to do that

00:46:52,250 --> 00:46:58,310
because because like you say and we've

00:46:54,980 --> 00:47:00,230
had that too in our projects you

00:46:58,310 --> 00:47:02,180
sometimes tend to lose the contact with

00:47:00,230 --> 00:47:03,920
the with the customer because they have

00:47:02,180 --> 00:47:07,010
so many other things to do and also

00:47:03,920 --> 00:47:10,100
focus on sales for example or have new

00:47:07,010 --> 00:47:12,860
ideas that they are following and trying

00:47:10,100 --> 00:47:14,990
to get implemented and and so it's a

00:47:12,860 --> 00:47:16,550
good thing to have a regular kind of

00:47:14,990 --> 00:47:26,210
meeting with them or a regular kind of

00:47:16,550 --> 00:47:29,180
contact with them oh who takes part in

00:47:26,210 --> 00:47:33,980
this development specification meetings

00:47:29,180 --> 00:47:36,920
only the project manager because usually

00:47:33,980 --> 00:47:39,200
we found that the project manager talks

00:47:36,920 --> 00:47:42,020
to the client okay comes back but

00:47:39,200 --> 00:47:45,560
developers have many more questions and

00:47:42,020 --> 00:47:49,970
then the project manager has to go back

00:47:45,560 --> 00:47:52,070
to the client and so on it's all right

00:47:49,970 --> 00:47:53,870
well the way that we do it is that I go

00:47:52,070 --> 00:47:56,600
to the customer and I talked to them and

00:47:53,870 --> 00:47:58,520
because I have enough experience to know

00:47:56,600 --> 00:48:00,860
what questions to ask I can ask them the

00:47:58,520 --> 00:48:05,300
proper questions and then you avoid this

00:48:00,860 --> 00:48:07,760
kind of feedback feedback loop that you

00:48:05,300 --> 00:48:10,010
otherwise need of course it's also

00:48:07,760 --> 00:48:12,170
possible to set up a project where you

00:48:10,010 --> 00:48:14,690
have the the application designer a

00:48:12,170 --> 00:48:16,790
separate team member and then in that

00:48:14,690 --> 00:48:18,380
case the TD application designer would

00:48:16,790 --> 00:48:21,580
have to be in the same meeting with the

00:48:18,380 --> 00:48:21,580
with the customer

00:48:28,280 --> 00:48:33,960
xfer talk my company we use a poker

00:48:31,710 --> 00:48:36,089
cards to estimate things so then no one

00:48:33,960 --> 00:48:38,670
knows what the other one is he's going

00:48:36,089 --> 00:48:41,640
pocket cards with numbers planning poker

00:48:38,670 --> 00:48:43,670
cards so I don't know if other people do

00:48:41,640 --> 00:48:46,589
that I think it's interesting because

00:48:43,670 --> 00:48:48,210
allows you to not know what the others

00:48:46,589 --> 00:48:50,849
are going to say for this estimate so

00:48:48,210 --> 00:48:53,609
you are more no one likes speak first

00:48:50,849 --> 00:48:56,550
and then I don't know other people use

00:48:53,609 --> 00:49:00,060
it or other possibilities to do that and

00:48:56,550 --> 00:49:01,710
things you mean in a meeting with the

00:49:00,060 --> 00:49:03,690
developers and then as you can develop

00:49:01,710 --> 00:49:05,430
Amidala everything shakes well without

00:49:03,690 --> 00:49:07,950
product director and then we have all

00:49:05,430 --> 00:49:10,410
the stories we have to do for us certain

00:49:07,950 --> 00:49:14,520
thing and then each of the story we have

00:49:10,410 --> 00:49:16,950
to say how many points this thing is

00:49:14,520 --> 00:49:19,829
which point is I don't know half a day

00:49:16,950 --> 00:49:22,109
for one person and those everyone gives

00:49:19,829 --> 00:49:24,119
a card so no one sees what the other are

00:49:22,109 --> 00:49:26,550
saying and then in the end we decide and

00:49:24,119 --> 00:49:29,310
we discuss after we we said each one

00:49:26,550 --> 00:49:31,589
said what should I need estimate well

00:49:29,310 --> 00:49:33,869
since we're mostly working remotely with

00:49:31,589 --> 00:49:36,359
the team's a citrus I mean each member

00:49:33,869 --> 00:49:37,619
just sends an email yeah so it's

00:49:36,359 --> 00:49:40,650
basically sort of like what you're

00:49:37,619 --> 00:49:45,030
saying for the other developers they

00:49:40,650 --> 00:49:46,800
don't see these estimates okay but then

00:49:45,030 --> 00:49:50,460
of course once we have the estimate time

00:49:46,800 --> 00:49:53,010
of course we tell everyone so that

00:49:50,460 --> 00:49:56,540
everyone knows these these deadlines or

00:49:53,010 --> 00:49:56,540
the milestones that we have

00:49:58,380 --> 00:50:04,510
what about a single team working on more

00:50:01,540 --> 00:50:07,560
than one project on the same time I mean

00:50:04,510 --> 00:50:11,020
it's better to move the next one after

00:50:07,560 --> 00:50:15,190
the current one and make the customer

00:50:11,020 --> 00:50:19,840
wait or add that's a good it's a good

00:50:15,190 --> 00:50:23,080
question we've done that we found that

00:50:19,840 --> 00:50:26,140
it's possible to do two projects with

00:50:23,080 --> 00:50:29,140
the same team simultaneously but more

00:50:26,140 --> 00:50:31,300
doesn't work simply because this the

00:50:29,140 --> 00:50:35,440
context switch that everyone has to do

00:50:31,300 --> 00:50:37,990
for the project's it can actually cause

00:50:35,440 --> 00:50:40,180
confusion because the people think of

00:50:37,990 --> 00:50:43,270
different specifications when when

00:50:40,180 --> 00:50:44,920
working one well on the on one project

00:50:43,270 --> 00:50:46,750
and then they switch through the other

00:50:44,920 --> 00:50:49,869
project and then have a different set of

00:50:46,750 --> 00:50:53,700
specifications there so it's probably

00:50:49,869 --> 00:50:53,700
better to do not do more than two

00:51:04,450 --> 00:51:09,070
I just as a comment to one of the

00:51:06,730 --> 00:51:11,859
earlier questions about how you do the

00:51:09,070 --> 00:51:14,800
plan in in our organization we're pretty

00:51:11,859 --> 00:51:18,460
big so our equivalent of the customer is

00:51:14,800 --> 00:51:21,010
the higher up is X ask questions we have

00:51:18,460 --> 00:51:23,130
a product owner that fights for our

00:51:21,010 --> 00:51:27,180
cause to say what can and cannot fit

00:51:23,130 --> 00:51:29,410
they didn't come down to debs in QA to

00:51:27,180 --> 00:51:31,890
see our point of view what can and

00:51:29,410 --> 00:51:34,240
cannot fit and it goes back up to the

00:51:31,890 --> 00:51:36,550
execs saying this is what the team

00:51:34,240 --> 00:51:38,730
believes they can do and what could fit

00:51:36,550 --> 00:51:38,730
in

00:51:43,430 --> 00:51:45,490

YouTube URL: https://www.youtube.com/watch?v=gaLt619FjuE


