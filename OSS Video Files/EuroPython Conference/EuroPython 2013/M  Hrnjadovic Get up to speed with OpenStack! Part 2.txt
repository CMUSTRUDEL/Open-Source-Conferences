Title: M  Hrnjadovic Get up to speed with OpenStack! Part 2
Publication date: 2015-04-18
Playlist: EuroPython 2013
Description: 
	[Europython 2013]
M  Hrnjadovic Get up to speed with OpenStack! Part 2
2 July 2013
TRACK pizza margherita
Captions: 
	00:00:07,160 --> 00:00:15,150
now we go back with our talk two quick

00:00:12,059 --> 00:00:18,380
things to remember to be remembered you

00:00:15,150 --> 00:00:21,330
can go to be so cordial towards if you

00:00:18,380 --> 00:00:24,330
download the mobile app from a guidebook

00:00:21,330 --> 00:00:26,910
you just need to go on our side your

00:00:24,330 --> 00:00:30,570
Python and ought to you click on web

00:00:26,910 --> 00:00:34,070
mobile guide and then you can go to be

00:00:30,570 --> 00:00:37,440
soldier with opportunity to vote to say

00:00:34,070 --> 00:00:39,510
register it and the other thing is this

00:00:37,440 --> 00:00:43,070
evening when all the talks and I'm

00:00:39,510 --> 00:00:46,350
starting 9pm there is a google code jam

00:00:43,070 --> 00:00:50,579
which is the imager to intermediate or

00:00:46,350 --> 00:00:53,699
advanced user and it will be fun just to

00:00:50,579 --> 00:00:56,100
see how good we are and to interact with

00:00:53,699 --> 00:00:59,190
other people you may know google code

00:00:56,100 --> 00:01:01,710
jam is an important competition among

00:00:59,190 --> 00:01:06,740
the programmers so doing a directory

00:01:01,710 --> 00:01:11,760
which should be quite cool ok thank you

00:01:06,740 --> 00:01:15,000
ok welcome back to things so I hope you

00:01:11,760 --> 00:01:17,130
enjoyed Jos international i think it was

00:01:15,000 --> 00:01:20,040
it was it was done very well i also

00:01:17,130 --> 00:01:22,020
think it showcased a bit what the cloud

00:01:20,040 --> 00:01:24,180
can do so this in events cloud that we

00:01:22,020 --> 00:01:26,250
use the machines that we used what sort

00:01:24,180 --> 00:01:28,740
of dimension for 15 participants and i

00:01:26,250 --> 00:01:30,540
believe we had like at least twice the

00:01:28,740 --> 00:01:35,400
number of people here and it held up

00:01:30,540 --> 00:01:38,220
reasonably well so yeah okay very good

00:01:35,400 --> 00:01:39,420
also a go you know obviously thank you

00:01:38,220 --> 00:01:42,960
to anyone's for fighting this machine

00:01:39,420 --> 00:01:48,450
and making possible to do the training

00:01:42,960 --> 00:01:51,659
ok so I so I talked to I talked to some

00:01:48,450 --> 00:01:54,240
colleagues in in the UK so rec space has

00:01:51,659 --> 00:01:57,390
a big the closest data center to us is

00:01:54,240 --> 00:02:00,930
is it is the one in UK and so they

00:01:57,390 --> 00:02:02,700
offered a provo code for your European

00:02:00,930 --> 00:02:04,890
participants so if you would like to

00:02:02,700 --> 00:02:07,740
continue playing with an openstack cloud

00:02:04,890 --> 00:02:11,129
you can go and register with rec space

00:02:07,740 --> 00:02:13,800
left College UK and use this promo code

00:02:11,129 --> 00:02:16,040
I believe this will give you like 50

00:02:13,800 --> 00:02:18,720
to british pound fifty fifty UK pound

00:02:16,040 --> 00:02:21,660
and which is a great way to sort of

00:02:18,720 --> 00:02:29,400
continue exploring and playing with

00:02:21,660 --> 00:02:31,680
nonstick lounge right ok so this I will

00:02:29,400 --> 00:02:34,590
the talk that follows is a brief

00:02:31,680 --> 00:02:36,750
intermezzo a brief excursion into a

00:02:34,590 --> 00:02:41,100
cloud architecture this is like a highly

00:02:36,750 --> 00:02:43,140
personal you so basically this is the

00:02:41,100 --> 00:02:48,960
idea is what do we need to pay attention

00:02:43,140 --> 00:02:51,560
to in order to survive in the cloud ok

00:02:48,960 --> 00:02:55,050
so this is the too long didn't read

00:02:51,560 --> 00:02:56,700
version ok in case somebody drags you

00:02:55,050 --> 00:02:59,070
out of this room ok these are the four

00:02:56,700 --> 00:03:01,260
sort of main topics I like it remember

00:02:59,070 --> 00:03:04,830
ok and I sort of try to arrange them so

00:03:01,260 --> 00:03:09,230
if you can remember them ok so obviously

00:03:04,830 --> 00:03:13,050
the first letter forms the web damn ok

00:03:09,230 --> 00:03:15,020
ok so the couple the couple of your

00:03:13,050 --> 00:03:17,160
system into independent components

00:03:15,020 --> 00:03:19,440
automate everything don't do manual

00:03:17,160 --> 00:03:22,290
stuff in the cloud it'll bite you ok

00:03:19,440 --> 00:03:24,810
measure and monitor everything all

00:03:22,290 --> 00:03:29,720
aspects of your system ok and don't ever

00:03:24,810 --> 00:03:29,720
do anything synchronously in a cloud

00:03:30,470 --> 00:03:36,660
right so what are some of the what are

00:03:34,680 --> 00:03:39,030
some of the things you people generally

00:03:36,660 --> 00:03:42,660
want to achieve when deploying systems

00:03:39,030 --> 00:03:44,280
in the cloud ok so one is I or generally

00:03:42,660 --> 00:03:47,570
interesting property of the system is

00:03:44,280 --> 00:03:50,459
agility okay so this is my continuous

00:03:47,570 --> 00:03:53,489
deployment was invented so you generally

00:03:50,459 --> 00:03:55,980
want to be in a position to deploy new

00:03:53,489 --> 00:03:59,190
features or black faces to system

00:03:55,980 --> 00:04:04,680
frequently you know if it need be even a

00:03:59,190 --> 00:04:06,720
multiple times a day ok scale why why do

00:04:04,680 --> 00:04:07,890
people deploy systems in the public

00:04:06,720 --> 00:04:09,900
cloud because they want to achieve scale

00:04:07,890 --> 00:04:11,610
so you know you don't want to worry

00:04:09,900 --> 00:04:13,380
about your data center being on fire

00:04:11,610 --> 00:04:16,830
whatever you deploy it in public cloud

00:04:13,380 --> 00:04:18,390
and if you've done it well your system

00:04:16,830 --> 00:04:21,500
will scale up and down shake shrink and

00:04:18,390 --> 00:04:23,789
grow as needed and last but not least

00:04:21,500 --> 00:04:26,700
another the desirable property is

00:04:23,789 --> 00:04:27,060
reliability ok so you want to system to

00:04:26,700 --> 00:04:29,460
rely

00:04:27,060 --> 00:04:32,160
okay not just in the chair not just in

00:04:29,460 --> 00:04:34,530
terms of a its up but also its

00:04:32,160 --> 00:04:36,570
performing reason involved so so I use

00:04:34,530 --> 00:04:38,160
this term here quality of service ok so

00:04:36,570 --> 00:04:39,690
you don't want to be you don't want

00:04:38,160 --> 00:04:41,250
people to be angry at you and complain

00:04:39,690 --> 00:04:42,990
on with you so your system should be up

00:04:41,250 --> 00:04:44,700
and running to be available and it

00:04:42,990 --> 00:04:46,350
showed it like the phone reason ago ok

00:04:44,700 --> 00:04:48,540
so these are some of the drivers when

00:04:46,350 --> 00:04:51,630
you think of a few of your system that

00:04:48,540 --> 00:04:53,790
you want to deploy in cloud and so I

00:04:51,630 --> 00:04:57,030
just wanted I one sort of to contrast

00:04:53,790 --> 00:05:00,020
this with these four principles I had on

00:04:57,030 --> 00:05:04,800
the first slide like how does decoupling

00:05:00,020 --> 00:05:08,280
automation measurement and monitoring

00:05:04,800 --> 00:05:11,840
and also a synchronicity contribute to

00:05:08,280 --> 00:05:15,419
vote towards achieving these objectives

00:05:11,840 --> 00:05:19,680
ok before I sort of drill down into this

00:05:15,419 --> 00:05:21,870
I just want to sort of point to the

00:05:19,680 --> 00:05:25,350
certain things a bit different than the

00:05:21,870 --> 00:05:27,450
cloud then maybe too much you used if

00:05:25,350 --> 00:05:30,360
you deploy software you own data center

00:05:27,450 --> 00:05:32,850
where you control everything ok so it

00:05:30,360 --> 00:05:35,010
takes it takes a bit of a mind shift if

00:05:32,850 --> 00:05:37,830
you want to be successful in deploying a

00:05:35,010 --> 00:05:39,600
an application system into the public

00:05:37,830 --> 00:05:42,330
cloud so the first thing to remember is

00:05:39,600 --> 00:05:45,600
staff breaks all the time ok so you spin

00:05:42,330 --> 00:05:47,250
up an instance original machine like two

00:05:45,600 --> 00:05:49,440
minutes later it's hung it doesn't even

00:05:47,250 --> 00:05:53,550
crash it just it just hangs there

00:05:49,440 --> 00:05:57,090
doesn't do anything ok and this is not

00:05:53,550 --> 00:05:59,370
UDC like you know you have you have like

00:05:57,090 --> 00:06:02,820
deliberately deployed new application

00:05:59,370 --> 00:06:04,830
into somebody else's DC and so you

00:06:02,820 --> 00:06:06,330
assume a minimum quality of service by

00:06:04,830 --> 00:06:08,100
the same time you know you can't just so

00:06:06,330 --> 00:06:12,270
step in and say oh you know I want this

00:06:08,100 --> 00:06:16,789
I want that so you're a bit at a mercy

00:06:12,270 --> 00:06:22,830
yes a datacenter sorry I apologize yeah

00:06:16,789 --> 00:06:25,410
ok and another consideration is so best

00:06:22,830 --> 00:06:27,630
it so usually like when people deploy

00:06:25,410 --> 00:06:29,669
stuff in their own on their own

00:06:27,630 --> 00:06:32,250
infrastructure ok they have their own

00:06:29,669 --> 00:06:36,090
servers and they tend to treat this

00:06:32,250 --> 00:06:37,979
earth like pets ok so pet a pet is you

00:06:36,090 --> 00:06:40,630
know is near and dear to our hearts and

00:06:37,979 --> 00:06:41,980
you know if they fall ill or

00:06:40,630 --> 00:06:43,330
you're hurt themselves we sort of nurse

00:06:41,980 --> 00:06:44,920
them back to good health whatever

00:06:43,330 --> 00:06:47,470
generally we take very good care of them

00:06:44,920 --> 00:06:50,320
and then meaningful to us we like them

00:06:47,470 --> 00:06:52,510
okay so in the cloud it's cattle it so

00:06:50,320 --> 00:06:54,490
so cloud much cloud instances I like

00:06:52,510 --> 00:06:56,320
cattle okay so if something goes wrong

00:06:54,490 --> 00:06:57,550
if a cloud machine you don't you don't

00:06:56,320 --> 00:06:59,470
nurse it back to good health you just

00:06:57,550 --> 00:07:03,280
kill it ruthlessly okay because you know

00:06:59,470 --> 00:07:05,770
can I've had it more nobody'll ok so

00:07:03,280 --> 00:07:08,080
don't don't grow it don't grow attached

00:07:05,770 --> 00:07:09,760
to cloud instances okay they just like

00:07:08,080 --> 00:07:11,080
kettle so you know spin up as many as

00:07:09,760 --> 00:07:12,490
you need you don't think they'll just

00:07:11,080 --> 00:07:15,730
kill them slow to them and I'm sorry

00:07:12,490 --> 00:07:17,710
okay so and also don't make them

00:07:15,730 --> 00:07:19,720
individual okay don't sort of bring up

00:07:17,710 --> 00:07:23,770
don't bring up a cloud instance and then

00:07:19,720 --> 00:07:26,470
do expensive manual things to it which

00:07:23,770 --> 00:07:28,330
again would make you grow attached to it

00:07:26,470 --> 00:07:30,880
okay so automate make it will

00:07:28,330 --> 00:07:32,800
automatically cookie cutter okay and if

00:07:30,880 --> 00:07:34,600
you bring it up as it breaks for some

00:07:32,800 --> 00:07:39,760
reason just kill it doesn't matter you

00:07:34,600 --> 00:07:41,800
know okay so with that out of the way

00:07:39,760 --> 00:07:44,020
now let's look at some of these aspects

00:07:41,800 --> 00:07:46,150
so continuous deployment so it sort of

00:07:44,020 --> 00:07:49,530
important for a number of reasons you

00:07:46,150 --> 00:07:53,170
want to be able to push out new features

00:07:49,530 --> 00:07:55,420
frequently and also bug fixes so how

00:07:53,170 --> 00:07:57,610
does the coupling help with that well

00:07:55,420 --> 00:07:59,140
think about the coupling the plugin the

00:07:57,610 --> 00:08:00,910
coupling means is you take your system

00:07:59,140 --> 00:08:04,960
and break it down in sort of

00:08:00,910 --> 00:08:06,970
self-contained components okay and these

00:08:04,960 --> 00:08:10,480
components by themselves they are easier

00:08:06,970 --> 00:08:12,880
to develop and also to employ then then

00:08:10,480 --> 00:08:14,890
your entire system okay so ideally if

00:08:12,880 --> 00:08:16,420
you need to push a feature okay you

00:08:14,890 --> 00:08:19,210
don't want to deploy really for your

00:08:16,420 --> 00:08:23,040
entire system but maybe just one or two

00:08:19,210 --> 00:08:26,830
components okay which reduces your risk

00:08:23,040 --> 00:08:29,470
automation okay humans break stuff okay

00:08:26,830 --> 00:08:31,900
including me including you okay so you

00:08:29,470 --> 00:08:33,849
don't want to log on to a box and then

00:08:31,900 --> 00:08:35,260
do things manually okay but what you

00:08:33,849 --> 00:08:37,500
want to do instead is you want to use

00:08:35,260 --> 00:08:39,849
something like Sheffield puppet okay and

00:08:37,500 --> 00:08:42,669
have helped configuration mention in

00:08:39,849 --> 00:08:44,500
place okay chest it have it reviewed by

00:08:42,669 --> 00:08:46,690
your fellow devops engineer so whatever

00:08:44,500 --> 00:08:48,550
okay so you have a reasonable level of

00:08:46,690 --> 00:08:52,540
confidence when you push the button and

00:08:48,550 --> 00:08:53,870
say deploy and then your instance comes

00:08:52,540 --> 00:08:56,660
up that you know

00:08:53,870 --> 00:09:00,140
I think we'll just work properly okay so

00:08:56,660 --> 00:09:02,330
automation if if done properly we'll

00:09:00,140 --> 00:09:04,430
give you a reliability in employment and

00:09:02,330 --> 00:09:05,540
will you give you confidence that you

00:09:04,430 --> 00:09:08,000
can actually push the deploy button

00:09:05,540 --> 00:09:10,960
before breaking everything okay

00:09:08,000 --> 00:09:14,839
measurement and monitoring okay

00:09:10,960 --> 00:09:16,940
important because if you if you don't

00:09:14,839 --> 00:09:18,529
measure and monetary system you actually

00:09:16,940 --> 00:09:21,670
don't know what is happening you're

00:09:18,529 --> 00:09:24,410
basically it's like flying blind so so

00:09:21,670 --> 00:09:26,900
what are the techniques in sort of very

00:09:24,410 --> 00:09:30,200
kind of systems and startup systems is a

00:09:26,900 --> 00:09:33,200
bead is a/b testing okay so if you if

00:09:30,200 --> 00:09:35,240
you sort of your building a system and

00:09:33,200 --> 00:09:37,880
you don't sort of quite right you don't

00:09:35,240 --> 00:09:39,800
sort of know what is what is the right

00:09:37,880 --> 00:09:41,720
when people will be like more but you

00:09:39,800 --> 00:09:43,550
what you can do is you can deploy like

00:09:41,720 --> 00:09:47,450
two variants of your system like one

00:09:43,550 --> 00:09:49,430
half is a variant a a half is very and

00:09:47,450 --> 00:09:51,589
be in your cloud okay then you measure

00:09:49,430 --> 00:09:56,000
and monitor you obviously need to define

00:09:51,589 --> 00:09:57,170
metrics you know what and then you

00:09:56,000 --> 00:10:01,730
figure out which variant is better

00:09:57,170 --> 00:10:03,860
aerobie and you just shut down the

00:10:01,730 --> 00:10:06,589
instances if be if a is better and then

00:10:03,860 --> 00:10:08,839
bring them all up with a so but listen

00:10:06,589 --> 00:10:11,660
generally makes you much more agile okay

00:10:08,839 --> 00:10:13,730
so you can react much faster you know

00:10:11,660 --> 00:10:17,990
you're much more nimble you can figure

00:10:13,730 --> 00:10:21,410
out what's going on so automation helps

00:10:17,990 --> 00:10:23,240
you have reliable deployments more

00:10:21,410 --> 00:10:24,770
frequent deployments makes you more

00:10:23,240 --> 00:10:27,170
nimble more agile you can push features

00:10:24,770 --> 00:10:29,029
bug fixes you can measure or you should

00:10:27,170 --> 00:10:31,160
always measure and moisture okay you can

00:10:29,029 --> 00:10:34,550
figure out what people like more again

00:10:31,160 --> 00:10:36,320
push an update your system no

00:10:34,550 --> 00:10:38,630
synchronous cause this is this is a

00:10:36,320 --> 00:10:41,180
fairly important principle to adhere to

00:10:38,630 --> 00:10:42,890
okay so think of think about this

00:10:41,180 --> 00:10:45,020
deployment scenarios so for some reason

00:10:42,890 --> 00:10:47,870
so let's say your system your system

00:10:45,020 --> 00:10:50,720
consists of three components okay and so

00:10:47,870 --> 00:10:52,580
a B depend on C a and B depend on

00:10:50,720 --> 00:10:55,640
component C and you need you need to

00:10:52,580 --> 00:10:56,990
deploy component C okay now if if the

00:10:55,640 --> 00:10:59,420
interactions between all these

00:10:56,990 --> 00:11:02,690
components are of asynchronous nature so

00:10:59,420 --> 00:11:05,089
you use message queues so a and b & Q

00:11:02,690 --> 00:11:06,630
request to see in a message queue well

00:11:05,089 --> 00:11:08,640
this allows you to shut

00:11:06,630 --> 00:11:10,110
down see for a short file and bring it

00:11:08,640 --> 00:11:12,990
back up before breaking the system

00:11:10,110 --> 00:11:15,330
because you buffer the work load it in

00:11:12,990 --> 00:11:16,770
your message queue okay so this is very

00:11:15,330 --> 00:11:23,880
important you don't want synchronous

00:11:16,770 --> 00:11:25,890
calls okay scaling up and down again the

00:11:23,880 --> 00:11:29,160
coupling is very important okay because

00:11:25,890 --> 00:11:32,550
each component may have sort of special

00:11:29,160 --> 00:11:34,350
properties when it comes to scaling okay

00:11:32,550 --> 00:11:36,510
so if you have a component which is more

00:11:34,350 --> 00:11:38,670
of a number crunching on Poland okay you

00:11:36,510 --> 00:11:43,740
may need to do different things to it to

00:11:38,670 --> 00:11:50,070
run smoothly and run well so automation

00:11:43,740 --> 00:11:52,500
is also important for for scaling you

00:11:50,070 --> 00:11:56,670
want to automate image building and

00:11:52,500 --> 00:11:58,950
configuration of VMs so I'd say you you

00:11:56,670 --> 00:12:03,540
know you need you need to deploy a new

00:11:58,950 --> 00:12:05,820
change so one way to do it is once once

00:12:03,540 --> 00:12:07,650
you change is through the continuous

00:12:05,820 --> 00:12:09,750
integration system and all the tests

00:12:07,650 --> 00:12:13,530
pass you may want to have like a phase

00:12:09,750 --> 00:12:16,830
but the new code then is baked into a

00:12:13,530 --> 00:12:19,800
new image so that image is uploaded to

00:12:16,830 --> 00:12:22,200
glance or whatever use and all the new

00:12:19,800 --> 00:12:24,480
virtual machines are spun up from that

00:12:22,200 --> 00:12:28,860
new image okay so what this allows you

00:12:24,480 --> 00:12:35,760
to do is is to do with lee deploy deploy

00:12:28,860 --> 00:12:38,820
new code gradually okay right measuring

00:12:35,760 --> 00:12:40,920
and monitoring is crucial for scaling up

00:12:38,820 --> 00:12:43,380
and down so what you want what you want

00:12:40,920 --> 00:12:45,660
to have is a reasonable reasonably

00:12:43,380 --> 00:12:47,340
realistic measure of load on your system

00:12:45,660 --> 00:12:49,200
whatever load constitute whatever

00:12:47,340 --> 00:12:53,040
constitutes load in your case okay so

00:12:49,200 --> 00:12:55,560
can be cpu load aggregate cpu load on a

00:12:53,040 --> 00:12:58,650
on your fleet it can be number of

00:12:55,560 --> 00:13:00,750
requests or leg time to serve a request

00:12:58,650 --> 00:13:02,790
so you want to measure and monitor okay

00:13:00,750 --> 00:13:05,490
and you also want to define some kind of

00:13:02,790 --> 00:13:07,890
threshold saying oh you know as soon as

00:13:05,490 --> 00:13:12,390
the average response time on this fleet

00:13:07,890 --> 00:13:14,910
is iron 1.5 seconds I want I want the

00:13:12,390 --> 00:13:17,100
fleet to be increased by 20 15 to 20

00:13:14,910 --> 00:13:19,620
percent okay so you measure monitor and

00:13:17,100 --> 00:13:21,080
you use thresholds and loads to trigger

00:13:19,620 --> 00:13:24,420
autoscale reactions

00:13:21,080 --> 00:13:27,920
again you don't want to you don't want

00:13:24,420 --> 00:13:32,160
to definitely synchronous calls okay so

00:13:27,920 --> 00:13:33,630
scaling for scaling purposes using

00:13:32,160 --> 00:13:36,450
something like use is important to think

00:13:33,630 --> 00:13:39,410
of a bunch of workers okay so I'd say

00:13:36,450 --> 00:13:42,209
you you like a you know kitten upload

00:13:39,410 --> 00:13:44,970
kitten photograph upload service okay

00:13:42,209 --> 00:13:47,610
and so what are some of the uploads like

00:13:44,970 --> 00:13:49,830
a kitten picture you need you need to

00:13:47,610 --> 00:13:54,180
process the picture to provide it in

00:13:49,830 --> 00:13:56,370
various like sizes okay so you may you

00:13:54,180 --> 00:13:58,080
may have like a one group of virtual

00:13:56,370 --> 00:14:00,360
machines which is just responsible for

00:13:58,080 --> 00:14:01,560
taking pictures and crunching them and

00:14:00,360 --> 00:14:05,399
converting them in different formats

00:14:01,560 --> 00:14:07,649
okay so using something like Ewing is

00:14:05,399 --> 00:14:11,550
important because if you if you if

00:14:07,649 --> 00:14:13,950
you're if that group is under load you

00:14:11,550 --> 00:14:16,649
can use the message queue for shorter

00:14:13,950 --> 00:14:18,540
period of time to buffer the work spin

00:14:16,649 --> 00:14:23,959
up more instances and let them eat away

00:14:18,540 --> 00:14:28,350
the requests that have queued up

00:14:23,959 --> 00:14:32,130
reliability so again the coupling is

00:14:28,350 --> 00:14:34,500
important because components of your

00:14:32,130 --> 00:14:36,690
system may have a different reliability

00:14:34,500 --> 00:14:38,160
needs and properties okay depending on

00:14:36,690 --> 00:14:40,140
your depending on what you're deploying

00:14:38,160 --> 00:14:42,330
you may need to go to some kind of

00:14:40,140 --> 00:14:44,490
primary secondary see in case of a

00:14:42,330 --> 00:14:46,160
database you may need to deploy some

00:14:44,490 --> 00:14:50,130
kind of primary secondary a

00:14:46,160 --> 00:14:52,140
configuration etc so breaking down your

00:14:50,130 --> 00:14:53,970
system into into into into a

00:14:52,140 --> 00:14:56,940
self-contained components is important

00:14:53,970 --> 00:14:58,770
for this as well automation very

00:14:56,940 --> 00:15:00,540
important for reliability remember

00:14:58,770 --> 00:15:02,190
remember it is ask for break stuff by

00:15:00,540 --> 00:15:05,940
doing manual interventions so you don't

00:15:02,190 --> 00:15:08,550
want that okay and again monitoring is

00:15:05,940 --> 00:15:09,930
is super important I mean how do you how

00:15:08,550 --> 00:15:11,610
do you figure out your system is broken

00:15:09,930 --> 00:15:13,709
if you don't want to i measure okay so

00:15:11,610 --> 00:15:17,360
you need to monitor and you need to help

00:15:13,709 --> 00:15:22,220
us citizen procedures in place that will

00:15:17,360 --> 00:15:24,630
for recovering from failures and

00:15:22,220 --> 00:15:27,480
regarding non-synchronous calls again

00:15:24,630 --> 00:15:29,430
short outages and if you have a good

00:15:27,480 --> 00:15:32,160
volunteering and failure recovery in

00:15:29,430 --> 00:15:33,900
place your outages will be short so if

00:15:32,160 --> 00:15:38,070
you're something like message queues

00:15:33,900 --> 00:15:40,350
they should buffer like shortages okay

00:15:38,070 --> 00:15:41,910
so some tools for the coupling you this

00:15:40,350 --> 00:15:43,230
there are no tools you obviously need to

00:15:41,910 --> 00:15:46,230
use your brain to figure out how you

00:15:43,230 --> 00:15:47,970
want to break down your system okay for

00:15:46,230 --> 00:15:50,190
automation I mean there's plenty of

00:15:47,970 --> 00:15:52,320
tools there so you could use chef

00:15:50,190 --> 00:15:53,940
puppets and salt stack which is all sort

00:15:52,320 --> 00:15:58,620
of in the configuration management

00:15:53,940 --> 00:16:01,200
category if you need for like a virtual

00:15:58,620 --> 00:16:03,000
image customization and specialization

00:16:01,200 --> 00:16:05,460
are sort of simple and modest you might

00:16:03,000 --> 00:16:07,590
want to use cloud in it which is like

00:16:05,460 --> 00:16:09,750
what Jill showed with this customer

00:16:07,590 --> 00:16:11,220
customization script so this is clogging

00:16:09,750 --> 00:16:13,290
and for linux images you can use cloud

00:16:11,220 --> 00:16:15,710
energy to do like fairly simple

00:16:13,290 --> 00:16:18,630
customizations okay when comes to

00:16:15,710 --> 00:16:21,570
monitoring and measurement so there's a

00:16:18,630 --> 00:16:23,580
couple of sort of newfangled monitoring

00:16:21,570 --> 00:16:26,010
systems like Zen zoo and dreamin and

00:16:23,580 --> 00:16:29,510
there's also like the classic graphite

00:16:26,010 --> 00:16:35,550
which allows you to visualize your

00:16:29,510 --> 00:16:39,420
monitoring data when it comes to not to

00:16:35,550 --> 00:16:41,760
asynchronous interactions there's 0 and

00:16:39,420 --> 00:16:44,030
Q and everything Q which both like

00:16:41,760 --> 00:16:49,830
different different kind of flavors of

00:16:44,030 --> 00:16:57,860
methanol systems yeah and the silly ol

00:16:49,830 --> 00:16:57,860
ahead so yeah yes

00:17:01,230 --> 00:17:06,130
so for the async programming style is it

00:17:03,700 --> 00:17:10,840
possible to use something like green

00:17:06,130 --> 00:17:13,720
'let's to abstract away the async calls

00:17:10,840 --> 00:17:16,720
you could so I mean that's a good

00:17:13,720 --> 00:17:18,520
fashion so you can either expose your

00:17:16,720 --> 00:17:20,740
client code directly to the async nature

00:17:18,520 --> 00:17:22,480
or you can wrap you can wrap it into

00:17:20,740 --> 00:17:24,340
something which is pseudo asynchronous

00:17:22,480 --> 00:17:26,500
here because I sing code hurts people's

00:17:24,340 --> 00:17:30,030
brains well you can use this I believe

00:17:26,500 --> 00:17:32,770
somebody mentioned tasks sorry salary of

00:17:30,030 --> 00:17:34,240
you salary yeah yes it's a salary is

00:17:32,770 --> 00:17:36,550
sort of nice because you know it looks

00:17:34,240 --> 00:17:40,060
like known Python code but another hood

00:17:36,550 --> 00:17:41,590
it will use messaging in pues ya so I

00:17:40,060 --> 00:17:49,420
could explain such a sorry we use it

00:17:41,590 --> 00:17:51,100
before so it's it's good yeah all right

00:17:49,420 --> 00:17:53,250
I mean I'm around you want to discuss

00:17:51,100 --> 00:18:03,340
some more then a feel free to talk to me

00:17:53,250 --> 00:18:06,180
thanks ok and I believe now it's on

00:18:03,340 --> 00:18:06,180
shoes too Swift

00:19:14,240 --> 00:19:19,310
this edition work right it's on

00:19:19,410 --> 00:19:24,170
I love OpenStack oh I wasn't like sorry

00:19:46,519 --> 00:19:52,309
we should get coffee break in about a

00:19:49,200 --> 00:19:52,309
thousand Okinawa

00:19:57,810 --> 00:20:03,310
we can go a little further by which we

00:20:00,940 --> 00:20:07,600
go to my party we lose a food the drinks

00:20:03,310 --> 00:20:12,090
and so on so if you see out past four

00:20:07,600 --> 00:20:12,090
and then and then we have another flower

00:20:19,530 --> 00:20:28,690
hello can you hear me ok so we're going

00:20:24,669 --> 00:20:30,520
to have a break in 15 minutes and I know

00:20:28,690 --> 00:20:31,900
we had a bug before but this one are

00:20:30,520 --> 00:20:33,820
going to have like a goodies and of

00:20:31,900 --> 00:20:35,440
cakes and stuff like that you probably

00:20:33,820 --> 00:20:37,270
don't want to miss it are you being

00:20:35,440 --> 00:20:39,850
really you'll be really angry at her so

00:20:37,270 --> 00:20:44,100
instead of me listening to my blah blah

00:20:39,850 --> 00:20:46,210
blah and so so I just saw until then I

00:20:44,100 --> 00:20:48,360
encourage you like the cloudy still

00:20:46,210 --> 00:20:51,820
running you know those fit in clouds and

00:20:48,360 --> 00:20:53,679
I like lucky during this time so if you

00:20:51,820 --> 00:20:57,659
want like to still using like the same

00:20:53,679 --> 00:21:01,960
info that Drago was using and kick up a

00:20:57,659 --> 00:21:04,929
cloud a server and installing def stack

00:21:01,960 --> 00:21:07,210
so the stack is the is the thing of

00:21:04,929 --> 00:21:18,940
before it's if you go on that webpage

00:21:07,210 --> 00:21:23,760
def tag that hog sorry I'm not really

00:21:18,940 --> 00:21:28,630
good with Mac user night so I should eat

00:21:23,760 --> 00:21:31,690
yeah I'm crapping I just no storage so I

00:21:28,630 --> 00:21:36,990
know so what do you do mirror yeah here

00:21:31,690 --> 00:21:41,970
we go mirror perfect is it me only apply

00:21:36,990 --> 00:21:41,970
[ __ ] hey

00:21:43,830 --> 00:21:48,480
yeah I know it says like apply it

00:21:45,960 --> 00:21:51,899
doesn't want to apply the thing told him

00:21:48,480 --> 00:21:53,909
I socket sidemen so but anyway in the

00:21:51,899 --> 00:21:57,630
meantime sorry for my language sorry for

00:21:53,909 --> 00:21:59,580
my phone the meantime if you want to go

00:21:57,630 --> 00:22:03,000
on the slides of yoga like it was a

00:21:59,580 --> 00:22:15,720
mentioning an hour and 15 of you kicking

00:22:03,000 --> 00:22:24,659
our a DM and going to death stuff MA not

00:22:15,720 --> 00:22:30,809
sure exactly ask maybe oh yeah somebody

00:22:24,659 --> 00:22:34,850
tweeted as well you can come on dude we

00:22:30,809 --> 00:22:34,850
all display I'm asking

00:22:42,940 --> 00:22:49,550
don't run

00:22:45,030 --> 00:22:49,550
no I was getting too

00:23:01,470 --> 00:23:08,680
so so yes it's oh so you really want to

00:23:06,040 --> 00:23:10,690
do that in a vm i don't know i think the

00:23:08,680 --> 00:23:12,430
network is good with all that stuff so

00:23:10,690 --> 00:23:15,880
you can do that on your own vm as well

00:23:12,430 --> 00:23:17,050
it's not a poem at all and it the only

00:23:15,880 --> 00:23:20,530
thing is like is going to use quite a

00:23:17,050 --> 00:23:22,360
bit of networking but can cross finger

00:23:20,530 --> 00:23:24,610
oh you can use if it's like too much we

00:23:22,360 --> 00:23:26,770
can use those vm on the inner pad so

00:23:24,610 --> 00:23:29,770
literally you need to do like that kind

00:23:26,770 --> 00:23:32,700
of stuff install instil 12 if you need

00:23:29,770 --> 00:23:36,760
to or kick kick out 12 cloud and

00:23:32,700 --> 00:23:39,280
download devstack and CD it run that

00:23:36,760 --> 00:23:45,580
common now we can go for the break and I

00:23:39,280 --> 00:23:48,210
you would install by itself hopefully

00:23:45,580 --> 00:23:48,210
that would work

00:23:50,630 --> 00:24:01,590
isn't knowing that it doesn't work the

00:23:53,340 --> 00:24:04,190
deal meowing ah hey there you go it's

00:24:01,590 --> 00:24:04,190
just tweet me

00:24:11,150 --> 00:24:25,200
I just don't do anything should use a

00:24:16,050 --> 00:24:29,280
reddit you know I can but I'll need to

00:24:25,200 --> 00:24:33,000
do like that huh hello heavy one getting

00:24:29,280 --> 00:24:37,680
to get like toxically idea now sonic

00:24:33,000 --> 00:24:40,380
sorry I just understand why he doesn't

00:24:37,680 --> 00:24:42,890
work it was working before but yeah

00:24:40,380 --> 00:24:42,890
anyway

00:24:47,640 --> 00:24:52,600
yeah anyway like the doing stuff at this

00:24:50,410 --> 00:24:54,820
time they are busy doing stuff it's not

00:24:52,600 --> 00:24:59,490
like I'm moving up there's a question

00:24:54,820 --> 00:24:59,490
right there if you can yell shot at me

00:25:06,270 --> 00:25:12,910
yeah alright so so is enough on lxc or

00:25:10,150 --> 00:25:16,300
what kind of doing it say again second

00:25:12,910 --> 00:25:19,480
is it enough on Alexei for a vm you can

00:25:16,300 --> 00:25:21,850
use Alexia for devstack you can spin up

00:25:19,480 --> 00:25:24,760
dead stock on Alexei so I mean it's a

00:25:21,850 --> 00:25:33,010
bit better for performances thanks this

00:25:24,760 --> 00:25:40,450
is a fan of Lexi um don't care I'm just

00:25:33,010 --> 00:25:42,790
a storage dude we'll just edit I don't

00:25:40,450 --> 00:25:44,560
way it's a we just spin up the death

00:25:42,790 --> 00:25:59,830
stack going for the break and I shall I

00:25:44,560 --> 00:26:02,710
do my presentation you just say somebody

00:25:59,830 --> 00:26:07,780
can make a margarita here we need pizza

00:26:02,710 --> 00:26:10,890
right now okay sorry I was just trying

00:26:07,780 --> 00:26:10,890
to be cheeky so

00:26:41,520 --> 00:26:44,420
it's the word

00:26:49,979 --> 00:26:54,330
it was working this morning to swim in

00:26:56,010 --> 00:26:59,280
try restarting

00:27:00,159 --> 00:27:12,289
I'm not used to we're starting but all I

00:27:02,899 --> 00:27:16,669
can try yeah nothing else we started for

00:27:12,289 --> 00:27:18,850
Lester Montes impatient yeah this could

00:27:16,669 --> 00:27:18,850
be

00:27:28,620 --> 00:27:39,179
emacs do I want to do that yes yes yeah

00:27:34,419 --> 00:27:39,179
you do I want to do that yes yes

00:28:20,180 --> 00:28:30,240
thank you yeah LT is better than well I

00:28:26,430 --> 00:28:34,070
don't know I'm vegetarian so I mean

00:28:30,240 --> 00:28:34,070
don't eat much meat for stuff

00:28:37,770 --> 00:28:50,340
I think he would do it no it doesn't

00:28:42,020 --> 00:29:00,600
know it doesn't it doesn't do like a

00:28:50,340 --> 00:29:03,840
mirroring I do me okay Raymond pooja la

00:29:00,600 --> 00:29:06,840
otra cosa vanilla seven infants okay LOL

00:29:03,840 --> 00:29:09,060
just a mirror in derabassi so to display

00:29:06,840 --> 00:29:14,130
you know yeah it should be under this

00:29:09,060 --> 00:29:16,770
place oh yeah yeah that's what i did i

00:29:14,130 --> 00:29:18,900
watch arrangement middle this place i

00:29:16,770 --> 00:29:22,440
figger he wasn't working before i just

00:29:18,900 --> 00:29:29,100
want to point this out I just reboot her

00:29:22,440 --> 00:29:31,020
okay she's welcome to windows i used to

00:29:29,100 --> 00:29:33,420
use linux i would say like for the last

00:29:31,020 --> 00:29:35,550
10 years in using linux and I just

00:29:33,420 --> 00:29:40,860
switch her to Mac because it I think I

00:29:35,550 --> 00:29:43,530
try to be cool I saw yeah i saw the

00:29:40,860 --> 00:29:45,300
movie of steve jobs and i was so blog

00:29:43,530 --> 00:29:55,510
about these guys i have an iphone now

00:29:45,300 --> 00:29:58,210
what did I become yeah cheer

00:29:55,510 --> 00:29:59,230
yeah storage guy we are the we are so

00:29:58,210 --> 00:30:00,730
there is like three type is

00:29:59,230 --> 00:30:03,040
virtualization storage and networking

00:30:00,730 --> 00:30:06,040
and we don't really talk to each other I

00:30:03,040 --> 00:30:08,410
mean just use my stuff I'll give you an

00:30:06,040 --> 00:30:13,120
API and we just talk to each other like

00:30:08,410 --> 00:30:19,870
that use use an API to talk to me that's

00:30:13,120 --> 00:30:22,860
it sorry guys a service alright so

00:30:19,870 --> 00:30:22,860
naughty

00:30:28,960 --> 00:30:34,350
so yeah watch the to the force as well

00:30:31,299 --> 00:30:34,350
so if I'm going to have

00:30:38,450 --> 00:30:45,680
that you guys are have success with the

00:30:41,000 --> 00:30:50,510
installer yeah yeah you get easy

00:30:45,680 --> 00:30:54,410
deadstock starting off our perfect crew

00:30:50,510 --> 00:30:56,090
cool yeah but the network should be

00:30:54,410 --> 00:30:58,250
pretty fast inside if you did like on an

00:30:56,090 --> 00:30:59,920
event club for minervans the network

00:30:58,250 --> 00:31:03,190
should be like super fast I mean I think

00:30:59,920 --> 00:31:03,190
I'll free

00:31:06,800 --> 00:31:14,510
so you're going to install like a total

00:31:10,610 --> 00:31:17,390
def stack is good too I know it's like

00:31:14,510 --> 00:31:19,150
the like devstack is good life to try a

00:31:17,390 --> 00:31:21,830
cloud like to try to see how it works

00:31:19,150 --> 00:31:25,100
it's not it's not a reference

00:31:21,830 --> 00:31:27,740
implementation so basically it's just

00:31:25,100 --> 00:31:29,900
what we use for the CI for example and

00:31:27,740 --> 00:31:32,840
it's good for looking like all stuff are

00:31:29,900 --> 00:31:34,160
supposed to wear so for example like

00:31:32,840 --> 00:31:36,140
when you going to have to finish to

00:31:34,160 --> 00:31:38,180
install you can see like all the

00:31:36,140 --> 00:31:42,890
configuration I've been auto-generated

00:31:38,180 --> 00:31:44,060
so for Keystone you you you can look at

00:31:42,890 --> 00:31:46,220
like the way it's been configured

00:31:44,060 --> 00:31:51,650
another way it's interacting with Swift

00:31:46,220 --> 00:31:54,140
and stuff like that so only thing is

00:31:51,650 --> 00:31:57,020
that by default Swift is not is not

00:31:54,140 --> 00:31:59,000
installing by default it's like most

00:31:57,020 --> 00:32:02,170
Nova stuff because Swift is quite heavy

00:31:59,000 --> 00:32:05,210
but we can configure it to make it

00:32:02,170 --> 00:32:07,340
working only for certain services so

00:32:05,210 --> 00:32:10,820
there is some technique for that that's

00:32:07,340 --> 00:32:12,890
the way it configure your Swift so

00:32:10,820 --> 00:32:14,870
usually usually like when you want like

00:32:12,890 --> 00:32:16,700
to know all things works like for

00:32:14,870 --> 00:32:19,220
example if you want to try a new service

00:32:16,700 --> 00:32:21,230
and OpenStack you just look like the way

00:32:19,220 --> 00:32:25,720
to configure it for that service for

00:32:21,230 --> 00:32:33,680
pentax so folks about Scylla meter and

00:32:25,720 --> 00:32:37,160
and yeah a little yeah and and so it's

00:32:33,680 --> 00:32:39,470
been a long day and I you you yes oh you

00:32:37,160 --> 00:32:41,630
look over coffee going for ought to

00:32:39,470 --> 00:32:43,100
configure that and after you launch dead

00:32:41,630 --> 00:32:45,020
stacked deck stack is going to configure

00:32:43,100 --> 00:32:46,910
everything like the way it's going to

00:32:45,020 --> 00:32:48,920
work and you look at the configuration

00:32:46,910 --> 00:32:50,690
file crap everywhere and after it's

00:32:48,920 --> 00:32:52,970
pretty easy to read it's mostly it's a

00:32:50,690 --> 00:32:54,890
shell script you're def stack so it's a

00:32:52,970 --> 00:32:58,780
it's full basically designed for seaside

00:32:54,890 --> 00:33:02,000
mean it's a very long source clip down

00:32:58,780 --> 00:33:05,330
and you guys support for deep Ruben too

00:33:02,000 --> 00:33:11,600
by default and reddit by default fedora

00:33:05,330 --> 00:33:15,050
and I think debian it I think I think

00:33:11,600 --> 00:33:17,390
they just put given back yeah they put

00:33:15,050 --> 00:33:20,060
given you think it's one of our guy as

00:33:17,390 --> 00:33:20,390
well we are small company so I always

00:33:20,060 --> 00:33:27,080
made

00:33:20,390 --> 00:33:30,310
my name's I saw like Rackspace I used to

00:33:27,080 --> 00:33:30,310
work for rackspace five years

00:33:49,870 --> 00:33:57,130
so when if you look if you look into

00:33:54,040 --> 00:33:59,350
your death tax there is a file that I

00:33:57,130 --> 00:34:02,710
don't think it's there by default but if

00:33:59,350 --> 00:34:04,660
you create a foul after you run your def

00:34:02,710 --> 00:34:07,270
stack and I know if you do you guys run

00:34:04,660 --> 00:34:08,980
devstack howdy so if you want devstack

00:34:07,270 --> 00:34:10,960
if you open a new window new terminal

00:34:08,980 --> 00:34:13,030
why it's installing you're going to

00:34:10,960 --> 00:34:15,730
share our fault that's been created

00:34:13,030 --> 00:34:18,100
automatically that's called local RC and

00:34:15,730 --> 00:34:22,270
that's where like you supposed to put

00:34:18,100 --> 00:34:24,550
like all your local config and and you

00:34:22,270 --> 00:34:28,000
can customize whatever you want to

00:34:24,550 --> 00:34:31,780
install so what we call services so in

00:34:28,000 --> 00:34:33,850
this case I personally do like only the

00:34:31,780 --> 00:34:36,100
Keystone my sequel and Swift so it's

00:34:33,850 --> 00:34:38,080
going to install pretty small because in

00:34:36,100 --> 00:34:42,159
that case we for now we're not going to

00:34:38,080 --> 00:34:43,990
be able to need to install a nova but

00:34:42,159 --> 00:34:45,490
you can you can customize your Clark

00:34:43,990 --> 00:34:48,129
like that and you can put different

00:34:45,490 --> 00:34:50,110
features so if you want like postgres DB

00:34:48,129 --> 00:34:53,830
instead of my sequel you can specify

00:34:50,110 --> 00:34:55,270
stuff let's be haunted so if it's

00:34:53,830 --> 00:34:58,590
finished when you finish we're going to

00:34:55,270 --> 00:35:02,830
read it after but that will be after the

00:34:58,590 --> 00:35:05,490
after the after the break check the box

00:35:02,830 --> 00:35:05,490
is in three minutes

00:35:15,510 --> 00:35:21,560
I trying to see with winning the time

00:35:19,050 --> 00:35:21,560
trial today

00:35:26,290 --> 00:35:31,090
so did you guys try OpenStack before was

00:35:28,840 --> 00:35:34,170
it your first time on OpenStack you're

00:35:31,090 --> 00:35:40,480
trying know you've been next pair here

00:35:34,170 --> 00:35:42,640
you already tried or is it faster also

00:35:40,480 --> 00:35:45,250
you know all of that just you justyou

00:35:42,640 --> 00:35:50,200
have two cheerleaders as a chip for

00:35:45,250 --> 00:35:52,480
cheering us that's good yeah at okay so

00:35:50,200 --> 00:35:55,090
so you're using not like everybody's

00:35:52,480 --> 00:35:56,920
here is a newbie everyone else mostly

00:35:55,090 --> 00:35:59,560
you looked at it on the internet and now

00:35:56,920 --> 00:36:01,390
it's like you trying so really like the

00:35:59,560 --> 00:36:02,860
i would say personally like the entry

00:36:01,390 --> 00:36:04,960
points like to learn will be the Deaf

00:36:02,860 --> 00:36:06,280
stack so it's good to have after i would

00:36:04,960 --> 00:36:08,200
show you I'll show you as well like

00:36:06,280 --> 00:36:11,380
ought to use the API is another Swift

00:36:08,200 --> 00:36:14,050
Anna but to be honest like 50 is much

00:36:11,380 --> 00:36:16,390
more simple it's very simple because uh

00:36:14,050 --> 00:36:20,500
because what you do is like you take a

00:36:16,390 --> 00:36:23,440
foul get delete options you put me at a

00:36:20,500 --> 00:36:25,570
data maybe oh you do some fancy stuff

00:36:23,440 --> 00:36:27,310
like temporary you all but you don't

00:36:25,570 --> 00:36:35,950
have to do much more you know if I make

00:36:27,310 --> 00:36:39,610
a point of view of Swift yes os3 yeah

00:36:35,950 --> 00:36:43,120
it's exactly the same so what about

00:36:39,610 --> 00:36:47,200
react then the hcs similar to react so

00:36:43,120 --> 00:36:49,150
it all objects toys system so why do you

00:36:47,200 --> 00:36:51,310
create I mean there's react for instance

00:36:49,150 --> 00:36:54,820
open source thing switch was good before

00:36:51,310 --> 00:36:56,260
react really ya like like 2008 over the

00:36:54,820 --> 00:36:59,350
seven-week he would look on the six

00:36:56,260 --> 00:37:01,750
months ago yeah no it's pretty pretty

00:36:59,350 --> 00:37:03,160
long project altogether well anyway like

00:37:01,750 --> 00:37:04,870
I don't know if she would been there

00:37:03,160 --> 00:37:07,870
this morning it was sweet presentation I

00:37:04,870 --> 00:37:10,750
did not oh yeah we can talk more I don't

00:37:07,870 --> 00:37:12,990
know no but uh it's just uh it's been

00:37:10,750 --> 00:37:15,790
like so it's coming out from myspace

00:37:12,990 --> 00:37:18,850
Swift so it was like a flat file is v1

00:37:15,790 --> 00:37:20,440
and and there was like a view one

00:37:18,850 --> 00:37:24,340
version after we reprogram me like to

00:37:20,440 --> 00:37:27,820
make it more modular env2 and the story

00:37:24,340 --> 00:37:31,030
that NASA came over to rockfish and

00:37:27,820 --> 00:37:33,370
respect NASA soda needed like a computer

00:37:31,030 --> 00:37:35,680
platform and as I needed storage

00:37:33,370 --> 00:37:38,030
platform and they wanted like everything

00:37:35,680 --> 00:37:40,610
python is we are quite nicely so

00:37:38,030 --> 00:37:42,650
I along yeah that's what her is it like

00:37:40,610 --> 00:37:45,800
it's not it's not like a year or two or

00:37:42,650 --> 00:37:51,110
something we are I thought our dinner

00:37:45,800 --> 00:37:53,840
soy yeah so anyway like probably maybe

00:37:51,110 --> 00:37:58,250
if Nancy didn't go to react maybe it

00:37:53,840 --> 00:38:00,770
because it wasn't packed enough but you

00:37:58,250 --> 00:38:02,150
know like I think only one technology

00:38:00,770 --> 00:38:04,970
and saying everything is not really good

00:38:02,150 --> 00:38:07,220
for the same so it is like sweep these

00:38:04,970 --> 00:38:10,160
three out days there's other stuff as

00:38:07,220 --> 00:38:11,840
well the continent by the name but

00:38:10,160 --> 00:38:18,950
they're all good and I'll bring like new

00:38:11,840 --> 00:38:22,220
stuff I z I'll maybe I confuse another

00:38:18,950 --> 00:38:25,580
one react is distributed key value store

00:38:22,220 --> 00:38:29,510
it's not really good at large volumes of

00:38:25,580 --> 00:38:31,700
data nothing beyond cask storage but it

00:38:29,510 --> 00:38:38,450
is not what it's good at its good at

00:38:31,700 --> 00:38:40,910
replicating having like good come no

00:38:38,450 --> 00:38:43,390
like so you don't lose data its proper

00:38:40,910 --> 00:38:47,420
application it doesn't do data it has

00:38:43,390 --> 00:38:50,720
rights that don't they're all you can do

00:38:47,420 --> 00:38:52,250
rights on all peers react is very good

00:38:50,720 --> 00:38:54,980
at what it does but it's not a large

00:38:52,250 --> 00:38:58,700
blob store it's the kind of storage I

00:38:54,980 --> 00:39:00,890
didn't let you do that but yeah I think

00:38:58,700 --> 00:39:02,180
I think they add like s why i like i was

00:39:00,890 --> 00:39:06,850
saying like six months ago but i think

00:39:02,180 --> 00:39:06,850
they get open source only in March much

00:39:08,590 --> 00:39:12,620
yes unless there's something which is

00:39:10,910 --> 00:39:16,100
part of react cluster management

00:39:12,620 --> 00:39:17,840
something which is okay used to be

00:39:16,100 --> 00:39:20,180
commercial product but then they realize

00:39:17,840 --> 00:39:22,460
that you know I'm not trying to bash

00:39:20,180 --> 00:39:24,710
anything at ikea or whatever but I just

00:39:22,460 --> 00:39:26,270
saying that uh that's the way I thought

00:39:24,710 --> 00:39:28,160
like with only six months ago because I

00:39:26,270 --> 00:39:31,610
saw Diana no I was just asking what I

00:39:28,160 --> 00:39:33,380
mean yeah if a swift came first well I

00:39:31,610 --> 00:39:34,700
don't know if I don't know it's well I

00:39:33,380 --> 00:39:38,840
wouldn't don't take my word on it I

00:39:34,700 --> 00:39:41,360
don't know but I I know that uh well it

00:39:38,840 --> 00:39:43,360
was a it was there on a at that time and

00:39:41,360 --> 00:39:45,590
we just we designer one they winnin

00:39:43,360 --> 00:39:50,280
anyway like the Python thing was like a

00:39:45,590 --> 00:39:52,650
wood that killer but the feel free

00:39:50,280 --> 00:39:55,020
so the break is upon us ok so the break

00:39:52,650 --> 00:39:56,550
is 45 minutes do you want to take all 45

00:39:55,020 --> 00:40:02,970
mins or show you recall me what the

00:39:56,550 --> 00:40:06,690
house to finish ok so please be back

00:40:02,970 --> 00:40:09,000
here than at five in the brake is on now

00:40:06,690 --> 00:40:10,350
so Becca Becca five at five o'clock and

00:40:09,000 --> 00:40:13,680
you continue with the start it would be

00:40:10,350 --> 00:40:26,070
awesome and I did work on prancing

00:40:13,680 --> 00:40:28,940
awesome awesome thank you these painted

00:40:26,070 --> 00:40:28,940

YouTube URL: https://www.youtube.com/watch?v=a2CnNKeRRXo


