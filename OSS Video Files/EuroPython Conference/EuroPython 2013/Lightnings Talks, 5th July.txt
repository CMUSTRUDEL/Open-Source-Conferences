Title: Lightnings Talks, 5th July
Publication date: 2015-04-18
Playlist: EuroPython 2013
Description: 
	[EuroPython 2013]
Ligthnings Talks
- 05 July 2013 "Track Lasagne"
Captions: 
	00:00:00,000 --> 00:00:03,990
strangle me with the cable did I

00:00:01,589 --> 00:00:06,180
understand it correctly okay that's an

00:00:03,990 --> 00:00:09,120
additional fun I was not booked for yeah

00:00:06,180 --> 00:00:17,820
good what is the object oriented way to

00:00:09,120 --> 00:00:23,250
get rich inherit yeah who won bonus

00:00:17,820 --> 00:00:26,970
point a horse goes into a bar the

00:00:23,250 --> 00:00:29,429
bartender asks why the long face the

00:00:26,970 --> 00:00:31,679
horse answers because I'm an imaginary

00:00:29,429 --> 00:00:34,110
creature which exist just for this

00:00:31,679 --> 00:00:38,730
narrative and will be gone when it's

00:00:34,110 --> 00:00:43,440
over not that good two strings go into a

00:00:38,730 --> 00:00:46,920
bar one of them says hello I would like

00:00:43,440 --> 00:00:49,829
to have a viewable it's princess oh

00:00:46,920 --> 00:00:52,050
sorry he's not know dominated the

00:00:49,829 --> 00:00:55,680
bartender says hello route you've got

00:00:52,050 --> 00:00:59,329
mail our next speaker lynn route haha

00:00:55,680 --> 00:00:59,329
ficon 2014

00:01:02,960 --> 00:01:07,950
can you hear me all right um so I think

00:01:06,510 --> 00:01:10,590
it'll just be like under a minute I'm

00:01:07,950 --> 00:01:12,390
just announcing app icon 2014 and

00:01:10,590 --> 00:01:14,430
perhaps you're just too busy at the

00:01:12,390 --> 00:01:16,380
river bar oh maybe I'm drinking a little

00:01:14,430 --> 00:01:19,110
bit too much but on Tuesday we announced

00:01:16,380 --> 00:01:22,290
our CFP and this is not pikkon Canada

00:01:19,110 --> 00:01:25,320
just FYI uh-huh so the CFP is open now

00:01:22,290 --> 00:01:28,800
um but the registration opens on a

00:01:25,320 --> 00:01:31,710
September first as well as financial aid

00:01:28,800 --> 00:01:34,610
applications and then the talks and

00:01:31,710 --> 00:01:37,710
tutorial proposals are due September 15

00:01:34,610 --> 00:01:41,490
the poster proposals are due november

00:01:37,710 --> 00:01:44,280
first and a December first the financial

00:01:41,490 --> 00:01:47,460
aid awards are announced and then the

00:01:44,280 --> 00:01:50,190
schedule announced on December 15th so

00:01:47,460 --> 00:01:52,140
real quickly lightning talks will be

00:01:50,190 --> 00:01:54,570
eight proposals will also be accepted

00:01:52,140 --> 00:01:56,610
but we're also be doing on the same day

00:01:54,570 --> 00:01:58,460
same conference a sign up so we're going

00:01:56,610 --> 00:02:01,440
we're going to try out half and half and

00:01:58,460 --> 00:02:05,570
I am actually going to be chairing the

00:02:01,440 --> 00:02:05,570
lightning talks to see Eric icon yeah

00:02:06,020 --> 00:02:12,600
and um also pie ladies will be doing

00:02:09,989 --> 00:02:14,280
like a brainstorming for workshops via

00:02:12,600 --> 00:02:16,590
google hangouts all are welcome to join

00:02:14,280 --> 00:02:18,570
but it's going to be kind of later on

00:02:16,590 --> 00:02:21,300
but stay tuned for more information

00:02:18,570 --> 00:02:23,459
about pie ladies workshops and then if

00:02:21,300 --> 00:02:27,739
you want more information as the the

00:02:23,459 --> 00:02:27,739
u.s. stands for us not the United States

00:02:32,580 --> 00:02:43,050
actually got or got the type oats that

00:02:34,770 --> 00:02:45,630
work ok I'm done thank you thank you now

00:02:43,050 --> 00:02:50,000
there is a very very strong rule for

00:02:45,630 --> 00:02:50,000
lightning talks which is it

00:02:55,390 --> 00:03:00,320
lets rule you don't talk about the other

00:02:58,250 --> 00:03:03,830
rule is the lightning talk is about five

00:03:00,320 --> 00:03:06,830
minutes and we know special cases are

00:03:03,830 --> 00:03:10,030
not special enough to break the rules so

00:03:06,830 --> 00:03:13,580
there is a new rule if you got a

00:03:10,030 --> 00:03:16,880
well-thought-out proposal to remove the

00:03:13,580 --> 00:03:20,150
chill from Titan and you get an

00:03:16,880 --> 00:03:23,960
affirmation from one of the bots that is

00:03:20,150 --> 00:03:27,050
tim bought a sport or metella bot only

00:03:23,960 --> 00:03:31,970
then you're allowed to have a lightning

00:03:27,050 --> 00:03:35,930
talk that takes two slots MC Larry

00:03:31,970 --> 00:03:37,400
Hastings okay did it I am yes and I'm

00:03:35,930 --> 00:03:44,240
having technical difficulties for the

00:03:37,400 --> 00:03:47,570
first time must be the chill and uh make

00:03:44,240 --> 00:03:48,980
a joke like how do you get how do you

00:03:47,570 --> 00:03:52,070
get rich before object-oriented

00:03:48,980 --> 00:03:54,110
programming even better choke I'll ask

00:03:52,070 --> 00:03:57,260
the people which rest framework they

00:03:54,110 --> 00:04:00,070
will create know they are using who is

00:03:57,260 --> 00:04:00,070
using jungle ER

00:04:00,960 --> 00:04:12,920
who is using the tyrant Josh Thailand

00:04:04,140 --> 00:04:12,920
thing I i'll reboot take another speaker

00:04:15,350 --> 00:04:23,700
taurogi us and any group colors I need

00:04:20,580 --> 00:04:28,500
rob collins prepared while Larry

00:04:23,700 --> 00:04:31,050
recomposed the piping who is using it

00:04:28,500 --> 00:04:32,850
last water on your choice is Josh micro

00:04:31,050 --> 00:04:37,890
and I'm one of the people who can

00:04:32,850 --> 00:04:44,430
pronounce about psychic who is using 50

00:04:37,890 --> 00:04:51,000
k / croc oh you're right who uses soap

00:04:44,430 --> 00:04:57,780
to slash blown okay who uses something

00:04:51,000 --> 00:05:03,360
else CTI who is creating his own

00:04:57,780 --> 00:05:10,470
framework with between talks everybody

00:05:03,360 --> 00:05:12,720
does don't be shy Rob Rob while you set

00:05:10,470 --> 00:05:16,950
up you can talk how much money did you

00:05:12,720 --> 00:05:18,870
cash in for going away people have been

00:05:16,950 --> 00:05:24,200
very generous over thirteen hundred

00:05:18,870 --> 00:05:24,200
euros thirteen hundred euros

00:05:26,970 --> 00:05:35,640
well what's the common thing with

00:05:32,230 --> 00:05:35,640
McDonald's and the Higgs boson

00:05:36,760 --> 00:05:42,880
look they get mass things cat mouse

00:05:45,780 --> 00:05:57,850
the common thing between mcdonalds and

00:05:48,820 --> 00:06:00,900
the higgs boson ok rock Collins will be

00:05:57,850 --> 00:06:04,330
talking about graph based data

00:06:00,900 --> 00:06:08,590
navigation are you ready I am rock

00:06:04,330 --> 00:06:11,520
gardens okay so user interfaces are hard

00:06:08,590 --> 00:06:16,510
you get things like that where

00:06:11,520 --> 00:06:19,300
functional overload is a problem and the

00:06:16,510 --> 00:06:23,260
fuzzy screen as well hopefully you can

00:06:19,300 --> 00:06:25,630
see that I'm a typical example of how

00:06:23,260 --> 00:06:29,620
people solve that is to divide the data

00:06:25,630 --> 00:06:32,820
up into different parts so a leading

00:06:29,620 --> 00:06:36,310
appointment scheduling program that they

00:06:32,820 --> 00:06:38,680
view person's data by looking at profile

00:06:36,310 --> 00:06:41,610
visits purchases and so on on separate

00:06:38,680 --> 00:06:45,280
screens it solves the problem of the

00:06:41,610 --> 00:06:47,380
functional overload but when you go and

00:06:45,280 --> 00:06:49,630
look at it you have to click somewhere

00:06:47,380 --> 00:06:51,460
and then here you can see the mobile

00:06:49,630 --> 00:06:53,050
phone number and the email but you can't

00:06:51,460 --> 00:06:55,150
see the address or the history on that

00:06:53,050 --> 00:06:59,130
page you have to click somewhere else

00:06:55,150 --> 00:07:02,200
you can drill down into payments and

00:06:59,130 --> 00:07:05,020
appointments but essentially there is a

00:07:02,200 --> 00:07:08,050
problem common data structure we found

00:07:05,020 --> 00:07:11,380
is people start with a relational

00:07:08,050 --> 00:07:12,669
database the developers run out of time

00:07:11,380 --> 00:07:15,340
and realized that they should have done

00:07:12,669 --> 00:07:17,080
the user interface earlier but all

00:07:15,340 --> 00:07:21,490
they've got time to do is one web page

00:07:17,080 --> 00:07:22,900
per table add some jQuery to improve the

00:07:21,490 --> 00:07:26,250
look of it and end up with something

00:07:22,900 --> 00:07:29,110
that is rather hard to teach people

00:07:26,250 --> 00:07:31,900
where things are and slow to use and

00:07:29,110 --> 00:07:36,550
it's not really a good solution for the

00:07:31,900 --> 00:07:38,380
functional overload problem hold that

00:07:36,550 --> 00:07:40,870
thought for a minute and you may have

00:07:38,380 --> 00:07:43,690
come across the isotope JavaScript

00:07:40,870 --> 00:07:51,490
library nice responsive mobile first

00:07:43,690 --> 00:07:53,200
design where you have blocks of whatever

00:07:51,490 --> 00:07:56,980
you like that can move around the screen

00:07:53,200 --> 00:08:03,010
and organize themselves rather nicely

00:07:56,980 --> 00:08:05,980
like that all in the browser so what

00:08:03,010 --> 00:08:10,120
we've thought is supposing you were able

00:08:05,980 --> 00:08:12,550
to put those together and take the

00:08:10,120 --> 00:08:15,730
expected queries from your relational

00:08:12,550 --> 00:08:20,220
database denormalize then export the

00:08:15,730 --> 00:08:24,100
data to a graph with nodes and links

00:08:20,220 --> 00:08:28,240
send the graph Jason to the browser

00:08:24,100 --> 00:08:30,610
running out running isotope and the use

00:08:28,240 --> 00:08:33,450
cases someone comes into the massage

00:08:30,610 --> 00:08:35,740
centres saying I'd like to know what my

00:08:33,450 --> 00:08:39,700
all the information you have on me I

00:08:35,740 --> 00:08:42,820
need to know how many of my x 10 get one

00:08:39,700 --> 00:08:44,860
free package I've used up what was my

00:08:42,820 --> 00:08:47,140
next appointment what was the cream that

00:08:44,860 --> 00:08:53,020
I bought last week and you want all that

00:08:47,140 --> 00:08:56,740
information together in one place so we

00:08:53,020 --> 00:08:59,860
have something like this where we start

00:08:56,740 --> 00:09:02,170
with a list of this is just a proof of

00:08:59,860 --> 00:09:03,760
concept but let's look at the people in

00:09:02,170 --> 00:09:06,190
the system so we've got ali the

00:09:03,760 --> 00:09:08,950
administrator who's currently viewing

00:09:06,190 --> 00:09:11,320
the system we've got Fred and melody who

00:09:08,950 --> 00:09:15,130
are the therapists giving the massages

00:09:11,320 --> 00:09:17,740
and we've got Jane and me as customers

00:09:15,130 --> 00:09:20,440
so we can see the administrator can see

00:09:17,740 --> 00:09:25,030
that Jane has appointments you can see

00:09:20,440 --> 00:09:27,750
who Jane is treated by these are Fred's

00:09:25,030 --> 00:09:30,850
clients the blue shows Fred's

00:09:27,750 --> 00:09:33,460
appointments Fred treats me I can go and

00:09:30,850 --> 00:09:35,110
look at that and each person will have a

00:09:33,460 --> 00:09:38,530
different view of the data that they

00:09:35,110 --> 00:09:41,680
were entitled to see so the up the idea

00:09:38,530 --> 00:09:46,360
is we can go around when navigating the

00:09:41,680 --> 00:09:49,030
graph part by part so that it means

00:09:46,360 --> 00:09:50,770
there's a flexible way of looking at the

00:09:49,030 --> 00:09:56,140
data where you can go in and look at

00:09:50,770 --> 00:10:00,640
something all in one place so what we've

00:09:56,140 --> 00:10:02,290
realized that we're doing we're making

00:10:00,640 --> 00:10:05,890
arbitrary decisions about how to design

00:10:02,290 --> 00:10:08,020
this based on isotope you know what

00:10:05,890 --> 00:10:10,259
should the items truck should be how to

00:10:08,020 --> 00:10:11,790
do widgets where to put them

00:10:10,259 --> 00:10:13,199
what the sort of link formatting is

00:10:11,790 --> 00:10:15,689
that's the hardest bit because when you

00:10:13,199 --> 00:10:17,249
export the data you need to know where

00:10:15,689 --> 00:10:20,339
it's come from and each of the link

00:10:17,249 --> 00:10:23,129
titles is different how to do security

00:10:20,339 --> 00:10:25,259
and it needs standardizing we're doing

00:10:23,129 --> 00:10:27,329
it for our project we're just wondering

00:10:25,259 --> 00:10:29,789
is it worth making an open source

00:10:27,329 --> 00:10:32,369
project to this and talk to me today if

00:10:29,789 --> 00:10:42,089
you're interested rob collins at python

00:10:32,369 --> 00:10:44,910
proco UK thank you so much Larry did you

00:10:42,089 --> 00:10:49,289
recompile your color very good I'm sorry

00:10:44,910 --> 00:10:52,079
add the grill in the room I that I

00:10:49,289 --> 00:10:54,749
shouldn't have shaved but i'm still the

00:10:52,079 --> 00:11:03,919
gorilla in the room and i only have a

00:10:54,749 --> 00:11:09,839
simple mean hoping to the gill must go

00:11:03,919 --> 00:11:14,009
healthy the guilt must go the gill must

00:11:09,839 --> 00:11:16,529
go the gill must go now Larry will

00:11:14,009 --> 00:11:21,089
explain you in much more racial taunts

00:11:16,529 --> 00:11:24,470
why but meanwhile the girl must go the

00:11:21,089 --> 00:11:24,470
gill must go

00:11:27,590 --> 00:11:32,950
while Larry is still searching for ways

00:11:30,050 --> 00:11:37,670
to connect the chill to the projector is

00:11:32,950 --> 00:11:41,330
Lucy on already arrived did Lucy on new

00:11:37,670 --> 00:11:43,250
eat chia arrived again so maybe he's the

00:11:41,330 --> 00:11:45,500
guy who switched into the partner

00:11:43,250 --> 00:11:51,040
program and it's announced for quarter

00:11:45,500 --> 00:11:55,790
to six Andre can you start with

00:11:51,040 --> 00:11:59,420
information about Python 0 dot 9 dot 1

00:11:55,790 --> 00:12:03,730
so just to be sure that was a long time

00:11:59,420 --> 00:12:03,730
ago we are not stuck in a timing loop

00:12:04,780 --> 00:12:17,030
the girl must go oh the projector must

00:12:13,310 --> 00:12:21,440
work do you know what's the B in Binoy

00:12:17,030 --> 00:12:25,220
be Mandelbrot stands for better it be

00:12:21,440 --> 00:12:29,090
metal bro great Android RK we'll talk

00:12:25,220 --> 00:12:30,830
about Python 09 dot one and why you

00:12:29,090 --> 00:12:44,060
should use it instead of Python 3 dot

00:12:30,830 --> 00:12:45,980
for Andrew oh oh Alex usually I agree

00:12:44,060 --> 00:12:49,150
with you but every time you make the

00:12:45,980 --> 00:12:53,680
guilt go away the projection goes away

00:12:49,150 --> 00:12:53,680
so this is actually some years ago from

00:12:59,140 --> 00:13:03,260
so this is okay something I did a couple

00:13:01,250 --> 00:13:05,540
years ago someone asked the question

00:13:03,260 --> 00:13:08,350
what was the first version of Python to

00:13:05,540 --> 00:13:10,190
include the else clause in for loops and

00:13:08,350 --> 00:13:13,700
well you can actually going to figure

00:13:10,190 --> 00:13:15,880
this out yourself you can go to the is

00:13:13,700 --> 00:13:18,290
my computer does something there goes

00:13:15,880 --> 00:13:20,060
you can go to the downloads page and

00:13:18,290 --> 00:13:22,520
download all the different things even

00:13:20,060 --> 00:13:25,790
older cerises go to source releases and

00:13:22,520 --> 00:13:27,770
you can go to there and go all the way

00:13:25,790 --> 00:13:30,880
down the list and find out but you can

00:13:27,770 --> 00:13:33,500
get Python 1.0 point when tar.gz online

00:13:30,880 --> 00:13:36,790
but I think I can do better in fact I

00:13:33,500 --> 00:13:41,990
know I can do better let me

00:13:36,790 --> 00:13:45,950
let me do this now I think I'm being

00:13:41,990 --> 00:13:48,620
heard okay so if you look at if you look

00:13:45,950 --> 00:13:50,720
at misk misk history you can go at the

00:13:48,620 --> 00:13:53,540
bottom and see that released 0.9 point 0

00:13:50,720 --> 00:13:56,240
was in February 1991 released to all dot

00:13:53,540 --> 00:13:57,710
sources now that was back in the good

00:13:56,240 --> 00:13:59,180
old days what everyone used used it all

00:13:57,710 --> 00:14:01,390
the time and all of the Python

00:13:59,180 --> 00:14:04,340
developers were on used it weeding

00:14:01,390 --> 00:14:06,590
complem actually even before them so

00:14:04,340 --> 00:14:08,420
usenet is after all really long time ago

00:14:06,590 --> 00:14:10,910
almost before the World Wide Web because

00:14:08,420 --> 00:14:12,440
that start off the 1990 it's only a few

00:14:10,910 --> 00:14:13,820
months after that and it's still

00:14:12,440 --> 00:14:16,490
possible to find those postings those

00:14:13,820 --> 00:14:18,320
are archived and here you can see we de

00:14:16,490 --> 00:14:20,090
van rossum on februari twentieth

00:14:18,320 --> 00:14:22,610
nineteen ninety-one really seen a sharp

00:14:20,090 --> 00:14:23,780
sharp cell archive for those of you who

00:14:22,610 --> 00:14:26,240
don't remember the good old days when

00:14:23,780 --> 00:14:28,060
everyone was friendly and honest and did

00:14:26,240 --> 00:14:30,950
good things to the people all the time

00:14:28,060 --> 00:14:32,720
this is we did you downloaded and this

00:14:30,950 --> 00:14:34,070
is a one of 21 but one of these was

00:14:32,720 --> 00:14:36,110
rejected because it was mistakes there's

00:14:34,070 --> 00:14:37,550
like actually 20 files you download

00:14:36,110 --> 00:14:39,230
these into one large file put them

00:14:37,550 --> 00:14:40,310
together and execute this is a shell

00:14:39,230 --> 00:14:42,620
script so these are actually running

00:14:40,310 --> 00:14:45,290
shell commands to do things like check

00:14:42,620 --> 00:14:46,880
to see if things exist here documents is

00:14:45,290 --> 00:14:49,460
said to do all the stuff to make handle

00:14:46,880 --> 00:14:51,590
new lines correctly once you do that and

00:14:49,460 --> 00:14:53,330
run it you get read me and all sorts of

00:14:51,590 --> 00:14:54,560
things like python is apparently an

00:14:53,330 --> 00:14:56,030
extensible interpreted programming

00:14:54,560 --> 00:14:58,280
language that combines the merc

00:14:56,030 --> 00:15:00,260
low-power with very clear syntax i think

00:14:58,280 --> 00:15:02,570
that hasn't changed since 20 some odd

00:15:00,260 --> 00:15:04,730
years now i look in there and there's a

00:15:02,570 --> 00:15:06,460
source grammar and that says here in the

00:15:04,730 --> 00:15:09,800
very first release to the outside world

00:15:06,460 --> 00:15:11,390
for statement includes else now of

00:15:09,800 --> 00:15:13,460
course this isn't quite code this could

00:15:11,390 --> 00:15:16,010
be line so mixed question is this can i

00:15:13,460 --> 00:15:18,140
compile it and test it out and well yes

00:15:16,010 --> 00:15:20,240
I can there's a few changes this is

00:15:18,140 --> 00:15:22,760
after all 90 91 and my compilers now or

00:15:20,240 --> 00:15:25,370
anything or see 99 but a few things to

00:15:22,760 --> 00:15:27,800
make things work and it compiles well it

00:15:25,370 --> 00:15:28,790
compiles a lot of warnings but they're

00:15:27,800 --> 00:15:30,220
just warning is right we can ignore

00:15:28,790 --> 00:15:33,130
those

00:15:30,220 --> 00:15:35,560
Vegas is it works okay Python after I've

00:15:33,130 --> 00:15:37,180
done this and imports if this modules is

00:15:35,560 --> 00:15:39,010
extremely small compared to now but

00:15:37,180 --> 00:15:40,990
there's a cyst modules it's just

00:15:39,010 --> 00:15:42,580
standard in red line it doesn't know

00:15:40,990 --> 00:15:45,070
about back session yet it just gives me

00:15:42,580 --> 00:15:46,510
as octal code but it's working and I try

00:15:45,070 --> 00:15:49,960
to write something and things about this

00:15:46,510 --> 00:15:51,700
is well this is Python 0.9 and you have

00:15:49,960 --> 00:15:52,960
to have the print the seasons there you

00:15:51,700 --> 00:15:56,140
can't have double quotes all these

00:15:52,960 --> 00:15:59,440
single quotes are allowed but eco still

00:15:56,140 --> 00:16:01,690
you make a class and say it so then

00:15:59,440 --> 00:16:05,830
tested this out do a for loop for X in

00:16:01,690 --> 00:16:09,400
range 5 else I am done so 1991 the very

00:16:05,830 --> 00:16:10,690
first few leaves for else worked and as

00:16:09,400 --> 00:16:12,430
you can see I quit this than a seg

00:16:10,690 --> 00:16:15,130
faults but if I exit so it doesn't

00:16:12,430 --> 00:16:16,750
matter now it's interesting to go

00:16:15,130 --> 00:16:18,730
through what is now the standard library

00:16:16,750 --> 00:16:20,380
with but then was Guido was here's

00:16:18,730 --> 00:16:22,750
something that can do in Python like

00:16:20,380 --> 00:16:26,590
there's a module for doing polynomials

00:16:22,750 --> 00:16:28,030
that 50 years later got thrown away but

00:16:26,590 --> 00:16:30,340
something interesting things about here

00:16:28,030 --> 00:16:32,560
is there's the equalist assignment up

00:16:30,340 --> 00:16:35,650
there and equal four thank you and equal

00:16:32,560 --> 00:16:37,990
for comparison there this is back in the

00:16:35,650 --> 00:16:40,240
old days of Python before but so it's

00:16:37,990 --> 00:16:41,710
not quite minor Python and this is back

00:16:40,240 --> 00:16:46,360
we didn't have the same syntax to

00:16:41,710 --> 00:16:47,950
victory string exceptions and other

00:16:46,360 --> 00:16:50,050
things that are about this time is there

00:16:47,950 --> 00:16:51,670
was no underscore underscore in it you

00:16:50,050 --> 00:16:53,350
actually had to make your own thing and

00:16:51,670 --> 00:16:55,540
you see there's DD here instead of a

00:16:53,350 --> 00:16:57,910
self this was back before we had a

00:16:55,540 --> 00:17:00,130
consistent self in fact I went through

00:16:57,910 --> 00:17:04,780
and pulled out their settings all in it

00:17:00,130 --> 00:17:06,460
create there is actually a cell pull the

00:17:04,780 --> 00:17:08,050
odd ones but there is actually some

00:17:06,460 --> 00:17:09,400
strangest in here because it's not

00:17:08,050 --> 00:17:13,720
really the Python as we know it is

00:17:09,400 --> 00:17:15,640
zero-point 9.11 can we bring but less

00:17:13,720 --> 00:17:16,900
the other day larry has teams pointed

00:17:15,640 --> 00:17:18,850
out that mercurial has the entire

00:17:16,900 --> 00:17:20,260
archive I mean really it's a mercurial

00:17:18,850 --> 00:17:22,000
now and then it wasn't what subversion

00:17:20,260 --> 00:17:23,590
before that before that was an RCS and

00:17:22,000 --> 00:17:25,780
there's been a full migration of the

00:17:23,590 --> 00:17:27,760
entire RCS process from the first

00:17:25,780 --> 00:17:29,410
release back in nineteen nine the first

00:17:27,760 --> 00:17:31,180
I release but first commit back in

00:17:29,410 --> 00:17:32,680
nineteen ninety so while the

00:17:31,180 --> 00:17:34,600
transactions go back to zero point nine

00:17:32,680 --> 00:17:38,890
point eight you can go through and

00:17:34,600 --> 00:17:42,820
figure out that in Sunday the fourteenth

00:17:38,890 --> 00:17:43,850
of October at making in 1990 @ noon it

00:17:42,820 --> 00:17:45,980
was a commit with the

00:17:43,850 --> 00:17:47,720
statement and the previous commit was on

00:17:45,980 --> 00:17:49,520
Saturday October 13th so sometime

00:17:47,720 --> 00:17:52,809
between Saturday and Sunday the four

00:17:49,520 --> 00:17:52,809
else was a tattoo language

00:18:01,059 --> 00:18:07,970
what I imagine where the discussions

00:18:04,220 --> 00:18:10,250
when we get forgot from 09 dot 0 to 1

00:18:07,970 --> 00:18:12,100
but some something how could you make

00:18:10,250 --> 00:18:15,169
the assignment operator and the

00:18:12,100 --> 00:18:20,570
comparison operator changed it we have

00:18:15,169 --> 00:18:29,000
to rewrite all our code Python 1 dot 0

00:18:20,570 --> 00:18:35,059
will never be common so are you max are

00:18:29,000 --> 00:18:37,850
you yeah Anatoly ah great and Mark step

00:18:35,059 --> 00:18:42,200
kenar you here great so fine it's fine

00:18:37,850 --> 00:18:44,539
or some little changes yeah yeah yeah

00:18:42,200 --> 00:18:45,950
yeah well I just skipped marks because I

00:18:44,539 --> 00:18:52,639
needed answer to it because he wasn't

00:18:45,950 --> 00:18:55,510
wrong no problem between skill bah so

00:18:52,639 --> 00:18:55,510
are you moving forward

00:19:00,559 --> 00:19:02,559
Oh

00:19:09,660 --> 00:19:18,360
there were some scientists and yeah yeah

00:19:13,890 --> 00:19:21,330
Gil they talked about a four-dimensional

00:19:18,360 --> 00:19:25,320
space and sums that oh I can't really

00:19:21,330 --> 00:19:27,870
imagine so the physicists that easy just

00:19:25,320 --> 00:19:30,450
take room and space and you have four

00:19:27,870 --> 00:19:32,490
dimensions an animated magician said

00:19:30,450 --> 00:19:36,710
even easier just imagine an

00:19:32,490 --> 00:19:40,770
n-dimensional space and set n equal to 4

00:19:36,710 --> 00:19:43,530
and all the guilt another yes MZ dairy

00:19:40,770 --> 00:19:45,540
Hastings the gill must go to the future

00:19:43,530 --> 00:19:47,100
of the bike and go ok and it's double

00:19:45,540 --> 00:19:48,210
length it's 10 minutes I still have to

00:19:47,100 --> 00:19:51,180
go fast because I have a lot of slides

00:19:48,210 --> 00:19:53,310
so the basics the gill that's an acronym

00:19:51,180 --> 00:19:56,010
it means global interpreter lock this is

00:19:53,310 --> 00:19:57,900
a single lock this is a sink use you

00:19:56,010 --> 00:19:59,880
will make me run out of time there's a

00:19:57,900 --> 00:20:02,040
single lock that must be wrapped around

00:19:59,880 --> 00:20:03,840
the entire C Python runtime in other

00:20:02,040 --> 00:20:05,430
words you must hold this lock whenever

00:20:03,840 --> 00:20:07,080
you talk to C Python if you are

00:20:05,430 --> 00:20:08,910
allocating an object d allocating an

00:20:07,080 --> 00:20:10,710
object interacting with an object or

00:20:08,910 --> 00:20:13,020
running python bytecode you must hold

00:20:10,710 --> 00:20:15,810
this lock this was originally created in

00:20:13,020 --> 00:20:18,660
1992 in some format or another the

00:20:15,810 --> 00:20:20,400
modern Gil was created in 1997 now there

00:20:18,660 --> 00:20:22,080
are plenty of upsides let's make no

00:20:20,400 --> 00:20:23,970
mistake the the Gil was great and

00:20:22,080 --> 00:20:25,470
certainly in the early days of Python it

00:20:23,970 --> 00:20:27,000
made development of the Python

00:20:25,470 --> 00:20:28,860
interpreter very simple this made

00:20:27,000 --> 00:20:30,000
evolution of the language more rapid it

00:20:28,860 --> 00:20:31,440
made it easier to bring on new

00:20:30,000 --> 00:20:33,210
developers because it's very easy to

00:20:31,440 --> 00:20:34,950
work on there's no possibility of a

00:20:33,210 --> 00:20:36,960
deadlock if you only have one lock and

00:20:34,950 --> 00:20:38,550
there's never any question about which

00:20:36,960 --> 00:20:40,830
lock you're supposed to hold in order to

00:20:38,550 --> 00:20:42,390
do something now since the

00:20:40,830 --> 00:20:44,280
implementation was simple it made

00:20:42,390 --> 00:20:45,420
writing extension types very easy this

00:20:44,280 --> 00:20:47,700
meant that we got lots and lots of

00:20:45,420 --> 00:20:50,010
extensions we got extensions to use

00:20:47,700 --> 00:20:51,570
native libraries which made Python very

00:20:50,010 --> 00:20:53,160
popular and if you add a library that

00:20:51,570 --> 00:20:54,930
was slow because the Python was too slow

00:20:53,160 --> 00:20:56,760
you could rewrite it and see and make it

00:20:54,930 --> 00:20:59,580
go a lot faster so this all made people

00:20:56,760 --> 00:21:01,470
very happy this is all good there are

00:20:59,580 --> 00:21:02,940
downsides to having the gill the major

00:21:01,470 --> 00:21:05,370
one and everybody knows it is that

00:21:02,940 --> 00:21:08,460
python can only run code on one core at

00:21:05,370 --> 00:21:11,370
a time period end of sentence you cannot

00:21:08,460 --> 00:21:13,080
use more than one core to run python

00:21:11,370 --> 00:21:15,840
code or to interact with the Python

00:21:13,080 --> 00:21:17,490
runtime and a side effect of this if you

00:21:15,840 --> 00:21:19,680
have inside effect of having the gill is

00:21:17,490 --> 00:21:21,240
that there are some conditions where you

00:21:19,680 --> 00:21:22,890
have interactions between threads inside

00:21:21,240 --> 00:21:23,430
of Python that may have some terrible

00:21:22,890 --> 00:21:25,410
perform

00:21:23,430 --> 00:21:27,090
in side effects this used to be much

00:21:25,410 --> 00:21:28,920
worse David Beasley proved this and

00:21:27,090 --> 00:21:30,210
talked a couple years ago it got a lot

00:21:28,920 --> 00:21:34,230
better but there are still ways that you

00:21:30,210 --> 00:21:36,420
can make the go cry so this is bad is it

00:21:34,230 --> 00:21:38,460
really bad bad are you sure is it bad

00:21:36,420 --> 00:21:40,260
yes well so there are some smart people

00:21:38,460 --> 00:21:42,330
who say that it isn't so bad they say no

00:21:40,260 --> 00:21:43,680
you can use multiprocessing and you can

00:21:42,330 --> 00:21:45,960
have your different processes

00:21:43,680 --> 00:21:47,190
communicate versus with sockets or

00:21:45,960 --> 00:21:48,780
shared memory or something and

00:21:47,190 --> 00:21:51,540
serializing dear sir eyes through them

00:21:48,780 --> 00:21:52,680
or if you have a process that is i/o

00:21:51,540 --> 00:21:54,360
bound and you're not going to use the

00:21:52,680 --> 00:21:56,220
full core anyway then you are perfectly

00:21:54,360 --> 00:21:58,890
happy using python threads and those are

00:21:56,220 --> 00:22:01,110
true but i claim that it is still a bad

00:21:58,890 --> 00:22:04,380
idea in this modern day and age and this

00:22:01,110 --> 00:22:07,140
is why a program in order to use the

00:22:04,380 --> 00:22:08,460
entirety a program should use all

00:22:07,140 --> 00:22:10,200
available resources that are made

00:22:08,460 --> 00:22:11,940
available to it to solve the problem

00:22:10,200 --> 00:22:13,620
that is trying to solve and python is

00:22:11,940 --> 00:22:15,270
leaving money on the table because it

00:22:13,620 --> 00:22:17,520
lives in a multi-core world and it was

00:22:15,270 --> 00:22:19,140
designed for a single core world i want

00:22:17,520 --> 00:22:22,200
to point out to you just how multi-core

00:22:19,140 --> 00:22:23,820
we are now 2006 is when we search first

00:22:22,200 --> 00:22:26,430
started getting multi core desktop

00:22:23,820 --> 00:22:28,550
server and even game consoles all became

00:22:26,430 --> 00:22:31,430
multi-core in two thousand sorry 2005

00:22:28,550 --> 00:22:34,860
2006 was when laptops became multi-core

00:22:31,430 --> 00:22:36,570
2011 tablets phones and even low-cost

00:22:34,860 --> 00:22:39,210
embedded systems on a chip all became

00:22:36,570 --> 00:22:43,140
multi-core 2013 I glasses became

00:22:39,210 --> 00:22:45,860
multi-core 2013 I glasses became

00:22:43,140 --> 00:22:45,860
multi-core

00:22:47,480 --> 00:22:53,399
so what would multi-core Python be like

00:22:51,240 --> 00:22:55,320
well probably most people would actually

00:22:53,399 --> 00:22:57,179
do multi-threading with shared state now

00:22:55,320 --> 00:22:59,789
Alex hates this a lot of people say this

00:22:57,179 --> 00:23:01,380
is a bad bad thing to do but I say

00:22:59,789 --> 00:23:02,700
practicality beats purity there are a

00:23:01,380 --> 00:23:04,320
lot of people who want to program like

00:23:02,700 --> 00:23:05,970
this and if Python says you can't

00:23:04,320 --> 00:23:07,799
program like this are they going to say

00:23:05,970 --> 00:23:10,529
oh I should switch paradigms know they

00:23:07,799 --> 00:23:11,970
will say oh I will switch languages you

00:23:10,529 --> 00:23:13,799
can of course do concurrent sequential

00:23:11,970 --> 00:23:15,539
processes this is a wonderful thing if

00:23:13,799 --> 00:23:16,559
we have message processing in particular

00:23:15,539 --> 00:23:18,330
built in the language this will be

00:23:16,559 --> 00:23:20,730
lovely like stack list gives you but it

00:23:18,330 --> 00:23:22,289
doesn't do multi-core there could be

00:23:20,730 --> 00:23:24,870
future paradigms that are going to take

00:23:22,289 --> 00:23:26,039
advantage of modern computers I don't

00:23:24,870 --> 00:23:29,519
know what those will be like but they

00:23:26,039 --> 00:23:31,529
will be multi core so what follows is my

00:23:29,519 --> 00:23:33,750
opinion I'm not speaking for anybody

00:23:31,529 --> 00:23:35,789
else although alex has been urging me on

00:23:33,750 --> 00:23:37,950
to make this statement for C Python to

00:23:35,789 --> 00:23:42,809
be relevant in 10 years we must remove

00:23:37,950 --> 00:23:44,580
the Gil now I didn't say C Python will

00:23:42,809 --> 00:23:46,799
die said it will lose relevance I didn't

00:23:44,580 --> 00:23:48,750
say Python there's lots more than just C

00:23:46,799 --> 00:23:50,159
Python but I said C Python will lose

00:23:48,750 --> 00:23:51,960
relevance this doesn't mean it will

00:23:50,159 --> 00:23:54,269
happen it doesn't mean that I'm right

00:23:51,960 --> 00:23:56,309
although I think I'm right I don't know

00:23:54,269 --> 00:23:58,380
what the future will holds the future is

00:23:56,309 --> 00:24:00,510
notoriously hard to predict I will point

00:23:58,380 --> 00:24:02,460
out that we have great deal of proof

00:24:00,510 --> 00:24:04,350
that the gill is not necessary to have a

00:24:02,460 --> 00:24:05,820
fully functioning python there are four

00:24:04,350 --> 00:24:08,850
major implementations of Python these

00:24:05,820 --> 00:24:10,470
days two of them have no Gil three of

00:24:08,850 --> 00:24:11,820
them have no reference counting it is

00:24:10,470 --> 00:24:14,880
only C Python that has reference

00:24:11,820 --> 00:24:16,620
counting and McGill what are the

00:24:14,880 --> 00:24:18,539
ramifications are removing the gill from

00:24:16,620 --> 00:24:20,580
the C Python well it will break every

00:24:18,539 --> 00:24:24,029
extension that exists because the

00:24:20,580 --> 00:24:25,470
assumptions built into the capi about

00:24:24,029 --> 00:24:28,260
having a gill and having all of the

00:24:25,470 --> 00:24:30,000
static data are so pervasive that will

00:24:28,260 --> 00:24:32,519
break everything now we can mitigate

00:24:30,000 --> 00:24:34,139
that we could fix swig so that it

00:24:32,519 --> 00:24:35,669
generated the new bindings and that

00:24:34,139 --> 00:24:37,409
would make people were using swig come

00:24:35,669 --> 00:24:38,970
up to speed automatically we could maybe

00:24:37,409 --> 00:24:40,649
write a compatibility layer if we break

00:24:38,970 --> 00:24:42,120
the entire API we just rename all the

00:24:40,649 --> 00:24:43,919
functions and then we'll use all the old

00:24:42,120 --> 00:24:45,779
function names for a compatibility layer

00:24:43,919 --> 00:24:47,490
that might only work single-threaded it

00:24:45,779 --> 00:24:50,039
might not work at all I don't know what

00:24:47,490 --> 00:24:51,149
the future would look like another thing

00:24:50,039 --> 00:24:52,260
is that the internal implementation

00:24:51,149 --> 00:24:54,539
would become a lot more complicated

00:24:52,260 --> 00:24:57,029
again this would slow down development

00:24:54,539 --> 00:24:58,770
of Python of C Python but maybe at this

00:24:57,029 --> 00:24:59,690
point in pythons life cycle that would

00:24:58,770 --> 00:25:02,450
be okay

00:24:59,690 --> 00:25:03,769
and if we were removing the gill we

00:25:02,450 --> 00:25:04,820
might very well remove reference

00:25:03,769 --> 00:25:06,500
counting too because this is another

00:25:04,820 --> 00:25:08,720
millstone around the implementation of

00:25:06,500 --> 00:25:09,980
Python this would be very complicated

00:25:08,720 --> 00:25:11,480
and certainly we couldn't remove

00:25:09,980 --> 00:25:14,659
reference counting unless we remove the

00:25:11,480 --> 00:25:16,730
guilt pure multi-threaded friendly

00:25:14,659 --> 00:25:18,620
garbage collection is the future of

00:25:16,730 --> 00:25:20,179
interpreted languages and it is

00:25:18,620 --> 00:25:21,620
incredibly hard to do a really good job

00:25:20,179 --> 00:25:23,240
of it it's basically research quality

00:25:21,620 --> 00:25:24,830
material people publish papers about

00:25:23,240 --> 00:25:26,450
this stuff now we have a lot of smart

00:25:24,830 --> 00:25:28,580
people in the Python community but it's

00:25:26,450 --> 00:25:31,309
a lot of work and i'm not writing checks

00:25:28,580 --> 00:25:32,899
on anybody else's time finally if we did

00:25:31,309 --> 00:25:34,519
do this this would probably get called C

00:25:32,899 --> 00:25:38,509
Python four-point-oh because it is going

00:25:34,519 --> 00:25:40,460
to break everything now Guido has spoken

00:25:38,509 --> 00:25:41,779
on this in the past many times his most

00:25:40,460 --> 00:25:44,179
recent statement that I could find was

00:25:41,779 --> 00:25:46,399
called a blog post called it isn't easy

00:25:44,179 --> 00:25:48,259
to remove the gill and in that blog post

00:25:46,399 --> 00:25:50,629
he said he would be except willing to

00:25:48,259 --> 00:25:53,240
accept a guilt-free Python if it did not

00:25:50,629 --> 00:25:55,909
hurt single core performance or if it

00:25:53,240 --> 00:25:58,700
was done as a fork of C Python I think

00:25:55,909 --> 00:26:01,460
that if I am right then Guido will have

00:25:58,700 --> 00:26:03,529
to relax these requirements somewhat and

00:26:01,460 --> 00:26:06,320
if I'm wrong then I'm wrong and

00:26:03,529 --> 00:26:09,019
everybody should be happy I think one

00:26:06,320 --> 00:26:10,639
way to mitigate this problem is to make

00:26:09,019 --> 00:26:12,559
maybe a different slightly different

00:26:10,639 --> 00:26:14,690
build you can do it configure time where

00:26:12,559 --> 00:26:16,220
you would make a single core version of

00:26:14,690 --> 00:26:17,750
python that would lose all the

00:26:16,220 --> 00:26:19,580
complexity that we have in managing the

00:26:17,750 --> 00:26:21,200
modern lock 3 gil whatever we're doing

00:26:19,580 --> 00:26:22,700
and that might get us back the

00:26:21,200 --> 00:26:26,000
performance that we lose with doing the

00:26:22,700 --> 00:26:26,990
the guild removal i don't know but the

00:26:26,000 --> 00:26:28,429
people who care about single core

00:26:26,990 --> 00:26:31,279
performance they'd be willing to compile

00:26:28,429 --> 00:26:32,659
python with those constraints so there

00:26:31,279 --> 00:26:34,580
are some alternatives I've been talking

00:26:32,659 --> 00:26:35,870
to core developers all week sorry

00:26:34,580 --> 00:26:40,330
high-neck it wasn't on purpose I just

00:26:35,870 --> 00:26:43,159
forgot but talk to people marc-andre

00:26:40,330 --> 00:26:44,779
lehmberg proposed a library that would

00:26:43,159 --> 00:26:46,549
allow you to share objects through a big

00:26:44,779 --> 00:26:48,620
shared memory space and then you could

00:26:46,549 --> 00:26:49,820
write your program multi-process this is

00:26:48,620 --> 00:26:51,830
good because it doesn't require changing

00:26:49,820 --> 00:26:54,080
C Python at all it's bad because it's

00:26:51,830 --> 00:26:55,519
fragile it being convenient to use you

00:26:54,080 --> 00:26:57,259
wouldn't be able to share local process

00:26:55,519 --> 00:26:59,899
resources like a socket say through this

00:26:57,259 --> 00:27:01,399
mechanism directly and I think if this

00:26:59,899 --> 00:27:03,230
library was available people would just

00:27:01,399 --> 00:27:06,350
would still say I'm gonna use another

00:27:03,230 --> 00:27:08,990
language arnhem arman runner her

00:27:06,350 --> 00:27:11,000
proposed he would be happy if I gave him

00:27:08,990 --> 00:27:13,490
multiple interpreters each having their

00:27:11,000 --> 00:27:15,320
own Gil all running in a single process

00:27:13,490 --> 00:27:17,809
this is like what Lua gives you I

00:27:15,320 --> 00:27:19,910
believe and this is good and that allows

00:27:17,809 --> 00:27:21,920
you to share non Python objects between

00:27:19,910 --> 00:27:23,570
the Python threads that's great it's

00:27:21,920 --> 00:27:26,270
very simple to do actually this would be

00:27:23,570 --> 00:27:28,280
pretty cheap and it gives you a

00:27:26,270 --> 00:27:30,230
threadlocal state so this gives you

00:27:28,280 --> 00:27:31,429
multi-processing multithreading with red

00:27:30,230 --> 00:27:33,320
local state which is another paradigm

00:27:31,429 --> 00:27:35,240
that's really pretty good the downside

00:27:33,320 --> 00:27:38,270
is this again also breaks the entire

00:27:35,240 --> 00:27:40,790
capi and maybe it's like I think it

00:27:38,270 --> 00:27:42,679
might be not shooting high enough not

00:27:40,790 --> 00:27:44,000
shooting not trying hard enough I'm it

00:27:42,679 --> 00:27:45,350
also doesn't allow you to share Python

00:27:44,000 --> 00:27:46,880
objects between interpreters at all or

00:27:45,350 --> 00:27:49,280
at least not directly you'd have to 0 as

00:27:46,880 --> 00:27:52,309
in deserialize again so finally i would

00:27:49,280 --> 00:27:53,780
say python is a community project python

00:27:52,309 --> 00:27:55,220
is the product of all the people who

00:27:53,780 --> 00:27:56,840
work on at the core developer community

00:27:55,220 --> 00:27:59,120
if for anything like this to happen

00:27:56,840 --> 00:28:00,530
people would have to be convinced it was

00:27:59,120 --> 00:28:02,270
a good idea and they would be willing

00:28:00,530 --> 00:28:03,650
they'd have to be willing to step up and

00:28:02,270 --> 00:28:06,530
commit their time in order to make it

00:28:03,650 --> 00:28:08,390
happen and I can't predict whether that

00:28:06,530 --> 00:28:10,250
will happen at all so I wanted to take a

00:28:08,390 --> 00:28:11,870
quick poll who here agrees with the

00:28:10,250 --> 00:28:12,950
statement if C Python does not remove

00:28:11,870 --> 00:28:17,210
the gill in 10 years it will lose

00:28:12,950 --> 00:28:21,140
relevance hands up okay and hands down

00:28:17,210 --> 00:28:23,860
who disagrees well the eyes have it

00:28:21,140 --> 00:28:23,860
thank you very much

00:28:27,640 --> 00:28:52,340
anything about yep listen may I please

00:28:45,980 --> 00:28:57,140
ask max Temkin to use the place where

00:28:52,340 --> 00:29:02,620
Larry was and while we on it you

00:28:57,140 --> 00:29:02,620
favorite pie tin interpreter see Peyton

00:29:05,950 --> 00:29:18,700
iren parties for Microsoft product

00:29:12,290 --> 00:29:23,980
that's not a lot of people Titan Titan

00:29:18,700 --> 00:29:23,980
one pi PI

00:29:25,840 --> 00:29:37,419
nitika neat car Luigi huh as many as

00:29:32,960 --> 00:29:37,419
tighten any other Python interpreter

00:29:37,869 --> 00:29:48,859
backless who one of cyclist thank you

00:29:43,340 --> 00:29:51,830
very much I or even read from here no

00:29:48,859 --> 00:29:55,850
from here from from where yeah this is

00:29:51,830 --> 00:29:59,239
the name higher-order functions because

00:29:55,850 --> 00:30:01,429
ya know the tittle title was alleged

00:29:59,239 --> 00:30:04,279
rookie run that's wrong oh yeah this is

00:30:01,429 --> 00:30:06,859
it ok I take this one yeah anatoly will

00:30:04,279 --> 00:30:08,659
talk about higher order functions and

00:30:06,859 --> 00:30:10,909
ever so happy you would do something for

00:30:08,659 --> 00:30:13,159
our fitness with something running but

00:30:10,909 --> 00:30:15,309
it's also fine alottoni give him a big

00:30:13,159 --> 00:30:15,309
hand

00:30:17,979 --> 00:30:25,129
when Jordan I everyone and I'm developer

00:30:23,239 --> 00:30:28,129
of pelagic international my name is

00:30:25,129 --> 00:30:30,679
Anatoly Fomenko and I wanted to check

00:30:28,129 --> 00:30:36,529
talk about high order functions in

00:30:30,679 --> 00:30:41,269
Python and their optimization ok that

00:30:36,529 --> 00:30:44,539
was a joke so I want to invite you to

00:30:41,269 --> 00:30:47,709
the pike Ron the conference in the

00:30:44,539 --> 00:30:52,419
Netherlands in particular in another

00:30:47,709 --> 00:30:56,690
part of it and it will be in next year

00:30:52,419 --> 00:31:00,979
9th of May and I'm going to talk about

00:30:56,690 --> 00:31:05,959
why you should go there it's a born

00:31:00,979 --> 00:31:07,909
alike conference Python and friends at

00:31:05,959 --> 00:31:11,389
the moment in the Netherlands there are

00:31:07,909 --> 00:31:16,519
no local Python conference like in Italy

00:31:11,389 --> 00:31:19,669
or in France or other countries so it

00:31:16,519 --> 00:31:22,549
ends to be like that it's a one-day

00:31:19,669 --> 00:31:26,419
conference in the moment next year we

00:31:22,549 --> 00:31:30,139
plan Sprint's also right there will be

00:31:26,419 --> 00:31:32,679
three tracks about 20 talks or more it

00:31:30,139 --> 00:31:37,999
depends actually on on the community so

00:31:32,679 --> 00:31:41,089
everyone is invited there will be more

00:31:37,999 --> 00:31:45,529
than 200 participants and like I said it

00:31:41,089 --> 00:31:50,229
will be in groningen netherlands so why

00:31:45,529 --> 00:31:53,619
join great talks great when you and the

00:31:50,229 --> 00:31:57,679
conference is of course about Python but

00:31:53,619 --> 00:32:02,749
not only so everything related to tech

00:31:57,679 --> 00:32:06,619
and latest technologies also will be

00:32:02,749 --> 00:32:10,789
there very positive atmosphere great

00:32:06,619 --> 00:32:14,469
surroundings and the price only 25 euros

00:32:10,789 --> 00:32:14,469
that's great

00:32:16,300 --> 00:32:24,770
and of course Lynn January of the body

00:32:20,120 --> 00:32:28,070
and a lot of fun we have great speakers

00:32:24,770 --> 00:32:31,360
like holga crackle mike beier arming

00:32:28,070 --> 00:32:33,860
moniker pedro note house can I traits

00:32:31,360 --> 00:32:39,220
Alexander sort of your more and you are

00:32:33,860 --> 00:32:48,410
invited again so see you on the bike run

00:32:39,220 --> 00:32:50,800
2014 and I thought it was something

00:32:48,410 --> 00:32:53,330
healthy when I was left run but it's a

00:32:50,800 --> 00:32:58,250
party in the Netherlands with free

00:32:53,330 --> 00:33:00,520
drinks you should train something else

00:32:58,250 --> 00:33:02,960
on your running speed what is your

00:33:00,520 --> 00:33:06,140
operating system of choice on the

00:33:02,960 --> 00:33:08,830
desktop please raise your hand for

00:33:06,140 --> 00:33:08,830
lineups

00:33:10,690 --> 00:33:18,130
please raise your hand for some of the

00:33:13,940 --> 00:33:18,130
Mac operating systems on a desktop

00:33:19,639 --> 00:33:27,179
please raise your hand for windows hey

00:33:25,139 --> 00:33:31,879
they are member of the pipe software

00:33:27,179 --> 00:33:38,009
foundation give them some credit PSD

00:33:31,879 --> 00:33:42,649
whoo Mobius the users and tighten users

00:33:38,009 --> 00:33:42,649
take note any commercial unix

00:33:44,409 --> 00:33:59,299
up PU weeks os/2 and that's how the

00:33:50,269 --> 00:34:08,329
other no amiga users with us so what

00:33:59,299 --> 00:34:12,169
sucks every always sucks we need Andre

00:34:08,329 --> 00:34:14,629
Andre Andre who wants to talk about funk

00:34:12,169 --> 00:34:17,599
passer to go get it up our next speaker

00:34:14,629 --> 00:34:20,270
will be MUC step care about table

00:34:17,599 --> 00:34:30,319
partitioning with chango are you ready

00:34:20,270 --> 00:34:31,790
yep okay once you I can't so I'm hi my

00:34:30,319 --> 00:34:33,530
name is Max and I'm going to give a

00:34:31,790 --> 00:34:37,520
lightning talk about table partitioning

00:34:33,530 --> 00:34:40,250
with Django so i hope we know we all

00:34:37,520 --> 00:34:43,179
know what table partition is but for

00:34:40,250 --> 00:34:45,440
those who don't orford also forgot

00:34:43,179 --> 00:34:47,780
actually it's very large topic but

00:34:45,440 --> 00:34:50,480
basically a table partition is a

00:34:47,780 --> 00:34:52,909
division of one table into several

00:34:50,480 --> 00:34:59,210
smaller tables which represent the table

00:34:52,909 --> 00:35:02,599
so let's have an example here we have a

00:34:59,210 --> 00:35:07,790
very happy table it has some data in it

00:35:02,599 --> 00:35:11,900
so it looks quite nice but after some

00:35:07,790 --> 00:35:18,140
time it gets over bloated with data and

00:35:11,900 --> 00:35:22,940
the queue is very slow and so it looks

00:35:18,140 --> 00:35:26,390
like this and now it is an unhappy table

00:35:22,940 --> 00:35:28,040
as you see so what can we do to help the

00:35:26,390 --> 00:35:30,589
table actually there are several

00:35:28,040 --> 00:35:32,780
solutions to this problem but one of

00:35:30,589 --> 00:35:36,260
them one of the solution is a table

00:35:32,780 --> 00:35:42,440
partition so we can give some friends

00:35:36,260 --> 00:35:45,740
partitions to the table yeah and now the

00:35:42,440 --> 00:35:49,460
data is situated in these three

00:35:45,740 --> 00:35:56,290
partitions and our table is happy again

00:35:49,460 --> 00:35:59,500
and the curious are much faster so if

00:35:56,290 --> 00:36:02,110
look at this at the SQL level what

00:35:59,500 --> 00:36:05,350
basically happens imagine that we have

00:36:02,110 --> 00:36:10,360
table code blocks where we store all our

00:36:05,350 --> 00:36:14,290
log data and if we do an insert with

00:36:10,360 --> 00:36:18,220
this data it goes to the partition for

00:36:14,290 --> 00:36:21,010
month number five if we do another

00:36:18,220 --> 00:36:25,480
insert it goes to the partition for

00:36:21,010 --> 00:36:29,040
month number 36 but as you see we are

00:36:25,480 --> 00:36:32,410
working with the table logs and if we do

00:36:29,040 --> 00:36:37,630
select all from locks we have all those

00:36:32,410 --> 00:36:39,520
two rows of data so we might even don't

00:36:37,630 --> 00:36:44,380
know that there are some partitions and

00:36:39,520 --> 00:36:46,380
some other stuff actually it's there

00:36:44,380 --> 00:36:48,970
were some problems with the partitioning

00:36:46,380 --> 00:36:51,520
implementation with different databases

00:36:48,970 --> 00:36:58,750
for example progress using inheritance

00:36:51,520 --> 00:37:02,980
and mysql uses alter table so and by the

00:36:58,750 --> 00:37:05,320
way you have to have some well good

00:37:02,980 --> 00:37:08,140
knowledge of SQL to do the partition

00:37:05,320 --> 00:37:10,960
incorrectly otherwise it can kill you

00:37:08,140 --> 00:37:15,400
and you can get fired if you don't have

00:37:10,960 --> 00:37:18,220
backups and stuff and also when you go

00:37:15,400 --> 00:37:19,990
to vacation imagine that you did all the

00:37:18,220 --> 00:37:22,690
great partition stuff in you went to

00:37:19,990 --> 00:37:26,380
vacation and then some kallik of yours

00:37:22,690 --> 00:37:28,810
come and see all this it can have a face

00:37:26,380 --> 00:37:32,910
like this well what the hell is this man

00:37:28,810 --> 00:37:36,250
I'm Python programmer not an SQL guru so

00:37:32,910 --> 00:37:41,050
this is why i created a package called

00:37:36,250 --> 00:37:43,180
Jungle DB party it's very easy basically

00:37:41,050 --> 00:37:47,140
you install it from pie pie or clone

00:37:43,180 --> 00:37:51,760
from github then you add it to installed

00:37:47,140 --> 00:37:55,260
apps then you create your model in

00:37:51,760 --> 00:37:57,970
Django as usual you make an import

00:37:55,260 --> 00:38:01,130
partition able and you make your model

00:37:57,970 --> 00:38:04,369
to inherit from partition able

00:38:01,130 --> 00:38:07,460
so then you can add some configuration

00:38:04,369 --> 00:38:09,109
you add a meter class to your model make

00:38:07,460 --> 00:38:12,109
it also inherit from partition about

00:38:09,109 --> 00:38:14,529
meter then you specify the range at

00:38:12,109 --> 00:38:18,049
which partitions are created currently

00:38:14,529 --> 00:38:21,470
there is a month and the week and you

00:38:18,049 --> 00:38:23,329
specify column on which partitions are

00:38:21,470 --> 00:38:26,480
done for example by default its pile

00:38:23,329 --> 00:38:30,140
date but it can be whatever column you

00:38:26,480 --> 00:38:32,750
like and then you run this comment which

00:38:30,140 --> 00:38:37,130
creates all the stuff at the database

00:38:32,750 --> 00:38:40,519
level so it works as fast as if you were

00:38:37,130 --> 00:38:43,279
doing this all by hand also you can have

00:38:40,519 --> 00:38:47,930
some customization which partitions a

00:38:43,279 --> 00:38:50,029
partition is shown in the admin that was

00:38:47,930 --> 00:38:54,019
the good stuff and there is some bad

00:38:50,029 --> 00:38:58,630
stuff first of all I don't have tests

00:38:54,019 --> 00:39:03,589
right now but I promise I will someday

00:38:58,630 --> 00:39:06,289
yeah currently I support my sequel in

00:39:03,589 --> 00:39:10,460
Postgres and I planning to at Oracle

00:39:06,289 --> 00:39:13,970
some and maybe more I need to add more

00:39:10,460 --> 00:39:17,569
partitioning options and some more stuff

00:39:13,970 --> 00:39:21,700
so I'm running out of time and thank you

00:39:17,569 --> 00:39:21,700
use it I will be happy if you like

00:39:24,620 --> 00:39:31,880
same positioning with chango I'm i would

00:39:29,030 --> 00:39:37,190
like to sing something we shall ride

00:39:31,880 --> 00:39:42,710
some tests someday I need somebody to do

00:39:37,190 --> 00:39:45,740
the guitar and Wael Andre is setting up

00:39:42,710 --> 00:39:49,040
to talk about pump a slip I would like

00:39:45,740 --> 00:39:55,820
to Danny Doyle bargain to come to the

00:39:49,040 --> 00:39:59,780
stage oh my hey you five is no

00:39:55,820 --> 00:40:03,410
microphone yeah so good um if you host

00:39:59,780 --> 00:40:06,610
your Python App what do you prefer also

00:40:03,410 --> 00:40:06,610
own hardware

00:40:07,820 --> 00:40:19,880
if you host your created software what

00:40:13,380 --> 00:40:19,880
do you prefer for your hosting hosting

00:40:21,470 --> 00:40:28,350
google glasses is missing from the list

00:40:23,610 --> 00:40:32,160
so what sort of hosting do you like own

00:40:28,350 --> 00:40:35,910
hardware google glasses with bills to

00:40:32,160 --> 00:40:38,270
own hardware will trail private server

00:40:35,910 --> 00:40:38,270
VPS

00:40:38,880 --> 00:40:46,190
the cloud platform as a service

00:40:46,500 --> 00:40:58,740
ah though I don't know okay our next

00:40:55,680 --> 00:41:01,830
speaker Andre about footpath slip a

00:40:58,740 --> 00:41:09,060
functional passing library I ready yeah

00:41:01,830 --> 00:41:11,310
I'll give you a big hand well thank you

00:41:09,060 --> 00:41:14,910
i'm andre warszawski from pycharm and

00:41:11,310 --> 00:41:17,070
today I'm going to talk about fun parser

00:41:14,910 --> 00:41:20,070
lib it's a functional parsing library

00:41:17,070 --> 00:41:22,590
for python basically it's a library for

00:41:20,070 --> 00:41:26,310
parsing little languages also known as

00:41:22,590 --> 00:41:28,650
external dsl's its competitors are by

00:41:26,310 --> 00:41:32,850
parsing fly and some other parts and

00:41:28,650 --> 00:41:36,810
libraries and why I started it I wasn't

00:41:32,850 --> 00:41:39,180
happy with the API of pie parsing its to

00:41:36,810 --> 00:41:42,780
wash too complicated and you know you

00:41:39,180 --> 00:41:47,040
could do better so Punk parcel lip has

00:41:42,780 --> 00:41:49,290
an IP I of about ten functions and it's

00:41:47,040 --> 00:41:52,350
quite stable now so you can use it in

00:41:49,290 --> 00:41:55,680
production the main idea behind this

00:41:52,350 --> 00:41:57,960
library is parsing Combinator's is it is

00:41:55,680 --> 00:42:00,690
an idea from the functional programming

00:41:57,960 --> 00:42:03,600
community from languages such as a camel

00:42:00,690 --> 00:42:06,240
or Haskell basically you have primitive

00:42:03,600 --> 00:42:09,690
parcels for example a parcel that could

00:42:06,240 --> 00:42:11,850
parse only one token a way to declare a

00:42:09,690 --> 00:42:14,790
forward declaration parser and then you

00:42:11,850 --> 00:42:17,610
have a means of composition you can

00:42:14,790 --> 00:42:20,250
define sequences alternatives you can

00:42:17,610 --> 00:42:23,850
repeat your parser many times define

00:42:20,250 --> 00:42:27,840
maybe parsers and the best part of it is

00:42:23,850 --> 00:42:30,450
that every time you use the some means

00:42:27,840 --> 00:42:32,340
of combination you get another parcel so

00:42:30,450 --> 00:42:36,060
you can quite easily start with the

00:42:32,340 --> 00:42:39,480
small smallest things and just get your

00:42:36,060 --> 00:42:42,510
whole grammar working let's took take a

00:42:39,480 --> 00:42:46,140
look at an example here's the S

00:42:42,510 --> 00:42:49,530
expression language it can contain

00:42:46,140 --> 00:42:51,870
symbols like variable names and nested

00:42:49,530 --> 00:42:56,280
lists in parentheses actually it's a

00:42:51,870 --> 00:42:58,200
subset of Lisp and here's the parser for

00:42:56,280 --> 00:43:00,140
this language written using found

00:42:58,200 --> 00:43:03,510
partially it's

00:43:00,140 --> 00:43:06,150
just take a nice missing and other stuff

00:43:03,510 --> 00:43:10,350
is there so let's take a look how it

00:43:06,150 --> 00:43:13,380
works basically you have a parser for

00:43:10,350 --> 00:43:16,080
symbol that can parse only one symbol

00:43:13,380 --> 00:43:18,540
then you'll forward declare list then

00:43:16,080 --> 00:43:22,110
you stayed that expression in either

00:43:18,540 --> 00:43:25,080
symbol or list and that the list is an

00:43:22,110 --> 00:43:28,890
open paren many expression and closed

00:43:25,080 --> 00:43:32,640
paren and that's it so the fun part

00:43:28,890 --> 00:43:36,060
sleep is very tiny actually it's very

00:43:32,640 --> 00:43:38,460
small and the half of its code are

00:43:36,060 --> 00:43:43,440
comments so it's very well document and

00:43:38,460 --> 00:43:46,250
test also it it is one of the fastest

00:43:43,440 --> 00:43:50,310
parsing library written in pure python

00:43:46,250 --> 00:43:54,810
here's some performance benchmark about

00:43:50,310 --> 00:43:58,800
parsing json but note that the library

00:43:54,810 --> 00:44:01,650
written in c would be about a hundred

00:43:58,800 --> 00:44:04,560
times faster than any of pure Biden

00:44:01,650 --> 00:44:06,360
library so you can you should use that

00:44:04,560 --> 00:44:09,170
kind of libraries for little languages

00:44:06,360 --> 00:44:12,200
such as config file stuff like that

00:44:09,170 --> 00:44:15,870
unfortunately it's not so popular than

00:44:12,200 --> 00:44:19,260
than its rivals such as bypassing and

00:44:15,870 --> 00:44:23,070
that's why I'm here I would like to see

00:44:19,260 --> 00:44:27,120
more users of thumb parcel lip so please

00:44:23,070 --> 00:44:29,010
google it or go to my homepage i will be

00:44:27,120 --> 00:44:31,410
glad to answer all the questions i'm

00:44:29,010 --> 00:44:33,890
still here so fun me and that's it

00:44:31,410 --> 00:44:33,890
thanks

00:44:36,530 --> 00:44:42,960
Andre about funk positive now we have

00:44:40,260 --> 00:44:45,800
one repetition about a pack but Tohru

00:44:42,960 --> 00:44:50,700
was already present so I need Adam Chi

00:44:45,800 --> 00:44:53,070
Adam Chi you're here can you please set

00:44:50,700 --> 00:44:56,580
up our next speaker will be Daniel

00:44:53,070 --> 00:45:00,150
Berrigan about Chitti awesome Python

00:44:56,580 --> 00:45:03,350
auto-completion have you heard about the

00:45:00,150 --> 00:45:03,350
suicidal homeopath

00:45:03,360 --> 00:45:11,150
he took her thousands of the recommended

00:45:05,670 --> 00:45:17,820
dosage do you know difference between

00:45:11,150 --> 00:45:21,660
ignorance and indifference correct so

00:45:17,820 --> 00:45:26,330
Daniel Oh chilly you will be can you

00:45:21,660 --> 00:45:26,330
give me yes a big care for Donny law

00:45:29,210 --> 00:45:35,700
okay i'm danilo i'm talking about to die

00:45:32,820 --> 00:45:37,740
i'm a very very happy when user but i'm

00:45:35,700 --> 00:45:41,040
happy about the emap top because you've

00:45:37,740 --> 00:45:42,690
already seen Jedi so what Jedi it's the

00:45:41,040 --> 00:45:46,350
library developed by a friend of mine I

00:45:42,690 --> 00:45:49,020
just did a few contributions last year

00:45:46,350 --> 00:45:50,730
Calif on the Rossum was in Zurich in at

00:45:49,020 --> 00:45:52,770
eight th and we were sitting with him

00:45:50,730 --> 00:45:54,860
I'm talking and my friend explained his

00:45:52,770 --> 00:45:58,920
idea and he does that oh that worries me

00:45:54,860 --> 00:46:01,050
but it turned out to be very good so

00:45:58,920 --> 00:46:04,260
Jedi is an outer completion library for

00:46:01,050 --> 00:46:08,190
python that understands Python you can

00:46:04,260 --> 00:46:10,950
put it inside your ID or editor or

00:46:08,190 --> 00:46:12,930
debugger or anything else there are

00:46:10,950 --> 00:46:17,850
plugins already for women emap sublime

00:46:12,930 --> 00:46:20,190
text it runs in python 2.6 plus and 3.2

00:46:17,850 --> 00:46:22,010
plus and it understands both fighting

00:46:20,190 --> 00:46:26,010
two and three with a single code base

00:46:22,010 --> 00:46:28,950
it's lgpl it has good dogs ninety-four

00:46:26,010 --> 00:46:36,180
percent call a test coverage it's really

00:46:28,950 --> 00:46:39,270
quite good and its really fast this is

00:46:36,180 --> 00:46:42,840
your example of what it looks like there

00:46:39,270 --> 00:46:44,940
are more examples later on so the base

00:46:42,840 --> 00:46:47,610
features it has it can deal with very

00:46:44,940 --> 00:46:49,350
complex recursive structures it handles

00:46:47,610 --> 00:46:52,980
syntax errors and wrong indentation so

00:46:49,350 --> 00:46:55,860
while you are typing it's not failing it

00:46:52,980 --> 00:46:57,870
supports virtual end if there is thai

00:46:55,860 --> 00:47:00,540
painting with drinks and epitope top

00:46:57,870 --> 00:47:04,340
strings and it's very easy to use it in

00:47:00,540 --> 00:47:06,750
your own editor write a plug-in for it

00:47:04,340 --> 00:47:08,940
support the python features quite a lot

00:47:06,750 --> 00:47:11,430
it supports the built-ins multiple

00:47:08,940 --> 00:47:15,090
returns or yields indexing of lists and

00:47:11,430 --> 00:47:17,070
dictionaries exceptions different

00:47:15,090 --> 00:47:19,980
imports even star imports

00:47:17,070 --> 00:47:24,420
context managers decorators lamp

00:47:19,980 --> 00:47:26,910
disclosures some descriptors the magic

00:47:24,420 --> 00:47:31,200
methods list manipulation simple says

00:47:26,910 --> 00:47:33,060
path modifications and more what's not

00:47:31,200 --> 00:47:37,220
supported is meta classes that's really

00:47:33,060 --> 00:47:40,410
hard to do setattribute set after the

00:47:37,220 --> 00:47:43,230
underscore import writing to global

00:47:40,410 --> 00:47:47,550
locals object dick and evaluating a for

00:47:43,230 --> 00:47:49,920
while though a short example there's a

00:47:47,550 --> 00:47:52,680
set of four items with integers you add

00:47:49,920 --> 00:47:55,140
a string to it convert it to a list to

00:47:52,680 --> 00:47:58,110
indexing of it and completed and it

00:47:55,140 --> 00:48:01,580
works and for example i really like

00:47:58,110 --> 00:48:04,200
PyCharm but that's something it can't do

00:48:01,580 --> 00:48:07,380
something else this is really ugly code

00:48:04,200 --> 00:48:10,530
but I promise it works your importation

00:48:07,380 --> 00:48:12,540
you create a class that make Jason a

00:48:10,530 --> 00:48:14,940
global variable you assign chasing to

00:48:12,540 --> 00:48:17,790
ham there's a function that returns to

00:48:14,940 --> 00:48:21,360
class instance no nothing since the

00:48:17,790 --> 00:48:23,760
class itself then you return the class

00:48:21,360 --> 00:48:27,030
create an instance from it gets the ham

00:48:23,760 --> 00:48:28,650
attribute out of it and print it and the

00:48:27,030 --> 00:48:31,250
complete attempt works and i'm going to

00:48:28,650 --> 00:48:31,250
show this to you

00:48:32,819 --> 00:48:46,119
this is same court dot and it completes

00:48:36,399 --> 00:48:48,130
and it contains everything you need ok

00:48:46,119 --> 00:48:50,469
and if Jedi fails for example if you

00:48:48,130 --> 00:48:52,089
have a see library that contains some

00:48:50,469 --> 00:48:54,489
complicated imports or something for

00:48:52,089 --> 00:48:56,890
example a sequel light then you can

00:48:54,489 --> 00:48:58,839
create kind of a mock piping object that

00:48:56,890 --> 00:49:01,449
contains all the functions without doing

00:48:58,839 --> 00:49:07,089
anything and third I part is dead and

00:49:01,449 --> 00:49:09,069
try to create bindings in the wilds you

00:49:07,089 --> 00:49:11,469
can use it for vim with a chili limb

00:49:09,069 --> 00:49:13,419
there's another plug-in that supports

00:49:11,469 --> 00:49:15,759
see completion tool called you complete

00:49:13,419 --> 00:49:17,969
me and it supports completion while you

00:49:15,759 --> 00:49:20,739
type and it's fast enough so it works

00:49:17,969 --> 00:49:23,529
emacs you've seen it before sublime text

00:49:20,739 --> 00:49:25,659
2 and 3 there's a web debugger similar

00:49:23,529 --> 00:49:28,989
to the website one that supports

00:49:25,659 --> 00:49:31,419
completion using Jedi it's being

00:49:28,989 --> 00:49:34,749
integrated into kate and spider ID which

00:49:31,419 --> 00:49:37,119
is used for scientific stuff yeah that's

00:49:34,749 --> 00:49:39,819
basically it so we would appreciate it

00:49:37,119 --> 00:49:42,549
if you would use it if you report box if

00:49:39,819 --> 00:49:44,199
you integrate it into your ID and/or if

00:49:42,549 --> 00:49:47,279
you yeah if you just take a look at it

00:49:44,199 --> 00:49:47,279
okay thank

00:49:50,569 --> 00:50:01,260
by Daniel Oh bargain no last call for

00:49:55,589 --> 00:50:06,510
Luciano EP a-- Luo Tian is obviously not

00:50:01,260 --> 00:50:09,539
here I need radomir radomir who wants to

00:50:06,510 --> 00:50:13,890
talk about hot ought to go to the right

00:50:09,539 --> 00:50:15,869
one and a while Adam is setting up his

00:50:13,890 --> 00:50:19,829
computer with the help of three front

00:50:15,869 --> 00:50:23,010
seat gentlemen one more question what

00:50:19,829 --> 00:50:34,289
operating system do you prefer to use on

00:50:23,010 --> 00:50:35,819
your service first linux mac OS is it

00:50:34,289 --> 00:50:47,510
true that there's what windows is not

00:50:35,819 --> 00:50:47,510
even on the list PST wow commercial unix

00:50:47,569 --> 00:51:00,829
other okay i guess we'll all the queries

00:50:54,349 --> 00:51:00,829
yeah from my list so how's it going

00:51:03,860 --> 00:51:11,130
okay it takes time you're working on it

00:51:08,180 --> 00:51:13,520
last year on the last day of Europe

00:51:11,130 --> 00:51:16,170
heightened I went into the city and

00:51:13,520 --> 00:51:18,480
while walking I met a group of other

00:51:16,170 --> 00:51:20,730
euro pioneers also walking into the city

00:51:18,480 --> 00:51:23,700
so we formed the group to attack the

00:51:20,730 --> 00:51:27,530
city together and while walking we came

00:51:23,700 --> 00:51:30,840
across a shop that had newly opened and

00:51:27,530 --> 00:51:34,140
it looked beautiful especially had free

00:51:30,840 --> 00:51:37,230
food samples prepared but it was totally

00:51:34,140 --> 00:51:40,820
empty so we help those people and went

00:51:37,230 --> 00:51:43,950
in when took the free food samples and

00:51:40,820 --> 00:51:48,990
made it very crowded so they were rather

00:51:43,950 --> 00:51:51,000
happy and as we started the things going

00:51:48,990 --> 00:51:53,370
in that shop by eating the free food and

00:51:51,000 --> 00:51:55,920
also buying some stuff they were quite

00:51:53,370 --> 00:51:59,880
friendly and discussing with us and so

00:51:55,920 --> 00:52:02,450
we choked and I asked oh do you have a

00:51:59,880 --> 00:52:06,870
daughter who will inherit this shop

00:52:02,450 --> 00:52:09,570
which is not yet married because I also

00:52:06,870 --> 00:52:12,480
for inheritance as a way of getting

00:52:09,570 --> 00:52:14,820
Richie I'm object oriented and they said

00:52:12,480 --> 00:52:17,960
yeah yeah our daughter will inherit this

00:52:14,820 --> 00:52:20,580
shop and she's not yet married yeah here

00:52:17,960 --> 00:52:24,510
then the information camp you have to

00:52:20,580 --> 00:52:30,950
wait sometimes she's only five ok fine

00:52:24,510 --> 00:52:32,970
was waiting the bad thing this story got

00:52:30,950 --> 00:52:36,240
communicated and communicated and

00:52:32,970 --> 00:52:39,390
communicated and what landed was some

00:52:36,240 --> 00:52:43,410
fellow pioneers is that I tried to buy a

00:52:39,390 --> 00:52:46,440
five-year-old girl it's totally wrong I

00:52:43,410 --> 00:52:49,710
just wanted to inherit that shop our

00:52:46,440 --> 00:52:52,170
next speaker Adam grossa about parameter

00:52:49,710 --> 00:52:54,410
soap request are you ready Adam yep big

00:52:52,170 --> 00:52:54,410
hand

00:52:58,000 --> 00:53:05,290
so you may know the ZURB foundation

00:53:00,550 --> 00:53:08,930
repository which horse dope foundation

00:53:05,290 --> 00:53:11,960
it's open though test one two three one

00:53:08,930 --> 00:53:15,290
two three speak speak every fix it one

00:53:11,960 --> 00:53:19,700
two three one two three sweet my good

00:53:15,290 --> 00:53:23,960
okay so there is this ZT k sub toolkit

00:53:19,700 --> 00:53:31,490
which is hosted on the top foundation

00:53:23,960 --> 00:53:35,420
repositories okay thank you so probably

00:53:31,490 --> 00:53:38,240
you might not know it the ones who know

00:53:35,420 --> 00:53:40,430
know that there are some hidden gems in

00:53:38,240 --> 00:53:44,600
it so the problem was that everyone

00:53:40,430 --> 00:53:49,960
switch to pyramid but the packages did

00:53:44,600 --> 00:53:56,000
not work with parameter or two yeah fine

00:53:49,960 --> 00:53:59,710
so I made a package with allows you to

00:53:56,000 --> 00:54:01,970
use those hidden gems with pyramid I

00:53:59,710 --> 00:54:06,520
have implemented just the bare minimum

00:54:01,970 --> 00:54:06,520
attributes or methods which are needed

00:54:07,079 --> 00:54:14,530
biomed publisher request is based on the

00:54:11,170 --> 00:54:18,210
sub-base request which will help you

00:54:14,530 --> 00:54:21,010
with few handy methods we have the form

00:54:18,210 --> 00:54:25,049
attribute which you will feel which will

00:54:21,010 --> 00:54:31,660
get filled with the request parameters

00:54:25,049 --> 00:54:34,150
including the colon list conversion the

00:54:31,660 --> 00:54:38,109
environment attribute you'll get food we

00:54:34,150 --> 00:54:42,460
have keys and get method I omitted the

00:54:38,109 --> 00:54:45,970
cookies we have to get URL and

00:54:42,460 --> 00:54:48,430
annotations all other methods and

00:54:45,970 --> 00:54:53,140
attributes are mirrored from the pirate

00:54:48,430 --> 00:54:58,690
request the pirate publisher response we

00:54:53,140 --> 00:55:03,490
have get set add header method which

00:54:58,690 --> 00:55:06,970
will use casa to tweak because dope is

00:55:03,490 --> 00:55:11,710
studying the headers which destroyed the

00:55:06,970 --> 00:55:14,460
car set of the paralegal quest you also

00:55:11,710 --> 00:55:17,289
have get state to set status method all

00:55:14,460 --> 00:55:22,779
others are mirrors again from Miami

00:55:17,289 --> 00:55:26,130
response proof-of-concept xiii see form

00:55:22,779 --> 00:55:29,770
which is a form library works with

00:55:26,130 --> 00:55:33,910
permit for that i have to prepare or

00:55:29,770 --> 00:55:36,099
declare my layer which is based on the

00:55:33,910 --> 00:55:42,549
jealousy foam foam layer and browser

00:55:36,099 --> 00:55:46,470
requests decorate VD decorator which is

00:55:42,549 --> 00:55:51,490
included in the package as the layer and

00:55:46,470 --> 00:55:55,349
the rest is like any usual pyramid view

00:55:51,490 --> 00:56:00,210
declaration one important thing is that

00:55:55,349 --> 00:56:03,279
you better render the request with

00:56:00,210 --> 00:56:07,150
chameleon templates instead of the salt

00:56:03,279 --> 00:56:11,020
page template for that you should

00:56:07,150 --> 00:56:14,760
override dunder call method you just

00:56:11,020 --> 00:56:14,760
update and return an empty dick

00:56:15,079 --> 00:56:26,279
here is the fixed chameleon template

00:56:19,250 --> 00:56:28,670
we're usually the slashes are of the job

00:56:26,279 --> 00:56:32,970
page template are replaced with dot

00:56:28,670 --> 00:56:44,690
that's the only difference and that was

00:56:32,970 --> 00:56:49,020
it Oh fight and soap request I need ball

00:56:44,690 --> 00:56:51,089
three to get to the other stage do you

00:56:49,020 --> 00:56:57,390
know that people not choose as easy as 1

00:56:51,089 --> 00:57:03,089
1 2 3 and what we own bar chokes I'm

00:56:57,390 --> 00:57:06,089
really proud I got no joke writers I'm

00:57:03,089 --> 00:57:09,059
going in the big league a neutron walks

00:57:06,089 --> 00:57:11,700
into a bar drinks the beer asked for the

00:57:09,059 --> 00:57:18,059
price and Ibaka misses for you no charge

00:57:11,700 --> 00:57:23,059
I liked it more what's the simple stool

00:57:18,059 --> 00:57:26,400
to shape you simple stool for shaking

00:57:23,059 --> 00:57:30,480
Occam's razor Larry anything gimme

00:57:26,400 --> 00:57:32,730
weekend so rato me are you ready yes for

00:57:30,480 --> 00:57:36,500
Harvey key okay are we setting the

00:57:32,730 --> 00:57:36,500
lighting timer fake hand for our meal

00:57:38,240 --> 00:57:43,230
okay so this is my hobby project I've

00:57:41,220 --> 00:57:47,029
been doing it for several years already

00:57:43,230 --> 00:57:50,099
it's hot a wiki it's a wiki and ryne

00:57:47,029 --> 00:57:53,539
everybody used to write wiki and times

00:57:50,099 --> 00:57:56,490
back then so I'm trying to crowd but

00:57:53,539 --> 00:57:59,039
what is our key and I we can join it's a

00:57:56,490 --> 00:58:02,549
piece of software that lets you run with

00:57:59,039 --> 00:58:04,819
your website it can this particular one

00:58:02,549 --> 00:58:09,839
can run either on our server through a

00:58:04,819 --> 00:58:12,510
wsgi or look whiskey pepper sorry I'll

00:58:09,839 --> 00:58:16,079
row carry on a local hospital so using

00:58:12,510 --> 00:58:18,660
this simple comment from the command

00:58:16,079 --> 00:58:21,839
line and this particular week engine is

00:58:18,660 --> 00:58:23,549
a little bit different from others

00:58:21,839 --> 00:58:26,579
because it uses mercurial repository

00:58:23,549 --> 00:58:28,090
instead of a database to store all your

00:58:26,579 --> 00:58:30,850
pages

00:58:28,090 --> 00:58:35,200
so the pages are just txt files in your

00:58:30,850 --> 00:58:37,990
repository or images or whatever you put

00:58:35,200 --> 00:58:40,300
there and all the changes that you do

00:58:37,990 --> 00:58:45,970
all the edits are really committed to

00:58:40,300 --> 00:58:48,310
the repository and you can use vim or MX

00:58:45,970 --> 00:58:51,130
or whatever to edit the pages and do

00:58:48,310 --> 00:58:54,420
they commit and push it to the wiki and

00:58:51,130 --> 00:58:59,070
it will still appear as as wiki changes

00:58:54,420 --> 00:59:03,100
it's very simple there are no external

00:58:59,070 --> 00:59:05,290
features it's only the minimal that the

00:59:03,100 --> 00:59:12,580
minimum that you need to use it as a

00:59:05,290 --> 00:59:15,040
wiki and there are some example use

00:59:12,580 --> 00:59:17,230
cases you can use it you can use it for

00:59:15,040 --> 00:59:20,680
additional documentation so to let your

00:59:17,230 --> 00:59:23,770
users add some I don't know use it but

00:59:20,680 --> 00:59:26,380
and tutorials written by them and things

00:59:23,770 --> 00:59:28,530
like that for your project you can use

00:59:26,380 --> 00:59:31,750
it for collaboration on I don't know

00:59:28,530 --> 00:59:35,850
write a new pep and you need to somehow

00:59:31,750 --> 00:59:39,820
exchange notes on that you can finally

00:59:35,850 --> 00:59:41,680
use it with bitbucket wiki because with

00:59:39,820 --> 00:59:45,430
a big bucket repository you get a free

00:59:41,680 --> 00:59:47,950
wiki which also stores everything in a

00:59:45,430 --> 00:59:50,530
repository and you can check check out

00:59:47,950 --> 00:59:52,570
that repository but then you'll have no

00:59:50,530 --> 00:59:56,320
way of editing it other than through in

00:59:52,570 --> 00:59:59,470
you can use this wiki just you you just

00:59:56,320 --> 01:00:03,010
run it with an additional option to make

00:59:59,470 --> 01:00:06,400
it understand dot wiki pages as asuka

01:00:03,010 --> 01:00:08,830
pages and you can edit things locally on

01:00:06,400 --> 01:00:11,470
on the train on in the plane and then

01:00:08,830 --> 01:00:15,700
when you go back home push it big bucket

01:00:11,470 --> 01:00:19,480
and finally this presentation is made in

01:00:15,700 --> 01:00:21,520
its wiki so if you look at it this is

01:00:19,480 --> 01:00:26,560
just a page with links to particular

01:00:21,520 --> 01:00:29,590
slides and there is the slight page so

01:00:26,560 --> 01:00:31,480
you just click run the presentation it

01:00:29,590 --> 01:00:34,660
shows you this is an extension that I

01:00:31,480 --> 01:00:39,339
made and I make all my presentations in

01:00:34,660 --> 01:00:43,160
that about extending

01:00:39,339 --> 01:00:45,380
there is no plug-in system yet so but

01:00:43,160 --> 01:00:47,869
there are some hooks in the code so you

01:00:45,380 --> 01:00:51,109
extend it by wrapping it in some code

01:00:47,869 --> 01:00:53,809
that apps to those hope this is ugly as

01:00:51,109 --> 01:00:59,770
of now but i'm planning to add some

01:00:53,809 --> 01:01:03,920
plugins well the plans for the future is

01:00:59,770 --> 01:01:06,730
having some gallery of nice teams for it

01:01:03,920 --> 01:01:10,430
because people always like nice teams

01:01:06,730 --> 01:01:12,410
adding some plug in infrastructure for

01:01:10,430 --> 01:01:15,800
this so that it can be extended by

01:01:12,410 --> 01:01:17,930
people and in particular I want to write

01:01:15,800 --> 01:01:20,270
some more plugins for the different

01:01:17,930 --> 01:01:24,730
markups because right now it's basically

01:01:20,270 --> 01:01:27,680
wiki crawl and I want to and it also

01:01:24,730 --> 01:01:30,650
read super stressful to read text too

01:01:27,680 --> 01:01:33,650
and I want to add some more like mark

01:01:30,650 --> 01:01:37,900
down and textile and things like that it

01:01:33,650 --> 01:01:51,099
should be pretty easy and just try it

01:01:37,900 --> 01:01:55,849
thank you Hibiki I need geo chest dubis

01:01:51,099 --> 01:01:59,119
what has owner Andrea I guess it's the

01:01:55,849 --> 01:02:04,130
same one true editor and a true friend

01:01:59,119 --> 01:02:08,390
it's the same and the world great no oh

01:02:04,130 --> 01:02:13,369
while colleague is setting up a final

01:02:08,390 --> 01:02:15,319
call for Lucia Lucia please come to the

01:02:13,369 --> 01:02:21,130
stage snow or your package will be

01:02:15,319 --> 01:02:25,180
unloaded I heard that once last year in

01:02:21,130 --> 01:02:28,730
we're happy phosphorus go home in Prague

01:02:25,180 --> 01:02:30,619
they told me I have to run to the gate

01:02:28,730 --> 01:02:34,970
on my package my baggage will be

01:02:30,619 --> 01:02:41,029
unloaded now are you ready yeah for Rupe

01:02:34,970 --> 01:02:46,159
I 2013 in Budapest hello everyone

01:02:41,029 --> 01:02:48,289
I would like to invite you to a

01:02:46,159 --> 01:02:50,269
conference that will be in Budapest

01:02:48,289 --> 01:02:53,839
Hungary between the eleventh and

01:02:50,269 --> 01:02:56,569
thirteenth of October this year we have

01:02:53,839 --> 01:03:01,759
already a few great speakers that will

01:02:56,569 --> 01:03:03,799
speak on the conference and here is the

01:03:01,759 --> 01:03:08,029
ER the places that are waiting for you

01:03:03,799 --> 01:03:10,789
so my name is balaji and I am a

01:03:08,029 --> 01:03:15,619
developer and I am located oh my god

01:03:10,789 --> 01:03:17,479
what happened ok I have located in in

01:03:15,619 --> 01:03:21,259
Budapest so this is why I mean what with

01:03:17,479 --> 01:03:23,390
the organization so the conference is

01:03:21,259 --> 01:03:26,499
not only about Python it's an

01:03:23,390 --> 01:03:30,049
interesting combination of Python Ruby

01:03:26,499 --> 01:03:32,569
JavaScript and closure so this is very

01:03:30,049 --> 01:03:34,489
exciting because we are all working on

01:03:32,569 --> 01:03:36,949
the same problem so this gives a

01:03:34,489 --> 01:03:38,989
possibility for you also to learn what

01:03:36,949 --> 01:03:41,390
other developers are doing in the same

01:03:38,989 --> 01:03:43,279
field we are planning for 600

01:03:41,390 --> 01:03:46,549
participants the conference will be

01:03:43,279 --> 01:03:49,549
three days friday and saturday sunday

01:03:46,549 --> 01:03:50,869
the participation costs will be low

01:03:49,549 --> 01:03:53,119
because it's an eastern european

01:03:50,869 --> 01:03:55,309
conference so a lot of the participants

01:03:53,119 --> 01:03:57,289
are coming from the region so we have to

01:03:55,309 --> 01:04:00,650
keep the price is low and it's a

01:03:57,289 --> 01:04:03,969
non-profit open transparent community

01:04:00,650 --> 01:04:06,979
organized conference it has a history

01:04:03,969 --> 01:04:09,739
two years ago it was in Poland last year

01:04:06,979 --> 01:04:12,439
it was in the Czech Republic please feel

01:04:09,739 --> 01:04:17,449
free to visit our website at root pi dot

01:04:12,439 --> 01:04:20,509
EU and so you can get involved the call

01:04:17,449 --> 01:04:22,249
for talks is open sponsorship is open

01:04:20,509 --> 01:04:25,359
you are welcome to sponsor the

01:04:22,249 --> 01:04:29,059
conference tickets will open soon and

01:04:25,359 --> 01:04:32,449
Budapest is a great place to visit also

01:04:29,059 --> 01:04:35,419
follow us on Twitter and on Facebook so

01:04:32,449 --> 01:04:37,659
finally I I was thinking what what

01:04:35,419 --> 01:04:40,969
should I say about Budapest but I cannot

01:04:37,659 --> 01:04:44,209
talk about budapest in this short time

01:04:40,969 --> 01:04:45,979
so i just showed that so that I just

01:04:44,209 --> 01:04:48,829
point out that we have great places for

01:04:45,979 --> 01:04:51,450
partying so that's good for socializing

01:04:48,829 --> 01:04:56,750
and also the price for food and all

01:04:51,450 --> 01:04:56,750
is very affordable thank you very much

01:04:59,690 --> 01:05:07,200
thank you so much polish and for all the

01:05:04,170 --> 01:05:12,030
Chairman's Budapest has more to show

01:05:07,200 --> 01:05:13,980
them that one path that's just something

01:05:12,030 --> 01:05:18,560
Germans would understand there was a big

01:05:13,980 --> 01:05:23,520
insurance agency our next speaker is

01:05:18,560 --> 01:05:27,540
still fighting the next next all we are

01:05:23,520 --> 01:05:30,060
over he's the last he's the final

01:05:27,540 --> 01:05:32,310
speaker in the final lightning talk

01:05:30,060 --> 01:05:42,210
session in the final Europe heightened

01:05:32,310 --> 01:05:44,910
in Florence oh yeah how could you how

01:05:42,210 --> 01:05:46,890
could you push this now when I didn't

01:05:44,910 --> 01:05:52,170
prepare a choke to get them their mood

01:05:46,890 --> 01:05:54,570
organs up oh hell owner will save the

01:05:52,170 --> 01:05:59,820
world even if it's the last European

01:05:54,570 --> 01:06:03,360
your heart is on Thank You Mozilla for

01:05:59,820 --> 01:06:06,090
saving the world now you're ready okay

01:06:03,360 --> 01:06:08,240
your choice about per zona will save the

01:06:06,090 --> 01:06:08,240
world

01:06:24,590 --> 01:06:29,190
authentication is hard yesterday's it

01:06:26,970 --> 01:06:30,150
was two sessions in parallels that were

01:06:29,190 --> 01:06:33,480
talking both talking about

01:06:30,150 --> 01:06:36,720
authentication passwords and oh hold

01:06:33,480 --> 01:06:39,030
both were 45 minutes I'm going to try to

01:06:36,720 --> 01:06:41,850
to solve the problem in five minutes

01:06:39,030 --> 01:06:44,640
hopefully Mozilla are nice guys and they

01:06:41,850 --> 01:06:46,770
already solve the problem for us so

01:06:44,640 --> 01:06:51,420
fasten our is good for you it's good for

01:06:46,770 --> 01:06:54,180
you if your privacy paranoid because if

01:06:51,420 --> 01:06:58,110
you use open ID or oath I'm going to

01:06:54,180 --> 01:07:00,960
some website I try to to login and I

01:06:58,110 --> 01:07:02,970
with Maya so some of my account and I

01:07:00,960 --> 01:07:05,880
get this it asked me whether I want to

01:07:02,970 --> 01:07:08,010
log in or not and the evil man in the

01:07:05,880 --> 01:07:11,160
cloud knows where which site I have

01:07:08,010 --> 01:07:14,010
visited visited with personnel there

01:07:11,160 --> 01:07:16,230
will be some cryptographic details I go

01:07:14,010 --> 01:07:18,810
to some website and this pop-up appears

01:07:16,230 --> 01:07:20,670
but this puppet is on edge of in

01:07:18,810 --> 01:07:23,250
JavaScript and only in my browser it's

01:07:20,670 --> 01:07:26,070
not sub website I just enter my email

01:07:23,250 --> 01:07:28,080
address and personal contact the

01:07:26,070 --> 01:07:31,050
provider of my limit email address in

01:07:28,080 --> 01:07:33,540
this case is gmail and checks my

01:07:31,050 --> 01:07:36,150
identity and what's happened advanced

01:07:33,540 --> 01:07:38,730
from from there is that the email

01:07:36,150 --> 01:07:41,490
provider gives me or gives my brother

01:07:38,730 --> 01:07:43,920
some certificate something to to ensure

01:07:41,490 --> 01:07:46,260
that it's me and I use this certificate

01:07:43,920 --> 01:07:48,810
to sign an assertion that I give to the

01:07:46,260 --> 01:07:51,750
website a I'm this person and I'm trying

01:07:48,810 --> 01:07:54,660
to sign in the website check the

01:07:51,750 --> 01:07:57,150
assertion and your identity provider

01:07:54,660 --> 01:07:59,340
never knows that these at your visit is

01:07:57,150 --> 01:08:02,160
at sweat website only gave you a

01:07:59,340 --> 01:08:03,840
certificate so that's good because the

01:08:02,160 --> 01:08:06,270
evil mind in the cloud knows nothing in

01:08:03,840 --> 01:08:08,310
this case it's good for security partner

01:08:06,270 --> 01:08:10,860
it's because the website never handles

01:08:08,310 --> 01:08:15,360
any password so there is no password to

01:08:10,860 --> 01:08:18,420
still it's good for the user experience

01:08:15,360 --> 01:08:21,870
because any user can log with the email

01:08:18,420 --> 01:08:24,630
with a without any any password if their

01:08:21,870 --> 01:08:27,060
identity provider supports it or at

01:08:24,630 --> 01:08:30,120
least not a unique password for your

01:08:27,060 --> 01:08:32,190
website and it's good for pessimistic

01:08:30,120 --> 01:08:33,810
people the poll says it won't work

01:08:32,190 --> 01:08:36,210
because nobody will implement

01:08:33,810 --> 01:08:39,480
and they thought about that too because

01:08:36,210 --> 01:08:41,430
if you email provider is not a personal

01:08:39,480 --> 01:08:43,770
providers if provide the full-back

01:08:41,430 --> 01:08:45,750
providers so you can still use personal

01:08:43,770 --> 01:08:51,930
every anybody can use personal with an

01:08:45,750 --> 01:08:54,750
email address if your if your browser

01:08:51,930 --> 01:08:56,370
and because person I supposed to be to

01:08:54,750 --> 01:08:58,170
be in the browser but if your browser

01:08:56,370 --> 01:09:01,170
does not support personnel that provide

01:08:58,170 --> 01:09:05,130
a fallback implementation in JavaScript

01:09:01,170 --> 01:09:07,859
and if the website which is supposed to

01:09:05,130 --> 01:09:09,660
check the assertion doesn't have in the

01:09:07,859 --> 01:09:12,000
language of the of the application

01:09:09,660 --> 01:09:14,880
anything to check the assertion divisor

01:09:12,000 --> 01:09:18,050
there is an online online service and I

01:09:14,880 --> 01:09:20,700
an API to check the the assertion so

01:09:18,050 --> 01:09:24,569
everything is in place for personal to

01:09:20,700 --> 01:09:27,359
work right now it's more it's good for

01:09:24,569 --> 01:09:29,700
lazy people like me because implementing

01:09:27,359 --> 01:09:32,220
personal and implementing authentication

01:09:29,700 --> 01:09:34,950
in any application is just about adding

01:09:32,220 --> 01:09:37,470
three line of JavaScript and adding two

01:09:34,950 --> 01:09:40,080
views one view logging view that check

01:09:37,470 --> 01:09:42,390
the assertions the user gives and one

01:09:40,080 --> 01:09:45,420
log out you and that's it and it's even

01:09:42,390 --> 01:09:47,160
better for lazy fighting people because

01:09:45,420 --> 01:09:50,640
there are libraries in most web

01:09:47,160 --> 01:09:58,440
frameworks Django flask and the best one

01:09:50,640 --> 01:10:02,360
pyrimidine just check there's another

01:09:58,440 --> 01:10:02,360
talk for more information thanks

01:10:06,060 --> 01:10:12,910
house owner will save the world

01:10:08,940 --> 01:10:18,630
hopefully that concludes our lighting

01:10:12,910 --> 01:10:18,630
talk session please give all the speaker

01:10:24,840 --> 01:10:31,720
so we have still six minutes before the

01:10:28,990 --> 01:10:34,800
next potential point but I'm in charge

01:10:31,720 --> 01:10:37,930
of that too so I can use it but first

01:10:34,800 --> 01:10:41,860
please can all those guys in the yellow

01:10:37,930 --> 01:10:45,040
shirts come in I need all the organizers

01:10:41,860 --> 01:10:47,920
to come in before I announce the sprints

01:10:45,040 --> 01:10:50,440
so we can give the organized as a big

01:10:47,920 --> 01:10:54,220
thank you applause for creating this

01:10:50,440 --> 01:11:02,490
wonderful Europe heightened whoo can

01:10:54,220 --> 01:11:02,490
somebody shout then there were more fam

01:11:04,219 --> 01:11:06,280
Oh

01:11:08,650 --> 01:11:17,249
where the other is huge one commissioner

01:11:12,989 --> 01:11:19,079
you're not working rah so they will get

01:11:17,249 --> 01:11:22,800
the others who are working and by that

01:11:19,079 --> 01:11:25,590
we will be working introduction to the

01:11:22,800 --> 01:11:29,849
sprint tomorrow there'll be a lot of

01:11:25,590 --> 01:11:32,880
people sprinting I've got a list of

01:11:29,849 --> 01:11:36,420
sprints and I will ask the sprint

01:11:32,880 --> 01:11:39,719
Chairman's to just come into the front

01:11:36,420 --> 01:11:42,719
say hello so that the sprinters will see

01:11:39,719 --> 01:11:44,969
who is the chairman whom they follow

01:11:42,719 --> 01:11:50,150
tomorrow to find a room the first is a

01:11:44,969 --> 01:11:56,190
seep items print and it's your Malati

01:11:50,150 --> 01:12:00,710
it's your Malati are you here ok next

01:11:56,190 --> 01:12:00,710

YouTube URL: https://www.youtube.com/watch?v=WyKhMggzDB8


