Title: M  Hrnjadovic Get up to speed with OpenStack! Part 1
Publication date: 2015-04-18
Playlist: EuroPython 2013
Description: 
	[Europython 2013]
M  Hrnjadovic Get up to speed with OpenStack! Part 1
2  July 2013
TRACK pizza margherita
Captions: 
	00:00:14,980 --> 00:00:22,930
now we have a swap of a training room so

00:00:19,259 --> 00:00:25,590
our guest is a I don't dare to pronounce

00:00:22,930 --> 00:00:30,009
your name is too muharram honey are you

00:00:25,590 --> 00:00:32,349
okay thanks for wed well my name with a

00:00:30,009 --> 00:00:37,330
want to pronounce image rackspace that

00:00:32,349 --> 00:00:41,739
is your company yes 441 well we don't

00:00:37,330 --> 00:00:46,570
know about rackspace Spencer okay okay

00:00:41,739 --> 00:00:49,180
it's man backspacer is like a relatively

00:00:46,570 --> 00:00:52,840
tiny competitor facing Colossus like

00:00:49,180 --> 00:00:55,660
amazona in the cloud business how can we

00:00:52,840 --> 00:00:58,600
do that well probably we are really

00:00:55,660 --> 00:01:01,719
proud we're very brave in battle phase

00:00:58,600 --> 00:01:04,780
and we are using a lot and lots of open

00:01:01,719 --> 00:01:06,789
source instead of the other where are

00:01:04,780 --> 00:01:09,960
the competitor who are much more closer

00:01:06,789 --> 00:01:12,910
so can you to tell something about

00:01:09,960 --> 00:01:15,640
Rackspace as a company and as an

00:01:12,910 --> 00:01:18,190
employee so how do you feel working in

00:01:15,640 --> 00:01:23,619
that space your open culture and so on

00:01:18,190 --> 00:01:26,170
okay so how am i okay so good afternoon

00:01:23,619 --> 00:01:28,690
welcome to our OpenStack training I'm

00:01:26,170 --> 00:01:32,770
very very happy to see you you can in

00:01:28,690 --> 00:01:34,810
large numbers which is good so OpenStack

00:01:32,770 --> 00:01:38,050
is the project that you'll turn three

00:01:34,810 --> 00:01:40,209
years on July 19 so it's a very young

00:01:38,050 --> 00:01:43,509
project still it's a an open source

00:01:40,209 --> 00:01:46,450
project and it was established or

00:01:43,509 --> 00:01:51,569
OpenStack was founded jointly by NASA

00:01:46,450 --> 00:01:51,569
and by rec space almost two years ago so

00:01:52,349 --> 00:02:00,220
like by way of project history so NASA

00:01:57,720 --> 00:02:01,690
what was what na support our table was

00:02:00,220 --> 00:02:04,179
the nola component which is the

00:02:01,690 --> 00:02:09,220
equivalent of Amazon's compute service

00:02:04,179 --> 00:02:10,840
and rec space brought the Swift the

00:02:09,220 --> 00:02:14,319
object storage component into the

00:02:10,840 --> 00:02:16,720
project okay so shortly after the

00:02:14,319 --> 00:02:19,450
project was established i founded nasa

00:02:16,720 --> 00:02:21,310
withdrew from it though because so this

00:02:19,450 --> 00:02:25,110
is just not part of what what they want

00:02:21,310 --> 00:02:28,260
to do so nows is about you know

00:02:25,110 --> 00:02:30,510
about research in in space except etc so

00:02:28,260 --> 00:02:32,550
i said look via NASA you know it's not

00:02:30,510 --> 00:02:35,160
part of our mission to build an open

00:02:32,550 --> 00:02:38,340
source cloud and solar Express was left

00:02:35,160 --> 00:02:40,380
with OpenStack on its hands okay hello

00:02:38,340 --> 00:02:44,060
all the goodies for itself all the toys

00:02:40,380 --> 00:02:46,680
and decided that this is not a good

00:02:44,060 --> 00:02:48,210
vision not a good situation to be in

00:02:46,680 --> 00:02:52,709
also the workspace didn't want to play

00:02:48,210 --> 00:02:54,570
with itself and what we did instead is

00:02:52,709 --> 00:02:56,340
we established a foundation the

00:02:54,570 --> 00:02:58,350
OpenStack foundation and all of the

00:02:56,340 --> 00:03:00,000
OpenStack project or the intellectual

00:02:58,350 --> 00:03:03,209
property was transferred to the

00:03:00,000 --> 00:03:04,970
foundation and the foundation the

00:03:03,209 --> 00:03:09,510
governance structure of the foundation

00:03:04,970 --> 00:03:11,580
was designed so that you know that other

00:03:09,510 --> 00:03:14,970
companies could join or other players

00:03:11,580 --> 00:03:18,030
could join and engage in the project you

00:03:14,970 --> 00:03:20,700
know at the same level as as the project

00:03:18,030 --> 00:03:25,140
founders okay so shortly after the

00:03:20,700 --> 00:03:28,620
foundation was established many many

00:03:25,140 --> 00:03:31,110
companies joined like red hat IBM HP XXX

00:03:28,620 --> 00:03:33,720
cetera and now we have a quite a

00:03:31,110 --> 00:03:34,680
coalition as to give the if you look at

00:03:33,720 --> 00:03:37,140
the companies who are part of the

00:03:34,680 --> 00:03:39,750
foundation it's a it reads a bit like

00:03:37,140 --> 00:03:42,120
the who's who of IT with some notable

00:03:39,750 --> 00:03:44,190
exceptions okay and that's quite a

00:03:42,120 --> 00:03:46,950
success it's quite a feat I'm going to

00:03:44,190 --> 00:03:49,739
basically to form such a foundation such

00:03:46,950 --> 00:03:53,730
such such a coalition of IT companies

00:03:49,739 --> 00:03:55,799
and also to to unleash such an open

00:03:53,730 --> 00:03:58,049
source project within a short short

00:03:55,799 --> 00:04:00,750
period of time of only two years so the

00:03:58,049 --> 00:04:03,690
bottom line is you can go open and not

00:04:00,750 --> 00:04:05,790
to go to regret it no no I because as I

00:04:03,690 --> 00:04:07,140
said okay so when i joined Rackspace

00:04:05,790 --> 00:04:09,989
eight months ago I was talking to

00:04:07,140 --> 00:04:12,390
certain people and I said look this this

00:04:09,989 --> 00:04:14,820
foundation this project beasley allows

00:04:12,390 --> 00:04:17,519
us allows us to push to push the

00:04:14,820 --> 00:04:20,310
envelope in cloud computing I mean

00:04:17,519 --> 00:04:22,430
because this is a great example of

00:04:20,310 --> 00:04:25,650
companies who compete otherwise

00:04:22,430 --> 00:04:28,470
collaborating in inside the confines of

00:04:25,650 --> 00:04:30,390
an open source project and as such it is

00:04:28,470 --> 00:04:34,200
very much reminiscent of the Linux

00:04:30,390 --> 00:04:35,849
project and said like when IBM announced

00:04:34,200 --> 00:04:38,120
that they wants to base all of their

00:04:35,849 --> 00:04:40,190
cloud products on

00:04:38,120 --> 00:04:42,650
per sec this is the comparison they drew

00:04:40,190 --> 00:04:45,350
they said from our perspective OpenStack

00:04:42,650 --> 00:04:47,330
is the Linux of the cloud okay so this

00:04:45,350 --> 00:04:50,690
is this is this is the project is

00:04:47,330 --> 00:04:54,020
essentially nothing not so bad I say if

00:04:50,690 --> 00:04:56,090
you want to spend a few more words and

00:04:54,020 --> 00:04:57,860
more about focus on yourself so why

00:04:56,090 --> 00:04:59,870
Friday did you choose bite on as a

00:04:57,860 --> 00:05:03,050
language a favorite language okay okay

00:04:59,870 --> 00:05:08,030
and what you are going to talk about a

00:05:03,050 --> 00:05:10,400
class yes okay so so I sort of started

00:05:08,030 --> 00:05:13,610
looking at Python and Ruby like seven

00:05:10,400 --> 00:05:15,460
years ago and I know I had no

00:05:13,610 --> 00:05:18,979
preconceived notions on either language

00:05:15,460 --> 00:05:20,840
but then sort of i was turned away by

00:05:18,979 --> 00:05:22,729
python because of the order of the white

00:05:20,840 --> 00:05:24,979
space thingy I just thought this is

00:05:22,729 --> 00:05:26,539
stupid okay and then I looked at ruby

00:05:24,979 --> 00:05:28,910
ruby looked too much like paralysis or

00:05:26,539 --> 00:05:31,100
no I can't use this language so i slunk

00:05:28,910 --> 00:05:34,100
back to python and like after half a day

00:05:31,100 --> 00:05:37,669
this the white space just made all of

00:05:34,100 --> 00:05:39,440
census oh yeah she's cool and I i

00:05:37,669 --> 00:05:41,300
started using it and the more i use it

00:05:39,440 --> 00:05:43,820
the more i loved it and they just just

00:05:41,300 --> 00:05:45,830
enjoy i enjoy but in comparison so this

00:05:43,820 --> 00:05:51,320
is side the beginning of my journey into

00:05:45,830 --> 00:05:56,000
python so like I've been working in sort

00:05:51,320 --> 00:05:59,210
of in in open source project since 2008

00:05:56,000 --> 00:06:01,520
okay and smell this opportunity came

00:05:59,210 --> 00:06:03,349
along to join rec space and become part

00:06:01,520 --> 00:06:05,570
of the optic more than the post I

00:06:03,349 --> 00:06:08,000
grabbed the jumped on it and today I

00:06:05,570 --> 00:06:09,770
sent here in front of you and hopefully

00:06:08,000 --> 00:06:11,810
we can sort of spend a great afternoon

00:06:09,770 --> 00:06:15,919
together and dig into this thing okay

00:06:11,810 --> 00:06:19,660
okay few more rules a visa afternoon we

00:06:15,919 --> 00:06:22,669
be always with war Emma actually I i

00:06:19,660 --> 00:06:25,220
I've cohorts I've helpers will help me

00:06:22,669 --> 00:06:27,979
with certain aspects of so either Joe

00:06:25,220 --> 00:06:30,320
Gordon it's joe here okay so Joe is

00:06:27,979 --> 00:06:32,860
working with HP at this point he's a

00:06:30,320 --> 00:06:36,080
core contributor to the Nova project and

00:06:32,860 --> 00:06:39,680
he'll cover the Nova part and I have

00:06:36,080 --> 00:06:42,620
shmoo well he said that for a second

00:06:39,680 --> 00:06:43,940
okay so so the two main the two main

00:06:42,620 --> 00:06:46,190
components of a cloud will cover today

00:06:43,940 --> 00:06:48,840
is anova which is the compute service

00:06:46,190 --> 00:06:52,410
and Swift which is the object storage

00:06:48,840 --> 00:06:54,389
service okay so Joey will cover Nova and

00:06:52,410 --> 00:06:56,790
shmellow will cover Swift and both

00:06:54,389 --> 00:06:58,530
gentlemen our co contributors in the

00:06:56,790 --> 00:07:00,990
suspected area so you're very competent

00:06:58,530 --> 00:07:03,210
people who obviously teacher teacher

00:07:00,990 --> 00:07:06,690
stuff so I'll give I'll give a quick

00:07:03,210 --> 00:07:10,260
intro and I will once they finish I will

00:07:06,690 --> 00:07:12,150
I will just quickly cover some cloud

00:07:10,260 --> 00:07:13,770
architecture aspects like you know more

00:07:12,150 --> 00:07:15,570
generally like you know what should be

00:07:13,770 --> 00:07:16,910
the structure or architecture of a

00:07:15,570 --> 00:07:21,870
system you want to deploy in the cloud

00:07:16,910 --> 00:07:24,660
that's it ok one last thing if anyone

00:07:21,870 --> 00:07:26,639
has to ask a question you should just

00:07:24,660 --> 00:07:29,100
raise your hand then I will come and

00:07:26,639 --> 00:07:31,530
bring you a mic the this room is not you

00:07:29,100 --> 00:07:35,220
java without a microwave iska someone

00:07:31,530 --> 00:07:38,430
answer can listen to you so is a great

00:07:35,220 --> 00:07:40,139
risk to be just a bit one-sided not to

00:07:38,430 --> 00:07:42,389
mention that your question are going to

00:07:40,139 --> 00:07:45,630
be streaming as all these lessons as

00:07:42,389 --> 00:07:47,850
well so don't feel too what're also my

00:07:45,630 --> 00:07:49,830
legs aren't strong enough I come and

00:07:47,850 --> 00:07:53,430
break you of a micro every time it is

00:07:49,830 --> 00:07:55,590
needed okay okay so question number one

00:07:53,430 --> 00:07:58,500
is like who managed to come into the

00:07:55,590 --> 00:08:06,030
kickoff session this morning about the

00:07:58,500 --> 00:08:08,550
OpenStack kickoff ok cool so so because

00:08:06,030 --> 00:08:11,520
the plan sort of to dive straight in so

00:08:08,550 --> 00:08:13,530
I'm really absolutely maybe just talk

00:08:11,520 --> 00:08:14,789
about the general makeup of the open

00:08:13,530 --> 00:08:18,510
side project for maybe a cup of mint and

00:08:14,789 --> 00:08:23,729
then Joe will start the festivus part ok

00:08:18,510 --> 00:08:27,210
so OpenStack it's an open an open source

00:08:23,729 --> 00:08:30,000
cloud project and it's it's a it was it

00:08:27,210 --> 00:08:32,490
was built to be scalable to run on many

00:08:30,000 --> 00:08:34,849
many machines ok it was built as a

00:08:32,490 --> 00:08:37,650
distributed system from the outset and

00:08:34,849 --> 00:08:40,500
all the OpenStack components which you

00:08:37,650 --> 00:08:42,270
can see on the slide here ok because I

00:08:40,500 --> 00:08:43,560
talk to each other if they need to have

00:08:42,270 --> 00:08:47,339
interactions all these infections are

00:08:43,560 --> 00:08:50,240
asynchronous a message broker an aim QP

00:08:47,339 --> 00:08:53,910
message broker is used inside a system

00:08:50,240 --> 00:08:56,700
and again so the idea was that this

00:08:53,910 --> 00:08:58,500
system would run on hundreds of

00:08:56,700 --> 00:09:01,770
thousands of machine and be able to

00:08:58,500 --> 00:09:02,460
operate huge clouds so Rackspace also

00:09:01,770 --> 00:09:04,110
happens to be

00:09:02,460 --> 00:09:06,720
the biggest public openstack cloud

00:09:04,110 --> 00:09:10,140
provider today and they certainly

00:09:06,720 --> 00:09:11,820
operate and I not really allowed to say

00:09:10,140 --> 00:09:13,860
but we we certainly operated like tens

00:09:11,820 --> 00:09:17,340
of thousands of machines in on public

00:09:13,860 --> 00:09:20,280
cloud and so this software is was built

00:09:17,340 --> 00:09:23,850
that way ok so the components we will

00:09:20,280 --> 00:09:25,710
focus on today are nova which is the

00:09:23,850 --> 00:09:28,400
code name for the compute component okay

00:09:25,710 --> 00:09:30,570
and so Joe will take you through

00:09:28,400 --> 00:09:33,210
everything that Nova can do and some

00:09:30,570 --> 00:09:37,200
sort of the most important operations

00:09:33,210 --> 00:09:40,710
and Swift which is the object storage on

00:09:37,200 --> 00:09:43,770
the right hand side okay so if you ever

00:09:40,710 --> 00:09:49,770
use the Amazon Cloud so Nova is similar

00:09:43,770 --> 00:09:53,640
to ec2 and Swift is similar to s3 to a

00:09:49,770 --> 00:09:55,920
simple storage system they have okay so

00:09:53,640 --> 00:09:58,050
do you have any have any questions of

00:09:55,920 --> 00:10:01,710
general nature that city block asker's

00:09:58,050 --> 00:10:06,420
point or should we go dig straight into

00:10:01,710 --> 00:10:08,480
it okay the joy he could come to the

00:10:06,420 --> 00:10:08,480
front

00:10:25,459 --> 00:10:29,089
do you have an adapter

00:11:05,310 --> 00:11:12,250
ok so maybe phone to see if I wasn't in

00:11:08,380 --> 00:11:14,769
Jerusalem yeah so today we're a stock

00:11:12,250 --> 00:11:16,209
talk about Nova and for you guys how to

00:11:14,769 --> 00:11:18,610
use a nova itself and that's how to use

00:11:16,209 --> 00:11:20,410
that python nova client which is the

00:11:18,610 --> 00:11:23,019
bindings it's python bindings and the

00:11:20,410 --> 00:11:24,310
CLI for nova itself so this disclaimer

00:11:23,019 --> 00:11:26,560
here we thought it would be a few left

00:11:24,310 --> 00:11:27,730
people here we have access to a public

00:11:26,560 --> 00:11:29,769
cloud thanks to you know vincennes

00:11:27,730 --> 00:11:31,000
shmuel but there's not enough space for

00:11:29,769 --> 00:11:34,269
everybody on there so we may have to

00:11:31,000 --> 00:11:36,339
improvise a little later so so about me

00:11:34,269 --> 00:11:37,360
I'm OpenStack develop developer at HP

00:11:36,339 --> 00:11:40,360
and I've been working on it for about

00:11:37,360 --> 00:11:45,670
about one and a half to two years and

00:11:40,360 --> 00:11:48,370
I'm part of Nova Corps fortunately

00:11:45,670 --> 00:11:49,480
rendering here is a bit rough you can't

00:11:48,370 --> 00:11:51,459
see the bottom of the screen here but

00:11:49,480 --> 00:11:52,959
this is what the OpenStack architecture

00:11:51,459 --> 00:11:55,660
looks like overall so too big there's

00:11:52,959 --> 00:11:57,519
lots of pieces the dashboard compute

00:11:55,660 --> 00:12:00,120
image storage network and we're going to

00:11:57,519 --> 00:12:02,380
talk about how to use compute itself and

00:12:00,120 --> 00:12:05,500
on the bottom there is authentication

00:12:02,380 --> 00:12:06,970
that you can't see so we're going to

00:12:05,500 --> 00:12:08,800
talk about Nova this is the actual Nova

00:12:06,970 --> 00:12:10,149
architecture itself and we're not going

00:12:08,800 --> 00:12:11,740
to dive into actually how noble works

00:12:10,149 --> 00:12:13,360
today but we're going to talk about ooh

00:12:11,740 --> 00:12:14,740
use it there's a lot of pieces to it is

00:12:13,360 --> 00:12:16,510
the API server which you guys will enter

00:12:14,740 --> 00:12:18,160
8 interface with there's the Nova

00:12:16,510 --> 00:12:20,230
compute service which actually runs on

00:12:18,160 --> 00:12:22,920
each compute node so that actually be

00:12:20,230 --> 00:12:27,300
running kba more Zen or whatever it is

00:12:22,920 --> 00:12:29,970
there's stuff for console and V and see

00:12:27,300 --> 00:12:32,170
there's the database the message queue

00:12:29,970 --> 00:12:36,880
Nova conductor Nova schedule are both

00:12:32,170 --> 00:12:38,560
internal services scheduling and such so

00:12:36,880 --> 00:12:39,610
what does it ova actually do from the

00:12:38,560 --> 00:12:41,019
rest point of view from there's a lot

00:12:39,610 --> 00:12:42,819
more to it than this actually but this

00:12:41,019 --> 00:12:44,319
is from a consumer of no but this is

00:12:42,819 --> 00:12:46,060
what it does so there's a lot here that

00:12:44,319 --> 00:12:47,529
is not listed and there's those admin

00:12:46,060 --> 00:12:49,420
api's that's for you know somebody's

00:12:47,529 --> 00:12:50,529
applying OpenStack innova they need to

00:12:49,420 --> 00:12:53,500
do a whole bunch of things that you guys

00:12:50,529 --> 00:12:55,389
probably won't see but for a user it

00:12:53,500 --> 00:12:57,389
allows you to manage instances create an

00:12:55,389 --> 00:13:00,459
instant's pause instance shut it down

00:12:57,389 --> 00:13:03,610
snapshot etc allows you to assign an IP

00:13:00,459 --> 00:13:06,610
address a public or a private address or

00:13:03,610 --> 00:13:08,620
a static or fixed static or floating a

00:13:06,610 --> 00:13:10,389
lot of you manage manage key pairs for

00:13:08,620 --> 00:13:12,730
your instances if you log in with the

00:13:10,389 --> 00:13:14,769
key para nada password allows you to

00:13:12,730 --> 00:13:16,860
sign network to this is for bpc kind of

00:13:14,769 --> 00:13:18,730
system so you want to have a bunch of

00:13:16,860 --> 00:13:20,649
machines on the network to

00:13:18,730 --> 00:13:22,019
other well as you take snapshots of your

00:13:20,649 --> 00:13:25,329
instances you can boot from a snapshot

00:13:22,019 --> 00:13:26,949
restore from that etc and this is the

00:13:25,329 --> 00:13:29,949
overall the basic commands you could do

00:13:26,949 --> 00:13:31,209
with with openstack anova and so this is

00:13:29,949 --> 00:13:32,800
it looks very simple here but it's a lot

00:13:31,209 --> 00:13:37,420
more to it and there's a lot of nuance

00:13:32,800 --> 00:13:41,320
and subtleties and you know permutations

00:13:37,420 --> 00:13:42,550
of this so this is the Python novo

00:13:41,320 --> 00:13:43,630
client so if you guys are actually you

00:13:42,550 --> 00:13:46,240
want to do something your local machine

00:13:43,630 --> 00:13:48,639
it's on github and on pip so you just

00:13:46,240 --> 00:13:51,240
pip install python ova client and we

00:13:48,639 --> 00:13:53,139
said it's the CLI in the python library

00:13:51,240 --> 00:13:56,170
so hopefully this will work this

00:13:53,139 --> 00:13:57,459
actually only worked for 15 of you which

00:13:56,170 --> 00:13:59,160
turns out there's a bit more than 15

00:13:57,459 --> 00:14:05,350
people here so you may have to pair up

00:13:59,160 --> 00:14:07,120
in so one of the things Nova has a lot

00:14:05,350 --> 00:14:09,550
of OpenStack yourself as a lot of

00:14:07,120 --> 00:14:10,750
controls for the deployer to limit the

00:14:09,550 --> 00:14:12,310
system there's a billing system that's

00:14:10,750 --> 00:14:14,470
not mentioned here it's outside of Nova

00:14:12,310 --> 00:14:16,149
there's also a concept of quotas and so

00:14:14,470 --> 00:14:17,440
if you're a deployer you want to say you

00:14:16,149 --> 00:14:19,600
don't want to allow every user to spin

00:14:17,440 --> 00:14:20,829
up a thousand VMs because well you don't

00:14:19,600 --> 00:14:22,180
have the capacitor you don't trust them

00:14:20,829 --> 00:14:24,310
or you don't think they can pay the bill

00:14:22,180 --> 00:14:26,589
so in this case we actually have enough

00:14:24,310 --> 00:14:28,540
on to set up the code of 15 instances

00:14:26,589 --> 00:14:31,420
for our test user so only we can only

00:14:28,540 --> 00:14:32,290
spend up to 15 VMs but I guess more of

00:14:31,420 --> 00:14:33,430
you should be able to actually interact

00:14:32,290 --> 00:14:39,970
with it and roll it going to share the

00:14:33,430 --> 00:14:41,589
same user since there's just a demo so

00:14:39,970 --> 00:14:44,279
this is actually a vm running a tina

00:14:41,589 --> 00:14:46,750
Vance cloud so you should log into it

00:14:44,279 --> 00:14:48,819
that's the username and password and the

00:14:46,750 --> 00:14:49,990
IP address and so we're going to use

00:14:48,819 --> 00:14:52,660
that to do the development on so when

00:14:49,990 --> 00:14:53,889
you get into their Python novo planetary

00:14:52,660 --> 00:14:55,240
pre-installed and you can go ahead and

00:14:53,889 --> 00:14:57,399
make yourself a directory in the home

00:14:55,240 --> 00:14:59,250
directory and be nice to each other

00:14:57,399 --> 00:15:01,449
don't step on each other it's an m1 tiny

00:14:59,250 --> 00:15:03,519
we can expect this many people so

00:15:01,449 --> 00:15:05,829
hopefully it won't be too slow for

00:15:03,519 --> 00:15:08,130
everybody so i'll give her buddy minute

00:15:05,829 --> 00:15:08,130
to get in

00:15:18,120 --> 00:15:25,390
yes whatever you want this is this is a

00:15:23,710 --> 00:15:26,260
you know VMs ephemeral we're going to

00:15:25,390 --> 00:15:27,850
leave it right after so you can do

00:15:26,260 --> 00:15:29,290
whatever you want to it in theory

00:15:27,850 --> 00:15:31,300
everybody has sudo access please don't

00:15:29,290 --> 00:15:34,410
use it you can't really do any harm

00:15:31,300 --> 00:15:34,410
except to each other so

00:16:06,720 --> 00:16:13,660
a lot of users logged in so we're

00:16:11,500 --> 00:16:14,860
actually only be able to spin up 15 VMs

00:16:13,660 --> 00:16:16,660
at a time so that means if everybody's

00:16:14,860 --> 00:16:17,800
all these commands at once we'll have

00:16:16,660 --> 00:16:19,540
problems but you could actually do other

00:16:17,800 --> 00:16:20,590
commands I'm and interact with the

00:16:19,540 --> 00:16:22,150
system without spitting up a vm

00:16:20,590 --> 00:16:23,740
necessarily and so we'll have to

00:16:22,150 --> 00:16:26,050
coordinate about when who's putting up

00:16:23,740 --> 00:16:27,430
what vm and you'll see actually quota

00:16:26,050 --> 00:16:29,980
errors hopefully if everything went well

00:16:27,430 --> 00:16:35,980
so actually we should actually see the

00:16:29,980 --> 00:16:37,690
code is working from this I'm not doing

00:16:35,980 --> 00:16:43,870
anything I'm just making sure every base

00:16:37,690 --> 00:16:45,690
into the system that's all yeah this

00:16:43,870 --> 00:16:56,470
40-something users on here right now so

00:16:45,690 --> 00:16:57,790
that's all I'm doing what yeah I could I

00:16:56,470 --> 00:16:59,290
could put bull you'll see in a second I

00:16:57,790 --> 00:17:02,500
have some next slides will show that I'm

00:16:59,290 --> 00:17:05,020
starting over to get in so I have some

00:17:02,500 --> 00:17:07,449
sample these are you'll see some sample

00:17:05,020 --> 00:17:11,589
slides coming up so that's we're gonna

00:17:07,449 --> 00:17:12,730
basis how long so once I like to thank

00:17:11,589 --> 00:17:14,740
in advance for setting this up for us

00:17:12,730 --> 00:17:17,829
very generous to them Thank You schmoo

00:17:14,740 --> 00:17:23,980
all on the back so thanks to him we have

00:17:17,829 --> 00:17:27,670
this nice cloud to destroy so it's

00:17:23,980 --> 00:17:28,660
everybody mostly into the system okay so

00:17:27,670 --> 00:17:30,610
we're going to use this just because

00:17:28,660 --> 00:17:32,830
it's easier then presumably everybody

00:17:30,610 --> 00:17:33,880
here has a working version of pit but a

00:17:32,830 --> 00:17:35,830
bunch of doesn't always have kept

00:17:33,880 --> 00:17:36,970
working and so we just figured be easier

00:17:35,830 --> 00:17:40,170
just to have a box everybody could play

00:17:36,970 --> 00:17:40,170
around on that a vm for that

00:17:43,880 --> 00:17:50,600
so now that everybody's animals can go

00:17:45,470 --> 00:17:51,950
to basic things here so so booting a vm

00:17:50,600 --> 00:17:54,140
but the basic things are in trying to do

00:17:51,950 --> 00:17:55,460
today is we had a buddha vm and we're in

00:17:54,140 --> 00:17:57,530
log into it never interests or destroyed

00:17:55,460 --> 00:17:58,880
nothing too crazy I'm although if you

00:17:57,530 --> 00:18:00,890
guys have time you which I think we will

00:17:58,880 --> 00:18:02,990
probably go over and play around with

00:18:00,890 --> 00:18:04,340
some more things and so booting a vm

00:18:02,990 --> 00:18:06,620
there's a bit more to it and you have to

00:18:04,340 --> 00:18:07,850
add a key pair so you can log in find

00:18:06,620 --> 00:18:10,240
out what instance type you want to

00:18:07,850 --> 00:18:12,620
create etc and we'll go through that too

00:18:10,240 --> 00:18:15,140
so this is the CLI so actually this

00:18:12,620 --> 00:18:17,090
image doesn't exist on this system but

00:18:15,140 --> 00:18:19,280
this is a sample so this is how you

00:18:17,090 --> 00:18:22,160
Buddha and with the CLI which is there

00:18:19,280 --> 00:18:24,230
if you type in nova onto the system

00:18:22,160 --> 00:18:27,200
it'll just show up you should see a help

00:18:24,230 --> 00:18:29,780
message so Nova boot the debug flags on

00:18:27,200 --> 00:18:32,270
just for testing Nova boot flavor image

00:18:29,780 --> 00:18:33,560
key name instance name and so that's the

00:18:32,270 --> 00:18:39,500
basic command and we're into the same

00:18:33,560 --> 00:18:41,720
thing in the Python library itself and

00:18:39,500 --> 00:18:43,490
it's a bit bigger as you can see a bunch

00:18:41,720 --> 00:18:47,660
of this is amor go through what this all

00:18:43,490 --> 00:18:50,210
means so actually what you guys could do

00:18:47,660 --> 00:18:52,940
already is type in Nova list on your

00:18:50,210 --> 00:18:54,230
system and i want to show you this

00:18:52,940 --> 00:18:56,150
actually instance running on here which

00:18:54,230 --> 00:18:57,500
is your instance are all on so anybody

00:18:56,150 --> 00:18:58,550
could delete that so please don't delete

00:18:57,500 --> 00:19:02,290
it otherwise are all going to kill

00:18:58,550 --> 00:19:02,290
yourselves so beware

00:19:11,470 --> 00:19:15,500
sorry I forgot this one step first we

00:19:14,180 --> 00:19:17,000
have that open RC following your home

00:19:15,500 --> 00:19:20,510
directory so the first thing you want to

00:19:17,000 --> 00:19:21,620
do is you want to source that and that's

00:19:20,510 --> 00:19:28,130
your this is the credentials you

00:19:21,620 --> 00:19:30,740
actually cat it so this is the

00:19:28,130 --> 00:19:32,090
credentials and you can actually this is

00:19:30,740 --> 00:19:33,500
how you this is the information need to

00:19:32,090 --> 00:19:36,260
get into the system so your username

00:19:33,500 --> 00:19:45,460
your tenant password and then the auth

00:19:36,260 --> 00:19:45,460
URL which is the Keystone service yeah

00:19:50,390 --> 00:19:55,520
so I can't eat here unfortunately but

00:19:53,540 --> 00:19:57,170
the tenant is so there's usernames and

00:19:55,520 --> 00:19:59,420
attendance another names for a project

00:19:57,170 --> 00:20:01,070
so they be multiple users could have a

00:19:59,420 --> 00:20:03,320
user may be part of several different

00:20:01,070 --> 00:20:05,270
projects or tenants and so you could the

00:20:03,320 --> 00:20:07,820
quotas are applied could be applied /

00:20:05,270 --> 00:20:08,780
projects you say these users are all and

00:20:07,820 --> 00:20:11,240
this project that they could share

00:20:08,780 --> 00:20:13,220
information they could share VMS and

00:20:11,240 --> 00:20:16,340
such a way of you know it's a working

00:20:13,220 --> 00:20:17,360
group so we're all 110 in tier and in

00:20:16,340 --> 00:20:18,440
this case were all want to user but if

00:20:17,360 --> 00:20:20,420
this is a real system you would have

00:20:18,440 --> 00:20:23,270
different usernames and all one tenants

00:20:20,420 --> 00:20:25,280
and so that that information is shared

00:20:23,270 --> 00:20:27,110
in the compute image in all the storage

00:20:25,280 --> 00:20:28,820
and network system so that the user name

00:20:27,110 --> 00:20:32,290
intended information is passed around so

00:20:28,820 --> 00:20:32,290
it works for the whole system

00:20:40,430 --> 00:20:46,970
is there a cable I could steal to get

00:20:43,860 --> 00:20:46,970
faster internet anybody

00:20:53,500 --> 00:21:06,010
because the Wi-Fi here as terrible as

00:20:55,210 --> 00:21:13,240
you guys know there we go your phone for

00:21:06,010 --> 00:21:14,560
cool so much i can give this over so

00:21:13,240 --> 00:21:17,320
this is I want to show you guys an oval

00:21:14,560 --> 00:21:19,480
list and this is our box that box you

00:21:17,320 --> 00:21:21,400
see that's the name of it so please

00:21:19,480 --> 00:21:29,710
don't destroy this me out if you do know

00:21:21,400 --> 00:21:32,230
bud or delete deb box it'll okay yeah

00:21:29,710 --> 00:21:39,240
okay here is okay the connection works

00:21:32,230 --> 00:21:39,240
yeah it's great okay yeah

00:21:43,109 --> 00:21:46,179
no you know this is I'm just showing you

00:21:45,159 --> 00:21:47,950
that this is the machine they were all

00:21:46,179 --> 00:21:49,869
using so i went ahead and before this

00:21:47,950 --> 00:21:51,070
and i logged into the system when i

00:21:49,869 --> 00:21:52,599
created instance for everybody to use

00:21:51,070 --> 00:21:54,779
and that's the development box for using

00:21:52,599 --> 00:21:54,779
right now

00:22:12,100 --> 00:22:17,860
so we'll get back to that in a second so

00:22:16,179 --> 00:22:19,470
the anatomy of a boot command so this is

00:22:17,860 --> 00:22:21,669
that same command that we showed before

00:22:19,470 --> 00:22:22,900
and just a few steps the first steps you

00:22:21,669 --> 00:22:25,030
get a token so you have a username and

00:22:22,900 --> 00:22:28,630
password and the system internally uses

00:22:25,030 --> 00:22:29,799
a token to confirm who the user is and

00:22:28,630 --> 00:22:31,720
so the first thing we do is we talk to

00:22:29,799 --> 00:22:33,070
Keystone and we get a token back so we

00:22:31,720 --> 00:22:34,690
tell Keystone this is our username the

00:22:33,070 --> 00:22:36,640
cert credentials and goes here's a token

00:22:34,690 --> 00:22:37,960
to talk to the rest of the system now we

00:22:36,640 --> 00:22:40,059
have this image name but that's not how

00:22:37,960 --> 00:22:41,950
Nova actually recognizes images so you

00:22:40,059 --> 00:22:43,090
have to look up the image name so you

00:22:41,950 --> 00:22:44,409
take the image thing to look for the ID

00:22:43,090 --> 00:22:46,450
that you need to use to actually pass

00:22:44,409 --> 00:22:48,850
into the boot command and the same thing

00:22:46,450 --> 00:22:50,200
for the flavor over here and one tiny

00:22:48,850 --> 00:22:51,640
that's not this also the name of you

00:22:50,200 --> 00:22:53,620
Minh would use and not the system would

00:22:51,640 --> 00:22:55,929
use so you're also looking up the flavor

00:22:53,620 --> 00:22:57,280
name on the system and finally we have

00:22:55,929 --> 00:23:00,039
all information we need we have the

00:22:57,280 --> 00:23:02,679
image the flavor and our token now we

00:23:00,039 --> 00:23:03,700
can actually talk to Nova again until it

00:23:02,679 --> 00:23:06,030
to boot the system you send a post

00:23:03,700 --> 00:23:06,030
command

00:23:12,610 --> 00:23:18,760
maybe if you wrote your console from the

00:23:14,950 --> 00:23:26,490
front and did like no no I flavor list

00:23:18,760 --> 00:23:26,490
yeah yeah I'll do it very one second

00:24:02,870 --> 00:24:09,050
so we source the first this is that file

00:24:07,580 --> 00:24:13,250
we showed so this is the username tenant

00:24:09,050 --> 00:24:17,720
password in the URL um actually made

00:24:13,250 --> 00:24:18,710
sort of take one step back here so

00:24:17,720 --> 00:24:20,570
there's actually another thing here

00:24:18,710 --> 00:24:22,910
which is the dashboard and if this all

00:24:20,570 --> 00:24:23,840
works we can actually see it so I see

00:24:22,910 --> 00:24:25,880
three of you already went and created

00:24:23,840 --> 00:24:27,260
hit instance which is good for you and

00:24:25,880 --> 00:24:29,240
we'll get to do that for the rest of

00:24:27,260 --> 00:24:32,720
people in a minute so this is our quota

00:24:29,240 --> 00:24:35,059
here so we have four instances 20 CPUs a

00:24:32,720 --> 00:24:39,440
bunch of ram etc and we can see somebody

00:24:35,059 --> 00:24:41,059
hears their instance over here and so

00:24:39,440 --> 00:24:42,140
we'll get to how this is this is another

00:24:41,059 --> 00:24:43,309
way for you to interact with the system

00:24:42,140 --> 00:24:44,929
in this case we're actually going to

00:24:43,309 --> 00:24:47,110
focus on just the CLI and the Python

00:24:44,929 --> 00:24:47,110
client

00:24:56,890 --> 00:25:04,630
so we type in Nova to get this big

00:24:58,620 --> 00:25:09,400
message here and these are all the

00:25:04,630 --> 00:25:14,620
commands we have so some limits some

00:25:09,400 --> 00:25:16,240
administration tools for the admin some

00:25:14,620 --> 00:25:27,270
assorted other tools we're not going to

00:25:16,240 --> 00:25:27,270
focus on today yeah that do not work

00:25:31,399 --> 00:25:38,119
so some commands for the IP floating eye

00:25:33,619 --> 00:25:40,549
peas fixed IPS flavors images are here

00:25:38,119 --> 00:25:47,629
to etc and so going to focus on the

00:25:40,549 --> 00:25:48,589
small subset of these commands today so

00:25:47,629 --> 00:25:50,659
the first thing you do is get actually

00:25:48,589 --> 00:25:52,989
see the flavor list here and just make

00:25:50,659 --> 00:25:52,989
this bigger

00:25:57,500 --> 00:26:01,310
so here's our different flavor options

00:25:59,090 --> 00:26:03,710
so we're all going to focus on either m1

00:26:01,310 --> 00:26:06,410
smaller and one tiny because they have

00:26:03,710 --> 00:26:09,380
one virtual CPU and we only have space

00:26:06,410 --> 00:26:11,240
for 24 virtual CPUs who don't to do if

00:26:09,380 --> 00:26:14,090
you know two people do extra extra

00:26:11,240 --> 00:26:15,650
larges then we're sort of done so this

00:26:14,090 --> 00:26:17,810
is all configurable configurable by the

00:26:15,650 --> 00:26:19,280
admin so this actually commands Novak

00:26:17,810 --> 00:26:21,770
Novak line commands to actually control

00:26:19,280 --> 00:26:23,960
all these but you don't have access to

00:26:21,770 --> 00:26:27,320
do that and that's all block for regular

00:26:23,960 --> 00:26:28,670
teacher that's a band only the second

00:26:27,320 --> 00:26:30,950
part we need to know is the image list

00:26:28,670 --> 00:26:31,970
so what kind of imagery booting up and

00:26:30,950 --> 00:26:33,680
we see we have a bunch of options here

00:26:31,970 --> 00:26:34,970
and you can pick anything you want I'm

00:26:33,680 --> 00:26:37,250
not sure if the windows when will work

00:26:34,970 --> 00:26:38,930
for us I don't have any extra stuff

00:26:37,250 --> 00:26:40,910
haven't tried that yet but we have you

00:26:38,930 --> 00:26:42,920
know the basics debian fedora Red Hat

00:26:40,910 --> 00:26:44,180
and there's also commands in glands to

00:26:42,920 --> 00:26:46,040
load your own images so glance is the

00:26:44,180 --> 00:26:47,420
image service and this command actually

00:26:46,040 --> 00:26:50,650
although it's innova command it's

00:26:47,420 --> 00:26:50,650
actually going to glance underneath

00:26:55,800 --> 00:26:59,250
so now we're going to walk through these

00:26:57,210 --> 00:27:06,120
basic commands over here and actually

00:26:59,250 --> 00:27:08,550
how to talk to the museum python so the

00:27:06,120 --> 00:27:12,330
first thing is you need to source your

00:27:08,550 --> 00:27:14,370
RC file here so hopefully a bunch of you

00:27:12,330 --> 00:27:17,160
already done that and then this is that

00:27:14,370 --> 00:27:19,500
to actually talk to the talk to the

00:27:17,160 --> 00:27:22,770
system we have to import noble clients

00:27:19,500 --> 00:27:25,010
and so we're going to use the this is

00:27:22,770 --> 00:27:25,010
cut off

00:27:28,710 --> 00:27:32,290
there you go

00:27:30,520 --> 00:27:33,940
so this is the basic command to actually

00:27:32,290 --> 00:27:35,140
authenticate to the system so with this

00:27:33,940 --> 00:27:37,180
commit this block the code will do it

00:27:35,140 --> 00:27:38,920
will talk two keys don't get a token so

00:27:37,180 --> 00:27:40,360
the first thing here is we import OS and

00:27:38,920 --> 00:27:42,070
Nova client I guess don't need the OS

00:27:40,360 --> 00:27:45,010
here but we import the noble clients

00:27:42,070 --> 00:27:47,590
we're using the V 11.1 burgeon noble

00:27:45,010 --> 00:27:48,970
client it's the only version there you

00:27:47,590 --> 00:27:51,670
don't need to actually import version

00:27:48,970 --> 00:27:53,200
1.1 but we're going to do it for now and

00:27:51,670 --> 00:27:54,660
want to get their credentials so we're

00:27:53,200 --> 00:27:57,490
just getting them from the environment

00:27:54,660 --> 00:27:59,740
sorry resource that RC file that makes

00:27:57,490 --> 00:28:03,310
things easier in our situation so we're

00:27:59,740 --> 00:28:05,620
importing the username password off URL

00:28:03,310 --> 00:28:07,990
tenant etc and so the first thing to do

00:28:05,620 --> 00:28:09,760
is you create a client so create a

00:28:07,990 --> 00:28:11,470
client and pass in the credentials and

00:28:09,760 --> 00:28:12,730
then we run Nova attend to Kate and that

00:28:11,470 --> 00:28:14,380
will actually talk to the system talk

00:28:12,730 --> 00:28:16,390
two keys don't get a token back so if

00:28:14,380 --> 00:28:18,370
you have the wrong configuration there

00:28:16,390 --> 00:28:20,710
if you pass in a bad password that I'll

00:28:18,370 --> 00:28:21,790
actually throw error on you so let's all

00:28:20,710 --> 00:28:26,040
try that now and see if you could

00:28:21,790 --> 00:28:26,040
actually get no both enter Kate passing

00:29:00,080 --> 00:29:16,580
um not right now no um yeah do this yeah

00:29:14,000 --> 00:29:20,269
so I have it if you click on this link

00:29:16,580 --> 00:29:21,950
over here dot github do and it's the

00:29:20,269 --> 00:29:23,899
slides at the bottom so everything's

00:29:21,950 --> 00:29:25,220
there but the username and password for

00:29:23,899 --> 00:29:28,250
the vm we use because i'm not going to

00:29:25,220 --> 00:29:36,260
put that up on github but everything

00:29:28,250 --> 00:29:38,649
else should be there I'm sorry about the

00:29:36,260 --> 00:29:38,649
color choice

00:30:22,510 --> 00:30:27,310
yes unfortunately it doesn't have any

00:30:25,040 --> 00:30:36,050
crazy print statements in there

00:30:27,310 --> 00:30:38,000
unfortunately for our situation it's its

00:30:36,050 --> 00:30:39,500
internal right now yeah so we're action

00:30:38,000 --> 00:30:41,420
that it's inside the Nova object the

00:30:39,500 --> 00:30:43,940
client itself and they'll get past it

00:30:41,420 --> 00:30:47,870
all around for you so you can actually

00:30:43,940 --> 00:30:49,100
tries if you put in a make something

00:30:47,870 --> 00:30:50,930
wrong with the parameters and the get

00:30:49,100 --> 00:30:52,310
Nova creds and you put something in

00:30:50,930 --> 00:30:55,210
there have a wrong username and password

00:30:52,310 --> 00:30:55,210
you'll see an error

00:31:02,950 --> 00:31:07,230
so here's the example of doing it wrong

00:31:11,399 --> 00:31:16,990
so I have a typo in here so you see so

00:31:15,159 --> 00:31:18,940
have the wrong api key here the password

00:31:16,990 --> 00:31:22,510
and so this shows you what looks like

00:31:18,940 --> 00:31:26,669
when it's wrong so we try logging in and

00:31:22,510 --> 00:31:26,669
we get an authorized error message

00:31:33,250 --> 00:31:36,420
and then that's working

00:32:31,630 --> 00:32:34,900
so one thing we actually do is you get

00:32:33,100 --> 00:32:36,100
and Python with the dash I flag so it

00:32:34,900 --> 00:32:37,690
jumps into the interpreter at the end

00:32:36,100 --> 00:32:39,640
and so let's actually give us a

00:32:37,690 --> 00:32:42,370
interpreter with the Nova object

00:32:39,640 --> 00:32:43,240
initialize and have the client there so

00:32:42,370 --> 00:32:45,010
you can see here some people have

00:32:43,240 --> 00:32:46,300
already started building some instances

00:32:45,010 --> 00:32:50,350
and you can actually try this out and do

00:32:46,300 --> 00:32:55,770
different commands like servers list or

00:32:50,350 --> 00:32:55,770
flavors lists etc

00:34:07,690 --> 00:34:14,919
so has everybody got in this working yet

00:34:09,339 --> 00:34:20,440
or are we still working on it I take

00:34:14,919 --> 00:34:22,770
that as a no people are still busy any

00:34:20,440 --> 00:34:22,770
questions

00:34:27,060 --> 00:34:36,550
yes thank you I have a virtual machine

00:34:34,750 --> 00:34:38,440
and I'm so am I supposed to be able to

00:34:36,550 --> 00:34:42,429
ssh to it I got the username and

00:34:38,440 --> 00:34:45,880
password there yes so for this this VM

00:34:42,429 --> 00:34:47,350
actually there's SS ages and they is you

00:34:45,880 --> 00:34:49,390
log in with the password disabled for

00:34:47,350 --> 00:34:51,130
this system so we have ssh keys only

00:34:49,390 --> 00:34:52,360
actually to get the system for you guys

00:34:51,130 --> 00:34:54,580
to log into this vm I how to go and

00:34:52,360 --> 00:34:56,950
change that stage config so the next

00:34:54,580 --> 00:34:58,900
step actual get to is how to add a SS

00:34:56,950 --> 00:35:04,630
key to create a new ssh key or add your

00:34:58,900 --> 00:35:09,600
own right so you have to do it before

00:35:04,630 --> 00:35:14,290
hand so you it uses the Amazon ec2 style

00:35:09,600 --> 00:35:16,780
SSH key system so there's a cloud init

00:35:14,290 --> 00:35:19,810
script that runs outside the vm then

00:35:16,780 --> 00:35:21,310
it'll pull down your ssh key so the next

00:35:19,810 --> 00:35:22,480
step is loading this loading to keep

00:35:21,310 --> 00:35:24,600
Aaron and we'll talk we'll get to that

00:35:22,480 --> 00:35:24,600
next

00:35:31,800 --> 00:35:35,250
yes you could create a credit instance

00:35:33,870 --> 00:35:39,990
very easily that doesn't have any way to

00:35:35,250 --> 00:35:43,080
get into it so is this everybody ready

00:35:39,990 --> 00:35:44,340
for this or no okay so now that we're

00:35:43,080 --> 00:35:46,740
into the system it can actually see the

00:35:44,340 --> 00:35:47,820
flavors and images we need to create a

00:35:46,740 --> 00:35:49,950
key pair if you get in so this is

00:35:47,820 --> 00:35:51,570
actually the command if you're on your

00:35:49,950 --> 00:35:53,520
local system to add your local key pair

00:35:51,570 --> 00:35:55,140
in so there's two ways of getting a key

00:35:53,520 --> 00:35:57,210
pair in the system either at your own

00:35:55,140 --> 00:35:59,160
keep air from your local system at SSH

00:35:57,210 --> 00:36:01,860
forwarded in or you can actually have

00:35:59,160 --> 00:36:03,270
Nova generated key pair for you so this

00:36:01,860 --> 00:36:04,950
is actually the co not to generate to

00:36:03,270 --> 00:36:06,390
keep hair this is to add your own but

00:36:04,950 --> 00:36:09,230
i'll show you how to generate generated

00:36:06,390 --> 00:36:09,230
key pair as well

00:36:19,480 --> 00:36:22,900
so to use this system we need to keep

00:36:20,830 --> 00:36:25,270
air so we're gonna list the key pairs

00:36:22,900 --> 00:36:32,350
existing let me see somebody demo key is

00:36:25,270 --> 00:36:33,340
already added his in the first steps if

00:36:32,350 --> 00:36:38,070
your key pair is not there you want to

00:36:33,340 --> 00:36:38,070
create one so you create a key pair

00:36:38,609 --> 00:36:45,970
something like that and now we see it's

00:36:42,640 --> 00:36:48,190
in the system then you can actually get

00:36:45,970 --> 00:36:55,660
the private key which will need to use

00:36:48,190 --> 00:36:58,859
to login with and that's stored in the

00:36:55,660 --> 00:36:58,859
private key variable over here

00:37:06,470 --> 00:37:09,050
this is the other way of doing it here

00:37:07,820 --> 00:37:11,000
is actually to actually upload your

00:37:09,050 --> 00:37:12,080
public key instead and so that way the

00:37:11,000 --> 00:37:13,970
system won't actually have your private

00:37:12,080 --> 00:37:16,490
key in it and they'll only be only your

00:37:13,970 --> 00:37:17,599
public you will be inside of Nova so if

00:37:16,490 --> 00:37:23,150
you don't want to put your private key

00:37:17,599 --> 00:37:24,770
everywhere and this will obviously not

00:37:23,150 --> 00:37:25,940
work on the vm unless you create up key

00:37:24,770 --> 00:37:28,520
pair for everybody which we don't want

00:37:25,940 --> 00:37:29,630
to do so you need to copy your public

00:37:28,520 --> 00:37:31,780
key into the system first or something

00:37:29,630 --> 00:37:31,780
like that

00:37:35,790 --> 00:37:38,720
any questions

00:37:41,940 --> 00:37:45,700
delete we'll get to that in a second if

00:37:44,710 --> 00:37:48,480
you download the slides you can actually

00:37:45,700 --> 00:37:48,480
skip ahead if you want

00:39:06,460 --> 00:39:11,650
does it use slippers or is it confuses

00:39:09,760 --> 00:39:13,660
native p.m.

00:39:11,650 --> 00:39:15,400
the use of Lewbert although there's

00:39:13,660 --> 00:39:16,810
other back-end cardoni's levert i'm not

00:39:15,400 --> 00:39:20,110
sure what this cloud uses but i assume

00:39:16,810 --> 00:39:22,510
it's kb m and levert yeah so there is

00:39:20,110 --> 00:39:24,640
back end for Lewbert this alex c

00:39:22,510 --> 00:39:27,820
supported that there's hyper-v support

00:39:24,640 --> 00:39:29,440
outside alavert Zen side of i think in

00:39:27,820 --> 00:39:35,020
and outside of both inside and outside

00:39:29,440 --> 00:39:36,130
of work you name it it's in there I bmz

00:39:35,020 --> 00:39:51,880
system just try to get in there too i

00:39:36,130 --> 00:39:54,850
think right now sorry ok so i asked to

00:39:51,880 --> 00:39:56,710
open solaris i am not sure if that one's

00:39:54,850 --> 00:39:59,440
there and we pull up the page it has all

00:39:56,710 --> 00:40:01,270
the okay i'll just check it's not those

00:39:59,440 --> 00:40:02,950
ovens a quickie called wicked open sat

00:40:01,270 --> 00:40:10,900
org all right Holly can find it on there

00:40:02,950 --> 00:40:12,100
okay so one of the things that people

00:40:10,900 --> 00:40:13,570
like about OpenStack especially for

00:40:12,100 --> 00:40:15,550
deployers that it's there's many many

00:40:13,570 --> 00:40:16,540
backends and so if you have your own you

00:40:15,550 --> 00:40:18,100
can choose whatever you want on the back

00:40:16,540 --> 00:40:20,910
end so the API is all the same but the

00:40:18,100 --> 00:40:20,910
back ends are all very different

00:40:28,849 --> 00:40:31,220
so it looks like we're mostly the way

00:40:30,229 --> 00:40:36,410
they're here for the key pairs we're

00:40:31,220 --> 00:40:38,390
going to go to the next step so now we

00:40:36,410 --> 00:40:41,029
need to find get the flavor object we

00:40:38,390 --> 00:40:42,979
want to use so you can list the flavors

00:40:41,029 --> 00:40:44,420
here nova flavors list and then you

00:40:42,979 --> 00:40:46,849
could find the flavor you want to m1

00:40:44,420 --> 00:40:49,009
tiny or another flavor please use one

00:40:46,849 --> 00:40:51,380
only has one virtual CPU and nothing

00:40:49,009 --> 00:40:54,009
more so let's just stick with it and

00:40:51,380 --> 00:40:54,009
went on you for this

00:42:07,660 --> 00:42:10,680
thank you

00:42:25,860 --> 00:42:30,630
so once you find our flavor the next

00:42:27,690 --> 00:42:31,890
step is to pick a image so the find

00:42:30,630 --> 00:42:33,810
command only works for exact images

00:42:31,890 --> 00:42:35,460
unfortunately where you could just pick

00:42:33,810 --> 00:42:38,340
it out of the list if you doin oba image

00:42:35,460 --> 00:42:41,090
to listen to use a pic index so pick a

00:42:38,340 --> 00:42:41,090
image type

00:42:47,810 --> 00:42:52,220
in the flavors part i got an exception

00:42:50,060 --> 00:43:01,760
that it doesn't know that I'm one tiny

00:42:52,220 --> 00:43:07,700
name just sign this okay so yeah the

00:43:01,760 --> 00:43:09,730
names are by which is time so all these

00:43:07,700 --> 00:43:12,590
names and images are all configurable

00:43:09,730 --> 00:43:14,540
cloud dependent so this case the cloud I

00:43:12,590 --> 00:43:16,430
put these exercises up on or test it out

00:43:14,540 --> 00:43:18,380
was a depth stack environment

00:43:16,430 --> 00:43:19,790
development all in one cloud you could

00:43:18,380 --> 00:43:23,050
use for building OpenStack and working

00:43:19,790 --> 00:43:23,050
on it that had em one tiny

00:43:33,710 --> 00:43:36,410
so now we have the next two steps and

00:43:35,359 --> 00:43:38,660
all I'm gonna go over them before we

00:43:36,410 --> 00:43:41,030
actually do them so now we have our

00:43:38,660 --> 00:43:42,170
image and our flavor here and now we

00:43:41,030 --> 00:43:44,030
want to get our instance when i boot

00:43:42,170 --> 00:43:45,200
that and so this would be the command to

00:43:44,030 --> 00:43:47,480
boot your instance we'll get back to

00:43:45,200 --> 00:43:48,890
this in a second but once you boot it

00:43:47,480 --> 00:43:50,810
the instance doesn't spin up right away

00:43:48,890 --> 00:43:51,920
it takes a few minutes up two or more

00:43:50,810 --> 00:43:54,290
than that or less depending on the

00:43:51,920 --> 00:43:55,400
system so you can actually watch the

00:43:54,290 --> 00:43:57,410
status if you want and so this is

00:43:55,400 --> 00:43:59,390
actually the code and i'll go back to

00:43:57,410 --> 00:44:02,119
this in a minute of how to actually

00:43:59,390 --> 00:44:03,589
track the status of the system and also

00:44:02,119 --> 00:44:05,480
this is on the bottom here that'll print

00:44:03,589 --> 00:44:09,619
the addresses out you need to login with

00:44:05,480 --> 00:44:11,300
ssh so it goes from it goes from you

00:44:09,619 --> 00:44:12,830
know you send the instant symbol go pick

00:44:11,300 --> 00:44:14,359
a building state and hopefully it won't

00:44:12,830 --> 00:44:16,490
go to our state and so if it works will

00:44:14,359 --> 00:44:19,330
go to active i believe and at that point

00:44:16,490 --> 00:44:19,330
it will be up

00:44:25,450 --> 00:44:28,390
so if you want to do this to the shell

00:44:26,770 --> 00:44:30,430
that you could just keep trying and

00:44:28,390 --> 00:44:32,440
pressing checking the status or whatever

00:44:30,430 --> 00:44:34,359
you want or you could actually try this

00:44:32,440 --> 00:44:40,599
out and write this and have it tell you

00:44:34,359 --> 00:44:41,650
when the system is up so I'm gonna go to

00:44:40,599 --> 00:44:42,970
here for a while let me know what do you

00:44:41,650 --> 00:44:45,119
want me to switch over to the other

00:44:42,970 --> 00:44:45,119
screen

00:44:53,260 --> 00:44:56,320
and remember you only create 15

00:44:54,970 --> 00:44:58,210
instances at a time so if you get an

00:44:56,320 --> 00:44:59,770
error it's because somebody else is

00:44:58,210 --> 00:45:00,880
we're rather quota limit until we'll

00:44:59,770 --> 00:45:03,360
have to wait for somebody to destroy

00:45:00,880 --> 00:45:03,360
their instance

00:45:26,990 --> 00:45:33,660
yes that's correct we're lucky this is a

00:45:31,549 --> 00:45:34,920
depends on the cloud so some class will

00:45:33,660 --> 00:45:36,450
take longer than others and it's very

00:45:34,920 --> 00:45:38,339
dependent on the system but yeah it's

00:45:36,450 --> 00:45:39,960
been I Mike use for this it's been a

00:45:38,339 --> 00:45:41,099
very high fast so thanks to you know

00:45:39,960 --> 00:45:44,809
Vaughn's for their great engineering

00:45:41,099 --> 00:45:44,809
work or marshmallows

00:46:07,980 --> 00:46:11,550
so this is what we get will show you

00:46:10,080 --> 00:46:13,950
when if you guys are seeing this error

00:46:11,550 --> 00:46:15,990
this is expected right now so 15 out of

00:46:13,950 --> 00:46:31,550
15 instance is used so we'll have to

00:46:15,990 --> 00:46:31,550
take turns on this one so you see ya

00:46:34,700 --> 00:46:38,000
yeah sorry

00:46:45,240 --> 00:46:48,650
so there we go right 15

00:46:55,320 --> 00:46:59,160
so if everybody who got their instance

00:46:56,970 --> 00:47:01,700
up before we hit the quota limit you can

00:46:59,160 --> 00:47:01,700
actually take

00:47:28,620 --> 00:47:33,390
so this is the IP address you'll need to

00:47:30,540 --> 00:47:34,590
get into the system so before everybody

00:47:33,390 --> 00:47:36,690
got here I went ahead and there's a by

00:47:34,590 --> 00:47:39,090
default there's there's ec2 style

00:47:36,690 --> 00:47:40,890
security groups so by default ssh is

00:47:39,090 --> 00:47:42,720
disabled into all these systems so I

00:47:40,890 --> 00:47:45,180
went ahead an able to ping an ssh to all

00:47:42,720 --> 00:47:47,220
these VMs but on a regular system you

00:47:45,180 --> 00:47:48,840
have to be aware that depending on the

00:47:47,220 --> 00:47:50,640
security group in the cloud you may have

00:47:48,840 --> 00:47:53,270
security groups two tables or set to

00:47:50,640 --> 00:47:53,270
nothing by default

00:48:07,069 --> 00:48:09,799
so you can see here hopefully can't

00:48:08,749 --> 00:48:11,779
login to the system because it's not

00:48:09,799 --> 00:48:14,469
using my key pair i assume but you can

00:48:11,779 --> 00:48:14,469
see the system is up

00:49:40,160 --> 00:49:43,880
so the default IP we're all using here

00:49:42,440 --> 00:49:45,920
is a private IP for all these instances

00:49:43,880 --> 00:49:47,750
so you exactly only get into them from

00:49:45,920 --> 00:49:48,650
this machine there's way we're not going

00:49:47,750 --> 00:49:52,039
to talk about it today but there is a

00:49:48,650 --> 00:49:53,150
way of adding a floating IP a public IP

00:49:52,039 --> 00:49:55,539
to the system but we're not going to do

00:49:53,150 --> 00:49:55,539
that today

00:50:04,049 --> 00:50:07,670
we have any questions problems

00:50:12,970 --> 00:50:15,599
great

00:50:31,740 --> 00:50:35,760
once again sorry for the problems here

00:50:34,020 --> 00:50:38,640
we only expected 15 people SS number i

00:50:35,760 --> 00:50:40,350
was told so it's a few more than that so

00:50:38,640 --> 00:50:43,130
it was it m1 small because i thought 15

00:50:40,350 --> 00:50:43,130
people should be fine

00:51:00,130 --> 00:51:03,010
so now that you have your separate

00:51:01,810 --> 00:51:05,620
instances your everybody should be in

00:51:03,010 --> 00:51:07,150
logging into now the 10 or 15 people who

00:51:05,620 --> 00:51:08,290
got lucky on this you can go into

00:51:07,150 --> 00:51:10,300
whatever you want on it when you're done

00:51:08,290 --> 00:51:13,170
with that this would be your instance on

00:51:10,300 --> 00:51:15,610
a real cloud you play with it set it up

00:51:13,170 --> 00:51:17,890
you chef or puppet or something else to

00:51:15,610 --> 00:51:19,960
deploy it you could pre built your own

00:51:17,890 --> 00:51:21,550
image and have your image be pre built

00:51:19,960 --> 00:51:23,920
to not have to run chef or puppet on it

00:51:21,550 --> 00:51:25,870
the list or you could set it up take a

00:51:23,920 --> 00:51:35,320
snapshot and boot from the snapshot next

00:51:25,870 --> 00:51:38,680
time and things like that when you're

00:51:35,320 --> 00:51:40,690
all done get the instance objections

00:51:38,680 --> 00:51:42,040
instance dot delete and they'll get rid

00:51:40,690 --> 00:51:43,150
of it and they'll take a few seconds for

00:51:42,040 --> 00:51:50,320
that to happen and that was somebody

00:51:43,150 --> 00:51:51,670
else could use the system there's 15 so

00:51:50,320 --> 00:51:53,110
we only have 15 servers up in is more

00:51:51,670 --> 00:51:57,010
more than 15 people here so bunch of

00:51:53,110 --> 00:51:59,260
people are right yeah so the quote will

00:51:57,010 --> 00:52:00,520
go down you know decrease to 14 we'll

00:51:59,260 --> 00:52:02,200
see if one person to leave sit then to

00:52:00,520 --> 00:52:04,560
be one slot available if something else

00:52:02,200 --> 00:52:04,560
could use that

00:52:11,859 --> 00:52:16,620
state of the system the remains same it

00:52:15,940 --> 00:52:20,160
is

00:52:16,620 --> 00:52:22,020
what system of the deleted so that will

00:52:20,160 --> 00:52:27,300
actually destroyed the vm so it'll be

00:52:22,020 --> 00:52:30,990
gone it'll get rid of the vm yeah that's

00:52:27,300 --> 00:52:38,760
correct yeah hey shmuel what version of

00:52:30,990 --> 00:52:44,210
OpenStack is this let's say this am I

00:52:38,760 --> 00:52:48,120
recognize some bugs in this one but ok

00:52:44,210 --> 00:52:50,040
so we we not win at Rackspace so I speak

00:52:48,120 --> 00:52:52,860
loud and people like that no it's

00:52:50,040 --> 00:52:56,280
usually like emo class call people but

00:52:52,860 --> 00:52:58,080
you can still like older and it's using

00:52:56,280 --> 00:53:00,240
a using false on that we need to upgrade

00:52:58,080 --> 00:53:03,690
and you have one in Paris that we are

00:53:00,240 --> 00:53:07,800
going to obviously but yet the great de

00:53:03,690 --> 00:53:09,210
Paris one was too much too full ok if

00:53:07,800 --> 00:53:10,620
you want to talk this is actual the

00:53:09,210 --> 00:53:12,360
dashboard we can see so the dashboard

00:53:10,620 --> 00:53:14,070
uses the same API so everybody was using

00:53:12,360 --> 00:53:16,110
here but it does it via Django

00:53:14,070 --> 00:53:17,990
application is running on site you can

00:53:16,110 --> 00:53:20,430
actually see what's going on the system

00:53:17,990 --> 00:53:21,420
because you're all one system together i

00:53:20,430 --> 00:53:24,920
could go ahead and delete them if I

00:53:21,420 --> 00:53:24,920
wanted to but I'd be nice about it

00:53:30,990 --> 00:53:33,800
you know

00:53:35,660 --> 00:53:46,860
sir I say that again an administrator

00:53:43,530 --> 00:53:50,070
can delete an instance right is there

00:53:46,860 --> 00:53:52,680
any notification that's nubby cloud

00:53:50,070 --> 00:53:53,820
specific so that would be that would be

00:53:52,680 --> 00:53:54,930
something part of like a billing system

00:53:53,820 --> 00:53:58,230
or something like that and so that's

00:53:54,930 --> 00:54:00,330
outside the scope innova okay so the way

00:53:58,230 --> 00:54:02,790
it works is Nova sends alerts to other

00:54:00,330 --> 00:54:06,180
systems when actions happen and so other

00:54:02,790 --> 00:54:07,740
systems look up a billing system could

00:54:06,180 --> 00:54:09,030
alert when an instance is destroyed and

00:54:07,740 --> 00:54:10,260
they'll say hey wait a minute add me

00:54:09,030 --> 00:54:12,240
destroy that maybe I should tell the

00:54:10,260 --> 00:54:17,240
user or something like that but nobody

00:54:12,240 --> 00:54:17,240
isn't have built an email support yeah

00:54:17,930 --> 00:54:23,750
no it's had a telescope no but is it is

00:54:20,850 --> 00:54:23,750
in the scope of OpenStack

00:54:41,750 --> 00:54:45,020
yeah sorry

00:54:47,559 --> 00:54:53,019
so just a if you wanted to just play

00:54:50,499 --> 00:54:55,689
more about this more how easy or

00:54:53,019 --> 00:55:00,069
difficult is it to set up your own test

00:54:55,689 --> 00:55:01,809
lab using vagrant or you know any other

00:55:00,069 --> 00:55:03,579
right l'ossessione technology if you

00:55:01,809 --> 00:55:05,439
just wanted to set up an entire lab

00:55:03,579 --> 00:55:07,959
typing on your laptop and assume you

00:55:05,439 --> 00:55:11,759
have enough RAM yeah so there's actually

00:55:07,959 --> 00:55:14,049
there's something called devstack and

00:55:11,759 --> 00:55:15,789
there's a few ways of using it but Deb

00:55:14,049 --> 00:55:18,219
stack is a tool that we use every day

00:55:15,789 --> 00:55:20,529
for issues for developers like myself in

00:55:18,219 --> 00:55:22,660
Celsius for the integration and CI

00:55:20,529 --> 00:55:24,759
systems in OpenStack use it so every

00:55:22,660 --> 00:55:26,079
single commit to open sac is spun up in

00:55:24,759 --> 00:55:27,969
a def stack environment and tested and

00:55:26,079 --> 00:55:30,459
devstack is all-in-one system and we'll

00:55:27,969 --> 00:55:32,619
have all the Nova services Keystone's

00:55:30,459 --> 00:55:34,180
with glands horizon everything running

00:55:32,619 --> 00:55:35,890
in one system and you could actually

00:55:34,180 --> 00:55:38,469
spin that up in vagrant or you spin it

00:55:35,890 --> 00:55:39,969
up on a vm somewhere and it's

00:55:38,469 --> 00:55:42,969
straightforward to use you clone it and

00:55:39,969 --> 00:55:44,559
you just run it and that's it so dev

00:55:42,969 --> 00:55:46,949
talked at org and tells you the basics

00:55:44,559 --> 00:55:46,949
how to do it

00:55:58,550 --> 00:56:02,150
any other questions we have a few slots

00:56:00,740 --> 00:56:04,970
available somebody hasn't spent up a vm

00:56:02,150 --> 00:56:08,360
yet so this is 10 right or else 15 never

00:56:04,970 --> 00:56:09,680
mind somebody wants to destroy their vm

00:56:08,360 --> 00:56:12,040
and let somebody else have a try that

00:56:09,680 --> 00:56:12,040
would be appreciated

00:56:20,080 --> 00:56:25,090
so that's expected part of this this is

00:56:21,910 --> 00:56:26,470
actually a demo cloud by inna Vance so

00:56:25,090 --> 00:56:27,940
we can actually start seeing this is a

00:56:26,470 --> 00:56:29,380
fairly small cloud as my understanding

00:56:27,940 --> 00:56:31,560
which is why we're seeing a bit of load

00:56:29,380 --> 00:56:31,560
on it

00:57:16,220 --> 00:57:20,859
defense /

00:57:18,309 --> 00:57:23,769
to increase single roll why was that

00:57:20,859 --> 00:57:25,660
there is two what two IP address right

00:57:23,769 --> 00:57:27,309
so this is actually so to get you guys

00:57:25,660 --> 00:57:28,900
going to log into the system from

00:57:27,309 --> 00:57:31,180
outside of you know vonces private

00:57:28,900 --> 00:57:32,650
network i associated a floating IP to

00:57:31,180 --> 00:57:35,680
the server and so this is the server

00:57:32,650 --> 00:57:38,859
we're all on right now and so I did that

00:57:35,680 --> 00:57:40,390
and let's take some these random so you

00:57:38,859 --> 00:57:43,209
would drop down and do associate

00:57:40,390 --> 00:57:46,709
floating IP from the dashboard or I

00:57:43,209 --> 00:57:46,709
could do things like create a snapshot

00:57:47,249 --> 00:57:52,469
and then you can produce an option that

00:57:49,359 --> 00:57:52,469
you boof in the snapshot later on

00:57:59,610 --> 00:58:03,400
so you see everybody's key pairs over

00:58:01,720 --> 00:58:06,040
here just to show you more of the

00:58:03,400 --> 00:58:07,780
dashboard we have our security group

00:58:06,040 --> 00:58:09,400
rules that we set up so this is our

00:58:07,780 --> 00:58:11,740
floating IP to be associated with this

00:58:09,400 --> 00:58:13,150
machine and I could add more to the

00:58:11,740 --> 00:58:17,920
project and then from there I can add it

00:58:13,150 --> 00:58:19,750
you could add it to your server see

00:58:17,920 --> 00:58:22,120
these are the two command so ping an SSH

00:58:19,750 --> 00:58:23,320
are enabled for a real world situation

00:58:22,120 --> 00:58:24,640
you probably want to add more if you

00:58:23,320 --> 00:58:27,130
ring a web server you add port 80 to

00:58:24,640 --> 00:58:34,420
this etc and so by default nothing is

00:58:27,130 --> 00:58:42,580
allowed and so this is all so it's a big

00:58:34,420 --> 00:58:44,910
Django application called horizon any

00:58:42,580 --> 00:58:44,910
questions

00:58:44,950 --> 00:58:50,230
so this is the way to launch a vm from

00:58:46,750 --> 00:58:51,670
the dashboard so image your snapshot so

00:58:50,230 --> 00:58:52,390
fasten app shots we took a snapshot you

00:58:51,670 --> 00:58:54,640
can actually go ahead and build

00:58:52,390 --> 00:58:58,720
something off it boot from a snapshot we

00:58:54,640 --> 00:59:04,270
don't have any right now so you select

00:58:58,720 --> 00:59:08,220
server type name etc and then select the

00:59:04,270 --> 00:59:08,220
key pair here yeah

00:59:12,830 --> 00:59:18,480
so once you boot in can we

00:59:15,570 --> 00:59:21,480
programmatically rather than login say a

00:59:18,480 --> 00:59:26,520
bootstrap shaft actually funny she

00:59:21,480 --> 00:59:27,750
mentioned that so there's a so this how

00:59:26,520 --> 00:59:30,510
to do from the dashboard but there's

00:59:27,750 --> 00:59:31,770
other ways of accessing the system but

00:59:30,510 --> 00:59:33,300
you could put in a script to run it

00:59:31,770 --> 00:59:35,820
right after it boots up and so this uses

00:59:33,300 --> 00:59:37,980
the same amazon style system so this the

00:59:35,820 --> 00:59:40,410
same thing that pulls in your ssh key

00:59:37,980 --> 00:59:47,250
will pull it up bootstrapping scripts so

00:59:40,410 --> 00:59:54,830
you can say you know for example believe

00:59:47,250 --> 00:59:54,830
devstack has an example on their website

00:59:58,589 --> 01:00:04,089
so the user data the cult user data here

01:00:01,750 --> 01:00:05,920
this is how you do it inside of so you

01:00:04,089 --> 01:00:07,540
could actually try this on a vm here is

01:00:05,920 --> 01:00:10,359
this how you get devstack running inside

01:00:07,540 --> 01:00:13,240
of a vm and so this you cut and paste

01:00:10,359 --> 01:00:18,609
this into that the the you know the NIT

01:00:13,240 --> 01:00:25,000
script area and so you just tell it to

01:00:18,609 --> 01:00:29,619
be a script and that it runs and etc any

01:00:25,000 --> 01:00:31,450
questions so the addition using this

01:00:29,619 --> 01:00:33,849
python api they can use the command line

01:00:31,450 --> 01:00:35,799
to the CL is typing innova space and

01:00:33,849 --> 01:00:38,040
commands and there's also a bunch of

01:00:35,799 --> 01:00:40,510
third-party libraries head support i

01:00:38,040 --> 01:00:41,559
think would cloud and a few others

01:00:40,510 --> 01:00:42,730
support i don't know the top ahead which

01:00:41,559 --> 01:00:44,440
ones do but a bunch of them support

01:00:42,730 --> 01:00:46,000
OpenStack so you can make something in

01:00:44,440 --> 01:00:48,040
you know third-party library that

01:00:46,000 --> 01:00:56,799
supports OpenStack and ec2 or whatever

01:00:48,040 --> 01:00:59,380
else you want to use how do companies

01:00:56,799 --> 01:01:03,549
like HP and rec space benefit from this

01:00:59,380 --> 01:01:05,589
I mean you put a lot of money into yes

01:01:03,549 --> 01:01:06,819
how did you get it back the short answer

01:01:05,589 --> 01:01:08,760
is that's not I'm not the right person

01:01:06,819 --> 01:01:11,290
asked that question 2 i'm a developer

01:01:08,760 --> 01:01:12,579
the answer is that it's that you know

01:01:11,290 --> 01:01:14,470
it's the same thing for open source why

01:01:12,579 --> 01:01:15,760
do people work in the linux kernel so

01:01:14,470 --> 01:01:18,250
it's the same sort of model there this

01:01:15,760 --> 01:01:20,710
isn't immediately obvious I mean Louis

01:01:18,250 --> 01:01:23,940
yes but for what Tommy's bet the Linux

01:01:20,710 --> 01:01:26,200
kernel they have to well a lot of

01:01:23,940 --> 01:01:27,819
supercomputers and whatever and Android

01:01:26,200 --> 01:01:29,920
and everyone is using it and they're

01:01:27,819 --> 01:01:32,049
improving it because they're using it

01:01:29,920 --> 01:01:34,569
and you're actually giving service to

01:01:32,049 --> 01:01:36,760
people to use OpenStack but I don't see

01:01:34,569 --> 01:01:38,260
a immediate way to get an interview

01:01:36,760 --> 01:01:43,990
answer somebody's son is doing a public

01:01:38,260 --> 01:01:45,400
cloud schmehl you answer this or I mean

01:01:43,990 --> 01:01:47,710
you wanna answer this one your rack

01:01:45,400 --> 01:01:49,960
space so I'm going to put my business

01:01:47,710 --> 01:01:51,640
has Rafael I don't know anything with

01:01:49,960 --> 01:01:54,609
business but I would say like it's what

01:01:51,640 --> 01:01:55,869
we call utility buildings so so that the

01:01:54,609 --> 01:01:57,790
cloud is the main thing of the cloud

01:01:55,869 --> 01:02:00,760
like the way works or the cloud is that

01:01:57,790 --> 01:02:04,059
our data provider like a rack space or a

01:02:00,760 --> 01:02:05,559
typical adore you more earth-like spin

01:02:04,059 --> 01:02:07,000
at a cloud and now you you have like

01:02:05,559 --> 01:02:09,010
visually that can be shared so you have

01:02:07,000 --> 01:02:11,430
that one machines and people XP nettle

01:02:09,010 --> 01:02:13,319
cloud and cloud servers and Obi

01:02:11,430 --> 01:02:14,940
using in life only that purpose at that

01:02:13,319 --> 01:02:16,530
moment and that's the sort of monday

01:02:14,940 --> 01:02:18,809
going to build and they can spin up

01:02:16,530 --> 01:02:21,210
other beams or the other one making

01:02:18,809 --> 01:02:23,579
making a cloud easy to spin up with an

01:02:21,210 --> 01:02:25,410
API easy to work thingy encourage people

01:02:23,579 --> 01:02:27,300
like to try and tues package as well

01:02:25,410 --> 01:02:29,670
explain more because they can have more

01:02:27,300 --> 01:02:31,230
ideas and do more stuff so it's

01:02:29,670 --> 01:02:32,760
literally like what we call that can

01:02:31,230 --> 01:02:35,609
trust you as a service being as a

01:02:32,760 --> 01:02:37,440
service ecology to do a lot so and the

01:02:35,609 --> 01:02:39,180
way that the thing that it's all like

01:02:37,440 --> 01:02:41,309
virtualize being their back-end and you

01:02:39,180 --> 01:02:44,190
can optimize your resources and and do

01:02:41,309 --> 01:02:47,700
stuff optimize your deep primal and it's

01:02:44,190 --> 01:02:55,980
not like the old way anymore answering

01:02:47,700 --> 01:02:58,050
questions that was very business he I

01:02:55,980 --> 01:03:00,630
just want to throw economies of scale

01:02:58,050 --> 01:03:03,000
into into the mix so like a rec space

01:03:00,630 --> 01:03:07,200
operates data centers like 20 to 30 mega

01:03:03,000 --> 01:03:10,859
by big about data centers so we operate

01:03:07,200 --> 01:03:12,599
at an atom level of it sorry dear me yes

01:03:10,859 --> 01:03:18,569
we are better at a level of efficiency

01:03:12,599 --> 01:03:21,210
that so we operated a level offa of

01:03:18,569 --> 01:03:24,119
efficiency that allows us to turn a

01:03:21,210 --> 01:03:27,059
profit so you come into upon you come

01:03:24,119 --> 01:03:29,549
into our public cloud utilize all these

01:03:27,059 --> 01:03:32,099
resources because it's easier than

01:03:29,549 --> 01:03:34,619
operating all of this by yourself v bill

01:03:32,099 --> 01:03:38,809
you and the difference is still enough

01:03:34,619 --> 01:03:38,809
to turn a profit that's the short answer

01:03:39,109 --> 01:03:42,589
any other questions

01:03:53,430 --> 01:03:57,850
what is the easiest way to get into the

01:03:56,020 --> 01:04:00,790
instance wife's you have yes you'll need

01:03:57,850 --> 01:04:03,280
a copy the key on to your system end so

01:04:00,790 --> 01:04:04,900
i shouldnt cover that so you can usually

01:04:03,280 --> 01:04:06,580
something to you something para miko if

01:04:04,900 --> 01:04:07,960
you want to use in a Python imma choice

01:04:06,580 --> 01:04:09,640
you something from the shell you would

01:04:07,960 --> 01:04:11,620
ssh in you have to copy your private key

01:04:09,640 --> 01:04:14,170
locally and then you set it to four

01:04:11,620 --> 01:04:17,020
essays you can set the private kita 400

01:04:14,170 --> 01:04:18,700
permissions and you can login so SSH if

01:04:17,020 --> 01:04:23,410
it's in a bunch of system it's you know

01:04:18,700 --> 01:04:25,890
dash I my private key space ubuntu at IP

01:04:23,410 --> 01:04:25,890
address

01:04:38,640 --> 01:04:47,500
what is the way to have the list of the

01:04:42,220 --> 01:04:53,440
instances that are currently running no

01:04:47,500 --> 01:04:55,740
it's Nova that servers that list let me

01:04:53,440 --> 01:04:55,740
show you that

01:05:16,839 --> 01:05:27,940
what their zone actually see you here

01:05:24,549 --> 01:05:31,359
yeah no it's the quota spoken on me it

01:05:27,940 --> 01:05:35,950
falls on your eyes yeah everything crazy

01:05:31,359 --> 01:05:40,479
is just it's actually working right now

01:05:35,950 --> 01:05:46,950
but you want to like 17 at one point we

01:05:40,479 --> 01:05:46,950
fix that and it's fixed in trunk you can

01:05:48,820 --> 01:05:56,190
a lot of moving parts to it

01:05:57,600 --> 01:06:02,740
and somebody deleted all the instances

01:06:00,580 --> 01:06:14,830
it looks like so I think we're done

01:06:02,740 --> 01:06:17,530
thank you and if you don't believe me so

01:06:14,830 --> 01:06:20,730
we're getting deleted so we're gonna

01:06:17,530 --> 01:06:20,730
have the Swift I guess now we're

01:06:41,130 --> 01:06:43,730
how long

01:07:49,359 --> 01:07:52,359
awesome

01:07:55,950 --> 01:07:57,950

YouTube URL: https://www.youtube.com/watch?v=EyS1oauXr_U


