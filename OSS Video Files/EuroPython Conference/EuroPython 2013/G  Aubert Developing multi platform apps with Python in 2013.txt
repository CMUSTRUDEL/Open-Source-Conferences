Title: G  Aubert Developing multi platform apps with Python in 2013
Publication date: 2015-04-18
Playlist: EuroPython 2013
Description: 
	[Europython 2013]
5 July 2013
Track Ravioli
Captions: 
	00:00:06,259 --> 00:00:27,000
ABCD baby yep buongiorno hello hi who

00:00:16,410 --> 00:00:30,689
are you okay okay thank you hello and

00:00:27,000 --> 00:00:33,780
welcome back in room ravioli our next

00:00:30,689 --> 00:00:37,950
speaker is going to be key on Albert a

00:00:33,780 --> 00:00:39,930
good more less more or less but I HIV by

00:00:37,950 --> 00:00:46,129
vest which is going to speak to us about

00:00:39,930 --> 00:00:46,129
cross platforms appdev in Python you

00:00:48,200 --> 00:00:53,820
thank you thank you for coming i'm very

00:00:51,329 --> 00:00:56,809
pleased to be here and very own ought to

00:00:53,820 --> 00:01:01,530
be one of the speaker of the European

00:00:56,809 --> 00:01:05,460
2013 so first of all few words about me

00:01:01,530 --> 00:01:07,710
so I am a gear mobile I'm a season the

00:01:05,460 --> 00:01:09,510
software developer / a software

00:01:07,710 --> 00:01:13,470
architect I've been in the business for

00:01:09,510 --> 00:01:15,420
now almost 13 years and as I'm getting

00:01:13,470 --> 00:01:18,990
old I'm being pushed little by little

00:01:15,420 --> 00:01:22,229
towards a managerial position so mainly

00:01:18,990 --> 00:01:25,080
I work in the earth science community so

00:01:22,229 --> 00:01:27,330
dealing with data distribution system

00:01:25,080 --> 00:01:31,200
and data on link system for our science

00:01:27,330 --> 00:01:32,750
data and as I said I'm becoming a little

00:01:31,200 --> 00:01:36,050
by little

00:01:32,750 --> 00:01:37,630
and I was missing the the contact with

00:01:36,050 --> 00:01:40,400
with the software the software

00:01:37,630 --> 00:01:42,830
development so I've studied to one year

00:01:40,400 --> 00:01:45,620
ago when a half year ago I started to

00:01:42,830 --> 00:01:48,280
develop a little tool which is called GM

00:01:45,620 --> 00:01:51,440
vote and we have you to back up your

00:01:48,280 --> 00:01:53,869
your gmail mailbox on your disk and also

00:01:51,440 --> 00:01:56,330
to restore it on the second account if

00:01:53,869 --> 00:01:59,240
you need to exactly as it is so

00:01:56,330 --> 00:02:01,640
identically as well as your current the

00:01:59,240 --> 00:02:03,410
mailbox in case you would you would lose

00:02:01,640 --> 00:02:07,520
it or you would have you would have a

00:02:03,410 --> 00:02:10,009
problem with it so let's dig in the the

00:02:07,520 --> 00:02:13,310
presentation and the first slide is a

00:02:10,009 --> 00:02:16,640
bit of is a bit of Philips philosophical

00:02:13,310 --> 00:02:19,370
as and I think as the Python community

00:02:16,640 --> 00:02:22,160
we have to seriously think of the the

00:02:19,370 --> 00:02:25,010
future of Python and what Python where

00:02:22,160 --> 00:02:27,920
we're fightin will be in the next 5 22

00:02:25,010 --> 00:02:29,660
10 years we know that the Python is very

00:02:27,920 --> 00:02:31,850
strong in the in the scientific

00:02:29,660 --> 00:02:35,600
community I know it I'm part of it and

00:02:31,850 --> 00:02:37,880
it's used daily by a scientist with mode

00:02:35,600 --> 00:02:41,360
yours and frameworks such as a mudblood

00:02:37,880 --> 00:02:44,570
lib and so on to deal with scientific

00:02:41,360 --> 00:02:46,760
data so there it is very strong on the

00:02:44,570 --> 00:02:50,180
web back-end also with frameworks such

00:02:46,760 --> 00:02:52,730
as a jungle a pyramid flask and Sony is

00:02:50,180 --> 00:02:54,739
quite stronger as well and very

00:02:52,730 --> 00:02:57,950
established but we know that there's a

00:02:54,739 --> 00:03:01,579
new kid in the block Cindy in this area

00:02:57,950 --> 00:03:03,799
javascript is also on the client side

00:03:01,579 --> 00:03:06,410
but now it's becoming more and more

00:03:03,799 --> 00:03:09,350
present on the server side with the nod

00:03:06,410 --> 00:03:11,269
framework and as the manager why would

00:03:09,350 --> 00:03:12,920
you force your team to learn two

00:03:11,269 --> 00:03:16,220
different languages when you can do

00:03:12,920 --> 00:03:18,650
everything we've only one and it's quite

00:03:16,220 --> 00:03:21,320
powerful so I think in this area Python

00:03:18,650 --> 00:03:23,989
could be become a bit weakened in the in

00:03:21,320 --> 00:03:26,720
the future the the second area was on

00:03:23,989 --> 00:03:29,019
the server side to the furtherest sorry

00:03:26,720 --> 00:03:31,940
on the server side to develop

00:03:29,019 --> 00:03:34,940
application server so mainly network

00:03:31,940 --> 00:03:36,830
application servers and you are the

00:03:34,940 --> 00:03:39,920
companies like Google

00:03:36,830 --> 00:03:41,810
where they use quite a lot Python in

00:03:39,920 --> 00:03:44,330
their in their infrastructures but

00:03:41,810 --> 00:03:46,910
little by little I think and with the

00:03:44,330 --> 00:03:49,100
emergence of the new language we have

00:03:46,910 --> 00:03:50,810
developed with the emergence of the the

00:03:49,100 --> 00:03:54,650
go language I think they are going to

00:03:50,810 --> 00:03:57,500
replace the Python in this area in in

00:03:54,650 --> 00:03:59,090
order to use their their favorite baby

00:03:57,500 --> 00:04:02,090
at the moment and go is also getting

00:03:59,090 --> 00:04:04,550
some traction so Python might also be

00:04:02,090 --> 00:04:06,920
less strong in this area in the in the

00:04:04,550 --> 00:04:09,290
future so we don't want Python to become

00:04:06,920 --> 00:04:11,330
the the next Fortran so and only being

00:04:09,290 --> 00:04:13,760
established in a nice niche which is the

00:04:11,330 --> 00:04:17,510
scientific community we want Python to

00:04:13,760 --> 00:04:20,299
strive and we want to look for new new

00:04:17,510 --> 00:04:23,750
areas for growth for Python so this is

00:04:20,299 --> 00:04:26,150
what I'm going to try to do during the

00:04:23,750 --> 00:04:28,310
dis presentation and I want to see in

00:04:26,150 --> 00:04:31,820
spite on its feet for the vaping class

00:04:28,310 --> 00:04:36,080
cross-platform application so what are

00:04:31,820 --> 00:04:39,110
the strengths of is away first why why

00:04:36,080 --> 00:04:42,410
do I want to look at this at this area

00:04:39,110 --> 00:04:45,140
because since the the arrival of this

00:04:42,410 --> 00:04:47,120
little babies did the smartphone we've

00:04:45,140 --> 00:04:51,530
seen the emergence of new distribution

00:04:47,120 --> 00:04:53,810
platform such as the iOS App Store then

00:04:51,530 --> 00:04:56,570
it has been translated on the desktop to

00:04:53,810 --> 00:04:58,790
the mac app store and then you have also

00:04:56,570 --> 00:05:01,610
many many users coming in so like the

00:04:58,790 --> 00:05:03,470
the windows store and then others like

00:05:01,610 --> 00:05:06,250
the google play and steam that are

00:05:03,470 --> 00:05:10,220
emerging and a good opportunity for

00:05:06,250 --> 00:05:12,230
developers to monetize good ideas and to

00:05:10,220 --> 00:05:15,470
promote their their skills and the end

00:05:12,230 --> 00:05:17,870
of software so i think we should we

00:05:15,470 --> 00:05:19,880
should look we should see if pattern is

00:05:17,870 --> 00:05:26,050
fit for being a valid candidate for

00:05:19,880 --> 00:05:29,180
developing such such applications so

00:05:26,050 --> 00:05:31,640
let's look at the strength of python so

00:05:29,180 --> 00:05:33,440
i think a part of me is fulfilling and

00:05:31,640 --> 00:05:36,830
old promise that i was hearing during

00:05:33,440 --> 00:05:39,710
the 90s in the so it was in the most in

00:05:36,830 --> 00:05:42,320
the mouth of marketing people with nice

00:05:39,710 --> 00:05:43,440
shiny suits which was the develop ones

00:05:42,320 --> 00:05:47,100
to run everywhere

00:05:43,440 --> 00:05:50,040
the java the java promise so I think

00:05:47,100 --> 00:05:52,050
python has done it is in its own way I

00:05:50,040 --> 00:05:54,150
probably in a better way and we are

00:05:52,050 --> 00:05:56,870
going to to look at idea what to

00:05:54,150 --> 00:06:00,450
understand why so I think now the the

00:05:56,870 --> 00:06:03,840
interpreter can be distributed is

00:06:00,450 --> 00:06:06,810
available on all the main main platform

00:06:03,840 --> 00:06:09,440
and you can and standard library modules

00:06:06,810 --> 00:06:11,970
also are built in such a way that when

00:06:09,440 --> 00:06:15,060
you develop your application it will

00:06:11,970 --> 00:06:18,870
easily run transparently on all these

00:06:15,060 --> 00:06:21,570
different different platforms so I think

00:06:18,870 --> 00:06:26,310
this is a big big advantage for for

00:06:21,570 --> 00:06:29,460
Python and one of the one of the feature

00:06:26,310 --> 00:06:31,470
why is it's a feed language for

00:06:29,460 --> 00:06:34,250
developing desktop cross-platform

00:06:31,470 --> 00:06:37,950
application the second point is that

00:06:34,250 --> 00:06:39,930
with Python you can I access all the

00:06:37,950 --> 00:06:43,290
different operating system

00:06:39,930 --> 00:06:46,980
functionalities with the same same API

00:06:43,290 --> 00:06:49,560
oh so the the Python creator also was

00:06:46,980 --> 00:06:51,480
quite clever at the sam instead of

00:06:49,560 --> 00:06:53,760
redefining an abstraction for accessing

00:06:51,480 --> 00:06:55,650
the operating system all the different

00:06:53,760 --> 00:06:59,370
features of all the different operating

00:06:55,650 --> 00:07:01,590
system he decided to copy the existing

00:06:59,370 --> 00:07:06,390
one which was on the you or developed

00:07:01,590 --> 00:07:08,940
for unix the POSIX api and provide so

00:07:06,390 --> 00:07:10,950
the same kind of feature a little bit

00:07:08,940 --> 00:07:14,640
translated to the python one but very

00:07:10,950 --> 00:07:17,240
identical to the original POSIX capi so

00:07:14,640 --> 00:07:20,130
as a developer you could really under

00:07:17,240 --> 00:07:22,980
immediately transfer your knowledge from

00:07:20,130 --> 00:07:25,410
the sea the sea world to the to the

00:07:22,980 --> 00:07:28,230
Python one so from Paul if you take the

00:07:25,410 --> 00:07:31,530
filesystem array I with the u.s. module

00:07:28,230 --> 00:07:35,020
you can manipulate file and directories

00:07:31,530 --> 00:07:38,080
you can do also pass translation and

00:07:35,020 --> 00:07:40,479
pass and and so on the second point

00:07:38,080 --> 00:07:42,039
which is quite important also is d2 for

00:07:40,479 --> 00:07:44,110
developing desktop application

00:07:42,039 --> 00:07:46,620
cross-platform this top application is

00:07:44,110 --> 00:07:49,360
to have the capability to access

00:07:46,620 --> 00:07:52,120
environment variables with a unique

00:07:49,360 --> 00:07:54,909
interface so you can do that with the

00:07:52,120 --> 00:07:57,220
u.s. module and why is it important

00:07:54,909 --> 00:07:58,949
because with the the the environment

00:07:57,220 --> 00:08:02,860
variable will be the base for your

00:07:58,949 --> 00:08:04,930
configuration you will use the user home

00:08:02,860 --> 00:08:06,909
directory the temp directory of the

00:08:04,930 --> 00:08:08,889
machines and so on which are referenced

00:08:06,909 --> 00:08:11,229
by a government variable on all the

00:08:08,889 --> 00:08:14,620
different operating system to base your

00:08:11,229 --> 00:08:19,360
your configuration and the configuration

00:08:14,620 --> 00:08:21,909
of your of your application I will not

00:08:19,360 --> 00:08:25,770
go through the rest of the POSIX API but

00:08:21,909 --> 00:08:28,150
you can pretty much do with this API

00:08:25,770 --> 00:08:31,630
everything so you've got the support for

00:08:28,150 --> 00:08:33,029
processes you can spoon for processes

00:08:31,630 --> 00:08:35,860
you've got inter-process communication

00:08:33,029 --> 00:08:39,370
features this classical one and you can

00:08:35,860 --> 00:08:42,370
even use thread if necessary all this

00:08:39,370 --> 00:08:44,800
with one unique transparent one unique

00:08:42,370 --> 00:08:49,240
API for all the different operating

00:08:44,800 --> 00:08:52,779
systems but we all know it's not always

00:08:49,240 --> 00:08:56,860
sufficient because you can have even if

00:08:52,779 --> 00:08:59,170
each of the operating system features

00:08:56,860 --> 00:09:02,440
can be accessed from transparently are

00:08:59,170 --> 00:09:05,140
in the same wave with this API each of

00:09:02,440 --> 00:09:08,350
the components forming the different

00:09:05,140 --> 00:09:10,660
operating system they are they are

00:09:08,350 --> 00:09:13,149
different so we can have different

00:09:10,660 --> 00:09:15,730
behaviors and developing my application

00:09:13,149 --> 00:09:18,390
for an Pola I realized that I was not so

00:09:15,730 --> 00:09:21,250
experienced in the the windows world and

00:09:18,390 --> 00:09:23,470
let's say that to be politically correct

00:09:21,250 --> 00:09:26,290
that the windows file system is a bit

00:09:23,470 --> 00:09:28,600
troublesome so I had some mission I am

00:09:26,290 --> 00:09:32,110
manipulating many many files in my

00:09:28,600 --> 00:09:34,510
application and I had to adapt my code

00:09:32,110 --> 00:09:37,930
in order to cope with some limitation of

00:09:34,510 --> 00:09:45,139
the the file system with the I did some

00:09:37,930 --> 00:09:48,139
tests and if you so if you want to list

00:09:45,139 --> 00:09:52,429
during my test I wanted to list more

00:09:48,139 --> 00:09:55,790
than 250 k emails spread over 50

00:09:52,429 --> 00:09:58,399
directory so more than 250,000 50 / 50

00:09:55,790 --> 00:10:00,889
directories it takes two seconds on

00:09:58,399 --> 00:10:03,109
linux on a tunnel on the Linux file

00:10:00,889 --> 00:10:05,269
system and with the same machine but

00:10:03,109 --> 00:10:08,359
booted under windows he was taking more

00:10:05,269 --> 00:10:11,649
than 40 seconds so even with the best

00:10:08,359 --> 00:10:14,749
possible abstraction and portability

00:10:11,649 --> 00:10:17,329
features then you will you you will have

00:10:14,749 --> 00:10:19,399
to adapt to adapt your your program in

00:10:17,329 --> 00:10:21,829
order to support the different behaviors

00:10:19,399 --> 00:10:24,230
of the internal component of the of the

00:10:21,829 --> 00:10:27,529
file system so of the operating system

00:10:24,230 --> 00:10:29,839
so you have to be aware of that another

00:10:27,529 --> 00:10:33,410
very interesting features that you can

00:10:29,839 --> 00:10:39,079
extend the easily python and buying

00:10:33,410 --> 00:10:41,239
python to the library of the different

00:10:39,079 --> 00:10:45,290
operating system so it was another

00:10:41,239 --> 00:10:47,720
clever i think another clever features

00:10:45,290 --> 00:10:51,799
providing frog from the beginning by the

00:10:47,720 --> 00:10:54,249
python creator is that if you i think

00:10:51,799 --> 00:10:57,529
you realized that you could never build

00:10:54,249 --> 00:10:59,179
an API or an abstraction allowing you to

00:10:57,529 --> 00:11:01,489
access all the different specificities

00:10:59,179 --> 00:11:03,889
of all the different operating systems

00:11:01,489 --> 00:11:07,999
so it just providing a way to adapt to

00:11:03,889 --> 00:11:10,759
that so you can use the simple python

00:11:07,999 --> 00:11:14,660
api for making some some bindings to

00:11:10,759 --> 00:11:16,819
some c c++ DLLs or shared libraries on

00:11:14,660 --> 00:11:19,300
the linux or windows world and you can

00:11:16,819 --> 00:11:22,180
do the same for the

00:11:19,300 --> 00:11:25,390
the mic Western world with a pie

00:11:22,180 --> 00:11:27,850
objective-c biopsy and so on so this is

00:11:25,390 --> 00:11:30,010
very powerful because you could imagine

00:11:27,850 --> 00:11:32,350
in your application to access some

00:11:30,010 --> 00:11:35,529
specificities of each of the file system

00:11:32,350 --> 00:11:38,920
and of the operating system sorry and

00:11:35,529 --> 00:11:43,390
the different operating system and still

00:11:38,920 --> 00:11:46,300
build cross-platform application which

00:11:43,390 --> 00:11:48,550
then would have them probably little

00:11:46,300 --> 00:11:54,730
harias where they would be specific for

00:11:48,550 --> 00:11:57,370
each of the different systems so what is

00:11:54,730 --> 00:11:59,620
missing them to have the to have Python

00:11:57,370 --> 00:12:03,490
being really really powerful in this

00:11:59,620 --> 00:12:06,579
area and to to promote Python in the

00:12:03,490 --> 00:12:10,540
Indies in this development of

00:12:06,579 --> 00:12:12,880
cross-platform application so the first

00:12:10,540 --> 00:12:15,700
point is regarding the graphical

00:12:12,880 --> 00:12:20,560
interfaces so with Python we have two

00:12:15,700 --> 00:12:23,410
very very nice we gel to tool kits that

00:12:20,560 --> 00:12:25,300
are accessible we have the WX widget

00:12:23,410 --> 00:12:30,040
toolkit and in spite on biding the value

00:12:25,300 --> 00:12:32,709
X Python and the QT with the toolkit and

00:12:30,040 --> 00:12:35,560
the PI side it's PI side the python

00:12:32,709 --> 00:12:37,779
bindings so all these two tool kits are

00:12:35,560 --> 00:12:41,110
very powerful they are cross-platform

00:12:37,779 --> 00:12:43,660
they provide a native UI look and feel

00:12:41,110 --> 00:12:45,670
and they are very very powerful because

00:12:43,660 --> 00:12:49,029
you have many many widgets and you can

00:12:45,670 --> 00:12:51,220
build very complex graphical interfaces

00:12:49,029 --> 00:12:54,339
for the users the community also around

00:12:51,220 --> 00:12:56,860
these frameworks is very very lively so

00:12:54,339 --> 00:12:59,680
it's the the we are evolving quite

00:12:56,860 --> 00:13:03,699
quickly and it they are well supported

00:12:59,680 --> 00:13:06,699
so what is the problem then the program

00:13:03,699 --> 00:13:10,470
is the is the the following this is one

00:13:06,699 --> 00:13:13,600
of the example I took from the WX widget

00:13:10,470 --> 00:13:16,329
toolkit webpage this is one of the

00:13:13,600 --> 00:13:18,880
application via demonstrate you cannot

00:13:16,329 --> 00:13:21,399
put that in the end of storage users I

00:13:18,880 --> 00:13:23,760
mean now people are again used to this

00:13:21,399 --> 00:13:27,970
kind of

00:13:23,760 --> 00:13:30,850
graphical interface so very nice user

00:13:27,970 --> 00:13:33,400
interface with a good usability and so

00:13:30,850 --> 00:13:35,590
on and this kind of application coming

00:13:33,400 --> 00:13:38,730
more from the beginning of two thousand

00:13:35,590 --> 00:13:41,140
are very complex and have a very

00:13:38,730 --> 00:13:44,140
difficult look and feel fast on that

00:13:41,140 --> 00:13:47,800
users so I think did this kind of widget

00:13:44,140 --> 00:13:49,510
toolkit acid very valid for in the

00:13:47,800 --> 00:13:51,520
business world where the features will

00:13:49,510 --> 00:13:54,010
be more important than the look and feel

00:13:51,520 --> 00:13:56,980
but for normal stone a juicer like my

00:13:54,010 --> 00:13:59,860
grandma my mother if I bring a very

00:13:56,980 --> 00:14:02,440
nifty application with many many

00:13:59,860 --> 00:14:05,170
interesting features and you just did

00:14:02,440 --> 00:14:10,150
disco can feel and this usability she

00:14:05,170 --> 00:14:12,340
will never use it so we have to find a

00:14:10,150 --> 00:14:17,680
another way to beat the graphical

00:14:12,340 --> 00:14:20,800
interface and especially when we we we

00:14:17,680 --> 00:14:25,540
have in the in the world is the the web

00:14:20,800 --> 00:14:28,690
stack so JavaScript html5 css3 is a

00:14:25,540 --> 00:14:30,370
variable and many many graphical

00:14:28,690 --> 00:14:32,680
interface have been built with it

00:14:30,370 --> 00:14:35,700
standard users are used to the to the

00:14:32,680 --> 00:14:38,140
web looking fee and web interface also

00:14:35,700 --> 00:14:41,110
developers we are really familiarize

00:14:38,140 --> 00:14:44,170
with this kind of with the web stack we

00:14:41,110 --> 00:14:49,360
have all built some application and web

00:14:44,170 --> 00:14:52,420
servers with it so I think we should we

00:14:49,360 --> 00:14:56,800
should try to use as as much as we can

00:14:52,420 --> 00:15:00,220
this the web stack to build our the user

00:14:56,800 --> 00:15:01,960
interface because we will be like that

00:15:00,220 --> 00:15:04,750
we won't have to learn a new framework

00:15:01,960 --> 00:15:07,110
because also what I mentioned to say is

00:15:04,750 --> 00:15:09,670
that i forgot to mention sorry is that

00:15:07,110 --> 00:15:13,000
usually the widget toolkit are quite

00:15:09,670 --> 00:15:14,710
difficult to grasp we have a steep

00:15:13,000 --> 00:15:16,600
learning learning curve you need to

00:15:14,710 --> 00:15:18,340
understand the widget the layout you

00:15:16,600 --> 00:15:20,560
need to understand how to skin them etc

00:15:18,340 --> 00:15:22,390
it's quite complicated so complicated

00:15:20,560 --> 00:15:25,960
business and we have already invested

00:15:22,390 --> 00:15:27,190
some time and some skills in in the web

00:15:25,960 --> 00:15:30,310
stack

00:15:27,190 --> 00:15:33,550
renmark's so and an extra advantage is

00:15:30,310 --> 00:15:35,950
that if you use this the web stack and

00:15:33,550 --> 00:15:38,050
that you are cliquish on the desktop and

00:15:35,950 --> 00:15:40,420
your application gets some traction you

00:15:38,050 --> 00:15:43,330
can easily transfer transform your

00:15:40,420 --> 00:15:46,750
application into service as you will

00:15:43,330 --> 00:15:48,970
already have the graphical part if you

00:15:46,750 --> 00:15:55,240
want already defined it will be easily

00:15:48,970 --> 00:15:58,300
transposed as as a web service so I

00:15:55,240 --> 00:16:03,130
looked for some frameworks lowing me

00:15:58,300 --> 00:16:04,750
than to provide a web look and feel if

00:16:03,130 --> 00:16:07,450
you want to use web technologies for

00:16:04,750 --> 00:16:09,510
developing the the user interface but

00:16:07,450 --> 00:16:13,030
still having Python in the backend for

00:16:09,510 --> 00:16:16,570
building my business the core part of my

00:16:13,030 --> 00:16:19,270
application so I have a very nice

00:16:16,570 --> 00:16:21,910
framework which is called tiled tied SDK

00:16:19,270 --> 00:16:24,820
and provide you these features so you

00:16:21,910 --> 00:16:28,240
can develop the graphical interface with

00:16:24,820 --> 00:16:31,630
the with javascript HTML and you can

00:16:28,240 --> 00:16:34,300
still in the back end use Python from a

00:16:31,630 --> 00:16:37,540
browser languages but some from bindings

00:16:34,300 --> 00:16:41,110
to to build your business the core part

00:16:37,540 --> 00:16:43,060
of your application then you come with

00:16:41,110 --> 00:16:45,520
Python you can access some JavaScript

00:16:43,060 --> 00:16:47,770
objects and vice versa where there is a

00:16:45,520 --> 00:16:49,870
very the bridge so I don't know if you

00:16:47,770 --> 00:16:52,000
know about this application that the

00:16:49,870 --> 00:16:54,190
wounded window lists application which

00:16:52,000 --> 00:16:57,430
is a nice to do list as been done with

00:16:54,190 --> 00:16:59,920
this way mo there is one problem though

00:16:57,430 --> 00:17:03,790
with the with this framework is that the

00:16:59,920 --> 00:17:06,550
is not evolving very quickly so i think

00:17:03,790 --> 00:17:09,939
the stewpot is not is not as strong as

00:17:06,550 --> 00:17:12,250
we as i would like to to have it behind

00:17:09,939 --> 00:17:14,170
such an application some not sure how

00:17:12,250 --> 00:17:17,860
long it's going to it's going the to

00:17:14,170 --> 00:17:20,110
live and also in addition to that the

00:17:17,860 --> 00:17:22,810
deployment might be a bit complex with

00:17:20,110 --> 00:17:25,390
this with this framework so i decided to

00:17:22,810 --> 00:17:27,910
go and to talk another path and which is

00:17:25,390 --> 00:17:30,730
which is my shot is to use the another

00:17:27,910 --> 00:17:34,100
WebKit framework which is an open source

00:17:30,730 --> 00:17:36,980
framework which is using chromium fraud

00:17:34,100 --> 00:17:40,400
the round the ring and which is using

00:17:36,980 --> 00:17:44,030
not for further back end so in my case

00:17:40,400 --> 00:17:46,460
I'm using the nod for the UI back end so

00:17:44,030 --> 00:17:49,160
for managing the user settings and

00:17:46,460 --> 00:17:52,070
storing preferences for the users and

00:17:49,160 --> 00:17:54,530
i'm still using python for the business

00:17:52,070 --> 00:17:58,760
part because i also wanted to have the

00:17:54,530 --> 00:18:00,679
possibility to provide common line GM

00:17:58,760 --> 00:18:05,480
vote as a command line tool as it is

00:18:00,679 --> 00:18:07,669
right now so this is more i think this

00:18:05,480 --> 00:18:10,159
is more work than using the the previous

00:18:07,669 --> 00:18:13,400
framework because it's a bit more DIY

00:18:10,159 --> 00:18:16,250
and the node WebKit is a bit less mature

00:18:13,400 --> 00:18:21,130
in some ways and so on but I get more

00:18:16,250 --> 00:18:21,130
freedom and I can do exactly what I want

00:18:21,309 --> 00:18:27,919
the second area that I wanted to touch

00:18:25,400 --> 00:18:31,490
is regarding the packaging tools for

00:18:27,919 --> 00:18:33,320
applications so and this is an area

00:18:31,490 --> 00:18:35,120
where there are some issues so it's

00:18:33,320 --> 00:18:40,280
critical I think to provide the best

00:18:35,120 --> 00:18:41,870
possible packaging and for the users

00:18:40,280 --> 00:18:45,950
because this is the first thing that the

00:18:41,870 --> 00:18:47,539
user will will will encounter regarding

00:18:45,950 --> 00:18:49,190
your application though you will go to a

00:18:47,539 --> 00:18:51,200
website with a nice presentation

00:18:49,190 --> 00:18:53,510
fantastic features where regarding your

00:18:51,200 --> 00:18:55,370
application and then it will try to to

00:18:53,510 --> 00:18:57,500
install it so we need to provide the

00:18:55,370 --> 00:19:00,919
best possible installation for the photo

00:18:57,500 --> 00:19:02,780
users so if we look at the different

00:19:00,919 --> 00:19:07,580
kind of packaging we know that we have

00:19:02,780 --> 00:19:10,100
the pi PI module module shop in Python

00:19:07,580 --> 00:19:12,679
which is fantastic with Pip and via

00:19:10,100 --> 00:19:14,390
charm I use it daily and very appealing

00:19:12,679 --> 00:19:16,880
about it is something which is fantastic

00:19:14,390 --> 00:19:19,820
but again if this is not for my grandma

00:19:16,880 --> 00:19:24,140
from from my sister this is for you and

00:19:19,820 --> 00:19:27,049
mean geeks and nerds sorry python Pistol

00:19:24,140 --> 00:19:29,690
Pete on Easter pappadeaux aficionados

00:19:27,049 --> 00:19:33,559
and I think we can offer this kind of

00:19:29,690 --> 00:19:37,610
packaging for linux that is not possible

00:19:33,559 --> 00:19:41,870
to to afford that for windows of my

00:19:37,610 --> 00:19:43,610
custom so for windows if i take the

00:19:41,870 --> 00:19:45,470
windows example for windows what you

00:19:43,610 --> 00:19:49,549
would need to have a self-contained

00:19:45,470 --> 00:19:51,950
a package and you could so where you

00:19:49,549 --> 00:19:54,350
would put all the modules and assets

00:19:51,950 --> 00:19:56,929
regarding Python in a directory in some

00:19:54,350 --> 00:20:00,200
kind of container and you could read

00:19:56,929 --> 00:20:02,840
that by yourself manually but it's a bit

00:20:00,200 --> 00:20:07,760
tedious and especially when Val already

00:20:02,840 --> 00:20:09,980
some tools that exist is the sorry I we

00:20:07,760 --> 00:20:14,330
don't see but very very tool code which

00:20:09,980 --> 00:20:16,909
is called PI 2 X Z which builds an

00:20:14,330 --> 00:20:19,309
executable from your Python assets so it

00:20:16,909 --> 00:20:22,190
will put all the interpreters plus the

00:20:19,309 --> 00:20:24,470
modules and so on will compile the

00:20:22,190 --> 00:20:26,360
modules and we'd create a Windows

00:20:24,470 --> 00:20:31,370
executable that you can easily after

00:20:26,360 --> 00:20:34,820
deploy and execute on windows so this is

00:20:31,370 --> 00:20:39,169
this is nice but the issues that the PI

00:20:34,820 --> 00:20:41,919
2xa application if you want a module is

00:20:39,169 --> 00:20:45,890
dying it has not been evolving since

00:20:41,919 --> 00:20:48,860
2008 the documentation is lacking behind

00:20:45,890 --> 00:20:51,350
and then it's quite difficult when you

00:20:48,860 --> 00:20:53,570
have when you want to do something a bit

00:20:51,350 --> 00:20:55,370
more advanced and fancied in order to

00:20:53,570 --> 00:20:57,679
package your application it's quite

00:20:55,370 --> 00:21:00,950
difficult to find the information about

00:20:57,679 --> 00:21:03,830
it so if we don't do anything and I

00:21:00,950 --> 00:21:06,500
don't know about the windows 8 support

00:21:03,830 --> 00:21:08,840
I've not tried it yet but probably some

00:21:06,500 --> 00:21:10,580
issues because the runtime has changing

00:21:08,840 --> 00:21:14,750
so in some areas so we would have to

00:21:10,580 --> 00:21:17,809
look at that so in order to solve this

00:21:14,750 --> 00:21:20,809
solution we need somebody to to sue to

00:21:17,809 --> 00:21:24,289
support that so this is this is the

00:21:20,809 --> 00:21:26,659
French Uncle Sam this is super depot

00:21:24,289 --> 00:21:29,299
which is there to save France when we

00:21:26,659 --> 00:21:32,840
have issues so it's there to to force

00:21:29,299 --> 00:21:35,450
somebody in the in the community to to

00:21:32,840 --> 00:21:38,510
start working on the packaging areas for

00:21:35,450 --> 00:21:41,539
the for the different operating system

00:21:38,510 --> 00:21:44,450
on the Mac just 11 for the on the Mac

00:21:41,539 --> 00:21:47,630
os10 world where is also similar a set

00:21:44,450 --> 00:21:51,110
of tools to package your you're tight on

00:21:47,630 --> 00:21:53,210
assets in one executable one down there

00:21:51,110 --> 00:21:53,779
and this one is well supporting and

00:21:53,210 --> 00:22:01,629
working

00:21:53,779 --> 00:22:01,629
working fine so this is it about the

00:22:02,499 --> 00:22:07,279
looking at Python and seeing if it's a

00:22:05,450 --> 00:22:09,679
valid committed for building a desktop

00:22:07,279 --> 00:22:12,139
application I've easy it is really a

00:22:09,679 --> 00:22:14,509
very committed and we should we just

00:22:12,139 --> 00:22:16,999
need to provide a little bit more

00:22:14,509 --> 00:22:18,919
tooling a little bit more facilities for

00:22:16,999 --> 00:22:21,469
the developer to really embrace Python

00:22:18,919 --> 00:22:23,749
in the Indies area and as I said I think

00:22:21,469 --> 00:22:26,389
there is a revived revival in building

00:22:23,749 --> 00:22:28,429
this desktop application and so we

00:22:26,389 --> 00:22:31,909
should somebody in the community should

00:22:28,429 --> 00:22:35,869
be should should focus on that and try

00:22:31,909 --> 00:22:39,729
to provide the right tooling for that so

00:22:35,869 --> 00:22:43,580
few words about my opensuse experience

00:22:39,729 --> 00:22:45,489
so as I said since last year I have

00:22:43,580 --> 00:22:50,450
released the software which is called

00:22:45,489 --> 00:22:52,549
gem vote which allows you to to back up

00:22:50,450 --> 00:22:55,639
your your gmail account on your app

00:22:52,549 --> 00:22:58,159
driver and to rest of them exactly as

00:22:55,639 --> 00:23:00,739
they are and I decided to do that

00:22:58,159 --> 00:23:03,499
because my wife's account was act 2

00:23:00,739 --> 00:23:04,909
years ago and she lost all and

00:23:03,499 --> 00:23:06,710
immediately what the first thing the

00:23:04,909 --> 00:23:10,489
occur did was to completely delete the

00:23:06,710 --> 00:23:13,429
mailbox mailbox so she lost I don't know

00:23:10,489 --> 00:23:15,380
five to six years of image and for me

00:23:13,429 --> 00:23:18,260
all my life is in easy

00:23:15,380 --> 00:23:20,810
is in a gmail so I didn't want to be in

00:23:18,260 --> 00:23:23,450
the same same case so I could have done

00:23:20,810 --> 00:23:27,260
one thing probably to ask the NSA or the

00:23:23,450 --> 00:23:30,440
CIA to give me a copy of my emails but i

00:23:27,260 --> 00:23:34,040
decided to rely on myself and to create

00:23:30,440 --> 00:23:35,890
a tool for doing that so yeah i really

00:23:34,040 --> 00:23:39,800
did a year ago and it got a bit of

00:23:35,890 --> 00:23:44,990
traction and was a reference on the many

00:23:39,800 --> 00:23:48,320
technical website so there's been up to

00:23:44,990 --> 00:23:51,380
now more than 70,000 downloads for the

00:23:48,320 --> 00:23:56,290
photo tool which is quite a good success

00:23:51,380 --> 00:23:59,150
for myself so good personal success so

00:23:56,290 --> 00:24:02,170
yeah a few few tips if you want to

00:23:59,150 --> 00:24:04,910
embrace the open source open source

00:24:02,170 --> 00:24:07,160
community and start developing you we

00:24:04,910 --> 00:24:08,660
need to free some time and so this is

00:24:07,160 --> 00:24:10,820
what you should do you should kill your

00:24:08,660 --> 00:24:13,820
television get rid of your television as

00:24:10,820 --> 00:24:16,220
the Nets atomic there's been a wedding

00:24:13,820 --> 00:24:18,740
during the 90s so this is what I did

00:24:16,220 --> 00:24:22,730
when we moved to Germany three years ago

00:24:18,740 --> 00:24:25,870
as I was not speaking German I did me

00:24:22,730 --> 00:24:28,360
and my wife we decided to not take a

00:24:25,870 --> 00:24:30,640
the German TV and I think it was the

00:24:28,360 --> 00:24:32,860
best decision I did in my life so

00:24:30,640 --> 00:24:34,930
because it freed many many many many

00:24:32,860 --> 00:24:37,540
evenings I many name many times that I

00:24:34,930 --> 00:24:39,370
could dedicate to my own personal hobby

00:24:37,540 --> 00:24:43,390
so I think you should do you should do

00:24:39,370 --> 00:24:46,750
the same and then few words about what

00:24:43,390 --> 00:24:48,700
the open source will bring you so this

00:24:46,750 --> 00:24:51,070
is the opportunity to have your own

00:24:48,700 --> 00:24:53,110
personal tailored training you can go on

00:24:51,070 --> 00:24:56,320
whatever activity you want whatever

00:24:53,110 --> 00:24:58,120
technical framework and technical skills

00:24:56,320 --> 00:25:00,700
that you want to develop you can do it

00:24:58,120 --> 00:25:03,790
in an open source project this is also

00:25:00,700 --> 00:25:06,010
very good for internal relationship

00:25:03,790 --> 00:25:08,920
inter relationship skills because you

00:25:06,010 --> 00:25:10,690
would have to talk to two people you

00:25:08,920 --> 00:25:13,900
have to deal with users you will have to

00:25:10,690 --> 00:25:15,700
deal with committers if you want to to

00:25:13,900 --> 00:25:17,770
integrate more developers in your

00:25:15,700 --> 00:25:19,510
project and then your CV will shine

00:25:17,770 --> 00:25:22,720
because you will demonstrate that you

00:25:19,510 --> 00:25:25,030
have something personal that you you

00:25:22,720 --> 00:25:27,580
could you could do which is different

00:25:25,030 --> 00:25:28,990
from the out of the company world that

00:25:27,580 --> 00:25:31,690
which is different from the other

00:25:28,990 --> 00:25:34,000
candidates and then it's as I said it's

00:25:31,690 --> 00:25:36,790
incredibly rewarding I'm talking daily

00:25:34,000 --> 00:25:38,679
to people all over the world and I get

00:25:36,790 --> 00:25:40,870
lots of support and even for a little

00:25:38,679 --> 00:25:44,770
too like the one I did and for me it's

00:25:40,870 --> 00:25:47,500
it's really I get lots of progress out

00:25:44,770 --> 00:25:49,540
of out of this activity and then you

00:25:47,500 --> 00:25:52,000
have a unique sense of freedom and

00:25:49,540 --> 00:25:54,490
control because in companies we are all

00:25:52,000 --> 00:25:56,590
we all have constraints that from our

00:25:54,490 --> 00:25:58,870
management and other historical reason

00:25:56,590 --> 00:26:01,900
that we do not control here you do what

00:25:58,870 --> 00:26:04,270
you want you can integrate a team of a

00:26:01,900 --> 00:26:06,130
project which is already existing or you

00:26:04,270 --> 00:26:10,110
can create your own application and try

00:26:06,130 --> 00:26:12,809
to to make it alive so I think it's a

00:26:10,110 --> 00:26:16,630
unique sense of freedom that we can get

00:26:12,809 --> 00:26:19,120
in this world in our business world and

00:26:16,630 --> 00:26:21,390
finally if your idea is I think is very

00:26:19,120 --> 00:26:23,950
good you can probably find some ways to

00:26:21,390 --> 00:26:25,330
monetize it but that's nothing you

00:26:23,950 --> 00:26:27,820
should drink too much about it because

00:26:25,330 --> 00:26:30,100
it's probably not the point and I would

00:26:27,820 --> 00:26:32,410
always recommend to have a to licensed

00:26:30,100 --> 00:26:34,899
game one and open source 1 keep an open

00:26:32,410 --> 00:26:39,590
source one and find a way to

00:26:34,899 --> 00:26:41,690
financial 1 i'm a licensed one where you

00:26:39,590 --> 00:26:45,380
probably have more features or these

00:26:41,690 --> 00:26:48,440
kind of things finally three words about

00:26:45,380 --> 00:26:50,149
the tools i have used to promote and

00:26:48,440 --> 00:26:53,720
develop my offensive software of course

00:26:50,149 --> 00:26:55,490
d hub d that was very good the way god

00:26:53,720 --> 00:26:58,639
everything right so to manage your

00:26:55,490 --> 00:27:00,769
source to manage your issues to manage

00:26:58,639 --> 00:27:03,649
the documentation with the wiki and even

00:27:00,769 --> 00:27:06,470
they can even host the the web your

00:27:03,649 --> 00:27:09,500
website from paul the GM vote website is

00:27:06,470 --> 00:27:14,179
hosted by a by github it's very easy to

00:27:09,500 --> 00:27:17,960
do testing test test test continuous

00:27:14,179 --> 00:27:21,409
integration so I'm using Jenkins as a

00:27:17,960 --> 00:27:24,320
user and the user ID say it's very good

00:27:21,409 --> 00:27:27,889
so every time I commit something on

00:27:24,320 --> 00:27:30,230
github as some hooks but on the my

00:27:27,889 --> 00:27:32,120
Jenkins servers that then the source

00:27:30,230 --> 00:27:34,820
code is downloaded and the test fit is

00:27:32,120 --> 00:27:36,679
run so it is fantastic tool for that and

00:27:34,820 --> 00:27:39,559
it helped me to improve the quality of

00:27:36,679 --> 00:27:43,039
the the software and then finally the

00:27:39,559 --> 00:27:45,559
icon used on the the y combinator a new

00:27:43,039 --> 00:27:48,289
site once your application is ready and

00:27:45,559 --> 00:27:50,450
mature do not hesitate to publish it on

00:27:48,289 --> 00:27:52,759
the under our canoes this is what I did

00:27:50,450 --> 00:27:55,639
one year ago and it got a bit of

00:27:52,759 --> 00:27:58,009
traction the GM volt was number one for

00:27:55,639 --> 00:28:00,169
friday on the Acura news if this is how

00:27:58,009 --> 00:28:02,299
i attracted the attention of the

00:28:00,169 --> 00:28:04,250
different technical website so you

00:28:02,299 --> 00:28:07,029
should not educate to do that if you

00:28:04,250 --> 00:28:14,389
have a good idea where we recognize it

00:28:07,029 --> 00:28:21,500
so this is it thank you very much any

00:28:14,389 --> 00:28:26,659
question hello have you tried using a

00:28:21,500 --> 00:28:30,980
travesty I instead of Jenkins no have

00:28:26,659 --> 00:28:34,340
you heard of it yeah I've heard it yeah

00:28:30,980 --> 00:28:36,110
I've looked at it a bit at it but I had

00:28:34,340 --> 00:28:40,159
some problems because I needed to

00:28:36,110 --> 00:28:42,470
transfer some test data in order to to

00:28:40,159 --> 00:28:43,140
perform at my test Suites and it's a bit

00:28:42,470 --> 00:28:45,680
big

00:28:43,140 --> 00:28:50,810
and so I I stopped looking at it but

00:28:45,680 --> 00:28:50,810
it's definitely also an oil town a tibia

00:28:51,020 --> 00:29:00,090
um actually I have a question yeah can I

00:28:55,740 --> 00:29:02,760
know how could you tell like I'm really

00:29:00,090 --> 00:29:04,320
interested about jumbled okay but how

00:29:02,760 --> 00:29:06,720
does it work are you storing all the

00:29:04,320 --> 00:29:09,180
emails in the backend know when your own

00:29:06,720 --> 00:29:12,300
snot is not is storing all the emails on

00:29:09,180 --> 00:29:15,200
your app drive ah ok I'll get all the

00:29:12,300 --> 00:29:19,050
emails the emails are in the standard

00:29:15,200 --> 00:29:21,060
EML format so an ASCII format so you got

00:29:19,050 --> 00:29:23,760
all the emails and attachment in your

00:29:21,060 --> 00:29:26,940
hard drive so you keep control of your

00:29:23,760 --> 00:29:28,290
email I think after the adventure we we

00:29:26,940 --> 00:29:30,030
have in the next few weeks something

00:29:28,290 --> 00:29:32,850
which is quite important for for

00:29:30,030 --> 00:29:34,590
individuals so when you have to realize

00:29:32,850 --> 00:29:36,810
i think that when we will we put

00:29:34,590 --> 00:29:38,730
information on the cloud it might be

00:29:36,810 --> 00:29:41,220
available not only for yourself but for

00:29:38,730 --> 00:29:44,580
somebody else like governments and and

00:29:41,220 --> 00:29:46,920
and use our institution so it's quite

00:29:44,580 --> 00:29:49,200
tricky this here you keep control of

00:29:46,920 --> 00:29:54,540
your emails so after I'd you are free if

00:29:49,200 --> 00:29:56,910
you want to copy this email database if

00:29:54,540 --> 00:29:58,890
you want or repository on the cloud to

00:29:56,910 --> 00:30:01,050
make a backup compete or not you can

00:29:58,890 --> 00:30:03,360
also encrypt automatically the image can

00:30:01,050 --> 00:30:05,970
be accretive there when they are stored

00:30:03,360 --> 00:30:08,220
on the on the disk so you have some way

00:30:05,970 --> 00:30:11,250
to protect the data if you want to how

00:30:08,220 --> 00:30:13,800
did you build the application what

00:30:11,250 --> 00:30:17,190
technologies to use spuyten for free

00:30:13,800 --> 00:30:20,460
bite on base so Python I access the it's

00:30:17,190 --> 00:30:21,820
based on the imap API of gmail so

00:30:20,460 --> 00:30:24,430
interrogating the imap

00:30:21,820 --> 00:30:27,280
p I getting all the image also all the

00:30:24,430 --> 00:30:30,010
assets the gmail assets the lapels and

00:30:27,280 --> 00:30:33,240
under the stars and so on everything is

00:30:30,010 --> 00:30:35,950
a is also backup so when you restore the

00:30:33,240 --> 00:30:38,530
you restore your email you will recreate

00:30:35,950 --> 00:30:41,680
the exact copy of your mailbox because

00:30:38,530 --> 00:30:43,810
most of they also backup services I

00:30:41,680 --> 00:30:46,420
don't think they have not tried them all

00:30:43,810 --> 00:30:48,490
but the one I've tried way we're not

00:30:46,420 --> 00:30:50,500
doing that so we restore we will restore

00:30:48,490 --> 00:30:52,780
the image but they will not rest all the

00:30:50,500 --> 00:30:55,360
labels and things like that so you will

00:30:52,780 --> 00:30:57,040
use part of the your your mailbox when

00:30:55,360 --> 00:30:58,780
you when you do that song yeah I think

00:30:57,040 --> 00:31:01,180
it's not i think it's really especially

00:30:58,780 --> 00:31:03,160
as you said the last two three weeks

00:31:01,180 --> 00:31:06,190
things have happened and i think it's a

00:31:03,160 --> 00:31:09,070
very interesting service what are you

00:31:06,190 --> 00:31:11,680
using on the four degree of the he

00:31:09,070 --> 00:31:13,900
currently is just currently it's a

00:31:11,680 --> 00:31:16,650
command line tools okay okay it's not

00:31:13,900 --> 00:31:19,840
yet available from for my grandma

00:31:16,650 --> 00:31:25,090
hopefully i'm building the the the GUI

00:31:19,840 --> 00:31:28,540
and this is why i said i'm using a nod

00:31:25,090 --> 00:31:32,080
WebKit no vodka okay so i use a node web

00:31:28,540 --> 00:31:35,550
kid so I went as i said the web stack

00:31:32,080 --> 00:31:38,290
away so it's the the UI is built in

00:31:35,550 --> 00:31:40,240
JavaScript with web technologies and

00:31:38,290 --> 00:31:43,420
then in the back in the back end I

00:31:40,240 --> 00:31:44,800
called Python for maganda backup but I

00:31:43,420 --> 00:31:46,240
just had to look at it right now like

00:31:44,800 --> 00:31:50,290
when you said I was really interested I

00:31:46,240 --> 00:31:52,780
looked it up and just so basically for

00:31:50,290 --> 00:31:56,040
what I'm saying what I'm the way I saw

00:31:52,780 --> 00:31:59,980
it is basically you're using no Jas

00:31:56,040 --> 00:32:06,940
using you can use node modules in the

00:31:59,980 --> 00:32:09,100
client-side template you you yeah yeah

00:32:06,940 --> 00:32:12,760
if you want to come we can consider a

00:32:09,100 --> 00:32:15,130
bit more complicated but you can you use

00:32:12,760 --> 00:32:17,080
a chromium for doing the so the web

00:32:15,130 --> 00:32:21,160
browser the WebKit for doing the

00:32:17,080 --> 00:32:23,670
rendering and then you can use not so in

00:32:21,160 --> 00:32:25,860
theory I could replace Piton we

00:32:23,670 --> 00:32:27,840
everything we've not in JavaScript but I

00:32:25,860 --> 00:32:29,490
wanted to keep the business part in

00:32:27,840 --> 00:32:31,170
Python because I still want to provide

00:32:29,490 --> 00:32:33,150
the command line application for

00:32:31,170 --> 00:32:35,970
powerful users like Al's formula port

00:32:33,150 --> 00:32:37,890
that want to do a fancy thing women but

00:32:35,970 --> 00:32:41,640
instead is sold if you're using node on

00:32:37,890 --> 00:32:44,040
the on the front end right then would ya

00:32:41,640 --> 00:32:47,670
well on the the JavaScript on the on the

00:32:44,040 --> 00:32:50,850
on the HTML right it's a yeah it's a

00:32:47,670 --> 00:32:54,090
WebKit and northern yeah but then can

00:32:50,850 --> 00:32:55,350
you use like common libraries or would

00:32:54,090 --> 00:32:59,280
there be a class like would there be

00:32:55,350 --> 00:33:01,470
suppose from not librarian no no no

00:32:59,280 --> 00:33:04,800
libraries like JavaScript libraries yeah

00:33:01,470 --> 00:33:07,680
yeah sure hey i use a jquery in my in my

00:33:04,800 --> 00:33:10,620
in the application developing i use

00:33:07,680 --> 00:33:12,170
jquery 0 0 i use bootstrap and

00:33:10,620 --> 00:33:15,120
everything so you can use tone at the

00:33:12,170 --> 00:33:16,920
javascript library and you can use the

00:33:15,120 --> 00:33:19,440
node modules in order to access the

00:33:16,920 --> 00:33:21,360
operating systems ok i start the

00:33:19,440 --> 00:33:23,400
preferences and so on this is done in

00:33:21,360 --> 00:33:26,070
javascript for the user preferences and

00:33:23,400 --> 00:33:27,960
i used another module for accessing the

00:33:26,070 --> 00:33:29,880
file system foreign power it's really

00:33:27,960 --> 00:33:31,470
interesting i have a look at it i can

00:33:29,880 --> 00:33:35,640
show you a at the end of the

00:33:31,470 --> 00:33:38,130
presentation yeah this is one one

00:33:35,640 --> 00:33:40,920
example of application so it's very web

00:33:38,130 --> 00:33:44,910
like so is the application which has

00:33:40,920 --> 00:33:47,540
been built with an odd WebKit and grid

00:33:44,910 --> 00:33:49,590
for some kind of telephonic

00:33:47,540 --> 00:33:51,330
communication company or something like

00:33:49,590 --> 00:33:53,520
that but you can you can make some

00:33:51,330 --> 00:33:55,290
pretty nice interfaces if you want so i

00:33:53,520 --> 00:33:56,970
mean you the web technology or the web

00:33:55,290 --> 00:33:59,490
technologies are available so you are

00:33:56,970 --> 00:34:00,990
free to and do what you want then the

00:33:59,490 --> 00:34:03,330
good thing is you can you don't have to

00:34:00,990 --> 00:34:04,800
target a thousand browsers because no

00:34:03,330 --> 00:34:07,830
you actually this is embedded with

00:34:04,800 --> 00:34:14,400
chromium yes yeah i mention and yeah we

00:34:07,830 --> 00:34:17,460
ate whatever all right yeah hi did you

00:34:14,400 --> 00:34:20,730
look at p installer instead of p to

00:34:17,460 --> 00:34:23,280
access because it generates executable

00:34:20,730 --> 00:34:26,550
for linux windows and mac OS x okay

00:34:23,280 --> 00:34:29,190
easily with one single specification

00:34:26,550 --> 00:34:31,740
fights okay so you should look at it as

00:34:29,190 --> 00:34:32,220
it's a very active ok I love you look at

00:34:31,740 --> 00:34:41,669
it Frank

00:34:32,220 --> 00:34:44,220
I didn't know about it I wanted to know

00:34:41,669 --> 00:34:48,540
if you know about keavy the the

00:34:44,220 --> 00:34:51,810
framework we just had I just attended

00:34:48,540 --> 00:34:54,570
the conference yeah didn't did you have

00:34:51,810 --> 00:34:57,359
a look at it what do you know not I knew

00:34:54,570 --> 00:35:00,119
about it but I did have a deeper look

00:34:57,359 --> 00:35:04,050
into it so I'm not invest in myself into

00:35:00,119 --> 00:35:05,609
so I cannot provide any comments okay i

00:35:04,050 --> 00:35:12,090
would suggest you to look at sku it's

00:35:05,609 --> 00:35:15,500
very nice okay all right thank you very

00:35:12,090 --> 00:35:15,500

YouTube URL: https://www.youtube.com/watch?v=f909GqJvDnE


