Title: Marco Montanari - Django, Django Rest Framework and Angular2: RAD on SaaS platforms
Publication date: 2017-09-17
Playlist: EuroPython 2017
Description: 
	"Django, Django Rest Framework and Angular2: RAD on SaaS platforms
[EuroPython 2017 - Talk - 2017-07-10 - Anfiteatro 1]
[Rimini, Italy]

Rapid Application Development has been a major topic for the desktop development world. Yet, desktop development has proven to be at the end of its timeline and the latest major environment is now the web in its many forms (from browser to Electron and similars). Django offers an amazing infrastructure and Django Rest Framework an amazing middleware to solve most of the problems. The RAD development on Angular2 is then enabled by a set of libraries developed at Modal Nodes for both front and backend that ease the development of the front end tools and front end interactions with both unauthenticated and authenticated systems via JWT and Djoser. Specifically, we will see the changes in the metadata that will enable better interactions and the usage of both the backend elements and the front-end ones in order to ease development.

License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/
Please see our speaker release agreement for details: https://ep2017.europython.eu/en/speaker-release-agreement/
Captions: 
	00:00:04,430 --> 00:00:11,969
hello everyone we're going to talk about

00:00:08,719 --> 00:00:14,670
as the title said django Django rest

00:00:11,969 --> 00:00:16,710
framework and something else that is

00:00:14,670 --> 00:00:20,430
more Java or Java

00:00:16,710 --> 00:00:23,039
esque there's a catch because the title

00:00:20,430 --> 00:00:25,439
you have on the on the on the plan is

00:00:23,039 --> 00:00:28,080
not exactly the one that will be

00:00:25,439 --> 00:00:31,099
following because real fight you'll find

00:00:28,080 --> 00:00:33,210
out I don't want to spoil everything

00:00:31,099 --> 00:00:36,269
there's enough of that about Game of

00:00:33,210 --> 00:00:38,280
Thrones already so let's start with a

00:00:36,269 --> 00:00:41,940
fast Who am I I'm a software developer

00:00:38,280 --> 00:00:46,250
I'm a Python developer I love tasty file

00:00:41,940 --> 00:00:49,140
of Django rest framework I'm more the

00:00:46,250 --> 00:00:52,830
GIS developer and I work with the team

00:00:49,140 --> 00:00:56,040
in in Bologna with who does basically

00:00:52,830 --> 00:00:59,159
full stack in many different stacks even

00:00:56,040 --> 00:01:01,619
the ones with the wrong P I think this

00:00:59,159 --> 00:01:05,159
is very important because it's one of

00:01:01,619 --> 00:01:09,510
the of the elements that brings me here

00:01:05,159 --> 00:01:12,330
today and it's the interaction with the

00:01:09,510 --> 00:01:15,360
customer and the designers and the end

00:01:12,330 --> 00:01:18,690
product that we are required to develop

00:01:15,360 --> 00:01:20,550
in fact being for for design for

00:01:18,690 --> 00:01:22,350
developers and one designer means that

00:01:20,550 --> 00:01:24,780
the designer is the one that interact

00:01:22,350 --> 00:01:28,760
with the customer usually and interacts

00:01:24,780 --> 00:01:33,600
with the client that wants that specific

00:01:28,760 --> 00:01:37,290
shade of red or that specific form for

00:01:33,600 --> 00:01:40,610
that specific element on the platform on

00:01:37,290 --> 00:01:46,290
the front end on the front page on the

00:01:40,610 --> 00:01:48,600
mobile application and it's important

00:01:46,290 --> 00:01:52,530
because as coders we want to write new

00:01:48,600 --> 00:01:55,560
stuff we hate the routine and those

00:01:52,530 --> 00:01:57,659
coders we would love to have the

00:01:55,560 --> 00:01:59,940
designers changing their graphical stuff

00:01:57,659 --> 00:02:01,979
and be happy with that and have the

00:01:59,940 --> 00:02:05,040
clients and the customers be happy with

00:02:01,979 --> 00:02:09,200
that without us being bothered to change

00:02:05,040 --> 00:02:12,390
the CSS because that's not our work

00:02:09,200 --> 00:02:15,550
honestly and it's not being so

00:02:12,390 --> 00:02:20,170
chauvinistic is we hate that honestly

00:02:15,550 --> 00:02:26,980
and usually what we find ourselves doing

00:02:20,170 --> 00:02:28,510
is this and it's good because we usually

00:02:26,980 --> 00:02:30,730
find ourselves riding a Jenga

00:02:28,510 --> 00:02:32,560
application and we can put the templates

00:02:30,730 --> 00:02:36,070
into the Django application and we're

00:02:32,560 --> 00:02:41,980
kind of happy with that and it's good

00:02:36,070 --> 00:02:46,360
but the real issue with that is that we

00:02:41,980 --> 00:02:49,000
are unable to really use this

00:02:46,360 --> 00:02:55,990
flexibility that Django offers us so

00:02:49,000 --> 00:02:57,760
with the issue we had as a Spanish poet

00:02:55,990 --> 00:03:00,090
says a white man's question oh it

00:02:57,760 --> 00:03:04,480
contains half the answer

00:03:00,090 --> 00:03:06,790
what does the issue we want to say we've

00:03:04,480 --> 00:03:09,550
seen before we don't want to repeat

00:03:06,790 --> 00:03:12,850
ourselves we don't want to do the same

00:03:09,550 --> 00:03:18,010
work all over again every time how does

00:03:12,850 --> 00:03:22,239
that impact the the world we want to

00:03:18,010 --> 00:03:25,000
define and we want to express but we

00:03:22,239 --> 00:03:27,420
don't want to explain the API as you

00:03:25,000 --> 00:03:31,440
write we I mean the customer already has

00:03:27,420 --> 00:03:37,930
exactly understood what we are going to

00:03:31,440 --> 00:03:41,380
describe this world we know we would

00:03:37,930 --> 00:03:44,290
love these API to be self documenting

00:03:41,380 --> 00:03:48,010
and what is more self documenting than a

00:03:44,290 --> 00:03:51,360
beautiful piece of code except it is not

00:03:48,010 --> 00:03:54,910
and we know that very well but it's

00:03:51,360 --> 00:04:01,290
difficult to make that understand and

00:03:54,910 --> 00:04:01,290
it's difficult to really have it

00:04:01,620 --> 00:04:11,260
explained to to a designer and to a

00:04:07,870 --> 00:04:16,419
software entered at the ABA that the end

00:04:11,260 --> 00:04:18,280
customer of the application so what we

00:04:16,419 --> 00:04:20,769
found out as a team is that we need

00:04:18,280 --> 00:04:23,410
simple standard rules then standard

00:04:20,769 --> 00:04:26,190
rules means standard API is that's the

00:04:23,410 --> 00:04:28,890
basis of restfulness

00:04:26,190 --> 00:04:30,660
and that's good it says standard API

00:04:28,890 --> 00:04:32,550
suite standard live libraries and

00:04:30,660 --> 00:04:34,140
standard libraries mean more time and

00:04:32,550 --> 00:04:38,010
more possibilities to create the famous

00:04:34,140 --> 00:04:40,650
tool for the our designer to basically

00:04:38,010 --> 00:04:43,010
design and draw his own interfaces

00:04:40,650 --> 00:04:46,920
without our need without our help and

00:04:43,010 --> 00:04:49,170
that is an enormous win because that

00:04:46,920 --> 00:04:52,350
creates a lot of time to be used for

00:04:49,170 --> 00:04:55,890
this and it's not a matter of how we

00:04:52,350 --> 00:04:59,250
want to describe the world in a talk in

00:04:55,890 --> 00:05:03,390
the previous session about the status of

00:04:59,250 --> 00:05:06,990
rest frameworks I think one of the after

00:05:03,390 --> 00:05:11,360
that was not really dealt with what is

00:05:06,990 --> 00:05:11,360
the meta level description that these

00:05:11,420 --> 00:05:22,050
tools that these libraries that python

00:05:15,840 --> 00:05:24,720
has can can offer in fact with it

00:05:22,050 --> 00:05:27,060
considering that we're using Django we

00:05:24,720 --> 00:05:30,950
could use many different ways to design

00:05:27,060 --> 00:05:36,360
our API or describe the world we want to

00:05:30,950 --> 00:05:39,450
define as API in fact there are endless

00:05:36,360 --> 00:05:43,350
ways we could use Django class page

00:05:39,450 --> 00:05:46,580
views and personalize them to do their

00:05:43,350 --> 00:05:52,890
the hard work of responding to our

00:05:46,580 --> 00:05:56,190
options call to our guest posts and all

00:05:52,890 --> 00:05:59,030
the interactions that we consider useful

00:05:56,190 --> 00:06:03,330
we could describe a swagger file and

00:05:59,030 --> 00:06:08,270
said it's not that easy to do that in an

00:06:03,330 --> 00:06:12,210
automated manner with Django and with

00:06:08,270 --> 00:06:14,100
for example Django rest framework so

00:06:12,210 --> 00:06:17,040
what could we so we would need to

00:06:14,100 --> 00:06:17,840
describe our API in a completely

00:06:17,040 --> 00:06:21,270
different

00:06:17,840 --> 00:06:25,770
J'son file and then expose that JSON

00:06:21,270 --> 00:06:29,040
file through some way that has to be

00:06:25,770 --> 00:06:32,450
kept aligned with the real code of our

00:06:29,040 --> 00:06:35,639
application we could use with those

00:06:32,450 --> 00:06:38,639
whistle to good we could

00:06:35,639 --> 00:06:41,849
is the Ramo you could we could use any

00:06:38,639 --> 00:06:43,319
kind of standard and we could any kind

00:06:41,849 --> 00:06:47,360
of standard based on a markup language

00:06:43,319 --> 00:06:51,529
any kind of standard based on JSON

00:06:47,360 --> 00:06:57,409
variants we could use UML with or with

00:06:51,529 --> 00:07:00,960
graphs and designs and any kind of

00:06:57,409 --> 00:07:04,249
descriptive element or we could use any

00:07:00,960 --> 00:07:08,370
kind of transformation and as always

00:07:04,249 --> 00:07:11,099
this is the rule once we have 15

00:07:08,370 --> 00:07:13,500
standards and somebody thinks up a way

00:07:11,099 --> 00:07:15,539
to standardize them all in a universal

00:07:13,500 --> 00:07:19,080
standard we will end up with one more

00:07:15,539 --> 00:07:24,270
standard to mess with do we really want

00:07:19,080 --> 00:07:27,419
that honestly no because it's already a

00:07:24,270 --> 00:07:30,750
mess and we don't want entropy to kill

00:07:27,419 --> 00:07:36,120
us all sooner than needed there's Donald

00:07:30,750 --> 00:07:37,710
Trump for that so considering that we're

00:07:36,120 --> 00:07:44,240
starting with the Django framework as

00:07:37,710 --> 00:07:48,150
the basis for our for our platform the

00:07:44,240 --> 00:07:50,669
options that remain are basically two

00:07:48,150 --> 00:07:55,169
and it's jungle class-based views or

00:07:50,669 --> 00:07:57,750
Django rest framework let's go back to

00:07:55,169 --> 00:08:01,319
the basics so what are the two ways that

00:07:57,750 --> 00:08:05,159
we could use to to work with we could

00:08:01,319 --> 00:08:08,069
use again cut with views are very loose

00:08:05,159 --> 00:08:10,469
we can really define many kinds of

00:08:08,069 --> 00:08:13,250
interactions with them and they're cool

00:08:10,469 --> 00:08:14,789
but it means defining an adapter for

00:08:13,250 --> 00:08:18,899
from Django

00:08:14,789 --> 00:08:23,460
to the outside world that shows us the

00:08:18,899 --> 00:08:26,279
meta information that our our model

00:08:23,460 --> 00:08:28,110
represents on the other hand we have

00:08:26,279 --> 00:08:31,370
Django rest framework which is quite

00:08:28,110 --> 00:08:37,320
strict because it implements a real a

00:08:31,370 --> 00:08:42,539
very precise restful model and it is

00:08:37,320 --> 00:08:46,240
very descriptive on what kind of action

00:08:42,539 --> 00:08:49,029
we can do with the elements but it has a

00:08:46,240 --> 00:08:52,899
it lacks understand the description of

00:08:49,029 --> 00:08:57,850
data structures at least based on Python

00:08:52,899 --> 00:09:01,300
to the code hinting features of Python 3

00:08:57,850 --> 00:09:04,629
have not been yet very explored by the

00:09:01,300 --> 00:09:08,079
framework and we're trying to work on

00:09:04,629 --> 00:09:12,939
that on the through the description of

00:09:08,079 --> 00:09:14,410
the metadata one more thing that Django

00:09:12,939 --> 00:09:17,470
requests Frank the Django rest framework

00:09:14,410 --> 00:09:21,600
offers is the options method it's an

00:09:17,470 --> 00:09:27,579
amazing tool how many of you use it to

00:09:21,600 --> 00:09:29,319
work on Django rest framework how many

00:09:27,579 --> 00:09:33,899
of you use Django rest framework that's

00:09:29,319 --> 00:09:37,329
ok good ok I'm not in the wrong room

00:09:33,899 --> 00:09:39,970
it's not obvious how many of you use the

00:09:37,329 --> 00:09:43,149
options the the metadata element of

00:09:39,970 --> 00:09:45,970
Django rest framework is possibly the

00:09:43,149 --> 00:09:48,269
most amazing element that that can be

00:09:45,970 --> 00:09:52,600
used because it really describes you I

00:09:48,269 --> 00:09:55,959
happen to be inverted to have been

00:09:52,600 --> 00:09:58,449
working on on form generator based on

00:09:55,959 --> 00:10:00,790
just that and it's amazing how much we

00:09:58,449 --> 00:10:02,490
can achieve with that and maybe

00:10:00,790 --> 00:10:05,139
sometimes it's a little bit under

00:10:02,490 --> 00:10:08,829
descriptive but with just a few

00:10:05,139 --> 00:10:10,269
adjustments it becomes an incredible it

00:10:08,829 --> 00:10:12,939
tells you really the story of the back

00:10:10,269 --> 00:10:15,699
end and how it works how it interacts

00:10:12,939 --> 00:10:24,579
with stuff and how it represents things

00:10:15,699 --> 00:10:39,309
whoa what happens thingy

00:10:24,579 --> 00:10:42,730
where have you gone okay okay it said

00:10:39,309 --> 00:10:44,889
it's an amazing tool so what we have now

00:10:42,730 --> 00:10:46,869
we have chosen Django rest framework so

00:10:44,889 --> 00:10:48,489
we suddenly have a back-end based on

00:10:46,869 --> 00:10:52,420
Django and Django rest framework that

00:10:48,489 --> 00:10:58,420
keeps us on the database we have all the

00:10:52,420 --> 00:11:02,079
features of Django all the extras the

00:10:58,420 --> 00:11:04,360
expressions of the restful frame with

00:11:02,079 --> 00:11:06,610
the rest framework given by generous

00:11:04,360 --> 00:11:07,929
framework we have the API exposed

00:11:06,610 --> 00:11:10,389
through Django rest framework and we

00:11:07,929 --> 00:11:16,149
have the metadata extras the options

00:11:10,389 --> 00:11:18,369
element so cool but we have added two

00:11:16,149 --> 00:11:20,379
layers on our app and that's not cool

00:11:18,369 --> 00:11:22,059
it's not maintainable it's it's a mess

00:11:20,379 --> 00:11:24,489
because we have the model we have that

00:11:22,059 --> 00:11:28,689
serializer we have the view the view set

00:11:24,489 --> 00:11:30,879
and sometimes we don't have just one

00:11:28,689 --> 00:11:33,429
serializer for one model that would be a

00:11:30,879 --> 00:11:35,769
perfect world and sometimes we have two

00:11:33,429 --> 00:11:38,079
three four serializers one specific

00:11:35,769 --> 00:11:42,929
model because we have one for creation

00:11:38,079 --> 00:11:46,929
one for details one for listings one for

00:11:42,929 --> 00:11:53,019
other specific views or nested views or

00:11:46,929 --> 00:11:56,939
whatever so it becomes it risks the risk

00:11:53,019 --> 00:12:00,489
is making it becoming really messy

00:11:56,939 --> 00:12:03,999
unless we have we get something cool

00:12:00,489 --> 00:12:06,669
from that unless we can find a nice tool

00:12:03,999 --> 00:12:09,850
or library that helps us doing cool

00:12:06,669 --> 00:12:13,660
things on the front end and here comes

00:12:09,850 --> 00:12:16,799
the famous catch because angular 2 could

00:12:13,660 --> 00:12:19,449
be a nice tool and angular for

00:12:16,799 --> 00:12:20,559
considering it changes number every six

00:12:19,449 --> 00:12:22,779
months

00:12:20,559 --> 00:12:26,499
angular whatever the number that has the

00:12:22,779 --> 00:12:30,520
highest bidder wins could be a nice tool

00:12:26,499 --> 00:12:33,670
but it has an amazing side effect it's

00:12:30,520 --> 00:12:40,890
a really cool element and has a really

00:12:33,670 --> 00:12:43,660
amazing ability to describe and to

00:12:40,890 --> 00:12:44,550
enable really the structuring of

00:12:43,660 --> 00:12:49,090
meta-level

00:12:44,550 --> 00:12:52,060
descriptions of the world it does not

00:12:49,090 --> 00:12:54,430
work well with automated designers

00:12:52,060 --> 00:12:56,500
drag-and-drop designers we have a

00:12:54,430 --> 00:13:00,760
library where we've developed a library

00:12:56,500 --> 00:13:05,710
to enable us to really ease the work

00:13:00,760 --> 00:13:09,360
with angular and it's a nice library it

00:13:05,710 --> 00:13:11,920
helps a lot it's written shortens

00:13:09,360 --> 00:13:18,220
development time a lot but it doesn't

00:13:11,920 --> 00:13:22,570
help as health our designer so what's

00:13:18,220 --> 00:13:26,350
the alternative the alternative is to go

00:13:22,570 --> 00:13:29,140
for something pure JavaScript driven how

00:13:26,350 --> 00:13:36,570
many of you haven't happen to know great

00:13:29,140 --> 00:13:39,580
yes good gracias is an amazing tool it's

00:13:36,570 --> 00:13:42,820
extensible flexible and really a

00:13:39,580 --> 00:13:50,430
beautiful drag-and-drop web page

00:13:42,820 --> 00:13:55,110
designer it was built for newsletter

00:13:50,430 --> 00:14:00,340
designing in a very wordpress c fashion

00:13:55,110 --> 00:14:04,510
in order to help designers recreate

00:14:00,340 --> 00:14:06,640
their newsletter in a fashion in a

00:14:04,510 --> 00:14:09,430
simple way to keep all the elements

00:14:06,640 --> 00:14:13,090
under control but it's a really amazing

00:14:09,430 --> 00:14:15,030
tool as a platform because it's easy to

00:14:13,090 --> 00:14:18,460
use for designer fun fun to work with

00:14:15,030 --> 00:14:23,020
for the developers the only side effect

00:14:18,460 --> 00:14:25,740
is that it's pure JavaScript and there

00:14:23,020 --> 00:14:33,310
is no way to integrate JavaScript into

00:14:25,740 --> 00:14:37,240
the graves jf element so it that means

00:14:33,310 --> 00:14:42,210
that we have to create something magic

00:14:37,240 --> 00:14:42,210
ish to connect the world

00:14:45,060 --> 00:14:53,170
what if we could change the DRF metadata

00:14:48,700 --> 00:14:57,220
and generate grave serious components

00:14:53,170 --> 00:15:00,029
from the standardized metadata what do

00:14:57,220 --> 00:15:05,080
you mean by that suppose you have the

00:15:00,029 --> 00:15:09,970
elements suppose we have the elements we

00:15:05,080 --> 00:15:12,370
can work with described as exactly as

00:15:09,970 --> 00:15:15,550
the Django rest framework does we have

00:15:12,370 --> 00:15:17,709
the all the methods we we know of we

00:15:15,550 --> 00:15:20,380
know that we can have a guess on the

00:15:17,709 --> 00:15:22,870
list we have know that we can have the

00:15:20,380 --> 00:15:27,790
get on the detail the pose the put and

00:15:22,870 --> 00:15:31,600
the options and the delete and the

00:15:27,790 --> 00:15:34,420
search we can easily define how these

00:15:31,600 --> 00:15:38,470
elements have to be connected to each

00:15:34,420 --> 00:15:42,070
other and from that we can easily

00:15:38,470 --> 00:15:44,220
generate new components for the grapes

00:15:42,070 --> 00:15:48,910
GIS platform

00:15:44,220 --> 00:15:53,560
as such it becomes quite easy to define

00:15:48,910 --> 00:15:57,360
a simple way for the designer to take

00:15:53,560 --> 00:16:00,370
our metadata describing the API we have

00:15:57,360 --> 00:16:05,080
transporting into that everything into

00:16:00,370 --> 00:16:08,650
grapes yes looking at the sidebar where

00:16:05,080 --> 00:16:13,120
the components live dropping them into

00:16:08,650 --> 00:16:20,320
the into the interface and saving the

00:16:13,120 --> 00:16:24,459
resulting elements as pure JavaScript

00:16:20,320 --> 00:16:26,829
and HTML Javascript and CSS visit a zip

00:16:24,459 --> 00:16:29,140
file can be generated directly from

00:16:26,829 --> 00:16:32,350
grapes yes it's not easily version of

00:16:29,140 --> 00:16:36,130
all I know and I totally agree but it

00:16:32,350 --> 00:16:40,959
requires just to learn a bit of gate and

00:16:36,130 --> 00:16:43,959
the designer can do that and his code is

00:16:40,959 --> 00:16:47,320
perfectly version and it can be tracked

00:16:43,959 --> 00:16:52,910
and the

00:16:47,320 --> 00:16:55,390
the result in this is that the

00:16:52,910 --> 00:16:57,800
developers can live in their own space

00:16:55,390 --> 00:17:03,350
defining their own data structures and

00:16:57,800 --> 00:17:05,689
their own data models these data models

00:17:03,350 --> 00:17:09,199
are then made visible through the

00:17:05,689 --> 00:17:15,620
metadata to the designer who doesn't

00:17:09,199 --> 00:17:18,110
need to read documents or analyze papers

00:17:15,620 --> 00:17:22,040
and end results of discussions it just

00:17:18,110 --> 00:17:24,350
looks at the code and starts designing

00:17:22,040 --> 00:17:26,150
their interface just looks at the

00:17:24,350 --> 00:17:28,970
components and starts designing their

00:17:26,150 --> 00:17:34,150
their their details and start defining

00:17:28,970 --> 00:17:34,150
what color the specific element has what

00:17:34,300 --> 00:17:42,440
pattern it has to take from whatever

00:17:38,600 --> 00:17:46,280
other source and from whatever decision

00:17:42,440 --> 00:17:50,210
the customer the customer makes on what

00:17:46,280 --> 00:17:54,320
kind of elements he wants to see it's

00:17:50,210 --> 00:18:03,460
not a pure angular way but it goes away

00:17:54,320 --> 00:18:03,460
it is very far as as a data structure

00:18:06,890 --> 00:18:12,679
so what are the contributions what are

00:18:10,370 --> 00:18:14,660
the elements we are we have published

00:18:12,679 --> 00:18:16,670
and we will publish in the next in the

00:18:14,660 --> 00:18:22,160
next few days because these are the

00:18:16,670 --> 00:18:27,760
elements that really that we're really

00:18:22,160 --> 00:18:27,760
trying to publish and transform into

00:18:28,360 --> 00:18:34,910
let's say betterment for the community

00:18:32,200 --> 00:18:37,100
the Django rest framework metadata

00:18:34,910 --> 00:18:40,549
transformer a tool that enables us to

00:18:37,100 --> 00:18:42,860
transform the jangling earth metadata

00:18:40,549 --> 00:18:46,760
into a JavaScript that can be used on

00:18:42,860 --> 00:18:50,690
graves jf in fact on different

00:18:46,760 --> 00:18:53,540
situations one of them is grave CAS on

00:18:50,690 --> 00:18:56,450
the other hand we have the grave CS data

00:18:53,540 --> 00:19:00,919
attribute animator which is not strictly

00:18:56,450 --> 00:19:08,360
bound to grave CS but it basically helps

00:19:00,919 --> 00:19:13,820
us to transform the data from the data

00:19:08,360 --> 00:19:16,610
attributes in graves yes from var

00:19:13,820 --> 00:19:19,309
concept saying that this data set should

00:19:16,610 --> 00:19:25,760
go and take data from that specific

00:19:19,309 --> 00:19:30,590
back-end and use this or that login data

00:19:25,760 --> 00:19:33,020
login information to get the information

00:19:30,590 --> 00:19:38,780
from the backend and should expose that

00:19:33,020 --> 00:19:42,280
through this or that template and should

00:19:38,780 --> 00:19:45,169
wrap all these informations into one

00:19:42,280 --> 00:19:48,710
simple action that goes directly to the

00:19:45,169 --> 00:19:53,059
backend pulls the data shows them on the

00:19:48,710 --> 00:19:55,610
front-end and solves everything with the

00:19:53,059 --> 00:20:00,800
simple as a simple task is a simple

00:19:55,610 --> 00:20:04,180
repetitive task on the other hand I said

00:20:00,800 --> 00:20:07,100
we're trying to standardize the work on

00:20:04,180 --> 00:20:11,320
angular 2 as well angular whatever as

00:20:07,100 --> 00:20:14,750
well we didn't discuss this but it's a

00:20:11,320 --> 00:20:18,800
it was the main reason for this talk in

00:20:14,750 --> 00:20:23,360
fact because we were hoping a certain

00:20:18,800 --> 00:20:27,230
amount of changes in the angular 2

00:20:23,360 --> 00:20:28,070
infrastructure would happen by now it

00:20:27,230 --> 00:20:32,030
didn't happen

00:20:28,070 --> 00:20:35,380
hmm but it's it's an amazing framework

00:20:32,030 --> 00:20:38,960
anyway and all the work we have done is

00:20:35,380 --> 00:20:41,630
right now will be published in the next

00:20:38,960 --> 00:20:45,220
few days as the model notes back and

00:20:41,630 --> 00:20:51,650
management service which is a generic

00:20:45,220 --> 00:20:54,380
back-end management platform for angular

00:20:51,650 --> 00:21:02,660
2 services enabling interaction with any

00:20:54,380 --> 00:21:05,180
kind of flavored backends or specific

00:21:02,660 --> 00:21:15,730
backends if you write your own your own

00:21:05,180 --> 00:21:18,800
flavor only no this is the result

00:21:15,730 --> 00:21:21,590
finally we can say in our corner and

00:21:18,800 --> 00:21:23,810
hide behind our screens and be happy

00:21:21,590 --> 00:21:25,940
that we don't have to interact with

00:21:23,810 --> 00:21:28,550
customers except for the beginning where

00:21:25,940 --> 00:21:30,140
we have to easily discuss this but we

00:21:28,550 --> 00:21:32,660
are discussing the possibility to have

00:21:30,140 --> 00:21:38,450
the designer doing also the data

00:21:32,660 --> 00:21:41,270
modeling if possible and the designer

00:21:38,450 --> 00:21:46,700
talks to the customer and is happy and

00:21:41,270 --> 00:21:49,190
rich Riccardo keeps interacting with his

00:21:46,700 --> 00:21:51,530
friends the customers and we are all and

00:21:49,190 --> 00:21:53,390
everybody is happy basically that was

00:21:51,530 --> 00:21:58,370
our main goal and we think that with

00:21:53,390 --> 00:22:01,280
this structure we're able to go for that

00:21:58,370 --> 00:22:05,780
I think we don't have the time for a

00:22:01,280 --> 00:22:09,230
full demo so I'll say with the next okay

00:22:05,780 --> 00:22:12,050
well anyway it did it I would say it's

00:22:09,230 --> 00:22:15,470
better to maybe ask get some questions

00:22:12,050 --> 00:22:18,830
and have some and give you some answers

00:22:15,470 --> 00:22:24,500
anyway these are the mediums Twitter

00:22:18,830 --> 00:22:32,470
github for me and the team Thanks Thank

00:22:24,500 --> 00:22:32,470
You Emma for the backup so question

00:22:45,200 --> 00:22:50,380
thank you very tog so what happens when

00:22:48,200 --> 00:22:53,270
the think you're doing on the back ends

00:22:50,380 --> 00:22:56,030
goes away from the standard model resets

00:22:53,270 --> 00:22:59,360
and standard generic attach because this

00:22:56,030 --> 00:23:01,400
is for me this is for getting people

00:22:59,360 --> 00:23:03,350
hyped about the restaurant all of your

00:23:01,400 --> 00:23:05,270
tests are grateful not really useful in

00:23:03,350 --> 00:23:08,390
your project because there are

00:23:05,270 --> 00:23:10,130
requirements that move you away from

00:23:08,390 --> 00:23:13,990
there so what happened then you have

00:23:10,130 --> 00:23:13,990
just an API you mm-hmm

00:23:14,620 --> 00:23:22,220
there are two aspects on that answer the

00:23:17,210 --> 00:23:24,500
first one is that if there is an aspect

00:23:22,220 --> 00:23:26,980
that good that moves away from Jiang

00:23:24,500 --> 00:23:30,860
from from the classic model view set

00:23:26,980 --> 00:23:34,280
then we try to understand why it moves

00:23:30,860 --> 00:23:36,950
away from the mob you said and at least

00:23:34,280 --> 00:23:39,820
in the last two three projects that we

00:23:36,950 --> 00:23:44,000
worked on it was just a matter of

00:23:39,820 --> 00:23:47,270
describing the world that for example if

00:23:44,000 --> 00:23:52,040
you put a like on if you like something

00:23:47,270 --> 00:23:55,790
then it I like this post and it's put as

00:23:52,040 --> 00:23:58,490
a verb on the other hand if you think of

00:23:55,790 --> 00:24:00,230
it as a physical action you want to have

00:23:58,490 --> 00:24:02,390
an interaction with your database and

00:24:00,230 --> 00:24:03,950
you want to put something on the

00:24:02,390 --> 00:24:07,300
database with you need to track

00:24:03,950 --> 00:24:10,730
something then you need to physically

00:24:07,300 --> 00:24:14,750
represent it as something different then

00:24:10,730 --> 00:24:17,980
it's a more a matter of defining the

00:24:14,750 --> 00:24:21,890
interactions the actions on the data as

00:24:17,980 --> 00:24:24,890
real physical things that become at a

00:24:21,890 --> 00:24:28,250
certain point models there are I agree

00:24:24,890 --> 00:24:33,500
some athletes that cannot be redirected

00:24:28,250 --> 00:24:36,170
to this for example if you suppose you

00:24:33,500 --> 00:24:39,290
have different kinds of visualizations

00:24:36,170 --> 00:24:41,710
of the same element where we have when

00:24:39,290 --> 00:24:45,410
we might have different detail

00:24:41,710 --> 00:24:47,170
representation of the same model in that

00:24:45,410 --> 00:24:51,760
case

00:24:47,170 --> 00:24:53,620
it's part of the extended metadata that

00:24:51,760 --> 00:24:57,100
we've been working on extending the

00:24:53,620 --> 00:24:59,470
metadata generator to expose these kinds

00:24:57,100 --> 00:25:03,600
of information as well because it's the

00:24:59,470 --> 00:25:07,120
only way to go into that direction again

00:25:03,600 --> 00:25:10,410
personally I think I feel more

00:25:07,120 --> 00:25:14,830
comfortable keeping the rest structure

00:25:10,410 --> 00:25:19,960
rigid and strict because it keeps the I

00:25:14,830 --> 00:25:24,100
mean standardizing helps not getting the

00:25:19,960 --> 00:25:26,740
call from the designer let's let's speak

00:25:24,100 --> 00:25:28,510
cynically we don't want to be called by

00:25:26,740 --> 00:25:31,809
the designer what how do I get to that

00:25:28,510 --> 00:25:34,150
information we would love the designer

00:25:31,809 --> 00:25:36,549
to be able to do that by themself and

00:25:34,150 --> 00:25:39,070
saying okay this is the data structure

00:25:36,549 --> 00:25:42,309
that I need where do we get that let's

00:25:39,070 --> 00:25:44,290
see the the metadata or maybe let's see

00:25:42,309 --> 00:25:46,059
from the components if there is a

00:25:44,290 --> 00:25:48,580
component that keeps that gives me that

00:25:46,059 --> 00:25:50,980
information if that's missing then

00:25:48,580 --> 00:25:53,770
that's a good thing that's the kind of

00:25:50,980 --> 00:25:55,299
and of work we love because that's me

00:25:53,770 --> 00:25:59,340
that means that we need to explore a new

00:25:55,299 --> 00:25:59,340
way to expose the information but

00:26:07,990 --> 00:26:12,410
there we go

00:26:09,410 --> 00:26:14,750
so hi and thanks for that great so I've

00:26:12,410 --> 00:26:17,510
been working with you chest which is

00:26:14,750 --> 00:26:21,830
basically the best bits from anchor and

00:26:17,510 --> 00:26:27,020
react if I understood correctly the red

00:26:21,830 --> 00:26:32,930
chairs is looks pretty nice how how far

00:26:27,020 --> 00:26:38,840
is it the preach thing or is it is there

00:26:32,930 --> 00:26:42,320
way or is it like something like if you

00:26:38,840 --> 00:26:46,340
will over em for JavaScript for example

00:26:42,320 --> 00:26:51,140
for Django to get a JavaScript and kind

00:26:46,340 --> 00:26:53,180
of a thing just like a library in for

00:26:51,140 --> 00:26:57,020
JavaScript and that would work like a

00:26:53,180 --> 00:27:00,490
over em in the backend already like is

00:26:57,020 --> 00:27:06,020
this moving forwards it or is this

00:27:00,490 --> 00:27:07,670
implementing this kind of acting did

00:27:06,020 --> 00:27:11,150
your question is if there is something

00:27:07,670 --> 00:27:14,660
like a or M for the JavaScript part neck

00:27:11,150 --> 00:27:18,560
like the grape juice is obviously one

00:27:14,660 --> 00:27:22,100
step higher but yes if if the is a

00:27:18,560 --> 00:27:25,880
medium bit you salt about is it is it

00:27:22,100 --> 00:27:32,180
something like a / M for the JavaScript

00:27:25,880 --> 00:27:35,000
or is there a project like that gravy s

00:27:32,180 --> 00:27:39,110
is just a front end designer and that's

00:27:35,000 --> 00:27:46,070
exactly the limit of the project we've

00:27:39,110 --> 00:27:49,070
been experimenting with with real for

00:27:46,070 --> 00:27:53,960
both for basically any platform right

00:27:49,070 --> 00:27:57,530
now because they enables real on web

00:27:53,960 --> 00:28:00,770
development on webpages as well so there

00:27:57,530 --> 00:28:02,890
is this possibility and it's quite

00:28:00,770 --> 00:28:07,710
interesting because it's a very

00:28:02,890 --> 00:28:10,450
interesting world to to explore

00:28:07,710 --> 00:28:15,130
right now it's quite difficult to

00:28:10,450 --> 00:28:17,980
integrate the various parts because it's

00:28:15,130 --> 00:28:21,310
JavaScript and it's as the people from

00:28:17,980 --> 00:28:24,940
typescript said hey stable is the new

00:28:21,310 --> 00:28:27,250
alpha and so you don't get really to a

00:28:24,940 --> 00:28:30,070
stand point where you say okay this is

00:28:27,250 --> 00:28:33,750
stable stuff let's put that together and

00:28:30,070 --> 00:28:37,000
see what happens there is this beautiful

00:28:33,750 --> 00:28:38,290
lake where every ship is slightly moving

00:28:37,000 --> 00:28:42,640
and you don't exactly know in which

00:28:38,290 --> 00:28:43,990
direction and we're working on trying to

00:28:42,640 --> 00:28:46,630
interact you have these elements

00:28:43,990 --> 00:28:48,850
interacting as I said the the most

00:28:46,630 --> 00:28:52,360
interesting project in that direction at

00:28:48,850 --> 00:28:55,200
the moment is possibly real to work with

00:28:52,360 --> 00:28:59,920
the Nova RAM but there are also smaller

00:28:55,200 --> 00:29:04,480
projects that try to just rely on SQLite

00:28:59,920 --> 00:29:08,590
on the browser side to have almost a

00:29:04,480 --> 00:29:10,270
deep connection with the database anyway

00:29:08,590 --> 00:29:12,820
can be interesting anyway can be

00:29:10,270 --> 00:29:19,000
explored again the most advanced project

00:29:12,820 --> 00:29:21,700
and that is real so thank you wants to

00:29:19,000 --> 00:29:24,670
get in for the great though and remember

00:29:21,700 --> 00:29:25,770
to write the talk yeah thank you much

00:29:24,670 --> 00:29:30,660
thank you very much

00:29:25,770 --> 00:29:30,660

YouTube URL: https://www.youtube.com/watch?v=DrQmYoZLGw8


