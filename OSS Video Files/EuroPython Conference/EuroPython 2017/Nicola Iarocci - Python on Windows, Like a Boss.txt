Title: Nicola Iarocci - Python on Windows, Like a Boss
Publication date: 2017-09-17
Playlist: EuroPython 2017
Description: 
	"Python on Windows, Like a Boss
[EuroPython 2017 - Talk - 2017-07-10 - Arengo]
[Rimini, Italy]

Historically, Python coding on Windows has been kind of troublesome, but not anymore. Since a couple of years ago it is possible write awesome quality Python code with Visual Studio. This is good news for Python developers of all levels, because Visual Studio offers and incredible set of tools to enhance all the stages of product development: from managing virtual environments and handling package management, to writing and refactoring code, up to testing & debugging - all of that for free. In this talk I will demo how you can use Visual Studio to boost your Python development on Windows.

License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/
Please see our speaker release agreement for details: https://ep2017.europython.eu/en/speaker-release-agreement/
Captions: 
	00:00:04,150 --> 00:00:09,120
well good morning everybody and thanks

00:00:07,029 --> 00:00:11,980
for coming and listening to my talk so

00:00:09,120 --> 00:00:14,340
let's start where you did the tittle you

00:00:11,980 --> 00:00:17,830
will entitle you know it already and

00:00:14,340 --> 00:00:21,460
let's start with who I am which is kind

00:00:17,830 --> 00:00:25,000
of the point of this talk because I am

00:00:21,460 --> 00:00:27,730
being called a weirdo once by a guy to

00:00:25,000 --> 00:00:30,369
whom I was explaining what I do can you

00:00:27,730 --> 00:00:32,439
actually read it's not really important

00:00:30,369 --> 00:00:34,420
I'm going to tell you so I work on

00:00:32,439 --> 00:00:36,970
Python of course it will off of Python

00:00:34,420 --> 00:00:37,630
you may know some of my open-source

00:00:36,970 --> 00:00:42,940
projects

00:00:37,630 --> 00:00:45,190
I'm I am the author of the evil rest API

00:00:42,940 --> 00:00:47,680
framework which is based on flask and

00:00:45,190 --> 00:00:51,520
also servers which is a data validation

00:00:47,680 --> 00:00:53,140
library for Python both have quite a

00:00:51,520 --> 00:00:56,140
following and a community around them

00:00:53,140 --> 00:01:00,879
but also I do a lot of stuff in c-sharp

00:00:56,140 --> 00:01:03,550
and other languages and I lead the

00:01:00,879 --> 00:01:05,979
development of an accounting application

00:01:03,550 --> 00:01:08,860
in my own country and that's basically

00:01:05,979 --> 00:01:12,069
all the C sharp and F sharp functional

00:01:08,860 --> 00:01:14,940
languages stuff like that I got a few

00:01:12,069 --> 00:01:18,280
awards also I'm also very active in the

00:01:14,940 --> 00:01:20,410
development community in Italy but

00:01:18,280 --> 00:01:22,950
that's not really relevant for this talk

00:01:20,410 --> 00:01:27,940
what really matters is that I do

00:01:22,950 --> 00:01:33,069
multiple languages and this takes me

00:01:27,940 --> 00:01:35,619
especially on Windows on we're the lands

00:01:33,069 --> 00:01:37,929
where basically I in for I've been for

00:01:35,619 --> 00:01:40,840
stood until a few months ago or years

00:01:37,929 --> 00:01:43,170
ago to work on different platform as you

00:01:40,840 --> 00:01:45,970
can see I'm speaking about Windows or

00:01:43,170 --> 00:01:48,459
Python on Windows but I am using a Mac

00:01:45,970 --> 00:01:51,369
here which is kind of weird to begin

00:01:48,459 --> 00:01:53,349
with and yeah I'm doing Python

00:01:51,369 --> 00:01:57,280
development into a virtual machine on

00:01:53,349 --> 00:01:58,420
our sa x OS 10 host which is kind of

00:01:57,280 --> 00:02:00,550
weird again

00:01:58,420 --> 00:02:06,399
and so when I do Python I use all the

00:02:00,550 --> 00:02:11,020
typical Python stack staff so I use them

00:02:06,399 --> 00:02:14,110
for text editing i term bash OS pan or

00:02:11,020 --> 00:02:17,849
linux the Pentagon if I'm SS aging

00:02:14,110 --> 00:02:22,019
somewhere else or not so I'm the typical

00:02:17,849 --> 00:02:25,739
Linux hacker but then when I work on a

00:02:22,019 --> 00:02:28,170
sea shot I am forced to work on Visual

00:02:25,739 --> 00:02:31,680
Studio which is by the way an awesome

00:02:28,170 --> 00:02:33,989
IDE but if you are using text editors

00:02:31,680 --> 00:02:39,180
and VMA you are probably not really

00:02:33,989 --> 00:02:41,459
found found of fond of ideas I hope that

00:02:39,180 --> 00:02:42,239
this talk with kind of change your mind

00:02:41,459 --> 00:02:46,709
about that

00:02:42,239 --> 00:02:48,870
I also use a phenomenal women emulator

00:02:46,709 --> 00:02:53,299
for Visual Studio so at least I can

00:02:48,870 --> 00:02:56,669
enjoy a beam keybindings in my favorite

00:02:53,299 --> 00:03:00,239
IDE so if you use your visual studio as

00:02:56,669 --> 00:03:02,989
and your so like we may look it up it's

00:03:00,239 --> 00:03:06,299
called West beam is a wonderful

00:03:02,989 --> 00:03:08,250
extension for Visual Studio and yes I

00:03:06,299 --> 00:03:10,290
work on the drop net framework and of

00:03:08,250 --> 00:03:12,599
course I work on windows and that's been

00:03:10,290 --> 00:03:16,169
the story basically of my life working

00:03:12,599 --> 00:03:19,379
on different platforms one day the other

00:03:16,169 --> 00:03:22,439
day or even by night and by day on a

00:03:19,379 --> 00:03:26,009
different platform so basically a

00:03:22,439 --> 00:03:28,049
nightmare if you ever are like me and

00:03:26,009 --> 00:03:30,329
happen to work on different stacks you

00:03:28,049 --> 00:03:32,879
know all about this just out of

00:03:30,329 --> 00:03:37,500
curiosity how many of you work on

00:03:32,879 --> 00:03:40,879
Windows machines Oh wonderful and how

00:03:37,500 --> 00:03:43,979
many of you do Linux on Windows machines

00:03:40,879 --> 00:03:44,400
well quite a few so it's not bad not bad

00:03:43,979 --> 00:03:46,769
at all

00:03:44,400 --> 00:03:49,049
and do you also do other languages like

00:03:46,769 --> 00:03:51,750
C sharp or maybe other languages with

00:03:49,049 --> 00:03:55,500
maybe not she shot great how many are

00:03:51,750 --> 00:03:58,259
using Vizier's to a C sharp sorry wait

00:03:55,500 --> 00:04:01,199
C sharp guys so you see it's quite a

00:03:58,259 --> 00:04:02,849
different world budget word and again

00:04:01,199 --> 00:04:04,680
the point of this tool basically has

00:04:02,849 --> 00:04:07,319
there are different stacks for different

00:04:04,680 --> 00:04:08,989
languages which is kind of strange in my

00:04:07,319 --> 00:04:13,829
opinion shouldn't be like this

00:04:08,989 --> 00:04:16,229
and so I needed something something that

00:04:13,829 --> 00:04:19,049
could kind of make these two different

00:04:16,229 --> 00:04:20,729
worlds collide convert in some way so

00:04:19,049 --> 00:04:23,550
that I didn't have to switch back and

00:04:20,729 --> 00:04:26,669
forth between these specs we are not

00:04:23,550 --> 00:04:28,300
quite there yet to be honest but we are

00:04:26,669 --> 00:04:29,919
making prophecies

00:04:28,300 --> 00:04:34,569
the quite impressive promises in my

00:04:29,919 --> 00:04:37,479
opinion and learnt the most relevant for

00:04:34,569 --> 00:04:40,360
me at least release that changed the way

00:04:37,479 --> 00:04:42,610
I work on Python lately has been the

00:04:40,360 --> 00:04:44,650
Python tools for Visual Studio so if you

00:04:42,610 --> 00:04:47,919
are a sous-chef guys you probably are

00:04:44,650 --> 00:04:50,319
kind of forced to using to use Visual

00:04:47,919 --> 00:04:52,770
Studio if you are not a c-sharp D I

00:04:50,319 --> 00:04:57,819
probably you heard about Visual Studio

00:04:52,770 --> 00:05:00,250
good embed embed links probably but I

00:04:57,819 --> 00:05:02,590
believe it can be a nice interesting

00:05:00,250 --> 00:05:05,169
option right now Windows not only for C

00:05:02,590 --> 00:05:07,150
sharp F sharp typescript about also for

00:05:05,169 --> 00:05:10,360
Python and this is very interesting it's

00:05:07,150 --> 00:05:12,490
by the way a visual studio or I should

00:05:10,360 --> 00:05:14,830
say I should say the Python tools for

00:05:12,490 --> 00:05:17,550
visual studio are open source you can go

00:05:14,830 --> 00:05:20,680
on github and contribute to the project

00:05:17,550 --> 00:05:22,449
it's made with love by a guy and not

00:05:20,680 --> 00:05:24,610
only a guy is a small team within

00:05:22,449 --> 00:05:27,099
Microsoft but the interesting part here

00:05:24,610 --> 00:05:30,729
is that they are also called contributor

00:05:27,099 --> 00:05:32,469
to Python in particular Steve Dowell

00:05:30,729 --> 00:05:34,360
which is the lead project of Python

00:05:32,469 --> 00:05:37,509
tools for visual studio he's a core

00:05:34,360 --> 00:05:40,479
developer of Python so he kind of knows

00:05:37,509 --> 00:05:42,550
the deal you know he knows what party is

00:05:40,479 --> 00:05:44,680
we are not I mean the point is we are

00:05:42,550 --> 00:05:46,990
not talking about Microsoft corporate

00:05:44,680 --> 00:05:48,550
guys assigned to do something just

00:05:46,990 --> 00:05:51,279
because we need Python in visual studio

00:05:48,550 --> 00:05:53,050
but we have a core developer wanting to

00:05:51,279 --> 00:05:55,569
use Python in visual studio and it

00:05:53,050 --> 00:05:58,919
changed the perspective completely for

00:05:55,569 --> 00:06:02,979
me makes everything more interesting and

00:05:58,919 --> 00:06:04,990
also lately a few years ago visual

00:06:02,979 --> 00:06:07,750
studio was related in a community

00:06:04,990 --> 00:06:11,529
edition which is actually 100% free to

00:06:07,750 --> 00:06:13,659
use there are some career and here they

00:06:11,529 --> 00:06:16,270
are you can use it for education

00:06:13,659 --> 00:06:18,849
purposes you can use it for free for

00:06:16,270 --> 00:06:21,159
open source projects you can use it if

00:06:18,849 --> 00:06:23,409
you are an individual even if you do

00:06:21,159 --> 00:06:25,539
that for business so if you can build

00:06:23,409 --> 00:06:27,699
applications in Visual Studio sell these

00:06:25,539 --> 00:06:30,219
applications commercially no problem you

00:06:27,699 --> 00:06:33,460
can use it for free and the small teams

00:06:30,219 --> 00:06:35,740
have to five people working concurrently

00:06:33,460 --> 00:06:38,050
on Visual Studio and the key here is

00:06:35,740 --> 00:06:40,120
concurrently it means you can even have

00:06:38,050 --> 00:06:41,230
20 people using Visual Studio Community

00:06:40,120 --> 00:06:43,090
Edition not a problem

00:06:41,230 --> 00:06:47,110
as long as they don't work on cura tree

00:06:43,090 --> 00:06:49,600
and so it makes Visual Studio the free

00:06:47,110 --> 00:06:51,700
edition of Visual Studio quite usable

00:06:49,600 --> 00:06:54,070
for a lot of use cases in my opinion for

00:06:51,700 --> 00:06:56,200
example in my company it is just six of

00:06:54,070 --> 00:06:57,700
us we can use Visual Studio Community

00:06:56,200 --> 00:06:59,140
Edition there are no differences between

00:06:57,700 --> 00:07:01,090
the Community Edition and the

00:06:59,140 --> 00:07:03,070
professional editions so you basically

00:07:01,090 --> 00:07:04,330
have all our Visual Studio the only

00:07:03,070 --> 00:07:09,130
exception is the Enterprise Edition

00:07:04,330 --> 00:07:11,380
which is a few advanced options but it's

00:07:09,130 --> 00:07:12,940
quite usable for everything you need to

00:07:11,380 --> 00:07:16,960
do especially if you want to work in a

00:07:12,940 --> 00:07:20,140
Python so let's give a look at the

00:07:16,960 --> 00:07:22,650
Peters I'm going to demo some features I

00:07:20,140 --> 00:07:25,060
hope I will it won't bomb on me so

00:07:22,650 --> 00:07:26,860
follow me along and let's hope

00:07:25,060 --> 00:07:28,870
everything works out so the first thing

00:07:26,860 --> 00:07:31,000
I want to tell you is that Python

00:07:28,870 --> 00:07:33,070
historically if you do Python on Windows

00:07:31,000 --> 00:07:35,650
of and I've been doing that for a while

00:07:33,070 --> 00:07:38,200
you probably know that it wasn't that no

00:07:35,650 --> 00:07:40,080
II didn't it wasn't that easy to do

00:07:38,200 --> 00:07:42,040
Python window so you had to install

00:07:40,080 --> 00:07:44,170
something and then probably if you

00:07:42,040 --> 00:07:46,810
wanted to use a gift you also had to

00:07:44,170 --> 00:07:51,160
install something else and in US and

00:07:46,810 --> 00:07:52,630
that strain things called I mean I don't

00:07:51,160 --> 00:07:54,970
remember their name right now but it is

00:07:52,630 --> 00:07:57,220
basically an emulator of bash for

00:07:54,970 --> 00:07:59,980
Windows so you could use a get on the

00:07:57,220 --> 00:08:02,620
command line and yes there was some work

00:07:59,980 --> 00:08:05,970
to be done especially some years ago now

00:08:02,620 --> 00:08:08,800
we just do the office you an interesting

00:08:05,970 --> 00:08:10,780
experience I'm going back to usual box

00:08:08,800 --> 00:08:14,710
here and show and I wanted to show you

00:08:10,780 --> 00:08:16,630
the Visual Studio installer here you see

00:08:14,710 --> 00:08:18,970
that when unfortunately we have a very

00:08:16,630 --> 00:08:20,680
low resolution here so I hope you can

00:08:18,970 --> 00:08:23,020
buy you probably can read very well I

00:08:20,680 --> 00:08:26,460
have to scroll a lot so you see here

00:08:23,020 --> 00:08:29,680
that when I install with studio I can

00:08:26,460 --> 00:08:33,820
choose to install the Python development

00:08:29,680 --> 00:08:35,260
tools and these will install Python for

00:08:33,820 --> 00:08:36,820
you if you don't have python on the

00:08:35,260 --> 00:08:38,650
machine which is very interesting

00:08:36,820 --> 00:08:40,479
especially for beginners so for people

00:08:38,650 --> 00:08:42,160
coming from Visual Studio and c-sharp

00:08:40,479 --> 00:08:44,400
people who doesn't

00:08:42,160 --> 00:08:46,690
don't know much about Python and

00:08:44,400 --> 00:08:48,490
paralyze that and as you can see there

00:08:46,690 --> 00:08:50,680
are interesting templates here you can

00:08:48,490 --> 00:08:53,670
install it several Python distribution

00:08:50,680 --> 00:08:56,220
for example anaconda or cookie cutter

00:08:53,670 --> 00:08:58,560
and we are different versions of Python

00:08:56,220 --> 00:09:00,750
and everything is installed seamlessly

00:08:58,560 --> 00:09:02,100
together with business to do or if you

00:09:00,750 --> 00:09:04,710
have Visual Studio already installed you

00:09:02,100 --> 00:09:06,870
can just go in the Stoller and I did a

00:09:04,710 --> 00:09:08,670
Python the workload and it will stall

00:09:06,870 --> 00:09:11,220
everything for you so you don't have to

00:09:08,670 --> 00:09:13,530
do any kind of strange things that go to

00:09:11,220 --> 00:09:17,120
the command line or download the

00:09:13,530 --> 00:09:19,200
executable or Python I launch it now

00:09:17,120 --> 00:09:22,380
probably for the most of you this is not

00:09:19,200 --> 00:09:24,030
an issue but for people new to the

00:09:22,380 --> 00:09:30,210
language this is very interesting I

00:09:24,030 --> 00:09:32,370
believe and then we have a lot of all

00:09:30,210 --> 00:09:34,940
templates readily available we will see

00:09:32,370 --> 00:09:38,520
them in the demo in a few minutes and

00:09:34,940 --> 00:09:41,190
then we have package management support

00:09:38,520 --> 00:09:42,990
directly into Visual Studio so here we

00:09:41,190 --> 00:09:48,960
are seeing somebody trying to install

00:09:42,990 --> 00:09:50,880
Django within a its own project I wanted

00:09:48,960 --> 00:09:52,760
is support for visual environment so

00:09:50,880 --> 00:09:56,370
even creating a visual environment

00:09:52,760 --> 00:09:57,960
installing packages we via via people

00:09:56,370 --> 00:10:01,350
you can do that from within visual

00:09:57,960 --> 00:10:03,780
studio as well and let's try and build a

00:10:01,350 --> 00:10:07,650
website with Python we will since we had

00:10:03,780 --> 00:10:10,590
arm in here less here the conference not

00:10:07,650 --> 00:10:12,600
in the room probably less did build a

00:10:10,590 --> 00:10:16,350
class website for example by using

00:10:12,600 --> 00:10:19,770
visual studio so let me switch back to

00:10:16,350 --> 00:10:22,710
visual box let's go to a clean visual

00:10:19,770 --> 00:10:24,990
studio installation here if I go to the

00:10:22,710 --> 00:10:27,270
file menu oh by the way there are other

00:10:24,990 --> 00:10:30,000
options if you want to do Python in

00:10:27,270 --> 00:10:31,530
Windows for example menu since most of

00:10:30,000 --> 00:10:34,080
you are Python guys probably you know

00:10:31,530 --> 00:10:37,200
Python for example which is a super cool

00:10:34,080 --> 00:10:39,660
very nice big shut out for a Python is a

00:10:37,200 --> 00:10:41,610
very nice project but in my case I

00:10:39,660 --> 00:10:43,650
wanted to add what I do every day as I

00:10:41,610 --> 00:10:44,670
told you is a c-sharp so I wanted to use

00:10:43,650 --> 00:10:47,970
my own

00:10:44,670 --> 00:10:49,770
IDE for Python as well but if you don't

00:10:47,970 --> 00:10:51,750
find C Visual Studio you can look at

00:10:49,770 --> 00:10:53,370
alternatives like Python which is very

00:10:51,750 --> 00:10:56,670
nice or Visual Studio code for example

00:10:53,370 --> 00:10:58,950
is a super nice product if not really an

00:10:56,670 --> 00:11:00,870
ID more effects editor but very powerful

00:10:58,950 --> 00:11:03,900
and is attaining a lot of traction

00:11:00,870 --> 00:11:05,880
lately also in the Linux community so

00:11:03,900 --> 00:11:06,950
they're interesting so if I start a new

00:11:05,880 --> 00:11:10,370
project

00:11:06,950 --> 00:11:13,190
I get and you and I installed the Python

00:11:10,370 --> 00:11:15,860
the workload for Visual Studio when I go

00:11:13,190 --> 00:11:17,270
to other languages I can pick Python and

00:11:15,860 --> 00:11:19,040
as you can see there are a number of

00:11:17,270 --> 00:11:21,620
templates you see that there are

00:11:19,040 --> 00:11:24,470
templates for bottle for Django for

00:11:21,620 --> 00:11:27,680
flask and also of course console

00:11:24,470 --> 00:11:29,990
applications stuff like that there are a

00:11:27,680 --> 00:11:33,230
lot of them I don't Python if you fancy

00:11:29,990 --> 00:11:35,570
that PI game etc now we're going to

00:11:33,230 --> 00:11:39,350
build up trust word project as you can

00:11:35,570 --> 00:11:42,950
see there is a preview here I just hit

00:11:39,350 --> 00:11:45,050
OK and this is very nice in my opinion

00:11:42,950 --> 00:11:46,700
as you can see if I go here to the

00:11:45,050 --> 00:11:49,090
solution Explorer I can't because the

00:11:46,700 --> 00:11:52,760
windows it is a model of course but

00:11:49,090 --> 00:11:55,160
Visual Studio knows that I need to

00:11:52,760 --> 00:11:56,690
install some stuff from people and it

00:11:55,160 --> 00:11:59,540
offers to create a virtual environment

00:11:56,690 --> 00:12:01,250
for me within my for my own project so

00:11:59,540 --> 00:12:04,180
as you can see the support for a

00:12:01,250 --> 00:12:08,060
different environment is a built in and

00:12:04,180 --> 00:12:10,820
I'm I could click here and it will ask

00:12:08,060 --> 00:12:13,340
me what do you want to call this video

00:12:10,820 --> 00:12:15,440
environment I am in this crap and in

00:12:13,340 --> 00:12:18,200
this case and they pick the interpreter

00:12:15,440 --> 00:12:21,380
version it picks up the different Python

00:12:18,200 --> 00:12:25,490
version installed on my system in this

00:12:21,380 --> 00:12:26,870
case they should pick up 3.5 32-bit

00:12:25,490 --> 00:12:30,620
because the visual studio here is a

00:12:26,870 --> 00:12:32,450
32-bit and as you can see here it offers

00:12:30,620 --> 00:12:34,610
to download and install the packages for

00:12:32,450 --> 00:12:36,860
me it can do that because the templates

00:12:34,610 --> 00:12:38,810
includes a requirements file

00:12:36,860 --> 00:12:41,750
requirements dot txt as you probably

00:12:38,810 --> 00:12:43,550
know everything about it so it will go

00:12:41,750 --> 00:12:45,260
and download the requirements for this

00:12:43,550 --> 00:12:47,000
project now I'm not going to do this

00:12:45,260 --> 00:12:49,730
right now here because I don't want to

00:12:47,000 --> 00:12:53,750
risk the Wi-Fi to crash on me I have

00:12:49,730 --> 00:12:56,180
here and you can see that here even if I

00:12:53,750 --> 00:13:03,080
abort the installation I have my code

00:12:56,180 --> 00:13:05,360
already but let's go back to to this one

00:13:03,080 --> 00:13:09,170
you apply some demo basically the same

00:13:05,360 --> 00:13:11,450
exact project but as you can see if I go

00:13:09,170 --> 00:13:15,080
in Python environment I have an

00:13:11,450 --> 00:13:17,780
environment based on Python 3.5 and if I

00:13:15,080 --> 00:13:19,710
open this branch here I see that all

00:13:17,780 --> 00:13:21,690
flash dependencies are already stole

00:13:19,710 --> 00:13:23,730
for me and this is of course a local

00:13:21,690 --> 00:13:27,980
environment adjust for this project I

00:13:23,730 --> 00:13:31,320
could go here let me see if it works and

00:13:27,980 --> 00:13:34,800
this would be an open folder in file

00:13:31,320 --> 00:13:38,070
explorer as you can see we are in the

00:13:34,800 --> 00:13:41,300
European euro Python demo folder and we

00:13:38,070 --> 00:13:45,270
have a named folder and here are all the

00:13:41,300 --> 00:13:47,400
packages for my app so just look at - my

00:13:45,270 --> 00:13:50,340
own project like you would do on the

00:13:47,400 --> 00:13:56,340
command line on Linux order on now

00:13:50,340 --> 00:13:58,470
Oreste and etc and yeah so you see full

00:13:56,340 --> 00:14:00,890
support if I go back to Python

00:13:58,470 --> 00:14:03,900
environment I could switch to another

00:14:00,890 --> 00:14:06,840
Python version for this project I could

00:14:03,900 --> 00:14:08,550
go and look at the packages installed

00:14:06,840 --> 00:14:12,120
now let me go back to my environment

00:14:08,550 --> 00:14:13,980
actually and if there were some updates

00:14:12,120 --> 00:14:16,860
for these packages it will show up here

00:14:13,980 --> 00:14:18,870
and I can just click on the packages and

00:14:16,860 --> 00:14:19,260
update the dependencies so I don't have

00:14:18,870 --> 00:14:20,970
to

00:14:19,260 --> 00:14:23,190
yes I could of course go to on the

00:14:20,970 --> 00:14:27,080
command line do the same thing but it is

00:14:23,190 --> 00:14:29,700
all supported by the your IDE and

00:14:27,080 --> 00:14:31,230
intelligence we will see what it is

00:14:29,700 --> 00:14:32,460
about if you know Visual Studio already

00:14:31,230 --> 00:14:34,860
you know everything about the

00:14:32,460 --> 00:14:37,970
intelligence let me switch back to the

00:14:34,860 --> 00:14:42,090
slides so I don't forget anything

00:14:37,970 --> 00:14:44,670
probably no ok we can just go and look

00:14:42,090 --> 00:14:48,330
at this template if I go back to my

00:14:44,670 --> 00:14:50,160
solution and click on requirements you

00:14:48,330 --> 00:14:51,570
see that the only requirement was flasks

00:14:50,160 --> 00:14:53,850
of course class has a number of

00:14:51,570 --> 00:15:02,840
dependencies inside and this is what got

00:14:53,850 --> 00:15:06,330
started for me ok let's go and look at

00:15:02,840 --> 00:15:09,090
packages again I want to show you that

00:15:06,330 --> 00:15:11,340
you can also search by PI directory into

00:15:09,090 --> 00:15:16,610
the ID for example let's look let's look

00:15:11,340 --> 00:15:16,610
for Jango sorry

00:15:17,150 --> 00:15:23,130
no no way ok so I can PP start for pi pi

00:15:21,180 --> 00:15:25,710
if I click here it will just install

00:15:23,130 --> 00:15:27,960
Jango for me into my vector environment

00:15:25,710 --> 00:15:29,910
so even for looking up into pi PI I

00:15:27,960 --> 00:15:34,130
don't have to leave a visual studio can

00:15:29,910 --> 00:15:34,130
do that directory in within the ID

00:15:34,439 --> 00:15:40,420
okay let's look at the code now which is

00:15:38,199 --> 00:15:45,459
probably more interesting run several

00:15:40,420 --> 00:15:48,759
PPI is a default launch script created

00:15:45,459 --> 00:15:51,100
by the template and as you can see if

00:15:48,759 --> 00:15:54,790
you know flask is very pretty standard

00:15:51,100 --> 00:15:56,769
code here and what I want to show you is

00:15:54,790 --> 00:15:59,110
that in Visual Studio you are used to

00:15:56,769 --> 00:16:02,230
intelligence which is basically code

00:15:59,110 --> 00:16:03,939
complete completion and you have that in

00:16:02,230 --> 00:16:09,850
you get that in Visual Studio as well

00:16:03,939 --> 00:16:15,069
for example if I go here and import I

00:16:09,850 --> 00:16:17,350
don't know why I can't switch but I

00:16:15,069 --> 00:16:21,189
don't know anyway you see that I get a

00:16:17,350 --> 00:16:23,850
menu with the option I don't know let's

00:16:21,189 --> 00:16:29,379
import random for example and then a

00:16:23,850 --> 00:16:30,850
equal oh this is horrible sorry about

00:16:29,379 --> 00:16:37,410
that I don't know what's happening I can

00:16:30,850 --> 00:16:37,410
switch it off yes

00:16:43,650 --> 00:16:49,590
oh it's going to be to take too long

00:16:45,330 --> 00:16:50,610
here and let's just Thank You Randy as

00:16:49,590 --> 00:16:52,770
you can see I have intelligence

00:16:50,610 --> 00:16:54,870
basically auto-completion how does it

00:16:52,770 --> 00:16:56,640
work since python is like a dynamic

00:16:54,870 --> 00:16:59,310
language and visual studio usually works

00:16:56,640 --> 00:17:01,560
on compiled languages well basically and

00:16:59,310 --> 00:17:04,140
this is why I didn't install the project

00:17:01,560 --> 00:17:06,630
myself I switch it today already install

00:17:04,140 --> 00:17:10,710
it one because when it downloads the big

00:17:06,630 --> 00:17:14,670
packages it goes and scans them build a

00:17:10,710 --> 00:17:16,470
cache of the system and then it can at

00:17:14,670 --> 00:17:18,630
point it knows everything about the

00:17:16,470 --> 00:17:20,610
packages and you can offer intelligence

00:17:18,630 --> 00:17:22,620
for you so when you install the first

00:17:20,610 --> 00:17:25,620
time it will probably take a while

00:17:22,620 --> 00:17:28,290
before intelligence picks up because it

00:17:25,620 --> 00:17:31,590
has to actually build a cache about your

00:17:28,290 --> 00:17:35,340
system and every cache is specific for

00:17:31,590 --> 00:17:37,530
the environment and so of course when

00:17:35,340 --> 00:17:40,380
you create a new project you can use an

00:17:37,530 --> 00:17:43,080
old environment and in that case it will

00:17:40,380 --> 00:17:48,260
it want to risk an or the environment

00:17:43,080 --> 00:17:50,880
but this is a very nice method to to get

00:17:48,260 --> 00:17:54,630
full code completion within a visual

00:17:50,880 --> 00:17:59,970
studio for Python so this is a random so

00:17:54,630 --> 00:18:06,090
like this or maybe no now with this caps

00:17:59,970 --> 00:18:14,240
lock on is going to be a huge problem

00:18:06,090 --> 00:18:14,240
sorry about that oh my god

00:18:15,650 --> 00:18:28,310
okay this is a nice not really mmm okay

00:18:22,590 --> 00:18:28,310
oh if I manage to get out of this trap

00:18:32,190 --> 00:18:38,370
okay maybe start it is starting to work

00:18:35,559 --> 00:18:38,370
again No

00:18:52,600 --> 00:19:04,029
or Stein fixing the see is no oh my god

00:19:00,779 --> 00:19:05,950
okay we're in trouble guys sorry I don't

00:19:04,029 --> 00:19:13,779
know how to fix these if anybody can

00:19:05,950 --> 00:19:17,380
help me it will be appreciated oh my god

00:19:13,779 --> 00:19:19,240
really I should turn it off it usually

00:19:17,380 --> 00:19:21,700
works that rule with litter box that's a

00:19:19,240 --> 00:19:25,740
good fix but it it is going to take a

00:19:21,700 --> 00:19:25,740
while let's try that

00:19:26,820 --> 00:19:37,539
that's litter box for you guys maybe

00:19:35,259 --> 00:19:39,639
just logging out might do the trick but

00:19:37,539 --> 00:19:47,889
I will just restart it and we are going

00:19:39,639 --> 00:19:49,629
to waste a lot of time restart luckily

00:19:47,889 --> 00:19:55,299
we have the slides let's go back to the

00:19:49,629 --> 00:19:56,710
slides because they are on Mac so let's

00:19:55,299 --> 00:19:59,139
go back here we will get back to the

00:19:56,710 --> 00:20:01,750
demo once it has restarted we talked

00:19:59,139 --> 00:20:04,389
about the intelligence already and also

00:20:01,750 --> 00:20:06,309
and hopefully I can show you there is

00:20:04,389 --> 00:20:07,840
support for unit testing within Visual

00:20:06,309 --> 00:20:10,690
Studio which is super nice if you

00:20:07,840 --> 00:20:12,429
already use a unit testing with C sharp

00:20:10,690 --> 00:20:16,139
you can use this except the same

00:20:12,429 --> 00:20:18,909
interface and the UI for testing in

00:20:16,139 --> 00:20:20,830
Python so you have unit that support the

00:20:18,909 --> 00:20:22,389
PI test support whatever you want to do

00:20:20,830 --> 00:20:25,539
with the unit testing you can do that

00:20:22,389 --> 00:20:27,610
with back with Python and there is also

00:20:25,539 --> 00:20:29,110
and this is super powerful because one

00:20:27,610 --> 00:20:30,759
reason why Visual Studio is really

00:20:29,110 --> 00:20:32,740
appreciated around the world is because

00:20:30,759 --> 00:20:36,220
it's very powerful debugging tools and

00:20:32,740 --> 00:20:38,710
the good news is that the bugging in

00:20:36,220 --> 00:20:40,750
Python in Visual Studio is exactly the

00:20:38,710 --> 00:20:43,659
same experience you get with C sharp and

00:20:40,750 --> 00:20:45,309
F sharp and whatever eyes by a vicious

00:20:43,659 --> 00:20:47,379
to the support which means you can set

00:20:45,309 --> 00:20:51,009
breakpoints you can inspect the local

00:20:47,379 --> 00:20:53,110
variables you can change the code as you

00:20:51,009 --> 00:20:56,019
write and see what happens and stuff

00:20:53,110 --> 00:20:58,929
like that and also it supports remote

00:20:56,019 --> 00:21:02,559
debugging before you ask there is a nice

00:20:58,929 --> 00:21:05,919
article I have available here if you

00:21:02,559 --> 00:21:06,500
google it up this isn't the bug in

00:21:05,919 --> 00:21:09,680
Python

00:21:06,500 --> 00:21:11,300
on Linux you just Google for Python

00:21:09,680 --> 00:21:13,910
tools for users to the remote debugging

00:21:11,300 --> 00:21:16,850
and here there is a very nice YouTube

00:21:13,910 --> 00:21:19,790
video on how to debug a Linux server

00:21:16,850 --> 00:21:22,820
attaching the from a visual studio of

00:21:19,790 --> 00:21:25,730
course a Python apana vyana on a remote

00:21:22,820 --> 00:21:31,970
server on linux so you get really cool

00:21:25,730 --> 00:21:38,900
options here oh dude like we might try

00:21:31,970 --> 00:21:40,910
again and there is a port for source

00:21:38,900 --> 00:21:43,820
control this is not an option I tree of

00:21:40,910 --> 00:21:45,680
a Python source but these are studious

00:21:43,820 --> 00:21:49,070
self support source control so you can

00:21:45,680 --> 00:21:51,920
use git and suspend all the fetus from

00:21:49,070 --> 00:21:55,040
get within the IDE as well hopefully I

00:21:51,920 --> 00:21:59,870
can show you in a few minutes and in

00:21:55,040 --> 00:22:01,880
that half demo that we saw before we

00:21:59,870 --> 00:22:04,760
created a new project starting from a

00:22:01,880 --> 00:22:06,410
template but what if I want to import to

00:22:04,760 --> 00:22:09,050
use code which is already existing

00:22:06,410 --> 00:22:11,240
somewhere for example on github or in

00:22:09,050 --> 00:22:13,250
some remote repository on our local

00:22:11,240 --> 00:22:15,770
folder you can do that there is an

00:22:13,250 --> 00:22:17,690
import wizard the reason you need an

00:22:15,770 --> 00:22:20,150
import with that is because Visual

00:22:17,690 --> 00:22:22,370
Studio needs to build his own let's call

00:22:20,150 --> 00:22:24,740
it solution file for people coming from

00:22:22,370 --> 00:22:26,810
c-sharp they know exactly what I mean so

00:22:24,740 --> 00:22:29,840
it will create an additional file in

00:22:26,810 --> 00:22:31,940
your in your folder which is a P I PR j

00:22:29,840 --> 00:22:34,160
I believe file which is basically

00:22:31,940 --> 00:22:36,770
solution file for Python you can add it

00:22:34,160 --> 00:22:39,680
to your version control and check it out

00:22:36,770 --> 00:22:41,870
to a committed so people sharing your

00:22:39,680 --> 00:22:43,700
code don't have to reinforce the code

00:22:41,870 --> 00:22:47,000
that the next time I will show you if we

00:22:43,700 --> 00:22:50,360
have time and yes I also wanted to show

00:22:47,000 --> 00:22:52,540
want to show you an important see if at

00:22:50,360 --> 00:22:56,750
which point we are here

00:22:52,540 --> 00:22:59,080
how many minutes we have the fun we have

00:22:56,750 --> 00:22:59,080
how many

00:23:04,870 --> 00:23:16,010
okay I can even drink some water okay

00:23:12,800 --> 00:23:19,220
let's give it another shot now wishes to

00:23:16,010 --> 00:23:34,340
do is slow I starting up so it doesn't

00:23:19,220 --> 00:23:35,900
help eeeh your Python also I am within a

00:23:34,340 --> 00:23:38,450
virtual box machine of course if you use

00:23:35,900 --> 00:23:41,330
if you do this on a native Windows

00:23:38,450 --> 00:23:45,770
machine it's going to be ways faster so

00:23:41,330 --> 00:23:49,310
don't get sad because it I'm slow here

00:23:45,770 --> 00:23:52,000
it's kind of wanted so what I wanted to

00:23:49,310 --> 00:23:55,400
do is show you some features for example

00:23:52,000 --> 00:23:57,800
what what can we start with let's say

00:23:55,400 --> 00:23:59,480
that we launched this application so

00:23:57,800 --> 00:24:01,400
this is a typical flask application I am

00:23:59,480 --> 00:24:05,360
NOT going to show you how fast works of

00:24:01,400 --> 00:24:08,690
course and I just want to show you that

00:24:05,360 --> 00:24:13,010
we have a folder here we have some HTML

00:24:08,690 --> 00:24:15,740
templates we have a view dot P I file

00:24:13,010 --> 00:24:19,280
here as you can see you familiar with

00:24:15,740 --> 00:24:21,170
the flask you have some routes and here

00:24:19,280 --> 00:24:24,610
you see something a function called when

00:24:21,170 --> 00:24:28,010
the home page is a hit by the browser

00:24:24,610 --> 00:24:31,220
etc now let's try and launch this app as

00:24:28,010 --> 00:24:33,130
you can see I just use the usual visual

00:24:31,220 --> 00:24:38,000
studio stuff here it will not launch

00:24:33,130 --> 00:24:43,940
command line and then it should probably

00:24:38,000 --> 00:24:47,080
open the browser yes it takes a while at

00:24:43,940 --> 00:24:49,580
the first time then it becomes faster

00:24:47,080 --> 00:24:52,040
okay as you can see the localhost as

00:24:49,580 --> 00:24:54,620
been running in this case Max of Edge

00:24:52,040 --> 00:24:57,560
has been launched on the right on the

00:24:54,620 --> 00:24:59,960
port and here we it is our website which

00:24:57,560 --> 00:25:02,570
is running of course on Python from

00:24:59,960 --> 00:25:06,170
within visual studio now if you go back

00:25:02,570 --> 00:25:08,870
through them to the source code we can

00:25:06,170 --> 00:25:13,990
go to the runs our API for example let's

00:25:08,870 --> 00:25:13,990
unsatisfied maybe

00:25:14,059 --> 00:25:26,239
what is this okay let's stop the program

00:25:21,669 --> 00:25:30,080
go back to the layout HTM file which is

00:25:26,239 --> 00:25:34,969
basically the master page for HTML page

00:25:30,080 --> 00:25:37,599
and less for example change again

00:25:34,969 --> 00:25:40,399
because you get intelligent support oh

00:25:37,599 --> 00:25:40,999
by the way I'm trying let's see if it

00:25:40,399 --> 00:25:44,090
works

00:25:40,999 --> 00:25:49,039
yeah to use I'm using them here as you

00:25:44,090 --> 00:25:53,389
can see I typed the city and the space

00:25:49,039 --> 00:25:55,570
and I can this is very interesting if

00:25:53,389 --> 00:25:58,460
you come from bash Orleans and I used to

00:25:55,570 --> 00:25:59,179
to be me you don't have to change your

00:25:58,460 --> 00:26:02,269
habit

00:25:59,179 --> 00:26:04,070
I mean once you get into Bhima you can't

00:26:02,269 --> 00:26:05,779
get away from it I mean I don't know if

00:26:04,070 --> 00:26:07,940
you share my experience but when you

00:26:05,779 --> 00:26:10,099
have that muscle memory you are doomed

00:26:07,940 --> 00:26:12,019
basically you can't do without win so

00:26:10,099 --> 00:26:14,389
basically I pick my editor so based on

00:26:12,019 --> 00:26:16,519
the emulation on whim and it is it is

00:26:14,389 --> 00:26:19,429
good enough I can use it it is not good

00:26:16,519 --> 00:26:20,719
enough I can't use it very simple

00:26:19,429 --> 00:26:23,419
probably you you have the same

00:26:20,719 --> 00:26:24,710
experience so we mean super cool but do

00:26:23,419 --> 00:26:29,929
know that you are going to get addicted

00:26:24,710 --> 00:26:35,419
to it you can't get away from it it's

00:26:29,929 --> 00:26:44,779
just too powerful to be true this one no

00:26:35,419 --> 00:26:46,789
oh let's just move this relaunch

00:26:44,779 --> 00:26:48,859
oh let's also do something else let's go

00:26:46,789 --> 00:26:52,159
back to the views page we saw we have an

00:26:48,859 --> 00:26:55,339
about page just to speed up here we have

00:26:52,159 --> 00:26:57,080
the the route for the about page let's

00:26:55,339 --> 00:26:59,599
see that let's say that we want to

00:26:57,080 --> 00:27:01,669
change the a new value in this page this

00:26:59,599 --> 00:27:04,599
is the ginger the play the HTML as you

00:27:01,669 --> 00:27:07,070
can see with ginger support here and

00:27:04,599 --> 00:27:08,749
again it's not really really one to what

00:27:07,070 --> 00:27:11,299
we are doing here what I want to do is

00:27:08,749 --> 00:27:16,009
that is show you that we have support

00:27:11,299 --> 00:27:20,900
for something like these let's call this

00:27:16,009 --> 00:27:23,990
variable I don't know arrow Python

00:27:20,900 --> 00:27:28,640
and then let's go back to the controller

00:27:23,990 --> 00:27:35,930
and add a new value to the top hole here

00:27:28,640 --> 00:27:40,420
and say that arrow python equals I'm

00:27:35,930 --> 00:27:40,420
sorry I'm using oh nice

00:27:41,590 --> 00:28:04,030
hello so basically I'm adding a new

00:27:46,790 --> 00:28:04,030
value to the page yes really here

00:28:07,710 --> 00:28:19,070
let me go back to the title tag all

00:28:11,220 --> 00:28:25,050
right let me go back just do this okay

00:28:19,070 --> 00:28:33,890
let's see what we managed to crash to

00:28:25,050 --> 00:28:37,170
break you should never do the most white

00:28:33,890 --> 00:28:39,600
speaking but I can't resist the urge to

00:28:37,170 --> 00:28:43,320
do that I mean is boring if it onto the

00:28:39,600 --> 00:28:47,670
demonstrate as a program and I want to

00:28:43,320 --> 00:28:51,500
shoot it to see code like coding so here

00:28:47,670 --> 00:28:55,380
it is too bad yes the title changed it

00:28:51,500 --> 00:28:58,800
did it didn't change because I undid the

00:28:55,380 --> 00:29:00,750
feature let's see the about page as you

00:28:58,800 --> 00:29:02,310
can see here we have a dis hello master

00:29:00,750 --> 00:29:04,440
that we just and just to show you that

00:29:02,310 --> 00:29:06,060
this is just regular Python but then I

00:29:04,440 --> 00:29:09,060
think is that we are in Windows within

00:29:06,060 --> 00:29:13,650
Visual Studio as we were doing C sharp

00:29:09,060 --> 00:29:17,610
or or whatever okay let's go and and

00:29:13,650 --> 00:29:20,130
look at this I have this game we I

00:29:17,610 --> 00:29:23,280
brought with my I would like to say that

00:29:20,130 --> 00:29:24,840
my my daughter brought but actually we

00:29:23,280 --> 00:29:27,390
wrote it together is a very simple

00:29:24,840 --> 00:29:31,080
Python game guess the number so it is on

00:29:27,390 --> 00:29:34,880
github I want it to be to use it in

00:29:31,080 --> 00:29:36,800
Visual Studio clone it and work on it so

00:29:34,880 --> 00:29:41,280
let's go

00:29:36,800 --> 00:29:43,440
copy the link back into windows by the

00:29:41,280 --> 00:29:44,160
way another very nice feature of Windows

00:29:43,440 --> 00:29:48,150
lately

00:29:44,160 --> 00:29:53,460
if bash support for Windows so basically

00:29:48,150 --> 00:29:56,130
you can go and use your your badge

00:29:53,460 --> 00:29:58,500
within windows and these install Xubuntu

00:29:56,130 --> 00:30:03,300
within windows as you can see now I'm

00:29:58,500 --> 00:30:06,870
going and to the m2 the windows file

00:30:03,300 --> 00:30:09,780
system but I could use the Linux file

00:30:06,870 --> 00:30:14,030
system here I have a number of folders

00:30:09,780 --> 00:30:14,030
let's just get clone our

00:30:14,520 --> 00:30:21,560
let's see No

00:30:27,160 --> 00:30:50,710
no way no luck today there is a marking

00:30:35,260 --> 00:30:52,840
going is yes thank you now hopefully we

00:30:50,710 --> 00:30:56,429
can download this stuff very simple

00:30:52,840 --> 00:30:56,429
script should be fast

00:31:03,800 --> 00:31:12,290
hmm while it closed let's go back and

00:31:06,770 --> 00:31:17,360
look at for example adding some tests to

00:31:12,290 --> 00:31:27,950
our application here so I go to my

00:31:17,360 --> 00:31:33,710
project add let me stop it add a new

00:31:27,950 --> 00:31:37,820
item and I should also have a Python

00:31:33,710 --> 00:31:39,980
unit test as you can see here what it

00:31:37,820 --> 00:31:43,190
does is it add again a template file

00:31:39,980 --> 00:31:48,770
which has a basic test now if I open the

00:31:43,190 --> 00:31:50,750
test Explorer within Visual Studio okay

00:31:48,770 --> 00:31:52,460
as you can see it is working that here

00:31:50,750 --> 00:31:54,830
is trying to understand what's going on

00:31:52,460 --> 00:31:59,810
it should show our test in a few minutes

00:31:54,830 --> 00:32:03,530
maybe in a few seconds and of course

00:31:59,810 --> 00:32:07,580
this is a failing test okay here it is

00:32:03,530 --> 00:32:12,530
if I run all my tests it should probably

00:32:07,580 --> 00:32:17,900
fail okay as you can see if I go here

00:32:12,530 --> 00:32:20,750
and look at this low resolution is

00:32:17,900 --> 00:32:22,790
killing me okay that's faded not

00:32:20,750 --> 00:32:24,260
implemented but we can go and do

00:32:22,790 --> 00:32:24,860
something about that let's try to fix

00:32:24,260 --> 00:32:31,460
this test

00:32:24,860 --> 00:32:37,240
let's move this code up here or as you

00:32:31,460 --> 00:32:37,240
know it won't be seen not really

00:32:37,930 --> 00:32:49,090
okay something like this and then let's

00:32:42,320 --> 00:32:52,700
assume that okay thank you

00:32:49,090 --> 00:32:55,850
let's say from run server as you see

00:32:52,700 --> 00:33:01,450
telling us again going on import host

00:32:55,850 --> 00:33:08,910
and port for example let's let self

00:33:01,450 --> 00:33:16,070
assert through the

00:33:08,910 --> 00:33:21,750
host equals local host maybe and that

00:33:16,070 --> 00:33:30,300
fourth equals five five five should be

00:33:21,750 --> 00:33:33,990
five five five not sure let's try test

00:33:30,300 --> 00:33:36,480
pass as you can see oh really

00:33:33,990 --> 00:33:38,970
okay so as you can see testing is

00:33:36,480 --> 00:33:41,310
exactly as you would do testing on an on

00:33:38,970 --> 00:33:45,300
Linux machine but within the again the

00:33:41,310 --> 00:33:47,340
idea of a visual studio and if I go back

00:33:45,300 --> 00:33:57,410
to my launch script and I put a

00:33:47,340 --> 00:34:01,730
breakpoint here and launch my app issue

00:33:57,410 --> 00:34:15,919
stop when it hits my point let me open

00:34:01,730 --> 00:34:19,649
the locals and fix it to big maybe

00:34:15,919 --> 00:34:22,349
okay as you can see we hit the up dot

00:34:19,649 --> 00:34:24,629
run instruction here on this line I can

00:34:22,349 --> 00:34:26,429
go and despite the values directly by

00:34:24,629 --> 00:34:29,190
hovering the mouse over the the

00:34:26,429 --> 00:34:31,799
application inspect these values and if

00:34:29,190 --> 00:34:33,960
I go here I can look at all the locus

00:34:31,799 --> 00:34:36,599
value I can expect every single value

00:34:33,960 --> 00:34:39,000
here go deep into the tree and do all

00:34:36,599 --> 00:34:41,909
the user stuff I do within a Python for

00:34:39,000 --> 00:34:44,039
example or other powerful ideas this is

00:34:41,909 --> 00:34:48,359
super nice if you do the bugging you can

00:34:44,039 --> 00:34:54,990
even set conditions here like for

00:34:48,359 --> 00:35:01,410
example then I have to this it is one

00:34:54,990 --> 00:35:05,220
like for example host equals I don't

00:35:01,410 --> 00:35:06,869
know the local host and so it will only

00:35:05,220 --> 00:35:10,170
break if this condition is true

00:35:06,869 --> 00:35:12,780
etc so as you can see full support for

00:35:10,170 --> 00:35:15,869
the bugging and for a unit testing

00:35:12,780 --> 00:35:19,079
within Visual Studio let's go back and

00:35:15,869 --> 00:35:21,420
see what happened to our clone okay it's

00:35:19,079 --> 00:35:28,890
done so let's go back to visual studio

00:35:21,420 --> 00:35:35,549
game file maybe new project let's first

00:35:28,890 --> 00:35:40,170
stop this one new project this time we

00:35:35,549 --> 00:35:41,940
want to import from existing code as you

00:35:40,170 --> 00:35:46,400
can see you have the option here don't

00:35:41,940 --> 00:35:48,720
do this because it won't work yet add

00:35:46,400 --> 00:35:54,500
social control it won't work that way

00:35:48,720 --> 00:35:57,500
but if you go here you just do new and

00:35:54,500 --> 00:35:57,500
important

00:36:00,910 --> 00:36:11,960
wizard opens you pick your project

00:36:05,089 --> 00:36:19,130
should be somewhere code for the gas you

00:36:11,960 --> 00:36:21,170
just pick the folder and again since it

00:36:19,130 --> 00:36:23,420
is a Python project it wants to know

00:36:21,170 --> 00:36:25,070
which kind of interpreter do you want to

00:36:23,420 --> 00:36:28,760
use do you want to use the global one

00:36:25,070 --> 00:36:32,930
what do you want to create a virtual

00:36:28,760 --> 00:36:38,060
environment in and which is one is the

00:36:32,930 --> 00:36:39,339
launch script for this project as you

00:36:38,060 --> 00:36:41,930
can see the tech to visual environment

00:36:39,339 --> 00:36:43,760
here and this is the file I mentioned

00:36:41,930 --> 00:36:45,380
before basically what what name do you

00:36:43,760 --> 00:36:49,270
want to give to the solution file for

00:36:45,380 --> 00:36:49,270
this project and then you hit finish and

00:36:52,060 --> 00:36:57,950
so probably come up in a few seconds

00:36:56,089 --> 00:37:02,690
here we here it is as you can see we

00:36:57,950 --> 00:37:05,869
have our gas GI file here let me close

00:37:02,690 --> 00:37:17,990
the test file is a very simple game

00:37:05,869 --> 00:37:21,589
let's launch it so what is your name is

00:37:17,990 --> 00:37:23,329
Nicola so we had to pick a number

00:37:21,589 --> 00:37:26,210
between 1 and 20 now since we are

00:37:23,329 --> 00:37:36,650
programmer which number should we pick

00:37:26,210 --> 00:37:39,280
here 11 anybody else 11 is good maybe 10

00:37:36,650 --> 00:37:44,630
might be better

00:37:39,280 --> 00:37:50,540
your guess is too low so now 11 was very

00:37:44,630 --> 00:37:54,800
high okay let's do a 15 - hi so let's do

00:37:50,540 --> 00:37:57,890
maybe what hello ha ha now I don't want

00:37:54,800 --> 00:38:04,420
to do 11 because it maybe it wins ok

00:37:57,890 --> 00:38:06,950
let's write 2 low todya so let's do 13

00:38:04,420 --> 00:38:10,010
 it was 14 ok

00:38:06,950 --> 00:38:12,039
I just had 5 gases so we want just by

00:38:10,010 --> 00:38:14,450
spirit

00:38:12,039 --> 00:38:16,400
okay the whole point of this was to show

00:38:14,450 --> 00:38:18,470
you that you can use of course the user

00:38:16,400 --> 00:38:22,339
code now if you go back to the to the

00:38:18,470 --> 00:38:25,609
folder here there are some files like

00:38:22,339 --> 00:38:27,829
the sorry let me go within the directory

00:38:25,609 --> 00:38:30,109
and by the way using batch as you can

00:38:27,829 --> 00:38:32,720
see okay the colors are horrible but the

00:38:30,109 --> 00:38:35,000
mind that and as you can see that there

00:38:32,720 --> 00:38:37,339
is a license file a readme file that it

00:38:35,000 --> 00:38:40,309
was cloned by deed by you from github

00:38:37,339 --> 00:38:44,390
and they don't show up into Visual

00:38:40,309 --> 00:38:52,510
Studio but we just we can simply go here

00:38:44,390 --> 00:38:55,670
add existing item pick the map or files

00:38:52,510 --> 00:38:58,880
license this is because they need to go

00:38:55,670 --> 00:39:01,700
into the Python project file for visual

00:38:58,880 --> 00:39:04,940
studio so as you can see they are here

00:39:01,700 --> 00:39:07,730
now we probably don't have time to to

00:39:04,940 --> 00:39:10,039
give a look at the source control but I

00:39:07,730 --> 00:39:11,990
could go now I commit to this change so

00:39:10,039 --> 00:39:15,319
the Python project for visual studio

00:39:11,990 --> 00:39:17,180
will contain these files the next time

00:39:15,319 --> 00:39:19,730
they are showing within my solution

00:39:17,180 --> 00:39:24,410
without any problem as you can see here

00:39:19,730 --> 00:39:28,700
we have our get situation and I can go

00:39:24,410 --> 00:39:32,150
and commit the staff and push it back to

00:39:28,700 --> 00:39:34,069
get Hubble to my remote etc let me

00:39:32,150 --> 00:39:39,789
switch back I believe we are almost done

00:39:34,069 --> 00:39:42,260
right okay so we play the game we won of

00:39:39,789 --> 00:39:43,760
course you have a Python shell which is

00:39:42,260 --> 00:39:45,349
within with the studio which is probably

00:39:43,760 --> 00:39:47,329
the most interesting of this of this

00:39:45,349 --> 00:39:50,420
talk because if you go to Python

00:39:47,329 --> 00:39:52,279
environments here and open an

00:39:50,420 --> 00:39:55,039
interactive window depending on the on

00:39:52,279 --> 00:39:57,230
the environment you click here now we

00:39:55,039 --> 00:40:00,410
don't have a Bitcoin environment because

00:39:57,230 --> 00:40:06,529
we are in a let's go back to three five

00:40:00,410 --> 00:40:12,190
and open an interactive window or is it

00:40:06,529 --> 00:40:12,190
here print

00:40:20,140 --> 00:40:25,130
okay it works so you can do whatever you

00:40:22,850 --> 00:40:26,690
want within you don't have to go to the

00:40:25,130 --> 00:40:28,520
comment line I mean you can use the

00:40:26,690 --> 00:40:30,440
shell within Visual Studio for testing

00:40:28,520 --> 00:40:36,640
your own code arrow and you can even

00:40:30,440 --> 00:40:39,620
from guess who doesn't work by the shoot

00:40:36,640 --> 00:40:41,750
if we were in the cellar application we

00:40:39,620 --> 00:40:44,000
saw earlier I could import for us a very

00:40:41,750 --> 00:40:45,310
important function and test it here

00:40:44,000 --> 00:40:48,200
right away

00:40:45,310 --> 00:40:50,390
so it is super powerful and there is

00:40:48,200 --> 00:40:53,870
also let's go back to the slide there is

00:40:50,390 --> 00:40:56,410
also support for ipython so if you if

00:40:53,870 --> 00:40:59,710
you fancy that you should you can use

00:40:56,410 --> 00:41:03,200
ipython within a visual studio as well

00:40:59,710 --> 00:41:06,170
and yes so basically as you can see my

00:41:03,200 --> 00:41:10,070
two words the the windows world Visual

00:41:06,170 --> 00:41:14,390
Studio C sharp stack and the Python

00:41:10,070 --> 00:41:18,160
world with the vemma and github clones

00:41:14,390 --> 00:41:20,990
as command-line bash are finally kind of

00:41:18,160 --> 00:41:23,420
converging which is super exciting for

00:41:20,990 --> 00:41:24,920
me also because we are just starting we

00:41:23,420 --> 00:41:26,360
are starting right now it's a new

00:41:24,920 --> 00:41:28,610
project it's been around for a couple

00:41:26,360 --> 00:41:30,470
years but there is a still a lot to be

00:41:28,610 --> 00:41:34,520
done you can already use it in

00:41:30,470 --> 00:41:36,830
production and there are there are a few

00:41:34,520 --> 00:41:40,310
references here I'm going to upload this

00:41:36,830 --> 00:41:43,100
light on mine I will tweet the link to

00:41:40,310 --> 00:41:45,380
the website so you can it in with the

00:41:43,100 --> 00:41:47,810
Euro Python tag so you can get them so

00:41:45,380 --> 00:41:51,980
there is a very nice YouTube section

00:41:47,810 --> 00:41:55,250
with the image from Steve Dowling self

00:41:51,980 --> 00:41:56,960
and there is a documentation site etc go

00:41:55,250 --> 00:42:00,110
up and if you're interested then look it

00:41:56,960 --> 00:42:03,430
up here we are my handles if you want to

00:42:00,110 --> 00:42:06,880
get in touch for asked questions etc and

00:42:03,430 --> 00:42:06,880
thank you very much

00:42:08,220 --> 00:42:14,890
and sorry for the crash but we got it

00:42:11,560 --> 00:42:17,860
out of it so good no but thank you for

00:42:14,890 --> 00:42:20,590
your talk Steve you're there if you want

00:42:17,860 --> 00:42:23,410
to if you have some question to Steve

00:42:20,590 --> 00:42:30,670
and of course Nicola but yes to yolks

00:42:23,410 --> 00:42:31,960
it's no diamond so no no you can ah Elms

00:42:30,670 --> 00:42:36,280
thank you very much for the talk

00:42:31,960 --> 00:42:38,650
I welcome I also have these voice

00:42:36,280 --> 00:42:41,800
colliding sometimes because I'm a Linux

00:42:38,650 --> 00:42:46,960
developer who works in a cross-platform

00:42:41,800 --> 00:42:49,330
team on Windows and the only slight

00:42:46,960 --> 00:42:51,460
problem that I still have with the

00:42:49,330 --> 00:42:54,280
piping tools is that I like to write

00:42:51,460 --> 00:42:58,270
tests in tightest style and the test

00:42:54,280 --> 00:43:01,450
Explorer only recognizes traditional

00:42:58,270 --> 00:43:04,630
unit test tests you know if there's any

00:43:01,450 --> 00:43:07,570
plans to also include actuary I believe

00:43:04,630 --> 00:43:08,350
that Python is already supported by

00:43:07,570 --> 00:43:09,970
Python source

00:43:08,350 --> 00:43:12,040
I spoke to still there were a few a

00:43:09,970 --> 00:43:13,540
while ago and it mentioned that it he

00:43:12,040 --> 00:43:15,970
was working on it should be already

00:43:13,540 --> 00:43:18,130
doable actually but I'm not sure I can

00:43:15,970 --> 00:43:19,330
look it up and if you tweet me or send

00:43:18,130 --> 00:43:21,670
me an email I will let you know

00:43:19,330 --> 00:43:23,980
I believe he should already work I saw a

00:43:21,670 --> 00:43:26,350
guy playing with it at PyCon Italy and

00:43:23,980 --> 00:43:28,270
he was telling me that actually it's

00:43:26,350 --> 00:43:31,090
already supported you can do PI test

00:43:28,270 --> 00:43:34,420
from within Visual Studio so I'm not

00:43:31,090 --> 00:43:36,820
100% sure but if it isn't working

00:43:34,420 --> 00:43:39,000
it will work real soon all right thank

00:43:36,820 --> 00:43:42,520
you you're welcome

00:43:39,000 --> 00:43:45,280
Thanks so demonstration one question can

00:43:42,520 --> 00:43:46,950
Visual Studio produce an installer that

00:43:45,280 --> 00:43:49,600
would install the whole project

00:43:46,950 --> 00:43:51,640
including the dependencies on a machine

00:43:49,600 --> 00:43:54,400
that has no lies in that connection in

00:43:51,640 --> 00:43:54,900
Windows actually now this is the bad

00:43:54,400 --> 00:43:57,850
news

00:43:54,900 --> 00:43:59,290
not yet by the way so you still have to

00:43:57,850 --> 00:44:02,410
go back to the command line for doing

00:43:59,290 --> 00:44:04,480
that but again we're just getting

00:44:02,410 --> 00:44:10,870
started so probably it's going to happen

00:44:04,480 --> 00:44:13,750
soon enough thank you hi Nicola I have

00:44:10,870 --> 00:44:16,240
another question I saw that you decide

00:44:13,750 --> 00:44:18,430
you could choose different Python

00:44:16,240 --> 00:44:19,030
versions energies when you build up

00:44:18,430 --> 00:44:22,120
different

00:44:19,030 --> 00:44:25,570
Armand did you install that before the

00:44:22,120 --> 00:44:27,550
Python versions okay yeah so when I

00:44:25,570 --> 00:44:30,190
install the Python to work for Visual

00:44:27,550 --> 00:44:32,740
Studio which by the way work this way

00:44:30,190 --> 00:44:35,380
only if you are on Visual Studio 2017 if

00:44:32,740 --> 00:44:38,170
you are on these are Studio 2015 you can

00:44:35,380 --> 00:44:40,690
get the extension the Python tools for

00:44:38,170 --> 00:44:43,270
readers to the extension but you need to

00:44:40,690 --> 00:44:45,070
install it as an extension basically it

00:44:43,270 --> 00:44:47,680
doesn't come within the installation

00:44:45,070 --> 00:44:51,130
experience itself it's an extension

00:44:47,680 --> 00:44:53,500
basically yes when installed this I

00:44:51,130 --> 00:44:55,390
already had a few Python installed here

00:44:53,500 --> 00:44:57,820
and it's simply it will simply pick it

00:44:55,390 --> 00:45:00,400
them up and show you them in the list

00:44:57,820 --> 00:45:02,950
and again you can choose to install new

00:45:00,400 --> 00:45:04,630
pythons but from the Installer itself in

00:45:02,950 --> 00:45:06,970
Visual Studio or you can install them

00:45:04,630 --> 00:45:09,700
from the command line or with with the

00:45:06,970 --> 00:45:12,970
classic install application and Visual

00:45:09,700 --> 00:45:17,020
Studio will pick the mam later on who

00:45:12,970 --> 00:45:20,030
has another question No thank you Nicola

00:45:17,020 --> 00:45:24,530
okay thank you again

00:45:20,030 --> 00:45:24,530

YouTube URL: https://www.youtube.com/watch?v=tgw2YvVLWnU


