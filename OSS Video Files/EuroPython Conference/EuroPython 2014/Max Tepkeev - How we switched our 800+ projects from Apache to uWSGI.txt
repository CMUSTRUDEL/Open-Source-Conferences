Title: Max Tepkeev - How we switched our 800+ projects from Apache to uWSGI
Publication date: 2015-04-18
Playlist: EuroPython 2014
Description: 
	Max Tepkeev - How we switched our 800+ projects from Apache to uWSGI
[EuroPython 2014]
[23 July 2014]

During the last 7 years the company I am working for developed more than 800 projects in PHP and Python. All this time we were using Apache+nginx for hosting this projects. In this talk I will explain why we decided to switch all our projects from Apache+nginx to uWSGI+nginx and how we did that.

-----

The talk will start from describing the setup we had for the last 7 years, i.e. Apache with mod_wsgi for Python projects and mod_php4/5 for PHP projects + nginx. I will explain why we used this setup for so long time, what problems we faced with this setup and what solutions we tried to solve them before switching to uWSGI.

Then I will tell about uWSGI, what it is, how it works and what features it has. I will show the comparison of configuration files, how simple it is to configure uWSGI compared to Apache.

Lastly I will explain how we managed to switch all our 800+ projects developed over the years in 2 different languages with 2 major versions changed (PHP4/5 and Python2/3), how this switch simplified our development and administration of this projects, the improvements we got in memory management and other areas.

Of course I will concentrate mainly on our Python projects because it is EuroPython after all and not EuroPHP ;-)
Captions: 
	00:00:14,760 --> 00:00:21,300
and about to introduce max is going to

00:00:18,060 --> 00:00:22,619
tell us about using you whiskey which

00:00:21,300 --> 00:00:32,580
I've recently had a very good experience

00:00:22,619 --> 00:00:35,070
with so Cara Maya OH thank you for

00:00:32,580 --> 00:00:37,199
coming to this talk I know it's hard to

00:00:35,070 --> 00:00:39,500
get up this early you know this beer

00:00:37,199 --> 00:00:43,670
parties till the midnight every day so

00:00:39,500 --> 00:00:46,320
yeah I also had problems today okay

00:00:43,670 --> 00:00:51,140
first the question who is already using

00:00:46,320 --> 00:00:55,470
you whiskey okay that's nice I know that

00:00:51,140 --> 00:00:58,050
Roberto is here Roberta yeah this is the

00:00:55,470 --> 00:01:07,260
lead developer of you whiskey can we

00:00:58,050 --> 00:01:10,560
give him some loss so the talk is called

00:01:07,260 --> 00:01:14,940
how we switched our 800 plus projects

00:01:10,560 --> 00:01:18,600
from Apache to your whiskey so who we I

00:01:14,940 --> 00:01:22,410
work for the company called I love its

00:01:18,600 --> 00:01:26,100
web agency Russian web agency we do

00:01:22,410 --> 00:01:28,860
websites mainly we are the part of a lab

00:01:26,100 --> 00:01:33,030
group which consists of three companies

00:01:28,860 --> 00:01:35,160
I love I target an icon I love this

00:01:33,030 --> 00:01:37,140
pronounced just like I love not a I love

00:01:35,160 --> 00:01:40,650
because some people asked me about it I

00:01:37,140 --> 00:01:43,020
don't know why don't test me so we are

00:01:40,650 --> 00:01:47,190
situated in Russia in Moscow we have

00:01:43,020 --> 00:01:49,860
more than 120 people and we made more

00:01:47,190 --> 00:01:53,130
than 800 projects during the last years

00:01:49,860 --> 00:01:56,580
I personally work as a team lead for the

00:01:53,130 --> 00:01:59,600
I love company and this is one of the

00:01:56,580 --> 00:02:04,230
largest Russian web page chances okay

00:01:59,600 --> 00:02:06,840
Hawaii my name is Max as I already said

00:02:04,230 --> 00:02:09,179
I work in live in Russia Moscow I'm also

00:02:06,840 --> 00:02:11,610
the author of Python Redmond package

00:02:09,179 --> 00:02:13,440
which is currently the most popular in

00:02:11,610 --> 00:02:16,040
feature complete package to access data

00:02:13,440 --> 00:02:18,269
from read mine from Python and

00:02:16,040 --> 00:02:20,790
architects probably you seen my

00:02:18,269 --> 00:02:23,090
lightning talk monday which is the

00:02:20,790 --> 00:02:25,469
successor of django d be party package

00:02:23,090 --> 00:02:27,870
which provides fully automatic table

00:02:25,469 --> 00:02:33,390
partition for django pv

00:02:27,870 --> 00:02:36,239
and SQL alchemy users when we just

00:02:33,390 --> 00:02:38,909
started we used only beach p for

00:02:36,239 --> 00:02:41,370
developing our projects within jannik's

00:02:38,909 --> 00:02:44,670
on the front end and apache with mode

00:02:41,370 --> 00:02:46,170
PHP on the back end which was the best

00:02:44,670 --> 00:02:48,360
available way to host beach be

00:02:46,170 --> 00:02:51,209
application at that time that was a long

00:02:48,360 --> 00:02:53,159
time ago but then after several years we

00:02:51,209 --> 00:02:56,430
realized that their life problems in

00:02:53,159 --> 00:02:58,489
downsides with PHP itself so we started

00:02:56,430 --> 00:03:01,290
to search for another language and

00:02:58,489 --> 00:03:03,060
choose Python chose Python for several

00:03:01,290 --> 00:03:06,540
reasons which are beyond the scope of

00:03:03,060 --> 00:03:09,870
this top and because we already had

00:03:06,540 --> 00:03:13,069
already working on janux and apache

00:03:09,870 --> 00:03:16,170
environment so we decided to choose

00:03:13,069 --> 00:03:18,390
between what python which was you know

00:03:16,170 --> 00:03:21,239
completely dead and abandoned at that

00:03:18,390 --> 00:03:23,720
time and mode whiskey which was also

00:03:21,239 --> 00:03:26,310
dead but its corpse was too warm and

00:03:23,720 --> 00:03:30,540
yeah you know it was more feature-rich

00:03:26,310 --> 00:03:33,569
and Mahatma documentation so we chose

00:03:30,540 --> 00:03:39,419
more whiskey and started to save our

00:03:33,569 --> 00:03:41,609
Python applications with malt whiskey we

00:03:39,419 --> 00:03:44,069
use used mod whiskey in daemon mode

00:03:41,609 --> 00:03:46,739
because it allows allowed us to run

00:03:44,069 --> 00:03:49,709
applications in separate processes and

00:03:46,739 --> 00:03:52,799
was also the recommended way from mod

00:03:49,709 --> 00:03:55,859
whiskey author himself actually

00:03:52,799 --> 00:03:57,810
everything worked but we had several

00:03:55,859 --> 00:04:03,660
problems with the patching in more

00:03:57,810 --> 00:04:05,579
whiskey okay our main problem was that

00:04:03,660 --> 00:04:09,720
we had projects within different

00:04:05,579 --> 00:04:12,540
versions of PHP and Python and the only

00:04:09,720 --> 00:04:15,299
way that we found we you know we had to

00:04:12,540 --> 00:04:17,160
have five Apache instances one for each

00:04:15,299 --> 00:04:21,260
version listening on different ports

00:04:17,160 --> 00:04:21,260
which was really nightmare to support

00:04:21,919 --> 00:04:30,539
okay another problem was with automatic

00:04:27,630 --> 00:04:33,210
code reloading given the development we

00:04:30,539 --> 00:04:35,160
didn't want we use Django primarily for

00:04:33,210 --> 00:04:37,039
our projects in Python so we didn't want

00:04:35,160 --> 00:04:40,440
to use jangles built-in web server and

00:04:37,039 --> 00:04:42,350
we wanted to develop with more whiskey

00:04:40,440 --> 00:04:44,670
because we wanted to be sure that

00:04:42,350 --> 00:04:46,140
everything will work as expected to

00:04:44,670 --> 00:04:51,510
after we deploy on our production

00:04:46,140 --> 00:04:53,940
service and there are two modes in mode

00:04:51,510 --> 00:04:57,450
whiskey basically one is called embedded

00:04:53,940 --> 00:04:59,040
mode and as far as I know one needs to

00:04:57,450 --> 00:05:03,150
restart the whole Apache up to the code

00:04:59,040 --> 00:05:06,420
changes and there is a demon mode which

00:05:03,150 --> 00:05:08,910
we were using and you have to issue

00:05:06,420 --> 00:05:11,850
touch comment to the whiskey entry point

00:05:08,910 --> 00:05:14,040
to reload the source also there was a

00:05:11,850 --> 00:05:16,350
recite from what with the author which

00:05:14,040 --> 00:05:21,390
was hidden you know deeply in the docks

00:05:16,350 --> 00:05:23,970
and it was the 100-plus something lines

00:05:21,390 --> 00:05:26,340
of custom-made Python script which he

00:05:23,970 --> 00:05:29,040
wrote and we had to include the script

00:05:26,340 --> 00:05:31,070
in our projects and live with it ya know

00:05:29,040 --> 00:05:36,540
maybe it's not as a big problem you know

00:05:31,070 --> 00:05:38,550
but still it's you know two 2014 year so

00:05:36,540 --> 00:05:45,750
there must be more appropriate way to do

00:05:38,550 --> 00:05:47,760
that actually at the moment an active

00:05:45,750 --> 00:05:51,150
development of malt whiskey started

00:05:47,760 --> 00:05:55,680
again and there are several new versions

00:05:51,150 --> 00:05:58,320
already and started from 4.1 there is a

00:05:55,680 --> 00:06:00,750
Django application plugin which has a

00:05:58,320 --> 00:06:03,600
run mode whiskey comment to the jungle

00:06:00,750 --> 00:06:05,940
which allows Python you know manage pi

00:06:03,600 --> 00:06:07,740
run or mod whiskey real oil and changes

00:06:05,940 --> 00:06:11,400
common but that's only for jungle and

00:06:07,740 --> 00:06:14,220
it's actually the same old 100 flights

00:06:11,400 --> 00:06:16,169
plus line script which is now just

00:06:14,220 --> 00:06:23,820
became the part of official package of

00:06:16,169 --> 00:06:27,660
not whiskey so nothing you okay another

00:06:23,820 --> 00:06:29,490
problem was that during development we

00:06:27,660 --> 00:06:31,590
create a lot of different branches in

00:06:29,490 --> 00:06:34,140
ghee and we want them to be available

00:06:31,590 --> 00:06:38,130
for example you know we are URL like

00:06:34,140 --> 00:06:40,230
branch project com and we also wanted

00:06:38,130 --> 00:06:42,450
each branch to run on the separate demon

00:06:40,230 --> 00:06:46,590
process because if one branch has some

00:06:42,450 --> 00:06:48,630
problems and these problems can crash

00:06:46,590 --> 00:06:53,280
the demon process the other developers

00:06:48,630 --> 00:06:53,849
should continue to work so the solution

00:06:53,280 --> 00:06:56,929
we came

00:06:53,849 --> 00:07:00,119
with is to have a get hook which

00:06:56,929 --> 00:07:03,959
generates separate apache config file

00:07:00,119 --> 00:07:08,279
for each new branch and then we start

00:07:03,959 --> 00:07:10,469
apache if a branch gets deleted then the

00:07:08,279 --> 00:07:14,219
config file is deleted 2 and we have to

00:07:10,469 --> 00:07:17,339
reload a patch again now okay if we have

00:07:14,219 --> 00:07:20,159
20 branches we have 20 almost absolutely

00:07:17,339 --> 00:07:22,740
similar config files yeah except for the

00:07:20,159 --> 00:07:25,020
different demon process name and a few

00:07:22,740 --> 00:07:28,139
other things and this is only for one

00:07:25,020 --> 00:07:29,789
project so what if we decided to change

00:07:28,139 --> 00:07:31,499
something in the config file of a

00:07:29,789 --> 00:07:33,779
project we have to edit all these 20

00:07:31,499 --> 00:07:37,529
config files you know this is this is

00:07:33,779 --> 00:07:39,749
really painful perhaps there is another

00:07:37,529 --> 00:07:41,819
way and I hope there is another way but

00:07:39,749 --> 00:07:44,249
we spent almost a month googling we

00:07:41,819 --> 00:07:46,439
couldn't just find it so maybe somebody

00:07:44,249 --> 00:07:53,519
knows please tell me I'm really

00:07:46,439 --> 00:07:57,479
interested yeah another problem more

00:07:53,519 --> 00:08:00,119
problems so when we add a new config

00:07:57,479 --> 00:08:02,279
file we have to issue a reload because

00:08:00,119 --> 00:08:05,309
Apache can't load configuration files

00:08:02,279 --> 00:08:08,249
dynamically but there are actually two

00:08:05,309 --> 00:08:10,019
problems with that first there is still

00:08:08,249 --> 00:08:11,699
a little time when this web server don't

00:08:10,019 --> 00:08:13,289
respond to requests this time can be

00:08:11,699 --> 00:08:17,249
from milliseconds two seconds depending

00:08:13,289 --> 00:08:18,930
on various factors and second if there

00:08:17,249 --> 00:08:21,509
is an error in your configuration file

00:08:18,930 --> 00:08:24,539
the whole survey will crash yes there is

00:08:21,509 --> 00:08:26,939
a conflict test comment which can check

00:08:24,539 --> 00:08:29,009
the syntax of the file but this is only

00:08:26,939 --> 00:08:30,990
the syntax so if it's not the syntax

00:08:29,009 --> 00:08:34,649
error but some logical error then the

00:08:30,990 --> 00:08:41,339
whole server will crash so this is not

00:08:34,649 --> 00:08:44,149
good and yeah lastly some small problems

00:08:41,339 --> 00:08:47,490
you know maybe subjective but still

00:08:44,149 --> 00:08:50,160
first one Apache configuration files are

00:08:47,490 --> 00:08:54,959
ugly I know a lot of people when me

00:08:50,160 --> 00:08:57,630
including who thinks that you know if

00:08:54,959 --> 00:09:00,240
you look at the Apache configuration

00:08:57,630 --> 00:09:02,130
files you need some time to understand

00:09:00,240 --> 00:09:07,030
what's going on in there especially if

00:09:02,130 --> 00:09:09,910
they are some complex ones so

00:09:07,030 --> 00:09:16,450
apache is hard to configure properly oh

00:09:09,910 --> 00:09:18,730
sorry yeah you have to be really Apache

00:09:16,450 --> 00:09:20,980
expert to configure it in a way that it

00:09:18,730 --> 00:09:23,310
could compete without the web service in

00:09:20,980 --> 00:09:26,560
areas like you know memory management

00:09:23,310 --> 00:09:33,730
utilization so not every sysadmin knows

00:09:26,560 --> 00:09:35,440
how to do that yeah Apache result you

00:09:33,730 --> 00:09:39,880
know even my grandma was using it in the

00:09:35,440 --> 00:09:44,860
old days yeah the 2.2 version was

00:09:39,880 --> 00:09:47,950
released in the 2005 yes there is a to

00:09:44,860 --> 00:09:52,900
you yeah it still developed this branch

00:09:47,950 --> 00:09:57,370
but actually the mostly fuse box and 2.4

00:09:52,900 --> 00:09:59,080
version was released in 2012 and yes

00:09:57,370 --> 00:10:02,020
it's fixed a lot of problems and

00:09:59,080 --> 00:10:04,150
limitations for example you know memory

00:10:02,020 --> 00:10:05,890
management became much better they

00:10:04,150 --> 00:10:09,400
finally added an ability to declare

00:10:05,890 --> 00:10:16,150
config file variables so config files

00:10:09,400 --> 00:10:18,670
became a bit cleaner too and yeah what

00:10:16,150 --> 00:10:20,200
whiskey seemed to be abandoned at the

00:10:18,670 --> 00:10:23,170
time when we was looking for a solution

00:10:20,200 --> 00:10:27,220
but it's actually developed again so

00:10:23,170 --> 00:10:29,800
this is not really a problem now and all

00:10:27,220 --> 00:10:32,230
these problems made us to start looking

00:10:29,800 --> 00:10:34,180
for a solution and we click quickly

00:10:32,230 --> 00:10:39,640
found the solution it's called key

00:10:34,180 --> 00:10:43,390
whiskey so Q whiskey it's a modern

00:10:39,640 --> 00:10:48,180
project if I'm not mistaken it started

00:10:43,390 --> 00:10:52,060
somewhere between 2009 or to start 2010

00:10:48,180 --> 00:10:56,250
it has a really fast development cycle

00:10:52,060 --> 00:10:59,020
and new features are constantly adding

00:10:56,250 --> 00:11:01,900
it supports a lot of languages including

00:10:59,020 --> 00:11:04,300
Python and C Python pipe I enjoy a nice

00:11:01,900 --> 00:11:07,540
voice coming support speech peelu a

00:11:04,300 --> 00:11:10,900
pearl Robbie Elango Java has support for

00:11:07,540 --> 00:11:12,880
v8 engine and mono running asp.net

00:11:10,900 --> 00:11:18,220
applications and more so it's really

00:11:12,880 --> 00:11:19,830
cool it works you know on all linux

00:11:18,220 --> 00:11:23,310
windows is PSDC

00:11:19,830 --> 00:11:28,770
and other os's like mac OS various and

00:11:23,310 --> 00:11:32,220
so on janux supports you whiskey

00:11:28,770 --> 00:11:35,420
protocol directly and you whiskey is the

00:11:32,220 --> 00:11:38,730
best performing protocol of you whiskey

00:11:35,420 --> 00:11:40,200
it also has a tone more features will

00:11:38,730 --> 00:11:44,130
discuss some of the most interesting

00:11:40,200 --> 00:11:47,150
later and just to brief introduction how

00:11:44,130 --> 00:11:50,010
we can install it it's really easy so

00:11:47,150 --> 00:11:56,340
Hugh just go download this latest

00:11:50,010 --> 00:11:59,850
version of your whiskey the vast

00:11:56,340 --> 00:12:01,920
majority of you whiskey features I

00:11:59,850 --> 00:12:04,860
available as plugins which is also

00:12:01,920 --> 00:12:06,810
really cool and if you want to have the

00:12:04,860 --> 00:12:09,630
maximum amount of flexibility and use

00:12:06,810 --> 00:12:11,610
only the minimal amount of resources so

00:12:09,630 --> 00:12:15,030
just create a modular built which is the

00:12:11,610 --> 00:12:16,920
recommended approach I'll show how to do

00:12:15,030 --> 00:12:18,390
it from the source because our package

00:12:16,920 --> 00:12:20,970
repositories may not always have the

00:12:18,390 --> 00:12:23,880
latest version or may not have the

00:12:20,970 --> 00:12:28,500
available plugins so we just download

00:12:23,880 --> 00:12:30,480
this you whiskey thing if you want to

00:12:28,500 --> 00:12:36,260
change install location you know you can

00:12:30,480 --> 00:12:42,420
add the two following directives to the

00:12:36,260 --> 00:12:46,380
guild conf / cordoning file and then you

00:12:42,420 --> 00:12:50,360
create this directors of course now we

00:12:46,380 --> 00:12:52,920
have to build the core looks really easy

00:12:50,360 --> 00:12:55,110
core already consists of several

00:12:52,920 --> 00:12:57,090
packages that are most likely will be

00:12:55,110 --> 00:12:58,980
needed by everyone but if you are think

00:12:57,090 --> 00:13:00,540
that you're not everyone you can also

00:12:58,980 --> 00:13:05,520
customize what exactly the core will

00:13:00,540 --> 00:13:09,240
consists off and we compile it and then

00:13:05,520 --> 00:13:14,930
we needed to build our plugins yeah two

00:13:09,240 --> 00:13:18,450
plugins for Python 2.7 and 3.3 lamb and

00:13:14,930 --> 00:13:21,990
let's do two plugins for PHP I know we

00:13:18,450 --> 00:13:24,060
hit pitch p but still ok we just

00:13:21,990 --> 00:13:28,560
completed the install process that's

00:13:24,060 --> 00:13:31,200
actually it's very simple now let's see

00:13:28,560 --> 00:13:33,030
how we can solve problems that we had

00:13:31,200 --> 00:13:33,310
with apache and more whiskey with the

00:13:33,030 --> 00:13:37,450
hell

00:13:33,310 --> 00:13:40,120
of you whiskey first yeah multi version

00:13:37,450 --> 00:13:44,200
plugins this is really cool this was the

00:13:40,120 --> 00:13:46,210
biggest problem for us and this just

00:13:44,200 --> 00:13:48,040
works in you whiskey you can pile as

00:13:46,210 --> 00:13:54,970
many plugins as you need and it just

00:13:48,040 --> 00:13:56,740
works yeah remember that 100-plus lines

00:13:54,970 --> 00:13:59,350
python script which was used in mod

00:13:56,740 --> 00:14:01,210
whiskey to monitor code changes and real

00:13:59,350 --> 00:14:04,930
true love demon process you whiskey has

00:14:01,210 --> 00:14:09,490
just the you know simple option you just

00:14:04,930 --> 00:14:11,920
specify how many seconds you you want to

00:14:09,490 --> 00:14:15,250
do you know this you will get to scan

00:14:11,920 --> 00:14:19,060
for your code changes and it rewards

00:14:15,250 --> 00:14:22,930
everything automatically there is also a

00:14:19,060 --> 00:14:25,240
touch reload option if you need it so no

00:14:22,930 --> 00:14:27,310
more custom wait home scripts you know

00:14:25,240 --> 00:14:32,680
which you have to search and including

00:14:27,310 --> 00:14:36,220
your project finally we also had a

00:14:32,680 --> 00:14:38,380
problem with malt whiskey's with G demon

00:14:36,220 --> 00:14:40,089
process directive name can't be dynamic

00:14:38,380 --> 00:14:42,250
and we needed to set redeeming process

00:14:40,089 --> 00:14:44,640
for each kid branch so we had to

00:14:42,250 --> 00:14:47,680
generate absolutely similar config files

00:14:44,640 --> 00:14:50,280
you busy has a thing called emperor mode

00:14:47,680 --> 00:14:53,589
which was the solution to this problem

00:14:50,280 --> 00:14:56,200
basically it's a special instance of

00:14:53,589 --> 00:14:58,120
your whiskey that will monitor special

00:14:56,200 --> 00:15:04,150
events and will spawn stop real all

00:14:58,120 --> 00:15:06,490
instances known as vessels on demand by

00:15:04,150 --> 00:15:09,339
default the Emperor will scan specific

00:15:06,490 --> 00:15:12,670
directories for supporting configuration

00:15:09,339 --> 00:15:15,430
files but it is extensible using

00:15:12,670 --> 00:15:17,770
imperial monitor plugins that means that

00:15:15,430 --> 00:15:21,040
you can store configuration in Postgres

00:15:17,770 --> 00:15:26,680
you know manga publish it via mqp zeromq

00:15:21,040 --> 00:15:28,540
and so on there are many options let's

00:15:26,680 --> 00:15:31,060
see an example for the directory

00:15:28,540 --> 00:15:33,930
monetary plugin we start at your whiskey

00:15:31,060 --> 00:15:37,810
Emperor instance and ask it to monitor

00:15:33,930 --> 00:15:40,209
yeah the following due to a pattern now

00:15:37,810 --> 00:15:42,880
if we add a new file to this d victory

00:15:40,209 --> 00:15:45,860
the Emperor will automatically spawn and

00:15:42,880 --> 00:15:48,950
you vessel

00:15:45,860 --> 00:15:52,220
and if we modify the file the Emperor

00:15:48,950 --> 00:15:54,380
will restart a vessel and if we delete

00:15:52,220 --> 00:15:56,560
the file the vessel will be killed and

00:15:54,380 --> 00:15:59,209
all of this will happen absolutely

00:15:56,560 --> 00:16:00,829
automatically there is no need to issue

00:15:59,209 --> 00:16:04,399
some you know we start comments below

00:16:00,829 --> 00:16:06,200
and so on now what if we have an error

00:16:04,399 --> 00:16:09,890
in our vessel configuration file

00:16:06,200 --> 00:16:13,070
actually nothing bad will happen to the

00:16:09,890 --> 00:16:15,050
other vessels the Emperor will just say

00:16:13,070 --> 00:16:18,709
that this vessel is cursed you know and

00:16:15,050 --> 00:16:20,480
once spawn a new instance of it so if

00:16:18,709 --> 00:16:22,339
the Emperor dies himself then obvious

00:16:20,480 --> 00:16:27,470
that his alter his vessels are died with

00:16:22,339 --> 00:16:29,800
him so how will this actually help us

00:16:27,470 --> 00:16:34,279
with this Apache problem with dynamic

00:16:29,800 --> 00:16:36,769
whiskey demon process problem yet should

00:16:34,279 --> 00:16:38,870
we also create the same insane amount of

00:16:36,769 --> 00:16:42,140
configuration files per project one for

00:16:38,870 --> 00:16:44,060
each branch yes and no we'll use

00:16:42,140 --> 00:16:50,300
template config files and create

00:16:44,060 --> 00:16:53,209
symlinks this is an example of template

00:16:50,300 --> 00:16:55,519
config file at first we define our own

00:16:53,209 --> 00:16:58,010
variable called Project you and set here

00:16:55,519 --> 00:17:00,529
the path to our project then we define

00:16:58,010 --> 00:17:04,220
that will be using Python 2.7 this is

00:17:00,529 --> 00:17:06,140
our plug-in and our other Python project

00:17:04,220 --> 00:17:08,809
related stuff which should be nothing

00:17:06,140 --> 00:17:11,630
new to anyone who knows how Python apps

00:17:08,809 --> 00:17:14,319
work the interesting thing here is the

00:17:11,630 --> 00:17:19,910
percent and magic variable which is the

00:17:14,319 --> 00:17:21,199
config file name without extension by

00:17:19,910 --> 00:17:23,240
the way I don't know about you but for

00:17:21,199 --> 00:17:24,890
me this syntax is much much cleaner you

00:17:23,240 --> 00:17:27,980
know compared to bed she configuration

00:17:24,890 --> 00:17:29,690
files and also as a bonus my brain

00:17:27,980 --> 00:17:34,730
doesn't hurt after I work with this

00:17:29,690 --> 00:17:36,500
configuration files so it's nice that

00:17:34,730 --> 00:17:38,360
means that from now on instead of

00:17:36,500 --> 00:17:41,419
generating separate config file for each

00:17:38,360 --> 00:17:45,350
git branch we just create a symlink to

00:17:41,419 --> 00:17:48,140
the project's template file and yes

00:17:45,350 --> 00:17:51,799
there will be a zoo this will give us 20

00:17:48,140 --> 00:17:54,679
symlinks 420g branches still but the big

00:17:51,799 --> 00:17:56,390
win over apache is that if we need to

00:17:54,679 --> 00:17:58,370
change something which ends it in one

00:17:56,390 --> 00:17:59,340
place in the template config file

00:17:58,370 --> 00:18:01,920
instead of changing

00:17:59,340 --> 00:18:07,050
every you know config file generated for

00:18:01,920 --> 00:18:09,030
Apache and also because we are using the

00:18:07,050 --> 00:18:11,010
demon mode which is monitoring our

00:18:09,030 --> 00:18:13,110
directories for config files when a new

00:18:11,010 --> 00:18:15,870
sim link is created a new vessel is

00:18:13,110 --> 00:18:17,820
spawned automatically and if we delete

00:18:15,870 --> 00:18:20,880
this symlink then the vessel is skilled

00:18:17,820 --> 00:18:23,760
also automatically no need for any

00:18:20,880 --> 00:18:27,150
restart comments and so on and also

00:18:23,760 --> 00:18:29,610
starting from one point nine point one

00:18:27,150 --> 00:18:31,710
you can now tell the Emperor to spawn a

00:18:29,610 --> 00:18:35,730
vessel only after the first request has

00:18:31,710 --> 00:18:39,530
been made combined with idle and diamond

00:18:35,730 --> 00:18:41,910
idle options this allows us to have

00:18:39,530 --> 00:18:48,540
really truly on-demand applications

00:18:41,910 --> 00:18:49,950
which is also cool okay let's briefly

00:18:48,540 --> 00:18:52,830
talk about some of the whiskey's

00:18:49,950 --> 00:18:55,410
interesting features so we can implement

00:18:52,830 --> 00:18:57,960
auto scaling with the you biscay using

00:18:55,410 --> 00:18:59,760
the bootloader can dem promote with idle

00:18:57,960 --> 00:19:02,960
and denied options so it's a combination

00:18:59,760 --> 00:19:08,460
of features you know the idea is that

00:19:02,960 --> 00:19:12,450
when site is the site load is heavy and

00:19:08,460 --> 00:19:14,640
your vessels just can't handle it they

00:19:12,450 --> 00:19:18,120
can ask Emperor to enter brood load mode

00:19:14,640 --> 00:19:19,680
and give them some help works so they

00:19:18,120 --> 00:19:22,260
could win the battle you know and serve

00:19:19,680 --> 00:19:24,660
all the requests and after the Lord is

00:19:22,260 --> 00:19:29,490
normal again the brutal load kills all

00:19:24,660 --> 00:19:34,320
the sex and everything is fine again as

00:19:29,490 --> 00:19:36,540
of 1.3 there is an alarm subsystem it

00:19:34,320 --> 00:19:39,990
allows the developer or sysadmin to

00:19:36,540 --> 00:19:42,690
announce some special conditions we are

00:19:39,990 --> 00:19:44,820
the various channels for example you may

00:19:42,690 --> 00:19:46,620
want to get notified we are Jabbar when

00:19:44,820 --> 00:19:48,870
a string terrible alarm appears and log

00:19:46,620 --> 00:19:50,820
files for example or something there are

00:19:48,870 --> 00:19:55,800
a lot of also options to configure this

00:19:50,820 --> 00:19:58,140
lamp subsystems system there is also a

00:19:55,800 --> 00:20:01,620
nice feature for a liaison python

00:19:58,140 --> 00:20:03,810
modules you know that having multiple

00:20:01,620 --> 00:20:06,750
version of python package model is very

00:20:03,810 --> 00:20:10,350
common and the one way is manipulating

00:20:06,750 --> 00:20:11,490
pythonpath or using virtual Alps but for

00:20:10,350 --> 00:20:14,070
example you whiskey

00:20:11,490 --> 00:20:16,470
gives us another option called a liaison

00:20:14,070 --> 00:20:19,170
system let's see we have imports of

00:20:16,470 --> 00:20:21,630
foreign bar modules in a lot of places

00:20:19,170 --> 00:20:23,370
in our code and we want to make some

00:20:21,630 --> 00:20:25,470
modifications to it but keep our

00:20:23,370 --> 00:20:27,480
original full bar modules intact for

00:20:25,470 --> 00:20:29,250
whatever reason we can create

00:20:27,480 --> 00:20:32,280
experimental food and experimental bar

00:20:29,250 --> 00:20:35,640
modules and make the needed changes in

00:20:32,280 --> 00:20:39,059
them and Elias them and when you know

00:20:35,640 --> 00:20:41,720
you make an import foo and bar instead

00:20:39,059 --> 00:20:43,950
of importing the original files

00:20:41,720 --> 00:20:49,290
experimental food and experimental bar

00:20:43,950 --> 00:20:51,809
modules will be imported there are a lot

00:20:49,290 --> 00:20:54,270
of cool features a lot we need a lot of

00:20:51,809 --> 00:20:56,760
time to you know talk about all of them

00:20:54,270 --> 00:21:03,500
but briefly there is also a built-in

00:20:56,760 --> 00:21:07,380
crontab yeah there is lot balancer

00:21:03,500 --> 00:21:09,240
clustering subsystem of flawed subsystem

00:21:07,380 --> 00:21:11,730
which allows you to automatically

00:21:09,240 --> 00:21:15,090
delegate some heavy tasks to separate

00:21:11,730 --> 00:21:18,990
thread it also has a lot of different

00:21:15,090 --> 00:21:22,350
plugins for different tasks and it

00:21:18,990 --> 00:21:24,990
integrates with almost all well-known

00:21:22,350 --> 00:21:27,929
web service like you know engine except

00:21:24,990 --> 00:21:31,650
a cheech rocky light httpd to you

00:21:27,929 --> 00:21:34,559
and so on on it has also Django admin

00:21:31,650 --> 00:21:36,870
integration plugin which shows the

00:21:34,559 --> 00:21:41,400
status of you whiskey and allows to

00:21:36,870 --> 00:21:44,640
start a career its cache and there is

00:21:41,400 --> 00:21:47,100
more functionality in development also

00:21:44,640 --> 00:21:49,620
it has a rich configuration system it

00:21:47,100 --> 00:21:52,920
supports configuration files in any XML

00:21:49,620 --> 00:21:55,350
llamo or JSON and so you can choose what

00:21:52,920 --> 00:21:58,290
you like what is better for your brain

00:21:55,350 --> 00:22:00,660
it is more than 30 magic variables for

00:21:58,290 --> 00:22:03,410
all sort of things you know like

00:22:00,660 --> 00:22:06,390
environmental variables placeholders and

00:22:03,410 --> 00:22:08,790
so on you can even do simple math in

00:22:06,390 --> 00:22:10,890
place holders you can read contents of

00:22:08,790 --> 00:22:13,110
other files from your config files you

00:22:10,890 --> 00:22:15,390
can write for cycles and if statements

00:22:13,110 --> 00:22:17,640
and config files you can declare you on

00:22:15,390 --> 00:22:18,720
variables in your Python scripts and use

00:22:17,640 --> 00:22:24,570
them in your whiskey

00:22:18,720 --> 00:22:27,120
and much more to school okay finally how

00:22:24,570 --> 00:22:32,159
to switch your whiskey is cool yeah but

00:22:27,120 --> 00:22:34,650
how you know there is no easy way

00:22:32,159 --> 00:22:37,140
unfortunately there is no some magic

00:22:34,650 --> 00:22:41,220
tool that will translate all your apache

00:22:37,140 --> 00:22:44,100
config files to your whiskey ones how we

00:22:41,220 --> 00:22:49,620
did that with our you know more than 800

00:22:44,100 --> 00:22:52,200
projects well we divided our projects

00:22:49,620 --> 00:22:56,700
into several groups that have equal or

00:22:52,200 --> 00:22:59,490
almost equal apache config files then we

00:22:56,700 --> 00:23:01,760
wrote a script that generates similar

00:22:59,490 --> 00:23:04,559
analogs for your whiskey for each group

00:23:01,760 --> 00:23:07,260
they took us approximately two days and

00:23:04,559 --> 00:23:10,049
allowed to switch all our projects to

00:23:07,260 --> 00:23:12,809
your whiskey on our deaf service then we

00:23:10,049 --> 00:23:14,940
started to run our functional tests and

00:23:12,809 --> 00:23:18,000
see if all of them passed then whenever

00:23:14,940 --> 00:23:22,230
there was a problem we just looked at it

00:23:18,000 --> 00:23:25,710
and you know we did this way we tuned to

00:23:22,230 --> 00:23:27,510
config files for your whiskey and we

00:23:25,710 --> 00:23:29,370
were when we were sure that everything

00:23:27,510 --> 00:23:31,020
works on our dash service we made a

00:23:29,370 --> 00:23:35,789
switch to whiskey on our production

00:23:31,020 --> 00:23:38,750
service so that's how we did that again

00:23:35,789 --> 00:23:38,750
everything by hand unfortunately

00:23:40,250 --> 00:23:45,090
conclusion yeah in the conclusion I want

00:23:43,049 --> 00:23:47,250
to say that Apache is actually not bad

00:23:45,090 --> 00:23:50,520
it's a very good and stable web server

00:23:47,250 --> 00:23:52,799
which is used by a lot of people if it's

00:23:50,520 --> 00:23:55,740
suitable and it is suitable for a lot of

00:23:52,799 --> 00:23:58,140
situations and you can happily use it if

00:23:55,740 --> 00:24:00,510
it works for you do not blindly trust

00:23:58,140 --> 00:24:02,659
people let's say betcha sucks go try

00:24:00,510 --> 00:24:05,549
this or that new super cool web server

00:24:02,659 --> 00:24:07,140
just tuned on your brain and think do

00:24:05,549 --> 00:24:09,570
you really have any problems with your

00:24:07,140 --> 00:24:12,960
Apache and if no then live happily with

00:24:09,570 --> 00:24:15,419
it and don't listen to anyone in this

00:24:12,960 --> 00:24:17,010
talk I explained why we switched so we

00:24:15,419 --> 00:24:19,440
didn't have any problems with the better

00:24:17,010 --> 00:24:22,530
performance but we had problems with its

00:24:19,440 --> 00:24:24,480
features so we could do everything we

00:24:22,530 --> 00:24:27,450
wanted with a battery but we wasn't

00:24:24,480 --> 00:24:29,399
happy with how we could do that and what

00:24:27,450 --> 00:24:31,559
I'm trying to say is that you should

00:24:29,399 --> 00:24:34,950
choose a web server by features and not

00:24:31,559 --> 00:24:37,740
benchmark though you whiskey has much

00:24:34,950 --> 00:24:40,230
better memory management than fashion so

00:24:37,740 --> 00:24:44,100
you'll probably win something in

00:24:40,230 --> 00:24:47,789
performance and also it's pointless to

00:24:44,100 --> 00:24:49,980
benchmark app server because usually the

00:24:47,789 --> 00:24:52,080
old perform approximately the same if

00:24:49,980 --> 00:24:53,850
they configured properly and in

00:24:52,080 --> 00:24:55,889
ninety-nine cases this is an application

00:24:53,850 --> 00:24:57,570
that is written incorrectly and has

00:24:55,889 --> 00:25:00,240
performance problems and not a web

00:24:57,570 --> 00:25:05,480
server you know which just serves an

00:25:00,240 --> 00:25:05,480
application to the world so thank you

00:25:12,409 --> 00:25:26,899
thank you max got time for a couple of

00:25:15,779 --> 00:25:26,899
questions anyway yep okay come here

00:25:27,379 --> 00:25:34,970
compare those i se but on this disk

00:25:32,879 --> 00:25:48,030
application server

00:25:34,970 --> 00:25:52,350
what's up itself isn't want to be ya ya

00:25:48,030 --> 00:25:54,900
ya bum so the question is if it's maybe

00:25:52,350 --> 00:25:56,850
was better to compare you whiskey with

00:25:54,900 --> 00:26:00,260
malt whisky you know and not you with

00:25:56,850 --> 00:26:00,260
you with the whole virtual thing yeah

00:26:03,320 --> 00:26:08,520
yes yes of course in front of so we had

00:26:06,390 --> 00:26:10,020
ingenix in front off and apache with mod

00:26:08,520 --> 00:26:12,120
whiskey on the back end and now we have

00:26:10,020 --> 00:26:15,960
again in jannik's on the front end and

00:26:12,120 --> 00:26:17,880
you whiskey on the back end speaking

00:26:15,960 --> 00:26:20,120
about the comparison if it's a fair

00:26:17,880 --> 00:26:24,660
comparison i think yes it is because

00:26:20,120 --> 00:26:28,800
mode whiskey is just you know a thing to

00:26:24,660 --> 00:26:31,020
serve python applications but it just

00:26:28,800 --> 00:26:36,330
won't work without a patch itself so of

00:26:31,020 --> 00:26:39,600
course then well i don't know i think

00:26:36,330 --> 00:26:42,270
the comparison is fair yeah yes you can

00:26:39,600 --> 00:26:45,450
you can use the patriots reverse proxy

00:26:42,270 --> 00:26:48,420
yes you can but it you know the problem

00:26:45,450 --> 00:26:50,730
was that it's not very comfortable to

00:26:48,420 --> 00:26:53,010
work with the patching you have to

00:26:50,730 --> 00:26:58,130
search for some workarounds always to

00:26:53,010 --> 00:26:58,130
make everything work we didn't like it

00:27:00,759 --> 00:27:11,090
hey just to go to the club at the one

00:27:07,909 --> 00:27:15,409
good at that you asleep jewnicorn for

00:27:11,090 --> 00:27:21,230
example and self with enjoy nights and

00:27:15,409 --> 00:27:25,429
you have basically replacing the

00:27:21,230 --> 00:27:27,999
director and limits have an application

00:27:25,429 --> 00:27:33,529
server which you can beat your phone

00:27:27,999 --> 00:27:34,970
have this yeah but jewnicorn it can't

00:27:33,529 --> 00:27:37,850
surf you know any other type of

00:27:34,970 --> 00:27:41,330
applications here on only Python yeah so

00:27:37,850 --> 00:27:43,669
it's maybe you know you can compare a

00:27:41,330 --> 00:27:46,249
patch with you whiskey because it's you

00:27:43,669 --> 00:27:48,019
know they they're full web service they

00:27:46,249 --> 00:27:51,139
support lot of languages lot of

00:27:48,019 --> 00:27:56,720
technologies and so yeah this is why I

00:27:51,139 --> 00:27:59,090
did it this comparison answer I'm sure

00:27:56,720 --> 00:28:03,909
you can optionally question you Coronel

00:27:59,090 --> 00:28:03,909
track okay thank you max

00:28:08,010 --> 00:28:13,430

YouTube URL: https://www.youtube.com/watch?v=8KHjtd3bJ3U


