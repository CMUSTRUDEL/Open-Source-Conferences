Title: Slavek Kabrda - Red Hat Loves Python
Publication date: 2015-04-18
Playlist: EuroPython 2014
Description: 
	Slavek Kabrda - Red Hat Loves Python
[EuroPython 2014]
[24 July 2014]

Come learn about what Red Hat is doing with Python and the Python community, and how you can benefit from these efforts. Whether it is the new Python versions in Red Hat Enterprise Linux via the new Red Hat Software Collections, compatible Python cartridges in OpenShift Platform-as-a-Service (PaaS), or being the leading contributor to OpenStack, there's a lot going on at Red Hat. We're Pythonistas, too!
Captions: 
	00:00:14,780 --> 00:00:22,130
hi everyone so thanks for the

00:00:17,119 --> 00:00:25,279
introduction so this torque is called

00:00:22,130 --> 00:00:28,460
redhead this unicode character and

00:00:25,279 --> 00:00:30,980
Python I guess you now know what that

00:00:28,460 --> 00:00:36,680
unicode character is that do you all

00:00:30,980 --> 00:00:41,000
know what that unicode character is is

00:00:36,680 --> 00:00:45,739
this so this talk is called Road Atlas

00:00:41,000 --> 00:00:48,050
Python and so during this talk I'd like

00:00:45,739 --> 00:00:50,649
to basically tell you about two

00:00:48,050 --> 00:00:53,659
important things about reddit and Python

00:00:50,649 --> 00:00:56,089
I'd like to tell you we're ready accuses

00:00:53,659 --> 00:00:59,539
Python and 20 learn that we're really

00:00:56,089 --> 00:01:04,040
heavy users of Python in old for all

00:00:59,539 --> 00:01:07,220
kinds of tasks and what is really

00:01:04,040 --> 00:01:10,850
tightly connected to that is how you as

00:01:07,220 --> 00:01:13,280
Python developers can use the upstream

00:01:10,850 --> 00:01:15,500
products or upstream projects that

00:01:13,280 --> 00:01:18,200
redhead contributes to and how you can

00:01:15,500 --> 00:01:20,360
use red head supported products for your

00:01:18,200 --> 00:01:26,119
work for your development deployment and

00:01:20,360 --> 00:01:28,430
so forth so just before I start talking

00:01:26,119 --> 00:01:30,799
about the community central it products

00:01:28,430 --> 00:01:34,670
let me just briefly explain how reddit

00:01:30,799 --> 00:01:37,280
works in case you don't know that so we

00:01:34,670 --> 00:01:41,479
have this kind of moto that says

00:01:37,280 --> 00:01:43,789
upstream first that means that we just

00:01:41,479 --> 00:01:46,369
collaborate with communities all the

00:01:43,789 --> 00:01:49,579
features all the bug fixes go to up

00:01:46,369 --> 00:01:51,500
streams first so we sent all these

00:01:49,579 --> 00:01:53,270
patches we do planning with the

00:01:51,500 --> 00:01:55,640
communities we propose new features to

00:01:53,270 --> 00:01:57,229
communities we make an agreement with

00:01:55,640 --> 00:01:59,929
them and then we send the patches

00:01:57,229 --> 00:02:02,659
basically if we find some bugs or some

00:01:59,929 --> 00:02:06,649
security issues then again we first and

00:02:02,659 --> 00:02:08,720
send them to up streams and so we like

00:02:06,649 --> 00:02:13,910
to make the world a better place like

00:02:08,720 --> 00:02:16,550
this and so at certain points at time we

00:02:13,910 --> 00:02:19,040
just take upstream project and basically

00:02:16,550 --> 00:02:22,010
productize them downstream what that

00:02:19,040 --> 00:02:25,790
means that we do some additional quality

00:02:22,010 --> 00:02:27,350
assurance we do integration testing we

00:02:25,790 --> 00:02:30,360
integrate

00:02:27,350 --> 00:02:33,180
different products or projects together

00:02:30,360 --> 00:02:36,900
so that we make sure that they really

00:02:33,180 --> 00:02:39,300
work well and if we find a back or we

00:02:36,900 --> 00:02:41,520
want to add a new feature then it all

00:02:39,300 --> 00:02:43,860
repeats we go to upstream we send them

00:02:41,520 --> 00:02:51,570
patches we discuss with them and so on

00:02:43,860 --> 00:02:54,210
so forth so starting with what actually

00:02:51,570 --> 00:02:55,590
mate redhead what it is like everyone

00:02:54,210 --> 00:03:00,360
knows redhead for red hat enterprise

00:02:55,590 --> 00:03:03,690
linux right so who doesn't know right at

00:03:00,360 --> 00:03:06,750
enterprise linux okay so we all know

00:03:03,690 --> 00:03:11,070
reddit enterprise linux that's great who

00:03:06,750 --> 00:03:14,520
knows fedora okay so that's almost

00:03:11,070 --> 00:03:17,160
everyone so Fedora is sort of upstream

00:03:14,520 --> 00:03:19,110
for red hat enterprise linux that means

00:03:17,160 --> 00:03:23,730
that all the developments takes place in

00:03:19,110 --> 00:03:25,890
fedora and at certain point at time we

00:03:23,730 --> 00:03:29,580
just take Fedora branch it downstream

00:03:25,890 --> 00:03:31,560
and we do some additional QA and etc etc

00:03:29,580 --> 00:03:36,750
and we create reddit Enterprise Linux

00:03:31,560 --> 00:03:41,670
out of it so as I've said we are heavy

00:03:36,750 --> 00:03:43,710
users of Python so in fedora for example

00:03:41,670 --> 00:03:46,460
we have two parallel Python stacks we

00:03:43,710 --> 00:03:50,160
have Python to stack and Python 3 stack

00:03:46,460 --> 00:03:54,870
currently in the supported releases of

00:03:50,160 --> 00:03:57,450
fedora that's 27 and 33 and so let me

00:03:54,870 --> 00:04:01,230
just briefly skim through what is

00:03:57,450 --> 00:04:05,690
written in Python in fedora so we have

00:04:01,230 --> 00:04:09,540
anaconda which is the system installer

00:04:05,690 --> 00:04:12,450
we have young written in Python which is

00:04:09,540 --> 00:04:15,150
the package manager we have to build

00:04:12,450 --> 00:04:18,150
system coach and copper both written

00:04:15,150 --> 00:04:21,600
entirely in Python and as they're

00:04:18,150 --> 00:04:25,230
building backend for rpms they use smoke

00:04:21,600 --> 00:04:27,150
which is also written in Python this is

00:04:25,230 --> 00:04:30,660
basically smoke is basically a sort of

00:04:27,150 --> 00:04:32,970
change route in its own way and the

00:04:30,660 --> 00:04:34,350
whole Fedora community like it uses

00:04:32,970 --> 00:04:38,550
Python for pretty much the whole

00:04:34,350 --> 00:04:39,849
infrastructure so like if Python

00:04:38,550 --> 00:04:42,819
disappears tomorrow

00:04:39,849 --> 00:04:45,339
there's basically no fedora you can't

00:04:42,819 --> 00:04:49,809
install it you can't install packages we

00:04:45,339 --> 00:04:54,729
can build packages we can't live without

00:04:49,809 --> 00:04:56,679
Python really and I'm proud that I'm

00:04:54,729 --> 00:04:58,330
Python list you know and that i can say

00:04:56,679 --> 00:05:04,149
that my distribution can't live without

00:04:58,330 --> 00:05:07,659
biting it's it's so important and so one

00:05:04,149 --> 00:05:10,509
of our plans obviously is to make Python

00:05:07,659 --> 00:05:16,089
3 a default well not obviously but it is

00:05:10,509 --> 00:05:18,189
a plan I obviously honestly think think

00:05:16,089 --> 00:05:20,919
that Python 3 is better as a language

00:05:18,189 --> 00:05:23,860
but like we can keep that to some you

00:05:20,919 --> 00:05:25,360
know corridor discussion something so

00:05:23,860 --> 00:05:30,219
hopefully we'll be switching to python 3

00:05:25,360 --> 00:05:32,319
as default in federal 22 so Fedora is is

00:05:30,219 --> 00:05:35,259
a rapidly moving clinics distributions

00:05:32,319 --> 00:05:39,399
we basically make releases every half a

00:05:35,259 --> 00:05:42,240
year it goes forward you know it's it's

00:05:39,399 --> 00:05:45,669
really everything is really rapid and

00:05:42,240 --> 00:05:47,469
basically ready to enterprise linux that

00:05:45,669 --> 00:05:51,999
is made out of Fedora is quite the

00:05:47,469 --> 00:05:55,149
opposite it's real it really moves slow

00:05:51,999 --> 00:05:59,289
it has very long support cycle it's very

00:05:55,149 --> 00:06:00,519
stable it's very secure which can be a

00:05:59,289 --> 00:06:02,680
good thing if you have an application

00:06:00,519 --> 00:06:06,369
that you need to run for like I don't

00:06:02,680 --> 00:06:10,269
know 10 or 15 years but it's not that

00:06:06,369 --> 00:06:13,779
optimal if you want to move forward you

00:06:10,269 --> 00:06:18,159
know and we fall we've also come up with

00:06:13,779 --> 00:06:21,099
a mechanism to allow people to run this

00:06:18,159 --> 00:06:23,889
super stable system but you also go

00:06:21,099 --> 00:06:25,869
forward you know to follow upstream

00:06:23,889 --> 00:06:29,229
provide new versions of Python and

00:06:25,869 --> 00:06:32,139
databases I will be talking about it so

00:06:29,229 --> 00:06:35,219
we currently have three supported

00:06:32,139 --> 00:06:40,179
releases of red hat enterprise linux

00:06:35,219 --> 00:06:43,599
shortly rel it's five six and seven they

00:06:40,179 --> 00:06:45,429
have these spies inversions and maybe

00:06:43,599 --> 00:06:47,860
sometime in the future we will also

00:06:45,429 --> 00:06:50,469
release rel eight

00:06:47,860 --> 00:06:54,280
and so I guess you can sort of

00:06:50,469 --> 00:06:56,830
extrapolate from these years like when

00:06:54,280 --> 00:07:01,199
that might be but you can't really

00:06:56,830 --> 00:07:01,199
extrapolate the Python version right I

00:07:01,289 --> 00:07:10,150
personally am sincerely honestly hoping

00:07:05,400 --> 00:07:12,189
that it will be Python 3 but you know

00:07:10,150 --> 00:07:14,949
there are lots of stakeholders big

00:07:12,189 --> 00:07:17,050
companies big players we'll see about

00:07:14,949 --> 00:07:24,460
that who would like to see Python 3 in

00:07:17,050 --> 00:07:29,830
row light applause for you I like that

00:07:24,460 --> 00:07:32,379
thank you so a minute ago I've said that

00:07:29,830 --> 00:07:34,349
rel is a really slowly moving target

00:07:32,379 --> 00:07:36,909
it's very stable it doesn't change

00:07:34,349 --> 00:07:40,360
basically doesn't change versions once

00:07:36,909 --> 00:07:42,490
we place Python 2 dot 606 we will never

00:07:40,360 --> 00:07:44,379
update that you'll keep with Python 26

00:07:42,490 --> 00:07:49,629
forever basically as long as throughout

00:07:44,379 --> 00:07:51,189
6 list so what we came up with is a

00:07:49,629 --> 00:07:53,379
technology that's called software

00:07:51,189 --> 00:07:55,860
collections and we're building few of

00:07:53,379 --> 00:07:58,300
our products on top of this technology

00:07:55,860 --> 00:08:01,569
software collections are basically an

00:07:58,300 --> 00:08:05,440
RPM way of providing multiple versions

00:08:01,569 --> 00:08:08,589
of basically any type of software on top

00:08:05,440 --> 00:08:11,020
of RPM based distribution that includes

00:08:08,589 --> 00:08:12,940
fedora that includes reddit Enterprise

00:08:11,020 --> 00:08:15,580
Linux and sent to us I will be talking

00:08:12,940 --> 00:08:19,240
about sent to us in few minutes if you

00:08:15,580 --> 00:08:21,520
don't know what that is so software

00:08:19,240 --> 00:08:24,610
collections are in general RPM based

00:08:21,520 --> 00:08:26,229
technology we have sort of upstream for

00:08:24,610 --> 00:08:32,440
them that is called software collections

00:08:26,229 --> 00:08:35,260
to torque and if I usually if I talk to

00:08:32,440 --> 00:08:38,159
pythoness and they ask me so what

00:08:35,260 --> 00:08:41,589
software collections are I usually say

00:08:38,159 --> 00:08:44,290
it's a system-wide Virtual Earth based

00:08:41,589 --> 00:08:47,470
on RPM that's pretty much it these are

00:08:44,290 --> 00:08:50,110
just packages that installs somewhere

00:08:47,470 --> 00:08:52,630
under / opt and they have new versions

00:08:50,110 --> 00:08:55,810
of not only by thing extension packages

00:08:52,630 --> 00:08:58,720
but actually the interpreter itself so

00:08:55,810 --> 00:09:01,030
we can provide in this way you can have

00:08:58,720 --> 00:09:04,450
Python 33 on top of

00:09:01,030 --> 00:09:08,140
Red Hat Enterprise Linux five or six or

00:09:04,450 --> 00:09:10,360
something like that so and the way you

00:09:08,140 --> 00:09:14,620
use software collections is basically

00:09:10,360 --> 00:09:17,080
that you run SEL enable Python just the

00:09:14,620 --> 00:09:19,600
name of the collection bash instead of

00:09:17,080 --> 00:09:23,910
source then activate so that's pretty

00:09:19,600 --> 00:09:26,680
much it about software collections so

00:09:23,910 --> 00:09:28,210
for red hat enterprise linux we have a

00:09:26,680 --> 00:09:31,540
product that is called predator flare

00:09:28,210 --> 00:09:34,120
collections we first released it last

00:09:31,540 --> 00:09:37,450
year and it basically brings fresh

00:09:34,120 --> 00:09:39,370
versions of various useful developer and

00:09:37,450 --> 00:09:43,510
sis admin tools on top of route 6 and

00:09:39,370 --> 00:09:45,430
now also on top of 407 so what's most

00:09:43,510 --> 00:09:49,120
interesting here is that we have Python

00:09:45,430 --> 00:09:51,540
27 and Python 33 so you know because

00:09:49,120 --> 00:09:54,400
like I'm a morel python maintainer and

00:09:51,540 --> 00:09:58,000
people from community have been coming

00:09:54,400 --> 00:09:59,770
to me and saying redhead is the only

00:09:58,000 --> 00:10:03,910
thing there is really preventing us from

00:09:59,770 --> 00:10:06,610
moving to python 3 and i was always like

00:10:03,910 --> 00:10:09,220
sorry i can't do anything about it well

00:10:06,610 --> 00:10:12,340
now i can and i did it and it works

00:10:09,220 --> 00:10:14,950
great so reddit software collections are

00:10:12,340 --> 00:10:17,280
basically a product that is installable

00:10:14,950 --> 00:10:20,410
on top of your system it doesn't replace

00:10:17,280 --> 00:10:23,140
your base system versions like if you

00:10:20,410 --> 00:10:25,870
have row 6 you will still have your

00:10:23,140 --> 00:10:27,970
bison 26 that is in the system and on

00:10:25,870 --> 00:10:31,480
top of that you can get Python 27 or

00:10:27,970 --> 00:10:34,810
Python 2 330 Python 33 and you can also

00:10:31,480 --> 00:10:37,870
have one of these other components that

00:10:34,810 --> 00:10:41,860
are listed on the slide and the good

00:10:37,870 --> 00:10:43,840
thing about it is that it just perks it

00:10:41,860 --> 00:10:45,640
just does so redhead software

00:10:43,840 --> 00:10:48,280
collections are obviously a product for

00:10:45,640 --> 00:10:50,590
reddit Enterprise Linux and they are

00:10:48,280 --> 00:10:54,340
designed in a way that they move like

00:10:50,590 --> 00:10:56,830
faster than the system itself now if you

00:10:54,340 --> 00:11:00,010
for example take fedora which itself is

00:10:56,830 --> 00:11:02,950
moving very fast then for fedora it

00:11:00,010 --> 00:11:04,840
perhaps makes sense to create like

00:11:02,950 --> 00:11:07,720
communities software collections that

00:11:04,840 --> 00:11:10,000
actually move slower than the system so

00:11:07,720 --> 00:11:12,690
that you can create more stable software

00:11:10,000 --> 00:11:15,660
on top of fedora so the

00:11:12,690 --> 00:11:17,310
immunity does build some software

00:11:15,660 --> 00:11:19,020
collections like I know they've been

00:11:17,310 --> 00:11:22,020
building kruba collections for fedora

00:11:19,020 --> 00:11:23,580
and stuff like that so this is really

00:11:22,020 --> 00:11:27,860
general technology you can build your

00:11:23,580 --> 00:11:34,130
own collections and it just works so

00:11:27,860 --> 00:11:36,870
another thing that redhead does is cloud

00:11:34,130 --> 00:11:38,580
I've been advised to say the word cloud

00:11:36,870 --> 00:11:41,940
at least 10 times during the

00:11:38,580 --> 00:11:44,190
presentation because like you know in

00:11:41,940 --> 00:11:46,200
the past like two years ago when i was

00:11:44,190 --> 00:11:48,180
giving presentations I just said cloud

00:11:46,200 --> 00:11:51,900
once and everyone was like what did he

00:11:48,180 --> 00:11:54,690
say go out right right now these days

00:11:51,900 --> 00:11:57,240
you have to say it at least ten times so

00:11:54,690 --> 00:11:59,820
that people would actually listen so

00:11:57,240 --> 00:12:04,950
it's not not easy at all but we have a

00:11:59,820 --> 00:12:09,030
lot of cloud we have OpenStack who knows

00:12:04,950 --> 00:12:11,250
OpenStack okay who doesn't know what

00:12:09,030 --> 00:12:13,370
OpenStack is okay so there are some

00:12:11,250 --> 00:12:15,410
people who don't know what OpenStack is

00:12:13,370 --> 00:12:17,280
OpenStack is an

00:12:15,410 --> 00:12:20,340
infrastructure-as-a-service type of

00:12:17,280 --> 00:12:24,000
cloud it's basically a huge upstream

00:12:20,340 --> 00:12:26,640
project or more likely a set of api's

00:12:24,000 --> 00:12:30,770
that happen to have an implementation as

00:12:26,640 --> 00:12:36,300
a huge upstream open source project and

00:12:30,770 --> 00:12:38,930
so it's as some people talk about it as

00:12:36,300 --> 00:12:41,610
the next Linux there's so much

00:12:38,930 --> 00:12:44,520
contributors to to this project right at

00:12:41,610 --> 00:12:46,260
is there HP is there dell is there like

00:12:44,520 --> 00:12:49,650
lots of huge company is contributing to

00:12:46,260 --> 00:12:51,360
OpenStack and all of them think that

00:12:49,650 --> 00:12:53,490
this is really the future of cloud

00:12:51,360 --> 00:12:56,870
computing of the infrastructure as a

00:12:53,490 --> 00:12:58,890
service type of cloud computing so

00:12:56,870 --> 00:13:01,290
reddit has been the number one

00:12:58,890 --> 00:13:06,690
contributors to the two to the last two

00:13:01,290 --> 00:13:08,520
releases of OpenStack and so we

00:13:06,690 --> 00:13:11,820
contribute a lot to that and of course

00:13:08,520 --> 00:13:15,180
we also take that downstream and product

00:13:11,820 --> 00:13:17,160
eyes that and we have what we call right

00:13:15,180 --> 00:13:19,110
at Enterprise Linux OpenStack platform

00:13:17,160 --> 00:13:22,920
which is basically red hat enterprise

00:13:19,110 --> 00:13:26,279
linux with OpenStack packages so you can

00:13:22,920 --> 00:13:28,589
like basically you can type yum install

00:13:26,279 --> 00:13:35,160
OpenStack and it just installs opens

00:13:28,589 --> 00:13:37,410
taken that's that's it so this this type

00:13:35,160 --> 00:13:39,300
of cloud is not real a useful for

00:13:37,410 --> 00:13:42,750
programmers right it's just like it

00:13:39,300 --> 00:13:44,699
provides virtual machines and okay

00:13:42,750 --> 00:13:48,110
virtual machines are nice but what

00:13:44,699 --> 00:13:48,110
programmers really want is

00:13:48,199 --> 00:13:54,660
platform-as-a-service cloud right we

00:13:51,180 --> 00:13:57,690
want if we if you're creating a web

00:13:54,660 --> 00:14:01,110
based application we just want the cloud

00:13:57,690 --> 00:14:04,410
to set up the environment for us so that

00:14:01,110 --> 00:14:06,180
we wouldn't need to care right we don't

00:14:04,410 --> 00:14:07,560
we don't want to care about databases we

00:14:06,180 --> 00:14:11,010
don't want to care about deployment we

00:14:07,560 --> 00:14:13,500
just want to code and then you get push

00:14:11,010 --> 00:14:18,120
and let the cloud take care of

00:14:13,500 --> 00:14:21,300
everything else so for that there is

00:14:18,120 --> 00:14:24,570
another open source project that is

00:14:21,300 --> 00:14:29,790
called open shift it's written in Ruby

00:14:24,570 --> 00:14:31,709
sorry so platform-as-a-service cloud is

00:14:29,790 --> 00:14:33,420
really what I just explained it

00:14:31,709 --> 00:14:35,610
basically provides some sort of

00:14:33,420 --> 00:14:37,380
environment for your application so that

00:14:35,610 --> 00:14:42,720
you can just push your source code there

00:14:37,380 --> 00:14:46,470
and it would just run open shift works

00:14:42,720 --> 00:14:48,269
in a way that it has like there are like

00:14:46,470 --> 00:14:49,949
two important terms that one needs to

00:14:48,269 --> 00:14:53,720
understand to understand open shift

00:14:49,949 --> 00:14:59,339
there are gears and there are cartridges

00:14:53,720 --> 00:15:03,690
gears are basically containers like not

00:14:59,339 --> 00:15:05,760
necessarily in the docker sense of

00:15:03,690 --> 00:15:08,730
containers but these are just like

00:15:05,760 --> 00:15:13,529
isolated runtime units that provide you

00:15:08,730 --> 00:15:16,500
some processor cycles some memory some

00:15:13,529 --> 00:15:18,769
storage and then you have cartridges

00:15:16,500 --> 00:15:23,880
which are basically languages or

00:15:18,769 --> 00:15:28,380
services so for example an open shift

00:15:23,880 --> 00:15:31,019
online which is like an open redhead

00:15:28,380 --> 00:15:33,870
provided instance of open shift you have

00:15:31,019 --> 00:15:35,560
cartridges for Python 26 Python 27 and

00:15:33,870 --> 00:15:38,470
Python 33

00:15:35,560 --> 00:15:40,000
so the way it works is that you register

00:15:38,470 --> 00:15:43,390
your application you can even do that

00:15:40,000 --> 00:15:45,640
for free and open chief calm so you're

00:15:43,390 --> 00:15:47,470
so you register your application and

00:15:45,640 --> 00:15:50,710
she'll get like I don't know two or

00:15:47,470 --> 00:15:53,230
three years and you say I own this gear

00:15:50,710 --> 00:15:57,850
to contain Python 33 and I want this

00:15:53,230 --> 00:16:00,040
second gear to contain MongoDB so the

00:15:57,850 --> 00:16:02,529
cloud will create this for you and then

00:16:00,040 --> 00:16:08,860
you just push your application there and

00:16:02,529 --> 00:16:10,839
it just works so openshift really does

00:16:08,860 --> 00:16:13,150
this in a very good way and it also has

00:16:10,839 --> 00:16:15,070
like prepared environment for jingle

00:16:13,150 --> 00:16:19,390
based application you can actually use

00:16:15,070 --> 00:16:23,800
any web framework in open shift but the

00:16:19,390 --> 00:16:25,420
jingle type of applications is supported

00:16:23,800 --> 00:16:27,760
out of the box you don't have to do any

00:16:25,420 --> 00:16:32,110
additional setup by yourself it just

00:16:27,760 --> 00:16:35,290
works so we have what we call openshift

00:16:32,110 --> 00:16:38,890
online which is what you can see when

00:16:35,290 --> 00:16:41,380
you go to open shaved calm and if you

00:16:38,890 --> 00:16:44,020
actually want to run this in your data

00:16:41,380 --> 00:16:46,060
center you can also get open shift by

00:16:44,020 --> 00:16:48,310
redhead or it's also called openshift

00:16:46,060 --> 00:16:49,930
enterprise so you can basically deploy

00:16:48,310 --> 00:16:52,690
this in your data center and have your

00:16:49,930 --> 00:16:59,770
own platform as a service cloud so how

00:16:52,690 --> 00:17:04,300
cool is that now you can really combine

00:16:59,770 --> 00:17:07,870
all redhead technologies in basically

00:17:04,300 --> 00:17:12,069
any ways you can think of so you can

00:17:07,870 --> 00:17:13,480
like have open shaped that uses redhead

00:17:12,069 --> 00:17:15,910
software collections for some of its

00:17:13,480 --> 00:17:21,160
cartridges you can run it on OpenStack

00:17:15,910 --> 00:17:25,079
which runs on top of rel and just what I

00:17:21,160 --> 00:17:28,000
I guess what i want to say here is that

00:17:25,079 --> 00:17:31,300
nothing of this would be doable without

00:17:28,000 --> 00:17:33,790
Python right it's basically python is

00:17:31,300 --> 00:17:36,400
throughout the whole stack no matter

00:17:33,790 --> 00:17:43,330
what you want to do or just it's just

00:17:36,400 --> 00:17:45,310
there it's everywhere so I I just said

00:17:43,330 --> 00:17:47,500
that open shift online uses ready

00:17:45,310 --> 00:17:48,480
software collections for some of its

00:17:47,500 --> 00:17:51,990
cartridges

00:17:48,480 --> 00:17:54,120
so what that means is that you can

00:17:51,990 --> 00:17:56,669
reproduce the same environment that you

00:17:54,120 --> 00:17:59,700
have in clouds on your rel six or a

00:17:56,669 --> 00:18:01,830
seven system just quite cool for

00:17:59,700 --> 00:18:04,200
developers become because you can get

00:18:01,830 --> 00:18:05,820
around six or l7 on your development

00:18:04,200 --> 00:18:07,650
machine you can get registered for

00:18:05,820 --> 00:18:10,610
collections which you basically get for

00:18:07,650 --> 00:18:13,710
free with reddit enterprise linux and

00:18:10,610 --> 00:18:15,900
you can just start coding then push your

00:18:13,710 --> 00:18:19,650
code to the cloud and everything just

00:18:15,900 --> 00:18:22,440
works so doing this you can get your

00:18:19,650 --> 00:18:27,770
applications running for free in cloud

00:18:22,440 --> 00:18:27,770
and matter of like few hours basically

00:18:29,450 --> 00:18:39,390
and of course that's not all like reddit

00:18:35,400 --> 00:18:42,600
uses internally and externally lots of

00:18:39,390 --> 00:18:45,330
other upstream python-based projects or

00:18:42,600 --> 00:18:48,929
projects that rely heavily on python so

00:18:45,330 --> 00:18:50,820
for example what we use be we use beaker

00:18:48,929 --> 00:18:54,059
which is used for hardware integration

00:18:50,820 --> 00:18:57,870
testing we use spout which is software

00:18:54,059 --> 00:19:01,080
repository management this is like kind

00:18:57,870 --> 00:19:03,900
of you can create a server that

00:19:01,080 --> 00:19:06,780
basically will serve all your machines

00:19:03,900 --> 00:19:10,020
in your data center with yum updates so

00:19:06,780 --> 00:19:12,150
you like if you want to do security

00:19:10,020 --> 00:19:14,549
updates of all of your machines in your

00:19:12,150 --> 00:19:16,260
data center you don't need to like

00:19:14,549 --> 00:19:18,330
download the package 100 times you just

00:19:16,260 --> 00:19:22,080
download it once to your pop server and

00:19:18,330 --> 00:19:26,760
it distributes the updates to all the

00:19:22,080 --> 00:19:29,520
machines all written in Python we are

00:19:26,760 --> 00:19:31,100
also i have a contributor to gloucester

00:19:29,520 --> 00:19:33,960
FS which is a distributed file system

00:19:31,100 --> 00:19:36,720
which itself is not written in python

00:19:33,960 --> 00:19:40,580
but really uses python for lots of it's

00:19:36,720 --> 00:19:43,110
like utilities around the core itself

00:19:40,580 --> 00:19:46,320
federer infrastructure for example is

00:19:43,110 --> 00:19:47,910
the heavy user of ansible which is an

00:19:46,320 --> 00:19:51,270
automation tool for system means

00:19:47,910 --> 00:19:55,260
basically you can say like I have a

00:19:51,270 --> 00:19:57,210
basically a recipe that describes how a

00:19:55,260 --> 00:19:59,549
system should be created and booted up

00:19:57,210 --> 00:20:00,540
and you just pass it to uncibal and it

00:19:59,549 --> 00:20:03,240
just does the stuff for

00:20:00,540 --> 00:20:05,460
you and we also have quite a fresh

00:20:03,240 --> 00:20:08,250
project called the assistant which is

00:20:05,460 --> 00:20:11,070
like my pet project so I just had to

00:20:08,250 --> 00:20:13,830
write it there although it's like a bit

00:20:11,070 --> 00:20:17,160
smaller than the others but it's

00:20:13,830 --> 00:20:19,020
supposed to be what ansible is for Cesar

00:20:17,160 --> 00:20:21,600
means the assistant is supposed to be

00:20:19,020 --> 00:20:24,360
the same for developers also entirely

00:20:21,600 --> 00:20:26,550
written in Python so basically you write

00:20:24,360 --> 00:20:29,730
some recipes how let's say a project

00:20:26,550 --> 00:20:32,010
should be created and you give it to

00:20:29,730 --> 00:20:35,580
someone else and he can just create the

00:20:32,010 --> 00:20:42,120
project the way you create it the recipe

00:20:35,580 --> 00:20:46,770
so kind of like this and I promised I

00:20:42,120 --> 00:20:49,140
will also speak about Center Wes so

00:20:46,770 --> 00:20:51,810
there has been some confusion about what

00:20:49,140 --> 00:20:55,200
Centaurus actually is did you do people

00:20:51,810 --> 00:20:57,600
know what Center us does or how it like

00:20:55,200 --> 00:21:02,900
comes to being or do you know anything

00:20:57,600 --> 00:21:05,430
about center of us who knows who doesn't

00:21:02,900 --> 00:21:08,190
okay so there are some people who don't

00:21:05,430 --> 00:21:09,690
so Center Wes basically is a community

00:21:08,190 --> 00:21:13,740
rebuilt of red hat enterprise linux

00:21:09,690 --> 00:21:16,650
sources what that means is we have

00:21:13,740 --> 00:21:18,210
fedora which is moving fast forward we

00:21:16,650 --> 00:21:21,390
are pharrell which is very stable and

00:21:18,210 --> 00:21:23,340
some people thought okay we need

00:21:21,390 --> 00:21:25,980
something that people don't have to pay

00:21:23,340 --> 00:21:29,220
for but it is also stable and it's like

00:21:25,980 --> 00:21:32,820
rel so people from centaurs community

00:21:29,220 --> 00:21:34,920
just basically take rel sources and

00:21:32,820 --> 00:21:38,400
rebuild them and provide them for free

00:21:34,920 --> 00:21:40,140
just like okay so you can get like Ralph

00:21:38,400 --> 00:21:42,600
for free you don't get ready at support

00:21:40,140 --> 00:21:45,390
with that but can be good for testing or

00:21:42,600 --> 00:21:47,130
something like that so and the way I

00:21:45,390 --> 00:21:49,590
like to talk about it is that it's

00:21:47,130 --> 00:21:52,530
community platform to run community

00:21:49,590 --> 00:21:55,410
projects so like you can get it for free

00:21:52,530 --> 00:21:59,010
and it's not moving forward as fast as

00:21:55,410 --> 00:22:03,140
fedora so people from like this big

00:21:59,010 --> 00:22:06,420
projects like Rdio which is basically

00:22:03,140 --> 00:22:08,010
OpenStack packaging project so that you

00:22:06,420 --> 00:22:10,470
can install OpenStack easily on

00:22:08,010 --> 00:22:12,300
downstream distributions or gosto FS

00:22:10,470 --> 00:22:13,779
like to use centaurs for their

00:22:12,300 --> 00:22:15,669
development because it's very

00:22:13,779 --> 00:22:20,679
stable and their environment is not

00:22:15,669 --> 00:22:23,979
changing so rapidly so this is pretty

00:22:20,679 --> 00:22:25,659
much everything from me the I guess that

00:22:23,979 --> 00:22:28,929
the whole message that I'm trying to

00:22:25,659 --> 00:22:32,259
send here is that redhead is really

00:22:28,929 --> 00:22:38,519
grateful to people in communities that

00:22:32,259 --> 00:22:42,279
make all of this all of this possible so

00:22:38,519 --> 00:22:44,229
really if if there is an applause at the

00:22:42,279 --> 00:22:47,229
end of this presentation and I hope it

00:22:44,229 --> 00:22:48,999
is it really goes to you people who work

00:22:47,229 --> 00:22:52,320
in communities and make this all

00:22:48,999 --> 00:22:52,320
possible so thank

00:22:56,269 --> 00:23:02,690
and I think we've got time just for

00:22:59,239 --> 00:23:08,239
maybe one question young wants to ask a

00:23:02,690 --> 00:23:09,889
question no one cable okay so if you

00:23:08,239 --> 00:23:14,229
have if you think of anything just

00:23:09,889 --> 00:23:17,229
approach me somewhere just ask away hey

00:23:14,229 --> 00:23:17,229

YouTube URL: https://www.youtube.com/watch?v=hU3vEGwzQsQ


