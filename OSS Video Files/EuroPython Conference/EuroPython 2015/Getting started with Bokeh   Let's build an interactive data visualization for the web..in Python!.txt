Title: Getting started with Bokeh   Let's build an interactive data visualization for the web..in Python!
Publication date: 2015-08-08
Playlist: EuroPython 2015
Description: 
	Sarah Bird - Getting started with Bokeh / Let's build an interactive data visualization for the web..in Python!
[EuroPython 2015]
[20 July 2015]
[Bilbao, Euskadi, Spain]

Slides: [birdsarah.github.io/europython-2015-bokeh][1]

As a web developer, I find myself being asked to make increasing
numbers of data visualizations, interactive infographics, and more.
d3.js is great, as are many other javascript toolkits that are out
there. But if I can write more Python and less JavaScript... well,
that makes me happy!

Bokeh is a new Python library for interactive visualization. Its
origins are in the data science community, but it has a lot to offer
web developers. In this mini-tutorial, I'll run through how to build a
data visualization in Bokeh and how to hook it into your web
application. This will be a real-world example, that was previously
built in d3.js.

Along the way, I'll provide tips and tricks that I've discovered in my
experience including how Bokeh works wonderfully with the iPython
notebook which I use to prototype my visualizations, and many data
science people use as their native way to explore data.

For those of you who already know a little Bokeh, I'll be covering the
new "actions framework" that lets you write JS callbacks in your
python code so you can do lots of interactions all on the client side.

[1]: http://birdsarah.github.io/europython-2015-bokeh/
Captions: 
	00:00:53,900 --> 00:00:55,960
you

00:02:11,700 --> 00:02:13,760
you

00:02:20,760 --> 00:02:22,819
you

00:05:05,430 --> 00:05:07,490
you

00:06:12,640 --> 00:06:18,530
is going to be talking about 315 about

00:06:16,490 --> 00:06:20,270
really diving in to interact the

00:06:18,530 --> 00:06:22,190
interactive component and building

00:06:20,270 --> 00:06:24,410
building sort of bouquet okay dashboards

00:06:22,190 --> 00:06:28,550
and stuff so be a really great segue

00:06:24,410 --> 00:06:31,430
this afternoon so data at the heart of

00:06:28,550 --> 00:06:34,970
bouquet is the model the column data

00:06:31,430 --> 00:06:36,620
source and it's very simple it's just a

00:06:34,970 --> 00:06:43,760
table of data just like you might expect

00:06:36,620 --> 00:06:45,950
and so that's not a good sign okay so we

00:06:43,760 --> 00:06:49,960
have a we take a data dictionary in

00:06:45,950 --> 00:06:54,440
Python a normal dictionary keys array

00:06:49,960 --> 00:06:57,890
and we also how many people here have

00:06:54,440 --> 00:07:00,560
worked with pandas okay almost everybody

00:06:57,890 --> 00:07:03,050
if you haven't work with pandas it's

00:07:00,560 --> 00:07:06,560
fine it's a lot like Excel but way

00:07:03,050 --> 00:07:09,590
better in Python and it's not a lot like

00:07:06,560 --> 00:07:11,480
it's a little change your life but you

00:07:09,590 --> 00:07:12,710
can the core of it is you can pass it a

00:07:11,480 --> 00:07:15,680
dictionary and you get out a table of

00:07:12,710 --> 00:07:17,660
data and there's lots of other ways you

00:07:15,680 --> 00:07:20,630
can do you can read from excel from JSON

00:07:17,660 --> 00:07:23,420
from CSV and so on if you haven't used

00:07:20,630 --> 00:07:25,970
used pandas before I would totally

00:07:23,420 --> 00:07:28,940
recommend Brandon Rhodes panda's

00:07:25,970 --> 00:07:30,800
tutorial from Python 2015 it was it's it

00:07:28,940 --> 00:07:33,470
really boils down like how to really

00:07:30,800 --> 00:07:35,510
just understand it but keeps it a nice a

00:07:33,470 --> 00:07:38,180
nice simple level and so you can make

00:07:35,510 --> 00:07:40,070
your column data source from either a

00:07:38,180 --> 00:07:43,370
dictionary or from a panda's data frame

00:07:40,070 --> 00:07:45,530
and and your your data ends up

00:07:43,370 --> 00:07:48,350
represented like that and you'll notice

00:07:45,530 --> 00:07:49,850
the one difference between my when I

00:07:48,350 --> 00:07:52,250
passed in my dictionary and when my past

00:07:49,850 --> 00:07:55,730
in my data frame is that I've I've got

00:07:52,250 --> 00:07:58,550
this extra this extra key value here the

00:07:55,730 --> 00:08:00,470
index the index has come from has come

00:07:58,550 --> 00:08:03,860
from the pandas has come from the pandas

00:08:00,470 --> 00:08:06,380
dataframe it's it's this left index here

00:08:03,860 --> 00:08:10,640
that it's it's named index for us so

00:08:06,380 --> 00:08:12,320
that is the column data source the next

00:08:10,640 --> 00:08:15,470
thing that's at the heart of bouquet is

00:08:12,320 --> 00:08:18,260
the plot and I'm skirting over some

00:08:15,470 --> 00:08:19,910
details here because I don't I don't

00:08:18,260 --> 00:08:20,860
think they're that important there are

00:08:19,910 --> 00:08:24,009
sort of there's

00:08:20,860 --> 00:08:25,629
models plotting charts these three

00:08:24,009 --> 00:08:28,539
different ways to kind of use bouquet

00:08:25,629 --> 00:08:30,849
but they have a lot in common and your

00:08:28,539 --> 00:08:33,849
you should find it pretty easy to jump

00:08:30,849 --> 00:08:35,200
between the three sort of levels but I

00:08:33,849 --> 00:08:36,610
think it can be a bit confusing knowing

00:08:35,200 --> 00:08:37,750
exactly what to do from the get-go which

00:08:36,610 --> 00:08:40,209
is why I'm trying to sort of show you

00:08:37,750 --> 00:08:43,899
all three so at the lowest level we have

00:08:40,209 --> 00:08:46,839
the plot the plot object the next level

00:08:43,899 --> 00:08:50,019
up we have the figure and finally we

00:08:46,839 --> 00:08:51,190
have the charts they're all different

00:08:50,019 --> 00:08:52,779
things they come from different modules

00:08:51,190 --> 00:08:54,760
within bouquet but they you're going to

00:08:52,779 --> 00:08:56,380
see they all have the same kind of

00:08:54,760 --> 00:08:58,240
attributes attached to them like a tool

00:08:56,380 --> 00:09:00,190
bar location background fill and so on

00:08:58,240 --> 00:09:01,899
so once you're working with one you can

00:09:00,190 --> 00:09:03,310
kind of reasonably assume that the other

00:09:01,899 --> 00:09:05,350
one's going to kind of behave similar

00:09:03,310 --> 00:09:08,649
and they all have three really important

00:09:05,350 --> 00:09:11,980
methods on them add tools add layout and

00:09:08,649 --> 00:09:13,360
add glyph and and if you can remember

00:09:11,980 --> 00:09:14,829
those three methods you're going to get

00:09:13,360 --> 00:09:20,620
a really long way into building all of

00:09:14,829 --> 00:09:24,190
your into all of your plots so here you

00:09:20,620 --> 00:09:26,470
say no one's eclipse okay glyphs

00:09:24,190 --> 00:09:27,760
to me the word means nothing I was so

00:09:26,470 --> 00:09:31,300
confused for a long time

00:09:27,760 --> 00:09:32,500
it just means shapes and I don't know

00:09:31,300 --> 00:09:35,949
why it's called glyphs I'm sure there's

00:09:32,500 --> 00:09:37,930
some very very logical reason but glyphs

00:09:35,949 --> 00:09:39,519
are just shapes and so this is this is

00:09:37,930 --> 00:09:41,230
actually from the examples and these are

00:09:39,519 --> 00:09:44,140
all of the different kinds of shapes

00:09:41,230 --> 00:09:46,000
that you can spell with in boquete and

00:09:44,140 --> 00:09:47,769
in some combination of all of these as a

00:09:46,000 --> 00:09:49,329
whole nother set here in some kind of

00:09:47,769 --> 00:09:50,920
combination of all of these things you

00:09:49,329 --> 00:09:54,339
can make pretty much anything that you

00:09:50,920 --> 00:09:55,750
could think of if you couldn't we I'm

00:09:54,339 --> 00:09:57,910
sure we would add another one but we

00:09:55,750 --> 00:10:03,339
really have got most most things covered

00:09:57,910 --> 00:10:04,930
here so glyphs are just shapes so we're

00:10:03,339 --> 00:10:09,790
building a dashboard we've talked about

00:10:04,930 --> 00:10:11,260
data let's talk about charts but i keep

00:10:09,790 --> 00:10:15,550
going on about this models plotting

00:10:11,260 --> 00:10:16,930
charts thing and i want to just lay it

00:10:15,550 --> 00:10:20,019
out a little bit more so there's these

00:10:16,930 --> 00:10:21,610
three modules bouquet top models bouquet

00:10:20,019 --> 00:10:22,959
top plotting and bouquet top charts

00:10:21,610 --> 00:10:25,300
bouquet top models is the lowest level

00:10:22,959 --> 00:10:26,529
of bouquet but it doesn't mean it's a

00:10:25,300 --> 00:10:27,940
level you should be afraid of it's an

00:10:26,529 --> 00:10:32,230
awesome level i love to live in the

00:10:27,940 --> 00:10:33,960
models level everything above it is is

00:10:32,230 --> 00:10:36,660
built on top of models

00:10:33,960 --> 00:10:37,620
so offers you the most control but it

00:10:36,660 --> 00:10:40,110
does mean you have to do all the work

00:10:37,620 --> 00:10:41,820
yourselves on the complete opposite end

00:10:40,110 --> 00:10:44,580
you have broke a lot charts

00:10:41,820 --> 00:10:46,380
these are one-line functions that let

00:10:44,580 --> 00:10:49,290
you spit out a bar chart spit out a line

00:10:46,380 --> 00:10:51,300
chart spit out a horizon chart it just

00:10:49,290 --> 00:10:52,920
takes your data frame and and gives you

00:10:51,300 --> 00:10:56,910
something awesome so it's very very

00:10:52,920 --> 00:10:57,720
quick to use but it sort of does all the

00:10:56,910 --> 00:10:59,580
magic for you

00:10:57,720 --> 00:11:02,970
bokade are plotting kind of lives in the

00:10:59,580 --> 00:11:05,340
middle and you have to sort of organize

00:11:02,970 --> 00:11:06,780
your data for it but it then tries to

00:11:05,340 --> 00:11:08,580
pick sensible defaults so you don't have

00:11:06,780 --> 00:11:09,810
to add the axes and add the grid and so

00:11:08,580 --> 00:11:11,160
on so it tries to sort of give you

00:11:09,810 --> 00:11:14,100
something you want but it gives you a

00:11:11,160 --> 00:11:16,110
bit more control where you want to work

00:11:14,100 --> 00:11:18,570
is is really a matter of personal taste

00:11:16,110 --> 00:11:21,210
personally coming from a web world I

00:11:18,570 --> 00:11:23,190
started with charts and charts for me

00:11:21,210 --> 00:11:24,270
were a gateway to models but I think a

00:11:23,190 --> 00:11:28,290
lot of people coming from the data

00:11:24,270 --> 00:11:30,150
science the data science world find

00:11:28,290 --> 00:11:32,750
plotting sort of more intuitive but

00:11:30,150 --> 00:11:35,310
you'll see them all and you can you know

00:11:32,750 --> 00:11:36,270
you can you can choose what you will so

00:11:35,310 --> 00:11:38,430
let's start with chars

00:11:36,270 --> 00:11:41,130
so this is one little pocket of the

00:11:38,430 --> 00:11:43,500
dashboard that I was that I was demoing

00:11:41,130 --> 00:11:46,260
and this this chart here this bar chart

00:11:43,500 --> 00:11:49,380
here has come out of has come out of the

00:11:46,260 --> 00:11:51,630
charts interface so one of the things

00:11:49,380 --> 00:11:53,880
about the charts interface is that it

00:11:51,630 --> 00:11:56,580
kind of does some magic it just takes

00:11:53,880 --> 00:11:59,310
your data and spits out a chart so you

00:11:56,580 --> 00:12:01,110
kind of need to know what it wants the

00:11:59,310 --> 00:12:02,460
data to look like otherwise it can't do

00:12:01,110 --> 00:12:04,470
its magic so often when I'm getting

00:12:02,460 --> 00:12:05,460
started with the chart if I especially

00:12:04,470 --> 00:12:08,730
haven't used it before

00:12:05,460 --> 00:12:10,470
I'll just set up some some dummy data to

00:12:08,730 --> 00:12:12,600
make sure it's kind of roughly doing

00:12:10,470 --> 00:12:14,430
what I expect it to do before I I put in

00:12:12,600 --> 00:12:16,530
my real data cuz and you know who knows

00:12:14,430 --> 00:12:19,350
whether it's it's okay or or my data

00:12:16,530 --> 00:12:21,300
this that's being weird so we just have

00:12:19,350 --> 00:12:23,190
some we just have a simple thing here

00:12:21,300 --> 00:12:25,830
we've spent some time with ponies and

00:12:23,190 --> 00:12:28,140
unicorns and and other magic things and

00:12:25,830 --> 00:12:31,590
now we get to importing our bar chart

00:12:28,140 --> 00:12:33,900
and so we've imported it from the charts

00:12:31,590 --> 00:12:36,630
function we import bar and now we just

00:12:33,900 --> 00:12:40,140
call it with our data frame and we show

00:12:36,630 --> 00:12:42,350
the bar chart one line and here we have

00:12:40,140 --> 00:12:45,620
here we have our chart we have zoo

00:12:42,350 --> 00:12:48,050
we have reset we can save it we can do

00:12:45,620 --> 00:12:49,450
that we can resize it and this is this

00:12:48,050 --> 00:12:52,280
is a web object you could share this

00:12:49,450 --> 00:12:55,850
HTML it's all going to work beautifully

00:12:52,280 --> 00:12:57,590
for you so that's working how we

00:12:55,850 --> 00:13:00,410
expected to so now we're going to try

00:12:57,590 --> 00:13:02,420
with some of our real data all of the

00:13:00,410 --> 00:13:04,310
code that gets all the real data is in

00:13:02,420 --> 00:13:06,800
that the repo that I shared with you

00:13:04,310 --> 00:13:09,170
earlier I'm not going to cover how I

00:13:06,800 --> 00:13:11,540
made it today this is the raw data and

00:13:09,170 --> 00:13:16,070
then this is the sort of process data

00:13:11,540 --> 00:13:19,520
that I did so once again I spit out my

00:13:16,070 --> 00:13:21,230
data that's I spit up my bar chart which

00:13:19,520 --> 00:13:23,120
is almost how I want it and I'm going to

00:13:21,230 --> 00:13:25,820
add a couple more options I'm going to

00:13:23,120 --> 00:13:31,010
stack my bar chart and I'm gonna set a

00:13:25,820 --> 00:13:32,360
pallet and now it's going to look a lot

00:13:31,010 --> 00:13:33,860
like what I showed you earlier

00:13:32,360 --> 00:13:35,570
styling is later in the talk so we'll

00:13:33,860 --> 00:13:38,900
get to that in a bit so there we go

00:13:35,570 --> 00:13:40,970
one line bar chart it's interactive you

00:13:38,900 --> 00:13:43,670
can out add hover you have zoom and

00:13:40,970 --> 00:13:45,260
there you are what I didn't what I

00:13:43,670 --> 00:13:46,700
forgot to put in was a list of all of

00:13:45,260 --> 00:13:50,690
the different kinds of charts that you

00:13:46,700 --> 00:13:52,160
can import but at the moment it's it's

00:13:50,690 --> 00:13:54,620
it's all the ones you might expect line

00:13:52,160 --> 00:14:00,020
and time series and horizon and scatter

00:13:54,620 --> 00:14:01,190
and so on so next up is i/o what you

00:14:00,020 --> 00:14:04,670
might have seen me do a couple of the

00:14:01,190 --> 00:14:07,100
top of those notebooks is from bocadillo

00:14:04,670 --> 00:14:09,080
import output notebook and show and when

00:14:07,100 --> 00:14:11,180
I call output notebook in and ipython

00:14:09,080 --> 00:14:14,480
notebook I see this Bocage is

00:14:11,180 --> 00:14:15,950
successfully loaded so that's how that's

00:14:14,480 --> 00:14:18,170
how we work with bouquet in a notebook

00:14:15,950 --> 00:14:21,890
and then there's also this output file

00:14:18,170 --> 00:14:23,240
which is the sort of equivalent and so

00:14:21,890 --> 00:14:24,920
with then at the top of my notebook I

00:14:23,240 --> 00:14:29,060
would call output file and I would give

00:14:24,920 --> 00:14:31,700
it an HTML file name and then when I hit

00:14:29,060 --> 00:14:33,980
show instead of showing in the notebook

00:14:31,700 --> 00:14:36,110
it opens a new browser with my static

00:14:33,980 --> 00:14:38,390
HTML has been has been saved and I could

00:14:36,110 --> 00:14:40,460
share that with somebody I like to use

00:14:38,390 --> 00:14:43,220
this extra argument mode equals CDN

00:14:40,460 --> 00:14:45,290
which instead of dumping all of the

00:14:43,220 --> 00:14:48,260
JavaScript and CSS that the power

00:14:45,290 --> 00:14:50,950
bouquet inline into the HTML it just it

00:14:48,260 --> 00:14:54,650
just puts in a reference to the bouquet

00:14:50,950 --> 00:14:55,860
CDN which takes your your HTML from sort

00:14:54,650 --> 00:14:57,870
of 1.6 megabytes

00:14:55,860 --> 00:15:00,690
down to about 6 K for a small plot so

00:14:57,870 --> 00:15:04,019
it's a it's a decent you know bandwidth

00:15:00,690 --> 00:15:05,610
saver so yeah so that's that's how you

00:15:04,019 --> 00:15:08,640
get started with spitting spitting your

00:15:05,610 --> 00:15:10,649
stuff out so plussing we've done the

00:15:08,640 --> 00:15:12,269
charts interface and now we want to look

00:15:10,649 --> 00:15:14,010
at the plotting interface this is a plot

00:15:12,269 --> 00:15:16,709
this is a plot that I couldn't build

00:15:14,010 --> 00:15:19,140
with the charts interface there isn't

00:15:16,709 --> 00:15:21,360
there isn't a chart that's that sort of

00:15:19,140 --> 00:15:24,209
pre baked for me that does this I have

00:15:21,360 --> 00:15:25,560
this categorical axis on the left side

00:15:24,209 --> 00:15:27,690
here splitting up the different kinds of

00:15:25,560 --> 00:15:30,480
activities that I get to get up to I

00:15:27,690 --> 00:15:31,860
have a time axes on time-series axes on

00:15:30,480 --> 00:15:34,740
the bottom here and then I have these

00:15:31,860 --> 00:15:38,730
rectangles that I've plotted across so

00:15:34,740 --> 00:15:41,700
once again I'm going to I'm gonna try

00:15:38,730 --> 00:15:43,680
with some test data first this time I'm

00:15:41,700 --> 00:15:45,120
gonna build my own column data source

00:15:43,680 --> 00:15:46,800
you notice I didn't have to do that with

00:15:45,120 --> 00:15:48,600
charts I just threw in a data frame and

00:15:46,800 --> 00:15:50,490
it just spat out a chart but this time

00:15:48,600 --> 00:15:52,140
I'm gonna have to build my own column

00:15:50,490 --> 00:15:54,300
data source and I'm gonna do it by

00:15:52,140 --> 00:15:57,060
passing in a dictionary and then I'm

00:15:54,300 --> 00:15:58,860
going to instantiate my figure now

00:15:57,060 --> 00:16:01,829
figure doesn't do anything on its own in

00:15:58,860 --> 00:16:03,690
fact if I just do show P here what I get

00:16:01,829 --> 00:16:05,699
is a very helpful error message it's

00:16:03,690 --> 00:16:07,140
just come in to bouquet saying you have

00:16:05,699 --> 00:16:09,180
no glyph renderers I'm not going to be

00:16:07,140 --> 00:16:12,209
able to plot anything interesting so

00:16:09,180 --> 00:16:14,279
we're spint at this this sort of

00:16:12,209 --> 00:16:16,649
validation and error helping is is new

00:16:14,279 --> 00:16:17,790
and so it's a bit spotty so there are

00:16:16,649 --> 00:16:19,290
some bits that do it and some bits that

00:16:17,790 --> 00:16:20,610
don't so if you ever see a place where

00:16:19,290 --> 00:16:22,350
like oh why didn't it give me an error

00:16:20,610 --> 00:16:24,089
message do you know just throw up an

00:16:22,350 --> 00:16:30,060
issue on github because we keep we keep

00:16:24,089 --> 00:16:33,240
adding these in so the once we have our

00:16:30,060 --> 00:16:34,500
are sort of empty figure now we have a

00:16:33,240 --> 00:16:35,790
whole bunch of methods on it remember

00:16:34,500 --> 00:16:37,140
all of those different glyphs that I

00:16:35,790 --> 00:16:39,180
showed you over and over and over again

00:16:37,140 --> 00:16:42,360
for every one of those glyphs there's a

00:16:39,180 --> 00:16:44,190
method so there's P quad to plot a quad

00:16:42,360 --> 00:16:46,320
there's P dot R X to plot a wreck

00:16:44,190 --> 00:16:49,589
there's P dot circle to plot circle and

00:16:46,320 --> 00:16:54,510
so on and so forth and so for our one

00:16:49,589 --> 00:16:58,260
we're going to use the quad what Yuma

00:16:54,510 --> 00:17:01,699
call it method and and spit out a plot

00:16:58,260 --> 00:17:04,460
this was just dummy data so I just have

00:17:01,699 --> 00:17:06,800
linear axes on the on the

00:17:04,460 --> 00:17:08,570
left and bottom here and so now let's

00:17:06,800 --> 00:17:12,440
let's think about how we might do this

00:17:08,570 --> 00:17:14,840
for our plot so here's our data we have

00:17:12,440 --> 00:17:17,060
the start and the end in time of each of

00:17:14,840 --> 00:17:18,320
our of each of our time block blocks of

00:17:17,060 --> 00:17:20,630
time and then we have our categorical

00:17:18,320 --> 00:17:24,620
name for our label for each of them

00:17:20,630 --> 00:17:30,740
those time blocks so we're gonna try

00:17:24,620 --> 00:17:32,390
plotting this and it's not looking great

00:17:30,740 --> 00:17:34,940
it hasn't given us anything and if I

00:17:32,390 --> 00:17:36,980
open the console what I'm gonna see is

00:17:34,940 --> 00:17:39,500
although I try to pass it some data and

00:17:36,980 --> 00:17:41,840
I really did try if I open the console

00:17:39,500 --> 00:17:46,190
it's gonna say could not set initial

00:17:41,840 --> 00:17:48,710
ranges and if you're thinking openly the

00:17:46,190 --> 00:17:50,360
console really this is where these

00:17:48,710 --> 00:17:51,710
requests for more validation can come in

00:17:50,360 --> 00:17:52,940
like this is totally something that we

00:17:51,710 --> 00:17:54,620
could have put one of those error

00:17:52,940 --> 00:17:56,600
messages in before we haven't done it

00:17:54,620 --> 00:17:59,990
yet so we should we should do that and

00:17:56,600 --> 00:18:01,610
and and I'm sure it will come but going

00:17:59,990 --> 00:18:04,550
to the console is always a good place to

00:18:01,610 --> 00:18:06,470
look if things didn't didn't work how

00:18:04,550 --> 00:18:09,140
you expected to so what happened was

00:18:06,470 --> 00:18:10,790
instead of if I had linear data like I

00:18:09,140 --> 00:18:13,760
had had up here just a series of numbers

00:18:10,790 --> 00:18:16,070
when I instantiate admire it was clever

00:18:13,760 --> 00:18:17,810
enough to figure out okay I can figure

00:18:16,070 --> 00:18:20,300
out the ranges this is no big deal

00:18:17,810 --> 00:18:23,930
but when I passed it my data with time

00:18:20,300 --> 00:18:25,010
and categorical axes is like I don't

00:18:23,930 --> 00:18:27,710
know what you want me to do here like

00:18:25,010 --> 00:18:29,660
you've got to give me some help so so we

00:18:27,710 --> 00:18:33,800
well now when we were instantiate in our

00:18:29,660 --> 00:18:35,570
figure we are going to specify the range

00:18:33,800 --> 00:18:38,360
the time series and we're going to

00:18:35,570 --> 00:18:41,930
specify the categories on the left side

00:18:38,360 --> 00:18:45,530
when we do this we get out something

00:18:41,930 --> 00:18:49,250
that looks pretty good but not quite

00:18:45,530 --> 00:18:52,070
right what you can see is our little

00:18:49,250 --> 00:18:53,120
blocks of time I like teeny-tiny you can

00:18:52,070 --> 00:18:54,740
even see that at the back but they're

00:18:53,120 --> 00:18:58,250
there but they're just really small and

00:18:54,740 --> 00:19:00,950
so what happens is how do you specify

00:18:58,250 --> 00:19:02,420
height on a categorical axis this is a

00:19:00,950 --> 00:19:07,040
bit of a tangent but it's a good one to

00:19:02,420 --> 00:19:08,360
know so when you have time or you know

00:19:07,040 --> 00:19:09,830
nought to 10 or whatever it's pretty

00:19:08,360 --> 00:19:11,510
obvious how you specify height or width

00:19:09,830 --> 00:19:13,390
when you have a categorical axis what

00:19:11,510 --> 00:19:16,510
does that mean and so

00:19:13,390 --> 00:19:18,040
the way we do it in bouquet is from like

00:19:16,510 --> 00:19:20,230
the left to the right of your categoric

00:19:18,040 --> 00:19:24,100
sees or the bottom to the top is not to

00:19:20,230 --> 00:19:26,980
one and so you append a colon to your to

00:19:24,100 --> 00:19:29,410
your label and you add like not point

00:19:26,980 --> 00:19:31,000
one for the bottom to not 0.94 the top

00:19:29,410 --> 00:19:34,920
or the left or the right or whatever and

00:19:31,000 --> 00:19:38,380
so once we've done that if we try again

00:19:34,920 --> 00:19:40,720
now it's come the height we expected to

00:19:38,380 --> 00:19:42,370
and so if I change if I change this to B

00:19:40,720 --> 00:19:44,170
naught point four two nor point six

00:19:42,370 --> 00:19:46,480
they'd be much narrower and so on so you

00:19:44,170 --> 00:19:48,100
can play with that as you as you wish

00:19:46,480 --> 00:19:51,520
and one of the things you're seeing here

00:19:48,100 --> 00:19:53,980
is think about that original data frame

00:19:51,520 --> 00:19:57,580
that original data frame the chart that

00:19:53,980 --> 00:19:59,110
I showed you was essentially a switched

00:19:57,580 --> 00:20:01,030
around version of this the chart

00:19:59,110 --> 00:20:03,250
function did all of that magic for you

00:20:01,030 --> 00:20:04,600
it magically figured out how wide I'm

00:20:03,250 --> 00:20:06,700
going to make things it processed all

00:20:04,600 --> 00:20:08,170
the data set that all up for you so that

00:20:06,700 --> 00:20:10,480
you didn't have to think about it which

00:20:08,170 --> 00:20:11,650
is awesome until it doesn't quite do

00:20:10,480 --> 00:20:13,510
what you need it to do and then you have

00:20:11,650 --> 00:20:14,920
to to do it yourself and actually to be

00:20:13,510 --> 00:20:16,900
honest one of the ways I learned bouquet

00:20:14,920 --> 00:20:18,550
was I started using the charts and then

00:20:16,900 --> 00:20:20,020
I went and read the code for the charts

00:20:18,550 --> 00:20:21,070
to figure out how it was how it was

00:20:20,020 --> 00:20:23,080
doing it all and then I was able to

00:20:21,070 --> 00:20:25,690
build my own so there we go

00:20:23,080 --> 00:20:27,550
okay so that was plotting a little bit

00:20:25,690 --> 00:20:28,830
more verbose but a lot more control you

00:20:27,550 --> 00:20:31,750
can do lots of different things there

00:20:28,830 --> 00:20:36,070
and so last but not least we get onto

00:20:31,750 --> 00:20:39,880
models and so this is where we use the

00:20:36,070 --> 00:20:42,520
lowest level of bouquet to to build up

00:20:39,880 --> 00:20:43,750
our charts in the docs I'm pretty sure I

00:20:42,520 --> 00:20:45,190
read somewhere that it's like most

00:20:43,750 --> 00:20:47,620
people wouldn't need to do this but I

00:20:45,190 --> 00:20:52,080
like living down here so you know but

00:20:47,620 --> 00:20:54,670
each to their own so once again I've

00:20:52,080 --> 00:20:57,430
pre-processed all my data and I I've

00:20:54,670 --> 00:21:01,660
made a dictionary of data sources but I

00:20:57,430 --> 00:21:06,160
want to that I want to plot which looks

00:21:01,660 --> 00:21:09,670
something like this which is which is

00:21:06,160 --> 00:21:11,290
nice so so this should look somewhat

00:21:09,670 --> 00:21:13,630
familiar this is our first attempt at

00:21:11,290 --> 00:21:15,340
making a plot and this should look a lot

00:21:13,630 --> 00:21:18,490
like what we just show him what we just

00:21:15,340 --> 00:21:21,130
saw in plotting we are specifying the

00:21:18,490 --> 00:21:23,110
edge X range and the X range and the Y

00:21:21,130 --> 00:21:26,559
range because if we don't poke he'll

00:21:23,110 --> 00:21:28,269
freak out now instead of

00:21:26,559 --> 00:21:30,429
we're not calling a method just yet

00:21:28,269 --> 00:21:32,919
we're actually specifying our line here

00:21:30,429 --> 00:21:35,049
so when we specify our line we've

00:21:32,919 --> 00:21:38,769
imported line from from bouquet dot

00:21:35,049 --> 00:21:41,080
models and we're saying I want the X to

00:21:38,769 --> 00:21:43,539
be to be powered if you like by this

00:21:41,080 --> 00:21:47,139
this column called timestamp I want the

00:21:43,539 --> 00:21:49,600
Y to be powered by the column called kin

00:21:47,139 --> 00:21:51,220
some hours and then what I'm going to do

00:21:49,600 --> 00:21:54,610
is I'm going to loop through and I'm

00:21:51,220 --> 00:21:56,019
going to add lines for each of my data

00:21:54,610 --> 00:21:57,519
sources that I want to add so it's

00:21:56,019 --> 00:22:00,279
allowing me to add lots of different

00:21:57,519 --> 00:22:02,379
lots of different lines and so to do

00:22:00,279 --> 00:22:04,629
that I use that add glyph method that I

00:22:02,379 --> 00:22:07,149
talked about before and I pass in a

00:22:04,629 --> 00:22:09,549
column data sort and I pass in the

00:22:07,149 --> 00:22:12,879
specification for my line so when I do

00:22:09,549 --> 00:22:16,299
that this is what I get which is what I

00:22:12,879 --> 00:22:18,100
asked for but it is not beautiful and

00:22:16,299 --> 00:22:19,539
that's because down at the models level

00:22:18,100 --> 00:22:20,919
we really do have to spell everything

00:22:19,539 --> 00:22:23,259
out so the first thing we might want to

00:22:20,919 --> 00:22:24,820
spell out is some color and bouquet has

00:22:23,259 --> 00:22:27,820
a whole bunch of built-in palettes for

00:22:24,820 --> 00:22:30,009
you that I would totally recommend using

00:22:27,820 --> 00:22:31,629
as defaults but you can of course spell

00:22:30,009 --> 00:22:37,090
your own pallets and pallets are just

00:22:31,629 --> 00:22:38,559
lists of either hex or igb a to poles or

00:22:37,090 --> 00:22:40,149
a whole different bunch of things and

00:22:38,559 --> 00:22:42,759
you can see the reference at the

00:22:40,149 --> 00:22:44,769
palettes documentation so let's try

00:22:42,759 --> 00:22:48,340
again there's a little bit more a little

00:22:44,769 --> 00:22:50,379
bit more style again we just have our

00:22:48,340 --> 00:22:52,059
ranges specified now we're gonna try a

00:22:50,379 --> 00:22:53,919
bit of background fill a bit of border

00:22:52,059 --> 00:22:55,749
film sort of mess around with this and

00:22:53,919 --> 00:22:58,869
now we're gonna add we're gonna add some

00:22:55,749 --> 00:23:02,200
layout so this is where we're adding our

00:22:58,869 --> 00:23:06,269
linear axis on the left and our

00:23:02,200 --> 00:23:09,249
date/time axis on the bottom and then

00:23:06,269 --> 00:23:10,659
now our line the specification has got a

00:23:09,249 --> 00:23:13,570
little bit more complicated we're not

00:23:10,659 --> 00:23:15,909
only specifying the X and the y we're

00:23:13,570 --> 00:23:17,740
specifying a color we're specifying some

00:23:15,909 --> 00:23:19,779
line width and so on and then once again

00:23:17,740 --> 00:23:23,169
we're just adding using this add glyph

00:23:19,779 --> 00:23:26,019
method use the source as how they use

00:23:23,169 --> 00:23:27,999
the force use the source and use the

00:23:26,019 --> 00:23:31,090
source and add there and add the line

00:23:27,999 --> 00:23:37,600
and once we do that things start to look

00:23:31,090 --> 00:23:39,700
pretty promising and so we can we can

00:23:37,600 --> 00:23:40,120
really start we can really start messing

00:23:39,700 --> 00:23:42,880
with it

00:23:40,120 --> 00:23:51,059
so if I just turned this into a method

00:23:42,880 --> 00:23:54,490
so I can make it nice and repeatable and

00:23:51,059 --> 00:23:56,140
now what I've done is I wanted to add so

00:23:54,490 --> 00:23:57,220
this has no tools on it right the charts

00:23:56,140 --> 00:23:59,200
and the plotting came with all those

00:23:57,220 --> 00:24:00,669
tools just pull out the books now we

00:23:59,200 --> 00:24:02,799
have to manually add the tools ourselves

00:24:00,669 --> 00:24:05,529
to do this it's very easy you just use

00:24:02,799 --> 00:24:07,510
add tools and you specify the tool you

00:24:05,529 --> 00:24:11,140
want to add and now we have pan added

00:24:07,510 --> 00:24:12,669
and that's awesome except I don't really

00:24:11,140 --> 00:24:14,230
want it to pan up and down so that

00:24:12,669 --> 00:24:17,340
doesn't make any sense for my data so

00:24:14,230 --> 00:24:23,230
I'm gonna try constraining it so

00:24:17,340 --> 00:24:24,940
constrain equals width oh that didn't

00:24:23,230 --> 00:24:27,669
work that's weird what happened

00:24:24,940 --> 00:24:29,380
oh thank you bouquet it have told me

00:24:27,669 --> 00:24:31,899
that can train is constraint is an

00:24:29,380 --> 00:24:34,149
unexpected attribute and the things that

00:24:31,899 --> 00:24:36,490
it's expecting are dimensions named plot

00:24:34,149 --> 00:24:37,990
sessional tags and so this part of the

00:24:36,490 --> 00:24:40,510
error reporting of bouquet I find

00:24:37,990 --> 00:24:42,370
incredibly useful if you if I can't

00:24:40,510 --> 00:24:43,779
remember what you know what at once I'll

00:24:42,370 --> 00:24:46,029
often just put in garbage so that it

00:24:43,779 --> 00:24:47,740
tells me what it's expecting which is

00:24:46,029 --> 00:24:52,419
really handy so it said in one of

00:24:47,740 --> 00:24:55,320
dimensions so whoa I python fail oh I

00:24:52,419 --> 00:25:00,159
think I just deleted my cell hang on no

00:24:55,320 --> 00:25:01,960
oh it's there thank you I know I changed

00:25:00,159 --> 00:25:06,250
the change it to mark down there we go

00:25:01,960 --> 00:25:10,000
so instead in wanted dimensions I think

00:25:06,250 --> 00:25:11,740
it said that it did say that but now

00:25:10,000 --> 00:25:15,399
it's saying it got an unexpected error

00:25:11,740 --> 00:25:18,250
and it's looking for a list and the list

00:25:15,399 --> 00:25:20,320
has to either contain with high X or Y

00:25:18,250 --> 00:25:23,250
but it just got whipped they didn't get

00:25:20,320 --> 00:25:25,179
a list so again there's the properties

00:25:23,250 --> 00:25:27,700
reporting and then there's this value

00:25:25,179 --> 00:25:30,909
reporting which is part of what we use

00:25:27,700 --> 00:25:33,340
to help us be able to serialize from

00:25:30,909 --> 00:25:38,080
Python to JavaScript but it's also very

00:25:33,340 --> 00:25:40,360
helpful for debugging your code as you

00:25:38,080 --> 00:25:42,850
go and now huzzah

00:25:40,360 --> 00:25:44,080
it pans left and right and I can't go up

00:25:42,850 --> 00:25:46,990
and down however much I might want to

00:25:44,080 --> 00:25:52,840
try so we can keep going and going with

00:25:46,990 --> 00:25:57,410
that but I will spare you for now so

00:25:52,840 --> 00:25:58,970
quick mention of the examples in the

00:25:57,410 --> 00:26:00,800
bouquet repo so there's the there's the

00:25:58,970 --> 00:26:03,050
gallery on the website but if you

00:26:00,800 --> 00:26:04,850
actually download the repo and find the

00:26:03,050 --> 00:26:07,070
examples directory there were just a

00:26:04,850 --> 00:26:08,420
bajillion examples in there and in

00:26:07,070 --> 00:26:09,830
particular forgetting start with models

00:26:08,420 --> 00:26:11,660
they're incredibly helpful so I totally

00:26:09,830 --> 00:26:15,800
recommend just downloading them and

00:26:11,660 --> 00:26:18,380
running them so styling we've started to

00:26:15,800 --> 00:26:21,890
see a little bit of that just now on the

00:26:18,380 --> 00:26:24,080
models but styling it's possible for

00:26:21,890 --> 00:26:26,720
every single level for plotting charts

00:26:24,080 --> 00:26:27,920
models it just depends on how you want

00:26:26,720 --> 00:26:31,820
to do it really so I'm going to show you

00:26:27,920 --> 00:26:36,260
four charts and models and you know take

00:26:31,820 --> 00:26:38,710
a pic so in the interest of time I'm

00:26:36,260 --> 00:26:42,380
going to skip the little prototyping but

00:26:38,710 --> 00:26:45,380
on when you this is us making a bar

00:26:42,380 --> 00:26:47,570
chart just like we did earlier and once

00:26:45,380 --> 00:26:49,730
we've got that we can then just start to

00:26:47,570 --> 00:26:51,260
set all of the attributes the tool bar

00:26:49,730 --> 00:26:53,240
location the background fill the outline

00:26:51,260 --> 00:26:55,610
and so on we go and we grab the glyphs

00:26:53,240 --> 00:26:57,260
and we can specify their full color the

00:26:55,610 --> 00:26:58,340
line color we you know and we set the

00:26:57,260 --> 00:26:59,810
attributes and we set the attributes and

00:26:58,340 --> 00:27:02,180
we set the attributes and then finally

00:26:59,810 --> 00:27:05,720
we show it and it looks it looks

00:27:02,180 --> 00:27:07,160
gorgeous and so when when you're in the

00:27:05,720 --> 00:27:08,480
ipython notebook you know the one of the

00:27:07,160 --> 00:27:10,760
nice things about it is the autocomplete

00:27:08,480 --> 00:27:12,440
and the fact that you can really sort of

00:27:10,760 --> 00:27:13,850
use ipython notebook to sort of help you

00:27:12,440 --> 00:27:15,530
see what you know what the attributes

00:27:13,850 --> 00:27:16,490
you might have available to you are and

00:27:15,530 --> 00:27:17,930
so that's one of the ways that

00:27:16,490 --> 00:27:22,250
especially early on I used to play

00:27:17,930 --> 00:27:27,140
around with with bouquet a lot now with

00:27:22,250 --> 00:27:29,210
models we we spell it all first right we

00:27:27,140 --> 00:27:31,580
don't create something and then fix it

00:27:29,210 --> 00:27:35,360
we spell it all as we go and so what I

00:27:31,580 --> 00:27:38,390
like to do is and the other thing we

00:27:35,360 --> 00:27:40,100
like to do if we're making lots of plots

00:27:38,390 --> 00:27:42,200
and we all want them to look the same is

00:27:40,100 --> 00:27:44,390
we can start to build these dictionaries

00:27:42,200 --> 00:27:46,310
of properties like our line colors and

00:27:44,390 --> 00:27:48,640
so on and we can just splat them into

00:27:46,310 --> 00:27:50,960
all the axes or we can Splatt Splatt

00:27:48,640 --> 00:27:54,290
properties into all of those the plots

00:27:50,960 --> 00:27:55,580
so i build up this i typically build up

00:27:54,290 --> 00:27:56,960
this style sheet and the top of the

00:27:55,580 --> 00:27:58,610
style sheet I'll have my colors and

00:27:56,960 --> 00:28:00,980
padding and things like that that will

00:27:58,610 --> 00:28:05,240
sort of mirror my CSS if I'm building a

00:28:00,980 --> 00:28:05,820
web a website and and so that I can sort

00:28:05,240 --> 00:28:08,430
of have those

00:28:05,820 --> 00:28:10,410
and colors and things like that across

00:28:08,430 --> 00:28:12,360
and then I have this plot properties

00:28:10,410 --> 00:28:15,660
dictionary access properties dictionary

00:28:12,360 --> 00:28:18,120
and so on set up in my in a in just a

00:28:15,660 --> 00:28:20,880
file called constants and then when I

00:28:18,120 --> 00:28:22,470
come to build my plot in models it

00:28:20,880 --> 00:28:24,300
actually starts to look quite clean I

00:28:22,470 --> 00:28:26,130
just make a plot and I put in the plot

00:28:24,300 --> 00:28:28,620
properties I make my two axes they show

00:28:26,130 --> 00:28:29,850
all these common stylings again I make

00:28:28,620 --> 00:28:31,890
my two rectangles they share all these

00:28:29,850 --> 00:28:33,690
common stylings and so this is why I

00:28:31,890 --> 00:28:35,820
kind of I kind of like working with

00:28:33,690 --> 00:28:38,190
models is because I'm doing a lot of

00:28:35,820 --> 00:28:40,320
heavy customization typically and and I

00:28:38,190 --> 00:28:42,570
find this fairly clean as opposed to

00:28:40,320 --> 00:28:43,860
that big sort of quite verbose version

00:28:42,570 --> 00:28:45,480
that you end up doing where you fix all

00:28:43,860 --> 00:28:47,600
the attributes on a chart but each to

00:28:45,480 --> 00:28:55,260
their own anything is possible

00:28:47,600 --> 00:28:57,330
so layouts there's if you're just

00:28:55,260 --> 00:29:00,140
working with in boquete you're not

00:28:57,330 --> 00:29:02,610
interested in putting stuff on the web

00:29:00,140 --> 00:29:04,800
there's there's plenty that's sort of in

00:29:02,610 --> 00:29:08,100
the box to help you make something nice

00:29:04,800 --> 00:29:10,800
from the get-go in particular there's H

00:29:08,100 --> 00:29:15,270
plot and V plot that are invite brocade

00:29:10,800 --> 00:29:18,540
or i/o and what they do is they just

00:29:15,270 --> 00:29:20,790
kind of make rows and columns and it's

00:29:18,540 --> 00:29:23,520
pretty it's pretty self-explanatory so

00:29:20,790 --> 00:29:25,980
we've got here a V plot and we've nested

00:29:23,520 --> 00:29:28,560
inside it and H plot and and two charts

00:29:25,980 --> 00:29:30,750
so our H plot across here we've sort of

00:29:28,560 --> 00:29:31,950
lined up our three things this is not my

00:29:30,750 --> 00:29:33,720
dashboard this is just sort of giving

00:29:31,950 --> 00:29:36,660
you a demo of what you know what you

00:29:33,720 --> 00:29:39,240
could do and and then I've stacked it on

00:29:36,660 --> 00:29:41,700
top of some other plots and so you could

00:29:39,240 --> 00:29:44,340
spit that into an HTML using the output

00:29:41,700 --> 00:29:45,210
file method and you're gonna get you're

00:29:44,340 --> 00:29:49,590
gonna get something that's pretty

00:29:45,210 --> 00:29:51,630
presentable and and all of these you

00:29:49,590 --> 00:29:53,130
know all of these plots can can interact

00:29:51,630 --> 00:29:56,430
with each other once they're in the same

00:29:53,130 --> 00:29:57,930
document together if you if you spell it

00:29:56,430 --> 00:29:59,040
all in a nested thing like this all of

00:29:57,930 --> 00:30:03,690
those things will be able to interact

00:29:59,040 --> 00:30:07,410
together because I typically sit in the

00:30:03,690 --> 00:30:10,160
web I use if that's the very high level

00:30:07,410 --> 00:30:14,460
I use the very low level embed function

00:30:10,160 --> 00:30:17,250
and again I to use this I use the

00:30:14,460 --> 00:30:19,180
components method and I take a

00:30:17,250 --> 00:30:23,240
dictionary of all of my plots

00:30:19,180 --> 00:30:27,680
and what the components method gives me

00:30:23,240 --> 00:30:31,010
back is my HTML script and a dictionary

00:30:27,680 --> 00:30:32,770
of all of the divs that I have - the div

00:30:31,010 --> 00:30:35,180
tags that I have to stick into my HTML

00:30:32,770 --> 00:30:37,490
so I'll take a template this is a very

00:30:35,180 --> 00:30:39,620
simple one where I've just imported

00:30:37,490 --> 00:30:42,470
bouquet and maybe some CSS at the top

00:30:39,620 --> 00:30:45,050
and then I've I've started to template

00:30:42,470 --> 00:30:47,180
in my the divs that the bouquet is

00:30:45,050 --> 00:30:51,070
giving me back and I template in very

00:30:47,180 --> 00:30:53,060
important my script and using that

00:30:51,070 --> 00:30:54,230
rendering that out with the context of

00:30:53,060 --> 00:30:56,450
the script and the divs which if you're

00:30:54,230 --> 00:30:58,070
in this works in Django ginger whatever

00:30:56,450 --> 00:31:00,140
you're templating languages is it's all

00:30:58,070 --> 00:31:01,910
the same bouquet comes with ginger built

00:31:00,140 --> 00:31:04,130
in so that's kind of convenient you can

00:31:01,910 --> 00:31:06,290
start to build this is an HTML page

00:31:04,130 --> 00:31:07,700
right I had h1 building a dashboard my

00:31:06,290 --> 00:31:09,560
time selector and this is the actual

00:31:07,700 --> 00:31:11,060
HTML page that I could either be

00:31:09,560 --> 00:31:14,930
rendering through a web application or

00:31:11,060 --> 00:31:16,730
or as a static HTML so that's layout and

00:31:14,930 --> 00:31:18,350
I'm pretty sure Fabio is going to talk a

00:31:16,730 --> 00:31:21,680
bit more about embedding and stuff in

00:31:18,350 --> 00:31:27,350
more detail later so if that was too

00:31:21,680 --> 00:31:30,020
fast though they'll be more and so with

00:31:27,350 --> 00:31:34,160
all of that under your belt I promise

00:31:30,020 --> 00:31:36,500
that adding to it the pandas dataframe

00:31:34,160 --> 00:31:39,200
method to HTML which turns your data

00:31:36,500 --> 00:31:41,060
frame into a into a nice HTML table you

00:31:39,200 --> 00:31:43,580
can make everything that you do you see

00:31:41,060 --> 00:31:45,680
here these these tables here are pandas

00:31:43,580 --> 00:31:47,270
tables this is our plotting plot these

00:31:45,680 --> 00:31:50,840
are our bar charts these are our line

00:31:47,270 --> 00:31:52,640
charts and we've got it all with a nice

00:31:50,840 --> 00:31:55,430
you know and what's what's different

00:31:52,640 --> 00:31:57,350
about it is I've used I've used a nice

00:31:55,430 --> 00:32:00,800
views a nice template I've used some

00:31:57,350 --> 00:32:04,330
nice CSS and and it all comes out very

00:32:00,800 --> 00:32:07,580
nicely so last but not least interactive

00:32:04,330 --> 00:32:09,740
so there's two parts of interactive the

00:32:07,580 --> 00:32:12,050
first part has been built into bouquet

00:32:09,740 --> 00:32:13,910
for quite a while we have our tools like

00:32:12,050 --> 00:32:15,350
hover select zoom pan which we've been

00:32:13,910 --> 00:32:18,050
talking about a little bit and the

00:32:15,350 --> 00:32:19,520
shared selection and panning so I'm

00:32:18,050 --> 00:32:22,730
going to quickly run through how to do

00:32:19,520 --> 00:32:25,160
that so just getting started I have a

00:32:22,730 --> 00:32:27,530
simple set of data and the first thing

00:32:25,160 --> 00:32:29,870
I'm going to do is I'm going to share

00:32:27,530 --> 00:32:30,940
some ranges and so what I've done here

00:32:29,870 --> 00:32:34,330
is

00:32:30,940 --> 00:32:37,570
I've got a figure I've got three fingers

00:32:34,330 --> 00:32:41,139
sorry that I've sat side by side and in

00:32:37,570 --> 00:32:44,080
the second figure I've used P ones X

00:32:41,139 --> 00:32:46,809
range right and in the third figure I've

00:32:44,080 --> 00:32:49,570
used the P ones

00:32:46,809 --> 00:32:53,320
X range other than that X range and it's

00:32:49,570 --> 00:32:56,919
Y range and so when I do that it means

00:32:53,320 --> 00:32:59,110
that if I pan left to right it's going

00:32:56,919 --> 00:33:01,509
to pan out on all of the plots when I

00:32:59,110 --> 00:33:03,730
pan up and down because I only shared

00:33:01,509 --> 00:33:06,269
the Y range with one other plot only one

00:33:03,730 --> 00:33:08,230
is changing so this lets you sort of

00:33:06,269 --> 00:33:09,370
there's lots of different times when you

00:33:08,230 --> 00:33:11,019
might be wanting to see different

00:33:09,370 --> 00:33:12,129
dimensions and and how they compare so

00:33:11,019 --> 00:33:13,539
you can plot different dimensions on

00:33:12,129 --> 00:33:17,139
different plots but start to move around

00:33:13,539 --> 00:33:18,429
in sync which is very handy the other

00:33:17,139 --> 00:33:20,379
thing that we've done here is we've

00:33:18,429 --> 00:33:22,809
shared a source across them so instead

00:33:20,379 --> 00:33:25,929
of making different sources for

00:33:22,809 --> 00:33:28,389
different plots I use one source with

00:33:25,929 --> 00:33:31,889
all of my data in it and I shared it

00:33:28,389 --> 00:33:34,360
across my three my three different plots

00:33:31,889 --> 00:33:37,600
but I plotted different things so my

00:33:34,360 --> 00:33:39,460
left plot has X not X and y not my

00:33:37,600 --> 00:33:42,100
middle plot and so on and so once I've

00:33:39,460 --> 00:33:46,419
shared a source when I start using

00:33:42,100 --> 00:33:49,120
selections they can when I start using

00:33:46,419 --> 00:33:49,870
selections they'll share across they'll

00:33:49,120 --> 00:33:56,139
share across all the different

00:33:49,870 --> 00:33:58,090
selections this is I'm running a bit low

00:33:56,139 --> 00:34:00,039
on time I'm very sorry about that this

00:33:58,090 --> 00:34:01,299
is the spelling for how to do Havas

00:34:00,039 --> 00:34:07,330
which i'm not going to talk about I'm

00:34:01,299 --> 00:34:09,040
going to whip through interactions to to

00:34:07,330 --> 00:34:10,720
show you so this is but this is a quick

00:34:09,040 --> 00:34:13,300
example of something very nice I did

00:34:10,720 --> 00:34:15,190
with linking selections so when I click

00:34:13,300 --> 00:34:17,129
on a country this number here update

00:34:15,190 --> 00:34:19,780
this the name of the country updates the

00:34:17,129 --> 00:34:22,089
value updates when I click over on this

00:34:19,780 --> 00:34:24,550
other tab I've also shared it across

00:34:22,089 --> 00:34:26,770
tabs and Somalia is updated here when I

00:34:24,550 --> 00:34:28,389
click on Ghana if I go back to my first

00:34:26,770 --> 00:34:30,250
tab garner will still be selected so

00:34:28,389 --> 00:34:31,480
that's a bit more sort of sophisticated

00:34:30,250 --> 00:34:35,349
example of what you can do with that

00:34:31,480 --> 00:34:36,909
linking and last but not least I have 4

00:34:35,349 --> 00:34:38,649
minutes and 14 seconds to whip you

00:34:36,909 --> 00:34:40,179
through callbacks and then fabio is

00:34:38,649 --> 00:34:40,899
going to really take this and run with

00:34:40,179 --> 00:34:43,000
it this afternoon

00:34:40,899 --> 00:34:43,500
so callbacks have just been added to

00:34:43,000 --> 00:34:45,240
Boca

00:34:43,500 --> 00:34:47,460
and they're super awesome they allow you

00:34:45,240 --> 00:34:48,960
to write a tiny piece of JavaScript or a

00:34:47,460 --> 00:34:51,540
giant piece of JavaScript if you want to

00:34:48,960 --> 00:34:53,909
but but you write some JavaScript in

00:34:51,540 --> 00:34:56,460
your Python code and you you can start

00:34:53,909 --> 00:34:58,290
to do really sophisticated interactions

00:34:56,460 --> 00:35:02,040
and they're currently available on a

00:34:58,290 --> 00:35:03,960
sort of weird and somewhat ad-hoc subset

00:35:02,040 --> 00:35:05,850
of all of the of all of the components

00:35:03,960 --> 00:35:08,340
of Boquete and that's the list there and

00:35:05,850 --> 00:35:09,840
as a web developer I really love this

00:35:08,340 --> 00:35:11,760
because what I really want is that that

00:35:09,840 --> 00:35:13,470
really rich kind of experience nothing

00:35:11,760 --> 00:35:15,030
crazy fancy not doing sort of

00:35:13,470 --> 00:35:16,350
computation on the server whatever but

00:35:15,030 --> 00:35:18,000
giving people the chance to really play

00:35:16,350 --> 00:35:20,040
with that infographic a little bit and

00:35:18,000 --> 00:35:21,960
and this has really allowed me to do

00:35:20,040 --> 00:35:23,130
this so this is one I built recently

00:35:21,960 --> 00:35:25,410
they've got the slider at the bottom

00:35:23,130 --> 00:35:27,480
this is a bouquet slider and what I'm

00:35:25,410 --> 00:35:29,820
doing it's very simple whenever the

00:35:27,480 --> 00:35:32,250
value whenever I slide the value of this

00:35:29,820 --> 00:35:34,440
number at the back here changes and the

00:35:32,250 --> 00:35:36,150
data source that power the power is

00:35:34,440 --> 00:35:37,890
these circle sort of switches out so

00:35:36,150 --> 00:35:40,080
this is something there is a completely

00:35:37,890 --> 00:35:42,960
standalone piece of HTML all done in

00:35:40,080 --> 00:35:47,010
boquete using this new callback

00:35:42,960 --> 00:35:51,900
mechanism if you hate JavaScript more

00:35:47,010 --> 00:35:53,670
than life itself there are there we're

00:35:51,900 --> 00:35:56,250
going we're starting to in the same way

00:35:53,670 --> 00:35:58,380
that we made charts as these sort of

00:35:56,250 --> 00:36:00,060
canned one-liners that will sort of do

00:35:58,380 --> 00:36:02,490
all the magic for you we're starting to

00:36:00,060 --> 00:36:04,680
build up these actions so a common thing

00:36:02,490 --> 00:36:08,310
might be you so you tap on that you

00:36:04,680 --> 00:36:09,900
select a glyph and and a URL opens so

00:36:08,310 --> 00:36:11,190
the first action we've made is open URL

00:36:09,900 --> 00:36:12,480
but there'll be more sort of pre-built

00:36:11,190 --> 00:36:18,510
thing so you never have to write

00:36:12,480 --> 00:36:25,160
JavaScript coming here is an example of

00:36:18,510 --> 00:36:25,160
how to use of how to use the callback so

00:36:25,730 --> 00:36:29,730
excuse that type of where it just says

00:36:27,720 --> 00:36:31,620
code equals blank there so let's say so

00:36:29,730 --> 00:36:37,980
that we we call up we make a callback

00:36:31,620 --> 00:36:43,740
and we have some code like change the

00:36:37,980 --> 00:36:46,020
selected value to a new thing and when

00:36:43,740 --> 00:36:49,380
now instead of just adding a tool hover

00:36:46,020 --> 00:36:51,960
tool we add it with our callback what's

00:36:49,380 --> 00:36:53,520
exciting here and it's a little hard to

00:36:51,960 --> 00:36:56,680
see but when you get used to it you

00:36:53,520 --> 00:36:58,540
realize how magic it is is I have passed

00:36:56,680 --> 00:37:00,760
I've passed in these arguments and what

00:36:58,540 --> 00:37:02,920
I've done is I've given a name my column

00:37:00,760 --> 00:37:06,190
data source and I've passed it in the

00:37:02,920 --> 00:37:08,260
Python object so now when I in my

00:37:06,190 --> 00:37:11,470
JavaScript code I can use the work I can

00:37:08,260 --> 00:37:14,080
use my column data sources as a as a

00:37:11,470 --> 00:37:15,370
JavaScript object and I can start

00:37:14,080 --> 00:37:16,960
playing with that and it's like I was

00:37:15,370 --> 00:37:18,670
playing with my Python object so you

00:37:16,960 --> 00:37:20,470
don't have to do any magic you can sort

00:37:18,670 --> 00:37:24,100
of be playing with your Python objects

00:37:20,470 --> 00:37:25,960
in in in JavaScript and if you use that

00:37:24,100 --> 00:37:27,580
components method where you just have

00:37:25,960 --> 00:37:29,740
them all in one components method and

00:37:27,580 --> 00:37:31,720
all in one script that's how you can

00:37:29,740 --> 00:37:35,020
start interacting across all of your

00:37:31,720 --> 00:37:36,910
different plots and fabio is going to to

00:37:35,020 --> 00:37:39,460
show you all about that later

00:37:36,910 --> 00:37:48,610
so with one minute left other any

00:37:39,460 --> 00:37:50,970
questions yeah yeah you can show I can

00:37:48,610 --> 00:37:50,970
repeat it

00:37:52,530 --> 00:38:04,450
yes you mean like a Google map or a

00:37:59,610 --> 00:38:06,880
OpenStreetMap or whatever there oh sorry

00:38:04,450 --> 00:38:09,220
the question was it can you can you

00:38:06,880 --> 00:38:10,870
embed a Google Street mogul map or an

00:38:09,220 --> 00:38:14,410
Open Street Map Ozlem like that there is

00:38:10,870 --> 00:38:15,730
a there is actually a G map plot like

00:38:14,410 --> 00:38:17,830
bar chart or something like that like a

00:38:15,730 --> 00:38:22,930
plot that you can instantiate which

00:38:17,830 --> 00:38:24,310
works okay and but we wanted to make it

00:38:22,930 --> 00:38:25,390
better and one of the things I meant to

00:38:24,310 --> 00:38:27,280
be doing this summer is actually working

00:38:25,390 --> 00:38:30,070
on our mapping support in general which

00:38:27,280 --> 00:38:31,330
is not as hot as we would like it but

00:38:30,070 --> 00:38:32,500
it's really high on my to-do list

00:38:31,330 --> 00:38:36,460
because it's something I want to see

00:38:32,500 --> 00:38:38,590
done so yeah I told us in the afternoon

00:38:36,460 --> 00:38:40,600
we have the possibility to learn a

00:38:38,590 --> 00:38:44,400
little bit more about okay so I want to

00:38:40,600 --> 00:38:44,400

YouTube URL: https://www.youtube.com/watch?v=EQCtGIdA0nE


