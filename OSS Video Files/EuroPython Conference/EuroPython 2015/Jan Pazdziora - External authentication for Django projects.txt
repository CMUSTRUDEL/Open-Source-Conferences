Title: Jan Pazdziora - External authentication for Django projects
Publication date: 2015-08-08
Playlist: EuroPython 2015
Description: 
	Jan Pazdziora - External authentication for Django projects
[EuroPython 2015]
[24 July 2015]
[Bilbao, Euskadi, Spain]

When applications get deployed in enterprise environment or in large
organizations, they need to support user accounts and groups that are
managed externally, in existing directory services like FreeIPA or
Active Directory, or federated via protocols like SAML. While it is
possible to  add support for these individual setups and protocols
directly to application code or to Web frameworks or libraries, often
it is better to delegate the authentication and identity operations to
a frontend server and just assume that the application has to be able
to consume results of the external authentication and identity
lookups.

In this talk, we will look at Django Web framework and how with few
small changes to the framework and to the application we can extend
the functionality of existing RemoteUserMiddleware and
RemoteUserBackend to consume users coming from enterprise identity
management systems. We will focus on using proven OS-level components
such as SSSD for Web applications, but will also show setup using
federation.
Captions: 
	00:00:06,410 --> 00:00:16,109
hello dinuclear anything about the mic

00:00:10,309 --> 00:00:20,400
probably not okay so thanks for being

00:00:16,109 --> 00:00:23,939
interested in authentication here's the

00:00:20,400 --> 00:00:26,400
situation you have a application that

00:00:23,939 --> 00:00:28,369
you've developed and a large

00:00:26,400 --> 00:00:31,080
organization is interested in it and

00:00:28,369 --> 00:00:32,910
they would like to either buy it or

00:00:31,080 --> 00:00:39,809
deploy it and you're excited about it

00:00:32,910 --> 00:00:41,910
and the thing is you've probably build

00:00:39,809 --> 00:00:43,500
it around jungle country off or

00:00:41,910 --> 00:00:46,620
something like that and maybe you've

00:00:43,500 --> 00:00:50,180
expanded it a little bit and maybe

00:00:46,620 --> 00:00:53,850
you've added a nice management interface

00:00:50,180 --> 00:00:56,399
but there the organization wants all

00:00:53,850 --> 00:00:59,670
employees or associates to have access

00:00:56,399 --> 00:01:01,640
to that application and perhaps not just

00:00:59,670 --> 00:01:03,899
the employees of that application but

00:01:01,640 --> 00:01:07,500
they have partners and suppliers and

00:01:03,899 --> 00:01:11,540
maybe customers and all of their people

00:01:07,500 --> 00:01:15,720
should have access to it the workflow

00:01:11,540 --> 00:01:22,530
the idea workflow it's like this a new

00:01:15,720 --> 00:01:25,890
person joins the company HR is a good HR

00:01:22,530 --> 00:01:28,070
and they put the person into their

00:01:25,890 --> 00:01:32,189
center of identity management system

00:01:28,070 --> 00:01:34,439
Active Directory possibly they put the

00:01:32,189 --> 00:01:37,290
person into groups that somehow match

00:01:34,439 --> 00:01:40,850
what the person is supposed to do or our

00:01:37,290 --> 00:01:44,460
group to to which the person belongs and

00:01:40,850 --> 00:01:48,090
when the person then finally gets their

00:01:44,460 --> 00:01:51,299
password and logs in they should be able

00:01:48,090 --> 00:01:53,280
to log in to any service that that is

00:01:51,299 --> 00:01:56,390
somehow related to the work that they do

00:01:53,280 --> 00:02:00,180
so if you you hire a new finance person

00:01:56,390 --> 00:02:02,310
that person should be able to log in to

00:02:00,180 --> 00:02:03,899
their finance accounting or whatever

00:02:02,310 --> 00:02:07,009
application right away

00:02:03,899 --> 00:02:11,390
if you hire a new network administrator

00:02:07,009 --> 00:02:13,200
again they should get their laptop setup

00:02:11,390 --> 00:02:16,319
log into

00:02:13,200 --> 00:02:21,540
a domain perhaps it's a Windows laptop

00:02:16,319 --> 00:02:26,160
and and then access their network

00:02:21,540 --> 00:02:30,390
management system Network administration

00:02:26,160 --> 00:02:31,680
and be allowed to log in and why servers

00:02:30,390 --> 00:02:34,739
are the finance people should not have

00:02:31,680 --> 00:02:37,140
access to to the networking management

00:02:34,739 --> 00:02:40,470
and the network administrators should

00:02:37,140 --> 00:02:48,120
probably not be able to access the tax

00:02:40,470 --> 00:02:52,920
records the problem is that no one will

00:02:48,120 --> 00:02:55,560
enter those users into application in

00:02:52,920 --> 00:02:58,860
large organizations so when a new person

00:02:55,560 --> 00:03:01,319
is hired that application somehow needs

00:02:58,860 --> 00:03:05,340
to learn about that new person and about

00:03:01,319 --> 00:03:07,200
their access rights right away no one is

00:03:05,340 --> 00:03:08,700
going note none of the those

00:03:07,200 --> 00:03:12,599
administrator is going to type that

00:03:08,700 --> 00:03:14,310
person repeat the details into multiple

00:03:12,599 --> 00:03:17,579
of their applications they only want to

00:03:14,310 --> 00:03:19,859
do a count moreover different

00:03:17,579 --> 00:03:24,630
organizations have different ideas and

00:03:19,859 --> 00:03:27,060
different requirements about what

00:03:24,630 --> 00:03:29,609
authentication protocols are to be used

00:03:27,060 --> 00:03:31,730
some sometimes it's it's Kerberos

00:03:29,609 --> 00:03:36,269
typically if you have Active Directory

00:03:31,730 --> 00:03:38,040
sometimes is some chip cards sometimes

00:03:36,269 --> 00:03:42,660
it's Sam oh especially when you want to

00:03:38,040 --> 00:03:47,609
integrate with other companies sometimes

00:03:42,660 --> 00:03:50,750
often the organisation has a verified

00:03:47,609 --> 00:03:53,760
audited method of setting up those

00:03:50,750 --> 00:03:59,579
authentication mechanisms using some

00:03:53,760 --> 00:04:01,380
front-end HTTP servers and they won't

00:03:59,579 --> 00:04:05,599
change it for your application

00:04:01,380 --> 00:04:11,160
they have standard that they won't used

00:04:05,599 --> 00:04:14,250
so I'll probably do it the reverse way I

00:04:11,160 --> 00:04:16,380
typically do it I'll do a demo first so

00:04:14,250 --> 00:04:18,989
that you know what I'm talking about and

00:04:16,380 --> 00:04:24,570
if you think that it's too easy you can

00:04:18,989 --> 00:04:27,200
leave and won't suffer here so

00:04:24,570 --> 00:04:29,670
I have free IPA server which is

00:04:27,200 --> 00:04:34,370
basically something like Active

00:04:29,670 --> 00:04:39,390
Directory just on Linux and I have Bob

00:04:34,370 --> 00:04:41,760
account created here and I have a very

00:04:39,390 --> 00:04:43,130
simple jungle application that

00:04:41,760 --> 00:04:46,470
application looks like this

00:04:43,130 --> 00:04:52,260
it just shows who is logged in and it

00:04:46,470 --> 00:04:53,880
shows the last login attempt so only we

00:04:52,260 --> 00:04:58,050
are currently not logged in our only

00:04:53,880 --> 00:05:02,690
admin has ever logged in that's that's

00:04:58,050 --> 00:05:04,920
the situation and I also have identity

00:05:02,690 --> 00:05:06,840
provider which is basically which

00:05:04,920 --> 00:05:11,640
provides me with sam'l assertions and

00:05:06,840 --> 00:05:14,640
it's connected to to that free IPA so I

00:05:11,640 --> 00:05:21,480
have three machines Bob currently only

00:05:14,640 --> 00:05:24,390
exists in that reactive server now I can

00:05:21,480 --> 00:05:27,330
do it two ways I can either click login

00:05:24,390 --> 00:05:30,300
here in that application or I can click

00:05:27,330 --> 00:05:32,100
login here in that central single

00:05:30,300 --> 00:05:38,970
sign-on solution which way which way you

00:05:32,100 --> 00:05:41,070
prepare it ok so please so again I'm Bob

00:05:38,970 --> 00:05:46,740
I know the password

00:05:41,070 --> 00:05:52,260
I get logged in welcome Bob now when I

00:05:46,740 --> 00:05:55,410
come to that application I'm currently

00:05:52,260 --> 00:05:59,370
not not logged in I click login

00:05:55,410 --> 00:06:00,030
I got redirected to that identity

00:05:59,370 --> 00:06:04,140
provider

00:06:00,030 --> 00:06:08,850
I get redirected back the log now shows

00:06:04,140 --> 00:06:10,740
that at 12:35 it's GMT time so it's

00:06:08,850 --> 00:06:15,840
somehow matches what which is the

00:06:10,740 --> 00:06:18,840
reality lock Bob has taught them and not

00:06:15,840 --> 00:06:24,750
just that bob has acquired some

00:06:18,840 --> 00:06:28,850
privileges in jungle now well either say

00:06:24,750 --> 00:06:28,850
wow or leaf because that's pretty cool

00:06:29,960 --> 00:06:34,790
at the end I'll show you the same with

00:06:33,360 --> 00:06:37,220
Kerberos

00:06:34,790 --> 00:06:38,990
and at the end you will be able to pick

00:06:37,220 --> 00:06:47,860
your own logins so that you know that

00:06:38,990 --> 00:06:50,930
I'm not faking it so how do we do it I

00:06:47,860 --> 00:06:52,910
will assume that we have Apache that

00:06:50,930 --> 00:06:57,500
Django is running under hundred pouchy

00:06:52,910 --> 00:07:00,340
and that we want it to consume that

00:06:57,500 --> 00:07:03,860
typical standard remote user

00:07:00,340 --> 00:07:04,250
authentication result right so how do we

00:07:03,860 --> 00:07:07,730
do it

00:07:04,250 --> 00:07:10,250
well since Django one point wine you

00:07:07,730 --> 00:07:16,550
have remote user middle bar so that's

00:07:10,250 --> 00:07:21,200
easy right you set it up well there are

00:07:16,550 --> 00:07:26,600
at least two problems first remote user

00:07:21,200 --> 00:07:29,870
middleware really expects all URLs or

00:07:26,600 --> 00:07:36,830
all accesses to be authenticated so even

00:07:29,870 --> 00:07:38,690
if as the result of that access and what

00:07:36,830 --> 00:07:42,200
I did not show you and I probably should

00:07:38,690 --> 00:07:48,350
if I look I have two different Firefox

00:07:42,200 --> 00:07:52,280
running so if i refresh the view you can

00:07:48,350 --> 00:07:55,490
see that Bob account god created an

00:07:52,280 --> 00:07:59,120
actual it's not just we not just know

00:07:55,490 --> 00:08:02,330
that it's Bob we also know his first and

00:07:59,120 --> 00:08:08,180
last name so there's more than just to

00:08:02,330 --> 00:08:11,540
to log in name but remote user

00:08:08,180 --> 00:08:15,620
middleware wants that logging name to be

00:08:11,540 --> 00:08:18,050
present in in that remote user variable

00:08:15,620 --> 00:08:21,410
or whatever you call it upon every

00:08:18,050 --> 00:08:24,530
request so you would either need to

00:08:21,410 --> 00:08:29,690
maintain some sessions in Apache which

00:08:24,530 --> 00:08:31,850
is kind of duplicating what jungle does

00:08:29,690 --> 00:08:34,400
anyway because Django create created a

00:08:31,850 --> 00:08:37,220
session right for us or you would need

00:08:34,400 --> 00:08:40,820
to do three authenticate upon every

00:08:37,220 --> 00:08:42,440
access that might have been fine when HT

00:08:40,820 --> 00:08:44,660
password files and basic authentication

00:08:42,440 --> 00:08:46,520
was used it's not fine if you use

00:08:44,660 --> 00:08:47,149
Kerberos because you don't want to

00:08:46,520 --> 00:08:51,089
rename

00:08:47,149 --> 00:08:54,990
upon every request you don't want to

00:08:51,089 --> 00:08:59,610
renegotiate the pond every renegotiate

00:08:54,990 --> 00:09:04,500
sama second problem is if you use the

00:08:59,610 --> 00:09:09,750
standard odd views log in it does not

00:09:04,500 --> 00:09:11,459
really understand when the user has

00:09:09,750 --> 00:09:14,360
already authenticated by us a middleware

00:09:11,459 --> 00:09:17,010
it still shows that login page even if

00:09:14,360 --> 00:09:18,769
the jungle authenticated session has

00:09:17,010 --> 00:09:23,880
already been created

00:09:18,769 --> 00:09:24,720
what's the solution but or how do we

00:09:23,880 --> 00:09:29,100
want it to work

00:09:24,720 --> 00:09:32,240
we want our extra authentication the one

00:09:29,100 --> 00:09:36,449
that the organization requires be it

00:09:32,240 --> 00:09:41,850
Kerberos or gssapi in general beat ssl

00:09:36,449 --> 00:09:45,510
being samo shows some example of is mod

00:09:41,850 --> 00:09:50,220
of milan we want it to be only created

00:09:45,510 --> 00:09:57,000
or only enabled on one login URL the URL

00:09:50,220 --> 00:10:01,019
that we were clicking here were so let

00:09:57,000 --> 00:10:04,290
me log out from single sign-on otherwise

00:10:01,019 --> 00:10:06,690
I will not be able to walk out here this

00:10:04,290 --> 00:10:10,649
is the login I'm talking about for some

00:10:06,690 --> 00:10:17,069
reason it doesn't show the it's slash

00:10:10,649 --> 00:10:21,660
logging so the solution to the first

00:10:17,069 --> 00:10:23,970
problem is coming in Django 1.9 we have

00:10:21,660 --> 00:10:27,120
new authentication middle work or

00:10:23,970 --> 00:10:30,560
persistent remote user middle bar and it

00:10:27,120 --> 00:10:33,630
basically does what it says it will only

00:10:30,560 --> 00:10:35,880
require that remote user external

00:10:33,630 --> 00:10:37,350
authentication to be present when that

00:10:35,880 --> 00:10:40,079
jungle authenticated session is created

00:10:37,350 --> 00:10:42,930
or when the jungle session is Markus

00:10:40,079 --> 00:10:48,199
authenticated and it will basically

00:10:42,930 --> 00:10:48,199
preserve it until you log out in Django

00:10:49,819 --> 00:11:01,170
for the second problem I've come with a

00:10:55,740 --> 00:11:07,129
solution which basically I'm seeking

00:11:01,170 --> 00:11:11,459
some comments about if we check that

00:11:07,129 --> 00:11:15,329
user is authenticated but unfortunately

00:11:11,459 --> 00:11:20,489
we need to write our own view or log in

00:11:15,329 --> 00:11:26,429
and of course it can inherit from the

00:11:20,489 --> 00:11:28,739
standard of use but if we check that the

00:11:26,429 --> 00:11:30,949
user is authenticated we just redirect

00:11:28,739 --> 00:11:35,459
to whatever the landing page of that

00:11:30,949 --> 00:11:37,619
cloaking pages so if the user happened

00:11:35,459 --> 00:11:42,600
if we click the login page and the user

00:11:37,619 --> 00:11:44,999
happened to be authenticated before to

00:11:42,600 --> 00:11:47,220
handle guardians to be involved because

00:11:44,999 --> 00:11:50,249
some middleware kicked in and found that

00:11:47,220 --> 00:11:57,029
we motives are populated we'll just say

00:11:50,249 --> 00:11:59,579
well ok you are authenticated fine Jago

00:11:57,029 --> 00:12:04,290
upstream is not currently very happy

00:11:59,579 --> 00:12:06,569
about this being the default and so at

00:12:04,290 --> 00:12:11,040
the end of the presentation therapy more

00:12:06,569 --> 00:12:15,089
links about how we want to solve the

00:12:11,040 --> 00:12:22,249
problem maybe even is that a problem at

00:12:15,089 --> 00:12:25,499
all now if you have a modern application

00:12:22,249 --> 00:12:29,669
the username that username that log in

00:12:25,499 --> 00:12:31,439
is not enough applications want to send

00:12:29,669 --> 00:12:35,879
notifications to their people or to

00:12:31,439 --> 00:12:38,869
their users so they need some reasonable

00:12:35,879 --> 00:12:42,350
email address applications want to show

00:12:38,869 --> 00:12:45,059
welcome David when leave it locks in and

00:12:42,350 --> 00:12:49,410
operating so they want some additional

00:12:45,059 --> 00:12:52,589
attributes about the user so here's the

00:12:49,410 --> 00:12:55,169
proposal since we started with the

00:12:52,589 --> 00:12:57,839
remote user for the login let's use

00:12:55,169 --> 00:13:02,119
remote user and underscore attribute for

00:12:57,839 --> 00:13:06,149
attributes of that user we've actually

00:13:02,119 --> 00:13:10,110
done that in other non jung-geun on

00:13:06,149 --> 00:13:12,499
titan project and it seems to work

00:13:10,110 --> 00:13:12,499
pretty well

00:13:13,170 --> 00:13:19,960
if you are using SSD based installations

00:13:17,590 --> 00:13:22,960
you can use mode lookup identity Apache

00:13:19,960 --> 00:13:26,620
module to configure basically mapping of

00:13:22,960 --> 00:13:28,510
LDAP or other attributes to those

00:13:26,620 --> 00:13:32,080
environment rubbers if you use motor

00:13:28,510 --> 00:13:34,870
bound for summer you can do the same so

00:13:32,080 --> 00:13:38,830
it's possible with if you are depending

00:13:34,870 --> 00:13:39,400
on extra maybe a party maybe nginx in

00:13:38,830 --> 00:13:42,700
the future

00:13:39,400 --> 00:13:43,720
maybe some other front-end server but if

00:13:42,700 --> 00:13:46,780
you are depending on external

00:13:43,720 --> 00:13:49,660
authentication we should also somehow

00:13:46,780 --> 00:13:51,910
expect that that external environment

00:13:49,660 --> 00:13:53,980
that front-end HTTP server is able to

00:13:51,910 --> 00:13:56,890
populate some other environment

00:13:53,980 --> 00:14:02,740
wearables or headers whatever you call

00:13:56,890 --> 00:14:06,910
it than just remote user how do we

00:14:02,740 --> 00:14:12,430
consume those attributes in Django well

00:14:06,910 --> 00:14:17,680
I have removed user after Middleburg

00:14:12,430 --> 00:14:20,980
which basically checks that the user as

00:14:17,680 --> 00:14:24,070
we see authenticated in general is to

00:14:20,980 --> 00:14:26,140
one matching in the header so that

00:14:24,070 --> 00:14:31,270
there's no mismatch and then it just

00:14:26,140 --> 00:14:34,210
uses those attributes set the attribute

00:14:31,270 --> 00:14:36,970
uses those environment variables or meta

00:14:34,210 --> 00:14:46,240
values set attributes for user and saves

00:14:36,970 --> 00:14:50,920
a point if I had a pointer so what this

00:14:46,240 --> 00:14:54,040
means is that upon every request not

00:14:50,920 --> 00:14:57,040
just remote user middleware creates the

00:14:54,040 --> 00:14:59,770
user which is what you would what would

00:14:57,040 --> 00:15:02,110
happen normally because you need that

00:14:59,770 --> 00:15:04,240
user record created in your application

00:15:02,110 --> 00:15:07,260
database otherwise your foreign keys

00:15:04,240 --> 00:15:12,190
won't won't match won't have anything to

00:15:07,260 --> 00:15:15,910
point to but will refresh that user

00:15:12,190 --> 00:15:18,340
record whenever authenticated session is

00:15:15,910 --> 00:15:21,630
started so we have fresh data about

00:15:18,340 --> 00:15:23,760
about the user by the way feel free to

00:15:21,630 --> 00:15:29,670
raise your hand

00:15:23,760 --> 00:15:31,680
and ask at any time when you don't like

00:15:29,670 --> 00:15:39,860
something or when you're confused or

00:15:31,680 --> 00:15:46,250
when you want to add something now

00:15:39,860 --> 00:15:51,420
that's nice but I said that we also want

00:15:46,250 --> 00:15:55,500
user membership to somehow relate to

00:15:51,420 --> 00:16:00,780
permissions that the person has in in

00:15:55,500 --> 00:16:04,950
that application so the networking

00:16:00,780 --> 00:16:10,020
people network admins will be put by thr

00:16:04,950 --> 00:16:11,850
to some groups which will make them have

00:16:10,020 --> 00:16:14,490
more privileges in the networking

00:16:11,850 --> 00:16:17,100
admitted application than the normal

00:16:14,490 --> 00:16:19,140
people and it's not a bullying thing

00:16:17,100 --> 00:16:21,870
it's not like you either get in or

00:16:19,140 --> 00:16:26,010
you're completely out because for

00:16:21,870 --> 00:16:29,310
example how does people you often want

00:16:26,010 --> 00:16:31,680
them to have access to everything but

00:16:29,310 --> 00:16:35,160
read online so that they can check

00:16:31,680 --> 00:16:37,920
status on all things if it's for example

00:16:35,160 --> 00:16:42,390
my background is system and network

00:16:37,920 --> 00:16:45,900
administration so if I have IT hub dusk

00:16:42,390 --> 00:16:49,020
they need to be able to see into things

00:16:45,900 --> 00:16:59,490
they should not be able to modify

00:16:49,020 --> 00:17:01,560
anything only so based on their group

00:16:59,490 --> 00:17:06,150
membership in Active Directory or

00:17:01,560 --> 00:17:13,140
somewhere else they should be given

00:17:06,150 --> 00:17:20,370
application specific permissions the

00:17:13,140 --> 00:17:26,209
similar way if I log in back as Bob the

00:17:20,370 --> 00:17:29,480
similar way Bob got his three

00:17:26,209 --> 00:17:29,480
permissions here

00:17:30,550 --> 00:17:41,880
so here's the proposal since we don't

00:17:35,470 --> 00:17:48,400
want to tweak the Chango schema too much

00:17:41,880 --> 00:17:52,960
we could have added special model

00:17:48,400 --> 00:17:58,500
special database table to somehow hold

00:17:52,960 --> 00:18:03,640
the mapping but let's start small

00:17:58,500 --> 00:18:11,860
proposal if a group in jungle starts

00:18:03,640 --> 00:18:16,420
with x-com whenever a externally

00:18:11,860 --> 00:18:19,920
authenticated user logs and populate his

00:18:16,420 --> 00:18:22,920
or her membership in those extra fixed

00:18:19,920 --> 00:18:27,940
groups with whatever groups you find

00:18:22,920 --> 00:18:31,330
coming with that user and vice versa if

00:18:27,940 --> 00:18:37,270
the person is in that extra fixed group

00:18:31,330 --> 00:18:38,770
and no longer you see them being member

00:18:37,270 --> 00:18:42,370
of that group when they are

00:18:38,770 --> 00:18:46,420
authenticated remove them so that when

00:18:42,370 --> 00:18:49,180
the person changes departments or is no

00:18:46,420 --> 00:18:54,030
longer working on the project you have

00:18:49,180 --> 00:18:56,530
one central place to do that setting and

00:18:54,030 --> 00:18:59,640
it gets propagated to any application

00:18:56,530 --> 00:19:03,490
which gets hooked to the central server

00:18:59,640 --> 00:19:05,920
while similar to no mechanism at the

00:19:03,490 --> 00:19:10,570
same time if the administrator admins

00:19:05,920 --> 00:19:12,610
need to say that yes this person even if

00:19:10,570 --> 00:19:15,970
they are not network administrator

00:19:12,610 --> 00:19:18,040
person they will need to have certain

00:19:15,970 --> 00:19:22,510
permissions they can use any other

00:19:18,040 --> 00:19:26,020
non-text prefixed groups and manage

00:19:22,510 --> 00:19:30,760
their permissions I'm just proposing

00:19:26,020 --> 00:19:35,520
that those extra flex groups are somehow

00:19:30,760 --> 00:19:35,520
special and yes

00:20:06,070 --> 00:20:33,140
but you also users a problem I did not

00:20:30,920 --> 00:20:38,780
want to get that deep in the store so

00:20:33,140 --> 00:20:42,940
you are hurt so we said that we would

00:20:38,780 --> 00:20:46,910
have that we could have remote user

00:20:42,940 --> 00:20:52,430
email for email so why not have remote

00:20:46,910 --> 00:20:54,830
user group for groups and the way you

00:20:52,430 --> 00:20:56,750
can set it up and model cap identity

00:20:54,830 --> 00:21:00,800
which does lookups using SSD which is

00:20:56,750 --> 00:21:04,070
also our authentication an identity

00:21:00,800 --> 00:21:06,800
solution and the way it is possible it

00:21:04,070 --> 00:21:09,290
in mode or poem in the coming coming

00:21:06,800 --> 00:21:13,430
word version that I hope or be released

00:21:09,290 --> 00:21:17,360
soon is that it populates group

00:21:13,430 --> 00:21:19,460
underscore n so that you know how many

00:21:17,360 --> 00:21:23,210
groups are coming and then you have

00:21:19,460 --> 00:21:26,510
built individual wearables with separate

00:21:23,210 --> 00:21:30,160
names another possibility would be to

00:21:26,510 --> 00:21:36,110
have it just callin separating one value

00:21:30,160 --> 00:21:39,380
a possible way to do it and then we have

00:21:36,110 --> 00:21:43,460
the middleware and yes the the perfect

00:21:39,380 --> 00:21:45,890
is is somehow hard-coded here because we

00:21:43,460 --> 00:21:47,450
I thought that we need to start small

00:21:45,890 --> 00:21:50,210
and start somehow

00:21:47,450 --> 00:21:52,490
and then we look at the groups that we

00:21:50,210 --> 00:21:55,970
get we look at the groups that we

00:21:52,490 --> 00:22:03,399
currently have and we basically update

00:21:55,970 --> 00:22:09,909
what we have and then call call this and

00:22:03,399 --> 00:22:14,779
save the user and update the user so I

00:22:09,909 --> 00:22:24,110
showed you how how it can work with some

00:22:14,779 --> 00:22:27,730
oh let me do it with Kerberos but me log

00:22:24,110 --> 00:22:34,460
out so that we have some how he wanna

00:22:27,730 --> 00:22:40,429
state what user would you like me to

00:22:34,460 --> 00:22:45,049
create come on say something well you

00:22:40,429 --> 00:22:57,590
you be very sound and your penny penny

00:22:45,049 --> 00:23:01,039
okay let me give her a password let me

00:22:57,590 --> 00:23:05,029
charge you maybe smaller so that you can

00:23:01,039 --> 00:23:08,649
see more yes it works and I will not

00:23:05,029 --> 00:23:13,340
just create the account oh I've been

00:23:08,649 --> 00:23:18,380
speaking too long so I need to Rio

00:23:13,340 --> 00:23:23,659
Dental 8 as administrator which would be

00:23:18,380 --> 00:23:29,750
much easier if I saw the bottom of the

00:23:23,659 --> 00:23:34,399
page okay so we have penny created and

00:23:29,750 --> 00:23:37,100
let's put penny into network admins

00:23:34,399 --> 00:23:43,539
group because she's joined a IT

00:23:37,100 --> 00:23:51,169
department so we just created penny

00:23:43,539 --> 00:23:54,460
let's change email address why do we

00:23:51,169 --> 00:23:54,460
have email addresses here

00:23:55,410 --> 00:24:08,610
so that you can trust me that it's not

00:24:02,500 --> 00:24:08,610
just faking it so we have penny created

00:24:11,310 --> 00:24:19,560
sorry

00:24:13,810 --> 00:24:31,240
we have penny created let's connect as

00:24:19,560 --> 00:24:33,640
penny and Kerberos lights realms by

00:24:31,240 --> 00:24:35,290
default VIP a creates the users with the

00:24:33,640 --> 00:24:38,800
password expires so I had to change the

00:24:35,290 --> 00:24:42,610
password but I have a ticket granting

00:24:38,800 --> 00:24:46,840
ticket for those of you who are fluent

00:24:42,610 --> 00:24:48,870
in Kerberos which basically means it's a

00:24:46,840 --> 00:24:55,750
good thing

00:24:48,870 --> 00:24:58,510
so let's verify what we have in the

00:24:55,750 --> 00:25:05,590
jungle application we still only have

00:24:58,510 --> 00:25:07,390
admin and Bob and now well now I need to

00:25:05,590 --> 00:25:21,580
change the configuration of that

00:25:07,390 --> 00:25:26,500
application because I have epsilon which

00:25:21,580 --> 00:25:29,740
is the client for summer here so let's

00:25:26,500 --> 00:25:32,550
remove that I could have used both but I

00:25:29,740 --> 00:25:38,170
don't don't want to complicate things

00:25:32,550 --> 00:25:40,560
and Chango external configuration let's

00:25:38,170 --> 00:25:40,560
put it

00:25:47,150 --> 00:25:55,710
press start approaching and so I'm I'm

00:25:52,800 --> 00:25:58,320
logged in single signed on this is what

00:25:55,710 --> 00:26:00,210
you would see you would see a TGT if you

00:25:58,320 --> 00:26:00,600
logged in on your Windows machine as

00:26:00,210 --> 00:26:09,120
well

00:26:00,600 --> 00:26:13,320
let's click login' now we can see the

00:26:09,120 --> 00:26:16,670
penny has locked them even if she did

00:26:13,320 --> 00:26:20,400
not have any counter if i refresh now

00:26:16,670 --> 00:26:23,790
the account is there I can see that her

00:26:20,400 --> 00:26:29,340
email address is there alright and I can

00:26:23,790 --> 00:26:34,710
check that bonnie is a member of X

00:26:29,340 --> 00:26:36,870
network admins group so her group

00:26:34,710 --> 00:26:45,600
membership that I created that I set up

00:26:36,870 --> 00:26:48,720
in free IPA got propagated and if I look

00:26:45,600 --> 00:26:51,660
at that network admins group that I had

00:26:48,720 --> 00:26:54,630
pre created you can see that it has

00:26:51,660 --> 00:26:55,820
listed this for randomly pick just for

00:26:54,630 --> 00:26:59,130
the purpose of this presentation

00:26:55,820 --> 00:27:03,870
permissions and you know if I look at

00:26:59,130 --> 00:27:08,420
what the application says to planning at

00:27:03,870 --> 00:27:08,420
least just exactly these for permissions

00:27:09,740 --> 00:27:19,890
conclusion it is possible to support

00:27:17,040 --> 00:27:24,210
multiple authentication mechanism

00:27:19,890 --> 00:27:26,310
without writing Python code now this is

00:27:24,210 --> 00:27:32,190
a Python conference so you might not

00:27:26,310 --> 00:27:34,650
find that a good thing but first it

00:27:32,190 --> 00:27:37,110
might be required that a front and

00:27:34,650 --> 00:27:40,680
authentication should be used because

00:27:37,110 --> 00:27:45,270
it's what the company or government body

00:27:40,680 --> 00:27:48,420
uses and that implementation might

00:27:45,270 --> 00:27:51,300
actually be much harder than you can

00:27:48,420 --> 00:27:55,200
imagine if you start from strips from

00:27:51,300 --> 00:27:58,300
scratch in Jungle one online it is

00:27:55,200 --> 00:28:00,620
possible to easily use

00:27:58,300 --> 00:28:02,870
authentication enabled that external

00:28:00,620 --> 00:28:05,930
authentication enabled in a patch or

00:28:02,870 --> 00:28:09,850
another front-end server just for the

00:28:05,930 --> 00:28:14,930
login URL and it will survive is that

00:28:09,850 --> 00:28:16,850
persistent remote use mid wire you need

00:28:14,930 --> 00:28:19,250
to be careful if you especially if you

00:28:16,850 --> 00:28:20,540
want that login page to still be

00:28:19,250 --> 00:28:23,030
available than the external

00:28:20,540 --> 00:28:25,790
authentication fails because you might

00:28:23,030 --> 00:28:28,460
want users to use Kerberos but fallback

00:28:25,790 --> 00:28:34,400
if they don't have a ticket and by the

00:28:28,460 --> 00:28:37,520
way just so that you trust me that

00:28:34,400 --> 00:28:41,420
CalPERS happened you can see the HTTP

00:28:37,520 --> 00:28:45,520
service ticket was created so it really

00:28:41,420 --> 00:28:45,520
was Kerberos that authenticated panic

00:28:47,560 --> 00:28:55,040
now yes traditionally remote user was

00:28:52,400 --> 00:28:57,620
what authenticated users and in Django

00:28:55,040 --> 00:29:00,350
we had the functionality to create that

00:28:57,620 --> 00:29:03,650
user automatically about the first login

00:29:00,350 --> 00:29:07,220
for some time but these days you

00:29:03,650 --> 00:29:09,920
probably want more than that attributes

00:29:07,220 --> 00:29:11,840
of the user and yes you need to find a

00:29:09,920 --> 00:29:15,230
way to somehow match what you have in

00:29:11,840 --> 00:29:17,780
your corporate identity management to

00:29:15,230 --> 00:29:21,250
what atributes each and every

00:29:17,780 --> 00:29:24,940
application edge to the to the model and

00:29:21,250 --> 00:29:29,270
more importantly group membership

00:29:24,940 --> 00:29:31,490
because you can link permissions to

00:29:29,270 --> 00:29:33,380
groups and have that those permissions

00:29:31,490 --> 00:29:36,020
pre created and predefined and when the

00:29:33,380 --> 00:29:42,290
user gets created they get propagated

00:29:36,020 --> 00:29:45,350
and you can use them again we were not

00:29:42,290 --> 00:29:48,890
writing a lot of Python code or we were

00:29:45,350 --> 00:29:51,350
not writing some or Kerberos in Python

00:29:48,890 --> 00:29:54,920
we are just consuming external

00:29:51,350 --> 00:29:57,530
authentication depending on your view

00:29:54,920 --> 00:30:00,470
it's either a good thing or bad thing so

00:29:57,530 --> 00:30:05,810
I am I welcome your questions and

00:30:00,470 --> 00:30:07,890
comments and here are some links to go

00:30:05,810 --> 00:30:12,620
with this presentation

00:30:07,890 --> 00:30:12,620
and now really ask me some questions

00:30:18,470 --> 00:30:21,470
actually

00:30:23,090 --> 00:30:37,799
what about federated logout the identity

00:30:31,309 --> 00:30:40,110
first it's hard ii did say own identity

00:30:37,799 --> 00:30:41,880
provider does support it and someone

00:30:40,110 --> 00:30:43,799
does support it but depending on on the

00:30:41,880 --> 00:30:48,210
protocol you use it's either possible or

00:30:43,799 --> 00:30:50,490
not so if you are thinking about a kill

00:30:48,210 --> 00:30:54,990
switch if the person gets fired should

00:30:50,490 --> 00:30:56,730
they really blog out I don't think that

00:30:54,990 --> 00:31:02,299
you'll find a solution like standard

00:30:56,730 --> 00:31:02,299
solution so I was not focusing on that

00:31:50,080 --> 00:31:56,960
my questions actually pre simmer I

00:31:52,730 --> 00:31:59,360
thought about more omadi connect so when

00:31:56,960 --> 00:32:01,840
I already have a single sign on base for

00:31:59,360 --> 00:32:04,610
example Almighty connect anything else

00:32:01,840 --> 00:32:06,620
is do I depend on the implementation

00:32:04,610 --> 00:32:08,630
Django that it's possible to connect it

00:32:06,620 --> 00:32:12,700
or how does it work because you were

00:32:08,630 --> 00:32:16,910
talking about a lot about Kerberos or

00:32:12,700 --> 00:32:20,960
saml so what is very necessary that I'm

00:32:16,910 --> 00:32:23,180
able to connect my single sign-on my

00:32:20,960 --> 00:32:29,900
answer would be what does your Apache

00:32:23,180 --> 00:32:32,810
support because I'm really trying to not

00:32:29,900 --> 00:32:35,660
do it in Django I'm trying to build a

00:32:32,810 --> 00:32:39,070
firm framework is a bad word but I'm

00:32:35,660 --> 00:32:43,070
trying to find a approach in Django

00:32:39,070 --> 00:32:45,290
which would make it possible to use what

00:32:43,070 --> 00:32:48,920
may be other languages and frameworks

00:32:45,290 --> 00:32:53,090
use so if it's implemented for Apache or

00:32:48,920 --> 00:32:55,130
for for some other front-end web server

00:32:53,090 --> 00:32:59,120
then you should be able to consume in

00:32:55,130 --> 00:33:00,890
this way without having direct direct

00:32:59,120 --> 00:33:05,140
support for it or direct knowledge about

00:33:00,890 --> 00:33:05,140
that protocol in Django itself

00:33:19,710 --> 00:33:27,869
yes but at the end of the day you get

00:33:23,200 --> 00:33:32,710
authenticated user and some attribute so

00:33:27,869 --> 00:33:35,080
all I'm saying is don't try to or maybe

00:33:32,710 --> 00:33:37,539
you don't want to try to address it in

00:33:35,080 --> 00:33:39,999
Django maybe you want to find existing

00:33:37,539 --> 00:33:43,839
solution for that and just consume there

00:33:39,999 --> 00:33:46,059
is out and it does not really matter how

00:33:43,839 --> 00:33:49,679
many round trips the protocol mandates

00:33:46,059 --> 00:33:53,259
to get the users authenticated

00:33:49,679 --> 00:33:55,719
eventually you will get the remote user

00:33:53,259 --> 00:33:57,399
or the indication that the user has

00:33:55,719 --> 00:34:07,149
authenticated and that's what you use

00:33:57,399 --> 00:34:07,719
here hi we actually used to work

00:34:07,149 --> 00:34:12,039
together

00:34:07,719 --> 00:34:14,079
and I'm wondering if you have ever made

00:34:12,039 --> 00:34:16,299
like a similar Django app but with like

00:34:14,079 --> 00:34:21,309
you whiskey or something else other than

00:34:16,299 --> 00:34:23,289
Apache with us key or some other so

00:34:21,309 --> 00:34:26,250
rather than like Apache well we actually

00:34:23,289 --> 00:34:29,319
had a person working on on the module on

00:34:26,250 --> 00:34:32,679
on the modules for for nginx so we're

00:34:29,319 --> 00:34:36,849
trying to somehow expand the approach to

00:34:32,679 --> 00:34:44,529
non Apache but we are only focusing on

00:34:36,849 --> 00:34:46,750
Apache yes and again it would be about

00:34:44,529 --> 00:34:50,950
implementing those protocols in those

00:34:46,750 --> 00:34:55,950
additional servers and then consuming

00:34:50,950 --> 00:34:55,950
the result in hopefully a standard way

00:34:59,549 --> 00:35:03,510

YouTube URL: https://www.youtube.com/watch?v=62_jD-8zV4M


