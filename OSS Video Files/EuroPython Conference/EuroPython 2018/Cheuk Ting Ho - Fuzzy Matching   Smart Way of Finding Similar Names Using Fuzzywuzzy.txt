Title: Cheuk Ting Ho - Fuzzy Matching   Smart Way of Finding Similar Names Using Fuzzywuzzy
Publication date: 2018-08-22
Playlist: EuroPython 2018
Description: 
	Fuzzy Matching - Smart Way of Finding Similar Names Using Fuzzywuzzy
[EuroPython 2018 - Talk - 2018-07-25 - PyCharm [PyData]]
[Edinburgh, UK]

By Cheuk Ting Ho

Matching strings should be one of the first natural language processing problem that human encounter since we start use computer to handle data. Unlike numerical value which has an exact logic to compare them, it is very hard to say how alike two strings are for a computer. One may compare them character by character and have an idea of how many characters in the pair of stings are the same. Unfortunately in most application we need computer to perceive strings like we do and therefore we have to use fuzzy matching. Fuzzy matching on names is never straight forward though, the definition of how “difference” of two names are really depends case by case. For example with restaurant names, matching of words like “cafe” “bar” and “restaurant” are consider less valuable then matching of some other less common words. Also, do we consider company names that matches partly (like “Happy Unicorn company” and Happy Unicorn co.”) are the same?

In the first half of the talk Levenshtein Distance, a measure of the similarity between two strings, will be explained. Different functions in Fuzzywuzzy like “partial em ratio” and “token/em sort_ratio” will also be explored and compared for difference. It is very important to understand our tool and choose the right one for our task. Then in the second half, we will start tackling the example problem: matching company names, we will show that besides using Fuzzywuzzy, we have to also handle problem like finding and avoid matching of common words and speeding up the matching process by grouping the names. By combining all tricks and techniques that we demonstrate, we will also evaluate how efficient this method is and the advantage of using this method.

This talk is for people in all level of Python experience who would like to learn a trick or two and would like to be able to solve similar problems in the future. Theory of how the library works will be explained and It is easy to be pick up even for beginners.



License: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/
Please see our speaker release agreement for details: https://ep2018.europython.eu/en/speaker-release-agreement/
Captions: 
	00:00:00,890 --> 00:00:08,610
so yeah thank you very much after lunch

00:00:05,549 --> 00:00:13,559
and then you join my session so welcome

00:00:08,610 --> 00:00:16,650
and so yes this talk will be beginners

00:00:13,559 --> 00:00:18,600
friendly so I won't dive deep down into

00:00:16,650 --> 00:00:20,970
the detail of like how the package work

00:00:18,600 --> 00:00:23,100
and all this if you are into something

00:00:20,970 --> 00:00:25,680
really technical I'm sorry may be laggy

00:00:23,100 --> 00:00:29,340
but I'll tell you how I use the package

00:00:25,680 --> 00:00:31,830
and what is the theory behind and how I

00:00:29,340 --> 00:00:35,160
use it just some tips for people who may

00:00:31,830 --> 00:00:37,680
be using it in the future and it's like

00:00:35,160 --> 00:00:41,460
it's a you know PI data style you know

00:00:37,680 --> 00:00:43,559
like so here who is kind of like

00:00:41,460 --> 00:00:47,700
identify themselves as data scientist

00:00:43,559 --> 00:00:50,360
analyst working with data yeah great so

00:00:47,700 --> 00:00:55,140
yeah I hope you will find it useful so

00:00:50,360 --> 00:00:57,390
yeah that's my um you know tweeted there

00:00:55,140 --> 00:00:59,160
and you know github and you will find

00:00:57,390 --> 00:01:02,960
the code on github actually and also

00:00:59,160 --> 00:01:05,729
remember to attack your Python and now

00:01:02,960 --> 00:01:10,470
please rate my talk afterwards oh thank

00:01:05,729 --> 00:01:12,030
you okay and then yeah I am check or you

00:01:10,470 --> 00:01:14,490
can call me sherry all my friend does

00:01:12,030 --> 00:01:16,200
and I'm working in hotel pass I'm

00:01:14,490 --> 00:01:19,590
organising an AI Club for gender

00:01:16,200 --> 00:01:22,759
minority which is in in London so yeah I

00:01:19,590 --> 00:01:26,280
based in London so we trying to promote

00:01:22,759 --> 00:01:28,100
you know gender equality in in the

00:01:26,280 --> 00:01:32,520
technology so I was trying to you know

00:01:28,100 --> 00:01:35,460
encourage and empower gender minorities

00:01:32,520 --> 00:01:37,470
like mainly women who yeah who is like

00:01:35,460 --> 00:01:40,590
struggling you know feel a bit you know

00:01:37,470 --> 00:01:43,259
not enough support in the community so

00:01:40,590 --> 00:01:46,619
we try to help also I am a member of

00:01:43,259 --> 00:01:48,420
pythons prints so if you are you know if

00:01:46,619 --> 00:01:51,210
you have like me are coming from London

00:01:48,420 --> 00:01:53,909
and then next week we will have a sprint

00:01:51,210 --> 00:01:56,969
for Pentos documentation so which is for

00:01:53,909 --> 00:01:59,700
gender minority so if you are - like me

00:01:56,969 --> 00:02:02,430
and you want to start contributing to

00:01:59,700 --> 00:02:04,680
pandas or other will have other events

00:02:02,430 --> 00:02:06,630
for other libraries as well so if you

00:02:04,680 --> 00:02:08,160
want to contribute and you you don't

00:02:06,630 --> 00:02:10,129
know how to get started you you're

00:02:08,160 --> 00:02:13,240
welcome to join or if you are super

00:02:10,129 --> 00:02:15,840
senior you're like very experienced and

00:02:13,240 --> 00:02:20,380
you're welcome to help out as well so

00:02:15,840 --> 00:02:23,560
okay all of those things clear so why

00:02:20,380 --> 00:02:26,230
why we are doing this like matching

00:02:23,560 --> 00:02:29,770
company names like string matching and

00:02:26,230 --> 00:02:31,690
so yeah I was having a problem at work

00:02:29,770 --> 00:02:34,840
like I want to match like there's a list

00:02:31,690 --> 00:02:38,470
of companies which is my my company's

00:02:34,840 --> 00:02:41,050
coin and I want to find some similar

00:02:38,470 --> 00:02:43,360
names in it but of course it's not

00:02:41,050 --> 00:02:46,570
limited to to my company right so um

00:02:43,360 --> 00:02:50,680
like why why we want to match the name

00:02:46,570 --> 00:02:53,700
so I have some kind of funny and counter

00:02:50,680 --> 00:02:59,280
and on Facebook actually because

00:02:53,700 --> 00:02:59,280
somewhere in China I saw this pictures

00:03:00,090 --> 00:03:03,180
[Music]

00:03:05,250 --> 00:03:13,480
it's giving credit to a company in USA

00:03:08,170 --> 00:03:17,460
obviously yeah and this one quickly skip

00:03:13,480 --> 00:03:20,770
blue is a very nasty type over there so

00:03:17,460 --> 00:03:22,150
if I want to see like okay if I have a

00:03:20,770 --> 00:03:24,370
list of company and some of the company

00:03:22,150 --> 00:03:27,310
like those I want to see all are they

00:03:24,370 --> 00:03:29,110
the one that the coffee shop that you're

00:03:27,310 --> 00:03:32,740
like we drink coffee and with my cakes

00:03:29,110 --> 00:03:35,380
and are they the same so can you tell me

00:03:32,740 --> 00:03:41,830
like what would they resolve it off

00:03:35,380 --> 00:03:42,160
those yeah all force so I can't do it

00:03:41,830 --> 00:03:45,610
like that

00:03:42,160 --> 00:03:48,100
I am everybody knows that so maybe I can

00:03:45,610 --> 00:03:53,080
be smart maybe I can use some string

00:03:48,100 --> 00:03:55,150
methods to do it so who knows like what

00:03:53,080 --> 00:03:57,220
what string method I could I could use

00:03:55,150 --> 00:04:01,060
two to make the first one become force

00:03:57,220 --> 00:04:08,230
like to do some modification yeah I

00:04:01,060 --> 00:04:10,720
pulled over how about a second one that

00:04:08,230 --> 00:04:13,930
different ways but I found a way to do

00:04:10,720 --> 00:04:16,570
it which is um yeah I'll show you and

00:04:13,930 --> 00:04:18,870
then the last one unless this Tovar the

00:04:16,570 --> 00:04:18,870
last one

00:04:20,040 --> 00:04:24,310
yeah I will show you the thing that I

00:04:22,570 --> 00:04:28,510
could think about like yeah I would

00:04:24,310 --> 00:04:30,970
place the spacebar and I I just yes it's

00:04:28,510 --> 00:04:32,740
mr. where I am if what if it's not like

00:04:30,970 --> 00:04:35,140
Starbucks there's like Starbucks

00:04:32,740 --> 00:04:38,530
exclamation mark and then it doesn't

00:04:35,140 --> 00:04:40,420
work right so so we need something else

00:04:38,530 --> 00:04:43,660
to kind of find all these similar

00:04:40,420 --> 00:04:46,390
strings so I have no this one it's

00:04:43,660 --> 00:04:48,520
called fastly matching like it's just a

00:04:46,390 --> 00:04:50,250
funny names like fuzzy a thing about you

00:04:48,520 --> 00:04:53,950
know I kill anyone's like they're like

00:04:50,250 --> 00:04:56,140
but yeah that's wicked media's

00:04:53,950 --> 00:04:58,870
definition it's too long I just don't

00:04:56,140 --> 00:05:00,250
like to read long paragraphs but

00:04:58,870 --> 00:05:02,440
actually basically what it means it's

00:05:00,250 --> 00:05:04,330
just matching to strange that it's not

00:05:02,440 --> 00:05:07,020
exactly the same but we want to find a

00:05:04,330 --> 00:05:11,290
way to score them how similar they are

00:05:07,020 --> 00:05:15,280
so well now we have something very you

00:05:11,290 --> 00:05:19,420
know smart coming out so this is kind of

00:05:15,280 --> 00:05:21,580
named after Russian scientists I hope I

00:05:19,420 --> 00:05:23,560
pronounced it right if you you speak

00:05:21,580 --> 00:05:27,280
Russian then yeah you can tell me it's a

00:05:23,560 --> 00:05:29,830
but me yeah the French time is it

00:05:27,280 --> 00:05:32,590
correct no sigh and let me sighs

00:05:29,830 --> 00:05:35,260
distance so I I'm still doing it wrong

00:05:32,590 --> 00:05:38,700
but yeah forgive me yes so it's

00:05:35,260 --> 00:05:41,560
basically telling there'll be a number

00:05:38,700 --> 00:05:44,230
you know an integer that says like oh

00:05:41,560 --> 00:05:46,960
how much alternation I have to do from

00:05:44,230 --> 00:05:49,450
changing a string a two string B so if I

00:05:46,960 --> 00:05:51,970
delete one character that would be one

00:05:49,450 --> 00:05:55,090
one change if I change that like for

00:05:51,970 --> 00:05:57,910
example from an a to an E that would be

00:05:55,090 --> 00:06:01,480
also one oscillation and or acting

00:05:57,910 --> 00:06:03,510
something so yeah so if it's that if

00:06:01,480 --> 00:06:06,190
that number is bigger this are the

00:06:03,510 --> 00:06:07,780
levenshtein distance is bigger than the

00:06:06,190 --> 00:06:10,510
two strains more different

00:06:07,780 --> 00:06:14,290
so it's sounds very intuitive right so

00:06:10,510 --> 00:06:16,750
how can I do it in programs I've dynamic

00:06:14,290 --> 00:06:19,900
programming it sounds smart right but

00:06:16,750 --> 00:06:21,790
actually yeah I just I just I got this

00:06:19,900 --> 00:06:24,790
picture it's not my picture I should

00:06:21,790 --> 00:06:26,740
give credit is from from from github

00:06:24,790 --> 00:06:29,950
actually there's a JavaScript library

00:06:26,740 --> 00:06:31,930
that is implemented this but of course

00:06:29,950 --> 00:06:32,770
I'm using Python so I'm not talking

00:06:31,930 --> 00:06:35,470
about that

00:06:32,770 --> 00:06:36,910
packages but yeah if you if you find my

00:06:35,470 --> 00:06:39,039
slides and you can click on it and you

00:06:36,910 --> 00:06:41,979
will go to there and like have a look at

00:06:39,039 --> 00:06:45,129
their github repo so this is the big

00:06:41,979 --> 00:06:47,349
graph right your matrix I don't know how

00:06:45,129 --> 00:06:50,830
you should call it but you can see like

00:06:47,349 --> 00:06:52,539
from the top left hand side the is 0

00:06:50,830 --> 00:06:56,289
because there's no change

00:06:52,539 --> 00:06:57,669
and then if ok we just go from one one

00:06:56,289 --> 00:07:00,940
character to one character so first

00:06:57,669 --> 00:07:03,460
character they are the same so if you so

00:07:00,940 --> 00:07:04,060
basically you don't need to change

00:07:03,460 --> 00:07:05,979
anything

00:07:04,060 --> 00:07:09,819
so they would be the same right both s

00:07:05,979 --> 00:07:11,860
but you can see like for example if I go

00:07:09,819 --> 00:07:14,919
one step to the right I'm adding one

00:07:11,860 --> 00:07:16,569
word to choose to Saturday so if I spell

00:07:14,919 --> 00:07:18,580
Saturday it would be adding one word

00:07:16,569 --> 00:07:21,250
each so it would be again see the first

00:07:18,580 --> 00:07:23,440
one two five six seven eight if I go

00:07:21,250 --> 00:07:26,469
down it's like adding words to Sunday so

00:07:23,440 --> 00:07:30,370
you can also see that as well so it's

00:07:26,469 --> 00:07:35,379
from zero to two to that do that carrot

00:07:30,370 --> 00:07:37,300
do that word so what if I have now I

00:07:35,379 --> 00:07:40,000
have two two characters I have for

00:07:37,300 --> 00:07:42,580
example Saturday I have like s a if I

00:07:40,000 --> 00:07:44,919
want to change it to like Sunday so as

00:07:42,580 --> 00:07:48,580
that should be su right so I have to

00:07:44,919 --> 00:07:50,740
change a to the U so if you look at the

00:07:48,580 --> 00:07:51,909
intersection of the a and au that would

00:07:50,740 --> 00:07:55,210
be one so you have to change one

00:07:51,909 --> 00:07:56,889
character so this is what this is and of

00:07:55,210 --> 00:08:00,099
course it's dynamic programming so it's

00:07:56,889 --> 00:08:01,240
like so if you you have first you have

00:08:00,099 --> 00:08:03,460
the small problem and then you can

00:08:01,240 --> 00:08:05,080
expand it and to the end and at the end

00:08:03,460 --> 00:08:06,789
you can find that the minimal change is

00:08:05,080 --> 00:08:10,180
free and then you can work your way back

00:08:06,789 --> 00:08:12,460
up and find the path the minimum path

00:08:10,180 --> 00:08:15,789
that you have to do to change Saturday

00:08:12,460 --> 00:08:19,719
to Sunday so yeah you can see there's

00:08:15,789 --> 00:08:25,060
some transformation some deletion which

00:08:19,719 --> 00:08:27,039
you can see from the graph so I'm not

00:08:25,060 --> 00:08:30,550
talking about that wrapper because that

00:08:27,039 --> 00:08:35,490
is in Java so JavaScript believe it

00:08:30,550 --> 00:08:38,289
yeah JavaScript so yeah and so I'm using

00:08:35,490 --> 00:08:40,329
Python so which is I can use our fuzzy

00:08:38,289 --> 00:08:41,440
wuzzy which is also a funny name which I

00:08:40,329 --> 00:08:46,389
love

00:08:41,440 --> 00:08:48,339
so why I use that is like why is it like

00:08:46,389 --> 00:08:50,860
better that I really like it that much

00:08:48,339 --> 00:08:53,050
is because it's not just using the

00:08:50,860 --> 00:08:53,740
levenshtein distance that you know I can

00:08:53,050 --> 00:08:56,170
do

00:08:53,740 --> 00:08:58,959
compared to strains it also provides

00:08:56,170 --> 00:09:02,589
some very some features that's very

00:08:58,959 --> 00:09:06,339
useful for example simple ratio which is

00:09:02,589 --> 00:09:08,139
I can which is the basic one right so

00:09:06,339 --> 00:09:11,829
that one is it's not magic that's basic

00:09:08,139 --> 00:09:15,339
but we can also have pot parsley partial

00:09:11,829 --> 00:09:18,759
ratio which means that if I have for

00:09:15,339 --> 00:09:20,860
example two words that for example my

00:09:18,759 --> 00:09:23,019
name is like I'm Chuck but also if you

00:09:20,860 --> 00:09:24,310
include in my username detecting so

00:09:23,019 --> 00:09:27,550
check and check saying are they the same

00:09:24,310 --> 00:09:29,379
person is it both me so if I use partial

00:09:27,550 --> 00:09:31,990
ratio that would be the same way because

00:09:29,379 --> 00:09:35,290
check saying also contain check is also

00:09:31,990 --> 00:09:37,660
my name so that would give you a score a

00:09:35,290 --> 00:09:39,220
hundred so they are the same but if you

00:09:37,660 --> 00:09:41,199
use simple ratio it won't be the same

00:09:39,220 --> 00:09:43,660
because you have to add hang up like

00:09:41,199 --> 00:09:46,029
four characters to become my name right

00:09:43,660 --> 00:09:49,029
so so that would be give you a lower

00:09:46,029 --> 00:09:51,939
lower score for this first it was the

00:09:49,029 --> 00:09:54,220
matching score and also we have tokens

00:09:51,939 --> 00:09:56,949
so ratio which means that I talk on each

00:09:54,220 --> 00:09:58,839
word and then they can change the order

00:09:56,949 --> 00:10:02,589
for example my name like my name is

00:09:58,839 --> 00:10:04,959
Cheng ho which always my surname but in

00:10:02,589 --> 00:10:06,519
Chinese like in Chinese we have we have

00:10:04,959 --> 00:10:08,769
surname first so my name will be

00:10:06,519 --> 00:10:12,759
actually ho checking in in China Chinese

00:10:08,769 --> 00:10:16,060
so yeah so it's the same person so I

00:10:12,759 --> 00:10:18,610
have to use tokens racial so that would

00:10:16,060 --> 00:10:19,899
be actually still like the free free

00:10:18,610 --> 00:10:21,639
names are the same so it's just the

00:10:19,899 --> 00:10:23,769
order has changed and because you know

00:10:21,639 --> 00:10:25,660
Western culture usually put your first

00:10:23,769 --> 00:10:28,089
give a name first and then your surname

00:10:25,660 --> 00:10:29,769
but in Chinese is different so yeah it's

00:10:28,089 --> 00:10:33,160
still saying it will give you a hundred

00:10:29,769 --> 00:10:35,949
and then for tokens that ratio that

00:10:33,160 --> 00:10:38,050
would be like for example my name if you

00:10:35,949 --> 00:10:40,209
just like for example you skipped a

00:10:38,050 --> 00:10:41,709
middle name right usually if I put my

00:10:40,209 --> 00:10:44,889
first name and my last name that'll be

00:10:41,709 --> 00:10:47,800
Chuck ho so yeah then that would be you

00:10:44,889 --> 00:10:50,139
know is it the same as me I and then it

00:10:47,800 --> 00:10:53,079
would do the token ratio and also if

00:10:50,139 --> 00:10:55,630
it's a subset yeah it will also pass it

00:10:53,079 --> 00:10:57,370
will also give you a 100 score so

00:10:55,630 --> 00:11:00,220
very useful it depends on the use case

00:10:57,370 --> 00:11:03,069
actually it would really help you out so

00:11:00,220 --> 00:11:09,180
you can check out the github repo is

00:11:03,069 --> 00:11:11,829
done by fit key is a very very popular

00:11:09,180 --> 00:11:14,050
library I used it and I really liked it

00:11:11,829 --> 00:11:16,060
so you can go there check it out and

00:11:14,050 --> 00:11:17,949
they have a blog post about you know

00:11:16,060 --> 00:11:20,670
what what the difference between this

00:11:17,949 --> 00:11:25,810
for suppose so yep

00:11:20,670 --> 00:11:27,639
okay so my use case now okay now I have

00:11:25,810 --> 00:11:31,300
the company data but of course I won't

00:11:27,639 --> 00:11:32,560
use my my company's clients data because

00:11:31,300 --> 00:11:35,589
that's confidential

00:11:32,560 --> 00:11:39,790
so I download an example data set which

00:11:35,589 --> 00:11:41,920
is from the open license public database

00:11:39,790 --> 00:11:44,500
which you know all the UK companies if

00:11:41,920 --> 00:11:46,779
they are they have limited liability

00:11:44,500 --> 00:11:50,050
they have to have all these information

00:11:46,779 --> 00:11:52,870
in public so they you can you can

00:11:50,050 --> 00:11:55,060
download it so is there's a lot of

00:11:52,870 --> 00:11:57,519
company actually in this country so I

00:11:55,060 --> 00:12:00,389
only use Cambridge because a lot of

00:11:57,519 --> 00:12:03,160
startups going on there so exciting so

00:12:00,389 --> 00:12:03,639
but there's a lot of company in that

00:12:03,160 --> 00:12:08,970
list

00:12:03,639 --> 00:12:12,970
it's like 15k so quite a lot okay so

00:12:08,970 --> 00:12:15,399
check one because if I just use first

00:12:12,970 --> 00:12:18,550
seem will see and I just checked all

00:12:15,399 --> 00:12:20,529
these names are they the same actually a

00:12:18,550 --> 00:12:22,420
lot of them will be having a high score

00:12:20,529 --> 00:12:24,130
because there are some words that you

00:12:22,420 --> 00:12:26,829
know all the company used right yes you

00:12:24,130 --> 00:12:29,649
can have you know I can have my own you

00:12:26,829 --> 00:12:32,649
know check paying company or whatever

00:12:29,649 --> 00:12:35,620
and everybody can set up a company with

00:12:32,649 --> 00:12:38,589
a name company it's a very common come

00:12:35,620 --> 00:12:41,800
idea right and and limited is very

00:12:38,589 --> 00:12:43,569
common as well so yeah that would be

00:12:41,800 --> 00:12:46,269
less meaningful to mention for example

00:12:43,569 --> 00:12:48,399
if it's talking about my clients there

00:12:46,269 --> 00:12:50,589
are a lot of them because my company is

00:12:48,399 --> 00:12:52,389
doing travel like hotel rooms and stuff

00:12:50,589 --> 00:12:55,120
so a lot of my clients they would have

00:12:52,389 --> 00:12:57,790
travel in the name so which is less

00:12:55,120 --> 00:13:02,439
meaningful so um yeah what I do is like

00:12:57,790 --> 00:13:06,370
I use a small trick that you know I do

00:13:02,439 --> 00:13:08,170
this no count dictionary and I cos or 30

00:13:06,370 --> 00:13:09,490
most common words actually this is also

00:13:08,170 --> 00:13:12,370
useful in doing some

00:13:09,490 --> 00:13:13,000
No Fee stuff as well so recurring themes

00:13:12,370 --> 00:13:15,130
over

00:13:13,000 --> 00:13:19,290
yeah very convenient I just used the

00:13:15,130 --> 00:13:21,970
same idea to do it um okay and then

00:13:19,290 --> 00:13:25,000
another thing it's like I came across a

00:13:21,970 --> 00:13:28,779
problem because there's remember like 15

00:13:25,000 --> 00:13:31,690
15 almost 16 case companies so there's a

00:13:28,779 --> 00:13:34,270
lot of number if we mesh each single one

00:13:31,690 --> 00:13:38,890
of them with the others that would be a

00:13:34,270 --> 00:13:40,930
lot loss to compare which I I don't want

00:13:38,890 --> 00:13:43,420
to have a big project right I don't want

00:13:40,930 --> 00:13:45,640
to have like a GPU and all this stuff to

00:13:43,420 --> 00:13:49,420
train of like to calculate for four-day

00:13:45,640 --> 00:13:52,690
no no it's not gonna work so um and you

00:13:49,420 --> 00:13:54,070
know Python it's not super fast this is

00:13:52,690 --> 00:13:56,380
why I am trying to use some trick

00:13:54,070 --> 00:13:58,089
because I'm thinking about I want to

00:13:56,380 --> 00:14:00,580
match companies today that's highly

00:13:58,089 --> 00:14:01,750
similar so I would just assume that they

00:14:00,580 --> 00:14:04,209
won't make the mistake on the first

00:14:01,750 --> 00:14:06,370
character if like if for example if

00:14:04,209 --> 00:14:08,290
somebody make an account I wait I'm in a

00:14:06,370 --> 00:14:11,350
company name but made a mistake I have a

00:14:08,290 --> 00:14:12,970
typo and oh it's wrong open another

00:14:11,350 --> 00:14:15,370
account with the right name so basically

00:14:12,970 --> 00:14:17,980
a person open two accounts with highly C

00:14:15,370 --> 00:14:22,149
Mon Ami cuz I've made a mistake on the

00:14:17,980 --> 00:14:23,380
first one so um so they I just assume

00:14:22,149 --> 00:14:24,970
that they won't make the mistake in the

00:14:23,380 --> 00:14:26,560
first character because that's very

00:14:24,970 --> 00:14:28,390
obvious usually you type something you

00:14:26,560 --> 00:14:30,160
just have a look at it you if the first

00:14:28,390 --> 00:14:32,640
character is wrong you just catch it so

00:14:30,160 --> 00:14:35,760
um yeah that's the trick that I do

00:14:32,640 --> 00:14:39,850
that's good enough for me

00:14:35,760 --> 00:14:42,399
okay so remember I found out the 30 most

00:14:39,850 --> 00:14:46,149
common worse right so when I do foresee

00:14:42,399 --> 00:14:48,339
matching I would deduct 10 points it's

00:14:46,149 --> 00:14:50,440
like a game right it's like oh because

00:14:48,339 --> 00:14:56,260
you have this word I'll just deduct your

00:14:50,440 --> 00:14:58,600
voice because you know um there cuz I'm

00:14:56,260 --> 00:15:00,850
I will check the score at the end right

00:14:58,600 --> 00:15:04,270
okay if it's having a high score so if

00:15:00,850 --> 00:15:05,800
they just have a score this despair

00:15:04,270 --> 00:15:08,079
having a score just based on they have a

00:15:05,800 --> 00:15:11,010
common word so it's not valid so I have

00:15:08,079 --> 00:15:13,000
to deduct the score so to make them

00:15:11,010 --> 00:15:16,360
balance it out

00:15:13,000 --> 00:15:18,820
is it a is a very good trick it's a you

00:15:16,360 --> 00:15:20,709
may not be but but it works and it's

00:15:18,820 --> 00:15:23,430
very simple it's very easy to implement

00:15:20,709 --> 00:15:27,060
so that's why I do it I think

00:15:23,430 --> 00:15:30,240
in a lot of cases they will work yeah it

00:15:27,060 --> 00:15:32,730
sounds very simple but it works so and

00:15:30,240 --> 00:15:36,569
also I'm I chose choose to use this

00:15:32,730 --> 00:15:38,610
token sauce Reysol because if somebody

00:15:36,569 --> 00:15:40,740
for example somebody type in the names

00:15:38,610 --> 00:15:42,000
if they swap it so they should they

00:15:40,740 --> 00:15:45,750
should be highly similar right so I'm

00:15:42,000 --> 00:15:52,639
considering it like in a word work

00:15:45,750 --> 00:15:55,470
backwards so I choose to use that sorry

00:15:52,639 --> 00:15:57,000
okay so at the end what do I found out

00:15:55,470 --> 00:15:58,759
using that data's that you can go to my

00:15:57,000 --> 00:16:02,509
github and check it out it's just a very

00:15:58,759 --> 00:16:05,610
Jupiter notebook is just very simple and

00:16:02,509 --> 00:16:10,709
as an example that you could you know

00:16:05,610 --> 00:16:12,899
just simply reference back so this the

00:16:10,709 --> 00:16:15,689
thing that I call it like if they if

00:16:12,899 --> 00:16:18,089
they score a score it it's like more

00:16:15,689 --> 00:16:20,879
than 85 then they would be considered

00:16:18,089 --> 00:16:22,560
the same so what are they usually they

00:16:20,879 --> 00:16:26,519
would be like spelling mistakes because

00:16:22,560 --> 00:16:28,110
they they would be like two names that's

00:16:26,519 --> 00:16:30,829
different by you know for someone just

00:16:28,110 --> 00:16:34,829
an S like the Starbucks and Starbucks or

00:16:30,829 --> 00:16:39,630
they would be having one less L or one

00:16:34,829 --> 00:16:40,980
less I are things like that so it's it's

00:16:39,630 --> 00:16:43,829
very easy to make those kind of mistakes

00:16:40,980 --> 00:16:45,540
because if it's an i and an L obviously

00:16:43,829 --> 00:16:48,209
if you look at it that's it's very easy

00:16:45,540 --> 00:16:50,579
to miss so it kind of makes sense for

00:16:48,209 --> 00:16:54,420
human typos it may not be but I just

00:16:50,579 --> 00:16:56,819
suspect that that is you know so number

00:16:54,420 --> 00:16:59,399
three in step number two so that one it

00:16:56,819 --> 00:17:01,949
would be um I would suspect somebody

00:16:59,399 --> 00:17:03,509
having multiple accounts right for

00:17:01,949 --> 00:17:04,319
example if I sign up with an account

00:17:03,509 --> 00:17:07,289
with a username

00:17:04,319 --> 00:17:09,600
I already did it last week with my name

00:17:07,289 --> 00:17:11,850
and then this week I won't have another

00:17:09,600 --> 00:17:20,179
one I just put a two at the end so

00:17:11,850 --> 00:17:23,449
that's the logic sorry so um and also

00:17:20,179 --> 00:17:25,679
there would be like for example

00:17:23,449 --> 00:17:27,299
abbreviation no there there could be

00:17:25,679 --> 00:17:30,000
some changes so that could be

00:17:27,299 --> 00:17:34,330
intentional so I won't suspect that

00:17:30,000 --> 00:17:39,850
would be a absolutely humor

00:17:34,330 --> 00:17:41,380
era and also that was the funny thing

00:17:39,850 --> 00:17:44,769
that I found because like some names

00:17:41,380 --> 00:17:47,350
that actually they looks similar like

00:17:44,769 --> 00:17:49,779
the one that I have here but they are

00:17:47,350 --> 00:17:51,519
not just differed by one character it

00:17:49,779 --> 00:17:53,470
could be they're just like two companies

00:17:51,519 --> 00:17:56,320
that's coincidentally having this very

00:17:53,470 --> 00:17:58,090
similar name so um that's the

00:17:56,320 --> 00:18:01,000
interesting one that you know I I would

00:17:58,090 --> 00:18:03,370
love to investigate you see like you

00:18:01,000 --> 00:18:05,500
know for example with is there my

00:18:03,370 --> 00:18:07,179
clients I would maybe ask my colleague

00:18:05,500 --> 00:18:09,000
if they can you know talk to their

00:18:07,179 --> 00:18:12,250
clients and like oh they like the same

00:18:09,000 --> 00:18:14,470
the is it still like the two accounts

00:18:12,250 --> 00:18:15,880
belongs to you or is it you know if

00:18:14,470 --> 00:18:17,500
somebody is like crazier than you see

00:18:15,880 --> 00:18:21,309
everything is having like a similar name

00:18:17,500 --> 00:18:24,130
so yeah that we need some checking a

00:18:21,309 --> 00:18:26,409
human checking at the end but but

00:18:24,130 --> 00:18:29,740
actually I can show you it's actually

00:18:26,409 --> 00:18:31,630
highly reduced the you know the work

00:18:29,740 --> 00:18:36,039
that we have to do to find out if with

00:18:31,630 --> 00:18:39,880
some typos or is it totally to clients

00:18:36,039 --> 00:18:42,970
because you see after applied the

00:18:39,880 --> 00:18:44,860
matching so it's like the the one that

00:18:42,970 --> 00:18:47,769
got caught there's a highly similar it's

00:18:44,860 --> 00:18:52,059
only one percent of the total and so

00:18:47,769 --> 00:18:53,980
among like fifty 15k that you have to

00:18:52,059 --> 00:18:55,720
maybe um you know look at it at least

00:18:53,980 --> 00:18:57,340
like you can call all of them right you

00:18:55,720 --> 00:18:59,200
I won't like of course my colleague

00:18:57,340 --> 00:19:01,659
won't call off the clients were like by

00:18:59,200 --> 00:19:03,340
just looking at them you can like you

00:19:01,659 --> 00:19:07,000
still have to do like go through the

00:19:03,340 --> 00:19:09,909
long list of you know like that much

00:19:07,000 --> 00:19:12,760
like like fifteen thousand eight hundred

00:19:09,909 --> 00:19:15,250
eighty nine but now I just need to look

00:19:12,760 --> 00:19:17,590
at fifty seven of them so um and also

00:19:15,250 --> 00:19:20,440
maybe investigate in fifty seven of them

00:19:17,590 --> 00:19:22,779
so it really highly reduced the work

00:19:20,440 --> 00:19:24,820
that you know you or your call you have

00:19:22,779 --> 00:19:33,159
to do so I think it's a really good

00:19:24,820 --> 00:19:35,950
trick so yeah so yeah so I think I have

00:19:33,159 --> 00:19:40,149
a lot of time nervous it and yeah I just

00:19:35,950 --> 00:19:43,580
go through very quickly is it so it just

00:19:40,149 --> 00:19:50,899
took ask questions and

00:19:43,580 --> 00:19:52,690
thank you very much so we have time for

00:19:50,899 --> 00:20:03,470
questions

00:19:52,690 --> 00:20:07,070
yeah so the first would say use for

00:20:03,470 --> 00:20:11,090
metrics to to estimate if it's a match

00:20:07,070 --> 00:20:13,940
or not what is let's say the

00:20:11,090 --> 00:20:15,889
coefficients are the purity of this for

00:20:13,940 --> 00:20:20,239
matrix

00:20:15,889 --> 00:20:23,809
you mean the like the token salts

00:20:20,239 --> 00:20:25,460
yeah so I can actually show they are

00:20:23,809 --> 00:20:28,009
doing it they're actually giving it a

00:20:25,460 --> 00:20:31,669
score like it will return a score at the

00:20:28,009 --> 00:20:35,090
end which if it's this perfect match or

00:20:31,669 --> 00:20:39,169
if it's that's actually examples like

00:20:35,090 --> 00:20:42,109
for example if like here if I saw the

00:20:39,169 --> 00:20:46,789
token so matching you can see like let

00:20:42,109 --> 00:20:49,759
me make it bigger how it eventually

00:20:46,789 --> 00:20:55,340
generates this final score from that for

00:20:49,759 --> 00:20:57,259
matrix yeah so basically basically what

00:20:55,340 --> 00:20:58,909
it's doing if it's just right now if

00:20:57,259 --> 00:21:01,820
it's just simple ratio it will be a

00:20:58,909 --> 00:21:04,220
longer time distance and then just you

00:21:01,820 --> 00:21:07,480
know normalize it and give it a score if

00:21:04,220 --> 00:21:10,730
it's you know I haven't really like

00:21:07,480 --> 00:21:12,590
checking the code of this but it will

00:21:10,730 --> 00:21:14,720
give you a hundred if it's a total mess

00:21:12,590 --> 00:21:16,850
you can see here for example if it's a

00:21:14,720 --> 00:21:19,850
partial match then it will give you a

00:21:16,850 --> 00:21:22,549
hundred if it's a total totally match so

00:21:19,850 --> 00:21:26,149
it's um it's as well so if you have a

00:21:22,549 --> 00:21:28,789
longer phrase then if is the the

00:21:26,149 --> 00:21:33,230
tolerance of the difference it will be

00:21:28,789 --> 00:21:36,049
higher because it's by proportion okay

00:21:33,230 --> 00:21:38,749
so it's a so you'll pick which one you

00:21:36,049 --> 00:21:41,919
want use is not that eventually they

00:21:38,749 --> 00:21:44,539
combined the fall to generate one score

00:21:41,919 --> 00:21:47,419
you can choose which we should object

00:21:44,539 --> 00:21:50,989
you want to use because for example if I

00:21:47,419 --> 00:21:53,629
if I applied this in the simple ratio it

00:21:50,989 --> 00:21:56,059
won't be it won't be perfect right so

00:21:53,629 --> 00:21:57,320
it's it's the is the logic that you

00:21:56,059 --> 00:22:04,720
could choose yeah

00:21:57,320 --> 00:22:04,720
thank you okay I have another question

00:22:10,210 --> 00:22:15,710
hello so as curious of Levenstein only

00:22:13,730 --> 00:22:17,840
uses four letters so does it work

00:22:15,710 --> 00:22:20,000
equally well in all languages or rather

00:22:17,840 --> 00:22:21,980
some languages for it has problems in

00:22:20,000 --> 00:22:24,050
and do people use techniques like

00:22:21,980 --> 00:22:27,340
combining it with the dictionary from a

00:22:24,050 --> 00:22:31,400
language to get better results actually

00:22:27,340 --> 00:22:33,950
if because it's dumb it doesn't care

00:22:31,400 --> 00:22:37,010
what languages do this it's the the idea

00:22:33,950 --> 00:22:39,380
it's like it checked characters and if

00:22:37,010 --> 00:22:42,380
for example if it's not in English if

00:22:39,380 --> 00:22:45,410
it's in French then it doesn't matter

00:22:42,380 --> 00:22:47,630
right because like if you have you know

00:22:45,410 --> 00:22:49,100
if you have a word that is you know one

00:22:47,630 --> 00:22:52,070
character difference it would give you a

00:22:49,100 --> 00:22:53,570
score like a lot of science distance of

00:22:52,070 --> 00:22:56,780
one because there's one character

00:22:53,570 --> 00:22:58,910
difference so it it doesn't matter if

00:22:56,780 --> 00:22:59,480
it's a change of the character it was

00:22:58,910 --> 00:23:05,960
delicious

00:22:59,480 --> 00:23:08,240
Orvis adding one character this is kind

00:23:05,960 --> 00:23:10,730
of more of a question of what if suppose

00:23:08,240 --> 00:23:12,860
I've got two super big tables and there

00:23:10,730 --> 00:23:15,740
are like World of Warcraft players from

00:23:12,860 --> 00:23:16,700
one server and another server and I kind

00:23:15,740 --> 00:23:18,980
of want to know if there might be a

00:23:16,700 --> 00:23:21,740
match and let's assume that these names

00:23:18,980 --> 00:23:24,830
are fuzzy not the best example but let's

00:23:21,740 --> 00:23:26,390
assume that like you would then maybe do

00:23:24,830 --> 00:23:27,700
a full join and then check if they're

00:23:26,390 --> 00:23:30,110
fuzzy-wuzzy

00:23:27,700 --> 00:23:31,310
match ball but this won't scale very

00:23:30,110 --> 00:23:33,470
well unless you use some sort of

00:23:31,310 --> 00:23:34,970
heuristic in such a situation you

00:23:33,470 --> 00:23:36,530
already mentioned that you can take the

00:23:34,970 --> 00:23:38,510
first letter for example as a trick to

00:23:36,530 --> 00:23:42,530
maybe make things faster other other

00:23:38,510 --> 00:23:45,050
tricks for for two tables that's

00:23:42,530 --> 00:23:52,310
smashing the names hmm

00:23:45,050 --> 00:23:54,920
I would say that I cuz it was like I

00:23:52,310 --> 00:23:59,390
haven't think about something else

00:23:54,920 --> 00:24:01,400
yet at this level but I mean these this

00:23:59,390 --> 00:24:04,280
for like these already helps a lot

00:24:01,400 --> 00:24:05,900
because for example if it's two names

00:24:04,280 --> 00:24:07,640
that got you know change in order like

00:24:05,900 --> 00:24:10,560
the two words got changing although that

00:24:07,640 --> 00:24:13,110
would already sort it all for you

00:24:10,560 --> 00:24:15,300
but yeah if you want it to be super

00:24:13,110 --> 00:24:18,270
quick other than you know having the

00:24:15,300 --> 00:24:21,210
first character that mash maybe you can

00:24:18,270 --> 00:24:22,650
check the length as well but there is

00:24:21,210 --> 00:24:25,140
some limitation because if it's

00:24:22,650 --> 00:24:27,000
different by length and if you kind of

00:24:25,140 --> 00:24:28,950
if it's not change of character if is at

00:24:27,000 --> 00:24:31,500
the one character - one character than

00:24:28,950 --> 00:24:34,110
you can you can't check that as well so

00:24:31,500 --> 00:24:36,840
there would be limitation that's for me

00:24:34,110 --> 00:24:39,720
it's just my trick is more less like a

00:24:36,840 --> 00:24:46,620
patch or I get quickly kind of yeah

00:24:39,720 --> 00:24:48,600
getting tons quickly so yeah I here are

00:24:46,620 --> 00:24:50,760
comparing one to one but what if you

00:24:48,600 --> 00:24:53,340
want to compare one to us set what let's

00:24:50,760 --> 00:24:56,400
say I have 10,000 names and you want to

00:24:53,340 --> 00:24:59,130
figure how this specific name is rare

00:24:56,400 --> 00:25:01,560
rarity to compare our uniqueness to

00:24:59,130 --> 00:25:03,780
compare to the whole set will we also

00:25:01,560 --> 00:25:07,800
use fuzzy-wuzzy or who do you go with

00:25:03,780 --> 00:25:09,450
something else so if I if I have one one

00:25:07,800 --> 00:25:11,100
one name for example I have to match

00:25:09,450 --> 00:25:13,890
with the other thousand to see if

00:25:11,100 --> 00:25:17,730
there's a couple that is very similar is

00:25:13,890 --> 00:25:19,410
that what you know actually how how

00:25:17,730 --> 00:25:22,830
would you measure how this name is

00:25:19,410 --> 00:25:26,460
unique compared to whole data set okay

00:25:22,830 --> 00:25:29,070
yeah actually yeah if this if it's if

00:25:26,460 --> 00:25:31,980
it's a mashed and or like it depends on

00:25:29,070 --> 00:25:34,670
which one you choose it will the logical

00:25:31,980 --> 00:25:39,990
difference for example if I want to be

00:25:34,670 --> 00:25:43,470
you know if if it's for example if this

00:25:39,990 --> 00:25:45,300
I can I can for example this the same I

00:25:43,470 --> 00:25:47,070
use the token sought ratio so if the

00:25:45,300 --> 00:25:49,800
name is changing all that I would just

00:25:47,070 --> 00:25:51,630
considered them the same so I can I can

00:25:49,800 --> 00:25:54,780
apply because every single one of them

00:25:51,630 --> 00:25:57,540
have a score right so if there is for

00:25:54,780 --> 00:26:00,090
example if there's a ten out of a

00:25:57,540 --> 00:26:01,770
thousand yeah ten out of like ten

00:26:00,090 --> 00:26:03,810
thousand that you know got a score

00:26:01,770 --> 00:26:06,210
higher than ninety for example then I

00:26:03,810 --> 00:26:08,010
would say that it's not unique so at

00:26:06,210 --> 00:26:10,800
least like all of them need to score at

00:26:08,010 --> 00:26:12,900
a point that is smaller than certain

00:26:10,800 --> 00:26:23,450
first hold and you can say that it's

00:26:12,900 --> 00:26:23,450
different from everything else so okay

00:26:23,470 --> 00:26:28,159
so before you said you pick 85 if I

00:26:26,750 --> 00:26:31,789
remember correctly as a threshold right

00:26:28,159 --> 00:26:34,309
for saying yeah so how do you know that

00:26:31,789 --> 00:26:36,830
like matches with a score below 85

00:26:34,309 --> 00:26:39,890
cannot so you don't consider anything

00:26:36,830 --> 00:26:42,500
below 85 did you run any tests like to

00:26:39,890 --> 00:26:45,230
choose this parameter 85 or how do you

00:26:42,500 --> 00:26:47,090
did you pick it and yeah yeah I did run

00:26:45,230 --> 00:26:50,650
a couple of times actually yes

00:26:47,090 --> 00:26:55,370
yeah I didn't show it but yeah cuz I

00:26:50,650 --> 00:26:58,880
asked this one the 85 it give me like 50

00:26:55,370 --> 00:27:01,130
57 of them that is considered the same

00:26:58,880 --> 00:27:02,990
like matching right so I look at them

00:27:01,130 --> 00:27:05,390
but I can also you know change it for

00:27:02,990 --> 00:27:06,830
example change it to 75 and then it

00:27:05,390 --> 00:27:09,650
would give me for example let's say it

00:27:06,830 --> 00:27:12,590
give me 200 and I can compare the two or

00:27:09,650 --> 00:27:14,150
if I have pile or knowledge knowing that

00:27:12,590 --> 00:27:15,890
you know all the mistake won't be you

00:27:14,150 --> 00:27:18,530
know won't be more than one percent

00:27:15,890 --> 00:27:20,240
let's say then I could you know have a

00:27:18,530 --> 00:27:22,070
look at the number that it's got mesh

00:27:20,240 --> 00:27:24,140
and then compared to the whole total is

00:27:22,070 --> 00:27:26,900
it less than one percent or is it more

00:27:24,140 --> 00:27:29,000
than one percent so I can kind of I need

00:27:26,900 --> 00:27:32,919
to still fine-tuning it so that's the

00:27:29,000 --> 00:27:32,919
that would be yeah it's not absolute

00:27:41,880 --> 00:27:47,970
I am did you ever try it on longer

00:27:45,870 --> 00:27:50,640
strings so could you for example find a

00:27:47,970 --> 00:27:55,350
company name and a large text with that

00:27:50,640 --> 00:27:57,360
scale the library company with so if you

00:27:55,350 --> 00:27:59,700
have a large text and you want to know

00:27:57,360 --> 00:28:01,620
if a company name appears in this text

00:27:59,700 --> 00:28:04,710
do you think you could use the library

00:28:01,620 --> 00:28:08,520
for that yeah that would be of course it

00:28:04,710 --> 00:28:11,790
is a not so big paragraph maybe like you

00:28:08,520 --> 00:28:13,890
can do you can do some Windows the slide

00:28:11,790 --> 00:28:16,590
flew and then you can do some maybe like

00:28:13,890 --> 00:28:18,450
partial ratio and all this to see if if

00:28:16,590 --> 00:28:21,690
the company name appear in that window

00:28:18,450 --> 00:28:23,520
but I haven't tried that Alba I do think

00:28:21,690 --> 00:28:25,800
the sliding window at work if you kind

00:28:23,520 --> 00:28:28,410
of have a paragraph and you for example

00:28:25,800 --> 00:28:31,440
your company name is like in consists of

00:28:28,410 --> 00:28:33,330
three words around normally a free word

00:28:31,440 --> 00:28:35,250
then you can have a window of you know

00:28:33,330 --> 00:28:37,920
five words and slide through and then to

00:28:35,250 --> 00:28:40,500
see how many of them is to having a high

00:28:37,920 --> 00:28:42,870
partial ratio that you can pick that

00:28:40,500 --> 00:28:54,510
chunk oh I know that is yeah it's a

00:28:42,870 --> 00:28:56,760
match and so the last question yes

00:28:54,510 --> 00:28:58,530
have you tried phonetic algorithms

00:28:56,760 --> 00:29:02,580
because I think that would work very

00:28:58,530 --> 00:29:04,920
well for short names because you only

00:29:02,580 --> 00:29:08,940
use it for short names right not for

00:29:04,920 --> 00:29:10,500
long corpus yeah this one is for sure so

00:29:08,940 --> 00:29:13,620
what's the algorithm that you mentioned

00:29:10,500 --> 00:29:15,810
phonetic algorithms often an algorithm

00:29:13,620 --> 00:29:18,690
is it oh yeah I haven't haven't tried

00:29:15,810 --> 00:29:20,640
that one because uh yeah it's just cuz I

00:29:18,690 --> 00:29:22,740
just tried this for say matching but I

00:29:20,640 --> 00:29:25,830
haven't I haven't tried that yeah yeah

00:29:22,740 --> 00:29:27,780
and just to answer may be Finn's Plateau

00:29:25,830 --> 00:29:35,970
or fins methods could be a good match

00:29:27,780 --> 00:29:39,150
for your question don't have any more

00:29:35,970 --> 00:29:40,740
time for questions so let's thank once

00:29:39,150 --> 00:29:42,800
again thank you

00:29:40,740 --> 00:29:42,800

YouTube URL: https://www.youtube.com/watch?v=NRAqIjXaZvw


