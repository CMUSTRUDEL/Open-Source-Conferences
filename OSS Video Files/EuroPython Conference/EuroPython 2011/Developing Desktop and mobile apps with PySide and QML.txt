Title: Developing Desktop and mobile apps with PySide and QML
Publication date: 2015-04-19
Playlist: EuroPython 2011
Description: 
	[EuroPython 2011] Thomas Perl - 24 June 2011 in "Training Pizza Margherita
"
Captions: 
	00:00:04,620 --> 00:00:10,300
hello yeah I'm going to have a training

00:00:07,120 --> 00:00:11,800
tomorrow in the morning and I'm going to

00:00:10,300 --> 00:00:13,750
give you a short overview of what you

00:00:11,800 --> 00:00:15,880
can expect or give you some kind of

00:00:13,750 --> 00:00:18,730
motivation why you would want to go to

00:00:15,880 --> 00:00:20,529
that training so what can you do with it

00:00:18,730 --> 00:00:23,020
what can you do with Pi side and what

00:00:20,529 --> 00:00:25,750
can you do with a QL you can create

00:00:23,020 --> 00:00:27,340
cool-looking desktop applications so if

00:00:25,750 --> 00:00:30,910
you're looking for a way to create a

00:00:27,340 --> 00:00:34,090
very interesting very dynamic UIs for

00:00:30,910 --> 00:00:35,920
the desktop for example on your laptops

00:00:34,090 --> 00:00:37,420
or also on some computers you can do

00:00:35,920 --> 00:00:39,579
that and you can also create touch

00:00:37,420 --> 00:00:42,070
friendly mobile apps which is what qml

00:00:39,579 --> 00:00:43,960
is all about so there's special support

00:00:42,070 --> 00:00:46,269
for doing things like finger scroll

00:00:43,960 --> 00:00:48,609
lists stuff like that multi-touch

00:00:46,269 --> 00:00:50,559
support all this is included in the QL

00:00:48,609 --> 00:00:54,249
and you can define the UI using some

00:00:50,559 --> 00:00:56,879
declarative language so that's also very

00:00:54,249 --> 00:01:01,059
nice to reuse once you get used to it

00:00:56,879 --> 00:01:03,100
and using PI side you can access all of

00:01:01,059 --> 00:01:06,130
these features from Python so you don't

00:01:03,100 --> 00:01:07,840
have to code C++ which is the native

00:01:06,130 --> 00:01:10,420
language of cute you can use it from

00:01:07,840 --> 00:01:14,140
Python directly

00:01:10,420 --> 00:01:15,640
I said mobile apps for which devices for

00:01:14,140 --> 00:01:17,829
example one of these devices could be

00:01:15,640 --> 00:01:20,170
there and 100 which has been out for

00:01:17,829 --> 00:01:21,549
some years now running my mode it's the

00:01:20,170 --> 00:01:22,869
lung space operating system so you

00:01:21,549 --> 00:01:25,930
basically have an EXO around there and

00:01:22,869 --> 00:01:29,640
it also supports cute and humor of

00:01:25,930 --> 00:01:32,590
course and it runs of Python so you can

00:01:29,640 --> 00:01:35,200
use Python on this device you also have

00:01:32,590 --> 00:01:36,909
an X term so if you feel the urgent need

00:01:35,200 --> 00:01:38,979
to do some Python coding or for example

00:01:36,909 --> 00:01:41,890
on the bus you can just take it out and

00:01:38,979 --> 00:01:45,609
code something of course supports also

00:01:41,890 --> 00:01:49,119
PI GDK this this device then there's the

00:01:45,609 --> 00:01:53,710
950 which is developer device it also

00:01:49,119 --> 00:01:55,509
supports a Python and qml it doesn't

00:01:53,710 --> 00:01:58,869
support you to K anymore but you can do

00:01:55,509 --> 00:02:01,119
qml you ice with it and there's the

00:01:58,869 --> 00:02:04,240
recently announced n9 which is also

00:02:01,119 --> 00:02:06,369
running the successor of MIMO it's

00:02:04,240 --> 00:02:10,140
called amigo Hamilton which lets get

00:02:06,369 --> 00:02:12,880
Debian based mobile Linux distribution

00:02:10,140 --> 00:02:14,650
are there any other targets apart from

00:02:12,880 --> 00:02:16,959
these three devices

00:02:14,650 --> 00:02:19,209
for Android basically Python supports

00:02:16,959 --> 00:02:22,330
over there so you can have Python for

00:02:19,209 --> 00:02:26,560
Android and cute is already ported as

00:02:22,330 --> 00:02:29,650
well the problem is just that nobody yet

00:02:26,560 --> 00:02:31,390
packaged pi site basically put Python

00:02:29,650 --> 00:02:31,720
and cute together on Android and make it

00:02:31,390 --> 00:02:34,750
so

00:02:31,720 --> 00:02:36,040
but basically Python runs there and huge

00:02:34,750 --> 00:02:37,900
runs there so it's just a matter of time

00:02:36,040 --> 00:02:40,209
but somewhat it takes these two parts

00:02:37,900 --> 00:02:43,299
and it gets together in ten you can do

00:02:40,209 --> 00:02:46,330
PI set your eyes on Android as well and

00:02:43,299 --> 00:02:48,849
of course nigo which is the info

00:02:46,330 --> 00:02:53,680
includes mobile operating system

00:02:48,849 --> 00:02:55,900
platform Mego is on TVs ivi that means

00:02:53,680 --> 00:03:00,180
in vehicle infotainment as far as I know

00:02:55,900 --> 00:03:03,430
so it's some devices in cars handset

00:03:00,180 --> 00:03:05,620
tablets netbooks and so on but of course

00:03:03,430 --> 00:03:07,690
for me go there are no real devices out

00:03:05,620 --> 00:03:09,640
in the market yet but it inspected at at

00:03:07,690 --> 00:03:11,829
some point there will be and then you

00:03:09,640 --> 00:03:16,680
can definitely run high styling humor

00:03:11,829 --> 00:03:19,540
laps on these devices yes the platform's

00:03:16,680 --> 00:03:22,959
backwards ten Windows and Linux our

00:03:19,540 --> 00:03:25,060
supported of course some of you uses any

00:03:22,959 --> 00:03:28,150
kind of PSD or some other weird

00:03:25,060 --> 00:03:31,120
operating system or like non mainstream

00:03:28,150 --> 00:03:33,370
operating system as long as cute runs on

00:03:31,120 --> 00:03:38,069
there there's a good chance that PI site

00:03:33,370 --> 00:03:42,519
and acute qml will also run under so

00:03:38,069 --> 00:03:46,060
basically should work for you now for

00:03:42,519 --> 00:03:50,319
some examples this screenshot is not a

00:03:46,060 --> 00:03:52,030
qml app but that's the old GDK or PI

00:03:50,319 --> 00:03:55,090
cheek a UI of chi power which is a

00:03:52,030 --> 00:03:57,609
podcast client that I wrote and for the

00:03:55,090 --> 00:04:00,209
new version also for mobile devices and

00:03:57,609 --> 00:04:03,519
so on so on I decided to take this UI I

00:04:00,209 --> 00:04:06,180
took the same back end and just replace

00:04:03,519 --> 00:04:09,700
the patch it k UI with the qml UI and

00:04:06,180 --> 00:04:12,340
the result looks like that it's very

00:04:09,700 --> 00:04:14,680
touch friendly non-standard or non

00:04:12,340 --> 00:04:18,280
classic user interface and immense it's

00:04:14,680 --> 00:04:19,930
designed for finger usage it's made so

00:04:18,280 --> 00:04:22,450
that UI elements are big enough that you

00:04:19,930 --> 00:04:24,789
can use it on a small device I can later

00:04:22,450 --> 00:04:27,159
demo John on the device and also on the

00:04:24,789 --> 00:04:27,740
computer so you can see how it works in

00:04:27,159 --> 00:04:30,650
practice

00:04:27,740 --> 00:04:32,570
and again this is the the beckons

00:04:30,650 --> 00:04:34,730
written in Python and I'm reusing all

00:04:32,570 --> 00:04:37,250
the Python code that I wrote for the GDK

00:04:34,730 --> 00:04:39,530
application I'm just using that for the

00:04:37,250 --> 00:04:40,690
qml UI so I just have to replace the

00:04:39,530 --> 00:04:44,180
united clean

00:04:40,690 --> 00:04:46,280
another example is Panucci which is a

00:04:44,180 --> 00:04:47,960
Futurama reference I think I should

00:04:46,280 --> 00:04:50,630
mention it's in Italy because there's

00:04:47,960 --> 00:04:53,090
some soccer player I guess anyway that's

00:04:50,630 --> 00:04:56,720
the gtk+ UI it's basically a an audio

00:04:53,090 --> 00:04:59,690
proven podcast player and then somebody

00:04:56,720 --> 00:05:03,590
wrote a cute UI that basic looks the

00:04:59,690 --> 00:05:06,830
same as to cheat k UI e much different

00:05:03,590 --> 00:05:09,470
that's using the cue widgets UI elements

00:05:06,830 --> 00:05:11,000
so that's not using qml it's using cute

00:05:09,470 --> 00:05:13,430
with all the classic UI elements you can

00:05:11,000 --> 00:05:16,639
use so that looks like your standard

00:05:13,430 --> 00:05:19,280
test appeared standard buttons progress

00:05:16,639 --> 00:05:20,630
bars checkboxes dropdowns all the stuff

00:05:19,280 --> 00:05:24,500
that you know from your normal desktop

00:05:20,630 --> 00:05:27,169
operating system then again you can do

00:05:24,500 --> 00:05:30,440
your own qml you I might look that

00:05:27,169 --> 00:05:32,690
pretty you just I mean a developer has

00:05:30,440 --> 00:05:35,180
designed to the UI but if you can hire

00:05:32,690 --> 00:05:38,060
some kind of graphics musician they can

00:05:35,180 --> 00:05:39,740
create great graphics for UI and then it

00:05:38,060 --> 00:05:42,140
also works great on touch based devices

00:05:39,740 --> 00:05:46,310
again in this case all three you eyes so

00:05:42,140 --> 00:05:48,650
pi GDK the cute UI with qwidget enter

00:05:46,310 --> 00:05:50,300
qml you i used the same Python back-end

00:05:48,650 --> 00:05:51,860
if you have the same code base and

00:05:50,300 --> 00:05:53,510
depending on where you want your

00:05:51,860 --> 00:05:56,180
application to run for example a desktop

00:05:53,510 --> 00:05:58,550
you might prefer some classic UI and on

00:05:56,180 --> 00:06:02,150
mobile platforms or tablets you might

00:05:58,550 --> 00:06:06,289
want to use a q mail you i yeah live

00:06:02,150 --> 00:06:10,580
demo let's see if this works I'm just

00:06:06,289 --> 00:06:13,250
going to run this on my computer now so

00:06:10,580 --> 00:06:16,010
that's a gtk UI you see classic you user

00:06:13,250 --> 00:06:17,690
interface elements very much in much

00:06:16,010 --> 00:06:22,850
information because I have to space on

00:06:17,690 --> 00:06:26,590
the screen scroll bars context menus of

00:06:22,850 --> 00:06:26,590
like that menu bar and then

00:06:30,760 --> 00:06:36,560
and then using the same code base I just

00:06:34,100 --> 00:06:39,800
have a one time switch that enables the

00:06:36,560 --> 00:06:42,290
qml UI I can have two qml you I have a

00:06:39,800 --> 00:06:45,370
very fluent very fast user interface of

00:06:42,290 --> 00:06:47,600
course here there are some different

00:06:45,370 --> 00:06:51,590
like different requirements for example

00:06:47,600 --> 00:06:53,120
have cool animations there is no

00:06:51,590 --> 00:06:54,740
right-click because I don't really have

00:06:53,120 --> 00:06:59,060
a right mouse button with the tattoo I

00:06:54,740 --> 00:07:02,000
obviously cool animations I can play

00:06:59,060 --> 00:07:04,490
videos play in full-screen all these

00:07:02,000 --> 00:07:07,070
transitions are mostly done inside the

00:07:04,490 --> 00:07:10,280
declarative UI so I just say I define

00:07:07,070 --> 00:07:14,030
how the UI behaves I don't have to take

00:07:10,280 --> 00:07:15,560
care about doing timers doing stuff like

00:07:14,030 --> 00:07:18,830
moving elements around

00:07:15,560 --> 00:07:21,110
I just incur some elements some points

00:07:18,830 --> 00:07:25,120
of the screen and when it changes then

00:07:21,110 --> 00:07:28,310
the UI changes also also do like audio

00:07:25,120 --> 00:07:31,100
get great animations so most of this

00:07:28,310 --> 00:07:34,220
stuff already runs in qml it does not

00:07:31,100 --> 00:07:36,410
need to to call back to python for most

00:07:34,220 --> 00:07:37,610
of stuff except for data so all the

00:07:36,410 --> 00:07:40,160
animations are fluid because they

00:07:37,610 --> 00:07:47,000
basically run inside C++ or native code

00:07:40,160 --> 00:07:48,470
and just for the that's for the data and

00:07:47,000 --> 00:07:49,910
callback stuff like that for storing the

00:07:48,470 --> 00:07:52,010
data that I modified in the UI

00:07:49,910 --> 00:07:56,470
I could call back into Python and to

00:07:52,010 --> 00:07:56,470
stuff data application that I showed

00:07:59,320 --> 00:08:07,130
this audio book player as a gtk you I

00:08:03,080 --> 00:08:08,780
just place some stuff and if the cute UI

00:08:07,130 --> 00:08:13,340
it's basically the same cue widget based

00:08:08,780 --> 00:08:15,590
UI there's not using gtk it's using cute

00:08:13,340 --> 00:08:17,630
but again cute on a bun too by default

00:08:15,590 --> 00:08:19,520
uses the GDK theming so you don't really

00:08:17,630 --> 00:08:23,120
see difference here but it uses a

00:08:19,520 --> 00:08:27,800
different UI to code and then the qml

00:08:23,120 --> 00:08:31,610
stuff weird here it's it's basically a

00:08:27,800 --> 00:08:34,190
big canvas so you see the white border

00:08:31,610 --> 00:08:40,459
around here you can have some cool lists

00:08:34,190 --> 00:08:43,610
can do about so you have many emotions

00:08:40,459 --> 00:08:45,350
stuff like that it works a bit different

00:08:43,610 --> 00:08:48,320
and you can create very very interesting

00:08:45,350 --> 00:08:50,750
new eyes as long as you have either some

00:08:48,320 --> 00:08:52,490
kind of skills to do the graphics on

00:08:50,750 --> 00:08:55,060
your own or you have some people to do

00:08:52,490 --> 00:08:59,630
graphics for you

00:08:55,060 --> 00:09:01,640
yeah for example I can also do is have

00:08:59,630 --> 00:09:04,130
some prepared some small example a

00:09:01,640 --> 00:09:08,600
translucent window which all something

00:09:04,130 --> 00:09:10,640
can do with acute and qml and some small

00:09:08,600 --> 00:09:17,529
chemical that basically shows some logo

00:09:10,640 --> 00:09:17,529
which you will shortly see and rotated

00:09:19,420 --> 00:09:25,700
so here I'm resetting the rotation and

00:09:22,279 --> 00:09:27,910
making it making take a bit longer from

00:09:25,700 --> 00:09:30,200
Python there's a Python thread running

00:09:27,910 --> 00:09:33,260
telling the key ml please restart your

00:09:30,200 --> 00:09:36,860
animation and increase the duration and

00:09:33,260 --> 00:09:38,060
I printed you out on standard art the

00:09:36,860 --> 00:09:39,950
right time thing that can easily do and

00:09:38,060 --> 00:09:44,140
you can see it's very fast because the

00:09:39,950 --> 00:09:50,180
rendering again is done on the c++ side

00:09:44,140 --> 00:09:53,990
okay so I've got some encode here I've

00:09:50,180 --> 00:09:56,779
got a 950 here that I hooked up using a

00:09:53,990 --> 00:10:00,579
USB and it's using USB networking so I

00:09:56,779 --> 00:10:00,579
can SSH into the device from my laptop

00:10:02,079 --> 00:10:09,550
okay I'm now connected to the device I

00:10:05,810 --> 00:10:17,029
can now copy over the European logo and

00:10:09,550 --> 00:10:22,699
the translucent example device SCP no

00:10:17,029 --> 00:10:25,010
problem SSH again into the device have a

00:10:22,699 --> 00:10:31,220
look at what files are in there I'm

00:10:25,010 --> 00:10:38,089
going to use the SSH connection to start

00:10:31,220 --> 00:10:41,410
the example here and I'm switching to

00:10:38,089 --> 00:10:41,410
the webcam

00:10:42,650 --> 00:10:48,080
showing this to you here it's basically

00:10:45,530 --> 00:10:53,720
running on the device the same example

00:10:48,080 --> 00:10:56,420
without any modifications sorry for the

00:10:53,720 --> 00:11:04,790
crappy quality but I think you can kind

00:10:56,420 --> 00:11:06,800
of get the point what's possible and of

00:11:04,790 --> 00:11:08,270
course I can while the application is

00:11:06,800 --> 00:11:11,390
running fullscreen on device I can still

00:11:08,270 --> 00:11:12,650
see all the I've still have to ssh

00:11:11,390 --> 00:11:14,450
session on my laptop seconds with all

00:11:12,650 --> 00:11:15,950
the debugging output on my computer

00:11:14,450 --> 00:11:17,510
which is fine for doing full screen

00:11:15,950 --> 00:11:19,940
applications it's very easy for

00:11:17,510 --> 00:11:22,160
debugging and again what I usually do

00:11:19,940 --> 00:11:24,740
when I develop I just have some our sink

00:11:22,160 --> 00:11:27,890
set up so that I develop on my laptop

00:11:24,740 --> 00:11:29,480
using a full-blown vim then just our

00:11:27,890 --> 00:11:32,060
sink everything over I have a separate

00:11:29,480 --> 00:11:35,390
SH terminal open and then just run the

00:11:32,060 --> 00:11:40,790
example there of course it does have VI

00:11:35,390 --> 00:11:43,970
installed so I could just edit the code

00:11:40,790 --> 00:11:46,520
there on the device either via SSH or by

00:11:43,970 --> 00:11:48,550
just using the device itself which is

00:11:46,520 --> 00:11:52,220
kind of cumbersome but it does work and

00:11:48,550 --> 00:11:53,330
edit the code there and try it out of

00:11:52,220 --> 00:11:55,970
course this also saves you from

00:11:53,330 --> 00:11:57,980
downloading several gigabytes of SDKs

00:11:55,970 --> 00:11:59,900
and emulator stuff like that you can

00:11:57,980 --> 00:12:01,640
just use your Python environment on your

00:11:59,900 --> 00:12:03,440
laptop copy the stuff over try it on the

00:12:01,640 --> 00:12:08,300
device without the new problems which is

00:12:03,440 --> 00:12:11,900
quite nice I think ok so I hope I got

00:12:08,300 --> 00:12:16,250
you interested they'll have lots of time

00:12:11,900 --> 00:12:18,290
so we can show some either some

00:12:16,250 --> 00:12:20,660
questions or some examples I can try

00:12:18,290 --> 00:12:22,130
some live coding basically what they

00:12:20,660 --> 00:12:22,460
should not forget tomorrow in the

00:12:22,130 --> 00:12:26,480
morning

00:12:22,460 --> 00:12:27,290
from 9 to 13 o'clock in the pizza pizza

00:12:26,480 --> 00:12:30,140
margherita

00:12:27,290 --> 00:12:32,390
room there's a straining session what

00:12:30,140 --> 00:12:35,840
were you going to kind of try out some

00:12:32,390 --> 00:12:38,960
of the examples I get you started how to

00:12:35,840 --> 00:12:42,310
develop as these applications how you

00:12:38,960 --> 00:12:44,900
can install everything is on this URL so

00:12:42,310 --> 00:12:46,820
if you have been here for some days you

00:12:44,900 --> 00:12:49,190
know that the internet connection is not

00:12:46,820 --> 00:12:52,040
that reliable and you it could be that

00:12:49,190 --> 00:12:54,140
depending on which OS you are using that

00:12:52,040 --> 00:12:56,120
you have to download some stuff so

00:12:54,140 --> 00:12:58,089
please check out the URL if

00:12:56,120 --> 00:13:02,770
today download the dependencies

00:12:58,089 --> 00:13:02,770
instructions both there

00:13:14,540 --> 00:13:19,400
so basically test you download cute if

00:13:16,670 --> 00:13:20,840
you are on OS 10 or Windows it's

00:13:19,400 --> 00:13:23,060
optional for Windows because I have been

00:13:20,840 --> 00:13:24,740
told that the cute binaries that you

00:13:23,060 --> 00:13:26,330
need for running these examples are

00:13:24,740 --> 00:13:29,960
already in truth in the PI set binaries

00:13:26,330 --> 00:13:31,250
on Linux obviously if you have a proper

00:13:29,960 --> 00:13:32,990
distribution that does dependency

00:13:31,250 --> 00:13:35,240
management you obviously get all the

00:13:32,990 --> 00:13:36,710
things you need then you can get PI set

00:13:35,240 --> 00:13:38,510
for your platform you can either use the

00:13:36,710 --> 00:13:41,630
binary package to the Mac os10 windows

00:13:38,510 --> 00:13:43,460
or the orders even a12 PPA to get the

00:13:41,630 --> 00:13:48,260
latest version of pi site because it's a

00:13:43,460 --> 00:13:49,700
very rather new project if you have

00:13:48,260 --> 00:13:51,170
another distribution it doesn't have any

00:13:49,700 --> 00:13:53,210
binary packages you can use the build

00:13:51,170 --> 00:13:55,940
script which is basically just a set of

00:13:53,210 --> 00:13:57,560
scripts to build PI site from source

00:13:55,940 --> 00:14:00,230
because there are some components like

00:13:57,560 --> 00:14:02,720
the bindings kit generator and so on but

00:14:00,230 --> 00:14:05,570
there's a readme file which instructs

00:14:02,720 --> 00:14:07,250
you how to do it that's 4 PI site then

00:14:05,570 --> 00:14:09,830
you can download some example code for

00:14:07,250 --> 00:14:11,120
example the pies that qml examples you

00:14:09,830 --> 00:14:13,010
can also try out the cheap art code that

00:14:11,120 --> 00:14:14,600
I've just demoed here it's all open

00:14:13,010 --> 00:14:16,220
source and available from the git

00:14:14,600 --> 00:14:19,070
repository and there are some more

00:14:16,220 --> 00:14:22,280
official PI set examples future try out

00:14:19,070 --> 00:14:24,350
which is not just qml but also like the

00:14:22,280 --> 00:14:28,070
qwidget based stuff because pies are

00:14:24,350 --> 00:14:30,500
obviously also it supports the qwidget

00:14:28,070 --> 00:14:33,050
modules and other modules from cute but

00:14:30,500 --> 00:14:34,520
for the training session it's just

00:14:33,050 --> 00:14:37,010
Python in Gmail because I think that's

00:14:34,520 --> 00:14:39,380
what the interesting part for this

00:14:37,010 --> 00:14:41,090
training and there's also a forum are

00:14:39,380 --> 00:14:42,590
kppa if once you have the cute mobility

00:14:41,090 --> 00:14:46,280
qml components you need this for example

00:14:42,590 --> 00:14:48,200
for a cheap hour so what keep mobility

00:14:46,280 --> 00:14:50,360
Gmail components provide are for example

00:14:48,200 --> 00:14:51,770
the multimedia stuff so by default

00:14:50,360 --> 00:14:52,880
Kimmel isn't providing the most we just

00:14:51,770 --> 00:14:54,830
have like playing videos of playing

00:14:52,880 --> 00:14:57,560
audio with the Qt mobility kuma

00:14:54,830 --> 00:14:58,940
components you basically just say I want

00:14:57,560 --> 00:15:01,130
you have some audio here or some video

00:14:58,940 --> 00:15:02,750
here this is the URL of the file

00:15:01,130 --> 00:15:05,990
I live the local file name of the URL

00:15:02,750 --> 00:15:07,910
and qm l will take care of loading the

00:15:05,990 --> 00:15:11,090
file and playing it there and you can

00:15:07,910 --> 00:15:12,890
also set some properties and if you want

00:15:11,090 --> 00:15:14,780
we can try this out tomorrow as well and

00:15:12,890 --> 00:15:16,730
there's some short MeeGo python tutorial

00:15:14,780 --> 00:15:19,910
which basically explains the same stuff

00:15:16,730 --> 00:15:21,290
that we do here in text form so if you

00:15:19,910 --> 00:15:25,700
want to be prepared for tomorrow and

00:15:21,290 --> 00:15:27,830
have many difficult questions just get

00:15:25,700 --> 00:15:28,339
on this page again you are as listed

00:15:27,830 --> 00:15:32,269
here

00:15:28,339 --> 00:15:34,189
and yeah I think we can start with some

00:15:32,269 --> 00:15:35,930
questions and if there's a lack of

00:15:34,189 --> 00:15:38,720
questions I can do some more demos I

00:15:35,930 --> 00:15:40,490
will leave the URL up here so just write

00:15:38,720 --> 00:15:42,019
it down and download - depends if you're

00:15:40,490 --> 00:15:52,550
interested in doing the training

00:15:42,019 --> 00:15:56,389
tomorrow any question I really are you

00:15:52,550 --> 00:16:01,069
men should run in writing programs for

00:15:56,389 --> 00:16:03,740
Android and run in both Python and Qt on

00:16:01,069 --> 00:16:06,649
it and both of them not be impacted and

00:16:03,740 --> 00:16:07,959
so on but what's the status of Python on

00:16:06,649 --> 00:16:10,850
Android right now

00:16:07,959 --> 00:16:14,269
Python hundred already works so there's

00:16:10,850 --> 00:16:16,610
the scripting layer for Android project

00:16:14,269 --> 00:16:19,069
which basically adds support for all the

00:16:16,610 --> 00:16:24,279
scripting languages like Python I think

00:16:19,069 --> 00:16:27,649
Java Script amadís ubi could be I guess

00:16:24,279 --> 00:16:29,779
stuff like that to Android but basically

00:16:27,649 --> 00:16:31,459
don't have really any possibility of two

00:16:29,779 --> 00:16:35,110
new eyes you can do stuff like dialogs

00:16:31,459 --> 00:16:38,870
or progress dialog stuff like that and

00:16:35,110 --> 00:16:40,279
yeah you can do HTML views and then

00:16:38,870 --> 00:16:42,439
communicate from your Python script to

00:16:40,279 --> 00:16:44,809
HTML view but that's not something that

00:16:42,439 --> 00:16:46,220
you might want to do and it's also

00:16:44,809 --> 00:16:49,220
probably not as slow as doing some other

00:16:46,220 --> 00:16:51,199
UI stuff if you are doing the if you

00:16:49,220 --> 00:16:53,329
want to go to a cute route there's cured

00:16:51,199 --> 00:16:56,389
already which means that you can do C++

00:16:53,329 --> 00:17:02,899
applications for Android with this

00:16:56,389 --> 00:17:07,309
necesita support but it's already open

00:17:02,899 --> 00:17:12,079
here basic necesitas is cute for Android

00:17:07,309 --> 00:17:13,819
and it also includes support for IDE

00:17:12,079 --> 00:17:15,740
that you can even use the Qt creator and

00:17:13,819 --> 00:17:16,850
even debug your applications that's

00:17:15,740 --> 00:17:18,799
running for example in the Android

00:17:16,850 --> 00:17:21,890
emulator and this stuff also works on

00:17:18,799 --> 00:17:24,169
real Android devices and the problem

00:17:21,890 --> 00:17:26,659
right now is that you can't use cute and

00:17:24,169 --> 00:17:28,850
Python but their area separately it's

00:17:26,659 --> 00:17:31,130
just a matter of time that someone

00:17:28,850 --> 00:17:34,100
basically takes care of compiling pi

00:17:31,130 --> 00:17:35,450
site for Android using the NDK and then

00:17:34,100 --> 00:17:40,370
getting stuff playing together with this

00:17:35,450 --> 00:17:47,070
cute board the answer to a question or

00:17:40,370 --> 00:17:50,940
and other questions it's some problem if

00:17:47,070 --> 00:17:53,910
I have installed my cute

00:17:50,940 --> 00:17:57,590
there is some problem compatibility I

00:17:53,910 --> 00:18:00,180
have installer by cute on my PC and I

00:17:57,590 --> 00:18:01,710
want to install app I side there is some

00:18:00,180 --> 00:18:03,270
problem no shouldn't be a problem

00:18:01,710 --> 00:18:09,660
because they have different package

00:18:03,270 --> 00:18:17,160
names okay it's so the PI site packages

00:18:09,660 --> 00:18:19,170
are from PI site stuff like that and I

00:18:17,160 --> 00:18:22,260
think for pi cute it's from PI cute

00:18:19,170 --> 00:18:24,480
something yeah I'm not you can't use of

00:18:22,260 --> 00:18:25,860
course you can't subclass pipe you'd

00:18:24,480 --> 00:18:27,990
object and do stuff like that

00:18:25,860 --> 00:18:30,660
but and there's also on the PI sidewiki

00:18:27,990 --> 00:18:34,500
some instructions for porting PI cute

00:18:30,660 --> 00:18:39,000
code to PI site because in in PI cute

00:18:34,500 --> 00:18:44,610
you as far as I know use PI cute signal

00:18:39,000 --> 00:18:48,740
and in pycelle it's just signal like

00:18:44,610 --> 00:18:48,740
it's so minor differences

00:18:56,940 --> 00:19:01,910
and other questions yeah

00:19:02,060 --> 00:19:09,030
what do you think about the Nokia move

00:19:05,580 --> 00:19:12,960
on Windows Phone 7 I think that there's

00:19:09,030 --> 00:19:16,740
no future for for me go and so on so why

00:19:12,960 --> 00:19:20,760
I what is the motivation about using

00:19:16,740 --> 00:19:23,820
this platform with this market which is

00:19:20,760 --> 00:19:27,210
divided in three pieces from Apple

00:19:23,820 --> 00:19:29,600
Google with Android and Mac soft with

00:19:27,210 --> 00:19:33,390
Naga and so on in the Windows Phone 7

00:19:29,600 --> 00:19:36,060
before we personally mean yes well the

00:19:33,390 --> 00:19:38,550
thing is that that's the only platform

00:19:36,060 --> 00:19:40,350
right now where can easily port between

00:19:38,550 --> 00:19:43,290
the mobile platform and for example your

00:19:40,350 --> 00:19:45,150
desktop machine because for for iOS as

00:19:43,290 --> 00:19:47,250
far as I know you basically have to

00:19:45,150 --> 00:19:49,830
write your application from scratch

00:19:47,250 --> 00:19:51,690
using all the iOS things and even if

00:19:49,830 --> 00:19:53,340
it's possible to port it you would only

00:19:51,690 --> 00:19:54,480
have a replication on Mac OS 10 you

00:19:53,340 --> 00:19:58,230
wouldn't be able to port your as

00:19:54,480 --> 00:20:00,300
application to Windows or Linux for

00:19:58,230 --> 00:20:02,700
Android it's basically the same thing

00:20:00,300 --> 00:20:05,850
it's using its very own custom UI stuff

00:20:02,700 --> 00:20:07,560
which probably makes very good sense for

00:20:05,850 --> 00:20:10,710
mobile applications to have some very

00:20:07,560 --> 00:20:12,180
cool life cycle stuff in there but again

00:20:10,710 --> 00:20:13,980
you can't really port your Android

00:20:12,180 --> 00:20:15,630
application to the desktop or vice versa

00:20:13,980 --> 00:20:19,530
you can't really take an S application

00:20:15,630 --> 00:20:21,830
ported to Android with this you can

00:20:19,530 --> 00:20:24,810
easily create basic Linux desktop

00:20:21,830 --> 00:20:25,890
application and with some modifications

00:20:24,810 --> 00:20:27,540
for example you basically have to

00:20:25,890 --> 00:20:29,100
replace do I most of the time but

00:20:27,540 --> 00:20:30,450
everything else can the same you

00:20:29,100 --> 00:20:33,270
can say the same so you have an X server

00:20:30,450 --> 00:20:35,520
on there you have a normal shell you can

00:20:33,270 --> 00:20:37,770
do SSH into it which is kind of the

00:20:35,520 --> 00:20:41,070
thing that I think interesting front

00:20:37,770 --> 00:20:42,510
platform yeah it's right it's kind of

00:20:41,070 --> 00:20:44,280
sad that they are going a different

00:20:42,510 --> 00:20:50,940
route so but maybe there's some other

00:20:44,280 --> 00:20:53,600
window coming up I think there was

00:20:50,940 --> 00:20:53,600
question with him

00:20:59,300 --> 00:21:05,850
do you know of any efforts to make

00:21:02,130 --> 00:21:11,850
bindings for the PI site or PI Q to 2 pi

00:21:05,850 --> 00:21:16,650
pi again bindings for pi site or pi cute

00:21:11,850 --> 00:21:21,030
or even some other agree to pi PI pi PI

00:21:16,650 --> 00:21:23,250
oh I'm not aware of any plans I've been

00:21:21,030 --> 00:21:24,690
to the pi PI tag which has just been in

00:21:23,250 --> 00:21:26,790
the other room and they said that they

00:21:24,690 --> 00:21:30,540
provide some support for C Python C

00:21:26,790 --> 00:21:33,510
extensions so yeah it could be that it

00:21:30,540 --> 00:21:38,360
just works I'm not sure it would be

00:21:33,510 --> 00:21:41,130
interesting to try out but then again

00:21:38,360 --> 00:21:43,800
most of the time spent in these GUI

00:21:41,130 --> 00:21:46,290
applications it's probably just in the

00:21:43,800 --> 00:21:48,600
in the UI rendering which stamp acute

00:21:46,290 --> 00:21:50,700
anyway in native natively compiled code

00:21:48,600 --> 00:21:53,730
and you just do some application logic

00:21:50,700 --> 00:21:55,380
in your Python code most of the time or

00:21:53,730 --> 00:21:58,460
reading data or something later on so

00:21:55,380 --> 00:22:01,320
I'm not sure if that specific use case

00:21:58,460 --> 00:22:02,880
benefits from pi PI that much but I'm

00:22:01,320 --> 00:22:05,490
not sure I haven't tried it out so it

00:22:02,880 --> 00:22:08,040
could be that it's really great and we

00:22:05,490 --> 00:22:16,620
should try to get it there I'm not aware

00:22:08,040 --> 00:22:21,300
of any plans I'm confused with coumarin

00:22:16,620 --> 00:22:24,740
I heard before I know a little bit but I

00:22:21,300 --> 00:22:28,980
have my doubts that I heard that for the

00:22:24,740 --> 00:22:32,690
cute version file and there will be a

00:22:28,980 --> 00:22:36,360
big change that you will have to do less

00:22:32,690 --> 00:22:39,870
okay let's program in and you will use

00:22:36,360 --> 00:22:42,690
more scripting I'm not sure if it was

00:22:39,870 --> 00:22:44,490
with the I heard that maybe you have to

00:22:42,690 --> 00:22:51,540
do more Java scripts or I don't know if

00:22:44,490 --> 00:22:53,760
cumin cumin not sure qml if it's the

00:22:51,540 --> 00:22:57,480
language that it's expected to replace

00:22:53,760 --> 00:22:59,310
or to be very important in version 5 or

00:22:57,480 --> 00:23:01,260
it's the Java Script I'm not sure how

00:22:59,310 --> 00:23:08,070
it's from the architecture point of view

00:23:01,260 --> 00:23:10,860
I'm not sure if I basically cute 5 to

00:23:08,070 --> 00:23:11,280
try to move the like right now with cute

00:23:10,860 --> 00:23:11,880
00:23:11,280 --> 00:23:15,030
it's the

00:23:11,880 --> 00:23:17,820
although even in qml you use most of the

00:23:15,030 --> 00:23:20,190
qwidget and modules to render stuff you

00:23:17,820 --> 00:23:23,490
have to pain to stuff like that for cute

00:23:20,190 --> 00:23:25,110
5 as far as I understand it they try to

00:23:23,490 --> 00:23:27,809
move to the acute scene graph which is

00:23:25,110 --> 00:23:29,429
basically taking advantage of all the

00:23:27,809 --> 00:23:34,230
hardware separation that you had any

00:23:29,429 --> 00:23:35,910
recent hardware on the desktop as well

00:23:34,230 --> 00:23:38,520
as a mobile and then put the queue which

00:23:35,910 --> 00:23:41,549
is stuff on top of that so that for qml

00:23:38,520 --> 00:23:42,960
stuff you basically run qmail more or

00:23:41,549 --> 00:23:47,580
less directly without the overhead of

00:23:42,960 --> 00:23:52,320
the big acute GUI module module very

00:23:47,580 --> 00:23:58,049
slow internet now and the question was

00:23:52,320 --> 00:24:02,190
if qml replaces everything or well my

00:23:58,049 --> 00:24:05,549
question if it's qml is the part of

00:24:02,190 --> 00:24:08,940
guilt that will become will be become

00:24:05,549 --> 00:24:11,250
more important yeah in version in the

00:24:08,940 --> 00:24:12,419
Persian Phi of Q T because I I knew that

00:24:11,250 --> 00:24:14,520
there was going to be a big framework

00:24:12,419 --> 00:24:20,760
and they wanted to make this transition

00:24:14,520 --> 00:24:22,169
and I had okay q2 scrip kitty cute qml I

00:24:20,760 --> 00:24:24,110
was not sure which one was the

00:24:22,169 --> 00:24:29,000
technology part that was going to I

00:24:24,110 --> 00:24:32,039
think you and if you've tried qml

00:24:29,000 --> 00:24:34,289
project tried it you will see that it's

00:24:32,039 --> 00:24:37,500
very easy to do the curative stuff so

00:24:34,289 --> 00:24:39,630
for you is especially it does get used

00:24:37,500 --> 00:24:42,059
it does take some time getting used to

00:24:39,630 --> 00:24:45,539
it so when you come from the classical

00:24:42,059 --> 00:24:47,610
UI kind of paradigm why you instantiate

00:24:45,539 --> 00:24:49,890
buttons then you set the text on buttons

00:24:47,610 --> 00:24:54,179
then you do all kinds of different

00:24:49,890 --> 00:24:55,980
stuffs just pick chunks of code just

00:24:54,179 --> 00:24:57,990
dealing with changing the UI and

00:24:55,980 --> 00:25:00,240
enabling pattern stuff like that is it's

00:24:57,990 --> 00:25:02,640
just done in a very declarative way in

00:25:00,240 --> 00:25:11,490
qml and there's also as far as I know

00:25:02,640 --> 00:25:15,390
cue mode which would do if I find it

00:25:11,490 --> 00:25:19,140
right now there is an effort going on an

00:25:15,390 --> 00:25:21,570
experimental effort to provide desktop

00:25:19,140 --> 00:25:23,070
widgets for qml so learning to write

00:25:21,570 --> 00:25:25,050
applications that just look it like a

00:25:23,070 --> 00:25:27,420
normal qwidget application

00:25:25,050 --> 00:25:30,590
using human and using all the features

00:25:27,420 --> 00:25:30,590
of Kuna Oh

00:25:32,730 --> 00:25:37,850

YouTube URL: https://www.youtube.com/watch?v=isDQXSv5kGw


