Title: JSON data + RML template = PDF report
Publication date: 2015-04-19
Playlist: EuroPython 2011
Description: 
	[EuroPython 2011] Stefano Cotta Ramusino - 23 June 2011 in "Track Ravioli"
Captions: 
	00:00:06,440 --> 00:00:14,909
hello the body my name is Stefan um and

00:00:09,090 --> 00:00:21,020
I try to explain acid the use of PDF

00:00:14,909 --> 00:00:28,740
with JSON of a mile in case you want to

00:00:21,020 --> 00:00:32,430
just put an eye on my code I if you

00:00:28,740 --> 00:00:37,980
connect to these others there is some

00:00:32,430 --> 00:00:41,160
code from from slides if you if you not

00:00:37,980 --> 00:00:48,590
dis other cell from the conference you

00:00:41,160 --> 00:00:48,590
can get decoder diapers and so come on

00:00:49,280 --> 00:01:01,700
well the target for the request for for

00:00:55,320 --> 00:01:01,700
the historic two is to create a PDF

00:01:02,630 --> 00:01:14,670
without data input any sort of data but

00:01:09,930 --> 00:01:18,510
with a flexible layout so the the

00:01:14,670 --> 00:01:22,140
flexible layout is a concept that I

00:01:18,510 --> 00:01:28,290
explain better next slide requirement

00:01:22,140 --> 00:01:35,640
that has been done is e the limiters

00:01:28,290 --> 00:01:39,530
this space is a to requirement and so we

00:01:35,640 --> 00:01:44,310
can use a lot occur because all packaged

00:01:39,530 --> 00:01:49,619
text lies and takes a lot of this pace

00:01:44,310 --> 00:01:58,500
and so we we we are we are we have tried

00:01:49,619 --> 00:02:02,430
to avoid to not use this tool and this

00:01:58,500 --> 00:02:07,700
in this locker I prefer if you have some

00:02:02,430 --> 00:02:12,510
questions for me to to give me now

00:02:07,700 --> 00:02:20,270
step by step so if there is something

00:02:12,510 --> 00:02:20,270
this is not clear please inform me so

00:02:21,050 --> 00:02:36,560
what's flexible flexible is a layout

00:02:28,620 --> 00:02:43,020
that is not two and two expected and so

00:02:36,560 --> 00:02:48,950
you you can never go to the to the

00:02:43,020 --> 00:02:54,720
finish of this work so the layout can be

00:02:48,950 --> 00:03:01,920
upgradable in some more in some exam mod

00:02:54,720 --> 00:03:05,970
and so there is a be maybe never a final

00:03:01,920 --> 00:03:10,800
version from your for your layout the

00:03:05,970 --> 00:03:14,700
code I propose is template by basis so

00:03:10,800 --> 00:03:21,769
if you want to create a template for

00:03:14,700 --> 00:03:27,090
your PDF is easy to create this another

00:03:21,769 --> 00:03:34,519
part of the requestor is that all

00:03:27,090 --> 00:03:40,290
project maybe must be ever free so if

00:03:34,519 --> 00:03:46,049
some data going input from the PDF

00:03:40,290 --> 00:03:49,079
library and there is not the the

00:03:46,049 --> 00:03:52,320
possibility that the PDF cannot be

00:03:49,079 --> 00:03:57,709
created the creation of PDF is a

00:03:52,320 --> 00:04:05,480
requirement so if there is data that are

00:03:57,709 --> 00:04:10,769
not transported in a very well mod the

00:04:05,480 --> 00:04:16,889
PDF go to the fault and so all the data

00:04:10,769 --> 00:04:22,019
in input have this date default in

00:04:16,889 --> 00:04:28,340
in project directory so another things

00:04:22,019 --> 00:04:33,529
is the PDF must be able to create

00:04:28,340 --> 00:04:39,629
graphics so graph and image on the fly

00:04:33,529 --> 00:04:44,310
so the data input from the data input we

00:04:39,629 --> 00:04:49,439
can take all the numbers for X and

00:04:44,310 --> 00:04:57,830
lipson up axis and then a plot is graph

00:04:49,439 --> 00:04:57,830
or if you want an image you can create

00:04:57,979 --> 00:05:10,009
simple graphics image like semaphore

00:05:03,139 --> 00:05:17,210
with red yellow and red and green light

00:05:10,009 --> 00:05:24,120
or similar with joke geometrical figures

00:05:17,210 --> 00:05:31,409
so the research start with deep research

00:05:24,120 --> 00:05:36,210
of a PDF library that can be used for

00:05:31,409 --> 00:05:39,300
this project because lattaker that is

00:05:36,210 --> 00:05:45,240
the best of to create a PDF is not

00:05:39,300 --> 00:05:51,930
contemplated and so we we try to move to

00:05:45,240 --> 00:05:57,389
another type of libraries the first one

00:05:51,930 --> 00:06:04,250
for Python the first known the best

00:05:57,389 --> 00:06:09,180
known is a report lab that I speak about

00:06:04,250 --> 00:06:14,909
in the next slide but my first choice

00:06:09,180 --> 00:06:18,960
was LST to PDF somebody acknowledge us

00:06:14,909 --> 00:06:24,379
to a test you can put up your hands if

00:06:18,960 --> 00:06:24,379
you know esoteric texture is a type of

00:06:24,860 --> 00:06:30,670
declaration of text like you can use

00:06:29,399 --> 00:06:36,160
also for

00:06:30,670 --> 00:06:41,980
comments in Python so you you can use

00:06:36,160 --> 00:06:45,910
some type of foam for marketing to

00:06:41,980 --> 00:06:52,570
create a simple document and in this

00:06:45,910 --> 00:06:59,770
library to PDF you can create a PDF with

00:06:52,570 --> 00:07:03,280
some ACK on less to to a text this is my

00:06:59,770 --> 00:07:08,620
first shot because it's very simple the

00:07:03,280 --> 00:07:14,140
input data is a test very compensable to

00:07:08,620 --> 00:07:20,350
read our playing texture so woody F a

00:07:14,140 --> 00:07:29,140
and the the problem is that is a little

00:07:20,350 --> 00:07:33,120
bit limited because if you want some PDF

00:07:29,140 --> 00:07:37,380
that look better you have to look around

00:07:33,120 --> 00:07:40,030
another libraries better because the

00:07:37,380 --> 00:07:45,210
delay so that you can give with this

00:07:40,030 --> 00:07:51,280
library is not the best one so another

00:07:45,210 --> 00:07:57,670
try that I made was with Pisa and also

00:07:51,280 --> 00:08:06,160
know as a HTML to PDF that is a

00:07:57,670 --> 00:08:13,270
converter from HTML to PDF but this work

00:08:06,160 --> 00:08:17,860
a little bad because 22 who made this

00:08:13,270 --> 00:08:26,260
second version and it works like the

00:08:17,860 --> 00:08:31,410
browser so if the HTML pass in Pisa was

00:08:26,260 --> 00:08:37,300
not correct the route is bad very bad

00:08:31,410 --> 00:08:42,630
and so you cannot use all features that

00:08:37,300 --> 00:08:48,960
HTTP allah give to to make for

00:08:42,630 --> 00:08:52,830
for a web page then thinks somebody use

00:08:48,960 --> 00:08:57,770
finks finks i used the in Python

00:08:52,830 --> 00:09:03,530
documentation for official website and

00:08:57,770 --> 00:09:08,960
he create also PDF also then HTML page

00:09:03,530 --> 00:09:14,160
thanks to LSD to PDF that the library

00:09:08,960 --> 00:09:17,430
below and LST to la tech arrestee to

00:09:14,160 --> 00:09:21,930
latex is a command line program that you

00:09:17,430 --> 00:09:26,700
have your new your system if you install

00:09:21,930 --> 00:09:33,830
a text live la tech package it create

00:09:26,700 --> 00:09:39,270
better PDF than LSD to PDF because II

00:09:33,830 --> 00:09:42,210
you can use in LSD in a sudra text more

00:09:39,270 --> 00:09:46,880
features that are not present in our

00:09:42,210 --> 00:09:51,540
city to PDF because the conversion is

00:09:46,880 --> 00:09:56,550
it's better because in in la tech a lot

00:09:51,540 --> 00:10:01,860
of features to create and a beautiful

00:09:56,550 --> 00:10:09,690
layout for your PDF then 5 april 2 pi

00:10:01,860 --> 00:10:12,720
report is a tool that I'm I think they

00:10:09,690 --> 00:10:19,010
will be created for a generator report

00:10:12,720 --> 00:10:25,460
but it's based on logic and so I have to

00:10:19,010 --> 00:10:28,380
not use them and go on then matplotlib I

00:10:25,460 --> 00:10:32,610
discovered that you have a method that

00:10:28,380 --> 00:10:39,980
we call PDF page that create a long fly

00:10:32,610 --> 00:10:42,209
a PDF basing on your graph that a plot

00:10:39,980 --> 00:10:46,319
it's

00:10:42,209 --> 00:10:49,529
and it seemed that is naturally so

00:10:46,319 --> 00:10:54,800
Python pure but I don't investigate

00:10:49,529 --> 00:11:02,850
anymore then there is pod that is

00:10:54,800 --> 00:11:09,389
something in competitor with things but

00:11:02,850 --> 00:11:12,420
to create a PDF it takes a liberal

00:11:09,389 --> 00:11:16,999
office open office in cyber mod so the

00:11:12,420 --> 00:11:20,790
model means that open officer to run a

00:11:16,999 --> 00:11:26,309
server on your desktop on your pc and

00:11:20,790 --> 00:11:30,119
then pour the attached to the report

00:11:26,309 --> 00:11:33,449
that liberal open and use openoffice to

00:11:30,119 --> 00:11:39,329
convert oddity that the pod the Creator

00:11:33,449 --> 00:11:44,610
to PDF this is a inaudible solution

00:11:39,329 --> 00:11:50,549
because you have a salve and only for

00:11:44,610 --> 00:11:55,759
created a document and this served

00:11:50,549 --> 00:11:59,899
disservice of openoffice is not really

00:11:55,759 --> 00:12:04,709
fast it's the best one because

00:11:59,899 --> 00:12:09,839
openoffice know very well ODT format but

00:12:04,709 --> 00:12:15,410
the combustion takes a lot so we are

00:12:09,839 --> 00:12:20,999
shooting a report lab so I investigating

00:12:15,410 --> 00:12:24,149
which the kind of using a reportable you

00:12:20,999 --> 00:12:30,019
can made with this library to create a

00:12:24,149 --> 00:12:33,420
PDF the first one with using canvas but

00:12:30,019 --> 00:12:36,299
seemed a matryoshka mode because you

00:12:33,420 --> 00:12:38,970
have to create an object like a layout

00:12:36,299 --> 00:12:43,920
cell and then put inside another object

00:12:38,970 --> 00:12:48,059
and then go on indep so it's like a

00:12:43,920 --> 00:12:51,299
matryoshka and decode all within Python

00:12:48,059 --> 00:12:53,459
it's an unmaintained ball because if you

00:12:51,299 --> 00:12:58,129
add you if you ever to

00:12:53,459 --> 00:13:02,759
some things to improve your eye out you

00:12:58,129 --> 00:13:05,730
GU fool then there is a platypus that is

00:13:02,759 --> 00:13:08,639
included in report lab that is another

00:13:05,730 --> 00:13:17,759
method to use the report lab that is

00:13:08,639 --> 00:13:26,990
more similar to la tech but I searched

00:13:17,759 --> 00:13:31,529
to try to to to get a file that

00:13:26,990 --> 00:13:34,470
represent my template and which platypus

00:13:31,529 --> 00:13:39,360
called the Python with content a code

00:13:34,470 --> 00:13:43,319
fightin with style sheet or styler with

00:13:39,360 --> 00:13:46,290
PDF is the together it's not the

00:13:43,319 --> 00:13:51,749
solution then I discovered and mal

00:13:46,290 --> 00:13:54,269
report market language that is included

00:13:51,749 --> 00:13:57,959
in a report lab loser that is commercial

00:13:54,269 --> 00:14:02,879
pocket from report lab and and there is

00:13:57,959 --> 00:14:07,860
also implementation called said three C

00:14:02,879 --> 00:14:11,939
dot LML that is in the community in the

00:14:07,860 --> 00:14:16,490
this package you can try a lamb to PDF

00:14:11,939 --> 00:14:25,230
that combat llm format xml a derivation

00:14:16,490 --> 00:14:34,110
to PDF Alamelu is not very simple to to

00:14:25,230 --> 00:14:39,420
learn but it's it's the the the best

00:14:34,110 --> 00:14:43,949
shoes if you if you can't use la tech

00:14:39,420 --> 00:14:47,929
because there is the NIA one there is

00:14:43,949 --> 00:14:52,619
some some documents online to manual

00:14:47,929 --> 00:14:56,459
this is the learning part you can start

00:14:52,619 --> 00:14:59,819
with a for a disc if its own website and

00:14:56,459 --> 00:15:04,649
then go on with sample user guide button

00:14:59,819 --> 00:15:05,950
user guy you can discover that report la

00:15:04,649 --> 00:15:10,890
plaza

00:15:05,950 --> 00:15:18,400
Alamelu is up with more function that

00:15:10,890 --> 00:15:25,320
the Swiss e dot FML so the reference of

00:15:18,400 --> 00:15:30,070
this project and you have to read before

00:15:25,320 --> 00:15:36,540
because you cannot use all feature that

00:15:30,070 --> 00:15:44,520
LML have if you have any question

00:15:36,540 --> 00:15:44,520
somebody know LML before okay only one

00:15:44,700 --> 00:15:56,020
okay how I can create FML right now you

00:15:53,200 --> 00:15:58,870
can create a simple template creating a

00:15:56,020 --> 00:16:01,660
simple text in openoffice or involved

00:15:58,870 --> 00:16:07,360
and then export oddity last version of

00:16:01,660 --> 00:16:10,090
office today take this diffuse and with

00:16:07,360 --> 00:16:14,500
this tool or dt to avenal you can have

00:16:10,090 --> 00:16:17,830
the conversion you can try this tool on

00:16:14,500 --> 00:16:22,090
the apd others i give before if you want

00:16:17,830 --> 00:16:29,220
and that is budget us on this tool that

00:16:22,090 --> 00:16:33,600
is created by the open air p team okay

00:16:29,220 --> 00:16:41,460
this is the main library that I used to

00:16:33,600 --> 00:16:41,460
create the JSON and oml implementation

00:16:41,490 --> 00:16:50,220
there is a blog article called a PDF

00:16:45,700 --> 00:16:53,350
important with general that explain that

00:16:50,220 --> 00:16:57,930
janitor Schimmel create a page on dot

00:16:53,350 --> 00:17:02,740
reports by John because it Jonathan and

00:16:57,930 --> 00:17:10,000
that use in this in that library genki

00:17:02,740 --> 00:17:15,430
with the data in LML somebody ignore

00:17:10,000 --> 00:17:18,000
genki genki okay Jen she is very

00:17:15,430 --> 00:17:22,480
powerful tool

00:17:18,000 --> 00:17:27,060
it takes a template language inside the

00:17:22,480 --> 00:17:30,580
code and include X include the support

00:17:27,060 --> 00:17:34,120
extinct receptor is features that XML

00:17:30,580 --> 00:17:38,500
implement focused on de it's a standard

00:17:34,120 --> 00:17:42,430
and if you use this you can have simple

00:17:38,500 --> 00:17:46,000
XML that incorporate another XML using

00:17:42,430 --> 00:17:49,320
only XML a code that is what I want

00:17:46,000 --> 00:17:52,780
because i want that template our

00:17:49,320 --> 00:17:57,250
separate early for content with the IG's

00:17:52,780 --> 00:18:01,320
include i have that LML can be divided

00:17:57,250 --> 00:18:07,600
in each part content style and

00:18:01,320 --> 00:18:10,530
initialization and so the installation

00:18:07,600 --> 00:18:13,810
installation it very easily you can have

00:18:10,530 --> 00:18:18,490
people is in study the same you have

00:18:13,810 --> 00:18:25,860
with this comment you have all the tools

00:18:18,490 --> 00:18:29,230
that is linked so this commander add

00:18:25,860 --> 00:18:32,590
also i add also peel because peel is a

00:18:29,230 --> 00:18:36,580
requirement for a report lab but i don't

00:18:32,590 --> 00:18:41,590
know why people is installed a candy

00:18:36,580 --> 00:18:45,160
store it automatically and with this

00:18:41,590 --> 00:18:49,240
tool you have also your your pc report

00:18:45,160 --> 00:18:53,350
lousy said Chrissy daughter imagination

00:18:49,240 --> 00:19:00,160
pie PDF by PDF VII is not a creator for

00:18:53,350 --> 00:19:04,120
PDF it's like PDF k and it's like a

00:19:00,160 --> 00:19:08,200
toolkit to work with PDF you can use it

00:19:04,120 --> 00:19:14,850
to make major splitting of PDF but no

00:19:08,200 --> 00:19:20,050
creation then for data there is sample

00:19:14,850 --> 00:19:27,100
some possibility the first one is Jason

00:19:20,050 --> 00:19:31,929
that is good in python 2.6 and the next

00:19:27,100 --> 00:19:35,710
version yamla that needs pi am

00:19:31,929 --> 00:19:40,499
basic to work in Python it is not a

00:19:35,710 --> 00:19:47,919
standard but and jason is a standard so

00:19:40,499 --> 00:19:52,950
for future I think Jason can can go on I

00:19:47,919 --> 00:19:57,809
don't know yamla if if got the same and

00:19:52,950 --> 00:20:03,879
the last choice is using Python itself

00:19:57,809 --> 00:20:08,049
to get the data and simple formatting a

00:20:03,879 --> 00:20:14,740
una piña file that it imports simple and

00:20:08,049 --> 00:20:19,570
you have the data from the decode so

00:20:14,740 --> 00:20:25,899
some code this is the main the main all

00:20:19,570 --> 00:20:33,059
code I've water is about for free for

00:20:25,899 --> 00:20:33,059
fine lines all Paul code is very well

00:20:33,330 --> 00:20:41,409
compact and with this code you can do

00:20:38,529 --> 00:20:46,210
everything the only thing you have to do

00:20:41,409 --> 00:20:50,440
is to learn about LML in documentation

00:20:46,210 --> 00:20:52,539
because some some things if you if you

00:20:50,440 --> 00:20:55,690
want to create some template you have to

00:20:52,539 --> 00:20:59,769
know LML and the conversion from oddity

00:20:55,690 --> 00:21:03,879
to L&L is not enough but is that good

00:20:59,769 --> 00:21:13,029
start of point so this is the main code

00:21:03,879 --> 00:21:21,610
that create a PDF from LML using a JSON

00:21:13,029 --> 00:21:26,830
data in input I index example there is

00:21:21,610 --> 00:21:29,919
no arguments parser because i thinks i

00:21:26,830 --> 00:21:32,919
right using block somebody somebody

00:21:29,919 --> 00:21:35,740
helps ourselves using block i have a

00:21:32,919 --> 00:21:42,789
listen to block a session day before

00:21:35,740 --> 00:21:45,910
okay it's a good tool and so and it

00:21:42,789 --> 00:21:52,630
takes a template out lie outside

00:21:45,910 --> 00:21:58,650
n file reading in file it brighter are

00:21:52,630 --> 00:22:04,560
filing in file called data file dot pie

00:21:58,650 --> 00:22:10,270
that informed the tool that the file is

00:22:04,560 --> 00:22:15,400
data daughter Jason then the import of

00:22:10,270 --> 00:22:20,230
pie John rifles and then they called the

00:22:15,400 --> 00:22:24,460
main code of for creation of PDF the

00:22:20,230 --> 00:22:27,870
first one is to use template accident ox

00:22:24,460 --> 00:22:32,980
Dalton place is the one I passer to

00:22:27,870 --> 00:22:39,970
Cindy and then the rail in the document

00:22:32,980 --> 00:22:44,650
that save all data in PDF and then clean

00:22:39,970 --> 00:22:49,920
up to clean all viable created any

00:22:44,650 --> 00:22:54,520
question I now let's it very simple to

00:22:49,920 --> 00:22:58,390
to create and then it is the main code

00:22:54,520 --> 00:23:07,150
of ll labeled daughter Donnell the

00:22:58,390 --> 00:23:10,870
domain template in this this documented

00:23:07,150 --> 00:23:16,390
there is the user of include and James

00:23:10,870 --> 00:23:20,920
power and there is also coding Python

00:23:16,390 --> 00:23:27,030
because with Jane see you can put Python

00:23:20,920 --> 00:23:34,000
code inside xml but I put only one line

00:23:27,030 --> 00:23:38,920
after XML a declaration from Lynn lib

00:23:34,000 --> 00:23:45,520
data input all lib data is a a library

00:23:38,920 --> 00:23:49,330
that lowered the default so you can have

00:23:45,520 --> 00:23:53,710
all the data for magician that I input

00:23:49,330 --> 00:23:58,090
and data default that you have been your

00:23:53,710 --> 00:24:13,529
project and then all

00:23:58,090 --> 00:24:19,990
this include that there is a a4a for

00:24:13,529 --> 00:24:24,250
menu too for all five that you can split

00:24:19,990 --> 00:24:29,830
your LML docking is ty sheet template

00:24:24,250 --> 00:24:34,929
and story and that there is the with pi

00:24:29,830 --> 00:24:42,070
choose you can write down all the X

00:24:34,929 --> 00:24:46,720
include the tags this is the main

00:24:42,070 --> 00:24:57,090
template and then there is a old file in

00:24:46,720 --> 00:24:57,090
each document some question to ops cool

00:24:58,440 --> 00:25:08,440
it's only a fall from some five name and

00:25:02,320 --> 00:25:13,750
then import with X include this is the

00:25:08,440 --> 00:25:19,830
JSON loader that Lord default for first

00:25:13,750 --> 00:25:25,470
step then longer i implement a simple

00:25:19,830 --> 00:25:32,110
internationalization with json file so i

00:25:25,470 --> 00:25:36,659
get the language that you desire for for

00:25:32,110 --> 00:25:43,440
your data input and then I Lord

00:25:36,659 --> 00:25:43,440
internalization file in JSON file so

00:25:43,710 --> 00:25:55,299
this load default then longer language

00:25:49,090 --> 00:26:02,380
default and last one the data default

00:25:55,299 --> 00:26:08,950
that our user default eddie's is a JSON

00:26:02,380 --> 00:26:14,440
example simple declaration of

00:26:08,950 --> 00:26:19,419
of data in Jason with an away this the

00:26:14,440 --> 00:26:26,049
last away is a example for a graph there

00:26:19,419 --> 00:26:32,080
is a in default there is x axis and this

00:26:26,049 --> 00:26:37,929
one is epsilon axis and so you can trace

00:26:32,080 --> 00:26:43,029
the the graph without problem this is

00:26:37,929 --> 00:26:48,750
the real LML content that is inside the

00:26:43,029 --> 00:26:55,090
story dot XML the one i lured here

00:26:48,750 --> 00:27:00,250
Stoics ml and you can see that the other

00:26:55,090 --> 00:27:06,880
parameters all inside the document data

00:27:00,250 --> 00:27:11,320
field is the name for the field to

00:27:06,880 --> 00:27:13,899
translate so there is a translation in

00:27:11,320 --> 00:27:20,409
on languages of data field and the field

00:27:13,899 --> 00:27:27,010
and data soil and data is the data that

00:27:20,409 --> 00:27:32,529
user data give me from json data and so

00:27:27,010 --> 00:27:36,600
on with the other field and adam this is

00:27:32,529 --> 00:27:40,950
only content so there is no style sheet

00:27:36,600 --> 00:27:45,250
this is a real strange because in FML

00:27:40,950 --> 00:27:50,610
there is a separation between style and

00:27:45,250 --> 00:27:54,970
content but with x include you have a

00:27:50,610 --> 00:28:01,840
separate file and so the situation is a

00:27:54,970 --> 00:28:06,490
more deep and you can walk on single

00:28:01,840 --> 00:28:10,750
file or give a fire to one other people

00:28:06,490 --> 00:28:14,019
to another person to work on and you can

00:28:10,750 --> 00:28:17,679
create a multiple template with the same

00:28:14,019 --> 00:28:20,760
content in this case there is a table

00:28:17,679 --> 00:28:22,160
user data that is defined in style sheet

00:28:20,760 --> 00:28:27,220
document

00:28:22,160 --> 00:28:37,880
ty lord always in this document

00:28:27,220 --> 00:28:47,000
stylesheet' dot XML and this is the

00:28:37,880 --> 00:28:50,480
dynamic LML content this is all on also

00:28:47,000 --> 00:28:54,700
in story dot XML you can include the

00:28:50,480 --> 00:29:00,200
Python code if I include the matplotlib

00:28:54,700 --> 00:29:03,440
yeah this slide is not enough but you

00:29:00,200 --> 00:29:07,540
can use in multiple able to generate a

00:29:03,440 --> 00:29:14,210
simple a PNG file that you can Lord then

00:29:07,540 --> 00:29:18,650
and so you can load data from json data

00:29:14,210 --> 00:29:27,340
input created the image and then put in

00:29:18,650 --> 00:29:38,290
PDF on the fly and so is all question

00:29:27,340 --> 00:29:42,730
yeah I was wondering if an approach

00:29:38,290 --> 00:29:47,720
using a browser instead of report lab

00:29:42,730 --> 00:29:51,320
was interesting I just thought maybe

00:29:47,720 --> 00:29:55,100
using web kit so you do the templating

00:29:51,320 --> 00:29:59,210
in Python before before sorry you do the

00:29:55,100 --> 00:30:10,520
CSS you create an HTML and an HTML and

00:29:59,210 --> 00:30:13,400
then we WebKit you convert to PDF WebKit

00:30:10,520 --> 00:30:19,700
I don't know if there is an expectation

00:30:13,400 --> 00:30:26,740
to PDF but with Pisa the device is that

00:30:19,700 --> 00:30:26,740
they bed with WebKit design

00:30:29,760 --> 00:30:39,340
I know you can do HTML to PDF conversion

00:30:35,200 --> 00:30:43,510
with the QTE bindings of WebKit and we

00:30:39,340 --> 00:30:45,450
have the gtk bindings so I suppose with

00:30:43,510 --> 00:30:53,190
the python bindings you can do the same

00:30:45,450 --> 00:30:53,190
so I think you can take a look at this

00:30:54,120 --> 00:31:03,760
there is an on google code there is a

00:30:57,059 --> 00:31:09,520
project called wh to wh HTML to PDF and

00:31:03,760 --> 00:31:12,520
also to image and it has i think it it

00:31:09,520 --> 00:31:15,570
bundles with all the QT libraries it

00:31:12,520 --> 00:31:21,640
must use so you just install a single

00:31:15,570 --> 00:31:29,340
executable I don't know this feature for

00:31:21,640 --> 00:31:33,130
WebKit but for my project I have really

00:31:29,340 --> 00:31:36,970
a bit of space attic space and so

00:31:33,130 --> 00:31:42,120
installing all kuti all the binding of

00:31:36,970 --> 00:31:47,440
Duty is not a solution for us but I

00:31:42,120 --> 00:31:52,809
think that it is possible I thinks that

00:31:47,440 --> 00:31:58,960
conversion from my HTML is not good

00:31:52,809 --> 00:32:04,750
enough I know the library had you you

00:31:58,960 --> 00:32:09,790
ever tell me but I have some some

00:32:04,750 --> 00:32:13,420
trouble with this one because pizza is

00:32:09,790 --> 00:32:22,540
better a small faster and it not

00:32:13,420 --> 00:32:26,410
crashing okay there were actually some

00:32:22,540 --> 00:32:29,190
more options for converting as xml and

00:32:26,410 --> 00:32:34,900
HTML to PDF for example or you could use

00:32:29,190 --> 00:32:37,929
a tool like apache fop converter for the

00:32:34,900 --> 00:32:39,059
creation from FOP to HTML and I was also

00:32:37,929 --> 00:32:42,210
converter

00:32:39,059 --> 00:32:44,999
are called CSS to XLF oh so it supports

00:32:42,210 --> 00:32:47,940
translation of HTML where I could just

00:32:44,999 --> 00:32:50,580
manage your continent as HML last CSS

00:32:47,940 --> 00:32:52,830
for doing the styling and then I want

00:32:50,580 --> 00:32:59,789
command line called from going from HTML

00:32:52,830 --> 00:33:06,330
or XML to PDF yeah I know folk and it

00:32:59,789 --> 00:33:11,129
sucks exact but I search from technology

00:33:06,330 --> 00:33:14,850
that is only Python buzzard and so I I

00:33:11,129 --> 00:33:20,100
don't use this tool but I know that is

00:33:14,850 --> 00:33:22,759
the best one for this combustion I'm a

00:33:20,100 --> 00:33:25,889
sink commercial product a product of

00:33:22,759 --> 00:33:28,470
reebok leper do you say something about

00:33:25,889 --> 00:33:32,340
the costs or license cause I don't know

00:33:28,470 --> 00:33:35,309
yes name is rapid Laplace LA sir martin

00:33:32,340 --> 00:33:37,679
unknown and I think the lunch cause

00:33:35,309 --> 00:33:39,990
about depending on the number of pages

00:33:37,679 --> 00:33:44,399
of your choosing let's go goes up to

00:33:39,990 --> 00:33:47,580
10,000 british pound per year now some

00:33:44,399 --> 00:33:50,309
cheap alternatives and i'm at i think i

00:33:47,580 --> 00:33:54,629
don't know enabled let loose the result

00:33:50,309 --> 00:33:58,259
to pay to cater that you with this tool

00:33:54,629 --> 00:34:01,950
you can have a PDF inside another PDF

00:33:58,259 --> 00:34:08,069
and so you can create a layout with

00:34:01,950 --> 00:34:14,629
inside layout but i don't know the cost

00:34:08,069 --> 00:34:14,629
of this service another question

00:34:19,000 --> 00:34:25,600
and did you have experience with the

00:34:21,419 --> 00:34:28,810
large number of pages I assume that the

00:34:25,600 --> 00:34:31,360
content of the JSON data is entirely

00:34:28,810 --> 00:34:33,340
loaded in memory you mentioned you had

00:34:31,360 --> 00:34:37,389
problems with this space but what about

00:34:33,340 --> 00:34:42,840
memory space and is also concurrent

00:34:37,389 --> 00:34:49,360
requests for big documents yes then the

00:34:42,840 --> 00:34:55,210
the old data is a lot of memory but data

00:34:49,360 --> 00:35:04,240
in Jason is you you create only a single

00:34:55,210 --> 00:35:08,590
page each time so if you want to to have

00:35:04,240 --> 00:35:13,770
multiple processes in parallel this is

00:35:08,590 --> 00:35:18,930
not a solution but in this case we have

00:35:13,770 --> 00:35:24,490
little space on disk and more or less

00:35:18,930 --> 00:35:28,000
memory so the solution for us is the the

00:35:24,490 --> 00:35:33,970
the best compression the best compact

00:35:28,000 --> 00:35:37,480
assumption but it's really fast yes my

00:35:33,970 --> 00:35:40,930
concern is in case of a document of 100

00:35:37,480 --> 00:35:44,920
pages in a PDF yeah is it a sort of

00:35:40,930 --> 00:35:48,850
stream of pages in output or is it the

00:35:44,920 --> 00:35:53,200
entire PDF completely written in memory

00:35:48,850 --> 00:35:58,420
and then split out the report lab vice

00:35:53,200 --> 00:36:01,480
down its section okay so the the fight

00:35:58,420 --> 00:36:05,590
goes up and went fishing state closed it

00:36:01,480 --> 00:36:10,770
but if you try to open the file when he

00:36:05,590 --> 00:36:15,880
created it's not it's not so a to PDF

00:36:10,770 --> 00:36:18,280
okay thank you yeah one problem we had

00:36:15,880 --> 00:36:21,400
with pizza and yeah the reason why we

00:36:18,280 --> 00:36:25,800
switched to remote lab is that if you

00:36:21,400 --> 00:36:28,840
have a logo in indy header its

00:36:25,800 --> 00:36:32,670
replicated on every page so the final

00:36:28,840 --> 00:36:36,279
size of the PDF groves

00:36:32,670 --> 00:36:42,970
with the Platypus we we were able to

00:36:36,279 --> 00:36:46,690
define a block that is inserted only

00:36:42,970 --> 00:36:53,950
once in the PDF and pasted on every page

00:36:46,690 --> 00:36:58,269
so it only occupies one unit of space is

00:36:53,950 --> 00:37:00,460
this solution able to find something

00:36:58,269 --> 00:37:04,450
like that so a template for the page

00:37:00,460 --> 00:37:07,599
with a header and footer without using

00:37:04,450 --> 00:37:11,640
space yeah yeah yeah because our mail

00:37:07,599 --> 00:37:15,839
implements all things that platypus as

00:37:11,640 --> 00:37:19,059
an amazing I evolution of platypus and

00:37:15,839 --> 00:37:23,019
is for this reason that is in a report

00:37:19,059 --> 00:37:35,829
up loose whole thing saying platypus is

00:37:23,019 --> 00:37:38,319
implemented maybe I didn't understand

00:37:35,829 --> 00:37:41,380
correctly how you bundled all the all

00:37:38,319 --> 00:37:44,890
the templates like this game she like

00:37:41,380 --> 00:37:47,410
yeah and there are staff but is it

00:37:44,890 --> 00:37:51,220
possible to separate template templating

00:37:47,410 --> 00:37:55,569
language like extract all the PDF

00:37:51,220 --> 00:37:57,880
necessary formatting and I know use it

00:37:55,569 --> 00:38:02,259
with our templating languages how hard

00:37:57,880 --> 00:38:04,140
would that be and yeah and the template

00:38:02,259 --> 00:38:09,150
is

00:38:04,140 --> 00:38:12,240
steiff sheet document and so this file

00:38:09,150 --> 00:38:13,890
is separated from others one in the

00:38:12,240 --> 00:38:18,330
others while there is all this toy doc

00:38:13,890 --> 00:38:22,850
takes ml that you see before and this in

00:38:18,330 --> 00:38:27,870
this fighter is all viable and all

00:38:22,850 --> 00:38:33,450
things get from json data but instead

00:38:27,870 --> 00:38:40,190
 you can create what you want to

00:38:33,450 --> 00:38:46,620
format the PDF and so including stanky

00:38:40,190 --> 00:38:51,360
it's used to give to page on page on da

00:38:46,620 --> 00:38:58,730
tripods and listen only file but as

00:38:51,360 --> 00:39:03,900
separately because you can describe

00:38:58,730 --> 00:39:09,210
style for each tagger in story from each

00:39:03,900 --> 00:39:14,400
tag in your content you have a styler in

00:39:09,210 --> 00:39:17,130
style sheet document and so if you write

00:39:14,400 --> 00:39:26,690
all the studied documents you have a new

00:39:17,130 --> 00:39:26,690
PDF with different layout ok

00:39:39,060 --> 00:39:42,230
another question

00:39:46,040 --> 00:40:03,740
some comments and improvement I saw in

00:40:00,320 --> 00:40:07,070
your code a smelly part I don't know how

00:40:03,740 --> 00:40:12,260
to define isn't there a better way to

00:40:07,070 --> 00:40:14,930
pass the information instead of creating

00:40:12,260 --> 00:40:19,060
a temporary file a temporary Python

00:40:14,930 --> 00:40:22,040
source and then including it yeah yeahs

00:40:19,060 --> 00:40:24,410
decoder is a written for sketch from

00:40:22,040 --> 00:40:32,470
this presentation and so there is some

00:40:24,410 --> 00:40:39,590
acts but yes you you can use JSON data

00:40:32,470 --> 00:40:43,430
all on the fly from James DNC library so

00:40:39,590 --> 00:40:45,620
in your XML you can load all what you

00:40:43,430 --> 00:40:50,720
want yeah I don't want to judge your

00:40:45,620 --> 00:40:53,360
code my my concern was about I have a

00:40:50,720 --> 00:40:55,670
job that you've been forced to do this

00:40:53,360 --> 00:41:01,330
because of some limiter but if you say

00:40:55,670 --> 00:41:01,330
it's not so that's fine thanks nothing

00:41:07,470 --> 00:41:14,850
does vref let the alief language support

00:41:11,370 --> 00:41:18,700
enable you to create a PDF forms yeah

00:41:14,850 --> 00:41:22,290
you can create a PDF form because LML

00:41:18,700 --> 00:41:28,890
supports it and so I post lab converse

00:41:22,290 --> 00:41:34,620
from tags from a mile to reality DF form

00:41:28,890 --> 00:41:38,940
yeah yeah and with this type of

00:41:34,620 --> 00:41:44,470
concatenation you can create a form

00:41:38,940 --> 00:41:57,880
dynamically with what what we want in

00:41:44,470 --> 00:42:01,530
which position we want everything okay I

00:41:57,880 --> 00:42:01,530

YouTube URL: https://www.youtube.com/watch?v=yf34NCtdxVI


