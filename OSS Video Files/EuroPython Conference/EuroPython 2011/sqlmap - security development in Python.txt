Title: sqlmap - security development in Python
Publication date: 2015-04-19
Playlist: EuroPython 2011
Description: 
	[EuroPython 2011] Miroslav Stampar - 23 June 2011 in "Track Tagliatelle"
Captions: 
	00:00:06,299 --> 00:00:15,750
hello everybody my name is mr. Stamper

00:00:10,450 --> 00:00:22,330
and I'm one of developers on SQL map

00:00:15,750 --> 00:00:26,440
open-source security project based made

00:00:22,330 --> 00:00:31,000
for detection of SQL injection flaws and

00:00:26,440 --> 00:00:34,570
their exploitation so first of all how

00:00:31,000 --> 00:00:41,670
many of you have used execute map till

00:00:34,570 --> 00:00:41,670
now okay not panicking

00:00:46,450 --> 00:00:58,490
who are we we are team of two members to

00:00:52,730 --> 00:01:03,020
developers one is project leader but not

00:00:58,490 --> 00:01:05,449
the mail he's quite famous since at the

00:01:03,020 --> 00:01:09,560
team he has lots of compressed talks

00:01:05,449 --> 00:01:13,970
around the world maybe you heard of him

00:01:09,560 --> 00:01:18,380
now okay currently he lives in London UK

00:01:13,970 --> 00:01:22,000
but he came but he came from Trieste

00:01:18,380 --> 00:01:26,770
here in Italy and currently he works for

00:01:22,000 --> 00:01:32,270
NGS secure one of biggest UK compressed

00:01:26,770 --> 00:01:37,369
companies one of biggest security

00:01:32,270 --> 00:01:40,970
companies in UK second one is me I'm a

00:01:37,369 --> 00:01:46,670
profession of the developers add to

00:01:40,970 --> 00:01:52,929
automotive company a aw AVL branch

00:01:46,670 --> 00:01:55,550
Croatia we are doing meshing of in a

00:01:52,929 --> 00:01:58,759
motors with internal combustion and

00:01:55,550 --> 00:02:01,840
simulation of those but I was always

00:01:58,759 --> 00:02:06,470
inclined toward security stuff so I

00:02:01,840 --> 00:02:09,759
needed to fulfill to fulfill my my

00:02:06,470 --> 00:02:15,230
childish dreams somehow so hot this is

00:02:09,759 --> 00:02:18,440
this is this sad good waited to fulfill

00:02:15,230 --> 00:02:22,370
them so and this my first conference

00:02:18,440 --> 00:02:31,250
talking a little nervous so don't don't

00:02:22,370 --> 00:02:36,319
blame me for hey thanks so what is equal

00:02:31,250 --> 00:02:41,150
map officially that is just a copy paste

00:02:36,319 --> 00:02:43,220
from our web pages web page sequel map

00:02:41,150 --> 00:02:47,420
is an open-source penetration testing

00:02:43,220 --> 00:02:50,209
tool blah blah blah but in plain

00:02:47,420 --> 00:02:53,470
language it's all in one esco injection

00:02:50,209 --> 00:02:56,190
too so it's not just about the detection

00:02:53,470 --> 00:03:00,840
its exploitation of

00:02:56,190 --> 00:03:03,960
all the same we have all 10,000 updates

00:03:00,840 --> 00:03:08,430
and all download smart monthly which is

00:03:03,960 --> 00:03:11,880
a quite good number and sequel map is

00:03:08,430 --> 00:03:14,820
part of many papa security and

00:03:11,880 --> 00:03:19,080
distributions around such as backtrack

00:03:14,820 --> 00:03:25,230
you know my detector back box web

00:03:19,080 --> 00:03:30,180
security dojo or spin so long sure

00:03:25,230 --> 00:03:35,580
history guy named Daniel bellucci I

00:03:30,180 --> 00:03:40,170
didn't met him I know what our history

00:03:35,580 --> 00:03:42,990
file says and it says that he started

00:03:40,170 --> 00:03:48,180
the project officially july twenty fifth

00:03:42,990 --> 00:03:54,440
of 2006 by registering it to the idea

00:03:48,180 --> 00:03:59,600
the sourceforge as a new project he

00:03:54,440 --> 00:04:04,280
worked on it for a few months it was

00:03:59,600 --> 00:04:09,209
from from my point of view it was quite

00:04:04,280 --> 00:04:11,640
well he worked quite good but at some

00:04:09,209 --> 00:04:16,580
point in time I don't know why he lived

00:04:11,640 --> 00:04:19,919
the projects and Bernardo took it over

00:04:16,580 --> 00:04:24,870
they were friends and but I'll just said

00:04:19,919 --> 00:04:28,950
I mean that field of security and I

00:04:24,870 --> 00:04:34,280
would like to continue it so he worked

00:04:28,950 --> 00:04:38,130
for alone for some three years and

00:04:34,280 --> 00:04:41,130
that's quite hard thing to do working

00:04:38,130 --> 00:04:49,010
alone for three years he he has he had

00:04:41,130 --> 00:04:52,500
even ran mine fremont page where he

00:04:49,010 --> 00:04:55,110
stated to all the faults and all the

00:04:52,500 --> 00:04:58,020
fixes he did he did it just for himself

00:04:55,110 --> 00:05:01,020
and then he didn't quite fine and we

00:04:58,020 --> 00:05:04,770
when i replied to him to his call for

00:05:01,020 --> 00:05:06,150
developers we just continue it so he is

00:05:04,770 --> 00:05:11,880
quite

00:05:06,150 --> 00:05:17,730
quite a decent project leader i should

00:05:11,880 --> 00:05:20,130
say there is a anecdotes how i started

00:05:17,730 --> 00:05:24,780
higher i replied to the call for

00:05:20,130 --> 00:05:28,320
developers I always wanted to I I had an

00:05:24,780 --> 00:05:32,490
urge to be a part of open source

00:05:28,320 --> 00:05:36,090
community and I started to look around

00:05:32,490 --> 00:05:40,410
the projects and I always wanted to be

00:05:36,090 --> 00:05:46,520
part of some security stuff and I know

00:05:40,410 --> 00:05:51,780
that at some point in time I i did some

00:05:46,520 --> 00:05:57,540
dummy testing some ask injection stuff

00:05:51,780 --> 00:06:03,210
like everybody and I recall that there

00:05:57,540 --> 00:06:05,940
was a cool tool and I saw Barnardo's

00:06:03,210 --> 00:06:10,440
call for developers and I was all

00:06:05,940 --> 00:06:14,520
excited and I i replied to him i started

00:06:10,440 --> 00:06:18,000
to work and after he after year of time

00:06:14,520 --> 00:06:22,250
I didn't tell him so this first time

00:06:18,000 --> 00:06:26,790
that hunter this to anyone it was

00:06:22,250 --> 00:06:29,990
totally different and talk so I was

00:06:26,790 --> 00:06:36,750
amazed at a different tool called squid

00:06:29,990 --> 00:06:42,090
but I I somehow mixed those two ha ha ha

00:06:36,750 --> 00:06:46,260
stat I walk you hearin you see it's it's

00:06:42,090 --> 00:06:49,350
almost two years so we did a quite good

00:06:46,260 --> 00:06:55,710
job it at those two years so current

00:06:49,350 --> 00:07:02,000
status stable version is 0.9 but we are

00:06:55,710 --> 00:07:05,940
actively developing on version 1 point 0

00:07:02,000 --> 00:07:09,180
we have a powerful detection engine it's

00:07:05,940 --> 00:07:12,800
not my words it's it's something that

00:07:09,180 --> 00:07:17,040
lets that can be read all around the web

00:07:12,800 --> 00:07:20,240
we did a quite decent job here we spent

00:07:17,040 --> 00:07:23,040
tons and tons and hours here

00:07:20,240 --> 00:07:28,410
we have a state of art in a Malaysian

00:07:23,040 --> 00:07:33,110
engine I shouldn't go much the in detail

00:07:28,410 --> 00:07:36,930
here because it's quite tricky part and

00:07:33,110 --> 00:07:39,660
I shouldn't bother with you here but you

00:07:36,930 --> 00:07:43,560
should know that we really do a good job

00:07:39,660 --> 00:07:46,050
in tat in a Malaysian so you have a you

00:07:43,560 --> 00:07:49,470
have a detection detected SQL injection

00:07:46,050 --> 00:07:52,020
floor and you have to use it somehow and

00:07:49,470 --> 00:07:55,880
that's called an enumeration you need to

00:07:52,020 --> 00:08:02,040
to to recall some data from from vacant

00:07:55,880 --> 00:08:04,680
dbms with that same flow then we have

00:08:02,040 --> 00:08:07,490
take over functionalities you know what

00:08:04,680 --> 00:08:12,570
is metasploit and we are quite good

00:08:07,490 --> 00:08:15,770
integrated with it also we have some web

00:08:12,570 --> 00:08:20,520
she'll step back doors which we upload

00:08:15,770 --> 00:08:25,160
vrdd injection so we give to user

00:08:20,520 --> 00:08:29,580
default the full function earth the full

00:08:25,160 --> 00:08:34,440
takeover full privileges on that

00:08:29,580 --> 00:08:40,800
back-end system then we have support for

00:08:34,440 --> 00:08:44,850
intrusion detection system sends web

00:08:40,800 --> 00:08:47,810
application of use web application

00:08:44,850 --> 00:08:52,650
firewalls in form of tampering scripts

00:08:47,810 --> 00:08:55,800
so there are more and more requests for

00:08:52,650 --> 00:09:01,140
doing this kind of stuff because lots of

00:08:55,800 --> 00:09:04,110
of companies now it says it's a set it's

00:09:01,140 --> 00:09:08,460
a sad fact but they don't page there s

00:09:04,110 --> 00:09:15,600
conjunction force they just they just

00:09:08,460 --> 00:09:20,430
use some some famous leaders like PHP

00:09:15,600 --> 00:09:23,510
ideas or some ref and they just put it

00:09:20,430 --> 00:09:27,510
between the attacker and and them and

00:09:23,510 --> 00:09:31,080
they expect I expect that's that's third

00:09:27,510 --> 00:09:36,380
party tool will will

00:09:31,080 --> 00:09:40,910
will provided defend from the hacker but

00:09:36,380 --> 00:09:45,300
there are other lots of ways how to

00:09:40,910 --> 00:09:49,740
evade a videos and I will introduce some

00:09:45,300 --> 00:09:52,560
some of those at the back of the at the

00:09:49,740 --> 00:09:54,350
end of the presentation also there are

00:09:52,560 --> 00:09:57,660
numerous optimizations like

00:09:54,350 --> 00:10:01,620
multi-threading wherever we can keep

00:09:57,660 --> 00:10:03,990
alive no connections and stuff like that

00:10:01,620 --> 00:10:06,840
we mod file mount elation like file

00:10:03,990 --> 00:10:11,490
reading in and file writing and brute

00:10:06,840 --> 00:10:14,630
force methods potholes methods are will

00:10:11,490 --> 00:10:21,090
come to those but just in short notes

00:10:14,630 --> 00:10:25,380
there are dbms s around it that that

00:10:21,090 --> 00:10:29,190
don't from which you cannot enumerate

00:10:25,380 --> 00:10:33,030
the the names and of identification of

00:10:29,190 --> 00:10:36,180
the all the tables and databases and you

00:10:33,030 --> 00:10:39,720
need to brute force it pours them to be

00:10:36,180 --> 00:10:42,150
able to dump those rows which are

00:10:39,720 --> 00:10:47,480
presented by those same identification

00:10:42,150 --> 00:10:50,910
and we are doing quite good job here

00:10:47,480 --> 00:10:56,580
regarding column naming and proposing of

00:10:50,910 --> 00:11:01,440
table naming also here we I can mention

00:10:56,580 --> 00:11:06,230
the hash cracking will mention you'll

00:11:01,440 --> 00:11:11,190
come back to those later on so future

00:11:06,230 --> 00:11:16,470
GOI lots of people are are bothering us

00:11:11,190 --> 00:11:20,550
so we need to make so it's a top

00:11:16,470 --> 00:11:23,220
priority here we need to do to provide

00:11:20,550 --> 00:11:25,500
some kind of professional reporting we

00:11:23,220 --> 00:11:30,630
have lots of knowledge acquired two

00:11:25,500 --> 00:11:34,080
years but people people don't like to do

00:11:30,630 --> 00:11:37,470
to see just the listing of the common

00:11:34,080 --> 00:11:41,160
line execution they want some solid

00:11:37,470 --> 00:11:44,340
solid stuff where they said that in debt

00:11:41,160 --> 00:11:44,910
to said that annette and we can provide

00:11:44,340 --> 00:11:47,430
your boy

00:11:44,910 --> 00:11:49,890
out which can say this and this is

00:11:47,430 --> 00:11:53,340
affected by this congestion do debt and

00:11:49,890 --> 00:11:57,840
debt please make sure to switch these

00:11:53,340 --> 00:12:02,190
switches on and blah blah blah auto band

00:11:57,840 --> 00:12:07,800
and back advanced techniques support of

00:12:02,190 --> 00:12:15,110
you DBMS is left we have a quite huge

00:12:07,800 --> 00:12:18,000
list of of dbms s which we provide the

00:12:15,110 --> 00:12:22,050
denomination fingerprinting but there

00:12:18,000 --> 00:12:25,920
are still db2 and an ingress and I don't

00:12:22,050 --> 00:12:30,390
know few of those which we need to stick

00:12:25,920 --> 00:12:34,380
it in in future generic lexical parser

00:12:30,390 --> 00:12:41,010
thing is that it's quite it's quite hard

00:12:34,380 --> 00:12:45,120
to to to to differentiate if something

00:12:41,010 --> 00:12:50,010
is is a scholar value or something that

00:12:45,120 --> 00:12:52,470
is a is a vector value of its color way

00:12:50,010 --> 00:12:55,590
which color value you have you have just

00:12:52,470 --> 00:12:58,410
to make a one call and you will you come

00:12:55,590 --> 00:13:02,120
back with that same way but it's with

00:12:58,410 --> 00:13:05,690
multiple row value you have to enumerate

00:13:02,120 --> 00:13:11,010
column by column of that same column so

00:13:05,690 --> 00:13:14,760
we have to right now we have some clumsy

00:13:11,010 --> 00:13:20,780
waited to to to to differentiate those

00:13:14,760 --> 00:13:24,500
two but we thought of doing some kind of

00:13:20,780 --> 00:13:28,230
Escobar Singh for doing that kind stuff

00:13:24,500 --> 00:13:30,960
advanced EDS VF evasion techniques I'll

00:13:28,230 --> 00:13:34,920
come back to those later and ugly to

00:13:30,960 --> 00:13:37,830
python tree these are quite painful

00:13:34,920 --> 00:13:45,500
subject for lots of open source projects

00:13:37,830 --> 00:13:48,840
around so lead project statistics

00:13:45,500 --> 00:13:52,470
tightening and mix MLR talk two

00:13:48,840 --> 00:13:54,690
languages used in in the projects you

00:13:52,470 --> 00:13:57,330
can see that those two combined our

00:13:54,690 --> 00:13:58,680
eighty-eight percent of the project you

00:13:57,330 --> 00:14:02,310
can see down there that

00:13:58,680 --> 00:14:06,350
lines of code to the period of time he

00:14:02,310 --> 00:14:09,690
was the he was the start of the project

00:14:06,350 --> 00:14:12,930
that Daniel diluted did a quite good job

00:14:09,690 --> 00:14:17,060
alone he was Bernard alone and here we

00:14:12,930 --> 00:14:25,260
combine our forces and project went

00:14:17,060 --> 00:14:29,279
white up some of features pull supported

00:14:25,260 --> 00:14:33,839
dbms he's here is a full list and by the

00:14:29,279 --> 00:14:36,720
debt list I can claim that we support

00:14:33,839 --> 00:14:40,890
for what is supported by my sequel it's

00:14:36,720 --> 00:14:44,010
supported by all others so lots of tools

00:14:40,890 --> 00:14:47,160
around claim that they can do stuff from

00:14:44,010 --> 00:14:50,300
this from my sequel Oracle mix of Texas

00:14:47,160 --> 00:14:53,640
and started it but they can provide

00:14:50,300 --> 00:14:57,480
things like fingerprinting but damping

00:14:53,640 --> 00:15:01,020
is quite hardened or on few of those and

00:14:57,480 --> 00:15:04,110
i will introduce you to do to the to the

00:15:01,020 --> 00:15:08,130
method of pivoting which we used for

00:15:04,110 --> 00:15:10,920
those obscure dbms for supporters

00:15:08,130 --> 00:15:16,890
conjunction techniques those are those

00:15:10,920 --> 00:15:24,810
five are the most are the deck combined

00:15:16,890 --> 00:15:28,709
a dell 99% of insulin injection falls

00:15:24,810 --> 00:15:31,830
are affected by those two those five

00:15:28,709 --> 00:15:34,620
techniques then enumeration of database

00:15:31,830 --> 00:15:37,560
users user base users passivation

00:15:34,620 --> 00:15:41,010
spillages throws that the bases tables

00:15:37,560 --> 00:15:43,650
and cool names better cognition cracking

00:15:41,010 --> 00:15:45,600
up pass rush heshes web server file

00:15:43,650 --> 00:15:48,990
upload download i already mentioned that

00:15:45,600 --> 00:15:52,260
i will take command execute execution

00:15:48,990 --> 00:15:55,200
and retrieval standard output mostly

00:15:52,260 --> 00:15:58,560
through web shells and the back doors

00:15:55,200 --> 00:16:02,130
uploaded via del 2 and establish an

00:15:58,560 --> 00:16:06,029
arrangement of out of band tees PDP

00:16:02,130 --> 00:16:11,610
connections this is mostly done we are

00:16:06,029 --> 00:16:12,259
metasploit we upload their their package

00:16:11,610 --> 00:16:15,799
to the

00:16:12,259 --> 00:16:19,249
the backend server we run it and we just

00:16:15,799 --> 00:16:24,199
we just leave it as it is to connect to

00:16:19,249 --> 00:16:30,139
the to the to the server on the the

00:16:24,199 --> 00:16:35,329
integris machine community we have a

00:16:30,139 --> 00:16:39,350
quite huge pool of beta testers around

00:16:35,329 --> 00:16:44,929
this moment 200 subscribes every day

00:16:39,350 --> 00:16:48,369
there is 10 20 different suggestions bug

00:16:44,929 --> 00:16:54,259
reports and stuff like that lots of

00:16:48,369 --> 00:17:00,129
various colors heads around me and

00:16:54,259 --> 00:17:04,130
Bernardo I like to to spend some time

00:17:00,129 --> 00:17:06,549
when we when we meet we like to to to

00:17:04,130 --> 00:17:11,539
talk to talk about some of those people

00:17:06,549 --> 00:17:16,309
are quite few of those obscure people

00:17:11,539 --> 00:17:20,919
around that are messing around d man

00:17:16,309 --> 00:17:25,069
list they all provide indispensable help

00:17:20,919 --> 00:17:29,210
by reporting bugs there are lots of

00:17:25,069 --> 00:17:35,240
obscure cases that us too can't can't

00:17:29,210 --> 00:17:39,970
can't get to we can test every possible

00:17:35,240 --> 00:17:44,289
way of running the program but having a

00:17:39,970 --> 00:17:48,260
around 200 testers active testers is a

00:17:44,289 --> 00:17:50,809
it's a great help for us there are lots

00:17:48,260 --> 00:17:55,090
of each requests lots of things we've

00:17:50,809 --> 00:18:00,590
done which can be claimed revolutionary

00:17:55,090 --> 00:18:04,580
can be all be tank we can be thankful to

00:18:00,590 --> 00:18:07,899
the to the users which which requested

00:18:04,580 --> 00:18:14,510
that features that keeping morale high

00:18:07,899 --> 00:18:16,129
some modest donations are around so this

00:18:14,510 --> 00:18:21,970
has co-injection for dom is for all of

00:18:16,129 --> 00:18:21,970
you that didn't see this kind of stuff

00:18:22,110 --> 00:18:32,230
this phb bits pause just as i beckoned

00:18:28,380 --> 00:18:35,860
dbms you can see here that you have a

00:18:32,230 --> 00:18:39,310
standard query select baba from products

00:18:35,860 --> 00:18:41,710
product ID equals to concatenated value

00:18:39,310 --> 00:18:45,220
of the e or the provided get parameter

00:18:41,710 --> 00:18:49,420
ID attack vector could be Santa like

00:18:45,220 --> 00:18:57,310
this so instead putting ID equals 7 you

00:18:49,420 --> 00:19:01,050
can just put I don't recall the name of

00:18:57,310 --> 00:19:04,120
the semicolon drop table users and

00:19:01,050 --> 00:19:06,700
resulting its sequel statement would be

00:19:04,120 --> 00:19:12,030
something like this and you would just

00:19:06,700 --> 00:19:18,550
lose all the content of your paper uses

00:19:12,030 --> 00:19:22,600
I don't know if you follow the the scene

00:19:18,550 --> 00:19:30,190
last few months you probably heard of

00:19:22,600 --> 00:19:35,830
little second yeah so things that stuff

00:19:30,190 --> 00:19:38,500
is getting pretty hot last few months it

00:19:35,830 --> 00:19:41,740
was quite political like you see here

00:19:38,500 --> 00:19:45,580
okay there was that klepto man I'll the

00:19:41,740 --> 00:19:50,190
Gonzalez 130 million credit cards were

00:19:45,580 --> 00:19:55,600
lost but you can see here 2007-2009

00:19:50,190 --> 00:19:59,130
2009-2010 HB Gary my sequel Commodore

00:19:55,600 --> 00:20:03,010
and this is all just in last few months

00:19:59,130 --> 00:20:06,700
with Sony you have 20 signs sites and

00:20:03,010 --> 00:20:10,860
Counting in last month's folks so on

00:20:06,700 --> 00:20:14,380
InfraGard Nintendo CNN and that's all

00:20:10,860 --> 00:20:18,360
those all were affected by escrow

00:20:14,380 --> 00:20:24,730
injection flows so you can see that

00:20:18,360 --> 00:20:27,970
these are quite a hot topic now also

00:20:24,730 --> 00:20:32,230
there is something called sequel mess

00:20:27,970 --> 00:20:33,830
injection around Lisa Moniz good

00:20:32,230 --> 00:20:38,960
presenter here

00:20:33,830 --> 00:20:45,409
you can see 29 to March it had 22 26

00:20:38,960 --> 00:20:48,880
thousand sites were affected and after a

00:20:45,409 --> 00:20:55,549
few days there were 1,000,000 of those

00:20:48,880 --> 00:20:59,990
so it's quite nasty thing around and I

00:20:55,549 --> 00:21:02,860
found this random code which which best

00:20:59,990 --> 00:21:06,730
describes the current situation so

00:21:02,860 --> 00:21:10,730
starstruck where language is becoming a

00:21:06,730 --> 00:21:22,070
hill is he loved the Internet's you

00:21:10,730 --> 00:21:25,010
probably know this so you I don't know

00:21:22,070 --> 00:21:29,000
if some of you that don't that means x

00:21:25,010 --> 00:21:31,659
mas explanation of those but as you can

00:21:29,000 --> 00:21:35,139
see esco injection is also going part

00:21:31,659 --> 00:21:41,080
with the popper culture as X casa de

00:21:35,139 --> 00:21:46,279
then there is funny Swedes anecdotes

00:21:41,080 --> 00:21:50,799
some dude that on the on the recent

00:21:46,279 --> 00:21:54,440
elections put those put those videos and

00:21:50,799 --> 00:21:58,760
one of those videos were bone drop table

00:21:54,440 --> 00:22:07,789
ball while val is a swedish for election

00:21:58,760 --> 00:22:10,760
so and and i don't know how many of you

00:22:07,789 --> 00:22:14,779
on the web sites around that can be

00:22:10,760 --> 00:22:21,769
affected with with such thing but this

00:22:14,779 --> 00:22:26,000
hunt achat is a quite nasty group of

00:22:21,769 --> 00:22:30,409
people that are not chatting like normal

00:22:26,000 --> 00:22:34,960
people like using subjects and verbs and

00:22:30,409 --> 00:22:41,570
stuff like that they all they all do

00:22:34,960 --> 00:22:44,419
just putting found targets so if you own

00:22:41,570 --> 00:22:47,299
a target you should you should you

00:22:44,419 --> 00:22:49,879
should spend some time and

00:22:47,299 --> 00:22:53,809
search around that and to chat forum

00:22:49,879 --> 00:22:56,960
maybe you are there so right now you can

00:22:53,809 --> 00:22:59,749
see the 40,000 targets there they don't

00:22:56,960 --> 00:23:04,549
do anything which with those but they

00:22:59,749 --> 00:23:08,330
put it there for for potentially usage

00:23:04,549 --> 00:23:11,869
by some bad people so for uploading

00:23:08,330 --> 00:23:17,210
stuff like I don't know PHP shells which

00:23:11,869 --> 00:23:24,350
can be useful for flooding and start ok

00:23:17,210 --> 00:23:30,409
now it's good at I've put some some info

00:23:24,350 --> 00:23:33,619
on the techniques itself because I don't

00:23:30,409 --> 00:23:37,700
know how how many of you are can say

00:23:33,619 --> 00:23:42,499
that they really know fifty percent of

00:23:37,700 --> 00:23:46,669
this toda topic so now so it goes like

00:23:42,499 --> 00:23:52,909
this you have we have five five major

00:23:46,669 --> 00:23:54,940
techniques around first one is known as

00:23:52,909 --> 00:23:59,720
the boolean or plant based technique

00:23:54,940 --> 00:24:03,619
also part of pop culture call it one

00:23:59,720 --> 00:24:08,539
equals one four out of five hundred case

00:24:03,619 --> 00:24:13,429
are affected thing is that we are trying

00:24:08,539 --> 00:24:16,940
to to force the web server to to change

00:24:13,429 --> 00:24:20,960
the appearance of the page if the if the

00:24:16,940 --> 00:24:24,559
response of the of the data or the

00:24:20,960 --> 00:24:27,769
request is true and versus the

00:24:24,559 --> 00:24:30,230
responsive the requested if the response

00:24:27,769 --> 00:24:34,129
for the request is false so for every

00:24:30,230 --> 00:24:36,169
bit of information we are extracting we

00:24:34,129 --> 00:24:38,389
are forcing the web server to put

00:24:36,169 --> 00:24:46,429
something that is similar to the

00:24:38,389 --> 00:24:48,550
original page or totally totally dif

00:24:46,429 --> 00:24:53,320
different

00:24:48,550 --> 00:24:58,270
as this item conference you probably

00:24:53,320 --> 00:25:02,680
know the D flip module deeply deeply

00:24:58,270 --> 00:25:06,850
busy quite quite good money for doing

00:25:02,680 --> 00:25:09,850
this kind of stuff you just said compare

00:25:06,850 --> 00:25:15,580
me this with that it will say it will

00:25:09,850 --> 00:25:20,800
tell you amount of ratio how much you

00:25:15,580 --> 00:25:24,100
how much 22 pages are similar so if the

00:25:20,800 --> 00:25:27,790
ratio is quite low dark white hands

00:25:24,100 --> 00:25:35,320
there are similar if the if it's quite

00:25:27,790 --> 00:25:39,070
high it does similar so so for two

00:25:35,320 --> 00:25:42,490
responses we want our Asia to be as high

00:25:39,070 --> 00:25:50,910
for false responses how our ratio should

00:25:42,490 --> 00:25:55,540
go download this is a this is a manual

00:25:50,910 --> 00:26:01,000
manual example you can see here a normal

00:25:55,540 --> 00:26:04,120
request ID equals 12 result with Santa

00:26:01,000 --> 00:26:08,400
like this if you say and one equals one

00:26:04,120 --> 00:26:12,070
it was resulted as the complete same

00:26:08,400 --> 00:26:14,740
response but if you say aunt 1 equals 0

00:26:12,070 --> 00:26:18,430
it will result with something totally

00:26:14,740 --> 00:26:23,830
different and that's the des decor of

00:26:18,430 --> 00:26:27,700
bullying our blind best technique el at

00:26:23,830 --> 00:26:30,250
the point we will come to the point i'll

00:26:27,700 --> 00:26:34,000
show you a few examples i'll have to use

00:26:30,250 --> 00:26:37,330
those arrow based technique we are

00:26:34,000 --> 00:26:40,720
provoking the the error messages from

00:26:37,330 --> 00:26:43,600
the server and thing is that we can

00:26:40,720 --> 00:26:48,900
provoke error messages in such a way

00:26:43,600 --> 00:26:48,900
that that it can it can

00:26:49,789 --> 00:26:56,929
it can have the the results of the query

00:26:53,009 --> 00:27:00,240
we want so at the most proper way for

00:26:56,929 --> 00:27:03,509
for air based technique is to convert

00:27:00,240 --> 00:27:08,120
some kind of string to the integer so

00:27:03,509 --> 00:27:12,929
you put up a select into the convert

00:27:08,120 --> 00:27:15,269
convert function and you say give me

00:27:12,929 --> 00:27:19,649
give me the password of that user and

00:27:15,269 --> 00:27:22,649
convert it to integer and the web server

00:27:19,649 --> 00:27:24,899
will respond I can't convert that that's

00:27:22,649 --> 00:27:28,110
a string and it will tell you that same

00:27:24,899 --> 00:27:31,409
string and that's the the point of the

00:27:28,110 --> 00:27:35,490
terror based technique this is an

00:27:31,409 --> 00:27:39,389
example you can see here we are

00:27:35,490 --> 00:27:42,120
converting version version is a global

00:27:39,389 --> 00:27:44,450
variable document to the integer and the

00:27:42,120 --> 00:27:47,639
server will respond with Santa ladies I

00:27:44,450 --> 00:27:51,210
cannot convert it to the to the integer

00:27:47,639 --> 00:27:54,440
and to say mix equal zero 2005

00:27:51,210 --> 00:27:54,440
everything will be here

00:28:06,570 --> 00:28:09,720
that's it

00:28:17,040 --> 00:28:26,920
that's it so basically you can put

00:28:21,930 --> 00:28:29,230
anything here which is a string and to

00:28:26,920 --> 00:28:33,190
sell you the result of that sub query

00:28:29,230 --> 00:28:35,740
here that I cannot convert that string

00:28:33,190 --> 00:28:38,610
to the integer anything you can can ask

00:28:35,740 --> 00:28:46,870
him for passwords and stuff like that

00:28:38,610 --> 00:28:50,950
you an enquiry technique this is the

00:28:46,870 --> 00:28:53,200
fastest of all techniques it combines to

00:28:50,950 --> 00:28:56,010
the original results with the with the

00:28:53,200 --> 00:29:00,520
new results we want so basically

00:28:56,010 --> 00:29:04,810
basically we have our packets we have

00:29:00,520 --> 00:29:12,670
affected query and we use the Union to

00:29:04,810 --> 00:29:16,060
add happened some new stuff inside so

00:29:12,670 --> 00:29:19,300
here you can see this the simplest case

00:29:16,060 --> 00:29:22,210
full a full unit full Union query

00:29:19,300 --> 00:29:26,110
technique but you just say union all

00:29:22,210 --> 00:29:29,470
select you see here ID name surname from

00:29:26,110 --> 00:29:37,300
users and you took down all the content

00:29:29,470 --> 00:29:40,750
of that users table Barcia one these are

00:29:37,300 --> 00:29:44,200
more complicated partial Union queries

00:29:40,750 --> 00:29:48,850
for the case when Wendy Wendy web server

00:29:44,200 --> 00:29:52,630
somehow limits the the output of of the

00:29:48,850 --> 00:29:56,170
the results so it doesn't unless the old

00:29:52,630 --> 00:29:59,920
rose intently it at least only the first

00:29:56,170 --> 00:30:03,310
one so we are deliberately putting hear

00:29:59,920 --> 00:30:05,830
something illegal to to analyze the the

00:30:03,310 --> 00:30:12,760
original response and put something that

00:30:05,830 --> 00:30:14,509
we want we get something like this time

00:30:12,760 --> 00:30:18,169
delay based technique

00:30:14,509 --> 00:30:20,179
same stuff as blind based only thing the

00:30:18,169 --> 00:30:23,089
only difference is that you you don't

00:30:20,179 --> 00:30:25,219
see the difference on the response pages

00:30:23,089 --> 00:30:32,599
but you see the difference in the in the

00:30:25,219 --> 00:30:36,859
response times you can see one example

00:30:32,599 --> 00:30:42,349
and one equals two something which

00:30:36,859 --> 00:30:44,899
sleeps and this will delay the the

00:30:42,349 --> 00:30:49,249
response for five seconds you will see

00:30:44,899 --> 00:30:51,949
how to use it later on steak wary

00:30:49,249 --> 00:30:56,079
techniques same stuff has timed only

00:30:51,949 --> 00:31:02,440
things that you just put here something

00:30:56,079 --> 00:31:06,019
something are behind the semicolon and

00:31:02,440 --> 00:31:09,589
these debates working examples you want

00:31:06,019 --> 00:31:14,469
to see this is the stuff you are asking

00:31:09,589 --> 00:31:18,909
what the was the first character of the

00:31:14,469 --> 00:31:22,549
password from users so first password

00:31:18,909 --> 00:31:27,379
from users for character you see he

00:31:22,549 --> 00:31:32,539
often 0 limit 1 first char length 1 and

00:31:27,379 --> 00:31:36,129
you ask if it's greater than this is for

00:31:32,539 --> 00:31:39,979
this son ascii as he called for for

00:31:36,129 --> 00:31:42,739
monkey munch aaah so you are asking him

00:31:39,979 --> 00:31:45,889
if it's greater than the dead monkey

00:31:42,739 --> 00:31:50,179
chapter and if the response is true you

00:31:45,889 --> 00:31:53,779
know that that the that the the chapter

00:31:50,179 --> 00:31:59,329
is something at the at the higher level

00:31:53,779 --> 00:32:02,659
of the ASCII table arrow based technique

00:31:59,329 --> 00:32:06,589
you can see here say pass on for public

00:32:02,659 --> 00:32:10,190
user with the Liberty put here we are

00:32:06,589 --> 00:32:15,079
concatenating concatenating here some

00:32:10,190 --> 00:32:18,469
prefix and suffix to to to to be sure

00:32:15,079 --> 00:32:21,079
that the that the dead concatenate

00:32:18,469 --> 00:32:25,429
distinct will be something known integer

00:32:21,079 --> 00:32:28,209
so that we are sure that this will be

00:32:25,429 --> 00:32:28,209
for sure

00:32:29,200 --> 00:32:44,299
trigger the error response Union query

00:32:33,220 --> 00:32:49,010
Santa this up tampa-based sick Tom DeLay

00:32:44,299 --> 00:32:52,370
based you can see here we are using case

00:32:49,010 --> 00:32:56,260
if that first character is something

00:32:52,370 --> 00:33:02,600
created that that monkey then do nothing

00:32:56,260 --> 00:33:04,850
do dummies like else sleep so we will

00:33:02,600 --> 00:33:09,770
detect those slips and we will

00:33:04,850 --> 00:33:12,110
reconstruct the DD the de chartres by

00:33:09,770 --> 00:33:14,950
that those responses that query is the

00:33:12,110 --> 00:33:18,620
same stuff it's time delay based

00:33:14,950 --> 00:33:23,559
pointings it is you don't put here you

00:33:18,620 --> 00:33:23,559
just put semicolon and do the new select

00:33:41,240 --> 00:33:49,679
okay something about the program

00:33:44,399 --> 00:33:53,370
structure I wouldn't go here in March

00:33:49,679 --> 00:33:57,029
details I'll just do a quick overview we

00:33:53,370 --> 00:33:59,970
put everything dog based into the dog

00:33:57,029 --> 00:34:03,090
directory manual thanks changelog and

00:33:59,970 --> 00:34:06,049
started it into the lib though there are

00:34:03,090 --> 00:34:13,379
core modules until there are there is a

00:34:06,049 --> 00:34:15,929
core there is a core engine inside in

00:34:13,379 --> 00:34:18,599
extra V we put third-party models in

00:34:15,929 --> 00:34:21,599
plugins we put the best math specific

00:34:18,599 --> 00:34:24,960
models so for every new dbms we put a

00:34:21,599 --> 00:34:28,260
new plugin inside which tells how to how

00:34:24,960 --> 00:34:31,260
to detect that same dbms and how to

00:34:28,260 --> 00:34:34,940
enumerate it because every dbms has some

00:34:31,260 --> 00:34:38,490
specific stuff which needs to be used

00:34:34,940 --> 00:34:42,119
then in shell we put stages and back

00:34:38,490 --> 00:34:45,300
doors for those out of band connections

00:34:42,119 --> 00:34:50,520
in tempo we use those we put those

00:34:45,300 --> 00:34:53,490
tempering scripts for bypassing the D

00:34:50,520 --> 00:34:58,650
firewall in TX TV puts all these user

00:34:53,490 --> 00:35:00,869
agents stuff like that in XML we put

00:34:58,650 --> 00:35:03,990
queries and bellows this is the decor of

00:35:00,869 --> 00:35:07,020
the sequel map this D this is the engine

00:35:03,990 --> 00:35:11,460
but is the whole knowledge of sequel map

00:35:07,020 --> 00:35:14,940
so if any of you plan to rewrite it or

00:35:11,460 --> 00:35:18,270
steal something from it this is the this

00:35:14,940 --> 00:35:22,400
is the knowledge so by using this

00:35:18,270 --> 00:35:22,400
knowledge you can do lots of stuff

00:35:23,000 --> 00:35:32,329
programs water can be described sometime

00:35:28,440 --> 00:35:35,720
this you have a pretty huge set up so

00:35:32,329 --> 00:35:40,790
there are lots of stuff that needs to be

00:35:35,720 --> 00:35:43,740
configured lots of connection based of

00:35:40,790 --> 00:35:47,310
payloads and queries for those XML files

00:35:43,740 --> 00:35:49,530
needs to go to some proper proper

00:35:47,310 --> 00:35:52,740
structure where we need we can easily

00:35:49,530 --> 00:35:53,880
access them after that set up we'd have

00:35:52,740 --> 00:35:58,440
a detection

00:35:53,880 --> 00:36:01,290
base detection phase we have those five

00:35:58,440 --> 00:36:03,990
major techniques after the detection

00:36:01,290 --> 00:36:06,270
phase so after we detected as

00:36:03,990 --> 00:36:08,400
co-injection we are going to the

00:36:06,270 --> 00:36:13,200
fingerprinting because now we know that

00:36:08,400 --> 00:36:16,800
that that server is affected but we need

00:36:13,200 --> 00:36:20,670
to know what is the back in dbms so we

00:36:16,800 --> 00:36:23,550
could enumerate it because every DBMS

00:36:20,670 --> 00:36:26,120
has song specifics so after the

00:36:23,550 --> 00:36:30,420
fingerprinting we do the enumeration and

00:36:26,120 --> 00:36:34,680
take all is an optional so you see here

00:36:30,420 --> 00:36:39,420
we can read registry keys give file

00:36:34,680 --> 00:36:42,750
access to the user that is cmps ages and

00:36:39,420 --> 00:36:44,670
UDP reverse shell metasploit gives you a

00:36:42,750 --> 00:36:50,280
disappearance showing up shell you know

00:36:44,670 --> 00:36:52,800
what the open environment is resisted

00:36:50,280 --> 00:36:57,150
all sounds like this we have a

00:36:52,800 --> 00:36:59,720
subversion as there are two of us we

00:36:57,150 --> 00:37:04,140
don't need mercury and stuff like that

00:36:59,720 --> 00:37:07,370
so subversion is quite decent we use a

00:37:04,140 --> 00:37:11,700
red mind for project management we are

00:37:07,370 --> 00:37:16,590
baseball on Python too we don't plan to

00:37:11,700 --> 00:37:20,790
move to python 3some show period takes

00:37:16,590 --> 00:37:24,570
80 chose debugger of choice in testing

00:37:20,790 --> 00:37:28,260
environment we have two testing machines

00:37:24,570 --> 00:37:32,100
one is dings machine and one is Windows

00:37:28,260 --> 00:37:37,470
machine we use that linux machine quite

00:37:32,100 --> 00:37:43,680
often it's light small memory footprints

00:37:37,470 --> 00:37:45,390
use it quite quite a lot and now now

00:37:43,680 --> 00:37:50,010
this should be the decor of the

00:37:45,390 --> 00:37:53,850
presentation now i will i'll go to the

00:37:50,010 --> 00:37:56,070
highlights i can say that those are

00:37:53,850 --> 00:37:59,240
revolutionary things but these things

00:37:56,070 --> 00:38:03,110
combined make and secure map a really

00:37:59,240 --> 00:38:05,880
great tool for doing this kind of stuff

00:38:03,110 --> 00:38:07,450
inference inference is nothing

00:38:05,880 --> 00:38:12,910
revolutionary but

00:38:07,450 --> 00:38:17,740
for those who don't know that is

00:38:12,910 --> 00:38:20,980
basically binary search so when you want

00:38:17,740 --> 00:38:24,160
to know what the was the first character

00:38:20,980 --> 00:38:27,760
of that password you can go and ask it

00:38:24,160 --> 00:38:30,460
is it a is it be easy to easy d but you

00:38:27,760 --> 00:38:34,390
will have to go to the old a skit able

00:38:30,460 --> 00:38:36,730
to find it the the character so

00:38:34,390 --> 00:38:44,380
complexity will be something around oh

00:38:36,730 --> 00:38:47,140
and / x 2 which is quite slow but you

00:38:44,380 --> 00:38:54,550
have that binary search principle where

00:38:47,140 --> 00:38:57,580
you have the the table and you say you

00:38:54,550 --> 00:39:03,300
ask if the Charter is something in the

00:38:57,580 --> 00:39:08,110
upper part of the table if it's true you

00:39:03,300 --> 00:39:12,220
you just shorten the table and just use

00:39:08,110 --> 00:39:15,490
that data upper part then you say if

00:39:12,220 --> 00:39:19,630
that same territories is something from

00:39:15,490 --> 00:39:23,620
this upper part of this and if it's

00:39:19,630 --> 00:39:27,010
false you will just use that low part of

00:39:23,620 --> 00:39:29,620
that's the same table and at the end you

00:39:27,010 --> 00:39:31,720
will came to come to thee to the table

00:39:29,620 --> 00:39:34,090
with only one charlton that's only one

00:39:31,720 --> 00:39:37,270
chart will be debt resulting one that's

00:39:34,090 --> 00:39:41,970
going for in fairness chair the

00:39:37,270 --> 00:39:46,150
prediction thing is that scene in

00:39:41,970 --> 00:39:50,230
dumping of particularly indentification

00:39:46,150 --> 00:39:52,660
names and and system stuff there are

00:39:50,230 --> 00:39:55,120
lots and lots of repetition going on

00:39:52,660 --> 00:40:00,850
like create synonym create table create

00:39:55,120 --> 00:40:04,840
trigger stuff like that and we came to

00:40:00,850 --> 00:40:11,320
the idea to to use something called

00:40:04,840 --> 00:40:14,980
dynamic production tree so we get the

00:40:11,320 --> 00:40:18,910
first character and if we see we have

00:40:14,980 --> 00:40:21,480
the the list of all common stuff used by

00:40:18,910 --> 00:40:26,790
all our dbms support

00:40:21,480 --> 00:40:31,020
and we just create dee dee dee table or

00:40:26,790 --> 00:40:35,010
three and we just decide what the the

00:40:31,020 --> 00:40:38,480
best was the highest probability of the

00:40:35,010 --> 00:40:44,280
next charter involved so if you have

00:40:38,480 --> 00:40:47,820
these as as as common stuff used by DBMS

00:40:44,280 --> 00:40:51,000
and you know that the disease for

00:40:47,820 --> 00:40:53,820
charter you can quite easy spot that

00:40:51,000 --> 00:40:57,690
they all share the r is the second

00:40:53,820 --> 00:41:00,660
chapter and so we know that the if we if

00:40:57,690 --> 00:41:06,510
we ask if the charters are that it will

00:41:00,660 --> 00:41:09,359
have a high priority to to not go to all

00:41:06,510 --> 00:41:14,369
the table but just spa debts charter

00:41:09,359 --> 00:41:20,760
there so you see here we are going to

00:41:14,369 --> 00:41:29,190
the create to the creates part of three

00:41:20,760 --> 00:41:32,520
and we came here with the s d D you we

00:41:29,190 --> 00:41:35,340
now we know that the that the highest

00:41:32,520 --> 00:41:38,130
probability will be based around these

00:41:35,340 --> 00:41:41,460
charters not the whole table but these

00:41:38,130 --> 00:41:44,190
charters and we'll ask if there is if

00:41:41,460 --> 00:41:48,410
the chart is something from the upper

00:41:44,190 --> 00:41:48,410
part like said indebted ferns partner

00:41:59,630 --> 00:42:09,320
no connection things that there's quite

00:42:05,570 --> 00:42:12,350
nice article around that says that you

00:42:09,320 --> 00:42:17,140
don't have to to get all the page

00:42:12,350 --> 00:42:22,280
content to be able to compare those

00:42:17,140 --> 00:42:25,810
contents you can only get the the sizes

00:42:22,280 --> 00:42:31,670
of those pages and compare those sizes

00:42:25,810 --> 00:42:35,150
is it for example an Apache if you put

00:42:31,670 --> 00:42:38,210
on header called range and if you put

00:42:35,150 --> 00:42:42,440
bytes equals to minus one it will just

00:42:38,210 --> 00:42:46,820
reply with something like this without

00:42:42,440 --> 00:42:49,910
any without any body so you can imagine

00:42:46,820 --> 00:42:52,810
you can imagine what's the what's the

00:42:49,910 --> 00:42:57,680
speed optimization of this of this

00:42:52,810 --> 00:43:01,910
method so if the original page was

00:42:57,680 --> 00:43:05,450
something around 60 75 charities long

00:43:01,910 --> 00:43:08,900
and you get with the response or your

00:43:05,450 --> 00:43:12,620
injection that this is 75 you know that

00:43:08,900 --> 00:43:16,610
this response should be true and if you

00:43:12,620 --> 00:43:19,040
have something something different than

00:43:16,610 --> 00:43:24,500
this like this part you know the

00:43:19,040 --> 00:43:27,290
disposed in is instead of range you use

00:43:24,500 --> 00:43:30,140
the method heads and you get just the

00:43:27,290 --> 00:43:34,220
response something like that contact-

00:43:30,140 --> 00:43:39,560
length with the video lento that's body

00:43:34,220 --> 00:43:41,800
which is not applied to this so we are

00:43:39,560 --> 00:43:47,450
just keeping the huge bandwidth loss

00:43:41,800 --> 00:43:51,140
around and use this stuff the mystery

00:43:47,450 --> 00:43:54,080
remove thing is it when you compared to

00:43:51,140 --> 00:43:57,650
pages and if they have lots of gel

00:43:54,080 --> 00:43:59,650
script ads and banners inside you

00:43:57,650 --> 00:44:03,620
probably notice that after few seconds

00:43:59,650 --> 00:44:07,870
pages just differ somehow and that

00:44:03,620 --> 00:44:11,900
causes trouble so in normal situations

00:44:07,870 --> 00:44:13,370
it's very hard to distinguish at the ad

00:44:11,900 --> 00:44:16,910
Python level

00:44:13,370 --> 00:44:19,070
the deflate level if those two pages are

00:44:16,910 --> 00:44:20,720
same or different so are we talking

00:44:19,070 --> 00:44:25,430
about the true true or true false

00:44:20,720 --> 00:44:31,820
responses and we came to the idea to

00:44:25,430 --> 00:44:36,920
remove those dynamic part so we are

00:44:31,820 --> 00:44:42,920
using again the flip and we compare two

00:44:36,920 --> 00:44:47,240
pages which are retrieved with some

00:44:42,920 --> 00:44:51,010
period time few seconds and we get with

00:44:47,240 --> 00:44:55,370
it deeply we can get the matching blocks

00:44:51,010 --> 00:44:58,820
from those two pages and we know that

00:44:55,370 --> 00:45:01,580
too those matching box are aesthetic

00:44:58,820 --> 00:45:05,810
ones but there are those be between

00:45:01,580 --> 00:45:09,110
those are dynamic part so using the

00:45:05,810 --> 00:45:12,200
regular expressions we can we can

00:45:09,110 --> 00:45:14,960
distinguish later on what is what is

00:45:12,200 --> 00:45:17,360
static and what is dynamic so using

00:45:14,960 --> 00:45:21,770
stamp something like this we can just

00:45:17,360 --> 00:45:25,630
remove those those parts which are which

00:45:21,770 --> 00:45:25,630
are marked with this regular expression

00:45:26,620 --> 00:45:38,540
reflective values thing is that in some

00:45:30,080 --> 00:45:41,810
cases pages like search pages just put

00:45:38,540 --> 00:45:45,530
something like if you use this as a

00:45:41,810 --> 00:45:47,930
query it can just turn this inside the

00:45:45,530 --> 00:45:52,370
the pages body and this gives a headache

00:45:47,930 --> 00:45:56,410
for for for detection part and we are

00:45:52,370 --> 00:45:59,120
using Santa cold call we are using

00:45:56,410 --> 00:46:04,310
method to to remove those reflecting

00:45:59,120 --> 00:46:07,900
values by using regular expressions the

00:46:04,310 --> 00:46:14,060
same way as we use it in in those

00:46:07,900 --> 00:46:18,530
removing off of dynamis T so we put hear

00:46:14,060 --> 00:46:21,530
something those charters we know that

00:46:18,530 --> 00:46:25,040
won't be encoded in any way by the web

00:46:21,530 --> 00:46:27,260
server so chart as plain shelters a to z

00:46:25,040 --> 00:46:29,660
+ n n numbers

00:46:27,260 --> 00:46:31,220
but those patients artists like spaces

00:46:29,660 --> 00:46:33,500
we know that there is a high probability

00:46:31,220 --> 00:46:37,550
that they will contain something like

00:46:33,500 --> 00:46:40,910
that so we use regular expressions like

00:46:37,550 --> 00:46:44,240
this to distinguish if there was

00:46:40,910 --> 00:46:47,360
something like this reflected in the

00:46:44,240 --> 00:46:51,830
responses body if it was we just remove

00:46:47,360 --> 00:46:54,820
it and it gets the job far easier for

00:46:51,830 --> 00:47:00,130
for for detection if something was

00:46:54,820 --> 00:47:00,130
something was injectable or was not

00:47:01,810 --> 00:47:11,120
statistics maybe this is the

00:47:05,770 --> 00:47:19,700
demonstrable most revolutionary thing in

00:47:11,120 --> 00:47:22,190
a sequel map thing is that lots of tools

00:47:19,700 --> 00:47:28,240
have problems with detection if Santee

00:47:22,190 --> 00:47:31,280
was delayed or not so lots of tools say

00:47:28,240 --> 00:47:34,460
to the back and seven give me a sleep of

00:47:31,280 --> 00:47:38,180
one second and if there was some kind of

00:47:34,460 --> 00:47:41,860
leg in connection oh there was some kind

00:47:38,180 --> 00:47:44,660
of if there is a legging connection

00:47:41,860 --> 00:47:47,150
those tools can't can't distinguish if

00:47:44,660 --> 00:47:50,960
something was delayed or something was

00:47:47,150 --> 00:47:53,330
not delayed so if you say sleep me for

00:47:50,960 --> 00:47:55,880
one second and it doesn't sleep one

00:47:53,330 --> 00:47:59,930
second but it lags for one second then

00:47:55,880 --> 00:48:03,170
you will have problems but here comes

00:47:59,930 --> 00:48:07,790
the statistics it says something like

00:48:03,170 --> 00:48:11,660
this you collect the the good amount of

00:48:07,790 --> 00:48:14,000
of normal responses and you know that

00:48:11,660 --> 00:48:19,810
they will come to this normal

00:48:14,000 --> 00:48:23,210
distribution here and everything that is

00:48:19,810 --> 00:48:26,900
outside those distribution you can just

00:48:23,210 --> 00:48:30,860
tell that it's not normal so we collect

00:48:26,900 --> 00:48:32,780
normal responses in those delays so we

00:48:30,860 --> 00:48:39,160
clicked normal response of the web

00:48:32,780 --> 00:48:42,019
server and afterwards we put

00:48:39,160 --> 00:48:44,140
requested to the backend server give me

00:48:42,019 --> 00:48:48,259
a delay of one second and we know that

00:48:44,140 --> 00:48:50,900
there is quite good chance that if a

00:48:48,259 --> 00:48:54,640
back-end server really delays it will go

00:48:50,900 --> 00:48:58,809
outside that occur thing is that

00:48:54,640 --> 00:49:04,190
statistically statistic says that in

00:48:58,809 --> 00:49:06,859
normal data should go inside 77 times

00:49:04,190 --> 00:49:09,410
standard deviation out all those data so

00:49:06,859 --> 00:49:13,490
things that we collect all the normal

00:49:09,410 --> 00:49:16,970
responses and afterwards we just compare

00:49:13,490 --> 00:49:19,990
those those inject the response with

00:49:16,970 --> 00:49:22,910
those normal response if it goes inside

00:49:19,990 --> 00:49:25,099
we know that was a normal response it's

00:49:22,910 --> 00:49:29,180
not delayed if it goes outside we know

00:49:25,099 --> 00:49:32,299
it was delayed response same thing we

00:49:29,180 --> 00:49:36,170
use for for the AA detect for the

00:49:32,299 --> 00:49:39,019
detection of union of the Union

00:49:36,170 --> 00:49:42,319
injection thing is that there's a quite

00:49:39,019 --> 00:49:45,410
good chance that if you say some tight

00:49:42,319 --> 00:49:47,359
union all select no then in secondaries

00:49:45,410 --> 00:49:50,869
then its second request union all select

00:49:47,359 --> 00:49:53,680
no no then it'll request you know like

00:49:50,869 --> 00:49:57,559
no no no there is quite good chance that

00:49:53,680 --> 00:50:02,359
that the if the target is affected by

00:49:57,559 --> 00:50:06,349
the new ejection that the that responds

00:50:02,359 --> 00:50:10,190
with the right number of columns will

00:50:06,349 --> 00:50:13,940
stick out so it will stick out somehow

00:50:10,190 --> 00:50:18,740
we don't know how but if we compare

00:50:13,940 --> 00:50:22,730
those all responses and we just said say

00:50:18,740 --> 00:50:26,990
in normal times this will result in

00:50:22,730 --> 00:50:29,390
something Airness enormous in normal

00:50:26,990 --> 00:50:33,470
times did this result is something here

00:50:29,390 --> 00:50:38,269
knows but that that one with all right

00:50:33,470 --> 00:50:41,539
number of columns will somehow stick out

00:50:38,269 --> 00:50:43,730
and just go outside this normal

00:50:41,539 --> 00:50:48,130
distribution curve and we will know that

00:50:43,730 --> 00:50:48,130
that was the D right number

00:50:49,210 --> 00:50:57,380
then false positives this also this also

00:50:55,160 --> 00:51:02,450
gives a character to lots of tools

00:50:57,380 --> 00:51:05,599
around we use are quite childish

00:51:02,450 --> 00:51:08,329
approach they are using simple

00:51:05,599 --> 00:51:14,799
arithmetic tests just to see if there is

00:51:08,329 --> 00:51:17,890
some kind of intelligence at the end so

00:51:14,799 --> 00:51:21,650
time the stick and stamina detect

00:51:17,890 --> 00:51:24,940
injections are even twit usage of those

00:51:21,650 --> 00:51:28,730
statistic statistical methods it's quite

00:51:24,940 --> 00:51:32,960
nasty to to to deal with those if there

00:51:28,730 --> 00:51:37,640
are significant legs but afterwards if

00:51:32,960 --> 00:51:40,880
the our engine just says your target is

00:51:37,640 --> 00:51:42,920
affected by timed we know that it there

00:51:40,880 --> 00:51:46,009
is a quite good chance that it's a false

00:51:42,920 --> 00:51:49,900
positive and then we say please give me

00:51:46,009 --> 00:51:57,160
an and responses for those for those

00:51:49,900 --> 00:51:57,160
automatic for those arithmetic test and

00:51:58,839 --> 00:52:06,220
this in ninety-nine percent of cases if

00:52:02,960 --> 00:52:09,380
there is a false positive it should just

00:52:06,220 --> 00:52:11,660
fail on some of those tests if you see

00:52:09,380 --> 00:52:14,960
Santa this one plus two equals three

00:52:11,660 --> 00:52:17,420
this should result in true if it results

00:52:14,960 --> 00:52:20,359
in false let me know they'd see it's a

00:52:17,420 --> 00:52:23,839
false positive afterwards this should

00:52:20,359 --> 00:52:27,890
result in false if it is results in true

00:52:23,839 --> 00:52:32,569
we know it it was a false positive so we

00:52:27,890 --> 00:52:35,269
have those four four tests we tremble

00:52:32,569 --> 00:52:37,309
random numbers and there is quite good

00:52:35,269 --> 00:52:44,329
chance to spot the false positives with

00:52:37,309 --> 00:52:50,240
this approach heuristic test disused

00:52:44,329 --> 00:52:53,029
bye-bye most of tools around to sportive

00:52:50,240 --> 00:52:56,930
something easy as co-injection injection

00:52:53,029 --> 00:52:59,290
noble or not but it's it's quite

00:52:56,930 --> 00:53:03,310
insufficient thing is it

00:52:59,290 --> 00:53:07,840
you put inside the parameters videos you

00:53:03,310 --> 00:53:11,490
put some blatant invalid desk injection

00:53:07,840 --> 00:53:15,240
characters something that will for sure

00:53:11,490 --> 00:53:18,040
cause trouble if this is injectable and

00:53:15,240 --> 00:53:21,040
if there is some kind of error message

00:53:18,040 --> 00:53:23,260
inside then we know that is there is a

00:53:21,040 --> 00:53:27,460
quite good chance that this is esco

00:53:23,260 --> 00:53:31,870
injection esco injection about things

00:53:27,460 --> 00:53:33,760
that we use this knowledge like this not

00:53:31,870 --> 00:53:36,340
to say that something is askin injection

00:53:33,760 --> 00:53:40,090
able but we parse the error messages

00:53:36,340 --> 00:53:43,630
inside and if we notice that it is

00:53:40,090 --> 00:53:45,940
something similar to the mix of sicko

00:53:43,630 --> 00:53:49,870
server then we know that we don't have

00:53:45,940 --> 00:53:53,320
to to to test all I don't know 100 tests

00:53:49,870 --> 00:53:56,470
that we that we have in our payloads

00:53:53,320 --> 00:54:00,910
file we know that we will just need to

00:53:56,470 --> 00:54:06,250
use or our mix or based tests and it

00:54:00,910 --> 00:54:12,160
will subside it look noticeably shorten

00:54:06,250 --> 00:54:14,650
the time of test tempering scripts this

00:54:12,160 --> 00:54:21,700
was a result of request of one of our

00:54:14,650 --> 00:54:24,910
users from the mailing list there are

00:54:21,700 --> 00:54:29,340
lots of intrusion detection systems

00:54:24,910 --> 00:54:33,610
around that can be quite easily

00:54:29,340 --> 00:54:38,020
circumvent them went wit with this kind

00:54:33,610 --> 00:54:41,410
of of this kind of conversions so it

00:54:38,020 --> 00:54:45,760
will notice this it will detect this but

00:54:41,410 --> 00:54:48,580
it won't detect this in some cases then

00:54:45,760 --> 00:54:52,750
this was this was the first temporary

00:54:48,580 --> 00:54:56,530
script we used so users user requested

00:54:52,750 --> 00:55:00,070
that his backs and server notice this

00:54:56,530 --> 00:55:02,680
and he had problems with injecting this

00:55:00,070 --> 00:55:05,560
kind of values and we needed to make

00:55:02,680 --> 00:55:09,100
some some function which will transform

00:55:05,560 --> 00:55:11,800
this into this and if you notice from

00:55:09,100 --> 00:55:12,970
the from the syntax this is the same as

00:55:11,800 --> 00:55:16,630
this

00:55:12,970 --> 00:55:21,609
there is no this charity which is which

00:55:16,630 --> 00:55:24,099
was in his case a filtered by his viral

00:55:21,609 --> 00:55:28,590
or intrusion the text in detection

00:55:24,099 --> 00:55:46,060
system also this quite popular moving of

00:55:28,590 --> 00:55:49,930
pudding what one now this is this is

00:55:46,060 --> 00:55:51,910
used in when we are using that when we

00:55:49,930 --> 00:55:54,700
are used that inference so we have a

00:55:51,910 --> 00:55:57,340
table which we know that should be a

00:55:54,700 --> 00:56:03,460
positive value inside so goes from 0 to

00:55:57,340 --> 00:56:06,070
235 also this is a quite proper

00:56:03,460 --> 00:56:09,270
technique just putting off of this

00:56:06,070 --> 00:56:12,550
damning comments between the between the

00:56:09,270 --> 00:56:16,510
between the keyboards will just screw

00:56:12,550 --> 00:56:19,690
some edss around so it will it will

00:56:16,510 --> 00:56:21,760
notice this it will detect this but it

00:56:19,690 --> 00:56:29,109
won't detect this because there is no

00:56:21,760 --> 00:56:33,119
white space here so so currently there

00:56:29,109 --> 00:56:39,180
is 14 of those temporary screams around

00:56:33,119 --> 00:56:44,859
that that that some advanced users

00:56:39,180 --> 00:56:48,060
useful for bypassing EDS around we are

00:56:44,859 --> 00:56:51,580
planning to do do the automated ation of

00:56:48,060 --> 00:56:54,970
these vicious in so many future things

00:56:51,580 --> 00:56:58,240
that there is a quite nice method how to

00:56:54,970 --> 00:57:00,940
spot if something is affected by this or

00:56:58,240 --> 00:57:03,970
not I won't go into detail so we will

00:57:00,940 --> 00:57:06,510
provide you provide to use the

00:57:03,970 --> 00:57:09,990
functionality to to automatically try

00:57:06,510 --> 00:57:13,440
these tempering scripts to bypass those

00:57:09,990 --> 00:57:16,690
those intrusion detection systems

00:57:13,440 --> 00:57:19,359
building lots of differences around

00:57:16,690 --> 00:57:23,830
don't have something like this let me

00:57:19,359 --> 00:57:26,860
toss it and these are quite important

00:57:23,830 --> 00:57:29,980
stuff for dumping data so we you

00:57:26,860 --> 00:57:33,640
you want a second column from second row

00:57:29,980 --> 00:57:39,580
for example and there are DBMS around

00:57:33,640 --> 00:57:41,920
like like ms SQL doesn't have this where

00:57:39,580 --> 00:57:45,010
you have to emulate somehow this

00:57:41,920 --> 00:57:53,200
mechanism and we use the something

00:57:45,010 --> 00:57:56,170
computing so we use one column a in most

00:57:53,200 --> 00:57:59,770
other case it's something like ID so we

00:57:56,170 --> 00:58:03,850
use one column we retract its value by

00:57:59,770 --> 00:58:06,970
using this give me a minimum value which

00:58:03,850 --> 00:58:10,060
is greater than the previous value and

00:58:06,970 --> 00:58:13,900
we just we just retract those values of

00:58:10,060 --> 00:58:16,090
that building point and afterwards using

00:58:13,900 --> 00:58:18,550
dell debt knowledge with those building

00:58:16,090 --> 00:58:21,370
points we just retract the other column

00:58:18,550 --> 00:58:28,120
values by using this where pivot column

00:58:21,370 --> 00:58:34,270
equals to that current value sick of

00:58:28,120 --> 00:58:40,080
arresting assets at the beginning the

00:58:34,270 --> 00:58:42,850
DBMS surrounded don't where you cannot

00:58:40,080 --> 00:58:45,490
enumerate the decom names in table names

00:58:42,850 --> 00:58:47,620
so you have to do some kind of brute

00:58:45,490 --> 00:58:51,820
forcing this some method of brute

00:58:47,620 --> 00:58:54,580
forcing how to brute force if the table

00:58:51,820 --> 00:59:00,270
name from the from the from the DBMS

00:58:54,580 --> 00:59:04,380
around thing is it if table name exists

00:59:00,270 --> 00:59:08,050
this will just be true and exists select

00:59:04,380 --> 00:59:10,720
mark from the table but if it doesn't

00:59:08,050 --> 00:59:15,160
exist that the table name this will

00:59:10,720 --> 00:59:20,140
somehow crash it hook result is on its

00:59:15,160 --> 00:59:23,320
own fall sir ernest page also with hong

00:59:20,140 --> 00:59:29,140
kong's bit same principle things that we

00:59:23,320 --> 00:59:31,650
use Google for for for harvesting those

00:59:29,140 --> 00:59:34,660
common table names and column names

00:59:31,650 --> 00:59:37,720
there were large number of secret files

00:59:34,660 --> 00:59:41,339
around and we use lots of reg accents

00:59:37,720 --> 00:59:44,979
and stuff and we just use those

00:59:41,339 --> 00:59:48,700
high-frequency one stored in inside our

00:59:44,979 --> 00:59:51,450
texture files and when we use street rod

00:59:48,700 --> 00:59:55,029
like this common tables we just used

00:59:51,450 --> 01:00:02,940
here those collected for collected names

00:59:55,029 --> 01:00:02,940
we collected before so that's cracking

01:00:03,029 --> 01:00:09,910
before or we tell other tools you have

01:00:06,999 --> 01:00:14,440
to collect those ashes and put summer to

01:00:09,910 --> 01:00:18,249
fall for cracking we support 10

01:00:14,440 --> 01:00:21,130
different heck 10 different hashing

01:00:18,249 --> 01:00:24,430
techniques like my sequel all my sequel

01:00:21,130 --> 01:00:27,029
scheme ms equally stuff like that we

01:00:24,430 --> 01:00:30,849
collected high-quality dictionary lists

01:00:27,029 --> 01:00:34,930
which then makes off of keywords inside

01:00:30,849 --> 01:00:37,719
and when we detect indeed indeed damping

01:00:34,930 --> 01:00:40,509
phase something when you collect

01:00:37,719 --> 01:00:43,210
something in the collecting phase that

01:00:40,509 --> 01:00:45,519
is that is similar to the hash we

01:00:43,210 --> 01:00:50,019
automatically crack it with usage of

01:00:45,519 --> 01:00:53,079
those those hashing functions we have

01:00:50,019 --> 01:00:55,630
and the quiet phase because Cora things

01:00:53,079 --> 01:01:05,799
are are coming from hair sleep like md5

01:00:55,630 --> 01:01:09,400
and sha-1 so why fast because we are

01:01:05,799 --> 01:01:15,450
using hash sleep and there that binary

01:01:09,400 --> 01:01:20,940
compiled so it's quite five fast now

01:01:15,450 --> 01:01:24,400
4444 for example on my machine quad-core

01:01:20,940 --> 01:01:26,710
you have I don't know two or three

01:01:24,400 --> 01:01:29,440
different hashes with that for list for

01:01:26,710 --> 01:01:32,789
ten megabytes you you need something

01:01:29,440 --> 01:01:38,710
like about 5 to 10 seconds yeah and

01:01:32,789 --> 01:01:42,279
everything is ultimate eyes then we have

01:01:38,710 --> 01:01:46,299
those quality tests we needed because

01:01:42,279 --> 01:01:49,900
there are only two of us and we we tend

01:01:46,299 --> 01:01:53,019
to screw things up so we have live tests

01:01:49,900 --> 01:01:54,160
so this is something like best like for

01:01:53,019 --> 01:01:57,430
flow we

01:01:54,160 --> 01:02:01,900
she's declaring instruction xml file we

01:01:57,430 --> 01:02:05,260
just run it and it just runs the tests

01:02:01,900 --> 01:02:07,870
against our virtual machine and if he's

01:02:05,260 --> 01:02:11,740
crashes and then we know something is

01:02:07,870 --> 01:02:14,160
wrong smoke tests is a dummy finding all

01:02:11,740 --> 01:02:17,650
four modules and importing of them and

01:02:14,160 --> 01:02:23,650
violent you know but spelling lexical

01:02:17,650 --> 01:02:26,680
analyzer quite good so that the best I

01:02:23,650 --> 01:02:31,870
portation wise for the end you can get

01:02:26,680 --> 01:02:35,280
from me use the parameterized sequel

01:02:31,870 --> 01:02:38,530
statements think is that lots of people

01:02:35,280 --> 01:02:41,230
senator sanitize database inputs by the

01:02:38,530 --> 01:02:44,560
self and there are lots of lots of

01:02:41,230 --> 01:02:49,920
temporal scripts operating like you've

01:02:44,560 --> 01:02:53,620
seen that can just just circumvent those

01:02:49,920 --> 01:02:56,140
those methods you used but if use

01:02:53,620 --> 01:02:58,870
something called parameterised sequel

01:02:56,140 --> 01:03:03,070
statements you just tell the the

01:02:58,870 --> 01:03:08,440
underlying library of functions of your

01:03:03,070 --> 01:03:13,870
I know that was connector to to to to

01:03:08,440 --> 01:03:17,440
treat those parameters provided to treat

01:03:13,870 --> 01:03:19,750
those permits provided as the values he

01:03:17,440 --> 01:03:23,470
knows that that if you provide here

01:03:19,750 --> 01:03:26,110
something that is not on radio button

01:03:23,470 --> 01:03:28,720
sequel statement he knows that he won't

01:03:26,110 --> 01:03:30,720
try to run it he would treat this as

01:03:28,720 --> 01:03:34,600
already not as a sequel statement

01:03:30,720 --> 01:03:38,290
probably with the seco seco injections

01:03:34,600 --> 01:03:40,980
that you you open the you are pending

01:03:38,290 --> 01:03:48,630
the something there should be avail you

01:03:40,980 --> 01:03:51,160
but bad people where people happened

01:03:48,630 --> 01:03:53,620
Yoshiko statements in start parameters

01:03:51,160 --> 01:03:57,040
and thing is it in those parameters

01:03:53,620 --> 01:03:59,340
sequel statements that underlying at

01:03:57,040 --> 01:04:02,470
that underlying like Python d be happy

01:03:59,340 --> 01:04:04,660
make sure that that those parameters are

01:04:02,470 --> 01:04:07,890
parameters not the sequel statements

01:04:04,660 --> 01:04:20,200
there's the best advice you can get

01:04:07,890 --> 01:04:25,059
and precious this is my first conference

01:04:20,200 --> 01:04:29,230
I was quite nervous but I hope that that

01:04:25,059 --> 01:04:32,220
you you you remember some stuff from

01:04:29,230 --> 01:04:35,079
here special that parameters the limit

01:04:32,220 --> 01:04:36,720
me and Bernard are quite good at this

01:04:35,079 --> 01:04:38,859
kind of stuff and parameters

01:04:36,720 --> 01:04:42,280
parametrized sequel statements are

01:04:38,859 --> 01:04:48,579
something that we cannot break so do you

01:04:42,280 --> 01:04:55,839
have any questions at the end just

01:04:48,579 --> 01:05:00,700
circle ha join the project these solve

01:04:55,839 --> 01:05:04,210
all links where you can find us so if

01:05:00,700 --> 01:05:07,980
you have any questions so if you if you

01:05:04,210 --> 01:05:10,960
heaven if you get an urge like I did

01:05:07,980 --> 01:05:14,200
before start before enjoying this

01:05:10,960 --> 01:05:19,950
project you can freely contact us both

01:05:14,200 --> 01:05:19,950

YouTube URL: https://www.youtube.com/watch?v=O3mdKNjsdlQ


