Title: Creating federated authorisation for a Django survey system
Publication date: 2015-04-19
Playlist: EuroPython 2012
Description: 
	[EuroPython 2012] Ed Crewe - 6 JULY 2012 in "Track Ravioli "
Captions: 
	00:00:11,710 --> 00:00:16,420
I mean as well as maybe for a bit of

00:00:14,080 --> 00:00:20,380
applied science stuff but this is a talk

00:00:16,420 --> 00:00:23,920
that's about related to my experiences

00:00:20,380 --> 00:00:25,750
of creating a survey system so I start

00:00:23,920 --> 00:00:28,210
off with a bit of a advert we've got a

00:00:25,750 --> 00:00:30,250
system that provides a bit of bread and

00:00:28,210 --> 00:00:32,169
butter income but the bread and butter

00:00:30,250 --> 00:00:34,810
has gone a bit stale really it's kind of

00:00:32,169 --> 00:00:39,720
10 years old pearl we're rewriting it

00:00:34,810 --> 00:00:45,149
into Django and so I'm going to cover

00:00:39,720 --> 00:00:48,280
the basics of how we developed a

00:00:45,149 --> 00:00:50,170
authorization system for this first of

00:00:48,280 --> 00:00:52,510
all actually covering open authorization

00:00:50,170 --> 00:00:56,410
standards for the web a little bit tally

00:00:52,510 --> 00:01:00,249
work what standards what tools are for

00:00:56,410 --> 00:01:02,890
Django to use to plug those in and then

00:01:00,249 --> 00:01:04,360
how how I'm currently developing it

00:01:02,890 --> 00:01:08,640
because it's still kind of a work in

00:01:04,360 --> 00:01:11,890
process so that's the details of the

00:01:08,640 --> 00:01:14,770
survey system a bit uncovering as I said

00:01:11,890 --> 00:01:16,290
we'll just be this little bottom section

00:01:14,770 --> 00:01:18,700
here to do with the authorization

00:01:16,290 --> 00:01:21,280
there's a lot of interesting stuff with

00:01:18,700 --> 00:01:22,570
Cassandra things at the back but we

00:01:21,280 --> 00:01:24,880
haven't done enough of that for me to

00:01:22,570 --> 00:01:29,399
certainly talk about 82 any of you lot

00:01:24,880 --> 00:01:33,340
so starting off what do I mean by

00:01:29,399 --> 00:01:36,700
federated authorization so we federated

00:01:33,340 --> 00:01:39,100
authorization I mean but the actual

00:01:36,700 --> 00:01:44,009
access control rights are being given to

00:01:39,100 --> 00:01:46,899
a web application from a remote sir

00:01:44,009 --> 00:01:48,549
identity provider so so your web

00:01:46,899 --> 00:01:51,539
application to get straight into the

00:01:48,549 --> 00:01:56,049
terminology is the service provider and

00:01:51,539 --> 00:02:00,659
the remote logins are the identity

00:01:56,049 --> 00:02:03,369
providers IDPs they not only provide

00:02:00,659 --> 00:02:06,579
authentication of log in but can also

00:02:03,369 --> 00:02:09,869
potentially provide authorization so it

00:02:06,579 --> 00:02:09,869
tends to be two ways that that's done

00:02:10,170 --> 00:02:18,270
there's either authorization based on a

00:02:15,340 --> 00:02:20,710
sort of application to application level

00:02:18,270 --> 00:02:24,700
what people will be familiar with is 0

00:02:20,710 --> 00:02:27,580
or where you have a kind of fixed scope

00:02:24,700 --> 00:02:30,910
either of release of data about the

00:02:27,580 --> 00:02:33,030
person all of actual access control but

00:02:30,910 --> 00:02:37,269
it will be fixed for that application

00:02:33,030 --> 00:02:39,910
provides that fixed authorization to

00:02:37,269 --> 00:02:42,280
users that are coming in from the

00:02:39,910 --> 00:02:46,599
identity provider or there's the more

00:02:42,280 --> 00:02:47,680
flexible standards where entitlements

00:02:46,599 --> 00:02:51,250
can be set differently on different

00:02:47,680 --> 00:02:55,950
users by the identity provider and those

00:02:51,250 --> 00:02:58,180
are the protocols for those are sam'l to

00:02:55,950 --> 00:03:01,989
form of which Shibboleth is quite well

00:02:58,180 --> 00:03:03,069
known or Windows ws-security i call it

00:03:01,989 --> 00:03:04,840
windows double your security because

00:03:03,069 --> 00:03:08,680
it's kind of a standard but if any

00:03:04,840 --> 00:03:13,090
windows in IBM that users this is a

00:03:08,680 --> 00:03:14,709
small sounded so what I'm hoping this

00:03:13,090 --> 00:03:17,260
will do for my users so to start off

00:03:14,709 --> 00:03:20,590
with the idea is that they're going to

00:03:17,260 --> 00:03:23,440
be a linear either their companies or

00:03:20,590 --> 00:03:26,769
their institutions and they're just used

00:03:23,440 --> 00:03:29,220
a standard local login the people in the

00:03:26,769 --> 00:03:32,560
institution will be able to allocate

00:03:29,220 --> 00:03:38,260
which members of their staff have rights

00:03:32,560 --> 00:03:40,299
over access to our application they be

00:03:38,260 --> 00:03:42,329
able to do that hopefully with their own

00:03:40,299 --> 00:03:46,930
group management system if they're a

00:03:42,329 --> 00:03:49,389
fairly well-organized organization

00:03:46,930 --> 00:03:51,370
that's got identity management stuff in

00:03:49,389 --> 00:03:54,040
place then they should have not only

00:03:51,370 --> 00:03:56,049
perhaps a single sign-on centrally but

00:03:54,040 --> 00:03:57,359
also central groups management that can

00:03:56,049 --> 00:04:00,880
allocate access to different

00:03:57,359 --> 00:04:04,510
applications across what we call the

00:04:00,880 --> 00:04:06,970
enterprise I guess so I'm hoping that

00:04:04,510 --> 00:04:08,500
all that will seem quite seamless it

00:04:06,970 --> 00:04:10,389
will be like they're just doing stuff

00:04:08,500 --> 00:04:12,639
with a local application I mean if we

00:04:10,389 --> 00:04:14,739
wrap our application in the look and

00:04:12,639 --> 00:04:19,320
feel they might not even realize they're

00:04:14,739 --> 00:04:23,650
using somebody our sister so with

00:04:19,320 --> 00:04:27,900
federated authentication referring back

00:04:23,650 --> 00:04:30,310
to OAuth it doesn't assume federated

00:04:27,900 --> 00:04:32,139
sorry federated authorization doesn't

00:04:30,310 --> 00:04:34,419
assume federated authentication to so

00:04:32,139 --> 00:04:36,880
just because you may be giving access

00:04:34,419 --> 00:04:37,950
rights with a certain protocol it

00:04:36,880 --> 00:04:40,440
doesn't mean that I

00:04:37,950 --> 00:04:43,500
to deal with the login so all earth can

00:04:40,440 --> 00:04:47,670
use a local login but still be set up to

00:04:43,500 --> 00:04:48,810
give access rights so so if I start the

00:04:47,670 --> 00:04:50,550
first part of the talk is going to deal

00:04:48,810 --> 00:04:53,010
with the details of how this will work

00:04:50,550 --> 00:04:55,200
so initially you have something at a

00:04:53,010 --> 00:04:57,690
network level you've got central Network

00:04:55,200 --> 00:05:00,120
kind of sign on as a start and then

00:04:57,690 --> 00:05:02,790
there will be most widely adopted one

00:05:00,120 --> 00:05:04,410
Kerberos which interestingly was

00:05:02,790 --> 00:05:08,370
invented around the time a Python was

00:05:04,410 --> 00:05:09,840
invented that MIT as part of project

00:05:08,370 --> 00:05:11,250
Athena I think it was called nearly they

00:05:09,840 --> 00:05:15,570
did x windows and they came up with

00:05:11,250 --> 00:05:19,820
kerberos and that implementation the

00:05:15,570 --> 00:05:24,240
principles behind it of key exchange and

00:05:19,820 --> 00:05:25,920
tokens and most of the the principles

00:05:24,240 --> 00:05:28,530
used in that are exactly the same

00:05:25,920 --> 00:05:31,140
principles that are they used in all the

00:05:28,530 --> 00:05:35,220
web level or authorization and

00:05:31,140 --> 00:05:38,220
authentication standards today and so it

00:05:35,220 --> 00:05:41,550
was it was only much later that windows

00:05:38,220 --> 00:05:43,800
I guess had had issues wind with Windows

00:05:41,550 --> 00:05:46,290
NT land manager and they they switch to

00:05:43,800 --> 00:05:50,400
Kerberos to be more secure and then with

00:05:46,290 --> 00:05:53,010
a single sign-on we have the wrapper for

00:05:50,400 --> 00:05:54,810
these kind of network logins that's

00:05:53,010 --> 00:05:57,110
happening happening at a web level where

00:05:54,810 --> 00:06:02,030
you're transferring that authorization

00:05:57,110 --> 00:06:05,910
via HTTP or well encrypted HTTP and

00:06:02,030 --> 00:06:08,220
there's a couple of standards for that

00:06:05,910 --> 00:06:10,560
they're just doing authentication so

00:06:08,220 --> 00:06:15,300
open ID is the well-known one perhaps

00:06:10,560 --> 00:06:18,050
are there tends to be used between

00:06:15,300 --> 00:06:21,750
different organizations and use for say

00:06:18,050 --> 00:06:24,000
you know lots of these social websites

00:06:21,750 --> 00:06:26,160
and then central authentication service

00:06:24,000 --> 00:06:28,860
is one that's perhaps only now if you're

00:06:26,160 --> 00:06:31,290
in a large institution where you set up

00:06:28,860 --> 00:06:34,950
a centralized web authentication between

00:06:31,290 --> 00:06:40,460
all your applications and use that so

00:06:34,950 --> 00:06:43,650
there's a there's loads of versions of

00:06:40,460 --> 00:06:44,640
sam'l too because it's kind of a

00:06:43,650 --> 00:06:46,320
standard well in a particular

00:06:44,640 --> 00:06:49,650
implementation so we've got a google

00:06:46,320 --> 00:06:51,960
version and that's because someone's

00:06:49,650 --> 00:06:54,360
more secure than than using open i do

00:06:51,960 --> 00:06:56,190
and you've even got a recent one by

00:06:54,360 --> 00:06:58,680
somebody used to work at risk we uni

00:06:56,190 --> 00:07:00,720
which is a wrapper which directly talks

00:06:58,680 --> 00:07:04,199
to Kerberos and does ticket exchange but

00:07:00,720 --> 00:07:07,460
but the lysosomal and then you have the

00:07:04,199 --> 00:07:11,910
Liberty Alliance which are more about

00:07:07,460 --> 00:07:15,150
setting up authorization policies so you

00:07:11,910 --> 00:07:16,500
can say ok there's these these are data

00:07:15,150 --> 00:07:18,660
attributes we're going to release all

00:07:16,500 --> 00:07:22,740
this authorization you can set up

00:07:18,660 --> 00:07:25,080
policies to save these service providers

00:07:22,740 --> 00:07:26,580
are going to get this one that these

00:07:25,080 --> 00:07:29,250
ones are going to get another one so

00:07:26,580 --> 00:07:31,110
that kind of manage thing is what came

00:07:29,250 --> 00:07:36,169
together with Shibboleth to form some or

00:07:31,110 --> 00:07:39,000
two and then there's windows has got a

00:07:36,169 --> 00:07:41,250
Active Directory Federation services to

00:07:39,000 --> 00:07:44,009
get it WS securities talk to the wider

00:07:41,250 --> 00:07:47,370
world open ID so I've drawn up a

00:07:44,009 --> 00:07:50,069
diagrams trying to help picture where

00:07:47,370 --> 00:07:52,830
all these things sit so there's three

00:07:50,069 --> 00:07:55,620
core elements to to this process you

00:07:52,830 --> 00:07:57,360
have rather say the authentication the

00:07:55,620 --> 00:07:59,009
authorization and then the actual data

00:07:57,360 --> 00:08:01,710
attributes release the data attributes

00:07:59,009 --> 00:08:03,360
about people and these authorization

00:08:01,710 --> 00:08:04,710
stabs tend to cover different areas so

00:08:03,360 --> 00:08:08,009
we've got ones that are just covering

00:08:04,710 --> 00:08:09,479
purely up authorization the ones I

00:08:08,009 --> 00:08:12,000
mentioned the authentication then

00:08:09,479 --> 00:08:15,240
obviously there's numbers of standards

00:08:12,000 --> 00:08:17,960
for data attributes so V car Adam person

00:08:15,240 --> 00:08:21,680
is something that Google uses a bit

00:08:17,960 --> 00:08:25,430
semantic web standard for graphs of

00:08:21,680 --> 00:08:29,820
people relationships of data both and

00:08:25,430 --> 00:08:33,390
it's only sam'l to ws-security that

00:08:29,820 --> 00:08:35,490
cover all three of these cover the login

00:08:33,390 --> 00:08:42,240
the authorization and what data you're

00:08:35,490 --> 00:08:44,880
getting so the way that they do it it's

00:08:42,240 --> 00:08:49,529
the reason that there can be issues with

00:08:44,880 --> 00:08:50,760
the first to open ID and Kaz is that you

00:08:49,529 --> 00:08:55,680
need to establish a trust relationship

00:08:50,760 --> 00:08:57,360
and you don't need to encrypt the

00:08:55,680 --> 00:08:59,670
transport of the messages where you're

00:08:57,360 --> 00:09:03,300
logging in and then you can actually log

00:08:59,670 --> 00:09:05,160
in so at least these two boys in the

00:09:03,300 --> 00:09:05,670
middle they they do that potentially

00:09:05,160 --> 00:09:07,590
they can do that

00:09:05,670 --> 00:09:10,260
with three keys so there'll be a key at

00:09:07,590 --> 00:09:11,700
a protocol level your standard ssl and

00:09:10,260 --> 00:09:13,200
then there be a key exchange to sign

00:09:11,700 --> 00:09:15,300
each of the messages that you're passing

00:09:13,200 --> 00:09:17,460
between you to say I'm you know you

00:09:15,300 --> 00:09:19,290
trust me I trust you and then there'll

00:09:17,460 --> 00:09:21,270
be another key used to encrypt each of

00:09:19,290 --> 00:09:22,920
the packets of information so they the

00:09:21,270 --> 00:09:25,680
XML will be encrypted as its passed

00:09:22,920 --> 00:09:29,040
between them they can use the same key

00:09:25,680 --> 00:09:32,370
for the latter two of those but um yeah

00:09:29,040 --> 00:09:35,730
these two they just rely on the protocol

00:09:32,370 --> 00:09:36,780
being encrypted so there are issues

00:09:35,730 --> 00:09:38,430
about that where you may need

00:09:36,780 --> 00:09:39,600
whitelisting so there's a kind of thing

00:09:38,430 --> 00:09:42,360
that's come up with open ID where

00:09:39,600 --> 00:09:45,330
there's a list of trusted open ID sites

00:09:42,360 --> 00:09:47,130
because you're not actually being able

00:09:45,330 --> 00:09:48,840
to establish a trust relationship with

00:09:47,130 --> 00:09:51,690
them so I'll just run through the

00:09:48,840 --> 00:09:53,010
process hopefully this is useful to

00:09:51,690 --> 00:09:55,050
people just so they get the idea of how

00:09:53,010 --> 00:09:58,050
it works so the initial bit is

00:09:55,050 --> 00:09:59,430
exchanging the key between the identity

00:09:58,050 --> 00:10:02,060
provider and the service provider so

00:09:59,430 --> 00:10:07,110
this is more the way it works for um

00:10:02,060 --> 00:10:08,790
sam'l two or Windows version but it kind

00:10:07,110 --> 00:10:12,330
of applies the same process applies

00:10:08,790 --> 00:10:14,730
slightly change 440 auth etc so once

00:10:12,330 --> 00:10:18,360
you've done that you go to login you ask

00:10:14,730 --> 00:10:22,830
access of the service provider which in

00:10:18,360 --> 00:10:26,160
my case with survey application and it's

00:10:22,830 --> 00:10:28,170
there's no good way come back when

00:10:26,160 --> 00:10:30,000
you've got logged in so you get

00:10:28,170 --> 00:10:32,370
redirected back to the identity provider

00:10:30,000 --> 00:10:36,270
and other site elsewhere you lock

00:10:32,370 --> 00:10:41,220
yourself in you then get redirected back

00:10:36,270 --> 00:10:44,270
to the service provider saying okay I'm

00:10:41,220 --> 00:10:48,390
I've got this ticket that says I'm okay

00:10:44,270 --> 00:10:50,850
and then that ticket is used to send

00:10:48,390 --> 00:10:53,310
back again to the player you logged in

00:10:50,850 --> 00:10:55,500
to say what authorization will attribute

00:10:53,310 --> 00:10:57,810
release or stuff what information should

00:10:55,500 --> 00:11:00,300
you be coming back with and then that's

00:10:57,810 --> 00:11:03,570
when you get beer say your entitlement

00:11:00,300 --> 00:11:07,370
set or an OAuth token sector so now you

00:11:03,570 --> 00:11:11,280
to finally get in it and do something so

00:11:07,370 --> 00:11:13,260
that's the process that's kind of a

00:11:11,280 --> 00:11:16,200
quick summary a whirlwind tour of them

00:11:13,260 --> 00:11:18,460
open author authorization so going back

00:11:16,200 --> 00:11:21,790
to the survey system

00:11:18,460 --> 00:11:23,580
we need to do and what can you do what

00:11:21,790 --> 00:11:27,040
tools that are available to do that with

00:11:23,580 --> 00:11:29,050
Django all or general ones actually

00:11:27,040 --> 00:11:33,250
there could be reused for other web

00:11:29,050 --> 00:11:35,200
framework so we've got a need to ship

00:11:33,250 --> 00:11:38,950
Eliza's is called which is a sample to

00:11:35,200 --> 00:11:42,970
thing apply that to universities that

00:11:38,950 --> 00:11:46,120
using our our system and there is the

00:11:42,970 --> 00:11:48,730
case that some some of these customers

00:11:46,120 --> 00:11:50,290
will perhaps want to still use the

00:11:48,730 --> 00:11:54,220
direct boss login because maybe they

00:11:50,290 --> 00:11:55,810
haven't set up the sam'l think centrally

00:11:54,220 --> 00:11:57,250
or they've got a bit of a sort of mess

00:11:55,810 --> 00:11:59,620
in terms of their identity management

00:11:57,250 --> 00:12:01,990
and they just want to sale we can't be

00:11:59,620 --> 00:12:04,450
bothered to look after that inside our

00:12:01,990 --> 00:12:06,100
organization too much work there's also

00:12:04,450 --> 00:12:08,110
people that aren't necessarily related

00:12:06,100 --> 00:12:10,150
to these organizations who don't have a

00:12:08,110 --> 00:12:13,660
counselor with that stuff so they need

00:12:10,150 --> 00:12:16,120
open ID access potentially and there's

00:12:13,660 --> 00:12:18,430
uses that especially in the in I'd

00:12:16,120 --> 00:12:20,710
university sector you may be somebody

00:12:18,430 --> 00:12:22,510
who's part of a local body that's in a

00:12:20,710 --> 00:12:25,600
membership of a number of institutions

00:12:22,510 --> 00:12:28,600
or you may be basically you may have

00:12:25,600 --> 00:12:31,150
multiple membership of these identity

00:12:28,600 --> 00:12:34,090
providers so as a user you want to go in

00:12:31,150 --> 00:12:36,820
and see okay this is my Durham access

00:12:34,090 --> 00:12:38,050
and this is my where of a milbourn

00:12:36,820 --> 00:12:41,170
access or whatever if you're a different

00:12:38,050 --> 00:12:44,140
institution across the world and so it

00:12:41,170 --> 00:12:47,170
federates your access control for you as

00:12:44,140 --> 00:12:50,770
well as doing it from our perspective as

00:12:47,170 --> 00:12:55,510
a service provider so what does Django

00:12:50,770 --> 00:12:57,670
give us well green jelly babies in

00:12:55,510 --> 00:13:01,750
effect but it's basically it's pretty

00:12:57,670 --> 00:13:05,920
basic you've got one size fits all one

00:13:01,750 --> 00:13:07,750
type of user there's just a basic users

00:13:05,920 --> 00:13:09,940
group and class level permissions so

00:13:07,750 --> 00:13:11,740
there is a convert that convention for

00:13:09,940 --> 00:13:14,020
adding a profile to a user to extend

00:13:11,740 --> 00:13:15,900
that slightly but a group is literally

00:13:14,020 --> 00:13:18,160
just an idea and name so there's no

00:13:15,900 --> 00:13:21,790
categories of hierarchy there's no

00:13:18,160 --> 00:13:26,260
tagging of types of groups and a user

00:13:21,790 --> 00:13:28,510
has go back to the Venn diagram a user

00:13:26,260 --> 00:13:31,160
has their authorization or

00:13:28,510 --> 00:13:33,139
authentication and

00:13:31,160 --> 00:13:35,360
some of their data attributes stuff

00:13:33,139 --> 00:13:38,930
together in a well mine fields in in one

00:13:35,360 --> 00:13:40,910
table which obviously is not idea so so

00:13:38,930 --> 00:13:43,670
say with jagged add things like his

00:13:40,910 --> 00:13:45,470
staff as a kind of default and it's been

00:13:43,670 --> 00:13:48,050
long recognized in the Django community

00:13:45,470 --> 00:13:49,339
that this is a bit pants and we they

00:13:48,050 --> 00:13:51,170
need to do something about it but it's

00:13:49,339 --> 00:13:53,449
kind of a big debate over what they were

00:13:51,170 --> 00:13:56,509
going to do about it so as far as I'm

00:13:53,449 --> 00:13:59,240
aware this was based on my last reading

00:13:56,509 --> 00:14:03,519
of the jagged developers discussion

00:13:59,240 --> 00:14:07,790
group the solution they're going for is

00:14:03,519 --> 00:14:11,180
basically to move to that Venn diagram

00:14:07,790 --> 00:14:13,759
again but this time by mix-ins so you

00:14:11,180 --> 00:14:15,889
have a mixing for data and mixing for

00:14:13,759 --> 00:14:18,949
permissions and mix in full tenth

00:14:15,889 --> 00:14:22,040
occasion so you'll get a default ones of

00:14:18,949 --> 00:14:26,329
those but you can you can take a kind of

00:14:22,040 --> 00:14:28,100
call user identity model and then you

00:14:26,329 --> 00:14:29,329
can you can provide a different mix in

00:14:28,100 --> 00:14:30,740
if you want to do different stuff with

00:14:29,329 --> 00:14:34,819
the data or different mixin if you want

00:14:30,740 --> 00:14:37,790
to do stuff with the permissions etc so

00:14:34,819 --> 00:14:40,130
hopefully you can get much more tasty a

00:14:37,790 --> 00:14:46,880
variety of users or user handling in

00:14:40,130 --> 00:14:50,269
your in your application so the next bit

00:14:46,880 --> 00:14:52,459
is going back to my soul journey through

00:14:50,269 --> 00:14:54,199
trying to sort out this this system and

00:14:52,459 --> 00:14:56,329
what was available is plugins to django

00:14:54,199 --> 00:14:57,709
so apologies for non django users

00:14:56,329 --> 00:15:00,470
because it's going to be a bit specific

00:14:57,709 --> 00:15:04,490
to tonight but i guess there's general

00:15:00,470 --> 00:15:06,439
principles of how you do role management

00:15:04,490 --> 00:15:08,410
permission management in an advocate web

00:15:06,439 --> 00:15:10,790
application that can be applied to any

00:15:08,410 --> 00:15:13,880
so that the available things for doing

00:15:10,790 --> 00:15:17,860
the authorization there was a jungle

00:15:13,880 --> 00:15:21,920
Guardian which is tied into the current

00:15:17,860 --> 00:15:24,410
country will and he does do object level

00:15:21,920 --> 00:15:28,129
for mission so so perhaps i should have

00:15:24,410 --> 00:15:32,300
sort of sorry taking a step back the

00:15:28,129 --> 00:15:33,980
requirements are that that certain so

00:15:32,300 --> 00:15:37,939
instances of objects so rather than just

00:15:33,980 --> 00:15:40,040
having all say pages have a permission

00:15:37,939 --> 00:15:43,339
for users obviously we want individual

00:15:40,040 --> 00:15:48,139
pages so object level permissions to

00:15:43,339 --> 00:15:51,970
have permission to have assignment so

00:15:48,139 --> 00:15:57,319
that was okay but he doesn't do roles so

00:15:51,970 --> 00:15:59,930
so within Jenga you have like the groups

00:15:57,319 --> 00:16:03,769
and the users and then they separately

00:15:59,930 --> 00:16:07,069
kind of have a mapping of permissions

00:16:03,769 --> 00:16:11,509
directly to groups or users so we want

00:16:07,069 --> 00:16:13,910
to move to role-based access control so

00:16:11,509 --> 00:16:15,800
with that you have groups or users or

00:16:13,910 --> 00:16:18,319
anything else if you like how kind of

00:16:15,800 --> 00:16:21,920
thing of being a principal and the

00:16:18,319 --> 00:16:24,079
principal can be assigned a role and the

00:16:21,920 --> 00:16:26,389
role compactum of permission so it's a

00:16:24,079 --> 00:16:30,740
kind of standard authorization model

00:16:26,389 --> 00:16:32,509
that gives you a bit more flexibility so

00:16:30,740 --> 00:16:35,329
there's anyway the second option it was

00:16:32,509 --> 00:16:37,459
more of a so if you think of apache

00:16:35,329 --> 00:16:39,050
where you might have access rules you

00:16:37,459 --> 00:16:40,790
know allow this don't allow that it's

00:16:39,050 --> 00:16:43,550
kind of a you can end up from that you

00:16:40,790 --> 00:16:44,569
can produce something that authorizes to

00:16:43,550 --> 00:16:46,819
some extent like role-based access

00:16:44,569 --> 00:16:49,250
control but he didn't seem to give me

00:16:46,819 --> 00:16:51,319
that much and then there was Django

00:16:49,250 --> 00:16:53,360
permissions which kind of gave me what I

00:16:51,319 --> 00:16:55,339
wanted so that was good so it's got a

00:16:53,360 --> 00:16:59,620
standard role-based access control and

00:16:55,339 --> 00:17:04,549
it also has its own so uses the domain

00:16:59,620 --> 00:17:07,159
domain users and permissions tables I

00:17:04,549 --> 00:17:09,020
mean users and groups tables but it uses

00:17:07,159 --> 00:17:10,760
his own permission table but that is

00:17:09,020 --> 00:17:12,500
kind of what I wants it because the

00:17:10,760 --> 00:17:14,510
permissions table in Django tends to be

00:17:12,500 --> 00:17:15,860
filled with these automatic permissions

00:17:14,510 --> 00:17:17,419
when you add a class and I didn't want

00:17:15,860 --> 00:17:19,520
class player missions and so I could

00:17:17,419 --> 00:17:21,079
just ignore that table and use user

00:17:19,520 --> 00:17:25,730
permissions table it's about object

00:17:21,079 --> 00:17:29,750
permissions and then there was the login

00:17:25,730 --> 00:17:31,039
so jangles Django social also the most

00:17:29,750 --> 00:17:33,679
popular because you can just sort of

00:17:31,039 --> 00:17:35,929
install and immediately have social

00:17:33,679 --> 00:17:37,850
authorization so if you connected up to

00:17:35,929 --> 00:17:41,030
Google or Facebook and things where I

00:17:37,850 --> 00:17:44,210
just works you'd have to do much and

00:17:41,030 --> 00:17:48,520
then there are these ones they did more

00:17:44,210 --> 00:17:48,520
what I was looking for sam'l analyte and

00:17:48,920 --> 00:17:55,440
basically the Django Shibboleth just

00:17:51,060 --> 00:17:58,470
wraps the redirect specific someone in

00:17:55,440 --> 00:18:00,870
from implementation of Shibboleth we've

00:17:58,470 --> 00:18:03,810
got pie sam'l another one but it kind of

00:18:00,870 --> 00:18:05,580
added 0db and all sorts which seemed a

00:18:03,810 --> 00:18:07,800
bit weird and then luckily I came across

00:18:05,580 --> 00:18:10,170
this thing which wasn't even on Jango

00:18:07,800 --> 00:18:12,120
packages at the time but there's a bunch

00:18:10,170 --> 00:18:13,650
of guys in France who I should credit

00:18:12,120 --> 00:18:15,360
and should have contacted within said

00:18:13,650 --> 00:18:17,010
this is their names I don't know who

00:18:15,360 --> 00:18:18,510
they are but they produced this amazing

00:18:17,010 --> 00:18:21,120
system that does most of what I needed

00:18:18,510 --> 00:18:23,280
so that was good of them so this is a

00:18:21,120 --> 00:18:26,600
kind of like a whole Federation

00:18:23,280 --> 00:18:30,180
management system it happens to use

00:18:26,600 --> 00:18:31,830
Django as the front end for managing the

00:18:30,180 --> 00:18:34,380
Federation of your authorization so you

00:18:31,830 --> 00:18:38,970
can map together things that are using

00:18:34,380 --> 00:18:41,970
any of those standards and it's a kind

00:18:38,970 --> 00:18:44,910
of level above a Corsi library that does

00:18:41,970 --> 00:18:48,750
the fast passing and interpreting of the

00:18:44,910 --> 00:18:49,890
XML be encrypted XML and it's also got

00:18:48,750 --> 00:18:53,070
libraries for other languages as well

00:18:49,890 --> 00:18:56,760
but yeah that was pretty handy so ok

00:18:53,070 --> 00:19:03,810
I've got I've got that part sorted with

00:18:56,760 --> 00:19:07,440
entity and Django permissions so I think

00:19:03,810 --> 00:19:09,500
I've kind of covered or 32 did water one

00:19:07,440 --> 00:19:11,610
of these terms of the Federation and

00:19:09,500 --> 00:19:16,050
permissions does what i wanted in terms

00:19:11,610 --> 00:19:17,550
of providing that separation layer so

00:19:16,050 --> 00:19:19,440
getting to the requirements this is just

00:19:17,550 --> 00:19:23,100
the first half of my requirements so i

00:19:19,440 --> 00:19:26,250
had i need to map one or more authentic

00:19:23,100 --> 00:19:28,920
election identities here to a user as i

00:19:26,250 --> 00:19:31,680
mentioned easily configurable apply the

00:19:28,920 --> 00:19:34,080
policies and the role based access

00:19:31,680 --> 00:19:36,660
control so just stepping through that

00:19:34,080 --> 00:19:38,340
the authentic to does sorry about live

00:19:36,660 --> 00:19:39,750
diagram I don't know why I bother do

00:19:38,340 --> 00:19:43,560
that one reading it's not but anyway

00:19:39,750 --> 00:19:46,530
authentic to does the thing of a number

00:19:43,560 --> 00:19:50,960
of different institutions mapping so a

00:19:46,530 --> 00:19:53,670
user has a Federation of their own

00:19:50,960 --> 00:19:57,300
access that they may have from the

00:19:53,670 --> 00:19:59,340
identity providers and it allows easy

00:19:57,300 --> 00:20:01,049
configuration so it just uses you know

00:19:59,340 --> 00:20:05,700
the middle Django admin

00:20:01,049 --> 00:20:08,789
but it it allows you to to do the job of

00:20:05,700 --> 00:20:11,279
exchanging keys and metadata so the way

00:20:08,789 --> 00:20:14,730
it works is there's a you'll get xml

00:20:11,279 --> 00:20:19,230
files released from either side which

00:20:14,730 --> 00:20:22,259
will map which will set out what

00:20:19,230 --> 00:20:25,080
attributes and and authorizations being

00:20:22,259 --> 00:20:27,989
released and all sailing include the key

00:20:25,080 --> 00:20:33,570
that needs to be exchanged to provide

00:20:27,989 --> 00:20:36,929
the sorry to ensure that you've got a

00:20:33,570 --> 00:20:38,309
trust relationship going so you can just

00:20:36,929 --> 00:20:40,289
upload it well first of all you

00:20:38,309 --> 00:20:42,379
configure it do a bunch of stuff

00:20:40,289 --> 00:20:45,359
configure yourself as a service provider

00:20:42,379 --> 00:20:47,820
then that generates files that you can

00:20:45,359 --> 00:20:49,529
use as your xml that you give out to

00:20:47,820 --> 00:20:52,320
your identity provider you need to

00:20:49,529 --> 00:20:56,159
exchange with and then you can get their

00:20:52,320 --> 00:20:58,470
XML back stick in the form of a bar and

00:20:56,159 --> 00:21:00,239
hopefully there's suddenly it'll works

00:20:58,470 --> 00:21:02,879
but it can take a bit longer than that

00:21:00,239 --> 00:21:04,679
because unfortunately at its very

00:21:02,879 --> 00:21:07,080
generic it can be configured for any

00:21:04,679 --> 00:21:08,580
form of sam'l then it there's a load of

00:21:07,080 --> 00:21:10,590
different parameters so it does take a

00:21:08,580 --> 00:21:11,970
bit of tweaking to say get it to work

00:21:10,590 --> 00:21:15,960
with Shibboleth as opposed to Google

00:21:11,970 --> 00:21:17,669
sam'l or whatever else but it does the

00:21:15,960 --> 00:21:21,629
job and it's also got a thing where you

00:21:17,669 --> 00:21:26,190
can set it up to to light a nightly

00:21:21,629 --> 00:21:28,049
update the XML tall it in and reset

00:21:26,190 --> 00:21:30,600
thing so which is can be required if if

00:21:28,049 --> 00:21:33,629
these things change so you can apply

00:21:30,600 --> 00:21:34,859
policies as well and so that allows you

00:21:33,629 --> 00:21:37,049
to do different things because you've

00:21:34,859 --> 00:21:39,090
got say some institutions that can do

00:21:37,049 --> 00:21:41,220
the whole the whole thing to the

00:21:39,090 --> 00:21:42,840
federated authorization properly and

00:21:41,220 --> 00:21:44,460
then you've got other ones that will

00:21:42,840 --> 00:21:45,950
just basically be using it a single

00:21:44,460 --> 00:21:49,549
sign-on and you just have to have

00:21:45,950 --> 00:21:54,570
different ways that you're handling that

00:21:49,549 --> 00:21:56,730
and then onto the life at the fourth

00:21:54,570 --> 00:21:58,950
requirement which was the permission so

00:21:56,730 --> 00:22:04,799
this is just a thing where it's

00:21:58,950 --> 00:22:10,230
demonstrating sorry the UI for setting

00:22:04,799 --> 00:22:13,169
up your own roles so you've got a bunch

00:22:10,230 --> 00:22:13,870
of classes of content that you need to

00:22:13,169 --> 00:22:15,820
handle

00:22:13,870 --> 00:22:17,559
permissions with and you've got a

00:22:15,820 --> 00:22:21,520
standard set of permissions you set up

00:22:17,559 --> 00:22:24,100
and then for the author you decide what

00:22:21,520 --> 00:22:25,660
those are going to be so you have a

00:22:24,100 --> 00:22:29,050
number of different roles and that

00:22:25,660 --> 00:22:30,460
allows you a much easier way of managing

00:22:29,050 --> 00:22:33,610
things and as you'll see is kind of

00:22:30,460 --> 00:22:37,000
required to make entitlements which is

00:22:33,610 --> 00:22:38,110
the sort of remote authorization saying

00:22:37,000 --> 00:22:40,210
otherwise it would just be too

00:22:38,110 --> 00:22:43,600
complicated to space are specified in

00:22:40,210 --> 00:22:47,320
detail for each permission so what did I

00:22:43,600 --> 00:22:49,570
need to modify well the roles were

00:22:47,320 --> 00:22:52,240
actually it's kind of too over-the-top

00:22:49,570 --> 00:22:53,860
flexible via the original Django

00:22:52,240 --> 00:22:56,290
permissions it kind of site its design

00:22:53,860 --> 00:22:58,030
that you could set a different role for

00:22:56,290 --> 00:22:59,950
each object so you get different set of

00:22:58,030 --> 00:23:02,679
permissions of role / objects which I

00:22:59,950 --> 00:23:06,040
felt was gradually music so what I just

00:23:02,679 --> 00:23:08,620
wanted to set up a roll roll set of

00:23:06,040 --> 00:23:11,230
emissions per class of objects but then

00:23:08,620 --> 00:23:13,120
you would apply that role differently

00:23:11,230 --> 00:23:18,179
for different groups of users to

00:23:13,120 --> 00:23:23,500
individual instances of the objects and

00:23:18,179 --> 00:23:26,920
authentic too well it took a bit hacky

00:23:23,500 --> 00:23:29,200
because the way it does the way it

00:23:26,920 --> 00:23:33,520
assumed you did cleansing ideas with

00:23:29,200 --> 00:23:35,440
Shibboleth it needed to basically use

00:23:33,520 --> 00:23:37,720
the transient ID for it to be accepted

00:23:35,440 --> 00:23:40,270
but then it needed to switch and check

00:23:37,720 --> 00:23:42,940
if there were also persistent ID so to

00:23:40,270 --> 00:23:44,410
explain you can set up an identity

00:23:42,940 --> 00:23:46,809
provider where you don't even have

00:23:44,410 --> 00:23:50,380
anything to identify who you are at all

00:23:46,809 --> 00:23:51,880
and it only lasts for the session so not

00:23:50,380 --> 00:23:53,080
much good for a system where you need to

00:23:51,880 --> 00:23:55,240
know who's somebody isn't given

00:23:53,080 --> 00:23:57,100
authorization or you can have it set

00:23:55,240 --> 00:23:59,170
that you're just getting a fake ID so it

00:23:57,100 --> 00:24:01,030
will you know nothing about our person

00:23:59,170 --> 00:24:03,250
no data attributes or anything but you

00:24:01,030 --> 00:24:04,900
have an ID that's persistent and we'll

00:24:03,250 --> 00:24:06,220
assign again against them when i come

00:24:04,900 --> 00:24:09,130
back in so you can use that for the sort

00:24:06,220 --> 00:24:10,330
of thing of portal ization say maybe if

00:24:09,130 --> 00:24:11,980
you don't want to know any data

00:24:10,330 --> 00:24:13,480
attributes and then you know from then

00:24:11,980 --> 00:24:16,030
on you can release as much information

00:24:13,480 --> 00:24:22,170
about them as you want but it needed a

00:24:16,030 --> 00:24:22,170
bit tricky so then I got to the second

00:24:22,360 --> 00:24:26,510
second set requirements all I've started

00:24:24,620 --> 00:24:32,570
the second set of requirements I should

00:24:26,510 --> 00:24:34,550
say so this is to handle the fact that

00:24:32,570 --> 00:24:36,290
okay we might have a few of these

00:24:34,550 --> 00:24:39,350
institutions that are sorted out for

00:24:36,290 --> 00:24:40,820
their allocating authorization but

00:24:39,350 --> 00:24:43,250
there's a whole load of them that

00:24:40,820 --> 00:24:45,170
haven't taught any of that out and and

00:24:43,250 --> 00:24:46,790
potentially in the same institution

00:24:45,170 --> 00:24:49,370
there may be some bits that are sorted

00:24:46,790 --> 00:24:51,200
out for authorization to bits other ways

00:24:49,370 --> 00:24:54,790
that we need to be set locally so there

00:24:51,200 --> 00:24:56,810
needs to be a mix of local and remote

00:24:54,790 --> 00:24:59,330
authorization you need to be allocating

00:24:56,810 --> 00:25:01,750
access to people within service provider

00:24:59,330 --> 00:25:03,830
as well as getting authorization

00:25:01,750 --> 00:25:07,730
attributes from your remote identity

00:25:03,830 --> 00:25:09,830
preferred and there's also the factor

00:25:07,730 --> 00:25:13,130
that because the identity provider is

00:25:09,830 --> 00:25:15,260
remote then the person is lifespan and

00:25:13,130 --> 00:25:17,060
one their literal I spent but their

00:25:15,260 --> 00:25:20,150
lifespan as a user in the organization

00:25:17,060 --> 00:25:22,130
is unknown to you and also their

00:25:20,150 --> 00:25:23,840
authorization could be changed so

00:25:22,130 --> 00:25:25,340
there's no way that you should be

00:25:23,840 --> 00:25:27,290
retaining the authorization that's been

00:25:25,340 --> 00:25:29,360
given to them beyond the session that

00:25:27,290 --> 00:25:31,490
they logged in with because you know

00:25:29,360 --> 00:25:32,750
they make login tomorrow and they've

00:25:31,490 --> 00:25:34,580
been all their rights have been revoked

00:25:32,750 --> 00:25:38,000
because they've done something nasty in

00:25:34,580 --> 00:25:40,900
the canteen or something so um but then

00:25:38,000 --> 00:25:45,260
we get to the next query remote

00:25:40,900 --> 00:25:47,450
allocation so there is the possibility

00:25:45,260 --> 00:25:49,820
that in order to provide a better

00:25:47,450 --> 00:25:54,020
management interface with inna so within

00:25:49,820 --> 00:25:55,250
your service you can query certain you

00:25:54,020 --> 00:25:56,840
can query certain attributes or maybe

00:25:55,250 --> 00:25:59,420
full attributes of users remotely so

00:25:56,840 --> 00:26:00,800
that when as an administrator you're

00:25:59,420 --> 00:26:04,070
looking at a user you can kind of

00:26:00,800 --> 00:26:07,610
refresh it to to get back what's being

00:26:04,070 --> 00:26:10,520
allocated it to it from the remote

00:26:07,610 --> 00:26:13,490
provider and then we got to make a

00:26:10,520 --> 00:26:16,190
decent user interface to do to do all

00:26:13,490 --> 00:26:21,160
this stuff with and yeah the lifespan

00:26:16,190 --> 00:26:27,080
management for people and their data

00:26:21,160 --> 00:26:31,660
so rolls acting as a separation layer so

00:26:27,080 --> 00:26:34,309
we are hopefully able to reduce it to

00:26:31,660 --> 00:26:35,960
just a handful of roles and that kind of

00:26:34,309 --> 00:26:39,830
think on that basis and that makes

00:26:35,960 --> 00:26:42,230
things a bit easier to cope with a super

00:26:39,830 --> 00:26:44,330
user kind of out of the box so we've got

00:26:42,230 --> 00:26:51,580
these other four roles we've come up

00:26:44,330 --> 00:26:55,730
with and I'm in order to allocate these

00:26:51,580 --> 00:26:58,880
roles to objects it's easiest if we use

00:26:55,730 --> 00:27:05,080
a means to also create so we have a kind

00:26:58,880 --> 00:27:07,670
of like a a base class which is groups

00:27:05,080 --> 00:27:10,040
maps to the these four groups when you

00:27:07,670 --> 00:27:13,610
create an object it has an Associated

00:27:10,040 --> 00:27:14,840
set of groups so that under the hood you

00:27:13,610 --> 00:27:18,170
can be throwing something into the

00:27:14,840 --> 00:27:21,140
author ship for this say survey and that

00:27:18,170 --> 00:27:24,280
means they'll be put into the authors

00:27:21,140 --> 00:27:29,300
group that's been also created when the

00:27:24,280 --> 00:27:31,970
survey was created and then we've got

00:27:29,300 --> 00:27:33,500
permissions checking and it's where it

00:27:31,970 --> 00:27:34,760
gets a bit more towards where I'm

00:27:33,500 --> 00:27:38,840
actually going to show some Python code

00:27:34,760 --> 00:27:40,750
hopefully waking up of it and so it this

00:27:38,840 --> 00:27:43,820
is how I've implemented it as a

00:27:40,750 --> 00:27:45,890
decorator and whether I've done the

00:27:43,820 --> 00:27:47,780
right thing with that so I just a

00:27:45,890 --> 00:27:50,470
diagram to explain what I was talking

00:27:47,780 --> 00:27:54,020
about with the the various groups

00:27:50,470 --> 00:27:58,100
allocated to an instance of a object the

00:27:54,020 --> 00:28:04,850
role that maps to those groups set of

00:27:58,100 --> 00:28:06,470
permissions etc so for the remote will

00:28:04,850 --> 00:28:08,120
patrol allocation weight that it works

00:28:06,470 --> 00:28:10,340
is what you have is these entitlement

00:28:08,120 --> 00:28:14,720
attributes so we kind of need to break

00:28:10,340 --> 00:28:18,320
those down into a standard format which

00:28:14,720 --> 00:28:20,390
we can then split up and allocate access

00:28:18,320 --> 00:28:22,160
so this is what we come up with you

00:28:20,390 --> 00:28:26,770
really need the first view because you

00:28:22,160 --> 00:28:29,270
may want to say for this particular so

00:28:26,770 --> 00:28:30,770
given its in their system then it users

00:28:29,270 --> 00:28:32,030
need to identify what this this

00:28:30,770 --> 00:28:34,190
entitlements about because they might

00:28:32,030 --> 00:28:35,690
have one's their internal about

00:28:34,190 --> 00:28:38,620
access the library after eight o'clock

00:28:35,690 --> 00:28:43,000
or something and so then you have the

00:28:38,620 --> 00:28:46,309
customer which against Cardiff the rule

00:28:43,000 --> 00:28:47,990
the class of object I survey so you

00:28:46,309 --> 00:28:49,909
don't necessarily need the identifier so

00:28:47,990 --> 00:28:52,360
it could be that you're giving all the

00:28:49,909 --> 00:28:54,590
ship tip in the Cardiff account to all

00:28:52,360 --> 00:28:57,200
surveys to a particular user but if you

00:28:54,590 --> 00:28:59,870
do use that then you're you're giving it

00:28:57,200 --> 00:29:02,809
to a particular survey or and you may

00:28:59,870 --> 00:29:04,639
also need to help them manage things at

00:29:02,809 --> 00:29:07,639
their end it maybe they want to say yeah

00:29:04,639 --> 00:29:09,559
but don't let any students accident be

00:29:07,639 --> 00:29:13,460
waters of this survey so you can undo

00:29:09,559 --> 00:29:20,539
exclude and a entitlement group to do

00:29:13,460 --> 00:29:22,039
that so almost get so code now and so

00:29:20,539 --> 00:29:24,049
this is how I want it to work I don't

00:29:22,039 --> 00:29:25,820
want to have to put in anything

00:29:24,049 --> 00:29:28,220
complicated within the body of the code

00:29:25,820 --> 00:29:31,850
I want to just have Django choir space

00:29:28,220 --> 00:29:35,659
views or Django functional views with a

00:29:31,850 --> 00:29:37,460
simple single permission and further

00:29:35,659 --> 00:29:39,259
class-based views if you using generic

00:29:37,460 --> 00:29:41,000
view so they're like the list view all

00:29:39,259 --> 00:29:42,830
the update view they inherently have

00:29:41,000 --> 00:29:45,110
objects associated with them so if we've

00:29:42,830 --> 00:29:47,659
got the objects we've also got a request

00:29:45,110 --> 00:29:49,190
for the view then we've got the user so

00:29:47,659 --> 00:29:52,100
all we need to do is provide the

00:29:49,190 --> 00:29:53,899
permissions so we can just on any view

00:29:52,100 --> 00:29:55,970
that's a generic view we can just say

00:29:53,899 --> 00:29:58,100
okay I want this to only be exact

00:29:55,970 --> 00:30:01,879
accessible by users with an edit or lock

00:29:58,100 --> 00:30:04,159
permission it works out the user the

00:30:01,879 --> 00:30:05,750
user has a role the role maximum

00:30:04,159 --> 00:30:09,200
emission exception we find out whether

00:30:05,750 --> 00:30:11,120
they can actually get into that view so

00:30:09,200 --> 00:30:13,879
it's calling check permissions underhood

00:30:11,120 --> 00:30:16,879
so passing the use of the object and of

00:30:13,879 --> 00:30:18,470
missions and then it's getting those

00:30:16,879 --> 00:30:21,649
either from the temporary entitlements

00:30:18,470 --> 00:30:23,870
or the local get roles as a reverse

00:30:21,649 --> 00:30:26,690
lookup is useful because you may want to

00:30:23,870 --> 00:30:29,899
say list all the surveys a person has

00:30:26,690 --> 00:30:33,230
rights to view for instance so this is

00:30:29,899 --> 00:30:34,879
kind of like a how you would apply it as

00:30:33,230 --> 00:30:36,169
a class permission that's a standard

00:30:34,879 --> 00:30:41,139
update view so it's going to have an

00:30:36,169 --> 00:30:41,139
associated instance of a survey

00:30:42,879 --> 00:30:51,889
okay so this is the final section really

00:30:47,450 --> 00:30:54,830
the code I know it's more a case of this

00:30:51,889 --> 00:30:56,899
look at this this is what I do what you

00:30:54,830 --> 00:30:58,940
think does it make sense I be so if

00:30:56,899 --> 00:31:01,850
anyone wants to say oh my god that's a

00:30:58,940 --> 00:31:06,499
terrible idea please do so so basically

00:31:01,850 --> 00:31:09,499
I'm the decorator or class underscore

00:31:06,499 --> 00:31:11,869
permissions is a class itself because by

00:31:09,499 --> 00:31:16,749
having a decorator that's a class we can

00:31:11,869 --> 00:31:20,210
give it a tribution retain between

00:31:16,749 --> 00:31:23,299
decorations of the methods of the view

00:31:20,210 --> 00:31:26,210
so there's two main methods that are a

00:31:23,299 --> 00:31:28,159
generative you will have the dispatch

00:31:26,210 --> 00:31:31,309
method that it first gets from your l's

00:31:28,159 --> 00:31:33,379
when it gets to the view and they get

00:31:31,309 --> 00:31:35,389
context data where it kind of pulls out

00:31:33,379 --> 00:31:39,080
of the main data that's going to throw

00:31:35,389 --> 00:31:41,779
into the view in Django and so we want

00:31:39,080 --> 00:31:43,879
to decorate the first of all the

00:31:41,779 --> 00:31:45,679
dispatch method we want to check if

00:31:43,879 --> 00:31:49,580
somebody can log in and then if they do

00:31:45,679 --> 00:31:53,059
log in keep hold of that user and then

00:31:49,580 --> 00:31:58,220
we want to decorate the context data to

00:31:53,059 --> 00:32:02,330
see what permissions does that use a

00:31:58,220 --> 00:32:07,460
have on that context data so the way it

00:32:02,330 --> 00:32:08,779
works here is it kind of I'm not sure

00:32:07,460 --> 00:32:09,919
really call it monkey patching really

00:32:08,779 --> 00:32:11,809
because there is a standard method

00:32:09,919 --> 00:32:16,759
decorator way of applying a decorator so

00:32:11,809 --> 00:32:18,619
instead of having the Act decorator

00:32:16,759 --> 00:32:23,690
applied at the top of a method you can

00:32:18,619 --> 00:32:26,840
call that so first of all we call the

00:32:23,690 --> 00:32:28,309
outer decorator which grabs the

00:32:26,840 --> 00:32:29,899
information so it kind of works in

00:32:28,309 --> 00:32:32,659
Reverse so what has to be cooled first

00:32:29,899 --> 00:32:35,600
is login required so logging is the

00:32:32,659 --> 00:32:38,090
inside decorator it's got login required

00:32:35,600 --> 00:32:39,710
if they are not logged in it will

00:32:38,090 --> 00:32:41,720
redirect them it will come back it will

00:32:39,710 --> 00:32:44,359
populate a request with a user so then

00:32:41,720 --> 00:32:48,649
the request got a user then the outer

00:32:44,359 --> 00:32:51,619
decorator just grabs that request data

00:32:48,649 --> 00:32:54,870
and sticks it into this decorator class

00:32:51,619 --> 00:32:56,280
so it's available and then

00:32:54,870 --> 00:32:59,730
next thing they get called is they get

00:32:56,280 --> 00:33:01,710
context data and we get context data has

00:32:59,730 --> 00:33:04,140
this information related to what objects

00:33:01,710 --> 00:33:05,790
are associated with the view and so then

00:33:04,140 --> 00:33:08,340
we've got the objects we've got the user

00:33:05,790 --> 00:33:09,750
and obviously the the whole class is

00:33:08,340 --> 00:33:11,760
called with the list of permissions so

00:33:09,750 --> 00:33:20,180
we got the three things we need to check

00:33:11,760 --> 00:33:20,180
our access so so the deck last bit is

00:33:20,600 --> 00:33:31,890
the thing where it's actually then

00:33:24,920 --> 00:33:35,580
passing that on to check for the

00:33:31,890 --> 00:33:37,559
permissions so it's a splits it out and

00:33:35,580 --> 00:33:40,260
if there's an object list it works out

00:33:37,559 --> 00:33:41,970
at 0 standard attributes which again it

00:33:40,260 --> 00:33:44,040
could possibly change with different

00:33:41,970 --> 00:33:45,570
Django versions obviously needs to have

00:33:44,040 --> 00:33:47,429
a thing too but hopefully they'll keep

00:33:45,570 --> 00:33:49,410
things the same so we get the list of

00:33:47,429 --> 00:33:51,690
objects off off your generic class that

00:33:49,410 --> 00:33:54,240
you have in Django and let me go through

00:33:51,690 --> 00:33:56,910
them and check the things that we've set

00:33:54,240 --> 00:33:59,790
on to this decorator class so we're

00:33:56,910 --> 00:34:02,700
checking the permissions the request and

00:33:59,790 --> 00:34:04,620
the user is passed through another pass

00:34:02,700 --> 00:34:07,020
twice that's bit ugly clean up and the

00:34:04,620 --> 00:34:08,970
object list and so that gets passed

00:34:07,020 --> 00:34:13,639
through to check permissions so this is

00:34:08,970 --> 00:34:16,560
check permissions so check permissions

00:34:13,639 --> 00:34:21,360
if you not use a go away if you're a

00:34:16,560 --> 00:34:22,950
super user sorry if you required to be a

00:34:21,360 --> 00:34:26,970
super user and you're not go away and

00:34:22,950 --> 00:34:28,470
then the object list so if you've not

00:34:26,970 --> 00:34:31,139
got any objects to check against in this

00:34:28,470 --> 00:34:32,340
case go away again because you assuming

00:34:31,139 --> 00:34:34,919
you've got at least have information on

00:34:32,340 --> 00:34:36,540
something and it is kind of failsafe in

00:34:34,919 --> 00:34:37,980
the you don't to give access just

00:34:36,540 --> 00:34:39,419
because you fail to set the object list

00:34:37,980 --> 00:34:43,679
when there is actually some objects on

00:34:39,419 --> 00:34:46,409
the page and then we do the entitlement

00:34:43,679 --> 00:34:48,929
school so these are temporary attributes

00:34:46,409 --> 00:34:52,379
that we've been set from our federated

00:34:48,929 --> 00:34:55,050
authorization we call the tour title and

00:34:52,379 --> 00:35:02,380
then we go on to take those entitlements

00:34:55,050 --> 00:35:07,180
and pass them to the actual check of

00:35:02,380 --> 00:35:08,470
of the permission which will if the

00:35:07,180 --> 00:35:11,140
permission doesn't exist in the entire

00:35:08,470 --> 00:35:16,450
once will go on to check your your

00:35:11,140 --> 00:35:17,830
locally assigned access so that the game

00:35:16,450 --> 00:35:19,210
title means first of all where this is

00:35:17,830 --> 00:35:21,040
just a bit where it splits out the

00:35:19,210 --> 00:35:25,420
attributes thing and these are standards

00:35:21,040 --> 00:35:27,190
for Shibboleth to set entitlement so it

00:35:25,420 --> 00:35:30,820
kind of passes this out from what's been

00:35:27,190 --> 00:35:35,140
set and that set of names they talked

00:35:30,820 --> 00:35:37,930
about whereas going boss Cardiff survey

00:35:35,140 --> 00:35:42,700
survey name so this is just splitting

00:35:37,930 --> 00:35:44,920
that up coming back and it passing it

00:35:42,700 --> 00:35:48,520
into here and then we check if it's if

00:35:44,920 --> 00:35:51,280
it's got them and it doesn't look up and

00:35:48,520 --> 00:35:54,210
so comes back with the roles that it has

00:35:51,280 --> 00:35:59,950
and the roles can then get passed on to

00:35:54,210 --> 00:36:03,330
be tested against so the final bit is

00:35:59,950 --> 00:36:03,330
just showing passing it to the rules

00:36:03,840 --> 00:36:11,710
with a content type to determine if

00:36:08,830 --> 00:36:14,140
you've got the permission so I think oh

00:36:11,710 --> 00:36:17,470
sorry saying that I thought I'd reach

00:36:14,140 --> 00:36:21,730
the end of Maya so so the role

00:36:17,470 --> 00:36:23,410
entitlements check is is that just

00:36:21,730 --> 00:36:26,130
explaining in more detail it's just

00:36:23,410 --> 00:36:29,410
doing in more detail the check of the

00:36:26,130 --> 00:36:34,300
breaking down entire winces roles and

00:36:29,410 --> 00:36:37,420
what permissions something has so that

00:36:34,300 --> 00:36:41,170
is kind of as far as I've got really so

00:36:37,420 --> 00:36:46,420
I still need to do these these last

00:36:41,170 --> 00:36:48,730
points there's the the remote allocation

00:36:46,420 --> 00:36:51,040
to sort out and get that back to

00:36:48,730 --> 00:36:54,300
populate the admin interface make it

00:36:51,040 --> 00:36:58,240
more usable for administrators and

00:36:54,300 --> 00:37:00,520
manage the identity life span and also

00:36:58,240 --> 00:37:02,200
data so there will be things to do with

00:37:00,520 --> 00:37:04,150
data protection where after certain

00:37:02,200 --> 00:37:05,290
periods data has to be anonymised a lot

00:37:04,150 --> 00:37:09,900
of it thrown away and then there'll be a

00:37:05,290 --> 00:37:09,900
longer term life span removal of abusers

00:37:10,080 --> 00:37:15,130
so I think that's pretty much the end of

00:37:13,600 --> 00:37:15,940
the talk is a wee bit early but I don't

00:37:15,130 --> 00:37:19,390
suppose anyone mind

00:37:15,940 --> 00:37:26,310
but that much so I think we can move on

00:37:19,390 --> 00:37:26,310
to two questions or suggestions

00:37:36,940 --> 00:37:39,000
you

00:37:40,549 --> 00:37:46,309
no I a little suggestion in his life

00:37:44,509 --> 00:37:48,650
before where you are going to use it the

00:37:46,309 --> 00:37:52,579
decorator with a class and the call

00:37:48,650 --> 00:37:56,259
method turtle but before before the

00:37:52,579 --> 00:37:59,749
first one yep this I never thought about

00:37:56,259 --> 00:38:01,969
have you ever thought about instead of

00:37:59,749 --> 00:38:03,829
using a class here using a simple

00:38:01,969 --> 00:38:08,630
function and then setting the attribute

00:38:03,829 --> 00:38:12,799
of the function I mean you used our self

00:38:08,630 --> 00:38:16,299
dot parents you can set the attribute of

00:38:12,799 --> 00:38:20,179
the decorated function as pearls and

00:38:16,299 --> 00:38:24,319
then instead of using coal you may put

00:38:20,179 --> 00:38:26,019
the the wrapper class inside that one as

00:38:24,319 --> 00:38:28,759
in the function as a standard way to

00:38:26,019 --> 00:38:31,969
decorating a function and I think this

00:38:28,759 --> 00:38:33,709
way you can optimize because there you

00:38:31,969 --> 00:38:37,880
are using a director and under the

00:38:33,709 --> 00:38:42,949
objector and and classes classes

00:38:37,880 --> 00:38:46,039
variables and plus some bandar functions

00:38:42,949 --> 00:38:48,619
I mean a function obviously occupies

00:38:46,039 --> 00:38:51,049
less than a year then across but I'm not

00:38:48,619 --> 00:38:55,009
sure how how would you get persistence

00:38:51,049 --> 00:38:59,539
of the data in a persistent of their

00:38:55,009 --> 00:39:02,499
bums attribute you mean yes if you were

00:38:59,539 --> 00:39:05,359
setting say the request let's say

00:39:02,499 --> 00:39:07,939
permissions is a function separate

00:39:05,359 --> 00:39:09,920
method calls to the function so you so

00:39:07,939 --> 00:39:12,160
the function would no longer be around

00:39:09,920 --> 00:39:15,819
when you were getting the context data

00:39:12,160 --> 00:39:20,779
yeah but those are all methods inside

00:39:15,819 --> 00:39:23,989
them the rapid glass beer what the

00:39:20,779 --> 00:39:27,699
jungle view cost ok so if you are going

00:39:23,989 --> 00:39:30,529
to set the attribute ask their deputies

00:39:27,699 --> 00:39:32,989
at the ultimate plans in the object

00:39:30,529 --> 00:39:35,089
object you are wrapping you could set in

00:39:32,989 --> 00:39:37,459
that only any wrapping in 30 min yeah

00:39:35,089 --> 00:39:39,679
it's a little interested intrusive but

00:39:37,459 --> 00:39:41,029
thank you I guess yeah I guess you could

00:39:39,679 --> 00:39:42,410
well you'd have to name it kind of

00:39:41,029 --> 00:39:46,099
differently because it might happen

00:39:42,410 --> 00:39:50,779
anyways clashing and stuff but um yeah I

00:39:46,099 --> 00:39:52,630
guess you could say salma set it on the

00:39:50,779 --> 00:39:56,000
view in effect yeah and

00:39:52,630 --> 00:39:57,200
but you still have to call it the issue

00:39:56,000 --> 00:39:58,790
is that you're calling these are

00:39:57,200 --> 00:40:02,450
different times so you kind of I don't

00:39:58,790 --> 00:40:04,220
know but yeah it's fair point I guess as

00:40:02,450 --> 00:40:06,200
long as you were sure you would wrapped

00:40:04,220 --> 00:40:09,260
both so the problem would be that I

00:40:06,200 --> 00:40:10,880
wouldn't have my original kind of reason

00:40:09,260 --> 00:40:12,619
for doing it which was that I could just

00:40:10,880 --> 00:40:17,480
have a class for missions because I

00:40:12,619 --> 00:40:19,400
guess I would have to have one decorator

00:40:17,480 --> 00:40:22,359
on here to decorate a zone no you can

00:40:19,400 --> 00:40:26,230
decorate also your class and then in in

00:40:22,359 --> 00:40:33,560
create the attribute in edit serve a

00:40:26,230 --> 00:40:35,630
person but from outside okay yeah well

00:40:33,560 --> 00:40:39,950
they they are class decorators so

00:40:35,630 --> 00:40:43,790
probably you will need python 2.6 or

00:40:39,950 --> 00:40:47,710
something like that but ok well oh yes

00:40:43,790 --> 00:40:47,710
that's into that thanks

00:40:59,770 --> 00:41:05,000
maybe it's not a mistake but the biggest

00:41:02,720 --> 00:41:08,000
problem of this decorator for me is that

00:41:05,000 --> 00:41:11,060
modifies the class itself so you should

00:41:08,000 --> 00:41:13,250
be careful while using it maybe you

00:41:11,060 --> 00:41:15,500
should subclass and get a subclass

00:41:13,250 --> 00:41:18,260
optional something like that yeah well

00:41:15,500 --> 00:41:20,619
that is what it's not it's it's the it's

00:41:18,260 --> 00:41:23,540
a class so it was any modifying it

00:41:20,619 --> 00:41:26,480
itself it wasn't modifying you

00:41:23,540 --> 00:41:28,160
suggesting I do modify the class and set

00:41:26,480 --> 00:41:31,280
the attribute on the clothes nothing

00:41:28,160 --> 00:41:34,730
been raised to modify the class I think

00:41:31,280 --> 00:41:36,920
he doesn't mother said the class here

00:41:34,730 --> 00:41:39,410
because it's a separate decorator so it

00:41:36,920 --> 00:41:41,390
kind of like it's kind of worse at least

00:41:39,410 --> 00:41:43,130
that's kind of confirmation is up for

00:41:41,390 --> 00:41:45,500
question as to which way of doing it but

00:41:43,130 --> 00:41:49,520
see this thing that is setting is on it

00:41:45,500 --> 00:41:53,440
on itself as a decorator not on well it

00:41:49,520 --> 00:41:53,440
does it's did on their name out of it

00:41:53,800 --> 00:42:00,800
yeah that's the it's cert than that mean

00:41:58,369 --> 00:42:05,780
oh yeah it's monkey patching in a way

00:42:00,800 --> 00:42:08,800
yeah on the because it has to wrap it so

00:42:05,780 --> 00:42:11,510
that the way of wrapping it without

00:42:08,800 --> 00:42:13,970
without doing that with an actual @

00:42:11,510 --> 00:42:18,109
symbol on the function is that it's it

00:42:13,970 --> 00:42:19,609
grabs the grubs that method decorate it

00:42:18,109 --> 00:42:21,079
and puts it back again with those

00:42:19,609 --> 00:42:22,849
decorators on there so it's kind of like

00:42:21,079 --> 00:42:24,740
a look it's yeah I know you mean that

00:42:22,849 --> 00:42:26,660
they did seem a bit ugly to me I can see

00:42:24,740 --> 00:42:30,130
how you could get around that without

00:42:26,660 --> 00:42:34,069
having to to pull it out and have it

00:42:30,130 --> 00:42:37,400
explicitly the three different method

00:42:34,069 --> 00:42:39,710
decorators but hey but well I guess it's

00:42:37,400 --> 00:42:41,060
a piece of it up it's a beta anyone

00:42:39,710 --> 00:42:43,220
comes up with a cleaner solution

00:42:41,060 --> 00:42:46,010
anywhere that's kind of like a we could

00:42:43,220 --> 00:42:48,410
have a votes on them a bit like the new

00:42:46,010 --> 00:42:50,359
standard forum users and groups in

00:42:48,410 --> 00:42:51,990
Django as long as it doesn't take so

00:42:50,359 --> 00:42:55,320
long to decide

00:42:51,990 --> 00:42:55,320
wherever they sway

00:43:00,080 --> 00:43:10,970
ok this up for if you're breaking

00:43:03,290 --> 00:43:13,780
present minutes thank you ok cheers

00:43:10,970 --> 00:43:13,780

YouTube URL: https://www.youtube.com/watch?v=OeToCdcv8zo


