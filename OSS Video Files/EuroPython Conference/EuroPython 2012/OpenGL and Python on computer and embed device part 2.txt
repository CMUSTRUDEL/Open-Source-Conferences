Title: OpenGL and Python on computer and embed device part 2
Publication date: 2015-04-19
Playlist: EuroPython 2012
Description: 
	[EuroPython 2012] S Urbanek - 6 JULY 2012 in "Track Tagliatelle"
Captions: 
	00:01:29,960 --> 00:01:42,240
okay so we want to try the

00:01:38,330 --> 00:01:45,030
generalization but what I'm going to

00:01:42,240 --> 00:01:48,060
talk about in this part we'll go we'll

00:01:45,030 --> 00:01:50,820
go through the diner meditation process

00:01:48,060 --> 00:01:53,280
then I would like to show at least the

00:01:50,820 --> 00:01:56,850
prototype of the Cross tables which I

00:01:53,280 --> 00:01:59,220
think it's pretty useful in reporting

00:01:56,850 --> 00:02:02,460
when you can put like dimensions on the

00:01:59,220 --> 00:02:04,830
columns dimensions of the rows and then

00:02:02,460 --> 00:02:08,759
I would like to show you a really simple

00:02:04,830 --> 00:02:11,430
fast web application for dimensional

00:02:08,759 --> 00:02:13,920
browsing to show you how to do the

00:02:11,430 --> 00:02:16,560
diamond mounted at the browsing through

00:02:13,920 --> 00:02:20,340
dimensions how to use properly the keys

00:02:16,560 --> 00:02:26,090
and the labels and how to like get more

00:02:20,340 --> 00:02:31,410
from the drill down of the results ok so

00:02:26,090 --> 00:02:33,690
the generalization it's how the how the

00:02:31,410 --> 00:02:37,019
sequel back end is implemented it

00:02:33,690 --> 00:02:40,950
contains a small small objects called

00:02:37,019 --> 00:02:42,989
mapper which does the mapping from from

00:02:40,950 --> 00:02:45,720
the logical physical model so the

00:02:42,989 --> 00:02:49,140
snowflake mapper is using is using the

00:02:45,720 --> 00:02:53,220
mapping specified well in your model and

00:02:49,140 --> 00:02:56,280
dear my eyes mapper is just a dummy

00:02:53,220 --> 00:02:59,970
objects which does nothing because the

00:02:56,280 --> 00:03:05,310
device table has the same color names as

00:02:59,970 --> 00:03:08,790
expected by the cubes so and how to do

00:03:05,310 --> 00:03:12,350
automatic de normalisation in in the

00:03:08,790 --> 00:03:16,320
configuration file of your of your

00:03:12,350 --> 00:03:20,130
workspace you define that you would like

00:03:16,320 --> 00:03:22,530
to use the normalization specify what

00:03:20,130 --> 00:03:24,390
scan what's kima the views are going to

00:03:22,530 --> 00:03:26,850
be created that is going to be created

00:03:24,390 --> 00:03:29,640
one view / cube or you can explicitly

00:03:26,850 --> 00:03:32,400
specified quit only a few for this

00:03:29,640 --> 00:03:34,530
particular cube

00:03:32,400 --> 00:03:38,040
and the prefix which is going to be you

00:03:34,530 --> 00:03:40,409
do not have to specify that but then you

00:03:38,040 --> 00:03:43,280
might have like clashes of the names or

00:03:40,409 --> 00:03:46,950
it's a good practice to have to have

00:03:43,280 --> 00:03:48,720
some kind of prefix paste names if you

00:03:46,950 --> 00:03:52,859
are putting more things into one one

00:03:48,720 --> 00:03:57,230
schema and this is this is how you use

00:03:52,859 --> 00:04:01,530
it slicer generalize and configuration

00:03:57,230 --> 00:04:03,689
you have two options if you who write

00:04:01,530 --> 00:04:05,940
just slicer dinner mais then the view is

00:04:03,689 --> 00:04:08,819
created if you specify match realize

00:04:05,940 --> 00:04:11,519
then the table is created and if you

00:04:08,819 --> 00:04:15,090
specify indexed and also indexes for all

00:04:11,519 --> 00:04:22,830
key attributes of every level of every

00:04:15,090 --> 00:04:35,660
dimension is created as well so we can

00:04:22,830 --> 00:04:41,060
try this let's see here we have a view

00:04:35,660 --> 00:04:52,550
now the view is gone and we have table

00:04:41,060 --> 00:04:52,550
so this table Phoenix is created

00:04:56,720 --> 00:05:03,060
currently in this deployment ation yes

00:04:59,250 --> 00:05:05,010
so there is no like well justjust put

00:05:03,060 --> 00:05:08,340
their just change user so it will be

00:05:05,010 --> 00:05:11,430
really nice to have that but didn't have

00:05:08,340 --> 00:05:14,849
time to do that so so I would like to

00:05:11,430 --> 00:05:18,020
have that in but now it's just simple go

00:05:14,849 --> 00:05:18,020
away and here's the other thing

00:05:19,710 --> 00:05:32,560
um yeah might be yeah all right yeah I'm

00:05:29,490 --> 00:05:35,259
the easiest quickest solution was to

00:05:32,560 --> 00:05:37,689
create it this way and there is no this

00:05:35,259 --> 00:05:40,629
is not like the final solution so it was

00:05:37,689 --> 00:05:42,789
like I would like to have this thing

00:05:40,629 --> 00:05:45,250
inside and it's this really useful so

00:05:42,789 --> 00:05:47,110
just implemented it this way in this

00:05:45,250 --> 00:05:49,210
case this is not the final final like

00:05:47,110 --> 00:05:50,949
you might have more options later on so

00:05:49,210 --> 00:06:00,729
also like adding more things into

00:05:50,949 --> 00:06:06,009
existing table yeah in that case in that

00:06:00,729 --> 00:06:07,810
case no yeah and like if I would like to

00:06:06,009 --> 00:06:10,120
use the truncate the next logical step

00:06:07,810 --> 00:06:13,509
would be just to check the columns

00:06:10,120 --> 00:06:15,610
matches and just fail if they don't like

00:06:13,509 --> 00:06:17,379
like the first step not to over

00:06:15,610 --> 00:06:20,710
complicate it and maybe later to create

00:06:17,379 --> 00:06:23,529
some kind of magic to add new columns

00:06:20,710 --> 00:06:31,449
rename calm but I don't want to be over

00:06:23,529 --> 00:06:34,029
complicated right now you can now you

00:06:31,449 --> 00:06:37,060
can't so this is all the settings you

00:06:34,029 --> 00:06:38,830
can you can use them so you see you have

00:06:37,060 --> 00:06:41,080
dinner my eyes and you see that this is

00:06:38,830 --> 00:06:45,279
dimensioned dot attribute dimensioned

00:06:41,080 --> 00:06:51,370
alt attribute and other indexes were

00:06:45,279 --> 00:06:54,930
created so for every every level you

00:06:51,370 --> 00:06:54,930
have some indexes

00:07:02,870 --> 00:07:18,030
okay so now let's let's try it so that's

00:07:15,150 --> 00:07:21,180
okay we do not have the normalization

00:07:18,030 --> 00:07:33,290
enabled if we switch to yes then we will

00:07:21,180 --> 00:07:33,290
you to the normalization so it's here

00:07:36,590 --> 00:07:42,770
yep now we enable the generalization

00:07:50,780 --> 00:08:09,030
okay I don't why I then there's process

00:08:00,870 --> 00:08:11,270
running yeah all right thing okay I be

00:08:09,030 --> 00:08:11,270
too

00:08:34,899 --> 00:08:45,099
okay there's some some kind of bug

00:08:37,839 --> 00:08:45,099
anyway it is supposed to work i swear

00:08:50,319 --> 00:09:01,069
this way a very small bag but you

00:08:59,660 --> 00:09:03,110
wouldn't have to you wouldn't have to

00:09:01,069 --> 00:09:04,730
specify the schema here but it looks

00:09:03,110 --> 00:09:08,689
like there is a duress bargaining cube

00:09:04,730 --> 00:09:11,930
so i will need to fix it by default this

00:09:08,689 --> 00:09:14,360
is like the intention you will use only

00:09:11,930 --> 00:09:17,779
this switch to switch between the snow

00:09:14,360 --> 00:09:20,990
flag and to normalized so here we have

00:09:17,779 --> 00:09:25,699
the results and if you look in the in

00:09:20,990 --> 00:09:30,250
the Curie here then you see no joints

00:09:25,699 --> 00:09:35,420
here because directly the view was are

00:09:30,250 --> 00:09:43,040
accessed yeah so and this is this is the

00:09:35,420 --> 00:09:45,680
result this is the result of of this

00:09:43,040 --> 00:09:47,899
thing to the browser if you had the

00:09:45,680 --> 00:09:50,300
switch that use the normalization it

00:09:47,899 --> 00:09:55,850
will not use the snowflake mapper it was

00:09:50,300 --> 00:09:58,790
used generalized mapper if you are

00:09:55,850 --> 00:10:00,589
creating the workspace the then you

00:09:58,790 --> 00:10:09,920
specify if we would like to use any mice

00:10:00,589 --> 00:10:17,170
or not bye-bye option in going to show

00:10:09,920 --> 00:10:27,850
you yeah

00:10:17,170 --> 00:10:33,660
yeah yeah yeah I agree oh here so we're

00:10:27,850 --> 00:10:33,660
creating workspace then here you specify

00:10:34,920 --> 00:10:42,089
yeah so is it sufficiently thing or not

00:10:47,850 --> 00:10:55,930
okay in this cave you are just using the

00:10:53,949 --> 00:10:57,970
normalization you do not need to specify

00:10:55,930 --> 00:11:02,019
the prefixes and stuff like that but

00:10:57,970 --> 00:11:05,290
anyway so yeah so this is the

00:11:02,019 --> 00:11:17,040
normalization to create our dinner my

00:11:05,290 --> 00:11:17,040
stable where

00:11:17,440 --> 00:11:44,540
hmm like a change on a running server no

00:11:28,600 --> 00:11:53,690
yes yeah ok so now now have a look let's

00:11:44,540 --> 00:11:56,350
have a look at the cross table so this

00:11:53,690 --> 00:11:56,350
might be Oh

00:12:09,280 --> 00:12:15,410
this is just I will go through the code

00:12:12,500 --> 00:12:18,380
but what it does the script it generates

00:12:15,410 --> 00:12:20,930
a really simple HTML file with it with

00:12:18,380 --> 00:12:22,730
the table inside with two dimensions and

00:12:20,930 --> 00:12:25,040
on one dimension you will have years

00:12:22,730 --> 00:12:27,800
another dimension we will have the

00:12:25,040 --> 00:12:31,160
procurement process type but to explain

00:12:27,800 --> 00:12:34,850
it to explain it are on the code so this

00:12:31,160 --> 00:12:36,470
is this is the classical basic thing you

00:12:34,850 --> 00:12:37,820
will have to do to get the model the

00:12:36,470 --> 00:12:41,530
creative work space to get the browser

00:12:37,820 --> 00:12:44,630
get to sell you will do the aggregation

00:12:41,530 --> 00:12:47,690
through the dimensions you are going to

00:12:44,630 --> 00:12:51,080
do the cross table you're going to put

00:12:47,690 --> 00:12:53,630
on the Rose the closest type and on the

00:12:51,080 --> 00:12:56,030
columns you're going to put date and you

00:12:53,630 --> 00:12:59,450
get the from the aggregation result you

00:12:56,030 --> 00:13:02,630
create the cross table with rows columns

00:12:59,450 --> 00:13:06,760
and this is going to be the salt you're

00:13:02,630 --> 00:13:10,640
going to put inside you can put multiple

00:13:06,760 --> 00:13:15,430
measures measures there and then you

00:13:10,640 --> 00:13:15,430
just generate the cross table so

00:13:28,430 --> 00:13:34,050
it has no CSS formatting nothing so it's

00:13:31,860 --> 00:13:37,740
just just to show you the result that

00:13:34,050 --> 00:13:40,019
you have you have years as a columns and

00:13:37,740 --> 00:13:42,570
you have procurement time as rose and

00:13:40,019 --> 00:13:47,250
then you have all the numbers inside

00:13:42,570 --> 00:13:51,600
without any promoting so so this is the

00:13:47,250 --> 00:13:53,790
result and you can use you can use

00:13:51,600 --> 00:13:58,649
multiple levels so we can use multiple

00:13:53,790 --> 00:14:05,790
levels here as it was as you can see as

00:13:58,649 --> 00:14:17,399
you can see in this example ah where's

00:14:05,790 --> 00:14:26,010
the example as the example shown in the

00:14:17,399 --> 00:14:28,800
morning yeah so yeah just here you have

00:14:26,010 --> 00:14:30,630
one dimension with two levels and this

00:14:28,800 --> 00:14:34,680
is this is the result if you specify two

00:14:30,630 --> 00:14:38,430
levels so this is how it was done that

00:14:34,680 --> 00:14:40,829
you specify this is going to be our rose

00:14:38,430 --> 00:14:42,930
is going to be on columns this is the

00:14:40,829 --> 00:14:45,420
measure so this is this is the cross

00:14:42,930 --> 00:14:50,190
table for the hello world example which

00:14:45,420 --> 00:14:53,420
is included in the inner cubes yeah of

00:14:50,190 --> 00:14:53,420
course this is this is this is

00:14:57,920 --> 00:15:05,160
you you want you mean what's the result

00:15:01,139 --> 00:15:08,699
of the possible call is a structure we

00:15:05,160 --> 00:15:11,939
which contains three three fields one

00:15:08,699 --> 00:15:16,199
field is rose second one is columns so

00:15:11,939 --> 00:15:18,389
rose it's it's an array of labels going

00:15:16,199 --> 00:15:19,949
to be put on the underverse then you

00:15:18,389 --> 00:15:22,129
have upwards going to be on the tables

00:15:19,949 --> 00:15:24,990
and then you have the data which have

00:15:22,129 --> 00:15:34,439
tablets structure with rows which each

00:15:24,990 --> 00:15:38,750
cell contains these measures now and

00:15:34,439 --> 00:15:43,740
what I'm saying that the API is not not

00:15:38,750 --> 00:15:47,189
final yet because it might be useful to

00:15:43,740 --> 00:15:52,759
have in a result as a cell not only not

00:15:47,189 --> 00:15:56,850
only the measures but as well the the

00:15:52,759 --> 00:15:58,740
cell like all the cuts for the cell so

00:15:56,850 --> 00:16:00,899
it will be much easier to create

00:15:58,740 --> 00:16:02,939
reporting where we will just click on

00:16:00,899 --> 00:16:07,410
the number and you will go to the report

00:16:02,939 --> 00:16:13,130
on this leg here on this column and row

00:16:07,410 --> 00:16:17,480
like this year and this this category

00:16:13,130 --> 00:16:22,620
leather the point of group is to make

00:16:17,480 --> 00:16:26,519
make report creation as easy as as

00:16:22,620 --> 00:16:28,529
possible so if I can put some knowledge

00:16:26,519 --> 00:16:30,839
Eden within the framework i will put the

00:16:28,529 --> 00:16:37,949
knowledge there but to have still

00:16:30,839 --> 00:16:41,720
options to make it explicit okay now a

00:16:37,949 --> 00:16:45,990
little bit about the about the labels

00:16:41,720 --> 00:16:51,300
because we will need this for we will

00:16:45,990 --> 00:16:53,970
need these for web application so first

00:16:51,300 --> 00:16:55,829
I'm going to show you what we are going

00:16:53,970 --> 00:16:58,980
through what we are going to create I

00:16:55,829 --> 00:17:01,189
need to stop the server okay so he's not

00:16:58,980 --> 00:17:01,189
running

00:17:06,980 --> 00:17:18,360
okay we have this simple flask

00:17:10,819 --> 00:17:31,290
application yeah it's not very visible

00:17:18,360 --> 00:17:33,510
here okay so basically what this

00:17:31,290 --> 00:17:36,570
application does it lists all the

00:17:33,510 --> 00:17:39,360
dimensions within the model and if you

00:17:36,570 --> 00:17:43,440
click on the dimension it creates a

00:17:39,360 --> 00:17:46,110
simple simple table right nothing more

00:17:43,440 --> 00:17:48,600
it just go through dimension to do the

00:17:46,110 --> 00:17:52,410
drill down through one dimension really

00:17:48,600 --> 00:17:54,660
simple nothing complicated so here you

00:17:52,410 --> 00:17:59,670
can see the year the number of records

00:17:54,660 --> 00:18:05,100
and total amount within within that that

00:17:59,670 --> 00:18:07,710
particular cell and because this is all

00:18:05,100 --> 00:18:09,660
this hierarchy has multiple levels you

00:18:07,710 --> 00:18:14,520
can click on so let's have a look at

00:18:09,660 --> 00:18:17,820
2010 I click it 2010 now I have like the

00:18:14,520 --> 00:18:20,790
whole 2010 i click on august and here

00:18:17,820 --> 00:18:24,750
these days this is the the cell so the

00:18:20,790 --> 00:18:30,120
the kind of bread crumb and i can look

00:18:24,750 --> 00:18:31,920
at the add details for august in 2010

00:18:30,120 --> 00:18:35,130
and here you can see that you can see

00:18:31,920 --> 00:18:41,330
the cut this is the the august two

00:18:35,130 --> 00:18:46,320
thousand ten see or i can go to this

00:18:41,330 --> 00:18:51,110
huge comic book in my vocabulary and sea

00:18:46,320 --> 00:18:53,940
food beverages get diary products

00:18:51,110 --> 00:18:57,220
million cream

00:18:53,940 --> 00:19:00,580
Malcolm I like the naming of the schema

00:18:57,220 --> 00:19:02,320
they did they took the all subcategories

00:19:00,580 --> 00:19:06,010
and created like the name of the

00:19:02,320 --> 00:19:08,140
categories just putting all the

00:19:06,010 --> 00:19:10,360
subcategories together in one name I

00:19:08,140 --> 00:19:12,360
mean there are lots of a lot of

00:19:10,360 --> 00:19:15,760
categories name like like that in this

00:19:12,360 --> 00:19:17,470
huge dictionary anyway so you have you

00:19:15,760 --> 00:19:21,490
can see that you have many many levels

00:19:17,470 --> 00:19:25,780
here last one is series called milk and

00:19:21,490 --> 00:19:30,310
you can see the spending for milk yeah

00:19:25,780 --> 00:19:32,970
basically but the thing is if you change

00:19:30,310 --> 00:19:36,010
the model for this application then also

00:19:32,970 --> 00:19:39,010
it if I would like to change this

00:19:36,010 --> 00:19:41,610
application to work on a model as in the

00:19:39,010 --> 00:19:45,820
hello world so this Bank simple to

00:19:41,610 --> 00:19:47,650
two-dimensional nominal table all I will

00:19:45,820 --> 00:19:49,720
have to do is just change the database

00:19:47,650 --> 00:19:53,470
connection and the model and that's it

00:19:49,720 --> 00:19:55,060
and application will work so I will not

00:19:53,470 --> 00:19:57,790
have to change application for example

00:19:55,060 --> 00:20:00,180
if I will take a couple of levels away

00:19:57,790 --> 00:20:03,850
it'll still work if I will take

00:20:00,180 --> 00:20:06,640
dimension away it will still work so as

00:20:03,850 --> 00:20:11,110
I let's have a look how and why it works

00:20:06,640 --> 00:20:17,500
like this so for this we need to know

00:20:11,110 --> 00:20:19,660
more about two labels and the keys so

00:20:17,500 --> 00:20:21,340
yeah as I was mentioning before the

00:20:19,660 --> 00:20:29,260
first that food is usually key the

00:20:21,340 --> 00:20:30,940
second is to label yeah and i was

00:20:29,260 --> 00:20:33,280
showing i was already showing this one

00:20:30,940 --> 00:20:36,130
so this is a simple simple case simple

00:20:33,280 --> 00:20:37,840
table with two two dimensions and this

00:20:36,130 --> 00:20:40,900
is this is the key this is the label key

00:20:37,840 --> 00:20:43,710
label and for this for this level this

00:20:40,900 --> 00:20:49,810
is also a key and unwind reliable as

00:20:43,710 --> 00:20:52,600
well so how i'm going to get the key

00:20:49,810 --> 00:20:55,090
in the application i was showing i am

00:20:52,600 --> 00:20:57,940
always browsing through one dimension so

00:20:55,090 --> 00:21:02,680
I'm not creating a cross-table are

00:20:57,940 --> 00:21:05,080
usually listing with in one dimension so

00:21:02,680 --> 00:21:09,220
like all the months or all the years or

00:21:05,080 --> 00:21:11,560
something in most cases so i have i have

00:21:09,220 --> 00:21:13,420
the i have the dimension so this is this

00:21:11,560 --> 00:21:15,790
is the context i'm interesting i take

00:21:13,420 --> 00:21:18,700
the hierarchy the thing is that the

00:21:15,790 --> 00:21:20,470
cubes internally have parts where they

00:21:18,700 --> 00:21:22,420
can be support for multiple higher case

00:21:20,470 --> 00:21:25,660
but country is not supported through

00:21:22,420 --> 00:21:27,460
through the whole whole framework so

00:21:25,660 --> 00:21:29,710
let's assume that can be only one

00:21:27,460 --> 00:21:32,620
hierarchy within but i still need to get

00:21:29,710 --> 00:21:34,360
the hierarchy and this also answers the

00:21:32,620 --> 00:21:35,680
questions from the from the first pass

00:21:34,360 --> 00:21:37,360
of the session how the hierarchy

00:21:35,680 --> 00:21:40,920
specified so in the model is specific

00:21:37,360 --> 00:21:47,970
hierarchy and list of the level names

00:21:40,920 --> 00:21:47,970
yeah so and this is the order you got

00:21:48,840 --> 00:21:54,370
you get the you get the cut for the

00:21:51,760 --> 00:21:58,630
dimension because you would like to you

00:21:54,370 --> 00:22:02,800
would like to know where you are so this

00:21:58,630 --> 00:22:05,010
is finding where i am at one level I am

00:22:02,800 --> 00:22:08,290
so i get i have the path so this is like

00:22:05,010 --> 00:22:11,140
august two thousand ten i get the all

00:22:08,290 --> 00:22:14,220
the levels and I get the last level so

00:22:11,140 --> 00:22:19,360
i'm currently at the level of month

00:22:14,220 --> 00:22:22,690
right and i get the label attribute is

00:22:19,360 --> 00:22:26,920
the level label attribute the key is

00:22:22,690 --> 00:22:32,740
level key and if i if i am going to draw

00:22:26,920 --> 00:22:38,110
the table like this one then to print

00:22:32,740 --> 00:22:40,780
the labels of the of the of the subject

00:22:38,110 --> 00:22:43,930
or or the category this is common

00:22:40,780 --> 00:22:46,600
procurement vocabulary i just used the

00:22:43,930 --> 00:22:49,710
bro rohui's from the from the drill down

00:22:46,600 --> 00:22:52,900
and the reference to the label attribute

00:22:49,710 --> 00:22:55,380
while our a reference to the key

00:22:52,900 --> 00:22:55,380
attribute

00:22:56,580 --> 00:23:04,950
all this like this is really explicit

00:23:00,250 --> 00:23:07,779
way of trying to find trying to find a

00:23:04,950 --> 00:23:12,639
what what's the label and what's the key

00:23:07,779 --> 00:23:16,600
and this is just a simple plan iterator

00:23:12,639 --> 00:23:19,870
of the results and all these explicit

00:23:16,600 --> 00:23:24,039
specification was put into one one

00:23:19,870 --> 00:23:26,289
method and it's not just drill down it's

00:23:24,039 --> 00:23:29,440
drill down rose and you specify the

00:23:26,289 --> 00:23:33,970
dimension you're drilling through and

00:23:29,440 --> 00:23:38,019
we'll find the labels and keys for you

00:23:33,970 --> 00:23:39,909
so you will not have to do that and then

00:23:38,019 --> 00:23:42,250
you will just specify bro and then get

00:23:39,909 --> 00:23:44,320
the label and roll and get the key you

00:23:42,250 --> 00:23:48,759
will not have to do all that that

00:23:44,320 --> 00:23:53,230
explicit magic for and you get the

00:23:48,759 --> 00:23:57,879
record so there are two ways how to how

00:23:53,230 --> 00:24:00,580
to generate such table 1 is explicit but

00:23:57,879 --> 00:24:04,720
you have to do everything manually and

00:24:00,580 --> 00:24:06,940
one is implicit it is automatic in most

00:24:04,720 --> 00:24:10,029
cases you would use this one if you need

00:24:06,940 --> 00:24:13,269
like some special kind of for you you

00:24:10,029 --> 00:24:15,850
are not satisfied how the cubes are just

00:24:13,269 --> 00:24:18,639
trying to determine the level then you

00:24:15,850 --> 00:24:21,399
will use you really use this one but you

00:24:18,639 --> 00:24:24,429
will have more work with this one right

00:24:21,399 --> 00:24:26,230
so so this is just this is just a simple

00:24:24,429 --> 00:24:29,289
iterator you have to specify the

00:24:26,230 --> 00:24:31,870
dimension you are interested in and then

00:24:29,289 --> 00:24:33,309
you just get the get the label key or

00:24:31,870 --> 00:24:36,129
the full path you would like to

00:24:33,309 --> 00:24:38,980
construct the full path and here you

00:24:36,129 --> 00:24:40,870
have to first find out what's the

00:24:38,980 --> 00:24:44,769
reference for label attribute what's the

00:24:40,870 --> 00:24:46,360
reference for the key yeah and there is

00:24:44,769 --> 00:24:50,580
no there is no such thing you will have

00:24:46,360 --> 00:24:50,580
to get the bathroom the cup

00:24:56,309 --> 00:25:33,309
so and this is used in a in this flask

00:25:02,169 --> 00:25:37,809
application so i have report I get the

00:25:33,309 --> 00:25:39,820
dimension hierarchy I get that I get the

00:25:37,809 --> 00:25:47,889
cell so i know where i am so this is the

00:25:39,820 --> 00:25:51,450
context I get the I get the drill down

00:25:47,889 --> 00:25:51,450
so this is the data I'm going to display

00:25:51,690 --> 00:26:02,860
and yeah and this is this is like the

00:25:58,929 --> 00:26:09,870
explicit way so here I get the label

00:26:02,860 --> 00:26:13,929
attribute in this way so and the key I

00:26:09,870 --> 00:26:19,990
get the iron really explicit explicit

00:26:13,929 --> 00:26:22,299
way and this is an indicator if I have

00:26:19,990 --> 00:26:26,139
to create a link to drill down more or

00:26:22,299 --> 00:26:34,379
not or to stop and then then I just

00:26:26,139 --> 00:26:34,379
render the report report template and

00:26:34,590 --> 00:26:47,710
so yeah so here are the used labels and

00:26:41,950 --> 00:26:51,730
here it's not very very can you see it

00:26:47,710 --> 00:26:56,080
or not no no this is this is being

00:26:51,730 --> 00:27:02,050
generated from the keys and this is

00:26:56,080 --> 00:27:11,460
generated from the frontal label and is

00:27:02,050 --> 00:27:11,460
it clear or yep it was not clear just

00:27:14,790 --> 00:27:18,090
just tell me

00:27:30,190 --> 00:27:39,580
and you're a second to show you example

00:28:11,150 --> 00:28:14,150
examples

00:28:49,640 --> 00:28:57,440
yeah so you can look at the flask

00:28:52,650 --> 00:29:01,920
example it's in it's also in our cubes

00:28:57,440 --> 00:29:04,770
cubes source repository that is for this

00:29:01,920 --> 00:29:07,050
hello world example and there is one for

00:29:04,770 --> 00:29:11,370
the public procurement system with which

00:29:07,050 --> 00:29:19,620
one which I was which I was showing this

00:29:11,370 --> 00:29:25,650
is the flask yeah so this is how we

00:29:19,620 --> 00:29:37,680
create our simple simple browsing in

00:29:25,650 --> 00:29:40,140
flask yeah i'm just saying that that's

00:29:37,680 --> 00:30:00,480
also for procurement and also there is 4

00:29:40,140 --> 00:30:02,970
for a hello world example ok so do you

00:30:00,480 --> 00:30:07,110
have any questions of our would like to

00:30:02,970 --> 00:30:11,450
know something or if you have some kind

00:30:07,110 --> 00:30:11,450
of model you would like to try

00:30:18,080 --> 00:30:21,080
No

00:30:31,920 --> 00:30:37,420
yeah yeah the separate was dropped

00:30:35,230 --> 00:30:42,580
and it's not develop any more it was

00:30:37,420 --> 00:30:45,090
just simple the reason is that ah the

00:30:42,580 --> 00:30:53,920
 back-end was being developed round

00:30:45,090 --> 00:30:58,210
one and half year ago and how to say it

00:30:53,920 --> 00:31:01,180
was not so easy to be able to really

00:30:58,210 --> 00:31:04,420
quickly fetch the data from MongoDB like

00:31:01,180 --> 00:31:09,100
to do aggregations and in case you had

00:31:04,420 --> 00:31:14,380
regulated data then to create indexes

00:31:09,100 --> 00:31:17,860
for multi-dimensional data saw was it's

00:31:14,380 --> 00:31:20,320
not that easy to create so you you will

00:31:17,860 --> 00:31:22,990
have quite a slow slow slow performance

00:31:20,320 --> 00:31:25,270
on that nine DB is really

00:31:22,990 --> 00:31:28,870
great we're great for storing details

00:31:25,270 --> 00:31:38,320
and from from this perspective it's not

00:31:28,870 --> 00:31:40,900
so great for for doing aggregations it

00:31:38,320 --> 00:31:43,000
was it was denormalized in wanker the

00:31:40,900 --> 00:31:44,770
problem is not not the thing of

00:31:43,000 --> 00:31:47,140
normalization to normalization is about

00:31:44,770 --> 00:31:49,450
the aggregations and then the

00:31:47,140 --> 00:31:52,420
multi-dimensional kind of indexing or

00:31:49,450 --> 00:31:59,500
the I think the manga might be

00:31:52,420 --> 00:32:02,590
great some ma precomputed storage so we

00:31:59,500 --> 00:32:04,960
would have your star schema in Postgres

00:32:02,590 --> 00:32:06,550
and you will do the all the computation

00:32:04,960 --> 00:32:09,100
for all the cells all the levels like

00:32:06,550 --> 00:32:12,220
you will precompute the cube in one go

00:32:09,100 --> 00:32:14,260
but again you will have to have like

00:32:12,220 --> 00:32:19,350
nice indexing for multidimensional

00:32:14,260 --> 00:32:19,350
curious for the manga yeah

00:32:30,769 --> 00:32:36,659
if you like create the joints and they

00:32:33,149 --> 00:32:41,009
will define a cycle okay so there is no

00:32:36,659 --> 00:33:20,519
detection for cycles and the behavior is

00:32:41,009 --> 00:33:22,429
like not defined so it might yes but if

00:33:20,519 --> 00:33:28,409
you are doing the analytical modeling

00:33:22,429 --> 00:33:30,090
that usually like the approach is can

00:33:28,409 --> 00:33:32,129
you give me an example from analytical

00:33:30,090 --> 00:33:36,559
point of view where you would have three

00:33:32,129 --> 00:33:36,559
tables turn together in a triangle

00:33:46,170 --> 00:33:51,870
because actually I haven't seen that in

00:33:48,640 --> 00:33:51,870
an analytical store

00:34:16,560 --> 00:34:57,640
but isn't yeah oh yeah yeah but that

00:34:54,899 --> 00:35:11,650
like if you're one dimension you still

00:34:57,640 --> 00:35:13,270
going to create one part no yeah yeah I

00:35:11,650 --> 00:35:16,210
understand that but if you have

00:35:13,270 --> 00:35:18,670
dimension and you have one hierarchy are

00:35:16,210 --> 00:35:23,050
they like multiple ways to get different

00:35:18,670 --> 00:35:28,020
levels of hierarchies like different

00:35:23,050 --> 00:35:28,020
parts or whatever or dog it's uncertain

00:35:31,260 --> 00:35:41,100
okay so okay so the cubes that the

00:35:35,650 --> 00:35:41,100
behavior is undefined yeah for that

00:35:49,640 --> 00:35:57,590
what kind of model is that like what

00:35:51,960 --> 00:35:57,590
kind of segment Samuel

00:36:17,860 --> 00:36:23,110
yeah and concerning the back ends so

00:36:20,290 --> 00:36:26,190
there was a question of a mongodb I was

00:36:23,110 --> 00:36:38,800
thinking about creating a backhand for

00:36:26,190 --> 00:36:41,350
for pandas the folder yeah because they

00:36:38,800 --> 00:36:44,650
have tablets structure and the

00:36:41,350 --> 00:36:48,450
computation is pretty fast so it might

00:36:44,650 --> 00:36:57,150
be like interesting to have that as well

00:36:48,450 --> 00:37:19,120
like alternative to do to sequel and us

00:36:57,150 --> 00:37:31,450
pandas Honda yep this one oh not not

00:37:19,120 --> 00:37:35,370
necessarily I mean yeah I mean I mean

00:37:31,450 --> 00:37:35,370
the data frame structure of pandas I

00:37:35,550 --> 00:37:41,530
mean this is like the the most

00:37:38,880 --> 00:37:44,710
interesting part of it to poop to build

00:37:41,530 --> 00:37:53,320
all about know about that yet that might

00:37:44,710 --> 00:37:54,910
be interesting it's it was idea i was

00:37:53,320 --> 00:37:58,510
telling that this was not my idea it was

00:37:54,910 --> 00:38:04,480
the idea of our co and ira suggested to

00:37:58,510 --> 00:38:10,490
have some kind of small plugin or some

00:38:04,480 --> 00:38:12,630
kind of module well for ya

00:38:10,490 --> 00:38:14,970
but not all the information you will

00:38:12,630 --> 00:38:18,059
need so so you will need a little bit of

00:38:14,970 --> 00:38:21,480
metadata to add to that to be able to

00:38:18,059 --> 00:38:23,339
create automatically the the logical

00:38:21,480 --> 00:38:25,890
model from that and this kind of

00:38:23,339 --> 00:38:28,140
metadata would be like specifying this

00:38:25,890 --> 00:38:30,119
is going to be a measure this is like

00:38:28,140 --> 00:38:31,950
the first thing to specify the measure

00:38:30,119 --> 00:38:33,750
and I can consider everything else as

00:38:31,950 --> 00:38:36,780
dimension okay so this is like the

00:38:33,750 --> 00:38:38,970
simplest thing but like the better

00:38:36,780 --> 00:38:41,880
version would be to specify this is the

00:38:38,970 --> 00:38:44,250
measure this is not important this is

00:38:41,880 --> 00:38:46,380
dimension and this is relationship

00:38:44,250 --> 00:38:50,250
between dimensions so like this is child

00:38:46,380 --> 00:38:52,200
of this dimension so these four ways or

00:38:50,250 --> 00:38:56,520
four kinds of metadata you would specify

00:38:52,200 --> 00:38:58,650
for each each attribute and then you can

00:38:56,520 --> 00:39:03,030
easily generate the model from this

00:38:58,650 --> 00:39:07,670
thing to to the logical model that can

00:39:03,030 --> 00:39:07,670
be used to q's it with cubes and then

00:39:08,210 --> 00:39:14,069
like the idea is that we just fell a

00:39:11,430 --> 00:39:17,700
little effort you will be able to have

00:39:14,069 --> 00:39:20,040
this kind of reporting on top of Django

00:39:17,700 --> 00:39:22,829
application I'm not a jangle guy so I

00:39:20,040 --> 00:39:24,960
don't know the details how how it's

00:39:22,829 --> 00:39:31,440
being done arker says that it's it's a

00:39:24,960 --> 00:39:33,059
simple and I know oh I am and if I'm

00:39:31,440 --> 00:39:34,710
thinking that it shouldn't be that

00:39:33,059 --> 00:39:37,260
difficult to have it in orem if you have

00:39:34,710 --> 00:39:38,970
any no I'm that I don't know how it

00:39:37,260 --> 00:39:41,609
would be difficult to have it in jungle

00:39:38,970 --> 00:39:45,480
or a but in general I get a pattern of

00:39:41,609 --> 00:39:47,839
orem so and it will be pretty nice to

00:39:45,480 --> 00:39:55,410
have a django applications have

00:39:47,839 --> 00:39:58,920
reporting ready backhand so so it is

00:39:55,410 --> 00:40:03,180
just I idea for photo for the future for

00:39:58,920 --> 00:40:06,569
further because what most people are

00:40:03,180 --> 00:40:12,440
doing now trying to create reporting on

00:40:06,569 --> 00:40:12,440
top of existing existing database so

00:40:15,700 --> 00:40:22,760
yeah so on top of this and well you can

00:40:20,630 --> 00:40:25,850
do couple we both there but as you've

00:40:22,760 --> 00:40:27,680
seen if you have logical model it's much

00:40:25,850 --> 00:40:29,750
easier and also you have all those

00:40:27,680 --> 00:40:33,710
things like hierarchies and stuff like

00:40:29,750 --> 00:40:35,750
that and if you if you do some

00:40:33,710 --> 00:40:37,930
modification for example add a hierarchy

00:40:35,750 --> 00:40:40,940
then you do not need to change your

00:40:37,930 --> 00:40:44,210
reporting application because reporting

00:40:40,940 --> 00:40:48,950
applications considers metadata to build

00:40:44,210 --> 00:40:54,080
the reports then write this data change

00:40:48,950 --> 00:40:57,020
will notify by happily in this case you

00:40:54,080 --> 00:40:59,990
will have to now if you like if you had

00:40:57,020 --> 00:41:03,020
reporting on top of this but if you had

00:40:59,990 --> 00:41:06,380
a small small box that will that will

00:41:03,020 --> 00:41:07,910
change this model to this model and you

00:41:06,380 --> 00:41:09,800
will have reporting on top of that you

00:41:07,910 --> 00:41:11,240
will not have to if the application is

00:41:09,800 --> 00:41:14,180
written in a good way so for example

00:41:11,240 --> 00:41:16,330
this public become a portal if they

00:41:14,180 --> 00:41:18,830
added new dimension or they're a new

00:41:16,330 --> 00:41:23,090
levels to certain dimensions and we

00:41:18,830 --> 00:41:26,780
almost no work necessary well maybe just

00:41:23,090 --> 00:41:30,920
a little bit depends on occur on how the

00:41:26,780 --> 00:41:33,260
application is written but it's much

00:41:30,920 --> 00:41:36,410
easier to do that if the reporting was

00:41:33,260 --> 00:41:40,030
hard hard coded in application and this

00:41:36,410 --> 00:41:43,550
is this is basically the idea of of

00:41:40,030 --> 00:41:45,860
analytical modeling to create an

00:41:43,550 --> 00:41:48,790
abstraction of on top of physical

00:41:45,860 --> 00:41:48,790
implementation of the data

00:42:03,400 --> 00:42:08,250
okay mom more questions

00:42:26,760 --> 00:42:33,910
okay i'm actually in the in the morning

00:42:30,870 --> 00:42:36,970
so in the future I would like to have at

00:42:33,910 --> 00:42:39,550
least these things there so first thing

00:42:36,970 --> 00:42:42,960
is are something that will generate

00:42:39,550 --> 00:42:46,950
structures should be usable by

00:42:42,960 --> 00:42:51,010
visualization libraries so you have a

00:42:46,950 --> 00:42:54,310
you have a Google charts and they have

00:42:51,010 --> 00:42:56,830
this structure of data table which is

00:42:54,310 --> 00:43:01,390
really simple really nice so generate

00:42:56,830 --> 00:43:03,640
like instead of this cubes Jason we will

00:43:01,390 --> 00:43:06,460
get like I was showing the CSV format

00:43:03,640 --> 00:43:09,970
also said I you will do the aggregation

00:43:06,460 --> 00:43:12,190
and will say format is Google charts and

00:43:09,970 --> 00:43:15,730
you will get the chase on which will be

00:43:12,190 --> 00:43:17,520
in the data table by Google

00:43:15,730 --> 00:43:21,490
specification you will just pass it to

00:43:17,520 --> 00:43:25,150
Google charting library and you will

00:43:21,490 --> 00:43:26,980
draw the charts so this is like the idea

00:43:25,150 --> 00:43:28,630
to have these kind of four meters or you

00:43:26,980 --> 00:43:31,510
will have some libraries which will

00:43:28,630 --> 00:43:34,060
display tables and you will format for

00:43:31,510 --> 00:43:37,510
the tables for four bubbles yeah bubbles

00:43:34,060 --> 00:43:40,840
are like cool now so bubble charts and

00:43:37,510 --> 00:43:44,050
like this the second thing is is

00:43:40,840 --> 00:43:46,570
JavaScript library I'm not a Java guy

00:43:44,050 --> 00:43:50,640
but I already tried to start the cubes

00:43:46,570 --> 00:43:56,070
chair so if anyone knows java script

00:43:50,640 --> 00:44:00,250
please look at it the idea is to have

00:43:56,070 --> 00:44:02,380
reporting anyway do you have JavaScript

00:44:00,250 --> 00:44:06,850
just just a HTML javascript application

00:44:02,380 --> 00:44:09,070
and you will connect by URL to a slice

00:44:06,850 --> 00:44:12,130
the server and you would be able to do

00:44:09,070 --> 00:44:15,130
the reporting simple predefined reports

00:44:12,130 --> 00:44:17,350
or just really simple like selection of

00:44:15,130 --> 00:44:19,150
the dimensions and I would like to see

00:44:17,350 --> 00:44:21,880
your visibility browser I was showing

00:44:19,150 --> 00:44:24,310
the simple dimensional browser this can

00:44:21,880 --> 00:44:26,680
be really easily done in a in a

00:44:24,310 --> 00:44:27,420
javascript and HTML if there was like

00:44:26,680 --> 00:44:33,530
four

00:44:27,420 --> 00:44:38,069
working javascript library and also the

00:44:33,530 --> 00:44:40,170
also the advantage of having these four

00:44:38,069 --> 00:44:44,819
matters and JavaScript library would be

00:44:40,170 --> 00:44:46,890
to have them small pieces like like if

00:44:44,819 --> 00:44:49,500
you are going to display a chart on your

00:44:46,890 --> 00:44:52,559
website then user would be able to click

00:44:49,500 --> 00:44:54,390
on the chart and see what measures are

00:44:52,559 --> 00:44:57,119
involved and we like to like play with

00:44:54,390 --> 00:44:59,700
it as well this can be also easily done

00:44:57,119 --> 00:45:02,010
it if it was from this like combination

00:44:59,700 --> 00:45:06,089
of all kind of modules or views from

00:45:02,010 --> 00:45:11,490
from from days and this yeah at the back

00:45:06,089 --> 00:45:13,740
hands so back ends for various kinds of

00:45:11,490 --> 00:45:15,180
databases depending on where people are

00:45:13,740 --> 00:45:16,920
storing the data I would like to do

00:45:15,180 --> 00:45:18,869
recreations it doesn't have to be

00:45:16,920 --> 00:45:22,410
backing on top of database it can be

00:45:18,869 --> 00:45:24,390
backing on top of some certain API so

00:45:22,410 --> 00:45:26,490
you have some service which can do

00:45:24,390 --> 00:45:28,829
aggregations through HTTP you can have a

00:45:26,490 --> 00:45:30,780
background on top of that to be able and

00:45:28,829 --> 00:45:32,819
you are mapping your logical model you

00:45:30,780 --> 00:45:36,390
will have the mapping node mapping two

00:45:32,819 --> 00:45:39,930
tables but mapping to something in this

00:45:36,390 --> 00:45:42,210
API to a service so as I was saying

00:45:39,930 --> 00:45:45,960
before the mapping is back in specific

00:45:42,210 --> 00:45:47,970
so it's not like about tables yeah and

00:45:45,960 --> 00:45:50,640
this is really useful to have the right

00:45:47,970 --> 00:45:54,809
measures like the percentage of

00:45:50,640 --> 00:45:58,260
something this is not a bit looks simple

00:45:54,809 --> 00:46:01,380
but it's not that easy to to implement

00:45:58,260 --> 00:46:04,349
in a way that it will be right nicely

00:46:01,380 --> 00:46:11,400
usable as you will be able to specify it

00:46:04,349 --> 00:46:18,329
nicely yeah for example yeah yeah yep

00:46:11,400 --> 00:46:21,569
and another part of the future are I was

00:46:18,329 --> 00:46:24,390
working for quite a while in the open

00:46:21,569 --> 00:46:26,880
data world and it would be nice if there

00:46:24,390 --> 00:46:30,359
was some kind of shared repository of

00:46:26,880 --> 00:46:33,630
models so people can share the models so

00:46:30,359 --> 00:46:35,579
you have like millions instances of one

00:46:33,630 --> 00:46:37,300
kind of application 1cm implication for

00:46:35,579 --> 00:46:39,970
example right so why not

00:46:37,300 --> 00:46:41,920
to share the model you are using and i

00:46:39,970 --> 00:46:43,600
can i can create reporting based on your

00:46:41,920 --> 00:46:46,420
model because you already have it and

00:46:43,600 --> 00:46:48,610
it's open source and people can easily

00:46:46,420 --> 00:46:50,170
instead of writing their own model they

00:46:48,610 --> 00:46:54,640
can use the model someone already wrote

00:46:50,170 --> 00:46:59,470
for the application and yeah shared

00:46:54,640 --> 00:47:01,930
repository dimensions why not why not to

00:46:59,470 --> 00:47:04,300
share already prepared dimensions like

00:47:01,930 --> 00:47:07,450
okay you have lots of tables like like

00:47:04,300 --> 00:47:11,230
countries or or like that or you would

00:47:07,450 --> 00:47:15,280
have the dimension like the dates table

00:47:11,230 --> 00:47:17,320
dimension we with holidays or whatnot

00:47:15,280 --> 00:47:21,330
inside and I can just get the dimension

00:47:17,320 --> 00:47:24,580
I put into my my system and use it and

00:47:21,330 --> 00:47:26,860
yeah and put public cubes so if I am

00:47:24,580 --> 00:47:29,950
creating this application so for example

00:47:26,860 --> 00:47:33,700
to the public document portal I have an

00:47:29,950 --> 00:47:36,070
API which is the API for folder slicer

00:47:33,700 --> 00:47:38,860
and if I had a reporting application i

00:47:36,070 --> 00:47:41,320
will just put the URL into into this

00:47:38,860 --> 00:47:44,920
reporting application and i can create

00:47:41,320 --> 00:47:49,900
report any I any reporter i would like

00:47:44,920 --> 00:47:52,480
to prepare based on this r.i.p I URL and

00:47:49,900 --> 00:47:55,240
I will be not limited by the reports

00:47:52,480 --> 00:47:59,470
which are provided by the site so this

00:47:55,240 --> 00:48:02,650
is like the ID added to have public

00:47:59,470 --> 00:48:04,360
keeps public API of those sites which

00:48:02,650 --> 00:48:06,490
can be public well of course I cannot

00:48:04,360 --> 00:48:09,610
expect a private data to be public but

00:48:06,490 --> 00:48:12,190
if someone can publish it or if any side

00:48:09,610 --> 00:48:15,100
is publishing any kind of reporting

00:48:12,190 --> 00:48:17,040
charts why not to publish the API so i

00:48:15,100 --> 00:48:19,450
can create charts i'm interested in i

00:48:17,040 --> 00:48:22,450
might be interested to something a

00:48:19,450 --> 00:48:25,270
little bit a little bit different well

00:48:22,450 --> 00:48:29,710
there is a there is a cited a small wiki

00:48:25,270 --> 00:48:31,420
page on the owner cubes github where I

00:48:29,710 --> 00:48:32,740
would like to start collect all those

00:48:31,420 --> 00:48:35,110
open there and they're not so many

00:48:32,740 --> 00:48:37,840
because as I mentioned this is this is a

00:48:35,110 --> 00:48:42,120
new project and and the public cubes are

00:48:37,840 --> 00:48:44,710
only only only two applications and

00:48:42,120 --> 00:48:48,540
while private cubes are not going to be

00:48:44,710 --> 00:48:52,540
there but so people can can browse other

00:48:48,540 --> 00:48:55,750
yeah and even I would like to have all

00:48:52,540 --> 00:48:59,410
those features I still would like to

00:48:55,750 --> 00:49:04,050
keep it light weight so just just to do

00:48:59,410 --> 00:49:08,290
one small thing and do it do it in a

00:49:04,050 --> 00:49:10,740
good way and not to waste time on like

00:49:08,290 --> 00:49:13,960
for example etl data preparation and

00:49:10,740 --> 00:49:19,210
other things so and keep it simple so

00:49:13,960 --> 00:49:21,430
people would have access access to all

00:49:19,210 --> 00:49:24,130
up reporting application without like a

00:49:21,430 --> 00:49:27,579
huge knowledge of all the things around

00:49:24,130 --> 00:49:29,650
that so someone if someone would like to

00:49:27,579 --> 00:49:32,800
have like real all up that plenty of

00:49:29,650 --> 00:49:41,550
tools to to to take yeah commercial or

00:49:32,800 --> 00:49:55,319
non-commercial any but i think that's

00:49:41,550 --> 00:49:55,319
that's basically it so yeah yeah

00:49:57,210 --> 00:50:10,720
there's a couple of people who are

00:50:00,070 --> 00:50:13,869
sending patches and yeah no no no it's

00:50:10,720 --> 00:50:16,570
it's part of the hobby and part for ever

00:50:13,869 --> 00:50:22,030
if a client wants some kind of reporting

00:50:16,570 --> 00:50:27,700
so then I'm going to use that simple

00:50:22,030 --> 00:50:37,450
reporting on top of that yeah I'm

00:50:27,700 --> 00:50:43,180
freelancer data data yeah yeah oh it's

00:50:37,450 --> 00:50:44,890
not meant to be for telcos but as I said

00:50:43,180 --> 00:50:55,119
for simple application it's it's good

00:50:44,890 --> 00:50:58,420
enough yeah yeah it's a pure pizen good

00:50:55,119 --> 00:51:01,359
president and all generated sequel

00:50:58,420 --> 00:51:03,580
thanks for sequel alchemy and the sequel

00:51:01,359 --> 00:51:07,720
alchemy is really really great great

00:51:03,580 --> 00:51:09,640
framework and all those things were i

00:51:07,720 --> 00:51:12,750
was able to create that thanks to the

00:51:09,640 --> 00:51:21,640
sequel alchemy how we can construct

00:51:12,750 --> 00:51:27,150
construct the Curie's and okay i think

00:51:21,640 --> 00:51:27,150
that that's it so thank you

00:51:29,299 --> 00:51:38,900
thanks thanks

00:51:59,290 --> 00:52:01,380

YouTube URL: https://www.youtube.com/watch?v=8sZaE2zWbUo


