Title: vincent warmerdam - The Joy of Simulation: for Fun and Profit
Publication date: 2016-07-29
Playlist: EuroPython 2016
Description: 
	vincent warmerdam - The Joy of Simulation: for Fun and Profit
[EuroPython 2016]
[19 July 2016]
[Bilbao, Euskadi, Spain]
(https://ep2016.europython.eu//conference/talks/the-joy-of-simulation-for-fun-and-profit)

In this talk discusses some joyful exercises in simulation. I'll
demonstrate it's usefulness but moreover I'll discuss the sheer joy.
I'll discuss how to generate song lyrics, I'll discuss how to get
better at casino games, how to avoid math, how to play monopoly or
even how to invest in lego minifigures. No maths required; just a
random number generator.

-----

In this talk discusses some joyful exercises in simulation. I'll
demonstrate it's usefulness but moreover I'll discuss the sheer joy
you can experience.

I'll go over the following points (the short list):

- I'll show how you can avoid math by simulating; I'll calculate the
probability that two people in the live room have the same birthday.
- I'll show how simulation can help you get better at many games. I'll
start with simple card games and with the game of roulette. Most
prominently I'll discuss how to determine the value of buying an asset
in the game of monopoly (See blogpost: http://koaning.io/monopoly-
simulations.html).
- I'll demonstrate how you can simulate Red Hot Chilli Pepper lyrics.
Or any other band. Or legalese.
- I'll demonstrate the results of a scraping exercise which helped me
to determine the value of investing in Lego Minifigures (See blogpost:
http://koaning.io/lego-minifigs-stochastics-profit.html).

Depending on the level of the audience I might also discuss how biased
simulation can help you solve optimisation problems or even introduce
bayesian statistics via sampling. I'll gladly leave this decision to
the EuroPython committee.
Captions: 
	00:00:00,539 --> 00:00:11,250
by Vincente Vladimir Dom so hi everyone

00:00:09,870 --> 00:00:13,139
thanks for having me over

00:00:11,250 --> 00:00:15,570
a boy knows the s me gusta esta and

00:00:13,139 --> 00:00:18,750
Bilbao I'm gonna talk to you guys today

00:00:15,570 --> 00:00:20,640
about the joy of simulation my name is

00:00:18,750 --> 00:00:22,500
Vincent I'm from Amsterdam and what

00:00:20,640 --> 00:00:23,939
we're gonna do in the beginning I need

00:00:22,500 --> 00:00:26,369
you guys to get out your laptops and go

00:00:23,939 --> 00:00:28,289
to this one website while you're doing

00:00:26,369 --> 00:00:30,990
that what we're gonna discuss today is

00:00:28,289 --> 00:00:32,910
what Brandis is and what it isn't then

00:00:30,990 --> 00:00:34,770
I'm gonna explain you guys how sampling

00:00:32,910 --> 00:00:36,750
can actually be used to you know do a

00:00:34,770 --> 00:00:38,579
bit of inference which is nice I will

00:00:36,750 --> 00:00:39,840
then demonstrate a couple of experiments

00:00:38,579 --> 00:00:41,790
that I've done with sampling so I'm

00:00:39,840 --> 00:00:43,230
gonna explain to you how I derived some

00:00:41,790 --> 00:00:45,239
better tactics for monopoly using

00:00:43,230 --> 00:00:47,219
simulation I will explain to you how I

00:00:45,239 --> 00:00:49,469
found out that you can sell Legos on

00:00:47,219 --> 00:00:51,750
LEGO Minifigures an eBay for a bit of

00:00:49,469 --> 00:00:53,129
profit I'm gonna then talk about how

00:00:51,750 --> 00:00:55,620
sampling can be used as an optimization

00:00:53,129 --> 00:00:57,180
tactic and I'll conclude by talking

00:00:55,620 --> 00:00:59,100
about how we can outsource creativity a

00:00:57,180 --> 00:01:02,039
bit by using sampling and then I'll talk

00:00:59,100 --> 00:01:05,070
about some Pokemon related subject which

00:01:02,039 --> 00:01:07,049
somehow blends everything together so

00:01:05,070 --> 00:01:08,310
randomness before talking about what

00:01:07,049 --> 00:01:10,590
randomness is because we're gonna be

00:01:08,310 --> 00:01:13,110
sampling we should be sure that we

00:01:10,590 --> 00:01:14,909
understand what Ram this isn't because

00:01:13,110 --> 00:01:16,259
you know we're humans and computers

00:01:14,909 --> 00:01:17,729
nowadays tend to be a little bit better

00:01:16,259 --> 00:01:20,640
at understanding randomness than we are

00:01:17,729 --> 00:01:21,750
so if you could all please go to the

00:01:20,640 --> 00:01:23,970
website that I've just told you about

00:01:21,750 --> 00:01:28,140
and we're gonna go ahead and do a bit of

00:01:23,970 --> 00:01:30,299
an inverse Turing test so this would be

00:01:28,140 --> 00:01:32,610
the website this would be my blog and

00:01:30,299 --> 00:01:35,520
then there's this one blog post called

00:01:32,610 --> 00:01:37,650
human entropy please go there right now

00:01:35,520 --> 00:01:40,560
and you should see a website that's

00:01:37,650 --> 00:01:42,810
somewhat similar to this and you could

00:01:40,560 --> 00:01:44,720
read it but the idea is we're gonna go

00:01:42,810 --> 00:01:47,340
ahead and try to generate random numbers

00:01:44,720 --> 00:01:49,020
so put your index finger on the one put

00:01:47,340 --> 00:01:52,259
your other index finger on the zero or

00:01:49,020 --> 00:01:54,000
use these two buttons you will notice

00:01:52,259 --> 00:01:55,920
that if you click the number will

00:01:54,000 --> 00:01:58,110
increase and let's just go ahead and do

00:01:55,920 --> 00:02:00,030
this just generate a bunch of random

00:01:58,110 --> 00:02:02,159
numbers and try to generate them as

00:02:00,030 --> 00:02:04,790
randomly as you can but let's generate

00:02:02,159 --> 00:02:04,790
about 100 of them

00:02:06,740 --> 00:02:11,190
I'm gonna go ahead and generate just a

00:02:08,880 --> 00:02:12,180
few more and I'll give you guys a couple

00:02:11,190 --> 00:02:14,660
more seconds so you can do the

00:02:12,180 --> 00:02:14,660
experiment yourself

00:02:20,410 --> 00:02:30,010
so I've almost got about 200 numbers you

00:02:24,490 --> 00:02:31,330
can see the JavaScript slowing down so

00:02:30,010 --> 00:02:34,060
I've just generated a bunch of numbers I

00:02:31,330 --> 00:02:36,310
as a human said okay let's 0 0 1 1 1 0 0

00:02:34,060 --> 00:02:39,100
0 1 1 1 0 and let's see what I've done

00:02:36,310 --> 00:02:41,260
done if I scroll down what I will then

00:02:39,100 --> 00:02:43,360
see is I will see all these histograms

00:02:41,260 --> 00:02:45,910
of how often I picked a 1 and how often

00:02:43,360 --> 00:02:49,750
I picked a 0 but also how often I picked

00:02:45,910 --> 00:02:53,170
a 0 after a 0 and a 0 after 1 etcetera

00:02:49,750 --> 00:02:54,460
etc etc and what you know this is even

00:02:53,170 --> 00:02:56,050
though I'm trying to be quite kind of

00:02:54,460 --> 00:02:58,570
random I'm trying to make as many ones

00:02:56,050 --> 00:02:59,980
as I am trying to make as many zeros you

00:02:58,570 --> 00:03:01,750
will notice that I usually fall into

00:02:59,980 --> 00:03:04,240
this pattern where I do a 1 after a 0

00:03:01,750 --> 00:03:05,500
and a 0 after 1 and it's very normal as

00:03:04,240 --> 00:03:07,900
a human being because it feels random

00:03:05,500 --> 00:03:09,580
even though it totally isn't and this

00:03:07,900 --> 00:03:11,110
small web app you know you can read up

00:03:09,580 --> 00:03:12,610
the map if you want it tries to do a

00:03:11,110 --> 00:03:14,620
real-time prediction of what you're

00:03:12,610 --> 00:03:16,690
going to type in next and you can also

00:03:14,620 --> 00:03:19,900
track how often how good the accuracy is

00:03:16,690 --> 00:03:28,510
so if we just reload the page this will

00:03:19,900 --> 00:03:29,590
be more for real-time thing so and then

00:03:28,510 --> 00:03:31,810
you at the bottom you can see the

00:03:29,590 --> 00:03:35,320
probability of me being a human is me

00:03:31,810 --> 00:03:37,600
being a robot is quite low so you know I

00:03:35,320 --> 00:03:39,610
like this idea of human inference

00:03:37,600 --> 00:03:41,470
because in a way this is an inverse

00:03:39,610 --> 00:03:43,120
Turing test by checking if you can

00:03:41,470 --> 00:03:44,020
actually generate random numbers I am

00:03:43,120 --> 00:03:48,010
actually able to say that you are

00:03:44,020 --> 00:03:51,040
definitely not a computer anyway so this

00:03:48,010 --> 00:03:52,330
is a way I hopefully real quickly

00:03:51,040 --> 00:03:54,610
explain to you guys how random this

00:03:52,330 --> 00:03:56,260
works and how it doesn't work it is

00:03:54,610 --> 00:03:57,670
useful to have some form of randomness

00:03:56,260 --> 00:03:59,470
available to you but you as a human

00:03:57,670 --> 00:04:01,240
simply are not good at generating it

00:03:59,470 --> 00:04:07,150
therefore we're gonna use the computer

00:04:01,240 --> 00:04:09,880
instead sort of cool thing with it I'm

00:04:07,150 --> 00:04:11,860
just gonna do 0 0 1 just repeatedly one

00:04:09,880 --> 00:04:15,459
after the other and you see that there's

00:04:11,860 --> 00:04:16,930
this estimated or tries to predict what

00:04:15,459 --> 00:04:18,400
I'm going to generate next and you'll

00:04:16,930 --> 00:04:21,670
see that at some point the probability

00:04:18,400 --> 00:04:23,620
of me getting a predicting 1 is you know

00:04:21,670 --> 00:04:26,050
first it's the 1 then it's a 0 and

00:04:23,620 --> 00:04:27,880
probably switch but if I now switch my

00:04:26,050 --> 00:04:30,010
algorithm so I'm only going generate

00:04:27,880 --> 00:04:32,290
zeros now you will notice that there's a

00:04:30,010 --> 00:04:33,770
bit of confusion but after a while it

00:04:32,290 --> 00:04:35,479
has picked up my new pattern and

00:04:33,770 --> 00:04:38,000
accuracy goes up again and if I do only

00:04:35,479 --> 00:04:41,870
once now you'll do to see the same

00:04:38,000 --> 00:04:43,639
pattern as well the cool thing about

00:04:41,870 --> 00:04:45,139
this is because I have these laws of

00:04:43,639 --> 00:04:46,250
probabilities in my disposal I can use a

00:04:45,139 --> 00:04:47,659
little bit of math to do all these

00:04:46,250 --> 00:04:53,539
predictions but it's still useful to

00:04:47,659 --> 00:04:55,009
have random samples so after this small

00:04:53,539 --> 00:04:56,720
demonstration hopefully it's obvious

00:04:55,009 --> 00:04:58,699
that human entropy generally is quite

00:04:56,720 --> 00:04:59,810
terrible this is why we prefer to use a

00:04:58,699 --> 00:05:02,030
computer to help us think about

00:04:59,810 --> 00:05:03,289
probability and because we have this

00:05:02,030 --> 00:05:05,629
computer available to us and because we

00:05:03,289 --> 00:05:08,180
can sample quite fast we can kind of

00:05:05,629 --> 00:05:11,599
avoid doing a little bit of math because

00:05:08,180 --> 00:05:13,069
you know math is hard and even though it

00:05:11,599 --> 00:05:15,050
is very useful we do like to just get

00:05:13,069 --> 00:05:16,699
the job done so the goal of this talk is

00:05:15,050 --> 00:05:19,130
to convince you that you can do a lot of

00:05:16,699 --> 00:05:23,509
these tasks just by getting samples

00:05:19,130 --> 00:05:25,069
instead and I guess the easiest way to

00:05:23,509 --> 00:05:26,419
explain sort of from a modeling

00:05:25,069 --> 00:05:28,550
perspective why samples are useful

00:05:26,419 --> 00:05:29,840
sometimes we can show we know the

00:05:28,550 --> 00:05:31,130
characteristics of a system but we'd

00:05:29,840 --> 00:05:33,530
like to know the likelihood of a certain

00:05:31,130 --> 00:05:35,419
event happening and again might be

00:05:33,530 --> 00:05:37,310
easier to use sampling instead of Maps

00:05:35,419 --> 00:05:38,479
to do the inference for us and the

00:05:37,310 --> 00:05:40,669
simplest example I could come up with

00:05:38,479 --> 00:05:43,940
suppose you have a lot of dice you roll

00:05:40,669 --> 00:05:45,469
the dice and then there's a probability

00:05:43,940 --> 00:05:47,539
that a certain number of eyes pop out

00:05:45,469 --> 00:05:49,340
and I could calculate that I mean you

00:05:47,539 --> 00:05:50,509
know there's laws of probability instead

00:05:49,340 --> 00:05:54,949
what I could also just go ahead and do

00:05:50,509 --> 00:05:57,080
is I can draw like draw histograms this

00:05:54,949 --> 00:05:59,240
is the histogram for if I if one die is

00:05:57,080 --> 00:06:01,490
the histogram 305 two dice this is for a

00:05:59,240 --> 00:06:03,110
pike three dice etc and I also get this

00:06:01,490 --> 00:06:04,880
nice probability distribution out that I

00:06:03,110 --> 00:06:07,250
didn't have to do any math for I could

00:06:04,880 --> 00:06:09,169
just sample it and the nice thing about

00:06:07,250 --> 00:06:09,770
this is I can ask this thing two

00:06:09,169 --> 00:06:11,990
questions

00:06:09,770 --> 00:06:13,639
suppose that I roll four dice what is

00:06:11,990 --> 00:06:16,699
the probability of getting a certain

00:06:13,639 --> 00:06:18,680
number of eyes the sum I can also ask it

00:06:16,699 --> 00:06:21,380
a different question I can also ask hey

00:06:18,680 --> 00:06:23,770
given this number of eyes how likely is

00:06:21,380 --> 00:06:26,360
it that I have been rolling eight dice I

00:06:23,770 --> 00:06:28,159
know the rules of the system I can

00:06:26,360 --> 00:06:29,599
describe them and from there on I can

00:06:28,159 --> 00:06:31,099
sample it and that means that I don't

00:06:29,599 --> 00:06:33,680
have to do math but I can still do

00:06:31,099 --> 00:06:34,969
inference on these things so it's sort

00:06:33,680 --> 00:06:36,500
of can I look at it from this direction

00:06:34,969 --> 00:06:38,870
but I can also look at it from this

00:06:36,500 --> 00:06:40,460
direction this is a powerful thing and

00:06:38,870 --> 00:06:42,770
this is something of Asians tend to like

00:06:40,460 --> 00:06:44,930
a lot if you're interested in this kind

00:06:42,770 --> 00:06:46,820
of sampling by the way please consider

00:06:44,930 --> 00:06:47,569
looking at this library called PI MC 3

00:06:46,820 --> 00:06:50,149
or this other

00:06:47,569 --> 00:06:51,710
very cold emc these sampling methods for

00:06:50,149 --> 00:06:53,509
inference are very powerful it's a

00:06:51,710 --> 00:06:54,889
little bit too theoretical for this talk

00:06:53,509 --> 00:06:57,050
but if you're interested there's a very

00:06:54,889 --> 00:06:58,459
nice tutorial on my blog which explains

00:06:57,050 --> 00:07:00,589
how you can do some sort of time series

00:06:58,459 --> 00:07:01,999
analysis with these sampling tactics as

00:07:00,589 --> 00:07:03,379
well cuz here I'm just doing inference

00:07:01,999 --> 00:07:07,009
on dice but you can do imprint some time

00:07:03,379 --> 00:07:08,899
series as well anyway let's consider a

00:07:07,009 --> 00:07:10,849
fun example of how actually got better

00:07:08,899 --> 00:07:11,990
at doing something because I had this

00:07:10,849 --> 00:07:16,909
computer available and I could do a bit

00:07:11,990 --> 00:07:18,439
of sampling do we know this game yes do

00:07:16,909 --> 00:07:21,680
we also always play this game during

00:07:18,439 --> 00:07:22,999
Christmas for you guys are from my dad

00:07:21,680 --> 00:07:24,830
always makes me play this game during

00:07:22,999 --> 00:07:26,270
Christmas and I absolutely despise the

00:07:24,830 --> 00:07:26,839
game I don't see any joy in it

00:07:26,270 --> 00:07:28,430
whatsoever

00:07:26,839 --> 00:07:30,740
so I figured you know how about it might

00:07:28,430 --> 00:07:33,169
be fun if I don't enjoy playing the game

00:07:30,740 --> 00:07:35,330
I could at least enjoy beating my dad at

00:07:33,169 --> 00:07:37,159
it so the idea would be can I use

00:07:35,330 --> 00:07:37,789
sampling a little bit to get better at

00:07:37,159 --> 00:07:40,189
this game

00:07:37,789 --> 00:07:42,529
because if I think about it every tile

00:07:40,189 --> 00:07:44,419
on this board is worth something and I

00:07:42,529 --> 00:07:45,800
can calculate the expected value if only

00:07:44,419 --> 00:07:49,369
I knew what the probability was it would

00:07:45,800 --> 00:07:51,289
actually land on such a tile okay so

00:07:49,369 --> 00:07:52,369
math wise this would be a little bit

00:07:51,289 --> 00:07:54,289
hard because you have to do a lot of

00:07:52,369 --> 00:07:56,330
formulas what I can also just do is I

00:07:54,289 --> 00:07:58,159
can say okay let's just for ten thousand

00:07:56,330 --> 00:07:59,479
times I know the rules of the system I

00:07:58,159 --> 00:08:00,979
know the rules of the game I can get

00:07:59,479 --> 00:08:02,599
that from the web let's just have

00:08:00,979 --> 00:08:04,249
everyone start here and just start

00:08:02,599 --> 00:08:05,509
rolling dice and use the rules of the

00:08:04,249 --> 00:08:07,669
game just check what the long term

00:08:05,509 --> 00:08:09,469
probability is that you'll learn land on

00:08:07,669 --> 00:08:10,909
a certain tile there's a very

00:08:09,469 --> 00:08:12,559
interesting characteristic of this game

00:08:10,909 --> 00:08:14,449
because the likelihood of being around

00:08:12,559 --> 00:08:15,559
this corner of the board is quite high

00:08:14,449 --> 00:08:18,379
because you have this go to jail

00:08:15,559 --> 00:08:20,419
mechanic so I did this in a simple way I

00:08:18,379 --> 00:08:22,009
didn't include any of the cards but I

00:08:20,419 --> 00:08:24,469
did end up with a histogram that looks

00:08:22,009 --> 00:08:27,619
like this so at the x-axis you'll see

00:08:24,469 --> 00:08:29,089
the ayah sort of the number of the tiles

00:08:27,619 --> 00:08:32,389
is it be tile number zero this would be

00:08:29,089 --> 00:08:33,589
time number thirty-nine and here you can

00:08:32,389 --> 00:08:35,089
see the likelihood of you landing

00:08:33,589 --> 00:08:39,409
somewhere and you'll notice this obvious

00:08:35,089 --> 00:08:41,000
spike which coincides to be jail here by

00:08:39,409 --> 00:08:43,789
the way but the most interesting thing

00:08:41,000 --> 00:08:45,380
that you'll notice is after jail that

00:08:43,789 --> 00:08:48,649
seems to be a slightly higher likelihood

00:08:45,380 --> 00:08:51,740
to be at two steps away from jail four

00:08:48,649 --> 00:08:53,720
steps away from jail six eight ten and

00:08:51,740 --> 00:08:54,920
twelve steps away from jail and the

00:08:53,720 --> 00:08:56,540
reason for that is because it's so

00:08:54,920 --> 00:08:57,800
likely that you get into jail if you

00:08:56,540 --> 00:09:00,110
want to get out of jail you have to roll

00:08:57,800 --> 00:09:01,290
the same dice twice which is why it's

00:09:00,110 --> 00:09:03,420
more likely that you'll land in one

00:09:01,290 --> 00:09:05,279
these areas and if you know that

00:09:03,420 --> 00:09:07,709
beforehand you can change your tactic a

00:09:05,279 --> 00:09:08,970
little bit for example and I know

00:09:07,709 --> 00:09:10,829
there's a lot of randomness in the game

00:09:08,970 --> 00:09:13,019
but if I were to choose a station on

00:09:10,829 --> 00:09:14,880
this board it becomes it seems more

00:09:13,019 --> 00:09:16,170
relevant that I would take this station

00:09:14,880 --> 00:09:18,949
and that station if I were given the

00:09:16,170 --> 00:09:20,610
choice and now I can calculate how much

00:09:18,949 --> 00:09:24,360
likelihood is that you actually land

00:09:20,610 --> 00:09:25,560
there reading would be the first station

00:09:24,360 --> 00:09:26,639
this would be the second one this would

00:09:25,560 --> 00:09:28,860
be the third one this would be the

00:09:26,639 --> 00:09:31,470
fourth one and you can see that there's

00:09:28,860 --> 00:09:34,620
actually it's not you know twice as

00:09:31,470 --> 00:09:38,100
likely but there's a bit of bias there

00:09:34,620 --> 00:09:39,630
but you can potentially use and again

00:09:38,100 --> 00:09:41,250
this is something I did for the stations

00:09:39,630 --> 00:09:43,259
each station generates the same amount

00:09:41,250 --> 00:09:44,459
of revenue but you can scrape monopoly

00:09:43,259 --> 00:09:45,920
comm or something like that and you can

00:09:44,459 --> 00:09:48,209
actually get the amount of money out

00:09:45,920 --> 00:09:51,120
that you can get if you land on one of

00:09:48,209 --> 00:09:52,889
these places and this is a nice table

00:09:51,120 --> 00:09:54,029
which is sort of cool but then the

00:09:52,889 --> 00:09:56,430
obvious thing to do is just go ahead and

00:09:54,029 --> 00:09:59,490
plot this so for every tile that you can

00:09:56,430 --> 00:10:01,230
buy you'll see a point listed here this

00:09:59,490 --> 00:10:03,089
is the probability that you will land on

00:10:01,230 --> 00:10:04,589
set tile and this is the rent that you

00:10:03,089 --> 00:10:08,040
can charge if someone lands on the tile

00:10:04,589 --> 00:10:10,110
itself the size of the point would be

00:10:08,040 --> 00:10:12,209
the expected value so the point is very

00:10:10,110 --> 00:10:14,850
big that means on average after every

00:10:12,209 --> 00:10:16,290
game the tile will generate more revenue

00:10:14,850 --> 00:10:18,029
from you and the thing that you

00:10:16,290 --> 00:10:19,829
immediately notice is there seems to be

00:10:18,029 --> 00:10:22,440
sort of an efficient ISO curve but

00:10:19,829 --> 00:10:24,389
everything on this imaginary line seems

00:10:22,440 --> 00:10:26,430
to be worthwhile well down here at the

00:10:24,389 --> 00:10:28,860
bottom there's a couple of you know not

00:10:26,430 --> 00:10:32,100
really performing at all spots that you

00:10:28,860 --> 00:10:36,209
can buy can anyone guess which spots

00:10:32,100 --> 00:10:41,370
those are it's probably not these it's

00:10:36,209 --> 00:10:43,319
probably not these it would be and the

00:10:41,370 --> 00:10:45,420
two big dots are those would be these

00:10:43,319 --> 00:10:46,769
two the odds of you landing they are

00:10:45,420 --> 00:10:49,439
quite small but if you actually land

00:10:46,769 --> 00:10:51,240
there boy are you in trouble it's sort

00:10:49,439 --> 00:10:52,829
of the risk biased kind of thing it's

00:10:51,240 --> 00:10:54,449
very risky but you prep there's a lower

00:10:52,829 --> 00:10:55,829
probability of landing here simply

00:10:54,449 --> 00:10:59,639
because it's a go to geol thing that

00:10:55,829 --> 00:11:01,290
happens before and you know I'm not

00:10:59,639 --> 00:11:03,060
wrong about the point but you see this

00:11:01,290 --> 00:11:04,079
pattern also if you bought a house there

00:11:03,060 --> 00:11:07,949
if you bought a second house there

00:11:04,079 --> 00:11:09,750
etcetera etcetera etcetera so I'm not

00:11:07,949 --> 00:11:12,870
saying that I actually got much better

00:11:09,750 --> 00:11:14,160
at playing this game but I did

00:11:12,870 --> 00:11:14,730
understand the game a whole lot better

00:11:14,160 --> 00:11:17,240
and I

00:11:14,730 --> 00:11:19,649
it didn't really measure how often I won

00:11:17,240 --> 00:11:20,550
but I like the fact that just by using a

00:11:19,649 --> 00:11:22,410
little bit of sampling I actually

00:11:20,550 --> 00:11:24,180
understand the game a whole lot better I

00:11:22,410 --> 00:11:26,279
know the mechanics of the system but

00:11:24,180 --> 00:11:28,199
then I can you know collect data by

00:11:26,279 --> 00:11:30,540
sampling and then suddenly I understand

00:11:28,199 --> 00:11:32,220
the game a whole lot better it turns out

00:11:30,540 --> 00:11:33,600
this this is also on the blog if you're

00:11:32,220 --> 00:11:34,949
interested and this blog post is

00:11:33,600 --> 00:11:36,360
training on hacker news for a while and

00:11:34,949 --> 00:11:37,949
the kind people on the Internet then

00:11:36,360 --> 00:11:40,769
point out to all the weaknesses of the

00:11:37,949 --> 00:11:42,089
blog post and there was one guy this is

00:11:40,769 --> 00:11:44,220
sort of the flaw if you're modeling

00:11:42,089 --> 00:11:45,600
always I think this is an OK model to

00:11:44,220 --> 00:11:47,959
start with but obviously it doesn't

00:11:45,600 --> 00:11:50,160
encompass everything in the game so

00:11:47,959 --> 00:11:51,720
there was one person in particular was

00:11:50,160 --> 00:11:54,449
very adamant and said look if you want

00:11:51,720 --> 00:11:56,310
to win you should buy these places these

00:11:54,449 --> 00:11:57,959
are the ones you want to have and the

00:11:56,310 --> 00:11:59,430
reason is there's this mechanic in the

00:11:57,959 --> 00:12:02,370
game that if you buy all the houses

00:11:59,430 --> 00:12:03,750
first no one else can buy houses so if

00:12:02,370 --> 00:12:05,760
you are the person who actually owns all

00:12:03,750 --> 00:12:07,199
the houses here no one can invest in

00:12:05,760 --> 00:12:09,860
houses on any of these loss and then

00:12:07,199 --> 00:12:12,389
suddenly these do become more valuable

00:12:09,860 --> 00:12:14,250
we could go a little bit further and we

00:12:12,389 --> 00:12:16,019
could go and you know go in depth and

00:12:14,250 --> 00:12:18,930
how that would work and the colleague of

00:12:16,019 --> 00:12:20,130
mine actually built a bit of software

00:12:18,930 --> 00:12:22,170
around this and you can send your own

00:12:20,130 --> 00:12:24,480
genetic boss to play this game with a

00:12:22,170 --> 00:12:27,389
certain strategy talk to me after this

00:12:24,480 --> 00:12:28,500
talk if you're interested so this was

00:12:27,389 --> 00:12:31,199
definitely a thing that I thought was

00:12:28,500 --> 00:12:32,880
fun I understood the game better turned

00:12:31,199 --> 00:12:34,440
out to be a nice blog post and it was a

00:12:32,880 --> 00:12:37,740
nice example of one sampling or

00:12:34,440 --> 00:12:39,990
something nice a little bit of a crazy

00:12:37,740 --> 00:12:41,850
example but there's also some places

00:12:39,990 --> 00:12:43,680
where in practice I want to make a

00:12:41,850 --> 00:12:45,300
living and I might actually make a

00:12:43,680 --> 00:12:46,829
little bit more money if I just do the

00:12:45,300 --> 00:12:48,449
inference while sampling and the best

00:12:46,829 --> 00:12:51,690
example of that I have are these LEGO

00:12:48,449 --> 00:12:56,519
Minifigures are we familiar with LEGO

00:12:51,690 --> 00:12:59,010
Minifigures great

00:12:56,519 --> 00:13:00,540
so Legos is a smart company legos at

00:12:59,010 --> 00:13:02,760
some point realized like hey if we

00:13:00,540 --> 00:13:04,769
combine Star Wars and Legos they've got

00:13:02,760 --> 00:13:06,360
two collectors items in one and there

00:13:04,769 --> 00:13:06,899
will be more people who will be willing

00:13:06,360 --> 00:13:08,430
to buy that

00:13:06,899 --> 00:13:10,139
so collectors items you can make a lot

00:13:08,430 --> 00:13:12,510
of money off it this is the original

00:13:10,139 --> 00:13:13,889
Lego minifigure series and LEGO

00:13:12,510 --> 00:13:15,690
minifigures are kind of like the Kinder

00:13:13,889 --> 00:13:17,220
Bueno you open up the packet but you

00:13:15,690 --> 00:13:19,230
don't know which Lego minifigure is in

00:13:17,220 --> 00:13:20,940
there but there are 16 in the sets and

00:13:19,230 --> 00:13:24,449
after two months or so they're never

00:13:20,940 --> 00:13:26,370
gonna produce a set again so I figure

00:13:24,449 --> 00:13:28,110
okay that sounds interesting would there

00:13:26,370 --> 00:13:28,660
be a market for this so you go to this

00:13:28,110 --> 00:13:29,980
second

00:13:28,660 --> 00:13:32,050
website and you scrape a little bit of

00:13:29,980 --> 00:13:33,879
data and you make it a small little

00:13:32,050 --> 00:13:36,129
histogram because you want to try to see

00:13:33,879 --> 00:13:37,779
if you supposedly invest in LEGO

00:13:36,129 --> 00:13:40,600
Minifigures at the moment it will be

00:13:37,779 --> 00:13:41,800
profitable to sell them later this is

00:13:40,600 --> 00:13:42,699
the histogram you would get out which

00:13:41,800 --> 00:13:44,139
isn't that pretty

00:13:42,699 --> 00:13:45,910
because I don't really have an

00:13:44,139 --> 00:13:47,199
impression of what the average price

00:13:45,910 --> 00:13:49,120
might be there seem to be a lot around

00:13:47,199 --> 00:13:50,740
here but there's a thick tail over there

00:13:49,120 --> 00:13:51,879
as well so how do I get a good

00:13:50,740 --> 00:13:54,310
impression of what the average might be

00:13:51,879 --> 00:13:56,529
ok so I'll do a bit of bootstrapping

00:13:54,310 --> 00:13:58,000
I say did I have 60 of these prices I'm

00:13:56,529 --> 00:13:59,230
just gonna grab 30 at random and

00:13:58,000 --> 00:14:00,970
calculate the average I'm gonna repeat

00:13:59,230 --> 00:14:02,649
that over and over and that way I get a

00:14:00,970 --> 00:14:04,149
more smooth curve so I can you know

00:14:02,649 --> 00:14:06,939
visually interpret the plot a little bit

00:14:04,149 --> 00:14:09,220
better and turns out if I this is for

00:14:06,939 --> 00:14:11,050
the Simpsons LEGO minifigures that I was

00:14:09,220 --> 00:14:13,600
looking at these are for the other ones

00:14:11,050 --> 00:14:16,089
at the time the essentials Lego

00:14:13,600 --> 00:14:18,399
minifigure 1 was the most recent one and

00:14:16,089 --> 00:14:21,430
I can imagine that as the series gets

00:14:18,399 --> 00:14:23,769
older it'll be worth more so ok this

00:14:21,430 --> 00:14:24,910
might be a good average to look at and

00:14:23,769 --> 00:14:27,279
you shouldn't always look at average is

00:14:24,910 --> 00:14:28,750
but this seems reliable enough so these

00:14:27,279 --> 00:14:30,730
were the figures that I had I can buy a

00:14:28,750 --> 00:14:33,189
Lego minifigure for 3 euros a piece and

00:14:30,730 --> 00:14:35,560
I can sell a fill set for a hundred

00:14:33,189 --> 00:14:38,529
euros later how likely is it to get the

00:14:35,560 --> 00:14:40,750
full set and I was a little bit ignorant

00:14:38,529 --> 00:14:42,189
I figured I'd do this with math and when

00:14:40,750 --> 00:14:43,360
I say I'm gonna do this with math we're

00:14:42,189 --> 00:14:45,970
gonna do this in a programmers way in

00:14:43,360 --> 00:14:47,920
map so you go to math overflow and you

00:14:45,970 --> 00:14:49,269
present the question and then you get

00:14:47,920 --> 00:14:51,399
this answer back which is even more

00:14:49,269 --> 00:14:53,259
complicated turns out there's this thing

00:14:51,399 --> 00:14:55,000
called Sterling set numbers which is no

00:14:53,259 --> 00:14:56,709
I'm sure it's interesting theory but I

00:14:55,000 --> 00:14:58,300
want to solve the problem so instead of

00:14:56,709 --> 00:14:59,500
looking at math or even Stack Overflow

00:14:58,300 --> 00:15:01,990
that comes to the rescue

00:14:59,500 --> 00:15:05,410
I should probably just you know simulate

00:15:01,990 --> 00:15:08,350
this so I did you see the number of

00:15:05,410 --> 00:15:11,439
packets that I would buy and the line

00:15:08,350 --> 00:15:12,309
itself shows the probability of getting

00:15:11,439 --> 00:15:14,620
a full set

00:15:12,309 --> 00:15:16,750
but the dotted line shows the expected

00:15:14,620 --> 00:15:19,720
number of total sets that I would have

00:15:16,750 --> 00:15:20,380
had because obviously if I buy a hundred

00:15:19,720 --> 00:15:22,480
packets

00:15:20,380 --> 00:15:24,100
the odds of getting at least one full

00:15:22,480 --> 00:15:27,939
set is quite great but I might actually

00:15:24,100 --> 00:15:29,829
have to set sort of rather likely and

00:15:27,939 --> 00:15:31,480
again whenever you're doing these sorts

00:15:29,829 --> 00:15:32,889
of things it's always nice to visualize

00:15:31,480 --> 00:15:34,540
once in a while because if you visualize

00:15:32,889 --> 00:15:35,860
something then you can get surprised

00:15:34,540 --> 00:15:38,319
because when I was looking at this that

00:15:35,860 --> 00:15:40,930
it sort of made me wonder gee if I have

00:15:38,319 --> 00:15:42,430
one set and I start collecting even more

00:15:40,930 --> 00:15:43,899
from the first set that I

00:15:42,430 --> 00:15:45,850
elected I probably have some spare LEGO

00:15:43,899 --> 00:15:47,740
Minifigures which I could probably use

00:15:45,850 --> 00:15:52,000
to make sure that the second set that I

00:15:47,740 --> 00:15:54,730
buy is actually easier to collect so I

00:15:52,000 --> 00:15:56,110
figured out I plot that I simulated this

00:15:54,730 --> 00:15:57,550
over and over and over again and the

00:15:56,110 --> 00:15:59,200
blue line that you see here this is

00:15:57,550 --> 00:16:00,310
again the number of packets this would

00:15:59,200 --> 00:16:02,920
be the number of sets that I would have

00:16:00,310 --> 00:16:05,410
had this shows the average amount of

00:16:02,920 --> 00:16:09,880
time that you might need to get one full

00:16:05,410 --> 00:16:12,279
set theoretically you you need about 50

00:16:09,880 --> 00:16:14,770
it seems alright but the time it takes

00:16:12,279 --> 00:16:17,110
here is much more than the time it takes

00:16:14,770 --> 00:16:18,760
here which in turn is more than the time

00:16:17,110 --> 00:16:20,830
it takes here which in turn is more of

00:16:18,760 --> 00:16:24,550
the time station here so the more Legos

00:16:20,830 --> 00:16:28,810
I buy the higher the likelihood is it'll

00:16:24,550 --> 00:16:30,940
have more sets and again this seems

00:16:28,810 --> 00:16:32,200
intuitive but it's because I've done the

00:16:30,940 --> 00:16:36,370
inference that I was able to figure this

00:16:32,200 --> 00:16:39,220
out so again sampling is very useful and

00:16:36,370 --> 00:16:41,170
I'm stirred am I I often give this

00:16:39,220 --> 00:16:43,300
course in probability theory so this

00:16:41,170 --> 00:16:44,890
seemed like a nice example I ended up

00:16:43,300 --> 00:16:45,940
giving this course to a bunch of bankers

00:16:44,890 --> 00:16:47,860
and in the latter part of the afternoon

00:16:45,940 --> 00:16:50,470
we happily opens one of these boxes to

00:16:47,860 --> 00:16:52,770
see if the inference was correct turns

00:16:50,470 --> 00:16:56,890
out if you open one of these boxes up

00:16:52,770 --> 00:16:58,120
you will always have presets not even

00:16:56,890 --> 00:17:03,400
randomly distributed but it's still a

00:16:58,120 --> 00:17:04,809
fun thought exercise so these are sort

00:17:03,400 --> 00:17:06,429
of the obvious use cases when you think

00:17:04,809 --> 00:17:07,300
of simulation right you use simulation

00:17:06,429 --> 00:17:08,949
because you don't want to do the

00:17:07,300 --> 00:17:10,750
probability theory but there's actually

00:17:08,949 --> 00:17:12,400
other fields and just probability theory

00:17:10,750 --> 00:17:14,410
that can you know get a nice benefit

00:17:12,400 --> 00:17:15,730
from doing a good simulation exercise so

00:17:14,410 --> 00:17:17,410
let's talk about more general use cases

00:17:15,730 --> 00:17:19,240
and let's talk about optimization in

00:17:17,410 --> 00:17:20,620
general and to give the idea of how it

00:17:19,240 --> 00:17:24,339
works so I'm going to give a slightly

00:17:20,620 --> 00:17:25,480
silly example so this is an example

00:17:24,339 --> 00:17:27,309
where we know the correct answer

00:17:25,480 --> 00:17:29,830
beforehand but suppose we have a 1 by 1

00:17:27,309 --> 00:17:32,559
square and we want to find the largest

00:17:29,830 --> 00:17:34,330
triangle in this 1 by 1 square and again

00:17:32,559 --> 00:17:35,830
this is a very silly example we know

00:17:34,330 --> 00:17:37,090
what the largest triangle is you just

00:17:35,830 --> 00:17:37,450
you know make the diagonal and you're

00:17:37,090 --> 00:17:38,980
done

00:17:37,450 --> 00:17:40,480
but let's say that this is a system that

00:17:38,980 --> 00:17:42,580
we want to optimize and the computer has

00:17:40,480 --> 00:17:45,190
no notion of what the best parameters

00:17:42,580 --> 00:17:47,590
are we're interested in finding 3 points

00:17:45,190 --> 00:17:49,179
and the area in between these 3 points

00:17:47,590 --> 00:17:50,710
has to be the biggest that's the only

00:17:49,179 --> 00:17:53,720
thing that's known to the computer and

00:17:50,710 --> 00:17:55,560
computers in do no any math further

00:17:53,720 --> 00:17:57,720
so what's the first thing that you could

00:17:55,560 --> 00:17:59,070
do well how about we just you know

00:17:57,720 --> 00:18:01,950
generate a whole bunch of random

00:17:59,070 --> 00:18:05,460
triangles and pick the best one see how

00:18:01,950 --> 00:18:07,680
good that works so that's what I'm doing

00:18:05,460 --> 00:18:09,210
here is sort of the code that you would

00:18:07,680 --> 00:18:11,610
sort of need you just generate a whole

00:18:09,210 --> 00:18:16,680
bunch of random values in six dimensions

00:18:11,610 --> 00:18:18,480
so if X 1 X 2 X 3 y 1 y 2 y 3 points and

00:18:16,680 --> 00:18:20,130
then this function called a shoelace

00:18:18,480 --> 00:18:22,140
function which then calculates what the

00:18:20,130 --> 00:18:23,880
area between all these points and you do

00:18:22,140 --> 00:18:28,110
that for a whole bunch then you can draw

00:18:23,880 --> 00:18:30,540
the results and you know the largest

00:18:28,110 --> 00:18:32,190
triangle will be 0.5 and the probability

00:18:30,540 --> 00:18:34,590
of actually sampling a triangle from

00:18:32,190 --> 00:18:37,410
this region is rather low and this

00:18:34,590 --> 00:18:40,830
doesn't surprise me so what can we

00:18:37,410 --> 00:18:43,710
possibly do well what I could do is I

00:18:40,830 --> 00:18:46,680
could say gee I have an area and I have

00:18:43,710 --> 00:18:50,970
all of these x coordinates how about I

00:18:46,680 --> 00:18:53,280
throw away all the bad triangles that I

00:18:50,970 --> 00:18:54,510
have because I can take the average of

00:18:53,280 --> 00:18:56,010
all the triangle sizes and I can just

00:18:54,510 --> 00:18:57,150
throw away the the 1/2 is at the bottom

00:18:56,010 --> 00:18:59,610
I could keep the ones that are on top

00:18:57,150 --> 00:19:00,960
and instead of looking at the area how

00:18:59,610 --> 00:19:06,240
about a look at the distribution of the

00:19:00,960 --> 00:19:08,700
points there is a distribution there and

00:19:06,240 --> 00:19:10,590
as luck would have it if you have a

00:19:08,700 --> 00:19:11,370
sample sizes rather big what you could

00:19:10,590 --> 00:19:13,020
do is you could give that the

00:19:11,370 --> 00:19:15,060
scikit-learn because I could learn has a

00:19:13,020 --> 00:19:17,790
nice density estimator so that's what

00:19:15,060 --> 00:19:19,350
you see visualized here this is the

00:19:17,790 --> 00:19:22,590
density plot for the points that are

00:19:19,350 --> 00:19:26,280
performing well and to just sort of zoom

00:19:22,590 --> 00:19:27,840
in a bit these are this X 1 X 2 and X 3

00:19:26,280 --> 00:19:31,710
and it seems that if I want to get a

00:19:27,840 --> 00:19:33,780
good triangle then either X 1 it has to

00:19:31,710 --> 00:19:35,880
be a low number or a high number and if

00:19:33,780 --> 00:19:38,340
X 1 is a low number then X 2 has to be a

00:19:35,880 --> 00:19:40,200
low number as well or a high number this

00:19:38,340 --> 00:19:41,430
coincides with my belief of what a big

00:19:40,200 --> 00:19:45,000
triangle should be so that's sort of

00:19:41,430 --> 00:19:46,830
nice not only if I do this not only can

00:19:45,000 --> 00:19:48,390
i maybe get a sampling technique to give

00:19:46,830 --> 00:19:49,860
me better triangles but I can understand

00:19:48,390 --> 00:19:51,150
the problem a bit better as well just

00:19:49,860 --> 00:19:55,260
like with monopoly and just like with

00:19:51,150 --> 00:19:57,660
the Lego example that I had and this is

00:19:55,260 --> 00:19:59,940
what the x and y distributions look like

00:19:57,660 --> 00:20:01,920
again on this bigger plot this is just

00:19:59,940 --> 00:20:04,080
the XS or the Y's these are the XS and

00:20:01,920 --> 00:20:06,610
the Y's together and what I see sort of

00:20:04,080 --> 00:20:08,830
makes sense I like it if my exes

00:20:06,610 --> 00:20:14,049
my wife might be big that makes complete

00:20:08,830 --> 00:20:15,520
sense to do like that alright so I have

00:20:14,049 --> 00:20:19,510
this distribution let's sample from this

00:20:15,520 --> 00:20:21,730
one so the idea is I'm selected areas

00:20:19,510 --> 00:20:23,710
that are big I'm gonna sample from that

00:20:21,730 --> 00:20:25,780
distribution instead this is what it had

00:20:23,710 --> 00:20:27,309
before and if I do a new sample that I

00:20:25,780 --> 00:20:29,710
that I've just learned I was sample from

00:20:27,309 --> 00:20:31,090
this distribution instead and again

00:20:29,710 --> 00:20:33,940
which you will notice it's a lot hotter

00:20:31,090 --> 00:20:36,250
like clear then I'm gonna sample larger

00:20:33,940 --> 00:20:39,190
triangles so how about I just repeat

00:20:36,250 --> 00:20:42,040
this sample over sample over sample over

00:20:39,190 --> 00:20:43,750
sample over and the nice thing is we can

00:20:42,040 --> 00:20:45,780
repeat the same idea until some sort of

00:20:43,750 --> 00:20:47,830
convergence pops out note that

00:20:45,780 --> 00:20:49,390
mathematically I've said hey we're gonna

00:20:47,830 --> 00:20:52,419
select the areas that are larger than

00:20:49,390 --> 00:20:54,309
something some sampler than some M you

00:20:52,419 --> 00:20:55,960
could take m to be the average you could

00:20:54,309 --> 00:20:57,549
pick whatever other metric but the cool

00:20:55,960 --> 00:20:59,230
bonus is that from if you do an

00:20:57,549 --> 00:21:00,790
algorithm like this that we use

00:20:59,230 --> 00:21:01,750
inference on a simulated data to learn

00:21:00,790 --> 00:21:03,970
more about the nature of our

00:21:01,750 --> 00:21:05,740
optimization problem and if you're

00:21:03,970 --> 00:21:06,970
familiar with a like algorithms you may

00:21:05,740 --> 00:21:08,799
notice that they actually work in the

00:21:06,970 --> 00:21:10,390
quite similar fashion except here I'm

00:21:08,799 --> 00:21:11,919
trying to look at the distribution of

00:21:10,390 --> 00:21:13,510
the parameters whereas the genetic

00:21:11,919 --> 00:21:15,040
algorithm would use a similar tactic

00:21:13,510 --> 00:21:18,340
just do a proper search through the

00:21:15,040 --> 00:21:21,400
entire grid should you be interested in

00:21:18,340 --> 00:21:23,080
learning more about this there is this

00:21:21,400 --> 00:21:24,640
colleague of mine he's sitting there and

00:21:23,080 --> 00:21:26,080
he'll talk about this sort of thing more

00:21:24,640 --> 00:21:27,820
in detail later this week

00:21:26,080 --> 00:21:30,010
specifically he'll talk about how you

00:21:27,820 --> 00:21:31,900
can win the board game risk or how to

00:21:30,010 --> 00:21:34,030
conquer the world as the title would say

00:21:31,900 --> 00:21:35,799
it's Thursday 12 o'clock in a pie term

00:21:34,030 --> 00:21:36,940
room and he'll talk more about genetic

00:21:35,799 --> 00:21:38,500
algorithms in general and how you can

00:21:36,940 --> 00:21:40,150
apply this to many many things because

00:21:38,500 --> 00:21:43,090
what you'll probably have noticed as

00:21:40,150 --> 00:21:45,070
well this is triangles but I can sample

00:21:43,090 --> 00:21:47,200
anything if it's continuous or discrete

00:21:45,070 --> 00:21:49,240
it's just a sampling exercise which

00:21:47,200 --> 00:21:51,880
means that I have a very flexible way of

00:21:49,240 --> 00:21:53,530
optimizing any system that's not to say

00:21:51,880 --> 00:21:54,970
that I always find the best solution but

00:21:53,530 --> 00:22:00,790
this is a proper way to do a form of

00:21:54,970 --> 00:22:02,590
search hopefully by now I have convinced

00:22:00,790 --> 00:22:04,059
you that sampling is indeed useful and

00:22:02,590 --> 00:22:05,950
it can be a little bit surprising in its

00:22:04,059 --> 00:22:08,020
use cases what I'm going to talk about

00:22:05,950 --> 00:22:09,850
now is sort of my hobby project for the

00:22:08,020 --> 00:22:11,320
next year I think and it's the thing I'm

00:22:09,850 --> 00:22:12,730
most interested in at the moment and

00:22:11,320 --> 00:22:14,620
those are those are generative methods

00:22:12,730 --> 00:22:15,790
and the thing that I like about them is

00:22:14,620 --> 00:22:18,400
they sort of allow you to outsource

00:22:15,790 --> 00:22:20,170
creativity and entropy has a small role

00:22:18,400 --> 00:22:22,280
to play in this

00:22:20,170 --> 00:22:24,560
so so far the distribution has been a

00:22:22,280 --> 00:22:25,400
little bit static and in this next bit

00:22:24,560 --> 00:22:27,140
I'll introduce a little bit more

00:22:25,400 --> 00:22:28,850
Markovian way to think about randomness

00:22:27,140 --> 00:22:31,010
because so far I've said here's the

00:22:28,850 --> 00:22:32,450
distribution give me a sample give me a

00:22:31,010 --> 00:22:34,220
sample and it wasn't really the case

00:22:32,450 --> 00:22:36,350
that the sample that I just got

00:22:34,220 --> 00:22:41,660
determines in a little bit the next

00:22:36,350 --> 00:22:44,000
sample this is literally what is listed

00:22:41,660 --> 00:22:45,380
on my LinkedIn profile and if you please

00:22:44,000 --> 00:22:48,020
spend a little bit of time actually

00:22:45,380 --> 00:22:48,560
reading it some of you may understand

00:22:48,020 --> 00:22:53,110
the joke

00:22:48,560 --> 00:22:53,110
it seems surprisingly relevant nowadays

00:22:58,230 --> 00:23:03,230
there's a few people giggle I'm hoping

00:23:00,029 --> 00:23:03,230
to live with more people to giggle

00:23:05,410 --> 00:23:10,720
that's a couple of people understanding

00:23:06,669 --> 00:23:12,130
the joke so if you're on LinkedIn you

00:23:10,720 --> 00:23:14,140
want to write down what what sort of

00:23:12,130 --> 00:23:16,000
stuff you do I tell you write down our

00:23:14,140 --> 00:23:18,520
Python JavaScript and so the keyword

00:23:16,000 --> 00:23:20,049
bingo that everyone plays we're just you

00:23:18,520 --> 00:23:21,520
know nice but you get at least nasty

00:23:20,049 --> 00:23:23,230
recruiters on your profile which you

00:23:21,520 --> 00:23:24,910
tend to not like so I figured it'd be

00:23:23,230 --> 00:23:28,330
fun to just add a couple of Pokemon in

00:23:24,910 --> 00:23:32,350
there as well so there's ditto lo - a

00:23:28,330 --> 00:23:35,230
little - is actually a thing fill pics

00:23:32,350 --> 00:23:36,669
get so again the main the main reason is

00:23:35,230 --> 00:23:38,169
I like to confuse recruiters a bit I'm a

00:23:36,669 --> 00:23:39,700
little bit mean I probably shouldn't be

00:23:38,169 --> 00:23:41,049
but there's nothing more fun than if a

00:23:39,700 --> 00:23:42,850
recruiter says hey would you come to

00:23:41,049 --> 00:23:44,620
work for my corporate bank and that you

00:23:42,850 --> 00:23:47,650
can then say well do you guys use spark

00:23:44,620 --> 00:23:49,090
Hadoop and Metapod and and the recruiter

00:23:47,650 --> 00:23:51,940
says yes obviously we use all the latest

00:23:49,090 --> 00:23:54,010
technologies the recruiter in question

00:23:51,940 --> 00:23:56,380
wouldn't be entirely wrong right I mean

00:23:54,010 --> 00:23:58,510
recruiters are terrible classifiers for

00:23:56,380 --> 00:23:59,740
Pokemon recruiters can't really

00:23:58,510 --> 00:24:01,720
distinguish a pokemons name there's the

00:23:59,740 --> 00:24:03,460
name of technology so I figured making a

00:24:01,720 --> 00:24:05,710
Python library that can generate Pokemon

00:24:03,460 --> 00:24:07,210
names might actually be fun so the

00:24:05,710 --> 00:24:08,590
library is called grabble it's totally

00:24:07,210 --> 00:24:10,630
not done yet but the idea is to have

00:24:08,590 --> 00:24:11,919
tech names for a service and before you

00:24:10,630 --> 00:24:14,679
start thinking gee that's ridiculous

00:24:11,919 --> 00:24:17,350
Vincent speaking of Pokemon Aztec names

00:24:14,679 --> 00:24:19,000
there's a github repo turns out a lot of

00:24:17,350 --> 00:24:21,429
people have used Pokemon names for their

00:24:19,000 --> 00:24:23,320
original github projects there's a link

00:24:21,429 --> 00:24:24,750
in the you know presentations if you

00:24:23,320 --> 00:24:27,429
want to look at it later define but

00:24:24,750 --> 00:24:28,390
Metapod is actually a necessarily Big

00:24:27,429 --> 00:24:30,400
Data technology but it's a

00:24:28,390 --> 00:24:33,130
template-based robot dynamics library

00:24:30,400 --> 00:24:36,130
and there's this little webpage that for

00:24:33,130 --> 00:24:38,679
every 750 ish Pocky mine tells give you

00:24:36,130 --> 00:24:40,809
a link to github with a you know name of

00:24:38,679 --> 00:24:43,780
Pokemon in the package anyway back to

00:24:40,809 --> 00:24:45,309
serious stuff the reason why I want to

00:24:43,780 --> 00:24:46,450
make rebel is I've always been a user of

00:24:45,309 --> 00:24:47,830
libraries but I've never really written

00:24:46,450 --> 00:24:49,840
by myself and the problem seemed

00:24:47,830 --> 00:24:51,850
interesting enough I almost like you

00:24:49,840 --> 00:24:53,679
learn from doing this so I'll probably

00:24:51,850 --> 00:24:55,390
write like a Twitter bot someday that's

00:24:53,679 --> 00:24:58,270
sort of called tomás tech names as a

00:24:55,390 --> 00:25:00,039
servers or something but so the idea is

00:24:58,270 --> 00:25:03,100
it generates names that sound like

00:25:00,039 --> 00:25:04,659
Pokemon and to put it bluntly the whole

00:25:03,100 --> 00:25:08,830
point of gravel is to come up with a

00:25:04,659 --> 00:25:10,419
better name and then I started thinking

00:25:08,830 --> 00:25:12,039
about it okay so I have these I want to

00:25:10,419 --> 00:25:15,070
generate Pokemon names it seems like an

00:25:12,039 --> 00:25:16,750
interesting problem but it involves

00:25:15,070 --> 00:25:18,580
generating a believable sequence of

00:25:16,750 --> 00:25:20,200
tokens and when you think about it

00:25:18,580 --> 00:25:21,490
I couldn't do this for Pokemon names but

00:25:20,200 --> 00:25:23,679
there are many other things I could do

00:25:21,490 --> 00:25:28,149
as well like red hot chili pepper lyrics

00:25:23,679 --> 00:25:32,559
or IKEA furniture names or notes on a

00:25:28,149 --> 00:25:34,090
piano so the simplest model that you

00:25:32,559 --> 00:25:36,580
could possibly then think of a say okay

00:25:34,090 --> 00:25:38,140
suppose I have some token I will this is

00:25:36,580 --> 00:25:40,929
independent of if it's a letter in a

00:25:38,140 --> 00:25:42,309
word or if it's a word in a sentence or

00:25:40,929 --> 00:25:47,320
if it's a MIDI note in an entire

00:25:42,309 --> 00:25:50,799
arrangement or if it's you know sound in

00:25:47,320 --> 00:25:52,659
a furniture but the idea is once I know

00:25:50,799 --> 00:25:54,460
the previous token I might have some

00:25:52,659 --> 00:25:56,440
other probability distribution for the

00:25:54,460 --> 00:25:58,000
next token a sort of Markovian thinking

00:25:56,440 --> 00:25:59,830
is all about depending on the state that

00:25:58,000 --> 00:26:02,190
I am in now I will sample from a

00:25:59,830 --> 00:26:05,889
different distribution for my next token

00:26:02,190 --> 00:26:08,590
and this is the simplest model if I see

00:26:05,889 --> 00:26:10,299
the letter A beforehand probably the

00:26:08,590 --> 00:26:11,830
chance of seeing another vowel should be

00:26:10,299 --> 00:26:14,440
somewhat smaller and senior constant

00:26:11,830 --> 00:26:15,760
might be somewhat larger but you can

00:26:14,440 --> 00:26:17,139
also do it not just for the last token

00:26:15,760 --> 00:26:18,970
but it cooking before that as well this

00:26:17,139 --> 00:26:19,960
sort of generating a Markov chain that

00:26:18,970 --> 00:26:24,730
you're going to learn then you're gonna

00:26:19,960 --> 00:26:25,840
try and walk it and so the basic way of

00:26:24,730 --> 00:26:28,779
doing it is to say okay I have this

00:26:25,840 --> 00:26:30,789
Markov chain it I can look forward maybe

00:26:28,779 --> 00:26:32,889
I look back a bit as well so if I'm

00:26:30,789 --> 00:26:34,720
generating the third token I should look

00:26:32,889 --> 00:26:37,330
at the second token and the first one so

00:26:34,720 --> 00:26:40,630
it's a Markov chain of rank two in this

00:26:37,330 --> 00:26:43,450
sense but if you really wanted to this

00:26:40,630 --> 00:26:46,210
is just a way of thinking about it if I

00:26:43,450 --> 00:26:48,279
know t1 then the distribution for t2 is

00:26:46,210 --> 00:26:50,559
set sort of the sampling rule if you

00:26:48,279 --> 00:26:52,419
will but who says it has to be ordered

00:26:50,559 --> 00:26:54,279
in one direction I can also model this

00:26:52,419 --> 00:26:56,529
in a way that you can model it from two

00:26:54,279 --> 00:26:59,350
directions because if you think about it

00:26:56,529 --> 00:27:01,000
the it seems fine to start with the

00:26:59,350 --> 00:27:03,220
first letter of the pokemons name

00:27:01,000 --> 00:27:04,299
because there's a like prior belief that

00:27:03,220 --> 00:27:05,830
you could start with a certain letter

00:27:04,299 --> 00:27:08,010
but there's probably a different

00:27:05,830 --> 00:27:10,720
distribution for the last letter as well

00:27:08,010 --> 00:27:12,549
so it doesn't seem entirely unsensible

00:27:10,720 --> 00:27:14,529
that pokeymon probably don't end with a

00:27:12,549 --> 00:27:15,700
letter I for example so maybe we

00:27:14,529 --> 00:27:17,649
shouldn't have a Markov chain that goes

00:27:15,700 --> 00:27:20,049
one way but a Markov chain it goes both

00:27:17,649 --> 00:27:21,010
ways in it seems rather sensible and

00:27:20,049 --> 00:27:23,019
it's sort of the same probabilistic

00:27:21,010 --> 00:27:24,909
model so I'm playing around with this so

00:27:23,019 --> 00:27:26,639
I just like to give you a preview here

00:27:24,909 --> 00:27:31,270
are some Pokemon names I came up with

00:27:26,639 --> 00:27:32,330
Ledo keen cool recess cool a kata you

00:27:31,270 --> 00:27:35,230
tell

00:27:32,330 --> 00:27:37,730
new tail for some reason all my le tip

00:27:35,230 --> 00:27:39,860
seemed rather possible the red

00:27:37,730 --> 00:27:41,720
chili-pepper results are just hilarious

00:27:39,860 --> 00:27:43,820
can you believe hold me please by the

00:27:41,720 --> 00:27:45,320
way I wonder what the wave meant white

00:27:43,820 --> 00:27:47,240
heat is screaming in the nearest bin

00:27:45,320 --> 00:27:49,250
when I was fortunate I know you must

00:27:47,240 --> 00:27:51,230
have been fat this year eat the Sun and

00:27:49,250 --> 00:27:53,390
a bottom dollar foxhole of pie in your

00:27:51,230 --> 00:27:57,409
house let me spin feather-light but you

00:27:53,390 --> 00:27:59,149
can't move this and the lovely joy of

00:27:57,409 --> 00:28:02,059
doing things like making these sorts of

00:27:59,149 --> 00:28:04,730
models isn't that this is accurate but

00:28:02,059 --> 00:28:06,289
it is somehow accurate like I I somehow

00:28:04,730 --> 00:28:07,909
do believe that this came from Red Hot

00:28:06,289 --> 00:28:11,389
Chili Peppers and let's say not

00:28:07,909 --> 00:28:13,279
blink-182 or something like that but you

00:28:11,389 --> 00:28:15,620
also sort of notice is that the corpus

00:28:13,279 --> 00:28:17,570
was the corpus of dr. pepper lyrics is

00:28:15,620 --> 00:28:19,639
somewhat limited so if I say by the way

00:28:17,570 --> 00:28:21,320
just obviously always gonna be together

00:28:19,639 --> 00:28:23,330
what the wave man I think was also like

00:28:21,320 --> 00:28:25,039
literally in one of their songs so the

00:28:23,330 --> 00:28:26,720
corpus does have some influence but this

00:28:25,039 --> 00:28:30,620
sort of works and that's exciting

00:28:26,720 --> 00:28:32,120
same thing for IKEA furniture I know

00:28:30,620 --> 00:28:36,130
about you guys I would definitely like

00:28:32,120 --> 00:28:42,380
to have a heap a couch or a Europe's

00:28:36,130 --> 00:28:43,580
thing ok so the reason why this happened

00:28:42,380 --> 00:28:45,260
was I was talking to my girlfriend about

00:28:43,580 --> 00:28:48,620
this problem over dinner and she was

00:28:45,260 --> 00:28:49,880
obviously not super impressed really

00:28:48,620 --> 00:28:51,860
FinCEN you're spending your time on this

00:28:49,880 --> 00:28:53,539
instead of making Pokemon names how

00:28:51,860 --> 00:28:57,070
about you make a Kia furniture name

00:28:53,539 --> 00:28:59,779
she's like it's an excellent idea anyway

00:28:57,070 --> 00:29:01,190
the thing is I just so need a nice place

00:28:59,779 --> 00:29:03,320
a lot of these are actually quite wrong

00:29:01,190 --> 00:29:06,169
I mean these were a lot of samples that

00:29:03,320 --> 00:29:08,179
didn't really make the cuts so I really

00:29:06,169 --> 00:29:12,080
think a is a terrible name for furniture

00:29:08,179 --> 00:29:18,049
or a Pokemon Day also seems a bit odd

00:29:12,080 --> 00:29:20,149
and so there's still work to be done and

00:29:18,049 --> 00:29:21,440
just sort of explained now I'm thinking

00:29:20,149 --> 00:29:22,909
about maybe tackling the problem and

00:29:21,440 --> 00:29:25,399
some stuff I learned from just thinking

00:29:22,909 --> 00:29:26,630
about this in the machine learning

00:29:25,399 --> 00:29:28,399
community is very normal to making

00:29:26,630 --> 00:29:30,080
samples of models instead of just making

00:29:28,399 --> 00:29:31,340
one model how about you make ten of them

00:29:30,080 --> 00:29:33,110
and combine them in some way

00:29:31,340 --> 00:29:35,179
because it seems sensible that if this

00:29:33,110 --> 00:29:36,980
model works somehow but this one works

00:29:35,179 --> 00:29:38,210
also but in a slightly different way you

00:29:36,980 --> 00:29:40,039
should be able to combine them and the

00:29:38,210 --> 00:29:41,870
laws of probability certainly allow for

00:29:40,039 --> 00:29:42,980
this so that seems like a thing I could

00:29:41,870 --> 00:29:45,200
do to make this better

00:29:42,980 --> 00:29:46,130
another thing that I could do is my

00:29:45,200 --> 00:29:47,510
library hazardous

00:29:46,130 --> 00:29:48,950
another lexicon which is sort of like a

00:29:47,510 --> 00:29:50,810
dataframe and a model would be like a

00:29:48,950 --> 00:29:53,420
model but instead of having a data frame

00:29:50,810 --> 00:29:55,810
needs some sort of bag for sequences of

00:29:53,420 --> 00:29:57,980
tokens what I could also do is say hey

00:29:55,810 --> 00:29:58,880
here I've got this lexicon with all the

00:29:57,980 --> 00:30:00,980
pokemon names

00:29:58,880 --> 00:30:02,780
train it here I've got this lexicon of

00:30:00,980 --> 00:30:03,980
the English language is maybe I want to

00:30:02,780 --> 00:30:05,750
have pokemons that actually sound

00:30:03,980 --> 00:30:07,880
English and then I could go ahead and

00:30:05,750 --> 00:30:09,170
combine the two and then these would be

00:30:07,880 --> 00:30:10,340
two models that aren't just two

00:30:09,170 --> 00:30:11,510
different models but they're also train

00:30:10,340 --> 00:30:13,160
them different data but they can

00:30:11,510 --> 00:30:16,040
actually you know be glued together to

00:30:13,160 --> 00:30:17,810
maybe get better sequences it's a very

00:30:16,040 --> 00:30:19,160
fun experiment in Maya in my mind to

00:30:17,810 --> 00:30:20,690
generate pokemons names that sound

00:30:19,160 --> 00:30:24,800
French or Pokemon names that sound

00:30:20,690 --> 00:30:26,780
German but I can also do is maybe do

00:30:24,800 --> 00:30:28,970
something with transcriber or some form

00:30:26,780 --> 00:30:30,860
of transducer in the Pokemon names it

00:30:28,970 --> 00:30:32,570
seems very obvious that instead of just

00:30:30,860 --> 00:30:34,730
focusing on this letter came after that

00:30:32,570 --> 00:30:36,500
letter I might actually give some domain

00:30:34,730 --> 00:30:38,090
knowledge and say this letter it happens

00:30:36,500 --> 00:30:39,500
to be a consonant and the odds are

00:30:38,090 --> 00:30:41,750
getting three constants after each other

00:30:39,500 --> 00:30:44,660
is rather low so then I would translate

00:30:41,750 --> 00:30:46,130
sort of as a mapping the lexicon to

00:30:44,660 --> 00:30:48,080
something else and turn another model of

00:30:46,130 --> 00:30:49,730
coincides this seems like a viable

00:30:48,080 --> 00:30:51,950
tactic cuz you can sort of do extra

00:30:49,730 --> 00:30:53,150
domain odds in your model this way what

00:30:51,950 --> 00:30:55,550
you can also do is you can try to add

00:30:53,150 --> 00:30:57,710
judges how about I generate a hundred

00:30:55,550 --> 00:30:59,690
samples on this one that was based on

00:30:57,710 --> 00:31:01,460
this one model and have this other model

00:30:59,690 --> 00:31:03,170
that would judge this model so from the

00:31:01,460 --> 00:31:05,360
hundred samples I will sort them all and

00:31:03,170 --> 00:31:06,860
maybe take the top ten this also seems

00:31:05,360 --> 00:31:09,650
like an appropriate way of thinking

00:31:06,860 --> 00:31:11,000
about it I also think more this would be

00:31:09,650 --> 00:31:13,460
sort of hard core but you can also think

00:31:11,000 --> 00:31:14,660
about it not in a Markovian way but

00:31:13,460 --> 00:31:17,570
maybe just generate a factor graph

00:31:14,660 --> 00:31:19,040
instead this has some nice benefits and

00:31:17,570 --> 00:31:20,690
maybe we can even take this levenshtein

00:31:19,040 --> 00:31:22,970
ish approach where i started with a

00:31:20,690 --> 00:31:25,820
pokemons name and one by one randomly I

00:31:22,970 --> 00:31:27,410
change a letter also a way to generate

00:31:25,820 --> 00:31:29,210
something it should be sounding

00:31:27,410 --> 00:31:30,770
plausible and the nice thing about doing

00:31:29,210 --> 00:31:32,930
it this way is I am not necessarily

00:31:30,770 --> 00:31:35,060
limited to just probability theory but I

00:31:32,930 --> 00:31:37,460
can use Jensen's word - veca algorithm

00:31:35,060 --> 00:31:39,770
here and then you can sort of wander hey

00:31:37,460 --> 00:31:40,850
what a word is in a sentence there are

00:31:39,770 --> 00:31:42,050
some contexts there but what would the

00:31:40,850 --> 00:31:44,150
letter in it's like a token in the

00:31:42,050 --> 00:31:46,880
sequence be sort of an interesting way

00:31:44,150 --> 00:31:48,430
we can have like token Tyvek because

00:31:46,880 --> 00:31:51,230
I'll consider these deep models which is

00:31:48,430 --> 00:31:52,490
fashionable nowadays and the way that

00:31:51,230 --> 00:31:54,320
would work is you would say either

00:31:52,490 --> 00:31:55,940
starts token and I have some prior

00:31:54,320 --> 00:31:57,560
beliefs to generate that I'm gonna

00:31:55,940 --> 00:31:58,800
sample all the way down till I see some

00:31:57,560 --> 00:32:00,930
sort of stop token

00:31:58,800 --> 00:32:02,190
this is nice but it has some sort of I

00:32:00,930 --> 00:32:03,960
have some features that I would like to

00:32:02,190 --> 00:32:06,240
have which this way of thinking doesn't

00:32:03,960 --> 00:32:08,400
necessarily support suppose I want to

00:32:06,240 --> 00:32:10,440
generate a pokemons name with six

00:32:08,400 --> 00:32:12,840
letters and I know the second one and

00:32:10,440 --> 00:32:17,400
the sixth one how am I going to generate

00:32:12,840 --> 00:32:18,570
the others this is what makes the

00:32:17,400 --> 00:32:19,860
problem hard so I'm not sure if I want

00:32:18,570 --> 00:32:21,420
to give support to this but if you are

00:32:19,860 --> 00:32:22,860
deep learning specialists or think you

00:32:21,420 --> 00:32:24,030
are and you know the solution to this

00:32:22,860 --> 00:32:26,340
please come talk to me I would love to

00:32:24,030 --> 00:32:27,870
hear what you think about it so I will

00:32:26,340 --> 00:32:29,400
focus on the following domains probably

00:32:27,870 --> 00:32:30,330
see graphical models seem alright here

00:32:29,400 --> 00:32:31,890
just like a pro just see my writing

00:32:30,330 --> 00:32:33,240
people reading seems alright it's very

00:32:31,890 --> 00:32:35,280
interesting to see how the fields are

00:32:33,240 --> 00:32:36,900
converging because nowadays you can use

00:32:35,280 --> 00:32:38,820
a neural net as a generative algorithm

00:32:36,900 --> 00:32:40,260
which takes some sort of Gaussian in and

00:32:38,820 --> 00:32:42,390
generate some sort of generative

00:32:40,260 --> 00:32:44,930
distribution out this is from the open

00:32:42,390 --> 00:32:47,850
open AI page it's got some lovely

00:32:44,930 --> 00:32:49,500
research on the products like this and

00:32:47,850 --> 00:32:50,550
the rough API plan which is sort of the

00:32:49,500 --> 00:32:52,350
main lesson that I had as I was

00:32:50,550 --> 00:32:54,030
designing this instead of just writing

00:32:52,350 --> 00:32:55,290
code in a notebook it seems like a

00:32:54,030 --> 00:32:58,290
better idea that before you write any

00:32:55,290 --> 00:33:00,390
actual code you should wonder what does

00:32:58,290 --> 00:33:02,520
the UI look like I'm gonna be the user

00:33:00,390 --> 00:33:03,750
I'm gonna be you know using this a lot I

00:33:02,520 --> 00:33:05,730
have different lexicons I've different

00:33:03,750 --> 00:33:07,920
models I'd love to Train what's the best

00:33:05,730 --> 00:33:09,630
way for me as a user to play around with

00:33:07,920 --> 00:33:12,390
this so what you didn't do is just copy

00:33:09,630 --> 00:33:13,470
so I could learn there's some notion of

00:33:12,390 --> 00:33:15,510
a data frame and I just call it a

00:33:13,470 --> 00:33:17,130
lexicon there are these different models

00:33:15,510 --> 00:33:19,260
so let's say I have a factor graph to a

00:33:17,130 --> 00:33:20,670
Markov chain etc this is what defines

00:33:19,260 --> 00:33:22,230
the properties of the models and I can

00:33:20,670 --> 00:33:24,420
later fit that on a separate lexicon

00:33:22,230 --> 00:33:26,490
once those models are trained I can

00:33:24,420 --> 00:33:28,380
generate from them and the hopeful idea

00:33:26,490 --> 00:33:30,570
is that I can somehow make a ensamble

00:33:28,380 --> 00:33:33,690
based on two different models maybe even

00:33:30,570 --> 00:33:36,150
give them some waiting and then use an

00:33:33,690 --> 00:33:38,130
assorted come of this by some sort of

00:33:36,150 --> 00:33:40,050
judging characteristic of a model simply

00:33:38,130 --> 00:33:42,900
by writing this down for myself it's not

00:33:40,050 --> 00:33:44,310
even working yet this made a lot clearer

00:33:42,900 --> 00:33:45,860
for me to know what I should be building

00:33:44,310 --> 00:33:49,440
and how I should be designing things and

00:33:45,860 --> 00:33:51,360
then hopefully maybe by the end of next

00:33:49,440 --> 00:33:53,760
year I could come back and talk about a

00:33:51,360 --> 00:33:55,860
model that can make Pokemon names where

00:33:53,760 --> 00:33:57,330
you say hey I don't know this token I

00:33:55,860 --> 00:33:59,340
don't know that one and I don't that one

00:33:57,330 --> 00:34:02,070
but I want the token to end with base

00:33:59,340 --> 00:34:03,720
especially in the market for making tech

00:34:02,070 --> 00:34:06,750
names it seems very very useful you can

00:34:03,720 --> 00:34:08,550
do stuff like this another thing that's

00:34:06,750 --> 00:34:10,080
interesting so this is sort of the deep

00:34:08,550 --> 00:34:11,760
neural dreaming dream of building

00:34:10,080 --> 00:34:12,610
something that works for tokens what it

00:34:11,760 --> 00:34:15,790
works for art as

00:34:12,610 --> 00:34:17,560
well this is actually something that

00:34:15,790 --> 00:34:19,900
doesn't use any entropy but this is

00:34:17,560 --> 00:34:21,460
something that you can generate fairly

00:34:19,900 --> 00:34:23,530
easily in just a couple of lines in

00:34:21,460 --> 00:34:25,000
JavaScript if you're interested if

00:34:23,530 --> 00:34:27,040
you're gonna come on Friday to my

00:34:25,000 --> 00:34:29,110
blender talk will make pretty images

00:34:27,040 --> 00:34:31,090
sort of like this but in a 3d that'll be

00:34:29,110 --> 00:34:32,140
the goal of that talk we'll just use

00:34:31,090 --> 00:34:34,210
simple cubes and if you're interested

00:34:32,140 --> 00:34:37,570
come talk to me we're gonna build pretty

00:34:34,210 --> 00:34:39,010
stuff that looks like this so concluding

00:34:37,570 --> 00:34:40,570
simply gonna be a whole lot of fun then

00:34:39,010 --> 00:34:42,430
sometimes actually profitable Lego

00:34:40,570 --> 00:34:43,840
example getting started is super easy

00:34:42,430 --> 00:34:45,970
you might actually be surprised and how

00:34:43,840 --> 00:34:47,500
often it can help you out again people

00:34:45,970 --> 00:34:48,670
don't necessarily always understand PI

00:34:47,500 --> 00:34:51,100
mc3 because it's a little bit less

00:34:48,670 --> 00:34:52,930
straightforward on the theory side but

00:34:51,100 --> 00:34:54,640
you're very very flexible you can just

00:34:52,930 --> 00:34:55,600
describe a system a sample away and you

00:34:54,640 --> 00:34:57,910
can actually solve a whole lot of

00:34:55,600 --> 00:34:59,470
problems Python is a great use case

00:34:57,910 --> 00:35:00,910
language for this it's actually

00:34:59,470 --> 00:35:03,550
surprisingly easy to be very flexible

00:35:00,910 --> 00:35:05,230
with just a couple of lines of code and

00:35:03,550 --> 00:35:07,240
it's actually quite fast as well not

00:35:05,230 --> 00:35:09,310
quite as great and if you ever

00:35:07,240 --> 00:35:10,450
considering a thing about the API this

00:35:09,310 --> 00:35:12,670
is something I kind of learn from the

00:35:10,450 --> 00:35:14,560
art community and try to optimize for

00:35:12,670 --> 00:35:16,840
joy they're gonna be using the library

00:35:14,560 --> 00:35:18,100
maybe and it might be better to spend an

00:35:16,840 --> 00:35:20,230
entire day think about what the API

00:35:18,100 --> 00:35:22,660
would be like such as we be the most fun

00:35:20,230 --> 00:35:24,280
to start using the library instead of

00:35:22,660 --> 00:35:25,480
having a mountain you should climb in

00:35:24,280 --> 00:35:27,130
order to become a pro in the language

00:35:25,480 --> 00:35:30,510
maybe we should have to spit that just

00:35:27,130 --> 00:35:30,510
fall into and remove leap row

00:35:39,280 --> 00:35:44,000
okay happy happy to take any questions

00:35:41,359 --> 00:35:45,290
but anything Pokemon related that's not

00:35:44,000 --> 00:35:48,430
about the game you can also just talk to

00:35:45,290 --> 00:35:48,430
me in Fresno I'm outside summer

00:35:55,589 --> 00:36:02,819
any questions no question others one

00:35:57,689 --> 00:36:04,019
person in the back there I think white

00:36:02,819 --> 00:36:10,259
shirt I believe I'm not wearing my

00:36:04,019 --> 00:36:11,640
glasses also if you've done something

00:36:10,259 --> 00:36:13,019
similar to this also come talk to me

00:36:11,640 --> 00:36:14,489
this is sort of a hobby project but I'd

00:36:13,019 --> 00:36:26,910
be happy to hear if someone had done

00:36:14,489 --> 00:36:28,589
something similar yes my question is not

00:36:26,910 --> 00:36:31,079
sure if it's appropriate question but if

00:36:28,589 --> 00:36:34,709
you had to simulate and network of cues

00:36:31,079 --> 00:36:35,670
yes so you have a Q and a Q yeah how

00:36:34,709 --> 00:36:37,410
would you do that

00:36:35,670 --> 00:36:39,299
so there's two cues next to each other

00:36:37,410 --> 00:36:41,789
let's say there's a network yeah then

00:36:39,299 --> 00:36:42,989
maybe there's like yeah so in the use

00:36:41,789 --> 00:36:44,519
case for MIDI this is definitely a

00:36:42,989 --> 00:36:46,529
problem right because if you're doing a

00:36:44,519 --> 00:36:48,239
MIDI track for it so pokemons names and

00:36:46,529 --> 00:36:49,979
this is a toy example those are easy the

00:36:48,239 --> 00:36:51,359
the main gist of what I'm trying to get

00:36:49,979 --> 00:36:52,709
to at some point is this would be

00:36:51,359 --> 00:36:54,599
interesting if your music but music will

00:36:52,709 --> 00:36:55,920
be more difficult because then let's say

00:36:54,599 --> 00:36:57,719
you have the bass that's playing you

00:36:55,920 --> 00:36:59,729
have the drums that's playing and then

00:36:57,719 --> 00:37:01,140
you have the the melody for example then

00:36:59,729 --> 00:37:03,749
you have three sequences that actually

00:37:01,140 --> 00:37:06,049
have to correlate somehow but in this

00:37:03,749 --> 00:37:09,630
case don't really fit into this model

00:37:06,049 --> 00:37:10,979
what you could do then is that there's a

00:37:09,630 --> 00:37:12,150
couple of libraries that have a bit of

00:37:10,979 --> 00:37:13,709
support for this but you kind of have to

00:37:12,150 --> 00:37:16,890
go into probablistic graphical modeling

00:37:13,709 --> 00:37:18,839
in that way the trick is to then say

00:37:16,890 --> 00:37:20,609
there's two tricks you could do there's

00:37:18,839 --> 00:37:22,769
one trick where you can say these are

00:37:20,609 --> 00:37:25,499
three tokens that I can see as one

00:37:22,769 --> 00:37:27,059
separate token and that will go into

00:37:25,499 --> 00:37:30,089
this one list and I will try to generate

00:37:27,059 --> 00:37:31,499
that this can be you might need a lot of

00:37:30,089 --> 00:37:32,670
data before you actually get the pattern

00:37:31,499 --> 00:37:34,920
right so that's a little bit expensive

00:37:32,670 --> 00:37:36,779
in a way the other ways to not have the

00:37:34,920 --> 00:37:38,039
complexity in the data but that's been

00:37:36,779 --> 00:37:39,959
flexing it to the model where you just

00:37:38,039 --> 00:37:41,719
say hey these are three time series and

00:37:39,959 --> 00:37:43,619
they're somehow correlated learned that

00:37:41,719 --> 00:37:45,329
and you could do that with a sampling

00:37:43,619 --> 00:37:46,650
approach PI MC 3 has some examples of

00:37:45,329 --> 00:37:50,369
that but then you get into sort of

00:37:46,650 --> 00:37:51,719
correlated time series land I if I have

00:37:50,369 --> 00:37:53,039
like a whiteboard I can more easily

00:37:51,719 --> 00:37:53,849
explain that to you so come to me

00:37:53,039 --> 00:37:57,529
afterwards if that's something

00:37:53,849 --> 00:37:59,989
interesting but it is sort of doable

00:37:57,529 --> 00:38:03,169
it's just hard

00:37:59,989 --> 00:38:03,169
anyone else

00:38:14,300 --> 00:38:16,900
yes

00:38:25,230 --> 00:38:28,860
ah okay that's a good question so

00:38:27,210 --> 00:38:30,960
correct me if I'm wrong but I believe

00:38:28,860 --> 00:38:33,000
the question is hey this is a nice talk

00:38:30,960 --> 00:38:34,920
but obviously when you have more

00:38:33,000 --> 00:38:36,390
dimensions this would be harder right so

00:38:34,920 --> 00:38:37,950
for the triangle example that's

00:38:36,390 --> 00:38:41,690
reasonably easy because there's only six

00:38:37,950 --> 00:38:41,690
dimensions and you'd be right

00:38:42,000 --> 00:38:47,550
so the dimensionality is always an issue

00:38:43,830 --> 00:38:50,240
right and I believe I'll just grab the

00:38:47,550 --> 00:38:53,490
picture so suppose we had this but in

00:38:50,240 --> 00:38:55,500
12,000 dimensions obviously it's a whole

00:38:53,490 --> 00:38:57,120
lot harder what I would be more to

00:38:55,500 --> 00:38:58,890
saying here is considering this as a

00:38:57,120 --> 00:39:00,240
approach it actually has a couple of

00:38:58,890 --> 00:39:02,070
useful use cases and you can actually

00:39:00,240 --> 00:39:03,600
solve some things with it but especially

00:39:02,070 --> 00:39:04,830
in the optimization field where you have

00:39:03,600 --> 00:39:06,660
like lots of Hale's and many many

00:39:04,830 --> 00:39:08,850
dimensions and the reason why we use

00:39:06,660 --> 00:39:10,590
genetic algorithms is because the best

00:39:08,850 --> 00:39:13,620
thing we have not necessarily because

00:39:10,590 --> 00:39:15,780
that's the best thing we could have when

00:39:13,620 --> 00:39:18,920
you go into random algorithms land you

00:39:15,780 --> 00:39:20,910
do that because there's no alternative

00:39:18,920 --> 00:39:25,440
there's greedy methods but those are

00:39:20,910 --> 00:39:27,060
downsides too yep so I didn't quite get

00:39:25,440 --> 00:39:31,020
what was why couldn't you do like an

00:39:27,060 --> 00:39:32,610
LSTA so the the thing with the lsdm is

00:39:31,020 --> 00:39:35,820
usually you can say hey generate lots

00:39:32,610 --> 00:39:37,590
and lots of sequences the issue I sort

00:39:35,820 --> 00:39:38,940
of have is with this one use case so

00:39:37,590 --> 00:39:41,460
suppose that you say I want to have a

00:39:38,940 --> 00:39:45,440
Pokemon it starts with an H then an A

00:39:41,460 --> 00:39:45,440
and then after three tokens come to P

00:39:45,800 --> 00:39:51,810
alright so you want like yes well I

00:39:48,990 --> 00:39:53,400
wanted to finish sequences but can't you

00:39:51,810 --> 00:39:58,290
like just plug in a bunch of pokémon

00:39:53,400 --> 00:40:00,330
names and citizen what comes out I can't

00:39:58,290 --> 00:40:02,040
you just like just plug in a bunch of

00:40:00,330 --> 00:40:04,740
pokémon names and then see what comes

00:40:02,040 --> 00:40:07,710
out and and and I have but then the

00:40:04,740 --> 00:40:09,840
thing is suppose I stream all the

00:40:07,710 --> 00:40:10,890
pokemons names in right so my name for

00:40:09,840 --> 00:40:12,780
my name is learning's during the

00:40:10,890 --> 00:40:14,220
internal stays there then usually how

00:40:12,780 --> 00:40:16,800
you would generate a new sequence would

00:40:14,220 --> 00:40:18,480
be to say here's a star token go and

00:40:16,800 --> 00:40:19,680
then at some point it's gonna sample and

00:40:18,480 --> 00:40:21,840
token in Venice tone then it has a

00:40:19,680 --> 00:40:24,060
Pokemon name what I could do is I could

00:40:21,840 --> 00:40:25,440
say generate a whole lot of them until

00:40:24,060 --> 00:40:28,350
at some point you have a Pokemon name to

00:40:25,440 --> 00:40:30,570
start with an H then an A then free

00:40:28,350 --> 00:40:34,310
tokens whatever and then a P but that

00:40:30,570 --> 00:40:34,310
feels like over sampling a bit

00:40:34,350 --> 00:40:40,360
and so this is more of an open problem I

00:40:37,930 --> 00:40:43,710
think it's very fun to go to academic

00:40:40,360 --> 00:40:43,710
conferences and ask this to professor's

00:40:43,890 --> 00:40:48,850
but yeah there should be a sort of more

00:40:46,870 --> 00:40:50,550
genetic sort of more neural way to also

00:40:48,850 --> 00:40:52,960
approach this problem and that's why the

00:40:50,550 --> 00:40:54,400
generic thing from open AI where you

00:40:52,960 --> 00:40:56,800
actually add the entropy yourself seems

00:40:54,400 --> 00:40:58,120
like a worthwhile venture and it's just

00:40:56,800 --> 00:40:59,380
as I've never really heard anyone say

00:40:58,120 --> 00:40:59,770
here's an obvious solution to this

00:40:59,380 --> 00:41:03,220
problem

00:40:59,770 --> 00:41:06,730
mmm like it's not the most important

00:41:03,220 --> 00:41:11,140
problem in the world either right so I'm

00:41:06,730 --> 00:41:12,580
not no - angry about that thank you good

00:41:11,140 --> 00:41:15,810
let's give a big round of applause for

00:41:12,580 --> 00:41:15,810

YouTube URL: https://www.youtube.com/watch?v=TkHT3sLwtkY


