Title: Radomir Dopieralski - Making robots walk with Python
Publication date: 2016-07-29
Playlist: EuroPython 2016
Description: 
	Radomir Dopieralski - Making robots walk with Python
[EuroPython 2016]
[19 July 2016]
[Bilbao, Euskadi, Spain]
(https://ep2016.europython.eu//conference/talks/making-robots-walk-with-python)

You will see several different walking robots controlled with Python
in different ways, and learn how they were built and programmed.

-----

Making a robot walk is not easy, especially when all it has for brains
is a small microcontroller which you have to program in C. During this
talk you will see different ways in which such a robot can be
controlled in Python, either by using remote control, with the Python
program running on a stationary computer, by putting a small computer,
such as a Raspberry Pi on it, or by programming it with Micropython, a
version of the Python language designed for microcontrollers. I will
also explain the basic problems with walking robots and how Python can
be used to overcome them. Finally, I will show some of the robots I
have built.
Captions: 
	00:00:00,170 --> 00:00:06,420
okay so welcome back and let's welcome

00:00:03,870 --> 00:00:09,870
radomir Tokerau ski who will tell us

00:00:06,420 --> 00:00:30,090
about making grab a robot's work with

00:00:09,870 --> 00:00:33,300
Python so high oh it slipped off and now

00:00:30,090 --> 00:00:40,370
the resolution is different one moment

00:00:33,300 --> 00:00:45,390
sorry about that just addressed okay a

00:00:40,370 --> 00:00:48,030
so I started to play with robots and and

00:00:45,390 --> 00:00:50,340
are doing those and small electronics

00:00:48,030 --> 00:00:54,989
and stuff like that about three years

00:00:50,340 --> 00:00:57,660
ago and my goal was to build some cool

00:00:54,989 --> 00:01:00,120
robot obviously I didn't I wasn't happy

00:00:57,660 --> 00:01:02,820
with the robots on wheels because they

00:01:00,120 --> 00:01:05,460
were too easy and then you know you

00:01:02,820 --> 00:01:06,810
build them and they already works and so

00:01:05,460 --> 00:01:08,820
now you have stacks thinking what's

00:01:06,810 --> 00:01:11,159
other interesting things you can do with

00:01:08,820 --> 00:01:13,200
them and turns out it's very hard to do

00:01:11,159 --> 00:01:16,860
anything interesting with them so I

00:01:13,200 --> 00:01:19,590
turned to walking robots because walking

00:01:16,860 --> 00:01:21,000
is already interesting and hard so by

00:01:19,590 --> 00:01:24,540
the time you get it to walk you're

00:01:21,000 --> 00:01:26,250
already happy and and it's already

00:01:24,540 --> 00:01:29,369
awesome right and you don't have to

00:01:26,250 --> 00:01:32,430
think Matt about how to make them behave

00:01:29,369 --> 00:01:35,400
in intelligent weight or anything like

00:01:32,430 --> 00:01:37,829
that of course you can sign as with

00:01:35,400 --> 00:01:40,320
weird robot everything like that works

00:01:37,829 --> 00:01:45,420
and some some of them actually behave

00:01:40,320 --> 00:01:47,820
cool but anyways if you have any

00:01:45,420 --> 00:01:49,950
questions want to chat about robots or

00:01:47,820 --> 00:01:53,009
about electronics in general or about

00:01:49,950 --> 00:01:56,520
micro Python this is my nick i'm on

00:01:53,009 --> 00:01:59,509
freenode on IRC i'm on twitter i'm on

00:01:56,520 --> 00:02:02,399
hockaday I oh we're all my projects are

00:01:59,509 --> 00:02:04,200
you can you can just google it or

00:02:02,399 --> 00:02:08,729
something it's it should be googleable

00:02:04,200 --> 00:02:12,670
because quite it's not a real world

00:02:08,729 --> 00:02:15,220
the robots I'm building they're walking

00:02:12,670 --> 00:02:18,760
robots not crawling robots the

00:02:15,220 --> 00:02:24,160
difference is when you walk you and you

00:02:18,760 --> 00:02:28,140
put your foot on the ground it stays in

00:02:24,160 --> 00:02:32,020
that place until you lift that leg again

00:02:28,140 --> 00:02:34,810
pretty much in the same place maybe you

00:02:32,020 --> 00:02:37,780
rotate it a little or something and when

00:02:34,810 --> 00:02:41,709
you crawl you actually drag that foot

00:02:37,780 --> 00:02:44,920
sideways or behind you or are you even

00:02:41,709 --> 00:02:48,940
drag your stomach behind you or whatever

00:02:44,920 --> 00:02:51,580
so I'm focusing on robots that actually

00:02:48,940 --> 00:02:54,970
properly walk like they have proper

00:02:51,580 --> 00:02:56,830
support all the time and they they can

00:02:54,970 --> 00:02:59,640
work on any surface if you are a

00:02:56,830 --> 00:03:02,830
crawling you are basing your motion on

00:02:59,640 --> 00:03:04,959
friction of the differences in friction

00:03:02,830 --> 00:03:10,180
on the surface and then if there are

00:03:04,959 --> 00:03:12,459
different surfaces or you move from the

00:03:10,180 --> 00:03:15,750
floor to the carpet for instance the

00:03:12,459 --> 00:03:19,269
robot doesn't move and so well anymore

00:03:15,750 --> 00:03:22,120
well this is an example of one of the

00:03:19,269 --> 00:03:24,280
robots I don't have all my robots with

00:03:22,120 --> 00:03:27,850
me here I only brought the ones that are

00:03:24,280 --> 00:03:32,280
most sturdy and robust because I had to

00:03:27,850 --> 00:03:36,360
travel here from from Switzerland so I

00:03:32,280 --> 00:03:36,360
just had this simplest one

00:03:40,370 --> 00:04:01,900
walking looks pretty much like this you

00:03:48,890 --> 00:04:05,480
can turn stop stop stop go forward again

00:04:01,900 --> 00:04:15,829
anyways I will just leave it working

00:04:05,480 --> 00:04:18,709
inside circles yeah it's quite fun you

00:04:15,829 --> 00:04:20,479
can you can have different ways of

00:04:18,709 --> 00:04:26,780
working the way of looking is called a

00:04:20,479 --> 00:04:30,800
gate and different gates there is a

00:04:26,780 --> 00:04:34,880
broad categorization into two categories

00:04:30,800 --> 00:04:36,919
of gates the statically stable gate is

00:04:34,880 --> 00:04:40,630
the one that you can stop at any moment

00:04:36,919 --> 00:04:43,310
and you will not fall down basically

00:04:40,630 --> 00:04:45,740
animals use that when they are crawling

00:04:43,310 --> 00:04:47,660
when they are talking when they are

00:04:45,740 --> 00:04:50,930
moving slowly because they want to be

00:04:47,660 --> 00:04:52,400
able to stop at any moment and it's the

00:04:50,930 --> 00:04:55,669
simplest one to do because you don't

00:04:52,400 --> 00:04:57,979
have to do dynamic balancing dynamically

00:04:55,669 --> 00:05:00,830
stable gates are the ones that are most

00:04:57,979 --> 00:05:03,250
interesting to researchers researchers

00:05:00,830 --> 00:05:06,310
researchers such as the Boston Dynamics

00:05:03,250 --> 00:05:12,970
you've seen probably the big dog the

00:05:06,310 --> 00:05:18,139
spot the spot mini movies on YouTube

00:05:12,970 --> 00:05:21,020
very cool very nice stuff but this is

00:05:18,139 --> 00:05:24,199
much harder of course because you take

00:05:21,020 --> 00:05:27,169
into account the changing center of

00:05:24,199 --> 00:05:30,400
gravity the inertia and so on and you

00:05:27,169 --> 00:05:37,060
have to plan your movements much better

00:05:30,400 --> 00:05:37,060
yeah so two examples of those guides are

00:05:37,419 --> 00:05:44,650
stop

00:05:40,320 --> 00:05:48,700
our creep and throat creep is how

00:05:44,650 --> 00:06:02,530
basically a cat works when it starts its

00:05:48,700 --> 00:06:07,330
prey and connect the battery and it's

00:06:02,530 --> 00:06:11,620
basically statically stable because it

00:06:07,330 --> 00:06:14,010
has to be able to stop at any moment and

00:06:11,620 --> 00:06:14,010
so on

00:06:18,390 --> 00:06:25,270
it looks pretty much like this so one

00:06:21,400 --> 00:06:28,120
leg at a time and if you want to move

00:06:25,270 --> 00:06:31,540
faster than that you can use a dynamic

00:06:28,120 --> 00:06:34,840
dynamically stable guide and move two

00:06:31,540 --> 00:06:37,050
legs at a time like diagonal legs like

00:06:34,840 --> 00:06:37,050
this

00:06:44,920 --> 00:06:50,170
you see it's because you move two legs

00:06:47,830 --> 00:06:56,050
at a time it's basically twice as fast

00:06:50,170 --> 00:06:58,170
but it's it's based on timing if you

00:06:56,050 --> 00:07:01,390
stop with you with two legs in the air

00:06:58,170 --> 00:07:24,820
you will be you will be in stable you'll

00:07:01,390 --> 00:07:27,430
pretty much fall down okay because my

00:07:24,820 --> 00:07:29,410
robots are so small I actually violate

00:07:27,430 --> 00:07:31,150
one of the most important rules when

00:07:29,410 --> 00:07:35,110
you're building robots to have a big

00:07:31,150 --> 00:07:38,080
stop switch on them because you don't

00:07:35,110 --> 00:07:40,960
have to grapple with them you know I

00:07:38,080 --> 00:07:45,580
will switch them off so the battery

00:07:40,960 --> 00:07:48,520
doesn't run out okay the most important

00:07:45,580 --> 00:07:49,720
idea when you are designing a guide when

00:07:48,520 --> 00:07:52,660
you are designing our God that is

00:07:49,720 --> 00:07:54,580
working is the support I array the

00:07:52,660 --> 00:07:57,280
support area is basically the Arab

00:07:54,580 --> 00:08:00,190
between all of the legs that convex

00:07:57,280 --> 00:08:04,060
outline of all of the legs that are at

00:08:00,190 --> 00:08:06,460
the moment on the ground in case of a

00:08:04,060 --> 00:08:10,360
four-legged robot or multi like the

00:08:06,460 --> 00:08:12,970
robot it's basically usually that they

00:08:10,360 --> 00:08:17,190
feed at this point so you just make an

00:08:12,970 --> 00:08:17,190
outline like that if you have like a

00:08:18,750 --> 00:08:30,060
robot like this you just needs very

00:08:21,700 --> 00:08:30,060
large heat it makes things easier and

00:08:30,420 --> 00:08:39,370
when you lift one of the legs the

00:08:34,750 --> 00:08:41,530
support area changes of course and there

00:08:39,370 --> 00:08:43,660
is only one role you need to follow if

00:08:41,530 --> 00:08:46,660
you are making a statically stable robot

00:08:43,660 --> 00:08:51,490
the center of gravity has to be above

00:08:46,660 --> 00:08:52,990
the area of support at all times to

00:08:51,490 --> 00:08:56,260
achieve that

00:08:52,990 --> 00:08:58,630
you move their body sideways before you

00:08:56,260 --> 00:09:01,899
leave alack so you move the body away

00:08:58,630 --> 00:09:04,839
away from the leg before we lift it so

00:09:01,899 --> 00:09:06,700
that the center of gravity is farther

00:09:04,839 --> 00:09:11,740
away from that leg so you can safely

00:09:06,700 --> 00:09:15,520
lift it so basically you have each step

00:09:11,740 --> 00:09:18,160
you have three animations going on at

00:09:15,520 --> 00:09:21,790
the same time first of all you are

00:09:18,160 --> 00:09:25,570
moving the robot body forward by moving

00:09:21,790 --> 00:09:28,300
all the legs backwards simultaneously so

00:09:25,570 --> 00:09:30,760
it's like until you run out of the legs

00:09:28,300 --> 00:09:35,830
of course at some point you just

00:09:30,760 --> 00:09:39,520
faceplant so there is a second thing you

00:09:35,830 --> 00:09:41,410
moved about the sideways or away from

00:09:39,520 --> 00:09:44,800
the leg that you are going to lift and

00:09:41,410 --> 00:09:47,649
then one by one you are lifting the legs

00:09:44,800 --> 00:09:49,899
and putting them forward so that you

00:09:47,649 --> 00:09:51,760
don't run out of the legs right so you

00:09:49,899 --> 00:09:55,330
can continue moving all the legs

00:09:51,760 --> 00:10:00,339
backwards all the time with with

00:09:55,330 --> 00:10:03,880
constant speed and it's also important

00:10:00,339 --> 00:10:07,089
in what order you move the legs and it

00:10:03,880 --> 00:10:11,880
turns out that for the creep guide it's

00:10:07,089 --> 00:10:16,779
best to move them like in a figure eight

00:10:11,880 --> 00:10:22,329
order like here so front left field then

00:10:16,779 --> 00:10:26,589
back right then front right and then

00:10:22,329 --> 00:10:30,130
back left again and so on it of course

00:10:26,589 --> 00:10:33,930
changes if you start to do rotations if

00:10:30,130 --> 00:10:38,290
you start walking sideways if you start

00:10:33,930 --> 00:10:40,899
having a uneven terrain even because

00:10:38,290 --> 00:10:43,149
then the legs don't read that the shape

00:10:40,899 --> 00:10:49,480
that they form on that on the floor is

00:10:43,149 --> 00:10:53,079
not such nice anymore and then you can

00:10:49,480 --> 00:10:55,750
invent very nice algorithms for for

00:10:53,079 --> 00:10:58,360
determining which like to move next and

00:10:55,750 --> 00:11:03,760
so on so that's one interesting aspect

00:10:58,360 --> 00:11:05,190
of programming them second think a if

00:11:03,760 --> 00:11:08,700
you want the

00:11:05,190 --> 00:11:12,600
to be able to move to put the leg in a

00:11:08,700 --> 00:11:14,760
precise point in space in

00:11:12,600 --> 00:11:17,640
three-dimensional space you need to have

00:11:14,760 --> 00:11:22,470
at least three degrees of freedom on

00:11:17,640 --> 00:11:24,660
each leg for walking you basically have

00:11:22,470 --> 00:11:26,820
to have to do that there will be an

00:11:24,660 --> 00:11:31,890
exception i will talk about that later

00:11:26,820 --> 00:11:34,350
and you want to when when you are moving

00:11:31,890 --> 00:11:38,030
the service you specify the angle by

00:11:34,350 --> 00:11:41,910
which you might want to move it and I

00:11:38,030 --> 00:11:46,890
usually when you want to move the leg

00:11:41,910 --> 00:11:49,680
somewhere you specify coordinate so

00:11:46,890 --> 00:11:51,660
there is a way to calculate the angles

00:11:49,680 --> 00:11:57,420
from the coordinates it's called inverse

00:11:51,660 --> 00:11:59,880
kinematics and that not what I'm going

00:11:57,420 --> 00:12:02,160
to talk right now because there is one

00:11:59,880 --> 00:12:04,140
more slide before that this is what

00:12:02,160 --> 00:12:07,410
happens when you only have two degrees

00:12:04,140 --> 00:12:10,020
of freedom my rack oh one server to to

00:12:07,410 --> 00:12:14,940
move the leg up and down and one server

00:12:10,020 --> 00:12:19,340
to move it forward and backwards and you

00:12:14,940 --> 00:12:23,430
can see that if you try to move the legs

00:12:19,340 --> 00:12:27,510
backwards to propel the body forward it

00:12:23,430 --> 00:12:29,430
has to move sideways a little bit so you

00:12:27,510 --> 00:12:33,240
have this sleeping on the floor and it's

00:12:29,430 --> 00:12:35,580
not proper walking anymore and depends

00:12:33,240 --> 00:12:38,880
on the surface depends on what the tip

00:12:35,580 --> 00:12:42,290
of your leg is made of and so on it may

00:12:38,880 --> 00:12:45,780
not work so well if your legs are very

00:12:42,290 --> 00:12:49,860
elastic they will probably just bend a

00:12:45,780 --> 00:12:52,620
little and other to that oh my god first

00:12:49,860 --> 00:12:55,830
okay inverse kinematics this is

00:12:52,620 --> 00:12:59,040
basically a high school math like

00:12:55,830 --> 00:13:03,089
geometry and I won't get into details of

00:12:59,040 --> 00:13:04,740
that but you can basically solve all the

00:13:03,089 --> 00:13:07,320
triangles in there and calculate the

00:13:04,740 --> 00:13:11,790
angles and then move your leg to the

00:13:07,320 --> 00:13:15,660
place you want to and there is one

00:13:11,790 --> 00:13:18,089
exception for for this three degrees of

00:13:15,660 --> 00:13:20,850
freedom if you have a mammal

00:13:18,089 --> 00:13:24,709
robot like this you you can get away

00:13:20,850 --> 00:13:29,100
with only two degrees of freedom because

00:13:24,709 --> 00:13:32,610
the servos are mounted vertically on the

00:13:29,100 --> 00:13:35,490
same plane so you are able to move the

00:13:32,610 --> 00:13:38,670
leg backwards by moving the two

00:13:35,490 --> 00:13:48,089
syllables in the right proportions and

00:13:38,670 --> 00:13:51,329
it still are a straight line right but

00:13:48,089 --> 00:13:54,749
then you have problems with turning you

00:13:51,329 --> 00:13:57,629
can only turn like tanks do by moving

00:13:54,749 --> 00:13:59,819
legs on one side faster and lights on

00:13:57,629 --> 00:14:02,430
the other side of the robot slower and

00:13:59,819 --> 00:14:05,100
then you also have these things that

00:14:02,430 --> 00:14:07,829
tank do when they turn that they

00:14:05,100 --> 00:14:12,540
completely obliterate the ground they

00:14:07,829 --> 00:14:14,639
stand on I don't know if you saw that if

00:14:12,540 --> 00:14:17,370
you saw a construction site where where

00:14:14,639 --> 00:14:20,220
a digger was moving on the tracks and it

00:14:17,370 --> 00:14:24,149
was turning it's a horrible mess in

00:14:20,220 --> 00:14:26,970
there so it happens here though so there

00:14:24,149 --> 00:14:30,149
is always some problem you could add a

00:14:26,970 --> 00:14:33,449
servo at the back too somehow you know

00:14:30,149 --> 00:14:37,620
on the spine of the robot masters more

00:14:33,449 --> 00:14:41,370
advanced things okay when you actually

00:14:37,620 --> 00:14:43,139
build the robot physically you need in a

00:14:41,370 --> 00:14:45,569
one way or another you need at least

00:14:43,139 --> 00:14:49,319
dogs parts for railroad you need a

00:14:45,569 --> 00:14:51,569
battery to power it and you need a power

00:14:49,319 --> 00:14:54,089
board to distribute the power and to add

00:14:51,569 --> 00:14:55,679
up the voltage of the battery towed to

00:14:54,089 --> 00:15:00,269
the water you are actually using in your

00:14:55,679 --> 00:15:04,050
robot obviously you need some kind of

00:15:00,269 --> 00:15:06,720
servo motors or other actuators that you

00:15:04,050 --> 00:15:10,110
are going to use to actually physically

00:15:06,720 --> 00:15:13,769
move things around and you will need a

00:15:10,110 --> 00:15:16,620
control board to actually send all the

00:15:13,769 --> 00:15:18,929
signals to to those motors and either

00:15:16,620 --> 00:15:21,839
it's an eight bridge for the foreign

00:15:18,929 --> 00:15:22,750
motors or if it's a servo you need a

00:15:21,839 --> 00:15:25,030
servant

00:15:22,750 --> 00:15:28,360
or that generates the signal for the

00:15:25,030 --> 00:15:32,230
server sometimes you can mark that with

00:15:28,360 --> 00:15:34,420
the brain that you are using and dem

00:15:32,230 --> 00:15:38,380
brain is obviously the main computer

00:15:34,420 --> 00:15:41,860
that that runs the robot that you

00:15:38,380 --> 00:15:43,480
program sometimes it's more convenient

00:15:41,860 --> 00:15:45,600
to have the servo controller separately

00:15:43,480 --> 00:15:49,690
because then you can debug them

00:15:45,600 --> 00:15:52,090
separately you can have like easier

00:15:49,690 --> 00:15:55,690
easier time reading the code and so on

00:15:52,090 --> 00:15:58,090
and of course you you if you don't want

00:15:55,690 --> 00:16:02,320
your robots to be just radio-controlled

00:15:58,090 --> 00:16:04,450
toys like those you need actual sensors

00:16:02,320 --> 00:16:07,510
and you need to process the sensor data

00:16:04,450 --> 00:16:11,020
and yesterday we had a talk about using

00:16:07,510 --> 00:16:14,950
opencv for instance for processing image

00:16:11,020 --> 00:16:17,580
data that's one way you can do it I I'd

00:16:14,950 --> 00:16:20,350
use a distance sensor from from the door

00:16:17,580 --> 00:16:22,900
that sore about only knows there is

00:16:20,350 --> 00:16:24,730
something in front of it the eye turns

00:16:22,900 --> 00:16:28,839
out you can do a lot of interesting

00:16:24,730 --> 00:16:31,089
stuff with that already yes a process

00:16:28,839 --> 00:16:33,190
dude actually constructing that I

00:16:31,089 --> 00:16:35,620
started with a remote brains this robot

00:16:33,190 --> 00:16:37,630
doesn't actually it only has a server

00:16:35,620 --> 00:16:39,910
control on board it doesn't have like a

00:16:37,630 --> 00:16:44,860
main computer on it it only has a

00:16:39,910 --> 00:16:46,690
bluetooth dongle and it runs from Colt

00:16:44,860 --> 00:16:49,540
Python code I actually ran on my

00:16:46,690 --> 00:16:52,450
computer and it sends the server

00:16:49,540 --> 00:16:55,510
positions to the robot and this way you

00:16:52,450 --> 00:16:57,070
can very easily day back your code

00:16:55,510 --> 00:17:00,100
because you have it running on your

00:16:57,070 --> 00:17:03,070
computer you can break at any moment you

00:17:00,100 --> 00:17:05,620
can use the console to to you know try

00:17:03,070 --> 00:17:08,140
other commands and so on so that's

00:17:05,620 --> 00:17:12,010
convenient but of course you need the

00:17:08,140 --> 00:17:18,270
other computer rank that's and at this

00:17:12,010 --> 00:17:18,270
road yeah i work at red hats

00:17:19,510 --> 00:17:23,720
what you can use for for control of

00:17:22,100 --> 00:17:25,939
course you can use radio can use

00:17:23,720 --> 00:17:29,630
bluetooth you can use Wi-Fi you can use

00:17:25,939 --> 00:17:32,870
zigbee Laura if de whatever those are

00:17:29,630 --> 00:17:35,750
controlled by infrared from actually a

00:17:32,870 --> 00:17:38,530
TV remote the cheapest way you can you

00:17:35,750 --> 00:17:45,080
can have a remote for you robots that's

00:17:38,530 --> 00:17:47,450
very easy this is my first robot it had

00:17:45,080 --> 00:17:49,880
either a different approach I had a lot

00:17:47,450 --> 00:17:53,210
of trouble with it I've rebuilt it many

00:17:49,880 --> 00:17:56,150
many times because I didn't know what I

00:17:53,210 --> 00:18:00,260
was doing so I replaced service with

00:17:56,150 --> 00:18:02,570
stronger service because the ones I used

00:18:00,260 --> 00:18:04,220
at the beginning was where and strong

00:18:02,570 --> 00:18:06,260
enough to actually carry the robot and

00:18:04,220 --> 00:18:08,570
then I had to replace the battery and

00:18:06,260 --> 00:18:10,280
then I had to replace the server control

00:18:08,570 --> 00:18:14,179
and then I had to replace because

00:18:10,280 --> 00:18:18,289
battery was heavier I had to replace the

00:18:14,179 --> 00:18:21,409
service again and so on so this was

00:18:18,289 --> 00:18:24,049
really a lot of trouble it's about this

00:18:21,409 --> 00:18:26,450
big and then I decided that I'm building

00:18:24,049 --> 00:18:29,840
small rubble because they are so much

00:18:26,450 --> 00:18:32,510
easier to control there are so much

00:18:29,840 --> 00:18:35,120
cheaper because the parts don't have to

00:18:32,510 --> 00:18:36,890
be so strong they're easier to build

00:18:35,120 --> 00:18:40,600
because you can use just plastic and

00:18:36,890 --> 00:18:44,390
glue and not metal and I don't know

00:18:40,600 --> 00:18:47,120
boards and so on so I'm building small

00:18:44,390 --> 00:18:50,960
robots this is much easier and you learn

00:18:47,120 --> 00:18:52,940
as much with them so this is the second

00:18:50,960 --> 00:18:57,159
approach put the computer on the robot

00:18:52,940 --> 00:19:02,090
directly it has a raspberry p on it and

00:18:57,159 --> 00:19:06,289
also the battery of course this is

00:19:02,090 --> 00:19:09,200
another one this one has a 50 on it so

00:19:06,289 --> 00:19:11,630
it's quite small Raspberry Pi zero and

00:19:09,200 --> 00:19:14,960
the Raspberry Pi zero controls the

00:19:11,630 --> 00:19:17,159
servos directly using a servo blaster so

00:19:14,960 --> 00:19:20,369
I don't even have a servo controller and

00:19:17,159 --> 00:19:22,590
and it has a camera from an old laptop

00:19:20,369 --> 00:19:26,399
this thing in the front is actually a

00:19:22,590 --> 00:19:29,849
working USB camera so I can do stuff

00:19:26,399 --> 00:19:36,690
with opencv and so on on it it's quite

00:19:29,849 --> 00:19:42,149
cool the problem is yeah so you can put

00:19:36,690 --> 00:19:44,609
a smaller computer on it and that works

00:19:42,149 --> 00:19:46,889
better because you have small robots

00:19:44,609 --> 00:19:52,229
it's easier to maintain it's easier to

00:19:46,889 --> 00:19:54,299
catch it if it runs away and so this is

00:19:52,229 --> 00:19:58,739
the smallest one I did it's very similar

00:19:54,299 --> 00:20:00,899
to this guy here except this one else

00:19:58,739 --> 00:20:03,989
has arduino for the server control on it

00:20:00,899 --> 00:20:07,549
and it just listens to the TV remote

00:20:03,989 --> 00:20:10,950
that one actually has a trip from a

00:20:07,549 --> 00:20:14,879
Wi-Fi router keep Wi-Fi router it runs

00:20:10,950 --> 00:20:17,789
open wrt on it so linux distribution and

00:20:14,879 --> 00:20:20,099
it also has a camera from a laptop it

00:20:17,789 --> 00:20:22,889
ended streams from that camera so you

00:20:20,099 --> 00:20:27,059
can explore under the bed and so on it's

00:20:22,889 --> 00:20:29,460
it's quite cool and it's controlled by

00:20:27,059 --> 00:20:32,450
Wi-Fi of course because it's a Rooter

00:20:29,460 --> 00:20:36,269
clip so it has already Wi-Fi built-in

00:20:32,450 --> 00:20:42,179
very nice approach the problem is it

00:20:36,269 --> 00:20:43,950
puts 10 minutes so this is a problem

00:20:42,179 --> 00:20:47,070
when you are using a real computer on

00:20:43,950 --> 00:20:50,070
your robot you need you basically has a

00:20:47,070 --> 00:20:52,679
hey you have a perambulating data center

00:20:50,070 --> 00:20:56,909
there you have to maintain that server

00:20:52,679 --> 00:21:00,419
you have to install upgrades you have to

00:20:56,909 --> 00:21:03,059
I don't know do all the care you would

00:21:00,419 --> 00:21:06,299
do with the server it takes time to boot

00:21:03,059 --> 00:21:09,119
if you just switch it off it will start

00:21:06,299 --> 00:21:10,950
the fragmenting is fixing the file

00:21:09,119 --> 00:21:13,379
systems on the next boot and and

00:21:10,950 --> 00:21:15,330
sometimes there will be some corrupted

00:21:13,379 --> 00:21:17,190
flash on it and sometimes you will have

00:21:15,330 --> 00:21:20,730
to restore from backup so you will have

00:21:17,190 --> 00:21:23,640
to maintain backups for your robot

00:21:20,730 --> 00:21:26,010
and so it's it's convenient because you

00:21:23,640 --> 00:21:28,500
can can ssh into it and just you know

00:21:26,010 --> 00:21:31,260
around code directly and so on so that's

00:21:28,500 --> 00:21:33,690
convenient but it's not really that good

00:21:31,260 --> 00:21:37,830
experience once you actually want to use

00:21:33,690 --> 00:21:40,290
the robot so the next step is using

00:21:37,830 --> 00:21:42,419
microcontrollers but I really wanted to

00:21:40,290 --> 00:21:44,940
program in python I can do some

00:21:42,419 --> 00:21:47,400
rudimentary see for the server control

00:21:44,940 --> 00:21:49,980
for instance or four simple walking

00:21:47,400 --> 00:21:52,830
robots like those but for more advanced

00:21:49,980 --> 00:21:56,450
stuff you really want to have Python so

00:21:52,830 --> 00:22:01,950
this is a story no no no esprit no pico

00:21:56,450 --> 00:22:04,370
board that runs micro Python you can use

00:22:01,950 --> 00:22:10,410
micro Python that's awesome awesome

00:22:04,370 --> 00:22:12,330
Python port distribution whatever you

00:22:10,410 --> 00:22:17,640
call it that runs actually on

00:22:12,330 --> 00:22:20,130
microcontrollers and ya microcon you can

00:22:17,640 --> 00:22:23,630
just switch it on and off when whenever

00:22:20,130 --> 00:22:28,620
you want it puts like in several

00:22:23,630 --> 00:22:30,750
microseconds or milliseconds and you can

00:22:28,620 --> 00:22:32,669
connect to it through Syria and still

00:22:30,750 --> 00:22:37,710
get a Python console so you can still

00:22:32,669 --> 00:22:39,900
try your code life you can you know have

00:22:37,710 --> 00:22:45,210
a cable to connect to robot and see how

00:22:39,900 --> 00:22:49,230
it moves and so on there is a cool board

00:22:45,210 --> 00:22:53,130
that runs micro Python or Scott open MV

00:22:49,230 --> 00:22:55,140
and I have robots that uses it but I

00:22:53,130 --> 00:22:57,840
never took the time to actually program

00:22:55,140 --> 00:23:02,460
it there's nowt in front of it it's

00:22:57,840 --> 00:23:05,190
actually a camera and it does an image

00:23:02,460 --> 00:23:08,820
recognition because the micro Piton

00:23:05,190 --> 00:23:12,900
unopen MV has a built-in library that

00:23:08,820 --> 00:23:16,169
does hard Cascades and the optical flow

00:23:12,900 --> 00:23:20,130
and blob detection and a number of other

00:23:16,169 --> 00:23:25,230
useful visual our girls are built in

00:23:20,130 --> 00:23:28,050
there so you can actually hopefully i

00:23:25,230 --> 00:23:31,550
will program it and make it do cool

00:23:28,050 --> 00:23:43,080
stuff right now it's not yet working

00:23:31,550 --> 00:23:46,950
there is esp8266 which is a very nota a

00:23:43,080 --> 00:23:50,400
really small trip that the actually

00:23:46,950 --> 00:23:53,340
module the size of a postage stamp costs

00:23:50,400 --> 00:23:57,480
about two dollars to those 50 and runs

00:23:53,340 --> 00:23:59,730
my crop item and has Wi-Fi built in so

00:23:57,480 --> 00:24:02,070
it's perfect for for our youth the

00:23:59,730 --> 00:24:04,500
problem is it doesn't really have so

00:24:02,070 --> 00:24:07,040
this is one robot I am building using it

00:24:04,500 --> 00:24:15,300
you can see on the tail there is the

00:24:07,040 --> 00:24:19,650
esp8266 and yes it's a pony it's really

00:24:15,300 --> 00:24:22,920
small it's like it fits in your hand the

00:24:19,650 --> 00:24:25,680
problem is it only has eight digital

00:24:22,920 --> 00:24:27,690
outputs I have eight servers in here

00:24:25,680 --> 00:24:30,000
because this is the mammal configuration

00:24:27,690 --> 00:24:31,950
so I only have 80 that's fine you

00:24:30,000 --> 00:24:36,480
wouldn't be able to build a spider robot

00:24:31,950 --> 00:24:40,530
with that so for robots that have some

00:24:36,480 --> 00:24:42,840
more servos i use an arduino as a server

00:24:40,530 --> 00:24:46,530
controller and just make the esp8266

00:24:42,840 --> 00:24:50,160
talk to it through I to see that's much

00:24:46,530 --> 00:24:52,770
easier to do this is a low-key coma from

00:24:50,160 --> 00:24:55,320
ghost in a shell it's transparent

00:24:52,770 --> 00:24:58,380
because it's in the you know cloaking

00:24:55,320 --> 00:25:03,390
mode the invisible mode from the movie

00:24:58,380 --> 00:25:07,110
and yes sensors put whatever you want

00:25:03,390 --> 00:25:09,800
there I wants dive into that and that's

00:25:07,110 --> 00:25:09,800
all thank you

00:25:16,570 --> 00:25:27,679
okay so we have time for one or two

00:25:19,309 --> 00:25:30,529
questions does anybody have some so

00:25:27,679 --> 00:25:32,870
you've managed to use open CD on our

00:25:30,529 --> 00:25:35,240
Raspberry Pi successfully like the frame

00:25:32,870 --> 00:25:38,929
rate frame rate that at which you could

00:25:35,240 --> 00:25:42,830
analyze friends no no that still

00:25:38,929 --> 00:25:45,019
something I have to explore and if it's

00:25:42,830 --> 00:25:48,559
not fast enough I will probably switch

00:25:45,019 --> 00:25:51,500
to a raspberry pi 3 or or maybe try to

00:25:48,559 --> 00:25:54,320
write my own algorithms or I don't know

00:25:51,500 --> 00:25:57,830
but the problem is i really love

00:25:54,320 --> 00:26:02,120
building physical things but programming

00:25:57,830 --> 00:26:04,580
is not as fun i do it by as my day job

00:26:02,120 --> 00:26:06,799
so it's not as exciting anymore so i

00:26:04,580 --> 00:26:09,409
have a lot of robots that i have built

00:26:06,799 --> 00:26:12,679
physically and they have to waiting for

00:26:09,409 --> 00:26:21,799
programming if anybody wants to I don't

00:26:12,679 --> 00:26:24,350
know collaborate kiss hey there are

00:26:21,799 --> 00:26:28,899
great talk so I wanted to ask you about

00:26:24,350 --> 00:26:34,220
the last where you mentioned the esp8266

00:26:28,899 --> 00:26:36,620
yeah um I heard that is um like it's

00:26:34,220 --> 00:26:39,470
supposed you can write a script for it

00:26:36,620 --> 00:26:42,889
in Lua I know about the support for

00:26:39,470 --> 00:26:44,929
micro pyran you have many issues getting

00:26:42,889 --> 00:26:47,029
working how was your experience with

00:26:44,929 --> 00:26:49,909
that so the initial implementation that

00:26:47,029 --> 00:26:52,730
was done about a year ago by by Damian

00:26:49,909 --> 00:26:54,679
by the outer of micro Python it was just

00:26:52,730 --> 00:26:58,700
a proof of concept down in three days

00:26:54,679 --> 00:27:00,710
and it was pretty bad so it worked it

00:26:58,700 --> 00:27:04,279
was a proof of concept that it works but

00:27:00,710 --> 00:27:08,029
but it wasn't really either stable or

00:27:04,279 --> 00:27:10,659
very future full or anything but

00:27:08,029 --> 00:27:13,970
recently there was a Kickstarter for

00:27:10,659 --> 00:27:16,220
rewriting that basically at the

00:27:13,970 --> 00:27:19,549
beginning of this year and it was a huge

00:27:16,220 --> 00:27:23,480
success that we got funded and some more

00:27:19,549 --> 00:27:25,299
on top of that and the outers of micro

00:27:23,480 --> 00:27:27,999
Python really sat down a river

00:27:25,299 --> 00:27:29,830
the whole thing from scratch no not

00:27:27,999 --> 00:27:32,799
really from scratch but remote it

00:27:29,830 --> 00:27:37,869
properly and now it's a quite stable

00:27:32,799 --> 00:27:41,429
it's still experimental in the words of

00:27:37,869 --> 00:27:44,559
the outers because they are not so much

00:27:41,429 --> 00:27:47,039
confident in that they got everything

00:27:44,559 --> 00:27:50,799
exactly right so I wouldn't put it in a

00:27:47,039 --> 00:27:56,889
hospital for you know keeping your

00:27:50,799 --> 00:27:59,169
grandfather alive but but it should be

00:27:56,889 --> 00:28:02,139
fine for hobby project and its really

00:27:59,169 --> 00:28:05,619
growing fast and a lot of libraries are

00:28:02,139 --> 00:28:08,769
being written by this for this by other

00:28:05,619 --> 00:28:11,139
people not necessarily the developers

00:28:08,769 --> 00:28:13,960
themselves and I hope it will really

00:28:11,139 --> 00:28:17,609
start nicely tomorrow there is an open

00:28:13,960 --> 00:28:21,309
space for micro Python and I have some

00:28:17,609 --> 00:28:25,119
esp8266 ports with me some other people

00:28:21,309 --> 00:28:29,379
have brought there's also so we can like

00:28:25,119 --> 00:28:31,450
have some fun with them so if if you are

00:28:29,379 --> 00:28:36,340
interested in that please come tomorrow

00:28:31,450 --> 00:28:38,730
into the open space hey thanks rod mean

00:28:36,340 --> 00:28:38,730

YouTube URL: https://www.youtube.com/watch?v=W5wN7pf2iLo


