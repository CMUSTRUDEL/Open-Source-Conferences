Title: Stephane Wirtel - Exploring our Python Interpreter
Publication date: 2016-07-29
Playlist: EuroPython 2016
Description: 
	Stephane Wirtel - Exploring our Python Interpreter
[EuroPython 2016]
[19 July 2016]
[Bilbao, Euskadi, Spain]
(https://ep2016.europython.eu//conference/talks/exploring-our-python-interpreter)

During the last CPython sprints at PyCon US (Montreal), I started to
contribute to the CPython project and I
wanted to understand the beast.
In this case, there is only one solution, trace the code from the beginning.
From the command line to the interpreter, we will take part to an
adventure. The idea behind is just to show how CPython works for a new
contributor.

-----

During my last CPython sprint, I started to contribute to the CPython code and I
wanted to understand the beast.

In this case, there is only one solution, trace the code from the beginning.
From the command line to the interpreter, we will take part to an adventure

* Overview of the structure of the project and the directories.
* From the Py_Main function to the interpreter.
* The used technics for the Lexer, Parser and the generation of the AST and of
course of the Bytecodes.
* We will see some bytecodes with the dis module.
* How does VM works, it's a stack machine.
* The interpreter and its main loop of the Virtual Machine.

The idea behind is just to show how CPython works for a new contributor to
CPython.

From the command line, we will learn that Python is a library and that we can
embed it in a C project. In fact we will see the Py_Main function to the ceval.c
file of the interpreter.

But there is no magic in the CPython code, we will travel in the lexer and the
parser of CPython, and why not, by the AST for one Python expression.

After the AST, we will visit the Compiler and the Bytecodes for the
interpreter.
Of course, we will learn there is the peepholer where some basic instructions
are optimised by the this component.

And of course, the interpreter, this virtual machine is really interesting for
the newbiew, because it's a big stack where the bytecodes are executed one by
one on the stack and the ceval.c file.
Captions: 
	00:00:00,400 --> 00:00:04,299
and will you join me in welcoming our

00:00:02,650 --> 00:00:06,940
speakers fifth and DF tell and his talk

00:00:04,299 --> 00:00:15,489
about the Python interpreter yeah thank

00:00:06,940 --> 00:00:17,439
you I think I'm not in the good concerns

00:00:15,489 --> 00:00:20,890
because it in fact it's just exploring

00:00:17,439 --> 00:00:24,789
the Ruby interpreter no just kidding so

00:00:20,890 --> 00:00:27,429
okay my name is just Stefan hotel in

00:00:24,789 --> 00:00:30,820
French stiffen we still I come from

00:00:27,429 --> 00:00:32,590
Belgium where we have some beers and the

00:00:30,820 --> 00:00:36,460
force their hand the Python for them

00:00:32,590 --> 00:00:39,730
okay of course I'm a Python lover since

00:00:36,460 --> 00:00:42,460
the first of the decade now okay it's

00:00:39,730 --> 00:00:46,080
not very important I'm not C Python core

00:00:42,460 --> 00:00:49,870
dev just that it's just an introduction

00:00:46,080 --> 00:00:52,210
yes I just a small contributor to see

00:00:49,870 --> 00:00:56,430
Python a unicorn if you know the project

00:00:52,210 --> 00:00:59,800
vinegar I of course he Python I'm

00:00:56,430 --> 00:01:01,720
nominated a member of the psf Python

00:00:59,800 --> 00:01:05,770
software foundation of course we can

00:01:01,720 --> 00:01:08,230
become a member of the psf and since two

00:01:05,770 --> 00:01:10,210
or three years I'm a member of the group

00:01:08,230 --> 00:01:16,180
right on society the organizer of the

00:01:10,210 --> 00:01:19,360
repeat on event welcome so just a

00:01:16,180 --> 00:01:23,830
reminder I'm just an introduction and

00:01:19,360 --> 00:01:26,290
I'm not occur dev ok just a contributor

00:01:23,830 --> 00:01:30,070
if you want to contribute to just create

00:01:26,290 --> 00:01:32,020
some patch and send them so about the

00:01:30,070 --> 00:01:35,080
schedule the schedule will be really

00:01:32,020 --> 00:01:38,770
simple we have how to start with C

00:01:35,080 --> 00:01:42,070
Python not out can I cry oh can I write

00:01:38,770 --> 00:01:45,070
a print statement adjust that okay just

00:01:42,070 --> 00:01:48,760
okay can we read the South Col that try

00:01:45,070 --> 00:01:51,549
to understand it we will have a small

00:01:48,760 --> 00:01:53,590
question distill how to create what's

00:01:51,549 --> 00:01:58,990
the result of Python of this expression

00:01:53,590 --> 00:02:02,740
two more two and a small summary okay so

00:01:58,990 --> 00:02:08,709
oh can we start that's a great question

00:02:02,740 --> 00:02:11,650
sorry maybe with the developer's guide

00:02:08,709 --> 00:02:14,450
in fact when you want to start to

00:02:11,650 --> 00:02:18,709
develop with zip item that was my case

00:02:14,450 --> 00:02:21,379
at pykon in Montreal sometimes we can

00:02:18,709 --> 00:02:24,379
find some sprints dairy there is a

00:02:21,379 --> 00:02:27,019
sprint on sip item and that was my case

00:02:24,379 --> 00:02:29,750
where I came with my bag and my laptop

00:02:27,019 --> 00:02:31,610
and I just asked to some developers

00:02:29,750 --> 00:02:34,849
hello I would like to help you with the

00:02:31,610 --> 00:02:36,739
ship item first thing so can you read

00:02:34,849 --> 00:02:40,489
the developer's guide a dead guy in

00:02:36,739 --> 00:02:44,510
short yeah of course I can in this

00:02:40,489 --> 00:02:53,420
document it's just a small document

00:02:44,510 --> 00:02:56,750
sorry here please no it's not the direct

00:02:53,420 --> 00:02:59,090
is just hope well it's just the

00:02:56,750 --> 00:03:01,160
developer's guide if you want to start

00:02:59,090 --> 00:03:04,190
to develop to hack and sip item you can

00:03:01,160 --> 00:03:07,340
read this disorientation you will read

00:03:04,190 --> 00:03:11,180
how to make a clone of the repository

00:03:07,340 --> 00:03:13,180
how to become a core dev 02 for example

00:03:11,180 --> 00:03:17,690
you want to add a new keyword in the

00:03:13,180 --> 00:03:20,840
syntax of item there is a small

00:03:17,690 --> 00:03:26,060
checklist in fact a checklist with 20

00:03:20,840 --> 00:03:30,709
points to verify okay just that yeah and

00:03:26,060 --> 00:03:34,459
how to become a sorry the dev guide is

00:03:30,709 --> 00:03:36,560
really interesting because we have some

00:03:34,459 --> 00:03:38,870
explanation about this tracker the bill

00:03:36,560 --> 00:03:41,750
does the bite in developer faq the peps

00:03:38,870 --> 00:03:43,700
and you can read everything so let me

00:03:41,750 --> 00:03:47,090
interesting because you have the getting

00:03:43,700 --> 00:03:48,859
started out to compile Python how can

00:03:47,090 --> 00:03:50,510
you help for example with the

00:03:48,859 --> 00:03:54,859
documentation with the South God are

00:03:50,510 --> 00:03:57,680
with everything how to write a test and

00:03:54,859 --> 00:04:02,230
just 0 to run the test on several

00:03:57,680 --> 00:04:05,750
platforms okay so come back to the dock

00:04:02,230 --> 00:04:07,549
my presentation so the dell guide will

00:04:05,750 --> 00:04:10,940
explain the creek stare the graph the

00:04:07,549 --> 00:04:13,010
drama Oh to change the syntax and just a

00:04:10,940 --> 00:04:15,169
design of C Python compiler yes we have

00:04:13,010 --> 00:04:17,870
the source code in Python there will be

00:04:15,169 --> 00:04:20,180
the lecturer the parser the peephole er

00:04:17,870 --> 00:04:23,210
edge of the pike you at the end with the

00:04:20,180 --> 00:04:24,470
virtual machine so we can find the

00:04:23,210 --> 00:04:29,750
documentation as this

00:04:24,470 --> 00:04:32,630
location when you start okay I'm sorry I

00:04:29,750 --> 00:04:36,380
have a question oh can I not for you but

00:04:32,630 --> 00:04:39,200
for me when you go in a sprint I have an

00:04:36,380 --> 00:04:41,690
issue I have this issue how can i fix it

00:04:39,200 --> 00:04:44,240
how I don't have time but you can send

00:04:41,690 --> 00:04:47,420
them a message to this my mailing list

00:04:44,240 --> 00:04:49,460
buy into any vital mentors vital

00:04:47,420 --> 00:04:53,090
interest is just a big mailing list

00:04:49,460 --> 00:04:55,700
program where you can send a request you

00:04:53,090 --> 00:04:57,980
will get some response from Gilla van

00:04:55,700 --> 00:05:00,890
Rossum breakin and editor Maria Victor

00:04:57,980 --> 00:05:02,780
dinner myself and of course other

00:05:00,890 --> 00:05:04,820
developers that's really interesting

00:05:02,780 --> 00:05:09,110
because you can discuss about the

00:05:04,820 --> 00:05:11,870
solution for your issues ok in ikea I

00:05:09,110 --> 00:05:15,320
wanted to modify the interpreter just

00:05:11,870 --> 00:05:19,700
the lecturer because i found an en su

00:05:15,320 --> 00:05:22,000
manera and when i send my message my my

00:05:19,700 --> 00:05:25,250
mail i receive a response from gido

00:05:22,000 --> 00:05:27,980
where he told me sorry but in fact in

00:05:25,250 --> 00:05:34,070
item there is no one purser but two

00:05:27,980 --> 00:05:36,650
parcels for the recent tax ok so of

00:05:34,070 --> 00:05:40,910
course you want to start where to set

00:05:36,650 --> 00:05:43,160
you have the mailing list with the

00:05:40,910 --> 00:05:45,260
mailing list we have the announce the

00:05:43,160 --> 00:05:47,840
bags and nuns in fact when you create a

00:05:45,260 --> 00:05:50,390
new bags in the back tracker of Titan

00:05:47,840 --> 00:05:54,080
you have a mailing list for that you can

00:05:50,390 --> 00:05:57,169
follow hit just to receive the soil some

00:05:54,080 --> 00:05:59,419
notifications when you want to discuss

00:05:57,169 --> 00:06:01,520
about the bug you have one minute list

00:05:59,419 --> 00:06:05,720
this mailing list is just map it with

00:06:01,520 --> 00:06:07,610
the back tracker we've run up if you

00:06:05,720 --> 00:06:10,040
need some help you have the mentorship

00:06:07,610 --> 00:06:13,310
mailing list if you want to discuss

00:06:10,040 --> 00:06:15,620
about one big point in the curve of item

00:06:13,310 --> 00:06:18,800
you have the mailing list the Python

00:06:15,620 --> 00:06:22,520
devil if you want to create if you if

00:06:18,800 --> 00:06:25,340
you having an awesome idea for example

00:06:22,520 --> 00:06:28,250
the fat bitin project to try to improve

00:06:25,340 --> 00:06:30,410
the performance of Python you can try to

00:06:28,250 --> 00:06:31,770
submit something on the mailing list

00:06:30,410 --> 00:06:34,770
biotin Heidi's

00:06:31,770 --> 00:06:37,169
list and you will see if you have a good

00:06:34,770 --> 00:06:41,819
result a good feedback or not in this

00:06:37,169 --> 00:06:43,949
case that was not yes II today we disc

00:06:41,819 --> 00:06:47,370
use about the performance with a sink I

00:06:43,949 --> 00:06:49,169
up with UV loop and the rest if you are

00:06:47,370 --> 00:06:51,120
interested by the speed of Python you

00:06:49,169 --> 00:06:53,879
can discuss on this mailing list that's

00:06:51,120 --> 00:06:56,460
very useful it's not it's a meaningless

00:06:53,879 --> 00:06:59,699
where we discuss about the internal

00:06:56,460 --> 00:07:01,470
parts of Python okay not about Oh to use

00:06:59,699 --> 00:07:08,030
the bed what's the best practice for the

00:07:01,470 --> 00:07:11,819
performance ok so how to contribute

00:07:08,030 --> 00:07:14,460
firstly but that's really simple you go

00:07:11,819 --> 00:07:17,509
on the bell exact bugs that 500 her

00:07:14,460 --> 00:07:20,970
website and you create a user account

00:07:17,509 --> 00:07:23,340
with this user account you have to sign

00:07:20,970 --> 00:07:27,240
a contributor agreement with the psf

00:07:23,340 --> 00:07:32,190
because the South code is that the owner

00:07:27,240 --> 00:07:41,909
of the stylus code is a psf ok looking

00:07:32,190 --> 00:07:45,360
for one stuff yes yeah sorry to me so

00:07:41,909 --> 00:07:48,169
the step to just how can I prove cheap

00:07:45,360 --> 00:07:51,630
item firstly you have the documentation

00:07:48,169 --> 00:07:55,130
please we have a good documentation but

00:07:51,630 --> 00:07:58,139
we have a missing some missing tutorials

00:07:55,130 --> 00:08:00,419
for example as in ko we have the

00:07:58,139 --> 00:08:03,120
documentation about asking KO but we

00:08:00,419 --> 00:08:05,699
have we don't have a tutorial about that

00:08:03,120 --> 00:08:08,310
oh can we start with to assign KO can we

00:08:05,699 --> 00:08:10,169
use it and the rest we have a reference

00:08:08,310 --> 00:08:13,949
in the documentation if you want to

00:08:10,169 --> 00:08:15,810
contribute that read the right place yes

00:08:13,949 --> 00:08:19,020
of course you can create some issues

00:08:15,810 --> 00:08:21,840
fill them and if you find a bag of

00:08:19,020 --> 00:08:24,389
course or if you want a feature on your

00:08:21,840 --> 00:08:30,479
feature I'm going to much to show a

00:08:24,389 --> 00:08:35,279
feature a small feature we need some

00:08:30,479 --> 00:08:39,300
reviewers yeah if you look the South

00:08:35,279 --> 00:08:42,649
code of Python birthday we have we only

00:08:39,300 --> 00:08:45,379
have ten commits per day it's not really

00:08:42,649 --> 00:08:49,579
if you want to contribute just review

00:08:45,379 --> 00:08:51,139
the patches and we will be happy okay

00:08:49,579 --> 00:08:52,670
you will receive a good message thank

00:08:51,139 --> 00:08:56,119
you because that's really interesting

00:08:52,670 --> 00:08:59,569
and important for us sometimes you can

00:08:56,119 --> 00:09:03,559
create a patch proposed it just I create

00:08:59,569 --> 00:09:06,829
an issue propose a badge rest I and

00:09:03,559 --> 00:09:09,499
sometimes very interesting because you

00:09:06,829 --> 00:09:11,990
have created your patch and you can wait

00:09:09,499 --> 00:09:17,269
for six months before i review because

00:09:11,990 --> 00:09:19,699
we have some two or three reviewers if

00:09:17,269 --> 00:09:23,569
you want to contribute it's the good

00:09:19,699 --> 00:09:27,709
place at the good time yes of course the

00:09:23,569 --> 00:09:31,819
program the process is very slow I have

00:09:27,709 --> 00:09:36,230
some issues open issues and the Harappan

00:09:31,819 --> 00:09:39,170
since two years sometimes that's really

00:09:36,230 --> 00:09:41,809
difficult for for me because but why my

00:09:39,170 --> 00:09:45,110
patch is not melt in the South car we

00:09:41,809 --> 00:09:49,550
don't have time sorry yeah the last

00:09:45,110 --> 00:09:55,819
point just we try to mediate Python to

00:09:49,550 --> 00:09:57,679
get up bye-bye material yes yes yes you

00:09:55,819 --> 00:10:00,139
can create account you can use your hack

00:09:57,679 --> 00:10:03,410
on github just create a pull request I

00:10:00,139 --> 00:10:06,350
prefer that use usually when you try to

00:10:03,410 --> 00:10:09,499
create a patch firstly you download the

00:10:06,350 --> 00:10:11,809
branch you create your patch and you

00:10:09,499 --> 00:10:14,600
create a dif this defile you will send

00:10:11,809 --> 00:10:17,110
it with you will help load it to the the

00:10:14,600 --> 00:10:22,519
book tracker if there is a new version

00:10:17,110 --> 00:10:26,540
your patches just outdated so okay I

00:10:22,519 --> 00:10:30,019
know what can we do just firstly when

00:10:26,540 --> 00:10:31,549
you start maybe we can try to find the

00:10:30,019 --> 00:10:35,059
data race of Python and try to

00:10:31,549 --> 00:10:38,089
understand them in fact how can we find

00:10:35,059 --> 00:10:41,209
information firstly with the

00:10:38,089 --> 00:10:44,629
documentation the doc directory just the

00:10:41,209 --> 00:10:47,569
manual of item where you will find the

00:10:44,629 --> 00:10:49,699
syntax the reference of the language the

00:10:47,569 --> 00:10:53,089
reference of the libraries Santa stone

00:10:49,699 --> 00:10:54,460
the library you can buy some books David

00:10:53,089 --> 00:10:57,400
baselayer Dugan man

00:10:54,460 --> 00:11:00,850
have some good books that's a good

00:10:57,400 --> 00:11:04,690
references the day the grandma directory

00:11:00,850 --> 00:11:08,410
just the grandma with grandma is defined

00:11:04,690 --> 00:11:10,750
it's just a text for you does that if

00:11:08,410 --> 00:11:13,150
you want to modify hit you have the

00:11:10,750 --> 00:11:15,400
grandma for a directory in the past or

00:11:13,150 --> 00:11:18,130
directory because if you had a new

00:11:15,400 --> 00:11:21,850
keyword you have to like them and just

00:11:18,130 --> 00:11:26,110
improve the ground the parser and VST a

00:11:21,850 --> 00:11:28,090
bike you left or you have the lib

00:11:26,110 --> 00:11:31,240
directory just for the Python library

00:11:28,090 --> 00:11:33,280
python modules for example you have to

00:11:31,240 --> 00:11:35,500
tell intended lib you can not if you

00:11:33,280 --> 00:11:38,710
want to modify hit it's just in this

00:11:35,500 --> 00:11:42,340
directory for the mothers directory

00:11:38,710 --> 00:11:45,400
there's a sip she part of fightin for

00:11:42,340 --> 00:11:47,650
the object for example you want to to

00:11:45,400 --> 00:11:50,380
learn the implementation of the

00:11:47,650 --> 00:11:55,000
dictionary of Python you can go in the

00:11:50,380 --> 00:11:58,510
object directory okay hello then we have

00:11:55,000 --> 00:12:01,870
the program's directory it just the

00:11:58,510 --> 00:12:05,500
Python executable yeah because python is

00:12:01,870 --> 00:12:08,170
a small executed and fight Titan is a

00:12:05,500 --> 00:12:10,840
library you can load the library for if

00:12:08,170 --> 00:12:14,200
you want to embed the sauce pattern in

00:12:10,840 --> 00:12:16,210
your software okay about the

00:12:14,200 --> 00:12:17,860
documentation we have the reference for

00:12:16,210 --> 00:12:22,000
the language the reference for the

00:12:17,860 --> 00:12:24,130
library the reference for the C API if

00:12:22,000 --> 00:12:27,670
you want to learn we can read the

00:12:24,130 --> 00:12:32,320
documentation and sincerely we want a

00:12:27,670 --> 00:12:39,360
small tutorial who is an expert of us in

00:12:32,320 --> 00:12:44,499
here okay you have a new fix for you so

00:12:39,360 --> 00:12:47,869
just yes another guy no

00:12:44,499 --> 00:12:50,389
no it's really boring because you have

00:12:47,869 --> 00:12:54,529
pictures thinner and Andrew yeah are

00:12:50,389 --> 00:12:57,619
discussing on the on the table near the

00:12:54,529 --> 00:12:59,779
lunch and they try to improve the

00:12:57,619 --> 00:13:02,749
documentation about us inhale they want

00:12:59,779 --> 00:13:08,509
to create a tutorial so I have one

00:13:02,749 --> 00:13:14,239
question just one really just one what's

00:13:08,509 --> 00:13:17,059
the result of this expression okay for

00:13:14,239 --> 00:13:20,269
its not very difficult but for me I

00:13:17,059 --> 00:13:24,290
don't want to know this value I prefer

00:13:20,269 --> 00:13:26,149
to see the common line the lecture the

00:13:24,290 --> 00:13:29,869
parser the interpreter the compiler

00:13:26,149 --> 00:13:33,079
everything about that and when you start

00:13:29,869 --> 00:13:35,660
to modify Python okay you have the

00:13:33,079 --> 00:13:39,259
Python part but I'm just interested by

00:13:35,660 --> 00:13:43,639
the cic part when you execute the common

00:13:39,259 --> 00:13:45,619
line you have that firstly we have the

00:13:43,639 --> 00:13:47,720
common life of course the common line

00:13:45,619 --> 00:13:50,660
just executed by the python that seed

00:13:47,720 --> 00:13:53,419
file the python the chief I'll will load

00:13:50,660 --> 00:13:56,239
the Python library you can try on

00:13:53,419 --> 00:13:59,209
Windows OS X or just online X you will

00:13:56,239 --> 00:14:02,299
get the same result okay if you want to

00:13:59,209 --> 00:14:03,769
embed button with your software because

00:14:02,299 --> 00:14:08,239
you have developed a software and

00:14:03,769 --> 00:14:11,569
serious just use the python library okay

00:14:08,239 --> 00:14:15,139
so lip-lip pythons one solely about I

00:14:11,569 --> 00:14:17,299
don't know when you will execute the

00:14:15,139 --> 00:14:20,329
source code automatically we will

00:14:17,299 --> 00:14:23,809
initialize say pie turn and we try to

00:14:20,329 --> 00:14:27,799
load some models and read and read the

00:14:23,809 --> 00:14:31,429
source code convert it to nasty and

00:14:27,799 --> 00:14:34,129
executed ok so the lecturer the lecture

00:14:31,429 --> 00:14:38,059
is just define if you are interested of

00:14:34,129 --> 00:14:40,579
course is the topic of this talk you

00:14:38,059 --> 00:14:43,610
have the tokenizer at see the tokenizer

00:14:40,579 --> 00:14:47,089
will take a string in Python string we

00:14:43,610 --> 00:14:50,720
convert in some keyword some expression

00:14:47,089 --> 00:14:54,230
I'm not integrate you have the past dog

00:14:50,720 --> 00:14:57,150
and the tokenize but good for example we

00:14:54,230 --> 00:15:03,210
take X equal to more crews to

00:14:57,150 --> 00:15:06,750
we have this result waste my up Mouse we

00:15:03,210 --> 00:15:10,380
have six token each sue can ask one type

00:15:06,750 --> 00:15:13,430
and value okay you can learn with that

00:15:10,380 --> 00:15:19,160
if you want to use it for a disassembled

00:15:13,430 --> 00:15:19,160
if you want to DZ Z disassembled by turn

00:15:19,280 --> 00:15:25,530
yeah you know that we fight on three

00:15:23,040 --> 00:15:28,950
that five we has a new keyword to new

00:15:25,530 --> 00:15:31,740
keyword I think a weight in fact is not

00:15:28,950 --> 00:15:33,570
a real key word in Python it just in

00:15:31,740 --> 00:15:37,470
function of the definition of your code

00:15:33,570 --> 00:15:40,590
a keyword or not the person is really

00:15:37,470 --> 00:15:45,510
smart about that if you will make an

00:15:40,590 --> 00:15:50,840
example I sing it got true in this case

00:15:45,510 --> 00:15:55,980
it's just a name not a cured if we try I

00:15:50,840 --> 00:15:58,320
know that my icon no sorry yes if we

00:15:55,980 --> 00:16:02,490
check it's not in the key keyword list

00:15:58,320 --> 00:16:07,020
of Python it's not it's just yeah my

00:16:02,490 --> 00:16:09,330
name so know about the parser you have

00:16:07,020 --> 00:16:13,380
your torch and we can convert them in

00:16:09,330 --> 00:16:16,200
EST EST just that okay for this

00:16:13,380 --> 00:16:18,720
expression X equal to more too we have a

00:16:16,200 --> 00:16:22,080
module with a body in the body we have

00:16:18,720 --> 00:16:26,190
an equal and the equal is just name with

00:16:22,080 --> 00:16:30,450
an ID aquatics n we have the head where

00:16:26,190 --> 00:16:35,370
we will had the two numbers for the

00:16:30,450 --> 00:16:39,410
compiler you have the st i would like to

00:16:35,370 --> 00:16:42,390
convert it to about the bytecode just

00:16:39,410 --> 00:16:46,200
execute this source code compile you

00:16:42,390 --> 00:16:50,010
have your 3gs tea and you can convert it

00:16:46,200 --> 00:16:52,860
to the bytecode with this module we can

00:16:50,010 --> 00:16:54,480
see the bike on if you want more

00:16:52,860 --> 00:16:58,780
information you can read this

00:16:54,480 --> 00:17:02,440
documentation this path yeah I know

00:16:58,780 --> 00:17:05,850
okay followed by a cured in the sea part

00:17:02,440 --> 00:17:11,530
we have a definition of the flight

00:17:05,850 --> 00:17:15,250
definition the biker is just a compact

00:17:11,530 --> 00:17:18,160
numeric code one bite not a word just

00:17:15,250 --> 00:17:21,130
one bite the white card is just for

00:17:18,160 --> 00:17:24,310
table and when one byte code is just

00:17:21,130 --> 00:17:29,020
followed by by one parameter or by many

00:17:24,310 --> 00:17:30,730
parameters yes it's just used by the

00:17:29,020 --> 00:17:36,760
vector machine in the scales of their

00:17:30,730 --> 00:17:40,000
interpreter for the backyard when we

00:17:36,760 --> 00:17:42,760
have this empty file and try to convert

00:17:40,000 --> 00:17:45,550
it we will receive a bite cutter the

00:17:42,760 --> 00:17:48,790
biker is just nothing load comes zero

00:17:45,550 --> 00:17:51,340
and return the value just an empty when

00:17:48,790 --> 00:17:54,580
you create a new file an empty file the

00:17:51,340 --> 00:17:57,540
interpreter will execute it if you try

00:17:54,580 --> 00:18:00,720
with this function and try to convert it

00:17:57,540 --> 00:18:06,280
you will get the result of the bike oh

00:18:00,720 --> 00:18:08,470
okay you have the right card after that

00:18:06,280 --> 00:18:13,480
we try to optimize the bike each other

00:18:08,470 --> 00:18:17,890
with the peephole ER for example we have

00:18:13,480 --> 00:18:22,480
X equal to more to the system will

00:18:17,890 --> 00:18:27,600
convert it to 40 okay II it doesn't

00:18:22,480 --> 00:18:31,150
don't want to try to add two more to

00:18:27,600 --> 00:18:36,640
example another example if one print

00:18:31,150 --> 00:18:39,750
hello we have this bytecode x0 there's

00:18:36,640 --> 00:18:44,770
nothing we remove the dead cutter okay

00:18:39,750 --> 00:18:46,600
she added the peephole ER so no we have

00:18:44,770 --> 00:18:50,080
the people are with the bytecode how to

00:18:46,600 --> 00:18:53,200
interpret it the interpreter is just a

00:18:50,080 --> 00:18:55,750
virtual stack machine this virtual

00:18:53,200 --> 00:18:57,640
machine will execute the backyard it's

00:18:55,750 --> 00:18:59,980
just a stack we push an element with

00:18:57,640 --> 00:19:04,440
pocket we execute something with puppet

00:18:59,980 --> 00:19:06,970
okay so a small example where we try to

00:19:04,440 --> 00:19:10,610
create a small interpreter maybe there

00:19:06,970 --> 00:19:13,600
is a bag I didn't tested but

00:19:10,610 --> 00:19:15,770
just we have a stack a pointer on the

00:19:13,600 --> 00:19:21,559
instruction the Korean instruction and

00:19:15,770 --> 00:19:25,570
we ran we read each instruction in this

00:19:21,559 --> 00:19:29,929
case I just create a small bite code

00:19:25,570 --> 00:19:32,929
example firstly I try to push five push

00:19:29,929 --> 00:19:37,100
again three and push them and the rest

00:19:32,929 --> 00:19:40,070
is just a dad and pop when i'm going to

00:19:37,100 --> 00:19:43,570
read the source code the bytecode by a

00:19:40,070 --> 00:19:48,290
via interpreter if i push 5 in the stack

00:19:43,570 --> 00:19:52,780
for three push 10 just add i will pop

00:19:48,290 --> 00:19:55,370
the two last element and i get 12 13

00:19:52,780 --> 00:19:59,480
after that i will had another when you

00:19:55,370 --> 00:20:03,860
take the second the 22 value on the

00:19:59,480 --> 00:20:07,880
stack and i get 18 adjust that i can get

00:20:03,860 --> 00:20:11,570
the pop i will empty the i will arouse

00:20:07,880 --> 00:20:13,880
the stack so do you remember this

00:20:11,570 --> 00:20:19,309
function just that we have the part of

00:20:13,880 --> 00:20:23,660
the backyard okay and yeah we have the

00:20:19,309 --> 00:20:26,480
biker just data and now we have the sea

00:20:23,660 --> 00:20:28,270
part of the bike executed by the virtual

00:20:26,480 --> 00:20:32,470
machine when you execute the bytecode

00:20:28,270 --> 00:20:36,890
for example we had we have the load fast

00:20:32,470 --> 00:20:39,350
here in the example the load fast will

00:20:36,890 --> 00:20:42,470
execute this code just ok i'm going to

00:20:39,350 --> 00:20:44,210
push something in the in the stack of

00:20:42,470 --> 00:20:48,049
the memory of fightin in the stack frame

00:20:44,210 --> 00:20:50,390
in the frame for the lowest cones i try

00:20:48,049 --> 00:20:52,880
to get the value from the constants in

00:20:50,390 --> 00:20:55,900
the global for adjusting the locals and

00:20:52,880 --> 00:21:02,330
try to use them I just push in the stack

00:20:55,900 --> 00:21:05,179
ok when I try to use the binary had the

00:21:02,330 --> 00:21:08,390
hot girl the system will check if it's a

00:21:05,179 --> 00:21:11,030
string if not a string ok maybe a number

00:21:08,390 --> 00:21:14,900
this is a strange we will create a

00:21:11,030 --> 00:21:19,100
concatenation and it's just a number we

00:21:14,900 --> 00:21:22,610
just add one to North one and

00:21:19,100 --> 00:21:26,299
and after that just push the raise it on

00:21:22,610 --> 00:21:31,580
the stack for the store fast we have the

00:21:26,299 --> 00:21:36,830
source code of item okay so for the rest

00:21:31,580 --> 00:21:40,850
and just for the fun if you read the

00:21:36,830 --> 00:21:45,289
south courtice if item no I thing is

00:21:40,850 --> 00:21:47,710
sleeping yeah I'm CP the in the source

00:21:45,289 --> 00:21:52,970
code of Python we have the evolution

00:21:47,710 --> 00:21:55,640
start what time for me it's okay we have

00:21:52,970 --> 00:21:58,549
the dysfunction by heavily by frame x

00:21:55,640 --> 00:22:01,850
the system will try to read the source

00:21:58,549 --> 00:22:03,980
code and ever the source code the main

00:22:01,850 --> 00:22:06,590
function is just this function I have a

00:22:03,980 --> 00:22:09,289
leaf I've ever frame a function with two

00:22:06,590 --> 00:22:13,789
thousand lines of color just one

00:22:09,289 --> 00:22:17,360
function okay and there is a hug and in

00:22:13,789 --> 00:22:19,159
the function because sometimes some

00:22:17,360 --> 00:22:22,250
compilers c compiler does not support

00:22:19,159 --> 00:22:23,960
the feature and we create the default

00:22:22,250 --> 00:22:29,360
well in the default there is another's

00:22:23,960 --> 00:22:34,190
we switch for the next byte code okay so

00:22:29,360 --> 00:22:37,429
i have a summary the summary just weird

00:22:34,190 --> 00:22:40,309
to improve the documentation review some

00:22:37,429 --> 00:22:43,130
patch and try to improve the issues if

00:22:40,309 --> 00:22:49,880
you have any program with fightin and

00:22:43,130 --> 00:22:54,049
just that that's real fun oh so sorry

00:22:49,880 --> 00:22:55,700
yeah i like because when you put it on

00:22:54,049 --> 00:22:59,000
Mike here because I'm not a card avila

00:22:55,700 --> 00:23:04,309
liver / but I try to have I am a

00:22:59,000 --> 00:23:09,380
contributor to seep item yes good good

00:23:04,309 --> 00:23:13,580
for you get now a small example I wanted

00:23:09,380 --> 00:23:18,049
to show you about an issue a not an

00:23:13,580 --> 00:23:20,360
issue a small functionality for me come

00:23:18,049 --> 00:23:25,490
on are you

00:23:20,360 --> 00:23:29,809
dick no bye-bye okay come on I just

00:23:25,490 --> 00:23:33,320
modify C Python just we have a small

00:23:29,809 --> 00:23:36,080
patch and sometimes I want to learn the

00:23:33,320 --> 00:23:38,870
bytecode ok and would like to create a

00:23:36,080 --> 00:23:41,360
small debugger where you see on the left

00:23:38,870 --> 00:23:43,520
the source code the Pythons house card

00:23:41,360 --> 00:23:48,710
on the right byte code ok we like to

00:23:43,520 --> 00:23:52,549
create that here's my example oh yeah

00:23:48,710 --> 00:23:57,940
come on ok is the last version of Python

00:23:52,549 --> 00:24:01,549
the version of today if you print hello

00:23:57,940 --> 00:24:03,890
there is just a low there is a missing

00:24:01,549 --> 00:24:06,340
there's a feature in Python and you

00:24:03,890 --> 00:24:06,340
don't know

00:24:11,100 --> 00:24:19,710
okay if you want to see the biker love C

00:24:16,590 --> 00:24:22,370
Python this feature is in the source

00:24:19,710 --> 00:24:28,070
code of Python since two or three years

00:24:22,370 --> 00:24:31,440
it's not you okay if you define address

00:24:28,070 --> 00:24:36,559
you will get the backyard and the value

00:24:31,440 --> 00:24:41,160
of their argument ok so what an account

00:24:36,559 --> 00:24:48,200
mmm yeah I know two minutes where's my

00:24:41,160 --> 00:24:48,200
sorry my mouth yeah

00:24:55,650 --> 00:25:00,010
thank you very much dear fan um can I

00:24:58,720 --> 00:25:01,750
just say it's absolutely wonderful to

00:25:00,010 --> 00:25:03,850
know that someone can go from not being

00:25:01,750 --> 00:25:05,530
a contributor to go into a conference

00:25:03,850 --> 00:25:07,060
and becoming one so three years ago

00:25:05,530 --> 00:25:08,620
stiff and could not have given that talk

00:25:07,060 --> 00:25:10,660
and now he really is an actual

00:25:08,620 --> 00:25:12,340
contributor to python anyone can do it

00:25:10,660 --> 00:25:14,680
not that I'm saying mr. fan isn't a

00:25:12,340 --> 00:25:16,510
wonderful person but it makes it real

00:25:14,680 --> 00:25:17,860
you know so is there a quick question

00:25:16,510 --> 00:25:20,410
before we move on to the next door gone

00:25:17,860 --> 00:25:21,640
one question you can have the honor of

00:25:20,410 --> 00:25:23,980
being the person that asked that

00:25:21,640 --> 00:25:32,740
question it will make you special let's

00:25:23,980 --> 00:25:36,520
do it yes is the documentation available

00:25:32,740 --> 00:25:39,640
in different languages and is LP needed

00:25:36,520 --> 00:25:41,350
in those translations I'm sorry the

00:25:39,640 --> 00:25:44,290
documentation is it very very different

00:25:41,350 --> 00:25:47,050
languages like in French Italian Spanish

00:25:44,290 --> 00:25:49,060
oh it's not only in English now the

00:25:47,050 --> 00:25:51,730
documentation is just in an aggressive

00:25:49,060 --> 00:25:55,120
course because of the surf rounds but I

00:25:51,730 --> 00:25:58,450
know that in France there is a group the

00:25:55,120 --> 00:26:01,300
FP they try to come to translate in

00:25:58,450 --> 00:26:03,640
French know if you want you can download

00:26:01,300 --> 00:26:05,950
the documentation of course it's just a

00:26:03,640 --> 00:26:09,460
clone of the repository try to translate

00:26:05,950 --> 00:26:11,920
it and in the last version of last since

00:26:09,460 --> 00:26:15,280
two or three years you have a feature in

00:26:11,920 --> 00:26:19,060
things where you can do translate we can

00:26:15,280 --> 00:26:24,040
create a French or Italian part of the

00:26:19,060 --> 00:26:25,780
documentation okay all right thank you

00:26:24,040 --> 00:26:28,110
me in thanking Stefan once again thank

00:26:25,780 --> 00:26:28,110

YouTube URL: https://www.youtube.com/watch?v=R0lDKw0FQSI


