Title: Make your APIs Developer-friendly – Aidan Cunniffe
Publication date: 2021-04-29
Playlist: DevX Conf
Description: 
	APIs are not only ‘programming interfaces’ they’re how teams split work, collaborate with one another, share capabilities, and make awesome software. Most APIs are internal and we’re all in an API relationship with other teams of developers. So let’s talk about how good API design, empathy, and modern tools can help you build better relationships with the teams around you, great APIs, and amazing products. I’ll be sharing some stories from my time in the API space, tools and practices to explore, and some slides from a few special guests. If you produce, consume or live with an API — you should definitely make time for this talk!

About DevX Conf:
DevX Conf is a two-day virtual conference. It's a space where creators collaborate, listen, discuss and declutter our workflows, toolchains, and minds. To improve developer experience. Organized by Gitpod.
https://devxconf.org/
Captions: 
	00:00:13,840 --> 00:00:16,400
hey everybody

00:00:14,880 --> 00:00:18,240
thank you so much for clicking on my

00:00:16,400 --> 00:00:21,199
face uh and as a reward

00:00:18,240 --> 00:00:23,119
we are going to watch a uh 10 second

00:00:21,199 --> 00:00:24,880
rube goldberg machine video

00:00:23,119 --> 00:00:26,720
one of the few the creative commons

00:00:24,880 --> 00:00:28,480
allows me to share today

00:00:26,720 --> 00:00:30,160
uh so here we go we've got our nice

00:00:28,480 --> 00:00:34,320
airplane coming in

00:00:30,160 --> 00:00:37,840
uh boom hits the balloon

00:00:34,320 --> 00:00:39,840
cuts a rope because of a soccer ball

00:00:37,840 --> 00:00:41,440
and then that sets off the rest of the

00:00:39,840 --> 00:00:44,079
chain reaction

00:00:41,440 --> 00:00:45,920
um so i think this is like a universal

00:00:44,079 --> 00:00:48,079
thing for engineers we have all

00:00:45,920 --> 00:00:50,000
fallen in love with uh rube goldberg

00:00:48,079 --> 00:00:51,039
machine videos we've all seen them at

00:00:50,000 --> 00:00:52,559
museums

00:00:51,039 --> 00:00:54,320
um and i don't know about you guys but i

00:00:52,559 --> 00:00:55,360
can look at them for hours and just get

00:00:54,320 --> 00:00:57,120
completely immersed

00:00:55,360 --> 00:00:59,199
in all the tiny little intricate

00:00:57,120 --> 00:01:00,000
decisions that people have made over

00:00:59,199 --> 00:01:03,120
time

00:01:00,000 --> 00:01:06,240
do i sense a segway so let's talk about

00:01:03,120 --> 00:01:07,840
apis um i think for for

00:01:06,240 --> 00:01:09,760
like one moment we should all just step

00:01:07,840 --> 00:01:12,720
back and imagine

00:01:09,760 --> 00:01:13,119
that you and all the developers around

00:01:12,720 --> 00:01:14,960
you

00:01:13,119 --> 00:01:17,360
are building something way bigger than

00:01:14,960 --> 00:01:18,880
yourselves way bigger than your teams

00:01:17,360 --> 00:01:21,119
and bringing together all these separate

00:01:18,880 --> 00:01:24,240
talents that you have the knowledge

00:01:21,119 --> 00:01:25,360
um the time and all the sort of passion

00:01:24,240 --> 00:01:26,720
you put into your work

00:01:25,360 --> 00:01:29,040
to build something meaningful that's

00:01:26,720 --> 00:01:31,040
like greater than the sum of its parts

00:01:29,040 --> 00:01:32,320
well there's there's good news uh you're

00:01:31,040 --> 00:01:34,799
already doing that

00:01:32,320 --> 00:01:35,439
every single day and now imagine for a

00:01:34,799 --> 00:01:37,600
moment that you

00:01:35,439 --> 00:01:38,560
really cared about these developers that

00:01:37,600 --> 00:01:40,560
you're working with

00:01:38,560 --> 00:01:42,720
these collaborators who you're building

00:01:40,560 --> 00:01:43,360
giant technical rube goldberg machines

00:01:42,720 --> 00:01:45,439
with

00:01:43,360 --> 00:01:46,640
um what if you cared about them and they

00:01:45,439 --> 00:01:48,640
cared about you

00:01:46,640 --> 00:01:50,560
uh what if if anything would you do

00:01:48,640 --> 00:01:52,320
differently um i think these are all the

00:01:50,560 --> 00:01:55,439
reasons why we come together today here

00:01:52,320 --> 00:01:57,200
um at this conference it's all about

00:01:55,439 --> 00:01:59,200
making the daily lives of developers

00:01:57,200 --> 00:02:01,920
better and as we all know

00:01:59,200 --> 00:02:02,880
um a tiny part of that story is about

00:02:01,920 --> 00:02:05,200
technology

00:02:02,880 --> 00:02:06,640
but the rest of it is all about humans

00:02:05,200 --> 00:02:07,280
so today i want to talk a little bit

00:02:06,640 --> 00:02:10,479
about

00:02:07,280 --> 00:02:12,720
how to make your apis developer friendly

00:02:10,479 --> 00:02:14,720
i'm aiden kniff i'm the creator of the

00:02:12,720 --> 00:02:17,040
optic open source project

00:02:14,720 --> 00:02:18,000
which is building a lot of modern api

00:02:17,040 --> 00:02:20,319
tooling

00:02:18,000 --> 00:02:22,000
that's inspired by git and is designed

00:02:20,319 --> 00:02:24,400
to make collaborating on your apis

00:02:22,000 --> 00:02:25,599
a lot easier so you could drop optic

00:02:24,400 --> 00:02:27,120
into your project today

00:02:25,599 --> 00:02:28,800
in a couple of minutes it would document

00:02:27,120 --> 00:02:30,640
your entire api

00:02:28,800 --> 00:02:32,239
and then whenever you change your api

00:02:30,640 --> 00:02:34,400
let's say you add new endpoints

00:02:32,239 --> 00:02:36,160
or you make planned or unplanned changes

00:02:34,400 --> 00:02:37,519
to an existing endpoint

00:02:36,160 --> 00:02:39,200
all of those changes become

00:02:37,519 --> 00:02:40,879
conversations that you can have inside

00:02:39,200 --> 00:02:43,040
of a code review so

00:02:40,879 --> 00:02:44,080
they show up in your pr and they say

00:02:43,040 --> 00:02:46,640
aiden has changed

00:02:44,080 --> 00:02:49,120
this code and these apis are affected by

00:02:46,640 --> 00:02:51,840
it here are the api changes

00:02:49,120 --> 00:02:52,959
and the whole idea is basically making

00:02:51,840 --> 00:02:54,879
apis

00:02:52,959 --> 00:02:56,319
much easier to evolve and talk about

00:02:54,879 --> 00:02:59,280
with teams

00:02:56,319 --> 00:03:00,560
so you can see kind of how this is

00:02:59,280 --> 00:03:01,120
inspired by the research we've been

00:03:00,560 --> 00:03:02,879
doing

00:03:01,120 --> 00:03:04,480
this talk is not about optic but it's

00:03:02,879 --> 00:03:06,560
about all of the

00:03:04,480 --> 00:03:08,000
conversations i've had over the last

00:03:06,560 --> 00:03:09,680
year building the project

00:03:08,000 --> 00:03:11,920
and some mindsets i stepped away with

00:03:09,680 --> 00:03:12,640
about kind of the problem at a bigger

00:03:11,920 --> 00:03:14,480
scale

00:03:12,640 --> 00:03:16,000
and how we can all make our apis more

00:03:14,480 --> 00:03:17,680
developer friendly or

00:03:16,000 --> 00:03:19,280
to make this a lot more fun we can talk

00:03:17,680 --> 00:03:22,480
about how to build a better

00:03:19,280 --> 00:03:23,519
digital goldberg or a digital rube

00:03:22,480 --> 00:03:25,440
goldberg machine

00:03:23,519 --> 00:03:27,200
and have fun while we do it so

00:03:25,440 --> 00:03:30,720
oftentimes we think about

00:03:27,200 --> 00:03:31,920
uh the apis as and i think in the

00:03:30,720 --> 00:03:32,959
example of a group goldberg machine the

00:03:31,920 --> 00:03:34,959
api is like

00:03:32,959 --> 00:03:36,239
every single interface where like one

00:03:34,959 --> 00:03:38,159
part of the regular machine

00:03:36,239 --> 00:03:40,000
touches another part uh so you could

00:03:38,159 --> 00:03:42,400
think of the api as this moment where

00:03:40,000 --> 00:03:43,920
um the the airplane hits the balloon the

00:03:42,400 --> 00:03:46,400
balloon pops and then a lot of

00:03:43,920 --> 00:03:47,120
things happen and we have good ways of

00:03:46,400 --> 00:03:49,440
talking about

00:03:47,120 --> 00:03:51,440
how to make api interfaces themselves

00:03:49,440 --> 00:03:52,400
better how to make them more evolvable

00:03:51,440 --> 00:03:54,319
what design

00:03:52,400 --> 00:03:56,000
guides we should follow what best

00:03:54,319 --> 00:03:57,760
practices we should adopt

00:03:56,000 --> 00:03:59,599
but we don't really talk about the other

00:03:57,760 --> 00:04:01,840
part of the rube goldberg machine

00:03:59,599 --> 00:04:03,439
behind every long youtube video of a

00:04:01,840 --> 00:04:05,760
massive rube goldberg machine

00:04:03,439 --> 00:04:07,599
there is a video about how it was built

00:04:05,760 --> 00:04:09,040
and those to me have always been a lot

00:04:07,599 --> 00:04:10,400
more interesting because you have a

00:04:09,040 --> 00:04:13,360
bunch of engineers

00:04:10,400 --> 00:04:14,400
obviously very smart people but they are

00:04:13,360 --> 00:04:15,599
wholly aware

00:04:14,400 --> 00:04:18,120
in those moments that they're setting

00:04:15,599 --> 00:04:20,560
things up that they are part of a

00:04:18,120 --> 00:04:21,600
socio-technical system uh they are

00:04:20,560 --> 00:04:23,280
relying on

00:04:21,600 --> 00:04:25,759
people to build their part of the

00:04:23,280 --> 00:04:28,320
machine in a way that makes

00:04:25,759 --> 00:04:29,600
um the output of that part which becomes

00:04:28,320 --> 00:04:32,560
the input to their part

00:04:29,600 --> 00:04:33,199
uh knowable understandable modelable and

00:04:32,560 --> 00:04:34,800
reliable

00:04:33,199 --> 00:04:36,240
so that they can build their piece well

00:04:34,800 --> 00:04:38,240
as um in addition

00:04:36,240 --> 00:04:39,520
and i think this actually kind of feels

00:04:38,240 --> 00:04:41,360
very close to what we're doing as

00:04:39,520 --> 00:04:43,600
developers now we're building these

00:04:41,360 --> 00:04:45,120
gigantic systems that all need to fit

00:04:43,600 --> 00:04:47,360
together in nice ways

00:04:45,120 --> 00:04:48,639
and um one would ask why would we ever

00:04:47,360 --> 00:04:50,560
do that like why would we

00:04:48,639 --> 00:04:52,080
why would we separate all of our

00:04:50,560 --> 00:04:52,880
concerns and build all these complicated

00:04:52,080 --> 00:04:54,880
systems

00:04:52,880 --> 00:04:56,080
um you know and there's always been push

00:04:54,880 --> 00:04:57,280
back to microservices

00:04:56,080 --> 00:04:58,960
and some of these choices that we are

00:04:57,280 --> 00:05:00,560
making but i think at the end of the day

00:04:58,960 --> 00:05:02,479
it comes down to something

00:05:00,560 --> 00:05:04,479
that now reveals i'm a little more

00:05:02,479 --> 00:05:07,360
economist than developer sometimes

00:05:04,479 --> 00:05:10,400
which is that apis constitute how we

00:05:07,360 --> 00:05:12,639
divide labor and how we collaborate

00:05:10,400 --> 00:05:15,039
you used to collaborate by sharing code

00:05:12,639 --> 00:05:16,960
with dependency managers with libraries

00:05:15,039 --> 00:05:18,160
um by copy and pasting which i

00:05:16,960 --> 00:05:20,240
definitely have done in the past many

00:05:18,160 --> 00:05:22,240
many many years ago

00:05:20,240 --> 00:05:24,160
and that's uh that's a certain kind of

00:05:22,240 --> 00:05:27,199
collaboration but you could never

00:05:24,160 --> 00:05:30,880
like import the forgot password feature

00:05:27,199 --> 00:05:32,320
or uh sso or billing

00:05:30,880 --> 00:05:33,840
or the ability to ship something

00:05:32,320 --> 00:05:35,039
anywhere in the world with a with a

00:05:33,840 --> 00:05:36,160
little library that's

00:05:35,039 --> 00:05:39,280
self-contained running on your

00:05:36,160 --> 00:05:40,080
infrastructure apis have allowed us to

00:05:39,280 --> 00:05:43,360
basically

00:05:40,080 --> 00:05:46,240
uh import entire capabilities with their

00:05:43,360 --> 00:05:48,479
own infrastructure their own life cycles

00:05:46,240 --> 00:05:50,720
and and truly like depend on other

00:05:48,479 --> 00:05:52,639
people to build features for us

00:05:50,720 --> 00:05:54,720
and this has led to this massive growth

00:05:52,639 --> 00:05:56,639
in what what technology is able to do

00:05:54,720 --> 00:05:57,759
just like dividing labor throughout

00:05:56,639 --> 00:05:59,840
human history

00:05:57,759 --> 00:06:01,600
has led to massive changes in how things

00:05:59,840 --> 00:06:03,840
end up working

00:06:01,600 --> 00:06:06,319
and i think this can be constituted

00:06:03,840 --> 00:06:08,400
again in like a very simple statement

00:06:06,319 --> 00:06:10,240
i don't know how the billing works and

00:06:08,400 --> 00:06:12,080
you don't know how the shipping works

00:06:10,240 --> 00:06:13,520
but somehow when customers buy a

00:06:12,080 --> 00:06:15,759
textbook on our website

00:06:13,520 --> 00:06:17,280
it gets delivered uh you know this is

00:06:15,759 --> 00:06:19,759
this is definitely

00:06:17,280 --> 00:06:20,880
greater than the sum of its parts i

00:06:19,759 --> 00:06:22,000
don't know everything you don't know

00:06:20,880 --> 00:06:23,520
everything and yet when we put these

00:06:22,000 --> 00:06:25,360
pieces together

00:06:23,520 --> 00:06:26,880
something completely emergent happens

00:06:25,360 --> 00:06:27,759
and that's the the beauty of this

00:06:26,880 --> 00:06:30,080
complexity

00:06:27,759 --> 00:06:31,199
it's also the curse of the complexity

00:06:30,080 --> 00:06:32,800
but if it is

00:06:31,199 --> 00:06:35,120
complex if we are building massive

00:06:32,800 --> 00:06:36,720
systems then by definition we're doing

00:06:35,120 --> 00:06:40,000
it collaboratively

00:06:36,720 --> 00:06:42,319
because we need to divide labor um for

00:06:40,000 --> 00:06:43,759
three main reasons one is you have

00:06:42,319 --> 00:06:46,080
knowledge that i do not have

00:06:43,759 --> 00:06:47,360
that would take me a long time to learn

00:06:46,080 --> 00:06:49,440
you have time

00:06:47,360 --> 00:06:50,960
uh that is better spent doing your part

00:06:49,440 --> 00:06:52,639
of the project than my time

00:06:50,960 --> 00:06:53,759
being spent on that part of the project

00:06:52,639 --> 00:06:54,560
related to the fact that you have more

00:06:53,759 --> 00:06:56,720
knowledge

00:06:54,560 --> 00:06:58,080
um and someone has better infrastructure

00:06:56,720 --> 00:06:59,840
um to do

00:06:58,080 --> 00:07:02,319
the task or do the background processing

00:06:59,840 --> 00:07:04,560
that has to happen to make all this work

00:07:02,319 --> 00:07:05,520
so these are the the famous death stars

00:07:04,560 --> 00:07:06,560
that were going around the internet

00:07:05,520 --> 00:07:08,880
around a year ago

00:07:06,560 --> 00:07:10,160
for amazon and netflix these gigantic

00:07:08,880 --> 00:07:12,080
service maps and

00:07:10,160 --> 00:07:13,520
they seem big imposing and scary to

00:07:12,080 --> 00:07:15,120
model and they are big imposing and

00:07:13,520 --> 00:07:16,400
scary to model

00:07:15,120 --> 00:07:18,639
the only difference between netflix and

00:07:16,400 --> 00:07:19,360
amazon and your company is that netflix

00:07:18,639 --> 00:07:21,759
and amazon

00:07:19,360 --> 00:07:22,479
have actually done the modeling and the

00:07:21,759 --> 00:07:23,680
rest of us

00:07:22,479 --> 00:07:25,759
have something that looks like this but

00:07:23,680 --> 00:07:27,440
we do not know what it looks like

00:07:25,759 --> 00:07:29,360
i'm sure some of you do have a better

00:07:27,440 --> 00:07:30,800
idea than others but for most of us we

00:07:29,360 --> 00:07:32,800
actually don't know what this topography

00:07:30,800 --> 00:07:34,720
looks like in our own company

00:07:32,800 --> 00:07:37,039
and each of these nodes they represent

00:07:34,720 --> 00:07:39,280
more than just a service and an api

00:07:37,039 --> 00:07:40,960
these are actual jobs that we are doing

00:07:39,280 --> 00:07:43,840
for each other

00:07:40,960 --> 00:07:45,280
so public apis they're well documented

00:07:43,840 --> 00:07:48,720
they are well managed

00:07:45,280 --> 00:07:51,680
and of course they are because twilio

00:07:48,720 --> 00:07:53,199
stripe plaid these large api companies

00:07:51,680 --> 00:07:55,759
have so much to lose

00:07:53,199 --> 00:07:57,840
if their apis aren't good and a ton of

00:07:55,759 --> 00:07:58,639
incentives processes tools they build

00:07:57,840 --> 00:08:01,120
in-house

00:07:58,639 --> 00:08:01,840
to make it so that their apis you know

00:08:01,120 --> 00:08:03,280
never break

00:08:01,840 --> 00:08:06,080
and are well documented and easily

00:08:03,280 --> 00:08:08,800
evolvable but for the rest of us

00:08:06,080 --> 00:08:09,840
most of our api experience is internal

00:08:08,800 --> 00:08:11,520
apis

00:08:09,840 --> 00:08:12,639
it's the team over there or the team

00:08:11,520 --> 00:08:13,840
over there or the team over there that

00:08:12,639 --> 00:08:15,840
we're collaborating with

00:08:13,840 --> 00:08:18,080
and internal apis tend to be more wild

00:08:15,840 --> 00:08:19,039
west um which is interesting like we

00:08:18,080 --> 00:08:20,960
have this iceberg

00:08:19,039 --> 00:08:22,720
where we uh you know the tip of it is

00:08:20,960 --> 00:08:24,720
the public apis where there's a lot of

00:08:22,720 --> 00:08:26,319
good practices and a lot of

00:08:24,720 --> 00:08:27,520
good examples of documentation and then

00:08:26,319 --> 00:08:29,520
there's like everything else which is

00:08:27,520 --> 00:08:30,879
the apis we all use daily

00:08:29,520 --> 00:08:32,800
and to me that's like the interesting

00:08:30,879 --> 00:08:34,399
opportunity because i want to

00:08:32,800 --> 00:08:35,919
you know spend my time trying to make

00:08:34,399 --> 00:08:37,599
things better that the rest of us are

00:08:35,919 --> 00:08:39,200
doing daily

00:08:37,599 --> 00:08:41,200
and there seems to be a ton of leverage

00:08:39,200 --> 00:08:42,000
in solving this wild west internal api

00:08:41,200 --> 00:08:44,720
problem

00:08:42,000 --> 00:08:46,720
so let's talk about that a little more

00:08:44,720 --> 00:08:48,080
there are a lot of internal api

00:08:46,720 --> 00:08:50,399
challenges

00:08:48,080 --> 00:08:52,240
if you're a consumer you often are

00:08:50,399 --> 00:08:54,959
wondering how do i use

00:08:52,240 --> 00:08:55,760
this api you also often find yourself

00:08:54,959 --> 00:08:58,240
wondering

00:08:55,760 --> 00:08:59,680
um given some new use case you have is

00:08:58,240 --> 00:09:01,200
there an api already built for this that

00:08:59,680 --> 00:09:02,160
i can use that the company's already set

00:09:01,200 --> 00:09:04,560
up

00:09:02,160 --> 00:09:06,800
is that new api stable how often does it

00:09:04,560 --> 00:09:08,160
change am i

00:09:06,800 --> 00:09:09,920
swallowing an integration that's going

00:09:08,160 --> 00:09:11,440
to take me an hour but then will

00:09:09,920 --> 00:09:13,279
also take an hour every single week for

00:09:11,440 --> 00:09:14,160
the next year or is it going to take me

00:09:13,279 --> 00:09:15,600
10 hours up front

00:09:14,160 --> 00:09:17,680
but it's going to be stable and never

00:09:15,600 --> 00:09:19,040
change afterward and robust

00:09:17,680 --> 00:09:20,160
these are trade-offs we all will make

00:09:19,040 --> 00:09:22,080
them but we don't always have the

00:09:20,160 --> 00:09:23,600
information we need to make them well is

00:09:22,080 --> 00:09:24,880
there a better api out there for what i

00:09:23,600 --> 00:09:26,000
need like i found this one or someone

00:09:24,880 --> 00:09:27,839
told me use this one was there a better

00:09:26,000 --> 00:09:30,000
one out there that i should be using

00:09:27,839 --> 00:09:31,360
and if i need something new where and

00:09:30,000 --> 00:09:33,680
how do i ask for it

00:09:31,360 --> 00:09:35,360
who's responsible for this there's not

00:09:33,680 --> 00:09:36,959
often a good a good

00:09:35,360 --> 00:09:39,279
sort of process for asking for new

00:09:36,959 --> 00:09:41,760
things in these apis

00:09:39,279 --> 00:09:42,880
if you're a producer it's always a

00:09:41,760 --> 00:09:44,000
challenge to figure out how do we

00:09:42,880 --> 00:09:45,440
document the api

00:09:44,000 --> 00:09:47,839
how do we keep that documentation up to

00:09:45,440 --> 00:09:49,360
date people have tried everything

00:09:47,839 --> 00:09:51,600
but there haven't been good tools and

00:09:49,360 --> 00:09:53,360
new processes that make this easy for

00:09:51,600 --> 00:09:54,880
for um for teams even though they know

00:09:53,360 --> 00:09:57,680
it's really important

00:09:54,880 --> 00:09:58,560
also what parts of my api are actually

00:09:57,680 --> 00:10:01,279
important

00:09:58,560 --> 00:10:01,680
to which teams what are their use cases

00:10:01,279 --> 00:10:03,920
um

00:10:01,680 --> 00:10:06,640
perhaps a lot of my api isn't being used

00:10:03,920 --> 00:10:09,360
anymore why am i still maintaining it

00:10:06,640 --> 00:10:10,880
is it safe to change this api um is it

00:10:09,360 --> 00:10:12,560
being used by a lot of people

00:10:10,880 --> 00:10:14,399
can i talk to those people do they have

00:10:12,560 --> 00:10:16,800
time to make changes if i have to break

00:10:14,399 --> 00:10:18,800
the api for some reason

00:10:16,800 --> 00:10:20,560
and who will be affected you know by

00:10:18,800 --> 00:10:22,320
each change that i make

00:10:20,560 --> 00:10:24,000
um this thing over here in the corner

00:10:22,320 --> 00:10:25,360
might seem innocuous but but is it

00:10:24,000 --> 00:10:27,360
affecting a legacy system that will

00:10:25,360 --> 00:10:28,160
never be updated again um or is it

00:10:27,360 --> 00:10:30,160
affecting like

00:10:28,160 --> 00:10:32,640
you know this new r d project where the

00:10:30,160 --> 00:10:34,480
team has some bandwidth to make a change

00:10:32,640 --> 00:10:36,480
we just don't know we don't understand

00:10:34,480 --> 00:10:37,920
these big death stars in our company

00:10:36,480 --> 00:10:41,680
which makes a lot of the decision making

00:10:37,920 --> 00:10:44,240
much more opaque and hard to do right

00:10:41,680 --> 00:10:45,519
but there's always these two constants

00:10:44,240 --> 00:10:46,079
so we're always going to be building new

00:10:45,519 --> 00:10:47,200
tracks

00:10:46,079 --> 00:10:48,240
there are always new features and new

00:10:47,200 --> 00:10:50,800
deliverables and new things we have to

00:10:48,240 --> 00:10:52,000
work on and the api that the apis that

00:10:50,800 --> 00:10:53,519
and the business that we're building

00:10:52,000 --> 00:10:54,240
them for are always going to be changing

00:10:53,519 --> 00:10:56,800
so like

00:10:54,240 --> 00:10:57,440
the fact that the tracks ever meet up um

00:10:56,800 --> 00:10:59,200
in the middle

00:10:57,440 --> 00:11:00,959
is like the miracle the fact that like

00:10:59,200 --> 00:11:03,360
the world currently exists

00:11:00,959 --> 00:11:04,800
and uh all the apis are not broken is a

00:11:03,360 --> 00:11:05,360
miracle and it's a testament to the fact

00:11:04,800 --> 00:11:06,959
that

00:11:05,360 --> 00:11:08,560
um engineers are already having these

00:11:06,959 --> 00:11:09,920
conversations and already working hard

00:11:08,560 --> 00:11:12,399
to align with one another

00:11:09,920 --> 00:11:13,519
um and i see those as like little nudges

00:11:12,399 --> 00:11:14,000
like the tracks are diverging and

00:11:13,519 --> 00:11:15,519
there's little

00:11:14,000 --> 00:11:17,440
nudges that are pushing us kind of back

00:11:15,519 --> 00:11:18,160
into alignment and this is really

00:11:17,440 --> 00:11:20,000
awesome

00:11:18,160 --> 00:11:22,079
but i think it can be way easier and

00:11:20,000 --> 00:11:24,480
have a lot less friction

00:11:22,079 --> 00:11:25,360
and i think part of this just comes down

00:11:24,480 --> 00:11:28,959
to reframing

00:11:25,360 --> 00:11:33,040
how we talk about internal apis

00:11:28,959 --> 00:11:35,680
so uh you don't use apis

00:11:33,040 --> 00:11:38,800
you're in api relationships and i think

00:11:35,680 --> 00:11:41,200
this is like really important because

00:11:38,800 --> 00:11:42,000
it adds a human layer back into this

00:11:41,200 --> 00:11:44,079
that that sometimes

00:11:42,000 --> 00:11:45,440
is easy for engineers to and uh just

00:11:44,079 --> 00:11:46,560
developers and and busy people in

00:11:45,440 --> 00:11:48,720
general to remove like

00:11:46,560 --> 00:11:50,959
like we are not uh just creating

00:11:48,720 --> 00:11:52,560
endpoints uh we are not just uh

00:11:50,959 --> 00:11:54,240
creating new affordances in our systems

00:11:52,560 --> 00:11:55,680
like we are we are in a relationship

00:11:54,240 --> 00:11:56,000
with another team we are helping them

00:11:55,680 --> 00:11:58,320
get

00:11:56,000 --> 00:11:59,360
some job done and we should have pretty

00:11:58,320 --> 00:12:00,480
strong conviction about what our

00:11:59,360 --> 00:12:02,800
responsibility is to them what their

00:12:00,480 --> 00:12:06,320
responsibility is to us

00:12:02,800 --> 00:12:08,959
and like all relationships um oftentimes

00:12:06,320 --> 00:12:10,000
we know that we should be doing things

00:12:08,959 --> 00:12:12,480
but we don't always do

00:12:10,000 --> 00:12:14,320
them and i think putting these words

00:12:12,480 --> 00:12:16,240
into our vocabulary help us

00:12:14,320 --> 00:12:18,160
recognize what is actually going on and

00:12:16,240 --> 00:12:20,000
maybe treat the other teams around us a

00:12:18,160 --> 00:12:23,360
little better

00:12:20,000 --> 00:12:25,519
i think similarly for internal apis for

00:12:23,360 --> 00:12:26,720
for people working on the same giant

00:12:25,519 --> 00:12:28,800
rube goldberg machine which is a

00:12:26,720 --> 00:12:30,560
company's you know technical team

00:12:28,800 --> 00:12:32,240
uh we need to take like server client

00:12:30,560 --> 00:12:33,440
producer consumer out of our vocabulary

00:12:32,240 --> 00:12:34,720
and just talk about people as they are

00:12:33,440 --> 00:12:38,079
they're collaborators

00:12:34,720 --> 00:12:40,000
um you know the we sometimes only think

00:12:38,079 --> 00:12:42,880
that like api producers

00:12:40,000 --> 00:12:43,360
um you know have uh the responsibility

00:12:42,880 --> 00:12:44,720
here

00:12:43,360 --> 00:12:46,639
but i think consumers have a lot of

00:12:44,720 --> 00:12:47,519
responsibility too to tell the api

00:12:46,639 --> 00:12:49,279
producers

00:12:47,519 --> 00:12:50,880
how they're using the api what they

00:12:49,279 --> 00:12:52,720
actually need what they're using those

00:12:50,880 --> 00:12:55,360
apis for

00:12:52,720 --> 00:12:56,959
and i think just just making it so that

00:12:55,360 --> 00:12:58,399
we're all in the same tier is

00:12:56,959 --> 00:12:59,839
really important to having these

00:12:58,399 --> 00:13:01,600
conversations and building the right

00:12:59,839 --> 00:13:03,120
kind of culture

00:13:01,600 --> 00:13:04,959
and the other thing is we need to stop

00:13:03,120 --> 00:13:08,160
talking about breaking apis

00:13:04,959 --> 00:13:09,839
for a bunch of reasons but i think most

00:13:08,160 --> 00:13:13,040
importantly

00:13:09,839 --> 00:13:16,079
you don't actually break apis you

00:13:13,040 --> 00:13:18,880
ruin people's afternoons

00:13:16,079 --> 00:13:20,160
and that happens sometimes immediately

00:13:18,880 --> 00:13:21,440
after you make the change because it

00:13:20,160 --> 00:13:23,200
breaks in staging or

00:13:21,440 --> 00:13:24,959
it breaks in a pre-prod environment or

00:13:23,200 --> 00:13:27,040
god hopefully not in production

00:13:24,959 --> 00:13:28,399
um but at the end of the day like you're

00:13:27,040 --> 00:13:29,519
there's a person on the other side of

00:13:28,399 --> 00:13:32,560
this you're not just changing

00:13:29,519 --> 00:13:34,000
an interface of an api like there's an

00:13:32,560 --> 00:13:35,120
engineer who built their part of the

00:13:34,000 --> 00:13:36,880
rube goldberg machine

00:13:35,120 --> 00:13:38,399
and was all excited like standing there

00:13:36,880 --> 00:13:39,440
at the museum watching like the marble

00:13:38,399 --> 00:13:41,199
coming down the chute

00:13:39,440 --> 00:13:42,720
and then like it didn't work and someone

00:13:41,199 --> 00:13:44,240
was like you're in trouble now uh and

00:13:42,720 --> 00:13:45,680
you've ruined an afternoon so i think we

00:13:44,240 --> 00:13:46,880
really just think about this stuff in

00:13:45,680 --> 00:13:49,519
human terms

00:13:46,880 --> 00:13:50,399
and yeah i will i will die on the hill

00:13:49,519 --> 00:13:51,839
of uh

00:13:50,399 --> 00:13:53,600
most technical problems being human

00:13:51,839 --> 00:13:55,199
problems but i think some of this

00:13:53,600 --> 00:13:56,560
vocabulary updates can be helpful or at

00:13:55,199 --> 00:13:57,120
least talking about this stuff with your

00:13:56,560 --> 00:13:59,120
team

00:13:57,120 --> 00:14:00,320
can help everyone sort of get a better

00:13:59,120 --> 00:14:03,279
understanding of where

00:14:00,320 --> 00:14:04,079
all things stand in the organization uh

00:14:03,279 --> 00:14:07,040
so let's let's

00:14:04,079 --> 00:14:07,920
go through a little checklist of what

00:14:07,040 --> 00:14:11,279
leads to

00:14:07,920 --> 00:14:14,480
sort of a developer friendly culture

00:14:11,279 --> 00:14:17,360
in this world of creating a nicer

00:14:14,480 --> 00:14:18,399
rube goldberg machine internally at our

00:14:17,360 --> 00:14:21,440
companies

00:14:18,399 --> 00:14:23,920
so is every api documented

00:14:21,440 --> 00:14:24,880
and is it documented accurately this is

00:14:23,920 --> 00:14:26,959
really important

00:14:24,880 --> 00:14:28,560
because it saves everybody time it saves

00:14:26,959 --> 00:14:29,199
the people who are trying to use the api

00:14:28,560 --> 00:14:30,880
time

00:14:29,199 --> 00:14:32,720
because they can go figure out how to

00:14:30,880 --> 00:14:33,920
use it without interrupting you a lot of

00:14:32,720 --> 00:14:36,399
the time

00:14:33,920 --> 00:14:37,839
and the flip side of that like i said is

00:14:36,399 --> 00:14:39,360
your team doesn't have to be interrupted

00:14:37,839 --> 00:14:40,959
as much

00:14:39,360 --> 00:14:42,079
obviously conversations will still

00:14:40,959 --> 00:14:42,800
happen and they probably should still

00:14:42,079 --> 00:14:45,040
happen

00:14:42,800 --> 00:14:46,240
but good documentation is a placeholder

00:14:45,040 --> 00:14:47,680
for those conversations and helps

00:14:46,240 --> 00:14:49,199
everyone kind of move autonomously and

00:14:47,680 --> 00:14:50,800
faster

00:14:49,199 --> 00:14:52,560
it also makes api integrations more

00:14:50,800 --> 00:14:56,240
maintainable

00:14:52,560 --> 00:14:59,040
what this api can return a 404 and a 401

00:14:56,240 --> 00:15:00,399
and a 403 like i've only coded it

00:14:59,040 --> 00:15:01,600
against the 200.

00:15:00,399 --> 00:15:02,959
now i know that there's these other

00:15:01,600 --> 00:15:04,399
things that can happen because it's been

00:15:02,959 --> 00:15:05,920
written down and i can make my

00:15:04,399 --> 00:15:07,920
integration more robust

00:15:05,920 --> 00:15:10,480
and less likely to cause problems

00:15:07,920 --> 00:15:13,199
downstream later

00:15:10,480 --> 00:15:14,560
you also will sometimes discover that uh

00:15:13,199 --> 00:15:16,880
something you thought you needed

00:15:14,560 --> 00:15:19,279
a new api for already exists somewhere

00:15:16,880 --> 00:15:19,680
else and if all the apis are documented

00:15:19,279 --> 00:15:22,560
well

00:15:19,680 --> 00:15:22,800
and it's easy to discover them companies

00:15:22,560 --> 00:15:25,199
all

00:15:22,800 --> 00:15:26,000
often realize that they have duplicated

00:15:25,199 --> 00:15:28,320
a ton of api

00:15:26,000 --> 00:15:29,040
functionality um that they didn't need

00:15:28,320 --> 00:15:30,720
to duplicate

00:15:29,040 --> 00:15:32,480
so this can help you sort of see that

00:15:30,720 --> 00:15:34,639
and save time

00:15:32,480 --> 00:15:36,240
on the long span from not having like

00:15:34,639 --> 00:15:37,920
redundant systems you're building and

00:15:36,240 --> 00:15:39,519
maintaining

00:15:37,920 --> 00:15:41,040
it also helps a lot with security and

00:15:39,519 --> 00:15:43,519
compliance um

00:15:41,040 --> 00:15:45,199
one thing uh um one thing that i've

00:15:43,519 --> 00:15:47,680
heard over and over and over again

00:15:45,199 --> 00:15:50,160
um is that it's really hard for security

00:15:47,680 --> 00:15:52,240
and compliance teams to understand

00:15:50,160 --> 00:15:54,240
what is actually going on in all of

00:15:52,240 --> 00:15:56,320
these apis

00:15:54,240 --> 00:15:57,759
and they might get an accurate spec you

00:15:56,320 --> 00:16:00,160
know once a year or twice

00:15:57,759 --> 00:16:01,920
twice a year or something like that so a

00:16:00,160 --> 00:16:03,759
lot of these kinds of issues can seep

00:16:01,920 --> 00:16:05,440
into the apis

00:16:03,759 --> 00:16:07,199
in a way that isn't obvious to the

00:16:05,440 --> 00:16:08,000
people who are tasked with governing

00:16:07,199 --> 00:16:11,440
them and making them

00:16:08,000 --> 00:16:12,880
safe so the the more the more things are

00:16:11,440 --> 00:16:14,320
documented the easier it is to avoid

00:16:12,880 --> 00:16:15,040
some of these really serious security

00:16:14,320 --> 00:16:16,720
issues

00:16:15,040 --> 00:16:19,199
and to stay compliant in all the ways

00:16:16,720 --> 00:16:21,120
that matter to your business

00:16:19,199 --> 00:16:22,480
another really important sort of

00:16:21,120 --> 00:16:25,040
question that you should ask yourself

00:16:22,480 --> 00:16:25,759
is do you know when your api behavior

00:16:25,040 --> 00:16:28,399
changes

00:16:25,759 --> 00:16:29,680
and and who those changes might affect

00:16:28,399 --> 00:16:32,399
so

00:16:29,680 --> 00:16:32,880
if you know when your api behavior

00:16:32,399 --> 00:16:35,759
changes

00:16:32,880 --> 00:16:36,399
you can catch bugs and catch regressions

00:16:35,759 --> 00:16:39,519
way

00:16:36,399 --> 00:16:41,279
way way earlier in the process

00:16:39,519 --> 00:16:43,120
because you can see right there and then

00:16:41,279 --> 00:16:43,680
hey this line of code had this

00:16:43,120 --> 00:16:45,279
unintended

00:16:43,680 --> 00:16:47,199
consequence and it changed the api

00:16:45,279 --> 00:16:48,959
contract so if you're able to see

00:16:47,199 --> 00:16:49,600
whenever your api changes you will find

00:16:48,959 --> 00:16:50,880
these things

00:16:49,600 --> 00:16:54,079
early in the process and be able to fix

00:16:50,880 --> 00:16:57,600
them you also can talk about api design

00:16:54,079 --> 00:16:59,360
really early so you know a lot of times

00:16:57,600 --> 00:17:02,160
when there's not observability into how

00:16:59,360 --> 00:17:03,680
apis are changing an engineer will you

00:17:02,160 --> 00:17:04,000
know add a new endpoint and maybe

00:17:03,680 --> 00:17:06,079
there's

00:17:04,000 --> 00:17:07,679
some small stylistic change they could

00:17:06,079 --> 00:17:09,439
have made to make it better

00:17:07,679 --> 00:17:11,039
but because that makes it all the way

00:17:09,439 --> 00:17:12,160
through to a consumer in a real

00:17:11,039 --> 00:17:13,760
environment

00:17:12,160 --> 00:17:16,079
their ability to now go change it is

00:17:13,760 --> 00:17:19,120
much less uh much less easy

00:17:16,079 --> 00:17:22,079
so creating this conversation early

00:17:19,120 --> 00:17:23,760
helps us not just avoid breaks but also

00:17:22,079 --> 00:17:25,199
build better apis

00:17:23,760 --> 00:17:26,880
and the dirty little secret about a lot

00:17:25,199 --> 00:17:30,160
of breaking changes is that

00:17:26,880 --> 00:17:31,440
uh teams make them knowing that they are

00:17:30,160 --> 00:17:33,760
making them

00:17:31,440 --> 00:17:35,200
but they are accommodating a poor api

00:17:33,760 --> 00:17:36,000
design choice that was made many months

00:17:35,200 --> 00:17:37,600
before

00:17:36,000 --> 00:17:38,880
so all of this stuff is related and i

00:17:37,600 --> 00:17:40,240
think just creating the conversations

00:17:38,880 --> 00:17:41,520
early has huge leverage and we've

00:17:40,240 --> 00:17:43,679
already seen that with some teams on

00:17:41,520 --> 00:17:45,280
optic

00:17:43,679 --> 00:17:46,480
it's also really important to plan and

00:17:45,280 --> 00:17:47,360
coordinate your changes with your

00:17:46,480 --> 00:17:50,080
consumers

00:17:47,360 --> 00:17:50,640
uh like we said there are no such things

00:17:50,080 --> 00:17:51,760
as

00:17:50,640 --> 00:17:54,480
breaking changes or only ruined

00:17:51,760 --> 00:17:57,039
afternoons so if you're able to

00:17:54,480 --> 00:17:58,080
give a team time to upgrade they will be

00:17:57,039 --> 00:17:59,679
able to upgrade

00:17:58,080 --> 00:18:01,360
and all of your stuff can be a whole lot

00:17:59,679 --> 00:18:03,280
better because of that um

00:18:01,360 --> 00:18:05,200
so this is really important just knowing

00:18:03,280 --> 00:18:06,400
who in that dependency graph is affected

00:18:05,200 --> 00:18:08,080
by any change you make

00:18:06,400 --> 00:18:10,720
and creating that conversation before

00:18:08,080 --> 00:18:11,919
the change actually happens not after

00:18:10,720 --> 00:18:14,160
and that makes everything a whole lot

00:18:11,919 --> 00:18:16,480
healthier also

00:18:14,160 --> 00:18:18,640
do you know who uses your api and what

00:18:16,480 --> 00:18:21,120
their use cases are

00:18:18,640 --> 00:18:22,080
so this is really important because i

00:18:21,120 --> 00:18:24,480
would say

00:18:22,080 --> 00:18:26,160
something like 20 percent of the fields

00:18:24,480 --> 00:18:27,840
in our apis

00:18:26,160 --> 00:18:30,400
and the endpoints that we've built if

00:18:27,840 --> 00:18:33,039
you've been around for several years

00:18:30,400 --> 00:18:34,640
are no longer being used by anyone

00:18:33,039 --> 00:18:35,600
there's a lot of functionality we could

00:18:34,640 --> 00:18:38,799
prune

00:18:35,600 --> 00:18:41,440
from our big api graph that we've baked

00:18:38,799 --> 00:18:43,760
but unfortunately because we don't have

00:18:41,440 --> 00:18:44,720
observability into who is using our apis

00:18:43,760 --> 00:18:46,240
and for what

00:18:44,720 --> 00:18:48,559
it's really difficult to know when we

00:18:46,240 --> 00:18:50,480
can retire things which means that

00:18:48,559 --> 00:18:51,840
over time a lot of companies see that

00:18:50,480 --> 00:18:53,679
the the size of their

00:18:51,840 --> 00:18:54,640
request bodies and responsibilities just

00:18:53,679 --> 00:18:56,000
get bigger and bigger and bigger but

00:18:54,640 --> 00:18:57,440
they never get smaller

00:18:56,000 --> 00:18:58,960
and that makes the code a whole lot

00:18:57,440 --> 00:19:01,120
harder to maintain it makes it a lot

00:18:58,960 --> 00:19:03,039
harder for a new team to come in

00:19:01,120 --> 00:19:04,799
and understand how the api works because

00:19:03,039 --> 00:19:06,320
there's all this other stuff in there

00:19:04,799 --> 00:19:08,000
that might not be relevant anymore to

00:19:06,320 --> 00:19:09,919
their use case

00:19:08,000 --> 00:19:11,440
so there's huge upside if you can prune

00:19:09,919 --> 00:19:13,600
a ton of your api graph

00:19:11,440 --> 00:19:14,559
um and knowing how people use your api

00:19:13,600 --> 00:19:17,600
is a big part of that

00:19:14,559 --> 00:19:20,080
that observability is super important

00:19:17,600 --> 00:19:21,360
it also helps you build better apis we

00:19:20,080 --> 00:19:22,960
have all lived in a world where we've

00:19:21,360 --> 00:19:24,640
had loose requirements before

00:19:22,960 --> 00:19:26,160
and if we don't understand the use cases

00:19:24,640 --> 00:19:27,520
of our consumers if we don't foster

00:19:26,160 --> 00:19:29,200
these relationships and learn about the

00:19:27,520 --> 00:19:31,520
people on the other end of it

00:19:29,200 --> 00:19:32,559
we might build something that that works

00:19:31,520 --> 00:19:34,640
but isn't optimal

00:19:32,559 --> 00:19:35,840
or isn't evolvable or won't do what they

00:19:34,640 --> 00:19:38,160
needed to do next

00:19:35,840 --> 00:19:40,000
in a in a compatible way so

00:19:38,160 --> 00:19:41,840
understanding these use cases and really

00:19:40,000 --> 00:19:44,400
documenting those and writing those down

00:19:41,840 --> 00:19:46,160
like like let let tools automatically

00:19:44,400 --> 00:19:48,400
document your apis for you but spend the

00:19:46,160 --> 00:19:50,000
human time writing down the use cases

00:19:48,400 --> 00:19:51,600
that your uh that your consumers have

00:19:50,000 --> 00:19:53,840
shared with you and just make sure that

00:19:51,600 --> 00:19:55,520
you're always keeping that up to date

00:19:53,840 --> 00:19:56,880
because that will help all of your

00:19:55,520 --> 00:19:58,320
engineers you're working with build the

00:19:56,880 --> 00:20:01,520
better api

00:19:58,320 --> 00:20:05,120
so doing this uh it is

00:20:01,520 --> 00:20:07,440
definitely hard and i think

00:20:05,120 --> 00:20:09,039
obviously like these are not things you

00:20:07,440 --> 00:20:11,200
can just start tomorrow and have them

00:20:09,039 --> 00:20:13,280
all working perfectly

00:20:11,200 --> 00:20:15,200
but i would say that the api tooling

00:20:13,280 --> 00:20:16,720
space is working really hard

00:20:15,200 --> 00:20:19,520
because we've acknowledged that we need

00:20:16,720 --> 00:20:21,760
better documentation observability

00:20:19,520 --> 00:20:23,520
ways of cataloging our api relationships

00:20:21,760 --> 00:20:25,200
and understanding api usage

00:20:23,520 --> 00:20:26,559
and there's a lot of new tools that are

00:20:25,200 --> 00:20:30,400
coming trying to make this

00:20:26,559 --> 00:20:32,080
easier i think in the meantime

00:20:30,400 --> 00:20:34,080
the the part of this and the reason why

00:20:32,080 --> 00:20:36,880
i took the time to put all this together

00:20:34,080 --> 00:20:38,559
is that we can still all step back and

00:20:36,880 --> 00:20:40,480
do our own small piece of this

00:20:38,559 --> 00:20:42,559
we can start fostering the human side we

00:20:40,480 --> 00:20:43,520
can stop just thinking about the api

00:20:42,559 --> 00:20:45,919
that we're building

00:20:43,520 --> 00:20:47,440
and start thinking about all the people

00:20:45,919 --> 00:20:49,120
on that assembly line that we're working

00:20:47,440 --> 00:20:51,520
with together

00:20:49,120 --> 00:20:52,720
and as we move forward from the talk

00:20:51,520 --> 00:20:54,480
today i would just encourage everyone

00:20:52,720 --> 00:20:55,679
who is in these api relationships

00:20:54,480 --> 00:20:57,520
to just take the time to set up a

00:20:55,679 --> 00:20:59,360
virtual coffee and to understand the use

00:20:57,520 --> 00:21:01,679
cases better and to write things down

00:20:59,360 --> 00:21:03,280
and to try to be more conscious of these

00:21:01,679 --> 00:21:04,400
api relationships that we're all in

00:21:03,280 --> 00:21:06,880
every single day

00:21:04,400 --> 00:21:08,400
um thank you so much for listening

00:21:06,880 --> 00:21:10,320
hopefully this is interesting and not

00:21:08,400 --> 00:21:12,960
just a bunch of jargon

00:21:10,320 --> 00:21:13,360
and ideas um i think that uh there's

00:21:12,960 --> 00:21:16,480
just

00:21:13,360 --> 00:21:18,400
a whole lot that we gain when we uh

00:21:16,480 --> 00:21:20,880
add the human back into the into the

00:21:18,400 --> 00:21:22,320
story and i'm hopeful that um

00:21:20,880 --> 00:21:24,240
the the way i share things today is

00:21:22,320 --> 00:21:25,840
helpful to to you your teams

00:21:24,240 --> 00:21:27,840
and can build better api relationships

00:21:25,840 --> 00:21:29,600
in your company um i'll be on discord

00:21:27,840 --> 00:21:30,799
i'm also on twitter all the time

00:21:29,600 --> 00:21:32,720
you can check out the optic project on

00:21:30,799 --> 00:21:34,400
our github if you want and

00:21:32,720 --> 00:21:36,000
i'm really excited about making apis

00:21:34,400 --> 00:21:37,440
developer friendly if you have ideas for

00:21:36,000 --> 00:21:39,200
how to make it more friendly or tools

00:21:37,440 --> 00:21:41,200
you'd like us to build or

00:21:39,200 --> 00:21:42,159
conversations you want to have i'm going

00:21:41,200 --> 00:21:43,280
to be here all day and i'm really

00:21:42,159 --> 00:21:44,080
looking forward to talking more about

00:21:43,280 --> 00:21:45,200
this

00:21:44,080 --> 00:21:45,919
so thank you everyone i hope you enjoy

00:21:45,200 --> 00:21:47,120
the rest your time here at the

00:21:45,919 --> 00:21:49,440
conference and i will talk to you all

00:21:47,120 --> 00:21:49,440
later

00:21:51,320 --> 00:21:54,320

YouTube URL: https://www.youtube.com/watch?v=E-2Eqh99nUw


