Title: How to build a dApp â€“ Nader Dabit
Publication date: 2021-04-29
Playlist: DevX Conf
Description: 
	Decentralized apps (dApps) are continuing to gain momentum in the industry. Blockchain developers are also now some of the highest paid in the entire industry. Building decentralized apps is a paradigm shift that requires a different way of thinking than apps built with traditional centralized infrastructure, tooling, and services.

As a React developer, I had a hard time understanding this entirely new (to me) ecosystem, how everything fit together, and the mental model needed to understand and be a productive full stack developer in this space.

In this talk, I'll give a comprehensive overview of the space, how you can get started building these types of applications, and the entire tech stack broken apart then put back together to show how everything works.

About DevX Conf:
DevX Conf is a two-day virtual conference. It's a space where creators collaborate, listen, discuss and declutter our workflows, toolchains, and minds. To improve developer experience. Organized by Gitpod.
https://devxconf.org/
Captions: 
	00:00:14,240 --> 00:00:18,240
hello and welcome to how to build a dap

00:00:16,640 --> 00:00:19,920
this talk is going to be broken up into

00:00:18,240 --> 00:00:21,840
two main parts first we're going to give

00:00:19,920 --> 00:00:23,279
an introduction into what adap is

00:00:21,840 --> 00:00:25,199
and then second we're going to jump into

00:00:23,279 --> 00:00:27,039
a live coding demo showing you how to

00:00:25,199 --> 00:00:29,199
build a doubt from scratch

00:00:27,039 --> 00:00:31,920
my name is nader dabit i'm a developer

00:00:29,199 --> 00:00:34,079
relations engineer at edge and node

00:00:31,920 --> 00:00:36,320
at edge and node we create and support

00:00:34,079 --> 00:00:37,680
protocols and dapps in the dfi and web3

00:00:36,320 --> 00:00:39,760
ecosystem

00:00:37,680 --> 00:00:41,200
we also participate in the graph

00:00:39,760 --> 00:00:43,200
community and ecosystem

00:00:41,200 --> 00:00:44,239
the graph is an indexing protocol for

00:00:43,200 --> 00:00:46,480
querying data

00:00:44,239 --> 00:00:47,840
from decentralized data sources like

00:00:46,480 --> 00:00:50,879
ethereum and ipfs

00:00:47,840 --> 00:00:51,520
using graphql part of our ecosystem

00:00:50,879 --> 00:00:53,920
development

00:00:51,520 --> 00:00:54,800
includes supporting d5 and web 3

00:00:53,920 --> 00:00:56,879
projects

00:00:54,800 --> 00:00:58,000
product development investing in people

00:00:56,879 --> 00:00:59,600
and protocols

00:00:58,000 --> 00:01:01,120
as well as dapps within the graph

00:00:59,600 --> 00:01:03,120
ecosystem and also

00:01:01,120 --> 00:01:04,479
active participation in different crypto

00:01:03,120 --> 00:01:06,159
networks

00:01:04,479 --> 00:01:08,400
with that being said let's talk about

00:01:06,159 --> 00:01:09,680
web 2 and web 3

00:01:08,400 --> 00:01:11,840
and kind of what each of these things

00:01:09,680 --> 00:01:13,760
means i think there's kind of an

00:01:11,840 --> 00:01:15,040
evolution between what we had in the

00:01:13,760 --> 00:01:16,560
past and what we're headed towards in

00:01:15,040 --> 00:01:18,960
the future and a lot of people

00:01:16,560 --> 00:01:19,840
talk about these things in the sense of

00:01:18,960 --> 00:01:22,320
web 1

00:01:19,840 --> 00:01:24,000
web 2 and web 3. we're currently

00:01:22,320 --> 00:01:26,960
experiencing web 2.0

00:01:24,000 --> 00:01:28,720
web 2.0 is the user generated content

00:01:26,960 --> 00:01:29,439
read write interactive version of the

00:01:28,720 --> 00:01:31,119
web

00:01:29,439 --> 00:01:33,360
things like social media where we have

00:01:31,119 --> 00:01:35,040
facebook twitter tick tock and instagram

00:01:33,360 --> 00:01:36,400
where people can upload videos

00:01:35,040 --> 00:01:38,000
they can make comments they can

00:01:36,400 --> 00:01:38,640
communicate with each other with each

00:01:38,000 --> 00:01:41,280
other

00:01:38,640 --> 00:01:42,960
also things like blogs wikis video

00:01:41,280 --> 00:01:44,479
sharing and hosting as well as image

00:01:42,960 --> 00:01:46,240
sharing and hosting

00:01:44,479 --> 00:01:47,840
but the next step is kind of what a lot

00:01:46,240 --> 00:01:49,280
of people are moving towards as well as

00:01:47,840 --> 00:01:49,840
a lot of the work that we're moving

00:01:49,280 --> 00:01:52,000
towards

00:01:49,840 --> 00:01:53,680
here at edge and node moving towards

00:01:52,000 --> 00:01:55,759
what is known as web3

00:01:53,680 --> 00:01:57,520
which you could think of as kind of a

00:01:55,759 --> 00:01:58,240
decentralized version of what we have

00:01:57,520 --> 00:02:00,159
today

00:01:58,240 --> 00:02:02,240
along with a few other benefits that we

00:02:00,159 --> 00:02:05,439
don't have today

00:02:02,240 --> 00:02:07,840
web 3.0 um kind of has

00:02:05,439 --> 00:02:09,360
all of these different characteristics

00:02:07,840 --> 00:02:12,080
secure self-publishing

00:02:09,360 --> 00:02:13,040
secure communication secure storage and

00:02:12,080 --> 00:02:15,280
sharing

00:02:13,040 --> 00:02:16,720
secure money and contracts it's

00:02:15,280 --> 00:02:19,520
decentralized

00:02:16,720 --> 00:02:22,000
secure smart contracts dependable

00:02:19,520 --> 00:02:24,239
trustless and robust infrastructure

00:02:22,000 --> 00:02:25,680
and self-sovereign identity for all

00:02:24,239 --> 00:02:28,239
people orgs

00:02:25,680 --> 00:02:30,400
and programs now a few of these

00:02:28,239 --> 00:02:31,680
characteristics are kind of part of what

00:02:30,400 --> 00:02:33,840
web 2 is

00:02:31,680 --> 00:02:35,280
where some of these are kind of only

00:02:33,840 --> 00:02:36,800
unique to web3

00:02:35,280 --> 00:02:38,720
and the way that we get there is a lot

00:02:36,800 --> 00:02:40,560
different though when you think of web 2

00:02:38,720 --> 00:02:41,760
we're often relying on centralized

00:02:40,560 --> 00:02:44,160
infrastructure or

00:02:41,760 --> 00:02:45,760
hosting providers to deal with all of

00:02:44,160 --> 00:02:47,760
the important

00:02:45,760 --> 00:02:49,280
things that we need to have happen for

00:02:47,760 --> 00:02:51,360
our application to work

00:02:49,280 --> 00:02:52,319
whereas web3 is more focused on

00:02:51,360 --> 00:02:55,200
peer-to-peer

00:02:52,319 --> 00:02:56,959
or decentralized infrastructure so let's

00:02:55,200 --> 00:02:57,440
take a look at what decentralization

00:02:56,959 --> 00:02:58,800
means

00:02:57,440 --> 00:03:00,480
in the current world that we're in in

00:02:58,800 --> 00:03:02,800
the web 2 world

00:03:00,480 --> 00:03:04,159
a couple of examples might be something

00:03:02,800 --> 00:03:06,159
like media

00:03:04,159 --> 00:03:08,720
a long time ago when people wanted to

00:03:06,159 --> 00:03:10,080
get information and they turn on the tv

00:03:08,720 --> 00:03:12,159
the only way that they could kind of get

00:03:10,080 --> 00:03:13,200
that information was from a few main

00:03:12,159 --> 00:03:15,920
news sources

00:03:13,200 --> 00:03:16,560
abc fox cbs for example might be the

00:03:15,920 --> 00:03:18,319
ones

00:03:16,560 --> 00:03:19,760
where you would kind of be getting all

00:03:18,319 --> 00:03:20,720
of your information and if it wasn't

00:03:19,760 --> 00:03:22,879
coming from there

00:03:20,720 --> 00:03:24,560
you may not be getting it from anywhere

00:03:22,879 --> 00:03:26,319
today we can jump onto twitter though

00:03:24,560 --> 00:03:27,360
and we can get our news directly from

00:03:26,319 --> 00:03:29,040
news sources

00:03:27,360 --> 00:03:31,200
so we can go directly to the people on

00:03:29,040 --> 00:03:33,040
the ground we can

00:03:31,200 --> 00:03:34,799
deal directly with reporters things like

00:03:33,040 --> 00:03:36,319
that so we're kind of removing that

00:03:34,799 --> 00:03:38,480
middle layer of

00:03:36,319 --> 00:03:40,159
whatever was there before that may or

00:03:38,480 --> 00:03:41,120
may not have been a good thing right a

00:03:40,159 --> 00:03:42,879
lot of times

00:03:41,120 --> 00:03:45,120
these middle layers especially when it

00:03:42,879 --> 00:03:46,000
comes to news might be influencing the

00:03:45,120 --> 00:03:48,159
outcome of

00:03:46,000 --> 00:03:49,200
what the message is trying to be put

00:03:48,159 --> 00:03:51,360
across

00:03:49,200 --> 00:03:53,280
you're also seeing decentralization in a

00:03:51,360 --> 00:03:56,959
lot of other domains

00:03:53,280 --> 00:03:58,959
one of those is airbnb in the sense of

00:03:56,959 --> 00:04:00,159
before if you wanted to get a hotel you

00:03:58,959 --> 00:04:01,680
typically were going to go with one of

00:04:00,159 --> 00:04:04,080
these big hotel chains

00:04:01,680 --> 00:04:06,239
but now airbnb is a platform that that

00:04:04,080 --> 00:04:09,439
allows kind of the decentralization

00:04:06,239 --> 00:04:11,439
of a hotel or

00:04:09,439 --> 00:04:12,640
open up people's houses to let them stay

00:04:11,439 --> 00:04:14,640
there and things like that

00:04:12,640 --> 00:04:16,239
you could think of youtube as kind of a

00:04:14,640 --> 00:04:18,799
decentralized platform

00:04:16,239 --> 00:04:20,239
for people to create videos of

00:04:18,799 --> 00:04:21,040
themselves and kind of get their name

00:04:20,239 --> 00:04:24,479
out there

00:04:21,040 --> 00:04:27,199
in the entertainment sphere so

00:04:24,479 --> 00:04:28,400
web 3 you could think of in a similar

00:04:27,199 --> 00:04:30,320
sense as

00:04:28,400 --> 00:04:32,240
what we were talking about uh with those

00:04:30,320 --> 00:04:34,560
examples but in web 3

00:04:32,240 --> 00:04:35,919
we're focused on the decentralization of

00:04:34,560 --> 00:04:37,600
web infrastructure

00:04:35,919 --> 00:04:39,199
all the traditional web infrastructure

00:04:37,600 --> 00:04:39,600
that we may have had in the past how can

00:04:39,199 --> 00:04:42,720
we

00:04:39,600 --> 00:04:44,000
uh go about decentralizing that so in

00:04:42,720 --> 00:04:45,280
essence a lot of the

00:04:44,000 --> 00:04:47,440
things that we're talking about come

00:04:45,280 --> 00:04:49,280
down to getting rid of the middleman and

00:04:47,440 --> 00:04:51,360
allowing people to

00:04:49,280 --> 00:04:52,400
deal directly with other peers that are

00:04:51,360 --> 00:04:55,919
participating

00:04:52,400 --> 00:04:56,800
in some network or protocol so let's

00:04:55,919 --> 00:04:59,840
take a look at

00:04:56,800 --> 00:05:02,000
the web 3.0 uh infrastructure

00:04:59,840 --> 00:05:03,759
diagram that's given to us by the web3

00:05:02,000 --> 00:05:05,360
foundation which is pretty interesting

00:05:03,759 --> 00:05:07,280
there's a there's a lot going on here

00:05:05,360 --> 00:05:09,520
that we don't really need to kind of

00:05:07,280 --> 00:05:11,360
dive deep on today but i think the layer

00:05:09,520 --> 00:05:12,960
one and the layer twos are a lot of the

00:05:11,360 --> 00:05:13,680
things that you see a lot of innovation

00:05:12,960 --> 00:05:16,560
happening

00:05:13,680 --> 00:05:17,520
in the web3 ecosystem so layer ones are

00:05:16,560 --> 00:05:19,600
gonna be the actual

00:05:17,520 --> 00:05:22,160
blockchains themselves things like

00:05:19,600 --> 00:05:24,400
ethereum uh bitcoin as well as

00:05:22,160 --> 00:05:25,360
protocols like ipfs that enable file

00:05:24,400 --> 00:05:28,000
storage

00:05:25,360 --> 00:05:29,199
and um and even web website storage for

00:05:28,000 --> 00:05:30,800
static sites

00:05:29,199 --> 00:05:32,639
and then you're seeing these second

00:05:30,800 --> 00:05:33,520
layers kind of built on top of these

00:05:32,639 --> 00:05:36,240
other layers

00:05:33,520 --> 00:05:38,000
that enable more of the rich web

00:05:36,240 --> 00:05:40,639
infrastructure that we're used to

00:05:38,000 --> 00:05:42,479
in the web 2 world and we're not

00:05:40,639 --> 00:05:44,160
building those directly on these bottom

00:05:42,479 --> 00:05:46,320
layers but we're kind of building out

00:05:44,160 --> 00:05:47,840
these different layers that enable a lot

00:05:46,320 --> 00:05:50,880
of the things that we

00:05:47,840 --> 00:05:52,560
again are expecting out of our rich and

00:05:50,880 --> 00:05:55,680
performant web applications

00:05:52,560 --> 00:05:57,199
but building them in a decentralized way

00:05:55,680 --> 00:05:59,280
so let's talk about some of this core

00:05:57,199 --> 00:06:02,400
infrastructure when you think of

00:05:59,280 --> 00:06:04,479
a typical web application that you might

00:06:02,400 --> 00:06:06,800
build with aws or something like that

00:06:04,479 --> 00:06:08,560
you typically have like this 80 20 rule

00:06:06,800 --> 00:06:09,199
of what is the functionality that we

00:06:08,560 --> 00:06:11,360
need

00:06:09,199 --> 00:06:12,639
versus um what is going to maybe

00:06:11,360 --> 00:06:14,240
differentiate us from

00:06:12,639 --> 00:06:16,479
our competitors and kind of make it

00:06:14,240 --> 00:06:18,720
stand out that that core infrastructure

00:06:16,479 --> 00:06:21,520
typically revolves around

00:06:18,720 --> 00:06:23,440
authentication data and storage um and

00:06:21,520 --> 00:06:26,160
on the left hand i kind of have this

00:06:23,440 --> 00:06:27,360
these five things compute identity slash

00:06:26,160 --> 00:06:29,440
authentication

00:06:27,360 --> 00:06:30,720
data storage and web hosting you can

00:06:29,440 --> 00:06:32,800
build out a lot of different

00:06:30,720 --> 00:06:35,680
applications just using that core

00:06:32,800 --> 00:06:37,840
those core building blocks and the only

00:06:35,680 --> 00:06:38,400
thing that web3 really adds to this as

00:06:37,840 --> 00:06:40,560
far as

00:06:38,400 --> 00:06:42,639
core infrastructure is concerned is this

00:06:40,560 --> 00:06:43,600
idea of smart contracts which enables a

00:06:42,639 --> 00:06:45,120
lot of

00:06:43,600 --> 00:06:47,199
the concepts that we're kind of trying

00:06:45,120 --> 00:06:49,039
to get across in the web3 ecosystem

00:06:47,199 --> 00:06:50,639
without kind of going into a lot of it

00:06:49,039 --> 00:06:51,039
it's a lot of stuff that happens around

00:06:50,639 --> 00:06:54,080
self

00:06:51,039 --> 00:06:56,560
governance and building into

00:06:54,080 --> 00:06:58,000
an application some way to govern what

00:06:56,560 --> 00:07:00,479
is what is going on

00:06:58,000 --> 00:07:01,199
without a third party that needs to be

00:07:00,479 --> 00:07:02,880
involved

00:07:01,199 --> 00:07:04,960
all of this is programmed into the

00:07:02,880 --> 00:07:07,039
contract itself

00:07:04,960 --> 00:07:08,560
so that's kind of a really really quick

00:07:07,039 --> 00:07:10,080
overview since we don't have a ton of

00:07:08,560 --> 00:07:12,639
time for this talk

00:07:10,080 --> 00:07:14,560
that's kind of what adap and what web3

00:07:12,639 --> 00:07:15,360
and decentralization kind of looks like

00:07:14,560 --> 00:07:17,120
today

00:07:15,360 --> 00:07:18,479
let's talk about how we might build one

00:07:17,120 --> 00:07:19,919
of these daps and kind of

00:07:18,479 --> 00:07:22,319
what we would need to get started with

00:07:19,919 --> 00:07:24,240
it so at a basic core level

00:07:22,319 --> 00:07:26,000
uh some of the main things that you

00:07:24,240 --> 00:07:27,120
would probably want to to work with to

00:07:26,000 --> 00:07:29,680
just get started

00:07:27,120 --> 00:07:31,680
or a client framework an ethereum or

00:07:29,680 --> 00:07:33,680
some blockchain development library

00:07:31,680 --> 00:07:35,280
some ethereum or blockchain client

00:07:33,680 --> 00:07:36,479
library as well as a wallet that

00:07:35,280 --> 00:07:39,120
interacts with

00:07:36,479 --> 00:07:40,000
well with the blockchain so in this in

00:07:39,120 --> 00:07:41,199
this talk

00:07:40,000 --> 00:07:42,960
i'm going to be kind of talking about

00:07:41,199 --> 00:07:45,120
what i think is like a really modern

00:07:42,960 --> 00:07:46,879
take a modern stack

00:07:45,120 --> 00:07:48,800
based on what a lot of companies are

00:07:46,879 --> 00:07:49,759
using today the client framework is

00:07:48,800 --> 00:07:51,599
going to be react

00:07:49,759 --> 00:07:52,800
the ethereum development environment is

00:07:51,599 --> 00:07:54,560
going to be hard hat

00:07:52,800 --> 00:07:56,000
the ethereum client library is going to

00:07:54,560 --> 00:07:59,360
be ethers.js

00:07:56,000 --> 00:08:00,960
and the wallet is going to be metamask

00:07:59,360 --> 00:08:02,560
now you can build all this stuff from

00:08:00,960 --> 00:08:04,240
scratch like i'm going to do which kind

00:08:02,560 --> 00:08:06,240
of to me helps me learn

00:08:04,240 --> 00:08:08,160
how all the stuff fits together but you

00:08:06,240 --> 00:08:09,759
can also use a boilerplate there's a

00:08:08,160 --> 00:08:12,240
couple of good ones out there

00:08:09,759 --> 00:08:13,280
like scaffolding which will kind of roll

00:08:12,240 --> 00:08:15,840
out a decent

00:08:13,280 --> 00:08:16,720
starter project for you and this is kind

00:08:15,840 --> 00:08:18,639
of base

00:08:16,720 --> 00:08:20,639
this talk or this demo is kind of based

00:08:18,639 --> 00:08:23,039
on a blog post that i wrote recently

00:08:20,639 --> 00:08:24,879
called the full stack uh the complete

00:08:23,039 --> 00:08:26,000
guide to full stack ethereum development

00:08:24,879 --> 00:08:28,240
on dev.2

00:08:26,000 --> 00:08:30,000
this uh this blog post did really well i

00:08:28,240 --> 00:08:31,280
think i made a little a little over 60

00:08:30,000 --> 00:08:33,360
000 views at this point

00:08:31,280 --> 00:08:35,519
a lot of positive feedback so i figured

00:08:33,360 --> 00:08:37,279
why not kind of package this into a talk

00:08:35,519 --> 00:08:38,560
and show you how to build this in a very

00:08:37,279 --> 00:08:40,719
concise manner

00:08:38,560 --> 00:08:42,800
so with that being said let's go ahead

00:08:40,719 --> 00:08:44,800
and get started building our dap

00:08:42,800 --> 00:08:45,839
when to do so i'm going to go ahead and

00:08:44,800 --> 00:08:47,680
escape and go

00:08:45,839 --> 00:08:50,240
into my terminal and start writing some

00:08:47,680 --> 00:08:53,360
code in my terminal i have

00:08:50,240 --> 00:08:55,440
a basic react project and what i would

00:08:53,360 --> 00:08:58,000
like to do to kind of kick off this dap

00:08:55,440 --> 00:08:59,920
is i'm going to go ahead and initialize

00:08:58,000 --> 00:09:02,320
a hardhat development environment

00:08:59,920 --> 00:09:04,000
so i'm just going to say npx hard hat

00:09:02,320 --> 00:09:06,320
and this will kind of build out

00:09:04,000 --> 00:09:07,360
and create my ethereum development

00:09:06,320 --> 00:09:09,519
environment

00:09:07,360 --> 00:09:11,839
by walking us through a couple of steps

00:09:09,519 --> 00:09:14,080
i can create a sample project

00:09:11,839 --> 00:09:15,760
i can take the project route i can

00:09:14,080 --> 00:09:18,000
accept the get ignore

00:09:15,760 --> 00:09:19,600
and now i can go ahead and open this up

00:09:18,000 --> 00:09:22,720
in my text editor

00:09:19,600 --> 00:09:26,240
and once we've initialized hard hat

00:09:22,720 --> 00:09:28,720
we should see that we have our projects

00:09:26,240 --> 00:09:29,440
kind of set up with a couple of

00:09:28,720 --> 00:09:33,120
different

00:09:29,440 --> 00:09:35,040
new files and folders once hard hat is

00:09:33,120 --> 00:09:37,200
initialized our ethereum environment we

00:09:35,040 --> 00:09:40,800
now have this hard hat config

00:09:37,200 --> 00:09:42,160
we have a folder for our smart contracts

00:09:40,800 --> 00:09:44,959
which is going to be where we write our

00:09:42,160 --> 00:09:47,120
solidity code and we also have a scripts

00:09:44,959 --> 00:09:48,160
file that will allow us to deploy our

00:09:47,120 --> 00:09:51,200
contracts

00:09:48,160 --> 00:09:52,480
to the blockchain so the next steps that

00:09:51,200 --> 00:09:54,880
we're going to do is we're going to go

00:09:52,480 --> 00:09:56,720
into our hard hat configuration file

00:09:54,880 --> 00:09:58,000
and we're going to go ahead and set up a

00:09:56,720 --> 00:09:59,760
really basic

00:09:58,000 --> 00:10:01,120
setting for what we're going to need

00:09:59,760 --> 00:10:04,160
we're going to go ahead and bump this

00:10:01,120 --> 00:10:05,680
solidity version up to 0.8.3

00:10:04,160 --> 00:10:07,440
we're going to say that when we run a

00:10:05,680 --> 00:10:09,120
build we want our smart contract

00:10:07,440 --> 00:10:11,040
artifacts to go in the

00:10:09,120 --> 00:10:12,399
src directory because in react we're

00:10:11,040 --> 00:10:14,320
going to be importing from here

00:10:12,399 --> 00:10:15,760
and we're also going to set our chain id

00:10:14,320 --> 00:10:18,480
to 1337

00:10:15,760 --> 00:10:20,480
which is a hard hat configuration that

00:10:18,480 --> 00:10:22,160
we just need to do to kind of get up and

00:10:20,480 --> 00:10:24,399
running

00:10:22,160 --> 00:10:26,240
the next thing that we're going to do is

00:10:24,399 --> 00:10:28,560
now that we have hard hat

00:10:26,240 --> 00:10:30,000
installed we can now go ahead and create

00:10:28,560 --> 00:10:32,480
our own

00:10:30,000 --> 00:10:33,760
local version of a blockchain network so

00:10:32,480 --> 00:10:35,760
to do that i'm going to go ahead and

00:10:33,760 --> 00:10:38,480
open up a couple of windows here

00:10:35,760 --> 00:10:40,079
and i'm going to go ahead and say npx

00:10:38,480 --> 00:10:42,560
hard hat

00:10:40,079 --> 00:10:43,120
node and this is going to go ahead and

00:10:42,560 --> 00:10:45,760
spin up

00:10:43,120 --> 00:10:46,880
a local version of a blockchain for us

00:10:45,760 --> 00:10:48,959
it's going to go ahead and

00:10:46,880 --> 00:10:50,320
create a bunch of accounts and each

00:10:48,959 --> 00:10:53,839
account is going to be given

00:10:50,320 --> 00:10:56,560
an account id or an account address

00:10:53,839 --> 00:10:58,240
as well as a private key and the private

00:10:56,560 --> 00:11:00,880
key is what we're going to use to

00:10:58,240 --> 00:11:03,440
get our eth and in this case we have 10

00:11:00,880 --> 00:11:04,640
000 eth for each account

00:11:03,440 --> 00:11:06,160
the next thing that we're going to do is

00:11:04,640 --> 00:11:07,200
we're going to go in our contracts and

00:11:06,160 --> 00:11:09,200
we're going to go ahead and

00:11:07,200 --> 00:11:11,600
update the name of this contract to be

00:11:09,200 --> 00:11:15,040
token and token is going to be

00:11:11,600 --> 00:11:16,720
us minting our own tokens so you've

00:11:15,040 --> 00:11:18,240
probably heard of cryptocurrencies and

00:11:16,720 --> 00:11:19,200
stuff like that

00:11:18,240 --> 00:11:20,880
that's kind of what we're going to be

00:11:19,200 --> 00:11:21,279
doing we're going to be creating a

00:11:20,880 --> 00:11:24,800
really

00:11:21,279 --> 00:11:26,640
basic cryptocurrency so to do that i'm

00:11:24,800 --> 00:11:28,079
going to go in token.sol and let's go

00:11:26,640 --> 00:11:28,880
ahead and delete this code i'm going to

00:11:28,079 --> 00:11:32,000
go ahead and paste

00:11:28,880 --> 00:11:32,800
in my smart contract pretty basic stuff

00:11:32,000 --> 00:11:33,839
here um

00:11:32,800 --> 00:11:35,680
we're going to walk through it i'm

00:11:33,839 --> 00:11:38,000
setting the solidity version and the

00:11:35,680 --> 00:11:39,519
license here

00:11:38,000 --> 00:11:41,760
i actually don't think i even need that

00:11:39,519 --> 00:11:43,519
that line there i'm creating a contract

00:11:41,760 --> 00:11:45,279
called token i'm giving this token a

00:11:43,519 --> 00:11:47,920
name of nad or dabit token

00:11:45,279 --> 00:11:49,279
a symbol of ndt i'm setting the supply

00:11:47,920 --> 00:11:51,279
to a hundred thousand

00:11:49,279 --> 00:11:52,959
i'm setting a mapping which is kind of

00:11:51,279 --> 00:11:56,079
like an object or a map in

00:11:52,959 --> 00:11:57,760
in javascript that is named balances

00:11:56,079 --> 00:12:00,480
that has a key of address

00:11:57,760 --> 00:12:01,360
and the value is of type unsigned

00:12:00,480 --> 00:12:03,920
integer

00:12:01,360 --> 00:12:05,120
in our constructor we're going to be

00:12:03,920 --> 00:12:07,279
able to go ahead and

00:12:05,120 --> 00:12:08,480
mint some tokens meaning that whoever

00:12:07,279 --> 00:12:11,600
deploys this

00:12:08,480 --> 00:12:12,639
this contract can be considered as the

00:12:11,600 --> 00:12:15,040
treasury

00:12:12,639 --> 00:12:16,240
and i or whoever deploys this is going

00:12:15,040 --> 00:12:19,200
to receive

00:12:16,240 --> 00:12:21,360
these 1 million tokens here by

00:12:19,200 --> 00:12:23,200
referencing the message.sender

00:12:21,360 --> 00:12:24,560
now the message is a key word and

00:12:23,200 --> 00:12:26,560
solidity meaning

00:12:24,560 --> 00:12:28,480
whoever is interacting with their the

00:12:26,560 --> 00:12:30,880
smart contract or writing to it

00:12:28,480 --> 00:12:32,160
so at the deployment that's going to be

00:12:30,880 --> 00:12:34,800
the owner or the

00:12:32,160 --> 00:12:36,240
the treasurer but when someone wants to

00:12:34,800 --> 00:12:38,079
interact with it it will also be

00:12:36,240 --> 00:12:38,720
available here as well as the message

00:12:38,079 --> 00:12:40,480
center

00:12:38,720 --> 00:12:42,639
so if i want to write to this contract

00:12:40,480 --> 00:12:46,000
to transfer some tokens i can also

00:12:42,639 --> 00:12:47,279
access the message sender here and we

00:12:46,000 --> 00:12:50,480
have a function

00:12:47,279 --> 00:12:52,480
that uses the message sender to

00:12:50,480 --> 00:12:53,920
transfer tokens to different people so

00:12:52,480 --> 00:12:55,279
when i deploy this contract i'll be

00:12:53,920 --> 00:12:57,839
given a million tokens

00:12:55,279 --> 00:12:59,600
i can now transfer these tokens to

00:12:57,839 --> 00:13:01,680
someone by passing in their their

00:12:59,600 --> 00:13:03,760
address here as well as the amount

00:13:01,680 --> 00:13:06,480
we do a quick check to make sure that i

00:13:03,760 --> 00:13:07,920
have that many tokens to send if i do

00:13:06,480 --> 00:13:09,920
then we'll continue on

00:13:07,920 --> 00:13:11,839
we'll subtract the tokens from my

00:13:09,920 --> 00:13:13,519
account and put them in their account

00:13:11,839 --> 00:13:15,600
we also have a basic function called

00:13:13,519 --> 00:13:16,160
balance of that just returns the balance

00:13:15,600 --> 00:13:17,760
of

00:13:16,160 --> 00:13:19,920
the person's address that we're passing

00:13:17,760 --> 00:13:21,200
in so that's our smart contract pretty

00:13:19,920 --> 00:13:23,760
basic stuff we wrote

00:13:21,200 --> 00:13:24,480
our own cryptocurrency in about 20 lines

00:13:23,760 --> 00:13:26,399
of code

00:13:24,480 --> 00:13:28,320
um if you want to write your own real

00:13:26,399 --> 00:13:29,839
cryptocurrency you can actually do this

00:13:28,320 --> 00:13:30,720
fairly easily but i wouldn't use this

00:13:29,839 --> 00:13:33,680
exact code

00:13:30,720 --> 00:13:35,519
i would instead use an erc20 token and

00:13:33,680 --> 00:13:38,399
extend your contract from that

00:13:35,519 --> 00:13:39,920
you can really easily do that there's a

00:13:38,399 --> 00:13:41,440
lot of examples out there including my

00:13:39,920 --> 00:13:42,240
blog posts i kind of show how to do that

00:13:41,440 --> 00:13:43,519
but for this

00:13:42,240 --> 00:13:45,760
for this talk we're going to be kind of

00:13:43,519 --> 00:13:48,560
doing really basic stuff

00:13:45,760 --> 00:13:50,079
so what i want to do is now that i've

00:13:48,560 --> 00:13:51,920
created my smart contract

00:13:50,079 --> 00:13:54,160
i want to go ahead and compile that so

00:13:51,920 --> 00:13:59,279
to do that i can run npx hard hat

00:13:54,160 --> 00:14:02,720
compile npx hard cat compile is going to

00:13:59,279 --> 00:14:04,639
look and verify my smart contract is

00:14:02,720 --> 00:14:06,720
a good smart contract and if it is it's

00:14:04,639 --> 00:14:08,320
going to create an artifacts directory

00:14:06,720 --> 00:14:10,480
and in this artifacts directory it's

00:14:08,320 --> 00:14:11,839
going to give us something called an abi

00:14:10,480 --> 00:14:12,720
which is the application binary

00:14:11,839 --> 00:14:14,399
interface

00:14:12,720 --> 00:14:16,399
which is what we can use on our client

00:14:14,399 --> 00:14:18,079
application to interact with this smart

00:14:16,399 --> 00:14:20,639
contract

00:14:18,079 --> 00:14:22,160
so now that that's there we know that's

00:14:20,639 --> 00:14:25,199
there we want to deploy this

00:14:22,160 --> 00:14:28,560
so how do we deploy this to this

00:14:25,199 --> 00:14:30,240
network that we have here to do that

00:14:28,560 --> 00:14:32,560
we're going to run a script

00:14:30,240 --> 00:14:33,839
that hard hat created for us when we ran

00:14:32,560 --> 00:14:35,519
mpx hard hat

00:14:33,839 --> 00:14:38,240
and we're going to rename this script to

00:14:35,519 --> 00:14:39,360
deploy and in deploy.js we're going to

00:14:38,240 --> 00:14:40,639
be

00:14:39,360 --> 00:14:43,120
let's go ahead and delete some of these

00:14:40,639 --> 00:14:45,680
comments we're going to be

00:14:43,120 --> 00:14:47,199
basically taking a reference to the

00:14:45,680 --> 00:14:48,800
token contract here so we're going to

00:14:47,199 --> 00:14:51,360
say const token

00:14:48,800 --> 00:14:52,639
and we're going to say we want the token

00:14:51,360 --> 00:14:56,000
contract

00:14:52,639 --> 00:14:59,279
and then we can say kant's token

00:14:56,000 --> 00:14:59,680
is weight token.deploy we don't need to

00:14:59,279 --> 00:15:02,720
pass

00:14:59,680 --> 00:15:04,959
in any arguments and then once

00:15:02,720 --> 00:15:06,800
that's deployed we can say token

00:15:04,959 --> 00:15:09,440
deployed

00:15:06,800 --> 00:15:11,519
at token.address and we can log out the

00:15:09,440 --> 00:15:14,720
address of the smart contract

00:15:11,519 --> 00:15:17,839
that we've deployed to and

00:15:14,720 --> 00:15:18,880
we'll we'll be off to the races now how

00:15:17,839 --> 00:15:21,199
do we actually

00:15:18,880 --> 00:15:22,320
uh deploy this contract the way that

00:15:21,199 --> 00:15:24,079
we're going to do that is we're going to

00:15:22,320 --> 00:15:25,680
go to our terminal

00:15:24,079 --> 00:15:27,440
and we're going to go ahead and deploy

00:15:25,680 --> 00:15:31,360
this so i'm going to go ahead and run

00:15:27,440 --> 00:15:33,120
npx run scripts slash deploy.js and

00:15:31,360 --> 00:15:35,519
we're going to say we want to deploy

00:15:33,120 --> 00:15:37,120
to the localhost network and once this

00:15:35,519 --> 00:15:40,240
is deployed we should see

00:15:37,120 --> 00:15:42,560
the actual deployment come through

00:15:40,240 --> 00:15:45,920
right here on this side of our screen

00:15:42,560 --> 00:15:49,440
here so let's go ahead and try this out

00:15:45,920 --> 00:15:51,360
all right and once the

00:15:49,440 --> 00:15:53,040
app has been deployed we should see a

00:15:51,360 --> 00:15:56,240
lot of output over here

00:15:53,040 --> 00:16:00,000
including information like the

00:15:56,240 --> 00:16:02,560
contract address transaction as well as

00:16:00,000 --> 00:16:03,759
the address that sent the trip synthetic

00:16:02,560 --> 00:16:06,800
deployment

00:16:03,759 --> 00:16:08,000
so now that we have that deployed we

00:16:06,800 --> 00:16:10,320
should be able to go

00:16:08,000 --> 00:16:11,360
ahead and start interacting with it from

00:16:10,320 --> 00:16:12,959
our front end

00:16:11,360 --> 00:16:15,279
but before we do that let's go ahead and

00:16:12,959 --> 00:16:17,839
import this account into

00:16:15,279 --> 00:16:19,040
our actual browser wallet so we can

00:16:17,839 --> 00:16:21,920
start using

00:16:19,040 --> 00:16:22,800
the ether that is available and the way

00:16:21,920 --> 00:16:24,480
that we're going to do that is we're

00:16:22,800 --> 00:16:25,040
going to copy this private key and we're

00:16:24,480 --> 00:16:28,399
going to go

00:16:25,040 --> 00:16:31,360
into our browser and we can install

00:16:28,399 --> 00:16:33,199
an extension called metamask and here

00:16:31,360 --> 00:16:36,720
you can go ahead and sign up for

00:16:33,199 --> 00:16:39,440
a free account and you should be given

00:16:36,720 --> 00:16:41,040
a wallet and since we have this node

00:16:39,440 --> 00:16:42,639
running we can go ahead and jump to this

00:16:41,040 --> 00:16:45,440
localhost node

00:16:42,639 --> 00:16:47,360
and i can go ahead and import an account

00:16:45,440 --> 00:16:48,000
and to do that i'm going to go ahead and

00:16:47,360 --> 00:16:50,480
click on

00:16:48,000 --> 00:16:52,560
import account i'm going to paste in the

00:16:50,480 --> 00:16:55,199
private key here

00:16:52,560 --> 00:16:55,199
try that again

00:16:58,800 --> 00:17:02,079
and here we should see that we have our

00:17:01,440 --> 00:17:05,280
eth

00:17:02,079 --> 00:17:06,400
so in this case we have 9999 left over

00:17:05,280 --> 00:17:08,799
because we deployed

00:17:06,400 --> 00:17:10,000
which used some of the our fake eath and

00:17:08,799 --> 00:17:12,720
this is you know fakie

00:17:10,000 --> 00:17:13,679
for sure and um we're now available to

00:17:12,720 --> 00:17:16,400
start using that

00:17:13,679 --> 00:17:17,760
um you know in our app so the last thing

00:17:16,400 --> 00:17:18,400
we want to do is we want to go ahead and

00:17:17,760 --> 00:17:20,400
wire up

00:17:18,400 --> 00:17:21,839
our front end application to start

00:17:20,400 --> 00:17:24,160
interacting with this

00:17:21,839 --> 00:17:27,280
so i'm just going to actually copy a

00:17:24,160 --> 00:17:29,360
bunch of code over here

00:17:27,280 --> 00:17:30,720
and we're going to go ahead and open up

00:17:29,360 --> 00:17:34,400
our app

00:17:30,720 --> 00:17:37,200
and we're going to go into src app.js

00:17:34,400 --> 00:17:38,559
and we'll go ahead and paste in the code

00:17:37,200 --> 00:17:40,160
on our client side that we're going to

00:17:38,559 --> 00:17:41,919
need to be working with

00:17:40,160 --> 00:17:43,919
and one of the things that we're going

00:17:41,919 --> 00:17:45,360
to be needing is our token address

00:17:43,919 --> 00:17:47,280
so like what is the address where we

00:17:45,360 --> 00:17:49,120
just deployed the smart contract

00:17:47,280 --> 00:17:50,640
i can get that by going to my terminal

00:17:49,120 --> 00:17:52,240
and copying it here

00:17:50,640 --> 00:17:54,799
going back in my browser and pasting it

00:17:52,240 --> 00:17:56,080
here so this is the basic react app we

00:17:54,799 --> 00:17:57,919
have a couple things going on

00:17:56,080 --> 00:17:59,120
we have a couple of form fields that

00:17:57,919 --> 00:18:01,120
we're going to be keeping up with

00:17:59,120 --> 00:18:02,320
so when the user types in the amount

00:18:01,120 --> 00:18:03,840
they'd like to send

00:18:02,320 --> 00:18:05,919
and the account they'd like to send it

00:18:03,840 --> 00:18:08,400
to we want to store that in the state

00:18:05,919 --> 00:18:09,840
we have a way to request their wallet

00:18:08,400 --> 00:18:11,679
and then we have two functions that

00:18:09,840 --> 00:18:13,840
interact with our smart contracts

00:18:11,679 --> 00:18:14,720
one of those gets the balance that they

00:18:13,840 --> 00:18:17,120
have left

00:18:14,720 --> 00:18:18,799
and the other sends coins so when i sign

00:18:17,120 --> 00:18:20,400
in i can see how much i have left

00:18:18,799 --> 00:18:22,080
and then i can send coins and then i can

00:18:20,400 --> 00:18:23,679
check it to see how much i have left

00:18:22,080 --> 00:18:25,520
after sending my coins

00:18:23,679 --> 00:18:27,679
and then all we have left in our app

00:18:25,520 --> 00:18:30,080
after that is a pretty basic form

00:18:27,679 --> 00:18:31,919
and nothing really you know specific

00:18:30,080 --> 00:18:33,760
going on there to this stack that's kind

00:18:31,919 --> 00:18:35,600
of some basic react stuff

00:18:33,760 --> 00:18:37,840
so we want to go ahead and test this out

00:18:35,600 --> 00:18:40,960
so to do so i can go ahead and run

00:18:37,840 --> 00:18:42,400
npm start and we'll go ahead and give

00:18:40,960 --> 00:18:43,760
this a shot

00:18:42,400 --> 00:18:45,919
and while that's loading i'll go ahead

00:18:43,760 --> 00:18:48,960
and open up

00:18:45,919 --> 00:18:48,960
my browser here

00:18:50,720 --> 00:18:57,600
see if we can go ahead and load up

00:18:52,000 --> 00:19:00,400
localhost 3000 and see what happens

00:18:57,600 --> 00:19:02,160
so this is a very basic app and as you

00:19:00,400 --> 00:19:05,679
can see here

00:19:02,160 --> 00:19:08,000
whoops uh we have a form that says

00:19:05,679 --> 00:19:10,240
get balance or send coins so i'm going

00:19:08,000 --> 00:19:12,559
to go in my console

00:19:10,240 --> 00:19:13,600
and i'm going to go ahead and try this

00:19:12,559 --> 00:19:16,640
out

00:19:13,600 --> 00:19:18,000
so i'm going to click get balance and

00:19:16,640 --> 00:19:20,160
this is going to go ahead and prompt me

00:19:18,000 --> 00:19:24,240
to open up my metamask

00:19:20,160 --> 00:19:26,080
wallets and essentially authorize this

00:19:24,240 --> 00:19:27,280
connect my wallet and now we see we have

00:19:26,080 --> 00:19:29,360
a balance of

00:19:27,280 --> 00:19:30,880
1 million which is exactly right because

00:19:29,360 --> 00:19:34,000
that's how much we deployed

00:19:30,880 --> 00:19:36,160
to ourselves and now i want to send

00:19:34,000 --> 00:19:37,280
some to another person so the way that i

00:19:36,160 --> 00:19:39,039
might do that

00:19:37,280 --> 00:19:40,880
is i'll go here and i'll go ahead and

00:19:39,039 --> 00:19:43,600
say create an account

00:19:40,880 --> 00:19:45,120
i'll call this select test i'll get the

00:19:43,600 --> 00:19:48,000
address

00:19:45,120 --> 00:19:50,320
i'll jump back to my main account and

00:19:48,000 --> 00:19:53,840
i'll paste in that account id

00:19:50,320 --> 00:19:57,120
and i'm going to send them 100

00:19:53,840 --> 00:19:58,320
000 tokens and when i send the coins

00:19:57,120 --> 00:19:59,280
it's going to go ahead and prompt me

00:19:58,320 --> 00:20:01,360
again

00:19:59,280 --> 00:20:03,679
and here i can go ahead and authorize

00:20:01,360 --> 00:20:06,480
this request

00:20:03,679 --> 00:20:08,320
and i now see that coins successfully

00:20:06,480 --> 00:20:10,159
sent to this address

00:20:08,320 --> 00:20:11,440
i can now test that this went through by

00:20:10,159 --> 00:20:13,200
calling git balance again

00:20:11,440 --> 00:20:14,640
seeing that my balance is now down to

00:20:13,200 --> 00:20:15,600
nine hundred thousand after sending

00:20:14,640 --> 00:20:17,840
those those other

00:20:15,600 --> 00:20:19,600
to the other address and i might even be

00:20:17,840 --> 00:20:20,799
able to go ahead and maybe sign into

00:20:19,600 --> 00:20:22,640
other account and kind of

00:20:20,799 --> 00:20:24,960
read those but i think we're getting

00:20:22,640 --> 00:20:27,760
close to being finished on time

00:20:24,960 --> 00:20:29,440
so that is my you know quick demo to

00:20:27,760 --> 00:20:31,360
kind of show you how the stack works

00:20:29,440 --> 00:20:32,799
i know that was a lot but hopefully if

00:20:31,360 --> 00:20:34,159
you've never worked with this stuff

00:20:32,799 --> 00:20:35,520
you maybe thought that was kind of

00:20:34,159 --> 00:20:36,640
interesting and maybe learned a little

00:20:35,520 --> 00:20:38,799
bit

00:20:36,640 --> 00:20:40,880
so to wrap it up i just wanted to say

00:20:38,799 --> 00:20:43,360
thank you so much for checking out

00:20:40,880 --> 00:20:44,400
this talk checking out my demo if you

00:20:43,360 --> 00:20:50,080
want to learn more

00:20:44,400 --> 00:20:50,080
go to edgeandnode.com or go to dev.2

00:20:50,240 --> 00:20:54,000
3 or go check out my twitter thank you

00:20:52,559 --> 00:21:01,919
for checking out my talk and i hope you

00:20:54,000 --> 00:21:01,919

YouTube URL: https://www.youtube.com/watch?v=Ks9_hTXwh2o


