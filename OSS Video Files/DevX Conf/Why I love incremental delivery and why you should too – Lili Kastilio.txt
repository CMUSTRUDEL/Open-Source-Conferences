Title: Why I love incremental delivery and why you should too – Lili Kastilio
Publication date: 2021-04-29
Playlist: DevX Conf
Description: 
	In order to innovate and deliver new products that your users will love you often have to design & build very complex features. You may even be the first doing that in that particular way, so you will often struggle to find experts on the topic to help you. With incremental delivery you can empower your team to become the expert and still have a shorter time to market by delivering value to customers one mini feature at a time. At Snyk, my team has used incremental delivery to deliver countless technically complex features – this is definitely one for your toolbox.

About DevX Conf:
DevX Conf is a two-day virtual conference. It's a space where creators collaborate, listen, discuss and declutter our workflows, toolchains, and minds. To improve developer experience. Organized by Gitpod.
https://devxconf.org/
Captions: 
	00:00:14,799 --> 00:00:19,039
i want to talk to you today

00:00:16,240 --> 00:00:20,240
about why i love incremental delivery

00:00:19,039 --> 00:00:23,199
and why i think

00:00:20,240 --> 00:00:23,199
you should too

00:00:24,240 --> 00:00:28,240
when i started my role at sneak i had

00:00:26,800 --> 00:00:29,760
very little understanding

00:00:28,240 --> 00:00:33,120
of the challenges that would be ahead of

00:00:29,760 --> 00:00:35,680
me having just led a team at an agency

00:00:33,120 --> 00:00:37,200
building cookie cutter websites my

00:00:35,680 --> 00:00:39,520
expectations were

00:00:37,200 --> 00:00:41,280
that it would be similar but more

00:00:39,520 --> 00:00:43,200
challenging

00:00:41,280 --> 00:00:45,120
i was certainly not prepared for

00:00:43,200 --> 00:00:46,960
suddenly having to understand

00:00:45,120 --> 00:00:48,879
the inner workings of every single

00:00:46,960 --> 00:00:51,440
package manager and package registry

00:00:48,879 --> 00:00:53,039
that has ever been built

00:00:51,440 --> 00:00:54,960
and that's because i was joining the

00:00:53,039 --> 00:00:55,680
ecosystems team where we needed to

00:00:54,960 --> 00:00:58,320
understand

00:00:55,680 --> 00:01:00,239
how our users are managing their

00:00:58,320 --> 00:01:03,359
dependencies across

00:01:00,239 --> 00:01:03,359
many different languages

00:01:04,799 --> 00:01:07,840
i remember one of the first features was

00:01:07,200 --> 00:01:10,560
adding

00:01:07,840 --> 00:01:13,760
automatic security fixed pull requests

00:01:10,560 --> 00:01:16,080
for maven projects on the sneak platform

00:01:13,760 --> 00:01:17,280
this would upgrade a vulnerable version

00:01:16,080 --> 00:01:19,200
of a dependency

00:01:17,280 --> 00:01:21,520
to a non-vulnerable version for a

00:01:19,200 --> 00:01:24,560
particular vulnerability

00:01:21,520 --> 00:01:26,159
and if anyone here has used java before

00:01:24,560 --> 00:01:29,840
then you may know that dependency

00:01:26,159 --> 00:01:29,840
management is hard

00:01:30,560 --> 00:01:33,759
language resolution rules are really

00:01:32,720 --> 00:01:36,000
complex

00:01:33,759 --> 00:01:37,759
and there are many rules which decide

00:01:36,000 --> 00:01:38,880
which dependencies get installed in the

00:01:37,759 --> 00:01:41,119
end

00:01:38,880 --> 00:01:42,320
and all of that varies based on

00:01:41,119 --> 00:01:44,159
different conditions

00:01:42,320 --> 00:01:45,360
things like where did you define the

00:01:44,159 --> 00:01:47,119
dependency

00:01:45,360 --> 00:01:49,920
in what order did you define those

00:01:47,119 --> 00:01:52,880
dependencies what other files may be

00:01:49,920 --> 00:01:53,520
overriding this particular dependency

00:01:52,880 --> 00:01:57,200
version

00:01:53,520 --> 00:02:00,079
perhaps via some opinion or an exclusion

00:01:57,200 --> 00:02:01,360
or some other rule i won't go into too

00:02:00,079 --> 00:02:04,240
much detail as that

00:02:01,360 --> 00:02:05,520
could be an entire talk on its own

00:02:04,240 --> 00:02:07,759
however having

00:02:05,520 --> 00:02:09,679
never worked with maven for more than

00:02:07,759 --> 00:02:12,000
five minutes at university

00:02:09,679 --> 00:02:12,720
i needed to deliver features that

00:02:12,000 --> 00:02:14,640
required an

00:02:12,720 --> 00:02:15,840
understanding of the inner workings of

00:02:14,640 --> 00:02:17,360
maven

00:02:15,840 --> 00:02:19,200
and at the time we were small and

00:02:17,360 --> 00:02:20,840
growing startup so we needed those

00:02:19,200 --> 00:02:24,480
features

00:02:20,840 --> 00:02:27,360
fast not only did we need to understand

00:02:24,480 --> 00:02:30,480
the complexity

00:02:27,360 --> 00:02:33,120
of what changed to apply in

00:02:30,480 --> 00:02:34,640
form xml file sometimes we also needed

00:02:33,120 --> 00:02:36,319
to understand

00:02:34,640 --> 00:02:38,640
which particular file to make the

00:02:36,319 --> 00:02:41,519
changes in and that's because

00:02:38,640 --> 00:02:42,720
maven has this concept of having a

00:02:41,519 --> 00:02:45,200
parent pump

00:02:42,720 --> 00:02:45,920
where each profile could have its own

00:02:45,200 --> 00:02:48,560
parent

00:02:45,920 --> 00:02:51,120
and in that parent you may override

00:02:48,560 --> 00:02:52,640
dependency versions or set exclusions or

00:02:51,120 --> 00:02:54,239
define some other rules

00:02:52,640 --> 00:02:57,040
which all end up feeding into which

00:02:54,239 --> 00:02:59,200
dependency gets chosen in the end

00:02:57,040 --> 00:03:00,560
so if you don't apply your change in

00:02:59,200 --> 00:03:03,200
exactly the right place

00:03:00,560 --> 00:03:03,680
in exactly the right file chances are

00:03:03,200 --> 00:03:05,920
your

00:03:03,680 --> 00:03:08,080
your change will be completely ignored

00:03:05,920 --> 00:03:09,920
and just the original version of that

00:03:08,080 --> 00:03:12,720
dependency is going to get pulled in at

00:03:09,920 --> 00:03:16,640
the next install

00:03:12,720 --> 00:03:20,080
so after this feature came npm log files

00:03:16,640 --> 00:03:22,080
yarn nugget and honestly it felt like

00:03:20,080 --> 00:03:24,720
every week there was a brand new package

00:03:22,080 --> 00:03:26,319
manager that needed to be understood

00:03:24,720 --> 00:03:28,480
because we needed to build features for

00:03:26,319 --> 00:03:28,480
it

00:03:30,159 --> 00:03:33,519
well luckily for me when i joined sneak

00:03:32,239 --> 00:03:35,840
we already had

00:03:33,519 --> 00:03:36,560
some incremental delivery processes in

00:03:35,840 --> 00:03:40,400
place

00:03:36,560 --> 00:03:40,400
to help navigate this complexity

00:03:40,959 --> 00:03:44,959
incremental delivery is a practice of

00:03:43,280 --> 00:03:48,720
releasing to production

00:03:44,959 --> 00:03:50,799
one mini feature at a time each release

00:03:48,720 --> 00:03:52,799
brings benefit to the user and the

00:03:50,799 --> 00:03:56,159
feature gets better and more polished

00:03:52,799 --> 00:03:56,159
with every single release

00:03:56,720 --> 00:04:00,400
as an example i will share with you a

00:03:59,360 --> 00:04:04,239
city fantasy

00:04:00,400 --> 00:04:04,959
i have of mine where i think that maybe

00:04:04,239 --> 00:04:07,280
one day

00:04:04,959 --> 00:04:09,040
when i retire i would like to open a

00:04:07,280 --> 00:04:11,840
cake shop

00:04:09,040 --> 00:04:14,000
and this is because i love food i love

00:04:11,840 --> 00:04:16,959
cooking food i love eating food

00:04:14,000 --> 00:04:18,320
and i certainly love making desserts so

00:04:16,959 --> 00:04:21,840
i can see myself one day

00:04:18,320 --> 00:04:23,919
taking this further but if i did this

00:04:21,840 --> 00:04:26,080
i would certainly use the principles of

00:04:23,919 --> 00:04:27,680
incremental delivery to help me

00:04:26,080 --> 00:04:29,360
and that's because i want to make money

00:04:27,680 --> 00:04:30,960
as soon as possible

00:04:29,360 --> 00:04:33,680
and i would like to also become an

00:04:30,960 --> 00:04:36,720
expert on the cakes that i'm making

00:04:33,680 --> 00:04:39,840
so i could have much nicer cakes

00:04:36,720 --> 00:04:41,040
than some other shops and as a small

00:04:39,840 --> 00:04:43,759
bakery

00:04:41,040 --> 00:04:44,400
you also want to stand out so you need

00:04:43,759 --> 00:04:46,720
to work

00:04:44,400 --> 00:04:48,400
on something that makes you unique sets

00:04:46,720 --> 00:04:51,040
you apart from others to bring in

00:04:48,400 --> 00:04:51,040
the customers

00:04:53,600 --> 00:04:59,919
so first i would develop a recipe

00:04:57,759 --> 00:05:00,800
just for the sponge i know i need a

00:04:59,919 --> 00:05:03,680
sponge

00:05:00,800 --> 00:05:06,560
for all the cakes later down the line so

00:05:03,680 --> 00:05:09,120
i need to work on it regardless

00:05:06,560 --> 00:05:11,120
and even from day one i would start

00:05:09,120 --> 00:05:12,560
selling very basic cupcakes from this

00:05:11,120 --> 00:05:14,960
sponge

00:05:12,560 --> 00:05:16,400
if the recipe is not working so well if

00:05:14,960 --> 00:05:17,440
it doesn't taste as great and it's not

00:05:16,400 --> 00:05:19,919
selling well

00:05:17,440 --> 00:05:20,479
i would adjust and tweak it every day

00:05:19,919 --> 00:05:22,880
until

00:05:20,479 --> 00:05:25,840
i find one that works well for me and

00:05:22,880 --> 00:05:25,840
the customers enjoy

00:05:26,720 --> 00:05:32,960
once i'm there i would look at

00:05:29,919 --> 00:05:35,199
working on some frosting and figure out

00:05:32,960 --> 00:05:38,000
what type of flavors i want what type of

00:05:35,199 --> 00:05:40,240
texture what kind of frosting as well so

00:05:38,000 --> 00:05:43,680
i could start selling frosted cupcakes

00:05:40,240 --> 00:05:43,680
from that day as well

00:05:44,560 --> 00:05:50,080
then as the frosting is decided upon the

00:05:48,160 --> 00:05:51,360
sponge is decided upon because start

00:05:50,080 --> 00:05:53,199
having some fun

00:05:51,360 --> 00:05:55,039
this is where you could start learning

00:05:53,199 --> 00:05:58,240
how to pipe how to make

00:05:55,039 --> 00:06:00,800
roses how to make intricate designs

00:05:58,240 --> 00:06:01,680
decorate the cupcakes the fancier they

00:06:00,800 --> 00:06:03,919
look

00:06:01,680 --> 00:06:07,840
the higher you can raise the prices

00:06:03,919 --> 00:06:07,840
which is great for business

00:06:08,000 --> 00:06:11,120
after that it would be time to think

00:06:10,240 --> 00:06:13,919
bigger

00:06:11,120 --> 00:06:14,720
perhaps a rusty cake that would go great

00:06:13,919 --> 00:06:16,160
with tea

00:06:14,720 --> 00:06:18,000
or something that would be a nice

00:06:16,160 --> 00:06:21,520
birthday cake still

00:06:18,000 --> 00:06:24,960
quite simple frosting and sponge layers

00:06:21,520 --> 00:06:24,960
with a little bit of decoration

00:06:26,240 --> 00:06:32,479
then we can start adding fancier layers

00:06:29,440 --> 00:06:34,720
more layers more different types of

00:06:32,479 --> 00:06:36,880
filling play around until you start

00:06:34,720 --> 00:06:39,360
getting to a really luxurious texture of

00:06:36,880 --> 00:06:39,360
your cake

00:06:40,960 --> 00:06:44,080
and after that you would be basically

00:06:42,800 --> 00:06:46,240
perfecting

00:06:44,080 --> 00:06:47,199
what you know already and start working

00:06:46,240 --> 00:06:50,080
on a

00:06:47,199 --> 00:06:51,599
structured shape for your cakes which at

00:06:50,080 --> 00:06:54,639
this point will become

00:06:51,599 --> 00:06:56,160
basically your basic wedding cake which

00:06:54,639 --> 00:07:00,000
is something that might be lovely

00:06:56,160 --> 00:07:02,880
for like a simple rustic wedding

00:07:00,000 --> 00:07:03,360
as you get better and better the cakes

00:07:02,880 --> 00:07:05,360
will get

00:07:03,360 --> 00:07:07,360
fancier and fancier so you could cater

00:07:05,360 --> 00:07:08,080
to more customers to more different

00:07:07,360 --> 00:07:10,960
needs

00:07:08,080 --> 00:07:13,039
and you can start charging more and this

00:07:10,960 --> 00:07:14,960
cycle basically never ends

00:07:13,039 --> 00:07:16,080
you will just get better and better and

00:07:14,960 --> 00:07:18,479
better

00:07:16,080 --> 00:07:20,560
otherwise if you stop improving yourself

00:07:18,479 --> 00:07:22,960
somebody else might

00:07:20,560 --> 00:07:26,080
end up being better than you and your

00:07:22,960 --> 00:07:27,360
customers will go to them instead

00:07:26,080 --> 00:07:29,199
of course there is an extreme

00:07:27,360 --> 00:07:30,240
alternative to this process you could

00:07:29,199 --> 00:07:32,400
have

00:07:30,240 --> 00:07:34,000
experimented and literally waited until

00:07:32,400 --> 00:07:35,840
you were this good

00:07:34,000 --> 00:07:38,080
before you even sold a single wedding

00:07:35,840 --> 00:07:41,120
cake or even a single

00:07:38,080 --> 00:07:41,919
baked good but all the while you would

00:07:41,120 --> 00:07:44,080
have spent

00:07:41,919 --> 00:07:45,840
lots of money on ingredients and lots of

00:07:44,080 --> 00:07:47,759
your time as well as rent

00:07:45,840 --> 00:07:50,240
so you would have been losing money this

00:07:47,759 --> 00:07:50,240
whole time

00:07:51,039 --> 00:07:58,400
so how can this approach help us

00:07:55,039 --> 00:08:00,879
deliver complex engineering features

00:07:58,400 --> 00:08:00,879
as well

00:08:02,800 --> 00:08:06,800
so i want to go back to my experience at

00:08:04,479 --> 00:08:09,599
sneak and as i mentioned when i joined

00:08:06,800 --> 00:08:12,160
we already had some incremental delivery

00:08:09,599 --> 00:08:13,840
practices in place

00:08:12,160 --> 00:08:15,680
for example we would always start a

00:08:13,840 --> 00:08:17,039
feature with a spike

00:08:15,680 --> 00:08:19,440
which at smaller companies could of

00:08:17,039 --> 00:08:21,039
course turn into an mvp

00:08:19,440 --> 00:08:22,479
but you know that's that doesn't stay

00:08:21,039 --> 00:08:25,039
around for long

00:08:22,479 --> 00:08:25,759
um so when we were smaller we were able

00:08:25,039 --> 00:08:28,800
to do

00:08:25,759 --> 00:08:30,400
two hack weeks per year so that meant

00:08:28,800 --> 00:08:32,000
that we would kick off every single

00:08:30,400 --> 00:08:34,479
feature and potential feature

00:08:32,000 --> 00:08:35,919
with a spike and these spikes were

00:08:34,479 --> 00:08:39,120
immensely valuable

00:08:35,919 --> 00:08:41,839
because you learn a lot quickly and from

00:08:39,120 --> 00:08:44,240
these spikes you can identify blockers

00:08:41,839 --> 00:08:45,120
confirm assumptions and flag unknowns

00:08:44,240 --> 00:08:48,240
that would require

00:08:45,120 --> 00:08:48,240
further investigation

00:08:49,680 --> 00:08:54,560
after the spike you would be ready to

00:08:51,839 --> 00:08:55,839
start building something so at this

00:08:54,560 --> 00:08:57,839
point you know

00:08:55,839 --> 00:08:59,519
which changes need to be made you know

00:08:57,839 --> 00:09:01,519
what is and isn't possible

00:08:59,519 --> 00:09:03,120
so you can choose what to deliver at

00:09:01,519 --> 00:09:06,080
this point that would have

00:09:03,120 --> 00:09:08,480
maximum impact for your customers and

00:09:06,080 --> 00:09:12,560
you can always add more later

00:09:08,480 --> 00:09:15,120
so it's just a matter of choosing wisely

00:09:12,560 --> 00:09:16,560
after this you can release and this is

00:09:15,120 --> 00:09:18,080
when you definitely want to make sure

00:09:16,560 --> 00:09:20,880
that you are measuring

00:09:18,080 --> 00:09:21,760
how is this feature doing speak to your

00:09:20,880 --> 00:09:23,839
customers

00:09:21,760 --> 00:09:25,120
are they enjoying this feature does it

00:09:23,839 --> 00:09:28,399
meet their requirements

00:09:25,120 --> 00:09:31,279
is there something that you thought was

00:09:28,399 --> 00:09:33,040
really important to release now um that

00:09:31,279 --> 00:09:34,839
perhaps they found wasn't as important

00:09:33,040 --> 00:09:36,320
as something else that you haven't

00:09:34,839 --> 00:09:38,560
considered

00:09:36,320 --> 00:09:40,560
their feedback should guide you into the

00:09:38,560 --> 00:09:43,440
next iteration of this feature and into

00:09:40,560 --> 00:09:43,440
the next cycle

00:09:44,480 --> 00:09:48,480
so every sprint would become quite

00:09:46,480 --> 00:09:51,680
similar you would do

00:09:48,480 --> 00:09:54,399
the spike build and measure cycle

00:09:51,680 --> 00:09:55,839
every single time and if you're not sure

00:09:54,399 --> 00:09:56,720
about what it is that you should be

00:09:55,839 --> 00:09:59,760
spiking

00:09:56,720 --> 00:10:02,079
a good direction could be challenge an

00:09:59,760 --> 00:10:04,800
assumption that you might have

00:10:02,079 --> 00:10:05,680
or perhaps something that you think is

00:10:04,800 --> 00:10:07,360
not possible

00:10:05,680 --> 00:10:08,959
see if it is possible or prove to

00:10:07,360 --> 00:10:11,680
yourself that it is not

00:10:08,959 --> 00:10:13,120
you you use this as a way to sort of

00:10:11,680 --> 00:10:16,560
answer

00:10:13,120 --> 00:10:20,079
the unknown questions and also discover

00:10:16,560 --> 00:10:21,920
what you do know and what you don't know

00:10:20,079 --> 00:10:23,839
then you can build a mini feature around

00:10:21,920 --> 00:10:27,200
any new findings that you have

00:10:23,839 --> 00:10:29,200
if you are certain about those again

00:10:27,200 --> 00:10:30,320
get the customer feedback review and the

00:10:29,200 --> 00:10:31,839
analytics

00:10:30,320 --> 00:10:33,680
and make sure that you're using all the

00:10:31,839 --> 00:10:36,560
feedback from the previous cycle

00:10:33,680 --> 00:10:38,399
in this one as well but also be prepared

00:10:36,560 --> 00:10:40,240
to completely change your plans

00:10:38,399 --> 00:10:41,839
based on the feedback that you get

00:10:40,240 --> 00:10:43,440
because it may be that you have been

00:10:41,839 --> 00:10:44,880
looking in the wrong direction and the

00:10:43,440 --> 00:10:47,839
customers want something entirely

00:10:44,880 --> 00:10:47,839
different

00:10:49,440 --> 00:10:53,680
so there are pros and cons to this

00:10:51,600 --> 00:10:55,680
approach of course

00:10:53,680 --> 00:10:57,440
the pros would be that you can show

00:10:55,680 --> 00:11:00,880
value quickly

00:10:57,440 --> 00:11:02,640
within one sprint after a one day spike

00:11:00,880 --> 00:11:04,640
you could potentially deliver something

00:11:02,640 --> 00:11:06,160
simple but powerful that your customers

00:11:04,640 --> 00:11:08,000
need

00:11:06,160 --> 00:11:09,680
also means that you can change direction

00:11:08,000 --> 00:11:11,519
quickly so if what you've delivered

00:11:09,680 --> 00:11:13,920
doesn't meet the requirements

00:11:11,519 --> 00:11:14,800
you can quickly adapt and deliver

00:11:13,920 --> 00:11:18,320
something new

00:11:14,800 --> 00:11:20,240
quite quickly iterations based on

00:11:18,320 --> 00:11:22,320
customer feedback like this

00:11:20,240 --> 00:11:24,160
mean that in the end the customer ends

00:11:22,320 --> 00:11:25,920
up getting exactly the feature that

00:11:24,160 --> 00:11:26,480
they've asked for because they've helped

00:11:25,920 --> 00:11:29,839
you

00:11:26,480 --> 00:11:29,839
shape it as you went along

00:11:30,240 --> 00:11:35,120
one of the pros that i really like is

00:11:32,160 --> 00:11:37,120
that you start sort of thinking in small

00:11:35,120 --> 00:11:39,680
buildable blocks that add layers of

00:11:37,120 --> 00:11:41,040
value over time

00:11:39,680 --> 00:11:42,959
and also this kind of approach

00:11:41,040 --> 00:11:44,959
prioritizes learning

00:11:42,959 --> 00:11:47,120
which is an important step that

00:11:44,959 --> 00:11:47,760
everybody can take towards becoming an

00:11:47,120 --> 00:11:50,800
expert

00:11:47,760 --> 00:11:53,200
in that particular topic

00:11:50,800 --> 00:11:55,040
there are downsides to this of course it

00:11:53,200 --> 00:11:58,160
requires a change in how you

00:11:55,040 --> 00:11:59,360
plan and execute your work and making

00:11:58,160 --> 00:12:01,519
changes

00:11:59,360 --> 00:12:04,160
to process and culture can be really

00:12:01,519 --> 00:12:04,160
really difficult

00:12:04,560 --> 00:12:09,360
this is a a pro and a con

00:12:07,920 --> 00:12:11,200
the the fact that you have to start

00:12:09,360 --> 00:12:13,279
thinking in sort of small buildable

00:12:11,200 --> 00:12:15,120
blocks to add layers of value

00:12:13,279 --> 00:12:16,720
and that's because you probably won't be

00:12:15,120 --> 00:12:19,040
very good at it at first

00:12:16,720 --> 00:12:24,639
but you will get better and better with

00:12:19,040 --> 00:12:26,480
every single iteration

00:12:24,639 --> 00:12:27,920
some of my tips to help you get the most

00:12:26,480 --> 00:12:30,240
of this process would be

00:12:27,920 --> 00:12:31,360
that make sure that you time box your

00:12:30,240 --> 00:12:33,200
spikes

00:12:31,360 --> 00:12:35,680
otherwise they will take as long as you

00:12:33,200 --> 00:12:38,639
give them half a day to a day

00:12:35,680 --> 00:12:38,880
is really a good amount of time to sort

00:12:38,639 --> 00:12:41,760
of

00:12:38,880 --> 00:12:43,120
help yourself answer some questions

00:12:41,760 --> 00:12:46,079
challenge some assumptions

00:12:43,120 --> 00:12:47,519
discover some unknowns or simply do a

00:12:46,079 --> 00:12:49,600
quick sort of hacky spike

00:12:47,519 --> 00:12:51,120
to see where the changes need to be so

00:12:49,600 --> 00:12:53,279
that you know that there is nothing

00:12:51,120 --> 00:12:54,959
hidden that you haven't thought about

00:12:53,279 --> 00:12:57,600
waiting for you down the line when you

00:12:54,959 --> 00:12:57,600
start building

00:12:57,920 --> 00:13:03,519
use the spikes as a way to

00:13:01,040 --> 00:13:05,040
understand the unknown explore how to

00:13:03,519 --> 00:13:06,639
address a problem

00:13:05,040 --> 00:13:09,200
perhaps if you have a really complex

00:13:06,639 --> 00:13:11,120
refactor a spike could be a way to try a

00:13:09,200 --> 00:13:12,959
particular approach as well

00:13:11,120 --> 00:13:15,680
you would learn a lot of valuable

00:13:12,959 --> 00:13:17,200
information from doing this

00:13:15,680 --> 00:13:20,160
make sure that you are prioritizing

00:13:17,200 --> 00:13:23,519
learning it is not wasted time

00:13:20,160 --> 00:13:27,120
this learning if it's part of your um

00:13:23,519 --> 00:13:29,839
every day uh is the reason people become

00:13:27,120 --> 00:13:31,440
experts if you are constantly challenged

00:13:29,839 --> 00:13:33,680
if you are constantly

00:13:31,440 --> 00:13:34,560
encouraged to learn and become better

00:13:33,680 --> 00:13:37,360
and understand

00:13:34,560 --> 00:13:39,839
more then you will naturally improve and

00:13:37,360 --> 00:13:39,839
progress

00:13:39,920 --> 00:13:43,680
make sure that you speak to your

00:13:41,279 --> 00:13:44,880
customers and i am looking at you the

00:13:43,680 --> 00:13:46,880
engineers

00:13:44,880 --> 00:13:48,320
because they will really help you

00:13:46,880 --> 00:13:50,959
understand what is

00:13:48,320 --> 00:13:52,959
really important to them and also it's

00:13:50,959 --> 00:13:54,800
always great to hear

00:13:52,959 --> 00:13:56,480
what they're looking for firsthand

00:13:54,800 --> 00:13:57,839
because you might be surprised that

00:13:56,480 --> 00:13:58,560
something that you thought was really

00:13:57,839 --> 00:14:00,959
important

00:13:58,560 --> 00:14:03,839
is actually not the number one priority

00:14:00,959 --> 00:14:03,839
for them

00:14:04,959 --> 00:14:09,600
this may sound really simple but i think

00:14:07,760 --> 00:14:13,440
it is a quite

00:14:09,600 --> 00:14:16,160
a powerful sort of way of working

00:14:13,440 --> 00:14:16,800
with every iteration you will get better

00:14:16,160 --> 00:14:21,920
and better

00:14:16,800 --> 00:14:21,920
naturally so do stick with it

00:14:23,120 --> 00:14:26,720
the key thing i want you to take away

00:14:24,720 --> 00:14:28,000
from this is that incremental delivery

00:14:26,720 --> 00:14:30,079
can help you break down

00:14:28,000 --> 00:14:31,040
a complex feature into small

00:14:30,079 --> 00:14:33,040
deliverables

00:14:31,040 --> 00:14:34,639
and empower you to become an expert

00:14:33,040 --> 00:14:36,639
along the way

00:14:34,639 --> 00:14:38,800
to do this make sure that you use the

00:14:36,639 --> 00:14:41,360
learn build and measure cycle

00:14:38,800 --> 00:14:43,120
every single sprint where each sprint

00:14:41,360 --> 00:14:45,440
you focus on delivering

00:14:43,120 --> 00:14:46,720
one or more midi features that you are

00:14:45,440 --> 00:14:50,000
sure about

00:14:46,720 --> 00:14:52,160
and the mini features should come

00:14:50,000 --> 00:14:53,839
from sort of the different feedback that

00:14:52,160 --> 00:14:56,079
you get from the customer

00:14:53,839 --> 00:14:57,440
also from the spikes that the engineers

00:14:56,079 --> 00:15:00,720
have done

00:14:57,440 --> 00:15:03,519
and based on all the analytics that you

00:15:00,720 --> 00:15:05,760
have collected as well

00:15:03,519 --> 00:15:06,880
build and adapt the features slowly and

00:15:05,760 --> 00:15:08,720
over time

00:15:06,880 --> 00:15:10,800
and you will end up reducing complexity

00:15:08,720 --> 00:15:20,560
no matter what it is

00:15:10,800 --> 00:15:20,560

YouTube URL: https://www.youtube.com/watch?v=AnxWXQMauMI


