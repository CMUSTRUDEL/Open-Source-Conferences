Title: Jack & Ben Show Episode 2: Talking Offline with Jack & Ben
Publication date: 2016-06-02
Playlist: Jack & Ben Show
Description: 
	This week we've been talking about offline browser technologies, in particular Service Workers.

Service Workers: 
  https://developer.mozilla.org/en-US/docs/Web/API/Service_Worker_API/Using_Service_Workers

Pusher-js 3.1 release: 
  https://blog.pusher.com/announcing-pusherjs-3-1-supporting-reactnative-service-workers-and-nodejs/

Csvconf:
  http://csvconf.com/#bfoxall 

Runkeeper data export:
  https://runkeeper-data.herokuapp.com/

Appcache is a douchebag:
  http://alistapart.com/article/application-cache-is-a-douchebag

Elm 0.17: 
  http://elm-lang.org/blog/farewell-to-frp

Ben’s Circles:
  https://twitter.com/benjaminbenben/status/728182106858225665
  

We’d love to hear comments, suggestions, or questions - tweet at @pusher, or leave a comment below.
Captions: 
	00:00:00,199 --> 00:00:09,410
so Ben what footballer works best

00:00:03,540 --> 00:00:09,410
without internet access offline or messy

00:00:11,990 --> 00:00:16,289
everyone welcome to the Jack and Ben

00:00:14,700 --> 00:00:17,789
show mine is Jack I'm a developer

00:00:16,289 --> 00:00:19,859
evangelist here at pusher and enjoyed by

00:00:17,789 --> 00:00:21,630
my colleague been i'm also a developer

00:00:19,859 --> 00:00:25,289
evangelist here at Fisher as well go us

00:00:21,630 --> 00:00:26,939
go us go insane cool and yeah today

00:00:25,289 --> 00:00:28,830
we're gonna be talking a bit about the

00:00:26,939 --> 00:00:32,070
web and building offline websites and

00:00:28,830 --> 00:00:33,750
applications cool yes so I'm really

00:00:32,070 --> 00:00:35,969
excited about offline web apps

00:00:33,750 --> 00:00:38,010
especially with the stuff we do a pusher

00:00:35,969 --> 00:00:39,660
likes we I think it works with the

00:00:38,010 --> 00:00:41,129
things that we see people using pusher

00:00:39,660 --> 00:00:44,040
for because when you're building

00:00:41,129 --> 00:00:46,469
something that reacts to real-time data

00:00:44,040 --> 00:00:48,840
you've almost got intuitive the offline

00:00:46,469 --> 00:00:51,899
state as well so I'm looking forward to

00:00:48,840 --> 00:00:55,800
seeing people adapt that more as I can a

00:00:51,899 --> 00:00:57,030
UI thing yeah and also another thing

00:00:55,800 --> 00:00:59,460
that's kind of exciting at the moment is

00:00:57,030 --> 00:01:01,170
like we just released a new version of

00:00:59,460 --> 00:01:02,789
our precious library which also runs in

00:01:01,170 --> 00:01:04,530
a service worker I think there's a lot

00:01:02,789 --> 00:01:06,600
of cool stuff that we could do there

00:01:04,530 --> 00:01:11,130
yeah shout out to a colleague Jamie for

00:01:06,600 --> 00:01:12,240
the push of 3.1 yet togo jamie so so

00:01:11,130 --> 00:01:13,830
service workers are coming in form of

00:01:12,240 --> 00:01:16,080
the main focuses of the offline web

00:01:13,830 --> 00:01:17,610
today and they've been around they're

00:01:16,080 --> 00:01:19,140
fairly new by the feds say they've been

00:01:17,610 --> 00:01:20,430
around for a little bit of time now yeah

00:01:19,140 --> 00:01:22,530
you're not going to don't pay out a

00:01:20,430 --> 00:01:23,790
little bit across other browsers rather

00:01:22,530 --> 00:01:26,430
than chrome we're kind of push for

00:01:23,790 --> 00:01:28,619
additionally so a service worker is kind

00:01:26,430 --> 00:01:30,630
of a script or that sits between the

00:01:28,619 --> 00:01:33,200
browser and the network right and it

00:01:30,630 --> 00:01:35,700
lets you inset requests and either

00:01:33,200 --> 00:01:37,560
respond with some static data for those

00:01:35,700 --> 00:01:40,829
requests or go into a cache of data

00:01:37,560 --> 00:01:42,299
which is obviously works offline or you

00:01:40,829 --> 00:01:43,860
can go and still hit the network and

00:01:42,299 --> 00:01:45,600
then cash the response and then the next

00:01:43,860 --> 00:01:46,920
time you you have our data back so

00:01:45,600 --> 00:01:49,170
that's the kind of Gemma ID rights as

00:01:46,920 --> 00:01:50,640
workers is we can have loads of control

00:01:49,170 --> 00:01:52,470
over the network requests which we've

00:01:50,640 --> 00:01:53,939
never been out to do before totally and

00:01:52,470 --> 00:01:55,950
hope that whole style of having a kind

00:01:53,939 --> 00:01:59,119
of script is existing outside your page

00:01:55,950 --> 00:02:01,469
just allows so many kind of new things

00:01:59,119 --> 00:02:03,210
which is awesome and everything I carats

00:02:01,469 --> 00:02:05,880
is such a kind of small idea but it's

00:02:03,210 --> 00:02:07,220
got really big ramifications so suddenly

00:02:05,880 --> 00:02:09,979
you're able to kind of have

00:02:07,220 --> 00:02:12,050
push notifications do background syncing

00:02:09,979 --> 00:02:14,990
all that kinda stuff so last week I was

00:02:12,050 --> 00:02:16,760
a CSV comp over in Berlin which was

00:02:14,990 --> 00:02:18,370
brilliant this is about kind of open

00:02:16,760 --> 00:02:21,320
data and things that we can do with that

00:02:18,370 --> 00:02:24,590
and I built a project for that which was

00:02:21,320 --> 00:02:27,200
a tool that gathered together data from

00:02:24,590 --> 00:02:29,720
a runkeeper API don't RunKeeper API and

00:02:27,200 --> 00:02:31,100
pulls down all that data and allows you

00:02:29,720 --> 00:02:32,570
to access that through a service worker

00:02:31,100 --> 00:02:34,880
so you're kind of synthesizing this

00:02:32,570 --> 00:02:35,960
these URLs and what's really cool is

00:02:34,880 --> 00:02:38,960
like once you've got data in your

00:02:35,960 --> 00:02:40,190
browser you can format that data in

00:02:38,960 --> 00:02:42,050
different ways through that service

00:02:40,190 --> 00:02:43,760
worker and it means that you don't have

00:02:42,050 --> 00:02:45,260
to have like a kind of complex web

00:02:43,760 --> 00:02:47,660
service that is doing all this kind of

00:02:45,260 --> 00:02:50,360
processing and yeah kind of it worked

00:02:47,660 --> 00:02:51,800
out pretty well yeah yeah what I really

00:02:50,360 --> 00:02:54,050
liked when I saw the demo application

00:02:51,800 --> 00:02:55,580
you'd built was how you had so you had

00:02:54,050 --> 00:02:57,410
like a ton of different URLs that sort

00:02:55,580 --> 00:02:59,270
that gave you the data in a different

00:02:57,410 --> 00:03:00,890
set of data more categories are

00:02:59,270 --> 00:03:02,090
differently or whatever why I really

00:03:00,890 --> 00:03:03,680
liked about that is because you're

00:03:02,090 --> 00:03:07,040
caching all the data off line is if you

00:03:03,680 --> 00:03:08,990
visited a JSON and get a ticket set of

00:03:07,040 --> 00:03:11,150
JSON your online for that that was fine

00:03:08,990 --> 00:03:13,430
but now the data is cached offline you

00:03:11,150 --> 00:03:14,959
can go to bj's on and it will show you a

00:03:13,430 --> 00:03:17,330
different set of data but from the cap

00:03:14,959 --> 00:03:18,860
app so you had a kind of full offline

00:03:17,330 --> 00:03:20,420
support with yeah pretty lift little

00:03:18,860 --> 00:03:21,850
effort told really i think the

00:03:20,420 --> 00:03:24,560
serviceworker gives a really nice

00:03:21,850 --> 00:03:26,209
abstraction for if you're doing

00:03:24,560 --> 00:03:28,220
especially data-driven visualizations

00:03:26,209 --> 00:03:30,800
and stuff like so in your front end

00:03:28,220 --> 00:03:32,180
you're just making Ajax call and that

00:03:30,800 --> 00:03:34,700
happens to not be going to server but

00:03:32,180 --> 00:03:36,500
just being served just from the service

00:03:34,700 --> 00:03:37,850
worker and that means that your

00:03:36,500 --> 00:03:39,350
front-end code doesn't have to know

00:03:37,850 --> 00:03:41,209
anything about the database it doesn't

00:03:39,350 --> 00:03:43,610
have to know about anything to do with

00:03:41,209 --> 00:03:46,020
how to access those API is all it seizes

00:03:43,610 --> 00:03:49,470
i canna Jason or CSV or

00:03:46,020 --> 00:03:51,060
whatever you want yep yeah I like it

00:03:49,470 --> 00:03:53,730
prior to service worker we have this

00:03:51,060 --> 00:03:56,760
thing called app cache which was the the

00:03:53,730 --> 00:03:58,080
precursor really which was didn't

00:03:56,760 --> 00:03:59,970
rillette you be fed said every let you

00:03:58,080 --> 00:04:01,740
configure much about their kind of gave

00:03:59,970 --> 00:04:03,000
you this solution and if that solution

00:04:01,740 --> 00:04:04,470
fitted what you were doing that was

00:04:03,000 --> 00:04:06,450
great but if it didn't then that really

00:04:04,470 --> 00:04:08,700
kind of you you couldn't tweak it or

00:04:06,450 --> 00:04:11,820
change it and then Jake Archibald post

00:04:08,700 --> 00:04:14,070
app cache is a douche bag and kind of

00:04:11,820 --> 00:04:15,930
spoke about it and that led towards Jake

00:04:14,070 --> 00:04:17,520
and I was working on on service workers

00:04:15,930 --> 00:04:19,320
and its really interesting we're seeing

00:04:17,520 --> 00:04:20,790
this trend now of new browser api's and

00:04:19,320 --> 00:04:22,230
features being added that a much more

00:04:20,790 --> 00:04:24,690
lower level than we would have expected

00:04:22,230 --> 00:04:26,280
in the past and service workers really

00:04:24,690 --> 00:04:28,140
good example of this because it gives

00:04:26,280 --> 00:04:30,420
you nothing out the box right you have

00:04:28,140 --> 00:04:31,920
to write even the most basic example of

00:04:30,420 --> 00:04:33,360
a serviceworker where you you hit the

00:04:31,920 --> 00:04:35,250
network you cash the requests that you

00:04:33,360 --> 00:04:36,510
serve from the cash you still have to

00:04:35,250 --> 00:04:38,190
write the code to do that that's not

00:04:36,510 --> 00:04:40,680
that much to write but you still have to

00:04:38,190 --> 00:04:42,570
do it their way I've really enjoyed that

00:04:40,680 --> 00:04:44,940
we expose more low-level api's and

00:04:42,570 --> 00:04:46,170
giving developers full control even that

00:04:44,940 --> 00:04:48,090
means there's a bit more work upfront

00:04:46,170 --> 00:04:50,130
and it's a bit more complicated to get

00:04:48,090 --> 00:04:51,990
started with longer-term I think the

00:04:50,130 --> 00:04:52,830
benefits a huge foot for doing that so

00:04:51,990 --> 00:04:54,870
one of the things I really like about

00:04:52,830 --> 00:04:56,940
service worker is it's a very low-level

00:04:54,870 --> 00:04:58,650
API I think we're seeing this more and

00:04:56,940 --> 00:05:01,140
more with new browser features is rather

00:04:58,650 --> 00:05:02,910
than expose some high-level feature that

00:05:01,140 --> 00:05:04,710
you can kind of use or not use and not

00:05:02,910 --> 00:05:06,840
really tweak we can now get this

00:05:04,710 --> 00:05:08,700
low-level API that is maybe a bit more

00:05:06,840 --> 00:05:09,990
work to set up and get started with that

00:05:08,700 --> 00:05:12,180
longer term gives you complete control

00:05:09,990 --> 00:05:14,100
which is really really nice and even

00:05:12,180 --> 00:05:15,570
though it's basic use case of sending

00:05:14,100 --> 00:05:17,340
requests as a network giving a response

00:05:15,570 --> 00:05:19,860
back cashing it and then serving it from

00:05:17,340 --> 00:05:21,390
the serviceworker requires any developer

00:05:19,860 --> 00:05:24,690
to write zone 10 lines of code whatever

00:05:21,390 --> 00:05:26,460
is maybe a bit fewer but if later on you

00:05:24,690 --> 00:05:27,900
have some really contrived use case you

00:05:26,460 --> 00:05:29,240
need to use it for you can because you

00:05:27,900 --> 00:05:31,320
have access to the real low-level

00:05:29,240 --> 00:05:33,240
nitty-gritty nuts and bolts if you like

00:05:31,320 --> 00:05:34,680
which is yeah really good to see I think

00:05:33,240 --> 00:05:36,450
and I think we'll see quite a lot of

00:05:34,680 --> 00:05:37,890
libraries that are utilizing service

00:05:36,450 --> 00:05:39,270
workers and kind of building on that you

00:05:37,890 --> 00:05:41,160
almost probably want you been touching

00:05:39,270 --> 00:05:42,840
it necessarily you then get offline

00:05:41,160 --> 00:05:44,310
support for free effectively because in

00:05:42,840 --> 00:05:45,750
the background power ship is going as

00:05:44,310 --> 00:05:47,880
local storage and it syncs everything

00:05:45,750 --> 00:05:49,689
for you so I've just been building a

00:05:47,880 --> 00:05:51,959
really quite boring note-taking

00:05:49,689 --> 00:05:54,459
vacation because that's a novel idea and

00:05:51,959 --> 00:05:56,319
but it's really cool because if I you

00:05:54,459 --> 00:05:58,719
know I'm writing a note on my cool app

00:05:56,319 --> 00:06:00,729
that I'm gonna sell for millions and

00:05:58,719 --> 00:06:02,739
suddenly like Oh bye I go into it I'm on

00:06:00,729 --> 00:06:03,879
the tunnel in it on a train I can still

00:06:02,739 --> 00:06:05,619
keep writing my notes and when my

00:06:03,879 --> 00:06:08,409
internet comes back they will sink for

00:06:05,619 --> 00:06:09,999
me and that's possible because we have

00:06:08,409 --> 00:06:12,699
these low-level API eyes and then pouch

00:06:09,999 --> 00:06:14,619
adds to that right and it's really cool

00:06:12,699 --> 00:06:16,269
I think all those service workers are

00:06:14,619 --> 00:06:18,789
fairly new i think google already got

00:06:16,269 --> 00:06:20,679
service work a pre cash and a couple of

00:06:18,789 --> 00:06:22,179
others which will generate service

00:06:20,679 --> 00:06:23,469
workers for you if you tell them kind of

00:06:22,179 --> 00:06:24,969
i want to catch this file on this file

00:06:23,469 --> 00:06:27,399
in this file they'll just give you a

00:06:24,969 --> 00:06:28,809
service worker that does that so yeah I

00:06:27,399 --> 00:06:30,339
think like long time you're right i

00:06:28,809 --> 00:06:31,899
wonder how much will even write service

00:06:30,339 --> 00:06:33,610
work because of tools for the most basic

00:06:31,899 --> 00:06:35,019
use cases will generate them for us and

00:06:33,610 --> 00:06:37,239
that'll be it and that'd be great we're

00:06:35,019 --> 00:06:39,219
viewing it as a wave gonna caching files

00:06:37,239 --> 00:06:41,079
and keeping those kind of static files

00:06:39,219 --> 00:06:42,879
ready in case you're offline but also

00:06:41,079 --> 00:06:45,819
what I think I find a really excited

00:06:42,879 --> 00:06:48,249
palter is the prospect of having more

00:06:45,819 --> 00:06:49,839
real-time data sets using service

00:06:48,249 --> 00:06:51,909
workers going to serve that when you're

00:06:49,839 --> 00:06:54,459
offline which is something I mean with

00:06:51,909 --> 00:06:56,079
the new version of pressure I've been

00:06:54,459 --> 00:07:01,389
playing around with that quite a bit and

00:06:56,079 --> 00:07:03,339
I'm really liking kind of patching cash

00:07:01,389 --> 00:07:04,989
patching the cash to kind of add new

00:07:03,339 --> 00:07:06,610
data as it's been pushed out by pressure

00:07:04,989 --> 00:07:08,769
there's some really kind of exciting

00:07:06,610 --> 00:07:10,929
stuff there and there's also like em so

00:07:08,769 --> 00:07:14,019
service worker is allowed this kind of

00:07:10,929 --> 00:07:15,279
push to exist because you can just you

00:07:14,019 --> 00:07:17,169
don't have to have a web page open to

00:07:15,279 --> 00:07:18,969
receive a message and also there's a

00:07:17,169 --> 00:07:21,039
background sync API which think is just

00:07:18,969 --> 00:07:23,619
in Chrome but yet which is like super

00:07:21,039 --> 00:07:25,179
cool yeah and that is effectively try

00:07:23,619 --> 00:07:26,649
and make a request to network and if

00:07:25,179 --> 00:07:28,569
you're not on a network it will just sit

00:07:26,649 --> 00:07:30,999
there and wait until your our network

00:07:28,569 --> 00:07:32,860
and then send it off right so i think

00:07:30,999 --> 00:07:35,559
jake a jake are called a render conquer

00:07:32,860 --> 00:07:38,679
yeah the demo of like a chat was it is

00:07:35,559 --> 00:07:39,939
emoji chat and he sent this message and

00:07:38,679 --> 00:07:42,279
he didn't have a connection so he hit

00:07:39,939 --> 00:07:44,139
enter and to him on his mobile little

00:07:42,279 --> 00:07:45,879
that fine like the message had been sent

00:07:44,139 --> 00:07:47,379
in university commons if you like and

00:07:45,879 --> 00:07:49,059
then when he came back home on it was

00:07:47,379 --> 00:07:52,119
sent and then he got all the replies and

00:07:49,059 --> 00:07:53,349
stuff so yeah it's amazing and it's a

00:07:52,119 --> 00:07:54,999
really exciting time to kind of start

00:07:53,349 --> 00:07:56,589
playing with this stuff I think I think

00:07:54,999 --> 00:07:59,560
it's like I mean it just opens up all

00:07:56,589 --> 00:08:02,080
these possibilities for web apps to feel

00:07:59,560 --> 00:08:04,990
much more natural as you can have as

00:08:02,080 --> 00:08:08,050
you're using women kind of on your phone

00:08:04,990 --> 00:08:10,270
going through network bad spots away i

00:08:08,050 --> 00:08:11,830
think it's like yeah i think the web

00:08:10,270 --> 00:08:14,169
could be a better place as a result

00:08:11,830 --> 00:08:15,639
absolutely I don't think like we've seen

00:08:14,169 --> 00:08:17,169
you know I think the worst thing for a

00:08:15,639 --> 00:08:19,720
mobile users you load up this this

00:08:17,169 --> 00:08:21,790
website and its a wide screen because I

00:08:19,720 --> 00:08:23,410
think I think they will call it life I

00:08:21,790 --> 00:08:24,550
Lite IV haven't got Wi-Fi and then at

00:08:23,410 --> 00:08:26,320
least if you haven't got Wi-Fi you get

00:08:24,550 --> 00:08:27,940
like a 404 you know you get the chrome

00:08:26,320 --> 00:08:30,130
dinosaur whatever but if you've got this

00:08:27,940 --> 00:08:31,600
fake wife I already bad signal you just

00:08:30,130 --> 00:08:33,610
get a white pages it's loading stuff

00:08:31,600 --> 00:08:36,279
which is just such a rubbish sigh

00:08:33,610 --> 00:08:37,750
experience and that's one area where

00:08:36,279 --> 00:08:39,250
native app traditionally have had a

00:08:37,750 --> 00:08:40,510
benefit because if I load up and I've

00:08:39,250 --> 00:08:42,010
said the Facebook native app and I'm

00:08:40,510 --> 00:08:43,599
offline i'll still get all the content

00:08:42,010 --> 00:08:45,190
from whenever I last looked at Facebook

00:08:43,599 --> 00:08:46,600
or Twitter or whatever it might be but

00:08:45,190 --> 00:08:47,800
now a service worker and background

00:08:46,600 --> 00:08:50,230
saying all these things that are in the

00:08:47,800 --> 00:08:51,730
pipeline we've really when we can match

00:08:50,230 --> 00:08:53,170
that if not do better than that as an

00:08:51,730 --> 00:08:54,670
accent that's really cool you've got

00:08:53,170 --> 00:08:57,040
pusher running in your service worker

00:08:54,670 --> 00:08:58,450
yes thing out for these events exactly

00:08:57,040 --> 00:08:59,950
so I've been hacking around a little bit

00:08:58,450 --> 00:09:02,020
with using pressure in a service worker

00:08:59,950 --> 00:09:05,140
which is actually katic one pretty well

00:09:02,020 --> 00:09:07,060
so it's quite different from the push

00:09:05,140 --> 00:09:10,450
notifications and from background sync

00:09:07,060 --> 00:09:12,490
it's kind of for real-time data as

00:09:10,450 --> 00:09:14,530
you've got window open and it's got some

00:09:12,490 --> 00:09:16,360
really gonna nice benefits and what's

00:09:14,530 --> 00:09:18,670
really cool about it is I could start

00:09:16,360 --> 00:09:20,440
off with this really simple app

00:09:18,670 --> 00:09:23,890
architecture like you don't need to can

00:09:20,440 --> 00:09:26,380
have this huge infrastructure of like

00:09:23,890 --> 00:09:28,540
lots of different libraries it's just

00:09:26,380 --> 00:09:29,800
basically you've got your app and it

00:09:28,540 --> 00:09:31,660
works as normal and then you can just

00:09:29,800 --> 00:09:35,050
add a service worker on the side kind of

00:09:31,660 --> 00:09:36,460
enhance it yeah I think it's been

00:09:35,050 --> 00:09:40,330
quicker your blog post about it this

00:09:36,460 --> 00:09:42,130
week I put it in the show notes cool

00:09:40,330 --> 00:09:43,420
yeah yeah that's definitely one of the

00:09:42,130 --> 00:09:45,550
best things about service workers for me

00:09:43,420 --> 00:09:47,230
is you can there a separate script you

00:09:45,550 --> 00:09:49,690
can happen to any existing website and

00:09:47,230 --> 00:09:51,190
still make them useful and also it's a

00:09:49,690 --> 00:09:52,420
perfect example of progressive

00:09:51,190 --> 00:09:56,230
enhancement because you just in your

00:09:52,420 --> 00:09:58,450
main javascript is if service workers

00:09:56,230 --> 00:10:01,060
are enabled add this service worker else

00:09:58,450 --> 00:10:02,620
don't bother so I think that's also

00:10:01,060 --> 00:10:04,150
driven adoption a lot because there's no

00:10:02,620 --> 00:10:06,850
downside to use them really even if even

00:10:04,150 --> 00:10:08,060
if they only affect half your use users

00:10:06,850 --> 00:10:09,590
that still that

00:10:08,060 --> 00:10:10,970
great yeah and that number is only going

00:10:09,590 --> 00:10:12,830
to go up as more and more more more

00:10:10,970 --> 00:10:14,360
vendors start to work and implement it

00:10:12,830 --> 00:10:16,700
I'm pretty sure with mostly there now

00:10:14,360 --> 00:10:18,980
yeah I think Apple might be the ones who

00:10:16,700 --> 00:10:23,360
were not so sure about weather app does

00:10:18,980 --> 00:10:25,370
your yeah exactly and judo I guess so a

00:10:23,360 --> 00:10:28,970
kind of cool little thing what really

00:10:25,370 --> 00:10:31,190
irritates me sometimes that is using

00:10:28,970 --> 00:10:32,660
custom fonts like from google fonts

00:10:31,190 --> 00:10:34,280
right about that but you can totally use

00:10:32,660 --> 00:10:36,980
a service record player optimization

00:10:34,280 --> 00:10:39,170
anything that is outside of your origin

00:10:36,980 --> 00:10:41,360
you can intercept the sericus it doesn't

00:10:39,170 --> 00:10:43,040
just have to be your own files it can be

00:10:41,360 --> 00:10:45,650
stuff on the google fonts or it can be

00:10:43,040 --> 00:10:47,420
kind of any other any API or anything

00:10:45,650 --> 00:10:49,880
yeah cool which is like super powerful

00:10:47,420 --> 00:10:51,230
yeah so these videos are kind of a new

00:10:49,880 --> 00:10:53,300
idea and we're trying out other things

00:10:51,230 --> 00:10:56,090
this week grin and try out at any other

00:10:53,300 --> 00:10:58,400
business section so this week Eldon will

00:10:56,090 --> 00:11:00,740
put 17 got released so elm is a a typed

00:10:58,400 --> 00:11:02,090
functional language that compiles to

00:11:00,740 --> 00:11:03,320
JavaScript which kind of takes a very

00:11:02,090 --> 00:11:05,930
different approach to building

00:11:03,320 --> 00:11:07,520
JavaScript applications it's always been

00:11:05,930 --> 00:11:09,140
very very powerful it's kind of in its

00:11:07,520 --> 00:11:11,180
infancy but picked up a fair amount of

00:11:09,140 --> 00:11:13,460
steam from the community and this week

00:11:11,180 --> 00:11:15,500
the latest version or point 17 got

00:11:13,460 --> 00:11:17,300
released which removes one of the more

00:11:15,500 --> 00:11:19,640
or doesn't remove it kind of hides away

00:11:17,300 --> 00:11:20,930
/ abstract out one of the more

00:11:19,640 --> 00:11:22,820
complicated parts of Elm which were

00:11:20,930 --> 00:11:24,260
called signals which are these values

00:11:22,820 --> 00:11:26,390
that kind of change over time kind of

00:11:24,260 --> 00:11:28,340
like streams in reactive Jace or

00:11:26,390 --> 00:11:30,980
whatever and replaces them with these

00:11:28,340 --> 00:11:33,110
things called subscriptions there's kind

00:11:30,980 --> 00:11:35,330
of the nitty-gritty details don't really

00:11:33,110 --> 00:11:37,940
matter but what's important is they've

00:11:35,330 --> 00:11:39,230
kind of dramatically simplified Elm for

00:11:37,940 --> 00:11:40,940
people coming to language and removed

00:11:39,230 --> 00:11:42,410
one of its more complicated hard to

00:11:40,940 --> 00:11:44,360
understand features with a much more

00:11:42,410 --> 00:11:46,250
straightforward model which is really

00:11:44,360 --> 00:11:48,320
exciting so I think over the coming

00:11:46,250 --> 00:11:50,480
weeks we'll be talking and updating some

00:11:48,320 --> 00:11:53,000
of our LMS our pools and blog posts and

00:11:50,480 --> 00:11:55,310
opal in 17 but really exciting to see

00:11:53,000 --> 00:11:56,390
how this release will affect people

00:11:55,310 --> 00:11:58,940
picking up down because I think it will

00:11:56,390 --> 00:12:00,470
help a lot cool that's that's great like

00:11:58,940 --> 00:12:02,150
cuz I actually think about that like

00:12:00,470 --> 00:12:04,700
because I I really enjoyed that talk he

00:12:02,150 --> 00:12:07,280
gave an atom but I caught length ya know

00:12:04,700 --> 00:12:08,040
it was great but the signals were like

00:12:07,280 --> 00:12:10,920
everything that

00:12:08,040 --> 00:12:12,779
I was just like I was into it but it was

00:12:10,920 --> 00:12:14,399
kind of a bit eight years yeah they're

00:12:12,779 --> 00:12:17,850
very tricky I'm kind of goes like this

00:12:14,399 --> 00:12:19,980
is okay this is okay this okay BAM yeah

00:12:17,850 --> 00:12:21,269
so no so the later East own kind of has

00:12:19,980 --> 00:12:23,399
a lot of improvements other than that as

00:12:21,269 --> 00:12:25,019
well which is very nice yeah cool yeah

00:12:23,399 --> 00:12:27,779
what about you Ben have you got any

00:12:25,019 --> 00:12:29,550
other business and this week having put

00:12:27,779 --> 00:12:31,079
you quite a lot about circles just yet

00:12:29,550 --> 00:12:35,970
okay right so I've been working on this

00:12:31,079 --> 00:12:37,949
kind of this deal time graphing thing

00:12:35,970 --> 00:12:40,500
and I think you've got I've been playing

00:12:37,949 --> 00:12:41,610
around with basically different modes of

00:12:40,500 --> 00:12:43,170
plotting that and I think I've come up

00:12:41,610 --> 00:12:45,360
with something which is kind of quite

00:12:43,170 --> 00:12:47,699
pretty so yeah I've been like looking

00:12:45,360 --> 00:12:49,319
into that quite a lot so basically all I

00:12:47,699 --> 00:12:50,910
wrote was like this kind of a few

00:12:49,319 --> 00:12:52,440
functions for like if you find out if

00:12:50,910 --> 00:12:54,269
our circles intersecting and how to like

00:12:52,440 --> 00:12:56,040
move them around nice okay and based on

00:12:54,269 --> 00:12:57,389
those got like really tiny permanence

00:12:56,040 --> 00:13:00,420
you can do all these kind of really

00:12:57,389 --> 00:13:03,300
crazy cool looking things so yeah

00:13:00,420 --> 00:13:04,800
circles are cool so I guess thank you

00:13:03,300 --> 00:13:05,910
very much for watching if there's

00:13:04,800 --> 00:13:07,170
anything you'd like to hear bed and I

00:13:05,910 --> 00:13:09,449
talked about on the next show or in

00:13:07,170 --> 00:13:10,949
future editions you can tweet app pusher

00:13:09,449 --> 00:13:12,810
and we'll pick up and get back to you

00:13:10,949 --> 00:13:14,040
you can leave any comments on the video

00:13:12,810 --> 00:13:15,060
will also leave some show notes with

00:13:14,040 --> 00:13:17,220
links to rather than things we've

00:13:15,060 --> 00:13:18,180
mentioned throughout but yeah thank you

00:13:17,220 --> 00:13:20,779
very much for watching and we will see

00:13:18,180 --> 00:13:20,779

YouTube URL: https://www.youtube.com/watch?v=lVBocwJyyvU


