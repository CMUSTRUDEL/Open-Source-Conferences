Title: Jack & Ben Show Episode 1: Talking NPM with Jack & Ben
Publication date: 2016-06-02
Playlist: Jack & Ben Show
Description: 
	Ben and Jack discuss the left-pad fiasco and what this means for NPM and dependencies in JavaScript. 
Read more: https://blog.pusher.com/talking-left-pad-npm-and-dependencies-in-front-end-development/
What do you think? Give us your take in the comments below. 

@Jack_Franklin
@benjaminbenben 

NPM's official explanation: http://blog.npmjs.org/post/1415772847...

Pusher is a hosted service with APIs, developer tools and open source libraries that greatly simplify integrating real-time functionality into web and mobile applications.
Captions: 
	00:00:00,000 --> 00:00:06,799
then what you call a javascript Jedi

00:00:02,790 --> 00:00:06,799
don't know left Padawan

00:00:11,800 --> 00:00:16,630
so we're across the canal from the

00:00:14,530 --> 00:00:20,740
pressure officers and the cafe I'm here

00:00:16,630 --> 00:00:22,540
and Ben and this is jay hey hey so how's

00:00:20,740 --> 00:00:25,599
it good yeah I'm good how are you yeah

00:00:22,540 --> 00:00:26,980
super gay yes super gay fantastic so I

00:00:25,599 --> 00:00:29,500
think this week we've been thinking

00:00:26,980 --> 00:00:32,529
about the the left pad debacle or left

00:00:29,500 --> 00:00:34,210
pad gate as i like to call it so if

00:00:32,529 --> 00:00:36,040
they're unaware this is the the module

00:00:34,210 --> 00:00:39,399
left hand on NPM 11 lines of JavaScript

00:00:36,040 --> 00:00:41,950
that was dependent on by a bra and react

00:00:39,399 --> 00:00:44,859
and loads of other stuff whose author

00:00:41,950 --> 00:00:46,600
unpublished it from mpm and then

00:00:44,859 --> 00:00:48,840
basically half the internet broke as far

00:00:46,600 --> 00:00:51,730
as we can tell and for a good few hours

00:00:48,840 --> 00:00:53,320
nothing worked no mpm installs the

00:00:51,730 --> 00:00:56,739
depend on Babel which is nearly every

00:00:53,320 --> 00:00:58,570
java project out there and none of them

00:00:56,739 --> 00:01:00,969
work they were broke to the point where

00:00:58,570 --> 00:01:02,980
mpm eventually unpublished the module

00:01:00,969 --> 00:01:07,120
running back online and fixing

00:01:02,980 --> 00:01:08,770
development as we know it which I think

00:01:07,120 --> 00:01:11,560
really is just got to thinking about NPM

00:01:08,770 --> 00:01:13,570
and dependencies generally in JavaScript

00:01:11,560 --> 00:01:15,040
language so yeah he's a really

00:01:13,570 --> 00:01:16,930
interesting thing right like so I guess

00:01:15,040 --> 00:01:18,700
over the last few years we've our

00:01:16,930 --> 00:01:21,400
front-end dependencies have become

00:01:18,700 --> 00:01:24,880
dependent on NPM to such a great degree

00:01:21,400 --> 00:01:26,560
wait yeah and like i canna figure you're

00:01:24,880 --> 00:01:28,360
you're the kind of guy who likes lots of

00:01:26,560 --> 00:01:33,760
little mini dependencies it plays right

00:01:28,360 --> 00:01:36,550
now how did you guess yeah yeah I'd you

00:01:33,760 --> 00:01:38,410
ever feel nervous about that yeah it's

00:01:36,550 --> 00:01:39,580
it's interesting because basically the

00:01:38,410 --> 00:01:41,830
hope the whole approach of loads of

00:01:39,580 --> 00:01:43,390
dependencies works really well until it

00:01:41,830 --> 00:01:44,920
breaks and then everyone starts thinking

00:01:43,390 --> 00:01:47,920
about if it does actually work well or

00:01:44,920 --> 00:01:49,530
not and I myself a guilty of finding a

00:01:47,920 --> 00:01:51,790
package online that does what I need

00:01:49,530 --> 00:01:53,590
however small that piece of function

00:01:51,790 --> 00:01:58,210
might be and just kind of chucking it

00:01:53,590 --> 00:02:01,420
into my my own app really the issue then

00:01:58,210 --> 00:02:03,460
becomes who do you trust to so all these

00:02:01,420 --> 00:02:06,760
these modules and who can you depend on

00:02:03,460 --> 00:02:11,050
if you pardon the dreadful pun I wasn't

00:02:06,760 --> 00:02:12,459
on purpose cuz actually you know and I

00:02:11,050 --> 00:02:14,170
think the question here it should share

00:02:12,459 --> 00:02:16,560
projects that a large like babble like

00:02:14,170 --> 00:02:19,840
react like all the other ones that broke

00:02:16,560 --> 00:02:21,730
be depending willy-nilly on modules

00:02:19,840 --> 00:02:24,440
about vetting them to some degree this

00:02:21,730 --> 00:02:26,120
module the left pad module was

00:02:24,440 --> 00:02:28,310
11 lines of JavaScript hasn't like 10

00:02:26,120 --> 00:02:32,180
stars on github I wouldn't describe as a

00:02:28,310 --> 00:02:33,650
prolific module but then you know you

00:02:32,180 --> 00:02:35,480
say people saying what they should have

00:02:33,650 --> 00:02:36,560
been posted up themselves which is fine

00:02:35,480 --> 00:02:39,310
but then where do you draw the line on

00:02:36,560 --> 00:02:42,980
implanting stuff yourself you know I

00:02:39,310 --> 00:02:45,710
mean so like is there any way you can

00:02:42,980 --> 00:02:47,570
check over every pet beds in you have I

00:02:45,710 --> 00:02:49,700
mean I get this thing like as soon as

00:02:47,570 --> 00:02:52,340
i'm starting a site and i'm like i

00:02:49,700 --> 00:02:55,220
wanted to take my sass making CSS Oh

00:02:52,340 --> 00:02:57,230
written golf puppet and the egg suddenly

00:02:55,220 --> 00:02:59,150
I've got like a hundred different

00:02:57,230 --> 00:03:00,890
different sub debate exactly and is this

00:02:59,150 --> 00:03:02,180
is a left-hand module on its own

00:03:00,890 --> 00:03:06,530
something that we should be encouraging

00:03:02,180 --> 00:03:07,520
that kind of size of a package it's a

00:03:06,530 --> 00:03:08,810
bit of functions that would be pretty

00:03:07,520 --> 00:03:11,630
straightforward for you to infant

00:03:08,810 --> 00:03:16,010
yourself developer would be able to I'd

00:03:11,630 --> 00:03:18,470
imagine so it's interesting and you know

00:03:16,010 --> 00:03:20,840
I think we're at stage where front and

00:03:18,470 --> 00:03:22,040
development we're not really used it's

00:03:20,840 --> 00:03:23,600
getting more complicated all the time

00:03:22,040 --> 00:03:25,880
like a few years ago we didn't have em

00:03:23,600 --> 00:03:27,770
p.m. really we didn't have client side

00:03:25,880 --> 00:03:29,510
JavaScript applications our jobs to it

00:03:27,770 --> 00:03:31,850
was as much as a little jquery carousel

00:03:29,510 --> 00:03:33,980
or accordion i pine for the good old

00:03:31,850 --> 00:03:35,239
days but we have all these dependencies

00:03:33,980 --> 00:03:37,760
front-end development is way more

00:03:35,239 --> 00:03:39,050
complicated now by necessity you know is

00:03:37,760 --> 00:03:41,120
the real issue here nothing to

00:03:39,050 --> 00:03:44,600
dependencies at all but more the fact

00:03:41,120 --> 00:03:46,100
that npm lets you unpublish packages so

00:03:44,600 --> 00:03:47,660
for I the author have published

00:03:46,100 --> 00:03:49,610
something like left pad and then

00:03:47,660 --> 00:03:51,770
whatever reason I decide to take it down

00:03:49,610 --> 00:03:53,390
should I be allowed to do that just at

00:03:51,770 --> 00:03:56,480
any point this doesn't that break the

00:03:53,390 --> 00:03:58,430
entire the whole point of NPM is that we

00:03:56,480 --> 00:04:01,700
can freely dependent now concerned and

00:03:58,430 --> 00:04:05,900
worried ranking so on one hand is a

00:04:01,700 --> 00:04:07,730
massive problem because that's gonna

00:04:05,900 --> 00:04:10,310
have that effect that you have like

00:04:07,730 --> 00:04:11,780
yesterday or wherever yeah but in a

00:04:10,310 --> 00:04:15,320
lower point so you're actually using

00:04:11,780 --> 00:04:16,489
that dependency and yet you're trusting

00:04:15,320 --> 00:04:18,049
someone else to serve it to your

00:04:16,489 --> 00:04:22,310
something yeah you've not paid any money

00:04:18,049 --> 00:04:23,690
Ted ya know so I like I think this part

00:04:22,310 --> 00:04:25,880
of it is like a responsibility to

00:04:23,690 --> 00:04:28,010
yourself how you can have go about

00:04:25,880 --> 00:04:30,139
develop and have that like sort of stuff

00:04:28,010 --> 00:04:33,620
like having a kind like

00:04:30,139 --> 00:04:35,960
like storing your fences locally or like

00:04:33,620 --> 00:04:38,300
kind of commitment and honestly you have

00:04:35,960 --> 00:04:40,310
access them as independently I think

00:04:38,300 --> 00:04:41,990
there's a commitment solution I don't

00:04:40,310 --> 00:04:45,169
get I don't get Falls entirely on

00:04:41,990 --> 00:04:46,460
anything yet no some companies got

00:04:45,169 --> 00:04:49,099
around it by having their own private

00:04:46,460 --> 00:04:52,669
NPM so as developers in the free world

00:04:49,099 --> 00:04:54,400
are we we relying too much on NPM like

00:04:52,669 --> 00:04:57,620
do we take far too much for granted

00:04:54,400 --> 00:05:00,050
should we be more grateful for our NPM

00:04:57,620 --> 00:05:03,199
overlords right I actually cannot be i

00:05:00,050 --> 00:05:04,759
dunk the way that Bauer works right jit

00:05:03,199 --> 00:05:07,610
you don't make powered if you've dug the

00:05:04,759 --> 00:05:09,500
way the bow yeah okay yeah okay well

00:05:07,610 --> 00:05:10,849
okay convince me you could use Barrett's

00:05:09,500 --> 00:05:13,340
gonna keep things in check but

00:05:10,849 --> 00:05:16,069
ultimately you be changing stuff in your

00:05:13,340 --> 00:05:18,110
own cultures yea rather than theirs inna

00:05:16,069 --> 00:05:21,169
kind of switch with that and of two more

00:05:18,110 --> 00:05:23,000
than a traditional dependency system

00:05:21,169 --> 00:05:25,789
where you don't have that controlling

00:05:23,000 --> 00:05:27,800
yeah we don't check no modules in where

00:05:25,789 --> 00:05:30,080
exactly did check Falcon before that

00:05:27,800 --> 00:05:32,569
Bauer it's not it's more the bower is

00:05:30,080 --> 00:05:34,460
fitted around that way work okay yes

00:05:32,569 --> 00:05:36,469
we've kind of transitioned away from

00:05:34,460 --> 00:05:37,879
yeah somewhere so the file system isn't

00:05:36,469 --> 00:05:40,460
the source of truth exactly not exactly

00:05:37,879 --> 00:05:42,889
I I'd kind of like it if it was yeah

00:05:40,460 --> 00:05:45,500
yeah yeah and that's her okay yeah place

00:05:42,889 --> 00:05:48,110
cancel yeah yes so that the point here

00:05:45,500 --> 00:05:51,289
is if if we did check node modules in

00:05:48,110 --> 00:05:52,580
then this wouldn't be such a big deal it

00:05:51,289 --> 00:05:54,949
would've been annoying because a fresh

00:05:52,580 --> 00:05:55,879
mpm still wouldn't have worked but you

00:05:54,949 --> 00:05:57,979
would have still had everything locally

00:05:55,879 --> 00:05:59,569
you know the biggest one was deploys and

00:05:57,979 --> 00:06:01,629
see I servers and stuff we're breaking

00:05:59,569 --> 00:06:04,610
because most of malaya NPM install first

00:06:01,629 --> 00:06:06,889
I think it's also important to note I'll

00:06:04,610 --> 00:06:08,689
there was that this was a big problem it

00:06:06,889 --> 00:06:10,669
didn't take any websites down yeah like

00:06:08,689 --> 00:06:12,979
you know so I think I'm less concerned

00:06:10,669 --> 00:06:15,229
about depending on things like this I

00:06:12,979 --> 00:06:17,569
don't know a massive deal I think if

00:06:15,229 --> 00:06:19,520
you'd say okay left pad as a function is

00:06:17,569 --> 00:06:21,830
it's too small to depend on variety

00:06:19,520 --> 00:06:23,870
ourselves you have to draw a line at

00:06:21,830 --> 00:06:25,250
some point and this problem it happened

00:06:23,870 --> 00:06:27,649
to be in this case the module was left

00:06:25,250 --> 00:06:29,029
pad which was 11 lines long but it could

00:06:27,649 --> 00:06:30,340
have been a module that was 200 lines

00:06:29,029 --> 00:06:32,290
long or 500 lines or

00:06:30,340 --> 00:06:33,900
load more that you would never think ok

00:06:32,290 --> 00:06:37,000
Jung has been a day right as myself I

00:06:33,900 --> 00:06:38,530
think you know we're still learning how

00:06:37,000 --> 00:06:40,840
best to do this stuff on the client side

00:06:38,530 --> 00:06:44,110
npm will improve as a result of this i

00:06:40,840 --> 00:06:46,540
expect that they'll get stricter on how

00:06:44,110 --> 00:06:48,190
and when you can unpublish think that

00:06:46,540 --> 00:06:49,449
they ultimately course this issue I

00:06:48,190 --> 00:06:51,490
think once your modules out in the wild

00:06:49,449 --> 00:06:53,169
after particular time period and is

00:06:51,490 --> 00:06:55,030
dependent on arguably shouldn't be able

00:06:53,169 --> 00:06:56,470
to get rid think I'm rubbishing is there

00:06:55,030 --> 00:06:58,360
a few published showing the security

00:06:56,470 --> 00:07:01,360
floor a massive problem and you can

00:06:58,360 --> 00:07:03,040
quickly get rid of it again but a long

00:07:01,360 --> 00:07:04,570
term I don't think it's a solution and I

00:07:03,040 --> 00:07:07,540
think that breaks the whole ecosystem

00:07:04,570 --> 00:07:09,520
enough people to do that and longer term

00:07:07,540 --> 00:07:10,690
with tools like roller web pack 2 and

00:07:09,520 --> 00:07:13,090
its tree shaking and dead code

00:07:10,690 --> 00:07:15,220
elimination all that this one this won't

00:07:13,090 --> 00:07:16,540
be as bigger problem so that's what

00:07:15,220 --> 00:07:18,220
better than I think we love to hear your

00:07:16,540 --> 00:07:21,630
opinions links to the Twitter accounts

00:07:18,220 --> 00:07:21,630

YouTube URL: https://www.youtube.com/watch?v=CPWhf4DMOuY


