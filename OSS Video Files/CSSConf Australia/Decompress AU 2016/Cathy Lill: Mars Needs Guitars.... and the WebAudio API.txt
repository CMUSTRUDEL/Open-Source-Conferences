Title: Cathy Lill: Mars Needs Guitars.... and the WebAudio API
Publication date: 2017-05-19
Playlist: Decompress AU 2016
Description: 
	Thank you to Mozilla for making video recording possible.
Captions: 
	00:00:04,980 --> 00:00:11,639
I run soon my name is Kathy I'm Kathy

00:00:09,270 --> 00:00:15,959
blah blah on twitter if you want to talk

00:00:11,639 --> 00:00:17,210
about this talk on Twitter so Martha

00:00:15,959 --> 00:00:19,710
nice guitars and the Web Audio API

00:00:17,210 --> 00:00:23,220
obviously because there is a guitar and

00:00:19,710 --> 00:00:25,349
we'll be using the Web Audio API there's

00:00:23,220 --> 00:00:28,140
been some awesome talks already about

00:00:25,349 --> 00:00:30,119
some Web Audio API stuff probably the

00:00:28,140 --> 00:00:31,800
main difference with this demo to most

00:00:30,119 --> 00:00:33,350
of the ones that you would have seen is

00:00:31,800 --> 00:00:35,400
that this is working with a live

00:00:33,350 --> 00:00:37,829
instrument input rather than creating

00:00:35,400 --> 00:00:40,530
your own oscillators like you would if

00:00:37,829 --> 00:00:45,120
you're making a synthesizer or some game

00:00:40,530 --> 00:00:46,230
audio stuff like that and also most of

00:00:45,120 --> 00:00:48,899
the stuff that i'm going to show you in

00:00:46,230 --> 00:00:52,109
this talk is actually the fairly basic

00:00:48,899 --> 00:00:53,449
elements of the Web Audio API am I just

00:00:52,109 --> 00:00:57,059
going to do a bit of a deep dive into

00:00:53,449 --> 00:01:00,239
some of the effects that you can do and

00:00:57,059 --> 00:01:02,640
the way that the ati works so this would

00:01:00,239 --> 00:01:04,670
probably be a pretty good intro if

00:01:02,640 --> 00:01:07,110
you're going to go and do the Web Audio

00:01:04,670 --> 00:01:09,660
workshop after this hopefully this one

00:01:07,110 --> 00:01:12,480
will give you a bit of an idea about how

00:01:09,660 --> 00:01:15,000
the API works and we're also going to

00:01:12,480 --> 00:01:20,370
talk about just sort of how you can kind

00:01:15,000 --> 00:01:22,110
of conceptualize the API in relation to

00:01:20,370 --> 00:01:23,610
what would happen in an actual like

00:01:22,110 --> 00:01:27,870
analog kind of real world audio

00:01:23,610 --> 00:01:29,940
environment because the Audio API is not

00:01:27,870 --> 00:01:31,680
completely intuitive for developers it's

00:01:29,940 --> 00:01:33,630
set up so instead of a little bit of a

00:01:31,680 --> 00:01:36,840
different way to what we're used to so

00:01:33,630 --> 00:01:38,460
hopefully we'll kind of see how we can

00:01:36,840 --> 00:01:41,850
kind of think about the API in a way

00:01:38,460 --> 00:01:44,160
that makes sense so the Web Audio API

00:01:41,850 --> 00:01:48,470
it's a high level JavaScript API for

00:01:44,160 --> 00:01:51,630
processing and synthesizing audio so

00:01:48,470 --> 00:01:53,790
similar to modern game audio engines and

00:01:51,630 --> 00:01:57,840
you've got access to mixing processing

00:01:53,790 --> 00:02:00,900
and filtering similar what you will find

00:01:57,840 --> 00:02:03,300
in desktop audio production applications

00:02:00,900 --> 00:02:06,360
that is from getting started with the

00:02:03,300 --> 00:02:08,580
Web Audio API which is a html5 rocks

00:02:06,360 --> 00:02:09,690
article it's a really good article if

00:02:08,580 --> 00:02:13,079
you're interested in getting into Web

00:02:09,690 --> 00:02:15,450
Audio API go and check that out but for

00:02:13,079 --> 00:02:17,140
me this is awesome this is the stuff

00:02:15,450 --> 00:02:20,440
that we used to kind of

00:02:17,140 --> 00:02:22,360
you know try and download pro tool in

00:02:20,440 --> 00:02:24,000
the 90s to do is you know these things

00:02:22,360 --> 00:02:26,560
cost thousands of thousands of dollars

00:02:24,000 --> 00:02:28,240
and if you're interested in music or

00:02:26,560 --> 00:02:30,670
you're a musician or you just want to do

00:02:28,240 --> 00:02:31,959
something like this this kind of stuff

00:02:30,670 --> 00:02:34,150
that can be really expensive but

00:02:31,959 --> 00:02:36,010
actually we have the capability to do

00:02:34,150 --> 00:02:38,770
almost everything that kind of software

00:02:36,010 --> 00:02:41,050
does in a web browser which is amazing

00:02:38,770 --> 00:02:43,570
it's free you can go in there and learn

00:02:41,050 --> 00:02:46,900
about how audio processing actually

00:02:43,570 --> 00:02:49,209
works and you can create soft for the

00:02:46,900 --> 00:02:52,840
web that anybody can see so to me that's

00:02:49,209 --> 00:02:54,550
pretty exciting it's pretty cool so it's

00:02:52,840 --> 00:02:56,680
a pro audio toolkit in the browser for

00:02:54,550 --> 00:02:58,900
free you can connect to live audio

00:02:56,680 --> 00:03:01,420
sources you can also create audio buffer

00:02:58,900 --> 00:03:03,070
sources from file so you can take an

00:03:01,420 --> 00:03:04,959
audio file and create a buffer and use

00:03:03,070 --> 00:03:07,350
the buffer as the source that you're

00:03:04,959 --> 00:03:11,410
going to you know put some aspects for

00:03:07,350 --> 00:03:13,239
analyzers or whatever tone generators so

00:03:11,410 --> 00:03:15,570
what Matt just showed you a minute ago

00:03:13,239 --> 00:03:17,650
the oscillator that's a tone generator

00:03:15,570 --> 00:03:20,080
so if you need to generate your own

00:03:17,650 --> 00:03:21,400
sounds if you're building a game while

00:03:20,080 --> 00:03:22,989
you're building a synthesizer and you

00:03:21,400 --> 00:03:25,150
actually need you know you're not using

00:03:22,989 --> 00:03:27,430
an external sound you actually need to

00:03:25,150 --> 00:03:30,220
generate it that's how generator an

00:03:27,430 --> 00:03:33,820
oscillator it has filters effects and

00:03:30,220 --> 00:03:35,500
analyzers so analyzers they're the kind

00:03:33,820 --> 00:03:37,390
of nodes that you saw in a couple of

00:03:35,500 --> 00:03:40,060
talks yesterday that we're about pulling

00:03:37,390 --> 00:03:41,110
the data out of the audio feed and being

00:03:40,060 --> 00:03:43,660
able to do something really being able

00:03:41,110 --> 00:03:47,019
to visualize it or learn something about

00:03:43,660 --> 00:03:49,390
the data effect is what we're going to

00:03:47,019 --> 00:03:51,610
look at today and you also have filters

00:03:49,390 --> 00:03:53,110
which I get a similar idea to us to

00:03:51,610 --> 00:03:55,900
affect you know you're going to kind of

00:03:53,110 --> 00:03:57,610
change the sound in some way and you

00:03:55,900 --> 00:04:00,190
also have access to channel mixing so in

00:03:57,610 --> 00:04:02,950
a live environment pretty much whatever

00:04:00,190 --> 00:04:05,110
inputs your sound card will support you

00:04:02,950 --> 00:04:08,769
can you can have those inputs going into

00:04:05,110 --> 00:04:11,829
into your web browser and mix them using

00:04:08,769 --> 00:04:13,870
the Web Audio API so what we're going to

00:04:11,829 --> 00:04:16,090
build today is a basic guitar effects

00:04:13,870 --> 00:04:19,329
route so I can I start with the sauce

00:04:16,090 --> 00:04:23,710
the guitar we're going to apply some

00:04:19,329 --> 00:04:25,750
distortion will apply at own filter will

00:04:23,710 --> 00:04:28,780
apply some gain so again is just a level

00:04:25,750 --> 00:04:32,650
like how loud or soft it is and will

00:04:28,780 --> 00:04:35,580
to an output so that basically is this

00:04:32,650 --> 00:04:38,470
ting so has those who knows what that is

00:04:35,580 --> 00:04:40,360
okay great so that half of you um so

00:04:38,470 --> 00:04:43,150
this is what's commonly known as a

00:04:40,360 --> 00:04:46,630
guitar effect pedal it's a stomp box so

00:04:43,150 --> 00:04:48,160
if you go and see gig or you know you

00:04:46,630 --> 00:04:50,139
gonna buy yourself a guitar and a little

00:04:48,160 --> 00:04:52,450
ant and the kind of shop will say hey

00:04:50,139 --> 00:04:53,680
you need an overdrive pedal as well this

00:04:52,450 --> 00:04:54,880
is the kind of thing you'll get this is

00:04:53,680 --> 00:04:57,730
like the kind of a basic one that

00:04:54,880 --> 00:05:00,639
everybody gets and this is how it works

00:04:57,730 --> 00:05:02,830
so take your guitar you're plugging

00:05:00,639 --> 00:05:05,590
attar into the pedal you plug the pedal

00:05:02,830 --> 00:05:08,380
into your app and just all this down

00:05:05,590 --> 00:05:13,780
comes out so we're basically going to

00:05:08,380 --> 00:05:15,040
build this in the robot and an important

00:05:13,780 --> 00:05:17,350
thing to know about an analog audio

00:05:15,040 --> 00:05:19,060
route is that if I wanted to add

00:05:17,350 --> 00:05:21,130
additional effects so we're kind of

00:05:19,060 --> 00:05:23,229
rolling up 33 different kind of nodes

00:05:21,130 --> 00:05:25,360
into one thing that we're calling a

00:05:23,229 --> 00:05:27,700
guitar pedal and you can see it's got

00:05:25,360 --> 00:05:30,639
the three little knobs on it for those

00:05:27,700 --> 00:05:33,160
tone distortion and level but if I

00:05:30,639 --> 00:05:35,590
wanted to add more effect to my guitar

00:05:33,160 --> 00:05:37,500
out i just plugged them in in series so

00:05:35,590 --> 00:05:39,940
it's just like a daisy chain thing the

00:05:37,500 --> 00:05:41,530
cable goes into my distortion pedal have

00:05:39,940 --> 00:05:43,419
another cable from my distortion pedal

00:05:41,530 --> 00:05:45,870
to lay in that case well a lot of pedal

00:05:43,419 --> 00:05:48,640
thats going to makes got a while Alma

00:05:45,870 --> 00:05:50,710
cable going cable from the wire pedal to

00:05:48,640 --> 00:05:52,180
the speaker sorry that sort of clear

00:05:50,710 --> 00:05:53,650
that the way that you would set it up in

00:05:52,180 --> 00:05:55,660
the real world is that basically

00:05:53,650 --> 00:05:57,370
whatever affects you've got in a row

00:05:55,660 --> 00:05:59,229
next to each other and they all get

00:05:57,370 --> 00:06:00,760
plugged in one to the other source at

00:05:59,229 --> 00:06:06,160
one in destination of the other end

00:06:00,760 --> 00:06:09,729
juncus out okay so for this demo I'm

00:06:06,160 --> 00:06:11,260
using a thing called Roland Bureau

00:06:09,729 --> 00:06:12,940
capture that's that little box in the

00:06:11,260 --> 00:06:14,050
middle I just put this picture up so

00:06:12,940 --> 00:06:15,750
that you guys can see because it'd be a

00:06:14,050 --> 00:06:19,270
hard book can pick it up and show you

00:06:15,750 --> 00:06:22,510
but that little box is commonly referred

00:06:19,270 --> 00:06:24,190
to as an external sound card it

00:06:22,510 --> 00:06:27,479
basically just gives me some extra

00:06:24,190 --> 00:06:29,800
inputs that go into the computer via USB

00:06:27,479 --> 00:06:31,539
so this in this case i can plug my

00:06:29,800 --> 00:06:34,350
guitar into the box because obviously my

00:06:31,539 --> 00:06:36,520
laptop doesn't have a guitar jack on it

00:06:34,350 --> 00:06:39,190
and this is gives me kind of a basic

00:06:36,520 --> 00:06:41,470
line level going into the computer so

00:06:39,190 --> 00:06:42,700
that i can do something with it but that

00:06:41,470 --> 00:06:44,850
really is the only

00:06:42,700 --> 00:06:47,830
you seeing in this demo that isn't just

00:06:44,850 --> 00:06:49,660
straight web browser everything else it

00:06:47,830 --> 00:06:51,940
happens in a web browser Ernie's about a

00:06:49,660 --> 00:06:53,020
hundred dollars and you can get bigger

00:06:51,940 --> 00:06:54,610
ones you know if you want to have like

00:06:53,020 --> 00:06:56,500
five inputs you can get bigger more

00:06:54,610 --> 00:06:58,360
expensive ones that have different kinds

00:06:56,500 --> 00:06:59,890
of inputs and you know you can kind of

00:06:58,360 --> 00:07:02,190
do multi-channel stuff with them but

00:06:59,890 --> 00:07:04,630
this is just a simple answer this demo

00:07:02,190 --> 00:07:07,120
and basically we're going out of that to

00:07:04,630 --> 00:07:10,660
the PA it doesn't work particularly well

00:07:07,120 --> 00:07:13,330
to use your onboard speakers it does

00:07:10,660 --> 00:07:15,130
work so it can be a bit laggy and sort

00:07:13,330 --> 00:07:16,180
of drops out a little bit so generally

00:07:15,130 --> 00:07:19,240
with just one if you're using something

00:07:16,180 --> 00:07:23,290
like this take your output out of the

00:07:19,240 --> 00:07:27,130
box as well as going in all right it

00:07:23,290 --> 00:07:31,150
looks good so the first thing we need is

00:07:27,130 --> 00:07:33,130
some input so I think everybody saw this

00:07:31,150 --> 00:07:37,920
stuff yesterday so I won't go too much

00:07:33,130 --> 00:07:40,360
again getusermedia give me audio

00:07:37,920 --> 00:07:41,410
getusermedia returns a promise so in

00:07:40,360 --> 00:07:44,290
this case we're just going to have a

00:07:41,410 --> 00:07:46,000
simple endet audio function or an error

00:07:44,290 --> 00:07:48,880
function that just as you know sorry no

00:07:46,000 --> 00:07:51,250
stream the next thing we need is an

00:07:48,880 --> 00:07:53,620
audio context so we'll create a new

00:07:51,250 --> 00:07:56,830
audio context and an audio context gives

00:07:53,620 --> 00:08:00,520
us access in our program to all the

00:07:56,830 --> 00:08:01,870
functionality of like all the sound

00:08:00,520 --> 00:08:03,250
functionality that we have in the

00:08:01,870 --> 00:08:07,270
computer so this is kind of like at

00:08:03,250 --> 00:08:11,260
Gateway to affect some sources and

00:08:07,270 --> 00:08:14,950
everything we need to use so it's also

00:08:11,260 --> 00:08:16,810
in destination so we take that stream so

00:08:14,950 --> 00:08:18,400
we've done getusermedia getusermedia is

00:08:16,810 --> 00:08:22,780
given us back a stream and learned about

00:08:18,400 --> 00:08:24,400
streams yesterday and so I'm going to

00:08:22,780 --> 00:08:27,190
apply the context to that and say create

00:08:24,400 --> 00:08:29,200
media stream source so you can see that

00:08:27,190 --> 00:08:32,080
we're saying ok we've got some audio

00:08:29,200 --> 00:08:34,450
coming in but our audio context doesn't

00:08:32,080 --> 00:08:36,220
know about it yet so this context create

00:08:34,450 --> 00:08:38,620
media stream source that's what tells

00:08:36,220 --> 00:08:40,150
our context yep we've got audio coming

00:08:38,620 --> 00:08:42,880
in and now we can do other stuff whether

00:08:40,150 --> 00:08:46,600
it's context and i also just have a

00:08:42,880 --> 00:08:49,480
little alias for context destination but

00:08:46,600 --> 00:08:51,070
that is that will be whatever you set it

00:08:49,480 --> 00:08:54,400
up to be so in this case i set this up

00:08:51,070 --> 00:08:56,140
so that the output is my duo capture and

00:08:54,400 --> 00:08:59,440
that is going out to the PA

00:08:56,140 --> 00:09:00,790
normally it would be your speakers but

00:08:59,440 --> 00:09:03,610
it's just whatever you set up as the

00:09:00,790 --> 00:09:10,930
output actually I can show you guys real

00:09:03,610 --> 00:09:12,490
quick if i can get my doc okay you just

00:09:10,930 --> 00:09:16,870
go into settings if you go settings

00:09:12,490 --> 00:09:20,020
sound and you can select audio sound

00:09:16,870 --> 00:09:21,220
audio input and audio output so whatever

00:09:20,020 --> 00:09:22,690
you've got selected as your output

00:09:21,220 --> 00:09:24,640
that's what you're getting context our

00:09:22,690 --> 00:09:28,120
destination so basically usually you're

00:09:24,640 --> 00:09:31,240
on both speakers alright so next we

00:09:28,120 --> 00:09:32,170
create some effects nodes so the first

00:09:31,240 --> 00:09:35,500
one that we're going to do is the

00:09:32,170 --> 00:09:37,480
distortion so we go contacts book create

00:09:35,500 --> 00:09:40,900
wave shaper so wave shape resourcer type

00:09:37,480 --> 00:09:42,430
of node that we have access to for tone

00:09:40,900 --> 00:09:44,170
we're going to use a black cod filter

00:09:42,430 --> 00:09:47,410
and I'm going to explain how these

00:09:44,170 --> 00:09:48,790
filters and nodes work in a minute but

00:09:47,410 --> 00:09:51,960
at the moment we're just sort of setting

00:09:48,790 --> 00:09:54,730
up you know setting up our audio round

00:09:51,960 --> 00:09:57,310
and for gain create gain so each of

00:09:54,730 --> 00:10:00,010
these is a node think of it just the way

00:09:57,310 --> 00:10:02,200
we saw each each little effect box

00:10:00,010 --> 00:10:04,090
hitting in series think of each of these

00:10:02,200 --> 00:10:07,120
nodes in the same way because that's how

00:10:04,090 --> 00:10:08,230
they work in the API and the last thing

00:10:07,120 --> 00:10:11,410
we need to do is connect them all

00:10:08,230 --> 00:10:13,180
together so this is the part that can be

00:10:11,410 --> 00:10:15,310
quite unintuitive but if you think of it

00:10:13,180 --> 00:10:17,290
in that fashion of connecting A to B and

00:10:15,310 --> 00:10:19,510
then connecting B to C then connecting

00:10:17,290 --> 00:10:22,090
see to the output this is the way that

00:10:19,510 --> 00:10:23,650
they have styled the API so that it

00:10:22,090 --> 00:10:26,080
works in a similar way to the real world

00:10:23,650 --> 00:10:28,570
so we take our source we connected to

00:10:26,080 --> 00:10:30,460
the distortion we take the sauce on and

00:10:28,570 --> 00:10:33,460
connected two tone don't in its again J

00:10:30,460 --> 00:10:38,710
and connect to that so it can seem a

00:10:33,460 --> 00:10:39,940
little bit kind of tedious but because

00:10:38,710 --> 00:10:41,500
you can have different kinds of route

00:10:39,940 --> 00:10:43,000
and you can help quite complex routes I

00:10:41,500 --> 00:10:45,550
think one of the talk yesterday showed

00:10:43,000 --> 00:10:46,960
an example of an audio graphs that had

00:10:45,550 --> 00:10:49,150
you know a whole bunch of oscillators

00:10:46,960 --> 00:10:50,740
and each oscillator was going through a

00:10:49,150 --> 00:10:52,510
bunch of effects nodes and then they had

00:10:50,740 --> 00:10:54,280
their own gain and then they'll being

00:10:52,510 --> 00:10:58,750
routed into a gay nose hoop because it

00:10:54,280 --> 00:11:01,660
can be quite complicated being able to

00:10:58,750 --> 00:11:03,490
represent that in code is so the best

00:11:01,660 --> 00:11:05,850
way that you can do it is by mini King

00:11:03,490 --> 00:11:05,850
real life

00:11:06,880 --> 00:11:13,120
okay so you can think of it like this

00:11:09,060 --> 00:11:15,100
sauce is like your guitar where there

00:11:13,120 --> 00:11:18,580
would be a cable you use the keyword

00:11:15,100 --> 00:11:22,240
connect and your nose so your filters

00:11:18,580 --> 00:11:25,420
you're analyzing those your FX nodes I

00:11:22,240 --> 00:11:26,500
just like the distortion pedal box and

00:11:25,420 --> 00:11:31,840
then we connect that to a destination

00:11:26,500 --> 00:11:35,110
our destination is like a speakers okay

00:11:31,840 --> 00:11:36,490
so now that we've got that all set up

00:11:35,110 --> 00:11:38,790
it's not actually going to do anything

00:11:36,490 --> 00:11:41,200
yet all we've got is a bunch of nodes

00:11:38,790 --> 00:11:43,900
that just have audio going through them

00:11:41,200 --> 00:11:46,060
but nothing's happening to the audio so

00:11:43,900 --> 00:11:50,290
and Matt just touched on this a second

00:11:46,060 --> 00:11:54,060
ago so in order to make our sound

00:11:50,290 --> 00:11:56,650
different we need to set some attributes

00:11:54,060 --> 00:12:02,200
so I'm just going to show you guys fix

00:11:56,650 --> 00:12:04,750
me what this sounds like yeah okay so

00:12:02,200 --> 00:12:07,660
this is our beautiful just saw some

00:12:04,750 --> 00:12:15,870
federal thanks to some cool CSS from

00:12:07,660 --> 00:12:15,870
tomorrow alright so skinny pig demo

00:12:24,030 --> 00:12:27,539
[Music]

00:12:28,160 --> 00:12:33,450
alright so that's just the sound coming

00:12:30,990 --> 00:12:35,370
straight out of my guitar there's no

00:12:33,450 --> 00:12:36,750
effects being applied yet I've got

00:12:35,370 --> 00:12:39,510
bypass one and I'll tell you guys how

00:12:36,750 --> 00:12:40,950
bypass works in a minute but basically

00:12:39,510 --> 00:12:43,050
what's happening at the moment is that

00:12:40,950 --> 00:12:44,790
audio is getting routed directly from

00:12:43,050 --> 00:12:47,000
the source to the destination I don't

00:12:44,790 --> 00:12:49,320
have any of my nose in between so you

00:12:47,000 --> 00:12:56,520
can hear that is the clean sound of the

00:12:49,320 --> 00:12:57,750
guitar with no effects applied okay so

00:12:56,520 --> 00:12:59,070
if we want to get some distortion

00:12:57,750 --> 00:13:02,400
happening then we need to do a few

00:12:59,070 --> 00:13:06,320
things the first thing is we need to

00:13:02,400 --> 00:13:09,690
apply a curve so the way that distortion

00:13:06,320 --> 00:13:10,980
audio distortion works or the kind of

00:13:09,690 --> 00:13:16,530
distortion that we want to apply to a

00:13:10,980 --> 00:13:18,450
guitar is we need to create a slight 32

00:13:16,530 --> 00:13:20,970
array it contains a bunch of values and

00:13:18,450 --> 00:13:23,100
those values look like a curve then what

00:13:20,970 --> 00:13:26,940
happens is we apply that curve to the

00:13:23,100 --> 00:13:30,090
waves Audio waves coming in change the

00:13:26,940 --> 00:13:31,500
shape of the audio wave output the

00:13:30,090 --> 00:13:33,540
results and it gives us this kind of

00:13:31,500 --> 00:13:37,920
flipping effect that we know is kind of

00:13:33,540 --> 00:13:40,680
traditional Qatar discussion for hours

00:13:37,920 --> 00:13:42,450
home we're going to set the type of tone

00:13:40,680 --> 00:13:44,100
so before we say we just want a bipod

00:13:42,450 --> 00:13:46,290
filter there's all different types of

00:13:44,100 --> 00:13:50,070
bicoid filters so the one we're using is

00:13:46,290 --> 00:13:51,630
low pass and again we're going to have

00:13:50,070 --> 00:13:53,250
to calculate the frequency that we put

00:13:51,630 --> 00:13:55,590
into our low pass filter in some fashion

00:13:53,250 --> 00:13:59,640
so I'll just calculate low-pass

00:13:55,590 --> 00:14:01,020
frequency and for gain which is our

00:13:59,640 --> 00:14:02,670
level we're just going to set that up Oh

00:14:01,020 --> 00:14:05,400
point five so that's a slider between

00:14:02,670 --> 00:14:09,630
zero and one and that's just from you

00:14:05,400 --> 00:14:13,550
know quiet off to fall and I'll go

00:14:09,630 --> 00:14:13,550
through how we do these in a sec

00:14:16,629 --> 00:14:25,100
okay so tuned so the way its own slider

00:14:22,309 --> 00:14:28,699
works is a low-pass filter rolls off

00:14:25,100 --> 00:14:30,739
frequencies over a certain point so and

00:14:28,699 --> 00:14:33,649
you're probably seen tone controls on

00:14:30,739 --> 00:14:35,089
your home stereo it's pretty simple when

00:14:33,649 --> 00:14:36,679
you've got the tone set low you'll get a

00:14:35,089 --> 00:14:38,149
real muddy you lose down and when the

00:14:36,679 --> 00:14:41,239
tone is high will get like a bright

00:14:38,149 --> 00:14:44,540
bright shiny found all that's happening

00:14:41,239 --> 00:14:46,429
there is that we're saying okay we all

00:14:44,540 --> 00:14:48,290
the frequencies coming in we're going to

00:14:46,429 --> 00:14:49,549
roll off some of the frequencies at the

00:14:48,290 --> 00:14:51,949
top so some of the high-pitched

00:14:49,549 --> 00:14:55,040
frequencies are going to roll off and

00:14:51,949 --> 00:14:56,749
our time slider is just going to do a

00:14:55,040 --> 00:14:59,239
little calculation to figure out at what

00:14:56,749 --> 00:15:01,910
point we want to roll off those high

00:14:59,239 --> 00:15:03,379
tones so when it's low we're rolling off

00:15:01,910 --> 00:15:05,749
a lot of the high tones will get a low

00:15:03,379 --> 00:15:07,220
muddy sound and when it's high we're not

00:15:05,749 --> 00:15:08,299
rolling off much at the top and so we're

00:15:07,220 --> 00:15:13,089
going to get more of a high frequency

00:15:08,299 --> 00:15:15,259
bright sounds so to represent the

00:15:13,089 --> 00:15:17,239
representation perception of tone I

00:15:15,259 --> 00:15:18,439
needs to be calculated logarithmically

00:15:17,239 --> 00:15:22,610
and I think someone mentioned this

00:15:18,439 --> 00:15:24,619
yesterday as well so octaves if you're

00:15:22,610 --> 00:15:26,509
not familiar with music octaves so you

00:15:24,619 --> 00:15:30,589
know Jody go with you your female beer

00:15:26,509 --> 00:15:34,129
okay from from the bottom though to the

00:15:30,589 --> 00:15:36,259
top doses that's one of these okay so

00:15:34,129 --> 00:15:37,749
one octave is like one sort of complete

00:15:36,259 --> 00:15:40,970
cycle through all the notes of the scale

00:15:37,749 --> 00:15:43,009
and then you start again it gets higher

00:15:40,970 --> 00:15:46,279
and higher and the way that our

00:15:43,009 --> 00:15:51,439
perception of tone works is that there

00:15:46,279 --> 00:15:53,509
are more octaves in the low range so

00:15:51,439 --> 00:15:59,329
mathematically were like when we look at

00:15:53,509 --> 00:16:03,860
the like the mathematical frequency one

00:15:59,329 --> 00:16:06,559
octave higher is not double so Sokka

00:16:03,860 --> 00:16:08,419
middle C see you want to hire is not

00:16:06,559 --> 00:16:10,489
double the frequency it's calculated

00:16:08,419 --> 00:16:12,649
logarithmically so it just means we have

00:16:10,489 --> 00:16:14,779
a little bit more of a complex

00:16:12,649 --> 00:16:19,999
calculation to do in order to make that

00:16:14,779 --> 00:16:21,379
tone slider sound smooth otherwise we're

00:16:19,999 --> 00:16:24,860
going to have lots at the bottom and

00:16:21,379 --> 00:16:26,539
knowledgeable okay so that's what this

00:16:24,860 --> 00:16:27,930
looks like so we're going to have a

00:16:26,539 --> 00:16:32,620
minimum of

00:16:27,930 --> 00:16:35,380
600 kilohertz so this says basically

00:16:32,620 --> 00:16:36,460
don't roll off any any frequencies below

00:16:35,380 --> 00:16:37,690
that so we're always going to have that

00:16:36,460 --> 00:16:39,460
kind of baseline because we don't to

00:16:37,690 --> 00:16:42,040
roll them all off otherwise it'll we

00:16:39,460 --> 00:16:44,140
would get no sound coming out so the

00:16:42,040 --> 00:16:47,100
maximum is the sample rate and you can

00:16:44,140 --> 00:16:49,240
get that from the context as well / 2

00:16:47,100 --> 00:16:53,500
that's because a common sample rates

00:16:49,240 --> 00:16:57,220
that were using here is 44.1 kill hurts

00:16:53,500 --> 00:16:58,930
which is what CDs years professional

00:16:57,220 --> 00:17:04,540
recording equipment will be probably

00:16:58,930 --> 00:17:06,940
like 48 kilohertz and even kind of

00:17:04,540 --> 00:17:09,370
high-end equipment will record higher

00:17:06,940 --> 00:17:11,850
than that but basically anything over

00:17:09,370 --> 00:17:14,350
20k 20 kilohertz is inaudible to humans

00:17:11,850 --> 00:17:16,390
so that's why we don't we want to cut

00:17:14,350 --> 00:17:18,070
off that that top half of frequencies

00:17:16,390 --> 00:17:19,930
from our calculation because otherwise

00:17:18,070 --> 00:17:20,980
our slider our photo will be doing

00:17:19,930 --> 00:17:22,000
something and we won't be able to hear

00:17:20,980 --> 00:17:23,170
the difference because it's going to be

00:17:22,000 --> 00:17:26,980
sliding through frequencies that we

00:17:23,170 --> 00:17:31,750
can't hear so we figure out the number

00:17:26,980 --> 00:17:36,130
of octaves logarithmically and we apply

00:17:31,750 --> 00:17:37,540
multiplier so and then we basically just

00:17:36,130 --> 00:17:38,920
times that by the maximum and that gives

00:17:37,540 --> 00:17:40,930
us a frequency in between the minimum

00:17:38,920 --> 00:17:42,370
and maximum it's going to roll up and

00:17:40,930 --> 00:17:47,590
sound like it's nicely rolling up

00:17:42,370 --> 00:17:51,940
through the tones so let's have a listen

00:17:47,590 --> 00:17:53,410
to that and it's going to turn the

00:17:51,940 --> 00:17:56,170
distortion down here so that we don't

00:17:53,410 --> 00:17:58,660
all get blown away so in the bypass off

00:17:56,170 --> 00:17:59,980
the bypass is by postures needs bypass

00:17:58,660 --> 00:18:04,740
my effects and just go straight from

00:17:59,980 --> 00:18:04,740
into that so that's all of our powers on

00:18:07,280 --> 00:18:17,790
they were getting a limo hey Bing can

00:18:16,080 --> 00:18:22,350
hear how that Sonja's quite low kind of

00:18:17,790 --> 00:18:24,180
muddy and as we go up to that time can

00:18:22,350 --> 00:18:27,240
you hear them kind of writer how we're

00:18:24,180 --> 00:18:34,970
getting the brighter high in there if I

00:18:27,240 --> 00:18:34,970
turn it right up I need

00:18:36,100 --> 00:18:43,450
that I femina sorry this is a bit of an

00:18:40,360 --> 00:18:45,010
experiment with yoli through PA again

00:18:43,450 --> 00:18:47,110
but he can hear that bright tone so if I

00:18:45,010 --> 00:18:50,850
go right to the bottom the hell is

00:18:47,110 --> 00:18:53,970
slowly funny put it right on the side

00:18:50,850 --> 00:18:57,660
ohio okay so there's that thing taken

00:18:53,970 --> 00:19:02,670
care of for the flight Oh Stefan doesn't

00:18:57,660 --> 00:19:03,930
get noisy okay so wait a for distortion

00:19:02,670 --> 00:19:05,790
so if is expendable and you all turned

00:19:03,930 --> 00:19:07,710
up for you know you wanna hear some

00:19:05,790 --> 00:19:11,280
rockin sounds and this ocean is what

00:19:07,710 --> 00:19:14,700
does it so oh so wave shape a distortion

00:19:11,280 --> 00:19:16,910
is how we create that distorted rock and

00:19:14,700 --> 00:19:23,280
roll sound effects that you hear on

00:19:16,910 --> 00:19:25,230
everything from ac/dc to weasel now this

00:19:23,280 --> 00:19:27,890
calculation is literally just lifted

00:19:25,230 --> 00:19:30,570
from the internet there's this one

00:19:27,890 --> 00:19:33,060
algorithm floating around that everybody

00:19:30,570 --> 00:19:36,300
uses and the reason is that these are

00:19:33,060 --> 00:19:40,110
quite hard to come by so the calculation

00:19:36,300 --> 00:19:42,980
to get the values for our float32 array

00:19:40,110 --> 00:19:45,830
that represents out the sourcing curve I

00:19:42,980 --> 00:19:48,180
fairly closely guarded secrets by

00:19:45,830 --> 00:19:51,060
companies that build audio processing

00:19:48,180 --> 00:19:52,890
software and equipment so like I can't

00:19:51,060 --> 00:19:56,690
really just go any internet and say I

00:19:52,890 --> 00:19:58,860
want to find the boss distortion cs1

00:19:56,690 --> 00:20:00,900
algorithms for creating that curb they

00:19:58,860 --> 00:20:03,900
don't give it to you um this one is

00:20:00,900 --> 00:20:05,700
everywhere pretty much every every

00:20:03,900 --> 00:20:09,090
example you find on it will pretty much

00:20:05,700 --> 00:20:10,590
use this calculation I have the only

00:20:09,090 --> 00:20:14,280
number that I changed a little bit is at

00:20:10,590 --> 00:20:16,590
x times six times degree I had a little

00:20:14,280 --> 00:20:19,740
bit lower as the version of this that

00:20:16,590 --> 00:20:23,340
you'll see on the Indian pages and in

00:20:19,740 --> 00:20:26,130
key and pad and everywhere users 24 that

00:20:23,340 --> 00:20:29,220
value I've actually take this to use 18

00:20:26,130 --> 00:20:32,970
just in from doing a few tests through

00:20:29,220 --> 00:20:35,960
that so that just will jack up slightly

00:20:32,970 --> 00:20:37,980
the amount of distortion because most

00:20:35,960 --> 00:20:40,740
examples that you see on the net will be

00:20:37,980 --> 00:20:43,290
using an oscillator the effect is not

00:20:40,740 --> 00:20:45,000
quite as pronounced as it is with a

00:20:43,290 --> 00:20:46,560
guitar because the guitar is actually

00:20:45,000 --> 00:20:48,120
got like our whole bunch of frequencies

00:20:46,560 --> 00:20:51,060
going in it's not just one simple tone

00:20:48,120 --> 00:20:52,500
so so I fiddled with out a bit just to

00:20:51,060 --> 00:20:54,270
make this chance kind of have a bit

00:20:52,500 --> 00:20:58,530
nicer sauciest and it gets quite harsh

00:20:54,270 --> 00:21:00,570
putting higher values into that and the

00:20:58,530 --> 00:21:02,040
float 32 array is the same size as our

00:21:00,570 --> 00:21:03,930
sample right so you can see we're going

00:21:02,040 --> 00:21:04,720
context sample rate that will tell me

00:21:03,930 --> 00:21:07,360
the sample rate

00:21:04,720 --> 00:21:10,780
I'm getting from my little box our

00:21:07,360 --> 00:21:13,809
saying give me that many points on my

00:21:10,780 --> 00:21:15,700
curve the more point to a teacher the

00:21:13,809 --> 00:21:19,090
higher fidelity distortion sound you get

00:21:15,700 --> 00:21:22,419
so I can easily just say n samples of

00:21:19,090 --> 00:21:25,720
100 and then I would have a float 32

00:21:22,419 --> 00:21:28,059
array with 100 values in it and what

00:21:25,720 --> 00:21:29,970
happens behind the scenes is that the

00:21:28,059 --> 00:21:32,650
browser users that as a look-up tables

00:21:29,970 --> 00:21:34,179
basically splits one oscillation of a

00:21:32,650 --> 00:21:38,350
scene how sound wave looks like this

00:21:34,179 --> 00:21:40,690
will take one oscillation and apply each

00:21:38,350 --> 00:21:43,780
point equally so I would get a hundred

00:21:40,690 --> 00:21:46,929
points of change on my way using this I

00:21:43,780 --> 00:21:47,980
get 44.1 thousand points to change and

00:21:46,929 --> 00:21:50,740
you can tell the difference if you

00:21:47,980 --> 00:21:52,659
fiddle if you want to plug this into web

00:21:50,740 --> 00:21:54,640
browser it's pretty easy with an

00:21:52,659 --> 00:21:55,539
oscillator you can change the values and

00:21:54,640 --> 00:21:56,679
hear the difference but you can

00:21:55,539 --> 00:21:59,350
definitely hear the difference here if I

00:21:56,679 --> 00:22:02,830
use a low number there I get quite a

00:21:59,350 --> 00:22:06,730
kind of gritty distortion sound with a

00:22:02,830 --> 00:22:10,090
lot of samples again my sound so this is

00:22:06,730 --> 00:22:14,440
what it looks like in a very basic

00:22:10,090 --> 00:22:18,940
fashion so the values from my Felicity

00:22:14,440 --> 00:22:20,919
to array curve look like that so each

00:22:18,940 --> 00:22:23,049
different curve on that far right

00:22:20,919 --> 00:22:25,030
picture is what the curve looks like

00:22:23,049 --> 00:22:27,250
four different inputs so the flat line

00:22:25,030 --> 00:22:29,530
is very important so basically it's not

00:22:27,250 --> 00:22:31,390
making any change to the wave and then

00:22:29,530 --> 00:22:34,000
you can see as the input gets higher the

00:22:31,390 --> 00:22:37,090
curve gets steeper so the speaker we

00:22:34,000 --> 00:22:39,700
make our distortion curve the more we're

00:22:37,090 --> 00:22:41,530
going to push out input wave to the

00:22:39,700 --> 00:22:42,700
extremes of top and bottom and that's

00:22:41,530 --> 00:22:45,880
what's going to create that clipping

00:22:42,700 --> 00:22:48,100
sound um so the example I've got here is

00:22:45,880 --> 00:22:49,809
for a sine wave again if I visualized

00:22:48,100 --> 00:22:52,000
this for a guitar input it would it

00:22:49,809 --> 00:22:53,169
would not be very easy to pick out what

00:22:52,000 --> 00:22:55,210
is happening because there's a bunch of

00:22:53,169 --> 00:22:56,679
frequencies coming in for a sine wave

00:22:55,210 --> 00:22:58,840
where you've got one single frequency

00:22:56,679 --> 00:23:00,940
you can see how applying the curve

00:22:58,840 --> 00:23:03,760
pushes the weight into a square shape

00:23:00,940 --> 00:23:06,250
and that's what gives us distortion and

00:23:03,760 --> 00:23:09,159
is actually a really cool thing on the

00:23:06,250 --> 00:23:11,080
internet called canopy and this is like

00:23:09,159 --> 00:23:13,240
a little Web Audio can a playground

00:23:11,080 --> 00:23:16,510
where you can plug some values you can

00:23:13,240 --> 00:23:19,409
pluck some code in and see visualize

00:23:16,510 --> 00:23:21,789
like what your wave looks like

00:23:19,409 --> 00:23:25,360
so in here basically all I've done is

00:23:21,789 --> 00:23:29,140
just paste in my code for creating the

00:23:25,360 --> 00:23:32,740
wave shaper and instead of the guitar

00:23:29,140 --> 00:23:34,269
input I'm going to have the oscillator

00:23:32,740 --> 00:23:36,580
so the oscillator is just giving us one

00:23:34,269 --> 00:23:40,990
frequency and you can see how to play so

00:23:36,580 --> 00:23:45,730
this is a normal sine wave sounds like

00:23:40,990 --> 00:23:47,440
that okay that's what it looks like with

00:23:45,730 --> 00:23:50,500
the distortion on so you can see how the

00:23:47,440 --> 00:23:52,570
wave is being made squarer and because

00:23:50,500 --> 00:23:54,279
we're pushing more of the wave to the

00:23:52,570 --> 00:23:55,510
extremes of the top and bottom will get

00:23:54,279 --> 00:23:59,799
a clicking sound and that's what guitar

00:23:55,510 --> 00:24:02,340
saw some book sounds like so to go back

00:23:59,799 --> 00:24:02,340
to mo

00:24:03,470 --> 00:24:06,559
[Music]

00:24:13,920 --> 00:24:22,610
now I can be more of a goody so I'm

00:24:21,280 --> 00:24:24,640
going to get that real life

00:24:22,610 --> 00:24:27,280
[Music]

00:24:24,640 --> 00:24:34,150
yeah so now kind of so you got any

00:24:27,280 --> 00:24:36,760
moment all you like baby and you can

00:24:34,150 --> 00:24:38,470
ease in this mug the perfect life in a

00:24:36,760 --> 00:24:40,090
different cities where I wear before is

00:24:38,470 --> 00:24:42,850
the guy who everybody else would be

00:24:40,090 --> 00:24:52,270
nothing but here we get we can hear real

00:24:42,850 --> 00:24:55,840
difference let down and it also makes a

00:24:52,270 --> 00:24:58,300
difference it does get a little noisy I

00:24:55,840 --> 00:25:01,150
think that is a combination of my guitar

00:24:58,300 --> 00:25:02,500
being a TT guitar and this little box

00:25:01,150 --> 00:25:04,960
not being probably the most expensive

00:25:02,500 --> 00:25:07,840
anything yet and kind of an old old

00:25:04,960 --> 00:25:12,820
laptop but yeah it's not perfect as far

00:25:07,840 --> 00:25:14,800
as sound noise reduction goes and

00:25:12,820 --> 00:25:22,690
obviously the level just takes it up and

00:25:14,800 --> 00:25:24,940
down okay um I don't go through this in

00:25:22,690 --> 00:25:26,320
the original kind of what we're

00:25:24,940 --> 00:25:28,720
connecting our nose too but I do have to

00:25:26,320 --> 00:25:30,760
actually add a few extra things to this

00:25:28,720 --> 00:25:32,530
to make it sound not horrible one is

00:25:30,760 --> 00:25:36,400
compression so compression basically

00:25:32,530 --> 00:25:38,230
just washes the sound down to make it

00:25:36,400 --> 00:25:40,600
quieter so that the sourcing can get

00:25:38,230 --> 00:25:43,210
quite loud compression just brings it

00:25:40,600 --> 00:25:45,190
down to a kind of normal level and the

00:25:43,210 --> 00:25:48,190
power and bypass which is just work by

00:25:45,190 --> 00:25:50,560
disconnecting and reconnecting the nodes

00:25:48,190 --> 00:25:52,300
to each other so again that thing is how

00:25:50,560 --> 00:25:55,060
it's just like connecting things of the

00:25:52,300 --> 00:25:57,420
cable you'd also disconnect so you just

00:25:55,060 --> 00:25:59,770
connect things from each other reconnect

00:25:57,420 --> 00:26:01,240
okay let's see it um there's a further

00:25:59,770 --> 00:26:04,750
reading their key and pad is really

00:26:01,240 --> 00:26:06,340
awesome came out quite recently that has

00:26:04,750 --> 00:26:07,510
a lot of examples if you delve into a

00:26:06,340 --> 00:26:11,010
code into the coat there's a lot of

00:26:07,510 --> 00:26:13,330
examples of how to create audio api

00:26:11,010 --> 00:26:16,450
effects and different kinds of filters

00:26:13,330 --> 00:26:17,740
and stuff and it's basically a bunch of

00:26:16,450 --> 00:26:19,660
reading there which i won't go into it

00:26:17,740 --> 00:26:20,650
you can check out yourself and canopy is

00:26:19,660 --> 00:26:23,140
really great if you want to visualize

00:26:20,650 --> 00:26:24,640
what you're doing so you can see you can

00:26:23,140 --> 00:26:27,910
actually see the effect on the waveform

00:26:24,640 --> 00:26:29,100
of things you're doing that's it thanks

00:26:27,910 --> 00:26:31,160
very much

00:26:29,100 --> 00:26:31,160

YouTube URL: https://www.youtube.com/watch?v=XWcLDB-vNKI


