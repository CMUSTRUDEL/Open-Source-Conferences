Title: Adam Ullman: The future of communication on the web
Publication date: 2017-05-19
Playlist: Decompress AU 2016
Description: 
	Thank you to Mozilla for making video recording possible.
Captions: 
	00:00:07,850 --> 00:00:13,830
hi guys how's it going i'm adam and i'm

00:00:12,600 --> 00:00:16,650
here to talk to you about the future of

00:00:13,830 --> 00:00:18,029
communication on the web here's some

00:00:16,650 --> 00:00:19,080
contact details for me if you're

00:00:18,029 --> 00:00:20,849
interested in getting touch with me on

00:00:19,080 --> 00:00:22,860
looking me up on github or Twitter or

00:00:20,849 --> 00:00:24,899
anything like that and yeah I work at a

00:00:22,860 --> 00:00:27,329
company called tokbox and we're actually

00:00:24,899 --> 00:00:30,090
a company based in in San Francisco but

00:00:27,329 --> 00:00:32,340
we have a small office in Sydney of five

00:00:30,090 --> 00:00:33,780
of us that do JavaScript development and

00:00:32,340 --> 00:00:36,149
I run that team there in Sydney and then

00:00:33,780 --> 00:00:38,760
what we do is we're a platform for video

00:00:36,149 --> 00:00:40,380
communication on the web so we do stuff

00:00:38,760 --> 00:00:42,470
with WebRTC and what we build a platform

00:00:40,380 --> 00:00:44,760
and try to make web RTC easy for people

00:00:42,470 --> 00:00:45,810
so yeah they paid for me to come here so

00:00:44,760 --> 00:00:49,740
I thought I should give them a bit of a

00:00:45,810 --> 00:00:53,010
plug so yeah what is what is WebRTC so

00:00:49,740 --> 00:00:55,350
so WebRTC is a is a free open project

00:00:53,010 --> 00:00:56,340
that provides browsers and mobile

00:00:55,350 --> 00:00:58,590
applications with real-time

00:00:56,340 --> 00:01:01,200
communication capabilities by a simple

00:00:58,590 --> 00:01:03,300
API blah blah blah blah blah what does

00:01:01,200 --> 00:01:04,649
that all mean it's basically it's video

00:01:03,300 --> 00:01:07,229
chat in the browser without the need for

00:01:04,649 --> 00:01:09,240
plugins which is pretty awesome so you

00:01:07,229 --> 00:01:10,620
can you can get access to your camera

00:01:09,240 --> 00:01:12,300
we've seen a lot of demos of this stuff

00:01:10,620 --> 00:01:13,950
from people you can get access to your

00:01:12,300 --> 00:01:15,000
camera and microphone and you can stream

00:01:13,950 --> 00:01:16,620
it through what's called a peer

00:01:15,000 --> 00:01:19,140
connection to other people through a

00:01:16,620 --> 00:01:20,700
peer to peer connection and there's a

00:01:19,140 --> 00:01:21,659
data channels API which is cool as well

00:01:20,700 --> 00:01:24,180
what I'm going to talk too much about

00:01:21,659 --> 00:01:25,979
but yeah web IDC has been around now for

00:01:24,180 --> 00:01:28,710
five years they just celebrate the

00:01:25,979 --> 00:01:31,170
five-year anniversary in june of this

00:01:28,710 --> 00:01:33,869
year i think it was so what I'm here to

00:01:31,170 --> 00:01:35,909
talk about is not is not WebRTC as a

00:01:33,869 --> 00:01:37,770
whole it's only got 15 minutes but kind

00:01:35,909 --> 00:01:40,170
of what's new in WebRTC what are the

00:01:37,770 --> 00:01:41,700
latest api's are there out and and kind

00:01:40,170 --> 00:01:43,860
of the cool stuff that you can do with

00:01:41,700 --> 00:01:45,450
those api's but if you are interested in

00:01:43,860 --> 00:01:47,040
looking more into more information about

00:01:45,450 --> 00:01:49,500
web RTC there's some great resources out

00:01:47,040 --> 00:01:51,090
there like the M this github samples

00:01:49,500 --> 00:01:52,500
directory for the WebRTC project has a

00:01:51,090 --> 00:01:54,080
whole other samples and I'll use some of

00:01:52,500 --> 00:01:56,010
those samples in my demos actually

00:01:54,080 --> 00:01:57,330
they've got a great getting started

00:01:56,010 --> 00:01:59,010
guide and if you're interested in giving

00:01:57,330 --> 00:02:01,200
open taka tried the platform that we

00:01:59,010 --> 00:02:04,200
build a tokbox we've got some resources

00:02:01,200 --> 00:02:05,640
for you as well but yeah but what I'm

00:02:04,200 --> 00:02:07,470
going to talk about is kind of some of

00:02:05,640 --> 00:02:09,060
the new stuff so there's actually some

00:02:07,470 --> 00:02:10,950
overlap in this presentation with

00:02:09,060 --> 00:02:12,269
Soledad's presentation from yesterday if

00:02:10,950 --> 00:02:14,489
you were here for Jas comps but I'm

00:02:12,269 --> 00:02:16,799
going to try and focus on some some

00:02:14,489 --> 00:02:19,000
different areas but and go into a little

00:02:16,799 --> 00:02:21,130
bit more details

00:02:19,000 --> 00:02:23,950
so yeah we've got this um this video

00:02:21,130 --> 00:02:25,810
element capture stream API now and what

00:02:23,950 --> 00:02:28,860
what that basically lets you do is is

00:02:25,810 --> 00:02:31,510
take a video that's being played back

00:02:28,860 --> 00:02:34,390
and captured that stream from that video

00:02:31,510 --> 00:02:35,980
and you can then stream that to somebody

00:02:34,390 --> 00:02:38,920
else so I'll give you a demo of that

00:02:35,980 --> 00:02:40,360
there's a similar API for the canvas as

00:02:38,920 --> 00:02:42,040
well so anything that's happening inside

00:02:40,360 --> 00:02:43,630
of canvas you can capture a media stream

00:02:42,040 --> 00:02:45,670
from that and stream that to other

00:02:43,630 --> 00:02:47,620
people and then there's this new media

00:02:45,670 --> 00:02:49,300
recorder API as well which lets you take

00:02:47,620 --> 00:02:51,070
those streams or any other streams that

00:02:49,300 --> 00:02:52,480
you've got and record them so like that

00:02:51,070 --> 00:02:54,340
guitar demo we had earlier you could

00:02:52,480 --> 00:02:57,580
record that guitar that you were playing

00:02:54,340 --> 00:03:00,209
and record it to a file or any of these

00:02:57,580 --> 00:03:03,310
kinds of extremes that you're capturing

00:03:00,209 --> 00:03:06,880
so why why do I care about these api's

00:03:03,310 --> 00:03:08,200
and why would I like why did they bother

00:03:06,880 --> 00:03:10,570
implementing them what can I do with

00:03:08,200 --> 00:03:13,330
these api's I want to be able to do this

00:03:10,570 --> 00:03:14,680
right this is this is me playing around

00:03:13,330 --> 00:03:16,930
with snapchat I don't know if you guys

00:03:14,680 --> 00:03:19,090
have had a go at snapchat there's a lot

00:03:16,930 --> 00:03:20,320
of fun filters in there it's amazing

00:03:19,090 --> 00:03:21,610
what they've done with some of them

00:03:20,320 --> 00:03:23,890
actually they seem to come out with new

00:03:21,610 --> 00:03:25,570
filters all the time but this is my wife

00:03:23,890 --> 00:03:28,209
and I playing around with snapchat and

00:03:25,570 --> 00:03:30,370
taking some hilarious photos I do say so

00:03:28,209 --> 00:03:32,049
I want to be able to do that I also want

00:03:30,370 --> 00:03:33,670
to be able to do things like this this

00:03:32,049 --> 00:03:35,890
is photobooth solid I gave a demo

00:03:33,670 --> 00:03:37,930
yesterday actually a photo booth in the

00:03:35,890 --> 00:03:40,269
browser I want to be able to do these

00:03:37,930 --> 00:03:42,459
cool things in a browser you know like

00:03:40,269 --> 00:03:44,650
you've been able to kind of kind of do

00:03:42,459 --> 00:03:46,660
it before you could always take you'll

00:03:44,650 --> 00:03:48,280
get you do you'll get user media since

00:03:46,660 --> 00:03:49,930
we've had it and render it to a canvas

00:03:48,280 --> 00:03:51,220
but then you've been stuck you ever been

00:03:49,930 --> 00:03:56,200
able to do anything with that but now we

00:03:51,220 --> 00:03:58,090
can capture that stream and either

00:03:56,200 --> 00:03:59,829
recorder to a file or stream its trim it

00:03:58,090 --> 00:04:02,769
to other people it's not trapped in my

00:03:59,829 --> 00:04:04,600
one browser instance anymore so let's

00:04:02,769 --> 00:04:05,680
end this you know there's so much more

00:04:04,600 --> 00:04:07,090
that you can do as well like this is

00:04:05,680 --> 00:04:08,829
just some basic examples of things that

00:04:07,090 --> 00:04:11,019
have already been done but there's so

00:04:08,829 --> 00:04:12,790
much that you can do that you could

00:04:11,019 --> 00:04:14,650
potentially do now we basically have you

00:04:12,790 --> 00:04:15,940
know video and audio editing in the

00:04:14,650 --> 00:04:17,260
browser and you can stream it to people

00:04:15,940 --> 00:04:20,739
and write it to a file is all there's so

00:04:17,260 --> 00:04:24,100
many so many possibilities so let's dive

00:04:20,739 --> 00:04:25,770
in a little bit to some of the code so

00:04:24,100 --> 00:04:30,160
what I'm doing is I'm taking these

00:04:25,770 --> 00:04:32,460
samples from both let me make that

00:04:30,160 --> 00:04:32,460
bigger

00:04:32,560 --> 00:04:37,160
I'm taking some samples from the WebRTC

00:04:35,270 --> 00:04:41,180
samples directory so this one's the the

00:04:37,160 --> 00:04:42,350
video capture stream API and what I'm

00:04:41,180 --> 00:04:44,000
doing here you'll see on the left here

00:04:42,350 --> 00:04:47,030
is a video playing back from a source

00:04:44,000 --> 00:04:49,730
and as I press play it's synchronized to

00:04:47,030 --> 00:04:52,640
the video on the right hand side and in

00:04:49,730 --> 00:04:53,840
my paws they both paws and if I scrub

00:04:52,640 --> 00:04:55,280
back and forth it's actually

00:04:53,840 --> 00:04:57,080
synchronized between the two as well and

00:04:55,280 --> 00:04:59,900
this isn't a very practical example that

00:04:57,080 --> 00:05:01,010
you could imagine that this second video

00:04:59,900 --> 00:05:02,180
on the right hand side doesn't have to

00:05:01,010 --> 00:05:03,590
be in the same browser window that could

00:05:02,180 --> 00:05:04,430
be on somebody else's machine somewhere

00:05:03,590 --> 00:05:06,260
else in the world and we could

00:05:04,430 --> 00:05:07,820
synchronously watch a video together and

00:05:06,260 --> 00:05:09,940
as we planned pause and scrub back and

00:05:07,820 --> 00:05:13,520
forth would be it would be synchronized

00:05:09,940 --> 00:05:15,920
so let's take a look at the code for

00:05:13,520 --> 00:05:17,600
that one it's really quite simple

00:05:15,920 --> 00:05:19,130
actually you basically got your left

00:05:17,600 --> 00:05:21,200
your video on the left in your video on

00:05:19,130 --> 00:05:23,030
the right and then I'm going to listen

00:05:21,200 --> 00:05:24,470
for the play event of my video on the

00:05:23,030 --> 00:05:27,200
left and when it starts playing I'll

00:05:24,470 --> 00:05:29,330
just fit the right videos source object

00:05:27,200 --> 00:05:32,270
to be the stream that I capture from the

00:05:29,330 --> 00:05:33,620
left via and then I can play it back and

00:05:32,270 --> 00:05:35,300
that stream that I'm capturing I could

00:05:33,620 --> 00:05:37,430
use to attach to appear connection and

00:05:35,300 --> 00:05:39,890
send to somebody else as well or I could

00:05:37,430 --> 00:05:42,170
use my Remedia recorder API like I like

00:05:39,890 --> 00:05:45,250
which I'll introduce you in a little bit

00:05:42,170 --> 00:05:48,110
later to record it so that's that one

00:05:45,250 --> 00:05:51,020
similarly there's this a canvas captured

00:05:48,110 --> 00:05:53,030
stream API which is basically the same

00:05:51,020 --> 00:05:57,200
idea but with a canvas so let me jump

00:05:53,030 --> 00:06:00,080
over to that demo so what I've got here

00:05:57,200 --> 00:06:03,020
on the left is a canvas that's got a

00:06:00,080 --> 00:06:05,180
teapot rendered inert using WebGL and if

00:06:03,020 --> 00:06:07,760
I drag on that teapot it moves around

00:06:05,180 --> 00:06:09,500
and you can see it actually moving

00:06:07,760 --> 00:06:10,820
around on my video on the right as well

00:06:09,500 --> 00:06:12,350
and this thing on the right is just a

00:06:10,820 --> 00:06:14,240
video element and similarly it's not a

00:06:12,350 --> 00:06:16,520
very practical example but you can

00:06:14,240 --> 00:06:18,710
imagine you know I could be manipulating

00:06:16,520 --> 00:06:19,970
some kind of 3d world and streaming that

00:06:18,710 --> 00:06:22,790
to other people that are watching me

00:06:19,970 --> 00:06:23,900
elsewhere through a peer connection so

00:06:22,790 --> 00:06:29,150
the code for that is just as simple

00:06:23,900 --> 00:06:31,160
again it's just I've got my canvas in my

00:06:29,150 --> 00:06:33,380
video and I call capture stream on my

00:06:31,160 --> 00:06:37,420
canvas and set that to be the source of

00:06:33,380 --> 00:06:40,550
the video and that's the left to do now

00:06:37,420 --> 00:06:43,070
let's look at the media recorder API so

00:06:40,550 --> 00:06:45,950
I can use this API to record all kinds

00:06:43,070 --> 00:06:48,680
of media but let me just do a demo here

00:06:45,950 --> 00:06:52,550
going to start recording myself wave

00:06:48,680 --> 00:06:53,930
hello hi mom hum stop recording and I

00:06:52,550 --> 00:06:55,250
can play that video back and then I'll

00:06:53,930 --> 00:06:58,370
playback and I could download it and

00:06:55,250 --> 00:07:00,080
things like that so yeah like I said all

00:06:58,370 --> 00:07:01,820
these samples are available on this Web

00:07:00,080 --> 00:07:03,530
IDC github repo I haven't even written

00:07:01,820 --> 00:07:06,260
ease myself but there is it it's great

00:07:03,530 --> 00:07:08,180
resource there if you want if we take a

00:07:06,260 --> 00:07:11,780
look at that code what they've done here

00:07:08,180 --> 00:07:13,100
is they've got a gum video they've

00:07:11,780 --> 00:07:15,380
caught it which is gum sensor

00:07:13,100 --> 00:07:16,940
getusermedia so that's the video on the

00:07:15,380 --> 00:07:19,160
left where I've captured we've seen some

00:07:16,940 --> 00:07:20,690
examples of this before at the big

00:07:19,160 --> 00:07:22,010
conference where armed people are doing

00:07:20,690 --> 00:07:24,980
a get user media and attaching it to

00:07:22,010 --> 00:07:26,510
something so I've got my get user media

00:07:24,980 --> 00:07:28,850
video and then when i click the start

00:07:26,510 --> 00:07:32,270
recording button what i'm going to do is

00:07:28,850 --> 00:07:34,400
initialize these recorded blobs this

00:07:32,270 --> 00:07:39,170
recorded blobs array and i'm going to

00:07:34,400 --> 00:07:40,790
create a new media recorder that has and

00:07:39,170 --> 00:07:43,280
i'm going to pass it in the stream that

00:07:40,790 --> 00:07:44,840
stream that i got from getusermedia and

00:07:43,280 --> 00:07:45,920
then i'm going to pass in some options

00:07:44,840 --> 00:07:47,450
which basically tell her what they

00:07:45,920 --> 00:07:50,180
contain there in the codec i want to use

00:07:47,450 --> 00:07:51,860
for the video are and then i can listen

00:07:50,180 --> 00:07:54,200
on that mediarecorder fluid data

00:07:51,860 --> 00:07:57,110
available event and what I'm doing there

00:07:54,200 --> 00:07:59,150
is every time a new data event data

00:07:57,110 --> 00:08:02,030
available event fires I'm pushing it

00:07:59,150 --> 00:08:04,580
onto the blobs array and then you call

00:08:02,030 --> 00:08:06,050
media record a start and that 10 that

00:08:04,580 --> 00:08:08,150
number 10 that I'm passing in there is

00:08:06,050 --> 00:08:10,070
basically says that I want to collect 10

00:08:08,150 --> 00:08:12,200
milliseconds at a time and so every 10

00:08:10,070 --> 00:08:14,210
milliseconds of data the data available

00:08:12,200 --> 00:08:15,650
event will fire and I'll append that 10

00:08:14,210 --> 00:08:17,900
milliseconds of data onto my recorded

00:08:15,650 --> 00:08:19,340
blob if you don't pass anything in there

00:08:17,900 --> 00:08:22,130
it'll just give you one big blob at the

00:08:19,340 --> 00:08:24,380
end when you when you stop and then when

00:08:22,130 --> 00:08:25,760
I to stop recording when you press the

00:08:24,380 --> 00:08:29,120
stop recording button it just calls

00:08:25,760 --> 00:08:31,240
media recorded stop and to play it back

00:08:29,120 --> 00:08:34,640
I basically take those recorded blobs

00:08:31,240 --> 00:08:36,650
and create this blob object and I set

00:08:34,640 --> 00:08:39,620
that to be the source of my recorded

00:08:36,650 --> 00:08:45,920
video and that's it it'll start it will

00:08:39,620 --> 00:08:48,110
start playing it back so like that's all

00:08:45,920 --> 00:08:52,070
that's all good and all i can see that i

00:08:48,110 --> 00:08:53,660
can record a video and i can capture a

00:08:52,070 --> 00:08:56,030
stream from a canvas and from a video

00:08:53,660 --> 00:08:58,490
but can i really make snapchat in a

00:08:56,030 --> 00:08:59,750
browser that's kind of the question so I

00:08:58,490 --> 00:09:01,670
thought I'd I

00:08:59,750 --> 00:09:02,690
take that on as a challenge over the

00:09:01,670 --> 00:09:05,390
last few days I've been playing around

00:09:02,690 --> 00:09:08,720
with a little bit and here's my most

00:09:05,390 --> 00:09:12,770
simple snapchat in a browser app that i

00:09:08,720 --> 00:09:14,870
put together and what I am got here is

00:09:12,770 --> 00:09:18,770
just my snap button so if I click that I

00:09:14,870 --> 00:09:21,740
get a snap of my face frozen oops please

00:09:18,770 --> 00:09:24,350
knock something over and I can download

00:09:21,740 --> 00:09:28,430
that if I want and as my there's my snap

00:09:24,350 --> 00:09:32,300
of myself or I can if I hold down that

00:09:28,430 --> 00:09:34,730
button it'll start recording now let go

00:09:32,300 --> 00:09:38,830
and it's that's my video recorded and I

00:09:34,730 --> 00:09:43,280
can similarly download that video and

00:09:38,830 --> 00:09:49,010
play it back in that's it playing back

00:09:43,280 --> 00:09:50,660
in Nam VLC so that's that's a simple

00:09:49,010 --> 00:09:52,850
thing artists using the simple AP is

00:09:50,660 --> 00:09:55,880
that I talked about but what about the

00:09:52,850 --> 00:09:57,530
filters you know those cool filters that

00:09:55,880 --> 00:10:01,640
we feel for snapchat how do i how do I

00:09:57,530 --> 00:10:02,650
do that stuff well so what I was doing

00:10:01,640 --> 00:10:04,700
there is just doing a normal

00:10:02,650 --> 00:10:06,710
getusermedia call we've seen this a few

00:10:04,700 --> 00:10:08,150
times you cook you call getusermedia I'm

00:10:06,710 --> 00:10:10,580
not handling errors here which I should

00:10:08,150 --> 00:10:13,460
be um but yeah you could get you the

00:10:10,580 --> 00:10:15,290
media you get a stream back and then you

00:10:13,460 --> 00:10:16,820
set the source object of your video

00:10:15,290 --> 00:10:18,380
element to be that stream in equal play

00:10:16,820 --> 00:10:20,540
but I don't want to just play back

00:10:18,380 --> 00:10:23,150
normal video I want to modify it right

00:10:20,540 --> 00:10:26,810
so I want to render that video in the

00:10:23,150 --> 00:10:31,430
canvas so here I am creating a canvas

00:10:26,810 --> 00:10:34,700
element and getting the 2d context of it

00:10:31,430 --> 00:10:36,530
and basically doing this draw loop thing

00:10:34,700 --> 00:10:38,990
so what that does is every request

00:10:36,530 --> 00:10:40,160
animation frame I'm drawing the contents

00:10:38,990 --> 00:10:42,170
of my video element that I got

00:10:40,160 --> 00:10:44,390
previously from get user media into the

00:10:42,170 --> 00:10:46,760
canvas and then I'm also going to at the

00:10:44,390 --> 00:10:50,270
bottom there call capture stream on that

00:10:46,760 --> 00:10:52,580
canvas and use that in my media recorder

00:10:50,270 --> 00:10:55,070
or in my peer connection if I want to

00:10:52,580 --> 00:10:56,390
stream it and I'm going to put I'm going

00:10:55,070 --> 00:10:57,950
to add the audio track back in so I'm

00:10:56,390 --> 00:10:59,960
going to take my microphone audio from

00:10:57,950 --> 00:11:01,910
my original video stream as well and put

00:10:59,960 --> 00:11:05,390
that into the into the capture stream in

00:11:01,910 --> 00:11:08,900
that way I'm capturing audio too so

00:11:05,390 --> 00:11:11,180
that's basically that's still just not

00:11:08,900 --> 00:11:13,370
modifying the data at all so what I want

00:11:11,180 --> 00:11:16,430
to do is instead of destroying

00:11:13,370 --> 00:11:19,700
video straight on there I want to modify

00:11:16,430 --> 00:11:22,310
the video a little bit so what I can do

00:11:19,700 --> 00:11:26,020
to do that is I can get my image data an

00:11:22,310 --> 00:11:29,210
image data is just an array of RGB

00:11:26,020 --> 00:11:31,190
values so if I pull image data out of a

00:11:29,210 --> 00:11:32,510
canvas I just get an array from the top

00:11:31,190 --> 00:11:35,060
left-hand corner all the way down to the

00:11:32,510 --> 00:11:36,710
bottom right of all the RGBA values of

00:11:35,060 --> 00:11:38,870
every single pixel and that's the same I

00:11:36,710 --> 00:11:41,240
GBA that you have in CSS where it's just

00:11:38,870 --> 00:11:46,940
a red green blue and alpha value between

00:11:41,240 --> 00:11:48,529
0 and 255 and it's and what I can do

00:11:46,940 --> 00:11:51,950
here to get kind of a color shift effect

00:11:48,529 --> 00:11:53,210
like this is just this is a redshift

00:11:51,950 --> 00:11:55,640
here so I'm what I'm doing is I'm

00:11:53,210 --> 00:11:58,400
iterating four bits at a time and

00:11:55,640 --> 00:12:01,040
getting that RGB a value and I'm leaving

00:11:58,400 --> 00:12:02,660
the GBA alone but the are I'm adding an

00:12:01,040 --> 00:12:06,380
extra 50 to it but making sure I don't

00:12:02,660 --> 00:12:08,390
go over 255 so what that does is that

00:12:06,380 --> 00:12:11,510
gives me kind of that red effect so let

00:12:08,390 --> 00:12:14,510
me show you that here if I close this

00:12:11,510 --> 00:12:17,930
video away you're going to have again

00:12:14,510 --> 00:12:20,029
lies if I hold down on my face and then

00:12:17,930 --> 00:12:21,920
I get some filter options here if i

00:12:20,029 --> 00:12:24,440
press red you can see that I've got a

00:12:21,920 --> 00:12:28,070
red filter and similarly I got a green

00:12:24,440 --> 00:12:34,630
and a blue filter and if I want to do my

00:12:28,070 --> 00:12:37,040
record my snap again I download that

00:12:34,630 --> 00:12:40,339
you'll see that if I play that back in

00:12:37,040 --> 00:12:42,800
plc that's yeah that's my green video in

00:12:40,339 --> 00:12:45,110
in VLC so that's kinda that's that's a

00:12:42,800 --> 00:12:48,550
simple fun filter to do have just

00:12:45,110 --> 00:12:52,070
modifying the igp value a little bit

00:12:48,550 --> 00:12:53,930
here's another fun one this is inverting

00:12:52,070 --> 00:12:57,110
it so this is just as simple instead of

00:12:53,930 --> 00:12:58,310
instead of giving back just a normal igb

00:12:57,110 --> 00:13:02,000
value i'm going to invert it so i'm

00:12:58,310 --> 00:13:04,910
going to do 255 take away the IDB value

00:13:02,000 --> 00:13:06,440
so what was black at 0 0 0 will now be

00:13:04,910 --> 00:13:08,839
white and vice versa and all the colors

00:13:06,440 --> 00:13:12,160
kind of get flipped around so let me

00:13:08,839 --> 00:13:14,779
show you that one I call this one my um

00:13:12,160 --> 00:13:16,700
creepy santa filter because it makes me

00:13:14,779 --> 00:13:20,300
kind of look like a creepy santa claus a

00:13:16,700 --> 00:13:23,110
white beard scare my kids with that one

00:13:20,300 --> 00:13:25,700
I got a black teeth and

00:13:23,110 --> 00:13:28,250
so that's that's kind of the the invert

00:13:25,700 --> 00:13:29,540
filter which is a bit of fun but what

00:13:28,250 --> 00:13:31,670
about those cool face effects right

00:13:29,540 --> 00:13:33,170
there like snapchat has these really

00:13:31,670 --> 00:13:35,090
cool space effects are they morph your

00:13:33,170 --> 00:13:36,290
face and overlay things on your face and

00:13:35,090 --> 00:13:37,850
all this sort of thing how can i how can

00:13:36,290 --> 00:13:41,510
I do that stuff can i really do that in

00:13:37,850 --> 00:13:44,000
a browser good question let's see so

00:13:41,510 --> 00:13:45,560
there's there are some libraries out

00:13:44,000 --> 00:13:47,270
there fortunately to do the space

00:13:45,560 --> 00:13:48,890
tracking stuff for you so tracking jess

00:13:47,270 --> 00:13:50,390
is one that i will play around with but

00:13:48,890 --> 00:13:51,830
it just kind of gives you generally this

00:13:50,390 --> 00:13:53,600
is around where we think of faces and

00:13:51,830 --> 00:13:54,770
around where some eyes and a mouth art

00:13:53,600 --> 00:13:57,050
and some features art which is good for

00:13:54,770 --> 00:13:58,400
some use cases but for this kind of use

00:13:57,050 --> 00:14:02,300
case you want something more rich than

00:13:58,400 --> 00:14:05,330
that so what i found is this library clm

00:14:02,300 --> 00:14:08,120
tracker and what it does is it gives you

00:14:05,330 --> 00:14:09,710
actually 62 points on the faces map so

00:14:08,120 --> 00:14:11,780
it can it's much more detailed

00:14:09,710 --> 00:14:14,560
information and it it will live and

00:14:11,780 --> 00:14:17,810
really quickly actually give you that

00:14:14,560 --> 00:14:19,400
information all those points on a face

00:14:17,810 --> 00:14:21,230
and that's kind of what you need to be

00:14:19,400 --> 00:14:23,540
able to do this kind of stuff so let's

00:14:21,230 --> 00:14:25,940
see if this works mileage may vary with

00:14:23,540 --> 00:14:28,550
this right and sometimes if the lighting

00:14:25,940 --> 00:14:30,950
isn't too good my face won't won't come

00:14:28,550 --> 00:14:33,490
up properly oh there we go it's working

00:14:30,950 --> 00:14:36,080
so you can see as I raise my eyebrows

00:14:33,490 --> 00:14:39,380
it's tracking my eyebrows as I move my

00:14:36,080 --> 00:14:40,970
mouth so I open my mouth I can do things

00:14:39,380 --> 00:14:43,220
like make those giant tongues and snaps

00:14:40,970 --> 00:14:45,800
I'd come out if I want to do but yeah

00:14:43,220 --> 00:14:47,600
that's it and tracking my face so then

00:14:45,800 --> 00:14:50,270
what i can do is something very simple

00:14:47,600 --> 00:14:52,760
like like put hilarious glasses on my

00:14:50,270 --> 00:14:54,740
face enough money it's not quite lining

00:14:52,760 --> 00:14:56,300
up perfectly is it but if i raise my

00:14:54,740 --> 00:14:59,660
eyebrows you can see my eyebrows

00:14:56,300 --> 00:15:02,960
everything and that's kind of a simple

00:14:59,660 --> 00:15:05,300
simple fun filter i can do using this

00:15:02,960 --> 00:15:08,570
kind of data so the way the way i've

00:15:05,300 --> 00:15:11,150
done that is just too quite simply take

00:15:08,570 --> 00:15:13,880
that basically that clm track it gives

00:15:11,150 --> 00:15:16,040
you this current to get current position

00:15:13,880 --> 00:15:18,650
api that gives you back an array of all

00:15:16,040 --> 00:15:20,780
those 62 different points and then what

00:15:18,650 --> 00:15:23,120
i'm doing is figuring out what about

00:15:20,780 --> 00:15:26,480
where the where the eyes and the mouse

00:15:23,120 --> 00:15:29,000
are and drawing this is this comedy

00:15:26,480 --> 00:15:30,380
glasses image on top of that canvas so

00:15:29,000 --> 00:15:33,080
you can see I'm doing this context of

00:15:30,380 --> 00:15:34,490
drawimage with just the video element so

00:15:33,080 --> 00:15:35,939
drawing the normal video on there and

00:15:34,490 --> 00:15:38,009
then I get my

00:15:35,939 --> 00:15:39,989
position I figure out a width and a

00:15:38,009 --> 00:15:41,939
height and the XY positions and I draw

00:15:39,989 --> 00:15:43,319
this image on top of it so I'm just

00:15:41,939 --> 00:15:47,789
doing that repeatedly in that same

00:15:43,319 --> 00:15:49,829
drawer loop that I had before then you

00:15:47,789 --> 00:15:51,689
can get more fancy and you can do things

00:15:49,829 --> 00:15:54,889
in that CLM tracker has some really

00:15:51,689 --> 00:15:58,619
interesting kind of face morphing demos

00:15:54,889 --> 00:16:00,209
and I didn't get this integrated into my

00:15:58,619 --> 00:16:01,379
app but they've got some great demos on

00:16:00,209 --> 00:16:04,499
there and they could think about their

00:16:01,379 --> 00:16:06,389
demo I'll get a plane here so you can

00:16:04,499 --> 00:16:08,579
see that's it mostly my face into not

00:16:06,389 --> 00:16:11,489
looking very well and then you can see

00:16:08,579 --> 00:16:15,479
it morphing into it's the creepy cheery

00:16:11,489 --> 00:16:16,919
face and you can see out there in the

00:16:15,479 --> 00:16:18,239
top left that that's that's the frames

00:16:16,919 --> 00:16:19,529
per second that it's rendering out in

00:16:18,239 --> 00:16:21,149
the browser and it's that's really high

00:16:19,529 --> 00:16:24,149
it's getting up at like 200 hundred and

00:16:21,149 --> 00:16:25,979
sixty frames per second and doing all

00:16:24,149 --> 00:16:27,599
these kind of fancy face deformation

00:16:25,979 --> 00:16:31,409
stuff and it's doing it in real time and

00:16:27,599 --> 00:16:34,349
really quickly that's scary I'm going to

00:16:31,409 --> 00:16:35,729
change but yeah so all this stuff

00:16:34,349 --> 00:16:38,689
hopefully have shown that all this stuff

00:16:35,729 --> 00:16:42,509
is kind of possible in the browser and

00:16:38,689 --> 00:16:45,149
yeah go out and make snapchat and make

00:16:42,509 --> 00:16:47,579
other cool stuff but this stuff so yeah

00:16:45,149 --> 00:16:48,720
thank you and I'll be if you want to

00:16:47,579 --> 00:16:50,099
check out the slides I'll be putting

00:16:48,720 --> 00:16:52,109
them up and tweeting about am I putting

00:16:50,099 --> 00:16:53,489
em on github or whatever but feel free

00:16:52,109 --> 00:16:57,139
to come grab me you have any questions

00:16:53,489 --> 00:16:57,139
as well ok

00:17:03,010 --> 00:17:05,070

YouTube URL: https://www.youtube.com/watch?v=ZSJFRbwGgw4


