Title: Emil Bay: Hyperjournal - A tamper-proof publishing system
Publication date: 2017-05-19
Playlist: JSConf AU 2016
Description: 
	Thank you to Mozilla for making video recording possible.

Over the past several months I've been part of a project to unite 7 independent Syrian newspapers as one, to unite the war torn country. The project was supported by OTHER_A. Before the project the publishers, who are in excile in Turkey, would print their papers in Turkey, smuggle them over the border, hope they didn't get confiscated and hope the trucks would reach their destinaiton. The first iteration of the project has been developing a website and a digital strategy for the joint venture. Their story is interesting in and of itself, in how a design and development process has united the seven papers, who have wildely different policital views, but all agree on a peaceful and united Syria. However, I want to present something different.

Drawing on our experience from the project, and from our gained insight into how suppresed journalists work around the world, we've designed a new publishing model that hasn't been seen before on the web, due to browser limitations:

The integrity of the content, publisher and source can be verified though cryptography signing and PKI-based authentication methods
The content can be distributed using uncommon transports; p2p, BLE, LAN
All content is served from static sources, minimizing the attack surface (eg. state sponsored hackers, political opponents)
In several conflicts, government control and censorship of media outlets and communication channels has allowed the spread of propaganda and supression of free, critical thinking, undermining the foundation of democracy. Making it impossible to forge information as to appear from a trusted source is a vital step in this process.

This talk aims to outline the new web technologies, cryptographic primitives and human processes that allow freedom of speech in countries where journalists, whistle-blowers and activists still don't enjoy the freedom we have come to assume in the Western world.
Captions: 
	00:00:05,630 --> 00:00:16,610
good ideas come um so what happened yep

00:00:12,889 --> 00:00:25,380
I'm oh what's that thing up the tub

00:00:16,610 --> 00:00:32,720
we'll see if it disappears yeah I think

00:00:25,380 --> 00:00:32,720
this is good to go now yeah that's it oh

00:00:36,410 --> 00:00:43,890
that's like again okay so yeah okay so

00:00:41,370 --> 00:00:47,010
good to go now I'm here to talk about

00:00:43,890 --> 00:00:50,190
Harbhajan harbhajan is a chamber prop

00:00:47,010 --> 00:00:51,900
proof publishing system and what exactly

00:00:50,190 --> 00:01:00,570
that means we're going to start about

00:00:51,900 --> 00:01:02,820
now so there's an issue haha Jones

00:01:00,570 --> 00:01:04,290
doesn't actually exist yet so this is

00:01:02,820 --> 00:01:07,829
going to be how to build hi Virgil a

00:01:04,290 --> 00:01:10,470
time approved publishing system what

00:01:07,829 --> 00:01:11,760
we're going to talk about today is we

00:01:10,470 --> 00:01:13,440
can talk a lot about cryptography and

00:01:11,760 --> 00:01:17,159
Conservancy is very security sensitive

00:01:13,440 --> 00:01:19,200
so if I say anything wrong um so if we

00:01:17,159 --> 00:01:20,940
don't have Q&A here or you'll have to go

00:01:19,200 --> 00:01:23,549
and correct me on the tas con au

00:01:20,940 --> 00:01:25,070
repository put up and also if you're

00:01:23,549 --> 00:01:27,990
going to apply any of the ideas in this

00:01:25,070 --> 00:01:31,080
this presentation go and have a look

00:01:27,990 --> 00:01:35,010
there before you actually use any of the

00:01:31,080 --> 00:01:36,990
stuff I'm talking about yeah next

00:01:35,010 --> 00:01:40,380
morning doctors have the Hippocratic

00:01:36,990 --> 00:01:43,049
oath which is pretty much that you

00:01:40,380 --> 00:01:45,540
should always care for a person in need

00:01:43,049 --> 00:01:48,390
regardless of whether they are able to

00:01:45,540 --> 00:01:52,500
compensate you and then pretty much

00:01:48,390 --> 00:01:54,270
every doctor in the whole world adheres

00:01:52,500 --> 00:01:57,810
to this oath it goes all the way back to

00:01:54,270 --> 00:01:59,610
the ancient Greeks in them social

00:01:57,810 --> 00:02:01,020
development we have quite similar and

00:01:59,610 --> 00:02:02,820
that's just don't roll your own

00:02:01,020 --> 00:02:06,900
photography

00:02:02,820 --> 00:02:09,030
but am yeah we can do some dangerous

00:02:06,900 --> 00:02:10,410
stuff here today so I'm actually not

00:02:09,030 --> 00:02:12,360
sure what people what people say when

00:02:10,410 --> 00:02:13,920
they say don't grow lianca chakra see I

00:02:12,360 --> 00:02:15,840
think they mean that you shouldn't go

00:02:13,920 --> 00:02:19,260
and bend your own like crypto algorithm

00:02:15,840 --> 00:02:22,260
but it doesn't make sense if you can't

00:02:19,260 --> 00:02:23,880
go and use cryptography so today we're

00:02:22,260 --> 00:02:26,550
only going to use cryptography you're

00:02:23,880 --> 00:02:30,120
not going to invent any construction so

00:02:26,550 --> 00:02:32,550
start with the novelistic pot my name is

00:02:30,120 --> 00:02:34,770
Emil bail online unknown as a mule days

00:02:32,550 --> 00:02:37,020
because there's a famous mathematician

00:02:34,770 --> 00:02:40,140
called Thomas base and I want to

00:02:37,020 --> 00:02:42,480
associate with him I used to study math

00:02:40,140 --> 00:02:45,120
at uni but it was at the engineering

00:02:42,480 --> 00:02:46,920
school but the didn't reach it in an

00:02:45,120 --> 00:02:49,170
engineering way so I didn't like it and

00:02:46,920 --> 00:02:51,750
I ended up dropping out and just work in

00:02:49,170 --> 00:02:53,130
software so I've worked at a high

00:02:51,750 --> 00:02:54,420
performance computing lab with super

00:02:53,130 --> 00:02:56,070
computers and I've worked at an

00:02:54,420 --> 00:02:57,810
advertising agency and most recently

00:02:56,070 --> 00:03:02,489
I've worked at a national newspaper in

00:02:57,810 --> 00:03:04,019
qom making Denmark but now i'm working

00:03:02,489 --> 00:03:06,300
on a start up with a couple of other

00:03:04,019 --> 00:03:09,060
people called commodity trader where we

00:03:06,300 --> 00:03:10,799
sell all kinds of agriculture products

00:03:09,060 --> 00:03:13,200
so if you want to get hooked up with

00:03:10,799 --> 00:03:15,630
some argentine high protein soy i'm

00:03:13,200 --> 00:03:20,070
totally a man so just catch me in the

00:03:15,630 --> 00:03:21,720
break yeah but really I'm just another

00:03:20,070 --> 00:03:24,030
termite from the internet coming out of

00:03:21,720 --> 00:03:27,959
my shell today here to talk about

00:03:24,030 --> 00:03:30,510
cryptography yeah so what's up with

00:03:27,959 --> 00:03:32,489
Hobbit journal what is all about how

00:03:30,510 --> 00:03:34,709
would you know is other has a goal to

00:03:32,489 --> 00:03:37,320
provide a cryptographically easy juice

00:03:34,709 --> 00:03:38,790
curves we actually secure integrated

00:03:37,320 --> 00:03:42,170
newsroom for distributed media

00:03:38,790 --> 00:03:44,910
organizations so here you are these some

00:03:42,170 --> 00:03:46,410
distributed media organizations and this

00:03:44,910 --> 00:03:48,239
is where all my motivation comes from

00:03:46,410 --> 00:03:49,769
comes from a project I've been working

00:03:48,239 --> 00:03:52,590
on with a couple of other people for the

00:03:49,769 --> 00:03:54,720
past maybe nine months we've been

00:03:52,590 --> 00:03:57,630
working with Syrian journalist in exile

00:03:54,720 --> 00:04:00,120
in Turkey what we've been trying to do

00:03:57,630 --> 00:04:03,900
with them is we have seven newspapers

00:04:00,120 --> 00:04:06,690
they are all against the Assad regime

00:04:03,900 --> 00:04:08,549
they're all against Isis taking over

00:04:06,690 --> 00:04:13,350
Syria they just want a peaceful United

00:04:08,549 --> 00:04:14,880
Syria again and to try and like help

00:04:13,350 --> 00:04:17,430
that come along

00:04:14,880 --> 00:04:23,130
we have helped them developed a digital

00:04:17,430 --> 00:04:25,470
media called SNP these are the seven

00:04:23,130 --> 00:04:26,460
media organizations that's been

00:04:25,470 --> 00:04:28,830
extremely interesting that's been

00:04:26,460 --> 00:04:31,050
working on a rabbit new side and I'll

00:04:28,830 --> 00:04:34,140
just tell you rtl support in all the

00:04:31,050 --> 00:04:36,030
browsers is like bombs lying so

00:04:34,140 --> 00:04:38,610
these are these are the journalist and

00:04:36,030 --> 00:04:41,030
you might not be able to tell but this

00:04:38,610 --> 00:04:43,410
is life and death for them pretty much

00:04:41,030 --> 00:04:46,260
everything one of these people have been

00:04:43,410 --> 00:04:49,710
have gone through torture under the

00:04:46,260 --> 00:04:51,810
Assad regime and northern Turkey and the

00:04:49,710 --> 00:04:54,450
way they work is that they write their

00:04:51,810 --> 00:04:57,390
newspapers from Istanbul they get their

00:04:54,450 --> 00:04:59,610
newspapers printed in Istanbul they

00:04:57,390 --> 00:05:01,950
smuggle them across the border on big

00:04:59,610 --> 00:05:04,020
trucks and they just beer free so they

00:05:01,950 --> 00:05:06,690
don't in any money at all the way they

00:05:04,020 --> 00:05:10,350
survive is by doing a bit of freelancing

00:05:06,690 --> 00:05:12,330
work for Western media and by the

00:05:10,350 --> 00:05:15,990
support they get from a organization

00:05:12,330 --> 00:05:19,680
called ims which is also the nonprofit

00:05:15,990 --> 00:05:23,520
organization supporting all of this this

00:05:19,680 --> 00:05:25,410
work with SP is the goal of people I've

00:05:23,520 --> 00:05:27,960
been working with honest so that's me

00:05:25,410 --> 00:05:30,630
over there let's beat it and then we

00:05:27,960 --> 00:05:34,110
have an appeal and Jacob and then these

00:05:30,630 --> 00:05:38,850
are the guys who are working with the p1

00:05:34,110 --> 00:05:43,470
Syrian now these guys in in northern

00:05:38,850 --> 00:05:45,630
Syria invisible they they have a problem

00:05:43,470 --> 00:05:47,340
that they can't go and report from

00:05:45,630 --> 00:05:49,560
inside Syria both because they're going

00:05:47,340 --> 00:05:51,990
to face that might face imprisonment and

00:05:49,560 --> 00:05:55,890
torture but also because the whole war

00:05:51,990 --> 00:05:57,180
in Syria is about who tells the story

00:05:55,890 --> 00:05:59,130
that the rest of the world believes and

00:05:57,180 --> 00:06:02,970
it's very hard to get your story outside

00:05:59,130 --> 00:06:04,530
of Syria and and I don't know this

00:06:02,970 --> 00:06:07,080
firsthand but this is what they tell me

00:06:04,530 --> 00:06:09,150
is that since Russia got involved in

00:06:07,080 --> 00:06:14,190
conflicts this whole landscape of what's

00:06:09,150 --> 00:06:19,530
true and what's false has become even

00:06:14,190 --> 00:06:21,300
more complex so honest is a Madonna said

00:06:19,530 --> 00:06:24,840
the new I the newspaper work that he was

00:06:21,300 --> 00:06:25,590
the like technical director there and he

00:06:24,840 --> 00:06:27,330
asked me to come and work on this

00:06:25,590 --> 00:06:28,620
project and I'm me to say yes because I

00:06:27,330 --> 00:06:30,389
mean in your life

00:06:28,620 --> 00:06:31,680
you need a private project something you

00:06:30,389 --> 00:06:33,330
can earn money pump but you also need a

00:06:31,680 --> 00:06:36,570
prosperity project something that brings

00:06:33,330 --> 00:06:38,520
humanity forward and this isn't this is

00:06:36,570 --> 00:06:40,560
exactly one of those projects but after

00:06:38,520 --> 00:06:43,050
we did all the website he was asking me

00:06:40,560 --> 00:06:45,479
I is there no more with like can we do

00:06:43,050 --> 00:06:46,919
something better because these websites

00:06:45,479 --> 00:06:48,389
that are against the Assad regime the

00:06:46,919 --> 00:06:51,780
SATA stream is extremely resourceful

00:06:48,389 --> 00:06:54,360
also in technical regards so anyone who

00:06:51,780 --> 00:06:57,360
goes against the regime they'll get get

00:06:54,360 --> 00:07:01,310
hacked or like attempted hacking the

00:06:57,360 --> 00:07:03,120
Assad regime controls the the whole

00:07:01,310 --> 00:07:04,949
telecommunications infrastructure inside

00:07:03,120 --> 00:07:06,840
Syria so if they don't like your

00:07:04,949 --> 00:07:09,539
web-site bill might just to DNS

00:07:06,840 --> 00:07:11,669
poisoning to make people unable to

00:07:09,539 --> 00:07:13,740
access your website I mean serious not

00:07:11,669 --> 00:07:15,180
like that that's one thing people get

00:07:13,740 --> 00:07:17,639
wrong all the time is that it's not a

00:07:15,180 --> 00:07:19,470
developing world developing nation if

00:07:17,639 --> 00:07:22,770
you actually have like high-end

00:07:19,470 --> 00:07:25,199
smartphones there and laptops and

00:07:22,770 --> 00:07:26,789
desktop computers that are pretty much

00:07:25,199 --> 00:07:29,550
up to stand up with what we have here

00:07:26,789 --> 00:07:33,180
are three or four years ago before the

00:07:29,550 --> 00:07:35,160
war broke out and so we're like what

00:07:33,180 --> 00:07:37,580
what can we do to alleviate all these

00:07:35,160 --> 00:07:41,789
problems and it all comes sided with

00:07:37,580 --> 00:07:43,710
also reading this book called the new

00:07:41,789 --> 00:07:47,370
digital age written by Eric Smith

00:07:43,710 --> 00:07:49,889
chairman of Google and jerk on the

00:07:47,370 --> 00:07:52,530
director of Google ideas and in here

00:07:49,889 --> 00:07:54,450
they talk about how can we make a media

00:07:52,530 --> 00:07:57,330
organization in this wing 21st century

00:07:54,450 --> 00:07:59,820
that will like you how can we use

00:07:57,330 --> 00:08:01,050
technology to actually empower media

00:07:59,820 --> 00:08:02,510
organizations and one of the things we

00:08:01,050 --> 00:08:04,830
talked about in there is that

00:08:02,510 --> 00:08:07,229
connectivity gives a new hope to freedom

00:08:04,830 --> 00:08:10,320
of speech because you can report from an

00:08:07,229 --> 00:08:11,880
area and the reporting is done you might

00:08:10,320 --> 00:08:17,130
think of reporting outside of the area

00:08:11,880 --> 00:08:20,160
that's that's under pressure and there's

00:08:17,130 --> 00:08:26,070
no way for the local people in power to

00:08:20,160 --> 00:08:27,780
take down whatever you're saying but it

00:08:26,070 --> 00:08:29,910
requires a couple of things like imagine

00:08:27,780 --> 00:08:32,940
this international NGO whose mission is

00:08:29,910 --> 00:08:34,050
to facilitate confidential reporting we

00:08:32,940 --> 00:08:35,909
need that because we need someone

00:08:34,050 --> 00:08:37,430
outside the country who are not

00:08:35,909 --> 00:08:39,780
answering to local vegetation

00:08:37,430 --> 00:08:42,060
fortunately I ms who have been working

00:08:39,780 --> 00:08:47,910
with I excited I can't

00:08:42,060 --> 00:08:49,650
and you so yeah that's that next thing

00:08:47,910 --> 00:08:53,400
they say is that in order to protect the

00:08:49,650 --> 00:08:55,620
identity of journalists you need to

00:08:53,400 --> 00:08:57,779
verify them in a system under just a

00:08:55,620 --> 00:09:00,000
number like a code so you can't

00:08:57,779 --> 00:09:02,490
associate the identity with who they are

00:09:00,000 --> 00:09:04,440
in real world and this code they talk

00:09:02,490 --> 00:09:08,520
about that's something we will call a

00:09:04,440 --> 00:09:12,750
public key in this talk which is a part

00:09:08,520 --> 00:09:14,370
of a cryptographic techniques and yeah

00:09:12,750 --> 00:09:16,230
and so the journalists in the editors

00:09:14,370 --> 00:09:18,990
they communicate anonymously and they

00:09:16,230 --> 00:09:20,670
only have to meet ever once when they do

00:09:18,990 --> 00:09:22,529
the employment and that's to exchange

00:09:20,670 --> 00:09:26,520
this unique number which we call the

00:09:22,529 --> 00:09:28,260
public key so yeah which problem we want

00:09:26,520 --> 00:09:30,420
to solve again we want to solve chamber

00:09:28,260 --> 00:09:32,010
proof publishing and especially over in

00:09:30,420 --> 00:09:34,529
secure channels so what's an intricate

00:09:32,010 --> 00:09:37,170
channel that's like in the internet

00:09:34,529 --> 00:09:39,300
insecure arm carrier pigeons are

00:09:37,170 --> 00:09:41,640
insecure male cell phone everything is

00:09:39,300 --> 00:09:46,980
pretty much insecure until you establish

00:09:41,640 --> 00:09:49,200
a secure channel so will you sacrifice

00:09:46,980 --> 00:09:50,520
do this you can use cryptography to make

00:09:49,200 --> 00:09:53,670
secure channels like we do it all the

00:09:50,520 --> 00:09:57,270
time with HTTPS but since a problem here

00:09:53,670 --> 00:09:59,550
is that the internet might not be

00:09:57,270 --> 00:10:01,140
available in Syria or like in this

00:09:59,550 --> 00:10:02,580
particular case might not be available

00:10:01,140 --> 00:10:06,330
because it's controlled by one of the

00:10:02,580 --> 00:10:08,610
people we are fighting we will have to

00:10:06,330 --> 00:10:11,010
go to other means so the integral

00:10:08,610 --> 00:10:13,620
channel might be our carrier pigeons or

00:10:11,010 --> 00:10:17,880
USB sticks or abusive networks of

00:10:13,620 --> 00:10:19,920
whatever so to get started with

00:10:17,880 --> 00:10:20,970
cryptography cryptography in

00:10:19,920 --> 00:10:23,670
cryptography we have something called

00:10:20,970 --> 00:10:25,530
ciphers and services like the algorithms

00:10:23,670 --> 00:10:27,480
we use to do encryption and decryption

00:10:25,530 --> 00:10:29,370
and it's defined like this where we have

00:10:27,480 --> 00:10:31,290
a encryption function which takes a

00:10:29,370 --> 00:10:34,650
message the plaintext recalled and

00:10:31,290 --> 00:10:36,420
outputs a ciphertext you also have a

00:10:34,650 --> 00:10:38,100
decryption function which takes your

00:10:36,420 --> 00:10:39,959
cyber text and makes it back into a

00:10:38,100 --> 00:10:41,010
plain text and then you have some

00:10:39,959 --> 00:10:43,230
parameters and some of them might be

00:10:41,010 --> 00:10:45,330
public like which large time number

00:10:43,230 --> 00:10:47,990
using and some of them might be secret

00:10:45,330 --> 00:10:51,839
like what's the key that we're using to

00:10:47,990 --> 00:10:53,440
encrypt with so let's build our own

00:10:51,839 --> 00:10:58,000
search first cipher

00:10:53,440 --> 00:10:59,740
and then so when you talk about size

00:10:58,000 --> 00:11:01,060
that you talked about how much

00:10:59,740 --> 00:11:02,650
compensation of power do you need to

00:11:01,060 --> 00:11:04,270
crack the cipher like who is your

00:11:02,650 --> 00:11:07,690
adversary and this life we can build

00:11:04,270 --> 00:11:10,480
here has a thread model that says at the

00:11:07,690 --> 00:11:12,670
seven fourth grader can break it so you

00:11:10,480 --> 00:11:14,650
might be able to use it for sending

00:11:12,670 --> 00:11:16,560
notes in class you might be able to use

00:11:14,650 --> 00:11:19,120
to encrypt Christmas shopping list or

00:11:16,560 --> 00:11:27,070
you might be able to use it to command

00:11:19,120 --> 00:11:29,530
legions across the Roman Empire so um so

00:11:27,070 --> 00:11:32,050
this cipher was invented by julius

00:11:29,530 --> 00:11:34,930
caesar and he used it 2,000 years ago to

00:11:32,050 --> 00:11:36,880
send military commands across the Roman

00:11:34,930 --> 00:11:38,890
Empire and it's actually very simple you

00:11:36,880 --> 00:11:41,770
might have invented this cipher yourself

00:11:38,890 --> 00:11:43,240
at some point it's called Caesar cipher

00:11:41,770 --> 00:11:45,850
it's also called a shift size and a

00:11:43,240 --> 00:11:48,010
rotation siphon and what you do is that

00:11:45,850 --> 00:11:50,650
you take the alphabet and then if you

00:11:48,010 --> 00:11:53,200
want to write a you shift the alphabet

00:11:50,650 --> 00:11:54,730
over and you might write C so Caesar he

00:11:53,200 --> 00:11:57,280
used the number three he shifted the

00:11:54,730 --> 00:12:00,100
whole alphabet by three letters and this

00:11:57,280 --> 00:12:02,590
is actually the whole implementation for

00:12:00,100 --> 00:12:04,390
doing a CSS eyes on you can see here

00:12:02,590 --> 00:12:05,770
that the encryption function takes in a

00:12:04,390 --> 00:12:08,350
plain text the plain text in this case

00:12:05,770 --> 00:12:11,740
has to be a note buffer I'll explain

00:12:08,350 --> 00:12:13,870
what a buffer is just a minute then it

00:12:11,740 --> 00:12:17,620
takes every single pipe in a buffer and

00:12:13,870 --> 00:12:20,320
it ships is over but the thing is with

00:12:17,620 --> 00:12:24,880
bites is that they can only be values

00:12:20,320 --> 00:12:27,880
between 0 and 255 so what happens when

00:12:24,880 --> 00:12:30,190
we get to the last slide and we add 3 to

00:12:27,880 --> 00:12:33,580
it then we get to like 258 and that's

00:12:30,190 --> 00:12:34,960
where we use modular arithmetic also

00:12:33,580 --> 00:12:37,660
explain what that is some people call it

00:12:34,960 --> 00:12:39,310
like clockwork arithmetic so that will

00:12:37,660 --> 00:12:41,170
just wrap the whole thing back around so

00:12:39,310 --> 00:12:45,670
if you have 258 that will wrap back

00:12:41,170 --> 00:12:48,580
around and become too well I think you

00:12:45,670 --> 00:12:51,670
can see here so quick intro to modular

00:12:48,580 --> 00:12:53,470
arithmetic um clockwork ability because

00:12:51,670 --> 00:12:55,540
you can do it on a clock a clock is like

00:12:53,470 --> 00:12:58,150
probably the most natural wave way you

00:12:55,540 --> 00:13:00,220
learn modular arithmetic once the

00:12:58,150 --> 00:13:05,020
pattern the pointer error hand goes from

00:13:00,220 --> 00:13:06,950
11 to 12 then from 12-1 then you just

00:13:05,020 --> 00:13:08,720
rolled over from 12-1 over

00:13:06,950 --> 00:13:12,350
natural you also use it when you work

00:13:08,720 --> 00:13:13,940
with some degrees or like time a time of

00:13:12,350 --> 00:13:17,390
course and GPS coordinates like the way

00:13:13,940 --> 00:13:19,100
I finally cracked what module is mistake

00:13:17,390 --> 00:13:21,950
was about was when I was building this

00:13:19,100 --> 00:13:23,510
robot game and when one be once the the

00:13:21,950 --> 00:13:25,250
robots get to the edge of the game I

00:13:23,510 --> 00:13:27,740
want them to go back to the other side

00:13:25,250 --> 00:13:30,050
of the office of the map and that's just

00:13:27,740 --> 00:13:31,940
taking the modular of the ways of the

00:13:30,050 --> 00:13:34,310
map so it automatically always wrap

00:13:31,940 --> 00:13:37,610
around a good way to think about its

00:13:34,310 --> 00:13:40,910
rotation so at the top we have zero if

00:13:37,610 --> 00:13:43,070
you and this um arithmetic we're doing

00:13:40,910 --> 00:13:45,850
here has a period of three so there's

00:13:43,070 --> 00:13:49,610
three values you can have if you take

00:13:45,850 --> 00:13:51,380
3-1 modular three then you get from zero

00:13:49,610 --> 00:13:53,420
minus one then you're down to two and

00:13:51,380 --> 00:13:56,270
every time you take minus one you rotate

00:13:53,420 --> 00:13:58,660
anti-clockwise and the same every time

00:13:56,270 --> 00:14:01,700
you go up one you go clockwise around em

00:13:58,660 --> 00:14:04,280
in JavaScript we have the percentage

00:14:01,700 --> 00:14:06,290
time so a sign and a lot of people call

00:14:04,280 --> 00:14:08,720
that the modulo operator but that's

00:14:06,290 --> 00:14:13,850
wrong it's called the remainder operator

00:14:08,720 --> 00:14:16,520
so they're not exactly the same next

00:14:13,850 --> 00:14:18,560
thing when you do photography you're

00:14:16,520 --> 00:14:21,440
working with binary data all the time so

00:14:18,560 --> 00:14:25,070
you use the office who here knows what a

00:14:21,440 --> 00:14:27,200
buffers okay so good amount of people

00:14:25,070 --> 00:14:30,050
maybe buffers just like a just a brain

00:14:27,200 --> 00:14:31,880
it's just an array arm but it's almost

00:14:30,050 --> 00:14:34,430
it's like the best thing we get to wrong

00:14:31,880 --> 00:14:35,420
memory access in JavaScript so you're

00:14:34,430 --> 00:14:38,260
actually going in and you're

00:14:35,420 --> 00:14:41,480
manipulating individual bytes in memory

00:14:38,260 --> 00:14:44,330
in odis backed by a typed array call you

00:14:41,480 --> 00:14:47,660
in a terrain it can take a bite in

00:14:44,330 --> 00:14:49,070
itself a value from from 755 and its

00:14:47,660 --> 00:14:51,110
default container if you've worked as a

00:14:49,070 --> 00:14:53,030
note you touch pad buffers at some point

00:14:51,110 --> 00:14:55,010
because every time you get a HTTP

00:14:53,030 --> 00:14:56,870
request all the data that comes in is

00:14:55,010 --> 00:14:58,550
wrapped in a buffer so you have to do

00:14:56,870 --> 00:15:00,500
like to string and then you get what's

00:14:58,550 --> 00:15:03,140
the actual contents in there if you work

00:15:00,500 --> 00:15:06,020
with the fs module you get buffers back

00:15:03,140 --> 00:15:08,270
all the time so it's a couple of

00:15:06,020 --> 00:15:09,830
examples of how to do office so the top

00:15:08,270 --> 00:15:12,410
one is just saying a string and

00:15:09,830 --> 00:15:13,790
converting it to a buffer next one you

00:15:12,410 --> 00:15:15,770
we say that we have an array of

00:15:13,790 --> 00:15:18,380
individual bytes we make that a buffer

00:15:15,770 --> 00:15:22,620
and the last one is just allocating a

00:15:18,380 --> 00:15:26,110
fixed size buffer everyone

00:15:22,620 --> 00:15:28,600
so this is the Caesars I of course is

00:15:26,110 --> 00:15:30,340
Jay's conference so I like cats so let's

00:15:28,600 --> 00:15:32,320
take an encrypted and once you encrypt

00:15:30,340 --> 00:15:36,550
this is the value should get down the

00:15:32,320 --> 00:15:38,170
button and you can of course decrypt

00:15:36,550 --> 00:15:41,950
that as well and now I'm going to show

00:15:38,170 --> 00:15:45,100
why the Caesar cipher is so weak so

00:15:41,950 --> 00:15:47,530
we're going to go here and from the

00:15:45,100 --> 00:15:50,170
gutenberg project i downloaded one of my

00:15:47,530 --> 00:15:52,990
favorite books Robinson Crusoe and then

00:15:50,170 --> 00:15:58,360
you can see that it's just over six

00:15:52,990 --> 00:16:00,220
horns 50,000 characters what we're going

00:15:58,360 --> 00:16:03,240
to do is what's called a frequency

00:16:00,220 --> 00:16:05,770
analysis and if you give this encrypted

00:16:03,240 --> 00:16:07,420
piece of text to a fourth grade of what

00:16:05,770 --> 00:16:09,190
they might notice immediately is there's

00:16:07,420 --> 00:16:12,070
a lot of characters like go and gaynor

00:16:09,190 --> 00:16:13,930
again that would be spaces so that's

00:16:12,070 --> 00:16:15,970
really easy to see and even though we

00:16:13,930 --> 00:16:17,950
shifted all the letters over so the the

00:16:15,970 --> 00:16:19,330
texas garbage you can still see if some

00:16:17,950 --> 00:16:21,580
data are occurring more frequently than

00:16:19,330 --> 00:16:23,500
others so if we formalize this and just

00:16:21,580 --> 00:16:28,780
count how many times do we have every

00:16:23,500 --> 00:16:31,570
single bite in the buffer then we get a

00:16:28,780 --> 00:16:34,360
diagram like this so here cheated a bit

00:16:31,570 --> 00:16:36,940
as the blue lines are the unencrypted

00:16:34,360 --> 00:16:38,980
sixth the orange lines are the encrypted

00:16:36,940 --> 00:16:41,380
text and you can see it's just all the

00:16:38,980 --> 00:16:43,810
bass has just been shifted over if you

00:16:41,380 --> 00:16:46,330
count the shift then you get to the

00:16:43,810 --> 00:16:47,530
number three and all thing you could do

00:16:46,330 --> 00:16:49,270
if you didn't like of course you don't

00:16:47,530 --> 00:16:50,620
have the unencrypted takes normally one

00:16:49,270 --> 00:16:52,900
thing you can do is just take like a

00:16:50,620 --> 00:16:54,760
huge dictionary take all the words in

00:16:52,900 --> 00:16:57,330
that count the letters or three bites

00:16:54,760 --> 00:16:59,860
and then do the same kind of thing and

00:16:57,330 --> 00:17:01,690
because of the law of large numbers so

00:16:59,860 --> 00:17:05,160
if you have a lot of data then this

00:17:01,690 --> 00:17:09,210
diagram should be pretty much the same

00:17:05,160 --> 00:17:12,780
soaking broken our first a first cipher

00:17:09,210 --> 00:17:15,850
the the art like the whole signs around

00:17:12,780 --> 00:17:17,980
cryptography and crypto analysis so

00:17:15,850 --> 00:17:24,610
breaking cipher is what's called a

00:17:17,980 --> 00:17:25,780
christology so so you can say that the

00:17:24,610 --> 00:17:27,880
Caesar cipher is essentially just

00:17:25,780 --> 00:17:30,400
security by obscurity and we don't want

00:17:27,880 --> 00:17:32,080
that so we can do better we can actually

00:17:30,400 --> 00:17:34,049
do much better we can do perfectly so

00:17:32,080 --> 00:17:36,149
we're going to do the exercise is a cup

00:17:34,049 --> 00:17:37,710
and it's a perfect cipher that means no

00:17:36,149 --> 00:17:39,899
matter how much computer power you like

00:17:37,710 --> 00:17:41,639
even if you have a computer zazzle

00:17:39,899 --> 00:17:44,190
universe even if your God you can't

00:17:41,639 --> 00:17:46,440
break this cipher it's called the

00:17:44,190 --> 00:17:50,690
one-time pad is I cabrio thighs and bend

00:17:46,440 --> 00:17:53,549
it in 1882 and it was re-discovered in

00:17:50,690 --> 00:17:56,879
1917 and a guy's to the patent out on it

00:17:53,549 --> 00:17:58,649
then and it has a couple of issues the

00:17:56,879 --> 00:18:01,200
keys that he used to encrypt your stuff

00:17:58,649 --> 00:18:03,299
has to be just a long as what you're

00:18:01,200 --> 00:18:05,759
encrypting so that's a bit of a bummer

00:18:03,299 --> 00:18:09,119
if you have given encrypt Robinson

00:18:05,759 --> 00:18:10,739
Crusoe you have a six hard kill by file

00:18:09,119 --> 00:18:13,470
you need a key that six-hour kilobytes

00:18:10,739 --> 00:18:16,139
and how are you going to give six are

00:18:13,470 --> 00:18:18,629
killed by peace to people so it's not

00:18:16,139 --> 00:18:22,200
very usable on you do use it in very

00:18:18,629 --> 00:18:23,879
very rare occasions but in it has nice

00:18:22,200 --> 00:18:27,389
property that you can't break it

00:18:23,879 --> 00:18:31,049
whatsoever and then so here's an example

00:18:27,389 --> 00:18:34,919
of how to use the cipher up its up we

00:18:31,049 --> 00:18:36,389
have one key then we let's just skip

00:18:34,919 --> 00:18:38,639
ahead and then we have the plane tix I

00:18:36,389 --> 00:18:40,379
like I actually like the openstep but

00:18:38,639 --> 00:18:42,539
that's not very popular here at jay's

00:18:40,379 --> 00:18:44,399
conference so let's encrypt that and the

00:18:42,539 --> 00:18:47,429
nice thing about the one-time pad is

00:18:44,399 --> 00:18:49,789
that you can make the text become

00:18:47,429 --> 00:18:52,649
whatever you want so just below key B

00:18:49,789 --> 00:18:54,450
that's someone who thinks they stole a

00:18:52,649 --> 00:18:56,609
key but they actually got the brawn key

00:18:54,450 --> 00:18:58,590
and if you take and decrypt with the key

00:18:56,609 --> 00:19:00,239
be they won't know that the wrong key

00:18:58,590 --> 00:19:02,159
you'll just decrypt and also I like cats

00:19:00,239 --> 00:19:08,909
so that way i have plausible deniability

00:19:02,159 --> 00:19:10,499
and yeah so yeah keys are problematic

00:19:08,909 --> 00:19:12,299
because you have to share them and how

00:19:10,499 --> 00:19:13,830
do you share keys you need a secure

00:19:12,299 --> 00:19:16,259
channel you need some way to tell

00:19:13,830 --> 00:19:19,350
someone securely without anybody else

00:19:16,259 --> 00:19:22,980
know knowing what was the key for this

00:19:19,350 --> 00:19:25,440
this cyber text and the only secure way

00:19:22,980 --> 00:19:27,840
I can think of that you can share these

00:19:25,440 --> 00:19:30,299
kind of keys is like a dark back alley

00:19:27,840 --> 00:19:32,850
but you don't know if an adversary much

00:19:30,299 --> 00:19:37,460
show up and like steal your keys or no

00:19:32,850 --> 00:19:39,059
breaking kneecaps was on how that so

00:19:37,460 --> 00:19:41,039
yeah this problem is called

00:19:39,059 --> 00:19:43,080
bootstrapping trust how do you get to a

00:19:41,039 --> 00:19:45,179
point where you can actually start

00:19:43,080 --> 00:19:46,830
trusting other keys because once you

00:19:45,179 --> 00:19:47,430
have a clear channel you can just start

00:19:46,830 --> 00:19:49,080
exchanging

00:19:47,430 --> 00:19:51,000
keys for other messages on that secure

00:19:49,080 --> 00:19:55,800
channel but the whole issue is just like

00:19:51,000 --> 00:19:57,480
how do we get started so yeah and you

00:19:55,800 --> 00:20:02,580
can trust p1 in internet because the

00:19:57,480 --> 00:20:04,260
Internet is an insecure Channel but in

00:20:02,580 --> 00:20:05,880
that's bringing out a problem because we

00:20:04,260 --> 00:20:07,830
not too concerned about encrypting

00:20:05,880 --> 00:20:10,740
messages we just want them sign so note

00:20:07,830 --> 00:20:13,110
so their chamber proof like could we

00:20:10,740 --> 00:20:15,780
just like put an unfortunate ignore on

00:20:13,110 --> 00:20:18,570
our message so nobody could change the

00:20:15,780 --> 00:20:22,230
message without us knowing about it

00:20:18,570 --> 00:20:25,440
turns out we can so we can use hash

00:20:22,230 --> 00:20:28,500
functions who here has ever built a user

00:20:25,440 --> 00:20:29,910
system to take in passwords okay I

00:20:28,500 --> 00:20:31,410
actually expected pretty much everyone

00:20:29,910 --> 00:20:33,420
to work with like passwords before

00:20:31,410 --> 00:20:35,340
because when you put passwords into the

00:20:33,420 --> 00:20:36,270
database you usually take the password

00:20:35,340 --> 00:20:39,780
and you use something called a hash

00:20:36,270 --> 00:20:41,340
function on it in this particular case

00:20:39,780 --> 00:20:43,290
we are going to use something called

00:20:41,340 --> 00:20:45,120
cryptographic hash functions and have

00:20:43,290 --> 00:20:47,250
functions are matching I mean you need

00:20:45,120 --> 00:20:48,780
you need a PhD in mathematics to just

00:20:47,250 --> 00:20:51,630
understand how they work on a basic

00:20:48,780 --> 00:20:54,030
level so I have no idea but here's a way

00:20:51,630 --> 00:20:55,680
to think about it and hash function is a

00:20:54,030 --> 00:20:57,540
function takes like an arbitrary large

00:20:55,680 --> 00:21:00,600
file so it could be like so pays

00:20:57,540 --> 00:21:03,030
petabytes of data and it compresses into

00:21:00,600 --> 00:21:04,710
like a sign sign sign fingerprint so

00:21:03,030 --> 00:21:07,470
it's pretty much like a fingerprinting

00:21:04,710 --> 00:21:13,050
function and you also called a digest

00:21:07,470 --> 00:21:15,870
function so yeah very very large binary

00:21:13,050 --> 00:21:17,640
things we call block so you can take

00:21:15,870 --> 00:21:19,110
like a flop of whatever size and you can

00:21:17,640 --> 00:21:22,170
hash it down it will always be the same

00:21:19,110 --> 00:21:24,030
size and the nice thing about hash

00:21:22,170 --> 00:21:25,890
function is the hash functions is that

00:21:24,030 --> 00:21:27,510
it's deterministic so every single

00:21:25,890 --> 00:21:31,230
single time it has something you always

00:21:27,510 --> 00:21:33,510
get the same fingerprint so this is how

00:21:31,230 --> 00:21:35,520
you do hashes in node you import the

00:21:33,510 --> 00:21:39,060
crypto module here we use a hash

00:21:35,520 --> 00:21:41,280
function called sha256 that's a secure

00:21:39,060 --> 00:21:43,770
hash function still so you can go use

00:21:41,280 --> 00:21:45,330
that at home you update the hash

00:21:43,770 --> 00:21:47,400
function with whatever data you get in

00:21:45,330 --> 00:21:51,510
and in the end you see called digest and

00:21:47,400 --> 00:21:53,370
you get out your fingerprint so um yeah

00:21:51,510 --> 00:21:55,020
what is this good for and first of all

00:21:53,370 --> 00:21:57,030
as functions have a call properties that

00:21:55,020 --> 00:21:58,560
make them usable to us they are

00:21:57,030 --> 00:22:00,220
deterministic so whatever data give them

00:21:58,560 --> 00:22:03,100
is always going to be

00:22:00,220 --> 00:22:05,140
the same fingerprint the cliq infinitely

00:22:03,100 --> 00:22:06,520
large or like extremely large data and

00:22:05,140 --> 00:22:08,230
they make like a tiny little finger

00:22:06,520 --> 00:22:11,140
print out of it they are what's called

00:22:08,230 --> 00:22:13,150
one way so if you have a fingerprint you

00:22:11,140 --> 00:22:15,250
can never figure out what beta gave you

00:22:13,150 --> 00:22:17,799
that fingerprint without trying out all

00:22:15,250 --> 00:22:20,260
possible data in the universe kind of

00:22:17,799 --> 00:22:22,120
thing and that's also what goes with

00:22:20,260 --> 00:22:24,400
collision resistant like two pieces of

00:22:22,120 --> 00:22:25,870
data should never give the same

00:22:24,400 --> 00:22:28,720
fingerprint because fingerprint should

00:22:25,870 --> 00:22:30,700
be a new unique right so this is all

00:22:28,720 --> 00:22:32,320
like there's theoretic and like hard to

00:22:30,700 --> 00:22:33,789
get respond but so what can we use it

00:22:32,320 --> 00:22:35,230
for in the real world well on the

00:22:33,789 --> 00:22:37,179
internet you can use this for eat eggs

00:22:35,230 --> 00:22:40,230
so eat eggs as a way of identifying your

00:22:37,179 --> 00:22:43,240
data it's a it has to be unique so

00:22:40,230 --> 00:22:44,650
fingerprint is nice red another thing

00:22:43,240 --> 00:22:46,990
you can use this for is what's called

00:22:44,650 --> 00:22:49,539
content addressable storage I'm pretty

00:22:46,990 --> 00:22:52,630
sure all of you use content addressable

00:22:49,539 --> 00:22:54,669
storage on a daily basis you heard about

00:22:52,630 --> 00:22:57,159
gift but it is a content addressable

00:22:54,669 --> 00:22:58,330
storage mechanism every time you commit

00:22:57,159 --> 00:23:00,280
something to get you get out a little

00:22:58,330 --> 00:23:03,429
hash and that's because whatever you put

00:23:00,280 --> 00:23:05,799
into the whenever you put in to get will

00:23:03,429 --> 00:23:09,760
take that hash it and then fingerprinted

00:23:05,799 --> 00:23:12,190
a hash is also commitment what that

00:23:09,760 --> 00:23:15,309
means is that you could take like a

00:23:12,190 --> 00:23:17,830
solution to some parcel or something

00:23:15,309 --> 00:23:19,690
encrypt like hash it and give the hash

00:23:17,830 --> 00:23:21,460
to everyone and they'll know that you

00:23:19,690 --> 00:23:23,440
solve the puzzle and then at a later

00:23:21,460 --> 00:23:25,150
time you could reveal your solution and

00:23:23,440 --> 00:23:27,340
they could verify that you actually use

00:23:25,150 --> 00:23:29,110
the same solution previously possible

00:23:27,340 --> 00:23:32,799
verification uses all the time they're

00:23:29,110 --> 00:23:35,799
in crypto currencies you use it for

00:23:32,799 --> 00:23:37,000
proof of work and then you also use it

00:23:35,799 --> 00:23:38,230
for block chains but I hate the word

00:23:37,000 --> 00:23:40,299
block chains because it's getting

00:23:38,230 --> 00:23:43,059
floated like big data comes loaded so

00:23:40,299 --> 00:23:48,280
the actual scientific works so a block

00:23:43,059 --> 00:23:49,990
chain is a miracle tag and you can also

00:23:48,280 --> 00:23:52,600
use it for silence secrecy so far

00:23:49,990 --> 00:23:54,400
integrity means that you save the hash

00:23:52,600 --> 00:23:56,260
for file and then later when you go to

00:23:54,400 --> 00:23:58,120
read it again you can just hash it and

00:23:56,260 --> 00:24:00,100
shape make sure that nobody has chambers

00:23:58,120 --> 00:24:03,520
wizard and that's exactly what we want

00:24:00,100 --> 00:24:04,750
to do so if a couple has something out

00:24:03,520 --> 00:24:08,110
that this was the first hash function

00:24:04,750 --> 00:24:10,450
I've learned about call md5 but md5 has

00:24:08,110 --> 00:24:12,630
been broken since ours like a toddler so

00:24:10,450 --> 00:24:14,430
don't go using md5

00:24:12,630 --> 00:24:16,800
okay what's the next thing we have this

00:24:14,430 --> 00:24:18,900
edge function called shot.0 oddly broke

00:24:16,800 --> 00:24:20,640
as well stay away from that then we have

00:24:18,900 --> 00:24:23,550
sha-1 and shall one is actually the hash

00:24:20,640 --> 00:24:25,410
function that's using kid however stay

00:24:23,550 --> 00:24:27,060
away from sha-1 because they are

00:24:25,410 --> 00:24:30,270
theoretical attacks it might be broken

00:24:27,060 --> 00:24:32,760
in the next 10 20 years so that's wise

00:24:30,270 --> 00:24:34,650
okay so gift because it's not very like

00:24:32,760 --> 00:24:37,080
10 20 years they have time to fix it and

00:24:34,650 --> 00:24:41,190
it's not very that high value to break a

00:24:37,080 --> 00:24:43,590
hash hash and gift but you might have

00:24:41,190 --> 00:24:47,940
seen all this trouble that's been going

00:24:43,590 --> 00:24:50,940
on recently with them without ssl

00:24:47,940 --> 00:24:52,620
certificates getting out of hand and

00:24:50,940 --> 00:24:55,050
like some of these political authorities

00:24:52,620 --> 00:24:57,800
have been getting threats from Massilia

00:24:55,050 --> 00:25:00,540
and Google and actually one of them the

00:24:57,800 --> 00:25:04,500
Chinese one is going to be banned next

00:25:00,540 --> 00:25:06,780
year so don't going to use sha-1 what

00:25:04,500 --> 00:25:08,700
you can use is the next family of shower

00:25:06,780 --> 00:25:11,100
functions jar to where you have shot 20

00:25:08,700 --> 00:25:12,690
and 50 section should have 512 those are

00:25:11,100 --> 00:25:17,340
both the function are exposed in no

00:25:12,690 --> 00:25:19,590
chairs and you can also use the 1i use

00:25:17,340 --> 00:25:20,670
which is called plate too and we'll see

00:25:19,590 --> 00:25:24,810
how to use plates you in just a minute

00:25:20,670 --> 00:25:26,790
and I'll cured yolks so some people

00:25:24,810 --> 00:25:31,110
might be superstitious and go out and

00:25:26,790 --> 00:25:32,790
get a double play so yeah don't run into

00:25:31,110 --> 00:25:35,130
this guy and actually check in Victoria

00:25:32,790 --> 00:25:37,770
both mt5 and shall see available as

00:25:35,130 --> 00:25:41,100
number plates while sharp thousand five

00:25:37,770 --> 00:25:42,390
hundred 256 and 512 I'm not available so

00:25:41,100 --> 00:25:46,350
some people out there asked to the

00:25:42,390 --> 00:25:47,910
spacious just a little side note once we

00:25:46,350 --> 00:25:49,620
talk about hash functions is that if you

00:25:47,910 --> 00:25:50,760
go and encrypt passwords don't use any

00:25:49,620 --> 00:25:53,760
of the hash function to just talk about

00:25:50,760 --> 00:25:56,090
because they're very easy to paralyze

00:25:53,760 --> 00:25:58,350
and not very good for passwords that are

00:25:56,090 --> 00:26:01,140
specific functions out there the signs

00:25:58,350 --> 00:26:03,150
just for doing password hashing on the

00:26:01,140 --> 00:26:05,010
most recent winner of the hospital part

00:26:03,150 --> 00:26:07,950
word hashing function was the argon to

00:26:05,010 --> 00:26:11,970
function n script has bindings in Java

00:26:07,950 --> 00:26:18,690
as well Kiwi ks2 is billions in no

00:26:11,970 --> 00:26:20,490
Krypton module ok I was going to talk

00:26:18,690 --> 00:26:21,690
about how to do block chain I think you

00:26:20,490 --> 00:26:23,180
might take a bit too much time so I'll

00:26:21,690 --> 00:26:25,180
just skip over that

00:26:23,180 --> 00:26:27,140
so the problem with has is is that

00:26:25,180 --> 00:26:28,220
anyone can compute the hash you don't

00:26:27,140 --> 00:26:30,950
know where the hash came from so if you

00:26:28,220 --> 00:26:32,300
have a source inside of Syria and you

00:26:30,950 --> 00:26:34,340
want to make sure that whatever they're

00:26:32,300 --> 00:26:36,500
saying is actually the same person that

00:26:34,340 --> 00:26:38,480
you thought it was it's reliable it

00:26:36,500 --> 00:26:40,520
doesn't rework to just take the content

00:26:38,480 --> 00:26:42,890
at hash because if someone shoots down

00:26:40,520 --> 00:26:44,990
his carrier pigeon and reads what on the

00:26:42,890 --> 00:26:46,250
what's on the SD card and he doesn't

00:26:44,990 --> 00:26:49,880
like what's on that he just changed it

00:26:46,250 --> 00:26:51,590
hashes she hatches it again and you had

00:26:49,880 --> 00:26:53,750
the integrity still preserved of the

00:26:51,590 --> 00:26:55,640
file but now it was someone else who

00:26:53,750 --> 00:26:58,880
modified whatever you're trying to get

00:26:55,640 --> 00:27:00,760
out of of the people office soon so we

00:26:58,880 --> 00:27:04,790
have to do real world cryptography and

00:27:00,760 --> 00:27:06,680
you have a choice iam they cleared to

00:27:04,790 --> 00:27:09,650
binding to note find something called

00:27:06,680 --> 00:27:11,630
mrs. L you might have heard that openssl

00:27:09,650 --> 00:27:14,210
has has has had a couple of issues in

00:27:11,630 --> 00:27:16,760
the past years because the code call or

00:27:14,210 --> 00:27:18,260
like there's been a lot of bid raden bc

00:27:16,760 --> 00:27:20,060
code that's in this it's pretty hard to

00:27:18,260 --> 00:27:22,520
follow that's why a lot of bucks could

00:27:20,060 --> 00:27:24,800
sneak in but we have an eternity you can

00:27:22,520 --> 00:27:26,540
use something called nakal we stand for

00:27:24,800 --> 00:27:28,730
networking and cryptography library

00:27:26,540 --> 00:27:31,370
which is all implementation very clean

00:27:28,730 --> 00:27:33,890
implementations of very modern crypto

00:27:31,370 --> 00:27:36,800
functions like the plague two functions

00:27:33,890 --> 00:27:38,510
talked about before and you can just dip

00:27:36,800 --> 00:27:41,690
sodium which is my favorite which is a

00:27:38,510 --> 00:27:43,280
derivative neck this is right this is

00:27:41,690 --> 00:27:45,440
how you would go this is module gonna

00:27:43,280 --> 00:27:47,510
stall if you wanted to use sodium it was

00:27:45,440 --> 00:27:50,180
written by one of my friends Matthias

00:27:47,510 --> 00:27:57,050
and it was released just two days ago so

00:27:50,180 --> 00:28:00,560
it's very new so I'm how does tongue if

00:27:57,050 --> 00:28:03,590
we want to make sure that the content

00:28:00,560 --> 00:28:05,360
that was sent out of a waiver was

00:28:03,590 --> 00:28:07,130
actually from the person that follows

00:28:05,360 --> 00:28:08,690
from we can use something called

00:28:07,130 --> 00:28:10,520
asymmetric cryptography H makes

00:28:08,690 --> 00:28:12,320
cryptography is where you have a public

00:28:10,520 --> 00:28:13,820
key and a power key so you're using a

00:28:12,320 --> 00:28:18,350
smoker with all the time as a

00:28:13,820 --> 00:28:20,180
cells based on this when you do get you

00:28:18,350 --> 00:28:21,410
also give your public key to github so

00:28:20,180 --> 00:28:23,360
they can know that you were actually the

00:28:21,410 --> 00:28:26,350
one sending all the file content to

00:28:23,360 --> 00:28:28,340
github once you do a git push and

00:28:26,350 --> 00:28:30,440
sometimes you also call the public key

00:28:28,340 --> 00:28:32,990
the identity because now your name is

00:28:30,440 --> 00:28:34,760
your public key and you call the private

00:28:32,990 --> 00:28:36,850
key this the secret key too because

00:28:34,760 --> 00:28:39,710
she's never going to reveal that

00:28:36,850 --> 00:28:41,420
so if you have someone's public key then

00:28:39,710 --> 00:28:43,310
you can send the messages you can just

00:28:41,420 --> 00:28:45,200
take a message encrypted with the public

00:28:43,310 --> 00:28:47,450
key and you need to have the private key

00:28:45,200 --> 00:28:51,110
to decrypt so that's really nice in the

00:28:47,450 --> 00:28:52,550
way that you know that you can just get

00:28:51,110 --> 00:28:53,870
like public keys there should be public

00:28:52,550 --> 00:28:55,580
anyway so you can just get public keys

00:28:53,870 --> 00:28:58,070
from all your friends and use that to

00:28:55,580 --> 00:28:59,120
send them secret messages he can also do

00:28:58,070 --> 00:29:03,260
another thing which is very common

00:28:59,120 --> 00:29:04,880
suited you can take your pop arm you can

00:29:03,260 --> 00:29:06,950
take your own private key encrypt a

00:29:04,880 --> 00:29:08,540
message and send it out to the world and

00:29:06,950 --> 00:29:10,670
then everyone who has your public key

00:29:08,540 --> 00:29:13,010
can decrypt it but that doesn't make a

00:29:10,670 --> 00:29:14,180
lot of sense because then like what's

00:29:13,010 --> 00:29:20,360
the point of encrypting something with

00:29:14,180 --> 00:29:22,850
if everyone can decrypt it well yeah

00:29:20,360 --> 00:29:25,130
like exactly what you can use it for is

00:29:22,850 --> 00:29:27,770
signatures and these signatures work

00:29:25,130 --> 00:29:32,870
just like in the real world you take

00:29:27,770 --> 00:29:34,940
your file you take your file you hash it

00:29:32,870 --> 00:29:36,170
down you encrypt it with your private

00:29:34,940 --> 00:29:38,420
key and then everyone who has your

00:29:36,170 --> 00:29:40,220
public key they know that you own that

00:29:38,420 --> 00:29:42,200
public key and they can decrypt it and

00:29:40,220 --> 00:29:44,180
see that this was actually a has that

00:29:42,200 --> 00:29:47,000
you encrypted because only you have the

00:29:44,180 --> 00:29:49,430
privacy and this is in cryptography

00:29:47,000 --> 00:29:51,260
lingo called non reputation because

00:29:49,430 --> 00:29:56,150
there's no way to dispute that you were

00:29:51,260 --> 00:29:57,980
the one actually encrypting that file so

00:29:56,150 --> 00:30:01,310
how does the signature work or social

00:29:57,980 --> 00:30:04,310
need a keep am like a profit and private

00:30:01,310 --> 00:30:08,660
key suitors I like this then you have

00:30:04,310 --> 00:30:12,710
your data and then you hash the data and

00:30:08,660 --> 00:30:14,900
then you encrypt it via private key yeah

00:30:12,710 --> 00:30:19,280
i'll just give over this this is quicker

00:30:14,900 --> 00:30:26,510
introduction try to do it with mochi so

00:30:19,280 --> 00:30:29,810
i'll just skip this ok yeah now we have

00:30:26,510 --> 00:30:31,430
time of rooftops you things this is all

00:30:29,810 --> 00:30:35,030
so it's all about cryptographic

00:30:31,430 --> 00:30:36,560
signatures there's still quite a number

00:30:35,030 --> 00:30:38,960
of issues with a virtual and that's why

00:30:36,560 --> 00:30:41,180
I didn't want to publish it over Lisa

00:30:38,960 --> 00:30:43,100
today because this is very sensitive

00:30:41,180 --> 00:30:45,679
software so I want to be very sure that

00:30:43,100 --> 00:30:47,510
what I'm doing is right and that the

00:30:45,679 --> 00:30:49,260
algorithms i'm using i'm actually using

00:30:47,510 --> 00:30:52,410
them in the right way

00:30:49,260 --> 00:30:54,390
but having a mom from like delivering

00:30:52,410 --> 00:30:57,450
content reader so today I've only talked

00:30:54,390 --> 00:30:59,700
about how to take content out of a war

00:30:57,450 --> 00:31:01,470
zone maybe and making sure that the

00:30:59,700 --> 00:31:03,450
person who wrote it is actually who used

00:31:01,470 --> 00:31:06,240
to upload it but what if you're reading

00:31:03,450 --> 00:31:08,100
inside a area where you can't just

00:31:06,240 --> 00:31:10,680
access the public internet then you

00:31:08,100 --> 00:31:13,590
might want to have a app or website that

00:31:10,680 --> 00:31:16,560
can verify the content because if anyone

00:31:13,590 --> 00:31:18,210
is in the middle swabbing out all the

00:31:16,560 --> 00:31:20,250
content for content they like like

00:31:18,210 --> 00:31:22,950
propaganda then you want to make sure

00:31:20,250 --> 00:31:25,760
all you want to be able to tell that it

00:31:22,950 --> 00:31:28,500
was actually swapped out in the middle

00:31:25,760 --> 00:31:30,300
secure communication so like one thing

00:31:28,500 --> 00:31:32,490
is to just sign your data but it's not

00:31:30,300 --> 00:31:35,400
encrypted so I mean anyone could read it

00:31:32,490 --> 00:31:37,710
and in a actual real world whatever

00:31:35,400 --> 00:31:39,630
you're saying might be sensitive so

00:31:37,710 --> 00:31:42,660
actual encryption is something I want to

00:31:39,630 --> 00:31:44,310
build in there too and the problem

00:31:42,660 --> 00:31:45,810
couple problems that you have if you're

00:31:44,310 --> 00:31:48,330
saying something that other people don't

00:31:45,810 --> 00:31:50,520
like is that they might try to send your

00:31:48,330 --> 00:31:52,680
denial of service attack and that's

00:31:50,520 --> 00:31:55,380
becoming a very real threat now google

00:31:52,680 --> 00:31:58,670
has a protocol project shield which is

00:31:55,380 --> 00:32:03,000
actually I aimed at helping journalists

00:31:58,670 --> 00:32:04,770
who are affected by D dasa text there

00:32:03,000 --> 00:32:06,930
might be fake is cell certificate so

00:32:04,770 --> 00:32:10,050
that means that we can really rely on

00:32:06,930 --> 00:32:13,860
HTS oh well we can but if you are up

00:32:10,050 --> 00:32:15,480
against a government adversary then they

00:32:13,860 --> 00:32:17,280
might just go to the certificate

00:32:15,480 --> 00:32:19,620
authority of the guy who makes all the

00:32:17,280 --> 00:32:22,140
cells typical and say hey give us a keys

00:32:19,620 --> 00:32:23,220
and another thing is DNS poisoning which

00:32:22,140 --> 00:32:25,530
is something they've experienced in

00:32:23,220 --> 00:32:27,000
Syria because it is the guy you're

00:32:25,530 --> 00:32:30,080
fighting who's controlling the

00:32:27,000 --> 00:32:33,420
communication medium you're using and

00:32:30,080 --> 00:32:35,700
then we had the very bad guys and then

00:32:33,420 --> 00:32:38,370
the river gets bad guys doesn't matter

00:32:35,700 --> 00:32:39,300
how good your crypto is because they

00:32:38,370 --> 00:32:41,750
might still be able to break your

00:32:39,300 --> 00:32:46,380
kneecaps kind of thing and that's also

00:32:41,750 --> 00:32:48,300
illustrating this XKCD comic so yeah it

00:32:46,380 --> 00:32:50,460
doesn't matter like Dennis just going to

00:32:48,300 --> 00:32:51,570
go and say well we can break the crypto

00:32:50,460 --> 00:32:54,000
so we're just not going to bother

00:32:51,570 --> 00:32:55,430
they'll just go and get you and ya do

00:32:54,000 --> 00:32:59,090
bad things to you

00:32:55,430 --> 00:33:00,530
so I'm not the only one working this

00:32:59,090 --> 00:33:02,840
space there's a lot of projects out

00:33:00,530 --> 00:33:05,960
there working on exactly this stuff the

00:33:02,840 --> 00:33:08,120
block chain stuff if you want to look at

00:33:05,960 --> 00:33:10,220
that called the medal decks there's

00:33:08,120 --> 00:33:11,780
couple projects that do that secure

00:33:10,220 --> 00:33:13,670
scalable is something you that's

00:33:11,780 --> 00:33:16,910
extremely interesting it's a federated

00:33:13,670 --> 00:33:18,650
totally disputed are peer-to-peer social

00:33:16,910 --> 00:33:21,320
network that uses all these scripts

00:33:18,650 --> 00:33:24,170
graphic primitive to make sure that only

00:33:21,320 --> 00:33:25,400
you can write your friends Nova then you

00:33:24,170 --> 00:33:27,320
have of course the bits on stuff you

00:33:25,400 --> 00:33:29,030
have wept on you have mad mccaig who's

00:33:27,320 --> 00:33:31,280
going to play the knife he's made cement

00:33:29,030 --> 00:33:33,500
which is an excellent tool it's like a

00:33:31,280 --> 00:33:36,380
SoundCloud clone but without anyone

00:33:33,500 --> 00:33:38,300
owning it um there's also the excellent

00:33:36,380 --> 00:33:41,180
that project which is my friend my fears

00:33:38,300 --> 00:33:43,160
is working on and Kalevala of friends

00:33:41,180 --> 00:33:45,590
which is for sharing scientific data

00:33:43,160 --> 00:33:49,040
using all this photography and PHP

00:33:45,590 --> 00:33:50,110
signal here so that's what I have to say

00:33:49,040 --> 00:33:54,730
thank you

00:33:50,110 --> 00:33:54,730

YouTube URL: https://www.youtube.com/watch?v=nGDbUIMCMq4


