Title: Michael Rog: Getting 'Up To Speed' with Accelerated Mobile Pages
Publication date: 2017-05-19
Playlist: CSSConf AU 2016
Description: 
	Thank you to Mozilla for making the video recordings possible. 

We've all probably seen discussions about Accelerated Mobile Pages popping up in Twitter, listed in RFPs, or mentioned in job postings. What is "AMP" anyway, and why should we care? AMP is a new approach for building web pages so that they load instantly, and a specification that defines the set of technical functionality we can use to get the job done. The project is backed by Google, Twitter, Vox, and others, and it is rapidly being adopted by publishers across the web. The AMP spec 'forces' us to use techniques like CSS inlining, GPU acceleration, efficient font triggering, and prioritized resource loading... in order to guarantee that our pages meet a baseline level of performance. This talk will provide an introduction to AMP: what the spec is, why we care, and what we need to do to start using it today. Additionally, we'll discuss the best practices that form the foundation of the spec and some lessons we can take from AMP and apply to our general understanding of performance and resource budgeting, even on projects where we can't (or don't want to) embrace AMP right away.
Captions: 
	00:00:06,620 --> 00:00:18,720
howdy this morning obvio dragon okay

00:00:13,889 --> 00:00:22,020
there are some people here I'm extremely

00:00:18,720 --> 00:00:23,910
honored and pleased to be with you it's

00:00:22,020 --> 00:00:27,330
my first time to Australia and so far

00:00:23,910 --> 00:00:29,250
it's been awesome I'm excited to meet

00:00:27,330 --> 00:00:31,890
all of y'all and to learn with you and

00:00:29,250 --> 00:00:34,770
learn from you this week a quick shout

00:00:31,890 --> 00:00:37,559
out to the organizing team word like two

00:00:34,770 --> 00:00:39,570
hours in and I'm already just convinced

00:00:37,559 --> 00:00:40,949
this is the most thoughtfully organized

00:00:39,570 --> 00:00:43,489
and prepared conference that I've ever

00:00:40,949 --> 00:00:46,920
been a part of so then Glenn Catalina

00:00:43,489 --> 00:00:48,449
Craig Jordan Michael everybody about all

00:00:46,920 --> 00:00:54,389
the volunteers let's clap it up for them

00:00:48,449 --> 00:00:56,579
because disease y'all have done very

00:00:54,389 --> 00:01:00,059
well by your community and I'm grateful

00:00:56,579 --> 00:01:03,030
that you have me here i am michael Roget

00:01:00,059 --> 00:01:04,890
this is my email address this is the

00:01:03,030 --> 00:01:06,780
website where after the talk i will put

00:01:04,890 --> 00:01:11,220
all the resources and citations and

00:01:06,780 --> 00:01:12,900
further reading links i do hail from

00:01:11,220 --> 00:01:14,400
Texas the land of bluebonnets and

00:01:12,900 --> 00:01:16,470
barbecue where all the web developers

00:01:14,400 --> 00:01:19,950
have cowboy boots and ride our horses to

00:01:16,470 --> 00:01:23,540
work when I'm not crafting code I like

00:01:19,950 --> 00:01:25,740
crafting cocktails and fancy food and I

00:01:23,540 --> 00:01:27,270
like to swing dance my work out with the

00:01:25,740 --> 00:01:28,680
local circus and I tell you all of this

00:01:27,270 --> 00:01:29,820
so that if you think the talk bombs

00:01:28,680 --> 00:01:32,250
you'll still have a reason to be my

00:01:29,820 --> 00:01:34,350
friend in the coffee break but please do

00:01:32,250 --> 00:01:36,180
check out this website and and my heart

00:01:34,350 --> 00:01:37,830
is broken because we have no QA today

00:01:36,180 --> 00:01:39,300
but I love questions so please if you

00:01:37,830 --> 00:01:40,890
have questions and thoughts about the

00:01:39,300 --> 00:01:42,990
stuff get in touch with me I would love

00:01:40,890 --> 00:01:45,180
to hear from you so we're going to talk

00:01:42,990 --> 00:01:47,430
about accelerated at mobile pages and

00:01:45,180 --> 00:01:48,630
when I think fast I think the be4 rocket

00:01:47,430 --> 00:01:51,360
it's the first rocket ever to take a

00:01:48,630 --> 00:01:53,310
spacecraft up into space and back down

00:01:51,360 --> 00:01:55,500
setting it gently back on the ground

00:01:53,310 --> 00:01:56,700
right side up that same Blue Origin good

00:01:55,500 --> 00:01:59,130
friend of mine works there when I think

00:01:56,700 --> 00:02:01,710
fast that's what I think i think i want

00:01:59,130 --> 00:02:03,600
the mobile web to be rocket fast but

00:02:01,710 --> 00:02:05,460
before we talk about accelerated mobile

00:02:03,600 --> 00:02:06,670
pages we need to address the underlying

00:02:05,460 --> 00:02:09,259
human

00:02:06,670 --> 00:02:11,120
motivation for why we care about making

00:02:09,259 --> 00:02:14,060
things fast and that is the attention is

00:02:11,120 --> 00:02:17,000
the single greatest resource that we can

00:02:14,060 --> 00:02:19,490
possibly ask of someone attention i

00:02:17,000 --> 00:02:21,980
define attention as intent applied over

00:02:19,490 --> 00:02:24,950
time time being really really valuable

00:02:21,980 --> 00:02:27,440
as we all know and because time is

00:02:24,950 --> 00:02:28,940
valuable we need the content that we

00:02:27,440 --> 00:02:31,700
produce the experiences that we produce

00:02:28,940 --> 00:02:34,880
on the web to be fast especially on

00:02:31,700 --> 00:02:36,560
mobile clients in situations where the

00:02:34,880 --> 00:02:40,820
device might not be as powerful as a

00:02:36,560 --> 00:02:42,230
network is not as fast such as you know

00:02:40,820 --> 00:02:44,330
some of the stories that you heard

00:02:42,230 --> 00:02:47,510
earlier from from Ali the mobile web is

00:02:44,330 --> 00:02:49,250
really a sensitive area for performance

00:02:47,510 --> 00:02:52,970
but it's also very important one in four

00:02:49,250 --> 00:02:54,620
Americans only browses the web through

00:02:52,970 --> 00:02:57,290
their mobile device and this as you've

00:02:54,620 --> 00:02:59,420
heard is greater in other parts of the

00:02:57,290 --> 00:03:03,170
world and so we need content on the web

00:02:59,420 --> 00:03:06,260
to be really really fast so picture

00:03:03,170 --> 00:03:08,180
yourself for a moment everybody get

00:03:06,260 --> 00:03:10,130
close your eyes for a second picture

00:03:08,180 --> 00:03:12,440
yourself in your imagination in some

00:03:10,130 --> 00:03:15,079
place where your time is very valuable

00:03:12,440 --> 00:03:16,940
to you you're at a bus stop you're in

00:03:15,079 --> 00:03:18,739
between meetings maybe you have

00:03:16,940 --> 00:03:20,810
definitely not pulled out your phone at

00:03:18,739 --> 00:03:22,489
a red light but somewhere where you have

00:03:20,810 --> 00:03:24,350
only a little bit amount of time and

00:03:22,489 --> 00:03:26,570
someone that you like has posted a

00:03:24,350 --> 00:03:28,549
cool-looking story to that social app

00:03:26,570 --> 00:03:30,980
that you use and you think you'll check

00:03:28,549 --> 00:03:37,190
it out so you give it a click and you

00:03:30,980 --> 00:03:38,750
wait and you wait after a few seconds

00:03:37,190 --> 00:03:40,790
the little progress bar at the top of

00:03:38,750 --> 00:03:42,650
your mobile browser is starting to make

00:03:40,790 --> 00:03:44,030
moves so you have a little bit of hope

00:03:42,650 --> 00:03:46,519
the background maybe changes color

00:03:44,030 --> 00:03:48,470
progress bar inching forward and heart

00:03:46,519 --> 00:03:50,150
from text appears but it's kind of tiny

00:03:48,470 --> 00:03:51,350
you can't read it you know your phone

00:03:50,150 --> 00:03:54,019
might be moving around maybe you're

00:03:51,350 --> 00:03:56,000
walking so if you're starting to read

00:03:54,019 --> 00:03:57,500
this text you know you're you're

00:03:56,000 --> 00:03:59,630
determined all of a sudden the text

00:03:57,500 --> 00:04:01,220
disappears but a second later it

00:03:59,630 --> 00:04:02,450
reappears is a little bit bigger now and

00:04:01,220 --> 00:04:03,859
in a different spontan so you've lost

00:04:02,450 --> 00:04:06,230
your place but again you're determined

00:04:03,859 --> 00:04:08,359
but you're still reading it flickers

00:04:06,230 --> 00:04:09,859
again and then some images start to

00:04:08,359 --> 00:04:12,109
appear and with every image that appears

00:04:09,859 --> 00:04:13,400
the text on the screen gets jostle

00:04:12,109 --> 00:04:14,550
around but you're still trying to read

00:04:13,400 --> 00:04:17,910
you're determined

00:04:14,550 --> 00:04:20,700
an ad appears not just any ad but a full

00:04:17,910 --> 00:04:22,410
view port interstitial ad you know it's

00:04:20,700 --> 00:04:23,910
an ad not because you can see the ad

00:04:22,410 --> 00:04:25,650
that hasn't loaded yet but you see the

00:04:23,910 --> 00:04:29,760
word sponsored content at the top of

00:04:25,650 --> 00:04:31,350
this blank white box right and you're a

00:04:29,760 --> 00:04:33,450
web developer you know where this is

00:04:31,350 --> 00:04:34,650
going the ad script is going to load an

00:04:33,450 --> 00:04:35,790
analytics script is going to load a

00:04:34,650 --> 00:04:37,290
beacon script is going to load a

00:04:35,790 --> 00:04:38,490
platform script is going to load another

00:04:37,290 --> 00:04:40,710
analytics script it's going to load

00:04:38,490 --> 00:04:42,330
another beacon script 50 scripts later

00:04:40,710 --> 00:04:45,030
this is never going to load them so you

00:04:42,330 --> 00:04:46,830
do the only reasonable thing which is in

00:04:45,030 --> 00:04:48,600
a fit of rage you open your task manager

00:04:46,830 --> 00:04:52,530
and you swipe your browser into oblivion

00:04:48,600 --> 00:04:54,870
and you feel defeated raise your hand if

00:04:52,530 --> 00:04:59,340
this situation applies to you on a

00:04:54,870 --> 00:05:02,400
regular basis open your eyes for the

00:04:59,340 --> 00:05:05,460
grand reveal their hands up this is a

00:05:02,400 --> 00:05:07,410
problem it's a big problem after three

00:05:05,460 --> 00:05:09,570
seconds google tells us forty percent of

00:05:07,410 --> 00:05:11,700
your traffic drops off after 10 seconds

00:05:09,570 --> 00:05:13,410
you've lost everyone you've lost one

00:05:11,700 --> 00:05:15,480
hundred percent of your traffic which is

00:05:13,410 --> 00:05:17,820
ironic because the vast majority of web

00:05:15,480 --> 00:05:20,520
pages take more than 10 seconds to load

00:05:17,820 --> 00:05:22,110
on a lot of mobile browsers swathes of

00:05:20,520 --> 00:05:23,700
the internet are not being seen at all

00:05:22,110 --> 00:05:26,610
for lack of resources and lack of

00:05:23,700 --> 00:05:28,919
patience and in between these two two

00:05:26,610 --> 00:05:30,060
data points is just a spectrum of pain

00:05:28,919 --> 00:05:33,419
and anguish because we know that

00:05:30,060 --> 00:05:35,880
engagement is proportional to speed the

00:05:33,419 --> 00:05:39,030
faster our thing is the more engagement

00:05:35,880 --> 00:05:41,970
that we're going to have and so when

00:05:39,030 --> 00:05:44,460
somebody isn't getting your content it's

00:05:41,970 --> 00:05:46,020
a lose lose lose the publisher is going

00:05:44,460 --> 00:05:47,370
to lose right they can't get their

00:05:46,020 --> 00:05:49,470
content to their viewers but they're

00:05:47,370 --> 00:05:50,970
also missing out on on the user

00:05:49,470 --> 00:05:53,610
acquisition advantages and the

00:05:50,970 --> 00:05:55,890
modernization of that content platforms

00:05:53,610 --> 00:05:57,840
lose because a bad experience with an

00:05:55,890 --> 00:06:01,230
embedded page or an embedded experience

00:05:57,840 --> 00:06:03,900
spills over and you know causes bad

00:06:01,230 --> 00:06:06,450
perception in aux sense of the overall

00:06:03,900 --> 00:06:08,940
after the overall platforms so so

00:06:06,450 --> 00:06:11,340
platforms are losing but most of all the

00:06:08,940 --> 00:06:14,160
user is losing their frustrated at best

00:06:11,340 --> 00:06:16,020
they hate you right and at worse they

00:06:14,160 --> 00:06:17,940
hate you and whatever you have asked

00:06:16,020 --> 00:06:23,039
their attention for they didn't get they

00:06:17,940 --> 00:06:26,310
feel defeated and discouraged so what's

00:06:23,039 --> 00:06:28,080
the heart of it this isn't really going

00:06:26,310 --> 00:06:30,210
to be an accelerated mobile pages

00:06:28,080 --> 00:06:33,090
at the heart of it this is actually a

00:06:30,210 --> 00:06:34,800
web performance talk amp is merely the

00:06:33,090 --> 00:06:36,000
vehicle it's the framework that we're

00:06:34,800 --> 00:06:37,860
going to use to talk about web

00:06:36,000 --> 00:06:39,780
performance because it gives us a lot of

00:06:37,860 --> 00:06:41,669
cool web performance out of the box and

00:06:39,780 --> 00:06:43,319
sets a lot of good examples for us and

00:06:41,669 --> 00:06:44,370
that's why amp is relevant and why you

00:06:43,319 --> 00:06:46,889
should be paying attention to this

00:06:44,370 --> 00:06:49,560
project but at the end of the day we

00:06:46,889 --> 00:06:52,590
care more about making things past than

00:06:49,560 --> 00:06:54,120
we do about aunt specifically and so as

00:06:52,590 --> 00:06:55,770
you're listening to this talk I want you

00:06:54,120 --> 00:06:58,680
to get interested in amp but I also hope

00:06:55,770 --> 00:07:00,870
that will take some some pointers from

00:06:58,680 --> 00:07:03,240
amp that we can apply to the web at

00:07:00,870 --> 00:07:07,050
large so we start with this three-point

00:07:03,240 --> 00:07:08,969
premise first the the mobile web depends

00:07:07,050 --> 00:07:12,060
on performance good performance means

00:07:08,969 --> 00:07:15,090
good experiences on the mobile web we

00:07:12,060 --> 00:07:17,400
also have pretty good best practices for

00:07:15,090 --> 00:07:19,620
making things fast and they're getting

00:07:17,400 --> 00:07:22,590
better every day we know how to make the

00:07:19,620 --> 00:07:23,909
web fast and therefore since we know

00:07:22,590 --> 00:07:25,440
that speed is important and we know that

00:07:23,909 --> 00:07:28,259
we can have speed we have the technology

00:07:25,440 --> 00:07:30,779
to have the speed then we also need

00:07:28,259 --> 00:07:34,050
systems for validating when things are

00:07:30,779 --> 00:07:36,900
fast and incentivizing developers taught

00:07:34,050 --> 00:07:40,129
platforms publishers everybody to get on

00:07:36,900 --> 00:07:42,449
board and make the web fast how fast

00:07:40,129 --> 00:07:45,259
well google tells us we really ought to

00:07:42,449 --> 00:07:48,830
shoot to deliver and render

00:07:45,259 --> 00:07:52,919
above-the-fold content in under a second

00:07:48,830 --> 00:07:56,370
now I know what you're thinking you're

00:07:52,919 --> 00:07:59,129
thinking how possibly can I deliver and

00:07:56,370 --> 00:08:01,440
render an experience in under a second

00:07:59,129 --> 00:08:04,289
on a mobile page the vast majority of

00:08:01,440 --> 00:08:07,560
the world still depends on 3g your best

00:08:04,289 --> 00:08:09,150
case round trip on 3g is about 200

00:08:07,560 --> 00:08:10,889
milliseconds that's a fifth of a second

00:08:09,150 --> 00:08:12,659
for the DNS lookup it's a fifth of a

00:08:10,889 --> 00:08:14,550
second for the TCP connection it's a

00:08:12,659 --> 00:08:17,400
fifth of a second for the HTTP request

00:08:14,550 --> 00:08:19,139
right that's just the the network side

00:08:17,400 --> 00:08:21,089
stuff then you're going to spend you

00:08:19,139 --> 00:08:22,889
know if your server can kick back a

00:08:21,089 --> 00:08:24,599
response in a fifth of a second that's

00:08:22,889 --> 00:08:26,879
great and that means you 200

00:08:24,599 --> 00:08:29,849
milliseconds to render everything in an

00:08:26,879 --> 00:08:32,789
already compromised mobile phone browser

00:08:29,849 --> 00:08:35,159
so this is going to be challenging this

00:08:32,789 --> 00:08:37,860
bit the network side stuff we can't talk

00:08:35,159 --> 00:08:39,159
about too much today but the the server

00:08:37,860 --> 00:08:40,569
response on the client side

00:08:39,159 --> 00:08:43,000
during that's where amp is really going

00:08:40,569 --> 00:08:45,029
to help us out and so cue the angelic

00:08:43,000 --> 00:08:47,470
music Google's answer to this is

00:08:45,029 --> 00:08:49,120
accelerated mobile pages accelerant

00:08:47,470 --> 00:08:50,829
mobile pages is Google's answer to this

00:08:49,120 --> 00:08:53,620
premise that we should have systems for

00:08:50,829 --> 00:08:56,860
validating and incentivizing a fast

00:08:53,620 --> 00:08:58,930
mobile web experience so amp is an open

00:08:56,860 --> 00:09:01,629
source projects it's a proof of concept

00:08:58,930 --> 00:09:04,329
it's just over a year old as as an open

00:09:01,629 --> 00:09:05,889
source project and it's backed by some

00:09:04,329 --> 00:09:07,420
platforms and publishers that you may

00:09:05,889 --> 00:09:11,500
have heard of like Google and Twitter

00:09:07,420 --> 00:09:15,250
and WordPress and BBC and and others it

00:09:11,500 --> 00:09:17,139
forces us to use good best practices the

00:09:15,250 --> 00:09:18,279
stuff that you may have heard of and if

00:09:17,139 --> 00:09:20,800
not we're going to put it on your radar

00:09:18,279 --> 00:09:22,889
today stuff like inline CSS and GPU

00:09:20,800 --> 00:09:26,079
acceleration and efficient font loading

00:09:22,889 --> 00:09:27,839
prioritized resource loading and it does

00:09:26,079 --> 00:09:31,500
all these things in order to guarantee

00:09:27,839 --> 00:09:35,250
that our pages meet a baseline level of

00:09:31,500 --> 00:09:37,449
of performance and then underneath that

00:09:35,250 --> 00:09:39,490
Google's going to give us some extra

00:09:37,449 --> 00:09:42,040
machinery for caching and pre-rendering

00:09:39,490 --> 00:09:44,680
and discovering that fast content so

00:09:42,040 --> 00:09:48,550
that we can prefer that content and do

00:09:44,680 --> 00:09:52,180
cool UX stuff with it so amp is a tech

00:09:48,550 --> 00:09:53,800
spec it's a toolset that we should take

00:09:52,180 --> 00:09:56,589
a look at but it's also a business

00:09:53,800 --> 00:09:58,870
opportunity for for board members and

00:09:56,589 --> 00:10:02,290
product managers and you know anyone who

00:09:58,870 --> 00:10:04,480
asks you a paid developer I need one

00:10:02,290 --> 00:10:07,240
more analytics script on our page right

00:10:04,480 --> 00:10:09,819
this is your answer to them to say no we

00:10:07,240 --> 00:10:11,410
shouldn't clunk up our pages with all of

00:10:09,819 --> 00:10:13,959
this stuff there is a better way and

00:10:11,410 --> 00:10:15,459
that better way gives us advantages in a

00:10:13,959 --> 00:10:17,829
business sense in a user acquisition

00:10:15,459 --> 00:10:20,170
sense in a monetization fence so that we

00:10:17,829 --> 00:10:22,509
don't get caught fighting things like

00:10:20,170 --> 00:10:24,579
user acquisition with things like web

00:10:22,509 --> 00:10:25,870
performance and also as I've said it's a

00:10:24,579 --> 00:10:27,579
learning platform it's such a lot of

00:10:25,870 --> 00:10:29,470
good examples it forces us into bad

00:10:27,579 --> 00:10:31,360
habits but it's also a study case that

00:10:29,470 --> 00:10:34,420
we can look at and take some concepts

00:10:31,360 --> 00:10:37,620
out to use whether or not we are going

00:10:34,420 --> 00:10:40,089
to subscribe to the amp spec

00:10:37,620 --> 00:10:41,800
specifically or completely whether we

00:10:40,089 --> 00:10:43,540
want to whether we're able to whether we

00:10:41,800 --> 00:10:45,970
care there's still some good examples to

00:10:43,540 --> 00:10:49,120
be learned so let's take a look at the

00:10:45,970 --> 00:10:51,720
parts of amp amp has three major

00:10:49,120 --> 00:10:53,910
components there's the amp HTML

00:10:51,720 --> 00:10:57,180
the amp gif and the amp cash the amp

00:10:53,910 --> 00:10:59,009
HTML is the set of HTML elements native

00:10:57,180 --> 00:11:01,649
elements and some custom elements that

00:10:59,009 --> 00:11:05,610
form the spec and just like you can

00:11:01,649 --> 00:11:07,110
validate HTML you can validate CSS you

00:11:05,610 --> 00:11:10,290
can validate anything that has aspect

00:11:07,110 --> 00:11:13,620
you can validate amp so to validate amp

00:11:10,290 --> 00:11:16,079
means that you are using the stuff that

00:11:13,620 --> 00:11:18,000
amp says you can use and not using the

00:11:16,079 --> 00:11:20,370
stuff that amp says you can't use and so

00:11:18,000 --> 00:11:22,529
it's just plain Jane HTML with a little

00:11:20,370 --> 00:11:24,750
bit of sugar then we've got the amp j/s

00:11:22,529 --> 00:11:26,689
and this is the JavaScript library that

00:11:24,750 --> 00:11:28,920
you'll include that will sort of

00:11:26,689 --> 00:11:31,079
validate an enforced respect but also

00:11:28,920 --> 00:11:34,079
bring it to life instantiate all these

00:11:31,079 --> 00:11:35,759
components and supercharge your amp HTML

00:11:34,079 --> 00:11:38,250
and then we've got the amp cache which

00:11:35,759 --> 00:11:41,629
is going to do some some network side

00:11:38,250 --> 00:11:45,329
stuff for us so again we're addressing

00:11:41,629 --> 00:11:47,220
the latter part of this one is crucial

00:11:45,329 --> 00:11:49,410
valuable one second in which we're

00:11:47,220 --> 00:11:51,569
rendering stuff we want fast server side

00:11:49,410 --> 00:11:53,790
response and then we want fast client

00:11:51,569 --> 00:11:56,250
side rendering so will first look at the

00:11:53,790 --> 00:11:58,920
ant HTML it looks you know if you to

00:11:56,250 --> 00:12:01,800
write an amp HTML document is is not a

00:11:58,920 --> 00:12:03,420
no great feat it looks like regular HTML

00:12:01,800 --> 00:12:05,129
that you're used to seeing it's got the

00:12:03,420 --> 00:12:09,000
HTML doc types they're up at the top

00:12:05,129 --> 00:12:11,069
it's got a special attribute on the HTML

00:12:09,000 --> 00:12:13,439
tag to amp attribute or if you're

00:12:11,069 --> 00:12:15,660
feeling frisky you can use the lightning

00:12:13,439 --> 00:12:17,819
both emoji and that's not a joke you can

00:12:15,660 --> 00:12:21,689
actually use the lightning bolt in your

00:12:17,819 --> 00:12:24,660
HTML code it's you've got to be using

00:12:21,689 --> 00:12:26,519
utf-8 encoding because it's fast and

00:12:24,660 --> 00:12:28,019
it's consistent and you don't need me to

00:12:26,519 --> 00:12:30,480
tell you that because you're already use

00:12:28,019 --> 00:12:33,050
a utf-8 everywhere you need a canonical

00:12:30,480 --> 00:12:35,189
link because in some cases you will have

00:12:33,050 --> 00:12:37,230
your normal web page and then you'll

00:12:35,189 --> 00:12:38,879
have the amp version of that web page

00:12:37,230 --> 00:12:41,610
and so you need a canonical reference

00:12:38,879 --> 00:12:44,819
back to the primary page whether or not

00:12:41,610 --> 00:12:46,379
the ant page is canonical you need that

00:12:44,819 --> 00:12:51,420
link in there and then of course we're

00:12:46,379 --> 00:12:52,889
including the amp j/s from the CDN so

00:12:51,420 --> 00:12:54,480
we're including it from Google's very

00:12:52,889 --> 00:12:58,759
fast and this will be the only script

00:12:54,480 --> 00:13:01,529
that is on your page is the amp script

00:12:58,759 --> 00:13:03,540
some structured data that takes the form

00:13:01,529 --> 00:13:04,410
of a script like your json-ld is allowed

00:13:03,540 --> 00:13:08,040
but you're not going to

00:13:04,410 --> 00:13:10,410
any user authored scripts then you'll

00:13:08,040 --> 00:13:13,199
have your styles and you start off with

00:13:10,410 --> 00:13:15,209
the amp boilerplate styles and this is

00:13:13,199 --> 00:13:17,879
kind of in flux it's subject to change a

00:13:15,209 --> 00:13:20,399
little bit but right now the the purpose

00:13:17,879 --> 00:13:22,350
of it is to to help prevent that flash

00:13:20,399 --> 00:13:24,480
of unstyled content so it's waiting on

00:13:22,350 --> 00:13:27,089
the jas to say this page is ready and

00:13:24,480 --> 00:13:28,649
then it's nicely revealing that page to

00:13:27,089 --> 00:13:30,720
the user and of course there's no script

00:13:28,649 --> 00:13:32,430
fall back for that and then we have your

00:13:30,720 --> 00:13:34,139
custom styles and this is where you get

00:13:32,430 --> 00:13:37,110
to write your CSS and you can write just

00:13:34,139 --> 00:13:38,970
about anything you you have to use

00:13:37,110 --> 00:13:42,000
simple selectors but you can write your

00:13:38,970 --> 00:13:43,680
your custom styles and then of course

00:13:42,000 --> 00:13:45,720
you have your body and in the body you

00:13:43,680 --> 00:13:48,629
have most of your normal you know

00:13:45,720 --> 00:13:51,779
content your paragraphs your lists your

00:13:48,629 --> 00:13:54,720
headings but in you have some custom

00:13:51,779 --> 00:13:56,910
elements that amp has substituted in for

00:13:54,720 --> 00:13:58,920
some HTML elements for example in place

00:13:56,910 --> 00:14:02,339
of a regular image tag you'll have an

00:13:58,920 --> 00:14:05,550
amp image tag and the reason that amp

00:14:02,339 --> 00:14:07,529
does this is so that amp can the jas can

00:14:05,550 --> 00:14:09,720
have better control over the rendering

00:14:07,529 --> 00:14:12,240
process so there's some cases where

00:14:09,720 --> 00:14:14,730
you'll just use an ant element in place

00:14:12,240 --> 00:14:18,180
of your normal vanilla element but of

00:14:14,730 --> 00:14:21,329
course it is still just HTML and so then

00:14:18,180 --> 00:14:24,149
we animate this we bring it to life with

00:14:21,329 --> 00:14:25,680
the amp jas the amp j s is going to

00:14:24,149 --> 00:14:27,569
enforce that spec it's going to keep us

00:14:25,680 --> 00:14:29,940
using those good practices it'll also

00:14:27,569 --> 00:14:31,220
provide some dev tools so if you have a

00:14:29,940 --> 00:14:34,680
[Music]

00:14:31,220 --> 00:14:37,259
an amp page and you tack on development

00:14:34,680 --> 00:14:39,420
equals one to the URL then you get nice

00:14:37,259 --> 00:14:42,389
logging out to your browser console it's

00:14:39,420 --> 00:14:44,699
pretty cool and then the amp jf does the

00:14:42,389 --> 00:14:47,009
magic so what magic does it do well

00:14:44,699 --> 00:14:48,809
async everywhere that's very important

00:14:47,009 --> 00:14:50,579
it makes sure that all the scripts and

00:14:48,809 --> 00:14:52,649
anything that gets loaded on that page

00:14:50,579 --> 00:14:55,259
happens asynchronously so that it can't

00:14:52,649 --> 00:14:58,589
clog up the rendered chain it's also

00:14:55,259 --> 00:15:00,480
going to handle some dns pre connecting

00:14:58,589 --> 00:15:04,230
for you so if amp see is a component

00:15:00,480 --> 00:15:06,809
like say a twitter in bed or you know a

00:15:04,230 --> 00:15:08,279
SoundCloud in bed where it knows that

00:15:06,809 --> 00:15:10,709
something is going to need to eventually

00:15:08,279 --> 00:15:13,800
be loading from a third party it can pre

00:15:10,709 --> 00:15:14,610
pre fetch that DMF so that you don't

00:15:13,800 --> 00:15:16,990
have to do that

00:15:14,610 --> 00:15:19,570
right when the user is trying to

00:15:16,990 --> 00:15:21,370
interact with that content it speeds up

00:15:19,570 --> 00:15:24,310
the network interactions a little bit

00:15:21,370 --> 00:15:27,310
for you it provides a static layout

00:15:24,310 --> 00:15:30,430
engine which means that because in your

00:15:27,310 --> 00:15:33,010
amp you will have your amp HTML you will

00:15:30,430 --> 00:15:35,140
have provided the specific widths and

00:15:33,010 --> 00:15:36,940
Heights and aspect ratios of all of your

00:15:35,140 --> 00:15:39,280
elements the layout is going to be

00:15:36,940 --> 00:15:41,770
independent from any media or content

00:15:39,280 --> 00:15:44,080
that needs to get loaded that means that

00:15:41,770 --> 00:15:46,660
this layout can be determined only from

00:15:44,080 --> 00:15:48,310
the HTML and it's immediately ready when

00:15:46,660 --> 00:15:51,040
the HTML loads the page you don't

00:15:48,310 --> 00:15:52,870
actually have to to load anything from a

00:15:51,040 --> 00:15:55,600
third party in order for that page to be

00:15:52,870 --> 00:15:57,580
ready for a customer to look at so

00:15:55,600 --> 00:15:59,500
that's pretty cool and then it also does

00:15:57,580 --> 00:16:01,150
some content prioritization stuff which

00:15:59,500 --> 00:16:03,730
means it's going to take a look at where

00:16:01,150 --> 00:16:05,260
elements are on the page and and what

00:16:03,730 --> 00:16:07,270
the user intent for those elements might

00:16:05,260 --> 00:16:09,310
be and prioritize loading the content

00:16:07,270 --> 00:16:12,490
that a user needs to see or interact

00:16:09,310 --> 00:16:15,430
with first so there are some limitations

00:16:12,490 --> 00:16:17,920
that are imposed by this spec like I

00:16:15,430 --> 00:16:20,740
said you can't use any user authored

00:16:17,920 --> 00:16:22,090
JavaScript there are some some ways

00:16:20,740 --> 00:16:23,710
around that if your think you're

00:16:22,090 --> 00:16:25,840
thinking oh but I want to start with an

00:16:23,710 --> 00:16:27,970
amp page and then spin it up into a

00:16:25,840 --> 00:16:29,680
mobile web app of progressive web app

00:16:27,970 --> 00:16:32,890
yes you can do that but that's for

00:16:29,680 --> 00:16:35,770
another talk in plain Jane amp page no

00:16:32,890 --> 00:16:38,890
user authored JavaScript and you have to

00:16:35,770 --> 00:16:41,680
use some custom tags in in place of some

00:16:38,890 --> 00:16:45,280
normal tags things like like images or

00:16:41,680 --> 00:16:48,970
media video audio stuff like that to

00:16:45,280 --> 00:16:53,290
keep those elements subservient to to

00:16:48,970 --> 00:16:56,890
the amp j/s rendering the process you do

00:16:53,290 --> 00:16:58,600
have to provide the 6th dimensions of

00:16:56,890 --> 00:17:01,020
your media which you should be doing

00:16:58,600 --> 00:17:03,220
anyway but that ensures that no

00:17:01,020 --> 00:17:05,800
third-party components nothing needs to

00:17:03,220 --> 00:17:08,140
be loaded in order for that layout to

00:17:05,800 --> 00:17:09,760
that static way out to render and there

00:17:08,140 --> 00:17:12,700
are stylesheet requirements you only get

00:17:09,760 --> 00:17:14,560
50 kb of styles which is probably plenty

00:17:12,700 --> 00:17:17,080
enough to render a simple page on a

00:17:14,560 --> 00:17:19,420
mobile browser and you have to use

00:17:17,080 --> 00:17:21,070
simple styles to know no star selector

00:17:19,420 --> 00:17:23,020
because

00:17:21,070 --> 00:17:24,550
the performance characteristics aren't

00:17:23,020 --> 00:17:26,170
as predictable so there are some

00:17:24,550 --> 00:17:27,940
limitations that's the bad news but the

00:17:26,170 --> 00:17:30,850
good news is it's guaranteed to be very

00:17:27,940 --> 00:17:32,500
very very very fast and those custom

00:17:30,850 --> 00:17:33,910
components that we talked about aren't

00:17:32,500 --> 00:17:35,350
actually that limiting there's a whole

00:17:33,910 --> 00:17:37,450
library there's probably hundreds of

00:17:35,350 --> 00:17:39,670
them at this point from every every kind

00:17:37,450 --> 00:17:42,460
of media that you can imagine images

00:17:39,670 --> 00:17:45,820
videos audio stuff like analytics or add

00:17:42,460 --> 00:17:47,800
blocks so you can monetize amp content

00:17:45,820 --> 00:17:49,240
which is actually great because it will

00:17:47,800 --> 00:17:51,310
convert better for you on those

00:17:49,240 --> 00:17:52,360
monetization because it's fast and the

00:17:51,310 --> 00:17:54,850
ads aren't getting in the way of the

00:17:52,360 --> 00:17:56,560
user experience interactive elements

00:17:54,850 --> 00:17:58,120
like carousels and accordions with light

00:17:56,560 --> 00:18:01,270
boxes and use notifications and

00:17:58,120 --> 00:18:03,190
third-party embeds like tweets and and

00:18:01,270 --> 00:18:05,170
audio and YouTube videos and stuff like

00:18:03,190 --> 00:18:06,790
that so lots and lots of components I

00:18:05,170 --> 00:18:09,100
don't think you'll find yourself limited

00:18:06,790 --> 00:18:11,290
if you start playing around with amp

00:18:09,100 --> 00:18:13,300
components and of course the the dev

00:18:11,290 --> 00:18:15,520
tools so if you add that development

00:18:13,300 --> 00:18:17,890
equals one onto your url then you get a

00:18:15,520 --> 00:18:20,140
nice validator checklist and some

00:18:17,890 --> 00:18:22,360
informational messages in the browser

00:18:20,140 --> 00:18:25,030
console to help you as you go along and

00:18:22,360 --> 00:18:27,520
then to top it all off we have the amp

00:18:25,030 --> 00:18:31,810
cash and I won't talk too much about the

00:18:27,520 --> 00:18:34,180
amp cash today but it's a proxy cache

00:18:31,810 --> 00:18:35,770
for amp content it's from this internet

00:18:34,180 --> 00:18:38,440
company that you may have heard of that

00:18:35,770 --> 00:18:40,090
is known for doing big fast things so

00:18:38,440 --> 00:18:42,970
the fact that it's backed by Google is

00:18:40,090 --> 00:18:45,940
is quite a powerful statement it means

00:18:42,970 --> 00:18:48,010
that that CDN is pretty much everywhere

00:18:45,940 --> 00:18:49,930
so so we're going to be very reliable

00:18:48,010 --> 00:18:54,840
very fast and it works because aunt

00:18:49,930 --> 00:18:57,190
validates so the the the amp cash can

00:18:54,840 --> 00:19:00,280
can be very reliable and very fast

00:18:57,190 --> 00:19:02,980
because you know because of the amp

00:19:00,280 --> 00:19:04,960
specs that the amp HTML is the only

00:19:02,980 --> 00:19:07,090
thing that has to load in order for that

00:19:04,960 --> 00:19:08,560
page to get rendered you know that

00:19:07,090 --> 00:19:10,750
nothing is going to break by running

00:19:08,560 --> 00:19:12,580
this page through a CDN and what that

00:19:10,750 --> 00:19:14,680
means is that when you're spinning up a

00:19:12,580 --> 00:19:17,200
page in a context where URL isn't really

00:19:14,680 --> 00:19:18,970
important like in an iframe or in the

00:19:17,200 --> 00:19:20,530
web view of an app like you know Twitter

00:19:18,970 --> 00:19:23,770
you click the link in an annual

00:19:20,530 --> 00:19:25,780
some some web chrome anywhere that aURL

00:19:23,770 --> 00:19:28,180
being pretty isn't so important you can

00:19:25,780 --> 00:19:31,330
load that page from the CDN and then you

00:19:28,180 --> 00:19:33,940
can leverage a lot of pre caching and

00:19:31,330 --> 00:19:36,460
pre-rendering and prefetching stuff that

00:19:33,940 --> 00:19:38,470
amp gives you for free and that is going

00:19:36,460 --> 00:19:40,860
to enable the incentives that we talked

00:19:38,470 --> 00:19:43,480
about because we know that we can

00:19:40,860 --> 00:19:45,940
discover and access content that is

00:19:43,480 --> 00:19:48,220
guaranteed to be fast we can create

00:19:45,940 --> 00:19:51,040
special experiences around that content

00:19:48,220 --> 00:19:55,060
which incentivizes people to use it so

00:19:51,040 --> 00:19:56,680
those are the three pieces of amp and if

00:19:55,060 --> 00:19:59,350
you want to see what its what it looks

00:19:56,680 --> 00:20:00,940
like in practice you could actually do

00:19:59,350 --> 00:20:02,470
something as simple as a google search

00:20:00,940 --> 00:20:05,170
on your phone for something maybe

00:20:02,470 --> 00:20:07,810
newsworthy and when you search you'll

00:20:05,170 --> 00:20:09,730
see this kind of carousel of news

00:20:07,810 --> 00:20:11,770
stories that pops up the top and they

00:20:09,730 --> 00:20:13,330
have little amp logo on them and when

00:20:11,770 --> 00:20:15,100
you click them they come up

00:20:13,330 --> 00:20:16,510
instantaneously it's amazing and not

00:20:15,100 --> 00:20:18,310
only does the first page load

00:20:16,510 --> 00:20:19,840
instantaneously but you can swipe

00:20:18,310 --> 00:20:21,700
through that carosone see all of the

00:20:19,840 --> 00:20:23,860
pages that were in that top stories

00:20:21,700 --> 00:20:27,510
carousel and they all load pretty much

00:20:23,860 --> 00:20:31,210
immediately which is pretty impressive

00:20:27,510 --> 00:20:33,640
so how does this work how are we able to

00:20:31,210 --> 00:20:35,770
achieve that kind of immediate loading

00:20:33,640 --> 00:20:37,630
performance so here's we're going to

00:20:35,770 --> 00:20:42,850
talk about some of the underlying design

00:20:37,630 --> 00:20:44,950
decisions behind amp and we're going to

00:20:42,850 --> 00:20:46,330
talk about how this makes aunt fast but

00:20:44,950 --> 00:20:48,430
also again in the back of your head I

00:20:46,330 --> 00:20:49,780
want you to be thinking how can I take

00:20:48,430 --> 00:20:52,480
these examples of these best practices

00:20:49,780 --> 00:20:55,120
and make use of them whether I care

00:20:52,480 --> 00:20:58,510
about amp or not so stuff we'll start

00:20:55,120 --> 00:21:00,550
with with efficient font loading so you

00:20:58,510 --> 00:21:02,620
know the normal browser of your typical

00:21:00,550 --> 00:21:04,450
normal browser behavior on a typical

00:21:02,620 --> 00:21:06,220
page is you're going to download all the

00:21:04,450 --> 00:21:07,480
styles and apply all the files and

00:21:06,220 --> 00:21:08,740
download all the scripts and run all the

00:21:07,480 --> 00:21:11,080
scripts and maybe the script download

00:21:08,740 --> 00:21:14,020
some more files and so after all of the

00:21:11,080 --> 00:21:16,030
styles have been applied then the page

00:21:14,020 --> 00:21:18,850
is rendered and at the first moment

00:21:16,030 --> 00:21:21,430
where a web font could be used because

00:21:18,850 --> 00:21:23,740
the page is being rendered that's when

00:21:21,430 --> 00:21:25,810
that web font gets downloaded so very

00:21:23,740 --> 00:21:28,690
very frequently we have a lot of assets

00:21:25,810 --> 00:21:31,330
in the critical path to to rendering

00:21:28,690 --> 00:21:32,450
something like a web font so amp keeps

00:21:31,330 --> 00:21:34,310
that could

00:21:32,450 --> 00:21:36,080
go pass clear and it does that by a

00:21:34,310 --> 00:21:38,990
sinking all the scripts and by forcing

00:21:36,080 --> 00:21:40,850
us to use inline styles and it makes

00:21:38,990 --> 00:21:43,460
sure that media gets loaded you know

00:21:40,850 --> 00:21:45,530
pictures and videos gets loaded later in

00:21:43,460 --> 00:21:48,110
the render process than a web font that

00:21:45,530 --> 00:21:50,210
I need for above-the-fold content so

00:21:48,110 --> 00:21:52,510
this is a bonus not only to actual

00:21:50,210 --> 00:21:54,800
performance but to perceived performance

00:21:52,510 --> 00:21:57,500
because the user isn't seeing those

00:21:54,800 --> 00:22:00,400
jitters and flickers they just get a

00:21:57,500 --> 00:22:03,500
nice page presented to them relatively

00:22:00,400 --> 00:22:06,050
instantaneously and so in amp you get

00:22:03,500 --> 00:22:08,150
this for free but if you can't or don't

00:22:06,050 --> 00:22:10,580
want to be subscribing to the amp

00:22:08,150 --> 00:22:15,070
standard you can still differ and

00:22:10,580 --> 00:22:17,780
discard unneeded styles of fur for later

00:22:15,070 --> 00:22:20,090
also the inline CSS makes a big

00:22:17,780 --> 00:22:22,910
difference so in amp you know you have

00:22:20,090 --> 00:22:25,610
this 50 kb block of styles that you can

00:22:22,910 --> 00:22:29,390
add to a page which should be plenty but

00:22:25,610 --> 00:22:31,340
maybe you're not using amp maybe you're

00:22:29,390 --> 00:22:33,860
just designing a responsive web page

00:22:31,340 --> 00:22:37,280
well you don't necessarily want to

00:22:33,860 --> 00:22:39,650
inline all your styles because we do

00:22:37,280 --> 00:22:42,170
want the the HTML file to be reasonable

00:22:39,650 --> 00:22:43,850
and manageable and download quickly but

00:22:42,170 --> 00:22:46,700
we want to prioritize rendering above

00:22:43,850 --> 00:22:48,380
the fold content and so for anything I

00:22:46,700 --> 00:22:50,120
need styles that are important we want

00:22:48,380 --> 00:22:52,130
those to come across the wire probably

00:22:50,120 --> 00:22:55,130
with the HTML so that they can be

00:22:52,130 --> 00:22:56,780
rendered very quickly when the HTML file

00:22:55,130 --> 00:22:59,000
is downloaded so there are some tools

00:22:56,780 --> 00:23:01,670
out there to help you do this anybody

00:22:59,000 --> 00:23:03,020
heard of critical critical CSS so

00:23:01,670 --> 00:23:04,640
critical is this nifty tool it's a

00:23:03,020 --> 00:23:07,130
command line tool but it runs in Gulf

00:23:04,640 --> 00:23:10,460
and grunting and all of your task

00:23:07,130 --> 00:23:12,290
runners and it'll actually super cool it

00:23:10,460 --> 00:23:15,080
spins up your page and a phantom browser

00:23:12,290 --> 00:23:17,450
renders the page figures out what is

00:23:15,080 --> 00:23:18,980
going to be above the fold pulls out all

00:23:17,450 --> 00:23:21,320
the file rules that are necessary for

00:23:18,980 --> 00:23:23,420
rendering that stuff and generates you a

00:23:21,320 --> 00:23:26,480
little CSS snippet that you can inline

00:23:23,420 --> 00:23:28,190
with an HTML file then you can defer all

00:23:26,480 --> 00:23:30,350
the rest of the styles to the very very

00:23:28,190 --> 00:23:34,190
end of the the render process using

00:23:30,350 --> 00:23:37,100
something like load CSS the static

00:23:34,190 --> 00:23:39,830
layout also plays largely into making

00:23:37,100 --> 00:23:41,990
amp fast the fact that amp knows the

00:23:39,830 --> 00:23:44,450
dimensions of a thing without needing to

00:23:41,990 --> 00:23:46,340
to load whatever media or component is

00:23:44,450 --> 00:23:50,240
going into that block makes it very very

00:23:46,340 --> 00:23:52,550
quick for that first render so you have

00:23:50,240 --> 00:23:55,610
to provide an amp with the price of your

00:23:52,550 --> 00:23:57,620
your blocks responsive elements are okay

00:23:55,610 --> 00:23:59,690
too there's an attribute that takes that

00:23:57,620 --> 00:24:01,070
width and height and assumes that it's

00:23:59,690 --> 00:24:05,210
going to be responses but key to the

00:24:01,070 --> 00:24:08,390
aspect ratio and so you're locked into

00:24:05,210 --> 00:24:09,980
that size until a user expresses intent

00:24:08,390 --> 00:24:11,990
and then once the user interacts with

00:24:09,980 --> 00:24:14,030
the thing then you can allow that

00:24:11,990 --> 00:24:16,520
component to resize itself or scroll or

00:24:14,030 --> 00:24:19,160
whatever and so you can be doing that

00:24:16,520 --> 00:24:21,050
too if you're not already passing sizes

00:24:19,160 --> 00:24:22,190
of your embed in your images that's a

00:24:21,050 --> 00:24:24,320
thing to consider doing because it's

00:24:22,190 --> 00:24:27,500
really going to speed up that that very

00:24:24,320 --> 00:24:30,170
first first impression render that you

00:24:27,500 --> 00:24:31,940
get content prioritization is a thing

00:24:30,170 --> 00:24:34,730
that an amps you get for free just like

00:24:31,940 --> 00:24:37,309
above the fold styles are important so

00:24:34,730 --> 00:24:39,080
too above the fold media is more

00:24:37,309 --> 00:24:41,150
important and image that occurs several

00:24:39,080 --> 00:24:44,300
Scrolls down the page doesn't need to

00:24:41,150 --> 00:24:46,280
come over the wire before components and

00:24:44,300 --> 00:24:48,470
media that are going to be interacted

00:24:46,280 --> 00:24:50,780
with before that and so again amp you

00:24:48,470 --> 00:24:52,580
get this for free amp takes charge of

00:24:50,780 --> 00:24:55,700
the whole rendering process and decides

00:24:52,580 --> 00:24:57,950
when certain media gets downloaded but

00:24:55,700 --> 00:24:59,390
if you're not using amp you too can use

00:24:57,950 --> 00:25:03,440
your own component loaders your own

00:24:59,390 --> 00:25:06,770
image loaders your own methods of you

00:25:03,440 --> 00:25:12,950
know instead of of lazy loading things

00:25:06,770 --> 00:25:17,120
when you need them and that'll vary not

00:25:12,950 --> 00:25:19,130
sorry and that will improve again the

00:25:17,120 --> 00:25:21,740
rendering process to keep your

00:25:19,130 --> 00:25:23,480
experience stuff okay so Dom mutations

00:25:21,740 --> 00:25:25,100
batching this is kind of technical but I

00:25:23,480 --> 00:25:27,260
think it's really cool and amp does it

00:25:25,100 --> 00:25:30,410
again and amp you get it for free the

00:25:27,260 --> 00:25:33,530
general gist is that every time you

00:25:30,410 --> 00:25:36,440
access the Dom the browser is having to

00:25:33,530 --> 00:25:39,050
apply styles and paint things and so

00:25:36,440 --> 00:25:41,030
when we're doing our our CSS animations

00:25:39,050 --> 00:25:43,520
and transitions and effects we want them

00:25:41,030 --> 00:25:46,130
to be happening at that silky smooth 60

00:25:43,520 --> 00:25:48,230
frames a second but every time you know

00:25:46,130 --> 00:25:50,150
in the course of our normal javascript

00:25:48,230 --> 00:25:51,820
in a V we're reading and writing to the

00:25:50,150 --> 00:25:54,070
DOM and we're doing it in no particular

00:25:51,820 --> 00:25:55,840
or maybe we have lots of components on

00:25:54,070 --> 00:25:58,120
the page or lots of developers or

00:25:55,840 --> 00:26:01,810
services doing different stuff right and

00:25:58,120 --> 00:26:03,190
so we're mixing our Dom reads an hour

00:26:01,810 --> 00:26:05,470
Dom rights and that means we're having

00:26:03,190 --> 00:26:07,660
multiple paints in every frame right and

00:26:05,470 --> 00:26:08,890
the more paints we have in the frame an

00:26:07,660 --> 00:26:10,420
animation frame the more work the

00:26:08,890 --> 00:26:11,980
browser has to do and eventually the

00:26:10,420 --> 00:26:14,740
browser says I can't take it anymore I

00:26:11,980 --> 00:26:17,080
can't I've given it all she's got and

00:26:14,740 --> 00:26:18,580
then you know the browser starts

00:26:17,080 --> 00:26:20,650
decreasing your frame rate and so you

00:26:18,580 --> 00:26:22,510
get those janky animations and we don't

00:26:20,650 --> 00:26:25,030
want that it would really be great if we

00:26:22,510 --> 00:26:26,890
could patch together all of our Dom

00:26:25,030 --> 00:26:29,410
reads and all of our Dom rights so that

00:26:26,890 --> 00:26:32,520
we're only paying once per frame you get

00:26:29,410 --> 00:26:34,900
that for free and amp but if you're not

00:26:32,520 --> 00:26:37,840
necessarily using amp there are other

00:26:34,900 --> 00:26:39,160
tools like fast Dom which is from Paul

00:26:37,840 --> 00:26:41,830
Irish and some of the other Google guys

00:26:39,160 --> 00:26:43,930
definitely look into fast um that'll

00:26:41,830 --> 00:26:45,220
help you manage when you're reading and

00:26:43,930 --> 00:26:49,300
writing to the Dom to keep everything

00:26:45,220 --> 00:26:52,450
fast you can consolidate analytics this

00:26:49,300 --> 00:26:54,220
is a really cool aspect of ants because

00:26:52,450 --> 00:26:56,410
amp gives you components for different

00:26:54,220 --> 00:26:58,360
analytics packages and the way that

00:26:56,410 --> 00:26:59,620
works is when you're doing analytics on

00:26:58,360 --> 00:27:02,620
your page you know your Google Analytics

00:26:59,620 --> 00:27:04,750
snippet it's basically just taking some

00:27:02,620 --> 00:27:06,580
properties of your page and then you

00:27:04,750 --> 00:27:09,580
know sending them off of some beacon

00:27:06,580 --> 00:27:12,070
URLs somewhere and so we really don't

00:27:09,580 --> 00:27:14,080
need 50 different scripts to be sending

00:27:12,070 --> 00:27:15,310
analytics to 50 different services not

00:27:14,080 --> 00:27:17,800
that you should have 50 different

00:27:15,310 --> 00:27:19,300
services but what amp does is it

00:27:17,800 --> 00:27:21,070
consolidates all of that so that you can

00:27:19,300 --> 00:27:22,690
measure all that stuff once and then

00:27:21,070 --> 00:27:25,120
report it to several different services

00:27:22,690 --> 00:27:27,550
in a very efficient way and if you're

00:27:25,120 --> 00:27:30,130
not using amp you too can kind of build

00:27:27,550 --> 00:27:32,890
your little analytics switchboard to

00:27:30,130 --> 00:27:34,420
take care of that if having a bunch of

00:27:32,890 --> 00:27:37,750
analytics and beacons on a page is a

00:27:34,420 --> 00:27:39,550
problem that affects you and lastly

00:27:37,750 --> 00:27:42,100
we've got a bunch of pre connecting and

00:27:39,550 --> 00:27:46,320
prefetching and pre-rendering stuff amp

00:27:42,100 --> 00:27:48,400
automates a lot of this for free for you

00:27:46,320 --> 00:27:50,200
pre-rendering means to render content

00:27:48,400 --> 00:27:52,870
before a user actually arrives at that

00:27:50,200 --> 00:27:54,280
content you get it for free with amp but

00:27:52,870 --> 00:27:59,560
if you're not using amp there are other

00:27:54,280 --> 00:28:02,500
ways to to pre-render stuff oh I should

00:27:59,560 --> 00:28:03,530
mention amp does this really cool thing

00:28:02,500 --> 00:28:05,300
where

00:28:03,530 --> 00:28:08,750
you know if if it's going to pre-render

00:28:05,300 --> 00:28:10,160
a page again because it sees the HTML

00:28:08,750 --> 00:28:12,050
and it knows what's on that page and

00:28:10,160 --> 00:28:13,550
knows how to lay out that page it knows

00:28:12,050 --> 00:28:15,590
it doesn't necessarily need to download

00:28:13,550 --> 00:28:16,790
every piece of media to rerender that

00:28:15,590 --> 00:28:19,220
thing in the background that might be

00:28:16,790 --> 00:28:21,590
important and so it'll put placeholders

00:28:19,220 --> 00:28:22,910
in places from some complex elements and

00:28:21,590 --> 00:28:24,680
you can see what that looks like if you

00:28:22,910 --> 00:28:27,470
want to debug it with the special little

00:28:24,680 --> 00:28:30,470
hash on the URL but you too in your own

00:28:27,470 --> 00:28:34,130
pages and apps can be utilizing the same

00:28:30,470 --> 00:28:37,220
sort of of action there's the the link

00:28:34,130 --> 00:28:39,110
rel method of allowing the browser to

00:28:37,220 --> 00:28:42,140
pre connect and pre-rendering prefetch

00:28:39,110 --> 00:28:44,270
some stuff that does have a downside of

00:28:42,140 --> 00:28:47,450
course privacy because you might be

00:28:44,270 --> 00:28:49,760
asking a browser to trigger a view on a

00:28:47,450 --> 00:28:52,100
page the person hasn't actually viewed

00:28:49,760 --> 00:28:53,060
it also can occupy a bunch of CPU and

00:28:52,100 --> 00:28:55,610
memory because we're doing in the

00:28:53,060 --> 00:28:57,350
background and if data is expensive and

00:28:55,610 --> 00:28:58,730
we don't want to be using the users

00:28:57,350 --> 00:29:00,980
bandwidth until they have actually

00:28:58,730 --> 00:29:05,090
interacted with this thing but we can

00:29:00,980 --> 00:29:06,950
use the page visibility API to to tell

00:29:05,090 --> 00:29:08,210
whether a page is actually active or

00:29:06,950 --> 00:29:10,730
whether it's being pre rendered in a

00:29:08,210 --> 00:29:12,140
hidden frame and remember content

00:29:10,730 --> 00:29:14,060
prioritization is really important

00:29:12,140 --> 00:29:16,220
pre-render the stuff that a user is most

00:29:14,060 --> 00:29:19,070
likely to see so I'm going to wrap up

00:29:16,220 --> 00:29:21,050
these are the reasons that amp is very

00:29:19,070 --> 00:29:23,240
fast and there's more of them and i

00:29:21,050 --> 00:29:25,250
encourage you to dial up that github

00:29:23,240 --> 00:29:27,200
page read the documentation really get

00:29:25,250 --> 00:29:28,400
into this stuff you get all of it for

00:29:27,200 --> 00:29:30,320
free with amp but they're great

00:29:28,400 --> 00:29:33,230
practices and examples that you can be

00:29:30,320 --> 00:29:36,140
using in all your stuff so to wrap up

00:29:33,230 --> 00:29:40,190
you're probably asking yourself okay

00:29:36,140 --> 00:29:43,220
this is all cool but why am why amp

00:29:40,190 --> 00:29:45,770
instead of just paying attention to web

00:29:43,220 --> 00:29:47,780
performance right and that's a great

00:29:45,770 --> 00:29:50,180
question and of course amp is Google's

00:29:47,780 --> 00:29:52,700
only answer to the web performance issue

00:29:50,180 --> 00:29:55,310
you know PageSpeed insights you know

00:29:52,700 --> 00:29:57,020
that that even is maybe a minor ranking

00:29:55,310 --> 00:30:00,800
for relevance and some search engines

00:29:57,020 --> 00:30:02,450
right but you're thinking the Great Wall

00:30:00,800 --> 00:30:05,120
of a race of the internet right raise

00:30:02,450 --> 00:30:06,909
your head you played wallaby oh I'm so

00:30:05,120 --> 00:30:09,159
disappointed

00:30:06,909 --> 00:30:11,080
in the Great Wall of a race of the

00:30:09,159 --> 00:30:13,090
internet the hand-tuned site is always

00:30:11,080 --> 00:30:14,950
going to be faster if you are doing all

00:30:13,090 --> 00:30:17,289
of this stuff yourself on your pages it

00:30:14,950 --> 00:30:20,019
is going to it's going to win right but

00:30:17,289 --> 00:30:22,119
amp is always going to come in just a

00:30:20,019 --> 00:30:24,460
very close second and the fact that you

00:30:22,119 --> 00:30:25,779
get all of that for free makes it very

00:30:24,460 --> 00:30:28,330
compelling it's a thing that you can use

00:30:25,779 --> 00:30:30,460
now and like I showed you being able to

00:30:28,330 --> 00:30:32,889
validate and guarantee that content is

00:30:30,460 --> 00:30:34,929
fast also does have platform benefits

00:30:32,889 --> 00:30:36,789
because you can build these experiences

00:30:34,929 --> 00:30:38,559
around them and it has a business case

00:30:36,789 --> 00:30:40,210
right because you as a developer are

00:30:38,559 --> 00:30:42,970
than empowered to show that there is a

00:30:40,210 --> 00:30:46,119
business bottom line advantage to to

00:30:42,970 --> 00:30:47,950
confirming to this spec so I hope that

00:30:46,119 --> 00:30:51,039
I've convinced you that respect that you

00:30:47,950 --> 00:30:53,499
ought to look into it to let you ought

00:30:51,039 --> 00:30:54,700
to add your tool belt I hope that I've

00:30:53,499 --> 00:30:57,340
convinced you that it will empower you

00:30:54,700 --> 00:30:59,470
as a developer to talk to managers a

00:30:57,340 --> 00:31:01,509
good case for web performance and I hope

00:30:59,470 --> 00:31:03,399
I have convinced you that even if you

00:31:01,509 --> 00:31:05,710
are not specifically using the amp

00:31:03,399 --> 00:31:08,320
standard the amp spec it is still a

00:31:05,710 --> 00:31:11,229
great set of best practices for you to

00:31:08,320 --> 00:31:12,279
explore and learn thank you very much

00:31:11,229 --> 00:31:14,919
for your time I look forward to talking

00:31:12,279 --> 00:31:16,179
to you in the break and again please let

00:31:14,919 --> 00:31:19,000
me know if you have any questions or

00:31:16,179 --> 00:31:23,349
thoughts I can't wait to meet you

00:31:19,000 --> 00:31:23,349

YouTube URL: https://www.youtube.com/watch?v=ybQwpqD3VCU


