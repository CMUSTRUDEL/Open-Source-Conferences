Title: Fiona Tay - Bye-Bye Bootstrap Bloat
Publication date: 2015-07-01
Playlist: CSSConf Australia 2015 Talks
Description: 
	Thanks to our friends at SitePoint, Fiona Tay's CSSConf Australia 2015 presentation: Bye-Bye Bootstrap Bloat

http://2015.cssconf.com.au/
https://twitter.com/msfionatay
http://tay.io
Captions: 
	00:00:00,000 --> 00:00:05,810
hi everybody really glad to be here here

00:00:02,790 --> 00:00:10,469
I'm going to talk to you guys about how

00:00:05,810 --> 00:00:15,389
my team has deployed a focal bootstrap

00:00:10,469 --> 00:00:17,580
for our internal site great so here's

00:00:15,389 --> 00:00:21,930
the story of how Airbnb and bootstrap

00:00:17,580 --> 00:00:24,150
began their romance back in 2012 so this

00:00:21,930 --> 00:00:28,050
was the first version of Airbnb back in

00:00:24,150 --> 00:00:31,320
2008 written by an engineer on a couch

00:00:28,050 --> 00:00:34,350
somewhere back in the name was still

00:00:31,320 --> 00:00:36,480
called air bed and breakfast and over

00:00:34,350 --> 00:00:39,570
the over the past six years some the

00:00:36,480 --> 00:00:41,910
site has just grown a lot and this is a

00:00:39,570 --> 00:00:44,850
screenshot from 2012 you can observe

00:00:41,910 --> 00:00:48,200
many elements of that archaic period

00:00:44,850 --> 00:00:52,379
such as browser icons rester buttons

00:00:48,200 --> 00:00:55,850
localized images and tons of custom CSS

00:00:52,379 --> 00:00:59,520
and over time it just grew more and more

00:00:55,850 --> 00:01:03,270
here's a super custom design for this

00:00:59,520 --> 00:01:08,640
site called wish list featuring Ashton

00:01:03,270 --> 00:01:12,210
Kutcher and this is what the CSS look

00:01:08,640 --> 00:01:15,860
like at a point in time not a very proud

00:01:12,210 --> 00:01:19,619
moment for me to be looking at the CSS

00:01:15,860 --> 00:01:22,049
so at this point in 2012 you know my

00:01:19,619 --> 00:01:26,070
team a hora said why don't we use one of

00:01:22,049 --> 00:01:27,930
the CSS frameworks out there because it

00:01:26,070 --> 00:01:31,470
doesn't make sense for us so much custom

00:01:27,930 --> 00:01:34,100
CSS so then we started rolling out o 2

00:01:31,470 --> 00:01:36,840
which was Airbnb flavor bootstrap

00:01:34,100 --> 00:01:39,869
basically just bootstrap with custom

00:01:36,840 --> 00:01:42,630
colors using the inbuilt customizations

00:01:39,869 --> 00:01:45,899
and we call it o 2 which is short from

00:01:42,630 --> 00:01:54,960
oxygen because you can't have Airbnb

00:01:45,899 --> 00:01:58,680
without 02 so here's an example

00:01:54,960 --> 00:02:04,080
yeah we are very punny company for some

00:01:58,680 --> 00:02:06,890
reason so this is what it looked like

00:02:04,080 --> 00:02:09,360
before just having a ton of different

00:02:06,890 --> 00:02:12,540
buttons with inconsistent looks

00:02:09,360 --> 00:02:15,780
different sizes tech treatments button

00:02:12,540 --> 00:02:18,180
pairing and glossiness and afterwards it

00:02:15,780 --> 00:02:22,500
was just nailed down to a set of

00:02:18,180 --> 00:02:24,360
elements set of elements according to

00:02:22,500 --> 00:02:28,380
bootstrap with some of our own spin on

00:02:24,360 --> 00:02:30,390
it from the colors and so this is what

00:02:28,380 --> 00:02:35,330
the site look like after we snap 202 in

00:02:30,390 --> 00:02:38,519
2012 using an icon fun CSS buttons

00:02:35,330 --> 00:02:41,100
getting all the nasty localized raster

00:02:38,519 --> 00:02:44,820
images out and you know having less

00:02:41,100 --> 00:02:48,570
custom CSS and here's another example of

00:02:44,820 --> 00:02:50,160
our search page back in 2012 12 looks

00:02:48,570 --> 00:02:52,260
pretty much the same today with the

00:02:50,160 --> 00:02:55,080
exception of the colors and here's

00:02:52,260 --> 00:02:57,239
another random page called my hosting

00:02:55,080 --> 00:03:03,090
page is in Korean because I just wanted

00:02:57,239 --> 00:03:04,500
to show what looks like in Korean and so

00:03:03,090 --> 00:03:06,540
at that point on butcher worked really

00:03:04,500 --> 00:03:08,730
well for us because we are just so much

00:03:06,540 --> 00:03:11,100
custom CSS he wanted to get rid of and

00:03:08,730 --> 00:03:14,250
it allowed us to have an out-of-the-box

00:03:11,100 --> 00:03:16,380
solution that was consistent a lot for

00:03:14,250 --> 00:03:18,900
rapid development performance and

00:03:16,380 --> 00:03:20,820
reliability and at the time the entire

00:03:18,900 --> 00:03:24,510
team was maybe about 30 developers

00:03:20,820 --> 00:03:26,519
across all the different teams and so

00:03:24,510 --> 00:03:29,010
for one year we focus on rolling this

00:03:26,519 --> 00:03:33,150
out so in in the first quarter of 2012

00:03:29,010 --> 00:03:35,579
we started working on rolling out the

00:03:33,150 --> 00:03:36,840
booking flow then we rolled it out from

00:03:35,579 --> 00:03:39,359
the rest of the site including

00:03:36,840 --> 00:03:41,700
understand alone features and then in

00:03:39,359 --> 00:03:44,760
March 2013 we had rolled out the most of

00:03:41,700 --> 00:03:46,410
the main floor and about them was when I

00:03:44,760 --> 00:03:49,709
actually joined a company and our

00:03:46,410 --> 00:03:54,989
romance with bootstrap kind of came to

00:03:49,709 --> 00:03:56,370
trouble in paradise so if you asked

00:03:54,989 --> 00:03:57,959
anyone today why they don't use

00:03:56,370 --> 00:04:00,150
bootstrap you're probably going to tell

00:03:57,959 --> 00:04:02,400
you one of these reasons and this is

00:04:00,150 --> 00:04:04,220
actually a slightly I put from Harry

00:04:02,400 --> 00:04:05,630
Roberts presentation I heard

00:04:04,220 --> 00:04:11,510
here today so I'm really nervous because

00:04:05,630 --> 00:04:19,340
I'm using his light oh so it's called

00:04:11,510 --> 00:04:20,840
fair you so please don't sue me so the

00:04:19,340 --> 00:04:23,660
reasons why somebody might not like

00:04:20,840 --> 00:04:26,060
putra would be is too bloated it's too

00:04:23,660 --> 00:04:28,390
specialized it's too opinionated and

00:04:26,060 --> 00:04:31,460
basically they just get in your way and

00:04:28,390 --> 00:04:33,410
back on this those are perfectly

00:04:31,460 --> 00:04:35,480
enumerator in the reasons why we chose

00:04:33,410 --> 00:04:38,600
to move away from bootstrap at a point

00:04:35,480 --> 00:04:42,500
in 2013 so here's an example of a page

00:04:38,600 --> 00:04:44,120
that we had the korean page and it

00:04:42,500 --> 00:04:48,620
pretty much contains every bootstrap

00:04:44,120 --> 00:04:51,320
component from the hitter to the fancy

00:04:48,620 --> 00:04:54,440
input dropdowns to all the different

00:04:51,320 --> 00:04:58,600
button colors and pretty much like you

00:04:54,440 --> 00:05:01,310
know everything in the jump back in and

00:04:58,600 --> 00:05:02,960
here's and here's what butcher block

00:05:01,310 --> 00:05:05,690
light at this point tons and tons of

00:05:02,960 --> 00:05:09,919
different components all kinds of drop

00:05:05,690 --> 00:05:12,110
downs and custom jquery components so

00:05:09,919 --> 00:05:15,440
together with design we start working on

00:05:12,110 --> 00:05:18,620
a newer simpler 02 that focused many of

00:05:15,440 --> 00:05:22,970
the elements that we wanted and got rid

00:05:18,620 --> 00:05:24,890
of all the extra stuff and rewriting

00:05:22,970 --> 00:05:27,620
auto for us was a necessary leap of

00:05:24,890 --> 00:05:29,780
faith because forking a code base is

00:05:27,620 --> 00:05:31,550
always a risky proposition but we

00:05:29,780 --> 00:05:34,070
thought it would be better to just come

00:05:31,550 --> 00:05:35,690
down to what we needn't rather than have

00:05:34,070 --> 00:05:39,050
all this extra stuff in the code base

00:05:35,690 --> 00:05:42,590
that would just slowly rot and cause a

00:05:39,050 --> 00:05:47,450
die cost may cause a lot of maintenance

00:05:42,590 --> 00:05:49,550
difficulties and so we rolled this out

00:05:47,450 --> 00:05:53,479
in the course of about a year from the

00:05:49,550 --> 00:05:58,490
beginning of 2013 when i joined to to

00:05:53,479 --> 00:06:01,190
the end of 2013 and so over this process

00:05:58,490 --> 00:06:03,110
we have learned a number of lessons so i

00:06:01,190 --> 00:06:05,390
guess i have a preface this by saying

00:06:03,110 --> 00:06:08,330
that i'm not the world's greatest CSS

00:06:05,390 --> 00:06:10,820
expert my team kind of just came to this

00:06:08,330 --> 00:06:13,340
process because we wanted to fix the CSS

00:06:10,820 --> 00:06:14,969
problem so a lot of this issue's kind of

00:06:13,340 --> 00:06:18,360
just surface over time

00:06:14,969 --> 00:06:20,459
so one example is one of the great

00:06:18,360 --> 00:06:21,869
benefits of this process was being able

00:06:20,459 --> 00:06:23,699
to get away from the bootstrap

00:06:21,869 --> 00:06:26,069
conventions we didn't really work for us

00:06:23,699 --> 00:06:30,269
so I don't know anyone who actually

00:06:26,069 --> 00:06:32,189
likes the bootstrap navbar and I say

00:06:30,269 --> 00:06:35,159
this not as a do like impinge upon

00:06:32,189 --> 00:06:36,809
bootstrap reputation but it's 930 two

00:06:35,159 --> 00:06:38,969
lines with for you to different people

00:06:36,809 --> 00:06:41,939
working on it and it just doesn't really

00:06:38,969 --> 00:06:44,610
work for most of your navigation needs

00:06:41,939 --> 00:06:47,309
unless you want to look you have the

00:06:44,610 --> 00:06:49,589
exact same structure as them and this

00:06:47,309 --> 00:06:51,779
process of rewriting our CSS allowed us

00:06:49,589 --> 00:06:54,449
the flexibility of moving away from the

00:06:51,779 --> 00:06:56,699
bootstrap conventions being able to

00:06:54,449 --> 00:06:59,699
define our own styles and going towards

00:06:56,699 --> 00:07:03,239
a more easier better markup that was

00:06:59,699 --> 00:07:04,799
easier to override but one thing that we

00:07:03,239 --> 00:07:07,469
discovered throughout this process is

00:07:04,799 --> 00:07:10,589
that versioning my UI framework is

00:07:07,469 --> 00:07:12,479
really difficult understatement of the

00:07:10,589 --> 00:07:13,979
year I know it's only 20 it's only March

00:07:12,479 --> 00:07:19,469
but I hope they will remain true to

00:07:13,979 --> 00:07:21,659
December so a lot of it a lot of people

00:07:19,469 --> 00:07:25,469
have complained about how difficult

00:07:21,659 --> 00:07:27,899
bootstrap is to upgrade from version to

00:07:25,469 --> 00:07:30,360
version to like this is a talk that Pam

00:07:27,899 --> 00:07:32,639
lock box gift and title when butch of

00:07:30,360 --> 00:07:36,419
attacks complaining about how difficult

00:07:32,639 --> 00:07:40,050
it was to upgrading kind of Quetta me

00:07:36,419 --> 00:07:41,969
from bootstrap to to which a tree by

00:07:40,050 --> 00:07:45,419
Wasilla this is generally true of all

00:07:41,969 --> 00:07:47,399
CSS frameworks CSS changes often

00:07:45,419 --> 00:07:51,389
manifests and subtle hard to discover

00:07:47,399 --> 00:07:53,819
ways nobody didn't write CSS perfectly

00:07:51,389 --> 00:07:56,369
the first time and you always want to

00:07:53,819 --> 00:07:57,599
make changes to it and being able to

00:07:56,369 --> 00:08:00,059
have your own control over your

00:07:57,599 --> 00:08:01,769
versioning and with your releases it's

00:08:00,059 --> 00:08:03,329
kind of like a gun because you can

00:08:01,769 --> 00:08:07,289
either use it for good or accidentally

00:08:03,329 --> 00:08:09,449
shoot yourself in the foot one of the

00:08:07,289 --> 00:08:12,389
things that we discovered over the past

00:08:09,449 --> 00:08:15,029
couple years is that before we rewrote

00:08:12,389 --> 00:08:18,149
our modal API like how models are

00:08:15,029 --> 00:08:20,759
displayed and we recently discovered

00:08:18,149 --> 00:08:23,069
that the approach that we use doesn't

00:08:20,759 --> 00:08:25,589
quite work on ipad so we decided to make

00:08:23,069 --> 00:08:27,700
a change to how its bread which layers

00:08:25,589 --> 00:08:30,490
rendered on showing it by

00:08:27,700 --> 00:08:32,740
a display by toggling the display rather

00:08:30,490 --> 00:08:34,600
than changing the z-index and we've

00:08:32,740 --> 00:08:38,650
discovered it kind of breaks different

00:08:34,600 --> 00:08:40,030
model shoulders site and this is

00:08:38,650 --> 00:08:45,100
complicated by having to support

00:08:40,030 --> 00:08:46,990
multiple browsers I found this image

00:08:45,100 --> 00:08:50,470
when I google bugs and cross-browser

00:08:46,990 --> 00:08:52,750
compatibility I think it's kind of funny

00:08:50,470 --> 00:08:53,950
because it includes bugs on all the

00:08:52,750 --> 00:08:55,570
different browsers and that's actually

00:08:53,950 --> 00:08:57,550
something that I found it's not just

00:08:55,570 --> 00:08:59,350
that you have to contend with but

00:08:57,550 --> 00:09:03,880
firefox or chrome do i'm there are

00:08:59,350 --> 00:09:06,510
different rendering bugs and and the

00:09:03,880 --> 00:09:08,890
benefit of using the twitter bootstrap

00:09:06,510 --> 00:09:11,730
library is that it's all very well

00:09:08,890 --> 00:09:13,900
tested a battle-tested like they have a

00:09:11,730 --> 00:09:17,920
well-set-up infrastructure to run your

00:09:13,900 --> 00:09:20,500
tests this is the a screen this is this

00:09:17,920 --> 00:09:23,620
is whenever you open a pull request for

00:09:20,500 --> 00:09:26,080
bootstrap it actually runs a set of

00:09:23,620 --> 00:09:28,540
travis tests including screenshots fire

00:09:26,080 --> 00:09:30,760
sauce labs to show of this any visual

00:09:28,540 --> 00:09:33,600
differences and that's something that

00:09:30,760 --> 00:09:36,220
can be really valuable for CSS changes

00:09:33,600 --> 00:09:39,250
just because it can be difficult to know

00:09:36,220 --> 00:09:41,470
what kind of changes you have this is

00:09:39,250 --> 00:09:43,240
whenever I'd like to talk about CSS I

00:09:41,470 --> 00:09:45,160
always go back to this quote by Michael

00:09:43,240 --> 00:09:47,980
feather saying that legacy codes on

00:09:45,160 --> 00:09:50,050
chestnut code ninety-nine percent of the

00:09:47,980 --> 00:09:55,270
time when we write CSS we don't test it

00:09:50,050 --> 00:10:02,580
so I'll sit at most asss legacy code sip

00:09:55,270 --> 00:10:06,760
table and going back to the point about

00:10:02,580 --> 00:10:09,190
versioning and and downstream impacts of

00:10:06,760 --> 00:10:10,750
CSS changes while operating bootstrap is

00:10:09,190 --> 00:10:13,420
difficult it's by a large unknown

00:10:10,750 --> 00:10:16,050
process because there are thousands of

00:10:13,420 --> 00:10:18,100
hundreds and thousands of people

00:10:16,050 --> 00:10:19,240
throughout the world amp in battle

00:10:18,100 --> 00:10:21,370
testing it and if you look at the

00:10:19,240 --> 00:10:22,390
doctors really well fleshed out and not

00:10:21,370 --> 00:10:24,580
to mention the fact that there are

00:10:22,390 --> 00:10:26,440
people working full-time on on the

00:10:24,580 --> 00:10:29,380
projectors that have spent a lot of time

00:10:26,440 --> 00:10:31,000
thinking about it on the other hand when

00:10:29,380 --> 00:10:32,740
you upgrade the internal framework is

00:10:31,000 --> 00:10:34,860
really hard to test comprehensively and

00:10:32,740 --> 00:10:37,270
I see it as somebody that really true

00:10:34,860 --> 00:10:37,800
ultimately tries to minimize the impact

00:10:37,270 --> 00:10:40,080
of any

00:10:37,800 --> 00:10:41,820
changes by doing some cursory testing

00:10:40,080 --> 00:10:46,260
but there's always so many edge cases

00:10:41,820 --> 00:10:50,399
when people may abuse UI components so

00:10:46,260 --> 00:10:53,160
that you can test all those cases and

00:10:50,399 --> 00:10:56,370
you you you when you release a breaking

00:10:53,160 --> 00:10:57,839
change it breaks something I guess that

00:10:56,370 --> 00:11:00,000
sounds kind of silly by guess why men

00:10:57,839 --> 00:11:01,440
was when you release a change that you

00:11:00,000 --> 00:11:05,000
don't expect if any downstream impacts

00:11:01,440 --> 00:11:09,089
that it breaks something inadvertently

00:11:05,000 --> 00:11:11,339
and the main benefit of and one in

00:11:09,089 --> 00:11:13,560
general the main benefit of the Tudor

00:11:11,339 --> 00:11:16,529
butcher community is just that it's just

00:11:13,560 --> 00:11:17,850
very well tested it has a lot of it's

00:11:16,529 --> 00:11:21,029
very well fleshed out in terms of

00:11:17,850 --> 00:11:24,839
accessibility documentation and it's

00:11:21,029 --> 00:11:27,209
well tested in a cross-browser way so

00:11:24,839 --> 00:11:30,810
accessibility is something that I wish

00:11:27,209 --> 00:11:33,390
that we could all do better with so I

00:11:30,810 --> 00:11:34,890
actually looked at the Twitter bootstrap

00:11:33,390 --> 00:11:37,310
report to pull the number of

00:11:34,890 --> 00:11:40,500
improvements that they had for

00:11:37,310 --> 00:11:43,260
accessibility like Aria attributes etc

00:11:40,500 --> 00:11:45,839
and here a grand total of eighty eighty

00:11:43,260 --> 00:11:49,410
tickets I think maybe if you count up

00:11:45,839 --> 00:11:52,770
all the tickets that we have 402 it is

00:11:49,410 --> 00:11:54,720
also about 80 s so that's something

00:11:52,770 --> 00:11:59,220
where Twitter bootstrap is really well

00:11:54,720 --> 00:12:01,920
tested for documentation another great

00:11:59,220 --> 00:12:05,940
example where the economies of scale

00:12:01,920 --> 00:12:07,320
come into play here's here's our

00:12:05,940 --> 00:12:09,480
documentation we actually just did a

00:12:07,320 --> 00:12:12,060
rewrite of it to cover all the different

00:12:09,480 --> 00:12:13,350
components but it doesn't really we

00:12:12,060 --> 00:12:16,740
don't really go into detail on how to

00:12:13,350 --> 00:12:19,829
use it or any cultures which twitter

00:12:16,740 --> 00:12:21,420
butrum has and in general a lot of

00:12:19,829 --> 00:12:25,140
problems have already been solved by

00:12:21,420 --> 00:12:26,970
bootstrap and some of those cases by

00:12:25,140 --> 00:12:29,940
running a bootstrap for you can utilize

00:12:26,970 --> 00:12:31,770
that knowledge but other times you don't

00:12:29,940 --> 00:12:34,290
know that it's already been solved by

00:12:31,770 --> 00:12:37,230
them unless you unless you are ma auto

00:12:34,290 --> 00:12:39,449
or you do intensive search on that so

00:12:37,230 --> 00:12:41,399
one example is how to deal with

00:12:39,449 --> 00:12:45,089
user-generated content where breaks the

00:12:41,399 --> 00:12:47,130
panel we're trying to make that decision

00:12:45,089 --> 00:12:49,380
whether we should have containers break

00:12:47,130 --> 00:12:50,740
break words by default to prevent

00:12:49,380 --> 00:12:52,750
user-generated content from

00:12:50,740 --> 00:12:57,700
overflowing it and one of my team

00:12:52,750 --> 00:13:01,270
members proposed that we break it and so

00:12:57,700 --> 00:13:03,399
I thought shouldn't butcher really come

00:13:01,270 --> 00:13:05,740
over over this and come to the answer

00:13:03,399 --> 00:13:07,540
and I searched on the butcher github and

00:13:05,740 --> 00:13:09,130
hit and they had already come to that

00:13:07,540 --> 00:13:13,410
conclusion that it wasn't a good idea

00:13:09,130 --> 00:13:15,700
and by maintaining your own CSS

00:13:13,410 --> 00:13:20,050
framework you kind of take on that

00:13:15,700 --> 00:13:22,089
burden of thinking over all the nuances

00:13:20,050 --> 00:13:23,980
and the pros and the cons based on user

00:13:22,089 --> 00:13:26,440
experience what's already been solved by

00:13:23,980 --> 00:13:28,839
bootstrap in other cases you can

00:13:26,440 --> 00:13:36,220
leverage the expertise that butrum has

00:13:28,839 --> 00:13:39,190
such as in responsive approaches so we

00:13:36,220 --> 00:13:41,740
because we base our code based partly on

00:13:39,190 --> 00:13:44,770
bootstrap we were able to utilize your

00:13:41,740 --> 00:13:50,170
great frame framework and just pull it

00:13:44,770 --> 00:13:51,910
in for ease of use so another thing I

00:13:50,170 --> 00:13:53,920
want to talk about about maintaining our

00:13:51,910 --> 00:13:56,920
one benefit for us of maintaining our

00:13:53,920 --> 00:13:59,140
own style guide was that it made re been

00:13:56,920 --> 00:14:03,820
really difficult not really difficult

00:13:59,140 --> 00:14:08,860
really easy really put my foot in my

00:14:03,820 --> 00:14:11,680
mouth and that one so we had to do at

00:14:08,860 --> 00:14:13,360
the beginning of last year the the CEO

00:14:11,680 --> 00:14:15,190
and a bunch of other people designers

00:14:13,360 --> 00:14:18,339
and people i dint decided that we need

00:14:15,190 --> 00:14:21,339
to rebrand the site and because we

00:14:18,339 --> 00:14:26,220
already had put the entire site on our

00:14:21,339 --> 00:14:26,220
02 it made a very easy to apply changes

00:14:27,120 --> 00:14:34,390
so we did so by snapping or ultimate not

00:14:32,350 --> 00:14:37,630
alter produced auto making the minimum

00:14:34,390 --> 00:14:40,959
markup changes and understand so an

00:14:37,630 --> 00:14:42,610
example of this was on the left it's

00:14:40,959 --> 00:14:44,440
it's what the style guide look like

00:14:42,610 --> 00:14:47,950
before every brand and on the right is

00:14:44,440 --> 00:14:49,450
with the new skin and by applying this

00:14:47,950 --> 00:14:53,320
throughout the site it made it really

00:14:49,450 --> 00:14:55,990
easy to it made it really easy to make

00:14:53,320 --> 00:14:58,990
it look good with with minimal CSS

00:14:55,990 --> 00:15:01,420
changes so here's here's some of the

00:14:58,990 --> 00:15:03,190
quote unquote fun pages in our site

00:15:01,420 --> 00:15:04,720
which basically means

00:15:03,190 --> 00:15:06,700
one of the thousands of pages that got

00:15:04,720 --> 00:15:10,510
added in the past few years and know

00:15:06,700 --> 00:15:12,250
that unnecessarily cameras like this one

00:15:10,510 --> 00:15:13,660
is the guide book I don't know if and

00:15:12,250 --> 00:15:15,910
you guys know that but we actually have

00:15:13,660 --> 00:15:18,160
a feature that allows host to add their

00:15:15,910 --> 00:15:22,360
point of interest to a map and it will

00:15:18,160 --> 00:15:26,680
show up in it will show up as a nicely

00:15:22,360 --> 00:15:28,360
formatted list for for you forget here's

00:15:26,680 --> 00:15:32,880
another one author being able to alter

00:15:28,360 --> 00:15:36,720
your reservation before and after and

00:15:32,880 --> 00:15:38,590
this is what it looks like in a rebrand

00:15:36,720 --> 00:15:43,660
so the next thing I want to talk about

00:15:38,590 --> 00:15:47,080
is how we maintain 02 in 02 in a world

00:15:43,660 --> 00:15:49,960
where designs are constantly changing so

00:15:47,080 --> 00:15:51,850
one of the things of one of the things

00:15:49,960 --> 00:15:53,650
about writing making a style guide it

00:15:51,850 --> 00:15:56,170
says only a smelly boys is up to date

00:15:53,650 --> 00:15:57,880
and keeping it in sync with design

00:15:56,170 --> 00:16:01,900
pulses necessary otherwise it just

00:15:57,880 --> 00:16:04,270
becomes useless and that's something

00:16:01,900 --> 00:16:06,760
that's been really challenging for us

00:16:04,270 --> 00:16:10,420
because the design of the site just

00:16:06,760 --> 00:16:11,800
keeps evolving as we expand and that's

00:16:10,420 --> 00:16:13,390
probably something where a few jealous

00:16:11,800 --> 00:16:14,980
of people while working with brands

00:16:13,390 --> 00:16:16,660
Avenue presence because it doesn't just

00:16:14,980 --> 00:16:19,240
keep changing by thing that they are

00:16:16,660 --> 00:16:25,180
important lessons that we can learn from

00:16:19,240 --> 00:16:30,790
here so we work with designed to keep

00:16:25,180 --> 00:16:34,570
our o2 in sync with their needs by by

00:16:30,790 --> 00:16:37,780
having them maintain a PSD a PSD file

00:16:34,570 --> 00:16:40,000
that has the same component SS and so

00:16:37,780 --> 00:16:43,330
this is what the PSD appears you kind of

00:16:40,000 --> 00:16:45,640
look like the lineman and then here's

00:16:43,330 --> 00:16:47,560
more components that this is basically

00:16:45,640 --> 00:16:50,290
what they are PSD looks like and it just

00:16:47,560 --> 00:16:55,990
mirrors the components that we have in

00:16:50,290 --> 00:16:59,320
CSS and by doing that allows them to it

00:16:55,990 --> 00:17:01,360
allows them to produce mocks that are

00:16:59,320 --> 00:17:05,670
exactly twist back according to the US

00:17:01,360 --> 00:17:09,579
bank and we are working on getting it

00:17:05,670 --> 00:17:12,100
getting a sketch a sketch template so

00:17:09,579 --> 00:17:14,699
that designers who work in sketch can

00:17:12,100 --> 00:17:14,699
use it as well

00:17:15,490 --> 00:17:20,929
another thing that we have implemented

00:17:18,199 --> 00:17:22,970
is a build process make it easier to

00:17:20,929 --> 00:17:25,669
update and version that so I think

00:17:22,970 --> 00:17:27,829
that's probably something where it makes

00:17:25,669 --> 00:17:32,750
it very easy on the developers front so

00:17:27,829 --> 00:17:35,330
we use an internal instance of NPM and

00:17:32,750 --> 00:17:38,570
then you can install an o2 is released

00:17:35,330 --> 00:17:44,240
as as an NPM package so that can just be

00:17:38,570 --> 00:17:47,870
installed by NPM and wii version its

00:17:44,240 --> 00:17:52,220
version it semantically so that breaking

00:17:47,870 --> 00:17:55,460
changes are breaking changes are is are

00:17:52,220 --> 00:18:00,350
easily found and we use to nokia to run

00:17:55,460 --> 00:18:03,040
a private mpm server so that's pretty

00:18:00,350 --> 00:18:08,530
much all i have for you about Oh to the

00:18:03,040 --> 00:18:08,530

YouTube URL: https://www.youtube.com/watch?v=Z29NPRys1eI


