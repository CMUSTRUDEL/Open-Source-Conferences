Title: Harry Roberts - 4½ Methods for Theming in (S)CSS
Publication date: 2015-07-01
Playlist: CSSConf Australia 2015 Talks
Description: 
	Thanks our friends at SitePoint, Harry Roberts's CSSConf Australia 2015 presentation: 4½ Methods for Theming in (S)CSS

http://2015.cssconf.com.au/
https://twitter.com/csswizardry
http://csswizardry.com
Captions: 
	00:00:00,000 --> 00:00:05,040
as introduced I'm hurry my talk today is

00:00:03,270 --> 00:00:08,550
called four and a half methods for

00:00:05,040 --> 00:00:11,759
theming in SCSS a couple of quick points

00:00:08,550 --> 00:00:13,679
about this title four and a half and

00:00:11,759 --> 00:00:16,440
basically we're going to look at some

00:00:13,679 --> 00:00:19,050
theming and some user customization very

00:00:16,440 --> 00:00:20,460
subtly different we'll cover that in a

00:00:19,050 --> 00:00:23,250
little more detail in a few slides time

00:00:20,460 --> 00:00:26,039
we've got four fairly hardcore in-depth

00:00:23,250 --> 00:00:28,400
tips or approaches for doing theming and

00:00:26,039 --> 00:00:31,920
unlike a little fifth half tip for doing

00:00:28,400 --> 00:00:34,710
user customization the second thing with

00:00:31,920 --> 00:00:36,809
the title is the SS the SS in brackets

00:00:34,710 --> 00:00:39,090
as we'll see through a lot of the

00:00:36,809 --> 00:00:41,280
demonstrations they don't need a

00:00:39,090 --> 00:00:44,700
preprocessor quick show of hands who

00:00:41,280 --> 00:00:46,890
actually does use a preprocessor yeah I

00:00:44,700 --> 00:00:48,780
assumed as much so they don't all need a

00:00:46,890 --> 00:00:51,800
preprocessor so some of them will be

00:00:48,780 --> 00:00:54,780
pure CSS some of them will be sass

00:00:51,800 --> 00:00:56,940
another thing as well is every talk I've

00:00:54,780 --> 00:00:58,949
ever given except this one is quite

00:00:56,940 --> 00:01:00,629
philosophical quite theoretical quite

00:00:58,949 --> 00:01:03,300
high level this is actually the first

00:01:00,629 --> 00:01:06,060
talk I've ever given which has got super

00:01:03,300 --> 00:01:09,180
specific examples of how to do like a

00:01:06,060 --> 00:01:12,270
specific thing in sass so quick show of

00:01:09,180 --> 00:01:14,670
hands who has worked recently or is

00:01:12,270 --> 00:01:17,880
currently working on a project where you

00:01:14,670 --> 00:01:19,830
require theming Oh

00:01:17,880 --> 00:01:23,460
brilliant so like 20 of you will like

00:01:19,830 --> 00:01:24,869
this talk yeah theming is actually

00:01:23,460 --> 00:01:27,150
surprisingly common something I've been

00:01:24,869 --> 00:01:29,340
doing quite a lot of the last year and a

00:01:27,150 --> 00:01:31,290
half so I thought it might make quite an

00:01:29,340 --> 00:01:34,200
interesting departure from my normal

00:01:31,290 --> 00:01:35,820
kind of talk yeah so hello this is

00:01:34,200 --> 00:01:37,860
amazing like this is my first time in

00:01:35,820 --> 00:01:40,049
Australia I can't believe someone flew

00:01:37,860 --> 00:01:40,439
me literally to the other side of the

00:01:40,049 --> 00:01:42,630
planet

00:01:40,439 --> 00:01:46,500
I feel very privileged to be here who's

00:01:42,630 --> 00:01:48,180
from Melbourne Melbourne sir cool I've

00:01:46,500 --> 00:01:49,770
only been here for like 48 hours I'm

00:01:48,180 --> 00:01:52,770
really enjoying it so thank you very

00:01:49,770 --> 00:01:54,570
much for inviting me um like I said yeah

00:01:52,770 --> 00:01:57,240
my name's Harry I'm a consultant

00:01:54,570 --> 00:02:00,479
front-end architect we'll come back to

00:01:57,240 --> 00:02:02,579
that in a second I write and tweet CSS

00:02:00,479 --> 00:02:04,710
wizardry anyone who follows me on

00:02:02,579 --> 00:02:06,570
Twitter may have seen a proof of concept

00:02:04,710 --> 00:02:08,369
that I've shared for this talk I tweet

00:02:06,570 --> 00:02:11,430
like a little sass Meister example of

00:02:08,369 --> 00:02:12,690
some stuff and every talk I do I like to

00:02:11,430 --> 00:02:15,150
try and give it a

00:02:12,690 --> 00:02:17,550
Tagg turns out it's kind of hard to make

00:02:15,150 --> 00:02:20,730
four and a half methods of SCSS theming

00:02:17,550 --> 00:02:21,750
in CSS into a hashtag but for half CSS

00:02:20,730 --> 00:02:24,500
if anyone's got any kind of

00:02:21,750 --> 00:02:27,390
disagreements different approaches

00:02:24,500 --> 00:02:28,620
horror stories with theming I'd really

00:02:27,390 --> 00:02:30,870
appreciate if you could start firing

00:02:28,620 --> 00:02:32,760
tweet tail gives us some kind of

00:02:30,870 --> 00:02:34,920
real-time feedback means I can answer

00:02:32,760 --> 00:02:37,170
questions we're not doing Q&A so I can

00:02:34,920 --> 00:02:41,520
answer questions by Twitter anything at

00:02:37,170 --> 00:02:43,470
all stick it under for half CSS yes I am

00:02:41,520 --> 00:02:45,600
a consultant front-end architect it's a

00:02:43,470 --> 00:02:48,930
fairly lofty job title where I've I

00:02:45,600 --> 00:02:51,510
invented to give to myself but what that

00:02:48,930 --> 00:02:53,910
means is I help a lot of clients the

00:02:51,510 --> 00:02:55,650
consultancy aspect means I sort of meet

00:02:53,910 --> 00:02:57,540
a lot of different people I don't work

00:02:55,650 --> 00:02:57,960
for clients for you know six months at a

00:02:57,540 --> 00:03:00,300
time

00:02:57,960 --> 00:03:02,220
I might work for them for six hours at a

00:03:00,300 --> 00:03:04,140
time so I meet a lot of different

00:03:02,220 --> 00:03:06,030
clients and they've all got very very

00:03:04,140 --> 00:03:10,470
different problems

00:03:06,030 --> 00:03:12,180
kinda like be in a therapist I guess the

00:03:10,470 --> 00:03:14,850
problems usually revolve around some

00:03:12,180 --> 00:03:17,940
kind of scalability issue managing CSS

00:03:14,850 --> 00:03:20,640
in large projects performance comes up

00:03:17,940 --> 00:03:22,560
quite a lot but one thing that really

00:03:20,640 --> 00:03:25,260
surprised me I mean I work full time for

00:03:22,560 --> 00:03:26,900
out seven years in kind of agency and

00:03:25,260 --> 00:03:29,970
product environments so kind of

00:03:26,900 --> 00:03:32,160
consistent types of work since working

00:03:29,970 --> 00:03:35,400
for myself I realized one surprisingly

00:03:32,160 --> 00:03:36,870
common thing or recurring thing theming

00:03:35,400 --> 00:03:38,070
is really really common I mean the

00:03:36,870 --> 00:03:39,660
amount of people who put their hands up

00:03:38,070 --> 00:03:42,390
just now you know people tackling

00:03:39,660 --> 00:03:45,900
theming really really surprised me I I

00:03:42,390 --> 00:03:48,769
would guess that maybe 50 60 % of my

00:03:45,900 --> 00:03:51,750
clients have needed help solving theming

00:03:48,769 --> 00:03:54,120
every single client I've had in 2015 has

00:03:51,750 --> 00:03:56,130
needed help with theming so it's a lot

00:03:54,120 --> 00:03:57,209
more common than I ever realized so

00:03:56,130 --> 00:03:59,630
that's why I kind of thought it might be

00:03:57,209 --> 00:04:01,709
nice to sort of wrap it up into a talk

00:03:59,630 --> 00:04:03,720
the different types of clients who

00:04:01,709 --> 00:04:04,950
require theming the reason we've got

00:04:03,720 --> 00:04:07,530
four and a half different methods for

00:04:04,950 --> 00:04:10,440
theming is because every different type

00:04:07,530 --> 00:04:13,040
of project that requires theming has

00:04:10,440 --> 00:04:15,150
different requirements so it's basically

00:04:13,040 --> 00:04:18,660
different types of client need different

00:04:15,150 --> 00:04:20,430
ways to theme different things software

00:04:18,660 --> 00:04:22,640
is a service client anyone here work in

00:04:20,430 --> 00:04:25,530
a software as a service environment

00:04:22,640 --> 00:04:26,680
caught a few of you so if you've got

00:04:25,530 --> 00:04:28,360
software as a service

00:04:26,680 --> 00:04:30,039
form you might want use this to be able

00:04:28,360 --> 00:04:31,930
to customize that yeah there might need

00:04:30,039 --> 00:04:35,009
to brand it upload their own kind of

00:04:31,930 --> 00:04:36,820
branding use their own brand colors

00:04:35,009 --> 00:04:38,889
that's in order to offer like a

00:04:36,820 --> 00:04:40,990
personalized but varied product range a

00:04:38,889 --> 00:04:43,080
white label client so anyone

00:04:40,990 --> 00:04:46,300
specifically work in a white labeling

00:04:43,080 --> 00:04:48,190
product a few of you

00:04:46,300 --> 00:04:50,169
it's a white labeling typically you'll

00:04:48,190 --> 00:04:52,330
find that the client wants a completely

00:04:50,169 --> 00:04:54,610
bespoke theme but they'll give you that

00:04:52,330 --> 00:04:55,750
brand guidelines and they'll want you to

00:04:54,610 --> 00:04:57,280
have like you'll have a one-to-one

00:04:55,750 --> 00:04:59,169
relationship with that client and you'll

00:04:57,280 --> 00:05:02,560
build a completely bespoke theme for

00:04:59,169 --> 00:05:05,229
them hope clients know this is terrible

00:05:02,560 --> 00:05:06,340
if I can't the phrase hub client is

00:05:05,229 --> 00:05:08,949
really bad but I couldn't think of

00:05:06,340 --> 00:05:11,229
anything better what I mean by what I

00:05:08,949 --> 00:05:13,599
mean by this is imagine a fairly large

00:05:11,229 --> 00:05:16,960
product the BBC is probably the best

00:05:13,599 --> 00:05:19,000
example I can think of the BBC site has

00:05:16,960 --> 00:05:22,289
loads of sub sites within it so BBC

00:05:19,000 --> 00:05:25,750
Sport is like a quite a bright yellow

00:05:22,289 --> 00:05:27,130
BBC news azar really rich crimson red so

00:05:25,750 --> 00:05:28,960
you might have one large product where

00:05:27,130 --> 00:05:30,820
subsections of that product need to have

00:05:28,960 --> 00:05:33,760
different themes so that's a different

00:05:30,820 --> 00:05:35,199
type of feeling we might need i've also

00:05:33,760 --> 00:05:37,330
recently worked for the number of social

00:05:35,199 --> 00:05:40,620
networks who want to offer customisation

00:05:37,330 --> 00:05:42,550
right so not theming but customisation I

00:05:40,620 --> 00:05:44,530
imagine nearly everyone here will have a

00:05:42,550 --> 00:05:46,599
Twitter profile you can customize your

00:05:44,530 --> 00:05:48,699
Twitter profile to be your own colors

00:05:46,599 --> 00:05:50,220
rights that customisation I so I've

00:05:48,699 --> 00:05:53,409
helped people solve that kind of thing

00:05:50,220 --> 00:05:55,240
this talk and hopefully wrap up at least

00:05:53,409 --> 00:05:57,220
one of each of these of these different

00:05:55,240 --> 00:06:03,729
requirements and offer some kind of

00:05:57,220 --> 00:06:05,470
solution so that kind of brings me

00:06:03,729 --> 00:06:07,720
nicely onto the difference between

00:06:05,470 --> 00:06:08,080
theming and customization the way I see

00:06:07,720 --> 00:06:11,039
it

00:06:08,080 --> 00:06:13,389
UI design has three distinct layers

00:06:11,039 --> 00:06:14,710
there's the design that's what we do

00:06:13,389 --> 00:06:16,780
that's like the vanilla this is the

00:06:14,710 --> 00:06:18,610
baseline this is what it looks like on

00:06:16,780 --> 00:06:20,199
top of the design we could sit a theme

00:06:18,610 --> 00:06:22,240
and on top of a theme we could

00:06:20,199 --> 00:06:24,479
optionally sit customisation so there's

00:06:22,240 --> 00:06:27,190
a subtle but significant difference

00:06:24,479 --> 00:06:29,919
theming is by and large defined by

00:06:27,190 --> 00:06:31,810
developers is defined by us we do the

00:06:29,919 --> 00:06:34,120
theming we'll have designers who create

00:06:31,810 --> 00:06:35,440
five different versions of a you I will

00:06:34,120 --> 00:06:37,960
have developer to build those five

00:06:35,440 --> 00:06:41,590
different versions so theming is done by

00:06:37,960 --> 00:06:44,710
us it requires developer input there are

00:06:41,590 --> 00:06:47,200
usually a finite amount of variants your

00:06:44,710 --> 00:06:49,139
designers might create five different

00:06:47,200 --> 00:06:51,610
skins for the same UI

00:06:49,139 --> 00:06:54,190
five there's a finite amount so it means

00:06:51,610 --> 00:06:56,830
we've got an understood and an earned

00:06:54,190 --> 00:06:59,169
quantity of rules and constraints we

00:06:56,830 --> 00:07:01,599
understand fully what we can and can't

00:06:59,169 --> 00:07:03,789
theme a really good example of this

00:07:01,599 --> 00:07:05,380
would be Jeremy Keith's website

00:07:03,789 --> 00:07:08,830
hopefully you're all familiar with

00:07:05,380 --> 00:07:10,240
Jeremy Keith you hit his you hit his

00:07:08,830 --> 00:07:12,820
website on the right hand side you will

00:07:10,240 --> 00:07:14,770
see this this drop-down why Jeremy has

00:07:12,820 --> 00:07:18,070
built a number of different themes that

00:07:14,770 --> 00:07:20,409
you can view his site in Jeremy designed

00:07:18,070 --> 00:07:23,139
these themes he built them he was in

00:07:20,409 --> 00:07:25,060
complete control of it and we as users

00:07:23,139 --> 00:07:27,159
can invert them so theming has done

00:07:25,060 --> 00:07:30,550
entirely by the dev team or the design

00:07:27,159 --> 00:07:32,800
and dev team customization on the flip

00:07:30,550 --> 00:07:34,839
side is defined entirely by users right

00:07:32,800 --> 00:07:37,300
so the users can decide what their UI

00:07:34,839 --> 00:07:39,669
looks like myspace.com

00:07:37,300 --> 00:07:41,169
it's probably sort of biggest and all

00:07:39,669 --> 00:07:43,000
this examples right you could complete

00:07:41,169 --> 00:07:46,029
customize how your myspace profile

00:07:43,000 --> 00:07:48,250
looked there's not require any developer

00:07:46,029 --> 00:07:49,960
input well except for like the the

00:07:48,250 --> 00:07:51,820
initial mechanism to take the input from

00:07:49,960 --> 00:07:52,960
the user but all the design is done by

00:07:51,820 --> 00:07:53,830
the user which gives you infinite

00:07:52,960 --> 00:07:56,710
possibilities

00:07:53,830 --> 00:07:58,120
think back to the myspace example so

00:07:56,710 --> 00:08:00,190
whatever the user says goes and this is

00:07:58,120 --> 00:08:02,380
customization

00:08:00,190 --> 00:08:04,270
a really good example of customization

00:08:02,380 --> 00:08:07,000
would be Twitter calm at the lower half

00:08:04,270 --> 00:08:09,520
of this screenshot we can decide our own

00:08:07,000 --> 00:08:11,339
colors our own color scheme this

00:08:09,520 --> 00:08:14,710
screenshots particularly useful because

00:08:11,339 --> 00:08:16,919
the top half is theming right so Twitter

00:08:14,710 --> 00:08:19,060
designers have made 19 different themes

00:08:16,919 --> 00:08:20,740
and then we can like we can lay some

00:08:19,060 --> 00:08:24,250
customization on top of that so

00:08:20,740 --> 00:08:25,479
hopefully that's kind of outlined the

00:08:24,250 --> 00:08:27,729
differences between theme and

00:08:25,479 --> 00:08:28,750
customization so we've got four fairly

00:08:27,729 --> 00:08:31,089
beefy tips for

00:08:28,750 --> 00:08:34,209
theming UIs and then a bonus tip for

00:08:31,089 --> 00:08:35,800
customizing them one thing I thought

00:08:34,209 --> 00:08:37,930
might be quite interesting to include in

00:08:35,800 --> 00:08:39,880
this talk is the advice I would give a

00:08:37,930 --> 00:08:42,760
client when they come to me asking for

00:08:39,880 --> 00:08:44,169
theming if a client comes to me and says

00:08:42,760 --> 00:08:45,310
all we need this this this this and this

00:08:44,169 --> 00:08:48,010
and we need it feelable

00:08:45,310 --> 00:08:49,590
I've seldom I very rarely just said yeah

00:08:48,010 --> 00:08:50,790
we'll do that

00:08:49,590 --> 00:08:53,520
the first thing I'll try and do is talk

00:08:50,790 --> 00:08:55,710
the client out of it unless themeing

00:08:53,520 --> 00:08:57,380
actually gives some real business value

00:08:55,710 --> 00:08:59,790
don't bother

00:08:57,380 --> 00:09:02,010
Jeremy Keats a web site for example his

00:08:59,790 --> 00:09:03,660
style switcher I very much doubt that

00:09:02,010 --> 00:09:05,820
that actually leads to more inquiries

00:09:03,660 --> 00:09:07,800
more conversions if there isn't a

00:09:05,820 --> 00:09:08,160
business case for theming just don't

00:09:07,800 --> 00:09:10,170
bother

00:09:08,160 --> 00:09:11,460
it doesn't really solve any problem and

00:09:10,170 --> 00:09:13,230
it's actually a lot of maintenance

00:09:11,460 --> 00:09:15,360
overhead you've got to design five

00:09:13,230 --> 00:09:17,370
versions of the same theme and you've

00:09:15,360 --> 00:09:20,490
got to build and mint in and sort of

00:09:17,370 --> 00:09:22,650
constantly bug check and test five

00:09:20,490 --> 00:09:24,840
versions the same theme so just avoid if

00:09:22,650 --> 00:09:27,270
you can if there is a business case if

00:09:24,840 --> 00:09:29,940
you can't avoid it keep it as simple as

00:09:27,270 --> 00:09:32,370
possible try and lessen the workload of

00:09:29,940 --> 00:09:34,980
doing any theming good way to do this

00:09:32,370 --> 00:09:38,280
would be only two theme completely

00:09:34,980 --> 00:09:40,710
cosmetic parts of the UI basically don't

00:09:38,280 --> 00:09:43,440
make box model properties part of your

00:09:40,710 --> 00:09:45,930
theming ability the background color of

00:09:43,440 --> 00:09:48,420
a button won't break a pages layout but

00:09:45,930 --> 00:09:49,890
the padding of a button might do so when

00:09:48,420 --> 00:09:53,610
you're doing theming try and limit it to

00:09:49,890 --> 00:09:55,170
purely cosmetic aspects the next thing

00:09:53,610 --> 00:09:56,790
effect is in fourth rules this is

00:09:55,170 --> 00:09:59,310
particularly important if you are a

00:09:56,790 --> 00:10:00,960
white labeled service when the client

00:09:59,310 --> 00:10:03,570
asks you for very bizarre request

00:10:00,960 --> 00:10:05,100
surround around theming it's really

00:10:03,570 --> 00:10:06,780
important to have a set of rules in

00:10:05,100 --> 00:10:08,400
place like tell them that look seriously

00:10:06,780 --> 00:10:10,590
you can't have a completely bespoke home

00:10:08,400 --> 00:10:12,660
page layout because deviation is really

00:10:10,590 --> 00:10:14,280
expensive soon as you create a fully

00:10:12,660 --> 00:10:15,900
Buster book solution for someone that's

00:10:14,280 --> 00:10:17,340
like a separate version of the code base

00:10:15,900 --> 00:10:20,370
it's another thing you have to change I

00:10:17,340 --> 00:10:22,260
worked with a client last year who they

00:10:20,370 --> 00:10:24,870
had a white label solution with 200

00:10:22,260 --> 00:10:26,310
clients and every one of the 200 clients

00:10:24,870 --> 00:10:28,740
had the ability to have a completely

00:10:26,310 --> 00:10:30,840
custom home page that meant that any

00:10:28,740 --> 00:10:35,220
change to the core service had to be

00:10:30,840 --> 00:10:37,910
replicated 200 times any UI change we're

00:10:35,220 --> 00:10:39,780
too expensive we're too expensive

00:10:37,910 --> 00:10:40,890
something's you can use as an upsell

00:10:39,780 --> 00:10:42,720
right so if I work with a

00:10:40,890 --> 00:10:44,280
software-as-a-service client I tell them

00:10:42,720 --> 00:10:46,320
that yeah if your client asks for a

00:10:44,280 --> 00:10:49,580
bespoke homepage tell them it's gonna

00:10:46,320 --> 00:10:51,600
cost like ten fifteen thousand dollars

00:10:49,580 --> 00:10:53,580
pick a number that's big enough that

00:10:51,600 --> 00:10:56,279
will make them say no

00:10:53,580 --> 00:10:58,680
but importantly write a number that's

00:10:56,279 --> 00:11:00,990
big enough that if they say yes you've

00:10:58,680 --> 00:11:02,550
made a bit of money so yeah

00:11:00,990 --> 00:11:04,050
try and put them off but make it worth

00:11:02,550 --> 00:11:05,810
your while if they're really adamant

00:11:04,050 --> 00:11:08,160
make it worth your while

00:11:05,810 --> 00:11:10,140
yep quick nurse on preprocessors then

00:11:08,160 --> 00:11:11,399
hinder this at the beginning we'll find

00:11:10,140 --> 00:11:13,350
that some of the examples don't need a

00:11:11,399 --> 00:11:16,410
preprocessor at all some of them you

00:11:13,350 --> 00:11:18,269
couldn't use a preprocessor some of them

00:11:16,410 --> 00:11:20,279
don't need a preprocessor but for

00:11:18,269 --> 00:11:22,529
convenience and first off terseness

00:11:20,279 --> 00:11:25,170
we're going to use one and some of them

00:11:22,529 --> 00:11:26,490
you definitely need a preprocessor my

00:11:25,170 --> 00:11:28,589
advice though would be if you're going

00:11:26,490 --> 00:11:30,930
to do any kind of theming just use one

00:11:28,589 --> 00:11:32,250
it's gonna make it turn simpler the

00:11:30,930 --> 00:11:33,810
preprocessor we're going to look at in

00:11:32,250 --> 00:11:36,660
this talk is sass but anyone who uses

00:11:33,810 --> 00:11:37,800
less or anything you know a stylist I'm

00:11:36,660 --> 00:11:41,790
pretty sure the principles are

00:11:37,800 --> 00:11:45,060
transferable okay right uhm yeah finally

00:11:41,790 --> 00:11:47,820
to you on to the fourth tip um the first

00:11:45,060 --> 00:11:49,230
one is what I call a theme layer now all

00:11:47,820 --> 00:11:52,380
of the names for these different methods

00:11:49,230 --> 00:11:54,930
are names I've invented so if you think

00:11:52,380 --> 00:11:57,300
of a better one again just fire out as a

00:11:54,930 --> 00:12:03,029
tweet because I'm not claiming these are

00:11:57,300 --> 00:12:05,190
the best terms okay so the theme layer

00:12:03,029 --> 00:12:06,990
is probably something we're all very

00:12:05,190 --> 00:12:10,529
used to if we've worked on earth like a

00:12:06,990 --> 00:12:11,610
theming project from five years ago to

00:12:10,529 --> 00:12:13,800
now we're probably used to this

00:12:11,610 --> 00:12:16,529
especially just writing new CSS

00:12:13,800 --> 00:12:20,010
additional CSS it will override the

00:12:16,529 --> 00:12:22,110
default look and feel of a UI like it's

00:12:20,010 --> 00:12:24,750
probably the most common approach that

00:12:22,110 --> 00:12:27,180
will probably find currently it's just

00:12:24,750 --> 00:12:30,120
really simple we write new CSS we write

00:12:27,180 --> 00:12:32,339
subsequent CSS to override the vanilla

00:12:30,120 --> 00:12:33,810
theme so we'll have the design baseline

00:12:32,339 --> 00:12:35,220
and looks like some morcilla has to

00:12:33,810 --> 00:12:39,270
override that and just create a

00:12:35,220 --> 00:12:41,160
completely custom UI which means that

00:12:39,270 --> 00:12:43,680
it's very well suited to completely

00:12:41,160 --> 00:12:45,839
custom things if you need to do bespoke

00:12:43,680 --> 00:12:48,510
theming for a client if you need to add

00:12:45,839 --> 00:12:50,310
on their specific brand you might do

00:12:48,510 --> 00:12:53,250
this just write some more CSS to extend

00:12:50,310 --> 00:12:56,100
and override the default theme very very

00:12:53,250 --> 00:12:58,410
rudimentary very simple very crude how

00:12:56,100 --> 00:13:01,170
it might look on the file system is this

00:12:58,410 --> 00:13:03,300
is using sass doesn't need to the naming

00:13:01,170 --> 00:13:04,680
convention I'm using here is from an

00:13:03,300 --> 00:13:08,100
architecture that I'm currently in the

00:13:04,680 --> 00:13:10,740
middle of writing up ITC SS inverted

00:13:08,100 --> 00:13:12,930
triangle CSS each file gets a namespace

00:13:10,740 --> 00:13:15,420
so we've got a components file which is

00:13:12,930 --> 00:13:17,519
specifically a tabs component and then

00:13:15,420 --> 00:13:19,500
any number of lines of satellites we

00:13:17,519 --> 00:13:22,050
import a theme file a corresponding

00:13:19,500 --> 00:13:23,070
theme file for the tabs we can take this

00:13:22,050 --> 00:13:25,200
as far as we want we could have a

00:13:23,070 --> 00:13:27,209
component tabs components got buttons

00:13:25,200 --> 00:13:30,120
and a corresponding theme file for each

00:13:27,209 --> 00:13:32,160
the ellipsis just means an arbitrary

00:13:30,120 --> 00:13:33,839
amount of satellite and this could be 10

00:13:32,160 --> 00:13:38,430
import later it could be a hundred and

00:13:33,839 --> 00:13:40,470
ten and yeah dad simple right can you

00:13:38,430 --> 00:13:45,510
see the screens little washed out can

00:13:40,470 --> 00:13:48,839
you read the comments in this cool yeah

00:13:45,510 --> 00:13:50,399
that the components file dead simple we

00:13:48,839 --> 00:13:52,290
just have the default it's kind of the

00:13:50,399 --> 00:13:54,630
tabs are grave and we import the theme

00:13:52,290 --> 00:13:56,820
for a little later on when we we know

00:13:54,630 --> 00:13:58,740
what's going to happen here this is not

00:13:56,820 --> 00:14:00,089
gonna get rendered by the browser it's

00:13:58,740 --> 00:14:02,370
just gonna kind of go to waste

00:14:00,089 --> 00:14:05,420
all we're doing here is writing new CSS

00:14:02,370 --> 00:14:08,670
to override the default look and feel

00:14:05,420 --> 00:14:10,770
the good is that we can swap layers out

00:14:08,670 --> 00:14:13,620
because we've got theme docked amps

00:14:10,770 --> 00:14:16,529
themed buttons we can get rid of theming

00:14:13,620 --> 00:14:18,660
really easily if we need a number of

00:14:16,529 --> 00:14:20,399
themes we could have themed red dot taps

00:14:18,660 --> 00:14:21,959
theme got blue dot tabs you can swap

00:14:20,399 --> 00:14:24,510
these around so we can take themes in

00:14:21,959 --> 00:14:26,160
and out it means that if the requirement

00:14:24,510 --> 00:14:28,410
for theming ever disappears it's as

00:14:26,160 --> 00:14:31,529
simple as deleting every theme dot file

00:14:28,410 --> 00:14:33,300
in your codebase it kind of isolates all

00:14:31,529 --> 00:14:35,579
of the keeps it separate to the default

00:14:33,300 --> 00:14:37,950
UI and you can theme anything right

00:14:35,579 --> 00:14:40,440
because we write in new CSS we're not

00:14:37,950 --> 00:14:42,270
limited to just changing colors we could

00:14:40,440 --> 00:14:43,800
change font families we could change all

00:14:42,270 --> 00:14:45,510
the links to be underlined or not

00:14:43,800 --> 00:14:49,020
underlined so we can do a lot of custom

00:14:45,510 --> 00:14:52,320
stuff here the bad what's a redundancy

00:14:49,020 --> 00:14:54,000
anything that's themed you know 50% of

00:14:52,320 --> 00:14:57,510
the declarations will go to waste

00:14:54,000 --> 00:15:00,380
how off of the CSS for theming just

00:14:57,510 --> 00:15:02,550
won't get used wasted CSS over the wire

00:15:00,380 --> 00:15:04,589
we could use some tooling to get rid of

00:15:02,550 --> 00:15:05,940
the redundancy but for the sake of this

00:15:04,589 --> 00:15:07,699
proof of concept I've shown you

00:15:05,940 --> 00:15:10,290
redundancy as a problem

00:15:07,699 --> 00:15:12,209
and a problem is potentially the fact

00:15:10,290 --> 00:15:14,520
that the styling is now split over

00:15:12,209 --> 00:15:15,540
multiple files I that's a good thing in

00:15:14,520 --> 00:15:17,350
terms of encapsulation

00:15:15,540 --> 00:15:19,090
but it means anybody new to the

00:15:17,350 --> 00:15:20,620
project has to be aware of the fact that

00:15:19,090 --> 00:15:22,300
okay if I need to change the color of

00:15:20,620 --> 00:15:26,100
the tabs I might have to look into files

00:15:22,300 --> 00:15:26,100
for that that's a potential downside

00:15:26,430 --> 00:15:31,000
like I say that's probably the most

00:15:28,180 --> 00:15:31,800
common variant of theming we're probably

00:15:31,000 --> 00:15:34,030
used to

00:15:31,800 --> 00:15:36,450
the second method I've got to share with

00:15:34,030 --> 00:15:38,950
you is what I call stateful theming I

00:15:36,450 --> 00:15:40,600
really really like stateful theming it's

00:15:38,950 --> 00:15:41,730
dead simple but you can do some pretty

00:15:40,600 --> 00:15:44,050
cool stuff with it

00:15:41,730 --> 00:15:47,080
stateful theming is basically styling a

00:15:44,050 --> 00:15:49,300
UI based on a condition or a state we

00:15:47,080 --> 00:15:53,290
can invoke a condition and tell the UI

00:15:49,300 --> 00:15:54,700
to behave accordingly we can have

00:15:53,290 --> 00:15:57,220
different skins based on these

00:15:54,700 --> 00:15:59,800
conditions and it allows themes to be

00:15:57,220 --> 00:16:01,660
switched on the client so the important

00:15:59,800 --> 00:16:04,390
thing here is that the user sees the

00:16:01,660 --> 00:16:06,640
theme changing so Jeremy Keith's style

00:16:04,390 --> 00:16:08,590
switcher that theme gets changed on the

00:16:06,640 --> 00:16:10,060
client the user is aware theme has

00:16:08,590 --> 00:16:13,180
changed the condition has changed

00:16:10,060 --> 00:16:14,620
therefore the the theme reacts its

00:16:13,180 --> 00:16:15,820
resuit really well-suited to style

00:16:14,620 --> 00:16:18,790
switchers Mike said Jeremy Keith's

00:16:15,820 --> 00:16:21,490
website and if we got to individually

00:16:18,790 --> 00:16:23,860
styled sections of a site so the BBC

00:16:21,490 --> 00:16:25,930
example if you go from BBC news to BBC

00:16:23,860 --> 00:16:28,420
Sports you will see things change from

00:16:25,930 --> 00:16:29,980
red to yellow the user sees that change

00:16:28,420 --> 00:16:33,160
that's the key with this kind of method

00:16:29,980 --> 00:16:34,960
um anybody who's this Trello will

00:16:33,160 --> 00:16:36,550
probably or hopefully be used to the

00:16:34,960 --> 00:16:38,830
fact that or aware of the fact you can

00:16:36,550 --> 00:16:40,330
change Trello stealing so it's blue by

00:16:38,830 --> 00:16:40,900
default you can pin it to orange or red

00:16:40,330 --> 00:16:43,240
or whatever

00:16:40,900 --> 00:16:45,460
this is stateful theming the user is

00:16:43,240 --> 00:16:49,240
invoking a state telling the UI to

00:16:45,460 --> 00:16:51,310
change and it reacts accordingly that's

00:16:49,240 --> 00:16:53,320
a style switcher the BBC website hurtful

00:16:51,310 --> 00:16:54,910
you can see the navitat op there has got

00:16:53,320 --> 00:16:57,160
like a different color associated with

00:16:54,910 --> 00:16:58,710
it you probably can't see that so the

00:16:57,160 --> 00:17:01,240
next example is probably a little better

00:16:58,710 --> 00:17:05,470
if you're familiar with Paul Lewis error

00:17:01,240 --> 00:17:06,880
twist his blog every section of his site

00:17:05,470 --> 00:17:09,070
has a different color so if you're in

00:17:06,880 --> 00:17:11,380
the blog section it's different colors

00:17:09,070 --> 00:17:13,510
to the lab section this is stateful

00:17:11,380 --> 00:17:15,340
theme the condition here is if the user

00:17:13,510 --> 00:17:17,050
is viewing the blog be this color

00:17:15,340 --> 00:17:21,540
otherwise be this color if they're in

00:17:17,050 --> 00:17:25,600
the lab etc way of tackling this is

00:17:21,540 --> 00:17:26,770
simply using of nesting or satyrs

00:17:25,600 --> 00:17:29,290
parents like to have kind of reverse

00:17:26,770 --> 00:17:31,110
nesting so the tabs agree but when it's

00:17:29,290 --> 00:17:33,960
inside a tea - red

00:17:31,110 --> 00:17:36,600
context just be read the tea - another

00:17:33,960 --> 00:17:39,240
naming convention from the inverted

00:17:36,600 --> 00:17:42,000
triangle CSS architecture if I see a tea

00:17:39,240 --> 00:17:43,350
- class in some markup that tells me

00:17:42,000 --> 00:17:46,620
that okay this is responsible for

00:17:43,350 --> 00:17:48,809
theming yet using sass apparent selector

00:17:46,620 --> 00:17:51,299
which just means the tabs when in this

00:17:48,809 --> 00:17:55,230
context the tabs run inside of this

00:17:51,299 --> 00:17:56,970
parent base it compiles up to this so

00:17:55,230 --> 00:18:00,540
presumably we're all familiar with that

00:17:56,970 --> 00:18:02,250
it's really straightforward stuff now

00:18:00,540 --> 00:18:04,200
all we need to do is we've compiled all

00:18:02,250 --> 00:18:06,240
these conditions the way I describe it

00:18:04,200 --> 00:18:09,150
is um I don't if you can see the red but

00:18:06,240 --> 00:18:11,429
tabs is the subject the key selector is

00:18:09,150 --> 00:18:13,410
the subject of a selector everything

00:18:11,429 --> 00:18:15,960
before that is the condition the

00:18:13,410 --> 00:18:17,850
conditions so yeah we should need to

00:18:15,960 --> 00:18:19,049
turn these switches on the most

00:18:17,850 --> 00:18:21,000
traditional most common way of doing

00:18:19,049 --> 00:18:23,850
this is tea - red on the body element

00:18:21,000 --> 00:18:25,830
the UI reacts accordingly so if that's a

00:18:23,850 --> 00:18:28,740
style switcher that might be putting a

00:18:25,830 --> 00:18:30,840
clasp on the body with JavaScript if

00:18:28,740 --> 00:18:33,419
it's a section of a site like the BBC

00:18:30,840 --> 00:18:35,070
website or Paul Lewis's web site we

00:18:33,419 --> 00:18:37,679
would programmatically add that class to

00:18:35,070 --> 00:18:40,260
the body element so tea red is the

00:18:37,679 --> 00:18:43,140
switch change up to tea blue and we know

00:18:40,260 --> 00:18:44,610
that the UI will react accordingly again

00:18:43,140 --> 00:18:45,690
this should hopefully be really simplest

00:18:44,610 --> 00:18:50,100
if I don't think anything too profound

00:18:45,690 --> 00:18:52,320
here where it does get kind of cool is

00:18:50,100 --> 00:18:55,799
when we start to use stateful utility

00:18:52,320 --> 00:18:59,130
classes they act like decorators if

00:18:55,799 --> 00:19:00,510
you've got this kind of this stateful UI

00:18:59,130 --> 00:19:02,640
this UI that can have a different theme

00:19:00,510 --> 00:19:03,929
depending on the condition you might

00:19:02,640 --> 00:19:07,169
want to make sure that every single

00:19:03,929 --> 00:19:08,340
heading always renders in the color of

00:19:07,169 --> 00:19:10,110
that current theme you might want to

00:19:08,340 --> 00:19:11,669
make sure that if the theme is red all a

00:19:10,110 --> 00:19:13,679
heading should be ready for themes blue

00:19:11,669 --> 00:19:14,549
the heading should all be blue so way of

00:19:13,679 --> 00:19:16,620
doing this is you can have these

00:19:14,549 --> 00:19:18,540
stateful utility classes that act almost

00:19:16,620 --> 00:19:22,710
like with variables like

00:19:18,540 --> 00:19:26,370
semi-intelligent CSS classes so there's

00:19:22,710 --> 00:19:27,840
the utility you - color current and that

00:19:26,370 --> 00:19:29,580
will have different conditions based on

00:19:27,840 --> 00:19:31,830
the current theme right so using the

00:19:29,580 --> 00:19:35,400
parents like dragon would compile it out

00:19:31,830 --> 00:19:38,880
to this and the current the color

00:19:35,400 --> 00:19:40,410
current class always points at whatever

00:19:38,880 --> 00:19:42,450
the currently invert theme is so now we

00:19:40,410 --> 00:19:44,040
can use that to decorate the UI we can

00:19:42,450 --> 00:19:44,770
decorate the Dom with this a utility

00:19:44,040 --> 00:19:46,780
class

00:19:44,770 --> 00:19:49,510
and wait we can basically make bits of

00:19:46,780 --> 00:19:53,260
the DOM track the current theme so we

00:19:49,510 --> 00:19:55,510
might have a page title component always

00:19:53,260 --> 00:19:59,500
has to render in whatever whatever color

00:19:55,510 --> 00:20:01,420
the current state of the UI is here are

00:19:59,500 --> 00:20:03,070
the conditions and we can just put this

00:20:01,420 --> 00:20:06,610
kind of steel thread right through the

00:20:03,070 --> 00:20:08,080
UI and make it kind of track things but

00:20:06,610 --> 00:20:09,730
the good is it wouldn't bundle a number

00:20:08,080 --> 00:20:11,230
of themes into one code base if we've

00:20:09,730 --> 00:20:13,330
got a style switcher or we move from

00:20:11,230 --> 00:20:15,430
different parts of the site from one to

00:20:13,330 --> 00:20:16,780
the other it's already on the user's

00:20:15,430 --> 00:20:19,120
machine it's or anything on the user's

00:20:16,780 --> 00:20:21,040
device so it's fairly quick to to take

00:20:19,120 --> 00:20:24,460
place it's really great for style

00:20:21,040 --> 00:20:26,080
switches and areas of a website so the

00:20:24,460 --> 00:20:28,450
trellis style switcher Jeremy key style

00:20:26,080 --> 00:20:31,090
switcher Paul Lewis's different colored

00:20:28,450 --> 00:20:32,890
sections for his blog and you can theme

00:20:31,090 --> 00:20:35,350
anything once again we're writing CSS

00:20:32,890 --> 00:20:39,340
we've got access to write new CSS we can

00:20:35,350 --> 00:20:40,690
theme anything the bad is that we bundle

00:20:39,340 --> 00:20:43,150
a number of themes into one code this

00:20:40,690 --> 00:20:45,550
that's quite a big hit if nobody uses

00:20:43,150 --> 00:20:46,960
the style switcher if nobody goes from

00:20:45,550 --> 00:20:48,790
one section of their site to the other

00:20:46,960 --> 00:20:50,800
we've sent CSS over the wire that hasn't

00:20:48,790 --> 00:20:52,810
been used again we could potentially use

00:20:50,800 --> 00:20:54,340
tooling to get rid of this but for this

00:20:52,810 --> 00:21:01,960
proof of concept there is a potential

00:20:54,340 --> 00:21:04,810
for redundancy the third method config

00:21:01,960 --> 00:21:07,330
theming conflict theming definitely

00:21:04,810 --> 00:21:10,150
requires a preprocessor conflict theming

00:21:07,330 --> 00:21:12,790
is basically invoking a theme based on a

00:21:10,150 --> 00:21:14,980
setting we have access to a setting that

00:21:12,790 --> 00:21:17,800
when we change it the theme reacts

00:21:14,980 --> 00:21:20,020
accordingly so it's good for switching

00:21:17,800 --> 00:21:21,700
between themes dev side so the previous

00:21:20,020 --> 00:21:24,160
example the user saw that the theme

00:21:21,700 --> 00:21:25,870
changing this is good if you as

00:21:24,160 --> 00:21:28,420
developers want to spit out five

00:21:25,870 --> 00:21:30,100
different versions of the same UI so we

00:21:28,420 --> 00:21:31,780
can compile the same CSS project a

00:21:30,100 --> 00:21:36,520
number of times just with a different

00:21:31,780 --> 00:21:38,920
setting this be useful for um if you had

00:21:36,520 --> 00:21:41,170
for example you do a white label product

00:21:38,920 --> 00:21:42,970
but you don't offer completely bespoke

00:21:41,170 --> 00:21:45,850
theming so a client might say yeah I

00:21:42,970 --> 00:21:47,590
would like a license to be all your

00:21:45,850 --> 00:21:49,660
white label product and I like it to run

00:21:47,590 --> 00:21:51,190
the dark theme so that theme doesn't

00:21:49,660 --> 00:21:53,080
change on the client the user doesn't

00:21:51,190 --> 00:21:54,790
see that theme changing it gets chosen

00:21:53,080 --> 00:21:56,770
once and used forever

00:21:54,790 --> 00:21:57,549
so here what you do is you'd compile out

00:21:56,770 --> 00:21:59,289
a red version

00:21:57,549 --> 00:22:02,230
a blue version a light version a dark

00:21:59,289 --> 00:22:05,019
version here we do this on the file

00:22:02,230 --> 00:22:07,210
system settings dot config so this is a

00:22:05,019 --> 00:22:09,610
settings file specifically the sites

00:22:07,210 --> 00:22:13,259
config and we've got the component tabs

00:22:09,610 --> 00:22:15,489
again the simplest most pragmatic

00:22:13,259 --> 00:22:16,899
cheapest dirtiest quick is we're doing

00:22:15,489 --> 00:22:18,999
to get this off the ground

00:22:16,899 --> 00:22:20,610
you just have a theme variable a global

00:22:18,999 --> 00:22:23,590
variable telling that the theme is red

00:22:20,610 --> 00:22:24,850
then inside the partial for the tabs we

00:22:23,590 --> 00:22:26,739
just have a little bit of logic if the

00:22:24,850 --> 00:22:29,350
themes read do this otherwise fall back

00:22:26,739 --> 00:22:31,600
to grip it means if we change the theme

00:22:29,350 --> 00:22:33,999
to to blue if we add more if statements

00:22:31,600 --> 00:22:35,830
if if I bigger slides we could have a

00:22:33,999 --> 00:22:38,049
series of conditions in there to just

00:22:35,830 --> 00:22:41,649
spit out the same UI with a different

00:22:38,049 --> 00:22:42,879
skin not really necessary for this for

00:22:41,649 --> 00:22:43,659
this talk I thought stick in there

00:22:42,879 --> 00:22:46,239
anyway

00:22:43,659 --> 00:22:48,330
having a nice config map is really

00:22:46,239 --> 00:22:51,850
useful you can have environment kind of

00:22:48,330 --> 00:22:55,119
information theme information debug true

00:22:51,850 --> 00:22:58,059
or false hiked that back out of the map

00:22:55,119 --> 00:23:00,609
using this bit of comm function here and

00:22:58,059 --> 00:23:04,299
it's just slightly nicely a slightly

00:23:00,609 --> 00:23:08,710
nicer syntax if the config theme is

00:23:04,299 --> 00:23:10,840
ready to do this the good is that we

00:23:08,710 --> 00:23:13,809
only send as little CSS over the wires

00:23:10,840 --> 00:23:16,090
actually as is needed we don't send any

00:23:13,809 --> 00:23:19,450
redundant CSS over the wire because we

00:23:16,090 --> 00:23:22,269
compile things ourselves the CSS file is

00:23:19,450 --> 00:23:24,220
exactly as big as it needs to be we can

00:23:22,269 --> 00:23:28,149
alter the entire theme from one location

00:23:24,220 --> 00:23:30,159
we just change one setting we change one

00:23:28,149 --> 00:23:32,769
variable the entire project reacts

00:23:30,159 --> 00:23:34,090
accordingly recompiles and again we can

00:23:32,769 --> 00:23:35,859
theme anything we're not limited to just

00:23:34,090 --> 00:23:40,149
colors here we could change font sizes

00:23:35,859 --> 00:23:41,950
font families font where it's etc the

00:23:40,149 --> 00:23:43,960
bad lots of logic in your sass right

00:23:41,950 --> 00:23:45,190
it's ugly as hell let's stuff littered

00:23:43,960 --> 00:23:47,169
everywhere it's gonna be quite

00:23:45,190 --> 00:23:49,059
cumbersome to work with we just looked

00:23:47,169 --> 00:23:51,039
at one tabs example but when you've got

00:23:49,059 --> 00:23:53,049
every component fee mobile you might

00:23:51,039 --> 00:23:57,220
have five if-else blocks inside each

00:23:53,049 --> 00:23:59,440
partial it only spots a finite number of

00:23:57,220 --> 00:24:00,669
themes so because we have to do them

00:23:59,440 --> 00:24:04,119
upfront we will have to write five

00:24:00,669 --> 00:24:06,309
if-else blocks and adding new themes

00:24:04,119 --> 00:24:08,109
could be quite tedious if you had a sick

00:24:06,309 --> 00:24:10,690
theme that means opening every partial

00:24:08,109 --> 00:24:12,670
adding a new else and

00:24:10,690 --> 00:24:14,560
it's just it can get really messy so I

00:24:12,670 --> 00:24:16,660
mean it's good if you don't need to

00:24:14,560 --> 00:24:18,190
change your themes very often but

00:24:16,660 --> 00:24:20,380
because the logic is littered throughout

00:24:18,190 --> 00:24:27,550
your entire project it can be really

00:24:20,380 --> 00:24:31,450
tedious and cumbersome to work with the

00:24:27,550 --> 00:24:34,600
next method theme palettes theme

00:24:31,450 --> 00:24:36,160
palettes are not an entirely new concept

00:24:34,600 --> 00:24:39,490
you'll have seen something like them

00:24:36,160 --> 00:24:42,820
before I imagine a theme palette is

00:24:39,490 --> 00:24:44,410
basically front loading the entire theme

00:24:42,820 --> 00:24:45,850
information the entire sort of color

00:24:44,410 --> 00:24:48,160
palette front loading all of that into

00:24:45,850 --> 00:24:51,630
one settings file and then using that

00:24:48,160 --> 00:24:51,630
information later on in the project

00:24:52,260 --> 00:24:56,170
so yeah you would get into it this is

00:24:54,580 --> 00:24:57,730
perfect if you do completely bespoke

00:24:56,170 --> 00:24:59,320
kind of stuff for clients they would

00:24:57,730 --> 00:25:01,540
send their brand guidelines or you would

00:24:59,320 --> 00:25:03,940
chat with their designers you've got

00:25:01,540 --> 00:25:05,320
complete access to to that that branding

00:25:03,940 --> 00:25:07,180
information you can front load all of

00:25:05,320 --> 00:25:09,250
this this dates are all this information

00:25:07,180 --> 00:25:10,780
into a settings file and just inject

00:25:09,250 --> 00:25:13,840
that later on you can recycle all this

00:25:10,780 --> 00:25:16,060
this stuff really good for fully bespoke

00:25:13,840 --> 00:25:18,460
theming so like say if you've got a

00:25:16,060 --> 00:25:20,590
client who has to have a UI that looks

00:25:18,460 --> 00:25:23,680
exactly like they designed it this is

00:25:20,590 --> 00:25:25,660
the kind of thing you'd need to use yeah

00:25:23,680 --> 00:25:28,720
it's good for specific branding so I did

00:25:25,660 --> 00:25:30,970
a project for the NHS England like

00:25:28,720 --> 00:25:34,060
Health Service it was an e-learning

00:25:30,970 --> 00:25:37,150
platform so we basically built them a

00:25:34,060 --> 00:25:39,580
big kind of treehouse but private to the

00:25:37,150 --> 00:25:40,870
NHS where doctors and nurses and

00:25:39,580 --> 00:25:43,330
surgeons and all these kind of people

00:25:40,870 --> 00:25:46,390
could go and learn about how to do their

00:25:43,330 --> 00:25:48,370
job better there's a new government

00:25:46,390 --> 00:25:49,870
initiative in England where I mean I

00:25:48,370 --> 00:25:52,060
don't know if it's actually legislation

00:25:49,870 --> 00:25:54,340
I think it's law yet but one of the

00:25:52,060 --> 00:25:56,260
requirements for this project was it had

00:25:54,340 --> 00:25:57,940
to be FEMA ball because this legislation

00:25:56,260 --> 00:26:01,060
that's either in place or coming into

00:25:57,940 --> 00:26:03,600
place is that any government project IT

00:26:01,060 --> 00:26:05,710
project that's paid for by the taxpayer

00:26:03,600 --> 00:26:07,000
should be open sourced

00:26:05,710 --> 00:26:09,460
which i think is a really admirable

00:26:07,000 --> 00:26:11,050
thing I think that's really nice so I

00:26:09,460 --> 00:26:13,870
was told that yeah when you build the UI

00:26:11,050 --> 00:26:16,060
for this this e-learning platform it

00:26:13,870 --> 00:26:17,110
needs to be FEMA becoz if we open-source

00:26:16,060 --> 00:26:19,180
it we need to make sure that whoever

00:26:17,110 --> 00:26:20,860
influenced it and can add their own

00:26:19,180 --> 00:26:23,549
branding so it doesn't look like an NHS

00:26:20,860 --> 00:26:26,340
project so it was for this project

00:26:23,549 --> 00:26:27,659
you the theme palette and theme palettes

00:26:26,340 --> 00:26:29,639
look a bit like this

00:26:27,659 --> 00:26:32,399
so we've got a settings file again

00:26:29,639 --> 00:26:34,470
settings dot palette and then a number

00:26:32,399 --> 00:26:37,649
of lines of sass later we import the

00:26:34,470 --> 00:26:40,200
component tabs again our settings dock

00:26:37,649 --> 00:26:43,320
palette the CSS which contains a big

00:26:40,200 --> 00:26:47,009
wrap of variables tons of variables this

00:26:43,320 --> 00:26:48,509
file would not produce any CSS now what

00:26:47,009 --> 00:26:51,299
we do here is we have a series of what I

00:26:48,509 --> 00:26:52,409
call literal variables so color read

00:26:51,299 --> 00:26:55,350
maps

00:26:52,409 --> 00:26:58,529
straight onto the keyword red it could

00:26:55,350 --> 00:27:00,690
be hash f00 it could be crimson it could

00:26:58,529 --> 00:27:03,259
be anything but in this project the

00:27:00,690 --> 00:27:05,909
shade of red is the color keyword red

00:27:03,259 --> 00:27:07,859
then what we do inside the same file we

00:27:05,909 --> 00:27:10,950
reassign a literal variable onto a

00:27:07,859 --> 00:27:12,960
semantic variable so we kind of daisy

00:27:10,950 --> 00:27:15,210
chain they at the variable certainly um

00:27:12,960 --> 00:27:17,879
the background of the tamps is the same

00:27:15,210 --> 00:27:20,820
as whatever color red is an intern color

00:27:17,879 --> 00:27:23,009
red is the keyword red now the benefit

00:27:20,820 --> 00:27:24,919
of doing this is that when we call color

00:27:23,009 --> 00:27:29,100
tabs background layers well in a project

00:27:24,919 --> 00:27:30,539
it's a semantic variable it means that

00:27:29,100 --> 00:27:33,529
we don't actually put the red

00:27:30,539 --> 00:27:36,539
information anywhere inside that partial

00:27:33,529 --> 00:27:38,039
this is the same reason we're told not

00:27:36,539 --> 00:27:41,039
to use classes like that class equals

00:27:38,039 --> 00:27:42,749
red because red ever becomes blue and

00:27:41,039 --> 00:27:45,239
the Dom gets confusing the same

00:27:42,749 --> 00:27:47,009
principle what this means is any change

00:27:45,239 --> 00:27:48,989
we make to the theme can be made in one

00:27:47,009 --> 00:27:50,730
place and they will propagate through

00:27:48,989 --> 00:27:52,799
the project whilst everything still

00:27:50,730 --> 00:27:55,139
makes complete sense this daisy chaining

00:27:52,799 --> 00:27:59,159
allows us to keep things super clean

00:27:55,139 --> 00:28:00,480
really nice and tidy to expand them a

00:27:59,159 --> 00:28:01,919
little bit then we could front load all

00:28:00,480 --> 00:28:03,269
of the information from our client so we

00:28:01,919 --> 00:28:05,609
could go to the client and get all of

00:28:03,269 --> 00:28:08,879
that branding information front load it

00:28:05,609 --> 00:28:11,039
all into this file so yeah the brand

00:28:08,879 --> 00:28:13,619
color the highlight the red green and

00:28:11,039 --> 00:28:15,869
blue variables map straight on to the

00:28:13,619 --> 00:28:17,489
keywords red green and blue and yeah we

00:28:15,869 --> 00:28:20,070
just Daisy K and then we reassign them

00:28:17,489 --> 00:28:22,230
onto these semantics there's these

00:28:20,070 --> 00:28:23,879
meaningful variables that we can just

00:28:22,230 --> 00:28:26,190
litter or litter kind of pepper

00:28:23,879 --> 00:28:30,929
throughout the project and everything

00:28:26,190 --> 00:28:33,149
stays saying it's they're sensible the

00:28:30,929 --> 00:28:34,980
good zero redundancy because we're

00:28:33,149 --> 00:28:36,900
actually editing sass here we compile

00:28:34,980 --> 00:28:40,350
out exactly as much CSS as we need

00:28:36,900 --> 00:28:42,270
nothing more completely perfect for

00:28:40,350 --> 00:28:44,280
bespoke theming anything that needs to

00:28:42,270 --> 00:28:46,080
be open sourced or completely white

00:28:44,280 --> 00:28:48,060
labeled completely bespoke you would use

00:28:46,080 --> 00:28:50,550
a theme palette you can add as much

00:28:48,060 --> 00:28:52,590
bespoke stuff as you like and you can

00:28:50,550 --> 00:28:54,600
completely restyle the entire project

00:28:52,590 --> 00:28:57,480
from one file so the previous example we

00:28:54,600 --> 00:28:59,040
could change the theme from one file but

00:28:57,480 --> 00:29:01,290
we still had all that logic in all of

00:28:59,040 --> 00:29:02,970
our sass with this method we can

00:29:01,290 --> 00:29:04,470
actually completely alter what that

00:29:02,970 --> 00:29:06,300
theme is so we don't just turn the theme

00:29:04,470 --> 00:29:09,260
on/off from one file we actually define

00:29:06,300 --> 00:29:12,330
it in one place and one place only the

00:29:09,260 --> 00:29:14,940
bad is that we are limited mainly just a

00:29:12,330 --> 00:29:16,380
theming colors now if we go back to what

00:29:14,940 --> 00:29:17,940
I said right at the beginning this is

00:29:16,380 --> 00:29:19,560
actually a good thing right we shouldn't

00:29:17,940 --> 00:29:21,000
allow clients to change the padding on

00:29:19,560 --> 00:29:22,520
that buttons and the font sizes of

00:29:21,000 --> 00:29:25,100
things cause that just adds complexity

00:29:22,520 --> 00:29:27,930
if you need to do that kind of stuff

00:29:25,100 --> 00:29:30,210
this this method kind of limits you to

00:29:27,930 --> 00:29:32,160
just doing cosmetic things you could

00:29:30,210 --> 00:29:33,300
write some slightly more clever SATs so

00:29:32,160 --> 00:29:35,610
instead of just having colors in the

00:29:33,300 --> 00:29:37,740
palette file you could have dollar links

00:29:35,610 --> 00:29:40,590
underlined true or false and the right

00:29:37,740 --> 00:29:43,290
bit of logic in your links partial but

00:29:40,590 --> 00:29:44,670
yeah for this proof of concept you're

00:29:43,290 --> 00:29:47,220
limited by the fact that it is mainly

00:29:44,670 --> 00:29:49,770
just cosmetic I keep mentioning like

00:29:47,220 --> 00:29:51,420
these proof of concepts at the end last

00:29:49,770 --> 00:29:52,920
slide there'll be a link to download an

00:29:51,420 --> 00:29:54,500
example of each one of these so you can

00:29:52,920 --> 00:29:57,480
have a little tinker al-haqq with them

00:29:54,500 --> 00:29:59,130
so each proof of concept is limited by

00:29:57,480 --> 00:30:01,170
the kind of the downsides I've outlined

00:29:59,130 --> 00:30:04,110
you could expand them you could do some

00:30:01,170 --> 00:30:05,610
clever stuff but yeah for the sake of

00:30:04,110 --> 00:30:09,200
this talk these are all problems or

00:30:05,610 --> 00:30:09,200
potential problems with these methods

00:30:10,220 --> 00:30:18,180
okay so the bonus like v like four and a

00:30:13,560 --> 00:30:20,100
half tip is about user customization so

00:30:18,180 --> 00:30:22,230
theming everything in the last four

00:30:20,100 --> 00:30:24,410
examples was our responsibility we

00:30:22,230 --> 00:30:26,730
decided that we defined that

00:30:24,410 --> 00:30:29,970
customisation is now the users turn to

00:30:26,730 --> 00:30:31,860
do things so we let users style their

00:30:29,970 --> 00:30:37,050
own UI or we get to let them decide

00:30:31,860 --> 00:30:38,610
certain bits of the UI now because the

00:30:37,050 --> 00:30:40,740
users doing it we wouldn't actually

00:30:38,610 --> 00:30:42,900
expose any CFS to them they wouldn't

00:30:40,740 --> 00:30:45,660
actually edit any style information

00:30:42,900 --> 00:30:48,060
directly what they'd probably do is have

00:30:45,660 --> 00:30:50,160
a little admin panel or little place in

00:30:48,060 --> 00:30:50,940
their admin part of the CMS where they

00:30:50,160 --> 00:30:52,890
just get

00:30:50,940 --> 00:30:55,340
picker and they could pick that brand

00:30:52,890 --> 00:30:57,330
color it's usually as simple as that

00:30:55,340 --> 00:31:02,480
it's really well suited to social

00:30:57,330 --> 00:31:05,130
networks so I Twitter compr for example

00:31:02,480 --> 00:31:06,210
there is business value in this if you

00:31:05,130 --> 00:31:10,770
want to really kind of stretch the

00:31:06,210 --> 00:31:12,180
definition of business value brands use

00:31:10,770 --> 00:31:13,860
Twitter because they can have your like

00:31:12,180 --> 00:31:17,250
your their branding their brand color

00:31:13,860 --> 00:31:20,580
being able to like have your slice of a

00:31:17,250 --> 00:31:22,440
social network or a platform you kind of

00:31:20,580 --> 00:31:24,660
you earn that part of the social network

00:31:22,440 --> 00:31:27,500
it probably increases engagement so user

00:31:24,660 --> 00:31:30,000
customization can be quite a nice thing

00:31:27,500 --> 00:31:32,250
software-as-a-service platforms so the

00:31:30,000 --> 00:31:34,380
theme is really the method I'm about to

00:31:32,250 --> 00:31:38,010
show you I actually implemented for a

00:31:34,380 --> 00:31:40,680
client recently they had a huge software

00:31:38,010 --> 00:31:42,480
product they had 10,000 I say huge like

00:31:40,680 --> 00:31:44,130
yeah for the size of the company they

00:31:42,480 --> 00:31:46,070
were it was pretty usually had 10,000

00:31:44,130 --> 00:31:49,020
customers using this off-the-shelf

00:31:46,070 --> 00:31:51,120
software as a service platform now

00:31:49,020 --> 00:31:53,550
obviously it's completely impractical to

00:31:51,120 --> 00:31:56,190
do as a spoke theme for 10,000 customers

00:31:53,550 --> 00:31:58,290
it just couldn't happen but it had to be

00:31:56,190 --> 00:32:01,350
brandable it was a sports platform where

00:31:58,290 --> 00:32:03,560
each site each of an instance of this

00:32:01,350 --> 00:32:05,880
this product needed to be in the club's

00:32:03,560 --> 00:32:07,710
colors right there their football trip

00:32:05,880 --> 00:32:09,240
colors so they need to use a

00:32:07,710 --> 00:32:11,250
customization they couldn't pick up the

00:32:09,240 --> 00:32:13,380
phone to 10,000 customers and put that

00:32:11,250 --> 00:32:17,010
in manually they needed to allow the

00:32:13,380 --> 00:32:19,020
user to do this themselves now I really

00:32:17,010 --> 00:32:20,790
really like the method I map to show you

00:32:19,020 --> 00:32:22,290
because it's really ugly it's really

00:32:20,790 --> 00:32:24,990
unconventional it's kind of a bit

00:32:22,290 --> 00:32:25,940
hipster II I really like it and we'll

00:32:24,990 --> 00:32:28,950
see what you think

00:32:25,940 --> 00:32:30,810
remember a few methods ago I told you

00:32:28,950 --> 00:32:33,330
about the decorator classes the utility

00:32:30,810 --> 00:32:35,730
kind of stateful utilities we're going

00:32:33,330 --> 00:32:37,920
to use these decorators again so what we

00:32:35,730 --> 00:32:42,060
do is we just do something like this we

00:32:37,920 --> 00:32:44,220
take the input from CMS it's the word

00:32:42,060 --> 00:32:46,590
read here but it more likely be a hex

00:32:44,220 --> 00:32:48,480
value if it's from a color picker who's

00:32:46,590 --> 00:32:49,920
we take that from the CMS put it into

00:32:48,480 --> 00:32:51,450
the date of it then click back out a

00:32:49,920 --> 00:32:54,000
little bit and just stick it in the view

00:32:51,450 --> 00:32:56,100
we just build a style block put it all

00:32:54,000 --> 00:32:58,440
in the view bind onto these decorators

00:32:56,100 --> 00:33:01,170
these helper classes then we'd go and

00:32:58,440 --> 00:33:03,180
decorate we color in the UI if we want

00:33:01,170 --> 00:33:03,990
the user to be able to color in their

00:33:03,180 --> 00:33:06,120
tamped

00:33:03,990 --> 00:33:07,530
we put the clasp on the tab so it means

00:33:06,120 --> 00:33:09,420
we can every bit of theming is

00:33:07,530 --> 00:33:11,580
completely opt-in really unconventional

00:33:09,420 --> 00:33:13,050
really ugly but it's very it's a nice

00:33:11,580 --> 00:33:14,730
way to safeguard things and it's very

00:33:13,050 --> 00:33:20,730
pragmatic so you have to dump it all in

00:33:14,730 --> 00:33:22,380
the view ya get the hex values from the

00:33:20,730 --> 00:33:24,540
CMS into the database pull it back out

00:33:22,380 --> 00:33:26,550
drop it into the HTML and it's import

00:33:24,540 --> 00:33:28,320
the important thing to note here is that

00:33:26,550 --> 00:33:30,660
we are binding on two utility classes

00:33:28,320 --> 00:33:33,090
we're not creating a list of selectors

00:33:30,660 --> 00:33:35,580
like dock tabs comma button comma

00:33:33,090 --> 00:33:37,559
dropdown comma background color red

00:33:35,580 --> 00:33:40,170
because that would make a huge style

00:33:37,559 --> 00:33:42,150
block what we do is we bind onto utility

00:33:40,170 --> 00:33:48,750
classes and then use those class to

00:33:42,150 --> 00:33:51,120
decorate the UI just like this now this

00:33:48,750 --> 00:33:53,040
is the same method that Twitter use

00:33:51,120 --> 00:33:54,660
Twitter actually use this if you go and

00:33:53,040 --> 00:33:57,090
do a view source of your your own

00:33:54,660 --> 00:33:59,520
Twitter profile you will find this

00:33:57,090 --> 00:34:01,770
method it's what they used to do user

00:33:59,520 --> 00:34:03,630
customization when I did a view source

00:34:01,770 --> 00:34:06,090
when I looked it I was like geez that's

00:34:03,630 --> 00:34:09,869
that's frightful my first thought was

00:34:06,090 --> 00:34:11,970
that was probably Nicolas Gallagher and

00:34:09,869 --> 00:34:13,350
it was I sent him a DM I was like dude

00:34:11,970 --> 00:34:15,149
is this you and it turns out yeah it was

00:34:13,350 --> 00:34:17,520
Nicolas Gallagher it's good it's got all

00:34:15,149 --> 00:34:19,649
the hallmarks of Nicolas Gallagher who's

00:34:17,520 --> 00:34:22,859
he's a genius I absolutely loved that I

00:34:19,649 --> 00:34:25,139
I loved that I knew this was him I'd

00:34:22,859 --> 00:34:26,520
zoom in on that um yeah so if you go to

00:34:25,139 --> 00:34:29,129
your Twitter profile view source you've

00:34:26,520 --> 00:34:31,379
got this kind of stuff binding onto

00:34:29,129 --> 00:34:33,179
these decorator classes using them

00:34:31,379 --> 00:34:35,580
throughout the Dom to color the color

00:34:33,179 --> 00:34:38,580
things in it's it's fantastic it's

00:34:35,580 --> 00:34:42,179
surprise Matic it's effective it just

00:34:38,580 --> 00:34:44,429
works so the good is that it requires

00:34:42,179 --> 00:34:46,530
zero developer input you can allow the

00:34:44,429 --> 00:34:49,139
user to color in their own UI without

00:34:46,530 --> 00:34:50,970
you having to lift a finger except for

00:34:49,139 --> 00:34:52,889
the initial mechanism of taking that

00:34:50,970 --> 00:34:54,929
data into the database and sticking it

00:34:52,889 --> 00:34:58,050
back out into the Dom it lets the user

00:34:54,929 --> 00:35:00,060
to all the theming like I said it lets

00:34:58,050 --> 00:35:01,470
them have their slice of the platform it

00:35:00,060 --> 00:35:02,760
lets them have their own bit of that

00:35:01,470 --> 00:35:04,350
product and that could increase

00:35:02,760 --> 00:35:08,369
engagement it's just a nice to have

00:35:04,350 --> 00:35:10,170
thing and it's incredibly pragmatic just

00:35:08,369 --> 00:35:14,340
a show of hands again who works in house

00:35:10,170 --> 00:35:16,020
or on a product you guys probably more

00:35:14,340 --> 00:35:17,130
than others might understand the

00:35:16,020 --> 00:35:18,150
importance of pragmatism

00:35:17,130 --> 00:35:20,490
right we just need to get

00:35:18,150 --> 00:35:22,770
done it needs to be quick effective we

00:35:20,490 --> 00:35:25,680
need to get this done this is that to a

00:35:22,770 --> 00:35:27,299
tee and that's why I really like it the

00:35:25,680 --> 00:35:29,069
bad is that it requires zero developer

00:35:27,299 --> 00:35:31,619
input right you could end up with the

00:35:29,069 --> 00:35:35,130
next MySpace there's nothing stopping a

00:35:31,619 --> 00:35:37,170
user put putting red text on a green

00:35:35,130 --> 00:35:38,549
background there's nothing stopping a

00:35:37,170 --> 00:35:40,470
user putting white text on a white

00:35:38,549 --> 00:35:42,920
background so I mean we actually have to

00:35:40,470 --> 00:35:45,650
let go of a lot of of the decisions

00:35:42,920 --> 00:35:47,250
thinking back to the previous talk

00:35:45,650 --> 00:35:50,490
accessibility with color

00:35:47,250 --> 00:35:53,609
well letting go of the ability to define

00:35:50,490 --> 00:35:55,349
that so we could lose a lot of or we

00:35:53,609 --> 00:35:57,660
could end it with a lot of mistakes it

00:35:55,349 --> 00:35:58,799
costs of just per user decisions or we

00:35:57,660 --> 00:36:00,079
could end up with MySpace and they all

00:35:58,799 --> 00:36:02,460
just look disgusting

00:36:00,079 --> 00:36:04,589
lots of redundancy again a lot of this

00:36:02,460 --> 00:36:06,839
CSS that gets written even just into the

00:36:04,589 --> 00:36:09,210
view isn't actually going to get used so

00:36:06,839 --> 00:36:11,190
50% of this the theming or the

00:36:09,210 --> 00:36:14,670
customization declarations will have

00:36:11,190 --> 00:36:16,980
strike throughs an inspector which means

00:36:14,670 --> 00:36:18,599
yeah wasted CSS over the wire oh another

00:36:16,980 --> 00:36:22,559
problem is we lose the ability to cache

00:36:18,599 --> 00:36:25,710
these Styles obviously the expense the

00:36:22,559 --> 00:36:28,020
cost of taking information from the CMS

00:36:25,710 --> 00:36:30,390
printing and it sorry taking it from the

00:36:28,020 --> 00:36:32,069
CMS writing it to SSS while writing up

00:36:30,390 --> 00:36:34,049
to disk linking up in the head of the

00:36:32,069 --> 00:36:35,400
document hashing it and cache busting

00:36:34,049 --> 00:36:38,520
each time the user changes their mind

00:36:35,400 --> 00:36:40,410
that's quite a lot of overhead so the

00:36:38,520 --> 00:36:42,059
most pragmatic solution is to just stick

00:36:40,410 --> 00:36:44,390
in the view but that does mean we lose

00:36:42,059 --> 00:36:46,770
the ability to cache these styles I

00:36:44,390 --> 00:36:50,339
haven't changed my twitter profile in

00:36:46,770 --> 00:36:51,900
the last six years there for six years

00:36:50,339 --> 00:36:55,170
that informations kind of gone to waste

00:36:51,900 --> 00:36:57,329
it hasn't been cached okay to kind of

00:36:55,170 --> 00:36:58,529
start wrapping up we've just blitzed

00:36:57,329 --> 00:37:02,819
through five different ways of theming

00:36:58,529 --> 00:37:04,920
you eyes when do we use which one really

00:37:02,819 --> 00:37:06,750
handy checklist to work this out really

00:37:04,920 --> 00:37:09,450
handy first question you should ask

00:37:06,750 --> 00:37:11,970
yourself who's actually doing the

00:37:09,450 --> 00:37:14,099
styling who's defining the look and feel

00:37:11,970 --> 00:37:15,690
if it's the user who gets the decide

00:37:14,099 --> 00:37:18,630
things then straight to where the answer

00:37:15,690 --> 00:37:20,730
is user customization if the user gets

00:37:18,630 --> 00:37:23,849
the decide the exact look and feel of

00:37:20,730 --> 00:37:25,700
the colors are used you have these users

00:37:23,849 --> 00:37:28,349
that user customization no other option

00:37:25,700 --> 00:37:30,150
the second question do the themes need

00:37:28,349 --> 00:37:31,710
to change once they're on the client

00:37:30,150 --> 00:37:34,650
does the user need to see

00:37:31,710 --> 00:37:36,780
are these changes to the UI if you need

00:37:34,650 --> 00:37:38,550
the user to see the UI changing you

00:37:36,780 --> 00:37:40,740
either need stateful theming you know

00:37:38,550 --> 00:37:42,960
style switches or going from different

00:37:40,740 --> 00:37:45,980
sections of a site to another all you

00:37:42,960 --> 00:37:48,480
need to use a customization again

00:37:45,980 --> 00:37:50,130
do you have themes that you want to be

00:37:48,480 --> 00:37:52,050
able to toggle or you want users to

00:37:50,130 --> 00:37:53,670
toggle so this is specifically a style

00:37:52,050 --> 00:37:55,470
switcher you need stateful feeling you

00:37:53,670 --> 00:37:57,630
need to put a clasp on the body element

00:37:55,470 --> 00:37:59,520
and set up an entire context for that

00:37:57,630 --> 00:38:01,380
theme

00:37:59,520 --> 00:38:03,630
do you have sections of the site so I

00:38:01,380 --> 00:38:05,880
Paul Louis's site or the BBC website

00:38:03,630 --> 00:38:08,220
that you need to look different as you

00:38:05,880 --> 00:38:11,010
enter or leave them again stateful

00:38:08,220 --> 00:38:12,540
theming do you have a list of themes

00:38:11,010 --> 00:38:13,859
that a client could potentially choose

00:38:12,540 --> 00:38:15,630
from you know they could choose the

00:38:13,859 --> 00:38:17,700
light theme or the dark theme the red or

00:38:15,630 --> 00:38:20,369
the black theme you need config feeling

00:38:17,700 --> 00:38:23,490
spare the same UI spit out the same CSS

00:38:20,369 --> 00:38:25,290
file in X amount of different themes do

00:38:23,490 --> 00:38:27,990
that dev site right do that with a bit

00:38:25,290 --> 00:38:29,849
of sass config and finally do you need

00:38:27,990 --> 00:38:31,290
to offer completely bespoke theming do

00:38:29,849 --> 00:38:33,060
you have white label clients who need

00:38:31,290 --> 00:38:35,400
their UI to look exactly like their

00:38:33,060 --> 00:38:37,170
brand if that's the case you need either

00:38:35,400 --> 00:38:38,790
the first method the theme layer the

00:38:37,170 --> 00:38:41,220
old-school kind of writing new CSS to

00:38:38,790 --> 00:38:42,839
overwrite things or if it's a greenfield

00:38:41,220 --> 00:38:45,390
project you might want to use a slightly

00:38:42,839 --> 00:38:47,160
more elegant theme pallet front load all

00:38:45,390 --> 00:38:50,160
of the theme information and just use

00:38:47,160 --> 00:38:51,599
that throughout the project yeah it

00:38:50,160 --> 00:38:54,530
starts wrapping up now for us if thank

00:38:51,599 --> 00:38:56,460
you all for listening the slides are

00:38:54,530 --> 00:39:00,089
already online so you can go and get

00:38:56,460 --> 00:39:03,869
those the examples or an example of each

00:39:00,089 --> 00:39:06,450
of these can be found at that URL I'll

00:39:03,869 --> 00:39:09,660
try and get as long as possible yeah

00:39:06,450 --> 00:39:11,990
those are the URLs yes sir thank you

00:39:09,660 --> 00:39:11,990

YouTube URL: https://www.youtube.com/watch?v=oy1IUEwosL0


