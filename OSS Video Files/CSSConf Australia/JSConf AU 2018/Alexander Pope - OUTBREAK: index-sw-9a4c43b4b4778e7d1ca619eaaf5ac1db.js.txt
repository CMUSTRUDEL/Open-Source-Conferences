Title: Alexander Pope - OUTBREAK: index-sw-9a4c43b4b4778e7d1ca619eaaf5ac1db.js
Publication date: 2018-04-11
Playlist: JSConf AU 2018
Description: 
	August 30, 2016, was by all accounts an average Tuesday, and release number 523 just a simple re-factor, but something went horribly wrong that day: bad code escaped from the office, and it quickly spread to infect tens of thousands, giving rise to a hoard of zombie ServiceWorkers!

This is a disaster about a typo. This is a thriller about technology out of control. This is a tragedy about wasted CPU cycles. This is a cautionary tale about living in the age of ServiceWorker.
Captions: 
	that was like a dream come trueI have the tiger okay well as you knowmy name is oh honey did look liquor heremy name is Alexander Pope I'm supersuper excited to be here really honoredthat I was invited to come all the wayfrom frozen Norway to visit beautifulMelbourne to tell you this story nowit's a scary story and like the bestscary stories it's all true mostly nowas you know this is called outbreakindex- SW - a the year is functional low charmless openofficeAlexander sits at a desk staringintently at the screen a phone range inthe background momentarily disruptingthe early morning stillness hey wow youcan import analytics data into can I useand it looks like we already have overstill considered experimental thespecification has not yet stabilized nahthat's all they were talking about atGoogle i/o serviceworker is the bestthing since ajax that's already huge inIndia be not the first by whom the neware tried nor yet the last to lay theold aside the following morning in acramped meeting roomAlexander enthusiastic these sketches ona wall-mounted whiteboard this is greatit's basically a proxy server in yourbrowser you just call navigatorserviceworkerregister with a path to your script itreturns a promise so that's cool[Music]Alexander I hope you are aware that theservice worker lifecycle has non-trivialthere are many opportunities for errorno no no no this is the web if somethingis broken you fix it and ship itcontinuous delivery for the win atGoogle IO they recommend you just changesomething the service worker will beinvalidated and reinstalled eventuallyanywaywithin where angels fear to treaddays later Alexander hurries to clean upcommits while rebasing a git merge intime for release the desk is litteredwith disposable coffee cups embed uniqueacid leaves add feature flag use cachefirst strategy add cache expiry logiccache all API JSON data add app shellpad online offline Status Messagesremotely log errors alexander haven'tyou forgotten somethingwhat about testingtesting serviceworkers hard so manyGlobal's and an installation lifecyclethings are working fine locally andanyway it's progressive enhancement themost positive men are the most credulous[Music]several weeks pass in the quiet of adarkened living room alexander anxiouslyscans air logs notification alertspierce the silence type air undefined isnot a function not a function how couldi at serviceworker global scope dot onot be a function what the hell is goingon I don't get it things have beenrunning smoothly for weeks the onlychange here is some refactoring howcould cache ad all be undefined it worksfine on my machine versions of Chromeprior to value at all among other differences thespecification is still unstable as youare well aware shut up you are nothelping lead to focus while I revertthese changes one week laterback at the office Alexander puzzlesover the latest error logsthat's what weird it's been almost aweek since I ever heard of those changesbut there are still lots of errors itshouldn't take that long to upgrade it'sjust not possiblethe logs say otherwise there have beenmore than last more weeks pass visibly tired anddistraughtAlexander slumps over his computer atthe dinner table a baby cries in thebackground this is starting to freak meout I don't understand how they canstill be so many errors and it lookslike it looks like they're coming frominside the house Alexander don't beridiculousthe errors are clearly not coming frominside the house is it me but inside memy affected with these errors noAlexander you are not infected it wouldappear that for a small number ofclients index - yes W - four seven seven eighty v AC installed what permanently you can neverbe upgraded like some kind of dead songthat is correctyou [ __ ] up you [ __ ] up big timeI told you it was a scary story[Music]there's something strangely compellingabout a disaster story sometimes thedisaster is an act of God other timesit's man-made but the best of them sharethis in commonthe central characters are faced withdifficult sometimes impossible moraldilemmas as viewers we ask ourselves howwe would behave in similar circumstancescould we handle the pressure would wemake the same choices would we do theright thing now some of my favoritedisaster stories are about epidemics ordisease outbreaks that threaten humanityI think of not as living dead later many others now many of these storiesand in fact the whole zombie genre wereinspired by this book I am Legend byRichard Matheson now the book has beenadapted at least three times for the bigscreen but my favorite version is theOmega Man from Heston I love it because it's just sostop delivering these cheesy one-linersno matter what happens to him he has noplace here here's the stink of oil theelectrical circuitry about him isobsolete you are discarded you are therefuse of the past you're full of crapnow the antagonists in this version aremore human than the vampires and thezombies of the other adaptations and Ilike that this cult of albino mutantsspend all their time raging against thescience and technology that they blamefor their fate now most zombie storiesof course they don't plan on turningpeople into zombies it just sort ofhappens by accident and usually it'sbecause technology goes a little out ofcontrol now as I struggled against myown mob of out-of-control serviceworkers I began to worry about this rigof technological backnow as web developers were constantlytempted to throw in more and moretechnology at the problem but if we'renot careful we risk pissing off ourusers making things that are slow orannoying or insecure just full of bugsreally risks alienating the people we'retrying to make happy nowI'm sure some of you are dying to findout what happened some of your oopsdying to see some code other of you areprobably dying after last night's partybut before we go any further with therest of the story we need to take lookat serviceworker what makes it sospecial and what makes it so especiallydangerous first some history in part of htmlwe got the application cache API whichwas a high level API for declaring whichresources should be cached for offlineuse by the app cache API wasn't low-levelenough to be useful so work began on anew spec called serviceworker that wouldenable more granular control overcaching of resources among other thingsa year later at the beginning of chrome browsers released with basicserviceworker support now in the summerof concept of progressive Web Apps andshortly after came Firefox Samsung internet that same year at Google i/o in Mayserviceworker and progressive web appswere put on center stagefinally in API is being deprecated andserviceworker is due to land in allmajor browsers with the next releases ofSafari and edge very soon I hopebut what is a serviceworker anyway aserviceworker is a script running in aseparate background process that canintercept and modify all Networkrequests made by a web application nowserviceworker as the name suggests is atype of worker similar to a web workerin that it doesn't have Dom Ajax orlocal storage it does however havepostmessage for communicating with pagesand other workers fetch for contactingthe network and indexdb for storage aserviceworker is a kind of proxy serverthat responds to network requests byreturning response objects from thenetwork from cache or from dynamicallygenerated content now in theory thismeans that a web application should beable to function without a network atall and in practice having full controlover your cache should also improvestartup application startup performanceto make this possible serviceworker hasaccess to a new api including cache APIfor storing Network request responsepairs and new a new clients API formanaging connected windows and tabs andweb workers now since serviceworker runsin a separate process independent of thebrowser so it runs outside of thebrowser process it can do more work thanjust proxying network requests it canalso respond to push events by receivingand displaying push notifications andsync events by processing pendingnetwork operations that were made whilethe network was offline because they cancontrol several clients at the same timewhile operating in the backgroundservice workers need to be installed onthe device now upgrading remotelyinstalled software while it's runningwithout breaking anything is reallyreally hardserviceworker is not thewe are used to but it's probably the webwe need of course difficult things arerarely simple and as you'd expectserviceworker is complex by design toget from zero to up and running takes amulti-step lifecycle that includesregistration installation sometimeswaiting and finally activation beforeyour serviceworker can get ready to doits work now the first step of theserviceworker life cycle is registrationwhich is initiated by the web page whenyou call navigator serviceworkerregister with a path to your file andonce the serviceworker is eventually upand running it's going to be able tocontrol all pages that fall under itsscope the scope is determined by wherethat serviceworker file is served fromand it can be restricted but notexpanded so in practice this means thata serviceworker can only control pagesthat live at the same or lower level inthe directory hierarchy so that'simportant this brings us to our firstbug busting tip don't call registerwhile the page is loading on first visitit's too late for the serviceworker tostart controlling the page so there's nopoint trying to load it before the pageitself is loaded it's only going to slowthings down so you should wait for thewindow load event or some other signalbefore calling register tip number twois don't rename your serviceworker filethis is extremely important and it'salso a little bit hard to get your headaround but once it's been successfullyinstalled its eventually going to needto be updatednow if the HTML file that registered theserviceworker is cached which is quitecommon it's going to be impossible foryou to install a new service worker witha different name so you can avoid thiskind of chicken and egg problem bymaking sure you never tried to renameyour serviceworker file it should alwaysbe a static file namenow of course if the file name is staticif it's never gonna change and thebrowser was always going to fetch filesthrough the browser cache before goingto the network you're gonna have to makesure you set the proper cache controlheaders to prevent the browser fromcaching is outdated versions of yourserviceworker file now as a precautionto avoid accidentally installing aserviceworker for days or weeks ormonths the browser is automaticallygoing to bypass the cache if the file isolder than you set of course waiting fix a bug is a painful experience so doyour future self a favor and make sureyou set a low expiring now after thescript has been successfully registeredthe install event is going to betriggered and the serviceworker is goingto enter the installation face this isgenerally the best opportunity to beginpre-caching your assets it's also a goodopportunity to talk about promises nowthe service work API takes promise usedto new extremes so using async await canmake things much more legible andpotentially less error-prone nowalthough all browsers only recentlybegan supporting async all browsers thatrun serviceworker also can handleconverting async code to use generatorsand promises so you can use babel withthe async two generator plugin to dothis transformation with very littleoverhead you should also make sure thatpre cached assets can be downloadedbecause passing a promise to the awaituntil the event wait until method isgoing to delay serviceworkerinstallation until all those fetches areresolved however if it's rejected ifeven one asset does not download the newserviceworker is going to be thrown awayso since cache a doll is often theeasiest way to bulk fetch and add thingsto the cache any request is going tocause the serviceworkerto prevent being installed so in thissense pre-cached assets should beconsidered hard dependencies so justbeware now there's already an olderversion installed and runningcontrolling clients the Service Workeris they're gonna enter what they callthe waiting phase until all the clientshave been disconnectedcalling skip waiting is going to forcethe new Service Worker to be activatedregardless and it's gonna but forcingactivation after an update can break allthese existing connected clients if thenew Service Worker behaves rightdifferently than the old one you shouldprobably avoid calling skip waitingafter this major gene and considerprompting the user to trigger a manualrefresh instead so really easy all youneed to do is listen for a serviceworkerevent update prompt the user to forcethe serviceworker to skip waiting andthen reload the page when it becomesactive is that really easy it only tookthree slides so much easier than callingskip waiting but much safer now whenit's finally safe to begin controllingyour clients the activate event is goingto be triggered and you can clean up oldcaches before control is finally passedto the new serviceworker be carefulthough don't accidentally remove cachesthat may be used by other applicationsso the cache API is origin based and itdoesn't restrict access based on thescope that you used to register theserviceworker so you should prefix yourcaches with an application name if youplan on running multiple service workerson under the same domainnow once the serviceworker is activelycontrolling clients any network requestsare going to trigger the fetch eventhandler and the serviceworker is goingto be able to return a response based onURL headers cookies resource typenetwork conditions whatever criteria younow handling the response is going toallow the service worker to performruntime caching but you should alwayscheck the ok property of the responseobject returned from fetch before youadd it to your cache because HTTPresponse codes don't cause the fetchpromise to reject so you check for and avoid is storing global State outside ofthe event handlers in your serviceworkerfile the service workers once they'restarted they run that code but serviceworkers are also stopped and startedmany times over their lifetime that's topreserve battery and other resources onthe device and that global state isgoing to be destroyed at unexpectedtimes so I'm sure all that seems quitestraightforward right now I bet you'rewondering what the deal was with thosezombies quite simply it was partignorant part stupidity and part mysteryin my defense I don't think it was equalparts but you can be the judge it turnsout that versions of chrome before did not support cache at all so anyclient missing that API should havecaused the promised return to theinstall event to reject for the syntaxerror undefined is not a function nowunfortunately a catch was also added tothe promise chain in order to reportinstall errors but the error was neverthrown further up the chain and theserviceworker was installed instead ofbeing thrown away and that explains howsome clients became infected with abroken serviceworker and based on thenumber of errors reported you can seethat most of them were cleared ofthey're infected serviceworker but it'sstill mystery as to why or how a smallnumber were cursed and were never ableto upgrade to a newer version it wasfortunate that this only affected asmallolder devices but it's totallyunfortunate that this is not the onlyway you could break your serviceworkerlet's be honest cache and validation isheart upgrading software is also hardand promises art kind of hard alsonaming things is super hardserviceworker has all of this and moreso what do you do in the event ofdisaster if quitting your job is not anoption you might want to buy some timeby deploying a suicide service workerthat unregistered itself deletes allcaches and force refreshes all connectedclients if you like your job you canmake sure you don't ship a brokenservice worker in the first place bytesting before you deploy of coursetesting service workers is not trivialbut you can run unit tests in a mockenvironment with tools like SW test endand you can even run a single set oftests on both the command line and inthe browser with SW tester now I'm notsure I totally trust the organizationbehind these libraries I mean Popeindustries doesn't really sound likeeven a real company but there isn'treally much else out there today tochoose from so it's definitely betterthan nothing lastly if you don't want orneed to get your hands dirty with thedetails you can use one of several toolsto help you generate a service workerand managed runtime caching but youshould always test if you can even ifthe details were lost on you the hope ofat least been able to convince you thatservice worker should be approached withrespect and handled with careserviceworker is awesome and it lets usdo things on the web we have never beenable to do beforebut it's kind of awesome in the way thata chainsaw is awesome it's reallypowerful and a really easy way to lose ahandunder a foot or maybe a few toes butdon't be afraid a lot of people usechainsaws everyday without spillingblood they take precautions they dressfor the job and they read theinstructions even disaster stories canhave happy endings now that I know morenow that I have some tools for testingI'm not afraid to get back into the laband I hope everyone here isn't eitherbecause the web really is much betterwith serviceworker thank you very much Ihope you enjoy the rest of the day goodboy Alexandre get off this stage[Applause]you
YouTube URL: https://www.youtube.com/watch?v=t7WraVE8rY8


