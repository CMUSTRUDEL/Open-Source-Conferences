Title: Brittany Storoz - A year of other’s bugs: the sad state of error handling
Publication date: 2018-04-11
Playlist: JSConf AU 2018
Description: 
	As an instructor of front-end software engineering, I’ve seen first-hand how difficult it is for new developers to navigate call stacks and decrypt error messages. We have built a culture that considers effective error handling a secondary priority, which has a significant impact on those who are just learning to code. Debugging is a huge part of the development process, and the less time we have to spend spinning our wheels, fighting an error message, the more time we have to get back to the fun stuff.

The more experience we have in engineering, the better we get at debugging broken code. We learn how to isolate the problem, decode cryptic error messages, and figure out the most effective terms to research. The faster we develop these skills, the faster we lose our perspective on what it’s like to be a beginner. It’s only when we watch others struggle through these experiences that it becomes obvious just how ineffective our error handling is. Let’s explore the shortcomings of the current state of error handling and how we can improve upon this to make engineering friendlier for newcomers.

This talk is applicable to developers of all skill-levels working with JavaScript. I hope to enlighten engineers on how to create more effective error handling for juniors, and also demonstrate how new developers are currently navigating the choppy waters we’ve presented them with when things go wrong.
Captions: 
	hi everybody good afternoon I hopeeveryone has been enjoying theconference so far the organizers havedone such a fantastic job putting thistogether for us and I'm so thankful forthe opportunity to be here today and beable to get on stage and complain to allof you for the next half hourso I'm Brittany I'm an instructor atTuring School of software and design inDenver Colorado we teach a prettycomprehensive curriculum for webapplication development and in mycurrent role I'm focused mostly onteaching vanilla JavaScript syntax andthe fundamental patterns and conceptsthat you need in order to work with thelanguage so I'm working with people thatare very new to programming I've been inthis role for about a year now and thishas been the most eye-opening experienceof my career so far historically I wasworking in strictly engineering rolesand during that time over the past years or so I really lost that beginnerperspective that I had when I firststarted out I'm sure a lot of you havelost that as wellbut working with students has broughtthat back really fast it's kind ofshoved in my face every single day whichhas been really amazing to see so I'llgive you a couple of examples of what Imean by that but I've started to getthat beginner perspective back becausemy students are really struggling withthings and I've started to realize justhow difficult we have made it for newdevelopers to join us the things thatthey struggle with are so fixable andthe one that stands out to me the mostis our error handling and the way thatwe have set up this debugging processfor ourselves we've become so complacentwith the way that it currently is andmaybe we don't recognize that it's in abad state but brand-new developersrecognize it every single day so I'llstart with with an example a coupleweeks ago I was teaching myhow to deploy their applications toHeroku and one of my students ran intothis super helpful application errorpage and he threw his hands in the airand he said well that doesn't work andjust moments before that I had taughtthem how to look at the air logs intheir terminal so I was being kind ofsassy and I was like well did you readthe error logs and of course he hadn'tso he went back and he read the errorlogs and when I came back around acouple minutes later I was like well sowhat did they say and he replied to meand he said it literally said we need abetter error message here this is a truestoryso getting owned like this is part of myjob now on a daily basis and I'll behonest I really don't like it it's notmy favorite part of the job so the restof this talk is gonna be kind of a pleato all of you to help me fix these typesof things okay so we're gonna talk abouta couple of ideas on how to fix thesethings and how we can make our errorhandling ecosystem better and friendlierfor new developers but first I want togo over how we're encountering theseerrors in the first place what are wedoing what kind of mistakes are wemaking that's causing us to run intoerrors and for the most part we aremaking very tiny mistakes I don't careif you have been programming for tenyears or five months most of our errorsthat we encounter are caused by littletypos case sensitivity errors in setupand configuration no matter what skilllevel you're at we are all making thesesame very subtle very innocent mistakeswhere the divide occurs is that the moreexperience you have the easier it is foryou to identify that you just made atiny little typo and the faster it isfor you to fix that it almost becomesintuitive and becomes second nature wedon't even really need to read the errormessages that thoroughly because we'relike OhI must have a typo somewhere and we canfind it really quickly for newdevelopers this is not the case at allokay I've had so many students be soclose to coming up with a solution for aparticular problem and their code is accurate but in the face of a reallycomplex error message they think thatthey've done something horribly wrongand the error messages that we're givingthese developers is leading them astrayit's leading them down the wrong pathso I'll give you a couple of examples ofwhat I mean by that and how that'shappening to our new developers onecommon mistake my students make ismixing up array and object prototypemethods so in this example we have a PIobject and our developer wanted to add anew key value pair to this they wantedto add a new property to this object andthe way that they tried to do it was bysaying PI dot push and pushing in thiskey value pair here this is not accurateit's not going to work but the logichere is pretty sound so the developernew pushes a method that I know I haveaccess to and it is used for adding anew value to a data structure okay theyhappen to be wrong with the datastructure that they're currently workingwith but it's not that far off so whenthey run this code they got this erroruncaught type error PI dot push is not afunction and as a new developer when Iread this error message my focus is onthis push is not a function part okaybecause someone told me that push isbuilt into JavaScript by default Ishouldn't have to write it I shouldn'thave to define it how could it possiblynot be there right so when I go back tolook at my code I'm now so laser focusedon this push method rather than on whatkind of data type my PI is okay so now Ican't really focus on the area of thecode that I need to in order to debugthis another example isgetting return statements so in thisexample we have a calculator class witha couple of methods and we're creating anew instance of this calculator and thenwe're chaining these methods together sowe're gonna say subtract add six ok but we have a bug in thiscode right now we're forgetting toreturn the instance of our calculator inour add method ok so when we run thiscode we get an error message that saysuncaught type error cannot read propertyadd of undefined as a new developer whenI read this error message all that I canreally glean from this is that for somereason my calculator is undefined sowhen I go back to my code I'm gonnacheck did I spell calculator right upheream i instantiating it correctly and I'ma new developer so I'm really not superconfident in the syntax that I'm usinghere maybe I'm going to play around withadding and removing this new keywordmaybe I don't need that maybe I'm gonnaremove these parens at the end of myinstantiation I'm doubting myself andthis error message is making me doubtareas of my code that were perfectlyfine but now I'm gonna mess them up andI'm gonna put myself even further from asolution than I was the first timearound okay I'm gonna check that theseCal variables are spelled correctly andI'm not typoing anything there butthat's pretty much the exhaustive listof what I can think of to debug when Iget an error message that looks likethat okay final example here a lot ofstudents will mess up on checkingtruthiness versus assigning values so inthis scenario we have a PI variable setequal to rhubarb and what the intent ofthis code is is to run a conditionalthat says if the pious strawberry we'regonna console.log boo and otherwisewe're gonna say yay okayso I'm expecting this to console.log yayright now but it's not going to becauseI'm accidentally assigning pie tostrawberry directly in my if conditionokaythis is not a fundamentalmisunderstanding of how the languageworks this could be as simple as a typoand look at how hard it is to recognizethat if you're a new developer this isthe difference of one or two equal signsthat you're missing here and what'snastier about a problem like this isthat you're not going to get an errormessage in the console to lead you inany direction you're just gonna see thatyour code is broken and you don't knowwhy it's not doing what you expected itto as far as I know there's also noteven an es lint rule that will warn youabout this correct me if I'm wrong but Ichecked on it last night and I did notfind one is there what's it called lookit up let me know thank you okay butit's really hard for them to decipherwhere these little typos are okay so theunfortunate truth right now is that theconsequences of making a very tinyinnocent mistake are so much greater fornew developers than it is for seniorengineers they're spending five hours todebug the same thing that it would takea senior engineer to debug in one minuteokay they're spinning their wheels a lotour error handling ecosystem right nowis the biggest technical barrier toentry for new developers this this isthe thing that's holding them back themost from being successful in tech rightat the start okay so this is one ofthose things that we really need tofocus on and we really need to fix Iwant to talk about this barrier a littlebit why it exists how it came to be inthe state that it's currently in and I'mgonna start by making some excuses forourselves because that feels really goodso why is error handling so bad asJavaScript developers we have someunique challenges that other ecosystemsdon't necessarily have to deal with forone we are working in a dynamicallytyped language which adds a set ofintricacies that we don't necessarilysee elsewhere on the client-side wecross-browser and cross for mist in seasthat we have to work with and ourtesting infrastructure is still very newit's still very fragile and difficult tonavigate and if you don't agree withthat statement please take that as asign that you have lost some of yourbeginner perspective as well because itis ok it's harder for us to rely onautomated testing than it is for someother languages and some other codingenvironments ok so these factors are allthe more reason for us to be focusingand working even harder on our errorhandling and we can't simply excuseourselves from this type of work becausein a lot of ways error handling ispredictably bad there are a lot ofthings that we're doing that we canprevent in order to increase the theempathy and friendliness of diba thedebugging process for new developers okso one of the first things that we'redoing wrong is we're writing errormessages for ourselves rather than ourusers we pride ourselves on being a veryuser focused user centric community andIndustry and I do believe that we putour best effort into making really gooduser experiences in some contexts but Ido also think that we have some blindspots here so when our users aredevelopers we kind of latch on to thatsimilarity we say oh they're a developerjust like me they're gonna understandthings the same way that I do okay andthat's not the case we're starting toneglect the differences in skill leveland backgrounds and experience and thosethings have a huge impact on the waythat people work with your technologyand the things that they're gonna try todo with it in the ways that they'regonna try to break it okay biggerproblem is that we're working withcomputers and computers are kind of dumbthe programs that we write can onlyunderstand so much about intent thesoftware that we write can only figureout what you take guesses at what a useris actually trying to do here so thisleads to error messages that look likethis this is a really popular one thatmy studentsrun into has anyone ever seen this oneyeah lots of hand see how obnoxious isthat one so unexpected token in JSON atposition zero a lot of my students willrun into this when they are expecting anetwork response to be of a certaincontent type and they get somethingcompletely different so this errormessage does tell me that there's somekind of problem trying to parse thisJSON it did tell me what was going wrongbut it didn't really hint at the factthat I might be working with a differentcontent type right so programs arereally good at telling us what wentwrong but not very good about telling uswhy something went wrong so this errormessage would need a little bit ofadditional code a little bit more manualeffort in order to humanize it a littlebit and I don't think we're alwaysputting in that effort and I think it'sobvious we have historically treatederror handling as a secondary priorityand it shows I did a very quick githubsearch for better errors and resulted inabout a million issues about a hundredfifty thousand of them were related toJavaScript repos and I know this is nota perfect data point by any means but Istill think it's kind of telling and Ithink one of the causes for this issomewhat related to that theory ofbroken windows where if something's alittle bit broken in one place it's muchmore acceptable for it to be brokeneverywhere else and be broken worse so aJavaScript developer can get away withhaving poor error handling in theirtools because we're used to it by nowand we're complacent with that nowyou'll hardly be recognized forneglecting such a thing okay I think abigger cause of this goes back to thatidea of intent so in order to write gooderror messages we need to have some dataon what people are trying to do with ourtools how they're working with them howthey're breaking them and in order toget that data we need users so thisforces us into this waiting period wherewe have to let users struggle with ourtechnology for a little while so that wecan better figure out how to help themwith those problems so this forces us toput error-handling on the back burnerfor a while while we kind of wait forthat feedback to come in and then wehave a really hard time bringing it backto the front and reprioritizing thatokay so this might all seem like quite abit for us to overcome but when thingsare predictably terrible and failing inpredictable ways it also means it iseasy to fix so we have a lot ofsolutions here and this responsibilitybelongs on all of us but I do want topoint out a couple of key players not byany means to cast any blame but torather make it easier for us to identifywhere we should be helping out and wherewe can be helping out okay where theseproblem is actually alive so the firstplayer we have is the Ekman script stickspec itself the language and thelanguage defines a couple of differenterror objects different types of errorobjects for us and for the most part Ithink that the errors that we run intowhen we're working with JavaScript dofall pretty nicely into these bucketsthese categories that have been definedfor us but the problem with these isthat it doesn't provide us with thatmuch much context you really have to doyour research on what these error typesrepresent in order to glean anyinformation out of it and I've oftennoticed that my students will completelyignore the part of an error in theirconsole that says type error : set asyntax error : and they will skipdirectly to the error message to figureout what went wrong so they're not evenreally looking at this okay and thoseerror messages are often written byplatform engineers platform engineersare going to determine what kind ofinformation users need applicationdevelopers need when they run into aparticular error and sometimes thosemessages are really helpful and thensometimes they're more like this andit's not quite as usefulokay so those are two two points ofcontact that we have already wherepeople are shaping the way that we'regetting these error messages back thethird one I want to identify as themaintainer Xand contributors toframeworks and libraries so you might beworking with react or ember and theyhave implemented their own errorhandling for when you do things wrongthis is a tweet from one of my formerstudents who ran into this uncaughterror cannot find module she wasbuilding a react application at the timeand one thing that I really like aboutthis tweet is that she kind of makes anassumption that because she's workingwith react the problem must lie withinreact but in reality this could havebeen a typo in a file name a missconfiguration of webpack a badimport/export statement this error couldhave come from anywhere but it's reallyhard for new developers to identifywhere this is coming from when this isthe only information that we're givingthem okay so if this student hadhappened to be brave enough to file anissue on the react repo and say hey I'mrunning into this problem likely whatwould have happened would be that shewould be politely directed to otherresources support resources a reactchannel for getting additional help andthen her issue would be closed and maybeshe would join in a slack channel forpeople that are helping out with withreact problems and somebody there wouldsay oh it's actually your your webpackconfiguration is a little bit messed upand it's missing that file so it's notgetting into your bundle that's whyyou're getting that error and that'sgreat now her problem is solved and herapplication is working just fine but theproblem of this vague error message isstill not solved okay react could saywell it wasn't our problem it turned outto be a webpack issue right and thenwebpack could say well technicallyeverything is working fine on our endthere'sfailure here it was a user error ourtech stocks are so deep now that it'svery easy for everyone to skirt thisresponsibility of fixing our errorhandling because everyone just says ohwell it's not my problemok and that's one of the first thingsthat we need to address if we're goingto fix this error handling issue that wehave okso not only do we need to be filingissues about our bugs we need to befiling issues about the problems thatwe're having with our problems ok soit's a little bit meta but we need totell maintainer Xand and relevantengineers that it's not ok to have thispoor error handling and if you are alibrary maintainer or a frameworkmaintainer don't just close those issuesfind a way to either make it yourproblem or find out whose problem itshould be and make it theirs don't justignore those problems next time you areworking through a bug and you're runninginto a difficult time solving itdon't just solve the problem foryourself and say great my applicationworks and wipe your hands and move onthink about what made it possible foryou to make that mistake in the firstplace what made it harder for you tosolve what information might have madethat debugging process easier and whomight be able to fix this this is thekind of information that people needthese are the kind of issues that weneed to be filing I think we prideourselves on being kind of a selflesscommunity where we are so open andwilling and ready to share our knowledgeand our work for free which is great ofus I love that about our community butwhen it comes to filing an issue thatmight help some unknown developer two orthree years down the road who you willnever speak to and you will never knowthat you helped them I think we're veryselfish we don't do that nearly oftenenough and we need to start ok take thetime make it impossible for some otherdeveloper to make the same mistake thatyou made ok next thing we need to do isstart working more with juniordevelopers and depending on what kind oftechnology you're working with or whatkind of error handling you're trying toimprove a junior might mean someone thatis brand new to programming or someonethat maybe has some experience butthey're new to your language or they'renew to your particular technology so Iuse that term junior with a lot offlexibility here but this is going totake care of that blind spot that wehave when we're trying to build fordevelopers I mentioned we think ourusers are developers they understandeverything the same way that I do butthat's not the case they you need to bebuilding your technology for all skilllevels you want as many people aspossible to be included in theopportunity to use whatever it is thatyou're buildingso juniors are gonna ask the bestquestions and provide you with the mostinsight into what's confusing or what'sbroken I can't tell you how much I'velearned from my students over the pastyear just because of the very weirdquestions that they ask and the evenweirder things that they try to do I'mshocked every day at what they tried todo okay so juniors are gonna help youconduct the most thorough user testingthat you possibly can okay one thingthat juniors are gonna need though I cangive you a hint right now it's gonna bemore context than we've been providingthem with so my favorite example that Ilove to hate is this e adder in useerror that gets surfaced it's an errorcode from libuv I get surfaced whenyou're running an Express server nodeserver on a port that's already taken doyou know how my students try to tell mewhat's wrong when they get this error Iwalk around and I asked them what theirproblem is and they say I don't know IIduring Eid removes seed renew see theyknow it's important because it's in allcapsbut they have no idea what that sense orwhat that means even if this just saiderror address in use that would be morehelpful that would be more readable forpeople so I don't know why we do thingslike this if anyone knows pleaseenlighten me laterbut they're gonna need more verbositythan this and I think one communitywhere people are doing this really wellis in Elm has anyone worked with Elmpeople like it yeah what do we think ofthe error handling the best right sogood ok so don't worry if you can't readthis I will obviously send out a link tomy slides later but this is an exampleof an error in Elm and look at howbeautifully verbose this is this is somuch information not only is thisanticipating what the user was trying todo but it's also offering potentialsolutions and then also offeringadditional links to read more about thatconcepts that they're trying to workwith this is the kind of context that weneed with our error messages when we'reworking in working with new developersthis makes me think back to that initialexample that I brought up where studentsare confusing array.prototype methodswith object prototype methods and we gotthat error message that said pipe pushis not a function and this wasn't superhelpful for us right so I even look atthe context that we have here I have a Ihave a line number of where it occurredI also have a line number there where itoccurred if I open this to expand it andget more details with this littletriangle I get another link to the linenumber where it occurred but I don't getanything useful I don't get any extrainformation I would love to see the UIof this change slightly so that when youexpand an error instead of getting athird link to the same exact place youget information like pushes an arrayprototype method you happen to becalling it on an object read more aboutthat here read more about prototypemethods here okay junior developersdon't know how to read call stacks wereally need to rethink call stacks alltogether I know the Firefox developersare doing a good job thinking about thatand prioritizing that but I can alsotell you that these three links in thissmall amount of real estate newdevelopers don't click on those at allmaybe they clicked on them once and thenthey saw the sources panel and they gotreally freaked out and scared cuz Ididn't know what was going on or theydidn't realize how useful it was andthen they never click on them again okso we need to find some way to add somemore friendly context to these errormessages besides just these call stacksI'm not saying call stacks are nothelpful obviously they're incrediblyhelpful but it takes a while to get usedto reading those ok so coming up withmore elegant solutions like that lookingat that Elm solution thinking about thatPI dot push error message coming up withthese solutions takes a little bit ofresearch we need that intent data rightso we're waiting for our users tostruggle a little bit with ourtechnology so that we can figure out howthey're using it how they're breaking itwhat problems are running into you I cantell you that we have already struggledthat intent data is already out therefor so many aspects of JavaScriptdevelopment all we need to do is gatherit and leverage it so gathering thiscomes from reading through issues thatare files and bugs that are reportedlook through Stack Overflow and don'tjust look at the questions look at theanswers and look at what questions theyhad about those answers what kind ofclarification did they need payattention to conversations that arehappening in slack channels and supportnetworks a lot of times theseconversations will help one person it'llbe a little one-off solution for oneperson and then that conversation willdisappear forever and it will never helpanyone improve that technology improvethat resource ok so we need to bedocumenting those things and then offerto be a mentor for a technology thatyou're looking to improve being a mentoryou will learn so much like I've saidjuniors are the most enlightening peopleto work with so being a mentor is goingto ramp up your user testing and andyour ability to anticipate what's goingto go wrong tenfold okay once we haveall that data we need to aggregate allof the resources that are going to helppeople with their intent and one examplethat I think we're doing this reallywell is in the audits panel of Chrome'sdev tools if you're running an audit youget this really nice list of everythingthat you did right and everything thatyou did wrong and when you expand oneach of these results you get a link tolearn more and these learn more linkswill send you to a blog post or atutorial to learn more about exactlywhat's failing or exactly whatsuccessful one thing I do is my studentsis I have them run an audit on aparticular webpage and I have them justlist out all the vocabulary that they'reunfamiliar with or things that don'tmake sense to them right away and then Ihave them go through all of theseresources that are listed here for themand read them and by the time they'redone looking through those resourcesthey can speak to almost all of thatvocabulary that they didn't understandat the beginning of the day and this isa great example and I think it's alittle bit easier in this scenariobecause our intent is very easy toassume here we can say if you're runninga performance audit on your applicationvery likely you're trying to make yourapplication more performant intent kindof varies in other realms a little bitso it's a little bit trickier toimplement something like this in othercontexts I think but what I want us totake away from from this UI isaggregating those resources and puttingthem in one place like putting themright where users are running into theirerror so that they don't have to gosearching for them new developers don'tknow where to look for these resourcesthey don't even know how to Google yetnecessarily constructing proper searchterms to learn more about the errorsthat they're encountering is verydifficult it may seem very intuitive foryou but believe it or not that is stilla skill that hasto be learned and it takes some time soif we can aggregate those resources andput them right at their point of errorwe save them that step of trying tofigure out how to search for them okayanother skill that junior developers arereally focused on is knowing when to askfor help so some of my students will beworking on a problem by themselves forabout five hours and an instructor willcome over and point out a single line ofcode and fix it in a minute just likethat and the student will just facepalmin disbelief that they just spent fivehours trying to debug such a trivialerror and in those scenarios I generallyjust tell my students well welcome toprogramming and I walk away but I don'twant to say that anywhere I don't wantto have to say that any more code isbroken way more often than it is workingand that goes that's the same for usthat happens to us just as frequently asit happens to junior developers so weneed to show them that we understandthat and we empathize with that the waythat we're gonna do that is by fixingour error handling encountering errorsshould be an informative learningexperience and not a frustratingroadblock and that's what it is rightnow for new developers it's afrustrating roadblock it's a barrier forthem new developers are not learningnearly half as fast as they could bethey're not learning from their mistakesthey're running into the same problemsfar more many times than is necessarybecause they're spinning their wheels atthe sight of these really obscure errormessages that we're giving them okaythey're not learning from these thesemistakes that they're making companiesare really hesitant to hire juniordevelopers because they fear that theycan't ramp them up fast enough or theydon't have the resources to do so and asa community we can alleviate so much ofthat issue just by fixing our errorhandling we can make it so much easierfor new developers to learn so muchfaster than they currentwe are if we just stop making it sodifficult for them so I really urge youthe next time you are working on a bugworking through an error truly thinkabout these things and keep it at theforefront of your mind if you see anerror message that isn't useful try tofile an issue for it I hope that you aremotivated to start improving this areaof our our community but if you're notquite there yet if you're not quitefeeling that I'll leave you with thisfinal error message that I find veryinspirational failure is not an optionokay so print this out leave it on yourdesk whatever you need to do to keepthis at the forefront of your mind okaydeal it's cool thank you so much foryour time and attention I will post alink to my slides on Twitter and I'll bearound to the rest of the evening totalk more about this thank you so much[Applause]you
YouTube URL: https://www.youtube.com/watch?v=fQHH6aSpYV0


