Title: A Simple Protocol for Remote Attestation of System Integrity - Roberto Sassu
Publication date: 2018-10-27
Playlist: Linux Security Summit Europe 2018 - Edinburgh
Description: 
	A Simple Protocol for Remote Attestation of System Integrity - Roberto Sassu, Huawei Technologies Duesseldorf GmbHÂ 

TPM keys can be sealed to the platform state. However, the state cannot include measurements done by Integrity Measurement Architecture (IMA), as file accesses are unpredictable. The proposed IMA Digest Lists extension overcomes this issue by preloading reference measurements from software vendors into the kernel memory and reporting only unknown file accesses. This talk proposes a simple solution for remote attestation that does not require dedicated servers. An endpoint of a TLS channel can implicitly prove to the other endpoint its integrity by performing the handshake, and by providing an X.509 extension from TCG, Subject Key Attestation Evidence (SKAE), certifying that the handshake is done with a TPM key, sealed to a good system state. The talk shows how the feasibility issue of conventional solutions has been addressed and details the tradeoffs made to accomplish the objective. 

About Roberto Sassu
Roberto Sassu received a MsC in Information Security in 2008 and worked as a research assistant until 2014. He published and presented papers on Trusted Computing at STC'11 and TrustCom 2014. He also participated to several European projects (OpenTC, TClouds, SECURED and FutureTPM). After working at SUSE Linux from 2015 to 2017, he joined Huawei in 2017 and contributes to the integration of Trusted Computing technologies into products.
Captions: 
	00:00:00,060 --> 00:00:04,700
so good morning everyone my name is

00:00:01,979 --> 00:00:08,309
Roberto Sasso I'm a security engineer

00:00:04,700 --> 00:00:11,910
engineer away and they work on mostly on

00:00:08,309 --> 00:00:13,920
Lima and TPM today I would like to

00:00:11,910 --> 00:00:16,830
present a simple protocol for remote

00:00:13,920 --> 00:00:18,449
attestation where simple means that is

00:00:16,830 --> 00:00:21,750
simple to understand for the user but

00:00:18,449 --> 00:00:25,350
the solution itself is a very complex

00:00:21,750 --> 00:00:30,630
and I think the complexity does not

00:00:25,350 --> 00:00:34,110
derive from calling the TSS but the real

00:00:30,630 --> 00:00:41,390
problem is to find a state where the

00:00:34,110 --> 00:00:44,460
system is trusted to to be able spected

00:00:41,390 --> 00:00:48,750
to do to perform the task in a in a good

00:00:44,460 --> 00:00:50,879
way so first I will talk about the

00:00:48,750 --> 00:00:52,800
problem that we are trying to solve some

00:00:50,879 --> 00:00:55,559
background information or proposal and

00:00:52,800 --> 00:00:58,680
the conclusion so remote attestation is

00:00:55,559 --> 00:01:01,579
the process to verify whether the system

00:00:58,680 --> 00:01:04,110
I can accomplish its task as expected

00:01:01,579 --> 00:01:05,760
but the valuation of the operating

00:01:04,110 --> 00:01:08,880
system integrity is a very complex

00:01:05,760 --> 00:01:11,340
because reference management and public

00:01:08,880 --> 00:01:14,189
verification service are not available

00:01:11,340 --> 00:01:16,140
and also because it is unclear which

00:01:14,189 --> 00:01:18,000
information must be included in the

00:01:16,140 --> 00:01:21,930
measurement list and out these

00:01:18,000 --> 00:01:24,030
information should be verified also a

00:01:21,930 --> 00:01:26,070
remote decision is very difficult to

00:01:24,030 --> 00:01:28,049
integrate into a product because a

00:01:26,070 --> 00:01:30,509
dedicated server must be added in time I

00:01:28,049 --> 00:01:33,960
started to do the remote attestation and

00:01:30,509 --> 00:01:36,299
there are and we need also to implement

00:01:33,960 --> 00:01:40,250
two separate protocol one for remote a

00:01:36,299 --> 00:01:40,250
decision in one for secure communication

00:01:40,759 --> 00:01:47,040
so industry computing the Integrity's

00:01:43,470 --> 00:01:50,100
the process of evaluating whether a

00:01:47,040 --> 00:01:52,770
system or application behave as intended

00:01:50,100 --> 00:01:53,939
by the software developer and the

00:01:52,770 --> 00:01:56,640
measurement start from the cooler

00:01:53,939 --> 00:02:00,689
occurred root of trust of measurement

00:01:56,640 --> 00:02:02,520
which is the usually in the CPU and the

00:02:00,689 --> 00:02:05,909
measurement processor is done until the

00:02:02,520 --> 00:02:09,030
application or departing system level

00:02:05,909 --> 00:02:11,220
the measurement is done by integrity

00:02:09,030 --> 00:02:12,880
measurement architecture and the

00:02:11,220 --> 00:02:15,130
valuation is done by comparing

00:02:12,880 --> 00:02:18,880
child measurement with reference

00:02:15,130 --> 00:02:20,830
measurement so we have two type of

00:02:18,880 --> 00:02:24,100
remote attestation one explicit and one

00:02:20,830 --> 00:02:29,170
implicit explicit about this session so

00:02:24,100 --> 00:02:32,140
I'm a so we have an initial and value of

00:02:29,170 --> 00:02:33,310
the lateral configuration register which

00:02:32,140 --> 00:02:35,740
store the system's data

00:02:33,310 --> 00:02:39,190
this is initialized to zero and when I

00:02:35,740 --> 00:02:42,070
am a start to measure to perform

00:02:39,190 --> 00:02:45,070
measurements then I'm across the PMP

00:02:42,070 --> 00:02:47,440
sialic stand and then the PCR current

00:02:45,070 --> 00:02:50,770
VCR values is updated with the edge of

00:02:47,440 --> 00:02:53,800
the current value plus the digest of the

00:02:50,770 --> 00:02:55,390
measurement this process is done for

00:02:53,800 --> 00:02:58,150
each entry that is added to the

00:02:55,390 --> 00:03:02,620
measurement list later we have our

00:02:58,150 --> 00:03:04,660
verified which one to attest the system

00:03:02,620 --> 00:03:06,700
and so there is a remote attestation

00:03:04,660 --> 00:03:09,130
agent running in the in the system which

00:03:06,700 --> 00:03:13,920
provides both the measurement elisa

00:03:09,130 --> 00:03:16,450
and also assign a pcr the verifier then

00:03:13,920 --> 00:03:18,820
replicated the same operation that was

00:03:16,450 --> 00:03:21,280
done by the the TPM in order to see if

00:03:18,820 --> 00:03:25,360
the measurement list was tampered with

00:03:21,280 --> 00:03:27,460
and then if the measurement alesis is

00:03:25,360 --> 00:03:29,950
good then it compares the measurement

00:03:27,460 --> 00:03:32,230
inside inside with a reference

00:03:29,950 --> 00:03:36,000
measurement and if everything is a is

00:03:32,230 --> 00:03:39,420
known as recognizer than the verifiers

00:03:36,000 --> 00:03:41,560
determined that the system is is good

00:03:39,420 --> 00:03:44,340
with implicit the remote decision

00:03:41,560 --> 00:03:47,440
instead is a bit different so we have a

00:03:44,340 --> 00:03:52,330
first we generate a TPM key which is

00:03:47,440 --> 00:03:57,250
ceded to the desired system state later

00:03:52,330 --> 00:03:59,519
the PCR is populated is updated and as

00:03:57,250 --> 00:04:03,150
soon as a I'm a

00:03:59,519 --> 00:04:06,269
great lumen add new measurement today to

00:04:03,150 --> 00:04:08,849
the list and the remoter decision

00:04:06,269 --> 00:04:11,969
consists instead of establishing a

00:04:08,849 --> 00:04:16,350
secure communication between the

00:04:11,969 --> 00:04:19,440
management system and a local system and

00:04:16,350 --> 00:04:23,250
only if they state the current state is

00:04:19,440 --> 00:04:26,220
the same of the state that was used for

00:04:23,250 --> 00:04:29,180
the sealing policy of the key then the

00:04:26,220 --> 00:04:31,680
secure communication is established so

00:04:29,180 --> 00:04:34,410
this a remote initiation is implicitly

00:04:31,680 --> 00:04:36,240
because of the fact that it's possible

00:04:34,410 --> 00:04:41,520
to establish a communication means that

00:04:36,240 --> 00:04:43,289
the system was in the desired state so

00:04:41,520 --> 00:04:47,759
the remaining tasks for the verified is

00:04:43,289 --> 00:04:54,660
to check if the state that was a set in

00:04:47,759 --> 00:04:57,509
the city in policy is a good state so we

00:04:54,660 --> 00:05:00,120
see that simple implicitly motive

00:04:57,509 --> 00:05:01,970
decision is easier it's more suitable

00:05:00,120 --> 00:05:05,729
for integration into a product because

00:05:01,970 --> 00:05:08,310
the product use a secure come secure

00:05:05,729 --> 00:05:10,919
communication so it is easy easier to

00:05:08,310 --> 00:05:14,430
integrate a remote attestation into this

00:05:10,919 --> 00:05:16,830
existing protocol so we required to

00:05:14,430 --> 00:05:18,720
switch from software key to TPM key and

00:05:16,830 --> 00:05:22,590
also an additional verification of the

00:05:18,720 --> 00:05:24,810
certificate which tells if the key that

00:05:22,590 --> 00:05:30,090
he used the for TLS is a TPM key and

00:05:24,810 --> 00:05:32,340
this select good state problem is that

00:05:30,090 --> 00:05:35,520
the I'm a PCR is not predictable because

00:05:32,340 --> 00:05:38,669
the final value of the the PCR depends

00:05:35,520 --> 00:05:43,889
on which file has been measured and and

00:05:38,669 --> 00:05:46,789
also the temporal sequence so our

00:05:43,889 --> 00:05:49,830
solution so we want to do to implement

00:05:46,789 --> 00:05:51,539
implicitly remote attestation and to do

00:05:49,830 --> 00:05:53,970
this we have to make them a PCR

00:05:51,539 --> 00:05:56,400
predictable to do this we have a true

00:05:53,970 --> 00:05:58,500
new concept one is called the I'm on

00:05:56,400 --> 00:06:01,409
today's list and the second one is an

00:05:58,500 --> 00:06:03,389
enhanced version of policing the reduces

00:06:01,409 --> 00:06:07,830
integrity measurement architecture to

00:06:03,389 --> 00:06:10,800
handle multiple files that is list so

00:06:07,830 --> 00:06:12,820
normally when a file is assessed by in

00:06:10,800 --> 00:06:15,070
the system then I'm all

00:06:12,820 --> 00:06:18,820
put the measurement in the measurement

00:06:15,070 --> 00:06:21,880
list with our approach before at Carolyn

00:06:18,820 --> 00:06:23,800
cessation time we preload a white list

00:06:21,880 --> 00:06:26,710
in the kernel with all the reference

00:06:23,800 --> 00:06:30,160
measurement for example here we have a

00:06:26,710 --> 00:06:33,430
bean bash and so when bash is assessed

00:06:30,160 --> 00:06:36,820
then I'm a check first if the act or the

00:06:33,430 --> 00:06:39,250
analysis and white list and if it is the

00:06:36,820 --> 00:06:41,040
wait list and does not perform any does

00:06:39,250 --> 00:06:44,080
not have the measurement in the list

00:06:41,040 --> 00:06:47,860
otherwise if the file is is unknown than

00:06:44,080 --> 00:06:49,930
the value is added to the to the list so

00:06:47,860 --> 00:06:52,390
in this way the only measurement that

00:06:49,930 --> 00:06:54,220
that we should have if all files are

00:06:52,390 --> 00:06:58,960
recognized would be only the measurement

00:06:54,220 --> 00:07:02,470
of the white list but unfortunately we

00:06:58,960 --> 00:07:04,390
have a we have some recognized data file

00:07:02,470 --> 00:07:08,860
which are the multiple files so those

00:07:04,390 --> 00:07:11,350
file change during the when the system

00:07:08,860 --> 00:07:13,960
is being used so we cannot really

00:07:11,350 --> 00:07:18,040
compare multiple files with a reference

00:07:13,960 --> 00:07:20,800
measurement an alternative approach

00:07:18,040 --> 00:07:23,200
would be not to look into the content of

00:07:20,800 --> 00:07:25,330
the immutable file but instead looking

00:07:23,200 --> 00:07:27,610
to which processor are writing immutable

00:07:25,330 --> 00:07:30,040
files because if all the process that

00:07:27,610 --> 00:07:31,450
update multiple files are in a goal

00:07:30,040 --> 00:07:33,730
state then we can conclude that the

00:07:31,450 --> 00:07:35,350
multiple file is good and then we can

00:07:33,730 --> 00:07:40,120
exclude this multiple file from a

00:07:35,350 --> 00:07:41,650
measurement however if we measure the

00:07:40,120 --> 00:07:44,560
wall system but the problem is that we

00:07:41,650 --> 00:07:46,680
end up may we may end up trusting other

00:07:44,560 --> 00:07:50,290
applications which are poorly written

00:07:46,680 --> 00:07:53,290
then are most susceptible to two attacks

00:07:50,290 --> 00:07:56,440
and then the real state of the system so

00:07:53,290 --> 00:07:58,330
we we have a system which is good for

00:07:56,440 --> 00:08:01,870
the verify because all the

00:07:58,330 --> 00:08:06,300
then the Dodgers are recognized but in

00:08:01,870 --> 00:08:09,039
fact the insecure application is

00:08:06,300 --> 00:08:11,469
injecting malicious sequence of bite

00:08:09,039 --> 00:08:13,229
into multiple files and this can be used

00:08:11,469 --> 00:08:19,629
to exploit existing vulnerabilities

00:08:13,229 --> 00:08:25,360
other processes so what we are proposing

00:08:19,629 --> 00:08:30,360
is to isolate the portion of the system

00:08:25,360 --> 00:08:32,589
that will perform critical operation and

00:08:30,360 --> 00:08:38,820
try to protect this with a mandatory

00:08:32,589 --> 00:08:41,950
access control so yeah so we are using a

00:08:38,820 --> 00:08:45,579
for example we can use as a Linux or as

00:08:41,950 --> 00:08:48,010
Mark and so if multiple files are

00:08:45,579 --> 00:08:51,880
included in the in the TC bean that was

00:08:48,010 --> 00:08:54,220
the computing base then we achieve our

00:08:51,880 --> 00:08:57,519
objective because if only multiple

00:08:54,220 --> 00:09:01,000
multiple file can be written only by the

00:08:57,519 --> 00:09:02,380
TCB then multiple files are are good so

00:09:01,000 --> 00:09:04,360
the monitor is access control is

00:09:02,380 --> 00:09:08,560
enforcing an integrity policy such as

00:09:04,360 --> 00:09:11,079
Biba or Clark Wilson and the unsecure up

00:09:08,560 --> 00:09:12,940
in this case is left outside the tcp so

00:09:11,079 --> 00:09:15,640
it cannot inject malicious sequence of

00:09:12,940 --> 00:09:18,190
bite and the monetarist control

00:09:15,640 --> 00:09:20,050
integrity policy will be included in the

00:09:18,190 --> 00:09:23,740
evidence that we sent to the verifier

00:09:20,050 --> 00:09:26,079
during a remote attestation so this

00:09:23,740 --> 00:09:28,449
solution has been proposed by Trent

00:09:26,079 --> 00:09:31,829
Jagger and it's called the police in a

00:09:28,449 --> 00:09:34,930
reduce identity measurement architecture

00:09:31,829 --> 00:09:36,519
so about the integrity policy we the

00:09:34,930 --> 00:09:39,519
bigger model is not very flexible

00:09:36,519 --> 00:09:42,329
because it does not allow my integrity

00:09:39,519 --> 00:09:46,930
subject to read a low integrity object

00:09:42,329 --> 00:09:48,910
and a low integrity of sub and does not

00:09:46,930 --> 00:09:52,420
allow a low integrity subject to write

00:09:48,910 --> 00:09:54,220
an integrity object so this is not very

00:09:52,420 --> 00:09:59,500
flexible instead of the clerk with a

00:09:54,220 --> 00:10:01,269
model allow subject integrity subject to

00:09:59,500 --> 00:10:03,720
read the low integrity object if the

00:10:01,269 --> 00:10:06,910
code is robust enough to end also

00:10:03,720 --> 00:10:11,820
militia potentially malicious

00:10:06,910 --> 00:10:14,500
data so policy reducing integrity

00:10:11,820 --> 00:10:16,420
measurement architecture seems the right

00:10:14,500 --> 00:10:19,330
solution to address the issue of

00:10:16,420 --> 00:10:22,720
multiple files so that if we address

00:10:19,330 --> 00:10:25,900
this our dime apiece here will be fully

00:10:22,720 --> 00:10:29,110
predictable however there are some issue

00:10:25,900 --> 00:10:33,070
because it's not very practical so

00:10:29,110 --> 00:10:36,820
finding a TCB in the Saline incidence

00:10:33,070 --> 00:10:39,250
policy is difficult because the general

00:10:36,820 --> 00:10:41,650
policy taken into account all possible

00:10:39,250 --> 00:10:45,270
application usage scenario so there are

00:10:41,650 --> 00:10:48,010
a lot of permission to consider and then

00:10:45,270 --> 00:10:50,290
it's very difficult to find a portion of

00:10:48,010 --> 00:10:54,490
the system which is isolated from the

00:10:50,290 --> 00:10:56,290
rest of the system and also when if we

00:10:54,490 --> 00:11:01,320
are able to find that this be inside the

00:10:56,290 --> 00:11:04,420
cell Enix policy this this DCP cannot be

00:11:01,320 --> 00:11:06,310
reused directly in other scenario but

00:11:04,420 --> 00:11:09,310
must be adopted because the application

00:11:06,310 --> 00:11:13,900
that are used them maybe they are

00:11:09,310 --> 00:11:19,210
different also prima does not take into

00:11:13,900 --> 00:11:22,930
account a offline offline attacks so we

00:11:19,210 --> 00:11:28,330
find so we were going into the the part

00:11:22,930 --> 00:11:31,060
of making an i prima protocol and to do

00:11:28,330 --> 00:11:33,370
that we are instead of considering the

00:11:31,060 --> 00:11:37,480
worst Linux policy we are considering

00:11:33,370 --> 00:11:39,880
only the process interaction so in the

00:11:37,480 --> 00:11:43,390
ceiling policy we have 100,000 rules and

00:11:39,880 --> 00:11:46,390
we saw that only 2.5 percent of this

00:11:43,390 --> 00:11:48,790
policy is really used in a in a system

00:11:46,390 --> 00:11:50,770
so will be much easier to find that the

00:11:48,790 --> 00:11:55,630
Seabee if you can reconsider process

00:11:50,770 --> 00:11:57,400
interaction also we want to protect

00:11:55,630 --> 00:12:01,600
against following attacks for example

00:11:57,400 --> 00:12:04,840
with IMAP laser and the EVM because one

00:12:01,600 --> 00:12:06,400
problem that we have is that when we're

00:12:04,840 --> 00:12:09,070
able to the system we don't know if the

00:12:06,400 --> 00:12:11,680
protection the ceiling exploitation was

00:12:09,070 --> 00:12:17,740
enabled in the previous in the previous

00:12:11,680 --> 00:12:19,930
boot so this is a for the reduction of

00:12:17,740 --> 00:12:20,499
that is in DCB so we are using a process

00:12:19,930 --> 00:12:22,949
interacts

00:12:20,499 --> 00:12:27,399
and this is an information flow analysis

00:12:22,949 --> 00:12:29,859
for the SSH server so SSH server is able

00:12:27,399 --> 00:12:31,629
to read the private key and answer

00:12:29,859 --> 00:12:34,419
configuration file but it's also able to

00:12:31,629 --> 00:12:36,579
read them Kerberos 5 configuration file

00:12:34,419 --> 00:12:41,559
which according to the policy can be

00:12:36,579 --> 00:12:44,769
written as by Randy and fatty PD so if

00:12:41,559 --> 00:12:46,929
we want to have a TCP and we don't we we

00:12:44,769 --> 00:12:49,989
want to not have an integrity violation

00:12:46,929 --> 00:12:54,519
we need to add this subject to the tcp

00:12:49,989 --> 00:12:56,919
remedy and a fattie PD and we can also

00:12:54,519 --> 00:13:01,089
screw that is the subject if we make the

00:12:56,919 --> 00:13:03,069
assumption that this Kerberos 5 is is

00:13:01,089 --> 00:13:05,799
not used but this is a model process

00:13:03,069 --> 00:13:07,389
that requires a lot of effort if instead

00:13:05,799 --> 00:13:10,509
that we considered process interaction

00:13:07,389 --> 00:13:14,469
we see if the CH server is reading

00:13:10,509 --> 00:13:16,719
Kerberos 5 and then if there is no

00:13:14,469 --> 00:13:21,249
record of the read we can automatically

00:13:16,719 --> 00:13:31,179
screw them Kerberos 5 subject and then

00:13:21,249 --> 00:13:33,729
the analysis is done so we solve at the

00:13:31,179 --> 00:13:36,999
problem of the practicality of the

00:13:33,729 --> 00:13:38,289
information for analyst so I think we we

00:13:36,999 --> 00:13:41,979
could be able but with the process

00:13:38,289 --> 00:13:45,479
interaction to find a tcp that satisfy a

00:13:41,979 --> 00:13:49,539
quiz or requirements now the remaining

00:13:45,479 --> 00:13:52,859
problems that we have to solve is the

00:13:49,539 --> 00:13:58,479
offline attack so what we want to do is

00:13:52,859 --> 00:14:01,089
to to know if multiple files were always

00:13:58,479 --> 00:14:03,699
protected by monetarists control i

00:14:01,089 --> 00:14:07,449
currently this is not possible because

00:14:03,699 --> 00:14:10,559
the VM he is not ceded to the operating

00:14:07,449 --> 00:14:14,470
system so is EC that can be sealed only

00:14:10,559 --> 00:14:21,699
with a until until a Carol because the

00:14:14,470 --> 00:14:23,739
PCR is not predictable so basically what

00:14:21,699 --> 00:14:25,899
the change that we are doing is to

00:14:23,739 --> 00:14:29,019
modify the sealing policy and we

00:14:25,899 --> 00:14:31,359
consider also the operating system so we

00:14:29,019 --> 00:14:33,389
want to see the a key that can be sealed

00:14:31,359 --> 00:14:37,049
can be inserted only if

00:14:33,389 --> 00:14:41,720
the city nooks is enabled and also the

00:14:37,049 --> 00:14:44,610
integrity policy is a is enforceable and

00:14:41,720 --> 00:14:48,449
which means that when we we bought the

00:14:44,610 --> 00:14:50,879
system we have we check if that

00:14:48,449 --> 00:14:54,929
protection is enabled and then the key

00:14:50,879 --> 00:14:58,589
can be acceded but then when we have a

00:14:54,929 --> 00:14:59,449
very Dutch Mac so if the keys not

00:14:58,589 --> 00:15:03,239
available

00:14:59,449 --> 00:15:07,199
obviously I'm I cannot produce a

00:15:03,239 --> 00:15:09,179
violation so we instead we have a very -

00:15:07,199 --> 00:15:11,339
Mac this means that the key has been

00:15:09,179 --> 00:15:13,889
ceded and then the file was created that

00:15:11,339 --> 00:15:17,249
when the protection was enabled and this

00:15:13,889 --> 00:15:19,170
is what we needed to in order to exclude

00:15:17,249 --> 00:15:22,379
that file from measurement because we

00:15:19,170 --> 00:15:28,470
know that the file was updated by the

00:15:22,379 --> 00:15:31,549
PCB so now we have the last step to make

00:15:28,470 --> 00:15:34,019
the I'm a PCR predictable

00:15:31,549 --> 00:15:36,959
currently we don't take into account the

00:15:34,019 --> 00:15:40,230
validity of - Mac in order to see if we

00:15:36,959 --> 00:15:43,679
should measure the file but now that the

00:15:40,230 --> 00:15:46,350
key is ceded to the operating system we

00:15:43,679 --> 00:15:49,529
can exclude the father from measurement

00:15:46,350 --> 00:15:51,029
so finally we have amend a measurement

00:15:49,529 --> 00:15:53,669
at least in which we have the the

00:15:51,029 --> 00:15:57,119
whitelist so which code which Phi we we

00:15:53,669 --> 00:15:59,939
allowed to do be assessed and also the

00:15:57,119 --> 00:16:06,269
integrity posited that is important in

00:15:59,939 --> 00:16:09,029
the system so since we are sealing them

00:16:06,269 --> 00:16:11,639
the key to the horizon we are also able

00:16:09,029 --> 00:16:15,419
to find that if there was a corruption

00:16:11,639 --> 00:16:19,259
in the previous report so we have an

00:16:15,419 --> 00:16:21,389
untrusted an administrator that for

00:16:19,259 --> 00:16:22,110
example a metal a different type of

00:16:21,389 --> 00:16:24,899
attacker

00:16:22,110 --> 00:16:27,470
it may try to to use an EVM key which is

00:16:24,899 --> 00:16:31,799
not selected to to the operating system

00:16:27,470 --> 00:16:33,989
but what we do is - including the

00:16:31,799 --> 00:16:37,410
measurement elisa also the parameter

00:16:33,989 --> 00:16:40,199
that will use it - to seal the key then

00:16:37,410 --> 00:16:42,360
the verifier is able to identify that

00:16:40,199 --> 00:16:45,149
the key is not good is not

00:16:42,360 --> 00:16:47,430
is not associated to the two table

00:16:45,149 --> 00:16:53,760
system so the system it does not pass

00:16:47,430 --> 00:16:58,529
the verification and also that the PM

00:16:53,760 --> 00:17:00,540
2.0 allows people to see the to see the

00:16:58,529 --> 00:17:03,329
key which is internally generating

00:17:00,540 --> 00:17:05,610
intent in the TPM which means that the

00:17:03,329 --> 00:17:08,459
key is never under control of the means

00:17:05,610 --> 00:17:12,540
that or unless the system is in a good

00:17:08,459 --> 00:17:16,829
state so we generate a good EVM key and

00:17:12,540 --> 00:17:18,059
then we are this is done by a system

00:17:16,829 --> 00:17:21,870
which can be also potentially

00:17:18,059 --> 00:17:24,720
compromised because the TPM protects is

00:17:21,870 --> 00:17:29,270
a tamper resistant so the key is inside

00:17:24,720 --> 00:17:33,179
within the chip and is not available so

00:17:29,270 --> 00:17:35,820
in the first boot we we run the good

00:17:33,179 --> 00:17:38,490
system with a put the multi rest control

00:17:35,820 --> 00:17:41,250
protection enable then keep the key can

00:17:38,490 --> 00:17:45,419
be in seeded and then the system is

00:17:41,250 --> 00:17:47,490
trying to write a multiple file but at

00:17:45,419 --> 00:17:50,100
some point we have an attack attack

00:17:47,490 --> 00:17:53,850
means that for example if I was not in

00:17:50,100 --> 00:17:56,669
the in the whitelist or there is an

00:17:53,850 --> 00:17:58,470
integrity violation for example or a

00:17:56,669 --> 00:18:00,650
process outside the DCP is trying to

00:17:58,470 --> 00:18:04,350
write a bootable file inside the PCB

00:18:00,650 --> 00:18:06,210
then the VM Keys is deleted which means

00:18:04,350 --> 00:18:11,040
that the system is no longer able to

00:18:06,210 --> 00:18:14,160
produce virus Mac so when we reboot the

00:18:11,040 --> 00:18:17,010
system this is the good system is a try

00:18:14,160 --> 00:18:19,559
is assessing the mutable file but and

00:18:17,010 --> 00:18:21,750
does not have a very - Mac which means

00:18:19,559 --> 00:18:24,419
that this will be included in the

00:18:21,750 --> 00:18:27,030
measurement list because we we measure

00:18:24,419 --> 00:18:29,850
all files which have invited Mac or

00:18:27,030 --> 00:18:32,030
missing edge Mac and this and then also

00:18:29,850 --> 00:18:34,230
the system does not pass the

00:18:32,030 --> 00:18:36,240
verification but the attacker doesn't

00:18:34,230 --> 00:18:38,580
did not happen in the current boot it

00:18:36,240 --> 00:18:42,510
happened in the previous boot but for

00:18:38,580 --> 00:18:44,040
the by the fact that - Mac was not

00:18:42,510 --> 00:18:47,870
calculated correctly in the previous

00:18:44,040 --> 00:18:52,169
boot then we are able to detect this so

00:18:47,870 --> 00:18:53,790
the last option is that the system I was

00:18:52,169 --> 00:18:56,820
in a good state during the

00:18:53,790 --> 00:18:59,820
in the first boot so the system was able

00:18:56,820 --> 00:19:01,680
to calculate the voltage Mac and then

00:18:59,820 --> 00:19:05,760
when the system rebooted

00:19:01,680 --> 00:19:08,460
then the system is able to to read read

00:19:05,760 --> 00:19:11,760
multiple file with the big Coolidge and

00:19:08,460 --> 00:19:15,360
Shmack and then they see that the

00:19:11,760 --> 00:19:18,840
measurement Alissa is still it's good

00:19:15,360 --> 00:19:22,860
because it contains that I just led a

00:19:18,840 --> 00:19:24,870
wait list and they could EVM key so the

00:19:22,860 --> 00:19:28,470
verification only in this case is

00:19:24,870 --> 00:19:29,850
successful and as you see we have only

00:19:28,470 --> 00:19:31,350
static measurements so we don't have a

00:19:29,850 --> 00:19:36,090
measurement of multiple five-window

00:19:31,350 --> 00:19:37,860
there any any other measurement and this

00:19:36,090 --> 00:19:40,380
is what we needed to do the implicitly

00:19:37,860 --> 00:19:45,120
motor attestation because the key can be

00:19:40,380 --> 00:19:47,280
seated only to fix only to one state so

00:19:45,120 --> 00:19:49,170
if the state of that in in the TPM is

00:19:47,280 --> 00:19:56,040
different than the key in the he cannot

00:19:49,170 --> 00:19:58,020
be used so for implicit remoted

00:19:56,040 --> 00:20:03,660
accession we have now two possibility

00:19:58,020 --> 00:20:05,640
for verification so the target system

00:20:03,660 --> 00:20:08,340
first create a certificate signing

00:20:05,640 --> 00:20:12,830
request and as part of this also send

00:20:08,340 --> 00:20:12,830
the event log and components which were

00:20:12,980 --> 00:20:18,840
assessed were used in the in the system

00:20:16,010 --> 00:20:21,900
and then the first option is that when

00:20:18,840 --> 00:20:24,350
the ACA gets the certificate signing

00:20:21,900 --> 00:20:28,470
request is also it also performed the

00:20:24,350 --> 00:20:32,130
verification of the sealing policy used

00:20:28,470 --> 00:20:34,470
for the Becky and if the sealing policy

00:20:32,130 --> 00:20:36,870
is acceptable than is under certificate

00:20:34,470 --> 00:20:39,000
and returning to the to the target

00:20:36,870 --> 00:20:42,180
system so when the implicitly

00:20:39,000 --> 00:20:46,370
motorisation is done so we establish a

00:20:42,180 --> 00:20:50,100
TLS protocol the management system

00:20:46,370 --> 00:20:52,800
received a certificate from from the

00:20:50,100 --> 00:20:54,300
Tory system and then get from the issuer

00:20:52,800 --> 00:20:55,850
you can trust

00:20:54,300 --> 00:20:58,890
just the

00:20:55,850 --> 00:21:03,750
the CA and the verification terminus

00:20:58,890 --> 00:21:06,090
yeah the other option is that the the

00:21:03,750 --> 00:21:08,340
very file gets the measurement log and

00:21:06,090 --> 00:21:10,679
the list of four components extracted

00:21:08,340 --> 00:21:13,520
from the certificate the city policy of

00:21:10,679 --> 00:21:18,380
the key and then it can perform the

00:21:13,520 --> 00:21:18,380
verification of this city policy

00:21:19,159 --> 00:21:25,110
so now few information about the

00:21:22,740 --> 00:21:26,789
implementation so then for floral SME

00:21:25,110 --> 00:21:30,679
used the to detect the process

00:21:26,789 --> 00:21:35,850
interaction and to enforce the integrity

00:21:30,679 --> 00:21:38,730
constraint so we have the civics policy

00:21:35,850 --> 00:21:40,710
we have an interaction between the SSH

00:21:38,730 --> 00:21:44,570
server and so it's trying to read the

00:21:40,710 --> 00:21:47,399
private key and we info floral SM we are

00:21:44,570 --> 00:21:49,919
intercepting this this request and we

00:21:47,399 --> 00:21:52,350
are recording this interaction the

00:21:49,919 --> 00:21:55,289
interaction is exported in user space so

00:21:52,350 --> 00:21:59,460
that we have all the list of operation

00:21:55,289 --> 00:22:02,880
that were performed by the system later

00:21:59,460 --> 00:22:06,649
so we have to identified to find the TCB

00:22:02,880 --> 00:22:09,860
of the system so the administrator

00:22:06,649 --> 00:22:13,020
passed the discovery interaction to the

00:22:09,860 --> 00:22:15,750
information flow analyzer and then the

00:22:13,020 --> 00:22:18,750
analyzer performed the analysis so it

00:22:15,750 --> 00:22:21,120
tries to identify the the tcp of the

00:22:18,750 --> 00:22:25,020
system which method in the requirements

00:22:21,120 --> 00:22:27,690
of Bieber or crack Wilson the output of

00:22:25,020 --> 00:22:30,600
Donald analyzer is the the list of

00:22:27,690 --> 00:22:35,340
trusted in the subject and object in the

00:22:30,600 --> 00:22:38,309
in the TCP during the deployment phase

00:22:35,340 --> 00:22:41,059
we we have selenium which is initialized

00:22:38,309 --> 00:22:44,549
with a with the policy when there is now

00:22:41,059 --> 00:22:47,640
that the cessation server is trying to

00:22:44,549 --> 00:22:49,529
read the private key the first operation

00:22:47,640 --> 00:22:51,480
that we do is to determine if the

00:22:49,529 --> 00:22:55,340
subject is entities and the object are

00:22:51,480 --> 00:22:58,450
in the tcp or not it's the same of

00:22:55,340 --> 00:23:02,060
what Matt Matt you gotta explain that so

00:22:58,450 --> 00:23:04,630
they're using the secure than EVM accent

00:23:02,060 --> 00:23:07,430
that attribute instead we have a list of

00:23:04,630 --> 00:23:09,920
off subject and object in the entity CP

00:23:07,430 --> 00:23:14,990
so we are doing in a slightly different

00:23:09,920 --> 00:23:18,410
way if the object is in the tcp then we

00:23:14,990 --> 00:23:20,570
have to check to the validation of of

00:23:18,410 --> 00:23:24,560
the metadata so we check if the label

00:23:20,570 --> 00:23:28,790
attached them to the file is as not

00:23:24,560 --> 00:23:30,890
being modified so that we we are we are

00:23:28,790 --> 00:23:31,460
sure that the label that is attached to

00:23:30,890 --> 00:23:34,880
doin today

00:23:31,460 --> 00:23:39,020
I know then to the process is respected

00:23:34,880 --> 00:23:43,850
one and then we enforce reinforced the

00:23:39,020 --> 00:23:47,000
integrity policy so if the subject is in

00:23:43,850 --> 00:23:53,300
the tcp it can read the only object in

00:23:47,000 --> 00:23:57,530
the tcp last step if the subject is in

00:23:53,300 --> 00:23:59,600
TCP since we have to also provide which

00:23:57,530 --> 00:24:03,980
code has been executed a part of the tcp

00:23:59,600 --> 00:24:07,250
we time--as we we measure the the code

00:24:03,980 --> 00:24:10,000
and immutable files now as i said

00:24:07,250 --> 00:24:14,210
multiple files we protect them with the

00:24:10,000 --> 00:24:18,260
integrity policy so in this case we are

00:24:14,210 --> 00:24:20,570
not we are not using a I am a policy in

00:24:18,260 --> 00:24:24,770
the sense that we provide the list of

00:24:20,570 --> 00:24:27,320
subject in the TCP but the the filtering

00:24:24,770 --> 00:24:30,170
so which subject but must be measured

00:24:27,320 --> 00:24:34,630
this information is provided by the info

00:24:30,170 --> 00:24:37,730
floral SM so we have the audit match and

00:24:34,630 --> 00:24:40,220
it is the newer last time which tells to

00:24:37,730 --> 00:24:45,020
imma which which files should be

00:24:40,220 --> 00:24:46,940
measured we have some source code for

00:24:45,020 --> 00:24:50,390
the for the Duchess list and is

00:24:46,940 --> 00:24:53,900
available in our github account also we

00:24:50,390 --> 00:24:58,610
build some binary packages for testing

00:24:53,900 --> 00:25:00,860
the featured more easily and we also

00:24:58,610 --> 00:25:03,410
provide another view of the feature in

00:25:00,860 --> 00:25:08,180
the trusted computing group developer

00:25:03,410 --> 00:25:09,010
portal so remoter decision is not widely

00:25:08,180 --> 00:25:13,510
you

00:25:09,010 --> 00:25:15,640
because I'm because evaluating the

00:25:13,510 --> 00:25:18,190
integrity of the operating system is

00:25:15,640 --> 00:25:21,510
very very complex and also we have the

00:25:18,190 --> 00:25:24,330
requirement of adding a dedicated server

00:25:21,510 --> 00:25:28,480
additional protocol in order to have

00:25:24,330 --> 00:25:30,040
remote position in a product so the

00:25:28,480 --> 00:25:33,340
solution would be to use instead

00:25:30,040 --> 00:25:35,770
implicitly motor station but the problem

00:25:33,340 --> 00:25:37,060
is that currently Emma alder I'm a PCR

00:25:35,770 --> 00:25:40,300
is not predictable

00:25:37,060 --> 00:25:43,570
and if we want to protect multiple files

00:25:40,300 --> 00:25:45,790
with a PCB this is currently not very

00:25:43,570 --> 00:25:49,510
very easy because the Civic's policies

00:25:45,790 --> 00:25:51,790
very is very big so we propose a

00:25:49,510 --> 00:25:54,580
solution that is comprehensive so we are

00:25:51,790 --> 00:25:59,590
taking into account multiple files oh

00:25:54,580 --> 00:26:01,630
and that now is a know is a problem

00:25:59,590 --> 00:26:04,210
because there are unknown digest in the

00:26:01,630 --> 00:26:06,940
measurement list so we fix this issue

00:26:04,210 --> 00:26:09,370
and also our solution is more practical

00:26:06,940 --> 00:26:12,130
because within visit the remote

00:26:09,370 --> 00:26:17,860
attestation the integration in top row

00:26:12,130 --> 00:26:20,230
that is very easy and we are using this

00:26:17,860 --> 00:26:26,550
solution in the future TPM you'll be

00:26:20,230 --> 00:26:26,550
about that's it questions

00:26:31,080 --> 00:26:36,970
so I was just curious

00:26:33,630 --> 00:26:39,010
no arguments that the fedora SELinux

00:26:36,970 --> 00:26:40,810
policy is quite large it's a general

00:26:39,010 --> 00:26:43,630
purpose policy right it's meant for

00:26:40,810 --> 00:26:44,620
everything I'm curious did you

00:26:43,630 --> 00:26:46,750
investigate

00:26:44,620 --> 00:26:48,940
you know customizing that policy to

00:26:46,750 --> 00:26:53,620
shrink it down to alleviate some of

00:26:48,940 --> 00:26:56,730
those problems so I know that there are

00:26:53,620 --> 00:27:01,180
billions for example that allows to

00:26:56,730 --> 00:27:03,400
disable some rules I did even more I try

00:27:01,180 --> 00:27:08,620
to modify the security server in order

00:27:03,400 --> 00:27:16,080
to to select only the part of the policy

00:27:08,620 --> 00:27:20,620
that was queried by the Dallas I'm and

00:27:16,080 --> 00:27:23,410
we saw that even in in this case that

00:27:20,620 --> 00:27:29,530
were very general tool for example there

00:27:23,410 --> 00:27:31,750
was a rule that allows pom agent to read

00:27:29,530 --> 00:27:34,030
the log file but then there was another

00:27:31,750 --> 00:27:37,630
more generic rule which allow every

00:27:34,030 --> 00:27:40,120
domain to read a log file and so this is

00:27:37,630 --> 00:27:44,170
a make the information flora is very

00:27:40,120 --> 00:27:46,720
complex because then you have an

00:27:44,170 --> 00:27:49,240
interaction not only from the file which

00:27:46,720 --> 00:27:51,630
should be able to read to write the log

00:27:49,240 --> 00:27:56,830
file but also from any other domain

00:27:51,630 --> 00:28:00,490
included so any type which is a part of

00:27:56,830 --> 00:28:02,350
the attributed domain I guess now that

00:28:00,490 --> 00:28:04,480
was my question like did you consider

00:28:02,350 --> 00:28:06,190
changing you know I'm going beyond

00:28:04,480 --> 00:28:07,960
boolean's but actually you know

00:28:06,190 --> 00:28:09,640
replacing some of the policy modules

00:28:07,960 --> 00:28:11,320
with some of your own that would you

00:28:09,640 --> 00:28:15,550
know remove some of these accesses that

00:28:11,320 --> 00:28:18,550
you didn't want I thought that adding

00:28:15,550 --> 00:28:21,520
something on top of on top of the

00:28:18,550 --> 00:28:23,410
enforcement of Selene Selene ox was more

00:28:21,520 --> 00:28:27,310
easier and because so you leave the

00:28:23,410 --> 00:28:32,110
policy as it is and then you just use

00:28:27,310 --> 00:28:33,460
the pattern that you need for for the

00:28:32,110 --> 00:28:36,370
information for analysis

00:28:33,460 --> 00:28:39,960
it is possible to modify the policy but

00:28:36,370 --> 00:28:41,880
also the problem is what also Margaret

00:28:39,960 --> 00:28:44,310
mentioned that

00:28:41,880 --> 00:28:49,230
we want that the solution is easy to

00:28:44,310 --> 00:28:51,510
understand by people so having a only

00:28:49,230 --> 00:28:56,540
few interaction to analyze and I think

00:28:51,510 --> 00:29:04,230
it makes the solution more practical

00:28:56,540 --> 00:29:10,089
questions not let's find a speaker

00:29:04,230 --> 00:29:10,089

YouTube URL: https://www.youtube.com/watch?v=7JtEbJ1FD0Q


