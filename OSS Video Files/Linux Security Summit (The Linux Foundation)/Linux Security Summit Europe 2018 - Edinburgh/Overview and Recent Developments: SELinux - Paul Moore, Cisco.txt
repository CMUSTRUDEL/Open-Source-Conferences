Title: Overview and Recent Developments: SELinux - Paul Moore, Cisco
Publication date: 2018-10-27
Playlist: Linux Security Summit Europe 2018 - Edinburgh
Description: 
	Overview and Recent Developments: SELinux - Paul Moore, CiscoÂ 

This proposal is for the annual "State of SELinux" presentation where the past year of SELinux related development is presented as well as current and expected future work. 

About avatar for Paul Moore
Paul Moore has been involved in various Linux security efforts since 2004, at Hewlett-Packard, Red Hat, and Cisco. He currently maintains the SELinux, audit, and labeled networking subsystems in the Linux Kernel as well as the libseccomp userspace library.
Captions: 
	00:00:00,350 --> 00:00:05,190
hi everybody and welcome to the final

00:00:03,929 --> 00:00:06,240
day to the talk session immediately

00:00:05,190 --> 00:00:09,540
after lunch

00:00:06,240 --> 00:00:13,320
so if you don't fall asleep I won't fall

00:00:09,540 --> 00:00:15,719
asleep so anyway my name is Paul Moore I

00:00:13,320 --> 00:00:17,609
maintained the SELinux subsystem in the

00:00:15,719 --> 00:00:20,820
kernel as well as audit labeled

00:00:17,609 --> 00:00:22,590
networking subsystems I also do Lib comm

00:00:20,820 --> 00:00:25,350
which I think we heard mentioned once or

00:00:22,590 --> 00:00:27,300
twice so if you're interested in a those

00:00:25,350 --> 00:00:28,920
things beyond the talk today you can

00:00:27,300 --> 00:00:30,029
find me in the hallways or whatnot I'm

00:00:28,920 --> 00:00:35,190
more than happy to talk with you about

00:00:30,029 --> 00:00:36,329
it anyway we got 30 minutes to explain

00:00:35,190 --> 00:00:38,010
everything you ever wanted to know about

00:00:36,329 --> 00:00:39,390
SC legs and all the stuff we've done

00:00:38,010 --> 00:00:40,890
over the past year and all the things

00:00:39,390 --> 00:00:43,680
we're going to do over the previous or

00:00:40,890 --> 00:00:47,010
the upcoming year 30 minutes so we'll

00:00:43,680 --> 00:00:50,670
get started so what is SEO annex SELinux

00:00:47,010 --> 00:00:52,500
is flexible mandatory access control and

00:00:50,670 --> 00:00:55,590
I'm sure that means pretty much nothing

00:00:52,500 --> 00:00:57,870
to most of you but we really want to

00:00:55,590 --> 00:00:59,820
drive home the flexible aspect part of

00:00:57,870 --> 00:01:02,010
this that's that's kind of the the key

00:00:59,820 --> 00:01:03,809
notion that you see pop up a lot when we

00:01:02,010 --> 00:01:06,240
talk about SELinux and its really kind

00:01:03,809 --> 00:01:08,369
of driven the design and the development

00:01:06,240 --> 00:01:10,200
of it over the years and that really

00:01:08,369 --> 00:01:12,270
starts with the policy language itself

00:01:10,200 --> 00:01:14,220
that's you know kind of the key

00:01:12,270 --> 00:01:16,439
important part of SELinux that a lot of

00:01:14,220 --> 00:01:18,770
people deal with that's kind of one of

00:01:16,439 --> 00:01:21,090
the main touch points of selinux and

00:01:18,770 --> 00:01:24,299
part of having a flexible policy

00:01:21,090 --> 00:01:26,850
language is basically first separating

00:01:24,299 --> 00:01:28,409
that from the enforcement mechanism this

00:01:26,850 --> 00:01:30,390
allows you first and foremost to have

00:01:28,409 --> 00:01:33,000
multiple different policies available

00:01:30,390 --> 00:01:34,770
and you see this on things like fedora

00:01:33,000 --> 00:01:36,570
and other lakes distributions that

00:01:34,770 --> 00:01:39,180
support selinux you know fedora ships

00:01:36,570 --> 00:01:42,060
with a targeted by default but we also

00:01:39,180 --> 00:01:44,610
offer our strict sand MOS policies I

00:01:42,060 --> 00:01:46,140
think there's also a base policy now but

00:01:44,610 --> 00:01:47,970
the point is you can you can pick and

00:01:46,140 --> 00:01:50,009
choose from some predefined selinux

00:01:47,970 --> 00:01:52,890
policies to suit whatever you're trying

00:01:50,009 --> 00:01:54,829
to do and there's also Android I think

00:01:52,890 --> 00:01:57,090
everyone at this point knows that all

00:01:54,829 --> 00:01:57,689
recent versions of Android from the past

00:01:57,090 --> 00:01:59,939
few years

00:01:57,689 --> 00:02:02,490
use selinux to help enforce their

00:01:59,939 --> 00:02:04,680
security policy and that once again has

00:02:02,490 --> 00:02:06,750
an entirely separate security policy

00:02:04,680 --> 00:02:09,869
from what you'll find on fedora or any

00:02:06,750 --> 00:02:11,700
other mainstream Linux distributions so

00:02:09,869 --> 00:02:13,630
that's kind of an important key thing to

00:02:11,700 --> 00:02:15,070
remember about SELinux is

00:02:13,630 --> 00:02:17,080
that you know if you don't like the icy

00:02:15,070 --> 00:02:18,250
links policy that you have you can go

00:02:17,080 --> 00:02:19,780
ahead and create your own there's

00:02:18,250 --> 00:02:22,420
nothing stopping you all the tools are

00:02:19,780 --> 00:02:24,880
freely available there's been you know

00:02:22,420 --> 00:02:27,160
more documentation written about SELinux

00:02:24,880 --> 00:02:30,430
than I can even begin to repeat in half

00:02:27,160 --> 00:02:32,410
an hour so there's plenty resources the

00:02:30,430 --> 00:02:35,800
other parallel policy is we have very

00:02:32,410 --> 00:02:38,470
granular access controls this allows you

00:02:35,800 --> 00:02:40,360
to really craft policy that is only

00:02:38,470 --> 00:02:43,810
going to permit you know the very bare

00:02:40,360 --> 00:02:46,480
minimum of privilege that you need for

00:02:43,810 --> 00:02:48,700
the application to do its job you know

00:02:46,480 --> 00:02:50,590
there's lots of discussion that goes

00:02:48,700 --> 00:02:52,210
back and forth as to you know what level

00:02:50,590 --> 00:02:52,990
of granularity is the right level of

00:02:52,210 --> 00:02:55,510
granularity

00:02:52,990 --> 00:02:57,370
but with SELinux we take the approach of

00:02:55,510 --> 00:02:59,890
trying to give you as fine-grained

00:02:57,370 --> 00:03:02,620
granularity as we can within the kernel

00:02:59,890 --> 00:03:05,770
and then we allow you as the policy

00:03:02,620 --> 00:03:07,450
writer to go ahead and you know you can

00:03:05,770 --> 00:03:09,370
abstract that out with how you write the

00:03:07,450 --> 00:03:11,050
policy you know if you if you want to go

00:03:09,370 --> 00:03:13,000
with a simple read write execute a pen

00:03:11,050 --> 00:03:14,860
you can do that with selinux policy but

00:03:13,000 --> 00:03:17,830
we also allow you to go much finer

00:03:14,860 --> 00:03:20,050
grained if you want and finally we have

00:03:17,830 --> 00:03:21,280
labels you know rather famously I think

00:03:20,050 --> 00:03:23,320
that's one of the big things when people

00:03:21,280 --> 00:03:25,180
first approach SELinux that they kind of

00:03:23,320 --> 00:03:28,360
have to wrap their head around is wear a

00:03:25,180 --> 00:03:30,190
label based security mechanism and we do

00:03:28,360 --> 00:03:33,130
this for good reason you know it's not

00:03:30,190 --> 00:03:35,740
because we like antagonizing people and

00:03:33,130 --> 00:03:37,870
our user base we kind of maybe a little

00:03:35,740 --> 00:03:39,670
bit from time to time but in general we

00:03:37,870 --> 00:03:42,610
do try to make this easy on people and

00:03:39,670 --> 00:03:44,770
the point of labels is it abstracts away

00:03:42,610 --> 00:03:46,270
a lot of the details about the objects

00:03:44,770 --> 00:03:49,330
you know you don't have to necessarily

00:03:46,270 --> 00:03:52,240
worry about you know what's the path

00:03:49,330 --> 00:03:54,790
name for a file because I think as we

00:03:52,240 --> 00:03:56,380
know and as containers have made you

00:03:54,790 --> 00:03:58,900
know very significant in the past few

00:03:56,380 --> 00:04:02,170
years you can have multiple path names

00:03:58,900 --> 00:04:05,470
to the same chunk of data on disk and so

00:04:02,170 --> 00:04:07,720
by kind of abstracting that and using

00:04:05,470 --> 00:04:09,280
labels instead you don't have to worry

00:04:07,720 --> 00:04:11,380
about the object specifics and you can

00:04:09,280 --> 00:04:14,080
instead focus on the security properties

00:04:11,380 --> 00:04:17,020
of the data and the objects on the

00:04:14,080 --> 00:04:19,810
system so that's kind of that's all I'm

00:04:17,020 --> 00:04:22,450
gonna say about the policy other than I

00:04:19,810 --> 00:04:23,800
guess a little why the other important

00:04:22,450 --> 00:04:26,260
part and this is where the mandatory

00:04:23,800 --> 00:04:27,520
access control comes in is that the

00:04:26,260 --> 00:04:30,430
policy is can

00:04:27,520 --> 00:04:33,190
told by the system administrator now you

00:04:30,430 --> 00:04:36,430
can write policy to allow individual

00:04:33,190 --> 00:04:38,080
users to you know modify certain aspects

00:04:36,430 --> 00:04:40,870
of certain attributes of the policy but

00:04:38,080 --> 00:04:43,210
in general that's a right that the

00:04:40,870 --> 00:04:44,919
administrator you know gives up to the

00:04:43,210 --> 00:04:46,659
individual users by default it's the

00:04:44,919 --> 00:04:49,870
administrator that controls the security

00:04:46,659 --> 00:04:51,550
policy not the object creator and what I

00:04:49,870 --> 00:04:53,500
mean by that is you know a traditional

00:04:51,550 --> 00:04:55,330
Linux system if you create a file in

00:04:53,500 --> 00:04:57,190
your home directory you can go ahead and

00:04:55,330 --> 00:04:59,979
set the mode bits on that right you can

00:04:57,190 --> 00:05:02,560
do Chu mod whatever you want and on a

00:04:59,979 --> 00:05:04,599
discretionary system those mode bits

00:05:02,560 --> 00:05:07,780
that's your security policy for that

00:05:04,599 --> 00:05:10,060
object and an SEO egg system you can do

00:05:07,780 --> 00:05:12,580
that you know SELinux doesn't replace

00:05:10,060 --> 00:05:14,530
discretionary access controls but

00:05:12,580 --> 00:05:17,440
they're just the mandatory access

00:05:14,530 --> 00:05:18,009
controls Vesey Linux are going to step

00:05:17,440 --> 00:05:19,960
in

00:05:18,009 --> 00:05:22,150
you know the discretionary controls

00:05:19,960 --> 00:05:23,800
might allow you access to the file but

00:05:22,150 --> 00:05:26,050
the mandatory access controls the

00:05:23,800 --> 00:05:28,599
selinux policy is still going to

00:05:26,050 --> 00:05:31,150
intervene if you're doing something that

00:05:28,599 --> 00:05:34,389
it doesn't want to allow according to

00:05:31,150 --> 00:05:37,900
the policy so that's the mandatory

00:05:34,389 --> 00:05:40,000
aspect of mandatory access control and I

00:05:37,900 --> 00:05:43,509
think that's probably about it but

00:05:40,000 --> 00:05:45,219
before I move on I will kind of try and

00:05:43,509 --> 00:05:47,770
do some questions as we go cuz there's a

00:05:45,219 --> 00:05:50,380
lot to digest does this make sense to

00:05:47,770 --> 00:05:54,069
everybody is everybody kind of I'm

00:05:50,380 --> 00:05:58,120
seeing a few nods so okay that's good so

00:05:54,069 --> 00:05:59,650
here's something normally I'd have more

00:05:58,120 --> 00:06:01,599
than 30 minutes and I could go into some

00:05:59,650 --> 00:06:03,279
of the more esoteric details about it

00:06:01,599 --> 00:06:04,449
but we don't really have the time so I'm

00:06:03,279 --> 00:06:06,669
gonna take a different approach today

00:06:04,449 --> 00:06:08,289
and kind of explain here's what an se

00:06:06,669 --> 00:06:10,389
Linux system looks like here's some of

00:06:08,289 --> 00:06:12,880
the things that happen when you install

00:06:10,389 --> 00:06:14,440
Fedora on your laptop or some other

00:06:12,880 --> 00:06:16,000
Linux distribution that sports testing

00:06:14,440 --> 00:06:18,340
likes here's what's going on under the

00:06:16,000 --> 00:06:20,020
hood so when you first boot the system

00:06:18,340 --> 00:06:21,789
you know you start up an init which is

00:06:20,020 --> 00:06:24,190
probably system D for everything

00:06:21,789 --> 00:06:26,740
nowadays but regardless of whether

00:06:24,190 --> 00:06:28,900
whatever your NIT subsystem is the first

00:06:26,740 --> 00:06:30,699
thing it's going to do as soon as it can

00:06:28,900 --> 00:06:32,440
is it's gonna load the SC Linux policy

00:06:30,699 --> 00:06:34,210
and this is important because without

00:06:32,440 --> 00:06:36,009
the policy loaded you can't really

00:06:34,210 --> 00:06:38,110
enforce anything because you don't know

00:06:36,009 --> 00:06:40,070
what your policy is you don't know what

00:06:38,110 --> 00:06:42,560
it is you need to enforce

00:06:40,070 --> 00:06:43,910
so as soon as you get enough of a system

00:06:42,560 --> 00:06:46,400
up and running you want to load that

00:06:43,910 --> 00:06:48,530
policy and then the other thing that's

00:06:46,400 --> 00:06:51,440
kind of interesting in the anit process

00:06:48,530 --> 00:06:52,910
when you're coming up in boot is you

00:06:51,440 --> 00:06:55,990
mount all your file systems right I mean

00:06:52,910 --> 00:06:59,300
this is not new we all know this but

00:06:55,990 --> 00:07:00,800
much is like you need to be careful when

00:06:59,300 --> 00:07:02,090
you mount a file system so you mount it

00:07:00,800 --> 00:07:04,790
in the right place in your directory

00:07:02,090 --> 00:07:06,590
tree for example you know you don't want

00:07:04,790 --> 00:07:08,840
to mount user under slash temp that's

00:07:06,590 --> 00:07:11,000
just not gonna get you anywhere you need

00:07:08,840 --> 00:07:12,440
to be careful that you mount the file

00:07:11,000 --> 00:07:14,540
system with the appropriate labels

00:07:12,440 --> 00:07:16,850
because what we were talking about last

00:07:14,540 --> 00:07:19,640
slide about selinux is very label based

00:07:16,850 --> 00:07:21,890
policy if you mount something with the

00:07:19,640 --> 00:07:23,990
wrong label you might not necessarily

00:07:21,890 --> 00:07:26,470
get the right access that you were

00:07:23,990 --> 00:07:29,150
expecting from your security policy and

00:07:26,470 --> 00:07:31,010
for the most part that just works you

00:07:29,150 --> 00:07:33,740
know if we're talking EXT based file

00:07:31,010 --> 00:07:35,600
systems or any other file systems that

00:07:33,740 --> 00:07:37,730
support extended attributes it's not a

00:07:35,600 --> 00:07:40,040
problem because we stored the SELinux

00:07:37,730 --> 00:07:41,960
labels and the extended attributes so as

00:07:40,040 --> 00:07:44,060
long as you've got a functioning SELinux

00:07:41,960 --> 00:07:45,620
system you're fine you mount the

00:07:44,060 --> 00:07:47,510
filesystem you don't need any additional

00:07:45,620 --> 00:07:49,730
options you're off and running

00:07:47,510 --> 00:07:51,170
but there are some file systems as we

00:07:49,730 --> 00:07:56,380
all know that don't support extended

00:07:51,170 --> 00:08:00,950
attributes you know USB fat file systems

00:07:56,380 --> 00:08:04,580
sifts network file systems we could go

00:08:00,950 --> 00:08:07,040
on so in that case we have mount options

00:08:04,580 --> 00:08:11,060
which allow you to specify a label for

00:08:07,040 --> 00:08:13,880
that entire file system so depending on

00:08:11,060 --> 00:08:15,710
how your individual policy is set up if

00:08:13,880 --> 00:08:17,420
you don't like the default label that

00:08:15,710 --> 00:08:19,490
we're going to assign to your USB flash

00:08:17,420 --> 00:08:20,960
drive that you plug in you just need to

00:08:19,490 --> 00:08:23,060
make sure that if you're doing this at

00:08:20,960 --> 00:08:24,620
boot that you know you set up your FS

00:08:23,060 --> 00:08:26,600
tab so that it has the appropriate

00:08:24,620 --> 00:08:30,890
option so that it gets mounted correctly

00:08:26,600 --> 00:08:33,349
but in the most cases with you know any

00:08:30,890 --> 00:08:35,290
distribution that's set up for you know

00:08:33,349 --> 00:08:37,970
interactive you see like a workstation

00:08:35,290 --> 00:08:39,470
laptops or to use they're gonna have

00:08:37,970 --> 00:08:42,229
some defaults in place that work for you

00:08:39,470 --> 00:08:43,700
just fine but just wanted to mention

00:08:42,229 --> 00:08:46,490
that up Franck's that's an important

00:08:43,700 --> 00:08:48,260
part and then once you get everything

00:08:46,490 --> 00:08:50,450
mounted you've got your ceilings policy

00:08:48,260 --> 00:08:52,540
loaded you're off and running it's it's

00:08:50,450 --> 00:08:55,240
rather uninteresting it's pretty

00:08:52,540 --> 00:08:57,730
straightforward at this point the

00:08:55,240 --> 00:08:59,680
colonel does all the enforcement you

00:08:57,730 --> 00:09:02,110
know we heard I believe it was James

00:08:59,680 --> 00:09:04,029
yesterday talking about you know the

00:09:02,110 --> 00:09:06,490
inevitability of failure and you know

00:09:04,029 --> 00:09:08,949
not relying on applications to enforce

00:09:06,490 --> 00:09:10,180
your security policy James is looking at

00:09:08,949 --> 00:09:12,220
me like I'm crazy so it was probably

00:09:10,180 --> 00:09:15,339
somebody else my apologies

00:09:12,220 --> 00:09:18,339
oh it seems okay alright haven't gone

00:09:15,339 --> 00:09:19,779
completely crazy but anyway so the

00:09:18,339 --> 00:09:21,699
colonel handles all of our enforcement

00:09:19,779 --> 00:09:23,860
of the security policy it also handles

00:09:21,699 --> 00:09:25,360
the management of the SELinux labels so

00:09:23,860 --> 00:09:28,089
this is you know when you read a file

00:09:25,360 --> 00:09:29,769
off of disk the colonel will go out and

00:09:28,089 --> 00:09:31,240
you know it'll look at the extended

00:09:29,769 --> 00:09:32,949
attributes and say okay hey here's my

00:09:31,240 --> 00:09:35,589
selinux label that I'm gonna associate

00:09:32,949 --> 00:09:37,120
with this file or if it's like we talked

00:09:35,589 --> 00:09:38,440
about where you specify with a mount

00:09:37,120 --> 00:09:39,940
option it's gonna say okay I'm gonna

00:09:38,440 --> 00:09:42,009
grab this from the from the mount

00:09:39,940 --> 00:09:45,639
options off the super block and you know

00:09:42,009 --> 00:09:47,769
use that for all the disk accesses all

00:09:45,639 --> 00:09:49,269
the files that come off that disk it's

00:09:47,769 --> 00:09:52,000
also going to handle any transient

00:09:49,269 --> 00:09:54,959
objects you know so think of all the

00:09:52,000 --> 00:09:58,620
various IPC mechanisms network sockets

00:09:54,959 --> 00:10:00,940
pseudo file systems you name it and

00:09:58,620 --> 00:10:02,860
processes do I mean processes aren't an

00:10:00,940 --> 00:10:05,319
object but they're very transient by

00:10:02,860 --> 00:10:07,630
nature and the kernel also managed

00:10:05,319 --> 00:10:10,199
labeling for those so that's pretty much

00:10:07,630 --> 00:10:13,240
it the last bullet point is management

00:10:10,199 --> 00:10:15,190
as anybody who's maintained a system for

00:10:13,240 --> 00:10:17,199
more than a week knows there's security

00:10:15,190 --> 00:10:18,990
updates there's patches things you need

00:10:17,199 --> 00:10:21,339
to apply

00:10:18,990 --> 00:10:24,220
selinux policy gets patched just like

00:10:21,339 --> 00:10:26,980
anything else so you know keep your

00:10:24,220 --> 00:10:30,220
selinux policy up to date as long as

00:10:26,980 --> 00:10:31,569
your kernel and user space and we also

00:10:30,220 --> 00:10:34,089
have a number of SEO Alliance tools

00:10:31,569 --> 00:10:36,670
which allow you to manage the policy I

00:10:34,089 --> 00:10:39,519
think we mentioned bullying's during one

00:10:36,670 --> 00:10:42,010
of the Q&A sessions that's an important

00:10:39,519 --> 00:10:44,620
part of customizing the selinux policy

00:10:42,010 --> 00:10:46,990
there's some great man pages on those

00:10:44,620 --> 00:10:48,160
which will explain what they do that's

00:10:46,990 --> 00:10:51,160
really kind of pretty cool they're

00:10:48,160 --> 00:10:53,170
generated automatically yeah so that's a

00:10:51,160 --> 00:10:55,209
great way to customize the SSE Linux

00:10:53,170 --> 00:10:57,490
policy for your individual use case

00:10:55,209 --> 00:10:59,560
without actually having to go out right

00:10:57,490 --> 00:11:01,750
that's the elects policy yourself but

00:10:59,560 --> 00:11:04,149
you can always do that it's talked about

00:11:01,750 --> 00:11:05,690
earlier you can write an entire a seelix

00:11:04,149 --> 00:11:07,880
policy from scratch

00:11:05,690 --> 00:11:10,010
you can write individual modules and

00:11:07,880 --> 00:11:11,570
there's even some cool stuff that we've

00:11:10,010 --> 00:11:14,300
done in the past few years where we have

00:11:11,570 --> 00:11:16,580
a prioritized module store so you can do

00:11:14,300 --> 00:11:19,940
something neat of you know creating your

00:11:16,580 --> 00:11:21,530
own policy for apache' and whenever your

00:11:19,940 --> 00:11:23,540
distribution ships an update to the

00:11:21,530 --> 00:11:26,090
Apache policy module it won't blow away

00:11:23,540 --> 00:11:29,300
your changes that was really annoying

00:11:26,090 --> 00:11:30,740
for a long time but anyway once again

00:11:29,300 --> 00:11:32,740
you not have time to go into all this

00:11:30,740 --> 00:11:35,090
stuff but this sounds interesting to you

00:11:32,740 --> 00:11:37,030
find me afterwards and I can give you

00:11:35,090 --> 00:11:39,470
some pointers

00:11:37,030 --> 00:11:41,630
so what is the enforcement actually look

00:11:39,470 --> 00:11:44,300
like right so we've done all this work

00:11:41,630 --> 00:11:47,030
but what actually happens in the kernel

00:11:44,300 --> 00:11:48,890
whenever you you do an access request

00:11:47,030 --> 00:11:50,690
so whenever kernel season access

00:11:48,890 --> 00:11:54,110
requests you know we always talk about

00:11:50,690 --> 00:11:56,510
subjects and objects and the access so

00:11:54,110 --> 00:11:59,090
the subjects it's pretty simple it's a

00:11:56,510 --> 00:12:01,160
process right it's a user process it's

00:11:59,090 --> 00:12:04,040
something on the system that is trying

00:12:01,160 --> 00:12:05,930
to do something to something else that

00:12:04,040 --> 00:12:08,330
clear it's a lot of some things in there

00:12:05,930 --> 00:12:11,150
but so in this particular case I always

00:12:08,330 --> 00:12:13,760
like to use Apache as my example so in

00:12:11,150 --> 00:12:16,280
this case the web web server Apache

00:12:13,760 --> 00:12:17,900
that's going to be your subject and the

00:12:16,280 --> 00:12:20,870
files on disk that it's trying to serve

00:12:17,900 --> 00:12:22,730
up that's going to be your object and in

00:12:20,870 --> 00:12:24,740
this particular example the access is

00:12:22,730 --> 00:12:26,690
read right we're just Apache is trying

00:12:24,740 --> 00:12:29,810
to read an HTML file so it can serve it

00:12:26,690 --> 00:12:32,390
up to a client it's pretty simple and on

00:12:29,810 --> 00:12:34,390
that third line it's in blue but I'm not

00:12:32,390 --> 00:12:36,890
sure how well it's coming across the

00:12:34,390 --> 00:12:39,860
presentation around the video but it's

00:12:36,890 --> 00:12:42,590
that last line you see selinux has

00:12:39,860 --> 00:12:47,450
labeled the subject as httpd underscore

00:12:42,590 --> 00:12:52,040
t the object is httpd cysts content t

00:12:47,450 --> 00:12:55,339
and the access this is selinux policy

00:12:52,040 --> 00:12:59,839
it's a file and we're granting open and

00:12:55,339 --> 00:13:03,230
read access so that HTTP DT has open and

00:12:59,839 --> 00:13:07,070
read access for files labeled HTTP cysts

00:13:03,230 --> 00:13:10,520
context T and that's selinux policy I

00:13:07,070 --> 00:13:13,820
keep you not we would tack and allow on

00:13:10,520 --> 00:13:15,820
the front and a semicolon at the end and

00:13:13,820 --> 00:13:19,110
change the order of that a little bit

00:13:15,820 --> 00:13:21,380
but that's SELinux policy so

00:13:19,110 --> 00:13:23,430
if you can understand these three things

00:13:21,380 --> 00:13:26,670
that's all you need

00:13:23,430 --> 00:13:29,490
SELinux is not necessarily a complicated

00:13:26,670 --> 00:13:31,070
thing now it's one of those things it's

00:13:29,490 --> 00:13:33,990
a simple concept that of course is

00:13:31,070 --> 00:13:36,690
repeated you know hundreds and thousands

00:13:33,990 --> 00:13:40,740
of times but at its core this is SELinux

00:13:36,690 --> 00:13:41,970
access control so I guess I'll pause for

00:13:40,740 --> 00:13:45,350
a minute does anybody have any questions

00:13:41,970 --> 00:13:48,140
about this is this kind of make sense

00:13:45,350 --> 00:13:52,020
all right great

00:13:48,140 --> 00:13:54,750
so here's my marketing plug for all of

00:13:52,020 --> 00:13:56,220
you here's why you should use SELinux so

00:13:54,750 --> 00:13:58,260
if you've got a system that supports

00:13:56,220 --> 00:14:03,150
selinux and you've got it turned off

00:13:58,260 --> 00:14:05,940
here's why you should turn it on so back

00:14:03,150 --> 00:14:08,730
before virtualization and containers the

00:14:05,940 --> 00:14:11,010
the big self reci Linux was that it was

00:14:08,730 --> 00:14:12,480
a great way to restrict services on your

00:14:11,010 --> 00:14:15,210
system that we're running in high-risk

00:14:12,480 --> 00:14:17,070
environments so a patch is a great

00:14:15,210 --> 00:14:20,460
example right you've got a public

00:14:17,070 --> 00:14:23,850
network facing daemon which has you know

00:14:20,460 --> 00:14:25,980
a huge codebase you're running

00:14:23,850 --> 00:14:28,110
executables out of it

00:14:25,980 --> 00:14:30,690
very high risk you know you're you're

00:14:28,110 --> 00:14:32,700
potentially getting untrusted user input

00:14:30,690 --> 00:14:34,650
into it so you want to try and contain

00:14:32,700 --> 00:14:38,130
that as much as you can and that's what

00:14:34,650 --> 00:14:41,400
SC Linux does and in fact we you know I

00:14:38,130 --> 00:14:43,440
don't want to say this was great but if

00:14:41,400 --> 00:14:45,720
you all remember shellshock from several

00:14:43,440 --> 00:14:47,640
years ago now I mean it was it was bad

00:14:45,720 --> 00:14:51,990
at the time but considering events over

00:14:47,640 --> 00:14:53,820
the past year it's kind of like yeah but

00:14:51,990 --> 00:14:56,730
it was it was pretty scary at the time

00:14:53,820 --> 00:14:59,520
and SELinux this was a great use case of

00:14:56,730 --> 00:15:01,650
people that had SELinux you know running

00:14:59,520 --> 00:15:04,980
on their system and containing the

00:15:01,650 --> 00:15:07,080
Apache daemon you know we mitigated the

00:15:04,980 --> 00:15:09,420
exploit sure you could still exploit

00:15:07,080 --> 00:15:12,510
Apache and you know get your remote

00:15:09,420 --> 00:15:15,120
shell but selinux confined the Apache

00:15:12,510 --> 00:15:18,120
daemon to only the accesses which you

00:15:15,120 --> 00:15:21,090
allowed in your selinux policy so sure

00:15:18,120 --> 00:15:22,440
they had access to your server but they

00:15:21,090 --> 00:15:23,730
couldn't really do anything you know

00:15:22,440 --> 00:15:24,960
they couldn't get access to Oetzi

00:15:23,730 --> 00:15:28,380
password they couldn't get access to

00:15:24,960 --> 00:15:30,120
Etsy shadow so that was you know that's

00:15:28,380 --> 00:15:32,130
kind of the big selling point you know

00:15:30,120 --> 00:15:32,700
selinux has value to you even if you're

00:15:32,130 --> 00:15:34,200
not running

00:15:32,700 --> 00:15:36,540
virtualization even if you're not

00:15:34,200 --> 00:15:38,010
running containers although show of

00:15:36,540 --> 00:15:42,270
hands who's not running some form of

00:15:38,010 --> 00:15:46,760
virtualization or containers hey two

00:15:42,270 --> 00:15:49,890
three all right great

00:15:46,760 --> 00:15:52,110
so I'm and of course you know you you

00:15:49,890 --> 00:15:53,490
can't give a talk or have any sort of

00:15:52,110 --> 00:15:55,050
technology these days if you don't have

00:15:53,490 --> 00:15:57,090
some support for virtualization in

00:15:55,050 --> 00:15:58,920
containers despite the fact that we have

00:15:57,090 --> 00:16:02,340
a whopping three people here that you

00:15:58,920 --> 00:16:04,830
know could care less so the big thing

00:16:02,340 --> 00:16:08,240
about SELinux is that you know much like

00:16:04,830 --> 00:16:10,890
we can contain you know individual

00:16:08,240 --> 00:16:12,810
servers on the system we want to be able

00:16:10,890 --> 00:16:14,880
to take that same principle and apply it

00:16:12,810 --> 00:16:16,680
to individual VMs and individual

00:16:14,880 --> 00:16:18,840
containers and we can do that and

00:16:16,680 --> 00:16:21,020
there's some really neat things that

00:16:18,840 --> 00:16:23,340
have done have been done called s Verte

00:16:21,020 --> 00:16:25,740
that leverage some of the MCS

00:16:23,340 --> 00:16:27,480
capabilities which I realize I'm just

00:16:25,740 --> 00:16:28,800
throwing names at you at this point

00:16:27,480 --> 00:16:31,890
but you can always google them

00:16:28,800 --> 00:16:35,070
afterwards but basically this allows us

00:16:31,890 --> 00:16:37,500
to separate not only the guests and the

00:16:35,070 --> 00:16:40,770
containers from the host system but also

00:16:37,500 --> 00:16:42,750
from each other so you know you can't

00:16:40,770 --> 00:16:44,490
steal Pepsi secrets and Pepsi can't

00:16:42,750 --> 00:16:46,860
steal coke secrets and nobody can steal

00:16:44,490 --> 00:16:48,990
the hosts secrets and everybody's happy

00:16:46,860 --> 00:16:54,090
in their own little silos

00:16:48,990 --> 00:16:56,400
however as Kacey alluded to beforehand

00:16:54,090 --> 00:16:58,350
the tricky part about setting up these

00:16:56,400 --> 00:17:01,260
big silos is you still need to share in

00:16:58,350 --> 00:17:05,250
between and selinux thanks to that very

00:17:01,260 --> 00:17:06,839
granular access control policy now going

00:17:05,250 --> 00:17:08,910
to say it's easy because control sharing

00:17:06,839 --> 00:17:12,390
is never easy if anyone tells you that

00:17:08,910 --> 00:17:14,160
it is they're lying but we provide lots

00:17:12,390 --> 00:17:17,310
of mechanisms and lots of avenues for

00:17:14,160 --> 00:17:19,850
you to do that and we've got support for

00:17:17,310 --> 00:17:23,839
pretty much all the virtualization

00:17:19,850 --> 00:17:28,950
mechanisms out there all the container

00:17:23,839 --> 00:17:31,620
ones dockers kubernetes run seek Rio I I

00:17:28,950 --> 00:17:33,630
kind of lose track of all the container

00:17:31,620 --> 00:17:35,400
of runtimes that support it but it's out

00:17:33,630 --> 00:17:39,000
there most likely you've you've got

00:17:35,400 --> 00:17:40,140
support for it and also we talked about

00:17:39,000 --> 00:17:42,570
this a little before wide platform

00:17:40,140 --> 00:17:44,480
support right UCSC Linux on servers you

00:17:42,570 --> 00:17:47,000
see it on laptops

00:17:44,480 --> 00:17:48,440
we talked about Android you see it

00:17:47,000 --> 00:17:50,059
increasingly in all the various

00:17:48,440 --> 00:17:52,880
different network appliances that are

00:17:50,059 --> 00:17:54,679
popping up so it's it's pretty much

00:17:52,880 --> 00:17:56,950
everywhere thanks a lot to that

00:17:54,679 --> 00:17:59,419
flexibility that we talked about earlier

00:17:56,950 --> 00:18:01,850
unless but not least something that I

00:17:59,419 --> 00:18:05,059
think probably nobody here cares about

00:18:01,850 --> 00:18:07,010
Common Criteria MLS capabilities yeah

00:18:05,059 --> 00:18:09,290
it's kind of cool if you've never gone

00:18:07,010 --> 00:18:10,640
through a Common Criteria evaluation I

00:18:09,290 --> 00:18:14,150
think everybody should go through it

00:18:10,640 --> 00:18:17,600
once and then walk away it's a very

00:18:14,150 --> 00:18:19,970
interesting experience but yeah just

00:18:17,600 --> 00:18:22,760
just two at once and be good with that

00:18:19,970 --> 00:18:24,860
so but anyway yeah the reason I put this

00:18:22,760 --> 00:18:28,100
on the slide is that SELinux has gone

00:18:24,860 --> 00:18:30,770
through multiple third-party security

00:18:28,100 --> 00:18:32,809
evaluations over the years so it's got a

00:18:30,770 --> 00:18:34,070
really good pedigree it's been run

00:18:32,809 --> 00:18:38,720
through the wringer more times than I

00:18:34,070 --> 00:18:40,549
care to count so not too bad and get ten

00:18:38,720 --> 00:18:44,750
minutes left I think so this is SELinux

00:18:40,549 --> 00:18:45,980
in 2018 but first off before we talk

00:18:44,750 --> 00:18:49,429
about I just when I give you a quick

00:18:45,980 --> 00:18:50,690
little anniversary so kind of piggyback

00:18:49,429 --> 00:18:52,669
in why I said about Common Criteria

00:18:50,690 --> 00:18:55,610
SELinux is pretty mature it's been

00:18:52,669 --> 00:18:57,980
around for a long time first release was

00:18:55,610 --> 00:19:00,320
back in 2000 so were almost 18 years old

00:18:57,980 --> 00:19:03,380
so I don't think I think the drinking

00:19:00,320 --> 00:19:05,510
age here in Scotland's 18 so we're not

00:19:03,380 --> 00:19:07,910
quite there yet but if you want to buy a

00:19:05,510 --> 00:19:11,390
see likes a drink I will gladly take it

00:19:07,910 --> 00:19:13,429
on behalf of the codebase so anyway but

00:19:11,390 --> 00:19:15,860
and we've been in mainline for 15 years

00:19:13,429 --> 00:19:18,020
it's been shipping as part of a you know

00:19:15,860 --> 00:19:20,540
an Enterprise Linux distribution for 13

00:19:18,020 --> 00:19:24,410
years and it's been in Android for five

00:19:20,540 --> 00:19:26,809
and I think you know the general thing

00:19:24,410 --> 00:19:28,700
is roughly 2 billion devices at this

00:19:26,809 --> 00:19:30,230
point and that's just for Android that's

00:19:28,700 --> 00:19:32,230
not counting all the servers and the

00:19:30,230 --> 00:19:36,470
appliances and whatnot so there's

00:19:32,230 --> 00:19:37,640
billions of billions served all right so

00:19:36,470 --> 00:19:38,690
now we're going to quickly go over some

00:19:37,640 --> 00:19:41,150
of the stuff that's happened over

00:19:38,690 --> 00:19:42,950
roughly the past year so I I think when

00:19:41,150 --> 00:19:46,460
I was taking this into account it was

00:19:42,950 --> 00:19:51,169
maybe July of 2017 up till I think about

00:19:46,460 --> 00:19:52,640
August of of 2018 so as far as the

00:19:51,169 --> 00:19:55,909
kernel goes

00:19:52,640 --> 00:19:58,480
we added access controls free BPF so you

00:19:55,909 --> 00:20:01,840
know loading programs

00:19:58,480 --> 00:20:04,419
you know using those leveraging them we

00:20:01,840 --> 00:20:07,450
have access controls for those we've

00:20:04,419 --> 00:20:10,480
added proper SCTP access controls for a

00:20:07,450 --> 00:20:12,100
long time we had SCTP access controls

00:20:10,480 --> 00:20:14,009
just pretty much at the socket level you

00:20:12,100 --> 00:20:16,299
know can you create an sctp socket

00:20:14,009 --> 00:20:18,519
whatnot you know bind to it read from

00:20:16,299 --> 00:20:20,860
write it from it but over the past year

00:20:18,519 --> 00:20:22,659
if you know anything about SCTP it's a

00:20:20,860 --> 00:20:25,899
very complicated protocol there's

00:20:22,659 --> 00:20:28,480
associations and there's multihoming and

00:20:25,899 --> 00:20:31,779
a bunch of cool stuff but we actually

00:20:28,480 --> 00:20:35,230
added selinux hooks for all those SCTP

00:20:31,779 --> 00:20:37,239
specific niceties or functionality so

00:20:35,230 --> 00:20:41,379
that was cool that was a long time

00:20:37,239 --> 00:20:43,600
coming we also added us sop r seck to

00:20:41,379 --> 00:20:46,869
use sockets that you get from socket

00:20:43,600 --> 00:20:48,759
pair so pure sec you probably not used

00:20:46,869 --> 00:20:51,850
but you've maybe have heard of get peer

00:20:48,759 --> 00:20:53,230
con which basically allows you to see

00:20:51,850 --> 00:20:55,389
what's on the other end of your socket

00:20:53,230 --> 00:20:57,489
connection and see what that SELinux

00:20:55,389 --> 00:20:59,859
security domain is so it's kind of a

00:20:57,489 --> 00:21:02,139
nice way of determining who you're

00:20:59,859 --> 00:21:05,499
talking to in a secure fashion what

00:21:02,139 --> 00:21:07,899
their label is for a variety of legacy

00:21:05,499 --> 00:21:09,820
reasons that we can't touch bond in the

00:21:07,899 --> 00:21:11,499
next nine minutes we didn't have that on

00:21:09,820 --> 00:21:14,559
socket parent till very recently we've

00:21:11,499 --> 00:21:17,739
got that now and just within the past

00:21:14,559 --> 00:21:19,269
month I mean a couple weeks really we've

00:21:17,739 --> 00:21:21,519
moved to a new mailing list so we're on

00:21:19,269 --> 00:21:24,070
Viger that kernel.org there's the

00:21:21,519 --> 00:21:25,899
address so we announced this everywhere

00:21:24,070 --> 00:21:27,759
we could think of but I'm announcing it

00:21:25,899 --> 00:21:29,559
again here so if you if you wanted to be

00:21:27,759 --> 00:21:34,210
involved in selinux make sure you

00:21:29,559 --> 00:21:35,679
subscribe to that list and I just wanted

00:21:34,210 --> 00:21:36,820
to give a chance to say thank you to

00:21:35,679 --> 00:21:38,859
everybody

00:21:36,820 --> 00:21:40,840
unfortunately I can't list everyone who

00:21:38,859 --> 00:21:43,720
contributed a patch over the past year

00:21:40,840 --> 00:21:45,639
but these are the top ten by Lyons

00:21:43,720 --> 00:21:47,109
change so I was gonna say if you see

00:21:45,639 --> 00:21:53,559
your name on the list go ahead and stand

00:21:47,109 --> 00:21:57,220
up it's nobody really you're not just

00:21:53,559 --> 00:21:58,539
being shy right now okay all right well

00:21:57,220 --> 00:22:01,720
I was gonna have everybody clap for you

00:21:58,539 --> 00:22:02,950
but you're not here so yeah that's true

00:22:01,720 --> 00:22:08,050
that's true

00:22:02,950 --> 00:22:12,310
thanks guys and you'll note I

00:22:08,050 --> 00:22:15,700
I myself added 27 lines so yeah it's

00:22:12,310 --> 00:22:20,230
really proud of that very important 27

00:22:15,700 --> 00:22:22,630
lines sorry user space changes you know

00:22:20,230 --> 00:22:25,300
we talked about SCTP so there was some

00:22:22,630 --> 00:22:28,090
some user space changes to add support

00:22:25,300 --> 00:22:28,960
for SCTP objects in the policy tool

00:22:28,090 --> 00:22:31,180
chain

00:22:28,960 --> 00:22:33,040
similar thing with InfiniBand we added

00:22:31,180 --> 00:22:34,600
kernel support for InfiniBand last year

00:22:33,040 --> 00:22:36,790
but there was a few things that were

00:22:34,600 --> 00:22:40,540
kind of trailing in user space but we

00:22:36,790 --> 00:22:43,540
got that taken care of this year SE

00:22:40,540 --> 00:22:46,150
manage is one of the SE linux user space

00:22:43,540 --> 00:22:47,980
tools that allow you to manage the

00:22:46,150 --> 00:22:51,010
selinux policy and we're not very

00:22:47,980 --> 00:22:53,830
creative with naming so that allows you

00:22:51,010 --> 00:22:55,870
now to list out all the potential home

00:22:53,830 --> 00:23:00,280
directory labels we didn't have that

00:22:55,870 --> 00:23:02,800
before SE module I alluded a little bit

00:23:00,280 --> 00:23:06,370
earlier that SELinux policy ships and

00:23:02,800 --> 00:23:09,010
modules it does sv module allows you to

00:23:06,370 --> 00:23:10,870
load and remove multiple modules at once

00:23:09,010 --> 00:23:13,660
it used to be you had to do it you know

00:23:10,870 --> 00:23:16,390
individually which is fine and the

00:23:13,660 --> 00:23:18,610
policy is reloaded in an atomic fashion

00:23:16,390 --> 00:23:20,230
we link it all together in user space

00:23:18,610 --> 00:23:23,860
and then push it down into the kernel

00:23:20,230 --> 00:23:26,290
and one one fell swoop that way we avoid

00:23:23,860 --> 00:23:28,090
any race conditions so the nice part

00:23:26,290 --> 00:23:30,160
about being able to specify multiple

00:23:28,090 --> 00:23:31,570
modules on the command line is now you

00:23:30,160 --> 00:23:33,220
don't have to do multiple reload

00:23:31,570 --> 00:23:35,620
operations in the kernel you can batch

00:23:33,220 --> 00:23:37,420
all the changes up and one link it all

00:23:35,620 --> 00:23:40,240
together push it down so it saves you a

00:23:37,420 --> 00:23:43,390
little bit of time and did I mention we

00:23:40,240 --> 00:23:45,100
moved the SC Linux mailing list okay in

00:23:43,390 --> 00:23:50,410
case I didn't you know that's that's the

00:23:45,100 --> 00:23:55,000
new address we'll try this again anybody

00:23:50,410 --> 00:23:56,230
see their name Wow okay I was hoping

00:23:55,000 --> 00:23:58,180
we'd have somebody alright

00:23:56,230 --> 00:23:59,920
well anyway if you see these people or

00:23:58,180 --> 00:24:03,370
if you know these people drop them an

00:23:59,920 --> 00:24:05,170
email say thank you very much this is

00:24:03,370 --> 00:24:07,240
you know like so many open-source

00:24:05,170 --> 00:24:09,250
software it's you know there's a whole

00:24:07,240 --> 00:24:10,750
team of people that are into this and

00:24:09,250 --> 00:24:12,820
you know some people are regular

00:24:10,750 --> 00:24:14,260
contributors some people just contribute

00:24:12,820 --> 00:24:16,030
a few patches and

00:24:14,260 --> 00:24:19,120
we're happy to have all the help we can

00:24:16,030 --> 00:24:23,200
so if you're watching this on the video

00:24:19,120 --> 00:24:25,360
on YouTube thank you guys and reference

00:24:23,200 --> 00:24:28,059
policy this is kind of the flagship

00:24:25,360 --> 00:24:30,760
SELinux policy we talked about earlier

00:24:28,059 --> 00:24:33,820
you can have all sorts of policies but

00:24:30,760 --> 00:24:36,040
the reference policy is the one that all

00:24:33,820 --> 00:24:37,870
others tend to be based upon Fedora is

00:24:36,040 --> 00:24:40,240
heavily based off reference policy I

00:24:37,870 --> 00:24:42,520
think androids gone way off into the

00:24:40,240 --> 00:24:44,350
weeds on their own thing but they have

00:24:42,520 --> 00:24:46,150
reason for it it's a it's a different

00:24:44,350 --> 00:24:48,580
you know different very specialized use

00:24:46,150 --> 00:24:50,919
case so anyway the reference policy has

00:24:48,580 --> 00:24:53,820
been around for ages a lot of people

00:24:50,919 --> 00:24:56,080
work on it they've I think there was two

00:24:53,820 --> 00:24:59,200
significant releases over the past year

00:24:56,080 --> 00:25:01,929
a lot of fixes enablement of new

00:24:59,200 --> 00:25:03,460
software I had started to write these

00:25:01,929 --> 00:25:05,410
out onto the slide and the slide was

00:25:03,460 --> 00:25:07,690
getting ridiculously long and so I just

00:25:05,410 --> 00:25:09,190
kind of paired it off and want to say

00:25:07,690 --> 00:25:11,620
there's a couple releases with a lot of

00:25:09,190 --> 00:25:14,559
good new stuff in it but most

00:25:11,620 --> 00:25:17,470
significantly over the past year they've

00:25:14,559 --> 00:25:19,330
moved off from where they were and now

00:25:17,470 --> 00:25:21,700
they're all hosted under the selinux

00:25:19,330 --> 00:25:23,710
project on github so we've got the user

00:25:21,700 --> 00:25:27,100
space development the reference policy

00:25:23,710 --> 00:25:29,500
our kernel test suite there's a mirror

00:25:27,100 --> 00:25:31,360
of the kernel repository on github there

00:25:29,500 --> 00:25:34,840
so you can file issues and do all that

00:25:31,360 --> 00:25:38,950
stuff for just logistical reasons the

00:25:34,840 --> 00:25:41,679
canonical se Linux kernel tree lives on

00:25:38,950 --> 00:25:45,070
kernel.org it's just the way it is but

00:25:41,679 --> 00:25:46,750
the mirror on github is maintained every

00:25:45,070 --> 00:25:48,880
time you do a push to the kernel or get

00:25:46,750 --> 00:25:50,620
also get sent off to github so you know

00:25:48,880 --> 00:25:54,340
you can base off get up if that's easier

00:25:50,620 --> 00:25:56,740
for you and hey did I mention new

00:25:54,340 --> 00:25:58,600
mailing list but you'll notice this one

00:25:56,740 --> 00:26:03,460
is different this is selinux - wrath

00:25:58,600 --> 00:26:04,840
policy at bigger kernel.org we've always

00:26:03,460 --> 00:26:06,809
just had separate mailing us for the

00:26:04,840 --> 00:26:09,220
reference policy it's just the way it is

00:26:06,809 --> 00:26:11,799
sometimes you'll see stuff cross-posted

00:26:09,220 --> 00:26:13,630
because there's just overlap for a lot

00:26:11,799 --> 00:26:15,940
of things but if you're just interested

00:26:13,630 --> 00:26:17,980
in policy development go ahead and

00:26:15,940 --> 00:26:21,760
subscribe to a rough policy it's fairly

00:26:17,980 --> 00:26:22,750
low fairly low traffic but you know

00:26:21,760 --> 00:26:27,850
you'll see all the changes in

00:26:22,750 --> 00:26:32,480
discussions there anybody

00:26:27,850 --> 00:26:34,550
No okay well same sort of thing now

00:26:32,480 --> 00:26:39,290
these numbers are numbers a little bit

00:26:34,550 --> 00:26:41,960
skewed so Chris yeah when I when I when

00:26:39,290 --> 00:26:43,790
I first did this I you know I there's a

00:26:41,960 --> 00:26:46,130
get DM which will get you some

00:26:43,790 --> 00:26:48,170
statistics for a get tree and it's

00:26:46,130 --> 00:26:49,910
pretty cool in google it and when I

00:26:48,170 --> 00:26:51,290
first ran this I you know I just copy

00:26:49,910 --> 00:26:54,040
and paste it and then I looked at I'm

00:26:51,290 --> 00:26:57,580
like whoa turns out what this was is

00:26:54,040 --> 00:27:00,610
part of when they moved to github we had

00:26:57,580 --> 00:27:03,710
the reference policy was split into a

00:27:00,610 --> 00:27:05,990
sub mod get sub module and the main get

00:27:03,710 --> 00:27:07,250
repository and this is one of those

00:27:05,990 --> 00:27:08,240
things that seemed like a really good

00:27:07,250 --> 00:27:10,370
idea at the time

00:27:08,240 --> 00:27:12,410
but if anybody's used to get sub modules

00:27:10,370 --> 00:27:14,750
you kind of learned that looks great on

00:27:12,410 --> 00:27:17,780
paper but in practice it's a royal pain

00:27:14,750 --> 00:27:20,150
well I the reference policy guys decided

00:27:17,780 --> 00:27:21,920
that you know it didn't look that good

00:27:20,150 --> 00:27:24,590
anymore so they just kind of merged it

00:27:21,920 --> 00:27:26,180
all in and that's why Chris's numbers

00:27:24,590 --> 00:27:28,150
get a little inflated it's when he

00:27:26,180 --> 00:27:30,410
basically brought everything from the

00:27:28,150 --> 00:27:34,760
contribs sub module into the main

00:27:30,410 --> 00:27:37,460
repository but that said Chris does a

00:27:34,760 --> 00:27:38,780
ton of work on the reference policy the

00:27:37,460 --> 00:27:42,380
reference policy wouldn't be what it is

00:27:38,780 --> 00:27:47,480
without him so but that's why he's at

00:27:42,380 --> 00:27:49,730
96% so last but not least got two

00:27:47,480 --> 00:27:52,070
minutes left if you want to get involved

00:27:49,730 --> 00:27:53,780
choose how to do it go ahead and take

00:27:52,070 --> 00:27:55,940
picture of the slide I'll leave it up

00:27:53,780 --> 00:27:59,660
there and it's a little bit small I do

00:27:55,940 --> 00:28:01,220
apologize but anyway first link is to

00:27:59,660 --> 00:28:02,930
the github I talked about it that's

00:28:01,220 --> 00:28:04,310
that's got everything that's got the

00:28:02,930 --> 00:28:07,400
kernel mirror that's get user space

00:28:04,310 --> 00:28:09,020
reference policy our test suite that's a

00:28:07,400 --> 00:28:12,200
good place to start if you want to check

00:28:09,020 --> 00:28:15,680
this out later underneath it that's the

00:28:12,200 --> 00:28:17,900
canonical kernel.org tree for the VSC

00:28:15,680 --> 00:28:19,760
linux subsystem kernel you can go there

00:28:17,900 --> 00:28:20,720
but like I said if you're more

00:28:19,760 --> 00:28:23,210
comfortable with github

00:28:20,720 --> 00:28:25,610
you can get it there too these are the

00:28:23,210 --> 00:28:27,830
mailing lists in case you missed all my

00:28:25,610 --> 00:28:30,170
other comments that we've changed that's

00:28:27,830 --> 00:28:32,480
where they're at you can also see the

00:28:30,170 --> 00:28:34,400
official archives they're on lower back

00:28:32,480 --> 00:28:38,000
kernel.org which is you know a pretty

00:28:34,400 --> 00:28:40,480
new thing that's set up but it's pretty

00:28:38,000 --> 00:28:42,070
nice and we've had problems

00:28:40,480 --> 00:28:45,970
other archived services over the years

00:28:42,070 --> 00:28:47,860
so at least the legs foundation people

00:28:45,970 --> 00:28:50,980
have set this up and promise that it

00:28:47,860 --> 00:28:53,190
will keep working so last but not least

00:28:50,980 --> 00:28:56,440
this how you can get in touch with me

00:28:53,190 --> 00:28:58,750
Twitter and an email but I would really

00:28:56,440 --> 00:29:01,330
encourage you to you know join the

00:28:58,750 --> 00:29:03,490
mailing list participate there there's a

00:29:01,330 --> 00:29:05,200
lot of smart people that are involved in

00:29:03,490 --> 00:29:08,950
SELinux development all the different

00:29:05,200 --> 00:29:10,809
aspects they're gonna provide you much

00:29:08,950 --> 00:29:12,030
better answers much quicker than I will

00:29:10,809 --> 00:29:15,690
probably be able to I'm just one person

00:29:12,030 --> 00:29:18,760
there's a whole army of contributors so

00:29:15,690 --> 00:29:20,020
with that I guess I'll just open it up

00:29:18,760 --> 00:29:27,400
for questions for the last couple of

00:29:20,020 --> 00:29:30,610
minutes we have questions all right No

00:29:27,400 --> 00:29:31,530
so just like where would I find the

00:29:30,610 --> 00:29:34,480
mailing list

00:29:31,530 --> 00:29:36,549
that's a good question James thank you

00:29:34,480 --> 00:29:38,650
I'm not sure if I mentioned it

00:29:36,549 --> 00:29:40,809
previously but we've just recently moved

00:29:38,650 --> 00:29:44,230
mailing lists to Viger so you can find a

00:29:40,809 --> 00:29:46,799
link up there in the slide any other

00:29:44,230 --> 00:29:46,799
questions

00:29:49,020 --> 00:29:55,510
why hasn't the ball replied to my

00:29:51,400 --> 00:29:57,130
subscription requests yet you know we

00:29:55,510 --> 00:29:59,710
had a little bit of a problem they were

00:29:57,130 --> 00:30:01,510
asking for higher wages and more time

00:29:59,710 --> 00:30:04,360
off you know we just figured we could

00:30:01,510 --> 00:30:09,400
Lam run 24/7 not Pam and they're kind of

00:30:04,360 --> 00:30:10,840
rebuking at that now yeah I the only

00:30:09,400 --> 00:30:13,720
thing I will say is I know there's been

00:30:10,840 --> 00:30:17,260
issues with the past on Viger with

00:30:13,720 --> 00:30:18,520
various things if you go to your web

00:30:17,260 --> 00:30:20,919
browser if you just go to Viger

00:30:18,520 --> 00:30:23,620
kernel.org there's there's some tools

00:30:20,919 --> 00:30:25,600
you down at the bottom of the page

00:30:23,620 --> 00:30:28,030
there's like an MX verify tool and some

00:30:25,600 --> 00:30:29,530
other things that can help you maybe

00:30:28,030 --> 00:30:33,730
troubleshoot there's usually some sort

00:30:29,530 --> 00:30:37,000
of DNS issue or some mailing thing I I

00:30:33,730 --> 00:30:39,780
don't own Viger so there's a limited

00:30:37,000 --> 00:30:41,679
number of things I can do I will say

00:30:39,780 --> 00:30:43,750
mailing lists in the open source world

00:30:41,679 --> 00:30:46,179
are a lot more difficult than you would

00:30:43,750 --> 00:30:50,140
think they would be for something so

00:30:46,179 --> 00:30:52,890
simple they can be very complicated and

00:30:50,140 --> 00:30:52,890
yeah what questions

00:30:53,600 --> 00:31:00,959
okay so let's find a speaker

00:30:56,140 --> 00:31:00,959

YouTube URL: https://www.youtube.com/watch?v=w_BOZ_nn9r4


