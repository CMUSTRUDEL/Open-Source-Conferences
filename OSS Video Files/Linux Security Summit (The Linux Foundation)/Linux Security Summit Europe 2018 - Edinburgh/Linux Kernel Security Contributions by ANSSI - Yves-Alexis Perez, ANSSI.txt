Title: Linux Kernel Security Contributions by ANSSI - Yves-Alexis Perez, ANSSI
Publication date: 2018-10-26
Playlist: Linux Security Summit Europe 2018 - Edinburgh
Description: 
	Linux Kernel Security Contributions by ANSSI - Yves-Alexis Perez, ANSSI 

 ANSSI, a French government agency tasked with securing systems and networks across the public administration, is a long time user and contributor of the Linux ecosystem. It has recently started contributing directly to the Linux kernel, and intends to contribute more in the near future.

This presentation will focus on the benefits of contributing back and investing time for Linux kernel security development, for the agency as well as for other downstream users like public administration and enterprises. It’ll use multiple examples, ranging from the Landlock LSM to the internally developed CLIP Linux distribution, whose patches against the Linux kernel will be submitted upstream in the upcoming months. 

About Yves-Alexis Perez
Yves-Alexis works at ANSSI as deputy head of the Hardware and Software architecture lab. He’s a Debian developer and member of the security team. He’s mostly interested in the hardware/software interactions (like between devices and the kernel), especially at the security level.
Captions: 
	00:00:00,110 --> 00:00:10,320
hi everybody that's it hey everyone hear

00:00:04,710 --> 00:00:13,440
me okay thank you so first a bit of

00:00:10,320 --> 00:00:15,509
introduction so it it won't be a really

00:00:13,440 --> 00:00:21,029
technical presentation it's more about

00:00:15,509 --> 00:00:24,900
giving some feedback about our use and

00:00:21,029 --> 00:00:28,789
our contributions in Linux security

00:00:24,900 --> 00:00:31,320
where I work for so Who am I and

00:00:28,789 --> 00:00:34,290
ethylene and said I'm Alexa Perez I'm

00:00:31,320 --> 00:00:37,950
French sorry for the accent I'm working

00:00:34,290 --> 00:00:40,140
at the inss aisle which is a in French

00:00:37,950 --> 00:00:44,579
Iran's national dress security system

00:00:40,140 --> 00:00:46,920
definition and I'm a team leader in a in

00:00:44,579 --> 00:00:49,890
a lab which is working on hardware and

00:00:46,920 --> 00:00:52,829
software architecture so mostly it's

00:00:49,890 --> 00:00:55,350
interaction between software and

00:00:52,829 --> 00:00:57,809
hardware and especially operating system

00:00:55,350 --> 00:01:02,010
security like Linux obviously some

00:00:57,809 --> 00:01:04,979
microchannels we do a mobile device

00:01:02,010 --> 00:01:07,680
security we develop clippers which is

00:01:04,979 --> 00:01:09,810
distribution and I'm also a Debian

00:01:07,680 --> 00:01:13,320
developer working on the security team

00:01:09,810 --> 00:01:16,229
and cannot him and some other stuff I'm

00:01:13,320 --> 00:01:20,040
mostly interested in low-level security

00:01:16,229 --> 00:01:21,409
and hardening including obviously the

00:01:20,040 --> 00:01:26,909
Jacana

00:01:21,409 --> 00:01:31,439
about NSSI so yeah NSS is a French cyber

00:01:26,909 --> 00:01:33,210
security agency concrete of precision we

00:01:31,439 --> 00:01:35,880
are not an intelligence agency so

00:01:33,210 --> 00:01:38,939
contrary to some other models we only do

00:01:35,880 --> 00:01:41,850
our task is to protect the French

00:01:38,939 --> 00:01:43,770
government networks and systems we have

00:01:41,850 --> 00:01:46,920
in the French government as other

00:01:43,770 --> 00:01:49,790
agencies which do intelligent stuff and

00:01:46,920 --> 00:01:53,640
we are only tasked to protect our

00:01:49,790 --> 00:01:55,979
internal networks inside the agency so

00:01:53,640 --> 00:01:58,079
it's basically like maybe 500 people

00:01:55,979 --> 00:02:00,270
inside the agency we have a specific

00:01:58,079 --> 00:02:02,930
part which is concerned leopard on the

00:02:00,270 --> 00:02:07,049
browser ease which is basically some

00:02:02,930 --> 00:02:11,099
research part and we have a we are as a

00:02:07,049 --> 00:02:12,790
pool of expertise for other other people

00:02:11,099 --> 00:02:15,610
in the agency

00:02:12,790 --> 00:02:18,849
and we advise them about cryptography

00:02:15,610 --> 00:02:21,849
networking writing system everything

00:02:18,849 --> 00:02:24,310
related to security and we do some

00:02:21,849 --> 00:02:26,290
research in there and development some

00:02:24,310 --> 00:02:31,450
academic publications and some free

00:02:26,290 --> 00:02:35,019
software contributions French government

00:02:31,450 --> 00:02:37,480
is a large user of free software we are

00:02:35,019 --> 00:02:40,810
not the only ones but like and I know

00:02:37,480 --> 00:02:46,030
about this one so we do a lot of we use

00:02:40,810 --> 00:02:50,290
a lot of Linux distributions here and

00:02:46,030 --> 00:02:53,829
there we also use a lot of free software

00:02:50,290 --> 00:02:55,299
applications again on servers and

00:02:53,829 --> 00:02:57,400
workstations

00:02:55,299 --> 00:02:59,709
we are the French government - so a

00:02:57,400 --> 00:03:04,329
researcher contributor and free software

00:02:59,709 --> 00:03:08,409
producer so we there are some quite

00:03:04,329 --> 00:03:10,359
large free software project which are

00:03:08,409 --> 00:03:13,989
actually actually develop it inside the

00:03:10,359 --> 00:03:15,790
French government there was I'm not sure

00:03:13,989 --> 00:03:17,769
how much it's currently developed that

00:03:15,790 --> 00:03:22,329
says peep a content management system is

00:03:17,769 --> 00:03:24,340
done from a French team initially we

00:03:22,329 --> 00:03:27,069
have a some other agency which maintains

00:03:24,340 --> 00:03:30,220
a repository repository list of values

00:03:27,069 --> 00:03:33,310
free software contribution by a French

00:03:30,220 --> 00:03:37,319
administrations and recently so in 2016

00:03:33,310 --> 00:03:41,040
our law was passed which actually made

00:03:37,319 --> 00:03:44,440
data produced by the French government

00:03:41,040 --> 00:03:48,129
available has opened by default and it

00:03:44,440 --> 00:03:50,680
includes a source code so basically by

00:03:48,129 --> 00:03:54,660
default code produced by someone in the

00:03:50,680 --> 00:03:54,660
French administration should be public

00:03:55,560 --> 00:04:02,620
some to the current situation with Linux

00:03:59,139 --> 00:04:05,069
specifically so we the French government

00:04:02,620 --> 00:04:07,720
has a large Linux usage

00:04:05,069 --> 00:04:10,500
obviously we are we run a lot of servers

00:04:07,720 --> 00:04:14,260
on Linux in from various distributions

00:04:10,500 --> 00:04:16,599
human community or commercial we have us

00:04:14,260 --> 00:04:20,079
and we also use Linux based appliances

00:04:16,599 --> 00:04:22,659
like pro firewalls or ideas VPN instra

00:04:20,079 --> 00:04:24,470
and here and there are some Linux

00:04:22,659 --> 00:04:28,430
workstations

00:04:24,470 --> 00:04:31,400
and inss is tasked to secure well he is

00:04:28,430 --> 00:04:33,140
responsible to protect values French

00:04:31,400 --> 00:04:39,160
networks but we can't do everything we

00:04:33,140 --> 00:04:43,100
are 500 so we try to delegate a lot so

00:04:39,160 --> 00:04:46,060
we try to basically produce

00:04:43,100 --> 00:04:49,400
documentation recommendations for

00:04:46,060 --> 00:04:52,040
various IT systems and we try to

00:04:49,400 --> 00:04:56,030
actually secure stuff the more upstream

00:04:52,040 --> 00:04:57,890
possible so it ends up being used for

00:04:56,030 --> 00:05:01,540
values administration whether it's

00:04:57,890 --> 00:05:07,340
Ministry of Defense also in education

00:05:01,540 --> 00:05:09,430
culture whatever so we try to secure to

00:05:07,340 --> 00:05:11,720
provide some recommendation and

00:05:09,430 --> 00:05:14,810
contribute where we can where we can and

00:05:11,720 --> 00:05:19,540
we try to organize a contribution where

00:05:14,810 --> 00:05:23,090
it's possible so let's talk a bit about

00:05:19,540 --> 00:05:25,130
past and current contribution so we

00:05:23,090 --> 00:05:29,930
produce actually a lot of documentation

00:05:25,130 --> 00:05:32,590
so we try to to provide insights to

00:05:29,930 --> 00:05:35,660
various users and instructors and

00:05:32,590 --> 00:05:38,260
developers so I'm sorry the

00:05:35,660 --> 00:05:40,580
documentation is from mostly in French

00:05:38,260 --> 00:05:44,980
but we do some Linux distribution

00:05:40,580 --> 00:05:47,960
hardening guides so recommendation and

00:05:44,980 --> 00:05:49,910
hold on how to sexual sexual

00:05:47,960 --> 00:05:52,669
distribution in one since its installed

00:05:49,910 --> 00:05:54,980
and it's oriented towards system Ares

00:05:52,669 --> 00:05:57,200
administrators as well as produce

00:05:54,980 --> 00:05:59,270
produced developers for example for

00:05:57,200 --> 00:06:01,010
appearances

00:05:59,270 --> 00:06:02,690
we are currently working on a Linux

00:06:01,010 --> 00:06:05,900
kernel a learning guide in French with

00:06:02,690 --> 00:06:08,330
it which is basically which tries to

00:06:05,900 --> 00:06:10,730
take values recommend existing

00:06:08,330 --> 00:06:12,710
recommendations like say SPP recognition

00:06:10,730 --> 00:06:15,050
and stuff like that and turn it into

00:06:12,710 --> 00:06:17,630
something usable by French system

00:06:15,050 --> 00:06:21,950
administrators we also have some

00:06:17,630 --> 00:06:24,590
specific documentation like stuff from

00:06:21,950 --> 00:06:27,260
project produced the developers and for

00:06:24,590 --> 00:06:30,140
example I only come to back to that just

00:06:27,260 --> 00:06:31,880
a bit later some security architectures

00:06:30,140 --> 00:06:33,530
for clear boys forum and some

00:06:31,880 --> 00:06:36,630
documentation which this time is in

00:06:33,530 --> 00:06:39,810
English about the secretary

00:06:36,630 --> 00:06:42,360
picture of a 3x5 every link is a

00:06:39,810 --> 00:06:49,590
inter-site so we'll be able to reach

00:06:42,360 --> 00:06:52,290
them a bit about clippers so it's it's a

00:06:49,590 --> 00:06:56,570
Linux distribution which is developed

00:06:52,290 --> 00:07:00,570
internally inside the agency since about

00:06:56,570 --> 00:07:04,850
2005 and it's based on gen to orange and

00:07:00,570 --> 00:07:07,230
it's it was intended as an internal

00:07:04,850 --> 00:07:13,020
distributed distribution for the French

00:07:07,230 --> 00:07:17,970
government so it has some specific usage

00:07:13,020 --> 00:07:22,200
restrictions it's well it's supposed to

00:07:17,970 --> 00:07:25,500
be only under under a drag for office

00:07:22,200 --> 00:07:27,780
work is not developed in developer blogs

00:07:25,500 --> 00:07:30,360
or something and so it includes a

00:07:27,780 --> 00:07:32,970
specific kernel are running and it it

00:07:30,360 --> 00:07:36,870
should it's supposed to be used as in

00:07:32,970 --> 00:07:41,430
multi-level operating systems and we

00:07:36,870 --> 00:07:44,400
recently released it what really the

00:07:41,430 --> 00:07:50,100
specific bits as Astra software so as a

00:07:44,400 --> 00:07:55,460
beginning of talks that September so we

00:07:50,100 --> 00:07:58,890
have some feedbacks about using harden a

00:07:55,460 --> 00:08:02,040
hardened system inside inside the agency

00:07:58,890 --> 00:08:04,020
and elsewhere so as I already said it's

00:08:02,040 --> 00:08:06,450
so it's running inside the

00:08:04,020 --> 00:08:09,300
administration for ten million ten years

00:08:06,450 --> 00:08:12,050
and it's used by non-technical users so

00:08:09,300 --> 00:08:15,420
basically it's for office work and

00:08:12,050 --> 00:08:19,860
actually we didn't have that much user

00:08:15,420 --> 00:08:21,840
complaints the first one usually is that

00:08:19,860 --> 00:08:24,510
it's not Windows and so is there is no

00:08:21,840 --> 00:08:27,630
Microsoft Office or Outlook or stuff

00:08:24,510 --> 00:08:30,240
like that so obviously it's it's a

00:08:27,630 --> 00:08:32,760
program if you use to that but we didn't

00:08:30,240 --> 00:08:35,580
have that much feedback at least not

00:08:32,760 --> 00:08:38,130
negative feedback on hardening and

00:08:35,580 --> 00:08:43,830
security measure even though it's

00:08:38,130 --> 00:08:47,600
actually quite it's not real permissive

00:08:43,830 --> 00:08:49,769
for example as is a strict right

00:08:47,600 --> 00:08:52,559
executive Alisha so frozen

00:08:49,769 --> 00:08:54,989
familiar there is no place in the system

00:08:52,559 --> 00:08:57,329
when you can add at the same time I've

00:08:54,989 --> 00:08:59,459
right permissions and executable

00:08:57,329 --> 00:09:01,619
permissions so whether on the file

00:08:59,459 --> 00:09:04,199
system or in memory if you are able to

00:09:01,619 --> 00:09:07,649
write somewhere you can't execute stuff

00:09:04,199 --> 00:09:10,230
there basically it's to rest treat an

00:09:07,649 --> 00:09:12,480
attacker so an attacker which would be

00:09:10,230 --> 00:09:14,699
able to execute code by exploiting a

00:09:12,480 --> 00:09:19,110
vulnerability wouldn't be able to then

00:09:14,699 --> 00:09:21,029
import its own tools that's something

00:09:19,110 --> 00:09:25,199
that technical users are missing

00:09:21,029 --> 00:09:27,540
obviously for example the dual security

00:09:25,199 --> 00:09:31,739
level is interesting for administrators

00:09:27,540 --> 00:09:34,559
so they have one one environment it's a

00:09:31,739 --> 00:09:37,949
full of environment which is connected

00:09:34,559 --> 00:09:40,379
to the the standard Network and as an

00:09:37,949 --> 00:09:43,619
isolated environment which is connected

00:09:40,379 --> 00:09:46,439
to the administration network that's

00:09:43,619 --> 00:09:48,299
something administrators really like to

00:09:46,439 --> 00:09:51,089
script stuff and it's not really

00:09:48,299 --> 00:09:53,220
possible on on clip so there are missing

00:09:51,089 --> 00:09:56,220
that but besides that we don't have a

00:09:53,220 --> 00:10:00,420
lot of negative feedback from developers

00:09:56,220 --> 00:10:02,160
it was a bit harder because clip OS is

00:10:00,420 --> 00:10:06,029
actually a complete in a complex beast

00:10:02,160 --> 00:10:10,589
it started in 2005 and it wasn't really

00:10:06,029 --> 00:10:13,799
internet to be shared so the development

00:10:10,589 --> 00:10:18,779
was mostly internal we try to share it

00:10:13,799 --> 00:10:22,019
with some some people but it's it was on

00:10:18,779 --> 00:10:25,619
a isolated network which has some issues

00:10:22,019 --> 00:10:27,329
when you try to synchronize via with

00:10:25,619 --> 00:10:31,379
upstream do the standard distribution

00:10:27,329 --> 00:10:34,410
maintenance and the twitch and SDK was a

00:10:31,379 --> 00:10:37,019
bit complex so we had some issues and we

00:10:34,410 --> 00:10:42,449
have got some feedback for that for the

00:10:37,019 --> 00:10:44,959
following what happens next and what

00:10:42,449 --> 00:10:47,489
happens next is that we recently started

00:10:44,959 --> 00:10:52,649
building a new version which is version

00:10:47,489 --> 00:10:54,899
5 which has basically the same basic and

00:10:52,649 --> 00:10:57,809
same specifications as a clip is for so

00:10:54,899 --> 00:10:59,730
it's internet for and managed and

00:10:57,809 --> 00:11:02,170
managed networks so it's not something

00:10:59,730 --> 00:11:04,320
which will be useful for

00:11:02,170 --> 00:11:07,450
[Music]

00:11:04,320 --> 00:11:09,550
and user trying to just secure

00:11:07,450 --> 00:11:12,910
themselves it's it's internet to work

00:11:09,550 --> 00:11:15,610
inside and manage networks it will be

00:11:12,910 --> 00:11:17,890
hard and it is hard on Linux

00:11:15,610 --> 00:11:20,980
distributions internet for non-technical

00:11:17,890 --> 00:11:23,170
users and we'll try to make it work for

00:11:20,980 --> 00:11:26,460
administrators and still have the

00:11:23,170 --> 00:11:29,530
multi-level security I've talked about

00:11:26,460 --> 00:11:31,180
but we have some different choices so

00:11:29,530 --> 00:11:33,760
for example we try to do open

00:11:31,180 --> 00:11:35,320
development from the start so the

00:11:33,760 --> 00:11:37,780
current development is already public

00:11:35,320 --> 00:11:40,720
and we'll try to web stream or even code

00:11:37,780 --> 00:11:43,180
directly because we have when you don't

00:11:40,720 --> 00:11:45,760
have swim code usually you end up being

00:11:43,180 --> 00:11:48,520
late and supporting the front for

00:11:45,760 --> 00:11:50,370
reporting is hard to do especially for

00:11:48,520 --> 00:11:53,020
the linux kernel which moves really fast

00:11:50,370 --> 00:11:55,690
and we like to share a bit more with the

00:11:53,020 --> 00:11:59,260
community and we have a modular design

00:11:55,690 --> 00:12:01,120
and to ring in order to facilitate Forks

00:11:59,260 --> 00:12:04,720
and the read in the receiver so we

00:12:01,120 --> 00:12:09,130
intend to do some stuff ourselves but we

00:12:04,720 --> 00:12:11,560
know that some people might want to do

00:12:09,130 --> 00:12:13,650
some derivatives and we'd like to we

00:12:11,560 --> 00:12:18,220
like it to be easy so people can

00:12:13,650 --> 00:12:22,420
contribute back easily and stay focused

00:12:18,220 --> 00:12:26,680
on some stuff so that synchronization

00:12:22,420 --> 00:12:30,670
with us and with us between is easier we

00:12:26,680 --> 00:12:33,220
will try and basically it's incidentally

00:12:30,670 --> 00:12:35,040
to be a state of Gia implementation of a

00:12:33,220 --> 00:12:38,200
NSS I recommendation so I mentioned

00:12:35,040 --> 00:12:43,600
documentation earlier there are some

00:12:38,200 --> 00:12:47,440
things we are as a French transitory c4

00:12:43,600 --> 00:12:50,260
for computer systems we have the

00:12:47,440 --> 00:12:52,240
possibility to impose stuff to first

00:12:50,260 --> 00:12:54,820
administration to respect some

00:12:52,240 --> 00:12:57,100
recommendations and this should be

00:12:54,820 --> 00:13:02,590
something which is compliant with this

00:12:57,100 --> 00:13:07,180
recommendation a bit upward about three

00:13:02,590 --> 00:13:09,070
pies five kernel so it has some

00:13:07,180 --> 00:13:10,930
objectives and security objectives and

00:13:09,070 --> 00:13:14,230
when the first one being to provide

00:13:10,930 --> 00:13:15,010
isolation primitives to use a space so I

00:13:14,230 --> 00:13:20,170
mentioned

00:13:15,010 --> 00:13:22,630
multi-level material system where you

00:13:20,170 --> 00:13:25,360
have a complete environment which are

00:13:22,630 --> 00:13:26,050
isolated exactly price for five can also

00:13:25,360 --> 00:13:28,300
provide that

00:13:26,050 --> 00:13:31,089
it should maintain some trust in our

00:13:28,300 --> 00:13:33,279
resources because it's mostly internet

00:13:31,089 --> 00:13:36,029
for workstation even Joey it will be

00:13:33,279 --> 00:13:38,649
useful for our service tools and a

00:13:36,029 --> 00:13:42,180
workstation needs to have Hardware

00:13:38,649 --> 00:13:45,190
access from stuff like network card for

00:13:42,180 --> 00:13:47,110
graphic card but also USB talking USB

00:13:45,190 --> 00:13:49,720
keys and stuff like that so you have to

00:13:47,110 --> 00:13:55,240
maintain some trust and be able to

00:13:49,720 --> 00:13:58,389
select which which environment gets the

00:13:55,240 --> 00:14:00,430
hard water can and obviously guarantees

00:13:58,389 --> 00:14:03,220
and can all self protection because if

00:14:00,430 --> 00:14:05,680
he provides some useful primitives to

00:14:03,220 --> 00:14:11,589
use our user space it has to protect

00:14:05,680 --> 00:14:16,510
itself so we mostly doing some mainline

00:14:11,589 --> 00:14:18,130
hardening we rely and stuff provided by

00:14:16,510 --> 00:14:19,750
mainline for example turkeys PPI

00:14:18,130 --> 00:14:22,540
recommendations which are also to

00:14:19,750 --> 00:14:25,440
minimize attack surface by basically

00:14:22,540 --> 00:14:28,540
stripping everything which is not useful

00:14:25,440 --> 00:14:30,940
and we try to eye on the security side

00:14:28,540 --> 00:14:34,060
rather than performances so we have some

00:14:30,940 --> 00:14:37,990
possibility since we are not genuine

00:14:34,060 --> 00:14:40,569
distribution to make sense secure choice

00:14:37,990 --> 00:14:48,360
by default even though it might have

00:14:40,569 --> 00:14:48,360
some usability or performance drawbacks

00:14:48,420 --> 00:14:54,970
we do rely on some out of three canal

00:14:51,910 --> 00:14:57,779
patches we try to limit them but we

00:14:54,970 --> 00:15:01,029
still rely on be a bit on some of them

00:14:57,779 --> 00:15:05,430
which are somehow well-known for example

00:15:01,029 --> 00:15:09,459
we rely on Linux London which is somehow

00:15:05,430 --> 00:15:11,980
an instance station of last public gia

00:15:09,459 --> 00:15:16,120
security impacts patches but with a lot

00:15:11,980 --> 00:15:19,510
of evolution we try to include some some

00:15:16,120 --> 00:15:25,060
bits we rely on lockdown but aperture

00:15:19,510 --> 00:15:28,000
ISM which is intended to separate

00:15:25,060 --> 00:15:28,360
channel access from superuser access so

00:15:28,000 --> 00:15:31,300
it's

00:15:28,360 --> 00:15:33,310
because you have UID 0 that you should

00:15:31,300 --> 00:15:36,820
be able to do whatever you want with the

00:15:33,310 --> 00:15:39,130
kernel so more strict isolation it when

00:15:36,820 --> 00:15:41,050
use a user space Hankin in space and

00:15:39,130 --> 00:15:45,550
used to include the stack click theory

00:15:41,050 --> 00:15:47,649
and the idea is to improve channel

00:15:45,550 --> 00:15:49,570
hardening security in cyclic website but

00:15:47,649 --> 00:15:51,579
also to provide some kind of test bed

00:15:49,570 --> 00:15:54,279
for the other new features which are

00:15:51,579 --> 00:15:57,279
considered for upstream and for example

00:15:54,279 --> 00:16:00,339
try to provide real live feedback and

00:15:57,279 --> 00:16:02,890
maybe help infusion to mainline we also

00:16:00,339 --> 00:16:05,290
try to in the long term minimis

00:16:02,890 --> 00:16:11,290
differences with may 9 2008

00:16:05,290 --> 00:16:13,779
synchronization some current contribute

00:16:11,290 --> 00:16:17,200
past and current contribution which are

00:16:13,779 --> 00:16:21,190
initiated by the agency to there is long

00:16:17,200 --> 00:16:25,269
lock for example so it's a patch by nal

00:16:21,190 --> 00:16:27,610
sauna which is put in a gym and it's it

00:16:25,269 --> 00:16:30,010
has been it has been presented in Linux

00:16:27,610 --> 00:16:32,440
security Simek North America the

00:16:30,010 --> 00:16:35,500
submission process is ongoing and what

00:16:32,440 --> 00:16:39,130
long lock tries to achieve is basically

00:16:35,500 --> 00:16:41,199
and privileges unboxing so it's enabling

00:16:39,130 --> 00:16:45,730
application developers to provide the

00:16:41,199 --> 00:16:47,949
security policy which it's a bit like

00:16:45,730 --> 00:16:50,940
second BPF but it's not restricted to

00:16:47,949 --> 00:16:54,190
Cisco rather it tries to provide a

00:16:50,940 --> 00:16:57,160
meaningful access control for every

00:16:54,190 --> 00:16:58,810
every color object and it's implemented

00:16:57,160 --> 00:17:03,220
as a as a less than unique security

00:16:58,810 --> 00:17:08,010
module and I'm going just is ongoing and

00:17:03,220 --> 00:17:10,419
we hope it will be really at some point

00:17:08,010 --> 00:17:12,339
that's all for now on the current

00:17:10,419 --> 00:17:16,179
contribution which we have some more

00:17:12,339 --> 00:17:19,000
involvement plan one interesting thing

00:17:16,179 --> 00:17:20,730
which comes from clip wise for and will

00:17:19,000 --> 00:17:23,829
be interpreted in three point five is a

00:17:20,730 --> 00:17:28,179
new flag for obtaining system call which

00:17:23,829 --> 00:17:31,990
is all my exact it's basically a way to

00:17:28,179 --> 00:17:35,290
enforce an extent the bugs or ex policy

00:17:31,990 --> 00:17:38,260
for scripts so right now if you try to

00:17:35,290 --> 00:17:41,510
if you have a non executable

00:17:38,260 --> 00:17:43,429
moon points you can still execute

00:17:41,510 --> 00:17:47,419
discrete from from there because an

00:17:43,429 --> 00:17:51,250
interpreter we just read the scripts and

00:17:47,419 --> 00:17:54,980
so actually it's possible to extend some

00:17:51,250 --> 00:17:57,559
just to support no exact from for

00:17:54,980 --> 00:18:01,220
scripts but it requires some interpreter

00:17:57,559 --> 00:18:03,380
patching so we proposed some some new

00:18:01,220 --> 00:18:07,070
flag to open which would be set by a

00:18:03,380 --> 00:18:12,529
interpreter and the kinetic would then

00:18:07,070 --> 00:18:15,440
decide to restrict the system calm so we

00:18:12,529 --> 00:18:18,200
already have oh my exec in clip or also

00:18:15,440 --> 00:18:20,059
the patch are already available and when

00:18:18,200 --> 00:18:23,140
we started to publish actually poised

00:18:20,059 --> 00:18:27,529
for and we will try to upstream that bit

00:18:23,140 --> 00:18:28,820
it's definitely not in you can you can

00:18:27,529 --> 00:18:31,909
be integrated right now because it's

00:18:28,820 --> 00:18:35,120
really static and we need to do some

00:18:31,909 --> 00:18:37,700
really texturing we have we are looking

00:18:35,120 --> 00:18:39,860
into some options like why don't we try

00:18:37,700 --> 00:18:42,080
to replace Yod code for Isabelle and

00:18:39,860 --> 00:18:45,309
with just a system one runtime

00:18:42,080 --> 00:18:50,480
configuration so I can't resist it here

00:18:45,309 --> 00:18:52,909
maybe and provide a way to for Linux

00:18:50,480 --> 00:18:55,100
security modules like as selinux to

00:18:52,909 --> 00:19:01,520
provide more fine-grained policies

00:18:55,100 --> 00:19:04,700
so maybe support a lot helpfully local

00:19:01,520 --> 00:19:09,110
policy depending on from Reyes the

00:19:04,700 --> 00:19:11,570
script lie I realized that so in terms

00:19:09,110 --> 00:19:13,909
of timeline we hope to have a first we

00:19:11,570 --> 00:19:17,059
have currently an internal draft and we

00:19:13,909 --> 00:19:19,789
hope to provide a first error see by the

00:19:17,059 --> 00:19:22,549
end of the year and we'll integrate into

00:19:19,789 --> 00:19:25,850
place file I mean wise we have a will

00:19:22,549 --> 00:19:29,809
rely feedback observer we are the new

00:19:25,850 --> 00:19:33,140
architecture some singles we are

00:19:29,809 --> 00:19:35,630
interested in is V server so for those

00:19:33,140 --> 00:19:38,360
who don't know that about it

00:19:35,630 --> 00:19:41,990
it's patch available since quite a long

00:19:38,360 --> 00:19:44,480
time for containers so before I was

00:19:41,990 --> 00:19:47,750
Alexis and the currents like that and

00:19:44,480 --> 00:19:52,120
even different interfaces and C groups

00:19:47,750 --> 00:19:54,740
this is a resin the viscera patch which

00:19:52,120 --> 00:19:57,200
which basically provide from in the

00:19:54,740 --> 00:19:59,059
canal a unified container of hot shows

00:19:57,200 --> 00:20:01,159
like for example per container

00:19:59,059 --> 00:20:03,590
identifier our capabilities and flags

00:20:01,159 --> 00:20:06,409
Network everything keys and flags so

00:20:03,590 --> 00:20:08,360
it's a large external patch and I don't

00:20:06,409 --> 00:20:10,490
think there are any Linux sub streaming

00:20:08,360 --> 00:20:13,610
plans it provides a lot of different

00:20:10,490 --> 00:20:16,280
features but actually not all of them

00:20:13,610 --> 00:20:19,970
might be useful especially right now

00:20:16,280 --> 00:20:20,960
that we have already continuous based on

00:20:19,970 --> 00:20:24,710
namespaces and

00:20:20,960 --> 00:20:26,900
NC groups but some bits might be useful

00:20:24,710 --> 00:20:31,190
and we are trying with JD to do that

00:20:26,900 --> 00:20:34,070
first Patterson Allison and what is what

00:20:31,190 --> 00:20:38,360
is interesting is using the container ID

00:20:34,070 --> 00:20:40,700
so it's exciting in vserver which can

00:20:38,360 --> 00:20:43,159
then be used to provide control access

00:20:40,700 --> 00:20:45,650
control decision so basically right now

00:20:43,159 --> 00:20:49,700
is the kernel doesn't know about

00:20:45,650 --> 00:20:52,960
containers it knows about namespaces and

00:20:49,700 --> 00:20:55,820
C groups but there is no such thing as

00:20:52,960 --> 00:20:59,510
alcohol containers and while it might be

00:20:55,820 --> 00:21:03,289
useful in some cases to Nitai containers

00:20:59,510 --> 00:21:06,770
are something known for user user space

00:21:03,289 --> 00:21:09,260
but having the concept in kernel might

00:21:06,770 --> 00:21:12,470
be interesting it we don't have a

00:21:09,260 --> 00:21:15,380
specific timeline and plans so we'll see

00:21:12,470 --> 00:21:20,870
how it happens and we I guess use clip

00:21:15,380 --> 00:21:24,409
waste files as again as a testbed so as

00:21:20,870 --> 00:21:26,900
a conclusion as I said French government

00:21:24,409 --> 00:21:30,200
is a large user and contributor of a

00:21:26,900 --> 00:21:32,360
free software but for the channel part

00:21:30,200 --> 00:21:35,600
we started to contribute and contribute

00:21:32,360 --> 00:21:38,750
more only recently so I'm definitely

00:21:35,600 --> 00:21:42,860
interested by some feedback on he is our

00:21:38,750 --> 00:21:46,580
work useful is it enough and a bit of a

00:21:42,860 --> 00:21:50,419
question on what what can we do next

00:21:46,580 --> 00:21:53,900
are some specific items which would be

00:21:50,419 --> 00:21:56,450
interesting and more generally when

00:21:53,900 --> 00:21:59,760
which direction as a French government

00:21:56,450 --> 00:22:09,960
on the security side could help

00:21:59,760 --> 00:22:13,690
so we shot any question so your vserver

00:22:09,960 --> 00:22:19,560
notion flies directly in the face of the

00:22:13,690 --> 00:22:22,690
container communities kind of flagship

00:22:19,560 --> 00:22:27,510
claim which is that it's not containers

00:22:22,690 --> 00:22:31,690
or the kernel construct how do you see

00:22:27,510 --> 00:22:36,160
dealing with that honestly we don't know

00:22:31,690 --> 00:22:38,580
I mean we are aware that it's it's been

00:22:36,160 --> 00:22:43,630
proposed here and here and usually

00:22:38,580 --> 00:22:46,300
rejected but again we don't know exactly

00:22:43,630 --> 00:22:49,060
how we'll present things it's something

00:22:46,300 --> 00:22:53,680
which we are trying with we know it's

00:22:49,060 --> 00:22:58,360
useful in our use case and having maybe

00:22:53,680 --> 00:23:01,330
having it as integrated with some LSM

00:22:58,360 --> 00:23:04,930
concepts might be actually actually

00:23:01,330 --> 00:23:07,360
useful so we don't have we don't have

00:23:04,930 --> 00:23:09,550
obviously but we don't know we don't

00:23:07,360 --> 00:23:12,250
have a complete architecture

00:23:09,550 --> 00:23:16,510
specification either it's something we

00:23:12,250 --> 00:23:19,150
are continuing but we will try to draft

00:23:16,510 --> 00:23:22,630
something and then propose it to the

00:23:19,150 --> 00:23:25,570
community community okay and the only

00:23:22,630 --> 00:23:30,280
other thing is this kind of interesting

00:23:25,570 --> 00:23:34,000
notion here is that what the one way you

00:23:30,280 --> 00:23:36,720
could do vserver is would be if you used

00:23:34,000 --> 00:23:39,370
smack and assumed Linux at the same time

00:23:36,720 --> 00:23:41,440
with smack providing what you're looking

00:23:39,370 --> 00:23:44,140
for from the server and then su Linux

00:23:41,440 --> 00:23:46,060
running the way it currently is so that

00:23:44,140 --> 00:23:48,670
I kind of appreciate the fact that

00:23:46,060 --> 00:23:52,470
you've actually presented a plausible

00:23:48,670 --> 00:23:52,470
use case for that so thank you

00:23:59,800 --> 00:24:04,730
so I'm gonna apologize up front - this

00:24:02,630 --> 00:24:05,300
is so much directed at you but more is -

00:24:04,730 --> 00:24:08,840
Casey

00:24:05,300 --> 00:24:10,610
so other than trying to promote you're

00:24:08,840 --> 00:24:12,080
stacking initiative what was the point

00:24:10,610 --> 00:24:15,250
of that last question like I don't

00:24:12,080 --> 00:24:15,250
understand how that would even work

00:24:17,050 --> 00:24:25,910
maybe we will take this discussion to

00:24:19,610 --> 00:24:29,690
lunch so thank you so much for bringing

00:24:25,910 --> 00:24:32,650
up o'may exec that sounds like exactly

00:24:29,690 --> 00:24:37,910
where I would like to see things going

00:24:32,650 --> 00:24:42,110
and I assume that you're not going to

00:24:37,910 --> 00:24:44,890
limit only to Python but we have the

00:24:42,110 --> 00:24:49,850
enforcement in user space in other

00:24:44,890 --> 00:24:55,040
script interpreters where have you

00:24:49,850 --> 00:24:58,970
posted any patches on for Python yet so

00:24:55,040 --> 00:25:03,880
we right now we we didn't submit any

00:24:58,970 --> 00:25:06,980
patches to upstream weather in two other

00:25:03,880 --> 00:25:09,470
interpreters but in the in the source

00:25:06,980 --> 00:25:12,440
code we publish for clippers for there

00:25:09,470 --> 00:25:14,420
is the current patch for the Linux

00:25:12,440 --> 00:25:17,810
kernel so the link is in the references

00:25:14,420 --> 00:25:21,710
I don't think as a link for interpreters

00:25:17,810 --> 00:25:24,020
it's prison so it might be a bit hidden

00:25:21,710 --> 00:25:27,140
in the subscribe because we published a

00:25:24,020 --> 00:25:28,160
lot of thing in values projects but as

00:25:27,140 --> 00:25:31,850
far as I remember

00:25:28,160 --> 00:25:36,200
we we have patched patches for Perl

00:25:31,850 --> 00:25:39,620
Python bash not bad because it's we

00:25:36,200 --> 00:25:43,640
don't always match busy box but busy bug

00:25:39,620 --> 00:25:47,060
shell and maybe some authors but there

00:25:43,640 --> 00:25:50,600
is no single place to look at for now I

00:25:47,060 --> 00:25:52,610
I can try to dig to the exam but it's

00:25:50,600 --> 00:25:54,560
the palate reviews batches for

00:25:52,610 --> 00:25:57,080
interpreter right now are really simple

00:25:54,560 --> 00:25:59,630
because it's just about passing the

00:25:57,080 --> 00:26:03,450
o'may exact flag at the right place for

00:25:59,630 --> 00:26:06,190
example for Python is when you open zone

00:26:03,450 --> 00:26:08,910
so you can just creep in in turkey or

00:26:06,190 --> 00:26:10,300
you open modules and stuff like that

00:26:08,910 --> 00:26:13,840
that's it

00:26:10,300 --> 00:26:18,640
so is it enforcing when you open a file

00:26:13,840 --> 00:26:21,880
that that file can only be executed as

00:26:18,640 --> 00:26:23,380
opposed to later in other words the

00:26:21,880 --> 00:26:25,510
interpreter knows whether or not it's

00:26:23,380 --> 00:26:27,100
opening data for data and it's knowing

00:26:25,510 --> 00:26:29,710
whether or not it's opening data for

00:26:27,100 --> 00:26:32,620
being executed is the entire your

00:26:29,710 --> 00:26:37,140
patches enforcing that distinction with

00:26:32,620 --> 00:26:38,860
the may exact well we we actually

00:26:37,140 --> 00:26:42,940
interpret our patches

00:26:38,860 --> 00:26:45,160
well we rely on interpreters so we have

00:26:42,940 --> 00:26:50,590
to trust tell it that they are doing the

00:26:45,160 --> 00:26:54,070
right thing and the patches tunes near

00:26:50,590 --> 00:26:56,770
the values open system calls so as I use

00:26:54,070 --> 00:26:59,680
all my exact when there are actually

00:26:56,770 --> 00:27:02,080
exactly opening a file for execution so

00:26:59,680 --> 00:27:05,590
we know because the interpreter knows

00:27:02,080 --> 00:27:08,320
when what it can do with with the file

00:27:05,590 --> 00:27:11,020
because it's it's a it's a script or

00:27:08,320 --> 00:27:12,700
because it's a module or something and

00:27:11,020 --> 00:27:15,940
we don't do that for example because

00:27:12,700 --> 00:27:18,480
when action opens something else so it's

00:27:15,940 --> 00:27:22,920
really something which needs to be

00:27:18,480 --> 00:27:22,920
tightly integrated in the interpreter

00:27:24,420 --> 00:27:31,990
you might want to consider enabling this

00:27:28,030 --> 00:27:34,840
and and in terms of policy I'd be

00:27:31,990 --> 00:27:37,180
interested in using this for imma to be

00:27:34,840 --> 00:27:41,460
able to validate the signatures and

00:27:37,180 --> 00:27:44,050
what's getting opened yep actually I

00:27:41,460 --> 00:27:48,160
didn't mention that that we are also in

00:27:44,050 --> 00:27:50,980
increase for some patches to actually

00:27:48,160 --> 00:27:53,260
tagged executables and a lot of stuff

00:27:50,980 --> 00:27:57,460
which has been done differently in the

00:27:53,260 --> 00:27:59,980
canal but we we never submitted it had

00:27:57,460 --> 00:28:05,860
at the time so it's duplicate what but

00:27:59,980 --> 00:28:09,190
anyway how do you handle the problem of

00:28:05,860 --> 00:28:12,580
mixing code and data like for example if

00:28:09,190 --> 00:28:14,290
there is an Libre Office file with

00:28:12,580 --> 00:28:16,760
macros

00:28:14,290 --> 00:28:22,030
it's bit difficult from a conceptual

00:28:16,760 --> 00:28:25,310
point of view right yes we don't I mean

00:28:22,030 --> 00:28:29,000
we know we won't have a perfect coverage

00:28:25,310 --> 00:28:34,670
because basically anything can be done

00:28:29,000 --> 00:28:37,400
can be turned to into some code

00:28:34,670 --> 00:28:41,000
executions but we have some longleaf

00:28:37,400 --> 00:28:45,860
roots so obviously scripts standard

00:28:41,000 --> 00:28:49,280
scripts we we have some way to in in

00:28:45,860 --> 00:28:53,000
creepos file and for to restrict for

00:28:49,280 --> 00:28:55,810
example extensions in Firefox and

00:28:53,000 --> 00:29:01,250
Thunderbird and stuff like that so we we

00:28:55,810 --> 00:29:04,060
considered those programs we can be done

00:29:01,250 --> 00:29:07,970
we can which can use some data and

00:29:04,060 --> 00:29:09,560
execute things from from there but we

00:29:07,970 --> 00:29:12,500
know we wouldn't be able to do

00:29:09,560 --> 00:29:14,960
everything for example we know PDF can

00:29:12,500 --> 00:29:18,190
be used to execute code Java JavaScript

00:29:14,960 --> 00:29:20,690
obviously we can't really prevent

00:29:18,190 --> 00:29:23,990
exaction so what we are really

00:29:20,690 --> 00:29:25,940
interested actually is a way to to

00:29:23,990 --> 00:29:29,930
prevent true to INTRUST

00:29:25,940 --> 00:29:33,260
w's or ex policy for sins which can do

00:29:29,930 --> 00:29:37,490
system calls basically if you can't do

00:29:33,260 --> 00:29:41,720
system calls we it's a it's a bit it's a

00:29:37,490 --> 00:29:44,370
bit easier thank you I think we have to

00:29:41,720 --> 00:29:48,360
thank the speaker

00:29:44,370 --> 00:29:48,360

YouTube URL: https://www.youtube.com/watch?v=chNjCRtPKQY


