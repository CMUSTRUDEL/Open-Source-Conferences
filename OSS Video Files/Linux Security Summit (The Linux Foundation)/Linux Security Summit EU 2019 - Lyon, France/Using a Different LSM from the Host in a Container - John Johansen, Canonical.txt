Title: Using a Different LSM from the Host in a Container - John Johansen, Canonical
Publication date: 2019-11-04
Playlist: Linux Security Summit EU 2019 - Lyon, France
Description: 
	Using a Different LSM from the Host in a Container - John Johansen, Canonical
Forum 1

Speakers: John Johansen
Despite containers being in broad use, there are still use cases where containers can not make use of Linux Security Modules (LSMs) in the way they would like. Particularly challenging is the case where the container would like to make use of a different LSM from what the host is using.

This presentation will cover the challenges, pitfalls, and solutions encountered while enabling the AppArmor LSM to be used by a container while the host uses a different LSM. It will focus in particular on running snappy application and LXD systems containers leveraging AppArmor on a host using SELinux or Smack, and discuss why the inverse is currently more difficult.
Captions: 
	                              so I'm John Johansson we're gonna talk                               about namespacing LSMs a little bit so                               containers they've got lots of use cases                               we've covered this before you can see                               them if you haven't some of them even                               involve LSM snappy uses a primer a                               little bit system containers the use                               case is for example running an abundant                               Ainur on top of fedora and wanting them                                Boonta to run just like it isn't native                                with a primer or even doing the reverse                                with fedora on I'm going to do that kind                                of thing right another one is Ana box or                                things like that with a with that are                                running Android in a container right so                                for SELinux so there's some different                                use cases and if we can do this this                                will open up even more of course we all                                know that containers aren't really a                                thing on linux it's up to the container                                manager to define what they are they're                                made up of a whole bunch of different                                components nothing new there LSM quick                                review I'm sure probably everybody knows                                what it is if not it's just a set of                                hooks and data in this blob data in the                                kernel infrastructure that is leveraged                                by app armor selinux Tamayo                                smack a couple others in there and a                                whole bunch of out of tree once they're                                trying to get in containers when they                                use namespacing it kind of looks like                                this you're imagining i've got a                                container here with a firmer i got a                                container here with SE links LSMs really                                don't want that they want something more                                like this                                we've got selinux at the root or                                whatever on the host and then the                                container can have something else that's                                fine well we you know we we want to have                                a bound on the container like the host                                wants to apply policy and the container                                whatever the attainers running as a                                separate LSM it can have a separate                                policy but it can't get around the bound                                of the hostess applying you could do a                                primer and app armor ID which we've                                actually been doing for years we can                                discuss that a little bit                                a minute for the past in the past we've                                had the limit of a single LSM that got                                lifted a while ago two minor LSMs and                                now with KC stacking work we have major                                LS M's multiple Alice imps and now                                you'll notice that this is different                                than what the container model I just                                showed was we've got these LSMs all at                                the system level all at the host you see                                you have all of them when you put it in                                that that's what they are they're there                                and they apply to every task on the                                system now this doesn't match completely                                with what we were talking about before                                what it does work for some containers                                every LS sim so there's a u.s. user                                space interfaces right that the LS m                                provides a few but every LS m also                                provides its own so a primer has its own                                set of interfaces that are different                                than the SELinux or smack to Moyo                                interfaces everyone is unique and then                                the the infrastructure the LS m                                infrastructure provides some some                                interfaces you will notice that two of                                those are highlighted in yellow those                                ones are mistakes somewhat their common                                so they're shared by smack a primer and                                SELinux                                this is actually a big problem KC's                                going to talk more about that he threw                                in the just we've got for his stacking                                work there's this display LS M value                                that's that's part of the stacking and                                then there's new interfaces as well                                we're not really going to cover those                                we're gonna leave those to KC and you                                can also with the stacking see what LSMs                                are in place and running on the system                                but those yellow ones we'll get back to                                them                                the yellow ones if we virtualize them                                with the display LS m it kind of starts                                looking like the the model we saw before                                right we can have all three of them at                                the root or all three of these LSMs at                                the root of the system on the host but                                using the display the container is                                really only seeing as long as it's old                                 code and doesn't know what it's doing                                 it's only seeing                                 it's only seeing the the one LSM                                 whatever set as the display this can                                 actually work for new code as well                                 stacking aware there just has to be some                                 work in the LSM itself to to do some                                 things we can talk about that a little                                 more later                                 so let's boot with multiple Ella stems                                 use the LS m equal to sets different                                 things we're gonna boot app armor and                                 SELinux here it's coming up on am bloom                                 to it'll just take a minute because I'm                                 leading a full GUI for various reasons                                 here and you know not liking the demo                                 gods they always blow my demos away this                                 is you know a screen capture right so it                                 should work so you can see we've got the                                 LSMs there right we booted up we got a                                 perm where we got SELinux in place all                                 well and good let's do it again this                                 time we're gonna switch it we're gonna                                 go SELinux a nap the nap armor in the                                 LSM stack so it's coming up maybe                                 freaking out a little bit                                 and you notice all that red there right                                 we start getting failures I in fact will                                 get another one pop-up there and it                                 never gets out of this it won't boot so                                 why right this is one of the gotchas                                 that we didn't catch when we were doing                                 this originally it in fact doesn't                                 surface with a lot of the use cases we                                 were doing but it does surface with                                 SELinux first under Graham Boone - it                                 doesn't affect fedora we'll get to there                                 so let's back up why does the order                                 matter                                 so we're booting with a primer policy                                 we're not booting with SC Linux OS Linux                                 well we're SELinux is enabled but it's                                 not loading any policy the old code it's                                 not aware of that                                 the LSM stacking so it's using the                                 display LSM old codes using the shared                                 interface like we talked about right                                 display LSM set the display LSM is the                                 first LS m in the stack by default so a                                 primer in the first case SC Linux in the                                 second there's the clue boon to is built                                 with support for both SC Linux and a                                 primer enabled in all its component user                                 space components by default D bus is                                 built to support SC Linux and app armor                                 so d bus selinux it glows and looks and                                 says where I've got no policy I'm not                                 enforcing anything that's okay a primer                                 comes isn't says I've got policy that's                                 great and I'm enforcing okay I get an SD                                 Linux label and that's a no-no yes so it                                 kills it so that's why we failed a boot                                 so first gotcha right so those                                 virtualizing those interfaces wasn't                                 quite enough with the display LSM a                                 primer has a a enabled that it's library                                 calls or some applications actually                                 passed the library and do it directly                                 and what it does is it checks for the                                 security FS mounted with a primer in it                                 so that nose that's there and it also                                 checks the a primer enabled brunette                                 kernel parameter or most of them do okay                                 so what's happening is we're finding a                                 primer is enabled but we don't you see                                 that the display LSM isn't a primer and                                 we're talking old code here we want to                                 run old code we can't change the ABI                                 from the kernel to user space so this                                 has gotta work so what do we do we                                 change a primer a little bit so the a a                                 enabled the security parameter and the a                                 primer enabled it gets virtualized by                                 the display LSM as well so the old code                                 equal old code that's checking this will                                 see hey I'm not enabled when if the                                 display LSM is not set that fixes this                                 problem                                 another gotcha and this is all gotcha                                 just by the way pretty much anyways okay                                 fedora host SELinux policy on boot no                                 app arm or policy on the system so we're                                 just gonna boot we're gonna then once we                                 boot we're gonna create an app room or                                 policy namespace or just load some app                                 were more policy this is what we get                                 selinux is denying a primer so what's                                 going on so this is the app remark all                                 this is a premier code what it's doing                                 and it's capable for the current user                                 name space captain pac kappa had min                                 will cover why in a second but that                                 loops back into the system and it kind                                 of looks like a cape it loops back into                                 the system and the LSM stack loops it                                 back through so selinux gets the capable                                 call and so what happens is selinux says                                 no you can't manage my policy it denies                                 it rightly right so what do we have to                                 do we have to go back in we change the a                                 premier code is really simple                                 we changed it to a direct call to the                                 Cape the system capability instead of                                 looping back through capabilities of CAP                                 capable and then we do the app are more                                 capable call directly the only reason it                                 was done through NS capable before its                                 long history is originally the LSMs were                                 stacking composing the capability                                 modules themselves                                 we stacking that went away and so                                 instead of having it composed it a whole                                 bunch of places we composed it in one                                 place in the capable look so then we                                 just had to call capable we'd compose                                 back through and we're good well it bit                                 us so we can try a simple container so                                 we're gonna do it sure route here and                                 sure it's not really a container and it                                 should not be doing that okay so anyways                                 we'll just describe what's going on here                                 or should be going on here I'm not sure                                 why it's dead so simple true we set up a                                 true just bind mount proc and bin and                                 everything into the that a simple truth                                 directory that we set up to route in and                                 load some a perm or policy so what                                 happens is you have two shells open ones                                 in this chroot ones outside run the                                 command in the true policy gets applied                                 great run the command outside the troop                                 policy gets applied not so great again                                 we go back to the the original example                                 demo of what the l sm stacking is doing                                 it's applied to the whole system right                                 so we need more than just doing loading                                 policy once we've tributed or set up a                                 new namespace whatever so yeah more than                                 l sm stacking right so we're gonna back                                 up we talked about how a primer is being                                 applied to the whole system selinux is                                 applied to the whole system not just the                                 truth what we want in this case if we're                                 setting up a container we want it to                                 apply just to the truth or                                 the namespace whatever we're setting up                                 is our container we needed on a way to                                 apply the LSM to just part of the system                                 right a namespace essentially LSM                                 stacking is not LSM namespacing at least                                 not yet maybe one day                                 let's just get stacking at first                                 okay so a parmer however needs to set up                                 this policy namespace if we're gonna do                                 this and we're gonna have when if we                                 sets up its policy namespace we're gonna                                 enter the policy namespace and then do                                 the treat and everything's good right                                 like you'd expect a Parmer for a long                                 time now has had policy namespaces and                                 its own ability to do some composing                                 bounding stacking whatever you want to                                 call it so a premier policy namespaces                                 are higher york local a task can have                                 multiple confinements on it so this                                 there's a system confinement on that                                 task in the blue and some sub names                                 basis confinement on the tasks and a                                 primer will compose those two so it it's                                 bound by the system so that the                                 container you don't just replace the a                                 primer namespace or the a primer policy                                 or host policy whatever you add to it                                 it's composing this was we've been doing                                 this for a while and i'm going to so lxd                                 can do a primer and a primer containers                                 on but it doesn't work with any other                                 LSM because it's just it's just in a                                 primer to get there everyone at a                                 farmers interfaces are virtualized the                                 security FS entries we use a special                                 jump link a magic jump like whatever you                                 want to call it in security FS to jump                                 into the app armor FS to support the                                 policy namespace directory and that will                                 virtualize the directory structure for                                 us proc FS files so when when task goes                                 and looks at the proc files they're                                 actually virtualized by the namespace so                                 you get different labels out of them                                 gets a cop option so that's another                                 interface that has to be virtualized as                                 well                                 and this is all a primer doing it it's                                 not LSM every LSM is gonna have to do                                 that currently even some of our kernel                                 parameters have to be virtualized like                                 the enabled in addition for something                                 this is if there was a feature                                 development not necessarily need to be                                 what it was needed for the container                                 case system containers anyway is Cree                                 you                                 you've heard about creo for SELinux                                 today I believe so we also had at Cree                                 you support so we needed to hold on to                                 the the policy in a form that we could                                 dump it back out and a primer actually                                 transposes its policy unpacks it does                                 operations to make sure it's kernel                                 friendly and fast so we actually have to                                 hold onto the old policy and we compress                                 it store it and then we can dump it back                                 out to user space if crea wants it and                                 then they can reload it the policy has                                 to also be namespace aware when we're                                 doing this so when the container tries                                 to do this it sets it up correctly again                                 for the proper namespaces obviously we                                 had to add interfaces for container                                 managers to do this we're not going into                                 a lot of details while we're at it we're                                 gonna hit some more issues with getting                                 these namespaces working ok system                                 containers security FS we talked a                                 little bit about this we had the problem                                 you know we had to virtualize our                                 security FS files here's another problem                                 even with we're virtualizing i'm when                                 you boot up an operating system image                                 it says i'm gonna mount ok mount                                 security FS security FS is not multiple                                 so what happens is you try to boot the                                 image and it fails to boot a great fun                                 so short-term we can have the container                                 manager map security FS n that's what                                 we're having Alex                                 do you do right now and then container                                 image has to be the image has to be                                 container aware it says oh I'm running                                 in a container so I will do this instead                                 I don't have to mount that really sucks                                 we don't want that long-term we need to                                 make these things multiple to make this                                 work but you can work with it as it is                                 now as long as your container manager                                 says things upright and your image is                                 set up for it what can you do                                 that compen no new proves this one is so                                 much fun                                 so no new proves was added with set comp                                 it's a PR control and what it does is                                 lets the task say hey I don't want to                                 have any new privileges so lock the                                 system down and the LSMs respect that                                 sort of largely but the problem is if                                 the container manners doing this and                                 does and expect things it doesn't know                                 what's going on you try to boot see an                                 image with LSM policy and then the LSM                                 policy is trying to do some domain                                 transitions do some other stuff those                                 aren't going to be allowed so it tries                                 to do something they're locked out and                                 it fails and this is real problematic                                 there's issues on you know all over the                                 place with this around the LSMs we have                                 to build it in policy that we are                                 allowing overrides but if you're running                                 a host image like in the system                                 container case or a system container and                                 you're booting an operating system it                                 doesn't think it's in a sec comp jail it                                 doesn't work to make it a LSM policy                                 aware of it because it can't be so we go                                 back to what a primers doing with its                                 namespaces it's stacking internal                                 stacking bounding so we had to add the                                 ability for a Parmer to track what the                                 confinement was when no new privy is set                                 so when that gets set on the system it's                                 not exactly when it's at but                                 we won't get into that the                                 implementation detail it grabs that                                 confinement stores it off so we know                                 what it is and now when we go to make                                 transitions in in our policy we can                                 allow those transitions and as long as                                 those transitions are stacked against or                                 bounded by the policy that was in place                                 when no new proofs was enforced we can                                 guarantee that no new privileges are                                 being added and we can allow those there                                 was a transitions for the LSM so you                                 boot your container your system image it                                 works it can do those changes you've got                                 the you've got the host OS that's locked                                 down its container image or confinement                                 and the underneath and the container is                                 free to make changes any other LSM is                                 gonna have to do something similar if                                 it's respecting known and proofs whether                                 it's actually supported through the LSM                                 infrastructure or not that would be                                 something would be nice but at the                                 moment it's not anybody who wants to do                                 that's gonna have to do that nesting of                                 containers so lxd not just lxd there's                                 lots of cases for nesting of containers                                 so a case would be lxd containers to                                 boot and operating system and then in                                 that operating system your virtual                                 machine whatever you want to call it you                                 say I'm gonna use lxd and boots                                 something else right there's one case                                 you're in a container again you got your                                 host you're in your container running                                 something and you want to run an                                 application container a snappy docker                                 something else where it's again using an                                 LS m so it doesn't actually have to be                                 nesting hosts can our system containers                                 it can be a system container with                                 something else nested we run into                                 problems again specifically user                                 namespaces go figure right currently                                 there's no way to map capability                                 requests to the policy namespace that a                                 primer has                                 no way to map by user names to face to                                 the policy namespace the capability                                 request that comes along with it or and                                 no way to know when the user name space                                 is even created again we're missing some                                 books here this is a solution that needs                                 work and we're working on it what we can                                 do something we can associate root                                 username space and the root policy                                 namespace for a parameter that we have                                 and we can limit our stacking depth for                                 can host containers containers doing                                 this kind of thing right now - - right                                 so we know if the username space is                                 equal to the root namespace we're good                                 we can use the policy namespace we can                                 get that mapping that we need if it's                                 not we're limiting our stack to two and                                 then we know it's the other so then we                                 can actually figure out where things are                                 long term what we need to really fix                                 this is we need some new LSM hooks and                                 we need to be able to associate policy                                 to the user namespace what we don't want                                 though and this is general not just a                                 primer but for other LSMs as well we                                 don't want to actually tie our policy                                 namespaces to the user namespace                                 explicitly whatever like network                                 namespaces are tied to the username                                 space we actually don't want that we                                 want more flexibility for the policy LSM                                 namespace whatever you want to call it                                 we have cases where we're using policy                                 namespaces upon whereas anyways where                                 you're not going to change the username                                 space so there's there's a lot there                                 that we don't want we need to come up                                 with some infrastructure and there's                                 some patches and works but they haven't                                 been posted yet to propose ways to fix                                 this so with a little support from lxd                                 we can actually run on boon to container                                 on fedora so little support being LXDE                                 like I said has to be aware that of a                                 primer it has to be able to set up the                                 policy namespace it's got to be able to                                 set up the map                                 things that we already talked about haha                                 second video not showing okay so we've                                 showed this demo before unfortunately we                                 can try see can we get that to go                                 of course so we had a demo there of just                                 simply run launching an lxd container                                 you can see the app armor policy at the                                 host level and how it's confining and                                 changing at this in the container and                                 then you can go into container and look                                 at and see it's a virtualized policy                                 it's a really simple demo I will see if                                 I can get that up for people to look at                                 not sure why it's dead future we do have                                 some additional things to do so move to                                 dynamic LSM stacking so right now for                                 the name spacing that we have right now                                 a permit use M stacking and it's in                                 multi LS m aquamarine Linux or anything                                 else is not possible without LS m                                 stacking it's all built on top of LS m                                 stacking but a primer itself is doing                                 the additional work of stacking the                                 policy tracking that and doing the                                 bounding we could conceivably do this in                                 the LS m infrastructure and convert some                                 of that from app armor into the LS m                                 infrastructure and so other LSMs could                                 take advantage of it not have to                                 recreate that part of the work there are                                 some costs to doing that instead of                                 doing pre-allocated vectors and some of                                 the optimizations that the                                 infrastructure is doing right now it's                                 going to have to would have to do some                                 dynamic mapping of some kind linked                                 lists there's different possibilities                                 and we would actually have to see                                 whether the cost is worth doing or                                 whether it's just we you know we forced                                 this on each LS m to support if they're                                 going to that's something we have to                                 look into for the future still there                                 also would need to be some kind of                                 interface agreed upon getting eddie                                 interface agreed upon is a fun casey you                                 ought to take that                                 okay so any questions so I'm very                                 sympathetic to the know new Proust                                 problem I think it took us three or four                                 kernel releases before we sorted that                                 out and that's not in the stack in case                                 but when you were describing it I was                                 curious so it sounds like you basically                                 do you have a process that spawns off                                 another nested app armor game space                                 instance whatnot and that process is                                 running under no new probes it sounds                                 like you take a snapshot of that policy                                 and do your calculations                                 yes so so well I guess what I'm                                 wondering is are you concerned because                                 this is something I'm trying to figure                                 out for se Linux but like what happens                                 if you were to change the hosts policy                                 then as the is the nested app armor                                 policies still going to be operating                                 under that snapshot that you took which                                 might not be valid anymore so no so what                                 happens and it's kind of ugly so we grab                                 the confinement labeling that is in                                 place when no new proofs gets invoked                                 and we store that off and we also                                 actually carry along the new confinement                                 that is changing right so what it's                                 supposed to be without that we when we                                 go through we dynamically compose those                                 when you when you create a new task or I                                 knew I knew it's like exact or change                                 can change confinement it doesn't have                                 to be done for every task you can just                                 inherit the composed one and then that                                 composed one okay we're doing the                                 bounding so we have to walk everything                                 in that so then when we go to change                                 confinement what we do is we start with                                 the we start with the broken apart so                                 label and we we compute what we need for                                 sorry for the the new confinement                                 and why we're doing that we also are                                 measuring if the no new proves saved                                 confinement needs to change if policy                                 allows that change then we have this                                 direct mapping about which components                                 change and we update the no new proofs                                 locked no new proofs and we'd save that                                 new one off and so now we get the new                                 composition of the the changed host                                 policy because it was loud and it's                                 locked down as if it's no new prims                                 under that change because policies still                                 no new proves you you don't pull that                                 away from the task and even then you get                                 the whole new composition of the - it's                                 ugly but I couldn't come up with another                                 way to do it so I also have a question                                 about the no new proofs thing so no it                                 just to clarify did I understand it                                 correctly that the problem is that                                 you're trying to spawn a container in                                 the process that's trying to spawn a                                 container is already subject to no new                                 proofs different potentially that's not                                 particularly necessarily the case the                                 problem is there's several ways you                                 could set up set it up it could be that                                 it's already in no new proofs ideally                                 your Canadian manager wouldn't apply                                 that too late the problem is you set up                                 a new container say you don't set up no                                 new proofs first you're it's almost your                                 last thing you're gonna set okay so                                 you're not confined by no new proofs                                 when you set up your container you set                                 up you set up a new policy in the                                 container so your your task is has an a                                 primer namespace and it has some policy                                 in that namespace that it's taking let's                                 just say it's unconfined even right so                                 now when you start your container                                 running that task starts running and it                                 has no new proofs applied to it it hits                                 an exact and it says okay I want to                                 change I want I want to do this exact                                 and the exact the LSM ruled a primer                                 policy says when you run this this                                 program this exact I'm going to change                                 the policy for this application                                 to some other label or some other                                 profile whatever you want to call it and                                 but no new proves is gonna block that                                 and the the image the system image that                                 you're running in the container isn't                                 aware that it's known you proves it's                                 it's it's running like it's on the host                                 like but you said the container manager                                 has no new pros and you're not sitting                                 no due process I don't know the                                 container make the container managers                                 let's say that container managers not                                 know new proofs let's say we're doing                                 this scene Lee and the container manager                                 is a worse case and the container that                                 it's setting up is set to no new proves                                 right before it starts running the                                 container so we don't have to deal with                                 trying to figure out what the                                 confinement is when we're setting this                                 container up oh so why do you sit on                                 your proposal in a container some                                 container managers are setting new new                                 probes because they're setting sec comp                                 policy no not everybody's doing that but                                 when you're creating a user name space                                 you can set the second policy without                                 setting to any pros who says you're                                 using a user name space okay that                                 answers the question Thanks                                 right so it containers are this you know                                 amorphous blob right and you have all                                 these different types of container                                 managers not everybody's using user                                 namespaces a docker for example so yeah                                 it can no new proves is a real pain                                 questions                                 if not let's venture                                 [Applause]
YouTube URL: https://www.youtube.com/watch?v=THzC4lZTH-k


