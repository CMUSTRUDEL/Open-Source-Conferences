Title: Keylime - An Open Source TPM Project for Remote Trust. - Luke Hinds, Red Hat
Publication date: 2019-11-04
Playlist: Linux Security Summit EU 2019 - Lyon, France
Description: 
	Keylime - An Open Source TPM Project for Remote Trust. - Luke Hinds, Red Hat
Forum 1

Speakers: Luke Hinds
Keylime (keylime.dev) is a young, rapidly growing open source project originally created in the security research department of MIT's Lincoln Laboratory. It provides a way of measuring the cryptographic hardware root of trust of machines hosting an Trusted Platform Module (TPM) chip. Keylime is about making TPM technology accessible for developers and users. It handles the complexity, you drive the use case!
Captions: 
	                              good morning everybody and yet my name                               is luke hines and going to be presenting                               a relatively new project called keyline                               so let's get let's get into stem you get                               my clicker okay so a quick personal                               introduction I work at red hat in the                               CTO office I've have a background in                               security stuff all around I guess it's                               getting close to                                                     different capacities spent quite a bit                                of time working on tall in and                                vulnerability handling and research so                                my other gig is the product security                                Committee for kubernetes and I've I've                                done various some project team lead                                roles in different security groups as                                well OpenStack opendaylight and on a                                personal level I I live in the UK it's                                quite a rural area generally you'll find                                software engineers and farmers and                                that's about it and it's hard to tell                                the difference between the two quite                                often and I also I I'm a bit obsessed                                about running I coached some kids some                                                                                                        I'm not very fast but it's something                                that I enjoy and it gets me out and                                about so what is the problem so I'm not                                really going to deep dive into this                                because you're a pretty smart audience                                so I'm guessing a lot of you probably                                know what TPMS are you know about                                security trust very well so I'm really                                not going to teach the choir how to sing                                as they say but we'll do a quick                                refresher so that everybody's on the                                same page so essentially software trust                                without a hardware means of protection                                typically resides in the memory or the                                disks so we're talking about private                                keys secrets and so forth and the                                problem with that is that you're then at                                the mercy of the lower levels of the                                stack so effectively we're talking a                                chain of trust here you have your                                firmware your bootloader your kernel                                your modules your a my strain out the                                camera range I'm sorry I try to stick in                                this circle here                                and do all the way up until we've got                                our user land on our run time perhaps                                you know like a container runtime or                                virtual machines and so forth and the                                problem here is it that a lower level of                                the stack is compromised it's very                                difficult the higher up the stack UI                                it's very difficult to know about that                                essentially and you're at risk but it's                                very difficult to establish that there                                has been a compromise and this is even                                more of a case now that we have loads                                such as containers and so forth where                                they have to trust the underlying host                                so we have these things called trusted                                platform modules and and this is the key                                attribute that Key Lime is built on top                                of so we're kind of do a quick overview                                of those but as I say there's probably                                people in the audience that know TPM is                                even better than I do so I'm approaching                                them as a an application developer so a                                TPM is a specialized chip they're almost                                in bit Curtis they you know that a lot                                of boards are coming with them already                                on if not they're pretty simple to                                retrofit so that's at the bottom right                                that's a picture I snapped of a                                Raspberry Pi                                                         GPIO board you can see there's a TPM                                chip there and it cost me about I can't                                remember about                                                        expensive technology and as I say a lot                                of server providers already have them on                                the board if not they're pretty simple                                and cheap to buy and retrofit and                                they're not only turning up in servers                                they're in devices they used a lot in                                the automobile industry to ensure that                                nobody's tampered with your braking                                system and so forth and and so that                                there are pretty common commodity to                                find and essentially that the key                                attribute is they they have a private                                key pair okay and the sorry they have an                                RSA key pair and the private part is not                                accessible by software it's only a                                special bus connection that can that can                                access                                operations to a key that is secluded                                 within the chip it's created at                                 manufacture time now the TPM itself                                 don't think of it as like a crypto                                 accelerator it's a very simple crypto                                 engine so it can it can create keys                                 consign artifacts and it can do                                 something that we call measure which is                                 take a cryptographic hash of a                                 particular object so it can hash                                 critical sections of firmware boot some                                 of you would know ima integrity                                 measurement architecture so it can take                                 measurements and it can use these extend                                 operations to build a one-way hash                                 function and you can end up with a                                 complete cryptographic replay of for                                 example a boot so that the good thing is                                 the hashes can be made public so you can                                 have a public counterpart of the private                                 key and then use in that you can                                 establish that this list of hashes that                                 you're looking at which represent a                                 system state they have not been tampered                                 with because you have the public key                                 which allows you to a test essentially                                 and that is where you'll hear that word                                 use quite a lot attestation and one of                                 the of several things one of the things                                 that we do in key lime is we provide                                 this means to remotely attest a certain                                 part of your system so let's go into                                 what actually key lime is so originally                                 the project was the idea and a white                                 paper was devised by some folks at MIT                                 they have a security department there                                 they do stuff with the Department of                                 Defense and protecting military systems                                 and so forth so as a couple of people at                                 work's honest and they came up this idea                                 of key lime and and and from there they                                 started to prototype that they wrote                                 some code and they came up with a you                                 know a pretty good working system a good                                 prototype now essentially as I say we                                 provide a remote trust framework so by                                 framework what I mean there is with key                                 lime                                 we're about trying to provide the means                                 to the user to say what they wish to                                 measure and then what actions they would                                 like to take if the integrity of that                                 measurement is compromised so we're                                 trying not to be too opinionated about                                 how you should use keyline we're trying                                 to make this at all a framework                                 essentially that you can then get to                                 drive a particular use case that you                                 would like based on the trust or non                                 trust of a system now one of the good                                 things from that from the onset with the                                 designer is very scalable in nature                                 you'll see that when we start to look at                                 the architecture so when I was looking                                 around for different solutions within                                 the open-source ecosystem this one of                                 the things that I liked was they got a                                 nice simple scalable architecture from                                 the beginning that's part of the key                                 design we support TPM                                                    latest standard that has been actively                                 developed there is TPM                                                 also have the code that works and is                                 supported but going forward we're not                                 focusing on                                                         common you can find it still but                                 essentially a lot of the new chips that                                 are all being released are based on TPM                                 - dotto so keyline provides essentially                                 this ability to remotely a test the same                                 as I said so this is essentially based                                 around measurements so we get these                                 measurements from different areas so one                                 of them is a measured boot you would                                 have heard perhaps the term used a                                 trusted boot                                 okay now using a particular project to                                 shim what we can do is we can we can                                 measure the bootloader the grub kernel                                 options so for examples you on the                                 kernel command line you can toggle                                 selinux on and off which is something                                 that you wouldn't want somebody to                                 change the init Rama face the modules                                 and there's the stream project what it                                 will do is it will measure these and it                                 will extend them into the TPM so we can                                 then query the TPM we can make a TPM                                 quote and we can establish                                 that nobody has changed any particular                                 part of that boot cycle the other thing                                 we can do is we can measure secure boot                                 so we don't set up secure boot we're not                                 providing a secure boot solution but                                 there's many attributes that are part of                                 secure boot as the mock list vendor dbx                                 is various parts that are that are                                 required for secure boot and and we can                                 actually remotely attest that nobody has                                 changed any of those there's certain                                 certificates and so forth there is IME                                 so we're getting into the run time here                                 so this is where the system is booted in                                 larix running and integrity measurement                                 architecture it hashes objects when                                 they're executed it writes those hashes                                 into a security FS and then if I may                                 find a TPM present it will extend                                 cryptographic hashes into the TPM that                                 are based on the measurements that it's                                 taken for runtime it's part the the                                 subsystem so with this we can we can                                 pick up executions we can monitor                                 SELinux labels files and so forth and                                 then we have this other like I said we                                 try and not to do too much around                                 features but we have these sort of cases                                 that people can take and and get running                                 with and one of them is a an encrypted                                 payload so essentially what we do is we                                 use a user you would have a payload it                                 could be some perhaps some TLS                                 certificates that's required for a                                 website I have some config files that                                 have database passwords and and any sort                                 of sensitive material essentially and                                 what we can do is we can we can measure                                 whatever it is you wish to measure so it                                 could be the boot we can measure the                                 current runtime environment and then if                                 there is if we establish that you can                                 trust that based on the cryptographic                                 sig cryptographic hashes that we're                                 getting from the TPM and checking those                                 against the public counterpart of the                                 key that I described earlier and we'll                                 go a bit more into the different keys                                 shortly what you can then do is you can                                 execute that payload                                 remote machine so you can essentially                                 establish that nobody's tampered with                                 that machine that you want to                                 instantiate your sensitive workload on                                 okay if anybody's touch the Machine                                 they've compromised with it somehow then                                 the payload is not made available and                                 this payload can be pushed over the air                                 or it could be something that's baked in                                 the image you know we have a script that                                 executes that actually sort of uh can do                                 such things such as move it in to a                                 certain location or run certain commands                                 but none of this happens unless the                                 trust is there okay and then last of all                                 we have something called a revocation                                 framework so what this consists of is                                 when a node fails its integrity we can                                 then kick off certain actions to take so                                 one of them is we integrate with a                                 certificate authority we have CloudFlare                                 SSL at the moment and we're not opinion                                 around which ta we use it's something                                 where we we hope to have like an open                                 plug-in framework we can also work with                                 open SSL so like a local CA and what can                                 happen is when a node fails we can then                                 revoke their certificate because there's                                 a certain certificate authority that we                                 bring the node into so what could happen                                 then is that nodes TLS connections could                                 break because you revoke the certificate                                 IPSec IPSec connections would break down                                 and so forth and then we can also kick                                 off what we call local actions so if you                                 have multiple nodes that you're                                 monitoring and one of those fails then                                 you can tell the others to to enact a                                 local action so that could be remove                                 their key from authorized keys I don't                                 know change a local firewall role                                 anything that you can think of                                 essentially it's kind of pretty much an                                 open scriptable framework so we're gonna                                 kind of glossed over these but we're                                 going to have a look at how these                                 actually work we'll go a little bit more                                 deeper into the use cases so to give you                                 a high-level view actually need to come                                 back here to see the view a bit of our I                                 guess our architecture so there so the                                 key things to                                 to look at first I should have a laser                                 here and it doesn't really work too well                                 but to the left this is actually to your                                 right                                 this is the Wild West okay and then to                                 your left                                 this is on-premise so this would be                                 within your control within your network                                 somewhere you trust essentially okay and                                 then again to the right we have                                 something called the agent now this runs                                 on the load that you're measuring okay                                 and this agent has a very simple job                                 it just requests it just makes requests                                 into the TPM using the TPM software                                 stack so it's pretty simple it makes a                                 request to the TPM and then it hands it                                 back okay it doesn't deal with any                                 secrets we can go into this a bit later                                 but we don't care somebody hacks this                                 nothing is stored there it's pretty dumb                                 it just makes requests in the to the TPM                                 and then sends back signed measurements                                 and if somebody was to tamper with those                                 measurements they would break the                                 measurements so the attack vector is is                                 pretty small here now over to this side                                 Ralph's you have a bit more so the first                                 one is the verifier do you know I've                                 forgotten I've actually got some bubbles                                 here so we communicate with the TPM and                                 we can do these local actions that we                                 spoke about and then we have the                                 verifier so this is ten an ode as in the                                 tenant be new the user and this checks                                 the node system integrity so this gets                                 the measurements and it verifies that                                 the stay is as it should be and is                                 expected to be you have the register so                                 here we store the public keys certain                                 public counterparts of the keys that we                                 spoke about that are embedded within the                                 TPM chip itself and there's a simple                                 database where we have the operational                                 state of the node and its unique ID and                                 so forth we've got our revocation                                 service which we just spoke about so                                 this creates the certain actions that                                 should happen when a node fails its                                 integrity and then last of all we have                                 the certificate authority integration so                                 as I say at the moment we work with                                 CloudFlare                                 SSL but we're making this to be open so                                 you could you know you could effectively                                 tie into any sort of CA okay so as I                                 said we have a kind of quite a friendly                                 widely distributed model so we could go                                 from a single site to a single node we                                 could go for a single denied site to                                 multiple nodes multi site to multi nodes                                 so distributed data centers you have                                 many verifiers and then many different                                 devices and have the verifiers attest                                 each other and so forth and then                                 multiple verifies can attest the same                                 single node so you could have a scenario                                 where you have like if we use cloud for                                 example you be you could have a cloud                                 consumer who wants to verify the nodes                                 trust before they instantiate their                                 workload and they need to have mister                                 cloud provider who also owns the                                 infrastructure and wants to make sure                                 that it's of a good quality before they                                 release it and do whatever they give it                                 to another customer or so forth                                 so let's kind of go a little bit more                                 into the ins and outs of the the key                                 operations and how this works so the                                 first thing is we need to set up our our                                 hardware root of trust okay we need to                                 establish that we're actually talking to                                 a real TPM and then we need to set up                                 the mechanism so that we're going to                                 start to attest these measurements so                                 the first thing can actually let me come                                 back so on a TPM you have an endorsement                                 key and then attestation key and what                                 happens is the public counterparts of                                 these are sent to the register okay so                                 you have a test station keep our                                 endorsement key pub and our ID and the                                 IDS nothing special it doesn't have any                                 cryptographic profit properties it's                                 just it's just a unique ID string think                                 of it like a UUID what happens is our                                 register then using the endorsement key                                 pub it encrypts a hash of the astir                                 station key public key and it also                                 includes a challenge                                 so we actually have a description of our                                 different keys down here you can see ke                                 e and it's an aes                                                      emperor in excuse me in federal                                 challenge to certify the attestation key                                 so these are sent back so we know that                                 as this has the the private ek it will                                 be able to unwrap this challenge prove                                 that it knows and it will then respond                                 with a H back of the ke and the ID which                                 is that UUID that we spoke about and as                                 that happens we now have tied the                                 attestations                                 to an EK identity and we're now at the                                 point where we can trust quotes that are                                 signed with e a k so that's our hardware                                 Rudy trusts so the next part of that is                                 this is something that is quite unique                                 that is in fact is unique to key lime                                 that we do we have this Q key deviation                                 protocol that we run so you the user so                                 you're this guy here the key lime tenant                                 and we provide a CLI application or                                 there's REST API is to drive this you'll                                 create a key which we call the bootstrap                                 key okay and this key will be split now                                 when i say split it's cryptographically                                 split into two counterparts okay and we                                 call these u and v and first of all what                                 we do is we send the v part to the key                                 lime vera file along with some other                                 data we might have a whitelist which is                                 a set of golden hashes that we expect                                 the oh i'm a runtime state to to to have                                 a good comparison with so we send the V                                 counterpart up to the verifier the                                 verifier sends our nonce                                 so that we can avoid replay tax so forth                                 and then a TPM quote is sent back to the                                 verifier and this is signed by d                                 attestation key and we also include this                                 other key called an NK key and this is                                 used to protect these split keys in                                 transit so all of this can happen over                                 HTTP were effectively encrypting the key                                 counterparts that we have a split                                 over here the U and the V so this goes                                 to the verify so it's a TPM quote so                                 somebody that there's no quotes there                                 effectively the measurement list that                                 can then be taken by a party and used to                                 attest the state using the public                                 counterpart key what happens then is the                                 verifier will make a query into the                                 register where we keep the public keys                                 to establish that the a K is valid and                                 we can trust it and then from there                                 using this NK this public NK will                                 encrypt it they will encrypt the V contr                                 part and we'll provide that to the key                                 lime agent over here so it now has half                                 a key okay so it still can't too much                                 now the next part and this is all part                                 of a single operation this isn't split                                 into two stages but I couldn't get it                                 all on one slide so so effectively this                                 is the same transaction continuing                                 across two slides so the next part is                                 the eight that the tenant themselves                                 they also get a TPM quote which is                                 signed body attestation key to prove                                 identity and they also get the agents NK                                 pub and what they do is they then make a                                 call into the register to again                                 establish that the attestation can be                                 trusted if that checks out then what it                                 will do is it will send it will encrypt                                 use an NK the u counterpart and it'll                                 also send an encrypted payload if you're                                 sending it over the air that is to say                                 and what will then happen is certainly                                 encrypt you send it to the node the                                 payload if we send it over the air that                                 would go and then the key shares were                                 brie recombined and the key now has the                                 bootstrap key and it has that key based                                 on like I say this hardware                                 cryptographic REO trust so now that it                                 has that key it can use it to decrypt                                 the payload so we could have a tarball                                 for example and then you have a script                                 which we call to run door set door SH                                 and then that can then                                 move files around and set up your web                                 server and you know put them into your                                 your kind of TLS directory and so forth                                 whatever it is you want to do I mean                                 it's totally up to you we're not                                 opinionated you can have anything you                                 want in your payload and you can carry                                 out the operations that are applicable                                 to your particular application so yeah                                 they say just have mentioned that the                                 payload could be baked into an iso or a                                 q kal                                                                that you have and then the good thing                                 then is you can distribute that that an                                 image with your secrets in there that                                 are protected and you'll know that those                                 secrets won't be unlocked                                 unless that the machine passes his trust                                 date so now all of that's happened our                                 kind of guy over here is having a cup of                                 coffee and we now move into the next                                 state which is continuous remote                                 attestation so this is where we start to                                 use RMA integrity measurement                                 architecture so effectively we had this                                 continuous polling that happens now so                                 Ananse comes in and a TPM to quote has                                 returned the verifier attest the state                                 and then this continuously happens so                                 we're talking it's very lightweight here                                 it's just a simple get request and we're                                 talking of you know we're talking to me                                 and me a few bytes here so so and this                                 is something that's configurable you can                                 configure this polling to your to your                                 own requirements and I have a single                                 machine here but this could be thousands                                 of machines that are all putting                                 requests into the verify and the verify                                 uses a non-blocking i/o framework as                                 well so we've done some scale tests                                 where we've had a few thousand virtual                                 machines or requesting quotes into a                                 single verify so I'm sure there's one                                 for improvement but it can handle quite                                 a large a large grouping of agents so as                                 I say we're in this continuous                                 measurement phase now so one of the                                 things that we would have sent earlier                                 would be a whitelist                                 so a whitelist would be a list of hashes                                 sha-                                                                  column you would have a file so you'll                                 have a POSIX path to a file so                                 essentially you've got the file and then                                 you've got its hash file then it's hash                                 Afar than this hash and this would be a                                 golden state this would be something                                 that you typically generate on an                                 air-gap machine it would be a kind of a                                 cryptographic state of what your you                                 expect your application to look like ima                                 as I said populates the security FS list                                 so it also has a list of hashes and a                                 POSIX path to a to an object but the                                 difference is it extends the                                 cryptographic signing into the TPM                                 extends the measurements re-entered into                                 the TPM and then keylime attest the                                 stroke the trust state use an IMA                                 against the Golden State the whitelist                                 and we also you can configure an IMA                                 policy so some folks might know I am a                                 this is where you delegate what is you                                 actually want to measure within IMA and                                 then what happens an integrity failure                                 occurs so somebody runs a script that's                                 not part of the whitelist or a toggle                                 and selinux label or they they swap out                                 a binary for a Trojan those binary and                                 it's called and ima intercepts and and                                 an integrity failure occurs so this is                                 where we're going to get to the stage                                 where we're going to start to take                                 revocation actions which we described                                 earlier as well so this is our                                 revocation framework and what we do here                                 is the the nodes will all connect with a                                                                                                    connection to the verifier as well the                                 reason here is somebody could like kick                                 the verifier out so we need to make sure                                 that the other nodes can let about they                                 can let the others know about certain                                 failed states and so forth so what will                                 happen is our node fails here so we've                                 got host C that has failed                                 first of all the verifier will make a                                 certificate revocation in to the                                 certificate authority to say that a                                 particular device has failed is                                 attestation                                 okay and then that could be part of a                                 you know that CA it could have a route a                                 certificate that you're kind of cluster                                 then has it's all of its TLS                                 certificates build on top of so for a                                 particular machine you could effectively                                 strip down its connections by revoking                                 the certificate the other thing we do is                                 we send out a signed revocation event                                 from the verifier okay so this is a list                                 of actions to take and as I say it's                                 signed by the verifier so let's have a                                 look at some of the actions that we                                 could take up I sort of already                                 described these earlier but the first                                 one is the verify sends out a signed                                 revocation event so we can make sure                                 it's not somebody pretending to be a                                 verify it's actually you know there's a                                 there's a sign in there and we send that                                 out to the agents and we tell them that                                 remove the failed node from authorized                                 keys it's a very simple example but um                                 that's a sort of just to give you an                                 idea of what you could do and then of                                 course as I alluded to earlier we make a                                 certificate revocation which invalidates                                 all the TLS and IPSec connections and                                 cuts off a failed node the other thing                                 of course is you could integrate this                                 into an existing system you might have                                 an alerting system or an incident                                 management solution you make a an API                                 call or whatever it is whatever it is                                 that you want to do so to come on to                                 move on in the interest of times a                                 little bit more about projects and where                                 we are at the moment cuz we're a young                                 project we've got a nice team that's                                 building we're attracting developers                                 organically which is really nice people                                 are finding us they're coming along                                 they're trying it out they're getting                                 interested they're making patches so as                                 a girl ami recently joined us she found                                 us of her own accord I think she found                                 us for a good first issue and she wants                                 to revamp our UI which is really nice                                 and and so we're not kind of fixed to                                 any particular vendor were a nice                                 organic community this is just right so                                 metrics that are pulled from a github                                 another tool as you can see we got                                 increasing year or new commits where a                                 young but established codebase they                                 consider us a large development team I                                 would like us to be a lot larger but uh                                 you know all in good time hopefully and                                 you can see the first commit was made by                                 MIT in October                                                      recent one was an hour ago but this was                                 like last week or something so one of                                 the things since I've got involved in my                                 the project myself originally it was                                 just some code on github we ported it                                 from Python to to Python free because                                 obviously time is ticking down on Python                                                                                                     there was some sort of a key changes                                 that we got into place and we've                                 achieved those now and we wanted to get                                 it looking and smelling like a kind of a                                 good open source project so we have CI                                 testing so somebody makes a poor request                                 we we instantiate a container which has                                 a TPM emulator and then we run a series                                 of functional tests to sort of mimic an                                 attestation happening and we also use a                                 coda city as well to sort of you know                                 lint checks and so forth we have some                                 documentation we need better                                 documentation I think every budget                                 project could say that you know we had a                                 good framework there and and we're                                 starting to look at doing build testing                                 as well so we one of the things we're                                 keylime we've had people interested from                                 of course the there's that your kind of                                 standard Linux distributions with the                                 IOT people and the edge people are very                                 interested in this side had a few people                                 approached me because the essentially                                 we're an IOT or an edge device it could                                 be up in the ceiling there so physically                                 it's well it's not an easy place to                                 access physically but you get the idea                                 it's not protected it's not in a data                                 center so they have a lot of concerns                                 around people kind of messing with our                                 different interfaces and actually                                 accessing a an edge device or an IOT                                 device so we meet weekly we have like a                                 channel that's open                                                   hang out so one of the things we wanted                                 to do is when people come along and they                                 try it                                 you know they get a big exception and                                 something's broken or just doesn't work                                 or they don't understand it we want to                                 be really open and friendly for people                                 do you see what I mean so if people                                 actually try our software we're really                                 going to try and support them help them                                 get it working there's no such thing as                                 a stupid question and just be a good                                 open community that there's welcoming                                 really so that's one of the key things                                 that we've tried to try to have from the                                 beginning so we as I say we meet once a                                 week                                                                     is welcome and we track all of our                                 meetings as github issues so this allows                                 us to reference pull requests and                                 everything sort of ties in quite nicely                                 that works well for us so what's coming                                 next so we had the agent and this is                                 remember the part that runs on the                                 remote machine that you're monitoring                                 that was originally developed in Python                                 and we're porting that to rust so I'm                                 working on that at the moment and we                                 essentially we've gone through rust                                 because performance and there's you know                                 there's no garbage collection and the                                 security memory safety and thread safety                                 and and and a strict compiler as well to                                 help keep the technical debt down a bit                                 so that's a work in progress and                                 eventually the Python agent will then be                                 depreciated we're working on something                                 that we call in a VT PM support so we're                                 the TPM it's a hardware chip that's on a                                 machine ok and it doesn't scale very                                 well it works very well within the                                 context of being in the machine and a                                 test in that machine but if you have a                                 virtual TPM well put it this way a                                 hardware TPM it can't handle a                                 significant load it's better working                                 with single operations so some somebody                                 Stephan Berger has worked on some code                                 for a VT p.m. so VT p.m. is great                                 because you can you could instantiate it                                 in a container or a virtual machine but                                 the problem is you're back to having                                 your trust on disk and in memory ok so                                 we need to kind of cryptographically                                 marry the V TPM                                 trust to the hardware TPM trust so this                                 is something that was created by Nabeel                                 one of the guys from MIT and he's                                 working on this with some some interns                                 from Boston University that are part of                                 the mass open crowd project that they                                 have there and I'm not an expert on this                                 but effectively what they're going to do                                 is they're going to pull all of the                                 quotes together build them into a Merkel                                 tree and then there'll be a wholesale                                 parsing of these quotes to the hardware                                 TPM which can attest them and then they                                 go back to the verifier and then that                                 will individually let the specific VT                                 PMS and the person so that will let the                                 person measure in those VT PM's know                                 about their current state so I wouldn't                                 be anybody call us me about all details                                 about this on I'm following the work but                                 it's not work then I'm actually doing                                 myself I'm more working on the core code                                 base itself but this will allow us mass                                 scale okay so we can then have thousands                                 of containers not all trying to shoehorn                                 them into working with one hardware TPM                                 and it extends the hardware crypto trust                                 to the virtual TPM so we're expecting                                 there's a there's a prototype being                                 developed at the moment we're hoping                                 we'll have something to show in perhaps                                 three to four months so interrupts                                 ability and feedback so we love having                                 different TPM vendors come along and try                                 to get it working and if it doesn't we                                 try to get it working for you you know                                 we're very much into testing this out on                                 different software environments                                 different platforms generally we're                                 pretty much abstract it away from the                                 hardware so a lot of the time we're not                                 really sort of heavily dependent on our                                 more x                                                                 feedback that's the one thing tell us                                 you guys this isn't so useful you should                                 be focusing on this this is what we need                                 that's the sort of stuff that we really                                 value so to round up you know we're                                 looking for anybody to come and help                                 here engineers users architects                                 documentation writers people need to                                 write in code people old to write                                 you know we're really not picky we value                                 any help that we can get and last of all                                 like I said we're a young project we                                 have a responsible disclosure system in                                 place where anybody can report anything                                 that had seen side so I'd ask when                                 you're asking questions there's some                                 experts here there's something that                                 you're unsure about consider you know                                 doing me maybe need to discuss this as                                 being potential bug that we need to look                                 at so just just be mindful of that                                 because we were a new project and with                                 that I can how we do know that two                                 minutes off half past I've done well so                                 we got a little bit of time for some                                 questions but I'm here for the rest of                                 the day if anybody wants to grab me as                                 well                                 so on one of your slides you mentioned                                 you had a golden set of hash values and                                 I know on some operating systems like                                 Windows that these hash values can be                                 fairly unstable they can change between                                 multiple boots and that Windows with the                                 TCG introduced the event log have you                                 looked at that have you had good results                                 bad results that's a really good                                 question because measurements has been                                 the Achilles heel of TPM okay so with                                 with keynote there are certain things                                 that are going to be more noisy and                                 they're going to change this state more                                 okay so generally we get people focusing                                 on the the core parts of the system that                                 should be monitored more than logs and                                 so forth so there's other approaches                                 that we would recommend though you know                                 there's some interesting stuff happening                                 with trusted T's and so forth execution                                 environments so but on the question of                                 measurement so with the white list you                                 can reprovision a machine so if you had                                 an OS upgrade you could send a new list                                 of measurements okay around how this                                 would work with Windows do forgive me on                                 I should probably get more up to speed                                 on what they're doing there but but one                                 of the things that we're we're excited                                 about in keylime when it comes to                                 measurements is there's a certain                                 movement towards immutable operating                                 systems where it's very much a fixed                                 state and that makes measurements very                                 easy then so what we can then do is we                                 can we got a very static core OS to                                 measure and then we have the container                                 where things are a bit more noisy and we                                 can take our own approach there so we're                                 going to be looking at ways that we can                                 make it a lot easier to source a                                 measurement list and not have to be                                 worried about this constant moving                                 target because for the ten odd years or                                 maybe more that TPMS been around that's                                 always been the challenge really is is                                 is how to manage these measurements so                                 you know Eureka there is a good light at                                 the end of it                                 more questions                                 hi thanks very interesting quick                                 question about the actual core library                                 that you're using to access the TPM so                                 there's several possibilities that I'm                                 aware of there's a TSS from IBM and also                                 some work from Intel are you using any                                 of these to do the actual data                                 marshalling and unmarked Allah or have                                 you implemented something on your own                                 another really good question I should                                 have had that in my slides so we're                                 using what people refer to as the Intel                                 TPM software stack                                 so effectively over the the resource                                 manager TSS and then the TPM to command                                 toolset so so we we actually we call                                 through those so so we use that as our                                 communication stack currently I mean                                 it's not to say we're against using                                 others it's just what we've landed on                                 that present but we're trying to sort of                                 focus more on building on top of that                                 rather than I've been too deeply                                 entwined yeah good morning and thank you                                 for a wonderful presentation the one                                 thing I didn't follow is how is the bare                                 metal machine provisioned and imaged in                                 the first place so that you'll know what                                 to expect as far as measurements are                                 concerned yes so there I mean there are                                 various bare metal provisioning systems                                 that around there is for example I know                                 like OpenStack has one ironic and                                 kubernetes has one I'm sure Azure you                                 have your own bare metal provisioning                                 framework and for us so there's two of                                 the current approaches we we remotely                                 push the agent onto the machine okay so                                 we don't really care at what stage we                                 measure because we're not going to stop                                 a boot from happening if you see what I                                 mean so if so we don't need to be really                                 early to prevent a boot from                                 and in all we do is we take the very end                                 result in measurement and then we say to                                 the app we're there for the application                                 to know that's a good environment                                 essentially so but having said that we                                 do want to look at seeing if we can be                                 part of an early service startup within                                 the TPM and do rally within that the                                 machine itself but as to the real ins                                 and outs of how we'll interplay with a                                 bare-metal provisioning system we're yet                                 to really eke out the the best practices                                 there you know thank you so much                                 yes so you've explained you can verify                                 the boot and integrity of the system                                 once it's originally booted so what I                                 was wondering is which problems can you                                 not detect with this solution so for                                 example if you have volatile changes in                                 memory can you like verify the integrity                                 of a running system no so so we wouldn't                                 be able to do that we're not going to                                 try and do everything so we're very much                                 we we heavily harness IMA for a run time                                 for verification so so you could think                                 of us as being like a trip wire but with                                 a TPM routed trust essentially it and                                 and the good thing about ima cuz it's in                                 the Linux subsystem it will it will                                 create those measurements before                                 execution as well so so there are                                 actually other measures there's there's                                 part of ima as you have EVM extended                                 verification modules which is a file                                 label and and that can make certain                                 blocks and so forth but we don't have                                 the ability to to really dig into the                                 memory or oh I'm we don't really plan to                                 as well I think it's a very valid area                                 that needs to dress him but we're trying                                 to sort of do one thing well rather than                                 lots of things not so well okay sounds                                 like a sane approach Thanks well                                 question                                 let's find a speaker right yeah                                 [Applause]
YouTube URL: https://www.youtube.com/watch?v=YtPsruEqGeY


