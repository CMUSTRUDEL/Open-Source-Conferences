Title: Subsystem Update: tpm2-Software Update and Highlights - Philip Tricca, Intel
Publication date: 2019-08-28
Playlist: Linux Security Summit NA 2019 - San Diego
Description: 
	Subsystem Update: tpm2-Software Update and Highlights - Philip Tricca, Intel 

Since our last update at LSS 2018 the tpm2-software community has been hard at work. Our implementation of components and APIs from the TCG TPM2 software stack (TSS2) architecture continue to mature and stabilize thanks to the numerous contributions from the core team and many motivated contributors. With the number of distros and projects actively using the TSS2 growing we've been hard at work solving common usability issues and expanding the tools available to bootstrap projects. This talk will focus on the significant accomplishments and new developments from the tpm2-software community in 2019 while highlighting progress on our efforts to enable use-cases important to downstream consumers.
Captions: 
	00:00:00,060 --> 00:00:05,850
so uh status update for the TSS to

00:00:03,780 --> 00:00:10,260
userspace this is kind of a milestone

00:00:05,850 --> 00:00:12,900
for us in past wealth conferences like

00:00:10,260 --> 00:00:14,610
this LSS and a few others we've done

00:00:12,900 --> 00:00:17,220
some talks about this but they've always

00:00:14,610 --> 00:00:19,050
been focused on the large architecture

00:00:17,220 --> 00:00:21,590
what the api's are how the plumbing

00:00:19,050 --> 00:00:24,300
works how everything fits together and

00:00:21,590 --> 00:00:26,460
you know we've of course then you know

00:00:24,300 --> 00:00:28,800
the the evolution of the project from a

00:00:26,460 --> 00:00:30,840
really rough prototype - you know our

00:00:28,800 --> 00:00:33,960
goals and aspirations to having like a

00:00:30,840 --> 00:00:35,610
real stable piece of infrastructure that

00:00:33,960 --> 00:00:37,820
you know people just rely on and use

00:00:35,610 --> 00:00:40,739
like it's you know part of the ecosystem

00:00:37,820 --> 00:00:42,270
and so today doing this this as an

00:00:40,739 --> 00:00:43,860
update it's you know kind of mission

00:00:42,270 --> 00:00:47,039
accomplished I'm doing a lot less work

00:00:43,860 --> 00:00:49,620
these days the presentations are shorter

00:00:47,039 --> 00:00:52,980
they're much less complicated and you

00:00:49,620 --> 00:00:54,030
know I'm fighting through far far fewer

00:00:52,980 --> 00:00:56,820
bugs than we used to

00:00:54,030 --> 00:00:59,219
plus our our community has grown quite a

00:00:56,820 --> 00:01:01,590
bit which is really nice so today I'm

00:00:59,219 --> 00:01:04,559
doing a status update and I'll cover

00:01:01,590 --> 00:01:06,630
just this past year our progress on the

00:01:04,559 --> 00:01:08,340
core libraries have things that I think

00:01:06,630 --> 00:01:10,350
I was just the plumbing and then we'll

00:01:08,340 --> 00:01:13,260
move on to work to enable the the use of

00:01:10,350 --> 00:01:15,479
the TPM through plugins to existing kind

00:01:13,260 --> 00:01:19,770
of cryptographic frameworks and and well

00:01:15,479 --> 00:01:21,150
used programming api's and such then

00:01:19,770 --> 00:01:22,979
finally we're just gonna close on a

00:01:21,150 --> 00:01:24,210
little bit of what you would expect

00:01:22,979 --> 00:01:25,500
which is kind of you know

00:01:24,210 --> 00:01:26,610
forward-looking things we'll be doing in

00:01:25,500 --> 00:01:28,350
the future

00:01:26,610 --> 00:01:29,759
and things will be looking for some you

00:01:28,350 --> 00:01:30,810
know some input from from you all on

00:01:29,759 --> 00:01:31,920
things you may actually want to

00:01:30,810 --> 00:01:32,850
contribute to if you're you're

00:01:31,920 --> 00:01:35,880
interested in getting going

00:01:32,850 --> 00:01:38,070
but first the plumbing so our goals have

00:01:35,880 --> 00:01:40,290
always been for this to really improve

00:01:38,070 --> 00:01:42,119
the maturity of the project get a real

00:01:40,290 --> 00:01:44,220
good release cadence down add new

00:01:42,119 --> 00:01:46,049
features without you know destabilizing

00:01:44,220 --> 00:01:48,960
API is really you know what you would

00:01:46,049 --> 00:01:51,329
expect from a mature project we've got a

00:01:48,960 --> 00:01:53,000
new github diode page now so we're

00:01:51,329 --> 00:01:56,090
working on improving our documentation

00:01:53,000 --> 00:01:58,890
which you know is not as much fun as

00:01:56,090 --> 00:02:01,350
doing the coding but it's kind of just

00:01:58,890 --> 00:02:02,670
part of the business we've got our code

00:02:01,350 --> 00:02:04,200
coverage metrics that we're collecting

00:02:02,670 --> 00:02:06,780
through all of our CI loops we've

00:02:04,200 --> 00:02:08,670
reached 80% average for the project some

00:02:06,780 --> 00:02:11,849
are a bit above some are a bit below

00:02:08,670 --> 00:02:14,459
but 80% on average we've also started

00:02:11,849 --> 00:02:17,280
doing some work with the Linux

00:02:14,459 --> 00:02:18,510
foundations the the core infrastructure

00:02:17,280 --> 00:02:20,160
initiative so we've gone through the

00:02:18,510 --> 00:02:22,980
self certification process for these

00:02:20,160 --> 00:02:24,569
these core libraries through the CII

00:02:22,980 --> 00:02:27,330
which is nice getting a little badge on

00:02:24,569 --> 00:02:32,160
your readme file on github and I know

00:02:27,330 --> 00:02:33,480
everyone thinks you're special for it so

00:02:32,160 --> 00:02:36,959
the the core libraries themselves the

00:02:33,480 --> 00:02:39,750
TPM - - TSS repository that house or

00:02:36,959 --> 00:02:41,670
that houses the real guts of the project

00:02:39,750 --> 00:02:43,799
so we've done three minor releases this

00:02:41,670 --> 00:02:47,160
year no major releases which is nice the

00:02:43,799 --> 00:02:49,280
api's are stable and we're hitting a

00:02:47,160 --> 00:02:52,260
good release cadence of you know every

00:02:49,280 --> 00:02:55,190
four or five months we've added a couple

00:02:52,260 --> 00:02:58,019
or we've added a new library to help

00:02:55,190 --> 00:02:59,459
with user experience one of the biggest

00:02:58,019 --> 00:03:02,180
problems that we had all along is that

00:02:59,459 --> 00:03:04,470
when errors happen you basically have a

00:03:02,180 --> 00:03:06,599
hex number that tells you what the

00:03:04,470 --> 00:03:08,160
response code means and you have to go

00:03:06,599 --> 00:03:09,390
and manually pull it apart one of the

00:03:08,160 --> 00:03:10,830
first things I did for the project was

00:03:09,390 --> 00:03:12,150
to write a tool that did this on the

00:03:10,830 --> 00:03:13,950
command line but still no one ever uses

00:03:12,150 --> 00:03:16,260
it we still get people to just send us

00:03:13,950 --> 00:03:18,200
you know the hex digits over the mailing

00:03:16,260 --> 00:03:20,400
list and ask us to decode them for them

00:03:18,200 --> 00:03:21,630
but we turned it into a library and

00:03:20,400 --> 00:03:23,190
we're starting to integrate this library

00:03:21,630 --> 00:03:25,019
into the project so you should be

00:03:23,190 --> 00:03:27,180
getting much much more understandable

00:03:25,019 --> 00:03:28,950
messages out of there that's already

00:03:27,180 --> 00:03:32,670
done and out there the TC ti loader got

00:03:28,950 --> 00:03:35,040
a little stuck I the TCG does all the

00:03:32,670 --> 00:03:36,569
documents or all the specifications in

00:03:35,040 --> 00:03:38,190
Word files I'm not particularly great

00:03:36,569 --> 00:03:39,569
with Microsoft Word so I kind of screwed

00:03:38,190 --> 00:03:41,819
it up it was supposed to be in public

00:03:39,569 --> 00:03:43,739
review now but I got held up for a week

00:03:41,819 --> 00:03:45,989
because I don't know where all that well

00:03:43,739 --> 00:03:47,609
but it's under review now that should be

00:03:45,989 --> 00:03:51,000
out hopefully for public review next

00:03:47,609 --> 00:03:52,530
week and you know the next major thing

00:03:51,000 --> 00:03:55,139
we're pushing towards here is the future

00:03:52,530 --> 00:03:56,430
API this is something that we had a you

00:03:55,139 --> 00:03:58,019
know there's been a public review

00:03:56,430 --> 00:04:00,720
version of this out for almost five

00:03:58,019 --> 00:04:03,329
years now but there's been a lot of

00:04:00,720 --> 00:04:05,069
churn since and we should have another

00:04:03,329 --> 00:04:07,709
version of this out hopefully with an

00:04:05,069 --> 00:04:09,180
implementation following it this is

00:04:07,709 --> 00:04:12,090
something that our friends and

00:04:09,180 --> 00:04:13,829
collaborators at Infineon and Fraunhofer

00:04:12,090 --> 00:04:15,209
have been working on with us so that's

00:04:13,829 --> 00:04:17,280
not out just yet but you should be

00:04:15,209 --> 00:04:19,349
seeing that sometime in the fall the

00:04:17,280 --> 00:04:21,049
tools the command-line tools probably

00:04:19,349 --> 00:04:22,729
the things that people use the most

00:04:21,049 --> 00:04:25,009
and as god has seen a whole lot of churn

00:04:22,729 --> 00:04:27,409
this year we've done two minor releases

00:04:25,009 --> 00:04:29,810
since the last LSS and just yesterday

00:04:27,409 --> 00:04:30,409
bill Roberts who has been pushing a lot

00:04:29,810 --> 00:04:31,789
of this forward

00:04:30,409 --> 00:04:33,949
Ashley's been the main driving force

00:04:31,789 --> 00:04:36,590
behind it put out the first release

00:04:33,949 --> 00:04:38,990
candidate for our Ford auto tool our

00:04:36,590 --> 00:04:40,550
release of the tools this is a big

00:04:38,990 --> 00:04:42,639
improvement in that it aligns all of our

00:04:40,550 --> 00:04:44,810
of the command line parameters that were

00:04:42,639 --> 00:04:46,789
unfortunately a bit scattered in the

00:04:44,810 --> 00:04:48,650
past so bill sunk a lot of time into

00:04:46,789 --> 00:04:49,909
cleaning this up and you know we're very

00:04:48,650 --> 00:04:52,400
grateful for that stuff

00:04:49,909 --> 00:04:54,560
also dirt this Ford auto release has

00:04:52,400 --> 00:04:56,030
been a port with the tools previously

00:04:54,560 --> 00:04:58,039
they had used one of the very low-level

00:04:56,030 --> 00:05:01,129
API is the system API which really

00:04:58,039 --> 00:05:02,060
wasn't intended for use at this level

00:05:01,129 --> 00:05:03,229
but it was the only thing we had

00:05:02,060 --> 00:05:05,750
available when we started the project

00:05:03,229 --> 00:05:07,940
now that we have an implementation of

00:05:05,750 --> 00:05:10,849
the enhanced system API that wraps up a

00:05:07,940 --> 00:05:11,830
lot of the details that the tools used

00:05:10,849 --> 00:05:14,750
to do themselves

00:05:11,830 --> 00:05:17,680
the tools now gets things like auth

00:05:14,750 --> 00:05:19,819
session support and much better

00:05:17,680 --> 00:05:23,060
hopefully support over the long run too

00:05:19,819 --> 00:05:24,770
so all of the sessions support means we

00:05:23,060 --> 00:05:28,880
can do things like sessions with the TPM

00:05:24,770 --> 00:05:30,830
so H max and stuff like that the

00:05:28,880 --> 00:05:33,050
Resource Manager the user space Resource

00:05:30,830 --> 00:05:35,120
Manager is kind of being used less and

00:05:33,050 --> 00:05:38,840
less as the one in the kernel gets more

00:05:35,120 --> 00:05:40,759
features and and distros pickup newer

00:05:38,840 --> 00:05:43,279
kernels so we've only had two minor

00:05:40,759 --> 00:05:45,620
releases since the last LSS in those

00:05:43,279 --> 00:05:48,199
releases I've added context gap handling

00:05:45,620 --> 00:05:49,909
fixing bugs in our partial reads support

00:05:48,199 --> 00:05:51,349
of the TCG I layer that's the transport

00:05:49,909 --> 00:05:56,979
layer and largely I've just been

00:05:51,349 --> 00:06:00,440
focusing on stability there so in

00:05:56,979 --> 00:06:03,650
enabling some of the existing use cases

00:06:00,440 --> 00:06:05,569
that we're trying to go for we've

00:06:03,650 --> 00:06:08,779
developed an open SSL engine that plugs

00:06:05,569 --> 00:06:11,029
into the existing engine API and we have

00:06:08,779 --> 00:06:13,909
support for in the 1 dato release that

00:06:11,029 --> 00:06:15,710
happened I think back in the spring the

00:06:13,909 --> 00:06:17,690
open SSL command works so you can get

00:06:15,710 --> 00:06:19,569
random digits or you can't random data

00:06:17,690 --> 00:06:23,150
from the the the TPM

00:06:19,569 --> 00:06:25,129
RSA ECDSA commands work some of the

00:06:23,150 --> 00:06:27,050
x.509 like requests the certificate

00:06:25,129 --> 00:06:28,639
request will also work as well so you

00:06:27,050 --> 00:06:31,149
could sign certificate requests with a

00:06:28,639 --> 00:06:33,500
key that's in the TPM we did a

00:06:31,149 --> 00:06:34,550
presentation in a demo at FOSDEM in the

00:06:33,500 --> 00:06:36,610
spring

00:06:34,550 --> 00:06:40,129
and there's a great demo of the s server

00:06:36,610 --> 00:06:42,410
using a doing an SSL connection to a

00:06:40,129 --> 00:06:45,259
client where the server has its key and

00:06:42,410 --> 00:06:47,150
the TPM this is the the work of andreas

00:06:45,259 --> 00:06:50,539
Fuchs one of our collaborators from

00:06:47,150 --> 00:06:52,879
Germany and Fraunhofer the pkcs 11 work

00:06:50,539 --> 00:06:55,039
got a little bit slowed down on account

00:06:52,879 --> 00:06:56,960
of a couple people in a little bit of

00:06:55,039 --> 00:06:59,900
attrition it's hard to hold on to good

00:06:56,960 --> 00:07:01,750
help and that got held up a bit while

00:06:59,900 --> 00:07:04,759
bill was focusing on the tools release

00:07:01,750 --> 00:07:07,039
so it's usable now for authentication

00:07:04,759 --> 00:07:08,419
and we have that link there is to a

00:07:07,039 --> 00:07:11,300
commit where to adding some

00:07:08,419 --> 00:07:15,550
documentation for using the pkcs 11

00:07:11,300 --> 00:07:17,870
plugin with open SSL for authentication

00:07:15,550 --> 00:07:19,520
the nice thing about this though is that

00:07:17,870 --> 00:07:22,310
we're able we're going to align it now

00:07:19,520 --> 00:07:25,550
with the feature API work because a pkcs

00:07:22,310 --> 00:07:28,610
11 library or plugin rather needs to

00:07:25,550 --> 00:07:30,440
have some kind of storage so that it can

00:07:28,610 --> 00:07:32,030
you know basically be the token that you

00:07:30,440 --> 00:07:34,460
would expect to be on a smart card this

00:07:32,030 --> 00:07:36,740
means you had to implement a database

00:07:34,460 --> 00:07:38,419
key database which is something that's

00:07:36,740 --> 00:07:40,909
going to be in the future API anyways

00:07:38,419 --> 00:07:42,020
and so holding up that work wasn't a bad

00:07:40,909 --> 00:07:44,270
thing because it means that we can just

00:07:42,020 --> 00:07:45,530
rebase it on this API that we are hoping

00:07:44,270 --> 00:07:47,539
to have out by the end of the year and

00:07:45,530 --> 00:07:49,699
then we get the the key database for

00:07:47,539 --> 00:07:51,500
free which is really nice

00:07:49,699 --> 00:07:55,610
finally myself I've been focusing a bit

00:07:51,500 --> 00:07:57,740
on enabling some UEFI use cases this

00:07:55,610 --> 00:08:00,979
slasher was a prototype but it's moved

00:07:57,740 --> 00:08:02,330
into the proper project now and I've set

00:08:00,979 --> 00:08:07,490
up a whole pile of automated testing

00:08:02,330 --> 00:08:09,919
using the software TPM ov EMF firmware

00:08:07,490 --> 00:08:11,180
qmu and UEFI shell I've got a whole

00:08:09,919 --> 00:08:13,039
bunch of example code that's up there

00:08:11,180 --> 00:08:15,259
now and all of those things run in CI so

00:08:13,039 --> 00:08:17,270
when we do a build of this it kicks off

00:08:15,259 --> 00:08:20,210
a Travis build that actually will set up

00:08:17,270 --> 00:08:23,719
a full virtual environment to run the

00:08:20,210 --> 00:08:25,340
UEFI under which is pretty interesting

00:08:23,719 --> 00:08:26,479
to set up is really useful I think a

00:08:25,340 --> 00:08:29,659
little bit of a blog post down there

00:08:26,479 --> 00:08:31,419
describing it now finally things that

00:08:29,659 --> 00:08:33,409
we're heading towards in the next year

00:08:31,419 --> 00:08:35,360
it's actually some stuff that we that's

00:08:33,409 --> 00:08:37,459
kind of gonna happen pretty quickly I

00:08:35,360 --> 00:08:40,520
hope we've had an RFC out there from

00:08:37,459 --> 00:08:44,029
from Fraunhofer for some bindings to

00:08:40,520 --> 00:08:45,890
Python for since January they're used

00:08:44,029 --> 00:08:47,630
the FFI interface and it wasn't

00:08:45,890 --> 00:08:49,730
particularly object oriented so

00:08:47,630 --> 00:08:51,199
and we went back and took a look and

00:08:49,730 --> 00:08:54,350
decided to go the route abusing swig

00:08:51,199 --> 00:08:55,850
setup PI and its uses much more of the

00:08:54,350 --> 00:08:59,149
what you expect from Python you know

00:08:55,850 --> 00:09:00,980
objects that's imminent it's right now

00:08:59,149 --> 00:09:03,589
under review inside of Intel before

00:09:00,980 --> 00:09:05,839
public release so until is getting

00:09:03,589 --> 00:09:07,009
pretty rigid about reviewing stuff

00:09:05,839 --> 00:09:08,420
before it goes out the door is open

00:09:07,009 --> 00:09:10,310
source and this is you know it's got

00:09:08,420 --> 00:09:11,810
cotton in that and will get it is gonna

00:09:10,310 --> 00:09:13,370
get a pretty pretty good look before it

00:09:11,810 --> 00:09:14,600
gets out the door so can't say exactly

00:09:13,370 --> 00:09:16,579
when it's gonna be there but we're

00:09:14,600 --> 00:09:18,050
hoping it's gonna be soon and we're

00:09:16,579 --> 00:09:20,209
hoping to go the route the same route

00:09:18,050 --> 00:09:22,880
for additional languages more bindings

00:09:20,209 --> 00:09:26,420
more support just makes it more usable

00:09:22,880 --> 00:09:29,389
for everyone else crypt setup and Lux is

00:09:26,420 --> 00:09:31,759
support for Lux's has been a pull

00:09:29,389 --> 00:09:33,800
request against the Crypt setup repo for

00:09:31,759 --> 00:09:35,180
about eight months now they're finally

00:09:33,800 --> 00:09:37,220
starting to make some progress on it

00:09:35,180 --> 00:09:38,870
they didn't want to implement or use the

00:09:37,220 --> 00:09:40,730
TPM api's directly they want to have

00:09:38,870 --> 00:09:42,980
kind of a layer between them so they can

00:09:40,730 --> 00:09:44,180
support generic tokens and so it looks

00:09:42,980 --> 00:09:47,000
like we're going to be the first use

00:09:44,180 --> 00:09:49,130
case for this token interface encrypt

00:09:47,000 --> 00:09:51,560
setup and that's the link right there to

00:09:49,130 --> 00:09:53,329
there to the merge request that andre

00:09:51,560 --> 00:09:54,439
has put up a while back and you can see

00:09:53,329 --> 00:09:56,199
some of the notes from the folks at

00:09:54,439 --> 00:09:58,220
crypt setup that are working on it

00:09:56,199 --> 00:09:59,389
finally myself I've been looking like I

00:09:58,220 --> 00:10:00,949
was saying at some of the the firmware

00:09:59,389 --> 00:10:03,680
stuff and so I've been parsing some of

00:10:00,949 --> 00:10:05,810
that that event log information and as

00:10:03,680 --> 00:10:07,279
more and more of these kind of disparate

00:10:05,810 --> 00:10:08,600
formats come together and you know folks

00:10:07,279 --> 00:10:11,300
probably heard Monty talking about this

00:10:08,600 --> 00:10:13,490
unified format for these things it might

00:10:11,300 --> 00:10:15,620
be useful for for us to have some kind

00:10:13,490 --> 00:10:17,120
of standard API there there's no work on

00:10:15,620 --> 00:10:20,029
that just yet I've got a pile of code

00:10:17,120 --> 00:10:21,889
that does it but I think eventually

00:10:20,029 --> 00:10:23,569
we're gonna have to make make any a

00:10:21,889 --> 00:10:24,680
library so that folks that are

00:10:23,569 --> 00:10:26,600
implementing you know how to station

00:10:24,680 --> 00:10:28,490
responders and verifiers will have some

00:10:26,600 --> 00:10:34,670
help and won't have to write it all

00:10:28,490 --> 00:10:37,009
themselves from scratch that's it so if

00:10:34,670 --> 00:10:38,420
anyone has any questions we've got you

00:10:37,009 --> 00:10:40,430
can go to any other project sites you

00:10:38,420 --> 00:10:42,110
can go to the the github dot IO page

00:10:40,430 --> 00:10:44,949
you'll find our readme is there we have

00:10:42,110 --> 00:10:47,769
a link to our IRC channel mailing list

00:10:44,949 --> 00:10:50,750
instructions for submitting

00:10:47,769 --> 00:10:55,639
contributions through github and that's

00:10:50,750 --> 00:11:00,850
a great resource to get started any

00:10:55,639 --> 00:11:00,850

YouTube URL: https://www.youtube.com/watch?v=hMo2kcgqwMU


