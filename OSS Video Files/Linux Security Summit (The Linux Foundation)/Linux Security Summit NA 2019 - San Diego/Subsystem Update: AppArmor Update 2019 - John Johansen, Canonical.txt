Title: Subsystem Update: AppArmor Update 2019 - John Johansen, Canonical
Publication date: 2019-08-28
Playlist: Linux Security Summit NA 2019 - San Diego
Description: 
	Subsystem Update: AppArmor Update 2019 - John Johansen, Canonical 

This talk provides an update of the current state of the AppArmor project. It will look at new features, and miscellaneous changes developed over the last year, as well as a look at the current work in progress.
Captions: 
	00:00:00,060 --> 00:00:07,919
better there we go alright so we're just

00:00:04,290 --> 00:00:10,650
gonna get going right away so one of the

00:00:07,919 --> 00:00:13,769
things we added this year was a primer e

00:00:10,650 --> 00:00:17,820
to e project Eric did the work for that

00:00:13,769 --> 00:00:20,279
and so that can improve our testing and

00:00:17,820 --> 00:00:23,670
along with that Mike's been working on

00:00:20,279 --> 00:00:27,150
using cane K unit to add a unit testing

00:00:23,670 --> 00:00:30,320
for our kernel we've we found actually

00:00:27,150 --> 00:00:32,399
several bugs that aren't exposed but

00:00:30,320 --> 00:00:33,840
hopefully you know we won't find any

00:00:32,399 --> 00:00:35,399
that are exposed but we've been able to

00:00:33,840 --> 00:00:38,790
fix some things in the code because of

00:00:35,399 --> 00:00:40,860
this we had a whole bunch of releases

00:00:38,790 --> 00:00:45,629
this year a lot of stable work

00:00:40,860 --> 00:00:51,149
maintenance work way too much time on

00:00:45,629 --> 00:00:53,010
that improvements so for the LSM

00:00:51,149 --> 00:00:56,219
stacking namespacing stuff there's been

00:00:53,010 --> 00:00:58,199
some changes we're gonna we're landing

00:00:56,219 --> 00:01:01,050
hopefully we'll land it for the next

00:00:58,199 --> 00:01:04,619
kernel of the a perm directly under proc

00:01:01,050 --> 00:01:07,920
to help with named stacking more

00:01:04,619 --> 00:01:11,130
interface virtualization we have a user

00:01:07,920 --> 00:01:14,250
space FD API that's gonna land shortly

00:01:11,130 --> 00:01:17,100
that allows people to pass around the FD

00:01:14,250 --> 00:01:21,540
to that the and the interfaces so that

00:01:17,100 --> 00:01:26,040
it can be used in containers rework

00:01:21,540 --> 00:01:29,310
so we're reworking the buffers a primer

00:01:26,040 --> 00:01:30,990
uses a whole bunch of work buffers to do

00:01:29,310 --> 00:01:34,470
some of the stuff it does

00:01:30,990 --> 00:01:37,710
they were per CPU so on large systems

00:01:34,470 --> 00:01:39,270
that's a lot of memory and and I had

00:01:37,710 --> 00:01:41,369
preamp disable around some of this

00:01:39,270 --> 00:01:43,920
because you didn't want to have to loop

00:01:41,369 --> 00:01:47,420
back in on the per CPU buffers so

00:01:43,920 --> 00:01:49,380
removing this makes a real time happy

00:01:47,420 --> 00:01:51,000
and there's a whole bunch of cleanups

00:01:49,380 --> 00:01:54,329
once we get rid of the primp disable

00:01:51,000 --> 00:01:57,090
that we can do checkpoint

00:01:54,329 --> 00:01:59,280
data compression so we have data in the

00:01:57,090 --> 00:02:02,700
kernel that bring in for checkpoint

00:01:59,280 --> 00:02:05,070
restore support for containers and so

00:02:02,700 --> 00:02:07,140
since that's not that's part of the data

00:02:05,070 --> 00:02:09,090
that's not used hardly ever or policy

00:02:07,140 --> 00:02:12,239
pieces that aren't used live in the

00:02:09,090 --> 00:02:13,500
kernel those get compressed so we're not

00:02:12,239 --> 00:02:16,740
using up so much

00:02:13,500 --> 00:02:18,990
Maree for those we've improved our

00:02:16,740 --> 00:02:21,000
attachment conflict resolution so in

00:02:18,990 --> 00:02:22,560
Colonel there's improvements to to deal

00:02:21,000 --> 00:02:26,040
with this when there's an overlap on

00:02:22,560 --> 00:02:27,510
policy and the compiler also picked up

00:02:26,040 --> 00:02:29,130
some improvements on the hint that it

00:02:27,510 --> 00:02:31,170
can give to the colonel

00:02:29,130 --> 00:02:33,959
we have a whole bunch of state machine

00:02:31,170 --> 00:02:35,520
improvements we refactored the matching

00:02:33,959 --> 00:02:36,990
engine that hasn't quite landed yet but

00:02:35,520 --> 00:02:39,690
it's landing soon

00:02:36,990 --> 00:02:41,610
we've improved verifier checks there was

00:02:39,690 --> 00:02:45,270
a couple cases where we found a couple

00:02:41,610 --> 00:02:48,000
bugs so that our verifier is really

00:02:45,270 --> 00:02:49,950
important especially well we'll get to

00:02:48,000 --> 00:02:53,250
that in a minute with some stuff we're

00:02:49,950 --> 00:02:55,530
gonna land we separated the permissions

00:02:53,250 --> 00:02:58,110
that we're doing and are accepting state

00:02:55,530 --> 00:03:00,120
handling from the state machine this is

00:02:58,110 --> 00:03:01,680
being done so that the the state machine

00:03:00,120 --> 00:03:04,800
can be more generic and be can be used

00:03:01,680 --> 00:03:06,840
by other people that they want we've

00:03:04,800 --> 00:03:08,430
improved the compiler performance a

00:03:06,840 --> 00:03:11,580
little bit and there's some work to

00:03:08,430 --> 00:03:13,140
improve it more and we've been working

00:03:11,580 --> 00:03:16,380
on it but middle a little bit towards

00:03:13,140 --> 00:03:18,150
making it a generic library and we just

00:03:16,380 --> 00:03:21,360
very recently added out-of-band

00:03:18,150 --> 00:03:23,760
transitions and this is actually comes

00:03:21,360 --> 00:03:25,860
back to Eric's talk and this is you're

00:03:23,760 --> 00:03:30,060
going to be used to fix the issue we

00:03:25,860 --> 00:03:34,890
have right now with the EVM very

00:03:30,060 --> 00:03:37,709
matching we did some it cleanups in our

00:03:34,890 --> 00:03:42,360
next stuff we were hanging on to some

00:03:37,709 --> 00:03:44,370
code from 18 years ago that's not used

00:03:42,360 --> 00:03:46,440
anymore so some of that got deleted out

00:03:44,370 --> 00:03:49,350
we try really hard to maintain

00:03:46,440 --> 00:03:52,860
compatibility for a long time but that's

00:03:49,350 --> 00:03:54,870
just too old for us we've removed almost

00:03:52,860 --> 00:03:56,700
all the Perl I think the last bit is a

00:03:54,870 --> 00:04:00,120
there's a little Perl script in our

00:03:56,700 --> 00:04:03,709
regression testing so and we're also

00:04:00,120 --> 00:04:08,130
Python 3 everywhere if we have Python a

00:04:03,709 --> 00:04:10,260
notify got rewritten which is our user

00:04:08,130 --> 00:04:13,380
space if you want a desktop notification

00:04:10,260 --> 00:04:14,579
about app armor policy stuff there's

00:04:13,380 --> 00:04:16,979
been lots of cleanups and minor

00:04:14,579 --> 00:04:20,299
improvements Bucs bugs and bugs both

00:04:16,979 --> 00:04:20,299
creating and fixing

00:04:21,580 --> 00:04:29,180
so what are we working on that's gonna

00:04:23,960 --> 00:04:30,800
land soon unprivileged policy I was

00:04:29,180 --> 00:04:34,130
hoping we'd actually have this landed

00:04:30,800 --> 00:04:35,660
already but we don't we have the bits in

00:04:34,130 --> 00:04:39,020
place for this but there's a few things

00:04:35,660 --> 00:04:40,729
that are still needed it needs to be

00:04:39,020 --> 00:04:44,510
safe this is why the verifier is so

00:04:40,729 --> 00:04:46,669
important our state machine is more

00:04:44,510 --> 00:04:49,130
limited than BPF and it doesn't have the

00:04:46,669 --> 00:04:52,690
issues that BPF has but we still need to

00:04:49,130 --> 00:04:56,229
make sure that there can be nothing the

00:04:52,690 --> 00:04:59,870
unsafe policy can do to the kernel and

00:04:56,229 --> 00:05:02,180
user policy unsafe apology unprivileged

00:04:59,870 --> 00:05:05,180
policy it's composed with system policy

00:05:02,180 --> 00:05:06,470
it's not replacing it users will get up

00:05:05,180 --> 00:05:09,320
define their own profiles for their

00:05:06,470 --> 00:05:10,310
applications if they want and the system

00:05:09,320 --> 00:05:12,889
will still get to use it and

00:05:10,310 --> 00:05:17,030
applications this will actually pick up

00:05:12,889 --> 00:05:19,370
where tasks can instead of being a more

00:05:17,030 --> 00:05:22,060
global profile that can be applied over

00:05:19,370 --> 00:05:25,400
all kinds of things this is actually per

00:05:22,060 --> 00:05:31,970
task so once it sets it's more like a

00:05:25,400 --> 00:05:36,560
second filter in that sense notification

00:05:31,970 --> 00:05:39,940
interface this is largely to really

00:05:36,560 --> 00:05:39,940
clean up some of the problems we have

00:05:41,229 --> 00:05:46,400
really policy developments of real pain

00:05:43,789 --> 00:05:47,840
right now especially for the audit logs

00:05:46,400 --> 00:05:50,690
and stuff we need to get that out of

00:05:47,840 --> 00:05:53,840
there I'm not going to go into all that

00:05:50,690 --> 00:05:56,180
and unprivileged policy this goes back

00:05:53,840 --> 00:05:57,919
to the unprivileged policy we can't have

00:05:56,180 --> 00:05:59,599
unprivileged policy logging to the

00:05:57,919 --> 00:06:03,560
system audit logs that's just a

00:05:59,599 --> 00:06:06,050
violation it can leak information but it

00:06:03,560 --> 00:06:09,680
also can cause daus's and stuff easily

00:06:06,050 --> 00:06:11,930
then so we don't want that there has

00:06:09,680 --> 00:06:14,870
been a major refactor of a perm RFS that

00:06:11,930 --> 00:06:16,880
Mike's doing it's in the works to help

00:06:14,870 --> 00:06:20,479
improve it and make it better for

00:06:16,880 --> 00:06:22,779
containers we've got some audit

00:06:20,479 --> 00:06:26,080
improvements coming along

00:06:22,779 --> 00:06:27,879
the EVM based profile attachment without

00:06:26,080 --> 00:06:30,069
a band transition stuff but also there's

00:06:27,879 --> 00:06:31,659
a few other fixes around that and so

00:06:30,069 --> 00:06:34,539
hopefully that'll fix all of Eric's

00:06:31,659 --> 00:06:36,729
problems with that no new pair of

00:06:34,539 --> 00:06:38,289
improvements so Eric again mentioned

00:06:36,729 --> 00:06:41,289
problems around that where you have some

00:06:38,289 --> 00:06:43,569
fixes that should land for that soon sec

00:06:41,289 --> 00:06:50,169
mark is a little farther out but it's

00:06:43,569 --> 00:06:53,139
coming hopefully this year we got some

00:06:50,169 --> 00:06:56,740
workaround system D and early policy

00:06:53,139 --> 00:06:59,729
load improvements in being able to

00:06:56,740 --> 00:07:01,719
specify global policy blacklisting

00:06:59,729 --> 00:07:03,699
application whitelisting we can actually

00:07:01,719 --> 00:07:06,819
do that already but right now it's a

00:07:03,699 --> 00:07:08,229
real pain to set up and do and everybody

00:07:06,819 --> 00:07:10,120
asks about it and that's like well this

00:07:08,229 --> 00:07:12,610
is too hard to set up and it really is

00:07:10,120 --> 00:07:14,199
right now so we have some work in there

00:07:12,610 --> 00:07:18,749
in progress there to make that easier

00:07:14,199 --> 00:07:18,749

YouTube URL: https://www.youtube.com/watch?v=hiOeWWrUWRw


