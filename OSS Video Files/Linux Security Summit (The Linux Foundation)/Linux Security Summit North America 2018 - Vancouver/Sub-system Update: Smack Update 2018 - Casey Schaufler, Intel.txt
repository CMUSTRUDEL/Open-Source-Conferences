Title: Sub-system Update: Smack Update 2018 - Casey Schaufler, Intel
Publication date: 2018-08-31
Playlist: Linux Security Summit North America 2018 - Vancouver
Description: 
	Sub-system Update: Smack Update 2018 - Casey Schaufler, Intel

This talk will provide an update on the current state and activity in the Smack Linux Security Module.

About Casey Schaufler
Casey Schaufler worked on Unix kernels in the 1970s-90s. He has implemented access control lists, mandatory access control, extended filesystem attributes, X11 access controls, network protocols and more audit systems than is really healthy. His involvement in Linux began with the Linux Security Module work at the turn of the century, introducing the Smack LSM in 2007. Casey is reworking the LSM infrastructure to support multiple concurrent modules. He has spoken at Linux Conference Australia, OLS, LinuxCon, Linux Plumbers and many other venues.
Captions: 
	00:00:00,210 --> 00:00:03,360
so thank you very much I'm Casey

00:00:01,740 --> 00:00:04,770
shuffler I'm gonna be talking just a

00:00:03,360 --> 00:00:07,649
little bit of our smack update smack

00:00:04,770 --> 00:00:11,280
update isn't nearly so comprehensive as

00:00:07,649 --> 00:00:12,210
the SELinux update was going to be first

00:00:11,280 --> 00:00:14,280
thing i want to talk about is who's

00:00:12,210 --> 00:00:17,100
using smack it's usually the first

00:00:14,280 --> 00:00:21,199
question people ask is is anybody using

00:00:17,100 --> 00:00:23,369
it yeah it turns out that if you have a

00:00:21,199 --> 00:00:25,590
samsung TV from the past three years

00:00:23,369 --> 00:00:27,330
you've got smack

00:00:25,590 --> 00:00:29,310
they've also they're also sneaking into

00:00:27,330 --> 00:00:32,040
a whole lot of the other Tizen based

00:00:29,310 --> 00:00:34,770
devices so that's coming from Samsung

00:00:32,040 --> 00:00:36,600
also some other vendors automotive-grade

00:00:34,770 --> 00:00:42,120
Linux which is a Linux Foundation

00:00:36,600 --> 00:00:48,450
project to do software for automotive

00:00:42,120 --> 00:00:51,379
use is also using smack so if you have a

00:00:48,450 --> 00:00:55,250
new Toyota it's probably got smack in it

00:00:51,379 --> 00:00:57,719
the other thing that that we're finding

00:00:55,250 --> 00:01:00,090
there's a project called the Yocto

00:00:57,719 --> 00:01:02,460
project which is has been described as a

00:01:00,090 --> 00:01:05,460
Linux Oh Tron so if you don't want to

00:01:02,460 --> 00:01:07,740
use an existing distribution you can use

00:01:05,460 --> 00:01:11,280
Yocto project to define what you want

00:01:07,740 --> 00:01:13,890
having in a Linux system and create your

00:01:11,280 --> 00:01:16,520
own and it has actually a fairly

00:01:13,890 --> 00:01:19,049
extensive support force Mac as well so

00:01:16,520 --> 00:01:20,250
in addition to the Tizen and the

00:01:19,049 --> 00:01:22,170
automotive grade Linux we're seeing a

00:01:20,250 --> 00:01:23,880
bunch of onesies twosies kinds of things

00:01:22,170 --> 00:01:26,250
coming out where people are doing a

00:01:23,880 --> 00:01:30,659
board support project or they're doing a

00:01:26,250 --> 00:01:32,970
special-purpose thing and they like

00:01:30,659 --> 00:01:35,220
having smack because it's somewhat

00:01:32,970 --> 00:01:36,689
easier to work with from a policy

00:01:35,220 --> 00:01:40,500
standpoint to some of the other systems

00:01:36,689 --> 00:01:43,560
that are available so what's new in

00:01:40,500 --> 00:01:46,170
smack not a really a whole lot this year

00:01:43,560 --> 00:01:48,329
we got finally got support for overlay

00:01:46,170 --> 00:01:52,939
FS which turned out to be painfully

00:01:48,329 --> 00:01:56,399
trivial so that was kind of embarrassing

00:01:52,939 --> 00:01:59,280
the other one was it turned out we had

00:01:56,399 --> 00:02:01,619
never implemented a mechanism whereby a

00:01:59,280 --> 00:02:05,250
privileged process could change change

00:02:01,619 --> 00:02:07,290
information about keys so if you if it

00:02:05,250 --> 00:02:08,729
was your own key with your own at your

00:02:07,290 --> 00:02:10,170
own smack label you could change the key

00:02:08,729 --> 00:02:13,330
just fine but if he had privilege

00:02:10,170 --> 00:02:16,090
you couldn't so that

00:02:13,330 --> 00:02:17,410
a simple and a simple change to make so

00:02:16,090 --> 00:02:20,620
that now you have a little bit more

00:02:17,410 --> 00:02:22,290
control on your system over your your

00:02:20,620 --> 00:02:26,320
key set

00:02:22,290 --> 00:02:28,630
so what's fixed there have been about

00:02:26,320 --> 00:02:31,510
four or five places within within the

00:02:28,630 --> 00:02:34,170
code where people have using clever and

00:02:31,510 --> 00:02:36,670
modern tools discovered memory leaks

00:02:34,170 --> 00:02:38,140
generally they've been trivial in a

00:02:36,670 --> 00:02:40,240
couple of places they actually weren't

00:02:38,140 --> 00:02:42,700
memory leaks they were just system

00:02:40,240 --> 00:02:45,640
information that was being allocated for

00:02:42,700 --> 00:02:49,780
future use but there have been a couple

00:02:45,640 --> 00:02:50,830
of things that people have found one of

00:02:49,780 --> 00:02:53,140
the other things that's been really

00:02:50,830 --> 00:02:57,930
interesting is that we've been finding

00:02:53,140 --> 00:03:02,560
that in the early our seas occasionally

00:02:57,930 --> 00:03:07,420
well-intended changes breaks Mac without

00:03:02,560 --> 00:03:10,150
anybody detecting it and this got to be

00:03:07,420 --> 00:03:13,270
enough of a problem that we actually had

00:03:10,150 --> 00:03:14,650
to start doing every RC testing on a

00:03:13,270 --> 00:03:16,600
fairly regular basis now the good news

00:03:14,650 --> 00:03:19,390
there is that meant we actually had to

00:03:16,600 --> 00:03:21,510
finally write a test suite which which

00:03:19,390 --> 00:03:27,880
is going to be available real soon now

00:03:21,510 --> 00:03:30,730
internal corporate politics allowing but

00:03:27,880 --> 00:03:32,200
yeah we even had one from Alvaro her

00:03:30,730 --> 00:03:35,140
element out and made me a significant

00:03:32,200 --> 00:03:38,190
change excuse me but you know this

00:03:35,140 --> 00:03:41,830
doesn't work anymore it's like oh I

00:03:38,190 --> 00:03:43,780
didn't know that should work well al

00:03:41,830 --> 00:03:46,420
you're supposed to know everything well

00:03:43,780 --> 00:03:48,400
ok so yeah he actually convinced me to

00:03:46,420 --> 00:03:50,769
fix to make a change that fixed the

00:03:48,400 --> 00:03:53,019
problem but that kind of thing happens

00:03:50,769 --> 00:03:55,239
it's happening enough now again that

00:03:53,019 --> 00:03:58,350
we're actually being more proactive

00:03:55,239 --> 00:04:02,050
about checking those and detecting those

00:03:58,350 --> 00:04:04,870
we had some minor issues with ipv4 over

00:04:02,050 --> 00:04:09,070
ipv6 we got some patches for them from

00:04:04,870 --> 00:04:10,360
Samsung as well as UDP light and D CCP

00:04:09,070 --> 00:04:12,370
which I don't even know what it stands

00:04:10,360 --> 00:04:15,280
for but it's fixed to their satisfaction

00:04:12,370 --> 00:04:18,130
now so I'm happy it's nice to have other

00:04:15,280 --> 00:04:19,810
people who are actually active and know

00:04:18,130 --> 00:04:22,109
what they want who are willing to

00:04:19,810 --> 00:04:22,109
contribute

00:04:23,130 --> 00:04:28,380
so the real thing that I want to talk

00:04:24,840 --> 00:04:31,770
about is things we've got that we'd love

00:04:28,380 --> 00:04:33,510
to have people work on and the path I

00:04:31,770 --> 00:04:35,390
think that the project spec has to work

00:04:33,510 --> 00:04:37,740
on are going to be much more fun than

00:04:35,390 --> 00:04:39,150
the projects that some other systems

00:04:37,740 --> 00:04:44,220
have that they would like like you to

00:04:39,150 --> 00:04:46,590
work on so for example we don't have

00:04:44,220 --> 00:04:47,160
support for Calypso and I do spell it

00:04:46,590 --> 00:04:49,980
right this time

00:04:47,160 --> 00:04:51,720
oh yeah every other time I've put up a

00:04:49,980 --> 00:04:53,190
slide with Calypso I spelled it spelled

00:04:51,720 --> 00:04:55,080
it the way the word is spelled not the

00:04:53,190 --> 00:04:56,610
way the acronym is spelled and Paul has

00:04:55,080 --> 00:05:07,790
come and come and wailed on me because

00:04:56,610 --> 00:05:12,840
he's a networking guy well excuse me

00:05:07,790 --> 00:05:14,880
yeah okay fine he isn't it sold okay so

00:05:12,840 --> 00:05:18,930
we love the support for that should be a

00:05:14,880 --> 00:05:21,240
slam dunk we also have a lot of cases

00:05:18,930 --> 00:05:24,210
where the net label code is used in a

00:05:21,240 --> 00:05:27,000
way that's different from the way the

00:05:24,210 --> 00:05:35,250
net label code really is intended to be

00:05:27,000 --> 00:05:37,020
used that causes real issues not with

00:05:35,250 --> 00:05:38,730
the smack smack works just fine with it

00:05:37,020 --> 00:05:42,330
but if you try to run it in SELinux at

00:05:38,730 --> 00:05:45,150
the same time they seem to have a rather

00:05:42,330 --> 00:05:49,860
tough time coming to agreement on

00:05:45,150 --> 00:05:51,300
anything so we have a lot of cleanup it

00:05:49,860 --> 00:05:53,660
could could be done there and there if

00:05:51,300 --> 00:05:57,450
deafening in that code is horrendous and

00:05:53,660 --> 00:05:59,490
will make your eyes bleed so definitely

00:05:57,450 --> 00:06:02,970
do some cleanup there a couple other

00:05:59,490 --> 00:06:05,990
projects as well smack namespacing our

00:06:02,970 --> 00:06:08,430
friends at Samsung actually implemented

00:06:05,990 --> 00:06:11,400
namespacing four smacked a couple of

00:06:08,430 --> 00:06:13,740
years ago their particular use case went

00:06:11,400 --> 00:06:15,450
away and so they've dropped it but we

00:06:13,740 --> 00:06:16,890
could definitely pull that back up that

00:06:15,450 --> 00:06:19,410
would be a be a fun thing for some

00:06:16,890 --> 00:06:24,030
somebody to do InfiniBand support

00:06:19,410 --> 00:06:25,860
libvirt eb PF controls and the hooks are

00:06:24,030 --> 00:06:27,840
all there we have a worked example on

00:06:25,860 --> 00:06:30,180
how you how one might do it in another

00:06:27,840 --> 00:06:31,530
system so these should be really easy

00:06:30,180 --> 00:06:33,810
things for somebody who wanted to get

00:06:31,530 --> 00:06:36,680
get involved in security module

00:06:33,810 --> 00:06:36,680
development to pick up

00:06:37,560 --> 00:06:45,909
and here's the big one okay it's about

00:06:42,879 --> 00:06:47,919
time somebody fixed fedora so you could

00:06:45,909 --> 00:06:52,300
use smack properly and what we really

00:06:47,919 --> 00:06:54,120
need there is a rule set definition we

00:06:52,300 --> 00:06:57,550
have rule set definitions get from Tyson

00:06:54,120 --> 00:07:00,189
from automative growth limit grade Linux

00:06:57,550 --> 00:07:03,370
you can use as templates as a way to get

00:07:00,189 --> 00:07:05,319
started but we really nice really handy

00:07:03,370 --> 00:07:07,629
if we had that for fedora we had that

00:07:05,319 --> 00:07:10,599
for a bun too we had that for Debian we

00:07:07,629 --> 00:07:12,699
had that for Suzy we had that for any of

00:07:10,599 --> 00:07:16,330
the other what we what you might call

00:07:12,699 --> 00:07:18,430
mainstream distributions those would be

00:07:16,330 --> 00:07:21,099
it'd be just great to have those because

00:07:18,430 --> 00:07:22,930
we don't yet and think that would really

00:07:21,099 --> 00:07:26,409
really be a helpful thing for the

00:07:22,930 --> 00:07:28,300
community to have see what else I have

00:07:26,409 --> 00:07:29,289
to say I think that's about it because

00:07:28,300 --> 00:07:32,340
I'm gonna let you guys off the hook

00:07:29,289 --> 00:07:32,340
early unless there are questions

00:07:34,139 --> 00:07:37,500

YouTube URL: https://www.youtube.com/watch?v=LzftmzIA0yw


