Title: Birmingham on Rails 2020 -  The Story of Rails! by Ratnadeep Deshmane
Publication date: 2020-02-19
Playlist: Birmingham on Rails 2020
Description: 
	Birmingham on Rails 2020 -  The Story of Rails! by Ratnadeep Deshmane
Captions: 
	00:00:03,310 --> 00:00:06,460
[Music]

00:00:10,550 --> 00:00:15,210
[Music]

00:00:12,070 --> 00:00:15,210
[Applause]

00:00:16,400 --> 00:00:23,580
so this is the topic that I'm going to

00:00:19,350 --> 00:00:27,260
talk about the story of race

00:00:23,580 --> 00:00:29,849
I'm rattler deep on Twitter I'm multiple

00:00:27,260 --> 00:00:33,540
maybe that's what will be easy to

00:00:29,849 --> 00:00:36,920
pronounce as well so I come from in here

00:00:33,540 --> 00:00:43,290
so I'm the second from the four out of

00:00:36,920 --> 00:00:45,960
country speakers so so I love traveling

00:00:43,290 --> 00:00:51,360
I work remotely for a couple of clients

00:00:45,960 --> 00:00:54,420
as a consultant and apart from that I

00:00:51,360 --> 00:00:57,379
also love mechanical keyboards so if

00:00:54,420 --> 00:00:59,910
that's one of your things remote travel

00:00:57,379 --> 00:01:02,640
mechanical keyboards then please find me

00:00:59,910 --> 00:01:06,750
and we can have a long discussion so

00:01:02,640 --> 00:01:10,350
yeah so this is the place that I come

00:01:06,750 --> 00:01:12,810
from Pune India pretty close to Mumbai

00:01:10,350 --> 00:01:15,630
on that note the CFP for rubyconf india

00:01:12,810 --> 00:01:19,740
is open so maybe please come

00:01:15,630 --> 00:01:22,259
yeah so before I start with the studio

00:01:19,740 --> 00:01:25,729
phrase I wanted to have or share a story

00:01:22,259 --> 00:01:29,490
of me in the when I was here first time

00:01:25,729 --> 00:01:32,250
so I was here in 2015 and that was for

00:01:29,490 --> 00:01:34,259
the Madison Wisconsin Ruby conference

00:01:32,250 --> 00:01:36,930
which is the place that I have shown on

00:01:34,259 --> 00:01:37,829
the map and when I was traveling for

00:01:36,930 --> 00:01:41,100
this conference

00:01:37,829 --> 00:01:44,670
what happened was my flight was from

00:01:41,100 --> 00:01:47,880
like embattled New York and then from

00:01:44,670 --> 00:01:49,979
New York to Madison Wisconsin so I had

00:01:47,880 --> 00:01:52,409
to clear the customs and everything at

00:01:49,979 --> 00:01:55,020
the work itself and then do a custom

00:01:52,409 --> 00:01:58,770
like domestic flight to the Madison

00:01:55,020 --> 00:02:00,299
Wisconsin so I thought you know if I'm

00:01:58,770 --> 00:02:02,280
cleaning immigration and entering the

00:02:00,299 --> 00:02:04,140
country in the end on itself you know

00:02:02,280 --> 00:02:06,420
why not to spend some time there right

00:02:04,140 --> 00:02:09,950
so I called a friend I had a place to

00:02:06,420 --> 00:02:12,750
crash so I decided let's do that so

00:02:09,950 --> 00:02:14,400
spent a week stayed in the new

00:02:12,750 --> 00:02:17,400
work remotely and then I went to the

00:02:14,400 --> 00:02:19,650
Madison Wisconsin so spending two weeks

00:02:17,400 --> 00:02:22,260
in u.s. I was pretty impressed with a

00:02:19,650 --> 00:02:24,480
couple of things and obviously cars and

00:02:22,260 --> 00:02:26,220
automobiles was one of them apart from

00:02:24,480 --> 00:02:27,990
obviously the museum's and how they

00:02:26,220 --> 00:02:31,500
represent the science in a very good

00:02:27,990 --> 00:02:33,180
place and that's why I thought maybe

00:02:31,500 --> 00:02:36,330
someday I Detroit could be an

00:02:33,180 --> 00:02:39,920
interesting place to visit you know so I

00:02:36,330 --> 00:02:42,959
found a friend or as well and there was

00:02:39,920 --> 00:02:46,070
some time between he could be present in

00:02:42,959 --> 00:02:49,620
Detroit and I can go to his place so I

00:02:46,070 --> 00:02:52,260
decided to utilize that we can I dropped

00:02:49,620 --> 00:02:55,080
by to the Chicago so I stood in the

00:02:52,260 --> 00:02:56,700
Chicago follow me the Museum of

00:02:55,080 --> 00:02:59,520
industrial sciences was pretty awesome

00:02:56,700 --> 00:03:01,440
there and from there I went to the

00:02:59,520 --> 00:03:05,340
Detroit where I again stayed for a week

00:03:01,440 --> 00:03:07,770
and in Detroit the Ford Museum was

00:03:05,340 --> 00:03:09,750
pretty awesome right while I was there I

00:03:07,770 --> 00:03:13,890
remember a couple of textbooks that I

00:03:09,750 --> 00:03:16,140
have finished in my school is and it has

00:03:13,890 --> 00:03:17,760
some history related to the Boston as

00:03:16,140 --> 00:03:19,980
well like how the Boston Tea Party

00:03:17,760 --> 00:03:22,530
happened and whatnot you know all the

00:03:19,980 --> 00:03:25,709
historic places and I was pretty close

00:03:22,530 --> 00:03:29,790
to Boston so there I go I did a week I

00:03:25,709 --> 00:03:32,100
stayed for a weekend of postin and when

00:03:29,790 --> 00:03:34,440
I was in Boston I I realized that when I

00:03:32,100 --> 00:03:38,400
was in New York and I had went for a D

00:03:34,440 --> 00:03:41,540
to the Washington DC so the Washington

00:03:38,400 --> 00:03:44,430
DC the National Capital Area has like

00:03:41,540 --> 00:03:46,560
multiple museums right and I was there

00:03:44,430 --> 00:03:49,350
for just today so I couldn't complete

00:03:46,560 --> 00:03:51,690
all of those so again a week in

00:03:49,350 --> 00:03:56,340
Washington DC and I completed all the

00:03:51,690 --> 00:03:57,840
museum's next I had the liquor I went to

00:03:56,340 --> 00:03:59,910
the Miami because one of my colleague

00:03:57,840 --> 00:04:03,900
was there and I had to meet so about two

00:03:59,910 --> 00:04:05,880
week in a Miami and then while I was in

00:04:03,900 --> 00:04:09,150
the u.s. I got to know about this

00:04:05,880 --> 00:04:11,910
conference in Austin that was keep Ruby

00:04:09,150 --> 00:04:15,030
beer so there was a conference happen

00:04:11,910 --> 00:04:17,459
with a monkey Prabhu here and how can I

00:04:15,030 --> 00:04:21,060
not attend that so there was a week in

00:04:17,459 --> 00:04:24,450
Austin and next was a San Francisco and

00:04:21,060 --> 00:04:25,580
then a week in San Antonio because the

00:04:24,450 --> 00:04:28,220
Rubicon

00:04:25,580 --> 00:04:30,710
it can happen in San Antonio so yeah in

00:04:28,220 --> 00:04:31,220
short for the six months that I spend in

00:04:30,710 --> 00:04:33,680
u.s.

00:04:31,220 --> 00:04:35,569
I stayed in about ten different cities

00:04:33,680 --> 00:04:39,800
and work tributed so it was pretty

00:04:35,569 --> 00:04:43,819
interesting so the story of rails and

00:04:39,800 --> 00:04:45,830
why the reason the story of rails should

00:04:43,819 --> 00:04:48,169
be known to some of the people who are

00:04:45,830 --> 00:04:50,780
starting or beginning is that it it

00:04:48,169 --> 00:04:52,550
makes easy if you know some of the whys

00:04:50,780 --> 00:04:56,689
behind couple of features that are there

00:04:52,550 --> 00:04:57,319
right and now it's been about more than

00:04:56,689 --> 00:05:01,310
ten years

00:04:57,319 --> 00:05:03,229
in Indian trails has become so big that

00:05:01,310 --> 00:05:05,150
some for some of the people who are just

00:05:03,229 --> 00:05:06,979
beginning to learn Ruby on Rails it

00:05:05,150 --> 00:05:09,080
becomes pretty overwhelming with all

00:05:06,979 --> 00:05:11,330
those features and stuff so here just

00:05:09,080 --> 00:05:12,710
I'm trying to come off with the couple

00:05:11,330 --> 00:05:15,620
of stories that are there inside the

00:05:12,710 --> 00:05:18,650
rails and hoping that this could help

00:05:15,620 --> 00:05:22,940
you understand the rails better so let's

00:05:18,650 --> 00:05:25,460
start so I have created couple of

00:05:22,940 --> 00:05:28,090
sections into the story that's there and

00:05:25,460 --> 00:05:36,169
one of the first thing is the culture

00:05:28,090 --> 00:05:37,729
right so yeah so while creating this

00:05:36,169 --> 00:05:39,949
talk I went to the rails drop tine

00:05:37,729 --> 00:05:44,750
that's written by the DHH and it's also

00:05:39,949 --> 00:05:47,690
available on the plains website and it's

00:05:44,750 --> 00:05:50,300
a big article but the gist of that is

00:05:47,690 --> 00:05:54,740
the Ruby is for the developer happiness

00:05:50,300 --> 00:05:57,050
and rails is to make them smile and many

00:05:54,740 --> 00:05:58,789
of the features and many of the coding

00:05:57,050 --> 00:06:01,159
practices that you will see throughout

00:05:58,789 --> 00:06:05,060
the rails are in line with this

00:06:01,159 --> 00:06:07,190
philosophy here is an example so this is

00:06:05,060 --> 00:06:09,139
an example of how you create from the

00:06:07,190 --> 00:06:11,509
interactive terminal that is provided to

00:06:09,139 --> 00:06:13,370
you by these two different languages one

00:06:11,509 --> 00:06:16,310
is a Python second is a ruby

00:06:13,370 --> 00:06:19,009
so if you start Ruby and you want to

00:06:16,310 --> 00:06:20,419
like interactive console IRB you started

00:06:19,009 --> 00:06:23,060
and you want to quit funda you can type

00:06:20,419 --> 00:06:25,580
crate and it's exited or you can type

00:06:23,060 --> 00:06:28,039
exit and you are out of that right no

00:06:25,580 --> 00:06:31,909
big deal but if you are running out of

00:06:28,039 --> 00:06:35,029
Python and if you tried exit it will say

00:06:31,909 --> 00:06:36,830
no you have to type exit and the

00:06:35,029 --> 00:06:38,779
brackets and if you see the error

00:06:36,830 --> 00:06:39,230
message it obviously knows that what you

00:06:38,779 --> 00:06:41,270
want to do

00:06:39,230 --> 00:06:42,860
is to exit out of it but still it will

00:06:41,270 --> 00:06:44,690
say no no this is not the way you have

00:06:42,860 --> 00:06:46,430
to do it this way only and then only I

00:06:44,690 --> 00:06:50,630
will understand so that's the difference

00:06:46,430 --> 00:06:55,760
right next is so this is one of the

00:06:50,630 --> 00:07:00,200
method that is from Ruby rails 2.3 it

00:06:55,760 --> 00:07:04,760
was it was it used to put people on very

00:07:00,200 --> 00:07:06,680
- brackets of opiate segments so what

00:07:04,760 --> 00:07:09,080
you could do with this is fine by first

00:07:06,680 --> 00:07:11,120
name last name and email so you have a

00:07:09,080 --> 00:07:13,400
user model and then you can call a

00:07:11,120 --> 00:07:15,170
method like this fine by and then append

00:07:13,400 --> 00:07:17,840
all the models that you haven't provided

00:07:15,170 --> 00:07:20,030
the parameters and then rails will do

00:07:17,840 --> 00:07:22,160
the search for you it will build the SQL

00:07:20,030 --> 00:07:23,540
query out of that and do the search so

00:07:22,160 --> 00:07:26,270
what's happening here it's all meta

00:07:23,540 --> 00:07:31,820
programming so this is one of the very

00:07:26,270 --> 00:07:33,560
interesting and what I would say a good

00:07:31,820 --> 00:07:35,540
thing to pitch about the rails so if you

00:07:33,560 --> 00:07:37,910
want to impress someone you show them

00:07:35,540 --> 00:07:40,310
this query right there is no method

00:07:37,910 --> 00:07:41,690
return but you know the rails is written

00:07:40,310 --> 00:07:44,000
in such a way that it can write its own

00:07:41,690 --> 00:07:45,650
methods so very good obviously it has

00:07:44,000 --> 00:07:50,180
its performance flaws and later on you

00:07:45,650 --> 00:07:53,410
can't replicate it but that's the it's

00:07:50,180 --> 00:07:56,750
one of the examples which represents the

00:07:53,410 --> 00:07:58,370
ideas and the motives and philosophies

00:07:56,750 --> 00:08:01,910
of the people who who are building this

00:07:58,370 --> 00:08:06,140
language third example is this at about

00:08:01,910 --> 00:08:08,120
42 so you know in Braille so you have

00:08:06,140 --> 00:08:10,310
these convenient methods to access the

00:08:08,120 --> 00:08:11,810
elements from the array so you have an

00:08:10,310 --> 00:08:16,280
array and you can do error dot first

00:08:11,810 --> 00:08:18,230
error or second or third right so some

00:08:16,280 --> 00:08:21,290
other time I was trying to get added or

00:08:18,230 --> 00:08:23,120
it obviously that didn't work so I went

00:08:21,290 --> 00:08:25,610
into the rails depository and was trying

00:08:23,120 --> 00:08:28,310
to see what all methods are available

00:08:25,610 --> 00:08:29,750
just a convenient method side so those

00:08:28,310 --> 00:08:32,780
are defined from the first to fifth

00:08:29,750 --> 00:08:35,120
element and in one of the documentation

00:08:32,780 --> 00:08:37,250
Sai saw that DHS also uses these methods

00:08:35,120 --> 00:08:39,650
when he trying to do quick debugging on

00:08:37,250 --> 00:08:42,460
the rails console so and that's the

00:08:39,650 --> 00:08:47,530
purpose that they are present in the

00:08:42,460 --> 00:08:51,950
rails api's so when this first time

00:08:47,530 --> 00:08:52,550
these first two fifth methods were put

00:08:51,950 --> 00:08:54,710
and

00:08:52,550 --> 00:08:56,780
poor request was there that poor request

00:08:54,710 --> 00:08:59,090
was shared on a hacker news as well as

00:08:56,780 --> 00:09:01,010
on reddit and on the reddit people were

00:08:59,090 --> 00:09:03,230
ridiculing this idea of having these

00:09:01,010 --> 00:09:05,330
convenient methods even if you have a

00:09:03,230 --> 00:09:07,610
typical way of accessing the elements of

00:09:05,330 --> 00:09:09,800
array which is by having an index right

00:09:07,610 --> 00:09:12,200
so you have an array you can always say

00:09:09,800 --> 00:09:13,400
provide one two three in front of with

00:09:12,200 --> 00:09:14,960
the brackets and then you can get all

00:09:13,400 --> 00:09:20,530
the elements but still you have these

00:09:14,960 --> 00:09:20,530
right so to answer all the scrolls and

00:09:21,430 --> 00:09:27,170
go with all the philosophy that the

00:09:24,590 --> 00:09:28,970
Wheels has DHS also added one more pull

00:09:27,170 --> 00:09:31,940
request after that which is added about

00:09:28,970 --> 00:09:35,900
42 so this one returns the element with

00:09:31,940 --> 00:09:37,490
the index of 42 and you will know the

00:09:35,900 --> 00:09:41,480
significance of the number 42 if you

00:09:37,490 --> 00:09:44,180
have read the Hitchhiker's Guide to the

00:09:41,480 --> 00:09:47,570
galaxy right so yeah so this is an

00:09:44,180 --> 00:09:51,170
example that that defines what the

00:09:47,570 --> 00:09:53,210
culture is in the rails so this is also

00:09:51,170 --> 00:09:56,210
a couple of lines taken from that means

00:09:53,210 --> 00:09:58,040
drop trying and they say that rupee has

00:09:56,210 --> 00:10:02,090
been designed with the principle of

00:09:58,040 --> 00:10:03,740
least surprise to match and Rails has

00:10:02,090 --> 00:10:12,890
been designed with the principle of the

00:10:03,740 --> 00:10:16,670
biggest smile of DHH and on that you can

00:10:12,890 --> 00:10:18,560
also say this is the truth that if the

00:10:16,670 --> 00:10:20,120
rupee is the language then Greece is a

00:10:18,560 --> 00:10:24,920
kind of a joke that is being told in

00:10:20,120 --> 00:10:25,910
that language to make you laugh yep next

00:10:24,920 --> 00:10:28,460
is a community

00:10:25,910 --> 00:10:29,780
so apart from culture this is the second

00:10:28,460 --> 00:10:31,670
biggest thing that is that

00:10:29,780 --> 00:10:33,620
differentiates Ruby and rails and this

00:10:31,670 --> 00:10:36,380
word from the other places is the

00:10:33,620 --> 00:10:39,590
community right so back in 2011 and 12 I

00:10:36,380 --> 00:10:41,960
was just had begun learning the rails

00:10:39,590 --> 00:10:45,320
and Ruby and I had made a website called

00:10:41,960 --> 00:10:47,480
as violet Ruby dot-com the website is

00:10:45,320 --> 00:10:49,190
still up you can go and see all the

00:10:47,480 --> 00:10:51,650
interesting reasons that people have

00:10:49,190 --> 00:10:53,750
posted there so the website was an

00:10:51,650 --> 00:10:57,800
attempt to collect the reasons from all

00:10:53,750 --> 00:11:00,140
the people about why they love Ruby and

00:10:57,800 --> 00:11:03,860
other people can come in login and they

00:11:00,140 --> 00:11:06,850
can vote to the various answers that are

00:11:03,860 --> 00:11:11,170
added by the previous people right and

00:11:06,850 --> 00:11:13,970
the most a product answer on that

00:11:11,170 --> 00:11:16,519
website is this it was added by the

00:11:13,970 --> 00:11:18,680
Konstantin Hesse and it says ruby is one

00:11:16,519 --> 00:11:22,430
of the best Oasis communities ever so

00:11:18,680 --> 00:11:24,740
all the sun tax and all the easiness or

00:11:22,430 --> 00:11:27,050
the meta programming or the features of

00:11:24,740 --> 00:11:29,779
Ruby everything was there all those kind

00:11:27,050 --> 00:11:32,540
of reasons were added into the website

00:11:29,779 --> 00:11:35,570
but the most of words went to the one

00:11:32,540 --> 00:11:39,500
that has that was about the community so

00:11:35,570 --> 00:11:41,360
yeah next is about the feature so I just

00:11:39,500 --> 00:11:42,980
have stories for couple of features that

00:11:41,360 --> 00:11:46,040
I want to go with so first is the

00:11:42,980 --> 00:11:47,959
bundler that I will be speaking about so

00:11:46,040 --> 00:11:52,070
in the very first version of the rails

00:11:47,959 --> 00:11:53,570
the rails one it was all the plugins no

00:11:52,070 --> 00:11:56,570
Virginia or the dependencies were

00:11:53,570 --> 00:11:58,250
present for those plugins I started work

00:11:56,570 --> 00:12:01,670
with the rails to my first application

00:11:58,250 --> 00:12:04,730
was 2.3 it had first-class support for

00:12:01,670 --> 00:12:08,450
the plugins as gems and it added also

00:12:04,730 --> 00:12:10,370
the dependencies so many a time what

00:12:08,450 --> 00:12:12,829
used to happen you remember this was the

00:12:10,370 --> 00:12:16,640
days where bundler didn't exist right

00:12:12,829 --> 00:12:19,940
and whenever you have dependencies on

00:12:16,640 --> 00:12:23,390
any of the gems you manually edit them

00:12:19,940 --> 00:12:25,490
in your environment file so here is an

00:12:23,390 --> 00:12:27,410
example so gem cutter was a tool that

00:12:25,490 --> 00:12:29,810
was used back then for creating these

00:12:27,410 --> 00:12:33,920
gems so this is the example environment

00:12:29,810 --> 00:12:37,070
or typify and as you can see there the

00:12:33,920 --> 00:12:39,950
config dot gem is the line from where

00:12:37,070 --> 00:12:41,839
the gems are specified so there are a

00:12:39,950 --> 00:12:43,820
couple of places where the version is

00:12:41,839 --> 00:12:45,610
also included in the gem and some places

00:12:43,820 --> 00:12:49,339
where the version is not included and

00:12:45,610 --> 00:12:51,529
what used to happen is when you're doing

00:12:49,339 --> 00:12:54,519
the installation which is generally the

00:12:51,529 --> 00:12:57,079
rake gems install it used to file with

00:12:54,519 --> 00:12:59,500
gems not being compatible with each

00:12:57,079 --> 00:13:01,610
other or their dependence is not being

00:12:59,500 --> 00:13:03,860
compatible with each other each other

00:13:01,610 --> 00:13:05,240
and in that case is what you have to do

00:13:03,860 --> 00:13:09,529
is to find

00:13:05,240 --> 00:13:11,630
a write dependency between the those two

00:13:09,529 --> 00:13:13,399
and add that as a dependency of your

00:13:11,630 --> 00:13:18,250
application itself so that you can lock

00:13:13,399 --> 00:13:22,480
that gem solution here is an example so

00:13:18,250 --> 00:13:25,730
there are two gems in an action pack and

00:13:22,480 --> 00:13:28,070
what's happening is first the time is

00:13:25,730 --> 00:13:30,230
required it's loaded properly and then

00:13:28,070 --> 00:13:33,440
the action pack is required but it

00:13:30,230 --> 00:13:37,750
couldn't be activated because the action

00:13:33,440 --> 00:13:40,370
pack depends on the RAC 1.0.0 but RAC

00:13:37,750 --> 00:13:43,130
1.1.1 was already activated by the thin

00:13:40,370 --> 00:13:46,279
so even though the action pack and thing

00:13:43,130 --> 00:13:48,680
don't like the application is specifying

00:13:46,279 --> 00:13:50,930
the virgin's for the thin and the action

00:13:48,680 --> 00:13:53,390
pack their dependencies are different

00:13:50,930 --> 00:13:56,450
and because of that whenever you as you

00:13:53,390 --> 00:13:57,649
have to update the application or get a

00:13:56,450 --> 00:13:59,690
setup on someone else

00:13:57,649 --> 00:14:01,399
it used to a lot of problem now combine

00:13:59,690 --> 00:14:04,640
these issues with the fact that you do

00:14:01,399 --> 00:14:06,380
not have our VM or RB environment as

00:14:04,640 --> 00:14:10,160
well so that even you are to be virgins

00:14:06,380 --> 00:14:11,630
are if you have a set to different

00:14:10,160 --> 00:14:13,520
applications running on the same machine

00:14:11,630 --> 00:14:15,079
with the different Ruby versions then

00:14:13,520 --> 00:14:18,560
that is also an issue combine that with

00:14:15,079 --> 00:14:22,420
the gems that have a different visual so

00:14:18,560 --> 00:14:25,100
that's when the bundle entered basically

00:14:22,420 --> 00:14:27,320
most important part that it did was

00:14:25,100 --> 00:14:29,089
provide the per application dependency

00:14:27,320 --> 00:14:32,540
resolution meaning that every

00:14:29,089 --> 00:14:35,870
application so at the very core there

00:14:32,540 --> 00:14:37,640
are different Ruby versions and you can

00:14:35,870 --> 00:14:40,100
have different to be versions with our B

00:14:37,640 --> 00:14:42,170
environment or our BM apart from that

00:14:40,100 --> 00:14:43,550
once you have selected through B version

00:14:42,170 --> 00:14:46,459
and you have a different applications

00:14:43,550 --> 00:14:48,680
running under that same roba version

00:14:46,459 --> 00:14:49,760
then the bundler comes in so that it can

00:14:48,680 --> 00:14:52,190
handle the dependency resolution

00:14:49,760 --> 00:14:56,750
separately for these different

00:14:52,190 --> 00:15:00,380
application so not just the applications

00:14:56,750 --> 00:15:01,760
that are specified in your gem file what

00:15:00,380 --> 00:15:04,490
it does is it also lists the

00:15:01,760 --> 00:15:06,020
dependencies of dependencies so by

00:15:04,490 --> 00:15:09,680
having that gem file and zone for a lock

00:15:06,020 --> 00:15:11,300
you have all of them listed and one

00:15:09,680 --> 00:15:14,150
other thing that was fixed with that is

00:15:11,300 --> 00:15:17,000
the group of dependencies so

00:15:14,150 --> 00:15:18,470
if you are trying to develop with the CQ

00:15:17,000 --> 00:15:20,150
light on your development machine and

00:15:18,470 --> 00:15:23,330
you have a different database on the

00:15:20,150 --> 00:15:25,520
production for Silla for post grades or

00:15:23,330 --> 00:15:27,620
my sequel then you can have a different

00:15:25,520 --> 00:15:31,220
groups created for these different types

00:15:27,620 --> 00:15:32,930
of gems and then decide which machine to

00:15:31,220 --> 00:15:35,480
install which and then have all those

00:15:32,930 --> 00:15:37,040
things this is not most recommended way

00:15:35,480 --> 00:15:38,300
of doing it having two different

00:15:37,040 --> 00:15:41,180
databases on the development and

00:15:38,300 --> 00:15:43,010
production but then this same grouping

00:15:41,180 --> 00:15:45,860
of the gems can be used for the test

00:15:43,010 --> 00:15:47,720
cases and to separate out similar kind

00:15:45,860 --> 00:15:52,940
of business requirements that are there

00:15:47,720 --> 00:15:54,410
so on that note I remember one of the

00:15:52,940 --> 00:15:58,490
problem that I personally used to fail

00:15:54,410 --> 00:16:01,790
in those days which was whenever you

00:15:58,490 --> 00:16:03,620
update a gem for a minor version it's

00:16:01,790 --> 00:16:05,420
not an issue but when you update a gem

00:16:03,620 --> 00:16:08,750
for a major issue then it used to a

00:16:05,420 --> 00:16:11,420
problem so I remember suggesting a

00:16:08,750 --> 00:16:13,580
feature where in rather than just

00:16:11,420 --> 00:16:16,460
showing what was updated by a bundler

00:16:13,580 --> 00:16:19,460
you also show what previous version it

00:16:16,460 --> 00:16:23,360
had so here is an example where in SSS 7

00:16:19,460 --> 00:16:26,600
3 7 where the gem was updated to the

00:16:23,360 --> 00:16:29,750
version 7 37 but deviously it was 3 5 7

00:16:26,600 --> 00:16:33,830
and the reason for having the was in the

00:16:29,750 --> 00:16:36,710
brackets was behind the idea that you

00:16:33,830 --> 00:16:38,900
get the idea whether it's being updated

00:16:36,710 --> 00:16:41,030
for a major version or a minor version

00:16:38,900 --> 00:16:43,760
just to give an example suppose you are

00:16:41,030 --> 00:16:46,280
depending on a bootstrap gem and you are

00:16:43,760 --> 00:16:48,950
depending on say 2.0 which also depends

00:16:46,280 --> 00:16:51,110
on a bootstrap 2 or Twitter style sheets

00:16:48,950 --> 00:16:52,760
and all and suddenly one day when you

00:16:51,110 --> 00:16:54,830
are running the bundle update on the

00:16:52,760 --> 00:16:57,590
bootstrap if it gets updated to the Ruby

00:16:54,830 --> 00:17:00,440
3.0 all your front-end will behave

00:16:57,590 --> 00:17:02,720
because the CSS are completely different

00:17:00,440 --> 00:17:04,430
in bootstrap 2 and 3 right so the

00:17:02,720 --> 00:17:08,050
similar thing could be avoided by having

00:17:04,430 --> 00:17:08,050
these nodes

00:17:12,690 --> 00:17:17,740
so in the features

00:17:14,700 --> 00:17:20,440
apart from bundler the next one is the

00:17:17,740 --> 00:17:24,910
modularity and this started with the

00:17:20,440 --> 00:17:26,380
rails and more so now it's not anywhere

00:17:24,910 --> 00:17:29,710
that you get to see or mange

00:17:26,380 --> 00:17:31,690
mention of mod framework but back in

00:17:29,710 --> 00:17:33,130
2008 there were two frameworks when was

00:17:31,690 --> 00:17:35,490
the rails and the other was the mob and

00:17:33,130 --> 00:17:38,620
both of them were being developed at a

00:17:35,490 --> 00:17:40,780
width up with the very good teams and a

00:17:38,620 --> 00:17:43,660
little bit different philosophies but

00:17:40,780 --> 00:17:45,250
then finally around 2008 they both both

00:17:43,660 --> 00:17:47,350
our teams decided that it's so good that

00:17:45,250 --> 00:17:49,360
they combine the forces rather than

00:17:47,350 --> 00:17:52,240
competing with each other and that's

00:17:49,360 --> 00:17:55,330
when the rails and mob got merged so

00:17:52,240 --> 00:17:57,280
what mob was like how work was different

00:17:55,330 --> 00:18:00,040
from the rails back then was it was just

00:17:57,280 --> 00:18:01,930
the controller stack nothing else it

00:18:00,040 --> 00:18:04,060
used to have a rack and MoMA grill for

00:18:01,930 --> 00:18:06,310
the web server interface ERP obviously

00:18:04,060 --> 00:18:08,350
for the views and the data model for the

00:18:06,310 --> 00:18:11,380
data mapper for the models instead of

00:18:08,350 --> 00:18:13,180
activerecord and when the merger

00:18:11,380 --> 00:18:15,160
happened so these are some of the things

00:18:13,180 --> 00:18:16,750
so conversion happened and the rails 3

00:18:15,160 --> 00:18:18,820
was the first version that came up with

00:18:16,750 --> 00:18:20,860
more be included into the rails and

00:18:18,820 --> 00:18:23,460
these are the things that that were

00:18:20,860 --> 00:18:26,050
different so first was the modularity

00:18:23,460 --> 00:18:28,450
because of the work we have this

00:18:26,050 --> 00:18:30,400
modularity wherein we can decide which

00:18:28,450 --> 00:18:32,920
components of rails to use and which

00:18:30,400 --> 00:18:35,110
ones to not whenever you are creating

00:18:32,920 --> 00:18:38,050
that rails application which is just for

00:18:35,110 --> 00:18:39,730
the EPS and not for the views many of

00:18:38,050 --> 00:18:41,530
the parts of the rails application are

00:18:39,730 --> 00:18:43,500
taken out from that so that kind of a

00:18:41,530 --> 00:18:45,970
modularity it came with the mob

00:18:43,500 --> 00:18:48,580
well-defined APs and the tests were

00:18:45,970 --> 00:18:50,710
written for the all of that he pays and

00:18:48,580 --> 00:18:53,410
the benefit of that is now that the

00:18:50,710 --> 00:18:57,130
framework has the apos frozen and all of

00:18:53,410 --> 00:18:59,230
it is being tested as well the gem

00:18:57,130 --> 00:19:01,780
developers and the plugin developers can

00:18:59,230 --> 00:19:05,170
use and rely on that EPS like I remember

00:19:01,780 --> 00:19:09,340
there were times when the Ruby rails 2.3

00:19:05,170 --> 00:19:11,920
and other applications were updated to

00:19:09,340 --> 00:19:13,660
the rail see many of the applications we

00:19:11,920 --> 00:19:16,120
are not even updated because it was such

00:19:13,660 --> 00:19:19,150
a big thing to jump from that many of

00:19:16,120 --> 00:19:20,380
the gems that were there in the rails 2

00:19:19,150 --> 00:19:22,360
world

00:19:20,380 --> 00:19:24,220
didn't have even chance to upgrade to

00:19:22,360 --> 00:19:27,130
the rails three because maybe like

00:19:24,220 --> 00:19:29,620
maintenance and the support for the

00:19:27,130 --> 00:19:31,480
boost James wasn't great but if you see

00:19:29,620 --> 00:19:36,130
rails three onwards there isn't anything

00:19:31,480 --> 00:19:38,919
in range version has come up and that

00:19:36,130 --> 00:19:43,149
it's a it's generally isn't a big chore

00:19:38,919 --> 00:19:45,159
to update the gems and the dependencies

00:19:43,149 --> 00:19:47,019
and all that comes from the great

00:19:45,159 --> 00:19:49,419
lessons that was that were learned into

00:19:47,019 --> 00:19:51,039
the rails three so performance and

00:19:49,419 --> 00:19:55,269
scalability that is also something that

00:19:51,039 --> 00:19:57,909
mobile was Prior eating prioritizing

00:19:55,269 --> 00:20:00,460
very hugely as in one of the motors that

00:19:57,909 --> 00:20:02,830
they had in the mode world was no

00:20:00,460 --> 00:20:07,509
quality's faster than no code you will

00:20:02,830 --> 00:20:09,759
see ya next is in the feature is the

00:20:07,509 --> 00:20:12,970
asset management stories like back in

00:20:09,759 --> 00:20:15,399
the day when the Ruby was race was on

00:20:12,970 --> 00:20:17,700
the two point three prototype was the

00:20:15,399 --> 00:20:22,360
JavaScript library that was primarily

00:20:17,700 --> 00:20:24,789
into it and it was made in such a way so

00:20:22,360 --> 00:20:28,240
that with the scaffolds as well you can

00:20:24,789 --> 00:20:30,399
use the Ajax by just specifying one

00:20:28,240 --> 00:20:31,990
attribute into your forms and then your

00:20:30,399 --> 00:20:34,240
forms will be submitted with the Ajax

00:20:31,990 --> 00:20:37,360
requests so this is something was very

00:20:34,240 --> 00:20:40,330
unique and new with the rails like back

00:20:37,360 --> 00:20:42,279
in 2009 intend no other framework used

00:20:40,330 --> 00:20:43,899
to do that and client-side frameworks

00:20:42,279 --> 00:20:45,669
were pretty true everything that was

00:20:43,899 --> 00:20:48,879
being done was with the was with the

00:20:45,669 --> 00:20:51,460
jQuery so prototype was pretty

00:20:48,879 --> 00:20:53,830
revolutionary back then and then asset

00:20:51,460 --> 00:20:56,500
pipeline with the rails 3.1 it provided

00:20:53,830 --> 00:20:58,750
for the faster and compilation of the

00:20:56,500 --> 00:21:02,889
assets so that the files and everything

00:20:58,750 --> 00:21:04,779
could be shorter and lastly in the

00:21:02,889 --> 00:21:08,259
features is the security point of view

00:21:04,779 --> 00:21:11,500
so there is also a story alleged that so

00:21:08,259 --> 00:21:14,370
this is on the fourth March 2012 and

00:21:11,500 --> 00:21:18,279
what happened is there was a hacker

00:21:14,370 --> 00:21:21,549
Houma Cove who was trying to submit

00:21:18,279 --> 00:21:24,580
couple of security issues to the github

00:21:21,549 --> 00:21:28,090
as well as to the rails community but

00:21:24,580 --> 00:21:30,639
somehow the github team didn't listen to

00:21:28,090 --> 00:21:33,039
him he says that the also pointed

00:21:30,639 --> 00:21:33,820
fingers to the rails and say that it's a

00:21:33,039 --> 00:21:37,239
general

00:21:33,820 --> 00:21:41,080
this and everything so in the end his

00:21:37,239 --> 00:21:43,419
security notifications were not provided

00:21:41,080 --> 00:21:46,029
in heat two and that's when he decided

00:21:43,419 --> 00:21:48,909
to do something different so what he did

00:21:46,029 --> 00:21:51,159
he created commutes on the rails master

00:21:48,909 --> 00:21:53,859
without having access to the repository

00:21:51,159 --> 00:21:56,489
or without having without have being

00:21:53,859 --> 00:21:59,679
part to the rails team members right and

00:21:56,489 --> 00:22:00,820
so that's this one is a simple one like

00:21:59,679 --> 00:22:02,950
another or showcase over Hills

00:22:00,820 --> 00:22:05,649
observability apart from this he also

00:22:02,950 --> 00:22:08,320
locked he also added couple of comments

00:22:05,649 --> 00:22:13,299
on the same issue with the DHS's account

00:22:08,320 --> 00:22:15,369
so you see if rails and the flagship

00:22:13,299 --> 00:22:16,960
application one of the flexing

00:22:15,369 --> 00:22:19,690
application of the rails which was get

00:22:16,960 --> 00:22:22,090
up back in the day if those things could

00:22:19,690 --> 00:22:25,450
be hacked in such a easy way what would

00:22:22,090 --> 00:22:30,399
have been the chaos back then so that's

00:22:25,450 --> 00:22:32,259
when the mass assignment and it was

00:22:30,399 --> 00:22:35,019
discussed it was debated and finally

00:22:32,259 --> 00:22:37,539
what you see is the strong parameters of

00:22:35,019 --> 00:22:39,340
today it came from that so it was a

00:22:37,539 --> 00:22:41,139
lesson learned hard way here is an

00:22:39,340 --> 00:22:43,229
example of mass assignment security bug

00:22:41,139 --> 00:22:45,970
that generally happens so here is a

00:22:43,229 --> 00:22:48,090
current user assigned to the user user

00:22:45,970 --> 00:22:51,429
dot update attributes and then params

00:22:48,090 --> 00:22:54,580
this was the old way of saving the

00:22:51,429 --> 00:22:55,989
parameters or updating a model and as

00:22:54,580 --> 00:22:57,999
you can see the parameters are just

00:22:55,989 --> 00:23:02,259
usernames own so this is the ideal way

00:22:57,999 --> 00:23:04,720
in which we want to update the user so

00:23:02,259 --> 00:23:06,960
simple form right but what happens if

00:23:04,720 --> 00:23:09,629
someone sends this data instead of

00:23:06,960 --> 00:23:12,450
sending just the username Jean if

00:23:09,629 --> 00:23:15,999
someone sends password which is a

00:23:12,450 --> 00:23:18,909
watcher or anything then it's also

00:23:15,999 --> 00:23:21,849
updating the password and that was the

00:23:18,909 --> 00:23:23,859
problem and the solution to that was the

00:23:21,849 --> 00:23:25,419
strong parameters so many a times I have

00:23:23,859 --> 00:23:29,529
seen that when the people are trying to

00:23:25,419 --> 00:23:31,629
learn rails they ask or can't explain

00:23:29,529 --> 00:23:35,979
why you have to permit the parameters

00:23:31,629 --> 00:23:39,070
and why the issues or the exceptions are

00:23:35,979 --> 00:23:40,869
raised because of that if it's such an

00:23:39,070 --> 00:23:43,330
important thing then these are the

00:23:40,869 --> 00:23:45,609
reasons behind that so even if someone

00:23:43,330 --> 00:23:47,499
tries to submit something that shouldn't

00:23:45,609 --> 00:23:48,010
be updated the strong parameters make

00:23:47,499 --> 00:23:49,750
sure that

00:23:48,010 --> 00:23:53,110
it's not getting in into your

00:23:49,750 --> 00:23:56,170
application and then some more security

00:23:53,110 --> 00:23:57,670
that here is an example where in many of

00:23:56,170 --> 00:24:00,790
the people who were just starting with

00:23:57,670 --> 00:24:02,890
the rails get stuck and then they try to

00:24:00,790 --> 00:24:05,560
reason why something like that is

00:24:02,890 --> 00:24:09,640
happening invalid authenticity token so

00:24:05,560 --> 00:24:12,190
this is for the CSRF protection and you

00:24:09,640 --> 00:24:15,160
know the point that I want to drive from

00:24:12,190 --> 00:24:17,800
this is this one that rails is not just

00:24:15,160 --> 00:24:19,330
the opinions and a territory structure

00:24:17,800 --> 00:24:21,400
but it's much more than that

00:24:19,330 --> 00:24:24,480
so for example if you are trying to

00:24:21,400 --> 00:24:29,110
build a web application in any of the

00:24:24,480 --> 00:24:30,280
say different languages say no and if

00:24:29,110 --> 00:24:32,080
you are trying to use a framework from

00:24:30,280 --> 00:24:35,440
there there are many many things that

00:24:32,080 --> 00:24:37,840
will be different from rails and when

00:24:35,440 --> 00:24:39,910
you are using rails sometimes you flown

00:24:37,840 --> 00:24:42,310
to appreciate what other features are

00:24:39,910 --> 00:24:44,380
present in the system that you are not

00:24:42,310 --> 00:24:46,750
aware of for example excesses cor is

00:24:44,380 --> 00:24:48,820
utf-8 encoding for all the data that is

00:24:46,750 --> 00:24:49,960
coming into the application and for all

00:24:48,820 --> 00:24:52,120
the data that is going out of

00:24:49,960 --> 00:24:55,030
application the encoding is by default

00:24:52,120 --> 00:24:58,480
handled by the rails apart from that SQL

00:24:55,030 --> 00:25:00,910
injection related security issues or

00:24:58,480 --> 00:25:02,440
fixes that is also handled by default

00:25:00,910 --> 00:25:06,760
whenever any stimulus being rendered

00:25:02,440 --> 00:25:12,910
into your browser that is also made safe

00:25:06,760 --> 00:25:16,450
right so yeah so that's it on the

00:25:12,910 --> 00:25:18,220
conclusion side I would say these are

00:25:16,450 --> 00:25:27,520
some of the stories that I had to share

00:25:18,220 --> 00:25:29,830
and so Matz is happy and DHE is also

00:25:27,520 --> 00:25:31,330
enjoying the rails so probably rather

00:25:29,830 --> 00:25:32,590
than looking at the conclusions I would

00:25:31,330 --> 00:25:36,160
rather show some of the Nastassja

00:25:32,590 --> 00:25:38,590
slights from the past so if any of you

00:25:36,160 --> 00:25:41,370
have been into rails word for quite long

00:25:38,590 --> 00:25:44,500
you will feed and feel the nostalgia of

00:25:41,370 --> 00:25:49,690
all these things so this is the rails

00:25:44,500 --> 00:25:53,830
website from 2008 this is how the API

00:25:49,690 --> 00:25:56,320
documentation looked back then and this

00:25:53,830 --> 00:25:57,940
is the this is the website where most of

00:25:56,320 --> 00:26:00,799
the rails developers started their rails

00:25:57,940 --> 00:26:02,779
journey various costs

00:26:00,799 --> 00:26:06,200
thanks for discussions to a couple of

00:26:02,779 --> 00:26:10,179
people who help creating some of these

00:26:06,200 --> 00:26:10,179
stories yeah thank you

00:26:10,540 --> 00:26:15,430

YouTube URL: https://www.youtube.com/watch?v=junKFYegzp4


