Title: Birmingham on Rails 2020 - Validating and Processing the Content of... by Claudio B.
Publication date: 2020-02-19
Playlist: Birmingham on Rails 2020
Description: 
	Birmingham on Rails 2020 - Validating and Processing the Content of a File with Active Storage by Claudio B.
Captions: 
	00:00:03,310 --> 00:00:06,460
[Music]

00:00:10,550 --> 00:00:15,210
[Music]

00:00:12,070 --> 00:00:15,210
[Applause]

00:00:16,530 --> 00:00:20,519
[Music]

00:00:43,140 --> 00:00:46,179
[Music]

00:00:47,210 --> 00:00:52,910
this website called speaker back.com

00:00:53,000 --> 00:01:04,280
speaker back back home slash forever so

00:01:00,600 --> 00:01:04,280
just in case you and

00:01:11,240 --> 00:01:15,840
this talking about rails because it's

00:01:14,670 --> 00:01:18,540
Birmingham on Rails

00:01:15,840 --> 00:01:21,509
specifically about a library called

00:01:18,540 --> 00:01:24,960
active storage which is part of this and

00:01:21,509 --> 00:01:29,280
it simplifies the process of uploading

00:01:24,960 --> 00:01:32,670
and downloading files but as brain said

00:01:29,280 --> 00:01:35,040
at the very beginning you should all be

00:01:32,670 --> 00:01:37,500
learning something if possible and I

00:01:35,040 --> 00:01:39,570
think you might because if you've never

00:01:37,500 --> 00:01:43,170
used active storage you're going to see

00:01:39,570 --> 00:01:45,149
how easy it is to use it if you have use

00:01:43,170 --> 00:01:48,090
active search I'm going to go a little

00:01:45,149 --> 00:01:50,369
deep in kind of like some advanced use

00:01:48,090 --> 00:01:52,320
and if you don't care about active

00:01:50,369 --> 00:01:57,780
search you might still learn something

00:01:52,320 --> 00:02:00,719
about iOS development this talk has

00:01:57,780 --> 00:02:02,960
three parts like every great talker

00:02:00,719 --> 00:02:05,210
movie

00:02:02,960 --> 00:02:09,440
and I'm gonna take a little break after

00:02:05,210 --> 00:02:11,390
which part I was gonna see if you want

00:02:09,440 --> 00:02:13,340
to ask questions but I think logistical

00:02:11,390 --> 00:02:17,330
it's gonna be hard to slow you can ask

00:02:13,340 --> 00:02:19,100
those at the end the first part is

00:02:17,330 --> 00:02:24,280
really like the basics I like to start

00:02:19,100 --> 00:02:29,480
how do you use it if you have to upload

00:02:24,280 --> 00:02:33,310
files from the browser and the second

00:02:29,480 --> 00:02:36,350
part is collector core of this talk a

00:02:33,310 --> 00:02:39,890
little more than just upload and

00:02:36,350 --> 00:02:42,080
download so can you analyze these files

00:02:39,890 --> 00:02:45,170
get something out of that and then use

00:02:42,080 --> 00:02:47,720
that and then in the end I'm gonna talk

00:02:45,170 --> 00:02:50,330
a little bit about validation so can we

00:02:47,720 --> 00:02:53,000
make for a better user experience by

00:02:50,330 --> 00:02:55,310
telling the users hey you know you're

00:02:53,000 --> 00:03:12,410
uploading the wrong file something like

00:02:55,310 --> 00:03:15,670
that let's start so for this talk I'm

00:03:12,410 --> 00:03:19,310
going to use a real rails application

00:03:15,670 --> 00:03:22,840
that is actually open source the way is

00:03:19,310 --> 00:03:26,360
you have dark rum slash craddle slash

00:03:22,840 --> 00:03:31,420
MDMA which stands for mobile development

00:03:26,360 --> 00:03:34,490
mobile deployment management agents

00:03:31,420 --> 00:03:34,490
[Music]

00:03:37,030 --> 00:03:45,500
swift is xcode built and iOS app at the

00:03:42,350 --> 00:03:48,829
end we have this package which in Apple

00:03:45,500 --> 00:03:52,220
is a file called IPA so you have this

00:03:48,829 --> 00:03:54,070
package I'm gonna distribute it so you

00:03:52,220 --> 00:03:56,269
can use this worse apps and it has

00:03:54,070 --> 00:03:58,820
different features but I'm showing you

00:03:56,269 --> 00:04:01,700
the main two things first is a page

00:03:58,820 --> 00:04:05,269
where an iOS developer goes and uploads

00:04:01,700 --> 00:04:08,239
this package with a file uploader and

00:04:05,269 --> 00:04:11,120
also specifies which version of this iOS

00:04:08,239 --> 00:04:12,500
app it is so you just go down you submit

00:04:11,120 --> 00:04:14,720
this form

00:04:12,500 --> 00:04:16,690
the second page where you'll and where

00:04:14,720 --> 00:04:20,150
you can see on the versions and so

00:04:16,690 --> 00:04:21,799
typically maybe developer is gonna go to

00:04:20,150 --> 00:04:24,530
the second page and see oh there is a

00:04:21,799 --> 00:04:28,040
maybe test version of this happen gonna

00:04:24,530 --> 00:04:29,810
you know download and tested it this is

00:04:28,040 --> 00:04:31,400
just one second an example just to show

00:04:29,810 --> 00:04:35,420
you how you can upload and download

00:04:31,400 --> 00:04:38,930
files so let me break these two pages

00:04:35,420 --> 00:04:44,110
down for you so when is a create action

00:04:38,930 --> 00:04:47,300
in various Olympics so specifically this

00:04:44,110 --> 00:04:50,750
created this model I call this a build

00:04:47,300 --> 00:04:53,060
and he has two fields the first one the

00:04:50,750 --> 00:04:55,310
file itself we call that a package and

00:04:53,060 --> 00:04:57,830
the second is just the version

00:04:55,310 --> 00:05:01,040
when you submit you gonna see in the

00:04:57,830 --> 00:05:03,020
parameters a package and a version and

00:05:01,040 --> 00:05:05,150
then it's submitted and running the

00:05:03,020 --> 00:05:07,460
index there's always a package and a

00:05:05,150 --> 00:05:10,850
version so it's a pretty simple model

00:05:07,460 --> 00:05:14,690
with two fields now if you've never

00:05:10,850 --> 00:05:20,000
maybe you have used file uploads in with

00:05:14,690 --> 00:05:22,850
other libraries like this one is using

00:05:20,000 --> 00:05:28,490
active storage one of the benefits is

00:05:22,850 --> 00:05:31,910
that you need to do something in your

00:05:28,490 --> 00:05:35,180
code to make this work and let me show

00:05:31,910 --> 00:05:36,770
you what that is so how do you make this

00:05:35,180 --> 00:05:41,060
framework this fella plover

00:05:36,770 --> 00:05:46,010
good active storage you need to write

00:05:41,060 --> 00:05:48,770
three things first of all in the view in

00:05:46,010 --> 00:05:50,960
the HTML you actually need that file

00:05:48,770 --> 00:05:55,130
uploader right there to display in the

00:05:50,960 --> 00:05:57,470
browser so will you add a file field and

00:05:55,130 --> 00:06:01,060
let's call that package that one you

00:05:57,470 --> 00:06:05,410
need the user can click Choose file

00:06:01,060 --> 00:06:10,760
there in the controller in to whitelist

00:06:05,410 --> 00:06:13,790
perms about the historic parameters

00:06:10,760 --> 00:06:17,510
that's exactly what it is so you need to

00:06:13,790 --> 00:06:22,400
add forms require package right there so

00:06:17,510 --> 00:06:23,860
it can be submitted and finally this is

00:06:22,400 --> 00:06:25,900
the most powerful thing

00:06:23,860 --> 00:06:29,620
you just add one line of code to your

00:06:25,900 --> 00:06:33,159
model to build model and you say has one

00:06:29,620 --> 00:06:34,960
attached package as well attached is a

00:06:33,159 --> 00:06:38,500
method that comes from active storage

00:06:34,960 --> 00:06:41,500
that enables all of these so we rid of

00:06:38,500 --> 00:06:46,479
that you're from submit you have the

00:06:41,500 --> 00:06:49,930
file and then in your index you want a

00:06:46,479 --> 00:06:51,400
link to download the file and there is a

00:06:49,930 --> 00:06:55,000
helper called

00:06:51,400 --> 00:06:57,400
where's blob URL in your view we pass

00:06:55,000 --> 00:07:00,610
let's say the package and then some

00:06:57,400 --> 00:07:06,539
options for instance disposition

00:07:00,610 --> 00:07:09,159
attachment means when I click it and

00:07:06,539 --> 00:07:12,849
that's it that's how we need for your

00:07:09,159 --> 00:07:14,710
download links now if you're wondering

00:07:12,849 --> 00:07:18,400
where is this file stored

00:07:14,710 --> 00:07:21,699
what does it go that depends on how you

00:07:18,400 --> 00:07:24,009
are configuring your application so for

00:07:21,699 --> 00:07:27,909
instance if you want your files to go to

00:07:24,009 --> 00:07:31,360
Amazon s3 you introduction you go to

00:07:27,909 --> 00:07:34,270
your config environments production and

00:07:31,360 --> 00:07:37,210
you are the line of code that says that

00:07:34,270 --> 00:07:39,490
the active storage service is s3 this

00:07:37,210 --> 00:07:44,729
also is by default inside the active

00:07:39,490 --> 00:07:47,860
storage codebase you can take Amazon s3

00:07:44,729 --> 00:07:50,500
Microsoft Azure Google Cloud Storage

00:07:47,860 --> 00:07:52,689
those all come and there is also another

00:07:50,500 --> 00:07:56,080
one called local so if you just do a

00:07:52,689 --> 00:07:58,689
localhost that's the default so you just

00:07:56,080 --> 00:08:03,879
upload it to your hard drive and then

00:07:58,689 --> 00:08:07,479
downloads it from there and so this is

00:08:03,879 --> 00:08:10,240
really can like the basic other

00:08:07,479 --> 00:08:13,930
libraries have other ways of doing like

00:08:10,240 --> 00:08:17,939
the same process and I'll be using a

00:08:13,930 --> 00:08:20,020
couple of years and I thought that it's

00:08:17,939 --> 00:08:27,639
really convenient you might want to give

00:08:20,020 --> 00:08:30,030
it a try and yes just a couple of notes

00:08:27,639 --> 00:08:31,860
on its usage

00:08:30,030 --> 00:08:33,390
what if we want to have some validations

00:08:31,860 --> 00:08:36,479
for instance let's say that the user

00:08:33,390 --> 00:08:38,700
submits the form and forgets to attach

00:08:36,479 --> 00:08:42,060
anything we will not want to tell the

00:08:38,700 --> 00:08:45,180
user the package can't be blank this

00:08:42,060 --> 00:08:47,490
valuation is pretty simple you just use

00:08:45,180 --> 00:08:49,230
the moment validates package presence

00:08:47,490 --> 00:08:55,230
true and then it's going to display the

00:08:49,230 --> 00:08:58,500
error what if you wanted something a

00:08:55,230 --> 00:09:01,080
little more advanced let's say a user

00:08:58,500 --> 00:09:03,870
hey you know your attachment cannot be

00:09:01,080 --> 00:09:07,230
too big or it has to be you know a zip

00:09:03,870 --> 00:09:09,720
file if we realize if we could use a

00:09:07,230 --> 00:09:13,160
similar syntax so validate you know

00:09:09,720 --> 00:09:16,980
attachment size certain size or

00:09:13,160 --> 00:09:19,860
attachment Content ID I'm saying it

00:09:16,980 --> 00:09:22,320
would be nice because well now there is

00:09:19,860 --> 00:09:26,660
a tour request open in the rails code

00:09:22,320 --> 00:09:29,460
base 3 5 through 9 0 then it's

00:09:26,660 --> 00:09:31,530
suggesting these validations it's not

00:09:29,460 --> 00:09:33,960
being merged yet so I'm not going to use

00:09:31,530 --> 00:09:36,450
them but if you interested there's a

00:09:33,960 --> 00:09:42,240
good discussion board and you want to

00:09:36,450 --> 00:09:44,400
follow that there and that concludes the

00:09:42,240 --> 00:09:53,570
first part how many people are still

00:09:44,400 --> 00:09:53,570
with me ok that was okay

00:09:57,960 --> 00:10:05,640
uploading and downloading that's not

00:10:00,330 --> 00:10:07,590
hard can we do something more so let me

00:10:05,640 --> 00:10:10,770
tell you a little more about this and

00:10:07,590 --> 00:10:14,400
being way exactly exactly what it's

00:10:10,770 --> 00:10:16,440
supposed to do this is exactly what's

00:10:14,400 --> 00:10:19,760
supposed to do an iOS developer uploads

00:10:16,440 --> 00:10:23,550
the package and then a QA developer

00:10:19,760 --> 00:10:28,530
opens this website on an iPhone clicks

00:10:23,550 --> 00:10:32,010
on the package and is able to install

00:10:28,530 --> 00:10:33,600
the app on the phone directly that's

00:10:32,010 --> 00:10:36,980
really the goal because if you just

00:10:33,600 --> 00:10:40,920
download this file whatever who cares

00:10:36,980 --> 00:10:43,680
now you can do this applet to do this so

00:10:40,920 --> 00:10:45,960
you don't have to use the app store to

00:10:43,680 --> 00:10:49,800
distribute your applications okay you

00:10:45,960 --> 00:10:52,860
can share a link however is not as easy

00:10:49,800 --> 00:10:55,290
if you just share a link to the IPA file

00:10:52,860 --> 00:10:58,800
itself and you try to open that in

00:10:55,290 --> 00:11:01,020
Safari on your phone you're gonna see

00:10:58,800 --> 00:11:04,950
that you're gonna say where do you want

00:11:01,020 --> 00:11:09,000
to download this file to do this apple

00:11:04,950 --> 00:11:11,040
says well you need to do work so what we

00:11:09,000 --> 00:11:13,640
want is a link and then you click

00:11:11,040 --> 00:11:17,400
install and your phone is gonna say

00:11:13,640 --> 00:11:20,790
would you like to install this app so to

00:11:17,400 --> 00:11:23,850
do that the URL needs to look a little

00:11:20,790 --> 00:11:25,320
different it's a different protocol but

00:11:23,850 --> 00:11:27,000
more importantly you need to do some

00:11:25,320 --> 00:11:30,510
processing and this is what you have to

00:11:27,000 --> 00:11:33,710
do you have your package store somewhere

00:11:30,510 --> 00:11:37,230
you need to open it inside this package

00:11:33,710 --> 00:11:39,570
there's going to be an XML file that has

00:11:37,230 --> 00:11:42,330
some information about the iOS app like

00:11:39,570 --> 00:11:44,490
the name the version the minimum iOS

00:11:42,330 --> 00:11:47,010
version you need to extract what is

00:11:44,490 --> 00:11:49,530
information then you need to create a

00:11:47,010 --> 00:11:52,830
brand new file called manifest the

00:11:49,530 --> 00:11:56,820
police put information there upload this

00:11:52,830 --> 00:11:58,200
file and then link to this file Apple

00:11:56,820 --> 00:12:01,440
always makes things very easy for

00:11:58,200 --> 00:12:05,580
developers but that's it that's why we

00:12:01,440 --> 00:12:08,720
have to do so you know even if you don't

00:12:05,580 --> 00:12:08,720
wanna try active source

00:12:09,560 --> 00:12:13,880
appen share with your friends but there

00:12:12,170 --> 00:12:16,310
is this little bit of manual process to

00:12:13,880 --> 00:12:18,710
do you need to share a link to and

00:12:16,310 --> 00:12:22,730
manifest the links to your actual

00:12:18,710 --> 00:12:27,980
package and so the question is can

00:12:22,730 --> 00:12:35,870
active storage do all this who says yes

00:12:27,980 --> 00:12:38,450
and you say yes you can and I'll show

00:12:35,870 --> 00:12:41,120
you how so what we're gonna do here is

00:12:38,450 --> 00:12:42,980
we have this attachment this package and

00:12:41,120 --> 00:12:45,710
now we want to do something with it we

00:12:42,980 --> 00:12:48,700
want to analyze it behind the scenes and

00:12:45,710 --> 00:12:52,550
get some information

00:12:48,700 --> 00:12:56,020
luckily in active state some code that

00:12:52,550 --> 00:13:00,320
analyzes files and it's called analyzer

00:12:56,020 --> 00:13:03,170
great name so here's an example if you

00:13:00,320 --> 00:13:12,350
use active search to upload an image and

00:13:03,170 --> 00:13:14,510
like a JPEG the active storage

00:13:12,350 --> 00:13:17,030
automatically tries to analyze that

00:13:14,510 --> 00:13:19,520
image extract the width and height and

00:13:17,030 --> 00:13:21,790
store that in the middle base because

00:13:19,520 --> 00:13:26,089
there is a thing called image analyzer

00:13:21,790 --> 00:13:27,680
same thing if you upload a video active

00:13:26,089 --> 00:13:29,810
storage is going to try to extract the

00:13:27,680 --> 00:13:31,640
resolution the duration and so on for

00:13:29,810 --> 00:13:34,790
you because there is a thing called

00:13:31,640 --> 00:13:38,240
eliezer so what I'm going to show you

00:13:34,790 --> 00:13:40,730
now is a redacted version of the code

00:13:38,240 --> 00:13:42,650
base of those for the image analyzer

00:13:40,730 --> 00:13:44,240
because then we're going to go we're

00:13:42,650 --> 00:13:46,130
gonna do something similar and we're

00:13:44,240 --> 00:13:53,540
gonna write a package analyze there's no

00:13:46,130 --> 00:13:56,209
iOS package manizer by default code and

00:13:53,540 --> 00:14:02,570
okay so this is a this is code from

00:13:56,209 --> 00:14:05,600
where it snowed active but it's whenever

00:14:02,570 --> 00:14:10,220
you upload an image with active search

00:14:05,600 --> 00:14:12,560
this is code firmwares the first thing

00:14:10,220 --> 00:14:17,270
is the class attachment which says after

00:14:12,560 --> 00:14:21,010
an attachment is graded in queue this

00:14:17,270 --> 00:14:23,290
job called analyze job so whenever you

00:14:21,010 --> 00:14:25,060
create an attachment this Annalise job

00:14:23,290 --> 00:14:28,899
is going to be in cute it's gonna run in

00:14:25,060 --> 00:14:31,209
the background later what this Annalise

00:14:28,899 --> 00:14:33,610
job does and that's the second part is

00:14:31,209 --> 00:14:35,920
it's kind of like a switch statement

00:14:33,610 --> 00:14:37,690
what kind of attachment is this if it

00:14:35,920 --> 00:14:40,540
finds out it eats so much then it's

00:14:37,690 --> 00:14:42,579
gonna call the image analyzer so that's

00:14:40,540 --> 00:14:43,990
that part of code it's an image I'm

00:14:42,579 --> 00:14:46,300
going to call the image analyzer I'm

00:14:43,990 --> 00:14:48,730
gonna tell it to extract metadata and

00:14:46,300 --> 00:14:50,980
then I'm gonna stir back in the database

00:14:48,730 --> 00:14:55,050
there is a column called metadata who

00:14:50,980 --> 00:14:57,490
it's gonna be stored and finally

00:14:55,050 --> 00:15:01,779
specifically the image analyzer what it

00:14:57,490 --> 00:15:10,149
does it is two things first of all we

00:15:01,779 --> 00:15:14,079
are in a background so the first one we

00:15:10,149 --> 00:15:16,089
has to do is to download blob to temp

00:15:14,079 --> 00:15:19,000
file basically has to get the file back

00:15:16,089 --> 00:15:21,040
let's say we store the file to s3 this

00:15:19,000 --> 00:15:23,920
job has to get it back because he wants

00:15:21,040 --> 00:15:26,290
to analyze it in memory and burn it

00:15:23,920 --> 00:15:28,630
relies on a third-party library called

00:15:26,290 --> 00:15:31,240
new magic which is just like an image

00:15:28,630 --> 00:15:34,329
manipulation library that is able to

00:15:31,240 --> 00:15:36,430
open a JPEG file and extract metadata so

00:15:34,329 --> 00:15:38,769
in this case it extracts the width and

00:15:36,430 --> 00:15:40,779
the height and if you want more the

00:15:38,769 --> 00:15:42,730
color resolution depth you can do all of

00:15:40,779 --> 00:15:47,410
that and then it returns this

00:15:42,730 --> 00:15:49,720
information and so don't anything about

00:15:47,410 --> 00:15:52,389
the analyzer is that as I mentioned it

00:15:49,720 --> 00:15:54,790
once in a background job so he needs

00:15:52,389 --> 00:15:57,760
this download blow up to temp file

00:15:54,790 --> 00:16:00,370
method because the file is maybe an s3

00:15:57,760 --> 00:16:04,870
needs to be in memory and everyone Eliza

00:16:00,370 --> 00:16:10,360
was gonna kind of call this method and

00:16:04,870 --> 00:16:13,360
so given that this is the what happens

00:16:10,360 --> 00:16:17,410
with images let me show you where we can

00:16:13,360 --> 00:16:19,180
do with packages this is not the worst

00:16:17,410 --> 00:16:21,310
code anymore this is the code of this

00:16:19,180 --> 00:16:25,300
application but it follows a similar

00:16:21,310 --> 00:16:27,850
structure first of all we will create a

00:16:25,300 --> 00:16:32,630
build after it's cruel it we call our

00:16:27,850 --> 00:16:35,029
own job it's named packaging a nice job

00:16:32,630 --> 00:16:36,769
when this job is when we tell it to call

00:16:35,029 --> 00:16:38,870
our own analyzer we already know it's a

00:16:36,769 --> 00:16:42,800
package this is our app so we only

00:16:38,870 --> 00:16:44,990
upload iOS packages and whatever comes

00:16:42,800 --> 00:16:49,279
back we store in the database just like

00:16:44,990 --> 00:16:51,829
before and then we have I call this

00:16:49,279 --> 00:16:54,310
packet analyzer and similar to the limit

00:16:51,829 --> 00:16:59,240
one uses a library but it's able to open

00:16:54,310 --> 00:17:02,000
i OS packages it's called CF which is

00:16:59,240 --> 00:17:05,449
called Foundation property bundle it's a

00:17:02,000 --> 00:17:08,329
it's able to open this IPA file and

00:17:05,449 --> 00:17:13,490
extract marijuana and then store the

00:17:08,329 --> 00:17:15,829
properties back and so this is the code

00:17:13,490 --> 00:17:18,530
I wrote and I will you know as you can

00:17:15,829 --> 00:17:22,150
see talked inspiration from the active

00:17:18,530 --> 00:17:25,520
storage source code and one of these

00:17:22,150 --> 00:17:29,000
just to show you that sometimes people

00:17:25,520 --> 00:17:31,309
can like afraid to open the source code

00:17:29,000 --> 00:17:34,039
below us because they think it's super

00:17:31,309 --> 00:17:39,130
complicated but specifically active

00:17:34,039 --> 00:17:46,100
stages is not that complicated you can

00:17:39,130 --> 00:17:54,590
explore so let me break break down some

00:17:46,100 --> 00:17:58,880
of the code here for you CF property

00:17:54,590 --> 00:18:03,080
bundle so what is this thing that Xcode

00:17:58,880 --> 00:18:04,940
creates basically well this has nothing

00:18:03,080 --> 00:18:09,289
to do with active search is just to show

00:18:04,940 --> 00:18:11,780
you that really an IP file is zip file

00:18:09,289 --> 00:18:14,570
that's what Xcode creates is a zip file

00:18:11,780 --> 00:18:16,549
the extension is that IPA and then the

00:18:14,570 --> 00:18:18,890
zip files there are several folders and

00:18:16,549 --> 00:18:21,610
there is like some XML so basically

00:18:18,890 --> 00:18:24,500
we're trying to open this as a zip file

00:18:21,610 --> 00:18:28,370
extracting the property listing get some

00:18:24,500 --> 00:18:30,440
of those properties out and also maybe a

00:18:28,370 --> 00:18:32,809
user has not really applaud a zip file

00:18:30,440 --> 00:18:35,960
has made a mistake uploaded an image in

00:18:32,809 --> 00:18:38,570
that case zip file open that just was an

00:18:35,960 --> 00:18:42,260
error like a zip our

00:18:38,570 --> 00:18:45,490
so rather than bubbling up that error we

00:18:42,260 --> 00:18:47,529
can raise our own custom error

00:18:45,490 --> 00:18:51,600
and this is you know part of the library

00:18:47,529 --> 00:18:51,600
this is what's under the APA

00:18:54,090 --> 00:19:02,649
okay the second note about this code is

00:18:59,140 --> 00:19:07,240
that if you have noticed it was kind of

00:19:02,649 --> 00:19:09,909
like a weird sense prepended sure which

00:19:07,240 --> 00:19:11,500
is also weird for me because when I

00:19:09,909 --> 00:19:13,480
first wrote the code I wasn't there and

00:19:11,500 --> 00:19:16,690
then the code was failing and in your

00:19:13,480 --> 00:19:22,120
eye so I'm here to tell you why I was

00:19:16,690 --> 00:19:24,039
wearing and what that thing does that

00:19:22,120 --> 00:19:26,260
has to do with callbacks in where's

00:19:24,039 --> 00:19:28,539
callbacks in where's I'm already pretty

00:19:26,260 --> 00:19:30,669
complicated to kind of like who do

00:19:28,539 --> 00:19:34,570
understand and one thing that is

00:19:30,669 --> 00:19:36,789
complicated is if you have the same kind

00:19:34,570 --> 00:19:38,950
of call back multiple times in your code

00:19:36,789 --> 00:19:42,730
let's say have after save after save

00:19:38,950 --> 00:19:47,130
after save doing different things which

00:19:42,730 --> 00:19:50,830
one runs first if these are after

00:19:47,130 --> 00:19:52,690
callbacks the last one that you declared

00:19:50,830 --> 00:19:56,380
is going to be the first one to be

00:19:52,690 --> 00:20:00,490
executed this is just how codecs working

00:19:56,380 --> 00:20:02,980
with it happens that in active search

00:20:00,490 --> 00:20:07,929
the part of code that actually moves the

00:20:02,980 --> 00:20:10,779
file twist 3 is also even after create

00:20:07,929 --> 00:20:11,590
commit call back so you have the same

00:20:10,779 --> 00:20:14,110
call back

00:20:11,590 --> 00:20:16,960
they won the race uses to move the fact

00:20:14,110 --> 00:20:19,510
when three is declared first and then we

00:20:16,960 --> 00:20:21,340
have around after great commit so if we

00:20:19,510 --> 00:20:23,559
don't do anything our code is going to

00:20:21,340 --> 00:20:25,299
run first our code is the one that wants

00:20:23,559 --> 00:20:28,140
to download the file from a street value

00:20:25,299 --> 00:20:32,380
lies it and so the file is not there yet

00:20:28,140 --> 00:20:35,140
so we wanna say hey we're declaring this

00:20:32,380 --> 00:20:38,080
after play commit later that can fake it

00:20:35,140 --> 00:20:40,210
can you put it before yellow else it's

00:20:38,080 --> 00:20:43,000
gonna run later basically that's how you

00:20:40,210 --> 00:20:44,950
do it so poop and through which is also

00:20:43,000 --> 00:20:46,899
recommend a look because you pretend it

00:20:44,950 --> 00:20:49,029
running later because it's an after it's

00:20:46,899 --> 00:20:51,059
kind of like a double negation but yeah

00:20:49,029 --> 00:20:53,140
if you never see that that's a leap as

00:20:51,059 --> 00:20:56,350
anywhere else

00:20:53,140 --> 00:20:57,789
code even beyond active storage if you

00:20:56,350 --> 00:20:58,350
have this sort of problem that you know

00:20:57,789 --> 00:21:01,440
like

00:20:58,350 --> 00:21:03,179
give a specific order somehow to the

00:21:01,440 --> 00:21:11,809
execution of callbacks you can use that

00:21:03,179 --> 00:21:16,590
depend true cool and almost there

00:21:11,809 --> 00:21:18,210
we finally have we finally have all the

00:21:16,590 --> 00:21:21,870
metadata that we need from this

00:21:18,210 --> 00:21:24,480
attachment the app name version and so

00:21:21,870 --> 00:21:27,049
on we can say in the database but if you

00:21:24,480 --> 00:21:29,850
remember what we really want to do is to

00:21:27,049 --> 00:21:32,700
generate another file an XML file

00:21:29,850 --> 00:21:34,140
interpret all of this metadata and so we

00:21:32,700 --> 00:21:37,679
can actually do it right there in that

00:21:34,140 --> 00:21:41,580
job so I'm going to expand that second

00:21:37,679 --> 00:21:43,860
file and this is really what the second

00:21:41,580 --> 00:21:46,740
file looks like the first two lines are

00:21:43,860 --> 00:21:48,690
the same but then what we do is we

00:21:46,740 --> 00:21:51,950
create a new file which is what we have

00:21:48,690 --> 00:21:57,320
to do so we use stamp file open in a

00:21:51,950 --> 00:22:01,679
temporary file called manifest oculist

00:21:57,320 --> 00:22:03,510
we write in this file with that XML code

00:22:01,679 --> 00:22:07,140
that apple provides is just like a

00:22:03,510 --> 00:22:09,000
template xml version 1.0 and then in

00:22:07,140 --> 00:22:11,220
this template we interpolate the

00:22:09,000 --> 00:22:14,100
metadata that we have and we also have

00:22:11,220 --> 00:22:17,340
to interpolate the URL of the package

00:22:14,100 --> 00:22:20,580
and you do that with packaged our

00:22:17,340 --> 00:22:22,020
service URL and finally we have this

00:22:20,580 --> 00:22:25,559
temporary file we actually want to

00:22:22,020 --> 00:22:27,840
upload this file to s3 as well and so

00:22:25,559 --> 00:22:32,040
the easiest way to upload a file in

00:22:27,840 --> 00:22:34,620
Wales is with active storage and so when

00:22:32,040 --> 00:22:37,020
we can do is in the build model apart

00:22:34,620 --> 00:22:39,780
from has one attached package you can

00:22:37,020 --> 00:22:42,929
say has one attached manifest as well

00:22:39,780 --> 00:22:45,870
and now we can just do build that

00:22:42,929 --> 00:22:48,480
manifest are attached attached is the

00:22:45,870 --> 00:22:52,410
method that you can use to explicitly

00:22:48,480 --> 00:22:53,850
upload a file so the upload works in the

00:22:52,410 --> 00:22:56,070
browser you've seen that but if you want

00:22:53,850 --> 00:22:58,470
to do it like in a script like this you

00:22:56,070 --> 00:23:00,150
do dot attach and you pass your

00:22:58,470 --> 00:23:02,600
temporary file and then it's just going

00:23:00,150 --> 00:23:02,600
to store it

00:23:02,759 --> 00:23:10,379
so it is a little maybe complicated like

00:23:07,559 --> 00:23:12,719
it's a few lines of code but it does a

00:23:10,379 --> 00:23:15,029
lot you know it removes all that memory

00:23:12,719 --> 00:23:17,129
processing of you having to extract this

00:23:15,029 --> 00:23:21,119
information creating the file and so it

00:23:17,129 --> 00:23:23,849
does all of this and so because of all

00:23:21,119 --> 00:23:26,789
that code we now can do what we want to

00:23:23,849 --> 00:23:29,849
do we can link to the URL of the

00:23:26,789 --> 00:23:32,820
manifest we just replace in this blob

00:23:29,849 --> 00:23:34,859
URL build manifest and then the link to

00:23:32,820 --> 00:23:37,829
we just need to use the protocol that

00:23:34,859 --> 00:23:42,359
Apple is telling us to use itams

00:23:37,829 --> 00:23:44,369
services and that's it we got that so it

00:23:42,359 --> 00:23:47,369
was a little bit of code there but I

00:23:44,369 --> 00:23:50,279
think it's very powerful because we've

00:23:47,369 --> 00:23:53,549
done all of these with no third party

00:23:50,279 --> 00:24:01,889
jams we just maybe I don't know 30 lines

00:23:53,549 --> 00:24:07,440
of code and not a lot of time we still

00:24:01,889 --> 00:24:10,919
alive well that was that was the tough

00:24:07,440 --> 00:24:23,219
part okay I still have a little bit of

00:24:10,919 --> 00:24:25,049
time so for the last very last part I'm

00:24:23,219 --> 00:24:26,749
going to go back here to this phone this

00:24:25,049 --> 00:24:30,229
is one that I showed at the beginning

00:24:26,749 --> 00:24:32,819
this is where we asked iOS developers to

00:24:30,229 --> 00:24:35,809
upload a package and tell us which

00:24:32,819 --> 00:24:42,029
version of the iOS app they are

00:24:35,809 --> 00:24:44,219
uploading however the version of the app

00:24:42,029 --> 00:24:47,159
is one of those properties that we can

00:24:44,219 --> 00:24:52,440
extract from the package itself it's one

00:24:47,159 --> 00:24:55,049
of those metadata so the question is do

00:24:52,440 --> 00:24:58,649
we have to ask users to type it because

00:24:55,049 --> 00:25:00,690
it's it's inside the package in fact the

00:24:58,649 --> 00:25:03,869
version of an iOS package is very

00:25:00,690 --> 00:25:09,269
important if on your iPhone you have

00:25:03,869 --> 00:25:12,239
let's say version 10 of the Google app

00:25:09,269 --> 00:25:14,669
and I'm making you build and I give you

00:25:12,239 --> 00:25:16,460
portion 10 your phone is not gonna

00:25:14,669 --> 00:25:19,070
download and install it

00:25:16,460 --> 00:25:21,380
I think it's the same one I have to give

00:25:19,070 --> 00:25:23,030
it an incremental version so it is

00:25:21,380 --> 00:25:27,050
important because that's how your phone

00:25:23,030 --> 00:25:28,550
knows in its to updated right so the

00:25:27,050 --> 00:25:30,890
version is very important it's in the

00:25:28,550 --> 00:25:33,290
package it would be nice if I didn't ask

00:25:30,890 --> 00:25:35,090
the user to type it because they might

00:25:33,290 --> 00:25:41,570
forget they may make a mistake we can

00:25:35,090 --> 00:25:43,730
just get it from the package and so I

00:25:41,570 --> 00:25:49,370
basically want to get rid of the number

00:25:43,730 --> 00:25:52,820
two there and I want the phone to look

00:25:49,370 --> 00:25:56,140
like this but if I just do that and

00:25:52,820 --> 00:25:58,940
nothing else I will get an error because

00:25:56,140 --> 00:26:02,480
as I mentioned the version is important

00:25:58,940 --> 00:26:05,360
so I have a validation I don't want the

00:26:02,480 --> 00:26:07,070
Pieta to be saved without a version so

00:26:05,360 --> 00:26:10,460
the version has to be where it also has

00:26:07,070 --> 00:26:12,260
to be unique so I want like like a

00:26:10,460 --> 00:26:13,610
balance I wanted to be there but I don't

00:26:12,260 --> 00:26:16,310
want the user to type it I want to

00:26:13,610 --> 00:26:18,590
extract it so I want the validation

00:26:16,310 --> 00:26:20,270
there but before this validation I want

00:26:18,590 --> 00:26:26,960
to run some code that's going to set the

00:26:20,270 --> 00:26:29,780
version so everything that I've shown

00:26:26,960 --> 00:26:32,450
you so far the analyzer and so on all of

00:26:29,780 --> 00:26:35,150
that runs in a background job all of

00:26:32,450 --> 00:26:38,930
their runs after the build is already

00:26:35,150 --> 00:26:41,540
saved after the fellows readiness 3 but

00:26:38,930 --> 00:26:44,030
here I want to do something before all

00:26:41,540 --> 00:26:45,680
of that I want to block the user from

00:26:44,030 --> 00:26:48,710
even submitting the form if the version

00:26:45,680 --> 00:26:50,420
is missing so you kind of have to think

00:26:48,710 --> 00:26:54,230
of you know these are two different

00:26:50,420 --> 00:26:56,930
processes in general is very good to

00:26:54,230 --> 00:27:00,230
delay everything in a background job

00:26:56,930 --> 00:27:01,910
because I don't want to block the web

00:27:00,230 --> 00:27:03,740
requests I don't want the user wedding

00:27:01,910 --> 00:27:06,280
in the browser while all this happens

00:27:03,740 --> 00:27:09,500
the file is being generated and uploaded

00:27:06,280 --> 00:27:11,090
but in some specific cases like this we

00:27:09,500 --> 00:27:14,030
can do a little bit of that work in

00:27:11,090 --> 00:27:15,470
advance just like not the whole XML just

00:27:14,030 --> 00:27:18,410
like checking if the question is then

00:27:15,470 --> 00:27:21,710
setting it so you guys want to find that

00:27:18,410 --> 00:27:23,570
compromise in your code delay as much as

00:27:21,710 --> 00:27:26,120
possible in the background job so the

00:27:23,570 --> 00:27:28,420
response is fast but still give a good

00:27:26,120 --> 00:27:28,420
user experience

00:27:29,620 --> 00:27:37,010
so the analyzer is the part that is

00:27:33,730 --> 00:27:40,310
extracting the ocean and as I said Eliza

00:27:37,010 --> 00:27:42,260
uses that download blob to time file so

00:27:40,310 --> 00:27:45,530
the analyzer assumes the file is already

00:27:42,260 --> 00:27:47,870
on s3 we can't use this directly to the

00:27:45,530 --> 00:27:54,530
file is not yet on this tree but we can

00:27:47,870 --> 00:27:56,210
call that C or D bundle directly and

00:27:54,530 --> 00:27:58,040
this of the code and I'm gonna break it

00:27:56,210 --> 00:28:00,040
down right now but this is what the

00:27:58,040 --> 00:28:05,690
model looks like at the end

00:28:00,040 --> 00:28:07,640
so let me and then we break it down so

00:28:05,690 --> 00:28:09,290
the validation is still there we're

00:28:07,640 --> 00:28:11,810
still gonna block the user from sent

00:28:09,290 --> 00:28:15,830
submitting package without a version or

00:28:11,810 --> 00:28:18,980
with a duplicate version this is the

00:28:15,830 --> 00:28:21,890
loop art before this validation we're

00:28:18,980 --> 00:28:24,380
gonna set the version and this set

00:28:21,890 --> 00:28:27,740
version method basically does two things

00:28:24,380 --> 00:28:31,190
it causes libraries new property bundle

00:28:27,740 --> 00:28:35,000
to get the version from the file and

00:28:31,190 --> 00:28:39,340
then set self dot version to that thing

00:28:35,000 --> 00:28:42,470
and the important point to understand is

00:28:39,340 --> 00:28:44,920
what is that file know that there's no

00:28:42,470 --> 00:28:48,470
extra where it was that vikon phone

00:28:44,920 --> 00:28:51,440
well here we are in the moment where the

00:28:48,470 --> 00:28:53,390
user is submitting the package so the

00:28:51,440 --> 00:28:55,670
file is actually still in memory the

00:28:53,390 --> 00:28:58,220
file here is still in Wales we don't

00:28:55,670 --> 00:29:01,910
need to grab it from history we have it

00:28:58,220 --> 00:29:04,400
there in memory what I mean is the user

00:29:01,910 --> 00:29:05,990
have just submitted upload so in the

00:29:04,400 --> 00:29:08,780
programs there's actually a package

00:29:05,990 --> 00:29:12,830
right there which is a action dispatch

00:29:08,780 --> 00:29:14,660
HTTP HTTP uploaded file which we have a

00:29:12,830 --> 00:29:19,310
memory which is another way to access it

00:29:14,660 --> 00:29:22,610
I wish there was like an easier syntax

00:29:19,310 --> 00:29:26,060
to access that go away that's the syntax

00:29:22,610 --> 00:29:28,580
that I found basically you submit this

00:29:26,060 --> 00:29:31,100
attachment and then you can access this

00:29:28,580 --> 00:29:32,810
attachment changes which has all the

00:29:31,100 --> 00:29:36,110
things that are going to change once you

00:29:32,810 --> 00:29:38,060
save this world and then we can pick the

00:29:36,110 --> 00:29:39,890
package that's the one we're looking for

00:29:38,060 --> 00:29:41,590
and then really where we want is the

00:29:39,890 --> 00:29:44,740
temporary file that's in memory

00:29:41,590 --> 00:29:48,400
and you get that with the attachable so

00:29:44,740 --> 00:29:51,760
that's how you access the file so memory

00:29:48,400 --> 00:29:54,370
without getting it from s3 so we have

00:29:51,760 --> 00:29:55,990
the file we just analyze it it's a

00:29:54,370 --> 00:29:57,940
memory we just get the version this is

00:29:55,990 --> 00:29:59,559
this is pretty fast you know it follows

00:29:57,940 --> 00:30:01,059
a memo we're just like openly and

00:29:59,559 --> 00:30:07,960
getting a version it's now gonna block

00:30:01,059 --> 00:30:11,049
the user for a couple of seconds the

00:30:07,960 --> 00:30:14,590
last two notes about this code first if

00:30:11,049 --> 00:30:18,190
you've never used with options what that

00:30:14,590 --> 00:30:20,110
is saying is if the user forgot to

00:30:18,190 --> 00:30:21,610
touched anything this form that even

00:30:20,110 --> 00:30:23,470
validate the version I mean there's no

00:30:21,610 --> 00:30:26,169
package there's no need to check if

00:30:23,470 --> 00:30:27,700
there's a version the user forgot so if

00:30:26,169 --> 00:30:29,710
there's no package let's just say

00:30:27,700 --> 00:30:31,600
package can't be black let's not say

00:30:29,710 --> 00:30:33,220
package can't be blank and the version

00:30:31,600 --> 00:30:35,500
can't be blank at the version must be

00:30:33,220 --> 00:30:37,770
unique because there's no point so we're

00:30:35,500 --> 00:30:40,210
just gonna round that validation if

00:30:37,770 --> 00:30:42,309
package attached and that attached

00:30:40,210 --> 00:30:47,320
question mark is a matter that you can

00:30:42,309 --> 00:30:50,529
use to see if there it was a package and

00:30:47,320 --> 00:30:53,169
when the very last part if you remember

00:30:50,529 --> 00:30:55,480
I mention that this property bundle can

00:30:53,169 --> 00:30:57,640
raise its own custom error in case

00:30:55,480 --> 00:31:01,630
anything goes wrong with extract new

00:30:57,640 --> 00:31:05,620
version it's not a zip file it doesn't

00:31:01,630 --> 00:31:07,510
have information that Apple wants in any

00:31:05,620 --> 00:31:10,049
of those cases we can actually rescue it

00:31:07,510 --> 00:31:13,029
right there and say I wasn't able to

00:31:10,049 --> 00:31:15,610
extract the version so fix it you know

00:31:13,029 --> 00:31:17,590
upload a different file and this is

00:31:15,610 --> 00:31:20,500
really good because right now in this

00:31:17,590 --> 00:31:23,020
way we're giving the users an immediate

00:31:20,500 --> 00:31:24,640
feedback of there's something wrong with

00:31:23,020 --> 00:31:27,820
the father you uploaded it doesn't

00:31:24,640 --> 00:31:29,590
comply with what I was expecting this is

00:31:27,820 --> 00:31:32,320
even before we tried to generate a

00:31:29,590 --> 00:31:34,390
manifest so if we didn't have this code

00:31:32,320 --> 00:31:36,700
right here the user would submit any

00:31:34,390 --> 00:31:38,649
file they didn't see anything they would

00:31:36,700 --> 00:31:42,010
just go to the index and then the job

00:31:38,649 --> 00:31:45,130
maybe would fare and they would omit

00:31:42,010 --> 00:31:46,840
they wouldn't be able to install it here

00:31:45,130 --> 00:31:49,090
we're preventing that he will just put

00:31:46,840 --> 00:31:51,039
in some sort like validation based on

00:31:49,090 --> 00:31:52,809
the content it's a very small one like

00:31:51,039 --> 00:31:54,300
let's try to open it an extractor

00:31:52,809 --> 00:31:57,060
version but it's

00:31:54,300 --> 00:31:59,940
you need to make sure that it's that

00:31:57,060 --> 00:32:01,600
file and now I don't know next Aikido

00:31:59,940 --> 00:32:04,790
girl or an image or something like that

00:32:01,600 --> 00:32:12,120
[Music]

00:32:04,790 --> 00:32:15,210
and probably much concludes my talk and

00:32:12,120 --> 00:32:17,940
there was a lot here so a couple of

00:32:15,210 --> 00:32:20,060
comments as I said that will working

00:32:17,940 --> 00:32:24,440
with active storage in different

00:32:20,060 --> 00:32:27,210
projects for the last two years if

00:32:24,440 --> 00:32:28,800
there's a lot more like the surge that I

00:32:27,210 --> 00:32:31,290
haven't talked about for instance

00:32:28,800 --> 00:32:33,050
there's a whole JavaScript component

00:32:31,290 --> 00:32:37,020
that you can use to upload files

00:32:33,050 --> 00:32:39,330
directly from your browser to s3 without

00:32:37,020 --> 00:32:42,180
going through else there's really lot

00:32:39,330 --> 00:32:44,850
more and things are always changing I

00:32:42,180 --> 00:32:47,430
showed you that VI which is opens of

00:32:44,850 --> 00:32:52,560
things have been changing from 5 to to

00:32:47,430 --> 00:32:54,300
600 and maybe to 6 1 and there are some

00:32:52,560 --> 00:32:58,740
of the methods the dimension will be you

00:32:54,300 --> 00:33:04,140
have heard of some of those but I hope

00:32:58,740 --> 00:33:06,990
you learn something and that's the time

00:33:04,140 --> 00:33:11,540
that I have but I'm happy to answer all

00:33:06,990 --> 00:33:11,540

YouTube URL: https://www.youtube.com/watch?v=e-KcnR4PnT0


