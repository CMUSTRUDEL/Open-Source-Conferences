Title: GRCon19 - Concerning Radio Hardware and Studebaker Repair by Travis Goodspeed
Publication date: 2019-11-05
Playlist: GRCon 2019
Description: 
	Concerning Radio Hardware and Studebaker Repair by Travis Goodspeed

Merchant of Dead Trees and Licensed Proselytizer of the Gospel of the Weird Machines with Pwnage, PoC, and Secular Rock.
Captions: 
	00:00:14,910 --> 00:00:19,380
today I want to talk about Studebakers

00:00:17,300 --> 00:00:21,720
for those of you who don't know the

00:00:19,380 --> 00:00:24,900
Studebaker Motor Corporation was the

00:00:21,720 --> 00:00:26,789
very last American car company in all of

00:00:24,900 --> 00:00:30,840
history pass through a future to die in

00:00:26,789 --> 00:00:33,090
honest death in December of 1963 they

00:00:30,840 --> 00:00:35,820
ceased production in America they

00:00:33,090 --> 00:00:37,920
continued manufacturing engines in South

00:00:35,820 --> 00:00:42,570
Bend Indiana as the cars moved to

00:00:37,920 --> 00:00:44,879
Hamilton Ontario Hamilton Ontario later

00:00:42,570 --> 00:00:46,859
switched to Chevy engines in an attempt

00:00:44,879 --> 00:00:52,440
to continue manufacturing the

00:00:46,859 --> 00:00:54,059
Studebakers without them so when you do

00:00:52,440 --> 00:00:55,800
an engine switchover of course you don't

00:00:54,059 --> 00:00:58,440
want the automotive union to find out in

00:00:55,800 --> 00:01:00,179
advance so they did this as a surprise

00:00:58,440 --> 00:01:02,699
and they kept manufacturing engines that

00:01:00,179 --> 00:01:03,659
they knew they wouldn't need so what do

00:01:02,699 --> 00:01:06,479
they do with the engines

00:01:03,659 --> 00:01:08,820
well they exported them all of the v8s

00:01:06,479 --> 00:01:11,460
went to South Africa and all of the v6

00:01:08,820 --> 00:01:13,380
--es went to Haifa and they continued

00:01:11,460 --> 00:01:16,050
manufacturing Israelis Studebakers until

00:01:13,380 --> 00:01:17,580
the late 60s if you happen to know where

00:01:16,050 --> 00:01:24,450
I could buy one of these please let me

00:01:17,580 --> 00:01:26,159
know so when I when I bought a car I

00:01:24,450 --> 00:01:30,360
actually started with this one this is a

00:01:26,159 --> 00:01:32,399
blue 1964 Studebaker cruiser that was

00:01:30,360 --> 00:01:33,930
manufactured in 63 it's from the very

00:01:32,399 --> 00:01:36,840
last year they did American production

00:01:33,930 --> 00:01:39,899
and it had been sitting in a basement

00:01:36,840 --> 00:01:41,369
since 1981 and if you really want to

00:01:39,899 --> 00:01:43,229
learn how your car works you should

00:01:41,369 --> 00:01:45,810
drive one that has been in a basement

00:01:43,229 --> 00:01:48,420
since 1981 because all of the rubber has

00:01:45,810 --> 00:01:49,979
collapsed on it and everything will

00:01:48,420 --> 00:01:52,649
break and in repairing that you'll

00:01:49,979 --> 00:01:54,960
understand how all of the pieces of the

00:01:52,649 --> 00:01:57,960
machine work right until you take this

00:01:54,960 --> 00:02:01,740
apart you never really understood what's

00:01:57,960 --> 00:02:05,399
inside of it the the way that it's

00:02:01,740 --> 00:02:07,859
arranged is cool to a full third of the

00:02:05,399 --> 00:02:09,390
dash is consumed by the clock because

00:02:07,859 --> 00:02:12,000
this was back in that era when they kept

00:02:09,390 --> 00:02:15,630
adding clocks to all of the the home

00:02:12,000 --> 00:02:19,620
appliances beneath the radio those fins

00:02:15,630 --> 00:02:23,879
that's the air conditioning and the the

00:02:19,620 --> 00:02:25,650
cooling unit like the the evaporator is

00:02:23,879 --> 00:02:27,330
actually right behind those and you can

00:02:25,650 --> 00:02:28,050
stick your finger in and freeze your

00:02:27,330 --> 00:02:32,670
finger

00:02:28,050 --> 00:02:34,470
on the evaporating fins and best of all

00:02:32,670 --> 00:02:36,630
they have these books they have a

00:02:34,470 --> 00:02:39,660
collected shop manual that you can buy

00:02:36,630 --> 00:02:43,310
and you know these two volumes explain

00:02:39,660 --> 00:02:45,810
everything about the series of cars of

00:02:43,310 --> 00:02:47,990
course I bought the wrong year so I had

00:02:45,810 --> 00:02:51,300
to get an updated shop manual but the

00:02:47,990 --> 00:02:53,520
you know the engine the the carburetor

00:02:51,300 --> 00:02:55,890
the brakes the power steering the air

00:02:53,520 --> 00:02:58,080
conditioning all of that is described in

00:02:55,890 --> 00:03:00,060
sufficient detail that you could repair

00:02:58,080 --> 00:03:01,620
it as it breaks and you were sort of

00:03:00,060 --> 00:03:05,720
expected to do a lot of this maintenance

00:03:01,620 --> 00:03:08,940
yourself the idea that your car was a

00:03:05,720 --> 00:03:11,610
like a sealed magical box whose lid must

00:03:08,940 --> 00:03:15,600
never be opened didn't exist at this

00:03:11,610 --> 00:03:16,950
time it's a more modern invention there

00:03:15,600 --> 00:03:19,740
are some cars that are actually designed

00:03:16,950 --> 00:03:22,530
with a fail-safe switch like nuclear

00:03:19,740 --> 00:03:25,470
missiles so that no one man can open the

00:03:22,530 --> 00:03:30,330
car in his own right you need two people

00:03:25,470 --> 00:03:32,100
to sit and they have like these straps

00:03:30,330 --> 00:03:34,260
one by the drivers left foot one by the

00:03:32,100 --> 00:03:35,910
passengers right foot and they both have

00:03:34,260 --> 00:03:37,980
to be pulled backward not in word but

00:03:35,910 --> 00:03:40,620
backward in order for the hood to pop

00:03:37,980 --> 00:03:42,239
open because if they didn't do that then

00:03:40,620 --> 00:03:43,260
you might lift the hood in your own car

00:03:42,239 --> 00:03:48,570
and see something that you're not

00:03:43,260 --> 00:03:52,800
supposed to see and this is ridiculous

00:03:48,570 --> 00:03:54,600
so I after catching a Studebaker bug on

00:03:52,800 --> 00:03:57,360
the blue one I wanted one that ran more

00:03:54,600 --> 00:04:00,930
reliably I was in Seattle visiting a

00:03:57,360 --> 00:04:03,390
buddy of mine and he found this on

00:04:00,930 --> 00:04:05,060
Craigslist and he told me that I that if

00:04:03,390 --> 00:04:07,470
I didn't buy it he was going to buy it

00:04:05,060 --> 00:04:10,050
so we both go to the bank we both

00:04:07,470 --> 00:04:12,900
withdraw the asking price and then we

00:04:10,050 --> 00:04:17,489
roadtrip down to Portland and I bought

00:04:12,900 --> 00:04:21,450
it first this is also a 1964 Studebaker

00:04:17,489 --> 00:04:24,630
cruiser also a 289 v8 engine also power

00:04:21,450 --> 00:04:27,150
steering also power brakes also disc

00:04:24,630 --> 00:04:28,919
brakes in the front this does not have

00:04:27,150 --> 00:04:31,050
the air conditioning model or the air

00:04:28,919 --> 00:04:32,370
conditioning option which I really

00:04:31,050 --> 00:04:36,150
regret because they drove it here

00:04:32,370 --> 00:04:40,470
yesterday and Alabama summers can be a

00:04:36,150 --> 00:04:41,939
little bit toasty yeah yeah that's mine

00:04:40,470 --> 00:04:45,990
out in the parking lot

00:04:41,939 --> 00:04:48,139
and there are other cool things like it

00:04:45,990 --> 00:04:50,819
turns out that if you drive a cool car

00:04:48,139 --> 00:04:52,229
cops won't pull you over for having a

00:04:50,819 --> 00:04:54,409
license plate that's fifty five years

00:04:52,229 --> 00:04:54,409
out-of-date

00:04:56,029 --> 00:05:01,889
the when I bought the blue one I had no

00:04:59,520 --> 00:05:03,559
license plate at all but like I said the

00:05:01,889 --> 00:05:06,499
rubber was starting to go on it and

00:05:03,559 --> 00:05:09,899
there's a little hose that runs the

00:05:06,499 --> 00:05:11,459
pressurized oil from the engine up to

00:05:09,899 --> 00:05:13,589
the oil pressure gauge on your dash

00:05:11,459 --> 00:05:15,330
because they didn't want to have like an

00:05:13,589 --> 00:05:16,319
electronic sensor and then forward it to

00:05:15,330 --> 00:05:18,809
the dash they actually run the

00:05:16,319 --> 00:05:19,949
pressurized oil to the dash of the car

00:05:18,809 --> 00:05:23,429
in order to tell you what the oil

00:05:19,949 --> 00:05:25,110
pressure is and when I bought the car I

00:05:23,429 --> 00:05:26,819
was warned that it had a serious oil

00:05:25,110 --> 00:05:28,110
leak that the guy hadn't identified yet

00:05:26,819 --> 00:05:32,339
and it turned out that it was that

00:05:28,110 --> 00:05:33,959
little hose so as we were driving at

00:05:32,339 --> 00:05:37,679
home from South Carolina to Tennessee

00:05:33,959 --> 00:05:40,139
there is a giant plume of blue smoke

00:05:37,679 --> 00:05:42,349
coming out behind us every time we stop

00:05:40,139 --> 00:05:46,229
for gas we'd also add a gallon of oil

00:05:42,349 --> 00:05:47,610
and thanks to this plume the police

00:05:46,229 --> 00:05:50,309
never noticed that I didn't have a

00:05:47,610 --> 00:05:52,559
license plate at all which is

00:05:50,309 --> 00:05:56,729
technically legal if you buy a car on a

00:05:52,559 --> 00:05:58,259
Sunday in South Carolina but I didn't

00:05:56,729 --> 00:06:03,059
want to have to explain that and then

00:05:58,259 --> 00:06:05,490
get the car started again and you know

00:06:03,059 --> 00:06:09,769
they clean up really well there they're

00:06:05,490 --> 00:06:12,569
fun to drive so my brother got one and

00:06:09,769 --> 00:06:14,459
his didn't have an oil pressure gauge

00:06:12,569 --> 00:06:16,919
that he trusted he wanted it to have

00:06:14,459 --> 00:06:18,629
real units so he wired this one up in

00:06:16,919 --> 00:06:20,999
the in the left and what it showed was

00:06:18,629 --> 00:06:23,309
that the engine can't keep oil pressure

00:06:20,999 --> 00:06:25,499
so the other thing that you learn with

00:06:23,309 --> 00:06:28,110
these delightful cars is that some of

00:06:25,499 --> 00:06:29,550
them are not things that you can repair

00:06:28,110 --> 00:06:32,009
anymore that there are things that are

00:06:29,550 --> 00:06:34,769
beyond you but also the things that are

00:06:32,009 --> 00:06:35,999
beyond your ability to repair are a few

00:06:34,769 --> 00:06:39,449
and far between if you're sufficiently

00:06:35,999 --> 00:06:40,829
stubborn about it I guarantee you that

00:06:39,449 --> 00:06:44,639
within five years he'll get this car

00:06:40,829 --> 00:06:47,669
running you also start to notice them in

00:06:44,639 --> 00:06:51,479
public more often this is a 62 lark that

00:06:47,669 --> 00:06:52,949
I found around Knoxville this is a rat

00:06:51,479 --> 00:06:55,949
rod that I found a few blocks away from

00:06:52,949 --> 00:06:58,259
that and then this one

00:06:55,949 --> 00:07:00,199
so the day before yesterday was

00:06:58,259 --> 00:07:05,569
International Drive year studebaker day

00:07:00,199 --> 00:07:07,949
show hands who celebrated oh come on

00:07:05,569 --> 00:07:09,329
this had been parked across the street

00:07:07,949 --> 00:07:12,629
from a friend of mine who had a

00:07:09,329 --> 00:07:14,189
housewarming party the same day and the

00:07:12,629 --> 00:07:16,289
nice thing about driving a Studebaker is

00:07:14,189 --> 00:07:18,299
that even in a place where every

00:07:16,289 --> 00:07:20,009
homeowner is armed you can still just

00:07:18,299 --> 00:07:22,349
pull into some random strangers driveway

00:07:20,009 --> 00:07:24,179
and knock on the door and as soon as

00:07:22,349 --> 00:07:27,089
they see the car they smile the guy came

00:07:24,179 --> 00:07:30,029
out showed me this this is a 62

00:07:27,089 --> 00:07:32,099
Studebaker Daytona convertible and the

00:07:30,029 --> 00:07:34,979
the top still comes down and the thing

00:07:32,099 --> 00:07:38,389
still runs a little bit of hail damage

00:07:34,979 --> 00:07:41,759
so you should Park these things indoors

00:07:38,389 --> 00:07:43,649
and again these two books described

00:07:41,759 --> 00:07:46,889
everything that you need to repair that

00:07:43,649 --> 00:07:49,169
car if the steering goes out if the

00:07:46,889 --> 00:07:51,349
brakes go out all of that is described

00:07:49,169 --> 00:07:54,989
in these books it shows you how to

00:07:51,349 --> 00:07:57,539
properly lubricate the mechanism that

00:07:54,989 --> 00:07:58,799
raises and lowers the windows so that

00:07:57,539 --> 00:08:01,139
you don't get a squeaking sound when you

00:07:58,799 --> 00:08:03,929
roll them up or down everything is in

00:08:01,139 --> 00:08:05,669
these books and you also get to learn a

00:08:03,929 --> 00:08:11,369
bit about modern technology through

00:08:05,669 --> 00:08:14,509
these things so what happened modern

00:08:11,369 --> 00:08:17,789
technology does anyone know what this is

00:08:14,509 --> 00:08:21,539
yeah yell it out all right what kind of

00:08:17,789 --> 00:08:23,479
distributor yell it out all right

00:08:21,539 --> 00:08:26,609
Skylar cheated but it is a Hall effect

00:08:23,479 --> 00:08:29,849
distributor so the original distributism

00:08:26,609 --> 00:08:31,289
these things had points a point is a

00:08:29,849 --> 00:08:32,309
piece of metal that sticks up and

00:08:31,289 --> 00:08:35,550
there's another piece of metal that

00:08:32,309 --> 00:08:38,339
swings by and hits it and when it hits

00:08:35,550 --> 00:08:40,469
it it connects the circuit which allows

00:08:38,339 --> 00:08:45,449
the high-voltage from the ignition coil

00:08:40,469 --> 00:08:47,610
to run to the spark plug and this is

00:08:45,449 --> 00:08:51,209
great because it lets you car run but

00:08:47,610 --> 00:08:54,240
this is bad in other ways because well

00:08:51,209 --> 00:08:56,220
first of all there's also a small spark

00:08:54,240 --> 00:08:59,399
here even as there's a longer spark

00:08:56,220 --> 00:09:03,329
inside of the engine and that that small

00:08:59,399 --> 00:09:05,250
spark limits the voltage that your

00:09:03,329 --> 00:09:07,439
ignition coil can use because if your

00:09:05,250 --> 00:09:09,270
ignition coil is higher voltage then you

00:09:07,439 --> 00:09:12,590
wind up with two long sparks

00:09:09,270 --> 00:09:15,660
and your distributor wears down faster

00:09:12,590 --> 00:09:18,870
so they managed to recreate this using

00:09:15,660 --> 00:09:21,330
Hall effect transistors in a magnet so

00:09:18,870 --> 00:09:24,000
that as it spins the transistor conducts

00:09:21,330 --> 00:09:26,400
there is no spark and your voltage can

00:09:24,000 --> 00:09:28,260
be a lot higher because there's no spark

00:09:26,400 --> 00:09:33,600
outside of the engine you then have a

00:09:28,260 --> 00:09:35,670
single point of ignition and you can rip

00:09:33,600 --> 00:09:38,730
a distributor out of your old engine and

00:09:35,670 --> 00:09:39,960
you can upgrade it this way it did freak

00:09:38,730 --> 00:09:41,960
me out a little bit that I went from a

00:09:39,960 --> 00:09:44,970
car with five transistors to one with 13

00:09:41,960 --> 00:09:48,720
but I'm coming to terms with modern

00:09:44,970 --> 00:09:50,580
technology but we're here today to talk

00:09:48,720 --> 00:09:54,990
about radios not about cars however

00:09:50,580 --> 00:09:56,220
beautiful they might be or how ugly they

00:09:54,990 --> 00:09:57,960
might be in the modern day when you

00:09:56,220 --> 00:10:01,040
can't tell the difference between a

00:09:57,960 --> 00:10:03,330
Skoda and Toyota

00:10:01,040 --> 00:10:06,720
did any of you assemble these kits as

00:10:03,330 --> 00:10:09,360
kids yeah all right cool

00:10:06,720 --> 00:10:13,050
so the way that these work is that it's

00:10:09,360 --> 00:10:15,390
got the schematic diagram on the PCB and

00:10:13,050 --> 00:10:18,840
you just sort of fill in the part where

00:10:15,390 --> 00:10:20,490
it tells you to put the part so c3 is a

00:10:18,840 --> 00:10:22,250
capacitor you just sort of stick that in

00:10:20,490 --> 00:10:25,320
you solder it from the other side and

00:10:22,250 --> 00:10:31,860
the instructions are a part of the PCB

00:10:25,320 --> 00:10:33,420
so it's sort of hard to get lost and you

00:10:31,860 --> 00:10:35,970
know when you tell someone that you

00:10:33,420 --> 00:10:36,630
built a radio as a kid that was really

00:10:35,970 --> 00:10:38,400
impressive

00:10:36,630 --> 00:10:41,880
until they see that it's board and

00:10:38,400 --> 00:10:44,040
you're effectively painting by number so

00:10:41,880 --> 00:10:45,870
this was the first radio that I made

00:10:44,040 --> 00:10:47,850
more than a thousand of this was the

00:10:45,870 --> 00:10:51,690
badge from the next Hope conference in

00:10:47,850 --> 00:10:55,950
New York this uses an msp430

00:10:51,690 --> 00:10:59,670
microcontroller and in NRF 24 l 0 1 plus

00:10:55,950 --> 00:11:01,590
radio and the NRF radio is cooled

00:10:59,670 --> 00:11:06,390
because it's also used in Microsoft

00:11:01,590 --> 00:11:08,100
wireless keyboards the radio isn't

00:11:06,390 --> 00:11:10,350
supposed to have a promiscuous mode but

00:11:08,100 --> 00:11:13,380
I found a test setting that allowed me

00:11:10,350 --> 00:11:16,890
to create one so I was able to listen to

00:11:13,380 --> 00:11:22,389
keyboard traffic as a software patch to

00:11:16,890 --> 00:11:24,860
these conference badges now

00:11:22,389 --> 00:11:26,209
like by one way of thinking these are

00:11:24,860 --> 00:11:27,860
very different things this is like

00:11:26,209 --> 00:11:29,240
paint-by-number and you're just sort of

00:11:27,860 --> 00:11:32,630
like putting the components where you're

00:11:29,240 --> 00:11:34,009
told to and then this is modern

00:11:32,630 --> 00:11:36,829
electronics right this is a

00:11:34,009 --> 00:11:39,730
sophisticated surface mount design this

00:11:36,829 --> 00:11:42,620
has all the things in the right place

00:11:39,730 --> 00:11:43,970
until you realize that the manufacturers

00:11:42,620 --> 00:11:45,259
helpfully provide you with reference

00:11:43,970 --> 00:11:49,310
designs to tell you where the hell to

00:11:45,259 --> 00:11:51,319
stick everything so a lot of these

00:11:49,310 --> 00:11:53,120
things that look like there's magic

00:11:51,319 --> 00:11:55,130
behind them are things that the

00:11:53,120 --> 00:11:57,860
component manufacturers will helpfully

00:11:55,130 --> 00:12:00,470
teach you how to do you can sort of grab

00:11:57,860 --> 00:12:02,600
a shop manual for it if you don't want

00:12:00,470 --> 00:12:05,199
to solder much you can grab these

00:12:02,600 --> 00:12:08,420
pre-built radios everywhere every

00:12:05,199 --> 00:12:10,610
manufacturer of a chip also has some

00:12:08,420 --> 00:12:13,910
cheap little board that you can buy this

00:12:10,610 --> 00:12:16,339
is a an AVR of feather wing from

00:12:13,910 --> 00:12:18,079
Adafruit alright you go an Adafruit you

00:12:16,339 --> 00:12:20,630
grab one of these you attach it to an

00:12:18,079 --> 00:12:22,910
antenna and you have a radio you also

00:12:20,630 --> 00:12:26,000
attach it to a power supply and you have

00:12:22,910 --> 00:12:29,810
an unattended repeater you can send out

00:12:26,000 --> 00:12:32,149
a beacon from a rooftop this was

00:12:29,810 --> 00:12:35,000
repeating Laura packets in Philadelphia

00:12:32,149 --> 00:12:39,139
and I never took it down when I moved so

00:12:35,000 --> 00:12:42,350
as far as I know there's still a small

00:12:39,139 --> 00:12:46,639
area network running in West Philly and

00:12:42,350 --> 00:12:49,009
you learn things by doing these

00:12:46,639 --> 00:12:51,819
practical little kits just as much as

00:12:49,009 --> 00:12:55,730
you do when you do things in bulk the

00:12:51,819 --> 00:13:00,050
you know from from this configuration I

00:12:55,730 --> 00:13:03,589
learned that the that the 433 megahertz

00:13:00,050 --> 00:13:09,829
is M band is crowded as hell right I

00:13:03,589 --> 00:13:14,019
also learned that the the AVR is a lot

00:13:09,829 --> 00:13:19,360
nicer about suffering a bad power supply

00:13:14,019 --> 00:13:21,649
than the arm microcontrollers are so

00:13:19,360 --> 00:13:26,540
this particular station was originally

00:13:21,649 --> 00:13:29,180
made with an arm cortex-m 0 and I had

00:13:26,540 --> 00:13:32,139
this problem that during the winter

00:13:29,180 --> 00:13:34,880
there isn't that much direct sunlight

00:13:32,139 --> 00:13:36,110
you've heard from the prophetic TV show

00:13:34,880 --> 00:13:39,950
that it's always sunny in philadelphia

00:13:36,110 --> 00:13:41,570
but this is a lie and when the when you

00:13:39,950 --> 00:13:42,500
have four or five days without direct

00:13:41,570 --> 00:13:45,410
sunshine

00:13:42,500 --> 00:13:51,100
you can watch the graph of the available

00:13:45,410 --> 00:13:55,010
voltage just crash down to nothing the

00:13:51,100 --> 00:13:56,870
when that happens you know ideally the

00:13:55,010 --> 00:13:59,510
next day will be sunny and your

00:13:56,870 --> 00:14:03,829
equipment should come back up and what

00:13:59,510 --> 00:14:07,190
you find is that the arm chips from

00:14:03,829 --> 00:14:08,990
Atmel they're the cortex m0 series they

00:14:07,190 --> 00:14:12,110
will get stuck in the bootloader and

00:14:08,990 --> 00:14:14,269
they will never continue further because

00:14:12,110 --> 00:14:17,870
as they glitch out trying to turn the

00:14:14,269 --> 00:14:21,230
LED on from insufficient power supply

00:14:17,870 --> 00:14:22,910
that is rising they stay in that

00:14:21,230 --> 00:14:24,529
bootloader state thinking that you're

00:14:22,910 --> 00:14:28,399
trying to recover them by mashing the

00:14:24,529 --> 00:14:30,829
reset button whereas the AVR s have a

00:14:28,399 --> 00:14:33,730
timeout they figured that if you're not

00:14:30,829 --> 00:14:36,140
using the bootloader within four or five

00:14:33,730 --> 00:14:38,750
seconds that you're not intending to use

00:14:36,140 --> 00:14:42,430
the bootloader and they continue on and

00:14:38,750 --> 00:14:45,589
boot the main application so you can

00:14:42,430 --> 00:14:48,709
build these standalone repeaters using a

00:14:45,589 --> 00:14:51,260
cheap Arduino hardware Arduino software

00:14:48,709 --> 00:14:54,440
but your choice of components still

00:14:51,260 --> 00:14:56,600
matters what pieces are under the hood

00:14:54,440 --> 00:14:58,430
what what's running in the mask ROM of

00:14:56,600 --> 00:15:00,829
your microcontroller will determine

00:14:58,430 --> 00:15:06,019
whether this lasts for a month or four

00:15:00,829 --> 00:15:08,480
years this is also why you should get

00:15:06,019 --> 00:15:10,370
into ham radio even if you don't intend

00:15:08,480 --> 00:15:17,420
to spend your days talking about

00:15:10,370 --> 00:15:21,860
diabetes on the local repeaters because

00:15:17,420 --> 00:15:23,720
the you know for for all of the the

00:15:21,860 --> 00:15:27,560
jokes that you can make about the ham

00:15:23,720 --> 00:15:30,980
community fewer than 85% of which are

00:15:27,560 --> 00:15:33,050
deserved the the things that you learn

00:15:30,980 --> 00:15:35,060
by actually installing an antenna and

00:15:33,050 --> 00:15:37,070
setting up a station and then keeping

00:15:35,060 --> 00:15:40,040
reliable communications running from it

00:15:37,070 --> 00:15:41,899
our things that would be useful to you

00:15:40,040 --> 00:15:43,339
as you're doing software-defined radio

00:15:41,899 --> 00:15:45,829
where as you're doing other projects

00:15:43,339 --> 00:15:49,910
even if they're unrelated to the ham

00:15:45,829 --> 00:15:53,540
radio bands or licensing so this

00:15:49,910 --> 00:15:55,990
Kent and the Studebaker is a dual-band

00:15:53,540 --> 00:15:59,060
nmo mount that we installed we ran the

00:15:55,990 --> 00:16:00,770
the cable underneath the carpets it's

00:15:59,060 --> 00:16:01,490
just perfectly blended into the

00:16:00,770 --> 00:16:04,610
upholstery

00:16:01,490 --> 00:16:07,400
comes out in the passenger footwell we

00:16:04,610 --> 00:16:11,390
mounted the control for the the Kenwood

00:16:07,400 --> 00:16:14,930
radio on the ashtray so that we could do

00:16:11,390 --> 00:16:16,610
it without marring the dashboard we also

00:16:14,930 --> 00:16:18,950
installed one in my blue Studebaker and

00:16:16,610 --> 00:16:21,020
as as my brother's Studebakers begin

00:16:18,950 --> 00:16:25,670
running we're going to hook them up get

00:16:21,020 --> 00:16:26,960
him a license so the when you're playing

00:16:25,670 --> 00:16:29,060
around with these projects you shouldn't

00:16:26,960 --> 00:16:32,500
really be concerned with whether the

00:16:29,060 --> 00:16:36,260
individual project is sophisticated or

00:16:32,500 --> 00:16:37,670
like at a hobby grade because one easily

00:16:36,260 --> 00:16:40,040
leads to the other and teaches you

00:16:37,670 --> 00:16:43,370
things to go back and forth as I'm

00:16:40,040 --> 00:16:45,470
making devices that are professionally

00:16:43,370 --> 00:16:49,070
as I'm making electronics that I intend

00:16:45,470 --> 00:16:50,540
to do commercially or an high-volume you

00:16:49,070 --> 00:16:52,310
know I'm sure as going to test

00:16:50,540 --> 00:16:54,830
those bootloaders to see what happens to

00:16:52,310 --> 00:16:58,160
them when a weak power supply has a

00:16:54,830 --> 00:17:02,000
rising voltage because I've seen how

00:16:58,160 --> 00:17:06,140
difficult it is to get at Mel's cortex

00:17:02,000 --> 00:17:09,620
and zero series running reliably in my

00:17:06,140 --> 00:17:11,540
rooftop repeater even in Arduino code

00:17:09,620 --> 00:17:13,990
that same bug is going to crop up in

00:17:11,540 --> 00:17:17,000
more professional devices

00:17:13,990 --> 00:17:20,450
I'm also rather impressed at the design

00:17:17,000 --> 00:17:21,710
decision on the AVR side to fall through

00:17:20,450 --> 00:17:23,210
the bootloader and begin running the

00:17:21,710 --> 00:17:29,090
main application if it looks like it's

00:17:23,210 --> 00:17:31,120
doing the wrong thing so do any of you

00:17:29,090 --> 00:17:34,070
remember this device it came out like

00:17:31,120 --> 00:17:35,510
2008 believe it was announced at the TI

00:17:34,070 --> 00:17:37,700
Developers Conference but it might have

00:17:35,510 --> 00:17:41,390
come out of year earlier this is the TI

00:17:37,700 --> 00:17:42,700
a Chronos watch and with the rest of my

00:17:41,390 --> 00:17:46,240
time I'd like to share with you a

00:17:42,700 --> 00:17:50,530
project that I've built as a sort of

00:17:46,240 --> 00:17:55,280
modern rewrite of this reference design

00:17:50,530 --> 00:17:58,880
so this watch contains a 70 centimeter

00:17:55,280 --> 00:18:00,250
or 33 centimeter radio as well as an

00:17:58,880 --> 00:18:02,890
antenna

00:18:00,250 --> 00:18:04,930
it runs on a

00:18:02,890 --> 00:18:08,470
coin cell battery it has an msp430

00:18:04,930 --> 00:18:10,630
microcontroller in it there are a couple

00:18:08,470 --> 00:18:15,790
of problems with it though it's very

00:18:10,630 --> 00:18:17,260
uncomfortable like I know a lot of radio

00:18:15,790 --> 00:18:18,790
folks who were really keen to play with

00:18:17,260 --> 00:18:20,380
these things and they got one and they

00:18:18,790 --> 00:18:22,320
couldn't for the life of them continue

00:18:20,380 --> 00:18:26,290
wearing the thing because it was so

00:18:22,320 --> 00:18:29,050
awful like the the band will catch sweat

00:18:26,290 --> 00:18:30,160
inside of it and then it sort of squirts

00:18:29,050 --> 00:18:36,850
out like a squirt gun in the summer

00:18:30,160 --> 00:18:38,080
because it has no way to dry the as

00:18:36,850 --> 00:18:41,680
these were initially manufactured

00:18:38,080 --> 00:18:43,420
there's a bug in the real-time clock and

00:18:41,680 --> 00:18:44,710
because of that bug they couldn't keep

00:18:43,420 --> 00:18:49,330
accurate time and you couldn't

00:18:44,710 --> 00:18:51,700
accurately set the time but this is a

00:18:49,330 --> 00:18:55,840
particularly malicious bug this bug only

00:18:51,700 --> 00:18:57,520
crops up by not the least significant

00:18:55,840 --> 00:19:00,460
couple of bits but a little a few bits

00:18:57,520 --> 00:19:04,960
higher of the program counter address at

00:19:00,460 --> 00:19:06,550
the moment that the clock is updated so

00:19:04,960 --> 00:19:09,850
when you've got your linker script

00:19:06,550 --> 00:19:12,700
that's putting your your time modulator

00:19:09,850 --> 00:19:15,550
in the in the design as you're compiling

00:19:12,700 --> 00:19:18,970
your firmware any change in code prior

00:19:15,550 --> 00:19:19,990
to that will hide the bug by changing

00:19:18,970 --> 00:19:20,590
the alignment so that you don't hit it

00:19:19,990 --> 00:19:23,050
anymore

00:19:20,590 --> 00:19:25,000
so no matter what you change you think

00:19:23,050 --> 00:19:30,820
that you fixed the bug until the next

00:19:25,000 --> 00:19:33,520
time it crops up and the programming

00:19:30,820 --> 00:19:35,890
modules to this required that you take

00:19:33,520 --> 00:19:40,270
the watch out of the case and then

00:19:35,890 --> 00:19:42,310
attach it to the programming board or

00:19:40,270 --> 00:19:44,680
risk doing an over-the-air update

00:19:42,310 --> 00:19:47,380
through a special radio bootloader

00:19:44,680 --> 00:19:49,960
so became very hard to write software

00:19:47,380 --> 00:19:52,060
for this experimentally you had to sort

00:19:49,960 --> 00:19:56,260
of have all of the code working and then

00:19:52,060 --> 00:20:00,340
poured it over so I came up with this

00:19:56,260 --> 00:20:04,750
which is a clone of kasia's 3208 watch

00:20:00,340 --> 00:20:09,700
module that i call the good watch this

00:20:04,750 --> 00:20:16,090
uses the same chip con 430 RF chip that

00:20:09,700 --> 00:20:18,580
the the chrono swatch used a

00:20:16,090 --> 00:20:20,950
that it fits within a comfortable

00:20:18,580 --> 00:20:22,540
commercial case so you can wear it all

00:20:20,950 --> 00:20:27,460
day long you can have like a proper band

00:20:22,540 --> 00:20:28,900
attached the way that you do this is you

00:20:27,460 --> 00:20:32,080
begin by figuring out how the original

00:20:28,900 --> 00:20:33,850
worked so if your module is going to fit

00:20:32,080 --> 00:20:35,710
where there's is if you're copying a

00:20:33,850 --> 00:20:37,960
commercial product as a reference design

00:20:35,710 --> 00:20:39,430
you begin by measuring the board and

00:20:37,960 --> 00:20:43,180
then sort of sketching out the

00:20:39,430 --> 00:20:46,990
mechanical dimensions where each part

00:20:43,180 --> 00:20:50,260
goes and then you can draft up a sort of

00:20:46,990 --> 00:20:52,630
testing board this lacks any Radio

00:20:50,260 --> 00:20:55,840
components the only purpose of this

00:20:52,630 --> 00:20:59,650
revision of the board is to tell when

00:20:55,840 --> 00:21:02,110
the to sorry to verify that the LCD pins

00:20:59,650 --> 00:21:06,730
are connected correctly and the buttons

00:21:02,110 --> 00:21:11,020
and the power the chip used in this is

00:21:06,730 --> 00:21:14,680
the chip con 430 f6 137 you've got 32 K

00:21:11,020 --> 00:21:16,330
of flash for K of SRAM it's got 96

00:21:14,680 --> 00:21:18,880
segment LCD controller which is not

00:21:16,330 --> 00:21:22,050
quite as many segments as the watch

00:21:18,880 --> 00:21:25,570
physically has so you sort of have to

00:21:22,050 --> 00:21:27,610
figure out how to make it fit it has the

00:21:25,570 --> 00:21:28,990
sub gigahertz radio and it has a

00:21:27,610 --> 00:21:31,390
bootloader ROM that allows you to

00:21:28,990 --> 00:21:33,310
program it over a serial port so that

00:21:31,390 --> 00:21:39,060
you don't necessarily need to have a

00:21:33,310 --> 00:21:45,640
JTAG adapter in order to program it the

00:21:39,060 --> 00:21:48,250
the LCD was reverse engineered by taking

00:21:45,640 --> 00:21:50,320
the original LCD no I I don't have as

00:21:48,250 --> 00:21:53,200
many pins as they have but in the

00:21:50,320 --> 00:21:55,690
datasheet for my chip I'm told that the

00:21:53,200 --> 00:21:58,300
control lines go here and the segment

00:21:55,690 --> 00:22:00,160
lines go over there the control lines

00:21:58,300 --> 00:22:03,280
there are four of them they sort of

00:22:00,160 --> 00:22:06,430
wiggle with an AC signal as the segment

00:22:03,280 --> 00:22:09,550
lines are running in order to form an

00:22:06,430 --> 00:22:10,870
array for each pixel so the way that you

00:22:09,550 --> 00:22:13,120
figure out which ones you can safely

00:22:10,870 --> 00:22:15,910
ignore is that you open up your old

00:22:13,120 --> 00:22:17,890
watch as shown here on the right and you

00:22:15,910 --> 00:22:19,930
put sticky notes over the pins that you

00:22:17,890 --> 00:22:21,580
don't quite have enough to manage and

00:22:19,930 --> 00:22:24,220
then you put the original board back

00:22:21,580 --> 00:22:26,910
into the case and you watch which

00:22:24,220 --> 00:22:26,910
segments die

00:22:27,370 --> 00:22:37,010
so this being like my view from my own

00:22:33,620 --> 00:22:40,070
CAD software which has the same layout

00:22:37,010 --> 00:22:44,330
for the LCD as the original I just sort

00:22:40,070 --> 00:22:46,720
of cover up the the far four pins on the

00:22:44,330 --> 00:22:49,640
left those are all of the control lines

00:22:46,720 --> 00:22:51,980
when I do that all of the pixels on the

00:22:49,640 --> 00:22:55,580
LCD die off because every segment needs

00:22:51,980 --> 00:22:57,440
to be balanced against a control pin the

00:22:55,580 --> 00:23:01,760
same effect could be had if you block

00:22:57,440 --> 00:23:03,830
off all of the segment pins so then

00:23:01,760 --> 00:23:06,230
again you know causing selective

00:23:03,830 --> 00:23:10,430
failures in order to know which pins are

00:23:06,230 --> 00:23:15,470
safe to not connect if I block off this

00:23:10,430 --> 00:23:17,630
pin 1/4 of the pixels die and if I need

00:23:15,470 --> 00:23:19,220
all of those or if I need any of those

00:23:17,630 --> 00:23:21,800
then that's not a pin that I can safely

00:23:19,220 --> 00:23:23,480
disconnect I then move my little piece

00:23:21,800 --> 00:23:24,860
of sticky note over to the right and

00:23:23,480 --> 00:23:27,620
plug it back in to see what's failed a

00:23:24,860 --> 00:23:30,380
second time and a third and a fourth and

00:23:27,620 --> 00:23:31,910
when I do it this fourth time I find

00:23:30,380 --> 00:23:33,950
that the fourth control pin is not

00:23:31,910 --> 00:23:37,270
actually necessary and then I can run

00:23:33,950 --> 00:23:37,270
the LCD and only three of them

00:23:39,880 --> 00:23:43,820
eventually I found that with these

00:23:42,050 --> 00:23:47,000
sticky notes in the configuration on the

00:23:43,820 --> 00:23:50,540
right I have blocked off a couple of the

00:23:47,000 --> 00:23:52,040
pins that I would like to have but that

00:23:50,540 --> 00:23:53,780
are not strictly necessary and that

00:23:52,040 --> 00:23:55,880
means that I can successfully drive the

00:23:53,780 --> 00:23:57,230
display if I couldn't have driven the

00:23:55,880 --> 00:23:59,960
display I would have had to choose a

00:23:57,230 --> 00:24:05,150
different watch casing a different LCD

00:23:59,960 --> 00:24:08,030
or a different microcontroller and by

00:24:05,150 --> 00:24:11,210
this trick you can figure all of the

00:24:08,030 --> 00:24:13,730
effects of the LCD out from the original

00:24:11,210 --> 00:24:16,730
hardware before you actually lay out

00:24:13,730 --> 00:24:18,230
your own circuit board now after you've

00:24:16,730 --> 00:24:21,290
laid it out you need to write a driver

00:24:18,230 --> 00:24:23,570
for it just like the paint-by-numbers

00:24:21,290 --> 00:24:26,630
radio design the chip manufacturer

00:24:23,570 --> 00:24:28,520
provides you with code examples for how

00:24:26,630 --> 00:24:32,870
to turn the LCD on for how to adjust the

00:24:28,520 --> 00:24:35,650
contrast and for how to control the

00:24:32,870 --> 00:24:35,650
individual segments

00:24:37,600 --> 00:24:44,200
and in this photograph here I've lit

00:24:41,230 --> 00:24:46,960
every pixel that I can light up and then

00:24:44,200 --> 00:24:49,300
this provides me with a map of every

00:24:46,960 --> 00:24:56,020
pixel that I need to support within my

00:24:49,300 --> 00:24:58,690
LCD driver which becomes as simple as C

00:24:56,020 --> 00:25:01,810
preprocessor definitions that write to

00:24:58,690 --> 00:25:03,790
memory mapped i/o addresses in order to

00:25:01,810 --> 00:25:06,700
flip those pixels on or turn them off

00:25:03,790 --> 00:25:08,650
the chip even supports double buffering

00:25:06,700 --> 00:25:10,690
so you've got two LCD buffers and you

00:25:08,650 --> 00:25:12,970
can flip back and forth between them in

00:25:10,690 --> 00:25:17,320
order to do passive or background

00:25:12,970 --> 00:25:22,470
animations I then come up with a mapping

00:25:17,320 --> 00:25:34,630
that goes from the the physical position

00:25:22,470 --> 00:25:36,520
to the eye you know sorry I lost my lost

00:25:34,630 --> 00:25:40,630
my thread I then come up with a mapping

00:25:36,520 --> 00:25:43,150
that produces the the combination of

00:25:40,630 --> 00:25:44,830
pins the the offset into the buffer and

00:25:43,150 --> 00:25:48,550
then the bit that needs to be set in

00:25:44,830 --> 00:25:52,450
order to flick on an LCD segment so that

00:25:48,550 --> 00:25:56,200
I can go directly from a character or a

00:25:52,450 --> 00:25:59,500
byte into seeing that on the display in

00:25:56,200 --> 00:26:01,270
the given position so here we've got as

00:25:59,500 --> 00:26:05,260
each row we have one of the eight

00:26:01,270 --> 00:26:09,460
segments of the digit and then sorry

00:26:05,260 --> 00:26:12,130
each row is a digit and then each column

00:26:09,460 --> 00:26:14,320
is the segment of that digit so the a

00:26:12,130 --> 00:26:16,840
segments are all in that far left column

00:26:14,320 --> 00:26:22,630
the decimal points are all on the far

00:26:16,840 --> 00:26:27,720
right the software can then be composed

00:26:22,630 --> 00:26:33,940
using a regular C compiler the msp430

00:26:27,720 --> 00:26:36,880
GCC compiler is routed into the to

00:26:33,940 --> 00:26:38,050
produce a link to image which gets

00:26:36,880 --> 00:26:39,280
loaded into the board just like you

00:26:38,050 --> 00:26:45,310
would load in any other development

00:26:39,280 --> 00:26:47,770
board the the key matrix is arranged

00:26:45,310 --> 00:26:49,350
just like in any other cheap electronics

00:26:47,770 --> 00:26:52,289
device just like the the pink

00:26:49,350 --> 00:26:54,299
from years ago you've got rows and you

00:26:52,289 --> 00:26:59,090
have columns and by pushing a button you

00:26:54,299 --> 00:27:04,410
are connecting a row to a column so each

00:26:59,090 --> 00:27:07,530
each i/o port I are for 2.3 2.4 or 2.5

00:27:04,410 --> 00:27:10,799
2.6 those are all GPIO pins on the

00:27:07,530 --> 00:27:14,970
microcontroller which then run out to a

00:27:10,799 --> 00:27:16,860
particular row in the matrix and when

00:27:14,970 --> 00:27:19,410
you see that one GPIO pin is connected

00:27:16,860 --> 00:27:23,299
to another that's a key press that you

00:27:19,410 --> 00:27:23,299
can then report to the software library

00:27:23,330 --> 00:27:31,409
and you do this through a map in which

00:27:27,830 --> 00:27:32,580
the low byte of the 16-bit word is the

00:27:31,409 --> 00:27:35,100
actual character that needs to be

00:27:32,580 --> 00:27:39,179
returned and the high byte of the 16-bit

00:27:35,100 --> 00:27:40,620
word is the the key scan code which

00:27:39,179 --> 00:27:45,049
tells you which pin was connected to

00:27:40,620 --> 00:27:47,760
each other you also need to take care of

00:27:45,049 --> 00:27:49,140
your power consumption when you're

00:27:47,760 --> 00:27:52,140
developing something like this because

00:27:49,140 --> 00:27:55,470
if you have a watch his battery dies in

00:27:52,140 --> 00:27:58,049
days or weeks then it winds up in a

00:27:55,470 --> 00:27:59,400
drawer until it can be recharged what

00:27:58,049 --> 00:28:03,320
you'd really like is to be able to copy

00:27:59,400 --> 00:28:05,340
the manufacturer's original lifetime

00:28:03,320 --> 00:28:08,150
actually show hands how many of you

00:28:05,340 --> 00:28:15,150
recharge your watch every day

00:28:08,150 --> 00:28:18,750
okay so Ti makes an energy trace JTAG

00:28:15,150 --> 00:28:21,809
programmer that allows you to sort of

00:28:18,750 --> 00:28:23,340
like run your code and then also record

00:28:21,809 --> 00:28:27,000
how much current consumption the chip

00:28:23,340 --> 00:28:29,340
had for each step of your code and from

00:28:27,000 --> 00:28:32,549
this I found that if I ran the chip at

00:28:29,340 --> 00:28:37,169
32 kilohertz it consumed about 5 micro

00:28:32,549 --> 00:28:39,480
amps this jumps to 160 when the chip is

00:28:37,169 --> 00:28:42,000
running at 1 megahertz and if I run it

00:28:39,480 --> 00:28:43,470
at 1 megahertz just for the time that I

00:28:42,000 --> 00:28:44,909
need to update the display and then

00:28:43,470 --> 00:28:46,890
immediately go back to sleep until the

00:28:44,909 --> 00:28:49,200
next interrupt I can drop this to 3

00:28:46,890 --> 00:28:50,700
micro amps which gives me three years of

00:28:49,200 --> 00:28:54,120
battery life on the original coin cell

00:28:50,700 --> 00:28:56,159
from the watch so you can fit it insane

00:28:54,120 --> 00:28:59,940
power budgets if you just take the time

00:28:56,159 --> 00:29:02,470
to measure the power consumption of the

00:28:59,940 --> 00:29:05,900
device that you're programming

00:29:02,470 --> 00:29:07,250
you can also do applications for these

00:29:05,900 --> 00:29:11,480
things so I have a reverse polish

00:29:07,250 --> 00:29:14,799
notation calculator which runs using the

00:29:11,480 --> 00:29:19,429
regular display the regular inputs I

00:29:14,799 --> 00:29:22,220
have an alarm so that it can wake me up

00:29:19,429 --> 00:29:24,740
in the morning it also the alarm beeps

00:29:22,220 --> 00:29:30,320
out in Morse code so that you can hear

00:29:24,740 --> 00:29:32,720
the time even in the dark there's a hex

00:29:30,320 --> 00:29:34,070
editor and a hex editor is cooled

00:29:32,720 --> 00:29:37,240
because often when you're designing

00:29:34,070 --> 00:29:40,039
something like this it will fail and

00:29:37,240 --> 00:29:42,649
you'll need to diagnose it on the

00:29:40,039 --> 00:29:47,090
individual device without connecting it

00:29:42,649 --> 00:29:50,510
to test hardware so I was I was in

00:29:47,090 --> 00:29:52,880
Budapest and my watch started showing

00:29:50,510 --> 00:29:57,950
the wrong time it began to lose minutes

00:29:52,880 --> 00:30:00,110
per day and I didn't know why so using

00:29:57,950 --> 00:30:01,580
the hex editor and the datasheet the

00:30:00,110 --> 00:30:05,539
datasheet shown in the background this

00:30:01,580 --> 00:30:08,510
is from the CC 4:30 family guide which

00:30:05,539 --> 00:30:10,250
provides you with every register in this

00:30:08,510 --> 00:30:14,809
chip and its function and what the bit

00:30:10,250 --> 00:30:18,020
fields mean all of them from there I

00:30:14,809 --> 00:30:21,409
found the register that should contain

00:30:18,020 --> 00:30:24,710
the error code of the real-time clock

00:30:21,409 --> 00:30:27,140
and I took my watch and I went to that

00:30:24,710 --> 00:30:30,679
address and I found that the real time

00:30:27,140 --> 00:30:32,659
clock had no error code set so I started

00:30:30,679 --> 00:30:35,000
hunting around in the i/o region of

00:30:32,659 --> 00:30:37,309
memory until I found one word that was

00:30:35,000 --> 00:30:39,860
different between the working watch on

00:30:37,309 --> 00:30:44,750
the left and the inaccurate watch on the

00:30:39,860 --> 00:30:46,940
right until I found that at 0 1 6e one

00:30:44,750 --> 00:30:49,760
of them had the value o 400 and the

00:30:46,940 --> 00:30:52,760
other had the value o 402 so I could

00:30:49,760 --> 00:30:54,770
look up what the twos bit meant in order

00:30:52,760 --> 00:30:57,230
to see what the difference was and it

00:30:54,770 --> 00:31:00,380
turns out that this was a failure in the

00:30:57,230 --> 00:31:02,360
low frequency oscillator on this device

00:31:00,380 --> 00:31:06,230
when the low frequency crystal that is

00:31:02,360 --> 00:31:08,960
used for timekeeping fails a resistor

00:31:06,230 --> 00:31:12,049
capacitor oscillator is immediately

00:31:08,960 --> 00:31:13,909
substituted by the hardware so that your

00:31:12,049 --> 00:31:16,090
clock doesn't stop it just becomes

00:31:13,909 --> 00:31:18,559
inaccurate as it fails

00:31:16,090 --> 00:31:19,909
knowingness I could add software support

00:31:18,559 --> 00:31:22,700
but thanks to the hex editor I was able

00:31:19,909 --> 00:31:25,850
to find the initial problem internally

00:31:22,700 --> 00:31:31,789
and without having to resort to outside

00:31:25,850 --> 00:31:33,470
test equipment there's also a power-on

00:31:31,789 --> 00:31:35,570
self-test which could be handy but again

00:31:33,470 --> 00:31:39,679
we're here to talk about radios not

00:31:35,570 --> 00:31:42,320
about Studebakers so the the radio in

00:31:39,679 --> 00:31:43,669
this device can handle three hundred to

00:31:42,320 --> 00:31:47,030
three hundred forty eight megahertz is a

00:31:43,669 --> 00:31:50,080
lobe and it's got 389 to 464 and middle

00:31:47,030 --> 00:31:51,650
and then at the high end it'll do 779 to

00:31:50,080 --> 00:31:54,230
928 megahertz

00:31:51,650 --> 00:31:57,200
my initial version was Hardware filtered

00:31:54,230 --> 00:31:59,750
to do 430 to 435 as a way to simplify

00:31:57,200 --> 00:32:01,159
the design getting it working on one

00:31:59,750 --> 00:32:04,940
frequency before worrying about the

00:32:01,159 --> 00:32:08,440
others this is the janky Estelle tena I

00:32:04,940 --> 00:32:11,750
have ever manufactured in my entire life

00:32:08,440 --> 00:32:13,820
I'm so desperate to replace this that

00:32:11,750 --> 00:32:18,230
I'm learning how to make jewelry out of

00:32:13,820 --> 00:32:20,510
silver wires the the green wire comes

00:32:18,230 --> 00:32:22,640
out of the watch casing and connects the

00:32:20,510 --> 00:32:26,150
stainless steel watch band as a random

00:32:22,640 --> 00:32:29,419
wire antenna to the chip con 430 device

00:32:26,150 --> 00:32:32,030
inside of the watch casing this is not a

00:32:29,419 --> 00:32:34,940
good antenna but you don't need a great

00:32:32,030 --> 00:32:38,090
antenna you just need something to get

00:32:34,940 --> 00:32:41,090
you on the air and this watchman antenna

00:32:38,090 --> 00:32:43,789
is more than good enough to get a signal

00:32:41,090 --> 00:32:46,280
from my watch as I'm sitting on my couch

00:32:43,789 --> 00:32:49,250
to my doorbell receiver on the far side

00:32:46,280 --> 00:32:50,960
of the apartment so I can sit on my

00:32:49,250 --> 00:32:56,919
couch I can hit a button my watch bring

00:32:50,960 --> 00:32:59,809
the doorbell I can flip relays I can

00:32:56,919 --> 00:33:00,950
reverse engineer all these cheap radio

00:32:59,809 --> 00:33:03,650
remote control devices and then

00:33:00,950 --> 00:33:07,039
re-implement them by software in my own

00:33:03,650 --> 00:33:08,960
hardware just by virtue of something

00:33:07,039 --> 00:33:13,280
that's good enough and a copy of a

00:33:08,960 --> 00:33:15,049
reference design so the first thing that

00:33:13,280 --> 00:33:16,789
you need when you're adding a radio to

00:33:15,049 --> 00:33:19,820
this is you need a graceful downgrade so

00:33:16,789 --> 00:33:22,460
the things still function if the radio

00:33:19,820 --> 00:33:24,080
isn't populated in the case of the watch

00:33:22,460 --> 00:33:25,909
if you're assembling one of these and

00:33:24,080 --> 00:33:28,250
you don't need the radio functions or if

00:33:25,909 --> 00:33:29,330
you work in a skiff you just leave off

00:33:28,250 --> 00:33:31,700
the high frequency

00:33:29,330 --> 00:33:34,160
oscillator that's required by the radio

00:33:31,700 --> 00:33:36,320
and everything falls back to being just

00:33:34,160 --> 00:33:39,080
a wristwatch all of the radio functions

00:33:36,320 --> 00:33:40,520
cease working you can happily bring it

00:33:39,080 --> 00:33:42,230
into your skiff while knowing it's not

00:33:40,520 --> 00:33:45,500
going to transmit your conversation and

00:33:42,230 --> 00:33:47,570
Morse code the other thing that you need

00:33:45,500 --> 00:33:50,420
and you absolutely need this you cannot

00:33:47,570 --> 00:33:52,370
you cannot skip on this you need a way

00:33:50,420 --> 00:33:55,400
to quickly prototype your radio

00:33:52,370 --> 00:33:57,320
configuration to know whether you've

00:33:55,400 --> 00:33:59,060
improved or ruined things or whether

00:33:57,320 --> 00:34:00,200
you're able to catch the packet and you

00:33:59,060 --> 00:34:03,940
need to be able to do that from the

00:34:00,200 --> 00:34:06,590
command line in UNIX without having to

00:34:03,940 --> 00:34:09,170
touch the controls of your physical

00:34:06,590 --> 00:34:11,420
device so I made several of these things

00:34:09,170 --> 00:34:14,320
which are just a regular FTDI chip

00:34:11,420 --> 00:34:18,380
adapter connected to a good watch board

00:34:14,320 --> 00:34:18,800
which then has chip antennae populated

00:34:18,380 --> 00:34:21,950
on it

00:34:18,800 --> 00:34:24,170
so that I can write my radio modules

00:34:21,950 --> 00:34:29,870
first in UNIX and later port them to run

00:34:24,170 --> 00:34:31,880
standalone I also have configuration

00:34:29,870 --> 00:34:32,960
text files that I can make each watch

00:34:31,880 --> 00:34:34,760
different I can give it different

00:34:32,960 --> 00:34:39,260
frequencies a different ham radio call

00:34:34,760 --> 00:34:43,160
sign and again we have these power

00:34:39,260 --> 00:34:45,860
management restrictions right so if it's

00:34:43,160 --> 00:34:48,770
like you know between five and a hundred

00:34:45,860 --> 00:34:51,830
and sixty micro amps as it's doing

00:34:48,770 --> 00:34:54,620
software stuff we really care what the

00:34:51,830 --> 00:34:56,750
radio stuff costs and the answer to that

00:34:54,620 --> 00:35:00,920
is that it costs a bloody fortune it's

00:34:56,750 --> 00:35:04,610
15 my 15 milliamps 15,000 micro amps to

00:35:00,920 --> 00:35:06,500
receive a packet and it's about the same

00:35:04,610 --> 00:35:09,140
to transmit one because is you know we

00:35:06,500 --> 00:35:10,460
don't have a final power amplifier the

00:35:09,140 --> 00:35:12,170
highest that it will consume while

00:35:10,460 --> 00:35:16,370
transmitting at full strength is 30

00:35:12,170 --> 00:35:19,100
milliamps so quick little demos that

00:35:16,370 --> 00:35:21,620
transmit something are well within our

00:35:19,100 --> 00:35:23,810
power budget we can drain the milliamps

00:35:21,620 --> 00:35:25,940
from the coin cell in the short term

00:35:23,810 --> 00:35:28,010
with no consequences so this is showing

00:35:25,940 --> 00:35:30,860
the watch transmitting my callsign in

00:35:28,010 --> 00:35:34,370
Morse code to a waiting 70 centimeter

00:35:30,860 --> 00:35:35,870
receiver we use this as a test and we're

00:35:34,370 --> 00:35:39,470
able to get Morse code across a couple

00:35:35,870 --> 00:35:43,670
of city blocks in Philadelphia you can

00:35:39,470 --> 00:35:46,250
also emulate and and trans

00:35:43,670 --> 00:35:47,330
remote control messages easily while

00:35:46,250 --> 00:35:49,250
remaining within your power budget

00:35:47,330 --> 00:35:50,900
because the milliamps are only consumed

00:35:49,250 --> 00:35:53,750
as you're holding the button and

00:35:50,900 --> 00:35:57,340
transmitting the message you can reverse

00:35:53,750 --> 00:36:00,740
engineer and clone these cheap little

00:35:57,340 --> 00:36:02,060
relay controllers they're like 15 bucks

00:36:00,740 --> 00:36:04,550
you can get them from many different

00:36:02,060 --> 00:36:05,810
vendors their on-off keyed in their

00:36:04,550 --> 00:36:09,380
transmission so they're very easy to

00:36:05,810 --> 00:36:12,860
figure out andrey implement just as you

00:36:09,380 --> 00:36:15,020
would do in software-defined radio you

00:36:12,860 --> 00:36:18,500
grab the recording you use universal

00:36:15,020 --> 00:36:20,630
radio hacker or you know your own new

00:36:18,500 --> 00:36:23,720
radio setup even convert them to an

00:36:20,630 --> 00:36:25,910
audio file if you like and then you you

00:36:23,720 --> 00:36:28,100
just convert these over to the same

00:36:25,910 --> 00:36:30,560
radio configuration registers that are

00:36:28,100 --> 00:36:32,660
documented in the data sheets so if you

00:36:30,560 --> 00:36:34,640
need to widen the bandwidth on your

00:36:32,660 --> 00:36:37,520
widen the deviation in your transmission

00:36:34,640 --> 00:36:39,680
or reduce the bandwidth on your receive

00:36:37,520 --> 00:36:43,130
filter all of that is written up in the

00:36:39,680 --> 00:36:46,130
documentation for you to do yourself

00:36:43,130 --> 00:36:49,370
there's no magic here you can then

00:36:46,130 --> 00:36:52,130
convert the packets that you see into

00:36:49,370 --> 00:36:54,950
strings which get sent out the radio

00:36:52,130 --> 00:36:57,050
that produces the same signal and then

00:36:54,950 --> 00:36:58,760
your watch is able to flip the relay or

00:36:57,050 --> 00:37:00,910
ring the doorbell or whatever else you

00:36:58,760 --> 00:37:04,160
need to implement another handy thing

00:37:00,910 --> 00:37:06,470
pieces again we're limited in our

00:37:04,160 --> 00:37:10,870
received power budget we're very sharply

00:37:06,470 --> 00:37:13,790
limited so one thing that you can do

00:37:10,870 --> 00:37:15,650
that mike has been implemented a while

00:37:13,790 --> 00:37:18,850
back for a similar chip in the gull tuck

00:37:15,650 --> 00:37:22,130
I am me is a spectrum analyzer

00:37:18,850 --> 00:37:24,740
unfortunately I don't have the LCD room

00:37:22,130 --> 00:37:27,080
to display the spectrum analyzer but I

00:37:24,740 --> 00:37:28,430
can do the same technique of retuning my

00:37:27,080 --> 00:37:31,160
radio to many different center

00:37:28,430 --> 00:37:32,570
frequencies measuring the received

00:37:31,160 --> 00:37:35,570
signal strength indicator on each

00:37:32,570 --> 00:37:42,680
channel and this will then tell me where

00:37:35,570 --> 00:37:47,120
the peak is so if I meant using my HT on

00:37:42,680 --> 00:37:50,330
the Left 33.9 to oh the good watch on

00:37:47,120 --> 00:37:53,690
the right is able to find this just 100

00:37:50,330 --> 00:37:55,400
kilohertz off at four thirty 3.8 2 which

00:37:53,690 --> 00:37:56,690
isn't perfect but it's certainly close

00:37:55,400 --> 00:37:59,750
enough for you to then

00:37:56,690 --> 00:38:02,540
around with a fancier radio I

00:37:59,750 --> 00:38:05,810
successfully used this to find the

00:38:02,540 --> 00:38:07,130
center frequency of a cheap imported

00:38:05,810 --> 00:38:10,730
walkie talkie on the left that was

00:38:07,130 --> 00:38:15,470
running at 450 to 500 and then at the

00:38:10,730 --> 00:38:17,900
besides Knoxville conference I managed

00:38:15,470 --> 00:38:19,550
to use the same trick in order to figure

00:38:17,900 --> 00:38:22,130
out what the staff radios were running

00:38:19,550 --> 00:38:24,140
on without having to scan without having

00:38:22,130 --> 00:38:26,180
to bring out a laptop or a proper

00:38:24,140 --> 00:38:30,230
spectrum analyzer without having any

00:38:26,180 --> 00:38:32,839
equipment on me at all other than like

00:38:30,230 --> 00:38:34,790
walkie talkie and my wristwatch all

00:38:32,839 --> 00:38:36,530
while sticking within a three-year

00:38:34,790 --> 00:38:40,730
expected battery life because the

00:38:36,530 --> 00:38:42,109
feature is almost always off there are

00:38:40,730 --> 00:38:44,420
other forms of communication that you

00:38:42,109 --> 00:38:50,390
can use when you need to receive more

00:38:44,420 --> 00:38:54,550
often POC sag is the American or no the

00:38:50,390 --> 00:38:58,369
british standard for alphanumeric pagers

00:38:54,550 --> 00:39:01,220
through dap net buy ham radio you're

00:38:58,369 --> 00:39:04,460
able to get a pager identification

00:39:01,220 --> 00:39:06,349
number and also wiring your own

00:39:04,460 --> 00:39:09,829
transmitter to then do amateur radio

00:39:06,349 --> 00:39:13,460
pages across large areas or within your

00:39:09,829 --> 00:39:16,069
own home so I wrote a pox AG receiver

00:39:13,460 --> 00:39:18,560
for the watch and park sock has this

00:39:16,069 --> 00:39:22,400
nifty little feature that the preamble

00:39:18,560 --> 00:39:25,339
is 480 milliseconds long which is

00:39:22,400 --> 00:39:27,200
ridiculously wasteful if you're trying

00:39:25,339 --> 00:39:29,569
to do throughput because you have nearly

00:39:27,200 --> 00:39:32,359
half a second wasted at the beginning of

00:39:29,569 --> 00:39:34,609
every transmission but it's really handy

00:39:32,359 --> 00:39:35,540
because the receiver can wake up three

00:39:34,609 --> 00:39:38,599
times a second

00:39:35,540 --> 00:39:42,349
look to see if the preamble is already

00:39:38,599 --> 00:39:44,270
on the air if it is then the receiver

00:39:42,349 --> 00:39:46,220
can calibrate its tuning in order to get

00:39:44,270 --> 00:39:48,500
better range and whatnot and wait for

00:39:46,220 --> 00:39:50,240
the rest of the packet to arrive and if

00:39:48,500 --> 00:39:51,859
it's not then the receiver immediately

00:39:50,240 --> 00:39:56,000
goes back to sleep waiting for its next

00:39:51,859 --> 00:39:57,740
wake-up interval and this is how I could

00:39:56,000 --> 00:40:00,470
alphanumeric pager is able to run for

00:39:57,740 --> 00:40:01,730
months on a triple-a battery I don't

00:40:00,470 --> 00:40:03,380
have a triple-a battery I have a coin

00:40:01,730 --> 00:40:06,260
cell but I'm able to get three days of

00:40:03,380 --> 00:40:09,609
reception by successfully implementing

00:40:06,260 --> 00:40:09,609
and measuring the

00:40:10,250 --> 00:40:16,340
the power efficiencies of this sniff

00:40:13,880 --> 00:40:19,609
teeny little protocol so be thinking

00:40:16,340 --> 00:40:23,119
about like what nifty tricks are

00:40:19,609 --> 00:40:26,540
necessary only because of constraints on

00:40:23,119 --> 00:40:28,609
your implementation the the big

00:40:26,540 --> 00:40:30,500
constraints on the watch are that it has

00:40:28,609 --> 00:40:33,200
to be comfortable to wear and it's

00:40:30,500 --> 00:40:35,180
battery has to last for years you're

00:40:33,200 --> 00:40:37,760
able to make useful radio equipment

00:40:35,180 --> 00:40:42,560
under those constraints in the same way

00:40:37,760 --> 00:40:43,910
that you're able to solve them in other

00:40:42,560 --> 00:40:48,220
applications the same way that you're

00:40:43,910 --> 00:40:50,510
able to make a Studebaker engine run

00:40:48,220 --> 00:40:52,190
without radio interference by getting

00:40:50,510 --> 00:40:54,670
rid of the sparks inside of the

00:40:52,190 --> 00:40:54,670
distributor

00:40:57,390 --> 00:41:00,440
[Music]

00:41:06,060 --> 00:41:10,830
this is strange I have different

00:41:08,370 --> 00:41:14,010
versions of the slide in my speaker

00:41:10,830 --> 00:41:15,420
preview as I have on that display but

00:41:14,010 --> 00:41:22,500
they're still kept in sync by the slide

00:41:15,420 --> 00:41:25,260
number this is crazy in any case I have

00:41:22,500 --> 00:41:28,620
a few hundred of the good watch 30

00:41:25,260 --> 00:41:30,720
circuit boards with me I think the most

00:41:28,620 --> 00:41:33,140
useful thing that I ever did for a new

00:41:30,720 --> 00:41:35,790
radio as a whole was that I tricked

00:41:33,140 --> 00:41:38,400
neighbor husband here into learning

00:41:35,790 --> 00:41:39,990
surface mount soldering and I would very

00:41:38,400 --> 00:41:43,170
much like to trick you into learning

00:41:39,990 --> 00:41:44,970
surface mount soldering so if you would

00:41:43,170 --> 00:41:47,100
like I can give you two of these boards

00:41:44,970 --> 00:41:49,620
you can order the components on digi-key

00:41:47,100 --> 00:41:51,540
and you can build them at home and then

00:41:49,620 --> 00:42:03,660
begin building more nifty stuff of your

00:41:51,540 --> 00:42:07,860
own thank you anybody in the audience

00:42:03,660 --> 00:42:11,550
have questions my callsign is kilo kilo

00:42:07,860 --> 00:42:13,650
for Victor Charlie Zulu except when I'm

00:42:11,550 --> 00:42:20,490
transmitting out-of-band when it's kilo

00:42:13,650 --> 00:42:24,390
kilo for KK for vcz but kilo kilo for

00:42:20,490 --> 00:42:29,640
Victor Charlie Zulu other questions for

00:42:24,390 --> 00:42:31,230
Travis how how can people find you to

00:42:29,640 --> 00:42:35,160
get those boards without swarming you

00:42:31,230 --> 00:42:37,470
oh don't swarm me now but later today or

00:42:35,160 --> 00:42:41,010
tomorrow if you catch me I'll be

00:42:37,470 --> 00:42:42,540
carrying them until I run out all right

00:42:41,010 --> 00:42:47,430
oh and where can people find the bomb

00:42:42,540 --> 00:42:49,350
but they need the bomb the schematics

00:42:47,430 --> 00:42:54,180
the source code everything is

00:42:49,350 --> 00:42:58,830
open-source and just full public domain

00:42:54,180 --> 00:43:02,700
not even GPL on github at github comm /

00:42:58,830 --> 00:43:04,020
Travis Goodspeed you'll find other

00:43:02,700 --> 00:43:06,510
projects there are some of them good

00:43:04,020 --> 00:43:09,720
some of them not so good I have a lovely

00:43:06,510 --> 00:43:11,900
tool for indexing for maintaining

00:43:09,720 --> 00:43:15,500
indexes in very large law tech books

00:43:11,900 --> 00:43:17,700
which no one uses but it's very handy

00:43:15,500 --> 00:43:20,280
alright thank you god wait we're gonna

00:43:17,700 --> 00:43:22,950
get more well Robin get set up

00:43:20,280 --> 00:43:25,080
right okay so the question was you know

00:43:22,950 --> 00:43:27,690
the the LCD on this thing is an eight

00:43:25,080 --> 00:43:32,400
digit seven segment display it's very

00:43:27,690 --> 00:43:34,530
limiting what if I considered to expand

00:43:32,400 --> 00:43:37,680
upon that or improve it I did look at

00:43:34,530 --> 00:43:40,830
custom LCD glass manufacturing you can

00:43:37,680 --> 00:43:42,750
order LCDs if you want a few thousand of

00:43:40,830 --> 00:43:44,910
them the the setup costs aren't extreme

00:43:42,750 --> 00:43:46,350
and you can order them in the same size

00:43:44,910 --> 00:43:48,870
the same shape and with the same

00:43:46,350 --> 00:43:51,720
connectors in order to either clone an

00:43:48,870 --> 00:43:55,560
existing LCD display or to add more

00:43:51,720 --> 00:43:57,300
segments in my case had I done that I

00:43:55,560 --> 00:44:00,300
would have been able to use more of the

00:43:57,300 --> 00:44:02,760
96 segments that my controller chip can

00:44:00,300 --> 00:44:04,040
support but I wouldn't have able I

00:44:02,760 --> 00:44:06,570
wouldn't have been able to fit in

00:44:04,040 --> 00:44:08,760
significantly more information like one

00:44:06,570 --> 00:44:10,470
extra digit didn't seem to justify the

00:44:08,760 --> 00:44:15,630
cost of the custom glass manufacturing

00:44:10,470 --> 00:44:19,110
to me I did add a Morse code feature

00:44:15,630 --> 00:44:20,640
through the buzzer so that as I need to

00:44:19,110 --> 00:44:22,800
tell the time in the middle of the night

00:44:20,640 --> 00:44:24,090
I can touch a button my watch and it

00:44:22,800 --> 00:44:25,470
will beat the time out to me in Morse

00:44:24,090 --> 00:44:30,390
code and I don't have to turn the lights

00:44:25,470 --> 00:44:34,170
on I've also been experimenting with

00:44:30,390 --> 00:44:37,140
like a side LED backlight that doesn't

00:44:34,170 --> 00:44:38,880
exist in the original design but as you

00:44:37,140 --> 00:44:40,950
add these things you still have to fit

00:44:38,880 --> 00:44:43,530
within what your chip supports and what

00:44:40,950 --> 00:44:46,650
the hardware supports and I don't think

00:44:43,530 --> 00:44:50,460
that the original manufacturers left out

00:44:46,650 --> 00:44:51,900
much room in their LCD design or like

00:44:50,460 --> 00:44:55,470
made any mistakes there that would be

00:44:51,900 --> 00:44:57,380
valuable to recreate alright thank you

00:44:55,470 --> 00:45:00,240
and we'll bounce on to our next speaker

00:44:57,380 --> 00:45:02,460
thank you very much Thomas Oh can't

00:45:00,240 --> 00:45:04,719
leaving out your keynote challenge boy

00:45:02,460 --> 00:45:04,719

YouTube URL: https://www.youtube.com/watch?v=Tkl3R0bXvVo


