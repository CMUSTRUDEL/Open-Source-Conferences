Title: GRCon19 - SigMF. by Ben Hilburn
Publication date: 2019-11-05
Playlist: GRCon 2019
Description: 
	SigMF. by Ben Hilburn

The Signal Metadata Format (SigMF) was first announced at GRCon17, and in the last two years has grown substantially in usage, scope, and support, and is now one of GNU Radio’s most widely used efforts outside of the GNU Radio community. This presentation will provide a quick introduction to SigMF for those that aren’t familiar, give an update on the effort, and discuss the plan for the project moving forward.
Captions: 
	00:00:14,340 --> 00:00:21,040
so I I tried for a while I think of a

00:00:17,200 --> 00:00:23,650
clever talk title for this I did because

00:00:21,040 --> 00:00:26,439
I gave a second math talk in 2017 and I

00:00:23,650 --> 00:00:28,270
probably spent 30 minutes trying

00:00:26,439 --> 00:00:29,200
different titles and I just gave up so

00:00:28,270 --> 00:00:33,699
now it's a statement

00:00:29,200 --> 00:00:38,680
it's singham f period so the point of

00:00:33,699 --> 00:00:40,840
this talk is to is to give a brief intro

00:00:38,680 --> 00:00:44,440
to what singham f is for those who are

00:00:40,840 --> 00:00:46,180
unaware of it and even if you do know

00:00:44,440 --> 00:00:47,979
what it is to perhaps give a little bit

00:00:46,180 --> 00:00:50,320
more insight into what the original

00:00:47,979 --> 00:00:52,210
design goals for were which might

00:00:50,320 --> 00:00:54,970
perhaps explain some of the design

00:00:52,210 --> 00:00:56,409
decisions that we've made talk about its

00:00:54,970 --> 00:00:59,589
current state and where we're headed so

00:00:56,409 --> 00:01:02,820
Sigma came out of the dark past you are

00:00:59,589 --> 00:01:07,590
hackfest in Brussels in February 2017

00:01:02,820 --> 00:01:10,120
Tom who organized the hackfest presented

00:01:07,590 --> 00:01:11,920
basically a problem book as prompts for

00:01:10,120 --> 00:01:14,170
the hackfest and one of the problems was

00:01:11,920 --> 00:01:16,720
how do we make recordings of information

00:01:14,170 --> 00:01:19,060
more useful right I mean how many people

00:01:16,720 --> 00:01:22,750
have made have you know hard drives full

00:01:19,060 --> 00:01:24,100
of recorded RF data that two days later

00:01:22,750 --> 00:01:25,780
you don't remember how you recorded it

00:01:24,100 --> 00:01:27,670
or how to process it or what it was and

00:01:25,780 --> 00:01:29,830
all right you've filled the file name

00:01:27,670 --> 00:01:32,080
with like frequency and gain and time of

00:01:29,830 --> 00:01:34,330
day and or right it's it's not really

00:01:32,080 --> 00:01:39,520
especially useful so how do we make that

00:01:34,330 --> 00:01:43,090
better was the original question so it

00:01:39,520 --> 00:01:47,580
is fundamentally just I'm using the word

00:01:43,090 --> 00:01:50,230
just here somewhat somewhat as a joke a

00:01:47,580 --> 00:01:53,440
storage format for digital recordings of

00:01:50,230 --> 00:01:55,870
analog signals so at its surface that

00:01:53,440 --> 00:01:57,960
sounds phrase oh right there's you know

00:01:55,870 --> 00:02:00,760
just more or less streaming dated a disk

00:01:57,960 --> 00:02:05,409
it turns out it's really really hard to

00:02:00,760 --> 00:02:09,220
do this well and once you do it well it

00:02:05,409 --> 00:02:10,720
enables a lot more than you might expect

00:02:09,220 --> 00:02:14,019
and that's some of what I want to dive

00:02:10,720 --> 00:02:15,849
into this talk today so before I go too

00:02:14,019 --> 00:02:19,120
much further right you have to do the

00:02:15,849 --> 00:02:20,620
obligatory xkcd stand specification

00:02:19,120 --> 00:02:21,940
standard thing we've already seen it

00:02:20,620 --> 00:02:26,620
like four times this conference already

00:02:21,940 --> 00:02:28,120
right so yes singham f is indeed another

00:02:26,620 --> 00:02:31,299
called a specification

00:02:28,120 --> 00:02:34,720
not a standard still applies I would

00:02:31,299 --> 00:02:36,580
argue however that there was indeed no

00:02:34,720 --> 00:02:39,599
other solution for what we wanted to do

00:02:36,580 --> 00:02:44,019
that met our requirements or that was

00:02:39,599 --> 00:02:46,390
accessible to us so these these were the

00:02:44,019 --> 00:02:49,019
original design goals these were the

00:02:46,390 --> 00:02:52,000
denying requirements for cig enough

00:02:49,019 --> 00:02:56,860
maximize speed so what what this means

00:02:52,000 --> 00:03:01,660
is we want to be able to record data to

00:02:56,860 --> 00:03:04,359
disk from a radio system as fast as

00:03:01,660 --> 00:03:08,609
possible and then we want to be able to

00:03:04,359 --> 00:03:10,810
read it off the disk as fast as possible

00:03:08,609 --> 00:03:13,230
guarantee portability so this turns out

00:03:10,810 --> 00:03:15,730
to be an especially critical point

00:03:13,230 --> 00:03:22,030
guaranteeing portability is more than

00:03:15,730 --> 00:03:23,379
just you give somebody else a stream of

00:03:22,030 --> 00:03:26,260
our samples and they know it's a stream

00:03:23,379 --> 00:03:28,659
of our samples they can use it right it

00:03:26,260 --> 00:03:31,390
means that the way in which you have

00:03:28,659 --> 00:03:33,489
described that data cannot be

00:03:31,390 --> 00:03:36,849
interpreted in any other way than what

00:03:33,489 --> 00:03:38,950
you intended so we'll talk a little bit

00:03:36,849 --> 00:03:42,459
more about that but that's especially

00:03:38,950 --> 00:03:46,419
that's especially important in terms of

00:03:42,459 --> 00:03:48,730
not wanting to lose understanding which

00:03:46,419 --> 00:03:53,440
becomes extremely important for things

00:03:48,730 --> 00:03:55,359
like machine learning or collaboratively

00:03:53,440 --> 00:03:58,470
processing data and you want to annotate

00:03:55,359 --> 00:04:01,269
things that somebody else understands

00:03:58,470 --> 00:04:03,519
minimizing software requirements so we

00:04:01,269 --> 00:04:04,989
would like to be for this for anyone

00:04:03,519 --> 00:04:06,519
who's building second F tools for those

00:04:04,989 --> 00:04:08,500
tools to be able to run on tiny little

00:04:06,519 --> 00:04:10,540
embedded systems that don't have a whole

00:04:08,500 --> 00:04:11,980
lot else going on alright so we don't

00:04:10,540 --> 00:04:14,349
want huge dependency chains we don't

00:04:11,980 --> 00:04:17,130
want to be extremely difficult to

00:04:14,349 --> 00:04:19,630
implement siga mess compliant tooling

00:04:17,130 --> 00:04:23,099
the ability to link mini time bearing

00:04:19,630 --> 00:04:25,780
recording so this one we didn't really

00:04:23,099 --> 00:04:28,840
figure out until probably two years

00:04:25,780 --> 00:04:31,349
later but I think we've got it now so

00:04:28,840 --> 00:04:36,490
I'll give an example of what this means

00:04:31,349 --> 00:04:39,700
it's so imagine you have an airborne

00:04:36,490 --> 00:04:41,110
receiver it's a dish mounted on the

00:04:39,700 --> 00:04:41,740
bottom of a plane and it's flying around

00:04:41,110 --> 00:04:45,250
receive

00:04:41,740 --> 00:04:48,460
data all right what are all of the

00:04:45,250 --> 00:04:49,800
things that you might care about other

00:04:48,460 --> 00:04:51,910
than just the RF data

00:04:49,800 --> 00:04:55,150
well you care about where the plane is

00:04:51,910 --> 00:04:56,890
right you might care about the direction

00:04:55,150 --> 00:04:59,380
of the dish as the plane banks the dish

00:04:56,890 --> 00:05:01,240
is gonna change right you might care

00:04:59,380 --> 00:05:01,990
about the temperature of your dish all

00:05:01,240 --> 00:05:04,690
right what is this what is the

00:05:01,990 --> 00:05:05,220
temperature of the dish so what was that

00:05:04,690 --> 00:05:07,750
for

00:05:05,220 --> 00:05:09,370
just right off the top all right

00:05:07,750 --> 00:05:12,160
depending on what you want to do with

00:05:09,370 --> 00:05:13,840
that data understanding how all of those

00:05:12,160 --> 00:05:15,730
different recordings impact each other

00:05:13,840 --> 00:05:17,440
matters and you have to do it in a way

00:05:15,730 --> 00:05:19,810
such that you know I'm looking at RF

00:05:17,440 --> 00:05:21,780
sample 1,000,001 what was the

00:05:19,810 --> 00:05:24,610
temperature when that sample was taken

00:05:21,780 --> 00:05:25,840
all right and those those two streams of

00:05:24,610 --> 00:05:27,580
information recorded with different

00:05:25,840 --> 00:05:31,300
sensors one is a thermometer and one is

00:05:27,580 --> 00:05:34,810
a radio receiver this is an interesting

00:05:31,300 --> 00:05:36,880
problem so sharing portions of dataset

00:05:34,810 --> 00:05:39,160
without sharing the whole RF data sets

00:05:36,880 --> 00:05:41,230
are we heard steve Kroft from study

00:05:39,160 --> 00:05:44,950
talking earlier right about the immense

00:05:41,230 --> 00:05:47,460
amount of data that their large antenna

00:05:44,950 --> 00:05:52,230
arrays capture and how to deal with that

00:05:47,460 --> 00:05:52,230
ideally you don't you know have to do

00:05:52,410 --> 00:05:57,340
what the black hole folks did and ship a

00:05:55,660 --> 00:05:58,960
suitcase full of hard drives across the

00:05:57,340 --> 00:06:02,470
world because it's actually the fastest

00:05:58,960 --> 00:06:03,580
way to get data somewhere and to be

00:06:02,470 --> 00:06:04,750
clear Saiga math would not have solve

00:06:03,580 --> 00:06:07,510
that problem that was an insane amount

00:06:04,750 --> 00:06:10,990
of data but we want we want to make

00:06:07,510 --> 00:06:12,970
inroads so allow for arbitrary metadata

00:06:10,990 --> 00:06:14,410
so this could seem at odds with the

00:06:12,970 --> 00:06:16,960
guaranteeing portability piece of this

00:06:14,410 --> 00:06:19,810
right so we said okay we want to be able

00:06:16,960 --> 00:06:23,440
to describe RF signals with metadata and

00:06:19,810 --> 00:06:25,990
give it to somebody else but we also

00:06:23,440 --> 00:06:27,250
want it to be possible to make up new

00:06:25,990 --> 00:06:29,370
metadata that no one's ever seen before

00:06:27,250 --> 00:06:34,030
and for them to know what that means

00:06:29,370 --> 00:06:35,350
that's super hard facilitating easy

00:06:34,030 --> 00:06:38,140
integration with existing tools and

00:06:35,350 --> 00:06:41,700
workflows I will say that this is a

00:06:38,140 --> 00:06:45,670
fundamental part of open source right

00:06:41,700 --> 00:06:48,670
being able to use your existing tools is

00:06:45,670 --> 00:06:51,940
key I how obnoxious is it when you get

00:06:48,670 --> 00:06:53,200
some file that you can't grep right or

00:06:51,940 --> 00:06:55,630
you can't process with simple

00:06:53,200 --> 00:06:57,820
command-line tools it's fundamental

00:06:55,630 --> 00:07:01,120
breaks a lot of open-source workflows

00:06:57,820 --> 00:07:02,680
and that we wanted to support those so

00:07:01,120 --> 00:07:04,690
the metadata must be easily indexable

00:07:02,680 --> 00:07:07,000
and editable this becomes especially

00:07:04,690 --> 00:07:08,830
important if you want to do things like

00:07:07,000 --> 00:07:11,740
store it and databases and search

00:07:08,830 --> 00:07:16,000
through that the specification must be

00:07:11,740 --> 00:07:20,290
understandable I'm not going to call out

00:07:16,000 --> 00:07:21,640
any other specifications by name I I

00:07:20,290 --> 00:07:25,330
would argue that this is something that

00:07:21,640 --> 00:07:28,450
RF specifications just generally kind of

00:07:25,330 --> 00:07:30,190
pretty terrible at they are huge PDF

00:07:28,450 --> 00:07:33,760
documents usually hundreds of pages long

00:07:30,190 --> 00:07:37,240
that make very little sense to anyone

00:07:33,760 --> 00:07:39,610
else that tries to read them and we did

00:07:37,240 --> 00:07:41,320
not want to be that and we wanted to

00:07:39,610 --> 00:07:42,520
govern what about this thing to be

00:07:41,320 --> 00:07:44,880
governed and maintained as an open

00:07:42,520 --> 00:07:47,680
source project alright and this is why

00:07:44,880 --> 00:07:49,540
this all development it happened on has

00:07:47,680 --> 00:07:51,280
happens on github all discussion happens

00:07:49,540 --> 00:07:53,920
on github decisions are made on github

00:07:51,280 --> 00:08:01,350
and the format of the specification is a

00:07:53,920 --> 00:08:03,340
lot like an IETF farce RC all right so

00:08:01,350 --> 00:08:05,680
going back to the question of why didn't

00:08:03,340 --> 00:08:08,470
you use any of these other things why

00:08:05,680 --> 00:08:10,120
didn't you use by 2:49 well the answer

00:08:08,470 --> 00:08:12,940
is vitae 49 is a transport format it's

00:08:10,120 --> 00:08:14,260
not a storage format yes I realize there

00:08:12,940 --> 00:08:16,420
a lot of people who stream vitae 49 to

00:08:14,260 --> 00:08:20,370
disk I would argue that once you have

00:08:16,420 --> 00:08:23,320
done that it breaks like eight of these

00:08:20,370 --> 00:08:25,150
also to quote somebody from the vada 49

00:08:23,320 --> 00:08:26,890
committee to whom I talked to about siga

00:08:25,150 --> 00:08:31,060
MEF you could drive a bus through that

00:08:26,890 --> 00:08:33,160
standard we it that breaks the point of

00:08:31,060 --> 00:08:35,979
compliance right how many people have

00:08:33,160 --> 00:08:38,830
received a vital 49 recording and then

00:08:35,979 --> 00:08:42,010
tried to put it through your vitae 49 d

00:08:38,830 --> 00:08:45,040
framer or a decoder and it didn't come

00:08:42,010 --> 00:08:46,690
out the way you thought it would thank

00:08:45,040 --> 00:08:51,850
you for being the only person to raise

00:08:46,690 --> 00:08:53,620
your hand Marcus anyways we actually we

00:08:51,850 --> 00:08:55,720
coat it we see vitae 49 is an important

00:08:53,620 --> 00:08:57,520
partner right sigmap is not a streaming

00:08:55,720 --> 00:08:59,080
standard it's not a transport format so

00:08:57,520 --> 00:09:01,270
graph does not care what your data looks

00:08:59,080 --> 00:09:02,350
like over the wire right it's think

00:09:01,270 --> 00:09:07,839
about cares about what your data looks

00:09:02,350 --> 00:09:08,800
like at rest so why 249 we see is an

00:09:07,839 --> 00:09:13,720
important partner

00:09:08,800 --> 00:09:16,029
 hdf5 si5 Izzy's pretty heavily

00:09:13,720 --> 00:09:18,519
especially in the tropical science of

00:09:16,029 --> 00:09:20,589
this Noah uses it for example the

00:09:18,519 --> 00:09:24,339
problem of hdf5 is it doesn't mean a

00:09:20,589 --> 00:09:26,620
portability requirements it describes

00:09:24,339 --> 00:09:28,870
them waves it describes a way of

00:09:26,620 --> 00:09:30,279
recording data but doesn't guarantee the

00:09:28,870 --> 00:09:33,190
the compliance or the understanding

00:09:30,279 --> 00:09:35,890
right that idea of if I give you an HD

00:09:33,190 --> 00:09:36,670
f5 recording yes you could read the data

00:09:35,890 --> 00:09:38,190
out of it but you're not necessarily

00:09:36,670 --> 00:09:40,269
going to know what it means right

00:09:38,190 --> 00:09:43,570
interestingly this is the problem at

00:09:40,269 --> 00:09:45,160
digital RF solves so digital RF like you

00:09:43,570 --> 00:09:47,010
know what we want a we're using HD F

00:09:45,160 --> 00:09:49,029
it's a digital RF is run by MIT haystack

00:09:47,010 --> 00:09:50,500
they wanted to use hdf5

00:09:49,029 --> 00:09:51,850
but they had that problem they're like

00:09:50,500 --> 00:09:55,360
we want to use HD fi but nobody doesn't

00:09:51,850 --> 00:09:57,579
any of our data means so I would argue

00:09:55,360 --> 00:10:00,700
of all of the digital RF is closest to

00:09:57,579 --> 00:10:02,260
Singham f it actually started six months

00:10:00,700 --> 00:10:05,589
after the Sigma standard was published

00:10:02,260 --> 00:10:07,510
in retrospect I wish that there had been

00:10:05,589 --> 00:10:08,890
more collaboration between the two I

00:10:07,510 --> 00:10:11,740
feel like we probably could have come to

00:10:08,890 --> 00:10:15,970
agreement on something that might have

00:10:11,740 --> 00:10:18,430
solved both problems but we're by the

00:10:15,970 --> 00:10:21,130
time we both got to where we were we had

00:10:18,430 --> 00:10:22,390
solved different design goals digital RF

00:10:21,130 --> 00:10:24,490
is probably the closest thing I met with

00:10:22,390 --> 00:10:25,600
all of these though pickle was Python

00:10:24,490 --> 00:10:27,940
specific it lacked some metadata

00:10:25,600 --> 00:10:30,010
mechanisms Midas blue was designed to be

00:10:27,940 --> 00:10:32,950
used with Midas it has a dramatically

00:10:30,010 --> 00:10:34,510
different design goals Cindy I apologize

00:10:32,950 --> 00:10:36,000
for like walking back and forth on this

00:10:34,510 --> 00:10:40,390
day Geoff okay

00:10:36,000 --> 00:10:42,700
keeping on your toes all right so to use

00:10:40,390 --> 00:10:46,360
a bad joke I couldn't resist Sigma have

00:10:42,700 --> 00:10:48,550
took off way faster than we anticipated

00:10:46,360 --> 00:10:50,040
like way way way faster than we

00:10:48,550 --> 00:10:55,920
anticipated

00:10:50,040 --> 00:11:00,850
so we spent three days at Tom's hackfest

00:10:55,920 --> 00:11:03,970
just debating all we did was have three

00:11:00,850 --> 00:11:06,399
straight days of design discussion and

00:11:03,970 --> 00:11:08,740
then we spent maybe two weeks following

00:11:06,399 --> 00:11:10,420
that recording that in a way that was

00:11:08,740 --> 00:11:14,110
mostly understandable to other people

00:11:10,420 --> 00:11:16,000
and I think what came out of that was we

00:11:14,110 --> 00:11:17,800
solved some really hard problems that a

00:11:16,000 --> 00:11:19,540
lot of people were suffering in a way

00:11:17,800 --> 00:11:20,770
that was fairly simple now if you go

00:11:19,540 --> 00:11:21,680
read the specification and you see some

00:11:20,770 --> 00:11:23,930
of the decisions you make

00:11:21,680 --> 00:11:26,930
made you think oh like yes that is kind

00:11:23,930 --> 00:11:28,010
of the obvious way to do it that's kind

00:11:26,930 --> 00:11:29,510
of the goal like for you to read it and

00:11:28,010 --> 00:11:32,899
think this is simple this is obvious

00:11:29,510 --> 00:11:33,980
right in the process of having gone

00:11:32,899 --> 00:11:35,180
through this I'm looking what everyone

00:11:33,980 --> 00:11:37,520
else has done and the other options that

00:11:35,180 --> 00:11:41,480
were out there most people have not done

00:11:37,520 --> 00:11:43,850
that for different reasons so I think

00:11:41,480 --> 00:11:47,170
because of the success of solving those

00:11:43,850 --> 00:11:51,470
heart problems adoption really soared

00:11:47,170 --> 00:11:54,310
and so we are actually yet to make a

00:11:51,470 --> 00:11:57,800
stable cigarette release in fact for

00:11:54,310 --> 00:11:59,899
probably close to 18 months

00:11:57,800 --> 00:12:01,550
there wasn't a release at all like there

00:11:59,899 --> 00:12:03,709
were large portions at the specification

00:12:01,550 --> 00:12:07,910
that said TBD

00:12:03,709 --> 00:12:09,350
but adoption took off even with that and

00:12:07,910 --> 00:12:12,350
people started using it in their

00:12:09,350 --> 00:12:14,839
programs significant tooling built

00:12:12,350 --> 00:12:18,770
around it and so that was kind of a

00:12:14,839 --> 00:12:21,529
lesson learned for us and in terms of

00:12:18,770 --> 00:12:25,420
preparing so I do want to also plug dean

00:12:21,529 --> 00:12:27,800
of opens talk tomorrow on nets at so

00:12:25,420 --> 00:12:28,880
she's the head librarian at the

00:12:27,800 --> 00:12:32,600
harvard-smithsonian Center for

00:12:28,880 --> 00:12:34,540
Astrophysics has been awarded funding

00:12:32,600 --> 00:12:38,000
from the sloan Foundation to work with

00:12:34,540 --> 00:12:41,959
liebherr sprays set Nog's and they're

00:12:38,000 --> 00:12:45,339
working on metadata problems so to give

00:12:41,959 --> 00:12:52,490
a few other examples of how this has

00:12:45,339 --> 00:12:54,980
exploded one of the most one of the most

00:12:52,490 --> 00:12:57,470
active groups in sigmap development is

00:12:54,980 --> 00:13:00,580
the MTA you might have heard Peter

00:12:57,470 --> 00:13:03,140
Malthus refer to this I'm sort of waving

00:13:00,580 --> 00:13:05,329
arbitrarily oh yeah Peter you might have

00:13:03,140 --> 00:13:07,160
heard Peter refer to this yesterday the

00:13:05,329 --> 00:13:09,680
NTIA is deploying sensor networks using

00:13:07,160 --> 00:13:11,540
Sikkim F and thank you Peter for

00:13:09,680 --> 00:13:14,750
actually publishing your Sigyn F

00:13:11,540 --> 00:13:16,459
extensions to date Peter is one of the

00:13:14,750 --> 00:13:17,839
only government groups to openly publish

00:13:16,459 --> 00:13:20,060
their stake FF extensions which is

00:13:17,839 --> 00:13:22,959
awesome thank you very much yes he

00:13:20,060 --> 00:13:22,959
deserves a round of applause

00:13:24,880 --> 00:13:31,420
to another example in-q-tel

00:13:27,490 --> 00:13:32,740
built a multi-sensor system for taking

00:13:31,420 --> 00:13:34,540
sigmaf recordings kind of going back to

00:13:32,740 --> 00:13:38,410
that point I mean before and then they

00:13:34,540 --> 00:13:40,180
built this incredible like web framework

00:13:38,410 --> 00:13:42,610
for navigating those recordings you can

00:13:40,180 --> 00:13:44,350
say okay what I care about is the video

00:13:42,610 --> 00:13:47,410
camera that was on this drone at this

00:13:44,350 --> 00:13:49,839
location at this time and give me all of

00:13:47,410 --> 00:13:52,089
the RF data that was that's relevant to

00:13:49,839 --> 00:13:56,770
that they published a paper about that

00:13:52,089 --> 00:13:59,190
in last year's technical proceedings so

00:13:56,770 --> 00:14:03,250
this is the currently available tooling

00:13:59,190 --> 00:14:04,690
it might my strike you is interesting

00:14:03,250 --> 00:14:06,730
that given how many people are using it

00:14:04,690 --> 00:14:08,260
there's not that much that's public this

00:14:06,730 --> 00:14:10,240
has been one of our issues with SIGGRAPH

00:14:08,260 --> 00:14:12,070
is that the vast majority of adoption

00:14:10,240 --> 00:14:15,310
and people using it are doing it in

00:14:12,070 --> 00:14:16,839
silence please please please I I know

00:14:15,310 --> 00:14:18,459
there's at least a dozen of you that

00:14:16,839 --> 00:14:20,830
have implemented vitae 49 to siga MEF

00:14:18,459 --> 00:14:23,260
converters please just give me one of

00:14:20,830 --> 00:14:25,600
them just one of you give me I mean you

00:14:23,260 --> 00:14:29,350
can like a dead drop it on a USB Drive

00:14:25,600 --> 00:14:32,860
to me that's fine it's fine I don't care

00:14:29,350 --> 00:14:35,170
I bought a Raspberry Pi just to deal

00:14:32,860 --> 00:14:37,120
with dead drops just give it to me okay

00:14:35,170 --> 00:14:39,130
cuz there's no way I'm plugging one of

00:14:37,120 --> 00:14:44,350
those drives into my computer I have a

00:14:39,130 --> 00:14:46,480
Raspberry Pi for dead drops anyways

00:14:44,350 --> 00:14:48,730
these are the three so the top is from

00:14:46,480 --> 00:14:52,450
Sky safe these are effectively the

00:14:48,730 --> 00:14:53,020
canonical Sikkim F blocks against I save

00:14:52,450 --> 00:14:56,020
as a sponsor

00:14:53,020 --> 00:15:00,820
thank you very much sky safe gr Sikkim f

00:14:56,020 --> 00:15:02,500
is used heavily deep sig has released

00:15:00,820 --> 00:15:04,120
I'm talking about them in the third

00:15:02,500 --> 00:15:06,640
person I work at Deep sake we have

00:15:04,120 --> 00:15:08,980
released two sick of F tools lipstick

00:15:06,640 --> 00:15:11,260
enough and SIGGRAPH reporter Nathan west

00:15:08,980 --> 00:15:12,279
who's sitting over there and pretending

00:15:11,260 --> 00:15:15,010
like he's not listening I see you

00:15:12,279 --> 00:15:20,350
smiling is the designer and maintainer

00:15:15,010 --> 00:15:23,260
of these so things have grown really

00:15:20,350 --> 00:15:24,750
quickly and we've learned a lot and one

00:15:23,260 --> 00:15:28,630
of the things that we discovered is

00:15:24,750 --> 00:15:31,540
having solved those simple problems we

00:15:28,630 --> 00:15:35,279
now see really interesting new problems

00:15:31,540 --> 00:15:35,279
that we want to go tackle

00:15:35,950 --> 00:15:40,300
the first one is how can machines

00:15:38,220 --> 00:15:41,980
automatically understand metadata it's

00:15:40,300 --> 00:15:43,390
never seen before now I want to clear

00:15:41,980 --> 00:15:47,200
this is different than what I said

00:15:43,390 --> 00:15:51,460
previously this is this is different

00:15:47,200 --> 00:15:55,240
than for example the NTIA one of their

00:15:51,460 --> 00:16:00,040
extension namespaces describes their

00:15:55,240 --> 00:16:03,580
antenna systems right and they can give

00:16:00,040 --> 00:16:04,840
that and you can get NTIA specification

00:16:03,580 --> 00:16:06,610
for their antenna system subscribe and

00:16:04,840 --> 00:16:07,810
stick MF and go off and do your own

00:16:06,610 --> 00:16:08,950
tooling around that right and you could

00:16:07,810 --> 00:16:12,670
understand inti is taking back

00:16:08,950 --> 00:16:15,640
recordings I don't want to be able to do

00:16:12,670 --> 00:16:18,280
we want to be able to do this such that

00:16:15,640 --> 00:16:20,940
it's completely automatic like your

00:16:18,280 --> 00:16:23,290
machine can get a ciggy MEF recording

00:16:20,940 --> 00:16:26,290
realize there's data in it that it

00:16:23,290 --> 00:16:30,280
doesn't know how to parse or understand

00:16:26,290 --> 00:16:32,710
at the machine level go out grab the

00:16:30,280 --> 00:16:34,840
information it needs build it into its

00:16:32,710 --> 00:16:36,850
own parsing and processing system and

00:16:34,840 --> 00:16:39,940
then be able to use it in a meaningful

00:16:36,850 --> 00:16:43,840
way and I think we have the foundation

00:16:39,940 --> 00:16:46,410
to do that and I again got a plug Dana

00:16:43,840 --> 00:16:49,720
these topics are only possible because

00:16:46,410 --> 00:16:51,460
Dana is a librarian and it turns out you

00:16:49,720 --> 00:16:52,870
need somebody who knows library sciences

00:16:51,460 --> 00:16:55,590
to tackle these kinds of problems we're

00:16:52,870 --> 00:16:59,710
very very lucky that Dana got involved

00:16:55,590 --> 00:17:01,510
secondly how can we describe the opera's

00:16:59,710 --> 00:17:05,170
a the observation system in a way that's

00:17:01,510 --> 00:17:06,730
understandable to machines so this

00:17:05,170 --> 00:17:09,160
perhaps sounds a little bit up to so I'm

00:17:06,730 --> 00:17:12,640
gonna just try to describe it a little

00:17:09,160 --> 00:17:16,420
bit more so let's take the ATA for

00:17:12,640 --> 00:17:17,410
example and you take a you can sing

00:17:16,420 --> 00:17:22,150
about recording from the Allen telescope

00:17:17,410 --> 00:17:25,170
array or those 42 dishes and let's say

00:17:22,150 --> 00:17:29,460
the array is tracking a satellite pass

00:17:25,170 --> 00:17:34,030
right 42 dishes that are moving as

00:17:29,460 --> 00:17:35,080
you're recording this data so and all

00:17:34,030 --> 00:17:36,400
those dishes have a lot of different

00:17:35,080 --> 00:17:39,460
things going on right there they're

00:17:36,400 --> 00:17:41,470
cryogenic right have pictures like what

00:17:39,460 --> 00:17:42,910
there's a lot of different there's a lot

00:17:41,470 --> 00:17:45,820
of different types of information there

00:17:42,910 --> 00:17:47,650
so that makes sense to a human and you

00:17:45,820 --> 00:17:49,900
can in given the previous example that I

00:17:47,650 --> 00:17:51,520
said all right you can say okay

00:17:49,900 --> 00:17:52,630
like I want to know what that

00:17:51,520 --> 00:17:54,430
information looks like from these dishes

00:17:52,630 --> 00:17:58,180
given this pass and like we've solved

00:17:54,430 --> 00:17:59,530
that problem but does the Machine

00:17:58,180 --> 00:18:02,740
actually understand what that

00:17:59,530 --> 00:18:04,990
information means how how can you

00:18:02,740 --> 00:18:06,940
describe the opposite observational

00:18:04,990 --> 00:18:08,620
system such that a machine actually

00:18:06,940 --> 00:18:12,310
understands the experimental setup and

00:18:08,620 --> 00:18:13,750
how it impacted the data and this is

00:18:12,310 --> 00:18:16,050
especially interesting from the

00:18:13,750 --> 00:18:18,520
perspective of machine learning right

00:18:16,050 --> 00:18:23,100
what if we could teach a machine to

00:18:18,520 --> 00:18:26,380
understand why data looks like it does

00:18:23,100 --> 00:18:28,350
what are the effects of your

00:18:26,380 --> 00:18:31,450
observational system on that machine

00:18:28,350 --> 00:18:34,810
what does a recording mean to get to

00:18:31,450 --> 00:18:36,130
Mehta right like what actually is a

00:18:34,810 --> 00:18:38,200
recording if somebody gave you a whole

00:18:36,130 --> 00:18:39,220
bunch of recordings could you include

00:18:38,200 --> 00:18:40,900
metadata such that the machine

00:18:39,220 --> 00:18:44,860
automatically understood what those

00:18:40,900 --> 00:18:47,710
recordings were kind of think the answer

00:18:44,860 --> 00:18:52,690
is yes and I think we have discussions

00:18:47,710 --> 00:18:54,820
about how to get there so a lot of

00:18:52,690 --> 00:18:59,710
people of you have built Sigma systems

00:18:54,820 --> 00:19:01,630
they have and actually at NTIA zai smart

00:18:59,710 --> 00:19:03,070
conference last year I I happen to

00:19:01,630 --> 00:19:06,460
mention that we have all these things

00:19:03,070 --> 00:19:09,190
that works right and I think NCIA got a

00:19:06,460 --> 00:19:10,600
little scared or like wait wait you're

00:19:09,190 --> 00:19:13,450
gonna you're gonna break you're gonna

00:19:10,600 --> 00:19:15,700
break the government systems when you

00:19:13,450 --> 00:19:20,160
change all of this I promise you we

00:19:15,700 --> 00:19:23,590
won't we have a plan so Sigma fuses

00:19:20,160 --> 00:19:25,750
semantic versioning does this laser

00:19:23,590 --> 00:19:27,820
pointer work all right semantic

00:19:25,750 --> 00:19:30,460
versioning so for anyone who's familiar

00:19:27,820 --> 00:19:34,300
with semantic versioning the fact that

00:19:30,460 --> 00:19:36,840
there's no one and the first digit means

00:19:34,300 --> 00:19:38,920
there's never been a stable release

00:19:36,840 --> 00:19:41,770
there's actually only if it ever been

00:19:38,920 --> 00:19:43,720
one release of Sigma ever which is 0 dot

00:19:41,770 --> 00:19:47,770
0 dot 1 that's what most people are

00:19:43,720 --> 00:19:49,480
using so that were in what currently in

00:19:47,770 --> 00:19:52,330
development like you go to the master

00:19:49,480 --> 00:19:54,730
branch of Sikkim F right it's released

00:19:52,330 --> 00:19:57,910
zero zero dot one and then all of the

00:19:54,730 --> 00:19:59,530
changes on top of it so everything that

00:19:57,910 --> 00:20:00,910
we've talked about so far in terms of

00:19:59,530 --> 00:20:02,830
our future vision for e wants to go math

00:20:00,910 --> 00:20:03,610
to go this ability to understand data

00:20:02,830 --> 00:20:08,410
it's never seen

00:20:03,610 --> 00:20:09,850
four right all of these concepts we've

00:20:08,410 --> 00:20:11,559
reached the conclusion that there's no

00:20:09,850 --> 00:20:15,970
way to do this without breaking

00:20:11,559 --> 00:20:17,559
backwards compatibility we have a bleed

00:20:15,970 --> 00:20:20,070
way of way to get there and we have to

00:20:17,559 --> 00:20:24,130
break compatibility so here's the plan

00:20:20,070 --> 00:20:26,860
we're going to close the issues merge

00:20:24,130 --> 00:20:28,780
the PRS finish the discussion and make

00:20:26,860 --> 00:20:30,610
the structure that we have now

00:20:28,780 --> 00:20:34,750
rock-solid for the way everybody is

00:20:30,610 --> 00:20:36,429
currently using it we will tag 0.02 and

00:20:34,750 --> 00:20:38,500
then we're going to put that into

00:20:36,429 --> 00:20:40,480
maintenance mode there will be no

00:20:38,500 --> 00:20:42,490
further feature development on that

00:20:40,480 --> 00:20:46,150
branch within the canonical sigmaf

00:20:42,490 --> 00:20:49,960
repository we'll fix bugs etc hopefully

00:20:46,150 --> 00:20:54,100
there are no more typos but outside of

00:20:49,960 --> 00:20:57,280
that we will no longer develop devote

00:20:54,100 --> 00:20:59,110
development time to that structure and

00:20:57,280 --> 00:21:02,500
from there we're going to take off on

00:20:59,110 --> 00:21:03,520
0.10 we will break

00:21:02,500 --> 00:21:06,340
backwards-compatibility

00:21:03,520 --> 00:21:08,490
and the goal is to enable the sorts of

00:21:06,340 --> 00:21:11,640
things that I've been talking about here

00:21:08,490 --> 00:21:14,700
to involve new tools new structures and

00:21:11,640 --> 00:21:19,090
I think some really really cool research

00:21:14,700 --> 00:21:20,919
into how do you describe not just radio

00:21:19,090 --> 00:21:22,900
data which is the problem that we

00:21:20,919 --> 00:21:24,820
initially set out to solve but how do

00:21:22,900 --> 00:21:27,760
you describe radio systems how do you

00:21:24,820 --> 00:21:30,210
describe sensor environments alright how

00:21:27,760 --> 00:21:32,410
do you describe those in a way such that

00:21:30,210 --> 00:21:33,940
you don't have to tell another machine

00:21:32,410 --> 00:21:37,299
how to understand them they can learn

00:21:33,940 --> 00:21:41,919
over them on its own that's what we're

00:21:37,299 --> 00:21:42,940
headed so I usually give my like a year

00:21:41,919 --> 00:21:47,530
at least second math workshop that's an

00:21:42,940 --> 00:21:49,540
hour long I wanted to give this talk and

00:21:47,530 --> 00:21:50,650
not a workshop forum to get a larger

00:21:49,540 --> 00:21:52,390
audience because I know a lot of people

00:21:50,650 --> 00:21:54,460
are currently using Sikkim F and I want

00:21:52,390 --> 00:21:56,520
this to be super super clear that

00:21:54,460 --> 00:21:58,480
everybody knows how this is gonna happen

00:21:56,520 --> 00:21:59,799
so if you're currently using siga

00:21:58,480 --> 00:22:04,120
methods current you've already deployed

00:21:59,799 --> 00:22:06,400
it released 0.02 will be the final

00:22:04,120 --> 00:22:08,710
feature improvement release in the

00:22:06,400 --> 00:22:14,830
current structure and then we're gonna

00:22:08,710 --> 00:22:18,010
break it so please get involved I know

00:22:14,830 --> 00:22:21,400
there's lots of Sikkim F code out there

00:22:18,010 --> 00:22:22,830
just give it to me just just give it to

00:22:21,400 --> 00:22:25,480
me

00:22:22,830 --> 00:22:27,630
we need help with internal tooling if

00:22:25,480 --> 00:22:29,980
you don't super care about

00:22:27,630 --> 00:22:31,720
specifications and you want to come

00:22:29,980 --> 00:22:33,310
write code cool we need that too

00:22:31,720 --> 00:22:35,610
there's internally we need help with

00:22:33,310 --> 00:22:39,030
it's primarily Python and some web tools

00:22:35,610 --> 00:22:42,490
we need help with external tooling right

00:22:39,030 --> 00:22:44,070
so those are things like using Sigma and

00:22:42,490 --> 00:22:46,630
interesting Vinnie radio applications

00:22:44,070 --> 00:22:48,070
and discussion about this biscuit but

00:22:46,630 --> 00:22:50,320
about the specification itself is

00:22:48,070 --> 00:22:52,930
invaluable right

00:22:50,320 --> 00:22:55,420
every time somebody new comments on a

00:22:52,930 --> 00:22:58,030
sigma discussion topic which our github

00:22:55,420 --> 00:23:00,360
issues i get really excited because i

00:22:58,030 --> 00:23:02,800
mean somebody really cares and

00:23:00,360 --> 00:23:05,980
everybody's perspective matters here it

00:23:02,800 --> 00:23:07,060
is an open source specification so if

00:23:05,980 --> 00:23:09,010
there's something that you want to be

00:23:07,060 --> 00:23:12,250
able to accomplish with siga math

00:23:09,010 --> 00:23:16,630
especially in 0.10 now is the time to

00:23:12,250 --> 00:23:19,210
tell us all right tell us now because or

00:23:16,630 --> 00:23:20,440
the plan is for 0.10 to for us not to

00:23:19,210 --> 00:23:21,910
have to break backward compatibility

00:23:20,440 --> 00:23:24,340
again in the foreseeable future

00:23:21,910 --> 00:23:28,930
all right we want that to be the enabler

00:23:24,340 --> 00:23:30,310
for a long time so with that in did four

00:23:28,930 --> 00:23:33,510
minutes early I'm happy to take

00:23:30,310 --> 00:23:40,180
questions Wow next speaker get set up

00:23:33,510 --> 00:23:44,710
it's not that what's up Kyle she's using

00:23:40,180 --> 00:23:45,810
the look here I can I can pull them up

00:23:44,710 --> 00:23:50,530
real quick okay excellent

00:23:45,810 --> 00:23:56,680
all right can you reconstitute a signal

00:23:50,530 --> 00:23:59,740
from sig MF and so that compared against

00:23:56,680 --> 00:24:05,650
the original so Sigma F is written

00:23:59,740 --> 00:24:11,640
specifically to record the raw IQ prior

00:24:05,650 --> 00:24:16,120
to prior to any prior to any or sorry

00:24:11,640 --> 00:24:18,040
post any like radio preap I'm using post

00:24:16,120 --> 00:24:21,370
and pre in a really confusing way right

00:24:18,040 --> 00:24:23,440
so most radios right you have your RF

00:24:21,370 --> 00:24:25,720
front end that's coming through like an

00:24:23,440 --> 00:24:27,700
FPGA for example that's doing things to

00:24:25,720 --> 00:24:29,560
it right and then you get the data that

00:24:27,700 --> 00:24:31,149
you would processing in your radio right

00:24:29,560 --> 00:24:33,609
the goal is

00:24:31,149 --> 00:24:35,979
sigmaf is written to take that does that

00:24:33,609 --> 00:24:38,229
mean is to take the data post FPGA

00:24:35,979 --> 00:24:40,179
preeminent radio processing right

00:24:38,229 --> 00:24:42,969
because as soon as you start processing

00:24:40,179 --> 00:24:45,429
that data information theory says you've

00:24:42,969 --> 00:24:47,979
lost information right so for this to be

00:24:45,429 --> 00:24:48,489
fully reproducible we have to capture it

00:24:47,979 --> 00:24:51,159
at that point

00:24:48,489 --> 00:24:52,809
yeah what are the type of breaking

00:24:51,159 --> 00:24:56,049
changes that are happening with Singham

00:24:52,809 --> 00:24:57,190
f and like can you go into more detail

00:24:56,049 --> 00:24:59,109
about them and what we should expect

00:24:57,190 --> 00:25:01,749
yeah the biggest one is so sick of F is

00:24:59,109 --> 00:25:05,529
written in huh the biggest one is that

00:25:01,749 --> 00:25:08,799
Singham f is written to be JSON we are

00:25:05,529 --> 00:25:14,109
going to move to json-ld that's the

00:25:08,799 --> 00:25:17,619
biggest one this is probably the last

00:25:14,109 --> 00:25:20,200
question hi I'm Ben I'm Richard just

00:25:17,619 --> 00:25:23,559
curious can you save the executing flow

00:25:20,200 --> 00:25:26,289
graph in the metadata of Saiga math or

00:25:23,559 --> 00:25:28,659
could there be an extension to say kam F

00:25:26,289 --> 00:25:32,259
in which you can say the executing flow

00:25:28,659 --> 00:25:34,210
graph llamo yeah so we're having part of

00:25:32,259 --> 00:25:36,999
the discussion about describing an

00:25:34,210 --> 00:25:40,359
observational system net is necessarily

00:25:36,999 --> 00:25:42,460
the description of because right no SDR

00:25:40,359 --> 00:25:44,169
system is just Hardware right the system

00:25:42,460 --> 00:25:47,440
is hardware and software so your ability

00:25:44,169 --> 00:25:49,330
to archive a snapshot of that is a

00:25:47,440 --> 00:25:50,769
fundamental requirement so if you

00:25:49,330 --> 00:25:53,289
imagine for example to get a really

00:25:50,769 --> 00:25:55,929
complicated case something like RF sock

00:25:53,289 --> 00:25:58,149
or a tiling to RF sock part and the

00:25:55,929 --> 00:26:00,099
state of RF sock when it is recording

00:25:58,149 --> 00:26:03,489
data and how many different state

00:26:00,099 --> 00:26:05,259
variables exist right software impacting

00:26:03,489 --> 00:26:07,539
Hardware if you want to completely be

00:26:05,259 --> 00:26:09,489
able to reproduce that state of RF sock

00:26:07,539 --> 00:26:10,539
at any other point you have to have it

00:26:09,489 --> 00:26:13,119
captured in a way that's completely

00:26:10,539 --> 00:26:16,570
right archive didn't represent it right

00:26:13,119 --> 00:26:18,969
so yes this is the short long answer

00:26:16,570 --> 00:26:22,379
yeah okay I'm out of time thanks thank

00:26:18,969 --> 00:26:22,379

YouTube URL: https://www.youtube.com/watch?v=IdQ7SKj0ab0


