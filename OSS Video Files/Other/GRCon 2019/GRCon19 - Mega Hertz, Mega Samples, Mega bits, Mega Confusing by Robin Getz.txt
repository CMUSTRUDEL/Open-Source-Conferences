Title: GRCon19 - Mega Hertz, Mega Samples, Mega bits, Mega Confusing by Robin Getz
Publication date: 2019-11-05
Playlist: GRCon 2019
Description: 
	Mega Hertz, Mega Samples, Mega bits, Mega Confusing by Robin Getz

In this presentation we will review and discuss the data paths between the RF (air interface) and the payload (the data interface), and the common and overloaded terms and units throughout the chain, and how they are used/abused, using a few different examples â€“ Single Side Band (SSB), Frequency Shift Keying (FSK), single carrier Quadrature Phase Shift Keying (QPSK), multi carrier Orthogonal Frequency-Division Multiplexing (OFDM) - and what the introduction of advanced topics like Digital Pre-Distortion (DPD) and JESD204 means. Confusing terms like occupied RF bandwidth, synthesized RF bandwidth, single side bandwidth, Samples per second (with respect to converters), interpolation and decimation, samples per second (with respect to interface), symbols per second, bits per second, payload overhead, to bytes per second will all be explained with examples.

This discussion will be kept generic to all zero IF radios, and is applicable to all sorts of devices from the RTL-SDR, to the Analog Devices ADALM-PLUTO to the Naund bladeRF 2.0 to the National Instruments B200 and B210 family of devices.
Captions: 
	00:00:14,340 --> 00:00:18,420
so like Ben said my name's Robin gets

00:00:16,320 --> 00:00:20,849
I'm with analog devices I will be

00:00:18,420 --> 00:00:23,550
talking about is just some common terms

00:00:20,849 --> 00:00:25,460
definitions these kinds of things the

00:00:23,550 --> 00:00:30,390
focus of this talk is going to be

00:00:25,460 --> 00:00:35,630
everybody's favorite subjects a grammar

00:00:30,390 --> 00:00:37,469
you know nouns adjectives and numbers

00:00:35,630 --> 00:00:39,600
numbers and science numbers and

00:00:37,469 --> 00:00:42,379
mathematics and whenever I start these

00:00:39,600 --> 00:00:44,969
kind of talks which are more at the

00:00:42,379 --> 00:00:46,710
introductory level I wasn't right to go

00:00:44,969 --> 00:00:48,899
back to see what other people have done

00:00:46,710 --> 00:00:50,129
you know what we learned in high school

00:00:48,899 --> 00:00:51,329
or grade school that bird should

00:00:50,129 --> 00:00:54,359
probably everybody should have

00:00:51,329 --> 00:00:58,589
remembered so I found these great slides

00:00:54,359 --> 00:01:01,409
from the University of mass and were

00:00:58,589 --> 00:01:03,239
this grade 5 teacher miss Kitteridge is

00:01:01,409 --> 00:01:06,330
going over nouns verbs and adjectives

00:01:03,239 --> 00:01:07,350
and you know nouns are things things

00:01:06,330 --> 00:01:09,680
like flowers

00:01:07,350 --> 00:01:13,770
things like bandwidth things like

00:01:09,680 --> 00:01:16,020
samples adjectives are words that

00:01:13,770 --> 00:01:19,860
describe those nouns like the bowl is

00:01:16,020 --> 00:01:23,070
red and shiny or the Pluto has a maximum

00:01:19,860 --> 00:01:25,890
sample rate of 1 over 61 million 440

00:01:23,070 --> 00:01:29,310
thousand Hertz and again these are just

00:01:25,890 --> 00:01:31,649
nouns and adjectives but that would be a

00:01:29,310 --> 00:01:33,899
super complicated way to say things so

00:01:31,649 --> 00:01:35,219
we say you know mega samples per second

00:01:33,899 --> 00:01:38,280
and then because we're electrical

00:01:35,219 --> 00:01:40,020
engineers we try and put it in a nice

00:01:38,280 --> 00:01:43,740
acronym so nobody can understand it

00:01:40,020 --> 00:01:46,200
except other electrical engineers on the

00:01:43,740 --> 00:01:50,130
number side numbers and science versus

00:01:46,200 --> 00:01:52,350
mathematics numbers in science this is

00:01:50,130 --> 00:01:55,530
actually a presentation that was I guess

00:01:52,350 --> 00:01:57,450
funded by the haystack at MIT where they

00:01:55,530 --> 00:01:59,609
actually do a lot of outreach at the

00:01:57,450 --> 00:02:01,649
high school science level where they

00:01:59,609 --> 00:02:04,969
have numbers in science or have units

00:02:01,649 --> 00:02:07,710
numbers and mathematics don't have units

00:02:04,969 --> 00:02:10,039
numbers and science always have some

00:02:07,710 --> 00:02:12,660
associate uncertainty or ambiguity

00:02:10,039 --> 00:02:14,640
there's always like significant digits

00:02:12,660 --> 00:02:16,770
and numbers in mathematics every number

00:02:14,640 --> 00:02:19,350
in your calculator every number you can

00:02:16,770 --> 00:02:23,420
do radio every number in MATLAB that's

00:02:19,350 --> 00:02:27,450
significant to end numbers of digits and

00:02:23,420 --> 00:02:29,220
the kind of issue is you know you

00:02:27,450 --> 00:02:30,959
since science are typically driven from

00:02:29,220 --> 00:02:32,940
a measurement where numbers and

00:02:30,959 --> 00:02:36,930
mathematics are driven from concepts or

00:02:32,940 --> 00:02:39,720
ideas making measurements there's always

00:02:36,930 --> 00:02:40,980
uncertainty there's nothing is exact and

00:02:39,720 --> 00:02:43,560
we'll talk about that a little bit as

00:02:40,980 --> 00:02:45,360
well reporting a measurement usually

00:02:43,560 --> 00:02:47,670
when engineers and scientists report

00:02:45,360 --> 00:02:50,040
measurements they always say what the

00:02:47,670 --> 00:02:51,810
uncertainty is you know it's 199

00:02:50,040 --> 00:02:55,890
millimeters plus plus or minus one

00:02:51,810 --> 00:02:58,349
millimeter or no leader or millimeter or

00:02:55,890 --> 00:03:01,709
how many volts things are what the

00:02:58,349 --> 00:03:04,739
ambiguity is and significant figures are

00:03:01,709 --> 00:03:07,230
a big big issue so in the world of

00:03:04,739 --> 00:03:09,830
software-defined radio we have lots of

00:03:07,230 --> 00:03:12,980
mathematicians lots of scientists and

00:03:09,830 --> 00:03:17,549
lots of people who are bad at grammar

00:03:12,980 --> 00:03:20,220
and so there are a lot of people who

00:03:17,549 --> 00:03:21,750
like you know think of like you know we

00:03:20,220 --> 00:03:26,100
have our software engineering or

00:03:21,750 --> 00:03:27,510
hardware SOC DSP FPGA folks and you know

00:03:26,100 --> 00:03:29,910
communication theory is mostly

00:03:27,510 --> 00:03:32,220
mathematics it's everything is afloat

00:03:29,910 --> 00:03:36,390
infinite precision everything is exact

00:03:32,220 --> 00:03:39,590
and there's no units on anything you

00:03:36,390 --> 00:03:41,940
know what one of the units of entropy

00:03:39,590 --> 00:03:43,859
digital hardware you know everything is

00:03:41,940 --> 00:03:46,590
a fixed int they're gonna be weird

00:03:43,859 --> 00:03:49,079
numbers or weird formats fixed-point

00:03:46,590 --> 00:03:50,970
fractional x' you can have concepts in

00:03:49,079 --> 00:03:53,640
your digital logic which are four and a

00:03:50,970 --> 00:03:55,230
half bits you know and everything is

00:03:53,640 --> 00:03:56,940
exact because there's no air in your

00:03:55,230 --> 00:04:00,660
clock every when you get a clock that's

00:03:56,940 --> 00:04:02,040
one clock cycle an RF hardware guys were

00:04:00,660 --> 00:04:04,980
the best because we just make up our

00:04:02,040 --> 00:04:08,850
units you know because a DB is relative

00:04:04,980 --> 00:04:10,650
to what and nobody really knows and you

00:04:08,850 --> 00:04:13,350
know DBM is our relative to something

00:04:10,650 --> 00:04:16,100
exactly but a DB is relative to

00:04:13,350 --> 00:04:18,180
something else and nobody knows why and

00:04:16,100 --> 00:04:20,130
the other issue when it comes to clocks

00:04:18,180 --> 00:04:21,419
and things is we don't actually want to

00:04:20,130 --> 00:04:25,169
say how bad the hardware is so we just

00:04:21,419 --> 00:04:27,419
leave that out and software was

00:04:25,169 --> 00:04:29,910
everything as a buffer or a vector and

00:04:27,419 --> 00:04:31,979
you know each discipline feels their

00:04:29,910 --> 00:04:36,240
work is obvious and therefore leaves out

00:04:31,979 --> 00:04:39,200
the units so it actually this is a big

00:04:36,240 --> 00:04:40,500
challenge when we all try to communicate

00:04:39,200 --> 00:04:43,290
what

00:04:40,500 --> 00:04:45,750
we're talking about and when you're

00:04:43,290 --> 00:04:47,190
talking from your software colleagues or

00:04:45,750 --> 00:04:49,740
your comms theory colleagues or your

00:04:47,190 --> 00:04:52,350
FPGA implementation colleagues this can

00:04:49,740 --> 00:04:54,690
be a big problem so we'll just kind of

00:04:52,350 --> 00:04:57,600
like review some of these things you

00:04:54,690 --> 00:04:58,800
know from RF to antenna you know most of

00:04:57,600 --> 00:05:02,190
the things people talk about is either

00:04:58,800 --> 00:05:05,130
bandwidth or tuning range so bandwidth

00:05:02,190 --> 00:05:07,440
is the the difference between the upper

00:05:05,130 --> 00:05:10,080
and lower frequencies and then the

00:05:07,440 --> 00:05:12,180
tuning range so some people will define

00:05:10,080 --> 00:05:13,710
antennas as having bandwidth I kind of

00:05:12,180 --> 00:05:15,180
prefer to think of them having tuning

00:05:13,710 --> 00:05:18,300
range a lot of people think that's

00:05:15,180 --> 00:05:21,360
interchangeable but you know especially

00:05:18,300 --> 00:05:23,700
when antennas like this one has multiple

00:05:21,360 --> 00:05:25,830
bands in it or multiple tuning ranges

00:05:23,700 --> 00:05:28,140
that has been optimized for us this is

00:05:25,830 --> 00:05:29,910
an LTE antenna and it's optimized for

00:05:28,140 --> 00:05:31,950
eight twenty four to eight ninety four

00:05:29,910 --> 00:05:33,990
and from seventeen ten to twenty one 70

00:05:31,950 --> 00:05:35,910
it's hard to say what the band width of

00:05:33,990 --> 00:05:38,160
this antenna is is one number but it's

00:05:35,910 --> 00:05:40,250
easy to say what the tuning range is and

00:05:38,160 --> 00:05:43,430
then before we talk a little bit about

00:05:40,250 --> 00:05:46,050
some more things on the RF side

00:05:43,430 --> 00:05:47,630
pre-distortion so this everybody should

00:05:46,050 --> 00:05:49,860
be familiar this is a typical amplifier

00:05:47,630 --> 00:05:51,960
characteristics between power inputs and

00:05:49,860 --> 00:05:55,440
power output in DBM so this is relative

00:05:51,960 --> 00:05:59,310
to a milliwatts and as you see if I can

00:05:55,440 --> 00:06:01,550
make the pointer come on here as the

00:05:59,310 --> 00:06:03,840
power increases on the input side

00:06:01,550 --> 00:06:06,990
eventually we saturate and this knee

00:06:03,840 --> 00:06:09,750
here is called the 1p DB point if we can

00:06:06,990 --> 00:06:11,370
pre distort our signal kind of like have

00:06:09,750 --> 00:06:15,270
this compensation push it up the other

00:06:11,370 --> 00:06:17,340
way then the overall signal gets to be

00:06:15,270 --> 00:06:19,050
higher power and stays in this linear

00:06:17,340 --> 00:06:23,310
region which is what everybody wants and

00:06:19,050 --> 00:06:25,200
from a digital comms perspective if we

00:06:23,310 --> 00:06:26,280
have our nominal waveform and we push it

00:06:25,200 --> 00:06:30,150
through this this curve without

00:06:26,280 --> 00:06:32,340
pre-distortion will get a symbols that

00:06:30,150 --> 00:06:34,140
look like this if we pre distort things

00:06:32,340 --> 00:06:36,419
before and push it through that same

00:06:34,140 --> 00:06:38,070
power amplifier then our output actually

00:06:36,419 --> 00:06:42,240
becomes ideal and that's what the

00:06:38,070 --> 00:06:44,910
concept of digital pre-distortion is at

00:06:42,240 --> 00:06:47,550
a very high level so there's kind of two

00:06:44,910 --> 00:06:50,070
two approaches the most commonly used

00:06:47,550 --> 00:06:53,070
back approach has feedback and when you

00:06:50,070 --> 00:06:54,530
use feedback we need this five times the

00:06:53,070 --> 00:06:56,700
signal bandwidth

00:06:54,530 --> 00:06:59,460
because what we're really trying to do

00:06:56,700 --> 00:07:02,520
is suppress these third harmonics that

00:06:59,460 --> 00:07:05,160
are outside our signal of interest so

00:07:02,520 --> 00:07:07,770
here we have a signal we have our

00:07:05,160 --> 00:07:10,380
channel bandwidth and so typically this

00:07:07,770 --> 00:07:12,300
is the band width plus the guard band if

00:07:10,380 --> 00:07:13,980
you want to know what the actual channel

00:07:12,300 --> 00:07:16,020
is you we talking about occupied

00:07:13,980 --> 00:07:18,540
bandwidth so the difference between

00:07:16,020 --> 00:07:21,900
occupied bandwidth and channel bandwidth

00:07:18,540 --> 00:07:25,230
is the guard band so separating out your

00:07:21,900 --> 00:07:29,370
Jason channels and then if you are doing

00:07:25,230 --> 00:07:32,040
DP D oh so sorry if we have our area

00:07:29,370 --> 00:07:33,750
interface here so this is the LTE

00:07:32,040 --> 00:07:35,550
standards and they talk about channel

00:07:33,750 --> 00:07:37,860
bandwidths everybody talks about LTE 10

00:07:35,550 --> 00:07:40,560
but the occupied bandwidth is only 9

00:07:37,860 --> 00:07:46,350
megahertz because it's a lot easier to

00:07:40,560 --> 00:07:48,210
talk about LTE 15 then LTE 13.5 and then

00:07:46,350 --> 00:07:50,640
if we're doing digital pre-distortion we

00:07:48,210 --> 00:07:52,350
talk about synthesized bandwidth this is

00:07:50,640 --> 00:07:55,050
this is the bandwidth that our observer

00:07:52,350 --> 00:07:57,210
passed that feedback path and our Dax

00:07:55,050 --> 00:07:58,950
actually need to be able to handle even

00:07:57,210 --> 00:08:02,400
though the signal that we're sending out

00:07:58,950 --> 00:08:04,110
is still in our occupied bandwidth so

00:08:02,400 --> 00:08:05,940
when we're talking to each other and

00:08:04,110 --> 00:08:06,930
communicating these ideas and concepts

00:08:05,940 --> 00:08:09,950
we need to make sure that we're using

00:08:06,930 --> 00:08:13,710
the right words for some of these topics

00:08:09,950 --> 00:08:15,990
and including like a CLR which is a

00:08:13,710 --> 00:08:18,420
decent channel like how much of my

00:08:15,990 --> 00:08:21,030
energy is being in this adjacent channel

00:08:18,420 --> 00:08:24,000
and here is without DP D and with DP D

00:08:21,030 --> 00:08:27,330
or the digital pre-distortion and and

00:08:24,000 --> 00:08:30,990
again see here 45 DB that makes sense

00:08:27,330 --> 00:08:33,360
because it's a difference between here

00:08:30,990 --> 00:08:35,370
and here and this is measured in between

00:08:33,360 --> 00:08:37,650
the peak and it in the peak in the

00:08:35,370 --> 00:08:40,340
adjacent channel which is a difference

00:08:37,650 --> 00:08:43,770
in DBM which is measured in dB

00:08:40,340 --> 00:08:46,740
so this has been mainly for digital

00:08:43,770 --> 00:08:48,720
communication kinds of channels for

00:08:46,740 --> 00:08:51,270
analog signals like double sideband

00:08:48,720 --> 00:08:53,550
signal sideband we have the same kind of

00:08:51,270 --> 00:08:57,270
thing we have our channel bandwidth for

00:08:53,550 --> 00:08:58,800
double sideband we actually split things

00:08:57,270 --> 00:09:00,690
into an upper sideband and lower

00:08:58,800 --> 00:09:03,360
sideband because we're transmitting both

00:09:00,690 --> 00:09:05,580
on the same which is why it's so

00:09:03,360 --> 00:09:07,550
inefficient and then single sideband we

00:09:05,580 --> 00:09:09,500
usually just talk about the bandwidth of

00:09:07,550 --> 00:09:13,000
half of it because the other half

00:09:09,500 --> 00:09:16,100
disappears now in terms of the antenna

00:09:13,000 --> 00:09:17,720
even or the receiver piece we can have

00:09:16,100 --> 00:09:23,120
different kinds of noise we can have

00:09:17,720 --> 00:09:25,070
total noise receiver noise ADC noise L&A

00:09:23,120 --> 00:09:27,230
noise and all these things when somebody

00:09:25,070 --> 00:09:28,430
says my system is noisy the answer is

00:09:27,230 --> 00:09:31,790
like oh why

00:09:28,430 --> 00:09:33,410
what is noisy in your system it's not

00:09:31,790 --> 00:09:36,130
just we can't make these general

00:09:33,410 --> 00:09:40,339
characterizations when we talk about

00:09:36,130 --> 00:09:43,370
receiver specs you know here we have the

00:09:40,339 --> 00:09:44,870
folding from a DC's so this is typically

00:09:43,370 --> 00:09:46,730
the bandwidth that we'll talk about is

00:09:44,870 --> 00:09:49,850
half of the sampling frequency this is

00:09:46,730 --> 00:09:52,370
from Nyquist so we were talking to their

00:09:49,850 --> 00:09:55,670
nightwear you know Nyquist figured all

00:09:52,370 --> 00:09:59,750
this his sampling Theory when he was 35

00:09:55,670 --> 00:10:01,940
years old and I'm Way past 35 and I have

00:09:59,750 --> 00:10:05,950
not done that yet but Nyquist didn't

00:10:01,940 --> 00:10:09,529
have to worry about Xbox or Netflix so

00:10:05,950 --> 00:10:11,300
everybody's got that on their side but

00:10:09,529 --> 00:10:12,560
we need to make sure that when we're

00:10:11,300 --> 00:10:14,480
doing these things when we think of like

00:10:12,560 --> 00:10:15,980
Nyquist and sample rates we kind of

00:10:14,480 --> 00:10:19,520
understand what's going on inside the

00:10:15,980 --> 00:10:21,140
radio as well so if we think 30 mega

00:10:19,520 --> 00:10:23,390
samples a second coming out of the radio

00:10:21,140 --> 00:10:26,980
well does that mean the ATC is running

00:10:23,390 --> 00:10:29,390
at 30 mega samples a second if it was

00:10:26,980 --> 00:10:31,670
anything that was coming in at 15 mega

00:10:29,390 --> 00:10:33,800
samples a second with a leus back into

00:10:31,670 --> 00:10:35,240
our ADC are in our adjacent channels and

00:10:33,800 --> 00:10:38,450
that's what Mike was says this is the

00:10:35,240 --> 00:10:40,160
way it would work but what ends up

00:10:38,450 --> 00:10:43,220
happening is these filters right here

00:10:40,160 --> 00:10:46,279
are only third-order Butterworth's in

00:10:43,220 --> 00:10:49,279
the side that the chips that are using

00:10:46,279 --> 00:10:54,170
all these STRs so the droop that you get

00:10:49,279 --> 00:10:57,620
is not significant enough to get rid of

00:10:54,170 --> 00:10:59,990
all those aliases so if your ADC was

00:10:57,620 --> 00:11:02,300
running at 30 mega samples then you

00:10:59,990 --> 00:11:05,089
would see lots of signals show up from

00:11:02,300 --> 00:11:08,019
your zone to folding back you know

00:11:05,089 --> 00:11:10,430
luckily that's not the way things work

00:11:08,019 --> 00:11:13,250
what ends up happening is when we talk

00:11:10,430 --> 00:11:16,220
about an output data rate of 30 mega

00:11:13,250 --> 00:11:19,459
samples a second the ADC is running at

00:11:16,220 --> 00:11:20,760
245 because of these interpolation or

00:11:19,459 --> 00:11:22,590
decimation filters that are

00:11:20,760 --> 00:11:25,260
beside the radio we're inside the FPGA

00:11:22,590 --> 00:11:29,430
which allows the ATC to run it much much

00:11:25,260 --> 00:11:33,420
higher which gives us a first Nyquist

00:11:29,430 --> 00:11:37,080
band of 122 and even at 3 DB per decade

00:11:33,420 --> 00:11:40,290
that analog filter is down at minus 80

00:11:37,080 --> 00:11:42,620
and it'll continue to run down past

00:11:40,290 --> 00:11:45,390
there so that as your things fall back

00:11:42,620 --> 00:11:50,820
depending on a sensitive radio you would

00:11:45,390 --> 00:11:54,660
probably see them so we have you know

00:11:50,820 --> 00:11:58,110
our signal running here at 30 at 2:45 we

00:11:54,660 --> 00:12:02,630
set our analog filters to 19 which is

00:11:58,110 --> 00:12:07,140
the other so we have a 30 mega sample

00:12:02,630 --> 00:12:09,540
channel data rate or 30 megahertz

00:12:07,140 --> 00:12:13,260
channel band width here this is what

00:12:09,540 --> 00:12:17,460
we're capturing we set these filters to

00:12:13,260 --> 00:12:18,630
be half of the bandwidth times 1.25 so

00:12:17,460 --> 00:12:21,990
that we don't actually get that much

00:12:18,630 --> 00:12:25,170
droop in the pass band and we set them

00:12:21,990 --> 00:12:27,600
to 19 because the people who write this

00:12:25,170 --> 00:12:29,520
portion of the documentation think of

00:12:27,600 --> 00:12:31,650
this this is a 19 megahertz filter and

00:12:29,520 --> 00:12:36,270
this is a 19 megahertz filter but in

00:12:31,650 --> 00:12:38,610
aggregate it's a 30 mega stamp or a 30

00:12:36,270 --> 00:12:42,720
megahertz filter from an RF bandwidth

00:12:38,610 --> 00:12:44,310
versus a baseband bandwidth so depending

00:12:42,720 --> 00:12:46,050
upon who's writing the datasheet if it's

00:12:44,310 --> 00:12:47,850
the baseband guy he'll talking about

00:12:46,050 --> 00:12:50,850
baseband bandwidth if it's the RF guy

00:12:47,850 --> 00:12:52,170
he'll talk about RF bandwidth so when

00:12:50,850 --> 00:12:54,570
you look at data sheets and

00:12:52,170 --> 00:12:56,550
documentation you'll see things like 56

00:12:54,570 --> 00:12:58,880
megahertz but when you program these

00:12:56,550 --> 00:13:01,410
filters the most they go to is 28

00:12:58,880 --> 00:13:07,020
because one is RF bandwidth and one is

00:13:01,410 --> 00:13:09,810
baseband bandwidth it's half but this is

00:13:07,020 --> 00:13:13,530
still still has some issues because you

00:13:09,810 --> 00:13:16,170
know even a minus 80 DB or minus 80 DB

00:13:13,530 --> 00:13:18,780
of a suppression you will still see

00:13:16,170 --> 00:13:21,780
these aliases coming back which is why

00:13:18,780 --> 00:13:23,250
you won't need to make sure we have like

00:13:21,780 --> 00:13:25,670
we can get the same thing we can get 30

00:13:23,250 --> 00:13:28,980
mega samples a second here

00:13:25,670 --> 00:13:30,840
but by adding more decimation stages or

00:13:28,980 --> 00:13:32,490
more interpolation stages now we can

00:13:30,840 --> 00:13:34,260
actually make the deck or the ATC's in

00:13:32,490 --> 00:13:36,420
the DAC or on it like 491

00:13:34,260 --> 00:13:39,450
samples a second and we can see that

00:13:36,420 --> 00:13:42,450
this is much flatter and we also see

00:13:39,450 --> 00:13:44,040
that these knees here that were part of

00:13:42,450 --> 00:13:45,660
the noise shaping from the Sigma Delta

00:13:44,040 --> 00:13:47,340
have actually gone away we've actually

00:13:45,660 --> 00:13:51,300
pushed that out because we're running

00:13:47,340 --> 00:13:54,020
the ad C's much faster and so we still

00:13:51,300 --> 00:13:57,420
have our 30 mega megahertz of

00:13:54,020 --> 00:13:59,070
information coming back but we filter

00:13:57,420 --> 00:14:02,130
that to 20 mega Hertz because that's all

00:13:59,070 --> 00:14:04,650
we're really interested in and then when

00:14:02,130 --> 00:14:06,840
it comes to the aliasing now our alias

00:14:04,650 --> 00:14:10,200
has happened at 245 that's half the

00:14:06,840 --> 00:14:12,480
sample rate and they're at a minus 140

00:14:10,200 --> 00:14:14,880
DB of suppression so you won't see

00:14:12,480 --> 00:14:17,370
anything aliasing back so making sure

00:14:14,880 --> 00:14:19,530
these radios are actually set up

00:14:17,370 --> 00:14:22,890
properly is super important to your

00:14:19,530 --> 00:14:24,390
system and you're ensuring that your

00:14:22,890 --> 00:14:26,450
signals are gonna be the best they can

00:14:24,390 --> 00:14:29,760
be

00:14:26,450 --> 00:14:34,860
so a basic DPD system will complicate

00:14:29,760 --> 00:14:37,980
this more where we have like LTE 4.5 or

00:14:34,860 --> 00:14:40,980
LT 5 signal so there's four and a half

00:14:37,980 --> 00:14:43,040
megahertz of occupied bandwidth where

00:14:40,980 --> 00:14:47,370
the sample rate is seven point six eight

00:14:43,040 --> 00:14:49,110
it has an interpolation filter of 5x so

00:14:47,370 --> 00:14:51,210
that it actually goes up to 25 megahertz

00:14:49,110 --> 00:14:54,600
and that 25 megahertz is this

00:14:51,210 --> 00:14:57,180
synthesized bandwidth here and then the

00:14:54,600 --> 00:15:00,510
algorithm inside actually runs at this

00:14:57,180 --> 00:15:03,230
25 megahertz or at 38 mega samples a

00:15:00,510 --> 00:15:05,630
second even though we're really only

00:15:03,230 --> 00:15:08,370
transmitting four and a half megahertz

00:15:05,630 --> 00:15:10,290
so depending upon what you're talking

00:15:08,370 --> 00:15:13,350
about what you're trying to accomplish

00:15:10,290 --> 00:15:15,720
your data rates and bandwidth numbers

00:15:13,350 --> 00:15:18,600
can be much much different and here's

00:15:15,720 --> 00:15:21,450
actually just the numbers for the LTE so

00:15:18,600 --> 00:15:23,880
we have you know LTE 10 has a channel an

00:15:21,450 --> 00:15:26,010
occupied bandwidth of 9 megahertz but a

00:15:23,880 --> 00:15:29,820
sample rate of fifteen point three six

00:15:26,010 --> 00:15:31,230
mega samples per second and this is for

00:15:29,820 --> 00:15:33,660
over sampling which we'll talk about in

00:15:31,230 --> 00:15:38,270
a second and then you know that gets us

00:15:33,660 --> 00:15:41,550
to the the interface between the

00:15:38,270 --> 00:15:43,800
transceiver device and the FPGA so this

00:15:41,550 --> 00:15:45,630
typically runs at 2 or 4x the sample

00:15:43,800 --> 00:15:47,910
rate depending upon what chip it is this

00:15:45,630 --> 00:15:48,450
is pretty chip specific so some of them

00:15:47,910 --> 00:15:51,360
are DD

00:15:48,450 --> 00:15:53,310
meaning that for every clock and sure

00:15:51,360 --> 00:15:56,100
for every rising and falling edge to get

00:15:53,310 --> 00:15:58,079
to data transfers and this is typically

00:15:56,100 --> 00:16:00,950
the the clocks are in megahertz but them

00:15:58,079 --> 00:16:04,500
it's a megabits per second transfer and

00:16:00,950 --> 00:16:07,079
this would be for CMOS or LVDS for

00:16:04,500 --> 00:16:08,310
things like jazz D 204 which a couple

00:16:07,079 --> 00:16:10,649
people later will be talking about this

00:16:08,310 --> 00:16:13,740
this week they actually have a

00:16:10,649 --> 00:16:16,380
high-speed serialized interface so the

00:16:13,740 --> 00:16:18,810
data comes from the high-speed it comes

00:16:16,380 --> 00:16:21,389
from the ADC it gets translated into a

00:16:18,810 --> 00:16:24,209
high-speed surtees and then goes into

00:16:21,389 --> 00:16:25,829
the FPGA and gets deserialized so it

00:16:24,209 --> 00:16:28,040
actually has this entire stack which

00:16:25,829 --> 00:16:31,589
includes like an 8 B 10 B encoder and

00:16:28,040 --> 00:16:33,410
then here's actually a chart from a data

00:16:31,589 --> 00:16:36,930
sheet that says okay for 80 megahertz

00:16:33,410 --> 00:16:38,940
band width signal you have a hundred and

00:16:36,930 --> 00:16:41,880
twenty two point eight eight mega

00:16:38,940 --> 00:16:47,370
samples per second and you have a Jess D

00:16:41,880 --> 00:16:52,350
line rate of 491 point five two megabits

00:16:47,370 --> 00:16:56,730
per second or sorry 4915 megabits per

00:16:52,350 --> 00:17:00,720
second so the ratio between your sample

00:16:56,730 --> 00:17:03,839
rates and your line rate is times forty

00:17:00,720 --> 00:17:07,500
and where that comes from is each sample

00:17:03,839 --> 00:17:10,470
here is 16 bits you have IQ so that's 32

00:17:07,500 --> 00:17:13,410
bits you have a 8 B 10 B encoder which

00:17:10,470 --> 00:17:15,329
is times 40 so you have 40 bits to

00:17:13,410 --> 00:17:18,110
transfer over so it's just sample rate

00:17:15,329 --> 00:17:20,160
times 40 and that's your lane rate and

00:17:18,110 --> 00:17:23,669
so some of these are going quite fast

00:17:20,160 --> 00:17:27,569
like these are going over 9 gigabits per

00:17:23,669 --> 00:17:29,220
second or 12 gigabits per second to just

00:17:27,569 --> 00:17:32,340
transfer the data from the transceiver

00:17:29,220 --> 00:17:35,429
chip to the FPGA and then there's the

00:17:32,340 --> 00:17:37,919
transport piece like USB 2 or USB 3 or

00:17:35,429 --> 00:17:41,580
PCIe or Ethernet that goes to your host

00:17:37,919 --> 00:17:44,700
and the transport like for example on

00:17:41,580 --> 00:17:47,280
pluto is USB 2 but one of the things on

00:17:44,700 --> 00:17:48,960
pluto is we have internal memory a lot

00:17:47,280 --> 00:17:51,270
of devices will have internal memory for

00:17:48,960 --> 00:17:53,460
buffering so we have like a hundred and

00:17:51,270 --> 00:17:55,230
twenty eight Meg of memory so depending

00:17:53,460 --> 00:17:58,409
upon the sample rate that's anywhere

00:17:55,230 --> 00:17:59,970
between a half a second and 61 seconds

00:17:58,409 --> 00:18:01,170
of memory you can store in the pluto

00:17:59,970 --> 00:18:02,820
itself without actually

00:18:01,170 --> 00:18:08,040
having to stream any information over at

00:18:02,820 --> 00:18:10,290
the PC so if you think of the Pluto it

00:18:08,040 --> 00:18:15,300
takes about four seconds to transfer 128

00:18:10,290 --> 00:18:17,220
mega cross the USB and USB is half

00:18:15,300 --> 00:18:19,110
duplex so full duplex is about half of

00:18:17,220 --> 00:18:22,290
that so you know we get about 32

00:18:19,110 --> 00:18:25,610
megabytes per second which lets us

00:18:22,290 --> 00:18:27,960
stream at about 7 mega samples a second

00:18:25,610 --> 00:18:32,910
one way so either transmit or receive

00:18:27,960 --> 00:18:35,430
you must be three is full duplex but you

00:18:32,910 --> 00:18:37,980
can still sort store half a second of

00:18:35,430 --> 00:18:40,380
information at sixty 1.44 and then

00:18:37,980 --> 00:18:42,030
slowly stream that out the device after

00:18:40,380 --> 00:18:43,590
you've captured it and a lot of people

00:18:42,030 --> 00:18:45,540
will do that to capture a signal and

00:18:43,590 --> 00:18:47,460
then analyze it later for like the

00:18:45,540 --> 00:18:52,530
signals intelligence or for just

00:18:47,460 --> 00:18:54,180
algorithm development for USB 3 or PCIe

00:18:52,530 --> 00:18:58,290
you know there's other platforms which

00:18:54,180 --> 00:19:00,660
is so you know this has 8 if you can

00:18:58,290 --> 00:19:04,500
have up to 8 RF channels that will

00:19:00,660 --> 00:19:07,100
sample at 245 mega samples second so you

00:19:04,500 --> 00:19:13,710
think that's from an IQ data rate that's

00:19:07,100 --> 00:19:16,220
490 1.5 2 megabytes per second and 980 3

00:19:13,710 --> 00:19:19,890
megabytes per second for each IQ Channel

00:19:16,220 --> 00:19:23,340
so times 8 and you can fill 4 gig in

00:19:19,890 --> 00:19:27,240
half a second and so a lot of these

00:19:23,340 --> 00:19:30,240
things are you know lots and lots of

00:19:27,240 --> 00:19:31,980
channels lots and lots of bandwidth lots

00:19:30,240 --> 00:19:33,630
and lots of sample rate it makes the

00:19:31,980 --> 00:19:37,500
communications problem or the transport

00:19:33,630 --> 00:19:40,350
problem harder and harder in terms of

00:19:37,500 --> 00:19:42,900
accurate significant digits so this is

00:19:40,350 --> 00:19:45,840
the way this is just a PLL inside these

00:19:42,900 --> 00:19:48,450
chips we have a reference clock and then

00:19:45,840 --> 00:19:50,580
we have this fractional PLL so the

00:19:48,450 --> 00:19:54,000
fractional pol is basically has a

00:19:50,580 --> 00:19:57,000
fractional part divided by some

00:19:54,000 --> 00:20:00,170
typically prime number and then an

00:19:57,000 --> 00:20:04,050
integer part times that so if our

00:20:00,170 --> 00:20:07,170
reference clock is 40 megahertz to see

00:20:04,050 --> 00:20:08,760
what the smallest RF step we can do is

00:20:07,170 --> 00:20:11,310
we just take you know 40 megahertz

00:20:08,760 --> 00:20:13,170
divided by 1 over this modulus number

00:20:11,310 --> 00:20:14,730
right here and we get you know four

00:20:13,170 --> 00:20:15,840
point seven seven four six

00:20:14,730 --> 00:20:18,419
something something something something

00:20:15,840 --> 00:20:21,809
hurts and that's the step increments

00:20:18,419 --> 00:20:24,000
that we can do which is great when you

00:20:21,809 --> 00:20:26,370
have a 40 megahertz that oscillator

00:20:24,000 --> 00:20:29,790
exactly 40 megahertz oscillator because

00:20:26,370 --> 00:20:32,640
then you can get 2.4 gig you end up with

00:20:29,790 --> 00:20:35,700
an integer of 60 and a fractional part

00:20:32,640 --> 00:20:40,230
of 0 and then you get a PLL of exactly 2

00:20:35,700 --> 00:20:42,990
point 4 0 0 0 0 0 0 0 0 0 megahertz if

00:20:40,230 --> 00:20:47,390
you find you have a clock with the 39.99

00:20:42,990 --> 00:20:49,710
9 8 8 9 8 megahertz reference clock

00:20:47,390 --> 00:20:53,010
because your reference clocks are not

00:20:49,710 --> 00:20:56,880
going to be a 100% accurate they may

00:20:53,010 --> 00:20:59,730
have a few ppm offset you'll never

00:20:56,880 --> 00:21:02,549
actually be able to get to 2.4 because

00:20:59,730 --> 00:21:06,690
you need to have a this this piece in

00:21:02,549 --> 00:21:09,480
here needs to be 1280 3.45 which you can

00:21:06,690 --> 00:21:11,540
never get to so if fractional PLL's are

00:21:09,480 --> 00:21:14,429
not floating-point PLL's

00:21:11,540 --> 00:21:16,860
there's still integer pieces that will

00:21:14,429 --> 00:21:18,120
have step sizes and that's why you'll

00:21:16,860 --> 00:21:19,650
see a lot of radios when you want to

00:21:18,120 --> 00:21:21,360
program that's something too something

00:21:19,650 --> 00:21:24,270
won't actually be able to hit those

00:21:21,360 --> 00:21:26,820
numbers so depending upon what you're

00:21:24,270 --> 00:21:30,059
trying to do and what your reference

00:21:26,820 --> 00:21:32,820
clock is you know your carrier offsets

00:21:30,059 --> 00:21:35,040
and you're more advanced DSP algorithms

00:21:32,820 --> 00:21:37,799
should be able to take care of a 4 Hertz

00:21:35,040 --> 00:21:40,140
offset and that's what kind of everybody

00:21:37,799 --> 00:21:41,850
expects now when it comes to sample rate

00:21:40,140 --> 00:21:44,520
it's a little bit more complicated

00:21:41,850 --> 00:21:46,290
because we have baseband clocks which

00:21:44,520 --> 00:21:48,390
have the same kind of thing so you know

00:21:46,290 --> 00:21:50,640
our baseband clock and kind of go in 19

00:21:48,390 --> 00:21:53,730
make hurt steps but then we can actually

00:21:50,640 --> 00:21:56,309
the ATC clock has another divider which

00:21:53,730 --> 00:21:58,500
we can divide from 2 to the 1 to 2 to

00:21:56,309 --> 00:22:01,350
the 6 so we can actually get like point

00:21:58,500 --> 00:22:05,640
two nine nine Hertz steps in the ATC

00:22:01,350 --> 00:22:07,980
clock but the the basement pilla clock

00:22:05,640 --> 00:22:09,690
rate has bounds that it needs to hit and

00:22:07,980 --> 00:22:10,980
the ADC clock rate has bounds that it

00:22:09,690 --> 00:22:15,360
needs to hit so it's not always quite

00:22:10,980 --> 00:22:17,549
this this low but you can kind of see

00:22:15,360 --> 00:22:19,860
that there's there are integer steps

00:22:17,549 --> 00:22:22,410
even if they're fractional numbers and

00:22:19,860 --> 00:22:25,409
no API in the world that I know of

00:22:22,410 --> 00:22:28,290
actually reports these things as

00:22:25,409 --> 00:22:30,750
floating-point numbers so this would

00:22:28,290 --> 00:22:34,200
would get dis reported as two point four

00:22:30,750 --> 00:22:35,790
zero zero zero zero zero two and it may

00:22:34,200 --> 00:22:38,790
just truncate it may round it maybe

00:22:35,790 --> 00:22:41,280
floor it really depends on that API what

00:22:38,790 --> 00:22:43,890
the API looks like and you'll always be

00:22:41,280 --> 00:22:46,170
half a Hertz off or point eight Hertz

00:22:43,890 --> 00:22:48,000
off or point two Hertz off those kinds

00:22:46,170 --> 00:22:51,180
of things which for some algorithms may

00:22:48,000 --> 00:22:52,650
not be a problem but for others maybe so

00:22:51,180 --> 00:22:56,400
the other kind of clock thing is

00:22:52,650 --> 00:22:57,930
stability you know which is there's kind

00:22:56,400 --> 00:22:59,340
of two aspects of that one of them was

00:22:57,930 --> 00:23:01,380
accuracy which we kind of just talked

00:22:59,340 --> 00:23:03,660
about then there's the drift pieces like

00:23:01,380 --> 00:23:06,090
the aging the drift the temperature then

00:23:03,660 --> 00:23:09,630
there's also this like movement like

00:23:06,090 --> 00:23:12,090
Doppler shift due to mobility so at six

00:23:09,630 --> 00:23:14,550
gigahertz at 150 kilometers now or you

00:23:12,090 --> 00:23:18,330
end up with a point 1 3 ppm offset just

00:23:14,550 --> 00:23:19,830
from driving and this I thought was like

00:23:18,330 --> 00:23:22,410
you know let's doesn't happen that much

00:23:19,830 --> 00:23:23,760
but you know this is actually what

00:23:22,410 --> 00:23:25,920
happens with airplanes so I'll be giving

00:23:23,760 --> 00:23:27,810
a talk later this afternoon about ATSB

00:23:25,920 --> 00:23:31,020
and you can actually measure this with a

00:23:27,810 --> 00:23:33,830
DSB because airplanes coming at you do

00:23:31,020 --> 00:23:36,030
travel 400 or 500 kilometers an hour and

00:23:33,830 --> 00:23:38,130
the frequency that they're transmitting

00:23:36,030 --> 00:23:40,470
at is one gigahertz so no matter what

00:23:38,130 --> 00:23:42,920
you are doing algorithm always needs to

00:23:40,470 --> 00:23:46,830
be able to handle this 1/2 ppm offset

00:23:42,920 --> 00:23:49,470
and accuracy in terms of magnitude you

00:23:46,830 --> 00:23:50,940
know we always a lot of us in the SDR

00:23:49,470 --> 00:23:56,130
community get the question of like okay

00:23:50,940 --> 00:23:59,280
well I've got exactly 1 DBM coming out

00:23:56,130 --> 00:24:01,470
of my source over here I run it through

00:23:59,280 --> 00:24:03,420
here I send it to my PC I get some

00:24:01,470 --> 00:24:06,360
numbers how do I relate those numbers

00:24:03,420 --> 00:24:11,970
and you know the answer is kind of like

00:24:06,360 --> 00:24:13,950
sounds great because there's relating

00:24:11,970 --> 00:24:16,290
those numbers getting that accuracy is

00:24:13,950 --> 00:24:20,280
you know software-defined radios are

00:24:16,290 --> 00:24:23,490
typically not sold as instrumentation so

00:24:20,280 --> 00:24:25,080
you can't confuse an is certifiable

00:24:23,490 --> 00:24:29,790
instrument like National Instruments

00:24:25,080 --> 00:24:31,590
would make with rtl-sdr they're much

00:24:29,790 --> 00:24:35,280
different so and a lot of it has to do

00:24:31,590 --> 00:24:37,320
with just with calibration so DBM so a

00:24:35,280 --> 00:24:40,110
DBM is an absolute number

00:24:37,320 --> 00:24:41,639
it's a DB with respect to a mellow want

00:24:40,110 --> 00:24:44,549
a

00:24:41,639 --> 00:24:48,599
dbfs that's a made-up number by ATC

00:24:44,549 --> 00:24:51,599
manufacturers so we'll take so this is

00:24:48,599 --> 00:24:53,759
DB is a log ratio with respect to a mil

00:24:51,599 --> 00:24:57,149
awhat this is a log ratio with respect

00:24:53,759 --> 00:24:58,950
to full-scale of the ADC of the deck so

00:24:57,149 --> 00:25:02,159
we'll just take full-scale and say

00:24:58,950 --> 00:25:04,349
that's the 0 dbfs and anthing between is

00:25:02,159 --> 00:25:07,169
this less than that and the more bits

00:25:04,349 --> 00:25:09,450
you have the lower you can go and then

00:25:07,169 --> 00:25:14,039
there's just a ratio which is with

00:25:09,450 --> 00:25:17,849
respect to something and so what we talk

00:25:14,039 --> 00:25:21,329
about in our data sheets is like our SSI

00:25:17,849 --> 00:25:25,139
receive strength signal and it will be

00:25:21,329 --> 00:25:29,729
in DB it will be linear it will be

00:25:25,139 --> 00:25:33,419
monotonic but 1 DBM of increase will not

00:25:29,729 --> 00:25:34,979
give you 1 DB of our SSI change there

00:25:33,419 --> 00:25:37,559
may be a correction factor you have to

00:25:34,979 --> 00:25:38,940
apply there and the correction factor is

00:25:37,559 --> 00:25:43,769
probably different at different ello

00:25:38,940 --> 00:25:45,239
frequencies and so factory calibrations

00:25:43,769 --> 00:25:50,099
are necessary to limit the amount of

00:25:45,239 --> 00:25:51,809
variation and so there's calibrations

00:25:50,099 --> 00:25:53,309
that you can do on all your radios but

00:25:51,809 --> 00:25:57,869
you need to calibrate it to something

00:25:53,309 --> 00:26:00,239
else so even us in our lab we will have

00:25:57,869 --> 00:26:03,599
Pluto's that have been calibrated and

00:26:00,239 --> 00:26:05,249
are actually from a power input

00:26:03,599 --> 00:26:06,749
perspective are as good as some of the

00:26:05,249 --> 00:26:08,869
instruments we have but we use those

00:26:06,749 --> 00:26:10,829
instruments to calibrate the Pluto's and

00:26:08,869 --> 00:26:12,899
if we were to do that on every single

00:26:10,829 --> 00:26:16,769
one then the prices would be so high and

00:26:12,899 --> 00:26:18,839
nobody would want to buy it and then so

00:26:16,769 --> 00:26:20,039
all of these things can be done it just

00:26:18,839 --> 00:26:24,570
takes time and you have to calibrate

00:26:20,039 --> 00:26:28,589
them to something else so whether it's

00:26:24,570 --> 00:26:31,499
TX power or TX power versus frequency or

00:26:28,589 --> 00:26:34,109
ln a step game or RSSI on the

00:26:31,499 --> 00:26:36,450
transmitter or the receive side or even

00:26:34,109 --> 00:26:38,999
the accuracy the clock all these things

00:26:36,450 --> 00:26:40,289
can be calibrated can be corrected but

00:26:38,999 --> 00:26:42,690
typically just nobody wants to pay for

00:26:40,289 --> 00:26:44,339
it unless you are buying something from

00:26:42,690 --> 00:26:45,649
a National Instruments or rodents warts

00:26:44,339 --> 00:26:47,759
or Tektronix or those kinds of things

00:26:45,649 --> 00:26:52,529
where you actually have a calibration

00:26:47,759 --> 00:26:53,970
sticker on it the other piece is samples

00:26:52,529 --> 00:26:57,090
2 symbols

00:26:53,970 --> 00:26:58,409
so if we have these symbols coming at

00:26:57,090 --> 00:27:01,559
the right time for a single carrier

00:26:58,409 --> 00:27:04,620
system if we sample exactly at the right

00:27:01,559 --> 00:27:06,440
place we'll get a nice constellation if

00:27:04,620 --> 00:27:09,509
we sample at the wrong place

00:27:06,440 --> 00:27:12,509
we'll get not a nice constellation and

00:27:09,509 --> 00:27:16,019
if we sample a worse places we get worse

00:27:12,509 --> 00:27:18,840
constellations this is why most systems

00:27:16,019 --> 00:27:21,120
will over sample this is why they'll

00:27:18,840 --> 00:27:22,919
have match filters this is why the

00:27:21,120 --> 00:27:27,240
digital coms guys note like didn't know

00:27:22,919 --> 00:27:29,309
all the math but then so samples per

00:27:27,240 --> 00:27:31,379
symbol depending upon the modulation

00:27:29,309 --> 00:27:33,269
scheme and algorithm you use could be

00:27:31,379 --> 00:27:34,950
eight samples to one symbol or two

00:27:33,269 --> 00:27:36,539
samples to one symbol to try and correct

00:27:34,950 --> 00:27:39,389
for this timing correct for these

00:27:36,539 --> 00:27:42,480
modulation pieces and then we have the

00:27:39,389 --> 00:27:45,470
one symbol is how many bits out depends

00:27:42,480 --> 00:27:49,200
on the modulation scheme you're using

00:27:45,470 --> 00:27:51,240
and and the error correction you're

00:27:49,200 --> 00:27:53,490
doing so we have you know Rob bits

00:27:51,240 --> 00:27:59,190
including overhead versus pelo bits

00:27:53,490 --> 00:28:00,330
payload bits excluding overhead and you

00:27:59,190 --> 00:28:02,639
know I think that kind of wraps things

00:28:00,330 --> 00:28:04,110
up but it's you know mathematics so I

00:28:02,639 --> 00:28:06,960
was talking to a faculty who told me

00:28:04,110 --> 00:28:08,639
like you know the value that the secret

00:28:06,960 --> 00:28:12,000
language engineers have to talk to each

00:28:08,639 --> 00:28:14,730
other is math and you know lawyers use

00:28:12,000 --> 00:28:16,320
Latin you know physicians do the same

00:28:14,730 --> 00:28:17,909
they make up things and then just make

00:28:16,320 --> 00:28:20,370
it a Latin word and nobody changes it

00:28:17,909 --> 00:28:22,169
but math is the language that engineers

00:28:20,370 --> 00:28:24,450
and scientists use but it only works

00:28:22,169 --> 00:28:26,759
when we're all clear like when we use

00:28:24,450 --> 00:28:29,370
units when we have significant fingers

00:28:26,759 --> 00:28:32,629
fake us when we have significant figures

00:28:29,370 --> 00:28:35,370
and use adjectives to describe our work

00:28:32,629 --> 00:28:37,799
it's super important so if you ever had

00:28:35,370 --> 00:28:39,360
like a you know lab report passed back

00:28:37,799 --> 00:28:41,850
to you by a faculty saying you know

00:28:39,360 --> 00:28:46,169
where's the units on your axis it's the

00:28:41,850 --> 00:28:46,830
same kinds of things so thanks very much

00:28:46,169 --> 00:28:50,580
for listening

00:28:46,830 --> 00:28:51,779
and hopefully that it helps remind

00:28:50,580 --> 00:28:54,240
people you know these kinds of things

00:28:51,779 --> 00:28:55,889
are important so that other people can

00:28:54,240 --> 00:29:00,990
build on the work that you're doing as

00:28:55,889 --> 00:29:03,050
you communicate outwards Thanks

00:29:00,990 --> 00:29:03,050

YouTube URL: https://www.youtube.com/watch?v=-mks0TAwqQU


