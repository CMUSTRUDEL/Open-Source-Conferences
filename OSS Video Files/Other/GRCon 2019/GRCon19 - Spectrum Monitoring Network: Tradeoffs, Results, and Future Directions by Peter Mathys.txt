Title: GRCon19 - Spectrum Monitoring Network: Tradeoffs, Results, and Future Directions by Peter Mathys
Publication date: 2019-11-05
Playlist: GRCon 2019
Description: 
	Spectrum Monitoring Network: Tradeoffs, Results, and Future Directions by Peter Mathys, Todd Schumann, Jeff Wepman, Mike Cotton

Due to its high inherent cost, there is limited use of professional grade test equipment in the field to monitor, or even identify, spectrum usage. Therefore, to supplement existing, high-accuracy measurements, there is a large interest in using lower-cost software defined radio (SDRs) receivers as replacements for the high-cost spectrum analyzers in RF measurement systems which are far less expensive to construct. Doing this allows measurements that are (1) continuous or at least much more frequent, (2) more densely located (in frequency and location), and (3) remotely controllable, and even allows additional measurements not practical using current solutions (e.g. simultaneous measurements of the same signal from many locations). However, there is an inherent trade-off in using the less expensive equipment to make these measurements in terms of price versus performance. Additionally, there can be a complex up-front characterization procedure necessary to ensure the accuracy of measurements.

Signal analyzers and SDRs can span several decades in terms of cost, some as low as $10, others over $10,000 or even $100,000. The obvious tradeoff between the different tiers is measurement accuracy/reliability versus the number of deployable sensors within a project budget. However, without a comparison between the tiers of SDRs, no intelligent determination can be made. In this report, we look at several of the key comparators between four representative signal analyzers/SDRs, representing a professional-grade (greater than $100,000), field-grade (greater than $10,000), middle-grade (~$1000), and economic-grade (less than $100). We identify expected performance when used as a spectrum monitor and any additional circuitry considerations required to ensure that the analyzers are accurately measuring the spectrum.

Presentation Outline
Spectrum Monitoring Goals
Signal Analyzer Architectures
Superheterodyne vs Direct Conversion
Examples of Signal Analyzers
Professional Grade: Keysight PxA N9030B
Field Grade: Keysight N6841A
Middle Grade: Ettus B210/B200 mini
Economic Grade: ADALM PLUTO Pluto SDR (Analog Devices)
SDRs on a Chip
Analog Devices 9361, 9363, 9364
Tradeoffs
Price
Performance
Size, Weight
Power Consumption
Sensor Density vs Performance Parameters
Example: Boulder Wireless Testbed (BWTB)
System Architecture
Sensor/RF Calibration
Data Management
User Access Management
Computer Resources
Single Board Computers
Example: Raspberry Pi 4
Data Storage/Transmission
Future Developments
Signal Analyzers for Specific Bands vs Fully Tunable
Using ML to Improve Monitoring
Captions: 
	00:00:15,019 --> 00:00:19,699
thank you so I've been working on

00:00:17,539 --> 00:00:23,750
spectrum monitoring for the last two

00:00:19,699 --> 00:00:25,310
years or so and I'm gonna give you some

00:00:23,750 --> 00:00:30,020
of the insights that I have been gaining

00:00:25,310 --> 00:00:32,570
over the time and let's see this goes to

00:00:30,020 --> 00:00:37,940
the next slide so the traditional way of

00:00:32,570 --> 00:00:41,329
doing this is actually using let's see

00:00:37,940 --> 00:00:43,910
if that Mouse here works yeah okay so

00:00:41,329 --> 00:00:45,469
the traditional way is using a big truck

00:00:43,910 --> 00:00:48,020
with about half a million worth of

00:00:45,469 --> 00:00:50,210
equipment and then you drive the truck

00:00:48,020 --> 00:00:52,670
to some location you make measurements

00:00:50,210 --> 00:00:54,649
for a months or so or maybe a week or so

00:00:52,670 --> 00:00:58,610
and then you bring those back eventually

00:00:54,649 --> 00:01:02,840
into the lab and the alternative to that

00:00:58,610 --> 00:01:05,540
is to have several smaller things that

00:01:02,840 --> 00:01:08,930
cost much less and you put those in

00:01:05,540 --> 00:01:11,149
various locations and you can actually

00:01:08,930 --> 00:01:13,189
then simultaneously look at the spectrum

00:01:11,149 --> 00:01:19,159
in many different places so that would

00:01:13,189 --> 00:01:22,670
be a network of configurable sensors and

00:01:19,159 --> 00:01:25,009
the real question is you might have a

00:01:22,670 --> 00:01:26,990
budget that can buy one of those things

00:01:25,009 --> 00:01:32,770
here on the left okay those are about

00:01:26,990 --> 00:01:36,229
100k plus or you can maybe buy 20 of

00:01:32,770 --> 00:01:39,079
single board computers and invest the Rs

00:01:36,229 --> 00:01:42,079
and make your own spectrum analyzer out

00:01:39,079 --> 00:01:46,039
of it and so the question is now what

00:01:42,079 --> 00:01:48,139
exactly are the trade-offs that you run

00:01:46,039 --> 00:01:50,509
into and what do we need to do for

00:01:48,139 --> 00:01:52,549
making this successful so we're going to

00:01:50,509 --> 00:01:57,109
look at radio receiver architectures

00:01:52,549 --> 00:01:58,609
spectrum signal analyzers spectrum /

00:01:57,109 --> 00:02:00,529
signal analyzers performance

00:01:58,609 --> 00:02:03,169
measurements and results and future

00:02:00,529 --> 00:02:06,310
directions and as we go along I will

00:02:03,169 --> 00:02:10,009
sprinkling some some measurement terms

00:02:06,310 --> 00:02:11,959
procedures there is more in the paper

00:02:10,009 --> 00:02:18,020
that actually goes with that it's a

00:02:11,959 --> 00:02:19,489
separate appendix there okay so first of

00:02:18,020 --> 00:02:22,069
all we look at radio receiver

00:02:19,489 --> 00:02:24,200
architectures we look at frequency

00:02:22,069 --> 00:02:25,910
translation as being one of the basic

00:02:24,200 --> 00:02:28,069
building blocks when you build radios

00:02:25,910 --> 00:02:30,709
and then

00:02:28,069 --> 00:02:32,269
two main architectures the Supra

00:02:30,709 --> 00:02:35,749
superheterodyne receiver

00:02:32,269 --> 00:02:41,359
SHR and direct conversion receivers ECR

00:02:35,749 --> 00:02:43,879
I did not put in the direct RF receiver

00:02:41,359 --> 00:02:47,439
technique that has been talked about by

00:02:43,879 --> 00:02:51,590
analog devices just a little bit ago

00:02:47,439 --> 00:02:54,859
okay so here is the frequency

00:02:51,590 --> 00:02:57,260
translation what you do is you you brace

00:02:54,859 --> 00:03:00,019
it basically have a multiplier and you

00:02:57,260 --> 00:03:02,329
multiply two sinusoids together in the

00:03:00,019 --> 00:03:05,870
simplest case and when you multiply two

00:03:02,329 --> 00:03:07,280
sinusoids together then you get out the

00:03:05,870 --> 00:03:09,739
sum frequency and the difference

00:03:07,280 --> 00:03:11,269
frequency at the output and one of the

00:03:09,739 --> 00:03:14,209
two you're going to filter out is that

00:03:11,269 --> 00:03:15,859
filter so graphically that's what this

00:03:14,209 --> 00:03:19,519
looks like

00:03:15,859 --> 00:03:21,469
up here is a signal that sort of

00:03:19,519 --> 00:03:25,430
represents graphically what could be a

00:03:21,469 --> 00:03:26,989
radio signal and I used for the positive

00:03:25,430 --> 00:03:28,699
and the negative frequencies different

00:03:26,989 --> 00:03:30,949
colors so that you can see how these

00:03:28,699 --> 00:03:33,290
combines together and then you multiply

00:03:30,949 --> 00:03:39,799
this with a mixer which is just a

00:03:33,290 --> 00:03:42,409
sinusoid and that mixer in the frequency

00:03:39,799 --> 00:03:44,659
domain is just the two impulses and you

00:03:42,409 --> 00:03:47,599
convolve those things together so the

00:03:44,659 --> 00:03:50,209
actual radio signal just gets placed to

00:03:47,599 --> 00:03:52,699
where the impulses on the right side and

00:03:50,209 --> 00:03:55,009
on the left side and so you're getting

00:03:52,699 --> 00:03:57,139
this radio signal shifted over to the

00:03:55,009 --> 00:03:59,180
right here to the positive frequencies

00:03:57,139 --> 00:04:01,519
and from this one you get it shifted

00:03:59,180 --> 00:04:04,669
over to the left frequencies and then it

00:04:01,519 --> 00:04:07,489
gets combined together of course it gets

00:04:04,669 --> 00:04:09,919
added together and so you get a new

00:04:07,489 --> 00:04:11,750
radio signal with actually reversed

00:04:09,919 --> 00:04:13,009
positive and negative frequencies but

00:04:11,750 --> 00:04:16,729
that doesn't matter for a real-time

00:04:13,009 --> 00:04:19,849
signal and for real value signal and you

00:04:16,729 --> 00:04:21,469
get the other one that's way out here so

00:04:19,849 --> 00:04:23,630
you get one which is at the higher

00:04:21,469 --> 00:04:27,020
frequency and at the lower frequency and

00:04:23,630 --> 00:04:28,909
you choose which one to keep for example

00:04:27,020 --> 00:04:31,789
with a low pass filter you keep the one

00:04:28,909 --> 00:04:34,430
here and close to zero with a high pass

00:04:31,789 --> 00:04:36,320
filter you keep those which are out at

00:04:34,430 --> 00:04:39,380
the higher frequency the sum of the two

00:04:36,320 --> 00:04:42,140
carrier frequencies

00:04:39,380 --> 00:04:43,790
and then you apply that principle to do

00:04:42,140 --> 00:04:46,520
something like the superheterodyne

00:04:43,790 --> 00:04:51,320
receiver that has been around for quite

00:04:46,520 --> 00:04:54,500
a while and the actual stage where you

00:04:51,320 --> 00:04:56,560
move things you shift things in the

00:04:54,500 --> 00:04:59,510
frequency domain is the stage here and

00:04:56,560 --> 00:05:00,860
then at the output the bandpass filter

00:04:59,510 --> 00:05:03,500
that's the filter that picks what

00:05:00,860 --> 00:05:04,730
frequency you want to continue with and

00:05:03,500 --> 00:05:07,790
that's typically the difference

00:05:04,730 --> 00:05:09,890
frequency and then you build a bandpass

00:05:07,790 --> 00:05:11,890
filter for that and an amplifier so

00:05:09,890 --> 00:05:14,330
that's what the intermediate frequency

00:05:11,890 --> 00:05:17,240
amplifier is in a conventional radio

00:05:14,330 --> 00:05:19,430
receiver design and there are some

00:05:17,240 --> 00:05:21,680
things that you have to pay attention to

00:05:19,430 --> 00:05:24,410
there is an image frequency and so you

00:05:21,680 --> 00:05:27,020
need a bandpass filter in front of that

00:05:24,410 --> 00:05:30,410
and then there is typically an lora

00:05:27,020 --> 00:05:32,060
noise amplifier at the RF domain and in

00:05:30,410 --> 00:05:34,610
front of that you need another bandpass

00:05:32,060 --> 00:05:36,590
filter so you add up essentially the

00:05:34,610 --> 00:05:38,210
whole thing to three bandpass filters if

00:05:36,590 --> 00:05:41,000
you want to do this right and that's

00:05:38,210 --> 00:05:44,870
just a single conversion superheterodyne

00:05:41,000 --> 00:05:46,940
receiver typical high precision

00:05:44,870 --> 00:05:50,320
instruments would use two or three

00:05:46,940 --> 00:05:52,490
stages of that so let's look at that

00:05:50,320 --> 00:05:55,700
actually first at the history and then

00:05:52,490 --> 00:06:00,290
we will look at some details of it so it

00:05:55,700 --> 00:06:02,510
was invented around 1918 there is a

00:06:00,290 --> 00:06:04,700
dispute on parents of who did it first

00:06:02,510 --> 00:06:07,340
but Armstrong is generally considered to

00:06:04,700 --> 00:06:09,140
be the one who really understood what he

00:06:07,340 --> 00:06:11,090
was doing whereas the other one was

00:06:09,140 --> 00:06:12,040
actually using the superheterodyne for a

00:06:11,090 --> 00:06:15,380
different purpose

00:06:12,040 --> 00:06:19,010
so what Armstrong actually wanted to do

00:06:15,380 --> 00:06:21,440
and that's written in his in his paper

00:06:19,010 --> 00:06:23,900
here a new system of shortwave

00:06:21,440 --> 00:06:28,310
amplification he really wanted to

00:06:23,900 --> 00:06:30,740
actually amplify the signals by a lot

00:06:28,310 --> 00:06:32,900
and he realized that this could not be

00:06:30,740 --> 00:06:34,730
done easily at RF frequencies that he

00:06:32,900 --> 00:06:36,620
needed to do that at lower frequencies

00:06:34,730 --> 00:06:41,510
and the reason why he wanted to in

00:06:36,620 --> 00:06:44,390
amplify them is because in any AM

00:06:41,510 --> 00:06:45,950
receiver you need diodes in some places

00:06:44,390 --> 00:06:48,410
so in this case there is a diode

00:06:45,950 --> 00:06:51,680
actually here it's a vacuum tube in his

00:06:48,410 --> 00:06:52,969
days and another diode here and then and

00:06:51,680 --> 00:06:55,610
the diode axis

00:06:52,969 --> 00:06:57,889
marrying device so if you take some

00:06:55,610 --> 00:07:00,379
small number and you square it that

00:06:57,889 --> 00:07:02,239
becomes an even smaller number and so

00:07:00,379 --> 00:07:04,879
that means that you lose intensity in

00:07:02,239 --> 00:07:07,459
your radio signal and what Armstrong

00:07:04,879 --> 00:07:11,209
wanted to do is to amplify this so that

00:07:07,459 --> 00:07:13,129
he can get proficient rectification of

00:07:11,209 --> 00:07:17,149
the signal or passing it through the

00:07:13,129 --> 00:07:21,139
diode okay here is a an example of how

00:07:17,149 --> 00:07:23,239
this was implemented in his day okay so

00:07:21,139 --> 00:07:27,139
now the image free considered I

00:07:23,239 --> 00:07:29,509
mentioned briefly here we can look at it

00:07:27,139 --> 00:07:32,360
graphically basically what you get here

00:07:29,509 --> 00:07:35,869
after the mixer is the difference of two

00:07:32,360 --> 00:07:37,339
frequencies so there is a frequency C

00:07:35,869 --> 00:07:40,459
which is a carrier frequency and

00:07:37,339 --> 00:07:42,499
frequency X and one of the two is going

00:07:40,459 --> 00:07:43,549
to be bigger than the other one but you

00:07:42,499 --> 00:07:47,289
can have it both ways

00:07:43,549 --> 00:07:49,489
and so that's what leads to two

00:07:47,289 --> 00:07:52,329
frequencies from the input that can

00:07:49,489 --> 00:07:54,979
actually pass through this if' amplifier

00:07:52,329 --> 00:07:58,909
graphically it looks like this if you

00:07:54,979 --> 00:08:00,860
assume here the the cyan portion is one

00:07:58,909 --> 00:08:05,119
radio signal with trying mark these

00:08:00,860 --> 00:08:08,539
triangles here and purple portion with

00:08:05,119 --> 00:08:11,509
rectangular spectrum is a second radio

00:08:08,539 --> 00:08:14,599
signal if they happen to be to the left

00:08:11,509 --> 00:08:17,689
and to the right of the actual mix of

00:08:14,599 --> 00:08:23,239
frequency FX here then when you mix them

00:08:17,689 --> 00:08:25,729
down by multiplying by FX that FX goes

00:08:23,239 --> 00:08:28,279
down to zero from the right and it goes

00:08:25,729 --> 00:08:30,709
up to zero from the left and so that

00:08:28,279 --> 00:08:32,029
produces this whole spectrum here

00:08:30,709 --> 00:08:33,979
shifted to the left

00:08:32,029 --> 00:08:37,550
this whole spectrum shifted to the right

00:08:33,979 --> 00:08:40,099
so it adds up at the low frequencies and

00:08:37,550 --> 00:08:42,079
you also get that a term at two times

00:08:40,099 --> 00:08:44,120
the frequency or at the some actually of

00:08:42,079 --> 00:08:46,160
the frequencies it's how it is out here

00:08:44,120 --> 00:08:49,670
and out here so only the middle portion

00:08:46,160 --> 00:08:54,050
is passed by the intermediate frequency

00:08:49,670 --> 00:08:56,540
amplifier but both the cyan portion here

00:08:54,050 --> 00:08:59,569
and the purple portion they actually get

00:08:56,540 --> 00:09:01,910
added together and go out through the

00:08:59,569 --> 00:09:04,250
if' amplifier and you only want to have

00:09:01,910 --> 00:09:06,300
one of those two signals so you need to

00:09:04,250 --> 00:09:09,600
have a bandpass filter in from

00:09:06,300 --> 00:09:13,410
of the mixer in order to reject one of

00:09:09,600 --> 00:09:16,650
the two okay and so that has been a

00:09:13,410 --> 00:09:19,200
problem in general for superheterodyne

00:09:16,650 --> 00:09:21,890
receivers that you need to suppress that

00:09:19,200 --> 00:09:24,690
and that actually requires that you have

00:09:21,890 --> 00:09:27,720
both of those filters here in general

00:09:24,690 --> 00:09:30,270
want to protect the input amplifier here

00:09:27,720 --> 00:09:32,820
and the other one to actually reject the

00:09:30,270 --> 00:09:34,410
image and you cannot for example leave

00:09:32,820 --> 00:09:37,290
out the second one here because

00:09:34,410 --> 00:09:38,370
otherwise you get all the noise from the

00:09:37,290 --> 00:09:40,980
preamplifier

00:09:38,370 --> 00:09:43,500
from the image channel even though you

00:09:40,980 --> 00:09:46,320
don't get a radio signal from that so

00:09:43,500 --> 00:09:48,330
that would reduce your the noise figure

00:09:46,320 --> 00:09:52,680
or actually increase the noise figure of

00:09:48,330 --> 00:09:55,260
your receiver okay so the advantages of

00:09:52,680 --> 00:09:57,720
the superheterodyne you have no local

00:09:55,260 --> 00:09:59,220
oscillator leakage we will see that when

00:09:57,720 --> 00:10:03,000
we talk about the direct conversion

00:09:59,220 --> 00:10:04,890
receiver then the RF band select filter

00:10:03,000 --> 00:10:07,050
suppresses out-of-band signals before

00:10:04,890 --> 00:10:09,810
the low noise amplifier and that's

00:10:07,050 --> 00:10:13,140
actually significant it's not affected

00:10:09,810 --> 00:10:15,840
by second-order non-linearities which

00:10:13,140 --> 00:10:19,050
i'm not going to explain right now and

00:10:15,840 --> 00:10:21,120
then disadvantages you need to recheck

00:10:19,050 --> 00:10:24,120
that image frequency you need three

00:10:21,120 --> 00:10:27,420
bandpass filters if you do it right some

00:10:24,120 --> 00:10:30,690
must be tunable if you wanna tune over a

00:10:27,420 --> 00:10:33,360
wide range and it's difficult to

00:10:30,690 --> 00:10:37,160
integrate the bandpass filters with high

00:10:33,360 --> 00:10:40,860
Q and high quality on a chip so

00:10:37,160 --> 00:10:44,100
basically you cannot do system on a chip

00:10:40,860 --> 00:10:46,020
in implementation in an easy way like

00:10:44,100 --> 00:10:47,760
for example the analog devices chip

00:10:46,020 --> 00:10:51,600
that's in many of the software-defined

00:10:47,760 --> 00:10:54,530
radios ok the direct conversion receiver

00:10:51,600 --> 00:10:59,400
also called homodyne or synchronize

00:10:54,530 --> 00:11:02,490
receiver here is a block diagram of the

00:10:59,400 --> 00:11:04,170
modern version so you you have also the

00:11:02,490 --> 00:11:06,060
front end with a bandpass filter low

00:11:04,170 --> 00:11:09,720
noise amplifier but then you mix down

00:11:06,060 --> 00:11:13,650
directly to baseband using a cosine and

00:11:09,720 --> 00:11:16,500
the sine as local oscillators and that

00:11:13,650 --> 00:11:19,230
gives you the I and Q outputs for of the

00:11:16,500 --> 00:11:19,640
IQ signal that you get in the end the in

00:11:19,230 --> 00:11:23,120
phase

00:11:19,640 --> 00:11:25,940
quadrature signals so you mix down

00:11:23,120 --> 00:11:27,350
directly to baseband you have a F equal

00:11:25,940 --> 00:11:31,580
to zero so that means you're gonna not

00:11:27,350 --> 00:11:33,980
gonna have an image frequency you filter

00:11:31,580 --> 00:11:35,780
at baseband typically using digital

00:11:33,980 --> 00:11:41,300
signal processing so you don't need any

00:11:35,780 --> 00:11:43,730
bulky filters or so at baseband and you

00:11:41,300 --> 00:11:48,220
do many more signal processing at RF

00:11:43,730 --> 00:11:52,820
frequencies here's the origins of that

00:11:48,220 --> 00:11:54,770
this one over here is 1924 and the idea

00:11:52,820 --> 00:11:58,790
was actually similar to what Armstrong

00:11:54,770 --> 00:12:02,150
did they wanted to increase the amount

00:11:58,790 --> 00:12:03,950
of energy or voltage that they have from

00:12:02,150 --> 00:12:07,730
a received signal so that they can do

00:12:03,950 --> 00:12:12,320
rectification using diodes here is for a

00:12:07,730 --> 00:12:15,580
parent of 1936 that shows basically the

00:12:12,320 --> 00:12:17,990
IQ version that we are used to now and

00:12:15,580 --> 00:12:19,840
but it has been used for something

00:12:17,990 --> 00:12:23,750
different it has been used to actually

00:12:19,840 --> 00:12:26,230
suppress overlapping side bands in radio

00:12:23,750 --> 00:12:29,330
signals that are too close together

00:12:26,230 --> 00:12:31,310
okay the modern form of the DC are with

00:12:29,330 --> 00:12:34,130
explicit IQ signals that the output

00:12:31,310 --> 00:12:38,480
seems to have appeared only about late

00:12:34,130 --> 00:12:42,110
1970s or early 1980s and part of that is

00:12:38,480 --> 00:12:44,330
that highly selective low-pass filters

00:12:42,110 --> 00:12:46,090
are actually expensive to make when you

00:12:44,330 --> 00:12:49,640
have to make them in the analog domain

00:12:46,090 --> 00:12:52,040
with Elton C's they are easier with op

00:12:49,640 --> 00:12:53,450
amps and they are of course very easy

00:12:52,040 --> 00:12:56,450
when you have stages of signal

00:12:53,450 --> 00:12:58,250
processing available okay here's the

00:12:56,450 --> 00:13:00,770
complex valid form of the direct

00:12:58,250 --> 00:13:02,780
conversion receiver instead of using

00:13:00,770 --> 00:13:04,250
sine and cosine separately you just

00:13:02,780 --> 00:13:07,670
simply multiply by the complex

00:13:04,250 --> 00:13:11,180
exponential e to the minus J 2 pi F X

00:13:07,670 --> 00:13:13,700
and using the Fourier transform relation

00:13:11,180 --> 00:13:16,490
for frequency shift that brings it down

00:13:13,700 --> 00:13:19,670
to baseband and here is a graphical

00:13:16,490 --> 00:13:22,670
representation you have here radio

00:13:19,670 --> 00:13:25,400
signal schematic rate radio signal is

00:13:22,670 --> 00:13:27,500
shifted to the left by FX and then you

00:13:25,400 --> 00:13:30,500
use a low-pass filter so you keep only

00:13:27,500 --> 00:13:31,830
the purple portion or whatever was the

00:13:30,500 --> 00:13:34,970
positive frequencies

00:13:31,830 --> 00:13:38,130
in the frequency domain before

00:13:34,970 --> 00:13:40,050
advantages is again you don't need any

00:13:38,130 --> 00:13:42,920
you don't have any image frequency

00:13:40,050 --> 00:13:45,480
problem because the image frequency

00:13:42,920 --> 00:13:48,990
because the intermediate frequency is

00:13:45,480 --> 00:13:50,399
equal to zero most filtering is done at

00:13:48,990 --> 00:13:52,890
the baseband so you can use digital

00:13:50,399 --> 00:13:55,860
signal processing and only one local

00:13:52,890 --> 00:13:57,980
oscillator is needed so that results in

00:13:55,860 --> 00:14:00,839
less phase noise for example

00:13:57,980 --> 00:14:03,029
disadvantages is DC offset and Spurs

00:14:00,839 --> 00:14:07,130
that you get from a low leakage so if

00:14:03,029 --> 00:14:10,950
you go back once more here because this

00:14:07,130 --> 00:14:13,079
whole chain here all operates at the

00:14:10,950 --> 00:14:15,329
radio frequency that you want to receive

00:14:13,079 --> 00:14:17,399
and this one here is tuned to the radio

00:14:15,329 --> 00:14:19,920
frequency that you want to receive there

00:14:17,399 --> 00:14:21,510
can be feedback from here back into the

00:14:19,920 --> 00:14:23,940
low noise amplifier and goes through

00:14:21,510 --> 00:14:27,269
here and that leads to oscillations that

00:14:23,940 --> 00:14:30,560
then creates Spurs as they are called in

00:14:27,269 --> 00:14:36,060
the output spectrum and also you can get

00:14:30,560 --> 00:14:38,579
DC components IQ imbalance between the

00:14:36,060 --> 00:14:40,740
sine and the cosine oscillators which

00:14:38,579 --> 00:14:45,240
leads to crosstalk between the I and Q

00:14:40,740 --> 00:14:47,490
channels and another problem is flicker

00:14:45,240 --> 00:14:49,589
or 1 over F noise that you do not have

00:14:47,490 --> 00:14:54,570
at higher intermediate frequencies but

00:14:49,589 --> 00:14:58,310
once you go down to pan pair to baseband

00:14:54,570 --> 00:15:00,600
then you were operating with low

00:14:58,310 --> 00:15:02,130
frequencies and you're going to get some

00:15:00,600 --> 00:15:04,410
of that noise and that effects

00:15:02,130 --> 00:15:06,660
everything CMOS transistors are in the

00:15:04,410 --> 00:15:10,410
old days vacuum tubes they all are

00:15:06,660 --> 00:15:13,339
affected by 1 over F noise okay there

00:15:10,410 --> 00:15:15,839
are other effects for both the

00:15:13,339 --> 00:15:19,350
superheterodyne and the direct inversion

00:15:15,839 --> 00:15:21,959
receiver all amplifiers that you have at

00:15:19,350 --> 00:15:24,540
some point exhibit some nonlinearities

00:15:21,959 --> 00:15:27,120
and makes us of course are inherently

00:15:24,540 --> 00:15:28,740
non-linear devices so you're going to

00:15:27,120 --> 00:15:31,290
get nonlinearities through the whole

00:15:28,740 --> 00:15:35,540
chain third-order intermodulation

00:15:31,290 --> 00:15:37,980
products affect post software

00:15:35,540 --> 00:15:39,870
superheterodyne receiver and the direct

00:15:37,980 --> 00:15:42,270
conversion receiver second-order

00:15:39,870 --> 00:15:45,360
products which are called I am - they

00:15:42,270 --> 00:15:50,010
affect mostly the direct conversion

00:15:45,360 --> 00:15:52,600
phase noise of local oscillator effects

00:15:50,010 --> 00:15:54,850
superheterodyne more than the direct

00:15:52,600 --> 00:15:57,100
conversion receiver modern

00:15:54,850 --> 00:15:59,470
implementations use sampling and analog

00:15:57,100 --> 00:16:02,920
to digital conversion once you are at

00:15:59,470 --> 00:16:05,500
baseband and/or at intermediate

00:16:02,920 --> 00:16:07,930
frequency and then the nine dynamic

00:16:05,500 --> 00:16:10,120
range is directly affected by the number

00:16:07,930 --> 00:16:12,760
of bits of your analog to digital

00:16:10,120 --> 00:16:15,700
converter so the best that you can hope

00:16:12,760 --> 00:16:17,680
for with eight bits is about 50 dB it's

00:16:15,700 --> 00:16:20,170
usually less than that because there are

00:16:17,680 --> 00:16:23,830
other effects besides the quantization

00:16:20,170 --> 00:16:26,620
noise from the A to D converter okay so

00:16:23,830 --> 00:16:28,210
now this looks intimidating that's an

00:16:26,620 --> 00:16:31,270
attempt to talk about the

00:16:28,210 --> 00:16:33,280
intermodulation products and the main

00:16:31,270 --> 00:16:36,310
thing the main takeaway here is that

00:16:33,280 --> 00:16:38,920
when you go into the nonlinear region

00:16:36,310 --> 00:16:42,040
the way you model this is in the form of

00:16:38,920 --> 00:16:43,750
Taylor series of your signals so X of T

00:16:42,040 --> 00:16:46,810
here that's your signal that you wanna

00:16:43,750 --> 00:16:48,910
model and then you also get some x

00:16:46,810 --> 00:16:51,670
squared of T and some X to the three of

00:16:48,910 --> 00:16:54,100
T because of the non-linearity you also

00:16:51,670 --> 00:16:57,100
get a DC component here which is less

00:16:54,100 --> 00:17:00,700
important and each of those appear with

00:16:57,100 --> 00:17:02,800
certain factors and so what you do in

00:17:00,700 --> 00:17:05,350
order to test for that is you make a

00:17:02,800 --> 00:17:07,450
signal that has two tones to it like a

00:17:05,350 --> 00:17:11,260
frequency one and frequency two usually

00:17:07,450 --> 00:17:14,620
relatively close together and then when

00:17:11,260 --> 00:17:17,170
you take now the square of the signal

00:17:14,620 --> 00:17:18,970
then you're going to get the first same

00:17:17,170 --> 00:17:22,300
squared plus the second thing squared

00:17:18,970 --> 00:17:24,010
and then the product of the two of them

00:17:22,300 --> 00:17:25,740
and the product of the two of them

00:17:24,010 --> 00:17:30,130
that's this term that is shown here

00:17:25,740 --> 00:17:32,680
cosine of two pi F 1 minus F 2 T because

00:17:30,130 --> 00:17:34,030
F 1 and F 2 are close to each other that

00:17:32,680 --> 00:17:35,980
means that you're going to get the

00:17:34,030 --> 00:17:39,280
component at the low frequency that's

00:17:35,980 --> 00:17:41,140
why it affects the IRA conversion

00:17:39,280 --> 00:17:43,540
receiver and then you do the same thing

00:17:41,140 --> 00:17:46,060
by taking the X to the 3 of T so you

00:17:43,540 --> 00:17:48,580
take this sum of the two cosines raise

00:17:46,060 --> 00:17:50,680
it to the third power and then at some

00:17:48,580 --> 00:17:52,780
point you're going to get a term in

00:17:50,680 --> 00:17:56,350
there that contains two times the first

00:17:52,780 --> 00:17:57,920
frequency - the second frequency or two

00:17:56,350 --> 00:18:00,080
times the second frequency

00:17:57,920 --> 00:18:01,850
is the first frequency and because I

00:18:00,080 --> 00:18:03,920
have fun and after or similar to each

00:18:01,850 --> 00:18:08,330
other that will result in a frequency

00:18:03,920 --> 00:18:10,370
that's similar to either f1 or f2 and

00:18:08,330 --> 00:18:14,300
then to measure this whole thing you may

00:18:10,370 --> 00:18:17,180
have seen that in specifications IP 2

00:18:14,300 --> 00:18:18,650
and IP 2 3 measurements you basically

00:18:17,180 --> 00:18:21,680
try to figure out what those

00:18:18,650 --> 00:18:23,390
coefficients k2 in case we are and the

00:18:21,680 --> 00:18:25,280
way you do that is you look at those

00:18:23,390 --> 00:18:27,950
additional frequency components that are

00:18:25,280 --> 00:18:30,620
being generated and you relate them to

00:18:27,950 --> 00:18:33,290
what your actual frequency is of the

00:18:30,620 --> 00:18:35,570
transmitted signal ok so more details

00:18:33,290 --> 00:18:38,810
are in the paper that goes along with

00:18:35,570 --> 00:18:40,900
that in general larger values for IP 2

00:18:38,810 --> 00:18:43,580
and IPS we are better

00:18:40,900 --> 00:18:49,730
okay now looking at spectrum or signal

00:18:43,580 --> 00:18:53,150
analyzers here is a selection of a few

00:18:49,730 --> 00:18:56,210
old ones during World War 2 they used

00:18:53,150 --> 00:18:58,700
spectrographs as they were called which

00:18:56,210 --> 00:19:01,610
used a piece of paper that's rotating

00:18:58,700 --> 00:19:05,210
around and recording whatever the

00:19:01,610 --> 00:19:08,330
spectrum is for analyzing voice signals

00:19:05,210 --> 00:19:11,630
that in those days were encrypted by

00:19:08,330 --> 00:19:14,600
just shifting the frequency range of the

00:19:11,630 --> 00:19:18,860
of the signal this was the first

00:19:14,600 --> 00:19:22,640
calibrated to mega spectrum analyzer in

00:19:18,860 --> 00:19:25,940
1964 was a 2 megahertz sweep with this

00:19:22,640 --> 00:19:28,970
one is the control panel of the first

00:19:25,940 --> 00:19:31,670
spectrum analyzer that used the FFT for

00:19:28,970 --> 00:19:35,330
the computation of the spectrum and the

00:19:31,670 --> 00:19:40,580
thousand 24 point FFT took one second

00:19:35,330 --> 00:19:42,620
that was 1967 ok so set spectrum

00:19:40,580 --> 00:19:44,840
analyzers display signal power versus

00:19:42,620 --> 00:19:49,760
frequency there are two broad analyzer

00:19:44,840 --> 00:19:51,910
categories swept tuned ones and FFT

00:19:49,760 --> 00:19:55,340
based ones thus webtoon ones they show

00:19:51,910 --> 00:19:57,110
magnitude only and that is shown

00:19:55,340 --> 00:19:58,490
sequentially for different frequency

00:19:57,110 --> 00:20:02,360
bands so you don't get to see all

00:19:58,490 --> 00:20:05,630
frequency bands simultaneously the FFT

00:20:02,360 --> 00:20:08,030
based once they record basically a time

00:20:05,630 --> 00:20:09,290
sequence and then they use the FFT to

00:20:08,030 --> 00:20:11,090
compute what's happening in the

00:20:09,290 --> 00:20:11,630
frequency domain so you get to see both

00:20:11,090 --> 00:20:14,360
Magnus

00:20:11,630 --> 00:20:17,390
human face and you have all frequencies

00:20:14,360 --> 00:20:20,710
simultaneously most professional

00:20:17,390 --> 00:20:24,590
spectrum analyzers use superheterodyne

00:20:20,710 --> 00:20:26,930
receiver from dent and then the ultimate

00:20:24,590 --> 00:20:29,210
in a way of spectrum analyzers or vector

00:20:26,930 --> 00:20:31,760
signal analyzers which allow you to look

00:20:29,210 --> 00:20:34,760
both at the power but also analyze

00:20:31,760 --> 00:20:38,120
modulation signals and other things from

00:20:34,760 --> 00:20:41,770
the directly from the IQ samples okay

00:20:38,120 --> 00:20:44,840
here is a block diagram of a modern

00:20:41,770 --> 00:20:48,200
spectrum spectrum analyzer that's the

00:20:44,840 --> 00:20:49,670
one that is a hundred K plus so the

00:20:48,200 --> 00:20:52,070
thing that you can see here there is a

00:20:49,670 --> 00:20:54,770
filter here there's another filter here

00:20:52,070 --> 00:20:57,290
there is a local oscillator here there's

00:20:54,770 --> 00:20:59,930
a motor local oscillator and mixer

00:20:57,290 --> 00:21:01,900
there are three stages of mixing here so

00:20:59,930 --> 00:21:04,490
this is a triple conversion

00:21:01,900 --> 00:21:06,500
superheterodyne receiver there is

00:21:04,490 --> 00:21:09,170
another filter Bank here is four filters

00:21:06,500 --> 00:21:13,480
there's one with three filters so all

00:21:09,170 --> 00:21:16,610
those filters they are very big

00:21:13,480 --> 00:21:18,200
expensive time consuming to adjust and

00:21:16,610 --> 00:21:23,740
everything that's why this thing costs

00:21:18,200 --> 00:21:27,260
100k okay so now to reduce the cost

00:21:23,740 --> 00:21:29,210
software-defined radios used typically

00:21:27,260 --> 00:21:31,070
the direct conversion receiver

00:21:29,210 --> 00:21:33,590
architecture with the minimum of RF

00:21:31,070 --> 00:21:37,210
filtering in fact you know this first

00:21:33,590 --> 00:21:39,770
bandpass filter is usually omitted

00:21:37,210 --> 00:21:41,660
software-defined radios they can be

00:21:39,770 --> 00:21:43,670
implemented a system on a chip and we

00:21:41,660 --> 00:21:49,130
have seen the analog devices chip here

00:21:43,670 --> 00:21:51,170
in previous presentations the STRs are

00:21:49,130 --> 00:21:53,770
calibrated for frequency but not for

00:21:51,170 --> 00:21:56,450
power for frequency is relatively easy

00:21:53,770 --> 00:21:59,150
for power that would be much more

00:21:56,450 --> 00:22:02,090
time-consuming the higher end as the

00:21:59,150 --> 00:22:04,700
others have FPGAs for onboard digital

00:22:02,090 --> 00:22:06,830
signal processing most signal processing

00:22:04,700 --> 00:22:09,520
and all display functions take place in

00:22:06,830 --> 00:22:14,780
an external computer like for example

00:22:09,520 --> 00:22:16,820
radio STRs can act as vector signal

00:22:14,780 --> 00:22:21,290
analyzers because they gave you the time

00:22:16,820 --> 00:22:23,120
sequence output and the but the ADC

00:22:21,290 --> 00:22:24,550
resolution and bandwidth are typically

00:22:23,120 --> 00:22:27,190
more limited of those

00:22:24,550 --> 00:22:31,270
and they are of those hundred k spectrum

00:22:27,190 --> 00:22:34,480
analyzers okay so now here's a typical

00:22:31,270 --> 00:22:37,090
block diagram of one of those so you can

00:22:34,480 --> 00:22:40,750
see here this is the basic block diagram

00:22:37,090 --> 00:22:44,410
there is the receive antenna and then it

00:22:40,750 --> 00:22:46,090
goes into the 1893 sixty-four integrated

00:22:44,410 --> 00:22:49,600
circuit which which has a block diagram

00:22:46,090 --> 00:22:51,430
down here and then you you basically do

00:22:49,600 --> 00:22:54,550
the digital down conversion here's the

00:22:51,430 --> 00:22:59,140
receive pass and you goes with the FPGA

00:22:54,550 --> 00:23:01,690
and out through the USB three connector

00:22:59,140 --> 00:23:05,080
so what you notice here is that there is

00:23:01,690 --> 00:23:07,510
nothing like that RF band select filter

00:23:05,080 --> 00:23:09,550
in front of the low noise amplifier the

00:23:07,510 --> 00:23:14,500
low noise amplifier that's inside the ad

00:23:09,550 --> 00:23:16,360
ninety-three 64 chip okay so now that's

00:23:14,500 --> 00:23:18,550
just something to keep in mind as we now

00:23:16,360 --> 00:23:22,210
take a look at measurement of those

00:23:18,550 --> 00:23:26,560
things and performance of those things

00:23:22,210 --> 00:23:30,040
when you use STRs so first of all you

00:23:26,560 --> 00:23:32,110
have to calibrate your STR if you want

00:23:30,040 --> 00:23:34,600
to get any meaningful full results for

00:23:32,110 --> 00:23:36,390
spectral measurements and that means

00:23:34,600 --> 00:23:38,800
that you have to basically go from

00:23:36,390 --> 00:23:41,110
frequency to frequency roughly in about

00:23:38,800 --> 00:23:43,330
hundred megahertz steps we do that from

00:23:41,110 --> 00:23:46,750
from a hundred megahertz to 6 gigahertz

00:23:43,330 --> 00:23:48,250
and you have to note how much power do

00:23:46,750 --> 00:23:49,900
you give at the input how much power

00:23:48,250 --> 00:23:52,050
does come out of it and then you have to

00:23:49,900 --> 00:23:54,480
make a calibration table based on that

00:23:52,050 --> 00:23:57,310
then you want to measure the noise floor

00:23:54,480 --> 00:23:59,620
and the noise figure versus frequency

00:23:57,310 --> 00:24:02,410
you want to measure the 1 DB compression

00:23:59,620 --> 00:24:04,090
point versus frequency so that's the

00:24:02,410 --> 00:24:06,340
point where you start going into the

00:24:04,090 --> 00:24:07,690
nonlinear region and then there is a

00:24:06,340 --> 00:24:09,910
number of other things that you also

00:24:07,690 --> 00:24:11,920
might want to know about but those first

00:24:09,910 --> 00:24:14,260
three are probably the most important

00:24:11,920 --> 00:24:18,730
ones that you need to get the basic

00:24:14,260 --> 00:24:21,790
function as a spectrum analyzer okay so

00:24:18,730 --> 00:24:23,610
now talking a little bit about gain

00:24:21,790 --> 00:24:27,130
factor calibration and that's actually

00:24:23,610 --> 00:24:30,880
my only diagram here that I have which

00:24:27,130 --> 00:24:33,910
doesn't it does use no radio so you'll

00:24:30,880 --> 00:24:35,500
get your radio frequency signal in in

00:24:33,910 --> 00:24:37,240
this case hoo

00:24:35,500 --> 00:24:41,080
pluto SDR

00:24:37,240 --> 00:24:43,990
and then I split up here into real and

00:24:41,080 --> 00:24:46,120
imaginary part and then you have to

00:24:43,990 --> 00:24:49,480
multiply this by a constant that is to

00:24:46,120 --> 00:24:52,090
be determined and then you get in phase

00:24:49,480 --> 00:24:53,919
and the quarter to component out and you

00:24:52,090 --> 00:24:56,110
have to ask yourself now and how do I

00:24:53,919 --> 00:24:58,809
calibrate this thing you have one input

00:24:56,110 --> 00:25:00,580
here but you have two outputs because

00:24:58,809 --> 00:25:02,740
you're now operating in the complex low

00:25:00,580 --> 00:25:05,860
pass to me so what we do is show that

00:25:02,740 --> 00:25:07,720
output here have the same amplitude as

00:25:05,860 --> 00:25:10,230
this input but because you have two of

00:25:07,720 --> 00:25:12,940
those you're going to get too much

00:25:10,230 --> 00:25:15,370
possibly or should you make it such that

00:25:12,940 --> 00:25:19,840
you kind of evenly split up between this

00:25:15,370 --> 00:25:22,179
one into those two back here and after

00:25:19,840 --> 00:25:24,010
all there is going to be a frequency

00:25:22,179 --> 00:25:26,200
involved for the transmission so that's

00:25:24,010 --> 00:25:29,289
the CW signal here the continuous wave

00:25:26,200 --> 00:25:31,899
signal that runs at FC and then you have

00:25:29,289 --> 00:25:34,299
some frequency FX that's determined by

00:25:31,899 --> 00:25:35,860
the software-defined radio so you're

00:25:34,299 --> 00:25:38,559
actually not going to receive something

00:25:35,860 --> 00:25:41,620
at an exact frequency there will be no

00:25:38,559 --> 00:25:44,230
exact frequency or phase relationship

00:25:41,620 --> 00:25:47,200
between the transmitted signal and your

00:25:44,230 --> 00:25:50,320
SDR that's EXO receiving it so you're

00:25:47,200 --> 00:25:53,020
only really a good way of calibrating

00:25:50,320 --> 00:25:55,360
this is by actually looking at the power

00:25:53,020 --> 00:25:57,760
of this here which is the in-phase

00:25:55,360 --> 00:26:01,630
component squared plus the quadrature

00:25:57,760 --> 00:26:05,890
component squared and make that in will

00:26:01,630 --> 00:26:09,520
as a relation to this actual received

00:26:05,890 --> 00:26:12,610
power and then you adjust your constant

00:26:09,520 --> 00:26:14,950
K in here so that you you know what that

00:26:12,610 --> 00:26:17,529
relationship is between the power here

00:26:14,950 --> 00:26:20,080
and the power in the digital base and

00:26:17,529 --> 00:26:22,750
the digital baseband output

00:26:20,080 --> 00:26:24,820
okay this basically shows the

00:26:22,750 --> 00:26:27,760
computation for that but I'm going to

00:26:24,820 --> 00:26:30,370
skip it for timing reasons but

00:26:27,760 --> 00:26:32,710
essentially what you do is you you take

00:26:30,370 --> 00:26:37,929
you receive signal a times cosine 2pi

00:26:32,710 --> 00:26:40,510
fct which is a CW signal and you

00:26:37,929 --> 00:26:42,220
actually use a factor of two as one

00:26:40,510 --> 00:26:45,120
possibility of how you can calibrate

00:26:42,220 --> 00:26:48,340
this there is no single right way for

00:26:45,120 --> 00:26:51,040
calibrating so we chose to use a factor

00:26:48,340 --> 00:26:54,810
of two here so that the signal and base

00:26:51,040 --> 00:26:57,970
in the in-phase component is actually

00:26:54,810 --> 00:27:00,010
looking the same like the component that

00:26:57,970 --> 00:27:01,540
you actually received and that means

00:27:00,010 --> 00:27:04,240
then that you're gonna get actually

00:27:01,540 --> 00:27:06,970
twice the power in the complex baseband

00:27:04,240 --> 00:27:08,590
compared to what you had at the RF

00:27:06,970 --> 00:27:11,740
frequency and you have to just simply

00:27:08,590 --> 00:27:13,210
take that into account okay so here's

00:27:11,740 --> 00:27:15,910
what some of those measurements look

00:27:13,210 --> 00:27:19,450
like this is a mid-grade SDR something

00:27:15,910 --> 00:27:21,720
that cost about $1,000 or so so you see

00:27:19,450 --> 00:27:24,880
those those curves here those are the

00:27:21,720 --> 00:27:26,890
gain factor calibrations or the gain

00:27:24,880 --> 00:27:28,540
factor measurements for different

00:27:26,890 --> 00:27:31,240
frequencies that goes here from

00:27:28,540 --> 00:27:33,850
basically 100 megahertz to 6 gigahertz

00:27:31,240 --> 00:27:35,830
and the different colors is for the

00:27:33,850 --> 00:27:38,880
different settings that you put on the

00:27:35,830 --> 00:27:41,650
SDR of how much that SDR is amplifying

00:27:38,880 --> 00:27:44,950
then you look at the dynamic range that

00:27:41,650 --> 00:27:47,710
the whole thing covers so you have the

00:27:44,950 --> 00:27:49,570
curve here at the very bottom is the the

00:27:47,710 --> 00:27:52,120
noise power that you get when you use a

00:27:49,570 --> 00:27:54,490
Fourier transform and you use just the

00:27:52,120 --> 00:27:57,040
power in a particular bin in the Fourier

00:27:54,490 --> 00:27:59,730
transform the red one is if you just

00:27:57,040 --> 00:28:03,370
look at the noise floor across the whole

00:27:59,730 --> 00:28:06,870
bandwidth of the receiver and then the

00:28:03,370 --> 00:28:11,500
blue one at the top here that's the

00:28:06,870 --> 00:28:13,750
periphery result so meaning that you

00:28:11,500 --> 00:28:16,180
have not gone into any kind of overdrive

00:28:13,750 --> 00:28:18,160
yet so that you don't get to see any

00:28:16,180 --> 00:28:21,400
additional frequency components beside

00:28:18,160 --> 00:28:24,880
that continuous wave component that you

00:28:21,400 --> 00:28:27,490
put in and the red here at the top that

00:28:24,880 --> 00:28:29,920
is the one where you run into the 1 DB

00:28:27,490 --> 00:28:32,620
compression point so it's safe to say

00:28:29,920 --> 00:28:34,960
that the dynamic range is essentially

00:28:32,620 --> 00:28:38,260
between the two red curves in here and

00:28:34,960 --> 00:28:43,350
it gives you approximately 60 DB in this

00:28:38,260 --> 00:28:45,840
case this is an SDR that uses 12 bit

00:28:43,350 --> 00:28:49,990
analog to digital conversion that that's

00:28:45,840 --> 00:28:52,630
consistent with at 60 DB okay here is an

00:28:49,990 --> 00:28:57,040
economy grade SDR that one only goes

00:28:52,630 --> 00:28:59,950
from a hundred megahertz to about 1.7

00:28:57,040 --> 00:29:05,020
gigahertz so it's basically a one of

00:28:59,950 --> 00:29:09,070
those RTLS yours you see the K in fact

00:29:05,020 --> 00:29:11,350
here again for three actual gain

00:29:09,070 --> 00:29:13,720
settings on the and STR that we have

00:29:11,350 --> 00:29:15,310
been measuring the when it goes up here

00:29:13,720 --> 00:29:20,010
towards the higher frequencies that

00:29:15,310 --> 00:29:23,050
means that gain goes down of the actual

00:29:20,010 --> 00:29:25,840
device so that you have to increase the

00:29:23,050 --> 00:29:28,470
gain factor calibration and here's the

00:29:25,840 --> 00:29:32,260
dynamic range for that so that gives us

00:29:28,470 --> 00:29:33,940
something on the order of about oh this

00:29:32,260 --> 00:29:36,100
this doesn't show the upper and the

00:29:33,940 --> 00:29:38,830
lower limit that shows just the dynamic

00:29:36,100 --> 00:29:41,050
range itself so you can see here it's a

00:29:38,830 --> 00:29:43,540
little bit less than 50 DB which is

00:29:41,050 --> 00:29:48,820
consistent with an 8-bit a-to-d

00:29:43,540 --> 00:29:50,890
converter okay then once you have now

00:29:48,820 --> 00:29:54,670
your sensors then you put those into a

00:29:50,890 --> 00:29:58,900
network and that is called the spectrum

00:29:54,670 --> 00:30:03,550
characterization occupancy system and

00:29:58,900 --> 00:30:05,530
that's actually in tonight is in the

00:30:03,550 --> 00:30:11,230
process of becoming a night released

00:30:05,530 --> 00:30:13,060
Android at NTIA slash IPS we made the

00:30:11,230 --> 00:30:14,830
first reference implementation of that

00:30:13,060 --> 00:30:19,480
and we use that in the boulder wireless

00:30:14,830 --> 00:30:21,400
test bed in Colorado one of the features

00:30:19,480 --> 00:30:23,830
is that this is Hardware agnostic so you

00:30:21,400 --> 00:30:26,290
can integrate many different kinds of

00:30:23,830 --> 00:30:30,010
sensors into it it has a web-based

00:30:26,290 --> 00:30:32,080
interface for sensor tasking and the

00:30:30,010 --> 00:30:34,420
data is collected using cmf made

00:30:32,080 --> 00:30:37,240
metadata format and we have several

00:30:34,420 --> 00:30:39,550
senses of that installed in Boulder in

00:30:37,240 --> 00:30:41,410
particular several ones on the Cu Cu

00:30:39,550 --> 00:30:42,910
campus and so here are some of the

00:30:41,410 --> 00:30:47,110
results that we're getting from that

00:30:42,910 --> 00:30:50,530
this is from an LTE signal an uplink

00:30:47,110 --> 00:30:52,090
signal and you can see up here what the

00:30:50,530 --> 00:30:54,220
spectrum looks like so these are

00:30:52,090 --> 00:30:57,790
individual transmissions you see down

00:30:54,220 --> 00:30:59,470
here in the waterfall plot some of the

00:30:57,790 --> 00:31:02,550
resources that are being used for

00:30:59,470 --> 00:31:05,370
actually the Mobile's that are

00:31:02,550 --> 00:31:06,880
transmitting through the uplink channel

00:31:05,370 --> 00:31:09,370
okay then

00:31:06,880 --> 00:31:11,260
we put this out on several ones and I

00:31:09,370 --> 00:31:13,750
made simultaneous measurements actually

00:31:11,260 --> 00:31:16,300
during a Cu football game to see what

00:31:13,750 --> 00:31:18,059
would that look like and there are

00:31:16,300 --> 00:31:20,009
interesting things to see years

00:31:18,059 --> 00:31:22,139
this is actually one that looks good

00:31:20,009 --> 00:31:24,269
that's from a station that was far

00:31:22,139 --> 00:31:27,539
enough from the actual football field

00:31:24,269 --> 00:31:29,489
this one here actually looks kind of

00:31:27,539 --> 00:31:31,320
strange you can see that the noise floor

00:31:29,489 --> 00:31:34,619
which is somewhere out here

00:31:31,320 --> 00:31:38,729
is way too high it's about minus 110 dB

00:31:34,619 --> 00:31:43,769
whereas here in this case it's minus 120

00:31:38,729 --> 00:31:45,960
or even less than that and so once we

00:31:43,769 --> 00:31:48,960
looked at this in the time domain then

00:31:45,960 --> 00:31:51,089
we see this picture here so what you see

00:31:48,960 --> 00:31:53,309
on the left here that's basically just

00:31:51,089 --> 00:31:56,759
over driven okay the sensor actually

00:31:53,309 --> 00:31:59,519
happens to be in close proximity this e

00:31:56,759 --> 00:32:01,320
to the AT&T or Verizon downlink and so

00:31:59,519 --> 00:32:03,239
it's just over driving the whole thing

00:32:01,320 --> 00:32:05,519
whereas the sensor that was far enough

00:32:03,239 --> 00:32:07,769
away has a time domain thing that looks

00:32:05,519 --> 00:32:08,460
like this okay and so what does that

00:32:07,769 --> 00:32:13,259
mean

00:32:08,460 --> 00:32:15,690
it means that the input of the sensor is

00:32:13,259 --> 00:32:17,999
actually in this particular case it's

00:32:15,690 --> 00:32:21,210
it's blocked or desensitized by that

00:32:17,999 --> 00:32:24,169
strong signal that is out of paint okay

00:32:21,210 --> 00:32:26,549
and here is another example this is a

00:32:24,169 --> 00:32:29,489
frequency that's different from the one

00:32:26,549 --> 00:32:31,320
where that saturation occurs it's an

00:32:29,489 --> 00:32:33,599
uplink signal so you can see uplink

00:32:31,320 --> 00:32:35,729
signals here but here you don't see any

00:32:33,599 --> 00:32:39,869
of that and here you see that the noise

00:32:35,729 --> 00:32:42,359
floor is at minus 160 DB for the sensor

00:32:39,869 --> 00:32:44,339
that was far enough away and the noise

00:32:42,359 --> 00:32:48,779
floor for this one is something like

00:32:44,339 --> 00:32:50,759
minus 1 140 DB or so and so basically

00:32:48,779 --> 00:32:53,369
that means on the left side here that

00:32:50,759 --> 00:32:56,549
spectrum is useless that that part is

00:32:53,369 --> 00:32:58,979
useless because whatever signals might

00:32:56,549 --> 00:33:01,200
have been there is actually wiped out

00:32:58,979 --> 00:33:02,999
because of that signal that you have in

00:33:01,200 --> 00:33:06,450
a different band that is strong enough

00:33:02,999 --> 00:33:09,330
and OverDrive's the input amplified the

00:33:06,450 --> 00:33:12,419
RF input amplifier so the lesson to be

00:33:09,330 --> 00:33:14,969
learned is that when calibrated the

00:33:12,419 --> 00:33:17,639
selected make rate SDR actually performs

00:33:14,969 --> 00:33:20,339
very well gain noise figure and 1 DB

00:33:17,639 --> 00:33:23,940
compression point calibration versus

00:33:20,339 --> 00:33:25,889
frequencies necessary for each unit it's

00:33:23,940 --> 00:33:28,859
time consuming but it can be automated

00:33:25,889 --> 00:33:29,970
the major problem is actually over

00:33:28,859 --> 00:33:32,160
driving of the

00:33:29,970 --> 00:33:35,460
content by strong out-of-band signals

00:33:32,160 --> 00:33:37,500
and in a regular spectrum analyzer you

00:33:35,460 --> 00:33:40,080
have plenty of filters and stuff in

00:33:37,500 --> 00:33:42,120
there that you can switch in in order to

00:33:40,080 --> 00:33:43,950
avoid that and usually also have a

00:33:42,120 --> 00:33:46,200
larger dynamic range with a

00:33:43,950 --> 00:33:48,180
software-defined radio you don't have

00:33:46,200 --> 00:33:51,150
enough dynamic range and you don't have

00:33:48,180 --> 00:33:53,070
any protection of the input for out of

00:33:51,150 --> 00:33:53,670
pain signals so you actually have to put

00:33:53,070 --> 00:33:56,070
that there

00:33:53,670 --> 00:33:57,900
yourself and you just have to be aware

00:33:56,070 --> 00:34:01,110
of that once you do that then it

00:33:57,900 --> 00:34:03,480
actually works quite well okay some

00:34:01,110 --> 00:34:05,730
future directions we want to increase

00:34:03,480 --> 00:34:08,100
the number of sensors decrease cost and

00:34:05,730 --> 00:34:11,130
size and eventually we would like to

00:34:08,100 --> 00:34:12,600
actually put make a mobile network by

00:34:11,130 --> 00:34:13,950
putting some of those sensors for

00:34:12,600 --> 00:34:17,520
example in public transportation

00:34:13,950 --> 00:34:20,430
vehicles then we want to use the sensor

00:34:17,520 --> 00:34:22,260
network for real-time RF propagation

00:34:20,430 --> 00:34:23,910
measurements exploiting existing

00:34:22,260 --> 00:34:25,680
transmitters you know there's all kind

00:34:23,910 --> 00:34:28,200
of LTE transmitters around for example

00:34:25,680 --> 00:34:29,910
you can use those as transmitters and

00:34:28,200 --> 00:34:31,890
then if you have a network of sensors

00:34:29,910 --> 00:34:34,610
you can look at what the signals look

00:34:31,890 --> 00:34:39,330
like in different locations and you can

00:34:34,610 --> 00:34:42,900
infer measurements of the propagation in

00:34:39,330 --> 00:34:45,420
this way by synchronizing the reception

00:34:42,900 --> 00:34:47,190
of your signals then we want to use

00:34:45,420 --> 00:34:50,340
machine learning to deal with signs or

00:34:47,190 --> 00:34:53,100
imperfections besides that overdriving

00:34:50,340 --> 00:34:56,010
of the input amplifier another problem

00:34:53,100 --> 00:34:57,510
that you get of course is purse at some

00:34:56,010 --> 00:35:00,750
of the frequency and the DC component

00:34:57,510 --> 00:35:02,840
and one of our flicker noise so a

00:35:00,750 --> 00:35:05,820
machine learning algorithm can learn

00:35:02,840 --> 00:35:08,070
what impairments are of your software

00:35:05,820 --> 00:35:10,620
defined radio and hopefully deal with

00:35:08,070 --> 00:35:13,800
that and another use of machine learning

00:35:10,620 --> 00:35:16,250
that we want to pursue is to identify

00:35:13,800 --> 00:35:20,130
Network anomalies and locate

00:35:16,250 --> 00:35:24,540
unintentional and intentional RF

00:35:20,130 --> 00:35:27,570
intruders and last but not least I would

00:35:24,540 --> 00:35:30,540
like to thank my colleagues at IDS for

00:35:27,570 --> 00:35:32,690
actually working on that originally it

00:35:30,540 --> 00:35:37,040
was planned that we have a joint

00:35:32,690 --> 00:35:39,030
presentation of this but because of some

00:35:37,040 --> 00:35:41,970
reservations that the government has

00:35:39,030 --> 00:35:43,140
that you cannot endorse things and so

00:35:41,970 --> 00:35:45,390
forth

00:35:43,140 --> 00:35:47,339
it had it would have had to go through a

00:35:45,390 --> 00:35:49,710
review process that would have taken too

00:35:47,339 --> 00:35:52,320
long and so I couldn't include those

00:35:49,710 --> 00:35:55,740
people but as my role of university

00:35:52,320 --> 00:35:59,820
professor I'm actually relatively free

00:35:55,740 --> 00:36:02,040
to say both I mean to say so I guess

00:35:59,820 --> 00:36:03,780
that's it

00:36:02,040 --> 00:36:06,990
there's a lot of formulas probably in

00:36:03,780 --> 00:36:09,510
there but we did actually learn a lot of

00:36:06,990 --> 00:36:11,550
things and even though I thought of

00:36:09,510 --> 00:36:15,300
myself as being relatively knowledgeable

00:36:11,550 --> 00:36:17,250
in RF things and and STRs and so on I

00:36:15,300 --> 00:36:18,990
actually had to really sit down for

00:36:17,250 --> 00:36:21,089
about the week and and really think

00:36:18,990 --> 00:36:22,830
about all those things and I included

00:36:21,089 --> 00:36:24,869
that all in the paper that goes together

00:36:22,830 --> 00:36:28,920
with that so hopefully that will be of

00:36:24,869 --> 00:36:29,170
use to somebody thank you very much

00:36:28,920 --> 00:36:34,780
Peter

00:36:29,170 --> 00:36:34,780

YouTube URL: https://www.youtube.com/watch?v=aWt0ZqHQtak


