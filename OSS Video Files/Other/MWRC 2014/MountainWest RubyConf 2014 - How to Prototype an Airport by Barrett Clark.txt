Title: MountainWest RubyConf 2014 - How to Prototype an Airport by Barrett Clark
Publication date: 2020-01-24
Playlist: MWRC 2014
Description: 
	I transformed my office building into an airport using a combination of Ruby, Objective-C, and a number of hardware hacks. The goal was to prototype a better in-airport experience using a mixture of GPS and iBeacon technology to establish precise indoor geolocation.
This talk will run down the various stages of the project, an overview of outdoor vs indoor location technologies, and how the iPhone (and Android) devices currently handle location. I'll also discuss how I built a robust Ruby backend, and how I hacked some hardware together to create iBeacons.

Help us caption & translate this video!

http://amara.org/v/FG2W/
Captions: 
	00:00:24,920 --> 00:00:30,420
wow that's a great talks today I feel

00:00:27,570 --> 00:00:35,370
really honored to be on the stage with

00:00:30,420 --> 00:00:37,290
smart people I'm going to instead of

00:00:35,370 --> 00:00:39,660
talking about you know smart stuff I

00:00:37,290 --> 00:00:44,520
made a thing and I'm going to talk about

00:00:39,660 --> 00:00:47,460
that I am and I'm from Texas so do I

00:00:44,520 --> 00:00:52,890
have any fellow Texans here hop there

00:00:47,460 --> 00:00:54,960
all right okay so I am Barrett Clark and

00:00:52,890 --> 00:00:58,710
I'm not very creative you can find me

00:00:54,960 --> 00:01:01,829
twitter or github at Barrett Clark I've

00:00:58,710 --> 00:01:04,050
been a rubios for about five years a

00:01:01,829 --> 00:01:07,080
long time web developer I'm a recovering

00:01:04,050 --> 00:01:10,080
perler a long time but I've been to

00:01:07,080 --> 00:01:13,619
rubios for five years or so and more of

00:01:10,080 --> 00:01:16,619
a polyglot nowadays but i prefer Ruby

00:01:13,619 --> 00:01:18,869
where it makes sense and I work for

00:01:16,619 --> 00:01:24,000
Sabre labs which is part of Sabre does

00:01:18,869 --> 00:01:26,070
anybody know saber okay fantastic if

00:01:24,000 --> 00:01:29,790
you've heard of a little website called

00:01:26,070 --> 00:01:31,770
travelocity that's our biggest consumer

00:01:29,790 --> 00:01:33,540
facing brand but we are a global

00:01:31,770 --> 00:01:36,360
distribution system so if you have

00:01:33,540 --> 00:01:38,430
booked air travel or a hotel in North

00:01:36,360 --> 00:01:41,490
America chances are that inventory went

00:01:38,430 --> 00:01:42,810
through our infrastructure I don't mess

00:01:41,490 --> 00:01:45,600
with any of that stuff I work for Sabre

00:01:42,810 --> 00:01:48,030
labs where we experiment with technology

00:01:45,600 --> 00:01:51,240
and ideas and business models that might

00:01:48,030 --> 00:01:54,900
or might not make an impact in the near

00:01:51,240 --> 00:01:57,869
future in the travel industry so that's

00:01:54,900 --> 00:02:01,799
what's so great about me ok so this

00:01:57,869 --> 00:02:04,229
project began as an Android NFC Near

00:02:01,799 --> 00:02:07,160
Field Communication experiment like I

00:02:04,229 --> 00:02:09,479
said we mess around we experiment

00:02:07,160 --> 00:02:11,310
specifically that wristband that you see

00:02:09,479 --> 00:02:13,049
there on the far left we were thinking

00:02:11,310 --> 00:02:15,269
about how can we make the travel process

00:02:13,049 --> 00:02:18,900
better how can we make going through the

00:02:15,269 --> 00:02:21,450
airport suck less and we thought well

00:02:18,900 --> 00:02:23,790
maybe we can have tapping points or do

00:02:21,450 --> 00:02:26,130
all kinds of cool stuff so we came up

00:02:23,790 --> 00:02:28,609
with a big map we had a big discussion

00:02:26,130 --> 00:02:32,280
we came up with a lexicon to discover

00:02:28,609 --> 00:02:33,760
what are all the different stages in

00:02:32,280 --> 00:02:35,290
points

00:02:33,760 --> 00:02:41,769
during the travel process and none of

00:02:35,290 --> 00:02:43,629
that stuff is actually important but but

00:02:41,769 --> 00:02:45,519
it gives you an idea where where we were

00:02:43,629 --> 00:02:47,560
going and why we had the wristband and

00:02:45,519 --> 00:02:50,470
tap influence or the biometric sensor

00:02:47,560 --> 00:02:52,180
and and all that stuff but really what

00:02:50,470 --> 00:02:55,000
we wanted to do was answer a few

00:02:52,180 --> 00:02:58,590
questions how long has gonna take me to

00:02:55,000 --> 00:03:02,049
get through the security line really

00:02:58,590 --> 00:03:03,579
when do I didn't leave my house to get

00:03:02,049 --> 00:03:07,120
to the airport so that I don't miss my

00:03:03,579 --> 00:03:10,780
flight but from a business perspective

00:03:07,120 --> 00:03:12,400
more importantly the gate agent needs to

00:03:10,780 --> 00:03:15,220
know do I need to hold this flight for

00:03:12,400 --> 00:03:17,829
anyone you may not realize this but it

00:03:15,220 --> 00:03:19,989
costs the airline's money they pay fees

00:03:17,829 --> 00:03:22,359
if they are late pushing off from the

00:03:19,989 --> 00:03:23,950
gate and so they're not going to hold

00:03:22,359 --> 00:03:26,590
the flight for just anybody they're not

00:03:23,950 --> 00:03:29,049
gonna hold it for me but if they know

00:03:26,590 --> 00:03:31,480
that they have somebody who has status

00:03:29,049 --> 00:03:33,310
and they know that that person is in the

00:03:31,480 --> 00:03:35,319
building and they know that that person

00:03:33,310 --> 00:03:38,319
is made it through security and it's

00:03:35,319 --> 00:03:39,639
probably just minutes away then there's

00:03:38,319 --> 00:03:41,260
a pretty good chance that they're going

00:03:39,639 --> 00:03:43,000
to hold the flight for that person the

00:03:41,260 --> 00:03:44,530
gate agents are really really good at

00:03:43,000 --> 00:03:47,889
maximizing the efficiency and

00:03:44,530 --> 00:03:50,230
effectiveness of that flight and they're

00:03:47,889 --> 00:03:52,780
really good at their job and getting

00:03:50,230 --> 00:03:56,129
people where they need to be and in the

00:03:52,780 --> 00:04:03,489
airline industry status is everything

00:03:56,129 --> 00:04:05,739
status is everything then iOS 7 was

00:04:03,489 --> 00:04:09,160
announced and where we thought before

00:04:05,739 --> 00:04:12,160
that maybe NFC was was maybe going to be

00:04:09,160 --> 00:04:14,769
okay maybe I see it was a thing it was

00:04:12,160 --> 00:04:19,260
really really clear that from Apple's

00:04:14,769 --> 00:04:23,860
perspective NFC is not a thing and

00:04:19,260 --> 00:04:27,539
Bluetooth is is the future Bluetooth Low

00:04:23,860 --> 00:04:31,659
Energy specifically and so we pivoted

00:04:27,539 --> 00:04:34,389
okay so to answer those questions we

00:04:31,659 --> 00:04:38,020
need to know where are you where am i

00:04:34,389 --> 00:04:39,910
and location in general is pretty easy

00:04:38,020 --> 00:04:44,260
but indoor location is

00:04:39,910 --> 00:04:46,630
different animal so geolocation it's

00:04:44,260 --> 00:04:50,860
accurate within a few feet it's really

00:04:46,630 --> 00:04:54,460
easy to store in query postgres with the

00:04:50,860 --> 00:04:57,040
push GIS extension fantastic I've heard

00:04:54,460 --> 00:05:06,100
that you can do it with MySQL but why

00:04:57,040 --> 00:05:08,200
would you want to you've got postgres so

00:05:06,100 --> 00:05:11,890
it's easy to store easy to query it's

00:05:08,200 --> 00:05:14,920
pretty easy to set up you can roll it

00:05:11,890 --> 00:05:17,140
you know for source you can use any of

00:05:14,920 --> 00:05:21,610
the major package managers homebrew apt

00:05:17,140 --> 00:05:24,010
young and it's not difficult to set up

00:05:21,610 --> 00:05:27,070
on a server you can host it on Heroku

00:05:24,010 --> 00:05:29,410
with with little pain you don't you

00:05:27,070 --> 00:05:32,980
don't get to use the free database to do

00:05:29,410 --> 00:05:34,960
the postgres push GIS stuff and you have

00:05:32,980 --> 00:05:40,390
to play with Bill packs but still it's

00:05:34,960 --> 00:05:43,630
it's not hard to set up and host or you

00:05:40,390 --> 00:05:45,160
can just use the postgres tap from

00:05:43,630 --> 00:05:48,730
Heroku also and it's already got post

00:05:45,160 --> 00:05:52,350
GIS baked into it and the way your phone

00:05:48,730 --> 00:05:56,340
knows where am i is it takes a

00:05:52,350 --> 00:05:59,950
combination of GPS which from satellites

00:05:56,340 --> 00:06:02,440
Wi-Fi which is known access points that

00:05:59,950 --> 00:06:04,360
the Wi-Fi has a mac address and if that

00:06:02,440 --> 00:06:06,669
MAC address is known by your carrier

00:06:04,360 --> 00:06:08,620
whether it's the google or ATT or

00:06:06,669 --> 00:06:11,919
whoever then it knows where that access

00:06:08,620 --> 00:06:15,070
point is in cellular towers so that's

00:06:11,919 --> 00:06:16,660
geolocation indoor location satellites

00:06:15,070 --> 00:06:20,200
probably not visible so it's going off

00:06:16,660 --> 00:06:24,490
those access points and the third access

00:06:20,200 --> 00:06:27,669
the z-axis elevation is important we had

00:06:24,490 --> 00:06:30,669
a situation recently where we were we

00:06:27,669 --> 00:06:32,710
were at SFO baggage claim which the

00:06:30,669 --> 00:06:35,470
second level and we whipped out our

00:06:32,710 --> 00:06:37,990
phone to pull up an uber so we can get

00:06:35,470 --> 00:06:40,210
to the hotel and a few minutes later he

00:06:37,990 --> 00:06:43,510
calls this hey where are y'all I'm from

00:06:40,210 --> 00:06:46,120
Texas hey where are you we just got our

00:06:43,510 --> 00:06:47,890
bags for baggage claim well no you know

00:06:46,120 --> 00:06:50,410
so he was at the first level which is

00:06:47,890 --> 00:06:52,870
where uber told him to go latitude and

00:06:50,410 --> 00:06:53,360
longitude but we weren't there because

00:06:52,870 --> 00:06:55,370
we were

00:06:53,360 --> 00:06:57,439
second level so it's not where in the

00:06:55,370 --> 00:07:00,770
world am I it's where in the building am

00:06:57,439 --> 00:07:02,509
I that's indoor location and a fun fact

00:07:00,770 --> 00:07:04,069
Android can get more information from

00:07:02,509 --> 00:07:06,110
access points that it doesn't only think

00:07:04,069 --> 00:07:07,870
about has never connected to your iPhone

00:07:06,110 --> 00:07:10,610
is going to be a little more restrictive

00:07:07,870 --> 00:07:14,599
so the point of all that is that indoor

00:07:10,610 --> 00:07:16,340
location is tricky it's not the it's not

00:07:14,599 --> 00:07:20,900
the location of the access point that

00:07:16,340 --> 00:07:22,909
matters is to your proximity ok cool so

00:07:20,900 --> 00:07:25,789
that's enough background I made a I'm

00:07:22,909 --> 00:07:27,919
anything let's talk about the specifics

00:07:25,789 --> 00:07:30,650
of that thing and we'll start with the

00:07:27,919 --> 00:07:33,409
hardware but first let's be clear what

00:07:30,650 --> 00:07:36,669
what are we talking about so the latest

00:07:33,409 --> 00:07:39,770
version of the Bluetooth specs 4.1

00:07:36,669 --> 00:07:42,650
bluetooth low energy is this a subset of

00:07:39,770 --> 00:07:44,650
the four point oh spec and I beacon is

00:07:42,650 --> 00:07:47,539
nothing more than an implementation of

00:07:44,650 --> 00:07:50,800
ble it's no magic doesn't do anything

00:07:47,539 --> 00:07:54,919
really cool it's just an implementation

00:07:50,800 --> 00:07:57,589
ok cool so here are some of the beacons

00:07:54,919 --> 00:07:59,629
that I made the top thing there is a

00:07:57,589 --> 00:08:02,479
raspberry pi with a blue ability for

00:07:59,629 --> 00:08:05,599
point of dongle USB thingy hung off of

00:08:02,479 --> 00:08:07,370
it raspberry pi is way cool it's a lot

00:08:05,599 --> 00:08:10,069
of fun to play with and I recommend it I

00:08:07,370 --> 00:08:14,449
think it uses a version of the Debian

00:08:10,069 --> 00:08:18,319
distribution and you can I mean it's a

00:08:14,449 --> 00:08:19,699
really wicked cheap linux computer you

00:08:18,319 --> 00:08:23,060
can plug them auditor into it but

00:08:19,699 --> 00:08:26,150
generally it's it runs headless I set

00:08:23,060 --> 00:08:29,900
this up using a blog post that I found

00:08:26,150 --> 00:08:33,740
from for radius believe it or not Chris

00:08:29,900 --> 00:08:35,959
here and it was really easy to set up

00:08:33,740 --> 00:08:37,849
and you're doing an it d script so when

00:08:35,959 --> 00:08:39,919
it fires up it you know you've got your

00:08:37,849 --> 00:08:41,269
bluesy all configured and it knows all

00:08:39,919 --> 00:08:44,930
the things in these snow and it just

00:08:41,269 --> 00:08:47,480
works this three rocks there our

00:08:44,930 --> 00:08:51,560
estimate beacons this is an estimate

00:08:47,480 --> 00:08:53,510
beacon when they shipped they all three

00:08:51,560 --> 00:08:55,490
broadcast on a different Channel and I

00:08:53,510 --> 00:08:59,589
didn't like that they said that you

00:08:55,490 --> 00:08:59,589
can't change that but I did you can

00:09:01,250 --> 00:09:05,070
so now they work the way I want them to

00:09:03,180 --> 00:09:08,160
and then that little bitty red board

00:09:05,070 --> 00:09:11,820
there is also pretty cool that is well

00:09:08,160 --> 00:09:15,270
it is red believe me that is a red bear

00:09:11,820 --> 00:09:17,790
ble mini and it is really tiny you can't

00:09:15,270 --> 00:09:21,420
solder a little bitty watch battery to

00:09:17,790 --> 00:09:23,640
it but I chose to not do that and it is

00:09:21,420 --> 00:09:25,650
it takes an arduino b li from on a

00:09:23,640 --> 00:09:29,310
sketch that you put on the board and

00:09:25,650 --> 00:09:31,110
then you can configure it so i got to

00:09:29,310 --> 00:09:32,490
play with hardware i'm a software guy

00:09:31,110 --> 00:09:36,540
and i got to play with hardware and that

00:09:32,490 --> 00:09:41,390
was fun ok so we got our beacons and now

00:09:36,540 --> 00:09:45,630
we need to interact with them i wrote

00:09:41,390 --> 00:09:47,120
both iphone and android apps to do this

00:09:45,630 --> 00:09:49,140
but today we're going to talk

00:09:47,120 --> 00:09:55,710
specifically about the iphone

00:09:49,140 --> 00:09:58,650
implementation and it was more fun so

00:09:55,710 --> 00:10:00,480
Apple stuck for some reason the the

00:09:58,650 --> 00:10:02,610
ibeacon implementation in core location

00:10:00,480 --> 00:10:04,770
and that sort of makes sense in some

00:10:02,610 --> 00:10:07,920
ways and it's really awkward in other

00:10:04,770 --> 00:10:09,750
ways you'll see why so let's understand

00:10:07,920 --> 00:10:15,450
core location first does anybody here do

00:10:09,750 --> 00:10:18,120
xcode objective-c ok I'm sorry so first

00:10:15,450 --> 00:10:20,610
you you just say ok I want to configure

00:10:18,120 --> 00:10:24,690
some things I want it to be the best

00:10:20,610 --> 00:10:27,810
accuracy because why not although do no

00:10:24,690 --> 00:10:29,280
more accurate is more expensive you get

00:10:27,810 --> 00:10:30,930
lots of readings and they all have

00:10:29,280 --> 00:10:32,400
different accuracy levels and so your

00:10:30,930 --> 00:10:36,750
phone has to work harder to get a better

00:10:32,400 --> 00:10:39,960
reading and you can set if you want to

00:10:36,750 --> 00:10:42,480
monitor movement you can set what the

00:10:39,960 --> 00:10:46,170
distance threshold is and then you say

00:10:42,480 --> 00:10:48,030
hey start updating locations there'll be

00:10:46,170 --> 00:10:51,060
a delegate method that gets called when

00:10:48,030 --> 00:10:53,640
it gets the locations call it did update

00:10:51,060 --> 00:10:57,120
locations boom and then you can you can

00:10:53,640 --> 00:10:59,339
do cool things with that location like

00:10:57,120 --> 00:11:02,520
know where you are or post it to a

00:10:59,339 --> 00:11:09,300
service and then understand other things

00:11:02,520 --> 00:11:10,680
about it now the CL beacon edition well

00:11:09,300 --> 00:11:11,980
first let's understand that i make

00:11:10,680 --> 00:11:13,480
inspect right so

00:11:11,980 --> 00:11:16,510
there are three pieces of information

00:11:13,480 --> 00:11:20,110
you have a proximity uuid and that's

00:11:16,510 --> 00:11:22,450
essentially a channel that is the beacon

00:11:20,110 --> 00:11:26,230
is going to broadcast on this uuid and

00:11:22,450 --> 00:11:29,770
you listen for this uuid you can list

00:11:26,230 --> 00:11:31,330
for listen for a lot of them I think it

00:11:29,770 --> 00:11:34,930
makes more sense personally to just say

00:11:31,330 --> 00:11:37,540
these this is my channel and then

00:11:34,930 --> 00:11:41,050
there's a major number and a minor

00:11:37,540 --> 00:11:42,970
number the major number is your group of

00:11:41,050 --> 00:11:44,740
beacons this the documentation

00:11:42,970 --> 00:11:46,960
specifically says it's a group so you

00:11:44,740 --> 00:11:49,990
can think of that as a building a

00:11:46,960 --> 00:11:53,110
terminal a floor in a shopping mall

00:11:49,990 --> 00:11:55,720
maybe it's just a group and then the the

00:11:53,110 --> 00:11:58,270
minor is the specific beacon within that

00:11:55,720 --> 00:12:01,600
group so it would be the gate or a hotel

00:11:58,270 --> 00:12:04,660
room or the specific counter in the

00:12:01,600 --> 00:12:10,510
department store and of course this

00:12:04,660 --> 00:12:13,510
profit right ok so core location single

00:12:10,510 --> 00:12:15,880
step process I want to get updates I get

00:12:13,510 --> 00:12:18,220
updates it's pretty easy beacons are a

00:12:15,880 --> 00:12:21,040
two-step process first you look for the

00:12:18,220 --> 00:12:24,550
beacons and that's that's the monitoring

00:12:21,040 --> 00:12:29,700
so you saw there's the uuid the

00:12:24,550 --> 00:12:32,200
proximity uuid and then you can specify

00:12:29,700 --> 00:12:36,240
different the same method could have

00:12:32,200 --> 00:12:39,790
different signatures in Objective C so

00:12:36,240 --> 00:12:41,890
that in it with proximity uuid you don't

00:12:39,790 --> 00:12:44,020
have to specify a major number you can

00:12:41,890 --> 00:12:46,570
you don't have to specify a minor number

00:12:44,020 --> 00:12:49,900
you can so you can be as specific as you

00:12:46,570 --> 00:12:51,970
want and then you say ok cool I want to

00:12:49,900 --> 00:12:53,530
start monitoring for these things now so

00:12:51,970 --> 00:12:55,600
you listen for those things on the

00:12:53,530 --> 00:12:59,740
channel and when it sees one it

00:12:55,600 --> 00:13:01,210
determines state did determine state so

00:12:59,740 --> 00:13:02,920
once it knows that they're out there

00:13:01,210 --> 00:13:04,870
then it starts figuring out what does

00:13:02,920 --> 00:13:07,360
that mean how close are they what do I

00:13:04,870 --> 00:13:11,830
have and when it stops seeing them then

00:13:07,360 --> 00:13:13,540
it stops ranging so you get back an

00:13:11,830 --> 00:13:16,950
array of the beacons and they're sorted

00:13:13,540 --> 00:13:20,250
in order by proximity and then accuracy

00:13:16,950 --> 00:13:23,710
the proximity constants are unknown

00:13:20,250 --> 00:13:25,810
immediate which is on top near which is

00:13:23,710 --> 00:13:29,110
within two or three meters probably and

00:13:25,810 --> 00:13:32,890
far which is Bluetooth ble goes to a

00:13:29,110 --> 00:13:35,590
range of about 50 meters so the closest

00:13:32,890 --> 00:13:37,150
one may be an invalid reading because it

00:13:35,590 --> 00:13:39,029
sorts to the top of the list which is

00:13:37,150 --> 00:13:41,920
unfortunate but that's how it does so

00:13:39,029 --> 00:13:43,600
you have to be smart about how you look

00:13:41,920 --> 00:13:45,820
through that array and then you can take

00:13:43,600 --> 00:13:48,190
the first one that is the nearest one or

00:13:45,820 --> 00:13:53,710
you can triangulate and then figure out

00:13:48,190 --> 00:13:56,350
where you are okay how is a lot of

00:13:53,710 --> 00:13:59,620
objective-c this is a ruby conference so

00:13:56,350 --> 00:14:01,750
let's move on okay so we know where you

00:13:59,620 --> 00:14:03,490
are and what's your near and i wrote a

00:14:01,750 --> 00:14:05,620
rails back in to figure out what that

00:14:03,490 --> 00:14:08,170
means well I actually broke it out into

00:14:05,620 --> 00:14:10,390
two different services and we'll talk

00:14:08,170 --> 00:14:12,330
about why so there's a reading

00:14:10,390 --> 00:14:15,010
collection server and it is right heavy

00:14:12,330 --> 00:14:17,589
super dumb doesn't do any enrichment

00:14:15,010 --> 00:14:19,930
just store as fast as possible return

00:14:17,589 --> 00:14:22,000
back a reading IV and then I publish

00:14:19,930 --> 00:14:26,800
that reading for anybody else who cares

00:14:22,000 --> 00:14:28,779
to listen and I used MQTT we'll talk

00:14:26,800 --> 00:14:31,330
more about that here so I get simple

00:14:28,779 --> 00:14:32,950
services can be simple we don't have to

00:14:31,330 --> 00:14:35,530
make really super complicated things

00:14:32,950 --> 00:14:37,839
that's the entirety of the reading

00:14:35,530 --> 00:14:39,220
collection service and you can see it

00:14:37,839 --> 00:14:43,600
does two things one of them isn't

00:14:39,220 --> 00:14:45,280
actually even fully necessary it creates

00:14:43,600 --> 00:14:48,790
the reading that's the method that the

00:14:45,280 --> 00:14:51,100
phone posts to gets back to reading ID

00:14:48,790 --> 00:14:53,280
and then there's a show method so you

00:14:51,100 --> 00:14:55,960
can from the command line using curl ask

00:14:53,280 --> 00:14:58,089
what is this what is this thing what is

00:14:55,960 --> 00:15:01,630
this reading and it also provides a nice

00:14:58,089 --> 00:15:06,250
back door in case the pub sub failed it

00:15:01,630 --> 00:15:07,450
never did unless I messed it up but but

00:15:06,250 --> 00:15:10,420
it was nice to have the curl

00:15:07,450 --> 00:15:12,790
functionality curl is your friend so

00:15:10,420 --> 00:15:14,980
this is the model and you can see here

00:15:12,790 --> 00:15:17,040
I've got a couple of different

00:15:14,980 --> 00:15:20,880
validations based on whether it was a

00:15:17,040 --> 00:15:23,980
GPS reading or was a beacon reading and

00:15:20,880 --> 00:15:26,440
I cashed it and then published it boom

00:15:23,980 --> 00:15:29,650
all there was to it there was a really

00:15:26,440 --> 00:15:32,800
simple rails app and then I had to

00:15:29,650 --> 00:15:36,820
collect the location server to help

00:15:32,800 --> 00:15:38,290
resolve what that stuff Mets because and

00:15:36,820 --> 00:15:39,190
I broke it out initially they're all

00:15:38,290 --> 00:15:40,810
ones once they

00:15:39,190 --> 00:15:42,730
and I broke it out because you don't

00:15:40,810 --> 00:15:44,560
always need to know what that reading

00:15:42,730 --> 00:15:47,140
means and we wanted to be able to scale

00:15:44,560 --> 00:15:50,980
the two things separately and I wanted

00:15:47,140 --> 00:15:53,680
to play with MQTT which is a really

00:15:50,980 --> 00:15:56,050
simple pub/sub thing and it's much

00:15:53,680 --> 00:15:59,440
easier to deal with an amqp and RabbitMQ

00:15:56,050 --> 00:16:03,010
and it works really really well so the

00:15:59,440 --> 00:16:07,150
location server uses push G is it

00:16:03,010 --> 00:16:09,550
subscribes to that reading topic it has

00:16:07,150 --> 00:16:12,730
that rest call in case the pub sub

00:16:09,550 --> 00:16:15,640
failed but it ever did and then it's

00:16:12,730 --> 00:16:18,190
able to tell that native app what that

00:16:15,640 --> 00:16:21,670
reading means so if you're at a gate

00:16:18,190 --> 00:16:24,400
let's just say you're at a gate the gate

00:16:21,670 --> 00:16:27,340
is in the terminal that terminal isn't

00:16:24,400 --> 00:16:29,320
an airport and that airport is dfw

00:16:27,340 --> 00:16:32,800
international so you can get four things

00:16:29,320 --> 00:16:34,750
back and then the phone figures out what

00:16:32,800 --> 00:16:38,020
that means based on where you've been or

00:16:34,750 --> 00:16:39,340
whatever but it may not need to know

00:16:38,020 --> 00:16:42,520
that forever reading so they're

00:16:39,340 --> 00:16:44,320
separated okay here's some examples of

00:16:42,520 --> 00:16:47,500
post GIS and use if you've never used

00:16:44,320 --> 00:16:51,010
push jsu see here it looks for kind of

00:16:47,500 --> 00:16:53,680
strange I've used both the RG 0 helpers

00:16:51,010 --> 00:16:57,430
the active record push j/s adapter sits

00:16:53,680 --> 00:17:00,490
on top of the RG 0 gym and I use post

00:16:57,430 --> 00:17:02,320
GIS directly i have used post j/s for a

00:17:00,490 --> 00:17:04,360
few years really comfortable with it I

00:17:02,320 --> 00:17:06,910
like it a lot I'm used to writing wall

00:17:04,360 --> 00:17:10,420
of SQL queries that do all kinds of

00:17:06,910 --> 00:17:13,569
crazy stuff and so I typically just hit

00:17:10,420 --> 00:17:16,150
post GIS directly with the the raw SQL

00:17:13,569 --> 00:17:20,709
but our geo does have some nice helpers

00:17:16,150 --> 00:17:23,740
that I'm starting to actually explore so

00:17:20,709 --> 00:17:26,199
if you don't know GIS stuff I'll give

00:17:23,740 --> 00:17:29,290
you a little introduction here that st

00:17:26,199 --> 00:17:32,080
contains I let you see at the top there

00:17:29,290 --> 00:17:36,280
that says is this point within this

00:17:32,080 --> 00:17:39,610
geofence the st intersects says do these

00:17:36,280 --> 00:17:42,850
two geofences overlap so you're able to

00:17:39,610 --> 00:17:46,810
say this reading what what is it where

00:17:42,850 --> 00:17:49,150
is this reading or I don't know why the

00:17:46,810 --> 00:17:50,490
other one that does st intersects not to

00:17:49,150 --> 00:17:53,920
go back and look at that

00:17:50,490 --> 00:17:57,460
anyways so that was how I was able to to

00:17:53,920 --> 00:18:00,820
tell the phone then where you were given

00:17:57,460 --> 00:18:04,470
the coordinates this is the initializer

00:18:00,820 --> 00:18:09,100
for MQTT you can see it's really easy

00:18:04,470 --> 00:18:12,340
and it just listens on that topic no big

00:18:09,100 --> 00:18:14,560
deal there okay so we've got the

00:18:12,340 --> 00:18:21,070
hardware we've got the phones we've got

00:18:14,560 --> 00:18:22,420
the rails app where's the airport so

00:18:21,070 --> 00:18:24,310
with all that stuff we're able to do

00:18:22,420 --> 00:18:26,380
something like this where we're able to

00:18:24,310 --> 00:18:28,030
say okay we know where you are where

00:18:26,380 --> 00:18:30,250
you've been and here's some helpful

00:18:28,030 --> 00:18:34,210
information for you on your journey

00:18:30,250 --> 00:18:35,830
through the airport you know once you

00:18:34,210 --> 00:18:38,500
get past security let's say we would say

00:18:35,830 --> 00:18:40,900
the gate is to your right 200 feet and

00:18:38,500 --> 00:18:44,490
there are two bathrooms between you and

00:18:40,900 --> 00:18:52,450
the gates here's the Android version

00:18:44,490 --> 00:18:53,860
whoo I am doing programming yeah they

00:18:52,450 --> 00:18:59,290
have all these layouts and none of them

00:18:53,860 --> 00:19:01,690
are exactly what you want or work so but

00:18:59,290 --> 00:19:03,520
more importantly remember we're really

00:19:01,690 --> 00:19:04,720
interested in like the business because

00:19:03,520 --> 00:19:07,720
we are a business and we want to make

00:19:04,720 --> 00:19:12,130
money so the gate agent can know where

00:19:07,720 --> 00:19:13,840
all the people are and they know here

00:19:12,130 --> 00:19:16,810
i'm on the i've boarded so the flight is

00:19:13,840 --> 00:19:20,830
good to go clearly but they're able to

00:19:16,810 --> 00:19:22,630
see then for all the people you know and

00:19:20,830 --> 00:19:25,030
then they would know again statuses

00:19:22,630 --> 00:19:27,790
everything is this flight in trouble and

00:19:25,030 --> 00:19:32,200
we added here a stage that we didn't put

00:19:27,790 --> 00:19:34,690
on the phone for at the gate counter so

00:19:32,200 --> 00:19:37,180
that the agent could know as people

00:19:34,690 --> 00:19:38,920
approached them you know who are they do

00:19:37,180 --> 00:19:40,780
they need you know they could give them

00:19:38,920 --> 00:19:42,100
personalized service status is

00:19:40,780 --> 00:19:43,540
everything maybe they know somebody is

00:19:42,100 --> 00:19:45,070
in the line but they're kind of the back

00:19:43,540 --> 00:19:49,060
so they can get pulled forward or

00:19:45,070 --> 00:19:51,910
whatever so we're able to using

00:19:49,060 --> 00:19:56,290
proximity we're able to to help you and

00:19:51,910 --> 00:19:58,150
and help the company so prototyping the

00:19:56,290 --> 00:20:00,280
airport it doesn't have to be an airport

00:19:58,150 --> 00:20:02,320
but that's what this was geo location

00:20:00,280 --> 00:20:03,850
for where in the world am I have I made

00:20:02,320 --> 00:20:06,160
it to the airport

00:20:03,850 --> 00:20:08,110
proximity I beacon for where

00:20:06,160 --> 00:20:10,780
specifically inside the building am I

00:20:08,110 --> 00:20:12,910
and then a rails back in to decipher

00:20:10,780 --> 00:20:15,400
what does it all mean but most

00:20:12,910 --> 00:20:19,090
importantly it can answer all the

00:20:15,400 --> 00:20:21,539
questions i'm barry clark and i work a

00:20:19,090 --> 00:20:21,539

YouTube URL: https://www.youtube.com/watch?v=Pxp6ukQFFb8


