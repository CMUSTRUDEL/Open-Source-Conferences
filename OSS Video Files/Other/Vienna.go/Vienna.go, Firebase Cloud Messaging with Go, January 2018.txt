Title: Vienna.go, Firebase Cloud Messaging with Go, January 2018
Publication date: 2018-01-30
Playlist: Vienna.go
Description: 
	In this video: Michael talks about how to get started with Firebase Cloud Messaging for sending notifications and instant messaging.

More about Michael KÃ¶ppl: https://twitter.com/rettetdemdativ

More about Vienna.go: https://www.meetup.com/vienna-go-Vienna-Go-User-Group/
Captions: 
	00:00:00,030 --> 00:00:06,270
all right so yeah firebase scout

00:00:03,419 --> 00:00:12,809
messaging raise your hand if you reduced

00:00:06,270 --> 00:00:19,560
it before anyone okay four okay great

00:00:12,809 --> 00:00:22,439
with an Android app and okay great

00:00:19,560 --> 00:00:25,050
so what five basic out messaging is is

00:00:22,439 --> 00:00:28,949
it's a service offered by a firebase a

00:00:25,050 --> 00:00:31,170
cloud company sort of that lets you

00:00:28,949 --> 00:00:34,590
deliver messages to mobile devices and

00:00:31,170 --> 00:00:36,239
and websites so we'll start with a

00:00:34,590 --> 00:00:39,050
little history because there have been

00:00:36,239 --> 00:00:40,980
multiple versions of this service in

00:00:39,050 --> 00:00:44,100
2010 there was android cloud-to-device

00:00:40,980 --> 00:00:48,360
messaging it was focused on Android and

00:00:44,100 --> 00:00:49,770
Chrome extensions later on they renamed

00:00:48,360 --> 00:00:52,770
it basically to Google Cloud messaging

00:00:49,770 --> 00:00:57,539
it's the same service also for Android

00:00:52,770 --> 00:00:59,190
and and Chrome extensions the first

00:00:57,539 --> 00:01:01,170
service doesn't exist anymore

00:00:59,190 --> 00:01:03,239
the service was shut down in 2015 or

00:01:01,170 --> 00:01:05,580
something Google Cloud messaging still

00:01:03,239 --> 00:01:07,500
exists but all websites now link to

00:01:05,580 --> 00:01:11,960
firebase cloud messaging which was in

00:01:07,500 --> 00:01:15,630
yeah announced in 2016 at Google i/o and

00:01:11,960 --> 00:01:18,060
it sort of didn't way with the fees you

00:01:15,630 --> 00:01:19,350
had to pay for sending a certain amount

00:01:18,060 --> 00:01:23,820
of messages because Google Cloud

00:01:19,350 --> 00:01:28,220
messaging you have to pay until once you

00:01:23,820 --> 00:01:31,470
reach the certain limit of messages so

00:01:28,220 --> 00:01:33,780
yeah what can we do with it so first of

00:01:31,470 --> 00:01:36,210
all we can send notifications so they

00:01:33,780 --> 00:01:37,950
are just a title text and that's

00:01:36,210 --> 00:01:41,970
basically it and they automatically

00:01:37,950 --> 00:01:43,920
display it on the on the device and yeah

00:01:41,970 --> 00:01:47,280
so that's it that's basically just text

00:01:43,920 --> 00:01:49,500
you can also send simply data so you can

00:01:47,280 --> 00:01:51,750
send your own structure basically and

00:01:49,500 --> 00:01:56,399
have it contain whatever you want which

00:01:51,750 --> 00:01:58,439
makes for limitless possibilities what's

00:01:56,399 --> 00:01:59,790
also important is that not only can you

00:01:58,439 --> 00:02:01,290
send whatever you want you can send it

00:01:59,790 --> 00:02:03,869
to whoever you want you can send it to

00:02:01,290 --> 00:02:06,509
individual devices identified by their

00:02:03,869 --> 00:02:09,590
tokens you can send it to certain topics

00:02:06,509 --> 00:02:12,510
so users can subscribe to topics like

00:02:09,590 --> 00:02:13,610
politics and you can send messages to

00:02:12,510 --> 00:02:15,800
everyone who's up

00:02:13,610 --> 00:02:18,140
tribe to politics you can send it to

00:02:15,800 --> 00:02:20,810
certain apps because you can have iOS

00:02:18,140 --> 00:02:23,600
apps Android apps web apps you can have

00:02:20,810 --> 00:02:24,710
multiple of those and you can send it to

00:02:23,600 --> 00:02:30,340
certain platforms so you can choose

00:02:24,710 --> 00:02:34,300
which platform gets this all right I

00:02:30,340 --> 00:02:36,650
think there's a slight missing okay so

00:02:34,300 --> 00:02:39,020
the way we send a notification is that

00:02:36,650 --> 00:02:42,200
we can do it via the console where we

00:02:39,020 --> 00:02:44,090
just enter information about what text

00:02:42,200 --> 00:02:45,980
we want to send and when we want to send

00:02:44,090 --> 00:02:48,320
it into which app we want to send it and

00:02:45,980 --> 00:02:50,630
it simply received by the by the Android

00:02:48,320 --> 00:02:52,700
iOS a web app so that's the really

00:02:50,630 --> 00:02:57,590
simple way to engage with your users

00:02:52,700 --> 00:03:00,920
through a firebase cloud messaging all

00:02:57,590 --> 00:03:02,810
right so really love examples is we

00:03:00,920 --> 00:03:04,880
could use it to write an app that lets

00:03:02,810 --> 00:03:06,890
your users know if their friends are

00:03:04,880 --> 00:03:09,380
nearby so you can send a notification if

00:03:06,890 --> 00:03:11,140
your server finds out that the distance

00:03:09,380 --> 00:03:13,730
between two clients is I don't know like

00:03:11,140 --> 00:03:16,100
15 meters and they're friends and yeah

00:03:13,730 --> 00:03:18,170
you could let them know you could build

00:03:16,100 --> 00:03:21,350
a chat app and notify the users if

00:03:18,170 --> 00:03:23,150
they've received a message and you can

00:03:21,350 --> 00:03:28,640
also notify them that their favorite

00:03:23,150 --> 00:03:31,010
series has a new season available when

00:03:28,640 --> 00:03:34,400
to use it so that's mostly what I would

00:03:31,010 --> 00:03:37,880
personally recommend you should or could

00:03:34,400 --> 00:03:39,530
use it if you really want to have easy

00:03:37,880 --> 00:03:42,049
development if you don't want to invest

00:03:39,530 --> 00:03:43,820
too much time in making your own

00:03:42,049 --> 00:03:46,190
implementation basically of this and

00:03:43,820 --> 00:03:48,080
having a connection between yourself

00:03:46,190 --> 00:03:51,170
between your client and your server that

00:03:48,080 --> 00:03:53,750
you have to manage yourself if you want

00:03:51,170 --> 00:03:55,459
battery efficiency because the firebase

00:03:53,750 --> 00:03:58,250
calc messaging service uses a single

00:03:55,459 --> 00:04:00,049
connection for all apps that use it so

00:03:58,250 --> 00:04:01,880
that's a connection that's basically

00:04:00,049 --> 00:04:04,310
initialized once and it stays open and

00:04:01,880 --> 00:04:05,810
has a heartbeat that lets you know if

00:04:04,310 --> 00:04:09,049
the connection is still alive and yeah

00:04:05,810 --> 00:04:11,120
it's just a single connection and yeah

00:04:09,049 --> 00:04:15,049
so you also have lower data consumption

00:04:11,120 --> 00:04:17,479
because of a single connection when not

00:04:15,049 --> 00:04:19,100
to use it is basically just if you

00:04:17,479 --> 00:04:20,720
really need to have to control because

00:04:19,100 --> 00:04:22,070
it's out of your control if the services

00:04:20,720 --> 00:04:23,870
are down it's out of your control if

00:04:22,070 --> 00:04:26,000
anything changes about the firebase

00:04:23,870 --> 00:04:26,450
Scout messaging service it's out of your

00:04:26,000 --> 00:04:27,169
control

00:04:26,450 --> 00:04:29,090
or if you

00:04:27,169 --> 00:04:30,530
when the messages arrive or if they

00:04:29,090 --> 00:04:33,169
arrive at all so you can't do anything

00:04:30,530 --> 00:04:37,999
about it if you don't drive that's yeah

00:04:33,169 --> 00:04:40,340
bad luck so a little overview about how

00:04:37,999 --> 00:04:42,529
it works I'm sure some of you already

00:04:40,340 --> 00:04:44,629
know that concept it's basically just it

00:04:42,529 --> 00:04:47,840
starts with step one that the mobile

00:04:44,629 --> 00:04:50,090
client registers with the firebase cloud

00:04:47,840 --> 00:04:52,490
messaging service it gets back a token

00:04:50,090 --> 00:04:55,189
that that identifies the to the firebase

00:04:52,490 --> 00:04:59,900
cloud messaging service it can send that

00:04:55,189 --> 00:05:03,830
token to your own server that's that's

00:04:59,900 --> 00:05:07,400
us and we can store the token in a

00:05:03,830 --> 00:05:09,979
database in release or just in memory if

00:05:07,400 --> 00:05:12,349
we want to and we can then use this

00:05:09,979 --> 00:05:14,270
token we have to send a request to the

00:05:12,349 --> 00:05:16,400
firebase cloud cloud messaging service

00:05:14,270 --> 00:05:19,250
and send it to the client with that ID

00:05:16,400 --> 00:05:21,560
and the service of firebase will do the

00:05:19,250 --> 00:05:25,099
rest basically so we don't have to do

00:05:21,560 --> 00:05:27,379
too much so how would we go about

00:05:25,099 --> 00:05:29,659
implementing this so first we have to

00:05:27,379 --> 00:05:31,610
start by creating a project we have to

00:05:29,659 --> 00:05:39,710
define a name and we have to choose a

00:05:31,610 --> 00:05:41,960
region for our project yeah then we add

00:05:39,710 --> 00:05:44,270
our app we can choose an iOS app an

00:05:41,960 --> 00:05:46,099
Android app web whatever and we have to

00:05:44,270 --> 00:05:48,139
define the package name of that Android

00:05:46,099 --> 00:05:50,689
app so it can be identified later on we

00:05:48,139 --> 00:05:52,669
have we can give it a nickname and we

00:05:50,689 --> 00:05:55,460
then download a config file that can be

00:05:52,669 --> 00:06:00,409
added to our Android or iOS project and

00:05:55,460 --> 00:06:02,839
that lets the the library that you use

00:06:00,409 --> 00:06:05,029
for using firebase on the client-side

00:06:02,839 --> 00:06:10,939
lets it communicate with the firebase

00:06:05,029 --> 00:06:13,099
service through this config file so next

00:06:10,939 --> 00:06:15,139
we have to get an API key so there are

00:06:13,099 --> 00:06:17,659
three API is at the moment for firebase

00:06:15,139 --> 00:06:21,050
Cloud messaging there's an legacy HTTP

00:06:17,659 --> 00:06:24,319
API there's a new HTTP API and there's

00:06:21,050 --> 00:06:27,409
an XMPP API so for this example this is

00:06:24,319 --> 00:06:29,599
the old HTTP API because it's a lot

00:06:27,409 --> 00:06:31,939
simpler and you don't you only need a

00:06:29,599 --> 00:06:34,310
single token for your server so you can

00:06:31,939 --> 00:06:37,789
get this token through the firebase

00:06:34,310 --> 00:06:39,500
console and you basically use it in your

00:06:37,789 --> 00:06:40,220
code to identify that this is the server

00:06:39,500 --> 00:06:41,990
and

00:06:40,220 --> 00:06:47,600
you're allowed to send messages to that

00:06:41,990 --> 00:06:51,590
kind so ingo itself we would define a

00:06:47,600 --> 00:06:54,260
message as a struct give it the fields

00:06:51,590 --> 00:06:57,110
it needs to send messages to certain

00:06:54,260 --> 00:06:58,730
kind so this is all you need basically

00:06:57,110 --> 00:07:01,490
you could even leave out the two field

00:06:58,730 --> 00:07:05,810
at the very top and just get away with

00:07:01,490 --> 00:07:08,600
the string string array and put in the

00:07:05,810 --> 00:07:10,820
data as the IDS you have the tokens you

00:07:08,600 --> 00:07:13,100
want to send to and the data you can use

00:07:10,820 --> 00:07:17,300
you can put in whatever you want you can

00:07:13,100 --> 00:07:21,470
you could replace it with anything so

00:07:17,300 --> 00:07:23,900
yeah you have a lot of freedom then we

00:07:21,470 --> 00:07:27,110
create a HTTP request we put our data in

00:07:23,900 --> 00:07:29,060
send it to the firebase URL you can get

00:07:27,110 --> 00:07:32,750
that on the through the firebase console

00:07:29,060 --> 00:07:35,570
and then we add the the authorization

00:07:32,750 --> 00:07:39,710
header at the server key we got before

00:07:35,570 --> 00:07:41,930
from the firebase console and send off

00:07:39,710 --> 00:07:44,570
the request and the firebase servers

00:07:41,930 --> 00:07:48,710
will do the rest and deliver the the

00:07:44,570 --> 00:07:52,220
message it's I think a hundred and

00:07:48,710 --> 00:07:55,360
twenty milliseconds at most for 99% of

00:07:52,220 --> 00:07:59,510
messages or something like that so yeah

00:07:55,360 --> 00:08:01,760
I have an example prepared with an

00:07:59,510 --> 00:08:03,650
Android app that receives notifications

00:08:01,760 --> 00:08:08,390
and the server where we can send

00:08:03,650 --> 00:08:10,930
notifications so we'll start by running

00:08:08,390 --> 00:08:10,930
the server

00:08:15,719 --> 00:08:19,969
all right now we have the server running

00:08:20,989 --> 00:08:27,419
it's basically just an HTTP server that

00:08:24,839 --> 00:08:30,059
has a single route where the client can

00:08:27,419 --> 00:08:31,649
register and once it does we have two

00:08:30,059 --> 00:08:37,289
token and we can send messages through

00:08:31,649 --> 00:08:42,110
the input here so we'll just restart the

00:08:37,289 --> 00:08:43,680
Android app which will then call the HD

00:08:42,110 --> 00:08:49,740
HTTP server

00:08:43,680 --> 00:08:53,819
route and register or token gonna make

00:08:49,740 --> 00:08:56,459
this alright so this is the app it

00:08:53,819 --> 00:08:59,430
should now have registered with our

00:08:56,459 --> 00:09:01,680
server it did so now we have to talk in

00:08:59,430 --> 00:09:03,600
stored in this case for this example I

00:09:01,680 --> 00:09:08,370
just started in in memory basically in

00:09:03,600 --> 00:09:10,410
in the map and yeah so now going to tap

00:09:08,370 --> 00:09:12,449
a message it sends out the message to

00:09:10,410 --> 00:09:14,790
all the tokens I have stored in memory

00:09:12,449 --> 00:09:19,470
so in this case just one and we can do

00:09:14,790 --> 00:09:22,319
hello Vienna go meet up and you get a

00:09:19,470 --> 00:09:25,259
response from the server that notifies

00:09:22,319 --> 00:09:28,350
you if your message was received if it

00:09:25,259 --> 00:09:31,250
was if it has failed and why it may have

00:09:28,350 --> 00:09:36,420
felt in this case it was successful

00:09:31,250 --> 00:09:37,769
yeah so this is here you can see the the

00:09:36,420 --> 00:09:39,930
entire message that sent off to the

00:09:37,769 --> 00:09:42,899
server which contains the token we

00:09:39,930 --> 00:09:45,660
received from from the app and the date

00:09:42,899 --> 00:09:48,720
that we have and now if we switched oops

00:09:45,660 --> 00:09:52,410
if we switch the app we can see that we

00:09:48,720 --> 00:09:54,629
have received the message so the thing

00:09:52,410 --> 00:09:57,930
is that it's really simple to send

00:09:54,629 --> 00:09:59,339
notifications through the service the

00:09:57,930 --> 00:10:02,009
alternative to this is of course you

00:09:59,339 --> 00:10:04,170
can't have a TCP connection a WebSocket

00:10:02,009 --> 00:10:05,759
connection that you initialize once with

00:10:04,170 --> 00:10:09,480
a background service for your Android

00:10:05,759 --> 00:10:11,189
app and sent these messages yourself and

00:10:09,480 --> 00:10:13,620
keep the connections alive to the server

00:10:11,189 --> 00:10:15,509
but it's a lot of work for something

00:10:13,620 --> 00:10:18,689
that you that others have already

00:10:15,509 --> 00:10:20,639
implemented for units free so it's also

00:10:18,689 --> 00:10:22,680
the recommended way from Google for

00:10:20,639 --> 00:10:26,970
Android at least and the Android studio

00:10:22,680 --> 00:10:27,820
has has an extra tool basically for

00:10:26,970 --> 00:10:30,280
putting

00:10:27,820 --> 00:10:35,110
Android firebase cult messaging into

00:10:30,280 --> 00:10:39,970
your Android app and right let's

00:10:35,110 --> 00:10:41,820
continue yeah that's it so if there any

00:10:39,970 --> 00:10:46,459
questions

00:10:41,820 --> 00:10:46,459

YouTube URL: https://www.youtube.com/watch?v=USsYLaYyAV0


