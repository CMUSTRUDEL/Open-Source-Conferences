Title: Containerising Desktop Applications - Devux - January 2018
Publication date: 2018-02-02
Playlist: Devux
Description: 
	Containerising desktop applications (Drew & Krzysztof)

Drew: https://www.linkedin.com/in/drewnoakes/
Krzysztof: https://www.linkedin.com/in/krzysztofdul/

Drew & Krzysztof of startup On Point (https://onpoint.co) will be talking us through how their startup is taking the same principles of containerisation and making them work for containerisation of apps on the desktop.


Captions: 
	00:00:00,030 --> 00:00:04,410
so my name is drew this is Christoph

00:00:01,530 --> 00:00:07,770
we've worked together for years now on

00:00:04,410 --> 00:00:09,840
and off in the city building software on

00:00:07,770 --> 00:00:13,469
the desktop back in the hole hole Zak

00:00:09,840 --> 00:00:16,500
web stuff all sorts of stuff really but

00:00:13,469 --> 00:00:19,890
mostly in finance working in hedge funds

00:00:16,500 --> 00:00:21,660
and these kinds of places where they

00:00:19,890 --> 00:00:24,119
have you know a specific set of needs

00:00:21,660 --> 00:00:25,859
for their software and still lots of

00:00:24,119 --> 00:00:27,869
traders sitting at their desktops using

00:00:25,859 --> 00:00:29,970
desktop software so as the world moves

00:00:27,869 --> 00:00:34,890
more and more to mobile and more and

00:00:29,970 --> 00:00:36,860
more to web there's these neeshub users

00:00:34,890 --> 00:00:39,149
who are still very much on the desktop

00:00:36,860 --> 00:00:41,219
getting work done in these workstations

00:00:39,149 --> 00:00:48,539
and so that's the background we've been

00:00:41,219 --> 00:00:50,309
targeting in our work I would say that

00:00:48,539 --> 00:00:53,070
no sane company really wants to make

00:00:50,309 --> 00:00:55,980
their own software it's incredibly

00:00:53,070 --> 00:00:57,510
expensive it's incredibly risky and it

00:00:55,980 --> 00:01:00,059
just doesn't make good sense to make

00:00:57,510 --> 00:01:01,680
your own software if you can buy it but

00:01:00,059 --> 00:01:04,559
as soon as a company decides that they

00:01:01,680 --> 00:01:05,640
actually need to make it they really

00:01:04,559 --> 00:01:07,200
have to make everything from like the

00:01:05,640 --> 00:01:08,520
ground up and we've seen some of the

00:01:07,200 --> 00:01:10,920
stuff that needs to go on in the

00:01:08,520 --> 00:01:12,479
server-side infrastructurally and

00:01:10,920 --> 00:01:14,549
there's a tendency towards more

00:01:12,479 --> 00:01:17,460
automation in that space sort the serval

00:01:14,549 --> 00:01:19,080
is stickier earlier that's like taking

00:01:17,460 --> 00:01:20,460
it to a quite an extreme if you can get

00:01:19,080 --> 00:01:22,500
away with that level of statelessness

00:01:20,460 --> 00:01:25,020
you can have a great deal of

00:01:22,500 --> 00:01:26,159
productivity and there's been a lot of

00:01:25,020 --> 00:01:28,350
innovation in the web a lot of

00:01:26,159 --> 00:01:31,229
innovation in mobile as I said it really

00:01:28,350 --> 00:01:32,880
hasn't hit the desktop and so you know

00:01:31,229 --> 00:01:34,110
work we've realized that there's an

00:01:32,880 --> 00:01:38,130
opportunity to take some of that

00:01:34,110 --> 00:01:39,420
repeating like repetitive problems that

00:01:38,130 --> 00:01:41,159
we've solved over and over they don't

00:01:39,420 --> 00:01:42,899
really proprietary to any one company

00:01:41,159 --> 00:01:46,290
like it's not their secret source they

00:01:42,899 --> 00:01:48,180
don't really care and if they could get

00:01:46,290 --> 00:01:49,920
away with not building that themselves

00:01:48,180 --> 00:01:51,329
then they would and so we thought we'd

00:01:49,920 --> 00:01:53,700
try and make a product out of that and

00:01:51,329 --> 00:01:57,540
that's what we've done and we'd like to

00:01:53,700 --> 00:01:59,040
share with you so again so we imagine

00:01:57,540 --> 00:02:01,350
you're on this trading floor you've got

00:01:59,040 --> 00:02:03,210
people with lots of stuff spread out

00:02:01,350 --> 00:02:06,210
over lots of monitors lots of

00:02:03,210 --> 00:02:07,469
information coming in the decisions need

00:02:06,210 --> 00:02:11,400
to be made quite quickly and actions

00:02:07,469 --> 00:02:13,440
need to be carried out these users they

00:02:11,400 --> 00:02:14,880
don't have a lot of appetite for problem

00:02:13,440 --> 00:02:16,350
when stuff goes wrong there's a lot of

00:02:14,880 --> 00:02:19,140
screaming there's a lot of

00:02:16,350 --> 00:02:20,610
finger-pointing and basically there's a

00:02:19,140 --> 00:02:21,870
lot of paranoia in these of environments

00:02:20,610 --> 00:02:24,630
about any kinds of problems

00:02:21,870 --> 00:02:27,770
so we talked earlier we heard earlier

00:02:24,630 --> 00:02:30,300
rather about monolithic applications

00:02:27,770 --> 00:02:31,320
this is very much the case for companies

00:02:30,300 --> 00:02:32,730
to make done in software there'd be

00:02:31,320 --> 00:02:35,310
well-intentioned they start with a small

00:02:32,730 --> 00:02:37,530
simple application but it just accretes

00:02:35,310 --> 00:02:39,300
features over time people build their

00:02:37,530 --> 00:02:40,470
careers on these platforms they grow and

00:02:39,300 --> 00:02:42,120
they grow and they grow until they get

00:02:40,470 --> 00:02:45,630
to a point where no one can really

00:02:42,120 --> 00:02:48,720
change them anymore and they just

00:02:45,630 --> 00:02:53,070
languishes these legacy monolithic

00:02:48,720 --> 00:02:55,550
behemoths so the solution to that on the

00:02:53,070 --> 00:02:57,480
service base has been micro services and

00:02:55,550 --> 00:02:58,740
containerization and we think that

00:02:57,480 --> 00:03:00,390
there's an opportunity to bring that

00:02:58,740 --> 00:03:02,460
pattern onto the desktop bunch of other

00:03:00,390 --> 00:03:04,140
things that we solve as well but in the

00:03:02,460 --> 00:03:09,810
spirit of staying on topic tonight I

00:03:04,140 --> 00:03:11,520
think we'll probably focus on that to

00:03:09,810 --> 00:03:13,590
try to think what else to talk about

00:03:11,520 --> 00:03:14,640
before we go into the demo we didn't

00:03:13,590 --> 00:03:17,940
have that many slides we've actually

00:03:14,640 --> 00:03:19,260
spent the last week in our time where we

00:03:17,940 --> 00:03:21,780
thought we'd be preparing slides and

00:03:19,260 --> 00:03:24,480
things solely in meetings that's why we

00:03:21,780 --> 00:03:26,580
dressed like this today we're talking to

00:03:24,480 --> 00:03:28,200
lots of people and it's exciting time

00:03:26,580 --> 00:03:31,410
for us but it's also very tiring

00:03:28,200 --> 00:03:33,180
so apologies for the lack of nice slides

00:03:31,410 --> 00:03:35,310
it's quite a stark contrast to the last

00:03:33,180 --> 00:03:36,540
talk but hopefully we put some stuff up

00:03:35,310 --> 00:03:39,750
on the screen you can have a little bit

00:03:36,540 --> 00:03:42,959
of a look at some of it more concretely

00:03:39,750 --> 00:03:47,670
yeah let's have a look what typical day

00:03:42,959 --> 00:03:51,840
for a trader might look like what they

00:03:47,670 --> 00:03:55,410
usually are faced with is a huge number

00:03:51,840 --> 00:03:58,650
of application across a lot of different

00:03:55,410 --> 00:04:01,170
screens they deal with very often we as

00:03:58,650 --> 00:04:04,260
developers who used to we worked on

00:04:01,170 --> 00:04:07,440
solutions that work across 12 different

00:04:04,260 --> 00:04:09,540
monitors you can imagine how user

00:04:07,440 --> 00:04:12,450
attention demanding these software's are

00:04:09,540 --> 00:04:15,840
and there's a lot of real data in in

00:04:12,450 --> 00:04:18,150
each one of these systems very often the

00:04:15,840 --> 00:04:21,320
way you we use to structure the systems

00:04:18,150 --> 00:04:24,450
we would be built silos from them so any

00:04:21,320 --> 00:04:26,190
problem could bring 12 monitors

00:04:24,450 --> 00:04:29,270
application down

00:04:26,190 --> 00:04:32,700
and then time to start it up would be

00:04:29,270 --> 00:04:34,980
within minutes and that for example

00:04:32,700 --> 00:04:37,080
could be a stock exchange monitoring

00:04:34,980 --> 00:04:38,610
application where no one would know what

00:04:37,080 --> 00:04:40,710
was happening for a minute and you can

00:04:38,610 --> 00:04:44,430
imagine how stressful this situation

00:04:40,710 --> 00:04:47,070
becomes so until now we've never had an

00:04:44,430 --> 00:04:50,000
environment where we could containerize

00:04:47,070 --> 00:04:56,100
just the pieces of your desktop

00:04:50,000 --> 00:05:00,110
until point platform where we could go

00:04:56,100 --> 00:05:05,040
to individual components of your

00:05:00,110 --> 00:05:08,540
workspace that has buggy feature and

00:05:05,040 --> 00:05:12,390
when we invoke it suddenly your

00:05:08,540 --> 00:05:13,920
monolithic thick desktop client behaves

00:05:12,390 --> 00:05:17,700
like Google Chrome where we could

00:05:13,920 --> 00:05:19,890
actually just reload the process for the

00:05:17,700 --> 00:05:23,820
user so what you see now in front of you

00:05:19,890 --> 00:05:26,100
these are four different processes each

00:05:23,820 --> 00:05:28,260
one responsible for review and there are

00:05:26,100 --> 00:05:30,120
a lot of different processes supporting

00:05:28,260 --> 00:05:33,240
what you see here there I had less

00:05:30,120 --> 00:05:35,760
applications running on a desktop so you

00:05:33,240 --> 00:05:38,510
can imagine microservices architecture

00:05:35,760 --> 00:05:42,150
running actually on the user's desktop

00:05:38,510 --> 00:05:44,820
what this will allow people to do it

00:05:42,150 --> 00:05:47,910
will effectively allow them to support

00:05:44,820 --> 00:05:49,950
finally separate the views from view

00:05:47,910 --> 00:05:53,460
models you will take everything behind

00:05:49,950 --> 00:05:56,669
view model into the service and let me

00:05:53,460 --> 00:05:59,370
bring in processes list so you could see

00:05:56,669 --> 00:06:02,720
here this is our processes tree where

00:05:59,370 --> 00:06:06,120
one of our services the Rev data service

00:06:02,720 --> 00:06:08,660
you could now start obstructing parts of

00:06:06,120 --> 00:06:14,430
your monolithic application and take

00:06:08,660 --> 00:06:18,630
every logic that you had in your UI into

00:06:14,430 --> 00:06:21,240
the service and stream functionality to

00:06:18,630 --> 00:06:23,390
a lot of different small UI components

00:06:21,240 --> 00:06:27,810
like you see these on the screen a

00:06:23,390 --> 00:06:31,530
challenge with building these micro

00:06:27,810 --> 00:06:35,280
services form is component a becomes

00:06:31,530 --> 00:06:38,060
with discoverability of visual

00:06:35,280 --> 00:06:39,910
components for users so we've built

00:06:38,060 --> 00:06:44,290
we've built tool

00:06:39,910 --> 00:06:47,140
which allows us to discover these

00:06:44,290 --> 00:06:49,390
applications let me build one of these

00:06:47,140 --> 00:06:53,650
workspaces for you you'll see how this

00:06:49,390 --> 00:06:56,530
might be constructed we like to think

00:06:53,650 --> 00:06:58,540
about these applications as their single

00:06:56,530 --> 00:07:00,070
business purpose so what you see now on

00:06:58,540 --> 00:07:02,680
the screen is just a watch list and

00:07:00,070 --> 00:07:06,790
watch list would be part of almost every

00:07:02,680 --> 00:07:10,270
single trading application now from

00:07:06,790 --> 00:07:13,660
watch list think you would agree with me

00:07:10,270 --> 00:07:16,050
in in these environments you usually end

00:07:13,660 --> 00:07:19,630
up having a team of developers

00:07:16,050 --> 00:07:22,440
supporting team of business so you could

00:07:19,630 --> 00:07:24,580
have 20 different team of developers

00:07:22,440 --> 00:07:26,410
they would talk to each other they're

00:07:24,580 --> 00:07:28,840
still friends they wouldn't reuse their

00:07:26,410 --> 00:07:30,520
couch everyone goes and builds watch

00:07:28,840 --> 00:07:32,530
they stock this so you end up in

00:07:30,520 --> 00:07:36,400
organization having 20 different watch

00:07:32,530 --> 00:07:37,780
lists and your users suddenly faced with

00:07:36,400 --> 00:07:39,460
every single watch this behaving

00:07:37,780 --> 00:07:41,770
slightly differently looks slightly

00:07:39,460 --> 00:07:43,270
differently different shortcut keys but

00:07:41,770 --> 00:07:46,180
now we thought actually if we could

00:07:43,270 --> 00:07:48,460
containerize the watch list and provide

00:07:46,180 --> 00:07:52,450
just one implementation of watch these

00:07:48,460 --> 00:07:55,090
users could go and drive the workspace

00:07:52,450 --> 00:07:57,190
from watch list and start building their

00:07:55,090 --> 00:08:05,560
workspaces with whatever application

00:07:57,190 --> 00:08:07,630
didn't now what's happening is we run a

00:08:05,560 --> 00:08:10,960
separate process we docked into the same

00:08:07,630 --> 00:08:14,350
window and it will be the same situation

00:08:10,960 --> 00:08:16,600
with colonization or micro services you

00:08:14,350 --> 00:08:19,090
need to make them talk to each other

00:08:16,600 --> 00:08:21,550
otherwise microservices wouldn't be that

00:08:19,090 --> 00:08:24,660
useful if you cannot combine everything

00:08:21,550 --> 00:08:27,970
they provide so we have a way of

00:08:24,660 --> 00:08:33,430
following selection from one application

00:08:27,970 --> 00:08:35,950
to the other let me open another

00:08:33,430 --> 00:08:37,930
application very often in these apps

00:08:35,950 --> 00:08:43,930
there would be different things you want

00:08:37,930 --> 00:08:47,490
to correlate your data on that may be

00:08:43,930 --> 00:08:47,490
able to stop for you a little bit more

00:08:49,070 --> 00:08:53,160
mm-hmm it's a bit difficult without the

00:08:51,779 --> 00:08:58,680
mouse but it's okay

00:08:53,160 --> 00:09:01,500
manage let's say for example trader the

00:08:58,680 --> 00:09:06,660
way the operator do it's very often like

00:09:01,500 --> 00:09:10,080
to compare time periods for different

00:09:06,660 --> 00:09:13,290
symbols that trade with so for example

00:09:10,080 --> 00:09:15,300
they want one of the pricing chart to

00:09:13,290 --> 00:09:19,110
follow the selection on one of their

00:09:15,300 --> 00:09:23,040
screens but the other chart might be

00:09:19,110 --> 00:09:26,070
just a constant selection of something

00:09:23,040 --> 00:09:27,890
they want to compare with so suddenly

00:09:26,070 --> 00:09:32,220
you have a problem with how do you

00:09:27,890 --> 00:09:34,410
compare these two time ranges how do you

00:09:32,220 --> 00:09:37,680
link them between these price charts so

00:09:34,410 --> 00:09:40,200
we came up with with a concept of

00:09:37,680 --> 00:09:44,360
switchboard where you can turn around

00:09:40,200 --> 00:09:50,220
your application and start linking

00:09:44,360 --> 00:09:52,350
different micro-services UI by whatever

00:09:50,220 --> 00:09:54,959
you want this is all customizable you

00:09:52,350 --> 00:09:56,520
can add whatever data you want the

00:09:54,959 --> 00:09:58,980
sudden you don't have just one channel

00:09:56,520 --> 00:10:01,950
but you could just say yeah I'm going to

00:09:58,980 --> 00:10:08,220
bind one up of the other app based on

00:10:01,950 --> 00:10:10,860
whatever I need so now I have my right

00:10:08,220 --> 00:10:16,800
hand side charge for my selection but I

00:10:10,860 --> 00:10:21,180
could now go here and follow date ranges

00:10:16,800 --> 00:10:24,300
between these two price charts what

00:10:21,180 --> 00:10:28,020
happens with ecosystems like this is you

00:10:24,300 --> 00:10:31,620
end up building just a piece of your

00:10:28,020 --> 00:10:34,830
final delivery and you could reuse it

00:10:31,620 --> 00:10:37,110
you can imagine in let's say Bank Bank

00:10:34,830 --> 00:10:39,060
who tried very different financial

00:10:37,110 --> 00:10:40,200
instruments and they will have team

00:10:39,060 --> 00:10:42,660
responsible for those financial

00:10:40,200 --> 00:10:44,640
instruments so suddenly you can go to

00:10:42,660 --> 00:10:47,640
different teams and say you know what I

00:10:44,640 --> 00:10:52,500
would like to reuse components that we

00:10:47,640 --> 00:10:54,120
have in different workspace so you can

00:10:52,500 --> 00:10:56,250
now see we've got the same watchlist

00:10:54,120 --> 00:10:59,490
we've got the price chart but now it's

00:10:56,250 --> 00:11:04,679
combined with our trade entry and

00:10:59,490 --> 00:11:13,459
and our order lists same way we could go

00:11:04,679 --> 00:11:15,779
and give a support team ability to

00:11:13,459 --> 00:11:18,089
discover any problem so now we've

00:11:15,779 --> 00:11:21,209
suddenly created environment where

00:11:18,089 --> 00:11:23,160
business doesn't need to invest a lot of

00:11:21,209 --> 00:11:24,509
money in building monolithic application

00:11:23,160 --> 00:11:27,990
but they could just start building

00:11:24,509 --> 00:11:31,649
smaller apps combining together and the

00:11:27,990 --> 00:11:33,990
commissioning slowly up by up rather

00:11:31,649 --> 00:11:35,670
than pay investing a lot of money in the

00:11:33,990 --> 00:11:41,759
commissioning and rewriting their

00:11:35,670 --> 00:11:45,509
systems from scratch what I haven't told

00:11:41,759 --> 00:11:46,860
you yet is every time I shown you your

00:11:45,509 --> 00:11:49,589
work space what you saw was a

00:11:46,860 --> 00:11:53,629
combination of technologies and we've

00:11:49,589 --> 00:11:56,449
got one demo here

00:11:53,629 --> 00:11:58,499
now what you see on the screen is

00:11:56,449 --> 00:12:00,779
something that everyone in the room

00:11:58,499 --> 00:12:03,899
would consider is legacy wind farms

00:12:00,779 --> 00:12:07,619
which probably vast majority of banking

00:12:03,899 --> 00:12:11,100
systems to run zone and we've got our

00:12:07,619 --> 00:12:14,990
favorite choice html5 these days so in

00:12:11,100 --> 00:12:18,079
html5 you can go and start doing

00:12:14,990 --> 00:12:20,999
whatever you do while developing your

00:12:18,079 --> 00:12:27,179
HTML applications you could break to

00:12:20,999 --> 00:12:29,730
your courage continue but yeah with wind

00:12:27,179 --> 00:12:33,269
forms we could suddenly what we could

00:12:29,730 --> 00:12:34,829
offer with the solution is people could

00:12:33,269 --> 00:12:36,779
suddenly from different teams use

00:12:34,829 --> 00:12:39,209
different technologies and develop the

00:12:36,779 --> 00:12:42,589
same applications which wasn't possible

00:12:39,209 --> 00:12:45,299
before every project that we worked on

00:12:42,589 --> 00:12:46,559
would be tight with the technology so if

00:12:45,299 --> 00:12:48,509
we working only in forms you would never

00:12:46,559 --> 00:12:50,040
be allowed to move on very quickly and

00:12:48,509 --> 00:12:52,559
as you can imagine these banks don't

00:12:50,040 --> 00:12:55,019
want to move very fast but with this

00:12:52,559 --> 00:12:59,220
architecture we could allow them to try

00:12:55,019 --> 00:13:02,519
any web technology they like think these

00:12:59,220 --> 00:13:06,119
people are very careful with going going

00:13:02,519 --> 00:13:07,679
web because what they see is in a web a

00:13:06,119 --> 00:13:08,790
lot of different frameworks everyone

00:13:07,679 --> 00:13:11,100
wants to do different things and

00:13:08,790 --> 00:13:12,570
everything changes like what was trendy

00:13:11,100 --> 00:13:16,650
week ago is not trendy

00:13:12,570 --> 00:13:23,600
anymore desktop I think state kind of

00:13:16,650 --> 00:13:25,770
conservative in that space yeah one

00:13:23,600 --> 00:13:31,020
additional feature that I could show you

00:13:25,770 --> 00:13:36,450
is ability for these big organizations

00:13:31,020 --> 00:13:40,170
to operate like startup let me maybe

00:13:36,450 --> 00:13:42,780
paint a picture of what the deployment

00:13:40,170 --> 00:13:46,020
looks like for these people they would

00:13:42,780 --> 00:13:49,710
usually take a team of people between

00:13:46,020 --> 00:13:51,480
Friday and Sunday there will be 10 to 15

00:13:49,710 --> 00:13:53,190
people on call everyone with their

00:13:51,480 --> 00:13:55,530
laptops everyone involved you can

00:13:53,190 --> 00:13:58,200
imagine how costly deployment of systems

00:13:55,530 --> 00:13:59,820
like this is and also the testing

00:13:58,200 --> 00:14:04,230
process they have to go through before

00:13:59,820 --> 00:14:08,790
they move this into production has to be

00:14:04,230 --> 00:14:12,860
quite long and for oh so everything adds

00:14:08,790 --> 00:14:15,510
up into their agility so effectively

00:14:12,860 --> 00:14:20,790
prevents them from being agile with

00:14:15,510 --> 00:14:24,840
their changes to their systems what we

00:14:20,790 --> 00:14:28,410
allow with containerization is to be

00:14:24,840 --> 00:14:32,820
able to not only deploy almost

00:14:28,410 --> 00:14:35,970
immediately but also deploy just parts

00:14:32,820 --> 00:14:41,880
of your applications we are what you see

00:14:35,970 --> 00:14:44,430
here on the left is some time and is the

00:14:41,880 --> 00:14:47,010
UI of our repository so if I now move a

00:14:44,430 --> 00:14:49,950
version of a price chart application and

00:14:47,010 --> 00:14:51,360
commit that change every user on the

00:14:49,950 --> 00:14:53,490
trading floor would get a notification

00:14:51,360 --> 00:14:57,240
there is a newer version of application

00:14:53,490 --> 00:14:59,670
once they okayed it up we now download

00:14:57,240 --> 00:15:00,770
the binary swapped it replaced it and

00:14:59,670 --> 00:15:05,100
now you're running the latest version

00:15:00,770 --> 00:15:07,110
same as let's say for whatever reason

00:15:05,100 --> 00:15:11,310
when there was a financial crisis and

00:15:07,110 --> 00:15:12,720
only one brother crashed we had to

00:15:11,310 --> 00:15:16,200
change tarp rocks to remove Lehman

00:15:12,720 --> 00:15:18,090
Brothers hard-coded strings and what

00:15:16,200 --> 00:15:20,370
these people would like to do they would

00:15:18,090 --> 00:15:22,260
like to be able to just one click and

00:15:20,370 --> 00:15:23,850
say everyone who was using this

00:15:22,260 --> 00:15:24,880
application cannot use it anymore and

00:15:23,850 --> 00:15:28,570
that didn't happen

00:15:24,880 --> 00:15:32,350
overnight like the demos claps so what

00:15:28,570 --> 00:15:34,090
we now could do we could also say now

00:15:32,350 --> 00:15:36,340
we're going to revoke access to these

00:15:34,090 --> 00:15:39,070
apps or the same way you could say you

00:15:36,340 --> 00:15:41,490
know what we've changed our minds we

00:15:39,070 --> 00:15:44,500
will roll them out and all this happens

00:15:41,490 --> 00:15:45,700
for users seamlessly without them seeing

00:15:44,500 --> 00:15:49,540
any interruption throughout their

00:15:45,700 --> 00:15:53,740
trading days think that's everything

00:15:49,540 --> 00:15:55,540
through from the demo we have five happy

00:15:53,740 --> 00:15:59,260
to take questions I know that's probably

00:15:55,540 --> 00:16:02,200
a technology that maybe a lot of you

00:15:59,260 --> 00:16:05,620
have a news desktop is not so trendy and

00:16:02,200 --> 00:16:08,260
fun but I think we delivering this

00:16:05,620 --> 00:16:10,780
technology and talking to our users have

00:16:08,260 --> 00:16:12,310
this unique ability of you know what do

00:16:10,780 --> 00:16:12,850
you want I can give it you in five

00:16:12,310 --> 00:16:15,250
minutes

00:16:12,850 --> 00:16:19,100
and seeing them bringing a lot of value

00:16:15,250 --> 00:16:25,479
making my own it it's quite fascinating

00:16:19,100 --> 00:16:25,479

YouTube URL: https://www.youtube.com/watch?v=TzVvqEVraoo


