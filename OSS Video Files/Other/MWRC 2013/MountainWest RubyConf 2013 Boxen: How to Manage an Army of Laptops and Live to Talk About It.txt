Title: MountainWest RubyConf 2013 Boxen: How to Manage an Army of Laptops and Live to Talk About It
Publication date: 2020-01-28
Playlist: MWRC 2013
Description: 
	Title: Boxen: How to Manage an Army of Laptops and Live to Talk About It
Presented by: Will  Farrington

At GitHub, we've been growing pretty quickly and that sort of growth presents a lot of challenges. We were feeling the pain of trying to teach everyone (developers and designers alike) how to get GitHub and all our other projects running on their laptops. The process was failure-prone, complex, and time-consuming. So, last summer, we created the first iteration of The Setup â€” GitHub's method of managing laptops without getting all authoritarian about it. We quickly realized that other organizations needed and wanted this environment, so we started back with the basics and re-architected The Setup into Boxen. The same tool, the same method, but written for modularity and general consumption.
We've since released Boxen (as of January 2013) and other organizations are using it to great success. This talk explores our design choices with Boxen, how we use Boxen internally, our recommended design patterns for managing Boxen-driven automation, and some new goodies coming down the pipeline for Boxen.

Help us caption & translate this video!

http://amara.org/v/FGcV/
Captions: 
	00:00:16,380 --> 00:00:19,380
hey

00:00:19,730 --> 00:00:27,450
alright that's already doing because

00:00:23,010 --> 00:00:28,500
much yeah these guys get it all right so

00:00:27,450 --> 00:00:32,820
I'm here today to talk to you about

00:00:28,500 --> 00:00:34,970
boxing so first Who am I I'm dubbed far

00:00:32,820 --> 00:00:37,379
on Twitter and on the github 'he's

00:00:34,970 --> 00:00:39,750
eyebright bikes and drink bourbon and do

00:00:37,379 --> 00:00:43,230
all sorts of other cool stuff at github

00:00:39,750 --> 00:00:44,760
I work on ops and friction in regards to

00:00:43,230 --> 00:00:46,140
friction specifically friction for

00:00:44,760 --> 00:00:49,079
developers and designers to get their

00:00:46,140 --> 00:00:50,430
jobs done I want to eliminate that right

00:00:49,079 --> 00:00:53,730
because it's a big problem as you as

00:00:50,430 --> 00:00:57,180
your company grows and boxing is kind of

00:00:53,730 --> 00:00:58,710
designed to tackle that um so I guess

00:00:57,180 --> 00:00:59,940
really the first thing that I should

00:00:58,710 --> 00:01:02,129
explain to you is why you should give a

00:00:59,940 --> 00:01:03,989
damn because hooray it's a project

00:01:02,129 --> 00:01:05,460
someone open sourced it it was on hacker

00:01:03,989 --> 00:01:08,090
news for like a day but what does that

00:01:05,460 --> 00:01:10,890
actually mean what can I glean from this

00:01:08,090 --> 00:01:14,130
so like most things it starts with a

00:01:10,890 --> 00:01:15,929
little bit of a story and it says hey we

00:01:14,130 --> 00:01:17,340
have a brand new developer it's their

00:01:15,929 --> 00:01:19,500
first day they've got a pretty cool

00:01:17,340 --> 00:01:21,330
laptop they've got a cup of coffee they

00:01:19,500 --> 00:01:24,300
got some swag on stuff like that and

00:01:21,330 --> 00:01:25,770
then they say hey you know what I really

00:01:24,300 --> 00:01:27,630
want to get hacking on stuff maybe I'm

00:01:25,770 --> 00:01:30,149
going to be working on making just

00:01:27,630 --> 00:01:32,310
faster I want to want to write code get

00:01:30,149 --> 00:01:33,539
that done and the process looks like

00:01:32,310 --> 00:01:35,940
this well maybe I'm going to install

00:01:33,539 --> 00:01:38,130
xcode then a ruby version manager and

00:01:35,940 --> 00:01:40,739
then a whole bunch of Ruby versions and

00:01:38,130 --> 00:01:43,020
then maybe pal I don't know after that

00:01:40,739 --> 00:01:45,090
maybe something like no Jas and then

00:01:43,020 --> 00:01:47,700
maybe Bauer so i can install jquery and

00:01:45,090 --> 00:01:49,319
bundler so i can manage gems and then

00:01:47,700 --> 00:01:54,830
maybe i'm going to go ahead and install

00:01:49,319 --> 00:01:57,890
my sequel or postgres i'll skip MongoDB

00:01:54,830 --> 00:02:00,780
I'll go straight on to elasticsearch and

00:01:57,890 --> 00:02:03,179
well wait a second i'm hitting problems

00:02:00,780 --> 00:02:05,910
wait Ruby seg vaulting what's going on

00:02:03,179 --> 00:02:08,310
my environment no longer works holy crap

00:02:05,910 --> 00:02:11,670
i'm confused and and now i feel like

00:02:08,310 --> 00:02:14,040
this right I'm sitting there and I'm

00:02:11,670 --> 00:02:16,110
copy and pasting i'm copy pasting

00:02:14,040 --> 00:02:18,300
directions or a script that somebody

00:02:16,110 --> 00:02:20,580
wrote once a long time ago that worked

00:02:18,300 --> 00:02:22,739
that one time and I just feel like I'm

00:02:20,580 --> 00:02:24,900
banging on the keyboard and nothing that

00:02:22,739 --> 00:02:26,400
is is should be happening is happening I

00:02:24,900 --> 00:02:29,040
don't understand why it's failing and

00:02:26,400 --> 00:02:32,520
that's problematic right and then I feel

00:02:29,040 --> 00:02:35,880
like this and a little bit like that

00:02:32,520 --> 00:02:37,500
and you just you really want to ship

00:02:35,880 --> 00:02:38,790
cool stuff right that's why you go to a

00:02:37,500 --> 00:02:40,200
new company you're excited about

00:02:38,790 --> 00:02:41,610
building those products for them you're

00:02:40,200 --> 00:02:43,860
excited about maintaining those products

00:02:41,610 --> 00:02:46,490
for them and this ruins that experience

00:02:43,860 --> 00:02:49,680
by the way cool stuff looks like that um

00:02:46,490 --> 00:02:51,960
and and and then this happens right the

00:02:49,680 --> 00:02:53,250
person who is like your ops person or

00:02:51,960 --> 00:02:57,060
like you're set up first in your company

00:02:53,250 --> 00:02:59,220
is like oh god it broke again they've

00:02:57,060 --> 00:03:01,950
got like PTSD because this happens every

00:02:59,220 --> 00:03:04,110
time a new hire comes on right it's just

00:03:01,950 --> 00:03:05,940
it'sit's I wonder what broke and and

00:03:04,110 --> 00:03:08,850
what that HAP what that makes that a

00:03:05,940 --> 00:03:10,740
user feel like is they do this instead

00:03:08,850 --> 00:03:14,220
then right there just like forget it I'm

00:03:10,740 --> 00:03:15,990
done day 1 i'm already having the worst

00:03:14,220 --> 00:03:19,250
day of my life because I just can't

00:03:15,990 --> 00:03:22,140
freaking talk to a database alright so

00:03:19,250 --> 00:03:24,570
we decided hey you know maybe we could

00:03:22,140 --> 00:03:26,700
write a solution to do this so what went

00:03:24,570 --> 00:03:30,000
from a little bit of heckling that

00:03:26,700 --> 00:03:33,690
looked like that John bard ahead is the

00:03:30,000 --> 00:03:34,980
the macaque on the side there he and I

00:03:33,690 --> 00:03:36,150
sat down and said let's write some code

00:03:34,980 --> 00:03:38,100
let's try to solve some problems with

00:03:36,150 --> 00:03:40,770
code we're developers is how we do

00:03:38,100 --> 00:03:44,850
things and we used to power the

00:03:40,770 --> 00:03:46,680
neckbeard and we arrived in something we

00:03:44,850 --> 00:03:48,180
think is at least a little bit better so

00:03:46,680 --> 00:03:50,400
we have our brand new employee still

00:03:48,180 --> 00:03:52,860
right and they come in on their first

00:03:50,400 --> 00:03:54,810
day and they're like oh man I'm ready to

00:03:52,860 --> 00:03:56,130
get it said I'll up I'm excited then

00:03:54,810 --> 00:03:59,280
write code i'm gonna make just super

00:03:56,130 --> 00:04:01,830
fast okay the guide says i open up a

00:03:59,280 --> 00:04:03,810
website i install xcode and i pasted the

00:04:01,830 --> 00:04:08,280
line to the terminal I'm gonna grab a

00:04:03,810 --> 00:04:10,800
coffee a new cup of coffee and then I'm

00:04:08,280 --> 00:04:12,840
gonna say holy crap it's done that's it

00:04:10,800 --> 00:04:14,970
that was the entire process there wasn't

00:04:12,840 --> 00:04:17,669
like a script that somebody wrote once

00:04:14,970 --> 00:04:19,709
and then never updated again it was

00:04:17,669 --> 00:04:21,900
idempotent it was managed it was version

00:04:19,709 --> 00:04:24,120
it was easy to understand it logged well

00:04:21,900 --> 00:04:25,980
I could follow along with what was

00:04:24,120 --> 00:04:29,610
happening and I had a fully working

00:04:25,980 --> 00:04:31,230
machine so what is Boxton actually like

00:04:29,610 --> 00:04:32,430
it in terms of like using it your

00:04:31,230 --> 00:04:33,540
organization because that's a nice high

00:04:32,430 --> 00:04:36,210
level overview of like what's going to

00:04:33,540 --> 00:04:37,770
give you but like what is it right so

00:04:36,210 --> 00:04:40,140
it's a tool primarily designed for max

00:04:37,770 --> 00:04:41,490
right now there's no reason I can't

00:04:40,140 --> 00:04:43,620
support linux that's always the biggest

00:04:41,490 --> 00:04:46,230
question that comes up we just targeted

00:04:43,620 --> 00:04:47,400
what most github errs use we're looking

00:04:46,230 --> 00:04:49,050
forward some people in the community are

00:04:47,400 --> 00:04:51,090
already working hard on making our

00:04:49,050 --> 00:04:52,290
modules so we're all using puppets

00:04:51,090 --> 00:04:55,230
support linux and we're very excited

00:04:52,290 --> 00:04:56,970
about that so it's a standard library of

00:04:55,230 --> 00:05:00,960
mostly a bunch of puppet modules with a

00:04:56,970 --> 00:05:02,280
little bit of ruby mixed in it tries to

00:05:00,960 --> 00:05:05,310
make things easier for your organization

00:05:02,280 --> 00:05:08,130
so you can help people work faster work

00:05:05,310 --> 00:05:09,450
better work smarter not worry about what

00:05:08,130 --> 00:05:12,390
component our stack is going to break

00:05:09,450 --> 00:05:15,270
today it's a philosophy about how you

00:05:12,390 --> 00:05:18,030
manage laptops locally and it's designed

00:05:15,270 --> 00:05:21,210
for teams that are autonomous by nature

00:05:18,030 --> 00:05:23,700
and what it looks like for end-users is

00:05:21,210 --> 00:05:26,400
they open up a website and then someone

00:05:23,700 --> 00:05:28,590
on your autonomous team say maybe mr. t

00:05:26,400 --> 00:05:29,790
is like hey you're going to run this and

00:05:28,590 --> 00:05:32,400
you're going to have an awesome laptop

00:05:29,790 --> 00:05:33,990
and then you get a development

00:05:32,400 --> 00:05:35,700
environment which the internet says

00:05:33,990 --> 00:05:38,100
looks like that I hope you does it look

00:05:35,700 --> 00:05:39,750
like that because this is flashbacks

00:05:38,100 --> 00:05:43,800
like this is Dom over here all right

00:05:39,750 --> 00:05:45,270
this is not cool and and these are the

00:05:43,800 --> 00:05:46,560
sorts of things that it comes with sort

00:05:45,270 --> 00:05:48,600
of by default we have a template

00:05:46,560 --> 00:05:50,160
repository that says here's how your

00:05:48,600 --> 00:05:51,510
organization gets set up you can see

00:05:50,160 --> 00:05:52,980
there's all sorts of things you need to

00:05:51,510 --> 00:05:54,690
run a modern sort of web development

00:05:52,980 --> 00:05:57,090
stack in this day and age and even

00:05:54,690 --> 00:05:59,460
native development to our github for Mac

00:05:57,090 --> 00:06:02,790
guys use this just the same as everybody

00:05:59,460 --> 00:06:05,310
else so what do you do with it once you

00:06:02,790 --> 00:06:07,980
have it in your organization right this

00:06:05,310 --> 00:06:09,120
is where it gets really fun so one of

00:06:07,980 --> 00:06:11,310
the first things we started to do with

00:06:09,120 --> 00:06:13,200
box and as we're developing it is using

00:06:11,310 --> 00:06:15,420
it to manage projects not just managing

00:06:13,200 --> 00:06:18,630
services but actual projects at a higher

00:06:15,420 --> 00:06:20,070
level and what that looks like is we

00:06:18,630 --> 00:06:22,790
again have our developer and they're

00:06:20,070 --> 00:06:26,460
like oh man I want a hack on github com

00:06:22,790 --> 00:06:27,810
so the readme says to set it up I run

00:06:26,460 --> 00:06:31,410
box and github well that's pretty cool

00:06:27,810 --> 00:06:34,170
and then maybe it's doing stuff puppets

00:06:31,410 --> 00:06:36,240
spitting out some logs and then like

00:06:34,170 --> 00:06:38,130
well what just happened it turns out

00:06:36,240 --> 00:06:40,200
it's a lot of stuff so much stuff in

00:06:38,130 --> 00:06:42,530
fact i had to decrease the font size 24

00:06:40,200 --> 00:06:45,330
points to fit it on one freaking slide a

00:06:42,530 --> 00:06:47,040
long story short they don't have to

00:06:45,330 --> 00:06:48,600
think about it and that's the idea right

00:06:47,040 --> 00:06:50,310
they shouldn't care about what version

00:06:48,600 --> 00:06:51,870
of solar is installed that's against

00:06:50,310 --> 00:06:53,160
earn for operations and systems because

00:06:51,870 --> 00:06:55,500
it should be the same version as is in

00:06:53,160 --> 00:06:57,570
production right they shouldn't care

00:06:55,500 --> 00:07:00,120
about what specific patch level of 193

00:06:57,570 --> 00:07:03,760
again that's passed down from production

00:07:00,120 --> 00:07:05,230
this manages all of that so how about

00:07:03,760 --> 00:07:07,510
the code that you actually write in

00:07:05,230 --> 00:07:09,340
boxing using puppet to make this happen

00:07:07,510 --> 00:07:11,620
well that's kind of a big one this is

00:07:09,340 --> 00:07:13,090
actually freaking copy and paste it

00:07:11,620 --> 00:07:15,520
directly this is how you run github on a

00:07:13,090 --> 00:07:17,710
laptop right which is still a lot of

00:07:15,520 --> 00:07:19,480
code but github is also a big project

00:07:17,710 --> 00:07:21,520
it's a long-lived project it's got a lot

00:07:19,480 --> 00:07:23,370
of cruft surrounding it unfortunately so

00:07:21,520 --> 00:07:26,320
what about your more average application

00:07:23,370 --> 00:07:27,880
that's a little bit nicer right so we're

00:07:26,320 --> 00:07:29,440
using environment variables to manage

00:07:27,880 --> 00:07:31,960
configuration we've got my sequel

00:07:29,440 --> 00:07:33,730
running and installed and we've got the

00:07:31,960 --> 00:07:35,860
databases created we've got engine X

00:07:33,730 --> 00:07:38,440
running with a custom engine XV host

00:07:35,860 --> 00:07:40,060
that allows you to use battle station

00:07:38,440 --> 00:07:42,220
dev is a way to access the application

00:07:40,060 --> 00:07:43,660
you've got Redis running you've got not

00:07:42,220 --> 00:07:45,550
only our Blessed patch release of Ruby

00:07:43,660 --> 00:07:46,900
20 installed but you've got to configure

00:07:45,550 --> 00:07:49,870
locally in the check out of this

00:07:46,900 --> 00:07:51,520
application it does all that and why is

00:07:49,870 --> 00:07:54,910
that like eight lines of code that's not

00:07:51,520 --> 00:07:57,130
too bad but I think we can do better but

00:07:54,910 --> 00:07:59,680
in addition to projects we manage

00:07:57,130 --> 00:08:01,840
everything else too boxin embraces the

00:07:59,680 --> 00:08:03,670
idea of personalization a lot of IT

00:08:01,840 --> 00:08:05,920
tools then focused on automation have

00:08:03,670 --> 00:08:07,600
come down sort of from the top right

00:08:05,920 --> 00:08:09,160
someone in an ivory tower says this

00:08:07,600 --> 00:08:10,960
version of Firefox is the only version

00:08:09,160 --> 00:08:13,030
of Firefox we can run our organization

00:08:10,960 --> 00:08:15,250
if you want to do anything else sucks to

00:08:13,030 --> 00:08:17,860
be you and that's that's not a good

00:08:15,250 --> 00:08:20,770
policy right like we're sort of in a way

00:08:17,860 --> 00:08:22,540
prima donnas about our development

00:08:20,770 --> 00:08:24,130
laptops we care a lot about how they

00:08:22,540 --> 00:08:25,840
work we all have different workflows and

00:08:24,130 --> 00:08:28,960
that helps us to be more productive and

00:08:25,840 --> 00:08:30,310
we decide to embrace that so let's say

00:08:28,960 --> 00:08:32,680
we have our developer again or our

00:08:30,310 --> 00:08:34,090
designer what have you and they come and

00:08:32,680 --> 00:08:36,070
say well that's cool but you know what

00:08:34,090 --> 00:08:37,720
about my configuration what if I want to

00:08:36,070 --> 00:08:40,150
get like team-ups installed or something

00:08:37,720 --> 00:08:44,020
right or maybe the bleeding edge version

00:08:40,150 --> 00:08:46,720
of SL and more screensavers with lasers

00:08:44,020 --> 00:08:48,700
and and and there's yes this guy knows

00:08:46,720 --> 00:08:51,760
what's up so there's this notion of

00:08:48,700 --> 00:08:53,140
personal manifest in boxing right so he

00:08:51,760 --> 00:08:55,870
kind of looks at the documentation and

00:08:53,140 --> 00:08:59,230
he sees some examples like this maybe me

00:08:55,870 --> 00:09:01,930
maybe I want he max gsh in a project

00:08:59,230 --> 00:09:04,210
checked out by default maybe I want to

00:09:01,930 --> 00:09:05,650
set my git config up maybe I want to

00:09:04,210 --> 00:09:07,810
clone some repositories for my Emacs

00:09:05,650 --> 00:09:09,520
config maybe I want to fix Bluetooth

00:09:07,810 --> 00:09:10,870
audio streaming because OS 10 does it

00:09:09,520 --> 00:09:13,510
deliver enough power to bluetooth by

00:09:10,870 --> 00:09:15,130
default this is all done inside

00:09:13,510 --> 00:09:16,840
but it's codified it's shareable it's

00:09:15,130 --> 00:09:18,400
reusable this is much better than a

00:09:16,840 --> 00:09:21,040
bunch of one-off fixes in a shell script

00:09:18,400 --> 00:09:22,000
that lives in your dot files repub so

00:09:21,040 --> 00:09:24,640
how does it work when you're actually

00:09:22,000 --> 00:09:27,040
using it the CLI looks like that just

00:09:24,640 --> 00:09:29,260
front box in it does some stuff you can

00:09:27,040 --> 00:09:32,080
ask about projects it knows about you

00:09:29,260 --> 00:09:33,100
can tell it to install a project and you

00:09:32,080 --> 00:09:34,510
can also run it with some extra

00:09:33,100 --> 00:09:36,070
debugging information there's a few

00:09:34,510 --> 00:09:38,530
other flags that are kind of cool too

00:09:36,070 --> 00:09:40,300
but they're not very important the other

00:09:38,530 --> 00:09:42,340
thing is we make updating easy so easy

00:09:40,300 --> 00:09:44,470
that if you're not paying attention you

00:09:42,340 --> 00:09:46,330
might not even notice but we still tell

00:09:44,470 --> 00:09:48,460
you about it we don't update behind the

00:09:46,330 --> 00:09:50,950
scenes rather we decide to go ahead and

00:09:48,460 --> 00:09:52,810
put out log output instead we tell users

00:09:50,950 --> 00:09:54,750
that we're updating my rep dating or

00:09:52,810 --> 00:09:57,070
better yet maybe why we're not updating

00:09:54,750 --> 00:09:59,140
maybe you have a dirty tree because you

00:09:57,070 --> 00:10:00,910
have some uncommitted changes maybe you

00:09:59,140 --> 00:10:02,440
have unput commits to master we dont

00:10:00,910 --> 00:10:04,330
want to overwrite maybe you're working

00:10:02,440 --> 00:10:07,450
on a feature branch don't want to mess

00:10:04,330 --> 00:10:09,190
that up one of the other things we focus

00:10:07,450 --> 00:10:11,590
on pretty heavily is making it easy to

00:10:09,190 --> 00:10:14,410
fail and not only that but easy to

00:10:11,590 --> 00:10:16,440
recover from failure so let's say I hit

00:10:14,410 --> 00:10:18,780
an error right I'm running some code and

00:10:16,440 --> 00:10:21,610
puppet throws and errors oh my god

00:10:18,780 --> 00:10:23,410
here's what happens it not only creates

00:10:21,610 --> 00:10:25,480
a github issue but if you look carefully

00:10:23,410 --> 00:10:28,300
this github issue tells you who failed

00:10:25,480 --> 00:10:29,650
how long ago they ran boxing what

00:10:28,300 --> 00:10:31,690
machine they're running it on what a

00:10:29,650 --> 00:10:34,900
version of OS 10 what shall they're

00:10:31,690 --> 00:10:37,630
using what r f of the repository they're

00:10:34,900 --> 00:10:39,490
using compare view link to master

00:10:37,630 --> 00:10:41,260
changes they have locally in their tree

00:10:39,490 --> 00:10:43,690
the command puppet ran and the entire

00:10:41,260 --> 00:10:46,540
puppet output right and what this

00:10:43,690 --> 00:10:48,070
enables us to do is that I can go ahead

00:10:46,540 --> 00:10:50,440
and I can look at the code and I can see

00:10:48,070 --> 00:10:52,750
oh man I totally see where that bug

00:10:50,440 --> 00:10:54,310
crept in I can fix it and I can run

00:10:52,750 --> 00:10:56,200
boxing or I can tell the person whose

00:10:54,310 --> 00:10:57,610
problem i fixed or unboxing and it

00:10:56,200 --> 00:11:00,190
automatically closed out issues whenever

00:10:57,610 --> 00:11:01,690
they have a successful run right what

00:11:00,190 --> 00:11:03,040
this allows us to do is it allows us to

00:11:01,690 --> 00:11:06,670
see how broken is the state of our

00:11:03,040 --> 00:11:07,870
configuration in our entire system by

00:11:06,670 --> 00:11:10,000
just looking at open issues on a

00:11:07,870 --> 00:11:11,680
repository we get a bird's eye view real

00:11:10,000 --> 00:11:13,210
quick of whether or not homebrew decided

00:11:11,680 --> 00:11:15,700
to roll out of breaking API change for

00:11:13,210 --> 00:11:17,740
example and that's all done hbu the

00:11:15,700 --> 00:11:19,930
github issues API it's pretty easy to

00:11:17,740 --> 00:11:21,760
configure inbox it as well this is one

00:11:19,930 --> 00:11:23,410
of the few opt-in features we have in

00:11:21,760 --> 00:11:26,780
boxing because not everyone wants that

00:11:23,410 --> 00:11:29,390
but it can make your life a lot easier

00:11:26,780 --> 00:11:31,970
so maybe your your employee saying well

00:11:29,390 --> 00:11:35,150
this is pretty cool but you know what

00:11:31,970 --> 00:11:37,010
it's code maybe I can write it maybe I

00:11:35,150 --> 00:11:40,070
can't though maybe you know maybe I'm an

00:11:37,010 --> 00:11:42,440
HR maybe I'm a sales person well we

00:11:40,070 --> 00:11:44,090
think that not only is that not really

00:11:42,440 --> 00:11:47,570
the case but we found out that that's

00:11:44,090 --> 00:11:49,760
not the case at all right so this is 158

00:11:47,570 --> 00:11:53,120
employees would github is that currently

00:11:49,760 --> 00:11:56,090
since October when we split the box and

00:11:53,120 --> 00:11:58,460
repo away from our old implementation of

00:11:56,090 --> 00:12:00,920
this call to set up 64 those people are

00:11:58,460 --> 00:12:02,960
about forty one percent have committed

00:12:00,920 --> 00:12:05,570
personal manifest or project manifests

00:12:02,960 --> 00:12:08,150
of those the breakdown looks like this

00:12:05,570 --> 00:12:10,430
the vast majority are developers got

00:12:08,150 --> 00:12:12,500
five designers who did it for support

00:12:10,430 --> 00:12:14,570
people one of our enterprise sales

00:12:12,500 --> 00:12:17,540
people has a freaking personal manifest

00:12:14,570 --> 00:12:19,970
right and guess just guess how many of

00:12:17,540 --> 00:12:24,230
these people new puppet before box the

00:12:19,970 --> 00:12:25,790
seven ops people that's it right I think

00:12:24,230 --> 00:12:27,260
that's a pretty big win I think it shows

00:12:25,790 --> 00:12:28,790
that it's possible and that if you

00:12:27,260 --> 00:12:30,080
really give people an opportunity and

00:12:28,790 --> 00:12:31,880
good documentation in a supportive

00:12:30,080 --> 00:12:33,980
environment for doing these things you

00:12:31,880 --> 00:12:40,190
can get good results out of it and I

00:12:33,980 --> 00:12:41,690
think that's pretty freaking cool so how

00:12:40,190 --> 00:12:43,820
about like really using it day to day

00:12:41,690 --> 00:12:45,280
let's talk about like what are the

00:12:43,820 --> 00:12:47,090
problems what are the sort of

00:12:45,280 --> 00:12:48,320
enhancements that you might want to add

00:12:47,090 --> 00:12:49,990
what are the things that we've run into

00:12:48,320 --> 00:12:52,250
that we've seen we want to make better

00:12:49,990 --> 00:12:53,810
so one of the things you should really

00:12:52,250 --> 00:12:55,190
start with if you're using box in your

00:12:53,810 --> 00:12:57,320
organization's you should embrace an

00:12:55,190 --> 00:12:58,910
extent which is to say that you should

00:12:57,320 --> 00:13:01,250
always be creating a higher level of

00:12:58,910 --> 00:13:02,480
abstractions and we've started do this

00:13:01,250 --> 00:13:04,400
so let's go back to this project

00:13:02,480 --> 00:13:08,060
definition we had from before for battle

00:13:04,400 --> 00:13:09,890
station right that these are github

00:13:08,060 --> 00:13:11,630
projects right this is inside the github

00:13:09,890 --> 00:13:12,890
organizations or github projects we're

00:13:11,630 --> 00:13:15,320
not sharing these manifest with the

00:13:12,890 --> 00:13:17,000
world so why are we specifying github

00:13:15,320 --> 00:13:18,260
and every single one of those well

00:13:17,000 --> 00:13:20,120
that's a simple abstraction let's

00:13:18,260 --> 00:13:21,290
optimize for our use case let's say okay

00:13:20,120 --> 00:13:22,550
we're going to have a wrapper around it

00:13:21,290 --> 00:13:24,230
let's say we have a high level github

00:13:22,550 --> 00:13:25,970
project that knows more intelligent

00:13:24,230 --> 00:13:27,980
things about how github needs to do

00:13:25,970 --> 00:13:29,450
things it's a pretty cool little

00:13:27,980 --> 00:13:30,770
abstraction you can add all sorts of

00:13:29,450 --> 00:13:32,120
optional parameters that influence the

00:13:30,770 --> 00:13:33,890
behavior of box and project without

00:13:32,120 --> 00:13:35,570
having to worry about introducing

00:13:33,890 --> 00:13:39,260
incompatible changes to the open source

00:13:35,570 --> 00:13:40,700
project but maybe we say you know what

00:13:39,260 --> 00:13:42,200
it would be really convenient if we

00:13:40,700 --> 00:13:43,640
made it for our entire operations team

00:13:42,200 --> 00:13:45,350
to get their entire environment that

00:13:43,640 --> 00:13:47,240
every office person needs set up without

00:13:45,350 --> 00:13:49,220
having to copy and paste stuff from like

00:13:47,240 --> 00:13:52,160
somebody else's manifest right we want

00:13:49,220 --> 00:13:53,660
that to be automated maybe we can write

00:13:52,160 --> 00:13:55,190
a parser function that looks like this

00:13:53,660 --> 00:13:57,290
that does an API called a github and

00:13:55,190 --> 00:13:58,970
says hey are you on the ops team man

00:13:57,290 --> 00:14:01,100
maybe I include github environment ops

00:13:58,970 --> 00:14:02,870
which was set up like vagrant and a

00:14:01,100 --> 00:14:04,280
bunch of projects by default now be

00:14:02,870 --> 00:14:05,690
pretty cool if they came in day one and

00:14:04,280 --> 00:14:07,100
had all the projects they needed already

00:14:05,690 --> 00:14:10,700
working on their laptop without even

00:14:07,100 --> 00:14:13,640
having to think about it that's pretty

00:14:10,700 --> 00:14:14,810
cool too i think the other thing you can

00:14:13,640 --> 00:14:17,030
do is you can you can really start

00:14:14,810 --> 00:14:20,480
simple right and what that comes down to

00:14:17,030 --> 00:14:22,610
is is don't try to necessarily abstract

00:14:20,480 --> 00:14:25,310
until there's a neat that's apparent

00:14:22,610 --> 00:14:27,350
right abstraction is good but it's there

00:14:25,310 --> 00:14:28,460
is an interesting post I was reading the

00:14:27,350 --> 00:14:30,530
other day that was written by Reagan

00:14:28,460 --> 00:14:33,530
wallet that is talking about abstraction

00:14:30,530 --> 00:14:35,000
in the context of code and basically

00:14:33,530 --> 00:14:36,050
what it came down to is there's one of

00:14:35,000 --> 00:14:37,790
two rules that say it's a good

00:14:36,050 --> 00:14:38,900
abstraction one is that the abstraction

00:14:37,790 --> 00:14:40,940
makes it at least an order of magnitude

00:14:38,900 --> 00:14:45,380
easier to understand what's going on and

00:14:40,940 --> 00:14:46,700
to the abstraction is sort of foresight

00:14:45,380 --> 00:14:48,260
you know that you're going to need to

00:14:46,700 --> 00:14:50,060
have it abstract it in the future anyway

00:14:48,260 --> 00:14:52,730
because of how your design is going to

00:14:50,060 --> 00:14:55,010
sort of unfold in the same sort of thing

00:14:52,730 --> 00:14:56,390
applies here so start with modules in

00:14:55,010 --> 00:14:59,000
charge your repository first and pull

00:14:56,390 --> 00:15:00,590
them out later we're doing this we right

00:14:59,000 --> 00:15:02,600
now i'm working on a rewrite of the

00:15:00,590 --> 00:15:05,450
nodejs module to move on to node n

00:15:02,600 --> 00:15:07,190
instead of nvm for version management's

00:15:05,450 --> 00:15:08,360
that's all being done in the github tree

00:15:07,190 --> 00:15:11,660
and i'll just be extracted out later

00:15:08,360 --> 00:15:13,250
that's easy the other thing you should

00:15:11,660 --> 00:15:14,630
do when it comes to writing these

00:15:13,250 --> 00:15:16,880
abstractions is you should always start

00:15:14,630 --> 00:15:19,580
with the puppet DSL public defined types

00:15:16,880 --> 00:15:22,130
are pretty expressive and they get you a

00:15:19,580 --> 00:15:23,630
long way but you should refactor it in

00:15:22,130 --> 00:15:25,460
review later if the performance demands

00:15:23,630 --> 00:15:27,920
it and that's that's really a big if

00:15:25,460 --> 00:15:29,600
case so like a typical example might

00:15:27,920 --> 00:15:31,220
look like this right we say here's how

00:15:29,600 --> 00:15:33,280
you install a node.js version here's the

00:15:31,220 --> 00:15:35,780
behavior that we care about and

00:15:33,280 --> 00:15:37,640
depending on how you implement the

00:15:35,780 --> 00:15:39,410
present and absent conditions the

00:15:37,640 --> 00:15:41,150
resources inside of them you might end

00:15:39,410 --> 00:15:42,710
up forking multiple times to apply these

00:15:41,150 --> 00:15:44,330
changes well that can be slow especially

00:15:42,710 --> 00:15:46,130
if you have to do them many times in a

00:15:44,330 --> 00:15:48,320
run so what you should watch out for

00:15:46,130 --> 00:15:49,970
past the first run is you should be

00:15:48,320 --> 00:15:51,620
using puppets profiling which you can

00:15:49,970 --> 00:15:54,020
use in boxing with bash Dash profile

00:15:51,620 --> 00:15:54,410
look at the profile information if your

00:15:54,020 --> 00:15:56,089
repeat

00:15:54,410 --> 00:15:57,470
seeing something take four seconds every

00:15:56,089 --> 00:15:59,120
run even though there's no changes being

00:15:57,470 --> 00:16:00,230
applied it's a good marker that you

00:15:59,120 --> 00:16:03,589
should go ahead and optimize and write a

00:16:00,230 --> 00:16:05,300
native type and Ruby so let's go ahead

00:16:03,589 --> 00:16:06,769
and look at what that would look like if

00:16:05,300 --> 00:16:07,850
we actually did this we're not going to

00:16:06,769 --> 00:16:10,160
look at the ruby implementation it's

00:16:07,850 --> 00:16:11,540
there's a lot of code but you see you

00:16:10,160 --> 00:16:13,310
just end up plugging it into your

00:16:11,540 --> 00:16:16,069
existing API so you don't introduce API

00:16:13,310 --> 00:16:19,370
breakages what you do is you just again

00:16:16,069 --> 00:16:20,720
make another layer of abstraction the

00:16:19,370 --> 00:16:22,639
other thing you should do is always do

00:16:20,720 --> 00:16:25,220
whatever works at the end of the day of

00:16:22,639 --> 00:16:27,649
practicality beats purity and we can do

00:16:25,220 --> 00:16:29,209
things the the way that you know a

00:16:27,649 --> 00:16:31,550
hundred different books recommend doing

00:16:29,209 --> 00:16:35,720
it but if it works it works right don't

00:16:31,550 --> 00:16:38,649
fix something it isn't broken so a lot

00:16:35,720 --> 00:16:40,910
of people having you know heard all this

00:16:38,649 --> 00:16:43,009
have some reasonable concerns and some

00:16:40,910 --> 00:16:45,529
not so reasonable concerns so let's

00:16:43,009 --> 00:16:46,759
explore some of those some people ask

00:16:45,529 --> 00:16:48,500
well why isn't this a bunch of shell

00:16:46,759 --> 00:16:50,540
scripts and hopefully in a in a room

00:16:48,500 --> 00:16:52,009
full of people who are focused on dev

00:16:50,540 --> 00:16:54,410
ops and operations of this sort of thing

00:16:52,009 --> 00:16:57,310
I don't have to explain that item poke

00:16:54,410 --> 00:16:59,750
behavior is a really big deal right as

00:16:57,310 --> 00:17:01,160
it turns out writing a script is great

00:16:59,750 --> 00:17:02,269
if you anticipate only running the

00:17:01,160 --> 00:17:03,620
script once and that all your

00:17:02,269 --> 00:17:06,589
dependencies are in a vacuum and never

00:17:03,620 --> 00:17:09,740
change but that's not how the real world

00:17:06,589 --> 00:17:11,360
works things change dependencies drift

00:17:09,740 --> 00:17:12,829
concerns drift and that's where

00:17:11,360 --> 00:17:15,409
idempotent behavior comes into play with

00:17:12,829 --> 00:17:17,390
configuration management and telling

00:17:15,409 --> 00:17:20,299
people if it just breaks reinstall your

00:17:17,390 --> 00:17:21,620
machine is it's a cop-out that's all it

00:17:20,299 --> 00:17:23,030
is all you're saying is I acknowledge

00:17:21,620 --> 00:17:24,949
it's broken but I don't want to waste my

00:17:23,030 --> 00:17:26,240
time helping you and that's not really a

00:17:24,949 --> 00:17:29,419
good way to support people inside your

00:17:26,240 --> 00:17:31,340
organization basically what it comes

00:17:29,419 --> 00:17:33,110
down to is if you know how users expect

00:17:31,340 --> 00:17:34,549
your software to work and you have the

00:17:33,110 --> 00:17:36,500
ability to automate that and you don't

00:17:34,549 --> 00:17:39,799
you're telling your users to off

00:17:36,500 --> 00:17:42,650
and that's not cool the other one I get

00:17:39,799 --> 00:17:44,870
a lot is why isn't this in chef I think

00:17:42,650 --> 00:17:46,460
chefs pretty cool I really do but the

00:17:44,870 --> 00:17:47,929
things written in puppet now and as

00:17:46,460 --> 00:17:50,750
everyone knows the great rewrite is not

00:17:47,929 --> 00:17:52,039
always the greatest idea there are a lot

00:17:50,750 --> 00:17:54,200
of cool things we could do in chef I

00:17:52,039 --> 00:17:55,580
would like to see them but I don't think

00:17:54,200 --> 00:17:56,780
staying the time to rewrite that when we

00:17:55,580 --> 00:17:59,240
could be developing new features is

00:17:56,780 --> 00:18:01,429
necessarily the best decision transcend

00:17:59,240 --> 00:18:04,260
tools right beautiful porcelain that's

00:18:01,429 --> 00:18:07,299
what Jay Newland says

00:18:04,260 --> 00:18:08,980
ed this is this is kind of serious like

00:18:07,299 --> 00:18:10,870
I hear this one a lot it's it's kind of

00:18:08,980 --> 00:18:14,110
a it's a little bit ridiculous in a way

00:18:10,870 --> 00:18:15,549
like being religious about your tooling

00:18:14,110 --> 00:18:18,370
is the quickest way to turn away people

00:18:15,549 --> 00:18:20,140
who would otherwise contribute very

00:18:18,370 --> 00:18:22,330
productive code focus on the porcelain

00:18:20,140 --> 00:18:23,500
not the tools so one of the more

00:18:22,330 --> 00:18:25,120
legitimate ones like you're often is

00:18:23,500 --> 00:18:27,220
well what about security updates

00:18:25,120 --> 00:18:29,740
security people are always about like

00:18:27,220 --> 00:18:31,419
how can we make this easier and the

00:18:29,740 --> 00:18:33,730
reason that is is if we look back at the

00:18:31,419 --> 00:18:36,039
dark ages of security interaction right

00:18:33,730 --> 00:18:38,289
we've got our security person here this

00:18:36,039 --> 00:18:40,330
is how most organizations and vision

00:18:38,289 --> 00:18:43,360
security they're just coming by to kill

00:18:40,330 --> 00:18:45,669
your hopes and dreams and they're like

00:18:43,360 --> 00:18:47,320
oh my god there's a Java browser plug-in

00:18:45,669 --> 00:18:49,059
exploit it's literally going to eat all

00:18:47,320 --> 00:18:50,830
of your Doritos is gonna kick your puppy

00:18:49,059 --> 00:18:53,140
it's gonna make you cry you're gonna

00:18:50,830 --> 00:18:56,409
hate life forever it's all doom and

00:18:53,140 --> 00:18:58,809
gloom it sounds like right and you're

00:18:56,409 --> 00:19:00,279
like be gone demon I don't care what you

00:18:58,809 --> 00:19:03,399
have to say about this I need a write

00:19:00,279 --> 00:19:05,020
code I'm an important developer it turns

00:19:03,399 --> 00:19:07,120
out they're never gonna never gonna rule

00:19:05,020 --> 00:19:09,429
out that security change and that makes

00:19:07,120 --> 00:19:13,779
the security person sat and the reason

00:19:09,429 --> 00:19:15,460
that the reason it makes them sad is

00:19:13,779 --> 00:19:16,990
because they're they're just someone

00:19:15,460 --> 00:19:19,899
else in the organization trying to get

00:19:16,990 --> 00:19:21,399
 done right so rather than fighting

00:19:19,899 --> 00:19:23,140
them every step of the way and ending up

00:19:21,399 --> 00:19:25,059
in a situation where you're running into

00:19:23,140 --> 00:19:27,010
oh my god all of our laptops are

00:19:25,059 --> 00:19:28,809
breached are like freaking dumping data

00:19:27,010 --> 00:19:31,840
out to some random IP on the internet

00:19:28,809 --> 00:19:34,240
right embrace working with security

00:19:31,840 --> 00:19:35,500
embrace that sort of automation right so

00:19:34,240 --> 00:19:37,570
the way we could make it better is say

00:19:35,500 --> 00:19:40,750
hey you know what maybe I rolled out

00:19:37,570 --> 00:19:42,970
nothing in boxing that disables java web

00:19:40,750 --> 00:19:44,529
browser plug-ins in Safari and hey I

00:19:42,970 --> 00:19:45,520
just told you about it here's the PR for

00:19:44,529 --> 00:19:47,080
the discussion around this and why it

00:19:45,520 --> 00:19:48,730
had to be done oh and also if you

00:19:47,080 --> 00:19:52,149
manually need to enable it for something

00:19:48,730 --> 00:19:54,159
here's how to do that too oh maybe it's

00:19:52,149 --> 00:19:56,230
audit season I wonder if we're secure

00:19:54,159 --> 00:19:57,820
against this you know what's way easier

00:19:56,230 --> 00:19:59,230
and way less time-consuming than having

00:19:57,820 --> 00:20:01,390
a manual audit of every developers

00:19:59,230 --> 00:20:04,990
machine having code you can look at that

00:20:01,390 --> 00:20:06,580
says yes this is the case so what if you

00:20:04,990 --> 00:20:08,470
run into problems you're using box in

00:20:06,580 --> 00:20:11,169
your environment maybe you're hitting

00:20:08,470 --> 00:20:12,850
issues what have you well you can file

00:20:11,169 --> 00:20:14,740
issues on github there's a whole bunch

00:20:12,850 --> 00:20:16,539
of repositories there's like 130 of them

00:20:14,740 --> 00:20:17,830
one per module plus a couple other

00:20:16,539 --> 00:20:19,659
templates

00:20:17,830 --> 00:20:23,620
there's also an IRC room it's pretty

00:20:19,659 --> 00:20:26,049
alright so I always like to end these

00:20:23,620 --> 00:20:28,659
sort of things with a story um usually

00:20:26,049 --> 00:20:31,809
something that happened recently so this

00:20:28,659 --> 00:20:33,809
happened in Boston last week I was in

00:20:31,809 --> 00:20:36,429
town for a conference called montrÃ©al um

00:20:33,809 --> 00:20:38,019
and what it what happened the first day

00:20:36,429 --> 00:20:40,510
I was out there I was walking around

00:20:38,019 --> 00:20:42,190
with a few other get hovers we're

00:20:40,510 --> 00:20:44,019
staying at the hack house and we're

00:20:42,190 --> 00:20:45,940
gonna go get some lunch and somebody

00:20:44,019 --> 00:20:47,409
drives by like we don't even know who

00:20:45,940 --> 00:20:51,250
this person is it just yells out the

00:20:47,409 --> 00:20:52,510
window yo github sucks we we were just

00:20:51,250 --> 00:20:54,039
taking a back we were surprised to have

00:20:52,510 --> 00:20:55,510
anyone yelling about github out of a car

00:20:54,039 --> 00:20:57,549
regardless of whether or not it was

00:20:55,510 --> 00:21:01,269
negative or positive right that's kind

00:20:57,549 --> 00:21:03,399
of like whoa yeah wait no uh and and

00:21:01,269 --> 00:21:04,990
what it comes down to is that at the end

00:21:03,399 --> 00:21:07,029
of the day like you kind of just have to

00:21:04,990 --> 00:21:09,190
laugh that stuff off ignore the haters

00:21:07,029 --> 00:21:10,450
and build cool software you could read

00:21:09,190 --> 00:21:12,340
hacker news all day you can read Twitter

00:21:10,450 --> 00:21:13,389
all day every there's always an expert

00:21:12,340 --> 00:21:15,220
out there who thinks whatever you're

00:21:13,389 --> 00:21:17,529
working on a keep building cool

00:21:15,220 --> 00:21:20,740
tools anyway that's the way we we really

00:21:17,529 --> 00:21:24,580
change the world right be like Neil

00:21:20,740 --> 00:21:26,769
Patrick Harris so I'm WF are the slides

00:21:24,580 --> 00:21:28,539
are up on speaker deck there's going to

00:21:26,769 --> 00:21:30,279
be a drink up tonight at the little

00:21:28,539 --> 00:21:34,269
America sports bar at eight-thirty this

00:21:30,279 --> 00:21:37,620
evening come by grab a beer on us thank

00:21:34,269 --> 00:21:37,620
you very much have a good day

00:21:48,570 --> 00:21:50,630
you

00:22:04,800 --> 00:22:06,860
you

00:22:08,120 --> 00:22:11,120

YouTube URL: https://www.youtube.com/watch?v=4PDNK-eWjG4


