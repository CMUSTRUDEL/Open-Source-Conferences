Title: Kod.io 2014 - Continuous Translation: I18n in Agile Projects by Burak Yiğit Kaya
Publication date: 2020-01-24
Playlist: Kod.io 2014
Description: 
	Translations or rather internationalization in projects are usually a "post-release" step and managing them was always quite a burden:
string freeze → extract those strings → send strings out (or put them in a DB) → wait for translations to come in → get the translations in the app → release.

If you notice errors in your translations, rinse & repeat, GLHF.

In this talk you'll see a new approach that will make you stop worrying about translations and have them as a part of your CI stack.

Burak will be sharing the journey and machinery behind getting the distributed social network Disqus available in more than 28 languages and counting, without hampering their development speed and daily deploys.

Help us caption & translate this video!

http://amara.org/v/FG3S/
Captions: 
	00:00:19,040 --> 00:00:25,500
everyone I'm Brock from discusses in ask

00:00:23,340 --> 00:00:28,140
me so I'm gonna talk about continues

00:00:25,500 --> 00:00:29,760
translation what that means for me is we

00:00:28,140 --> 00:00:32,400
do multiple deploys that they usually

00:00:29,760 --> 00:00:35,640
discuss and we support more than twenty

00:00:32,400 --> 00:00:38,760
eight languages and that takes some

00:00:35,640 --> 00:00:41,460
effort usually but for our case it is

00:00:38,760 --> 00:00:42,960
kind of low and I wanted to show you the

00:00:41,460 --> 00:00:45,780
story behind that so that other people

00:00:42,960 --> 00:00:47,280
can actually keep translating the

00:00:45,780 --> 00:00:50,850
projects and I keep the translations up

00:00:47,280 --> 00:00:52,290
today why I care about translations is

00:00:50,850 --> 00:00:54,480
because i think it's matters it matters

00:00:52,290 --> 00:00:56,790
because like i don't know how many of

00:00:54,480 --> 00:00:58,650
you speak rabuck but i don't and when i

00:00:56,790 --> 00:01:01,760
look at this it just intimidates me like

00:00:58,650 --> 00:01:04,710
if I see a product like that I just

00:01:01,760 --> 00:01:06,600
avoid using it or like this like Chinese

00:01:04,710 --> 00:01:08,159
right I don't speak Chinese I don't

00:01:06,600 --> 00:01:11,640
write Chinese and when I see something

00:01:08,159 --> 00:01:13,320
that that terrifies me and that's

00:01:11,640 --> 00:01:15,900
actually the case when you create an

00:01:13,320 --> 00:01:17,610
English application and then try to

00:01:15,900 --> 00:01:20,880
serve it it to Europe for instance like

00:01:17,610 --> 00:01:23,280
if they don't speak English they got

00:01:20,880 --> 00:01:25,680
intimated or like maybe make it German

00:01:23,280 --> 00:01:28,170
and some english-speaking person comes

00:01:25,680 --> 00:01:30,960
into your side and see something this so

00:01:28,170 --> 00:01:35,370
this looks better right so serving the

00:01:30,960 --> 00:01:38,370
native language to that user is actually

00:01:35,370 --> 00:01:40,590
shows you care about that user so that's

00:01:38,370 --> 00:01:41,940
why we try to strive at this case you

00:01:40,590 --> 00:01:45,210
like provide as many languages we can

00:01:41,940 --> 00:01:46,770
without any limits on that I started

00:01:45,210 --> 00:01:48,900
with the project is small nimble goal is

00:01:46,770 --> 00:01:50,250
a Turkish speaking person when i joined

00:01:48,900 --> 00:01:52,350
this class I'm like hey we gotta get you

00:01:50,250 --> 00:01:54,180
have this in Turkish and like this it ok

00:01:52,350 --> 00:01:56,880
try it but we don't think it's going to

00:01:54,180 --> 00:01:58,950
be like easy because you don't have to

00:01:56,880 --> 00:02:00,870
slow us down with translations like we

00:01:58,950 --> 00:02:03,360
are focused on the US market right now

00:02:00,870 --> 00:02:05,640
and they're like we don't really care

00:02:03,360 --> 00:02:07,260
about that much so you cannot slow us

00:02:05,640 --> 00:02:09,090
down with your translation stuff if you

00:02:07,260 --> 00:02:13,379
can manage that okay and like challenge

00:02:09,090 --> 00:02:16,019
accepted so why why this is important is

00:02:13,379 --> 00:02:18,870
like velocity matters I just like like

00:02:16,019 --> 00:02:20,640
type this kid command and like 27,000

00:02:18,870 --> 00:02:22,409
insertions in two months it is quite a

00:02:20,640 --> 00:02:24,180
lot like it's a really changing code

00:02:22,409 --> 00:02:27,300
base and this happens with eight

00:02:24,180 --> 00:02:29,430
front-end engineers like three mini

00:02:27,300 --> 00:02:31,680
projects per month like as many projects

00:02:29,430 --> 00:02:32,220
can be like rich media like highlighted

00:02:31,680 --> 00:02:33,900
comments

00:02:32,220 --> 00:02:35,820
that stuff like some things we cannot

00:02:33,900 --> 00:02:37,800
announce right now this kind of thing so

00:02:35,820 --> 00:02:40,110
like it's changed rapidly and video

00:02:37,800 --> 00:02:41,430
almost daily ploys actually more than

00:02:40,110 --> 00:02:43,230
the elite boys usually like seven

00:02:41,430 --> 00:02:45,960
deploys per week like we have five

00:02:43,230 --> 00:02:47,430
working days you free good number and

00:02:45,960 --> 00:02:49,260
the funny thing is like we have actually

00:02:47,430 --> 00:02:51,120
4,000 verse changing per week it's

00:02:49,260 --> 00:02:53,160
actually higher than this number like

00:02:51,120 --> 00:02:55,620
that is the translations they're like

00:02:53,160 --> 00:02:58,170
not the source drinks so we have this we

00:02:55,620 --> 00:03:00,240
have quite a change here and the time we

00:02:58,170 --> 00:03:03,660
spend on translations of any guesses

00:03:00,240 --> 00:03:08,070
anyone when I guess it's a pervy core

00:03:03,660 --> 00:03:09,720
like you can say per day oh well we have

00:03:08,070 --> 00:03:11,910
88 front-end engineers I cannot slow

00:03:09,720 --> 00:03:14,340
anyone down and like we don't want to

00:03:11,910 --> 00:03:19,830
put like throw to our support

00:03:14,340 --> 00:03:21,300
people so uh well I'm yeah but you can

00:03:19,830 --> 00:03:23,190
save two percent so it's actually one

00:03:21,300 --> 00:03:24,690
hour per week about like it usually

00:03:23,190 --> 00:03:26,970
lower than that but sometimes it goes

00:03:24,690 --> 00:03:28,770
high so the average is about one hour

00:03:26,970 --> 00:03:30,450
per week and that's with like 28

00:03:28,770 --> 00:03:31,590
languages and Counting so like you don't

00:03:30,450 --> 00:03:33,870
have any restrictions on the number of

00:03:31,590 --> 00:03:35,610
languages actually they're like 96 like

00:03:33,870 --> 00:03:37,980
use available in transifex I guess I'm

00:03:35,610 --> 00:03:39,660
going to come to that point later so how

00:03:37,980 --> 00:03:41,459
is this possible like what what makes

00:03:39,660 --> 00:03:43,260
this possible is like one of the major

00:03:41,459 --> 00:03:44,730
things we use is community translation

00:03:43,260 --> 00:03:46,320
so we actually don't have like your team

00:03:44,730 --> 00:03:48,239
that translates everything we actually

00:03:46,320 --> 00:03:50,430
rely on the community like if you speak

00:03:48,239 --> 00:03:51,900
German or if you speak French we expect

00:03:50,430 --> 00:03:54,239
you to you hey I want this thing in my

00:03:51,900 --> 00:03:56,180
language okay go ahead go to the service

00:03:54,239 --> 00:04:00,330
we provide or like actually be seriously

00:03:56,180 --> 00:04:02,459
buy or use and just translate things we

00:04:00,330 --> 00:04:04,200
have like 14 more than 1,400 translators

00:04:02,459 --> 00:04:07,410
and if the numbers just increasing all

00:04:04,200 --> 00:04:09,060
time and the other thing that's what I'm

00:04:07,410 --> 00:04:10,830
going to focus on is automating all the

00:04:09,060 --> 00:04:14,610
things like that's how how this is made

00:04:10,830 --> 00:04:16,040
possible so the combined solution for

00:04:14,610 --> 00:04:17,910
this is actually services a

00:04:16,040 --> 00:04:20,489
software-as-a-service or translations

00:04:17,910 --> 00:04:22,290
which we use and the chef's

00:04:20,489 --> 00:04:24,030
recommendation is transifex you really

00:04:22,290 --> 00:04:26,370
should check it out because I'm going to

00:04:24,030 --> 00:04:27,690
assume you kind of use transifex

00:04:26,370 --> 00:04:29,910
throughout to talk there's some other

00:04:27,690 --> 00:04:31,500
services competing with them they're not

00:04:29,910 --> 00:04:33,450
free but you can use them for free for

00:04:31,500 --> 00:04:36,060
open source projects I guess but the

00:04:33,450 --> 00:04:37,710
thing is they abstract things out and

00:04:36,060 --> 00:04:39,810
makes things really easy for you that

00:04:37,710 --> 00:04:41,970
you can keep your velocity when

00:04:39,810 --> 00:04:43,440
developing and the dentures you get is

00:04:41,970 --> 00:04:45,510
like this storage problem for

00:04:43,440 --> 00:04:46,050
translations where and how so suring

00:04:45,510 --> 00:04:47,789
translation

00:04:46,050 --> 00:04:49,830
in your source code is not a really good

00:04:47,789 --> 00:04:51,659
idea especially the source strings

00:04:49,830 --> 00:04:54,180
because they can be extracted from the

00:04:51,659 --> 00:04:56,099
source code itself so you're actually

00:04:54,180 --> 00:04:58,889
serving some sort of binaries in your

00:04:56,099 --> 00:05:00,750
code which is not good a service is it

00:04:58,889 --> 00:05:02,099
like software is a serious thing gives

00:05:00,750 --> 00:05:03,810
you like hey I'm the storage I'm

00:05:02,099 --> 00:05:06,599
database whatever you just like take

00:05:03,810 --> 00:05:09,000
them from me and put them into my data

00:05:06,599 --> 00:05:11,430
sore it also saw the UI problem I don't

00:05:09,000 --> 00:05:13,680
know like if you've seen translation you

00:05:11,430 --> 00:05:16,590
is but they usually suck and we had one

00:05:13,680 --> 00:05:18,659
that sucked to really bad and did like

00:05:16,590 --> 00:05:20,969
if you buy o sirs I use this service or

00:05:18,659 --> 00:05:22,710
something like this usually a really

00:05:20,969 --> 00:05:24,360
nice UI focus on that because that's all

00:05:22,710 --> 00:05:25,800
what they do right they focus on

00:05:24,360 --> 00:05:27,419
translating stuff so they give you an

00:05:25,800 --> 00:05:29,039
awesome thing they give you glossary

00:05:27,419 --> 00:05:32,460
suggestions whatever those kind of

00:05:29,039 --> 00:05:33,659
things and this also makes automation a

00:05:32,460 --> 00:05:35,520
requirement because now you're relying

00:05:33,659 --> 00:05:37,020
on a third party service right so you

00:05:35,520 --> 00:05:38,940
have to automate things because you

00:05:37,020 --> 00:05:40,830
cannot go to like tap on the shoulder if

00:05:38,940 --> 00:05:42,599
your friend and say hey like can you

00:05:40,830 --> 00:05:45,599
help me with that now that won't happen

00:05:42,599 --> 00:05:46,949
and one more thing is like since they

00:05:45,599 --> 00:05:48,150
really focus on languages in

00:05:46,949 --> 00:05:49,949
translations they abstract language

00:05:48,150 --> 00:05:51,479
specific issues for instance i learned

00:05:49,949 --> 00:05:53,460
that rahbek has six different

00:05:51,479 --> 00:05:56,009
polarizations like I don't want to

00:05:53,460 --> 00:05:58,740
manage that or like to know that or like

00:05:56,009 --> 00:06:00,479
some interesting unicode issues and

00:05:58,740 --> 00:06:02,909
stuff or like how the language is

00:06:00,479 --> 00:06:04,529
pronouncing in some language you just

00:06:02,909 --> 00:06:06,569
don't care about those it's just you

00:06:04,529 --> 00:06:08,940
don't know anything about that to make

00:06:06,569 --> 00:06:10,770
this happen we needed revision pipeline

00:06:08,940 --> 00:06:13,889
I call this a revision pipeline because

00:06:10,770 --> 00:06:15,419
this is run with every region or pull

00:06:13,889 --> 00:06:17,729
request or whatever you use like

00:06:15,419 --> 00:06:20,789
dispatches whatever that you submit to

00:06:17,729 --> 00:06:22,409
this system which we can summarize is

00:06:20,789 --> 00:06:24,360
with this like small pipe line graph

00:06:22,409 --> 00:06:27,779
like mark extract novice or outsource

00:06:24,360 --> 00:06:30,150
I'm going to walk through each each item

00:06:27,779 --> 00:06:34,080
to marking translatable Xin source files

00:06:30,150 --> 00:06:36,120
is the essence of making this work you

00:06:34,080 --> 00:06:38,310
can use get text I'm going to delve into

00:06:36,120 --> 00:06:40,560
that for java skip or see or read about

00:06:38,310 --> 00:06:42,449
those kind of languages even the python

00:06:40,560 --> 00:06:43,680
django whatever you use you can mark

00:06:42,449 --> 00:06:46,080
them in temp in your templates

00:06:43,680 --> 00:06:48,810
handlebars this stuff where this ginger

00:06:46,080 --> 00:06:50,639
probably has that and like or even you

00:06:48,810 --> 00:06:53,819
can use like pure HTML and somehow mark

00:06:50,639 --> 00:06:56,580
them and like for others to extract like

00:06:53,819 --> 00:06:59,940
the second most important thing about

00:06:56,580 --> 00:07:01,620
this step is them to be like your

00:06:59,940 --> 00:07:03,540
your program to be able to extract those

00:07:01,620 --> 00:07:04,800
strings efficiently and without any

00:07:03,540 --> 00:07:06,540
human interaction like you just run a

00:07:04,800 --> 00:07:09,900
command and extracts all the strings in

00:07:06,540 --> 00:07:11,400
your application and then you just all

00:07:09,900 --> 00:07:14,160
sorts these strings and like send them

00:07:11,400 --> 00:07:16,320
to your services if software as a

00:07:14,160 --> 00:07:20,970
service provider in like forget about

00:07:16,320 --> 00:07:23,340
them so make marking translatable is

00:07:20,970 --> 00:07:25,710
like usually done with get text function

00:07:23,340 --> 00:07:29,520
which is kind of defined as like this

00:07:25,710 --> 00:07:31,170
you give you that a string and it looks

00:07:29,520 --> 00:07:33,360
up in a dictionary if it has a

00:07:31,170 --> 00:07:35,040
translation like a value it returns that

00:07:33,360 --> 00:07:37,320
value if not it just folds back to the

00:07:35,040 --> 00:07:39,450
key itself so the key is a translatable

00:07:37,320 --> 00:07:41,790
string and if it cannot find a

00:07:39,450 --> 00:07:43,140
translation it just shows the original a

00:07:41,790 --> 00:07:45,510
so if you don't have translatable like

00:07:43,140 --> 00:07:48,150
if you have a string not translated yet

00:07:45,510 --> 00:07:50,370
at least people see a english version or

00:07:48,150 --> 00:07:52,440
like whatever your source languages it

00:07:50,370 --> 00:07:56,370
is just like this you pass the string

00:07:52,440 --> 00:07:58,830
and if you create the assignment then it

00:07:56,370 --> 00:08:00,690
just translate like returns the

00:07:58,830 --> 00:08:06,330
translated one if you have variables

00:08:00,690 --> 00:08:08,370
okay take your picture if you have

00:08:06,330 --> 00:08:11,130
variables you have this person

00:08:08,370 --> 00:08:13,650
parenthesis rateable name s syntax this

00:08:11,130 --> 00:08:16,490
is a legacy from see but that is the

00:08:13,650 --> 00:08:19,169
most common in like widely used format

00:08:16,490 --> 00:08:21,270
the thing I do that would replace it

00:08:19,169 --> 00:08:23,490
just don't do that I just did it quickly

00:08:21,270 --> 00:08:26,070
for slides you should use a proper

00:08:23,490 --> 00:08:28,169
interpolator just like printf or your

00:08:26,070 --> 00:08:30,560
invention doesn't matter just needs to

00:08:28,169 --> 00:08:35,669
handle this syntax like percent

00:08:30,560 --> 00:08:40,169
available name in parenthesis and s and

00:08:35,669 --> 00:08:43,020
extracting translatable is done usually

00:08:40,169 --> 00:08:45,150
usually like a tool my recommendation is

00:08:43,020 --> 00:08:46,860
to use jas get text for javascript

00:08:45,150 --> 00:08:48,810
projects which is developed by Mozilla

00:08:46,860 --> 00:08:52,710
I'm one of the Korean maintained errs of

00:08:48,810 --> 00:08:54,810
it it uses a it actually parses your

00:08:52,710 --> 00:08:56,670
source code not uses ready access or

00:08:54,810 --> 00:08:58,650
assembly it actually creates a parse

00:08:56,670 --> 00:09:01,400
tree and stuff and there's some really

00:08:58,650 --> 00:09:04,380
cool stuff and it also supports some

00:09:01,400 --> 00:09:08,130
widely used template languages like

00:09:04,380 --> 00:09:09,390
handlebars ginger Jade whatever and what

00:09:08,130 --> 00:09:12,899
you do is like you've run this command

00:09:09,390 --> 00:09:15,180
and it generates your file a we

00:09:12,899 --> 00:09:16,800
she is kind of in this format like you

00:09:15,180 --> 00:09:20,220
have its message ID and then these

00:09:16,800 --> 00:09:23,100
translation is empty right now then

00:09:20,220 --> 00:09:25,769
you're going to upload this file or

00:09:23,100 --> 00:09:28,230
outsource it using transifex this client

00:09:25,769 --> 00:09:31,470
called TX it's just it's kind of get

00:09:28,230 --> 00:09:34,050
like you just say TX push to send them

00:09:31,470 --> 00:09:36,059
you name your resource I said discuss

00:09:34,050 --> 00:09:38,160
jes you can say my app whatever and

00:09:36,059 --> 00:09:39,779
dashed I source means i'm uploading the

00:09:38,160 --> 00:09:41,519
source file not the translations and

00:09:39,779 --> 00:09:44,220
skip means like skip anything else in

00:09:41,519 --> 00:09:46,410
the middle you can get more information

00:09:44,220 --> 00:09:51,839
about that but it's kind of simple as

00:09:46,410 --> 00:09:53,069
that nothing nothing more so there are

00:09:51,839 --> 00:09:55,110
some things to be careful about this

00:09:53,069 --> 00:09:57,059
because I mentioned like with each

00:09:55,110 --> 00:10:00,119
revision you do this right you introduce

00:09:57,059 --> 00:10:01,709
a new string with a vision and then this

00:10:00,119 --> 00:10:04,649
thing runs and sends that strength to

00:10:01,709 --> 00:10:07,139
transifex you get translated the thing

00:10:04,649 --> 00:10:09,300
is if you've two divs two different

00:10:07,139 --> 00:10:11,129
revisions that in choose two different

00:10:09,300 --> 00:10:14,160
strings they will override at each other

00:10:11,129 --> 00:10:16,050
if you do the thing I just show so you

00:10:14,160 --> 00:10:18,179
actually need to merge what is available

00:10:16,050 --> 00:10:20,279
in the service this is a really good

00:10:18,179 --> 00:10:22,620
thing about those services to you can

00:10:20,279 --> 00:10:25,559
actually download what is there just

00:10:22,620 --> 00:10:27,449
like svn anyone who use svn in the past

00:10:25,559 --> 00:10:28,740
you actually need to like download all

00:10:27,449 --> 00:10:31,319
the changes before from the server and

00:10:28,740 --> 00:10:32,850
then add your changes on top of it which

00:10:31,319 --> 00:10:35,939
you can do with these two commands like

00:10:32,850 --> 00:10:37,110
don't worry about the dash l0 whatever

00:10:35,939 --> 00:10:41,249
those kind of things is just simple I

00:10:37,110 --> 00:10:43,050
could just pull the source and passive

00:10:41,249 --> 00:10:44,699
parameters st. join existing which means

00:10:43,050 --> 00:10:47,730
like don't create something from scratch

00:10:44,699 --> 00:10:49,980
but just use these one little downside

00:10:47,730 --> 00:10:52,639
of this is unused translations pile up

00:10:49,980 --> 00:10:54,839
but this is fixable what what I mean is

00:10:52,639 --> 00:10:56,730
sometimes you remove strings from your

00:10:54,839 --> 00:10:58,740
application but if you keep downloading

00:10:56,730 --> 00:11:00,779
the existing ones and building on top of

00:10:58,740 --> 00:11:03,329
them unused ones never get actually

00:11:00,779 --> 00:11:05,069
erased from your source translation

00:11:03,329 --> 00:11:06,209
translation source files but it's not a

00:11:05,069 --> 00:11:08,309
big deal if you don't use it it just

00:11:06,209 --> 00:11:11,850
kind of increase the size but you can

00:11:08,309 --> 00:11:13,199
always do like you scratch like build

00:11:11,850 --> 00:11:15,389
them from scratch command and then it

00:11:13,199 --> 00:11:18,209
cleans about and more important thing is

00:11:15,389 --> 00:11:20,399
with each revision you upload all the

00:11:18,209 --> 00:11:22,769
new strings introduced by that revision

00:11:20,399 --> 00:11:24,540
to a public place to your community of

00:11:22,769 --> 00:11:26,490
translators right and they see some

00:11:24,540 --> 00:11:29,490
features or at least translations for

00:11:26,490 --> 00:11:31,380
two features before they get available

00:11:29,490 --> 00:11:33,540
to them so if you're really frantic

00:11:31,380 --> 00:11:36,240
about like hiding things from end users

00:11:33,540 --> 00:11:39,300
before they get really ready this might

00:11:36,240 --> 00:11:47,880
be a deal-breaker for you and something

00:11:39,300 --> 00:11:49,500
to keep keep in mind so after handling

00:11:47,880 --> 00:11:53,430
revisions you actually need a build

00:11:49,500 --> 00:11:54,899
pipeline to everything you deploy before

00:11:53,430 --> 00:11:57,270
you deploy you actually need to build

00:11:54,899 --> 00:11:59,010
your application and then now it should

00:11:57,270 --> 00:12:01,440
include translations that is actually

00:11:59,010 --> 00:12:03,660
quite simple yeah this fetch step and

00:12:01,440 --> 00:12:05,040
the build step that step is like

00:12:03,660 --> 00:12:07,380
fetching translations from the service

00:12:05,040 --> 00:12:09,779
and build step is just like converting

00:12:07,380 --> 00:12:11,459
that p 0 or p OT file which is in a

00:12:09,779 --> 00:12:14,010
different format into your applications

00:12:11,459 --> 00:12:15,839
language for instance django python

00:12:14,010 --> 00:12:17,279
applications usually use mo files which

00:12:15,839 --> 00:12:20,279
are the compiled versions of them and

00:12:17,279 --> 00:12:23,279
you asked if you can use json or pure JS

00:12:20,279 --> 00:12:25,589
files that make some assignments it's up

00:12:23,279 --> 00:12:28,680
to you really so fetching translations

00:12:25,589 --> 00:12:32,790
is done with this command but before

00:12:28,680 --> 00:12:35,339
that to be to make everything dynamic

00:12:32,790 --> 00:12:38,310
enough like to do not bound the

00:12:35,339 --> 00:12:39,930
languages you support your service

00:12:38,310 --> 00:12:41,970
actually should provide you a list of

00:12:39,930 --> 00:12:43,950
languages they support they make

00:12:41,970 --> 00:12:46,170
available and the info with them and you

00:12:43,950 --> 00:12:47,910
should first download that or you store

00:12:46,170 --> 00:12:49,500
it in your code base but every time you

00:12:47,910 --> 00:12:51,959
do a build you should actually update

00:12:49,500 --> 00:12:54,060
this file which is not a really large

00:12:51,959 --> 00:12:58,680
file by the way and then you download

00:12:54,060 --> 00:13:01,110
the actual translations and then you go

00:12:58,680 --> 00:13:02,339
to the build step which is quite easy if

00:13:01,110 --> 00:13:04,890
you use ground or something like that

00:13:02,339 --> 00:13:07,050
you can even like right right up make

00:13:04,890 --> 00:13:09,240
script or something just your preference

00:13:07,050 --> 00:13:11,459
which is just again converting those p 0

00:13:09,240 --> 00:13:15,560
files into something usable by your

00:13:11,459 --> 00:13:17,880
program in this case JavaScript uh

00:13:15,560 --> 00:13:20,190
there's some like things to be careful

00:13:17,880 --> 00:13:23,010
about this step because like the biggest

00:13:20,190 --> 00:13:25,770
thing we worry about is even if it never

00:13:23,010 --> 00:13:28,050
went down what if transfix goes down and

00:13:25,770 --> 00:13:30,540
I want to build at that time like maybe

00:13:28,050 --> 00:13:32,310
I'm releasing a quick fix and I want to

00:13:30,540 --> 00:13:34,170
build that right and transfer he is not

00:13:32,310 --> 00:13:36,870
available or my network to that portion

00:13:34,170 --> 00:13:39,240
is down you can I like should i cancel

00:13:36,870 --> 00:13:40,290
the build know the easy solution is

00:13:39,240 --> 00:13:42,810
don't get

00:13:40,290 --> 00:13:45,079
okay with the code it's actually a

00:13:42,810 --> 00:13:49,290
summary of what we do we actually

00:13:45,079 --> 00:13:52,170
package the last used translations in a

00:13:49,290 --> 00:13:54,810
 bowl store it in a server of hours

00:13:52,170 --> 00:13:56,550
and then first place it in place and

00:13:54,810 --> 00:13:58,350
then update the translations which means

00:13:56,550 --> 00:14:01,170
even if I cannot contact transit

00:13:58,350 --> 00:14:03,089
transifex I can at least use the last

00:14:01,170 --> 00:14:05,370
known translations it may not be up to

00:14:03,089 --> 00:14:06,779
date but at least you're not failing you

00:14:05,370 --> 00:14:09,120
actually provide something to the people

00:14:06,779 --> 00:14:11,190
and the one good thing you get from this

00:14:09,120 --> 00:14:13,440
is transifex is client is smart enough

00:14:11,190 --> 00:14:15,480
to not fetch stale translations so

00:14:13,440 --> 00:14:18,240
between two bills if for instance

00:14:15,480 --> 00:14:19,949
Turkish language did not change it

00:14:18,240 --> 00:14:22,230
doesn't download that if you place the

00:14:19,949 --> 00:14:23,850
old file there it just checks it and

00:14:22,230 --> 00:14:27,120
eight is now update I'm not going to

00:14:23,850 --> 00:14:30,750
redownload it some additional

00:14:27,120 --> 00:14:33,839
considerations when having rapid

00:14:30,750 --> 00:14:35,759
translations is the RTL support how many

00:14:33,839 --> 00:14:37,500
of you are familiar with rtl languages

00:14:35,759 --> 00:14:42,149
or like at least know about what our TL

00:14:37,500 --> 00:14:44,850
is okay now not many hands but not do

00:14:42,149 --> 00:14:46,319
much to last you RTL is there are some

00:14:44,850 --> 00:14:48,360
languages just like rob a poor person

00:14:46,319 --> 00:14:51,569
that are written from right to left

00:14:48,360 --> 00:14:54,029
instead of our languages like left to

00:14:51,569 --> 00:14:57,060
right and that needs some special

00:14:54,029 --> 00:15:00,000
treatment not really a big deal but you

00:14:57,060 --> 00:15:01,370
have to take into account and the second

00:15:00,000 --> 00:15:03,389
thing is translating dates and times

00:15:01,370 --> 00:15:05,490
which you should not be yourself

00:15:03,389 --> 00:15:07,529
seriously there are tons of libraries

00:15:05,490 --> 00:15:09,240
for that don't remit the wheel it's

00:15:07,529 --> 00:15:10,740
really hard stuff and people actually

00:15:09,240 --> 00:15:13,110
taking care of that it's not changing

00:15:10,740 --> 00:15:14,610
like you don't want to wake up and say

00:15:13,110 --> 00:15:17,339
hey I'm not going to call it january i'm

00:15:14,610 --> 00:15:20,579
gonna say Jenny for this month you don't

00:15:17,339 --> 00:15:22,800
do that so just stick with the libraries

00:15:20,579 --> 00:15:24,660
I'm gonna come back to that so RTR

00:15:22,800 --> 00:15:26,670
support the first step is detecting if

00:15:24,660 --> 00:15:28,620
two languages RTL which is conveniently

00:15:26,670 --> 00:15:33,510
provided by your software as a service

00:15:28,620 --> 00:15:35,910
think there's like an what was that

00:15:33,510 --> 00:15:37,740
thing like is RTL or like RTL true or

00:15:35,910 --> 00:15:39,660
false like a balloon flag and then you

00:15:37,740 --> 00:15:41,939
need to set your dear attribute in your

00:15:39,660 --> 00:15:47,240
HTML file assuming you're doing this for

00:15:41,939 --> 00:15:50,579
HTML or based applications you set the

00:15:47,240 --> 00:15:52,589
RTL direction thing I'm going to dive

00:15:50,579 --> 00:15:54,089
into that more and then you create the

00:15:52,589 --> 00:15:55,949
CSS for RTL

00:15:54,089 --> 00:15:58,829
because browsers as stupid as you said

00:15:55,949 --> 00:16:00,959
direction RTL it doesn't actually flip

00:15:58,829 --> 00:16:03,389
your layout to accommodate that so you

00:16:00,959 --> 00:16:05,519
actually need to flip your CSS like

00:16:03,389 --> 00:16:07,410
float left becomes float right and those

00:16:05,519 --> 00:16:10,019
kind of things don't get scared there's

00:16:07,410 --> 00:16:11,579
an automated solution for that too so

00:16:10,019 --> 00:16:14,129
again detecting I said I already

00:16:11,579 --> 00:16:15,899
mentioned transfix RT are true or you

00:16:14,129 --> 00:16:18,680
can maintain your own list like rabbit

00:16:15,899 --> 00:16:21,569
version to like six languages I know

00:16:18,680 --> 00:16:23,490
setting the direction attribute is kind

00:16:21,569 --> 00:16:26,069
of more tricky but not really so you

00:16:23,490 --> 00:16:28,709
first of all you set RT direction RTL on

00:16:26,069 --> 00:16:31,680
your HTML like the top level element but

00:16:28,709 --> 00:16:33,600
you set direction auto all on all user

00:16:31,680 --> 00:16:35,610
content because even if the pages in

00:16:33,600 --> 00:16:39,300
like Arab League for instance people

00:16:35,610 --> 00:16:41,879
actually can have like English nicknames

00:16:39,300 --> 00:16:43,379
or like I'm English site names English

00:16:41,879 --> 00:16:44,910
comments even and then you don't want

00:16:43,379 --> 00:16:47,069
them to be like showing in reverse

00:16:44,910 --> 00:16:48,480
direction so you use direction auto and

00:16:47,069 --> 00:16:53,220
let the browser decide on the direction

00:16:48,480 --> 00:16:56,309
of that so creating RS CSS for RTL is

00:16:53,220 --> 00:16:58,980
the most tricky thing we thought but it

00:16:56,309 --> 00:17:01,499
actually was quite easy there's a tool

00:16:58,980 --> 00:17:05,459
for that chef's recommendation is r2

00:17:01,499 --> 00:17:08,939
there's also one more thing CSS Janice I

00:17:05,459 --> 00:17:11,130
guess artoo works on nodejs I'm also one

00:17:08,939 --> 00:17:13,529
of the maintainer I like it a lot it

00:17:11,130 --> 00:17:15,329
again parses your CSS finds float rights

00:17:13,529 --> 00:17:17,549
and converts them to float laughs or

00:17:15,329 --> 00:17:19,559
vice versa and handles lots of things

00:17:17,549 --> 00:17:21,270
and it's open source so you can extend

00:17:19,559 --> 00:17:25,260
it if it doesn't it doesn't do anything

00:17:21,270 --> 00:17:31,440
something you want so translating dates

00:17:25,260 --> 00:17:34,080
and times I already mentioned that you

00:17:31,440 --> 00:17:36,270
should use libraries and are my solution

00:17:34,080 --> 00:17:38,669
or my suggestion is to use moment je s

00:17:36,270 --> 00:17:42,289
which is an awesome library it has lots

00:17:38,669 --> 00:17:44,700
of translations built-in it has relative

00:17:42,289 --> 00:17:46,799
timestamps like two days ago in all

00:17:44,700 --> 00:17:48,120
languages also has all the formats and

00:17:46,799 --> 00:17:52,559
stuff so you just don't worry about that

00:17:48,120 --> 00:17:56,640
just one of those and you're done that

00:17:52,559 --> 00:17:58,320
also pro tip used uniques x times

00:17:56,640 --> 00:18:00,090
whenever possible because their time

00:17:58,320 --> 00:18:01,830
zone agnostic you don't have any issues

00:18:00,090 --> 00:18:03,899
and it's just a number so you just pass

00:18:01,830 --> 00:18:05,690
the number let the browser do it's magic

00:18:03,899 --> 00:18:09,630
or your sir

00:18:05,690 --> 00:18:12,660
now that brings me to the kind of

00:18:09,630 --> 00:18:15,990
finishing part of my automation stuff

00:18:12,660 --> 00:18:20,130
which is covering at all you really need

00:18:15,990 --> 00:18:21,780
a build automation system right you need

00:18:20,130 --> 00:18:24,300
a travesty ice kind of thing maybe

00:18:21,780 --> 00:18:27,330
Jenkins or maybe get hooks or like your

00:18:24,300 --> 00:18:30,300
own thing but to for this system to work

00:18:27,330 --> 00:18:32,360
you already need a working automation

00:18:30,300 --> 00:18:35,310
system in place for your builds or

00:18:32,360 --> 00:18:39,090
patches and all kind of things you use

00:18:35,310 --> 00:18:42,600
and again the one of the crucial things

00:18:39,090 --> 00:18:46,380
is using a software as a service for

00:18:42,600 --> 00:18:49,430
translations against transifex there are

00:18:46,380 --> 00:18:52,920
some alternatives again I don't really

00:18:49,430 --> 00:18:55,890
know anything more on top off the top of

00:18:52,920 --> 00:18:59,310
my head but transifex really was the key

00:18:55,890 --> 00:19:02,490
for us to go to success and obviously

00:18:59,310 --> 00:19:05,280
you need a task runner like for for

00:19:02,490 --> 00:19:06,900
Python you can use paper if you're using

00:19:05,280 --> 00:19:09,180
C or like you just want to stick to the

00:19:06,900 --> 00:19:12,960
old paths you can use make if your

00:19:09,180 --> 00:19:15,060
hipster you can use gulp or if you like

00:19:12,960 --> 00:19:19,650
more traditional JavaScript person like

00:19:15,060 --> 00:19:23,010
me you can use grunt I've actually

00:19:19,650 --> 00:19:26,040
extracted out some simple things a

00:19:23,010 --> 00:19:28,980
simple task that I defined in our grant

00:19:26,040 --> 00:19:31,680
file you can I'll give provide the link

00:19:28,980 --> 00:19:34,380
for my slides and then you can click on

00:19:31,680 --> 00:19:36,810
that link and see whatever you want it's

00:19:34,380 --> 00:19:38,460
not much but it gives you things so the

00:19:36,810 --> 00:19:40,530
thing is mission accomplished like I

00:19:38,460 --> 00:19:42,660
finally after a year's work or something

00:19:40,530 --> 00:19:45,210
I have managed to get discussed in

00:19:42,660 --> 00:19:46,830
Turkish and I can show my mom this thing

00:19:45,210 --> 00:19:47,670
like hey mom this is this is the thing

00:19:46,830 --> 00:19:53,520
I've work and you can actually

00:19:47,670 --> 00:19:55,350
understand what what it says and I'm

00:19:53,520 --> 00:19:57,390
wrapping up actually I want to continue

00:19:55,350 --> 00:20:00,060
the last five minutes with questions and

00:19:57,390 --> 00:20:01,620
answers but before that if this talk was

00:20:00,060 --> 00:20:04,350
interesting with all this stuff you're

00:20:01,620 --> 00:20:07,890
hiring just visit our jobs page and or

00:20:04,350 --> 00:20:11,700
drop me a line I'm Matt byk on Twitter

00:20:07,890 --> 00:20:14,330
and that wraps wraps up everything and

00:20:11,700 --> 00:20:17,010
if you have any questions I'd be glad to

00:20:14,330 --> 00:20:19,760
answer them and these are the links for

00:20:17,010 --> 00:20:23,180
this is link for the slides

00:20:19,760 --> 00:20:23,180

YouTube URL: https://www.youtube.com/watch?v=FbMrbysJbKc


