Title: Kod.io 2014 - AngularJS and i18n by Pascal Precht
Publication date: 2020-01-24
Playlist: Kod.io 2014
Description: 
	Building Single Page Applications with the AngularJS Framework works like a charm.
It gives you Dependency Injection, Two-Way Data-Binding and it's built with testability in mind.

Another feature of AngularJS is localization. This, however, is restricted to datetime, number and currency operations on a filter level.

Pascal will show you how to go beyond the basic AngularJS localization support with the angular-translate module, by making use of the provided Two-Way Data-Binding mechanism.

This talk is especially for people who haven't done much with AngularJS yet.

Help us caption & translate this video!

http://amara.org/v/FG36/
Captions: 
	00:00:18,620 --> 00:00:25,610
okay so this guy right here this is a

00:00:23,490 --> 00:00:28,560
friend of mine his name is Nando and

00:00:25,610 --> 00:00:31,050
Nando asked me earlier this year if I

00:00:28,560 --> 00:00:33,180
would join him to go to the gym and do

00:00:31,050 --> 00:00:35,760
something for my party and my health and

00:00:33,180 --> 00:00:38,700
because you know that I'm always always

00:00:35,760 --> 00:00:41,850
calling all day long and I thought about

00:00:38,700 --> 00:00:44,100
that and I said okay I'll join you and

00:00:41,850 --> 00:00:46,830
since then we're going to the gym up to

00:00:44,100 --> 00:00:49,500
four times a week so why am I telling

00:00:46,830 --> 00:00:52,470
you this you're asking right the reason

00:00:49,500 --> 00:00:55,409
why I tell is this I can't to the gym

00:00:52,470 --> 00:00:59,820
today because I'm here linson giving the

00:00:55,409 --> 00:01:02,370
talk which is why I would like to do

00:00:59,820 --> 00:01:05,040
some sport here with you guys so would

00:01:02,370 --> 00:01:11,400
you please do yourself a favor and stand

00:01:05,040 --> 00:01:13,770
up yes okay just really quick we do some

00:01:11,400 --> 00:01:15,690
air squats here 10s well actually I plan

00:01:13,770 --> 00:01:17,700
to do 12 air squats but we're a bit out

00:01:15,690 --> 00:01:19,020
of time so we do 10 air squats for those

00:01:17,700 --> 00:01:21,390
who don't know what a squad is I just

00:01:19,020 --> 00:01:24,930
showed real quick please pay attention I

00:01:21,390 --> 00:01:28,080
just show it once right so this is an

00:01:24,930 --> 00:01:33,540
air squat okay we do ten of them and we

00:01:28,080 --> 00:01:38,520
start right now one two three four five

00:01:33,540 --> 00:01:41,930
six seven eight and nine and ten

00:01:38,520 --> 00:01:41,930
excellent take a seat

00:01:44,330 --> 00:01:49,800
so I often see people who have something

00:01:46,980 --> 00:01:51,720
to give away at conferences because for

00:01:49,800 --> 00:01:53,130
example they have written their own book

00:01:51,720 --> 00:01:55,260
and then they bring two of them to the

00:01:53,130 --> 00:01:58,290
conference and can give them away I

00:01:55,260 --> 00:02:01,890
haven't written any book yet so I

00:01:58,290 --> 00:02:04,380
thought about this and yeah I I I

00:02:01,890 --> 00:02:07,110
searched in my in my apartment for

00:02:04,380 --> 00:02:09,239
something I can put giveaway and all I

00:02:07,110 --> 00:02:11,670
found was this little guy right here so

00:02:09,239 --> 00:02:13,590
this is a arctic head sticker if you

00:02:11,670 --> 00:02:14,129
want to Arctic it's a sticker this is

00:02:13,590 --> 00:02:19,110
your change

00:02:14,129 --> 00:02:22,370
chance today so yeah yeah this talk is

00:02:19,110 --> 00:02:26,220
about angularjs and internationalization

00:02:22,370 --> 00:02:28,590
we will talk about angularjs in general

00:02:26,220 --> 00:02:30,390
a bit and what it brings to you and what

00:02:28,590 --> 00:02:31,470
it gives you out of the box so you can

00:02:30,390 --> 00:02:33,540
do until s

00:02:31,470 --> 00:02:35,970
to nationalization and localization but

00:02:33,540 --> 00:02:39,680
we also go beyond it and see what else

00:02:35,970 --> 00:02:39,680
is possible with other modules right

00:02:40,340 --> 00:02:48,450
okay so by the way I'm Pascal I'm an

00:02:45,000 --> 00:02:50,460
innovation engineer at coach commerce we

00:02:48,450 --> 00:02:52,200
help people bring their online shops to

00:02:50,460 --> 00:02:53,900
mobile and touch devices and to be

00:02:52,200 --> 00:02:57,660
honest I don't really know what in

00:02:53,900 --> 00:02:59,430
innovation engineer is so actually I see

00:02:57,660 --> 00:03:03,480
me more like in professional animated

00:02:59,430 --> 00:03:04,470
Giff executors and this is how I look

00:03:03,480 --> 00:03:09,330
like went into my professional work

00:03:04,470 --> 00:03:11,190
right okay so anyway angularjs and we

00:03:09,330 --> 00:03:16,080
have any angular people here in this

00:03:11,190 --> 00:03:19,440
room yes yeah awesome great so how many

00:03:16,080 --> 00:03:21,170
people really heard about angularjs yeah

00:03:19,440 --> 00:03:25,800
that's a stupid question

00:03:21,170 --> 00:03:27,870
how about you sit yeah okay and which of

00:03:25,800 --> 00:03:31,080
these people think they really mastered

00:03:27,870 --> 00:03:34,290
it okay excellent

00:03:31,080 --> 00:03:36,630
great so angularjs is a JavaScript

00:03:34,290 --> 00:03:39,780
framework or an HTML compiler we get

00:03:36,630 --> 00:03:41,940
into this in a minute which lets you

00:03:39,780 --> 00:03:44,730
build applications single page

00:03:41,940 --> 00:03:47,160
applications in a very different way

00:03:44,730 --> 00:03:51,180
right so the original creator of

00:03:47,160 --> 00:03:53,310
angularjs misko hevery he says angularjs

00:03:51,180 --> 00:03:56,190
is what HTML would have been had been

00:03:53,310 --> 00:03:58,370
designed for web applications so HTML

00:03:56,190 --> 00:04:01,500
it's a declarative language and

00:03:58,370 --> 00:04:04,980
angularjs does exactly that it gives you

00:04:01,500 --> 00:04:07,110
the ability to extend the vocabulary of

00:04:04,980 --> 00:04:09,690
the browser so we can you know you can

00:04:07,110 --> 00:04:12,120
develop your own tags your own widgets

00:04:09,690 --> 00:04:13,920
your own attributes and write your apps

00:04:12,120 --> 00:04:19,530
in a declarative way which is really

00:04:13,920 --> 00:04:22,860
really awesome in other words it's HTML

00:04:19,530 --> 00:04:24,960
plus plus for me so I'm but yeah you see

00:04:22,860 --> 00:04:26,669
it so um

00:04:24,960 --> 00:04:29,850
for those who don't really know what

00:04:26,669 --> 00:04:32,820
what angular makes and what are the the

00:04:29,850 --> 00:04:36,080
concept concepts are so here's a little

00:04:32,820 --> 00:04:39,240
example of two-way data-binding and

00:04:36,080 --> 00:04:42,570
two-way data-binding is a really cool

00:04:39,240 --> 00:04:44,190
thing you can do you write um yeah

00:04:42,570 --> 00:04:45,330
you're you see the code you know you

00:04:44,190 --> 00:04:47,759
have this little in

00:04:45,330 --> 00:04:51,330
here and it has an NG model attribute

00:04:47,759 --> 00:04:54,000
and it is it has two value word and then

00:04:51,330 --> 00:04:57,419
you see this little paragraph with this

00:04:54,000 --> 00:05:00,569
Curly's and the D word in it so what

00:04:57,419 --> 00:05:02,789
what does that mean we have here the ng

00:05:00,569 --> 00:05:06,080
model sets up and two-way data-binding

00:05:02,789 --> 00:05:10,379
in angularjs and the the word is just

00:05:06,080 --> 00:05:12,990
kind of identifier right so you can use

00:05:10,379 --> 00:05:15,360
in your view in your HTML like in this

00:05:12,990 --> 00:05:18,690
paragraph right here the curly braces

00:05:15,360 --> 00:05:21,750
for interpolation and then you can just

00:05:18,690 --> 00:05:24,840
put in the identifier word and whatever

00:05:21,750 --> 00:05:27,690
word is would be shown in that curly

00:05:24,840 --> 00:05:28,849
braces so let's take a look at this

00:05:27,690 --> 00:05:32,190
example

00:05:28,849 --> 00:05:35,210
okay so let's say correo is really

00:05:32,190 --> 00:05:39,539
really cool so like gods like hyper

00:05:35,210 --> 00:05:43,409
awesome and as you can see here the

00:05:39,539 --> 00:05:45,569
paragraph updates one I'm typing and I

00:05:43,409 --> 00:05:48,210
don't have to write any JavaScript to do

00:05:45,569 --> 00:05:51,029
that right so this is all it does you

00:05:48,210 --> 00:05:53,610
see here this is just declarative stuff

00:05:51,029 --> 00:05:56,699
here I haven't written any any line of

00:05:53,610 --> 00:05:59,639
code that's to a two-way data-binding

00:05:56,699 --> 00:06:01,770
you have one single source of truth on

00:05:59,639 --> 00:06:05,069
your scope if you don't define this

00:06:01,770 --> 00:06:07,289
specific scope angular has an kind of

00:06:05,069 --> 00:06:10,409
it's called root scope which is a kind

00:06:07,289 --> 00:06:13,680
of global scope so you can assume that

00:06:10,409 --> 00:06:18,870
this words value is now on the global

00:06:13,680 --> 00:06:22,020
scope so here's another another example

00:06:18,870 --> 00:06:24,060
just a list of songs and interprets I

00:06:22,020 --> 00:06:25,650
really like to listen to and there's

00:06:24,060 --> 00:06:29,539
Skrillex let's say we search for

00:06:25,650 --> 00:06:34,710
Skrillex and you see as I'm typing the

00:06:29,539 --> 00:06:37,110
the lists get shorter and okay so this

00:06:34,710 --> 00:06:39,560
this is not real like like mind-blowing

00:06:37,110 --> 00:06:43,259
right but if you take a look at the code

00:06:39,560 --> 00:06:46,969
right here you see it's just actually

00:06:43,259 --> 00:06:51,419
just a table and then we have this

00:06:46,969 --> 00:06:54,870
ng-model again yeah which is just any

00:06:51,419 --> 00:06:59,190
kind of way value and then we have an NG

00:06:54,870 --> 00:07:02,520
repeat and ng-repeat is is a so-called

00:06:59,190 --> 00:07:05,250
if just like ng-model and it extends the

00:07:02,520 --> 00:07:07,890
the functionality of any kind of HTML

00:07:05,250 --> 00:07:12,180
element so this ng-repeat does obviously

00:07:07,890 --> 00:07:14,490
it repeats the data it gets depending on

00:07:12,180 --> 00:07:17,400
the expression you pass into it and what

00:07:14,490 --> 00:07:20,130
do we do here we have this expression

00:07:17,400 --> 00:07:24,120
here which is just song and songs so

00:07:20,130 --> 00:07:26,850
songs is another value on the current

00:07:24,120 --> 00:07:29,010
scope it comes from a JavaScript code

00:07:26,850 --> 00:07:31,500
from a controller the filter controller

00:07:29,010 --> 00:07:34,590
right here and all the controller does

00:07:31,500 --> 00:07:37,530
actually is it's assigned it assigns

00:07:34,590 --> 00:07:39,090
values I'm just an array of songs to the

00:07:37,530 --> 00:07:41,820
current scope and then it's available

00:07:39,090 --> 00:07:45,090
here in the HTML right and then I can

00:07:41,820 --> 00:07:47,280
just write ng-repeat song and songs and

00:07:45,090 --> 00:07:51,270
it would iterate over all songs and do

00:07:47,280 --> 00:07:54,960
something like just what I would I what

00:07:51,270 --> 00:07:57,320
I type here right so you can see that

00:07:54,960 --> 00:08:01,260
they are again these interpolations and

00:07:57,320 --> 00:08:04,260
a song is just an object with a property

00:08:01,260 --> 00:08:07,470
title and we have artists so you can the

00:08:04,260 --> 00:08:09,570
use these JavaScript expressions or

00:08:07,470 --> 00:08:13,350
angular expressions to access these

00:08:09,570 --> 00:08:15,660
these values we also have some filters

00:08:13,350 --> 00:08:19,890
apply to you so you see this order by

00:08:15,660 --> 00:08:22,380
title you see filters search and these

00:08:19,890 --> 00:08:24,240
are two filters and you can use them in

00:08:22,380 --> 00:08:26,220
the view so you can just say you have an

00:08:24,240 --> 00:08:28,410
angular expression like song and songs

00:08:26,220 --> 00:08:30,720
and then you will say pipe and then you

00:08:28,410 --> 00:08:33,800
apply a filter in this case it's that

00:08:30,720 --> 00:08:38,400
the the list that is that gets generated

00:08:33,800 --> 00:08:40,620
it gets ordered by title right and then

00:08:38,400 --> 00:08:43,260
we have a filter filter so the filter is

00:08:40,620 --> 00:08:45,660
called filter and it filters the the

00:08:43,260 --> 00:08:47,760
given values by the value which is

00:08:45,660 --> 00:08:50,730
person s an expression here which is

00:08:47,760 --> 00:08:54,150
search and search it's just the value of

00:08:50,730 --> 00:08:56,850
this ng model right here okay so this is

00:08:54,150 --> 00:09:01,040
the what comes out here so what I'm

00:08:56,850 --> 00:09:05,610
typing here like some def punk stuff or

00:09:01,040 --> 00:09:09,660
Skrillex around the world all of the

00:09:05,610 --> 00:09:11,440
song okay so you're probably not

00:09:09,660 --> 00:09:15,040
impressed yet right

00:09:11,440 --> 00:09:17,860
well I give you another example this is

00:09:15,040 --> 00:09:20,980
the angular shield the angular logo and

00:09:17,860 --> 00:09:22,990
you can drag it here if you have this

00:09:20,980 --> 00:09:25,839
open on your laptop you can just drag it

00:09:22,990 --> 00:09:27,879
this is also nothing really special but

00:09:25,839 --> 00:09:30,730
if we take a look at the code we see

00:09:27,879 --> 00:09:34,509
that it's just this draggable attribute

00:09:30,730 --> 00:09:38,860
right well it's not only this attribute

00:09:34,509 --> 00:09:42,730
draggable but it's also this bit of code

00:09:38,860 --> 00:09:45,550
so what we do here is we we defined it

00:09:42,730 --> 00:09:49,449
directive right and the directive is

00:09:45,550 --> 00:09:51,910
that the thing that extends your your

00:09:49,449 --> 00:09:54,730
your HTML so we define a directive

00:09:51,910 --> 00:09:57,339
called draggable which does something we

00:09:54,730 --> 00:09:59,860
see that we have a function here so you

00:09:57,339 --> 00:10:02,259
define a kind of factory function which

00:09:59,860 --> 00:10:06,670
has dependency injection so you can ask

00:10:02,259 --> 00:10:08,800
for other services in angular in this

00:10:06,670 --> 00:10:10,600
case we ask for the document service

00:10:08,800 --> 00:10:16,300
which is actually just a wrapper of the

00:10:10,600 --> 00:10:18,160
window dot document value and all it

00:10:16,300 --> 00:10:20,019
does here is that you can see we have

00:10:18,160 --> 00:10:22,389
here access to the to the current scope

00:10:20,019 --> 00:10:25,449
of the directive we have access to the

00:10:22,389 --> 00:10:28,089
element and we have access to the given

00:10:25,449 --> 00:10:31,350
attributes we have right and all we do

00:10:28,089 --> 00:10:34,509
here is this just we apply some CSS and

00:10:31,350 --> 00:10:37,329
at some event listener on Mouse down and

00:10:34,509 --> 00:10:39,819
give some event handlers mouse move

00:10:37,329 --> 00:10:43,389
mouse app this is all a test right this

00:10:39,819 --> 00:10:48,339
is just this this drag-and-drop right

00:10:43,389 --> 00:10:51,430
here so the real cool thing about that

00:10:48,339 --> 00:10:54,250
is that we can now use this this

00:10:51,430 --> 00:10:55,949
directive where we want it doesn't

00:10:54,250 --> 00:11:00,430
matter you can apply to any element and

00:10:55,949 --> 00:11:02,019
I think this is really cool because we

00:11:00,430 --> 00:11:04,600
cannot only define our own attributes

00:11:02,019 --> 00:11:08,079
that do something we can also define our

00:11:04,600 --> 00:11:13,120
own elements like web components the new

00:11:08,079 --> 00:11:17,860
spec and the future of the web right ok

00:11:13,120 --> 00:11:20,259
so there's so much more for angularjs we

00:11:17,860 --> 00:11:22,059
have like a dependency injection on a

00:11:20,259 --> 00:11:23,430
module level we have dependency

00:11:22,059 --> 00:11:25,760
injection on a

00:11:23,430 --> 00:11:29,010
component-level like filters and

00:11:25,760 --> 00:11:31,440
services and controllers so you don't

00:11:29,010 --> 00:11:33,780
have this bootstrap code you can just

00:11:31,440 --> 00:11:36,150
ask for services and you have them in

00:11:33,780 --> 00:11:38,430
your scope and your controller their

00:11:36,150 --> 00:11:40,920
views and routes so you can really

00:11:38,430 --> 00:11:43,710
really easily set up a little single

00:11:40,920 --> 00:11:47,190
page application with with URL routes

00:11:43,710 --> 00:11:48,780
and views there's great support for

00:11:47,190 --> 00:11:51,900
animations class-based

00:11:48,780 --> 00:11:55,890
animations and anglo j/s is also built

00:11:51,900 --> 00:11:59,310
and built with really with testability

00:11:55,890 --> 00:12:02,070
in mind so there are also angular mark

00:11:59,310 --> 00:12:04,350
modules you can use so that you can

00:12:02,070 --> 00:12:06,720
write your entire code with unit tests

00:12:04,350 --> 00:12:08,640
and which is really cool so there's a

00:12:06,720 --> 00:12:12,000
link to the docs if you want to check it

00:12:08,640 --> 00:12:17,180
out and that's just the basic concepts

00:12:12,000 --> 00:12:20,040
of angular right okay so but what about

00:12:17,180 --> 00:12:22,620
internationalization so first of all

00:12:20,040 --> 00:12:24,570
what does internationalization mean and

00:12:22,620 --> 00:12:27,600
then there's also the term localization

00:12:24,570 --> 00:12:29,670
right so internationalization means it

00:12:27,600 --> 00:12:32,130
is the process of developing products in

00:12:29,670 --> 00:12:34,400
such a way that they can be localized

00:12:32,130 --> 00:12:37,170
for languages and cultures easily

00:12:34,400 --> 00:12:40,160
whatever that means we accept it for now

00:12:37,170 --> 00:12:42,210
right then there is localization

00:12:40,160 --> 00:12:44,220
localization is the process of adapting

00:12:42,210 --> 00:12:46,440
applications and text to enable their

00:12:44,220 --> 00:12:51,060
usability in a particular cultural or

00:12:46,440 --> 00:12:52,830
linguistic market whatever so this is

00:12:51,060 --> 00:12:55,560
actually this is from the from the

00:12:52,830 --> 00:12:58,410
angularjs ducks right and the first time

00:12:55,560 --> 00:13:01,230
I read this I was like does that

00:12:58,410 --> 00:13:03,380
mean right so in general or in other

00:13:01,230 --> 00:13:06,390
words this means

00:13:03,380 --> 00:13:08,280
internationalizing and application means

00:13:06,390 --> 00:13:10,110
abstracting all the strings and all

00:13:08,280 --> 00:13:13,070
other local specific bits out of an

00:13:10,110 --> 00:13:16,320
application and localization means

00:13:13,070 --> 00:13:19,200
providing translations and the localized

00:13:16,320 --> 00:13:21,570
formats for the abstracted bits so it's

00:13:19,200 --> 00:13:24,060
just like you have straight away all

00:13:21,570 --> 00:13:27,170
your strings and concrete values on your

00:13:24,060 --> 00:13:30,240
applications with something abstract and

00:13:27,170 --> 00:13:32,340
then you feed your app with concrete's

00:13:30,240 --> 00:13:35,840
or concrete values like concrete

00:13:32,340 --> 00:13:39,950
translations and stuff like that

00:13:35,840 --> 00:13:42,110
so how's the support in angular so what

00:13:39,950 --> 00:13:43,670
do you get from angular out-of-the-box

00:13:42,110 --> 00:13:47,150
for internationalization and

00:13:43,670 --> 00:13:50,779
localization so there are filters like

00:13:47,150 --> 00:13:52,700
the one I showed just recently and one

00:13:50,779 --> 00:13:55,610
of these filters are a date/time number

00:13:52,700 --> 00:13:58,130
and currency right so you can use these

00:13:55,610 --> 00:14:01,100
filters and they give you a specific

00:13:58,130 --> 00:14:03,980
output like the daytime filter just

00:14:01,100 --> 00:14:06,790
format date with the time if you want to

00:14:03,980 --> 00:14:08,360
we have numbers and the currency just

00:14:06,790 --> 00:14:11,380
depends on

00:14:08,360 --> 00:14:14,690
yeah which locale you have right and

00:14:11,380 --> 00:14:18,160
then we have a kind of pluralization

00:14:14,690 --> 00:14:22,870
support with the ng pluralize directive

00:14:18,160 --> 00:14:25,670
we get into that in a minute and all

00:14:22,870 --> 00:14:29,230
localizable components depend on the

00:14:25,670 --> 00:14:32,690
locators so what does that mean

00:14:29,230 --> 00:14:34,400
these components okay they depend on the

00:14:32,690 --> 00:14:36,800
local service and the local service is

00:14:34,400 --> 00:14:39,580
actually it's it's another angular

00:14:36,800 --> 00:14:42,560
module which you can just embed in your

00:14:39,580 --> 00:14:46,430
application and then it kind of controls

00:14:42,560 --> 00:14:49,970
the the the rules for your for your

00:14:46,430 --> 00:14:53,600
specific locator right so we have here's

00:14:49,970 --> 00:14:56,780
some Lopez this is the the ketchup

00:14:53,600 --> 00:14:58,970
repository of angular and you see here

00:14:56,780 --> 00:15:02,960
that there is under SRC we have here at

00:14:58,970 --> 00:15:06,020
this engine locale and Angelo care is is

00:15:02,960 --> 00:15:09,130
is a module like almost everything in

00:15:06,020 --> 00:15:12,800
angular and we see here a big list of

00:15:09,130 --> 00:15:19,220
modules just for each locale so we have

00:15:12,800 --> 00:15:24,970
for example oops we have for example de

00:15:19,220 --> 00:15:24,970
de for German or we have the e8e whoops

00:15:25,270 --> 00:15:33,800
like this and we open it we can see that

00:15:29,709 --> 00:15:37,040
this is an angular module called ng

00:15:33,800 --> 00:15:40,070
locale and it requests some services

00:15:37,040 --> 00:15:43,550
right here and then it defines some date

00:15:40,070 --> 00:15:47,600
formats and we have rules for this

00:15:43,550 --> 00:15:49,699
locale because for example pluralization

00:15:47,600 --> 00:15:52,910
is handled differently the

00:15:49,699 --> 00:15:55,069
on your locale and yeah this is this is

00:15:52,910 --> 00:15:58,279
what what angular gives you so what does

00:15:55,069 --> 00:16:00,019
that mean you can you can just add one

00:15:58,279 --> 00:16:03,649
of those modules depending on your on

00:16:00,019 --> 00:16:07,160
your locale and then the date filter and

00:16:03,649 --> 00:16:10,339
the currency filter behave like how they

00:16:07,160 --> 00:16:14,689
are controlled by the locale right this

00:16:10,339 --> 00:16:16,369
also means that you only have just it's

00:16:14,689 --> 00:16:20,809
a kind of one-way ticket right so you

00:16:16,369 --> 00:16:23,209
have to decide which locale you want to

00:16:20,809 --> 00:16:28,429
use and that's it so you can't change

00:16:23,209 --> 00:16:30,709
the locale at run time or so and this is

00:16:28,429 --> 00:16:33,829
actually this is intended because the

00:16:30,709 --> 00:16:35,649
the angular team thinks of I believe

00:16:33,829 --> 00:16:38,149
that it's that it's better to do

00:16:35,649 --> 00:16:40,850
internationalization stuff on the server

00:16:38,149 --> 00:16:44,299
side right like rendering all templates

00:16:40,850 --> 00:16:46,790
with with a with a locale and that for

00:16:44,299 --> 00:16:49,339
each language and okay that that's okay

00:16:46,790 --> 00:16:52,579
this is like how they handle it and this

00:16:49,339 --> 00:16:56,689
is why you just get this yeah you just

00:16:52,579 --> 00:17:01,279
can use one of those those modules so

00:16:56,689 --> 00:17:03,109
this is just so you see how these things

00:17:01,279 --> 00:17:06,589
work we have this day filter right here

00:17:03,109 --> 00:17:08,689
and all I do here is just a person a

00:17:06,589 --> 00:17:11,149
timestamp and then we apply the date

00:17:08,689 --> 00:17:13,339
filter and the date filter gets some

00:17:11,149 --> 00:17:16,130
some value which is just any kind of

00:17:13,339 --> 00:17:20,269
expression in that case it is the full

00:17:16,130 --> 00:17:24,260
date or these yyy mm DD and this is the

00:17:20,269 --> 00:17:27,319
the output I get here right so now if I

00:17:24,260 --> 00:17:30,049
currently I have the locale for for

00:17:27,319 --> 00:17:34,700
English when I now changed the locale

00:17:30,049 --> 00:17:38,120
for 2 to 2 German like right here boom

00:17:34,700 --> 00:17:41,269
and I refreshed the page you can see

00:17:38,120 --> 00:17:45,529
that there's the date output is in

00:17:41,269 --> 00:17:47,090
German right so this is but now I can't

00:17:45,529 --> 00:17:49,730
change I can't change it anymore I have

00:17:47,090 --> 00:17:52,370
to like I have to reload it again after

00:17:49,730 --> 00:17:56,809
I change the locale again and yeah so

00:17:52,370 --> 00:17:59,870
you get the idea right ok so this is the

00:17:56,809 --> 00:18:02,570
number filter you can use it like like

00:17:59,870 --> 00:18:05,840
every other filter and you can pass in

00:18:02,570 --> 00:18:10,100
an additional value for two to control

00:18:05,840 --> 00:18:12,860
the diffraction sighs so what you see

00:18:10,100 --> 00:18:15,860
here is the number the first number and

00:18:12,860 --> 00:18:18,400
the interpolation is again just another

00:18:15,860 --> 00:18:22,130
another value on the current scope right

00:18:18,400 --> 00:18:25,370
now a vendor a number here like 20 or so

00:18:22,130 --> 00:18:29,440
you can see it formats the number

00:18:25,370 --> 00:18:40,990
correctly I can also do something like

00:18:29,440 --> 00:18:40,990
do something like this sorry

00:18:53,540 --> 00:18:59,090
so yeah you see that there are as a

00:18:55,700 --> 00:19:01,790
fraction of two of actually it's free by

00:18:59,090 --> 00:19:04,870
default I can take whatever I want it's

00:19:01,790 --> 00:19:08,660
it's it's free and in the second example

00:19:04,870 --> 00:19:13,400
I said that the fraction size is zero so

00:19:08,660 --> 00:19:16,610
there is no friction to see and yeah the

00:19:13,400 --> 00:19:18,430
currency filter again you can pass in a

00:19:16,610 --> 00:19:24,950
currency value and you can also

00:19:18,430 --> 00:19:26,750
manipulate the currency unit like it

00:19:24,950 --> 00:19:29,300
also depends on the locale you loaded

00:19:26,750 --> 00:19:31,430
right now it's again a and us so we have

00:19:29,300 --> 00:19:34,120
a dollar sign right here and if I type a

00:19:31,430 --> 00:19:37,400
number here you can see that it's

00:19:34,120 --> 00:19:39,350
formatted correctly and in the second

00:19:37,400 --> 00:19:42,080
example we see that this is overwritten

00:19:39,350 --> 00:19:43,970
right here yeah like this value you can

00:19:42,080 --> 00:19:50,750
see here now again if I change the

00:19:43,970 --> 00:19:54,500
locale to two German we see that there

00:19:50,750 --> 00:19:57,620
is ayah we see that there is an euro

00:19:54,500 --> 00:20:01,040
sign right and it also takes care of

00:19:57,620 --> 00:20:03,050
position the design correctly like that

00:20:01,040 --> 00:20:04,910
the that the Euro sign is on the on the

00:20:03,050 --> 00:20:12,590
right side instead of the left side with

00:20:04,910 --> 00:20:14,810
a dollar alright so the next thing ng

00:20:12,590 --> 00:20:18,080
pluralize the directive that gives you a

00:20:14,810 --> 00:20:23,510
pluralization this example is a bit more

00:20:18,080 --> 00:20:26,900
complex so we have a value which is just

00:20:23,510 --> 00:20:29,780
a person count in this case just any

00:20:26,900 --> 00:20:32,570
kind of value and you can see that there

00:20:29,780 --> 00:20:34,250
is this ng pluralize directive and form

00:20:32,570 --> 00:20:36,530
of an element so it's not only an

00:20:34,250 --> 00:20:39,020
attribute you see it's actually an

00:20:36,530 --> 00:20:42,620
element and it has an attribute count

00:20:39,020 --> 00:20:45,230
and count is just the the result of the

00:20:42,620 --> 00:20:46,990
evaluation of the person count which is

00:20:45,230 --> 00:20:51,530
through a value on the scope and

00:20:46,990 --> 00:20:54,680
depending on what count is it decides it

00:20:51,530 --> 00:20:58,070
decides which string to use for your for

00:20:54,680 --> 00:21:00,320
your plural pluralization right so if

00:20:58,070 --> 00:21:02,450
the value of person count is just da0

00:21:00,320 --> 00:21:05,630
you see that the the string is nobody's

00:21:02,450 --> 00:21:09,380
viewing right if I change it to one

00:21:05,630 --> 00:21:13,700
one person is viewing and anything else

00:21:09,380 --> 00:21:16,360
which is not zero and not one is like X

00:21:13,700 --> 00:21:21,140
people are viewing right so this is

00:21:16,360 --> 00:21:23,840
basic ng pluralization and there's also

00:21:21,140 --> 00:21:26,060
it's also possible to apply an offset so

00:21:23,840 --> 00:21:30,020
you can be a bit more specific in some

00:21:26,060 --> 00:21:32,390
cases and yeah that's that's

00:21:30,020 --> 00:21:34,280
unfortunately actually it when it comes

00:21:32,390 --> 00:21:40,040
to internationalization and

00:21:34,280 --> 00:21:42,770
pluralization and angularjs right and so

00:21:40,040 --> 00:21:46,310
there's there's no no way to say for

00:21:42,770 --> 00:21:49,160
example you can't just translate all

00:21:46,310 --> 00:21:52,190
your job contents or your strings you

00:21:49,160 --> 00:21:53,780
can't define for example fallback

00:21:52,190 --> 00:21:57,080
languages you don't have the ability to

00:21:53,780 --> 00:22:00,830
load entire language files during

00:21:57,080 --> 00:22:03,080
runtime asynchronously and yeah like

00:22:00,830 --> 00:22:05,660
this is like you actually have to feel

00:22:03,080 --> 00:22:10,160
like this right now so that's just it

00:22:05,660 --> 00:22:13,820
and really this is the moment where I

00:22:10,160 --> 00:22:17,480
say no problem guys I got you covered

00:22:13,820 --> 00:22:20,510
yeah so I work on a project called

00:22:17,480 --> 00:22:23,600
angular translate and angular translate

00:22:20,510 --> 00:22:25,400
takes care of all that stuff right so

00:22:23,600 --> 00:22:27,800
you can really you can translate all

00:22:25,400 --> 00:22:30,140
your strings you can load fallback

00:22:27,800 --> 00:22:31,790
languages you can basically you can do

00:22:30,140 --> 00:22:34,340
asynchronous loading you can let your

00:22:31,790 --> 00:22:36,530
remember the the language the the user

00:22:34,340 --> 00:22:39,830
choose the last time it came to cross

00:22:36,530 --> 00:22:44,690
your app and there's really there's so

00:22:39,830 --> 00:22:48,580
much more so Anglet translate comes with

00:22:44,690 --> 00:22:52,550
the typical angular components like

00:22:48,580 --> 00:22:55,820
services and filters and directives

00:22:52,550 --> 00:22:59,810
then we have variable replacement which

00:22:55,820 --> 00:23:02,090
is just a kind of like s printf stuff

00:22:59,810 --> 00:23:04,460
like you can define your translations

00:23:02,090 --> 00:23:06,380
with dynamic values and then you can

00:23:04,460 --> 00:23:10,970
interpolate them later and the interview

00:23:06,380 --> 00:23:13,340
with concrete values yeah it has for

00:23:10,970 --> 00:23:16,010
short has multi-language support you can

00:23:13,340 --> 00:23:19,190
decide which language you support in

00:23:16,010 --> 00:23:20,780
your app during runtime mobile

00:23:19,190 --> 00:23:23,530
languages like I said asynchronous

00:23:20,780 --> 00:23:26,690
loading and really there's so much more

00:23:23,530 --> 00:23:29,240
so what you see here is saying I'm

00:23:26,690 --> 00:23:31,310
really I'm not not a designer alright so

00:23:29,240 --> 00:23:32,900
this is the conceptual overview of

00:23:31,310 --> 00:23:34,550
angular translate and what you see here

00:23:32,900 --> 00:23:36,110
is that we have like I said web and

00:23:34,550 --> 00:23:39,140
directive and we have a filter and then

00:23:36,110 --> 00:23:42,890
there is the translate service and the

00:23:39,140 --> 00:23:45,530
translate service actually um here takes

00:23:42,890 --> 00:23:48,140
care of the basic translation stuff and

00:23:45,530 --> 00:23:49,760
some additional stuff right so you can

00:23:48,140 --> 00:23:53,210
see that there's missing translation

00:23:49,760 --> 00:23:56,930
handler we have interpolation services

00:23:53,210 --> 00:24:00,620
so you're actually able to change the

00:23:56,930 --> 00:24:02,210
interpolation service there is yeah a

00:24:00,620 --> 00:24:04,610
synchronous loader so you set up a

00:24:02,210 --> 00:24:05,990
synchronous loader and also here you can

00:24:04,610 --> 00:24:09,710
do whatever you want you can actually

00:24:05,990 --> 00:24:11,240
you can use what what we would we give

00:24:09,710 --> 00:24:16,670
you for that or you can put your own

00:24:11,240 --> 00:24:18,740
asynchronous loaders storages is yeah

00:24:16,670 --> 00:24:22,250
storages is not like what you probably

00:24:18,740 --> 00:24:24,800
think we don't store any translations

00:24:22,250 --> 00:24:29,000
locally on your machine but storages is

00:24:24,800 --> 00:24:30,860
like it's about saving the the locale of

00:24:29,000 --> 00:24:33,650
the app so that your app can remember

00:24:30,860 --> 00:24:37,210
like which language was choose the last

00:24:33,650 --> 00:24:37,210
time they user came across or ever

00:24:37,420 --> 00:24:41,870
okay so teaching hyper language is with

00:24:40,310 --> 00:24:44,840
angular translate is actually pretty

00:24:41,870 --> 00:24:47,900
straightforward so what you see here is

00:24:44,840 --> 00:24:50,120
this is this is basic angular code right

00:24:47,900 --> 00:24:53,120
so you have this angular module which

00:24:50,120 --> 00:24:57,830
defines just a module for angular you

00:24:53,120 --> 00:25:00,620
can you can have 1 to n modules and

00:24:57,830 --> 00:25:03,050
angular and you just have to say which

00:25:00,620 --> 00:25:05,540
of these module is the actual app in

00:25:03,050 --> 00:25:09,170
this case we have just a module my app

00:25:05,540 --> 00:25:13,520
and we see all the syntax highlighting

00:25:09,170 --> 00:25:16,010
is a bit broken here anyway so basically

00:25:13,520 --> 00:25:18,890
the first line just the following it

00:25:16,010 --> 00:25:21,260
declares the module my app and it says

00:25:18,890 --> 00:25:24,740
that the translate module is a

00:25:21,260 --> 00:25:28,340
dependency for this app and then we

00:25:24,740 --> 00:25:32,240
define a config function angularjs has

00:25:28,340 --> 00:25:33,050
this yeah you actually have this config

00:25:32,240 --> 00:25:38,840
function always

00:25:33,050 --> 00:25:40,520
for each module sorry okay and yeah

00:25:38,840 --> 00:25:44,300
during the config function you set up

00:25:40,520 --> 00:25:48,500
your providers actually you use

00:25:44,300 --> 00:25:50,360
providers to to configure your your

00:25:48,500 --> 00:25:52,100
services for the runtime and what

00:25:50,360 --> 00:25:54,260
happens here is that you can use the

00:25:52,100 --> 00:25:56,050
translate provider from the angular

00:25:54,260 --> 00:25:58,790
translate module and it has the method

00:25:56,050 --> 00:26:01,190
translations and you pass in a language

00:25:58,790 --> 00:26:03,320
key and as a second parameter you just

00:26:01,190 --> 00:26:05,690
pass in a JSON which is your

00:26:03,320 --> 00:26:07,910
internationalization data right and then

00:26:05,690 --> 00:26:10,130
you say okay so I have these two

00:26:07,910 --> 00:26:11,450
languages and that language is my

00:26:10,130 --> 00:26:16,850
preferred language this is the language

00:26:11,450 --> 00:26:20,360
I want to want to use by default and in

00:26:16,850 --> 00:26:21,740
action it's just like this so you set up

00:26:20,360 --> 00:26:24,050
your translations and then you have this

00:26:21,740 --> 00:26:26,240
translate directly which is just like an

00:26:24,050 --> 00:26:29,600
attribute and you person and translation

00:26:26,240 --> 00:26:34,670
ID like as you can see here there's app

00:26:29,600 --> 00:26:37,790
title and some entry some text and then

00:26:34,670 --> 00:26:41,540
this is the output like just the text

00:26:37,790 --> 00:26:43,370
right now what we want to do is we

00:26:41,540 --> 00:26:46,610
actually want to be able to change the

00:26:43,370 --> 00:26:49,940
language at runtime so basically

00:26:46,610 --> 00:26:52,190
changing the language at runtime is just

00:26:49,940 --> 00:26:55,190
like this you define a controller which

00:26:52,190 --> 00:26:57,860
has its own little scope and then you

00:26:55,190 --> 00:27:01,760
have a function on the controller which

00:26:57,860 --> 00:27:04,700
is in this case change language and use

00:27:01,760 --> 00:27:07,700
the ng-click directive which takes care

00:27:04,700 --> 00:27:10,400
of executing the stuff you want and

00:27:07,700 --> 00:27:12,740
after that it kicks off a digit cycle so

00:27:10,400 --> 00:27:15,230
that the angularjs event loop is just

00:27:12,740 --> 00:27:18,350
running and makes this dirty-checking

00:27:15,230 --> 00:27:20,240
for two-way data-binding so we have this

00:27:18,350 --> 00:27:21,950
controller right here and we say okay

00:27:20,240 --> 00:27:24,740
when English is clicked and changed the

00:27:21,950 --> 00:27:27,170
language to en and if German is clicked

00:27:24,740 --> 00:27:29,740
and changed the language to de right and

00:27:27,170 --> 00:27:33,200
then there's still just our translations

00:27:29,740 --> 00:27:35,420
so an action yeah and then there's the

00:27:33,200 --> 00:27:37,280
the actual language controller right

00:27:35,420 --> 00:27:41,600
this is how you define a controller and

00:27:37,280 --> 00:27:43,070
an angularjs you name it and this in

00:27:41,600 --> 00:27:46,940
this case it's just laying controller

00:27:43,070 --> 00:27:48,559
and then you request some some services

00:27:46,940 --> 00:27:51,200
we have the scope right here and we have

00:27:48,559 --> 00:27:52,999
the translate service and we define a

00:27:51,200 --> 00:27:56,649
function on the scope which is changed

00:27:52,999 --> 00:27:59,179
language to one we used in our HTML and

00:27:56,649 --> 00:28:01,970
to change the language actually you just

00:27:59,179 --> 00:28:05,720
say okay translate service please use

00:28:01,970 --> 00:28:09,049
the given language that's it right so an

00:28:05,720 --> 00:28:11,359
action like this we see that there's the

00:28:09,049 --> 00:28:14,629
text we see before and then you change

00:28:11,359 --> 00:28:17,149
to German English German English that's

00:28:14,629 --> 00:28:18,830
it right so you're now able to to

00:28:17,149 --> 00:28:22,639
translate your entire app at least the

00:28:18,830 --> 00:28:24,559
basic strings so variable replacement is

00:28:22,639 --> 00:28:27,590
the next is the next thing thing like

00:28:24,559 --> 00:28:30,379
like I said you can have dynamic values

00:28:27,590 --> 00:28:33,229
within your translation strings and in

00:28:30,379 --> 00:28:35,749
this case we just have a few other

00:28:33,229 --> 00:28:37,999
translation IDs like this is the user

00:28:35,749 --> 00:28:40,759
log in and we the user like and

00:28:37,999 --> 00:28:43,669
translation ID expects aspects a value

00:28:40,759 --> 00:28:45,739
user and then we have another string

00:28:43,669 --> 00:28:48,889
right here and we even can apply filter

00:28:45,739 --> 00:28:53,799
on it doesn't really matter and again we

00:28:48,889 --> 00:28:58,309
just say we prefer the language en and

00:28:53,799 --> 00:29:01,820
right in the in the HTML we again we use

00:28:58,309 --> 00:29:05,299
the translate directive and it also has

00:29:01,820 --> 00:29:09,349
its aware of some specific attributes so

00:29:05,299 --> 00:29:11,779
to define which well use you want to

00:29:09,349 --> 00:29:15,499
pass in into in translation you can use

00:29:11,779 --> 00:29:18,559
the translate translate value and then -

00:29:15,499 --> 00:29:22,099
whatever your your value is attribute

00:29:18,559 --> 00:29:23,809
right so we used in your identifier

00:29:22,099 --> 00:29:26,869
definition right here that we have a

00:29:23,809 --> 00:29:29,179
value user and we have a value count so

00:29:26,869 --> 00:29:34,070
you are able to oops you are able to

00:29:29,179 --> 00:29:37,099
have any with that guy you're able to

00:29:34,070 --> 00:29:40,580
define an attribute translate value user

00:29:37,099 --> 00:29:44,840
and a translate value count right so

00:29:40,580 --> 00:29:46,970
this is again like in action so here's a

00:29:44,840 --> 00:29:48,440
name and I can change it you can see

00:29:46,970 --> 00:29:50,179
that there is this two-way data-binding

00:29:48,440 --> 00:29:51,679
you don't have to care about all that

00:29:50,179 --> 00:29:53,899
stuff you don't have to setup event

00:29:51,679 --> 00:29:56,899
listeners and stuff like that we can

00:29:53,899 --> 00:29:59,029
change the value right here you can see

00:29:56,899 --> 00:29:59,780
that the number filter is applied here

00:29:59,029 --> 00:30:02,630
right

00:29:59,780 --> 00:30:10,100
so this works also and I can change the

00:30:02,630 --> 00:30:12,170
language again okay all right so now

00:30:10,100 --> 00:30:14,630
that's really cool and I want to give

00:30:12,170 --> 00:30:19,490
you a bit more awesomeness topic

00:30:14,630 --> 00:30:21,530
languages is as easy as that in this

00:30:19,490 --> 00:30:23,210
case we again we have our English

00:30:21,530 --> 00:30:25,700
language and we have our German language

00:30:23,210 --> 00:30:28,160
and we have another translation table

00:30:25,700 --> 00:30:30,260
for French right now what you can see

00:30:28,160 --> 00:30:34,130
here is that the the French translation

00:30:30,260 --> 00:30:36,320
table has in translation ID which the

00:30:34,130 --> 00:30:39,800
the other translation translation tables

00:30:36,320 --> 00:30:42,680
don't have right so we say here that the

00:30:39,800 --> 00:30:46,910
fallback language is French and now if

00:30:42,680 --> 00:30:49,910
we try to use in our HTML if we try to

00:30:46,910 --> 00:30:52,310
use to use in translation ID which

00:30:49,910 --> 00:30:54,560
doesn't exist in the translation table

00:30:52,310 --> 00:30:56,440
of the currently used language then

00:30:54,560 --> 00:30:59,450
angular translate takes care of it and

00:30:56,440 --> 00:31:00,650
just fetches the D value of the

00:30:59,450 --> 00:31:03,260
translation idea from the fallback

00:31:00,650 --> 00:31:05,930
language right so what happens here is

00:31:03,260 --> 00:31:09,470
that we have here salut for for french

00:31:05,930 --> 00:31:12,110
and even if our currently used language

00:31:09,470 --> 00:31:13,730
is English because the translational

00:31:12,110 --> 00:31:16,190
degree Ching doesn't exist in the

00:31:13,730 --> 00:31:17,810
English translation table but it exists

00:31:16,190 --> 00:31:20,720
in the in the translation table of

00:31:17,810 --> 00:31:23,450
french and we defined it as as fallback

00:31:20,720 --> 00:31:26,060
language same goes if we change the

00:31:23,450 --> 00:31:29,360
language the german language also has no

00:31:26,060 --> 00:31:31,520
translation ID for greeting so yeah

00:31:29,360 --> 00:31:33,050
that's that's fallback languages you can

00:31:31,520 --> 00:31:34,730
also define more than one fallback

00:31:33,050 --> 00:31:37,850
language like you just pass on an array

00:31:34,730 --> 00:31:40,640
of fallback languages and you can even

00:31:37,850 --> 00:31:46,190
change the entire fallback stack during

00:31:40,640 --> 00:31:48,590
runtime if you want to the last thing i

00:31:46,190 --> 00:31:50,350
would like to talk about is asynchronous

00:31:48,590 --> 00:31:54,050
loading which is a pretty neat feature

00:31:50,350 --> 00:31:57,350
because you don't want to you don't want

00:31:54,050 --> 00:31:59,540
to deploy your apps with all the

00:31:57,350 --> 00:32:02,690
translation tables because if you have

00:31:59,540 --> 00:32:04,850
just for about let's say three or five

00:32:02,690 --> 00:32:07,550
languages you support and each each

00:32:04,850 --> 00:32:10,880
language has 100 translation IDs

00:32:07,550 --> 00:32:13,130
then you have 3 500 translation IDs in

00:32:10,880 --> 00:32:13,700
your javascript code which is not really

00:32:13,130 --> 00:32:15,259
cool right

00:32:13,700 --> 00:32:17,749
so you actually want to load them

00:32:15,259 --> 00:32:21,109
asynchronously and which is also better

00:32:17,749 --> 00:32:22,879
for performance so we click quick

00:32:21,109 --> 00:32:24,229
example the static files lower is the

00:32:22,879 --> 00:32:26,059
lower you get from angular translate if

00:32:24,229 --> 00:32:28,969
you want to you can install it by a

00:32:26,059 --> 00:32:31,070
power and it's just an extension and all

00:32:28,969 --> 00:32:34,659
you have to do is to say a translate

00:32:31,070 --> 00:32:36,709
provider use the static files loader and

00:32:34,659 --> 00:32:39,019
here's the pattern you have to define

00:32:36,709 --> 00:32:42,559
like you have a prefix and a suffix and

00:32:39,019 --> 00:32:47,029
my preferred language is en so what this

00:32:42,559 --> 00:32:50,329
does it requests the it requests the the

00:32:47,029 --> 00:32:51,829
URL like you have this your prefix and

00:32:50,329 --> 00:32:53,779
then you have the actual language key

00:32:51,829 --> 00:32:56,389
which is currently used and then you

00:32:53,779 --> 00:33:00,349
have your suffix right and what angular

00:32:56,389 --> 00:33:02,299
translate does is it checks if the

00:33:00,349 --> 00:33:04,669
current translation table you want to

00:33:02,299 --> 00:33:07,159
use if it's really available currently

00:33:04,669 --> 00:33:09,979
if it if it exists if it doesn't exist

00:33:07,159 --> 00:33:13,039
then it it looks for an asynchronous

00:33:09,979 --> 00:33:15,259
loader which is probably configured or

00:33:13,039 --> 00:33:17,029
not and if there is an S incra in this

00:33:15,259 --> 00:33:19,549
loader it should use then it just kicks

00:33:17,029 --> 00:33:21,229
that up and it fetches the new

00:33:19,549 --> 00:33:26,839
translation table for that language and

00:33:21,229 --> 00:33:28,909
everything's set up so you're also able

00:33:26,839 --> 00:33:31,309
to define your own custom loader loaders

00:33:28,909 --> 00:33:34,759
this is a really quick example like you

00:33:31,309 --> 00:33:37,099
just have an factory right here which is

00:33:34,759 --> 00:33:40,219
your custom loader and then you pass in

00:33:37,099 --> 00:33:41,989
like we have here this time out servers

00:33:40,219 --> 00:33:44,779
and the queue service if you don't about

00:33:41,989 --> 00:33:47,179
about we don't about promises and

00:33:44,779 --> 00:33:49,779
deferreds and stuff like that don't

00:33:47,179 --> 00:33:53,509
worry basically what this code does is

00:33:49,779 --> 00:33:55,609
it waits for five seconds and then it

00:33:53,509 --> 00:33:59,719
gives back a translation table with

00:33:55,609 --> 00:34:02,629
these two translation keys whatever

00:33:59,719 --> 00:34:05,149
whatever what your language is currently

00:34:02,629 --> 00:34:07,219
loaded doesn't doesn't matter and then

00:34:05,149 --> 00:34:09,529
you say translate provider please use

00:34:07,219 --> 00:34:12,740
this loader custom loader and by the way

00:34:09,529 --> 00:34:18,230
my preferred language is en right so an

00:34:12,740 --> 00:34:21,980
action it looks like this so we wait we

00:34:18,230 --> 00:34:25,750
wait five seconds the stuff is loaded

00:34:21,980 --> 00:34:25,750
and then Boosh there you go

00:34:25,890 --> 00:34:31,810
yeah okay that's actually all I got just

00:34:30,520 --> 00:34:35,169
one more thing have you ever seen a cat

00:34:31,810 --> 00:34:36,060
with the samuel l.jackson face there you

00:34:35,169 --> 00:34:39,720
go

00:34:36,060 --> 00:34:39,720

YouTube URL: https://www.youtube.com/watch?v=C7xqaExvaQ4


