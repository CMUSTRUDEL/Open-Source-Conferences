Title: Virtual EmberConf 2020: Opening Keynote by Yehuda Katz, Jen Weber, and Godfrey Chan
Publication date: 2020-03-26
Playlist: EmberConf 2020
Description: 
	Opening Keynote by Yehuda Katz, Jen Weber, and Godfrey Chan

Join us for a State of the Ember Union by Ember Creator Yehuda Katz and Core Team Members Jen Weber and Godfrey Chan.
Captions: 
	00:00:01,270 --> 00:00:23,800
[Music]

00:00:20,550 --> 00:00:25,539
hello and welcome to the first ever

00:00:23,800 --> 00:00:28,150
virtual ember conf in very strange

00:00:25,539 --> 00:00:31,660
circumstances I am here talking to a big

00:00:28,150 --> 00:00:33,160
empty room so thank you for everyone for

00:00:31,660 --> 00:00:34,840
bearing with us I also want to thank the

00:00:33,160 --> 00:00:36,220
speakers for having done all the work

00:00:34,840 --> 00:00:38,050
to make this possible in the first place

00:00:36,220 --> 00:00:40,449
on very short notice and thank the

00:00:38,050 --> 00:00:42,010
community for coming out and making this

00:00:40,449 --> 00:00:45,129
event the thing at all

00:00:42,010 --> 00:00:46,780
also Thank You leia for scrambling last

00:00:45,129 --> 00:00:51,430
minute and doing an amazing job with the

00:00:46,780 --> 00:00:55,059
conference as always my son Jonas was

00:00:51,430 --> 00:00:57,280
born on January 13 2017 a few months

00:00:55,059 --> 00:00:59,470
later Leia the person who makes ember

00:00:57,280 --> 00:01:01,510
conf so amazing every year my life

00:00:59,470 --> 00:01:02,619
partner and Jonas his mother and also

00:01:01,510 --> 00:01:06,159
the person who made virtual eMERCOM

00:01:02,619 --> 00:01:07,180
possible carried a few month old Jonas

00:01:06,159 --> 00:01:08,020
onto this stage to give her

00:01:07,180 --> 00:01:10,479
announcements

00:01:08,020 --> 00:01:12,549
I remember feeling very sure that this

00:01:10,479 --> 00:01:14,260
was the right thing to do and at the

00:01:12,549 --> 00:01:16,810
same time I was nervously watching the

00:01:14,260 --> 00:01:17,890
audience just a few months earlier we

00:01:16,810 --> 00:01:19,540
were living a life without children

00:01:17,890 --> 00:01:21,659
totally unable to see what was coming

00:01:19,540 --> 00:01:23,950
around the bend it was a snowy winter

00:01:21,659 --> 00:01:26,229
Donald Trump had just been elected but

00:01:23,950 --> 00:01:27,429
Barack Obama was still president in a

00:01:26,229 --> 00:01:29,320
lot of ways we were waiting for

00:01:27,429 --> 00:01:31,899
everything to change but not sure what

00:01:29,320 --> 00:01:34,509
would come next that period stretched on

00:01:31,899 --> 00:01:35,859
and on and on Jonas was over a week late

00:01:34,509 --> 00:01:37,210
and we were living in a quiet period

00:01:35,859 --> 00:01:40,210
just ready for everything to change in

00:01:37,210 --> 00:01:41,560
ways we knew we couldn't predict one of

00:01:40,210 --> 00:01:43,119
the first things I clearly remember from

00:01:41,560 --> 00:01:44,380
the first week after Jonas was born was

00:01:43,119 --> 00:01:45,490
filling out a commemorative form to

00:01:44,380 --> 00:01:47,469
remember what was happening on the day

00:01:45,490 --> 00:01:49,359
he was born there was a section for

00:01:47,469 --> 00:01:52,569
president I remember filling out Barack

00:01:49,359 --> 00:01:54,159
Obama and thinking a lot about it I was

00:01:52,569 --> 00:01:56,170
in general not very good at the first

00:01:54,159 --> 00:01:57,969
child posed photo thing there's not a

00:01:56,170 --> 00:02:00,969
lot of smile here but I was trying

00:01:57,969 --> 00:02:02,380
really hard another engineer at Tilda

00:02:00,969 --> 00:02:03,969
was pregnant at the same time and we

00:02:02,380 --> 00:02:05,979
knew that as business owners we could do

00:02:03,969 --> 00:02:07,600
better than the status quo after reading

00:02:05,979 --> 00:02:09,220
about the ways in which modern society

00:02:07,600 --> 00:02:11,350
leaves parents and especially women

00:02:09,220 --> 00:02:13,510
totally alone to care there to take care

00:02:11,350 --> 00:02:14,620
of their newborn children we decided to

00:02:13,510 --> 00:02:16,450
follow the lis of the babies in the

00:02:14,620 --> 00:02:18,130
workplace Institute and establish a

00:02:16,450 --> 00:02:21,190
policy allowing parents to bring newborn

00:02:18,130 --> 00:02:22,780
infants to work we might be running a

00:02:21,190 --> 00:02:24,250
technology company but we had a strong

00:02:22,780 --> 00:02:25,780
conviction that software went beyond the

00:02:24,250 --> 00:02:27,190
code that we wrote or how we organized

00:02:25,780 --> 00:02:29,350
our computers to gain a bit of extra

00:02:27,190 --> 00:02:30,880
productivity software fundamentally is a

00:02:29,350 --> 00:02:31,450
human activity an activity that we do

00:02:30,880 --> 00:02:33,130
together

00:02:31,450 --> 00:02:35,890
as human beings and we do our best when

00:02:33,130 --> 00:02:38,140
we support each other a few years later

00:02:35,890 --> 00:02:40,390
we're now on our second group of infants

00:02:38,140 --> 00:02:41,500
we've learned a lot but most of all what

00:02:40,390 --> 00:02:42,730
we've learned is that there's more to

00:02:41,500 --> 00:02:44,020
software than the number of lines of

00:02:42,730 --> 00:02:47,500
code you write or the number of minutes

00:02:44,020 --> 00:02:48,940
you're sitting in your chair I knew that

00:02:47,500 --> 00:02:50,680
the ember community valued building

00:02:48,940 --> 00:02:51,760
together and that we all valued an

00:02:50,680 --> 00:02:53,319
environment that was focused on

00:02:51,760 --> 00:02:55,450
sustainability personal growth and

00:02:53,319 --> 00:02:57,430
sharing as I looked into the audience

00:02:55,450 --> 00:02:59,350
that day I was extremely relieved to see

00:02:57,430 --> 00:03:01,690
happy faces people in our community

00:02:59,350 --> 00:03:03,069
wanted to see that there was more to

00:03:01,690 --> 00:03:04,720
what we did than cool technology and

00:03:03,069 --> 00:03:07,269
fights over which paradigm is better

00:03:04,720 --> 00:03:08,769
what I did not fully expect was the

00:03:07,269 --> 00:03:10,660
outpouring of support Leia got from

00:03:08,769 --> 00:03:12,400
people who finally saw themselves in our

00:03:10,660 --> 00:03:14,200
community's leadership who saw that

00:03:12,400 --> 00:03:16,030
mother and community leader not only

00:03:14,200 --> 00:03:17,590
didn't conflict but that the two could

00:03:16,030 --> 00:03:19,360
go hand-in-hand because there's

00:03:17,590 --> 00:03:20,709
something inside of us that wants more

00:03:19,360 --> 00:03:22,420
from open-source communities and

00:03:20,709 --> 00:03:24,010
technology we want communities that

00:03:22,420 --> 00:03:25,510
welcome newcomers communities that

00:03:24,010 --> 00:03:27,190
support each other and communities where

00:03:25,510 --> 00:03:29,890
the members help each other to be our

00:03:27,190 --> 00:03:31,569
best selves I will admit by the way that

00:03:29,890 --> 00:03:33,459
I wrote that whole section before the

00:03:31,569 --> 00:03:37,600
current situation and it feels all the

00:03:33,459 --> 00:03:39,130
more relevant right now at the same time

00:03:37,600 --> 00:03:40,570
as all that was happening the ember

00:03:39,130 --> 00:03:42,609
community was recovering from a rocky

00:03:40,570 --> 00:03:46,030
transition to the glimmer rendering

00:03:42,609 --> 00:03:47,260
engine in ember 1.13 1.13 had a large

00:03:46,030 --> 00:03:49,510
number of deprecations and those

00:03:47,260 --> 00:03:52,000
deprecations were removed just one minor

00:03:49,510 --> 00:03:54,579
release later it was a technically 2.0

00:03:52,000 --> 00:03:56,500
while that sequence technically followed

00:03:54,579 --> 00:03:58,140
semantic versioning if fragmented the

00:03:56,500 --> 00:04:00,519
ecosystem and created a lot of chaos

00:03:58,140 --> 00:04:02,620
I'll never forget a conversation I had

00:04:00,519 --> 00:04:05,440
with a community member who had bet

00:04:02,620 --> 00:04:06,670
everything on ember 1.12 pitching ember

00:04:05,440 --> 00:04:08,799
to his company on the grounds that it

00:04:06,670 --> 00:04:10,870
was a stable platform to build on then

00:04:08,799 --> 00:04:12,579
we created a flurry of deprecations and

00:04:10,870 --> 00:04:14,319
removals and he just felt embarrassed in

00:04:12,579 --> 00:04:16,650
front of his peers and frankly betrayed

00:04:14,319 --> 00:04:18,640
what we learned from that story is that

00:04:16,650 --> 00:04:20,739
semantic versioning doesn't tell the

00:04:18,640 --> 00:04:22,900
whole story of ecosystem stability we

00:04:20,739 --> 00:04:24,880
could see that we violated embers basic

00:04:22,900 --> 00:04:27,669
premise which is everything we do we do

00:04:24,880 --> 00:04:29,410
it together even though we followed the

00:04:27,669 --> 00:04:30,820
rules of semantic versioning for the

00:04:29,410 --> 00:04:32,320
next few years we invested in

00:04:30,820 --> 00:04:34,620
strengthening what we could do together

00:04:32,320 --> 00:04:37,450
as a community

00:04:34,620 --> 00:04:40,900
the first RFC that we use so the RFC

00:04:37,450 --> 00:04:42,760
process is what we use to make decisions

00:04:40,900 --> 00:04:44,729
as a community and the first one that we

00:04:42,760 --> 00:04:47,189
emerged was in 2014 but

00:04:44,729 --> 00:04:49,439
a long time we use RFC's only narrowly

00:04:47,189 --> 00:04:51,349
for features like block params or tweaks

00:04:49,439 --> 00:04:53,819
to computer properties syntax or engines

00:04:51,349 --> 00:04:56,550
RFC's gave us a way to make decisions as

00:04:53,819 --> 00:04:59,819
a community together and during the to

00:04:56,550 --> 00:05:01,919
direct series after that 113 debacle we

00:04:59,819 --> 00:05:03,449
refined the RFC process and expanded its

00:05:01,919 --> 00:05:05,370
footprint to virtually every decision we

00:05:03,449 --> 00:05:07,559
could make as a framework by the time

00:05:05,370 --> 00:05:09,210
member 3.0 rolled around we had refined

00:05:07,559 --> 00:05:12,449
the RFC process so it could be used for

00:05:09,210 --> 00:05:14,099
every decision we needed to make we also

00:05:12,449 --> 00:05:15,779
came to understand how decisions guided

00:05:14,099 --> 00:05:18,180
by our FCS are better decisions

00:05:15,779 --> 00:05:20,339
first and foremost our FCS are tools to

00:05:18,180 --> 00:05:21,569
help us make decisions the final

00:05:20,339 --> 00:05:23,219
decision is always in the hands of the

00:05:21,569 --> 00:05:25,889
core team that is responsible for the

00:05:23,219 --> 00:05:28,229
area covered by the RFC the primary rule

00:05:25,889 --> 00:05:29,580
is that decisions of of a core team must

00:05:28,229 --> 00:05:31,889
be made entirely on the basis of

00:05:29,580 --> 00:05:33,990
comments made or summarized on the RFC

00:05:31,889 --> 00:05:35,759
thread once the conversation reaches a

00:05:33,990 --> 00:05:36,870
steady state and participants aren't

00:05:35,759 --> 00:05:38,909
bringing any new information to the

00:05:36,870 --> 00:05:40,949
table the relevant core team is prepared

00:05:38,909 --> 00:05:42,539
to make a decision they declare a final

00:05:40,949 --> 00:05:43,939
comment period which is a last call for

00:05:42,539 --> 00:05:45,960
comments before they make a decision

00:05:43,939 --> 00:05:47,849
typically if new information comes up

00:05:45,960 --> 00:05:48,749
during the final comment period the core

00:05:47,849 --> 00:05:51,330
team will continue the discussion

00:05:48,749 --> 00:05:53,310
instead of proceeding in short the

00:05:51,330 --> 00:05:55,139
ultimate and primary purpose of the RFC

00:05:53,310 --> 00:05:56,459
process is to aid members of the core

00:05:55,139 --> 00:05:57,899
teams in making decisions with the

00:05:56,459 --> 00:06:01,499
benefit of as many perspectives as

00:05:57,899 --> 00:06:02,879
possible second RFC's help core teams

00:06:01,499 --> 00:06:04,379
collect constraints from the community

00:06:02,879 --> 00:06:06,149
by building up a collection of

00:06:04,379 --> 00:06:07,830
constraints the core teams can arrive at

00:06:06,149 --> 00:06:10,550
decisions that better satisfy a broader

00:06:07,830 --> 00:06:13,050
cross-section of the community third

00:06:10,550 --> 00:06:15,419
RFC's help those involved in an RFC

00:06:13,050 --> 00:06:17,129
build relationships those relationships

00:06:15,419 --> 00:06:18,899
often last into the implementation phase

00:06:17,129 --> 00:06:20,819
of the process and often even longer

00:06:18,899 --> 00:06:23,430
in fact it's some of my favorite stories

00:06:20,819 --> 00:06:25,229
from ember come from people who found

00:06:23,430 --> 00:06:27,479
each other through our of C threads in

00:06:25,229 --> 00:06:29,249
some cases small communities spring up

00:06:27,479 --> 00:06:30,680
around RFC's which sometimes turn into

00:06:29,249 --> 00:06:33,209
strike teams that work on implementation

00:06:30,680 --> 00:06:34,680
the ad hoc nature of these relationships

00:06:33,209 --> 00:06:36,839
is a strength of this structure

00:06:34,680 --> 00:06:38,610
RFC s provide just enough structure to

00:06:36,839 --> 00:06:40,139
get a conversation going but don't have

00:06:38,610 --> 00:06:41,969
much to say about the work style of the

00:06:40,139 --> 00:06:43,559
participants this really comes in handy

00:06:41,969 --> 00:06:46,889
as we press our of season to service to

00:06:43,559 --> 00:06:49,649
do more as I will talk about soon fourth

00:06:46,889 --> 00:06:51,360
RFC's help drive a design discussion to

00:06:49,649 --> 00:06:53,550
completion and then provides a structure

00:06:51,360 --> 00:06:55,229
for implementation by the time an RFC is

00:06:53,550 --> 00:06:57,000
merged the implementation is either

00:06:55,229 --> 00:06:57,590
already complete or a small community

00:06:57,000 --> 00:06:58,940
have

00:06:57,590 --> 00:07:01,370
sprung up around it to drive it to

00:06:58,940 --> 00:07:03,290
completion just as the RFC process is a

00:07:01,370 --> 00:07:04,850
tool to help Cortinas make decisions is

00:07:03,290 --> 00:07:06,950
a tool to drive discussions to

00:07:04,850 --> 00:07:08,600
completion in RFC process that allows

00:07:06,950 --> 00:07:11,960
never-ending discussion is failing at

00:07:08,600 --> 00:07:13,430
this goal fifth RFC's record the

00:07:11,960 --> 00:07:15,650
rationale and constraints for decisions

00:07:13,430 --> 00:07:17,330
that the core team makes later when

00:07:15,650 --> 00:07:19,220
people wonder why decision was made a

00:07:17,330 --> 00:07:21,080
complete record of the final rationale

00:07:19,220 --> 00:07:22,190
for this decision as well as a record of

00:07:21,080 --> 00:07:23,990
the discussion is available for

00:07:22,190 --> 00:07:25,340
inspection this really comes in handy

00:07:23,990 --> 00:07:26,840
when the original rationale for a

00:07:25,340 --> 00:07:28,520
decision is no longer applicable for

00:07:26,840 --> 00:07:30,680
example a design decision based on a

00:07:28,520 --> 00:07:33,430
quirk of I ate I ate is no longer around

00:07:30,680 --> 00:07:35,660
that decision is free to be revisited

00:07:33,430 --> 00:07:37,550
finally and perhaps the most important

00:07:35,660 --> 00:07:39,020
RFC's give people in the community a

00:07:37,550 --> 00:07:41,300
chance to feel hurt and I really do mean

00:07:39,020 --> 00:07:43,610
perhaps the most important we learned

00:07:41,300 --> 00:07:45,230
this lesson after 1.13 when community

00:07:43,610 --> 00:07:47,090
members don't feel heard it usually

00:07:45,230 --> 00:07:48,350
means we're not really listening this

00:07:47,090 --> 00:07:50,390
undermines the legitimacy of the process

00:07:48,350 --> 00:07:52,610
and it also undermines everything else

00:07:50,390 --> 00:07:54,050
we hope to achieve with RFC's a core

00:07:52,610 --> 00:07:55,310
team may be able to technically make

00:07:54,050 --> 00:07:57,230
decisions when people don't feel heard

00:07:55,310 --> 00:08:00,470
but it is unlikely to collect all the

00:07:57,230 --> 00:08:02,150
constraints community can you community

00:08:00,470 --> 00:08:04,130
members who don't feel heard don't build

00:08:02,150 --> 00:08:05,600
relationships around in RFC community

00:08:04,130 --> 00:08:06,860
members who don't feel heard continue to

00:08:05,600 --> 00:08:08,420
fight during the implementation phase

00:08:06,860 --> 00:08:09,740
and are unlikely to provide their

00:08:08,420 --> 00:08:10,820
expertise and assistance to get the

00:08:09,740 --> 00:08:12,290
feature over the finish line

00:08:10,820 --> 00:08:14,210
this imperils the project's completion

00:08:12,290 --> 00:08:15,770
and community members who don't feel

00:08:14,210 --> 00:08:17,570
heard won't consider the recorded

00:08:15,770 --> 00:08:19,730
history legitimate reducing the force of

00:08:17,570 --> 00:08:21,590
the project's history so fundamentally a

00:08:19,730 --> 00:08:23,300
successful RFC will make community

00:08:21,590 --> 00:08:24,800
members feel heard even if they don't

00:08:23,300 --> 00:08:28,450
ultimately agree with the final decision

00:08:24,800 --> 00:08:30,020
of the core team so we realized that

00:08:28,450 --> 00:08:32,150
RFC's were a general-purpose

00:08:30,020 --> 00:08:33,770
decision-making tool that could help us

00:08:32,150 --> 00:08:35,090
make decisions build communities around

00:08:33,770 --> 00:08:36,740
those decisions and drive them to

00:08:35,090 --> 00:08:39,290
completion and we started to ask

00:08:36,740 --> 00:08:41,120
ourselves given that definition or rfcs

00:08:39,290 --> 00:08:44,060
why shouldn't we use RFC's for more

00:08:41,120 --> 00:08:45,740
things in 2018 our community was using

00:08:44,060 --> 00:08:47,690
slack but we were quickly outgrowing it

00:08:45,740 --> 00:08:49,850
slacks free plan which we were using

00:08:47,690 --> 00:08:51,860
capped archives at 10,000 messages and

00:08:49,850 --> 00:08:53,090
we had to manually manage users the

00:08:51,860 --> 00:08:54,350
framework team thought that we should

00:08:53,090 --> 00:08:55,730
move to discord but we knew it would

00:08:54,350 --> 00:08:57,290
only work if we really gave the whole

00:08:55,730 --> 00:08:59,660
community a chance to flesh out the plan

00:08:57,290 --> 00:09:00,830
with us and really buy into it when we

00:08:59,660 --> 00:09:03,950
thought about it we realized that is

00:09:00,830 --> 00:09:05,570
exactly a job for our C's we had

00:09:03,950 --> 00:09:07,130
iterated a lot on the RFC template over

00:09:05,570 --> 00:09:08,660
the years so that it more closely

00:09:07,130 --> 00:09:09,760
matched the goals of fleshing out and

00:09:08,660 --> 00:09:11,890
mobilizing around a proposed

00:09:09,760 --> 00:09:16,270
and it worked really well we even had a

00:09:11,890 --> 00:09:18,430
how do you teach this section for this

00:09:16,270 --> 00:09:19,570
RFC because it was the first time we use

00:09:18,430 --> 00:09:20,950
it for something like this we were

00:09:19,570 --> 00:09:22,270
paying a lot of attention to the need to

00:09:20,950 --> 00:09:24,940
ultimately wind down the conversation

00:09:22,270 --> 00:09:26,440
and make a decision there were 164

00:09:24,940 --> 00:09:27,610
comments on the thread before we finally

00:09:26,440 --> 00:09:30,010
wrapped up the conversation and the

00:09:27,610 --> 00:09:31,510
conversation helped refine the RFC and

00:09:30,010 --> 00:09:32,830
help refine the policy around which

00:09:31,510 --> 00:09:34,990
rooms would be limited to users with

00:09:32,830 --> 00:09:36,880
certain roles for example precisely

00:09:34,990 --> 00:09:38,110
because of the need to make a decision

00:09:36,880 --> 00:09:39,460
that we could all support it was

00:09:38,110 --> 00:09:41,890
imperative that participants in the

00:09:39,460 --> 00:09:43,180
conversation felt heard I was so proud

00:09:41,890 --> 00:09:47,260
of the way our community handled this

00:09:43,180 --> 00:09:49,180
discussion the final comment

00:09:47,260 --> 00:09:51,190
that approved this RFC was a comment by

00:09:49,180 --> 00:09:52,510
Tom and I think this comment by Tom

00:09:51,190 --> 00:09:54,040
really shows what it looks like when a

00:09:52,510 --> 00:09:55,450
spirited conversation has slowed down

00:09:54,040 --> 00:09:57,640
and is ready to start driving towards a

00:09:55,450 --> 00:09:59,740
conclusion so for example tom says after

00:09:57,640 --> 00:10:01,300
several long discussions based on the

00:09:59,740 --> 00:10:02,500
concerns raised above we still think

00:10:01,300 --> 00:10:04,750
discord is the right next step and

00:10:02,500 --> 00:10:05,890
intent emerges RC we do this with the

00:10:04,750 --> 00:10:07,900
awareness that this is not the preferred

00:10:05,890 --> 00:10:09,220
outcome for many people this was before

00:10:07,900 --> 00:10:11,800
a final comment period which would have

00:10:09,220 --> 00:10:13,540
made more sense for this statement and I

00:10:11,800 --> 00:10:16,330
really like this sentiment sentiment

00:10:13,540 --> 00:10:17,890
from Tom amber is its community not its

00:10:16,330 --> 00:10:19,140
codebase preserving the health of this

00:10:17,890 --> 00:10:20,890
community is my number one priority

00:10:19,140 --> 00:10:22,990
sincere thank you to everyone who

00:10:20,890 --> 00:10:25,000
commented on this RFC for or against

00:10:22,990 --> 00:10:26,110
decisions like this are not easy but I

00:10:25,000 --> 00:10:27,520
believe this is the right thing to do

00:10:26,110 --> 00:10:30,640
for the long-term health of ember and

00:10:27,520 --> 00:10:32,320
then the real test this was an

00:10:30,640 --> 00:10:34,180
incredibly hard stress test of the RFC

00:10:32,320 --> 00:10:35,620
process it lasted about six months from

00:10:34,180 --> 00:10:37,000
the time it was open until the time it

00:10:35,620 --> 00:10:39,340
was merged and I got a hundred and

00:10:37,000 --> 00:10:40,690
sixty-four comments ultimately we

00:10:39,340 --> 00:10:42,340
believe that by doing the work to

00:10:40,690 --> 00:10:44,200
respect each other and sincerely hear

00:10:42,340 --> 00:10:45,460
each other out we are creating a strong

00:10:44,200 --> 00:10:48,400
healthy community that can go farther

00:10:45,460 --> 00:10:49,780
together and this this comment says this

00:10:48,400 --> 00:10:51,520
is not the decision I personally favor

00:10:49,780 --> 00:10:53,710
but I appreciate that someone has to

00:10:51,520 --> 00:10:56,320
make a decision that is that is the best

00:10:53,710 --> 00:10:59,350
case scenario for everybody felt heard

00:10:56,320 --> 00:11:00,670
even though we don't all agree now if

00:10:59,350 --> 00:11:02,500
you think that mervich moving to this

00:11:00,670 --> 00:11:04,840
Court is a tricky RFC this next one is

00:11:02,500 --> 00:11:06,580
even trickier embers website is the home

00:11:04,840 --> 00:11:08,320
base for many of our developers and it

00:11:06,580 --> 00:11:09,790
hasn't changed in years and we kept

00:11:08,320 --> 00:11:12,190
hearing over and over again that it's

00:11:09,790 --> 00:11:13,690
time for us to update the website but as

00:11:12,190 --> 00:11:15,490
much as everyone felt strongly that it

00:11:13,690 --> 00:11:16,810
was time for a big update members of the

00:11:15,490 --> 00:11:19,030
community had very strong opinions about

00:11:16,810 --> 00:11:20,710
how it should change and having done a

00:11:19,030 --> 00:11:22,480
lot of design work in my day myself

00:11:20,710 --> 00:11:22,850
there was no way in hell I wanted to

00:11:22,480 --> 00:11:24,170
subject

00:11:22,850 --> 00:11:26,000
designer to the kind of back and forth

00:11:24,170 --> 00:11:27,680
asynchronous discussion that the RFC

00:11:26,000 --> 00:11:29,449
process uses to drive decisions there's

00:11:27,680 --> 00:11:30,680
something wrong with that process it's

00:11:29,449 --> 00:11:32,569
just not really the process that a

00:11:30,680 --> 00:11:34,639
designer is used to going through so

00:11:32,569 --> 00:11:36,470
what we needed to do is create a small

00:11:34,639 --> 00:11:37,970
strike team of community members who

00:11:36,470 --> 00:11:39,889
would work directly with the designer

00:11:37,970 --> 00:11:41,899
and represent the designers perspective

00:11:39,889 --> 00:11:44,060
to the community and vice-versa

00:11:41,899 --> 00:11:45,680
it was pretty tricky to navigate but it

00:11:44,060 --> 00:11:47,300
was an important test of our capacity to

00:11:45,680 --> 00:11:48,589
make decisions as a community without a

00:11:47,300 --> 00:11:50,420
corporation's management hierarchy

00:11:48,589 --> 00:11:52,269
calling the shots and without the need

00:11:50,420 --> 00:11:55,759
for a benevolent dictator for life I

00:11:52,269 --> 00:11:57,889
don't want to do that the RFC contained

00:11:55,759 --> 00:12:00,860
designs and illustrations so it was a

00:11:57,889 --> 00:12:02,690
pretty different kind of RFC as the RFC

00:12:00,860 --> 00:12:06,230
progressed the designs were tweaked and

00:12:02,690 --> 00:12:07,699
refined to try to get as much community

00:12:06,230 --> 00:12:09,440
perspective into the first draft as

00:12:07,699 --> 00:12:11,180
possible we analyzed our annual

00:12:09,440 --> 00:12:12,649
Community Survey and identified the

00:12:11,180 --> 00:12:14,630
values that those who responded to the

00:12:12,649 --> 00:12:15,949
survey described this is one piece of

00:12:14,630 --> 00:12:17,839
that analysis but they're attached to

00:12:15,949 --> 00:12:20,600
the RFC was a PDF with a very detailed

00:12:17,839 --> 00:12:22,550
analysis of what kind of values came

00:12:20,600 --> 00:12:26,329
through in the survey and people should

00:12:22,550 --> 00:12:29,149
check it out now as soon as we released

00:12:26,329 --> 00:12:30,620
the RFC the RFC will reveal the glaring

00:12:29,149 --> 00:12:32,149
oversight in our effort to streamline

00:12:30,620 --> 00:12:33,949
the visual design we had taken away

00:12:32,149 --> 00:12:36,110
something that ember developers felt was

00:12:33,949 --> 00:12:37,699
a core part of their identity looks

00:12:36,110 --> 00:12:38,750
great the only thing I'm missing is not

00:12:37,699 --> 00:12:42,410
seeing a Tom stirrer anywhere on that

00:12:38,750 --> 00:12:44,839
page wink this turned out to be a

00:12:42,410 --> 00:12:46,250
critical discussion Leia was very

00:12:44,839 --> 00:12:47,959
careful not to overwhelm the designer

00:12:46,250 --> 00:12:49,970
and soon enough

00:12:47,959 --> 00:12:53,240
the designer popped in to give us a

00:12:49,970 --> 00:12:55,160
status update and when all was said and

00:12:53,240 --> 00:12:57,139
done we found a way to keep around

00:12:55,160 --> 00:12:58,699
embers iconic illustrations while still

00:12:57,139 --> 00:13:01,730
refreshing the visual style of the

00:12:58,699 --> 00:13:03,410
website ultimately because of the

00:13:01,730 --> 00:13:05,180
magnitude of this project this RFC was

00:13:03,410 --> 00:13:06,230
co-owned by the framework or team The

00:13:05,180 --> 00:13:08,149
Learning Team and the steering committee

00:13:06,230 --> 00:13:09,470
it was approved by all three groups and

00:13:08,149 --> 00:13:11,930
its implementation was managed by the

00:13:09,470 --> 00:13:13,189
Learning Team if you go to ember.js comm

00:13:11,930 --> 00:13:16,819
today you can see the fruits of this

00:13:13,189 --> 00:13:18,589
labor just like the discord RFC because

00:13:16,819 --> 00:13:20,180
we were doing something like this for

00:13:18,589 --> 00:13:21,889
the first time we were experimenting

00:13:20,180 --> 00:13:24,079
with using the RFC process to work

00:13:21,889 --> 00:13:26,240
together as a community to do something

00:13:24,079 --> 00:13:28,189
really outside the realm of ember api's

00:13:26,240 --> 00:13:30,079
we paid close attention to the need to

00:13:28,189 --> 00:13:31,760
make final decisions especially because

00:13:30,079 --> 00:13:32,899
we were working with a designer who was

00:13:31,760 --> 00:13:35,120
not directly involved with the RFC

00:13:32,899 --> 00:13:36,440
process itself we were also very focused

00:13:35,120 --> 00:13:37,970
on making sure that the plan

00:13:36,440 --> 00:13:39,680
be implemented by the Learning Team and

00:13:37,970 --> 00:13:42,230
a lot of the thread is about that and

00:13:39,680 --> 00:13:44,450
ultimately finished and just like with

00:13:42,230 --> 00:13:46,460
the discord RFC we knew that making sure

00:13:44,450 --> 00:13:47,750
that everyone felt heard was critical to

00:13:46,460 --> 00:13:49,160
marshaling the kind of effort that we

00:13:47,750 --> 00:13:52,100
would need to implement the website at

00:13:49,160 --> 00:13:53,480
the end it is also worth noting that in

00:13:52,100 --> 00:13:54,920
addition to the number of people who

00:13:53,480 --> 00:13:57,590
raised concerns about losing our iconic

00:13:54,920 --> 00:13:58,550
illustration style the RFC process also

00:13:57,590 --> 00:14:00,800
on earth another constraint

00:13:58,550 --> 00:14:02,240
accessibility the learning team was

00:14:00,800 --> 00:14:03,590
already waist-deep in an effort to

00:14:02,240 --> 00:14:05,750
improve the overall accessibility of the

00:14:03,590 --> 00:14:09,710
website and this new homepage needed to

00:14:05,750 --> 00:14:10,970
continue to build on that effort now the

00:14:09,710 --> 00:14:12,560
reason that most people wouldn't even

00:14:10,970 --> 00:14:14,570
consider updating the website through

00:14:12,560 --> 00:14:17,330
the RFC process is fear of the dreaded

00:14:14,570 --> 00:14:19,310
designed by committee I remember my very

00:14:17,330 --> 00:14:20,900
first web development job being told to

00:14:19,310 --> 00:14:23,000
put a counter at the bottom of the page

00:14:20,900 --> 00:14:24,440
I said what's the point of that very few

00:14:23,000 --> 00:14:26,270
people actually go to this website

00:14:24,440 --> 00:14:28,460
wouldn't that be very embarrassing to

00:14:26,270 --> 00:14:29,720
which I was told don't be silly did you

00:14:28,460 --> 00:14:31,910
think we wanted you to put the real

00:14:29,720 --> 00:14:33,140
count of views there that's what design

00:14:31,910 --> 00:14:35,180
by committee looks like and it's a

00:14:33,140 --> 00:14:37,130
disaster in this case we weren't using

00:14:35,180 --> 00:14:39,290
the design process to iterate granularly

00:14:37,130 --> 00:14:41,480
with the designer we would never ever

00:14:39,290 --> 00:14:42,680
use the RC prostitute thought process to

00:14:41,480 --> 00:14:45,560
do something that looks like designed by

00:14:42,680 --> 00:14:47,000
committee instead we were using the RFC

00:14:45,560 --> 00:14:48,290
process to help the leadership of the

00:14:47,000 --> 00:14:51,920
project make decisions that were

00:14:48,290 --> 00:14:54,080
well-informed recorded implementable and

00:14:51,920 --> 00:14:57,890
which made members of the community feel

00:14:54,080 --> 00:14:59,450
heard we've also invested in giving

00:14:57,890 --> 00:15:01,070
people a path to join the core teams

00:14:59,450 --> 00:15:02,780
provided they are willing and able to do

00:15:01,070 --> 00:15:04,070
the work this has always been an

00:15:02,780 --> 00:15:05,960
extremely important part of Amber's

00:15:04,070 --> 00:15:07,970
community focus our goal and our

00:15:05,960 --> 00:15:10,100
yardstick is this our core team should

00:15:07,970 --> 00:15:12,920
represent communities companies big and

00:15:10,100 --> 00:15:14,360
small big medium and small countries all

00:15:12,920 --> 00:15:15,800
over the world and people with many

00:15:14,360 --> 00:15:18,140
different perspectives and identities

00:15:15,800 --> 00:15:20,150
the more diverse our leadership teams

00:15:18,140 --> 00:15:21,770
are the more likely their decisions will

00:15:20,150 --> 00:15:23,570
reflect will reflect the wider community

00:15:21,770 --> 00:15:25,180
and the more likely it is that the wider

00:15:23,570 --> 00:15:27,830
community will reflect those decisions

00:15:25,180 --> 00:15:29,210
will respect those decisions and the

00:15:27,830 --> 00:15:31,160
core teams have a place for people doing

00:15:29,210 --> 00:15:33,380
all kinds of different work designers

00:15:31,160 --> 00:15:34,820
event planners project managers and

00:15:33,380 --> 00:15:37,910
illustrators are all part of mbers

00:15:34,820 --> 00:15:39,500
community leadership team with the

00:15:37,910 --> 00:15:41,690
completion of the discord and website

00:15:39,500 --> 00:15:43,490
RFC's our community process had proven

00:15:41,690 --> 00:15:45,410
itself it had become a general purpose

00:15:43,490 --> 00:15:47,360
tool for helping us organize discussion

00:15:45,410 --> 00:15:50,150
drive towards decisions and mobilize

00:15:47,360 --> 00:15:50,540
implementation we didn't need a single

00:15:50,150 --> 00:15:51,860
corporate

00:15:50,540 --> 00:15:53,390
to make decisions for us through its

00:15:51,860 --> 00:15:55,100
management hierarchy and we didn't need

00:15:53,390 --> 00:15:57,680
to vest all decision-making authority

00:15:55,100 --> 00:15:59,030
and a single person to move faster no

00:15:57,680 --> 00:16:03,290
matter how benevolent that person might

00:15:59,030 --> 00:16:05,810
be we had learned to move together these

00:16:03,290 --> 00:16:07,850
RFC's also proved that we can do the

00:16:05,810 --> 00:16:09,470
work together and still make progress it

00:16:07,850 --> 00:16:11,480
reminds me of the adage go slow to go

00:16:09,470 --> 00:16:13,010
fast I found that if you try to blow

00:16:11,480 --> 00:16:14,690
past community dissent and make command

00:16:13,010 --> 00:16:18,100
decisions you're taking on community

00:16:14,690 --> 00:16:20,630
that that will crop up randomly later on

00:16:18,100 --> 00:16:21,920
because at the end of the day Amber's

00:16:20,630 --> 00:16:23,630
core belief is that we're all in this

00:16:21,920 --> 00:16:26,060
together through ups and downs through

00:16:23,630 --> 00:16:28,820
thick and thin through coronavirus or

00:16:26,060 --> 00:16:30,560
whatever we're all willing to work as

00:16:28,820 --> 00:16:32,540
hard for each other as we work for

00:16:30,560 --> 00:16:36,920
ourselves and that means continuing to

00:16:32,540 --> 00:16:38,780
build the capacity to work together but

00:16:36,920 --> 00:16:40,370
trouble was lurking while we were

00:16:38,780 --> 00:16:43,190
investing our energy in building to keep

00:16:40,370 --> 00:16:44,510
bringing the community together by 2017

00:16:43,190 --> 00:16:47,390
the Ember framework felt like it was

00:16:44,510 --> 00:16:49,220
starting to fall behind in ember moving

00:16:47,390 --> 00:16:52,220
as a community is our highest technical

00:16:49,220 --> 00:16:53,570
priority at the beginning that meant

00:16:52,220 --> 00:16:54,950
that our users have to wait for the

00:16:53,570 --> 00:16:56,960
community to design new high level

00:16:54,950 --> 00:16:59,120
features to make progress this slows

00:16:56,960 --> 00:17:01,190
down enthusiastic early adopters in our

00:16:59,120 --> 00:17:04,460
community it also deprives us of the

00:17:01,190 --> 00:17:06,110
feedback of experiments so to get our

00:17:04,460 --> 00:17:07,370
community to experiment more maybe we

00:17:06,110 --> 00:17:09,470
could announce features that are still

00:17:07,370 --> 00:17:11,270
just ideas then our community could help

00:17:09,470 --> 00:17:13,340
us flesh them out and help us figure out

00:17:11,270 --> 00:17:15,200
what the problems are this is not a

00:17:13,340 --> 00:17:16,640
solution for ember it places too much of

00:17:15,200 --> 00:17:17,990
the onus of experimentation on the

00:17:16,640 --> 00:17:19,280
people who are just trying to ship new

00:17:17,990 --> 00:17:21,860
features and make progress with their

00:17:19,280 --> 00:17:24,320
apps and we're not excited about taking

00:17:21,860 --> 00:17:25,820
the time to experiment at work what we

00:17:24,320 --> 00:17:27,020
realize is that for every nine people

00:17:25,820 --> 00:17:28,460
who are just going about their day

00:17:27,020 --> 00:17:30,380
building features and making their

00:17:28,460 --> 00:17:31,580
customers happy there's about one person

00:17:30,380 --> 00:17:33,560
who is excited about trying out new

00:17:31,580 --> 00:17:35,120
stuff either because they really really

00:17:33,560 --> 00:17:36,230
need it we're more likely that they're

00:17:35,120 --> 00:17:42,050
just a kind of person who likes

00:17:36,230 --> 00:17:43,730
tinkering with new stuff this reminded

00:17:42,050 --> 00:17:45,710
me of a talk that Brandon Hayes gave

00:17:43,730 --> 00:17:46,910
called surviving the framework Wars he

00:17:45,710 --> 00:17:48,440
said there are three kinds of people in

00:17:46,910 --> 00:17:50,090
a community and they correspond to three

00:17:48,440 --> 00:17:50,660
different stages of development in a

00:17:50,090 --> 00:17:53,570
community

00:17:50,660 --> 00:17:57,080
he said he cited somebody the link is on

00:17:53,570 --> 00:17:58,520
the slide pioneers are so pioneers are

00:17:57,080 --> 00:18:00,110
responsible for the early vision of the

00:17:58,520 --> 00:18:01,190
project and for doing the experimental

00:18:00,110 --> 00:18:03,560
work that gets it off the ground

00:18:01,190 --> 00:18:03,830
Brandon said settlers are responsible

00:18:03,560 --> 00:18:06,769
for

00:18:03,830 --> 00:18:08,630
term strategy and synthesis and town

00:18:06,769 --> 00:18:11,210
planners are responsible for tactics and

00:18:08,630 --> 00:18:13,220
execution by the way depending on the

00:18:11,210 --> 00:18:14,720
day I personally might be a pioneer like

00:18:13,220 --> 00:18:16,700
when I'm working on glimmer VN features

00:18:14,720 --> 00:18:18,529
a settler when I'm working on skylight

00:18:16,700 --> 00:18:20,299
or a town planner when I'm attending

00:18:18,529 --> 00:18:22,100
framework meetings I actually think it's

00:18:20,299 --> 00:18:24,200
very important to be able to conceive of

00:18:22,100 --> 00:18:27,409
people moving seamlessly across these

00:18:24,200 --> 00:18:29,000
roles what we realized when we thought

00:18:27,409 --> 00:18:31,340
about it is that in our ideal community

00:18:29,000 --> 00:18:33,620
the people who are excited to experiment

00:18:31,340 --> 00:18:34,940
with new features can play around and in

00:18:33,620 --> 00:18:38,029
that ideal community that wouldn't

00:18:34,940 --> 00:18:40,039
disrupt everybody else and every so

00:18:38,029 --> 00:18:41,750
often when this is going well the

00:18:40,039 --> 00:18:43,100
excited experimenters share the love by

00:18:41,750 --> 00:18:45,049
creating add-ons that the rest of the

00:18:43,100 --> 00:18:48,289
community can use we've seen this happen

00:18:45,049 --> 00:18:50,090
over and over with fastboot Mirage ember

00:18:48,289 --> 00:18:51,919
twittle ember observer type script

00:18:50,090 --> 00:18:53,899
support and so much more even without

00:18:51,919 --> 00:18:55,700
our direct support the kinds of people

00:18:53,899 --> 00:18:57,200
who are excited about experimenting with

00:18:55,700 --> 00:18:58,639
new tools bring new stable features to

00:18:57,200 --> 00:19:02,210
the rest of the user base in the form of

00:18:58,639 --> 00:19:04,100
add-ons on its own the pioneers do an

00:19:02,210 --> 00:19:05,899
amazing job of flushing out experimental

00:19:04,100 --> 00:19:07,580
ideas finding problems suggesting

00:19:05,899 --> 00:19:11,510
solutions and creating add-ons for users

00:19:07,580 --> 00:19:12,919
but what we realized around 2017 is that

00:19:11,510 --> 00:19:15,710
the core teams could make their job even

00:19:12,919 --> 00:19:17,779
easier by changing our process instead

00:19:15,710 --> 00:19:19,490
of the core teams fully designing high

00:19:17,779 --> 00:19:20,990
level features landing the whole feature

00:19:19,490 --> 00:19:23,000
buying the feature flag and then

00:19:20,990 --> 00:19:25,460
stabilizing it over time we could

00:19:23,000 --> 00:19:27,740
involve the pioneers directly we could

00:19:25,460 --> 00:19:30,289
instead land and stabilize low-level

00:19:27,740 --> 00:19:32,630
features that we did not intend everyday

00:19:30,289 --> 00:19:34,279
users to use and we could let the

00:19:32,630 --> 00:19:36,830
Pioneers hammer on them to flesh out

00:19:34,279 --> 00:19:38,720
high-level api's the key is to make sure

00:19:36,830 --> 00:19:40,220
that ember settlers see all the activity

00:19:38,720 --> 00:19:41,899
but understand that they're free to

00:19:40,220 --> 00:19:43,690
continue doing their everyday work while

00:19:41,899 --> 00:19:46,250
the pioneers chart the next course

00:19:43,690 --> 00:19:47,360
there's a certain joy in embracing the

00:19:46,250 --> 00:19:48,950
idea that you're getting your work done

00:19:47,360 --> 00:19:50,299
and you don't need to be a part of every

00:19:48,950 --> 00:19:55,340
little twist and turn of the effort of

00:19:50,299 --> 00:19:56,840
the pioneers starting in 2017 we started

00:19:55,340 --> 00:19:58,940
learning how to make a process out of

00:19:56,840 --> 00:20:00,470
shipping features as low-level

00:19:58,940 --> 00:20:03,019
primitives first and let the pioneers

00:20:00,470 --> 00:20:04,850
flesh out the high-level api's we flesh

00:20:03,019 --> 00:20:06,260
out the idea in our 2017 keynote the

00:20:04,850 --> 00:20:08,510
same year that we announced glimmer j/s

00:20:06,260 --> 00:20:10,250
now glimmer JS was our first serious

00:20:08,510 --> 00:20:12,220
attempt to chart this course and let's

00:20:10,250 --> 00:20:15,770
just say we learned from that experience

00:20:12,220 --> 00:20:17,450
by 2018 we had become fluent in the idea

00:20:15,770 --> 00:20:20,360
when we wrote the routing server

00:20:17,450 --> 00:20:22,159
RFC we had the basics down and by 2019

00:20:20,360 --> 00:20:24,320
with them up with the modifier manager

00:20:22,159 --> 00:20:26,480
API we had become pretty confident that

00:20:24,320 --> 00:20:28,039
the approach was working by then we had

00:20:26,480 --> 00:20:29,510
years of experience shipping new

00:20:28,039 --> 00:20:31,250
features first as low-level primitives

00:20:29,510 --> 00:20:32,870
and saw that ember settlers could keep

00:20:31,250 --> 00:20:35,990
humming along just fine

00:20:32,870 --> 00:20:37,549
this quote is basically saying in the

00:20:35,990 --> 00:20:38,990
RFC we're not very worried about

00:20:37,549 --> 00:20:40,700
fragmentation we've done this a bunch of

00:20:38,990 --> 00:20:43,789
times and everything is coming along

00:20:40,700 --> 00:20:46,070
just fine and in practice let's look at

00:20:43,789 --> 00:20:48,409
how that worked so the visit API becomes

00:20:46,070 --> 00:20:51,409
fastboot component manager becomes

00:20:48,409 --> 00:20:54,649
glimmer component and modifier manager

00:20:51,409 --> 00:20:56,570
became ember modifiers the key is that

00:20:54,649 --> 00:20:58,730
when we ship new api's like component

00:20:56,570 --> 00:21:00,169
manager or modifier manager we focus on

00:20:58,730 --> 00:21:02,029
unlocking experimentation and

00:21:00,169 --> 00:21:03,679
flexibility and we use names that

00:21:02,029 --> 00:21:04,880
clearly communicate that application

00:21:03,679 --> 00:21:06,769
developers don't need to look at them

00:21:04,880 --> 00:21:08,240
now they also need to tend to be

00:21:06,769 --> 00:21:10,760
designed with an eye towards evolution

00:21:08,240 --> 00:21:12,260
these low-level api is tend to be much

00:21:10,760 --> 00:21:13,970
more stable than higher-level api's

00:21:12,260 --> 00:21:14,990
which means that the experiments that

00:21:13,970 --> 00:21:17,240
people build in userspace

00:21:14,990 --> 00:21:19,580
continue to work even when we eventually

00:21:17,240 --> 00:21:21,110
finalize something else in Kor we give

00:21:19,580 --> 00:21:23,240
the Pioneers the tools that they need to

00:21:21,110 --> 00:21:26,120
pioneer and leave the settlers alone to

00:21:23,240 --> 00:21:28,370
settle now a totally valid alternative

00:21:26,120 --> 00:21:29,419
to this story is to announce a new API

00:21:28,370 --> 00:21:31,100
is where there's while they're still

00:21:29,419 --> 00:21:32,659
being designed and encouraged everyone

00:21:31,100 --> 00:21:34,909
in the community to participate in the

00:21:32,659 --> 00:21:36,889
process flushing them out that gives the

00:21:34,909 --> 00:21:39,169
whole community including the settlers a

00:21:36,889 --> 00:21:41,149
QA role and it probably uncovers more

00:21:39,169 --> 00:21:42,769
information but it cuts against embers

00:21:41,149 --> 00:21:44,179
core value placing too much of the onus

00:21:42,769 --> 00:21:46,429
of building new features on ember

00:21:44,179 --> 00:21:48,139
settlers at first this was a serious

00:21:46,429 --> 00:21:49,820
issue for us because our pioneers had

00:21:48,139 --> 00:21:51,380
nothing to do unless they were able to

00:21:49,820 --> 00:21:53,990
contribute directly to ember source code

00:21:51,380 --> 00:21:55,309
but since 2017 we have focused on

00:21:53,990 --> 00:21:57,409
community innovations that would give

00:21:55,309 --> 00:21:58,760
embers pioneers a lot to do improving

00:21:57,409 --> 00:22:00,110
how quickly we could build new features

00:21:58,760 --> 00:22:01,760
without creating the kind of

00:22:00,110 --> 00:22:03,769
fragmentation that cut so deeply against

00:22:01,760 --> 00:22:07,130
our core value that everything we do we

00:22:03,769 --> 00:22:08,899
do together by 2019 we have gotten

00:22:07,130 --> 00:22:10,279
pretty good at this our pioneers were

00:22:08,899 --> 00:22:12,500
cranking out new add-ons left and right

00:22:10,279 --> 00:22:13,789
and embers core teams were focused on

00:22:12,500 --> 00:22:15,110
building low-level primitives so they

00:22:13,789 --> 00:22:16,639
could work with the pioneers to build

00:22:15,110 --> 00:22:18,470
the next generation high level features

00:22:16,639 --> 00:22:21,080
there was only one problem

00:22:18,470 --> 00:22:22,639
most ember users had no idea when they

00:22:21,080 --> 00:22:24,409
should adopt any of these features in

00:22:22,639 --> 00:22:26,240
some cases the features had gone through

00:22:24,409 --> 00:22:28,129
the entire lifecycle from primitive to

00:22:26,240 --> 00:22:29,269
pioneer to stability in other cases

00:22:28,129 --> 00:22:31,290
features were still going through the

00:22:29,269 --> 00:22:32,970
lifecycle while this was moving

00:22:31,290 --> 00:22:34,710
along technically it was obvious that it

00:22:32,970 --> 00:22:36,390
wasn't the end of the story we had one

00:22:34,710 --> 00:22:38,280
more lifecycle problem to solve and for

00:22:36,390 --> 00:22:39,930
ember it's the whole ball game how could

00:22:38,280 --> 00:22:43,440
we move our community to the new world

00:22:39,930 --> 00:22:45,390
that we were building together so in

00:22:43,440 --> 00:22:46,740
last year's keynote we announced the

00:22:45,390 --> 00:22:48,690
last piece of community innovation

00:22:46,740 --> 00:22:51,840
puzzle last piece of the community

00:22:48,690 --> 00:22:54,060
innovation puzzle Auditions ember octane

00:22:51,840 --> 00:22:55,440
would be the first addition an addition

00:22:54,060 --> 00:22:57,300
serves as a call to arms to the

00:22:55,440 --> 00:22:58,770
communities pioneers it's time to turn a

00:22:57,300 --> 00:23:00,750
collection of features into a new world

00:22:58,770 --> 00:23:03,210
that we can migrate our entire community

00:23:00,750 --> 00:23:05,130
to in the mean time the settlers keep on

00:23:03,210 --> 00:23:06,780
working they can see all the exciting

00:23:05,130 --> 00:23:08,070
work going on to get everyone ready to

00:23:06,780 --> 00:23:10,050
migrate to a new better world and

00:23:08,070 --> 00:23:12,210
somebody even find it exciting enough to

00:23:10,050 --> 00:23:13,470
do some pioneering of their own but most

00:23:12,210 --> 00:23:15,690
people continue to get their job done

00:23:13,470 --> 00:23:17,130
day in and day out and wait for the call

00:23:15,690 --> 00:23:19,820
to march together

00:23:17,130 --> 00:23:21,930
[Music]

00:23:19,820 --> 00:23:23,790
although gen Weber couldn't be in

00:23:21,930 --> 00:23:25,650
Portland in person this year she created

00:23:23,790 --> 00:23:28,590
an octane trailer for us to watch let's

00:23:25,650 --> 00:23:30,870
roll the tape today's presentation has a

00:23:28,590 --> 00:23:33,030
lot of information for and about our

00:23:30,870 --> 00:23:34,740
community but it's also a time to share

00:23:33,030 --> 00:23:37,980
a message with the broader JavaScript

00:23:34,740 --> 00:23:39,810
community ember is a front-end framework

00:23:37,980 --> 00:23:42,000
that has something new to offer you a

00:23:39,810 --> 00:23:44,880
new set of tools and a new way of

00:23:42,000 --> 00:23:47,010
working on web apps our latest work is

00:23:44,880 --> 00:23:49,440
called ember octane and it's a total

00:23:47,010 --> 00:23:51,990
overhaul of Empress syntax mental models

00:23:49,440 --> 00:23:55,730
and learning journey if you tried ember

00:23:51,990 --> 00:23:55,730
before this is pretty different

00:23:56,020 --> 00:24:00,890
one of embers long-standing core

00:23:58,670 --> 00:24:02,810
strengths is that it includes the things

00:24:00,890 --> 00:24:05,120
you need to build a successful software

00:24:02,810 --> 00:24:09,140
product tools that are built to work

00:24:05,120 --> 00:24:11,560
together now with octane it puts HTML

00:24:09,140 --> 00:24:13,580
first if its components front and center

00:24:11,560 --> 00:24:15,920
developers can learn by following

00:24:13,580 --> 00:24:19,190
thoroughly tested free brand new

00:24:15,920 --> 00:24:21,770
tutorials and this past December we

00:24:19,190 --> 00:24:23,990
shipped octane in a minor stable release

00:24:21,770 --> 00:24:26,360
building some of the best new features

00:24:23,990 --> 00:24:29,180
that the front-end has to offer on top

00:24:26,360 --> 00:24:31,010
of a solid dependable foundation member

00:24:29,180 --> 00:24:32,570
developers didn't have to rewrite their

00:24:31,010 --> 00:24:36,350
apps in order to start using these

00:24:32,570 --> 00:24:38,210
features let me take you on a tour with

00:24:36,350 --> 00:24:40,760
a few commands I can generate my app

00:24:38,210 --> 00:24:43,460
install and use almost any popular

00:24:40,760 --> 00:24:46,160
JavaScript package from NPM and add some

00:24:43,460 --> 00:24:48,200
markup interaction and CSS I can write

00:24:46,160 --> 00:24:50,870
some end-to-end tests run them run a

00:24:48,200 --> 00:24:53,720
production build and deploy I can do all

00:24:50,870 --> 00:24:55,430
of these things with zero config along

00:24:53,720 --> 00:24:58,100
the way I learned some important things

00:24:55,430 --> 00:25:00,140
in a guided way out of the box

00:24:58,100 --> 00:25:02,060
every new ember app comes with linting

00:25:00,140 --> 00:25:04,160
that guides me to make good choices for

00:25:02,060 --> 00:25:06,770
following coding best practices and

00:25:04,160 --> 00:25:08,720
improving my apps accessibility and when

00:25:06,770 --> 00:25:10,520
I work on other projects I bring my

00:25:08,720 --> 00:25:13,220
knowledge and expertise about the web

00:25:10,520 --> 00:25:15,500
with me here I'm copying and pasting

00:25:13,220 --> 00:25:19,850
some d3 code I found on the internet

00:25:15,500 --> 00:25:21,920
into my ember app in the end I have more

00:25:19,850 --> 00:25:23,170
time for doing the things I enjoy as a

00:25:21,920 --> 00:25:25,370
developer

00:25:23,170 --> 00:25:27,140
whenever I have questions it's

00:25:25,370 --> 00:25:29,630
especially helpful to be part of this

00:25:27,140 --> 00:25:31,610
community I can get debugging help from

00:25:29,630 --> 00:25:35,570
other people without needing to explain

00:25:31,610 --> 00:25:37,700
my apps architecture first the Ember

00:25:35,570 --> 00:25:39,230
community includes developers who work

00:25:37,700 --> 00:25:41,360
at companies that have thousands of

00:25:39,230 --> 00:25:43,280
engineers they work at small startups

00:25:41,360 --> 00:25:45,350
with scrappy teams and the drive to

00:25:43,280 --> 00:25:47,240
build something new they're hobbyists

00:25:45,350 --> 00:25:49,640
who choose ember for their side projects

00:25:47,240 --> 00:25:52,190
because it lets one person get a lot

00:25:49,640 --> 00:25:54,410
done and anyone can participate in

00:25:52,190 --> 00:25:56,870
shaping embers future by making

00:25:54,410 --> 00:25:58,580
proposals for new features or providing

00:25:56,870 --> 00:26:00,950
feedback on the things that others have

00:25:58,580 --> 00:26:03,380
written we're all using the same core

00:26:00,950 --> 00:26:06,140
tools and that opens new possibilities

00:26:03,380 --> 00:26:08,570
if you need to move quickly to get your

00:26:06,140 --> 00:26:09,140
app into production or you want to learn

00:26:08,570 --> 00:26:11,540
what it take

00:26:09,140 --> 00:26:16,120
to get there we invite you to try ember

00:26:11,540 --> 00:26:16,120
octane let's build something together

00:26:17,229 --> 00:26:21,769
we spent a lot of time talking about how

00:26:19,940 --> 00:26:23,330
ember have however has improved its

00:26:21,769 --> 00:26:25,700
capacity to move together as a community

00:26:23,330 --> 00:26:27,799
and we will just watch Jen quickly walk

00:26:25,700 --> 00:26:30,049
through octane but now I want to take a

00:26:27,799 --> 00:26:31,609
few minutes to rewind back to 2005 and

00:26:30,049 --> 00:26:34,249
talk about my own journey from print

00:26:31,609 --> 00:26:36,830
designer to programmer when I started

00:26:34,249 --> 00:26:39,679
programming in 2005 I already knew HTML

00:26:36,830 --> 00:26:40,909
and CSS sort of at the time I had five

00:26:39,679 --> 00:26:42,289
years of experience as editor-in-chief

00:26:40,909 --> 00:26:44,690
and main designer of to school

00:26:42,289 --> 00:26:46,700
newspapers my designs had won some minor

00:26:44,690 --> 00:26:49,460
awards and I had learned enough HTML and

00:26:46,700 --> 00:26:51,200
CSS to lightly modify the CMS that my

00:26:49,460 --> 00:26:54,950
newspaper used to put its content on the

00:26:51,200 --> 00:26:56,869
Internet this is a this is a not fully

00:26:54,950 --> 00:26:59,179
complete comp that I found in my email

00:26:56,869 --> 00:27:00,710
from back then when I took my first job

00:26:59,179 --> 00:27:01,999
as a web designer I assumed that my

00:27:00,710 --> 00:27:04,099
experience as a print designer would

00:27:01,999 --> 00:27:06,470
carry me forward as I found my digital

00:27:04,099 --> 00:27:09,139
footing the person who hired me had the

00:27:06,470 --> 00:27:11,149
same assumption virtually all of my jobs

00:27:09,139 --> 00:27:13,369
before this one were low paid hourly

00:27:11,149 --> 00:27:14,809
work this web designer job paid thirty

00:27:13,369 --> 00:27:16,700
seven dollars an hour but it was

00:27:14,809 --> 00:27:20,269
part-time 20 hours a week still was a

00:27:16,700 --> 00:27:22,309
living wage at a respected nonprofit my

00:27:20,269 --> 00:27:23,809
first day at the job I was told that the

00:27:22,309 --> 00:27:25,129
company had cut ties with the digital

00:27:23,809 --> 00:27:26,809
agency that had been managing the

00:27:25,129 --> 00:27:27,979
websites of a dozen or so departments

00:27:26,809 --> 00:27:29,720
and expected me to take over the

00:27:27,979 --> 00:27:32,599
responsibilities effective immediately

00:27:29,720 --> 00:27:34,820
as a half time employee I was hanging on

00:27:32,599 --> 00:27:36,409
for dear life for my first project I

00:27:34,820 --> 00:27:38,269
updated the website for the nonprofit's

00:27:36,409 --> 00:27:40,639
annual dinner was a ColdFusion website

00:27:38,269 --> 00:27:42,200
next I built a brand new microsite for a

00:27:40,639 --> 00:27:43,909
basketball tournament fundraiser than a

00:27:42,200 --> 00:27:45,619
golf tournament microsite in the

00:27:43,909 --> 00:27:47,809
meantime demands from half a dozen

00:27:45,619 --> 00:27:49,460
departments were piling up they had

00:27:47,809 --> 00:27:50,779
replaced a digital agency with a

00:27:49,460 --> 00:27:52,359
half-time employee whose only web

00:27:50,779 --> 00:27:54,830
experience was Microsoft front-page I

00:27:52,359 --> 00:27:56,869
was only supposed to work halftime but

00:27:54,830 --> 00:27:58,070
my desk was piled high with requests to

00:27:56,869 --> 00:27:59,929
make changes to various parts of the

00:27:58,070 --> 00:28:01,340
organization's website requests for

00:27:59,929 --> 00:28:02,779
brand-new micro sites and requests for

00:28:01,340 --> 00:28:05,450
meetings to discuss and plan even more

00:28:02,779 --> 00:28:07,519
web sites I frequently worked 30 or even

00:28:05,450 --> 00:28:09,799
40 hours a week just to keep up with the

00:28:07,519 --> 00:28:11,899
most urgent demands I realized that my

00:28:09,799 --> 00:28:13,609
print design experience wasn't gonna get

00:28:11,899 --> 00:28:15,789
the job done I needed to learn how to

00:28:13,609 --> 00:28:17,899
program and I needed to learn fast I

00:28:15,789 --> 00:28:19,489
remember walking into Barnes & Noble

00:28:17,899 --> 00:28:20,749
going into the programming section and

00:28:19,489 --> 00:28:22,399
feeling like the information I needed

00:28:20,749 --> 00:28:24,379
was somewhere inside the books on those

00:28:22,399 --> 00:28:26,419
shelves I didn't have a ton of extra

00:28:24,379 --> 00:28:27,679
money at the time but I picked up a PHP

00:28:26,419 --> 00:28:28,850
and my sequel book and I read it

00:28:27,679 --> 00:28:31,730
cover-to-cover

00:28:28,850 --> 00:28:33,620
I felt a great sense of relief this was

00:28:31,730 --> 00:28:35,420
gonna work I already knew HTML and CSS

00:28:33,620 --> 00:28:37,760
and I was gonna be able to use PHP to

00:28:35,420 --> 00:28:40,010
speed up my work I could Spock I could

00:28:37,760 --> 00:28:41,510
stop spending hours keeping headers and

00:28:40,010 --> 00:28:43,100
footers up to date I could give people

00:28:41,510 --> 00:28:44,930
in the organization a tiny form they

00:28:43,100 --> 00:28:46,790
could use to update frequently changing

00:28:44,930 --> 00:28:49,130
copy on the website it made a huge

00:28:46,790 --> 00:28:50,810
difference I was still copying and

00:28:49,130 --> 00:28:52,310
pasting PHP files from the last project

00:28:50,810 --> 00:28:54,110
into the new one when I created a new

00:28:52,310 --> 00:28:55,940
microsite but the structure really

00:28:54,110 --> 00:28:57,830
helped that didn't mean I suddenly had a

00:28:55,940 --> 00:28:59,090
lot of free time I was still totally new

00:28:57,830 --> 00:29:00,980
to programming and the requests were

00:28:59,090 --> 00:29:02,570
coming in fast and furious it's just

00:29:00,980 --> 00:29:04,420
that I was now getting things done and I

00:29:02,570 --> 00:29:07,580
wasn't totally embarrassed by the base

00:29:04,420 --> 00:29:08,720
then I learned about rails instead of

00:29:07,580 --> 00:29:10,100
including the header and footer into

00:29:08,720 --> 00:29:12,080
every page we also had the concept of

00:29:10,100 --> 00:29:14,720
layouts I remember thinking that layouts

00:29:12,080 --> 00:29:16,940
were so much better I could take the

00:29:14,720 --> 00:29:18,410
HTML and CSS I was writing in PHP files

00:29:16,940 --> 00:29:22,280
move them into a rails app and

00:29:18,410 --> 00:29:23,660
everything got better instead of ad hoc

00:29:22,280 --> 00:29:25,370
forums where people could edit tiny

00:29:23,660 --> 00:29:27,500
pieces of copy I could finally build the

00:29:25,370 --> 00:29:29,720
CMS back-end I always dreamed of always

00:29:27,500 --> 00:29:31,520
for a few months this is an image from

00:29:29,720 --> 00:29:33,860
about a year later when I turned it into

00:29:31,520 --> 00:29:36,740
a rails plug-in to be honest I was

00:29:33,860 --> 00:29:38,600
probably a little bit in over my head at

00:29:36,740 --> 00:29:40,010
the time but I actually did build the

00:29:38,600 --> 00:29:41,930
CMS for the departments in the

00:29:40,010 --> 00:29:43,460
organization to use just a few months

00:29:41,930 --> 00:29:46,760
after realizing that I actually needed

00:29:43,460 --> 00:29:48,770
to be a programmer not a designer what

00:29:46,760 --> 00:29:50,810
made all that possible and the reason

00:29:48,770 --> 00:29:52,790
I'm a programmer today is that when I

00:29:50,810 --> 00:29:54,320
was in over my head barely hanging on I

00:29:52,790 --> 00:29:56,090
was able to build on the baseline

00:29:54,320 --> 00:29:58,160
knowledge of HTML and CSS a little bit

00:29:56,090 --> 00:30:00,860
at a time never having to build burne

00:29:58,160 --> 00:30:02,750
weeks of time at work on learning a

00:30:00,860 --> 00:30:04,490
whole new paradigm frankly if I had

00:30:02,750 --> 00:30:05,750
tried to learn a new paradigm I would

00:30:04,490 --> 00:30:07,430
have probably had been fired and looking

00:30:05,750 --> 00:30:10,490
for a new print design job before I

00:30:07,430 --> 00:30:12,140
could ever become a programmer so this

00:30:10,490 --> 00:30:13,730
is very personal to me I wouldn't be a

00:30:12,140 --> 00:30:16,100
programmer today if I hadn't found tools

00:30:13,730 --> 00:30:17,930
that took my HTML and CSS knowledge and

00:30:16,100 --> 00:30:19,340
helped me build on it here's what I'm

00:30:17,930 --> 00:30:21,830
talking about there's basically three

00:30:19,340 --> 00:30:23,810
steps you want to get your portfolio

00:30:21,830 --> 00:30:26,330
portfolio your marketing website or your

00:30:23,810 --> 00:30:27,920
personal website online create a new app

00:30:26,330 --> 00:30:30,200
you want to take your HTML CSS and you

00:30:27,920 --> 00:30:31,940
want to deploy it and you want space to

00:30:30,200 --> 00:30:33,830
grow into a dynamic website with dynamic

00:30:31,940 --> 00:30:35,150
URLs as you learn more and you don't

00:30:33,830 --> 00:30:37,070
want an easy bake oven you don't want

00:30:35,150 --> 00:30:39,140
tools that only beginners use you want

00:30:37,070 --> 00:30:40,610
tools that everybody uses I'm talking

00:30:39,140 --> 00:30:42,530
about using tools that a community of

00:30:40,610 --> 00:30:43,850
professional web developers use to build

00:30:42,530 --> 00:30:46,610
large applications with hundreds of

00:30:43,850 --> 00:30:48,530
engineers in 2005 what I needed was a

00:30:46,610 --> 00:30:50,960
way to incrementally supercharge my HTML

00:30:48,530 --> 00:30:52,700
and CSS skills and this is something

00:30:50,960 --> 00:30:54,850
that has always weighed heavily on me I

00:30:52,700 --> 00:30:56,900
personally built HTML tokenization

00:30:54,850 --> 00:30:58,730
parsing and tree building infrastructure

00:30:56,900 --> 00:31:01,250
into clemmer VM and we have worked

00:30:58,730 --> 00:31:03,560
extremely hard to support valid HTML

00:31:01,250 --> 00:31:06,740
including SVG here's an example test if

00:31:03,560 --> 00:31:08,360
you don't believe me you might not

00:31:06,740 --> 00:31:10,910
believe me because SVG is very is the

00:31:08,360 --> 00:31:12,560
bane of everyone's existence even though

00:31:10,910 --> 00:31:14,210
we cared a lot about this use case and

00:31:12,560 --> 00:31:15,860
kept pushing ember towards being a great

00:31:14,210 --> 00:31:18,350
fit for people who already know HTML

00:31:15,860 --> 00:31:20,450
HTML and CSS there was already one major

00:31:18,350 --> 00:31:22,430
stumbling block there was always one

00:31:20,450 --> 00:31:24,410
major stumbling block ember required

00:31:22,430 --> 00:31:27,020
users to configure the root element of

00:31:24,410 --> 00:31:29,960
every component using a weird JavaScript

00:31:27,020 --> 00:31:32,420
DSL to be honest even though we had done

00:31:29,960 --> 00:31:35,000
so much work to align Ember with HTML I

00:31:32,420 --> 00:31:36,080
didn't feel like the hooda of 2005 would

00:31:35,000 --> 00:31:39,230
have been able to bootstrap a

00:31:36,080 --> 00:31:40,370
programming career with ember and yet it

00:31:39,230 --> 00:31:43,760
wasn't like there were a lot of other

00:31:40,370 --> 00:31:45,560
options out there for that person what's

00:31:43,760 --> 00:31:47,180
really incredible to me is that the

00:31:45,560 --> 00:31:48,500
octane programming model has enough

00:31:47,180 --> 00:31:51,200
improvements that we could update the

00:31:48,500 --> 00:31:53,300
documentation to teach components HTML

00:31:51,200 --> 00:31:55,430
first the picture on the right is an

00:31:53,300 --> 00:31:57,500
example that we first introduced in the

00:31:55,430 --> 00:31:59,060
first section which is called templates

00:31:57,500 --> 00:32:01,760
or HTML and used throughout the guides

00:31:59,060 --> 00:32:03,170
and this is the first place in the

00:32:01,760 --> 00:32:06,350
component guides where JavaScript comes

00:32:03,170 --> 00:32:08,450
up at all in isolation each feature of

00:32:06,350 --> 00:32:10,550
octane might seem small but in aggregate

00:32:08,450 --> 00:32:12,380
they make enough of a difference to

00:32:10,550 --> 00:32:14,090
change the way we write octane apps and

00:32:12,380 --> 00:32:16,370
if we change the way right octane apps

00:32:14,090 --> 00:32:18,170
of course we need to do it together and

00:32:16,370 --> 00:32:19,460
that's why we refresh the guides based

00:32:18,170 --> 00:32:21,650
on this new way of teaching and using

00:32:19,460 --> 00:32:23,210
ember components before we were ready to

00:32:21,650 --> 00:32:26,750
call the whole community to migrate to

00:32:23,210 --> 00:32:29,240
the new world and we could finally and

00:32:26,750 --> 00:32:31,100
with enthusiasm tell all of our users

00:32:29,240 --> 00:32:35,300
about the work that we had done to bake

00:32:31,100 --> 00:32:37,160
HTML so deeply into the glimmer VM going

00:32:35,300 --> 00:32:39,380
back to the beginning this means that if

00:32:37,160 --> 00:32:42,230
you know HTML and CSS you can take your

00:32:39,380 --> 00:32:44,360
existing code drop it into an ember

00:32:42,230 --> 00:32:46,460
application deploy quickly to production

00:32:44,360 --> 00:32:48,920
and share it with your friends

00:32:46,460 --> 00:32:50,540
this goes for Tom's World of Warcraft

00:32:48,920 --> 00:32:52,250
guild website which is the first website

00:32:50,540 --> 00:32:54,500
Tom made as a programmer it goes from my

00:32:52,250 --> 00:32:55,670
basketball tournament website and it

00:32:54,500 --> 00:32:57,800
goes for your portfolio

00:32:55,670 --> 00:32:59,720
Marketing website and you can iterate on

00:32:57,800 --> 00:33:01,190
your skills just like I did with PHP and

00:32:59,720 --> 00:33:03,500
Rails to add interactivity to your

00:33:01,190 --> 00:33:05,060
website Godfrey is gonna get into a lot

00:33:03,500 --> 00:33:07,670
more details about what it looks like

00:33:05,060 --> 00:33:10,120
technically about what HTML first looks

00:33:07,670 --> 00:33:13,670
like technically but this is the goal

00:33:10,120 --> 00:33:15,530
and once you get your website on the

00:33:13,670 --> 00:33:16,400
Internet which is really the important

00:33:15,530 --> 00:33:17,570
thing it's important that you have

00:33:16,400 --> 00:33:20,060
something on the internet that you can

00:33:17,570 --> 00:33:22,520
share with your friends or your or a

00:33:20,060 --> 00:33:24,500
potential boss or a potential person

00:33:22,520 --> 00:33:25,250
you're applying for a job at there's

00:33:24,500 --> 00:33:27,320
room to grow

00:33:25,250 --> 00:33:29,180
you could add interactivity using the

00:33:27,320 --> 00:33:30,830
component JavaScript API you can add

00:33:29,180 --> 00:33:32,570
more pages to your app with the Ember

00:33:30,830 --> 00:33:34,550
router you can add server-side rendering

00:33:32,570 --> 00:33:36,350
using fastboot or even empress to build

00:33:34,550 --> 00:33:38,060
on your ember knowledge to build a gem

00:33:36,350 --> 00:33:40,580
stack app which there will be a talk

00:33:38,060 --> 00:33:42,590
about in this conference and my personal

00:33:40,580 --> 00:33:44,210
favorite is you can use air table as a

00:33:42,590 --> 00:33:45,710
back-end to add some dynamic data to

00:33:44,210 --> 00:33:47,060
your app the coolest thing about air

00:33:45,710 --> 00:33:49,040
table is that after you design your

00:33:47,060 --> 00:33:50,600
tables you get custom documentation

00:33:49,040 --> 00:33:51,800
that's localized for the exact table and

00:33:50,600 --> 00:33:53,240
columns that you create it you can just

00:33:51,800 --> 00:33:56,660
copy and paste it into your application

00:33:53,240 --> 00:33:58,550
and if you're feeling really adventurous

00:33:56,660 --> 00:34:00,350
you could try it embroider which brings

00:33:58,550 --> 00:34:02,360
automatic route based code splitting to

00:34:00,350 --> 00:34:03,860
your app it works today and a lot of

00:34:02,360 --> 00:34:05,930
real world apps already work with

00:34:03,860 --> 00:34:08,660
embroider but not every add-on supports

00:34:05,930 --> 00:34:10,429
embroidery yet embers pioneers are hard

00:34:08,660 --> 00:34:12,050
at work to bring embroider to everyone

00:34:10,429 --> 00:34:13,220
which means that all ember apps will

00:34:12,050 --> 00:34:15,530
soon have route based code splitting

00:34:13,220 --> 00:34:17,390
without any special annotations just by

00:34:15,530 --> 00:34:19,610
using embers router and components

00:34:17,390 --> 00:34:23,270
normally if you fancy yourself a pioneer

00:34:19,610 --> 00:34:25,220
try it out it's really cool whether

00:34:23,270 --> 00:34:27,350
you're just starting out with an HTML

00:34:25,220 --> 00:34:28,970
and CSS in your pocket and dreams of

00:34:27,350 --> 00:34:30,410
becoming a web developer or whether

00:34:28,970 --> 00:34:32,030
you're a pioneer looking to help chart

00:34:30,410 --> 00:34:34,220
the course to embroider for the rest of

00:34:32,030 --> 00:34:35,840
the community ember has a place for you

00:34:34,220 --> 00:34:37,550
and if you're looking to become a part

00:34:35,840 --> 00:34:39,410
of embers leadership there's a team to

00:34:37,550 --> 00:34:41,090
shoot for regardless of your skill or

00:34:39,410 --> 00:34:42,890
prior experience with frame or code if

00:34:41,090 --> 00:34:44,960
you have experience with infrastructure

00:34:42,890 --> 00:34:45,740
writing or web development the learning

00:34:44,960 --> 00:34:47,990
team would love your help

00:34:45,740 --> 00:34:49,100
if you love project management and want

00:34:47,990 --> 00:34:51,260
to put those skills to good use

00:34:49,100 --> 00:34:52,669
reach out you don't need to be a wizard

00:34:51,260 --> 00:34:54,470
at framework development or have an

00:34:52,669 --> 00:34:56,630
interest in becoming one to have a path

00:34:54,470 --> 00:34:58,280
to leadership in ember if you're

00:34:56,630 --> 00:34:59,960
interested reach out to remember the

00:34:58,280 --> 00:35:01,340
steering committee framework team or

00:34:59,960 --> 00:35:02,990
learning team and one of us will try to

00:35:01,340 --> 00:35:03,470
help you figure out what your path might

00:35:02,990 --> 00:35:05,839
look like

00:35:03,470 --> 00:35:08,490
[Music]

00:35:05,839 --> 00:35:10,230
ultimately what I have learned being a

00:35:08,490 --> 00:35:12,000
part of this amazing community is that

00:35:10,230 --> 00:35:14,280
there's much more to web developer aim

00:35:12,000 --> 00:35:15,750
works than code we strive together we

00:35:14,280 --> 00:35:18,390
run together we move together

00:35:15,750 --> 00:35:19,980
and now when the only way to stay safe

00:35:18,390 --> 00:35:21,780
is to distance ourselves from one

00:35:19,980 --> 00:35:25,650
another we need each other more than

00:35:21,780 --> 00:35:29,400
ever for posterity I want to bring Jonas

00:35:25,650 --> 00:35:36,270
up on the stage one more time roll the

00:35:29,400 --> 00:35:38,640
tape you painted an antibody that's

00:35:36,270 --> 00:35:41,990
great what's your antibody gonna do it's

00:35:38,640 --> 00:35:45,950
going to go track down the small why oh

00:35:41,990 --> 00:35:52,530
what's it gonna do with it finds a virus

00:35:45,950 --> 00:35:53,280
and then what's it gonna do it's gonna

00:35:52,530 --> 00:35:57,200
stop it

00:35:53,280 --> 00:36:02,069
that's great and then you'll be healthy

00:35:57,200 --> 00:36:04,200
that's so good what a great antibody as

00:36:02,069 --> 00:36:07,980
they used to say when I was growing up

00:36:04,200 --> 00:36:09,810
from your lips to God's ears kid next up

00:36:07,980 --> 00:36:11,670
Godfrey's gonna do a deeper dive into

00:36:09,810 --> 00:36:13,710
the technical details of octane but

00:36:11,670 --> 00:36:15,650
first let's watch let's watch Jen's

00:36:13,710 --> 00:36:18,089
trailer again because it's so cool

00:36:15,650 --> 00:36:20,490
today's presentation has a lot of

00:36:18,089 --> 00:36:22,440
information for and about our community

00:36:20,490 --> 00:36:24,920
but it's also a time to share a message

00:36:22,440 --> 00:36:27,510
with the broader JavaScript community

00:36:24,920 --> 00:36:30,030
ember is a front-end framework that has

00:36:27,510 --> 00:36:31,829
something new to offer you a new set of

00:36:30,030 --> 00:36:34,560
tools and a new way of working on web

00:36:31,829 --> 00:36:36,900
apps our latest work is called ember

00:36:34,560 --> 00:36:38,760
octane and it's a total overhaul of

00:36:36,900 --> 00:36:41,130
Empress syntax mental models and

00:36:38,760 --> 00:36:44,869
learning journey if you tried ember

00:36:41,130 --> 00:36:44,869
before this is pretty different

00:36:45,170 --> 00:36:50,010
one of embers long-standing core

00:36:47,820 --> 00:36:52,200
strengths is that it includes the things

00:36:50,010 --> 00:36:54,270
you need to build a successful software

00:36:52,200 --> 00:36:58,290
product tools that are built to work

00:36:54,270 --> 00:37:00,710
together now with octane it puts HTML

00:36:58,290 --> 00:37:02,730
first if its components front and center

00:37:00,710 --> 00:37:05,070
developers can learn by following

00:37:02,730 --> 00:37:08,310
thoroughly tested free brand-new

00:37:05,070 --> 00:37:10,910
tutorials and this past December we

00:37:08,310 --> 00:37:13,470
shipped octane in a minor stable release

00:37:10,910 --> 00:37:15,510
building some of the best new features

00:37:13,470 --> 00:37:18,300
that the front-end has to offer on top

00:37:15,510 --> 00:37:20,160
of a solid dependable foundation member

00:37:18,300 --> 00:37:21,720
developers didn't have to rewrite their

00:37:20,160 --> 00:37:25,500
apps in order to start using these

00:37:21,720 --> 00:37:27,360
features let me take you on a tour with

00:37:25,500 --> 00:37:29,910
a few commands I can generate my app

00:37:27,360 --> 00:37:32,580
install and use almost any popular

00:37:29,910 --> 00:37:35,310
JavaScript package from NPM and add some

00:37:32,580 --> 00:37:37,350
markup interaction and CSS I can write

00:37:35,310 --> 00:37:39,990
some end and tests run them run a

00:37:37,350 --> 00:37:42,870
production build and deploy I can do all

00:37:39,990 --> 00:37:44,580
of these things with zero config along

00:37:42,870 --> 00:37:47,280
the way I learned some important things

00:37:44,580 --> 00:37:49,260
in a guided way out of the box

00:37:47,280 --> 00:37:51,210
every new Emperor app comes with linting

00:37:49,260 --> 00:37:53,280
that guides me to make good choices for

00:37:51,210 --> 00:37:55,920
following coding best practices and

00:37:53,280 --> 00:37:57,840
improving my apps accessibility and when

00:37:55,920 --> 00:37:59,670
I work on other projects I bring my

00:37:57,840 --> 00:38:02,370
knowledge and expertise about the web

00:37:59,670 --> 00:38:04,650
with me here I'm copying and pasting

00:38:02,370 --> 00:38:09,000
some d3 code I found on the internet

00:38:04,650 --> 00:38:11,070
into my ember app in the end I have more

00:38:09,000 --> 00:38:12,290
time for doing the things I enjoy as a

00:38:11,070 --> 00:38:14,520
developer

00:38:12,290 --> 00:38:16,260
whenever I have questions it's

00:38:14,520 --> 00:38:18,780
especially helpful to be part of this

00:38:16,260 --> 00:38:20,760
community I can get debugging help from

00:38:18,780 --> 00:38:24,690
other people without needing to explain

00:38:20,760 --> 00:38:26,850
my apps architecture first the Ember

00:38:24,690 --> 00:38:28,350
community includes developers who work

00:38:26,850 --> 00:38:30,510
at companies that have thousands of

00:38:28,350 --> 00:38:32,400
engineers they work at small startups

00:38:30,510 --> 00:38:34,500
with scrappy teams and the drive to

00:38:32,400 --> 00:38:36,360
build something new they're hobbyists

00:38:34,500 --> 00:38:38,790
who choose ember for their side projects

00:38:36,360 --> 00:38:41,340
because it lets one person get a lot

00:38:38,790 --> 00:38:43,170
done and anyone can participate in

00:38:41,340 --> 00:38:46,020
shaping embers future by making

00:38:43,170 --> 00:38:47,730
proposals for new features or providing

00:38:46,020 --> 00:38:50,070
feedback on the things that others have

00:38:47,730 --> 00:38:52,530
written we're all using the same core

00:38:50,070 --> 00:38:55,290
tools and that opens new possibilities

00:38:52,530 --> 00:38:57,690
if you need to move quickly to get your

00:38:55,290 --> 00:38:58,560
app into production or you want to learn

00:38:57,690 --> 00:39:00,690
what it takes to

00:38:58,560 --> 00:39:05,270
get there we invite you to try mbar

00:39:00,690 --> 00:39:05,270
octane let's build something together

00:39:09,170 --> 00:39:12,650
thank you Jim and Yehuda and hello

00:39:11,059 --> 00:39:14,930
everyone thank you for tuning in to

00:39:12,650 --> 00:39:17,210
Virgil number common 2020 I'm Godfrey

00:39:14,930 --> 00:39:18,980
from the Ember team and I'm here to give

00:39:17,210 --> 00:39:21,319
you an update on all the exciting things

00:39:18,980 --> 00:39:23,809
that happen this year in amber world of

00:39:21,319 --> 00:39:25,460
course as you probably noticed at this

00:39:23,809 --> 00:39:27,589
point the most important news of all is

00:39:25,460 --> 00:39:30,380
that we should obtain a new edition of

00:39:27,589 --> 00:39:32,660
ember but what exactly is obtained as

00:39:30,380 --> 00:39:34,609
you saw in Jen's trailer obtained is a

00:39:32,660 --> 00:39:36,829
lot of things it's a major update to the

00:39:34,609 --> 00:39:39,319
framework it's a set of new features its

00:39:36,829 --> 00:39:41,839
new program model its new defaults when

00:39:39,319 --> 00:39:44,210
generating apps it's a new set of

00:39:41,839 --> 00:39:46,220
recommendations and linting rules as new

00:39:44,210 --> 00:39:48,920
website up the documentation blah blah

00:39:46,220 --> 00:39:51,319
sure it's all those individual things

00:39:48,920 --> 00:39:53,569
but above all obtained is really an

00:39:51,319 --> 00:39:56,210
opportunity for us to present amber to

00:39:53,569 --> 00:39:58,700
developers outside of our community it's

00:39:56,210 --> 00:40:00,859
a chance for us to say hey we have made

00:39:58,700 --> 00:40:02,990
a lot of improvements in ember and we

00:40:00,859 --> 00:40:05,630
think you really like it based on the

00:40:02,990 --> 00:40:07,430
feedback we received so far I think it's

00:40:05,630 --> 00:40:09,410
probably safe to say we deliver on that

00:40:07,430 --> 00:40:11,390
believe it or not we actually got an

00:40:09,410 --> 00:40:13,990
entire pitch of positive reviews and I

00:40:11,390 --> 00:40:16,700
can use that you didn't see that coming

00:40:13,990 --> 00:40:18,619
for a lot of us existing ember users

00:40:16,700 --> 00:40:22,339
though things might feel a little bit

00:40:18,619 --> 00:40:24,740
different sure we hear a lot of things

00:40:22,339 --> 00:40:27,349
about obtain on internet there are a lot

00:40:24,740 --> 00:40:28,849
of new things but hey we have an app to

00:40:27,349 --> 00:40:30,079
maintain at work and it's not like we're

00:40:28,849 --> 00:40:31,730
going to rewrite everything overnight

00:40:30,079 --> 00:40:33,819
that's the whole point of using ever

00:40:31,730 --> 00:40:37,069
after all it's about the stability right

00:40:33,819 --> 00:40:40,069
well we totally get that and that's why

00:40:37,069 --> 00:40:42,380
we focus a lot on incrementalism and

00:40:40,069 --> 00:40:44,480
backwards compatibility we ship and

00:40:42,380 --> 00:40:46,160
stabilize these features incrementally

00:40:44,480 --> 00:40:48,019
whenever they're ready there's no

00:40:46,160 --> 00:40:49,549
breaking changes we also make sure

00:40:48,019 --> 00:40:52,220
there's a good interrupt story between

00:40:49,549 --> 00:40:54,650
the new and old paradigms we think this

00:40:52,220 --> 00:40:57,259
is a pretty good time to upgrade overall

00:40:54,650 --> 00:40:58,759
but and if you want to do that we have

00:40:57,259 --> 00:41:00,650
written code months and other migration

00:40:58,759 --> 00:41:02,420
tools to help with that but ultimately

00:41:00,650 --> 00:41:03,799
the choice is yours and your existing

00:41:02,420 --> 00:41:07,490
code is not going to suddenly stop

00:41:03,799 --> 00:41:09,589
working anytime soon that's all great

00:41:07,490 --> 00:41:12,380
but because things are so incremental

00:41:09,589 --> 00:41:14,210
and so backwards compatible for a lot of

00:41:12,380 --> 00:41:17,720
us and longtime member users we're

00:41:14,210 --> 00:41:20,150
mostly focus on the mechanics like what

00:41:17,720 --> 00:41:22,060
switchers do I have to flip to upgrade

00:41:20,150 --> 00:41:25,420
my app what is the transition

00:41:22,060 --> 00:41:27,700
from A to B things like that these

00:41:25,420 --> 00:41:29,230
things of course very important but they

00:41:27,700 --> 00:41:31,600
can also cause you to miss the forest

00:41:29,230 --> 00:41:33,790
for the trees when you're so focused on

00:41:31,600 --> 00:41:36,190
the mechanics you might miss the bigger

00:41:33,790 --> 00:41:40,150
picture and don't fully realize how

00:41:36,190 --> 00:41:42,580
different things really are so for the

00:41:40,150 --> 00:41:45,070
purpose of this segment I want to invite

00:41:42,580 --> 00:41:47,200
you to go ahead and forget everything

00:41:45,070 --> 00:41:49,090
you know about amber for now and let's

00:41:47,200 --> 00:41:52,030
try to give amber fresh look from the

00:41:49,090 --> 00:41:53,560
perspective of a new user I'm going to

00:41:52,030 --> 00:41:55,480
highlight three major areas of obtaining

00:41:53,560 --> 00:41:58,270
that I think are pretty representative

00:41:55,480 --> 00:42:00,100
and through these examples I hope to

00:41:58,270 --> 00:42:02,410
show you the many ways that we are now

00:42:00,100 --> 00:42:04,960
thinking about these features

00:42:02,410 --> 00:42:13,810
differently in the post octane era of

00:42:04,960 --> 00:42:15,340
amber so here we go as if you'da

00:42:13,810 --> 00:42:17,170
mentioned from the beginning amber

00:42:15,340 --> 00:42:19,540
position itself as a framework for

00:42:17,170 --> 00:42:21,700
building ambitious web applications at

00:42:19,540 --> 00:42:24,940
the core of the web platform there's

00:42:21,700 --> 00:42:28,210
HTML and there CSS so at the core of the

00:42:24,940 --> 00:42:30,160
Emer framework is just HTML and CSS we

00:42:28,210 --> 00:42:32,020
want to embrace a web platform and power

00:42:30,160 --> 00:42:35,170
web developers to build on top of these

00:42:32,020 --> 00:42:36,850
familiar foundation technologies and be

00:42:35,170 --> 00:42:38,920
able to do more with them rather than

00:42:36,850 --> 00:42:40,180
getting in your way and requiring you to

00:42:38,920 --> 00:42:43,390
learn something completely new and

00:42:40,180 --> 00:42:45,520
different if you already know HTML and

00:42:43,390 --> 00:42:47,320
CSS you should really be able to dive

00:42:45,520 --> 00:42:50,710
right into into the world of ember and

00:42:47,320 --> 00:42:53,940
feel right at home here this has always

00:42:50,710 --> 00:42:56,500
been a goal of ember and in fact this is

00:42:53,940 --> 00:42:58,690
the reason ember was born in the first

00:42:56,500 --> 00:43:01,120
place as a fork of sprout core that

00:42:58,690 --> 00:43:04,120
focuses more on an HTML first approach

00:43:01,120 --> 00:43:06,600
however historically there have always

00:43:04,120 --> 00:43:09,940
been some extent Oh shall we say

00:43:06,600 --> 00:43:11,140
annoyances both big and small that kind

00:43:09,940 --> 00:43:14,560
of gets in the way an undermining

00:43:11,140 --> 00:43:16,330
position here a big part of octane is to

00:43:14,560 --> 00:43:19,450
clean up these complexities let me show

00:43:16,330 --> 00:43:21,640
you some examples when creating a new

00:43:19,450 --> 00:43:24,460
octane app you can go straight into your

00:43:21,640 --> 00:43:27,070
index template plop down some HTML some

00:43:24,460 --> 00:43:29,470
CSS and bam everything just works the

00:43:27,070 --> 00:43:31,650
way you expect this means you can drop

00:43:29,470 --> 00:43:33,600
in any markup you find on the Internet

00:43:31,650 --> 00:43:35,640
maybe from Stack Overflow or perhaps

00:43:33,600 --> 00:43:37,560
some mock-ups that you received from a

00:43:35,640 --> 00:43:39,540
designer without making any special

00:43:37,560 --> 00:43:42,330
modification or tweaks to use them in

00:43:39,540 --> 00:43:44,610
ember if it works with things like SVG

00:43:42,330 --> 00:43:47,610
and web components you can keep your

00:43:44,610 --> 00:43:49,680
typical web development workflow such as

00:43:47,610 --> 00:43:52,200
using a browsers built-in Dom inspector

00:43:49,680 --> 00:43:53,790
and there will no more strange Amber

00:43:52,200 --> 00:43:56,700
wrapper elements that messes with your

00:43:53,790 --> 00:43:59,250
CSS anymore this may seem like a small

00:43:56,700 --> 00:44:01,470
change on its own but it's a good

00:43:59,250 --> 00:44:04,200
example of the kind of HTML CSS first

00:44:01,470 --> 00:44:06,300
experience that we aspire to provide as

00:44:04,200 --> 00:44:08,460
you'll see octane is all about making

00:44:06,300 --> 00:44:10,530
these steps that seem small by

00:44:08,460 --> 00:44:13,140
themselves but when taken together they

00:44:10,530 --> 00:44:14,810
add up to more than just the sum of the

00:44:13,140 --> 00:44:17,400
parts

00:44:14,810 --> 00:44:20,100
speaking of CSS you can look forward to

00:44:17,400 --> 00:44:24,390
tomorrow session and ember devs guide to

00:44:20,100 --> 00:44:26,610
CSS grid by embracing HTML CSS we can

00:44:24,390 --> 00:44:28,350
immediately take finish of and benefit

00:44:26,610 --> 00:44:30,240
from the web platforms latest and

00:44:28,350 --> 00:44:32,580
greatest features such as CSS grid

00:44:30,240 --> 00:44:35,100
without having to reinvent a real and

00:44:32,580 --> 00:44:37,560
like invent a new library or patterns to

00:44:35,100 --> 00:44:40,770
import these ideas in there ember world

00:44:37,560 --> 00:44:42,390
check that out tomorrow at 1:30 p.m. the

00:44:40,770 --> 00:44:45,440
time is subject to change so check the

00:44:42,390 --> 00:44:48,780
schedule for latest time on these talks

00:44:45,440 --> 00:44:50,820
okay so we have seen that HTML works

00:44:48,780 --> 00:44:53,400
exactly the same way that you would

00:44:50,820 --> 00:44:55,860
expect them to in ember that's cool but

00:44:53,400 --> 00:44:57,360
of course HTML and CSS alone is not

00:44:55,860 --> 00:45:00,090
sufficient to build an ambitious

00:44:57,360 --> 00:45:03,390
application otherwise ember probably

00:45:00,090 --> 00:45:06,330
doesn't need to access at all instead we

00:45:03,390 --> 00:45:08,220
don't want to fight or replace HTML we

00:45:06,330 --> 00:45:11,160
want it we want ember to feel like a

00:45:08,220 --> 00:45:13,020
natural extension of HTML instead with

00:45:11,160 --> 00:45:16,110
octane I think we've got something that

00:45:13,020 --> 00:45:18,270
feels pretty great here one of the

00:45:16,110 --> 00:45:19,680
limitations of HTML is that it doesn't

00:45:18,270 --> 00:45:22,320
give you a whole lot of tools to

00:45:19,680 --> 00:45:24,210
organize your code back to our example

00:45:22,320 --> 00:45:26,550
here you can see that there are a lot of

00:45:24,210 --> 00:45:28,920
markup on this page but if you look at

00:45:26,550 --> 00:45:30,780
the rendered output it's pretty clear

00:45:28,920 --> 00:45:33,450
that there are some high-level groupings

00:45:30,780 --> 00:45:35,370
that would be helpful to reflect in the

00:45:33,450 --> 00:45:36,990
source code it will be great if you can

00:45:35,370 --> 00:45:39,420
look at the source code and at a glance

00:45:36,990 --> 00:45:40,960
kind of knew what the render page looks

00:45:39,420 --> 00:45:43,599
like release water them

00:45:40,960 --> 00:45:47,080
important parts of the page art in

00:45:43,599 --> 00:45:49,089
obtain this is pretty easy all you have

00:45:47,080 --> 00:45:51,490
to do is create a new template file in

00:45:49,089 --> 00:45:54,010
the components directory move over your

00:45:51,490 --> 00:45:55,390
section of markup and that's it the

00:45:54,010 --> 00:45:58,030
output looks exactly the same as before

00:45:55,390 --> 00:46:00,010
but you have just created a component

00:45:58,030 --> 00:46:02,770
and capsulate this whole navbar a

00:46:00,010 --> 00:46:04,570
section of your markup by separating out

00:46:02,770 --> 00:46:06,670
these logical units and giving them

00:46:04,570 --> 00:46:10,540
meaningful names your source code is now

00:46:06,670 --> 00:46:13,000
much more readable that's not the end of

00:46:10,540 --> 00:46:14,859
story though as you can see at the

00:46:13,000 --> 00:46:17,020
bottom of the at the bottom half of the

00:46:14,859 --> 00:46:19,180
page we have a couple of these cards

00:46:17,020 --> 00:46:21,940
each representing a different rental

00:46:19,180 --> 00:46:24,099
property on the site so while they all

00:46:21,940 --> 00:46:26,380
have the same visual and markup

00:46:24,099 --> 00:46:29,230
structure the information they present

00:46:26,380 --> 00:46:30,940
is different we could just copy and

00:46:29,230 --> 00:46:32,980
paste this markup every time we needed

00:46:30,940 --> 00:46:35,410
at one of these but as you have probably

00:46:32,980 --> 00:46:37,089
experienced this is going to become a

00:46:35,410 --> 00:46:39,839
maintenance nightmare very soon

00:46:37,089 --> 00:46:42,190
especially in an ambitious codebase

00:46:39,839 --> 00:46:46,210
don't worry though we got you covered

00:46:42,190 --> 00:46:48,130
here too just like before we can extract

00:46:46,210 --> 00:46:50,080
the mark-up into a new component by

00:46:48,130 --> 00:46:52,450
moving them into a new file however

00:46:50,080 --> 00:46:54,849
instead of hard-coding the information

00:46:52,450 --> 00:46:57,220
we can replace them with placeholders

00:46:54,849 --> 00:46:59,950
using the curly braces and add syntax

00:46:57,220 --> 00:47:02,770
these placeholders are called component

00:46:59,950 --> 00:47:04,420
arguments when invoking a component we

00:47:02,770 --> 00:47:06,160
can use the same add syntax to pass

00:47:04,420 --> 00:47:08,230
these arguments into the component

00:47:06,160 --> 00:47:10,869
filling in the placeholders we defined

00:47:08,230 --> 00:47:12,940
earlier now you have created a

00:47:10,869 --> 00:47:14,380
parameterised component that can be

00:47:12,940 --> 00:47:16,420
reused in different parts of your app

00:47:14,380 --> 00:47:19,990
just by passing different arguments in

00:47:16,420 --> 00:47:22,119
different situations you can think of

00:47:19,990 --> 00:47:25,000
this as giving you the ability to create

00:47:22,119 --> 00:47:26,619
abstractions in HTML in a traditional

00:47:25,000 --> 00:47:28,810
programming language you are probably

00:47:26,619 --> 00:47:30,760
you're probably going to take for

00:47:28,810 --> 00:47:33,220
granted the ability to split things up

00:47:30,760 --> 00:47:35,380
into functions they allow you to break

00:47:33,220 --> 00:47:38,170
up your code into small self-contained

00:47:35,380 --> 00:47:39,730
and reuse reusable pieces that can be

00:47:38,170 --> 00:47:42,130
glued together to build something more

00:47:39,730 --> 00:47:44,200
complicated components an octane gives

00:47:42,130 --> 00:47:47,500
you the same ability to do the same

00:47:44,200 --> 00:47:49,930
thing with your markup it doesn't stop

00:47:47,500 --> 00:47:52,119
here though octane gives you a complete

00:47:49,930 --> 00:47:53,310
suite of tools to in order to become a

00:47:52,119 --> 00:47:56,220
productive and

00:47:53,310 --> 00:47:58,470
is markup developer for example we add a

00:47:56,220 --> 00:48:00,720
support for component namespacing which

00:47:58,470 --> 00:48:02,820
allow you to group related components

00:48:00,720 --> 00:48:06,060
into folders and invoke them using the

00:48:02,820 --> 00:48:07,710
double colon syntax the splatter beauty

00:48:06,060 --> 00:48:09,720
sure on the other hand allows you to

00:48:07,710 --> 00:48:11,910
pass arbitrary HTML attributes to

00:48:09,720 --> 00:48:15,060
components which comes in handy when you

00:48:11,910 --> 00:48:17,460
need to tailor the CSS classes or the

00:48:15,060 --> 00:48:21,360
Aria attributes for a particular usage

00:48:17,460 --> 00:48:23,460
of that component likewise you can also

00:48:21,360 --> 00:48:26,130
perhaps content around with blocks and

00:48:23,460 --> 00:48:27,780
yield keyword and soon you even be able

00:48:26,130 --> 00:48:30,900
to pass multiple named blocks when

00:48:27,780 --> 00:48:32,460
invoking a component of course we have

00:48:30,900 --> 00:48:35,610
always supported control flows like

00:48:32,460 --> 00:48:39,000
conditional if unless and loops like

00:48:35,610 --> 00:48:40,710
each and soon there will be a built-in

00:48:39,000 --> 00:48:42,390
logical operator that you can use

00:48:40,710 --> 00:48:43,760
without needing to install separate

00:48:42,390 --> 00:48:46,860
add-on

00:48:43,760 --> 00:48:48,750
speaking of which of course we shouldn't

00:48:46,860 --> 00:48:51,180
forget that ember gives you access to a

00:48:48,750 --> 00:48:53,250
vast component library via add-ons

00:48:51,180 --> 00:48:55,080
maintained by the community as well as

00:48:53,250 --> 00:48:58,130
the ability to package up your own

00:48:55,080 --> 00:49:02,370
components to share with the world

00:48:58,130 --> 00:49:05,040
ohnow octane in octane we have set out

00:49:02,370 --> 00:49:07,650
to create to complete our vision of

00:49:05,040 --> 00:49:10,230
being HTML first framework creating a

00:49:07,650 --> 00:49:12,030
flavor of enhanced HTML that works for

00:49:10,230 --> 00:49:13,710
building ambitious web applications and

00:49:12,030 --> 00:49:17,430
I think we did a pretty good job on that

00:49:13,710 --> 00:49:20,160
front you may also have noticed that up

00:49:17,430 --> 00:49:23,100
until this point we have not written or

00:49:20,160 --> 00:49:26,090
discussed any JavaScript just yet this

00:49:23,100 --> 00:49:29,160
is not a coincidence historically

00:49:26,090 --> 00:49:31,680
javascript is a pretty integral part to

00:49:29,160 --> 00:49:34,140
the ember component model in fact it is

00:49:31,680 --> 00:49:35,970
probably fair to say that the 14 ember

00:49:34,140 --> 00:49:38,940
components were first and foremost

00:49:35,970 --> 00:49:40,920
JavaScript driven there was always a

00:49:38,940 --> 00:49:42,960
JavaScript class associated with each

00:49:40,920 --> 00:49:47,070
component and there's a wrapper element

00:49:42,960 --> 00:49:49,290
on body driver the JavaScript class the

00:49:47,070 --> 00:49:51,840
wrapper element was configured using a

00:49:49,290 --> 00:49:54,300
JavaScript DSL and the JavaScript class

00:49:51,840 --> 00:49:56,370
itself was responsible for intercepting

00:49:54,300 --> 00:50:00,000
and handling user interactions with the

00:49:56,370 --> 00:50:02,580
component to a lot of memory developers

00:50:00,000 --> 00:50:04,290
this JavaScript API is probably the

00:50:02,580 --> 00:50:06,130
first thing that comes into mind when

00:50:04,290 --> 00:50:08,619
thinking about components and ember

00:50:06,130 --> 00:50:10,569
in fact some components don't even need

00:50:08,619 --> 00:50:12,910
a template in that old world because our

00:50:10,569 --> 00:50:16,779
customizations were done entirely using

00:50:12,910 --> 00:50:19,180
javascript in octane we flipped at the

00:50:16,779 --> 00:50:20,740
other way round hopefully I have

00:50:19,180 --> 00:50:22,990
convinced you that complaint isn't

00:50:20,740 --> 00:50:25,809
obtained our first and foremost driven

00:50:22,990 --> 00:50:27,789
by HTML and template as we just saw this

00:50:25,809 --> 00:50:30,279
is a pretty viable programming model and

00:50:27,789 --> 00:50:32,440
in a lot of use cases a template is all

00:50:30,279 --> 00:50:34,690
you need inducting ganas the wrapper

00:50:32,440 --> 00:50:36,549
element and what you see in their

00:50:34,690 --> 00:50:38,529
components template is what you get in

00:50:36,549 --> 00:50:40,720
the dump if you want to add a class or

00:50:38,529 --> 00:50:42,670
if you want an HTML attribute all you

00:50:40,720 --> 00:50:46,029
need to do is add in a template no more

00:50:42,670 --> 00:50:47,950
JavaScript DSL we have refactored

00:50:46,029 --> 00:50:49,480
internals of the rendering engines to

00:50:47,950 --> 00:50:52,089
remove the need for JavaScript class

00:50:49,480 --> 00:50:53,920
when rendering a component in octane

00:50:52,089 --> 00:50:55,900
when rendering and templating only

00:50:53,920 --> 00:50:58,390
component ever no longer generates an

00:50:55,900 --> 00:51:00,880
allocated component instance and for the

00:50:58,390 --> 00:51:03,250
most part this is a pretty subtle change

00:51:00,880 --> 00:51:04,599
that happens under the hood but you may

00:51:03,250 --> 00:51:07,089
notice that from the improved

00:51:04,599 --> 00:51:08,980
performance and not having access to the

00:51:07,089 --> 00:51:12,339
special this object in a template only

00:51:08,980 --> 00:51:14,859
component more importantly though this

00:51:12,339 --> 00:51:16,720
is a significant Mendham water shift in

00:51:14,859 --> 00:51:17,589
how we think of a components in ember

00:51:16,720 --> 00:51:19,269
now

00:51:17,589 --> 00:51:21,849
components are all about the template

00:51:19,269 --> 00:51:24,250
and any JavaScript is secondary to that

00:51:21,849 --> 00:51:26,559
to reflect this shift we have moved the

00:51:24,250 --> 00:51:28,599
component templates in your app from the

00:51:26,559 --> 00:51:31,210
templates folder into the main component

00:51:28,599 --> 00:51:35,500
folder and adjust it the generators

00:51:31,210 --> 00:51:37,299
default output accordingly as I

00:51:35,500 --> 00:51:38,950
mentioned at the beginning we're mostly

00:51:37,299 --> 00:51:41,920
focused on giving ember a fresh look

00:51:38,950 --> 00:51:44,410
here if you want to see more of the how

00:51:41,920 --> 00:51:46,750
the path compares to the present you can

00:51:44,410 --> 00:51:51,519
look forward to shishitos talk later

00:51:46,750 --> 00:51:54,339
today ok so even though templates get

00:51:51,519 --> 00:51:56,380
you pretty far in obtain we still have

00:51:54,339 --> 00:51:58,960
JavaScript and we're still a JavaScript

00:51:56,380 --> 00:52:01,150
framework after all and you're still

00:51:58,960 --> 00:52:02,650
going to need plenty of it it's just

00:52:01,150 --> 00:52:04,089
that JavaScript now plays a pretty

00:52:02,650 --> 00:52:07,269
different role and serve a different

00:52:04,089 --> 00:52:09,400
purpose in octane and octane the primary

00:52:07,269 --> 00:52:14,130
purpose of JavaScript has switched from

00:52:09,400 --> 00:52:16,839
managing the Dom to managing data first

00:52:14,130 --> 00:52:20,110
for general-purpose computation that you

00:52:16,839 --> 00:52:22,090
plan to reuse across the app you can use

00:52:20,110 --> 00:52:24,340
helpers for that nothing really changed

00:52:22,090 --> 00:52:26,320
here in octane except due to increased

00:52:24,340 --> 00:52:28,150
utility of templum only components I

00:52:26,320 --> 00:52:30,580
think you may find more places in your

00:52:28,150 --> 00:52:32,710
app where creating a helper feels like

00:52:30,580 --> 00:52:35,050
the right choice it's also worth

00:52:32,710 --> 00:52:37,360
mentioning that helpers and including

00:52:35,050 --> 00:52:39,610
class-based helpers now participate in

00:52:37,360 --> 00:52:44,170
the auto tracking system which I'll go

00:52:39,610 --> 00:52:45,760
into a little bit more later but what

00:52:44,170 --> 00:52:48,130
about integrating JavaScript into

00:52:45,760 --> 00:52:52,510
components well I'm glad you asked let's

00:52:48,130 --> 00:52:55,060
look at an example here we have a share

00:52:52,510 --> 00:52:57,790
button component that allows the user to

00:52:55,060 --> 00:53:01,060
share the current page on Twitter this

00:52:57,790 --> 00:53:03,760
component this is a component with its

00:53:01,060 --> 00:53:06,370
markup and for the most part is just a

00:53:03,760 --> 00:53:08,410
hyperlink Twitter has this intent API

00:53:06,370 --> 00:53:10,180
that lets you prompt the user to compose

00:53:08,410 --> 00:53:12,580
a tweet just by linking them to a

00:53:10,180 --> 00:53:14,920
special URL and you can customize the

00:53:12,580 --> 00:53:17,550
suggested tags and the hashtags using

00:53:14,920 --> 00:53:20,140
query parameters and stuff like that

00:53:17,550 --> 00:53:22,180
while the functionality of the component

00:53:20,140 --> 00:53:24,400
is very simple it's just a link after

00:53:22,180 --> 00:53:26,290
all you will probably need to write some

00:53:24,400 --> 00:53:28,330
JavaScript code to build up this special

00:53:26,290 --> 00:53:31,210
URL especially when you want to make

00:53:28,330 --> 00:53:33,820
these things customizable via past in

00:53:31,210 --> 00:53:36,160
component arguments and you'll need to

00:53:33,820 --> 00:53:39,220
also URL and code the query params

00:53:36,160 --> 00:53:41,770
so you can probably accomplish this with

00:53:39,220 --> 00:53:44,860
a series of helpers but it will probably

00:53:41,770 --> 00:53:46,480
feel pretty clumsy and it's probably not

00:53:44,860 --> 00:53:49,090
super appropriate to add a bunch of

00:53:46,480 --> 00:53:51,640
specialized helpers globally just for a

00:53:49,090 --> 00:53:53,260
single component so this is the perfect

00:53:51,640 --> 00:53:55,720
kind of use case for adding JavaScript

00:53:53,260 --> 00:53:59,350
class to a component and with octane

00:53:55,720 --> 00:54:01,180
that's pretty easy too you can

00:53:59,350 --> 00:54:03,040
accomplish this by creating a JavaScript

00:54:01,180 --> 00:54:05,380
file in the same place next to your

00:54:03,040 --> 00:54:09,310
template and this is what the code look

00:54:05,380 --> 00:54:11,140
the code looks like just as we spend a

00:54:09,310 --> 00:54:12,580
lot of attention making octane templates

00:54:11,140 --> 00:54:14,800
feel like a natural extension of HTML

00:54:12,580 --> 00:54:17,350
the same amount of effort went into

00:54:14,800 --> 00:54:19,990
making sure our JavaScript API leverages

00:54:17,350 --> 00:54:22,960
native JavaScript syntax features and

00:54:19,990 --> 00:54:24,970
idioms here we have a share button

00:54:22,960 --> 00:54:27,100
component class sub classing from

00:54:24,970 --> 00:54:29,650
glimmer component in our component class

00:54:27,100 --> 00:54:32,440
we have access to passing arguments via

00:54:29,650 --> 00:54:32,869
distant arcs which we took advantage of

00:54:32,440 --> 00:54:37,339
in

00:54:32,869 --> 00:54:39,380
share URL getter since we edit a

00:54:37,339 --> 00:54:42,380
JavaScript file to a component we now

00:54:39,380 --> 00:54:44,809
have access to the component instance

00:54:42,380 --> 00:54:47,150
via is special this object in the

00:54:44,809 --> 00:54:49,579
template and since we made share URL a

00:54:47,150 --> 00:54:51,579
getter it behaves just like any other

00:54:49,579 --> 00:54:54,230
property on the component instance so

00:54:51,579 --> 00:54:57,079
accessing curly curly disk share URL

00:54:54,230 --> 00:54:58,910
just works in the template all these are

00:54:57,079 --> 00:55:00,829
done using native JavaScript features

00:54:58,910 --> 00:55:02,869
and we didn't have to make any special

00:55:00,829 --> 00:55:04,730
annotations to make it work in Hamburg I

00:55:02,869 --> 00:55:05,900
hope you agree with me that this feels

00:55:04,730 --> 00:55:07,880
totally in line with more than

00:55:05,900 --> 00:55:08,749
JavaScript and nothing about it jumps I

00:55:07,880 --> 00:55:12,440
was weird

00:55:08,749 --> 00:55:14,390
mber ISM when it comes to integrate

00:55:12,440 --> 00:55:17,089
JavaScript integrating javascript into

00:55:14,390 --> 00:55:20,029
the Dom the challenge has always been

00:55:17,089 --> 00:55:23,630
about keeping the Dom I'll put in sync

00:55:20,029 --> 00:55:25,670
with the JavaScript code or the

00:55:23,630 --> 00:55:27,259
JavaScript state while it may not be

00:55:25,670 --> 00:55:29,660
super surprising that you have access to

00:55:27,259 --> 00:55:31,670
this start URL together this start share

00:55:29,660 --> 00:55:33,410
URL together in the template

00:55:31,670 --> 00:55:36,019
the surprising thing here is that

00:55:33,410 --> 00:55:37,999
whenever the pass in arguments changes

00:55:36,019 --> 00:55:40,220
ember would know to rerun your getter

00:55:37,999 --> 00:55:44,989
and automatically update the Dom output

00:55:40,220 --> 00:55:47,329
so in this case if this dark stop text

00:55:44,989 --> 00:55:49,489
changes Emperor is going to recompute

00:55:47,329 --> 00:55:52,519
your share URL getter and automatically

00:55:49,489 --> 00:55:55,069
update the href attribute in the Dom we

00:55:52,519 --> 00:55:57,799
didn't have to write anything like ember

00:55:55,069 --> 00:56:01,789
not yet or enumerate our dependencies

00:55:57,799 --> 00:56:04,220
anywhere how does that work of this is

00:56:01,789 --> 00:56:06,559
thank to the thanks to the new state of

00:56:04,220 --> 00:56:08,329
the art auto tracking system whenever

00:56:06,559 --> 00:56:10,279
you reference component arguments in

00:56:08,329 --> 00:56:12,019
your template amber is now able to keep

00:56:10,279 --> 00:56:14,569
track of the dependencies automatically

00:56:12,019 --> 00:56:16,039
so we know when to update output this

00:56:14,569 --> 00:56:17,599
works consistently whether you're

00:56:16,039 --> 00:56:19,579
referencing them directly in the

00:56:17,599 --> 00:56:22,039
template or when you're referencing them

00:56:19,579 --> 00:56:24,950
and JavaScript or when you reference

00:56:22,039 --> 00:56:26,930
them through a getter or a getter

00:56:24,950 --> 00:56:29,630
calling and I get her get her calling

00:56:26,930 --> 00:56:32,450
out of functions etc as far as number

00:56:29,630 --> 00:56:34,009
can tell all this just works the same

00:56:32,450 --> 00:56:35,900
way an ember is able to follow through

00:56:34,009 --> 00:56:39,259
the change of the chain of dependencies

00:56:35,900 --> 00:56:41,869
without any issues this capability is

00:56:39,259 --> 00:56:43,640
not unique to component arguments your

00:56:41,869 --> 00:56:45,739
own code can participate in the auto

00:56:43,640 --> 00:56:46,580
tracking system too all you have to do

00:56:45,739 --> 00:56:49,190
is add an

00:56:46,580 --> 00:56:50,900
at tract annotation to any property you

00:56:49,190 --> 00:56:53,450
want to use in a template and you're

00:56:50,900 --> 00:56:56,660
good to go here for example we have a

00:56:53,450 --> 00:56:59,330
rental image component with an AZ slark

00:56:56,660 --> 00:57:01,130
is large property on it indicating

00:56:59,330 --> 00:57:04,190
whether we're displaying the image in

00:57:01,130 --> 00:57:05,900
the extended format or not when the

00:57:04,190 --> 00:57:08,120
value of this property changes for any

00:57:05,900 --> 00:57:11,690
reason ember would take note of that and

00:57:08,120 --> 00:57:13,310
rerender template accordingly of course

00:57:11,690 --> 00:57:15,740
just like with arguments this work just

00:57:13,310 --> 00:57:17,390
as well when you reference them directly

00:57:15,740 --> 00:57:19,520
in a template or when you access them

00:57:17,390 --> 00:57:22,430
through a network of getters external

00:57:19,520 --> 00:57:25,730
functions etc it works all the same way

00:57:22,430 --> 00:57:27,860
as far as ember is concerned so far

00:57:25,730 --> 00:57:29,900
we've been focusing on components but it

00:57:27,860 --> 00:57:32,300
doesn't stop here as I mentioned earlier

00:57:29,900 --> 00:57:34,220
helpers can also fully participate in

00:57:32,300 --> 00:57:36,620
the auto tracking system as well

00:57:34,220 --> 00:57:39,710
in fact the auto tracking system and

00:57:36,620 --> 00:57:41,870
track properties work consistently on

00:57:39,710 --> 00:57:43,730
any arbitrary JavaScript classes and you

00:57:41,870 --> 00:57:45,740
don't even have to subclass from any

00:57:43,730 --> 00:57:47,570
particular framework superclass like

00:57:45,740 --> 00:57:49,940
ember objects so you can create your own

00:57:47,570 --> 00:57:51,800
motor class and it will put a track

00:57:49,940 --> 00:57:55,100
property on it and it watch it work just

00:57:51,800 --> 00:57:56,660
fine this allows you to implement your

00:57:55,100 --> 00:57:59,090
business logic in the own little

00:57:56,660 --> 00:58:01,670
self-contained model and utility classes

00:57:59,090 --> 00:58:03,320
and then you can just lightly glue them

00:58:01,670 --> 00:58:05,090
together in your component more

00:58:03,320 --> 00:58:08,450
importantly the auto tracking system

00:58:05,090 --> 00:58:11,150
allows the sticks to refactor existing

00:58:08,450 --> 00:58:13,610
push-based data flow based on observers

00:58:11,150 --> 00:58:17,090
and argument stiffening into on-demand

00:58:13,610 --> 00:58:18,980
pull based computations refactoring

00:58:17,090 --> 00:58:20,780
existing code to fully take advantage of

00:58:18,980 --> 00:58:23,510
this new program model it can probably

00:58:20,780 --> 00:58:26,000
be in a talk on its own which I don't

00:58:23,510 --> 00:58:27,800
have time for but you can look forward

00:58:26,000 --> 00:58:30,080
to a future blog post on this topic and

00:58:27,800 --> 00:58:31,790
I suggest you to experiment that on your

00:58:30,080 --> 00:58:35,660
own as well and share what you've

00:58:31,790 --> 00:58:37,040
learned with the community if you want

00:58:35,660 --> 00:58:39,380
to understand how the auto tracking

00:58:37,040 --> 00:58:41,180
system works under the hood you can look

00:58:39,380 --> 00:58:43,070
forward to Chris Gary's talk tomorrow in

00:58:41,180 --> 00:58:44,990
which he will show you the nitty gritty

00:58:43,070 --> 00:58:49,910
of the system and how it compares the

00:58:44,990 --> 00:58:52,760
other framework so check that out ok so

00:58:49,910 --> 00:58:54,650
we have talked about templates we talked

00:58:52,760 --> 00:58:57,230
about how to integrate JavaScript state

00:58:54,650 --> 00:58:59,940
into templates and so the last piece of

00:58:57,230 --> 00:59:03,000
puzzle here is how to work with the dog

00:58:59,940 --> 00:59:04,589
of course for the most part managing the

00:59:03,000 --> 00:59:07,079
DOM is not something that you have to do

00:59:04,589 --> 00:59:08,819
explicitly as you saw earlier when using

00:59:07,079 --> 00:59:11,130
templates amber will take care of

00:59:08,819 --> 00:59:13,799
updating the Dom whenever your daily

00:59:11,130 --> 00:59:16,230
changes in the JavaScript world however

00:59:13,799 --> 00:59:17,970
when it comes to user interaction you'll

00:59:16,230 --> 00:59:23,430
often want to work with the Dom directly

00:59:17,970 --> 00:59:25,710
so here is a couple of examples here

00:59:23,430 --> 00:59:28,020
we're back to the same expandable image

00:59:25,710 --> 00:59:30,210
example that we saw earlier we have

00:59:28,020 --> 00:59:31,859
wired up that is large track property

00:59:30,210 --> 00:59:33,599
but we don't have any way for the

00:59:31,859 --> 00:59:36,329
end-user to toggle its value at the

00:59:33,599 --> 00:59:38,010
moment what we want to do is to call the

00:59:36,329 --> 00:59:40,260
toggle size method on a component

00:59:38,010 --> 00:59:43,770
instance whenever the user clicked on

00:59:40,260 --> 00:59:46,079
the button in octane we've made this

00:59:43,770 --> 00:59:48,839
pretty straightforward first we'll

00:59:46,079 --> 00:59:51,240
import the action decorator and annotate

00:59:48,839 --> 00:59:53,280
the toggle size method as an action this

00:59:51,240 --> 00:59:56,400
turns it into a callback that we can use

00:59:53,280 --> 00:59:58,770
in template next we will add the built

00:59:56,400 --> 01:00:01,980
in on modifier to the elements that

00:59:58,770 --> 01:00:04,020
we're interested in in this case we we

01:00:01,980 --> 01:00:06,089
specified that we want amber to call

01:00:04,020 --> 01:00:07,920
toggle size method on a compliant

01:00:06,089 --> 01:00:10,440
instance whenever either of the buttons

01:00:07,920 --> 01:00:16,890
are clicked with that the user can now

01:00:10,440 --> 01:00:19,470
click on the image to target size the

01:00:16,890 --> 01:00:22,049
thing that we added to the template here

01:00:19,470 --> 01:00:25,770
is called an element modifier or

01:00:22,049 --> 01:00:27,690
modifier in short it looks like the

01:00:25,770 --> 01:00:30,210
placeholder syntax that were used to but

01:00:27,690 --> 01:00:32,130
it's attached to a particular HTML

01:00:30,210 --> 01:00:34,740
element in the same position where

01:00:32,130 --> 01:00:36,630
attributes usually go the building on

01:00:34,740 --> 01:00:39,029
modifier allows you to attach event

01:00:36,630 --> 01:00:41,369
handlers to HTML elements but the

01:00:39,029 --> 01:00:45,690
concept of element modifiers is more

01:00:41,369 --> 01:00:47,849
general than that in octane this is how

01:00:45,690 --> 01:00:49,619
you interact with the Dom and just like

01:00:47,849 --> 01:00:51,299
helpers and components you can write

01:00:49,619 --> 01:00:54,270
your own element modifier in your app

01:00:51,299 --> 01:00:58,619
let's look at in it let's look at an

01:00:54,270 --> 01:01:01,740
example for that here we are back to the

01:00:58,619 --> 01:01:04,319
index page without app and there's a

01:01:01,740 --> 01:01:05,520
search input box on the page perhaps you

01:01:04,319 --> 01:01:07,609
might want it to be automatically

01:01:05,520 --> 01:01:10,289
focused whenever it is page is rendered

01:01:07,609 --> 01:01:11,880
knowing what you know about HTML you

01:01:10,289 --> 01:01:12,859
might be tempted to put the auto focus

01:01:11,880 --> 01:01:15,039
attribute

01:01:12,859 --> 01:01:17,960
the input element like that

01:01:15,039 --> 01:01:19,819
unfortunately the autofocus attribute is

01:01:17,960 --> 01:01:22,489
really designed for a server rendered

01:01:19,819 --> 01:01:23,630
static pages so it only works on the

01:01:22,489 --> 01:01:25,130
initial page float

01:01:23,630 --> 01:01:27,549
since we're rendering content with

01:01:25,130 --> 01:01:30,619
JavaScript it doesn't do anything for us

01:01:27,549 --> 01:01:33,650
no problem though we can write a

01:01:30,619 --> 01:01:36,170
modifier for that we created a file

01:01:33,650 --> 01:01:38,930
called autofocus J's inside the

01:01:36,170 --> 01:01:40,670
modifiers directory inside the file we

01:01:38,930 --> 01:01:43,579
wrote a small class that inherits from

01:01:40,670 --> 01:01:46,430
the modifier class provided by the amber

01:01:43,579 --> 01:01:50,119
modifier package here we have access to

01:01:46,430 --> 01:01:52,400
the element in this case it will be our

01:01:50,119 --> 01:01:54,619
input element and whenever the auto

01:01:52,400 --> 01:01:58,339
focus modifier is attached in element

01:01:54,619 --> 01:02:00,920
Emperor will call the wall we'll call

01:01:58,339 --> 01:02:03,890
the focus method on the element to make

01:02:00,920 --> 01:02:06,529
it the active element on the page we

01:02:03,890 --> 01:02:09,289
think amber we think element modifiers

01:02:06,529 --> 01:02:12,319
in amber are a powerful and pretty

01:02:09,289 --> 01:02:13,940
intuitive way to work with the Dom just

01:02:12,319 --> 01:02:16,430
like components and helpers they can be

01:02:13,940 --> 01:02:18,140
packaged up into reusable add-ons and we

01:02:16,430 --> 01:02:20,420
look forward to the community finding

01:02:18,140 --> 01:02:24,319
and sharing new innovative use cases for

01:02:20,420 --> 01:02:26,930
them with the wider ecosystem and in

01:02:24,319 --> 01:02:31,339
fact some of this is already happening

01:02:26,930 --> 01:02:32,930
let's look at two more examples the

01:02:31,339 --> 01:02:34,970
first example would use this two

01:02:32,930 --> 01:02:38,029
official render modifiers add-on and

01:02:34,970 --> 01:02:41,029
just like Jan showed us and the trailer

01:02:38,029 --> 01:02:45,109
we want to integrate with the external

01:02:41,029 --> 01:02:47,839
d3 library in this case the bulk of the

01:02:45,109 --> 01:02:51,109
code here comes from a d3 example that

01:02:47,839 --> 01:02:54,619
we found online and we're able to mostly

01:02:51,109 --> 01:02:56,269
just paste in the code verbatim I don't

01:02:54,619 --> 01:02:59,029
expect you to read all the code here on

01:02:56,269 --> 01:03:00,829
the slide but the important thing here

01:02:59,029 --> 01:03:02,900
is that the random modifier Adam

01:03:00,829 --> 01:03:04,789
provides a convenient way for us to run

01:03:02,900 --> 01:03:07,039
a callback function on a component

01:03:04,789 --> 01:03:08,869
whenever a particular element is

01:03:07,039 --> 01:03:15,440
rendered which is exactly what we need

01:03:08,869 --> 01:03:19,160
in this case and here we have another

01:03:15,440 --> 01:03:22,009
example here we have a video player

01:03:19,160 --> 01:03:24,650
component which consists of an HTML

01:03:22,009 --> 01:03:26,099
video element and a play button what we

01:03:24,650 --> 01:03:28,440
want to do here is

01:03:26,099 --> 01:03:30,119
for the user to be able to click the

01:03:28,440 --> 01:03:32,970
play button and it just start playing

01:03:30,119 --> 01:03:34,680
the video in order to do that our play

01:03:32,970 --> 01:03:36,950
method needs to have access to a video

01:03:34,680 --> 01:03:40,589
element but how are we gonna do that

01:03:36,950 --> 01:03:42,960
well this is where the emperor ref

01:03:40,589 --> 01:03:45,829
modifier anton comes into play it's a

01:03:42,960 --> 01:03:49,640
perfect use case for it here we'll add

01:03:45,829 --> 01:03:52,739
the ref modifier on the video element

01:03:49,640 --> 01:03:55,049
this gives us access to the element in a

01:03:52,739 --> 01:03:57,569
component using name we chosen in this

01:03:55,049 --> 01:04:00,150
case it will be this top video element

01:03:57,569 --> 01:04:03,150
this allows us to finish implementing

01:04:00,150 --> 01:04:05,249
our play method and with that our user

01:04:03,150 --> 01:04:12,539
can now click the play button and start

01:04:05,249 --> 01:04:15,150
playing our cat video that concludes our

01:04:12,539 --> 01:04:16,829
brief journey into ember octane I hope

01:04:15,150 --> 01:04:18,930
you agree with me that it is an

01:04:16,829 --> 01:04:20,819
incredibly intuitive and productive

01:04:18,930 --> 01:04:23,009
program model and if you have been using

01:04:20,819 --> 01:04:25,170
ember for a long time this feels pretty

01:04:23,009 --> 01:04:27,359
different from the framework that you

01:04:25,170 --> 01:04:29,489
once learned in the best possible way I

01:04:27,359 --> 01:04:31,319
only had time for a few selected

01:04:29,489 --> 01:04:32,910
highlights but most of these examples

01:04:31,319 --> 01:04:34,140
are taken directly from the official

01:04:32,910 --> 01:04:36,029
guides and tutorial

01:04:34,140 --> 01:04:37,890
they have been completely rewritten for

01:04:36,029 --> 01:04:39,749
octane and I think they're pretty good I

01:04:37,890 --> 01:04:43,019
encourage you to give them a read and I

01:04:39,749 --> 01:04:44,609
think you'll be surprised before we wrap

01:04:43,019 --> 01:04:47,219
up I want to talk to you about what

01:04:44,609 --> 01:04:48,960
comes next so here comes a part where I

01:04:47,219 --> 01:04:50,989
spill all the beans on the super secret

01:04:48,960 --> 01:04:53,789
things that we have been working on

01:04:50,989 --> 01:04:56,819
actually there's no secrets in fact we

01:04:53,789 --> 01:04:58,799
have a road map RC probably on github

01:04:56,819 --> 01:05:01,349
it's been up for a couple months at this

01:04:58,799 --> 01:05:03,089
point the road map is set based on the

01:05:01,349 --> 01:05:06,180
results from last year's community

01:05:03,089 --> 01:05:08,130
survey and public awful blog post that

01:05:06,180 --> 01:05:10,229
you can participate in the steering

01:05:08,130 --> 01:05:12,299
committee then take all these feedback

01:05:10,229 --> 01:05:14,369
and come up with a couple of general

01:05:12,299 --> 01:05:16,979
directions and you can read more about

01:05:14,369 --> 01:05:20,759
it in the road map road map RC itself

01:05:16,979 --> 01:05:22,440
but here is a quick summary first we're

01:05:20,759 --> 01:05:24,180
going to invest further into the

01:05:22,440 --> 01:05:26,519
foundation that we built with octane

01:05:24,180 --> 01:05:28,559
we'll keep simplifying things removing

01:05:26,519 --> 01:05:30,599
conceptual complexity and introducing

01:05:28,559 --> 01:05:32,910
new functionality that complements the

01:05:30,599 --> 01:05:34,829
new program model we are also going to

01:05:32,910 --> 01:05:36,420
invest in developer tools like making

01:05:34,829 --> 01:05:38,240
type square in idea work better with

01:05:36,420 --> 01:05:41,630
ember in general but also

01:05:38,240 --> 01:05:43,940
with the new features in nokton second

01:05:41,630 --> 01:05:46,369
we're going to invest in morganisa a

01:05:43,940 --> 01:05:49,100
built system you might have heard of an

01:05:46,369 --> 01:05:51,230
effort called embroid yet which is going

01:05:49,100 --> 01:05:53,780
to integrate ember CLI with popular

01:05:51,230 --> 01:05:55,400
packages like wet pack and roll-up this

01:05:53,780 --> 01:05:58,220
doesn't mean you have to now change your

01:05:55,400 --> 01:06:00,290
curry into a configuration architect

01:05:58,220 --> 01:06:01,790
router these systems will be used under

01:06:00,290 --> 01:06:04,880
the hood to give you access to morning

01:06:01,790 --> 01:06:07,220
optimizations like tree shaking and code

01:06:04,880 --> 01:06:08,930
splitting on the other hand it will

01:06:07,220 --> 01:06:10,580
still allow ember to provide a zero

01:06:08,930 --> 01:06:11,920
conflict experience out of the box so

01:06:10,580 --> 01:06:15,890
that's pretty nice

01:06:11,920 --> 01:06:17,869
third will invest in ember making ever

01:06:15,890 --> 01:06:18,770
work better with assistive technologies

01:06:17,869 --> 01:06:21,140
out of the box

01:06:18,770 --> 01:06:23,150
we formed a new accessibility strike

01:06:21,140 --> 01:06:24,320
team to tackle these issues and if this

01:06:23,150 --> 01:06:27,220
is something you're interested in

01:06:24,320 --> 01:06:30,710
helping you can find them on this Court

01:06:27,220 --> 01:06:32,720
finally with octane out the door this is

01:06:30,710 --> 01:06:34,910
a great time to share ember with the

01:06:32,720 --> 01:06:36,590
outside community this is something that

01:06:34,910 --> 01:06:39,470
you can help with by writing blog post

01:06:36,590 --> 01:06:41,300
videos posting on social media speaking

01:06:39,470 --> 01:06:42,890
of virtual conferences or even just

01:06:41,300 --> 01:06:46,160
teaching ever to your friends and

01:06:42,890 --> 01:06:48,560
colleagues as I mentioned one of the

01:06:46,160 --> 01:06:51,380
parties on the roadmap is to invest in

01:06:48,560 --> 01:06:53,600
the octane program model and given that

01:06:51,380 --> 01:06:55,460
I spent a lot of time in this session to

01:06:53,600 --> 01:06:57,350
tell you about how great templates are

01:06:55,460 --> 01:06:58,460
and why you don't need as much

01:06:57,350 --> 01:07:00,109
JavaScript anymore

01:06:58,460 --> 01:07:02,000
the title of Matthew's talk might

01:07:00,109 --> 01:07:03,770
surprise you I won't spoil everything

01:07:02,000 --> 01:07:05,750
for you but stay tuned for this session

01:07:03,770 --> 01:07:10,100
later if you want a glimpse of the

01:07:05,750 --> 01:07:12,290
future and since we're talking about the

01:07:10,100 --> 01:07:14,480
roadmap and talks Edward this main

01:07:12,290 --> 01:07:15,950
architect behind the embroidery project

01:07:14,480 --> 01:07:18,350
he doesn't have a talk at the conference

01:07:15,950 --> 01:07:21,050
this time but he spoke about it at ember

01:07:18,350 --> 01:07:23,090
fest 2019 with a talk titled compelling

01:07:21,050 --> 01:07:24,920
ember it's available on YouTube and if

01:07:23,090 --> 01:07:26,180
you want to learn more by Umbro dia this

01:07:24,920 --> 01:07:28,430
is definitely something you should add

01:07:26,180 --> 01:07:32,119
to your playlist after to check out

01:07:28,430 --> 01:07:34,910
after the conference finally I would

01:07:32,119 --> 01:07:37,640
like to talk about how you can get to be

01:07:34,910 --> 01:07:39,770
part of this effort we are a community

01:07:37,640 --> 01:07:42,200
driven open-source framework and will

01:07:39,770 --> 01:07:46,280
rely on the community members like you

01:07:42,200 --> 01:07:49,490
and me to help move us forward so first

01:07:46,280 --> 01:07:51,470
I recommend that you get involved with

01:07:49,490 --> 01:07:51,830
the community by subscribing to ember

01:07:51,470 --> 01:07:54,110
time

01:07:51,830 --> 01:07:55,810
newsletter and joining out this court

01:07:54,110 --> 01:07:58,460
server if you haven't already done so

01:07:55,810 --> 01:08:00,320
there you can help answer questions you

01:07:58,460 --> 01:08:06,100
can bounce ideas you can ask questions

01:08:00,320 --> 01:08:10,520
you can join strike teams etc secondly

01:08:06,100 --> 01:08:12,200
you can help by giving feedback what I

01:08:10,520 --> 01:08:14,300
mean by that well there are a couple of

01:08:12,200 --> 01:08:16,819
ways you can do that maybe you can

01:08:14,300 --> 01:08:19,940
configure UCI server to run your test

01:08:16,819 --> 01:08:22,549
against the baton canary channel using

01:08:19,940 --> 01:08:24,560
ember try and report any issues as soon

01:08:22,549 --> 01:08:27,109
as you see them the earlier we hear

01:08:24,560 --> 01:08:29,600
about breakages the easier would be for

01:08:27,109 --> 01:08:31,460
us to tracking them and fixing them and

01:08:29,600 --> 01:08:34,960
of course you can submit pull requests

01:08:31,460 --> 01:08:38,270
as well as writing and reviewing RFC's

01:08:34,960 --> 01:08:40,310
third you can share common solutions you

01:08:38,270 --> 01:08:43,310
found with the wider community in the

01:08:40,310 --> 01:08:45,350
form of add-ons or you can help build

01:08:43,310 --> 01:08:47,540
better developer experience by

01:08:45,350 --> 01:08:50,150
contributing to tools like code mods and

01:08:47,540 --> 01:08:52,549
linters if you're looking to get started

01:08:50,150 --> 01:08:55,819
here check out the adopted ember add-ons

01:08:52,549 --> 01:08:57,319
project on github and speaking of

01:08:55,819 --> 01:09:00,170
tooling in case you missed it

01:08:57,319 --> 01:09:02,720
both ember inspector and ember todo has

01:09:00,170 --> 01:09:04,520
been updated to work with octane and the

01:09:02,720 --> 01:09:08,569
latest version of ember those are great

01:09:04,520 --> 01:09:11,569
projects to contribute as well finally

01:09:08,569 --> 01:09:13,609
you can help with teaching ember to more

01:09:11,569 --> 01:09:15,109
people as I mentioned before your block

01:09:13,609 --> 01:09:17,120
poles and confidence talks are great

01:09:15,109 --> 01:09:19,430
place to start but you can also

01:09:17,120 --> 01:09:21,069
contribute it to the official guides and

01:09:19,430 --> 01:09:23,750
documentation that I mentioned earlier

01:09:21,069 --> 01:09:26,000
with octane we have invested pretty

01:09:23,750 --> 01:09:29,750
heavily in the area of learning

01:09:26,000 --> 01:09:31,760
materials including writing our own

01:09:29,750 --> 01:09:34,310
state of the art tooling to go with the

01:09:31,760 --> 01:09:36,620
documentation we now have for example a

01:09:34,310 --> 01:09:38,089
self updating tutorial that runs itself

01:09:36,620 --> 01:09:41,210
against the latest changes every day

01:09:38,089 --> 01:09:43,549
which is great for keeping it up-to-date

01:09:41,210 --> 01:09:46,280
and fresh but it's also serves as a good

01:09:43,549 --> 01:09:49,339
way for us to detect breakages across

01:09:46,280 --> 01:09:53,060
the ecosystem if this is something that

01:09:49,339 --> 01:09:54,770
you would like to help with we would

01:09:53,060 --> 01:09:57,050
love to get would love to keep the

01:09:54,770 --> 01:09:58,610
octane momentum going so definitely get

01:09:57,050 --> 01:10:01,060
in touch with this court on the deaf

01:09:58,610 --> 01:10:01,060
Learning Channel

01:10:01,230 --> 01:10:06,239
and finally if you want to hear more

01:10:03,630 --> 01:10:07,530
about more ideas about contributing you

01:10:06,239 --> 01:10:13,800
can look forward to this session

01:10:07,530 --> 01:10:15,870
tomorrow and finally finally if you

01:10:13,800 --> 01:10:18,390
haven't seen the amber documentation the

01:10:15,870 --> 01:10:20,130
impaired documentary yet I highly

01:10:18,390 --> 01:10:21,840
recommend watching it it's really well

01:10:20,130 --> 01:10:23,790
done and it's available for free on

01:10:21,840 --> 01:10:25,320
YouTube there are many highlights but

01:10:23,790 --> 01:10:27,450
one of the things that really jumped out

01:10:25,320 --> 01:10:30,150
to me is this quote from Melanie when

01:10:27,450 --> 01:10:34,410
interviewed about the core values of

01:10:30,150 --> 01:10:36,390
amber I think this is a great way to sum

01:10:34,410 --> 01:10:37,410
everything up so I'm just gonna leave

01:10:36,390 --> 01:10:39,750
that with you

01:10:37,410 --> 01:10:42,000
we are amber the together framework

01:10:39,750 --> 01:10:44,420
let's get the message out there thank

01:10:42,000 --> 01:10:44,420

YouTube URL: https://www.youtube.com/watch?v=vUojP8DDPs0


