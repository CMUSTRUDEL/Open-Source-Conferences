Title: Virtual EmberConf 2020: The Power of Debugging by Samanta de Barros
Publication date: 2020-03-26
Playlist: EmberConf 2020
Description: 
	The Power of Debugging by Samanta de Barros

Several tools can help us when trying to find a bug in our code, knowing them can be a very helpful skill. But finding bugs is not the only thing we can get from debugging.

In this talk, we’ll walk through a series of challenges, and aided by the different debugging tools at our disposal, we will not only fix the issues we have but also learn about Ember, how an Ember app is structured and how to find what you’re looking for, even in production code.
Captions: 
	00:00:01,270 --> 00:00:20,820
[Music]

00:00:22,080 --> 00:00:26,770
hi everyone my name is Samantha thanks

00:00:25,660 --> 00:00:30,189
for being here

00:00:26,770 --> 00:00:32,770
virtually even today I will be talking

00:00:30,189 --> 00:00:35,379
about the power of the backing and my

00:00:32,770 --> 00:00:37,510
ideas to not only show you a few tricks

00:00:35,379 --> 00:00:42,100
but how you can use these tools to go

00:00:37,510 --> 00:00:44,739
beyond just debugging so my journey with

00:00:42,100 --> 00:00:48,400
the baton started several years ago back

00:00:44,739 --> 00:00:52,900
in college I didn't know coding before

00:00:48,400 --> 00:00:55,000
that and my professors philosophy was

00:00:52,900 --> 00:00:58,030
mostly to teach us the abstracts of

00:00:55,000 --> 00:01:00,129
programming and not so much the tools

00:00:58,030 --> 00:01:02,860
that meant that we were left to figure

00:01:00,129 --> 00:01:05,500
those things out by ourselves so in my

00:01:02,860 --> 00:01:08,920
case in the beginning I would use no

00:01:05,500 --> 00:01:12,549
parts program and yeah I meant doing

00:01:08,920 --> 00:01:14,799
everything manually now I'd love to say

00:01:12,549 --> 00:01:16,540
that it took me just a little bit to

00:01:14,799 --> 00:01:18,520
learn about all the other tools that I

00:01:16,540 --> 00:01:22,210
could use to make my experience easy

00:01:18,520 --> 00:01:25,240
easier but one year later I was still

00:01:22,210 --> 00:01:27,880
programming in notepad and just with a

00:01:25,240 --> 00:01:30,399
different language but then when I

00:01:27,880 --> 00:01:32,439
didn't know what was happening with my

00:01:30,399 --> 00:01:35,920
app when there was a bug already was

00:01:32,439 --> 00:01:39,490
just like exploding not functional at

00:01:35,920 --> 00:01:43,539
all I would add a print F that is like

00:01:39,490 --> 00:01:45,579
an equivalent for console.log and when I

00:01:43,539 --> 00:01:47,219
had likes you already aware my code was

00:01:45,579 --> 00:01:49,899
breaking I would literally just add

00:01:47,219 --> 00:01:54,069
printf everywhere like one per line of

00:01:49,899 --> 00:01:57,780
code thankfully after a while I did

00:01:54,069 --> 00:02:01,329
learn about IDs and bugging tools and

00:01:57,780 --> 00:02:03,549
this was from the days that I would call

00:02:01,329 --> 00:02:05,859
in dotnet and use Visual Studio for

00:02:03,549 --> 00:02:07,630
debugging one of the things that I miss

00:02:05,859 --> 00:02:12,100
the most about that debugger is being

00:02:07,630 --> 00:02:13,840
able to just keep skip lines of code the

00:02:12,100 --> 00:02:16,480
professor still has a habit I guess it's

00:02:13,840 --> 00:02:22,090
a difficult feature to have but it was

00:02:16,480 --> 00:02:25,209
super helpful nowadays I'm worth

00:02:22,090 --> 00:02:28,560
developer mostly so I spent most of my

00:02:25,209 --> 00:02:30,300
day my working day on the browser

00:02:28,560 --> 00:02:33,230
and the debugging tools that I use are

00:02:30,300 --> 00:02:37,380
the ones that come with the browser I

00:02:33,230 --> 00:02:39,920
also use the editor of course but a lot

00:02:37,380 --> 00:02:44,099
of my time is spent here

00:02:39,920 --> 00:02:47,310
so let's start with some of the

00:02:44,099 --> 00:02:50,880
challenges that I faced like all my

00:02:47,310 --> 00:02:53,940
years coding and I will walk you through

00:02:50,880 --> 00:02:59,280
them and like we can see how the

00:02:53,940 --> 00:03:01,110
magnitudes help us through this so one

00:02:59,280 --> 00:03:04,040
of the challenges that we usually face

00:03:01,110 --> 00:03:06,000
is mostly the difference between

00:03:04,040 --> 00:03:08,250
debugging or finding issues in

00:03:06,000 --> 00:03:09,780
development versus production so in

00:03:08,250 --> 00:03:12,380
development you actually have access to

00:03:09,780 --> 00:03:15,569
the code and you can change things and

00:03:12,380 --> 00:03:18,269
sort of see how they behave and if

00:03:15,569 --> 00:03:22,019
production does not know that's easy but

00:03:18,269 --> 00:03:27,049
we still have things we can do so to

00:03:22,019 --> 00:03:30,660
demonstrate this I have a backup and

00:03:27,049 --> 00:03:35,040
let's say I have this application that

00:03:30,660 --> 00:03:38,370
is asking me a math question I answer it

00:03:35,040 --> 00:03:40,410
and saying oh we have like it's not the

00:03:38,370 --> 00:03:43,079
right answer and I'm like I'm fish or

00:03:40,410 --> 00:03:47,510
that's the right answer so if you've

00:03:43,079 --> 00:03:51,630
worked on top and you know probably

00:03:47,510 --> 00:03:56,670
where is the issue happening so you will

00:03:51,630 --> 00:03:59,400
usually just go to like your editor okay

00:03:56,670 --> 00:04:02,639
yes I know this error is happening on

00:03:59,400 --> 00:04:09,959
this component I can just add that

00:04:02,639 --> 00:04:13,889
bugger here and save and sort of start

00:04:09,959 --> 00:04:16,650
debugging Oh first to answer that's what

00:04:13,889 --> 00:04:20,519
your it's happening and yeah you can

00:04:16,650 --> 00:04:23,330
step through the code see why start

00:04:20,519 --> 00:04:26,669
working then I'm like oh actually I

00:04:23,330 --> 00:04:29,130
shouldn't have parsed the answer is an

00:04:26,669 --> 00:04:31,410
integer because it's not always going to

00:04:29,130 --> 00:04:35,330
be one then you can go back to your code

00:04:31,410 --> 00:04:35,330
fix the issue and go on with your life

00:04:35,479 --> 00:04:42,960
another way to do this will be just just

00:04:40,500 --> 00:04:47,450
that break point on the actual source

00:04:42,960 --> 00:04:51,840
here on the browser now if you've ever

00:04:47,450 --> 00:04:53,570
looked through the sources tab of your

00:04:51,840 --> 00:04:56,880
ember app you will see that you have

00:04:53,570 --> 00:04:58,740
here like where your base is located and

00:04:56,880 --> 00:05:01,200
then you have an asset folder and this

00:04:58,740 --> 00:05:04,260
assets folder is going to have all the

00:05:01,200 --> 00:05:06,300
JavaScript and also CSS and other assets

00:05:04,260 --> 00:05:09,030
but what should we care about here is

00:05:06,300 --> 00:05:12,270
most of the JavaScript and you will find

00:05:09,030 --> 00:05:15,600
folders for the ember framework that's

00:05:12,270 --> 00:05:18,750
like this amber folder glimmer also

00:05:15,600 --> 00:05:20,520
amber testing this Adam tree output

00:05:18,750 --> 00:05:22,500
folder will actually contain all the

00:05:20,520 --> 00:05:24,690
code for every atom that you have

00:05:22,500 --> 00:05:26,640
included in your app so if you never

00:05:24,690 --> 00:05:30,360
ever need to actually debug that code

00:05:26,640 --> 00:05:33,570
you can just walk through there and open

00:05:30,360 --> 00:05:36,480
it and at breaking points now let's say

00:05:33,570 --> 00:05:40,650
I hadn't put a breakpoint here I have

00:05:36,480 --> 00:05:43,250
everything closed you will find always a

00:05:40,650 --> 00:05:46,340
folder that has your app name in it and

00:05:43,250 --> 00:05:50,070
inside you will see all the app code

00:05:46,340 --> 00:05:53,130
mapped pretty much as you see it on your

00:05:50,070 --> 00:05:56,729
computer in development and I can just

00:05:53,130 --> 00:06:02,460
go where I know the issue is and also

00:05:56,729 --> 00:06:06,510
put a breakpoint answer

00:06:02,460 --> 00:06:07,710
and yeah we go back to like the same

00:06:06,510 --> 00:06:09,540
point and we can see the same thing

00:06:07,710 --> 00:06:13,260
without having to change our code and

00:06:09,540 --> 00:06:16,260
reload the app you can also find here a

00:06:13,260 --> 00:06:19,560
few other things that help you in

00:06:16,260 --> 00:06:23,220
debugging I'm not going to go through

00:06:19,560 --> 00:06:25,710
all of them but yeah mostly you can

00:06:23,220 --> 00:06:27,930
watch variables to see how they change

00:06:25,710 --> 00:06:31,650
you can see where you cause like the

00:06:27,930 --> 00:06:33,840
stack trace here you can actually see

00:06:31,650 --> 00:06:35,520
the variables we have declared and you

00:06:33,840 --> 00:06:38,490
can even change their value so let's say

00:06:35,520 --> 00:06:39,960
I want to make this gold pass just

00:06:38,490 --> 00:06:42,300
because I want to continue working on

00:06:39,960 --> 00:06:45,120
the app and I just change it there you

00:06:42,300 --> 00:06:48,180
can see the breakpoints and several

00:06:45,120 --> 00:06:50,880
other stuff so here now I've changed my

00:06:48,180 --> 00:06:52,470
solutions just so the code can pass and

00:06:50,880 --> 00:06:55,460
I yeah

00:06:52,470 --> 00:07:00,630
just resumed okay we can continue like

00:06:55,460 --> 00:07:03,210
working on the app now this is perfect

00:07:00,630 --> 00:07:05,940
and it's easy to see in production sorry

00:07:03,210 --> 00:07:08,070
in development but the actual question

00:07:05,940 --> 00:07:10,110
is how do we find the same thing when

00:07:08,070 --> 00:07:12,750
we're in production and we don't have

00:07:10,110 --> 00:07:15,120
our code not that way so let's see the

00:07:12,750 --> 00:07:18,690
same up opened in a production

00:07:15,120 --> 00:07:22,290
environment if I go to the sources tab I

00:07:18,690 --> 00:07:25,080
see the access folder also but I don't

00:07:22,290 --> 00:07:28,170
see like all the folders mapped and I

00:07:25,080 --> 00:07:31,200
have four files here the one that has

00:07:28,170 --> 00:07:34,470
your app name and a fingerprint will be

00:07:31,200 --> 00:07:37,620
the one that has all the app code so

00:07:34,470 --> 00:07:40,830
everything you've developed and you will

00:07:37,620 --> 00:07:42,870
see founders file that has all the

00:07:40,830 --> 00:07:45,560
framework code so everything related to

00:07:42,870 --> 00:07:48,150
Ambur every add-on you have added

00:07:45,560 --> 00:07:51,870
external libraries that may not be Adams

00:07:48,150 --> 00:07:55,890
and the same thing for the CSS like you

00:07:51,870 --> 00:08:00,870
have one for your styles so yeah here my

00:07:55,890 --> 00:08:03,180
styles and you have one for styles are

00:08:00,870 --> 00:08:06,720
added by Adams like I don't have any

00:08:03,180 --> 00:08:09,390
here so it's empty now how do you find

00:08:06,720 --> 00:08:11,580
the codes of the bug here in production

00:08:09,390 --> 00:08:13,139
you will see that even though this is a

00:08:11,580 --> 00:08:15,330
mini fire fire

00:08:13,139 --> 00:08:16,650
and like yeah you don't actually have

00:08:15,330 --> 00:08:19,710
all the variable names

00:08:16,650 --> 00:08:24,479
you still have some strings that name

00:08:19,710 --> 00:08:26,729
the modules that we have declared so you

00:08:24,479 --> 00:08:29,039
can see for instance you can find the

00:08:26,729 --> 00:08:31,710
adapter you can see here a component

00:08:29,039 --> 00:08:35,700
definition actually this is manager but

00:08:31,710 --> 00:08:38,430
here a component if we want to see it in

00:08:35,700 --> 00:08:44,790
a nicer way you can just click the

00:08:38,430 --> 00:08:48,870
prettify let's go back this icon and

00:08:44,790 --> 00:08:50,640
this will generate like a different tab

00:08:48,870 --> 00:08:52,949
but it has the same code but prints are

00:08:50,640 --> 00:08:57,690
nice it's printed nicely so you can

00:08:52,949 --> 00:08:59,910
actually find it easier in debugger so I

00:08:57,690 --> 00:09:02,130
will issue here what's happening in

00:08:59,910 --> 00:09:05,959
component so we can just search for the

00:09:02,130 --> 00:09:08,250
name of the component we want to debug

00:09:05,959 --> 00:09:10,940
now you will see a lot of this is

00:09:08,250 --> 00:09:15,420
initialization initialization code

00:09:10,940 --> 00:09:18,029
that's a hard word and if we keep

00:09:15,420 --> 00:09:21,779
looking we will eventually find I did

00:09:18,029 --> 00:09:24,240
like our functions here you can see you

00:09:21,779 --> 00:09:25,949
have the a valid answer and this is

00:09:24,240 --> 00:09:31,649
pretty much the same color with buggy

00:09:25,949 --> 00:09:34,829
before just format it differently and we

00:09:31,649 --> 00:09:38,970
can also set a breakpoint there just

00:09:34,829 --> 00:09:43,680
right this thing and in this case I can

00:09:38,970 --> 00:09:47,490
still access the variables and let's say

00:09:43,680 --> 00:09:51,529
I want to just change this one to make

00:09:47,490 --> 00:09:55,079
the code path and you can just go set

00:09:51,529 --> 00:09:58,050
the value I want and I know I the

00:09:55,079 --> 00:10:00,170
comparison will work now and I can just

00:09:58,050 --> 00:10:03,690
continue

00:10:00,170 --> 00:10:05,339
yeah and that's how we can prove it is

00:10:03,690 --> 00:10:09,870
the same thing with it in development

00:10:05,339 --> 00:10:16,320
but here in production so back to our

00:10:09,870 --> 00:10:19,680
slides a small recap of this section you

00:10:16,320 --> 00:10:21,899
can usually to all the debugging on the

00:10:19,680 --> 00:10:24,300
sources tab without changing your code

00:10:21,899 --> 00:10:25,220
you can just set breakpoints there you

00:10:24,300 --> 00:10:27,329
will find

00:10:25,220 --> 00:10:29,640
while you're in development the up

00:10:27,329 --> 00:10:33,180
structured pretty much a series in your

00:10:29,640 --> 00:10:35,850
computer you can access the scope

00:10:33,180 --> 00:10:37,410
section to view the value of the

00:10:35,850 --> 00:10:40,920
variables you have and also change them

00:10:37,410 --> 00:10:42,630
if you need to and just remember that in

00:10:40,920 --> 00:10:45,529
production this script will be all in

00:10:42,630 --> 00:10:51,690
one file but you can do the pretty

00:10:45,529 --> 00:10:55,440
formatting and also the back there so

00:10:51,690 --> 00:10:59,579
next what happened when we have external

00:10:55,440 --> 00:11:01,680
libraries and how can we pack them in

00:10:59,579 --> 00:11:03,410
case issues like sometimes issues will

00:11:01,680 --> 00:11:09,380
not be your fault they will be actually

00:11:03,410 --> 00:11:20,610
someone else's code yeah

00:11:09,380 --> 00:11:22,920
going back to our app and I'm going to

00:11:20,610 --> 00:11:27,899
try to book this level and I see an

00:11:22,920 --> 00:11:30,209
error look at the message it's not like

00:11:27,899 --> 00:11:32,600
we know is happening in the route but

00:11:30,209 --> 00:11:37,709
the message itself is not saying much

00:11:32,600 --> 00:11:40,589
and yeah the stack trace is not that

00:11:37,709 --> 00:11:42,260
helpful either so sometimes one of the

00:11:40,589 --> 00:11:45,420
issues that we have with ember is that

00:11:42,260 --> 00:11:47,550
you will see a lot of the internal code

00:11:45,420 --> 00:11:50,660
in your stack trace and you may not

00:11:47,550 --> 00:11:53,579
actually find where the issues beginning

00:11:50,660 --> 00:11:56,430
but in this case we know it is happening

00:11:53,579 --> 00:12:00,829
when we try to navigate to the route so

00:11:56,430 --> 00:12:00,829
let's just open that route here

00:12:09,760 --> 00:12:15,890
so here I have my model and I'm using

00:12:12,380 --> 00:12:17,690
this is like the instance of a external

00:12:15,890 --> 00:12:22,040
library that I'm using to load the data

00:12:17,690 --> 00:12:24,740
I can set a few breakpoints like maybe

00:12:22,040 --> 00:12:27,560
it's failing when I initialize it

00:12:24,740 --> 00:12:36,500
maybe it's failing there may be failing

00:12:27,560 --> 00:12:41,240
here who knows step through it the part

00:12:36,500 --> 00:12:44,240
works this is actually I promise so I

00:12:41,240 --> 00:12:46,670
need to sort of continue and my car is

00:12:44,240 --> 00:12:50,750
not actually stopping here so I guess

00:12:46,670 --> 00:12:57,950
it's failing inside this method so let's

00:12:50,750 --> 00:13:02,180
just try to step inside it here so now

00:12:57,950 --> 00:13:05,120
we are on the actual definition of the

00:13:02,180 --> 00:13:09,050
function on the library and we can step

00:13:05,120 --> 00:13:11,330
through it and out now I find foundatio

00:13:09,050 --> 00:13:13,760
it's not like something on my goals I

00:13:11,330 --> 00:13:17,600
can just go to like the github of that

00:13:13,760 --> 00:13:20,660
person and say hey you have a book okay

00:13:17,600 --> 00:13:22,700
like yes you can do that but let's just

00:13:20,660 --> 00:13:28,040
see what there are other options we have

00:13:22,700 --> 00:13:29,870
here one of the things that I can do on

00:13:28,040 --> 00:13:34,130
the sources tab which is actually change

00:13:29,870 --> 00:13:38,750
the code and save it and this will allow

00:13:34,130 --> 00:13:39,190
me to try this function as without

00:13:38,750 --> 00:13:42,950
change

00:13:39,190 --> 00:13:47,620
so I commented that line dos throwing

00:13:42,950 --> 00:13:52,510
the exception and I can just skip it

00:13:47,620 --> 00:13:52,510
yeah and now I get the results I want it

00:13:53,380 --> 00:13:58,759
cool

00:13:55,250 --> 00:14:01,730
so one thing that I would like to point

00:13:58,759 --> 00:14:05,000
out here is the difference between atoms

00:14:01,730 --> 00:14:07,639
and external libraries like this is an

00:14:05,000 --> 00:14:11,149
NPM library during import change through

00:14:07,639 --> 00:14:14,149
ember auto import and here like on the

00:14:11,149 --> 00:14:16,160
source tab I will find it below this

00:14:14,149 --> 00:14:20,300
little cloud that is emerald to import

00:14:16,160 --> 00:14:24,199
and like the differences add-ons I will

00:14:20,300 --> 00:14:27,079
actually found find them in the other

00:14:24,199 --> 00:14:32,509
folder but you can still see like put

00:14:27,079 --> 00:14:34,790
the code of both on type of libraries so

00:14:32,509 --> 00:14:36,199
yeah like if you want to pack and you

00:14:34,790 --> 00:14:39,199
have these other libraries you can just

00:14:36,199 --> 00:14:41,389
open them add a breakpoint somewhere and

00:14:39,199 --> 00:14:47,060
see what happens if you're curious to

00:14:41,389 --> 00:14:50,120
see how something works yeah so I think

00:14:47,060 --> 00:14:52,600
that's it for this case let's go back to

00:14:50,120 --> 00:14:52,600
our slides

00:14:55,689 --> 00:15:02,629
so just to recap yeah sometimes you will

00:15:01,009 --> 00:15:05,000
find issues that are not exactly on the

00:15:02,629 --> 00:15:08,209
core balance to party libraries and

00:15:05,000 --> 00:15:10,370
don't be afraid to step in them like

00:15:08,209 --> 00:15:13,399
this was a very simple example but

00:15:10,370 --> 00:15:15,709
sometimes it will help you find where

00:15:13,399 --> 00:15:19,279
the actual risk of error is coming from

00:15:15,709 --> 00:15:21,740
so for instance this talk was inspired

00:15:19,279 --> 00:15:23,600
because we had a similar problem in

00:15:21,740 --> 00:15:25,970
production where we were interacting

00:15:23,600 --> 00:15:28,430
with third-party library and the error

00:15:25,970 --> 00:15:31,699
message that we were getting was not

00:15:28,430 --> 00:15:33,230
helpful as oh it's not for them like

00:15:31,699 --> 00:15:35,829
they couldn't reproduce the issue we

00:15:33,230 --> 00:15:40,490
were having but we didn't know exactly

00:15:35,829 --> 00:15:44,870
what was original error and we had to

00:15:40,490 --> 00:15:46,459
sort of fair debug from someone else's

00:15:44,870 --> 00:15:48,970
computer while having the code

00:15:46,459 --> 00:15:52,939
introduction and by using both the

00:15:48,970 --> 00:15:54,680
formatting of the Ember code and then

00:15:52,939 --> 00:15:57,589
being able to step on the actual library

00:15:54,680 --> 00:15:59,540
we managed to find the original error

00:15:57,589 --> 00:16:02,509
message and that's something we could

00:15:59,540 --> 00:16:04,279
use to actually contact like third-party

00:16:02,509 --> 00:16:07,399
library that was useful another

00:16:04,279 --> 00:16:08,250
third-party library and give them the

00:16:07,399 --> 00:16:12,420
information they need

00:16:08,250 --> 00:16:15,080
to fixation so sometimes you will step

00:16:12,420 --> 00:16:17,550
into code that will look weird to you

00:16:15,080 --> 00:16:19,230
you don't have to understand it like I

00:16:17,550 --> 00:16:23,130
don't understand most have to go to step

00:16:19,230 --> 00:16:25,500
to utilize mine but you may still find

00:16:23,130 --> 00:16:27,660
the information you need even if you

00:16:25,500 --> 00:16:32,580
don't really understand the code or you

00:16:27,660 --> 00:16:34,800
don't really get fixation you can edit

00:16:32,580 --> 00:16:36,380
on site just as I did if you want to try

00:16:34,800 --> 00:16:39,240
something

00:16:36,380 --> 00:16:42,330
yeah like change the code a little bit

00:16:39,240 --> 00:16:44,070
maybe you won't like something's filling

00:16:42,330 --> 00:16:46,260
it's specific point but you actually

00:16:44,070 --> 00:16:50,520
need to see what happens afterwards

00:16:46,260 --> 00:16:52,050
yeah like this can work also just

00:16:50,520 --> 00:16:54,840
remember the difference between where

00:16:52,050 --> 00:17:01,050
the add-on called lies versus the

00:16:54,840 --> 00:17:03,030
improvement library code now the third

00:17:01,050 --> 00:17:04,980
challenge I want to walk you through

00:17:03,030 --> 00:17:07,740
today is what happens when you have an

00:17:04,980 --> 00:17:09,810
app and someone reports an issue but

00:17:07,740 --> 00:17:12,030
that's not something you actually

00:17:09,810 --> 00:17:14,840
developed it happens a lot I guess in

00:17:12,030 --> 00:17:17,640
every developers life that you end up

00:17:14,840 --> 00:17:19,410
coding in an app that you didn't started

00:17:17,640 --> 00:17:21,000
from scratch and sometimes especially

00:17:19,410 --> 00:17:24,000
when you're doing the project that can

00:17:21,000 --> 00:17:25,710
be like super hard to figure out I'm

00:17:24,000 --> 00:17:27,240
special because people really want to

00:17:25,710 --> 00:17:28,830
fix you we used to fix the issue and

00:17:27,240 --> 00:17:39,990
you're like where do I start

00:17:28,830 --> 00:17:44,280
so let's go back to the app now let's

00:17:39,990 --> 00:17:47,610
say I have this memory game like I think

00:17:44,280 --> 00:17:50,400
I don't know if we all nobody special

00:17:47,610 --> 00:17:52,770
basically you have to like guess or

00:17:50,400 --> 00:17:54,840
remember where the cars were and when

00:17:52,770 --> 00:17:56,880
you have to that fail we actually want

00:17:54,840 --> 00:17:58,380
them to like turn back I said it did but

00:17:56,880 --> 00:18:02,430
don't we don't want them to like take

00:17:58,380 --> 00:18:05,670
that long really like because we cannot

00:18:02,430 --> 00:18:07,390
do anything so let's say your manager

00:18:05,670 --> 00:18:09,520
comes and says yeah I have this issue

00:18:07,390 --> 00:18:16,690
is happening but I want it fixed by

00:18:09,520 --> 00:18:19,150
yesterday I didn't now we have the amber

00:18:16,690 --> 00:18:23,880
inspector and one thing that I like to

00:18:19,150 --> 00:18:27,059
use it for is learning on Europe

00:18:23,880 --> 00:18:30,910
especially this view is very helpful

00:18:27,059 --> 00:18:32,590
because even if you don't will like you

00:18:30,910 --> 00:18:35,170
don't know straightaway where things are

00:18:32,590 --> 00:18:39,130
you can astley see what components make

00:18:35,170 --> 00:18:40,990
this thing and you can actually start to

00:18:39,130 --> 00:18:44,470
figure out where you should start

00:18:40,990 --> 00:18:47,260
looking for like possible issues so here

00:18:44,470 --> 00:18:50,080
now I have like my route and then link

00:18:47,260 --> 00:18:52,450
to that's not what is happening I mean

00:18:50,080 --> 00:18:55,240
start really I guess then I have a big

00:18:52,450 --> 00:18:58,780
component called memory game and several

00:18:55,240 --> 00:19:01,150
memory cards component one good thing

00:18:58,780 --> 00:19:03,549
that I figure just recently is that you

00:19:01,150 --> 00:19:05,860
can actually click here you will be

00:19:03,549 --> 00:19:09,160
taken to like that instance of the

00:19:05,860 --> 00:19:12,220
component this the embrace factor has a

00:19:09,160 --> 00:19:13,630
lot of helpful tools I won't walk you

00:19:12,220 --> 00:19:16,330
through them today but you can find

00:19:13,630 --> 00:19:19,500
other talks and actually the guys I had

00:19:16,330 --> 00:19:22,330
a lot has a lot of information

00:19:19,500 --> 00:19:26,140
yeah so you can learn how to use these

00:19:22,330 --> 00:19:28,120
tools they are very helpful so now I

00:19:26,140 --> 00:19:30,669
know how my components are called

00:19:28,120 --> 00:19:33,010
and I can finally say mmm I have a

00:19:30,669 --> 00:19:37,090
feeling that the memory game is the one

00:19:33,010 --> 00:19:42,330
that is causing us issues so I can go to

00:19:37,090 --> 00:19:49,080
the sources tab again and I can go to

00:19:42,330 --> 00:19:49,080
components and open memory game

00:19:49,179 --> 00:19:55,690
and you know this image I'll show you

00:19:52,279 --> 00:19:59,830
some code I can see the template here um

00:19:55,690 --> 00:20:03,230
yeah it's pretty interesting to see I

00:19:59,830 --> 00:20:09,830
can see my property's been initialized

00:20:03,230 --> 00:20:12,529
and mmm looking and I have a hint like I

00:20:09,830 --> 00:20:14,960
have a function here called called card

00:20:12,529 --> 00:20:17,570
click that receives a card so I'm going

00:20:14,960 --> 00:20:19,869
to add a debugger here and see what

00:20:17,570 --> 00:20:22,489
happens

00:20:19,869 --> 00:20:26,350
so yeah now I'm checking that the

00:20:22,489 --> 00:20:30,100
unzipped cards funny name is not running

00:20:26,350 --> 00:20:34,940
I'm comparing two cars I only have one I

00:20:30,100 --> 00:20:39,169
started to flipped my son my sleep art

00:20:34,940 --> 00:20:45,049
to it then I asked if we came past so

00:20:39,169 --> 00:20:50,749
yeah that works fine now I have this up

00:20:45,049 --> 00:20:53,119
sleeps card and they step through it and

00:20:50,749 --> 00:20:58,879
I can see that the cars didn't match and

00:20:53,119 --> 00:21:03,470
I got to call this task and this is a

00:20:58,879 --> 00:21:07,759
member can create the task yeah this is

00:21:03,470 --> 00:21:11,419
just and I think like I sort of know

00:21:07,759 --> 00:21:14,119
some of these properties and I sort of I

00:21:11,419 --> 00:21:17,419
think this is a task and we can try like

00:21:14,119 --> 00:21:20,899
stepping into it whenever you step into

00:21:17,419 --> 00:21:23,629
this is actually an Amber code for

00:21:20,899 --> 00:21:26,029
getting like when you got to need to get

00:21:23,629 --> 00:21:29,350
property of something so like we're

00:21:26,029 --> 00:21:31,970
getting these tasks from the component

00:21:29,350 --> 00:21:35,650
we don't want to actually step into that

00:21:31,970 --> 00:21:38,280
so we can step out and go back yeah

00:21:35,650 --> 00:21:41,290
we don't want to go for that one neither

00:21:38,280 --> 00:21:43,690
now I should try to again step into it

00:21:41,290 --> 00:21:46,020
you will actually be taken to cold ice

00:21:43,690 --> 00:21:50,670
for American currency

00:21:46,020 --> 00:21:54,720
now the thing is we won't really see

00:21:50,670 --> 00:21:57,400
like where the task is fine

00:21:54,720 --> 00:22:00,010
but I really want to actually divide the

00:21:57,400 --> 00:22:01,930
task itself not under concurrency code

00:22:00,010 --> 00:22:05,410
in this case so I'm just going to pull

00:22:01,930 --> 00:22:10,870
that bugger here and one way to do this

00:22:05,410 --> 00:22:15,610
because we can try to find this card's

00:22:10,870 --> 00:22:19,630
function and yeah it's like I cannot

00:22:15,610 --> 00:22:21,309
find the actual code so when it's like

00:22:19,630 --> 00:22:22,960
you're having a hard time finding the

00:22:21,309 --> 00:22:27,250
actual definition of a function you can

00:22:22,960 --> 00:22:32,559
use this thing that the chrome tools

00:22:27,250 --> 00:22:34,870
tool is like you take like here it's a

00:22:32,559 --> 00:22:37,990
task and the actual function for the

00:22:34,870 --> 00:22:41,020
task is this one and whenever you have a

00:22:37,990 --> 00:22:43,059
function you will add the function

00:22:41,020 --> 00:22:45,070
location and a link to the actual file

00:22:43,059 --> 00:22:49,990
so we can click there and now I can

00:22:45,070 --> 00:22:52,990
actually debug that one and yeah now I

00:22:49,990 --> 00:22:54,850
see Oh actually where's have this big

00:22:52,990 --> 00:22:59,679
number here like we'll probably want to

00:22:54,850 --> 00:23:01,750
have half a second not 5 seconds now if

00:22:59,679 --> 00:23:09,820
we want to as we did before and just

00:23:01,750 --> 00:23:13,179
edit it yeah we go back we try it and

00:23:09,820 --> 00:23:15,580
it's not not really working now the

00:23:13,179 --> 00:23:17,980
reason why these doesn't work as it did

00:23:15,580 --> 00:23:21,190
when we changed the other case is

00:23:17,980 --> 00:23:24,340
because this file is actually the source

00:23:21,190 --> 00:23:27,190
map is not the actual J's file for your

00:23:24,340 --> 00:23:37,690
app now how do we find the actual J's

00:23:27,190 --> 00:23:40,270
file this one now here you will find I

00:23:37,690 --> 00:23:42,880
J's file with your app's name if you

00:23:40,270 --> 00:23:44,679
open it you will see the similar sort

00:23:42,880 --> 00:23:45,630
the one we saw in production but

00:23:44,679 --> 00:23:49,169
actually

00:23:45,630 --> 00:23:58,440
not minified and you can also find this

00:23:49,169 --> 00:24:03,809
memory card component here sorry so it's

00:23:58,440 --> 00:24:05,520
the same code and this thing like if we

00:24:03,809 --> 00:24:07,500
went to the back this one you'll notice

00:24:05,520 --> 00:24:09,720
that it will take you to the source

00:24:07,500 --> 00:24:11,549
mapped file that is because it's

00:24:09,720 --> 00:24:13,410
actually easier for you to the about

00:24:11,549 --> 00:24:15,660
that one but if you want to actually

00:24:13,410 --> 00:24:19,230
make changes to just try it out you need

00:24:15,660 --> 00:24:23,309
to do it on the whole file so we should

00:24:19,230 --> 00:24:25,860
find that number we want to change so

00:24:23,309 --> 00:24:33,690
here we have two tasks you can try

00:24:25,860 --> 00:24:44,070
changing it and then now we see like we

00:24:33,690 --> 00:24:50,220
can actually see it work okay so it

00:24:44,070 --> 00:24:52,409
small recap use the inspector like

00:24:50,220 --> 00:24:56,370
there's a lot of information you can get

00:24:52,409 --> 00:24:57,990
from Europe from there and it will help

00:24:56,370 --> 00:24:59,640
you especially in the beginning of a

00:24:57,990 --> 00:25:02,640
project that you don't know to figure

00:24:59,640 --> 00:25:07,440
out the models you have the structure of

00:25:02,640 --> 00:25:08,880
a page and a lot of other things if you

00:25:07,440 --> 00:25:11,909
don't know where a function is a finding

00:25:08,880 --> 00:25:14,010
you have enough hard time figuring it

00:25:11,909 --> 00:25:15,960
out but you do have access to the

00:25:14,010 --> 00:25:19,650
instance you can always go to a function

00:25:15,960 --> 00:25:21,419
location and remember that if you need

00:25:19,650 --> 00:25:23,700
to edit something to just try it out

00:25:21,419 --> 00:25:28,230
usually you should do it on the actual

00:25:23,700 --> 00:25:32,429
app file I'm not on the source map now

00:25:28,230 --> 00:25:34,260
other talks that you can see that will

00:25:32,429 --> 00:25:36,870
have a lot more information related also

00:25:34,260 --> 00:25:41,520
to bug and also to ember debugging are

00:25:36,870 --> 00:25:43,260
listed here also don't forget to read

00:25:41,520 --> 00:25:47,460
the guides there's a lot of information

00:25:43,260 --> 00:25:51,780
there both for chrome tools Firefox

00:25:47,460 --> 00:25:52,350
holes and the inspector thank you for

00:25:51,780 --> 00:25:54,570
listening

00:25:52,350 --> 00:25:55,809
again my name is Samantha I'm a software

00:25:54,570 --> 00:25:59,729
developer fan simply

00:25:55,809 --> 00:25:59,729
and hope you had a nice time

00:26:00,740 --> 00:26:04,289

YouTube URL: https://www.youtube.com/watch?v=d29kpZWvhQY


