Title: Virtual EmberConf 2020: Talking to Your Dog with Ember by Robert Wagner
Publication date: 2020-03-26
Playlist: EmberConf 2020
Description: 
	Talking to Your Dog with Ember by Robert Wagner

Have you ever wished you knew what your dog was saying when they were barking? Now you can! We'll use Ember and the Web Audio API to decipher different dog barks and translate them into something more meaningful.
Captions: 
	00:00:01,270 --> 00:00:24,670
[Music]

00:00:20,610 --> 00:00:26,680
hey guys I'm Robbie Wagner and today I'm

00:00:24,670 --> 00:00:35,230
gonna be talking to you about talking to

00:00:26,680 --> 00:00:37,960
your dog with ember so Who am I I'm CEO

00:00:35,230 --> 00:00:40,090
of shipshape we're a Ember consulting

00:00:37,960 --> 00:00:43,300
company that also does other various

00:00:40,090 --> 00:00:45,309
JavaScript things as well any kind of

00:00:43,300 --> 00:00:47,470
apps you might need we're always around

00:00:45,309 --> 00:00:49,930
to talk to ember if you want you can see

00:00:47,470 --> 00:00:51,519
my email there is Robbie shipshape Dao

00:00:49,930 --> 00:00:54,940
feel free to shoot me a line

00:00:51,519 --> 00:00:58,000
always happy to check also on the Ember

00:00:54,940 --> 00:01:00,670
learning core team and written several

00:00:58,000 --> 00:01:02,530
ember add-ons you might have used ember

00:01:00,670 --> 00:01:06,030
math helpers and amber Shepherd or some

00:01:02,530 --> 00:01:09,610
of the more popular ones Shepherd is a

00:01:06,030 --> 00:01:11,979
site tour an apt or library that lets

00:01:09,610 --> 00:01:13,270
you have users check out all your

00:01:11,979 --> 00:01:18,549
features and show them how to use your

00:01:13,270 --> 00:01:21,220
app and a huge part of my life is I love

00:01:18,549 --> 00:01:25,240
all dogs you can see me here on the

00:01:21,220 --> 00:01:30,100
couch with Odie and his uncle socks just

00:01:25,240 --> 00:01:31,840
chillin Odie has an Instagram O'Neil a

00:01:30,100 --> 00:01:33,939
Frenchie so if you're so inclined to

00:01:31,840 --> 00:01:37,749
follow him check it out some good stuff

00:01:33,939 --> 00:01:39,939
on there and I'm RW Wagner 90 pretty

00:01:37,749 --> 00:01:43,539
much everywhere across the internet so

00:01:39,939 --> 00:01:45,159
Twitter github anything like that feel

00:01:43,539 --> 00:01:50,140
free to drop me a line any of those

00:01:45,159 --> 00:01:53,170
places as well so the motivation behind

00:01:50,140 --> 00:01:56,499
this talk is I always thought it would

00:01:53,170 --> 00:01:59,560
be cool to understand what ot8 is

00:01:56,499 --> 00:02:02,560
barking about and he barks a lot he

00:01:59,560 --> 00:02:05,729
barks that people coming in the house he

00:02:02,560 --> 00:02:10,240
barks at his ball which you'll see here

00:02:05,729 --> 00:02:12,069
playfully and all of them are just crazy

00:02:10,240 --> 00:02:13,569
random barks sometimes and you don't

00:02:12,069 --> 00:02:25,840
know what he's doing so here's an

00:02:13,569 --> 00:02:27,990
example so as you can see he squeaks his

00:02:25,840 --> 00:02:31,310
toy and barks along with it like he's

00:02:27,990 --> 00:02:34,890
singing or playing or something here so

00:02:31,310 --> 00:02:37,890
gonna give you a brief demo of our

00:02:34,890 --> 00:02:39,690
prototype here it's built in ember on

00:02:37,890 --> 00:02:43,100
octane of course using glimmer

00:02:39,690 --> 00:02:43,100
components all that good stuff

00:02:59,720 --> 00:03:07,640
so the site is wolf that plus and it

00:03:05,159 --> 00:03:11,370
supports both file uploads and

00:03:07,640 --> 00:03:16,230
microphone input so you can go to file

00:03:11,370 --> 00:03:17,510
upload and you can upload the same video

00:03:16,230 --> 00:03:22,409
that I just showed you with the

00:03:17,510 --> 00:03:26,040
squeaking of the toy and you can see it

00:03:22,409 --> 00:03:28,709
results in a playful result so what

00:03:26,040 --> 00:03:31,410
about something that's less playful

00:03:28,709 --> 00:03:40,859
how about hoodie barking at the mailman

00:03:31,410 --> 00:03:43,440
dropping mail through the slot so this

00:03:40,859 --> 00:03:45,060
one says alert your dog maybe alerting

00:03:43,440 --> 00:03:49,680
you to a potential problem or intruder

00:03:45,060 --> 00:03:52,349
nearby so you can also use microphone

00:03:49,680 --> 00:03:55,440
input because it's not super practical

00:03:52,349 --> 00:03:59,400
to have an audio or video file handy all

00:03:55,440 --> 00:04:06,239
the time so you can hit start recording

00:03:59,400 --> 00:04:09,709
here and you can see that it says this

00:04:06,239 --> 00:04:11,879
is a greeting if there's one spike bark

00:04:09,709 --> 00:04:15,720
instead of for a long bar so it's

00:04:11,879 --> 00:04:18,889
frequently in greeting and the code for

00:04:15,720 --> 00:04:20,729
this is all open source it's on github

00:04:18,889 --> 00:04:22,680
would love to have some people

00:04:20,729 --> 00:04:25,620
contribute to it with us help us make it

00:04:22,680 --> 00:04:28,710
better it's all amber all web audio api

00:04:25,620 --> 00:04:33,050
as well check it out give us some

00:04:28,710 --> 00:04:33,050
feedback hope to work with you

00:04:37,420 --> 00:04:43,640
so back to the idea for this talk I was

00:04:40,820 --> 00:04:46,010
sitting around with Chuck our CEO oh and

00:04:43,640 --> 00:04:47,960
we were talking about the Ember cough

00:04:46,010 --> 00:04:52,130
CFP that had just opened up and what

00:04:47,960 --> 00:04:54,800
ideas we could submit for talks and this

00:04:52,130 --> 00:04:56,720
immediately came to mind because Chuck

00:04:54,800 --> 00:04:58,430
had just met od that day and he had had

00:04:56,720 --> 00:05:00,710
lots of different marking encounters

00:04:58,430 --> 00:05:03,050
with him both aggressive and playful and

00:05:00,710 --> 00:05:04,550
saw all the different signs of OD sparks

00:05:03,050 --> 00:05:06,380
and we were just thinking wow it would

00:05:04,550 --> 00:05:08,060
be nice to be able to decode these and

00:05:06,380 --> 00:05:10,580
you know kind of talk to him and know

00:05:08,060 --> 00:05:16,990
what he's thinking so that was the idea

00:05:10,580 --> 00:05:20,990
for the app so the process was to first

00:05:16,990 --> 00:05:24,110
investigate Web Audio API which is an

00:05:20,990 --> 00:05:28,310
API for working with audio and video and

00:05:24,110 --> 00:05:31,100
JavaScript and then determine different

00:05:28,310 --> 00:05:33,680
dog bark types and studies have shown

00:05:31,100 --> 00:05:34,940
that both dogs and humans can tell the

00:05:33,680 --> 00:05:38,720
difference between several different

00:05:34,940 --> 00:05:40,340
bark types and even different ones from

00:05:38,720 --> 00:05:42,230
dogs they know and are familiar with

00:05:40,340 --> 00:05:45,080
versus others so there's definitely

00:05:42,230 --> 00:05:47,510
something to these barks that is in the

00:05:45,080 --> 00:05:50,000
data that we could get out and decipher

00:05:47,510 --> 00:05:55,640
to try to determine what the different

00:05:50,000 --> 00:05:58,670
meanings are but the problem is never

00:05:55,640 --> 00:06:01,850
used Web Audio API before and not really

00:05:58,670 --> 00:06:03,590
sure if it does exactly what we need or

00:06:01,850 --> 00:06:07,730
how to use it to get the data we want

00:06:03,590 --> 00:06:12,170
out let cetera so first thing we do is

00:06:07,730 --> 00:06:16,210
Google it to see if it'll work so I

00:06:12,170 --> 00:06:19,040
googled Web Audio API analyze sound and

00:06:16,210 --> 00:06:21,710
got a lot of good stuff actually there

00:06:19,040 --> 00:06:25,280
were several real-time analysis examples

00:06:21,710 --> 00:06:27,860
and of course the official docs from

00:06:25,280 --> 00:06:30,140
Mozilla and some Stack Overflow posts

00:06:27,860 --> 00:06:31,490
that kind of helped explaining what the

00:06:30,140 --> 00:06:35,630
docs were talking about because they're

00:06:31,490 --> 00:06:37,820
a little terse and helped connect that

00:06:35,630 --> 00:06:40,160
with the examples and really give me a

00:06:37,820 --> 00:06:44,380
better understanding of the types of

00:06:40,160 --> 00:06:44,380
things that Web Audio API could even do

00:06:46,090 --> 00:06:52,820
so some of the things it does do

00:06:49,780 --> 00:06:55,900
the main thing we were focusing on here

00:06:52,820 --> 00:06:58,370
because we're analyzing sound is

00:06:55,900 --> 00:07:02,090
appropriately named the analyzer node

00:06:58,370 --> 00:07:04,970
and the analyzer node at its core just

00:07:02,090 --> 00:07:08,840
lets you get frequency and time domain

00:07:04,970 --> 00:07:11,120
data now frequency is essentially the

00:07:08,840 --> 00:07:14,960
pitch the higher the frequency the

00:07:11,120 --> 00:07:18,410
higher the pitch and the time domain

00:07:14,960 --> 00:07:21,830
data is the wavelength which the higher

00:07:18,410 --> 00:07:24,370
the amplitude or the top of the wave the

00:07:21,830 --> 00:07:28,430
louder it is so time domain waveform

00:07:24,370 --> 00:07:30,110
amplitude all mean basically loudness so

00:07:28,430 --> 00:07:32,720
there's two methods to get this type of

00:07:30,110 --> 00:07:35,360
data from your audio or video files and

00:07:32,720 --> 00:07:37,820
they're appropriately named gift by

00:07:35,360 --> 00:07:40,580
frequency data and get by time domain

00:07:37,820 --> 00:07:44,479
data and these both give you similar

00:07:40,580 --> 00:07:50,150
data that's an array of numbers telling

00:07:44,479 --> 00:07:53,090
you the decibels or wav values of your

00:07:50,150 --> 00:07:54,889
frequency and time domain data and it

00:07:53,090 --> 00:07:58,100
does a lot of other fancy stuff too that

00:07:54,889 --> 00:08:00,919
I didn't fully understand like lets you

00:07:58,100 --> 00:08:03,260
use fast Fourier transforms stuff like

00:08:00,919 --> 00:08:06,229
that but basically that just lets you

00:08:03,260 --> 00:08:09,169
set how many samples of data you want to

00:08:06,229 --> 00:08:12,560
get so your frequency bend count is half

00:08:09,169 --> 00:08:19,010
of that and that says I want X number of

00:08:12,560 --> 00:08:21,229
samples from my audio so for my first

00:08:19,010 --> 00:08:23,960
attempt I was kind of naive and I

00:08:21,229 --> 00:08:28,039
thought I've heard of video and audio

00:08:23,960 --> 00:08:31,370
elements in HTML so maybe we should just

00:08:28,039 --> 00:08:34,400
use that and populate the source with a

00:08:31,370 --> 00:08:36,469
video or audio file and that is

00:08:34,400 --> 00:08:39,200
supported by Web Audio API and there is

00:08:36,469 --> 00:08:42,200
a method create media element source

00:08:39,200 --> 00:08:45,880
which basically lets you take source

00:08:42,200 --> 00:08:50,450
data from and honey over video file and

00:08:45,880 --> 00:08:53,750
use that in Web Audio API the problem is

00:08:50,450 --> 00:08:55,370
it has to be playing when you use the

00:08:53,750 --> 00:08:58,190
methods on it or it's not going to get

00:08:55,370 --> 00:08:59,570
any data and you have to call it a whole

00:08:58,190 --> 00:09:02,150
bunch of times make sure it's playing

00:08:59,570 --> 00:09:02,870
start stop do a bunch of different stuff

00:09:02,150 --> 00:09:06,200
to get all

00:09:02,870 --> 00:09:12,260
the data you actually need from the

00:09:06,200 --> 00:09:14,839
source it also was only giving frequency

00:09:12,260 --> 00:09:16,700
data at first I wasn't really sure if I

00:09:14,839 --> 00:09:21,800
needed frequency or wavelength or what

00:09:16,700 --> 00:09:24,710
they did differently and so the

00:09:21,800 --> 00:09:26,300
frequency data I was getting was only

00:09:24,710 --> 00:09:29,420
while the file was playing I would take

00:09:26,300 --> 00:09:32,200
a small sample of frequency data which

00:09:29,420 --> 00:09:35,960
would basically just tell me the pitch

00:09:32,200 --> 00:09:38,330
of a tiny tiny little section of the

00:09:35,960 --> 00:09:41,600
file which isn't super helpful for

00:09:38,330 --> 00:09:43,760
determining dog barks and types so these

00:09:41,600 --> 00:09:46,580
small data snippets weren't super useful

00:09:43,760 --> 00:09:49,460
and even when we got them and they were

00:09:46,580 --> 00:09:53,680
reliable data wasn't really sure how to

00:09:49,460 --> 00:09:53,680
use that data to its fullest potential

00:09:53,770 --> 00:10:00,770
so I did some more googling played with

00:09:57,740 --> 00:10:03,650
the API some more tried to figure out a

00:10:00,770 --> 00:10:06,339
better way to do this so the thing I

00:10:03,650 --> 00:10:09,440
learned from attempt one to attempt to

00:10:06,339 --> 00:10:12,020
was playing the file while you're

00:10:09,440 --> 00:10:14,779
analyzing it is not ideal because you

00:10:12,020 --> 00:10:16,580
don't want it to just be playing the

00:10:14,779 --> 00:10:19,250
whole time and say it's a twenty second

00:10:16,580 --> 00:10:21,760
final you have to wait 20 seconds for it

00:10:19,250 --> 00:10:25,370
to finish playing to fully analyze it

00:10:21,760 --> 00:10:30,740
it's just kind of clunky and not my deal

00:10:25,370 --> 00:10:34,010
so Web Audio API gives you a thing

00:10:30,740 --> 00:10:36,140
called offline audio context which is

00:10:34,010 --> 00:10:38,300
much better because then instead of just

00:10:36,140 --> 00:10:41,990
playing the file and taking little

00:10:38,300 --> 00:10:44,839
samples you can load the entire file

00:10:41,990 --> 00:10:48,400
into a buffer and then you can take that

00:10:44,839 --> 00:10:51,440
buffer and use get by time domain data

00:10:48,400 --> 00:10:57,920
so you're basically getting the loudness

00:10:51,440 --> 00:10:59,630
of your sample across time and you do it

00:10:57,920 --> 00:11:02,630
for the whole thing for the whole buffer

00:10:59,630 --> 00:11:06,890
so then you can see where it spikes

00:11:02,630 --> 00:11:09,650
there are barks potentially because it's

00:11:06,890 --> 00:11:12,640
spiked which means it's louder so there

00:11:09,650 --> 00:11:16,190
might be a bark there we also hooked up

00:11:12,640 --> 00:11:18,740
the ability to upload files using a

00:11:16,190 --> 00:11:22,370
really helpful add-on umber file upload

00:11:18,740 --> 00:11:24,500
and it makes it super easy to upload

00:11:22,370 --> 00:11:28,190
files to drag-and-drop to upload files

00:11:24,500 --> 00:11:31,610
all this good stuff and we also built in

00:11:28,190 --> 00:11:35,990
the ability to use the microphone so you

00:11:31,610 --> 00:11:40,190
can use getusermedia to get the

00:11:35,990 --> 00:11:43,640
microphone data and started exploring

00:11:40,190 --> 00:11:46,910
visualizations heavily borrowing from

00:11:43,640 --> 00:11:49,760
this visualizing audio series that has a

00:11:46,910 --> 00:11:52,520
lot of great examples showing how to do

00:11:49,760 --> 00:11:53,840
a bunch of these different things I'm

00:11:52,520 --> 00:11:56,270
going to show you a little bit about

00:11:53,840 --> 00:12:02,720
what we've been doing to do some of this

00:11:56,270 --> 00:12:06,860
stuff so everything is a glimmer

00:12:02,720 --> 00:12:09,340
component and the audio capturer as I

00:12:06,860 --> 00:12:13,400
just mentioned uses this getusermedia

00:12:09,340 --> 00:12:16,040
method so basically this thing just uses

00:12:13,400 --> 00:12:19,910
a built-in method grab some audio from

00:12:16,040 --> 00:12:23,090
your microphone and passes that into the

00:12:19,910 --> 00:12:26,540
audio analyzer so on the flip side you

00:12:23,090 --> 00:12:29,660
can use the audio uploader which is

00:12:26,540 --> 00:12:32,030
basically just a wrapper for Amber file

00:12:29,660 --> 00:12:35,270
upload and it's gonna do the same thing

00:12:32,030 --> 00:12:39,830
when you add a file it's gonna pass all

00:12:35,270 --> 00:12:41,570
that data to our service and the service

00:12:39,830 --> 00:12:45,940
is where the magic happens it's this

00:12:41,570 --> 00:12:48,050
audio analyzer service and it is

00:12:45,940 --> 00:12:51,800
essentially just rapping vanilla

00:12:48,050 --> 00:12:54,070
JavaScript so there's no crazy stuff to

00:12:51,800 --> 00:12:57,700
do here that's amber specific or

00:12:54,070 --> 00:13:00,050
anything that would trip you up it's

00:12:57,700 --> 00:13:01,370
essentially you can just tie all these

00:13:00,050 --> 00:13:04,490
things together in the various

00:13:01,370 --> 00:13:07,780
components into this one service and get

00:13:04,490 --> 00:13:13,040
a nice neat package that amber provides

00:13:07,780 --> 00:13:17,390
to help wrap this thing we're doing here

00:13:13,040 --> 00:13:21,230
and the magic is this analyze audio

00:13:17,390 --> 00:13:23,450
function which takes the thing I just

00:13:21,230 --> 00:13:26,870
mentioned the offline audio context

00:13:23,450 --> 00:13:29,720
which is just a fancy way of saying we

00:13:26,870 --> 00:13:32,990
have a buffer of audio and

00:13:29,720 --> 00:13:35,389
we want to take that audio and pass it

00:13:32,990 --> 00:13:37,310
into a function while it's being

00:13:35,389 --> 00:13:38,930
processed so that we can get the data

00:13:37,310 --> 00:13:42,350
out that we need to determine the dog

00:13:38,930 --> 00:13:47,029
works and that's provided down here so

00:13:42,350 --> 00:13:48,769
you can see as it's processed we do some

00:13:47,029 --> 00:13:58,040
different things to get data album and

00:13:48,769 --> 00:14:00,230
we'll talk more about those later so the

00:13:58,040 --> 00:14:03,620
next part is actually figuring out dog

00:14:00,230 --> 00:14:06,170
bark science and I am NOT an expert in

00:14:03,620 --> 00:14:08,480
dog parks this project is based off of

00:14:06,170 --> 00:14:11,509
several different scientific studies

00:14:08,480 --> 00:14:13,550
where they are experts in this but it's

00:14:11,509 --> 00:14:16,430
based on my personal interpretation of

00:14:13,550 --> 00:14:18,439
these results so if you find anything

00:14:16,430 --> 00:14:21,970
that's not super accurate please let me

00:14:18,439 --> 00:14:21,970
know we would love to keep improving it

00:14:22,810 --> 00:14:28,759
so these studies that I mentioned they

00:14:26,569 --> 00:14:32,689
found that dog barks are somewhere in

00:14:28,759 --> 00:14:35,089
the 250 to 4,000 Hertz range at most

00:14:32,689 --> 00:14:36,889
shelters they just measured out Poteau

00:14:35,089 --> 00:14:40,189
dogs barking as shelters got that data

00:14:36,889 --> 00:14:42,259
and they also determined that all breeds

00:14:40,189 --> 00:14:47,899
have some part of their bark that's in

00:14:42,259 --> 00:14:50,509
the 1,000 to 2,000 Hertz range so you

00:14:47,899 --> 00:14:52,850
can be sure that within those ranges and

00:14:50,509 --> 00:14:55,459
somewhere in the 80 to 90 decibels range

00:14:52,850 --> 00:14:58,069
from about five meters away is all kind

00:14:55,459 --> 00:15:01,069
of the spectrum of dog bark data and

00:14:58,069 --> 00:15:07,189
anything outside of that can be mostly

00:15:01,069 --> 00:15:10,279
thrown out so there are three to four

00:15:07,189 --> 00:15:13,699
buckets of bark types we're gonna focus

00:15:10,279 --> 00:15:17,629
on for this project and the first one is

00:15:13,699 --> 00:15:20,740
more of an alert style bark which could

00:15:17,629 --> 00:15:23,209
be rapid barking at a mid-range pitch

00:15:20,740 --> 00:15:25,069
and it can signal to the pack that

00:15:23,209 --> 00:15:26,809
there's a problem and what the pack

00:15:25,069 --> 00:15:28,459
leader to come check it out or maybe

00:15:26,809 --> 00:15:33,139
there's an intruder coming in or things

00:15:28,459 --> 00:15:37,100
like that then there are happier ones

00:15:33,139 --> 00:15:39,319
like greeting or playful so it might be

00:15:37,100 --> 00:15:42,000
one mark for a greeting or for playful

00:15:39,319 --> 00:15:45,630
it could be like stunner bark or

00:15:42,000 --> 00:15:48,360
various different happier parts and for

00:15:45,630 --> 00:15:52,650
distress barking that kind of is a broad

00:15:48,360 --> 00:15:54,180
category for now but it kind of would be

00:15:52,650 --> 00:15:57,630
if they're lonely or in need of

00:15:54,180 --> 00:16:00,870
companionship or even if they were hurt

00:15:57,630 --> 00:16:03,900
or scared or things like that but even

00:16:00,870 --> 00:16:05,600
with just these few buckets and the

00:16:03,900 --> 00:16:08,010
small amount of data that we have there

00:16:05,600 --> 00:16:12,080
seemingly infinite combinations of

00:16:08,010 --> 00:16:14,760
different nuanced dog bark types so

00:16:12,080 --> 00:16:20,820
we're just gonna focus on these as broad

00:16:14,760 --> 00:16:25,050
categories for now so as I mentioned

00:16:20,820 --> 00:16:28,710
dog barks are only in the 250 to 4000

00:16:25,050 --> 00:16:31,290
Hertz range so anything above that we

00:16:28,710 --> 00:16:32,910
can go ahead and take out because we

00:16:31,290 --> 00:16:34,650
don't need that anymore

00:16:32,910 --> 00:16:37,920
we only care about the stuff in the

00:16:34,650 --> 00:16:42,420
range that a dog bark could be in so

00:16:37,920 --> 00:16:43,980
once we know the limit of pinches

00:16:42,420 --> 00:16:46,920
essentially they're from the frequency

00:16:43,980 --> 00:16:48,570
we want to find wearing spikes so if

00:16:46,920 --> 00:16:51,870
there is a spike we know and going

00:16:48,570 --> 00:16:55,230
probably barked there so if the loudness

00:16:51,870 --> 00:16:56,850
goes up really sharply and then Falls

00:16:55,230 --> 00:16:58,860
and then there's another really sharp

00:16:56,850 --> 00:17:02,040
loudness because soon maybe there's two

00:16:58,860 --> 00:17:04,800
barks there so we're gonna take all of

00:17:02,040 --> 00:17:09,170
the data from that and essentially get

00:17:04,800 --> 00:17:13,560
the averages or the modes also sometimes

00:17:09,170 --> 00:17:19,199
of these things to decide whether it's a

00:17:13,560 --> 00:17:23,579
low mid or high-pitched bark and then

00:17:19,199 --> 00:17:26,220
we're gonna take that data and map it

00:17:23,579 --> 00:17:29,700
further to determine how many barks

00:17:26,220 --> 00:17:35,160
there were and exactly the nuanced

00:17:29,700 --> 00:17:37,200
meaning behind the mark so we've talked

00:17:35,160 --> 00:17:40,590
a lot about vanilla JavaScript and the

00:17:37,200 --> 00:17:42,360
Web Audio API here and that's by design

00:17:40,590 --> 00:17:45,150
this what we use the most other than

00:17:42,360 --> 00:17:49,110
this but I think it really shows that

00:17:45,150 --> 00:17:52,080
ember can shine as a great building

00:17:49,110 --> 00:17:52,920
block and starting point for projects

00:17:52,080 --> 00:17:54,450
like this pretty

00:17:52,920 --> 00:17:56,340
anything you want to do can be built

00:17:54,450 --> 00:17:58,980
into ember and ember has strong

00:17:56,340 --> 00:18:01,710
conventions that help you structure the

00:17:58,980 --> 00:18:03,600
way your files are laid out and has

00:18:01,710 --> 00:18:06,930
things like add-ons that you can install

00:18:03,600 --> 00:18:08,370
which make working with different

00:18:06,930 --> 00:18:09,810
functionalities super easy you don't

00:18:08,370 --> 00:18:11,760
have to worry about all the plumbing it

00:18:09,810 --> 00:18:13,980
just kind of works and glimmer

00:18:11,760 --> 00:18:15,960
components are great for all the power

00:18:13,980 --> 00:18:18,660
glimmer provides and all the tracked

00:18:15,960 --> 00:18:20,960
properties now and all that stuff a lot

00:18:18,660 --> 00:18:23,640
closer to vanilla JavaScript

00:18:20,960 --> 00:18:24,390
implementations and if you haven't

00:18:23,640 --> 00:18:27,750
checked it out you should definitely

00:18:24,390 --> 00:18:31,020
check out the new stuff but the main

00:18:27,750 --> 00:18:33,990
things that we got here are amber

00:18:31,020 --> 00:18:37,530
serviceworker which allows our app to

00:18:33,990 --> 00:18:41,580
work offline and ember web app which

00:18:37,530 --> 00:18:44,610
allows our have to be installed so you

00:18:41,580 --> 00:18:48,330
can install it anywhere progressive web

00:18:44,610 --> 00:18:54,150
apps can be installed so chrome phones

00:18:48,330 --> 00:19:06,000
etc so give it a little look into that

00:18:54,150 --> 00:19:10,670
here so if you see this little plus

00:19:06,000 --> 00:19:14,190
button you can click that and install it

00:19:10,670 --> 00:19:16,470
and then you can run it as essentially

00:19:14,190 --> 00:19:19,500
an app on your computer that's wrapped

00:19:16,470 --> 00:19:21,000
around Chrome obviously but it's pretty

00:19:19,500 --> 00:19:22,530
cool and you can have it on your home

00:19:21,000 --> 00:19:29,580
screen on your phone and things like

00:19:22,530 --> 00:19:32,970
that too so that stuff is driven by just

00:19:29,580 --> 00:19:42,420
those couple add-ons in verse

00:19:32,970 --> 00:19:44,610
serviceworker and ember web app and you

00:19:42,420 --> 00:19:46,260
pretty much just install those an ember

00:19:44,610 --> 00:19:48,720
serviceworker has a lot of different

00:19:46,260 --> 00:19:51,270
packages we're using the prim BIR

00:19:48,720 --> 00:19:54,600
package here so that we can do fast food

00:19:51,270 --> 00:19:59,960
and prim BER and everything is Jam stack

00:19:54,600 --> 00:19:59,960
static stuff and

00:20:06,890 --> 00:20:14,490
so there's a manifesto j/s that you can

00:20:11,520 --> 00:20:16,320
do with ember web app which lets you set

00:20:14,490 --> 00:20:18,240
your name of your app and description

00:20:16,320 --> 00:20:19,890
and your different icons and things so

00:20:18,240 --> 00:20:22,409
that when you go to install it on

00:20:19,890 --> 00:20:25,610
various devices it looks and feels and

00:20:22,409 --> 00:20:25,610
behaves like you expect it to

00:20:36,410 --> 00:20:44,270
so let's look at some of the bark type

00:20:45,950 --> 00:20:50,000
utilities here and things that we're

00:20:48,150 --> 00:20:54,990
using to get some of the more specific

00:20:50,000 --> 00:20:56,640
bark data so the methods that matter the

00:20:54,990 --> 00:20:59,190
most here are this determined bark

00:20:56,640 --> 00:21:01,980
occurred which basically just checks the

00:20:59,190 --> 00:21:04,110
different loudness values and tells you

00:21:01,980 --> 00:21:07,049
if a bark occurred in that segment or

00:21:04,110 --> 00:21:08,790
not and there's a determined bark pitch

00:21:07,049 --> 00:21:13,290
which is basically gonna tell you was

00:21:08,790 --> 00:21:17,220
the bark low mid or high pitch so we can

00:21:13,290 --> 00:21:20,730
use those to then go into this

00:21:17,220 --> 00:21:23,370
determined bark type function and kind

00:21:20,730 --> 00:21:26,100
of check how many there were what their

00:21:23,370 --> 00:21:29,210
pitches were and map it to those types

00:21:26,100 --> 00:21:34,110
of barks we were talking about earlier

00:21:29,210 --> 00:21:38,250
so if there's one bark and it's high

00:21:34,110 --> 00:21:40,559
it's an alert if there's one bark and

00:21:38,250 --> 00:21:42,809
it's low its distress and otherwise if

00:21:40,559 --> 00:21:46,740
it's kind of mid-range is probably just

00:21:42,809 --> 00:21:49,880
a greeting and if it's two it's usually

00:21:46,740 --> 00:21:54,059
a greeting and then for more than two

00:21:49,880 --> 00:21:59,100
you've got if it's has some mid

00:21:54,059 --> 00:22:01,470
frequencies its playful and other ones

00:21:59,100 --> 00:22:02,880
can also be playful but if it's all low

00:22:01,470 --> 00:22:06,510
it's usually alert that's more

00:22:02,880 --> 00:22:09,990
aggressive low repeated barks so that's

00:22:06,510 --> 00:22:17,429
kind of how we're getting the data to

00:22:09,990 --> 00:22:19,590
map to the bark types there and in the

00:22:17,429 --> 00:22:23,340
future there are several things we could

00:22:19,590 --> 00:22:25,440
do we can add more bark types we

00:22:23,340 --> 00:22:27,960
basically have only those three to four

00:22:25,440 --> 00:22:33,360
ruff categories now but there are at

00:22:27,960 --> 00:22:35,940
least 10 basic minimum types and we

00:22:33,360 --> 00:22:37,890
could support those the one that's most

00:22:35,940 --> 00:22:40,890
interesting to me would be to support

00:22:37,890 --> 00:22:42,630
the lonely bark where it's a string of

00:22:40,890 --> 00:22:45,270
barks followed by a long period of

00:22:42,630 --> 00:22:46,169
silence followed by more barks because

00:22:45,270 --> 00:22:48,450
that's kind of saying

00:22:46,169 --> 00:22:50,850
is anyone there lonely and that would

00:22:48,450 --> 00:22:53,309
help you identify episodes of separation

00:22:50,850 --> 00:22:53,989
anxiety for dogs that have problems with

00:22:53,309 --> 00:22:58,590
that

00:22:53,989 --> 00:23:00,269
and we could also refine the frequency

00:22:58,590 --> 00:23:01,919
ranges a bit because right now we just

00:23:00,269 --> 00:23:05,129
have the three buckets the low mid and

00:23:01,919 --> 00:23:09,149
high and we could have a mint high mid

00:23:05,129 --> 00:23:12,090
low etc and I would help us kind of

00:23:09,149 --> 00:23:16,259
refine even more which maps to which

00:23:12,090 --> 00:23:20,340
frequency and the most the coolest part

00:23:16,259 --> 00:23:22,440
of the new features is we could add a

00:23:20,340 --> 00:23:26,369
talkback feature which I think would be

00:23:22,440 --> 00:23:28,950
the standout feature of this app so if

00:23:26,369 --> 00:23:31,799
your dog says something to you and then

00:23:28,950 --> 00:23:35,249
you recording to get a response

00:23:31,799 --> 00:23:37,649
it could take various dog barks that

00:23:35,249 --> 00:23:39,350
defines that would respond in the way

00:23:37,649 --> 00:23:43,230
you want to respond to that Park and

00:23:39,350 --> 00:23:45,720
build a custom mark to respond to them

00:23:43,230 --> 00:23:48,960
of the exact frequency and number of

00:23:45,720 --> 00:23:50,399
barks for the response and then you

00:23:48,960 --> 00:23:52,710
could kind of go back and forth and

00:23:50,399 --> 00:23:54,389
maybe communicate things with them and

00:23:52,710 --> 00:23:57,359
you know kind of tell them what to do

00:23:54,389 --> 00:24:00,659
and how you feel and that would help

00:23:57,359 --> 00:24:05,820
break down barriers between the normal

00:24:00,659 --> 00:24:08,009
communication of you and your dog so the

00:24:05,820 --> 00:24:10,220
demo that we played with is out on wolf

00:24:08,009 --> 00:24:13,129
dot plus-- right now you can try it out

00:24:10,220 --> 00:24:19,859
please do please let us know if you

00:24:13,129 --> 00:24:21,539
encounter any issues these are some of

00:24:19,859 --> 00:24:25,649
the sources we use the Web Audio API

00:24:21,539 --> 00:24:29,609
Doc's Stack Overflow posts articles

00:24:25,649 --> 00:24:34,499
about dog barks and visualizations and

00:24:29,609 --> 00:24:36,239
things in the Web Audio API and thank

00:24:34,499 --> 00:24:38,759
you for listening and for your attention

00:24:36,239 --> 00:24:40,409
again I'm Robbie Wagner you can always

00:24:38,759 --> 00:24:43,289
chat with me about ember

00:24:40,409 --> 00:24:45,989
please do in discord or via email or

00:24:43,289 --> 00:24:49,590
however you want to reach out our W

00:24:45,989 --> 00:24:52,559
Wagner 90 on discord I'll be hanging out

00:24:49,590 --> 00:24:54,119
there pretty much all the time and you

00:24:52,559 --> 00:24:55,739
can email me at Robbie at shipshape

00:24:54,119 --> 00:24:58,590
today I would love to talk with you

00:24:55,739 --> 00:25:00,650
thanks for your time

00:24:58,590 --> 00:25:00,650

YouTube URL: https://www.youtube.com/watch?v=Kw0V9HvMpI4


