Title: Braden Douglass - Breaking Up The Monolith With EQ | SolidusConf 2019
Publication date: 2019-12-06
Playlist: SolidusConf 2019
Description: 
	Braden Douglass breaks up the monolith.

"Breaking Up The Monolith With EQ"
Emotional intelligence is sometimes missing from the software engineering realm. However, how can we as engineers and managers utilize it when feeling the pain of a monolithic application design? How do EQ markers equate to when and how a monolith should be deconstructed? The talk will explore the fundamentals of emotional intelligence in an engineering team and how to utilize tools from the 'emotional intelligence tool-belt' to read when a team is ready to deconstruct their monolith.

Learn more about Solidus at solidus.io
Captions: 
	00:00:02,130 --> 00:00:05,160
[Music]

00:00:09,170 --> 00:00:15,420
[Music]

00:00:13,209 --> 00:00:19,240
yes lid stars definitely my favorite

00:00:15,420 --> 00:00:22,449
product that we make so about kind of

00:00:19,240 --> 00:00:23,860
about me and about glass a some of us

00:00:22,449 --> 00:00:26,439
have heard of glass day before some of

00:00:23,860 --> 00:00:28,809
us haven't we are a skin first beauty

00:00:26,439 --> 00:00:31,149
e-commerce company and some of us have

00:00:28,809 --> 00:00:33,640
spoken at past free and solidus

00:00:31,149 --> 00:00:35,530
conferences throughout the years for my

00:00:33,640 --> 00:00:37,270
specific day-to-day what I actually do

00:00:35,530 --> 00:00:40,300
is I spend most of my time making

00:00:37,270 --> 00:00:41,820
internal tooling somewhat wonderful for

00:00:40,300 --> 00:00:44,170
the company

00:00:41,820 --> 00:00:46,690
however I've worked kind of across all

00:00:44,170 --> 00:00:48,039
teams that glass a so if anyone wants to

00:00:46,690 --> 00:00:50,350
talk about glass he ever loves talk

00:00:48,039 --> 00:00:53,399
about glass a we have many of the fans

00:00:50,350 --> 00:00:57,100
out there feel free to grab me whenever

00:00:53,399 --> 00:00:59,440
I get this I get this actually a lot

00:00:57,100 --> 00:01:02,319
I've actually never done a Tech Talk at

00:00:59,440 --> 00:01:06,100
a solid a sorcery conference ever I kind

00:01:02,319 --> 00:01:07,840
of always do soft talks and my answer

00:01:06,100 --> 00:01:08,650
why I don't do tech talks is usually

00:01:07,840 --> 00:01:10,690
terrible

00:01:08,650 --> 00:01:12,210
they involve like sidestepping and like

00:01:10,690 --> 00:01:14,290
saying I only do them for like little

00:01:12,210 --> 00:01:16,540
meetups and stuff small regional

00:01:14,290 --> 00:01:19,360
conferences however this year I actually

00:01:16,540 --> 00:01:22,150
have a really good excuse and I've been

00:01:19,360 --> 00:01:24,360
mostly in JavaScript for the last year

00:01:22,150 --> 00:01:27,430
year and a half

00:01:24,360 --> 00:01:30,010
mostly in graph QL and mostly in like

00:01:27,430 --> 00:01:33,280
federated services so all of that kind

00:01:30,010 --> 00:01:36,280
of enforces or in from in forms kind of

00:01:33,280 --> 00:01:40,210
the rest of this talk but before that

00:01:36,280 --> 00:01:42,400
let's do a little history so a few years

00:01:40,210 --> 00:01:44,260
ago I was up on the stage much like this

00:01:42,400 --> 00:01:47,140
in front of many of you actually and

00:01:44,260 --> 00:01:49,810
talking about how to inject empathy in

00:01:47,140 --> 00:01:52,720
rest api's I needed that talk with a

00:01:49,810 --> 00:01:57,660
hypothesis a hypothesis that graph QL

00:01:52,720 --> 00:02:01,120
could be a more empathic API interface

00:01:57,660 --> 00:02:03,190
it's gonna be had a few years last year

00:02:01,120 --> 00:02:06,160
I kind of did a follow up here and I

00:02:03,190 --> 00:02:08,289
said that however like rest graph qo the

00:02:06,160 --> 00:02:10,569
technology itself wasn't the path to

00:02:08,289 --> 00:02:12,790
empathy ultimately I found that there

00:02:10,569 --> 00:02:14,800
was a single truth that ran between both

00:02:12,790 --> 00:02:17,500
of these talks and that was the fact

00:02:14,800 --> 00:02:19,270
that empathic solutions stemmed really

00:02:17,500 --> 00:02:23,160
from the team implementing the features

00:02:19,270 --> 00:02:23,160
and not so much the technology

00:02:23,410 --> 00:02:26,920
so with kind of all that out of the way

00:02:25,240 --> 00:02:28,960
what on earth could I talk about this

00:02:26,920 --> 00:02:30,370
year and some of these topics actually

00:02:28,960 --> 00:02:33,730
have been already mentioned which i

00:02:30,370 --> 00:02:36,400
think is amazing this is my new favorite

00:02:33,730 --> 00:02:36,760
one actually no this is my new favorite

00:02:36,400 --> 00:02:40,090
on

00:02:36,760 --> 00:02:41,770
yeah we're maybe that one so with

00:02:40,090 --> 00:02:43,710
everyone probably on their edge of their

00:02:41,770 --> 00:02:48,220
seat

00:02:43,710 --> 00:02:52,900
this year's talk is yes try not to be

00:02:48,220 --> 00:02:56,400
afraid so I'm gonna start like the

00:02:52,900 --> 00:02:58,330
emotional intelligence end of this

00:02:56,400 --> 00:03:00,490
mainly because I find it to be the

00:02:58,330 --> 00:03:03,250
hardest to kind of understand and then

00:03:00,490 --> 00:03:05,590
we'll move slowly into how emotional

00:03:03,250 --> 00:03:08,430
intelligence and like these five factors

00:03:05,590 --> 00:03:12,160
of emotional intelligence can be mapped

00:03:08,430 --> 00:03:14,920
into a team beginning their micro

00:03:12,160 --> 00:03:16,090
service journey so starting with

00:03:14,920 --> 00:03:17,440
emotional intelligence that starts with

00:03:16,090 --> 00:03:21,880
this man right here his name's Daniel

00:03:17,440 --> 00:03:24,550
Goleman in his book in 1999 or the 90s

00:03:21,880 --> 00:03:27,580
basically he wrote the book was called

00:03:24,550 --> 00:03:31,720
why it can matter why it can matter and

00:03:27,580 --> 00:03:33,130
why EQ is more important than IQ Daniel

00:03:31,720 --> 00:03:35,590
basically split the brain into two

00:03:33,130 --> 00:03:38,440
different forms one driven by pure logic

00:03:35,590 --> 00:03:41,080
which many of us likely use day in and

00:03:38,440 --> 00:03:42,610
day out and the other one aiding in

00:03:41,080 --> 00:03:45,390
humans as they're like instinctive

00:03:42,610 --> 00:03:51,520
feelings side so kind of like a cool

00:03:45,390 --> 00:03:53,980
dual edged brain so the term emotional

00:03:51,520 --> 00:03:56,440
intelligence what he kind of codified in

00:03:53,980 --> 00:03:58,180
that book is really here so it's the

00:03:56,440 --> 00:04:00,810
capability of individuals to recognize

00:03:58,180 --> 00:04:03,040
their own emotions and those of others

00:04:00,810 --> 00:04:05,980
discerning between different feelings

00:04:03,040 --> 00:04:07,450
and labeling them appropriately so you

00:04:05,980 --> 00:04:09,640
use emotional intelligence to guide

00:04:07,450 --> 00:04:11,440
thinking and behavior and manage or

00:04:09,640 --> 00:04:14,800
adjust emotions to adapt to environments

00:04:11,440 --> 00:04:17,400
or achieve ones goals and a lot of what

00:04:14,800 --> 00:04:19,540
this talk is is kind of that last

00:04:17,400 --> 00:04:23,080
sentence there's two shadow to your

00:04:19,540 --> 00:04:27,100
goals so this all starts in five parts

00:04:23,080 --> 00:04:28,990
like I mentioned each one is like a

00:04:27,100 --> 00:04:31,240
distinct camp of emotional intelligence

00:04:28,990 --> 00:04:33,580
with its own rules its own strengths and

00:04:31,240 --> 00:04:35,800
weaknesses and so let's take some time

00:04:33,580 --> 00:04:38,669
to go over each five

00:04:35,800 --> 00:04:44,830
items and then moving to microservices

00:04:38,669 --> 00:04:46,150
so the first one is self-awareness this

00:04:44,830 --> 00:04:48,370
shows itself in people where they

00:04:46,150 --> 00:04:50,020
understand their emotions and that will

00:04:48,370 --> 00:04:52,240
kind of I mean obviously that will be a

00:04:50,020 --> 00:04:54,159
underlying topic of the entire talk is

00:04:52,240 --> 00:04:55,960
understanding your emotions they also

00:04:54,159 --> 00:04:57,190
don't allow these emotion or these

00:04:55,960 --> 00:05:00,159
people don't allow these emotions to

00:04:57,190 --> 00:05:01,659
control or direct them due to this these

00:05:00,159 --> 00:05:05,409
people tend to embody a lot of

00:05:01,659 --> 00:05:07,380
self-confidence but they also have high

00:05:05,409 --> 00:05:10,479
awareness of themselves and high

00:05:07,380 --> 00:05:15,780
understanding of other people's emotions

00:05:10,479 --> 00:05:19,240
as well so the second is self-regulation

00:05:15,780 --> 00:05:20,919
this would be team members who embody or

00:05:19,240 --> 00:05:23,470
team members who are folks with active

00:05:20,919 --> 00:05:25,780
thinkers they think way before they make

00:05:23,470 --> 00:05:28,590
any decisions and due to this they tend

00:05:25,780 --> 00:05:31,060
not to get too jealous or too angry

00:05:28,590 --> 00:05:33,759
these people oftentimes relish in their

00:05:31,060 --> 00:05:35,860
even-keel this so these people would be

00:05:33,759 --> 00:05:39,900
maybe what I would consider nonplussed

00:05:35,860 --> 00:05:44,169
most of the day the third being

00:05:39,900 --> 00:05:45,190
motivation what do you people like we

00:05:44,169 --> 00:05:47,770
know what motivation looks like they

00:05:45,190 --> 00:05:49,330
take channel take challenges head-on for

00:05:47,770 --> 00:05:50,740
engineers this is the easiest part of

00:05:49,330 --> 00:05:53,289
emotional intelligence to understand

00:05:50,740 --> 00:05:54,699
again in my humble opinion people who

00:05:53,289 --> 00:05:57,310
are motivated are oftentimes highly

00:05:54,699 --> 00:05:59,560
productive and almost are always

00:05:57,310 --> 00:06:03,659
reaching for spaces to try immediate

00:05:59,560 --> 00:06:06,310
gratification for long term successes

00:06:03,659 --> 00:06:09,130
the one that I have kind of focused on

00:06:06,310 --> 00:06:10,930
mainly for the roommate about last two

00:06:09,130 --> 00:06:12,580
or three years is empathy I've spoken

00:06:10,930 --> 00:06:15,550
about this and like I said at numerous

00:06:12,580 --> 00:06:17,940
conference talks however for those

00:06:15,550 --> 00:06:20,139
people who've missed them empathy is

00:06:17,940 --> 00:06:22,419
usually considered the superhuman

00:06:20,139 --> 00:06:24,069
ability of emotional intelligence it's

00:06:22,419 --> 00:06:27,520
the ability to recognize the needs and

00:06:24,069 --> 00:06:29,289
emotions of the folks around you these

00:06:27,520 --> 00:06:31,930
people are quick to manage relations

00:06:29,289 --> 00:06:34,630
they listen super well and they relate

00:06:31,930 --> 00:06:38,889
to others in a very like almost instant

00:06:34,630 --> 00:06:40,990
way so a good member of your team might

00:06:38,889 --> 00:06:43,330
look like someone who's always welcoming

00:06:40,990 --> 00:06:45,909
someone to ask questions before make

00:06:43,330 --> 00:06:46,870
statements and code reviews and it's

00:06:45,909 --> 00:06:48,150
generally

00:06:46,870 --> 00:06:50,570
maybe like extreme

00:06:48,150 --> 00:06:55,500
well adept at asynchronous communication

00:06:50,570 --> 00:06:58,080
and last but not least is the most

00:06:55,500 --> 00:07:00,750
important one I think of if out of the

00:06:58,080 --> 00:07:02,310
five and that is social skills so these

00:07:00,750 --> 00:07:04,260
are the folks who master building

00:07:02,310 --> 00:07:06,390
relationships they're oftentimes highly

00:07:04,260 --> 00:07:09,180
liked these are people are oftentimes

00:07:06,390 --> 00:07:11,610
considered highly emotional emotionally

00:07:09,180 --> 00:07:13,920
intelligent but also this kind of

00:07:11,610 --> 00:07:17,040
extends beyond the true idea of social

00:07:13,920 --> 00:07:21,510
skills so how do people respond like a

00:07:17,040 --> 00:07:23,910
good example is smiling at someone so

00:07:21,510 --> 00:07:25,680
they smile back so you know that person

00:07:23,910 --> 00:07:27,630
feels good because usually when humans

00:07:25,680 --> 00:07:31,080
smile get a shot of dopamine so it's

00:07:27,630 --> 00:07:33,060
this kind of like almost mastery of

00:07:31,080 --> 00:07:34,770
being able to manipulate again I don't

00:07:33,060 --> 00:07:36,390
like that word but that is a way of

00:07:34,770 --> 00:07:46,400
looking at it manipulate other people's

00:07:36,390 --> 00:07:48,510
emotions but what about micro servers is

00:07:46,400 --> 00:07:50,460
now that everyone is a good baseline

00:07:48,510 --> 00:07:51,230
idea of what makes up emotional

00:07:50,460 --> 00:07:55,440
intelligence

00:07:51,230 --> 00:07:58,110
how many take these five parts engage if

00:07:55,440 --> 00:08:01,050
a team is ready to take on a monolith

00:07:58,110 --> 00:08:02,430
and break it down into services before

00:08:01,050 --> 00:08:05,550
we directly answer that question let's

00:08:02,430 --> 00:08:08,040
turn our gaze towards what a monolith is

00:08:05,550 --> 00:08:10,020
really these are oftentimes easy to

00:08:08,040 --> 00:08:12,780
implement they're easy to end test which

00:08:10,020 --> 00:08:14,550
is why they're so popular I think the

00:08:12,780 --> 00:08:16,290
majestic monolith is always a wonderful

00:08:14,550 --> 00:08:20,580
starting point for any company so

00:08:16,290 --> 00:08:22,410
they're great for startups they tend to

00:08:20,580 --> 00:08:26,550
be easy to load balance and therefore

00:08:22,410 --> 00:08:30,360
like scale almost unlimited just sort

00:08:26,550 --> 00:08:31,710
behind load balancer basically we all

00:08:30,360 --> 00:08:33,120
know what a monolith looks like right

00:08:31,710 --> 00:08:34,890
because we're used to solid for Eustace

00:08:33,120 --> 00:08:36,870
free a lot of times this has been

00:08:34,890 --> 00:08:39,300
criticized of the rails community in

00:08:36,870 --> 00:08:41,010
general and all of us have been in both

00:08:39,300 --> 00:08:42,300
of those communities or most of us have

00:08:41,010 --> 00:08:45,270
been in both of those communities for

00:08:42,300 --> 00:08:48,750
quite some time so this is what they

00:08:45,270 --> 00:08:53,670
normally look like rough diagram if

00:08:48,750 --> 00:08:54,930
everyone lights diagrams wait moving for

00:08:53,670 --> 00:08:57,090
this monolith to microservices like

00:08:54,930 --> 00:08:59,290
structure isn't something that we should

00:08:57,090 --> 00:09:01,690
be just doing

00:08:59,290 --> 00:09:05,260
whenever right like the idea is don't

00:09:01,690 --> 00:09:07,390
read on a medium article and immediately

00:09:05,260 --> 00:09:11,230
bring up a roadmap to change to

00:09:07,390 --> 00:09:14,130
micro-services it really takes kind of

00:09:11,230 --> 00:09:17,680
like a team that's ready for this before

00:09:14,130 --> 00:09:23,020
actually implementing it and a natural

00:09:17,680 --> 00:09:25,210
question might be this right here maybe

00:09:23,020 --> 00:09:27,370
okay so as of maybe five years ago is

00:09:25,210 --> 00:09:31,330
very in vogue to rewrite entire systems

00:09:27,370 --> 00:09:33,820
on to new platforms so be that rails 5

00:09:31,330 --> 00:09:35,740
to Rail six or even like spree and

00:09:33,820 --> 00:09:36,250
solidus jumping versions this was super

00:09:35,740 --> 00:09:39,580
in vogue

00:09:36,250 --> 00:09:42,370
I don't think that this is quite there

00:09:39,580 --> 00:09:44,080
anymore I haven't seen it in maybe like

00:09:42,370 --> 00:09:46,270
two or three years really because it's

00:09:44,080 --> 00:09:48,760
actually like a really scary thing to do

00:09:46,270 --> 00:09:50,290
it's very scary to just like port all of

00:09:48,760 --> 00:09:52,420
your data on to a brand new system and

00:09:50,290 --> 00:09:53,620
just like throw it out into the wild yes

00:09:52,420 --> 00:09:55,240
if someone let's have like blue green

00:09:53,620 --> 00:09:59,350
deploys we can kind of roll back easily

00:09:55,240 --> 00:10:01,420
but even so it's not it's not it's not

00:09:59,350 --> 00:10:08,740
easy so what could be a less stressful

00:10:01,420 --> 00:10:10,090
idea Martin Fowler is probably one of

00:10:08,740 --> 00:10:11,350
the famous more famous people who are

00:10:10,090 --> 00:10:13,570
talking about micro services over the

00:10:11,350 --> 00:10:16,030
last like probably three or four years

00:10:13,570 --> 00:10:18,430
and he said this in a quote Arnie's blog

00:10:16,030 --> 00:10:20,770
post entitled monolith first basically

00:10:18,430 --> 00:10:23,410
it's saying build your monolith first

00:10:20,770 --> 00:10:25,750
figure out the pain points and then

00:10:23,410 --> 00:10:27,430
figure out where the seams are in this

00:10:25,750 --> 00:10:29,320
monolith to break them up into

00:10:27,430 --> 00:10:30,880
microservices and again like that's

00:10:29,320 --> 00:10:34,000
really what this talk is going into

00:10:30,880 --> 00:10:35,680
right now is like what are the seams for

00:10:34,000 --> 00:10:39,070
your micro servers and how can you gauge

00:10:35,680 --> 00:10:40,600
if your team is ready for it so yeah how

00:10:39,070 --> 00:10:43,510
do these things intersect emotional

00:10:40,600 --> 00:10:45,990
intelligence this is written in 1975 I

00:10:43,510 --> 00:10:48,940
think most people know what this book is

00:10:45,990 --> 00:10:53,050
Fred but Fred books happen to quote a

00:10:48,940 --> 00:10:55,240
paper by Melvin Conway therefore kind of

00:10:53,050 --> 00:10:57,790
like an codifying Conway's quote into a

00:10:55,240 --> 00:10:59,290
law but anyway and the paper Conway

00:10:57,790 --> 00:11:04,900
expressed the following thesis about

00:10:59,290 --> 00:11:06,760
teams reads any organization that

00:11:04,900 --> 00:11:08,680
designs a system to find more broadly

00:11:06,760 --> 00:11:10,490
here than just information systems will

00:11:08,680 --> 00:11:12,459
inevitably produce a diet design

00:11:10,490 --> 00:11:14,420
whose structure is a copy of the

00:11:12,459 --> 00:11:16,970
organisation's communication structure

00:11:14,420 --> 00:11:20,810
so this is like a this is a big big

00:11:16,970 --> 00:11:23,480
thing in a in a huge if you kind of look

00:11:20,810 --> 00:11:26,810
at sort of the the idea of teams as a

00:11:23,480 --> 00:11:30,290
whole teams will all 99% of the time do

00:11:26,810 --> 00:11:31,820
exactly this so again the rest of the

00:11:30,290 --> 00:11:34,760
talk is kind of like helping you and

00:11:31,820 --> 00:11:36,830
your team to be able to move to a micro

00:11:34,760 --> 00:11:41,330
service type architecture in a very slow

00:11:36,830 --> 00:11:43,040
and thoughtful way so a good question of

00:11:41,330 --> 00:11:45,020
model s is who owns what blurred lines

00:11:43,040 --> 00:11:46,790
of ownership across teams and Wyeth can

00:11:45,020 --> 00:11:49,700
lead to some interesting cross team

00:11:46,790 --> 00:11:51,260
dynamic dot averse in general without

00:11:49,700 --> 00:11:53,570
clear boundaries offered by micro

00:11:51,260 --> 00:11:55,550
services it's easy for teams to step on

00:11:53,570 --> 00:11:57,470
other teams toes and find themselves

00:11:55,550 --> 00:11:59,870
building features without clear decision

00:11:57,470 --> 00:12:02,930
making and ultimately stagnating without

00:11:59,870 --> 00:12:05,470
hope of a production deploy this isn't a

00:12:02,930 --> 00:12:07,520
huge part of successful team ownership

00:12:05,470 --> 00:12:11,209
teams that don't trust each other though

00:12:07,520 --> 00:12:14,000
tend to kind of exhibit this who owns

00:12:11,209 --> 00:12:15,709
what idea so with less trust in a team

00:12:14,000 --> 00:12:17,270
has the more blurred these lines of

00:12:15,709 --> 00:12:19,910
ownership become increasing trust

00:12:17,270 --> 00:12:21,800
doesn't come overnight but oftentimes it

00:12:19,910 --> 00:12:24,079
can be addressed in how vulnerable each

00:12:21,800 --> 00:12:26,600
person on the team is willing to be with

00:12:24,079 --> 00:12:27,829
everyone else on the team so a good

00:12:26,600 --> 00:12:28,640
example of this would be like the self

00:12:27,829 --> 00:12:31,070
awareness queue right

00:12:28,640 --> 00:12:32,630
each member no matter how they feel like

00:12:31,070 --> 00:12:34,760
maybe they've taken assessments or not

00:12:32,630 --> 00:12:37,610
but things like disk and other like

00:12:34,760 --> 00:12:40,310
behavioral assessments can really help

00:12:37,610 --> 00:12:44,690
strengthen each team member and moreover

00:12:40,310 --> 00:12:46,160
be able to express how they deal with

00:12:44,690 --> 00:12:48,680
their own strengths and weaknesses to

00:12:46,160 --> 00:12:50,600
other people on the team so a good idea

00:12:48,680 --> 00:12:52,550
is like if your team has this sort of

00:12:50,600 --> 00:12:56,360
mentality it's a good this is a good

00:12:52,550 --> 00:12:57,920
step towards microservices number two

00:12:56,360 --> 00:12:59,029
would be finding the seams we've already

00:12:57,920 --> 00:13:01,370
talked about seams during this

00:12:59,029 --> 00:13:04,180
conversation or during this conference

00:13:01,370 --> 00:13:06,529
sorry slicing away the first

00:13:04,180 --> 00:13:08,540
microservice might be the hardest part

00:13:06,529 --> 00:13:11,089
of moving to a micro services based

00:13:08,540 --> 00:13:14,209
approach to often folks reach for the

00:13:11,089 --> 00:13:16,100
most painful or most sticky items that

00:13:14,209 --> 00:13:18,140
are causing issues and we often times

00:13:16,100 --> 00:13:19,810
reach for empathy here we'll jump into

00:13:18,140 --> 00:13:21,850
slack channels or and

00:13:19,810 --> 00:13:24,130
look for our deploy channel and see how

00:13:21,850 --> 00:13:25,660
people are feeling right I think there's

00:13:24,130 --> 00:13:29,200
a little bit of like a more concrete

00:13:25,660 --> 00:13:31,450
thing our concrete piece of EQ here

00:13:29,200 --> 00:13:35,350
that's worthwhile and that would be

00:13:31,450 --> 00:13:37,450
social skills and an actual an active

00:13:35,350 --> 00:13:39,100
project that's usually done in perform

00:13:37,450 --> 00:13:40,960
you split up into micro services or

00:13:39,100 --> 00:13:43,150
begin the process when you have no micro

00:13:40,960 --> 00:13:45,370
service is this thing called event

00:13:43,150 --> 00:13:51,460
storming has anyone done any event

00:13:45,370 --> 00:13:53,500
storming before yes what it is is its

00:13:51,460 --> 00:13:55,990
methodology involves discovering key

00:13:53,500 --> 00:13:59,020
domain objects and plotting them along a

00:13:55,990 --> 00:14:00,130
time series so not super super hard

00:13:59,020 --> 00:14:02,710
usually it's done with a bunch of

00:14:00,130 --> 00:14:05,770
stickies what's cool is this is an

00:14:02,710 --> 00:14:07,210
integral part of domain driven design an

00:14:05,770 --> 00:14:10,270
event storming can't work without

00:14:07,210 --> 00:14:12,970
utilizing key domain experts basically

00:14:10,270 --> 00:14:15,100
across the organization one of the key

00:14:12,970 --> 00:14:18,850
takeaways of this sort of game or what

00:14:15,100 --> 00:14:21,370
not it's almost this idea of like

00:14:18,850 --> 00:14:25,630
modeling processes both now and future

00:14:21,370 --> 00:14:28,300
processes that the business relies on so

00:14:25,630 --> 00:14:31,660
it's a good way to like kind of unearth

00:14:28,300 --> 00:14:34,900
the processes that a monolith oftentimes

00:14:31,660 --> 00:14:36,370
hides and this is none of this as

00:14:34,900 --> 00:14:38,500
possible without the convergence of

00:14:36,370 --> 00:14:40,540
domain experts and effective social

00:14:38,500 --> 00:14:47,020
skills during those event storming

00:14:40,540 --> 00:14:49,030
sessions yes third one is decoupling

00:14:47,020 --> 00:14:51,070
interfaces are a natural move to reduce

00:14:49,030 --> 00:14:52,630
coupling and oftentimes the best way to

00:14:51,070 --> 00:14:55,810
do this is to use a term known as

00:14:52,630 --> 00:14:57,550
outside in thinking this means that we

00:14:55,810 --> 00:15:00,280
think of solutions from the point of the

00:14:57,550 --> 00:15:02,260
consumer first and not us as the

00:15:00,280 --> 00:15:04,510
implementer and then afterwards we work

00:15:02,260 --> 00:15:10,300
sort of backwards to actually implement

00:15:04,510 --> 00:15:12,670
the API this is one of this sort of idea

00:15:10,300 --> 00:15:15,100
of outside in thinking was the kind of

00:15:12,670 --> 00:15:19,450
crux of my first solidus comp talk on

00:15:15,100 --> 00:15:21,160
empathy in api's and if we think about

00:15:19,450 --> 00:15:23,910
this just like from the descriptions of

00:15:21,160 --> 00:15:26,560
the five elements of emotional

00:15:23,910 --> 00:15:28,060
intelligence this really lands with

00:15:26,560 --> 00:15:29,410
empathy right you're thinking from a

00:15:28,060 --> 00:15:32,290
consumer you're thinking about everyone

00:15:29,410 --> 00:15:35,410
else who's consuming your API or your

00:15:32,290 --> 00:15:41,320
your seams or your layers and building

00:15:35,410 --> 00:15:43,660
something in return of that until CEO

00:15:41,320 --> 00:15:47,829
Andy Grove was like the master of

00:15:43,660 --> 00:15:49,839
outside in thinking he sadly isn't with

00:15:47,829 --> 00:15:52,300
us anymore but he was known for pushing

00:15:49,839 --> 00:15:55,240
Intel's management to constantly be

00:15:52,300 --> 00:15:57,730
anticipating corporate landscape changes

00:15:55,240 --> 00:15:59,680
and the result of this was until pivoted

00:15:57,730 --> 00:16:02,920
somewhat early on in their lifestyle

00:15:59,680 --> 00:16:05,860
from the idea of memory storage to

00:16:02,920 --> 00:16:08,290
semiconductors and we know the story of

00:16:05,860 --> 00:16:10,269
Intel after that when designing

00:16:08,290 --> 00:16:13,079
interfaces for your first or next

00:16:10,269 --> 00:16:15,250
microservice be thinking about the API

00:16:13,079 --> 00:16:17,079
from a customer's perspective like

00:16:15,250 --> 00:16:20,649
noodle on what information should be

00:16:17,079 --> 00:16:23,170
pushed away from the consumer don't only

00:16:20,649 --> 00:16:24,880
focus on maybe the response in the

00:16:23,170 --> 00:16:27,509
request but actually like the underlying

00:16:24,880 --> 00:16:29,769
implementation of the API itself and

00:16:27,509 --> 00:16:31,569
maybe like changing the landscape like

00:16:29,769 --> 00:16:33,519
this we can change the landscape of our

00:16:31,569 --> 00:16:38,709
API like Andy Grove did with Intel all

00:16:33,519 --> 00:16:40,630
those years ago another like great thing

00:16:38,709 --> 00:16:43,630
to look at when it comes to breaking up

00:16:40,630 --> 00:16:45,699
on listen to smaller pieces is the

00:16:43,630 --> 00:16:47,410
freedom of languages there's a large

00:16:45,699 --> 00:16:49,810
ecosystem of languages out there and

00:16:47,410 --> 00:16:51,880
when the idea of micro services sort of

00:16:49,810 --> 00:16:55,630
begins to entrench themselves into your

00:16:51,880 --> 00:16:58,240
organization every developer on your

00:16:55,630 --> 00:17:01,300
team is going to want to write the next

00:16:58,240 --> 00:17:03,010
micro service in rust or Elm that's a

00:17:01,300 --> 00:17:07,390
guarantee that's a hundred percent will

00:17:03,010 --> 00:17:10,150
happen and because of this team members

00:17:07,390 --> 00:17:12,179
and team leaders really should express

00:17:10,150 --> 00:17:14,079
some self-regulation on the way

00:17:12,179 --> 00:17:15,850
understanding that team churn is

00:17:14,079 --> 00:17:17,650
actually a very real thing in an

00:17:15,850 --> 00:17:20,949
organization and it's something that all

00:17:17,650 --> 00:17:23,559
of us deal with being conservative with

00:17:20,949 --> 00:17:26,380
your first service especially around the

00:17:23,559 --> 00:17:28,900
language is something that should keep

00:17:26,380 --> 00:17:30,460
top of mind look for languages that

00:17:28,900 --> 00:17:31,600
everyone on the team is good at we

00:17:30,460 --> 00:17:33,250
mentioned it this morning sometimes

00:17:31,600 --> 00:17:34,929
teams are small and sometimes the

00:17:33,250 --> 00:17:37,840
language that bridges everyone is

00:17:34,929 --> 00:17:40,030
JavaScript okay so that is your choice

00:17:37,840 --> 00:17:44,000
JavaScript right there

00:17:40,030 --> 00:17:45,920
saying that though be cognitive of the

00:17:44,000 --> 00:17:49,070
team itself the current team and

00:17:45,920 --> 00:17:51,020
emerging languages microservices should

00:17:49,070 --> 00:17:53,810
be small right like they should be in a

00:17:51,020 --> 00:17:55,580
space where if a service is constrained

00:17:53,810 --> 00:17:59,500
you should be able to reproduce they

00:17:55,580 --> 00:18:02,150
easily in rust in a few days or weeks

00:17:59,500 --> 00:18:04,310
there's actually another kind of like

00:18:02,150 --> 00:18:06,170
flipside to this

00:18:04,310 --> 00:18:08,090
freedom of languages and that doesn't

00:18:06,170 --> 00:18:10,430
really rely on self regulation it

00:18:08,090 --> 00:18:12,350
actually relies on motivation so the

00:18:10,430 --> 00:18:13,520
opposite would be hey you're not settle

00:18:12,350 --> 00:18:15,650
for you leading your team you're

00:18:13,520 --> 00:18:17,900
actually creeping on your team and I do

00:18:15,650 --> 00:18:20,990
they have public repositories and github

00:18:17,900 --> 00:18:22,460
or in get lab are they actively doing

00:18:20,990 --> 00:18:24,530
development in these languages maybe

00:18:22,460 --> 00:18:26,240
later at night or outside business hours

00:18:24,530 --> 00:18:28,730
those are the people you really want to

00:18:26,240 --> 00:18:30,950
like take ba like take by the arm and

00:18:28,730 --> 00:18:34,340
say like hey if we were to split out our

00:18:30,950 --> 00:18:35,780
fulfillment service into a micro service

00:18:34,340 --> 00:18:36,470
what would it look like what would you

00:18:35,780 --> 00:18:38,990
choose and why

00:18:36,470 --> 00:18:42,800
so there's look kind of like other end

00:18:38,990 --> 00:18:44,840
of the card lastly there's like seven of

00:18:42,800 --> 00:18:49,280
these so sorry about there being no

00:18:44,840 --> 00:18:50,750
numbers we're almost there so a good

00:18:49,280 --> 00:18:52,670
question is like Tigers all the things

00:18:50,750 --> 00:18:54,680
like how many people are deploying

00:18:52,670 --> 00:18:57,400
packages every day like how many people

00:18:54,680 --> 00:19:01,760
are have access to gem ferry or github

00:18:57,400 --> 00:19:03,880
Ruby gems like are you pushing tag

00:19:01,760 --> 00:19:06,560
dependencies to these places every day

00:19:03,880 --> 00:19:09,200
if you are that's great

00:19:06,560 --> 00:19:11,420
that is a great marker for a team that

00:19:09,200 --> 00:19:13,910
is ready to go to some type of micro

00:19:11,420 --> 00:19:15,860
services architecture the motive the

00:19:13,910 --> 00:19:17,990
idea there is that the team is motivated

00:19:15,860 --> 00:19:20,090
just like we talked about before in the

00:19:17,990 --> 00:19:22,640
space and they're they understand

00:19:20,090 --> 00:19:25,280
package may maintainer ship we know this

00:19:22,640 --> 00:19:28,310
is tricky and hard they understand

00:19:25,280 --> 00:19:29,660
versioning they might be the first

00:19:28,310 --> 00:19:31,520
people who are like looking to have

00:19:29,660 --> 00:19:33,410
access to github or get lab registries

00:19:31,520 --> 00:19:36,080
so they can publish internally without

00:19:33,410 --> 00:19:40,700
going through Ruby gems or NPM which is

00:19:36,080 --> 00:19:42,230
kind of a terror show these days so if

00:19:40,700 --> 00:19:43,910
they definitely if your team definitely

00:19:42,230 --> 00:19:47,090
has a motivation to do this and the

00:19:43,910 --> 00:19:49,610
expertise lean on that but if not know

00:19:47,090 --> 00:19:50,909
that this is kind of a bit of the secret

00:19:49,610 --> 00:19:53,320
sauce when it comes from

00:19:50,909 --> 00:19:54,279
successful breaking up of micro service

00:19:53,320 --> 00:19:57,070
like breaking up a monolith and

00:19:54,279 --> 00:19:58,240
microservices and find ways to inform

00:19:57,070 --> 00:19:59,860
and educate your team how to do this

00:19:58,240 --> 00:20:03,990
like this is the easiest way to inform

00:19:59,860 --> 00:20:05,230
an educated team second to last I

00:20:03,990 --> 00:20:07,360
promise

00:20:05,230 --> 00:20:10,480
in many scenarios and application is

00:20:07,360 --> 00:20:12,580
reliant on constant DB to DB connections

00:20:10,480 --> 00:20:15,159
to manage interactions through a single

00:20:12,580 --> 00:20:16,929
monolithic app this isn't and shouldn't

00:20:15,159 --> 00:20:19,390
be the case when switching to micro

00:20:16,929 --> 00:20:21,370
services any new service will talk to

00:20:19,390 --> 00:20:23,919
any other service through an API layer

00:20:21,370 --> 00:20:25,769
that API layer could be graphic well it

00:20:23,919 --> 00:20:28,769
could be rest protobuf whatever

00:20:25,769 --> 00:20:31,389
regardless there won't be any DB

00:20:28,769 --> 00:20:34,950
connections shared so how does a team

00:20:31,389 --> 00:20:37,240
currently document their own API layers

00:20:34,950 --> 00:20:40,090
moving to micro services well you will

00:20:37,240 --> 00:20:41,830
have a proliferation of API layers and

00:20:40,090 --> 00:20:44,409
how documentation is kind of structured

00:20:41,830 --> 00:20:46,630
currently at an organization will kind

00:20:44,409 --> 00:20:50,649
of dictate how documentation rolls over

00:20:46,630 --> 00:20:52,360
into a micro services based space this

00:20:50,649 --> 00:20:53,590
could fall under empathy but again I

00:20:52,360 --> 00:20:55,990
think this is more of like a social

00:20:53,590 --> 00:20:58,539
skill space building useful

00:20:55,990 --> 00:21:02,019
documentation and tech useful technical

00:20:58,539 --> 00:21:04,659
documentation specifically is mainly

00:21:02,019 --> 00:21:06,429
centered around communication it's

00:21:04,659 --> 00:21:09,850
sharing your intent of your service API

00:21:06,429 --> 00:21:11,200
layer and that's not trivial this

00:21:09,850 --> 00:21:12,639
coupled with understanding how your

00:21:11,200 --> 00:21:15,730
users will consume your documentation

00:21:12,639 --> 00:21:17,649
also kind of empathic but being able to

00:21:15,730 --> 00:21:19,809
propose that it's being open for edits

00:21:17,649 --> 00:21:21,880
and even knowing how edits kind of flow

00:21:19,809 --> 00:21:26,529
through the system or all integral when

00:21:21,880 --> 00:21:29,889
dealing with documentation last one I I

00:21:26,529 --> 00:21:32,950
promise and probably something that I

00:21:29,889 --> 00:21:34,120
don't really believe in I don't believe

00:21:32,950 --> 00:21:36,190
in a hundred percent test coverage I

00:21:34,120 --> 00:21:40,679
think it's meaningless and it's hard to

00:21:36,190 --> 00:21:43,450
get to but it is a good space especially

00:21:40,679 --> 00:21:46,029
100 percent integration or feature tests

00:21:43,450 --> 00:21:48,250
if you have these for an existing

00:21:46,029 --> 00:21:52,720
monolith then you have a well groomed

00:21:48,250 --> 00:21:56,470
test suite that can support the move to

00:21:52,720 --> 00:21:58,870
maybe a micro service based space and

00:21:56,470 --> 00:22:02,800
the cool part is tests intersect all

00:21:58,870 --> 00:22:04,600
five sections of emotional intelligence

00:22:02,800 --> 00:22:06,220
so running down a space here

00:22:04,600 --> 00:22:09,190
self-awareness developers need to take

00:22:06,220 --> 00:22:11,410
stock of how they feel when they run a

00:22:09,190 --> 00:22:15,520
single file in the test suite or the

00:22:11,410 --> 00:22:16,570
whole suite is it just a massive pain do

00:22:15,520 --> 00:22:19,090
the tests not function without

00:22:16,570 --> 00:22:21,040
connection to the internet like is there

00:22:19,090 --> 00:22:23,730
just a myriad of issues in the suite

00:22:21,040 --> 00:22:26,590
itself self regulations developers make

00:22:23,730 --> 00:22:28,570
rational choices around the information

00:22:26,590 --> 00:22:31,990
from the pain from the twists test suite

00:22:28,570 --> 00:22:33,310
or just failed builds in general with

00:22:31,990 --> 00:22:35,380
social skills like our developers

00:22:33,310 --> 00:22:38,650
talking about failed tests how do they

00:22:35,380 --> 00:22:41,920
successfully how do they successfully

00:22:38,650 --> 00:22:43,600
fix fail builds like ghost tests and

00:22:41,920 --> 00:22:45,730
stuff like this is doc is talking about

00:22:43,600 --> 00:22:48,160
tests sort of like what you what

00:22:45,730 --> 00:22:51,160
everyone's doing around maybe some lunch

00:22:48,160 --> 00:22:52,690
breaks not all with empathy like how can

00:22:51,160 --> 00:22:54,940
you strive to better understand how

00:22:52,690 --> 00:22:55,240
these slow tests affect everyone else on

00:22:54,940 --> 00:22:57,130
the team

00:22:55,240 --> 00:22:59,140
and finally motivation it's like who's

00:22:57,130 --> 00:23:01,840
taking the initiative to fix these tests

00:22:59,140 --> 00:23:04,210
so tests in general are a great thing we

00:23:01,840 --> 00:23:06,370
know it and they are a wonderful space

00:23:04,210 --> 00:23:08,200
so to really judge and see if a team is

00:23:06,370 --> 00:23:12,010
ready to move to the micro service based

00:23:08,200 --> 00:23:13,330
approach and with that and with those

00:23:12,010 --> 00:23:18,790
coughs I love it

00:23:13,330 --> 00:23:22,390
that's really it this is kind of the web

00:23:18,790 --> 00:23:25,570
where you can find me obviously I don't

00:23:22,390 --> 00:23:28,000
github with that handle my Twitter and

00:23:25,570 --> 00:23:30,580
mastodons if people are Mastodon users

00:23:28,000 --> 00:23:32,860
my DM is on both platforms are always

00:23:30,580 --> 00:23:35,980
open and whenever you feel comfortable

00:23:32,860 --> 00:23:37,810
to reach out simply do more than

00:23:35,980 --> 00:23:39,100
anything I'd love to thank sa for all

00:23:37,810 --> 00:23:41,890
they do for the ruby base ecommerce

00:23:39,100 --> 00:23:43,840
space with solidus and then spree

00:23:41,890 --> 00:23:45,550
there's so much going on with the space

00:23:43,840 --> 00:23:50,020
and glassy is excited to be a part of it

00:23:45,550 --> 00:23:53,650
for the foreseeable future I tend not to

00:23:50,020 --> 00:23:55,480
leave talk like this without some sort

00:23:53,650 --> 00:23:56,800
of links to help everyone out I will

00:23:55,480 --> 00:23:59,380
publish this and then publish this in

00:23:56,800 --> 00:24:00,880
the slack channel but if you're looking

00:23:59,380 --> 00:24:04,410
for some good books on eq i would

00:24:00,880 --> 00:24:06,790
recommend staying within the book realm

00:24:04,410 --> 00:24:09,340
medium is a great place to find how to

00:24:06,790 --> 00:24:12,030
do a create react app but it's not great

00:24:09,340 --> 00:24:13,809
when it comes to sort of like judging

00:24:12,030 --> 00:24:17,859
well-documented well

00:24:13,809 --> 00:24:21,070
founded EQ articles with microservices

00:24:17,859 --> 00:24:24,849
we talked very briefly about Martin

00:24:21,070 --> 00:24:28,059
Fowler his blog is kind of a wonderful

00:24:24,849 --> 00:24:28,899
treasure trove of space for this also

00:24:28,059 --> 00:24:30,519
Sam Newman

00:24:28,899 --> 00:24:32,619
he wrote the original sort of

00:24:30,519 --> 00:24:35,440
micro-services book back in 2015 I

00:24:32,619 --> 00:24:37,320
believe he has amazing talks on just all

00:24:35,440 --> 00:24:40,749
of this a lot of this is a lot of this

00:24:37,320 --> 00:24:43,929
underlying microservices ideas are from

00:24:40,749 --> 00:24:47,169
him and that book itself is being

00:24:43,929 --> 00:24:50,019
rewritten for 2019 2020 so it's going to

00:24:47,169 --> 00:24:52,059
be super updated so please do this and

00:24:50,019 --> 00:24:54,309
everyone else who's sort of seen one of

00:24:52,059 --> 00:24:55,599
my talks knows but I'd like to leave the

00:24:54,309 --> 00:24:57,519
community with something to think about

00:24:55,599 --> 00:25:00,309
relatively for the next year because

00:24:57,519 --> 00:25:05,559
sometimes I'm busy but who knows who

00:25:00,309 --> 00:25:07,960
this person is yes this is Toby Lucca

00:25:05,559 --> 00:25:13,659
and he owns a little startup called

00:25:07,960 --> 00:25:16,179
Shopify also who knows what this is okay

00:25:13,659 --> 00:25:18,249
maybe a little bit different if you

00:25:16,179 --> 00:25:19,629
played with fast Ruby before a few

00:25:18,249 --> 00:25:23,769
months ago it's now no longer available

00:25:19,629 --> 00:25:25,929
it was a very accessible way to write

00:25:23,769 --> 00:25:28,659
Ruby or and this is I think the bigger

00:25:25,929 --> 00:25:31,809
thing crystal functions they were

00:25:28,659 --> 00:25:35,409
extremely easily just deployed and ran

00:25:31,809 --> 00:25:37,330
on demand very much like white site is

00:25:35,409 --> 00:25:39,219
for JavaScript functions as a service or

00:25:37,330 --> 00:25:43,659
even Heroku is for more traditional Ruby

00:25:39,219 --> 00:25:47,259
apps so with those two as of a few days

00:25:43,659 --> 00:25:48,509
ago Toby mentioned this on Twitter big

00:25:47,259 --> 00:25:50,649
things are happening in this space

00:25:48,509 --> 00:25:51,940
Shopify is looking to further break up

00:25:50,649 --> 00:25:57,190
their monolith we know they're doing it

00:25:51,940 --> 00:25:59,889
already into like manageable trunks yeah

00:25:57,190 --> 00:26:01,659
I'm excited for this and excited for

00:25:59,889 --> 00:26:06,429
where this means for Ruby for Crystal

00:26:01,659 --> 00:26:12,429
for languages that look like Ruby and

00:26:06,429 --> 00:26:14,559
with that yes any questions it's kind of

00:26:12,429 --> 00:26:16,629
a whirlwind tour micro services are kind

00:26:14,559 --> 00:26:17,919
of a weird thing and if you have any

00:26:16,629 --> 00:26:20,499
questions or you want to kind of like

00:26:17,919 --> 00:26:22,089
talk about where and how glossy is

00:26:20,499 --> 00:26:23,520
moving to micro services feel free to

00:26:22,089 --> 00:26:26,059
reach out

00:26:23,520 --> 00:26:26,059
after this

00:26:26,140 --> 00:26:40,700
[Applause]

00:26:27,320 --> 00:26:40,700

YouTube URL: https://www.youtube.com/watch?v=m6H-2ta_JJ8


