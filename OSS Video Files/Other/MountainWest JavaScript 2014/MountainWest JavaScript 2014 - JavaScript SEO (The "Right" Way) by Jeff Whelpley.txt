Title: MountainWest JavaScript 2014 - JavaScript SEO (The "Right" Way) by Jeff Whelpley
Publication date: 2020-01-24
Playlist: MountainWest JavaScript 2014
Description: 
	By Jeff Whelpley

In the future, search engines may be smart enough to understand how to index JavaScript single page applications (SPAs). That is not the case today, however. Solutions based on PhantomJS do exist to help get your SPA indexed, but there is a big difference between simply getting indexed and actually ranking high in Google's organic search rankings.
The "right way" to do SEO for SPAs requires building a complimentary server side application that renders content for search engines and pre-renders initial page loads for users. This talk will provide an overview of the challenges of SEO with single page applications, an explanation of why many common solutions out there are not sufficient and details of how you can implement a full stack JavaScript solution that rocks.

Help us caption & translate this video!

http://amara.org/v/FG3K/
Captions: 
	00:00:25,119 --> 00:00:30,110
hmm hi my name is Jeff well Polly and

00:00:27,800 --> 00:00:32,930
i'm here today to talk about building

00:00:30,110 --> 00:00:35,600
javascript web applications so that not

00:00:32,930 --> 00:00:36,940
only can be indexed by google and other

00:00:35,600 --> 00:00:45,230
search engines but that they'll actually

00:00:36,940 --> 00:00:48,530
ranked highly i'm the chief architect at

00:00:45,230 --> 00:00:50,690
get human comm and get human is a

00:00:48,530 --> 00:00:53,480
service that helps customers any

00:00:50,690 --> 00:00:54,530
consumers get customer service faster

00:00:53,480 --> 00:00:58,250
and easier so you don't have to wait on

00:00:54,530 --> 00:01:00,530
hold again last year one in every eight

00:00:58,250 --> 00:01:04,369
people in the United States visited our

00:01:00,530 --> 00:01:06,770
website but more than likely most people

00:01:04,369 --> 00:01:08,630
don't even know who get human is because

00:01:06,770 --> 00:01:10,910
they didn't actually go into a browser

00:01:08,630 --> 00:01:13,369
and type get him calm I would wager that

00:01:10,910 --> 00:01:15,440
many of you in this room probably visit

00:01:13,369 --> 00:01:17,509
to get human but you may not remember or

00:01:15,440 --> 00:01:19,940
even know about it the reason is that

00:01:17,509 --> 00:01:22,640
most people come through google come

00:01:19,940 --> 00:01:24,679
through search engines and the typical

00:01:22,640 --> 00:01:26,330
use case is that you have some sort of

00:01:24,679 --> 00:01:28,580
problem with a product or service from a

00:01:26,330 --> 00:01:30,289
major company and you need to get in

00:01:28,580 --> 00:01:33,380
touch with a live person to solve that

00:01:30,289 --> 00:01:35,450
problem so you go to google type in

00:01:33,380 --> 00:01:38,360
whatever the name of the company is and

00:01:35,450 --> 00:01:42,890
phone number or the name of the company

00:01:38,360 --> 00:01:44,899
and contact information or customer

00:01:42,890 --> 00:01:48,440
service something like that and whenever

00:01:44,899 --> 00:01:53,140
you do get human will inevitably show up

00:01:48,440 --> 00:02:02,000
in the top five or the top three and

00:01:53,140 --> 00:02:07,069
sometimes even the oops sorry i meant to

00:02:02,000 --> 00:02:10,880
do facebook customer service even the

00:02:07,069 --> 00:02:13,550
top one and two spots now just a little

00:02:10,880 --> 00:02:15,739
tip if get human is showing up instead

00:02:13,550 --> 00:02:18,980
of your website for customer service

00:02:15,739 --> 00:02:20,780
more than likely the information on your

00:02:18,980 --> 00:02:25,420
site is very difficult to reach and

00:02:20,780 --> 00:02:25,420
isn't helping users as much as it should

00:02:28,460 --> 00:02:36,530
but why is that why does get human

00:02:31,290 --> 00:02:40,020
ranked so highly let's ask this guy if

00:02:36,530 --> 00:02:42,120
for any of you that have been involved

00:02:40,020 --> 00:02:44,760
SEO at all know who this guy is it's

00:02:42,120 --> 00:02:47,310
matt cutts who's the face of SEO for

00:02:44,760 --> 00:02:48,990
google and if you ask matt cutts what he

00:02:47,310 --> 00:02:50,940
would tell you is that the sites that

00:02:48,990 --> 00:02:53,820
rank highly are those that are very

00:02:50,940 --> 00:02:55,950
useful for users that you shouldn't even

00:02:53,820 --> 00:02:58,920
think about SEO you should just focus on

00:02:55,950 --> 00:03:00,870
building an awesome application and that

00:02:58,920 --> 00:03:02,870
it's google's job to make sure that

00:03:00,870 --> 00:03:06,120
those awesome applications rank highly

00:03:02,870 --> 00:03:09,450
now I don't think that it's quite that

00:03:06,120 --> 00:03:11,360
simple so let's dive into the top five

00:03:09,450 --> 00:03:14,280
factors that go into get human coms

00:03:11,360 --> 00:03:16,830
search ranking at the top one being

00:03:14,280 --> 00:03:20,280
inbound links and what I mean by this is

00:03:16,830 --> 00:03:24,000
actually having a number of sites of

00:03:20,280 --> 00:03:26,400
high authority like CNN wired New York

00:03:24,000 --> 00:03:29,489
Times write articles about us write

00:03:26,400 --> 00:03:32,280
articles about what we do and then put

00:03:29,489 --> 00:03:34,769
links to our site and we have a long

00:03:32,280 --> 00:03:36,810
history of that and that Google looks

00:03:34,769 --> 00:03:38,220
that history looks at the quality of

00:03:36,810 --> 00:03:40,320
links what they're writing about what

00:03:38,220 --> 00:03:43,980
the keywords are in those articles and

00:03:40,320 --> 00:03:47,549
uses that to help determine some some

00:03:43,980 --> 00:03:49,650
part of the search ranking the next

00:03:47,549 --> 00:03:52,230
thing is pogo sticking out how many

00:03:49,650 --> 00:03:54,120
people could guess or think they know

00:03:52,230 --> 00:03:59,549
what pogo sticking is when it comes to

00:03:54,120 --> 00:04:01,739
search anybody know one okay so this is

00:03:59,549 --> 00:04:04,140
something that everyone does pretty much

00:04:01,739 --> 00:04:07,049
every day it's when you enter in a

00:04:04,140 --> 00:04:08,760
search term go to a website and decide

00:04:07,049 --> 00:04:10,820
that it's not what you need so you click

00:04:08,760 --> 00:04:12,660
the back button go to another website

00:04:10,820 --> 00:04:15,150
that's not what you need to go to back

00:04:12,660 --> 00:04:16,979
go to another website and that process

00:04:15,150 --> 00:04:20,250
of going back and forth is called pogo

00:04:16,979 --> 00:04:22,800
sticking it's something that sends

00:04:20,250 --> 00:04:25,140
signals to Google about whether a

00:04:22,800 --> 00:04:27,240
particular site is the answer for your

00:04:25,140 --> 00:04:29,580
query because essentially when you go

00:04:27,240 --> 00:04:32,760
back you're telling Google that was not

00:04:29,580 --> 00:04:35,310
the answer for me for this inquiry that

00:04:32,760 --> 00:04:36,780
I entered and if Google aggregates that

00:04:35,310 --> 00:04:39,720
over time for different search terms

00:04:36,780 --> 00:04:40,900
they get a pretty good idea of who is

00:04:39,720 --> 00:04:45,250
actually

00:04:40,900 --> 00:04:47,650
a good answer for a given search term

00:04:45,250 --> 00:04:49,180
and it just turns out that as far as the

00:04:47,650 --> 00:04:52,570
customer service related queries that i

00:04:49,180 --> 00:04:57,220
mentioned i get human comm is actually a

00:04:52,570 --> 00:05:00,009
great what they call long click the next

00:04:57,220 --> 00:05:02,139
thing is performance google google love

00:05:00,009 --> 00:05:03,520
speed and for good reason this article

00:05:02,139 --> 00:05:05,530
came out a couple years ago in the New

00:05:03,520 --> 00:05:07,930
York Times talking about how 400

00:05:05,530 --> 00:05:10,720
milliseconds the blink of an eye can

00:05:07,930 --> 00:05:14,110
mean the difference between users search

00:05:10,720 --> 00:05:16,720
behavior meaning that if your insight

00:05:14,110 --> 00:05:19,960
the initial page load is longer than 400

00:05:16,720 --> 00:05:21,639
milliseconds users will start abandoning

00:05:19,960 --> 00:05:23,560
users will start searching less

00:05:21,639 --> 00:05:26,889
basically we have a standard it get

00:05:23,560 --> 00:05:28,750
human that we try at least to have our

00:05:26,889 --> 00:05:31,750
initial server response time under 200

00:05:28,750 --> 00:05:33,460
milliseconds and the full initial page

00:05:31,750 --> 00:05:36,430
load under two seconds both of which are

00:05:33,460 --> 00:05:37,870
pretty aggressive and may not meet it

00:05:36,430 --> 00:05:40,030
all the time but that's what we should

00:05:37,870 --> 00:05:42,250
pour for both our server side websites

00:05:40,030 --> 00:05:44,470
and our client-side web apps which

00:05:42,250 --> 00:05:48,820
actually is is very difficult in fact a

00:05:44,470 --> 00:05:50,320
lot of client-side JavaScript web

00:05:48,820 --> 00:05:53,199
applications this is one of the biggest

00:05:50,320 --> 00:05:54,789
problems with SEO that when you have a

00:05:53,199 --> 00:05:56,229
single page application that initial

00:05:54,789 --> 00:05:58,120
page load is when you download all of

00:05:56,229 --> 00:06:00,699
your resources this huge javascript file

00:05:58,120 --> 00:06:02,500
and everything else and typically it

00:06:00,699 --> 00:06:04,570
takes a while takes a couple seconds and

00:06:02,500 --> 00:06:06,340
then after that you know it's fast your

00:06:04,570 --> 00:06:08,050
your client-side web app is fast but the

00:06:06,340 --> 00:06:10,330
problem is when you're trying to have a

00:06:08,050 --> 00:06:13,210
client-side web app to be SEO friendly

00:06:10,330 --> 00:06:16,000
to rank highly you need that initial

00:06:13,210 --> 00:06:20,020
page load time to be just as fast as a

00:06:16,000 --> 00:06:23,949
server-side website the next thing is

00:06:20,020 --> 00:06:25,360
social proof that just similar to

00:06:23,949 --> 00:06:29,349
inbound links when you have people

00:06:25,360 --> 00:06:31,840
talking about you and talking about the

00:06:29,349 --> 00:06:33,610
what your service provides and the

00:06:31,840 --> 00:06:35,979
subject matter and then linking to your

00:06:33,610 --> 00:06:39,220
site that gives google and indication

00:06:35,979 --> 00:06:44,080
that what you're doing is helping people

00:06:39,220 --> 00:06:46,210
and is a good result for different

00:06:44,080 --> 00:06:48,280
search queries the one thing with this i

00:06:46,210 --> 00:06:49,810
would mention though is that some people

00:06:48,280 --> 00:06:52,330
mistakenly believed that the goal here

00:06:49,810 --> 00:06:54,520
is just to kind of flood social media

00:06:52,330 --> 00:06:57,759
with links to your site and

00:06:54,520 --> 00:06:59,910
I think if you paid attention to what

00:06:57,759 --> 00:07:02,139
went down with the rap genius fiasco

00:06:59,910 --> 00:07:05,199
that's not something that's going to

00:07:02,139 --> 00:07:07,210
help you in the long run and the last

00:07:05,199 --> 00:07:09,580
thing is on page SEO and this has to do

00:07:07,210 --> 00:07:10,960
with everything that you do on your

00:07:09,580 --> 00:07:13,090
website the other four things are

00:07:10,960 --> 00:07:14,879
essentially stuff off your website you

00:07:13,090 --> 00:07:17,979
know it's the links to your side and

00:07:14,879 --> 00:07:20,860
everybody talking about your site but

00:07:17,979 --> 00:07:22,509
the things on your site may not factored

00:07:20,860 --> 00:07:25,210
in as heavily in the Google algorithm

00:07:22,509 --> 00:07:28,840
but I believe that they influence those

00:07:25,210 --> 00:07:31,780
other four factors because on-page SEO

00:07:28,840 --> 00:07:34,780
is really all about UX it's about how

00:07:31,780 --> 00:07:38,259
you build the experience on your website

00:07:34,780 --> 00:07:40,870
to make it easy for users to find things

00:07:38,259 --> 00:07:43,569
so the on-page SEO is stuff like you

00:07:40,870 --> 00:07:46,750
know having h1 tags you know that have

00:07:43,569 --> 00:07:48,460
all your titles very large having bread

00:07:46,750 --> 00:07:51,099
crumbs having a slight structure that's

00:07:48,460 --> 00:07:54,250
easy to navigate having clean urls and

00:07:51,099 --> 00:07:55,719
that's all provides good UX and helps

00:07:54,250 --> 00:07:59,409
users on your website and that's

00:07:55,719 --> 00:08:00,610
something that Google tracks heavily now

00:07:59,409 --> 00:08:03,690
with everything that I'm talking about

00:08:00,610 --> 00:08:06,370
today I don't want to make it seem like

00:08:03,690 --> 00:08:07,889
I actually know the definitive truth

00:08:06,370 --> 00:08:11,080
with any of this the reality is that

00:08:07,889 --> 00:08:13,120
Google and other search engines keep the

00:08:11,080 --> 00:08:17,800
specific details of their algorithms

00:08:13,120 --> 00:08:20,380
close closely held secrets so it's more

00:08:17,800 --> 00:08:22,389
like secondary information based off of

00:08:20,380 --> 00:08:25,419
our experience in making certain changes

00:08:22,389 --> 00:08:27,849
seeing how they affect our search

00:08:25,419 --> 00:08:29,620
rankings and that type of thing but just

00:08:27,849 --> 00:08:32,409
like Socrates the guy in this picture

00:08:29,620 --> 00:08:33,550
said anyone who thinks they know

00:08:32,409 --> 00:08:35,770
something doesn't really know anything

00:08:33,550 --> 00:08:37,570
at all I don't think I know anything but

00:08:35,770 --> 00:08:39,159
at the very least I'm aware of that fact

00:08:37,570 --> 00:08:42,039
so we can make some better decisions

00:08:39,159 --> 00:08:43,029
based off of that and so what we're

00:08:42,039 --> 00:08:44,620
talking about in this presentation is

00:08:43,029 --> 00:08:47,380
not really definitive fact it's it's

00:08:44,620 --> 00:08:49,630
more of our philosophy and it's a

00:08:47,380 --> 00:08:51,610
philosophy that was formed especially

00:08:49,630 --> 00:08:56,079
over this past year as we branched out

00:08:51,610 --> 00:08:58,810
from our purely server-side website that

00:08:56,079 --> 00:09:00,790
we've had for a while and started to

00:08:58,810 --> 00:09:03,070
build full stack JavaScript web

00:09:00,790 --> 00:09:05,110
applications and started to combine the

00:09:03,070 --> 00:09:07,270
best of both worlds our SEO knowledge

00:09:05,110 --> 00:09:08,200
with a lot of latest and greatest

00:09:07,270 --> 00:09:12,010
client-side

00:09:08,200 --> 00:09:14,680
javascript technologies so the problem

00:09:12,010 --> 00:09:16,930
at a fundamental level with JavaScript

00:09:14,680 --> 00:09:19,480
and SEO is that when you're doing a

00:09:16,930 --> 00:09:23,050
single page application the server-side

00:09:19,480 --> 00:09:24,850
returns typically an empty primer page

00:09:23,050 --> 00:09:26,440
because you have your client that's

00:09:24,850 --> 00:09:27,880
actually doing the rendering and so

00:09:26,440 --> 00:09:29,590
Google will see is just something like

00:09:27,880 --> 00:09:31,690
this where it's just a body tag with

00:09:29,590 --> 00:09:34,950
nothing in it your client is rendering

00:09:31,690 --> 00:09:37,510
everything right but that will basically

00:09:34,950 --> 00:09:40,600
when you do this mean that nothing is

00:09:37,510 --> 00:09:42,850
indexed the common solution is use the

00:09:40,600 --> 00:09:44,890
Google fragment specification and I

00:09:42,850 --> 00:09:46,240
would imagine that a lot of people have

00:09:44,890 --> 00:09:49,600
heard of the Google's progress

00:09:46,240 --> 00:09:53,500
specification it's basically a process

00:09:49,600 --> 00:09:56,400
that you indicate to google that your

00:09:53,500 --> 00:09:58,330
site is using client side rendering so

00:09:56,400 --> 00:10:00,730
typically two different ways that what I

00:09:58,330 --> 00:10:03,040
have up here is in your URLs having the

00:10:00,730 --> 00:10:06,280
hash bang or you can also in the head

00:10:03,040 --> 00:10:09,040
section of your HTML put a meta tag that

00:10:06,280 --> 00:10:11,080
indicates the same thing but when you do

00:10:09,040 --> 00:10:12,490
that Google knows that it's not going to

00:10:11,080 --> 00:10:15,220
be able to index anything at that site

00:10:12,490 --> 00:10:19,390
so it will instead make a request for

00:10:15,220 --> 00:10:22,180
escape fragment with whatever the path

00:10:19,390 --> 00:10:25,840
is and it's your responsibility on your

00:10:22,180 --> 00:10:28,870
server with that second request the

00:10:25,840 --> 00:10:33,220
escape fragment one to return exactly

00:10:28,870 --> 00:10:35,650
what the client is viewing this is a if

00:10:33,220 --> 00:10:37,390
you do a search of how do you get your

00:10:35,650 --> 00:10:38,920
client-side web application indexed in

00:10:37,390 --> 00:10:42,880
Google this is almost certainly what's

00:10:38,920 --> 00:10:48,040
going to come up and this is not what we

00:10:42,880 --> 00:10:50,950
felt was best for us and there are four

00:10:48,040 --> 00:10:54,310
primary reasons for that the first is

00:10:50,950 --> 00:10:56,710
that human beings care about URLs I know

00:10:54,310 --> 00:10:58,630
that we're geeks you know we we make

00:10:56,710 --> 00:11:00,340
excuses for some of the stuff if we do

00:10:58,630 --> 00:11:02,290
that oh it's not that bad or whatever

00:11:00,340 --> 00:11:05,350
but there's a lot of studies that go

00:11:02,290 --> 00:11:08,280
into the fact that creating a very short

00:11:05,350 --> 00:11:10,720
clean URL with not any crazy characters

00:11:08,280 --> 00:11:12,880
leads to more clicks it leads to a

00:11:10,720 --> 00:11:15,040
better user experience if any of you

00:11:12,880 --> 00:11:16,750
guys have done any work work with google

00:11:15,040 --> 00:11:19,070
adwords you especially know this because

00:11:16,750 --> 00:11:21,260
every single character in that

00:11:19,070 --> 00:11:24,080
makes a difference in how effective it

00:11:21,260 --> 00:11:27,710
is and the same types of rules apply for

00:11:24,080 --> 00:11:30,350
organic search now like I mentioned you

00:11:27,710 --> 00:11:32,420
can do the fragments ossification

00:11:30,350 --> 00:11:36,620
without the hash bang you can use the

00:11:32,420 --> 00:11:39,860
meta tag and do html5 push state so that

00:11:36,620 --> 00:11:42,260
it is actually theoretically cleaning

00:11:39,860 --> 00:11:46,310
URL but most people implement it in this

00:11:42,260 --> 00:11:50,090
way the next thing is cloaking cloaking

00:11:46,310 --> 00:11:52,730
is the process of showing Google or

00:11:50,090 --> 00:11:55,010
another search engine something

00:11:52,730 --> 00:11:57,860
different very different than what

00:11:55,010 --> 00:11:59,150
you're showing your clients and this the

00:11:57,860 --> 00:12:02,560
origin of this comes from the early days

00:11:59,150 --> 00:12:06,620
of search engines when spammers would

00:12:02,560 --> 00:12:08,410
typically feed Google content about

00:12:06,620 --> 00:12:10,790
diapers or something like that and

00:12:08,410 --> 00:12:12,650
Google well this wouldn't typically

00:12:10,790 --> 00:12:14,690
happen with google but more the other

00:12:12,650 --> 00:12:16,820
like Alta Vista and older search engines

00:12:14,690 --> 00:12:18,590
and then they would index that and

00:12:16,820 --> 00:12:20,090
somebody would see the title oh you know

00:12:18,590 --> 00:12:22,880
it's diapers and click on that and then

00:12:20,090 --> 00:12:26,210
it would be like a porn site and that

00:12:22,880 --> 00:12:29,000
practice is is taken very seriously by

00:12:26,210 --> 00:12:32,750
Google but actually more recently it's

00:12:29,000 --> 00:12:34,220
not just the spammer side of things it's

00:12:32,750 --> 00:12:36,280
also the fact that because of the

00:12:34,220 --> 00:12:40,790
on-page SEO that stuff that I mentioned

00:12:36,280 --> 00:12:42,500
Google does a lot of measuring of the

00:12:40,790 --> 00:12:45,020
exact specifics of what's on your page

00:12:42,500 --> 00:12:46,490
and how that affects user behavior so

00:12:45,020 --> 00:12:48,500
when you're showing something different

00:12:46,490 --> 00:12:51,190
to Google than what the users actually

00:12:48,500 --> 00:12:53,420
seeing Google isn't able to measure that

00:12:51,190 --> 00:12:54,800
anecdotally and I don't have actually

00:12:53,420 --> 00:12:56,630
like numbers for this or anything like

00:12:54,800 --> 00:12:58,070
that but I've seen a lot of people

00:12:56,630 --> 00:13:00,740
implement the fragment specification

00:12:58,070 --> 00:13:05,620
where they do give something radically

00:13:00,740 --> 00:13:05,620
different to Google through the fragment

00:13:05,740 --> 00:13:13,160
spec URL than they do with their clients

00:13:09,200 --> 00:13:16,640
and besides like being banned I think

00:13:13,160 --> 00:13:18,260
that Google and this is just you know

00:13:16,640 --> 00:13:20,780
our belief of this it's not a more of an

00:13:18,260 --> 00:13:23,450
anecdotal thing that because that

00:13:20,780 --> 00:13:25,580
possibility exists and more than likely

00:13:23,450 --> 00:13:28,280
Google understands that there's no way

00:13:25,580 --> 00:13:30,260
that they trust that data coming back

00:13:28,280 --> 00:13:31,910
from the fragment specification and

00:13:30,260 --> 00:13:32,600
therefore there's no way that they can

00:13:31,910 --> 00:13:36,529
rank that

00:13:32,600 --> 00:13:38,029
same way the next thing is with headless

00:13:36,529 --> 00:13:39,589
browser so actually I should clarify

00:13:38,029 --> 00:13:41,569
that headless browser actually don't

00:13:39,589 --> 00:13:44,600
suck they're actually awesome but for

00:13:41,569 --> 00:13:47,300
testing when you're trying to use them

00:13:44,600 --> 00:13:48,800
to implement the fraggin specification

00:13:47,300 --> 00:13:51,350
and you sort of need to to create a

00:13:48,800 --> 00:13:55,310
snapshot they will run on your server

00:13:51,350 --> 00:13:57,740
and read the HTML generated by your

00:13:55,310 --> 00:13:59,660
client-side web app and sort of save a

00:13:57,740 --> 00:14:01,639
snapshot of that and then you can serve

00:13:59,660 --> 00:14:04,850
that to google for that fragment

00:14:01,639 --> 00:14:08,269
specification request but it takes a ton

00:14:04,850 --> 00:14:09,470
of resources memory and it's just

00:14:08,269 --> 00:14:12,440
something you don't want to run on your

00:14:09,470 --> 00:14:15,139
production server the only way to

00:14:12,440 --> 00:14:18,529
legitimately use this solution would be

00:14:15,139 --> 00:14:20,569
to run it off host or use a cloud

00:14:18,529 --> 00:14:23,149
service provider like pre-render IO or

00:14:20,569 --> 00:14:26,209
Brom bone but in either of those cases

00:14:23,149 --> 00:14:28,970
when you start doing that you lose your

00:14:26,209 --> 00:14:30,889
ability to provide Google with up to the

00:14:28,970 --> 00:14:32,540
date version of what your clients seen

00:14:30,889 --> 00:14:36,019
you end up actually especially for the

00:14:32,540 --> 00:14:37,550
cloud service providers doing a cached

00:14:36,019 --> 00:14:40,639
version that's like a day or maybe even

00:14:37,550 --> 00:14:44,120
more old for us that didn't work because

00:14:40,639 --> 00:14:47,269
whence once google starts ranking you

00:14:44,120 --> 00:14:49,880
somewhat highly they search your site

00:14:47,269 --> 00:14:53,360
more and more and for us google is

00:14:49,880 --> 00:14:56,389
almost constantly crawling our site and

00:14:53,360 --> 00:14:59,569
we need the ability to caching is fine

00:14:56,389 --> 00:15:01,189
but we need to have it down to the order

00:14:59,569 --> 00:15:04,610
magnitude of minutes rather than days

00:15:01,189 --> 00:15:07,339
and it's just infeasible with a headless

00:15:04,610 --> 00:15:10,730
browser and finally probably the biggest

00:15:07,339 --> 00:15:11,930
issue with the fragment specification is

00:15:10,730 --> 00:15:15,410
that if you think about the universe

00:15:11,930 --> 00:15:18,410
that is the web the number of sites that

00:15:15,410 --> 00:15:20,569
are using the fragment specification for

00:15:18,410 --> 00:15:23,540
single page applications is like a dot

00:15:20,569 --> 00:15:26,689
on the behind of that entire universe

00:15:23,540 --> 00:15:29,120
and that's a problem because Google and

00:15:26,689 --> 00:15:32,089
other search engines are learning

00:15:29,120 --> 00:15:34,069
systems they make predictions based off

00:15:32,089 --> 00:15:36,259
of the data that they see from other

00:15:34,069 --> 00:15:39,019
similar websites if they don't have that

00:15:36,259 --> 00:15:41,990
data they don't have the information to

00:15:39,019 --> 00:15:43,069
back making an accurate prediction do

00:15:41,990 --> 00:15:45,199
you think that they're going to err on

00:15:43,069 --> 00:15:46,310
the side of whatever like they'll just

00:15:45,199 --> 00:15:49,279
throw it up there and

00:15:46,310 --> 00:15:51,650
and have you know this site they know

00:15:49,279 --> 00:15:53,360
nothing about to be equal ranking with

00:15:51,650 --> 00:15:57,710
some other site that they can pretty

00:15:53,360 --> 00:16:00,170
definitively know and trust what whether

00:15:57,710 --> 00:16:02,570
it's spam and whether it's following all

00:16:00,170 --> 00:16:03,920
their best practices more likely not

00:16:02,570 --> 00:16:06,380
especially because of some of the other

00:16:03,920 --> 00:16:07,760
stuff i mentioned we're even people that

00:16:06,380 --> 00:16:09,500
implement the fragment sophistication

00:16:07,760 --> 00:16:13,160
don't necessarily do it in the best

00:16:09,500 --> 00:16:14,360
possible way all the time so you know i

00:16:13,160 --> 00:16:17,779
went over this presentation with

00:16:14,360 --> 00:16:19,820
Matthias nebula whose year the MU if any

00:16:17,779 --> 00:16:22,580
guys follow his blog remember the

00:16:19,820 --> 00:16:27,740
angular core team and you he blogs the

00:16:22,580 --> 00:16:29,779
fact that well maybe but what if google

00:16:27,740 --> 00:16:31,010
actually because you know Google and and

00:16:29,779 --> 00:16:32,180
especially the angular team very

00:16:31,010 --> 00:16:35,180
strongly believe that the future of the

00:16:32,180 --> 00:16:36,830
web is on the client side so maybe even

00:16:35,180 --> 00:16:39,470
though all that may be true they

00:16:36,830 --> 00:16:41,230
actually are pulling in more data than

00:16:39,470 --> 00:16:43,490
you think on the client side apps and

00:16:41,230 --> 00:16:46,150
maybe they already have their rendering

00:16:43,490 --> 00:16:49,670
engine for the client side much more

00:16:46,150 --> 00:16:52,280
further along you would think and let's

00:16:49,670 --> 00:16:55,280
say that you're you build a Google

00:16:52,280 --> 00:16:57,070
fragment specification web app that

00:16:55,280 --> 00:17:00,230
follows all the other best practices

00:16:57,070 --> 00:17:02,240
what if all of those conditions and I

00:17:00,230 --> 00:17:04,850
would say that sure maybe there's a

00:17:02,240 --> 00:17:07,850
chance that you could do things

00:17:04,850 --> 00:17:09,410
perfectly and Google does actually rank

00:17:07,850 --> 00:17:11,660
you just as well as a server-side

00:17:09,410 --> 00:17:14,770
application but if I put my money on it

00:17:11,660 --> 00:17:16,939
I would say that that's not likely and

00:17:14,770 --> 00:17:19,579
furthermore i just don't like to take

00:17:16,939 --> 00:17:24,100
crazy completely unnecessary risks with

00:17:19,579 --> 00:17:27,650
my livelihood so what's the solution

00:17:24,100 --> 00:17:30,710
what what's the answer here and for us

00:17:27,650 --> 00:17:32,810
it's server pre-rendering it's making

00:17:30,710 --> 00:17:35,990
your client-side web application act

00:17:32,810 --> 00:17:38,630
like a server-side website and what that

00:17:35,990 --> 00:17:41,870
means is for the initial page load the

00:17:38,630 --> 00:17:43,840
server is returning back the actual page

00:17:41,870 --> 00:17:46,700
the fully rendered page in the

00:17:43,840 --> 00:17:48,950
background javascript downloads and

00:17:46,700 --> 00:17:51,710
bootstraps and then for all subsequent

00:17:48,950 --> 00:17:52,850
clicks the user is actually interacting

00:17:51,710 --> 00:17:56,210
with it just like a single page

00:17:52,850 --> 00:17:59,510
application search engines don't even

00:17:56,210 --> 00:18:01,610
though they might render JavaScript for

00:17:59,510 --> 00:18:05,000
analysis purposes when they're crawling

00:18:01,610 --> 00:18:07,490
they're not crawling using client-side

00:18:05,000 --> 00:18:09,680
routing ever they're always doing like a

00:18:07,490 --> 00:18:12,680
full page reload so they'll always get

00:18:09,680 --> 00:18:15,680
the server-side version so in order to

00:18:12,680 --> 00:18:17,960
do this you have to set up rendering on

00:18:15,680 --> 00:18:21,190
both sides and so who does this twitter

00:18:17,960 --> 00:18:25,670
is actually the primary example if you

00:18:21,190 --> 00:18:27,770
do remember when Twitter started they

00:18:25,670 --> 00:18:30,080
used hash bang for everything the URLs

00:18:27,770 --> 00:18:32,270
every URL they had was well almost every

00:18:30,080 --> 00:18:34,640
URL was it was hash bang and in fact

00:18:32,270 --> 00:18:36,230
they were one of the primary drivers to

00:18:34,640 --> 00:18:38,930
get google to implement the fragment

00:18:36,230 --> 00:18:40,940
specification but they changed the

00:18:38,930 --> 00:18:43,420
server server pre-rendering two years

00:18:40,940 --> 00:18:45,950
ago and I did for performance reasons

00:18:43,420 --> 00:18:47,480
but it's helped their SEO as well

00:18:45,950 --> 00:18:49,670
there's a number of isomorphic

00:18:47,480 --> 00:18:53,930
JavaScript frameworks out there that you

00:18:49,670 --> 00:18:56,000
can use render pete's react is able to

00:18:53,930 --> 00:18:57,200
do server-side pre-rendering derby and

00:18:56,000 --> 00:18:59,420
then there's more on the way I know

00:18:57,200 --> 00:19:00,800
there's a lot of amber fans in the room

00:18:59,420 --> 00:19:03,500
and I've been talking to some of the

00:19:00,800 --> 00:19:04,460
amber guys and they I don't know which

00:19:03,500 --> 00:19:06,230
release they're going to have it but

00:19:04,460 --> 00:19:08,180
they are definitely having server

00:19:06,230 --> 00:19:11,210
rendering in one of their future

00:19:08,180 --> 00:19:12,440
releases which is pretty awesome but

00:19:11,210 --> 00:19:16,400
they don't see angular around there so

00:19:12,440 --> 00:19:19,640
at ng comp a couple months ago I tracked

00:19:16,400 --> 00:19:22,010
down visco who's the father of angular

00:19:19,640 --> 00:19:25,400
and asked him about the server rendering

00:19:22,010 --> 00:19:28,550
and what misko said is that they

00:19:25,400 --> 00:19:31,400
actually did explore building a angular

00:19:28,550 --> 00:19:33,500
server renderer and had something

00:19:31,400 --> 00:19:35,270
working but they ultimately dropped it

00:19:33,500 --> 00:19:38,870
because they believe that the future the

00:19:35,270 --> 00:19:42,680
web is on the client which kind of sucks

00:19:38,870 --> 00:19:46,610
but at least he said that they had it

00:19:42,680 --> 00:19:49,850
working so it can't be that tough well

00:19:46,610 --> 00:19:52,790
yes it can it's actually very tough I

00:19:49,850 --> 00:19:55,510
spent probably a better part of a month

00:19:52,790 --> 00:19:59,420
just focused on trying to build this and

00:19:55,510 --> 00:20:03,100
I know I feel really well I know jobs

00:19:59,420 --> 00:20:05,450
could pretty well I think but I think

00:20:03,100 --> 00:20:08,210
ultimately threw in the towel because

00:20:05,450 --> 00:20:11,210
there were so many unknowns trying to

00:20:08,210 --> 00:20:13,280
build an isomorphic JavaScript framework

00:20:11,210 --> 00:20:16,370
without having all the

00:20:13,280 --> 00:20:17,750
knowledge of how JavaScript should be

00:20:16,370 --> 00:20:20,330
able to render on both the client and

00:20:17,750 --> 00:20:22,850
server so pick myself up and I tried

00:20:20,330 --> 00:20:24,560
something different instead of creating

00:20:22,850 --> 00:20:26,450
this ultimate framework I just wanted to

00:20:24,560 --> 00:20:29,470
do something quick and dirty to get

00:20:26,450 --> 00:20:32,120
something working and what that meant is

00:20:29,470 --> 00:20:34,130
essentially doing something more in my

00:20:32,120 --> 00:20:36,620
wheelhouse of creating in any of our

00:20:34,130 --> 00:20:37,970
just a normal angular app as if you

00:20:36,620 --> 00:20:42,440
forget about the server rendering stuff

00:20:37,970 --> 00:20:45,320
initially but then go route by route 44

00:20:42,440 --> 00:20:48,230
the client-side routes and duplicate

00:20:45,320 --> 00:20:51,260
literally duplicate the rendering logic

00:20:48,230 --> 00:20:54,140
that's in angular onto server the server

00:20:51,260 --> 00:20:57,080
side onto a node controller and template

00:20:54,140 --> 00:20:58,580
and so what that started looked like

00:20:57,080 --> 00:21:02,840
just to give you kind of an example some

00:20:58,580 --> 00:21:04,670
of the code for the routes it was

00:21:02,840 --> 00:21:06,310
important to define routes and use the

00:21:04,670 --> 00:21:10,730
angular UI router on the client side

00:21:06,310 --> 00:21:12,050
such that I had a common routing

00:21:10,730 --> 00:21:13,610
configuration file that was used for

00:21:12,050 --> 00:21:15,320
both because when you're doing something

00:21:13,610 --> 00:21:18,290
with SEO like I've mentioned a couple

00:21:15,320 --> 00:21:20,150
times already this presentation URLs are

00:21:18,290 --> 00:21:21,710
very important it's very important to

00:21:20,150 --> 00:21:23,540
have clean urls it's very important to

00:21:21,710 --> 00:21:25,460
have everything URL driven and I

00:21:23,540 --> 00:21:27,500
actually one thing that I do like a lot

00:21:25,460 --> 00:21:30,170
about embers that they sort of think

00:21:27,500 --> 00:21:32,390
along those lines as well and so I

00:21:30,170 --> 00:21:35,510
created a sort of abstraction on top of

00:21:32,390 --> 00:21:37,910
both the angular UI router and the

00:21:35,510 --> 00:21:40,190
Express on the server side the Express

00:21:37,910 --> 00:21:42,470
router so that I could define a bunch of

00:21:40,190 --> 00:21:45,680
routes and then feed it into both of

00:21:42,470 --> 00:21:47,210
those routers one thing that was

00:21:45,680 --> 00:21:49,670
important in building angular app even

00:21:47,210 --> 00:21:52,130
though initially I wanted to just build

00:21:49,670 --> 00:21:53,120
a client's that app without worrying

00:21:52,130 --> 00:21:55,250
about the server side and just get the

00:21:53,120 --> 00:21:59,960
functionality working I did make a

00:21:55,250 --> 00:22:02,660
strong effort to think do things from a

00:21:59,960 --> 00:22:04,700
component focused way that I didn't just

00:22:02,660 --> 00:22:06,170
build like an entire page for about have

00:22:04,700 --> 00:22:07,880
like one controller that did everything

00:22:06,170 --> 00:22:10,610
it was important to break things down

00:22:07,880 --> 00:22:12,800
into very small components because if i

00:22:10,610 --> 00:22:14,600
was going to copy you know the code over

00:22:12,800 --> 00:22:17,210
and translate it to the server side it's

00:22:14,600 --> 00:22:20,000
much easier to translate like 20 to 40

00:22:17,210 --> 00:22:23,300
lines of code then like 200 or 2000

00:22:20,000 --> 00:22:25,070
lines for like an entire complex page so

00:22:23,300 --> 00:22:26,930
starting to get into like the

00:22:25,070 --> 00:22:30,500
duplication of the actual components and

00:22:26,930 --> 00:22:31,760
at the controller level you can I I'm

00:22:30,500 --> 00:22:34,100
not gonna go over all the code but just

00:22:31,760 --> 00:22:36,380
to give a sense of how if you look at

00:22:34,100 --> 00:22:39,440
the server and client side it's somewhat

00:22:36,380 --> 00:22:41,060
similar but somewhat different and this

00:22:39,440 --> 00:22:43,130
is like really once I started doing this

00:22:41,060 --> 00:22:45,380
like I got really excited because number

00:22:43,130 --> 00:22:46,760
one it worked like it would actually

00:22:45,380 --> 00:22:48,980
render on the client side and would

00:22:46,760 --> 00:22:50,270
render on the server side but as I was

00:22:48,980 --> 00:22:51,560
doing this I could see what the

00:22:50,270 --> 00:22:53,930
difference reserves I could almost

00:22:51,560 --> 00:22:56,270
envision in my head then for the next

00:22:53,930 --> 00:22:57,410
iteration how I could refactor this so

00:22:56,270 --> 00:22:59,470
that I can actually create that

00:22:57,410 --> 00:23:02,720
isomorphic controller that can do both

00:22:59,470 --> 00:23:05,000
same thing with the templates and don't

00:23:02,720 --> 00:23:07,580
get thrown off by we have a custom

00:23:05,000 --> 00:23:10,760
JavaScript templating engine that we use

00:23:07,580 --> 00:23:14,300
so it's not HTML it'sit's JavaScript for

00:23:10,760 --> 00:23:15,830
the template but similarly it's somewhat

00:23:14,300 --> 00:23:17,360
similar but you know instead of energy

00:23:15,830 --> 00:23:19,700
if we have like a server-side if

00:23:17,360 --> 00:23:24,170
function and ng-repeat in our server

00:23:19,700 --> 00:23:28,970
side each function etc so let's do a

00:23:24,170 --> 00:23:34,630
quick demo so I built we haven't moved

00:23:28,970 --> 00:23:37,610
over get human comm yet but I created a

00:23:34,630 --> 00:23:44,480
application that's for doing questions

00:23:37,610 --> 00:23:46,550
and answers and initially if you go to

00:23:44,480 --> 00:23:48,740
server true that i have on every page

00:23:46,550 --> 00:23:50,870
you'll see the server-side version of

00:23:48,740 --> 00:23:55,070
the page i purposely turned off on the

00:23:50,870 --> 00:23:57,260
right side the the related search

00:23:55,070 --> 00:24:00,320
results so that you can see the

00:23:57,260 --> 00:24:02,000
difference that without the or with the

00:24:00,320 --> 00:24:04,490
server equals true rather where it's

00:24:02,000 --> 00:24:06,020
just the server version it's pretty much

00:24:04,490 --> 00:24:07,940
the same thing other than what I kind of

00:24:06,020 --> 00:24:09,770
turned off and also like the login in

00:24:07,940 --> 00:24:13,550
the upper right hand corner but when you

00:24:09,770 --> 00:24:15,710
go to the actual thing it has all the

00:24:13,550 --> 00:24:17,750
content and so you probably didn't even

00:24:15,710 --> 00:24:20,690
notice like any flashes or anything like

00:24:17,750 --> 00:24:23,540
that because literally HTML is exactly

00:24:20,690 --> 00:24:27,170
the same so the client side when it

00:24:23,540 --> 00:24:30,760
takes over does rerender the page but it

00:24:27,170 --> 00:24:33,650
doesn't actually like do any weird like

00:24:30,760 --> 00:24:37,000
moving around of the HTML or any of the

00:24:33,650 --> 00:24:37,000
actual elements or anything like that

00:24:45,210 --> 00:24:50,950
so up next is to do and actually this is

00:24:49,929 --> 00:24:52,480
something I've been working on for the

00:24:50,950 --> 00:24:55,080
past month and probably will be for

00:24:52,480 --> 00:24:57,820
another couple months which is taking

00:24:55,080 --> 00:25:00,100
what is actually working out in I should

00:24:57,820 --> 00:25:01,480
mention that the answer site is still in

00:25:00,100 --> 00:25:03,010
beta we're still doing a couple things

00:25:01,480 --> 00:25:04,720
before we actually launched it

00:25:03,010 --> 00:25:07,780
officially but you guys can feel free to

00:25:04,720 --> 00:25:09,360
check it out but I've already started

00:25:07,780 --> 00:25:12,490
working on our next version which is

00:25:09,360 --> 00:25:13,870
taking that duplicated content then and

00:25:12,490 --> 00:25:16,150
which you know obviously for the long

00:25:13,870 --> 00:25:18,400
term maintaining both of those is

00:25:16,150 --> 00:25:20,470
probably infeasible and and doing the

00:25:18,400 --> 00:25:22,150
refactoring to create those isomorphic

00:25:20,470 --> 00:25:27,070
controllers that can be rendered on both

00:25:22,150 --> 00:25:29,140
side and isomorphic templates etc for

00:25:27,070 --> 00:25:33,100
takeaways I tried to boil things down to

00:25:29,140 --> 00:25:37,270
you know four things before eyes so

00:25:33,100 --> 00:25:40,929
intrigued before anything just remember

00:25:37,270 --> 00:25:42,460
that as far as SEO goes you have to

00:25:40,929 --> 00:25:45,100
create injury intrigue you have to

00:25:42,460 --> 00:25:47,320
create an awesome app if you don't have

00:25:45,100 --> 00:25:50,470
that if people aren't interested in your

00:25:47,320 --> 00:25:53,040
app then more than likely your SEO

00:25:50,470 --> 00:25:55,809
efforts are not going to do very much

00:25:53,040 --> 00:25:58,870
initial page load isn't very important

00:25:55,809 --> 00:26:00,429
for SEO like I mentioned and we believe

00:25:58,870 --> 00:26:02,640
that the server pre-rendering is a

00:26:00,429 --> 00:26:06,040
better solution for ranking higher

00:26:02,640 --> 00:26:09,250
highly than the Google fragments

00:26:06,040 --> 00:26:11,679
ossification isomorphic using the

00:26:09,250 --> 00:26:13,809
isomorphic JavaScript frameworks is a

00:26:11,679 --> 00:26:15,850
way that you can accomplish that I don't

00:26:13,809 --> 00:26:18,460
necessarily recommend people doing what

00:26:15,850 --> 00:26:21,490
I did to especially not creating a

00:26:18,460 --> 00:26:23,290
suicide version of angular but there's

00:26:21,490 --> 00:26:26,020
obviously a number of frameworks on that

00:26:23,290 --> 00:26:27,640
list that you guys can use and I mean

00:26:26,020 --> 00:26:29,260
react is probably the best one that's

00:26:27,640 --> 00:26:30,510
available right now and once ember comes

00:26:29,260 --> 00:26:34,809
out with their server side rendering

00:26:30,510 --> 00:26:36,700
it'll be great too and finally iterate

00:26:34,809 --> 00:26:38,860
you know just from a general software

00:26:36,700 --> 00:26:42,460
development standpoint I learned a lot

00:26:38,860 --> 00:26:45,190
with this you know past year about not

00:26:42,460 --> 00:26:46,720
necessarily going for that perfect

00:26:45,190 --> 00:26:48,910
solution right from the start and just

00:26:46,720 --> 00:26:51,820
getting something working it's helped

00:26:48,910 --> 00:26:54,520
tremendously in this case to get

00:26:51,820 --> 00:26:56,710
something somewhat ugly but very

00:26:54,520 --> 00:26:58,750
functional and from user standpoint they

00:26:56,710 --> 00:27:01,120
don't know the difference and then

00:26:58,750 --> 00:27:03,460
with the subsequent iterations it's

00:27:01,120 --> 00:27:05,740
becoming more of an exercise than an

00:27:03,460 --> 00:27:10,750
experiment it's actually just executing

00:27:05,740 --> 00:27:12,730
on doing that refactoring I'd like to

00:27:10,750 --> 00:27:14,800
thank a lot of people that helped me

00:27:12,730 --> 00:27:18,760
kind of reviewing my presentation and

00:27:14,800 --> 00:27:20,260
giving me some great feedback and have

00:27:18,760 --> 00:27:22,390
some links and the last thing I was

00:27:20,260 --> 00:27:25,330
gonna mention is just I did a post a

00:27:22,390 --> 00:27:28,540
blog post on my website Jeff will play

00:27:25,330 --> 00:27:30,100
calm which I put all the slides in a lot

00:27:28,540 --> 00:27:32,350
of commentary and links and that type of

00:27:30,100 --> 00:27:35,130
thing if you guys are interested but

00:27:32,350 --> 00:27:38,310
that's it thanks a lot i think i have

00:27:35,130 --> 00:27:38,310

YouTube URL: https://www.youtube.com/watch?v=qWqHmaphHWc


