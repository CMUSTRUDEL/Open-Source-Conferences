Title: JS.Geo- Lighting Talks
Publication date: 2020-01-23
Playlist: JS.Geo 2014
Description: 
	Help us caption & translate this video!

http://amara.org/v/FS0x/
Captions: 
	00:00:16,660 --> 00:00:19,150
good morning everyone so I'm actually

00:00:17,890 --> 00:00:20,560
talking about a project we're working on

00:00:19,150 --> 00:00:22,480
it ESRI I'm actually started by Chris

00:00:20,560 --> 00:00:24,189
home who couldn't be here he's busy

00:00:22,480 --> 00:00:25,660
enjoying Costa Rica um but it's probably

00:00:24,189 --> 00:00:28,029
called coupe which is a pretty

00:00:25,660 --> 00:00:29,800
interesting project um so what it is

00:00:28,029 --> 00:00:31,630
it's essentially taking any web api out

00:00:29,800 --> 00:00:34,600
there and convert it into geo JSON and

00:00:31,630 --> 00:00:36,100
future services nice way scrolls off the

00:00:34,600 --> 00:00:37,480
page they're the kind of thing that

00:00:36,100 --> 00:00:39,309
drove this here is we have a lot of API

00:00:37,480 --> 00:00:40,900
is out there through 11 api's things

00:00:39,309 --> 00:00:43,210
like that that have their own unique

00:00:40,900 --> 00:00:44,470
flavor every single time you want to

00:00:43,210 --> 00:00:46,440
make sure pulled us in and do filtering

00:00:44,470 --> 00:00:49,270
and analysis and visualization on those

00:00:46,440 --> 00:00:51,100
so I think of it as an ETL for API is to

00:00:49,270 --> 00:00:52,960
throw more acronyms in there so it works

00:00:51,100 --> 00:00:53,920
as odd there's a in the coop SERP server

00:00:52,960 --> 00:00:55,780
in the middle here it's all know

00:00:53,920 --> 00:00:58,539
JavaScript you write different providers

00:00:55,780 --> 00:01:00,820
that tap into your rest api is it then

00:00:58,539 --> 00:01:02,410
it check these out as future servers or

00:01:00,820 --> 00:01:03,670
geo JSON and i'll show you some other

00:01:02,410 --> 00:01:05,649
examples of things that's dumped me out

00:01:03,670 --> 00:01:10,119
too as well and it can optionally have a

00:01:05,649 --> 00:01:13,000
cache internally so it's on github on

00:01:10,119 --> 00:01:14,649
ESRI / coupe you can go play with it so

00:01:13,000 --> 00:01:16,810
the repos there you go grab it there's a

00:01:14,649 --> 00:01:19,060
coupe main project there's a whole bunch

00:01:16,810 --> 00:01:20,229
of other there's the coop server and

00:01:19,060 --> 00:01:21,369
there's a whole bunch of other providers

00:01:20,229 --> 00:01:22,660
I've shown here a couple that I'm

00:01:21,369 --> 00:01:25,119
working on with a coupe ArcGIS online

00:01:22,660 --> 00:01:28,179
coupe elasticsearch sample provider

00:01:25,119 --> 00:01:29,500
coupe gist so on and so forth so for

00:01:28,179 --> 00:01:30,940
example you can go and take and say if

00:01:29,500 --> 00:01:34,090
there's a gist out there and happens to

00:01:30,940 --> 00:01:35,410
be in this case goj son at click map it

00:01:34,090 --> 00:01:37,360
goes and gives me a quick map preview of

00:01:35,410 --> 00:01:39,670
it super basic super simple math locks

00:01:37,360 --> 00:01:41,800
rd matte box provides the tiles to get

00:01:39,670 --> 00:01:43,270
help to do that that's awesome we want

00:01:41,800 --> 00:01:44,860
to do more with it so for example here

00:01:43,270 --> 00:01:46,959
is city of Philadelphia has all their

00:01:44,860 --> 00:01:49,209
school facilities data here why don't I

00:01:46,959 --> 00:01:50,739
can go grab that a CSV geo JSON KML cool

00:01:49,209 --> 00:01:52,539
cuz it uploaded and cash it there a year

00:01:50,739 --> 00:01:55,179
ago since probably up to date but that's

00:01:52,539 --> 00:01:56,830
a whole another blog post um so using

00:01:55,179 --> 00:01:58,239
coupe we can reflect that out and grab

00:01:56,830 --> 00:02:00,190
the Geo JSON convert into future

00:01:58,239 --> 00:02:01,690
services so i could go use it my GIS and

00:02:00,190 --> 00:02:03,580
go to analysis go do visualizations

00:02:01,690 --> 00:02:05,170
things like that directly out of that

00:02:03,580 --> 00:02:07,360
github repository i don't move the data

00:02:05,170 --> 00:02:09,550
around it points back to that theme it

00:02:07,360 --> 00:02:12,849
query filter do dr tom analyses around

00:02:09,550 --> 00:02:14,890
my github hosted geo JSON files so

00:02:12,849 --> 00:02:17,319
there's other adapters and other AP eyes

00:02:14,890 --> 00:02:19,330
out there and then also already builds

00:02:17,319 --> 00:02:22,450
in using open source tools the ability

00:02:19,330 --> 00:02:25,390
to export via goj sign kml csv shapefile

00:02:22,450 --> 00:02:27,190
and more it's rd we work for the R&D

00:02:25,390 --> 00:02:27,970
center so we've already prototyped out

00:02:27,190 --> 00:02:30,520
dumping out

00:02:27,970 --> 00:02:32,860
grids vector tiles P&G tiles all from

00:02:30,520 --> 00:02:35,160
any of these arbitrary api's so if you

00:02:32,860 --> 00:02:37,090
had a bus tracking API a 311 API

00:02:35,160 --> 00:02:38,590
anything like that you can go and even

00:02:37,090 --> 00:02:40,840
flicker for example and turn that into

00:02:38,590 --> 00:02:42,940
goj song or PNG tiles or things like

00:02:40,840 --> 00:02:43,930
that on top of it so you wouldn't want

00:02:42,940 --> 00:02:45,100
to play with one of these we've been

00:02:43,930 --> 00:02:47,290
doing with is how do we actually make

00:02:45,100 --> 00:02:48,610
open sumup itself more accessible for

00:02:47,290 --> 00:02:51,430
people to do analysis and visualization

00:02:48,610 --> 00:02:53,470
with so you can use this there's an osm

00:02:51,430 --> 00:02:54,730
output provider you can go and grab to

00:02:53,470 --> 00:02:56,560
get you know if you ever want to play

00:02:54,730 --> 00:02:58,720
with your new geo JSON libraries I've

00:02:56,560 --> 00:03:00,400
seen a lot of lines for example you can

00:02:58,720 --> 00:03:02,500
go and grab them by type that's useful

00:03:00,400 --> 00:03:04,270
for technologists but I want to go grab

00:03:02,500 --> 00:03:05,950
them by state it's account of them by

00:03:04,270 --> 00:03:07,330
state um I can go and get the number of

00:03:05,950 --> 00:03:09,400
cafes and start doing where clause

00:03:07,330 --> 00:03:10,930
queries against these via a least a

00:03:09,400 --> 00:03:12,970
query you I and I can actually make it

00:03:10,930 --> 00:03:16,390
restful because it's pretty easy an ode

00:03:12,970 --> 00:03:17,830
to add more route endpoints there even

00:03:16,390 --> 00:03:20,020
go and start diving into this more and

00:03:17,830 --> 00:03:22,000
more even get distinct values here so

00:03:20,020 --> 00:03:24,790
something we've built to kind of explore

00:03:22,000 --> 00:03:26,380
this is this little example here so it's

00:03:24,790 --> 00:03:27,940
a little map I can go and say will click

00:03:26,380 --> 00:03:30,580
on you know an Oregon and multnomah

00:03:27,940 --> 00:03:33,400
county dive into there now actually want

00:03:30,580 --> 00:03:35,560
to go get by for example amenity here

00:03:33,400 --> 00:03:36,940
and I want to go and get very important

00:03:35,560 --> 00:03:39,760
to always know where your local toilets

00:03:36,940 --> 00:03:41,950
are so great cool i have this uh this

00:03:39,760 --> 00:03:44,709
little URL this is query against a

00:03:41,950 --> 00:03:47,110
awesome planet import it's now helping

00:03:44,709 --> 00:03:48,850
us out as a json future collection with

00:03:47,110 --> 00:03:51,250
all the different features there by at

00:03:48,850 --> 00:03:54,690
least a defined scheme at this point so

00:03:51,250 --> 00:03:59,380
i can go take this go pull this into

00:03:54,690 --> 00:04:00,910
curl it do total geo json io for example

00:03:59,380 --> 00:04:02,709
and i can go and map that out right so

00:04:00,910 --> 00:04:04,540
it's really things like open trip is

00:04:02,709 --> 00:04:06,250
just one example really accessible to

00:04:04,540 --> 00:04:10,780
play with very quickly and very very

00:04:06,250 --> 00:04:13,030
easily so keep driving into it so

00:04:10,780 --> 00:04:14,590
there's UI for it that's really it it's

00:04:13,030 --> 00:04:15,910
a it's a prequel project board using it

00:04:14,590 --> 00:04:17,709
behind the scenes and a couple projects

00:04:15,910 --> 00:04:19,180
like ArcGIS open data but we also are

00:04:17,709 --> 00:04:20,650
seeing cities want to adapt it as a way

00:04:19,180 --> 00:04:22,300
to make their API is already out there

00:04:20,650 --> 00:04:24,160
more accessible for developers like us

00:04:22,300 --> 00:04:28,110
to go and do cool things within whatever

00:04:24,160 --> 00:04:28,110
libraries you want to use so

00:04:31,319 --> 00:04:36,460
yeah okay thank you I'm tuple harvester

00:04:34,180 --> 00:04:37,779
from spatial dev so they ping me this

00:04:36,460 --> 00:04:39,460
weekend instead we have some extra time

00:04:37,779 --> 00:04:40,990
can use talk and I actually had nothing

00:04:39,460 --> 00:04:43,210
can to talk about so when I was working

00:04:40,990 --> 00:04:44,499
on my slides this morning at two in the

00:04:43,210 --> 00:04:45,400
two in the morning I was trying to

00:04:44,499 --> 00:04:47,740
figure out what we're going to talk

00:04:45,400 --> 00:04:49,900
about so I'm going to I'm going to

00:04:47,740 --> 00:04:51,610
preface this by saying that I'm not a

00:04:49,900 --> 00:04:54,370
developer my team does not let me write

00:04:51,610 --> 00:04:55,629
code anymore and i actually did

00:04:54,370 --> 00:04:57,279
implement any of things that i'm going

00:04:55,629 --> 00:04:58,650
to show today so my role in the

00:04:57,279 --> 00:05:02,169
organization now is sitting between

00:04:58,650 --> 00:05:06,460
demanding clients and brilliant but very

00:05:02,169 --> 00:05:08,979
opinionated developers so let me just

00:05:06,460 --> 00:05:10,629
launch into it so one of the things I

00:05:08,979 --> 00:05:11,949
hear all the time is this too slow we

00:05:10,629 --> 00:05:13,870
all hear this right this is everybody's

00:05:11,949 --> 00:05:16,509
favorite and we say slow relative to

00:05:13,870 --> 00:05:18,939
what what you want what your data says

00:05:16,509 --> 00:05:20,889
how fast you can go what does that mean

00:05:18,939 --> 00:05:23,080
exactly so in this particular example

00:05:20,889 --> 00:05:24,460
there was a client that had seventy

00:05:23,080 --> 00:05:27,009
thousand points and they wanted to use

00:05:24,460 --> 00:05:29,949
leaflet clusters and we wanted to

00:05:27,009 --> 00:05:31,389
classify those points and what we were

00:05:29,949 --> 00:05:34,210
doing was taken about 10 seconds and

00:05:31,389 --> 00:05:36,250
that which is not good enough so we

00:05:34,210 --> 00:05:39,189
rewrote the leaflet cluster marker

00:05:36,250 --> 00:05:41,289
library to get some SVG's out and inject

00:05:39,189 --> 00:05:43,180
some s3 goodness into them so we could

00:05:41,289 --> 00:05:45,099
dynamically cluster I think we can get

00:05:43,180 --> 00:05:47,259
up about 90,000 points in two seconds

00:05:45,099 --> 00:05:49,949
down to the client and here's the

00:05:47,259 --> 00:05:52,419
required screenshot and you can see some

00:05:49,949 --> 00:05:55,149
magical points getting clustered and

00:05:52,419 --> 00:05:56,529
they move around it's very fast so

00:05:55,149 --> 00:05:57,819
that's one example and these examples

00:05:56,529 --> 00:05:59,199
that I'm showing each of them is about a

00:05:57,819 --> 00:06:01,629
30 minute talk which I don't have time

00:05:59,199 --> 00:06:04,240
for obviously but they're all driven by

00:06:01,629 --> 00:06:06,669
the clients where where the application

00:06:04,240 --> 00:06:08,259
is deployed in our work it's mostly in

00:06:06,669 --> 00:06:11,860
the developing world where bandwidth is

00:06:08,259 --> 00:06:15,129
an issue computers are an issue browser

00:06:11,860 --> 00:06:16,509
versions are major issues so the next

00:06:15,129 --> 00:06:19,029
one I have is takes too much bandwidth

00:06:16,509 --> 00:06:20,740
don't say what does that mean they say

00:06:19,029 --> 00:06:22,029
well you were in the hotel in Tanzania

00:06:20,740 --> 00:06:23,199
and then we took it out to the country

00:06:22,029 --> 00:06:24,339
and the application didn't work anymore

00:06:23,199 --> 00:06:26,649
and I said well it's a website of course

00:06:24,339 --> 00:06:29,439
it didn't work anymore no we want the

00:06:26,649 --> 00:06:31,150
same experience when it's not connected

00:06:29,439 --> 00:06:35,620
as when it is connected

00:06:31,150 --> 00:06:37,270
okay well sorry okay so we do we're

00:06:35,620 --> 00:06:38,800
doing more and on and offline so right

00:06:37,270 --> 00:06:40,510
now we have a virtualized environment

00:06:38,800 --> 00:06:42,580
for some of our apps what we're moving

00:06:40,510 --> 00:06:44,170
to node WebKit so when when the customer

00:06:42,580 --> 00:06:46,540
takes that data or unplug the internet

00:06:44,170 --> 00:06:48,160
they get the same experience and we're

00:06:46,540 --> 00:06:50,350
decided to lease in our work is that

00:06:48,160 --> 00:06:52,390
they want the same experience regardless

00:06:50,350 --> 00:06:55,120
of the device and regardless of the

00:06:52,390 --> 00:06:58,300
internet connectivity so its mobile form

00:06:55,120 --> 00:06:59,620
factors desktop web and then on offline

00:06:58,300 --> 00:07:01,030
and here's so here's an example you

00:06:59,620 --> 00:07:03,750
actually did deliver virtualized

00:07:01,030 --> 00:07:06,010
environment everything packed into one

00:07:03,750 --> 00:07:07,990
deliverable of course the virtual

00:07:06,010 --> 00:07:09,190
environments too big for any sort of

00:07:07,990 --> 00:07:13,330
realistic distribution but we're

00:07:09,190 --> 00:07:15,520
certainly we're working on that it's too

00:07:13,330 --> 00:07:17,650
expensive we all do that doesn't scale

00:07:15,520 --> 00:07:19,210
we didn't know I so what does that mean

00:07:17,650 --> 00:07:21,730
it doesn't scale like you want more sirs

00:07:19,210 --> 00:07:25,000
you want it faster you want more data

00:07:21,730 --> 00:07:26,770
and what I typically here is if we have

00:07:25,000 --> 00:07:28,480
you know we want to start 10 million

00:07:26,770 --> 00:07:30,160
points listen we're not no we're not

00:07:28,480 --> 00:07:31,210
going to do that we have ten thousand

00:07:30,160 --> 00:07:34,030
layers no we're not going to do that

00:07:31,210 --> 00:07:36,160
either so we want to have some balance

00:07:34,030 --> 00:07:37,390
of scale and cost so that we can

00:07:36,160 --> 00:07:39,820
actually implement something that's

00:07:37,390 --> 00:07:42,520
reasonable for the client in this

00:07:39,820 --> 00:07:43,960
particular case with scalability for

00:07:42,520 --> 00:07:45,370
them meant they have to buy too many

00:07:43,960 --> 00:07:46,450
servers in order to serve the number of

00:07:45,370 --> 00:07:48,120
data layers that they wanted to serve

00:07:46,450 --> 00:07:52,210
across the globe that were very complex

00:07:48,120 --> 00:07:54,820
so we started working on node.js post GS

00:07:52,210 --> 00:07:56,770
you know wrappers back in dynamically

00:07:54,820 --> 00:07:59,770
generate tiles and dynamically generate

00:07:56,770 --> 00:08:00,940
vector tiles based on rest queries and

00:07:59,770 --> 00:08:02,890
then we're working on some leaflet

00:08:00,940 --> 00:08:05,260
canvas stuff that we can have met Nick

00:08:02,890 --> 00:08:08,260
PDFs come off down a consumable in

00:08:05,260 --> 00:08:10,180
leaflet there's the URL for that if you

00:08:08,260 --> 00:08:11,890
want to go check it out and get all of

00:08:10,180 --> 00:08:13,360
our stuff is open actually about I think

00:08:11,890 --> 00:08:14,500
we've exposed about a third of our repos

00:08:13,360 --> 00:08:16,000
and we're working on the rest of them

00:08:14,500 --> 00:08:18,940
getting them cleaned up and sort of

00:08:16,000 --> 00:08:20,950
ready for prime time if you will and

00:08:18,940 --> 00:08:22,600
that's so cheap asses go so we sort of

00:08:20,950 --> 00:08:25,930
developed a sermon we started working on

00:08:22,600 --> 00:08:26,920
it because we needed to and it sort of

00:08:25,930 --> 00:08:28,420
gotten a little bit out of control and

00:08:26,920 --> 00:08:29,530
it almost looks like it's turning into a

00:08:28,420 --> 00:08:31,270
product although we're not a product

00:08:29,530 --> 00:08:33,010
shop so we're just sort of working on it

00:08:31,270 --> 00:08:37,000
for our own internal projects and it

00:08:33,010 --> 00:08:38,830
seems to be working that's just great so

00:08:37,000 --> 00:08:39,910
we have no about 10 developers 12

00:08:38,830 --> 00:08:42,160
developers depending on the day these

00:08:39,910 --> 00:08:42,960
are our sort of tools and frameworks du

00:08:42,160 --> 00:08:44,700
jour

00:08:42,960 --> 00:08:45,990
don't ask me any detailed technical

00:08:44,700 --> 00:08:47,220
questions about these things because I

00:08:45,990 --> 00:08:49,680
sort of understand the high level but

00:08:47,220 --> 00:08:51,960
not how be they actually get implemented

00:08:49,680 --> 00:09:01,110
by our brilliant team so that I'll just

00:08:51,960 --> 00:09:03,350
sleep there and that's it I'm breaking

00:09:01,110 --> 00:09:05,670
up or I work at a place called mapson we

00:09:03,350 --> 00:09:07,830
kind of lab in New York City work on a

00:09:05,670 --> 00:09:09,150
bunch of open source projects one of

00:09:07,830 --> 00:09:11,520
those that have been working on is a

00:09:09,150 --> 00:09:13,440
another WebGL mapping library called

00:09:11,520 --> 00:09:15,600
tangram we just put up a blog post about

00:09:13,440 --> 00:09:17,550
it yesterday actually so I can check

00:09:15,600 --> 00:09:25,350
that out on our site and I will go

00:09:17,550 --> 00:09:26,820
through the demo if I if it loads okay

00:09:25,350 --> 00:09:29,100
so let's see before i go through the

00:09:26,820 --> 00:09:32,010
actual demo talk a little bit about some

00:09:29,100 --> 00:09:34,470
components uses so it is implemented is

00:09:32,010 --> 00:09:36,150
a leaflet leipsic plugin actually using

00:09:34,470 --> 00:09:37,530
some of the some of the newer leaflet

00:09:36,150 --> 00:09:39,120
features that did plaid talked about

00:09:37,530 --> 00:09:42,570
earlier some of the pre one point out

00:09:39,120 --> 00:09:45,330
stuff the new grid layer which is really

00:09:42,570 --> 00:09:46,890
nice much easier to work with and it

00:09:45,330 --> 00:09:48,960
consumes vector tiles as you would

00:09:46,890 --> 00:09:51,780
expect because it's rendering rendering

00:09:48,960 --> 00:09:54,990
vectors for that as Jason mentioned i

00:09:51,780 --> 00:09:57,390
also like to use kind of this simplest

00:09:54,990 --> 00:09:59,190
like lowest common denominator easiest

00:09:57,390 --> 00:10:02,160
to understand format so in this case i'm

00:09:59,190 --> 00:10:04,980
consuming mostly geo json again it's not

00:10:02,160 --> 00:10:08,490
the fastest or most efficient but it is

00:10:04,980 --> 00:10:11,280
the easiest to understand and debug and

00:10:08,490 --> 00:10:12,870
so mapson has this pretty simple vector

00:10:11,280 --> 00:10:15,450
title service that you could check out

00:10:12,870 --> 00:10:18,450
that is free and runs off of an osm

00:10:15,450 --> 00:10:21,480
planted import and will give you will

00:10:18,450 --> 00:10:24,600
give you nice to a JSON tiles it also

00:10:21,480 --> 00:10:27,150
will serve the the binary format the map

00:10:24,600 --> 00:10:30,450
Nick based binary format as well if you

00:10:27,150 --> 00:10:33,540
want to use that this library also uses

00:10:30,450 --> 00:10:35,700
the tessellation library that lib tests

00:10:33,540 --> 00:10:37,470
that Brendan over there row so it you

00:10:35,700 --> 00:10:40,170
know it stands on the shoulders with a

00:10:37,470 --> 00:10:41,970
lot of other things so anyway mainly

00:10:40,170 --> 00:10:43,590
what I want to talk about is just kind

00:10:41,970 --> 00:10:45,720
of you know what you can do with this

00:10:43,590 --> 00:10:47,550
stuff that you can't do with them with

00:10:45,720 --> 00:10:49,410
traditional raster tiles I think Lauren

00:10:47,550 --> 00:10:51,420
give a great overview of like the core

00:10:49,410 --> 00:10:52,980
components and why is a huge pain to

00:10:51,420 --> 00:10:55,680
draw a line or

00:10:52,980 --> 00:10:57,329
pretty much anything in WebGL so there

00:10:55,680 --> 00:10:58,410
is certainly a large hump to get over

00:10:57,329 --> 00:11:00,329
but once you get over that you can do

00:10:58,410 --> 00:11:02,639
some pretty cool stuff so in this case

00:11:00,329 --> 00:11:07,500
we're drawing in a 3d geometry by

00:11:02,639 --> 00:11:09,899
extruding osm buildings into into

00:11:07,500 --> 00:11:12,480
polygons you can see we can do like very

00:11:09,899 --> 00:11:16,170
accurate hit detection here with like

00:11:12,480 --> 00:11:21,899
pixel level feature detection which lets

00:11:16,170 --> 00:11:23,940
us do some nice real-time stuff this is

00:11:21,899 --> 00:11:27,420
my cheesy as is my cheesy water effect

00:11:23,940 --> 00:11:29,220
to kind of show up so you can do you

00:11:27,420 --> 00:11:31,290
know that you can do real-time animated

00:11:29,220 --> 00:11:34,079
shaders and things like that and you can

00:11:31,290 --> 00:11:35,279
do things like you know without kind of

00:11:34,079 --> 00:11:37,500
getting into the whole like how the

00:11:35,279 --> 00:11:39,240
whole OpenGL pipeline works you can use

00:11:37,500 --> 00:11:40,709
these things called the vertex shader

00:11:39,240 --> 00:11:42,570
and the fragment shader to kind of alter

00:11:40,709 --> 00:11:43,949
your geometry on the fly is your drawing

00:11:42,570 --> 00:11:47,940
it would pledge to do things like you

00:11:43,949 --> 00:11:49,880
know turn perspective off there we go or

00:11:47,940 --> 00:11:54,329
you know do you look at kind of

00:11:49,880 --> 00:11:58,440
isometric style projection you can play

00:11:54,329 --> 00:12:00,540
around with lighting you can pretty

00:11:58,440 --> 00:12:04,290
easily turn different layers on and off

00:12:00,540 --> 00:12:06,300
so you can turn off the roads etc and

00:12:04,290 --> 00:12:08,699
then you whoa sorry took a screenshot I

00:12:06,300 --> 00:12:11,130
mean to do that it's got a screen chat

00:12:08,699 --> 00:12:13,110
feature too so you know the real fun is

00:12:11,130 --> 00:12:15,149
kind of doing these different kinds of

00:12:13,110 --> 00:12:18,480
effects this is all suits always the one

00:12:15,149 --> 00:12:21,810
that kind of is most people tends to get

00:12:18,480 --> 00:12:23,819
the most so these are you know this is

00:12:21,810 --> 00:12:26,670
difficult off like that you can you can

00:12:23,819 --> 00:12:28,560
alter the geometry client-side in ways

00:12:26,670 --> 00:12:30,120
that would just be like not even

00:12:28,560 --> 00:12:32,899
possible in any kind of pre-rendered

00:12:30,120 --> 00:12:37,199
Maps alien another one that I like is

00:12:32,899 --> 00:12:40,470
this kind of well interesting this is

00:12:37,199 --> 00:12:42,990
not updating so it would normally expect

00:12:40,470 --> 00:12:45,810
on this screen size so this is an

00:12:42,990 --> 00:12:47,819
example of 3d geometry in the middle of

00:12:45,810 --> 00:12:49,079
the screen that like fades to 2d towards

00:12:47,819 --> 00:12:50,519
the edges and that starts to give you an

00:12:49,079 --> 00:12:51,870
idea of like the type of data viz stuff

00:12:50,519 --> 00:12:54,300
you can do so you also have total

00:12:51,870 --> 00:12:58,889
real-time control over like how much of

00:12:54,300 --> 00:13:00,389
that effect you're applying and then you

00:12:58,889 --> 00:13:03,620
can do similar things with st.

00:13:00,389 --> 00:13:06,760
procedural textures so here's like a 3d

00:13:03,620 --> 00:13:08,980
dot pattern applied to this geometry

00:13:06,760 --> 00:13:10,030
so these are not like raster textures is

00:13:08,980 --> 00:13:14,070
you actually this procedurally generated

00:13:10,030 --> 00:13:19,360
on the fly similarly you know you can do

00:13:14,070 --> 00:13:21,520
change all this stuff and then you know

00:13:19,360 --> 00:13:24,160
also also things like like you're

00:13:21,520 --> 00:13:26,830
familiar with the stamen toner style you

00:13:24,160 --> 00:13:28,420
know the ability to do kind of like do

00:13:26,830 --> 00:13:30,040
those kinds of effects but do them on

00:13:28,420 --> 00:13:32,710
the fly tweak them on the fly not have

00:13:30,040 --> 00:13:33,940
to pre-render the entire world etc so

00:13:32,710 --> 00:13:35,830
the real challenge of this it's actually

00:13:33,940 --> 00:13:37,270
once once you learn how to do this stuff

00:13:35,830 --> 00:13:38,980
it's not that hard to just make a bunch

00:13:37,270 --> 00:13:40,320
of crazy effects like this they're the

00:13:38,980 --> 00:13:42,970
real challenge is to try and make it

00:13:40,320 --> 00:13:45,730
like usable for for other people it's

00:13:42,970 --> 00:13:46,780
getting more consumable and so a lot of

00:13:45,730 --> 00:13:48,220
what we're working on now is trying to

00:13:46,780 --> 00:13:50,950
create like a stylesheet language around

00:13:48,220 --> 00:13:52,360
this that is more tightly bound to glsl

00:13:50,950 --> 00:13:56,260
which is the OpenGL shading language

00:13:52,360 --> 00:13:57,640
which is a pretty high bar to learn if

00:13:56,260 --> 00:14:00,880
you're not really familiar with OpenGL

00:13:57,640 --> 00:14:03,520
it's kind of a sea variant is that like

00:14:00,880 --> 00:14:08,230
a mite down or do I have like five

00:14:03,520 --> 00:14:10,930
seconds okay all right all I will say is

00:14:08,230 --> 00:14:14,460
the elevator effect is one line of glsl

00:14:10,930 --> 00:14:14,460
code and that's a goal of the libraries

00:14:18,389 --> 00:14:24,040
so yeah Brian Pitz are asking me to talk

00:14:21,940 --> 00:14:27,819
I am going to talk about JavaScript for

00:14:24,040 --> 00:14:29,379
approximately 0 seconds um this is one

00:14:27,819 --> 00:14:32,529
of my colleagues here's Derek Watkins

00:14:29,379 --> 00:14:34,209
he's real a great colleague he sits

00:14:32,529 --> 00:14:35,949
right next to me and this is one of my

00:14:34,209 --> 00:14:39,240
favorite things I was over in Seoul and

00:14:35,949 --> 00:14:42,879
they just like looking at this map of

00:14:39,240 --> 00:14:45,430
the u.s. attendant oh yes I'm from the

00:14:42,879 --> 00:14:48,670
New York Times and I'm also a student at

00:14:45,430 --> 00:14:52,060
UW Madison some of a cartographer there

00:14:48,670 --> 00:14:55,089
we are about 35 or 40 strong we have a

00:14:52,060 --> 00:14:59,769
San Francisco Bureau and a couple people

00:14:55,089 --> 00:15:03,670
in DC and one person in Paris so we're

00:14:59,769 --> 00:15:05,110
pretty big shop and that's there we have

00:15:03,670 --> 00:15:08,139
like a little we have a little crew of

00:15:05,110 --> 00:15:11,259
like cartographers who work on like data

00:15:08,139 --> 00:15:12,850
driven stuff and like big sort of data

00:15:11,259 --> 00:15:15,009
visualization and we have an entire maps

00:15:12,850 --> 00:15:18,040
department to do like all of the maps

00:15:15,009 --> 00:15:20,079
that you would see normally another

00:15:18,040 --> 00:15:21,850
gallery where I work with here is Jeremy

00:15:20,079 --> 00:15:28,949
white this one might be good for you

00:15:21,850 --> 00:15:28,949
guys crazy a binary its little brother

00:15:29,490 --> 00:15:39,310
so yeah you know actually we do so to

00:15:33,519 --> 00:15:43,930
not I think this will work um completely

00:15:39,310 --> 00:15:46,750
ignore the the javascript thing one

00:15:43,930 --> 00:15:49,000
thing we do use javascript for you would

00:15:46,750 --> 00:15:52,000
maybe expect is we do a lot of

00:15:49,000 --> 00:15:55,839
Illustrator scripting which is kind of

00:15:52,000 --> 00:15:58,870
JavaScript II and our deputy our quise

00:15:55,839 --> 00:16:02,759
wrote a little thing called a aight HTML

00:15:58,870 --> 00:16:11,470
which will take multiple artboards in

00:16:02,759 --> 00:16:14,079
illustrator and create like a on a

00:16:11,470 --> 00:16:16,180
website it makes it so that you can like

00:16:14,079 --> 00:16:21,129
resize the browser you can load it up

00:16:16,180 --> 00:16:25,420
and it seamlessly loads for you and this

00:16:21,129 --> 00:16:29,209
worked like that but so that the text

00:16:25,420 --> 00:16:31,399
scales and and moves on the screen

00:16:29,209 --> 00:16:36,139
so this is actually like these like down

00:16:31,399 --> 00:16:41,089
here let's see a picture so like these

00:16:36,139 --> 00:16:42,860
maps this this text is a vector but as

00:16:41,089 --> 00:16:47,720
you like move it around kinda this is

00:16:42,860 --> 00:16:51,199
not going to work oh um I feel like all

00:16:47,720 --> 00:16:52,819
those like I'm that guy yeah let's just

00:16:51,199 --> 00:16:54,559
all right let's get to this so alright

00:16:52,819 --> 00:16:56,509
this is what I kind of want to talk

00:16:54,559 --> 00:16:59,089
about it's not all JavaScript we make

00:16:56,509 --> 00:17:00,740
maps really frequently that are

00:16:59,089 --> 00:17:04,579
ethnographic because the conflicts that

00:17:00,740 --> 00:17:05,779
we're mapping or if they are along at

00:17:04,579 --> 00:17:10,039
the graphic line is they certainly

00:17:05,779 --> 00:17:12,079
irrelevant to the conflict and many of

00:17:10,039 --> 00:17:14,779
you probably have mapped done

00:17:12,079 --> 00:17:16,819
ethnographic mapping in the past and if

00:17:14,779 --> 00:17:19,970
you have you would almost certainly

00:17:16,819 --> 00:17:22,419
haven't come across this game Mike azadi

00:17:19,970 --> 00:17:26,480
at Columbia have any of you heard of him

00:17:22,419 --> 00:17:29,480
no one all right well now you have he

00:17:26,480 --> 00:17:34,029
has done decades of research and just

00:17:29,480 --> 00:17:37,610
created an absolute like library of

00:17:34,029 --> 00:17:39,529
ethnographic Maps this one this map here

00:17:37,610 --> 00:17:43,159
that we did for this caucuses project we

00:17:39,529 --> 00:17:46,100
did in advance of the Olympics was based

00:17:43,159 --> 00:17:52,990
on this map that he made which will

00:17:46,100 --> 00:17:56,360
notice is a bit complicated he works in

00:17:52,990 --> 00:18:01,549
Apple works and if you know this program

00:17:56,360 --> 00:18:06,289
from 1984 he actually still works in

00:18:01,549 --> 00:18:08,049
that works and he his computers that he

00:18:06,289 --> 00:18:10,399
bought up when he realized that that

00:18:08,049 --> 00:18:12,289
like this was not anything something is

00:18:10,399 --> 00:18:14,630
gonna be available on new machines are

00:18:12,289 --> 00:18:16,340
slowly dying and he's kind of like

00:18:14,630 --> 00:18:22,399
afraid that his work is just going to

00:18:16,340 --> 00:18:27,980
forever disappear so maps like there's

00:18:22,399 --> 00:18:31,429
another guy that we did that so this map

00:18:27,980 --> 00:18:33,980
that we made of Baghdad the ethnography

00:18:31,429 --> 00:18:36,950
and ethnographic groups in Baghdad is

00:18:33,980 --> 00:18:38,899
based on a map like this but his senses

00:18:36,950 --> 00:18:42,200
file like he's creating it these old old

00:18:38,899 --> 00:18:44,000
like appleworks file it's converting

00:18:42,200 --> 00:18:47,720
reusable map format now is a little bit

00:18:44,000 --> 00:18:49,970
problematic so they can't be converted

00:18:47,720 --> 00:18:52,790
to vectors um a little bit time

00:18:49,970 --> 00:18:55,130
consuming but he has Vicki said he has

00:18:52,790 --> 00:18:56,510
over 300 maps that he's made over the

00:18:55,130 --> 00:18:59,900
years they're all in this format and

00:18:56,510 --> 00:19:03,520
we're trying to pitch to him that he

00:18:59,900 --> 00:19:06,260
should open up his collection of maps

00:19:03,520 --> 00:19:09,440
make them really available with like a

00:19:06,260 --> 00:19:13,280
Creative Commons license in exchange for

00:19:09,440 --> 00:19:14,900
having people like digitized his work

00:19:13,280 --> 00:19:17,000
they wouldn't be hand digitizing as much

00:19:14,900 --> 00:19:19,630
as it would be dealing with this file

00:19:17,000 --> 00:19:23,390
format and getting them into like a Geo

00:19:19,630 --> 00:19:26,210
like file format that'll last for a

00:19:23,390 --> 00:19:31,100
while so if you're interested in that

00:19:26,210 --> 00:19:34,460
sort of thing this is me send me some

00:19:31,100 --> 00:19:37,670
email or just come talk to me sorry

00:19:34,460 --> 00:19:39,680
about my browser window and if you want

00:19:37,670 --> 00:19:42,910
a good story about leaking coffee cups

00:19:39,680 --> 00:19:42,910
you can come talk to you

00:19:48,139 --> 00:19:54,330
yeah so I didn't actually plan on doing

00:19:51,450 --> 00:19:55,919
this but I decided it would be nice to

00:19:54,330 --> 00:19:59,249
share with you some of the little stuff

00:19:55,919 --> 00:20:02,539
I was doing on github besides leaflets

00:19:59,249 --> 00:20:05,460
and network stuff so I have a hobby I

00:20:02,539 --> 00:20:09,119
choose some like I like to choose some

00:20:05,460 --> 00:20:12,029
really specific small domain for example

00:20:09,119 --> 00:20:15,389
an obscure algorithm that seems falling

00:20:12,029 --> 00:20:18,210
somewhere work and like make the best

00:20:15,389 --> 00:20:21,179
library that's implemented like the

00:20:18,210 --> 00:20:24,200
smallest and the fastest and better than

00:20:21,179 --> 00:20:27,509
alternative so I've been doing some

00:20:24,200 --> 00:20:29,909
small projects like this for example the

00:20:27,509 --> 00:20:34,109
first example is simplified yes it's a

00:20:29,909 --> 00:20:37,320
library that takes an array of points

00:20:34,109 --> 00:20:40,340
and simplifies it and it does so really

00:20:37,320 --> 00:20:43,289
really fast like faster than any other

00:20:40,340 --> 00:20:46,259
libraries and actually i extracted it

00:20:43,289 --> 00:20:48,720
from legal code and make it a small

00:20:46,259 --> 00:20:50,669
separate library so you can see in the

00:20:48,720 --> 00:20:53,849
example there's a seven to three

00:20:50,669 --> 00:20:57,450
thousand seventy four thousand points

00:20:53,849 --> 00:21:01,619
and they get simplified in real time in

00:20:57,450 --> 00:21:07,019
less than one millisecond and it's yeah

00:21:01,619 --> 00:21:11,399
it's quite fast so and you can see that

00:21:07,019 --> 00:21:15,269
it's actually was that like a bit more

00:21:11,399 --> 00:21:21,840
than 100 points ago the next project I

00:21:15,269 --> 00:21:24,720
have is some calc so I think I really

00:21:21,840 --> 00:21:27,419
wanted to do a map with like to show

00:21:24,720 --> 00:21:30,359
some position so I got into some

00:21:27,419 --> 00:21:32,399
astronomy articles and calculations for

00:21:30,359 --> 00:21:34,889
a couple of weeks to figure this out is

00:21:32,399 --> 00:21:37,099
pretty complicated but I built a Barbary

00:21:34,889 --> 00:21:41,789
Coast and calc it's also pretty small

00:21:37,099 --> 00:21:46,159
like 240 lines of code and it allows you

00:21:41,789 --> 00:21:50,609
to calculate some positions for a given

00:21:46,159 --> 00:21:54,690
latitude longitude and date and times of

00:21:50,609 --> 00:21:56,920
the Sun phases like where the Sun where

00:21:54,690 --> 00:21:59,470
and when the Sun rises the Sun

00:21:56,920 --> 00:22:02,740
that and the cetera and some position at

00:21:59,470 --> 00:22:05,880
any point of time on any place in our so

00:22:02,740 --> 00:22:10,560
it's times like sunrise son golden hour

00:22:05,880 --> 00:22:13,240
dusk and stuff like this and it's also

00:22:10,560 --> 00:22:16,900
calculates Luke position and small white

00:22:13,240 --> 00:22:20,110
faces it's pretty simple easy to use and

00:22:16,900 --> 00:22:22,240
actually have an example were using this

00:22:20,110 --> 00:22:24,340
wagon but I'm really embarrassed to show

00:22:22,240 --> 00:22:28,600
it because I rule I wrote it for years

00:22:24,340 --> 00:22:40,150
ago before we put was created and it's

00:22:28,600 --> 00:22:43,660
google map pins yeah yeah so you can see

00:22:40,150 --> 00:22:46,810
google map where there's a back he

00:22:43,660 --> 00:22:52,270
doesn't show you sunset for some reason

00:22:46,810 --> 00:22:56,920
but black yeah that's uh okay it's just

00:22:52,270 --> 00:23:01,690
example and yeah you can actually see

00:22:56,920 --> 00:23:06,040
the amount of sunlight particular ways

00:23:01,690 --> 00:23:10,560
has like throughout the year ok the next

00:23:06,040 --> 00:23:14,500
is dead simple grid so I was fed up with

00:23:10,560 --> 00:23:18,490
lots of frameworks like trying to

00:23:14,500 --> 00:23:22,480
propose a new way to do responsive

00:23:18,490 --> 00:23:25,750
design like there were like there are

00:23:22,480 --> 00:23:27,880
tens and tens of different responsive

00:23:25,750 --> 00:23:31,330
design frameworks and I decided to beat

00:23:27,880 --> 00:23:36,130
the wall and build a responsive design

00:23:31,330 --> 00:23:41,020
framework in 2250 bites so the framework

00:23:36,130 --> 00:23:44,640
is here's the the code this is the whole

00:23:41,020 --> 00:23:48,850
code of framework and it's it actually

00:23:44,640 --> 00:23:53,620
works so they have this is an example

00:23:48,850 --> 00:23:55,740
and it's like by a beer screening it do

00:23:53,620 --> 00:23:59,289
more stuff since

00:23:55,740 --> 00:24:03,700
really nice rich like framework the next

00:23:59,289 --> 00:24:07,450
one is airbrush it's it's some of my

00:24:03,700 --> 00:24:09,490
more dust work it's a library that

00:24:07,450 --> 00:24:13,840
implements our tree structure for

00:24:09,490 --> 00:24:17,440
indexing spatial data in in JavaScript

00:24:13,840 --> 00:24:20,470
and it's it's quite a specific library

00:24:17,440 --> 00:24:23,710
but it's been really useful in some

00:24:20,470 --> 00:24:26,230
applications like my box GL GS it really

00:24:23,710 --> 00:24:29,470
depends on it when it does it's way

00:24:26,230 --> 00:24:34,330
bullying and interactive features

00:24:29,470 --> 00:24:37,570
because it needs to so I can show you an

00:24:34,330 --> 00:24:41,200
example so we have lots and lots of

00:24:37,570 --> 00:24:44,740
rectangles over this order to do 2d

00:24:41,200 --> 00:24:47,289
space and you want to search down really

00:24:44,740 --> 00:24:49,480
really fast so you can you want to

00:24:47,289 --> 00:24:51,789
answer it where it's like in this V bugs

00:24:49,480 --> 00:24:54,250
give me all the other items will

00:24:51,789 --> 00:24:56,080
offensive builds a a tree structure and

00:24:54,250 --> 00:24:58,539
there are some really heavy

00:24:56,080 --> 00:25:00,990
optimizations and I read through lots of

00:24:58,539 --> 00:25:05,409
algorithms and papers on our trees and

00:25:00,990 --> 00:25:09,909
its really really fast like 100,000

00:25:05,409 --> 00:25:11,799
items get insurgents in 100 milliseconds

00:25:09,909 --> 00:25:17,470
and then when you search it's actually

00:25:11,799 --> 00:25:19,629
like almost no time and so there are

00:25:17,470 --> 00:25:23,679
also bulk insertion algorithms that are

00:25:19,629 --> 00:25:25,840
even faster it's used in the nagas LGS

00:25:23,679 --> 00:25:29,289
it's used in open where's three so I am

00:25:25,840 --> 00:25:33,250
kind of contributed to local where's it

00:25:29,289 --> 00:25:37,090
seized in IG opens a web editor and in

00:25:33,250 --> 00:25:40,000
some other nice applications so there is

00:25:37,090 --> 00:25:42,549
also small wire Rico simple heat it's

00:25:40,000 --> 00:25:45,279
really really simple heat map

00:25:42,549 --> 00:25:47,350
implementation I just I didn't found a

00:25:45,279 --> 00:25:50,860
really really simple implantation civil

00:25:47,350 --> 00:25:53,440
simple of heat maps because they all

00:25:50,860 --> 00:25:55,389
were trying to do too much but I decided

00:25:53,440 --> 00:25:57,190
to make like a super simple between the

00:25:55,389 --> 00:25:59,860
most simple library that could do heat

00:25:57,190 --> 00:26:01,600
map sites what are the and 40 lines of

00:25:59,860 --> 00:26:06,639
code and there's a leaf of bargaining

00:26:01,600 --> 00:26:08,970
bully foot Heat let's uses this here's

00:26:06,639 --> 00:26:08,970
what

00:26:10,549 --> 00:26:20,549
this is silly fat heap okay so the next

00:26:16,289 --> 00:26:23,400
one is saddle triangulation that

00:26:20,549 --> 00:26:27,870
mentioned is the basis fastest your

00:26:23,400 --> 00:26:30,630
Lewisham library so far it's a it has

00:26:27,870 --> 00:26:33,720
it's like there is a compromise it

00:26:30,630 --> 00:26:35,880
doesn't handle some really bad cases of

00:26:33,720 --> 00:26:38,909
really cramped data like intersecting

00:26:35,880 --> 00:26:42,960
ages or to our ages but is still the

00:26:38,909 --> 00:26:45,870
fastest by far and the latest project i

00:26:42,960 --> 00:26:48,020
want to show you it's actually my like

00:26:45,870 --> 00:26:50,730
the most seminal work that i did so i

00:26:48,020 --> 00:26:52,919
cant i don't know why it didn't get much

00:26:50,730 --> 00:26:54,630
exposure but it's so much more important

00:26:52,919 --> 00:27:01,950
than my little work it's called

00:26:54,630 --> 00:27:06,600
yes and it's bookmarklet it keeps a let

00:27:01,950 --> 00:27:12,000
me see okay it gives a list of

00:27:06,600 --> 00:27:14,190
marketing terms these are regular expect

00:27:12,000 --> 00:27:16,799
it's not actually geo related but is

00:27:14,190 --> 00:27:20,220
still very useful for example you want

00:27:16,799 --> 00:27:22,490
to understand what some company website

00:27:20,220 --> 00:27:27,419
says so here's a company I worked for

00:27:22,490 --> 00:27:35,640
earlier communes like a consulting firm

00:27:27,419 --> 00:27:38,210
and let's run it through so you can

00:27:35,640 --> 00:27:40,910
actually see what

00:27:38,210 --> 00:27:46,250
but you start to like to really

00:27:40,910 --> 00:27:53,570
understand what what it's all about let

00:27:46,250 --> 00:28:01,580
me see a ver glad I'm a few space and

00:27:53,570 --> 00:28:04,000
software not deeply offended this is my

00:28:01,580 --> 00:28:04,000
fear

00:28:04,269 --> 00:28:06,269
aww

00:28:14,349 --> 00:28:18,079
yeah this is a fun lightning part

00:28:16,759 --> 00:28:20,269
because I also have like five percent

00:28:18,079 --> 00:28:22,129
battery left so it's like both it'll

00:28:20,269 --> 00:28:24,949
just end when either my computer runs

00:28:22,129 --> 00:28:27,019
out of battery or you bust me so I work

00:28:24,949 --> 00:28:29,539
for Ezra and I work on as relief light

00:28:27,019 --> 00:28:31,909
which is just a plug-in to plug ArcGIS

00:28:29,539 --> 00:28:33,559
and Ezra stuff into leaflet but one of

00:28:31,909 --> 00:28:36,259
the things I started getting asked like

00:28:33,559 --> 00:28:38,029
every single customer ever was like well

00:28:36,259 --> 00:28:39,799
can I use mine on Mercator tiles with it

00:28:38,029 --> 00:28:43,339
because we have to use state plane

00:28:39,799 --> 00:28:45,549
whatever and I'm an art major so I was

00:28:43,339 --> 00:28:48,529
like well what the hell's a projection

00:28:45,549 --> 00:28:50,839
so I pretty much just ignored them for a

00:28:48,529 --> 00:28:53,989
really long time until someone wrote

00:28:50,839 --> 00:28:55,819
this demo and I met them at ESRI at the

00:28:53,989 --> 00:28:57,559
user developer summit and they were like

00:28:55,819 --> 00:28:59,089
I was talking with someone else about it

00:28:57,559 --> 00:29:00,529
and they asked that question he was in

00:28:59,089 --> 00:29:02,929
the group he's like oh I solved that and

00:29:00,529 --> 00:29:05,659
I was like well could you you know right

00:29:02,929 --> 00:29:08,299
a sample so this is actually his demo

00:29:05,659 --> 00:29:14,119
showing see I can prove that this is not

00:29:08,299 --> 00:29:16,989
under Peter because but he's a developer

00:29:14,119 --> 00:29:19,729
at the state of Utah Scott Davis and

00:29:16,989 --> 00:29:22,999
it's actually kind of deceptively easy

00:29:19,729 --> 00:29:25,339
looking until you realize that so this

00:29:22,999 --> 00:29:27,469
is you just put an eps decode and this

00:29:25,339 --> 00:29:32,509
is the props for gas definition for that

00:29:27,469 --> 00:29:33,409
code this is a magic number and then you

00:29:32,509 --> 00:29:35,269
have the list of all the tile

00:29:33,409 --> 00:29:37,999
resolutions so these are the resolutions

00:29:35,269 --> 00:29:39,859
that map to the zoom levels and then you

00:29:37,999 --> 00:29:41,809
actually just pass that object to the

00:29:39,859 --> 00:29:43,249
CRS and then you can just ignore the

00:29:41,809 --> 00:29:45,229
fact that this says Zuri because this

00:29:43,249 --> 00:29:47,439
basically is like 10 lines on top of

00:29:45,229 --> 00:29:50,449
tile layer that just builds the URL out

00:29:47,439 --> 00:29:52,099
but that gets you like titles and when I

00:29:50,449 --> 00:29:53,209
said that I had to demo this I got

00:29:52,099 --> 00:29:55,069
really terrified because I never

00:29:53,209 --> 00:29:57,219
actually put any like geo Jason data on

00:29:55,069 --> 00:29:59,869
top of it so I did that really quick

00:29:57,219 --> 00:30:01,459
this is actually just it queries a bunch

00:29:59,869 --> 00:30:03,799
of data for ArcGIS and converts it to

00:30:01,459 --> 00:30:05,299
geo Jason on the client so you can see

00:30:03,799 --> 00:30:06,919
the zip code data that actually like

00:30:05,299 --> 00:30:08,869
lines up at the edges of the state so it

00:30:06,919 --> 00:30:11,540
does geo Jason data and dump that on the

00:30:08,869 --> 00:30:14,610
map just fine so we'll reject

00:30:11,540 --> 00:30:16,559
right so queries the geographic data and

00:30:14,610 --> 00:30:21,900
it will reject on the fly for you on the

00:30:16,559 --> 00:30:25,200
client side so this the one the one like

00:30:21,900 --> 00:30:27,179
kind of gotcha on this is actually

00:30:25,200 --> 00:30:31,230
finding so if you know like this is the

00:30:27,179 --> 00:30:32,429
same epsg code that was over here there

00:30:31,230 --> 00:30:34,080
we go so you can just plug that into

00:30:32,429 --> 00:30:35,730
spatial reference org and this is how

00:30:34,080 --> 00:30:40,230
you get the proj for jams definition

00:30:35,730 --> 00:30:46,290
it's just that okay I'll look at it

00:30:40,230 --> 00:30:49,620
later okay right I guess I don't know

00:30:46,290 --> 00:30:51,960
BSG not i oh so and if you go to like

00:30:49,620 --> 00:30:55,100
the arcgis server you can actually the

00:30:51,960 --> 00:30:57,330
list of resolutions look at this in JSON

00:30:55,100 --> 00:30:59,070
JSON is easier to read than that so this

00:30:57,330 --> 00:31:00,750
is actually like all the resolutions for

00:30:59,070 --> 00:31:02,100
all the tiles get bate bad as a part of

00:31:00,750 --> 00:31:04,260
the service when you bake up the tile so

00:31:02,100 --> 00:31:05,880
it's pretty much just like for ArcGIS

00:31:04,260 --> 00:31:07,320
stuff if you like come across these

00:31:05,880 --> 00:31:10,110
tiles somewhere you can actually just

00:31:07,320 --> 00:31:11,130
like copy paste everything over and I

00:31:10,110 --> 00:31:13,700
was sitting there like getting this

00:31:11,130 --> 00:31:18,480
ready and I just realized that this

00:31:13,700 --> 00:31:19,920
transformation value that's in here

00:31:18,480 --> 00:31:22,170
because I've been trying for months to

00:31:19,920 --> 00:31:24,809
figure out like where this what this

00:31:22,170 --> 00:31:26,130
value is because we're just seeing like

00:31:24,809 --> 00:31:28,110
this magic number and if you put any

00:31:26,130 --> 00:31:31,350
other numbers in there it won't work but

00:31:28,110 --> 00:31:33,450
it's actually if anyone knows what that

00:31:31,350 --> 00:31:35,990
is exactly an explicit terms you should

00:31:33,450 --> 00:31:41,040
tell me because I really want to know

00:31:35,990 --> 00:31:48,270
somewhere in here Oakland origin tile

00:31:41,040 --> 00:31:50,550
info extents info Oklahoma I just found

00:31:48,270 --> 00:31:52,860
it it's actually the numbers are the

00:31:50,550 --> 00:31:56,550
exact same as the origin so if i scroll

00:31:52,860 --> 00:31:58,800
down here it actually says origin and

00:31:56,550 --> 00:32:00,270
the absolute values of those numbers are

00:31:58,800 --> 00:32:02,130
the same so i don't know if that's

00:32:00,270 --> 00:32:03,870
actually just an ArcGIS server thing

00:32:02,130 --> 00:32:05,610
where the origin and then you just turn

00:32:03,870 --> 00:32:08,190
that into some other magic numbers and

00:32:05,610 --> 00:32:09,900
it just magically works that's kind of

00:32:08,190 --> 00:32:13,770
what projections feel like the me like

00:32:09,900 --> 00:32:16,350
just said like albers it goes but anyway

00:32:13,770 --> 00:32:17,670
that is it does work and if you know the

00:32:16,350 --> 00:32:19,050
projections and the scales and the

00:32:17,670 --> 00:32:20,760
transformation and everything else it

00:32:19,050 --> 00:32:22,170
does actually work and you can put it

00:32:20,760 --> 00:32:24,570
together the guys who did proj the

00:32:22,170 --> 00:32:27,150
leaflet did a great job and Calvin on

00:32:24,570 --> 00:32:29,490
Prague for gas so then I'm down to like

00:32:27,150 --> 00:32:32,210
two or three percent battery so it's

00:32:29,490 --> 00:32:32,210
probably good time to stop

00:32:44,570 --> 00:32:46,630

YouTube URL: https://www.youtube.com/watch?v=BFFnsyndX7s


