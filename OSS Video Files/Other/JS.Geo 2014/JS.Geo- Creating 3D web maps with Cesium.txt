Title: JS.Geo- Creating 3D web maps with Cesium
Publication date: 2020-01-23
Playlist: JS.Geo 2014
Description: 
	By, Patrick Cozzi

Help us caption & translate this video!

http://amara.org/v/FS1A/
Captions: 
	00:00:16,340 --> 00:00:21,740
so my name is Patrick cozy I work for a

00:00:18,920 --> 00:00:23,900
company called amiable graphics outside

00:00:21,740 --> 00:00:25,520
of Philadelphia and we do a lot of

00:00:23,900 --> 00:00:27,230
visualization work we do a lot of like

00:00:25,520 --> 00:00:29,270
3d globe kind of work for a lot of

00:00:27,230 --> 00:00:30,980
aerospace work that we do we want to

00:00:29,270 --> 00:00:32,870
visualize satellites and aircrafts and

00:00:30,980 --> 00:00:35,300
maybe three and a half years ago you

00:00:32,870 --> 00:00:37,910
know I was a hardcore C++ programmer

00:00:35,300 --> 00:00:39,620
doing OpenGL and we want to take our

00:00:37,910 --> 00:00:42,980
engine to make it cross-platform and

00:00:39,620 --> 00:00:44,449
suddenly WebGL came out we're not

00:00:42,980 --> 00:00:45,769
putting our code writing new code or

00:00:44,449 --> 00:00:47,180
going to go all in JavaScript and we're

00:00:45,769 --> 00:00:50,330
going to use WebGL and see how far it

00:00:47,180 --> 00:00:51,799
can push it and then you know we did it

00:00:50,330 --> 00:00:53,839
all for a while internally then about

00:00:51,799 --> 00:00:56,180
two years ago we released an open-source

00:00:53,839 --> 00:00:58,580
JavaScript library called caesium here's

00:00:56,180 --> 00:01:00,260
the website here for doing 3d Globes

00:00:58,580 --> 00:01:01,339
hardware-accelerated written right in

00:01:00,260 --> 00:01:03,170
the web browser so everything I'm

00:01:01,339 --> 00:01:06,590
showing today of course is in as in

00:01:03,170 --> 00:01:08,509
JavaScript and what I want to do is kind

00:01:06,590 --> 00:01:10,040
of do two things one is I'll walk

00:01:08,509 --> 00:01:12,710
through some of the features by Dell and

00:01:10,040 --> 00:01:15,080
by going through some examples and then

00:01:12,710 --> 00:01:16,820
I'll do I'll introduce the API and do a

00:01:15,080 --> 00:01:19,100
little bit of coding like I said and if

00:01:16,820 --> 00:01:22,340
there's any time left over we'll go run

00:01:19,100 --> 00:01:24,020
some more some more demo apps so we have

00:01:22,340 --> 00:01:26,200
this thing called sandcastle which is

00:01:24,020 --> 00:01:29,390
like an IDE you know for prototyping

00:01:26,200 --> 00:01:30,920
cesium applications and down the bottom

00:01:29,390 --> 00:01:32,869
here we have a bunch of different

00:01:30,920 --> 00:01:35,119
examples and then in the top right you

00:01:32,869 --> 00:01:36,560
see the cesium globe and then the code

00:01:35,119 --> 00:01:37,999
will come up over here and you pick an

00:01:36,560 --> 00:01:39,950
example so you can be like oh I want to

00:01:37,999 --> 00:01:41,479
do I want to low geo JSON what does that

00:01:39,950 --> 00:01:43,460
code look like then you could tweak it

00:01:41,479 --> 00:01:46,639
and here we just have one line of code

00:01:43,460 --> 00:01:48,380
that creates a caesium object and here

00:01:46,639 --> 00:01:50,179
is what you get for free just with that

00:01:48,380 --> 00:01:53,810
one line of code and I'm going to say

00:01:50,179 --> 00:01:55,609
open a new window to do some more more

00:01:53,810 --> 00:01:58,189
space so here you know it's thick you

00:01:55,609 --> 00:02:00,079
have your 2d map but only it's in 3d and

00:01:58,189 --> 00:02:06,350
it's streaming imagery just as before so

00:02:00,079 --> 00:02:07,819
we could zoom in to Portland and then

00:02:06,350 --> 00:02:09,709
you know as we zoom in we get the higher

00:02:07,819 --> 00:02:13,130
res but now the big difference of course

00:02:09,709 --> 00:02:15,620
is we can tilt it then when we tilt

00:02:13,130 --> 00:02:16,760
around you know nearby we have a very

00:02:15,620 --> 00:02:18,830
high-resolution image

00:02:16,760 --> 00:02:22,220
in the distance we have lower resolution

00:02:18,830 --> 00:02:24,110
imagery and as we move around we load in

00:02:22,220 --> 00:02:25,640
new data Oh would you use web workers

00:02:24,110 --> 00:02:29,360
for processing some of the data that we

00:02:25,640 --> 00:02:32,329
load in both vector or both terrain and

00:02:29,360 --> 00:02:34,159
imagery data then you know if the cache

00:02:32,329 --> 00:02:35,690
gets too big we have thick tiles and we

00:02:34,159 --> 00:02:37,700
try to keep the visual quality as high

00:02:35,690 --> 00:02:40,400
as high as we can based on overlooking

00:02:37,700 --> 00:02:43,720
there's also an atmosphere here that you

00:02:40,400 --> 00:02:45,859
see then when you zoom out I'll go home

00:02:43,720 --> 00:02:47,629
there's the stars out here which it

00:02:45,859 --> 00:02:49,909
looks like you guys can see see pretty

00:02:47,629 --> 00:02:51,980
well and then you can do a ton of

00:02:49,909 --> 00:02:54,739
different imagery types

00:02:51,980 --> 00:02:57,769
this is Bing Maps but it does ESRI WMS

00:02:54,739 --> 00:02:59,629
TM s W MTS OpenStreetMaps and so on so

00:02:57,769 --> 00:03:04,340
we could change this like Open Street

00:02:59,629 --> 00:03:06,109
Map and same deal I'll switch it back to

00:03:04,340 --> 00:03:08,870
Bing and then one thing I really like

00:03:06,109 --> 00:03:11,420
about 3d is we can do terrain so I'm

00:03:08,870 --> 00:03:13,450
going to turn on some training data and

00:03:11,420 --> 00:03:17,480
this data set here is from a variety of

00:03:13,450 --> 00:03:19,970
freely available data SRTM Ned so it's

00:03:17,480 --> 00:03:21,799
generally some of it's one kilometer

00:03:19,970 --> 00:03:23,690
some of its 90 meters some of this 30

00:03:21,799 --> 00:03:25,489
meter so if it's 10 meters so if it's I

00:03:23,690 --> 00:03:27,410
think eat some of it's even 3 meter so

00:03:25,489 --> 00:03:29,840
you can get some really high res stuff a

00:03:27,410 --> 00:03:31,400
place I'd love to do testing with is

00:03:29,840 --> 00:03:33,349
called Seneca Rocks this is in West

00:03:31,400 --> 00:03:36,889
Virginia when I was younger I used to

00:03:33,349 --> 00:03:38,150
rock climb here a lot so I like to zoom

00:03:36,889 --> 00:03:41,449
in straight down we're looking at this

00:03:38,150 --> 00:03:44,569
fin and this is a cliff that people

00:03:41,449 --> 00:03:47,780
climb it's like maybe 4 to 600 feet tall

00:03:44,569 --> 00:03:50,510
I think and the peak at town this is not

00:03:47,780 --> 00:03:52,040
exaggerating it is like 6 foot wide at

00:03:50,510 --> 00:03:54,049
the top it's amazing when you're up

00:03:52,040 --> 00:03:57,799
there and here we're looking this is

00:03:54,049 --> 00:04:01,250
like the campground down here so I could

00:03:57,799 --> 00:04:02,870
zoom in and go around and again you know

00:04:01,250 --> 00:04:04,549
this is also this is all in the web

00:04:02,870 --> 00:04:05,930
browser right all in JavaScript but all

00:04:04,549 --> 00:04:07,849
the heavy lifting in terms of

00:04:05,930 --> 00:04:09,739
transforming all the triangles and

00:04:07,849 --> 00:04:16,159
shading all the pixels it's all all

00:04:09,739 --> 00:04:17,840
WebGL so I'll go home and then we do you

00:04:16,159 --> 00:04:19,579
know mass against and we also have touch

00:04:17,840 --> 00:04:21,019
events too and WebGL and mobile is

00:04:19,579 --> 00:04:23,210
getting pretty good I wouldn't say it's

00:04:21,019 --> 00:04:24,349
like a hundred percent there but it's

00:04:23,210 --> 00:04:26,150
getting pretty good Android in

00:04:24,349 --> 00:04:26,650
particular does looking great Windows

00:04:26,150 --> 00:04:30,130
Phone

00:04:26,650 --> 00:04:33,600
not that bad either - which impresses I

00:04:30,130 --> 00:04:40,150
mean we said a nice thing about Windows

00:04:33,600 --> 00:04:42,100
Microsoft people I'm guessing I'm going

00:04:40,150 --> 00:04:44,139
to switch the terrain data set to a data

00:04:42,100 --> 00:04:48,430
set that has a wooder mask in it and

00:04:44,139 --> 00:04:50,650
zoom in to like San Francisco but then

00:04:48,430 --> 00:04:52,180
here this water again you know that's

00:04:50,650 --> 00:04:54,520
all done in a shader and a fragment

00:04:52,180 --> 00:04:57,010
shader to do the bump mapping and to get

00:04:54,520 --> 00:05:00,880
this specular light where this whatever

00:04:57,010 --> 00:05:03,400
the Sun may be so that's a fun a fun

00:05:00,880 --> 00:05:06,760
effect now zoom out now I'm going to

00:05:03,400 --> 00:05:07,720
speed up the camera a lot here oh it's

00:05:06,760 --> 00:05:13,150
trying to speed

00:05:07,720 --> 00:05:14,710
how's everyone's digestion yeah and then

00:05:13,150 --> 00:05:16,060
you know we did a night lighting all

00:05:14,710 --> 00:05:17,830
that kind of stuff so this is just a

00:05:16,060 --> 00:05:19,600
basic caesium globe that you get you

00:05:17,830 --> 00:05:23,289
know one line of code you could bring in

00:05:19,600 --> 00:05:25,539
the JavaScript phone come again this

00:05:23,289 --> 00:05:28,840
story is so that's a star map it's prop

00:05:25,539 --> 00:05:31,599
one asides 1 K 2 1 K cube map so it's 6

00:05:28,840 --> 00:05:35,139
textures that are 1k by 1k they are

00:05:31,599 --> 00:05:37,900
rendered in I see our frame and then the

00:05:35,139 --> 00:05:39,310
rotation of Tacony is very accurate it's

00:05:37,900 --> 00:05:41,770
very similar to the work that we do in

00:05:39,310 --> 00:05:43,720
our desktop outer space apps but at 1k

00:05:41,770 --> 00:05:49,360
resolution that's where you're going to

00:05:43,720 --> 00:05:50,800
lose the precision okay so yeah I'll

00:05:49,360 --> 00:05:52,360
show you guys some more features that

00:05:50,800 --> 00:05:54,220
you know some things that engine can do

00:05:52,360 --> 00:05:56,440
I'll keep an eye on the time so I

00:05:54,220 --> 00:05:57,760
promise some coding or code copying and

00:05:56,440 --> 00:05:59,860
pasting I'm going to come through with

00:05:57,760 --> 00:06:01,360
it so one thing we do that I personally

00:05:59,860 --> 00:06:04,270
really like is a graphics guys you know

00:06:01,360 --> 00:06:05,949
we do 3d models so here is one of our

00:06:04,270 --> 00:06:08,949
artists took the caesium logo and put on

00:06:05,949 --> 00:06:10,539
an aircraft and I have this model I know

00:06:08,949 --> 00:06:13,599
the models not moving but this is a

00:06:10,539 --> 00:06:16,030
simple example just to load it here's

00:06:13,599 --> 00:06:19,180
another one that I really like - oh this

00:06:16,030 --> 00:06:20,770
is a character this is skimming going on

00:06:19,180 --> 00:06:23,199
so instead of it looking like a robot

00:06:20,770 --> 00:06:24,610
when it bends its arms each vertex

00:06:23,199 --> 00:06:26,800
actually have multiple matrices

00:06:24,610 --> 00:06:30,280
influencing it to get like the pseudo

00:06:26,800 --> 00:06:32,050
bent at the joint with my work we don't

00:06:30,280 --> 00:06:33,849
do a lot of stuff with individual

00:06:32,050 --> 00:06:35,080
characters but I'm hoping someone's

00:06:33,849 --> 00:06:37,190
going to take cesium and do something

00:06:35,080 --> 00:06:40,130
cool like this and email

00:06:37,190 --> 00:06:42,680
when you do that so the models here are

00:06:40,130 --> 00:06:45,350
using a format called gltf for the GL

00:06:42,680 --> 00:06:47,060
transmission format it's I'm working on

00:06:45,350 --> 00:06:48,830
that with Kronos Cronus is the same

00:06:47,060 --> 00:06:51,200
group who does WebGL and OpenGL and

00:06:48,830 --> 00:06:54,050
Colada and so on gltf is all about

00:06:51,200 --> 00:06:56,360
efficient 3d model so it's json

00:06:54,050 --> 00:06:58,430
representing kind of the the skeleton of

00:06:56,360 --> 00:07:00,800
the model the denote hierarchy and then

00:06:58,430 --> 00:07:04,790
binary data for the geometry the

00:07:00,800 --> 00:07:05,840
textures and animation data so it's

00:07:04,790 --> 00:07:06,950
pretty efficient compared to like

00:07:05,840 --> 00:07:08,660
collage look what we do is we take

00:07:06,950 --> 00:07:11,930
COLLADA and convert it offline and I'll

00:07:08,660 --> 00:07:13,520
show you a demo of that well you know

00:07:11,930 --> 00:07:15,590
there's an API for drawing billboards

00:07:13,520 --> 00:07:17,120
markers placemarks whatever whatever you

00:07:15,590 --> 00:07:19,070
want to call them and you can fade them

00:07:17,120 --> 00:07:21,710
in and out let's see fade by viewer

00:07:19,070 --> 00:07:23,380
distance you know so you can kind of

00:07:21,710 --> 00:07:25,880
zoom out you could declutter the scene

00:07:23,380 --> 00:07:26,990
there's an API for moving the camera to

00:07:25,880 --> 00:07:29,000
initially you'll see what there's

00:07:26,990 --> 00:07:30,650
inertia on the camera and then there's

00:07:29,000 --> 00:07:32,480
an API for doing all sorts of things

00:07:30,650 --> 00:07:34,580
like say I would fly to San Diego and

00:07:32,480 --> 00:07:35,900
the camera flights we actually need to

00:07:34,580 --> 00:07:37,250
improve these the kind of got a type of

00:07:35,900 --> 00:07:38,990
camera flight you can get pretty

00:07:37,250 --> 00:07:43,010
complicated to pick the right control

00:07:38,990 --> 00:07:45,830
points let me jump to this a little more

00:07:43,010 --> 00:07:48,320
of a tech demo here again so let's zoom

00:07:45,830 --> 00:07:54,200
to like Death Valley is another good

00:07:48,320 --> 00:07:59,180
place for testing train and let's zoom

00:07:54,200 --> 00:08:00,830
in and then this is a this is a de

00:07:59,180 --> 00:08:02,690
bugging tool that you know we use for

00:08:00,830 --> 00:08:05,540
development I could say suspend LOD

00:08:02,690 --> 00:08:06,590
updates I can zoom out and see okay well

00:08:05,540 --> 00:08:08,300
that's the part of the world that we

00:08:06,590 --> 00:08:11,450
were drawing so with the view frustum

00:08:08,300 --> 00:08:14,030
calling it all and then we put it

00:08:11,450 --> 00:08:19,100
let's stop suspending and maybe look at

00:08:14,030 --> 00:08:22,340
the wireframe and then I'll suspend

00:08:19,100 --> 00:08:24,500
again and you see I pretty high

00:08:22,340 --> 00:08:27,200
resolution detail here but then when i

00:08:24,500 --> 00:08:28,340
zoom way out I didn't actually drive

00:08:27,200 --> 00:08:30,230
around this part of the demo so

00:08:28,340 --> 00:08:31,940
hopefully these triangles are going to

00:08:30,230 --> 00:08:35,390
be bigger this way you see they're much

00:08:31,940 --> 00:08:38,330
bigger over here so these debugging

00:08:35,390 --> 00:08:40,280
tools are so useful like if you invest

00:08:38,330 --> 00:08:42,740
the time in making these tools that's

00:08:40,280 --> 00:08:44,270
going to pay back like 10x when you come

00:08:42,740 --> 00:08:46,220
across your first bug and you need to

00:08:44,270 --> 00:08:49,830
use these tools to find them

00:08:46,220 --> 00:08:52,620
oh we load you know geo JSON

00:08:49,830 --> 00:08:54,270
Oh JSON and the triangulation right

00:08:52,620 --> 00:08:55,860
there to take all of those polygon

00:08:54,270 --> 00:08:58,440
points and create triangles for them

00:08:55,860 --> 00:09:00,480
that's done on a worker thread and then

00:08:58,440 --> 00:09:03,420
here I'm overriding and doing some

00:09:00,480 --> 00:09:05,070
custom graphics so this is the altitude

00:09:03,420 --> 00:09:07,020
here for each one of uses based on the

00:09:05,070 --> 00:09:08,550
population and actually Pennsylvania

00:09:07,020 --> 00:09:12,900
comes through here pretty high on the

00:09:08,550 --> 00:09:14,280
population I wasn't expecting that I but

00:09:12,900 --> 00:09:16,080
you know our use of web workers is

00:09:14,280 --> 00:09:18,210
usually in geometric processing like

00:09:16,080 --> 00:09:20,700
this then also in preparing a trained

00:09:18,210 --> 00:09:22,830
imager data for for rendering and here

00:09:20,700 --> 00:09:25,170
with this giant geometry library that

00:09:22,830 --> 00:09:26,880
we've spent a while working on but you

00:09:25,170 --> 00:09:29,400
know it can draw like anything under the

00:09:26,880 --> 00:09:33,420
Sun polygons polygons with holes walls

00:09:29,400 --> 00:09:35,550
polylines rectangles circles extruded

00:09:33,420 --> 00:09:37,320
volumes of any shape are these cool

00:09:35,550 --> 00:09:39,690
corridors I really like this thing here

00:09:37,320 --> 00:09:41,850
you see this star so you can take any 2d

00:09:39,690 --> 00:09:44,160
shape and then you can extrude it along

00:09:41,850 --> 00:09:45,930
a polyline so like the main use case for

00:09:44,160 --> 00:09:47,340
this is an air corridor like where is it

00:09:45,930 --> 00:09:49,380
an aircraft gonna be flying but you

00:09:47,340 --> 00:09:52,410
could put a star or triangle or anything

00:09:49,380 --> 00:09:54,450
there and then you can batch all these

00:09:52,410 --> 00:09:55,710
up together even if they're different

00:09:54,450 --> 00:09:57,540
types of geometry you can put them into

00:09:55,710 --> 00:09:59,700
one big vertex buffer and render them in

00:09:57,540 --> 00:10:01,680
one shot which is really efficient in

00:09:59,700 --> 00:10:04,200
that pipeline again we use web workers

00:10:01,680 --> 00:10:05,820
for it and we do see very different

00:10:04,200 --> 00:10:10,350
performance and different answers in

00:10:05,820 --> 00:10:12,900
terms of the web worker processing let's

00:10:10,350 --> 00:10:15,840
see what I want to show here we do a lot

00:10:12,900 --> 00:10:17,040
of post-processing on the imagery so

00:10:15,840 --> 00:10:19,020
different image providers you know

00:10:17,040 --> 00:10:21,240
they're too bright or too dark you know

00:10:19,020 --> 00:10:22,920
so at runtime we can change that and

00:10:21,240 --> 00:10:24,960
that's done in a fragment shader so it's

00:10:22,920 --> 00:10:26,610
super fast and done on the GPU it's

00:10:24,960 --> 00:10:28,290
basically free and if you're not using

00:10:26,610 --> 00:10:30,750
any of these we actually don't generate

00:10:28,290 --> 00:10:35,910
any shader code for so you only pay for

00:10:30,750 --> 00:10:39,090
what you use let's see what other ones

00:10:35,910 --> 00:10:42,210
okay let's jump to what I like a lot

00:10:39,090 --> 00:10:43,860
which is this easy amount so you know

00:10:42,210 --> 00:10:46,560
there's KML sure a lot of you in Delhi

00:10:43,860 --> 00:10:48,690
KML or probably even used KML kemmel is

00:10:46,560 --> 00:10:51,090
not really built for the web right like

00:10:48,690 --> 00:10:53,460
as XML it's kind of kind of verbose and

00:10:51,090 --> 00:10:55,290
we do a lot of time dynamic stuff like

00:10:53,460 --> 00:10:57,880
these satellites here I'm switching to

00:10:55,290 --> 00:11:00,310
full screen now

00:10:57,880 --> 00:11:02,260
and KML isn't really good at doing time

00:11:00,310 --> 00:11:03,580
dynamic gate it where I want to give it

00:11:02,260 --> 00:11:04,960
a bunch of keyframes and say how to

00:11:03,580 --> 00:11:08,890
interpolate in between those keyframes

00:11:04,960 --> 00:11:10,420
so we we made an open JSON schema that

00:11:08,890 --> 00:11:12,580
we actually hope to standardize one day

00:11:10,420 --> 00:11:14,230
I'll call it caesium elf the caesium

00:11:12,580 --> 00:11:17,290
language that can do this kind of thanh

00:11:14,230 --> 00:11:19,330
dynamic visualization so this these

00:11:17,290 --> 00:11:22,000
satellites were computed in our desktop

00:11:19,330 --> 00:11:24,430
app called SDK and then we just output

00:11:22,000 --> 00:11:27,040
the data into the seasoned ml and then

00:11:24,430 --> 00:11:29,140
we just gave it to um David to caesium

00:11:27,040 --> 00:11:36,700
so this is fun you can fly on this

00:11:29,140 --> 00:11:39,670
Minaya orbit go home so the other thing

00:11:36,700 --> 00:11:42,340
you know our focus really is on 3d but

00:11:39,670 --> 00:11:44,410
the engine also does 2d and I can switch

00:11:42,340 --> 00:11:46,570
to 2d so it's the same API just said

00:11:44,410 --> 00:11:49,660
switch the two days and then you know

00:11:46,570 --> 00:11:55,600
same deal I can zoom in I can spin

00:11:49,660 --> 00:11:57,460
around and then we also do something

00:11:55,600 --> 00:11:59,980
that we need the killer use case for

00:11:57,460 --> 00:12:05,740
this but I really like this oh oh man

00:11:59,980 --> 00:12:10,810
crashed in Ghana trailer doesn't matter

00:12:05,740 --> 00:12:14,560
hey refresh here we go

00:12:10,810 --> 00:12:18,010
so talk this about stability and Turkey

00:12:14,560 --> 00:12:19,060
the scene perfectly stable unless you're

00:12:18,010 --> 00:12:22,240
in front of a hundred people

00:12:19,060 --> 00:12:24,700
no no other stability is pretty good um

00:12:22,240 --> 00:12:27,040
and one thing actually let's let's talk

00:12:24,700 --> 00:12:31,150
about that for a second this is a total

00:12:27,040 --> 00:12:32,740
aside but I think it's awesome so so one

00:12:31,150 --> 00:12:34,420
one thing that we do every year

00:12:32,740 --> 00:12:37,210
it's called Nora tracks and how many

00:12:34,420 --> 00:12:39,310
people track Santa well Christmas Eve

00:12:37,210 --> 00:12:44,320
yeah we're admitting it right so we

00:12:39,310 --> 00:12:45,460
track Santa Wickham with cesium and this

00:12:44,320 --> 00:12:46,930
is NORAD unit they got their

00:12:45,460 --> 00:12:47,890
geosynchronous satellite say that their

00:12:46,930 --> 00:12:50,290
radar

00:12:47,890 --> 00:12:52,630
they got Santa camps got fighter jets

00:12:50,290 --> 00:12:54,130
and they use all this technology to find

00:12:52,630 --> 00:12:56,830
out where Santa is at any given point in

00:12:54,130 --> 00:12:59,200
time on Christmas Eve and for a while

00:12:56,830 --> 00:13:00,850
they were using Google Earth and Google

00:12:59,200 --> 00:13:02,230
Earth plug-in to do this and then

00:13:00,850 --> 00:13:05,050
recently they switched to open-source

00:13:02,230 --> 00:13:07,720
caesium over the past two years and this

00:13:05,050 --> 00:13:09,940
is um last year we got 20 million hits

00:13:07,720 --> 00:13:12,280
and um in December

00:13:09,940 --> 00:13:14,380
and then the WebGL success rate was just

00:13:12,280 --> 00:13:16,690
shy of 50 percent so we had about 10

00:13:14,380 --> 00:13:20,920
million people use it no reported

00:13:16,690 --> 00:13:22,840
crashes for the record so your so

00:13:20,920 --> 00:13:25,480
stability actually is generally pretty

00:13:22,840 --> 00:13:27,340
good and then this is a challenging

00:13:25,480 --> 00:13:28,690
project because the hardware is all over

00:13:27,340 --> 00:13:30,150
the place right some of its really good

00:13:28,690 --> 00:13:32,650
some of its not so good so we actually

00:13:30,150 --> 00:13:33,910
monitor the framerate Darnton you know

00:13:32,650 --> 00:13:35,320
we give it like a five-second grace

00:13:33,910 --> 00:13:38,680
period then we monitor their framerate

00:13:35,320 --> 00:13:46,330
over X number of seconds and then we

00:13:38,680 --> 00:13:51,460
might switch to a lower quality now back

00:13:46,330 --> 00:13:56,650
to you back to the scheduled demo yeah

00:13:51,460 --> 00:13:58,090
so let me show you guys again the I'm

00:13:56,650 --> 00:14:00,520
going to do it for real this time switch

00:13:58,090 --> 00:14:03,880
to 2d where I could go rough in 3d but

00:14:00,520 --> 00:14:06,340
this feature here that we call Columbus

00:14:03,880 --> 00:14:07,690
view so this is two and a half D so we

00:14:06,340 --> 00:14:08,860
actually you know we have a couple cool

00:14:07,690 --> 00:14:10,270
use cases but I think there should be

00:14:08,860 --> 00:14:12,370
more I think this should be very useful

00:14:10,270 --> 00:14:13,900
thing I really like to now orbit for

00:14:12,370 --> 00:14:20,160
this one because I can speed up the

00:14:13,900 --> 00:14:20,160
clock right and then I can kind of who

00:14:20,790 --> 00:14:29,530
know the one problem by statistics show

00:14:26,290 --> 00:14:32,290
everyone so we we have a d3 demo where

00:14:29,530 --> 00:14:34,810
we show the well health and wealth of

00:14:32,290 --> 00:14:36,610
nations if you want to see the globe and

00:14:34,810 --> 00:14:38,620
the extrusions dancing up and down it's

00:14:36,610 --> 00:14:40,390
pretty useful for this particular

00:14:38,620 --> 00:14:42,760
application it's not so great because it

00:14:40,390 --> 00:14:44,260
looks like satellite can see anything

00:14:42,760 --> 00:14:48,160
but it really can't because the globe

00:14:44,260 --> 00:14:49,840
wraps around right so yeah those are

00:14:48,160 --> 00:14:51,670
kind of the major features and the API

00:14:49,840 --> 00:14:53,500
that I want to show off then I wanted to

00:14:51,670 --> 00:14:56,220
give you guys a little taste of the API

00:14:53,500 --> 00:14:59,080
and just do some some simple coding here

00:14:56,220 --> 00:15:02,320
the data that I had that I prepared for

00:14:59,080 --> 00:15:05,310
us it's just a couple of geo JSON file a

00:15:02,320 --> 00:15:07,780
simple C's ml file and I have a 3d model

00:15:05,310 --> 00:15:11,310
so since that data is local I'm going to

00:15:07,780 --> 00:15:11,310
actually run a local version of this

00:15:14,770 --> 00:15:21,080
so I like this I'm sure most people

00:15:17,750 --> 00:15:22,880
seeing this so you know I did some

00:15:21,080 --> 00:15:26,060
programmer art for shoes in this goj

00:15:22,880 --> 00:15:29,570
Sonia which is a nice simple matte tool

00:15:26,060 --> 00:15:31,610
that I can use to make make some JSON so

00:15:29,570 --> 00:15:34,400
I made a very simple JSON file for us so

00:15:31,610 --> 00:15:40,960
then I'll grab some of the code to load

00:15:34,400 --> 00:15:43,940
it then here you can see I'm an artist

00:15:40,960 --> 00:15:46,370
and here you know to its use the API we

00:15:43,940 --> 00:15:48,350
just created Gio JSON data source I give

00:15:46,370 --> 00:15:49,760
it a point it to the Gio JSON file then

00:15:48,350 --> 00:15:53,480
then I add it to our list of data

00:15:49,760 --> 00:15:58,370
sources and then something like CZ ml is

00:15:53,480 --> 00:16:03,920
just as simple so I'll grab look some CZ

00:15:58,370 --> 00:16:06,529
ml data and i'll paste that in and this

00:16:03,920 --> 00:16:08,270
just shows a vehicle label but if we

00:16:06,529 --> 00:16:11,200
zoom in to it and I can catch the south

00:16:08,270 --> 00:16:11,200
of Death Valley

00:16:12,529 --> 00:16:19,250
you know the vehicles moving yes okay

00:16:16,910 --> 00:16:21,980
and you know the code looks looks the

00:16:19,250 --> 00:16:23,600
same as the four it only loads a C's ml

00:16:21,980 --> 00:16:26,720
data source point to the seasonale file

00:16:23,600 --> 00:16:29,150
and add it but all the time dynamics are

00:16:26,720 --> 00:16:32,510
in the cz ml file and I want to go over

00:16:29,150 --> 00:16:37,160
that in excruciating detail okay I do

00:16:32,510 --> 00:16:39,710
want to briefly show it to you guys so

00:16:37,160 --> 00:16:41,990
here this availability says this object

00:16:39,710 --> 00:16:44,330
is going to be visible or available

00:16:41,990 --> 00:16:47,420
during this interval and we're going to

00:16:44,330 --> 00:16:48,890
show we have a label and the text labels

00:16:47,420 --> 00:16:50,660
vehicle then the first thing really

00:16:48,890 --> 00:16:52,760
interesting here is a show boolean which

00:16:50,660 --> 00:16:55,700
is do I show it or do I not show it it's

00:16:52,760 --> 00:16:57,380
not just a simple scalar value it

00:16:55,700 --> 00:16:58,880
actually has a time interval associated

00:16:57,380 --> 00:17:00,740
with it so I could say well show it

00:16:58,880 --> 00:17:02,089
during this time interval but don't show

00:17:00,740 --> 00:17:04,280
it on this time interval so you kind of

00:17:02,089 --> 00:17:05,689
see the time dynamic Flair and then for

00:17:04,280 --> 00:17:07,970
the position data instead of it just

00:17:05,689 --> 00:17:10,189
having you know a lot long out or

00:17:07,970 --> 00:17:12,920
something like that we actually have a

00:17:10,189 --> 00:17:15,670
series of time tagged points based on

00:17:12,920 --> 00:17:17,660
initial epoch and these are in Cartesian

00:17:15,670 --> 00:17:19,990
Cartesian space but you can do it in

00:17:17,660 --> 00:17:21,829
several different spaces including

00:17:19,990 --> 00:17:23,030
cartographic and then here the

00:17:21,829 --> 00:17:25,190
interpolation

00:17:23,030 --> 00:17:27,020
the garage which is something we use for

00:17:25,190 --> 00:17:29,090
satellites very often so this is just

00:17:27,020 --> 00:17:31,430
really flexible for doing a whole lot of

00:17:29,090 --> 00:17:32,750
time to navigate it and it's cool

00:17:31,430 --> 00:17:34,480
because I think a lot of cesium apps

00:17:32,750 --> 00:17:37,220
won't even need to do a lot of

00:17:34,480 --> 00:17:40,310
client-side code though just generates

00:17:37,220 --> 00:17:44,230
EML files and this is like a spec with a

00:17:40,310 --> 00:17:47,360
public spectacle out of work into them

00:17:44,230 --> 00:17:48,950
okay so let's jump into as a grantee of

00:17:47,360 --> 00:17:52,670
sky something that I really like and

00:17:48,950 --> 00:17:56,420
that's 3d models so I have a model here

00:17:52,670 --> 00:17:58,220
I have a colada file and you can convert

00:17:56,420 --> 00:18:01,880
it to gltf and like I say we do that as

00:17:58,220 --> 00:18:03,890
a as a pipeline as a you know content

00:18:01,880 --> 00:18:08,320
pipeline off line step or server side

00:18:03,890 --> 00:18:08,320
step and we have a tool to do that

00:18:09,160 --> 00:18:13,790
that's publicly available and you can

00:18:11,410 --> 00:18:15,590
take your model and drag and drop it

00:18:13,790 --> 00:18:17,510
here as a colada file then on the server

00:18:15,590 --> 00:18:19,630
will convert it to jail to F that

00:18:17,510 --> 00:18:22,160
involves a fair number of optimizations

00:18:19,630 --> 00:18:23,780
in order to get it streamlined for

00:18:22,160 --> 00:18:25,280
rendering and then you get a preview of

00:18:23,780 --> 00:18:26,930
the model here which they literally just

00:18:25,280 --> 00:18:29,660
added like 20 minutes ago so I'm glad

00:18:26,930 --> 00:18:34,280
that worked cool and then you get your

00:18:29,660 --> 00:18:38,900
gltf your model which I already have so

00:18:34,280 --> 00:18:41,420
I'll jump back to the code and then I'll

00:18:38,900 --> 00:18:46,040
add to our cool app I'm going to add the

00:18:41,420 --> 00:18:50,840
model and everyone needs a truck this

00:18:46,040 --> 00:18:52,850
big wait it gets bigger are you so in

00:18:50,840 --> 00:18:56,060
fairness for this example I gave it a

00:18:52,850 --> 00:18:58,220
minimal pixel size of 256 so this way we

00:18:56,060 --> 00:19:00,890
can see it but to position it in

00:18:58,220 --> 00:19:02,810
graphics we use model matrices or 4x4

00:19:00,890 --> 00:19:05,330
matrices a lot to position orient

00:19:02,810 --> 00:19:07,670
something so I gave it a cartographic

00:19:05,330 --> 00:19:09,140
possession with longitude latitude I put

00:19:07,670 --> 00:19:11,750
in this northeast up frame to tell it

00:19:09,140 --> 00:19:13,760
what's up and then I load the primitive

00:19:11,750 --> 00:19:15,590
giving it the URL to it and then the

00:19:13,760 --> 00:19:17,570
matrix position it and this is a little

00:19:15,590 --> 00:19:19,580
bit lower level like these data sources

00:19:17,570 --> 00:19:22,520
these are kind of high-level pieces of

00:19:19,580 --> 00:19:23,660
content that are entire you know JSON

00:19:22,520 --> 00:19:25,370
files with lots of different information

00:19:23,660 --> 00:19:27,410
where's the model here is a lower-level

00:19:25,370 --> 00:19:29,420
part that's in the individual model and

00:19:27,410 --> 00:19:32,510
today and the cesium API is pretty

00:19:29,420 --> 00:19:35,940
layered like that okay just a few more

00:19:32,510 --> 00:19:38,549
code examples I want to show you

00:19:35,940 --> 00:19:43,709
one is terrain so here when I create the

00:19:38,549 --> 00:19:45,809
viewer object I'm going to give it a

00:19:43,709 --> 00:19:47,759
trained provider here and I'm going to

00:19:45,809 --> 00:19:50,759
point it to this train data set that we

00:19:47,759 --> 00:19:52,409
have on the seasonal website to show you

00:19:50,759 --> 00:19:59,819
the Train axial showed up we'll go back

00:19:52,409 --> 00:20:02,369
to Death Valley and then you know this

00:19:59,819 --> 00:20:04,139
trains for public uses for public access

00:20:02,369 --> 00:20:05,519
train data set is available and we

00:20:04,139 --> 00:20:07,259
created it like I said for a bunch of

00:20:05,519 --> 00:20:09,089
different data sets so it's pretty high

00:20:07,259 --> 00:20:11,429
resolution in some areas and we continue

00:20:09,089 --> 00:20:12,690
to look for publicly available data and

00:20:11,429 --> 00:20:15,419
add it if you know of high resolution

00:20:12,690 --> 00:20:18,690
data let me know because we would like

00:20:15,419 --> 00:20:20,940
to add it to this data set and then the

00:20:18,690 --> 00:20:25,379
final code example is you know I'll show

00:20:20,940 --> 00:20:26,669
changing the imagery and here when I

00:20:25,379 --> 00:20:28,739
create the viewer I'll say well the

00:20:26,669 --> 00:20:30,479
imagery provider I'm going to use a TMS

00:20:28,739 --> 00:20:31,919
server and then we had some natural

00:20:30,479 --> 00:20:34,139
earth data network there's a lot of

00:20:31,919 --> 00:20:37,859
public restaurant vector data we tiled

00:20:34,139 --> 00:20:41,399
some up and then we have our our

00:20:37,859 --> 00:20:43,619
different our different imagery here

00:20:41,399 --> 00:20:44,999
you can do multiple imagery layers and

00:20:43,619 --> 00:20:47,339
you know change the translucency and

00:20:44,999 --> 00:20:51,149
move them up and down so on so by my

00:20:47,339 --> 00:20:54,089
camp I have six minutes so let me show

00:20:51,149 --> 00:20:59,549
one last demo from what some of our

00:20:54,089 --> 00:21:01,229
users have done that's pretty cool sure

00:20:59,549 --> 00:21:03,299
our demos page alert to showcase what

00:21:01,229 --> 00:21:05,669
people are building with cesium this

00:21:03,299 --> 00:21:11,999
doer AMA app is is awesome it's made by

00:21:05,669 --> 00:21:14,159
NICTA I'm just going wrong whichever one

00:21:11,999 --> 00:21:17,279
they have here so you know if you do

00:21:14,159 --> 00:21:19,229
maybe biking or hiking or paragliding or

00:21:17,279 --> 00:21:21,599
sailing or anything like that you might

00:21:19,229 --> 00:21:22,739
keep your GPS data and you might use one

00:21:21,599 --> 00:21:25,679
of the websites where you can upload it

00:21:22,739 --> 00:21:27,509
and see it on a 2d map they've done the

00:21:25,679 --> 00:21:30,569
same thing here but they've done it in

00:21:27,509 --> 00:21:32,729
3d so here is Chris Cooper who's the

00:21:30,569 --> 00:21:36,469
main developer and he's riding this bike

00:21:32,729 --> 00:21:36,469
around and Derek

00:21:38,580 --> 00:21:42,730
and then you can see along the way he's

00:21:41,080 --> 00:21:45,220
taking pictures and they're kind of time

00:21:42,730 --> 00:21:49,270
tag down here we're tracking the time I

00:21:45,220 --> 00:21:54,340
want to say he's in on no I think that's

00:21:49,270 --> 00:21:56,310
a bridge yeah I'm sure there's a bridge

00:21:54,340 --> 00:22:03,700
thing

00:21:56,310 --> 00:22:05,560
hey go Chris boat one on sure yeah yeah

00:22:03,700 --> 00:22:07,170
he could have been on the roof like is

00:22:05,560 --> 00:22:10,570
on the ferry with this speed difference

00:22:07,170 --> 00:22:12,070
I think he's got the terrain profile

00:22:10,570 --> 00:22:14,530
down the bottom here as you can see when

00:22:12,070 --> 00:22:18,280
he's climbing and when he's a when he's

00:22:14,530 --> 00:22:19,840
dropping what um there's some

00:22:18,280 --> 00:22:22,210
post-processing going on here to show

00:22:19,840 --> 00:22:26,470
you like the kind of old-school fill in

00:22:22,210 --> 00:22:29,530
favor so yeah yeah I remember back in

00:22:26,470 --> 00:22:33,640
the day exporting Google Earth tours the

00:22:29,530 --> 00:22:37,900
video wasn't fun so do you guys have any

00:22:33,640 --> 00:22:39,370
better tooling or so this year you can I

00:22:37,900 --> 00:22:41,560
don't know if there's an API to make

00:22:39,370 --> 00:22:45,730
your videos out of this but there you

00:22:41,560 --> 00:22:47,470
can embed you can embed the interactive

00:22:45,730 --> 00:22:51,700
thing into your website yeah it was like

00:22:47,470 --> 00:22:53,890
and I find so yeah so this is pretty

00:22:51,700 --> 00:22:56,200
cool this is actually taken off in the

00:22:53,890 --> 00:22:57,880
paragliding community as well as those

00:22:56,200 --> 00:22:59,260
people that are like tracking birds that

00:22:57,880 --> 00:23:01,450
are using this because it's a real-time

00:22:59,260 --> 00:23:02,830
API for this so as the birds are flying

00:23:01,450 --> 00:23:05,790
they're the you know the feet in the

00:23:02,830 --> 00:23:05,790
data they can track

00:23:17,380 --> 00:23:21,590
yeah I don't think they had any kind of

00:23:19,820 --> 00:23:25,870
first-person cameras in this I think it

00:23:21,590 --> 00:23:25,870
could be done but it's not in there now

00:23:26,200 --> 00:23:30,020
so yeah this is this is one of the

00:23:28,370 --> 00:23:31,190
cooler one of the apps I'm really

00:23:30,020 --> 00:23:34,700
excited that people are building with

00:23:31,190 --> 00:23:36,590
cesium because that's really the end of

00:23:34,700 --> 00:23:37,850
the demos that I had I'm glad the time

00:23:36,590 --> 00:23:39,320
went pretty well I just want to give you

00:23:37,850 --> 00:23:40,880
guys maybe I feel you know for what

00:23:39,320 --> 00:24:00,440
we're doing with WebGL and what cesium

00:23:40,880 --> 00:24:02,750
can do are there any questions yeah it's

00:24:00,440 --> 00:24:10,040
funny you ask that let me see if I know

00:24:02,750 --> 00:24:11,600
the URL so my my company got us a ton of

00:24:10,040 --> 00:24:14,510
stuff with satellites and we're really

00:24:11,600 --> 00:24:16,250
interested in the satellite catalog and

00:24:14,510 --> 00:24:17,960
if satellites potentially will hit each

00:24:16,250 --> 00:24:19,970
other because then it creates a bunch of

00:24:17,960 --> 00:24:21,650
debris then that they might hit other

00:24:19,970 --> 00:24:23,360
satellites and satellites are very

00:24:21,650 --> 00:24:24,800
expensive and well that was a

00:24:23,360 --> 00:24:28,370
communication settle it could be a big

00:24:24,800 --> 00:24:32,030
deal so I think here we have for almost

00:24:28,370 --> 00:24:35,390
15,000 satellites that we're tracking

00:24:32,030 --> 00:24:38,920
and let me speed it up they are moving

00:24:35,390 --> 00:24:43,610
at 1x but let's move a little faster

00:24:38,920 --> 00:24:45,310
love that and there you are so you can

00:24:43,610 --> 00:24:47,450
see it emitted in there so there's

00:24:45,310 --> 00:24:52,970
15,000 that that are moving I don't know

00:24:47,450 --> 00:24:54,320
what the upper bound is it's more so

00:24:52,970 --> 00:24:55,790
this is being done

00:24:54,320 --> 00:24:57,350
yeah with I believe I didn't actually

00:24:55,790 --> 00:25:01,070
write this but I believe it's being done

00:24:57,350 --> 00:25:02,390
with C's ml and server sent events and

00:25:01,070 --> 00:25:03,710
then the rendering code I did write I

00:25:02,390 --> 00:25:08,240
could tell you all about how that works

00:25:03,710 --> 00:25:09,560
but it's probably less exciting in fact

00:25:08,240 --> 00:25:11,870
this was one of the first apps that we

00:25:09,560 --> 00:25:15,320
did with what cesium was was we want to

00:25:11,870 --> 00:25:19,030
be able to do a lot of satellites other

00:25:15,320 --> 00:25:19,030
questions yep

00:25:20,830 --> 00:25:25,120
seize him in general yeah what is the

00:25:23,470 --> 00:25:26,830
biggest challenge so none of those new

00:25:25,120 --> 00:25:30,070
JavaScript I guess we were all so close

00:25:26,830 --> 00:25:31,570
clustered so no seizing it's a big

00:25:30,070 --> 00:25:33,309
engine it's eighty thousand lines of

00:25:31,570 --> 00:25:36,970
code and seventy six thousand lines of

00:25:33,309 --> 00:25:39,490
test code and there's 35 contributors

00:25:36,970 --> 00:25:42,429
although maybe only five or so that are

00:25:39,490 --> 00:25:45,910
like really in the guts all the time so

00:25:42,429 --> 00:25:48,130
that that was a big challenge stability

00:25:45,910 --> 00:25:50,080
of WebGL early on was a big challenge

00:25:48,130 --> 00:25:52,530
that's gotten better but we still

00:25:50,080 --> 00:25:54,970
sometimes in rendering test fails we go

00:25:52,530 --> 00:25:58,929
okay with all the tests you know not

00:25:54,970 --> 00:26:01,390
what's wrong with our code I think what

00:25:58,929 --> 00:26:03,250
what else JavaScript performance - it

00:26:01,390 --> 00:26:05,140
took us a while like we were very

00:26:03,250 --> 00:26:07,450
careful about not allocating memory

00:26:05,140 --> 00:26:10,120
during a render loop we're very very

00:26:07,450 --> 00:26:12,070
careful about it and some of the API and

00:26:10,120 --> 00:26:12,940
the lower levels will show that where we

00:26:12,070 --> 00:26:14,470
won't you know if you want to multiply

00:26:12,940 --> 00:26:16,270
two matrices

00:26:14,470 --> 00:26:17,230
you better have a matrix to write that

00:26:16,270 --> 00:26:19,900
into because we don't want you to

00:26:17,230 --> 00:26:21,790
allocate a new one so but once you get

00:26:19,900 --> 00:26:26,559
that under control the garbage collector

00:26:21,790 --> 00:26:29,040
hasn't been too much of an issue one

00:26:26,559 --> 00:26:29,040
more question

00:26:42,750 --> 00:26:46,660
yeah all good questions here so let's

00:26:46,390 --> 00:26:50,080
see

00:26:46,660 --> 00:26:52,210
I don't care handles oh ok so trees not

00:26:50,080 --> 00:26:53,440
yet we haven't tried it I am like really

00:26:52,210 --> 00:26:55,120
interested in rendering a whole bunch of

00:26:53,440 --> 00:26:56,710
trees and if you have tree David I know

00:26:55,120 --> 00:27:09,400
there's like open tree map and has good

00:26:56,710 --> 00:27:13,450
trees and Philadelphia ok cool no that's

00:27:09,400 --> 00:27:15,220
good data um I'm interested no I'm

00:27:13,450 --> 00:27:16,930
confident so we wouldn't render a brute

00:27:15,220 --> 00:27:19,390
force right we would slice and dice it

00:27:16,930 --> 00:27:21,430
up you know just like we render terrain

00:27:19,390 --> 00:27:22,750
and then we use instancing based on

00:27:21,430 --> 00:27:24,610
different types of trees you know they

00:27:22,750 --> 00:27:25,810
would have similar similarities and I

00:27:24,610 --> 00:27:28,510
think we can do a pretty good job with

00:27:25,810 --> 00:27:30,970
it but we haven't done it yet in terms

00:27:28,510 --> 00:27:32,920
of buildings we have been prototyping

00:27:30,970 --> 00:27:34,690
and looking at doing a server for

00:27:32,920 --> 00:27:36,970
streaming massive amounts of building

00:27:34,690 --> 00:27:38,980
data we probably start with extrude

00:27:36,970 --> 00:27:42,310
extrusions from open street maps then

00:27:38,980 --> 00:27:43,450
look for higher quality data but we

00:27:42,310 --> 00:27:46,660
haven't quite done it yet there are

00:27:43,450 --> 00:27:48,490
folks that are also that are also

00:27:46,660 --> 00:27:50,950
interested in that these cube city guys

00:27:48,490 --> 00:27:52,270
I love these guys now cube cities was

00:27:50,950 --> 00:27:53,800
something that was built on Google Earth

00:27:52,270 --> 00:27:54,790
so you could go look at a city and you

00:27:53,800 --> 00:27:57,340
might want to say well show me all the

00:27:54,790 --> 00:27:59,800
buildings that were built after 1970 and

00:27:57,340 --> 00:28:02,680
have 80% occupancy and it highlights

00:27:59,800 --> 00:28:04,210
them but now you're worth plugin you

00:28:02,680 --> 00:28:06,700
know it's it's probably seeing its final

00:28:04,210 --> 00:28:08,800
days with NPAPI being removed that's no

00:28:06,700 --> 00:28:10,270
longer supported in chrome 64-bit so

00:28:08,800 --> 00:28:12,280
these guys are starting to experiment

00:28:10,270 --> 00:28:15,160
and with doing buildings and cesium but

00:28:12,280 --> 00:28:16,870
this is not at scale yet I think they're

00:28:15,160 --> 00:28:19,090
going to need some of our help to do the

00:28:16,870 --> 00:28:20,680
streaming for it so so asking those

00:28:19,090 --> 00:28:22,810
questions next year I think I will have

00:28:20,680 --> 00:28:25,140
really good answers I want to see every

00:28:22,810 --> 00:28:25,140
treatment

00:28:27,010 --> 00:28:32,950
anyway uh let's clap it up for Patrick

00:28:35,650 --> 00:28:37,710
you

00:28:44,580 --> 00:28:46,640

YouTube URL: https://www.youtube.com/watch?v=MgKZFBaKWUM


