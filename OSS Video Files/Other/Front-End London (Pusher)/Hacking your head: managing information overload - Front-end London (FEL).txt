Title: Hacking your head: managing information overload - Front-end London (FEL)
Publication date: 2016-07-14
Playlist: Front-End London
Description: 
	There are limits on our ability to learn and process information. Overloading ourselves with information can impact productivity by causing psychological and physiological stress. In this talk, Jo Pearce relates some findings from the world of cognitive psychology that can help us understand how, as developers, we might be overloading ourselves.

This talk was part of the Front-end London (fel) April 2016 event.

Pusher is a hosted service with APIs, developer tools and open source libraries that greatly simplify integrating real-time functionality into web and mobile applications. 

Pusher will automatically scale when required, removing all the pain of setting up and maintaining a secure, real-time infrastructure. 

Pusher is already trusted to do so by thousands of developers and companies like GitHub, MailChimp, the Financial Times, Buffer and many more. 

Getting started takes just a few seconds: simply go to pusher.com and create a free account. Happy hacking!
Captions: 
	00:00:09,290 --> 00:00:15,290
my name is Drew Pearce I'm non-binary

00:00:12,170 --> 00:00:18,590
i'm a developer and consider myself a

00:00:15,290 --> 00:00:20,330
science womble that is I'm not an

00:00:18,590 --> 00:00:22,040
academic but I love to learn about a

00:00:20,330 --> 00:00:24,160
wide range of sciences and see if I can

00:00:22,040 --> 00:00:26,060
make good use of the things that I find

00:00:24,160 --> 00:00:28,489
recently I've been wobbling around the

00:00:26,060 --> 00:00:30,020
field of cognitive psychology and I want

00:00:28,489 --> 00:00:34,970
to use it to explain some ways we can

00:00:30,020 --> 00:00:37,670
manage information overload so what is

00:00:34,970 --> 00:00:42,080
information overload and why do we need

00:00:37,670 --> 00:00:44,420
to manage it well in 1970 futurist Alvin

00:00:42,080 --> 00:00:46,850
Toffler popularized the term information

00:00:44,420 --> 00:00:47,990
overload in his book future shock he

00:00:46,850 --> 00:00:52,040
considered the book a thesis on

00:00:47,990 --> 00:00:54,110
surviving the collision with tomorrow in

00:00:52,040 --> 00:00:56,000
it he wrote that there are discoverable

00:00:54,110 --> 00:00:58,579
limits to the amount of change that the

00:00:56,000 --> 00:01:00,739
human organism can absorb and that by

00:00:58,579 --> 00:01:03,020
accelerating change without first

00:01:00,739 --> 00:01:05,000
determining these limits we may submit

00:01:03,020 --> 00:01:07,490
masses of people demands that they

00:01:05,000 --> 00:01:11,720
simply cannot tolerate we might submit

00:01:07,490 --> 00:01:13,159
them to information overload among the

00:01:11,720 --> 00:01:16,850
symptoms Topher described to it work

00:01:13,159 --> 00:01:19,430
anxiety hostility apathy physical

00:01:16,850 --> 00:01:24,380
illness depression and even senseless

00:01:19,430 --> 00:01:27,560
violence Experimental Psychology uses

00:01:24,380 --> 00:01:30,260
the term orientation response for our

00:01:27,560 --> 00:01:33,200
reaction to change or novelty it's also

00:01:30,260 --> 00:01:36,229
sometimes called startle reaction our

00:01:33,200 --> 00:01:39,290
pupils dilate hearing becomes more acute

00:01:36,229 --> 00:01:42,790
our muscles tense blood rushes the head

00:01:39,290 --> 00:01:44,840
in our breathing and heart rate alter

00:01:42,790 --> 00:01:46,520
examples Toffler used to illustrate the

00:01:44,840 --> 00:01:48,350
effects of overloading the orientation

00:01:46,520 --> 00:01:50,479
response came from stories of extreme

00:01:48,350 --> 00:01:53,180
environments like the battlefields of

00:01:50,479 --> 00:01:55,220
World War two where a soldier falls

00:01:53,180 --> 00:01:57,500
asleep of a storm of machine-gun bullets

00:01:55,220 --> 00:01:59,689
splattered around it not due to physical

00:01:57,500 --> 00:02:02,960
illness physical tiredness but a sense

00:01:59,689 --> 00:02:05,210
of overpowering apathy soldiers became

00:02:02,960 --> 00:02:07,280
hypersensitive and would hit the dirt at

00:02:05,210 --> 00:02:08,989
the slightest stimuli increasingly

00:02:07,280 --> 00:02:13,610
showing anxiety and anger at the

00:02:08,989 --> 00:02:14,870
slightest inconvenience the source of

00:02:13,610 --> 00:02:18,439
overwhelming stimuli in extreme

00:02:14,870 --> 00:02:19,730
situations is clear but what about here

00:02:18,439 --> 00:02:21,379
now

00:02:19,730 --> 00:02:25,340
where there are no bullets or glass

00:02:21,379 --> 00:02:27,500
flying through the air around us Toffler

00:02:25,340 --> 00:02:29,420
went on to say but the orientation

00:02:27,500 --> 00:02:32,060
response occurs not merely in response

00:02:29,420 --> 00:02:33,769
to simple sensory inputs it happens when

00:02:32,060 --> 00:02:36,890
we come across novel ideas or

00:02:33,769 --> 00:02:38,180
information now we really faced with an

00:02:36,890 --> 00:02:43,670
overwhelming amount of new information

00:02:38,180 --> 00:02:45,519
46 years later 20 million words of new

00:02:43,670 --> 00:02:48,560
technical information recorded each day

00:02:45,519 --> 00:02:50,840
at a thousand words a minute reading 48

00:02:48,560 --> 00:02:54,319
hours a day this is six weeks worth of

00:02:50,840 --> 00:02:55,340
reading after reading the information of

00:02:54,319 --> 00:02:58,160
that one day you would have fallen

00:02:55,340 --> 00:03:00,890
behind by five and a half years worth of

00:02:58,160 --> 00:03:04,340
reading and these statistics infer from

00:03:00,890 --> 00:03:06,410
2001 Toffler seems even more prescient

00:03:04,340 --> 00:03:08,030
as there's now a medically recognized

00:03:06,410 --> 00:03:10,370
condition called information fatigue

00:03:08,030 --> 00:03:13,579
syndrome with symptoms that include

00:03:10,370 --> 00:03:15,590
hurry sickness the belief that one must

00:03:13,579 --> 00:03:19,400
constantly rush to keep pace with time

00:03:15,590 --> 00:03:21,500
and pervasive hostility the chronic

00:03:19,400 --> 00:03:26,380
state of irritability near anger or even

00:03:21,500 --> 00:03:28,760
rage these might sound familiar I

00:03:26,380 --> 00:03:31,310
believe we see evidence of information

00:03:28,760 --> 00:03:32,630
fatigue all around us this is just a

00:03:31,310 --> 00:03:36,709
small sample which I think illustrates

00:03:32,630 --> 00:03:38,359
that symptom of pervasive hostility the

00:03:36,709 --> 00:03:39,919
sad state of web development random

00:03:38,359 --> 00:03:43,639
thoughts on web development going to

00:03:39,919 --> 00:03:46,549
sheet 2015 is when web development went

00:03:43,639 --> 00:03:49,639
to sheet programming sucks and why I

00:03:46,549 --> 00:03:50,959
quit my own personal favorite a lot of

00:03:49,639 --> 00:03:53,260
work is done on the internet and the

00:03:50,959 --> 00:03:55,040
internet is its own special hellscape

00:03:53,260 --> 00:03:57,410
remember that stuff about crazy people

00:03:55,040 --> 00:04:04,040
and bad code the internet is that except

00:03:57,410 --> 00:04:05,900
is literally a billion times worse take

00:04:04,040 --> 00:04:08,349
a look at how many tech blog writers use

00:04:05,900 --> 00:04:12,139
the word rant in the blog title as well

00:04:08,349 --> 00:04:15,079
so how might we as developers be

00:04:12,139 --> 00:04:18,070
overloading ourselves let's look at

00:04:15,079 --> 00:04:21,470
front-end web development as an example

00:04:18,070 --> 00:04:23,870
there has been a huge growth in the

00:04:21,470 --> 00:04:25,550
number of frameworks and tools this

00:04:23,870 --> 00:04:27,560
means that it's not only hard to keep up

00:04:25,550 --> 00:04:30,229
with what's out there but that no one

00:04:27,560 --> 00:04:31,449
can know everything if you ever work on

00:04:30,229 --> 00:04:32,969
a project with multiple

00:04:31,449 --> 00:04:37,539
familiar tools and frameworks

00:04:32,969 --> 00:04:38,499
information overload is at risk so

00:04:37,539 --> 00:04:40,569
development is always going to be a

00:04:38,499 --> 00:04:43,509
learning process because there's always

00:04:40,569 --> 00:04:45,699
a lot to learn perhaps that means that

00:04:43,509 --> 00:04:49,870
we can manage information overload by

00:04:45,699 --> 00:04:51,309
managing how we learn so I hopes to

00:04:49,870 --> 00:04:55,749
understand a little bit about how we

00:04:51,309 --> 00:04:58,120
learn in order to have the process the

00:04:55,749 --> 00:05:01,199
two partners of human learning are our

00:04:58,120 --> 00:05:03,219
working memory and long-term memory

00:05:01,199 --> 00:05:04,930
working memory is where we process

00:05:03,219 --> 00:05:06,759
information it's a sight of our active

00:05:04,930 --> 00:05:10,089
conscious thinking and learning

00:05:06,759 --> 00:05:13,779
processes and comprises visual and

00:05:10,089 --> 00:05:17,110
auditory subcomponents long-term memory

00:05:13,779 --> 00:05:18,909
has enormous capacity but cannot engage

00:05:17,110 --> 00:05:23,139
in conscious thinking or learning

00:05:18,909 --> 00:05:24,819
processes they work together learning

00:05:23,139 --> 00:05:29,349
takes place in working memory and the

00:05:24,819 --> 00:05:31,240
results are stored in long-term I want

00:05:29,349 --> 00:05:33,999
to briefly outline three of the main

00:05:31,240 --> 00:05:37,689
processes that we can have to alter the

00:05:33,999 --> 00:05:42,550
way we learn attention elaboration

00:05:37,689 --> 00:05:46,060
rehearsal and encoding attention is

00:05:42,550 --> 00:05:49,629
critical to processing information to

00:05:46,060 --> 00:05:52,029
illustrate how critical in 1972 an

00:05:49,629 --> 00:05:54,699
Eastern Airlines flight crashed as a

00:05:52,029 --> 00:05:57,069
result of cockpit distractions the crew

00:05:54,699 --> 00:05:58,930
became so preoccupied with a malfunction

00:05:57,069 --> 00:06:04,270
that no one noticed the altimeter

00:05:58,930 --> 00:06:06,759
warnings until it was too late we can

00:06:04,270 --> 00:06:11,699
help focus attention with cues and

00:06:06,759 --> 00:06:15,279
signals for example bullet points

00:06:11,699 --> 00:06:18,509
paragraphs and headings visual

00:06:15,279 --> 00:06:22,149
indicators like a great big red arrow

00:06:18,509 --> 00:06:24,959
even signalling language like it is

00:06:22,149 --> 00:06:24,959
important to note that

00:06:25,400 --> 00:06:30,360
we can also help focus attention by

00:06:27,990 --> 00:06:32,120
leveraging both the visual and auditory

00:06:30,360 --> 00:06:34,650
components of a working memory at once

00:06:32,120 --> 00:06:36,780
as I've done here giving you a diagram

00:06:34,650 --> 00:06:38,759
to focus on visually while I describe

00:06:36,780 --> 00:06:43,289
what it represents this is called the

00:06:38,759 --> 00:06:45,840
modality effect elaboration rehearsal

00:06:43,289 --> 00:06:47,490
helps promote automaticity this is a

00:06:45,840 --> 00:06:50,009
mechanism that allows us to largely

00:06:47,490 --> 00:06:51,300
bypass working memory skills that are

00:06:50,009 --> 00:06:53,160
repeated often enough become established

00:06:51,300 --> 00:06:55,380
in long-term memory and can subsequently

00:06:53,160 --> 00:06:58,620
be performed with little or no working

00:06:55,380 --> 00:07:02,720
memory resources such as writing reading

00:06:58,620 --> 00:07:06,389
and speaking when we encode information

00:07:02,720 --> 00:07:07,800
we create schemas these are memory

00:07:06,389 --> 00:07:09,810
structures that allow us to treat a

00:07:07,800 --> 00:07:12,780
large number of information elements as

00:07:09,810 --> 00:07:16,650
though there are a single element we

00:07:12,780 --> 00:07:19,199
have seen as far everything for example

00:07:16,650 --> 00:07:20,490
while all trees are different to include

00:07:19,199 --> 00:07:22,680
an enormous amount of sensory

00:07:20,490 --> 00:07:24,659
information we instantly recognize a

00:07:22,680 --> 00:07:28,979
tree because we have a scheme of the

00:07:24,659 --> 00:07:31,229
trees schemes are constructed additively

00:07:28,979 --> 00:07:32,490
for novice learner every new thing is

00:07:31,229 --> 00:07:36,300
unconnected and must be managed

00:07:32,490 --> 00:07:38,099
separately but as we gain experience we

00:07:36,300 --> 00:07:40,020
form connections between the bits of

00:07:38,099 --> 00:07:41,400
information in our head allowing to

00:07:40,020 --> 00:07:46,139
treat these collections as single

00:07:41,400 --> 00:07:51,330
schemers but there are limits on our

00:07:46,139 --> 00:07:52,849
ability to learn back in 1956 cognitive

00:07:51,330 --> 00:07:54,659
psychologist George a Miller

00:07:52,849 --> 00:07:57,300
investigated these limits on our ability

00:07:54,659 --> 00:07:59,219
to process information you may have come

00:07:57,300 --> 00:08:02,520
across millersville the magical number

00:07:59,219 --> 00:08:04,259
seven plus or minus two well as research

00:08:02,520 --> 00:08:05,820
suggested that there's a definable limit

00:08:04,259 --> 00:08:07,949
on the amount of information we can

00:08:05,820 --> 00:08:10,320
usefully process in a working memory at

00:08:07,949 --> 00:08:13,289
any one time but when that limit

00:08:10,320 --> 00:08:15,630
succeeded information overload leads to

00:08:13,289 --> 00:08:20,219
our learning becoming inefficient if it

00:08:15,630 --> 00:08:22,110
even remains working at all some web

00:08:20,219 --> 00:08:24,060
designers have used Miller's law as

00:08:22,110 --> 00:08:26,190
justification for only 14 seven or fewer

00:08:24,060 --> 00:08:28,680
things on a page this is a

00:08:26,190 --> 00:08:30,150
misinterpretation it wasn't the number

00:08:28,680 --> 00:08:31,560
of things that was the important result

00:08:30,150 --> 00:08:33,390
but the fact that there was always a

00:08:31,560 --> 00:08:36,030
limit

00:08:33,390 --> 00:08:37,280
we now create the things themselves to

00:08:36,030 --> 00:08:39,630
the scheme as I mentioned earlier

00:08:37,280 --> 00:08:41,520
someone would experience who has more

00:08:39,630 --> 00:08:43,470
connected schemas will be able to handle

00:08:41,520 --> 00:08:47,730
more complex information in working

00:08:43,470 --> 00:08:51,630
memory at once so how do we use the

00:08:47,730 --> 00:08:53,640
result in as research while in the late

00:08:51,630 --> 00:08:55,650
1980s John swella an Australian

00:08:53,640 --> 00:08:57,510
educational psychologists asked what we

00:08:55,650 --> 00:08:59,880
can do to learn more efficiently given

00:08:57,510 --> 00:09:01,560
the limitations that no defined yet

00:08:59,880 --> 00:09:05,820
that's the general that he published it

00:09:01,560 --> 00:09:09,600
in if you're interested his research led

00:09:05,820 --> 00:09:12,810
to cognitive load theory what is

00:09:09,600 --> 00:09:15,000
cognitive load theory very simply it

00:09:12,810 --> 00:09:16,380
defines cognitive load as a total amount

00:09:15,000 --> 00:09:19,290
of mental effort being used in the

00:09:16,380 --> 00:09:21,420
working memory and describes a universal

00:09:19,290 --> 00:09:23,580
set of evidence-based principles for

00:09:21,420 --> 00:09:26,010
managing positive load that lead to more

00:09:23,580 --> 00:09:29,120
efficient learning I wanna give you a

00:09:26,010 --> 00:09:31,590
brief overview of the core concepts

00:09:29,120 --> 00:09:35,760
total cognitive load is comprised of

00:09:31,590 --> 00:09:38,820
three types intrinsic load extraneous or

00:09:35,760 --> 00:09:42,270
irrelevant load and germann or relevant

00:09:38,820 --> 00:09:44,240
load intrinsic loads imposed by the

00:09:42,270 --> 00:09:46,380
complexity of the task being performed

00:09:44,240 --> 00:09:48,810
learning to juggle with ten balls is

00:09:46,380 --> 00:09:50,400
more complex than loading with three so

00:09:48,810 --> 00:09:54,660
we can only reduce intrinsic load by

00:09:50,400 --> 00:09:56,880
juggling four balls in other words if

00:09:54,660 --> 00:09:58,860
we're faced with a large complex task we

00:09:56,880 --> 00:10:02,340
want to break it up into smaller ones we

00:09:58,860 --> 00:10:03,960
can then tackle these individually you

00:10:02,340 --> 00:10:06,090
might be familiar with the agile

00:10:03,960 --> 00:10:08,730
hierarchy where we define a high level

00:10:06,090 --> 00:10:11,160
epic which we then break down into user

00:10:08,730 --> 00:10:14,940
stories which we then further break down

00:10:11,160 --> 00:10:17,310
into individual tasks estimating an epic

00:10:14,940 --> 00:10:20,460
would impose an extremely high intrinsic

00:10:17,310 --> 00:10:25,140
globe estimating user stories of tasks

00:10:20,460 --> 00:10:26,700
should be more manageable extraneous or

00:10:25,140 --> 00:10:28,170
irrelevant load is imposed by

00:10:26,700 --> 00:10:30,750
distractions or tasks that are

00:10:28,170 --> 00:10:33,300
irrelevant to the goal these could be

00:10:30,750 --> 00:10:36,210
noise distractions needing to learn an

00:10:33,300 --> 00:10:37,680
unfamiliar tool or set of tools or tryin

00:10:36,210 --> 00:10:40,440
to cipher code that's unreadable or

00:10:37,680 --> 00:10:41,030
difficult to follow to manage a relevant

00:10:40,440 --> 00:10:43,160
load

00:10:41,030 --> 00:10:47,450
we could try working in a quieter

00:10:43,160 --> 00:10:48,680
environment or wearing headphones try

00:10:47,450 --> 00:10:50,930
reducing the number of tools or

00:10:48,680 --> 00:10:52,400
libraries we use to a minimum there's

00:10:50,930 --> 00:10:54,230
actually a growing movement originating

00:10:52,400 --> 00:10:56,150
from Pete's circle to use NPM scripts

00:10:54,230 --> 00:11:01,130
alone for front-end task running thus

00:10:56,150 --> 00:11:05,090
eliminating grunt and web pack make sure

00:11:01,130 --> 00:11:06,620
that the code we write is readable never

00:11:05,090 --> 00:11:10,240
forget that the person unable to

00:11:06,620 --> 00:11:13,670
decipher your code might be future you

00:11:10,240 --> 00:11:16,250
we can do this by using better cues and

00:11:13,670 --> 00:11:18,110
signals in our code may not be

00:11:16,250 --> 00:11:20,510
immediately obvious that this function

00:11:18,110 --> 00:11:23,860
does two distinct tasks the null chattin

00:11:20,510 --> 00:11:23,860
throwing the exception for proprietary

00:11:24,370 --> 00:11:29,420
at an appropriate white space than line

00:11:27,020 --> 00:11:30,980
breaks week you the developer with the

00:11:29,420 --> 00:11:35,420
information that there are two distinct

00:11:30,980 --> 00:11:37,520
answers here comments are also important

00:11:35,420 --> 00:11:40,310
to use wisely as Jeff Atwood succinctly

00:11:37,520 --> 00:11:43,520
puts it code tells you how comments tell

00:11:40,310 --> 00:11:47,050
you why don't let anyone suggest to you

00:11:43,520 --> 00:11:49,880
that good code should be self commenting

00:11:47,050 --> 00:11:52,070
good comments signal that all is not as

00:11:49,880 --> 00:11:53,840
straightforward as it might appear this

00:11:52,070 --> 00:11:56,420
reduces the load on anyone trying to

00:11:53,840 --> 00:11:59,030
maintain your code if you've ever spent

00:11:56,420 --> 00:12:01,040
more time than expected wondering why

00:11:59,030 --> 00:12:04,040
section of code doesn't do what it looks

00:12:01,040 --> 00:12:08,840
like it should do you may understand

00:12:04,040 --> 00:12:10,490
what I mean consistency is also

00:12:08,840 --> 00:12:11,960
important to reduce load star

00:12:10,490 --> 00:12:13,460
conformance tools can help without

00:12:11,960 --> 00:12:15,650
having to impose the extra load of

00:12:13,460 --> 00:12:17,000
learning a style guide how many times

00:12:15,650 --> 00:12:18,590
have you seen a style guide that's

00:12:17,000 --> 00:12:23,750
gathered dust due to the extra effort

00:12:18,590 --> 00:12:25,070
required to maintain or learn it so by

00:12:23,750 --> 00:12:29,350
reducing irrelevant tasks and

00:12:25,070 --> 00:12:29,350
distractions we focus attention

00:12:30,940 --> 00:12:35,410
jermaine relevant load is a beneficial

00:12:33,550 --> 00:12:37,750
load it's imposed by tasks that are

00:12:35,410 --> 00:12:39,550
relevant to an overall goal it helps us

00:12:37,750 --> 00:12:42,610
to connect bits of information and form

00:12:39,550 --> 00:12:44,410
more complex schemas repetition and

00:12:42,610 --> 00:12:45,790
context variation give us a skills to

00:12:44,410 --> 00:12:50,130
apply knowledge in a wider variety of

00:12:45,790 --> 00:12:52,630
situations by repetition I mean practice

00:12:50,130 --> 00:12:55,480
schemas need reinforcing incomplete and

00:12:52,630 --> 00:12:58,440
recalling usage this makes them easier

00:12:55,480 --> 00:13:01,210
for working amatory treatment process

00:12:58,440 --> 00:13:04,000
you can vary the context by seeking out

00:13:01,210 --> 00:13:08,200
multiple sources of information there is

00:13:04,000 --> 00:13:09,460
no such thing as the definitive tree it

00:13:08,200 --> 00:13:10,810
might be that only after seeing

00:13:09,460 --> 00:13:12,940
something expressed in five different

00:13:10,810 --> 00:13:19,090
contexts are you able to confidently

00:13:12,940 --> 00:13:20,500
recognize it yourself in a sixth this

00:13:19,090 --> 00:13:23,470
might be easy to understand if I give an

00:13:20,500 --> 00:13:24,670
example in different contexts say the

00:13:23,470 --> 00:13:26,950
goal of a developers to better

00:13:24,670 --> 00:13:28,060
understand an existing code base this

00:13:26,950 --> 00:13:29,200
might include understanding the

00:13:28,060 --> 00:13:33,010
framework that has been used

00:13:29,200 --> 00:13:35,080
particularly if it's nuanced we might

00:13:33,010 --> 00:13:36,280
assist that goal by varying the areas of

00:13:35,080 --> 00:13:38,860
the code base that they're assigned to

00:13:36,280 --> 00:13:43,570
work on until they can confidently

00:13:38,860 --> 00:13:45,370
develop a feature from scratch we can

00:13:43,570 --> 00:13:47,620
also develop more flexible schemas

00:13:45,370 --> 00:13:49,930
through pairing can help us discover

00:13:47,620 --> 00:13:52,690
very approaches and methods we haven't

00:13:49,930 --> 00:13:56,140
yet encoded within our own schemas this

00:13:52,690 --> 00:13:58,080
can also leverage both sub components of

00:13:56,140 --> 00:13:59,860
the working memory auditory visual

00:13:58,080 --> 00:14:01,450
particular if you have one person

00:13:59,860 --> 00:14:03,370
example visually examining the code

00:14:01,450 --> 00:14:08,320
while another person is explaining what

00:14:03,370 --> 00:14:10,990
it's doing so Jermaine relevant load

00:14:08,320 --> 00:14:13,860
helps us elaborate and rehearse existing

00:14:10,990 --> 00:14:18,850
steamers and combed new information and

00:14:13,860 --> 00:14:20,950
if we're lucky promote automaticity so

00:14:18,850 --> 00:14:24,160
the start of summer we constantly need

00:14:20,950 --> 00:14:27,760
to learn cognitive psychology can tell

00:14:24,160 --> 00:14:29,530
us how we alone but it also tells us

00:14:27,760 --> 00:14:31,680
that there are limits to our ability to

00:14:29,530 --> 00:14:31,680
learn

00:14:31,900 --> 00:14:36,560
cognitive load theory can help us work

00:14:34,190 --> 00:14:39,380
within those limits giving us a set of

00:14:36,560 --> 00:14:41,780
guiding evidence-based principles if we

00:14:39,380 --> 00:14:44,180
manage intrinsic load by breaking large

00:14:41,780 --> 00:14:46,730
tasks into smaller ones reduce

00:14:44,180 --> 00:14:48,950
extraneous load by eliminating

00:14:46,730 --> 00:14:50,870
irrelevant tasks and distractions and

00:14:48,950 --> 00:14:53,180
increase relevant load with appropriate

00:14:50,870 --> 00:14:56,090
repetition and varied learning context

00:14:53,180 --> 00:14:57,950
we promote efficient learning improve

00:14:56,090 --> 00:15:00,760
productivity and escape the horrors of

00:14:57,950 --> 00:15:00,760

YouTube URL: https://www.youtube.com/watch?v=DgTJ9i8Cl-o


