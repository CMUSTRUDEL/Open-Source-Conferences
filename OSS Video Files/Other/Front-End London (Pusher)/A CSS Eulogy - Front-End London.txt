Title: A CSS Eulogy - Front-End London
Publication date: 2016-09-19
Playlist: Front-End London
Description: 
	It’s time to say goodbye to again, only this time it's not to enemies (Internet Explorer 6 and 7), but old friends.

In this talk, Mike Riethmuller (@MikeRiethmuller) gives a eulogy for some much loved design patterns and techniques we love but sadly don’t need anymore. 

Warning ⚠️: Mike says "This will be an emotional experience and you might cry"

▼ Speaker ▼

Mike Riethmuller (@MikeRiethmuller)

▼ Event ▼

This talk was part of Front-End London in August

▼ Transcript ▼

Coming soon...

▼ Video by Pusher ▼

Pusher is a hosted service with APIs, developer tools and open source libraries that greatly simplify integrating real-time functionality into web and mobile applications.

Pusher will automatically scale when required, removing all the pain of setting up and maintaining a secure, real-time infrastructure.

Pusher is already trusted to do so by thousands of developers and companies like GitHub, MailChimp, the Financial Times, Buffer and many more.

Getting started takes just a few seconds: simply go to https://pusher.com and create a free account. Happy hacking!

▼ More from Pusher ▼

Subscribe to Pusher: https://www.youtube.com/c/pusherrealtime?sub_confirmation=1
Front-End London playlist: https://www.youtube.com/playlist?list=PL8xuokhAnn4pZ6tAyFobOcUrLI2MNKZbU
Captions: 
	00:00:08,380 --> 00:00:13,280
as you said I am an independent web

00:00:10,940 --> 00:00:14,990
developer from Australia and for a long

00:00:13,280 --> 00:00:17,390
time I used to work for the Australian

00:00:14,990 --> 00:00:21,439
Government I'm not exactly sure how long

00:00:17,390 --> 00:00:23,599
it felt like about 90 years it wasn't

00:00:21,439 --> 00:00:26,359
actually that bad but it was a little

00:00:23,599 --> 00:00:28,339
bit bad so I quit my job and now I'm

00:00:26,359 --> 00:00:32,509
here so yeah I spent a lot of time

00:00:28,339 --> 00:00:36,620
hiking around the world this is me after

00:00:32,509 --> 00:00:39,620
walking 800 kilometres across Spain so

00:00:36,620 --> 00:00:41,360
when I'm not hiking and exploring I like

00:00:39,620 --> 00:00:43,250
to experiment with code and you can find

00:00:41,360 --> 00:00:45,500
some of my half-baked ideas on code pin

00:00:43,250 --> 00:00:47,570
or github and occasionally I write

00:00:45,500 --> 00:00:50,000
something a little bit more detailed on

00:00:47,570 --> 00:00:51,289
my blog i'm on twitter too if you want

00:00:50,000 --> 00:00:55,190
to follow me and it's how I measure my

00:00:51,289 --> 00:00:57,559
self-worth so that would be awesome but

00:00:55,190 --> 00:00:59,300
yeah the title of my talk is a CSS

00:00:57,559 --> 00:01:01,809
urology so I should say thank you all

00:00:59,300 --> 00:01:04,640
for coming on this very somber occasion

00:01:01,809 --> 00:01:05,900
now it's not a eulogy for CSS itself

00:01:04,640 --> 00:01:07,490
although the landscape is certainly

00:01:05,900 --> 00:01:09,470
changing and that is something that I

00:01:07,490 --> 00:01:11,240
want to touch on I don't think we'll be

00:01:09,470 --> 00:01:13,280
saying goodbye to CSS itself any time

00:01:11,240 --> 00:01:14,450
soon so rather this is a talk about

00:01:13,280 --> 00:01:15,650
looking critically at some of the

00:01:14,450 --> 00:01:17,570
patterns and techniques that we've

00:01:15,650 --> 00:01:20,210
regularly used and asking ourselves this

00:01:17,570 --> 00:01:22,430
is the best way or are things moved on

00:01:20,210 --> 00:01:25,730
and surprisingly the answer for that

00:01:22,430 --> 00:01:26,960
might not always be obvious now I'll be

00:01:25,730 --> 00:01:28,610
honest with you it's not going to be

00:01:26,960 --> 00:01:30,890
easy we'll be laying to rest some

00:01:28,610 --> 00:01:32,060
much-loved patterns and designs things

00:01:30,890 --> 00:01:35,540
that have served as well over the years

00:01:32,060 --> 00:01:37,280
so lean on the people around you be

00:01:35,540 --> 00:01:39,890
prepared to reflect on negative margins

00:01:37,280 --> 00:01:41,630
lament your love jordis clear fixes and

00:01:39,890 --> 00:01:43,790
long for the days of pixel-based

00:01:41,630 --> 00:01:45,230
certainty but we'll also be looking to

00:01:43,790 --> 00:01:47,990
the future and acknowledging flexbox

00:01:45,230 --> 00:01:50,150
viewport units legacy something that

00:01:47,990 --> 00:01:51,950
we're constantly dealing with and as a

00:01:50,150 --> 00:01:53,660
result of this we don't always move on

00:01:51,950 --> 00:01:55,610
as fast as we should I think we often

00:01:53,660 --> 00:01:58,610
cling to add a outdated techniques

00:01:55,610 --> 00:02:00,080
either out of fear or comfort and I want

00:01:58,610 --> 00:02:03,080
to tell you that it's okay to not want

00:02:00,080 --> 00:02:04,940
to let go in the dying days of IE 6 and

00:02:03,080 --> 00:02:08,090
7 despite my personal rocky relationship

00:02:04,940 --> 00:02:10,280
with them I still found myself reaching

00:02:08,090 --> 00:02:12,170
for the comfort of a robust our hack and

00:02:10,280 --> 00:02:14,540
to this day where inline-block is

00:02:12,170 --> 00:02:15,430
concerned in my heart zoom will always

00:02:14,540 --> 00:02:18,370
be one

00:02:15,430 --> 00:02:20,500
and what I'm getting at is like anything

00:02:18,370 --> 00:02:22,480
our habits when writing CSS can become

00:02:20,500 --> 00:02:24,400
ingrained and difficult to change this

00:02:22,480 --> 00:02:25,540
might be even though we know better so

00:02:24,400 --> 00:02:26,709
what I think we need is proper

00:02:25,540 --> 00:02:28,599
acknowledgement of this so that we can

00:02:26,709 --> 00:02:30,790
all move on and get that well needed

00:02:28,599 --> 00:02:32,139
closure cherish the memory now as we say

00:02:30,790 --> 00:02:34,180
goodbye to one of our founders friends

00:02:32,139 --> 00:02:36,730
the clearfix it's not quite working

00:02:34,180 --> 00:02:38,500
there but sorry now you all know what

00:02:36,730 --> 00:02:40,150
I'm talking about when I say a clearfix

00:02:38,500 --> 00:02:43,209
it's a hack to make a parent element

00:02:40,150 --> 00:02:44,799
clear its flavored children but it's of

00:02:43,209 --> 00:02:46,870
course a very versatile hack one that

00:02:44,799 --> 00:02:48,790
underpins a lot of patterns that we use

00:02:46,870 --> 00:02:51,010
things like media objects navigation

00:02:48,790 --> 00:02:53,470
grids and all of that in fact we use it

00:02:51,010 --> 00:02:54,700
so much that we forget it's a hack but

00:02:53,470 --> 00:02:56,409
if you've ever had to explain what a

00:02:54,700 --> 00:02:58,569
clear fix is to someone who doesn't know

00:02:56,409 --> 00:03:01,090
you might have realized it doesn't

00:02:58,569 --> 00:03:03,879
really make very much sense although it

00:03:01,090 --> 00:03:05,260
feels like second nature to us floats

00:03:03,879 --> 00:03:06,879
were never meant to be used for solving

00:03:05,260 --> 00:03:08,530
the majority of layout problems that we

00:03:06,879 --> 00:03:10,120
ask them to solve they require hacks

00:03:08,530 --> 00:03:11,980
likely affixed to even work in the first

00:03:10,120 --> 00:03:14,709
place so why should we have to do this

00:03:11,980 --> 00:03:16,389
is a perfectly legitimate question and I

00:03:14,709 --> 00:03:18,219
think all of us in this room have come

00:03:16,389 --> 00:03:19,690
to accept that this is the de facto way

00:03:18,219 --> 00:03:22,180
to solve this problem no more thinking

00:03:19,690 --> 00:03:24,099
required and it's when we get to that

00:03:22,180 --> 00:03:26,169
point that I think we become close to

00:03:24,099 --> 00:03:28,239
new ways of thinking and fail to see

00:03:26,169 --> 00:03:30,400
better options so before we look at

00:03:28,239 --> 00:03:31,930
those better options this is a eulogy so

00:03:30,400 --> 00:03:34,569
let's take a quick look at the life and

00:03:31,930 --> 00:03:35,979
evolution of clearfix I mean it's been

00:03:34,569 --> 00:03:37,810
good to us so it feels like the

00:03:35,979 --> 00:03:40,389
honorable thing to do and this here is

00:03:37,810 --> 00:03:42,760
of course a primitive ancestor to our

00:03:40,389 --> 00:03:44,439
modern cliff fix or if anyone here has

00:03:42,760 --> 00:03:47,199
perhaps been to the London Zoo you might

00:03:44,439 --> 00:03:48,819
say Mike you fool that's a chimp this is

00:03:47,199 --> 00:03:52,599
exactly the kind of nonsense we expect

00:03:48,819 --> 00:03:54,669
from the colonies and okay London very

00:03:52,599 --> 00:03:57,699
clever of you also very snotty like say

00:03:54,669 --> 00:03:59,680
but he's a very symbolic chip and the

00:03:57,699 --> 00:04:01,629
reason he's so happy is he's just

00:03:59,680 --> 00:04:03,280
realized that he can force a container

00:04:01,629 --> 00:04:04,930
to clear its children by adding an empty

00:04:03,280 --> 00:04:09,879
div at the bottom with the property

00:04:04,930 --> 00:04:12,790
clear both it was a simple and fairly

00:04:09,879 --> 00:04:15,189
elegant solution but it wasn't semantics

00:04:12,790 --> 00:04:18,220
and dare I say it real developers don't

00:04:15,189 --> 00:04:21,250
use empty elements feel like I should

00:04:18,220 --> 00:04:23,259
duck when I say that what this chip

00:04:21,250 --> 00:04:24,909
didn't realize was it like a fish taking

00:04:23,259 --> 00:04:27,039
its first evolutionary steps out of

00:04:24,909 --> 00:04:28,380
water the next few years we're going to

00:04:27,039 --> 00:04:30,240
be a little bit awkward

00:04:28,380 --> 00:04:31,770
and I do hope that you'll forgive me for

00:04:30,240 --> 00:04:32,850
extending that metaphor but I think

00:04:31,770 --> 00:04:34,920
you'll agree it was worth it to get

00:04:32,850 --> 00:04:36,660
these guys on a slide what I'm not

00:04:34,920 --> 00:04:38,490
really getting at very well is hourly

00:04:36,660 --> 00:04:39,810
clearfix tricks they weren't very pretty

00:04:38,490 --> 00:04:41,250
they look something like this I don't

00:04:39,810 --> 00:04:43,680
want you to read it I just want you to

00:04:41,250 --> 00:04:45,390
glance at this with a fond nostalgia it

00:04:43,680 --> 00:04:48,060
contains various hacks to target

00:04:45,390 --> 00:04:49,770
specific browsers and in each case these

00:04:48,060 --> 00:04:52,200
hacks are trying to achieve just one

00:04:49,770 --> 00:04:53,730
thing and that is to trigger an internal

00:04:52,200 --> 00:04:55,800
browser rendering property known as

00:04:53,730 --> 00:05:00,000
block formatting context so you might

00:04:55,800 --> 00:05:02,000
remember as layout in IE if you don't

00:05:00,000 --> 00:05:05,250
know what block formatting context is

00:05:02,000 --> 00:05:06,870
simply put it's the devil's magic it's

00:05:05,250 --> 00:05:09,420
an internal property that we can only

00:05:06,870 --> 00:05:11,630
trigger indirectly and it's what all of

00:05:09,420 --> 00:05:14,670
those hacks were trying to achieve

00:05:11,630 --> 00:05:16,950
clearfix is a side effect pretty soon

00:05:14,670 --> 00:05:18,660
browsers lifted their game and we didn't

00:05:16,950 --> 00:05:20,690
need all of those ugly hacks like I call

00:05:18,660 --> 00:05:23,160
this one a transitional stage clearfix

00:05:20,690 --> 00:05:26,190
it's not quite as uglier I'm not quite

00:05:23,160 --> 00:05:27,840
as scary in 2011 Nicholas Gallagher

00:05:26,190 --> 00:05:30,570
improved on this again and we have the

00:05:27,840 --> 00:05:32,580
micro clearfix now if you're using a

00:05:30,570 --> 00:05:36,360
clearfix today it should look something

00:05:32,580 --> 00:05:38,460
like this and an interesting point to

00:05:36,360 --> 00:05:40,320
make about this example is like the

00:05:38,460 --> 00:05:41,640
earlier one we're inserting an empty

00:05:40,320 --> 00:05:44,190
element at the bottom of a container

00:05:41,640 --> 00:05:45,570
with the property clear both the only

00:05:44,190 --> 00:05:48,630
difference is that this time it's a

00:05:45,570 --> 00:05:50,400
pseudo element and I think it can be

00:05:48,630 --> 00:05:51,540
valuable to reflect on the life and

00:05:50,400 --> 00:05:53,640
evolution of techniques that we use

00:05:51,540 --> 00:05:55,350
because sometimes like this they point

00:05:53,640 --> 00:05:58,080
us to the future all right so a quick

00:05:55,350 --> 00:06:01,770
show of hands who hears use the clear

00:05:58,080 --> 00:06:03,780
fix in the last year nearly all of you

00:06:01,770 --> 00:06:05,490
those of you that put your hands up

00:06:03,780 --> 00:06:07,470
who's used it in the context of a dot

00:06:05,490 --> 00:06:10,320
clearfix utility class or something

00:06:07,470 --> 00:06:12,060
similar I'm very pleased to say a lesser

00:06:10,320 --> 00:06:13,800
number but I'm sure it's something that

00:06:12,060 --> 00:06:15,810
we've all done at least once at some

00:06:13,800 --> 00:06:17,790
point and it's something that I'm guilty

00:06:15,810 --> 00:06:19,500
off too and I'll be willing to bet you

00:06:17,790 --> 00:06:21,180
my left hand and this is my left hand if

00:06:19,500 --> 00:06:23,610
anyone wants to know what they're going

00:06:21,180 --> 00:06:24,990
to get into I bet that this is going to

00:06:23,610 --> 00:06:28,140
be one technique that we say goodbye to

00:06:24,990 --> 00:06:29,670
once and for all this year now the

00:06:28,140 --> 00:06:31,290
reasons I think that firstly is there's

00:06:29,670 --> 00:06:33,780
better technique layout techniques that

00:06:31,290 --> 00:06:35,700
don't need clear fix at all but more

00:06:33,780 --> 00:06:37,229
importantly than that pre processes such

00:06:35,700 --> 00:06:41,070
as less since ass and I guess I should

00:06:37,229 --> 00:06:42,420
include post CSS now as well in terms of

00:06:41,070 --> 00:06:45,300
a dot utility class layoff

00:06:42,420 --> 00:06:46,860
us tools to get rid of this previously

00:06:45,300 --> 00:06:49,140
it might have been easier to write the

00:06:46,860 --> 00:06:50,670
clear fix once in your CSS and then

00:06:49,140 --> 00:06:52,680
apply the class anywhere in the markup

00:06:50,670 --> 00:06:53,940
that you needed to use it this was

00:06:52,680 --> 00:06:55,680
obviously faster than writing it in

00:06:53,940 --> 00:06:57,030
every component when needed but

00:06:55,680 --> 00:06:59,640
obviously mix-ins give us an opportunity

00:06:57,030 --> 00:07:00,990
to do this now and this is something

00:06:59,640 --> 00:07:02,730
that I had difficulty letting go of

00:07:00,990 --> 00:07:05,070
again I don't know if you can read that

00:07:02,730 --> 00:07:06,630
up the back but it kept me up at night

00:07:05,070 --> 00:07:10,470
wondering whether I should use a mix in

00:07:06,630 --> 00:07:12,660
or a utility class and I'll always have

00:07:10,470 --> 00:07:14,610
fond memories of this I used to call

00:07:12,660 --> 00:07:16,410
this the clearfix shotgun approach if

00:07:14,610 --> 00:07:18,330
you don't know how to solve a layup

00:07:16,410 --> 00:07:20,220
problem simply clear fix all the things

00:07:18,330 --> 00:07:21,480
and it was always a nice surprise to

00:07:20,220 --> 00:07:23,100
come in in the morning and find that

00:07:21,480 --> 00:07:24,780
someone had committed this usually

00:07:23,100 --> 00:07:29,360
happened in large teams with multiple

00:07:24,780 --> 00:07:31,290
developers and it wasn't until

00:07:29,360 --> 00:07:32,970
preprocessors Gators place holders that

00:07:31,290 --> 00:07:34,530
we were able to forcefully put an end to

00:07:32,970 --> 00:07:36,300
this now placeholders differ from

00:07:34,530 --> 00:07:38,250
regular mix-ins and they're not written

00:07:36,300 --> 00:07:41,790
to the final stop final style sheet

00:07:38,250 --> 00:07:43,280
except where they are used in general I

00:07:41,790 --> 00:07:46,020
think that modern tools like

00:07:43,280 --> 00:07:47,490
preprocessors a good things to lean on

00:07:46,020 --> 00:07:50,550
in times of hurt they'll help you move

00:07:47,490 --> 00:07:51,930
on and I think you should do that so

00:07:50,550 --> 00:07:56,190
when I first gave this talk to test this

00:07:51,930 --> 00:07:57,750
theory I did a little research I went

00:07:56,190 --> 00:07:59,220
and visited the blogs and websites of

00:07:57,750 --> 00:08:00,630
all the speakers and organizers at the

00:07:59,220 --> 00:08:03,210
conference because you know that's a

00:08:00,630 --> 00:08:04,830
great way to make friends but luckily

00:08:03,210 --> 00:08:07,020
when I was conducting that test I found

00:08:04,830 --> 00:08:09,030
that despite of being very

00:08:07,020 --> 00:08:11,100
non-scientific I confirmed that the

00:08:09,030 --> 00:08:13,050
clear fixed utility class was indeed out

00:08:11,100 --> 00:08:15,720
of favor and of about 50 websites i

00:08:13,050 --> 00:08:17,790
visited only around five had it and I

00:08:15,720 --> 00:08:22,230
might have had a hand in one of those as

00:08:17,790 --> 00:08:23,790
well so I hope I've convinced you that

00:08:22,230 --> 00:08:26,370
you probably don't need a clearfix

00:08:23,790 --> 00:08:30,170
utility class but do we need a clear fix

00:08:26,370 --> 00:08:32,340
at all and the answer to that is depends

00:08:30,170 --> 00:08:34,950
in a lot of situations as better

00:08:32,340 --> 00:08:36,270
techniques that we can use now and I

00:08:34,950 --> 00:08:41,610
think it's time that maybe we took a

00:08:36,270 --> 00:08:43,470
look at some of those examples so this

00:08:41,610 --> 00:08:45,450
is the media object you're probably all

00:08:43,470 --> 00:08:46,770
seen this it was popularized by Nicole

00:08:45,450 --> 00:08:49,170
Sullivan it's the poster child of

00:08:46,770 --> 00:08:50,850
object-oriented CSS it's been a pretty

00:08:49,170 --> 00:08:53,370
solid go to pattern for a number of

00:08:50,850 --> 00:08:56,290
years and traditionally it has an image

00:08:53,370 --> 00:08:59,529
heading and some text to one side

00:08:56,290 --> 00:09:01,570
but apart from the container needing a

00:08:59,529 --> 00:09:03,490
cliff Ock's you also need a block

00:09:01,570 --> 00:09:05,829
formatting context on the content or a

00:09:03,490 --> 00:09:07,389
left margin equal to the width of the

00:09:05,829 --> 00:09:10,480
image to prevent the text from wrapping

00:09:07,389 --> 00:09:12,279
underneath so I'd often see a lot of

00:09:10,480 --> 00:09:15,759
examples like this when browsing the

00:09:12,279 --> 00:09:18,730
interweb and I'm wondering how might we

00:09:15,759 --> 00:09:21,839
rethink this well-known example to get

00:09:18,730 --> 00:09:26,290
rid of this reliance on magic numbers

00:09:21,839 --> 00:09:28,959
and I found a solution by someone called

00:09:26,290 --> 00:09:30,639
Harry Roberts now I have no idea who he

00:09:28,959 --> 00:09:32,769
is but his solution looks pretty good

00:09:30,639 --> 00:09:35,350
you wrote about something he calls the

00:09:32,769 --> 00:09:38,920
flag object and it's not just a poorly

00:09:35,350 --> 00:09:40,750
disguised rebranding of the meat no it

00:09:38,920 --> 00:09:42,790
is just a poorly disguised rebranding

00:09:40,750 --> 00:09:44,170
and remedial object let's be honest but

00:09:42,790 --> 00:09:47,079
it adds to it with some additional

00:09:44,170 --> 00:09:48,459
options and versatility it's supported

00:09:47,079 --> 00:09:52,240
as far back as I ate so if you're

00:09:48,459 --> 00:09:54,370
supporting legacy it's an option but as

00:09:52,240 --> 00:09:55,720
well as that you can vertically Center

00:09:54,370 --> 00:09:57,550
the image or align it to the bottom and

00:09:55,720 --> 00:09:58,839
because the image extends to the full

00:09:57,550 --> 00:10:00,459
width of the container you can have

00:09:58,839 --> 00:10:03,160
different background colors and sorry

00:10:00,459 --> 00:10:04,480
for my terrible color choice that I'm a

00:10:03,160 --> 00:10:07,329
much better design of these days and

00:10:04,480 --> 00:10:08,860
when I develop that one but anyway it

00:10:07,329 --> 00:10:10,029
makes this a display table and

00:10:08,860 --> 00:10:13,000
personally I feel that that's something

00:10:10,029 --> 00:10:15,850
that is criminally overlooked I wouldn't

00:10:13,000 --> 00:10:17,680
use it for out lining out laying out a

00:10:15,850 --> 00:10:19,990
whole page but used in moderation in

00:10:17,680 --> 00:10:21,519
components I don't see really what the

00:10:19,990 --> 00:10:24,940
problem is I think we just sometimes

00:10:21,519 --> 00:10:26,829
cringe at the word table but if you're

00:10:24,940 --> 00:10:28,930
ready there is a more robust solution

00:10:26,829 --> 00:10:31,569
that uses flexbox and this one's by

00:10:28,930 --> 00:10:33,399
philip bolton so like the flag object

00:10:31,569 --> 00:10:36,069
this implementation gives us control

00:10:33,399 --> 00:10:37,000
over the positioning of the image but as

00:10:36,069 --> 00:10:38,500
well as this we get something called

00:10:37,000 --> 00:10:39,550
source order control this means that we

00:10:38,500 --> 00:10:42,790
can move it to the left or the right

00:10:39,550 --> 00:10:44,500
without changing any other HTML and all

00:10:42,790 --> 00:10:46,120
of those alignment options are inherent

00:10:44,500 --> 00:10:48,189
in flexbox and this is really good this

00:10:46,120 --> 00:10:52,329
means that we're not relying on hacks

00:10:48,189 --> 00:10:54,189
and things to make them work so I'm not

00:10:52,329 --> 00:10:55,720
going to give full detail of all those

00:10:54,189 --> 00:10:57,279
different techniques but suffice to say

00:10:55,720 --> 00:10:58,810
that flexbox gives us greater control

00:10:57,279 --> 00:11:01,029
over layout and any other techniques

00:10:58,810 --> 00:11:04,269
that we commonly use and as I said

00:11:01,029 --> 00:11:06,399
they're built in so if you haven't seen

00:11:04,269 --> 00:11:07,730
Phil what insight sold by flexbox I

00:11:06,399 --> 00:11:09,500
strongly recommend that you

00:11:07,730 --> 00:11:12,920
look after this it contains that and

00:11:09,500 --> 00:11:15,079
many other patterns but for now let's

00:11:12,920 --> 00:11:18,920
just take a quick moment silence to say

00:11:15,079 --> 00:11:20,300
farewell declare fix we've loved you and

00:11:18,920 --> 00:11:22,459
you were there for us when things were

00:11:20,300 --> 00:11:25,519
tough you will always have a place in

00:11:22,459 --> 00:11:28,760
our hearts but sadly we no longer need

00:11:25,519 --> 00:11:30,889
you like we once did you may be destined

00:11:28,760 --> 00:11:40,010
to fade into obscurity but you will not

00:11:30,889 --> 00:11:41,300
be forgotten Thank You clearfix but

00:11:40,010 --> 00:11:43,760
let's not dwell on our sorrow for

00:11:41,300 --> 00:11:45,139
clearfix too long because there's other

00:11:43,760 --> 00:11:49,730
patterns that we need to say goodbye to

00:11:45,139 --> 00:11:52,730
and one of those is negative margins now

00:11:49,730 --> 00:11:54,320
despite their images are hack negative

00:11:52,730 --> 00:11:56,149
margins are well described by the CSS

00:11:54,320 --> 00:11:58,459
specification and in many cases we use

00:11:56,149 --> 00:12:00,170
them exactly as was intended now I'm not

00:11:58,459 --> 00:12:01,730
firing at negative margins in general

00:12:00,170 --> 00:12:04,339
but I do think that they tend to be a

00:12:01,730 --> 00:12:06,649
symptom of poor choices in our CSS and

00:12:04,339 --> 00:12:08,269
with more layout options available i'm

00:12:06,649 --> 00:12:11,089
finding fewer situations where i

00:12:08,269 --> 00:12:13,160
actually need them so one practical

00:12:11,089 --> 00:12:16,040
example of this and a pattern that we've

00:12:13,160 --> 00:12:17,510
seen many times one that's probably

00:12:16,040 --> 00:12:22,329
familiar to you if not quite as

00:12:17,510 --> 00:12:24,560
comfortable is modal's or more generally

00:12:22,329 --> 00:12:27,740
positioning anything in the center of

00:12:24,560 --> 00:12:29,420
the screen it might be a log unbox a

00:12:27,740 --> 00:12:31,069
message a dialogue or you might be

00:12:29,420 --> 00:12:34,579
asking me to share your article on

00:12:31,069 --> 00:12:35,990
facebook before I've even read it and of

00:12:34,579 --> 00:12:38,269
course if that's what you're doing you

00:12:35,990 --> 00:12:40,339
can stop but there are legitimate

00:12:38,269 --> 00:12:42,680
reasons for needing a pattern like this

00:12:40,339 --> 00:12:44,839
and whilst it might not be as close to

00:12:42,680 --> 00:12:46,310
our hearts as clearfix I think maybe we

00:12:44,839 --> 00:12:49,180
could quickly take a look at the life

00:12:46,310 --> 00:12:51,350
and evolution of this pattern so

00:12:49,180 --> 00:12:53,660
historically we might have used an alert

00:12:51,350 --> 00:12:56,120
or a confirm dialog but the problem with

00:12:53,660 --> 00:12:57,589
these is they were ugly obnoxious and we

00:12:56,120 --> 00:13:00,230
couldn't change a thing about how they

00:12:57,589 --> 00:13:02,449
looked so with those limited object

00:13:00,230 --> 00:13:04,839
options understandably we all just

00:13:02,449 --> 00:13:08,139
avoided them in favor of custom options

00:13:04,839 --> 00:13:08,139
so oh

00:13:09,210 --> 00:13:20,170
sorry about this guy's yeah so let's

00:13:15,490 --> 00:13:24,279
just do this all right right I've lost

00:13:20,170 --> 00:13:27,940
my speaker notes now okay um right so

00:13:24,279 --> 00:13:29,620
yeah get mote modals what we would do is

00:13:27,940 --> 00:13:31,390
we give it an absolute position in a top

00:13:29,620 --> 00:13:33,190
to top and left value of fifty percent

00:13:31,390 --> 00:13:34,660
that would move the top left corner into

00:13:33,190 --> 00:13:36,010
the center of screen and then move the

00:13:34,660 --> 00:13:37,420
center of the element into the center of

00:13:36,010 --> 00:13:39,250
the screen we gave it a negative left

00:13:37,420 --> 00:13:40,960
margin equal to half its width and a

00:13:39,250 --> 00:13:43,390
negative top margin equal to half its

00:13:40,960 --> 00:13:45,339
height so you've all probably seen this

00:13:43,390 --> 00:13:48,310
who here has used this technique before

00:13:45,339 --> 00:13:51,550
is anyone still commonly using this

00:13:48,310 --> 00:13:55,540
technique maybe one hand that's really

00:13:51,550 --> 00:13:58,170
good I still find sometimes that I reach

00:13:55,540 --> 00:14:00,190
for this just out of habit or comfort

00:13:58,170 --> 00:14:02,529
but the problem I have with this

00:14:00,190 --> 00:14:04,630
technique is that the width height and

00:14:02,529 --> 00:14:06,100
margins are all magic numbers and I also

00:14:04,630 --> 00:14:07,960
find that with responsive design I'm

00:14:06,100 --> 00:14:10,060
doing multiple versions of it for

00:14:07,960 --> 00:14:12,370
different screen sizes and maybe an

00:14:10,060 --> 00:14:13,570
inline version for mobile but as well as

00:14:12,370 --> 00:14:15,040
this there might be situations where I

00:14:13,570 --> 00:14:16,839
don't know the size of the thing that I

00:14:15,040 --> 00:14:19,900
need to Center or where that should be a

00:14:16,839 --> 00:14:21,460
percentage and so this once robust

00:14:19,900 --> 00:14:24,400
techniques no longer meeting all of my

00:14:21,460 --> 00:14:26,380
needs now to address that unknown size

00:14:24,400 --> 00:14:28,480
thing one of my first inclination was to

00:14:26,380 --> 00:14:31,240
try and solve this problem using our

00:14:28,480 --> 00:14:32,800
percentage for negative margins and of

00:14:31,240 --> 00:14:35,530
course that's a problem I only made like

00:14:32,800 --> 00:14:37,720
a thousand times as LSCs and developer

00:14:35,530 --> 00:14:40,030
and it's a simple mistake that you've

00:14:37,720 --> 00:14:41,650
possibly all made but percentages for

00:14:40,030 --> 00:14:43,480
netware negative margins are concerned a

00:14:41,650 --> 00:14:46,420
relative to the parent container not to

00:14:43,480 --> 00:14:49,870
the element itself so that's not really

00:14:46,420 --> 00:14:52,510
that intuitive but luckily this is how

00:14:49,870 --> 00:14:54,790
CSS transforms work unlike negative

00:14:52,510 --> 00:14:56,380
margins when using translate to position

00:14:54,790 --> 00:14:57,970
an element you can say move it move it

00:14:56,380 --> 00:14:59,459
fifty percent of its own width or fifty

00:14:57,970 --> 00:15:02,620
percent of its own height any direction

00:14:59,459 --> 00:15:07,230
so it's a lot more robust and intuitive

00:15:02,620 --> 00:15:08,790
and no more magic numbers but

00:15:07,230 --> 00:15:10,680
like I said you probably you've probably

00:15:08,790 --> 00:15:12,570
also in that technique as well but this

00:15:10,680 --> 00:15:15,000
too might be a transitional stage

00:15:12,570 --> 00:15:16,950
solution I think that this pattern may

00:15:15,000 --> 00:15:20,160
also be on the verge of making another

00:15:16,950 --> 00:15:23,970
evolutionary step and what I'm talking

00:15:20,160 --> 00:15:26,550
about is the dialogue element now this

00:15:23,970 --> 00:15:28,170
is relatively new I think it's in chrome

00:15:26,550 --> 00:15:31,350
and opera but it may have recently

00:15:28,170 --> 00:15:32,880
landed in Firefox I'm not too sure there

00:15:31,350 --> 00:15:34,110
are some polyfills however that you can

00:15:32,880 --> 00:15:36,330
use today and they're as good as any

00:15:34,110 --> 00:15:39,120
custom solutions that we use so I think

00:15:36,330 --> 00:15:41,490
you can start using this and the

00:15:39,120 --> 00:15:43,320
dialogue element doesn't require any CSS

00:15:41,490 --> 00:15:45,150
for positioning I don't know if you can

00:15:43,320 --> 00:15:48,120
read it there but it's only got a width

00:15:45,150 --> 00:15:50,390
in that example you can override the

00:15:48,120 --> 00:15:52,920
default positioning of course with CSS

00:15:50,390 --> 00:15:54,630
but as well as that we get native

00:15:52,920 --> 00:15:56,550
JavaScript methods for interacting with

00:15:54,630 --> 00:15:58,050
it no not no more toggling classes or

00:15:56,550 --> 00:15:59,970
anything like that and we get this

00:15:58,050 --> 00:16:02,070
backdrop pseudo element which makes it

00:15:59,970 --> 00:16:03,570
pretty easy to add a background overlay

00:16:02,070 --> 00:16:06,360
which you probably know is very hard in

00:16:03,570 --> 00:16:10,470
CSS and so here I'll just quickly set it

00:16:06,360 --> 00:16:11,910
to a beautiful shade of pink so there

00:16:10,470 --> 00:16:17,160
you go that would have been like many

00:16:11,910 --> 00:16:19,170
lines of CSS prior so again in a circle

00:16:17,160 --> 00:16:20,700
of life kind of way I feel like this

00:16:19,170 --> 00:16:22,710
pattern has come back to its origins

00:16:20,700 --> 00:16:25,110
we've gained full control over the

00:16:22,710 --> 00:16:26,820
presentation with CSS but just like the

00:16:25,110 --> 00:16:29,640
alert and confirm dialogues we're back

00:16:26,820 --> 00:16:31,740
to a native sorry a semantic

00:16:29,640 --> 00:16:33,180
representation of a dialogue with native

00:16:31,740 --> 00:16:35,280
JavaScript methods for interacting with

00:16:33,180 --> 00:16:36,810
it and this is how it often goes we we

00:16:35,280 --> 00:16:38,520
have a problem that doesn't quite meet

00:16:36,810 --> 00:16:40,290
our needs and we bend it and we break it

00:16:38,520 --> 00:16:42,090
sometimes hacks are born things like

00:16:40,290 --> 00:16:47,940
clearfix but occasionally a new element

00:16:42,090 --> 00:16:50,490
like the dialogue is born so goodbye

00:16:47,940 --> 00:16:52,530
negative margins our relationship was

00:16:50,490 --> 00:16:54,840
one of necessity that you made so many

00:16:52,530 --> 00:16:57,060
things possible and whilst this might be

00:16:54,840 --> 00:16:58,560
goodbye it could however be a chance to

00:16:57,060 --> 00:17:01,110
reacquaint ourselves with some patterns

00:16:58,560 --> 00:17:03,710
and thanks to your hacky ways we may

00:17:01,110 --> 00:17:03,710
have lost our spark

00:17:04,750 --> 00:17:09,699
now the final farewell I want to mention

00:17:08,020 --> 00:17:11,170
today is the shake-up that viewport

00:17:09,699 --> 00:17:14,140
units are going to give some of our

00:17:11,170 --> 00:17:16,140
topography and lay out best practices so

00:17:14,140 --> 00:17:19,360
viewport units have been around since

00:17:16,140 --> 00:17:22,470
2012 in fact I II was an early mover and

00:17:19,360 --> 00:17:24,760
they're supported as far back as I e9

00:17:22,470 --> 00:17:26,680
viewport units are really easy to

00:17:24,760 --> 00:17:29,080
understand it's basically one percent of

00:17:26,680 --> 00:17:31,420
the viewport so there's four types of

00:17:29,080 --> 00:17:33,100
view port units you put our VW which is

00:17:31,420 --> 00:17:35,320
viewport with the H which is the

00:17:33,100 --> 00:17:37,150
viewport height the min which is the

00:17:35,320 --> 00:17:38,530
width or height whichever is smaller and

00:17:37,150 --> 00:17:40,030
vmax which is the width or height

00:17:38,530 --> 00:17:42,340
whichever is large so that's pretty

00:17:40,030 --> 00:17:44,170
intuitive so I think that the reason

00:17:42,340 --> 00:17:45,970
viewport units are not used more often

00:17:44,170 --> 00:17:48,370
isn't due to a lack of developers

00:17:45,970 --> 00:17:50,890
understanding or browsers support but

00:17:48,370 --> 00:17:52,540
rather more down to the lack of control

00:17:50,890 --> 00:17:54,660
that designers have and maybe

00:17:52,540 --> 00:17:57,850
specifically over things like font size

00:17:54,660 --> 00:17:59,620
so you might have thought that we said

00:17:57,850 --> 00:18:01,630
goodbye to pixel basis font sizes in the

00:17:59,620 --> 00:18:04,720
late 2000s and we largely did we favored

00:18:01,630 --> 00:18:06,280
EMS and percentages because pixels don't

00:18:04,720 --> 00:18:07,870
change according to user preferences and

00:18:06,280 --> 00:18:11,860
this is bad for accessibility if not

00:18:07,870 --> 00:18:14,320
just rude but pixel-based apocrypha

00:18:11,860 --> 00:18:15,520
wasn't quite dead I was just lurking in

00:18:14,320 --> 00:18:17,800
the shadows and waiting for the days

00:18:15,520 --> 00:18:20,050
when browsers often zoom to enlarge text

00:18:17,800 --> 00:18:22,210
and with this some developers decided

00:18:20,050 --> 00:18:24,100
that the accessibility concerns of pixel

00:18:22,210 --> 00:18:26,800
based fonts we're no longer as much of

00:18:24,100 --> 00:18:28,810
an issue that debate still rages but the

00:18:26,800 --> 00:18:30,850
truth is whether you're using EMS our

00:18:28,810 --> 00:18:32,830
EMS or percentages these are all just

00:18:30,850 --> 00:18:35,230
abstractions of a base font size and we

00:18:32,830 --> 00:18:36,640
usually know that to be 16 pixels so

00:18:35,230 --> 00:18:40,420
we've never really had to give up

00:18:36,640 --> 00:18:43,300
complete control but viewport units are

00:18:40,420 --> 00:18:45,360
different they represent an evolutionary

00:18:43,300 --> 00:18:48,160
leap a fundamental change in approach

00:18:45,360 --> 00:18:50,650
for the first time we have true

00:18:48,160 --> 00:18:52,300
responsive topography viewport units are

00:18:50,650 --> 00:18:54,100
not relative to the base font size in

00:18:52,300 --> 00:18:57,430
any way and I think that's what scares

00:18:54,100 --> 00:18:59,260
some people this means goodbye too

00:18:57,430 --> 00:19:01,030
clunky responsive type techniques like

00:18:59,260 --> 00:19:02,740
this and the problem with examples like

00:19:01,030 --> 00:19:04,600
this is that they're jumpy they require

00:19:02,740 --> 00:19:06,220
multiple media queries and they don't

00:19:04,600 --> 00:19:07,720
necessarily resize in proportion to

00:19:06,220 --> 00:19:08,800
other elements on our page this means

00:19:07,720 --> 00:19:10,870
that they can jump out of containers

00:19:08,800 --> 00:19:12,700
trigger overflow cause all kinds of mess

00:19:10,870 --> 00:19:15,130
it's like feeding a gremlin after

00:19:12,700 --> 00:19:16,660
midnight and honestly I don't know why

00:19:15,130 --> 00:19:18,550
we persisted with this method of

00:19:16,660 --> 00:19:19,960
responsive to fog raphy for so long

00:19:18,550 --> 00:19:22,240
avoiding some of these problems and we

00:19:19,960 --> 00:19:24,010
can limit the scaling by only applying

00:19:22,240 --> 00:19:26,470
you put units above a certain screen

00:19:24,010 --> 00:19:28,030
size we could also use calc in this

00:19:26,470 --> 00:19:30,100
example says set the font size at a

00:19:28,030 --> 00:19:31,120
viewport width of zero to exactly 16

00:19:30,100 --> 00:19:33,340
pixels so that's a little bit more

00:19:31,120 --> 00:19:37,810
precise and then scale at a rate of

00:19:33,340 --> 00:19:39,730
three viewport wits from there so yeah

00:19:37,810 --> 00:19:43,480
there's still limitations for there's

00:19:39,730 --> 00:19:44,920
ways to hack around them again but when

00:19:43,480 --> 00:19:46,270
I was preparing this talk initially I

00:19:44,920 --> 00:19:48,490
was thinking about some of those

00:19:46,270 --> 00:19:50,800
limitations and whilst we can limit

00:19:48,490 --> 00:19:52,900
scaling with media queries and calc we

00:19:50,800 --> 00:19:55,870
still don't have full control so we're

00:19:52,900 --> 00:19:57,880
essentially not over multiple viewport

00:19:55,870 --> 00:19:59,590
wits anyway we're limited to whatever

00:19:57,880 --> 00:20:01,540
three viewport wits was in the previous

00:19:59,590 --> 00:20:03,280
example at any screen size without

00:20:01,540 --> 00:20:05,650
another media query or a change in the

00:20:03,280 --> 00:20:09,100
font size we can't change it to for

00:20:05,650 --> 00:20:11,110
example to 32 pixels at an 800 pixel

00:20:09,100 --> 00:20:12,430
resolution like every eulogy you've ever

00:20:11,110 --> 00:20:14,650
been to this one ends with a closing

00:20:12,430 --> 00:20:16,210
rant now that we've had a detailed look

00:20:14,650 --> 00:20:17,920
at the life and evolution of a few

00:20:16,210 --> 00:20:19,450
patterns as well as some of the hacks

00:20:17,920 --> 00:20:22,150
we've used to get around those

00:20:19,450 --> 00:20:24,430
limitations I hope you realized a

00:20:22,150 --> 00:20:25,690
familiar theme our hacks are usually

00:20:24,430 --> 00:20:28,030
just clever workarounds for the

00:20:25,690 --> 00:20:30,460
limitations of CSS and in most cases

00:20:28,030 --> 00:20:33,010
those limitations relate to layout and

00:20:30,460 --> 00:20:34,570
that's because CSS was not designed for

00:20:33,010 --> 00:20:36,550
solving layout problems it was designed

00:20:34,570 --> 00:20:38,080
for adding simple styles to HTML

00:20:36,550 --> 00:20:40,600
documents in fact not even necessarily

00:20:38,080 --> 00:20:46,080
HTML documents XML was still a viable

00:20:40,600 --> 00:20:46,080

YouTube URL: https://www.youtube.com/watch?v=Uzvt-EmHi6Q


