Title: Lessons from Infosec Incidents - Dot Net South West - December 2017
Publication date: 2018-01-31
Playlist: Dot Net South West
Description: 
	Securing a web application is a challenge. The internet is awash with malicious traffic and web applications are globally accessible. Don’t make it easy for them and the baddies will move on and find someone else to annoy.

We’ll look at the risks facing web applications, the basic steps you can take so that you don’t make yourself a target and the things you should do to avoid becoming a data breach statistic. We’ll also look at lessons that can be learnt from mistakes that others have made.

We’ll demo some of the techniques and tools in both attack and defence with examples for any web application developer.

About Robin Minto: Robin is a developer/technical architect working for ByBox, a supply chain technology company in the UK. Find him on Twitter @robinem

About .NET South West: https://www.meetup.com/dotnetsouthwest/
Captions: 
	00:00:00,000 --> 00:00:03,780
yeah good evening everybody and so I'm

00:00:01,709 --> 00:00:07,649
going to talk to you about lessons from

00:00:03,780 --> 00:00:10,019
InfoSec incidence tonight so what can we

00:00:07,649 --> 00:00:11,610
learn from a variety of things that

00:00:10,019 --> 00:00:13,950
happens or other companies so they don't

00:00:11,610 --> 00:00:16,740
happen to us and I was looking for a

00:00:13,950 --> 00:00:19,650
picture it's it kind of illustrate fail

00:00:16,740 --> 00:00:21,390
and I found this and I think it's not

00:00:19,650 --> 00:00:24,029
InfoSec but it's a good example of a

00:00:21,390 --> 00:00:27,240
security problem so you know a great big

00:00:24,029 --> 00:00:38,730
gate there metal spikes on the top

00:00:27,240 --> 00:00:44,399
that's all brilliant but all it takes is

00:00:38,730 --> 00:00:46,680
to know the right secret and you defeat

00:00:44,399 --> 00:00:49,770
the security so we don't to be in a

00:00:46,680 --> 00:00:51,780
position like that really so hopefully

00:00:49,770 --> 00:00:55,770
we can learn something from some of

00:00:51,780 --> 00:00:58,949
these things so Who am I well my name is

00:00:55,770 --> 00:01:01,230
Robin Minh so I am Technical Architect

00:00:58,949 --> 00:01:03,570
software developer I work for a company

00:01:01,230 --> 00:01:06,240
called buy box we're a logistics supply

00:01:03,570 --> 00:01:10,500
chain management company technology

00:01:06,240 --> 00:01:13,080
based we work globally but were based in

00:01:10,500 --> 00:01:16,590
the UK I've got a distributed team of

00:01:13,080 --> 00:01:18,000
software developers which I'm one always

00:01:16,590 --> 00:01:23,549
looking for new people of course as is

00:01:18,000 --> 00:01:27,180
everybody nowadays I've had an interest

00:01:23,549 --> 00:01:30,270
in security probably almost as long as

00:01:27,180 --> 00:01:32,189
I've had an interest in in computing so

00:01:30,270 --> 00:01:35,549
I don't know if anybody who recognizes

00:01:32,189 --> 00:01:38,880
what these are but these are BBC be

00:01:35,549 --> 00:01:44,430
micro computers and we had a lab very

00:01:38,880 --> 00:01:47,430
similar to this in school and me and a

00:01:44,430 --> 00:01:50,460
friend would sit down and in those days

00:01:47,430 --> 00:01:51,750
you'd you'd get a magazine to get your

00:01:50,460 --> 00:01:53,549
source code you can get it off the

00:01:51,750 --> 00:01:55,710
internet and one of us would be reading

00:01:53,549 --> 00:01:57,540
it and there's going to be typing trying

00:01:55,710 --> 00:01:59,939
to trying to get this software into the

00:01:57,540 --> 00:02:02,430
computer and the bits off one I

00:01:59,939 --> 00:02:05,130
remembered one bit of software we we

00:02:02,430 --> 00:02:07,110
acquired that way and built built into

00:02:05,130 --> 00:02:10,950
something bigger we used to take over

00:02:07,110 --> 00:02:13,890
the entire network every single machine

00:02:10,950 --> 00:02:16,050
was singing a song displaying some key

00:02:13,890 --> 00:02:18,000
Fix and the teacher was basically

00:02:16,050 --> 00:02:22,160
standing there not really understanding

00:02:18,000 --> 00:02:24,540
what was going on completely bewildered

00:02:22,160 --> 00:02:31,709
yeah and that mate of mine is now on the

00:02:24,540 --> 00:02:34,530
security team at Google so quick show of

00:02:31,709 --> 00:02:49,040
hands but do something slightly

00:02:34,530 --> 00:02:55,670
different can you see that

00:02:49,040 --> 00:02:58,050
if you go to that URL I'm gonna do it

00:02:55,670 --> 00:03:01,160
I'm gonna do a poll with technology

00:02:58,050 --> 00:03:01,160
rather than the show hands

00:03:05,100 --> 00:03:19,420
see if this works so HTTP etcc h / v V

00:03:17,430 --> 00:03:34,270
small V small Zed's

00:03:19,420 --> 00:03:38,670
large W you got that it's all safe for

00:03:34,270 --> 00:03:41,680
promise this is not one of the lessons

00:03:38,670 --> 00:03:43,350
no I mean this this is really just a bit

00:03:41,680 --> 00:03:45,700
of information gathering and I can

00:03:43,350 --> 00:03:47,560
almond often I'll put I'll get people to

00:03:45,700 --> 00:03:50,050
put their hands up and that's great if

00:03:47,560 --> 00:03:52,780
you look around where I am but for you

00:03:50,050 --> 00:03:54,940
guys you won't know what the score is so

00:03:52,780 --> 00:03:58,270
with this I can show the results and

00:03:54,940 --> 00:04:01,530
everyone will know so as everyone people

00:03:58,270 --> 00:04:05,260
got that okay I'll start then so

00:04:01,530 --> 00:04:12,430
question one what's your primary role

00:04:05,260 --> 00:04:20,230
you developer architect QA what oh look

00:04:12,430 --> 00:04:22,990
at that it works laughs we got out and

00:04:20,230 --> 00:04:28,480
never guess what that top answer is how

00:04:22,990 --> 00:04:31,660
we all done let's go that bingo software

00:04:28,480 --> 00:04:37,180
develop all we got some other who's

00:04:31,660 --> 00:04:39,760
another what you okay you couldn't you

00:04:37,180 --> 00:04:40,950
know K alright alright cool one more

00:04:39,760 --> 00:04:46,350
question

00:04:40,950 --> 00:04:53,920
what's your primary language now this is

00:04:46,350 --> 00:05:00,940
not that Southwest so there's input

00:04:53,920 --> 00:05:02,320
COBOL in the list so are y'all in a lot

00:05:00,940 --> 00:05:05,890
there's a late camera with something

00:05:02,320 --> 00:05:10,680
that all look at that anymore for

00:05:05,890 --> 00:05:10,680
anymore okay

00:05:14,330 --> 00:05:26,599
he's the other what you okay fair enough

00:05:24,330 --> 00:05:30,240
fair enough

00:05:26,599 --> 00:05:32,310
right okay so I will put that aside for

00:05:30,240 --> 00:05:33,569
a moment and carry on thank you very

00:05:32,310 --> 00:05:36,840
much for that that's helpful for me

00:05:33,569 --> 00:05:39,050
hopefully helpful for you let's give

00:05:36,840 --> 00:05:39,050
this

00:05:49,220 --> 00:05:56,330
right so why do we care about security

00:05:57,349 --> 00:06:02,460
lots of reasons really

00:05:59,810 --> 00:06:05,280
people people are trusting their data to

00:06:02,460 --> 00:06:08,130
us and our applications that might be

00:06:05,280 --> 00:06:11,400
our personal data that might be company

00:06:08,130 --> 00:06:13,590
later we really don't want to be in a

00:06:11,400 --> 00:06:16,880
situation where our company's in the

00:06:13,590 --> 00:06:21,389
headlines like this this is V Tech in

00:06:16,880 --> 00:06:23,610
2015 where they lost loads of personal

00:06:21,389 --> 00:06:26,940
details about lots of their customers

00:06:23,610 --> 00:06:29,940
and their customers kids and it's not a

00:06:26,940 --> 00:06:32,220
great place to be there's data

00:06:29,940 --> 00:06:35,159
protection regulations out there now

00:06:32,220 --> 00:06:37,409
they're getting much tougher next year

00:06:35,159 --> 00:06:40,490
with GD P R I don't know if you've

00:06:37,409 --> 00:06:42,300
really with that but bigger penalties

00:06:40,490 --> 00:06:45,000
people will start going to jail

00:06:42,300 --> 00:06:47,220
potentially the board would be very

00:06:45,000 --> 00:06:49,590
interested in in what's going on as well

00:06:47,220 --> 00:06:51,900
so hopefully some of that will will mean

00:06:49,590 --> 00:06:57,719
that we do improve but we need to know

00:06:51,900 --> 00:07:02,159
how to improve another reason we don't

00:06:57,719 --> 00:07:03,650
want to be losing our data I don't know

00:07:02,159 --> 00:07:07,110
if anyone's familiar with this website

00:07:03,650 --> 00:07:09,750
but you know this is a breach aggregator

00:07:07,110 --> 00:07:12,030
from Troy hunt you know you really don't

00:07:09,750 --> 00:07:16,080
want to end up on that list of people

00:07:12,030 --> 00:07:18,449
who've lost their data so how are we

00:07:16,080 --> 00:07:24,300
doing in terms of security well not

00:07:18,449 --> 00:07:28,050
brilliantly 4.8 billion records lost

00:07:24,300 --> 00:07:31,349
since 2013 now I left that slide in

00:07:28,050 --> 00:07:33,960
there that's from last year actually now

00:07:31,349 --> 00:07:36,419
it's more like 9 million and it's

00:07:33,960 --> 00:07:43,830
getting worse because the frequency is

00:07:36,419 --> 00:07:46,310
increasing as well so lesson one know

00:07:43,830 --> 00:07:46,310
your enemy

00:07:46,400 --> 00:07:51,430
this is a typical hacker everyone knows

00:07:48,919 --> 00:07:56,000
this this person always wearing a hoodie

00:07:51,430 --> 00:07:57,620
not secured in green but it's a bit more

00:07:56,000 --> 00:08:02,990
nuanced than that I think so

00:07:57,620 --> 00:08:06,340
you know it might be a script Kitty or I

00:08:02,990 --> 00:08:09,790
mean it could be a disgruntled employee

00:08:06,340 --> 00:08:13,729
activists could be organized crime

00:08:09,790 --> 00:08:18,860
industrial espionage even up to

00:08:13,729 --> 00:08:19,970
nation-state actors and I think you know

00:08:18,860 --> 00:08:23,060
you really need to think about that

00:08:19,970 --> 00:08:23,930
because I think the Sony probably didn't

00:08:23,060 --> 00:08:27,380
think that they were going to be

00:08:23,930 --> 00:08:30,199
attacked by a nation-state in the form

00:08:27,380 --> 00:08:31,910
of North Korea just for producing a

00:08:30,199 --> 00:08:36,890
movie but that's actually what happened

00:08:31,910 --> 00:08:39,349
similarly the BBC also had North Korea

00:08:36,890 --> 00:08:43,339
trying to prevent them broadcast in a

00:08:39,349 --> 00:08:44,900
documentary on North Korea so you know

00:08:43,339 --> 00:08:46,040
you can be affected at all sorts of

00:08:44,900 --> 00:08:48,830
different levels and I think it's

00:08:46,040 --> 00:08:51,200
important to think about that there's a

00:08:48,830 --> 00:08:55,100
25% risk that it might be someone inside

00:08:51,200 --> 00:08:56,839
your company that's gonna cause you some

00:08:55,100 --> 00:08:59,589
problems like this this is all

00:08:56,839 --> 00:09:02,270
statistics from the 2017 data breach

00:08:59,589 --> 00:09:03,890
investigations report from a company

00:09:02,270 --> 00:09:10,190
called Verizon in the u.s. they're big

00:09:03,890 --> 00:09:17,140
telco I mean one of the big motivators

00:09:10,190 --> 00:09:19,760
is obviously money 73% of breaches are

00:09:17,140 --> 00:09:25,130
financially motivated so another big

00:09:19,760 --> 00:09:27,020
motivator and so threat modeling is kind

00:09:25,130 --> 00:09:28,970
of the the big thing that you want to

00:09:27,020 --> 00:09:30,760
think about here I've heard a great

00:09:28,970 --> 00:09:35,209
expression which I really like which is

00:09:30,760 --> 00:09:36,950
evil user stories so you're doing your

00:09:35,209 --> 00:09:38,570
scrub and you've got user stories well

00:09:36,950 --> 00:09:41,630
actually think about it from a from an

00:09:38,570 --> 00:09:45,529
evil user perspective and I think that's

00:09:41,630 --> 00:09:48,880
really powerful so what about incidents

00:09:45,529 --> 00:09:54,440
that we can learn from well here's one

00:09:48,880 --> 00:09:58,250
William Hill taken off the internet from

00:09:54,440 --> 00:10:00,019
a DDoS attack I'll talk a bit about DDoS

00:09:58,250 --> 00:10:04,369
and what that is in a second

00:10:00,019 --> 00:10:06,589
but again this is this is this speaks to

00:10:04,369 --> 00:10:09,939
that that that portrayal of your hacker

00:10:06,589 --> 00:10:12,499
in the hoodie and often it's not just

00:10:09,939 --> 00:10:17,779
your evil criminal mastermind sometimes

00:10:12,499 --> 00:10:20,269
it's just a teenager in his bedroom this

00:10:17,779 --> 00:10:23,119
is a young guy from mr. Sherr charged

00:10:20,269 --> 00:10:25,790
with running DDoS services a teen that

00:10:23,119 --> 00:10:27,829
suspended sentence probably got a lift

00:10:25,790 --> 00:10:31,970
home from court by his mom you know that

00:10:27,829 --> 00:10:33,439
sort of thing so what is DDoS well you

00:10:31,970 --> 00:10:33,949
got your attacker in the top corner

00:10:33,439 --> 00:10:35,629
there

00:10:33,949 --> 00:10:37,730
you got your webserver in the bottom

00:10:35,629 --> 00:10:40,309
corner there

00:10:37,730 --> 00:10:44,959
the attackers got a control server and a

00:10:40,309 --> 00:10:47,149
set of zombies he sends a message to his

00:10:44,959 --> 00:10:49,249
controller that sends the message some

00:10:47,149 --> 00:10:52,279
messages to all of his zombies that

00:10:49,249 --> 00:10:54,470
floods loader requests towards your

00:10:52,279 --> 00:10:59,209
server and basically just hit takes it

00:10:54,470 --> 00:11:01,459
off the internet those zombies might be

00:10:59,209 --> 00:11:02,809
servers on the internet or pcs in

00:11:01,459 --> 00:11:08,600
people's homes or it might be even

00:11:02,809 --> 00:11:10,579
Reuters IOT devices so denial of service

00:11:08,600 --> 00:11:11,720
is used by script kiddies to knock their

00:11:10,579 --> 00:11:13,639
friends off the internet when they're

00:11:11,720 --> 00:11:15,709
playing games but it could be to take

00:11:13,639 --> 00:11:18,980
you off the internet stop you from doing

00:11:15,709 --> 00:11:21,230
business blackmail you into paying them

00:11:18,980 --> 00:11:24,860
a ransom to let you kind of continue

00:11:21,230 --> 00:11:27,170
your business I mean it could some of

00:11:24,860 --> 00:11:30,379
these guys just knock each other off the

00:11:27,170 --> 00:11:31,160
internet just because of just for shits

00:11:30,379 --> 00:11:35,389
and giggles really

00:11:31,160 --> 00:11:37,850
I hope they might just be offended an

00:11:35,389 --> 00:11:41,480
interesting technique is to use denial

00:11:37,850 --> 00:11:42,679
of service as a distraction so you take

00:11:41,480 --> 00:11:45,259
some off the internet but actually

00:11:42,679 --> 00:11:50,540
you're you're actually breaking into a

00:11:45,259 --> 00:11:52,790
system somewhere else so that's yeah a

00:11:50,540 --> 00:11:57,079
big distraction I mean you can defend

00:11:52,790 --> 00:11:58,309
against this by having a trap traffic

00:11:57,079 --> 00:12:00,889
scrubbing and proxy in front of your

00:11:58,309 --> 00:12:04,699
website so something like CloudFlare or

00:12:00,889 --> 00:12:07,519
Akamai will happily take your money to

00:12:04,699 --> 00:12:10,339
to take that bandwidth away from you and

00:12:07,519 --> 00:12:12,559
that can be incredibly effective but it

00:12:10,339 --> 00:12:13,790
could be quite expensive so I mean this

00:12:12,559 --> 00:12:16,760
is going to be the biggest

00:12:13,790 --> 00:12:18,800
deal if you're a big financial company

00:12:16,760 --> 00:12:20,750
so you know William Hill mentioned there

00:12:18,800 --> 00:12:22,370
but bookmakers are a big target for this

00:12:20,750 --> 00:12:23,630
because it's obviously there as soon as

00:12:22,370 --> 00:12:25,070
they're offered off the internet they're

00:12:23,630 --> 00:12:30,170
losing they're losing money and the

00:12:25,070 --> 00:12:35,300
criminals know that one of the other

00:12:30,170 --> 00:12:43,180
things I was going to show you is a good

00:12:35,300 --> 00:12:43,180
demonstration of attacks now this is

00:12:48,160 --> 00:12:54,730
this is a great illustration of the

00:12:51,350 --> 00:12:56,750
attacks that are going on at the moment

00:12:54,730 --> 00:13:00,230
this is from a company called North

00:12:56,750 --> 00:13:02,750
score great looking great looking map

00:13:00,230 --> 00:13:04,730
great to show to the boss not quite sure

00:13:02,750 --> 00:13:09,610
how effective it is or how real the data

00:13:04,730 --> 00:13:13,280
is but there you go looks amazing and

00:13:09,610 --> 00:13:20,900
one thing you can do on top of that you

00:13:13,280 --> 00:13:26,330
can make your own so here's the dot ness

00:13:20,900 --> 00:13:30,760
net Southwest attack map it's all

00:13:26,330 --> 00:13:30,760
completely real nothing fake about this

00:13:32,020 --> 00:13:55,400
you can even customize the sounds so

00:13:51,740 --> 00:13:57,740
they go your very own attack map and

00:13:55,400 --> 00:13:59,510
that's some github it's not mine I

00:13:57,740 --> 00:14:01,370
didn't write it I can't take credit for

00:13:59,510 --> 00:14:01,940
it but so you know it's great share that

00:14:01,370 --> 00:14:04,400
to your boss

00:14:01,940 --> 00:14:11,660
tell him you're under attack ask for

00:14:04,400 --> 00:14:14,200
some more money so the next lesson cover

00:14:11,660 --> 00:14:14,200
the basics

00:14:17,490 --> 00:14:26,050
can anyone see the problem with this I'm

00:14:22,600 --> 00:14:28,660
logged in and there's a little tick

00:14:26,050 --> 00:14:39,220
there that shows that I'm logged in and

00:14:28,660 --> 00:14:43,360
yes you're right no HTTP now yeah yeah

00:14:39,220 --> 00:14:46,120
that's helpful thanks Chrome I think

00:14:43,360 --> 00:14:48,580
that just means that yes so many

00:14:46,120 --> 00:14:51,610
passwords yeah no you're right you're

00:14:48,580 --> 00:14:52,209
right yeah and no no no padlock on the

00:14:51,610 --> 00:14:55,089
left though

00:14:52,209 --> 00:15:00,190
so no HTTPS no test codes have to fix

00:14:55,089 --> 00:15:03,910
this but before they did you could sniff

00:15:00,190 --> 00:15:05,770
the traffic off the network so if you if

00:15:03,910 --> 00:15:09,250
you've got the if you're on an open

00:15:05,770 --> 00:15:12,670
Wi-Fi hotspot for example in in in

00:15:09,250 --> 00:15:16,209
Starbucks you can you can watch the

00:15:12,670 --> 00:15:18,459
traffic go by and you can grab the

00:15:16,209 --> 00:15:20,170
cookies and then this in a specific case

00:15:18,459 --> 00:15:21,820
you could grab the cookies take the

00:15:20,170 --> 00:15:23,560
session cookies put them into your

00:15:21,820 --> 00:15:24,730
browser and suddenly you're you're

00:15:23,560 --> 00:15:28,870
effectively logged on as the other

00:15:24,730 --> 00:15:31,810
person and you might think well I don't

00:15:28,870 --> 00:15:34,120
connect to open Wi-Fi hotspots well you

00:15:31,810 --> 00:15:35,170
know I wouldn't do that but you know how

00:15:34,120 --> 00:15:36,640
do you know you're not connecting to

00:15:35,170 --> 00:15:40,959
something like a Wi-Fi pineapple which

00:15:36,640 --> 00:15:44,320
is a device for impersonating white

00:15:40,959 --> 00:15:47,230
networks that you know about so your

00:15:44,320 --> 00:15:49,240
hope if your home network or it's more

00:15:47,230 --> 00:15:50,350
likely going to be Airport Wi-Fi or

00:15:49,240 --> 00:15:52,480
something that you've connected to in

00:15:50,350 --> 00:15:56,860
the past all of that is in your phone or

00:15:52,480 --> 00:15:59,470
your laptop as soon as your phone or

00:15:56,860 --> 00:16:01,060
laptop tries to make it basically sends

00:15:59,470 --> 00:16:03,490
out a probe request saying hello why are

00:16:01,060 --> 00:16:06,399
you there Wi-Fi network this will say

00:16:03,490 --> 00:16:08,589
yes Here I am so this will basically

00:16:06,399 --> 00:16:11,250
respond as hundreds of different Wi-Fi

00:16:08,589 --> 00:16:13,270
networks and you can then basically

00:16:11,250 --> 00:16:18,339
proxy all of the traffic through that

00:16:13,270 --> 00:16:22,900
and you could potentially even strip yes

00:16:18,339 --> 00:16:24,520
a cell out of the out of the request and

00:16:22,900 --> 00:16:26,380
response so that people end up on an

00:16:24,520 --> 00:16:28,240
insecure connection anyway and that

00:16:26,380 --> 00:16:32,019
there are protections against that which

00:16:28,240 --> 00:16:33,730
we can talk about in a second but yeah

00:16:32,019 --> 00:16:35,829
you know you might be unwittingly

00:16:33,730 --> 00:16:40,300
connecting to a hot spot that you

00:16:35,829 --> 00:16:42,819
weren't expecting so I think if HTTPS as

00:16:40,300 --> 00:16:45,819
security pixie dust you know it's it's

00:16:42,819 --> 00:16:47,379
pretty simple to do it secures that

00:16:45,819 --> 00:16:49,300
traffic in transit doesn't really do

00:16:47,379 --> 00:16:52,350
much more than that but you know there's

00:16:49,300 --> 00:16:56,490
not really any excuse not to do that now

00:16:52,350 --> 00:16:56,490
so it mitigates all sorts of issues

00:16:57,899 --> 00:17:04,419
there even features in html5 that will

00:17:00,910 --> 00:17:07,089
only work over HTTP and the geolocation

00:17:04,419 --> 00:17:08,799
I think is one example so if you haven't

00:17:07,089 --> 00:17:10,600
got HD TPS you can't use some of these

00:17:08,799 --> 00:17:13,929
features so that the whole internet is

00:17:10,600 --> 00:17:16,480
moving towards that and it's not it's

00:17:13,929 --> 00:17:19,390
not expensive to do you can go to let's

00:17:16,480 --> 00:17:21,610
encrypt org and get a free certificate

00:17:19,390 --> 00:17:23,949
from them that's pretty straightforward

00:17:21,610 --> 00:17:26,199
or you could put some light cloud for it

00:17:23,949 --> 00:17:28,539
flare in front of your in front of your

00:17:26,199 --> 00:17:31,539
website and and get it that way as well

00:17:28,539 --> 00:17:33,940
they'll provide SSL certificates that

00:17:31,539 --> 00:17:36,240
keep up to date for you so there's lots

00:17:33,940 --> 00:17:39,029
of lots of things that you can do I

00:17:36,240 --> 00:17:42,580
think you need to make sure that you

00:17:39,029 --> 00:17:44,919
keep that up to date so there are tools

00:17:42,580 --> 00:17:49,299
tools like SSL labs which will validate

00:17:44,919 --> 00:17:52,539
your SSL configuration and you can get a

00:17:49,299 --> 00:17:56,340
score which is great oh good got an A

00:17:52,539 --> 00:17:59,020
that's by box thank you very much

00:17:56,340 --> 00:18:01,179
that will that you know that you can get

00:17:59,020 --> 00:18:02,860
you can get your SSL configuration wrong

00:18:01,179 --> 00:18:04,270
if you basically take the configuration

00:18:02,860 --> 00:18:06,279
of a Windows server out the box for

00:18:04,270 --> 00:18:08,320
example that's not gonna be set up as it

00:18:06,279 --> 00:18:13,240
should be so you have to pay attention

00:18:08,320 --> 00:18:16,480
to that and I mentioned the ability to

00:18:13,240 --> 00:18:17,770
strip SSL from your from your

00:18:16,480 --> 00:18:19,390
connections when you're connecting to

00:18:17,770 --> 00:18:21,159
websites you know something like this

00:18:19,390 --> 00:18:24,130
might run a bit of software that

00:18:21,159 --> 00:18:26,320
basically intercepts the traffic strips

00:18:24,130 --> 00:18:30,880
the HTTPS off your connections and puts

00:18:26,320 --> 00:18:34,740
you back to a an insecure connection you

00:18:30,880 --> 00:18:38,260
may or may not have heard of HTTP secure

00:18:34,740 --> 00:18:40,200
sorry strict Transport Security which is

00:18:38,260 --> 00:18:42,210
a which is a header that you put in your

00:18:40,200 --> 00:18:44,790
on your web server to

00:18:42,210 --> 00:18:47,430
enter the organ to your browser which

00:18:44,790 --> 00:18:51,300
says this this connection should always

00:18:47,430 --> 00:18:55,680
be over HTTPS and that's a mitigation

00:18:51,300 --> 00:18:57,570
against having the SSL connection

00:18:55,680 --> 00:19:00,480
stripped off so that's kind of something

00:18:57,570 --> 00:19:04,250
to think about as well and then there's

00:19:00,480 --> 00:19:06,210
various details about that in terms of

00:19:04,250 --> 00:19:07,470
what happens the first time you came to

00:19:06,210 --> 00:19:11,880
the website I'm not going to go into

00:19:07,470 --> 00:19:14,700
that but you know look at HTH sts HTTP

00:19:11,880 --> 00:19:17,400
secure trick Transport Security has a

00:19:14,700 --> 00:19:19,620
really great measure for making sure

00:19:17,400 --> 00:19:23,940
that you stay encrypted when you should

00:19:19,620 --> 00:19:28,830
be and in that vein I just wanted to do

00:19:23,940 --> 00:19:41,430
a nerve the poll so if you go back to

00:19:28,830 --> 00:19:43,560
your phones and I do so I'm really

00:19:41,430 --> 00:19:45,800
interested you know bunch of developers

00:19:43,560 --> 00:19:45,800
in the room

00:19:45,950 --> 00:19:52,050
it's HTTPS and then that you worry about

00:19:49,430 --> 00:19:54,620
or do you think you can you can hand it

00:19:52,050 --> 00:19:54,620
off to somebody else

00:19:59,830 --> 00:20:08,200
or 55 oh okay you're looking for flex to

00:20:06,880 --> 00:20:21,730
the front there have you got a different

00:20:08,200 --> 00:20:23,590
answer so you saying that you could

00:20:21,730 --> 00:20:32,620
could pass it off to somebody but they

00:20:23,590 --> 00:20:39,720
wouldn't do it properly okay okay

00:20:32,620 --> 00:20:39,720
interesting right good cool so okay

00:20:42,360 --> 00:20:52,540
pretty mixed thank you very much jelly I

00:20:49,330 --> 00:20:54,850
was really helpful because then as devs

00:20:52,540 --> 00:20:56,470
you know we may or may not have to deal

00:20:54,850 --> 00:20:59,670
with that sort of stuff so you know do I

00:20:56,470 --> 00:20:59,670
should I be talking about that more

00:21:03,809 --> 00:21:09,549
here's another here's another lesson I

00:21:07,510 --> 00:21:10,900
think we can okay on a minute let's get

00:21:09,549 --> 00:21:15,070
back come back to that

00:21:10,900 --> 00:21:16,270
here's another lesson so yeah it's it's

00:21:15,070 --> 00:21:17,679
not just companies that are under attack

00:21:16,270 --> 00:21:19,750
the government are under attack as well

00:21:17,679 --> 00:21:22,330
and they've they had a bit of a problem

00:21:19,750 --> 00:21:27,400
with people trying to brute force the

00:21:22,330 --> 00:21:29,170
passwords on their on their accounts in

00:21:27,400 --> 00:21:30,790
Parliament and well as he more

00:21:29,170 --> 00:21:32,590
recently it turns out that they give

00:21:30,790 --> 00:21:37,000
their passwords out pretty much to

00:21:32,590 --> 00:21:38,799
anybody anyway which I think might

00:21:37,000 --> 00:21:40,809
change given some of that publicity that

00:21:38,799 --> 00:21:43,570
they've had recently but you know there

00:21:40,809 --> 00:21:46,270
are probably nation-states trying to

00:21:43,570 --> 00:21:48,309
trying to do it remotely trying to log

00:21:46,270 --> 00:21:52,450
into their accounts so I think there's a

00:21:48,309 --> 00:22:01,870
lot we can do there you're really into

00:21:52,450 --> 00:22:04,710
computers yeah what are you doing going

00:22:01,870 --> 00:22:04,710
into the school's computer

00:22:07,710 --> 00:22:11,719
[Music]

00:22:13,530 --> 00:22:16,840
today we might ever have to put that

00:22:15,640 --> 00:22:18,429
phone into where they change the

00:22:16,840 --> 00:22:23,559
password every couple of weeks but I

00:22:18,429 --> 00:22:26,880
know where they write it down soon n

00:22:23,559 --> 00:22:30,100
days you didn't even have a username

00:22:26,880 --> 00:22:32,500
it's just half a factor not even T

00:22:30,100 --> 00:22:39,460
factor yeah so passwords are a big

00:22:32,500 --> 00:22:41,799
problem 81% of hacking related breaches

00:22:39,460 --> 00:22:45,940
were leveraging stolen or weak

00:22:41,799 --> 00:22:50,470
credentials passwords so I think there's

00:22:45,940 --> 00:22:52,809
a there's a bit of an issue there what

00:22:50,470 --> 00:22:55,240
do we do well we can help our users we

00:22:52,809 --> 00:22:58,150
need and the latest the latest advice

00:22:55,240 --> 00:23:01,660
from you know the cyber security in the

00:22:58,150 --> 00:23:04,900
UK and also in the u.s. is that we want

00:23:01,660 --> 00:23:07,390
to be much less restrictive be nice to

00:23:04,900 --> 00:23:09,880
our users use technical defenses instead

00:23:07,390 --> 00:23:12,660
of big complexity rules so no more

00:23:09,880 --> 00:23:18,070
complexity rules allow long passwords

00:23:12,660 --> 00:23:19,900
allow any characters even emojis allow

00:23:18,070 --> 00:23:21,669
people to use password managers because

00:23:19,900 --> 00:23:26,500
that's the great solution to having

00:23:21,669 --> 00:23:27,910
hundreds of passwords and you know

00:23:26,500 --> 00:23:30,010
you're trying to encourage your users to

00:23:27,910 --> 00:23:31,990
not reuse the same password everywhere

00:23:30,010 --> 00:23:34,750
because that's leading to trouble

00:23:31,990 --> 00:23:39,250
because that password is probably going

00:23:34,750 --> 00:23:41,320
to be out in the open you know train

00:23:39,250 --> 00:23:44,559
users to avoid creating passwords that

00:23:41,320 --> 00:23:47,140
are guessable that sort of thing

00:23:44,559 --> 00:23:49,809
and identify Maps just already said this

00:23:47,140 --> 00:23:51,730
but you know I think the advice that you

00:23:49,809 --> 00:23:53,260
have to change your password every month

00:23:51,730 --> 00:23:55,179
or every three months or every six

00:23:53,260 --> 00:23:57,160
months so that's now that's now going

00:23:55,179 --> 00:24:00,130
away you only change it if you know

00:23:57,160 --> 00:24:03,360
there's has been a compromise and I

00:24:00,130 --> 00:24:06,549
think one one great approach is to ban

00:24:03,360 --> 00:24:09,280
passwords that are obvious so you know

00:24:06,549 --> 00:24:11,010
that that password there it's not a

00:24:09,280 --> 00:24:13,299
great password it might have

00:24:11,010 --> 00:24:15,250
substitutions and numbers and symbols

00:24:13,299 --> 00:24:17,960
but actually it's a terrible password

00:24:15,250 --> 00:24:20,600
and I think I'll show a bit

00:24:17,960 --> 00:24:23,929
I share an example of why that's such a

00:24:20,600 --> 00:24:26,179
bad bad password I mentioned have I been

00:24:23,929 --> 00:24:30,260
poned earlier

00:24:26,179 --> 00:24:33,559
Troy hunt actually released all of the

00:24:30,260 --> 00:24:36,110
passwords that he he's collected over

00:24:33,559 --> 00:24:37,850
the many years of aggregating breaches

00:24:36,110 --> 00:24:43,960
so you know if I type in that password

00:24:37,850 --> 00:24:53,419
that I just showed you so capital P a

00:24:43,960 --> 00:24:55,279
couple of dollars w0 Rd yeah no that's

00:24:53,419 --> 00:24:58,580
that ones that ones in the list and so

00:24:55,279 --> 00:25:01,970
people will use this lists like this to

00:24:58,580 --> 00:25:03,919
brute force passwords so actually we can

00:25:01,970 --> 00:25:05,539
use the same list to prevent people from

00:25:03,919 --> 00:25:06,830
using those passwords there's no reason

00:25:05,539 --> 00:25:12,440
why any of those passwords should be

00:25:06,830 --> 00:25:17,929
used I mean by box has been blacklisting

00:25:12,440 --> 00:25:20,090
passwords in that way since 2012 and we

00:25:17,929 --> 00:25:22,250
had a list of 7,000 those top the most

00:25:20,090 --> 00:25:24,830
popular passwords so you could you can

00:25:22,250 --> 00:25:26,179
do something you could take thousand a

00:25:24,830 --> 00:25:29,149
hundred thousand you could even take

00:25:26,179 --> 00:25:31,220
that however many million that Troy hunt

00:25:29,149 --> 00:25:36,740
has published and stop people from using

00:25:31,220 --> 00:25:40,940
those passwords in your systems in a

00:25:36,740 --> 00:25:43,100
similar vein over had a bit of a problem

00:25:40,940 --> 00:25:44,960
recently where they uh played it

00:25:43,100 --> 00:25:47,779
uploaded credentials into their github

00:25:44,960 --> 00:25:50,179
repository so this was a combination of

00:25:47,779 --> 00:25:53,390
attacks so somebody needed to compromise

00:25:50,179 --> 00:25:55,700
their their developers presumably to get

00:25:53,390 --> 00:25:57,409
into their github repository so that was

00:25:55,700 --> 00:25:58,940
probably password reuse one of their

00:25:57,409 --> 00:26:00,580
developers using a password which had

00:25:58,940 --> 00:26:02,480
been compromised somewhere else

00:26:00,580 --> 00:26:06,169
attackers get into their github

00:26:02,480 --> 00:26:08,000
repository and then they've got Amazon

00:26:06,169 --> 00:26:11,659
credentials or something similar in

00:26:08,000 --> 00:26:15,980
their github so it might be a private

00:26:11,659 --> 00:26:17,929
github but don't put don't put secure

00:26:15,980 --> 00:26:19,610
information into it because you never

00:26:17,929 --> 00:26:22,460
know when it might not be private

00:26:19,610 --> 00:26:23,929
anymore you might you might make it

00:26:22,460 --> 00:26:25,370
public by accident or somebody else

00:26:23,929 --> 00:26:28,370
might make it public on your on your

00:26:25,370 --> 00:26:30,810
behalf so that's something else to be

00:26:28,370 --> 00:26:35,340
very wary of

00:26:30,810 --> 00:26:38,260
now amazon have got an extension forget

00:26:35,340 --> 00:26:41,710
call get secrets which you can plug into

00:26:38,260 --> 00:26:46,480
your get running locally and it will

00:26:41,710 --> 00:26:49,120
check to see if if you if you're putting

00:26:46,480 --> 00:26:51,700
credentials into in to get for you know

00:26:49,120 --> 00:26:54,580
arms and buckets or something similar or

00:26:51,700 --> 00:26:56,350
you know API keys now obviously that's

00:26:54,580 --> 00:26:57,640
that's really just relating to Amazon

00:26:56,350 --> 00:26:59,470
but you know you might do something

00:26:57,640 --> 00:27:02,310
similar and I think actually that there

00:26:59,470 --> 00:27:04,240
are there's even been mention of

00:27:02,310 --> 00:27:06,910
certainly there were certainly BOTS

00:27:04,240 --> 00:27:10,300
looking at new commits into the github

00:27:06,910 --> 00:27:12,910
to look for this stuff on behalf of the

00:27:10,300 --> 00:27:14,140
body so I'm sure that goodies might you

00:27:12,910 --> 00:27:21,840
know get there in the end and start

00:27:14,140 --> 00:27:27,220
doing the same thing is there anyone who

00:27:21,840 --> 00:27:30,310
isn't familiar with a wasp okay a few

00:27:27,220 --> 00:27:31,930
people probably half the room in fact so

00:27:30,310 --> 00:27:35,260
wasp is the open web application

00:27:31,930 --> 00:27:38,230
security project it's a charity there's

00:27:35,260 --> 00:27:41,620
a set of user groups and they produce

00:27:38,230 --> 00:27:43,300
projects articles and documentation and

00:27:41,620 --> 00:27:45,490
standards around security

00:27:43,300 --> 00:27:51,520
aimed at aimed at fixing a lot this

00:27:45,490 --> 00:27:52,810
stuff now they've got a really

00:27:51,520 --> 00:27:56,470
well-known project called the

00:27:52,810 --> 00:27:59,190
top ten one of their most well known and

00:27:56,470 --> 00:28:02,650
that there's a new version out this year

00:27:59,190 --> 00:28:05,290
and they talked about each of the

00:28:02,650 --> 00:28:07,450
vulnerabilities that are around and

00:28:05,290 --> 00:28:08,920
which are most prevalent which you know

00:28:07,450 --> 00:28:11,830
so the number one is the most prevalent

00:28:08,920 --> 00:28:13,510
the biggest risk that sort of thing and

00:28:11,830 --> 00:28:16,510
they're the they they talk about how you

00:28:13,510 --> 00:28:19,360
fix that what what the risk is and the

00:28:16,510 --> 00:28:21,550
ways you can go about fixing that within

00:28:19,360 --> 00:28:25,090
the top ten and there are also much more

00:28:21,550 --> 00:28:27,370
detailed projects on there's some great

00:28:25,090 --> 00:28:32,140
cheat sheets that are really helpful in

00:28:27,370 --> 00:28:33,640
terms of using you know you might have a

00:28:32,140 --> 00:28:35,290
problem with cross-site scripting that

00:28:33,640 --> 00:28:36,610
you want to think about so you could

00:28:35,290 --> 00:28:37,990
look at the cheat sheet for that and it

00:28:36,610 --> 00:28:41,260
would give you all sorts of ways to test

00:28:37,990 --> 00:28:43,990
for it and ways to fix it and there's

00:28:41,260 --> 00:28:46,330
tools like a wasp zap

00:28:43,990 --> 00:28:49,480
the zed attack proxy which is a great

00:28:46,330 --> 00:28:55,120
little tool that you you install locally

00:28:49,480 --> 00:28:56,740
or you can run it from docker you point

00:28:55,120 --> 00:29:00,250
your you basically proxy your browser

00:28:56,740 --> 00:29:03,730
through zap and it basically analyzes

00:29:00,250 --> 00:29:04,900
the traffic to and from your website so

00:29:03,730 --> 00:29:07,150
you can be doing this while you're doing

00:29:04,900 --> 00:29:09,190
development and it's it's basically

00:29:07,150 --> 00:29:11,320
looking for problems all the time and

00:29:09,190 --> 00:29:14,350
then you can just basically look at the

00:29:11,320 --> 00:29:16,540
issues that it's found and you come up

00:29:14,350 --> 00:29:20,080
with it'll give you suggestions for how

00:29:16,540 --> 00:29:21,910
you fix it so I think from it from a

00:29:20,080 --> 00:29:24,040
dotnet perspective we're pretty good

00:29:21,910 --> 00:29:26,920
there's a lot of mitigations in the

00:29:24,040 --> 00:29:30,310
framework you know so you might be

00:29:26,920 --> 00:29:31,720
already using lots of those I think the

00:29:30,310 --> 00:29:35,970
key there is probably not to turn them

00:29:31,720 --> 00:29:39,030
off but in terms of the number one

00:29:35,970 --> 00:29:42,940
vulnerability sequel injection or sorry

00:29:39,030 --> 00:29:44,850
injection not just sequel injection you

00:29:42,940 --> 00:29:48,970
might be familiar with this cartoon from

00:29:44,850 --> 00:29:53,350
x8 xkcd which talks about little Bobbie

00:29:48,970 --> 00:29:55,090
tables if you haven't seen that it's

00:29:53,350 --> 00:29:56,830
great you look it up it's great

00:29:55,090 --> 00:30:01,960
and that's something about sequel

00:29:56,830 --> 00:30:03,760
injection using untrusted input from the

00:30:01,960 --> 00:30:09,640
user in ways that that's really not

00:30:03,760 --> 00:30:11,020
expected by the application now I'll

00:30:09,640 --> 00:30:14,920
talk a bit more about the fact that it's

00:30:11,020 --> 00:30:18,960
not just sequel but certainly sequel

00:30:14,920 --> 00:30:22,510
injection is still a big issue TalkTalk

00:30:18,960 --> 00:30:28,480
got fine 400,000 pounds after this

00:30:22,510 --> 00:30:31,000
attack in 2015 this wasn't this wasn't

00:30:28,480 --> 00:30:32,590
their first problem so I think that's

00:30:31,000 --> 00:30:34,840
why but that's the last of the largest

00:30:32,590 --> 00:30:38,650
fine that the Information Commissioner's

00:30:34,840 --> 00:30:40,810
Office has passed down on a company burn

00:30:38,650 --> 00:30:45,880
dodgy under gdpr that could be 20

00:30:40,810 --> 00:30:49,960
million potentially and it was a sequel

00:30:45,880 --> 00:30:52,890
injection attack so you know they could

00:30:49,960 --> 00:30:55,369
have fixed it really nowadays

00:30:52,890 --> 00:30:58,019
[Music]

00:30:55,369 --> 00:30:59,909
Instagram had a Sam had a problem where

00:30:58,019 --> 00:31:02,669
a young lad from Finland

00:30:59,909 --> 00:31:06,389
found a way to delete comments with a

00:31:02,669 --> 00:31:10,559
similar similar situation and this is a

00:31:06,389 --> 00:31:12,419
great one so this is a election

00:31:10,559 --> 00:31:14,639
tampering in the US and they found a

00:31:12,419 --> 00:31:17,399
sequel injection of vulnerability there

00:31:14,639 --> 00:31:19,669
and really you know this stuff's been

00:31:17,399 --> 00:31:24,389
going on for a long time this this is

00:31:19,669 --> 00:31:27,419
this is frack magazine which is a an

00:31:24,389 --> 00:31:33,119
old-school online magazine this is

00:31:27,419 --> 00:31:35,159
actually from 1998 December 1998 and in

00:31:33,119 --> 00:31:37,979
there they talk about sequel injection

00:31:35,159 --> 00:31:41,129
this is not a new problem and really

00:31:37,979 --> 00:31:43,469
something that we should all be well

00:31:41,129 --> 00:31:46,649
aware of so I'll talk about it from a

00:31:43,469 --> 00:31:49,469
sequel perspective so you've got a user

00:31:46,649 --> 00:31:50,940
user forum a password a user name

00:31:49,469 --> 00:31:56,219
password form here on your on your

00:31:50,940 --> 00:31:57,779
website you you take the the data and

00:31:56,219 --> 00:32:03,739
you pass it into a string with a bit of

00:31:57,779 --> 00:32:07,049
string format and if somebody passes in

00:32:03,739 --> 00:32:09,569
the right format of injects ejected code

00:32:07,049 --> 00:32:11,849
you end up not requiring a password at

00:32:09,569 --> 00:32:13,619
all in that sequel and so this is a

00:32:11,849 --> 00:32:15,839
fairly well-known problem and I hope in

00:32:13,619 --> 00:32:19,309
the dotnet space we're probably not

00:32:15,839 --> 00:32:19,309
doing that anymore

00:32:19,609 --> 00:32:24,389
but you know it's worth mentioning and

00:32:22,469 --> 00:32:26,489
that untrusted user input could come

00:32:24,389 --> 00:32:29,369
from a form but it could also come from

00:32:26,489 --> 00:32:31,499
a query string or a cookie or an HTTP

00:32:29,369 --> 00:32:34,199
header so we really you know you need to

00:32:31,499 --> 00:32:40,699
be thinking about more than just this

00:32:34,199 --> 00:32:43,499
scenario here and as I say it's not just

00:32:40,699 --> 00:32:46,739
it's not just sequel so there are

00:32:43,499 --> 00:32:48,719
attacks against and it's probably

00:32:46,739 --> 00:32:52,109
going to be attacks anywhere where

00:32:48,719 --> 00:32:54,289
you're mixing commands and data in that

00:32:52,109 --> 00:32:54,289
way

00:32:54,479 --> 00:33:01,259
so yes parameterised queries use lease

00:32:58,559 --> 00:33:03,959
privilege so you know allow only allow

00:33:01,259 --> 00:33:06,029
access to the data that the user should

00:33:03,959 --> 00:33:08,190
be able to access I mean maybe it's

00:33:06,029 --> 00:33:11,990
read-only stop them from deleting stuff

00:33:08,190 --> 00:33:15,060
and you know you can whitelist input or

00:33:11,990 --> 00:33:20,970
validate input in to prevent this kind

00:33:15,060 --> 00:33:23,310
of thing happening another lesson so we

00:33:20,970 --> 00:33:26,780
got any any Ashley Madison customers in

00:33:23,310 --> 00:33:29,250
the room sir

00:33:26,780 --> 00:33:30,720
so this this one there were they had all

00:33:29,250 --> 00:33:32,850
sorts of problems with their systems but

00:33:30,720 --> 00:33:35,790
the flaw in their authentication meant

00:33:32,850 --> 00:33:40,020
that they a couple of passwords were

00:33:35,790 --> 00:33:44,420
compromised now in this case they'd

00:33:40,020 --> 00:33:48,590
actually gone to quite a lot of trouble

00:33:44,420 --> 00:33:50,520
they use bcrypt to store their passwords

00:33:48,590 --> 00:33:54,240
but unfortunately there's somewhere else

00:33:50,520 --> 00:34:00,840
in the code that used an md5 hash which

00:33:54,240 --> 00:34:02,790
is trivially easy to to get the password

00:34:00,840 --> 00:34:06,600
back from it even though it's supposedly

00:34:02,790 --> 00:34:08,790
a one-way function so what do we do

00:34:06,600 --> 00:34:12,060
about that well in this case I'd

00:34:08,790 --> 00:34:14,310
probably say don't do the don't do the

00:34:12,060 --> 00:34:15,660
authentication yourself unless you

00:34:14,310 --> 00:34:17,850
unless you really know what you're doing

00:34:15,660 --> 00:34:22,080
so you can use a separate authentication

00:34:17,850 --> 00:34:24,660
provider it might be a espied asp.net

00:34:22,080 --> 00:34:26,310
identity sort of basic level but you

00:34:24,660 --> 00:34:31,050
might use something like identity server

00:34:26,310 --> 00:34:34,190
or you might just allow Facebook or

00:34:31,050 --> 00:34:37,200
Google or one of the authentication

00:34:34,190 --> 00:34:39,630
providers to to do that authentication

00:34:37,200 --> 00:34:41,490
for you or if you are going to roll your

00:34:39,630 --> 00:34:43,980
own make sure you understand how you're

00:34:41,490 --> 00:34:45,270
going to secure those passwords so that

00:34:43,980 --> 00:34:47,490
they're not in plain text and not

00:34:45,270 --> 00:34:52,140
reversible encryption and using a

00:34:47,490 --> 00:34:54,710
suitable algorithm and one thing I'd

00:34:52,140 --> 00:34:59,220
like to mention which doesn't come up

00:34:54,710 --> 00:35:01,250
very often I think is is crypt crypto

00:34:59,220 --> 00:35:04,500
agility if you are storing your own

00:35:01,250 --> 00:35:07,350
encrypted data right be it hashing or or

00:35:04,500 --> 00:35:09,390
reversible encryption store it in a way

00:35:07,350 --> 00:35:13,290
that you can change that encryption

00:35:09,390 --> 00:35:15,690
going forwards so that as attacks get

00:35:13,290 --> 00:35:18,780
better and they always do you can change

00:35:15,690 --> 00:35:19,230
your algorithm to adapt I think that's

00:35:18,780 --> 00:35:21,030
it

00:35:19,230 --> 00:35:26,940
a really helpful thing that I don't see

00:35:21,030 --> 00:35:30,180
enough of so cross-site scripting this

00:35:26,940 --> 00:35:33,930
is a bug that happened to eBay again 25

00:35:30,180 --> 00:35:39,060
2016 this has dropped down the OWASP top

00:35:33,930 --> 00:35:40,440
10 this is dropped from from 3 to 7 so

00:35:39,060 --> 00:35:44,609
you might think that actually it's going

00:35:40,440 --> 00:35:45,780
out of fashion and again in the.net

00:35:44,609 --> 00:35:48,330
space there is

00:35:45,780 --> 00:35:50,609
there's output encoding built into the

00:35:48,330 --> 00:35:51,840
framework if you're if you're kind of

00:35:50,609 --> 00:35:54,869
using it in the right way

00:35:51,840 --> 00:35:58,080
it's almost safe by default and you're

00:35:54,869 --> 00:35:59,220
probably going to be alright as long as

00:35:58,080 --> 00:36:02,880
you're not switching that sort of thing

00:35:59,220 --> 00:36:04,400
off but I think actually I think this

00:36:02,880 --> 00:36:06,510
year there's gonna be a lot more people

00:36:04,400 --> 00:36:08,160
looking at looking for these

00:36:06,510 --> 00:36:13,470
vulnerabilities in website so I'll talk

00:36:08,160 --> 00:36:18,330
about why in a minute so just a really

00:36:13,470 --> 00:36:22,440
quick look at cross-site scripting so

00:36:18,330 --> 00:36:25,109
here's a I'm accepting a username here

00:36:22,440 --> 00:36:29,850
and in that username I'm passing in a

00:36:25,109 --> 00:36:32,460
bit of script and in a cross-site

00:36:29,850 --> 00:36:36,000
scripting attack the browser receives

00:36:32,460 --> 00:36:38,250
that bit of code and inserts it into the

00:36:36,000 --> 00:36:41,010
HTML and suddenly that JavaScript runs

00:36:38,250 --> 00:36:43,700
and steals the cookies so again it's

00:36:41,010 --> 00:36:47,160
untrusted data from the from the user

00:36:43,700 --> 00:36:49,290
there's variations on the attack the it

00:36:47,160 --> 00:36:51,150
might be reflected so used you send

00:36:49,290 --> 00:36:52,560
something to the web server it sends it

00:36:51,150 --> 00:36:54,869
back to you I'll show you that in a

00:36:52,560 --> 00:36:56,400
second or it might be you might persist

00:36:54,869 --> 00:36:59,640
it into your database and then it comes

00:36:56,400 --> 00:37:01,260
back to bite you later but it's

00:36:59,640 --> 00:37:04,950
basically allowing arbitrary JavaScript

00:37:01,260 --> 00:37:08,970
to run in your browser to attack user

00:37:04,950 --> 00:37:12,270
sessions to face websites insert hostile

00:37:08,970 --> 00:37:14,340
content redirect users you know install

00:37:12,270 --> 00:37:17,790
malware that sort of thing and again it

00:37:14,340 --> 00:37:20,190
comes to that back to not trusting that

00:37:17,790 --> 00:37:24,450
user input escaping it using the correct

00:37:20,190 --> 00:37:26,250
encoding for HTML or CSS or JavaScript

00:37:24,450 --> 00:37:28,020
and you know the framework will help you

00:37:26,250 --> 00:37:30,880
there generally but you know you can't

00:37:28,020 --> 00:37:35,240
use some of the

00:37:30,880 --> 00:37:38,260
HTML encoding in net in the JavaScript

00:37:35,240 --> 00:37:40,940
because that wouldn't kind of work

00:37:38,260 --> 00:37:44,150
you've got HD you've got request

00:37:40,940 --> 00:37:45,950
validation in asp.net don't turn it off

00:37:44,150 --> 00:37:48,080
if you do need to turn it off turn it

00:37:45,950 --> 00:37:50,240
off for the minimum amount don't turn it

00:37:48,080 --> 00:37:51,980
off for the whole app you know be really

00:37:50,240 --> 00:37:54,380
be aware of what you're doing there and

00:37:51,980 --> 00:37:57,200
then content security policy is another

00:37:54,380 --> 00:38:00,320
great technique for for dealing with

00:37:57,200 --> 00:38:02,390
cross-site scripting and I think if you

00:38:00,320 --> 00:38:05,870
can build that into your app early on

00:38:02,390 --> 00:38:08,120
it's it's really easy to do again it's

00:38:05,870 --> 00:38:10,280
another HTTP header that you that you

00:38:08,120 --> 00:38:12,650
serve with your application and in that

00:38:10,280 --> 00:38:14,030
you're specifying where you can run

00:38:12,650 --> 00:38:17,660
JavaScript or where the trusted

00:38:14,030 --> 00:38:19,850
JavaScript comes from so you can turn

00:38:17,660 --> 00:38:22,870
off inline JavaScript and that basically

00:38:19,850 --> 00:38:26,630
DIF that stops pretty much most

00:38:22,870 --> 00:38:30,290
cross-site scripting attacks so I just

00:38:26,630 --> 00:38:38,360
wanted to show you the power of

00:38:30,290 --> 00:38:42,560
cross-site scripting I'm gonna go over

00:38:38,360 --> 00:38:50,150
here so this is Bob's discount diamonds

00:38:42,560 --> 00:38:54,080
this is a dotnet app that I wrote it's

00:38:50,150 --> 00:38:55,700
it's basically deliberately flawed it's

00:38:54,080 --> 00:38:59,030
just to demonstrate some of these these

00:38:55,700 --> 00:39:01,730
problems so you know you can you can go

00:38:59,030 --> 00:39:04,430
around and look at the various diamonds

00:39:01,730 --> 00:39:08,110
that are available and you can send a

00:39:04,430 --> 00:39:12,320
message here I can say hello that's very

00:39:08,110 --> 00:39:16,040
says hello back so why not do here is

00:39:12,320 --> 00:39:18,250
actually let's have some JavaScript in

00:39:16,040 --> 00:39:18,250
there

00:39:22,980 --> 00:39:29,860
and because I've done the wrong thing in

00:39:25,120 --> 00:39:34,810
my code when it comes back it actually

00:39:29,860 --> 00:39:37,600
sends it's put up an alert box just zoom

00:39:34,810 --> 00:39:41,350
in so that alert box comes becomes

00:39:37,600 --> 00:39:43,870
because I've allowed that JavaScript to

00:39:41,350 --> 00:39:45,460
run inside my application and once you

00:39:43,870 --> 00:39:52,000
can do that you can do all sorts of

00:39:45,460 --> 00:40:01,510
things so let me show you I'm gonna grab

00:39:52,000 --> 00:40:03,010
this bit of script so what you get back

00:40:01,510 --> 00:40:10,560
in the browser is it so you know it's

00:40:03,010 --> 00:40:13,980
nothing to see here this is great except

00:40:10,560 --> 00:40:20,350
if I go over to this other application

00:40:13,980 --> 00:40:22,660
of the web browser which is here this is

00:40:20,350 --> 00:40:25,360
a thing called beef the browser

00:40:22,660 --> 00:40:28,360
exploitation framework so what what this

00:40:25,360 --> 00:40:29,710
is done I've run that JavaScript and

00:40:28,360 --> 00:40:34,300
it's now running in the browser and that

00:40:29,710 --> 00:40:36,660
has allowed me to well that bit of

00:40:34,300 --> 00:40:40,750
JavaScript is is communicating with this

00:40:36,660 --> 00:40:42,370
virtual machine running up in Azure and

00:40:40,750 --> 00:40:44,650
hopefully I should be able to send

00:40:42,370 --> 00:40:46,920
commands to this browser so there's all

00:40:44,650 --> 00:40:50,890
sorts of things that you can do in here

00:40:46,920 --> 00:40:56,050
you can get information about what's

00:40:50,890 --> 00:40:58,620
running in the browser you can smooth

00:40:56,050 --> 00:40:58,620
that out of the way

00:41:02,980 --> 00:41:08,230
you can the social engineering things

00:41:05,960 --> 00:41:12,190
are quite interesting so if I do that

00:41:08,230 --> 00:41:18,830
something over there seeing now

00:41:12,190 --> 00:41:26,060
hopefully in a second now look that's

00:41:18,830 --> 00:41:28,280
Clippy so if I click yes I can it'll it

00:41:26,060 --> 00:41:29,780
will let me download an executable and

00:41:28,280 --> 00:41:33,170
who knows what the executables then

00:41:29,780 --> 00:41:45,250
going to do could do anything right or

00:41:33,170 --> 00:41:47,840
you know maybe Google one's quite kids

00:41:45,250 --> 00:41:49,340
see so once you've got JavaScript

00:41:47,840 --> 00:41:51,680
running in the browser on somebody

00:41:49,340 --> 00:41:55,250
else's browser you know all sorts of

00:41:51,680 --> 00:41:57,290
good things so let's see if this is

00:41:55,250 --> 00:41:59,470
going to redirect okay so would you type

00:41:57,290 --> 00:42:03,230
your username and password into that

00:41:59,470 --> 00:42:04,820
maybe you would as soon as you do it's

00:42:03,230 --> 00:42:07,790
going to come back into my console over

00:42:04,820 --> 00:42:10,790
here and then I can log into your Google

00:42:07,790 --> 00:42:14,720
Mail so that's the power of cross-site

00:42:10,790 --> 00:42:19,850
scripting and I think yeah once you're

00:42:14,720 --> 00:42:24,650
there you can do all sorts I mentioned

00:42:19,850 --> 00:42:25,880
that I thought I thought we're going to

00:42:24,650 --> 00:42:27,890
see a bit of a comeback for cross-site

00:42:25,880 --> 00:42:29,030
scripting and the reason I think we're

00:42:27,890 --> 00:42:32,800
going to see it come back for cross-site

00:42:29,030 --> 00:42:38,450
scripting is that you can now run

00:42:32,800 --> 00:42:40,550
Bitcoin mining in the browser so I saw a

00:42:38,450 --> 00:42:49,400
tweet today where somebody had gone to a

00:42:40,550 --> 00:42:51,530
Starbucks in Brazil and they suddenly

00:42:49,400 --> 00:42:55,040
found that their browser was was mining

00:42:51,530 --> 00:42:59,930
Bitcoin for somebody else and the reason

00:42:55,040 --> 00:43:01,580
it did that is because their when in

00:42:59,930 --> 00:43:04,550
that case it was an open Wi-Fi hotspot

00:43:01,580 --> 00:43:06,470
so they'd they'd manipulated the HTML as

00:43:04,550 --> 00:43:08,300
it went through the open Wi-Fi hotspot

00:43:06,470 --> 00:43:10,550
you know similar to what I could do with

00:43:08,300 --> 00:43:12,700
this but if you've got a cross-site

00:43:10,550 --> 00:43:16,490
scripting vulnerability in your web site

00:43:12,700 --> 00:43:18,080
if someone can leverage that to send

00:43:16,490 --> 00:43:20,420
basically the JavaScript for Bitcoin

00:43:18,080 --> 00:43:23,990
mining into your into your customers

00:43:20,420 --> 00:43:26,330
browsers I think there's a real scope

00:43:23,990 --> 00:43:28,460
there for a lot of people to do a lot of

00:43:26,330 --> 00:43:30,290
Bitcoin mining and I think I think

00:43:28,460 --> 00:43:35,750
that's why cross-site scripting isn't

00:43:30,290 --> 00:43:38,480
going to go away just yet the next

00:43:35,750 --> 00:43:41,840
lesson I'm again pretty close to the end

00:43:38,480 --> 00:43:44,909
I see for me it's continuous improvement

00:43:41,840 --> 00:43:44,909
[Music]

00:43:45,580 --> 00:43:53,119
one of the problems I think we've got is

00:43:47,869 --> 00:43:55,180
that we build software and it's finished

00:43:53,119 --> 00:43:58,849
and we deploy it and we're done

00:43:55,180 --> 00:44:00,410
unfortunately the rest of the world

00:43:58,849 --> 00:44:04,880
doesn't stop just because we've finished

00:44:00,410 --> 00:44:08,089
with our project so dependencies in our

00:44:04,880 --> 00:44:10,220
code have vulnerabilities in them our

00:44:08,089 --> 00:44:13,040
own code make our own code may not have

00:44:10,220 --> 00:44:14,810
vulnerabilities in them but you know is

00:44:13,040 --> 00:44:18,410
the jQuery library that you're using

00:44:14,810 --> 00:44:21,320
up-to-date what about some of the other

00:44:18,410 --> 00:44:22,550
bits and pieces that you're using you

00:44:21,320 --> 00:44:25,060
know do you need the latest version of

00:44:22,550 --> 00:44:27,470
reactors or is there a problem with that

00:44:25,060 --> 00:44:29,560
so I think you know really we need to

00:44:27,470 --> 00:44:33,560
keep an eye on those dependencies to

00:44:29,560 --> 00:44:35,210
keep our applications secure I think for

00:44:33,560 --> 00:44:38,900
me that's really important now get her

00:44:35,210 --> 00:44:42,170
back she have a project to which i think

00:44:38,900 --> 00:44:45,770
is which is brilliant and that will scan

00:44:42,170 --> 00:44:47,690
your your code in github and it will

00:44:45,770 --> 00:44:49,940
look at the dependencies and it will

00:44:47,690 --> 00:44:52,609
tell you if some of them have

00:44:49,940 --> 00:44:55,609
vulnerabilities based on this CVE

00:44:52,609 --> 00:44:57,589
databases CV database contains all of

00:44:55,609 --> 00:45:00,770
the known vulnerabilities in various

00:44:57,589 --> 00:45:03,290
code and they're still there actively

00:45:00,770 --> 00:45:05,480
scanning to detect that which is

00:45:03,290 --> 00:45:06,859
brilliant but the language support is

00:45:05,480 --> 00:45:08,540
limited so I think if you're in Java

00:45:06,859 --> 00:45:10,940
Script is probably okay but that and

00:45:08,540 --> 00:45:12,650
there's a few others that are coming but

00:45:10,940 --> 00:45:13,970
I think you know it's a bit of a way to

00:45:12,650 --> 00:45:18,700
go there and I think that's really

00:45:13,970 --> 00:45:18,700
helpful the other thing

00:45:19,220 --> 00:45:24,650
it's catching problems early so you know

00:45:22,400 --> 00:45:28,190
here's your here's your development

00:45:24,650 --> 00:45:30,980
pipeline you know your plan code test

00:45:28,190 --> 00:45:33,020
release deploy operate perhaps so you've

00:45:30,980 --> 00:45:35,810
got your dev and you've op so oh maybe

00:45:33,020 --> 00:45:37,340
on maybe your now DevOps where do you

00:45:35,810 --> 00:45:41,450
where does your security happen

00:45:37,340 --> 00:45:45,440
does it happen here maybe does it happen

00:45:41,450 --> 00:45:49,580
here possibly really at least happen

00:45:45,440 --> 00:45:51,770
here so in the same way that you

00:45:49,580 --> 00:45:53,480
involved it Devon ops together and

00:45:51,770 --> 00:45:56,630
you've probably got QA in there too

00:45:53,480 --> 00:46:00,980
so I've heard people talk about dev QA

00:45:56,630 --> 00:46:04,700
ops well you know I think it needs to be

00:46:00,980 --> 00:46:06,710
dev QA dev dev set QA ops etc you know

00:46:04,700 --> 00:46:08,780
there's no point how it having brought

00:46:06,710 --> 00:46:12,260
these two silos together and forgetting

00:46:08,780 --> 00:46:15,020
about the rest we need to include QA too

00:46:12,260 --> 00:46:16,300
I think you're probably undoubtedly if

00:46:15,020 --> 00:46:19,040
you're doing DevOps you're undoubtedly

00:46:16,300 --> 00:46:23,050
involving Q way anyway so bring security

00:46:19,040 --> 00:46:25,520
and as well get them in up front and

00:46:23,050 --> 00:46:28,580
yeah I think that's that's that's the

00:46:25,520 --> 00:46:31,090
way to do it we know that that bugs cost

00:46:28,580 --> 00:46:33,800
more money the longer you leave them

00:46:31,090 --> 00:46:35,570
doesn't matter whether they're feature

00:46:33,800 --> 00:46:43,330
bugs or whether they're security bugs

00:46:35,570 --> 00:46:43,330
get them early one last poll

00:46:46,169 --> 00:46:49,169
okay

00:46:59,430 --> 00:47:04,790
[Music]

00:47:02,170 --> 00:47:08,300
I'm really interested to know what the

00:47:04,790 --> 00:47:11,300
next thing you're really interested in

00:47:08,300 --> 00:47:14,240
learning about and I've put a few

00:47:11,300 --> 00:47:16,250
oxygens down there it might come down to

00:47:14,240 --> 00:47:17,840
other for everything but I'd be

00:47:16,250 --> 00:47:19,130
fascinated to know oh this one's

00:47:17,840 --> 00:47:30,320
multiple choice so you can pick more

00:47:19,130 --> 00:47:31,150
than one or across the board look at

00:47:30,320 --> 00:47:35,170
that

00:47:31,150 --> 00:47:38,620
let's see what the answer is answers are

00:47:35,170 --> 00:47:41,330
okay cool

00:47:38,620 --> 00:47:43,610
so I've done a lightning talk on iOS

00:47:41,330 --> 00:47:45,290
blackbook she'll come into the security

00:47:43,610 --> 00:47:46,640
testing thing I've got a talk on

00:47:45,290 --> 00:47:50,260
authentication that I can do as well so

00:47:46,640 --> 00:47:50,260
that's great thank you very much

00:47:51,490 --> 00:47:56,720
there's some resources on my blog hey

00:47:55,250 --> 00:48:02,860
Robin intercom slash talks

00:47:56,720 --> 00:48:02,860
slash fail time for questions

00:48:03,610 --> 00:48:12,010
has anyone got any questions one

00:48:09,650 --> 00:48:12,010
question

00:48:22,480 --> 00:48:30,470
crypto agility yeah

00:48:27,100 --> 00:48:33,980
okay so if you asked let's say you're

00:48:30,470 --> 00:48:38,150
storing passwords in a database and you

00:48:33,980 --> 00:48:44,660
know that bcrypt

00:48:38,150 --> 00:48:47,000
is a great algorithm today and I mean

00:48:44,660 --> 00:48:51,730
bcrypt has actually got some features

00:48:47,000 --> 00:48:55,430
built-in to enable crypto agility so

00:48:51,730 --> 00:49:00,830
I'll talk about both bcrypt has a work

00:48:55,430 --> 00:49:03,590
factor so you can you can vary how hard

00:49:00,830 --> 00:49:09,710
that algorithm works to hash your your

00:49:03,590 --> 00:49:12,080
password so it might actually do say ten

00:49:09,710 --> 00:49:16,070
thousand iterations of the algorithm to

00:49:12,080 --> 00:49:19,640
give you the hashed result that means to

00:49:16,070 --> 00:49:23,420
get that if you want to brute-force that

00:49:19,640 --> 00:49:24,830
algorithm by where you take the you take

00:49:23,420 --> 00:49:27,020
the plaintext and you put it into the

00:49:24,830 --> 00:49:29,480
algorithm you get the hashed value out

00:49:27,020 --> 00:49:31,370
and then you compare it to the one

00:49:29,480 --> 00:49:33,320
you're trying to brute force and you do

00:49:31,370 --> 00:49:36,230
that with a dictionary or a big long

00:49:33,320 --> 00:49:39,770
list of combinations and eventually

00:49:36,230 --> 00:49:41,720
you'll get the you'll get the answer if

00:49:39,770 --> 00:49:46,520
you make that algorithm slow to run say

00:49:41,720 --> 00:49:48,680
ten thousand iterations it's going to

00:49:46,520 --> 00:49:51,520
take you a long time to brute-force that

00:49:48,680 --> 00:49:54,350
the result that you you're looking for

00:49:51,520 --> 00:49:57,320
and so in B Crips you've got a work

00:49:54,350 --> 00:49:59,090
factor so you might increase it to more

00:49:57,320 --> 00:50:01,370
than ten thousand iterations a hundred

00:49:59,090 --> 00:50:03,740
thousand iterations so as processors get

00:50:01,370 --> 00:50:05,660
faster as you start throwing more

00:50:03,740 --> 00:50:09,980
hardware at it you increase the work

00:50:05,660 --> 00:50:14,260
factor and it makes it it means that the

00:50:09,980 --> 00:50:17,440
the the speed that the algorithm runs as

00:50:14,260 --> 00:50:20,240
processors increase you can tune it so

00:50:17,440 --> 00:50:23,090
so the attacks don't inevitably get

00:50:20,240 --> 00:50:26,210
faster and then crypto agility is kind

00:50:23,090 --> 00:50:29,480
of the next level of that you know

00:50:26,210 --> 00:50:32,450
you're using bcrypt but actually now

00:50:29,480 --> 00:50:35,450
you're in the future you want to move to

00:50:32,450 --> 00:50:39,820
there's another algorithm called s

00:50:35,450 --> 00:50:43,339
script or perhaps I think it's called

00:50:39,820 --> 00:50:47,390
argon which is another next-generation

00:50:43,339 --> 00:50:48,950
password hashing algorithm so if you--if

00:50:47,390 --> 00:50:49,640
you store the fact that you're using

00:50:48,950 --> 00:50:52,640
bcrypt

00:50:49,640 --> 00:50:55,910
in your database alongside your your

00:50:52,640 --> 00:50:59,119
hashed value when you want to map

00:50:55,910 --> 00:51:00,710
migrate to another algorithm you can you

00:50:59,119 --> 00:51:04,339
could actually combine the hashing

00:51:00,710 --> 00:51:07,369
algorithms so you have bcrypt plus s

00:51:04,339 --> 00:51:08,960
script and then you store you you know

00:51:07,369 --> 00:51:13,369
that you've used both algorithms so you

00:51:08,960 --> 00:51:15,410
then do that when the person logs in you

00:51:13,369 --> 00:51:17,000
can apply both algorithms or if you

00:51:15,410 --> 00:51:18,170
haven't used both algorithms you're

00:51:17,000 --> 00:51:21,140
still using just bcrypt

00:51:18,170 --> 00:51:23,119
for each record you know what to do and

00:51:21,140 --> 00:51:25,940
so that I'm sure if I've explained that

00:51:23,119 --> 00:51:27,320
particularly well but it's basically

00:51:25,940 --> 00:51:29,720
gives you it gives you the ability to

00:51:27,320 --> 00:51:34,250
select the algorithm on the fly as

00:51:29,720 --> 00:51:36,200
somebody logs in and then as they log in

00:51:34,250 --> 00:51:38,410
they've just given you their clear text

00:51:36,200 --> 00:51:40,790
passwords to compare you would then

00:51:38,410 --> 00:51:43,220
rehash it with the new algorithm and

00:51:40,790 --> 00:51:45,530
then store that and you could then say

00:51:43,220 --> 00:51:47,900
okay so this person is now using s

00:51:45,530 --> 00:51:51,920
script this person is using bcrypt this

00:51:47,900 --> 00:51:55,010
person is using s script so yeah that's

00:51:51,920 --> 00:52:07,339
that's that's one way of doing that then

00:51:55,010 --> 00:52:09,020
you can you can use one yeah so that's

00:52:07,339 --> 00:52:14,140
why that's why I would I would actually

00:52:09,020 --> 00:52:18,109
use a combination of so you could say

00:52:14,140 --> 00:52:19,520
you this person has used bcrypt I don't

00:52:18,109 --> 00:52:21,560
know what that password is but if you

00:52:19,520 --> 00:52:23,839
then apply s script on top of that

00:52:21,560 --> 00:52:26,119
you've kind of got this this hybrid

00:52:23,839 --> 00:52:28,550
approach and so it's protected by a

00:52:26,119 --> 00:52:30,530
script and bcrypt but that's probably

00:52:28,550 --> 00:52:32,810
that's probably overkill in the end and

00:52:30,530 --> 00:52:35,869
you might want to normalize down to s

00:52:32,810 --> 00:52:37,970
scripts for everybody as they log in but

00:52:35,869 --> 00:52:40,940
certainly those those older accounts you

00:52:37,970 --> 00:52:43,369
would be protected by both and then once

00:52:40,940 --> 00:52:45,260
you've got through once well I mean you

00:52:43,369 --> 00:52:47,960
might never get rid of that combination

00:52:45,260 --> 00:52:49,310
but certainly that you might want to get

00:52:47,960 --> 00:52:56,270
rid of that just for the speed of

00:52:49,310 --> 00:52:58,160
processing for people logging in yeah

00:52:56,270 --> 00:53:00,680
the problem there is going to be if

00:52:58,160 --> 00:53:03,170
somebody wants to cause problems with

00:53:00,680 --> 00:53:06,230
your website by sending you that sending

00:53:03,170 --> 00:53:09,950
you login requests for people who don't

00:53:06,230 --> 00:53:11,450
exist or sorry who aren't logging in but

00:53:09,950 --> 00:53:13,760
you know that that kind of extra

00:53:11,450 --> 00:53:16,850
processing power might be problem for

00:53:13,760 --> 00:53:20,240
you you might be paying the cloud

00:53:16,850 --> 00:53:22,670
provider for it for example but you can

00:53:20,240 --> 00:53:24,800
do the same with with symmetric

00:53:22,670 --> 00:53:29,750
algorithms as well so you might know

00:53:24,800 --> 00:53:31,190
that you're using AES 128 now but in the

00:53:29,750 --> 00:53:32,420
future you might use that something

00:53:31,190 --> 00:53:34,190
completely different and if you know

00:53:32,420 --> 00:53:34,820
what I'll wear them you use because it's

00:53:34,190 --> 00:53:37,520
on the record

00:53:34,820 --> 00:54:01,520
you can then change that at you because

00:53:37,520 --> 00:54:03,650
you move forward so if you are if you

00:54:01,520 --> 00:54:05,600
fall and fall to something like this so

00:54:03,650 --> 00:54:09,110
your traffic has to be being proxied by

00:54:05,600 --> 00:54:13,610
someone who is up to no good so it might

00:54:09,110 --> 00:54:17,540
be an open Wi-Fi hotspot something like

00:54:13,610 --> 00:54:20,500
this there is the potential at any open

00:54:17,540 --> 00:54:24,860
Wi-Fi hotspot for your traffic to be

00:54:20,500 --> 00:54:27,290
diverted through through an attacker if

00:54:24,860 --> 00:54:29,750
that if they are diverting your traffic

00:54:27,290 --> 00:54:34,940
they've got control over it so you make

00:54:29,750 --> 00:54:41,480
a request to HTTP slash slash Twitter

00:54:34,940 --> 00:54:45,290
comm they see that go by they they will

00:54:41,480 --> 00:54:49,570
probably make that request to Twitter

00:54:45,290 --> 00:54:53,210
from so your your machine says his the

00:54:49,570 --> 00:54:55,220
here's the request they can basically do

00:54:53,210 --> 00:54:56,870
what they like with it so at that point

00:54:55,220 --> 00:54:58,180
they could they could potentially send

00:54:56,870 --> 00:55:01,810
it to Twitter

00:54:58,180 --> 00:55:10,000
as HTTP or not and then capture the

00:55:01,810 --> 00:55:12,360
response and send it back to you often

00:55:10,000 --> 00:55:15,550
you will you will you will strip the

00:55:12,360 --> 00:55:17,110
HTTP off because that then gives you

00:55:15,550 --> 00:55:18,850
just complete flexibility over what

00:55:17,110 --> 00:55:23,260
what's going on

00:55:18,850 --> 00:55:26,500
you youth your browser may have

00:55:23,260 --> 00:55:27,120
requested HTTPS in the in the first

00:55:26,500 --> 00:55:34,900
place

00:55:27,120 --> 00:55:36,970
but because all of the links in that in

00:55:34,900 --> 00:55:38,770
that webpage are basically being

00:55:36,970 --> 00:55:39,970
manipulated by the attacker they could

00:55:38,770 --> 00:55:42,390
they can do kind of whatever they like

00:55:39,970 --> 00:55:42,390
with it really

00:55:55,590 --> 00:56:07,870
yeah yeah that's a good point I think

00:56:02,040 --> 00:56:10,510
let me think through this a bit I think

00:56:07,870 --> 00:56:14,020
you would have had we would have had to

00:56:10,510 --> 00:56:19,500
intercept the traffic before it got to

00:56:14,020 --> 00:56:19,500
that point potentially

00:56:25,350 --> 00:56:31,780
I think I think probably the way it

00:56:28,120 --> 00:56:35,020
would happen if you actually go in and

00:56:31,780 --> 00:56:37,660
type in HTTPS you'd probably be safe but

00:56:35,020 --> 00:56:39,430
how many people do that you know you

00:56:37,660 --> 00:56:41,770
just go to your browser you put I mean a

00:56:39,430 --> 00:56:45,160
lot of people just type Twitter into

00:56:41,770 --> 00:56:47,980
Google right they search for it in

00:56:45,160 --> 00:56:52,710
getting Google or you know or you type

00:56:47,980 --> 00:56:55,830
it into the address bar so even though

00:56:52,710 --> 00:56:59,080
if you don't put that HTTP on the front

00:56:55,830 --> 00:57:02,020
your browser goes off over HTTP to

00:56:59,080 --> 00:57:03,250
Twitter Twitter then redirects you it's

00:57:02,020 --> 00:57:08,290
at that point we've got the opportunity

00:57:03,250 --> 00:57:12,210
to not allow that redirection so we can

00:57:08,290 --> 00:57:14,520
basically get in the middle there okay

00:57:12,210 --> 00:57:19,940
thank you very much

00:57:14,520 --> 00:57:19,940

YouTube URL: https://www.youtube.com/watch?v=6hGmDhNjHGI


