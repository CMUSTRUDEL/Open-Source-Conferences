Title: Chain React 2019- Adhithi Ravichandran- Building React Native Apps 10 Things I've Learned On The Way
Publication date: 2019-08-06
Playlist: Chain React 2019
Description: 
	React Native has come to stay. There is so much excitement about developing native mobile applications using JavaScript. React Native has made it possible for web developers to develop sophisticated native mobile apps.

In the last two years, after building our React Native Apps, there are many things that I have learned the hard way. Lessons learned in coding standards, state management, supporting multiple platforms, release management, just to name a few.

In this session, I would share my experiences building React Native Apps, and the 10 things that I wish I knew early on. By the end of this talk, you will be equipped with best practices to follow while building your React Native App. Make sure you donâ€™t repeat the same mistakes that I did.

https://adhithiravi.github.io/ChainReactTalk2019/#/
Captions: 
	00:00:11,330 --> 00:00:16,590
so first of all I'd like to thank chain

00:00:14,549 --> 00:00:19,140
react for having me here and putting up

00:00:16,590 --> 00:00:21,060
this awesome show and I'm just enjoying

00:00:19,140 --> 00:00:24,060
myself as much as you guys are

00:00:21,060 --> 00:00:26,369
and it's been unbelievably awesome great

00:00:24,060 --> 00:00:29,369
job all speakers great job infinite

00:00:26,369 --> 00:00:31,080
rages love it love being here so I'm

00:00:29,369 --> 00:00:32,730
gonna be talking about the 10 lessons

00:00:31,080 --> 00:00:36,059
that I've learned building react native

00:00:32,730 --> 00:00:40,350
apps the funny story here is I think

00:00:36,059 --> 00:00:43,469
Jason the panel host from a few hours

00:00:40,350 --> 00:00:45,510
ago had a sneak peek with my slides and

00:00:43,469 --> 00:00:47,250
he probably took some pointers so a lot

00:00:45,510 --> 00:00:49,710
of this has already talked about a

00:00:47,250 --> 00:00:52,469
little bit so nevertheless is perfect

00:00:49,710 --> 00:00:55,489
time to have a recap because most of us

00:00:52,469 --> 00:00:57,570
have had the same 10 lessons I guess

00:00:55,489 --> 00:00:59,670
alright so I'm gonna be touching on a

00:00:57,570 --> 00:01:01,890
lot of those points I'm at the theory of

00:00:59,670 --> 00:01:03,930
each hundred and I'm a senior software

00:01:01,890 --> 00:01:06,630
engineer working for a healthcare

00:01:03,930 --> 00:01:09,479
startup in Kansas City called ready Wis

00:01:06,630 --> 00:01:12,630
health and what's cool about us there is

00:01:09,479 --> 00:01:15,509
we built critical healthcare scenarios

00:01:12,630 --> 00:01:17,580
on the mobile platform both iOS and

00:01:15,509 --> 00:01:20,250
Android so we take care of things like

00:01:17,580 --> 00:01:22,530
stroke sepsis cardiac arrest and so on

00:01:20,250 --> 00:01:24,390
and it's all entirely built and react

00:01:22,530 --> 00:01:26,970
native and that's how I am a react

00:01:24,390 --> 00:01:30,180
native developer and Here I am I'm gonna

00:01:26,970 --> 00:01:33,150
start with the first lesson learned

00:01:30,180 --> 00:01:34,829
react now some of you here are gonna get

00:01:33,150 --> 00:01:37,170
pretty annoyed by this lesson and be

00:01:34,829 --> 00:01:39,659
like do obviously I'm gonna learn react

00:01:37,170 --> 00:01:42,930
but I didn't so these are the 10 lessons

00:01:39,659 --> 00:01:45,360
I learned a hard way so I'm sure there's

00:01:42,930 --> 00:01:47,790
somebody here who is gonna get started

00:01:45,360 --> 00:01:51,360
with react native before realizing that

00:01:47,790 --> 00:01:54,270
they need to learn react so long story

00:01:51,360 --> 00:01:56,009
short when I started working on react

00:01:54,270 --> 00:02:00,299
native I was from a completely different

00:01:56,009 --> 00:02:02,399
background I was doing Java and C++ and

00:02:00,299 --> 00:02:04,950
then I got to work for the startup here

00:02:02,399 --> 00:02:07,619
and I was asked code react native so I

00:02:04,950 --> 00:02:09,780
had no idea what I was getting into I

00:02:07,619 --> 00:02:11,280
did not know JavaScript and I did not

00:02:09,780 --> 00:02:13,040
know react and I was just gonna start

00:02:11,280 --> 00:02:15,409
coding react native said

00:02:13,040 --> 00:02:18,349
that's not possible so please learn

00:02:15,409 --> 00:02:20,209
react if you haven't learned react the

00:02:18,349 --> 00:02:22,370
things that you really need to learn

00:02:20,209 --> 00:02:25,340
about are what is the props what our

00:02:22,370 --> 00:02:27,950
state lifecycle methods and the

00:02:25,340 --> 00:02:30,560
composition model of react and with

00:02:27,950 --> 00:02:32,569
react native you also need to know JSX

00:02:30,560 --> 00:02:36,500
which is kind of optional and react but

00:02:32,569 --> 00:02:38,689
that's how you code and react native the

00:02:36,500 --> 00:02:41,450
endpoint is basically think and react

00:02:38,689 --> 00:02:43,760
and my advice would also be maybe caught

00:02:41,450 --> 00:02:47,000
a couple apps in react and familiarize

00:02:43,760 --> 00:02:50,439
yourself with react because react native

00:02:47,000 --> 00:02:52,970
is essentially JavaScript and react so

00:02:50,439 --> 00:02:55,959
learn that first and don't be like me

00:02:52,970 --> 00:03:00,319
and jump in before you learn react

00:02:55,959 --> 00:03:02,900
listen to talked about quite a bit in

00:03:00,319 --> 00:03:05,000
the last two days navigation navigation

00:03:02,900 --> 00:03:07,879
is still evolving

00:03:05,000 --> 00:03:10,400
I started coding react native in 2016

00:03:07,879 --> 00:03:13,129
and at that time it was very very

00:03:10,400 --> 00:03:15,109
difficult to understand what was going

00:03:13,129 --> 00:03:17,299
on what was the library I needed to pick

00:03:15,109 --> 00:03:18,979
and for those of you who are wondering

00:03:17,299 --> 00:03:21,709
what is this navigation we are talking

00:03:18,979 --> 00:03:24,199
about it's basically the transition

00:03:21,709 --> 00:03:26,299
transition between the screens on your

00:03:24,199 --> 00:03:28,310
mobile app right it's the routing for

00:03:26,299 --> 00:03:29,959
your mobile app there are so many

00:03:28,310 --> 00:03:31,609
screens you're gonna have even for a

00:03:29,959 --> 00:03:33,319
simple application you press the home

00:03:31,609 --> 00:03:35,989
button you go to the back button and

00:03:33,319 --> 00:03:39,650
tons of screens and navigation is really

00:03:35,989 --> 00:03:42,319
a very crucial piece of your application

00:03:39,650 --> 00:03:46,549
and picking the right library is super

00:03:42,319 --> 00:03:49,569
important and you may end up seeing all

00:03:46,549 --> 00:03:52,220
of these options and don't get worried

00:03:49,569 --> 00:03:54,260
because there are some cool options that

00:03:52,220 --> 00:03:57,079
you can solidify to don't don't freak

00:03:54,260 --> 00:03:59,359
out here are some of the libraries I've

00:03:57,079 --> 00:04:01,090
used which are kind of irrelevant right

00:03:59,359 --> 00:04:04,340
now but I still would like to mention

00:04:01,090 --> 00:04:07,489
kind of the journey I use something

00:04:04,340 --> 00:04:09,889
called navigation experimental long ago

00:04:07,489 --> 00:04:13,549
and it was an experimental library and

00:04:09,889 --> 00:04:15,049
got deprecated so that's no go and then

00:04:13,549 --> 00:04:18,500
I use something called navigator

00:04:15,049 --> 00:04:20,840
gone there was navigation iOS it was

00:04:18,500 --> 00:04:23,659
only for iOS so don't use it then there

00:04:20,840 --> 00:04:26,120
was native navigation which was I think

00:04:23,659 --> 00:04:26,690
by Airbnb and they stopped support for

00:04:26,120 --> 00:04:28,250
that

00:04:26,690 --> 00:04:31,700
that's gone and then there was react

00:04:28,250 --> 00:04:33,560
navigation so this is where we ended up

00:04:31,700 --> 00:04:35,810
finally and we are using react

00:04:33,560 --> 00:04:38,630
navigation and I guess it's in version

00:04:35,810 --> 00:04:40,520
3.0 now and it's super cool and we

00:04:38,630 --> 00:04:43,850
really enjoyed using react navigation

00:04:40,520 --> 00:04:46,250
and a tip would be if you'd like react

00:04:43,850 --> 00:04:48,740
navigation you can also use a react

00:04:46,250 --> 00:04:49,880
native route of flux along with it it's

00:04:48,740 --> 00:04:52,760
kind of a wrapper

00:04:49,880 --> 00:04:55,940
it's a wrapper around react navigation

00:04:52,760 --> 00:04:58,340
and I've enjoyed using that because the

00:04:55,940 --> 00:04:59,750
API is are just so much easier and even

00:04:58,340 --> 00:05:02,810
if things were gonna change and react

00:04:59,750 --> 00:05:04,880
navigation when react native route of

00:05:02,810 --> 00:05:06,830
flux upgrades they're gonna take care of

00:05:04,880 --> 00:05:09,110
it so I've enjoyed using react

00:05:06,830 --> 00:05:10,640
navigation in combination with react

00:05:09,110 --> 00:05:13,880
native route of flux I should have added

00:05:10,640 --> 00:05:16,360
that on my slide and if you're someone

00:05:13,880 --> 00:05:19,330
who really wants a complete native

00:05:16,360 --> 00:05:22,010
navigation on both your iOS and Android

00:05:19,330 --> 00:05:23,720
you can go for react native navigation

00:05:22,010 --> 00:05:26,960
I've heard a lot of cool things about it

00:05:23,720 --> 00:05:28,370
but I have not used it I probably want

00:05:26,960 --> 00:05:31,280
to try that on a different project

00:05:28,370 --> 00:05:33,740
outside of my work but you have two

00:05:31,280 --> 00:05:36,169
solid options react navigation or react

00:05:33,740 --> 00:05:38,030
native navigation and just forget about

00:05:36,169 --> 00:05:39,440
the past and all the other you know

00:05:38,030 --> 00:05:43,220
stack overflow questions about

00:05:39,440 --> 00:05:45,590
navigation and don't get confused and

00:05:43,220 --> 00:05:48,620
that's the lesson about navigation the

00:05:45,590 --> 00:05:52,900
next lesson was also talked by the panel

00:05:48,620 --> 00:05:57,530
quite a bit about stake management well

00:05:52,900 --> 00:05:59,690
in my experience i I do enjoy using

00:05:57,530 --> 00:06:03,200
external state management libraries like

00:05:59,690 --> 00:06:05,870
redux and mob X and the reason we use

00:06:03,200 --> 00:06:07,970
that is when you complicated your apps

00:06:05,870 --> 00:06:09,830
become very complicated so when we

00:06:07,970 --> 00:06:12,200
started coding our app it was just a

00:06:09,830 --> 00:06:14,690
prototype and then it grew and grew and

00:06:12,200 --> 00:06:17,690
grew and then we started passing all the

00:06:14,690 --> 00:06:19,820
props down to the children and it kept

00:06:17,690 --> 00:06:23,150
growing and got complex to handle and

00:06:19,820 --> 00:06:26,180
that's when libraries like redux and mob

00:06:23,150 --> 00:06:28,820
X come in place now we don't want a

00:06:26,180 --> 00:06:30,350
battle between redux and mob X because

00:06:28,820 --> 00:06:32,360
they're both trying to solve the same

00:06:30,350 --> 00:06:34,490
problem and as somebody else mentioned

00:06:32,360 --> 00:06:36,440
in the panel it's really up about the

00:06:34,490 --> 00:06:39,050
developer whatever you like you can pick

00:06:36,440 --> 00:06:40,190
one of them redux does come with a lot

00:06:39,050 --> 00:06:42,890
of boilerplate

00:06:40,190 --> 00:06:45,470
and mob X is kind of easier to pick up

00:06:42,890 --> 00:06:49,130
for a newbie it has less of a learning

00:06:45,470 --> 00:06:51,230
curve but Redux again has a lot of these

00:06:49,130 --> 00:06:52,610
community support awesome developer

00:06:51,230 --> 00:06:54,800
tools and things like that

00:06:52,610 --> 00:06:58,760
so we chose to pick Redux for our

00:06:54,800 --> 00:07:00,620
application and mob X also is awesome so

00:06:58,760 --> 00:07:03,020
it's just really up to you and of course

00:07:00,620 --> 00:07:04,520
with the advent of Apollo and things

00:07:03,020 --> 00:07:05,750
like that there are other options for

00:07:04,520 --> 00:07:09,260
you to take care of your state

00:07:05,750 --> 00:07:11,600
management as well but do you always

00:07:09,260 --> 00:07:13,460
need state management what are the signs

00:07:11,600 --> 00:07:16,130
that you really need state management

00:07:13,460 --> 00:07:18,230
like they talked about if you have a lot

00:07:16,130 --> 00:07:21,110
of props passed through a hierarchy of

00:07:18,230 --> 00:07:23,180
components it's probably a good time to

00:07:21,110 --> 00:07:25,040
consider state management libraries you

00:07:23,180 --> 00:07:27,020
don't want to keep passing props down

00:07:25,040 --> 00:07:30,110
parent to child to child to trial to

00:07:27,020 --> 00:07:32,540
trial if you have global components

00:07:30,110 --> 00:07:35,000
let's say you have notifications that is

00:07:32,540 --> 00:07:38,210
a good time to use a external state

00:07:35,000 --> 00:07:40,010
management library as well also for

00:07:38,210 --> 00:07:41,990
instance you have user information like

00:07:40,010 --> 00:07:43,850
for example in our app we have patient

00:07:41,990 --> 00:07:46,310
info that we show across multiple

00:07:43,850 --> 00:07:51,530
container components maybe that's a good

00:07:46,310 --> 00:07:53,600
one for you to use Redux or mob X or you

00:07:51,530 --> 00:07:55,970
can use react hooks maybe I haven't

00:07:53,600 --> 00:07:58,040
dived too much into react hooks but with

00:07:55,970 --> 00:08:00,410
the combination of context and react

00:07:58,040 --> 00:08:02,330
talks maybe you can do away with state

00:08:00,410 --> 00:08:05,150
management libraries as well so whatever

00:08:02,330 --> 00:08:07,550
your choice is think about it if you're

00:08:05,150 --> 00:08:09,980
picking a library just play with it a

00:08:07,550 --> 00:08:13,160
little bit and decide which one would

00:08:09,980 --> 00:08:15,650
scale for your application all right

00:08:13,160 --> 00:08:18,770
another question from the panel again

00:08:15,650 --> 00:08:22,100
should I use explore or not I'm a big

00:08:18,770 --> 00:08:23,870
fan of Expo as well and Expo is awesome

00:08:22,100 --> 00:08:27,350
it lets you build react native apps

00:08:23,870 --> 00:08:29,030
super fast so if you're building a rapid

00:08:27,350 --> 00:08:31,910
prototype or if you're building an app

00:08:29,030 --> 00:08:34,130
that needs to go real quick Expo is the

00:08:31,910 --> 00:08:36,830
way to go even in your react native

00:08:34,130 --> 00:08:39,289
official documentation you'll notice

00:08:36,830 --> 00:08:41,390
that they have two ways of doing react

00:08:39,289 --> 00:08:44,780
native you can either use the react

00:08:41,390 --> 00:08:48,170
native CLI or you use the expose CLI so

00:08:44,780 --> 00:08:50,030
it's just up to you some points to think

00:08:48,170 --> 00:08:53,570
about whether you want to use Expo or

00:08:50,030 --> 00:08:55,580
not if you hate any of the build config

00:08:53,570 --> 00:08:57,320
raishin that you have to deal with go

00:08:55,580 --> 00:09:00,200
for Expo you don't have to deal with any

00:08:57,320 --> 00:09:01,970
of that and you use just JavaScript if

00:09:00,200 --> 00:09:04,880
you're someone who doesn't want to touch

00:09:01,970 --> 00:09:07,340
native code you just want a code you

00:09:04,880 --> 00:09:09,380
know JavaScript react native go for Expo

00:09:07,340 --> 00:09:11,450
you won't even have access to the native

00:09:09,380 --> 00:09:14,120
code so you're not gonna touch that no

00:09:11,450 --> 00:09:16,960
Xcode no Android studio life is just

00:09:14,120 --> 00:09:19,730
easy with Expo and you can also publish

00:09:16,960 --> 00:09:23,060
over-the-air updates anytime and it is

00:09:19,730 --> 00:09:25,780
super awesome but there are times when

00:09:23,060 --> 00:09:28,640
you may have to say no to expose wall

00:09:25,780 --> 00:09:31,820
Expo could be restrictive sometimes so

00:09:28,640 --> 00:09:35,090
it's good to know somebody mentioned

00:09:31,820 --> 00:09:36,830
that Expo has a list of things that you

00:09:35,090 --> 00:09:40,160
want to know before you use Expo and

00:09:36,830 --> 00:09:41,960
when to say no to Expo so it is

00:09:40,160 --> 00:09:43,850
restrictive sometimes in the sense like

00:09:41,960 --> 00:09:46,010
let's say you want to use a push

00:09:43,850 --> 00:09:48,320
notification service of your choice

00:09:46,010 --> 00:09:49,760
you can't do that with Expo so if you

00:09:48,320 --> 00:09:51,620
have things like that you may want to

00:09:49,760 --> 00:09:54,410
think about whether expose the right fit

00:09:51,620 --> 00:09:57,050
for your product and it is kind of

00:09:54,410 --> 00:09:59,570
loaded with API is that you may or may

00:09:57,050 --> 00:10:02,210
not use that's just the way it comes out

00:09:59,570 --> 00:10:04,400
it's kind of like a framework so it may

00:10:02,210 --> 00:10:06,800
not be suitable if you have a super lean

00:10:04,400 --> 00:10:10,160
app if that's your aim maybe it may not

00:10:06,800 --> 00:10:11,990
work out and also they are working on it

00:10:10,160 --> 00:10:15,200
and we've talked about it in the panel

00:10:11,990 --> 00:10:16,940
as well not all iOS and Android api's

00:10:15,200 --> 00:10:18,770
are available today but they're doing a

00:10:16,940 --> 00:10:20,510
lot of work towards that so that's

00:10:18,770 --> 00:10:22,790
something to consider as well so if you

00:10:20,510 --> 00:10:23,540
want access to a native feature like

00:10:22,790 --> 00:10:25,520
Bluetooth

00:10:23,540 --> 00:10:27,680
I don't think Expo has support for that

00:10:25,520 --> 00:10:30,830
yet and maybe it'll come in the future

00:10:27,680 --> 00:10:32,510
so before you choose to use Expo or not

00:10:30,830 --> 00:10:34,490
just kind of get your requirements

00:10:32,510 --> 00:10:36,050
nailed down and know what your app

00:10:34,490 --> 00:10:38,080
really needs like what are the native

00:10:36,050 --> 00:10:42,260
features and things that you need to use

00:10:38,080 --> 00:10:43,940
to make that judgment and again the same

00:10:42,260 --> 00:10:45,890
thing where you can't change the native

00:10:43,940 --> 00:10:48,890
code if that's something you really want

00:10:45,890 --> 00:10:51,590
to do maybe expose not something you can

00:10:48,890 --> 00:10:55,040
pick and of course you can detach your

00:10:51,590 --> 00:10:56,570
app from expo anytime but again it comes

00:10:55,040 --> 00:10:59,150
with the cost where you may have to plan

00:10:56,570 --> 00:11:01,820
for some kind of additional coding so

00:10:59,150 --> 00:11:04,160
maybe the navigation changes maybe the

00:11:01,820 --> 00:11:06,440
push notification changes but you need

00:11:04,160 --> 00:11:07,459
to plan for that overall you have your

00:11:06,440 --> 00:11:10,129
choice

00:11:07,459 --> 00:11:11,869
you have Expo with Expo a react native

00:11:10,129 --> 00:11:14,600
app or an app without exposed so it's

00:11:11,869 --> 00:11:16,100
just really depends on your use case and

00:11:14,600 --> 00:11:17,569
your requirements what are the native

00:11:16,100 --> 00:11:21,470
features you need and things like that

00:11:17,569 --> 00:11:25,999
so think about it before you say no or

00:11:21,470 --> 00:11:27,199
yes to Expo all right the next lesson is

00:11:25,999 --> 00:11:29,509
my favorite

00:11:27,199 --> 00:11:34,629
please don't postpone testing your

00:11:29,509 --> 00:11:38,240
Android devices this is these two

00:11:34,629 --> 00:11:41,480
characters who are battling and they're

00:11:38,240 --> 00:11:43,189
wondering nope iOS nope Android nope iOS

00:11:41,480 --> 00:11:46,579
but remember you're building a

00:11:43,189 --> 00:11:48,679
cross-platform application for both iOS

00:11:46,579 --> 00:11:51,350
and Android that is why you pick react

00:11:48,679 --> 00:11:53,269
native if not you would be a iOS

00:11:51,350 --> 00:11:57,829
developer or an Android developer so

00:11:53,269 --> 00:12:01,220
keep that in mind and quit battling from

00:11:57,829 --> 00:12:03,949
from the experience I have areas where I

00:12:01,220 --> 00:12:06,079
actually notice problems is that most of

00:12:03,949 --> 00:12:08,179
the developers that I work with and in

00:12:06,079 --> 00:12:11,269
my team somehow have iOS devices

00:12:08,179 --> 00:12:13,639
including me and then what happens is we

00:12:11,269 --> 00:12:15,649
have our own personal device and we like

00:12:13,639 --> 00:12:18,170
to test on that because it's just easier

00:12:15,649 --> 00:12:20,089
you can deploy it test it and you don't

00:12:18,170 --> 00:12:22,910
have to deal with other devices so that

00:12:20,089 --> 00:12:25,389
is a problem because if you mostly have

00:12:22,910 --> 00:12:28,129
iOS you're gonna forget about Android

00:12:25,389 --> 00:12:30,549
another problem is that developers

00:12:28,129 --> 00:12:33,679
usually run only one emulator at a time

00:12:30,549 --> 00:12:35,749
now the reason for that is also because

00:12:33,679 --> 00:12:39,110
the Android emulators for some reason

00:12:35,749 --> 00:12:41,420
are really slow and I even hear noises

00:12:39,110 --> 00:12:45,259
from my laptop when I open up Android

00:12:41,420 --> 00:12:47,480
studio and that is true I don't know why

00:12:45,259 --> 00:12:49,369
it's just it's just like that and then

00:12:47,480 --> 00:12:51,439
what happens is it kind of reduces the

00:12:49,369 --> 00:12:53,240
developer velocity so we're like a

00:12:51,439 --> 00:12:55,549
closed Android studio close that

00:12:53,240 --> 00:12:58,939
emulator just open the iOS emulator it

00:12:55,549 --> 00:13:01,009
runs smooth and fine it's ok the mistake

00:12:58,939 --> 00:13:06,170
is then you're assuming that it works on

00:13:01,009 --> 00:13:09,110
Android as well so don't do that a tip

00:13:06,170 --> 00:13:12,379
for that would be you know what we do is

00:13:09,110 --> 00:13:14,990
we kind of rotate get your developers to

00:13:12,379 --> 00:13:16,339
sign up and say ok developer a this week

00:13:14,990 --> 00:13:18,980
you're gonna use an android emulator

00:13:16,339 --> 00:13:20,110
developer be this week you're gonna use

00:13:18,980 --> 00:13:22,690
the iOS emulator

00:13:20,110 --> 00:13:24,339
and then by the time the week is over

00:13:22,690 --> 00:13:27,760
just rotate them that way they don't

00:13:24,339 --> 00:13:29,980
feel bad and keep doing that so that way

00:13:27,760 --> 00:13:32,680
you can catch your bugs early on during

00:13:29,980 --> 00:13:34,390
development time at just that stage

00:13:32,680 --> 00:13:37,510
before you even like go and deploy to

00:13:34,390 --> 00:13:39,940
the devices I think some people touch

00:13:37,510 --> 00:13:42,279
this point many third-party libraries

00:13:39,940 --> 00:13:45,160
really don't support Android as well and

00:13:42,279 --> 00:13:47,769
that also is because of the same reason

00:13:45,160 --> 00:13:49,959
that the overall react native experience

00:13:47,769 --> 00:13:53,500
for some reason it's just kind of better

00:13:49,959 --> 00:13:55,660
with iOS so we need to change that at at

00:13:53,500 --> 00:13:57,279
the developer level as well and that's

00:13:55,660 --> 00:13:58,930
gonna change the third-party libraries

00:13:57,279 --> 00:14:01,750
as well because the people coding those

00:13:58,930 --> 00:14:04,089
libraries are doing the same mistakes so

00:14:01,750 --> 00:14:08,500
we want to make sure that we kind of

00:14:04,089 --> 00:14:10,390
treat Android and iOS as equals and test

00:14:08,500 --> 00:14:14,800
Android devices along with your iOS

00:14:10,390 --> 00:14:17,019
devices so some tips one thing that

00:14:14,800 --> 00:14:19,660
really helped us is to automate both our

00:14:17,019 --> 00:14:22,589
iOS and Android releases in the

00:14:19,660 --> 00:14:25,180
beginning we just automated the iOS

00:14:22,589 --> 00:14:27,850
deployments but then we just didn't care

00:14:25,180 --> 00:14:31,660
to automate or Android releases so what

00:14:27,850 --> 00:14:34,570
then happened was we sent emails to our

00:14:31,660 --> 00:14:37,329
testers within the team to just download

00:14:34,570 --> 00:14:39,250
and install the android apk and that was

00:14:37,329 --> 00:14:40,990
an extremely frustrating experience to

00:14:39,250 --> 00:14:44,199
everybody and they just quit testing

00:14:40,990 --> 00:14:46,449
Android so don't be that person spend

00:14:44,199 --> 00:14:49,060
some time and figure out how to automate

00:14:46,449 --> 00:14:51,940
both iOS and Android that way the

00:14:49,060 --> 00:14:55,570
testers feel feel nice to test Android

00:14:51,940 --> 00:14:57,760
as well as well sorry and also maximize

00:14:55,570 --> 00:15:00,699
your devices get your company or your

00:14:57,760 --> 00:15:03,370
team to buy as many devices as they can

00:15:00,699 --> 00:15:05,829
to test especially for Android because

00:15:03,370 --> 00:15:08,260
there's just so many devices that behave

00:15:05,829 --> 00:15:11,459
so differently when you test the code

00:15:08,260 --> 00:15:15,130
for instance the newer Android devices

00:15:11,459 --> 00:15:16,600
require more explicit permissions let's

00:15:15,130 --> 00:15:20,769
say you want to access the photo gallery

00:15:16,600 --> 00:15:22,209
it works well with the older devices but

00:15:20,769 --> 00:15:24,339
then when you go and try this out on a

00:15:22,209 --> 00:15:26,320
newer device you're like oh I have to go

00:15:24,339 --> 00:15:28,390
update my build out Gradle settings to

00:15:26,320 --> 00:15:30,339
give some more permissions so these are

00:15:28,390 --> 00:15:32,890
things you encounter only when you try

00:15:30,339 --> 00:15:33,520
testing on different devices if not you

00:15:32,890 --> 00:15:36,040
would never

00:15:33,520 --> 00:15:38,620
discover those problems so maximize the

00:15:36,040 --> 00:15:41,380
devices and obviously test early and

00:15:38,620 --> 00:15:43,570
often test at the development stage test

00:15:41,380 --> 00:15:45,870
at beta testing stages so just make sure

00:15:43,570 --> 00:15:49,840
you keep testing both the devices

00:15:45,870 --> 00:15:51,610
equally as often as you can and as we

00:15:49,840 --> 00:15:53,830
talked about assigned developers in

00:15:51,610 --> 00:15:55,510
rotation even if they don't like it you

00:15:53,830 --> 00:15:58,710
can rotate them later on so that way you

00:15:55,510 --> 00:16:01,990
catch bugs during the development stage

00:15:58,710 --> 00:16:04,390
bottom line is treat them as equals as

00:16:01,990 --> 00:16:07,480
much as possible that way you give your

00:16:04,390 --> 00:16:10,120
user and native experience on both iOS

00:16:07,480 --> 00:16:13,960
and Android and everybody loves your app

00:16:10,120 --> 00:16:17,260
not just iOS users alright as we're

00:16:13,960 --> 00:16:20,860
talking about testing the next lesson we

00:16:17,260 --> 00:16:23,620
learned is on testing I really like this

00:16:20,860 --> 00:16:25,330
quote by Henry Ford on quality means

00:16:23,620 --> 00:16:27,580
doing it right even when no one is

00:16:25,330 --> 00:16:28,690
looking this is something that really

00:16:27,580 --> 00:16:31,440
rings a bell

00:16:28,690 --> 00:16:33,820
to me about software testing as well

00:16:31,440 --> 00:16:36,190
because we as software developers

00:16:33,820 --> 00:16:38,140
sometimes are overconfident

00:16:36,190 --> 00:16:40,240
we're overconfident about when we can

00:16:38,140 --> 00:16:43,180
finish the project and how cool our code

00:16:40,240 --> 00:16:44,770
is so we may say hey it's gonna take me

00:16:43,180 --> 00:16:46,690
two days to finish this but then it's

00:16:44,770 --> 00:16:48,400
actually going to take two weeks because

00:16:46,690 --> 00:16:50,350
you didn't account for testing you're in

00:16:48,400 --> 00:16:52,660
account for code reviews you just talked

00:16:50,350 --> 00:16:55,900
about your coding and you forgot about

00:16:52,660 --> 00:16:57,730
everything else and that's okay but the

00:16:55,900 --> 00:16:59,170
other problem that software developers

00:16:57,730 --> 00:17:02,230
are notorious for is also being

00:16:59,170 --> 00:17:04,270
overconfident about the code but that

00:17:02,230 --> 00:17:06,450
that's not good you need to test your

00:17:04,270 --> 00:17:09,910
code and make sure it works before you

00:17:06,450 --> 00:17:14,170
are confident about it so for react

00:17:09,910 --> 00:17:16,450
native unit testing we use gest which is

00:17:14,170 --> 00:17:19,450
super cool and based on the state of

00:17:16,450 --> 00:17:22,390
JavaScript survey from 2018 it ranks as

00:17:19,450 --> 00:17:25,630
number one among testing frameworks for

00:17:22,390 --> 00:17:27,610
JavaScript followed by mocha jasmine and

00:17:25,630 --> 00:17:29,680
so many other cool frameworks so make

00:17:27,610 --> 00:17:32,110
sure you write good unit test which is

00:17:29,680 --> 00:17:34,000
like the basic level of testing that you

00:17:32,110 --> 00:17:35,740
need to do for your code before you ship

00:17:34,000 --> 00:17:37,930
it and we've had a great experience

00:17:35,740 --> 00:17:39,970
writing justice for our react native

00:17:37,930 --> 00:17:42,340
projects how many of you use just here

00:17:39,970 --> 00:17:45,550
for react native awesome everybody

00:17:42,340 --> 00:17:47,030
almost great cool the next thing that

00:17:45,550 --> 00:17:49,220
I'd like to touch is end to end

00:17:47,030 --> 00:17:52,310
test we recently started doing that for

00:17:49,220 --> 00:17:54,890
our react native app and we use

00:17:52,310 --> 00:17:56,750
something called detox so detox

00:17:54,890 --> 00:17:59,420
basically tests your mobile app while

00:17:56,750 --> 00:18:02,060
it's running on either a real device or

00:17:59,420 --> 00:18:04,850
an emulator and it interacts with it

00:18:02,060 --> 00:18:07,540
just like a real user so it is super

00:18:04,850 --> 00:18:11,240
awesome and how many of you use detox

00:18:07,540 --> 00:18:14,230
quite a few okay so detox is really cool

00:18:11,240 --> 00:18:16,970
and I highly recommend trying that out

00:18:14,230 --> 00:18:19,610
what it really does is it emulates a

00:18:16,970 --> 00:18:21,410
user testing experience for you and it's

00:18:19,610 --> 00:18:22,850
very similar to you know these

00:18:21,410 --> 00:18:25,610
end-to-end tests that you see for the

00:18:22,850 --> 00:18:27,590
web it it's super awesome because it is

00:18:25,610 --> 00:18:29,950
built specially for mobile and react

00:18:27,590 --> 00:18:32,930
native and it works really well and

00:18:29,950 --> 00:18:35,060
detox is not really a black box test

00:18:32,930 --> 00:18:37,700
they call themselves as a gray box test

00:18:35,060 --> 00:18:40,850
what it does is it allows to test the

00:18:37,700 --> 00:18:43,280
framework from within the app so they

00:18:40,850 --> 00:18:45,500
monitor the app from inside and actually

00:18:43,280 --> 00:18:48,230
synchronize with it so this way it's not

00:18:45,500 --> 00:18:49,970
super flaky and you know you can

00:18:48,230 --> 00:18:52,640
actually trust the detox test to do a

00:18:49,970 --> 00:18:55,190
good job and what does it do for your

00:18:52,640 --> 00:18:57,830
team it saves you tons of time

00:18:55,190 --> 00:19:01,250
it helps automate a complete manual QA

00:18:57,830 --> 00:19:03,860
process and it saves developers testers

00:19:01,250 --> 00:19:06,200
and everybody else a lot of time I've

00:19:03,860 --> 00:19:08,150
noticed that it's best if specifically

00:19:06,200 --> 00:19:10,220
with detox test like everybody who's

00:19:08,150 --> 00:19:12,260
non-technical loves it on our team

00:19:10,220 --> 00:19:14,030
because they can actually see this

00:19:12,260 --> 00:19:16,880
happening right in front of the eyes it

00:19:14,030 --> 00:19:18,980
goes super fast and it emulates as I

00:19:16,880 --> 00:19:21,350
said the user testing experience and

00:19:18,980 --> 00:19:22,970
that is great for you know people who

00:19:21,350 --> 00:19:24,800
are non-technical technical to just look

00:19:22,970 --> 00:19:28,310
at it and be like oh wow it can do that

00:19:24,800 --> 00:19:30,920
that would take me hours to do and also

00:19:28,310 --> 00:19:33,230
it's super simple to write and execute

00:19:30,920 --> 00:19:35,150
it's all written in JavaScript so please

00:19:33,230 --> 00:19:38,210
to check it out for your integration

00:19:35,150 --> 00:19:40,250
tests basically testing makes your ship

00:19:38,210 --> 00:19:42,200
code with a lot of confidence if you

00:19:40,250 --> 00:19:45,530
haven't been writing test this is a good

00:19:42,200 --> 00:19:46,910
time to write write test and you can

00:19:45,530 --> 00:19:49,910
explore several different options

00:19:46,910 --> 00:19:51,860
outside of just and detox and you know

00:19:49,910 --> 00:19:56,630
basically make sure that your code is

00:19:51,860 --> 00:19:58,760
foolproof alright so as we talk about

00:19:56,630 --> 00:20:00,710
testing and then the next step is

00:19:58,760 --> 00:20:04,250
continuous delivery

00:20:00,710 --> 00:20:06,590
so for continuous delivery we use a tool

00:20:04,250 --> 00:20:09,710
called Fastlane how many of you use

00:20:06,590 --> 00:20:12,500
Fastlane a lot of people are awesome so

00:20:09,710 --> 00:20:16,309
maybe like 50% uses Fastlane cool

00:20:12,500 --> 00:20:20,240
I love Fastlane what it does for me is

00:20:16,309 --> 00:20:21,649
it can distribute beta bills and that is

00:20:20,240 --> 00:20:23,600
awesome because I can then add as many

00:20:21,649 --> 00:20:26,390
tests as I want and they can test my

00:20:23,600 --> 00:20:28,970
beta versions and it can also do some of

00:20:26,390 --> 00:20:32,240
the more monotonous tasks like capture

00:20:28,970 --> 00:20:33,890
screenshots code signing and app store

00:20:32,240 --> 00:20:36,380
deployment so these are things that

00:20:33,890 --> 00:20:38,390
developers kind of hate to do and

00:20:36,380 --> 00:20:42,470
Fastlane takes a little bit of burden

00:20:38,390 --> 00:20:44,690
outside of that from you and good news

00:20:42,470 --> 00:20:48,110
is it's cross-platform it can do both

00:20:44,690 --> 00:20:50,600
iOS and Android and tons of our safes so

00:20:48,110 --> 00:20:53,899
I highly recommend checking out Fastlane

00:20:50,600 --> 00:20:56,990
for your continuous delivery and using

00:20:53,899 --> 00:20:59,029
Fastlane we do our beta deployments so

00:20:56,990 --> 00:21:00,230
frequently even like everyday or

00:20:59,029 --> 00:21:04,490
multiple times a day

00:21:00,230 --> 00:21:07,429
and for iOS we use a test flight test

00:21:04,490 --> 00:21:09,590
flight is basically an app which can

00:21:07,429 --> 00:21:11,270
have your beta deployments for iOS it

00:21:09,590 --> 00:21:13,100
will have your version numbers for your

00:21:11,270 --> 00:21:15,710
beta version and it can have like

00:21:13,100 --> 00:21:18,409
release notes and things like that so it

00:21:15,710 --> 00:21:20,450
is basically almost like an app store

00:21:18,409 --> 00:21:23,960
experience but you just develop you just

00:21:20,450 --> 00:21:26,419
install a better app and the other one

00:21:23,960 --> 00:21:29,720
we use for Android is Google Play and we

00:21:26,419 --> 00:21:31,100
also use crashlytics sometimes so the

00:21:29,720 --> 00:21:33,440
thing about Google Play is that

00:21:31,100 --> 00:21:35,809
sometimes for testers it could get

00:21:33,440 --> 00:21:38,270
confusing are they downloading the prod

00:21:35,809 --> 00:21:40,760
app or the beta app so if that kind of

00:21:38,270 --> 00:21:42,649
confusion needs to be eliminated you can

00:21:40,760 --> 00:21:45,740
use crashlytics as an alternative to

00:21:42,649 --> 00:21:49,370
deploy or beta for Android and it is

00:21:45,740 --> 00:21:51,529
also a product by Google so it really

00:21:49,370 --> 00:21:53,000
doesn't make a difference for that so

00:21:51,529 --> 00:21:55,100
I've had a good experience with

00:21:53,000 --> 00:21:57,260
crashlytics because it also shows me

00:21:55,100 --> 00:21:58,970
crash reports you can also check out

00:21:57,260 --> 00:22:01,700
like how the users are using your app

00:21:58,970 --> 00:22:03,460
and user retention and other analytics

00:22:01,700 --> 00:22:06,919
in addition to just using it for

00:22:03,460 --> 00:22:08,840
installing your beta apps so check those

00:22:06,919 --> 00:22:12,260
out for beta deployments that does

00:22:08,840 --> 00:22:13,990
anyone use crashlytics here okay cool

00:22:12,260 --> 00:22:16,240
so yeah

00:22:13,990 --> 00:22:18,970
definitely check that out for deploying

00:22:16,240 --> 00:22:22,929
your better app all right the next

00:22:18,970 --> 00:22:25,779
lesson is picking the right library we

00:22:22,929 --> 00:22:28,570
had a whole talk about open source and

00:22:25,779 --> 00:22:30,789
community in react native and it is

00:22:28,570 --> 00:22:33,279
sometimes challenging to pick the right

00:22:30,789 --> 00:22:35,649
library so there are several times you

00:22:33,279 --> 00:22:37,870
may encounter that hey I don't think

00:22:35,649 --> 00:22:40,690
this is available out of the box there

00:22:37,870 --> 00:22:43,510
are these components don't exist so how

00:22:40,690 --> 00:22:47,380
do you really pick the right library the

00:22:43,510 --> 00:22:49,330
strategy we use is very basic look at

00:22:47,380 --> 00:22:52,240
github see the number of contributors

00:22:49,330 --> 00:22:55,210
look at how active the community is

00:22:52,240 --> 00:22:57,490
around that library and of course some

00:22:55,210 --> 00:22:59,260
community some libraries are awesome but

00:22:57,490 --> 00:23:01,570
they don't have a lot of lot going on

00:22:59,260 --> 00:23:04,390
so if you find libraries like that you

00:23:01,570 --> 00:23:06,820
can fork it or be a contributor to it

00:23:04,390 --> 00:23:09,820
you know so it really depends on what

00:23:06,820 --> 00:23:13,000
you're looking for there is this react

00:23:09,820 --> 00:23:15,880
Native community which has about 70

00:23:13,000 --> 00:23:17,679
repositories today and it is awesome it

00:23:15,880 --> 00:23:22,690
is vetted by the leaders of react native

00:23:17,679 --> 00:23:24,610
and it has all almost I think 50 or 60

00:23:22,690 --> 00:23:27,039
contributors I can't remember the exact

00:23:24,610 --> 00:23:29,830
number but it is super awesome

00:23:27,039 --> 00:23:32,440
the solutions for like camera if you

00:23:29,830 --> 00:23:34,419
want to sound video and many other

00:23:32,440 --> 00:23:36,370
native components that don't exist out

00:23:34,419 --> 00:23:39,970
of the box are available in react native

00:23:36,370 --> 00:23:41,500
community and again if you do happen to

00:23:39,970 --> 00:23:43,600
call your own component if you're

00:23:41,500 --> 00:23:46,809
creating solutions today that don't

00:23:43,600 --> 00:23:49,179
exist try to open-source them and tweet

00:23:46,809 --> 00:23:50,440
about it and you know just talk about it

00:23:49,179 --> 00:23:52,929
a little bit in the community so people

00:23:50,440 --> 00:23:54,789
are aware of it and it becomes a part of

00:23:52,929 --> 00:23:56,980
the react Native community we just want

00:23:54,789 --> 00:23:58,690
to help each other out here and that's

00:23:56,980 --> 00:24:02,049
that's kind of what you need to do when

00:23:58,690 --> 00:24:05,320
you're picking the right library the

00:24:02,049 --> 00:24:07,720
next lesson is upgrades have been hard

00:24:05,320 --> 00:24:10,179
in react native and everybody who's

00:24:07,720 --> 00:24:12,039
working on react native knows that and

00:24:10,179 --> 00:24:14,260
obviously that's also because it's

00:24:12,039 --> 00:24:16,809
rapidly changing and things things are

00:24:14,260 --> 00:24:18,460
going so fast it's got a it's gonna be

00:24:16,809 --> 00:24:20,440
get better after a few months or few

00:24:18,460 --> 00:24:23,320
years but until then we need to work

00:24:20,440 --> 00:24:26,350
with what we have so some tips before

00:24:23,320 --> 00:24:27,879
you upgrade make sure you plan for it

00:24:26,350 --> 00:24:30,549
don't try to do upgrade

00:24:27,879 --> 00:24:32,440
it's just when you feel like or before a

00:24:30,549 --> 00:24:34,989
prod release and things like that always

00:24:32,440 --> 00:24:37,809
make sure your upgrades are planned well

00:24:34,989 --> 00:24:39,579
and you have enough padding time to

00:24:37,809 --> 00:24:42,399
upgrade

00:24:39,579 --> 00:24:46,299
in my experience upgrades have lasted a

00:24:42,399 --> 00:24:48,399
few hours to a few weeks yes and that's

00:24:46,299 --> 00:24:51,039
because sometimes you know a library

00:24:48,399 --> 00:24:53,019
you've used may have gotten deprecated

00:24:51,039 --> 00:24:55,659
for example the navigation experimental

00:24:53,019 --> 00:24:58,209
library I use God applicated and I had

00:24:55,659 --> 00:25:01,059
to rewrite all of that so just plan

00:24:58,209 --> 00:25:03,309
ahead of time and the most important

00:25:01,059 --> 00:25:05,289
thing is upgrade often if you're going

00:25:03,309 --> 00:25:08,229
to wait for six to seven months to

00:25:05,289 --> 00:25:10,690
upgrade you're gonna be having a tough

00:25:08,229 --> 00:25:13,239
time because react native changes so

00:25:10,690 --> 00:25:15,699
rapidly and you don't want to you know

00:25:13,239 --> 00:25:18,069
wait for too long before you upgrade so

00:25:15,699 --> 00:25:20,829
keep up with the latest react native

00:25:18,069 --> 00:25:22,569
releases just just wait for a little bit

00:25:20,829 --> 00:25:24,819
make sure everything's stable and go

00:25:22,569 --> 00:25:28,329
ahead and upgrade so we try to keep our

00:25:24,819 --> 00:25:30,579
app as upgraded as possible and we do it

00:25:28,329 --> 00:25:33,009
as often as possible so we don't run

00:25:30,579 --> 00:25:35,559
into as many issues as we used to a few

00:25:33,009 --> 00:25:39,089
years ago because we just waited to

00:25:35,559 --> 00:25:41,739
upgrade it was just harder back then and

00:25:39,089 --> 00:25:43,539
react native official documentation has

00:25:41,739 --> 00:25:45,879
steps for upgrading so you can check

00:25:43,539 --> 00:25:48,599
that link out which takes you in the

00:25:45,879 --> 00:25:51,279
right direction towards upgrading

00:25:48,599 --> 00:25:53,289
finally about performance obviously last

00:25:51,279 --> 00:25:55,899
but not the least performance is super

00:25:53,289 --> 00:25:58,569
important for your mobile application

00:25:55,899 --> 00:26:00,459
and that's I would say I would say it's

00:25:58,569 --> 00:26:02,739
more important for a mobile app to

00:26:00,459 --> 00:26:04,449
perform better than even a website

00:26:02,739 --> 00:26:07,029
because this is something you put on

00:26:04,449 --> 00:26:08,859
people's phones and if your applications

00:26:07,029 --> 00:26:10,479
gonna be lagging doesn't perform well

00:26:08,859 --> 00:26:12,849
their users are gonna hate it

00:26:10,479 --> 00:26:14,349
and they're gonna uninstall it so keep

00:26:12,849 --> 00:26:16,959
in mind that performance is really

00:26:14,349 --> 00:26:18,879
important and today we had ROM talk

00:26:16,959 --> 00:26:21,639
about performance and the he gave a full

00:26:18,879 --> 00:26:23,229
talk about it so if you didn't see it

00:26:21,639 --> 00:26:25,959
definitely go check it out on YouTube

00:26:23,229 --> 00:26:28,329
and its life some tips on performance

00:26:25,959 --> 00:26:31,359
from what we've done in the past

00:26:28,329 --> 00:26:33,669
if you've using animations make sure

00:26:31,359 --> 00:26:36,339
that you use the prop use native driver

00:26:33,669 --> 00:26:38,440
and set that to true that makes a huge

00:26:36,339 --> 00:26:39,879
difference it's gonna make sure that

00:26:38,440 --> 00:26:40,460
your animations are running on the

00:26:39,879 --> 00:26:43,400
native dry

00:26:40,460 --> 00:26:45,590
instead of the JavaScript site and we

00:26:43,400 --> 00:26:47,570
noticed that our animations were lagging

00:26:45,590 --> 00:26:49,910
and wasn't going as well especially on

00:26:47,570 --> 00:26:52,160
Android and then we realized hey we

00:26:49,910 --> 00:26:54,470
could just use this prop and set that to

00:26:52,160 --> 00:26:55,850
true and it made a whole lot of

00:26:54,470 --> 00:26:57,830
difference so a simple thing like that

00:26:55,850 --> 00:27:00,350
really makes a difference because it's

00:26:57,830 --> 00:27:03,440
gonna run on the native side so keep

00:27:00,350 --> 00:27:05,480
that in mind and also that prop doesn't

00:27:03,440 --> 00:27:07,550
really work out for layouts so if you're

00:27:05,480 --> 00:27:09,890
using flexbox and position properties

00:27:07,550 --> 00:27:11,990
it's not gonna work out but for the most

00:27:09,890 --> 00:27:15,310
part your animations can be switched to

00:27:11,990 --> 00:27:18,830
the native driver if you're using a

00:27:15,310 --> 00:27:20,090
larger list let's say you are having an

00:27:18,830 --> 00:27:22,580
app like Instagram with a lot of

00:27:20,090 --> 00:27:25,040
pictures that you need to load make sure

00:27:22,580 --> 00:27:27,050
you use the recent components which is

00:27:25,040 --> 00:27:29,360
flat list or section lists for larger

00:27:27,050 --> 00:27:30,940
lists they perform really well in

00:27:29,360 --> 00:27:33,710
comparison to some of the older

00:27:30,940 --> 00:27:36,110
components like ListView the reason I'm

00:27:33,710 --> 00:27:38,330
saying this is when you like look into

00:27:36,110 --> 00:27:40,250
Stack Overflow or other places some of

00:27:38,330 --> 00:27:42,290
the code snippets you may come across or

00:27:40,250 --> 00:27:44,240
older so make sure you don't use

00:27:42,290 --> 00:27:47,900
ListView just go for flat lists or

00:27:44,240 --> 00:27:50,480
section lists and if you're using a list

00:27:47,900 --> 00:27:54,170
make sure that every item in the list

00:27:50,480 --> 00:27:56,930
has a key and this is this is applicable

00:27:54,170 --> 00:27:59,510
to react as well and the reason we need

00:27:56,930 --> 00:28:01,910
to do that is if you don't have a unique

00:27:59,510 --> 00:28:03,920
key for every list item reactor's gonna

00:28:01,910 --> 00:28:06,560
keep rear entering every time you add or

00:28:03,920 --> 00:28:09,050
remove an item so make sure you have an

00:28:06,560 --> 00:28:12,500
unique key and this makes a significant

00:28:09,050 --> 00:28:14,690
difference in performance also if you're

00:28:12,500 --> 00:28:16,910
using react class components make sure

00:28:14,690 --> 00:28:19,340
that you bind early and render simple

00:28:16,910 --> 00:28:21,080
what we mean by that is your bindings

00:28:19,340 --> 00:28:24,020
need to happen at the constructor level

00:28:21,080 --> 00:28:26,240
or early on and your render methods just

00:28:24,020 --> 00:28:28,670
need to look simple I don't know if you

00:28:26,240 --> 00:28:31,640
can see that very well and the wrong way

00:28:28,670 --> 00:28:33,380
to do that is to do the binding inside

00:28:31,640 --> 00:28:35,540
the render method so that's not how we

00:28:33,380 --> 00:28:37,370
want to do it and there are so many

00:28:35,540 --> 00:28:40,670
other tips obviously performance is a

00:28:37,370 --> 00:28:42,740
huge aspect and you can also take a look

00:28:40,670 --> 00:28:44,860
at the official react native Doc's

00:28:42,740 --> 00:28:47,210
talks a lot about performance and

00:28:44,860 --> 00:28:48,020
different ways to like profile and

00:28:47,210 --> 00:28:50,510
things like that

00:28:48,020 --> 00:28:54,269
so keep in mind your performance of your

00:28:50,510 --> 00:28:56,459
app is super important all right we read

00:28:54,269 --> 00:28:58,859
the end of the lessons and I'm just

00:28:56,459 --> 00:29:03,479
gonna recap all of them so it stays

00:28:58,859 --> 00:29:05,369
fresh learn react please navigation is

00:29:03,479 --> 00:29:07,019
at a much better spot today it's all

00:29:05,369 --> 00:29:08,849
they're still evolving either go for

00:29:07,019 --> 00:29:11,609
react navigation or react native

00:29:08,849 --> 00:29:13,889
navigation and new state management

00:29:11,609 --> 00:29:15,419
based on your likes and needs if

00:29:13,889 --> 00:29:19,440
necessary if you have a complex

00:29:15,419 --> 00:29:21,509
application expore not expose great but

00:29:19,440 --> 00:29:23,879
does it fit your use case you have to

00:29:21,509 --> 00:29:27,299
you have to decide that

00:29:23,879 --> 00:29:29,609
don't treat Android you know like a bad

00:29:27,299 --> 00:29:33,749
person it's it's cool people be happy if

00:29:29,609 --> 00:29:36,089
you test it early on and testing write

00:29:33,749 --> 00:29:38,070
unit tests write integration tests or as

00:29:36,089 --> 00:29:41,429
many tests as you can to make your app

00:29:38,070 --> 00:29:44,579
super solid continuous delivery use fast

00:29:41,429 --> 00:29:46,739
lane I really like it and picking the

00:29:44,579 --> 00:29:48,749
right library pick the right library and

00:29:46,739 --> 00:29:51,019
also contribute as much as you can to

00:29:48,749 --> 00:29:53,759
the community which is growing and

00:29:51,019 --> 00:29:56,399
upgrade often so you don't complain as

00:29:53,759 --> 00:30:00,509
much about upgrades and focus on

00:29:56,399 --> 00:30:02,339
performance so that's a recap and it's a

00:30:00,509 --> 00:30:04,769
super cool time to be a react native

00:30:02,339 --> 00:30:06,839
developer things are going so great in

00:30:04,769 --> 00:30:08,459
the community it's awesome and you can

00:30:06,839 --> 00:30:10,829
see that with all the enthusiasm that's

00:30:08,459 --> 00:30:12,959
happening at chain react right here I'm

00:30:10,829 --> 00:30:15,479
really honored to be here thank you so

00:30:12,959 --> 00:30:18,089
much and react for having me and if you

00:30:15,479 --> 00:30:20,279
have any questions you I'm here or you

00:30:18,089 --> 00:30:22,210
can even tweet me whatever thank you so

00:30:20,279 --> 00:30:25,350
much thank you

00:30:22,210 --> 00:30:38,640
[Applause]

00:30:25,350 --> 00:30:38,640

YouTube URL: https://www.youtube.com/watch?v=wj3xN_fSQ10


