Title: Chain React 2019 - Mike Grabowski - The State of React Native Tooling
Publication date: 2019-08-06
Playlist: Chain React 2019
Description: 
	React Native CLI has been extracted out of the main repository a while ago, as a part of ongoing Lean Core effort. We have merged more than 100 PRs since then and the number is growing. We also shipped a ton of improvements with other exciting features on the roadmap. In this talk, I am going to give you an update where we are, what are the highlights from past few months and what you can expect from the future.

https://github.com/react-native-community/react-native-cli
Captions: 
	00:00:11,450 --> 00:00:18,060
alright hello everybody how are you it's

00:00:16,320 --> 00:00:20,220
it's nice to be back in Portland

00:00:18,060 --> 00:00:22,140
you know I'm traveling every time to us

00:00:20,220 --> 00:00:24,539
for a conference and I think this is the

00:00:22,140 --> 00:00:29,310
best city I've been so far I'm sorry if

00:00:24,539 --> 00:00:30,840
anybody's from California actually I

00:00:29,310 --> 00:00:33,180
started recognizing some of the streets

00:00:30,840 --> 00:00:35,399
the weather kind of surprised me this

00:00:33,180 --> 00:00:37,500
year but I think so right so this is

00:00:35,399 --> 00:00:41,370
this all you've been waiting for this is

00:00:37,500 --> 00:00:43,260
the the COI 101 the ultimate COI talk

00:00:41,370 --> 00:00:45,140
that you've been waiting for about the

00:00:43,260 --> 00:00:47,610
past the present and the future

00:00:45,140 --> 00:00:49,350
including a lot of undocumented stuff

00:00:47,610 --> 00:00:52,559
actually that's everything pretty much

00:00:49,350 --> 00:00:55,079
so I want you to come back from chain

00:00:52,559 --> 00:00:57,270
react to your colleagues and tell them

00:00:55,079 --> 00:01:00,510
you know I now mastered the react native

00:00:57,270 --> 00:01:03,300
tooling hell yeah so let's get started

00:01:00,510 --> 00:01:06,240
we'll see how that goes so a couple of

00:01:03,300 --> 00:01:08,850
words about me I'm a core contributor to

00:01:06,240 --> 00:01:10,920
react native I'm on a react native team

00:01:08,850 --> 00:01:15,240
I'm helping them with their releases and

00:01:10,920 --> 00:01:17,369
I'm also working on the CLI I'm also

00:01:15,240 --> 00:01:19,560
co-founder and CEO of Cole stack this is

00:01:17,369 --> 00:01:21,509
the company we found it the does really

00:01:19,560 --> 00:01:23,670
react native we help companies around

00:01:21,509 --> 00:01:25,530
the world she reacts react products and

00:01:23,670 --> 00:01:27,869
we also help you in the open-source

00:01:25,530 --> 00:01:30,329
community via the contributions that we

00:01:27,869 --> 00:01:32,970
make and as they said I'm also a petrol

00:01:30,329 --> 00:01:35,040
head I got a car and I'm racing and

00:01:32,970 --> 00:01:36,869
something are really proud of I just got

00:01:35,040 --> 00:01:39,300
my degree after seven years so that's

00:01:36,869 --> 00:01:45,400
that's really amazing

00:01:39,300 --> 00:01:52,720
yeah amazing I use this applause to

00:01:45,400 --> 00:01:54,820
adjust that all right so let me start

00:01:52,720 --> 00:01:57,940
with a story that happens to me a while

00:01:54,820 --> 00:01:59,140
back ago I have analyzed a lot that's me

00:01:57,940 --> 00:02:01,420
on the picture by the way it's pretty

00:01:59,140 --> 00:02:04,000
cool I traveled to many conferences

00:02:01,420 --> 00:02:06,430
especially where Native developers are

00:02:04,000 --> 00:02:08,350
hanging out I do like converting them to

00:02:06,430 --> 00:02:11,440
JavaScript which for some reason they

00:02:08,350 --> 00:02:13,600
don't like you know usually nobody cares

00:02:11,440 --> 00:02:16,360
they just move on but on the last

00:02:13,600 --> 00:02:20,440
conference in track somebody did show up

00:02:16,360 --> 00:02:22,660
and I asked him like how does it feel to

00:02:20,440 --> 00:02:24,550
develop react native for you coming from

00:02:22,660 --> 00:02:27,220
the iOS background and what he told me

00:02:24,550 --> 00:02:29,440
was that I just don't think it's stable

00:02:27,220 --> 00:02:31,330
enough and I'm like oh no again this

00:02:29,440 --> 00:02:31,750
kind of discussion is happening over and

00:02:31,330 --> 00:02:33,580
over

00:02:31,750 --> 00:02:36,520
I know react native is not one point X

00:02:33,580 --> 00:02:39,220
yet who cares so I asked him to

00:02:36,520 --> 00:02:41,440
elaborate on that a bit more and what

00:02:39,220 --> 00:02:43,090
it's only is that he had a few issues

00:02:41,440 --> 00:02:45,970
including you know that the linking of a

00:02:43,090 --> 00:02:49,030
dependency the built-in command didn't

00:02:45,970 --> 00:02:51,100
work for him reliably and being an iOS

00:02:49,030 --> 00:02:51,670
developer he also had no idea what that

00:02:51,100 --> 00:02:54,370
really was

00:02:51,670 --> 00:02:56,350
and obviously as soon as they launched

00:02:54,370 --> 00:02:57,040
they got a red screen with some

00:02:56,350 --> 00:02:58,959
stacktrace

00:02:57,040 --> 00:03:02,470
they tried to debug it it took them a

00:02:58,959 --> 00:03:04,150
while and in the meantime when a new

00:03:02,470 --> 00:03:06,070
react native version got released they

00:03:04,150 --> 00:03:08,230
wanted to upgrade and they spent quite

00:03:06,070 --> 00:03:09,580
some doing that and then they realized

00:03:08,230 --> 00:03:11,799
they also need to upgrade some of the

00:03:09,580 --> 00:03:13,420
other dependencies so eventually they

00:03:11,799 --> 00:03:17,010
just didn't releasing the opposites and

00:03:13,420 --> 00:03:19,030
they didn't hop on the latest cycle and

00:03:17,010 --> 00:03:21,810
please raise your hand if this sounds

00:03:19,030 --> 00:03:25,060
like you're getting started experience

00:03:21,810 --> 00:03:26,260
see I can say that this sounds pretty

00:03:25,060 --> 00:03:29,410
much like my getting started experience

00:03:26,260 --> 00:03:33,180
I started when the react native was 0.5

00:03:29,410 --> 00:03:35,590
or 6 and that was quite experienced and

00:03:33,180 --> 00:03:37,360
as a result you know I think we've

00:03:35,590 --> 00:03:40,450
learned how to deal with these things

00:03:37,360 --> 00:03:43,120
over time by either another writing code

00:03:40,450 --> 00:03:44,560
that we knew was expected to break or by

00:03:43,120 --> 00:03:46,750
not using the libraries that we knew

00:03:44,560 --> 00:03:49,000
were not going to work we subconsciously

00:03:46,750 --> 00:03:52,209
started making decisions that we've

00:03:49,000 --> 00:03:54,939
learned were guaranteed to get us there

00:03:52,209 --> 00:03:57,489
but nobody said that this that way was

00:03:54,939 --> 00:04:00,280
the most efficient one so let's now take

00:03:57,489 --> 00:04:01,959
a look at the CLI this is a bunch of

00:04:00,280 --> 00:04:04,780
useful commands and functionalities it's

00:04:01,959 --> 00:04:06,370
it's beautiful right I mean when I'm

00:04:04,780 --> 00:04:08,980
showing this to my girlfriend she's like

00:04:06,370 --> 00:04:11,109
I have no idea why you like this but for

00:04:08,980 --> 00:04:13,299
us engineers I feel like that the

00:04:11,109 --> 00:04:15,700
tooling is kind of something that makes

00:04:13,299 --> 00:04:18,669
us really happy but the CLI has a

00:04:15,700 --> 00:04:21,549
problem it's a kitchen sink of different

00:04:18,669 --> 00:04:23,919
features and they are all 80% done and

00:04:21,549 --> 00:04:26,620
now I completely made up this number but

00:04:23,919 --> 00:04:28,810
here is the thing it requires some

00:04:26,620 --> 00:04:31,479
effort to get to that premium level of

00:04:28,810 --> 00:04:34,050
polish that provides comprehensive and

00:04:31,479 --> 00:04:36,910
reliable experience for react native

00:04:34,050 --> 00:04:38,050
just look at the output on screen it

00:04:36,910 --> 00:04:39,849
actually provides a lot of useful

00:04:38,050 --> 00:04:41,680
information it's just that the first

00:04:39,849 --> 00:04:44,229
time you see it you are like what's

00:04:41,680 --> 00:04:45,639
going on and if only you know there was

00:04:44,229 --> 00:04:49,000
some documentation to guide us through

00:04:45,639 --> 00:04:51,370
this process and here is the here's the

00:04:49,000 --> 00:04:52,990
thing we and I'm speaking for me and my

00:04:51,370 --> 00:04:55,900
friends from the react Native community

00:04:52,990 --> 00:04:58,030
are biased you know we've been into many

00:04:55,900 --> 00:05:01,449
issues with react native over time and

00:04:58,030 --> 00:05:03,150
we learned how to mitigate them for

00:05:01,449 --> 00:05:06,430
example I know that many of my friends

00:05:03,150 --> 00:05:08,680
are not using react native link but they

00:05:06,430 --> 00:05:10,419
are linked in libraries manually however

00:05:08,680 --> 00:05:12,669
react native link is still the

00:05:10,419 --> 00:05:15,039
recommended way of doing that so it's a

00:05:12,669 --> 00:05:16,750
bit unfair and at the other side it also

00:05:15,039 --> 00:05:18,699
makes the command itself untrustworthy

00:05:16,750 --> 00:05:21,849
because it doesn't work reliably for

00:05:18,699 --> 00:05:24,520
everybody to use it and also it brings

00:05:21,849 --> 00:05:28,330
me to my next point which is you know

00:05:24,520 --> 00:05:30,280
people are whispering like like you know

00:05:28,330 --> 00:05:32,409
there is this kid on the block that's

00:05:30,280 --> 00:05:34,150
been you know hitting with the marketing

00:05:32,409 --> 00:05:36,070
just ride into the shortcomings of react

00:05:34,150 --> 00:05:38,110
native like hey we got great Doc's we

00:05:36,070 --> 00:05:40,780
got great UI kit like everything's so

00:05:38,110 --> 00:05:42,400
great about us so you start thinking

00:05:40,780 --> 00:05:44,919
that if the if the tools they have are

00:05:42,400 --> 00:05:47,139
great and the UI kit they have is great

00:05:44,919 --> 00:05:48,759
then the framework itself must be fast

00:05:47,139 --> 00:05:52,270
performing and ready to use for me right

00:05:48,759 --> 00:05:53,889
now at this point after a spreading this

00:05:52,270 --> 00:05:55,810
apocalyptic state of you know the

00:05:53,889 --> 00:05:58,060
tooling and even showing the forbidden

00:05:55,810 --> 00:06:01,270
frameworks here let me make one thing

00:05:58,060 --> 00:06:02,590
extremely clear we are all good this is

00:06:01,270 --> 00:06:03,610
already happening what I will and

00:06:02,590 --> 00:06:05,340
actually that's what I'll be talking

00:06:03,610 --> 00:06:08,910
about today

00:06:05,340 --> 00:06:11,699
my talk so a few months ago we have move

00:06:08,910 --> 00:06:14,639
out the CLI to the new home under under

00:06:11,699 --> 00:06:16,830
their link or effort and while doing

00:06:14,639 --> 00:06:18,720
that we have quickly learned that there

00:06:16,830 --> 00:06:20,340
is a bunch of issues that need to be

00:06:18,720 --> 00:06:22,560
fixed as soon as possible

00:06:20,340 --> 00:06:24,330
from really trivial mistakes such as

00:06:22,560 --> 00:06:26,760
mixed up license headers throughout the

00:06:24,330 --> 00:06:28,590
code from our sea view ones such as you

00:06:26,760 --> 00:06:31,260
know the insanely long starts up time or

00:06:28,590 --> 00:06:33,030
maybe this security header from rehab

00:06:31,260 --> 00:06:37,620
which I've just learned about like a few

00:06:33,030 --> 00:06:39,510
months ago so me t mikey and a somatic

00:06:37,620 --> 00:06:41,430
my friends of course tag and react

00:06:39,510 --> 00:06:44,160
native community members felt like it

00:06:41,430 --> 00:06:46,350
was our responsibility to quickly step

00:06:44,160 --> 00:06:48,510
up and make the CLI usable and great

00:06:46,350 --> 00:06:51,240
again and in fact we have already tried

00:06:48,510 --> 00:06:53,550
that in the past with our own to control

00:06:51,240 --> 00:06:55,110
which was an alternative to metro for

00:06:53,550 --> 00:06:57,600
bundling react native apps of web pack

00:06:55,110 --> 00:06:58,860
so we were prepared to face that we knew

00:06:57,600 --> 00:07:00,630
what does it mean to actually start

00:06:58,860 --> 00:07:04,949
working on the CLI we've ran through

00:07:00,630 --> 00:07:07,020
this so today I want to highlight some

00:07:04,949 --> 00:07:09,510
of the areas that we have focused by

00:07:07,020 --> 00:07:12,030
working on the v2 of the CLI in no

00:07:09,510 --> 00:07:14,520
particular order I believe you know

00:07:12,030 --> 00:07:17,550
these are the key traits that define the

00:07:14,520 --> 00:07:19,830
command line tool and guarantee the

00:07:17,550 --> 00:07:21,690
ultimate developer experience and see

00:07:19,830 --> 00:07:23,700
I'm using ultimate all over that's

00:07:21,690 --> 00:07:24,810
probably because of B and W if you know

00:07:23,700 --> 00:07:28,110
they have the ultimate driving

00:07:24,810 --> 00:07:33,419
experience so I'm kind of virtual head

00:07:28,110 --> 00:07:35,370
inside out alright so if you are like me

00:07:33,419 --> 00:07:37,889
you know if you first look at the

00:07:35,370 --> 00:07:40,530
appearance of the tool you kind of start

00:07:37,889 --> 00:07:42,360
judging the quality of it you know you

00:07:40,530 --> 00:07:45,020
see a nice tool nice log in you think

00:07:42,360 --> 00:07:47,460
this is right I want to use it

00:07:45,020 --> 00:07:49,800
unfortunately the CLI didn't do well in

00:07:47,460 --> 00:07:51,780
that regard in the past you would get a

00:07:49,800 --> 00:07:53,160
whole different experience depending on

00:07:51,780 --> 00:07:55,440
the command you were interacting with

00:07:53,160 --> 00:07:57,780
and the developer who actually made it

00:07:55,440 --> 00:07:59,099
so there would be some commands having a

00:07:57,780 --> 00:08:01,080
really nice output that a lot of

00:07:59,099 --> 00:08:02,510
information and some commands having

00:08:01,080 --> 00:08:04,770
literally nothing at all

00:08:02,510 --> 00:08:07,500
for example the C of bundle identifier

00:08:04,770 --> 00:08:10,530
or one of the most people are issues

00:08:07,500 --> 00:08:12,240
here you know has been the result of a

00:08:10,530 --> 00:08:15,810
poor error handling experience nothing

00:08:12,240 --> 00:08:18,870
more than that so the fix was really

00:08:15,810 --> 00:08:19,210
easy and involved just cut out returning

00:08:18,870 --> 00:08:20,710
error

00:08:19,210 --> 00:08:22,960
from a function as soon as the error

00:08:20,710 --> 00:08:25,240
happened otherwise we were trying to

00:08:22,960 --> 00:08:27,550
parse an iOS project that wasn't

00:08:25,240 --> 00:08:29,440
compiled and so the error was happening

00:08:27,550 --> 00:08:31,300
swallowing the real reason now I know

00:08:29,440 --> 00:08:33,159
that these are messages don't look nice

00:08:31,300 --> 00:08:35,620
and the error is not really like the

00:08:33,159 --> 00:08:37,479
color is really hard to see but this was

00:08:35,620 --> 00:08:39,729
in the middle of our work on this

00:08:37,479 --> 00:08:41,469
feature we did it like a while back ago

00:08:39,729 --> 00:08:43,539
so it was impossible for me to do this

00:08:41,469 --> 00:08:44,950
screenshot one more time however you

00:08:43,539 --> 00:08:46,680
know it kind of proves the point you can

00:08:44,950 --> 00:08:50,020
see the error message is much better

00:08:46,680 --> 00:08:51,940
maybe you can read it maybe not but at

00:08:50,020 --> 00:08:55,690
least you get the real error message

00:08:51,940 --> 00:08:56,860
instead of the CF bundle identifier so

00:08:55,690 --> 00:09:00,100
while working on it we have also

00:08:56,860 --> 00:09:02,320
enrolled our own logger you know we use

00:09:00,100 --> 00:09:04,480
it across the CLI to generate the same

00:09:02,320 --> 00:09:06,760
output regardless of the command so it

00:09:04,480 --> 00:09:08,830
looks like a unified end product and

00:09:06,760 --> 00:09:10,810
it's a part of the public interface of

00:09:08,830 --> 00:09:14,320
the CLI so if you are ever going to work

00:09:10,810 --> 00:09:16,149
on the CLI or commands feel free to use

00:09:14,320 --> 00:09:18,550
that to kind of jump straight on to the

00:09:16,149 --> 00:09:21,430
look and feel that we hire and we are

00:09:18,550 --> 00:09:23,380
building for the CLI we have also

00:09:21,430 --> 00:09:25,690
reworked the error handling with better

00:09:23,380 --> 00:09:27,459
error messages and stack traces and we

00:09:25,690 --> 00:09:29,860
have also added verbose mode and I think

00:09:27,459 --> 00:09:31,240
this is huge if this creature doesn't

00:09:29,860 --> 00:09:32,890
make you convinced don't worry I got a

00:09:31,240 --> 00:09:34,899
bunch of other videos to kind of show

00:09:32,890 --> 00:09:36,520
how it works in production but I think

00:09:34,899 --> 00:09:38,470
it's really nice because now I look at

00:09:36,520 --> 00:09:41,829
the CLI and I'm like ok I got an error I

00:09:38,470 --> 00:09:44,500
know how to fix it always I know where

00:09:41,829 --> 00:09:47,079
to look for it another thing is the

00:09:44,500 --> 00:09:48,550
documentation like it's crucial you know

00:09:47,079 --> 00:09:51,040
your tool could be the best in the world

00:09:48,550 --> 00:09:52,990
could have a lot of great features but

00:09:51,040 --> 00:09:54,760
there was little value that your users

00:09:52,990 --> 00:09:56,709
will have if they are not documented at

00:09:54,760 --> 00:09:59,560
all and this has been the case with the

00:09:56,709 --> 00:10:01,540
CLI for a really long time many of the

00:09:59,560 --> 00:10:04,180
features like the ones on screen were

00:10:01,540 --> 00:10:05,920
not documented at all they were only

00:10:04,180 --> 00:10:08,170
known to a very small number of

00:10:05,920 --> 00:10:10,180
developers that had enough time to dig

00:10:08,170 --> 00:10:13,510
through the code and learn about them

00:10:10,180 --> 00:10:15,279
the hard way like mono repo support or

00:10:13,510 --> 00:10:16,959
disabling linking when I was browsing

00:10:15,279 --> 00:10:19,209
the internet I was finding a lot of

00:10:16,959 --> 00:10:21,370
questions like that and I was repeating

00:10:19,209 --> 00:10:24,640
the same answer all over but we never

00:10:21,370 --> 00:10:27,040
had a proper place to describe these in

00:10:24,640 --> 00:10:28,540
a sort of guide section and there were

00:10:27,040 --> 00:10:29,980
also a few tutorials available online

00:10:28,540 --> 00:10:32,050
and now I'm really happy that the

00:10:29,980 --> 00:10:33,070
community is stepping up and and kind of

00:10:32,050 --> 00:10:35,620
making this Matthew

00:10:33,070 --> 00:10:38,410
for us however I don't think they should

00:10:35,620 --> 00:10:40,480
be do you recommend it source for

00:10:38,410 --> 00:10:42,100
learning about the fundamental features

00:10:40,480 --> 00:10:45,580
of the CLI and react native there should

00:10:42,100 --> 00:10:47,740
be a place for that so we decided to

00:10:45,580 --> 00:10:49,360
take documentation seriously having a

00:10:47,740 --> 00:10:51,640
well documented set of features and

00:10:49,360 --> 00:10:53,740
ideas can be really useful to better

00:10:51,640 --> 00:10:56,290
understand the CLI and be able to use it

00:10:53,740 --> 00:10:58,690
efficiently and it's also kind of handy

00:10:56,290 --> 00:11:00,130
for contributing so it's a nice side

00:10:58,690 --> 00:11:01,660
effect that we made it and now we can

00:11:00,130 --> 00:11:03,640
ask you for your help

00:11:01,660 --> 00:11:05,080
and so you now at least know how to even

00:11:03,640 --> 00:11:07,750
further the project because that wasn't

00:11:05,080 --> 00:11:09,580
really able to see in the past so that's

00:11:07,750 --> 00:11:11,010
why the CLI has a new documentation for

00:11:09,580 --> 00:11:13,330
every finger like literally everything

00:11:11,010 --> 00:11:15,340
most importantly we have described the

00:11:13,330 --> 00:11:17,050
notion of a platform plugin project and

00:11:15,340 --> 00:11:19,390
i dependency things that we used to

00:11:17,050 --> 00:11:21,250
confused even me a while back ago and

00:11:19,390 --> 00:11:23,200
I'd like to use this slide as an

00:11:21,250 --> 00:11:25,240
opportunity to say thanks to Tim Mikey

00:11:23,200 --> 00:11:26,260
my friend who was working with me if you

00:11:25,240 --> 00:11:28,600
have ever worked with him in the

00:11:26,260 --> 00:11:30,310
open-source or if you ever get to work

00:11:28,600 --> 00:11:32,830
with him in the open-source he you know

00:11:30,310 --> 00:11:35,350
he is passionate about two things unit

00:11:32,830 --> 00:11:37,360
tests and documentation so that's what

00:11:35,350 --> 00:11:41,260
we got right in the CLI like he just

00:11:37,360 --> 00:11:42,940
couldn't accept the epr without these so

00:11:41,260 --> 00:11:44,530
platform is a package that ships with

00:11:42,940 --> 00:11:46,240
code that allows you to extend react

00:11:44,530 --> 00:11:48,340
native of a platform so Fink react

00:11:46,240 --> 00:11:50,260
native windows has windows react native

00:11:48,340 --> 00:11:53,040
has android and i was built in will

00:11:50,260 --> 00:11:55,240
cover that in details a bit in a second

00:11:53,040 --> 00:11:57,220
plugin for example on the other hand

00:11:55,240 --> 00:11:59,260
this is a pact that extends CLI with

00:11:57,220 --> 00:12:00,670
additional functionality if you have

00:11:59,260 --> 00:12:02,200
been using gree and if you have been

00:12:00,670 --> 00:12:05,230
using the great tools that infinite red

00:12:02,200 --> 00:12:07,030
is making they are extending the CLI

00:12:05,230 --> 00:12:09,250
with with some with some some great

00:12:07,030 --> 00:12:11,350
commands and that's been always possible

00:12:09,250 --> 00:12:13,150
but now it's it's properly documented

00:12:11,350 --> 00:12:14,770
and no longer you know considered

00:12:13,150 --> 00:12:16,420
private API back in the day you had to

00:12:14,770 --> 00:12:17,680
reach out to somebody like me and I

00:12:16,420 --> 00:12:21,580
would have to tell you here's how we can

00:12:17,680 --> 00:12:23,890
do it dependency on the other hand is a

00:12:21,580 --> 00:12:26,050
package that contains react native code

00:12:23,890 --> 00:12:28,420
to be linked so it's not a NPM

00:12:26,050 --> 00:12:30,100
dependency it's more like a dependency

00:12:28,420 --> 00:12:31,420
that has you know native iOS or a native

00:12:30,100 --> 00:12:34,510
Android code that you might be linking

00:12:31,420 --> 00:12:36,490
in the future in project that's nothing

00:12:34,510 --> 00:12:37,840
but your react native project so it

00:12:36,490 --> 00:12:39,700
contains information about all the

00:12:37,840 --> 00:12:41,050
platforms all the dependencies basically

00:12:39,700 --> 00:12:42,790
the whole environment that you're

00:12:41,050 --> 00:12:44,800
working with and we'll also talk about

00:12:42,790 --> 00:12:46,150
that in a second so I'm just listing

00:12:44,800 --> 00:12:49,450
these down so yeah

00:12:46,150 --> 00:12:51,820
same page before we continue so the

00:12:49,450 --> 00:12:53,830
performance now it depends pretty

00:12:51,820 --> 00:12:55,690
imagine the way you are interacting with

00:12:53,830 --> 00:13:00,640
the CLI like for example if you are

00:12:55,690 --> 00:13:02,260
running run iOS or start command the the

00:13:00,640 --> 00:13:04,930
kind of the core of the command will

00:13:02,260 --> 00:13:06,760
take like 99% of the execution time so

00:13:04,930 --> 00:13:08,950
any improvements that we do to the CLI

00:13:06,760 --> 00:13:10,720
itself will you will not even notice

00:13:08,950 --> 00:13:14,080
it's gonna be fast anyway I mean he's

00:13:10,720 --> 00:13:16,510
gonna be slow anyway however one of the

00:13:14,080 --> 00:13:18,490
biggest performance bottlenecks was the

00:13:16,510 --> 00:13:22,720
performance startup which was caused by

00:13:18,490 --> 00:13:24,640
two things the use of Babel register and

00:13:22,720 --> 00:13:26,560
now the reason for that is that the

00:13:24,640 --> 00:13:29,800
react native CLI being part of react

00:13:26,560 --> 00:13:31,540
native repo was kind of following the

00:13:29,800 --> 00:13:33,310
same architecture in the same set up and

00:13:31,540 --> 00:13:35,980
as you know react native itself is not

00:13:33,310 --> 00:13:37,510
transpiled and dependencies we we create

00:13:35,980 --> 00:13:39,430
are not transpiled as well everything

00:13:37,510 --> 00:13:41,920
happens during runtime so we were using

00:13:39,430 --> 00:13:44,440
Babel register to do that during runtime

00:13:41,920 --> 00:13:47,140
as well on the on the on the client side

00:13:44,440 --> 00:13:48,940
and we were also processing all node

00:13:47,140 --> 00:13:50,860
modules dependencies in order to know

00:13:48,940 --> 00:13:53,050
what native dependencies you have and

00:13:50,860 --> 00:13:55,300
what we should link so if you had react

00:13:53,050 --> 00:13:56,800
native webview and other modules in your

00:13:55,300 --> 00:13:58,960
package Jason we will have to go through

00:13:56,800 --> 00:14:02,170
the whole node modules folder and find

00:13:58,960 --> 00:14:04,690
them so extracting the CLI out of the

00:14:02,170 --> 00:14:06,910
react native lifted a lot of constraints

00:14:04,690 --> 00:14:08,860
and let us roll a whole new yorky

00:14:06,910 --> 00:14:11,230
texture to make that even better so we

00:14:08,860 --> 00:14:12,790
ended up changing the the published step

00:14:11,230 --> 00:14:15,010
and transpiling the code ahead of time

00:14:12,790 --> 00:14:17,170
and that makes the code load almost

00:14:15,010 --> 00:14:18,490
instantly for you without making making

00:14:17,170 --> 00:14:20,890
the CLI experience much more enjoyable

00:14:18,490 --> 00:14:22,360
and as a result we have observed a

00:14:20,890 --> 00:14:24,580
dramatic performance improvement during

00:14:22,360 --> 00:14:27,730
a startup like two seconds faster and

00:14:24,580 --> 00:14:29,470
now then we also shaved the the startup

00:14:27,730 --> 00:14:31,720
time by an additional half a second so

00:14:29,470 --> 00:14:36,090
from free like now the startup time

00:14:31,720 --> 00:14:39,760
takes 0.2 seconds so that's like instant

00:14:36,090 --> 00:14:41,620
so it was very easy to set up you know

00:14:39,760 --> 00:14:43,480
and I'd like to encourage you to do the

00:14:41,620 --> 00:14:45,070
same for your libraries as well right

00:14:43,480 --> 00:14:46,870
now we need to transpile them during the

00:14:45,070 --> 00:14:48,700
runtime but I'd really love to get us

00:14:46,870 --> 00:14:50,470
closer to the reality ecosystem and just

00:14:48,700 --> 00:14:51,970
kind of encourage us to do that before

00:14:50,470 --> 00:14:53,350
we publish to the module so as you can

00:14:51,970 --> 00:14:55,540
see the performance improvements are

00:14:53,350 --> 00:14:57,850
right there for us it was more than 2

00:14:55,540 --> 00:14:59,800
seconds so we can now multiply that by

00:14:57,850 --> 00:15:01,389
the amount of time you open the seal

00:14:59,800 --> 00:15:03,100
and I think it's gonna be like one day

00:15:01,389 --> 00:15:06,850
per year depending on the amount of

00:15:03,100 --> 00:15:08,290
projects you have another thing is the

00:15:06,850 --> 00:15:12,429
configuration and that's my favorite

00:15:08,290 --> 00:15:14,079
part because I messed it up so it's been

00:15:12,429 --> 00:15:16,299
implemented in react native in a really

00:15:14,079 --> 00:15:18,600
complicated way so don't worry if the

00:15:16,299 --> 00:15:21,610
following slides make no sense to you

00:15:18,600 --> 00:15:23,799
there are three ways to alter the CLI

00:15:21,610 --> 00:15:25,660
behavior like how many of you have heard

00:15:23,799 --> 00:15:26,549
of the iron CLI config please raise your

00:15:25,660 --> 00:15:30,339
hand

00:15:26,549 --> 00:15:31,689
write the Metro config I see the

00:15:30,339 --> 00:15:34,029
Facebook people raising their hands

00:15:31,689 --> 00:15:37,929
that's good and the RMP I'm in

00:15:34,029 --> 00:15:40,420
package.json okay that's that's also

00:15:37,929 --> 00:15:42,399
quite quite impressive anyway see like

00:15:40,420 --> 00:15:45,489
that was probably 10% of the audience so

00:15:42,399 --> 00:15:47,319
I think that kind of brings me to the

00:15:45,489 --> 00:15:49,480
brings us to the point that these things

00:15:47,319 --> 00:15:51,009
are not documented properly and are kind

00:15:49,480 --> 00:15:52,989
of mysterious

00:15:51,009 --> 00:15:54,549
so whoever uses them is like wow you

00:15:52,989 --> 00:15:58,209
have some hacks in your codebase what

00:15:54,549 --> 00:16:00,189
are you doing so I see somebody making

00:15:58,209 --> 00:16:03,819
photo please don't this is gum I will

00:16:00,189 --> 00:16:05,709
show you the alternative in a second so

00:16:03,819 --> 00:16:07,839
first there was desirous you like config

00:16:05,709 --> 00:16:09,579
I guess so I have three examples of each

00:16:07,839 --> 00:16:12,610
file and I'm gonna show you how we can

00:16:09,579 --> 00:16:14,920
use typescript because it's cool so this

00:16:12,610 --> 00:16:17,199
is how you can integrate typescript with

00:16:14,920 --> 00:16:19,389
the Aaron CLI config and now here's the

00:16:17,199 --> 00:16:21,189
confusing part when I started working

00:16:19,389 --> 00:16:23,379
with react native my first thought was

00:16:21,189 --> 00:16:27,040
Aaron CLI is for configuring to react

00:16:23,379 --> 00:16:28,660
native CLI it's not it's for metro but

00:16:27,040 --> 00:16:31,240
back in a day when a match was started

00:16:28,660 --> 00:16:32,589
it was part of react native Metro was

00:16:31,240 --> 00:16:33,879
the first command you can think of mesh

00:16:32,589 --> 00:16:35,829
was the first command of the react

00:16:33,879 --> 00:16:37,899
native CLI so back in the day when the

00:16:35,829 --> 00:16:39,610
team made the metro and the config it

00:16:37,899 --> 00:16:43,899
was the same thing so it's just the

00:16:39,610 --> 00:16:46,149
naming confusion then after they made

00:16:43,899 --> 00:16:48,040
Metro a standalone project they created

00:16:46,149 --> 00:16:50,019
the wrong configuration mechanism on top

00:16:48,040 --> 00:16:51,490
of cosmic config called metro config

00:16:50,019 --> 00:16:53,919
jeaious that has a slightly different

00:16:51,490 --> 00:16:55,629
shape in this case it's an object and as

00:16:53,919 --> 00:16:56,949
you can see it has less conflicts and

00:16:55,629 --> 00:16:59,799
then on the before screen in the

00:16:56,949 --> 00:17:02,079
previous screen and then you can still

00:16:59,799 --> 00:17:03,730
set the mysterious are NPM key in a

00:17:02,079 --> 00:17:06,309
package.json to configure different

00:17:03,730 --> 00:17:07,480
properties about your project and native

00:17:06,309 --> 00:17:09,909
dependencies that you're working with

00:17:07,480 --> 00:17:11,829
and you know this was meant to be

00:17:09,909 --> 00:17:13,510
temporary and I think our NPM is not

00:17:11,829 --> 00:17:15,610
anything for like three years already

00:17:13,510 --> 00:17:17,320
and still we can and we need to

00:17:15,610 --> 00:17:21,130
configure it sometimes so I think that's

00:17:17,320 --> 00:17:23,050
really confusing for you so the point is

00:17:21,130 --> 00:17:24,970
things are complex and and that's why we

00:17:23,050 --> 00:17:26,680
have decided to just drop it all and

00:17:24,970 --> 00:17:29,140
start from scratch with an entirely new

00:17:26,680 --> 00:17:29,530
format that would be simple in the first

00:17:29,140 --> 00:17:31,480
place

00:17:29,530 --> 00:17:34,000
and the new configuration is also based

00:17:31,480 --> 00:17:35,590
on cosmic config and uses namespaces to

00:17:34,000 --> 00:17:38,920
combine all the different purposes

00:17:35,590 --> 00:17:40,840
that different files had to satisfy for

00:17:38,920 --> 00:17:42,580
example if you are developing a native

00:17:40,840 --> 00:17:44,970
module or any native component you are

00:17:42,580 --> 00:17:47,290
going to be most interested in changing

00:17:44,970 --> 00:17:48,640
settings under the dependency key

00:17:47,290 --> 00:17:51,100
because what you are building is a

00:17:48,640 --> 00:17:52,960
dependency right these properties are

00:17:51,100 --> 00:17:55,540
then used to resolve the final

00:17:52,960 --> 00:17:58,270
configuration now this is the final

00:17:55,540 --> 00:18:00,580
configuration of the project and you can

00:17:58,270 --> 00:18:02,770
see it today by running react native

00:18:00,580 --> 00:18:05,620
config in your in your in your project

00:18:02,770 --> 00:18:07,780
it's inferred based on many things so

00:18:05,620 --> 00:18:09,340
you probably agree with me and you are

00:18:07,780 --> 00:18:10,900
thinking that this is rather complex and

00:18:09,340 --> 00:18:13,150
kind of like has a lot of different

00:18:10,900 --> 00:18:15,070
settings so the idea is I believe that

00:18:13,150 --> 00:18:17,320
in react native projects the files are

00:18:15,070 --> 00:18:19,180
convention like I can tell a lot about

00:18:17,320 --> 00:18:21,070
your project just by the files and I'm

00:18:19,180 --> 00:18:22,810
not talking about the naming patterns in

00:18:21,070 --> 00:18:25,000
the structure and more about you know

00:18:22,810 --> 00:18:26,260
like what kind of different files you

00:18:25,000 --> 00:18:28,720
have you have native iOS or native

00:18:26,260 --> 00:18:30,670
Android files so we are trying to infer

00:18:28,720 --> 00:18:32,890
as much as we can to lift the

00:18:30,670 --> 00:18:35,410
requirement from you to set all things

00:18:32,890 --> 00:18:36,910
up so we are kind of trying to be more

00:18:35,410 --> 00:18:39,100
like expert in that sense that you don't

00:18:36,910 --> 00:18:42,700
have to mess around with native code too

00:18:39,100 --> 00:18:44,410
much and so if we make a mistake like if

00:18:42,700 --> 00:18:47,260
we infer something wrong we can change

00:18:44,410 --> 00:18:49,600
that pretty easily for example let's say

00:18:47,260 --> 00:18:51,430
you want to disable link in react native

00:18:49,600 --> 00:18:53,740
webview on iOS like you just don't want

00:18:51,430 --> 00:18:56,050
it so all you have to do is just said I

00:18:53,740 --> 00:18:57,790
was property to know nothing more and

00:18:56,050 --> 00:19:00,070
this will be deep merged with the

00:18:57,790 --> 00:19:02,260
previous County that I showed you so as

00:19:00,070 --> 00:19:04,720
a result you will get an iOS set to know

00:19:02,260 --> 00:19:07,030
in the final config like running Gregg

00:19:04,720 --> 00:19:09,520
native link now we'll skip webview from

00:19:07,030 --> 00:19:13,600
being linked on iOS entirely just like

00:19:09,520 --> 00:19:16,330
here in fact the CLI will think that

00:19:13,600 --> 00:19:19,600
it's working with the Android only

00:19:16,330 --> 00:19:21,520
library and apart from that we also

00:19:19,600 --> 00:19:23,830
validate your configuration to eliminate

00:19:21,520 --> 00:19:25,510
mistakes so if you make a typo like I

00:19:23,830 --> 00:19:27,220
did with platforms you will get an

00:19:25,510 --> 00:19:28,929
information early on that it sounds

00:19:27,220 --> 00:19:33,429
not working and you will be able to go

00:19:28,929 --> 00:19:36,460
over and fix the mistake and then start

00:19:33,429 --> 00:19:37,809
it all over so we are using joy to

00:19:36,460 --> 00:19:39,820
validate the schema we have this key

00:19:37,809 --> 00:19:44,740
modified with roof types and it makes it

00:19:39,820 --> 00:19:46,360
really easy to work with and now one

00:19:44,740 --> 00:19:49,210
great thing before I go to this slide

00:19:46,360 --> 00:19:50,919
like from the maintenance perspective is

00:19:49,210 --> 00:19:53,289
that many of the issues in the react

00:19:50,919 --> 00:19:55,030
native repo were like start command is

00:19:53,289 --> 00:19:56,950
broken react native link is not working

00:19:55,030 --> 00:19:59,169
properly and we were asking for

00:19:56,950 --> 00:20:01,150
reproduction and it was hard to give it

00:19:59,169 --> 00:20:02,679
now all you have to do is just generate

00:20:01,150 --> 00:20:04,330
the configure output just paste it in

00:20:02,679 --> 00:20:06,370
the issue and I'll know right away

00:20:04,330 --> 00:20:08,799
what's going wrong and if not I can just

00:20:06,370 --> 00:20:12,510
take this JSON put it as a fixture to my

00:20:08,799 --> 00:20:16,450
tests and see right away what's going on

00:20:12,510 --> 00:20:18,100
so last thing is that as I said in the

00:20:16,450 --> 00:20:20,200
performance sections we were eagerly

00:20:18,100 --> 00:20:23,500
parsing the whole node modules and

00:20:20,200 --> 00:20:25,780
trying to get the whole dependencies

00:20:23,500 --> 00:20:27,700
that you have we have changed that so

00:20:25,780 --> 00:20:29,350
now it's lazy so what we gonna do is we

00:20:27,700 --> 00:20:31,120
gonna evaluate node modules as soon as

00:20:29,350 --> 00:20:33,309
you start asking for dependencies so if

00:20:31,120 --> 00:20:35,260
you're running start command log iOS or

00:20:33,309 --> 00:20:36,850
whatever we are not gonna do this

00:20:35,260 --> 00:20:38,590
evaluation at all because you're not

00:20:36,850 --> 00:20:40,360
gonna be accessing that so the only

00:20:38,590 --> 00:20:42,400
place where we will be accessing this is

00:20:40,360 --> 00:20:46,570
inside link I think and a few other

00:20:42,400 --> 00:20:48,159
commands so let's talk about link so how

00:20:46,570 --> 00:20:54,490
many of you have used it at least once

00:20:48,159 --> 00:20:57,520
in their lives all right cool so judging

00:20:54,490 --> 00:20:58,809
by the amount of hands it's probably one

00:20:57,520 --> 00:21:00,580
of the most popular commands I'm pretty

00:20:58,809 --> 00:21:02,289
sure if we did any kind of tests and

00:21:00,580 --> 00:21:05,340
evaluated the popularity the disease

00:21:02,289 --> 00:21:08,380
will be one of the most popular commands

00:21:05,340 --> 00:21:10,030
however the point is when I first

00:21:08,380 --> 00:21:13,330
implemented this command with my friend

00:21:10,030 --> 00:21:14,679
Alexa graph we considered it an MVP like

00:21:13,330 --> 00:21:16,780
we thought it's better to have something

00:21:14,679 --> 00:21:18,789
than nothing and we wanted to provide

00:21:16,780 --> 00:21:22,030
better support in the future so for

00:21:18,789 --> 00:21:24,400
example we parse iOS files using in

00:21:22,030 --> 00:21:26,140
unmaintained an unstable parser and the

00:21:24,400 --> 00:21:30,850
idea was we will write our own in the

00:21:26,140 --> 00:21:32,250
future but we never got around that and

00:21:30,850 --> 00:21:34,990
I know what you're thinking right now

00:21:32,250 --> 00:21:37,720
but I think it's actually good that we

00:21:34,990 --> 00:21:39,669
haven't done that over time turns out

00:21:37,720 --> 00:21:40,710
that the assumptions we had were based

00:21:39,669 --> 00:21:42,870
on wrong principles

00:21:40,710 --> 00:21:45,660
rather than scripting the platform and

00:21:42,870 --> 00:21:47,580
trying to write parsers we should have

00:21:45,660 --> 00:21:49,410
embraced the platform and use the EPA's

00:21:47,580 --> 00:21:51,300
public interface that it had from the

00:21:49,410 --> 00:21:53,720
very beginning and that's what the new

00:21:51,300 --> 00:21:56,190
Ling is all about it drops the bad parts

00:21:53,720 --> 00:21:59,070
about the link and takes the ones that

00:21:56,190 --> 00:22:01,890
were actually good so first it embraces

00:21:59,070 --> 00:22:03,720
the platform it uses what community has

00:22:01,890 --> 00:22:05,880
been already defaulting to when handling

00:22:03,720 --> 00:22:09,150
native dependencies talk apples and

00:22:05,880 --> 00:22:10,980
Gradle second it's fully automatic as

00:22:09,150 --> 00:22:12,960
Ram told you hooking into the platform

00:22:10,980 --> 00:22:14,880
natively gives us the ability to resolve

00:22:12,960 --> 00:22:16,680
project dependencies right away when the

00:22:14,880 --> 00:22:19,200
compilation happens so you no longer

00:22:16,680 --> 00:22:21,750
have to run the parser yourself ahead of

00:22:19,200 --> 00:22:23,730
time and the last is platform agnostic

00:22:21,750 --> 00:22:25,860
by default so adding support for per

00:22:23,730 --> 00:22:28,680
party platform like Windows will be

00:22:25,860 --> 00:22:31,050
super easy and now the whole big idea

00:22:28,680 --> 00:22:32,700
behind Ling is that next year I'm not

00:22:31,050 --> 00:22:34,350
gonna be here talking about link we

00:22:32,700 --> 00:22:36,420
wanted to be automatic and happen behind

00:22:34,350 --> 00:22:39,810
the scenes so we want this experience to

00:22:36,420 --> 00:22:41,460
be seamless on a high level both

00:22:39,810 --> 00:22:43,680
platforms require you to include a

00:22:41,460 --> 00:22:45,960
special line in your in their respective

00:22:43,680 --> 00:22:47,940
configuration files so for example in

00:22:45,960 --> 00:22:49,740
iOS you need to add a Ruby function to

00:22:47,940 --> 00:22:52,260
your pod file and on Android you have to

00:22:49,740 --> 00:22:54,810
modify some Gradle files on a low level

00:22:52,260 --> 00:22:56,550
they both run react native config behind

00:22:54,810 --> 00:22:58,860
the scenes to get the information what

00:22:56,550 --> 00:23:01,410
to link and how to link it in a

00:22:58,860 --> 00:23:02,520
cross-platform way all you know if react

00:23:01,410 --> 00:23:05,520
native is a bad cross-platform

00:23:02,520 --> 00:23:08,490
development I think the CLI should also

00:23:05,520 --> 00:23:10,710
embrace that paradigm so I actually

00:23:08,490 --> 00:23:12,450
would like to thank X buffer and the

00:23:10,710 --> 00:23:14,940
whole team especially sebastian camilla

00:23:12,450 --> 00:23:17,370
thomas abbott and brent for pioneering

00:23:14,940 --> 00:23:19,350
this approach I'm not an expert when it

00:23:17,370 --> 00:23:20,850
comes to native development so seeing

00:23:19,350 --> 00:23:22,830
that such things were possible with the

00:23:20,850 --> 00:23:26,160
early modules actually open up my eyes

00:23:22,830 --> 00:23:28,860
and helped us kind of innovate in that

00:23:26,160 --> 00:23:30,630
aspect as well and you know we are

00:23:28,860 --> 00:23:31,800
working really closely with expert

00:23:30,630 --> 00:23:33,870
together and this is something that I

00:23:31,800 --> 00:23:35,850
really wanted to explicitly say like

00:23:33,870 --> 00:23:37,530
many times I open a react Native

00:23:35,850 --> 00:23:39,720
community group on Facebook there's a

00:23:37,530 --> 00:23:41,400
lot of people many people asking you

00:23:39,720 --> 00:23:43,020
know like should I use expert or not and

00:23:41,400 --> 00:23:44,910
and there are like comments like don't

00:23:43,020 --> 00:23:46,470
use Expo it's it's really bad like why

00:23:44,910 --> 00:23:48,870
would you use Expo and different things

00:23:46,470 --> 00:23:50,760
like I really don't like it and I wanted

00:23:48,870 --> 00:23:52,800
to spread this this notion that we are

00:23:50,760 --> 00:23:53,700
not actually like fighting against each

00:23:52,800 --> 00:23:55,500
other we are

00:23:53,700 --> 00:23:57,330
you know together and we are working

00:23:55,500 --> 00:24:00,029
closely with Expo team to not reinvent

00:23:57,330 --> 00:24:02,340
the wheel all over and that's why we are

00:24:00,029 --> 00:24:04,230
taking inspirations from each other and

00:24:02,340 --> 00:24:06,419
actually working towards making the CLI

00:24:04,230 --> 00:24:09,240
per experience for both Expo and react

00:24:06,419 --> 00:24:12,090
native developers because you can eject

00:24:09,240 --> 00:24:13,799
and soon Expo will be even easier to use

00:24:12,090 --> 00:24:16,919
for react native developers so we want

00:24:13,799 --> 00:24:20,850
to make the experience the same so thank

00:24:16,919 --> 00:24:23,580
you for that another thing is the new

00:24:20,850 --> 00:24:25,289
architecture and you know we kind of

00:24:23,580 --> 00:24:27,510
really CL I used to be really tightly

00:24:25,289 --> 00:24:29,220
coupled with the internals and so now

00:24:27,510 --> 00:24:31,139
has a separate repo so we were able to

00:24:29,220 --> 00:24:33,539
change the infrastructure and now I'm

00:24:31,139 --> 00:24:35,039
bringing this on this stock because I

00:24:33,539 --> 00:24:37,440
think he didn't fluence a lot of great

00:24:35,039 --> 00:24:39,269
things that we came up with later so we

00:24:37,440 --> 00:24:40,769
have structured it in the mono repo like

00:24:39,269 --> 00:24:42,659
I laughed on the repos the first time I

00:24:40,769 --> 00:24:44,880
learned that mono repos are world you

00:24:42,659 --> 00:24:47,340
know cool big companies are using I also

00:24:44,880 --> 00:24:48,840
wanted to use them and so when I heard

00:24:47,340 --> 00:24:50,580
about Lync or my first well my first

00:24:48,840 --> 00:24:52,559
thought was like can I make it a mono

00:24:50,580 --> 00:24:55,889
repo and everybody was like yeah yeah

00:24:52,559 --> 00:24:58,169
you can do it so I did it and and then

00:24:55,889 --> 00:24:59,730
right away I started splitting the

00:24:58,169 --> 00:25:01,350
packages into smaller ones I was like

00:24:59,730 --> 00:25:03,630
super extremely happy that I'm I'm

00:25:01,350 --> 00:25:05,250
making it and and you know we made each

00:25:03,630 --> 00:25:07,500
of these packages to be responsible for

00:25:05,250 --> 00:25:08,669
a single thing so so such architecture

00:25:07,500 --> 00:25:11,100
you know the good thing is that it

00:25:08,669 --> 00:25:13,909
promotes public interface over private

00:25:11,100 --> 00:25:15,750
call sites and hard-coded usages for

00:25:13,909 --> 00:25:18,090
example the Android and iOS platforms

00:25:15,750 --> 00:25:19,620
are now in separate packages and are

00:25:18,090 --> 00:25:21,750
both a platform and a plug-in at the

00:25:19,620 --> 00:25:24,179
same time so they contain commands such

00:25:21,750 --> 00:25:26,190
as run iOS and log iOS and field files

00:25:24,179 --> 00:25:28,679
needed for a link so these are no longer

00:25:26,190 --> 00:25:31,200
hard-coded in the CLI itself CLI doesn't

00:25:28,679 --> 00:25:33,750
know about that at all and react native

00:25:31,200 --> 00:25:36,000
then pulls these packages from then PM

00:25:33,750 --> 00:25:38,940
Andrew and registers them I'm gonna show

00:25:36,000 --> 00:25:40,529
you the use in a second and what's more

00:25:38,940 --> 00:25:42,389
it's also easier to contribute in my

00:25:40,529 --> 00:25:44,549
team for example we can gradually start

00:25:42,389 --> 00:25:47,039
migrating packages to typescript just

00:25:44,549 --> 00:25:48,690
like we migrated pools so this kind of

00:25:47,039 --> 00:25:51,240
separation of concerns and an

00:25:48,690 --> 00:25:54,120
architecture makes such transitions

00:25:51,240 --> 00:25:56,669
really smooth so now let's talk about

00:25:54,120 --> 00:25:58,860
platform support how many of you have

00:25:56,669 --> 00:26:02,970
used any platform rather than Android

00:25:58,860 --> 00:26:06,990
and iOS please raise your hand okay I

00:26:02,970 --> 00:26:08,940
think okay cool so not many so I'm

00:26:06,990 --> 00:26:10,940
planning to change that

00:26:08,940 --> 00:26:13,170
you know react native has been always by

00:26:10,940 --> 00:26:15,660
butlering once and writing everywhere

00:26:13,170 --> 00:26:18,330
however in reality the support for

00:26:15,660 --> 00:26:20,100
additional platforms has never been easy

00:26:18,330 --> 00:26:22,770
like this is something we are working on

00:26:20,100 --> 00:26:25,020
right now the framework started as an

00:26:22,770 --> 00:26:26,730
iOS and then Android was added in a

00:26:25,020 --> 00:26:29,040
single commit with others to follow

00:26:26,730 --> 00:26:31,170
so both platforms were hard-coded and

00:26:29,040 --> 00:26:32,790
not following it like a common public

00:26:31,170 --> 00:26:34,830
interface because there wasn't a need

00:26:32,790 --> 00:26:36,360
for for such thing so this made

00:26:34,830 --> 00:26:38,250
integration really complicated and

00:26:36,360 --> 00:26:40,290
require a lot of hacks so when

00:26:38,250 --> 00:26:42,360
extracting the CLI we decided to make

00:26:40,290 --> 00:26:44,850
all the new features platform centric by

00:26:42,360 --> 00:26:47,430
default so today platforms are

00:26:44,850 --> 00:26:49,320
first-class citizens in the CLI as well

00:26:47,430 --> 00:26:51,630
you know supported throughout the code

00:26:49,320 --> 00:26:52,890
and I'm hoping that this will lead to

00:26:51,630 --> 00:26:54,960
even smoother integration of other

00:26:52,890 --> 00:26:58,380
platforms and spread react native on

00:26:54,960 --> 00:27:00,390
entirely new targets so first what we

00:26:58,380 --> 00:27:01,890
did is we have completely extracted the

00:27:00,390 --> 00:27:04,770
Android and iOS specific code two

00:27:01,890 --> 00:27:07,920
separate packages with a public API and

00:27:04,770 --> 00:27:10,020
some files and then we have made react

00:27:07,920 --> 00:27:12,300
native to behave like an out of tree

00:27:10,020 --> 00:27:14,940
platform itself that is it now the

00:27:12,300 --> 00:27:16,950
colors support for Android and iOS just

00:27:14,940 --> 00:27:19,140
like react native windows so in fact

00:27:16,950 --> 00:27:21,540
there is no longer a concept of a out of

00:27:19,140 --> 00:27:23,790
tree platform or external platform or

00:27:21,540 --> 00:27:25,950
anything like that all the packages now

00:27:23,790 --> 00:27:28,230
declare platforms using the same

00:27:25,950 --> 00:27:30,630
interface so technically speaking in the

00:27:28,230 --> 00:27:32,730
future you might be using just iOS if

00:27:30,630 --> 00:27:35,250
there is react native iOS package for

00:27:32,730 --> 00:27:37,500
example so you could just sweep out

00:27:35,250 --> 00:27:39,720
Android pieces from here and you would

00:27:37,500 --> 00:27:40,970
be getting iOS only development in case

00:27:39,720 --> 00:27:45,960
you need it

00:27:40,970 --> 00:27:49,530
and last but not one the upgrading so I

00:27:45,960 --> 00:27:54,020
left the best known for the end so how

00:27:49,530 --> 00:27:56,310
many of you upgrade apps manually right

00:27:54,020 --> 00:28:01,290
would you use the tooling if it was

00:27:56,310 --> 00:28:03,270
working reliably see there you go so I

00:28:01,290 --> 00:28:05,430
guess you know I kind of knew the answer

00:28:03,270 --> 00:28:08,520
gonna be hell yeah because why not right

00:28:05,430 --> 00:28:10,950
so like historically speaking we had a

00:28:08,520 --> 00:28:12,870
lot of ways of doing that including the

00:28:10,950 --> 00:28:14,670
upgrade and get upgrade they were not

00:28:12,870 --> 00:28:17,160
really like well maintained and they

00:28:14,670 --> 00:28:18,810
were serving app like they were not

00:28:17,160 --> 00:28:20,850
acting as you would expect for example

00:28:18,810 --> 00:28:21,750
like the get upgrade itself world by

00:28:20,850 --> 00:28:23,370
comparing the

00:28:21,750 --> 00:28:25,440
react native image project with your

00:28:23,370 --> 00:28:27,180
project files generating the get div and

00:28:25,440 --> 00:28:29,610
then applying that div on to your files

00:28:27,180 --> 00:28:31,170
and so sounds great by definition but

00:28:29,610 --> 00:28:33,480
there were a lot of conflicts over time

00:28:31,170 --> 00:28:37,500
and it never kind of lets you upgrade

00:28:33,480 --> 00:28:39,780
more complex divs so that's why we have

00:28:37,500 --> 00:28:41,850
decided so I integrate the rnd purge by

00:28:39,780 --> 00:28:43,650
default which is another get upgrade

00:28:41,850 --> 00:28:45,840
mechanism that is also part of the react

00:28:43,650 --> 00:28:48,300
Native community now and what it does is

00:28:45,840 --> 00:28:50,700
it generates divs between two blank

00:28:48,300 --> 00:28:52,920
react native projects and then this DF

00:28:50,700 --> 00:28:54,210
is applied onto your projects so the

00:28:52,920 --> 00:28:56,730
difference is that it's more reliable

00:28:54,210 --> 00:28:58,950
and also its cloud-based so it allows

00:28:56,730 --> 00:29:01,650
you and ask to check the diffs ahead of

00:28:58,950 --> 00:29:04,410
time so here is a screen shot of me

00:29:01,650 --> 00:29:07,500
trying to upgrade my app to latest react

00:29:04,410 --> 00:29:09,480
native to try out Hermus and as you can

00:29:07,500 --> 00:29:11,190
see I got some information and the diff

00:29:09,480 --> 00:29:13,560
has been applied and I see exactly what

00:29:11,190 --> 00:29:15,270
files were changed all some having

00:29:13,560 --> 00:29:17,820
changes to pod file because I upgraded

00:29:15,270 --> 00:29:21,660
to 0.60 that has the outer linking

00:29:17,820 --> 00:29:24,840
support now the big thing is if this

00:29:21,660 --> 00:29:27,210
doesn't work which is possible you get

00:29:24,840 --> 00:29:29,310
this great online upgrade guide tool

00:29:27,210 --> 00:29:30,780
that will basically let you know what

00:29:29,310 --> 00:29:32,610
are the differences and you will be able

00:29:30,780 --> 00:29:34,860
to check the D Fuhr self and apply the

00:29:32,610 --> 00:29:38,460
changes manually and ensure this is not

00:29:34,860 --> 00:29:40,830
enough for very very serious breaking

00:29:38,460 --> 00:29:43,230
changes but as react native is maturing

00:29:40,830 --> 00:29:45,120
and we are having less of them this

00:29:43,230 --> 00:29:47,850
should be enough and even more efficient

00:29:45,120 --> 00:29:49,710
as we go so please give it a try if you

00:29:47,850 --> 00:29:52,710
had tried upgrading with the CLI before

00:29:49,710 --> 00:29:53,940
and you didn't like it we'd love to get

00:29:52,710 --> 00:29:57,420
your feedback and improve that even

00:29:53,940 --> 00:29:59,580
further so the last thing I'm going to

00:29:57,420 --> 00:30:01,080
mention today but equally important is

00:29:59,580 --> 00:30:04,080
the getting started experience and this

00:30:01,080 --> 00:30:05,820
one's amazing I mean historically

00:30:04,080 --> 00:30:09,870
speaking this been really rough for

00:30:05,820 --> 00:30:11,490
react native developers for us so the

00:30:09,870 --> 00:30:13,290
process involved you know installing a

00:30:11,490 --> 00:30:15,330
global command and then running react

00:30:13,290 --> 00:30:16,680
native in it on top of it and from the

00:30:15,330 --> 00:30:19,580
maintenance perspective it's been

00:30:16,680 --> 00:30:22,200
extremely hard to set up and as a result

00:30:19,580 --> 00:30:24,030
they come on itself like the polish

00:30:22,200 --> 00:30:25,260
you'd expect from the first command you

00:30:24,030 --> 00:30:27,000
ever run with react native because

00:30:25,260 --> 00:30:29,310
nobody wanted to work on it because it

00:30:27,000 --> 00:30:31,170
was just so hard to set it up so the

00:30:29,310 --> 00:30:33,780
important information was swallowed in a

00:30:31,170 --> 00:30:35,260
sea of output that was being printed by

00:30:33,780 --> 00:30:37,179
the sub

00:30:35,260 --> 00:30:39,610
so for example the CL I was installing

00:30:37,179 --> 00:30:41,710
the NPM dependencies that would take up

00:30:39,610 --> 00:30:43,179
the whole screen and possibly had

00:30:41,710 --> 00:30:45,460
something very important or something

00:30:43,179 --> 00:30:46,750
that you might be interested in so we

00:30:45,460 --> 00:30:48,190
have changed the entire engine to be

00:30:46,750 --> 00:30:53,110
more interactive and beautiful to look

00:30:48,190 --> 00:30:55,150
at yeah so the output of subprocesses is

00:30:53,110 --> 00:30:56,770
no longer printed on screen instead you

00:30:55,150 --> 00:30:59,140
get nice loader and you can follow along

00:30:56,770 --> 00:31:01,030
each of the steps as you can see we have

00:30:59,140 --> 00:31:02,590
also added the automatic kakapos

00:31:01,030 --> 00:31:05,770
installation for you because that's now

00:31:02,590 --> 00:31:07,840
required starting from 0 16 so it looks

00:31:05,770 --> 00:31:10,720
professional impaired with how react

00:31:07,840 --> 00:31:12,580
native great is itself and it's actually

00:31:10,720 --> 00:31:14,500
one of like my goals and goals of my

00:31:12,580 --> 00:31:17,200
team that we want the CLI to be the best

00:31:14,500 --> 00:31:19,000
on the market so we are tired of people

00:31:17,200 --> 00:31:21,549
asking if react native is dead we now

00:31:19,000 --> 00:31:23,470
want react native CLI to be like the the

00:31:21,549 --> 00:31:27,130
top player in the game that everybody's

00:31:23,470 --> 00:31:28,299
looking like I want to be like them and

00:31:27,130 --> 00:31:28,690
it's also not gonna use the global

00:31:28,299 --> 00:31:30,700
package

00:31:28,690 --> 00:31:32,409
so no more upgrading issues no more

00:31:30,700 --> 00:31:34,659
issues with running react native unit we

00:31:32,409 --> 00:31:39,640
are encouraging to use MPX

00:31:34,659 --> 00:31:42,610
so feel free to give it a try so let's

00:31:39,640 --> 00:31:44,530
talk about the future now our team at

00:31:42,610 --> 00:31:46,780
call stack you know is and we'll keep

00:31:44,530 --> 00:31:49,390
working on the project and governing the

00:31:46,780 --> 00:31:52,450
development we are particularly excited

00:31:49,390 --> 00:31:54,610
about tools for some reason we just like

00:31:52,450 --> 00:31:57,669
them so we'd like to make react native

00:31:54,610 --> 00:31:59,650
experience even better for you but most

00:31:57,669 --> 00:32:01,780
importantly we want you to be productive

00:31:59,650 --> 00:32:04,809
feeling right at home and having all the

00:32:01,780 --> 00:32:05,280
tools you need and to do so we need your

00:32:04,809 --> 00:32:08,049
help

00:32:05,280 --> 00:32:10,030
now that the CLI has been moved out to a

00:32:08,049 --> 00:32:11,679
react Native community it's never been

00:32:10,030 --> 00:32:14,320
easier to contribute to give us feedback

00:32:11,679 --> 00:32:15,940
and help us working so join us in the

00:32:14,320 --> 00:32:19,990
open source and let's make react native

00:32:15,940 --> 00:32:22,980
tooling great thank you very much

00:32:19,990 --> 00:32:27,280
[Applause]

00:32:22,980 --> 00:32:29,140
pick it up give it up but it's okay wait

00:32:27,280 --> 00:32:32,290
there's nothing else take yes I do

00:32:29,140 --> 00:32:34,900
wait as my must have one more thing that

00:32:32,290 --> 00:32:36,880
I'm always making but yeah thanks for

00:32:34,900 --> 00:32:39,220
the applause and I got yourself a bonus

00:32:36,880 --> 00:32:41,500
for that so we run a really review

00:32:39,220 --> 00:32:43,180
conference in Europe in September it

00:32:41,500 --> 00:32:46,060
says the the conference happens in

00:32:43,180 --> 00:32:47,680
Poland and so I got a discount code for

00:32:46,060 --> 00:32:49,150
you if you'd like to go there's gonna be

00:32:47,680 --> 00:32:52,150
a lot of people from chain react

00:32:49,150 --> 00:32:54,430
traveling there as well so feel free to

00:32:52,150 --> 00:32:56,400
make a photo or just reach out to me and

00:32:54,430 --> 00:32:59,490
I will give you another discount as well

00:32:56,400 --> 00:33:02,290
thank you

00:32:59,490 --> 00:33:15,599
[Applause]

00:33:02,290 --> 00:33:15,599

YouTube URL: https://www.youtube.com/watch?v=UArGKNWuvy8


