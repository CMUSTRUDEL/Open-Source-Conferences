Title: Chain React 2019 - Kenza Iraki - Let’s Simplify Your Complex Forms
Publication date: 2019-08-06
Playlist: Chain React 2019
Description: 
	If you’ve built an app with React or React Native, chances are you’ve had to build at least one form. From profile screens to login pages, forms are unavoidable, and let’s be honest, they’re not very fun to build. For each field, you need to hold the value in the state of your component, implement onChange and onBlur handlers, implement validation… that makes for a lot of boilerplate, and that’s just for simple inputs. 
There are several libraries out there that attempt to simplify this process, from Redux Form, to React Form, to Formik, among others. In this talk, we’ll go over the existing solutions, how they stack up against each other, and what their limitations are. We’ll als


https://speakerdeck.com/kirakik/lets-simplify-your-complex-forms
Captions: 
	00:00:10,639 --> 00:00:15,900
all right so today I'm gonna talk to you

00:00:13,889 --> 00:00:18,270
about forms before that I'm going to

00:00:15,900 --> 00:00:22,050
introduce myself quickly hi my name is

00:00:18,270 --> 00:00:25,140
kensey i curate let's react which is a

00:00:22,050 --> 00:00:27,750
react native newsletter we're just about

00:00:25,140 --> 00:00:28,380
to reach thousand subscribers so that's

00:00:27,750 --> 00:00:34,290
good news

00:00:28,380 --> 00:00:36,750
um I'm also the Meetup no Montreal where

00:00:34,290 --> 00:00:38,610
I live and I'm a software at a company

00:00:36,750 --> 00:00:41,010
called breed life which is a company

00:00:38,610 --> 00:00:42,570
that's trying to change the face of the

00:00:41,010 --> 00:00:47,160
insurance industry and the insurance

00:00:42,570 --> 00:00:49,739
industry's got lots of forms so apart

00:00:47,160 --> 00:00:52,170
from that I'm also the mommy of a

00:00:49,739 --> 00:00:54,390
hedgehog and you know how people in

00:00:52,170 --> 00:00:56,070
these kinds of talks always put pictures

00:00:54,390 --> 00:00:58,020
of their cats and dogs and all that well

00:00:56,070 --> 00:01:03,050
I think head jaw hedgehogs are under

00:00:58,020 --> 00:01:03,050
represented so meet Logan

00:01:07,560 --> 00:01:18,580
so I'm gonna be using Logan as picture

00:01:15,240 --> 00:01:21,700
what babe so I'm gonna be putting

00:01:18,580 --> 00:01:24,010
pictures of him here and there so get

00:01:21,700 --> 00:01:27,040
ready for that so what's the actual

00:01:24,010 --> 00:01:28,900
problems with horns you may be thinking

00:01:27,040 --> 00:01:30,930
well I got no problems with forms you

00:01:28,900 --> 00:01:34,060
know my login form is working great so

00:01:30,930 --> 00:01:37,450
what are you talking about why do I need

00:01:34,060 --> 00:01:39,850
a solution well here's the thing four

00:01:37,450 --> 00:01:42,520
simple forms could be okay but the more

00:01:39,850 --> 00:01:44,650
complex your form gets the worse it gets

00:01:42,520 --> 00:01:47,950
there's tons of boilerplate when you're

00:01:44,650 --> 00:01:51,040
making forms of react you got a store

00:01:47,950 --> 00:01:53,619
your state you got a deal with your own

00:01:51,040 --> 00:01:55,930
change handlers you got a deal with

00:01:53,619 --> 00:01:57,790
location you got a deal error handling

00:01:55,930 --> 00:02:00,310
from API calls then you got to actually

00:01:57,790 --> 00:02:05,740
do the submission all that so that makes

00:02:00,310 --> 00:02:08,740
tons of boilerplate let's go through an

00:02:05,740 --> 00:02:10,810
example to actually let straight that so

00:02:08,740 --> 00:02:12,400
you're at a company and your product

00:02:10,810 --> 00:02:13,840
manager comes in he's like okay so we're

00:02:12,400 --> 00:02:15,640
gonna make this app and this app is

00:02:13,840 --> 00:02:17,560
gonna have a signup form it's super

00:02:15,640 --> 00:02:19,870
simple you know so it shouldn't take you

00:02:17,560 --> 00:02:22,030
too long the signup forms just gonna

00:02:19,870 --> 00:02:24,670
have four fields the email password name

00:02:22,030 --> 00:02:27,160
phone number we want validation all the

00:02:24,670 --> 00:02:29,230
fields just to API calls sign up and

00:02:27,160 --> 00:02:34,420
then login and then some error handling

00:02:29,230 --> 00:02:36,250
should be easy right so you make your

00:02:34,420 --> 00:02:37,930
form hook up some things a little bit of

00:02:36,250 --> 00:02:38,440
boilerplate but you're like okay it's

00:02:37,930 --> 00:02:40,720
fine

00:02:38,440 --> 00:02:43,390
I'm never gonna touch it again good

00:02:40,720 --> 00:02:44,920
perfect

00:02:43,390 --> 00:02:46,510
a couple months later the product

00:02:44,920 --> 00:02:49,630
manager comes back and he's like yeah

00:02:46,510 --> 00:02:51,340
you know what with this form

00:02:49,630 --> 00:02:53,350
people are getting trouble with the

00:02:51,340 --> 00:02:55,870
password we have like a huge amount of

00:02:53,350 --> 00:02:58,300
people who just reset their password all

00:02:55,870 --> 00:03:00,430
the time because they type it and they

00:02:58,300 --> 00:03:03,790
type it wrong or they don't they don't

00:03:00,430 --> 00:03:06,880
remember it so we want to improve that

00:03:03,790 --> 00:03:09,040
so we have new requirements now we want

00:03:06,880 --> 00:03:11,350
to toggle between display and hiding

00:03:09,040 --> 00:03:13,240
your path the people's passwords and we

00:03:11,350 --> 00:03:16,300
also want a confirm password field

00:03:13,240 --> 00:03:18,070
because these are great right and also

00:03:16,300 --> 00:03:22,000
we want to show in real time the

00:03:18,070 --> 00:03:24,880
password validation so you know all

00:03:22,000 --> 00:03:28,480
those complicated rules we want to show

00:03:24,880 --> 00:03:31,420
like check marks and exes and all that

00:03:28,480 --> 00:03:34,840
just to show as you're writing all that

00:03:31,420 --> 00:03:37,510
so as you're writing this logic you

00:03:34,840 --> 00:03:42,610
realize damn this file is getting damn

00:03:37,510 --> 00:03:44,320
long I don't know if I like this and it

00:03:42,610 --> 00:03:45,970
gets pretty complicated when you got to

00:03:44,320 --> 00:03:48,070
deal with fields that depend on other

00:03:45,970 --> 00:03:50,260
fields and then a bunch of state

00:03:48,070 --> 00:03:55,150
everywhere you states probably like 20

00:03:50,260 --> 00:03:57,920
lines of code long at that point so you

00:03:55,150 --> 00:04:00,650
know we need a solution

00:03:57,920 --> 00:04:04,220
so like I said the more complex your

00:04:00,650 --> 00:04:05,750
phone gets the Messier it is when you

00:04:04,220 --> 00:04:07,490
got to deal with optional versus

00:04:05,750 --> 00:04:10,730
required fields field that depend on

00:04:07,490 --> 00:04:12,950
other fields in in some of our products

00:04:10,730 --> 00:04:14,959
we have fields that hide or display

00:04:12,950 --> 00:04:17,450
depending on answers to one or more

00:04:14,959 --> 00:04:20,510
fields and then we got answers that can

00:04:17,450 --> 00:04:23,030
be they have a default value so if you

00:04:20,510 --> 00:04:24,500
like select addition and you type this

00:04:23,030 --> 00:04:25,940
and then you select this other thing

00:04:24,500 --> 00:04:28,370
then the default value is gonna be this

00:04:25,940 --> 00:04:30,140
and then some fields have to be disabled

00:04:28,370 --> 00:04:35,330
based on other fields it gets really

00:04:30,140 --> 00:04:38,270
really complex so let's say I convinced

00:04:35,330 --> 00:04:41,630
you forms can get pretty crazy so what

00:04:38,270 --> 00:04:45,650
can I do about so I'm gonna go through

00:04:41,630 --> 00:04:50,480
three libraries that exist too that help

00:04:45,650 --> 00:04:54,200
you defy your forms now

00:04:50,480 --> 00:04:57,200
disclaimer every library has pros and

00:04:54,200 --> 00:05:03,410
cons so this is my personal experience

00:04:57,200 --> 00:05:05,360
and that's it first up Redux form who

00:05:03,410 --> 00:05:08,120
actually uses Redux form in production

00:05:05,360 --> 00:05:09,050
right now all right it's okay not too

00:05:08,120 --> 00:05:12,350
bad

00:05:09,050 --> 00:05:14,000
so redox form you've probably heard of

00:05:12,350 --> 00:05:16,100
it it's a relaxed place solution to

00:05:14,000 --> 00:05:18,890
forms and it keeps everything form

00:05:16,100 --> 00:05:20,570
related in your redux state so the

00:05:18,890 --> 00:05:22,280
fields that use the currently focused

00:05:20,570 --> 00:05:24,080
feel the previously focused fields sync

00:05:22,280 --> 00:05:25,940
and async validation error submission

00:05:24,080 --> 00:05:29,960
everything you can think of it's in your

00:05:25,940 --> 00:05:31,790
redux take now that's pretty me pretty

00:05:29,960 --> 00:05:33,650
much has the advantages of Redux itself

00:05:31,790 --> 00:05:35,720
which means it's a single source of

00:05:33,650 --> 00:05:38,120
truth you can easily share form data

00:05:35,720 --> 00:05:39,050
between different components and since

00:05:38,120 --> 00:05:42,140
it uses redux

00:05:39,050 --> 00:05:44,060
it's great for debugging purposes you

00:05:42,140 --> 00:05:46,479
got your your developer tools and it's

00:05:44,060 --> 00:05:52,460
pretty great it's also very wildly used

00:05:46,479 --> 00:05:56,270
390 k downloads per week just a lot but

00:05:52,460 --> 00:05:58,669
it's actually going down we and there

00:05:56,270 --> 00:05:59,990
are a few reasons for that first of all

00:05:58,669 --> 00:06:02,360
it'll only make sense if you're already

00:05:59,990 --> 00:06:05,090
using redux you're not gonna add redux

00:06:02,360 --> 00:06:06,470
form if you don't use redux if you use

00:06:05,090 --> 00:06:07,880
mob ex let's say it doesn't make any

00:06:06,470 --> 00:06:10,729
sense out of a text form so it's

00:06:07,880 --> 00:06:11,569
specific through to redux and also your

00:06:10,729 --> 00:06:14,629
Redux stories

00:06:11,569 --> 00:06:20,119
updated on every single stroke and

00:06:14,629 --> 00:06:22,360
that's very bad for performance I once

00:06:20,119 --> 00:06:25,819
used Redux form on an app that had a

00:06:22,360 --> 00:06:28,429
Android version and that was just not

00:06:25,819 --> 00:06:31,009
not usable unfortunately you know how

00:06:28,429 --> 00:06:35,119
Android performance can get can get

00:06:31,009 --> 00:06:36,379
pretty tricky so as I was typing it

00:06:35,119 --> 00:06:39,050
would just take like three or four

00:06:36,379 --> 00:06:41,089
seconds for the letters to actually

00:06:39,050 --> 00:06:44,479
appear on the inputs so that's that's

00:06:41,089 --> 00:06:47,809
not too great so if it's like a small

00:06:44,479 --> 00:06:51,830
app it's okay if it gets bigger it's a

00:06:47,809 --> 00:06:54,259
little trickier also and that's a very

00:06:51,830 --> 00:06:56,930
important point react profit and Redux

00:06:54,259 --> 00:06:58,819
creator data berm of said that foreign

00:06:56,930 --> 00:07:01,430
state is inherently ephemeral so

00:06:58,819 --> 00:07:07,490
tracking it and Redux is unnecessary if

00:07:01,430 --> 00:07:09,769
Dan says you know so also your business

00:07:07,490 --> 00:07:11,899
logic can get pretty complicated so if

00:07:09,769 --> 00:07:13,849
you got a deal with fields that depends

00:07:11,899 --> 00:07:16,969
on other fields and all that it doesn't

00:07:13,849 --> 00:07:18,680
help you a lot with your bullet plate

00:07:16,969 --> 00:07:20,300
that actually makes it sometimes harder

00:07:18,680 --> 00:07:24,490
to deal with

00:07:20,300 --> 00:07:27,529
and also it's a pretty big bundle size

00:07:24,490 --> 00:07:31,290
so if I were to describe Redux form in

00:07:27,529 --> 00:07:33,600
one picture movie this

00:07:31,290 --> 00:07:37,350
that's not my hedgehog my huzzah Gary

00:07:33,600 --> 00:07:41,100
healthy next up

00:07:37,350 --> 00:07:44,280
final form so final form is a

00:07:41,100 --> 00:07:45,720
subscription they formed state

00:07:44,280 --> 00:07:47,760
management library and it uses the

00:07:45,720 --> 00:07:51,000
observer pattern it's also built by the

00:07:47,760 --> 00:07:52,620
same guy who built Redux form so he

00:07:51,000 --> 00:07:56,450
heard people's complaints and he tried

00:07:52,620 --> 00:07:59,790
to make something that would be better

00:07:56,450 --> 00:08:02,220
it's got some pros its framework

00:07:59,790 --> 00:08:04,890
agnostic so whether you use react view

00:08:02,220 --> 00:08:06,360
angular whatever you can use react nama

00:08:04,890 --> 00:08:08,610
for me it's got no dependencies

00:08:06,360 --> 00:08:10,500
whatsoever it also has your

00:08:08,610 --> 00:08:12,690
configuration now I didn't mention that

00:08:10,500 --> 00:08:14,580
for Redux form the Redux form is pretty

00:08:12,690 --> 00:08:16,350
complicated to set up I don't know how

00:08:14,580 --> 00:08:19,140
it is nowadays but when I last used it

00:08:16,350 --> 00:08:21,750
about a year ago it took like a few days

00:08:19,140 --> 00:08:25,650
to get it to work properly so this is

00:08:21,750 --> 00:08:27,870
just you install it start using it so

00:08:25,650 --> 00:08:30,180
that's pretty cool and it has a very

00:08:27,870 --> 00:08:33,600
small bundle again because it has no

00:08:30,180 --> 00:08:37,440
dependencies now I'm not a fan of the

00:08:33,600 --> 00:08:40,349
observer pattern I find it's just very

00:08:37,440 --> 00:08:42,630
magical stuff pins and you're not a

00:08:40,349 --> 00:08:44,580
hundred percent sure why and then you're

00:08:42,630 --> 00:08:47,900
just like okay works I'm fine with it

00:08:44,580 --> 00:08:50,570
but I like to know what's going on so

00:08:47,900 --> 00:08:54,450
I'm not I'm not the biggest fan of this

00:08:50,570 --> 00:08:57,330
it's also hard to debug so like anything

00:08:54,450 --> 00:08:58,470
that involves subscriptions like rxjs or

00:08:57,330 --> 00:09:02,070
anything like that when you got to do

00:08:58,470 --> 00:09:04,200
some debugging good luck it's also the

00:09:02,070 --> 00:09:07,050
least wildly used option that I'm going

00:09:04,200 --> 00:09:09,050
to talk about today I bought it's still

00:09:07,050 --> 00:09:13,010
pretty good

00:09:09,050 --> 00:09:16,100
so subscribe final form one picture

00:09:13,010 --> 00:09:20,180
would be this

00:09:16,100 --> 00:09:23,930
so stuffs happening but you know what

00:09:20,180 --> 00:09:25,160
but it but it works all right next up

00:09:23,930 --> 00:09:30,080
for me

00:09:25,160 --> 00:09:32,960
so formic is a little different and they

00:09:30,080 --> 00:09:34,730
are the two options it's a foreign

00:09:32,960 --> 00:09:36,530
helper library that handles three core

00:09:34,730 --> 00:09:38,780
things getting values in and out of

00:09:36,530 --> 00:09:43,670
foreign state validation error messages

00:09:38,780 --> 00:09:46,250
and handling form submission the pros

00:09:43,670 --> 00:09:48,380
it's got zero configuration again same

00:09:46,250 --> 00:09:53,600
thing as final form just installed start

00:09:48,380 --> 00:09:54,200
using it it has powerful validation with

00:09:53,600 --> 00:09:56,690
yup

00:09:54,200 --> 00:09:58,550
so yep is is a library based on joy

00:09:56,690 --> 00:10:02,390
that's usually the one people have heard

00:09:58,550 --> 00:10:04,990
of and it's very declarative very nice

00:10:02,390 --> 00:10:07,730
to use you just set up a scheme out with

00:10:04,990 --> 00:10:10,070
with all your validation logic and then

00:10:07,730 --> 00:10:12,740
pass it to formic and formic handles all

00:10:10,070 --> 00:10:15,050
the validation for you it also supports

00:10:12,740 --> 00:10:17,930
nested structures so you could pass it

00:10:15,050 --> 00:10:20,960
an idea of address city and it'll handle

00:10:17,930 --> 00:10:22,820
creating your data structure for you and

00:10:20,960 --> 00:10:26,780
putting the city in an object called

00:10:22,820 --> 00:10:28,340
address it's no magic there's no magic

00:10:26,780 --> 00:10:30,320
in there at all there it's just a plane

00:10:28,340 --> 00:10:31,790
all react components so if you've got

00:10:30,320 --> 00:10:35,120
problems with format you probably have

00:10:31,790 --> 00:10:37,280
problems with react itself so it's it's

00:10:35,120 --> 00:10:40,270
much easier to debug than then

00:10:37,280 --> 00:10:42,950
subscription logic it's also a

00:10:40,270 --> 00:10:45,950
relatively small bundle it's smaller

00:10:42,950 --> 00:10:49,310
than Redux form bigger than final form a

00:10:45,950 --> 00:10:50,570
little in between and this one I was

00:10:49,310 --> 00:10:54,800
surprised actually it's actually

00:10:50,570 --> 00:10:56,930
exceeded Redux form in terms of weekly

00:10:54,800 --> 00:10:59,450
downloads it's now 500k downloads I

00:10:56,930 --> 00:11:03,050
thought it was like an underdog look at

00:10:59,450 --> 00:11:04,850
that it's also recommended in the

00:11:03,050 --> 00:11:08,180
official react Docs there's an actual

00:11:04,850 --> 00:11:10,310
part about control components in the

00:11:08,180 --> 00:11:12,290
react Docs and at the end there's a note

00:11:10,310 --> 00:11:15,770
about how you know maybe you should

00:11:12,290 --> 00:11:19,310
reuse formic so a little bit of code

00:11:15,770 --> 00:11:23,270
because you gotta have some so this is

00:11:19,310 --> 00:11:25,880
how you write your your form you have

00:11:23,270 --> 00:11:27,440
this react component called formic you

00:11:25,880 --> 00:11:29,030
pass at your initial value so that's the

00:11:27,440 --> 00:11:30,910
values it's going to pass through to the

00:11:29,030 --> 00:11:34,480
fields themselves

00:11:30,910 --> 00:11:35,650
then after that you have the render prop

00:11:34,480 --> 00:11:38,800
they're probably going to change this to

00:11:35,650 --> 00:11:44,770
hook soon but not yet then run the props

00:11:38,800 --> 00:11:46,240
and in there you pass your fields so in

00:11:44,770 --> 00:11:48,870
your field for example here you see the

00:11:46,240 --> 00:11:51,010
first field there's name can I do that

00:11:48,870 --> 00:11:55,240
okay I don't know how to do the point I

00:11:51,010 --> 00:11:56,770
think there's name email placeholder

00:11:55,240 --> 00:11:59,740
email so you pass a couple of fields and

00:11:56,770 --> 00:12:03,520
it's able to basically handle setting

00:11:59,740 --> 00:12:06,250
the value setting unchanged dealing with

00:12:03,520 --> 00:12:08,320
validation a bunch of stuff and it's

00:12:06,250 --> 00:12:11,290
it's it helps a lot in terms of

00:12:08,320 --> 00:12:12,970
boilerplate so that's something pretty

00:12:11,290 --> 00:12:14,590
great in terms of validation this is

00:12:12,970 --> 00:12:16,510
what your yup schema would look like I

00:12:14,590 --> 00:12:20,350
find it's great it's super declarative

00:12:16,510 --> 00:12:22,690
it's super easy to test you just define

00:12:20,350 --> 00:12:24,760
what the shape about what the shape of

00:12:22,690 --> 00:12:27,640
object you're expecting so expecting an

00:12:24,760 --> 00:12:30,670
object with name age email password and

00:12:27,640 --> 00:12:32,260
this is what this should be so your age

00:12:30,670 --> 00:12:34,390
should be a number it's required it's a

00:12:32,260 --> 00:12:38,500
positive numbers and integer so it's

00:12:34,390 --> 00:12:40,540
it's much easier to write non-custom

00:12:38,500 --> 00:12:43,240
validation logic and what you do here is

00:12:40,540 --> 00:12:46,410
that this schema you just pass it to

00:12:43,240 --> 00:12:51,550
formic like this validation schema and

00:12:46,410 --> 00:12:56,530
then it matches those keys object keys

00:12:51,550 --> 00:12:58,900
here with the name prop there and it's

00:12:56,530 --> 00:13:02,230
able to do the validation for you so

00:12:58,900 --> 00:13:03,490
it's pretty practical now I don't know

00:13:02,230 --> 00:13:09,340
if anyone has ever met the perfect

00:13:03,490 --> 00:13:11,230
library but there is none so for make

00:13:09,340 --> 00:13:13,960
like another library it has cons as well

00:13:11,230 --> 00:13:17,590
although it is my personally my personal

00:13:13,960 --> 00:13:20,650
favorite so it's it's framework specific

00:13:17,590 --> 00:13:22,180
so as opposed to final form or redux

00:13:20,650 --> 00:13:24,760
form you can only use it with reacting

00:13:22,180 --> 00:13:26,710
react native it's a react component so

00:13:24,760 --> 00:13:30,100
it's hard to use in anything else it's

00:13:26,710 --> 00:13:32,080
also inflexible in some ways we had a

00:13:30,100 --> 00:13:38,050
lot of trouble at real life trying to

00:13:32,080 --> 00:13:41,140
set up autosave behavior so as as you're

00:13:38,050 --> 00:13:42,730
typing in your form it auto saves

00:13:41,140 --> 00:13:45,100
automatically every

00:13:42,730 --> 00:13:47,860
Ekans that was pretty hard to do with

00:13:45,100 --> 00:13:52,149
formic we had to do a workaround

00:13:47,860 --> 00:13:54,639
it was hard to into the onblur prop

00:13:52,149 --> 00:13:58,269
there's just it does a lot of things for

00:13:54,639 --> 00:13:59,980
you but it expects you to use it in a

00:13:58,269 --> 00:14:03,760
certain way and that's not a way the

00:13:59,980 --> 00:14:05,110
best it also claims to only support 80%

00:14:03,760 --> 00:14:08,529
of use cases when you get to the last

00:14:05,110 --> 00:14:10,899
20% things start to get weird

00:14:08,529 --> 00:14:12,610
like I said with the autosave stuff like

00:14:10,899 --> 00:14:15,279
that so it just tells you this is what

00:14:12,610 --> 00:14:17,350
we're expecting you to do and if you're

00:14:15,279 --> 00:14:22,089
falling out of that then you know just

00:14:17,350 --> 00:14:24,820
do your own thing also and this is an

00:14:22,089 --> 00:14:28,000
interesting one on our platform you're

00:14:24,820 --> 00:14:31,180
using material UI and style components

00:14:28,000 --> 00:14:33,880
together and with formic that's just a

00:14:31,180 --> 00:14:36,339
bad mix things just start to get really

00:14:33,880 --> 00:14:39,480
slow there's a there's an open issue on

00:14:36,339 --> 00:14:42,790
informing about this but basically the

00:14:39,480 --> 00:14:46,690
combination of those three things and a

00:14:42,790 --> 00:14:49,750
really long form guess things not work

00:14:46,690 --> 00:14:51,459
too well our solution was just to split

00:14:49,750 --> 00:14:53,620
up this long form in a bunch of

00:14:51,459 --> 00:14:55,449
different sections that might not will

00:14:53,620 --> 00:14:59,769
not always fly with your with your

00:14:55,449 --> 00:15:01,630
designer so no with an option also the

00:14:59,769 --> 00:15:04,269
entire forum validates on every key

00:15:01,630 --> 00:15:05,709
press which is good in some ways because

00:15:04,269 --> 00:15:09,220
if you have feels that depend on other

00:15:05,709 --> 00:15:11,170
fields so let's say yield that you type

00:15:09,220 --> 00:15:13,180
something in the souther field and you

00:15:11,170 --> 00:15:15,760
got a validate this field compared to

00:15:13,180 --> 00:15:17,889
that one so in terms of of that you know

00:15:15,760 --> 00:15:21,370
it it's the only way to do that by

00:15:17,889 --> 00:15:24,579
validating the entire in the entire form

00:15:21,370 --> 00:15:30,790
but it's not degrade in terms of

00:15:24,579 --> 00:15:32,319
performance so some including redox form

00:15:30,790 --> 00:15:34,060
is probably not good not a good idea for

00:15:32,319 --> 00:15:36,190
react native apps especially if it's not

00:15:34,060 --> 00:15:39,910
an iOS only react native app and yes

00:15:36,190 --> 00:15:42,190
those do exist final form is okay if

00:15:39,910 --> 00:15:44,319
you're fine with some magic I'm not too

00:15:42,190 --> 00:15:46,209
happy with that you know some people are

00:15:44,319 --> 00:15:48,069
just like yeah rx yes so if you're one

00:15:46,209 --> 00:15:51,310
of those folks you're gonna love final

00:15:48,069 --> 00:15:53,190
form for mcus is pretty great but it's

00:15:51,310 --> 00:15:59,430
not one size fits all

00:15:53,190 --> 00:16:02,490
and you know at the end of the day there

00:15:59,430 --> 00:16:06,120
there are no perfect libraries on our

00:16:02,490 --> 00:16:07,800
side we actually had to to remove formic

00:16:06,120 --> 00:16:11,070
we just made that decision last week and

00:16:07,800 --> 00:16:14,130
the reason why is because we have super

00:16:11,070 --> 00:16:15,960
super complicated forms which super

00:16:14,130 --> 00:16:19,620
complicated logic these are insurance

00:16:15,960 --> 00:16:22,380
products so we needed to be able to test

00:16:19,620 --> 00:16:25,650
them test the outcomes so like I said

00:16:22,380 --> 00:16:28,290
logic where you filled up this input you

00:16:25,650 --> 00:16:31,200
answered this there and then this part

00:16:28,290 --> 00:16:33,360
is is checked and has a value of this

00:16:31,200 --> 00:16:37,830
something like that so these are

00:16:33,360 --> 00:16:40,080
complicated business logic and and we

00:16:37,830 --> 00:16:41,400
couldn't go through the front-end to do

00:16:40,080 --> 00:16:44,780
those tests because that would be too

00:16:41,400 --> 00:16:48,480
long and formic handles unchanged value

00:16:44,780 --> 00:16:50,790
all that for you so we just wanted to

00:16:48,480 --> 00:16:52,260
have input/output tests and that's not

00:16:50,790 --> 00:16:54,060
possible with formic because the main

00:16:52,260 --> 00:16:57,000
value proper for make is that it reduces

00:16:54,060 --> 00:16:58,740
your boilerplate so on on our side

00:16:57,000 --> 00:17:00,360
unfortunately that didn't work but we

00:16:58,740 --> 00:17:03,120
will still be using it in other products

00:17:00,360 --> 00:17:06,990
that are simpler this one was just a

00:17:03,120 --> 00:17:08,610
little too intense so again any library

00:17:06,990 --> 00:17:11,010
you find you're going to go through the

00:17:08,610 --> 00:17:12,630
process of you know being super happy I

00:17:11,010 --> 00:17:17,939
found the solution to all my problems

00:17:12,630 --> 00:17:19,770
and then they're gonna be like oh no and

00:17:17,939 --> 00:17:21,449
you know you're gonna make that face

00:17:19,770 --> 00:17:23,459
they be like okay start over next

00:17:21,449 --> 00:17:26,400
library so that's the story of the

00:17:23,459 --> 00:17:29,370
JavaScript world but you know maybe one

00:17:26,400 --> 00:17:31,610
day also disclaimer no animals were

00:17:29,370 --> 00:17:31,610
harmed

00:17:33,490 --> 00:17:50,239
[Applause]

00:17:36,950 --> 00:17:50,239

YouTube URL: https://www.youtube.com/watch?v=_CjfQuaNPM0


