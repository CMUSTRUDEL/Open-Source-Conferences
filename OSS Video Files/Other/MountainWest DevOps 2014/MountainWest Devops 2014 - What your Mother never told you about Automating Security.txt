Title: MountainWest Devops 2014 - What your Mother never told you about Automating Security
Publication date: 2020-01-24
Playlist: MountainWest DevOps 2014
Description: 
	Your mother might be cooler than mine, but security is hard work. Heavily automated environments like "the cloud" bring both new strategies and new challenges. We'll work through some real-life problems and solutions; topics maybe your mom forgot to mention. Off-topic topics will include: controlling and tracking network access; 2-factor authentication and you; security-minded logging and metrics, and the importance of using protection for data at rest. There will be code.

Help us caption & translate this video!

http://amara.org/v/FG2a/
Captions: 
	00:00:25,700 --> 00:00:34,140
right so automating security things your

00:00:30,420 --> 00:00:37,140
mother didn't tell you about you don't

00:00:34,140 --> 00:00:39,450
know me so I spent my career in a mix of

00:00:37,140 --> 00:00:41,879
development operations and info SEC

00:00:39,450 --> 00:00:45,290
rules for the past few years I've been

00:00:41,879 --> 00:00:47,100
at risk I oh we're a small

00:00:45,290 --> 00:00:50,550
software-as-a-service startup that

00:00:47,100 --> 00:00:53,489
manages security issues this talk

00:00:50,550 --> 00:00:56,730
doesn't really have a lot to do with our

00:00:53,489 --> 00:00:59,970
our product per se but it does have to

00:00:56,730 --> 00:01:05,220
do with how we we secure our site and

00:00:59,970 --> 00:01:08,130
treat the data our clients data we run

00:01:05,220 --> 00:01:11,040
entirely in the cloud including our

00:01:08,130 --> 00:01:12,600
development environment we'd like to dog

00:01:11,040 --> 00:01:16,470
through everything from the top on down

00:01:12,600 --> 00:01:19,940
and sometimes that has security

00:01:16,470 --> 00:01:23,880
implications we can't control who sees

00:01:19,940 --> 00:01:26,280
our our network data and we can't

00:01:23,880 --> 00:01:33,330
control who gets our hard drives after

00:01:26,280 --> 00:01:35,869
we reboot our servers so automating

00:01:33,330 --> 00:01:39,720
security isn't really a new thing

00:01:35,869 --> 00:01:45,720
anymore than automating infrastructure

00:01:39,720 --> 00:01:47,939
is a new thing we use chef and some

00:01:45,720 --> 00:01:51,119
third-party software as a service apps

00:01:47,939 --> 00:01:53,490
to to do what we do so I'm going to

00:01:51,119 --> 00:01:55,970
focus on that today but really you could

00:01:53,490 --> 00:02:01,710
do this with just about anything be it a

00:01:55,970 --> 00:02:03,119
packer docker puppet you could build it

00:02:01,710 --> 00:02:05,299
with operating system package isn't a

00:02:03,119 --> 00:02:09,320
lot of scripting if you want it I

00:02:05,299 --> 00:02:09,320
suppose you could even do it Annie max

00:02:10,400 --> 00:02:20,930
so show of hands who thinks of security

00:02:14,610 --> 00:02:25,799
as their their day-to-day job a few so

00:02:20,930 --> 00:02:28,889
do you think it's easy no no security is

00:02:25,799 --> 00:02:30,269
hard it's a very broad topic it'll touch

00:02:28,889 --> 00:02:31,470
almost every piece of your

00:02:30,269 --> 00:02:36,900
infrastructure

00:02:31,470 --> 00:02:38,880
and if you slip up you're toast any

00:02:36,900 --> 00:02:42,210
mistake can be a vector in for an

00:02:38,880 --> 00:02:45,240
attacker if you followed the recent

00:02:42,210 --> 00:02:47,510
coverage for target it looks like their

00:02:45,240 --> 00:02:49,920
most recent breach came in through their

00:02:47,510 --> 00:02:55,500
heating and air conditioning management

00:02:49,920 --> 00:02:57,330
interfaces talk about esoteric right so

00:02:55,500 --> 00:02:59,970
it's hard to do right and any flaw can

00:02:57,330 --> 00:03:01,620
be exploited which it makes it pretty

00:02:59,970 --> 00:03:07,740
likely that I've missed something in my

00:03:01,620 --> 00:03:11,880
talk so where do we start we start with

00:03:07,740 --> 00:03:14,550
our own our apps the same way that

00:03:11,880 --> 00:03:17,910
DevOps borrows from the sort of agile

00:03:14,550 --> 00:03:21,000
development methodologies of small

00:03:17,910 --> 00:03:23,340
changes mean small bugs we want to do

00:03:21,000 --> 00:03:27,030
the same thing with security we want to

00:03:23,340 --> 00:03:28,770
do we want to make changes as lightly

00:03:27,030 --> 00:03:31,290
and as quickly as possible we want to

00:03:28,770 --> 00:03:33,690
close the window for an attack to be

00:03:31,290 --> 00:03:36,570
small rather than doing things like

00:03:33,690 --> 00:03:41,130
quarterly patch updates and having and

00:03:36,570 --> 00:03:47,519
having to make emergency requests to to

00:03:41,130 --> 00:03:49,620
get in fixes for important things so

00:03:47,519 --> 00:03:52,500
security is about managing risk your mom

00:03:49,620 --> 00:03:55,410
might have talked about this in talk

00:03:52,500 --> 00:03:57,750
about making good choices she might have

00:03:55,410 --> 00:04:01,019
suggested slowing down making sure that

00:03:57,750 --> 00:04:03,930
you you make the you're absolutely sure

00:04:01,019 --> 00:04:06,239
you're making the right decision a lot

00:04:03,930 --> 00:04:09,299
of security orgs work that way you know

00:04:06,239 --> 00:04:11,010
the it they'll take their time to make a

00:04:09,299 --> 00:04:15,930
decision then they spend time to execute

00:04:11,010 --> 00:04:17,669
it I'd like to advocate for making

00:04:15,930 --> 00:04:20,190
changes more quickly using the tooling

00:04:17,669 --> 00:04:22,229
that we have for DevOps and doing away

00:04:20,190 --> 00:04:26,910
with things like firewall change Fridays

00:04:22,229 --> 00:04:28,860
or quarterly OS patching I think in the

00:04:26,910 --> 00:04:31,140
long run they do more harm than good to

00:04:28,860 --> 00:04:33,750
our tour overall security posture by

00:04:31,140 --> 00:04:37,800
leaving the windows of exploitability

00:04:33,750 --> 00:04:38,880
open longer and they increase the chance

00:04:37,800 --> 00:04:40,620
that we're going to shoot ourselves in

00:04:38,880 --> 00:04:44,210
the foot and take down our site whether

00:04:40,620 --> 00:04:47,280
or not it's for security reason

00:04:44,210 --> 00:04:50,009
so where do we what next hosting hosting

00:04:47,280 --> 00:04:51,810
seems like a logical place to start I

00:04:50,009 --> 00:04:53,870
don't really have a lot to say about

00:04:51,810 --> 00:04:56,430
hosting we've designed our

00:04:53,870 --> 00:04:59,099
infrastructure to be rather hosting

00:04:56,430 --> 00:05:01,099
agnostic I don't believe that there's

00:04:59,099 --> 00:05:03,270
much of a magic bullet in any host and

00:05:01,099 --> 00:05:05,159
you still need to balance your

00:05:03,270 --> 00:05:10,009
particular requirements with what your

00:05:05,159 --> 00:05:15,270
host is capable of doing so unicorns

00:05:10,009 --> 00:05:16,710
there's a lot of great hosts to that

00:05:15,270 --> 00:05:20,150
will allow you to get up and running

00:05:16,710 --> 00:05:24,479
quickly but you need to be aware of your

00:05:20,150 --> 00:05:25,860
requirements if you need to keep the

00:05:24,479 --> 00:05:28,319
data at rest in your environment

00:05:25,860 --> 00:05:30,419
encrypted you may not be able to use

00:05:28,319 --> 00:05:35,360
something like Heroku or App Engine or

00:05:30,419 --> 00:05:37,620
even a data store as a service like RDS

00:05:35,360 --> 00:05:42,240
but if it doesn't matter for your data

00:05:37,620 --> 00:05:45,060
then you know go for it so is there any

00:05:42,240 --> 00:05:47,490
secure hosting there's fire host I don't

00:05:45,060 --> 00:05:50,759
we don't use them I don't know a lot

00:05:47,490 --> 00:05:52,349
about their internals from their website

00:05:50,759 --> 00:05:59,580
it looks like they do a lot of things

00:05:52,349 --> 00:06:02,069
that I talked about but networks after

00:05:59,580 --> 00:06:03,779
your appt network security and access

00:06:02,069 --> 00:06:04,560
into your network and services is

00:06:03,779 --> 00:06:08,819
probably where you're going to spend

00:06:04,560 --> 00:06:12,050
most of your time securing things if

00:06:08,819 --> 00:06:12,050
we're talking about Transport Security

00:06:12,830 --> 00:06:20,370
if you are able to physically control

00:06:15,599 --> 00:06:22,710
your network that's terrific make sure

00:06:20,370 --> 00:06:25,199
you still segment off things that don't

00:06:22,710 --> 00:06:28,649
belong or shouldn't be able to speak to

00:06:25,199 --> 00:06:32,009
production like your HVAC system if it's

00:06:28,649 --> 00:06:34,860
on there logically isolated networks

00:06:32,009 --> 00:06:37,529
like VLANs are probably how you would do

00:06:34,860 --> 00:06:40,490
that and they also make a really good

00:06:37,529 --> 00:06:43,500
way if you're in a hosted environment to

00:06:40,490 --> 00:06:46,529
to be segmented off from other clients

00:06:43,500 --> 00:06:48,389
do your research though if you're if

00:06:46,529 --> 00:06:49,919
you're honest small host make sure that

00:06:48,389 --> 00:06:52,680
you can get an audit report something

00:06:49,919 --> 00:06:54,360
like a SAS 70 and make sure that what

00:06:52,680 --> 00:06:56,280
they're doing to keep your data away

00:06:54,360 --> 00:07:02,430
from your neighbor's data

00:06:56,280 --> 00:07:05,259
matches your needs another interesting

00:07:02,430 --> 00:07:07,539
way to protect the Transport Security is

00:07:05,259 --> 00:07:10,389
internally VPN ting so all your host

00:07:07,539 --> 00:07:13,900
either join a VPN or they speak to each

00:07:10,389 --> 00:07:16,830
other in a mesh host to host VPN we went

00:07:13,900 --> 00:07:18,940
down this road for a bit ourselves

00:07:16,830 --> 00:07:24,340
eventually we outgrew what we were able

00:07:18,940 --> 00:07:25,900
to do with ipsec internally I think we

00:07:24,340 --> 00:07:30,840
could have made it work in the long run

00:07:25,900 --> 00:07:34,270
but we we chose to go the VPC route and

00:07:30,840 --> 00:07:38,259
then you could always SSL everything to

00:07:34,270 --> 00:07:40,780
itself that gets difficult with certain

00:07:38,259 --> 00:07:42,580
configurations some applications you

00:07:40,780 --> 00:07:47,469
need to purchase the commercial version

00:07:42,580 --> 00:07:49,330
if you want ssl I can get annoying s

00:07:47,469 --> 00:07:52,990
tunnel and some other tools will be your

00:07:49,330 --> 00:07:58,199
friend if you get on that route so

00:07:52,990 --> 00:08:03,759
network access host-based firewalls are

00:07:58,199 --> 00:08:05,740
the sorry hello space firewalls are

00:08:03,759 --> 00:08:10,029
probably the simplest easiest way to get

00:08:05,740 --> 00:08:11,949
into it chef has some great recipes for

00:08:10,029 --> 00:08:14,979
that I'm sure puppet and some of the

00:08:11,949 --> 00:08:18,219
others do as well there are some meta

00:08:14,979 --> 00:08:21,060
firewall management apps that if you

00:08:18,219 --> 00:08:27,909
have both hardware and software

00:08:21,060 --> 00:08:30,159
firewalls can be useful and then AWS in

00:08:27,909 --> 00:08:34,180
particular has their logical security

00:08:30,159 --> 00:08:36,820
groups which operate like software

00:08:34,180 --> 00:08:38,829
firewalls based on your grouping of

00:08:36,820 --> 00:08:41,560
servers you can do something similar

00:08:38,829 --> 00:08:44,290
with Chef and rolls and host-based

00:08:41,560 --> 00:08:47,440
firewalls if you choose we've had

00:08:44,290 --> 00:08:49,390
success with both the security groups

00:08:47,440 --> 00:08:56,949
and the host-based firewalls and chef

00:08:49,390 --> 00:09:00,480
roles so these are iptables is probably

00:08:56,949 --> 00:09:04,410
the oldest in Maine cookbook for

00:09:00,480 --> 00:09:04,410
managing a host-based firewall

00:09:05,940 --> 00:09:17,860
sorry fashion issue and a couple more

00:09:15,190 --> 00:09:20,950
that there's a lot more in the community

00:09:17,860 --> 00:09:25,690
site you'll probably find more on github

00:09:20,950 --> 00:09:30,310
as well an auto firewalling the idea

00:09:25,690 --> 00:09:34,600
here is to automatically block or shawn

00:09:30,310 --> 00:09:38,710
any attackers so if somebody's hitting

00:09:34,600 --> 00:09:40,330
your your SSH out of your bastion host

00:09:38,710 --> 00:09:45,100
that it'll automatically block them

00:09:40,330 --> 00:09:48,280
putting in the iptables rules it works

00:09:45,100 --> 00:09:51,930
well for a single server setup if you

00:09:48,280 --> 00:09:54,820
need multiple servers to collude and to

00:09:51,930 --> 00:09:56,770
in order to make decisions you may have

00:09:54,820 --> 00:10:00,670
to to build your own using something

00:09:56,770 --> 00:10:03,190
like an IDs to centralize logging then

00:10:00,670 --> 00:10:09,640
talking back to your firewall or your

00:10:03,190 --> 00:10:12,190
lap which brings us to lapse if you're

00:10:09,640 --> 00:10:14,860
not familiar web app firewalls are meant

00:10:12,190 --> 00:10:17,740
to operate much like a host firewall any

00:10:14,860 --> 00:10:24,430
bad web requests coming in is

00:10:17,740 --> 00:10:26,650
theoretically blocked they're also handy

00:10:24,430 --> 00:10:29,020
if you have a bug in your application

00:10:26,650 --> 00:10:30,790
and you can't patch it quickly enough

00:10:29,020 --> 00:10:33,760
for whatever reason you have a really

00:10:30,790 --> 00:10:35,020
long pat psychic or deploy cycle but you

00:10:33,760 --> 00:10:37,120
know that there's a security

00:10:35,020 --> 00:10:39,370
vulnerability in your app you can use

00:10:37,120 --> 00:10:44,620
the laughs as a way to mitigate those

00:10:39,370 --> 00:10:46,210
requests so in the chef community right

00:10:44,620 --> 00:10:48,490
now there's the modsecurity cookbook

00:10:46,210 --> 00:10:53,020
which I wrote a few years ago and is

00:10:48,490 --> 00:10:55,360
very stale so sorry for that if anybody

00:10:53,020 --> 00:10:59,220
would like to take it over or would like

00:10:55,360 --> 00:11:03,760
to help with that see me after the talk

00:10:59,220 --> 00:11:07,680
there's a few services that operate like

00:11:03,760 --> 00:11:14,240
proxies and you can use those as well

00:11:07,680 --> 00:11:16,250
it's a relatively new space and some

00:11:14,240 --> 00:11:19,149
seemed to be a little more than

00:11:16,250 --> 00:11:23,060
modsecurity with web front end which is

00:11:19,149 --> 00:11:27,920
which is good but you know again do your

00:11:23,060 --> 00:11:33,680
research on who you end up using dls

00:11:27,920 --> 00:11:36,589
protection so you're probably going to

00:11:33,680 --> 00:11:41,180
get deos but it's probably not how you

00:11:36,589 --> 00:11:44,000
what you think it'll be most people

00:11:41,180 --> 00:11:45,770
think of a do s as a network do s in

00:11:44,000 --> 00:11:48,470
that somebody floods your network with a

00:11:45,770 --> 00:11:52,899
whole bunch of traffic that unless you

00:11:48,470 --> 00:11:56,690
are really large or a particular target

00:11:52,899 --> 00:11:58,279
it's not terribly likely you're more

00:11:56,690 --> 00:12:00,080
likely to have a really slow page

00:11:58,279 --> 00:12:03,649
somewhere in your application your site

00:12:00,080 --> 00:12:06,470
and somebody's going to hit it over and

00:12:03,649 --> 00:12:10,870
over and over again whether it's a real

00:12:06,470 --> 00:12:18,890
user or you got popular one day or

00:12:10,870 --> 00:12:24,589
scrapers I hate screws so this is a mix

00:12:18,890 --> 00:12:25,820
of different do s mitigation apps some

00:12:24,589 --> 00:12:27,589
of these are more suited towards

00:12:25,820 --> 00:12:30,410
application do s if you have a really

00:12:27,589 --> 00:12:32,180
slow page and or if people are just

00:12:30,410 --> 00:12:37,360
dedicated to really nailing your

00:12:32,180 --> 00:12:40,040
application and others are aimed at

00:12:37,360 --> 00:12:49,700
network do essence which you may have a

00:12:40,040 --> 00:12:51,170
need for so now the bastion host if

00:12:49,700 --> 00:12:53,570
you're not familiar bastion host is a

00:12:51,170 --> 00:12:56,390
hardened system to provide a gateway

00:12:53,570 --> 00:12:59,209
into your production environment it's a

00:12:56,390 --> 00:13:01,130
other than your load balancer or

00:12:59,209 --> 00:13:02,779
whatever your web front door is it

00:13:01,130 --> 00:13:06,200
should really be the only way to get

00:13:02,779 --> 00:13:08,209
into your production environment it

00:13:06,200 --> 00:13:11,570
should run as few services as possible

00:13:08,209 --> 00:13:15,860
in our case we were on ssh in a VPN I

00:13:11,570 --> 00:13:17,690
can't imagine needing much more but the

00:13:15,860 --> 00:13:21,230
idea is the limit access as much as

00:13:17,690 --> 00:13:23,740
possible and to log it and use

00:13:21,230 --> 00:13:23,740
two-factor

00:13:23,860 --> 00:13:33,850
we'll get to that so this is related to

00:13:28,940 --> 00:13:37,280
the chef cookbooks SSH but in addition

00:13:33,850 --> 00:13:39,700
don't use passwords your mom wouldn't

00:13:37,280 --> 00:13:42,110
like it no but there's not much

00:13:39,700 --> 00:13:44,870
additional security of using SSH

00:13:42,110 --> 00:13:50,530
passwords in addition to ssh-keys at

00:13:44,870 --> 00:13:53,000
this point just don't make sure to check

00:13:50,530 --> 00:13:56,720
your keys that they have a passphrase

00:13:53,000 --> 00:14:00,850
however set up a script whatever you got

00:13:56,720 --> 00:14:05,750
to do make your people sign an affidavit

00:14:00,850 --> 00:14:07,730
and then the openssh and the user's

00:14:05,750 --> 00:14:15,070
cookbook make it pretty relatively easy

00:14:07,730 --> 00:14:15,070
to manage people still log into roof I

00:14:15,760 --> 00:14:18,820
hope not

00:14:24,810 --> 00:14:32,740
so if you need to use if you need if

00:14:31,570 --> 00:14:35,020
somebody's they have the root password

00:14:32,740 --> 00:14:36,640
generate it print it out don't look at

00:14:35,020 --> 00:14:38,680
it mail it to your mom have it keeper

00:14:36,640 --> 00:14:40,750
have her keep it like in an envelope in

00:14:38,680 --> 00:14:43,240
your desk you soo do if you really need

00:14:40,750 --> 00:14:46,150
to become routes to do to route the

00:14:43,240 --> 00:14:48,670
users cookbook makes it pretty easy to

00:14:46,150 --> 00:14:55,240
make sure that appropriate people have

00:14:48,670 --> 00:14:57,580
soo do so VPN openvpn has a good

00:14:55,240 --> 00:14:59,970
cookbook for chef as well again it

00:14:57,580 --> 00:15:04,000
integrates well with the user's cookbook

00:14:59,970 --> 00:15:05,650
it's a two factor there's not much of an

00:15:04,000 --> 00:15:07,420
excuse to not be using two-factor

00:15:05,650 --> 00:15:12,130
particularly on your bastion host these

00:15:07,420 --> 00:15:15,820
days we're big fans of duo sec so we

00:15:12,130 --> 00:15:18,760
released the duo UNIX cookbook at the

00:15:15,820 --> 00:15:23,770
top there because I didn't see that

00:15:18,760 --> 00:15:26,410
there was another one already but it

00:15:23,770 --> 00:15:30,250
makes it pretty it makes it very simple

00:15:26,410 --> 00:15:32,500
to add to factor to your bastion host or

00:15:30,250 --> 00:15:34,060
anything running SSH I wouldn't

00:15:32,500 --> 00:15:40,779
recommend running it on every host

00:15:34,060 --> 00:15:44,050
you'll drive yourself mad and there's

00:15:40,779 --> 00:15:46,029
one excuse we have internally we have

00:15:44,050 --> 00:15:48,100
open VPN working with duo sec but we

00:15:46,029 --> 00:15:54,760
haven't been able to split that out into

00:15:48,100 --> 00:15:57,040
a separate chef cookbook yet but soon if

00:15:54,760 --> 00:15:59,529
you're if you're in desperate need of it

00:15:57,040 --> 00:16:04,150
i'll be around i can share the details

00:15:59,529 --> 00:16:12,760
of it so servers are neat they do lots

00:16:04,150 --> 00:16:16,060
of stuff automatic updates we wrote our

00:16:12,760 --> 00:16:17,950
own to do this though I didn't remember

00:16:16,060 --> 00:16:19,900
it until a few days ago I really thought

00:16:17,950 --> 00:16:23,470
it was the apt cookbook that was doing

00:16:19,900 --> 00:16:27,010
our automatic upped updates of operating

00:16:23,470 --> 00:16:28,600
system packages these are a couple that

00:16:27,010 --> 00:16:33,250
I was able to find on the community site

00:16:28,600 --> 00:16:35,770
they seem sane but I think ultimately in

00:16:33,250 --> 00:16:37,760
the chef community what we need is sort

00:16:35,770 --> 00:16:41,910
of a meta

00:16:37,760 --> 00:16:44,399
upgrading cookbook that works similar to

00:16:41,910 --> 00:16:47,100
how the fly the sorry the database

00:16:44,399 --> 00:16:54,089
cookbook works today with speaking to my

00:16:47,100 --> 00:16:56,490
sequel in Postgres I understand the case

00:16:54,089 --> 00:16:59,610
made for things like quarterly or

00:16:56,490 --> 00:17:02,700
monthly updates of software to reduce to

00:16:59,610 --> 00:17:05,490
sort of to pin the risk to a single day

00:17:02,700 --> 00:17:09,809
or period in time I'm not a big fan of

00:17:05,490 --> 00:17:11,579
that I prefer to allow most updates to

00:17:09,809 --> 00:17:13,860
happen as they come out and depend or

00:17:11,579 --> 00:17:17,130
freeze the critical or unreliable

00:17:13,860 --> 00:17:18,540
packages things like our database

00:17:17,130 --> 00:17:21,329
packages you know we're not going to

00:17:18,540 --> 00:17:23,699
allow my sequel to get automatically

00:17:21,329 --> 00:17:25,439
upgraded or you may know of some

00:17:23,699 --> 00:17:28,290
packages in your own environment that

00:17:25,439 --> 00:17:32,700
don't restart correctly when the RPM or

00:17:28,290 --> 00:17:33,990
deb gets upgraded regardless if you

00:17:32,700 --> 00:17:35,309
don't want things to automatically

00:17:33,990 --> 00:17:38,190
update and you just want to get nagged

00:17:35,309 --> 00:17:40,410
when something is has a vulnerability

00:17:38,190 --> 00:17:47,250
against it there's a portion of the

00:17:40,410 --> 00:17:51,120
cloud passage app that will do that so

00:17:47,250 --> 00:17:55,559
OS hardening if you're unfamiliar

00:17:51,120 --> 00:17:57,929
SELinux is a kernel and core extension

00:17:55,559 --> 00:17:59,490
to the Linux OS that allows you to

00:17:57,929 --> 00:18:02,940
prevent programs from doing things they

00:17:59,490 --> 00:18:04,650
shouldn't you create profiles tells

00:18:02,940 --> 00:18:07,650
selinux what this program is allowed to

00:18:04,650 --> 00:18:10,100
do if you get serious about using

00:18:07,650 --> 00:18:12,179
SELinux and you're also using chef

00:18:10,100 --> 00:18:14,309
cookbooks that compile or you're

00:18:12,179 --> 00:18:15,750
compiling your own software you likely

00:18:14,309 --> 00:18:17,580
will have to create some of your own

00:18:15,750 --> 00:18:23,309
profiles in addition to the ones

00:18:17,580 --> 00:18:26,250
provided by your OS vendor and sis

00:18:23,309 --> 00:18:29,580
Control has a cookbook it talks to a lot

00:18:26,250 --> 00:18:32,850
of low-level tunable zeeeee and Linux

00:18:29,580 --> 00:18:34,470
and it's handy for tweaking lots of

00:18:32,850 --> 00:18:40,620
things some of which is security related

00:18:34,470 --> 00:18:45,240
some of which are not IDS's snorts a

00:18:40,620 --> 00:18:48,350
network ID s 0 s second aid are more

00:18:45,240 --> 00:18:48,350
host-based IDS's

00:18:49,190 --> 00:18:56,760
and cloud passage will do some file

00:18:54,420 --> 00:18:59,490
integrity checking what you're really

00:18:56,760 --> 00:19:01,559
looking for here is to be able to detect

00:18:59,490 --> 00:19:04,830
change on your systems you want to know

00:19:01,559 --> 00:19:08,010
files change particularly if they're

00:19:04,830 --> 00:19:11,850
sensitive things and Bend etsy password

00:19:08,010 --> 00:19:14,220
it's a shadow things of that nature ops

00:19:11,850 --> 00:19:16,110
matic seems like a new player in the

00:19:14,220 --> 00:19:18,540
space I don't think they're really

00:19:16,110 --> 00:19:22,320
targeting being an IDs but they do a

00:19:18,540 --> 00:19:26,040
good job of showing you what's changing

00:19:22,320 --> 00:19:33,750
on your servers in a in a unique

00:19:26,040 --> 00:19:36,840
interface so encrypting data rest this

00:19:33,750 --> 00:19:39,300
one's a relatively fun one for me I

00:19:36,840 --> 00:19:43,320
never really got into the whole encrypt

00:19:39,300 --> 00:19:46,080
your hard drive on servers up until we

00:19:43,320 --> 00:19:48,210
entered the cloud laptops made sense if

00:19:46,080 --> 00:19:49,920
somebody steals my lap topic and look at

00:19:48,210 --> 00:19:54,510
the data on my drive they might get your

00:19:49,920 --> 00:19:56,190
mom's tax returns you know but from my

00:19:54,510 --> 00:19:58,200
servers other than giving my hard drive

00:19:56,190 --> 00:20:00,120
away to somebody they're not it's not

00:19:58,200 --> 00:20:03,240
the risk of somebody getting that data

00:20:00,120 --> 00:20:04,830
seems low much lower than if they were

00:20:03,240 --> 00:20:06,360
able to hack into the server otherwise

00:20:04,830 --> 00:20:10,530
and just access the data while the

00:20:06,360 --> 00:20:13,710
server was running but in the cloud it's

00:20:10,530 --> 00:20:15,990
different we don't know where our hard

00:20:13,710 --> 00:20:22,140
drives are going to go after we reboot

00:20:15,990 --> 00:20:24,480
that ec2 server so since we operate

00:20:22,140 --> 00:20:28,110
entirely in the cloud we encrypt the

00:20:24,480 --> 00:20:33,559
volumes that we are using the first

00:20:28,110 --> 00:20:36,679
cookbook is ours and works with EBS and

00:20:33,559 --> 00:20:40,500
instance volumes on the second cookbook

00:20:36,679 --> 00:20:43,140
there is a one-time encrypted volume

00:20:40,500 --> 00:20:45,809
cookbook which is interesting the third

00:20:43,140 --> 00:20:47,700
one is works with some commercial

00:20:45,809 --> 00:20:49,920
software I don't know a ton about it but

00:20:47,700 --> 00:20:53,670
it seems to have been in the community

00:20:49,920 --> 00:20:56,490
for a bit and encrypting backups

00:20:53,670 --> 00:21:00,540
somebody gets a copy of my backup that's

00:20:56,490 --> 00:21:02,930
a bad deal so we encrypt our as we store

00:21:00,540 --> 00:21:06,830
them in s3 will release that in a cook

00:21:02,930 --> 00:21:08,090
soon it'll likely be a lightweight

00:21:06,830 --> 00:21:12,230
resource like some of the others that

00:21:08,090 --> 00:21:13,970
we've released and if you're not

00:21:12,230 --> 00:21:16,510
familiar with tar snap it's a super

00:21:13,970 --> 00:21:18,830
secure file storage service it's

00:21:16,510 --> 00:21:21,770
essentially it's perfectly suited for

00:21:18,830 --> 00:21:24,350
storing your backups there's a cookbook

00:21:21,770 --> 00:21:27,700
for it it looks like it would do what

00:21:24,350 --> 00:21:29,870
you what you would need to get that done

00:21:27,700 --> 00:21:32,360
and there's the option of using a

00:21:29,870 --> 00:21:36,920
network volume something like EBS with

00:21:32,360 --> 00:21:39,530
the previous value encryption cookbooks

00:21:36,920 --> 00:21:44,990
would allow you to have encrypted backup

00:21:39,530 --> 00:21:48,530
sitting on that volume in centralized

00:21:44,990 --> 00:21:51,580
logging should really be the cure the

00:21:48,530 --> 00:21:53,660
core of your security infrastructure

00:21:51,580 --> 00:21:56,960
everything you want everything to go

00:21:53,660 --> 00:21:59,090
into some sort of log whether you build

00:21:56,960 --> 00:22:00,830
your own using something like lost log

00:21:59,090 --> 00:22:03,560
stash your spunk in your environment or

00:22:00,830 --> 00:22:06,350
you throw into the cloud but be aware of

00:22:03,560 --> 00:22:08,150
what data is going in there if you're if

00:22:06,350 --> 00:22:09,890
you're outsourcing centralized logging

00:22:08,150 --> 00:22:11,390
to the cloud you certainly don't want

00:22:09,890 --> 00:22:13,460
things like passwords ending up in there

00:22:11,390 --> 00:22:14,900
even if you're not outsourcing it you

00:22:13,460 --> 00:22:17,990
probably don't want passwords in the

00:22:14,900 --> 00:22:21,500
logs but really you should try to log as

00:22:17,990 --> 00:22:23,990
much as you can stand anything from

00:22:21,500 --> 00:22:26,570
normal system events log in log out to

00:22:23,990 --> 00:22:28,280
major application events application

00:22:26,570 --> 00:22:32,330
exceptions if you're not already using

00:22:28,280 --> 00:22:33,830
something else like honey badger to

00:22:32,330 --> 00:22:36,260
every connection made in your

00:22:33,830 --> 00:22:38,060
environment seriously we log every

00:22:36,260 --> 00:22:42,230
connection made within our environment

00:22:38,060 --> 00:22:44,000
to log stash it's just a game of time

00:22:42,230 --> 00:22:46,700
and resources and whether that data is

00:22:44,000 --> 00:22:48,830
useful to you but it allows you to build

00:22:46,700 --> 00:22:50,330
dashboards and to run reports that you

00:22:48,830 --> 00:22:55,340
wouldn't be able to if you don't have

00:22:50,330 --> 00:22:58,270
the data so testing securing things is

00:22:55,340 --> 00:23:00,560
really only part of the game I mean you

00:22:58,270 --> 00:23:04,900
need to test your work as much as you

00:23:00,560 --> 00:23:09,830
write good unit tests for your own code

00:23:04,900 --> 00:23:12,970
so we're a rail site so these are some

00:23:09,830 --> 00:23:15,800
Ruby on Rails static analysis tools

00:23:12,970 --> 00:23:17,980
other languages or platforms would have

00:23:15,800 --> 00:23:20,900
others as well

00:23:17,980 --> 00:23:22,340
break man's a gem that will read through

00:23:20,900 --> 00:23:25,130
it like lint if you've ever used lint

00:23:22,340 --> 00:23:27,799
code climate integrates with github and

00:23:25,130 --> 00:23:32,059
will check out any commits as they come

00:23:27,799 --> 00:23:33,770
in but don't start doing static analysis

00:23:32,059 --> 00:23:35,240
unless you already have a reasonable

00:23:33,770 --> 00:23:37,190
test suite in place for your app

00:23:35,240 --> 00:23:44,710
otherwise you will shoot yourself in the

00:23:37,190 --> 00:23:46,730
foot host Network vulnerability scanning

00:23:44,710 --> 00:23:50,149
koalas and NASA's have two very good

00:23:46,730 --> 00:23:52,850
products Klaus is useful for testing

00:23:50,149 --> 00:23:55,100
from the outside nessus is very useful

00:23:52,850 --> 00:23:58,779
for testing from the inside we started

00:23:55,100 --> 00:24:03,080
an ass's cookbook it can install and

00:23:58,779 --> 00:24:05,659
setup users and such it is a little bit

00:24:03,080 --> 00:24:07,039
brittle at the moment the nessus tools

00:24:05,659 --> 00:24:12,380
for that are not the easiest to work

00:24:07,039 --> 00:24:15,980
with but we'll get it there so web app

00:24:12,380 --> 00:24:17,510
scanning Sentinel koalas or white hat

00:24:15,980 --> 00:24:19,250
and koala suppose have products that you

00:24:17,510 --> 00:24:22,960
can use to scan your app from the

00:24:19,250 --> 00:24:22,960
outside there are some open source ones

00:24:23,770 --> 00:24:29,929
that will work well the idea here is to

00:24:28,070 --> 00:24:37,850
make sure that you get it on a schedule

00:24:29,929 --> 00:24:39,940
and fix things so at this point you've

00:24:37,850 --> 00:24:42,110
probably got a pile of vulnerabilities

00:24:39,940 --> 00:24:43,669
you want to fix what matters this is

00:24:42,110 --> 00:24:47,480
where our app would come in if you're

00:24:43,669 --> 00:24:49,880
using it to find what would is most

00:24:47,480 --> 00:24:57,740
likely to lead to an exploit and to

00:24:49,880 --> 00:25:08,450
automate I don't know five town so war

00:24:57,740 --> 00:25:11,980
games I've started a project that uses a

00:25:08,450 --> 00:25:11,980
couple vagrant instances

00:25:12,120 --> 00:25:20,890
and what we do is we provision an

00:25:18,400 --> 00:25:22,240
attacker in a defender they're very

00:25:20,890 --> 00:25:25,870
simple at the moment right now the

00:25:22,240 --> 00:25:35,040
defender creates a an encrypted volume

00:25:25,870 --> 00:25:35,040
as a test and sets up sets up to factor

00:25:35,760 --> 00:25:42,780
so Louise if this takes too long cancel

00:25:38,830 --> 00:25:46,840
it should be set up as it is all right

00:25:42,780 --> 00:25:48,400
so i'll be sharing this a project by the

00:25:46,840 --> 00:25:52,560
end of the week but the idea here is to

00:25:48,400 --> 00:25:55,390
create a demo of all the security

00:25:52,560 --> 00:25:57,520
cookbooks that are reasonable in chef

00:25:55,390 --> 00:25:59,890
and I'd really like to have branches in

00:25:57,520 --> 00:26:03,670
other platforms as well so if you're

00:25:59,890 --> 00:26:05,380
really good at security and puppet I'd

00:26:03,670 --> 00:26:08,680
love to chat we can set up a branch and

00:26:05,380 --> 00:26:12,220
work on it that way the other side of

00:26:08,680 --> 00:26:14,920
this is the attacker server which would

00:26:12,220 --> 00:26:27,150
launch an nmap scan against our defender

00:26:14,920 --> 00:26:27,150
I will see if two-factor works

00:26:29,750 --> 00:26:40,290
no I'm not getting any network ok but so

00:26:36,720 --> 00:26:41,730
more I need help with the automated

00:26:40,290 --> 00:26:46,140
security I'd really like to create a

00:26:41,730 --> 00:26:48,450
common language for DevOps and to talk

00:26:46,140 --> 00:26:50,100
about security and what things we should

00:26:48,450 --> 00:26:52,590
be doing what things we shouldn't and to

00:26:50,100 --> 00:26:54,690
have a good live example based on

00:26:52,590 --> 00:26:58,200
something like vagrants or doctor for

00:26:54,690 --> 00:27:02,100
people that are not initiated to to look

00:26:58,200 --> 00:27:05,610
at and to poke around with second link

00:27:02,100 --> 00:27:10,380
is where we've been putting cookbooks as

00:27:05,610 --> 00:27:13,350
we write them again we use chef and then

00:27:10,380 --> 00:27:18,110
the last one is my stale out of date

00:27:13,350 --> 00:27:18,110
very very sad modsecurity cookbook

00:27:18,260 --> 00:27:24,210
t-shirts we have a long-standing bug

00:27:21,030 --> 00:27:26,310
bounty if you find any bugs in the

00:27:24,210 --> 00:27:27,750
cookbooks we've released or issue any

00:27:26,310 --> 00:27:30,690
pull requests I've got a bunch of

00:27:27,750 --> 00:27:34,740
t-shirts I brought with me come find me

00:27:30,690 --> 00:27:39,870
and if you want to play around with the

00:27:34,740 --> 00:27:41,820
automated war games and set up a non

00:27:39,870 --> 00:27:42,780
chef branch or chef solo branch or

00:27:41,820 --> 00:27:46,940
something that would be wonderful

00:27:42,780 --> 00:27:46,940
t-shirts thank you

00:28:03,520 --> 00:28:05,580
you

00:28:19,910 --> 00:28:21,970

YouTube URL: https://www.youtube.com/watch?v=mmCSPB1JBJ0


