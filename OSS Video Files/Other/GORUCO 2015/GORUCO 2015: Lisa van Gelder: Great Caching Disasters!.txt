Title: GORUCO 2015: Lisa van Gelder: Great Caching Disasters!
Publication date: 2020-01-23
Playlist: GORUCO 2015
Description: 
	@techbint
Whenever something has gone seriously wrong for me in production caching has been at the root of it. Live Q&A with Julian Assange almost brought the site down? Caching fail. Servers can't cope with traffic about a new woolly rat? Caching fail. Half the site is showing sorry pages? Caching fail. This talk will use these disasters to explain why the simplest caching is always the best.

 Talk given at GORUCO 2015: http://goruco.com
Captions: 
	00:00:13,410 --> 00:00:18,090
I am Lisa van gelder I am VP of

00:00:16,529 --> 00:00:19,920
engineering and stride which is a

00:00:18,090 --> 00:00:22,170
consultancy company here in New York and

00:00:19,920 --> 00:00:24,360
before I work destroyed I used to book a

00:00:22,170 --> 00:00:26,189
guardian newspaper and let's talk about

00:00:24,360 --> 00:00:28,710
some great cashing disasters that we had

00:00:26,189 --> 00:00:30,330
while I was there so i joined the

00:00:28,710 --> 00:00:32,699
guardian in about two thousand eight and

00:00:30,330 --> 00:00:34,199
really soon after i joined them the

00:00:32,699 --> 00:00:36,900
websites other going down every

00:00:34,199 --> 00:00:39,150
lunchtime it was really weird so long

00:00:36,900 --> 00:00:40,680
time was peak traffic but it wasn't a

00:00:39,150 --> 00:00:42,030
higher than normal traffic oh it's

00:00:40,680 --> 00:00:44,100
pretty much standard there's no reason

00:00:42,030 --> 00:00:45,960
why teams are going down this went on

00:00:44,100 --> 00:00:47,579
for about a week before someone finally

00:00:45,960 --> 00:00:49,890
thought to look at the caching stats

00:00:47,579 --> 00:00:52,739
what we found was the right foot website

00:00:49,890 --> 00:00:56,460
went down the cash was being cleared and

00:00:52,739 --> 00:00:57,989
this made sense so traffic at peak time

00:00:56,460 --> 00:01:00,180
about then was about two thousand

00:00:57,989 --> 00:01:02,399
requests per second we're doing that on

00:01:00,180 --> 00:01:04,379
12 servers so the only way we could

00:01:02,399 --> 00:01:07,560
serve that quickly to rely very heavily

00:01:04,379 --> 00:01:09,420
on cashing so if you clear the caches at

00:01:07,560 --> 00:01:11,070
peak traffic by the time of cash you

00:01:09,420 --> 00:01:13,740
scroll up again for websites down the

00:01:11,070 --> 00:01:15,240
service can't cope with the loan so now

00:01:13,740 --> 00:01:17,700
we understand it's caching causing the

00:01:15,240 --> 00:01:18,899
problem but why so you started going

00:01:17,700 --> 00:01:20,759
through the logs trying to see what was

00:01:18,899 --> 00:01:22,979
going on we noticed that right before

00:01:20,759 --> 00:01:26,340
the website went down every time someone

00:01:22,979 --> 00:01:28,410
permitted a poll so this is the example

00:01:26,340 --> 00:01:29,759
of a poll it answers such burning

00:01:28,410 --> 00:01:33,090
questions as you has the better hair

00:01:29,759 --> 00:01:34,679
then if Aniston or justin bieber and the

00:01:33,090 --> 00:01:38,310
pole at this point was actually numbers

00:01:34,679 --> 00:01:40,500
so not percentages so 29 people wanted

00:01:38,310 --> 00:01:42,660
to vote the Justin Bieber's hair some

00:01:40,500 --> 00:01:45,330
are permitted a bug we said right 25

00:01:42,660 --> 00:01:48,509
people voted i voted it didn't go to 30

00:01:45,330 --> 00:01:50,970
what happens the answer was cashing so

00:01:48,509 --> 00:01:52,410
another for great i can fix this bug so

00:01:50,970 --> 00:01:54,090
every time someone commits a poll will

00:01:52,410 --> 00:01:56,369
clear the caches the numbers will be

00:01:54,090 --> 00:02:00,390
correct so at lunch time someone

00:01:56,369 --> 00:02:02,069
submitted a poll website goes down to

00:02:00,390 --> 00:02:04,229
learn two very important lessons from

00:02:02,069 --> 00:02:06,720
this the first one being if caching is

00:02:04,229 --> 00:02:08,250
important to you then monitor its Lucas

00:02:06,720 --> 00:02:10,470
a week to realize the caches are being

00:02:08,250 --> 00:02:12,300
cleared that's kind of embarrassing the

00:02:10,470 --> 00:02:16,230
second one is never build a clear cache

00:02:12,300 --> 00:02:18,270
system why partly because a clear cache

00:02:16,230 --> 00:02:19,870
tourism is a big red button that will

00:02:18,270 --> 00:02:21,159
take your website down

00:02:19,870 --> 00:02:23,470
and you know if it is a big red button

00:02:21,159 --> 00:02:26,500
someone's gonna push it the other reason

00:02:23,470 --> 00:02:28,239
is that you build a clear cache system

00:02:26,500 --> 00:02:29,920
when you're caching is complicated and

00:02:28,239 --> 00:02:32,830
you don't want to complicate the caching

00:02:29,920 --> 00:02:35,290
system why because caching is really

00:02:32,830 --> 00:02:37,360
hard to test and it's vitally important

00:02:35,290 --> 00:02:38,560
the more complicated it is the more

00:02:37,360 --> 00:02:41,079
likely is that somebody's going to go

00:02:38,560 --> 00:02:43,750
very badly wrong so the trick is to keep

00:02:41,079 --> 00:02:46,299
it as simple as you possibly can the

00:02:43,750 --> 00:02:47,909
other good trick with caching is the

00:02:46,299 --> 00:02:50,440
cash for a really short amount of time

00:02:47,909 --> 00:02:52,060
so often people Bowl the cash system

00:02:50,440 --> 00:02:53,709
they think that well yeah the longer I

00:02:52,060 --> 00:02:55,750
cash for the might protect my server

00:02:53,709 --> 00:02:57,849
some load the long cash time is a really

00:02:55,750 --> 00:02:59,140
great idea but you have to think not

00:02:57,849 --> 00:03:01,450
only about protecting server some load

00:02:59,140 --> 00:03:05,640
but how long is good to show users stale

00:03:01,450 --> 00:03:08,409
beta so long cash times means stale data

00:03:05,640 --> 00:03:11,950
so we build a free day cashed at the

00:03:08,409 --> 00:03:13,690
Guardian and this three day cash served

00:03:11,950 --> 00:03:16,720
to cover up a multitude of really bad

00:03:13,690 --> 00:03:18,640
sequel queries if you had some awful

00:03:16,720 --> 00:03:20,530
really value deforming sequel the did

00:03:18,640 --> 00:03:22,269
things like build list of articles for

00:03:20,530 --> 00:03:24,099
the site and some of the articles are

00:03:22,269 --> 00:03:26,079
pretty old that didn't change very much

00:03:24,099 --> 00:03:28,540
to protect ourselves against those

00:03:26,079 --> 00:03:31,150
queries we cashed them we cast them for

00:03:28,540 --> 00:03:32,980
a few days every now and then wild

00:03:31,150 --> 00:03:34,750
articles would get deleted for legal

00:03:32,980 --> 00:03:37,389
reasons and when that happened we would

00:03:34,750 --> 00:03:38,769
send the cash system notification to

00:03:37,389 --> 00:03:41,650
remove that article and just that

00:03:38,769 --> 00:03:43,299
article from the cache so there came a

00:03:41,650 --> 00:03:45,340
day when that clear cache message got

00:03:43,299 --> 00:03:48,459
missed so an article got deleted from

00:03:45,340 --> 00:03:50,199
the database but not from the cash the

00:03:48,459 --> 00:03:52,329
three day cash is a hibernate query

00:03:50,199 --> 00:03:53,709
cache if you hope that high break would

00:03:52,329 --> 00:03:55,510
Lil gracefully or something being

00:03:53,709 --> 00:03:58,629
deleted from database it's on you about

00:03:55,510 --> 00:04:01,150
you'd be wrong hibernate through an

00:03:58,629 --> 00:04:03,970
exception hibernate refused to load

00:04:01,150 --> 00:04:06,430
anything hibernate powered our website

00:04:03,970 --> 00:04:08,349
so at this point half a website is

00:04:06,430 --> 00:04:11,709
showing sorry pages we're kind of half

00:04:08,349 --> 00:04:14,530
down effectively we have cache poisoning

00:04:11,709 --> 00:04:16,000
so the cash is showing bad data but

00:04:14,530 --> 00:04:18,699
we're still serving from cash so we're

00:04:16,000 --> 00:04:20,440
not stopping this would have been bad

00:04:18,699 --> 00:04:21,940
enough if the cache time had been say a

00:04:20,440 --> 00:04:23,860
minute we would still have shown sorry

00:04:21,940 --> 00:04:25,419
pages across off the website but the

00:04:23,860 --> 00:04:26,520
cash would have naturally reset as the

00:04:25,419 --> 00:04:28,919
expiry time

00:04:26,520 --> 00:04:32,009
but this is the three day cash so we're

00:04:28,919 --> 00:04:33,539
showing sorry pages for three days we

00:04:32,009 --> 00:04:34,949
were lucky that this happened at four in

00:04:33,539 --> 00:04:36,300
the afternoon so we could carry all the

00:04:34,949 --> 00:04:38,340
caches the website didn't go down

00:04:36,300 --> 00:04:39,690
immediately but all those horrible

00:04:38,340 --> 00:04:42,120
queries we try to protect ourselves

00:04:39,690 --> 00:04:43,500
against by caching for three days we're

00:04:42,120 --> 00:04:45,270
running them all all at the same time

00:04:43,500 --> 00:04:48,930
the performance in the athlean

00:04:45,270 --> 00:04:51,449
absolutely dreadful so the lesson from

00:04:48,930 --> 00:04:52,740
this is don't try and fix all faulty

00:04:51,449 --> 00:04:54,780
coil with caching because at some point

00:04:52,740 --> 00:04:58,889
is not gonna work on you all have any

00:04:54,780 --> 00:05:00,090
way and the other one is kashrus

00:04:58,889 --> 00:05:03,000
shortest lot of time that you can get

00:05:00,090 --> 00:05:04,289
away work so we did a bunch of testing

00:05:03,000 --> 00:05:06,630
of the Guardian to find what a good cash

00:05:04,289 --> 00:05:09,000
time is we scoured that for us actually

00:05:06,630 --> 00:05:10,590
one minute was the optimum so it's long

00:05:09,000 --> 00:05:12,419
enough that it protects our service for

00:05:10,590 --> 00:05:14,610
most of the load but it's short enough

00:05:12,419 --> 00:05:18,630
that if something goes wrong or you just

00:05:14,610 --> 00:05:20,099
you still data that if we notice so work

00:05:18,630 --> 00:05:23,659
out what the optimum cash time is for

00:05:20,099 --> 00:05:23,659
you it's probably shorter than you think

00:05:23,870 --> 00:05:29,580
is everybody recognized this guy this is

00:05:27,509 --> 00:05:32,759
yielding a sound the crate of wikileaks

00:05:29,580 --> 00:05:34,979
so in 2010 a guardian didn't live Q&A

00:05:32,759 --> 00:05:36,690
with with doing the sound this was

00:05:34,979 --> 00:05:38,550
really the first test of our comment

00:05:36,690 --> 00:05:40,800
system and its caching is the first test

00:05:38,550 --> 00:05:41,880
under load and we're feeling pretty good

00:05:40,800 --> 00:05:43,949
about the comment system at this point

00:05:41,880 --> 00:05:45,630
we've got a really simple one minute

00:05:43,949 --> 00:05:48,240
HTML fragment cash in front of the

00:05:45,630 --> 00:05:50,490
system so if we have been pretty good so

00:05:48,240 --> 00:05:52,469
the live can I kicks off and pretty soon

00:05:50,490 --> 00:05:54,240
the response time is dreadful it's

00:05:52,469 --> 00:05:56,759
absolutely awful from the comment system

00:05:54,240 --> 00:05:59,250
so we look at our cash staff to be lunch

00:05:56,759 --> 00:06:01,289
and last time and actually the cash 5th

00:05:59,250 --> 00:06:03,000
rate is really good but it's not helping

00:06:01,289 --> 00:06:05,130
us actually the the bed of a cache hit

00:06:03,000 --> 00:06:07,080
rate get to the worst performances and

00:06:05,130 --> 00:06:10,800
weirdly within a lot of database calls

00:06:07,080 --> 00:06:12,479
to make sense so ordinarily the comment

00:06:10,800 --> 00:06:13,889
system is on the least important parts

00:06:12,479 --> 00:06:15,360
of the website says the comment system

00:06:13,889 --> 00:06:17,550
was running really slowly would just

00:06:15,360 --> 00:06:18,840
turn it off but the call came out in

00:06:17,550 --> 00:06:21,120
editorial that this was the most

00:06:18,840 --> 00:06:23,460
important thing on the site right now so

00:06:21,120 --> 00:06:25,380
we had to keep it going so we turned off

00:06:23,460 --> 00:06:27,449
pretty much everything else we got the

00:06:25,380 --> 00:06:29,069
main site serving sale content we saw

00:06:27,449 --> 00:06:30,449
which we turned off article updates just

00:06:29,069 --> 00:06:33,689
to keep this thing running

00:06:30,449 --> 00:06:35,610
and we didn't go down we hung on by our

00:06:33,689 --> 00:06:36,599
fingernails but we didn't go down you

00:06:35,610 --> 00:06:38,789
know the end of it went to investigate

00:06:36,599 --> 00:06:42,029
what happened why didn't caching save us

00:06:38,789 --> 00:06:44,520
what we discovered was it wasn't just

00:06:42,029 --> 00:06:46,620
HTML fragment cash it's a cache with

00:06:44,520 --> 00:06:48,960
processing instructions it's a basically

00:06:46,620 --> 00:06:51,689
server side includes and what they're

00:06:48,960 --> 00:06:53,189
doing it's actually Balan links so

00:06:51,689 --> 00:06:56,099
guardian services didn't know what other

00:06:53,189 --> 00:06:57,749
services were deployed to so at wrong

00:06:56,099 --> 00:07:00,449
time the thing was doing a database

00:06:57,749 --> 00:07:02,279
query to try and find the way other

00:07:00,449 --> 00:07:05,759
service was deployed and one of the link

00:07:02,279 --> 00:07:07,139
to it this is a terrible idea so caching

00:07:05,759 --> 00:07:08,879
works really well if you can serve cache

00:07:07,139 --> 00:07:10,229
comp it really quickly if you add

00:07:08,879 --> 00:07:11,699
processing instructions when you're

00:07:10,229 --> 00:07:13,949
serving cash content it's gonna slow you

00:07:11,699 --> 00:07:15,689
down if you had a database call for

00:07:13,949 --> 00:07:17,550
every bit of cash content you're serving

00:07:15,689 --> 00:07:21,899
you're done your cash is never gonna

00:07:17,550 --> 00:07:26,999
save you never do this only cash that in

00:07:21,899 --> 00:07:31,169
context I'm gonna finish with a woolly

00:07:26,999 --> 00:07:33,419
rat so every pretty much every company

00:07:31,169 --> 00:07:35,189
has a woolly rat this is the one piece

00:07:33,419 --> 00:07:37,710
of content that suddenly goes crazy

00:07:35,189 --> 00:07:38,969
viral and it could be days mom someone's

00:07:37,710 --> 00:07:41,909
even years laughter this thing got

00:07:38,969 --> 00:07:45,539
public it's that one story now suddenly

00:07:41,909 --> 00:07:48,330
gives you crazy traffic this is ours

00:07:45,539 --> 00:07:50,819
it's a new species of woolly rat it went

00:07:48,330 --> 00:07:52,199
viral because it's huge not ever seen

00:07:50,819 --> 00:07:54,270
this thing before and it's a massive

00:07:52,199 --> 00:07:57,149
woolly rat we came from Papua New Guinea

00:07:54,270 --> 00:07:58,499
it was discovered in 2009 we've got the

00:07:57,149 --> 00:08:01,080
fun page of Reddit and then told me this

00:07:58,499 --> 00:08:02,520
is the thing with absolutely crazy but

00:08:01,080 --> 00:08:04,469
the interesting thing about this kind of

00:08:02,520 --> 00:08:05,759
story is yeah it's crazy traffic it's

00:08:04,469 --> 00:08:09,659
happened we've never seen before in your

00:08:05,759 --> 00:08:11,249
life this crazy traffic to one story or

00:08:09,659 --> 00:08:13,740
in other words this is a brilliant tap

00:08:11,249 --> 00:08:15,899
with your passing system York actually

00:08:13,740 --> 00:08:17,520
eat this for breakfast in fact if you

00:08:15,899 --> 00:08:18,659
get hit by willie rap and your system

00:08:17,520 --> 00:08:21,810
struggle there something wrong with your

00:08:18,659 --> 00:08:22,860
caching system go investigate it in our

00:08:21,810 --> 00:08:25,169
craves the thing that was wrong with our

00:08:22,860 --> 00:08:27,270
caching system as an a cash was manual

00:08:25,169 --> 00:08:28,439
it relied on a human being there google

00:08:27,270 --> 00:08:29,870
which rather looks a bit dangerous he

00:08:28,439 --> 00:08:33,080
but a paternal match the caching layer

00:08:29,870 --> 00:08:34,220
we've got hit by a william at 8pm

00:08:33,080 --> 00:08:35,570
we know humans and that just that the

00:08:34,220 --> 00:08:37,820
traffic was high internally one wanted

00:08:35,570 --> 00:08:39,830
cash system so after the woolly rat we

00:08:37,820 --> 00:08:41,720
made that automatic so we had asked our

00:08:39,830 --> 00:08:43,370
servers notice when traffic was getting

00:08:41,720 --> 00:08:49,550
a bit dangerous done on cashing

00:08:43,370 --> 00:08:51,110
automatic so yeah automatic you may have

00:08:49,550 --> 00:08:53,900
noticed that all the dates in these

00:08:51,110 --> 00:08:55,310
slides were pretty far in the past this

00:08:53,900 --> 00:08:57,500
is partly because I don't work regarding

00:08:55,310 --> 00:08:58,940
newspaper anymore it's also partly

00:08:57,500 --> 00:09:01,760
because we finally learned our lesson

00:08:58,940 --> 00:09:03,740
about caching yep hashing became much

00:09:01,760 --> 00:09:06,980
simpler much shorter just one minute

00:09:03,740 --> 00:09:08,930
HTML fragment and since then as far as I

00:09:06,980 --> 00:09:13,370
know there have been no great caching

00:09:08,930 --> 00:09:15,110
disasters so these are my lessons I

00:09:13,370 --> 00:09:17,240
added the extra one on this so actually

00:09:15,110 --> 00:09:19,010
did a preview of this talk with some

00:09:17,240 --> 00:09:20,690
other people a lot of people in the

00:09:19,010 --> 00:09:23,030
audience worked with fasting which is a

00:09:20,690 --> 00:09:25,250
CDN I've got to the last slide is they

00:09:23,030 --> 00:09:27,770
never will declare cash system unless

00:09:25,250 --> 00:09:29,720
you're actually a CDM so if the entire

00:09:27,770 --> 00:09:31,280
purpose of your company is to do caching

00:09:29,720 --> 00:09:34,790
then we probably want to build clear

00:09:31,280 --> 00:09:36,830
caching otherwise never do it leave it

00:09:34,790 --> 00:09:40,270
to the experts keep it as simple as you

00:09:36,830 --> 00:09:40,270
possibly can thank you

00:09:55,810 --> 00:09:57,870

YouTube URL: https://www.youtube.com/watch?v=tLS2z8ndDak


