Title: JUC U.S. East 2015 - Bringing Continuous Delivery to Cloud-Scale with Jenkins, Docker and "Tiger"
Publication date: 2020-01-23
Playlist: JUC U.S East 2015
Description: 
	By: Kohsuke Kawaguchi and Harpreet Singh, CloudBees

Continuous delivery (CD) is a competitive differentiator and development and operations teams are under pressure to deliver software faster. The DevOps world is going through a storm of changes - Docker being the key one. This session by Kohsuke and Harpreet will introduce a set of plugins that address various aspects of CD with Docker.
Captions: 
	00:00:15,060 --> 00:00:21,420
often everybody thank you for coming

00:00:19,110 --> 00:00:24,150
here to this talk and thank you for

00:00:21,420 --> 00:00:26,580
joining us in the conference the talk

00:00:24,150 --> 00:00:31,020
today is about continuous delivery at

00:00:26,580 --> 00:00:35,220
clouds clouds scale started off being a

00:00:31,020 --> 00:00:36,630
talk about building CD pipelines and all

00:00:35,220 --> 00:00:38,880
the stuff that we've been working on

00:00:36,630 --> 00:00:42,810
with darker you heard kohsuke mention

00:00:38,880 --> 00:00:45,030
that today in the keynote so the way the

00:00:42,810 --> 00:00:49,920
talks set up is we talk about CD

00:00:45,030 --> 00:00:51,540
pipelines we demo stuff on that a very

00:00:49,920 --> 00:00:54,060
quick in turn darker if you haven't

00:00:51,540 --> 00:00:56,400
heard about it and we'll get into the

00:00:54,060 --> 00:00:58,440
Jenkins and darker work and then we will

00:00:56,400 --> 00:01:00,450
talk about operating Jenkins at scale

00:00:58,440 --> 00:01:03,720
and we talked about the Jenkins Gordon

00:01:00,450 --> 00:01:05,700
Jenkins platform and the Jenkins are the

00:01:03,720 --> 00:01:07,890
service we preview the Jenkins service

00:01:05,700 --> 00:01:10,439
that we are internally working on code

00:01:07,890 --> 00:01:11,850
named tiger for lack of because I don't

00:01:10,439 --> 00:01:14,250
want to get into branding discussions

00:01:11,850 --> 00:01:19,140
yet that's for my CEOs sitting in the

00:01:14,250 --> 00:01:21,119
first row so you know their beanies

00:01:19,140 --> 00:01:23,520
internet memes that have gone around

00:01:21,119 --> 00:01:26,609
that introduce people in terms of how

00:01:23,520 --> 00:01:28,289
they think of themselves at work why and

00:01:26,609 --> 00:01:30,479
how others think of themselves at work

00:01:28,289 --> 00:01:32,939
so I thought you heard so much about

00:01:30,479 --> 00:01:35,219
kohsuke we will take a different take on

00:01:32,939 --> 00:01:37,439
it so if you were at the keynote you

00:01:35,219 --> 00:01:39,409
kind of walked away with he's a CTO of

00:01:37,439 --> 00:01:43,020
cloudbees programmer extraordinaire

00:01:39,409 --> 00:01:44,990
favorite weapon of choice is an IDE goes

00:01:43,020 --> 00:01:48,030
in whips out chords and delivers that

00:01:44,990 --> 00:01:50,280
now but I happen to sit next to him and

00:01:48,030 --> 00:01:53,280
I don't think he sees himself that way

00:01:50,280 --> 00:01:55,859
so I think he's thinks himself as a

00:01:53,280 --> 00:01:59,069
slight boy for marketing his actual

00:01:55,859 --> 00:02:02,100
weapon is his powerpoint and he's

00:01:59,069 --> 00:02:04,679
usually building out slides for user

00:02:02,100 --> 00:02:06,929
conferences all around the world you

00:02:04,679 --> 00:02:09,030
want to take a shot at me yes that so

00:02:06,929 --> 00:02:10,440
what we have to who you have here is the

00:02:09,030 --> 00:02:13,380
happy sing it with your product

00:02:10,440 --> 00:02:15,390
management and I mean he he tell us he

00:02:13,380 --> 00:02:18,000
has this not go telling us what to do

00:02:15,390 --> 00:02:20,040
sometimes I wonder he policies some kind

00:02:18,000 --> 00:02:23,489
of Jedi trick to make make me actually

00:02:20,040 --> 00:02:26,939
want what he wants so that's not quite

00:02:23,489 --> 00:02:28,780
right the way I actually see myself a I

00:02:26,939 --> 00:02:30,430
see myself as a hostel for sales guy

00:02:28,780 --> 00:02:33,430
and I hope there's some sales guys here

00:02:30,430 --> 00:02:35,290
who know I'm on their side but i have my

00:02:33,430 --> 00:02:37,600
actual weapon as the clasping hand

00:02:35,290 --> 00:02:39,520
technique and kosuke seen that quite

00:02:37,600 --> 00:02:42,160
often it he sees that couple of times a

00:02:39,520 --> 00:02:46,390
week asking engineering to deliver some

00:02:42,160 --> 00:02:47,860
features anyways jokes apart we work for

00:02:46,390 --> 00:02:50,520
cloudbees and if you haven't heard about

00:02:47,860 --> 00:02:53,050
us we are the enterprise jenkins company

00:02:50,520 --> 00:02:55,120
we are you know leaders for continuous

00:02:53,050 --> 00:02:58,390
delivery some of the stuff that you've

00:02:55,120 --> 00:03:00,100
heard about workflow etc came in from us

00:02:58,390 --> 00:03:03,459
in the community we work with the

00:03:00,100 --> 00:03:05,019
community with that around that and the

00:03:03,459 --> 00:03:07,930
way we sort of go about helping

00:03:05,019 --> 00:03:10,030
organizations is through a couple of

00:03:07,930 --> 00:03:12,730
products so there's the cloudbees

00:03:10,030 --> 00:03:14,650
jenkins platform that's garbage jenkins

00:03:12,730 --> 00:03:16,750
enterprise and operation center we will

00:03:14,650 --> 00:03:19,720
get into that later in the talk and

00:03:16,750 --> 00:03:22,150
there's jenkins as a service that that

00:03:19,720 --> 00:03:24,130
we run in the cloud and we do a number

00:03:22,150 --> 00:03:26,350
of other stuff so as part of this you

00:03:24,130 --> 00:03:29,590
get support and we support all

00:03:26,350 --> 00:03:32,250
open-source plugins in an hour's we've

00:03:29,590 --> 00:03:34,900
just started professional services and

00:03:32,250 --> 00:03:37,720
we do training and if you haven't signed

00:03:34,900 --> 00:03:39,000
up for a newsletter now it's probably a

00:03:37,720 --> 00:03:43,660
good time to sign up for the newsletter

00:03:39,000 --> 00:03:46,930
and an interesting bit of trivia about

00:03:43,660 --> 00:03:49,870
us has been that a few years ago where

00:03:46,930 --> 00:03:52,090
the Hudson Jenkins split happened we

00:03:49,870 --> 00:03:54,519
actually proposed that we should have a

00:03:52,090 --> 00:03:56,290
Jenkins either conference to bring

00:03:54,519 --> 00:03:57,840
together the community so that people

00:03:56,290 --> 00:04:00,280
get to know each other face-to-face

00:03:57,840 --> 00:04:03,160
that's how the user conference get

00:04:00,280 --> 00:04:07,989
started and now here we are in 44 cities

00:04:03,160 --> 00:04:11,019
in multiple countries our products are

00:04:07,989 --> 00:04:13,359
sort of used by his a smattering of the

00:04:11,019 --> 00:04:16,299
customers who are using our enterprise

00:04:13,359 --> 00:04:19,180
products on from the leading edge guys

00:04:16,299 --> 00:04:23,560
like Netflix to banks like american

00:04:19,180 --> 00:04:25,240
express and everybody out here so we've

00:04:23,560 --> 00:04:29,350
been doing the enterprise jenkins

00:04:25,240 --> 00:04:31,720
business for a while now so with the

00:04:29,350 --> 00:04:35,830
intros out of the way what i wanted to

00:04:31,720 --> 00:04:40,720
talk about next is is continuous

00:04:35,830 --> 00:04:42,700
delivery and you heard this axiom by

00:04:40,720 --> 00:04:45,370
mark anderson who talks about

00:04:42,700 --> 00:04:47,290
where is eating the world and unless

00:04:45,370 --> 00:04:49,290
you're living under the rock you really

00:04:47,290 --> 00:04:52,690
know software is indeed eating the world

00:04:49,290 --> 00:04:55,360
but what I have started what we started

00:04:52,690 --> 00:04:58,030
seeing a couple of years back is as CEOs

00:04:55,360 --> 00:05:00,580
started thinking of software delivery as

00:04:58,030 --> 00:05:03,700
the competitive edge or their you know

00:05:00,580 --> 00:05:06,700
or they cut competition they they go

00:05:03,700 --> 00:05:09,100
down to their CTOs their vp of

00:05:06,700 --> 00:05:12,130
engineering and ask them how can they

00:05:09,100 --> 00:05:14,140
deliver software faster right and out of

00:05:12,130 --> 00:05:16,960
pity level at a top level it's really

00:05:14,140 --> 00:05:19,270
about getting the dev team to push their

00:05:16,960 --> 00:05:21,220
code out and it's about automated

00:05:19,270 --> 00:05:25,900
automating the processes and pushing

00:05:21,220 --> 00:05:28,690
that out into production but but there's

00:05:25,900 --> 00:05:30,370
more than that right so kosuke hinted

00:05:28,690 --> 00:05:32,380
towards this and the CD summit that's

00:05:30,370 --> 00:05:34,630
happening in parallel you know focuses

00:05:32,380 --> 00:05:37,690
on this it's more than code it's it's

00:05:34,630 --> 00:05:40,570
about cultural changes because you know

00:05:37,690 --> 00:05:42,610
who of you know these two guys right so

00:05:40,570 --> 00:05:44,590
there's there's a dev team and there's

00:05:42,610 --> 00:05:47,080
the ops team and they completely they

00:05:44,590 --> 00:05:49,090
talk different languages right one is

00:05:47,080 --> 00:05:51,130
being incentivized to be on the leading

00:05:49,090 --> 00:05:54,400
edge go and break stuff try out new

00:05:51,130 --> 00:05:57,310
things while the ops guy is there to

00:05:54,400 --> 00:06:00,970
reduce risk and minimize things so as

00:05:57,310 --> 00:06:03,600
kousaka hinted a you know it's it's hard

00:06:00,970 --> 00:06:06,190
to get these people to talk together but

00:06:03,600 --> 00:06:09,550
it's not about a team-building exercise

00:06:06,190 --> 00:06:13,030
it actually ends up being a little more

00:06:09,550 --> 00:06:14,910
substantial than that and and that sort

00:06:13,030 --> 00:06:18,670
of substantial pneus exists in

00:06:14,910 --> 00:06:20,410
automating stuff right it's about it's

00:06:18,670 --> 00:06:23,230
about taking what the car industry did

00:06:20,410 --> 00:06:25,060
with lean a few years ago and bringing

00:06:23,230 --> 00:06:28,450
that into software so that's that's

00:06:25,060 --> 00:06:30,850
continuous delivery right and once you

00:06:28,450 --> 00:06:33,700
start automating stuff you finally get

00:06:30,850 --> 00:06:36,970
to places which you could never have

00:06:33,700 --> 00:06:40,720
gone before so my favorite use case has

00:06:36,970 --> 00:06:43,960
been of Tesla and the use case you know

00:06:40,720 --> 00:06:48,460
actually starts off somewhat in a not a

00:06:43,960 --> 00:06:52,990
good story where where Tesla a few years

00:06:48,460 --> 00:06:54,790
back had had a fire it caught fire and

00:06:52,990 --> 00:06:55,630
there was a lot of negative propaganda

00:06:54,790 --> 00:06:58,510
about

00:06:55,630 --> 00:07:00,310
and when they analyzed the logs being

00:06:58,510 --> 00:07:02,650
sent by the car which they can do now

00:07:00,310 --> 00:07:04,600
they found that the car suspension was

00:07:02,650 --> 00:07:06,670
too low so if they just raise the car

00:07:04,600 --> 00:07:09,880
suspension by six inches things should

00:07:06,670 --> 00:07:11,680
be okay now they did more than that but

00:07:09,880 --> 00:07:13,870
if you were a car owner tesla car owner

00:07:11,680 --> 00:07:15,610
you came in in the morning you had a

00:07:13,870 --> 00:07:17,650
software update on your car last night

00:07:15,610 --> 00:07:20,470
you started the car and the car actually

00:07:17,650 --> 00:07:22,840
rose six inches now that's competitive

00:07:20,470 --> 00:07:25,930
advantage right think about for trying

00:07:22,840 --> 00:07:28,060
to do raise suspension by six inches

00:07:25,930 --> 00:07:30,220
this is like million dollars of recall

00:07:28,060 --> 00:07:31,870
so that's the kind of stuff that you

00:07:30,220 --> 00:07:34,570
know him and me live and breathe that's

00:07:31,870 --> 00:07:36,130
the stuff that gets us exciting and the

00:07:34,570 --> 00:07:38,470
automation that we talked about earlier

00:07:36,130 --> 00:07:40,660
that's me that's what makes it possible

00:07:38,470 --> 00:07:43,930
and that's where Jenkins comes into play

00:07:40,660 --> 00:07:45,910
right we've talked about workflow but

00:07:43,930 --> 00:07:48,090
now let's take the CEO and he talks to

00:07:45,910 --> 00:07:50,680
the vp of engineering as he goes down

00:07:48,090 --> 00:07:53,590
the engineering manager comes back and

00:07:50,680 --> 00:07:55,780
says like yeah we do CD we may not be

00:07:53,590 --> 00:07:59,410
doing it all the way we have we are

00:07:55,780 --> 00:08:01,600
doing CI its commit build test we are

00:07:59,410 --> 00:08:03,990
doing all those steps what we need to do

00:08:01,600 --> 00:08:07,300
is actually just take it all the way and

00:08:03,990 --> 00:08:09,130
you know take it all the way to to

00:08:07,300 --> 00:08:11,110
production and we need to stage things

00:08:09,130 --> 00:08:13,720
and that's their workflow starts coming

00:08:11,110 --> 00:08:16,660
in because it now provides that language

00:08:13,720 --> 00:08:18,040
between the dev in the off skies because

00:08:16,660 --> 00:08:21,310
they can look at these scripts they can

00:08:18,040 --> 00:08:24,340
push this into the code into your soft

00:08:21,310 --> 00:08:30,070
you know source code repository and and

00:08:24,340 --> 00:08:32,020
build CD is code so we've had a workflow

00:08:30,070 --> 00:08:34,539
session but very quickly highlighting

00:08:32,020 --> 00:08:38,590
what it does is you're describing your

00:08:34,539 --> 00:08:41,560
entire flow in adsl and that dsl gets

00:08:38,590 --> 00:08:44,890
updated we've just updated it for darker

00:08:41,560 --> 00:08:48,070
you can do a number of other things as

00:08:44,890 --> 00:08:49,810
in if if there is a failure you can

00:08:48,070 --> 00:08:52,330
actually recover from a checkpoint at

00:08:49,810 --> 00:08:55,090
location so you don't have to go back in

00:08:52,330 --> 00:08:57,700
the beginning of your workflow you can

00:08:55,090 --> 00:09:00,070
start at midpoint there is human

00:08:57,700 --> 00:09:03,910
interaction so you can go all the way

00:09:00,070 --> 00:09:06,250
and somebody can wait for the ops guy to

00:09:03,910 --> 00:09:07,750
say the bits look good can you press

00:09:06,250 --> 00:09:09,490
approve and this can go into production

00:09:07,750 --> 00:09:12,220
you can do all of the

00:09:09,490 --> 00:09:15,339
and and the last piece what makes

00:09:12,220 --> 00:09:18,279
workflow interesting is my analogy for

00:09:15,339 --> 00:09:20,709
Jenkins's is a bizarre I grew up in

00:09:18,279 --> 00:09:22,420
India lots of bazaars lots of different

00:09:20,709 --> 00:09:25,180
languages being spoken lots of things

00:09:22,420 --> 00:09:27,339
being exchanged so I I started I started

00:09:25,180 --> 00:09:29,140
thinking of applications as the currency

00:09:27,339 --> 00:09:32,560
that gets exchanged between different

00:09:29,140 --> 00:09:35,140
groups so in the past you had the

00:09:32,560 --> 00:09:36,730
currency was your war file and then

00:09:35,140 --> 00:09:39,880
there was a deployment descriptor that

00:09:36,730 --> 00:09:42,130
was handed off to the the QA team they

00:09:39,880 --> 00:09:43,510
tried to mimic this and then that

00:09:42,130 --> 00:09:45,010
deployment descriptor with some

00:09:43,510 --> 00:09:48,040
additional steps was given to the ops

00:09:45,010 --> 00:09:49,990
team and I that's been the currency

00:09:48,040 --> 00:09:53,620
that's that started you know exchanging

00:09:49,990 --> 00:09:57,520
throughout your throughout this bizarre

00:09:53,620 --> 00:10:00,490
and and with docker that currency is

00:09:57,520 --> 00:10:03,160
changing so a very quick overview on

00:10:00,490 --> 00:10:05,680
docker it's it's a container it's a

00:10:03,160 --> 00:10:09,100
container your application runs in it so

00:10:05,680 --> 00:10:11,709
in addition to your application you are

00:10:09,100 --> 00:10:14,290
also defining the environment on how

00:10:11,709 --> 00:10:17,170
that application on what environment

00:10:14,290 --> 00:10:18,700
that runs right and coming to think of

00:10:17,170 --> 00:10:20,410
it it's it's a somewhat of an

00:10:18,700 --> 00:10:23,020
anti-pattern to what I learned in Java

00:10:20,410 --> 00:10:24,430
EE but you are now starting to bundle

00:10:23,020 --> 00:10:26,500
your application environment and

00:10:24,430 --> 00:10:28,690
describing that an application

00:10:26,500 --> 00:10:30,250
environment so what this does is it

00:10:28,690 --> 00:10:32,110
changes the currency that's being

00:10:30,250 --> 00:10:35,110
exchanged between teams so the dev team

00:10:32,110 --> 00:10:37,029
can hand this entire docker file that

00:10:35,110 --> 00:10:39,220
describes everything about that app to

00:10:37,029 --> 00:10:41,230
the to QA person and the production

00:10:39,220 --> 00:10:45,010
person and there's no guesses along the

00:10:41,230 --> 00:10:47,649
way right so I think that's what makes

00:10:45,010 --> 00:10:50,260
Jenkins powerful is it remains constant

00:10:47,649 --> 00:10:52,930
as the storm of changes happening around

00:10:50,260 --> 00:10:55,149
it you can keep doing what you were

00:10:52,930 --> 00:10:57,029
doing except you're now interacting with

00:10:55,149 --> 00:11:01,180
these new paradigms that are coming in

00:10:57,029 --> 00:11:03,010
so with that we'll get into the how do

00:11:01,180 --> 00:11:05,260
you build these pipelines with Kosuke

00:11:03,010 --> 00:11:07,540
and there are two use cases that we are

00:11:05,260 --> 00:11:12,339
talking about the CD pipelines and the

00:11:07,540 --> 00:11:15,100
isolation of teams right okay yeah so so

00:11:12,339 --> 00:11:17,260
in this demo setup what I'm going to

00:11:15,100 --> 00:11:19,480
show you is the many of the doctor or

00:11:17,260 --> 00:11:21,820
Jenkees plugins that I talked about

00:11:19,480 --> 00:11:22,480
during the keynote so mentally imagine

00:11:21,820 --> 00:11:24,220
yourself

00:11:22,480 --> 00:11:27,880
in this company may be in San Francisco

00:11:24,220 --> 00:11:29,500
you drank the kool-aid of car so all

00:11:27,880 --> 00:11:31,690
your application development is

00:11:29,500 --> 00:11:33,370
happening as a container now your

00:11:31,690 --> 00:11:35,410
company has a platform team is

00:11:33,370 --> 00:11:37,810
responsible for building the base image

00:11:35,410 --> 00:11:39,850
that say it contains tomcat with some

00:11:37,810 --> 00:11:41,769
customization that makes it work for

00:11:39,850 --> 00:11:43,480
your own and then each of the

00:11:41,769 --> 00:11:45,459
application team and say there are

00:11:43,480 --> 00:11:47,829
hundreds of those are taking this space

00:11:45,459 --> 00:11:50,170
image baking the application in it

00:11:47,829 --> 00:11:54,670
creating an app container to be run in

00:11:50,170 --> 00:11:57,760
somewhere else so I'll be good yeah so

00:11:54,670 --> 00:11:59,320
here I have a so this is my demo

00:11:57,760 --> 00:12:02,380
drinking since that that contains these

00:11:59,320 --> 00:12:08,100
images then this is a job that defines

00:12:02,380 --> 00:12:12,699
the base base image build so on github I

00:12:08,100 --> 00:12:16,480
have the source code of this guy that's

00:12:12,699 --> 00:12:18,250
not here sorry here and then slowly that

00:12:16,480 --> 00:12:20,339
is basically building the base image so

00:12:18,250 --> 00:12:25,029
it has a doe profile that starts from

00:12:20,339 --> 00:12:28,180
from a specific place image and I'm

00:12:25,029 --> 00:12:30,490
adding a customization right so that's

00:12:28,180 --> 00:12:33,600
what this guy does and so in terms of

00:12:30,490 --> 00:12:36,959
the job definition here it's very easy

00:12:33,600 --> 00:12:40,329
and I hope nobody talks in yoga skype

00:12:36,959 --> 00:12:43,029
the now all I'm telling is alright so I

00:12:40,329 --> 00:12:44,829
want to build the this job every time

00:12:43,029 --> 00:12:46,779
there's a change in the source code and

00:12:44,829 --> 00:12:48,220
then this is where I'm taking out the

00:12:46,779 --> 00:12:51,519
source code from which is a github

00:12:48,220 --> 00:12:53,199
upholstery and in terms of the build now

00:12:51,519 --> 00:12:55,420
all I'm doing is basically building a

00:12:53,199 --> 00:12:57,910
container so here i use the doctor

00:12:55,420 --> 00:13:00,459
buildin published plugin and then all it

00:12:57,910 --> 00:13:02,290
does is basically build actor profile in

00:13:00,459 --> 00:13:05,319
the current directory and then push this

00:13:02,290 --> 00:13:07,060
image into the docker hub by using the

00:13:05,319 --> 00:13:08,880
credential that i've already configured

00:13:07,060 --> 00:13:11,680
so you know there's a building

00:13:08,880 --> 00:13:14,380
credential integrations so you know even

00:13:11,680 --> 00:13:16,480
if dispute or to run on any of the state

00:13:14,380 --> 00:13:19,980
that i might happy to be able to

00:13:16,480 --> 00:13:22,690
correctly inherit my credential settings

00:13:19,980 --> 00:13:28,750
and then so that's it so that's it's a

00:13:22,690 --> 00:13:31,269
pretty easy job now the other one the

00:13:28,750 --> 00:13:33,010
second job is the up fielding one so

00:13:31,269 --> 00:13:35,560
this is the one that starts from the

00:13:33,010 --> 00:13:36,460
inner base image and then build a web

00:13:35,560 --> 00:13:38,020
app and

00:13:36,460 --> 00:13:40,810
in this case it's a java web application

00:13:38,020 --> 00:13:42,640
and then baked up to create a new

00:13:40,810 --> 00:13:45,340
container and I'm driving this whole

00:13:42,640 --> 00:13:49,000
process from the work zone so that

00:13:45,340 --> 00:13:52,210
source code is in here and it's a

00:13:49,000 --> 00:13:55,180
basically just a plain vanilla the

00:13:52,210 --> 00:13:57,580
Maybin war application the interesting

00:13:55,180 --> 00:14:01,060
bits is one here so this is where i

00:13:57,580 --> 00:14:04,030
define the CD pipeline of disguise or

00:14:01,060 --> 00:14:08,800
the workflow so I try to keep this as

00:14:04,030 --> 00:14:10,450
simple as possible that the deadline to

00:14:08,800 --> 00:14:12,340
is basically saying that's basically

00:14:10,450 --> 00:14:15,280
just having Jenkins that okay we've now

00:14:12,340 --> 00:14:17,320
entered the build stage and then in that

00:14:15,280 --> 00:14:19,000
stage all i'm doing is the you know

00:14:17,320 --> 00:14:21,160
check out the source code to the

00:14:19,000 --> 00:14:23,170
maybelline install and then archive the

00:14:21,160 --> 00:14:24,820
war file so created the war file into

00:14:23,170 --> 00:14:27,670
drinking so that we can look at that

00:14:24,820 --> 00:14:29,290
there's a surrounding block here so

00:14:27,670 --> 00:14:31,240
where this is where it gets a little bit

00:14:29,290 --> 00:14:32,980
more interesting so in many places

00:14:31,240 --> 00:14:35,230
that's using docker it's actually very

00:14:32,980 --> 00:14:37,540
common to create a container that

00:14:35,230 --> 00:14:39,580
captured the build environment because I

00:14:37,540 --> 00:14:41,410
you know you have to sometimes you have

00:14:39,580 --> 00:14:43,630
to have right tools installed with some

00:14:41,410 --> 00:14:46,150
licenses sometimes you have some

00:14:43,630 --> 00:14:48,310
companies specific configuration example

00:14:46,150 --> 00:14:50,170
in case of maybe you might want to talk

00:14:48,310 --> 00:14:52,720
to your corporate internally so

00:14:50,170 --> 00:14:55,060
all that stuff can be handled by some

00:14:52,720 --> 00:14:57,580
internal like a platform export and then

00:14:55,060 --> 00:15:00,070
if they can produce you an image and

00:14:57,580 --> 00:15:02,260
then so as a user at the busy productive

00:15:00,070 --> 00:15:03,700
of all you have to do is detailed Inc is

00:15:02,260 --> 00:15:06,670
that ok I want these things to be

00:15:03,700 --> 00:15:08,830
running inside a container and it was

00:15:06,670 --> 00:15:10,870
the build is over I'm now in the

00:15:08,830 --> 00:15:13,000
packaging stage and where I create the

00:15:10,870 --> 00:15:15,010
new bill Corr image so this is where i

00:15:13,000 --> 00:15:16,840
use the docker file to package up the

00:15:15,010 --> 00:15:19,420
war file into the new image and then

00:15:16,840 --> 00:15:21,550
pushed up into the doctor have and then

00:15:19,420 --> 00:15:23,530
finally for the kick of it I get to the

00:15:21,550 --> 00:15:25,270
deployment stage and then I just want

00:15:23,530 --> 00:15:29,160
the deployment scoop to basically have

00:15:25,270 --> 00:15:34,180
this way about running somewhere else so

00:15:29,160 --> 00:15:37,060
so these so that's the flow of here and

00:15:34,180 --> 00:15:40,420
what I'm going to do is basically sort

00:15:37,060 --> 00:15:43,990
of let's pretend that them all right so

00:15:40,420 --> 00:15:46,000
this is going let's pretend here that

00:15:43,990 --> 00:15:48,560
I'm I need to

00:15:46,000 --> 00:15:50,930
so let's pretend hear that they're the

00:15:48,560 --> 00:15:55,040
security vulnerability discovered in

00:15:50,930 --> 00:16:03,710
tomcat that the platform guys have to

00:15:55,040 --> 00:16:06,530
fix so as a form guys I basically tweak

00:16:03,710 --> 00:16:08,860
the configuration here so let's say by

00:16:06,530 --> 00:16:17,330
tweaking a configuration i am going to

00:16:08,860 --> 00:16:19,760
the editor server header so let's say

00:16:17,330 --> 00:16:23,540
I'm going to change these two things

00:16:19,760 --> 00:16:27,860
into some another text here and then I'm

00:16:23,540 --> 00:16:32,480
just going to make this changing live

00:16:27,860 --> 00:16:35,510
from the stage and then push this change

00:16:32,480 --> 00:16:37,460
so now the job of the platform guys done

00:16:35,510 --> 00:16:40,640
I've successfully daddy unleash the

00:16:37,460 --> 00:16:47,000
abbey security vulnerability fix into

00:16:40,640 --> 00:16:50,090
the rest of the world so if I go come

00:16:47,000 --> 00:16:52,220
back to Jenkins you'll see that this has

00:16:50,090 --> 00:16:55,760
started triggering the build of the base

00:16:52,220 --> 00:16:57,350
image and then so now i think it's

00:16:55,760 --> 00:16:58,940
already getting to the point of fishing

00:16:57,350 --> 00:17:01,850
than your image and all looks like it's

00:16:58,940 --> 00:17:03,920
already done and then i noticed in

00:17:01,850 --> 00:17:05,150
ketley i did notice that the app field

00:17:03,920 --> 00:17:07,040
needs to be triggered oh I guess I

00:17:05,150 --> 00:17:11,290
thought I forgot to complete tell you

00:17:07,040 --> 00:17:14,300
how this guy's configured at all so here

00:17:11,290 --> 00:17:17,420
here so that the pic of this job is at

00:17:14,300 --> 00:17:20,090
the inner it monster in addition to

00:17:17,420 --> 00:17:22,100
quantity in the trigger event the change

00:17:20,090 --> 00:17:25,340
happens to the source code but I also

00:17:22,100 --> 00:17:27,980
wanted the trigger this fuel that scene

00:17:25,340 --> 00:17:29,690
as the base image changes and then here

00:17:27,980 --> 00:17:32,360
and I can basically tell the ink in

00:17:29,690 --> 00:17:34,670
state make the workflow plugin and vocal

00:17:32,360 --> 00:17:37,340
the rocker have a notification plugging

00:17:34,670 --> 00:17:39,980
to talk to each other and so that I'm

00:17:37,340 --> 00:17:41,810
basically asking Jenkins to say whatever

00:17:39,980 --> 00:17:43,790
the image that I depend on when they

00:17:41,810 --> 00:17:45,920
change I wanted to do it and I don't

00:17:43,790 --> 00:17:48,590
have to explicitly specify what those

00:17:45,920 --> 00:17:50,270
images are because they work so the

00:17:48,590 --> 00:17:52,010
doctor work for plugging and this

00:17:50,270 --> 00:17:55,550
plug-in talks to each other so they know

00:17:52,010 --> 00:17:56,900
exactly what images I'm depending on and

00:17:55,550 --> 00:17:58,670
the rest of the configuration is really

00:17:56,900 --> 00:17:59,450
just telling Jenkins that whereas my

00:17:58,670 --> 00:18:03,260
boxers

00:17:59,450 --> 00:18:07,190
and that's it so because of that he was

00:18:03,260 --> 00:18:09,320
able to trigger the trigger the build of

00:18:07,190 --> 00:18:15,889
the app automatically and then get that

00:18:09,320 --> 00:18:17,450
change deployed so if I'm so this is the

00:18:15,889 --> 00:18:19,669
actual application the glorious

00:18:17,450 --> 00:18:24,500
application that I'm running here and

00:18:19,669 --> 00:18:28,610
then just the sort of i think is for

00:18:24,500 --> 00:18:30,200
those just to prove that this it has

00:18:28,610 --> 00:18:32,809
incorporated the change in a server

00:18:30,200 --> 00:18:35,029
header here it's got the new server

00:18:32,809 --> 00:18:37,340
header that i configure just Adam change

00:18:35,029 --> 00:18:39,320
so in this way you can sort of compose a

00:18:37,340 --> 00:18:42,860
bigger chain well in terms of freestyle

00:18:39,320 --> 00:18:47,750
project in this case till you create the

00:18:42,860 --> 00:18:49,399
CD pipeline so quickly I'm going to talk

00:18:47,750 --> 00:18:51,679
about some other aspects of dr.

00:18:49,399 --> 00:18:54,409
integration here which is more about how

00:18:51,679 --> 00:18:59,389
we build how you can use the doctor as a

00:18:54,409 --> 00:19:01,100
build environment so in this guy I'm so

00:18:59,389 --> 00:19:02,630
let's imagine that this is like this is

00:19:01,100 --> 00:19:04,519
a it another completely different them

00:19:02,630 --> 00:19:07,610
set up like at some other random project

00:19:04,519 --> 00:19:09,620
and here as a cam at I guessed at the

00:19:07,610 --> 00:19:12,019
administrator Jenkins you want to manage

00:19:09,620 --> 00:19:13,850
your builds waves of containers but you

00:19:12,019 --> 00:19:16,340
are doing it without you know productive

00:19:13,850 --> 00:19:20,570
all-pro publicly not knowing anything so

00:19:16,340 --> 00:19:21,950
in this plug-in the doctor plug in the

00:19:20,570 --> 00:19:24,769
original doctor plugging in the

00:19:21,950 --> 00:19:27,340
drinking's i let you do just that so you

00:19:24,769 --> 00:19:32,690
can create the basically declared

00:19:27,340 --> 00:19:34,429
configuration in jenkins kind of in the

00:19:32,690 --> 00:19:36,470
system configuration page at the very

00:19:34,429 --> 00:19:39,940
bottom of it and you know basically

00:19:36,470 --> 00:19:42,320
telling jenkins barrier dr. robberies

00:19:39,940 --> 00:19:45,139
and various other coordinates and

00:19:42,320 --> 00:19:47,779
registering a particular docker image as

00:19:45,139 --> 00:19:50,179
the build slave and i am associating

00:19:47,779 --> 00:19:52,880
that with this label called standard so

00:19:50,179 --> 00:19:56,029
as administrator doing this bit of this

00:19:52,880 --> 00:19:58,159
video behind the scene walk the people

00:19:56,029 --> 00:20:00,169
doing the product in people we don't

00:19:58,159 --> 00:20:01,909
have to know but he or anything that

00:20:00,169 --> 00:20:03,980
this field is happening they just have

00:20:01,909 --> 00:20:05,779
to specify that the and i'm going to run

00:20:03,980 --> 00:20:08,000
i'm gonna run this job on the particular

00:20:05,779 --> 00:20:11,029
slave called standards dave type and

00:20:08,000 --> 00:20:12,659
then whatever the build bill does is not

00:20:11,029 --> 00:20:14,399
particularly important

00:20:12,659 --> 00:20:17,309
the end result of it is that that's in

00:20:14,399 --> 00:20:19,470
the ditch schedule the build Jenkins is

00:20:17,309 --> 00:20:22,379
going to talk to da car to get the new

00:20:19,470 --> 00:20:25,259
build slave and then you do be able to

00:20:22,379 --> 00:20:27,119
sort of execute the building side and

00:20:25,259 --> 00:20:30,389
then the build slave gets thrown away at

00:20:27,119 --> 00:20:32,070
the end so it always helps you keep her

00:20:30,389 --> 00:20:34,259
here comes in you build slave so you

00:20:32,070 --> 00:20:37,109
always help you to keep your bill the

00:20:34,259 --> 00:20:42,809
environment clean oh did it justice up

00:20:37,109 --> 00:20:44,789
here I don't know what happened it it

00:20:42,809 --> 00:20:47,820
just have disappeared so that's another

00:20:44,789 --> 00:20:49,529
way okay here you came back up so in

00:20:47,820 --> 00:20:51,840
that way you can have the build running

00:20:49,529 --> 00:20:54,450
you always clean and isolated the

00:20:51,840 --> 00:20:56,369
environment which is really useful now

00:20:54,450 --> 00:20:57,869
here's another yet another plug-in so

00:20:56,369 --> 00:20:59,849
this is another slightly different use

00:20:57,869 --> 00:21:01,889
case now you're a product team double

00:20:59,849 --> 00:21:03,690
pointing you're frustrated with floating

00:21:01,889 --> 00:21:05,759
inside ministry there because they are

00:21:03,690 --> 00:21:08,460
not installing the right tool when you

00:21:05,759 --> 00:21:10,830
need it so you could also in that case

00:21:08,460 --> 00:21:12,539
you can say well I wanna you know I want

00:21:10,830 --> 00:21:15,749
to specify the building is that I'm

00:21:12,539 --> 00:21:17,429
going to run in and then so this is what

00:21:15,749 --> 00:21:19,710
the doc or custom build environment

00:21:17,429 --> 00:21:22,049
plug-in does and then this is a check

00:21:19,710 --> 00:21:24,179
box of it adds so here so this is an

00:21:22,049 --> 00:21:25,979
ordinary freestyle project and I'm

00:21:24,179 --> 00:21:28,499
saying that okay please run my build

00:21:25,979 --> 00:21:30,149
inside this container at the same build

00:21:28,499 --> 00:21:31,769
environment container that you saw in

00:21:30,149 --> 00:21:33,749
the workflow and then you know exactly

00:21:31,769 --> 00:21:35,519
what we run inside is not particularly

00:21:33,749 --> 00:21:37,109
important but here I just have some

00:21:35,519 --> 00:21:39,929
stuff just to prove you that this is

00:21:37,109 --> 00:21:42,359
running inside a container so now if I

00:21:39,929 --> 00:21:44,759
do the build you still run in a regular

00:21:42,359 --> 00:21:51,539
in a build container but then when we

00:21:44,759 --> 00:21:56,700
look at what's inside oh it's not

00:21:51,539 --> 00:22:02,809
clicking for me when you click what's

00:21:56,700 --> 00:22:02,809
inside I don't know what the come on

00:22:04,169 --> 00:22:08,980
alright I don't know what something went

00:22:06,640 --> 00:22:11,590
badly wrong is grown and it's not

00:22:08,980 --> 00:22:13,570
responding to my clicking so I guess you

00:22:11,590 --> 00:22:15,549
just have to trust my war that we have

00:22:13,570 --> 00:22:17,590
slides for exactly the occasion thank

00:22:15,549 --> 00:22:19,990
you yeah so you have to trust my word

00:22:17,590 --> 00:22:29,799
that this actually does run inside the

00:22:19,990 --> 00:22:31,990
container so so that's that and yeah so

00:22:29,799 --> 00:22:35,770
that was basically the demo okay alright

00:22:31,990 --> 00:22:37,510
so I guess the three use cases I just

00:22:35,770 --> 00:22:39,000
just kept this around because if you go

00:22:37,510 --> 00:22:41,110
back and look at the slides you can

00:22:39,000 --> 00:22:43,690
visualize what's happened in the first

00:22:41,110 --> 00:22:45,490
use case what happened was there were

00:22:43,690 --> 00:22:48,520
notifications coming in from docker hub

00:22:45,490 --> 00:22:50,770
that triggered the particular job and

00:22:48,520 --> 00:22:53,919
that job was happened to be done written

00:22:50,770 --> 00:22:56,740
in darker workflow dsl and then you

00:22:53,919 --> 00:22:59,740
could push that image up to up to your

00:22:56,740 --> 00:23:02,380
company registry and you can push that

00:22:59,740 --> 00:23:04,419
the QA and testing and staging can

00:23:02,380 --> 00:23:06,580
actually pick that job out and there's

00:23:04,419 --> 00:23:09,010
that last bit there call dr.

00:23:06,580 --> 00:23:11,799
traceability that we didn't show but

00:23:09,010 --> 00:23:14,260
what ends up happening is when you

00:23:11,799 --> 00:23:16,690
deploy something with darker it tickles

00:23:14,260 --> 00:23:18,700
back Jenkins and then Jenkins starts

00:23:16,690 --> 00:23:21,100
keeping the you know the fingerprint you

00:23:18,700 --> 00:23:22,510
know in its database so you can now if

00:23:21,100 --> 00:23:24,490
there's something gone wrong in

00:23:22,510 --> 00:23:26,850
production you can go back to the build

00:23:24,490 --> 00:23:30,100
and see that and see what's gone wrong

00:23:26,850 --> 00:23:32,110
the the green picture up there is a

00:23:30,100 --> 00:23:35,470
flower piece plugin will talk about that

00:23:32,110 --> 00:23:38,230
as we go along the other use case of the

00:23:35,470 --> 00:23:41,200
about the standardized environments for

00:23:38,230 --> 00:23:43,419
ways was we saw that was where the ops

00:23:41,200 --> 00:23:45,820
person is trying to standardize that

00:23:43,419 --> 00:23:47,950
environment and he's using the car being

00:23:45,820 --> 00:23:50,169
his operation center to push that

00:23:47,950 --> 00:23:52,659
configuration down to end all masters

00:23:50,169 --> 00:23:56,799
and share that across in the last use

00:23:52,659 --> 00:23:59,799
case where we ran into trouble was this

00:23:56,799 --> 00:24:02,020
case where the developer in the CTO

00:23:59,799 --> 00:24:03,640
organization wants to try out his own

00:24:02,020 --> 00:24:05,950
stack and wants to do that too often

00:24:03,640 --> 00:24:07,720
what he can do is he can specify a

00:24:05,950 --> 00:24:10,210
docker file in his source code

00:24:07,720 --> 00:24:12,640
repository and the custom build

00:24:10,210 --> 00:24:15,149
environment plugin will instantiate a

00:24:12,640 --> 00:24:17,580
container environment with that

00:24:15,149 --> 00:24:19,349
so that's sort of the sum of all the

00:24:17,580 --> 00:24:22,019
stuff that we've been busy on on on

00:24:19,349 --> 00:24:24,869
darker side in the last few months where

00:24:22,019 --> 00:24:27,299
we are trying to head to this is so this

00:24:24,869 --> 00:24:29,369
was announced today what we like to do

00:24:27,299 --> 00:24:31,320
is replicate what we've done with darker

00:24:29,369 --> 00:24:34,019
in the open source community with Cooper

00:24:31,320 --> 00:24:35,909
Nerys just curious how many here are

00:24:34,019 --> 00:24:39,539
actually looking at KU burn a DS or

00:24:35,909 --> 00:24:42,749
evaluating Cooper Nettie's all right ok

00:24:39,539 --> 00:24:44,249
and from a product perspective what we

00:24:42,749 --> 00:24:47,039
would like to do is we are looking

00:24:44,249 --> 00:24:49,979
towards building an ops dashboard within

00:24:47,039 --> 00:24:52,289
Jenkins a platform where you can pull

00:24:49,979 --> 00:24:56,609
the data and see you know which builds

00:24:52,289 --> 00:24:58,080
correspond to what's being deployed so

00:24:56,609 --> 00:25:01,649
with that out of the way we've seen

00:24:58,080 --> 00:25:04,950
about building CD pipelines we will get

00:25:01,649 --> 00:25:07,109
to the stage where we start talking

00:25:04,950 --> 00:25:08,789
about how to run operations at scale and

00:25:07,109 --> 00:25:12,479
this is where we start getting into

00:25:08,789 --> 00:25:15,479
cloudy's product so early next week

00:25:12,479 --> 00:25:17,009
we'll be doing at juice London will

00:25:15,479 --> 00:25:19,469
actually be announcing the release of

00:25:17,009 --> 00:25:21,330
cloudy Jenkins platform and that

00:25:19,469 --> 00:25:24,059
platform is based on two products that

00:25:21,330 --> 00:25:25,529
we have today and historically we

00:25:24,059 --> 00:25:29,549
started off with a product called cloud

00:25:25,529 --> 00:25:32,249
be stinking enterprise which has a you

00:25:29,549 --> 00:25:35,820
know about 30 yard plugins or more than

00:25:32,249 --> 00:25:38,279
that now which do numerous thing so for

00:25:35,820 --> 00:25:40,879
example if you had your Jenkins master

00:25:38,279 --> 00:25:43,529
running and you wanted high availability

00:25:40,879 --> 00:25:45,239
you know there's a backup master that's

00:25:43,529 --> 00:25:47,219
waiting up for the primary to fail and

00:25:45,239 --> 00:25:50,070
kick in this is all about eliminating

00:25:47,219 --> 00:25:51,809
down times for your end users so that's

00:25:50,070 --> 00:25:54,779
that's part of cloudbees Jenkins

00:25:51,809 --> 00:25:57,029
enterprise and then one of the other

00:25:54,779 --> 00:25:59,369
very popular ones is the rolls based

00:25:57,029 --> 00:26:01,139
access control plugin which is deeply

00:25:59,369 --> 00:26:03,839
integrated with the folders plugin and

00:26:01,139 --> 00:26:07,349
open source so what happens as part of

00:26:03,839 --> 00:26:09,839
that is you can now start thinking of

00:26:07,349 --> 00:26:11,820
your team as like it the dev team has

00:26:09,839 --> 00:26:14,639
its own folder the QA team has its own

00:26:11,820 --> 00:26:17,729
folder and each of these has have their

00:26:14,639 --> 00:26:20,369
own roles based permission set up so you

00:26:17,729 --> 00:26:22,710
can segregate teams by roles and you can

00:26:20,369 --> 00:26:25,409
do a lot more than that in that plugin

00:26:22,710 --> 00:26:28,589
but that's not sort of the high level on

00:26:25,409 --> 00:26:29,049
there and as our customers started using

00:26:28,589 --> 00:26:32,679
the

00:26:29,049 --> 00:26:35,559
and as CI and CD started coming in at

00:26:32,679 --> 00:26:38,019
scale in the organization people have

00:26:35,559 --> 00:26:40,929
started asking us about how can I have a

00:26:38,019 --> 00:26:43,889
single pane to manage all the Masters

00:26:40,929 --> 00:26:46,450
within my organization so we introduced

00:26:43,889 --> 00:26:49,509
the cloudy Jenkins Operations Center

00:26:46,450 --> 00:26:52,450
about 22 years back I think and what it

00:26:49,509 --> 00:26:54,460
does is it lets you a connect to all

00:26:52,450 --> 00:26:57,070
these masters you can have like a

00:26:54,460 --> 00:26:58,779
centralized security with our back push

00:26:57,070 --> 00:27:00,429
down to each of these masters so there's

00:26:58,779 --> 00:27:03,970
a single place where you manage all of

00:27:00,429 --> 00:27:06,489
this and if you have you know slaves you

00:27:03,970 --> 00:27:09,249
can actually share those slaves from the

00:27:06,489 --> 00:27:11,169
operation center across these masters so

00:27:09,249 --> 00:27:13,960
you effectively end up having some sort

00:27:11,169 --> 00:27:17,220
of a global cloud with for your Jenkins

00:27:13,960 --> 00:27:20,799
that gets shared across all the Masters

00:27:17,220 --> 00:27:23,230
so again that that was released about

00:27:20,799 --> 00:27:25,320
two years back and so we've talked about

00:27:23,230 --> 00:27:27,879
that in the past in the in the last

00:27:25,320 --> 00:27:29,139
seven or eight months the stuff that

00:27:27,879 --> 00:27:32,499
you've done which we haven't talked

00:27:29,139 --> 00:27:34,779
about is when we release work flow in

00:27:32,499 --> 00:27:38,230
open source we released something called

00:27:34,779 --> 00:27:40,389
workflow stagevu in our product and you

00:27:38,230 --> 00:27:42,429
saw some of that in cosas que stock he

00:27:40,389 --> 00:27:45,820
didn't talk about it but what you see on

00:27:42,429 --> 00:27:47,940
the left-hand side here is this think of

00:27:45,820 --> 00:27:50,710
this as your entire end-to-end

00:27:47,940 --> 00:27:53,799
organizational value stream that's been

00:27:50,710 --> 00:27:56,909
defined in workflow so all the columns

00:27:53,799 --> 00:27:59,649
here actually represent a stage in your

00:27:56,909 --> 00:28:02,080
software delivery pipeline as defined by

00:27:59,649 --> 00:28:03,929
a workflow script and once you define

00:28:02,080 --> 00:28:07,419
that we can actually pick that up and

00:28:03,929 --> 00:28:11,350
the first use case that that we do here

00:28:07,419 --> 00:28:16,119
is as a developer I would really like to

00:28:11,350 --> 00:28:19,539
know how far did my commits go so if you

00:28:16,119 --> 00:28:21,399
see the first row here you have like you

00:28:19,539 --> 00:28:23,710
know it stops after the third column and

00:28:21,399 --> 00:28:25,779
what that tells the developer is there

00:28:23,710 --> 00:28:28,840
was something that has gone wrong and at

00:28:25,779 --> 00:28:31,179
the third the third stage within

00:28:28,840 --> 00:28:33,369
workflow something's gone wrong so he

00:28:31,179 --> 00:28:35,109
needs to go in and look at that so

00:28:33,369 --> 00:28:37,330
that's that's one use case and they're

00:28:35,109 --> 00:28:40,269
just tiny really anybody numbers on it

00:28:37,330 --> 00:28:42,759
they're actually telling you how much

00:28:40,269 --> 00:28:44,499
time did a particular stage stake

00:28:42,759 --> 00:28:47,109
and this becomes quite useful when you

00:28:44,499 --> 00:28:49,239
are sort of optimizing for you know a

00:28:47,109 --> 00:28:53,169
global end-to-end pipeline across your

00:28:49,239 --> 00:28:55,119
organization so as they say any the

00:28:53,169 --> 00:28:58,659
engineering manager who is responding to

00:28:55,119 --> 00:29:00,699
the CEO on how his pipelines are set up

00:28:58,659 --> 00:29:04,379
and how optimized are they he can

00:29:00,699 --> 00:29:06,759
actually look into it and figure out if

00:29:04,379 --> 00:29:08,499
particular stages are degrading over

00:29:06,759 --> 00:29:10,869
time and that's the place where they

00:29:08,499 --> 00:29:14,109
start digging in and trying to figure

00:29:10,869 --> 00:29:15,879
out what's gone wrong so that's that's

00:29:14,109 --> 00:29:18,219
what we built in the product and and

00:29:15,879 --> 00:29:21,369
we've taken the analytics story a little

00:29:18,219 --> 00:29:24,609
further and what we do now is across

00:29:21,369 --> 00:29:27,759
your entire operation center cluster you

00:29:24,609 --> 00:29:29,799
can star we we start pushing data up to

00:29:27,759 --> 00:29:31,589
the Operations Center and then we have

00:29:29,799 --> 00:29:35,619
some dashboards that help you visualize

00:29:31,589 --> 00:29:38,109
throw the performance of your cluster

00:29:35,619 --> 00:29:39,909
and you can actually drill down into the

00:29:38,109 --> 00:29:43,089
performance of individual clusters there

00:29:39,909 --> 00:29:45,879
and the other stuff that we let you do

00:29:43,089 --> 00:29:47,289
is you can look into the performance of

00:29:45,879 --> 00:29:49,959
your bills if you're trying to figure

00:29:47,289 --> 00:29:52,299
out what kind of executors are being

00:29:49,959 --> 00:29:55,059
most often used across my casa cluster

00:29:52,299 --> 00:29:57,339
you can start pulling their data out and

00:29:55,059 --> 00:30:00,759
all this data is actually being pushed

00:29:57,339 --> 00:30:03,669
to an elastic search engine so if you

00:30:00,759 --> 00:30:05,379
want to kind of go beyond the dashboards

00:30:03,669 --> 00:30:09,159
that we build you can actually build

00:30:05,379 --> 00:30:12,369
your own custom dashboards so that's

00:30:09,159 --> 00:30:17,139
what we've done with the in our product

00:30:12,369 --> 00:30:19,239
and as we as we release is there a new

00:30:17,139 --> 00:30:23,019
sets of use cases that became very

00:30:19,239 --> 00:30:26,019
interesting for end-users so one of them

00:30:23,019 --> 00:30:28,329
is this ability to promote a job so as

00:30:26,019 --> 00:30:31,209
people started using operation center

00:30:28,329 --> 00:30:32,919
and masters across what we saw is at

00:30:31,209 --> 00:30:35,979
least in the bigger organizations is

00:30:32,919 --> 00:30:37,779
they bring in a man they bring in a test

00:30:35,979 --> 00:30:40,419
master connect that to the operation

00:30:37,779 --> 00:30:42,159
center and they want to bring in jobs on

00:30:40,419 --> 00:30:44,169
that test master make sure everything is

00:30:42,159 --> 00:30:46,869
right and then from or that to a

00:30:44,169 --> 00:30:48,879
production master somewhere so this use

00:30:46,869 --> 00:30:51,700
case actually makes makes that happen

00:30:48,879 --> 00:30:54,609
easily and we have to do some nifty

00:30:51,700 --> 00:30:56,029
things here so one is within the cluster

00:30:54,609 --> 00:30:58,369
you can actually

00:30:56,029 --> 00:31:00,859
on it shows your path browser to find

00:30:58,369 --> 00:31:03,469
the job on a different master elsewhere

00:31:00,859 --> 00:31:05,479
and more importantly it's integrated

00:31:03,469 --> 00:31:07,940
with the role space access controls so

00:31:05,479 --> 00:31:09,440
if you wanted to push a job into a

00:31:07,940 --> 00:31:11,419
folder somewhere and you didn't have

00:31:09,440 --> 00:31:13,429
permissions to you would not be able to

00:31:11,419 --> 00:31:15,139
go and override some things so it kind

00:31:13,429 --> 00:31:20,389
of goes back to the theme of making

00:31:15,139 --> 00:31:22,460
operations at scale much better and the

00:31:20,389 --> 00:31:25,429
next big one that we release is this

00:31:22,460 --> 00:31:28,129
cross master job triggers within Jenkins

00:31:25,429 --> 00:31:30,440
so what this lets you do fairly are

00:31:28,129 --> 00:31:32,749
self-evident is you can call a job

00:31:30,440 --> 00:31:35,149
another another master but it's in there

00:31:32,749 --> 00:31:36,769
in the context of a Jenkins cluster so

00:31:35,149 --> 00:31:38,869
you can easily you have the same path

00:31:36,769 --> 00:31:41,299
browser earnest in there so you can

00:31:38,869 --> 00:31:45,049
easily call them out but it kind of

00:31:41,299 --> 00:31:48,229
enables two main use cases the first use

00:31:45,049 --> 00:31:50,269
cases as people have started scaling out

00:31:48,229 --> 00:31:52,099
Jenkins we've talked about scaling

00:31:50,269 --> 00:31:54,409
Jenkins out horizontally and not

00:31:52,099 --> 00:31:57,289
vertically so the operation center

00:31:54,409 --> 00:31:59,389
product lets you do that and in this

00:31:57,289 --> 00:32:02,269
environment when you are adding a new

00:31:59,389 --> 00:32:04,339
master you're now adding a master for a

00:32:02,269 --> 00:32:06,469
team so your QA team will have its

00:32:04,339 --> 00:32:10,099
master the production team has its own

00:32:06,469 --> 00:32:11,119
master and so on and now people want to

00:32:10,099 --> 00:32:13,789
as you're building these

00:32:11,119 --> 00:32:15,710
cross-organizational pipelines you want

00:32:13,789 --> 00:32:18,979
to trigger jobs across these pipelines

00:32:15,710 --> 00:32:22,489
across that masters so that's that's the

00:32:18,979 --> 00:32:24,710
first use case the second use case that

00:32:22,489 --> 00:32:28,279
it enables is again it's it's going

00:32:24,710 --> 00:32:30,139
towards we don't want one huge master an

00:32:28,279 --> 00:32:32,149
ivory tower that we are all worried

00:32:30,139 --> 00:32:34,759
about breaking down what we want to do

00:32:32,149 --> 00:32:38,029
is break it down into these small teams

00:32:34,759 --> 00:32:41,119
such that no team impacts the other one

00:32:38,029 --> 00:32:42,589
and in that environment what people want

00:32:41,119 --> 00:32:45,859
to do is they want to break the master

00:32:42,589 --> 00:32:47,359
down and some jobs land up here are some

00:32:45,859 --> 00:32:49,759
jobs lined up there and so they want

00:32:47,359 --> 00:32:52,489
again disability to trigger jobs across

00:32:49,759 --> 00:32:54,529
masters so those are the two things that

00:32:52,489 --> 00:32:57,440
you know we've been working on last few

00:32:54,529 --> 00:33:00,190
mins apart from darker and again this is

00:32:57,440 --> 00:33:02,929
going to be available early next week

00:33:00,190 --> 00:33:04,309
the last thing that we've done and this

00:33:02,929 --> 00:33:06,499
is an announcement that we do a juice

00:33:04,309 --> 00:33:09,070
london is announced we've actually

00:33:06,499 --> 00:33:10,389
bundled these two into a

00:33:09,070 --> 00:33:13,440
what we call the cloud miss Jenkins

00:33:10,389 --> 00:33:16,240
platform and there were sort of many are

00:33:13,440 --> 00:33:18,970
there was a sort of the background

00:33:16,240 --> 00:33:22,360
motivation on this is as we built the

00:33:18,970 --> 00:33:25,539
enterprise of our operation center

00:33:22,360 --> 00:33:27,820
product what we saw was like two kinds

00:33:25,539 --> 00:33:29,950
of audiences out there so the first

00:33:27,820 --> 00:33:31,450
audience is the guys who are operating

00:33:29,950 --> 00:33:33,519
things at scale they want all the

00:33:31,450 --> 00:33:34,929
features that we've talked about but

00:33:33,519 --> 00:33:36,759
there's another set of people who have

00:33:34,929 --> 00:33:39,610
very small teams and who care about

00:33:36,759 --> 00:33:41,529
developer productivity and they will get

00:33:39,610 --> 00:33:43,120
to the point where they want an

00:33:41,529 --> 00:33:45,700
enterprise edition maybe in six months

00:33:43,120 --> 00:33:47,649
but they are not there today so what

00:33:45,700 --> 00:33:49,870
we've done is we've launched of two

00:33:47,649 --> 00:33:53,980
editions of the product and the team

00:33:49,870 --> 00:33:55,840
edition product what we are sort of be

00:33:53,980 --> 00:33:57,610
bundled Jenkins and either Corby's

00:33:55,840 --> 00:34:00,100
Jenkins enterprise an operation center

00:33:57,610 --> 00:34:04,029
in that so teams can quickly start off

00:34:00,100 --> 00:34:05,830
an architect right from day one and as

00:34:04,029 --> 00:34:09,909
they grow they can keep adding masters

00:34:05,830 --> 00:34:11,560
if they want to the other the next

00:34:09,909 --> 00:34:13,629
feature and I was talking to someone at

00:34:11,560 --> 00:34:16,450
lunch was actually asking me about this

00:34:13,629 --> 00:34:18,190
the other feature that we've done is we

00:34:16,450 --> 00:34:21,429
are releasing something called solution

00:34:18,190 --> 00:34:23,710
packs so a product as a product manager

00:34:21,429 --> 00:34:26,079
where people come to me and ask for some

00:34:23,710 --> 00:34:29,290
niche features that does not apply to a

00:34:26,079 --> 00:34:31,780
lot of people integration with Amazon

00:34:29,290 --> 00:34:33,369
Cloud is one of them there are people

00:34:31,780 --> 00:34:35,200
who really really care about it but

00:34:33,369 --> 00:34:37,179
there are people who don't so in the

00:34:35,200 --> 00:34:40,179
past it was either you know we push this

00:34:37,179 --> 00:34:42,520
down to everyone or we just ignore it so

00:34:40,179 --> 00:34:46,030
what we've done is we have the ability

00:34:42,520 --> 00:34:48,129
to sort of allow add-on packs of you

00:34:46,030 --> 00:34:50,679
know solutions on particular problem

00:34:48,129 --> 00:34:53,079
domains and we bundle that and you get

00:34:50,679 --> 00:34:54,099
that as part of enterprise edition so in

00:34:53,079 --> 00:34:55,839
the next couple of days we are

00:34:54,099 --> 00:34:59,040
announcing the availability of the

00:34:55,839 --> 00:35:02,170
Amazon Web Services back so you can

00:34:59,040 --> 00:35:05,140
spawn off slaves on the Amazon Cloud and

00:35:02,170 --> 00:35:07,119
this is using the Amazon ec2 plugin but

00:35:05,140 --> 00:35:09,460
you can do that on the Operations Center

00:35:07,119 --> 00:35:12,250
and you can bring that across all your

00:35:09,460 --> 00:35:14,079
masters in the organization and we've

00:35:12,250 --> 00:35:16,030
also integrated with the web services

00:35:14,079 --> 00:35:18,700
CLI so if you are building these CD

00:35:16,030 --> 00:35:20,829
pipelines and you want to call on some

00:35:18,700 --> 00:35:22,450
amazon web services you can do that

00:35:20,829 --> 00:35:26,660
through the CLI

00:35:22,450 --> 00:35:29,510
so I kind of summing up on the cloud we

00:35:26,660 --> 00:35:31,610
Jenkins platform side of things what

00:35:29,510 --> 00:35:32,780
we've done here on the team edition side

00:35:31,610 --> 00:35:35,810
you're getting some developer

00:35:32,780 --> 00:35:37,160
productivity stuff so there's a there if

00:35:35,810 --> 00:35:38,750
you're using get there a couple of

00:35:37,160 --> 00:35:40,820
plugins that we built that we use

00:35:38,750 --> 00:35:43,370
internally all the time it's called

00:35:40,820 --> 00:35:46,790
validated merge and and github plugin

00:35:43,370 --> 00:35:48,350
and there's number of you know rules

00:35:46,790 --> 00:35:50,990
based access control features that are

00:35:48,350 --> 00:35:53,230
in and all the work that we've done with

00:35:50,990 --> 00:35:56,150
the darker is available here as well

00:35:53,230 --> 00:35:58,880
just to clarify docker work is an open

00:35:56,150 --> 00:36:00,740
source but we've added it here on the

00:35:58,880 --> 00:36:02,240
enterprise side you're getting some of

00:36:00,740 --> 00:36:04,610
the enterprise features that i talked

00:36:02,240 --> 00:36:06,860
about high availability there's a

00:36:04,610 --> 00:36:09,080
feature that we introduced late last

00:36:06,860 --> 00:36:11,660
year called cluster operations that's

00:36:09,080 --> 00:36:13,880
pretty nifty so now think about you as

00:36:11,660 --> 00:36:17,020
an administrator managing say a dozen

00:36:13,880 --> 00:36:19,910
masters and you want to push down a

00:36:17,020 --> 00:36:22,160
security updates or plugging updates

00:36:19,910 --> 00:36:24,320
across a cluster you can actually have a

00:36:22,160 --> 00:36:27,200
job type that pushes that down for you

00:36:24,320 --> 00:36:29,570
down onto all masters there's another

00:36:27,200 --> 00:36:33,020
feature called fast archiver so if you

00:36:29,570 --> 00:36:35,660
are running a bills in a distributed

00:36:33,020 --> 00:36:37,700
network where slaves are somewhat far

00:36:35,660 --> 00:36:39,890
off from your master this plug-in

00:36:37,700 --> 00:36:42,050
actually speeds up the build by sort of

00:36:39,890 --> 00:36:47,780
doing some nifty compressions while

00:36:42,050 --> 00:36:50,330
transferring data and the last bit on

00:36:47,780 --> 00:36:52,250
cloudy Jenkins platform is as we built

00:36:50,330 --> 00:36:54,620
this out and as organizations have been

00:36:52,250 --> 00:36:58,010
rolling it out we've had a feature

00:36:54,620 --> 00:37:00,050
requests coming in for integrations with

00:36:58,010 --> 00:37:02,180
some of the partners here and some of

00:37:00,050 --> 00:37:04,360
the partners here have actually wanted

00:37:02,180 --> 00:37:08,060
us to provide Jenkins on their platform

00:37:04,360 --> 00:37:10,400
so last year we talked about cloudbees

00:37:08,060 --> 00:37:13,310
Jenkins enterprise on pivotal cloud

00:37:10,400 --> 00:37:15,920
foundry pass now we announced the

00:37:13,310 --> 00:37:18,710
availability of our operation center

00:37:15,920 --> 00:37:20,210
product and in the next week or so or

00:37:18,710 --> 00:37:23,390
two weeks we are actually making the

00:37:20,210 --> 00:37:26,810
entire platform available on the pivotal

00:37:23,390 --> 00:37:29,210
framework we are making the binaries for

00:37:26,810 --> 00:37:30,920
ashore and Amazon available in the air

00:37:29,210 --> 00:37:32,630
marketplaces so you can actually just go

00:37:30,920 --> 00:37:34,380
down and install the product from there

00:37:32,630 --> 00:37:36,000
and there's a

00:37:34,380 --> 00:37:39,230
and the VMware side we are actually

00:37:36,000 --> 00:37:41,190
working on how to use their elastic

00:37:39,230 --> 00:37:46,320
infrastructure to provide something like

00:37:41,190 --> 00:37:49,290
Amazon Elastic slaves there so again a

00:37:46,320 --> 00:37:50,820
lot of things happening here I would I

00:37:49,290 --> 00:37:53,520
presume from a product perspective

00:37:50,820 --> 00:37:56,070
there's there's just a tons of more

00:37:53,520 --> 00:38:01,230
announcements coming down down this path

00:37:56,070 --> 00:38:02,610
as we go along and now getting to the I

00:38:01,230 --> 00:38:05,310
think the most exciting part of the

00:38:02,610 --> 00:38:08,070
presentation here let's talk about tiger

00:38:05,310 --> 00:38:10,170
so what you've seen so far is sort of

00:38:08,070 --> 00:38:12,210
bringing in you know operations at

00:38:10,170 --> 00:38:14,490
enterprise scale and by that I mean if

00:38:12,210 --> 00:38:16,620
you have like one operation center you

00:38:14,490 --> 00:38:20,040
have say a couple of dozen masters and

00:38:16,620 --> 00:38:22,680
you're rolling that out but as CI and CD

00:38:20,040 --> 00:38:25,110
at scale gets adopted that CEO now goes

00:38:22,680 --> 00:38:26,940
to the engineering manager not to the

00:38:25,110 --> 00:38:30,720
engineering manager but gets to the CTO

00:38:26,940 --> 00:38:32,550
and say it's like how do I bring CD to

00:38:30,720 --> 00:38:34,710
thousands of developers and and we've

00:38:32,550 --> 00:38:36,720
talked to customers who have like you

00:38:34,710 --> 00:38:39,930
know 8000 developers and they want to

00:38:36,720 --> 00:38:42,150
enable CD for them right and in this

00:38:39,930 --> 00:38:44,280
case the and the challenges become quite

00:38:42,150 --> 00:38:47,370
interesting right it's no longer about a

00:38:44,280 --> 00:38:50,400
dozen masters or so it's more and then

00:38:47,370 --> 00:38:52,170
you get into this environment where how

00:38:50,400 --> 00:38:54,660
do I separate the roles between the

00:38:52,170 --> 00:38:57,650
admins the dev team or deaf tools

00:38:54,660 --> 00:39:00,870
organizations at managing them versus

00:38:57,650 --> 00:39:03,300
somebody else the team that's actually

00:39:00,870 --> 00:39:05,340
using it at this point I will give it to

00:39:03,300 --> 00:39:07,590
cosas que who will actually walk through

00:39:05,340 --> 00:39:10,020
all the features and we are likely to go

00:39:07,590 --> 00:39:12,120
five minutes over all right good so yeah

00:39:10,020 --> 00:39:14,270
so this is the the project that I mean

00:39:12,120 --> 00:39:16,680
spending a lot of time on in the past

00:39:14,270 --> 00:39:18,690
you know so in these large enterprise

00:39:16,680 --> 00:39:21,030
there's a growing interest in you know

00:39:18,690 --> 00:39:23,490
creating Jenkins and operating genki set

00:39:21,030 --> 00:39:24,900
the scale now in these places there's a

00:39:23,490 --> 00:39:26,670
clear lower separation between the

00:39:24,900 --> 00:39:28,830
product about forestry it's just going

00:39:26,670 --> 00:39:30,720
to use it you Jenkins and there's

00:39:28,830 --> 00:39:32,910
administrator that manages in this

00:39:30,720 --> 00:39:35,160
infrastructure and then there is usually

00:39:32,910 --> 00:39:37,110
some degree of control needs to depend

00:39:35,160 --> 00:39:39,420
for the central guides but also they

00:39:37,110 --> 00:39:41,100
want to remain the courier provides some

00:39:39,420 --> 00:39:44,070
degree of autonomy for individual

00:39:41,100 --> 00:39:46,500
product teams and in general like it's

00:39:44,070 --> 00:39:47,240
expected to run this kind of scale with

00:39:46,500 --> 00:39:50,990
like a very

00:39:47,240 --> 00:39:52,460
small number of people so we started

00:39:50,990 --> 00:39:53,810
seeing a lot of people a lot of

00:39:52,460 --> 00:39:56,150
companies interesting building these

00:39:53,810 --> 00:39:57,560
thinking to the service in family you

00:39:56,150 --> 00:39:59,420
know this some kind of self service

00:39:57,560 --> 00:40:01,490
provisioning experience for the warp or

00:39:59,420 --> 00:40:03,890
so that they can create their own new

00:40:01,490 --> 00:40:06,110
master and they can customize the other

00:40:03,890 --> 00:40:07,940
box experience or any master so that

00:40:06,110 --> 00:40:10,340
authority has the right setup right

00:40:07,940 --> 00:40:12,260
plugins each soul out of the box so that

00:40:10,340 --> 00:40:14,630
the people can you know hit the ground

00:40:12,260 --> 00:40:16,460
running and then the whole thing again

00:40:14,630 --> 00:40:19,460
there's a center of management provided

00:40:16,460 --> 00:40:21,500
on top of it to make sure the you can

00:40:19,460 --> 00:40:24,619
have a small number of people operating

00:40:21,500 --> 00:40:27,320
on it and for us this is like it's great

00:40:24,619 --> 00:40:29,869
because we already have technology we

00:40:27,320 --> 00:40:33,290
have this service running called debug

00:40:29,869 --> 00:40:35,000
cloud non-public ACK on public internet

00:40:33,290 --> 00:40:37,520
and we're running more than one pattern

00:40:35,000 --> 00:40:39,470
masters at any given time both the

00:40:37,520 --> 00:40:42,230
masters and slaves or elastic so it

00:40:39,470 --> 00:40:44,090
comes from the same big pool but I you

00:40:42,230 --> 00:40:47,660
build its type instantaneously on

00:40:44,090 --> 00:40:49,460
isolated build slave and it has no out

00:40:47,660 --> 00:40:51,830
of the box customized experience to

00:40:49,460 --> 00:40:53,450
integrate with all these partners so the

00:40:51,830 --> 00:40:55,490
idea is ok we have most of the

00:40:53,450 --> 00:40:57,619
technology so let's take this technology

00:40:55,490 --> 00:41:00,410
and make sure that it runs on Prem so

00:40:57,619 --> 00:41:03,950
that's where we started working on tiger

00:41:00,410 --> 00:41:05,600
and how it was born so you know this is

00:41:03,950 --> 00:41:07,700
a packaged software that you know we

00:41:05,600 --> 00:41:10,100
give to you and then you can operate is

00:41:07,700 --> 00:41:12,050
as if it's a service and then because

00:41:10,100 --> 00:41:13,820
this is a packaged software we spent a

00:41:12,050 --> 00:41:15,859
lot of effort making sure that it's very

00:41:13,820 --> 00:41:17,930
easy to ramp up this kind of in a

00:41:15,859 --> 00:41:20,510
non-trivial environment on large number

00:41:17,930 --> 00:41:22,700
boxes the masters and slaves are both

00:41:20,510 --> 00:41:25,100
elastic and multi-tenant it so it can

00:41:22,700 --> 00:41:27,470
use a single box to run muscle masters

00:41:25,100 --> 00:41:29,359
and lots of you slaves on it and then

00:41:27,470 --> 00:41:31,280
leverages all the goodies of crab is

00:41:29,359 --> 00:41:33,140
thinking platform that HAP reads just

00:41:31,280 --> 00:41:35,420
talked about so that you know you can

00:41:33,140 --> 00:41:38,119
provide center eyes management analytics

00:41:35,420 --> 00:41:39,680
of old masters in a triggering jobs

00:41:38,119 --> 00:41:41,630
across different masters all that

00:41:39,680 --> 00:41:44,780
functionality make medicines on in this

00:41:41,630 --> 00:41:46,280
environment as well maybe because there

00:41:44,780 --> 00:41:47,869
are so many cloud out there the idea

00:41:46,280 --> 00:41:50,840
here is that we want to make sure that

00:41:47,869 --> 00:41:52,880
this product runs on wide variety of

00:41:50,840 --> 00:41:54,560
different environment but we have to

00:41:52,880 --> 00:41:56,510
start from somewhere so in the initial

00:41:54,560 --> 00:41:59,030
release via Ramey for the Amazon Web

00:41:56,510 --> 00:42:00,250
Services and OpenStack and then the idea

00:41:59,030 --> 00:42:02,800
is that the rest of the

00:42:00,250 --> 00:42:05,710
form it fall I followed here to be

00:42:02,800 --> 00:42:07,660
quickly now from the infrared point of

00:42:05,710 --> 00:42:09,850
view this is how it's going to look like

00:42:07,660 --> 00:42:12,520
you need a number of relatively static

00:42:09,850 --> 00:42:14,980
the big honking boxes where the you know

00:42:12,520 --> 00:42:17,710
the masters and slaves around inside the

00:42:14,980 --> 00:42:20,260
isolated containers and on the front end

00:42:17,710 --> 00:42:22,270
you need to have the HTTP diverse rocks

00:42:20,260 --> 00:42:24,490
if you direct the traffic into the right

00:42:22,270 --> 00:42:26,740
back in and on the back end side we also

00:42:24,490 --> 00:42:30,580
need a storage to make the processed or

00:42:26,740 --> 00:42:34,120
the Jenkins form content so at this

00:42:30,580 --> 00:42:36,040
point 1 i'm going to try to show you it

00:42:34,120 --> 00:42:38,740
looks like the yes the chrome have

00:42:36,040 --> 00:42:43,180
crushed so this is going to be a little

00:42:38,740 --> 00:42:44,980
bit tricky okay i think its back so so

00:42:43,180 --> 00:42:47,620
this is what the f I have this lack of

00:42:44,980 --> 00:42:49,960
my own deployment of pie guy running on

00:42:47,620 --> 00:42:51,820
database and then this is the add the

00:42:49,960 --> 00:42:53,680
Jenkins operations agribusiness

00:42:51,820 --> 00:42:56,860
operation center where people can come

00:42:53,680 --> 00:42:59,620
in and they create a new master so you

00:42:56,860 --> 00:43:03,210
know what I'm going to do is the i'm

00:42:59,620 --> 00:43:06,460
going to create a new master named go

00:43:03,210 --> 00:43:08,530
and then I pick the right night I asked

00:43:06,460 --> 00:43:11,440
to create a new master and you can

00:43:08,530 --> 00:43:13,840
obviously do this from the API call as

00:43:11,440 --> 00:43:16,000
well and behind the scenes so this

00:43:13,840 --> 00:43:20,350
started provisioning a new master on

00:43:16,000 --> 00:43:23,230
this environment so while it's doing it

00:43:20,350 --> 00:43:25,120
so what's going on here is that the

00:43:23,230 --> 00:43:27,640
behind the scene this like a software

00:43:25,120 --> 00:43:29,920
has number of boxes under its wings in

00:43:27,640 --> 00:43:32,680
this time I have three so it's looking

00:43:29,920 --> 00:43:34,720
for one of the least loaded build these

00:43:32,680 --> 00:43:37,510
loaded boxes and launching a new

00:43:34,720 --> 00:43:40,180
container that has the Jenkins master in

00:43:37,510 --> 00:43:42,280
it and make sure that the new persisted

00:43:40,180 --> 00:43:44,620
storage for that guy is allocated in the

00:43:42,280 --> 00:43:48,490
backend storage now make sure that the

00:43:44,620 --> 00:43:50,530
front pen diverse roxy is a is directing

00:43:48,490 --> 00:43:53,230
a traffic to the right back in you know

00:43:50,530 --> 00:43:56,080
the connecting up the nudie dance master

00:43:53,230 --> 00:43:57,940
a TD in the CJ or see all that stuff

00:43:56,080 --> 00:44:03,640
happens behind the scene while i'm on

00:43:57,940 --> 00:44:08,250
the podium waving my hands so he so

00:44:03,640 --> 00:44:14,150
hopefully this guy's cooperating

00:44:08,250 --> 00:44:14,150
I don't know what's going on here Oh

00:44:18,500 --> 00:44:20,560
Oh

00:44:20,760 --> 00:44:28,500
that's not what I'm supposed to be doing

00:44:24,500 --> 00:44:30,600
sorry about that and now you know my

00:44:28,500 --> 00:44:32,010
dirty secret that i'm running a certain

00:44:30,600 --> 00:44:38,220
operating system that i should be

00:44:32,010 --> 00:44:40,110
running anymore the let's see what I'm

00:44:38,220 --> 00:44:43,740
trying it I don't know what's going on

00:44:40,110 --> 00:44:45,600
I'm trying to switch to my browser for

00:44:43,740 --> 00:44:50,390
it's not good enough yeah it's not doing

00:44:45,600 --> 00:44:50,390
it come on you can do

00:44:55,550 --> 00:45:00,920
so there was a part in the demo where he

00:44:57,650 --> 00:45:04,580
was going to actually kill one of the

00:45:00,920 --> 00:45:07,720
Masters so I think that's manifested

00:45:04,580 --> 00:45:10,940
itself earlier by killing the whole demo

00:45:07,720 --> 00:45:12,950
note to self don't kill stuff and I know

00:45:10,940 --> 00:45:15,590
I know I think I know what's going on oh

00:45:12,950 --> 00:45:18,440
maybe I don't yeah there you go okay

00:45:15,590 --> 00:45:21,230
here that pic a while to recover and I

00:45:18,440 --> 00:45:23,570
think I'm so naughty well I guess while

00:45:21,230 --> 00:45:25,670
I was struggling with demo and the the

00:45:23,570 --> 00:45:28,280
the tiger has managed to create a new

00:45:25,670 --> 00:45:30,140
master and it's ready to the build here

00:45:28,280 --> 00:45:32,270
so you know at this point it's just a

00:45:30,140 --> 00:45:33,950
fresh new Yankees master not much

00:45:32,270 --> 00:45:35,720
happening except it's already

00:45:33,950 --> 00:45:38,090
pre-configured to do you know they do

00:45:35,720 --> 00:45:39,890
the bills with the cloud build slave so

00:45:38,090 --> 00:45:41,720
what I'm going to do is to just approve

00:45:39,890 --> 00:45:46,400
that this guy is walking i'm going to

00:45:41,720 --> 00:45:52,510
quickly create some job and then specify

00:45:46,400 --> 00:45:55,430
that specify that this is in fact

00:45:52,510 --> 00:45:57,980
capable providing the build slaves from

00:45:55,430 --> 00:46:01,340
the from the from the crab and the bill

00:45:57,980 --> 00:46:03,380
slaves themselves are on containerized

00:46:01,340 --> 00:46:07,000
like yeah the build save itself is

00:46:03,380 --> 00:46:13,670
containerized and then so i can run the

00:46:07,000 --> 00:46:16,790
let's say you to choose the not own

00:46:13,670 --> 00:46:18,230
master yes and then I just it should

00:46:16,790 --> 00:46:22,880
make sure to prove the point that i'm

00:46:18,230 --> 00:46:25,190
running the build no master so as I

00:46:22,880 --> 00:46:27,290
schedule the build this is going to

00:46:25,190 --> 00:46:29,000
start asking tire that I need a new

00:46:27,290 --> 00:46:31,190
build slave and it's going to you know

00:46:29,000 --> 00:46:33,590
find again available build machine

00:46:31,190 --> 00:46:36,290
available big honking box to ranch the

00:46:33,590 --> 00:46:39,380
state container on and it's going to do

00:46:36,290 --> 00:46:41,840
the start doing a build so I think as we

00:46:39,380 --> 00:46:43,910
are talking it should be getting a new

00:46:41,840 --> 00:46:48,350
build sleep going and then now yes now

00:46:43,910 --> 00:46:51,680
it's underway and so there you go it's

00:46:48,350 --> 00:46:54,500
running in the container that's like

00:46:51,680 --> 00:46:56,990
what awful name containers but that's

00:46:54,500 --> 00:46:59,000
key that's what's going on and then so

00:46:56,990 --> 00:47:01,430
what's the time now let's see do I have

00:46:59,000 --> 00:47:02,720
that time to do the failover so Jenkins

00:47:01,430 --> 00:47:05,060
user conference you have all the time

00:47:02,720 --> 00:47:08,660
come on okay so I guess i'ma ride

00:47:05,060 --> 00:47:11,480
through it I'm so okay so what be

00:47:08,660 --> 00:47:15,530
so the next thing that I wanted to do is

00:47:11,480 --> 00:47:18,589
show was you know I wanted to simulate

00:47:15,530 --> 00:47:21,619
what happens when I make the when I make

00:47:18,589 --> 00:47:28,430
the build I'm sorry I make the thing is

00:47:21,619 --> 00:47:30,680
master fail so II so because in this

00:47:28,430 --> 00:47:32,150
nerdy I don't know how to because then

00:47:30,680 --> 00:47:35,690
case is so stable i don't know how

00:47:32,150 --> 00:47:37,940
peculiar so the i'm going to just in a

00:47:35,690 --> 00:47:40,700
connector this volcano directly and then

00:47:37,940 --> 00:47:43,819
basically do the kill command in a q9 to

00:47:40,700 --> 00:47:45,829
jump the whole thing even go so i got to

00:47:43,819 --> 00:47:47,630
see what are three big honking boxes

00:47:45,829 --> 00:47:51,980
here so i need to kind of have to find

00:47:47,630 --> 00:47:54,079
where the right guy is let's see i think

00:47:51,980 --> 00:47:55,940
this is this i think this guy's to be

00:47:54,079 --> 00:47:57,589
clear you don't have to do that not an

00:47:55,940 --> 00:47:58,730
english don't do it on your production

00:47:57,589 --> 00:48:02,230
environment cuz you're killing your

00:47:58,730 --> 00:48:06,170
master but hey so I'm just going to

00:48:02,230 --> 00:48:08,089
issue a kill command you get this master

00:48:06,170 --> 00:48:09,770
you know this guy disappears so if I

00:48:08,089 --> 00:48:14,210
quickly come back while this guy is

00:48:09,770 --> 00:48:17,119
fielding now the connection the

00:48:14,210 --> 00:48:19,700
dispatcher is is fading because well I

00:48:17,119 --> 00:48:21,740
just killed it but the tiger had also

00:48:19,700 --> 00:48:23,480
took notice at all the master that I'm

00:48:21,740 --> 00:48:25,430
supposed to be running here it's not

00:48:23,480 --> 00:48:27,079
gone well something bad must have

00:48:25,430 --> 00:48:29,210
happened so we need to find another

00:48:27,079 --> 00:48:31,849
place to run it make sure that the

00:48:29,210 --> 00:48:34,220
stories is available that other guy and

00:48:31,849 --> 00:48:36,170
then in advance the new container that

00:48:34,220 --> 00:48:38,450
points to it so the end result is it

00:48:36,170 --> 00:48:41,089
sort of act as a kind of fade over later

00:48:38,450 --> 00:48:43,220
aye sir in this environment you have a

00:48:41,089 --> 00:48:45,470
lots of masters you know for each team

00:48:43,220 --> 00:48:47,990
and instead of running on lots of big

00:48:45,470 --> 00:48:50,539
honking boxes so even if one of them

00:48:47,990 --> 00:48:52,880
fails or even if you lose the entire big

00:48:50,539 --> 00:48:55,220
honking box the cluster will make sure

00:48:52,880 --> 00:48:57,440
that this master gets real Anstey else

00:48:55,220 --> 00:48:59,720
we are available in the cloud so as a

00:48:57,440 --> 00:49:02,180
whole the service level as the entirety

00:48:59,720 --> 00:49:03,619
of the environment you can sit and kind

00:49:02,180 --> 00:49:06,589
of keep it up and running all the time

00:49:03,619 --> 00:49:09,890
even if temporarily individual master

00:49:06,589 --> 00:49:13,279
might be affected so now the idea is

00:49:09,890 --> 00:49:15,770
that if I just devote the page we should

00:49:13,279 --> 00:49:20,670
stop we should see this guy getting need

00:49:15,770 --> 00:49:23,010
to a billion in another place and then

00:49:20,670 --> 00:49:27,480
yes and now it's starting to get back to

00:49:23,010 --> 00:49:31,049
work and I just depending on how much

00:49:27,480 --> 00:49:32,819
this guy's loaded yes an ice pack with

00:49:31,049 --> 00:49:35,430
all the jobs configure than the build

00:49:32,819 --> 00:49:37,079
state in tax you know it again as the

00:49:35,430 --> 00:49:39,119
operator of this environment you don't

00:49:37,079 --> 00:49:42,780
have to worry about if you had a local

00:49:39,119 --> 00:49:45,420
job it would if you have a walk so job

00:49:42,780 --> 00:49:47,849
it's even wait I haven't tested this I

00:49:45,420 --> 00:49:52,920
probably shouldn't tell you that part of

00:49:47,849 --> 00:49:57,270
college a planner cited so that should

00:49:52,920 --> 00:50:01,200
have worked as well okay so no the trick

00:49:57,270 --> 00:50:03,930
is if I can get just if I can just get

00:50:01,200 --> 00:50:06,270
back to the right slice then everything

00:50:03,930 --> 00:50:08,220
this is going to take forever so if I

00:50:06,270 --> 00:50:10,170
can just get back the right slides I can

00:50:08,220 --> 00:50:14,609
finish up the rest of the story really

00:50:10,170 --> 00:50:16,200
quickly so so this is at the field

00:50:14,609 --> 00:50:18,000
working progress software but we became

00:50:16,200 --> 00:50:19,859
a long way so I didn't want to make sure

00:50:18,000 --> 00:50:21,030
if you're interested we are looking for

00:50:19,859 --> 00:50:23,069
a few people who are willing to

00:50:21,030 --> 00:50:25,559
seriously keep the tire and work with us

00:50:23,069 --> 00:50:27,210
to drive this product aversion one at

00:50:25,559 --> 00:50:29,400
all so if you're interested in being

00:50:27,210 --> 00:50:31,319
part of that then please the drop by at

00:50:29,400 --> 00:50:34,559
the club is pissed and that we

00:50:31,319 --> 00:50:35,940
definitely talk to you I mentioned

00:50:34,559 --> 00:50:37,890
during the keynote we are looking for

00:50:35,940 --> 00:50:39,540
the IMP advantages that interfaces the

00:50:37,890 --> 00:50:41,520
community but the club is is also

00:50:39,540 --> 00:50:43,650
looking for the advantage that talks

00:50:41,520 --> 00:50:45,990
about much heavy stuff as well as the

00:50:43,650 --> 00:50:48,299
product managers engineers the sales guy

00:50:45,990 --> 00:50:49,829
basically like everyone so if you're

00:50:48,299 --> 00:50:51,690
interested in working with us I'd be

00:50:49,829 --> 00:50:54,690
delighted and you should talk to us now

00:50:51,690 --> 00:50:56,730
so just to wrap up the whole thing you

00:50:54,690 --> 00:50:58,829
know with the with the recent

00:50:56,730 --> 00:51:00,210
advancement in the workflow and dr. you

00:50:58,829 --> 00:51:03,119
can really build the modern city

00:51:00,210 --> 00:51:05,520
pipeline with drinking's and then you

00:51:03,119 --> 00:51:07,559
can bring the app you can use the club

00:51:05,520 --> 00:51:09,329
is Lincoln's platform to bring this kind

00:51:07,559 --> 00:51:12,030
of container stable we experience the

00:51:09,329 --> 00:51:13,890
boss you know the team size organization

00:51:12,030 --> 00:51:16,079
and enterprise-scale organization as

00:51:13,890 --> 00:51:17,700
well and finally looking forward you

00:51:16,079 --> 00:51:19,710
know we are working on the new product

00:51:17,700 --> 00:51:22,020
called tiger which is help you need a

00:51:19,710 --> 00:51:24,240
larger environment organization to run a

00:51:22,020 --> 00:51:27,000
massive genki sudo service inside their

00:51:24,240 --> 00:51:28,440
company instead probably anyway okay so

00:51:27,000 --> 00:51:29,760
sorry about the running over the time

00:51:28,440 --> 00:51:31,680
but that's basically it for what we

00:51:29,760 --> 00:51:33,740
wanted to talk about thank you

00:51:31,680 --> 00:51:33,740
you

00:51:43,620 --> 00:51:45,680

YouTube URL: https://www.youtube.com/watch?v=aq_grSF64tM


