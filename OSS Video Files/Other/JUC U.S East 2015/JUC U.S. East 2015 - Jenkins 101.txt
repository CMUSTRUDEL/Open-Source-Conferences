Title: JUC U.S. East 2015 - Jenkins 101
Publication date: 2020-01-23
Playlist: JUC U.S East 2015
Description: 
	By: Lorelei McCollum, IBM 

Get up and running with Jenkins in just a few days with no prior knowledge. Jenkins allows for many different configurations and plugins for creating a true continuous delivery/continuous integration pipeline from build through test. Job design, source control of Jenkins artifacts, parametrization and abstraction are key elements to ensure a reliable pipeline is achieved. These best practices will get you off to a fast start.
Captions: 
	00:00:15,000 --> 00:00:19,710
my name is Laurel I McCullum i work at

00:00:17,550 --> 00:00:23,099
IBM I've been kind of in the automation

00:00:19,710 --> 00:00:25,880
test build pipeline stuff for almost ten

00:00:23,099 --> 00:00:29,310
years now we moved over to using Jenkins

00:00:25,880 --> 00:00:31,890
maybe two or so years ago so this talk

00:00:29,310 --> 00:00:34,559
is Jenkins 101 getting started with

00:00:31,890 --> 00:00:36,239
Jenkins essentially you know I've been

00:00:34,559 --> 00:00:38,940
to the conference in the past and there

00:00:36,239 --> 00:00:41,100
was a lot of deep dive really quick and

00:00:38,940 --> 00:00:43,019
it you know kind of words people off if

00:00:41,100 --> 00:00:45,360
they're new to this so this is why I'm

00:00:43,019 --> 00:00:47,820
doing kind of a 101 get you familiar

00:00:45,360 --> 00:00:49,800
with Jenkins and what it's all about and

00:00:47,820 --> 00:00:51,390
how it can you know how it works how to

00:00:49,800 --> 00:00:54,649
use it and how it can potentially help

00:00:51,390 --> 00:00:56,910
you in your products and your business

00:00:54,649 --> 00:01:00,660
so what we're going to cover today is

00:00:56,910 --> 00:01:03,030
some brief install build designing your

00:01:00,660 --> 00:01:06,330
Jenkins jobs and your pipelines primer

00:01:03,030 --> 00:01:08,899
ties ation workspace the workspace of

00:01:06,330 --> 00:01:11,399
Jenkins the Jenkins nodes or the slaves

00:01:08,899 --> 00:01:14,130
security around your Jenkins source

00:01:11,399 --> 00:01:17,700
control for your jobs groovy and some

00:01:14,130 --> 00:01:19,920
plugins so installing Jenkins is pretty

00:01:17,700 --> 00:01:22,290
easy there's instructions right on their

00:01:19,920 --> 00:01:25,290
website on its sports various you know

00:01:22,290 --> 00:01:28,110
platforms we actually use a linux ubuntu

00:01:25,290 --> 00:01:29,549
server for our jenkins master but it's

00:01:28,110 --> 00:01:31,470
really easy to do and so i wanted to

00:01:29,549 --> 00:01:33,270
throw this slide out there in case

00:01:31,470 --> 00:01:36,810
anyone here has not installed drink as

00:01:33,270 --> 00:01:38,670
before it's very easy so the first thing

00:01:36,810 --> 00:01:41,220
that i want to talk about with Jenkins

00:01:38,670 --> 00:01:44,100
is the build so Jenkins refers to this

00:01:41,220 --> 00:01:46,259
thing is the build and what is that it's

00:01:44,100 --> 00:01:48,960
not necessarily your product build it

00:01:46,259 --> 00:01:51,509
can be anything it's essentially the I

00:01:48,960 --> 00:01:53,970
consider it the main method of your java

00:01:51,509 --> 00:01:56,579
class it runs what you want to do so

00:01:53,970 --> 00:01:58,380
whether it's writing tests running tests

00:01:56,579 --> 00:02:00,780
deploying something I'm actually

00:01:58,380 --> 00:02:02,729
building your product you know it can be

00:02:00,780 --> 00:02:04,710
any of those things so you really have

00:02:02,729 --> 00:02:06,659
to throw the notion of what you might

00:02:04,710 --> 00:02:09,390
think of build is out the window when

00:02:06,659 --> 00:02:11,190
you start using drinkin's because you

00:02:09,390 --> 00:02:14,459
know it can do anything you want it's an

00:02:11,190 --> 00:02:16,739
automation tool so there's three main

00:02:14,459 --> 00:02:19,260
parts to a Jenkins job there's the pre

00:02:16,739 --> 00:02:22,079
build the build itself and the post

00:02:19,260 --> 00:02:23,580
build so the pre build is you know

00:02:22,079 --> 00:02:25,569
anything you want to do and setup

00:02:23,580 --> 00:02:27,670
environment variables

00:02:25,569 --> 00:02:30,310
set up get things squared away before

00:02:27,670 --> 00:02:33,489
you actually do the main work of the job

00:02:30,310 --> 00:02:35,430
it allows you to kind of customize and

00:02:33,489 --> 00:02:38,200
configure these three different steps

00:02:35,430 --> 00:02:39,939
the config of a Jenkins job is

00:02:38,200 --> 00:02:42,250
essentially where you go to say this is

00:02:39,939 --> 00:02:44,859
what I want this to do and you know

00:02:42,250 --> 00:02:46,659
there's three main steps to each job and

00:02:44,859 --> 00:02:49,750
it's really it's really key to

00:02:46,659 --> 00:02:51,519
understand each section and all the

00:02:49,750 --> 00:02:53,439
different you know features and aspects

00:02:51,519 --> 00:02:56,230
that you can add add to those to really

00:02:53,439 --> 00:02:58,620
customize how you want to create your

00:02:56,230 --> 00:03:01,329
job there's tons of plugins out there

00:02:58,620 --> 00:03:03,010
there's hundreds of plugins I think

00:03:01,329 --> 00:03:05,439
there's maybe thousands of plugins now

00:03:03,010 --> 00:03:07,719
so you know there's there's probably a

00:03:05,439 --> 00:03:11,260
plug-in that can do what you want to do

00:03:07,719 --> 00:03:14,139
so its use the use google and find those

00:03:11,260 --> 00:03:15,519
plugins for what you're looking to do so

00:03:14,139 --> 00:03:17,859
when you're actually in the config of a

00:03:15,519 --> 00:03:20,319
Jenkins job there's these little buttons

00:03:17,859 --> 00:03:22,389
that say add build steps and based on

00:03:20,319 --> 00:03:24,430
what's installed on your Jenkins master

00:03:22,389 --> 00:03:26,620
what plugins you have set up you'll see

00:03:24,430 --> 00:03:28,689
an array of a different list you know

00:03:26,620 --> 00:03:30,370
this is kind of a basic list we have

00:03:28,689 --> 00:03:32,229
some extra things installed on our

00:03:30,370 --> 00:03:34,509
Jenkins master which may be different

00:03:32,229 --> 00:03:36,759
than yours and this kind of based on

00:03:34,509 --> 00:03:39,340
what you install it appends or adds to

00:03:36,759 --> 00:03:41,849
these these build steps there's post

00:03:39,340 --> 00:03:44,199
build these are examples of post build

00:03:41,849 --> 00:03:46,060
plugins that add to the post build

00:03:44,199 --> 00:03:47,319
section of the job and you can do lots

00:03:46,060 --> 00:03:50,400
of different things you can see here

00:03:47,319 --> 00:03:53,620
like publishing and reports and you know

00:03:50,400 --> 00:03:55,629
g-unit results and sending emails and

00:03:53,620 --> 00:03:57,189
doing all sorts of stuff so it's really

00:03:55,629 --> 00:03:58,780
powerful these plugins really make

00:03:57,189 --> 00:04:00,819
Jenkins powerful because they give you

00:03:58,780 --> 00:04:05,109
this ability to do whatever you want at

00:04:00,819 --> 00:04:06,489
each of these three steps of the job so

00:04:05,109 --> 00:04:08,769
the biggest thing when coming in to

00:04:06,489 --> 00:04:11,229
write your first check ins job or to

00:04:08,769 --> 00:04:13,030
write a pipeline or you know some CDC I

00:04:11,229 --> 00:04:14,680
for your product I'm you really want to

00:04:13,030 --> 00:04:16,989
think about design and the reason why I

00:04:14,680 --> 00:04:19,090
say this is I jumped on I jumped into

00:04:16,989 --> 00:04:20,859
this you know in a few days and wrote

00:04:19,090 --> 00:04:22,870
all these jobs and then realize that

00:04:20,859 --> 00:04:25,240
they all share common things which now

00:04:22,870 --> 00:04:27,400
the workflow plugin kind of helps with

00:04:25,240 --> 00:04:30,310
that but that didn't exist when I when I

00:04:27,400 --> 00:04:33,639
started this so reconfiguring Jenkins

00:04:30,310 --> 00:04:34,990
jobs is really painful especially if you

00:04:33,639 --> 00:04:37,300
say added a new

00:04:34,990 --> 00:04:39,310
plug in and now want to you know add it

00:04:37,300 --> 00:04:41,800
to every single one of your jobs to have

00:04:39,310 --> 00:04:44,500
to go and hit config on every single one

00:04:41,800 --> 00:04:46,660
and add the change and then hit save it

00:04:44,500 --> 00:04:48,520
can take you all day so you really want

00:04:46,660 --> 00:04:51,100
to think about what are these these

00:04:48,520 --> 00:04:52,690
Jenkins jobs need to do how are you

00:04:51,100 --> 00:04:54,040
going to update them or change them what

00:04:52,690 --> 00:04:56,470
are things that are going to change I

00:04:54,040 --> 00:04:58,270
you know how are you going to debug

00:04:56,470 --> 00:05:00,190
these jobs when they fail so you really

00:04:58,270 --> 00:05:02,620
want to kind of whiteboard it out or

00:05:00,190 --> 00:05:04,030
design it on paper before you actually

00:05:02,620 --> 00:05:05,980
just go and create a bunch of jobs

00:05:04,030 --> 00:05:08,560
because you're probably going to end up

00:05:05,980 --> 00:05:10,600
going back and tweaking them to you know

00:05:08,560 --> 00:05:13,420
to make the design better so you really

00:05:10,600 --> 00:05:15,520
start small and then expand from there

00:05:13,420 --> 00:05:17,020
and you know there's a lot of you know

00:05:15,520 --> 00:05:19,300
use naming conventions and things like

00:05:17,020 --> 00:05:20,470
that I find on our Jenkins we end up

00:05:19,300 --> 00:05:22,330
with people creating all these tests

00:05:20,470 --> 00:05:24,130
jobs and it's like three months later

00:05:22,330 --> 00:05:26,320
you have no idea what those jobs are or

00:05:24,130 --> 00:05:29,050
what they even do so you really want to

00:05:26,320 --> 00:05:31,030
enforce kind of some standards to the

00:05:29,050 --> 00:05:33,670
people that are you allow to create jobs

00:05:31,030 --> 00:05:35,560
on your Jenkins now out of the box

00:05:33,670 --> 00:05:37,210
there's we'll talk about security and

00:05:35,560 --> 00:05:38,860
you know who can do what in your Jenkins

00:05:37,210 --> 00:05:40,300
environment but if you give everyone

00:05:38,860 --> 00:05:42,640
create access you're going to have like

00:05:40,300 --> 00:05:45,130
Lorelei's job one Lorelei's job too and

00:05:42,640 --> 00:05:47,050
you'll forget what those are for you

00:05:45,130 --> 00:05:48,940
know three months down the road so I

00:05:47,050 --> 00:05:50,650
feel feel like designing your pipeline

00:05:48,940 --> 00:05:52,630
designing these jobs you really want to

00:05:50,650 --> 00:05:56,530
step back and look at that before you

00:05:52,630 --> 00:05:58,300
start to to do this configuring the jobs

00:05:56,530 --> 00:06:00,130
you know the Jenkins job can pretty much

00:05:58,300 --> 00:06:01,990
do anything you can do command line it

00:06:00,130 --> 00:06:04,420
can automate that for you can run it out

00:06:01,990 --> 00:06:06,850
of schedule can run it as triggered from

00:06:04,420 --> 00:06:08,410
something else you don't want to

00:06:06,850 --> 00:06:10,180
hard-code things that could potentially

00:06:08,410 --> 00:06:11,980
change if you're you know you're

00:06:10,180 --> 00:06:13,510
building your product and you have

00:06:11,980 --> 00:06:15,730
different releases and say there's a

00:06:13,510 --> 00:06:17,710
stream or a branch and that changes from

00:06:15,730 --> 00:06:19,390
release to release you don't want that

00:06:17,710 --> 00:06:21,670
hard coded in your job you want to pass

00:06:19,390 --> 00:06:24,340
it as a parameter pull it from source

00:06:21,670 --> 00:06:25,810
make it an environment variable so these

00:06:24,340 --> 00:06:27,910
things you really want to think about

00:06:25,810 --> 00:06:30,970
when you're starting to write write your

00:06:27,910 --> 00:06:34,300
jobs security who can build and

00:06:30,970 --> 00:06:37,300
configure your drink and in your Jenkins

00:06:34,300 --> 00:06:39,100
environment I mean you can have admins

00:06:37,300 --> 00:06:42,100
you can have advanced users you can have

00:06:39,100 --> 00:06:43,480
read-only users your everyday users you

00:06:42,100 --> 00:06:45,730
want to set this up from the beginning

00:06:43,480 --> 00:06:47,560
because otherwise to go back in and

00:06:45,730 --> 00:06:48,639
we'll see in a few slides it's it's

00:06:47,560 --> 00:06:50,740
tedious it's like ever

00:06:48,639 --> 00:06:53,050
persons and individual line and so we

00:06:50,740 --> 00:06:54,729
use groups to kind of control this so

00:06:53,050 --> 00:06:57,310
that it's you never have to go into the

00:06:54,729 --> 00:06:59,620
Jenkins master to do your security you

00:06:57,310 --> 00:07:01,210
just you know in however your company

00:06:59,620 --> 00:07:02,830
works you say add this person to this

00:07:01,210 --> 00:07:05,680
group and then they automatically get

00:07:02,830 --> 00:07:08,590
access the Jenkins workspace is really

00:07:05,680 --> 00:07:10,539
useful for every build that runs every

00:07:08,590 --> 00:07:13,270
job that runs in Jenkins it has its own

00:07:10,539 --> 00:07:15,159
unique workspace and that can be really

00:07:13,270 --> 00:07:17,199
useful you can put artifacts there you

00:07:15,159 --> 00:07:18,849
can put properties files you can write

00:07:17,199 --> 00:07:21,009
out logs you can do all sorts of things

00:07:18,849 --> 00:07:23,889
for that workspace it can be leveraged

00:07:21,009 --> 00:07:26,319
to do more complex workflows and that

00:07:23,889 --> 00:07:29,169
type of stuff so think about that when

00:07:26,319 --> 00:07:30,580
you're you know writing these jobs you

00:07:29,169 --> 00:07:32,710
can create and pass environment

00:07:30,580 --> 00:07:34,629
variables all around you can I'd you

00:07:32,710 --> 00:07:36,129
know there's an environment injector

00:07:34,629 --> 00:07:37,539
plugin that allows you to kind of if

00:07:36,129 --> 00:07:39,430
you're creating environment variables

00:07:37,539 --> 00:07:41,680
then inject them back in so the rest of

00:07:39,430 --> 00:07:45,639
the Jenkins job knows what to do or has

00:07:41,680 --> 00:07:47,620
them accessible also there may be better

00:07:45,639 --> 00:07:49,659
solutions than actually blocking jobs so

00:07:47,620 --> 00:07:52,150
blocking jobs and Jenkins means that

00:07:49,659 --> 00:07:54,580
this job will wait until it's completed

00:07:52,150 --> 00:07:56,740
it's completed running so that it will

00:07:54,580 --> 00:07:58,779
be spinning up and running and running

00:07:56,740 --> 00:08:00,909
and running until it's done alright and

00:07:58,779 --> 00:08:03,129
what that does is it's it's taking up an

00:08:00,909 --> 00:08:04,750
executor and what an executor is is when

00:08:03,129 --> 00:08:06,909
you run jobs and Jenkins they run on

00:08:04,750 --> 00:08:09,279
executor zon your slave node or your

00:08:06,909 --> 00:08:10,899
master and you sometimes you don't want

00:08:09,279 --> 00:08:12,370
to have a job that's blocking for hours

00:08:10,899 --> 00:08:14,409
I mean what happens if you have to

00:08:12,370 --> 00:08:15,759
restart Jenkins or there's a power

00:08:14,409 --> 00:08:18,399
outage and then what happens to your

00:08:15,759 --> 00:08:20,589
jobs so there's better solutions and

00:08:18,399 --> 00:08:23,050
then actually you know using the

00:08:20,589 --> 00:08:25,569
blocking jobs I feature but there are

00:08:23,050 --> 00:08:27,699
cases for it all right and you know it

00:08:25,569 --> 00:08:30,009
can be used the other thing to know is

00:08:27,699 --> 00:08:33,339
how to maintain your your slaves your

00:08:30,009 --> 00:08:34,539
nodes your jobs the pipeline you want to

00:08:33,339 --> 00:08:37,779
think about things like that you know

00:08:34,539 --> 00:08:39,610
how do you add a new node in or how do

00:08:37,779 --> 00:08:41,349
you retire a note how do you do

00:08:39,610 --> 00:08:42,820
operating system updates on your nodes

00:08:41,349 --> 00:08:45,399
without taking down your whole pipeline

00:08:42,820 --> 00:08:49,720
so things like that are something to

00:08:45,399 --> 00:08:52,540
consider prioritization so we do a lot

00:08:49,720 --> 00:08:54,490
of prioritization in our Jenkins jobs

00:08:52,540 --> 00:08:56,460
that we have and essentially it allows

00:08:54,490 --> 00:08:58,140
you to reuse the job and

00:08:56,460 --> 00:09:00,630
that's really key especially if you have

00:08:58,140 --> 00:09:02,870
hundreds of jobs and if you can get them

00:09:00,630 --> 00:09:05,130
to all go through kind of one downstream

00:09:02,870 --> 00:09:07,140
job and just send a bunch of different

00:09:05,130 --> 00:09:08,880
parameters and it'll do different things

00:09:07,140 --> 00:09:11,220
based on the parameters then you only

00:09:08,880 --> 00:09:14,040
have one place to maintain and update

00:09:11,220 --> 00:09:16,140
that that job and then everything else

00:09:14,040 --> 00:09:17,250
will just work so that's something to

00:09:16,140 --> 00:09:20,060
think about when you're designing your

00:09:17,250 --> 00:09:22,350
pipeline or your jobs on the whiteboard

00:09:20,060 --> 00:09:25,110
and on also you know when you release

00:09:22,350 --> 00:09:27,060
new products you branch you do things

00:09:25,110 --> 00:09:29,850
like that you want to have to have full

00:09:27,060 --> 00:09:31,470
copies of your your build pipeline for

00:09:29,850 --> 00:09:33,300
every single branch that you have you

00:09:31,470 --> 00:09:34,920
want to be able to reuse that so that

00:09:33,300 --> 00:09:36,810
you can pass things through it and

00:09:34,920 --> 00:09:40,290
that's where you know passing the branch

00:09:36,810 --> 00:09:42,180
passing your stream or however you know

00:09:40,290 --> 00:09:44,160
whatever source control you're using is

00:09:42,180 --> 00:09:47,310
really really key with primerica zation

00:09:44,160 --> 00:09:49,920
and also you can do a lot of stuff in

00:09:47,310 --> 00:09:52,260
parallel to with this and we use the

00:09:49,920 --> 00:09:54,240
multi job plugin to do that and that

00:09:52,260 --> 00:09:56,370
allows you to kind of not have so many

00:09:54,240 --> 00:09:58,740
duplicate jobs because everything you

00:09:56,370 --> 00:10:01,080
know you could kick off ten jobs that

00:09:58,740 --> 00:10:02,250
all go through the same downstream job

00:10:01,080 --> 00:10:04,230
and they're just passing different

00:10:02,250 --> 00:10:05,850
parameters and you can use the multi job

00:10:04,230 --> 00:10:09,060
plugin to do this so it's it's pretty

00:10:05,850 --> 00:10:10,560
cool how do you get a build with

00:10:09,060 --> 00:10:12,300
parameters so when you're in the jenkins

00:10:10,560 --> 00:10:13,860
config and you say you want to add

00:10:12,300 --> 00:10:15,480
parameters to that build there's a

00:10:13,860 --> 00:10:17,070
little check box it's kind of hidden if

00:10:15,480 --> 00:10:19,290
you've haven't been in the configure of

00:10:17,070 --> 00:10:20,760
a Jenkins it's near the top you have to

00:10:19,290 --> 00:10:22,740
check the box and then you get this

00:10:20,760 --> 00:10:24,300
ability to add these different

00:10:22,740 --> 00:10:26,760
parameters you can add all sorts of

00:10:24,300 --> 00:10:29,010
parameters from you know bullion's to

00:10:26,760 --> 00:10:31,830
list our favorite is actually the

00:10:29,010 --> 00:10:33,540
extended choice parameter and this the

00:10:31,830 --> 00:10:36,060
reason why we like this is the fact that

00:10:33,540 --> 00:10:39,300
we have a bunch of jobs that all have

00:10:36,060 --> 00:10:40,980
the same parameter options so you might

00:10:39,300 --> 00:10:42,330
have one job that has parameter a B and

00:10:40,980 --> 00:10:44,040
C and they have another job that has the

00:10:42,330 --> 00:10:45,930
same parameters another one you don't

00:10:44,040 --> 00:10:48,030
want to have to hard code them in each

00:10:45,930 --> 00:10:50,670
one of those jobs so the extended choice

00:10:48,030 --> 00:10:53,190
parameter allows you to actually pull

00:10:50,670 --> 00:10:55,290
parameters from a properties file and so

00:10:53,190 --> 00:10:57,480
we have this job params properties file

00:10:55,290 --> 00:11:00,090
that has all our different parameter

00:10:57,480 --> 00:11:02,880
options in it and with that that file

00:11:00,090 --> 00:11:04,680
can also be in source so essentially you

00:11:02,880 --> 00:11:07,260
want to make a parameter change you make

00:11:04,680 --> 00:11:09,390
a change in source it builds and Jenkins

00:11:07,260 --> 00:11:11,220
then all your jobs get

00:11:09,390 --> 00:11:12,450
updated with the new parameter so it's

00:11:11,220 --> 00:11:14,310
pretty cool and pretty powerful

00:11:12,450 --> 00:11:18,210
especially if you find yourself copying

00:11:14,310 --> 00:11:21,060
the parameters from job to job so I

00:11:18,210 --> 00:11:22,920
highly recommend this and in my other

00:11:21,060 --> 00:11:24,930
session tomorrow I'll go in more depth

00:11:22,920 --> 00:11:27,540
and kind of how to implement pulling

00:11:24,930 --> 00:11:30,840
parameters from source and kind of doing

00:11:27,540 --> 00:11:33,510
this this type of stuff so naming

00:11:30,840 --> 00:11:35,130
conventions I talked about this I you

00:11:33,510 --> 00:11:38,820
want to think about your job names the

00:11:35,130 --> 00:11:40,110
parameter names the build names because

00:11:38,820 --> 00:11:41,640
when you're looking at this stuff or

00:11:40,110 --> 00:11:43,020
managers come in or your release manager

00:11:41,640 --> 00:11:45,330
comes in you want it to be easy for them

00:11:43,020 --> 00:11:47,820
to understand what's running and what

00:11:45,330 --> 00:11:50,100
just built and you know what's testing

00:11:47,820 --> 00:11:52,140
right now and being able to get there

00:11:50,100 --> 00:11:54,720
quickly have you have thousands of jobs

00:11:52,140 --> 00:11:56,700
in your Jenkins environment you really

00:11:54,720 --> 00:11:58,620
want to organize things correct and you

00:11:56,700 --> 00:12:00,270
know you can sort by the names of things

00:11:58,620 --> 00:12:02,570
and but if you're not adopting a

00:12:00,270 --> 00:12:05,370
standard then that can get really hard

00:12:02,570 --> 00:12:07,170
also in parameters when you when you

00:12:05,370 --> 00:12:09,120
write parameters and your jobs you

00:12:07,170 --> 00:12:11,490
really want to think about the names of

00:12:09,120 --> 00:12:13,320
those parameters what i've found is that

00:12:11,490 --> 00:12:16,440
spaces can actually make your life

00:12:13,320 --> 00:12:18,180
harder in those parameters while you

00:12:16,440 --> 00:12:19,680
know it looks pretty for the end user so

00:12:18,180 --> 00:12:21,720
this is like a self-service or an

00:12:19,680 --> 00:12:23,790
on-demand and user runs it kind of job

00:12:21,720 --> 00:12:26,190
then it's useful to have spaces so they

00:12:23,790 --> 00:12:27,900
can read it and understand it but when

00:12:26,190 --> 00:12:30,990
you're doing like an automatic pipeline

00:12:27,900 --> 00:12:33,150
I spaces don't really port well to

00:12:30,990 --> 00:12:35,850
environment variables and things like

00:12:33,150 --> 00:12:37,350
shell and stuff like that don't really

00:12:35,850 --> 00:12:39,060
like you to have spaces and your

00:12:37,350 --> 00:12:40,590
environment variables so there are ways

00:12:39,060 --> 00:12:43,260
around it you know probably use perl and

00:12:40,590 --> 00:12:45,780
stuff to get at it but i found it was a

00:12:43,260 --> 00:12:47,160
little tough if you use spaces but it

00:12:45,780 --> 00:12:49,770
can be done but it's something to think

00:12:47,160 --> 00:12:53,100
about you know your parameter names your

00:12:49,770 --> 00:12:55,890
build names your job names the jenkins

00:12:53,100 --> 00:12:57,240
workspace so we talked about this every

00:12:55,890 --> 00:12:59,580
build that runs has its own unique

00:12:57,240 --> 00:13:01,920
workspace you can actually customize the

00:12:59,580 --> 00:13:03,930
workspace to force two jobs to run out

00:13:01,920 --> 00:13:06,240
of the same workspace and this can be

00:13:03,930 --> 00:13:08,630
useful in certain scenarios such as

00:13:06,240 --> 00:13:11,370
these two jobs need access to the same

00:13:08,630 --> 00:13:13,020
properties file or this job writes out

00:13:11,370 --> 00:13:15,540
something that then this job needs to

00:13:13,020 --> 00:13:16,980
consume and do something with so there's

00:13:15,540 --> 00:13:19,970
this little checkbox that allows you to

00:13:16,980 --> 00:13:22,129
force them to use a custom workspace

00:13:19,970 --> 00:13:24,949
but by default they all get their own

00:13:22,129 --> 00:13:28,699
unique one especially if you allow it to

00:13:24,949 --> 00:13:30,920
do concurrent builds which out of the

00:13:28,699 --> 00:13:33,170
box a Jenkins job that runs doesn't

00:13:30,920 --> 00:13:35,720
allow another one to run at the same

00:13:33,170 --> 00:13:37,339
time it'll queue behind it but there is

00:13:35,720 --> 00:13:39,170
a check box that you can check to say

00:13:37,339 --> 00:13:41,060
allow these things to run concurrently

00:13:39,170 --> 00:13:42,769
you know you've acknowledged that

00:13:41,060 --> 00:13:44,120
nothing bad is going to happen if you do

00:13:42,769 --> 00:13:46,459
that and you've coded it in that

00:13:44,120 --> 00:13:48,170
scenario but there's a check box that

00:13:46,459 --> 00:13:50,000
allows you to do that and when you do to

00:13:48,170 --> 00:13:52,339
the concurrent builds each one gets a

00:13:50,000 --> 00:13:54,620
unique workspace so that can be useful

00:13:52,339 --> 00:13:55,850
in doing reports and writing emails and

00:13:54,620 --> 00:14:01,189
things like that with the drinking

00:13:55,850 --> 00:14:02,930
straps Jenkins nodes so the nodes of the

00:14:01,189 --> 00:14:05,360
slaves are kind of the workhorses of

00:14:02,930 --> 00:14:08,569
your Jenkins environment we actually

00:14:05,360 --> 00:14:11,060
don't run much on our master Jenkins

00:14:08,569 --> 00:14:14,029
server because we find it could slow

00:14:11,060 --> 00:14:15,740
down the master make the web page itself

00:14:14,029 --> 00:14:17,480
slow and we don't really want to put

00:14:15,740 --> 00:14:20,120
load on the drink and server itself so

00:14:17,480 --> 00:14:22,250
we have probably 70 or 80 slave nodes

00:14:20,120 --> 00:14:25,639
that we use to actually run all of our

00:14:22,250 --> 00:14:27,889
stuff and it's easy to create these you

00:14:25,639 --> 00:14:29,329
can actually you can create them in a

00:14:27,889 --> 00:14:33,050
couple different ways which I'll show

00:14:29,329 --> 00:14:34,519
from you know windows or linux we find

00:14:33,050 --> 00:14:36,529
that Linux note seem to work a lot

00:14:34,519 --> 00:14:38,750
better than the windows ones but some of

00:14:36,529 --> 00:14:41,059
our some of my engineers do have a

00:14:38,750 --> 00:14:43,309
couple windows nodes for specific

00:14:41,059 --> 00:14:45,019
requirements so you can you can add

00:14:43,309 --> 00:14:47,720
nodes of all different types it's pretty

00:14:45,019 --> 00:14:49,339
easy to add them and you know one of the

00:14:47,720 --> 00:14:51,860
best practices I'd say is limit how many

00:14:49,339 --> 00:14:54,649
executives you give your master you know

00:14:51,860 --> 00:14:56,569
whoever you give create access to create

00:14:54,649 --> 00:14:57,860
jobs and your Jenkins they can create

00:14:56,569 --> 00:14:59,600
jobs wherever they want and have them

00:14:57,860 --> 00:15:01,250
run wherever they want and so if you

00:14:59,600 --> 00:15:03,170
allow them to create jobs and they

00:15:01,250 --> 00:15:04,670
happen to run them on a master you know

00:15:03,170 --> 00:15:06,680
you could be wondering why your master

00:15:04,670 --> 00:15:09,230
is really slow or the web page is slow

00:15:06,680 --> 00:15:13,490
to load because you know it's hard to I

00:15:09,230 --> 00:15:14,990
guess you know keep an eye on this type

00:15:13,490 --> 00:15:16,579
of stuff or who's doing what especially

00:15:14,990 --> 00:15:18,110
as your your Jenkins environment rose

00:15:16,579 --> 00:15:20,300
and you have more and more jobs it's

00:15:18,110 --> 00:15:21,920
really hard to you know understand what

00:15:20,300 --> 00:15:24,529
every person that's working on it is

00:15:21,920 --> 00:15:26,449
doing so you know limiting that gives

00:15:24,529 --> 00:15:29,839
you that ability to kind of control a

00:15:26,449 --> 00:15:31,930
little more the Jenkins epi is also

00:15:29,839 --> 00:15:34,779
really fun my

00:15:31,930 --> 00:15:36,399
session tomorrow is on a lot with groovy

00:15:34,779 --> 00:15:37,990
and so you can do a lot with groovy

00:15:36,399 --> 00:15:39,910
especially creating nodes on the fly

00:15:37,990 --> 00:15:43,300
creating them dynamically and adding

00:15:39,910 --> 00:15:45,010
them to your drinkin system I'm creating

00:15:43,300 --> 00:15:47,260
the Jenkins knows it's pretty easy you

00:15:45,010 --> 00:15:50,110
just go in there's a creating new dumb

00:15:47,260 --> 00:15:52,930
node option and you basically give it a

00:15:50,110 --> 00:15:55,870
name I recommend having a good naming

00:15:52,930 --> 00:15:57,550
convention for them I you can say how

00:15:55,870 --> 00:15:59,350
many jobs you want to run on this at

00:15:57,550 --> 00:16:02,140
once now if your machine doesn't have

00:15:59,350 --> 00:16:03,910
much memory or many CPUs I don't

00:16:02,140 --> 00:16:06,910
recommend giving it a hundred executor

00:16:03,910 --> 00:16:07,990
so you'll want to basically think about

00:16:06,910 --> 00:16:10,510
you know this is a process that's

00:16:07,990 --> 00:16:12,580
running on this server or this machine

00:16:10,510 --> 00:16:15,459
you know what are what are really the

00:16:12,580 --> 00:16:18,790
limits to that it's pretty easy to

00:16:15,459 --> 00:16:22,450
connect we use keys SSH keys to connect

00:16:18,790 --> 00:16:23,920
to our Linux slaves the you know you can

00:16:22,450 --> 00:16:25,510
choose these options here on how you

00:16:23,920 --> 00:16:28,720
want to connect to it whether it's

00:16:25,510 --> 00:16:31,990
windows or linux and then also there's

00:16:28,720 --> 00:16:34,630
another key thing about the slave is the

00:16:31,990 --> 00:16:36,279
usage of it so how do you want people

00:16:34,630 --> 00:16:38,890
who are writing jenkins jobs to use a

00:16:36,279 --> 00:16:41,470
slave do you want it to just throw jabs

00:16:38,890 --> 00:16:43,540
at it you know if there's free resources

00:16:41,470 --> 00:16:45,670
or do you want to have this slave be for

00:16:43,540 --> 00:16:47,650
specific jobs only so there's kind of

00:16:45,670 --> 00:16:49,900
two options here we usually go for the

00:16:47,650 --> 00:16:52,720
ladder because you know certain slaves

00:16:49,900 --> 00:16:54,279
are served certain purposes and some of

00:16:52,720 --> 00:16:55,779
them are for builds and need you know

00:16:54,279 --> 00:16:57,580
things like may even installed on them

00:16:55,779 --> 00:17:00,400
and others are for just you know running

00:16:57,580 --> 00:17:02,709
automation to need XY and Z and solve so

00:17:00,400 --> 00:17:09,459
you know we tend to go for the the

00:17:02,709 --> 00:17:11,559
second one so how do you decide which

00:17:09,459 --> 00:17:14,650
jobs go to what nodes so we just said

00:17:11,559 --> 00:17:16,990
you could specify you know have a slave

00:17:14,650 --> 00:17:19,630
node that's only tied to specific jobs

00:17:16,990 --> 00:17:22,150
so in the jenkins config of your job

00:17:19,630 --> 00:17:24,220
there's a little check box another

00:17:22,150 --> 00:17:27,220
checkbox that says restrict where this

00:17:24,220 --> 00:17:30,400
Jenkins job can run essentially it takes

00:17:27,220 --> 00:17:32,020
either a node or a label and what a

00:17:30,400 --> 00:17:33,850
label is is that you can when you're

00:17:32,020 --> 00:17:35,230
creating these Jenkins nodes you can

00:17:33,850 --> 00:17:38,020
kind of group them all together and say

00:17:35,230 --> 00:17:40,179
these are of this type so that you know

00:17:38,020 --> 00:17:42,429
when Jenkins is doing its queuing and

00:17:40,179 --> 00:17:42,870
it's it's spraying of jobs to the nodes

00:17:42,429 --> 00:17:45,960
that

00:17:42,870 --> 00:17:48,510
available exit executors it'll just go

00:17:45,960 --> 00:17:50,640
to that label see which node has free

00:17:48,510 --> 00:17:52,500
executor Xin that label and just pick

00:17:50,640 --> 00:17:54,090
one and send the job to it so

00:17:52,500 --> 00:17:56,250
drunkenness is really good at kind of

00:17:54,090 --> 00:17:57,780
queuing and sending the jobs where they

00:17:56,250 --> 00:18:00,870
need to go as long as you've configured

00:17:57,780 --> 00:18:03,090
the pipeline to do that so in our case

00:18:00,870 --> 00:18:05,010
we know we have a label that's for most

00:18:03,090 --> 00:18:06,780
of our stuff and you know we have I

00:18:05,010 --> 00:18:08,580
think we have like 35 slaves in it right

00:18:06,780 --> 00:18:10,830
now and it kind of Jenkins will just

00:18:08,580 --> 00:18:13,680
automatically spray the jobs to it which

00:18:10,830 --> 00:18:16,500
is really useful and another thing is to

00:18:13,680 --> 00:18:18,630
name your labels appropriate so they're

00:18:16,500 --> 00:18:23,490
easy to understand when you're when

00:18:18,630 --> 00:18:26,010
you're writing jobs plug-ins for job job

00:18:23,490 --> 00:18:28,980
node assignment so essentially when

00:18:26,010 --> 00:18:31,470
you're you know writing this job this

00:18:28,980 --> 00:18:33,990
Jenkins job there's various plugins out

00:18:31,470 --> 00:18:36,900
there that allow you to say run on this

00:18:33,990 --> 00:18:38,730
node or run on this label and so the no

00:18:36,900 --> 00:18:40,650
label parameter plugin actually gives

00:18:38,730 --> 00:18:43,410
you a parameter so we talked about the

00:18:40,650 --> 00:18:45,270
parameters for your job the node label

00:18:43,410 --> 00:18:47,429
one gives you the ability to as a

00:18:45,270 --> 00:18:49,260
parameter when when it's beginning

00:18:47,429 --> 00:18:51,270
executed someone's manually running the

00:18:49,260 --> 00:18:53,610
Jenkins job or the pipeline's triggering

00:18:51,270 --> 00:18:56,370
it you can choose the label or choose

00:18:53,610 --> 00:18:59,220
the node in like a drop-down or pass it

00:18:56,370 --> 00:19:01,440
as a variable you also can use the

00:18:59,220 --> 00:19:03,720
groovy label assignment plugin that's if

00:19:01,440 --> 00:19:05,850
you install that plug-in inside your

00:19:03,720 --> 00:19:07,890
Jenkins job that gives you another check

00:19:05,850 --> 00:19:10,050
box so these plugins when you install

00:19:07,890 --> 00:19:13,620
them usually if they are for your job

00:19:10,050 --> 00:19:15,120
itself will give you check boxes or you

00:19:13,620 --> 00:19:17,190
know you'll see various things in the

00:19:15,120 --> 00:19:19,380
Jenkins config to access and use these

00:19:17,190 --> 00:19:21,240
plugins so this one the groovy one gives

00:19:19,380 --> 00:19:23,580
you you can have like a little snippet

00:19:21,240 --> 00:19:25,890
of Ruby code that'll say like you know

00:19:23,580 --> 00:19:27,750
if parameter equals true run on this

00:19:25,890 --> 00:19:30,030
node if parameter equals false run on

00:19:27,750 --> 00:19:32,160
this node so in case based on the input

00:19:30,030 --> 00:19:33,990
that's coming into the pipeline what

00:19:32,160 --> 00:19:36,420
where you want to send the job and that

00:19:33,990 --> 00:19:38,429
can be really useful as well so this is

00:19:36,420 --> 00:19:40,470
what it looks like so you get a check

00:19:38,429 --> 00:19:42,929
box and then you can say well if we're

00:19:40,470 --> 00:19:45,390
in dev mode and we're regression testing

00:19:42,929 --> 00:19:46,950
send it to my development slaves but if

00:19:45,390 --> 00:19:49,080
we're not then send it to the production

00:19:46,950 --> 00:19:52,790
slave so it can really give you the

00:19:49,080 --> 00:19:55,620
ability to with one set of pipeline jobs

00:19:52,790 --> 00:19:56,490
test it in a cave it may be making

00:19:55,620 --> 00:19:59,190
changes its

00:19:56,490 --> 00:20:01,320
development scenario or it's a real

00:19:59,190 --> 00:20:03,570
production scenario so allows you to

00:20:01,320 --> 00:20:06,960
reuse the same pipeline but kind of

00:20:03,570 --> 00:20:08,580
prioritize it this is the other one that

00:20:06,960 --> 00:20:10,350
I talked about the note label one it

00:20:08,580 --> 00:20:12,240
gives you a parameter that's essentially

00:20:10,350 --> 00:20:14,790
the node and you can kind of customize

00:20:12,240 --> 00:20:16,740
it so that it only allows for certain

00:20:14,790 --> 00:20:18,809
ones to be selected and that can be

00:20:16,740 --> 00:20:21,360
passed in whether it's someone running

00:20:18,809 --> 00:20:24,840
the job manually or if it's the pipeline

00:20:21,360 --> 00:20:27,000
triggering it and this is what the label

00:20:24,840 --> 00:20:28,890
is so there's a node node parameter and

00:20:27,000 --> 00:20:34,380
there's a label parameter and you can

00:20:28,890 --> 00:20:36,210
specify what the label can be so moving

00:20:34,380 --> 00:20:38,280
on to the security of Jenkins so

00:20:36,210 --> 00:20:40,500
essentially you have your Jenkins

00:20:38,280 --> 00:20:42,420
environment and you know you really want

00:20:40,500 --> 00:20:44,780
to think about who has access to it we

00:20:42,420 --> 00:20:46,890
adopted kind of some groups are read

00:20:44,780 --> 00:20:49,020
development and admin because we don't

00:20:46,890 --> 00:20:53,220
want our basic end user to have the

00:20:49,020 --> 00:20:55,530
ability to create jobs delete jobs build

00:20:53,220 --> 00:20:57,720
all our jobs so we have kind of

00:20:55,530 --> 00:21:00,690
separated out in this scenario and then

00:20:57,720 --> 00:21:05,070
at an individual job level you can

00:21:00,690 --> 00:21:07,410
actually you can actually say well this

00:21:05,070 --> 00:21:10,020
person can have build and config access

00:21:07,410 --> 00:21:12,330
to this job so you can kind of at a

00:21:10,020 --> 00:21:14,460
global level set it kind of very high

00:21:12,330 --> 00:21:16,170
level and then at specific jobs you can

00:21:14,460 --> 00:21:19,200
kind of configure it based on the needs

00:21:16,170 --> 00:21:21,090
of that project this is what it looks

00:21:19,200 --> 00:21:23,400
like in the if you use the matrix

00:21:21,090 --> 00:21:25,230
authorization plugin and as you can see

00:21:23,400 --> 00:21:28,559
if you were to list your end users

00:21:25,230 --> 00:21:30,900
individually there this is a huge list

00:21:28,559 --> 00:21:32,610
of checkboxes it just goes forever and

00:21:30,900 --> 00:21:34,890
if you had a hundred people that have

00:21:32,610 --> 00:21:37,020
accessed your drinkin server maintaining

00:21:34,890 --> 00:21:39,660
a list of 100 with all these checkboxes

00:21:37,020 --> 00:21:41,540
gets really hard really fast and so it's

00:21:39,660 --> 00:21:45,240
much easier to go the route of groups

00:21:41,540 --> 00:21:47,580
and then this is the at the project

00:21:45,240 --> 00:21:50,190
specific where you can enable the

00:21:47,580 --> 00:21:52,980
specific Jenkins job and give you know

00:21:50,190 --> 00:21:54,270
one of your engineers full access to it

00:21:52,980 --> 00:21:55,770
because you know he's going to own this

00:21:54,270 --> 00:21:57,870
job and he's going to configure it and

00:21:55,770 --> 00:22:00,030
build it then you can do it at a job

00:21:57,870 --> 00:22:01,920
level but that doesn't give the engineer

00:22:00,030 --> 00:22:04,950
full access to your full Jenkins server

00:22:01,920 --> 00:22:09,270
so it's really useful to operate like

00:22:04,950 --> 00:22:11,220
this source control for your jobs so

00:22:09,270 --> 00:22:12,720
so you know your job you may have some

00:22:11,220 --> 00:22:14,550
shell scripts that you run you may have

00:22:12,720 --> 00:22:16,710
groovy scripts you may have properties

00:22:14,550 --> 00:22:19,740
files parameter files all sorts of stuff

00:22:16,710 --> 00:22:22,530
that's in your Jenkins job and it may be

00:22:19,740 --> 00:22:25,500
reuse from job to job and so what we do

00:22:22,530 --> 00:22:27,810
is we actually have a kind of a source

00:22:25,500 --> 00:22:30,000
control repository for all that stuff

00:22:27,810 --> 00:22:31,860
now that stuff as a whole doesn't you

00:22:30,000 --> 00:22:35,070
know those are just individual scripts

00:22:31,860 --> 00:22:37,470
and what we do is we have that's in

00:22:35,070 --> 00:22:39,690
source control and we have a Jenkins job

00:22:37,470 --> 00:22:41,460
that actually builds that and then what

00:22:39,690 --> 00:22:43,680
that Jenkins job does is it's just a

00:22:41,460 --> 00:22:46,200
dummy build of copying the artifacts

00:22:43,680 --> 00:22:49,020
from source and then it archives them so

00:22:46,200 --> 00:22:51,420
now they're in this Jenkins job archive

00:22:49,020 --> 00:22:54,270
dis artifacts so then other jobs can

00:22:51,420 --> 00:22:56,460
actually come in and copy artifacts

00:22:54,270 --> 00:22:59,250
specific artifacts that they need to run

00:22:56,460 --> 00:23:02,100
from that job so it gives you a kind of

00:22:59,250 --> 00:23:03,870
the ability to have your scripts in your

00:23:02,100 --> 00:23:07,110
though really the workhorses of your

00:23:03,870 --> 00:23:09,360
Jenkins jobs in source but you know pull

00:23:07,110 --> 00:23:11,220
them from source every time and this is

00:23:09,360 --> 00:23:15,210
how you would essentially set up that

00:23:11,220 --> 00:23:17,550
job to build that source repository you

00:23:15,210 --> 00:23:20,700
know we're using RTC in this case which

00:23:17,550 --> 00:23:22,050
is an IBM source control and you

00:23:20,700 --> 00:23:23,970
essentially just build it and then you

00:23:22,050 --> 00:23:26,550
archive you you archive all the files

00:23:23,970 --> 00:23:28,380
and so that gives any other job in your

00:23:26,550 --> 00:23:31,320
Jenkins environment the ability to copy

00:23:28,380 --> 00:23:33,570
artifacts from this job and use them so

00:23:31,320 --> 00:23:35,160
if you make changes in source then all

00:23:33,570 --> 00:23:37,620
the jobs will essentially get them as

00:23:35,160 --> 00:23:39,990
soon as it builds and this is this

00:23:37,620 --> 00:23:42,120
example of the build step that would

00:23:39,990 --> 00:23:45,210
copy artifacts from that job and copy

00:23:42,120 --> 00:23:47,880
the specific artifacts that it needs to

00:23:45,210 --> 00:23:50,220
run or execute like you can see here I'm

00:23:47,880 --> 00:23:52,380
executing some shell script and when you

00:23:50,220 --> 00:23:53,790
do this copy artifacts it actually takes

00:23:52,380 --> 00:23:55,620
those artifacts and puts them in your

00:23:53,790 --> 00:23:57,930
workspace that workspace which is unique

00:23:55,620 --> 00:24:00,990
to that job and then you can you can

00:23:57,930 --> 00:24:02,970
access them as you know a path to the

00:24:00,990 --> 00:24:04,470
workspace kind of like that if you

00:24:02,970 --> 00:24:06,960
flatten directories that checks box

00:24:04,470 --> 00:24:08,940
there it won't take the folder structure

00:24:06,960 --> 00:24:10,770
it'll just throw every file at the root

00:24:08,940 --> 00:24:15,450
of the workspace and you can choose to

00:24:10,770 --> 00:24:17,190
access them as that that way as well so

00:24:15,450 --> 00:24:19,230
pulling job parameter options from

00:24:17,190 --> 00:24:20,880
source so this is what I talked about

00:24:19,230 --> 00:24:21,480
where if you have a bunch of parameters

00:24:20,880 --> 00:24:23,970
that

00:24:21,480 --> 00:24:26,040
want to pull from source with the

00:24:23,970 --> 00:24:28,620
extended choice parameter plug in this

00:24:26,040 --> 00:24:30,299
job pram stop properties if you look at

00:24:28,620 --> 00:24:33,120
the full path there it's actually

00:24:30,299 --> 00:24:35,429
pulling it from that that admin update

00:24:33,120 --> 00:24:37,820
pipeline config job so that properties

00:24:35,429 --> 00:24:40,559
file is actually in source in our

00:24:37,820 --> 00:24:42,270
repository it gets built by the admin

00:24:40,559 --> 00:24:44,850
update pipeline config when there's

00:24:42,270 --> 00:24:47,280
changes and then every job essentially

00:24:44,850 --> 00:24:49,740
if it's pulling at that path can then

00:24:47,280 --> 00:24:52,980
have those new parameters so it's it's

00:24:49,740 --> 00:24:54,540
you know really quick to get them you

00:24:52,980 --> 00:24:57,299
can also pull things like groovy scripts

00:24:54,540 --> 00:24:59,370
directly from source in the you know the

00:24:57,299 --> 00:25:00,929
groovy is a plug-in if you add it

00:24:59,370 --> 00:25:03,660
there's a couple plugins for you can add

00:25:00,929 --> 00:25:05,549
it to your Jenkins environment and you

00:25:03,660 --> 00:25:09,240
can do things like if you copy those

00:25:05,549 --> 00:25:12,600
artifacts from that Jenkins pipeline

00:25:09,240 --> 00:25:14,250
config job you can reference them so you

00:25:12,600 --> 00:25:15,630
can do dollar sign workspace and as long

00:25:14,250 --> 00:25:17,040
as it's been copied down to the

00:25:15,630 --> 00:25:19,080
workspace you can then it'll just

00:25:17,040 --> 00:25:21,270
execute it for you and then in like the

00:25:19,080 --> 00:25:24,090
post build there's a post build groovy

00:25:21,270 --> 00:25:26,700
plugin on which wall that drives it's

00:25:24,090 --> 00:25:29,190
kind of confusing it's it's in your job

00:25:26,700 --> 00:25:31,559
and your job is running on your slave or

00:25:29,190 --> 00:25:33,450
node that you specify but the groovy

00:25:31,559 --> 00:25:36,650
post build plugin when it's actually

00:25:33,450 --> 00:25:40,110
executing its executing on the master so

00:25:36,650 --> 00:25:42,000
essentially to pull those files from

00:25:40,110 --> 00:25:44,429
source you see you have to list the full

00:25:42,000 --> 00:25:46,410
path to that admin update pipeline

00:25:44,429 --> 00:25:48,600
config job to pull those but they're

00:25:46,410 --> 00:25:52,740
pulled from source as well so it's it's

00:25:48,600 --> 00:25:55,080
pretty useful I'm so groovy so I'll go

00:25:52,740 --> 00:25:57,270
into more depth in my session tomorrow

00:25:55,080 --> 00:25:59,790
on groovy but essentially it gives you

00:25:57,270 --> 00:26:01,200
the ability to kind of either write some

00:25:59,790 --> 00:26:03,990
groovy scripts which is kind of like

00:26:01,200 --> 00:26:06,210
Java or it understands Java it's kind of

00:26:03,990 --> 00:26:07,590
like I call it the shorthand version or

00:26:06,210 --> 00:26:09,780
you can have these things it's called

00:26:07,590 --> 00:26:12,390
system groovy scripts and those actually

00:26:09,780 --> 00:26:14,970
run in the JVM space of Jenkins which is

00:26:12,390 --> 00:26:16,290
can be pretty powerful and not can be

00:26:14,970 --> 00:26:18,660
really bad at the same time if you don't

00:26:16,290 --> 00:26:21,090
know what you're doing because a system

00:26:18,660 --> 00:26:22,620
exit in a system groovy script will

00:26:21,090 --> 00:26:24,660
actually take your drinkin semester down

00:26:22,620 --> 00:26:27,000
so I had one engineer to try that out

00:26:24,660 --> 00:26:30,510
and then wondered why did Jenkins go

00:26:27,000 --> 00:26:33,120
down well you exited the JVM so I is

00:26:30,510 --> 00:26:35,059
pretty funny but it can be pretty foul

00:26:33,120 --> 00:26:38,029
powerful because you can access

00:26:35,059 --> 00:26:40,100
the api's of jenkins and you can get

00:26:38,029 --> 00:26:41,570
like you know artifacts you can copy

00:26:40,100 --> 00:26:44,899
artifact so you can do all sorts of

00:26:41,570 --> 00:26:47,840
stuff with system groovy scripts so I

00:26:44,899 --> 00:26:50,720
have some useful groovy snippets such as

00:26:47,840 --> 00:26:52,159
you know you can I'd you know find how

00:26:50,720 --> 00:26:55,999
many jobs are running on different

00:26:52,159 --> 00:26:57,769
slaves and you know get things like is

00:26:55,999 --> 00:27:00,259
the slave online so you can do a lot of

00:26:57,769 --> 00:27:03,590
a lot of stuff with this you can restart

00:27:00,259 --> 00:27:05,629
nodes and you know I will go into this

00:27:03,590 --> 00:27:08,059
and more depth as well in my next

00:27:05,629 --> 00:27:10,340
presentation so you can create reports

00:27:08,059 --> 00:27:11,990
and links to your jobs so using the

00:27:10,340 --> 00:27:13,730
groovy post build and the groovy system

00:27:11,990 --> 00:27:16,700
scripts you can kind of customize your

00:27:13,730 --> 00:27:18,200
build so after the job is done running

00:27:16,700 --> 00:27:20,240
you get like kind of a build page which

00:27:18,200 --> 00:27:22,279
is the output what happened what passed

00:27:20,240 --> 00:27:24,080
would fail what tests ran you can kind

00:27:22,279 --> 00:27:27,049
of customize it and create quick links

00:27:24,080 --> 00:27:28,669
and reports with this stuff so the

00:27:27,049 --> 00:27:30,710
groovy post bill plugin gives you this

00:27:28,669 --> 00:27:33,470
kind of ability to access the test

00:27:30,710 --> 00:27:36,169
results and you know log like little

00:27:33,470 --> 00:27:37,970
HTML links to you know websites and

00:27:36,169 --> 00:27:42,740
things like that so it really gives you

00:27:37,970 --> 00:27:45,889
this this power to customize so this is

00:27:42,740 --> 00:27:48,619
the you can do groovy quick links with

00:27:45,889 --> 00:27:50,539
groovy systems scripts as well as the

00:27:48,619 --> 00:27:52,070
curvy post bill plugin so there's always

00:27:50,539 --> 00:27:54,350
like a couple different ways to do

00:27:52,070 --> 00:27:56,779
whatever you want with Jenkins it's just

00:27:54,350 --> 00:27:59,360
finding the way that's best for you and

00:27:56,779 --> 00:28:00,860
these quick links you can kind of do it

00:27:59,360 --> 00:28:03,529
with a system groovy script or the

00:28:00,860 --> 00:28:05,360
groovy post build plugin either one is

00:28:03,529 --> 00:28:08,090
an option this is how you would kind of

00:28:05,360 --> 00:28:10,309
add that to the job and this would be in

00:28:08,090 --> 00:28:14,690
a groovy a groovy script that you

00:28:10,309 --> 00:28:17,090
execute as part of the build and so you

00:28:14,690 --> 00:28:19,190
know come to my session tomorrow to kind

00:28:17,090 --> 00:28:20,749
of go in more depth than that so various

00:28:19,190 --> 00:28:23,330
plugins so I'm going to go over quickly

00:28:20,749 --> 00:28:27,080
some plugins that are useful to me that

00:28:23,330 --> 00:28:29,929
I have used and found them are you know

00:28:27,080 --> 00:28:32,360
very very good for our pipeline also the

00:28:29,929 --> 00:28:34,399
build time out plugin so if you want to

00:28:32,360 --> 00:28:35,990
abort a job after a certain amount of

00:28:34,399 --> 00:28:38,090
time what that means is that Jenkins

00:28:35,990 --> 00:28:39,710
just stops it from running all right

00:28:38,090 --> 00:28:41,539
this is especially good if you have like

00:28:39,710 --> 00:28:42,950
runaway jobs that for some reason

00:28:41,539 --> 00:28:44,809
there's something wrong with them and

00:28:42,950 --> 00:28:45,900
they never terminate this will ensure

00:28:44,809 --> 00:28:49,290
that they get properly

00:28:45,900 --> 00:28:51,510
boarded after a given period of time the

00:28:49,290 --> 00:28:54,090
environment injector plugin essentially

00:28:51,510 --> 00:28:56,400
this allows you to inject environment

00:28:54,090 --> 00:28:59,040
variables that maybe you set up or set

00:28:56,400 --> 00:29:00,720
as part of the build so you're running

00:28:59,040 --> 00:29:02,850
along and your build and you set some

00:29:00,720 --> 00:29:05,130
variables but now you want the next

00:29:02,850 --> 00:29:07,440
steps in the build to have those

00:29:05,130 --> 00:29:11,660
variables this environment inject a

00:29:07,440 --> 00:29:11,660
variable step will get will get you that

00:29:12,380 --> 00:29:17,240
the build names that are plugin this is

00:29:15,090 --> 00:29:19,500
our my managers favorite because

00:29:17,240 --> 00:29:21,510
essentially takes your building history

00:29:19,500 --> 00:29:23,820
and drinkin's for a given job so by

00:29:21,510 --> 00:29:26,160
default the Jenkins build history just

00:29:23,820 --> 00:29:28,980
shows the build number so the pound

00:29:26,160 --> 00:29:31,680
build number this plug-in allows you to

00:29:28,980 --> 00:29:33,990
customize what that shows based on your

00:29:31,680 --> 00:29:35,520
parameters or environment variables so

00:29:33,990 --> 00:29:36,990
this is really cool especially if you

00:29:35,520 --> 00:29:38,250
have different builds or different

00:29:36,990 --> 00:29:40,980
configurations or different parameters

00:29:38,250 --> 00:29:43,470
going through a job it gives you a quick

00:29:40,980 --> 00:29:46,230
one stop you actually understand what

00:29:43,470 --> 00:29:49,770
just ran without having to click or dive

00:29:46,230 --> 00:29:52,170
in the multi job plugin allows for you

00:29:49,770 --> 00:29:54,150
to run a lot of stuff in parallel all at

00:29:52,170 --> 00:29:56,130
once I kind of gives you this ability to

00:29:54,150 --> 00:29:58,050
have different phases and you're in your

00:29:56,130 --> 00:29:59,850
Jenkins job so essentially you could

00:29:58,050 --> 00:30:02,010
have phase one runs ten things in

00:29:59,850 --> 00:30:04,470
parallel and then phase two doesn't

00:30:02,010 --> 00:30:06,660
start until phase one is done and then

00:30:04,470 --> 00:30:08,220
phase two would say run five things in

00:30:06,660 --> 00:30:10,950
parallel and then you can phase three

00:30:08,220 --> 00:30:13,860
and go on and on but it really it gives

00:30:10,950 --> 00:30:15,900
you a nice I guess look to what's

00:30:13,860 --> 00:30:18,210
running in parallel so this is a plugin

00:30:15,900 --> 00:30:19,650
you have to install are you it actually

00:30:18,210 --> 00:30:21,390
when you're creating your Jenkins job

00:30:19,650 --> 00:30:23,850
it's a different job type that you have

00:30:21,390 --> 00:30:26,910
to select to get this ability so it's a

00:30:23,850 --> 00:30:29,760
multi job project and but it's really

00:30:26,910 --> 00:30:31,860
it's been really useful for us the

00:30:29,760 --> 00:30:33,510
nested view plugin this helps organize

00:30:31,860 --> 00:30:37,170
the views in your drinkin system

00:30:33,510 --> 00:30:39,060
essentially they you know if out of the

00:30:37,170 --> 00:30:41,430
box which they all just kind of show up

00:30:39,060 --> 00:30:43,290
in the main page and if you have lots of

00:30:41,430 --> 00:30:45,060
teams working in there and you have tons

00:30:43,290 --> 00:30:47,220
of jobs this gives you the ability to

00:30:45,060 --> 00:30:49,320
kind of organize them for each team or

00:30:47,220 --> 00:30:50,700
component so that the other teams don't

00:30:49,320 --> 00:30:52,800
see the other people's jobs that they

00:30:50,700 --> 00:30:53,880
don't really care about so the next of

00:30:52,800 --> 00:30:55,830
you plugin kind of gives you this

00:30:53,880 --> 00:30:57,299
ability to have these nested views and

00:30:55,830 --> 00:30:59,999
once you click into them

00:30:57,299 --> 00:31:02,279
it's just your view and you can have

00:30:59,999 --> 00:31:04,049
many tabs and folders for that so it's

00:31:02,279 --> 00:31:07,850
really useful we use this a lot since we

00:31:04,049 --> 00:31:10,889
have many products in our Jenkins system

00:31:07,850 --> 00:31:12,899
the email extension plug in is I love

00:31:10,889 --> 00:31:15,450
this plug and it's great it allows you

00:31:12,899 --> 00:31:17,100
to send email reports after your jobs

00:31:15,450 --> 00:31:19,590
are done it allows you to customize

00:31:17,100 --> 00:31:22,470
those email reports based on variables

00:31:19,590 --> 00:31:24,960
parameters you know you can set the HTML

00:31:22,470 --> 00:31:27,509
for however you want it to look and you

00:31:24,960 --> 00:31:29,519
can also you can have different triggers

00:31:27,509 --> 00:31:31,980
on who it goes to you can use

00:31:29,519 --> 00:31:33,629
environment variables it gives you you

00:31:31,980 --> 00:31:36,269
know this is an example of what it looks

00:31:33,629 --> 00:31:38,970
like in the post build action you can

00:31:36,269 --> 00:31:41,669
set up your email you set the subject

00:31:38,970 --> 00:31:43,799
you can also use the Advanced section

00:31:41,669 --> 00:31:47,129
and throw a groovy script in there and

00:31:43,799 --> 00:31:49,289
so you can say run this code to format

00:31:47,129 --> 00:31:50,820
this email and create it and you know we

00:31:49,289 --> 00:31:53,249
do something like we add in all the

00:31:50,820 --> 00:31:55,289
tests that ran as part of that build and

00:31:53,249 --> 00:31:56,639
then we format the subject to be

00:31:55,289 --> 00:31:58,379
something like because you know

00:31:56,639 --> 00:32:01,200
everyone's using mobile these days and

00:31:58,379 --> 00:32:03,119
you want a very concise subject so based

00:32:01,200 --> 00:32:05,039
on if the test all passed or failed you

00:32:03,119 --> 00:32:06,359
can say failed and the build number and

00:32:05,039 --> 00:32:08,190
then the environment and then it's like

00:32:06,359 --> 00:32:09,869
three lines people understand exactly

00:32:08,190 --> 00:32:12,840
what happened or if they need to debug

00:32:09,869 --> 00:32:16,350
so this is pretty it's pretty powerful

00:32:12,840 --> 00:32:18,539
with the Advanced section so these are

00:32:16,350 --> 00:32:20,789
just the useful plugins that kind of

00:32:18,539 --> 00:32:23,549
talked a little bit about or that we've

00:32:20,789 --> 00:32:26,850
used that you know help us all right

00:32:23,549 --> 00:32:29,159
with our CDC I pipeline there's a couple

00:32:26,850 --> 00:32:31,830
of them we went over but these are all

00:32:29,159 --> 00:32:33,480
really good plugins that if you haven't

00:32:31,830 --> 00:32:37,320
tried them i would recommend looking

00:32:33,480 --> 00:32:39,419
them up and trying them out also if

00:32:37,320 --> 00:32:41,609
you're stuck or you need help I found

00:32:39,419 --> 00:32:43,799
that Google is your best friend Stack

00:32:41,609 --> 00:32:45,419
Overflow has lots of stuff and half the

00:32:43,799 --> 00:32:47,730
time I've googled something and someone

00:32:45,419 --> 00:32:50,100
else has tried to do it as well so it's

00:32:47,730 --> 00:32:51,480
really useful to go out there the

00:32:50,100 --> 00:32:53,759
Jenkins book if you're just getting

00:32:51,480 --> 00:32:55,859
started by o'reilly is really good too

00:32:53,759 --> 00:32:58,289
to read that you know there's tons of

00:32:55,859 --> 00:32:59,580
four arms and communities and I think

00:32:58,289 --> 00:33:01,350
you know most of the questions people

00:32:59,580 --> 00:33:03,480
have had them so and there's tons of

00:33:01,350 --> 00:33:04,859
plugins out there I've reported a lot of

00:33:03,480 --> 00:33:07,409
bugs they're pretty good about them

00:33:04,859 --> 00:33:07,890
about fixing them and in looking at them

00:33:07,409 --> 00:33:10,340
so

00:33:07,890 --> 00:33:13,110
you know be active in the community

00:33:10,340 --> 00:33:15,350
please share your feedback thanks

00:33:13,110 --> 00:33:15,350
everyone

00:33:25,630 --> 00:33:27,690

YouTube URL: https://www.youtube.com/watch?v=ErKqOVjYu1s


