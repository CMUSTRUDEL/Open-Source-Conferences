Title: JUC U.S. East 2015 - Using CloudBees Jenkins Enterprise to Effectively Manage the Jenkins Ecosystem
Publication date: 2020-01-23
Playlist: JUC U.S East 2015
Description: 
	By: Kostas Gaitanos, FINRA

At FINRA, our CloudBees Jenkins Enterprise-based ecosystem supports over 100 applications, with hundreds of folders, thousands of jobs and corresponding build pipeline views. The need to effectively manage this ecosystem became obvious rather quickly. This talk is about some of the issues we've encountered and how by implementing a list of plugins, i.e. Folders, Role-Based Access Control, Folder Templates, Jenkins Build Pipeline and Job DSL - among others - we were able to reduce the overall effort of creating and managing the Jenkins-based ecosystem by 70-80%.
Captions: 
	00:00:15,180 --> 00:00:20,070
thank you for coming

00:00:17,610 --> 00:00:23,310
titanos with me today Sarah banks and

00:00:20,070 --> 00:00:25,860
resume latum I will walked very heavily

00:00:23,310 --> 00:00:28,590
on this over the past few years along

00:00:25,860 --> 00:00:30,060
along with other folks in our team we

00:00:28,590 --> 00:00:33,300
just want to share some experiences with

00:00:30,060 --> 00:00:34,710
you by using jagex enterprise across the

00:00:33,300 --> 00:00:37,770
enterprise to see how we can effectively

00:00:34,710 --> 00:00:39,120
manage manage this environment we work

00:00:37,770 --> 00:00:41,610
for thin dress so that's a few words

00:00:39,120 --> 00:00:43,650
about our company FINRA is the financial

00:00:41,610 --> 00:00:45,720
industry regulatory authority we're the

00:00:43,650 --> 00:00:47,879
largest independent regulator of all

00:00:45,720 --> 00:00:49,800
securities firms that doing business in

00:00:47,879 --> 00:00:52,079
the United States our mission is to

00:00:49,800 --> 00:00:55,200
protect investors and provide for market

00:00:52,079 --> 00:00:57,150
integrity to that end we have built over

00:00:55,200 --> 00:00:59,790
the years technology powerful enough so

00:00:57,150 --> 00:01:03,420
it allows us to mine information across

00:00:59,790 --> 00:01:06,540
the different stock markets and so can

00:01:03,420 --> 00:01:08,820
detect potential fraud via patterns and

00:01:06,540 --> 00:01:12,950
pattern recognition stuff like that so

00:01:08,820 --> 00:01:15,509
lately it's right now we are able to

00:01:12,950 --> 00:01:18,180
oversee about 50 billion Megan

00:01:15,509 --> 00:01:19,860
transactions on a daily basis so if you

00:01:18,180 --> 00:01:22,470
want more information about us visit us

00:01:19,860 --> 00:01:26,159
at finna dorg enough of this next to

00:01:22,470 --> 00:01:28,500
jenkins so when we submitted our

00:01:26,159 --> 00:01:30,960
proposal for this discussion we put

00:01:28,500 --> 00:01:33,540
under large implementations it primarily

00:01:30,960 --> 00:01:35,940
because we use a lot of the plugins that

00:01:33,540 --> 00:01:37,770
fall under this category I just going to

00:01:35,940 --> 00:01:40,619
share with you some of our metrics to do

00:01:37,770 --> 00:01:44,159
together just though how what kind of

00:01:40,619 --> 00:01:47,369
activity we do for for using Jenkees

00:01:44,159 --> 00:01:50,659
enterprise so we supported by 110 apps

00:01:47,369 --> 00:01:53,010
which translates to about 600 so folders

00:01:50,659 --> 00:01:55,110
40 hundred jobs these are the active

00:01:53,010 --> 00:01:57,210
jobs over the last two months I wanted

00:01:55,110 --> 00:01:59,159
to be kind of conservative when we came

00:01:57,210 --> 00:02:01,619
up with these numbers if you actually

00:01:59,159 --> 00:02:04,740
look at over a four-month period that

00:02:01,619 --> 00:02:07,290
the numbers go to 2,500 it depends right

00:02:04,740 --> 00:02:09,780
so all of them are active but not some

00:02:07,290 --> 00:02:13,620
of them are more active than others and

00:02:09,780 --> 00:02:15,870
then we use Jenkins to perform about a

00:02:13,620 --> 00:02:17,540
hundred thousand promotable builds every

00:02:15,870 --> 00:02:19,590
year so that number does not include

00:02:17,540 --> 00:02:21,390
continuously aggression health checks

00:02:19,590 --> 00:02:23,459
and all the other stuff plus we drive a

00:02:21,390 --> 00:02:25,680
lot of our deployments via Jenkins

00:02:23,459 --> 00:02:29,840
that's another 75,000 across all

00:02:25,680 --> 00:02:32,870
environments thus far now to top

00:02:29,840 --> 00:02:36,050
discussion today one is how do we

00:02:32,870 --> 00:02:38,030
enabled our enabled the deployments to

00:02:36,050 --> 00:02:41,180
take place we had the bill pipeline

00:02:38,030 --> 00:02:45,739
plugin to that and we use the templates

00:02:41,180 --> 00:02:47,900
the Arbat plug in the folders the idea

00:02:45,739 --> 00:02:50,209
here is that we have given provided

00:02:47,900 --> 00:02:52,670
developers the ability to do this type

00:02:50,209 --> 00:02:54,530
of work like to build and deploy through

00:02:52,670 --> 00:02:57,530
the bill pipeline for quite a while now

00:02:54,530 --> 00:02:59,629
we included you see lately because of

00:02:57,530 --> 00:03:01,519
policy changed era company it was a

00:02:59,629 --> 00:03:04,160
technical problem was a policy issue and

00:03:01,519 --> 00:03:06,230
then now we said it seems we can do that

00:03:04,160 --> 00:03:08,690
and we have our body in place so why can

00:03:06,230 --> 00:03:10,250
we not do the same to enable people who

00:03:08,690 --> 00:03:12,410
do production deployments for a living

00:03:10,250 --> 00:03:15,709
to use the same pipeline instead of

00:03:12,410 --> 00:03:17,900
learning different deployment tools no

00:03:15,709 --> 00:03:19,910
we used to have bladelogic as a

00:03:17,900 --> 00:03:21,709
deployment tool a few years back we move

00:03:19,910 --> 00:03:23,030
to excel deploy now who knows we're

00:03:21,709 --> 00:03:24,560
going to be a couple of years from now

00:03:23,030 --> 00:03:27,620
so instead of people spending time

00:03:24,560 --> 00:03:29,810
learning every tool that comes along say

00:03:27,620 --> 00:03:32,690
it's better for them to be able to focus

00:03:29,810 --> 00:03:34,760
on their job and we actually obfuscate

00:03:32,690 --> 00:03:36,920
that I provide email that's what just

00:03:34,760 --> 00:03:39,230
like the pipeline the other piece I want

00:03:36,920 --> 00:03:42,760
to talk about is how we were able to uh

00:03:39,230 --> 00:03:47,170
by using the judge Angus jab double jab

00:03:42,760 --> 00:03:51,290
dsl plugin and templates to treat the

00:03:47,170 --> 00:03:55,040
end-to-end Jenkees ecosystem like the

00:03:51,290 --> 00:03:56,269
build and deploy as a source code say do

00:03:55,040 --> 00:03:59,090
you have seen I'm not sure where you can

00:03:56,269 --> 00:04:01,069
see that so this is just a pipeline a

00:03:59,090 --> 00:04:03,769
snapshot of one of the applications that

00:04:01,069 --> 00:04:06,440
we use the first one is the one that we

00:04:03,769 --> 00:04:09,079
actually show you that it actually made

00:04:06,440 --> 00:04:10,730
it to production the idea is I just

00:04:09,079 --> 00:04:13,609
going to show you this a bit of a piece

00:04:10,730 --> 00:04:16,639
here this is here promote this is

00:04:13,609 --> 00:04:19,489
because of our implementation in our

00:04:16,639 --> 00:04:22,370
implementation of XL deploy we have one

00:04:19,489 --> 00:04:24,530
instance the handles all deployments bad

00:04:22,370 --> 00:04:26,090
production and another one handles just

00:04:24,530 --> 00:04:30,289
production good or bad that's our

00:04:26,090 --> 00:04:32,389
implementation so once you deploy

00:04:30,289 --> 00:04:34,940
something to you see they have had a

00:04:32,389 --> 00:04:36,919
mechanism to make these artifacts

00:04:34,940 --> 00:04:39,020
available to your production instance of

00:04:36,919 --> 00:04:41,780
XL deploy therefore you have a promote

00:04:39,020 --> 00:04:43,380
job and that's what this card does now

00:04:41,780 --> 00:04:46,530
the beauty thing the beautiful

00:04:43,380 --> 00:04:48,090
of course is that people don't have to

00:04:46,530 --> 00:04:51,720
interface with the tools they just click

00:04:48,090 --> 00:04:54,570
the cards and and that's that the job

00:04:51,720 --> 00:04:57,780
takes the job kicks off in there in the

00:04:54,570 --> 00:05:00,030
background right now so how do we do

00:04:57,780 --> 00:05:01,680
this in terms of a templates how do we

00:05:00,030 --> 00:05:03,720
template eyes that and for more details

00:05:01,680 --> 00:05:05,280
around the source code rice can give you

00:05:03,720 --> 00:05:07,320
a lot of details you wrote a lot of code

00:05:05,280 --> 00:05:10,350
out of this but they the highlight is

00:05:07,320 --> 00:05:13,230
for every job that you see you have a

00:05:10,350 --> 00:05:15,510
job template right so for that for the

00:05:13,230 --> 00:05:18,420
simple ones like the dev deployments for

00:05:15,510 --> 00:05:20,220
instance that's a job template then you

00:05:18,420 --> 00:05:25,470
have a separate job template that he has

00:05:20,220 --> 00:05:28,800
a their original one plus a child plus a

00:05:25,470 --> 00:05:31,850
child and that's because we wanted to

00:05:28,800 --> 00:05:35,370
include the QC promote job to the QC

00:05:31,850 --> 00:05:37,680
deploy and then you have a separate job

00:05:35,370 --> 00:05:40,410
tablet for their production deployment

00:05:37,680 --> 00:05:43,010
jobs so when you run your folder

00:05:40,410 --> 00:05:45,840
template now which is the encompassing

00:05:43,010 --> 00:05:49,230
compasses all of those it executes and

00:05:45,840 --> 00:05:51,810
creates all these jobs plus their

00:05:49,230 --> 00:05:54,960
production folder plus the jobs I have

00:05:51,810 --> 00:06:00,300
to do with the promoter production and

00:05:54,960 --> 00:06:02,040
the production deployment production so

00:06:00,300 --> 00:06:03,930
this one just got 3 i'm not gonna go

00:06:02,040 --> 00:06:06,060
line by line but if you look at the

00:06:03,930 --> 00:06:08,580
template plugin there is a section

00:06:06,060 --> 00:06:10,170
that's called transformers so this is

00:06:08,580 --> 00:06:11,790
the arbor code that goes right in the

00:06:10,170 --> 00:06:13,770
transformers this this is the most

00:06:11,790 --> 00:06:17,040
exciting piece out of that the rest of

00:06:13,770 --> 00:06:20,400
the stuff is simpler but that's the so

00:06:17,040 --> 00:06:22,410
by putting it then the full GFE mented

00:06:20,400 --> 00:06:24,690
and create the story and they are bad

00:06:22,410 --> 00:06:30,860
Rawls i implement that associated to

00:06:24,690 --> 00:06:33,390
that folder on to their next piece

00:06:30,860 --> 00:06:36,180
taking all of Jenkins build deploy

00:06:33,390 --> 00:06:39,810
infrastructure as a source code so here

00:06:36,180 --> 00:06:41,430
the idea is it Jenkins is more than just

00:06:39,810 --> 00:06:43,530
a job right so you have to create the

00:06:41,430 --> 00:06:46,230
folders the jobs have used the pipelines

00:06:43,530 --> 00:06:48,390
all of it now if you have only one

00:06:46,230 --> 00:06:50,370
folder one job this is not such a big

00:06:48,390 --> 00:06:51,960
deal in our case we have quite a few

00:06:50,370 --> 00:06:55,529
applications I have multiple components

00:06:51,960 --> 00:06:57,869
many jobs so in order to

00:06:55,529 --> 00:07:00,389
and we have a lot of plugins and we

00:06:57,869 --> 00:07:03,239
hooked a lot of tools so every change

00:07:00,389 --> 00:07:06,559
that you make it's painful it takes a

00:07:03,239 --> 00:07:09,569
long time so in one of these efforts

00:07:06,559 --> 00:07:10,859
Sarah banks who spend a lot of time on

00:07:09,569 --> 00:07:11,789
this front Ness is right there so you

00:07:10,859 --> 00:07:14,789
can feel free to ask real questions

00:07:11,789 --> 00:07:16,829
afterwards she wanted to avoid going

00:07:14,789 --> 00:07:19,469
through this pain so when are the paths

00:07:16,829 --> 00:07:22,549
of creating let's design so we can have

00:07:19,469 --> 00:07:25,379
one framework that handles all

00:07:22,549 --> 00:07:29,099
components all jobs within that app

00:07:25,379 --> 00:07:32,159
right and then you have in adjacent file

00:07:29,099 --> 00:07:34,799
all the parameters that you need to in

00:07:32,159 --> 00:07:37,799
to instantly that framework for that

00:07:34,799 --> 00:07:40,319
particular application so folders

00:07:37,799 --> 00:07:41,729
environments parameters that both the

00:07:40,319 --> 00:07:43,879
plugins that you use for that particular

00:07:41,729 --> 00:07:46,499
application goes into that gesture file

00:07:43,879 --> 00:07:48,269
separate note we are not very good at

00:07:46,499 --> 00:07:50,879
creating this at a hundred percent a

00:07:48,269 --> 00:07:52,799
fully automated so we we are able to

00:07:50,879 --> 00:07:54,899
mine a lot of that information about

00:07:52,799 --> 00:07:56,969
from the existing infrastructure that we

00:07:54,899 --> 00:07:58,979
have but then a human has to go in and

00:07:56,969 --> 00:08:00,449
vet out that information the context of

00:07:58,979 --> 00:08:02,369
the JSON file to make sure that's right

00:08:00,449 --> 00:08:05,279
if something missing that you put it in

00:08:02,369 --> 00:08:06,629
manually ray but that's in one one-time

00:08:05,279 --> 00:08:10,619
deal you don't have to redo that again

00:08:06,629 --> 00:08:15,689
for that app so and then the last piece

00:08:10,619 --> 00:08:17,249
is dsl obviously has a lot of address a

00:08:15,689 --> 00:08:22,079
lot of plugins has a lot of places but

00:08:17,249 --> 00:08:23,969
if you don't assign that you days in

00:08:22,079 --> 00:08:25,109
there then you have to configure it

00:08:23,969 --> 00:08:28,409
yourself right so you have to right

00:08:25,109 --> 00:08:30,419
there on your own so if you were to look

00:08:28,409 --> 00:08:33,089
at this pictorially then you have your

00:08:30,419 --> 00:08:35,339
job dsl methods to get inputted in you

00:08:33,089 --> 00:08:37,680
have your properties on a JSON file that

00:08:35,339 --> 00:08:40,740
goes into the job dsl framework which in

00:08:37,680 --> 00:08:42,839
a sense becomes the seed job so when you

00:08:40,740 --> 00:08:45,389
run it and gets executed it reads

00:08:42,839 --> 00:08:49,980
additional parameters the dsl methods

00:08:45,389 --> 00:08:54,149
and creates at the end that the folders

00:08:49,980 --> 00:08:58,290
the jobs and the pipelines associated

00:08:54,149 --> 00:08:59,759
with that now we in the reason why we're

00:08:58,290 --> 00:09:01,529
here to want to share some of the matrix

00:08:59,759 --> 00:09:04,139
because that's cool talking about all

00:09:01,529 --> 00:09:05,809
this so what at the end of the day these

00:09:04,139 --> 00:09:07,279
are some of the methods that we captured

00:09:05,809 --> 00:09:10,009
over

00:09:07,279 --> 00:09:11,779
perhaps not to too many I think maybe in

00:09:10,009 --> 00:09:14,029
the case of the templates we have more

00:09:11,779 --> 00:09:17,449
than about a dozen in the case of the

00:09:14,029 --> 00:09:21,379
dsl plugins to two or three apps large

00:09:17,449 --> 00:09:24,559
ones alerts for our standards so the

00:09:21,379 --> 00:09:26,059
tablet plugins I think it took us sorry

00:09:24,559 --> 00:09:28,129
there's always an upfront cost right

00:09:26,059 --> 00:09:29,839
nothing comes for free she had spent

00:09:28,129 --> 00:09:32,209
some time upfront if you haven't done

00:09:29,839 --> 00:09:34,670
the work yet to understand it and try to

00:09:32,209 --> 00:09:37,430
design it and implement it for the first

00:09:34,670 --> 00:09:39,740
time so the templates it's easy to say

00:09:37,430 --> 00:09:42,499
that we spend a week minimum rasband at

00:09:39,740 --> 00:09:45,529
least a week on this but once this was

00:09:42,499 --> 00:09:49,309
done for the particular app then to

00:09:45,529 --> 00:09:51,230
rhinitis 55 minutes so to make a change

00:09:49,309 --> 00:09:54,559
it doesn't take more than that in our

00:09:51,230 --> 00:09:58,509
case for instance we wanted to go say

00:09:54,559 --> 00:10:03,050
from SMS roble logic to excel deploy

00:09:58,509 --> 00:10:05,059
that for us became a large project it

00:10:03,050 --> 00:10:07,730
was a few months worth of a project with

00:10:05,059 --> 00:10:10,819
this in place given a nap it would have

00:10:07,730 --> 00:10:14,029
been a few minutes literally right if

00:10:10,819 --> 00:10:16,220
you want to modify a plug-in it's just a

00:10:14,029 --> 00:10:18,379
straight line in a file you don't have

00:10:16,220 --> 00:10:20,300
to go to multiple projects anymore so

00:10:18,379 --> 00:10:24,500
they gains a significant air right and

00:10:20,300 --> 00:10:28,160
the when it comes down to a DSL to the

00:10:24,500 --> 00:10:32,059
second area with a DSL plugin in that

00:10:28,160 --> 00:10:34,279
case we the applications that i talked

00:10:32,059 --> 00:10:37,490
about its over training they have over

00:10:34,279 --> 00:10:40,490
20 jobs multiple components what we have

00:10:37,490 --> 00:10:42,709
seen is that it takes from beginning to

00:10:40,490 --> 00:10:45,649
end it takes about 20 minutes to create

00:10:42,709 --> 00:10:47,660
everything right so if you had a human

00:10:45,649 --> 00:10:49,939
because we try that as well prior to

00:10:47,660 --> 00:10:52,339
that to do that it would take about four

00:10:49,939 --> 00:10:56,660
to five hours and that would be time

00:10:52,339 --> 00:10:59,389
after time right so i think we are

00:10:56,660 --> 00:11:02,509
actually moving forward to implementing

00:10:59,389 --> 00:11:04,459
these two other applications we are

00:11:02,509 --> 00:11:07,160
looking also at the workflow plug in to

00:11:04,459 --> 00:11:08,809
see how this is going to help us out but

00:11:07,160 --> 00:11:10,160
this is clearly something that we felt

00:11:08,809 --> 00:11:12,319
the world to share with the rest of you

00:11:10,160 --> 00:11:15,400
because we saw some to agang gains by

00:11:12,319 --> 00:11:17,460
doing so thank you

00:11:15,400 --> 00:11:17,460
you

00:11:24,270 --> 00:11:26,330

YouTube URL: https://www.youtube.com/watch?v=mTgaf36a6Wg


