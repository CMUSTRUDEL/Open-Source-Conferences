Title: Leveraging Open Source for Realization of Network Service and Slice Orchestration
Publication date: 2020-10-28
Playlist: Open Networking & Edge Summit 2020
Description: 
	Leveraging Open Source for Realization of Network Service and Slice Orchestration in the Indigenous End-to-end 5G Test Bed - Swaminathan Seetharaman, Wipro Limited
Captions: 
	00:00:01,439 --> 00:00:04,799
hello everyone good morning good

00:00:03,520 --> 00:00:07,520
afternoon good evening

00:00:04,799 --> 00:00:09,440
depending on the time zone where you are

00:00:07,520 --> 00:00:12,639
attending the session from

00:00:09,440 --> 00:00:15,759
so i would be uh spending the next

00:00:12,639 --> 00:00:19,199
uh let's say 20-25 minutes to

00:00:15,759 --> 00:00:20,160
present about our journey on leveraging

00:00:19,199 --> 00:00:22,880
open source

00:00:20,160 --> 00:00:24,400
for the realization of network slice and

00:00:22,880 --> 00:00:29,359
service orchestration

00:00:24,400 --> 00:00:32,640
in the indigenous end-to-end 5g test pad

00:00:29,359 --> 00:00:33,600
okay so uh i would like to split this

00:00:32,640 --> 00:00:37,440
presentation

00:00:33,600 --> 00:00:40,960
into two parts the first part

00:00:37,440 --> 00:00:44,000
where i would be explaining about the

00:00:40,960 --> 00:00:47,680
the entuned 5g bed which

00:00:44,000 --> 00:00:50,000
is an indigenous test bed

00:00:47,680 --> 00:00:50,719
which is like a countrywide testbed

00:00:50,000 --> 00:00:54,399
which was

00:00:50,719 --> 00:00:56,960
which is being developed in india

00:00:54,399 --> 00:00:58,160
i'll go over the details of that of the

00:00:56,960 --> 00:01:00,640
larger picture of the

00:00:58,160 --> 00:01:02,399
overall 5g testbed and then the second

00:01:00,640 --> 00:01:05,680
part of my presentation

00:01:02,399 --> 00:01:07,600
will focus on the orchestration layer

00:01:05,680 --> 00:01:10,320
for the testbed

00:01:07,600 --> 00:01:10,960
wherein we successfully made use of open

00:01:10,320 --> 00:01:14,080
source

00:01:10,960 --> 00:01:15,439
in realizing what the test bed actually

00:01:14,080 --> 00:01:17,840
wanted

00:01:15,439 --> 00:01:18,960
so this is in a nutshell so without

00:01:17,840 --> 00:01:22,320
further ado

00:01:18,960 --> 00:01:24,240
i'll just go directly into the overview

00:01:22,320 --> 00:01:27,680
of the test bed

00:01:24,240 --> 00:01:28,000
so this uh 5g test bed right so this is

00:01:27,680 --> 00:01:31,280
an

00:01:28,000 --> 00:01:34,240
indigenous 5g test bed

00:01:31,280 --> 00:01:35,200
uh which is like a nationwide test bed

00:01:34,240 --> 00:01:39,840
that is uh

00:01:35,200 --> 00:01:40,400
in india and it has been sponsored by

00:01:39,840 --> 00:01:43,360
the

00:01:40,400 --> 00:01:44,240
the government of india uh i mean when i

00:01:43,360 --> 00:01:46,479
say sponsored

00:01:44,240 --> 00:01:48,399
the the sponsorship is for the academic

00:01:46,479 --> 00:01:51,520
and research institutions

00:01:48,399 --> 00:01:55,360
uh the the sponsorship is given and

00:01:51,520 --> 00:01:57,920
it is also uh of or there are also

00:01:55,360 --> 00:01:59,439
industry partners who are part of this

00:01:57,920 --> 00:02:01,600
uh

00:01:59,439 --> 00:02:04,079
test bed in terms of active contribution

00:02:01,600 --> 00:02:05,680
to the development of the testbed

00:02:04,079 --> 00:02:07,520
and as well i mean providing the

00:02:05,680 --> 00:02:10,319
technology stacks or whatever

00:02:07,520 --> 00:02:11,039
they do get different kinds of benefits

00:02:10,319 --> 00:02:13,120
or they

00:02:11,039 --> 00:02:14,640
they stand to gain from it in different

00:02:13,120 --> 00:02:17,520
ways so there are different

00:02:14,640 --> 00:02:19,680
models but at the end of it all it is a

00:02:17,520 --> 00:02:22,800
kind of a collaboration

00:02:19,680 --> 00:02:23,200
between academia research forums as well

00:02:22,800 --> 00:02:25,840
as

00:02:23,200 --> 00:02:28,720
industry and this is a nationwide

00:02:25,840 --> 00:02:31,599
testbed and i would say it is one of the

00:02:28,720 --> 00:02:33,519
i would say a few let us say large scale

00:02:31,599 --> 00:02:36,560
nationwide test beds

00:02:33,519 --> 00:02:39,040
across the world and even in india

00:02:36,560 --> 00:02:40,640
in the previous generations also we have

00:02:39,040 --> 00:02:42,800
been having test beds

00:02:40,640 --> 00:02:44,239
over like i said right this is a true

00:02:42,800 --> 00:02:48,080
kind of an end-to-end

00:02:44,239 --> 00:02:48,879
test bed for 5g now why do we want to

00:02:48,080 --> 00:02:50,640
have this

00:02:48,879 --> 00:02:52,720
test testbed in the first place right so

00:02:50,640 --> 00:02:53,040
one of the primary goals of this test

00:02:52,720 --> 00:02:57,599
bed

00:02:53,040 --> 00:03:01,040
is that from a country standpoint

00:02:57,599 --> 00:03:03,120
we want to be at the forefront of the 5g

00:03:01,040 --> 00:03:05,280
development and deployment in the sense

00:03:03,120 --> 00:03:08,239
that we want to be

00:03:05,280 --> 00:03:10,720
involved actively in the development of

00:03:08,239 --> 00:03:11,519
technology and not just be a consumer of

00:03:10,720 --> 00:03:14,800
technology

00:03:11,519 --> 00:03:17,840
as far as 5g is concerned so

00:03:14,800 --> 00:03:20,319
in terms of active contribution to ib

00:03:17,840 --> 00:03:22,400
creation in terms of innovation

00:03:20,319 --> 00:03:26,879
contribution to standards

00:03:22,400 --> 00:03:29,680
and so on uh now how does it

00:03:26,879 --> 00:03:30,480
i mean or why is it kind of important to

00:03:29,680 --> 00:03:33,040
us

00:03:30,480 --> 00:03:35,040
as a nation right one of the things is

00:03:33,040 --> 00:03:37,280
uh some of you might already be knowing

00:03:35,040 --> 00:03:41,360
about the the making india

00:03:37,280 --> 00:03:44,400
initiatives where we are focusing on

00:03:41,360 --> 00:03:46,879
developing technology indigenously

00:03:44,400 --> 00:03:48,879
within the country so this is one of the

00:03:46,879 --> 00:03:51,920
kind of i would say the enablers

00:03:48,879 --> 00:03:53,439
for such initiatives the second reason

00:03:51,920 --> 00:03:55,680
or the important reason is

00:03:53,439 --> 00:03:56,720
uh for initiatives like for example

00:03:55,680 --> 00:03:59,120
smart cities

00:03:56,720 --> 00:04:00,879
uh which the government of india is

00:03:59,120 --> 00:04:02,879
driving right so for all these kind of

00:04:00,879 --> 00:04:05,920
initiatives where we want a

00:04:02,879 --> 00:04:08,720
real kind of an environment to test

00:04:05,920 --> 00:04:10,799
some of the technological components as

00:04:08,720 --> 00:04:13,200
well as the solutions in a real world

00:04:10,799 --> 00:04:15,439
kind of setting right not in a lab

00:04:13,200 --> 00:04:17,519
or not like partly but from an

00:04:15,439 --> 00:04:18,639
end-to-end service or end-to-end use

00:04:17,519 --> 00:04:21,280
case kind of

00:04:18,639 --> 00:04:23,440
setting if we want to do i mean a

00:04:21,280 --> 00:04:26,000
validation right of the solution

00:04:23,440 --> 00:04:26,560
ah for this also this testbed is going

00:04:26,000 --> 00:04:29,040
to be

00:04:26,560 --> 00:04:31,440
quite useful and in general in building

00:04:29,040 --> 00:04:32,560
the 5g ecosystem right and when i say

00:04:31,440 --> 00:04:34,560
the ecosystem

00:04:32,560 --> 00:04:36,800
maybe i will elaborate a little more as

00:04:34,560 --> 00:04:38,400
we move forward in the country right so

00:04:36,800 --> 00:04:40,560
this testbed is going to be one of the

00:04:38,400 --> 00:04:42,400
key enablers

00:04:40,560 --> 00:04:44,000
and how this is going to be realized

00:04:42,400 --> 00:04:44,800
right if you look at it so one of the

00:04:44,000 --> 00:04:47,440
things is

00:04:44,800 --> 00:04:49,040
we would be scaling and evolving some of

00:04:47,440 --> 00:04:51,280
the test bits that are already

00:04:49,040 --> 00:04:52,400
existing so in the i mean for example in

00:04:51,280 --> 00:04:54,000
4g also

00:04:52,400 --> 00:04:56,000
there have been some efforts to build

00:04:54,000 --> 00:04:58,160
test bits over from an end to end point

00:04:56,000 --> 00:05:00,000
of view it may not be still there and it

00:04:58,160 --> 00:05:00,639
definitely requires some scaling as well

00:05:00,000 --> 00:05:03,520
as

00:05:00,639 --> 00:05:04,800
uh enhancements and evolution uh that

00:05:03,520 --> 00:05:07,039
the second aspect is

00:05:04,800 --> 00:05:08,639
to to come together right whether it is

00:05:07,039 --> 00:05:11,120
academia

00:05:08,639 --> 00:05:13,039
or research for a right maybe not one

00:05:11,120 --> 00:05:15,360
institution might be able to

00:05:13,039 --> 00:05:16,960
deliver or to realize or be able to

00:05:15,360 --> 00:05:19,039
realize all the components

00:05:16,960 --> 00:05:21,520
so to be able to collaborate and build

00:05:19,039 --> 00:05:23,520
the build the modules right grounds up

00:05:21,520 --> 00:05:25,280
uh which are missing or which are needed

00:05:23,520 --> 00:05:26,560
for the end-to-end test

00:05:25,280 --> 00:05:29,360
and then the third is of course the

00:05:26,560 --> 00:05:31,600
industry partnerships where

00:05:29,360 --> 00:05:33,360
i mean active participation is sought

00:05:31,600 --> 00:05:36,400
from industry partners

00:05:33,360 --> 00:05:39,199
in terms of building this testbed

00:05:36,400 --> 00:05:40,720
so if we have to say some a few key

00:05:39,199 --> 00:05:43,840
points right about this uh

00:05:40,720 --> 00:05:44,639
overall test bed one is the openness so

00:05:43,840 --> 00:05:47,759
this is an

00:05:44,639 --> 00:05:48,800
open testbed uh you should note that it

00:05:47,759 --> 00:05:51,280
i'm not talking

00:05:48,800 --> 00:05:52,720
i mean i'm not saying it is open source

00:05:51,280 --> 00:05:56,000
it is open

00:05:52,720 --> 00:05:58,400
in the sense that anybody uh can bring

00:05:56,000 --> 00:06:00,800
in their components whether it is ip

00:05:58,400 --> 00:06:02,400
or solution or in the case of like

00:06:00,800 --> 00:06:03,120
orchestration we are bringing like an

00:06:02,400 --> 00:06:05,680
open source

00:06:03,120 --> 00:06:08,000
uh based approach so anybody can

00:06:05,680 --> 00:06:10,240
bringing their bring in their components

00:06:08,000 --> 00:06:12,160
you make use of the test bed contribute

00:06:10,240 --> 00:06:14,560
to the development of the test bed

00:06:12,160 --> 00:06:16,080
of course the benefits and the waters in

00:06:14,560 --> 00:06:17,199
it for each of these stakeholders right

00:06:16,080 --> 00:06:19,440
will be dependent

00:06:17,199 --> 00:06:20,960
i mean will be different depending on

00:06:19,440 --> 00:06:21,840
their contribution and depending on

00:06:20,960 --> 00:06:24,479
their role

00:06:21,840 --> 00:06:26,000
so the openness is one important thing

00:06:24,479 --> 00:06:29,039
then the second thing is it

00:06:26,000 --> 00:06:31,440
it kind of nurtures and builds the

00:06:29,039 --> 00:06:32,240
ecosystem with respect to 5g in the

00:06:31,440 --> 00:06:34,479
nation

00:06:32,240 --> 00:06:35,280
and the third key aspect of this overall

00:06:34,479 --> 00:06:37,919
test bed is

00:06:35,280 --> 00:06:39,199
it's that it is indigenous so when i say

00:06:37,919 --> 00:06:41,680
it is indigenous

00:06:39,199 --> 00:06:42,479
it means that it is either built grounds

00:06:41,680 --> 00:06:44,639
up

00:06:42,479 --> 00:06:47,120
from within the country i mean whether

00:06:44,639 --> 00:06:48,479
it is academia or research or industry

00:06:47,120 --> 00:06:50,880
partners or

00:06:48,479 --> 00:06:51,599
we make use of open source so typically

00:06:50,880 --> 00:06:54,880
we

00:06:51,599 --> 00:06:57,039
we don't have i mean i would say not

00:06:54,880 --> 00:06:59,440
i mean commercial components as part of

00:06:57,039 --> 00:07:01,680
the let's say the fundamental test bed

00:06:59,440 --> 00:07:03,520
right obviously anybody any vendor or

00:07:01,680 --> 00:07:05,680
any supplier or any product

00:07:03,520 --> 00:07:08,000
company can bring in their solution and

00:07:05,680 --> 00:07:10,240
validate their products or their ip

00:07:08,000 --> 00:07:11,840
or their solutions but the test bed

00:07:10,240 --> 00:07:12,720
itself right that end-to-end test bed

00:07:11,840 --> 00:07:16,240
itself

00:07:12,720 --> 00:07:18,000
it's kind of indigenously built

00:07:16,240 --> 00:07:19,440
so this this is the essential thing that

00:07:18,000 --> 00:07:24,400
i wanted to highlight

00:07:19,440 --> 00:07:26,319
now probably if you look at from overall

00:07:24,400 --> 00:07:27,840
the participants who are contributing to

00:07:26,319 --> 00:07:32,160
this testbed right

00:07:27,840 --> 00:07:34,800
if you see so you can see that

00:07:32,160 --> 00:07:36,560
the academic and the research partners

00:07:34,800 --> 00:07:38,560
are pretty much spread across

00:07:36,560 --> 00:07:40,400
the geography of the country and they

00:07:38,560 --> 00:07:42,840
are the premier

00:07:40,400 --> 00:07:45,120
institutes that you can find within

00:07:42,840 --> 00:07:47,759
india they are all

00:07:45,120 --> 00:07:50,000
actively involved in the development of

00:07:47,759 --> 00:07:51,840
the testbed components

00:07:50,000 --> 00:07:53,759
and they do this activity in

00:07:51,840 --> 00:07:55,599
collaboration with the industry partners

00:07:53,759 --> 00:07:56,319
so the industry partners will touch upon

00:07:55,599 --> 00:07:59,280
a little while

00:07:56,319 --> 00:08:01,280
but with respect to the the reach and

00:07:59,280 --> 00:08:04,560
the accessibility right so because

00:08:01,280 --> 00:08:06,479
the the various i mean the the

00:08:04,560 --> 00:08:08,479
partners involved in the development of

00:08:06,479 --> 00:08:09,280
the testbed are geographically spread

00:08:08,479 --> 00:08:11,520
apart

00:08:09,280 --> 00:08:13,360
the intention is that the test bed

00:08:11,520 --> 00:08:16,240
should be available

00:08:13,360 --> 00:08:17,280
as well as accessible to anyone within

00:08:16,240 --> 00:08:19,360
the country

00:08:17,280 --> 00:08:21,440
so what this means is we will have

00:08:19,360 --> 00:08:23,680
multiple instances of the test bed

00:08:21,440 --> 00:08:25,599
running in different locations

00:08:23,680 --> 00:08:27,840
but there may be some ok some variations

00:08:25,599 --> 00:08:30,160
may be certain specific components could

00:08:27,840 --> 00:08:32,080
be hosted only in certain locations

00:08:30,160 --> 00:08:34,000
and the intention is also that people

00:08:32,080 --> 00:08:36,159
should be able to access it from

00:08:34,000 --> 00:08:37,360
anywhere they want at least from within

00:08:36,159 --> 00:08:40,399
the country

00:08:37,360 --> 00:08:42,640
okay obviously subject to the i mean the

00:08:40,399 --> 00:08:46,399
model in which they are allowed to

00:08:42,640 --> 00:08:47,839
access it so if we look at the industry

00:08:46,399 --> 00:08:49,360
partners you can see that

00:08:47,839 --> 00:08:51,279
there are quite a number of industry

00:08:49,360 --> 00:08:53,600
partners who are collaborating

00:08:51,279 --> 00:08:54,800
in terms of the actual development to

00:08:53,600 --> 00:08:57,040
the test bed

00:08:54,800 --> 00:08:57,839
as well as they provide the required

00:08:57,040 --> 00:09:01,279
technology

00:08:57,839 --> 00:09:03,839
uh for a stacks of the components so

00:09:01,279 --> 00:09:06,240
i think this kind of illustrates that we

00:09:03,839 --> 00:09:09,200
do have active participants

00:09:06,240 --> 00:09:10,000
to the development of the test bed now

00:09:09,200 --> 00:09:13,200
if you look at

00:09:10,000 --> 00:09:15,200
what this is being used for right

00:09:13,200 --> 00:09:16,720
what this test bed is used for i mean

00:09:15,200 --> 00:09:19,360
like i just touched upon

00:09:16,720 --> 00:09:19,760
briefly earlier that we want to develop

00:09:19,360 --> 00:09:21,839
the

00:09:19,760 --> 00:09:25,200
5g ecosystem and we want to be at the

00:09:21,839 --> 00:09:27,440
forefront of technology development

00:09:25,200 --> 00:09:29,279
but if you want to look at look at it a

00:09:27,440 --> 00:09:31,120
little bit more and be a little bit more

00:09:29,279 --> 00:09:33,920
specific right

00:09:31,120 --> 00:09:35,519
so these are some of the usages of the

00:09:33,920 --> 00:09:39,120
testbed that we foresee

00:09:35,519 --> 00:09:41,600
so one is the the use of eyepiece so

00:09:39,120 --> 00:09:43,519
first of all as part of the development

00:09:41,600 --> 00:09:44,399
of the test bed or creation of the test

00:09:43,519 --> 00:09:45,920
bed

00:09:44,399 --> 00:09:48,720
there will be a lot of eyepiece that

00:09:45,920 --> 00:09:52,000
will be generated this is not

00:09:48,720 --> 00:09:55,279
just about that it is also about uh

00:09:52,000 --> 00:09:57,120
people can bring their own ips uh and

00:09:55,279 --> 00:09:58,320
maybe they can do an interoperable

00:09:57,120 --> 00:10:01,839
interoperability

00:09:58,320 --> 00:10:04,079
uh testing as well to validate their ips

00:10:01,839 --> 00:10:06,320
also they can all they can also give

00:10:04,079 --> 00:10:08,480
their own ips to the testbed

00:10:06,320 --> 00:10:09,600
obviously they will retain the ip rights

00:10:08,480 --> 00:10:11,600
in full because

00:10:09,600 --> 00:10:14,240
like i said this is not an open source

00:10:11,600 --> 00:10:17,120
testbed but this is an open testbed

00:10:14,240 --> 00:10:18,560
ah so that that way it kind of promotes

00:10:17,120 --> 00:10:21,600
development of ip

00:10:18,560 --> 00:10:23,440
as well as the use of ip the second is r

00:10:21,600 --> 00:10:26,800
d and product development

00:10:23,440 --> 00:10:29,360
wherein the test bed can be used as a

00:10:26,800 --> 00:10:30,240
real world kind of testing ground or a

00:10:29,360 --> 00:10:32,880
playground for

00:10:30,240 --> 00:10:33,600
experimentation validating for the

00:10:32,880 --> 00:10:35,399
functional

00:10:33,600 --> 00:10:36,720
as well as the non-functional test

00:10:35,399 --> 00:10:38,640
interoperability

00:10:36,720 --> 00:10:40,079
you name it right so if this is going to

00:10:38,640 --> 00:10:42,079
be a key enabler

00:10:40,079 --> 00:10:44,880
and this is very very significant if you

00:10:42,079 --> 00:10:46,959
look at who can stand to benefit from it

00:10:44,880 --> 00:10:49,920
right its not just the big players but

00:10:46,959 --> 00:10:52,640
for example take the case of a startup

00:10:49,920 --> 00:10:54,240
they may not be able to offered first of

00:10:52,640 --> 00:10:56,560
all to have a full-fledged

00:10:54,240 --> 00:10:58,480
end to end 5g test pad number one number

00:10:56,560 --> 00:11:01,040
two is even if they can afford it

00:10:58,480 --> 00:11:02,800
it might take considerable effort and

00:11:01,040 --> 00:11:04,640
lead time and expertise

00:11:02,800 --> 00:11:06,399
to build the world class test bed right

00:11:04,640 --> 00:11:08,240
so from that angle also it's going to be

00:11:06,399 --> 00:11:10,320
useful and the same applies to

00:11:08,240 --> 00:11:12,000
any academic or research institution

00:11:10,320 --> 00:11:13,440
also while they may have their component

00:11:12,000 --> 00:11:15,760
specific for their

00:11:13,440 --> 00:11:17,920
i mean the interacting component kind of

00:11:15,760 --> 00:11:20,240
a testbed a true end-to-end file

00:11:17,920 --> 00:11:21,760
a test bed might not be that easy to

00:11:20,240 --> 00:11:23,760
realize

00:11:21,760 --> 00:11:25,360
and the third is to be able to develop

00:11:23,760 --> 00:11:27,040
services and applications right so

00:11:25,360 --> 00:11:28,160
application development is going to be

00:11:27,040 --> 00:11:29,600
one of the

00:11:28,160 --> 00:11:31,920
let's say we do not know whether it is

00:11:29,600 --> 00:11:33,440
going to be the killer thing for 5g but

00:11:31,920 --> 00:11:34,000
it is definitely going to be one of the

00:11:33,440 --> 00:11:36,640
key

00:11:34,000 --> 00:11:37,279
things that we see see with respect to

00:11:36,640 --> 00:11:39,440
5g

00:11:37,279 --> 00:11:40,800
especially because it is going to

00:11:39,440 --> 00:11:42,800
address a lot of

00:11:40,800 --> 00:11:44,320
industry vertical requirements in a

00:11:42,800 --> 00:11:45,760
custom made way right with the help of

00:11:44,320 --> 00:11:47,839
network slicing also

00:11:45,760 --> 00:11:50,480
so in that sense application development

00:11:47,839 --> 00:11:53,680
right whether it is edgy applications or

00:11:50,480 --> 00:11:54,880
i mean like user applications whatever

00:11:53,680 --> 00:11:56,800
it is right whatever kind of

00:11:54,880 --> 00:11:59,920
applications this testbed can be

00:11:56,800 --> 00:12:01,760
really going to help them also to

00:11:59,920 --> 00:12:03,279
kind of test their interoperability as

00:12:01,760 --> 00:12:04,480
well as the performance and other

00:12:03,279 --> 00:12:06,160
aspects

00:12:04,480 --> 00:12:07,760
the last point is about the skill

00:12:06,160 --> 00:12:09,200
building which is very very essential

00:12:07,760 --> 00:12:12,480
from a country standpoint

00:12:09,200 --> 00:12:14,720
because we want to develop the the 5g

00:12:12,480 --> 00:12:17,120
ecosystem and we want to generate a lot

00:12:14,720 --> 00:12:18,959
of skilled r d workforce

00:12:17,120 --> 00:12:20,320
within the country just to give you an

00:12:18,959 --> 00:12:22,720
example right

00:12:20,320 --> 00:12:24,160
that this is a real thing and it's not

00:12:22,720 --> 00:12:26,240
just on paper

00:12:24,160 --> 00:12:28,320
as of now right uh in this test period

00:12:26,240 --> 00:12:31,040
about 400 to 500 engineers are

00:12:28,320 --> 00:12:32,560
actively i mean people are actively uh

00:12:31,040 --> 00:12:34,720
contributing

00:12:32,560 --> 00:12:35,760
in some way or the other directly to the

00:12:34,720 --> 00:12:38,240
testbed and

00:12:35,760 --> 00:12:39,440
uh i mean i would expect some many more

00:12:38,240 --> 00:12:42,880
also to be involved

00:12:39,440 --> 00:12:45,200
indirectly or i mean not i mean in in

00:12:42,880 --> 00:12:47,279
some form or other indirectly as well

00:12:45,200 --> 00:12:48,880
so this is a real thing and we want to

00:12:47,279 --> 00:12:51,200
take it very seriously from a country

00:12:48,880 --> 00:12:53,360
standpoint

00:12:51,200 --> 00:12:55,760
okay so there are different ways in

00:12:53,360 --> 00:12:57,519
which we can use the test bed i will not

00:12:55,760 --> 00:13:00,560
go into the details

00:12:57,519 --> 00:13:03,360
but one of the things is that

00:13:00,560 --> 00:13:03,360
we could have

00:13:04,639 --> 00:13:08,240
we could have like an application

00:13:06,079 --> 00:13:09,920
developer plug in their apps into the

00:13:08,240 --> 00:13:12,079
test bed and do the testing

00:13:09,920 --> 00:13:13,760
the second thing could be that for

00:13:12,079 --> 00:13:16,399
example

00:13:13,760 --> 00:13:18,000
a product company right a small startup

00:13:16,399 --> 00:13:20,639
who just want to develop

00:13:18,000 --> 00:13:22,399
the l2 stack protocol stack right for

00:13:20,639 --> 00:13:23,920
the g node b they can just bring it in

00:13:22,399 --> 00:13:24,639
and plug it into the test bed and then

00:13:23,920 --> 00:13:26,399
do their

00:13:24,639 --> 00:13:28,160
validation and interoperability testing

00:13:26,399 --> 00:13:29,839
semi same way somebody wants to develop

00:13:28,160 --> 00:13:32,720
a up

00:13:29,839 --> 00:13:37,040
if right then they can just plug in a

00:13:32,720 --> 00:13:37,040
testing and validation of their solution

00:13:38,560 --> 00:13:41,600
in the same way right you know for

00:13:40,320 --> 00:13:44,639
example if

00:13:41,600 --> 00:13:46,320
some a researcher they want to check or

00:13:44,639 --> 00:13:47,839
they want to test their algorithms

00:13:46,320 --> 00:13:49,040
obviously they will be testing their

00:13:47,839 --> 00:13:52,720
algorithms

00:13:49,040 --> 00:13:54,560
ah but from an end-to-end standpoint

00:13:52,720 --> 00:13:56,320
right what how their algorithms

00:13:54,560 --> 00:13:58,240
can affect the end-to-end for example

00:13:56,320 --> 00:14:03,839
call flow or this sessionality right

00:13:58,240 --> 00:14:03,839
that they may

00:14:13,519 --> 00:14:17,839
what we have

00:14:20,320 --> 00:14:26,320
instagram the orchestration layer was

00:14:22,560 --> 00:14:26,320
released as a partnership again

00:14:28,839 --> 00:14:31,839
seaweed

00:14:36,639 --> 00:14:40,480
concerned right we considered a few

00:14:39,839 --> 00:14:42,000
choices

00:14:40,480 --> 00:14:44,160
in terms of how we want to build the

00:14:42,000 --> 00:14:46,160
orchestration layer so one is the from

00:14:44,160 --> 00:14:48,560
scratch development

00:14:46,160 --> 00:14:50,320
that is build it grounds up second is

00:14:48,560 --> 00:14:52,240
the open source based approach

00:14:50,320 --> 00:14:54,959
which is use the onap right the open

00:14:52,240 --> 00:14:56,160
network automation platform as the base

00:14:54,959 --> 00:14:58,079
and then make the necessary

00:14:56,160 --> 00:14:59,839
customizations and enhancements this is

00:14:58,079 --> 00:15:01,680
the second approach

00:14:59,839 --> 00:15:03,600
the third is a hybrid open source

00:15:01,680 --> 00:15:05,519
approach wherein we get some domain

00:15:03,600 --> 00:15:07,519
orchestrators or domain controllers like

00:15:05,519 --> 00:15:08,880
open daylight or open source manual

00:15:07,519 --> 00:15:10,560
and then implement the end-to-end

00:15:08,880 --> 00:15:11,760
orchestration functionality whatever is

00:15:10,560 --> 00:15:13,920
required

00:15:11,760 --> 00:15:15,440
the fourth one we did consider but we

00:15:13,920 --> 00:15:17,199
didn't actually take it seriously

00:15:15,440 --> 00:15:18,880
because as i said right we wanted to be

00:15:17,199 --> 00:15:20,639
an indigenous test bed so we didn't

00:15:18,880 --> 00:15:21,839
really consider the use of third party

00:15:20,639 --> 00:15:23,760
commercial products

00:15:21,839 --> 00:15:25,760
at least as part of the core testbed of

00:15:23,760 --> 00:15:27,279
course any third party orchestrator

00:15:25,760 --> 00:15:29,120
company could plug in their

00:15:27,279 --> 00:15:30,399
orchestration solution and validate it

00:15:29,120 --> 00:15:32,800
that's perfectly fine

00:15:30,399 --> 00:15:33,839
but as part of the test bed we didn't

00:15:32,800 --> 00:15:36,959
prefer this

00:15:33,839 --> 00:15:38,079
option at all then we kind of did a i

00:15:36,959 --> 00:15:40,880
mean a

00:15:38,079 --> 00:15:42,160
benefit versus challenges analysis i'll

00:15:40,880 --> 00:15:45,600
not

00:15:42,160 --> 00:15:55,839
read from this slide the

00:15:45,600 --> 00:15:55,839
the bottom line is that

00:15:58,959 --> 00:16:02,480
yes apart from the open source related

00:16:01,759 --> 00:16:09,839
assets

00:16:02,480 --> 00:16:09,839
so considering all that what we did

00:16:19,040 --> 00:16:23,600
necessary for our testbed and some of

00:16:22,240 --> 00:16:25,680
the reasons

00:16:23,600 --> 00:16:27,600
are like because it provides open and

00:16:25,680 --> 00:16:28,240
standard interfaces towards the network

00:16:27,600 --> 00:16:29,759
functions

00:16:28,240 --> 00:16:31,440
for the configuration fault and

00:16:29,759 --> 00:16:34,079
performance

00:16:31,440 --> 00:16:36,000
management and the other advantage of

00:16:34,079 --> 00:16:38,000
that we saw in one app was it provides

00:16:36,000 --> 00:16:39,519
the orchestration for all the three

00:16:38,000 --> 00:16:40,320
domains that is the ram core and

00:16:39,519 --> 00:16:41,920
transport

00:16:40,320 --> 00:16:43,920
because we are really talking about an

00:16:41,920 --> 00:16:46,079
end to end 5g testbed so orchestration

00:16:43,920 --> 00:16:47,680
across domains is quite important

00:16:46,079 --> 00:16:49,759
then the other aspects i think we all

00:16:47,680 --> 00:16:51,600
know its micro services based and then

00:16:49,759 --> 00:16:53,040
we can interoperate with third party

00:16:51,600 --> 00:16:55,680
controllers

00:16:53,040 --> 00:16:57,120
and we support for 5g use cases which is

00:16:55,680 --> 00:16:58,639
quite active in the community

00:16:57,120 --> 00:17:00,399
of course one of the challenges in one

00:16:58,639 --> 00:17:01,920
app was the hardware requirements but

00:17:00,399 --> 00:17:04,959
this is a challenge that we had to

00:17:01,920 --> 00:17:07,839
overcome anyhow

00:17:04,959 --> 00:17:08,640
okay so the next slide tries to give a

00:17:07,839 --> 00:17:10,640
little bit of an

00:17:08,640 --> 00:17:12,959
overview by which components we have

00:17:10,640 --> 00:17:15,360
started customizing or enhancing

00:17:12,959 --> 00:17:17,520
i will not get into the details here but

00:17:15,360 --> 00:17:18,959
this just gives you a flavor of

00:17:17,520 --> 00:17:21,600
some of the components that we have

00:17:18,959 --> 00:17:25,039
started customizing and making suitable

00:17:21,600 --> 00:17:27,039
enhancements for our use cases

00:17:25,039 --> 00:17:29,520
ah now let me spend a couple of minutes

00:17:27,039 --> 00:17:32,960
on the use cases that we have been

00:17:29,520 --> 00:17:35,520
working on so far so one of the first

00:17:32,960 --> 00:17:40,080
use cases that we picked up was the

00:17:35,520 --> 00:17:40,080
having the 5g basic 5g use case

00:17:40,640 --> 00:17:46,400
which involves the ran and the core and

00:17:44,720 --> 00:17:48,240
using own app as the end to end

00:17:46,400 --> 00:17:49,840
orchestrator then

00:17:48,240 --> 00:17:51,360
having an end to end service with iran

00:17:49,840 --> 00:17:53,200
and the core and then

00:17:51,360 --> 00:17:54,720
sending some video traffic so this was

00:17:53,200 --> 00:17:55,679
one of the first use cases because we

00:17:54,720 --> 00:17:58,240
believed that

00:17:55,679 --> 00:17:59,360
this would kind of set the stage for

00:17:58,240 --> 00:18:02,640
many more

00:17:59,360 --> 00:18:04,480
use cases okay so

00:18:02,640 --> 00:18:06,480
this was the starting and then we

00:18:04,480 --> 00:18:07,200
successfully realized this use case last

00:18:06,480 --> 00:18:09,280
year

00:18:07,200 --> 00:18:11,679
and demonstrated it at the indian mobile

00:18:09,280 --> 00:18:13,520
congress last october

00:18:11,679 --> 00:18:15,360
so maybe i will just zoom in a little

00:18:13,520 --> 00:18:19,200
bit

00:18:15,360 --> 00:18:19,200
on what this use case was about

00:18:20,960 --> 00:18:25,200
so this use case right it is about

00:18:24,160 --> 00:18:27,840
setting up the

00:18:25,200 --> 00:18:30,160
ram and core service and having like an

00:18:27,840 --> 00:18:32,960
end to end traffic flowing from the ue

00:18:30,160 --> 00:18:33,360
towards the may be like a video server

00:18:32,960 --> 00:18:36,640
okay

00:18:33,360 --> 00:18:36,640
so the one of the first step

00:18:36,799 --> 00:18:42,880
templates and onboard the service

00:18:40,000 --> 00:18:43,360
after which we instantiate the service

00:18:42,880 --> 00:18:45,200
and

00:18:43,360 --> 00:18:46,400
then the uh once the service is

00:18:45,200 --> 00:18:48,320
instantiated

00:18:46,400 --> 00:18:49,919
we will be spinning up the core network

00:18:48,320 --> 00:18:52,160
functions that are

00:18:49,919 --> 00:18:53,440
part of the service definition or the

00:18:52,160 --> 00:18:56,960
service template

00:18:53,440 --> 00:18:58,720
and then we will also wait for the pnf

00:18:56,960 --> 00:18:59,760
so as far as the ram is concerned we

00:18:58,720 --> 00:19:01,919
modeled it as a

00:18:59,760 --> 00:19:03,840
physical network function uh for the

00:19:01,919 --> 00:19:05,440
sake of simplicity to start with

00:19:03,840 --> 00:19:07,360
and then we wait for the physical

00:19:05,440 --> 00:19:08,160
network function to register itself with

00:19:07,360 --> 00:19:09,919
onap

00:19:08,160 --> 00:19:11,600
and once the registration process is

00:19:09,919 --> 00:19:13,200
completed we then push the remaining

00:19:11,600 --> 00:19:16,400
part of the configuration

00:19:13,200 --> 00:19:19,120
and once the configuration is completed

00:19:16,400 --> 00:19:19,760
then we start the traffic so that we can

00:19:19,120 --> 00:19:22,559
see the

00:19:19,760 --> 00:19:24,080
flow of traffic across the network

00:19:22,559 --> 00:19:27,200
functions that has been instantiated

00:19:24,080 --> 00:19:27,760
by own app so without going into too

00:19:27,200 --> 00:19:29,760
much of

00:19:27,760 --> 00:19:33,360
in-depth details this slide kind of

00:19:29,760 --> 00:19:39,200
gives you high level view of this step

00:19:33,360 --> 00:19:42,400
or bnf

00:19:39,200 --> 00:19:42,400
related artifacts

00:19:45,200 --> 00:19:49,120
function we do the design and the

00:19:48,400 --> 00:19:53,840
onboarding

00:19:49,120 --> 00:19:53,840
then we instantiate the service

00:19:57,840 --> 00:20:00,240
into in

00:20:04,320 --> 00:20:07,520
run because this was also something that

00:20:06,080 --> 00:20:09,679
was in progress at the time

00:20:07,520 --> 00:20:11,679
we started with this onap journey so

00:20:09,679 --> 00:20:12,880
what we did was in order to demonstrate

00:20:11,679 --> 00:20:15,919
the end to end flow

00:20:12,880 --> 00:20:18,000
we used a ran emulator which then

00:20:15,919 --> 00:20:20,480
was able to establish a connection with

00:20:18,000 --> 00:20:22,320
the real amf

00:20:20,480 --> 00:20:24,000
and then subsequently we had the steps

00:20:22,320 --> 00:20:25,679
of the ue getting registered and then

00:20:24,000 --> 00:20:27,760
the traffic flowing

00:20:25,679 --> 00:20:29,679
as part of the road map we will also be

00:20:27,760 --> 00:20:30,159
replacing this rand emulator with the

00:20:29,679 --> 00:20:33,600
real

00:20:30,159 --> 00:20:35,280
uh ram or the real 5g nr this we will

00:20:33,600 --> 00:20:37,840
see in the following slides

00:20:35,280 --> 00:20:40,000
so the next step that we embarked upon

00:20:37,840 --> 00:20:40,480
or which is like work in progress right

00:20:40,000 --> 00:20:43,280
now

00:20:40,480 --> 00:20:44,320
is the the simple closed loop control

00:20:43,280 --> 00:20:46,080
using one app

00:20:44,320 --> 00:20:48,320
obviously not everything is available

00:20:46,080 --> 00:20:49,919
readily in one app we had to make or we

00:20:48,320 --> 00:20:51,679
are in the process of making some

00:20:49,919 --> 00:20:53,039
enhancements here

00:20:51,679 --> 00:20:55,280
in order to realize it of course the

00:20:53,039 --> 00:20:57,360
basic closed loop functionality is there

00:20:55,280 --> 00:20:58,960
but for the way that we want we in this

00:20:57,360 --> 00:21:00,640
sergeant right for our use case

00:20:58,960 --> 00:21:02,400
not all the functionality is present so

00:21:00,640 --> 00:21:03,520
this requires some enhancements in the

00:21:02,400 --> 00:21:05,679
dcie

00:21:03,520 --> 00:21:07,039
and some enhancements in the s o and c d

00:21:05,679 --> 00:21:10,240
s as well as

00:21:07,039 --> 00:21:13,200
the the inventory as well

00:21:10,240 --> 00:21:15,200
so again i will not go into the details

00:21:13,200 --> 00:21:16,000
of the onap components and these steps

00:21:15,200 --> 00:21:18,559
so this flow

00:21:16,000 --> 00:21:19,679
chart gives you the high level flow

00:21:18,559 --> 00:21:22,559
assuming that a

00:21:19,679 --> 00:21:25,120
5g service is already active with 5g and

00:21:22,559 --> 00:21:27,760
rn 5g core network functions

00:21:25,120 --> 00:21:29,760
okay and if i have to just summarize it

00:21:27,760 --> 00:21:34,159
at a high level right

00:21:29,760 --> 00:21:34,159
whatever steps are involved

00:21:34,480 --> 00:21:39,840
so the first few steps are some somewhat

00:21:37,520 --> 00:21:41,679
of a reuse of the phase one

00:21:39,840 --> 00:21:43,200
use case work where we will have to make

00:21:41,679 --> 00:21:44,480
some minor enhancements and then it will

00:21:43,200 --> 00:21:46,400
be up and running

00:21:44,480 --> 00:21:48,080
that is the design of the 5g servers and

00:21:46,400 --> 00:21:50,080
then instantiating the 5g servers and

00:21:48,080 --> 00:21:52,400
performing the initial configuration

00:21:50,080 --> 00:21:54,159
the key part for this phase is when we

00:21:52,400 --> 00:21:56,320
talk about closed loop control one of

00:21:54,159 --> 00:21:57,919
the key things in closed loop control is

00:21:56,320 --> 00:21:59,919
to have performance management data

00:21:57,919 --> 00:22:01,280
right that should flow continuously from

00:21:59,919 --> 00:22:03,679
the network functions

00:22:01,280 --> 00:22:04,960
and then based on the performance data

00:22:03,679 --> 00:22:06,720
that is reported by the network

00:22:04,960 --> 00:22:07,840
functions you analyze them and then you

00:22:06,720 --> 00:22:10,080
take suitable

00:22:07,840 --> 00:22:12,799
uh preventive or corrective actions now

00:22:10,080 --> 00:22:15,520
in this case what we assumed was

00:22:12,799 --> 00:22:17,760
maybe i can just go on to the next slide

00:22:15,520 --> 00:22:19,520
what we assumed was

00:22:17,760 --> 00:22:21,120
we assume that the network functions

00:22:19,520 --> 00:22:23,120
already know which performance

00:22:21,120 --> 00:22:25,039
management data to report

00:22:23,120 --> 00:22:27,039
later on we will also support the

00:22:25,039 --> 00:22:29,120
creation of the measurement jobs right

00:22:27,039 --> 00:22:30,880
like what is defined in 3 gbp

00:22:29,120 --> 00:22:33,520
and similarly with respect to the actual

00:22:30,880 --> 00:22:36,240
pm data we try to keep it quite simple

00:22:33,520 --> 00:22:39,360
so that we are able to show the end to

00:22:36,240 --> 00:22:41,600
end flows and then we will add many more

00:22:39,360 --> 00:22:43,280
additional pm data that we will look at

00:22:41,600 --> 00:22:44,799
for analysis

00:22:43,280 --> 00:22:46,640
so the idea is to demonstrate a

00:22:44,799 --> 00:22:47,120
full-fledged closed loop for a 5g

00:22:46,640 --> 00:22:49,440
service

00:22:47,120 --> 00:22:52,240
that was the whole intention this is a

00:22:49,440 --> 00:22:52,240
work in progress

00:22:52,320 --> 00:22:56,159
yes may be spending a minute or two on

00:22:54,400 --> 00:22:57,039
the lessons that we have learned so far

00:22:56,159 --> 00:22:58,159
right at least

00:22:57,039 --> 00:23:00,320
specifically focusing on the

00:22:58,159 --> 00:23:02,880
orchestration part uh

00:23:00,320 --> 00:23:04,400
so what we saw was this open source

00:23:02,880 --> 00:23:06,559
based approach right it enabled the

00:23:04,400 --> 00:23:08,320
industry partners right so we could work

00:23:06,559 --> 00:23:09,919
in close collaboration

00:23:08,320 --> 00:23:11,679
and we could have like a clear work

00:23:09,919 --> 00:23:13,679
split so depending on their areas of

00:23:11,679 --> 00:23:16,000
expertise maybe one partner was very

00:23:13,679 --> 00:23:17,360
uh i mean kind of hands-on and skilled

00:23:16,000 --> 00:23:19,679
in deploying one app

00:23:17,360 --> 00:23:20,799
while another partner had the skills to

00:23:19,679 --> 00:23:21,919
develop some of the

00:23:20,799 --> 00:23:24,080
i mean implement some of the

00:23:21,919 --> 00:23:25,200
enhancements while someone another

00:23:24,080 --> 00:23:27,280
partner had

00:23:25,200 --> 00:23:28,480
a good experience in integrating onap

00:23:27,280 --> 00:23:30,640
with the network functions

00:23:28,480 --> 00:23:31,520
so that way we could clearly define the

00:23:30,640 --> 00:23:34,000
work split

00:23:31,520 --> 00:23:36,080
and we could work in close collaboration

00:23:34,000 --> 00:23:37,760
across multiple industry partners

00:23:36,080 --> 00:23:39,919
which typically could be quite

00:23:37,760 --> 00:23:42,400
challenging right from an operational

00:23:39,919 --> 00:23:45,520
standpoint and it also enabled us to

00:23:42,400 --> 00:23:47,279
kind of explore as well as innovate and

00:23:45,520 --> 00:23:49,120
apart from that there was a good amount

00:23:47,279 --> 00:23:50,880
of learning for each of the partners

00:23:49,120 --> 00:23:52,720
involved

00:23:50,880 --> 00:23:54,480
and this open source based approach kind

00:23:52,720 --> 00:23:56,799
of simplified our needs and

00:23:54,480 --> 00:24:00,000
it also fulfills the test beds current

00:23:56,799 --> 00:24:02,240
and the future needs with respect to the

00:24:00,000 --> 00:24:03,840
or what is needed from a testbed

00:24:02,240 --> 00:24:05,520
standpoint right in terms of the

00:24:03,840 --> 00:24:07,360
functionality

00:24:05,520 --> 00:24:09,679
ah but what we also realized right

00:24:07,360 --> 00:24:10,080
during this whole journey we also needed

00:24:09,679 --> 00:24:12,240
not

00:24:10,080 --> 00:24:14,799
to only a full-fledged orchestrator like

00:24:12,240 --> 00:24:16,480
onap but we also want a simple interface

00:24:14,799 --> 00:24:18,799
if we want to just monitor

00:24:16,480 --> 00:24:20,400
or use the test bed right not focusing

00:24:18,799 --> 00:24:21,039
on anything about orchestration or

00:24:20,400 --> 00:24:22,720
anything

00:24:21,039 --> 00:24:24,080
but just i want to see the health of the

00:24:22,720 --> 00:24:27,120
test bed or i want to

00:24:24,080 --> 00:24:27,760
maybe restart a vm or restart an enf or

00:24:27,120 --> 00:24:29,760
whatever right

00:24:27,760 --> 00:24:31,360
without looking about the integrities of

00:24:29,760 --> 00:24:32,559
the end to end orchestration so for that

00:24:31,360 --> 00:24:34,400
we may need a

00:24:32,559 --> 00:24:36,559
simple interface you can call it like a

00:24:34,400 --> 00:24:38,000
simple network management function or an

00:24:36,559 --> 00:24:40,080
element management function whatever it

00:24:38,000 --> 00:24:41,360
might be or a simple management layer

00:24:40,080 --> 00:24:43,120
so this is something that we have

00:24:41,360 --> 00:24:45,679
started developing and we will be

00:24:43,120 --> 00:24:46,240
working further to realize it and the

00:24:45,679 --> 00:24:48,480
same way

00:24:46,240 --> 00:24:50,720
we will also need a mediation layer for

00:24:48,480 --> 00:24:51,760
the network functions to report the pm

00:24:50,720 --> 00:24:53,360
fm data

00:24:51,760 --> 00:24:55,360
so that we can keep the network

00:24:53,360 --> 00:24:56,960
functions the testbed agnostic to the

00:24:55,360 --> 00:24:58,720
orchestration layer

00:24:56,960 --> 00:25:00,159
because tomorrow if we want to bring in

00:24:58,720 --> 00:25:02,480
another orchestrator right we do not

00:25:00,159 --> 00:25:05,520
want to impact the network functions

00:25:02,480 --> 00:25:07,039
in terms of cmpm and fm interfaces so

00:25:05,520 --> 00:25:09,760
this is also something that we have

00:25:07,039 --> 00:25:09,760
started up on

00:25:09,840 --> 00:25:14,320
and i will not spend too much time on

00:25:12,559 --> 00:25:15,919
the roadmap so these are just this is

00:25:14,320 --> 00:25:19,279
just to give you a flavor of

00:25:15,919 --> 00:25:21,520
what we want to uh so next

00:25:19,279 --> 00:25:21,520
step

00:25:25,760 --> 00:25:28,960
currently we have the closed loop only

00:25:27,360 --> 00:25:31,279
with the core 5g core

00:25:28,960 --> 00:25:32,400
we want to also extend it to the ram and

00:25:31,279 --> 00:25:35,200
later on to the

00:25:32,400 --> 00:25:36,960
transport also and then also we also

00:25:35,200 --> 00:25:38,400
want to start with the network slicing

00:25:36,960 --> 00:25:40,240
related functionality because network

00:25:38,400 --> 00:25:42,240
slicing in omap open source

00:25:40,240 --> 00:25:43,919
that is just taking off in the frankfurt

00:25:42,240 --> 00:25:45,919
and quillian release where we are also

00:25:43,919 --> 00:25:46,720
actively involved so we want to leverage

00:25:45,919 --> 00:25:48,320
that as well

00:25:46,720 --> 00:25:50,559
and then we go into the advanced

00:25:48,320 --> 00:25:53,520
scenarios

00:25:50,559 --> 00:25:54,720
okay maybe i will just spend a few

00:25:53,520 --> 00:25:56,640
seconds

00:25:54,720 --> 00:25:58,000
before concluding and then leaving some

00:25:56,640 --> 00:25:59,840
time for q and a

00:25:58,000 --> 00:26:01,440
so what we have done as part of this

00:25:59,840 --> 00:26:03,679
orchestration journey right so we have

00:26:01,440 --> 00:26:04,960
successfully used onap open source as

00:26:03,679 --> 00:26:07,120
the base

00:26:04,960 --> 00:26:08,159
and then made suitable enhancements or

00:26:07,120 --> 00:26:10,400
customizations

00:26:08,159 --> 00:26:11,200
in order to fulfill the indigenous

00:26:10,400 --> 00:26:14,240
testbeds

00:26:11,200 --> 00:26:17,440
requirements okay and

00:26:14,240 --> 00:26:19,279
what we also anticipate right once the

00:26:17,440 --> 00:26:20,799
i mean since now we have a very good

00:26:19,279 --> 00:26:23,760
base that is established

00:26:20,799 --> 00:26:25,440
we expect a lot of innovation to happen

00:26:23,760 --> 00:26:27,440
in the orchestration plane itself

00:26:25,440 --> 00:26:28,480
because network automation is a subject

00:26:27,440 --> 00:26:30,960
that is very active

00:26:28,480 --> 00:26:32,559
in the industry today in including aml

00:26:30,960 --> 00:26:34,480
or with even without it

00:26:32,559 --> 00:26:36,240
so we expect a lot of innovations to

00:26:34,480 --> 00:26:38,640
happen and we hope that

00:26:36,240 --> 00:26:41,279
the testbed will be like a an enabler

00:26:38,640 --> 00:26:44,080
for such innovations to happen

00:26:41,279 --> 00:26:44,480
and so far whatever we have seen right

00:26:44,080 --> 00:26:46,960
the

00:26:44,480 --> 00:26:48,799
the journey it has been like a mutually

00:26:46,960 --> 00:26:50,799
beneficial one so we have been able to

00:26:48,799 --> 00:26:52,720
deliver some outcome to the testbed

00:26:50,799 --> 00:26:54,799
at the same time all the industry and

00:26:52,720 --> 00:26:56,320
the research partners who are involved

00:26:54,799 --> 00:26:57,039
in the development of the orchestration

00:26:56,320 --> 00:26:59,600
plan

00:26:57,039 --> 00:27:00,080
we have been able to get something from

00:26:59,600 --> 00:27:01,760
it

00:27:00,080 --> 00:27:03,520
so in that sense it was mutually

00:27:01,760 --> 00:27:06,559
beneficial and i hope this is

00:27:03,520 --> 00:27:07,200
a kind of i won't say a lesson or a case

00:27:06,559 --> 00:27:09,840
study

00:27:07,200 --> 00:27:10,720
but it can be looked up as an example of

00:27:09,840 --> 00:27:12,559
successful

00:27:10,720 --> 00:27:13,919
academia research and industry

00:27:12,559 --> 00:27:16,960
collaboration

00:27:13,919 --> 00:27:19,120
leveraging of open source in order to

00:27:16,960 --> 00:27:20,000
ah i mean realize a higher objective and

00:27:19,120 --> 00:27:23,520
delivers some

00:27:20,000 --> 00:27:24,159
tangible outcome thank you all thank you

00:27:23,520 --> 00:27:26,480
very much

00:27:24,159 --> 00:27:27,760
for your patience in listening and i

00:27:26,480 --> 00:27:30,000
would be very happy

00:27:27,760 --> 00:27:35,840
to take any questions that you may have

00:27:30,000 --> 00:27:35,840
thank you very much once again

00:27:40,720 --> 00:27:42,799

YouTube URL: https://www.youtube.com/watch?v=DScZ3AZSniA


