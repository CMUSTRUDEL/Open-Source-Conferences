Title: Enabling Autonomous Networks with ONAP - Lingli Deng, China Mobile
Publication date: 2020-10-28
Playlist: Open Networking & Edge Summit 2020
Description: 
	Enabling Autonomous Networks with ONAP - Lingli Deng, China Mobile
Captions: 
	00:00:01,520 --> 00:00:05,920
good morning good afternoon

00:00:03,199 --> 00:00:08,720
good evening everyone this is lingy from

00:00:05,920 --> 00:00:08,720
china mobile

00:00:08,960 --> 00:00:12,320
wherever you are i hope you are well and

00:00:11,920 --> 00:00:15,920
stay

00:00:12,320 --> 00:00:17,680
well thank you for attending this online

00:00:15,920 --> 00:00:20,000
presentation

00:00:17,680 --> 00:00:21,039
for the next few minutes i would like to

00:00:20,000 --> 00:00:23,760
share with you

00:00:21,039 --> 00:00:25,840
some of our vision and practice to

00:00:23,760 --> 00:00:28,960
enable autonomous networks

00:00:25,840 --> 00:00:31,439
with open source platforms including

00:00:28,960 --> 00:00:31,439
owneth

00:00:35,040 --> 00:00:40,559
in the content is mainly focused on two

00:00:38,160 --> 00:00:40,559
parts

00:00:43,520 --> 00:00:46,559
for the first part i would like to tell

00:00:45,680 --> 00:00:49,840
you

00:00:46,559 --> 00:00:50,960
that what we believe autonomous networks

00:00:49,840 --> 00:00:53,760
would be

00:00:50,960 --> 00:00:55,120
why open source platforms would help in

00:00:53,760 --> 00:00:58,399
enabling them

00:00:55,120 --> 00:01:01,440
and how

00:00:58,399 --> 00:01:01,440
from what

00:01:07,600 --> 00:01:12,880
during the last year there has been a

00:01:09,920 --> 00:01:16,080
lot of efforts from various spos

00:01:12,880 --> 00:01:19,280
industrial alliances and major companies

00:01:16,080 --> 00:01:21,040
to call for promotions of autonomous

00:01:19,280 --> 00:01:24,479
networks

00:01:21,040 --> 00:01:25,680
as you can see from this page a series

00:01:24,479 --> 00:01:28,560
of white papers

00:01:25,680 --> 00:01:29,920
what items have been published or

00:01:28,560 --> 00:01:32,960
android development

00:01:29,920 --> 00:01:32,960
to specify

00:01:33,119 --> 00:01:39,119
what autonomous networks are

00:01:36,159 --> 00:01:42,159
and how to classify the corresponding

00:01:39,119 --> 00:01:42,159
autonomy levels

00:01:43,520 --> 00:01:47,600
among them the white paper of a time

00:01:46,479 --> 00:01:52,320
networks

00:01:47,600 --> 00:01:54,240
published by tin forum in may 2019

00:01:52,320 --> 00:01:55,840
represents the typical industry

00:01:54,240 --> 00:01:59,040
consensus

00:01:55,840 --> 00:02:01,680
as we believe which will be leveraged in

00:01:59,040 --> 00:02:09,840
our further analysis here

00:02:01,680 --> 00:02:09,840
to provide you the basic background

00:02:12,319 --> 00:02:18,959
to summarize the 10-fold white paper

00:02:15,680 --> 00:02:18,959
includes four parts

00:02:19,200 --> 00:02:22,319
in addition to a series of retirement

00:02:21,280 --> 00:02:24,879
levels

00:02:22,319 --> 00:02:26,560
and the collection of newscasters it

00:02:24,879 --> 00:02:30,239
also provides

00:02:26,560 --> 00:02:30,239
a hierarchical architecture

00:02:31,680 --> 00:02:39,200
and a methodology it proposed to

00:02:34,560 --> 00:02:39,200
prioritize the use cases for deployment

00:02:39,519 --> 00:02:43,680
will business drivers acknowledge

00:02:42,480 --> 00:02:51,840
maturity

00:02:43,680 --> 00:02:51,840
and coverage scale consideration

00:02:51,920 --> 00:02:55,440
to better explain why open source has a

00:02:54,640 --> 00:02:58,480
role

00:02:55,440 --> 00:03:01,120
in enabling autonomous networks we have

00:02:58,480 --> 00:03:04,080
to take a closer look

00:03:01,120 --> 00:03:06,400
at its content to understand the

00:03:04,080 --> 00:03:09,040
remaining opening issues

00:03:06,400 --> 00:03:09,040
behind it

00:03:14,400 --> 00:03:19,840
the first perspective we take is from

00:03:16,879 --> 00:03:22,560
the autonomous levels

00:03:19,840 --> 00:03:24,480
as you can see from this diagram the

00:03:22,560 --> 00:03:28,640
goal for network autonomy

00:03:24,480 --> 00:03:28,640
is defined in two dimensions

00:03:28,799 --> 00:03:32,560
scenario specific functional requirement

00:03:31,519 --> 00:03:37,120
as the vertical

00:03:32,560 --> 00:03:40,879
axis and scenario coverage

00:03:37,120 --> 00:03:40,879
is the horizontal axis

00:03:42,799 --> 00:03:47,040
it is hence straightforward to envision

00:03:45,680 --> 00:03:50,879
a two-stage

00:03:47,040 --> 00:03:55,280
upgrade approach from level zero

00:03:50,879 --> 00:03:57,840
to level five in which the first stage

00:03:55,280 --> 00:03:59,120
is focused on improving the functional

00:03:57,840 --> 00:04:02,560
requirements

00:03:59,120 --> 00:04:03,360
in selected scenarios while the second

00:04:02,560 --> 00:04:06,480
stage

00:04:03,360 --> 00:04:11,840
is targeted to scale promotion

00:04:06,480 --> 00:04:11,840
and deployment to cover all scenario

00:04:12,560 --> 00:04:19,519
but is that all

00:04:16,000 --> 00:04:23,360
we see there are two remaining open

00:04:19,519 --> 00:04:25,120
issues first from the caverns

00:04:23,360 --> 00:04:28,479
perspective

00:04:25,120 --> 00:04:31,520
how to make the list from synaptic

00:04:28,479 --> 00:04:34,680
scenarios in stage one

00:04:31,520 --> 00:04:36,160
if all the solutions all the

00:04:34,680 --> 00:04:39,280
implementations or

00:04:36,160 --> 00:04:42,960
interfaces are developed

00:04:39,280 --> 00:04:46,639
in a back to back fashion

00:04:42,960 --> 00:04:50,960
to a common architecture to address

00:04:46,639 --> 00:04:50,960
all scenarios in phase 2.

00:04:52,000 --> 00:04:58,880
and that brings us to our second

00:04:55,680 --> 00:05:00,240
question so from the functional

00:04:58,880 --> 00:05:02,479
perspective

00:05:00,240 --> 00:05:03,600
is it possible to introduce common

00:05:02,479 --> 00:05:06,560
components

00:05:03,600 --> 00:05:08,720
in the earlier stage and scale their

00:05:06,560 --> 00:05:11,120
deployment later

00:05:08,720 --> 00:05:12,160
which would avoid fragmentation in first

00:05:11,120 --> 00:05:15,199
place

00:05:12,160 --> 00:05:25,600
and ensure convergence to ease

00:05:15,199 --> 00:05:28,639
scale adoption later

00:05:25,600 --> 00:05:32,160
and the second perspective is from the

00:05:28,639 --> 00:05:32,160
hierarchical architecture

00:05:32,400 --> 00:05:39,199
well it is recommended to evolve

00:05:35,520 --> 00:05:42,639
resource management in the bottom

00:05:39,199 --> 00:05:46,080
into autonomous domains

00:05:42,639 --> 00:05:50,400
as the basis for network

00:05:46,080 --> 00:05:53,680
and business automation on the top

00:05:50,400 --> 00:05:56,720
in other words autonomous domains assume

00:05:53,680 --> 00:05:58,639
more close trust relationships and

00:05:56,720 --> 00:05:59,759
further delegation from network

00:05:58,639 --> 00:06:04,160
operators

00:05:59,759 --> 00:06:07,360
or service providers to device vendors

00:06:04,160 --> 00:06:10,160
which might not be applicable

00:06:07,360 --> 00:06:11,840
to network operators who run their own

00:06:10,160 --> 00:06:16,479
network operations

00:06:11,840 --> 00:06:21,360
for efficiency for multiventure business

00:06:16,479 --> 00:06:21,360
or just due to local regulation reason

00:06:21,600 --> 00:06:28,160
meanwhile the one-way linear dependency

00:06:25,440 --> 00:06:30,720
from network and business layers to

00:06:28,160 --> 00:06:34,880
autonomous domains in the bottom

00:06:30,720 --> 00:06:38,240
also raises risks for uncertainty

00:06:34,880 --> 00:06:38,240
and complexity

00:06:42,560 --> 00:06:46,080
to summarize our analysis in addition to

00:06:45,520 --> 00:06:48,800
the open

00:06:46,080 --> 00:06:50,400
issues identifying regarding to network

00:06:48,800 --> 00:06:53,919
autonomous levels

00:06:50,400 --> 00:06:56,880
and hierarchical architecture

00:06:53,919 --> 00:07:00,080
for prioritization methodology which is

00:06:56,880 --> 00:07:02,240
directly applied to each use case

00:07:00,080 --> 00:07:03,520
it is also difficult to achieve

00:07:02,240 --> 00:07:06,160
convergence

00:07:03,520 --> 00:07:07,599
or identify common interests among

00:07:06,160 --> 00:07:10,880
network operators

00:07:07,599 --> 00:07:14,720
or service providers who

00:07:10,880 --> 00:07:17,840
are different in types of

00:07:14,720 --> 00:07:21,280
businesses they're running

00:07:17,840 --> 00:07:24,880
and who are also different in the

00:07:21,280 --> 00:07:27,759
graphical areas

00:07:24,880 --> 00:07:30,400
they're operating and there are

00:07:27,759 --> 00:07:33,919
different types of

00:07:30,400 --> 00:07:37,919
use cases priorities because they are

00:07:33,919 --> 00:07:37,919
serving different types of customers

00:07:38,720 --> 00:07:43,680
and last but not least without a

00:07:41,840 --> 00:07:47,759
generalized approach

00:07:43,680 --> 00:07:50,720
it is not clear how to enable use cases

00:07:47,759 --> 00:07:50,960
new use cases that mean in a sustainable

00:07:50,720 --> 00:07:59,840
and

00:07:50,960 --> 00:07:59,840
future proof manner

00:08:01,599 --> 00:08:07,680
now it is time for us to review

00:08:04,960 --> 00:08:09,120
what we think on how open source would

00:08:07,680 --> 00:08:12,639
help in solving these

00:08:09,120 --> 00:08:15,120
events in the next show

00:08:12,639 --> 00:08:17,759
we believe that open source will be of

00:08:15,120 --> 00:08:20,160
help in

00:08:17,759 --> 00:08:21,440
firstly setting up a common functional

00:08:20,160 --> 00:08:24,160
architecture

00:08:21,440 --> 00:08:25,039
identifying a group of common id

00:08:24,160 --> 00:08:28,800
building blocks

00:08:25,039 --> 00:08:32,080
in the early stage and secondly

00:08:28,800 --> 00:08:34,399
refining the hierarchical architecture

00:08:32,080 --> 00:08:37,200
or layering attractor

00:08:34,399 --> 00:08:39,039
and helping the industry converge the

00:08:37,200 --> 00:08:43,120
cross-layer interfaces

00:08:39,039 --> 00:08:48,399
from various domains various operators

00:08:43,120 --> 00:08:51,519
and certainly providing a future proof

00:08:48,399 --> 00:08:52,560
way forward in automating a developed

00:08:51,519 --> 00:08:55,760
loop

00:08:52,560 --> 00:08:58,640
and providing the basic tooling for

00:08:55,760 --> 00:08:59,839
open autonomous network application

00:08:58,640 --> 00:09:08,320
certification

00:08:59,839 --> 00:09:10,959
testing deployment

00:09:08,320 --> 00:09:13,440
first of all for guys who are already

00:09:10,959 --> 00:09:16,640
familiar with odf functional requirement

00:09:13,440 --> 00:09:19,519
in these use cases so far it is not

00:09:16,640 --> 00:09:22,720
surprising to figure out

00:09:19,519 --> 00:09:24,000
that through the unified abstraction a

00:09:22,720 --> 00:09:27,680
uniformed

00:09:24,000 --> 00:09:31,440
way of data collection control

00:09:27,680 --> 00:09:32,480
and management the common functional

00:09:31,440 --> 00:09:35,600
requirements

00:09:32,480 --> 00:09:36,800
architecture and standard interfaces can

00:09:35,600 --> 00:09:38,880
be formed

00:09:36,800 --> 00:09:41,200
among various autonomous network use

00:09:38,880 --> 00:09:43,440
cases from different domains or

00:09:41,200 --> 00:09:47,200
scenarios

00:09:43,440 --> 00:09:50,640
the diagram on the left

00:09:47,200 --> 00:09:54,080
shows a preliminary analysis buyers

00:09:50,640 --> 00:09:57,120
for the functional blocks of different

00:09:54,080 --> 00:10:00,959
autonomous levels in the first stage

00:09:57,120 --> 00:10:04,160
of the path and the table

00:10:00,959 --> 00:10:06,640
on the right shows the mapping between

00:10:04,160 --> 00:10:10,000
these functional blocks

00:10:06,640 --> 00:10:11,200
and relevant sdos who are currently

00:10:10,000 --> 00:10:14,320
working on

00:10:11,200 --> 00:10:15,920
their specifications as well as open

00:10:14,320 --> 00:10:20,399
source communities

00:10:15,920 --> 00:10:20,399
working on their implementation

00:10:21,600 --> 00:10:25,279
due to the existence of the vision

00:10:24,000 --> 00:10:28,160
general functional

00:10:25,279 --> 00:10:28,160
architecture

00:10:31,279 --> 00:10:34,959
and it opens with community reference

00:10:33,360 --> 00:10:37,680
implementation

00:10:34,959 --> 00:10:38,320
it is recommended that in the early

00:10:37,680 --> 00:10:41,760
stage of

00:10:38,320 --> 00:10:45,600
network autonomy network operators

00:10:41,760 --> 00:10:48,800
should join the head improperly involved

00:10:45,600 --> 00:10:52,399
in designing a general functional

00:10:48,800 --> 00:10:56,000
platform architecture standardizes

00:10:52,399 --> 00:10:59,440
external interaction interfaces and

00:10:56,000 --> 00:11:03,360
internal functional modularity

00:10:59,440 --> 00:11:06,800
diagram or division and further refer

00:11:03,360 --> 00:11:09,600
to other open source communities

00:11:06,800 --> 00:11:11,279
for sharing the advanced latest

00:11:09,600 --> 00:11:14,560
technology

00:11:11,279 --> 00:11:17,680
which would be more helpful

00:11:14,560 --> 00:11:19,200
for us to moving forward to the

00:11:17,680 --> 00:11:22,560
realization

00:11:19,200 --> 00:11:23,519
of large-scale promotions of functional

00:11:22,560 --> 00:11:27,200
modules

00:11:23,519 --> 00:11:30,000
or career capabilities which are

00:11:27,200 --> 00:11:32,880
interpretable with cross-layer and

00:11:30,000 --> 00:11:35,600
cross-venture scenarios

00:11:32,880 --> 00:11:37,000
and ultimately helping us in achieving

00:11:35,600 --> 00:11:43,839
the long-term

00:11:37,000 --> 00:11:43,839
cross-industrial convergence goal

00:11:47,519 --> 00:11:51,040
our second observation is that at

00:11:50,399 --> 00:11:54,079
present

00:11:51,040 --> 00:11:57,839
the industry actually do

00:11:54,079 --> 00:12:02,240
have two typical autonomy-level target

00:11:57,839 --> 00:12:02,240
positioning ideas for network elements

00:12:02,959 --> 00:12:09,600
for one site the recommendations

00:12:06,079 --> 00:12:11,920
from the tn forum white paper indicates

00:12:09,600 --> 00:12:13,920
that the upper layer autonomy is

00:12:11,920 --> 00:12:17,519
completely dependent

00:12:13,920 --> 00:12:20,240
on the bottom layer autonomous domains

00:12:17,519 --> 00:12:21,440
which means the interfaces business

00:12:20,240 --> 00:12:23,200
logic

00:12:21,440 --> 00:12:26,639
and corresponding coordination

00:12:23,200 --> 00:12:30,079
mechanisms within the existing rpm layer

00:12:26,639 --> 00:12:33,440
must be adapted accordingly after the

00:12:30,079 --> 00:12:35,920
bottom layer changes

00:12:33,440 --> 00:12:37,440
which is under the assumption that the

00:12:35,920 --> 00:12:40,720
network operator

00:12:37,440 --> 00:12:42,720
fully trust and delegate their

00:12:40,720 --> 00:12:44,800
operational responsibilities of

00:12:42,720 --> 00:12:47,760
autonomous network elements

00:12:44,800 --> 00:12:50,399
to its vendors who are writing the

00:12:47,760 --> 00:12:50,399
software

00:12:51,440 --> 00:12:55,040
and the assumption of trust and linear

00:12:53,839 --> 00:12:58,880
dependency

00:12:55,040 --> 00:13:03,120
makes the development cycle

00:12:58,880 --> 00:13:07,839
of quite long and the adoption

00:13:03,120 --> 00:13:07,839
add on

00:13:08,160 --> 00:13:12,160
for the other side standard

00:13:10,880 --> 00:13:15,040
organizations

00:13:12,160 --> 00:13:17,760
and open source communities such as oran

00:13:15,040 --> 00:13:17,760
assumes

00:13:17,839 --> 00:13:22,160
autonomous level 2 for the network

00:13:20,399 --> 00:13:25,040
elements layer

00:13:22,160 --> 00:13:26,079
and the other layer would be responsible

00:13:25,040 --> 00:13:28,800
for further

00:13:26,079 --> 00:13:29,920
implement higher autonomy and

00:13:28,800 --> 00:13:33,519
coordination

00:13:29,920 --> 00:13:34,399
as required despite the fact that in

00:13:33,519 --> 00:13:36,959
this case

00:13:34,399 --> 00:13:37,680
the operation and maintenance management

00:13:36,959 --> 00:13:40,240
layer

00:13:37,680 --> 00:13:42,720
can build common functions while

00:13:40,240 --> 00:13:46,320
enhancing the existing data and control

00:13:42,720 --> 00:13:48,959
interfaces of the network elements

00:13:46,320 --> 00:13:52,880
thus with the potential of shortening

00:13:48,959 --> 00:13:55,920
the cycle of retrieving the final goal

00:13:52,880 --> 00:13:59,680
the fact is the standard

00:13:55,920 --> 00:14:03,120
and related project's majority

00:13:59,680 --> 00:14:06,000
is rather low as the traditional device

00:14:03,120 --> 00:14:07,440
manufacturers are not actively involved

00:14:06,000 --> 00:14:10,160
in this option

00:14:07,440 --> 00:14:11,519
and the targeted scenarios are currently

00:14:10,160 --> 00:14:14,639
rather limited

00:14:11,519 --> 00:14:17,839
to rural deployments and not addressing

00:14:14,639 --> 00:14:17,839
massive scale deployment

00:14:19,760 --> 00:14:25,760
the potentially third option

00:14:22,800 --> 00:14:27,600
that might be provided by onap with

00:14:25,760 --> 00:14:30,800
these existing use cases

00:14:27,600 --> 00:14:34,079
is that the network element layer

00:14:30,800 --> 00:14:37,120
provides additional analysis of

00:14:34,079 --> 00:14:41,519
applications and device specific

00:14:37,120 --> 00:14:42,000
knowledge while the lifecycle management

00:14:41,519 --> 00:14:45,040
of

00:14:42,000 --> 00:14:47,440
these analysis applications

00:14:45,040 --> 00:14:48,959
and the integration of knowledge of

00:14:47,440 --> 00:14:52,079
different vendors

00:14:48,959 --> 00:14:54,160
could be implemented by

00:14:52,079 --> 00:14:57,440
the operating supporting system

00:14:54,160 --> 00:15:00,880
providing a common infrastructure

00:14:57,440 --> 00:15:01,760
which could help the potential to pull

00:15:00,880 --> 00:15:04,800
together

00:15:01,760 --> 00:15:05,440
the expertise from both sides and

00:15:04,800 --> 00:15:08,560
provide

00:15:05,440 --> 00:15:13,839
a few future proof way

00:15:08,560 --> 00:15:13,839
for new applications of new use cases

00:15:15,279 --> 00:15:19,279
so for network operators kicking off

00:15:17,519 --> 00:15:20,399
their price on achieving network

00:15:19,279 --> 00:15:22,560
autonomy

00:15:20,399 --> 00:15:26,000
it is therefore recommended to taking

00:15:22,560 --> 00:15:29,199
into consideration

00:15:26,000 --> 00:15:31,199
from factors like the actual deployment

00:15:29,199 --> 00:15:34,959
requirements of the company

00:15:31,199 --> 00:15:40,480
and clearly identify their preferred

00:15:34,959 --> 00:15:43,040
way of collaboration with their partners

00:15:40,480 --> 00:15:44,079
whether they choose autonomous devices

00:15:43,040 --> 00:15:48,800
whitewax

00:15:44,079 --> 00:15:48,800
devices or collaborative devices

00:15:49,600 --> 00:15:56,160
it is important to specify the goal of

00:15:53,040 --> 00:15:56,720
layered collaboration interfaces in

00:15:56,160 --> 00:16:00,800
different

00:15:56,720 --> 00:16:04,320
stages along the way in different

00:16:00,800 --> 00:16:07,440
you know choices

00:16:04,320 --> 00:16:09,120
and it will be extremely helpful for

00:16:07,440 --> 00:16:11,519
them to make decisions

00:16:09,120 --> 00:16:12,800
and make and keep the pace of moving

00:16:11,519 --> 00:16:15,519
forward

00:16:12,800 --> 00:16:16,560
through open industrial collaboration

00:16:15,519 --> 00:16:19,519
platform

00:16:16,560 --> 00:16:22,079
like lfn by promoting the standard

00:16:19,519 --> 00:16:25,120
organization that opens your community

00:16:22,079 --> 00:16:29,519
to formulate and verify

00:16:25,120 --> 00:16:29,519
related interfaces processes

00:16:29,759 --> 00:16:37,600
and join hands for accelerate innovation

00:16:34,399 --> 00:16:42,320
verify the implementation

00:16:37,600 --> 00:16:42,320
and training the talent as needed

00:16:48,560 --> 00:16:54,959
the third expectation is that

00:16:51,920 --> 00:16:56,720
the difficulty of introducing devops

00:16:54,959 --> 00:17:00,079
for different autonomous network

00:16:56,720 --> 00:17:02,000
elements or application will vary

00:17:00,079 --> 00:17:04,959
if we take different options as

00:17:02,000 --> 00:17:08,319
mentioned above

00:17:04,959 --> 00:17:11,039
for autonomous device of option

00:17:08,319 --> 00:17:12,799
horizontal evaluation for a single

00:17:11,039 --> 00:17:15,919
network element venture

00:17:12,799 --> 00:17:16,240
is clearly challenging due to the lack

00:17:15,919 --> 00:17:19,520
of

00:17:16,240 --> 00:17:20,400
cross organizational continuous

00:17:19,520 --> 00:17:23,439
integration

00:17:20,400 --> 00:17:27,439
continuous deployment tool training or

00:17:23,439 --> 00:17:27,439
corresponding management processes

00:17:28,160 --> 00:17:35,039
and horizontal evaluation for multiple

00:17:32,000 --> 00:17:38,480
vendors targeting at a specific scenario

00:17:35,039 --> 00:17:41,520
is also facing the challenge due to the

00:17:38,480 --> 00:17:42,559
lack of clearly specified and well

00:17:41,520 --> 00:17:46,880
recognized

00:17:42,559 --> 00:17:51,360
benchmarking standards

00:17:46,880 --> 00:17:54,559
for collaborative devices it is yet

00:17:51,360 --> 00:17:57,120
needed to consider the complexity of

00:17:54,559 --> 00:17:58,480
multiventure coordination between

00:17:57,120 --> 00:18:01,679
network element

00:17:58,480 --> 00:18:02,559
vendors and the platform vendors who

00:18:01,679 --> 00:18:06,080
might have

00:18:02,559 --> 00:18:10,080
independence release cadence

00:18:06,080 --> 00:18:12,799
and need to conduct pairing testing

00:18:10,080 --> 00:18:14,080
which means the synchronization

00:18:12,799 --> 00:18:16,240
iterative triggering

00:18:14,080 --> 00:18:17,679
of multiple components from different

00:18:16,240 --> 00:18:21,600
vendors

00:18:17,679 --> 00:18:24,559
for example applications knowledge

00:18:21,600 --> 00:18:24,559
and devices

00:18:25,840 --> 00:18:31,360
and for white box devices option

00:18:28,880 --> 00:18:32,880
which is the most challenging one

00:18:31,360 --> 00:18:35,440
because

00:18:32,880 --> 00:18:37,039
the network elements vendor and

00:18:35,440 --> 00:18:40,000
application vendors

00:18:37,039 --> 00:18:42,799
would form a multiple to multiple

00:18:40,000 --> 00:18:45,440
relation in this case

00:18:42,799 --> 00:18:47,919
when coordinating and conducting pairing

00:18:45,440 --> 00:18:47,919
testing

00:18:50,160 --> 00:18:53,840
and it is hence recommended

00:18:54,480 --> 00:19:02,080
to accelerate the development of both

00:18:58,080 --> 00:19:04,960
use case-specific metric definitions

00:19:02,080 --> 00:19:07,120
and benchmarking standards as well as

00:19:04,960 --> 00:19:09,559
building a general development

00:19:07,120 --> 00:19:10,880
automation tooling and cross

00:19:09,559 --> 00:19:14,000
organizational

00:19:10,880 --> 00:19:14,000
management process

00:19:21,919 --> 00:19:25,520
the grid summarize to address the above

00:19:24,880 --> 00:19:27,679
mentioned

00:19:25,520 --> 00:19:28,880
remaining open issues for network

00:19:27,679 --> 00:19:33,120
autonomy

00:19:28,880 --> 00:19:35,440
we are envisioning a three-stage part

00:19:33,120 --> 00:19:36,480
for network operators to achieve the

00:19:35,440 --> 00:19:39,520
ultimate goal

00:19:36,480 --> 00:19:42,400
of four network autonomy

00:19:39,520 --> 00:19:42,720
which is to do functional enhancement

00:19:42,400 --> 00:19:45,840
for

00:19:42,720 --> 00:19:47,280
specific high priority cases at the

00:19:45,840 --> 00:19:50,480
beginning

00:19:47,280 --> 00:19:53,039
stitch end-to-end cases later

00:19:50,480 --> 00:19:55,520
and to arrive industrial convergence for

00:19:53,039 --> 00:19:59,120
the best in the end

00:19:55,520 --> 00:20:01,600
during which the real key differentiator

00:19:59,120 --> 00:20:05,039
to ensure the success in the last

00:20:01,600 --> 00:20:06,240
stage is to build and verify a common

00:20:05,039 --> 00:20:08,960
architecture

00:20:06,240 --> 00:20:10,159
across different autonomous autonomy

00:20:08,960 --> 00:20:13,440
levels

00:20:10,159 --> 00:20:18,799
standardize cross-layer interfaces

00:20:13,440 --> 00:20:18,799
and drive sdo alignment in the earlier

00:20:18,840 --> 00:20:23,760
stages

00:20:20,320 --> 00:20:27,200
in particular to leverage existing open

00:20:23,760 --> 00:20:32,080
industrial platforms to explore

00:20:27,200 --> 00:20:32,080
converge and verify cross-layer

00:20:32,840 --> 00:20:35,840
interfaces

00:20:36,880 --> 00:20:44,080
which would be later used

00:20:40,240 --> 00:20:45,840
in both evaluate majority from open

00:20:44,080 --> 00:20:50,559
source communities

00:20:45,840 --> 00:20:53,840
and majority from related standards

00:20:50,559 --> 00:20:55,200
last but not least to drive magic and

00:20:53,840 --> 00:20:58,240
benchmarking standard

00:20:55,200 --> 00:21:01,600
development for known use cases

00:20:58,240 --> 00:21:05,120
and build general devops tooling and

00:21:01,600 --> 00:21:07,760
processes for our new use cases to come

00:21:05,120 --> 00:21:07,760
in the future

00:21:11,280 --> 00:21:16,240
with the previous vision in mind channel

00:21:14,320 --> 00:21:19,760
mobile has been working

00:21:16,240 --> 00:21:22,080
on relevant aspects in linux foundation

00:21:19,760 --> 00:21:24,960
networking

00:21:22,080 --> 00:21:26,880
in particular we believe that the

00:21:24,960 --> 00:21:29,760
following three subgroups

00:21:26,880 --> 00:21:30,480
are of particular interest in our

00:21:29,760 --> 00:21:33,440
proposed

00:21:30,480 --> 00:21:33,440
way forward

00:21:36,799 --> 00:21:41,919
euag to do

00:21:39,840 --> 00:21:43,039
requirement mining for strategy

00:21:41,919 --> 00:21:46,240
convergence

00:21:43,039 --> 00:21:50,080
from network operators

00:21:46,240 --> 00:21:52,559
onap or other technical projects

00:21:50,080 --> 00:21:55,520
to build a reference implementation for

00:21:52,559 --> 00:21:59,520
common functional architecture

00:21:55,520 --> 00:22:02,640
and ovp to provide devops drilling

00:21:59,520 --> 00:22:06,159
benchmarking and certification procedure

00:22:02,640 --> 00:22:08,880
the network autonomy solution

00:22:06,159 --> 00:22:09,600
for the first part a network operator

00:22:08,880 --> 00:22:12,880
survey

00:22:09,600 --> 00:22:15,919
is being composed inside euag

00:22:12,880 --> 00:22:18,480
to solicit network automation

00:22:15,919 --> 00:22:20,159
and autonomy status requirement and

00:22:18,480 --> 00:22:22,880
strategy

00:22:20,159 --> 00:22:23,760
with the hope to reach a converged

00:22:22,880 --> 00:22:26,240
version

00:22:23,760 --> 00:22:29,280
and service input to corresponding

00:22:26,240 --> 00:22:29,280
technical groups

00:22:33,760 --> 00:22:37,520
for the second part the objective is to

00:22:36,799 --> 00:22:40,080
build an

00:22:37,520 --> 00:22:42,400
open source reference stack for the

00:22:40,080 --> 00:22:47,120
column architecture

00:22:42,400 --> 00:22:47,120
which would serve two voted purposes

00:22:47,600 --> 00:22:54,480
first to provide a common context and

00:22:50,799 --> 00:22:56,559
guide telecom communication professional

00:22:54,480 --> 00:22:59,280
standards organizations

00:22:56,559 --> 00:23:00,240
to unify the problem description and

00:22:59,280 --> 00:23:02,640
requirement

00:23:00,240 --> 00:23:04,000
definition of different application

00:23:02,640 --> 00:23:07,760
scenarios

00:23:04,000 --> 00:23:09,919
hence promoting inter industrial

00:23:07,760 --> 00:23:12,880
convergence

00:23:09,919 --> 00:23:13,760
second to reduce the field knowledge

00:23:12,880 --> 00:23:17,200
barrier

00:23:13,760 --> 00:23:18,559
for other it industry experts or open

00:23:17,200 --> 00:23:21,679
source communities

00:23:18,559 --> 00:23:25,600
to participate in this innovation and

00:23:21,679 --> 00:23:28,320
migration parts for network autonomy

00:23:25,600 --> 00:23:30,480
hence promoting cross-industrial

00:23:28,320 --> 00:23:34,480
convergence

00:23:30,480 --> 00:23:36,480
in order to do that we need first

00:23:34,480 --> 00:23:37,600
analyze the general architectural

00:23:36,480 --> 00:23:40,400
requirements

00:23:37,600 --> 00:23:42,480
corresponding to autonomous network

00:23:40,400 --> 00:23:47,360
classification standards

00:23:42,480 --> 00:23:47,360
and their open source community mapping

00:23:48,960 --> 00:23:53,919
lack typical course domain application

00:23:52,880 --> 00:23:56,559
scenarios

00:23:53,919 --> 00:23:57,360
and guide the open source community to

00:23:56,559 --> 00:23:59,600
complete

00:23:57,360 --> 00:24:00,960
the reference implementation prototype

00:23:59,600 --> 00:24:04,400
verification

00:24:00,960 --> 00:24:06,799
of the general architecture third

00:24:04,400 --> 00:24:08,000
promote telecommunications standard

00:24:06,799 --> 00:24:10,960
organizations

00:24:08,000 --> 00:24:12,480
to unify their core data collection

00:24:10,960 --> 00:24:15,200
analysis service

00:24:12,480 --> 00:24:16,159
close to policies enter module

00:24:15,200 --> 00:24:20,320
definition

00:24:16,159 --> 00:24:22,960
based on a common architecture

00:24:20,320 --> 00:24:24,559
and we believe with the complementary

00:24:22,960 --> 00:24:27,600
open source networks

00:24:24,559 --> 00:24:30,799
as well as open source ai platform

00:24:27,600 --> 00:24:32,240
onap would provide the basis for

00:24:30,799 --> 00:24:34,240
constructing such

00:24:32,240 --> 00:24:37,440
open source reference stack for

00:24:34,240 --> 00:24:37,440
autonomous network

00:24:38,159 --> 00:24:44,400
and since these earlier releases

00:24:41,360 --> 00:24:46,360
onap has been building and enhancing its

00:24:44,400 --> 00:24:49,360
use cases for

00:24:46,360 --> 00:24:51,600
self-organization network the autonomous

00:24:49,360 --> 00:24:52,880
network cases for radio access network

00:24:51,600 --> 00:24:55,600
domain

00:24:52,880 --> 00:24:57,039
and with the development of 3gbp

00:24:55,600 --> 00:24:59,520
specification

00:24:57,039 --> 00:25:01,279
we are also working with steep urban

00:24:59,520 --> 00:25:03,520
core network projector

00:25:01,279 --> 00:25:04,480
which has planned to use onap as its

00:25:03,520 --> 00:25:07,679
orchestrator

00:25:04,480 --> 00:25:09,520
for later releases to further extend its

00:25:07,679 --> 00:25:10,720
goal with core network autonomous

00:25:09,520 --> 00:25:13,679
network cases

00:25:10,720 --> 00:25:16,080
like ups production with extensions to

00:25:13,679 --> 00:25:16,080
owner

00:25:16,640 --> 00:25:23,600
for standardization after the sa5

00:25:20,400 --> 00:25:26,000
work item on data collection integration

00:25:23,600 --> 00:25:27,520
we have been lately working on policy

00:25:26,000 --> 00:25:30,559
management use cases

00:25:27,520 --> 00:25:32,640
standard analysis and comparison

00:25:30,559 --> 00:25:34,559
with the purpose of understanding their

00:25:32,640 --> 00:25:37,279
specific requirements

00:25:34,559 --> 00:25:38,320
if any with the common cultural

00:25:37,279 --> 00:25:42,559
architecture

00:25:38,320 --> 00:25:45,279
provided by onap

00:25:42,559 --> 00:25:47,120
and there is the demo of this common

00:25:45,279 --> 00:25:50,080
architecture with onap

00:25:47,120 --> 00:25:51,120
and other complementary components which

00:25:50,080 --> 00:25:57,840
is being shown

00:25:51,120 --> 00:25:57,840
online during this event

00:26:01,600 --> 00:26:07,480
for the ovp part the objective is

00:26:04,960 --> 00:26:09,600
to support the construction of the

00:26:07,480 --> 00:26:12,720
inter-organizational develop

00:26:09,600 --> 00:26:14,400
system and the development of open

00:26:12,720 --> 00:26:17,360
source tools

00:26:14,400 --> 00:26:20,640
for software-based networks and network

00:26:17,360 --> 00:26:20,640
autonomy applications

00:26:21,039 --> 00:26:27,600
the good news is that we have already

00:26:24,159 --> 00:26:30,640
a very good basis from the existing

00:26:27,600 --> 00:26:34,080
vnf autonomic

00:26:30,640 --> 00:26:35,919
automated testing framework and a well

00:26:34,080 --> 00:26:38,799
established and practiced

00:26:35,919 --> 00:26:41,440
certification process from the lfn

00:26:38,799 --> 00:26:41,440
community

00:26:41,520 --> 00:26:44,799
but the best news is that we're still

00:26:43,919 --> 00:26:47,840
lacking

00:26:44,799 --> 00:26:48,400
a clearly specified and well established

00:26:47,840 --> 00:26:51,440
way

00:26:48,400 --> 00:26:55,279
to do cross-organizational

00:26:51,440 --> 00:26:55,279
ci ctcd

00:26:56,400 --> 00:26:59,679
and still remaining the most challenging

00:26:58,960 --> 00:27:02,400
part

00:26:59,679 --> 00:27:05,200
is the benchmarking for network autonomy

00:27:02,400 --> 00:27:09,679
applications devices or solutions

00:27:05,200 --> 00:27:12,159
because there is none open data

00:27:09,679 --> 00:27:14,799
or standard metric or benchmarking

00:27:12,159 --> 00:27:14,799
definition

00:27:16,000 --> 00:27:20,559
well we believe the benchmarking part

00:27:18,080 --> 00:27:24,640
requires more sdo effort

00:27:20,559 --> 00:27:27,120
with field knowledge from city experts

00:27:24,640 --> 00:27:29,120
we started already in building a

00:27:27,120 --> 00:27:32,799
preliminary demo

00:27:29,120 --> 00:27:35,600
of ci ctcd with onap

00:27:32,799 --> 00:27:37,840
which is being shown during this event

00:27:35,600 --> 00:27:37,840
too

00:27:44,399 --> 00:27:48,799
you conclude let me first do a quick

00:27:47,679 --> 00:27:51,760
recap

00:27:48,799 --> 00:27:53,440
we talked about industrial phenomenon or

00:27:51,760 --> 00:27:56,320
network autonomy

00:27:53,440 --> 00:27:57,200
analyze these remaining issues and

00:27:56,320 --> 00:27:59,679
discuss

00:27:57,200 --> 00:28:00,840
how open source platforms could help in

00:27:59,679 --> 00:28:04,159
solving these

00:28:00,840 --> 00:28:07,360
issues followed by a brief introduction

00:28:04,159 --> 00:28:08,960
to some of our ongoing work in relevant

00:28:07,360 --> 00:28:11,039
group

00:28:08,960 --> 00:28:12,240
and i would like to conclude this

00:28:11,039 --> 00:28:17,840
presentation

00:28:12,240 --> 00:28:17,840
with a call for action

00:28:21,440 --> 00:28:27,679
is a famous chinese saying girls

00:28:24,640 --> 00:28:32,159
one person works fast well

00:28:27,679 --> 00:28:35,679
a group of people work much further

00:28:32,159 --> 00:28:39,039
we from china mobile are firm believers

00:28:35,679 --> 00:28:42,159
in industrial collaboration and

00:28:39,039 --> 00:28:45,520
it is always our theorist hope to go

00:28:42,159 --> 00:28:48,399
further with all of our fellow members

00:28:45,520 --> 00:28:49,520
and contributors in this community along

00:28:48,399 --> 00:28:52,159
the parts

00:28:49,520 --> 00:28:54,720
from network automation to network

00:28:52,159 --> 00:28:59,039
autonomy

00:28:54,720 --> 00:29:13,840
and you know how to reachers

00:28:59,039 --> 00:29:13,840
thank you for your attention

00:29:36,000 --> 00:29:38,080

YouTube URL: https://www.youtube.com/watch?v=aquX3N26FHg


