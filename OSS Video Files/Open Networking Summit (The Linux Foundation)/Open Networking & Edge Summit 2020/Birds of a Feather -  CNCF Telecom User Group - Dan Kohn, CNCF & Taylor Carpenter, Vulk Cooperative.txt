Title: Birds of a Feather -  CNCF Telecom User Group - Dan Kohn, CNCF & Taylor Carpenter, Vulk Cooperative
Publication date: 2020-10-28
Playlist: Open Networking & Edge Summit 2020
Description: 
	Birds of a Feather -  CNCF Telecom User Group - Dan Kohn, Cloud Native Computing Foundation & Taylor Carpenter, Vulk Cooperative
Captions: 
	00:00:14,920 --> 00:00:20,000
welcome to

00:00:16,880 --> 00:00:23,279
this cncf uh session

00:00:20,000 --> 00:00:24,320
on an introduction to telecom

00:00:23,279 --> 00:00:27,359
initiatives from the

00:00:24,320 --> 00:00:30,560
cloud native computing foundation i'm

00:00:27,359 --> 00:00:34,239
taylor carpenter owner

00:00:30,560 --> 00:00:37,360
and a software cooperative vault co-op

00:00:34,239 --> 00:00:39,600
i've been using linux for over 20 years

00:00:37,360 --> 00:00:40,559
and an open source advocate that whole

00:00:39,600 --> 00:00:43,600
time

00:00:40,559 --> 00:00:46,879
and working with cncf

00:00:43,600 --> 00:00:48,160
lasts three years helping with cicd

00:00:46,879 --> 00:00:52,800
devops

00:00:48,160 --> 00:00:52,800
cloud native networking and other items

00:00:52,879 --> 00:00:57,360
if you'd like to continue this

00:00:55,520 --> 00:01:00,800
conversation for this one es

00:00:57,360 --> 00:01:03,840
session um

00:01:00,800 --> 00:01:07,280
we'll be on the cloud native networking

00:01:03,840 --> 00:01:07,280
slack channel and on es

00:01:07,680 --> 00:01:15,360
and these slides should be available in

00:01:12,080 --> 00:01:18,400
skedge after the session if they're not

00:01:15,360 --> 00:01:22,479
but they're available right now

00:01:18,400 --> 00:01:25,600
priyanka sharma general manager of

00:01:22,479 --> 00:01:28,960
cncf is also here

00:01:25,600 --> 00:01:30,320
and if you have questions and during the

00:01:28,960 --> 00:01:33,119
session please

00:01:30,320 --> 00:01:34,880
press the little q a button and add them

00:01:33,119 --> 00:01:38,840
in

00:01:34,880 --> 00:01:41,759
and lucina product owner on on

00:01:38,840 --> 00:01:42,560
the some of these initiatives cnf

00:01:41,759 --> 00:01:44,880
conformance

00:01:42,560 --> 00:01:46,799
cnf testbed and owner and well

00:01:44,880 --> 00:01:49,040
cooperatives also here to help answer

00:01:46,799 --> 00:01:51,439
questions

00:01:49,040 --> 00:01:53,280
so today we're going to go over the

00:01:51,439 --> 00:01:54,960
different initiatives

00:01:53,280 --> 00:01:57,040
we'll talk about some of the driving

00:01:54,960 --> 00:02:00,399
factors

00:01:57,040 --> 00:02:01,840
and then dig in a little bit to each one

00:02:00,399 --> 00:02:05,040
of the initiatives

00:02:01,840 --> 00:02:07,600
talk about how you can get involved and

00:02:05,040 --> 00:02:08,640
have some time to go over any q a items

00:02:07,600 --> 00:02:14,000
we didn't

00:02:08,640 --> 00:02:14,000
go into during the the live session

00:02:15,440 --> 00:02:22,000
all right so the cloud native

00:02:18,879 --> 00:02:25,120
landscape is extensive as you can

00:02:22,000 --> 00:02:28,480
see here dan's

00:02:25,120 --> 00:02:29,200
had a funny tweet about it where some

00:02:28,480 --> 00:02:31,599
folks are

00:02:29,200 --> 00:02:34,480
find it useful some overwhelming some

00:02:31,599 --> 00:02:36,879
call it the hellscape

00:02:34,480 --> 00:02:37,519
the main point here would be there's a

00:02:36,879 --> 00:02:40,560
lot of

00:02:37,519 --> 00:02:43,599
projects technology groups that are

00:02:40,560 --> 00:02:47,360
building cloud native software

00:02:43,599 --> 00:02:48,800
and trying to help others so cncf would

00:02:47,360 --> 00:02:52,000
like to help

00:02:48,800 --> 00:02:52,959
service providers and developers in the

00:02:52,000 --> 00:02:56,160
telecom domain

00:02:52,959 --> 00:02:58,000
in navigating that landscape

00:02:56,160 --> 00:03:01,599
and trying to gain the benefits from the

00:02:58,000 --> 00:03:01,599
different technologies

00:03:02,800 --> 00:03:06,959
there's currently three initiatives the

00:03:05,680 --> 00:03:09,760
telecom user group

00:03:06,959 --> 00:03:12,239
the cnf testbed and cnf conformance

00:03:09,760 --> 00:03:16,720
providing

00:03:12,239 --> 00:03:16,720
output for the different end users

00:03:17,519 --> 00:03:20,640
the telecom user group's a place to come

00:03:19,440 --> 00:03:23,760
together

00:03:20,640 --> 00:03:27,440
where we can discuss ideas

00:03:23,760 --> 00:03:31,120
new technology needs

00:03:27,440 --> 00:03:34,239
from the telecom domain from providers

00:03:31,120 --> 00:03:37,440
service providers from vendors and

00:03:34,239 --> 00:03:40,959
any telecom developers

00:03:37,440 --> 00:03:43,200
and look at things like best practices

00:03:40,959 --> 00:03:44,159
from different communities talk about

00:03:43,200 --> 00:03:47,200
gaps and

00:03:44,159 --> 00:03:48,720
the technology or maybe processes a lot

00:03:47,200 --> 00:03:53,680
of it can be

00:03:48,720 --> 00:03:53,680
the language trying to understand the

00:03:58,840 --> 00:04:01,840
difference

00:04:16,320 --> 00:04:20,959
oh my audio was out okay i hope i'm back

00:04:20,160 --> 00:04:24,960
y'all

00:04:20,959 --> 00:04:28,479
so the cnf testbed is a

00:04:24,960 --> 00:04:29,840
platform a framework and a set of

00:04:28,479 --> 00:04:32,800
examples that

00:04:29,840 --> 00:04:35,040
help you in reviewing the different

00:04:32,800 --> 00:04:38,240
emerging technologies

00:04:35,040 --> 00:04:41,680
and you can reproduce the test results

00:04:38,240 --> 00:04:42,000
and the use cases any examples you can

00:04:41,680 --> 00:04:45,520
also

00:04:42,000 --> 00:04:45,520
use it for creating your own

00:04:46,800 --> 00:04:52,720
the cnf conformance initiative is

00:04:50,080 --> 00:04:54,320
a test suite an open source test suite

00:04:52,720 --> 00:04:58,160
that helps

00:04:54,320 --> 00:05:01,759
service providers and developers um

00:04:58,160 --> 00:05:02,960
by allowing you to test the workload

00:05:01,759 --> 00:05:05,520
applications

00:05:02,960 --> 00:05:08,720
for cloud native network functions as

00:05:05,520 --> 00:05:11,759
well as the underlying telecom platforms

00:05:08,720 --> 00:05:15,039
this helps service providers to

00:05:11,759 --> 00:05:18,320
select solutions that

00:05:15,039 --> 00:05:21,280
meet their needs and when

00:05:18,320 --> 00:05:22,960
those solutions adhere to principles

00:05:21,280 --> 00:05:24,720
that are important to them

00:05:22,960 --> 00:05:26,720
and it helps the developers in both

00:05:24,720 --> 00:05:30,240
demonstrating that

00:05:26,720 --> 00:05:30,800
they follow these best practices and it

00:05:30,240 --> 00:05:33,120
also

00:05:30,800 --> 00:05:33,840
directly helps them to improve their

00:05:33,120 --> 00:05:36,880
software

00:05:33,840 --> 00:05:39,360
by providing feedback and tools in

00:05:36,880 --> 00:05:42,479
testing

00:05:39,360 --> 00:05:45,840
behind all these initiatives we have

00:05:42,479 --> 00:05:49,600
cloud native guiding principles

00:05:45,840 --> 00:05:49,600
and these build on

00:05:49,759 --> 00:05:56,720
years and years of other best practices

00:05:53,600 --> 00:05:58,880
and principles like those from devops

00:05:56,720 --> 00:06:00,319
all the way back through unix

00:05:58,880 --> 00:06:03,680
philosophies

00:06:00,319 --> 00:06:06,800
agile software development and

00:06:03,680 --> 00:06:08,880
other best practices and patterns the

00:06:06,800 --> 00:06:09,919
cloud native definition talks about some

00:06:08,880 --> 00:06:13,120
of these and

00:06:09,919 --> 00:06:14,560
what would be expected to be seen in the

00:06:13,120 --> 00:06:17,759
technologies and

00:06:14,560 --> 00:06:21,840
how these can help a telecom

00:06:17,759 --> 00:06:24,080
make changes like security updates

00:06:21,840 --> 00:06:25,759
move quickly into production in a

00:06:24,080 --> 00:06:28,160
predictable

00:06:25,759 --> 00:06:28,160
manner

00:06:29,759 --> 00:06:36,400
there's a whole set of cloud native

00:06:33,360 --> 00:06:38,240
networking principles papers that go in

00:06:36,400 --> 00:06:40,639
depth on each one of the

00:06:38,240 --> 00:06:41,520
principles that have extensive

00:06:40,639 --> 00:06:45,919
references

00:06:41,520 --> 00:06:47,039
to other documents best practices and

00:06:45,919 --> 00:06:51,759
experts in the

00:06:47,039 --> 00:06:53,840
domains and it helps us to ask questions

00:06:51,759 --> 00:06:56,160
from a telecom perspective how you're

00:06:53,840 --> 00:06:59,280
going to configure these systems

00:06:56,160 --> 00:07:01,039
and how do we handle immutable

00:06:59,280 --> 00:07:03,840
infrastructure

00:07:01,039 --> 00:07:06,080
and what are the different properties

00:07:03,840 --> 00:07:09,039
underneath so that we know how to apply

00:07:06,080 --> 00:07:09,039
them at every layer

00:07:09,440 --> 00:07:13,919
and then we can get to specific

00:07:11,919 --> 00:07:17,360
definitions

00:07:13,919 --> 00:07:19,840
like a cloud native network function

00:07:17,360 --> 00:07:22,160
and a cloud native network function is a

00:07:19,840 --> 00:07:24,639
cloud native application

00:07:22,160 --> 00:07:26,639
cloud native applications have a lot of

00:07:24,639 --> 00:07:28,000
best practices and principles that you

00:07:26,639 --> 00:07:30,639
can look at

00:07:28,000 --> 00:07:32,000
running microservices and following the

00:07:30,639 --> 00:07:33,520
immutable infrastructure

00:07:32,000 --> 00:07:36,000
one of the big ones would be the

00:07:33,520 --> 00:07:39,520
repeatable deployment process

00:07:36,000 --> 00:07:41,199
so in devops philosophy one of the big

00:07:39,520 --> 00:07:44,960
things would be

00:07:41,199 --> 00:07:47,680
your ci cd pipeline that allows you to

00:07:44,960 --> 00:07:48,720
safely and predictably move all those

00:07:47,680 --> 00:07:51,840
changes

00:07:48,720 --> 00:07:54,080
so that's a big thing on allowing

00:07:51,840 --> 00:07:54,639
developers to make changes have new

00:07:54,080 --> 00:07:56,960
features

00:07:54,639 --> 00:08:00,240
make security updates and then safely

00:07:56,960 --> 00:08:00,240
move those into production

00:08:01,360 --> 00:08:06,879
the platform also builds on the same

00:08:04,400 --> 00:08:08,000
principles so when we look at service

00:08:06,879 --> 00:08:11,120
discovery if

00:08:08,000 --> 00:08:12,160
the platform provides service discovery

00:08:11,120 --> 00:08:15,039
in a cloud-native way

00:08:12,160 --> 00:08:16,160
then your workloads can register and

00:08:15,039 --> 00:08:19,599
find other

00:08:16,160 --> 00:08:21,919
um workload components cns to

00:08:19,599 --> 00:08:23,599
build themselves and the platform can

00:08:21,919 --> 00:08:26,639
help manage that

00:08:23,599 --> 00:08:29,840
um it pushes a lot of the work

00:08:26,639 --> 00:08:31,520
into the platform and allows the cnf

00:08:29,840 --> 00:08:33,919
developers to focus on

00:08:31,520 --> 00:08:34,719
their business needs that they can excel

00:08:33,919 --> 00:08:36,240
at

00:08:34,719 --> 00:08:38,880
and you're going to see this all the way

00:08:36,240 --> 00:08:42,240
through all the layers of the platform

00:08:38,880 --> 00:08:43,839
and up through the workload

00:08:42,240 --> 00:08:47,760
another driver is community

00:08:43,839 --> 00:08:50,560
collaboration from the cncs side

00:08:47,760 --> 00:08:51,360
from the lf standpoint there's

00:08:50,560 --> 00:08:54,959
engagement

00:08:51,360 --> 00:08:58,399
all the way through many different large

00:08:54,959 --> 00:08:59,480
communities so all of the lnf groups

00:08:58,399 --> 00:09:03,600
like onap and

00:08:59,480 --> 00:09:07,040
fdiocset for the testing the new xg vela

00:09:03,600 --> 00:09:10,240
platform service initiative the opnfv

00:09:07,040 --> 00:09:14,320
and cntt work

00:09:10,240 --> 00:09:17,360
for the kubernetes reference

00:09:14,320 --> 00:09:19,120
architecture as well as all the cncf and

00:09:17,360 --> 00:09:21,519
kubernetes initiatives like

00:09:19,120 --> 00:09:23,360
individual projects and sigs and

00:09:21,519 --> 00:09:25,920
everything else

00:09:23,360 --> 00:09:27,200
there's also interaction across the

00:09:25,920 --> 00:09:30,720
different communities

00:09:27,200 --> 00:09:31,040
and outside of l flick that folks from

00:09:30,720 --> 00:09:33,200
the

00:09:31,040 --> 00:09:34,320
oran open air interface software

00:09:33,200 --> 00:09:38,480
alliance

00:09:34,320 --> 00:09:40,880
and providers like packet who

00:09:38,480 --> 00:09:42,480
are interested in working with the

00:09:40,880 --> 00:09:44,800
different communities and we

00:09:42,480 --> 00:09:46,880
engage with them and give feedback and

00:09:44,800 --> 00:09:50,000
then we go directly to end users

00:09:46,880 --> 00:09:51,920
like the telecom service providers and

00:09:50,000 --> 00:09:54,399
developers themselves so that we can get

00:09:51,920 --> 00:09:57,760
the feedback

00:09:54,399 --> 00:09:59,680
to the cncf initiatives and back into

00:09:57,760 --> 00:10:01,200
other communities that we're interacting

00:09:59,680 --> 00:10:04,480
with

00:10:01,200 --> 00:10:08,000
so many efforts and initiatives and

00:10:04,480 --> 00:10:10,000
cncf is from the telecom perspective is

00:10:08,000 --> 00:10:11,200
trying to be engaged in all the parts so

00:10:10,000 --> 00:10:12,800
that we can help

00:10:11,200 --> 00:10:14,560
from the requirements side where you

00:10:12,800 --> 00:10:15,600
look at cloud native principles best

00:10:14,560 --> 00:10:20,040
practices

00:10:15,600 --> 00:10:22,320
from the kubernetes and cncf community

00:10:20,040 --> 00:10:23,040
implementations like those that you see

00:10:22,320 --> 00:10:26,079
in the

00:10:23,040 --> 00:10:29,040
cntt opnfv effort

00:10:26,079 --> 00:10:30,320
xg vella directly collaborating with

00:10:29,040 --> 00:10:33,680
projects

00:10:30,320 --> 00:10:36,800
on the testing side and we build on to

00:10:33,680 --> 00:10:38,959
existing testing to add additional

00:10:36,800 --> 00:10:40,399
parts like the kubernetes zendaya test

00:10:38,959 --> 00:10:43,120
and conformance and then

00:10:40,399 --> 00:10:44,079
what cntt is doing to be able to plug in

00:10:43,120 --> 00:10:46,240
there

00:10:44,079 --> 00:10:50,240
as well as the certifications that

00:10:46,240 --> 00:10:52,880
different groups would like to have

00:10:50,240 --> 00:10:54,160
so this all ties together from those

00:10:52,880 --> 00:10:56,800
principles

00:10:54,160 --> 00:10:58,399
community collaboration into the

00:10:56,800 --> 00:11:01,279
different initiatives

00:10:58,399 --> 00:11:02,720
and the output having all of those as

00:11:01,279 --> 00:11:05,600
the drivers for

00:11:02,720 --> 00:11:08,399
many different end users individual as

00:11:05,600 --> 00:11:08,399
well as groups

00:11:10,079 --> 00:11:16,320
the telcom user group has

00:11:13,279 --> 00:11:21,279
a good number of members from both

00:11:16,320 --> 00:11:21,279
vendors as well as service providers

00:11:21,440 --> 00:11:28,880
and we have been meeting

00:11:25,279 --> 00:11:30,160
regularly since 2019 including some

00:11:28,880 --> 00:11:31,920
face-to-face

00:11:30,160 --> 00:11:33,279
this one would have been a face-to-face

00:11:31,920 --> 00:11:36,240
if if we were

00:11:33,279 --> 00:11:37,279
all together and talking about those

00:11:36,240 --> 00:11:39,920
different ideas

00:11:37,279 --> 00:11:41,920
and looking at requirements and gaps and

00:11:39,920 --> 00:11:44,800
how things are moving forward within the

00:11:41,920 --> 00:11:48,480
kubernetes and cncf community as well as

00:11:44,800 --> 00:11:50,639
the changing needs in the telecom world

00:11:48,480 --> 00:11:52,000
we have created a white paper called the

00:11:50,639 --> 00:11:53,440
cloud native thinking for

00:11:52,000 --> 00:11:56,240
telecommunication

00:11:53,440 --> 00:11:58,240
which is more of an introduction on the

00:11:56,240 --> 00:12:00,720
collaboration between

00:11:58,240 --> 00:12:01,279
cloud native and telecon and then

00:12:00,720 --> 00:12:04,720
there's

00:12:01,279 --> 00:12:05,839
a extensive set of papers cloud native

00:12:04,720 --> 00:12:08,320
networking

00:12:05,839 --> 00:12:10,320
that are sourced in the cloud native

00:12:08,320 --> 00:12:11,200
thinking for telecommunication as well

00:12:10,320 --> 00:12:14,560
as

00:12:11,200 --> 00:12:15,760
within other groups and that goes back

00:12:14,560 --> 00:12:18,399
to the collaboration

00:12:15,760 --> 00:12:21,000
so the kubernetes based reference

00:12:18,399 --> 00:12:23,440
architecture documents for the

00:12:21,000 --> 00:12:26,720
cntaopinfework the

00:12:23,440 --> 00:12:28,079
principal papers are sourced and a lot

00:12:26,720 --> 00:12:31,120
of that's in there and this

00:12:28,079 --> 00:12:33,680
comes from best practices and references

00:12:31,120 --> 00:12:35,600
within the kubernetes and cloud native

00:12:33,680 --> 00:12:39,519
world

00:12:35,600 --> 00:12:40,639
we've identified various gaps and scope

00:12:39,519 --> 00:12:43,440
within

00:12:40,639 --> 00:12:45,040
the requirements both for the reference

00:12:43,440 --> 00:12:46,880
architecture as well as the

00:12:45,040 --> 00:12:49,600
implementation side

00:12:46,880 --> 00:12:50,959
and continuing to give feedback and work

00:12:49,600 --> 00:12:54,079
directly with

00:12:50,959 --> 00:12:55,920
both cncf and kubernetes projects

00:12:54,079 --> 00:13:00,320
to ensure that they're hearing those

00:12:55,920 --> 00:13:02,320
things and encouraging collaboration

00:13:00,320 --> 00:13:04,320
so the telkom user group meets on the

00:13:02,320 --> 00:13:07,440
first mondays of the month

00:13:04,320 --> 00:13:11,440
it has alternating times 1500

00:13:07,440 --> 00:13:14,959
1100 utc the next zoom meeting will be

00:13:11,440 --> 00:13:17,519
october 5th 1500 utc

00:13:14,959 --> 00:13:18,959
and you can find more details on the

00:13:17,519 --> 00:13:21,839
telcom user group

00:13:18,959 --> 00:13:21,839
github page

00:13:26,399 --> 00:13:30,959
i see one question i'm gonna take a

00:13:29,040 --> 00:13:32,800
quick look and see

00:13:30,959 --> 00:13:34,480
what's there it looks like it was

00:13:32,800 --> 00:13:36,320
dismissed and audio

00:13:34,480 --> 00:13:38,480
okay it was an audio question so i

00:13:36,320 --> 00:13:41,519
dismissed it since you fixed it

00:13:38,480 --> 00:13:45,440
no problem all right and then if anyone

00:13:41,519 --> 00:13:48,720
in chat um if you have any questions

00:13:45,440 --> 00:13:49,600
just please add them to the q a or raise

00:13:48,720 --> 00:13:52,959
your hand

00:13:49,600 --> 00:13:56,000
if you would like to speak directly

00:13:52,959 --> 00:13:58,320
hi jim from lfn i see you and some other

00:13:56,000 --> 00:13:58,320
folks

00:13:58,800 --> 00:14:06,079
all right so

00:14:02,399 --> 00:14:11,440
the cnf testbed is a second initiative

00:14:06,079 --> 00:14:14,800
and it also has collaboration across

00:14:11,440 --> 00:14:17,279
mindy many vendors and

00:14:14,800 --> 00:14:18,480
service providers that are engaged you

00:14:17,279 --> 00:14:20,639
can see some of those

00:14:18,480 --> 00:14:21,760
here and different projects and

00:14:20,639 --> 00:14:24,320
initiatives

00:14:21,760 --> 00:14:25,199
and pointing out the fdisit where we've

00:14:24,320 --> 00:14:27,279
had a lot of

00:14:25,199 --> 00:14:29,279
direct collaboration on the testing

00:14:27,279 --> 00:14:31,920
efforts that they do

00:14:29,279 --> 00:14:33,279
network service mesh involved with some

00:14:31,920 --> 00:14:36,399
of the examples

00:14:33,279 --> 00:14:39,600
intel and samsung have been engaged

00:14:36,399 --> 00:14:40,720
trying to provide examples updates and

00:14:39,600 --> 00:14:42,560
we've had

00:14:40,720 --> 00:14:43,760
many different participants helping in

00:14:42,560 --> 00:14:46,720
different ways

00:14:43,760 --> 00:14:47,760
in this effort so it's an open source

00:14:46,720 --> 00:14:51,040
software

00:14:47,760 --> 00:14:54,639
across the board and it allows

00:14:51,040 --> 00:14:57,360
and out of box deployments to packet

00:14:54,639 --> 00:14:58,399
for both the hardware and network

00:14:57,360 --> 00:15:02,880
provisioning

00:14:58,399 --> 00:15:05,360
portions the focus is on

00:15:02,880 --> 00:15:06,560
supporting different technology options

00:15:05,360 --> 00:15:10,240
and trying to

00:15:06,560 --> 00:15:13,440
have each stage of the process

00:15:10,240 --> 00:15:14,959
be as uncomfortable and complicated as

00:15:13,440 --> 00:15:16,800
reasonably possible

00:15:14,959 --> 00:15:19,199
so that you can come in and understand

00:15:16,800 --> 00:15:20,639
the pieces we can plug in different

00:15:19,199 --> 00:15:21,519
parts if we want to try different

00:15:20,639 --> 00:15:23,839
technology

00:15:21,519 --> 00:15:24,639
it also tries to use upstream community

00:15:23,839 --> 00:15:27,360
tooling

00:15:24,639 --> 00:15:28,639
so we use cube spray a sig testing

00:15:27,360 --> 00:15:32,240
project

00:15:28,639 --> 00:15:32,800
and we use nfv bench which is an open fv

00:15:32,240 --> 00:15:34,880
project

00:15:32,800 --> 00:15:37,360
for performance testing and there's

00:15:34,880 --> 00:15:38,639
other tools in there and technology that

00:15:37,360 --> 00:15:41,040
are upstream within the different

00:15:38,639 --> 00:15:42,560
communities that we're interacting with

00:15:41,040 --> 00:15:45,920
and we try to follow cloud-native

00:15:42,560 --> 00:15:45,920
principles wherever possible

00:15:46,079 --> 00:15:49,360
and that ties in with how things are

00:15:48,880 --> 00:15:51,839
done

00:15:49,360 --> 00:15:52,720
on the cloud-native principles we're

00:15:51,839 --> 00:15:54,720
looking at

00:15:52,720 --> 00:15:56,639
applying those from the provisioning

00:15:54,720 --> 00:15:59,600
standpoint when we're going from

00:15:56,639 --> 00:16:00,639
the hardware provisioning the host or

00:15:59,600 --> 00:16:03,600
node if you're

00:16:00,639 --> 00:16:04,399
saying on the kubernetes side the

00:16:03,600 --> 00:16:07,519
networking

00:16:04,399 --> 00:16:09,279
underlying underlying network so layer

00:16:07,519 --> 00:16:10,079
two networking or whatever we're working

00:16:09,279 --> 00:16:12,720
with

00:16:10,079 --> 00:16:14,320
as well as all the way through the

00:16:12,720 --> 00:16:16,720
different layers up through

00:16:14,320 --> 00:16:17,839
the examples and use cases that we're

00:16:16,720 --> 00:16:19,440
deploying

00:16:17,839 --> 00:16:21,920
and then we try to highlight any

00:16:19,440 --> 00:16:24,320
problems that we may see

00:16:21,920 --> 00:16:25,279
for either whether it's missing items

00:16:24,320 --> 00:16:28,160
that we may want

00:16:25,279 --> 00:16:30,000
for telecom needs or out-of-band

00:16:28,160 --> 00:16:33,120
procedures so maybe it's not

00:16:30,000 --> 00:16:35,279
kubernetes native or we feel that we're

00:16:33,120 --> 00:16:37,839
having to step outside of

00:16:35,279 --> 00:16:38,639
a process that we think would be more

00:16:37,839 --> 00:16:41,279
helpful

00:16:38,639 --> 00:16:42,240
and try to note those and we also try to

00:16:41,279 --> 00:16:44,639
highlight where

00:16:42,240 --> 00:16:45,519
specific technology has done a good job

00:16:44,639 --> 00:16:47,920
in

00:16:45,519 --> 00:16:48,800
following cloud native principles or

00:16:47,920 --> 00:16:52,560
being more

00:16:48,800 --> 00:16:55,920
kubernetes native for that side and

00:16:52,560 --> 00:16:55,920
bring some focus to that

00:16:56,000 --> 00:17:00,720
so it's fully repeatable and wherever

00:16:58,480 --> 00:17:02,639
possible use in-band components

00:17:00,720 --> 00:17:04,240
the examples go all the way from very

00:17:02,639 --> 00:17:06,799
minimal so that you can understand

00:17:04,240 --> 00:17:08,480
one small piece all the way through

00:17:06,799 --> 00:17:10,799
larger use cases

00:17:08,480 --> 00:17:12,400
and those build up and where wherever

00:17:10,799 --> 00:17:14,480
possible we try to make it work

00:17:12,400 --> 00:17:15,760
each component can be put together in

00:17:14,480 --> 00:17:18,240
into larger

00:17:15,760 --> 00:17:21,199
more complicated potential use cases but

00:17:18,240 --> 00:17:23,760
you can break it down at the small side

00:17:21,199 --> 00:17:26,240
and we have several examples that show

00:17:23,760 --> 00:17:28,880
different types of technology being used

00:17:26,240 --> 00:17:29,520
that's the same type of use case or

00:17:28,880 --> 00:17:31,919
example

00:17:29,520 --> 00:17:33,120
so that you can compare those and have

00:17:31,919 --> 00:17:36,559
an idea of

00:17:33,120 --> 00:17:38,880
which you may want to use so we welcome

00:17:36,559 --> 00:17:41,440
your participation in cnf testbed

00:17:38,880 --> 00:17:43,120
and you can get the software on the

00:17:41,440 --> 00:17:46,400
github page

00:17:43,120 --> 00:17:50,080
and if you have an api key from packet

00:17:46,400 --> 00:17:52,080
then you can deploy the testbed

00:17:50,080 --> 00:17:54,320
you should be able to deploy any of the

00:17:52,080 --> 00:17:56,799
examples that we have

00:17:54,320 --> 00:17:58,720
active right now if you'd like to deploy

00:17:56,799 --> 00:18:00,320
your own

00:17:58,720 --> 00:18:02,160
network functions you should be able to

00:18:00,320 --> 00:18:04,320
package them up and and do that

00:18:02,160 --> 00:18:05,200
if you want to share any results from

00:18:04,320 --> 00:18:07,679
that we would

00:18:05,200 --> 00:18:08,720
love to see it and if you'd like to

00:18:07,679 --> 00:18:11,520
contribute

00:18:08,720 --> 00:18:13,440
we would love to see more examples

00:18:11,520 --> 00:18:16,240
improvements to the actual

00:18:13,440 --> 00:18:19,039
tool chain so provisioning process the

00:18:16,240 --> 00:18:23,039
deployment of the cluster

00:18:19,039 --> 00:18:24,400
and um you're you're welcome to do that

00:18:23,039 --> 00:18:26,799
including ideas for

00:18:24,400 --> 00:18:28,160
issues or we have a spec board if it

00:18:26,799 --> 00:18:30,559
comes to something that we need to

00:18:28,160 --> 00:18:34,640
brainstorm

00:18:30,559 --> 00:18:36,080
on the cnf conformance side we also have

00:18:34,640 --> 00:18:37,760
many different contributors from

00:18:36,080 --> 00:18:41,200
different projects

00:18:37,760 --> 00:18:43,760
and companies it's a

00:18:41,200 --> 00:18:46,160
open source test suite it's modeled

00:18:43,760 --> 00:18:47,520
after the kubernetes conformance program

00:18:46,160 --> 00:18:51,600
and by that i'm saying

00:18:47,520 --> 00:18:53,919
the testing portion so the

00:18:51,600 --> 00:18:55,280
and and the process for how you could

00:18:53,919 --> 00:18:58,000
test it so you can

00:18:55,280 --> 00:18:59,760
self-test you can download the software

00:18:58,000 --> 00:19:03,120
and run it to test

00:18:59,760 --> 00:19:04,799
your cns the cloud-native network

00:19:03,120 --> 00:19:06,960
functions or the applications

00:19:04,799 --> 00:19:08,160
specifically as well as the underlying

00:19:06,960 --> 00:19:10,320
platform

00:19:08,160 --> 00:19:11,840
and it should provide visibility on how

00:19:10,320 --> 00:19:14,640
well the platform

00:19:11,840 --> 00:19:17,520
and those cnfs are following cloud

00:19:14,640 --> 00:19:17,520
native principles

00:19:19,120 --> 00:19:23,360
we expect it to help service providers

00:19:21,919 --> 00:19:26,080
in adhering

00:19:23,360 --> 00:19:27,520
and identifying solutions that adhere to

00:19:26,080 --> 00:19:30,559
the principles

00:19:27,520 --> 00:19:33,039
and we wanted to provide

00:19:30,559 --> 00:19:34,400
the tools and feedback that can help

00:19:33,039 --> 00:19:37,760
developers

00:19:34,400 --> 00:19:41,280
improve their technology

00:19:37,760 --> 00:19:43,600
it's also something that we hope

00:19:41,280 --> 00:19:44,320
could be used as a check box the tool

00:19:43,600 --> 00:19:47,039
suite

00:19:44,320 --> 00:19:50,240
as well as and that results for any type

00:19:47,039 --> 00:19:53,440
of certification programs

00:19:50,240 --> 00:19:55,919
along with that i announced uh it has

00:19:53,440 --> 00:20:00,000
been integrated with the cntt open

00:19:55,919 --> 00:20:03,120
opnfv project specifically the

00:20:00,000 --> 00:20:05,080
funk test framework that's used for

00:20:03,120 --> 00:20:08,000
validating the

00:20:05,080 --> 00:20:08,320
kubernetes-based architecture right now

00:20:08,000 --> 00:20:10,240
it's

00:20:08,320 --> 00:20:11,440
integration for the workloads that's

00:20:10,240 --> 00:20:14,559
running

00:20:11,440 --> 00:20:18,480
platform testing will be added and we

00:20:14,559 --> 00:20:21,919
expect to test different cns as we

00:20:18,480 --> 00:20:25,039
collaborate with them

00:20:21,919 --> 00:20:28,880
so here's a look at some of the

00:20:25,039 --> 00:20:31,440
categories within the

00:20:28,880 --> 00:20:33,200
the conformance test suite these are

00:20:31,440 --> 00:20:36,880
used for

00:20:33,200 --> 00:20:40,480
discussing the different needs

00:20:36,880 --> 00:20:42,480
that telecoms may have and tests

00:20:40,480 --> 00:20:44,480
themselves may go across different

00:20:42,480 --> 00:20:46,000
categories

00:20:44,480 --> 00:20:48,000
sometimes the focus is on that

00:20:46,000 --> 00:20:50,640
configuration life cycle the

00:20:48,000 --> 00:20:51,679
initial deployment so installability and

00:20:50,640 --> 00:20:54,240
then we can get into

00:20:51,679 --> 00:20:55,600
other things like statelessness which

00:20:54,240 --> 00:20:58,000
means cloud native

00:20:55,600 --> 00:21:00,840
how to handle data in a cloud-native way

00:20:58,000 --> 00:21:02,799
all the way through resilience and

00:21:00,840 --> 00:21:04,159
observability

00:21:02,799 --> 00:21:06,000
if we take a look at some of the

00:21:04,159 --> 00:21:08,960
workload tests that are there

00:21:06,000 --> 00:21:09,760
and available right now you'll see some

00:21:08,960 --> 00:21:11,080
and

00:21:09,760 --> 00:21:12,880
many of the categories from

00:21:11,080 --> 00:21:13,919
microservices all the way through

00:21:12,880 --> 00:21:15,840
resilience

00:21:13,919 --> 00:21:19,039
on the resilience side you can see a few

00:21:15,840 --> 00:21:22,720
like containers or the applications

00:21:19,039 --> 00:21:25,200
dying or having problems what would we

00:21:22,720 --> 00:21:27,679
do what would we handle and what's

00:21:25,200 --> 00:21:30,240
expected by the application

00:21:27,679 --> 00:21:31,760
likewise if we look at the platform test

00:21:30,240 --> 00:21:33,440
you can see different ones from

00:21:31,760 --> 00:21:35,520
compatibility are they

00:21:33,440 --> 00:21:36,799
thinking about configuration from the

00:21:35,520 --> 00:21:38,799
crd side

00:21:36,799 --> 00:21:40,000
security aspects and then when we get to

00:21:38,799 --> 00:21:42,400
the resilience

00:21:40,000 --> 00:21:44,559
you'll see it problems and how the

00:21:42,400 --> 00:21:45,280
platform can handle problems like a node

00:21:44,559 --> 00:21:48,480
failure so

00:21:45,280 --> 00:21:49,760
does the machine die does the platform

00:21:48,480 --> 00:21:51,919
handle stuff like

00:21:49,760 --> 00:21:53,120
network outages and other things in a

00:21:51,919 --> 00:21:56,320
way that

00:21:53,120 --> 00:21:58,320
allows a telecom service provider to

00:21:56,320 --> 00:22:01,679
continue with services as

00:21:58,320 --> 00:22:04,640
they would need

00:22:01,679 --> 00:22:05,600
so the platform testing itself is

00:22:04,640 --> 00:22:08,880
expecting

00:22:05,600 --> 00:22:12,240
that any telecom platform would be

00:22:08,880 --> 00:22:15,840
conformant to kubernetes conformance

00:22:12,240 --> 00:22:18,159
so this could lead to the platforms that

00:22:15,840 --> 00:22:21,520
are being provided to a service provider

00:22:18,159 --> 00:22:24,000
could even be certified kubernetes

00:22:21,520 --> 00:22:26,480
and then what happens then is the cnf

00:22:24,000 --> 00:22:29,120
conformance builds on that so looking at

00:22:26,480 --> 00:22:30,240
add-ons to kubernetes as well as

00:22:29,120 --> 00:22:32,720
underlying

00:22:30,240 --> 00:22:33,679
uh provisioning aspect for the nodes and

00:22:32,720 --> 00:22:35,840
hosts and how

00:22:33,679 --> 00:22:37,520
things come up and we care about all the

00:22:35,840 --> 00:22:40,159
layers in between so this is an

00:22:37,520 --> 00:22:42,640
extension to that core

00:22:40,159 --> 00:22:46,640
testing ade testing that's very

00:22:42,640 --> 00:22:46,640
extensive that kubernetes does

00:22:46,880 --> 00:22:50,000
and we go to many different places

00:22:49,360 --> 00:22:52,720
together

00:22:50,000 --> 00:22:54,000
requirements when we're thinking end

00:22:52,720 --> 00:22:57,200
users and how do we help

00:22:54,000 --> 00:22:59,360
them of course as mentioned we we do

00:22:57,200 --> 00:23:01,520
talk with cnt and work within the

00:22:59,360 --> 00:23:03,120
kubernetes reference architecture and

00:23:01,520 --> 00:23:04,720
there's back and forth on trying to

00:23:03,120 --> 00:23:07,039
understand and gather that

00:23:04,720 --> 00:23:08,880
we're also working directly with service

00:23:07,039 --> 00:23:12,000
providers developers

00:23:08,880 --> 00:23:14,000
and then within the kubernetes and cncf

00:23:12,000 --> 00:23:16,480
community going to the different

00:23:14,000 --> 00:23:18,640
projects talking about best practices

00:23:16,480 --> 00:23:19,919
for security and observability and all

00:23:18,640 --> 00:23:21,360
those sort of things

00:23:19,919 --> 00:23:23,840
and those driving cloud native

00:23:21,360 --> 00:23:23,840
principles

00:23:24,240 --> 00:23:31,039
within the cnf conformance itself

00:23:27,760 --> 00:23:32,000
we have some examples so this would be

00:23:31,039 --> 00:23:35,039
in addition to

00:23:32,000 --> 00:23:36,480
stuff you may find in cnf testbed we

00:23:35,039 --> 00:23:39,600
have a

00:23:36,480 --> 00:23:42,320
core dns the envoy proxy

00:23:39,600 --> 00:23:44,000
a vpp based ip forwarder which can be

00:23:42,320 --> 00:23:44,960
used for service training and other

00:23:44,000 --> 00:23:47,520
things

00:23:44,960 --> 00:23:49,600
linker d2 these are some that we have

00:23:47,520 --> 00:23:52,720
examples that you can come and see

00:23:49,600 --> 00:23:55,919
we may add some future ones uh the clear

00:23:52,720 --> 00:23:57,760
water ims and bios are software that's

00:23:55,919 --> 00:24:00,400
being used by cntt

00:23:57,760 --> 00:24:01,679
for testing and some service providers

00:24:00,400 --> 00:24:03,440
also use those

00:24:01,679 --> 00:24:05,200
so we're looking at testing those with

00:24:03,440 --> 00:24:07,679
the scene of conformance

00:24:05,200 --> 00:24:09,600
and there's many others including evolve

00:24:07,679 --> 00:24:12,640
packet core examples

00:24:09,600 --> 00:24:17,039
and other items

00:24:12,640 --> 00:24:21,919
if you would like to test using these

00:24:17,039 --> 00:24:23,919
you can go and look at the

00:24:21,919 --> 00:24:25,120
large amount of documentation we have

00:24:23,919 --> 00:24:27,520
from it's very

00:24:25,120 --> 00:24:29,840
simple get quick starts for cnf

00:24:27,520 --> 00:24:31,200
developers if you want to test cns or

00:24:29,840 --> 00:24:33,039
test your platform

00:24:31,200 --> 00:24:34,400
all the way through extensive source

00:24:33,039 --> 00:24:36,400
based installation

00:24:34,400 --> 00:24:38,159
or if you'd like to get engaged as a

00:24:36,400 --> 00:24:39,600
test developer a lot of that's going to

00:24:38,159 --> 00:24:42,320
be good

00:24:39,600 --> 00:24:42,799
there's usage instructions that cover

00:24:42,320 --> 00:24:45,279
from the

00:24:42,799 --> 00:24:47,200
individual test all the way through

00:24:45,279 --> 00:24:49,600
running categories

00:24:47,200 --> 00:24:50,840
or the whole suite with platform and

00:24:49,600 --> 00:24:54,320
workload

00:24:50,840 --> 00:24:56,799
prerequisites including how to use kind

00:24:54,320 --> 00:24:59,279
if you'd like to do that use the cnf

00:24:56,799 --> 00:25:02,000
testbed tool chain to deploy a cluster

00:24:59,279 --> 00:25:02,960
and test with that and the different

00:25:02,000 --> 00:25:04,960
example

00:25:02,960 --> 00:25:06,640
configurations if you'd like to get

00:25:04,960 --> 00:25:09,679
started and either use

00:25:06,640 --> 00:25:13,120
the cnips that are there or use those to

00:25:09,679 --> 00:25:16,799
test your own cns

00:25:13,120 --> 00:25:19,120
here's a quick look at running it

00:25:16,799 --> 00:25:20,000
if you'd like to test all of the

00:25:19,120 --> 00:25:23,120
workload

00:25:20,000 --> 00:25:25,520
um items or cns specifically you run

00:25:23,120 --> 00:25:26,480
cnf conformance workload likewise for

00:25:25,520 --> 00:25:28,640
testing

00:25:26,480 --> 00:25:30,880
all running all the platform tests you

00:25:28,640 --> 00:25:33,600
can run with the platform command

00:25:30,880 --> 00:25:34,320
and you should see in the console an

00:25:33,600 --> 00:25:36,000
output

00:25:34,320 --> 00:25:37,760
similar to this where you're going to

00:25:36,000 --> 00:25:38,720
have all the different tests and this is

00:25:37,760 --> 00:25:42,000
a snapshot

00:25:38,720 --> 00:25:44,159
it would continue going of the different

00:25:42,000 --> 00:25:46,000
tests and whether you passed or failed

00:25:44,159 --> 00:25:49,919
and then there's a final score

00:25:46,000 --> 00:25:52,400
for all the tests that ran and how well

00:25:49,919 --> 00:25:52,960
it did for the platform or the cnf

00:25:52,400 --> 00:25:55,200
itself

00:25:52,960 --> 00:25:57,600
the results are saved into an external

00:25:55,200 --> 00:26:00,400
file which you can check

00:25:57,600 --> 00:26:01,840
so the scoring system is based on the

00:26:00,400 --> 00:26:05,360
sauna boy

00:26:01,840 --> 00:26:06,640
kubernetes conformance test suite which

00:26:05,360 --> 00:26:09,919
allows you to

00:26:06,640 --> 00:26:10,400
within cnf conformance you can configure

00:26:09,919 --> 00:26:12,480
the

00:26:10,400 --> 00:26:14,960
scoring for the different individual

00:26:12,480 --> 00:26:17,120
tests and the ammo configuration file

00:26:14,960 --> 00:26:19,919
and other items and then the test

00:26:17,120 --> 00:26:22,720
results are also saved into a yaml file

00:26:19,919 --> 00:26:24,000
with all of the individual tests the

00:26:22,720 --> 00:26:26,240
different groups as well

00:26:24,000 --> 00:26:27,600
as the final score so that can be

00:26:26,240 --> 00:26:30,400
consumed and then

00:26:27,600 --> 00:26:32,159
redisplayed in some way similar to

00:26:30,400 --> 00:26:35,520
what's happening on the

00:26:32,159 --> 00:26:38,559
cnt lfn cnt ovp

00:26:35,520 --> 00:26:40,799
ovb2 results and

00:26:38,559 --> 00:26:41,840
likely to be directly part of the

00:26:40,799 --> 00:26:44,240
badging program

00:26:41,840 --> 00:26:45,039
on their side but it could also be used

00:26:44,240 --> 00:26:47,679
directly by

00:26:45,039 --> 00:26:48,159
service providers that are wanting to

00:26:47,679 --> 00:26:52,080
test

00:26:48,159 --> 00:26:52,960
a platform or a application side and

00:26:52,080 --> 00:26:55,440
then by the

00:26:52,960 --> 00:26:56,559
cnf developers directly so they can get

00:26:55,440 --> 00:27:01,440
the feedback

00:26:56,559 --> 00:27:04,000
and what i showed before is minimal

00:27:01,440 --> 00:27:06,159
information but we can also turn it on

00:27:04,000 --> 00:27:09,360
for highly verbose if

00:27:06,159 --> 00:27:10,960
for developers to use

00:27:09,360 --> 00:27:13,120
if you'd like to contribute we have a

00:27:10,960 --> 00:27:14,799
contributing guide and we'd

00:27:13,120 --> 00:27:16,240
love to see pull requests for

00:27:14,799 --> 00:27:17,200
improvements across the board from

00:27:16,240 --> 00:27:21,919
documentation

00:27:17,200 --> 00:27:23,200
through new ideas and new test

00:27:21,919 --> 00:27:24,320
and we're going to continue to

00:27:23,200 --> 00:27:25,679
collaborate with the different

00:27:24,320 --> 00:27:29,840
communities providing

00:27:25,679 --> 00:27:29,840
output from all these different

00:27:32,840 --> 00:27:37,440
initiatives

00:27:34,480 --> 00:27:39,840
we'd love to invite you to the meetings

00:27:37,440 --> 00:27:40,480
on the cnf conformance and test bed we

00:27:39,840 --> 00:27:42,480
have a

00:27:40,480 --> 00:27:45,200
technical meeting that's combining both

00:27:42,480 --> 00:27:45,760
of those it meets every thursday at 14

00:27:45,200 --> 00:27:49,679
00:27:45,760 --> 00:27:52,159
utc and then again the telco music group

00:27:49,679 --> 00:27:54,799
is the first mondays with the next one

00:27:52,159 --> 00:27:57,039
on october 5th

00:27:54,799 --> 00:27:58,799
you can reach out to us via the tucker

00:27:57,039 --> 00:28:01,520
music group mailing list

00:27:58,799 --> 00:28:02,640
the cncf public slack channels for all

00:28:01,520 --> 00:28:05,039
these initiatives

00:28:02,640 --> 00:28:06,080
you can reach myself directly via email

00:28:05,039 --> 00:28:09,080
taylor

00:28:06,080 --> 00:28:11,360
co-op or dan khan via dan at

00:28:09,080 --> 00:28:13,200
linuxfoundation.org

00:28:11,360 --> 00:28:16,960
we're also on twitter and github if

00:28:13,200 --> 00:28:18,640
you'd like to reach us that way

00:28:16,960 --> 00:28:20,320
so there's some related sessions i

00:28:18,640 --> 00:28:22,080
wanted to point out the

00:28:20,320 --> 00:28:24,240
cloud native for edge and service

00:28:22,080 --> 00:28:27,279
providers this was a monday session

00:28:24,240 --> 00:28:31,679
so you can check out the recording

00:28:27,279 --> 00:28:35,039
and it had six cncf projects all

00:28:31,679 --> 00:28:37,840
showing how they can be used within the

00:28:35,039 --> 00:28:38,240
telecom community and then right now

00:28:37,840 --> 00:28:40,240
there

00:28:38,240 --> 00:28:41,679
is a panel session with some service

00:28:40,240 --> 00:28:44,399
providers and

00:28:41,679 --> 00:28:46,799
different project and leaders including

00:28:44,399 --> 00:28:48,720
some people from the cnf conformance and

00:28:46,799 --> 00:28:50,480
test bed

00:28:48,720 --> 00:28:52,159
these slides again will be available on

00:28:50,480 --> 00:28:54,159
sketch i'm

00:28:52,159 --> 00:28:55,360
happy to continue the conversation in

00:28:54,159 --> 00:28:57,520
the cloud native

00:28:55,360 --> 00:29:00,559
networking slack we'd love to hear your

00:28:57,520 --> 00:29:03,200
feedback on the presentation as well as

00:29:00,559 --> 00:29:04,640
how we can help service providers and

00:29:03,200 --> 00:29:09,360
developers

00:29:04,640 --> 00:29:09,360
in using the cncf and cloud native

00:29:10,840 --> 00:29:16,080
technologies

00:29:12,399 --> 00:29:16,080
let's see if there's any q a

00:29:19,760 --> 00:29:26,480
all right jim um elephant host an end

00:29:23,760 --> 00:29:29,520
user advisory group

00:29:26,480 --> 00:29:31,039
that is made of only the network

00:29:29,520 --> 00:29:34,399
upgraders

00:29:31,039 --> 00:29:38,320
and there's members

00:29:34,399 --> 00:29:39,120
across both the groups and the question

00:29:38,320 --> 00:29:41,760
is are there

00:29:39,120 --> 00:29:42,960
opportunities to collaborate more i i

00:29:41,760 --> 00:29:46,559
think absolutely

00:29:42,960 --> 00:29:50,960
i would love to collaborate more

00:29:46,559 --> 00:29:53,600
and whether that's on gaap analysis

00:29:50,960 --> 00:29:54,880
requirements very important many service

00:29:53,600 --> 00:29:55,840
providers are saying what is the

00:29:54,880 --> 00:29:59,200
underlying why

00:29:55,840 --> 00:30:02,080
and business reason and i think

00:29:59,200 --> 00:30:03,600
getting listening directly to the those

00:30:02,080 --> 00:30:06,159
network operators to be great

00:30:03,600 --> 00:30:07,520
so and it's going to help what elephant

00:30:06,159 --> 00:30:09,520
is doing which is on the more

00:30:07,520 --> 00:30:11,919
opinionated side and

00:30:09,520 --> 00:30:12,799
cncf which is giving the options and

00:30:11,919 --> 00:30:14,720
view

00:30:12,799 --> 00:30:17,120
so that collaboration i think is very

00:30:14,720 --> 00:30:17,120
important

00:30:21,840 --> 00:30:28,320
i think we are at time

00:30:25,120 --> 00:30:32,080
i'm not seeing any other

00:30:28,320 --> 00:30:32,080
questions um

00:30:32,720 --> 00:30:37,840
in the q a

00:30:49,760 --> 00:30:56,480
if anyone doesn't has anything else um

00:30:53,039 --> 00:31:00,320
please join the cloud native networking

00:30:56,480 --> 00:31:02,720
slack channel on ones or any of the cncf

00:31:00,320 --> 00:31:05,039
slack channels for these initiatives

00:31:02,720 --> 00:31:07,600
please reach out to

00:31:05,039 --> 00:31:08,480
us and we're happy to help priyanka

00:31:07,600 --> 00:31:11,279
lucina

00:31:08,480 --> 00:31:13,519
and myself specifically that are on this

00:31:11,279 --> 00:31:13,519
call

00:31:15,360 --> 00:31:19,840
thank you

00:32:44,880 --> 00:32:46,960

YouTube URL: https://www.youtube.com/watch?v=mrn0UFliWGM


