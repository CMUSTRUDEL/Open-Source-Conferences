Title: Lightning Talk -  The Value of Running Containers on Bare-metal - Jonathan Gershater, Red Hat
Publication date: 2020-10-28
Playlist: Open Networking & Edge Summit 2020
Description: 
	Lightning Talk -  The Value of Running Containers on Bare-metal - Jonathan Gershater, Red Hat
Captions: 
	00:00:01,360 --> 00:00:04,720
welcome everyone this is jonathan

00:00:03,120 --> 00:00:06,560
gursharter and i'm here to give a

00:00:04,720 --> 00:00:07,279
lightning talk on the value of running

00:00:06,560 --> 00:00:11,519
containers

00:00:07,279 --> 00:00:11,519
on bare metal servers

00:00:12,639 --> 00:00:15,839
so just to say context a bare metal

00:00:15,280 --> 00:00:17,920
server it

00:00:15,839 --> 00:00:19,199
simply has the linux operating system

00:00:17,920 --> 00:00:22,480
installed

00:00:19,199 --> 00:00:25,359
whereas a virtualization platform has

00:00:22,480 --> 00:00:26,400
the hypervisor layer which shares cpu

00:00:25,359 --> 00:00:30,000
and ram

00:00:26,400 --> 00:00:33,520
between the guests and the

00:00:30,000 --> 00:00:35,600
uh applications

00:00:33,520 --> 00:00:36,960
so this talk is really summarized in

00:00:35,600 --> 00:00:40,719
this slide

00:00:36,960 --> 00:00:44,399
on the right you see a container

00:00:40,719 --> 00:00:47,280
environment without the hypervisor

00:00:44,399 --> 00:00:47,840
and virtualization layer on the left you

00:00:47,280 --> 00:00:51,760
see

00:00:47,840 --> 00:00:53,920
with the either kvm or esxi hypervisor

00:00:51,760 --> 00:00:55,360
the difference being not only the

00:00:53,920 --> 00:00:58,559
hypervisor layer

00:00:55,360 --> 00:00:59,280
but also the people their virtualization

00:00:58,559 --> 00:01:01,520
team

00:00:59,280 --> 00:01:02,559
that is running the virtualization

00:01:01,520 --> 00:01:06,320
software

00:01:02,559 --> 00:01:09,280
which is an extra complexity in terms of

00:01:06,320 --> 00:01:10,479
team people do they have the right skill

00:01:09,280 --> 00:01:15,040
set

00:01:10,479 --> 00:01:16,720
etc so we'll go into those details next

00:01:15,040 --> 00:01:18,640
so since you have different operations

00:01:16,720 --> 00:01:20,400
teams uh if you're operating in a

00:01:18,640 --> 00:01:23,680
virtualization environment

00:01:20,400 --> 00:01:24,799
uh who would be the ones taking a call

00:01:23,680 --> 00:01:27,360
who would be

00:01:24,799 --> 00:01:28,240
answering support is the problem in

00:01:27,360 --> 00:01:30,320
virtualization

00:01:28,240 --> 00:01:31,680
is the problem somewhere else so it's an

00:01:30,320 --> 00:01:36,079
extra

00:01:31,680 --> 00:01:36,079
complexity for trouble shooting

00:01:36,320 --> 00:01:40,079
bare metal offers increased performance

00:01:38,880 --> 00:01:41,200
so there's a you don't have that

00:01:40,079 --> 00:01:44,240
virtualization

00:01:41,200 --> 00:01:47,200
overhead therefore you

00:01:44,240 --> 00:01:49,680
can get increased speed you can access

00:01:47,200 --> 00:01:52,840
the mixed real-time features etc

00:01:49,680 --> 00:01:54,960
and um before increa uh better

00:01:52,840 --> 00:01:57,920
performance

00:01:54,960 --> 00:01:58,479
the density surely increases because you

00:01:57,920 --> 00:02:00,240
have

00:01:58,479 --> 00:02:01,680
more containers on a bare metal surface

00:02:00,240 --> 00:02:06,840
since you don't have that

00:02:01,680 --> 00:02:09,599
hypervisor layer extra overhead

00:02:06,840 --> 00:02:10,720
sometimes to reduce the noise enable

00:02:09,599 --> 00:02:14,000
problem

00:02:10,720 --> 00:02:16,160
one might run one container per vm

00:02:14,000 --> 00:02:18,080
and therefore that density advantage is

00:02:16,160 --> 00:02:20,000
further reduced because

00:02:18,080 --> 00:02:21,520
uh your number of containers is limited

00:02:20,000 --> 00:02:24,400
to how many vms

00:02:21,520 --> 00:02:24,400
you can operate

00:02:25,520 --> 00:02:31,840
the cost is improved with

00:02:29,040 --> 00:02:33,760
bare metal when you are removing that

00:02:31,840 --> 00:02:36,640
hypervisor virtualization

00:02:33,760 --> 00:02:37,440
layer as well and again the higher

00:02:36,640 --> 00:02:41,760
density

00:02:37,440 --> 00:02:41,760
also increases the roi of bare metal

00:02:43,599 --> 00:02:46,959
security is better since you don't have

00:02:45,440 --> 00:02:50,400
that uh

00:02:46,959 --> 00:02:52,400
reduced attack surface and

00:02:50,400 --> 00:02:54,959
virtualization vulnerabilities can be

00:02:52,400 --> 00:02:54,959
removed

00:02:55,760 --> 00:03:00,879
if applications are specific hardware

00:02:57,599 --> 00:03:03,760
needs such as gpus or fpgas

00:03:00,879 --> 00:03:04,159
those can be accessed more easily when

00:03:03,760 --> 00:03:06,879
the

00:03:04,159 --> 00:03:08,800
operating system is accessing them

00:03:06,879 --> 00:03:11,120
directly without that virtualization

00:03:08,800 --> 00:03:11,120
layer

00:03:11,519 --> 00:03:15,920
again the troubleshooting should be

00:03:12,959 --> 00:03:19,280
easier without the virtualization layer

00:03:15,920 --> 00:03:22,319
to have to troubleshoot as well

00:03:19,280 --> 00:03:25,120
so let's look at some recommendations

00:03:22,319 --> 00:03:26,560
uh it is in a kind of a hybrid mode

00:03:25,120 --> 00:03:28,560
where you run master

00:03:26,560 --> 00:03:29,680
kubernetes nodes on the virtualization

00:03:28,560 --> 00:03:32,799
platform

00:03:29,680 --> 00:03:34,640
and then as we see next

00:03:32,799 --> 00:03:36,239
run the worker or application nodes

00:03:34,640 --> 00:03:40,080
directly on

00:03:36,239 --> 00:03:43,200
the bare metal for high io io and again

00:03:40,080 --> 00:03:47,680
special use cases such as srov

00:03:43,200 --> 00:03:50,159
gpus and fpgas

00:03:47,680 --> 00:03:51,519
some recommended to size hosts in

00:03:50,159 --> 00:03:53,360
advance

00:03:51,519 --> 00:03:54,799
especially when you're considering pod

00:03:53,360 --> 00:03:57,040
density and

00:03:54,799 --> 00:04:01,040
provisioning of bare metal hosts may

00:03:57,040 --> 00:04:02,480
take longer

00:04:01,040 --> 00:04:04,560
uh it's important to secure the

00:04:02,480 --> 00:04:07,519
operating system someone should not

00:04:04,560 --> 00:04:08,080
should run non-critical services uh to

00:04:07,519 --> 00:04:09,760
patch it

00:04:08,080 --> 00:04:12,959
around vulnerability scans this is

00:04:09,760 --> 00:04:15,200
standard security practice

00:04:12,959 --> 00:04:16,720
be careful to use container-based images

00:04:15,200 --> 00:04:18,959
that are trusted

00:04:16,720 --> 00:04:20,560
and vetted so when it pulls any

00:04:18,959 --> 00:04:21,440
container based image from the wild you

00:04:20,560 --> 00:04:23,840
don't know

00:04:21,440 --> 00:04:24,639
does it maybe have a virus is root

00:04:23,840 --> 00:04:28,160
access

00:04:24,639 --> 00:04:31,280
enabled what packages are running on it

00:04:28,160 --> 00:04:33,479
if you use a trusted container registry

00:04:31,280 --> 00:04:36,479
then those images are pre-vetted and

00:04:33,479 --> 00:04:36,479
pre-secured

00:04:37,360 --> 00:04:41,520
in closing with containers on bare metal

00:04:39,840 --> 00:04:44,800
you have a lower tco

00:04:41,520 --> 00:04:47,360
and an increased utilization density and

00:04:44,800 --> 00:04:57,840
performance

00:04:47,360 --> 00:04:57,840
thank you let's take q a

00:05:26,080 --> 00:05:30,160
thank you is there any questions we can

00:05:27,759 --> 00:05:30,160
take them

00:05:32,560 --> 00:05:39,840
written or live

00:05:56,080 --> 00:06:00,319
so uh along with them both written and

00:05:59,520 --> 00:06:03,199
live

00:06:00,319 --> 00:06:03,919
so akash asks are there any evolving

00:06:03,199 --> 00:06:06,479
standards for

00:06:03,919 --> 00:06:07,759
bare metal provisioning so yes there is

00:06:06,479 --> 00:06:11,039
an open source

00:06:07,759 --> 00:06:14,880
tool that does bare metal

00:06:11,039 --> 00:06:16,720
provisioning it's called iron

00:06:14,880 --> 00:06:20,000
and i can provide a link to that in the

00:06:16,720 --> 00:06:20,000
chat and

00:06:21,039 --> 00:06:24,400
timothy aside from use cases involving

00:06:23,520 --> 00:06:27,759
large

00:06:24,400 --> 00:06:30,400
gpu fpga are there benefits having a

00:06:27,759 --> 00:06:31,039
hypervisor in there so the hypervisor

00:06:30,400 --> 00:06:33,120
benefit

00:06:31,039 --> 00:06:34,560
is perhaps for the master or the

00:06:33,120 --> 00:06:36,240
controlling nodes

00:06:34,560 --> 00:06:37,919
but certainly for the worker nodes you

00:06:36,240 --> 00:06:42,319
want those on

00:06:37,919 --> 00:06:42,319
bare metal so let me type in those two

00:06:46,840 --> 00:06:49,840
answers

00:07:49,759 --> 00:07:55,360
in the q a daya asks can you please

00:07:52,960 --> 00:07:59,160
comment on orchestration aspects for

00:07:55,360 --> 00:08:02,800
bare metal hosts i'm not sure what

00:07:59,160 --> 00:08:05,919
orchestration aspect is but

00:08:02,800 --> 00:08:09,360
yes the orchestration is conducted

00:08:05,919 --> 00:08:12,479
by ansible or other

00:08:09,360 --> 00:08:17,680
some of the tools to

00:08:12,479 --> 00:08:17,680
orchestrate the bare metal uh andrew

00:08:18,720 --> 00:08:22,479
will you decrease the number of node

00:08:20,400 --> 00:08:23,039
port servers if running on bare metal

00:08:22,479 --> 00:08:26,080
versus

00:08:23,039 --> 00:08:26,080
vm yes

00:08:31,919 --> 00:08:35,680
i think we can also pass sriv gpu

00:08:34,320 --> 00:08:38,839
directly to vm

00:08:35,680 --> 00:08:41,839
over the virtualization layer yes that's

00:08:38,839 --> 00:08:41,839
true

00:09:26,240 --> 00:09:29,760
in terms of hardware how much calls ram

00:09:28,560 --> 00:09:32,240
can we save

00:09:29,760 --> 00:09:33,120
adopting container versus virtual

00:09:32,240 --> 00:09:36,560
machine

00:09:33,120 --> 00:09:38,959
so it would depend to the extent

00:09:36,560 --> 00:09:40,320
on obviously on the hardware the use

00:09:38,959 --> 00:09:43,440
case

00:09:40,320 --> 00:09:45,120
it's hard to give a raw number without

00:09:43,440 --> 00:09:46,640
knowing

00:09:45,120 --> 00:09:48,720
the use you know the hardware you have

00:09:46,640 --> 00:09:52,080
the use cases of

00:09:48,720 --> 00:09:52,080
the applications

00:09:52,399 --> 00:09:57,519
but i've seen around a three to one

00:09:55,760 --> 00:10:01,200
ratio but it's very dependent on what

00:09:57,519 --> 00:10:01,200
the original size of the vm was

00:10:02,839 --> 00:10:05,839
etc

00:11:08,079 --> 00:11:14,399
are there reference architectures

00:11:09,519 --> 00:11:17,120
available for review um

00:11:14,399 --> 00:11:18,880
yes there are um i don't have them

00:11:17,120 --> 00:11:20,959
immediately available but

00:11:18,880 --> 00:11:22,160
i will have a look and uh try and send

00:11:20,959 --> 00:11:29,600
you there

00:11:22,160 --> 00:11:31,600
asks um

00:11:29,600 --> 00:11:33,360
uh traffic isolation becomes a bigger

00:11:31,600 --> 00:11:36,560
concern in bare metal is the community

00:11:33,360 --> 00:11:40,000
thinking of how to address this

00:11:36,560 --> 00:11:43,040
um one i would also ask it any more

00:11:40,000 --> 00:11:44,959
um provide a bit more detail on traffic

00:11:43,040 --> 00:11:48,959
isolation

00:11:44,959 --> 00:11:53,279
um are you thinking of network slicing

00:11:48,959 --> 00:11:55,440
is it um network prioritization

00:11:53,279 --> 00:11:56,800
how is it how is that maybe just add to

00:11:55,440 --> 00:11:58,800
the chat how is it done in

00:11:56,800 --> 00:12:11,839
virtualization that you want it done in

00:11:58,800 --> 00:12:11,839
bare metal

00:12:47,120 --> 00:12:52,320
side is asking in q a why container is

00:12:50,160 --> 00:12:55,519
more secure while it should be vice

00:12:52,320 --> 00:12:58,800
versa vice versa compared to

00:12:55,519 --> 00:12:59,360
vm i'm not sure what your exact question

00:12:58,800 --> 00:13:01,279
is

00:12:59,360 --> 00:13:02,720
there is a slack channel where we can

00:13:01,279 --> 00:13:05,360
continue

00:13:02,720 --> 00:13:06,160
um this conversation because i think

00:13:05,360 --> 00:13:09,760
this session

00:13:06,160 --> 00:13:21,839
is wrapping up so let me put that in

00:13:09,760 --> 00:13:21,839
the q a

00:13:33,839 --> 00:13:38,320
okay this session is wrapping up now

00:13:37,040 --> 00:13:40,800
let's continue in the

00:13:38,320 --> 00:13:43,839
slack channel please thank you for your

00:13:40,800 --> 00:13:43,839
participation and

00:13:46,839 --> 00:13:49,839
questions

00:14:22,079 --> 00:14:24,160

YouTube URL: https://www.youtube.com/watch?v=4fXJk43E3yM


