Title: Lightning Talk -  Designing An Edge Computing Infrastructure for Industry 4.0 Deployment
Publication date: 2020-10-28
Playlist: Open Networking & Edge Summit 2020
Description: 
	Lightning Talk -  Designing An Edge Computing Infrastructure for Industry 4.0 Deployment - Anurag Ranjan, Intel
Captions: 
	00:00:11,840 --> 00:00:18,320
hello welcome to today's talk

00:00:16,480 --> 00:00:20,080
today's topic is designing an edge

00:00:18,320 --> 00:00:22,080
computing infrastructure for industry

00:00:20,080 --> 00:00:24,080
4.0 deployment

00:00:22,080 --> 00:00:25,840
in a 5g enabled smart factory there are

00:00:24,080 --> 00:00:28,320
machines there are sensors

00:00:25,840 --> 00:00:29,359
they connect to an on-prem edge cloud

00:00:28,320 --> 00:00:30,960
where you can deploy

00:00:29,359 --> 00:00:32,399
innovative applications these

00:00:30,960 --> 00:00:34,960
applications could do

00:00:32,399 --> 00:00:36,880
quality control they could be safety

00:00:34,960 --> 00:00:38,719
critical applications

00:00:36,880 --> 00:00:40,480
they could be running machine learning

00:00:38,719 --> 00:00:45,360
algorithms etc

00:00:40,480 --> 00:00:47,520
to make your life easy

00:00:45,360 --> 00:00:50,079
my name is anurag ranjan i'm a platform

00:00:47,520 --> 00:00:52,079
architect at intel

00:00:50,079 --> 00:00:53,840
my background is mobile wireless

00:00:52,079 --> 00:00:54,559
computing i've been working on edge

00:00:53,840 --> 00:00:56,840
computing

00:00:54,559 --> 00:00:59,840
prior to that i've worked in energy

00:00:56,840 --> 00:00:59,840
sector

00:01:00,000 --> 00:01:03,440
let's spend a moment on understanding

00:01:01,520 --> 00:01:05,760
what is industry 4.0

00:01:03,440 --> 00:01:07,360
so industry 4.0 is about smart

00:01:05,760 --> 00:01:09,119
manufacturing

00:01:07,360 --> 00:01:10,720
it's the first wave of industrialization

00:01:09,119 --> 00:01:12,000
the previous three

00:01:10,720 --> 00:01:14,000
are counted as the steam and

00:01:12,000 --> 00:01:15,119
mechanization use of assembly line and

00:01:14,000 --> 00:01:17,520
mass production

00:01:15,119 --> 00:01:19,520
and use of computers and automation

00:01:17,520 --> 00:01:21,840
industry 4.0 combines smart

00:01:19,520 --> 00:01:23,600
devices and spot infrastructure it can

00:01:21,840 --> 00:01:25,920
solve the key challenges

00:01:23,600 --> 00:01:26,960
of the demographic shift in developed

00:01:25,920 --> 00:01:28,960
economies

00:01:26,960 --> 00:01:30,560
is getting a lot of attention because it

00:01:28,960 --> 00:01:32,320
promises to level up

00:01:30,560 --> 00:01:34,240
the field between the suppliers with the

00:01:32,320 --> 00:01:35,520
strong supply chain and buyers with

00:01:34,240 --> 00:01:37,920
limited market power

00:01:35,520 --> 00:01:40,079
we have seen this with cloud computing

00:01:37,920 --> 00:01:42,880
how a common platform leads to reduction

00:01:40,079 --> 00:01:45,119
in capex and opex while at the same time

00:01:42,880 --> 00:01:47,600
brings new products faster to the market

00:01:45,119 --> 00:01:48,880
at an affordable price the key

00:01:47,600 --> 00:01:51,119
technology building blocks

00:01:48,880 --> 00:01:52,479
needed in an industry 4.0 end-to-end

00:01:51,119 --> 00:01:55,680
solution consists of

00:01:52,479 --> 00:01:57,360
smart devices cloud infrastructure

00:01:55,680 --> 00:01:58,880
and 5g communication infrastructure in

00:01:57,360 --> 00:02:01,920
this talk we will focus on the

00:01:58,880 --> 00:02:01,920
infrastructure side

00:02:02,960 --> 00:02:09,200
what are the key building blocks or

00:02:06,000 --> 00:02:10,800
key platform considerations for industry

00:02:09,200 --> 00:02:12,560
4.0 cloud

00:02:10,800 --> 00:02:14,480
and we are focusing on infrastructure

00:02:12,560 --> 00:02:16,480
components so those smart devices and

00:02:14,480 --> 00:02:18,000
machines are not shown here

00:02:16,480 --> 00:02:20,239
however it is fair to say that the

00:02:18,000 --> 00:02:20,800
machine intelligence is distributed

00:02:20,239 --> 00:02:23,440
across

00:02:20,800 --> 00:02:23,840
device and infrastructure depending on

00:02:23,440 --> 00:02:26,400
the

00:02:23,840 --> 00:02:28,640
latency requirements safety risk etc

00:02:26,400 --> 00:02:34,000
these will be the key considerations

00:02:28,640 --> 00:02:34,000
to decide um where the workload runs

00:02:34,080 --> 00:02:38,080
in a time sensitive network data flow

00:02:36,959 --> 00:02:40,959
queue is

00:02:38,080 --> 00:02:42,959
there are network settings or floors

00:02:40,959 --> 00:02:44,000
that divide the compute workloads across

00:02:42,959 --> 00:02:46,319
three domains

00:02:44,000 --> 00:02:48,000
operational technology edge technology

00:02:46,319 --> 00:02:49,040
and informational technology with that

00:02:48,000 --> 00:02:51,440
clarification

00:02:49,040 --> 00:02:52,239
let's see what is needed to make a cloud

00:02:51,440 --> 00:02:55,280
platform

00:02:52,239 --> 00:02:58,080
for industry 4.0 application

00:02:55,280 --> 00:03:00,000
we start with networking so in a legacy

00:02:58,080 --> 00:03:00,480
network with miles and miles of cabling

00:03:00,000 --> 00:03:02,239
you know

00:03:00,480 --> 00:03:03,680
this is a challenge to roll out a new

00:03:02,239 --> 00:03:06,640
technology platform

00:03:03,680 --> 00:03:09,120
and be able to troubleshoot is the day

00:03:06,640 --> 00:03:13,040
-1 and the day 0

00:03:09,120 --> 00:03:16,480
timelines mobility of small devices

00:03:13,040 --> 00:03:19,280
and as well as larger devices with

00:03:16,480 --> 00:03:19,840
robots etc is another challenge

00:03:19,280 --> 00:03:21,519
therefore

00:03:19,840 --> 00:03:23,680
connectivity to the cyber physical

00:03:21,519 --> 00:03:24,640
systems or devices is shown here as

00:03:23,680 --> 00:03:27,920
wireless network

00:03:24,640 --> 00:03:28,560
it could be a 5g or a wi-fi 6 or an lte

00:03:27,920 --> 00:03:31,599
over

00:03:28,560 --> 00:03:33,680
licensed and unlicensed spectrum this

00:03:31,599 --> 00:03:34,080
would need a physical function or can we

00:03:33,680 --> 00:03:37,200
run

00:03:34,080 --> 00:03:38,879
a cloudlet as a virtual rack

00:03:37,200 --> 00:03:41,200
there are open platforms available that

00:03:38,879 --> 00:03:43,920
are that have well-defined apis

00:03:41,200 --> 00:03:46,000
and if needed source code access is also

00:03:43,920 --> 00:03:50,400
available such as intel's flex ram based

00:03:46,000 --> 00:03:52,720
uh virtual run next we need a data plane

00:03:50,400 --> 00:03:54,400
these are some good options available

00:03:52,720 --> 00:03:57,760
now in open source such as

00:03:54,400 --> 00:03:59,680
obvious dpdk this is openv switch with

00:03:57,760 --> 00:04:03,280
data plane development kit

00:03:59,680 --> 00:04:04,879
as well as vpp vector packet processing

00:04:03,280 --> 00:04:07,680
for cloud native applications there are

00:04:04,879 --> 00:04:08,319
also container networking interfaces the

00:04:07,680 --> 00:04:10,400
cni

00:04:08,319 --> 00:04:12,720
that are available each provide their

00:04:10,400 --> 00:04:15,040
own benefit

00:04:12,720 --> 00:04:17,199
third we need to prove and we need to

00:04:15,040 --> 00:04:17,840
provide a proven application framework

00:04:17,199 --> 00:04:20,880
that

00:04:17,840 --> 00:04:22,639
simplify the complexity of applications

00:04:20,880 --> 00:04:24,560
one common framework that keeps coming

00:04:22,639 --> 00:04:26,880
up in my projects relates to visual

00:04:24,560 --> 00:04:28,639
inferencing and visual analytics

00:04:26,880 --> 00:04:30,240
and we use intel's open visual

00:04:28,639 --> 00:04:33,360
inferencing and neural network

00:04:30,240 --> 00:04:35,040
optimization openvino toolkit

00:04:33,360 --> 00:04:36,720
now to manage the applications and

00:04:35,040 --> 00:04:38,639
platforms we need a controller from

00:04:36,720 --> 00:04:40,639
cloud native world we can easily pick up

00:04:38,639 --> 00:04:42,560
kubernetes to do the job

00:04:40,639 --> 00:04:44,479
next comes the orchestrator an

00:04:42,560 --> 00:04:46,080
orchestrator is used for onboarding new

00:04:44,479 --> 00:04:49,199
applications and libraries and

00:04:46,080 --> 00:04:51,520
which it can then launch on request

00:04:49,199 --> 00:04:53,600
a wim is a virtualization infrastructure

00:04:51,520 --> 00:04:56,160
manager it manages the virtualized

00:04:53,600 --> 00:04:58,800
infrastructure the compute resources

00:04:56,160 --> 00:05:00,720
in a bare metal or more accurately host

00:04:58,800 --> 00:05:02,320
based cloud setup this role may not be

00:05:00,720 --> 00:05:03,919
as critical because there is

00:05:02,320 --> 00:05:05,440
an alternate solution depending on how

00:05:03,919 --> 00:05:07,600
big is the system

00:05:05,440 --> 00:05:09,199
um the kubernetes infrastructure itself

00:05:07,600 --> 00:05:10,720
would should be able to manage that and

00:05:09,199 --> 00:05:12,960
that's what we will be using

00:05:10,720 --> 00:05:14,880
that we have been using in mostly in my

00:05:12,960 --> 00:05:16,880
projects

00:05:14,880 --> 00:05:19,280
to run the cloudlet and the compute

00:05:16,880 --> 00:05:21,600
workload we need a hardware platform

00:05:19,280 --> 00:05:24,720
and this consists of process network

00:05:21,600 --> 00:05:26,800
cards and hardware accelerators

00:05:24,720 --> 00:05:28,720
last but not least we may want to run

00:05:26,800 --> 00:05:29,199
latency critical workloads in our cloud

00:05:28,720 --> 00:05:32,000
layer

00:05:29,199 --> 00:05:33,199
where it makes business sense while we

00:05:32,000 --> 00:05:35,199
run

00:05:33,199 --> 00:05:37,600
non-critical applications in public

00:05:35,199 --> 00:05:39,600
cloud and this can be done by cloud

00:05:37,600 --> 00:05:41,919
connectors or cloud adapters

00:05:39,600 --> 00:05:43,600
that will be specific to devices and the

00:05:41,919 --> 00:05:45,360
cloud service provider for example the

00:05:43,600 --> 00:05:47,199
digital twin of a machine from one

00:05:45,360 --> 00:05:49,840
industrial equipment provider

00:05:47,199 --> 00:05:51,199
will be different from another so some

00:05:49,840 --> 00:05:53,440
cloud connectors are available

00:05:51,199 --> 00:05:55,759
in openness edge cloud that we will see

00:05:53,440 --> 00:05:55,759
next

00:05:57,280 --> 00:06:00,240
in our example i'd be borrowing

00:05:58,639 --> 00:06:02,160
references from a software toolkit

00:06:00,240 --> 00:06:03,520
called open network edge services or

00:06:02,160 --> 00:06:06,319
openness

00:06:03,520 --> 00:06:06,720
it is an edge computing software toolkit

00:06:06,319 --> 00:06:08,479
for

00:06:06,720 --> 00:06:10,319
building edge platforms and cloudless

00:06:08,479 --> 00:06:12,639
weather for telco on-prem

00:06:10,319 --> 00:06:14,479
or hybrid cloud and can be used to

00:06:12,639 --> 00:06:16,000
onboard and manage edge applications and

00:06:14,479 --> 00:06:17,440
network functions this is built on top

00:06:16,000 --> 00:06:19,520
of kubernetes so it

00:06:17,440 --> 00:06:21,600
provides cloud-like agility across any

00:06:19,520 --> 00:06:23,520
type of network

00:06:21,600 --> 00:06:24,880
on the openness github pages you can

00:06:23,520 --> 00:06:27,759
find references to

00:06:24,880 --> 00:06:30,400
onboarding and launching multi-access

00:06:27,759 --> 00:06:34,000
network functions these are cns

00:06:30,400 --> 00:06:36,639
it provides ability to orchestrate fpgas

00:06:34,000 --> 00:06:38,240
esx or media accelerator cards and then

00:06:36,639 --> 00:06:41,199
another

00:06:38,240 --> 00:06:42,880
hardware accelerators some ready-made

00:06:41,199 --> 00:06:44,639
applications and refreshes can also be

00:06:42,880 --> 00:06:47,840
found like multi-cloud connectivity

00:06:44,639 --> 00:06:50,319
transcoding ai video analytics etc

00:06:47,840 --> 00:06:53,520
provides

00:06:50,319 --> 00:06:54,720
data plane functions options and cni's

00:06:53,520 --> 00:06:57,120
select the one that matches your

00:06:54,720 --> 00:06:58,720
hardware software and application needs

00:06:57,120 --> 00:07:00,319
there's telephone tray information this

00:06:58,720 --> 00:07:02,000
can help measure and monetize edge

00:07:00,319 --> 00:07:04,560
platforms as well as help in research

00:07:02,000 --> 00:07:04,560
scheduling

00:07:05,039 --> 00:07:09,599
there are other examples that may be

00:07:08,080 --> 00:07:11,919
useful for your

00:07:09,599 --> 00:07:15,120
for your particular applications so it's

00:07:11,919 --> 00:07:15,120
worth exploring further

00:07:15,759 --> 00:07:20,639
we show here a logical view of cloudlet

00:07:18,560 --> 00:07:22,560
built using openness it consists of

00:07:20,639 --> 00:07:24,560
kubernetes master node

00:07:22,560 --> 00:07:26,479
when using openness you can tap into the

00:07:24,560 --> 00:07:28,720
enhancement that helps with networking

00:07:26,479 --> 00:07:31,280
and edge application deployments

00:07:28,720 --> 00:07:33,199
then there is one or probably more than

00:07:31,280 --> 00:07:35,520
one kubernetes minion nodes

00:07:33,199 --> 00:07:36,639
that run the data plane that run the

00:07:35,520 --> 00:07:39,360
hardware accelerator

00:07:36,639 --> 00:07:41,520
as well as the application workload the

00:07:39,360 --> 00:07:44,639
data plane services

00:07:41,520 --> 00:07:46,000
they shift user traffic in and out

00:07:44,639 --> 00:07:48,160
and they connect with sensors and

00:07:46,000 --> 00:07:51,360
physical systems

00:07:48,160 --> 00:07:53,120
they collect data and they send commands

00:07:51,360 --> 00:07:57,280
responses back to

00:07:53,120 --> 00:08:00,639
actuators it's a very simple example

00:07:57,280 --> 00:08:03,919
here what we show here is

00:08:00,639 --> 00:08:05,680
from physical systems and sensors we

00:08:03,919 --> 00:08:08,720
collect data

00:08:05,680 --> 00:08:12,479
we can do monitoring we can do

00:08:08,720 --> 00:08:14,080
quality control we can also do

00:08:12,479 --> 00:08:16,400
should you we can also schedule

00:08:14,080 --> 00:08:18,800
maintenance etc based on the sensor

00:08:16,400 --> 00:08:18,800
inputs

00:08:21,039 --> 00:08:24,479
on the openness portal there is an edge

00:08:23,440 --> 00:08:27,440
inferencing

00:08:24,479 --> 00:08:29,360
openness experience kit there are

00:08:27,440 --> 00:08:30,400
ansible script that help build and

00:08:29,360 --> 00:08:32,479
install

00:08:30,400 --> 00:08:34,240
on the target server a small application

00:08:32,479 --> 00:08:36,399
an engine size software framework for

00:08:34,240 --> 00:08:40,959
enabling smart manufacturing

00:08:36,399 --> 00:08:44,159
with visual and point defect inspection

00:08:40,959 --> 00:08:46,000
it uses open window toolkit from intel

00:08:44,159 --> 00:08:47,279
the easiest way to create the setup is

00:08:46,000 --> 00:08:49,360
to run the

00:08:47,279 --> 00:08:52,080
ansible scripts as an ansible host from

00:08:49,360 --> 00:08:53,279
where you can run the scripts

00:08:52,080 --> 00:08:55,360
this is only needed during the

00:08:53,279 --> 00:08:56,640
installation and based on the

00:08:55,360 --> 00:08:57,120
confliction it will install the

00:08:56,640 --> 00:08:59,360
component

00:08:57,120 --> 00:09:01,279
master the kubernetes worker and it will

00:08:59,360 --> 00:09:03,279
build and create containers for video

00:09:01,279 --> 00:09:04,240
injection video analytics etc as shown

00:09:03,279 --> 00:09:06,800
here

00:09:04,240 --> 00:09:09,519
cancel scripts and there's in the

00:09:06,800 --> 00:09:13,680
sequences as shown

00:09:09,519 --> 00:09:17,200
in this block diagram this is an example

00:09:13,680 --> 00:09:19,760
demo app and that plays a video of a pc

00:09:17,200 --> 00:09:21,600
manufacturer and defect detected and

00:09:19,760 --> 00:09:24,480
that's also available in the

00:09:21,600 --> 00:09:24,480
sample application

00:09:26,160 --> 00:09:30,880
so in summary what we've seen industry

00:09:28,720 --> 00:09:32,800
4.0 will consist of cyber physical

00:09:30,880 --> 00:09:34,480
system that will rely on an on-prem

00:09:32,800 --> 00:09:36,959
compute infrastructure

00:09:34,480 --> 00:09:38,800
for latency sensitive applications we

00:09:36,959 --> 00:09:39,440
also seen smart manufacturing will

00:09:38,800 --> 00:09:41,120
embrace

00:09:39,440 --> 00:09:43,200
cloud native technology within their

00:09:41,120 --> 00:09:45,920
operational ecosystem

00:09:43,200 --> 00:09:47,040
uh for agility and for lowering costs

00:09:45,920 --> 00:09:48,720
and we also seen

00:09:47,040 --> 00:09:50,000
intel provides hardware accelerators and

00:09:48,720 --> 00:09:50,560
software building blocks for such

00:09:50,000 --> 00:09:53,200
systems

00:09:50,560 --> 00:09:55,120
to deliver platforms that enable

00:09:53,200 --> 00:09:56,240
flexibility agility and performance

00:09:55,120 --> 00:10:00,160
optimization that are

00:09:56,240 --> 00:10:04,079
foundational for industry 4.0

00:10:00,160 --> 00:10:05,519
you can find more at these sites so for

00:10:04,079 --> 00:10:06,800
openness toolkit you can go to

00:10:05,519 --> 00:10:09,040
openness.org

00:10:06,800 --> 00:10:10,640
there's also a github page which is also

00:10:09,040 --> 00:10:15,839
linked from this site

00:10:10,640 --> 00:10:15,839
um you can get training on 5g as well as

00:10:15,920 --> 00:10:20,240
a solution index is available from the

00:10:18,079 --> 00:10:23,600
github page for openness

00:10:20,240 --> 00:10:25,040
um the eis as edge inferencing software

00:10:23,600 --> 00:10:28,240
as we call it at the one that we

00:10:25,040 --> 00:10:30,079
referring to earlier is also available

00:10:28,240 --> 00:10:32,000
from the github page and then you can

00:10:30,079 --> 00:10:34,240
download sample application and try it

00:10:32,000 --> 00:10:34,240
out

00:10:35,519 --> 00:10:47,680
with that we come to an end

00:10:38,880 --> 00:10:47,680

YouTube URL: https://www.youtube.com/watch?v=RZ-bl4g7IXk


