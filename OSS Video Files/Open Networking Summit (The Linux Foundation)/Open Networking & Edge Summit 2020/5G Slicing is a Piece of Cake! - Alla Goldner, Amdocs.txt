Title: 5G Slicing is a Piece of Cake! - Alla Goldner, Amdocs
Publication date: 2020-10-28
Playlist: Open Networking & Edge Summit 2020
Description: 
	5G Slicing is a Piece of Cake! - Alla Goldner, Amdocs
Captions: 
	00:00:01,520 --> 00:00:06,879
hi all uh my name is ella goldner

00:00:04,880 --> 00:00:08,400
and today i'm going to talk about

00:00:06,879 --> 00:00:10,719
fighting slicing

00:00:08,400 --> 00:00:12,320
i just slicing is a piece of cake and we

00:00:10,719 --> 00:00:15,519
are going to discover

00:00:12,320 --> 00:00:18,600
why um we can see

00:00:15,519 --> 00:00:19,920
that definitely uh speaking of

00:00:18,600 --> 00:00:23,039
monetization

00:00:19,920 --> 00:00:25,840
for the network service provider uh

00:00:23,039 --> 00:00:26,240
you know before 5g and before slicing

00:00:25,840 --> 00:00:30,240
came

00:00:26,240 --> 00:00:33,440
into the play it was mostly about

00:00:30,240 --> 00:00:35,840
the service being fast basically the

00:00:33,440 --> 00:00:39,040
bandwidth of the service and perhaps

00:00:35,840 --> 00:00:42,160
several types of service this is it

00:00:39,040 --> 00:00:45,520
without really a differentiation of

00:00:42,160 --> 00:00:48,800
which services this satisfying

00:00:45,520 --> 00:00:51,120
sla would be provided by the service

00:00:48,800 --> 00:00:54,480
providers to the customers including

00:00:51,120 --> 00:00:57,039
enterprise and consumer customers for 5g

00:00:54,480 --> 00:00:58,320
the key functionality that it is

00:00:57,039 --> 00:01:01,920
bringing which is

00:00:58,320 --> 00:01:02,960
on how the network itself in a new

00:01:01,920 --> 00:01:05,439
different way

00:01:02,960 --> 00:01:06,000
would be monetized and we can definitely

00:01:05,439 --> 00:01:08,880
see

00:01:06,000 --> 00:01:10,320
uh by the survey that service providers

00:01:08,880 --> 00:01:14,080
are responding to

00:01:10,320 --> 00:01:16,720
that the major growth is actually

00:01:14,080 --> 00:01:18,159
for the next few years would actually be

00:01:16,720 --> 00:01:20,400
a monetization through

00:01:18,159 --> 00:01:22,240
a network slicing by actually providing

00:01:20,400 --> 00:01:25,759
services with differentiated

00:01:22,240 --> 00:01:27,280
sla to a customers including enterprise

00:01:25,759 --> 00:01:30,159
including private customers

00:01:27,280 --> 00:01:31,759
and actually differentiated payments for

00:01:30,159 --> 00:01:34,320
those types of slides

00:01:31,759 --> 00:01:35,040
and this is something which will grow as

00:01:34,320 --> 00:01:41,680
5g

00:01:35,040 --> 00:01:44,799
deployment grows

00:01:41,680 --> 00:01:47,200
uh we can see uh that you know by the

00:01:44,799 --> 00:01:48,880
survey which was implemented through a

00:01:47,200 --> 00:01:52,320
different service providers

00:01:48,880 --> 00:01:56,960
again another survey by andrea this time

00:01:52,320 --> 00:02:00,000
that the major trend that they see

00:01:56,960 --> 00:02:01,360
for 5g is not just providing a different

00:02:00,000 --> 00:02:04,000
data tires

00:02:01,360 --> 00:02:04,799
for a different customers for how much

00:02:04,000 --> 00:02:08,080
they pay

00:02:04,799 --> 00:02:11,200
or per the bandits of the

00:02:08,080 --> 00:02:14,160
service that they're getting but

00:02:11,200 --> 00:02:16,160
actually differentiated plans for

00:02:14,160 --> 00:02:17,840
different customers and the variety of

00:02:16,160 --> 00:02:21,120
those differentiated plans

00:02:17,840 --> 00:02:22,560
so we do not see that many already

00:02:21,120 --> 00:02:25,360
responded that they have

00:02:22,560 --> 00:02:26,319
clear plans on how exactly they do it

00:02:25,360 --> 00:02:29,599
but we know that

00:02:26,319 --> 00:02:30,239
innovation is really there and those who

00:02:29,599 --> 00:02:32,319
actually

00:02:30,239 --> 00:02:33,760
plan to provide those different

00:02:32,319 --> 00:02:37,040
monetization plans

00:02:33,760 --> 00:02:39,040
will also be able to monetize

00:02:37,040 --> 00:02:40,720
5g and not just you know build the

00:02:39,040 --> 00:02:44,640
network without really

00:02:40,720 --> 00:02:44,640
getting back for their investment

00:02:46,319 --> 00:02:50,160
just one more you know business slide to

00:02:49,200 --> 00:02:53,040
show you

00:02:50,160 --> 00:02:55,840
before we move to the technical aspects

00:02:53,040 --> 00:02:59,280
of the solution

00:02:55,840 --> 00:03:02,560
and this is about changing of focus

00:02:59,280 --> 00:03:03,440
for 5g if for the time frame of two

00:03:02,560 --> 00:03:06,560
years

00:03:03,440 --> 00:03:09,519
we mostly see still you know the

00:03:06,560 --> 00:03:12,319
objective of improving system capacity

00:03:09,519 --> 00:03:13,440
offer faster speeds to end user for the

00:03:12,319 --> 00:03:16,480
time frame of

00:03:13,440 --> 00:03:17,599
five next years we really see uh the

00:03:16,480 --> 00:03:20,319
objective of

00:03:17,599 --> 00:03:20,720
of addressing your market and services

00:03:20,319 --> 00:03:22,879
then

00:03:20,720 --> 00:03:24,720
they send you we send new markets which

00:03:22,879 --> 00:03:26,480
is mostly you know to address and and

00:03:24,720 --> 00:03:28,080
new types of customers enterprise

00:03:26,480 --> 00:03:31,440
customers we see there

00:03:28,080 --> 00:03:33,920
a 42 percent actually

00:03:31,440 --> 00:03:35,440
believing in it and changing their 5g

00:03:33,920 --> 00:03:38,080
focus and this is where

00:03:35,440 --> 00:03:40,480
network slicing is strongly coming into

00:03:38,080 --> 00:03:40,480
the play

00:03:40,879 --> 00:03:46,799
uh here we just you know

00:03:44,000 --> 00:03:48,000
wanted to highlight several you know

00:03:46,799 --> 00:03:51,040
different types

00:03:48,000 --> 00:03:51,680
of the different services which are

00:03:51,040 --> 00:03:54,959
coming

00:03:51,680 --> 00:03:59,280
along with 5g and would be leveraging

00:03:54,959 --> 00:04:01,760
a high bandwidth low latency

00:03:59,280 --> 00:04:03,439
mobility must devise actually those

00:04:01,760 --> 00:04:06,560
characteristics that you know

00:04:03,439 --> 00:04:07,120
fight she brings and differential from a

00:04:06,560 --> 00:04:09,840
previous

00:04:07,120 --> 00:04:11,120
generation i would say that the key here

00:04:09,840 --> 00:04:13,439
is the combination

00:04:11,120 --> 00:04:14,879
of high bandwidth and low latency which

00:04:13,439 --> 00:04:17,040
goes along

00:04:14,879 --> 00:04:18,000
with gaming you know industrial

00:04:17,040 --> 00:04:21,359
automation

00:04:18,000 --> 00:04:24,000
for mass device uh high bandwidth

00:04:21,359 --> 00:04:25,280
mining services emergency service the

00:04:24,000 --> 00:04:27,680
important point here

00:04:25,280 --> 00:04:29,520
is that each one of those categories do

00:04:27,680 --> 00:04:32,400
not necessarily require

00:04:29,520 --> 00:04:35,600
all autographs like high bandwidth low

00:04:32,400 --> 00:04:38,639
latency along with my device and so on

00:04:35,600 --> 00:04:40,800
all those are different characteristics

00:04:38,639 --> 00:04:43,440
per each one of the service

00:04:40,800 --> 00:04:44,639
and for each those types of the service

00:04:43,440 --> 00:04:48,160
the objective is

00:04:44,639 --> 00:04:50,240
to build the slice matching

00:04:48,160 --> 00:04:51,520
those service parameters oil and another

00:04:50,240 --> 00:04:54,880
ball worth

00:04:51,520 --> 00:04:56,960
have slices and then put a new service

00:04:54,880 --> 00:04:58,400
on the slices that we already have or

00:04:56,960 --> 00:05:00,639
create a new slice

00:04:58,400 --> 00:05:02,320
which match the characteristic and the

00:05:00,639 --> 00:05:04,800
requirements of service

00:05:02,320 --> 00:05:06,800
which basically would satisfy the

00:05:04,800 --> 00:05:09,840
service requirements test delays

00:05:06,800 --> 00:05:10,160
of the service providers and this way we

00:05:09,840 --> 00:05:13,199
can

00:05:10,160 --> 00:05:14,800
actually guarantee the sla assurance

00:05:13,199 --> 00:05:18,160
between the service providers

00:05:14,800 --> 00:05:21,840
and the customer now with that

00:05:18,160 --> 00:05:25,039
say i would like to actually move

00:05:21,840 --> 00:05:27,440
a bit more of the technical

00:05:25,039 --> 00:05:28,639
discussion on how exactly that would

00:05:27,440 --> 00:05:31,840
need to be done

00:05:28,639 --> 00:05:34,960
so what exactly slice manager is a slice

00:05:31,840 --> 00:05:38,000
manager consists of the several parts

00:05:34,960 --> 00:05:41,680
and the definition for slice

00:05:38,000 --> 00:05:43,360
manager and the pieces as it builds goes

00:05:41,680 --> 00:05:45,120
through and supported by a different

00:05:43,360 --> 00:05:46,800
standardization organization we will

00:05:45,120 --> 00:05:49,360
talk about it a bit more

00:05:46,800 --> 00:05:50,720
specifically that process that i'm

00:05:49,360 --> 00:05:52,639
showing you right now

00:05:50,720 --> 00:05:54,160
was defined by free gpp so the key

00:05:52,639 --> 00:05:56,319
behind the process

00:05:54,160 --> 00:05:57,360
is the definition of life cycle of

00:05:56,319 --> 00:06:00,080
network slicing

00:05:57,360 --> 00:06:01,120
which com is which consists of creation

00:06:00,080 --> 00:06:03,600
modification

00:06:01,120 --> 00:06:05,039
deletion of the network style definition

00:06:03,600 --> 00:06:07,919
and update of the services

00:06:05,039 --> 00:06:08,400
capabilities to the network slide slides

00:06:07,919 --> 00:06:10,560
so

00:06:08,400 --> 00:06:11,600
there is a preparation phase which

00:06:10,560 --> 00:06:14,240
includes design

00:06:11,600 --> 00:06:15,440
onboarding and network environment

00:06:14,240 --> 00:06:17,360
preparation

00:06:15,440 --> 00:06:20,000
and then there is a life cycle of a

00:06:17,360 --> 00:06:23,120
network slice which is composed of

00:06:20,000 --> 00:06:25,600
creation then operation life cycle

00:06:23,120 --> 00:06:26,800
itself within the bigger life cycle of

00:06:25,600 --> 00:06:28,479
the network slice

00:06:26,800 --> 00:06:30,560
the operation includes of course

00:06:28,479 --> 00:06:33,280
activation deactivation

00:06:30,560 --> 00:06:34,000
supervision and reporting modification

00:06:33,280 --> 00:06:37,360
if needed

00:06:34,000 --> 00:06:39,919
modification comes into the play in case

00:06:37,360 --> 00:06:41,199
there are measurements or there is

00:06:39,919 --> 00:06:43,360
machine learning

00:06:41,199 --> 00:06:44,960
which identifies that something needs to

00:06:43,360 --> 00:06:48,240
be done for slice and then

00:06:44,960 --> 00:06:49,680
scaling or healing is implemented either

00:06:48,240 --> 00:06:51,919
on the network slice level

00:06:49,680 --> 00:06:53,120
or separate network function level of

00:06:51,919 --> 00:06:55,759
course the last phase

00:06:53,120 --> 00:06:56,400
is decommissioning of a slice or in

00:06:55,759 --> 00:06:58,800
other words

00:06:56,400 --> 00:07:00,080
termination so this is the process and

00:06:58,800 --> 00:07:03,280
how free gpp

00:07:00,080 --> 00:07:06,639
defines it

00:07:03,280 --> 00:07:09,680
uh here i am specifically talking about

00:07:06,639 --> 00:07:10,319
mdx slicing manager which of course is

00:07:09,680 --> 00:07:13,199
built

00:07:10,319 --> 00:07:15,360
following all those principles that i've

00:07:13,199 --> 00:07:17,440
shown on the previous picture of the

00:07:15,360 --> 00:07:18,000
different phases from which network

00:07:17,440 --> 00:07:20,639
slice

00:07:18,000 --> 00:07:22,400
is being created on boarding and

00:07:20,639 --> 00:07:23,120
actually life cycle management being

00:07:22,400 --> 00:07:25,759
managed

00:07:23,120 --> 00:07:27,039
and in case it needs to be terminated

00:07:25,759 --> 00:07:30,000
terminate

00:07:27,039 --> 00:07:31,520
so it includes the solution that we

00:07:30,000 --> 00:07:34,080
built the slice design

00:07:31,520 --> 00:07:35,039
slice automation and orchestration and

00:07:34,080 --> 00:07:38,160
slice operation

00:07:35,039 --> 00:07:39,120
and management phase and going through

00:07:38,160 --> 00:07:42,000
the different

00:07:39,120 --> 00:07:43,440
domains brand transport and core now it

00:07:42,000 --> 00:07:46,639
is very important to mention

00:07:43,440 --> 00:07:48,639
that slice manager in order to satisfy

00:07:46,639 --> 00:07:52,319
end-to-end service requirements

00:07:48,639 --> 00:07:52,960
need to run through a different domain

00:07:52,319 --> 00:07:56,319
strength

00:07:52,960 --> 00:07:59,039
transport and core perhaps for different

00:07:56,319 --> 00:07:59,680
reams perhaps through different clouds

00:07:59,039 --> 00:08:02,800
as well

00:07:59,680 --> 00:08:03,440
so the real solution which should be

00:08:02,800 --> 00:08:06,560
built

00:08:03,440 --> 00:08:08,479
here is to be able to get

00:08:06,560 --> 00:08:10,560
the measurements to get the real

00:08:08,479 --> 00:08:11,440
situation from all of the domain to

00:08:10,560 --> 00:08:15,039
compare it

00:08:11,440 --> 00:08:17,440
against sla of the service and to make

00:08:15,039 --> 00:08:18,400
appropriate actions in the appropriate

00:08:17,440 --> 00:08:21,680
domain

00:08:18,400 --> 00:08:24,800
in order to keep the level of

00:08:21,680 --> 00:08:25,680
quality provided by slice at the level

00:08:24,800 --> 00:08:28,240
which is

00:08:25,680 --> 00:08:29,039
needed by the sla and which is needed by

00:08:28,240 --> 00:08:31,360
the

00:08:29,039 --> 00:08:32,320
service provider requirements uh so

00:08:31,360 --> 00:08:35,039
horizontal

00:08:32,320 --> 00:08:35,599
integration is extremely important same

00:08:35,039 --> 00:08:38,080
for

00:08:35,599 --> 00:08:40,240
vertical integration because you know

00:08:38,080 --> 00:08:42,560
you need also to have a catalog with the

00:08:40,240 --> 00:08:44,959
slices you need to support the ordering

00:08:42,560 --> 00:08:47,120
system all this should be done by tmf

00:08:44,959 --> 00:08:49,760
apis in the standardized base so

00:08:47,120 --> 00:08:51,040
any slicing manager system can connect

00:08:49,760 --> 00:08:54,080
to any bss

00:08:51,040 --> 00:08:55,760
system uh even with the charging it also

00:08:54,080 --> 00:08:58,480
need to be connected because

00:08:55,760 --> 00:09:00,560
uh there is a new charging method

00:08:58,480 --> 00:09:03,600
developed in 3gbp by which

00:09:00,560 --> 00:09:06,560
a slice manager actually reports for

00:09:03,600 --> 00:09:09,279
charging on the slice level consumption

00:09:06,560 --> 00:09:09,680
not uh as a mobile session and this is

00:09:09,279 --> 00:09:12,240
why

00:09:09,680 --> 00:09:13,279
also the integration discharging manager

00:09:12,240 --> 00:09:15,920
is needed here

00:09:13,279 --> 00:09:17,839
and all this is being supported by mdx

00:09:15,920 --> 00:09:20,399
slice manager and i'm going to

00:09:17,839 --> 00:09:23,839
talk shortly about how that exactly

00:09:20,399 --> 00:09:23,839
relates also to honor

00:09:27,440 --> 00:09:37,839
so let me take you

00:09:30,800 --> 00:09:37,839
from the next one

00:09:37,920 --> 00:09:43,760
next one uh next one is actually show

00:09:41,200 --> 00:09:44,399
the life cycle manager in a bit more

00:09:43,760 --> 00:09:47,040
details

00:09:44,399 --> 00:09:48,640
you can see here clearly on the other

00:09:47,040 --> 00:09:52,000
side of the picture

00:09:48,640 --> 00:09:54,800
the more details about the modules which

00:09:52,000 --> 00:09:56,000
compose our 5g slicing manager on the

00:09:54,800 --> 00:09:58,000
slice design

00:09:56,000 --> 00:10:00,720
it's xnf and service packages on

00:09:58,000 --> 00:10:02,079
boarding flight and services modeling

00:10:00,720 --> 00:10:04,160
on the slice automation and

00:10:02,079 --> 00:10:08,800
orchestration it is a support

00:10:04,160 --> 00:10:10,240
of csmf nsmf module csmf communication

00:10:08,800 --> 00:10:12,399
service manager function

00:10:10,240 --> 00:10:14,560
and sms network service management

00:10:12,399 --> 00:10:15,839
function and if you are which is defined

00:10:14,560 --> 00:10:19,200
by snfv

00:10:15,839 --> 00:10:19,680
and sms those are domain manager for

00:10:19,200 --> 00:10:22,800
slice

00:10:19,680 --> 00:10:23,120
subnet meaning brand transfer to course

00:10:22,800 --> 00:10:26,640
or

00:10:23,120 --> 00:10:29,200
csmf and smf bin end-to-end solution

00:10:26,640 --> 00:10:30,000
actually coordinate and correlate domain

00:10:29,200 --> 00:10:32,320
management

00:10:30,000 --> 00:10:33,200
bnf managers of course configuration

00:10:32,320 --> 00:10:35,040
management

00:10:33,200 --> 00:10:37,440
homing and placement this is the key

00:10:35,040 --> 00:10:39,920
functionality in order to understand

00:10:37,440 --> 00:10:42,000
where which location which cloud to take

00:10:39,920 --> 00:10:42,800
a network function from for the specific

00:10:42,000 --> 00:10:44,880
slice

00:10:42,800 --> 00:10:47,120
in order to actually satisfy the service

00:10:44,880 --> 00:10:48,800
requirements as we know for example for

00:10:47,120 --> 00:10:51,839
the low latency service

00:10:48,800 --> 00:10:54,800
the critical piece is that

00:10:51,839 --> 00:10:55,680
the distributed user plan functions runs

00:10:54,800 --> 00:10:58,079
near the user

00:10:55,680 --> 00:11:00,240
in order to maintain low latency level

00:10:58,079 --> 00:11:02,399
policy engine of course along with the

00:11:00,240 --> 00:11:03,839
closed loop operation and then on slice

00:11:02,399 --> 00:11:06,959
operation and management

00:11:03,839 --> 00:11:10,000
of course we have an inventory which she

00:11:06,959 --> 00:11:11,839
maintains the real-time view

00:11:10,000 --> 00:11:13,600
of the resources in the network

00:11:11,839 --> 00:11:15,600
analytics machine learning and

00:11:13,600 --> 00:11:17,760
performance of manager

00:11:15,600 --> 00:11:20,079
that is needed in order to actually

00:11:17,760 --> 00:11:22,000
operate and maintain the slides

00:11:20,079 --> 00:11:23,440
on the downside of the picture you can

00:11:22,000 --> 00:11:26,720
actually see examples

00:11:23,440 --> 00:11:29,200
of several slides either using

00:11:26,720 --> 00:11:30,399
shared network functions that you can

00:11:29,200 --> 00:11:32,640
see on the core side

00:11:30,399 --> 00:11:34,800
or using dedicated network functions

00:11:32,640 --> 00:11:36,720
that you can see on the transport side

00:11:34,800 --> 00:11:38,720
and also on the right h side for

00:11:36,720 --> 00:11:42,000
instance in this particular case

00:11:38,720 --> 00:11:45,200
uh upf and smf in one

00:11:42,000 --> 00:11:47,920
case are shared in the other case are

00:11:45,200 --> 00:11:47,920
distributed

00:11:48,560 --> 00:11:55,200
now this this

00:11:52,160 --> 00:11:57,760
i'm going to show specifically on how

00:11:55,200 --> 00:12:01,440
process of instantiation

00:11:57,760 --> 00:12:03,040
is being done so slice instantiation so

00:12:01,440 --> 00:12:05,600
first of all of course

00:12:03,040 --> 00:12:07,360
csmf which is a communications

00:12:05,600 --> 00:12:10,480
management function this is the

00:12:07,360 --> 00:12:14,240
highest layer than the csmf

00:12:10,480 --> 00:12:18,160
only gets a service request by its name

00:12:14,240 --> 00:12:19,360
from the upper the cellar without really

00:12:18,160 --> 00:12:21,360
knowing yet

00:12:19,360 --> 00:12:22,639
what is network characteristic of the

00:12:21,360 --> 00:12:24,560
service it requires

00:12:22,639 --> 00:12:26,880
get a request for instantiation of a new

00:12:24,560 --> 00:12:28,160
supplies in this example for smart

00:12:26,880 --> 00:12:31,519
factory

00:12:28,160 --> 00:12:33,360
and now uh its job is to decompose

00:12:31,519 --> 00:12:35,360
relevant end-to-end network slice

00:12:33,360 --> 00:12:36,639
templates retrieve configuration and

00:12:35,360 --> 00:12:39,760
placement data

00:12:36,639 --> 00:12:43,040
look for available active resources xms

00:12:39,760 --> 00:12:46,320
and ram network slide instantiation flow

00:12:43,040 --> 00:12:49,839
now the next step is

00:12:46,320 --> 00:12:52,800
xnf resources location deployment

00:12:49,839 --> 00:12:54,880
and instantiation to the domain

00:12:52,800 --> 00:12:55,279
controller free domain controller run

00:12:54,880 --> 00:12:59,279
age

00:12:55,279 --> 00:13:01,680
transport and form then a dedicated 5g

00:12:59,279 --> 00:13:04,720
core functions for new network slides

00:13:01,680 --> 00:13:06,720
allocated and deployed where dedicated

00:13:04,720 --> 00:13:07,760
are needed dedicated means that they

00:13:06,720 --> 00:13:10,560
serve only

00:13:07,760 --> 00:13:11,519
one slide slice which is typically for

00:13:10,560 --> 00:13:14,079
instance

00:13:11,519 --> 00:13:15,519
uh you know for the low latency service

00:13:14,079 --> 00:13:19,519
those residing on

00:13:15,519 --> 00:13:21,920
edge and serving that slice to get again

00:13:19,519 --> 00:13:24,959
distributed upf in some cases even

00:13:21,920 --> 00:13:29,200
smf close to the user next phase is

00:13:24,959 --> 00:13:32,880
xns configuration and then the last one

00:13:29,200 --> 00:13:36,079
is for the sherid network function udm

00:13:32,880 --> 00:13:37,839
and ssf chf and pcf of the core

00:13:36,079 --> 00:13:39,839
they are updated about new network

00:13:37,839 --> 00:13:42,240
slides they already

00:13:39,839 --> 00:13:45,120
defined and they are going to be used in

00:13:42,240 --> 00:13:48,560
the shared mode for that same slides

00:13:45,120 --> 00:13:52,320
uh also additional one in rfmfnf

00:13:48,560 --> 00:13:55,600
nwdaf af and aosf updated by udm

00:13:52,320 --> 00:13:57,560
about the new network service that comes

00:13:55,600 --> 00:13:59,279
as the next fact of course transport

00:13:57,560 --> 00:14:01,279
configuration

00:13:59,279 --> 00:14:02,480
and then new network slice is

00:14:01,279 --> 00:14:05,680
established and can

00:14:02,480 --> 00:14:09,279
run through ram transporting

00:14:05,680 --> 00:14:11,839
this is the slide number 12.

00:14:09,279 --> 00:14:14,720
i'm going to show the process of slice

00:14:11,839 --> 00:14:14,720
operation

00:14:15,199 --> 00:14:21,440
and again first of all the performance

00:14:18,880 --> 00:14:25,120
of all data collection pmfm

00:14:21,440 --> 00:14:28,160
have been gathered from a dictionary xms

00:14:25,120 --> 00:14:32,079
and infrastructure firstly in its domain

00:14:28,160 --> 00:14:32,959
then a consolidated and whatever needs

00:14:32,079 --> 00:14:34,880
to be transferred

00:14:32,959 --> 00:14:36,160
from is transferred to the end-to-end

00:14:34,880 --> 00:14:38,959
network management

00:14:36,160 --> 00:14:39,360
then performance branch notification is

00:14:38,959 --> 00:14:42,000
done

00:14:39,360 --> 00:14:42,480
in case of a need then all those you

00:14:42,000 --> 00:14:46,639
know

00:14:42,480 --> 00:14:50,079
uh performance and

00:14:46,639 --> 00:14:52,959
fall data measurements are compared

00:14:50,079 --> 00:14:54,639
against the kpi in case of a bridge

00:14:52,959 --> 00:14:56,399
there is an lcm action

00:14:54,639 --> 00:14:58,320
triggered in accordance with policy

00:14:56,399 --> 00:15:01,760
rules which typically

00:14:58,320 --> 00:15:04,959
includes scaling or healing up down

00:15:01,760 --> 00:15:06,959
out in of the slice of the net specific

00:15:04,959 --> 00:15:09,680
network functions

00:15:06,959 --> 00:15:12,320
by action four and then based on massive

00:15:09,680 --> 00:15:14,240
data collection modeling camel analysis

00:15:12,320 --> 00:15:16,560
the system carried out performance

00:15:14,240 --> 00:15:19,440
prediction and provides early warning

00:15:16,560 --> 00:15:21,519
so we know about the problem in advance

00:15:19,440 --> 00:15:24,720
and can take connections in advance

00:15:21,519 --> 00:15:27,760
and not only then that a event

00:15:24,720 --> 00:15:31,759
of breaching occurs so

00:15:27,760 --> 00:15:34,240
this is um you know the way there is

00:15:31,759 --> 00:15:35,759
it all will not happen one day i would

00:15:34,240 --> 00:15:38,800
say at the beginning

00:15:35,759 --> 00:15:41,279
we will go through the system based

00:15:38,800 --> 00:15:42,240
on the statistics not necessarily based

00:15:41,279 --> 00:15:45,600
on the full ai

00:15:42,240 --> 00:15:46,800
ml analysis as time passes and more and

00:15:45,600 --> 00:15:49,440
more slices

00:15:46,800 --> 00:15:50,720
are being deployed in the network we

00:15:49,440 --> 00:15:52,800
will really move

00:15:50,720 --> 00:15:53,759
to machine learning based system with a

00:15:52,800 --> 00:15:57,120
prediction

00:15:53,759 --> 00:15:59,600
where you apply your action before

00:15:57,120 --> 00:16:00,240
actually any breach in the system has

00:15:59,600 --> 00:16:03,120
happened

00:16:00,240 --> 00:16:03,120
but in advance

00:16:03,839 --> 00:16:07,680
with that said let's move to the next

00:16:06,079 --> 00:16:11,360
plan

00:16:07,680 --> 00:16:15,839
and i promised to show and to talk

00:16:11,360 --> 00:16:15,839
about standardization

00:16:17,120 --> 00:16:21,759
so since this is a very hot topic there

00:16:20,399 --> 00:16:24,480
are really

00:16:21,759 --> 00:16:25,360
all of the different standardization

00:16:24,480 --> 00:16:28,240
body

00:16:25,360 --> 00:16:30,240
dealing with slicing one or another way

00:16:28,240 --> 00:16:32,560
so if we talk about free gbp

00:16:30,240 --> 00:16:34,639
and this is probably the major one for

00:16:32,560 --> 00:16:36,399
gpp defines network slicing

00:16:34,639 --> 00:16:38,880
including use case realization and

00:16:36,399 --> 00:16:42,320
modeling foreign and for core

00:16:38,880 --> 00:16:45,199
18 defines virtualized domain of

00:16:42,320 --> 00:16:46,880
or in other words what etsy nfl should

00:16:45,199 --> 00:16:47,920
do in order to orchestrate network

00:16:46,880 --> 00:16:50,560
slicing

00:16:47,920 --> 00:16:51,279
and simek of course orchestrate age

00:16:50,560 --> 00:16:54,000
platform

00:16:51,279 --> 00:16:54,720
for vran and low latency services it is

00:16:54,000 --> 00:16:57,519
a depend

00:16:54,720 --> 00:16:59,519
that the same is the organization

00:16:57,519 --> 00:17:00,480
standardization body which actually

00:16:59,519 --> 00:17:02,959
defines

00:17:00,480 --> 00:17:04,400
end-to-end network slides and how it's

00:17:02,959 --> 00:17:06,959
supposed to function across

00:17:04,400 --> 00:17:08,720
trend transport and core and

00:17:06,959 --> 00:17:10,799
consolidated view

00:17:08,720 --> 00:17:12,160
of assurance for the network slides and

00:17:10,799 --> 00:17:13,120
the life cycle management for the

00:17:12,160 --> 00:17:16,480
network slides

00:17:13,120 --> 00:17:19,839
gcma has developed gsma has developed

00:17:16,480 --> 00:17:21,439
a different slice profiles methyl store

00:17:19,839 --> 00:17:23,839
develops end-to-end service

00:17:21,439 --> 00:17:26,400
orchestration and apis between domains

00:17:23,839 --> 00:17:27,120
and carriers specifically for the open

00:17:26,400 --> 00:17:30,240
source

00:17:27,120 --> 00:17:31,679
the biggest work has been done in onap

00:17:30,240 --> 00:17:33,520
on and oren

00:17:31,679 --> 00:17:35,280
or and also includes open source

00:17:33,520 --> 00:17:37,440
community in order to develop

00:17:35,280 --> 00:17:39,679
a de facto standard open source

00:17:37,440 --> 00:17:42,320
implementation for network slice

00:17:39,679 --> 00:17:43,440
for network slicing and this is really a

00:17:42,320 --> 00:17:46,960
very very very

00:17:43,440 --> 00:17:49,440
important work as you know we validate

00:17:46,960 --> 00:17:51,280
what actually in honor of and in orange

00:17:49,440 --> 00:17:53,679
what actually is being defined by

00:17:51,280 --> 00:17:55,840
standards in many cases by the way we

00:17:53,679 --> 00:17:56,880
figure out that something has not been

00:17:55,840 --> 00:17:58,360
defined fully

00:17:56,880 --> 00:18:00,240
and then we take it back to

00:17:58,360 --> 00:18:01,679
standardization values we have an

00:18:00,240 --> 00:18:04,080
ongoing relationship

00:18:01,679 --> 00:18:05,039
with friendship with elsie's at the same

00:18:04,080 --> 00:18:08,160
this essay

00:18:05,039 --> 00:18:10,799
and the field is mac and the only

00:18:08,160 --> 00:18:12,160
kind of you know we basically validate

00:18:10,799 --> 00:18:14,320
whatever they define

00:18:12,160 --> 00:18:16,160
we provide that early implementation of

00:18:14,320 --> 00:18:18,559
whatever they define

00:18:16,160 --> 00:18:19,200
and we take it back to them in order to

00:18:18,559 --> 00:18:21,120
fix

00:18:19,200 --> 00:18:22,799
the fee system so this is really the

00:18:21,120 --> 00:18:26,080
best possible way in which

00:18:22,799 --> 00:18:27,520
standard works in the industry of

00:18:26,080 --> 00:18:30,960
actually validated it

00:18:27,520 --> 00:18:32,720
right away along with the definition of

00:18:30,960 --> 00:18:36,000
how that should work

00:18:32,720 --> 00:18:36,480
uh let's move and on the next slide

00:18:36,000 --> 00:18:38,880
which i

00:18:36,480 --> 00:18:41,039
show as an example is network size

00:18:38,880 --> 00:18:41,360
management and how it is being defined

00:18:41,039 --> 00:18:44,960
in

00:18:41,360 --> 00:18:45,520
scnfb to show basically that you know as

00:18:44,960 --> 00:18:47,280
i said

00:18:45,520 --> 00:18:49,200
all of the organization also here

00:18:47,280 --> 00:18:52,000
working together so what you can see on

00:18:49,200 --> 00:18:55,840
the upper side of the picture is csmf

00:18:52,000 --> 00:18:58,640
nsmf nssmf uh defined by pgp

00:18:55,840 --> 00:18:59,760
communicating with nfvo and that

00:18:58,640 --> 00:19:02,799
interface

00:18:59,760 --> 00:19:06,400
is defined by snfv and if you

00:19:02,799 --> 00:19:08,160
is an orchestration uh defined by snfv

00:19:06,400 --> 00:19:10,000
and the way that whole slice and

00:19:08,160 --> 00:19:13,039
management system communicate

00:19:10,000 --> 00:19:16,720
with element management with dnf manager

00:19:13,039 --> 00:19:17,600
and whatever is exist in the system by

00:19:16,720 --> 00:19:19,200
the way

00:19:17,600 --> 00:19:21,760
not necessarily all of the network

00:19:19,200 --> 00:19:24,080
functions are virtual it can be pna

00:19:21,760 --> 00:19:26,160
physical network function it can be vnf

00:19:24,080 --> 00:19:28,320
virtual network function it can be even

00:19:26,160 --> 00:19:30,880
cloud native network functions so

00:19:28,320 --> 00:19:32,400
uh the system supports supposed to

00:19:30,880 --> 00:19:34,480
support and actually support

00:19:32,400 --> 00:19:35,840
all those types of network function and

00:19:34,480 --> 00:19:39,120
specifically owner

00:19:35,840 --> 00:19:42,080
also supports all those types of

00:19:39,120 --> 00:19:42,400
different of network functions in order

00:19:42,080 --> 00:19:45,760
to

00:19:42,400 --> 00:19:46,559
see them uh to combine them into the

00:19:45,760 --> 00:19:49,520
slides

00:19:46,559 --> 00:19:51,520
to get a measurement from them and to

00:19:49,520 --> 00:19:53,200
operate them

00:19:51,520 --> 00:19:54,880
for physical network function of course

00:19:53,200 --> 00:19:57,760
there are some limitations

00:19:54,880 --> 00:19:59,200
in terms of auto scaling in terms of the

00:19:57,760 --> 00:20:01,840
healing but whatever

00:19:59,200 --> 00:20:04,320
can be done also for pnf is being

00:20:01,840 --> 00:20:04,320
performed

00:20:05,360 --> 00:20:10,720
uh this goes back a little to the

00:20:08,240 --> 00:20:11,360
definition was important to kind of you

00:20:10,720 --> 00:20:14,159
know

00:20:11,360 --> 00:20:16,080
show that whole definition of the

00:20:14,159 --> 00:20:16,880
network slice related management

00:20:16,080 --> 00:20:19,919
function

00:20:16,880 --> 00:20:20,480
as being defined by 30bp because we

00:20:19,919 --> 00:20:23,760
refer

00:20:20,480 --> 00:20:25,679
that to that a lot in our work

00:20:23,760 --> 00:20:27,600
so communication service management

00:20:25,679 --> 00:20:29,520
function again is getting the

00:20:27,600 --> 00:20:31,200
communication service requests like

00:20:29,520 --> 00:20:34,159
volte for example

00:20:31,200 --> 00:20:34,720
and speaking this and asmr translates

00:20:34,159 --> 00:20:37,679
actually

00:20:34,720 --> 00:20:39,440
the receipt requirements into a network

00:20:37,679 --> 00:20:41,200
slice related requirements

00:20:39,440 --> 00:20:42,559
and passes them to natural slice

00:20:41,200 --> 00:20:44,880
management function

00:20:42,559 --> 00:20:46,000
the network size management function is

00:20:44,880 --> 00:20:48,720
communicated

00:20:46,000 --> 00:20:50,320
with a different domain management also

00:20:48,720 --> 00:20:53,280
domain orchestrator

00:20:50,320 --> 00:20:55,600
and smf infringement terminology

00:20:53,280 --> 00:20:56,320
diabetes slice subnet management

00:20:55,600 --> 00:20:58,880
function

00:20:56,320 --> 00:21:00,159
it basically splits the service network

00:20:58,880 --> 00:21:02,880
service requirements

00:21:00,159 --> 00:21:04,080
for different domain requirements and

00:21:02,880 --> 00:21:07,280
vice versa

00:21:04,080 --> 00:21:09,520
gets information from a different domain

00:21:07,280 --> 00:21:10,559
about slice operation about slice

00:21:09,520 --> 00:21:13,520
assurance

00:21:10,559 --> 00:21:14,159
in order to be able to actually again

00:21:13,520 --> 00:21:17,120
operate

00:21:14,159 --> 00:21:19,919
and change the network slides in the

00:21:17,120 --> 00:21:19,919
entrance view

00:21:23,840 --> 00:21:30,320
this is also very important sliders

00:21:27,840 --> 00:21:31,360
we talk about honor and we also talked

00:21:30,320 --> 00:21:33,760
about to own up

00:21:31,360 --> 00:21:36,240
and mdoc system and i'm talking about

00:21:33,760 --> 00:21:39,360
mdoc solution for network splicing

00:21:36,240 --> 00:21:42,880
is based on all of our sdc

00:21:39,360 --> 00:21:43,280
our ai uh actually not just coming from

00:21:42,880 --> 00:21:45,919
one

00:21:43,280 --> 00:21:46,559
but we co-created them in on up along

00:21:45,919 --> 00:21:49,120
this

00:21:46,559 --> 00:21:52,000
18t since the very start of tonight so

00:21:49,120 --> 00:21:54,960
you can see on this slide definitely

00:21:52,000 --> 00:21:55,280
how widely slice manager implementation

00:21:54,960 --> 00:21:58,159
is

00:21:55,280 --> 00:21:58,880
across a different kind of modules it

00:21:58,159 --> 00:22:02,159
covers

00:21:58,880 --> 00:22:05,600
quite all of nature on upon

00:22:02,159 --> 00:22:09,600
owner on modules as the c a i

00:22:05,600 --> 00:22:13,679
a saw sdnc rc

00:22:09,600 --> 00:22:14,799
cds which is a relatively new uh module

00:22:13,679 --> 00:22:18,240
in honor

00:22:14,799 --> 00:22:21,600
portal analytics entity which is dc

00:22:18,240 --> 00:22:22,320
policy of uh entity office about

00:22:21,600 --> 00:22:25,280
placement

00:22:22,320 --> 00:22:27,200
and homing in honor so you can see here

00:22:25,280 --> 00:22:29,200
slice management on boarding

00:22:27,200 --> 00:22:32,320
configuration and control

00:22:29,200 --> 00:22:35,600
uh optimization all these is handled by

00:22:32,320 --> 00:22:38,480
different owner modules and quiet

00:22:35,600 --> 00:22:40,320
everything is supported right now it is

00:22:38,480 --> 00:22:41,120
not that walk has finished but we

00:22:40,320 --> 00:22:44,000
advancing

00:22:41,120 --> 00:22:45,200
a lot of system thesis also now in

00:22:44,000 --> 00:22:48,320
berlin release

00:22:45,200 --> 00:22:49,919
and you know even as we talk i really

00:22:48,320 --> 00:22:52,080
we have you know almost a daily

00:22:49,919 --> 00:22:54,000
discussions on the functionality of the

00:22:52,080 --> 00:22:56,880
different modules in order to support

00:22:54,000 --> 00:22:58,480
network slicing and hopefully uh by

00:22:56,880 --> 00:23:01,360
building release it would be

00:22:58,480 --> 00:23:01,919
a we would be able to support all those

00:23:01,360 --> 00:23:04,720
you know

00:23:01,919 --> 00:23:05,919
different layers of slicing csmf and smf

00:23:04,720 --> 00:23:08,400
and ssmf

00:23:05,919 --> 00:23:10,000
also internal to own an external

00:23:08,400 --> 00:23:10,960
provided by a vendor and then

00:23:10,000 --> 00:23:13,440
connectivity

00:23:10,960 --> 00:23:15,440
to the external nss and that would

00:23:13,440 --> 00:23:17,200
basically mean that any service provider

00:23:15,440 --> 00:23:18,080
can take you know on the solution for

00:23:17,200 --> 00:23:22,480
network slides

00:23:18,080 --> 00:23:25,919
and actually deploy them uh

00:23:22,480 --> 00:23:29,440
just a few words on the poc that we ran

00:23:25,919 --> 00:23:31,440
in mdocs on actually connecting

00:23:29,440 --> 00:23:33,120
or showcasing the network size

00:23:31,440 --> 00:23:35,200
functionality with the real vendor

00:23:33,120 --> 00:23:37,840
implementation so we had

00:23:35,200 --> 00:23:38,320
a collaboration with maveniere for their

00:23:37,840 --> 00:23:41,200
5g

00:23:38,320 --> 00:23:41,919
core vista elko for the assurance system

00:23:41,200 --> 00:23:44,240
nexar

00:23:41,919 --> 00:23:46,400
for the actual service the car service

00:23:44,240 --> 00:23:49,120
running on top of the slice

00:23:46,400 --> 00:23:50,240
and this in that plc we design network

00:23:49,120 --> 00:23:53,440
slide service

00:23:50,240 --> 00:23:57,120
create determinative 5g core subnet

00:23:53,440 --> 00:23:59,120
did scaling in out for the core slice

00:23:57,120 --> 00:24:00,760
the emphasis was on the corner for

00:23:59,120 --> 00:24:01,919
functionality so as i said the

00:24:00,760 --> 00:24:04,000
functionality

00:24:01,919 --> 00:24:06,000
the full functionality brands across

00:24:04,000 --> 00:24:08,640
rent transport and core

00:24:06,000 --> 00:24:09,039
and show 5g core slice in inventory

00:24:08,640 --> 00:24:11,039
that's

00:24:09,039 --> 00:24:12,799
extremely important in order you know to

00:24:11,039 --> 00:24:15,360
steal

00:24:12,799 --> 00:24:17,520
the resources of a different network

00:24:15,360 --> 00:24:18,400
functions and to know in the real time

00:24:17,520 --> 00:24:20,799
on where

00:24:18,400 --> 00:24:22,960
there is a possibility to scale to heal

00:24:20,799 --> 00:24:25,600
there is a need to scale to heal

00:24:22,960 --> 00:24:25,600
and so on

00:24:26,159 --> 00:24:29,200
so there is a road to network slicing

00:24:28,640 --> 00:24:31,919
right

00:24:29,200 --> 00:24:32,960
as i said previously it all will not

00:24:31,919 --> 00:24:34,799
happen one day

00:24:32,960 --> 00:24:36,880
it is not that in one day from the

00:24:34,799 --> 00:24:37,919
system which supports a different

00:24:36,880 --> 00:24:41,039
services

00:24:37,919 --> 00:24:44,159
running over the same network

00:24:41,039 --> 00:24:47,520
we are going to support really

00:24:44,159 --> 00:24:49,520
a virtual network provided for each type

00:24:47,520 --> 00:24:50,480
of the service and this is what slicing

00:24:49,520 --> 00:24:53,120
is about

00:24:50,480 --> 00:24:53,520
so if we go if you look specifically on

00:24:53,120 --> 00:24:56,640
how

00:24:53,520 --> 00:24:58,400
evolution would be done uh and by the

00:24:56,640 --> 00:25:00,400
way it is also important to highlight

00:24:58,400 --> 00:25:03,600
that the real advantage of the system

00:25:00,400 --> 00:25:06,640
can be implemented or can be

00:25:03,600 --> 00:25:07,760
get only when we have a 5g standalone

00:25:06,640 --> 00:25:11,039
which means

00:25:07,760 --> 00:25:12,400
a new radio along with 5g standalone

00:25:11,039 --> 00:25:15,039
core

00:25:12,400 --> 00:25:17,520
so at the beginning of the real slicing

00:25:15,039 --> 00:25:20,159
deployment network slicing deployment

00:25:17,520 --> 00:25:22,880
you know we would have capacity-based

00:25:20,159 --> 00:25:25,760
perhaps service specific slices

00:25:22,880 --> 00:25:27,200
uh not that many of the slices i would

00:25:25,760 --> 00:25:30,080
anticipate three four

00:25:27,200 --> 00:25:32,000
five six different types of slices

00:25:30,080 --> 00:25:34,640
perhaps several services

00:25:32,000 --> 00:25:37,919
is a similar characteristics running

00:25:34,640 --> 00:25:40,880
over the same slice perhaps a single one

00:25:37,919 --> 00:25:41,520
next step would be deploying it more at

00:25:40,880 --> 00:25:44,559
scale

00:25:41,520 --> 00:25:48,000
which is meaning more different types

00:25:44,559 --> 00:25:50,960
slices uh implemented in the network

00:25:48,000 --> 00:25:52,640
automation introduction to some level

00:25:50,960 --> 00:25:55,760
perhaps not the full

00:25:52,640 --> 00:25:57,679
email leveraging but some automation

00:25:55,760 --> 00:26:00,080
level for scaling for healing

00:25:57,679 --> 00:26:02,400
will be there h computing of course

00:26:00,080 --> 00:26:03,279
because for typical 5g operation as i

00:26:02,400 --> 00:26:05,679
said you know

00:26:03,279 --> 00:26:07,200
a low latency is needed and this is why

00:26:05,679 --> 00:26:10,720
you know this is where h

00:26:07,200 --> 00:26:14,440
is coming into the plane now as we move

00:26:10,720 --> 00:26:17,279
for the through i would say 2028

00:26:14,440 --> 00:26:20,559
2029 we would really see

00:26:17,279 --> 00:26:23,360
er that coming into the big scale

00:26:20,559 --> 00:26:23,919
in terms of many many network slices or

00:26:23,360 --> 00:26:28,480
slice

00:26:23,919 --> 00:26:31,200
instances types required in the network

00:26:28,480 --> 00:26:33,520
and the full 5g coverage would be

00:26:31,200 --> 00:26:35,279
implemented not just in some

00:26:33,520 --> 00:26:37,120
geographical places there would be a

00:26:35,279 --> 00:26:38,559
possibility to actually leverage slice

00:26:37,120 --> 00:26:41,840
but pretty much

00:26:38,559 --> 00:26:44,000
everywhere and basically all would be

00:26:41,840 --> 00:26:45,520
application driven not just for the

00:26:44,000 --> 00:26:48,240
services you know

00:26:45,520 --> 00:26:49,760
initially defined in catalog but really

00:26:48,240 --> 00:26:51,919
in a dynamic way

00:26:49,760 --> 00:26:52,880
when requirements for the service or for

00:26:51,919 --> 00:26:55,840
the application

00:26:52,880 --> 00:26:57,840
are coming the slice is you know

00:26:55,840 --> 00:26:58,640
automatically being created by the

00:26:57,840 --> 00:27:02,159
system

00:26:58,640 --> 00:27:04,559
assuring operators assured by the system

00:27:02,159 --> 00:27:05,520
and they are going there of course the

00:27:04,559 --> 00:27:08,640
road

00:27:05,520 --> 00:27:10,640
may take a while but eventually we

00:27:08,640 --> 00:27:11,919
are heading there and in that sense you

00:27:10,640 --> 00:27:14,480
know i

00:27:11,919 --> 00:27:16,480
kind of speak was from the perspective

00:27:14,480 --> 00:27:17,440
of femtex and from the perspective of

00:27:16,480 --> 00:27:20,480
honor here

00:27:17,440 --> 00:27:22,320
so also be in endocs as i showed you

00:27:20,480 --> 00:27:24,799
know on the previous slides

00:27:22,320 --> 00:27:25,679
are taking our step in that direction on

00:27:24,799 --> 00:27:28,159
building our own

00:27:25,679 --> 00:27:30,240
end-to-end network slice manager by

00:27:28,159 --> 00:27:32,880
owner requirements actually based

00:27:30,240 --> 00:27:33,520
on and when i said based on honor and

00:27:32,880 --> 00:27:35,919
for

00:27:33,520 --> 00:27:36,559
lots of work is being done actually in

00:27:35,919 --> 00:27:39,039
order

00:27:36,559 --> 00:27:40,880
to extend and enhance functionality of

00:27:39,039 --> 00:27:42,080
the network's license so whatever we are

00:27:40,880 --> 00:27:44,799
taking from there

00:27:42,080 --> 00:27:45,440
as a vendor is being enhanced all the

00:27:44,799 --> 00:27:48,880
time

00:27:45,440 --> 00:27:51,360
eventually it will be and as i said

00:27:48,880 --> 00:27:52,159
many significant steps has already been

00:27:51,360 --> 00:27:54,640
passed

00:27:52,159 --> 00:27:56,559
end-to-end systems supporting rent

00:27:54,640 --> 00:27:58,640
transport and core across

00:27:56,559 --> 00:28:00,240
different domains across the different

00:27:58,640 --> 00:28:04,080
public and private cloud

00:28:00,240 --> 00:28:07,600
types across the different wheels

00:28:04,080 --> 00:28:09,600
for pnfs for vnf for cnn

00:28:07,600 --> 00:28:11,360
support of all of those network

00:28:09,600 --> 00:28:14,159
functions for the slicing

00:28:11,360 --> 00:28:16,960
and we are getting there with that i

00:28:14,159 --> 00:28:31,840
would like to thank you and

00:28:16,960 --> 00:28:31,840
answer any questions you might have

00:28:36,080 --> 00:28:39,279
hello everyone we have now taken the

00:28:38,080 --> 00:28:42,320
phone bridge live

00:28:39,279 --> 00:28:42,799
and you can ask questions of allah via

00:28:42,320 --> 00:28:45,520
the

00:28:42,799 --> 00:28:45,840
q a chat we do only have about a minute

00:28:45,520 --> 00:28:49,120
uh

00:28:45,840 --> 00:28:51,039
for or so for live questions

00:28:49,120 --> 00:28:52,799
after that you can go to a slack channel

00:28:51,039 --> 00:28:55,840
that i will send out as a broadcast in a

00:28:52,799 --> 00:28:57,520
moment to continue the conversation

00:28:55,840 --> 00:28:59,200
ella there is a couple of questions

00:28:57,520 --> 00:29:00,080
already we've moved those over to the

00:28:59,200 --> 00:29:01,200
admin chat

00:29:00,080 --> 00:29:04,480
if you want to take a look at those and

00:29:01,200 --> 00:29:10,000
respond to at least the first one

00:29:04,480 --> 00:29:10,000
sure let me look into that

00:29:10,840 --> 00:29:15,679
and just

00:29:13,360 --> 00:29:15,679
um

00:29:16,960 --> 00:29:23,520
okay uh there is an

00:29:20,159 --> 00:29:25,279
success in this infrastructure in this

00:29:23,520 --> 00:29:26,399
architecture many vendors tell us

00:29:25,279 --> 00:29:28,880
limitations

00:29:26,399 --> 00:29:29,679
shown here we want to deploy seismic for

00:29:28,880 --> 00:29:32,640
each domain

00:29:29,679 --> 00:29:33,520
and then top level uh probably the

00:29:32,640 --> 00:29:37,039
attention was

00:29:33,520 --> 00:29:40,880
to nsf mf right so

00:29:37,039 --> 00:29:43,120
uh yes nssm because nssf

00:29:40,880 --> 00:29:44,880
is a part of the core network

00:29:43,120 --> 00:29:48,960
architecture and smf

00:29:44,880 --> 00:29:52,000
is the domain manager and yes

00:29:48,960 --> 00:29:53,039
the idea here is any systems that any

00:29:52,000 --> 00:29:55,039
system

00:29:53,039 --> 00:29:56,880
would be managing each one of the

00:29:55,039 --> 00:30:00,000
domains separately

00:29:56,880 --> 00:30:03,360
and a sms per domain and there is an

00:30:00,000 --> 00:30:06,399
sms layer which is network

00:30:03,360 --> 00:30:08,799
slide management function

00:30:06,399 --> 00:30:09,679
which actually kind of coordinates and

00:30:08,799 --> 00:30:13,840
correlates

00:30:09,679 --> 00:30:15,679
those nss maps and doing it in a closed

00:30:13,840 --> 00:30:17,919
loop operation by actually

00:30:15,679 --> 00:30:20,240
getting measurements from everyone and

00:30:17,919 --> 00:30:21,760
then you know providing the comments to

00:30:20,240 --> 00:30:24,000
everyone splitting it

00:30:21,760 --> 00:30:24,960
among the different domains but per each

00:30:24,000 --> 00:30:28,399
one of the domains

00:30:24,960 --> 00:30:31,520
there would be its own an assessment uh

00:30:28,399 --> 00:30:33,440
also um

00:30:31,520 --> 00:30:37,840
can you describe the dynamics of setting

00:30:33,440 --> 00:30:37,840
up ip

00:30:38,880 --> 00:30:42,640
unfortunately i'm sorry that is it is

00:30:40,480 --> 00:30:44,960
time for the end of our session

00:30:42,640 --> 00:30:46,480
um but i have broadcasted the slack

00:30:44,960 --> 00:30:47,919
channel we'll move the remaining two

00:30:46,480 --> 00:30:50,320
questions that were in

00:30:47,919 --> 00:30:51,679
the q a chat over to the slack channel

00:30:50,320 --> 00:30:52,799
and then you can continue the

00:30:51,679 --> 00:30:54,880
conversation

00:30:52,799 --> 00:30:57,039
via the slack channel that was in the

00:30:54,880 --> 00:30:59,200
broadcast message

00:30:57,039 --> 00:31:00,240
thank you very much thank you and thank

00:30:59,200 --> 00:31:05,840
you all for

00:31:00,240 --> 00:31:05,840
attending the session thank you bye-bye

00:31:31,279 --> 00:31:33,360

YouTube URL: https://www.youtube.com/watch?v=A9DDe0alvGo


