Title: Keynote: Open Source, Open Standards & Open Vendors - Dr. Eyal Felstaine, Amdocs
Publication date: 2017-04-10
Playlist: Open Networking Summit 2017
Description: 
	Keynote: Open Source, Open Standards & Open Vendors - Dr. Eyal Felstaine, CTO, Head of Technology Office, Amdocs

About Dr. Eyal Felstaine
Dr. Eyal Felstaine he is responsible for shaping Amdocs’ product vision, strategy, and long-term roadmap for Network Cloud Service Orchestration and NG OSS. An innovator and entrepreneur by nature, Eyal has co-founded and held CXO positions in several successful start ups in the communications and Evolved Packet Core space. These include Traffix Systems, acquired by F5 [NASDAQ: FFIV], Allot Communications [NASDAQ:ALLT] and SANRAD, acquired by OCZ Technology [NASDAQ: OCZ]. Prior to joining Amdocs Eyal served as Vice President of Cyber Security Division at Radware [NASDAQ: RDWR].

An experienced speaker at industry conferences, Eyal has authored numerous articles, referred journal papers, patents and internet standardization documents (RFC).  He serves as a senior staff faculty member in the Information Systems Engineering department of Ben Gurion University, where he heads a research team focused on wireless communications and network security, and has won prestigious awards for research excellence. Eyal holds a Ph.D. and an M.A.in Computer Science, as well as a B.Sc. in Electrical Engineering – all from the Technion, Israel Institute of Technology. He also holds an MBA from Columbia University, NY and an MBA from the London Business School.
Captions: 
	00:00:00,030 --> 00:00:08,940
okay good morning and I'm going to talk

00:00:04,680 --> 00:00:13,620
to you today about operators and about

00:00:08,940 --> 00:00:17,070
open source and about open source

00:00:13,620 --> 00:00:19,260
Orchestrator as opposed to closed source

00:00:17,070 --> 00:00:22,170
Orchestrator and I'm going to make a

00:00:19,260 --> 00:00:27,990
comparison for those of you who are not

00:00:22,170 --> 00:00:30,150
expert in onboarding new services I'm

00:00:27,990 --> 00:00:33,030
gonna have a one minute explanation of

00:00:30,150 --> 00:00:35,520
what does it really entail when you want

00:00:33,030 --> 00:00:37,530
to have a new service you need to

00:00:35,520 --> 00:00:41,610
unboard it you take the VNA as an

00:00:37,530 --> 00:00:44,190
operator you consume the vnf form the

00:00:41,610 --> 00:00:49,559
vnf vendor including all of the

00:00:44,190 --> 00:00:52,440
artifacts Tosca automation script all

00:00:49,559 --> 00:00:57,530
the code that comes with it from the VNA

00:00:52,440 --> 00:01:00,690
vendor then once you you approve it and

00:00:57,530 --> 00:01:02,969
certify it you have it on the drawing

00:01:00,690 --> 00:01:07,970
board and you start putting up the

00:01:02,969 --> 00:01:10,350
service on the canvas you add the

00:01:07,970 --> 00:01:13,799
automation script for the service the

00:01:10,350 --> 00:01:18,240
policies the workflow and it's ready to

00:01:13,799 --> 00:01:19,320
being tested now you test it usually

00:01:18,240 --> 00:01:21,960
those bugs

00:01:19,320 --> 00:01:25,110
there's issue going back to the drawing

00:01:21,960 --> 00:01:27,450
board in an iterative manner until it's

00:01:25,110 --> 00:01:32,100
being gay ready

00:01:27,450 --> 00:01:35,520
and then you package it and you move it

00:01:32,100 --> 00:01:39,560
to operation after you distribute it

00:01:35,520 --> 00:01:42,689
it's in operation and it's either gonna

00:01:39,560 --> 00:01:46,229
work for some time but if there's issues

00:01:42,689 --> 00:01:50,250
you need to read a bug it this picture

00:01:46,229 --> 00:01:54,320
is very beautiful on one hand but it

00:01:50,250 --> 00:01:57,930
derives a very very complex and

00:01:54,320 --> 00:02:00,240
labor-intensive process what you see in

00:01:57,930 --> 00:02:03,590
the following slide you don't need to

00:02:00,240 --> 00:02:07,439
understand every square every time here

00:02:03,590 --> 00:02:13,440
but you need to understand that every

00:02:07,439 --> 00:02:19,680
child here actually means labour cost

00:02:13,440 --> 00:02:22,680
or pecks sweat and tears months or a

00:02:19,680 --> 00:02:24,750
period of time in a cascade manner and

00:02:22,680 --> 00:02:28,280
water for money until the service is

00:02:24,750 --> 00:02:34,250
ready and in fact every box here

00:02:28,280 --> 00:02:37,020
represent the embodiment of what's well

00:02:34,250 --> 00:02:39,570
we moved to nmv because we wanted to

00:02:37,020 --> 00:02:42,180
have a loyal effects and agility in

00:02:39,570 --> 00:02:44,730
those sets of boxes and that's just

00:02:42,180 --> 00:02:47,070
engineering an operation did this is

00:02:44,730 --> 00:02:49,950
actually walking against the business

00:02:47,070 --> 00:02:54,210
case of energy because it's a very very

00:02:49,950 --> 00:02:57,480
long process so I'm going to give you an

00:02:54,210 --> 00:03:01,200
example of troubleshooting and energy

00:02:57,480 --> 00:03:04,590
issue and that's something that we had

00:03:01,200 --> 00:03:07,440
in in in life live cases with our

00:03:04,590 --> 00:03:10,800
customers and I'm going to show you how

00:03:07,440 --> 00:03:12,840
we run this in two environments one of

00:03:10,800 --> 00:03:15,480
them with an open source Orchestrator or

00:03:12,840 --> 00:03:17,580
at least orchestrated that a the

00:03:15,480 --> 00:03:20,340
community has access to and the other

00:03:17,580 --> 00:03:23,820
one with closed source Orchestrator and

00:03:20,340 --> 00:03:30,660
you would see I think by day by the

00:03:23,820 --> 00:03:34,500
comparison of one box that a which one

00:03:30,660 --> 00:03:37,470
is really easier let's say you have an

00:03:34,500 --> 00:03:40,590
energy issue we have three pillars here

00:03:37,470 --> 00:03:43,620
at the center we have the CSP the

00:03:40,590 --> 00:03:46,320
operator at the right side we have the

00:03:43,620 --> 00:03:49,200
the closed source proprietary

00:03:46,320 --> 00:03:51,480
Orchestrator company organization and

00:03:49,200 --> 00:03:53,100
the left side we have the vnf vendor

00:03:51,480 --> 00:03:56,190
organization what's happening is the

00:03:53,100 --> 00:04:00,170
following you have a problem it is error

00:03:56,190 --> 00:04:03,480
it is this discovered in operation

00:04:00,170 --> 00:04:06,450
clearly somebody make phone calls to

00:04:03,480 --> 00:04:09,200
engineering a inside the operator steel

00:04:06,450 --> 00:04:11,250
we need to troubleshoot something

00:04:09,200 --> 00:04:14,250
engineering and operations sit together

00:04:11,250 --> 00:04:17,010
understand what is the problem in delgo

00:04:14,250 --> 00:04:19,620
they're calling 1-800 vienna window and

00:04:17,010 --> 00:04:21,810
they say there's a problem

00:04:19,620 --> 00:04:24,210
let's sit with tech support and try to

00:04:21,810 --> 00:04:26,190
understand what happened take the point

00:04:24,210 --> 00:04:26,760
support starts to troubleshoot the

00:04:26,190 --> 00:04:29,190
problem

00:04:26,760 --> 00:04:30,720
and then they said well we need to talk

00:04:29,190 --> 00:04:31,260
to product manager because it's a real

00:04:30,720 --> 00:04:34,230
problem

00:04:31,260 --> 00:04:37,080
it requires some modification now the

00:04:34,230 --> 00:04:40,520
problem is usually are some of the toss

00:04:37,080 --> 00:04:43,350
cap code is not really ready some of the

00:04:40,520 --> 00:04:48,030
something is not working in in the way

00:04:43,350 --> 00:04:52,110
that the vnf is Oka streetable product

00:04:48,030 --> 00:04:52,770
management says wait maybe actually wait

00:04:52,110 --> 00:04:55,160
wait a second

00:04:52,770 --> 00:04:59,610
maybe the Tusker script that we

00:04:55,160 --> 00:05:02,430
delivered with without vnf good

00:04:59,610 --> 00:05:05,130
maybe it's the orchestrator that is not

00:05:02,430 --> 00:05:07,440
orchestrating the good task a script

00:05:05,130 --> 00:05:09,570
that we have provided so now you're

00:05:07,440 --> 00:05:12,720
adding the vnf they the orchestrator

00:05:09,570 --> 00:05:15,150
vendo the closed source orchestrated

00:05:12,720 --> 00:05:17,040
window to the loop now you really have

00:05:15,150 --> 00:05:19,740
to triangulate because what you're

00:05:17,040 --> 00:05:21,540
actually doing you're looking at several

00:05:19,740 --> 00:05:23,220
black boxes there's an Orchestrator

00:05:21,540 --> 00:05:25,560
which is a black dogs does the Vienna

00:05:23,220 --> 00:05:27,840
which is the black box and you have to

00:05:25,560 --> 00:05:30,690
look at the behavior of this in a

00:05:27,840 --> 00:05:33,410
several timezone in a huge team to

00:05:30,690 --> 00:05:36,390
understand what where the problem is and

00:05:33,410 --> 00:05:38,640
then it goes to R&D and it goes to

00:05:36,390 --> 00:05:40,500
testing and usually at this point you

00:05:38,640 --> 00:05:42,000
can't on you can no longer do it with

00:05:40,500 --> 00:05:44,610
phone calls you need to have

00:05:42,000 --> 00:05:47,910
face-to-face so in the cases that I was

00:05:44,610 --> 00:05:49,650
involved it it always end up with all

00:05:47,910 --> 00:05:52,890
the engineer going to a some exotic

00:05:49,650 --> 00:05:58,620
place to have some sort of a off-site

00:05:52,890 --> 00:06:00,900
and they resolved it now with the

00:05:58,620 --> 00:06:04,770
exception that you know people having

00:06:00,900 --> 00:06:10,380
fun what you see on this slide this

00:06:04,770 --> 00:06:12,210
spaghetti is the anti-material of optic

00:06:10,380 --> 00:06:14,550
scope its reduction couples in the

00:06:12,210 --> 00:06:17,340
direction and agility this is something

00:06:14,550 --> 00:06:20,310
that is impacting the value of nav and

00:06:17,340 --> 00:06:22,320
that's just one box out of the 15 boxes

00:06:20,310 --> 00:06:25,650
I show you okay this one one component

00:06:22,320 --> 00:06:31,170
let's look at the safe thing in an open

00:06:25,650 --> 00:06:33,210
source environment CSP CSP is operation

00:06:31,170 --> 00:06:37,220
and development finds that there is an

00:06:33,210 --> 00:06:40,620
arrow right okay it goes to engineering

00:06:37,220 --> 00:06:42,720
engineering says it's really an arrow we

00:06:40,620 --> 00:06:44,840
we are aligned let's go to the vnf

00:06:42,720 --> 00:06:47,430
window they go to the vienna Vento

00:06:44,840 --> 00:06:52,440
vienna vendor says Luke you know what

00:06:47,430 --> 00:06:54,120
there's an open source we are part of

00:06:52,440 --> 00:06:57,020
one up there's an open source

00:06:54,120 --> 00:06:59,669
Orchestrator the problem is there is the

00:06:57,020 --> 00:07:03,300
orchestrator it's not our artifact is

00:06:59,669 --> 00:07:06,389
the orchestrator the CSP answer is the

00:07:03,300 --> 00:07:09,510
following if there is a problem with the

00:07:06,389 --> 00:07:11,460
orchestrator fix it you have the

00:07:09,510 --> 00:07:14,160
capability to contribute to it

00:07:11,460 --> 00:07:14,910
in fact the vienna vendor has the entire

00:07:14,160 --> 00:07:17,460
Orchestrator

00:07:14,910 --> 00:07:19,260
in his lab with the code of the

00:07:17,460 --> 00:07:23,639
orchestrator in his lab can run

00:07:19,260 --> 00:07:25,800
everything in his lab right so and he is

00:07:23,639 --> 00:07:26,699
empowered to be a contributor or maybe

00:07:25,800 --> 00:07:29,880
even a committer

00:07:26,699 --> 00:07:32,010
to the open source this fall and so

00:07:29,880 --> 00:07:34,080
there's no you know there's no offside

00:07:32,010 --> 00:07:37,830
in exotic place but if you look at the

00:07:34,080 --> 00:07:40,919
amount of arrows in the two options you

00:07:37,830 --> 00:07:46,349
see that it's a substantial difference

00:07:40,919 --> 00:07:46,860
now I think the takeaway I have for you

00:07:46,349 --> 00:07:50,880
today

00:07:46,860 --> 00:07:53,039
and again just two things first thing if

00:07:50,880 --> 00:07:56,820
you don't know that the presentation for

00:07:53,039 --> 00:08:00,510
a forum today there's 15 boxes of steps

00:07:56,820 --> 00:08:02,700
in the operator like onboarding the

00:08:00,510 --> 00:08:08,849
Nubians vnf certifying it in in our

00:08:02,700 --> 00:08:12,180
environment each one of them has the

00:08:08,849 --> 00:08:15,180
same left and right picture each one of

00:08:12,180 --> 00:08:18,510
them has the ramification for the

00:08:15,180 --> 00:08:20,970
operator on a massively deployed open

00:08:18,510 --> 00:08:23,639
source and the ramification for the

00:08:20,970 --> 00:08:27,530
operator which is using closed a open

00:08:23,639 --> 00:08:29,580
source but for me I think when people

00:08:27,530 --> 00:08:31,889
it's like you know you ask the people in

00:08:29,580 --> 00:08:34,409
the street what is five dude for you

00:08:31,889 --> 00:08:36,089
it's like five grand when you ask people

00:08:34,409 --> 00:08:38,669
in the street what does open source

00:08:36,089 --> 00:08:39,839
Orchestrator for you means they would

00:08:38,669 --> 00:08:42,479
say it's free

00:08:39,839 --> 00:08:45,839
I guess the license is very cheap I can

00:08:42,479 --> 00:08:48,089
have a fast you know I can switch vendor

00:08:45,839 --> 00:08:50,700
very fast which which support very fast

00:08:48,089 --> 00:08:53,450
because I can have several flavor of the

00:08:50,700 --> 00:08:56,570
same thing and all of that is true

00:08:53,450 --> 00:08:59,149
but in my opinion the fact that you are

00:08:56,570 --> 00:09:01,339
no longer using black boxes and the fact

00:08:59,149 --> 00:09:03,700
that you have your on the left side of

00:09:01,339 --> 00:09:08,269
the slide where you can actually

00:09:03,700 --> 00:09:10,710
interact and and demand that each one of

00:09:08,269 --> 00:09:12,850
your supporter including the vnf vendor

00:09:10,710 --> 00:09:16,190
[Music]

00:09:12,850 --> 00:09:19,430
is in command and if there is an arrow

00:09:16,190 --> 00:09:22,490
there's no pointing fingers I think it's

00:09:19,430 --> 00:09:25,760
a huge it's a huge benefit and it shows

00:09:22,490 --> 00:09:27,649
you how agile this is so with this we

00:09:25,760 --> 00:09:37,670
still have a time for this very short

00:09:27,649 --> 00:09:40,550
question question okay thank you I had a

00:09:37,670 --> 00:09:42,850
question so after the vnf vendor fixes

00:09:40,550 --> 00:09:46,430
the problem in the open source

00:09:42,850 --> 00:09:48,490
Orchestrator what is the time that it

00:09:46,430 --> 00:09:51,500
takes to go through the open source

00:09:48,490 --> 00:09:53,600
acceptance process and make it back into

00:09:51,500 --> 00:09:56,570
the production version that the service

00:09:53,600 --> 00:09:58,459
worker actually uses in in their network

00:09:56,570 --> 00:10:01,300
great question first it depends it

00:09:58,459 --> 00:10:03,980
depends on what what organization it is

00:10:01,300 --> 00:10:06,440
there is a committee the committee the

00:10:03,980 --> 00:10:10,040
committee is faithful you can always do

00:10:06,440 --> 00:10:11,779
it with just to test it you can since

00:10:10,040 --> 00:10:14,120
you have access to the code you can

00:10:11,779 --> 00:10:16,310
always do the change incremental e

00:10:14,120 --> 00:10:20,660
without committing to the upstream so

00:10:16,310 --> 00:10:23,510
you can just fix it for now okay so the

00:10:20,660 --> 00:10:26,540
model so the short question answer is

00:10:23,510 --> 00:10:29,959
you can do it immediately if you want it

00:10:26,540 --> 00:10:32,209
to be part of the Big D store of the

00:10:29,959 --> 00:10:37,579
open source then it depends on the

00:10:32,209 --> 00:10:41,019
organization actually in on up

00:10:37,579 --> 00:10:44,209
there's the cadence of several every

00:10:41,019 --> 00:10:48,709
period there's going to be a new version

00:10:44,209 --> 00:10:54,610
I don't know what it is but as I said to

00:10:48,709 --> 00:10:57,459
solve the problem on a folk small folk

00:10:54,610 --> 00:10:59,899
until the new change is accepted

00:10:57,459 --> 00:11:03,330
immediate as long as the problem is

00:10:59,899 --> 00:11:05,770
discovered okay

00:11:03,330 --> 00:11:10,580
okay thank you very much

00:11:05,770 --> 00:11:10,580

YouTube URL: https://www.youtube.com/watch?v=-vzieCSmybw


