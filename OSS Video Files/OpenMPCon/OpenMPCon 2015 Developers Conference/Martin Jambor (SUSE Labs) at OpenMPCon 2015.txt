Title: Martin Jambor (SUSE Labs) at OpenMPCon 2015
Publication date: 2015-10-11
Playlist: OpenMPCon 2015 Developers Conference
Description: 
	Martin Jambor of SUSE Labs discusses GCC support for OpenMP 4 heterogeneous accelerator target constructs with Matthijs van Waveren at OpenMPCon 2015. Recorded September 29, 2015 at SuperC, RWTH Aachen University, Aachen Germany
Captions: 
	00:00:03,310 --> 00:00:10,969
so welcome Martin hello thank you for

00:00:07,339 --> 00:00:12,469
joining the open and be calm and Amir

00:00:10,969 --> 00:00:17,089
yeah well looking forward to your

00:00:12,469 --> 00:00:22,240
presentation Martin is a compiler

00:00:17,089 --> 00:00:25,960
engineer at Souza through the Linux and

00:00:22,240 --> 00:00:30,529
so Martin you've been a ball with GCC

00:00:25,960 --> 00:00:33,140
and heterogeneous systems so can you

00:00:30,529 --> 00:00:38,059
tell me us about more about the status

00:00:33,140 --> 00:00:41,960
of open and be in GCC currently the

00:00:38,059 --> 00:00:46,579
latest released version of GCC which is

00:00:41,960 --> 00:00:52,250
five dot two and then any version 5 GCC

00:00:46,579 --> 00:00:54,829
compiler supports open mp4 dot 0 as far

00:00:52,250 --> 00:01:01,809
as I know Yacoub your neck from red hat

00:00:54,829 --> 00:01:06,500
is almost ready to contribute the

00:01:01,809 --> 00:01:09,410
implementation of open mp4 one if it is

00:01:06,500 --> 00:01:12,020
agreed on if the art form or if it

00:01:09,410 --> 00:01:15,530
doesn't change very much in the next

00:01:12,020 --> 00:01:20,470
month with the next month mm-hmm I'm

00:01:15,530 --> 00:01:24,370
working on support for heterogeneous

00:01:20,470 --> 00:01:28,420
systems architecture which is

00:01:24,370 --> 00:01:31,400
architecture developed by HSA foundation

00:01:28,420 --> 00:01:33,920
which consists of companies such as AMD

00:01:31,400 --> 00:01:38,090
Texas Instruments arm and many others

00:01:33,920 --> 00:01:40,190
and it is an effort to be able to

00:01:38,090 --> 00:01:44,210
program at original systems architecture

00:01:40,190 --> 00:01:47,840
ap use which means CPUs and GPUs on one

00:01:44,210 --> 00:01:53,150
chip with open it be open em deconstruct

00:01:47,840 --> 00:01:56,870
mm-hmm so this means that using your age

00:01:53,150 --> 00:02:01,700
your layer interface to HSA it will be

00:01:56,870 --> 00:02:05,840
possible to program arm and similar

00:02:01,700 --> 00:02:09,560
hardware devices with OpenMP as far as I

00:02:05,840 --> 00:02:13,270
know the only existing devices are AMD

00:02:09,560 --> 00:02:15,650
APU which are based on x86 64

00:02:13,270 --> 00:02:18,560
nevertheless yes you should be able to

00:02:15,650 --> 00:02:21,530
use one source and the target pragmas to

00:02:18,560 --> 00:02:25,069
program the chatter chastity devices

00:02:21,530 --> 00:02:31,450
consisting of CPUs OMG

00:02:25,069 --> 00:02:35,780
okay so currently you target camv yes

00:02:31,450 --> 00:02:39,129
but in future versions we will you it

00:02:35,780 --> 00:02:44,900
will be able to target multiple devices

00:02:39,129 --> 00:02:47,750
well the HSA uses what its intermediate

00:02:44,900 --> 00:02:54,799
language so that means that what you now

00:02:47,750 --> 00:02:57,919
compile for a GPU and you produce hsl

00:02:54,799 --> 00:03:00,079
you then need a finalizer to finalize it

00:02:57,919 --> 00:03:01,760
for a given particular tip you but you

00:03:00,079 --> 00:03:05,049
will be able to finalize it even for

00:03:01,760 --> 00:03:10,189
future not just for parents GPUs okay

00:03:05,049 --> 00:03:15,409
and do you know it what kind of

00:03:10,189 --> 00:03:18,560
applications use your compiler and your

00:03:15,409 --> 00:03:24,650
interface you have any idea which type

00:03:18,560 --> 00:03:27,139
of applications fields are covered I we

00:03:24,650 --> 00:03:31,430
are working with our partners at amt and

00:03:27,139 --> 00:03:33,590
and they are I'm more interested in the

00:03:31,430 --> 00:03:37,609
implementation side they are testing on

00:03:33,590 --> 00:03:39,650
what wide variety of benchmarks and test

00:03:37,609 --> 00:03:44,180
cases I believe that currently they are

00:03:39,650 --> 00:03:45,699
mostly interested in using the systems

00:03:44,180 --> 00:03:49,340
architecture in high-performance

00:03:45,699 --> 00:03:53,259
computing because in the future they do

00:03:49,340 --> 00:03:57,079
want to include HSA in their big server

00:03:53,259 --> 00:03:59,390
processors but of course the idea is

00:03:57,079 --> 00:04:02,360
that even on

00:03:59,390 --> 00:04:04,760
no the processors you should be able to

00:04:02,360 --> 00:04:09,380
use the GPU to consume less power and

00:04:04,760 --> 00:04:13,760
therefore basically anybody that wants

00:04:09,380 --> 00:04:15,830
to implement a parallel algorithm power

00:04:13,760 --> 00:04:19,190
efficiently could use it as long as I

00:04:15,830 --> 00:04:21,850
open MP allows it easily okay great well

00:04:19,190 --> 00:04:21,850

YouTube URL: https://www.youtube.com/watch?v=ShQqys9Vk14


