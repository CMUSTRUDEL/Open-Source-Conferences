Title: Ruud van der Pas (Oracle Corp) at OpenMPCon 2015
Publication date: 2015-10-11
Playlist: OpenMPCon 2015 Developers Conference
Description: 
	Ruud van der Pas (Oracle Corp) talks to Matthijs van Waveren about basic best practices with OpenMP. Recorded at OpenMPCon 2015, RWTH Aachen University, Aachen, Germany, September 30, 2015.
Captions: 
	00:00:03,470 --> 00:00:09,420
so L over it thanks for joining us and

00:00:07,410 --> 00:00:14,010
giving us such a very interesting talk

00:00:09,420 --> 00:00:16,710
at OpenMP calm give so you're with

00:00:14,010 --> 00:00:20,340
Oracle I used to be with son and just

00:00:16,710 --> 00:00:22,980
automatically went to Oracle and you've

00:00:20,340 --> 00:00:27,060
been traveling around the world speaking

00:00:22,980 --> 00:00:29,760
of users so your talk was on whether

00:00:27,060 --> 00:00:32,279
open AP scales or not and what can you

00:00:29,760 --> 00:00:36,720
give us some advice to the users who

00:00:32,279 --> 00:00:40,980
would be viewing this video how to use

00:00:36,720 --> 00:00:43,020
openmp sure as I explained in my talk

00:00:40,980 --> 00:00:46,200
there's a couple of basic rules to

00:00:43,020 --> 00:00:49,739
follow and the biggest one is probably

00:00:46,200 --> 00:00:52,350
to not use share data unless you really

00:00:49,739 --> 00:00:54,960
have to to avoid chatter as much as you

00:00:52,350 --> 00:00:58,020
can only share when you have to because

00:00:54,960 --> 00:00:59,460
there's also the performance risks that

00:00:58,020 --> 00:01:02,699
you have when you wanna start using

00:00:59,460 --> 00:01:04,619
share data the other big one is try to

00:01:02,699 --> 00:01:09,149
minimize the number of Allah regions

00:01:04,619 --> 00:01:11,429
when you have multiple parallel regions

00:01:09,149 --> 00:01:13,319
each time you go through those you will

00:01:11,429 --> 00:01:16,109
get some overhead and that accumulates

00:01:13,319 --> 00:01:17,880
that starts to be noticeable especially

00:01:16,109 --> 00:01:21,389
as you add threats the cost of that will

00:01:17,880 --> 00:01:23,310
increase as you add threads so try to

00:01:21,389 --> 00:01:25,740
put all the work or as much work as you

00:01:23,310 --> 00:01:29,999
can into one parallel I think this these

00:01:25,740 --> 00:01:35,729
are the two big things we see as a first

00:01:29,999 --> 00:01:37,900
level of optimization okay so then you

00:01:35,729 --> 00:01:41,320
talked about scalability and

00:01:37,900 --> 00:01:48,040
mentioned how can you gave some examples

00:01:41,320 --> 00:01:50,470
right how to avoid false sharing so what

00:01:48,040 --> 00:01:51,910
happens yeah okay well that's that's a

00:01:50,470 --> 00:01:54,310
that's a very technical thing for

00:01:51,910 --> 00:01:56,290
sharing a very technical essentially

00:01:54,310 --> 00:01:58,180
what it means is multiple threads try to

00:01:56,290 --> 00:02:00,790
update the same cache line at the same

00:01:58,180 --> 00:02:03,730
time that's the situation you want to

00:02:00,790 --> 00:02:05,890
avoid and again if you if you think

00:02:03,730 --> 00:02:07,540
about using private data versus share

00:02:05,890 --> 00:02:09,520
data with private data you don't have

00:02:07,540 --> 00:02:12,820
that risk because each led on its own

00:02:09,520 --> 00:02:14,680
memory block so that goes kind of hand

00:02:12,820 --> 00:02:18,400
in hand with the first advice that I

00:02:14,680 --> 00:02:21,400
gave and then you immediately eliminate

00:02:18,400 --> 00:02:22,870
many for sharing cases the other thing

00:02:21,400 --> 00:02:26,320
that I talked about which is very common

00:02:22,870 --> 00:02:28,000
is CC Numa every multi socket system

00:02:26,320 --> 00:02:29,920
these days is as a CC Neumann

00:02:28,000 --> 00:02:31,870
architecture and you need to make sure

00:02:29,920 --> 00:02:35,380
that your data is close to the threat

00:02:31,870 --> 00:02:38,530
that needs it most which can be easier

00:02:35,380 --> 00:02:41,230
said than done luckily OpenAPI photo has

00:02:38,530 --> 00:02:44,290
support for that so you do have ways of

00:02:41,230 --> 00:02:46,450
controlling where things run you still

00:02:44,290 --> 00:02:50,290
have to pay attention on where where

00:02:46,450 --> 00:02:53,080
will my data go in the memories of these

00:02:50,290 --> 00:02:55,450
various sockets in my system so that was

00:02:53,080 --> 00:02:58,959
the second part of the talk was about

00:02:55,450 --> 00:03:00,900
that data locality and without that

00:02:58,959 --> 00:03:03,310
scalability is not going to be very good

00:03:00,900 --> 00:03:06,670
another advice you mentioned was to use

00:03:03,310 --> 00:03:10,720
profiling tools right right yes always

00:03:06,670 --> 00:03:12,760
use a profiling to never assume that you

00:03:10,720 --> 00:03:14,890
know where the time is spent because it

00:03:12,760 --> 00:03:17,260
could be in a very insignificant part of

00:03:14,890 --> 00:03:18,850
your application that may not be

00:03:17,260 --> 00:03:21,100
important for your physics or your

00:03:18,850 --> 00:03:22,900
chemistry problem but from a

00:03:21,100 --> 00:03:25,989
computational point of view it could be

00:03:22,900 --> 00:03:27,820
very dominant and you want to make sure

00:03:25,989 --> 00:03:29,799
that you're optimizing the right part of

00:03:27,820 --> 00:03:32,590
your application so always use some some

00:03:29,799 --> 00:03:35,110
sort of profiling tool and also you

00:03:32,590 --> 00:03:38,530
mentioned that often it was a little

00:03:35,110 --> 00:03:40,450
change you can get a big was it often

00:03:38,530 --> 00:03:43,360
when you when you know what the problem

00:03:40,450 --> 00:03:45,850
is that the fix isn't it's often not

00:03:43,360 --> 00:03:47,019
that hard but of course you need to know

00:03:45,850 --> 00:03:48,579
what to probably miss that's why the

00:03:47,019 --> 00:03:49,590
time goes into so whenever people

00:03:48,579 --> 00:03:52,110
mention like

00:03:49,590 --> 00:03:54,180
number of lines of codes and have been

00:03:52,110 --> 00:03:56,910
changed as one of the speakers did today

00:03:54,180 --> 00:03:59,099
it's not really a meaningful metric it's

00:03:56,910 --> 00:04:00,739
about finding the place where things go

00:03:59,099 --> 00:04:03,569
bad and that's why you spend the time

00:04:00,739 --> 00:04:06,209
that's that's your time F and making the

00:04:03,569 --> 00:04:08,099
change don't take much time to write a

00:04:06,209 --> 00:04:11,010
couple of lines of code or remove them

00:04:08,099 --> 00:04:14,010
zone that's that's the part you need to

00:04:11,010 --> 00:04:16,139
do you need to do the homework yeah okay

00:04:14,010 --> 00:04:20,190
well that's nice point to end all right

00:04:16,139 --> 00:04:22,340
okay do the homework oh hey okay thanks

00:04:20,190 --> 00:04:22,340

YouTube URL: https://www.youtube.com/watch?v=Qppuoar1_CY


