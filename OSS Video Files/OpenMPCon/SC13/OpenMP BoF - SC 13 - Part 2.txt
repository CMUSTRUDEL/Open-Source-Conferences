Title: OpenMP BoF - SC 13 - Part 2
Publication date: 2014-12-13
Playlist: SC13
Description: 
	Ruud van der Pas proposes a new programming model.
Captions: 
	00:00:00,000 --> 00:00:03,870
starting to call tea without an

00:00:01,979 --> 00:00:06,710
exhibition which motion of OpenMP are

00:00:03,870 --> 00:00:20,789
you asking this more institute well

00:00:06,710 --> 00:00:23,990
you'll find out so I mean magic okay so

00:00:20,789 --> 00:00:27,210
first of all as you can see there's no

00:00:23,990 --> 00:00:29,820
affiliation on them on this slide I am

00:00:27,210 --> 00:00:31,859
at Oracle but this is purely on personal

00:00:29,820 --> 00:00:34,230
basis and since I don't want to be

00:00:31,859 --> 00:00:38,309
recognized after this talk out i'll put

00:00:34,230 --> 00:00:40,649
up my special glasses so on that so i

00:00:38,309 --> 00:00:42,930
can get out of this room alive who are

00:00:40,649 --> 00:00:45,510
you I don't know you I know I'm in an

00:00:42,930 --> 00:00:48,840
identity crisis as you'll find out very

00:00:45,510 --> 00:00:54,570
soon so but actually this this is not

00:00:48,840 --> 00:00:57,030
for you compare the yeah i'm going to

00:00:54,570 --> 00:00:59,340
talk about a a new programming model of

00:00:57,030 --> 00:01:04,920
people a proposal for a new programming

00:00:59,340 --> 00:01:08,280
model so a very very valid question is

00:01:04,920 --> 00:01:12,270
why do we need something new well i

00:01:08,280 --> 00:01:15,180
think they all fail so modest as i am

00:01:12,270 --> 00:01:17,820
and that's my my claim so why why do I

00:01:15,180 --> 00:01:19,680
think they all fail well first of all we

00:01:17,820 --> 00:01:22,350
can never get that ultimate performance

00:01:19,680 --> 00:01:26,009
today there's always something missing

00:01:22,350 --> 00:01:28,799
and we have to be prepared for the worst

00:01:26,009 --> 00:01:31,049
case so i would like to count on having

00:01:28,799 --> 00:01:33,180
1 billion threads and still be able to

00:01:31,049 --> 00:01:36,479
deal with that because yeah you better

00:01:33,180 --> 00:01:38,880
be prepared for the future and everybody

00:01:36,479 --> 00:01:40,890
and everything is unique they're all

00:01:38,880 --> 00:01:43,320
different every application is different

00:01:40,890 --> 00:01:45,329
every developer is different and and

00:01:43,320 --> 00:01:48,750
none of these models they deal with that

00:01:45,329 --> 00:01:50,220
so we need to support that we need

00:01:48,750 --> 00:01:54,060
something different and obviously

00:01:50,220 --> 00:01:57,600
something better for them so yeah why

00:01:54,060 --> 00:02:00,680
why be modest so I I come up with the

00:01:57,600 --> 00:02:07,790
world's only unified no development

00:02:00,680 --> 00:02:07,790
that's the long version of wound and

00:02:07,940 --> 00:02:14,370
obviously that open source

00:02:10,929 --> 00:02:18,730
so what I'm going to announce today is

00:02:14,370 --> 00:02:21,280
open wound that is my new programming

00:02:18,730 --> 00:02:23,049
model and i'll just give you a quick

00:02:21,280 --> 00:02:25,150
rundown and i don't want to go into

00:02:23,049 --> 00:02:26,890
details partially because i don't know

00:02:25,150 --> 00:02:30,670
them yet and partially because we don't

00:02:26,890 --> 00:02:33,670
have time so first of all open wound has

00:02:30,670 --> 00:02:37,209
four components there's obviously a

00:02:33,670 --> 00:02:39,400
language definition there's obviously a

00:02:37,209 --> 00:02:41,620
runtime system so you can run things and

00:02:39,400 --> 00:02:43,480
do all the things you like to do you

00:02:41,620 --> 00:02:48,310
need to have some sort of a development

00:02:43,480 --> 00:02:49,959
environment and n tools so i'll talk

00:02:48,310 --> 00:02:52,689
about all of these up again i'll just

00:02:49,959 --> 00:02:55,329
briefly touch upon them so what are the

00:02:52,689 --> 00:02:57,459
goals again why be modest as you'll see

00:02:55,329 --> 00:02:59,379
in this list first of all we want to go

00:02:57,459 --> 00:03:01,299
for extreme scalability i just gave you

00:02:59,379 --> 00:03:04,000
a target number 1 billion threats that

00:03:01,299 --> 00:03:07,989
should do for a while the model has to

00:03:04,000 --> 00:03:10,060
be extremely powerful will always get

00:03:07,989 --> 00:03:11,889
the optimal performance my goal is to

00:03:10,060 --> 00:03:13,540
put Marty itzkowitz in the room you're

00:03:11,889 --> 00:03:15,909
out of business so we don't need this

00:03:13,540 --> 00:03:18,010
profiler anymore you just always get the

00:03:15,909 --> 00:03:20,470
right performance or you're done so we

00:03:18,010 --> 00:03:24,010
know need tools any more obvious that

00:03:20,470 --> 00:03:28,780
has to be high level as well the

00:03:24,010 --> 00:03:31,780
language has to be explicit and we want

00:03:28,780 --> 00:03:36,810
to have total control over everything we

00:03:31,780 --> 00:03:45,849
really want to go as far as we can go so

00:03:36,810 --> 00:03:47,470
well so no no I mean geographically and

00:03:45,849 --> 00:03:50,410
I was just thinking about how

00:03:47,470 --> 00:03:53,260
Denver Colorado recently had an

00:03:50,410 --> 00:03:55,140
initiative last November the past that

00:03:53,260 --> 00:03:58,540
have you been availing yourself of this

00:03:55,140 --> 00:04:00,610
no no no I can although I'm not

00:03:58,540 --> 00:04:02,890
originally from the US i can say a lot

00:04:00,610 --> 00:04:05,140
about politics in general but that's a

00:04:02,890 --> 00:04:06,460
different ball fight thing so i'll think

00:04:05,140 --> 00:04:09,340
of my glasses because i'm not

00:04:06,460 --> 00:04:11,170
representing the company all right one

00:04:09,340 --> 00:04:12,940
of the things is i want to be able to

00:04:11,170 --> 00:04:14,260
deal with uncertainty because often when

00:04:12,940 --> 00:04:16,030
you develop a code you don't know

00:04:14,260 --> 00:04:17,950
everything for sure so i want to be able

00:04:16,030 --> 00:04:20,109
to deal with that and of course whatever

00:04:17,950 --> 00:04:22,780
the programming model provides you'll be

00:04:20,109 --> 00:04:27,850
trivial to understand so there we go

00:04:22,780 --> 00:04:30,210
these articles again why be modest so

00:04:27,850 --> 00:04:32,860
what's wrong with this kind of syntax

00:04:30,210 --> 00:04:36,100
and that's the traditional pragma based

00:04:32,860 --> 00:04:39,850
a model for example pragma OMP and you

00:04:36,100 --> 00:04:43,870
have some action parallel barrier

00:04:39,850 --> 00:04:46,060
whatever and that's very binary when you

00:04:43,870 --> 00:04:48,640
think about it that's parallel or not

00:04:46,060 --> 00:04:50,440
parallel in real life things are

00:04:48,640 --> 00:04:53,110
different as we all we all struggle

00:04:50,440 --> 00:04:56,470
always struggle with uncertainty so what

00:04:53,110 --> 00:05:00,490
I came up with is in my model I want to

00:04:56,470 --> 00:05:02,169
support confidence levels so that will

00:05:00,490 --> 00:05:04,990
give you the freedom to ask for help

00:05:02,169 --> 00:05:08,320
from the system while you maintain full

00:05:04,990 --> 00:05:10,900
control and that's one of the things

00:05:08,320 --> 00:05:14,620
that this makes this programming world

00:05:10,900 --> 00:05:16,840
fairly unique we add a second dimension

00:05:14,620 --> 00:05:20,350
that's the confidence level in addition

00:05:16,840 --> 00:05:24,160
to the action so what do I mean with

00:05:20,350 --> 00:05:26,200
that well first of all before I go into

00:05:24,160 --> 00:05:29,080
that I should explain how you define the

00:05:26,200 --> 00:05:32,979
parallelism it's very easy easy you open

00:05:29,080 --> 00:05:35,979
the wound why pragma won't open and then

00:05:32,979 --> 00:05:38,320
you close the wound and you're done all

00:05:35,979 --> 00:05:41,080
right and the confidence levels

00:05:38,320 --> 00:05:44,410
currently supported are always maybe

00:05:41,080 --> 00:05:45,970
sometimes depends and not to preserve

00:05:44,410 --> 00:05:48,700
sequential semantics because that's

00:05:45,970 --> 00:05:50,169
really very important now one of the key

00:05:48,700 --> 00:05:52,450
features and you'll see that kind of

00:05:50,169 --> 00:05:54,940
highlighted on my slides is the

00:05:52,450 --> 00:05:55,280
differentiator here obviously you can

00:05:54,940 --> 00:05:57,740
come

00:05:55,280 --> 00:05:59,540
find the confidence levels and that's

00:05:57,740 --> 00:06:02,590
where the power of this language comes

00:05:59,540 --> 00:06:07,370
into really really shine so I can say

00:06:02,590 --> 00:06:11,330
pragma won't maybe maybe sometimes maybe

00:06:07,370 --> 00:06:14,600
sometimes not depends sometimes all

00:06:11,330 --> 00:06:16,370
depends not not always depends so in

00:06:14,600 --> 00:06:18,260
that way I can really tell the system

00:06:16,370 --> 00:06:21,320
like I'm not so sure you figure it out

00:06:18,260 --> 00:06:24,770
all right unfortunately we only limit

00:06:21,320 --> 00:06:26,510
this to five levels mixing but we come

00:06:24,770 --> 00:06:30,169
to address that because five is actually

00:06:26,510 --> 00:06:32,210
very low for this so actually what

00:06:30,169 --> 00:06:34,880
follows next I must give credit to those

00:06:32,210 --> 00:06:36,620
that deserve it what follows next on the

00:06:34,880 --> 00:06:40,090
next few slides is driven by some

00:06:36,620 --> 00:06:44,680
beautiful constructs from open mp4 don't

00:06:40,090 --> 00:06:48,800
like this one align linear Cindy learn

00:06:44,680 --> 00:06:50,720
in branch I love it so I like it so much

00:06:48,800 --> 00:06:53,440
that I wanted to kind of steal that idea

00:06:50,720 --> 00:06:55,850
and put it into my programming model

00:06:53,440 --> 00:06:58,190
that's part of a different thing that's

00:06:55,850 --> 00:07:01,160
the nerd control nerd stands for

00:06:58,190 --> 00:07:02,990
non-experts rapid decision and it really

00:07:01,160 --> 00:07:06,200
marries full control with ease of

00:07:02,990 --> 00:07:08,270
co-development so initially I'll give

00:07:06,200 --> 00:07:10,580
you support for the superscalar level

00:07:08,270 --> 00:07:13,220
you want to have the pipeline in

00:07:10,580 --> 00:07:15,680
scheduling order the preferred number of

00:07:13,220 --> 00:07:17,990
instructions the number of cache misses

00:07:15,680 --> 00:07:20,360
allowed either depend the target and the

00:07:17,990 --> 00:07:24,650
maximum so here's a simple example I

00:07:20,360 --> 00:07:28,370
want to have 3y a superscalar I want to

00:07:24,650 --> 00:07:31,789
use three pipeline units exz row FP u 1

00:07:28,370 --> 00:07:34,729
and E x1 those are the XOR integer units

00:07:31,789 --> 00:07:36,460
I want you to generate 12 instructions

00:07:34,729 --> 00:07:39,380
because I know that's the best number

00:07:36,460 --> 00:07:41,330
cache misses my target is 0 cache misses

00:07:39,380 --> 00:07:43,070
but I'm willing to put up with a fairly

00:07:41,330 --> 00:07:47,630
high number of misses and I'm still set

00:07:43,070 --> 00:07:49,850
it so but again the power is in the

00:07:47,630 --> 00:07:52,520
confidence levels so those are fully

00:07:49,850 --> 00:07:56,180
supported so on the same thing i can say

00:07:52,520 --> 00:07:58,490
i don't want you to use e x 0 sometimes

00:07:56,180 --> 00:08:00,890
I want to have 12 instructions and I

00:07:58,490 --> 00:08:03,200
don't want to have 0 cash misses so I

00:08:00,890 --> 00:08:04,760
can exactly express what I want and

00:08:03,200 --> 00:08:07,970
again that's part of the nerd

00:08:04,760 --> 00:08:09,830
out of the pragma system of course

00:08:07,970 --> 00:08:12,410
there's a runtime system that's called

00:08:09,830 --> 00:08:14,810
hurt hurt stands for hybrid unified

00:08:12,410 --> 00:08:16,700
runtime and that's the runtime system

00:08:14,810 --> 00:08:18,650
it's extremely powerful and easy-to-use

00:08:16,700 --> 00:08:22,250
but of course you're on your own when

00:08:18,650 --> 00:08:24,830
you make a mistake you do know and and

00:08:22,250 --> 00:08:26,720
obviously we have environment variables

00:08:24,830 --> 00:08:30,320
for example these are just some examples

00:08:26,720 --> 00:08:33,410
just to say it's fine we say go ahead

00:08:30,320 --> 00:08:35,210
yes or no you can have the hood wound

00:08:33,410 --> 00:08:37,340
that's that's an indication to the

00:08:35,210 --> 00:08:40,370
runtime system that you want to run it

00:08:37,340 --> 00:08:42,590
always or sometimes you're never and the

00:08:40,370 --> 00:08:44,780
same is true for nerd where you give a

00:08:42,590 --> 00:08:46,730
confidence level in a target so in this

00:08:44,780 --> 00:08:48,680
example I want to activate the

00:08:46,730 --> 00:08:53,810
instruction and but not the pipeline

00:08:48,680 --> 00:08:57,200
part of the of the optimization finally

00:08:53,810 --> 00:08:59,170
of course I I need to have a development

00:08:57,200 --> 00:09:01,820
system so my debugger is called tears

00:08:59,170 --> 00:09:04,190
tears stands for totally expressive

00:09:01,820 --> 00:09:06,800
advanced relational system and that's my

00:09:04,190 --> 00:09:09,650
symbolic debugger and I have a little

00:09:06,800 --> 00:09:13,330
example to make it more specific so I

00:09:09,650 --> 00:09:15,980
I'll say stop if perhaps not always and

00:09:13,330 --> 00:09:17,960
it will tell me it stopped okay I said

00:09:15,980 --> 00:09:20,690
that bad news the debugger found that

00:09:17,960 --> 00:09:22,570
fatal error condition the tears are

00:09:20,690 --> 00:09:26,360
stored in a part called handkerchief and

00:09:22,570 --> 00:09:29,900
I can print it and it tells me it found

00:09:26,360 --> 00:09:31,760
an inconsistency and it tells me then

00:09:29,900 --> 00:09:34,100
there was a conflict with maybe depends

00:09:31,760 --> 00:09:38,240
so that clearly explains it all to me

00:09:34,100 --> 00:09:41,300
and I can debug my code finally there's

00:09:38,240 --> 00:09:43,610
a there's a SDK a software development

00:09:41,300 --> 00:09:45,920
kit that's called band-aid it consists

00:09:43,610 --> 00:09:48,050
of two components there's the band which

00:09:45,920 --> 00:09:50,390
stands for brave and a developer and

00:09:48,050 --> 00:09:53,570
there's the age which is architectural

00:09:50,390 --> 00:09:57,140
II independent the dependencies and

00:09:53,570 --> 00:09:58,910
again that my runtime system finally

00:09:57,140 --> 00:10:00,680
although I I don't believe that's

00:09:58,910 --> 00:10:02,210
necessary i think this system is going

00:10:00,680 --> 00:10:04,250
to be so good that we don't need any

00:10:02,210 --> 00:10:06,170
documentation that some other people

00:10:04,250 --> 00:10:07,850
suggested that we should have that so

00:10:06,170 --> 00:10:10,670
we're going to start a community

00:10:07,850 --> 00:10:13,190
documentation product or project that

00:10:10,670 --> 00:10:14,990
connects it all together we don't like

00:10:13,190 --> 00:10:15,860
the concept of page count that's so

00:10:14,990 --> 00:10:19,850
obsolete

00:10:15,860 --> 00:10:21,200
so we're going to use staples and that's

00:10:19,850 --> 00:10:23,950
that's going to connect everything

00:10:21,200 --> 00:10:26,480
together in our documentation system

00:10:23,950 --> 00:10:28,160
I've been talking a lot about concepts

00:10:26,480 --> 00:10:30,079
and ideas so I thought I'll give you a

00:10:28,160 --> 00:10:32,240
simple example but in interest of time I

00:10:30,079 --> 00:10:35,329
won't be able to go through all the gory

00:10:32,240 --> 00:10:38,720
details here's my my sequential code or

00:10:35,329 --> 00:10:41,089
loop and to function calls in it so how

00:10:38,720 --> 00:10:42,769
would I tackle that we have nerd and I

00:10:41,089 --> 00:10:46,430
hope you'll agree that this is really

00:10:42,769 --> 00:10:49,640
easy done so that's what my coat looks

00:10:46,430 --> 00:10:51,620
like again I I don't go into all the

00:10:49,640 --> 00:10:53,390
details I opened the wound in the end I

00:10:51,620 --> 00:10:55,040
sometimes close it because i'm not sure

00:10:53,390 --> 00:10:57,410
what I want to end the parallelism there

00:10:55,040 --> 00:10:59,420
remember the confidence levels here you

00:10:57,410 --> 00:11:02,060
see the power at the last line wound

00:10:59,420 --> 00:11:04,010
sometimes closed I have some function

00:11:02,060 --> 00:11:06,950
call to the hurt runtime system and my

00:11:04,010 --> 00:11:08,709
progress alright again in interest of

00:11:06,950 --> 00:11:11,209
time I don't want to be running too late

00:11:08,709 --> 00:11:13,990
how about the status where are we with

00:11:11,209 --> 00:11:17,180
this initiative well wound is a nice

00:11:13,990 --> 00:11:20,390
Hirt is still being fleshed out the

00:11:17,180 --> 00:11:23,209
tears code is is trickling in ben de it

00:11:20,390 --> 00:11:26,290
has been patched and stitches are

00:11:23,209 --> 00:11:29,480
actually at 666 staples and it's growing

00:11:26,290 --> 00:11:33,230
we expect to have the public comment

00:11:29,480 --> 00:11:37,310
phase for april first next year and how

00:11:33,230 --> 00:11:39,050
about the road map so we planning to

00:11:37,310 --> 00:11:42,050
more actions for the one that one

00:11:39,050 --> 00:11:43,550
release and we want to support 200

00:11:42,050 --> 00:11:45,649
confidence levels we think that's

00:11:43,550 --> 00:11:47,899
probably about right for a while and

00:11:45,649 --> 00:11:52,490
we're going to increase hurt at all

00:11:47,899 --> 00:11:55,510
levels where we can then the band has

00:11:52,490 --> 00:11:58,459
been frozen it is on the cutting table

00:11:55,510 --> 00:12:00,230
tears has to support those tuna

00:11:58,459 --> 00:12:02,329
confidence levels because that's that's

00:12:00,230 --> 00:12:03,980
our target for the one that one and we

00:12:02,329 --> 00:12:06,019
want to insert automatically insert

00:12:03,980 --> 00:12:10,820
staples as part of the stitches project

00:12:06,019 --> 00:12:12,920
so that's the open wound environment and

00:12:10,820 --> 00:12:17,690
so I talked a little bit about wound

00:12:12,920 --> 00:12:19,850
hurt nerd and tears please come and see

00:12:17,690 --> 00:12:23,149
us in the booth next year in the

00:12:19,850 --> 00:12:25,760
mornings we hope to launch one dot

00:12:23,149 --> 00:12:28,400
earlier we have a both plan

00:12:25,760 --> 00:12:31,190
and stop by our booth for your copy of

00:12:28,400 --> 00:12:33,650
the wounded or band aid kit thank you

00:12:31,190 --> 00:12:41,780
very much any questions about that model

00:12:33,650 --> 00:12:43,820
thank you no punishment what this is

00:12:41,780 --> 00:12:46,610
such amazing stuff when can I get this

00:12:43,820 --> 00:12:49,720
in OpenMP but next year next year no no

00:12:46,610 --> 00:12:49,720

YouTube URL: https://www.youtube.com/watch?v=TFw4Watf_qs


