Title: Visualizing OpenMP Program Execution Using OMPT - Yonghong Yan (USC)
Publication date: 2018-11-17
Playlist: SC18 OpenMP Booth Talks
Description: 
	SC18 OpenMP Booth Talk - November 13, 2018, Dallas TX
Slides at https://www.openmp.org/wp-content/uploads/SC18_OpenMPBoothTalk_YonghongYan.pdf
Captions: 
	00:00:01,399 --> 00:00:07,350
okay my name is Dion Han yang I'm from

00:00:04,890 --> 00:00:09,269
the University of South Carolina so this

00:00:07,350 --> 00:00:11,910
is working down by about two of my

00:00:09,269 --> 00:00:14,630
students Phillip and you don't they

00:00:11,910 --> 00:00:16,980
haven't been playing with open P and

00:00:14,630 --> 00:00:19,109
when we starting taking the course

00:00:16,980 --> 00:00:20,880
learning P and they are thinking maybe

00:00:19,109 --> 00:00:25,820
somewhere like this you know how

00:00:20,880 --> 00:00:25,820
parallel institution how focusing is

00:00:26,060 --> 00:00:33,870
realized and so it helped me to

00:00:30,150 --> 00:00:39,600
understand how the you know parallel

00:00:33,870 --> 00:00:42,989
execution isn't happening so so we using

00:00:39,600 --> 00:00:45,930
the OEM PT 2 interface is for building

00:00:42,989 --> 00:00:48,090
first-party tool what they do is you

00:00:45,930 --> 00:00:49,980
know you put a callback and so you don't

00:00:48,090 --> 00:00:52,920
need an instrument in your code so that

00:00:49,980 --> 00:00:54,510
the whole interface is the providing to

00:00:52,920 --> 00:00:55,980
developer so they don't need to

00:00:54,510 --> 00:00:58,350
instrument a code they don't you change

00:00:55,980 --> 00:01:02,780
the right hand at the rather you have

00:00:58,350 --> 00:01:05,400
the implement function of tracing or

00:01:02,780 --> 00:01:06,450
analysis then you don't need to change

00:01:05,400 --> 00:01:09,450
the code you don't need to change the

00:01:06,450 --> 00:01:16,590
right hand I just write your code first

00:01:09,450 --> 00:01:18,780
a party code and and the details of the

00:01:16,590 --> 00:01:22,110
OM PT interface can be found from the

00:01:18,780 --> 00:01:25,799
spec and there you know I think close to

00:01:22,110 --> 00:01:27,450
100 or even more pages document specify

00:01:25,799 --> 00:01:32,640
different kinda you wind and a different

00:01:27,450 --> 00:01:35,880
interface it when I show some of them

00:01:32,640 --> 00:01:37,439
parallel became parallel and thread

00:01:35,880 --> 00:01:40,820
begins thread in the task read

00:01:37,439 --> 00:01:43,380
implicitly task and or target you ain't

00:01:40,820 --> 00:01:47,610
toxic dependency and the synchronization

00:01:43,380 --> 00:01:49,920
when those other you winds that we need

00:01:47,610 --> 00:01:52,619
happening it will cause certain Kobach

00:01:49,920 --> 00:01:54,960
so basically from the tour developer as

00:01:52,619 --> 00:01:58,320
an ally you specify the information what

00:01:54,960 --> 00:02:01,680
you want your to do when the you Queen

00:01:58,320 --> 00:02:03,540
achiever okay so so what we have been

00:02:01,680 --> 00:02:06,960
doing is are using this example very

00:02:03,540 --> 00:02:10,920
simple example so this example the a xpy

00:02:06,960 --> 00:02:14,040
we lick make little change your xpy just

00:02:10,920 --> 00:02:17,850
to make it a phone to see how the

00:02:14,040 --> 00:02:20,700
I'd be in January so so in that cold it

00:02:17,850 --> 00:02:24,630
has a - parallel to function that

00:02:20,700 --> 00:02:26,100
contains OPP directive so why in the

00:02:24,630 --> 00:02:29,970
parallel flow basically initialize a

00:02:26,100 --> 00:02:31,950
simple array another one a the parallel

00:02:29,970 --> 00:02:33,780
fall in a parallel regime in apparel

00:02:31,950 --> 00:02:39,120
folding after that we have barrier than

00:02:33,780 --> 00:02:40,830
the master and that's the two function

00:02:39,120 --> 00:02:43,140
and we call the first dance focusing

00:02:40,830 --> 00:02:44,790
twice and we call this function wine so

00:02:43,140 --> 00:02:47,100
that's how the code will be actually

00:02:44,790 --> 00:02:49,170
pretty simple right but it's not just a

00:02:47,100 --> 00:02:52,020
xpy we add these two things just to make

00:02:49,170 --> 00:02:53,550
it fun okay now after we ran the code we

00:02:52,020 --> 00:02:55,680
use our NPT so we don't need to change

00:02:53,550 --> 00:02:58,760
though this code at all we don't need to

00:02:55,680 --> 00:03:02,220
do instrumentation or recompilation and

00:02:58,760 --> 00:03:05,670
we are able to generate a graph this is

00:03:02,220 --> 00:03:06,900
pretty readable graph of a different

00:03:05,670 --> 00:03:09,840
color we're trying to make it as

00:03:06,900 --> 00:03:13,080
beautiful as possible but it's not

00:03:09,840 --> 00:03:14,400
showing the whole detail but it's

00:03:13,080 --> 00:03:18,330
showing the most important information

00:03:14,400 --> 00:03:21,420
so I'm going to go through each part of

00:03:18,330 --> 00:03:24,270
that for example we call the first

00:03:21,420 --> 00:03:28,200
inning the twice of these two init

00:03:24,270 --> 00:03:31,320
function and because it had a parallel

00:03:28,200 --> 00:03:33,090
region and the parallel region will

00:03:31,320 --> 00:03:36,570
basically include a parallel beginning

00:03:33,090 --> 00:03:40,530
you went which will be triggered up by

00:03:36,570 --> 00:03:42,540
the master thread am i entering this

00:03:40,530 --> 00:03:43,710
yeah of course so we'll check out my

00:03:42,540 --> 00:03:45,180
monsters strength this is a monster

00:03:43,710 --> 00:03:47,970
straight the parallel began and the

00:03:45,180 --> 00:03:49,620
after that and other or the workers

00:03:47,970 --> 00:03:54,030
thread including the master thread or

00:03:49,620 --> 00:03:56,250
have implicit tasks begin so that imply

00:03:54,030 --> 00:03:59,130
task we make will be indicated that each

00:03:56,250 --> 00:04:02,810
swear was starting at shooting their own

00:03:59,130 --> 00:04:05,610
portion of that parallel region okay and

00:04:02,810 --> 00:04:07,470
then they were entering into callback

00:04:05,610 --> 00:04:10,140
work which mean that they are starting

00:04:07,470 --> 00:04:11,520
enter into the work share region that

00:04:10,140 --> 00:04:13,890
work sure you know medium basically is a

00:04:11,520 --> 00:04:17,370
static scheduling so each thread will do

00:04:13,890 --> 00:04:19,799
the work and after that it's a barrier

00:04:17,370 --> 00:04:22,350
the implicit barriers join barrier and

00:04:19,799 --> 00:04:23,730
that appoint height as indicated by the

00:04:22,350 --> 00:04:25,830
red color

00:04:23,730 --> 00:04:27,270
therefore you win happening for that

00:04:25,830 --> 00:04:29,330
barrier get the peril

00:04:27,270 --> 00:04:33,479
think big game think a way to begin

00:04:29,330 --> 00:04:36,240
seeking way to end and think and so it's

00:04:33,479 --> 00:04:39,229
a sequence over for you ain't happening

00:04:36,240 --> 00:04:41,879
because so Adam a entry into way to stay

00:04:39,229 --> 00:04:44,460
synchronization state they enter into a

00:04:41,879 --> 00:04:47,789
wait state so that's what happened by

00:04:44,460 --> 00:04:49,620
each of these first read and after they

00:04:47,789 --> 00:04:51,090
finish their execution they were

00:04:49,620 --> 00:04:55,470
entering into a new state which means

00:04:51,090 --> 00:04:57,449
indicate the the we indicated that that

00:04:55,470 --> 00:05:01,020
apparel region is complete by each

00:04:57,449 --> 00:05:04,460
specific thread okay and after that it

00:05:01,020 --> 00:05:08,190
order will join into peril and you ain't

00:05:04,460 --> 00:05:11,460
which is only triggered by the master

00:05:08,190 --> 00:05:13,949
suite okay so that for the first call

00:05:11,460 --> 00:05:16,349
that in a function and after each

00:05:13,949 --> 00:05:18,330
training but the for since we call these

00:05:16,349 --> 00:05:19,949
two function in consider weight so the

00:05:18,330 --> 00:05:22,500
Frances read well you numerator to enter

00:05:19,949 --> 00:05:25,349
into this another parallel beginning

00:05:22,500 --> 00:05:27,539
that indicating a call to the in it but

00:05:25,349 --> 00:05:30,030
or others were will enter into idle

00:05:27,539 --> 00:05:31,289
state it because of you know after their

00:05:30,030 --> 00:05:33,509
synchronization do you know how work to

00:05:31,289 --> 00:05:36,180
do so other no masters to where they

00:05:33,509 --> 00:05:40,139
will be idle waiting to be summoned

00:05:36,180 --> 00:05:42,090
right so that's the excusing start for

00:05:40,139 --> 00:05:45,800
the feng pero regime that what happened

00:05:42,090 --> 00:05:49,139
at the same way as the first inning call

00:05:45,800 --> 00:05:52,580
make sense so that's how we we're at

00:05:49,139 --> 00:05:54,840
this you ain't having now for not scold

00:05:52,580 --> 00:05:56,460
that's not even more complicated there

00:05:54,840 --> 00:05:58,130
the peril region there the fall there

00:05:56,460 --> 00:06:00,659
the background there the master

00:05:58,130 --> 00:06:03,779
directive so but actually the same thing

00:06:00,659 --> 00:06:06,120
correctly different set of a you ain't

00:06:03,779 --> 00:06:07,860
so as an honor we trigger the deuce you

00:06:06,120 --> 00:06:10,139
and I will be triggered by the rain ham

00:06:07,860 --> 00:06:12,180
and we have callbacks to handle this UN

00:06:10,139 --> 00:06:13,860
we are able to treating crack

00:06:12,180 --> 00:06:16,050
informational death chasing uses

00:06:13,860 --> 00:06:18,990
information and a we're life in this way

00:06:16,050 --> 00:06:20,430
so the same thing here and the parallel

00:06:18,990 --> 00:06:22,319
begin employees to begin the end of the

00:06:20,430 --> 00:06:25,490
work the work indicated that work

00:06:22,319 --> 00:06:28,919
sharing part so that's the green part Oh

00:06:25,490 --> 00:06:32,810
for work okay after that because that

00:06:28,919 --> 00:06:36,060
for loop include a implicit barrier

00:06:32,810 --> 00:06:39,629
right so that's why there are two three

00:06:36,060 --> 00:06:42,160
four now for of this red box

00:06:39,629 --> 00:06:43,900
it's a required it's basically for a

00:06:42,160 --> 00:06:45,729
windy required for a single barrier

00:06:43,900 --> 00:06:46,690
synchronization that's why there's a one

00:06:45,729 --> 00:06:49,389
two three four

00:06:46,690 --> 00:06:51,970
it's a syncope Gaines think beginning I

00:06:49,389 --> 00:06:54,520
waited ain't way to begin thing wait Ain

00:06:51,970 --> 00:06:58,389
and sink anus so it's a it's two pair of

00:06:54,520 --> 00:07:00,639
begin and he went for that for one two

00:06:58,389 --> 00:07:04,270
three four is for the buyer of that

00:07:00,639 --> 00:07:06,490
implicit work sharing loop now there's

00:07:04,270 --> 00:07:08,229
the explicit by a right right after this

00:07:06,490 --> 00:07:10,659
one it's not necessary but it's just to

00:07:08,229 --> 00:07:12,789
demo how we can get this in for me

00:07:10,659 --> 00:07:14,590
that's another four one two three four

00:07:12,789 --> 00:07:20,380
knee another one two three four

00:07:14,590 --> 00:07:23,940
another four red box fold that you wind

00:07:20,380 --> 00:07:26,770
associated with that explicit divider

00:07:23,940 --> 00:07:29,380
okay so now after that because the

00:07:26,770 --> 00:07:31,300
spiral we had will be it was synchronize

00:07:29,380 --> 00:07:33,909
or thread so every sweater will have

00:07:31,300 --> 00:07:37,300
that for II waned after that we're there

00:07:33,909 --> 00:07:38,469
the master directly which mean only the

00:07:37,300 --> 00:07:40,150
master thread will actually the Cole

00:07:38,469 --> 00:07:42,099
right that's what happened here the

00:07:40,150 --> 00:07:44,020
master there to do an called master

00:07:42,099 --> 00:07:45,759
became master and indicate that masters

00:07:44,020 --> 00:07:48,699
well which trigger is to you in and

00:07:45,759 --> 00:07:51,639
actually this print offical but all

00:07:48,699 --> 00:07:53,949
others they don't have anything to do at

00:07:51,639 --> 00:07:56,800
this point but they were directly into

00:07:53,949 --> 00:08:00,159
the join buyer over the top level

00:07:56,800 --> 00:08:02,710
parallel region right master don't have

00:08:00,159 --> 00:08:04,240
barrier monster have no implicit viral

00:08:02,710 --> 00:08:07,810
the single has if you housing over

00:08:04,240 --> 00:08:10,330
different in this case the master and so

00:08:07,810 --> 00:08:12,219
only master Xu this master region and

00:08:10,330 --> 00:08:16,259
after that at the or enter into that

00:08:12,219 --> 00:08:18,639
implicit barrier or with the joint buyer

00:08:16,259 --> 00:08:22,090
so that's basically tickly

00:08:18,639 --> 00:08:26,110
indicated the end of the parallel region

00:08:22,090 --> 00:08:32,770
which will be which will show at the

00:08:26,110 --> 00:08:34,510
impact and by each of the thread mmm

00:08:32,770 --> 00:08:38,140
yeah that's basically indicated the

00:08:34,510 --> 00:08:40,209
completion of that call and and go the

00:08:38,140 --> 00:08:43,750
answer you in is these callbacks thread

00:08:40,209 --> 00:08:46,270
innovation basically the the execution

00:08:43,750 --> 00:08:47,920
finish so or the Sweetwater terminal in

00:08:46,270 --> 00:08:50,829
this way or so so it means threader will

00:08:47,920 --> 00:08:53,110
be terminated okay so that's how we

00:08:50,829 --> 00:08:56,360
where I the way we do that

00:08:53,110 --> 00:09:00,710
how we do these chasing so internally

00:08:56,360 --> 00:09:03,620
and it has on chasing buffer to store or

00:09:00,710 --> 00:09:05,540
that you went consecutively and order

00:09:03,620 --> 00:09:08,510
the you the information through Syria

00:09:05,540 --> 00:09:11,420
you went so when you ain't having it

00:09:08,510 --> 00:09:14,030
will add it to a big array of these

00:09:11,420 --> 00:09:15,770
trees information now we have a new term

00:09:14,030 --> 00:09:16,730
called the lexicon or lack surgeon a

00:09:15,770 --> 00:09:20,360
Cadillac surgeon

00:09:16,730 --> 00:09:22,130
it's if the coco de region or the OpenMP

00:09:20,360 --> 00:09:25,250
so if you have a directive with each

00:09:22,130 --> 00:09:28,310
mean is indicate a lexical reasoning of

00:09:25,250 --> 00:09:29,840
that code and in the callback you can

00:09:28,310 --> 00:09:33,140
find that information which is the

00:09:29,840 --> 00:09:37,790
binary address but I that's code pointer

00:09:33,140 --> 00:09:41,870
underscore are a parameter of most call

00:09:37,790 --> 00:09:43,370
back call so each time a program Kobach

00:09:41,870 --> 00:09:47,210
is triggered and we're passing that

00:09:43,370 --> 00:09:50,420
binary address which will associate with

00:09:47,210 --> 00:09:53,200
the coda reason of that that using open

00:09:50,420 --> 00:09:53,200
interactive Oh

00:09:53,720 --> 00:09:58,900
that's information we can capture and

00:09:56,690 --> 00:10:02,720
each thread has the own oxygen stack

00:09:58,900 --> 00:10:05,920
because may you may have a you know in

00:10:02,720 --> 00:10:09,260
that example you have we have that

00:10:05,920 --> 00:10:11,240
multiple oxygen it's it's a nested right

00:10:09,260 --> 00:10:13,850
it's not an STD parallel mat nested

00:10:11,240 --> 00:10:17,960
lactation region so that's why each

00:10:13,850 --> 00:10:20,270
thread has a stack of that lacks in

00:10:17,960 --> 00:10:23,630
reasoning object store internally and

00:10:20,270 --> 00:10:27,580
each oxygen has a linked list connecting

00:10:23,630 --> 00:10:31,460
or the you ain't happening for that

00:10:27,580 --> 00:10:33,170
Lexington because the same color is you

00:10:31,460 --> 00:10:35,750
may be called a multiple time if you

00:10:33,170 --> 00:10:37,850
have a you know a while loop out we're

00:10:35,750 --> 00:10:39,950
out over the internal you have a same

00:10:37,850 --> 00:10:41,540
function cord again again the same

00:10:39,950 --> 00:10:44,600
region may be called a motif on that why

00:10:41,540 --> 00:10:47,120
they're the linked list for this you

00:10:44,600 --> 00:10:51,290
ain't that are associated with a

00:10:47,120 --> 00:10:54,200
particular oxygen for parallel reasoning

00:10:51,290 --> 00:11:01,040
which is a special case and we store

00:10:54,200 --> 00:11:03,380
that implicit ask region in the Masters

00:11:01,040 --> 00:11:05,880
who had a parallel reasoning object so

00:11:03,380 --> 00:11:09,720
that's the reason why we

00:11:05,880 --> 00:11:11,220
connect this link here because now

00:11:09,720 --> 00:11:12,720
greeting listening to the pretty

00:11:11,220 --> 00:11:14,340
straightforward just each threat how

00:11:12,720 --> 00:11:16,710
they're consecutive was you went this

00:11:14,340 --> 00:11:21,560
dry but clearly through it is required

00:11:16,710 --> 00:11:30,050
that the masters to add a store the

00:11:21,560 --> 00:11:33,000
emphasis is Tosca region information and

00:11:30,050 --> 00:11:34,560
we also in choosing all this you will

00:11:33,000 --> 00:11:37,200
also add some performance profiling

00:11:34,560 --> 00:11:39,470
features like you can collect a time

00:11:37,200 --> 00:11:43,890
staff we can read a puppy counter and

00:11:39,470 --> 00:11:45,300
can read the power using a rap hole so

00:11:43,890 --> 00:11:46,590
they can collect any time you that you

00:11:45,300 --> 00:11:51,150
went to watch your sugar but as on you

00:11:46,590 --> 00:11:52,680
add whatever treat you know confer miss

00:11:51,150 --> 00:11:56,010
you want to collect you can do that and

00:11:52,680 --> 00:12:00,300
after that is the grammar output it just

00:11:56,010 --> 00:12:03,390
you know dump chasing date into a

00:12:00,300 --> 00:12:08,720
grammar file that's grammar our file

00:12:03,390 --> 00:12:08,720
will be we're live like this okay

00:12:15,019 --> 00:12:19,279
next ask any question

00:12:27,220 --> 00:12:33,910
okay

00:12:30,070 --> 00:12:36,009
yeah the color indicate the green we

00:12:33,910 --> 00:12:39,730
using Connor indicated is ready to doing

00:12:36,009 --> 00:12:42,759
some real work and the red indicates

00:12:39,730 --> 00:12:45,279
Australia to doing synchronization so

00:12:42,759 --> 00:12:47,949
mostly and the something closed agreeing

00:12:45,279 --> 00:12:50,470
like this one is doing some work but not

00:12:47,949 --> 00:12:52,899
a work sharing master is doing some work

00:12:50,470 --> 00:12:56,579
it's useful work but it's just different

00:12:52,899 --> 00:12:59,319
kind of work it's the work sharing and

00:12:56,579 --> 00:13:02,079
and the yellow it's indicated a serrated

00:12:59,319 --> 00:13:04,750
I don't do nothing but a waiting for a

00:13:02,079 --> 00:13:07,209
work to do so the color would basically

00:13:04,750 --> 00:13:09,759
indicate the more green the better

00:13:07,209 --> 00:13:12,399
because we want most already do the work

00:13:09,759 --> 00:13:13,810
but this car is just the same side about

00:13:12,399 --> 00:13:15,819
it's just indicated that's kind of you

00:13:13,810 --> 00:13:19,480
in it does not indicate how long a

00:13:15,819 --> 00:13:23,100
thread actually it's just it's just a

00:13:19,480 --> 00:13:23,100
point of that you Wayne

00:13:29,470 --> 00:13:39,700
that's what it has been now might be the

00:13:35,230 --> 00:13:42,880
hole where audition is pretty suited for

00:13:39,700 --> 00:13:45,460
since we just need to dump the tracing

00:13:42,880 --> 00:13:47,770
date into graph ml files then we realize

00:13:45,460 --> 00:13:49,810
and we have a tool that can do

00:13:47,770 --> 00:13:52,000
graphically route so we can generally

00:13:49,810 --> 00:13:54,310
hierarchical layout of the graph and the

00:13:52,000 --> 00:13:57,970
most complicated part is internally how

00:13:54,310 --> 00:14:00,610
we store this chasing date and attention

00:13:57,970 --> 00:14:01,990
there could be a huge fade the loop we

00:14:00,610 --> 00:14:08,110
the bigger if you're a larger number

00:14:01,990 --> 00:14:10,750
iteration and also how we store you know

00:14:08,110 --> 00:14:12,340
the how we internally store this

00:14:10,750 --> 00:14:27,840
information that is related it to a

00:14:12,340 --> 00:14:27,840
single black surgeon okay 2:00 p.m. okay

00:14:30,480 --> 00:14:37,050

YouTube URL: https://www.youtube.com/watch?v=Rx8jLMQGaNY


