Title: osc14:  Josef Reidinger, YaST devel collaboration
Publication date: 2014-04-26
Playlist: openSUSE Conference 2014
Description: 
	Quick introduction what YaST team create to automate reviewing, testing, building and submitting YaST modules to openSUSE.
Captions: 
	00:00:00,079 --> 00:00:08,820
reason is quite simple our team is

00:00:04,400 --> 00:00:11,370
smaller then used to be and the code is

00:00:08,820 --> 00:00:17,960
still same size so we need to be more

00:00:11,370 --> 00:00:17,960
efficient work so very feel

00:00:32,259 --> 00:00:44,190
okay so why we did it or what's the most

00:00:40,859 --> 00:00:50,920
annoying part that can be easily optoma

00:00:44,190 --> 00:00:53,979
make automatic is from when you submit

00:00:50,920 --> 00:00:56,979
back so we use github so there is some

00:00:53,979 --> 00:00:59,890
quite famous button to merge pull

00:00:56,979 --> 00:01:02,140
request so you create some page so when

00:00:59,890 --> 00:01:04,030
I view it that needs to be doing done

00:01:02,140 --> 00:01:07,479
manually of course there's also some

00:01:04,030 --> 00:01:11,200
helpers but when you have the patch and

00:01:07,479 --> 00:01:16,179
integrate it into our code then your

00:01:11,200 --> 00:01:19,810
goal is to have it in a factory and it's

00:01:16,179 --> 00:01:23,399
good to have it tested to prevent some

00:01:19,810 --> 00:01:26,350
several errors like syntax mistakes or

00:01:23,399 --> 00:01:30,520
something like missing license check

00:01:26,350 --> 00:01:34,299
missing change log entry advice factory

00:01:30,520 --> 00:01:37,479
guys just oh we don't want it I'll do it

00:01:34,299 --> 00:01:39,369
so it's annoying so it would be nice to

00:01:37,479 --> 00:01:43,420
have some automatic checks and don't

00:01:39,369 --> 00:01:48,959
butter factory guys because they're also

00:01:43,420 --> 00:01:56,229
doesn't have so big team so what we used

00:01:48,959 --> 00:01:58,479
to do for such submission in past you

00:01:56,229 --> 00:02:02,110
need to create package from the source

00:01:58,479 --> 00:02:04,539
codes so there's some commands so you

00:02:02,110 --> 00:02:07,599
need to manually type something like may

00:02:04,539 --> 00:02:12,010
package it creates a tarball it create a

00:02:07,599 --> 00:02:15,640
spec file changes file then you need to

00:02:12,010 --> 00:02:18,400
test the belt if it builds in build

00:02:15,640 --> 00:02:21,370
service this is usually the most

00:02:18,400 --> 00:02:24,190
time-consuming step because testing

00:02:21,370 --> 00:02:27,060
built forest usually takes around 10

00:02:24,190 --> 00:02:31,720
minutes so we just waiting if it's built

00:02:27,060 --> 00:02:33,700
then then you run some tests on it then

00:02:31,720 --> 00:02:36,909
you submit a package to developer jet

00:02:33,700 --> 00:02:39,879
which is for justice yes develop or

00:02:36,909 --> 00:02:42,849
divorced some some of this combination

00:02:39,879 --> 00:02:45,310
and then you need to create the submit a

00:02:42,849 --> 00:02:48,520
request to factory

00:02:45,310 --> 00:02:52,330
so it's quite a lot of steps it takes

00:02:48,520 --> 00:02:56,380
sometimes usually all this steps took

00:02:52,330 --> 00:03:00,340
half an hour so if you want to race 5

00:02:56,380 --> 00:03:03,040
fixes just these steps takes two and a

00:03:00,340 --> 00:03:06,640
half hour for you and we want to be more

00:03:03,040 --> 00:03:12,870
efficient so we are looking for some

00:03:06,640 --> 00:03:15,989
solution the first one is using Jenkins

00:03:12,870 --> 00:03:21,040
Jenkins is continuous integration server

00:03:15,989 --> 00:03:24,130
that works the way that it pulling git

00:03:21,040 --> 00:03:26,560
repository so it doesn't depend on

00:03:24,130 --> 00:03:31,540
github it can work with any guitar

00:03:26,560 --> 00:03:38,099
positive also with CVS or svn and then

00:03:31,540 --> 00:03:41,920
have some verifying steps that it do and

00:03:38,099 --> 00:03:45,730
that's all and it can send you email if

00:03:41,920 --> 00:03:51,100
it succeed or failed so the first step

00:03:45,730 --> 00:03:55,780
we did is to create job for each just

00:03:51,100 --> 00:03:59,769
module just have around 150 modules it's

00:03:55,780 --> 00:04:01,750
what a lot of stuff and create scrip for

00:03:59,769 --> 00:04:03,940
each module with these steps because

00:04:01,750 --> 00:04:07,140
that steps can be slightly different

00:04:03,940 --> 00:04:12,060
because somebody's use altitudes and

00:04:07,140 --> 00:04:15,940
make file and some use just see make and

00:04:12,060 --> 00:04:21,100
some you something different so we have

00:04:15,940 --> 00:04:25,960
150 scripts that the first its

00:04:21,100 --> 00:04:30,940
improvement but problem of this solution

00:04:25,960 --> 00:04:33,550
is that it's generate a lot of false

00:04:30,940 --> 00:04:37,600
positives because yes MA deuce depends

00:04:33,550 --> 00:04:40,630
on each other so there is manually

00:04:37,600 --> 00:04:44,410
inserted some dependency tree that means

00:04:40,630 --> 00:04:46,539
if you create a new car then it start to

00:04:44,410 --> 00:04:49,660
rebuild of holy us just to check if

00:04:46,539 --> 00:04:53,440
something is broken so someone change

00:04:49,660 --> 00:04:55,870
car and every developer that your 20

00:04:53,440 --> 00:04:58,169
modules is broken but but you don't do

00:04:55,870 --> 00:04:58,169
anything

00:04:58,350 --> 00:05:05,480
and also sometimes it breaks because it

00:05:01,920 --> 00:05:10,350
runs these steps on the Jenkins note

00:05:05,480 --> 00:05:13,370
which is dedicated machine for it but it

00:05:10,350 --> 00:05:16,100
there is a dependencies for such modules

00:05:13,370 --> 00:05:18,660
because there is some see parts for

00:05:16,100 --> 00:05:22,560
example if storage so we asked to

00:05:18,660 --> 00:05:24,930
storage depends on lip storage and you

00:05:22,560 --> 00:05:28,050
cannot build yes to storage with the old

00:05:24,930 --> 00:05:30,120
version of lip storage so you submit new

00:05:28,050 --> 00:05:33,840
lip storage and then you should wait

00:05:30,120 --> 00:05:36,090
install on this note new version of lip

00:05:33,840 --> 00:05:38,010
storage and then you can build just to

00:05:36,090 --> 00:05:42,390
storage you there so it's not automatic

00:05:38,010 --> 00:05:45,480
and it happens quite often so result is

00:05:42,390 --> 00:05:50,850
that people start ignore it and just do

00:05:45,480 --> 00:05:56,630
it manually like before so that's that's

00:05:50,850 --> 00:05:59,640
not the hour ago so we give next attempt

00:05:56,630 --> 00:06:03,000
yeah one interesting thing you may

00:05:59,640 --> 00:06:05,640
notice the second link is the our public

00:06:03,000 --> 00:06:08,850
not our it's open to the public CI

00:06:05,640 --> 00:06:11,480
server and we moved here because the

00:06:08,850 --> 00:06:13,860
origin intense was on the internal

00:06:11,480 --> 00:06:16,650
Jenkins so it's not visible for the

00:06:13,860 --> 00:06:19,050
people outside but this is the public

00:06:16,650 --> 00:06:22,230
one you can open it now and just check

00:06:19,050 --> 00:06:26,880
there's a lot of jobs and there is all

00:06:22,230 --> 00:06:30,860
just modules here so you can check it so

00:06:26,880 --> 00:06:38,460
that's one improvement in our openness

00:06:30,860 --> 00:06:42,630
so what we want is bossy me probably you

00:06:38,460 --> 00:06:45,600
know it just to remind it's a

00:06:42,630 --> 00:06:50,340
command-line tool to communicate with

00:06:45,600 --> 00:06:53,250
build service reason why we choose this

00:06:50,340 --> 00:06:57,780
technology technology is to have the

00:06:53,250 --> 00:07:03,240
consistent built because OSE can build

00:06:57,780 --> 00:07:06,330
package in fruit and it and OSE ensure

00:07:03,240 --> 00:07:10,969
that recent packages is installed in

00:07:06,330 --> 00:07:13,669
this world so you don't need

00:07:10,969 --> 00:07:17,929
to worry that some version change

00:07:13,669 --> 00:07:21,229
because it automatically take it is also

00:07:17,929 --> 00:07:25,849
one quite nice advantage that we can

00:07:21,229 --> 00:07:29,059
build for older distributions like opens

00:07:25,849 --> 00:07:33,579
a certain not one because the altar

00:07:29,059 --> 00:07:35,929
Jenkins all built just for a factorial

00:07:33,579 --> 00:07:38,029
otherwise there will be mixtures of

00:07:35,929 --> 00:07:41,239
version on Jenkins no but if you use

00:07:38,029 --> 00:07:43,789
fruit you can have more fruit for

00:07:41,239 --> 00:07:50,329
different environments and it can live

00:07:43,789 --> 00:07:54,079
on one an old so we start using o se but

00:07:50,329 --> 00:07:57,829
still there are some steps that not so

00:07:54,079 --> 00:08:01,759
easy like creating package that need to

00:07:57,829 --> 00:08:04,339
be before running OS e because you need

00:08:01,759 --> 00:08:08,629
to create package cop it to your own see

00:08:04,339 --> 00:08:12,579
fire I don't do something so we want to

00:08:08,629 --> 00:08:20,869
improve the situation even on this part

00:08:12,579 --> 00:08:23,449
so the nature step we did this job after

00:08:20,869 --> 00:08:27,469
the conversion from by CP to obey and

00:08:23,449 --> 00:08:31,759
asked so the nature choose is different

00:08:27,469 --> 00:08:39,459
built built environment that's right

00:08:31,759 --> 00:08:42,919
which is nature for Ruby and look just

00:08:39,459 --> 00:08:46,730
to ensure you it's not a revolution it's

00:08:42,919 --> 00:08:49,519
just evolution because we have

00:08:46,730 --> 00:08:54,860
everywhere reg files which is for egg

00:08:49,519 --> 00:08:59,180
but internally we still use the old make

00:08:54,860 --> 00:09:01,399
or a/c make depends on module but it's

00:08:59,180 --> 00:09:05,569
specified on the inspect file so we

00:09:01,399 --> 00:09:10,160
split it and you can use anything in

00:09:05,569 --> 00:09:13,399
built face so so for building you just

00:09:10,160 --> 00:09:16,819
can call makes you make or even our egg

00:09:13,399 --> 00:09:19,339
some modules use already right before so

00:09:16,819 --> 00:09:25,459
you can use it but for packaging we

00:09:19,339 --> 00:09:28,920
always use rake and the reason is that

00:09:25,459 --> 00:09:33,319
phoric you can have easy libraries it's

00:09:28,920 --> 00:09:38,399
much easier than for make or C make and

00:09:33,319 --> 00:09:42,120
it's quite easy to keep it up to date

00:09:38,399 --> 00:09:44,220
and the biggest advantage way we choose

00:09:42,120 --> 00:09:47,339
our egg is that if you need something

00:09:44,220 --> 00:09:51,269
more complex you can program it in a

00:09:47,339 --> 00:09:53,879
ruby I am not sure how many of you try

00:09:51,269 --> 00:09:56,490
do something with auto tools or see make

00:09:53,879 --> 00:10:00,600
more complex but they are scripting

00:09:56,490 --> 00:10:02,339
language just m44 altitudes and even I

00:10:00,600 --> 00:10:05,430
don't know name for C make but it's

00:10:02,339 --> 00:10:09,750
usually big pain and I need to google a

00:10:05,430 --> 00:10:12,000
lot to do quite trivial stuff but when

00:10:09,750 --> 00:10:14,040
you have Ruby and you work with Ruby

00:10:12,000 --> 00:10:17,220
every day it's very easy to write

00:10:14,040 --> 00:10:23,339
something more complex so we decide for

00:10:17,220 --> 00:10:28,379
ache and to make it better I create some

00:10:23,339 --> 00:10:33,240
generic gem packaging tasks it it's open

00:10:28,379 --> 00:10:35,970
source it lives on github and its goal

00:10:33,240 --> 00:10:39,750
is to have generic integration of

00:10:35,970 --> 00:10:43,019
project and built service there's task

00:10:39,750 --> 00:10:47,009
that create package which is integrated

00:10:43,019 --> 00:10:52,860
with get so we do some good terrible

00:10:47,009 --> 00:10:56,790
command and it can call ose so it

00:10:52,860 --> 00:11:00,449
creates tarball it copy the sources to

00:10:56,790 --> 00:11:05,309
your defined project and try to build it

00:11:00,449 --> 00:11:08,490
you can try to mull tomorrow yeah create

00:11:05,309 --> 00:11:10,980
submit requests committed to our double

00:11:08,490 --> 00:11:13,319
project and so on and there is

00:11:10,980 --> 00:11:18,360
dependency so so you just specify what

00:11:13,319 --> 00:11:21,949
you want at the end so what we have on

00:11:18,360 --> 00:11:26,899
our jenkins is one single command and

00:11:21,949 --> 00:11:30,750
that comet is rake ose sr which means

00:11:26,899 --> 00:11:35,220
create submit a request if needed to

00:11:30,750 --> 00:11:37,900
factory and it knows that to create some

00:11:35,220 --> 00:11:41,410
requests they need to

00:11:37,900 --> 00:11:44,530
create tarball they need to try test

00:11:41,410 --> 00:11:48,280
build if it builds and if yes then then

00:11:44,530 --> 00:11:50,290
committed to devil project create some

00:11:48,280 --> 00:11:53,230
and request if version increase that's

00:11:50,290 --> 00:11:55,270
one of the change because if version

00:11:53,230 --> 00:11:59,170
doesn't increase the factor it doesn't

00:11:55,270 --> 00:12:02,170
accept the package so only a version

00:11:59,170 --> 00:12:05,200
increase submitted also to factory that

00:12:02,170 --> 00:12:07,840
also prevents to create too much submit

00:12:05,200 --> 00:12:10,900
request because factory gah factorial

00:12:07,840 --> 00:12:14,110
guys doesn't like to do have thousands

00:12:10,900 --> 00:12:18,550
of some requests per day so on this

00:12:14,110 --> 00:12:20,830
version increase so the packaging task

00:12:18,550 --> 00:12:23,410
is the generic part and it's already

00:12:20,830 --> 00:12:26,550
used for more project it's used in web

00:12:23,410 --> 00:12:29,620
asked some internal projects of Susa and

00:12:26,550 --> 00:12:32,830
I think that also some other projects

00:12:29,620 --> 00:12:35,440
look into it I'm not sure on which part

00:12:32,830 --> 00:12:38,200
is it I just get some questions i answer

00:12:35,440 --> 00:12:41,050
it and then get no feedback so maybe I

00:12:38,200 --> 00:12:47,050
try to give some guys on this conference

00:12:41,050 --> 00:12:51,610
and what's specific forest is yes trike

00:12:47,050 --> 00:12:55,000
that's on top of packaging toss and have

00:12:51,610 --> 00:12:57,760
some specific configuration and specific

00:12:55,000 --> 00:13:01,930
tasks so it specified the devil project

00:12:57,760 --> 00:13:05,170
is always yes the devil forest part it

00:13:01,930 --> 00:13:09,400
always a means to factory that they have

00:13:05,170 --> 00:13:16,270
some special meta data grabbing like

00:13:09,400 --> 00:13:19,150
always modules contained rpm name file

00:13:16,270 --> 00:13:20,920
which includes the target rpm name

00:13:19,150 --> 00:13:23,770
because the guitar positive doesn't

00:13:20,920 --> 00:13:26,860
match the RPM name so there is some

00:13:23,770 --> 00:13:31,600
specific things for just and there is

00:13:26,860 --> 00:13:35,380
also some nice tasks for us and one that

00:13:31,600 --> 00:13:39,030
I like the most is to run just module

00:13:35,380 --> 00:13:43,180
from gate it's correctly set up all

00:13:39,030 --> 00:13:45,850
paths like I'm not sure how deeply you

00:13:43,180 --> 00:13:48,610
know you ask but there is some peril you

00:13:45,850 --> 00:13:49,600
can specify where to load just module so

00:13:48,610 --> 00:13:52,660
if you are on

00:13:49,600 --> 00:13:55,360
to run it from gate you need to specify

00:13:52,660 --> 00:13:58,029
some parts of it do it for you you can

00:13:55,360 --> 00:14:00,610
just specify our ground and runs mallu

00:13:58,029 --> 00:14:02,649
from gate so you can just try module

00:14:00,610 --> 00:14:05,290
even if you don't install it to your

00:14:02,649 --> 00:14:13,149
system it's quite useful also for

00:14:05,290 --> 00:14:17,699
testing ok so that's what I want to say

00:14:13,149 --> 00:14:22,690
I have here some contacts for your steam

00:14:17,699 --> 00:14:25,269
we live on public IRC on freenode there

00:14:22,690 --> 00:14:28,779
is whole team we destroyed their

00:14:25,269 --> 00:14:32,259
internal IRC channel so there's our only

00:14:28,779 --> 00:14:35,110
place where you can reach us even if you

00:14:32,259 --> 00:14:37,959
work for Susa you need to go to freedom

00:14:35,110 --> 00:14:41,500
to reach us and we have public mailing

00:14:37,959 --> 00:14:43,990
list where you can just ask some

00:14:41,500 --> 00:14:47,529
questions we usually respond to one day

00:14:43,990 --> 00:14:54,790
we try to communicate ok so do you have

00:14:47,529 --> 00:14:56,649
some questions well maybe I'm so clear

00:14:54,790 --> 00:15:00,779
or so confusing that no one have

00:14:56,649 --> 00:15:04,810
question so yeah one question nice

00:15:00,779 --> 00:15:09,449
Oliver what happens when you get a

00:15:04,810 --> 00:15:09,449
failure when's do you get the local

00:15:09,959 --> 00:15:18,279
thanks for a question it's good we get

00:15:14,829 --> 00:15:21,029
email to mailing list it's just commit

00:15:18,279 --> 00:15:24,939
mailing list where's some automatic

00:15:21,029 --> 00:15:28,209
report so it goes there and also Jenkins

00:15:24,939 --> 00:15:32,199
have featured that it can directly mail

00:15:28,209 --> 00:15:35,019
to the outer of get commits involved in

00:15:32,199 --> 00:15:37,660
change so he's seated his story so we

00:15:35,019 --> 00:15:40,170
see yes there is changes from see guy so

00:15:37,660 --> 00:15:44,350
also mail these three guys that have

00:15:40,170 --> 00:15:48,000
email in his get account so you get

00:15:44,350 --> 00:15:52,149
email it failed it create complete lock

00:15:48,000 --> 00:15:54,790
from the run of rike and it's usually

00:15:52,149 --> 00:16:00,670
there because we are everything bar both

00:15:54,790 --> 00:16:02,769
to have easy history you can easily get

00:16:00,670 --> 00:16:05,769
his story and what's the

00:16:02,769 --> 00:16:10,449
the best thing that it's consistent so

00:16:05,769 --> 00:16:13,029
if you run break ose built for example

00:16:10,449 --> 00:16:16,300
on our machine then it do exactly same

00:16:13,029 --> 00:16:19,449
like our jenkins note of course there's

00:16:16,300 --> 00:16:22,749
some it doesn't catch everything like

00:16:19,449 --> 00:16:25,949
figures for s390 or some specific

00:16:22,749 --> 00:16:31,769
actions like arm because we have just

00:16:25,949 --> 00:16:41,139
testing out for x86 64 but it usually

00:16:31,769 --> 00:16:44,649
pieces yeah any more question are you

00:16:41,139 --> 00:16:47,439
aware of the boss system made for me

00:16:44,649 --> 00:16:49,600
comer yola uses it as far as i

00:16:47,439 --> 00:16:51,249
understand i'm not into that but i think

00:16:49,600 --> 00:16:54,519
i still use it are you aware of that

00:16:51,249 --> 00:16:58,059
system I think the spec or the top the

00:16:54,519 --> 00:16:59,679
Gold's sound very similar so nothing

00:16:58,059 --> 00:17:01,540
it's open source so you could have a

00:16:59,679 --> 00:17:07,510
look there and steal some ideas or

00:17:01,540 --> 00:17:11,649
whatever yeah yeah I know there is some

00:17:07,510 --> 00:17:14,079
moral systems for it and we we looked

00:17:11,649 --> 00:17:20,020
into some opportunities but this is

00:17:14,079 --> 00:17:22,360
quiet right nature because we use it

00:17:20,020 --> 00:17:24,789
already Jenkins and passed for other

00:17:22,360 --> 00:17:28,000
projects so we know it and the packaging

00:17:24,789 --> 00:17:31,840
task actually not start in asked we

00:17:28,000 --> 00:17:33,909
start doing it forever best so we have

00:17:31,840 --> 00:17:37,570
it in past just when it when we start

00:17:33,909 --> 00:17:41,710
with the best and we decided right way

00:17:37,570 --> 00:17:45,639
to go and actually it's quite easy easy

00:17:41,710 --> 00:17:47,889
code it's not rocket science the robe is

00:17:45,639 --> 00:17:50,889
quite the good expression and it usually

00:17:47,889 --> 00:17:54,580
just cause some command line client or

00:17:50,889 --> 00:17:57,490
earth command line scripts so it's quite

00:17:54,580 --> 00:18:04,840
quite easy it's very small library but

00:17:57,490 --> 00:18:08,289
it works very nice ok anymore ok so

00:18:04,840 --> 00:18:11,940
thanks for your attention and see you in

00:18:08,289 --> 00:18:11,940

YouTube URL: https://www.youtube.com/watch?v=CC4kgwHjZTc


