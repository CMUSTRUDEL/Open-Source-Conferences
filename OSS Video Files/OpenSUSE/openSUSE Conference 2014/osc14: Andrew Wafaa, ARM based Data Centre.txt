Title: osc14: Andrew Wafaa, ARM based Data Centre
Publication date: 2014-04-28
Playlist: openSUSE Conference 2014
Description: 
	Providing an insight into how ARM and our partners are changing the industry by introducing new opportunities into the Data Centre. Looking at the revolution going on in the server and networking space supported by the innovation from mobile, and seeing how ARM's energy efficient systems help power everything from Sensors to Servers.
Captions: 
	00:00:00,979 --> 00:00:17,970
right thanks very much ya know from most

00:00:07,400 --> 00:00:23,400
hello hello welcome so the intention is

00:00:17,970 --> 00:00:27,180
to provide an insight into what arm and

00:00:23,400 --> 00:00:31,460
our partners and ecosystem are doing to

00:00:27,180 --> 00:00:41,100
change the industry in the server space

00:00:31,460 --> 00:00:44,370
so yeah so arms historically had strong

00:00:41,100 --> 00:00:46,950
leadership in power consumption or low

00:00:44,370 --> 00:00:51,149
power consumption in the mobile space

00:00:46,950 --> 00:00:58,079
and we're looking at taking that to the

00:00:51,149 --> 00:01:00,390
next step into the datacenter so I'm

00:00:58,079 --> 00:01:04,650
going to talk about three items impact

00:01:00,390 --> 00:01:08,689
with mobile industry on computing and

00:01:04,650 --> 00:01:12,330
how its redefined expectations the arm

00:01:08,689 --> 00:01:15,920
partnership and how it drives the

00:01:12,330 --> 00:01:20,549
innovation behind the opportunities and

00:01:15,920 --> 00:01:29,060
new revolution going into the server and

00:01:20,549 --> 00:01:35,130
networking space in the data center so

00:01:29,060 --> 00:01:37,170
despite our relative success there's a

00:01:35,130 --> 00:01:42,030
lot more that we want to accomplish

00:01:37,170 --> 00:01:46,340
moving forward energy efficient systems

00:01:42,030 --> 00:01:49,710
are now starting to become relatively

00:01:46,340 --> 00:01:53,750
important it's no longer just about

00:01:49,710 --> 00:01:57,509
power as in the strength of machine how

00:01:53,750 --> 00:02:00,899
how much gigahertz you've got how its

00:01:57,509 --> 00:02:05,219
ram etc there is now also considerations

00:02:00,899 --> 00:02:08,550
in the restrictions upon datacenters

00:02:05,219 --> 00:02:11,810
normally data centers have got lots of

00:02:08,550 --> 00:02:13,710
space so putting a rack ins not an issue

00:02:11,810 --> 00:02:19,020
the issue is

00:02:13,710 --> 00:02:24,960
power and cooling so we've we've just

00:02:19,020 --> 00:02:29,910
begun to really bring internet-enabled

00:02:24,960 --> 00:02:32,930
computing to developing countries mobile

00:02:29,910 --> 00:02:36,390
revolution has start to take off

00:02:32,930 --> 00:02:41,850
globally now smartphones are everywhere

00:02:36,390 --> 00:02:45,900
it's not just restricted to cash rich

00:02:41,850 --> 00:02:54,960
countries it's making impact in BRIC

00:02:45,900 --> 00:03:00,300
nations so Brazil India China and Russia

00:02:54,960 --> 00:03:03,990
of course so it's it's stunning to get

00:03:00,300 --> 00:03:07,940
everywhere and data is being generated

00:03:03,990 --> 00:03:10,890
at a rapid rate of not so you're getting

00:03:07,940 --> 00:03:14,270
cars generating internet traffic you're

00:03:10,890 --> 00:03:17,690
getting gardening sensors to monitor

00:03:14,270 --> 00:03:20,820
your pH levels of you soil etc

00:03:17,690 --> 00:03:24,780
generating internet traffic mobile

00:03:20,820 --> 00:03:33,360
phones with the relative related web

00:03:24,780 --> 00:03:38,150
services it's everywhere now so working

00:03:33,360 --> 00:03:45,260
in partnership we're aiming to transform

00:03:38,150 --> 00:03:49,280
how the network and server related

00:03:45,260 --> 00:03:56,370
components work within the day Center

00:03:49,280 --> 00:03:58,260
it's not just a simple drop and replace

00:03:56,370 --> 00:04:01,980
things need to be looked at there's a

00:03:58,260 --> 00:04:03,900
workload requirement much the same as

00:04:01,980 --> 00:04:09,270
there is already on existing

00:04:03,900 --> 00:04:13,620
architectures but there are ways where

00:04:09,270 --> 00:04:16,850
we can leverage our strengths it's a

00:04:13,620 --> 00:04:16,850
better serve marketplace

00:04:19,620 --> 00:04:28,870
so how the arm partnership works arm is

00:04:25,840 --> 00:04:30,550
an IP company we don't make anything we

00:04:28,870 --> 00:04:33,610
come up with designs we then license

00:04:30,550 --> 00:04:38,290
those designs to our partners so we've

00:04:33,610 --> 00:04:41,200
got partners who create the CPUs on the

00:04:38,290 --> 00:04:44,920
left hand side as you can see there

00:04:41,200 --> 00:04:48,120
there's over there's almost 300 partners

00:04:44,920 --> 00:04:54,480
that create a CPU of one form or another

00:04:48,120 --> 00:05:00,310
we've also got from there OEM partners

00:04:54,480 --> 00:05:04,080
who actually build the systems that can

00:05:00,310 --> 00:05:06,310
then enter the market and then we've got

00:05:04,080 --> 00:05:13,650
software partners operating system

00:05:06,310 --> 00:05:17,590
vendors likes is a red hat etc etc so

00:05:13,650 --> 00:05:23,590
they build the foundation components

00:05:17,590 --> 00:05:26,860
before it can hit the datacenter but

00:05:23,590 --> 00:05:30,280
just having an operating system on a

00:05:26,860 --> 00:05:35,190
piece of hardware isn't enough there's a

00:05:30,280 --> 00:05:41,490
much wider scope that requires working

00:05:35,190 --> 00:05:48,220
so we then work with other third parties

00:05:41,490 --> 00:05:54,220
to enhance the operating system layer we

00:05:48,220 --> 00:05:56,980
work with other parties that work on key

00:05:54,220 --> 00:06:00,550
software projects that are then used

00:05:56,980 --> 00:06:04,210
within commercial products so we've got

00:06:00,550 --> 00:06:08,730
linaro a nonprofit engineering arm that

00:06:04,210 --> 00:06:13,840
works on a lot of the low-level aspects

00:06:08,730 --> 00:06:16,690
fine-tuning improving performance and

00:06:13,840 --> 00:06:19,870
feeding that back upstream so everyone

00:06:16,690 --> 00:06:21,760
can then benefit we've also got projects

00:06:19,870 --> 00:06:25,680
like Zen project working on xen

00:06:21,760 --> 00:06:28,630
hypervisor to ensure that it works just

00:06:25,680 --> 00:06:31,090
as well on the ARM architecture as it

00:06:28,630 --> 00:06:32,139
does on other architectures and then

00:06:31,090 --> 00:06:34,449
you've got

00:06:32,139 --> 00:06:38,379
projects like OpenStack that is used

00:06:34,449 --> 00:06:42,249
within commercial products in key areas

00:06:38,379 --> 00:06:45,849
like on a scale and cloud computing so

00:06:42,249 --> 00:06:50,919
working with our partners we can create

00:06:45,849 --> 00:06:54,270
a solid base to then get used by people

00:06:50,919 --> 00:06:59,680
like Open Compute Project and customers

00:06:54,270 --> 00:07:02,229
elsewhere so all of that provides an

00:06:59,680 --> 00:07:06,419
opportunity for innovation an

00:07:02,229 --> 00:07:09,419
opportunity to lower total cost and

00:07:06,419 --> 00:07:14,680
gives you a much wider range of choice

00:07:09,419 --> 00:07:19,139
so you can choose from one silicon

00:07:14,680 --> 00:07:25,419
vendor or another so you could have

00:07:19,139 --> 00:07:30,729
cavium and AMD if you wish or you could

00:07:25,419 --> 00:07:33,389
have many more different CPUs within

00:07:30,729 --> 00:07:39,279
your data center rather than you're

00:07:33,389 --> 00:07:49,259
almost monopolistic options that are in

00:07:39,279 --> 00:07:52,259
place now so data center workload is

00:07:49,259 --> 00:07:58,169
always changing depending on what

00:07:52,259 --> 00:08:02,939
customers are doing so it's an evolution

00:07:58,169 --> 00:08:08,080
so at the minute it's a monolithic

00:08:02,939 --> 00:08:11,529
workload you just get on and do it it's

00:08:08,080 --> 00:08:14,710
slowly going to start not fragmenting

00:08:11,529 --> 00:08:16,750
but almost container izing itself you

00:08:14,710 --> 00:08:23,050
will have a dedicated workload for a

00:08:16,750 --> 00:08:26,139
specific use case and that will slowly

00:08:23,050 --> 00:08:31,569
refine itself down and it'll become much

00:08:26,139 --> 00:08:37,349
more fine-grain fine-tuned so over time

00:08:31,569 --> 00:08:41,199
be able to focus on the throughput

00:08:37,349 --> 00:08:44,529
ensure that the workload is as highly

00:08:41,199 --> 00:08:46,980
optimized as possible to better meet

00:08:44,529 --> 00:08:46,980
your needs

00:08:47,860 --> 00:08:55,880
so looking at web-scale workloads as a

00:08:53,740 --> 00:09:01,279
early entrant forearm in the server

00:08:55,880 --> 00:09:05,450
space most workloads are actually I owe

00:09:01,279 --> 00:09:10,700
bound there's not that many bit of CPU

00:09:05,450 --> 00:09:14,480
bound so the fact that you can get 4

00:09:10,700 --> 00:09:19,270
gigahertz you know eight cpu 4 gigahertz

00:09:14,480 --> 00:09:22,820
each now it's actually going to be

00:09:19,270 --> 00:09:24,320
pretty underused it's going to be your

00:09:22,820 --> 00:09:27,649
sand back end that's going to get the

00:09:24,320 --> 00:09:31,399
most use not for everything but for

00:09:27,649 --> 00:09:33,920
large majority of tasks so as you can

00:09:31,399 --> 00:09:39,080
see they're cold storage things like

00:09:33,920 --> 00:09:42,020
Facebook baidu Weibo Twitter a lot of

00:09:39,080 --> 00:09:46,640
those web services where you can upload

00:09:42,020 --> 00:09:48,709
photographs nine times out of ten for

00:09:46,640 --> 00:09:52,700
the first month of that photograph being

00:09:48,709 --> 00:09:55,400
uploaded it will be accessed maybe twice

00:09:52,700 --> 00:09:59,570
a day if you're lucky ten times a day

00:09:55,400 --> 00:10:04,310
after one month the usage or the access

00:09:59,570 --> 00:10:08,890
to those images plummets it may get used

00:10:04,310 --> 00:10:14,980
once a month maybe once every six months

00:10:08,890 --> 00:10:17,330
so having a server that beefy Oh

00:10:14,980 --> 00:10:20,420
encompassing can do whatever you you

00:10:17,330 --> 00:10:24,440
want to serve an image once at once

00:10:20,420 --> 00:10:28,640
every six months isn't the greatest of

00:10:24,440 --> 00:10:29,870
use of your hardware the data center you

00:10:28,640 --> 00:10:36,740
can be burning a lot of money for

00:10:29,870 --> 00:10:38,540
nothing you could use virtualization for

00:10:36,740 --> 00:10:44,060
that but you're still going to be

00:10:38,540 --> 00:10:47,480
burning a lot of power so cold storages

00:10:44,060 --> 00:10:49,459
a prime example and actually it's one of

00:10:47,480 --> 00:10:52,820
the first use cases of the arm server

00:10:49,459 --> 00:10:56,209
within the enterprise now is in the

00:10:52,820 --> 00:10:58,810
cultural storage space running a one and

00:10:56,209 --> 00:10:58,810
a half gigahertz

00:10:58,910 --> 00:11:05,639
with good I owe back end because that's

00:11:01,800 --> 00:11:10,380
what's needed and you know that there

00:11:05,639 --> 00:11:12,690
are certain cases where CPU is needed

00:11:10,380 --> 00:11:18,660
big data being probably one of the

00:11:12,690 --> 00:11:24,180
bigger ones but it's not you know that

00:11:18,660 --> 00:11:27,600
there's a workload out there for us to

00:11:24,180 --> 00:11:30,750
fit not necessarily that workload to fit

00:11:27,600 --> 00:11:35,040
us we have our advantages and we can

00:11:30,750 --> 00:11:40,889
leverage those advantages to the max so

00:11:35,040 --> 00:11:44,060
our goal is the existing arm ecosystem

00:11:40,889 --> 00:11:47,370
is very fragmented the arm v7

00:11:44,060 --> 00:11:51,300
architecture has lots of little oddities

00:11:47,370 --> 00:11:53,610
you could get almost the same hardware

00:11:51,300 --> 00:11:55,019
from one vendor and compare it to the

00:11:53,610 --> 00:11:57,779
next vendor it's going to be very

00:11:55,019 --> 00:12:01,529
different so for the enterprise for

00:11:57,779 --> 00:12:03,959
customers for OS vendors etc it's very

00:12:01,529 --> 00:12:06,959
hard to support them so our intention is

00:12:03,959 --> 00:12:10,980
with arm v8 the new 64-bit architecture

00:12:06,959 --> 00:12:13,980
is to standardize it so it's much easier

00:12:10,980 --> 00:12:16,319
to maintain upstream it's much easier

00:12:13,980 --> 00:12:19,290
for our partners to maintain and support

00:12:16,319 --> 00:12:25,949
and it's much easier for customers to

00:12:19,290 --> 00:12:31,079
understand and to leverage to the max so

00:12:25,949 --> 00:12:33,769
be there is a base server architecture

00:12:31,079 --> 00:12:39,120
specification that has been released

00:12:33,769 --> 00:12:42,839
that lays out all those pieces for our

00:12:39,120 --> 00:12:46,189
partners so that they can work to a

00:12:42,839 --> 00:12:50,790
common goal and rather than

00:12:46,189 --> 00:12:53,790
differentiating on small insignificant

00:12:50,790 --> 00:12:55,819
pieces they can spend more time creating

00:12:53,790 --> 00:13:04,010
a good product and depress

00:12:55,819 --> 00:13:06,530
differentiating where it matters so I've

00:13:04,010 --> 00:13:14,770
parsley touched on why standardizations

00:13:06,530 --> 00:13:19,550
important it it's key to ensure that for

00:13:14,770 --> 00:13:23,330
efficiency both in deployment usage pack

00:13:19,550 --> 00:13:28,010
consumption that there's a common way to

00:13:23,330 --> 00:13:31,880
work people know how things are used

00:13:28,010 --> 00:13:35,740
they understand it they can carry their

00:13:31,880 --> 00:13:39,050
skills over from one architecture and

00:13:35,740 --> 00:13:40,010
easily deploy it on another architecture

00:13:39,050 --> 00:13:45,820
they don't have to start from scratch

00:13:40,010 --> 00:13:45,820
learning it working out its oddities etc

00:13:49,930 --> 00:13:53,330
so how are we going to do the

00:13:51,860 --> 00:13:57,230
standardization without open sourcing

00:13:53,330 --> 00:14:03,800
the drivers well the base all the base

00:13:57,230 --> 00:14:05,740
components are going upstream so there's

00:14:03,800 --> 00:14:10,880
no so we're going to be using a

00:14:05,740 --> 00:14:17,350
standardized boot method ufi is the

00:14:10,880 --> 00:14:20,300
preferred method for firmer for booting

00:14:17,350 --> 00:14:23,300
its upstream already teanna core 2

00:14:20,300 --> 00:14:25,970
includes everything that's needed we are

00:14:23,300 --> 00:14:27,980
working directly upstream there's none

00:14:25,970 --> 00:14:31,910
of this will work behind closed doors

00:14:27,980 --> 00:14:34,670
and then do a code drop it is working

00:14:31,910 --> 00:14:39,260
upstream we go to a lot of the UF i plug

00:14:34,670 --> 00:14:42,580
vests we are very active there and we

00:14:39,260 --> 00:14:48,040
all we are also part of the UEFI

00:14:42,580 --> 00:14:51,580
committee to help shape how things go so

00:14:48,040 --> 00:14:56,380
it's much easier for our partners to

00:14:51,580 --> 00:14:59,000
standardizing you fi it'll work across

00:14:56,380 --> 00:15:01,130
architecture a architecture be does make

00:14:59,000 --> 00:15:04,490
any difference they just need to know

00:15:01,130 --> 00:15:07,040
UEFI and off they go so that I mean we

00:15:04,490 --> 00:15:12,790
are ensuring that we do as much as

00:15:07,040 --> 00:15:12,790
possible in the open upstream

00:15:15,790 --> 00:15:26,990
so standardizing makes it much easier to

00:15:23,800 --> 00:15:29,870
innovate you don't have to take into

00:15:26,990 --> 00:15:31,940
account oddities you know where you

00:15:29,870 --> 00:15:37,100
stand you can then get on and make sure

00:15:31,940 --> 00:15:41,840
that your software is highly optimized

00:15:37,100 --> 00:15:46,460
it's the fastest to do big data

00:15:41,840 --> 00:15:50,060
workloads it's the best to do whatever

00:15:46,460 --> 00:15:53,180
you wish rather than going well I've got

00:15:50,060 --> 00:15:56,210
this great idea work on that oh but I

00:15:53,180 --> 00:15:59,450
need to take into account if I'm using

00:15:56,210 --> 00:16:01,790
platform a I need to do it one way

00:15:59,450 --> 00:16:04,730
platform B I can't do it that way I have

00:16:01,790 --> 00:16:06,740
to do it slightly differently it

00:16:04,730 --> 00:16:10,580
separately it starts becoming monolithic

00:16:06,740 --> 00:16:13,040
and then customers don't understand well

00:16:10,580 --> 00:16:14,240
I bought this platform got your software

00:16:13,040 --> 00:16:17,450
it's supposed to be good for big data

00:16:14,240 --> 00:16:18,770
but doesn't work oh yeah for that

00:16:17,450 --> 00:16:24,890
platform of not tested it on because

00:16:18,770 --> 00:16:27,860
well I'm got one if its standard base

00:16:24,890 --> 00:16:40,550
you know exactly where you are and it's

00:16:27,860 --> 00:16:42,890
much easier to improve we so how are we

00:16:40,550 --> 00:16:44,240
going to keep vendors in check in is

00:16:42,890 --> 00:16:50,180
there going to be a certification

00:16:44,240 --> 00:16:58,550
process part of the way we work is we

00:16:50,180 --> 00:17:01,460
license our IP so when we license our IP

00:16:58,550 --> 00:17:06,890
to partners there are stipulations over

00:17:01,460 --> 00:17:09,080
what you can can't do etc I won't go

00:17:06,890 --> 00:17:10,940
into details because to be honest I

00:17:09,080 --> 00:17:14,570
don't get involved in that in the

00:17:10,940 --> 00:17:17,630
licensing aspect but i do get involved

00:17:14,570 --> 00:17:21,020
in discussions both from an engineering

00:17:17,630 --> 00:17:24,650
level and further up on how things are

00:17:21,020 --> 00:17:28,160
going and we occasionally get instances

00:17:24,650 --> 00:17:30,770
where partners think of a great idea and

00:17:28,160 --> 00:17:33,050
they go down to innovate but actually

00:17:30,770 --> 00:17:37,520
they're diverging and then fragmenting

00:17:33,050 --> 00:17:40,250
so we have regular discussions with all

00:17:37,520 --> 00:17:43,400
our partners and ensure that we just

00:17:40,250 --> 00:17:47,450
pull them back into the the common goal

00:17:43,400 --> 00:17:50,920
and there's an element of social

00:17:47,450 --> 00:17:54,080
pressure there and linaro is a key

00:17:50,920 --> 00:17:57,110
partner in helping to make sure that

00:17:54,080 --> 00:18:03,620
things remain standardized and to

00:17:57,110 --> 00:18:06,110
minimize the fragmentation so as I

00:18:03,620 --> 00:18:08,750
mentioned obviates the evolution of the

00:18:06,110 --> 00:18:11,060
ARM architecture it's the next step it's

00:18:08,750 --> 00:18:14,660
the first 64-bit variant of our

00:18:11,060 --> 00:18:18,380
architecture and there's backwards

00:18:14,660 --> 00:18:21,140
compatibility through time so I'll be

00:18:18,380 --> 00:18:28,370
five introduced gisele for optimized

00:18:21,140 --> 00:18:31,580
Java workloads floating-point arm v6

00:18:28,370 --> 00:18:35,570
introduced simdi for mathematical heavy

00:18:31,580 --> 00:18:38,990
transactions trusts own a trusted

00:18:35,570 --> 00:18:41,920
execution environment neighboring much

00:18:38,990 --> 00:18:44,270
more secure transactions so you can do

00:18:41,920 --> 00:18:48,320
mobile payment securely knowing that

00:18:44,270 --> 00:18:54,020
there's no leakage they're introduced

00:18:48,320 --> 00:18:58,850
thumb2 with arm v7 it had introduced an

00:18:54,020 --> 00:19:01,370
advanced simdi and improved from

00:18:58,850 --> 00:19:05,750
floating point and then with arm v8

00:19:01,370 --> 00:19:10,910
there on the right there's two models

00:19:05,750 --> 00:19:14,750
you can have a art 64 which is 64-bit or

00:19:10,910 --> 00:19:18,440
ayats 32 which remains 32 bit you can

00:19:14,750 --> 00:19:20,780
have a 64-bit kernel running 32-bit use

00:19:18,440 --> 00:19:25,670
space just like you can now on other

00:19:20,780 --> 00:19:28,910
architectures and there's improvements

00:19:25,670 --> 00:19:35,680
to all the core components there as well

00:19:28,910 --> 00:19:40,190
and it introduces an optional crypto

00:19:35,680 --> 00:19:42,320
Hardware crypto ability Kryptos not

00:19:40,190 --> 00:19:44,809
mandatory part the architecture because

00:19:42,320 --> 00:19:48,379
some partners don't really care about

00:19:44,809 --> 00:19:51,409
the crypto sign others do and crypto has

00:19:48,379 --> 00:20:00,049
its use cases as well so it's not a

00:19:51,409 --> 00:20:03,679
general purpose tool to be used are the

00:20:00,049 --> 00:20:10,460
old parts mandatory part of arm know

00:20:03,679 --> 00:20:14,440
Giselle has to an extent gone now it is

00:20:10,460 --> 00:20:18,740
very much deprecated there are certain

00:20:14,440 --> 00:20:20,809
use cases we're working with the openjdk

00:20:18,740 --> 00:20:25,909
project to ensure the java there's a

00:20:20,809 --> 00:20:33,460
very good java stack so it's it's

00:20:25,909 --> 00:20:33,460
evolved if you will please

00:20:44,350 --> 00:20:52,520
so how how long will the 32-bit

00:20:48,669 --> 00:20:57,770
components arch 32 remain within the RBA

00:20:52,520 --> 00:21:03,289
architecture I think it'll be around for

00:20:57,770 --> 00:21:07,610
quite some time I really couldn't say

00:21:03,289 --> 00:21:11,870
for certain but those use cases there's

00:21:07,610 --> 00:21:16,640
partners that want it and as with most

00:21:11,870 --> 00:21:18,230
companies customer's always right so you

00:21:16,640 --> 00:21:20,860
know we're here to make money so if

00:21:18,230 --> 00:21:24,530
somebody wants to pay us to do something

00:21:20,860 --> 00:21:28,700
if it's reasonable we'll do it I mean we

00:21:24,530 --> 00:21:32,600
expect arm v7 to remain for quite some

00:21:28,700 --> 00:21:40,280
time I mean we're still selling arm be

00:21:32,600 --> 00:21:44,870
five licenses so and that's pretty old I

00:21:40,280 --> 00:21:49,309
mean that the CPUs that are we used in

00:21:44,870 --> 00:21:54,049
nokia 3110 xin in the early 90s still

00:21:49,309 --> 00:21:59,470
still sell licenses for them you know

00:21:54,049 --> 00:22:02,470
it's it's it's a minimum of a 10-year

00:21:59,470 --> 00:22:02,470
cycle

00:22:05,429 --> 00:22:12,149
is there a benefit well some some

00:22:08,799 --> 00:22:16,899
partners are only going to be deploying

00:22:12,149 --> 00:22:20,940
64bit only there will be no 32-bit

00:22:16,899 --> 00:22:24,399
support in there cpus that they sell

00:22:20,940 --> 00:22:28,440
chips you don't have cpu models yet that

00:22:24,399 --> 00:22:28,440
have 64 bit only right do you

00:22:33,300 --> 00:22:40,390
do we have any models available now I

00:22:36,160 --> 00:22:43,360
mean I mean we have 57 yeah well that

00:22:40,390 --> 00:22:47,170
the 53 57 you can choose what workload

00:22:43,360 --> 00:22:51,400
you want some of our partners so the aea

00:22:47,170 --> 00:22:53,740
53 and a 57 is an arm design some of our

00:22:51,400 --> 00:22:56,430
partners have taken licenses that enable

00:22:53,740 --> 00:22:59,740
them to fine-tune the microarchitecture

00:22:56,430 --> 00:23:04,110
so you know in the exists around like

00:22:59,740 --> 00:23:08,710
Apple well exactly I mean Apple take

00:23:04,110 --> 00:23:11,680
license from us and the license that

00:23:08,710 --> 00:23:14,400
they've taken enables them to do

00:23:11,680 --> 00:23:17,320
modifications to microarchitecture

00:23:14,400 --> 00:23:24,160
modifications you're saying that chip is

00:23:17,320 --> 00:23:29,040
based on on the standard arm 53 or 57

00:23:24,160 --> 00:23:32,980
design or is it done there there are

00:23:29,040 --> 00:23:35,230
elements that are used at so good with

00:23:32,980 --> 00:23:38,080
the arm architects there so the a 53 and

00:23:35,230 --> 00:23:43,350
a 57 applies to the microarchitecture of

00:23:38,080 --> 00:23:43,350
of our design the Apple a7 is a

00:23:44,430 --> 00:23:50,290
replacement for the a 53 and a 57 so

00:23:46,900 --> 00:23:56,080
it's not necessarily based on the a 53

00:23:50,290 --> 00:24:01,420
design or 57 zone but there are elements

00:23:56,080 --> 00:24:04,710
and base layers that work so you know

00:24:01,420 --> 00:24:07,830
some of the toolchain requirements and

00:24:04,710 --> 00:24:13,750
components I mean Apple of recently

00:24:07,830 --> 00:24:21,280
pushed their llvm back-end upstream so

00:24:13,750 --> 00:24:24,730
it's it's not a simple that the arm

00:24:21,280 --> 00:24:26,020
licensing is not a simple thing to turn

00:24:24,730 --> 00:24:28,300
wrap your head around you really do need

00:24:26,020 --> 00:24:31,030
to spend a lot of time and understanding

00:24:28,300 --> 00:24:40,240
the little nuances between how partners

00:24:31,030 --> 00:24:43,090
are enabled so yeah so with arm v8 we're

00:24:40,240 --> 00:24:45,920
taking our heritage and it's designed

00:24:43,090 --> 00:24:50,720
for efficiency so

00:24:45,920 --> 00:24:55,910
the 83 in a 57 designs are fully

00:24:50,720 --> 00:24:59,330
compatible with existing arm v7 code so

00:24:55,910 --> 00:25:03,640
you could just take your filesystem

00:24:59,330 --> 00:25:03,640
32-bit filesystem drop it on off you go

00:25:04,360 --> 00:25:18,520
we are targeting emerging software

00:25:08,480 --> 00:25:24,590
trends with the VA architecture the a

00:25:18,520 --> 00:25:27,710
art 64 is a completely clean instruction

00:25:24,590 --> 00:25:31,610
set it was built from the ground up we

00:25:27,710 --> 00:25:36,500
didn't take 32-bit try and extend it it

00:25:31,610 --> 00:25:44,420
was designed from the start as 64-bit so

00:25:36,500 --> 00:25:49,000
as clean as code can be it's very modern

00:25:44,420 --> 00:25:49,000
we've tried to look at how to improve

00:25:49,060 --> 00:26:04,000
aspects and designed to maximize

00:25:55,390 --> 00:26:06,590
existing hardware and processes sorry no

00:26:04,000 --> 00:26:12,140
ideal for concurrent programming I mean

00:26:06,590 --> 00:26:15,650
what is it in a arts 22 that makes it

00:26:12,140 --> 00:26:19,190
any difference in the current cpu or so

00:26:15,650 --> 00:26:22,970
hey arts 32 is is an evolution of v70

00:26:19,190 --> 00:26:29,570
it's kind of V 7.1 if you will so it's

00:26:22,970 --> 00:26:36,980
taken how it's used and refined it

00:26:29,570 --> 00:26:39,320
slightly so it's you can do concurrent

00:26:36,980 --> 00:26:43,160
tasks now that you weren't necessarily

00:26:39,320 --> 00:26:48,860
able to do previously under the existing

00:26:43,160 --> 00:26:51,020
architecture so I've touched on linaro

00:26:48,860 --> 00:26:55,040
as a key partner and they are very much

00:26:51,020 --> 00:26:58,490
so it's made up of our ecosystem

00:26:55,040 --> 00:27:01,669
partners not just silicon vendors

00:26:58,490 --> 00:27:04,409
as you can see primarily within the club

00:27:01,669 --> 00:27:06,870
area if you look in the group area

00:27:04,409 --> 00:27:10,230
you've got software vendors and

00:27:06,870 --> 00:27:18,350
canonical Red Hat you also have people

00:27:10,230 --> 00:27:22,259
like an ear you've got OMS HP knock NSN

00:27:18,350 --> 00:27:27,179
there's in the networking space you've

00:27:22,259 --> 00:27:33,289
got Cisco as well and you've got Web

00:27:27,179 --> 00:27:35,940
Services Facebook etc and then we've got

00:27:33,289 --> 00:27:38,519
community members like IBM who provide

00:27:35,940 --> 00:27:40,580
duty one of the reasons they've been

00:27:38,519 --> 00:27:43,500
around for a long time they helped set

00:27:40,580 --> 00:27:46,279
linaro up and they regularly provide

00:27:43,500 --> 00:27:51,049
some advice and guidance and assistance

00:27:46,279 --> 00:27:54,419
so linaro it with all those members has

00:27:51,049 --> 00:27:57,120
created several groups and for the data

00:27:54,419 --> 00:27:59,759
center there's two key components two

00:27:57,120 --> 00:28:04,200
groups there there's the networking

00:27:59,759 --> 00:28:09,690
group known as LNG so it's focused on

00:28:04,200 --> 00:28:12,870
optimizing the network workloads forearm

00:28:09,690 --> 00:28:17,220
software-defined networking is now the

00:28:12,870 --> 00:28:22,129
the big thing for the enterprise they're

00:28:17,220 --> 00:28:26,429
looking at ways of optimizing sdn and

00:28:22,129 --> 00:28:29,000
it's comprised of a wide variety of

00:28:26,429 --> 00:28:33,750
partners there to ensure the maximum

00:28:29,000 --> 00:28:37,379
gain for everyone the other group that's

00:28:33,750 --> 00:28:40,009
important is the enterprise group it was

00:28:37,379 --> 00:28:44,429
the first sub group set up within linaro

00:28:40,009 --> 00:28:51,539
and it's called leg to go along with

00:28:44,429 --> 00:28:53,970
your arm and I thumb so it's like I say

00:28:51,539 --> 00:28:58,950
focused on the server workloads storage

00:28:53,970 --> 00:29:01,320
io aspects of how enterprises want to

00:28:58,950 --> 00:29:06,259
deploy servers with in a sense and

00:29:01,320 --> 00:29:10,649
looking at how we can make sure that

00:29:06,259 --> 00:29:13,250
partners platforms work on those

00:29:10,649 --> 00:29:13,250
specific work

00:29:15,779 --> 00:29:25,840
so there's lots of new hardware coming

00:29:20,259 --> 00:29:31,870
out HP have announced hardware so is

00:29:25,840 --> 00:29:34,179
Dell mitac there's lots of others that

00:29:31,870 --> 00:29:38,669
have announced what they're going to be

00:29:34,179 --> 00:29:41,830
doing AMD and applied micro with their

00:29:38,669 --> 00:29:46,169
Seattle and opteron Seattle opteron

00:29:41,830 --> 00:29:57,759
processors as well as applied micros

00:29:46,169 --> 00:30:02,230
x-gene family so partners are

00:29:57,759 --> 00:30:04,809
participating to make the most of how

00:30:02,230 --> 00:30:06,970
things go as I mentioned earlier one

00:30:04,809 --> 00:30:09,879
size doesn't necessarily fit all you

00:30:06,970 --> 00:30:16,659
don't necessarily need a big box to do a

00:30:09,879 --> 00:30:22,320
small load so with the enterprise you've

00:30:16,659 --> 00:30:25,720
got servers you've got network devices

00:30:22,320 --> 00:30:27,460
in the networking spaces a lot of

00:30:25,720 --> 00:30:31,690
companies now moving from having

00:30:27,460 --> 00:30:35,620
dedicated embedded platforms to leave

00:30:31,690 --> 00:30:37,059
urging software and commodity hardware

00:30:35,620 --> 00:30:46,720
to provide the same sort of

00:30:37,059 --> 00:30:50,409
functionality but at lower costs so with

00:30:46,720 --> 00:30:55,179
our partners depending on which area

00:30:50,409 --> 00:30:57,450
focus there in we can marry up their

00:30:55,179 --> 00:30:57,450
needs

00:30:59,200 --> 00:31:07,929
so looking at optimizing the workload

00:31:02,860 --> 00:31:14,169
solutions will significantly generate

00:31:07,929 --> 00:31:17,200
better TCO total cost of ownership now

00:31:14,169 --> 00:31:19,289
is quite crucial it always has been to

00:31:17,200 --> 00:31:22,210
an extent but there are now more

00:31:19,289 --> 00:31:24,100
constraints on your TCO before it was

00:31:22,210 --> 00:31:27,789
just a matter of how much does it cost

00:31:24,100 --> 00:31:29,049
over three years for the hardware now

00:31:27,789 --> 00:31:31,809
it's how much does it cost over three

00:31:29,049 --> 00:31:33,490
years and how much power and cooling am

00:31:31,809 --> 00:31:41,649
I going to be using over those three

00:31:33,490 --> 00:31:43,380
years directly affect the TCO and as the

00:31:41,649 --> 00:31:48,190
internet is always evolving this new

00:31:43,380 --> 00:31:50,230
features being implemented this new use

00:31:48,190 --> 00:31:53,590
cases coming out the workloads are

00:31:50,230 --> 00:31:55,990
changing so we're trying to be as agile

00:31:53,590 --> 00:32:02,169
as possible to be able to adapt to those

00:31:55,990 --> 00:32:06,909
workloads and ultimately you know people

00:32:02,169 --> 00:32:14,190
looking for as much value as possible

00:32:06,909 --> 00:32:14,190
from their investment there's a few

00:32:14,850 --> 00:32:20,019
partners that have managed to get units

00:32:17,169 --> 00:32:22,690
out now and there's gonna be more and

00:32:20,019 --> 00:32:29,220
more over time it's not going to be a

00:32:22,690 --> 00:32:29,220
stagnant slow drip it'll soon ramp up

00:32:29,309 --> 00:32:37,450
and part of the advantage of arms

00:32:35,200 --> 00:32:41,470
business model with its licensing etc is

00:32:37,450 --> 00:32:44,860
that it enables a much higher rate of

00:32:41,470 --> 00:32:49,179
innovation and differentiation and it's

00:32:44,860 --> 00:32:55,529
much easier for people to take a pat

00:32:49,179 --> 00:32:55,529
form and then provide value add on top

00:32:58,050 --> 00:33:02,940
so as an example to that you've got

00:33:00,390 --> 00:33:06,210
partners that are very strong in DSP

00:33:02,940 --> 00:33:09,840
technology so they need something to

00:33:06,210 --> 00:33:13,530
bring up the DSPs and then full video

00:33:09,840 --> 00:33:16,710
streaming encoding etc instead of doing

00:33:13,530 --> 00:33:18,480
that workload on the cpu where it'd be

00:33:16,710 --> 00:33:24,750
much slower it's all done with Indy

00:33:18,480 --> 00:33:27,300
ESPYs so there are armed servers out

00:33:24,750 --> 00:33:31,190
there now there are on servers deployed

00:33:27,300 --> 00:33:31,190
in data centers at big companies

00:33:31,970 --> 00:33:40,110
currently based on arm v7 and arm v8

00:33:36,950 --> 00:33:42,750
systems are slowly starting to ramp up

00:33:40,110 --> 00:33:47,250
now there are some partners that have

00:33:42,750 --> 00:33:51,570
pushed development boards out to key

00:33:47,250 --> 00:34:02,100
partners as i mentioned AMD and applied

00:33:51,570 --> 00:34:03,750
micro so all those that you can see

00:34:02,100 --> 00:34:05,910
there are starting to ramp up now

00:34:03,750 --> 00:34:11,130
they're all involved in the enterprise

00:34:05,910 --> 00:34:14,880
already we've got OMS that are now

00:34:11,130 --> 00:34:19,470
partnering to create those systems for

00:34:14,880 --> 00:34:25,710
customers to buy and we've got software

00:34:19,470 --> 00:34:32,400
vendors who have platforms and products

00:34:25,710 --> 00:34:34,919
ready to run on most systems so we've

00:34:32,400 --> 00:34:38,760
got a few people in the marketplace now

00:34:34,919 --> 00:34:47,270
there are going to be more and it will

00:34:38,760 --> 00:34:53,000
grow over time HP was one of the early

00:34:47,270 --> 00:34:59,610
OEMs advertising that project moonshot

00:34:53,000 --> 00:35:03,990
with initially a 32-bit servers in them

00:34:59,610 --> 00:35:09,780
but they are also releasing 64-bit

00:35:03,990 --> 00:35:11,650
systems very soon they've done a lot of

00:35:09,780 --> 00:35:14,920
exploratory work

00:35:11,650 --> 00:35:19,000
the 32-bit platforms so they're starting

00:35:14,920 --> 00:35:21,160
to understand better how their end

00:35:19,000 --> 00:35:24,550
customers want to use their systems

00:35:21,160 --> 00:35:27,310
they're able to then work with the

00:35:24,550 --> 00:35:33,220
silicon vendors to ensure that they can

00:35:27,310 --> 00:35:36,340
provide maximum value AMD's got a lot of

00:35:33,220 --> 00:35:41,500
experience in the server space and there

00:35:36,340 --> 00:35:46,630
now they announced their seattle 64-bit

00:35:41,500 --> 00:35:54,520
processor up to 128 gig of ram per

00:35:46,630 --> 00:35:57,190
server it's much much more dense it can

00:35:54,520 --> 00:36:01,440
take up less space less power but

00:35:57,190 --> 00:36:10,020
provide the same productivity that

00:36:01,440 --> 00:36:13,840
customers need so it's all about

00:36:10,020 --> 00:36:20,610
integration ensuring that each component

00:36:13,840 --> 00:36:29,140
works well and that ultimately reduces

00:36:20,610 --> 00:36:35,680
TCO so an existing server you've got a

00:36:29,140 --> 00:36:41,400
single CPU socket a few dimm slots and a

00:36:35,680 --> 00:36:41,400
couple of SATA connections for storage

00:36:42,300 --> 00:36:49,120
what our partners are doing is

00:36:44,410 --> 00:36:52,240
condensing that large footprint into a

00:36:49,120 --> 00:36:53,530
small card much like a GPU card that you

00:36:52,240 --> 00:36:58,350
put in a desktop or something like that

00:36:53,530 --> 00:37:05,460
their its comparative in size really and

00:36:58,350 --> 00:37:11,130
those cards have quad-core optical CPUs

00:37:05,460 --> 00:37:16,600
they've got dimm slots they've got

00:37:11,130 --> 00:37:21,490
storage slots for that server or fiber

00:37:16,600 --> 00:37:23,620
connections for a san so we've taken

00:37:21,490 --> 00:37:29,140
that large

00:37:23,620 --> 00:37:34,540
footprint or very server squeeze it down

00:37:29,140 --> 00:37:38,680
into a car and then to get multiple

00:37:34,540 --> 00:37:42,700
servers they go on to a baseboard that's

00:37:38,680 --> 00:37:45,010
in the chassis so for you serve a unit

00:37:42,700 --> 00:37:50,740
that you may have a 16-core server in

00:37:45,010 --> 00:37:57,310
with 64 gig of ram and six discs now

00:37:50,740 --> 00:38:03,250
you've got 100 quad-core servers each

00:37:57,310 --> 00:38:06,400
with 8 16 128 gig of memory each with a

00:38:03,250 --> 00:38:09,400
single disc if you wish potentially two

00:38:06,400 --> 00:38:11,890
disks so you're managing to lower your

00:38:09,400 --> 00:38:15,430
footprint within the day Center so you

00:38:11,890 --> 00:38:19,330
don't need as much rent to pay for your

00:38:15,430 --> 00:38:22,870
datacenter you don't necessarily need as

00:38:19,330 --> 00:38:27,340
much power and cooling because the power

00:38:22,870 --> 00:38:33,340
draw from 0 service is lower it gives

00:38:27,340 --> 00:38:37,180
you that flexibility you can have one of

00:38:33,340 --> 00:38:41,100
the servers a single for you box in a

00:38:37,180 --> 00:38:44,920
satellite office quite easily in a small

00:38:41,100 --> 00:38:48,280
comms room you don't necessarily need to

00:38:44,920 --> 00:38:53,040
take in you know have a small data

00:38:48,280 --> 00:38:53,040
center for one of your regional offices

00:38:53,400 --> 00:39:00,970
the Open Compute Project has taken a

00:38:58,780 --> 00:39:04,060
slightly different approach they don't

00:39:00,970 --> 00:39:08,970
actually have any server chassis they

00:39:04,060 --> 00:39:11,590
have effectively shelves of servers and

00:39:08,970 --> 00:39:17,590
they've got a fail in place policy so

00:39:11,590 --> 00:39:24,310
they have one cabinet fully you know 42u

00:39:17,590 --> 00:39:29,620
rack with literally nothing but CPU

00:39:24,310 --> 00:39:32,970
modules and associate cooling with that

00:39:29,620 --> 00:39:36,940
their storage goes in a similar fashion

00:39:32,970 --> 00:39:40,540
but if a server fails one

00:39:36,940 --> 00:39:43,240
those smaller cards fails they don't

00:39:40,540 --> 00:39:46,770
care the workload gets moved to another

00:39:43,240 --> 00:39:49,329
one of those cards until there's a

00:39:46,770 --> 00:39:52,750
percentage of units that have failed

00:39:49,329 --> 00:39:57,220
then they just take one shelf out slot a

00:39:52,750 --> 00:39:59,530
new shelf it it's much quicker much

00:39:57,220 --> 00:40:05,310
easier for them and they're able to then

00:39:59,530 --> 00:40:10,000
design how those units of are created

00:40:05,310 --> 00:40:16,180
they can fine-tune workloads to ensure

00:40:10,000 --> 00:40:18,670
that they get the most out of it so as I

00:40:16,180 --> 00:40:24,900
said arm servers are in the enterprise

00:40:18,670 --> 00:40:28,089
already baidu is one of the largest

00:40:24,900 --> 00:40:30,550
users at present there cold storage for

00:40:28,089 --> 00:40:37,109
those that don't know baidu they're very

00:40:30,550 --> 00:40:39,880
similar to a chinese google type cloud

00:40:37,109 --> 00:40:42,250
service they've got a social network

00:40:39,880 --> 00:40:46,089
they've got search they've got you name

00:40:42,250 --> 00:40:48,839
it so for them arm servers fit their

00:40:46,089 --> 00:40:53,560
cold storage requirements perfectly

00:40:48,839 --> 00:40:58,800
mitac have announced their applied micro

00:40:53,560 --> 00:41:02,530
powered 64-bit server that's starting to

00:40:58,800 --> 00:41:06,880
roll out very soon and as I said HP

00:41:02,530 --> 00:41:11,440
moonshot is also ramping up HP is not

00:41:06,880 --> 00:41:16,290
the only big name OEM that's releasing

00:41:11,440 --> 00:41:19,180
though Dell their project copper has

00:41:16,290 --> 00:41:24,010
done a lot of proof concept work to

00:41:19,180 --> 00:41:25,720
ensure that they can get the best out of

00:41:24,010 --> 00:41:29,500
it they're not hedging all the bets on a

00:41:25,720 --> 00:41:32,829
specific architecture they work closely

00:41:29,500 --> 00:41:39,160
with their customers and their partners

00:41:32,829 --> 00:41:42,180
and it's starting to get bigger there's

00:41:39,160 --> 00:41:42,180
more traction going

00:41:42,720 --> 00:41:52,680
so in summary the workload in datacenter

00:41:46,950 --> 00:41:59,880
is shifting moving towards more

00:41:52,680 --> 00:42:02,730
optimized dedicated platforms almost the

00:41:59,880 --> 00:42:05,240
old UNIX way of do one thing and do one

00:42:02,730 --> 00:42:10,020
thing good rather than being

00:42:05,240 --> 00:42:12,840
general-purpose our partners who are

00:42:10,020 --> 00:42:16,260
producing the CPUs that are going into

00:42:12,840 --> 00:42:19,650
these units they understand how to

00:42:16,260 --> 00:42:22,890
integrate SOC s they've been many of

00:42:19,650 --> 00:42:24,330
them been doing it for a long time a lot

00:42:22,890 --> 00:42:29,570
of them have been in the mobile space

00:42:24,330 --> 00:42:29,570
and they're moving out and growing and

00:42:31,220 --> 00:42:40,140
we've released the first of many

00:42:34,760 --> 00:42:42,450
standard or standardization efforts to

00:42:40,140 --> 00:42:50,300
ensure that partners can get the most

00:42:42,450 --> 00:42:50,300
out of it SBS a is a key foundational

00:42:50,780 --> 00:42:57,170
specification but it's just cuz we've

00:42:54,180 --> 00:42:59,099
released that and our partners and

00:42:57,170 --> 00:43:00,960
appreciate it and enjoy it we're not

00:42:59,099 --> 00:43:01,980
going to sit back we are working on

00:43:00,960 --> 00:43:03,540
ensuring that there are more

00:43:01,980 --> 00:43:09,660
specifications and ensure that

00:43:03,540 --> 00:43:14,599
standardization is a key component so

00:43:09,660 --> 00:43:14,599
any questions

00:43:24,869 --> 00:43:33,900
a few if you don't mind I do mind I can

00:43:29,460 --> 00:43:39,059
stop I find it interesting one question

00:43:33,900 --> 00:43:41,130
I had was I mean the per CPU throughput

00:43:39,059 --> 00:43:44,089
of these is lower than what let's say

00:43:41,130 --> 00:43:46,319
the big elephant in the room Intel is is

00:43:44,089 --> 00:43:49,769
delivering to the customers right at the

00:43:46,319 --> 00:43:52,619
moment now there has been the company

00:43:49,769 --> 00:43:54,420
that had tried there's many small course

00:43:52,619 --> 00:43:57,930
thing before which is the illustrious

00:43:54,420 --> 00:43:59,369
son there me agarra I remember us one of

00:43:57,930 --> 00:44:02,730
their first attempts of death and there

00:43:59,369 --> 00:44:04,349
have been other chips I'm perhaps Oracle

00:44:02,730 --> 00:44:08,220
is even still shipping some of that

00:44:04,349 --> 00:44:13,680
stuff and I recall it not working very

00:44:08,220 --> 00:44:16,680
well your thoughts on that why did they

00:44:13,680 --> 00:44:20,670
fail and well why will you succeed you

00:44:16,680 --> 00:44:27,779
being armed here I think part of the

00:44:20,670 --> 00:44:33,359
issue was the software stack really we

00:44:27,779 --> 00:44:36,450
are working upstream standardized we're

00:44:33,359 --> 00:44:40,259
ensuring that we work with the wider

00:44:36,450 --> 00:44:47,089
ecosystem not just their small focus one

00:44:40,259 --> 00:44:47,089
because we we have no definitive

00:44:47,329 --> 00:44:55,049
expectations I mean we don't expect now

00:44:52,890 --> 00:44:59,460
that there's an service moving in we're

00:44:55,049 --> 00:45:03,690
going to take a 40-percent away from the

00:44:59,460 --> 00:45:11,609
entrenched incumbents it might happen be

00:45:03,690 --> 00:45:17,130
great if it did but we have no no way of

00:45:11,609 --> 00:45:18,329
guaranteeing that so working with the

00:45:17,130 --> 00:45:22,999
open source community with the Linux

00:45:18,329 --> 00:45:25,499
community you look at data center now

00:45:22,999 --> 00:45:28,829
Mike's workloads are running on Linux

00:45:25,499 --> 00:45:33,289
it's very much split between Windows and

00:45:28,829 --> 00:45:37,200
Linux the eunuch space is that

00:45:33,289 --> 00:45:39,170
shriveled-up so we want to make sure

00:45:37,200 --> 00:45:41,400
that

00:45:39,170 --> 00:45:47,910
customers have the widest choice

00:45:41,400 --> 00:45:52,620
possible so working with as many Linux

00:45:47,910 --> 00:45:56,820
vendors is feasible working then with

00:45:52,620 --> 00:46:01,560
those vendors partners to ensure that we

00:45:56,820 --> 00:46:06,450
have as broad a portfolio available for

00:46:01,560 --> 00:46:10,680
people to use and it's up to and because

00:46:06,450 --> 00:46:14,070
we don't build anything we'd let our

00:46:10,680 --> 00:46:18,500
partners come up with the innovative

00:46:14,070 --> 00:46:24,060
ideas they know their customer base best

00:46:18,500 --> 00:46:26,730
if they think that you know they've got

00:46:24,060 --> 00:46:31,290
customers that are using these big units

00:46:26,730 --> 00:46:36,900
for vdi solutions as an example they can

00:46:31,290 --> 00:46:41,940
tune their servers to be well suited to

00:46:36,900 --> 00:46:44,820
VDI they can pick specific segments that

00:46:41,940 --> 00:46:50,520
they want to dominate it's not for us to

00:46:44,820 --> 00:46:53,310
say how to do that we provide the

00:46:50,520 --> 00:46:54,960
foundation and let them then build the

00:46:53,310 --> 00:46:58,250
house on top of that and we work with

00:46:54,960 --> 00:47:00,420
the ecosystem to furnish that house I

00:46:58,250 --> 00:47:03,450
think it's quite a lot of confidence

00:47:00,420 --> 00:47:07,410
that AMD decided not to use one of the

00:47:03,450 --> 00:47:10,650
round Ziggler ish course but instead go

00:47:07,410 --> 00:47:14,550
for armed course but Intel does go for

00:47:10,650 --> 00:47:18,000
four atoms of course how do you see atom

00:47:14,550 --> 00:47:19,110
atom server systems that are well i'm

00:47:18,000 --> 00:47:21,540
not sure if they're already on the

00:47:19,110 --> 00:47:23,790
market but coming how do you see those

00:47:21,540 --> 00:47:29,610
stack up compared to what what you guys

00:47:23,790 --> 00:47:35,280
are doing I've not seen any benchmarks

00:47:29,610 --> 00:47:39,000
if you will of how things go but there's

00:47:35,280 --> 00:47:42,390
a use case there will be a use case full

00:47:39,000 --> 00:47:46,100
arm that won't fit Adam for whatever

00:47:42,390 --> 00:47:50,490
reason be it power consumption bit

00:47:46,100 --> 00:47:52,020
throughput whatever and vice versa there

00:47:50,490 --> 00:47:54,210
will be a use case where

00:47:52,020 --> 00:47:57,470
Adam actually fits better than our at

00:47:54,210 --> 00:48:03,930
the minute customers don't have a choice

00:47:57,470 --> 00:48:05,430
you go to a single CPU vendor and that's

00:48:03,930 --> 00:48:08,130
what you get sure you're going to get

00:48:05,430 --> 00:48:11,190
some units with it you know aim Diop

00:48:08,130 --> 00:48:15,660
Tron's in them but it's nowhere like it

00:48:11,190 --> 00:48:18,090
used to be you think of customers are

00:48:15,660 --> 00:48:20,180
desperate for choice at the moment in

00:48:18,090 --> 00:48:25,950
the server market I mean I can't judge

00:48:20,180 --> 00:48:32,460
certainly I would say OEMs would like

00:48:25,950 --> 00:48:36,840
choice they would like to choose what

00:48:32,460 --> 00:48:38,370
cpu goes in and I think they're feeling

00:48:36,840 --> 00:48:42,510
some pressure from their customers

00:48:38,370 --> 00:48:47,520
saying I bought this box and yes great

00:48:42,510 --> 00:48:48,990
but so underutilized no matter how I

00:48:47,520 --> 00:48:52,290
play without whether it be with

00:48:48,990 --> 00:48:55,490
virtualization or whatever else I'm just

00:48:52,290 --> 00:48:58,530
not using it to the best of its ability

00:48:55,490 --> 00:49:01,290
you think arm and get a higher

00:48:58,530 --> 00:49:02,880
utilization percentage at least the

00:49:01,290 --> 00:49:04,350
architecture the technology is your

00:49:02,880 --> 00:49:09,180
building higher than what the current

00:49:04,350 --> 00:49:12,480
servers can do I certainly think there's

00:49:09,180 --> 00:49:17,730
a possibility I mean anything's possible

00:49:12,480 --> 00:49:20,250
at the end of the day so what with us

00:49:17,730 --> 00:49:22,730
coming with technologies them sorry what

00:49:20,250 --> 00:49:25,980
is blocking the current technologies

00:49:22,730 --> 00:49:28,740
within the enterprise space 64-bit is

00:49:25,980 --> 00:49:30,240
the standard yeah but i don't mean the

00:49:28,740 --> 00:49:32,790
current armlet while there's blocking

00:49:30,240 --> 00:49:38,840
and the prize is still fully your lives

00:49:32,790 --> 00:49:41,970
intel boxes how they deployed workloads

00:49:38,840 --> 00:49:46,130
and changing how they deploy those

00:49:41,970 --> 00:49:48,870
workloads is potentially too disruptive

00:49:46,130 --> 00:49:53,520
they'll need to rethink of the point

00:49:48,870 --> 00:49:57,240
methods and configurations it it can be

00:49:53,520 --> 00:49:58,820
quite whereas it's exactly you know

00:49:57,240 --> 00:50:02,910
there's a lot of things that

00:49:58,820 --> 00:50:04,920
interconnect and just changing one won't

00:50:02,910 --> 00:50:10,260
necessarily

00:50:04,920 --> 00:50:13,860
bring any advantages so being able to

00:50:10,260 --> 00:50:20,690
provide solutions that are built for

00:50:13,860 --> 00:50:20,690
those workloads is a big advantage oh

00:50:25,070 --> 00:50:29,060
sorry stop that

00:50:35,020 --> 00:50:43,090
on the software side I'll be done what

00:50:41,170 --> 00:50:46,090
are the big obstacles at the moment

00:50:43,090 --> 00:50:50,500
because this we ate hardware is just

00:50:46,090 --> 00:50:53,170
coming slowly but are there big things

00:50:50,500 --> 00:50:55,960
to be done on the software side or are

00:50:53,170 --> 00:50:57,880
we just waiting for hardware and maybe

00:50:55,960 --> 00:50:59,620
the second part linaro has been

00:50:57,880 --> 00:51:03,610
announced in 2010 or something like that

00:50:59,620 --> 00:51:05,500
launched and how long will they be in

00:51:03,610 --> 00:51:07,360
need it or how long will they be around

00:51:05,500 --> 00:51:10,300
is that an effort that will continue

00:51:07,360 --> 00:51:13,720
forever or will there next year say ok

00:51:10,300 --> 00:51:18,280
we are done it works and the consortium

00:51:13,720 --> 00:51:20,620
will dissolve itself so it's once the

00:51:18,280 --> 00:51:26,050
first question of are we done with the

00:51:20,620 --> 00:51:31,440
software not there's lots to do things

00:51:26,050 --> 00:51:34,180
may be functional but in comparison to

00:51:31,440 --> 00:51:36,190
competing architectures they don't

00:51:34,180 --> 00:51:37,510
really perform too well so there's going

00:51:36,190 --> 00:51:43,030
to be a lot of optimization work

00:51:37,510 --> 00:51:47,560
required some of the works great but

00:51:43,030 --> 00:51:50,730
some needs a little bit of massaging and

00:51:47,560 --> 00:51:56,290
a little trimming of the fat if you will

00:51:50,730 --> 00:52:02,230
as for what big chunks are missing the

00:51:56,290 --> 00:52:06,030
java stack is almost there the OpenJDK

00:52:02,230 --> 00:52:08,920
Paul was done from the ground up so it's

00:52:06,030 --> 00:52:12,130
again much like leon VA architecture is

00:52:08,920 --> 00:52:15,940
very clean but it's taking a bit of time

00:52:12,130 --> 00:52:17,800
because it started from scratch and as

00:52:15,940 --> 00:52:21,280
with most software things if you don't

00:52:17,800 --> 00:52:26,670
have hardware to tested on it gets quite

00:52:21,280 --> 00:52:30,010
difficult using models emulation etc is

00:52:26,670 --> 00:52:32,530
good for functionality testing you can't

00:52:30,010 --> 00:52:36,100
really do any performance testing and

00:52:32,530 --> 00:52:38,860
suchlike unless it's on real hardware so

00:52:36,100 --> 00:52:40,450
there's as much as there are you know

00:52:38,860 --> 00:52:42,610
there are certain workloads like I say

00:52:40,450 --> 00:52:45,750
that work great you know some software

00:52:42,610 --> 00:52:48,330
stacks don't really need much tweaking

00:52:45,750 --> 00:52:53,900
but being engineers will forever to

00:52:48,330 --> 00:52:57,870
things will find new ways of doing x y&z

00:52:53,900 --> 00:52:59,220
so there is still quite a bit to go as

00:52:57,870 --> 00:53:01,890
for the second part with regards to the

00:52:59,220 --> 00:53:04,820
linaro will it be disbanded in the years

00:53:01,890 --> 00:53:09,930
time etc you know in a few years I

00:53:04,820 --> 00:53:16,560
really don't know it at the moment it's

00:53:09,930 --> 00:53:18,030
working well and they are helping in the

00:53:16,560 --> 00:53:23,490
ecosystem to do a lot of that

00:53:18,030 --> 00:53:25,140
optimization work fine tuning so it

00:53:23,490 --> 00:53:30,510
could be around for a long long long

00:53:25,140 --> 00:53:32,670
time who knows it depends and if

00:53:30,510 --> 00:53:37,620
partners feel that yeah it's all done

00:53:32,670 --> 00:53:40,380
now we don't need to do anymore that

00:53:37,620 --> 00:53:43,560
will be the deciding factor but at the

00:53:40,380 --> 00:53:54,690
minute I think there's still life in the

00:53:43,560 --> 00:53:56,760
old dog thank you so you said that what

00:53:54,690 --> 00:53:59,490
is currently holding back customers to

00:53:56,760 --> 00:54:02,610
utilize their Intel hardware is the way

00:53:59,490 --> 00:54:05,700
they deploy their solutions on top of it

00:54:02,610 --> 00:54:08,400
and that arm will be the solution to

00:54:05,700 --> 00:54:10,470
that if customers are nowadays hesitant

00:54:08,400 --> 00:54:13,590
to change the way they deploy their

00:54:10,470 --> 00:54:16,380
solutions today why would they want to

00:54:13,590 --> 00:54:18,870
change and deploy arm systems which are

00:54:16,380 --> 00:54:21,180
not only changing the way they deploy

00:54:18,870 --> 00:54:23,640
their workloads but also the way they

00:54:21,180 --> 00:54:26,070
deploy their servers there how we're

00:54:23,640 --> 00:54:27,360
even build up the data centers why would

00:54:26,070 --> 00:54:31,020
they want to do that if they are not

00:54:27,360 --> 00:54:34,680
willing to change a simple way of

00:54:31,020 --> 00:54:36,030
deploying their software it's not just a

00:54:34,680 --> 00:54:40,170
matter of how they deploy there's lots

00:54:36,030 --> 00:54:43,260
of factors that you have to take into

00:54:40,170 --> 00:54:46,340
account for utilization you know how do

00:54:43,260 --> 00:54:50,100
you get the most out of your hardware

00:54:46,340 --> 00:54:51,360
one the reasons why VDI start spring up

00:54:50,100 --> 00:54:54,600
was because you've got all these

00:54:51,360 --> 00:54:59,340
desktops that are sucking out power etc

00:54:54,600 --> 00:55:01,500
nobody really needs them all the time so

00:54:59,340 --> 00:55:04,920
you deploy vdr you can power up pad

00:55:01,500 --> 00:55:09,810
desktops you can expand contract you use

00:55:04,920 --> 00:55:12,810
sites almost at will so it it's not just

00:55:09,810 --> 00:55:14,760
that but you you are right there will be

00:55:12,810 --> 00:55:15,600
an element to take into account if

00:55:14,760 --> 00:55:18,750
they're going to move to a different

00:55:15,600 --> 00:55:22,230
architecture for their software stack

00:55:18,750 --> 00:55:25,830
etc that they may need to change but

00:55:22,230 --> 00:55:28,800
hopefully our partners can provide

00:55:25,830 --> 00:55:32,550
systems and solutions that are built in

00:55:28,800 --> 00:55:36,780
such waiver to get that workload on an

00:55:32,550 --> 00:55:40,980
arm server is much easier than having to

00:55:36,780 --> 00:55:43,670
fine tune your workload on an existing

00:55:40,980 --> 00:55:55,770
architecture to be able to maximize

00:55:43,670 --> 00:55:57,920
utilization ok any more questions thanks

00:55:55,770 --> 00:55:57,920

YouTube URL: https://www.youtube.com/watch?v=pwOtSq-Tt2w


