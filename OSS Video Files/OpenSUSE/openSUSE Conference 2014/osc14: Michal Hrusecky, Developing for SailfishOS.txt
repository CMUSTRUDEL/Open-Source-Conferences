Title: osc14: Michal Hrusecky, Developing for SailfishOS
Publication date: 2014-04-27
Playlist: openSUSE Conference 2014
Description: 
	Short demo showing how easy it is to start developing your own application for Jolla phone(s). Nothing deep nor complicated, just showing basic example of how to start.
Captions: 
	00:00:00,000 --> 00:00:10,710
so hi everybody thanks for coming if you

00:00:07,099 --> 00:00:14,000
saw my presentation yesterday this is

00:00:10,710 --> 00:00:16,320
one of the slides that I had there and

00:00:14,000 --> 00:00:19,050
this talk is going to be about

00:00:16,320 --> 00:00:23,400
developing applications for selfish for

00:00:19,050 --> 00:00:28,199
yola just a short interaction into the

00:00:23,400 --> 00:00:29,699
topic and I said yesterday that there

00:00:28,199 --> 00:00:32,850
are two options how to write

00:00:29,699 --> 00:00:37,350
applications for your one is native one

00:00:32,850 --> 00:00:41,489
using C++ and QT and 2 ml the other one

00:00:37,350 --> 00:00:43,680
is writing Android application so I'm

00:00:41,489 --> 00:00:45,770
not going to speak about Android we will

00:00:43,680 --> 00:00:48,899
take a look at how you can write

00:00:45,770 --> 00:00:54,030
application for you are the native way

00:00:48,899 --> 00:00:57,120
and my goal with this store gives I'll

00:00:54,030 --> 00:00:59,309
show you that it's not scary and it's

00:00:57,120 --> 00:01:03,239
easy and you should start playing with

00:00:59,309 --> 00:01:05,909
that so first thing that you need is

00:01:03,239 --> 00:01:13,280
download SDK from their website and

00:01:05,909 --> 00:01:20,880
install it once you get it sorry and

00:01:13,280 --> 00:01:28,400
first question how big is it it's

00:01:20,880 --> 00:01:32,460
actually quite big after installation I

00:01:28,400 --> 00:01:37,439
think it's something like two gigs 2.7

00:01:32,460 --> 00:01:42,079
or almost for the thing why it's so big

00:01:37,439 --> 00:01:47,520
is it actually contains at least two VMs

00:01:42,079 --> 00:01:49,829
as part of it once you install it the

00:01:47,520 --> 00:01:56,340
thing that you will need to run is QT

00:01:49,829 --> 00:01:59,969
creator just a question do you have you

00:01:56,340 --> 00:02:05,570
ever written something in QT qml in QT

00:01:59,969 --> 00:02:05,570
creator no so

00:02:06,250 --> 00:02:14,420
so new desktop environment for you great

00:02:10,090 --> 00:02:18,170
so it's some integrating development

00:02:14,420 --> 00:02:20,750
environment like many others and when we

00:02:18,170 --> 00:02:24,860
want to start new application I will

00:02:20,750 --> 00:02:28,390
just do file new project I will say that

00:02:24,860 --> 00:02:38,030
I want sailfish OS QT quick application

00:02:28,390 --> 00:02:40,610
and yeah write something then I will

00:02:38,030 --> 00:02:49,280
select the target that I want to want to

00:02:40,610 --> 00:02:54,739
use is it feasible and and I'm not sure

00:02:49,280 --> 00:03:00,580
how to make it bigger well there are two

00:02:54,739 --> 00:03:00,580
options one is arm v7 and other one is I

00:03:01,030 --> 00:03:10,519
486 the I 46 you need for debugging and

00:03:05,780 --> 00:03:12,799
for playing locally and I'm v7 you need

00:03:10,519 --> 00:03:15,739
for actually deploying the application

00:03:12,799 --> 00:03:20,720
for creating the final application so i

00:03:15,739 --> 00:03:24,890
select both some description i can edit

00:03:20,720 --> 00:03:28,010
to get or whatever finish and i have a

00:03:24,890 --> 00:03:30,680
basic project this thing is ready to be

00:03:28,010 --> 00:03:36,140
compiled and i will get sample

00:03:30,680 --> 00:03:39,230
application out of it there are several

00:03:36,140 --> 00:03:41,540
files that are interesting and you

00:03:39,230 --> 00:03:46,790
should probably take a look at there is

00:03:41,540 --> 00:03:52,329
a source directory with CPP file and i

00:03:46,790 --> 00:03:52,329
will try to make it bigger somehow

00:04:01,590 --> 00:04:10,430
now that's better right

00:04:05,240 --> 00:04:14,360
so in C++ file there is currently only

00:04:10,430 --> 00:04:18,350
one command that will basically create

00:04:14,360 --> 00:04:19,790
savage selfish application and the rest

00:04:18,350 --> 00:04:26,530
of the logic of the application is

00:04:19,790 --> 00:04:29,240
written in qml qml starts here in

00:04:26,530 --> 00:04:34,580
Greenville directory there is a one main

00:04:29,240 --> 00:04:36,650
file which says use QT quick and selfish

00:04:34,580 --> 00:04:41,540
silica which is which are the components

00:04:36,650 --> 00:04:44,420
that are used by sailfish OS then you

00:04:41,540 --> 00:04:46,490
have initial initial page that's the

00:04:44,420 --> 00:04:48,920
page that will show up when you run the

00:04:46,490 --> 00:04:52,700
application and then there is a cover

00:04:48,920 --> 00:04:55,190
page which is the page that shows up

00:04:52,700 --> 00:04:58,040
when your application is minimized if

00:04:55,190 --> 00:05:00,440
you don't provide cover page it will

00:04:58,040 --> 00:05:06,800
just show minimized version of your

00:05:00,440 --> 00:05:12,580
application and this is qml have you

00:05:06,800 --> 00:05:17,330
seen qml before all right yeah yesterday

00:05:12,580 --> 00:05:21,200
so qml is a way how to write you I

00:05:17,330 --> 00:05:25,730
applications in QT it's kinda more

00:05:21,200 --> 00:05:27,950
designer oriented because you don't need

00:05:25,730 --> 00:05:31,370
to write complicated code you don't need

00:05:27,950 --> 00:05:36,650
to allocate objects you don't need to do

00:05:31,370 --> 00:05:38,600
this stuff that we are kinda used to you

00:05:36,650 --> 00:05:45,050
don't meet any pointers and stuff like

00:05:38,600 --> 00:05:48,670
that it's it looks kinda like CSS or

00:05:45,050 --> 00:05:54,920
something so designers can really easily

00:05:48,670 --> 00:05:59,030
learn it and you can write whole UI

00:05:54,920 --> 00:06:01,370
using just qml and if you need some

00:05:59,030 --> 00:06:07,660
interaction between elements you can use

00:06:01,370 --> 00:06:10,700
javascript so if you have skilled our

00:06:07,660 --> 00:06:15,919
designer that is managing your website

00:06:10,700 --> 00:06:18,889
it's probably not a big deal to learn to

00:06:15,919 --> 00:06:24,650
teach him to do some basic UI

00:06:18,889 --> 00:06:29,539
in qml let's take a look at the actual

00:06:24,650 --> 00:06:33,349
page this selfish applications contains

00:06:29,539 --> 00:06:37,360
multiple pages usually pages one screen

00:06:33,349 --> 00:06:42,259
of the application it can have some ID

00:06:37,360 --> 00:06:44,960
which you can reference later if you for

00:06:42,259 --> 00:06:50,240
example have some variables locally or

00:06:44,960 --> 00:06:54,560
something and here we can see how

00:06:50,240 --> 00:06:59,180
actually the ue UI looks like here you

00:06:54,560 --> 00:07:03,020
can he's done here is a column and in

00:06:59,180 --> 00:07:05,900
the column you put several elements so

00:07:03,020 --> 00:07:10,460
you are making sure that they are below

00:07:05,900 --> 00:07:14,349
each other you can do rose and using

00:07:10,460 --> 00:07:19,120
these basic elements you can build or UI

00:07:14,349 --> 00:07:25,610
for more here when I click click on help

00:07:19,120 --> 00:07:29,229
there is a generic QT documentation and

00:07:25,610 --> 00:07:35,149
there is also selfish silica reference

00:07:29,229 --> 00:07:38,750
because QT quick is generic and it's

00:07:35,149 --> 00:07:41,210
used on desktop but you Allah has some

00:07:38,750 --> 00:07:44,719
of their own components that sometimes

00:07:41,210 --> 00:07:46,639
inherits from QT quick and it looks a

00:07:44,719 --> 00:07:49,849
little bit different and behaves little

00:07:46,639 --> 00:07:56,689
bit different accustomed to their mobile

00:07:49,849 --> 00:07:59,330
UI one of the design points of Allah is

00:07:56,689 --> 00:08:01,430
that most of the applications are

00:07:59,330 --> 00:08:06,520
transparent so you can see your

00:08:01,430 --> 00:08:10,789
background and you are not supposed to

00:08:06,520 --> 00:08:13,759
define actual colors if you are there's

00:08:10,789 --> 00:08:16,189
there are there's primary color and

00:08:13,759 --> 00:08:19,430
secondary coil and you should use you

00:08:16,189 --> 00:08:23,360
should reference these because when you

00:08:19,430 --> 00:08:25,550
actually create a team or set your

00:08:23,360 --> 00:08:27,469
background wallpaper selfish will

00:08:25,550 --> 00:08:30,129
automatically calculate what are the

00:08:27,469 --> 00:08:32,080
dominant colors in your background and

00:08:30,129 --> 00:08:33,760
create

00:08:32,080 --> 00:08:36,370
primary and secondary colors and

00:08:33,760 --> 00:08:42,910
highlight colors based on that so it

00:08:36,370 --> 00:08:46,450
will match the whole OS team so now we

00:08:42,910 --> 00:08:58,360
have some basic application now we

00:08:46,450 --> 00:09:03,520
switch to debug and to get application

00:08:58,360 --> 00:09:07,000
test it we I will start with stopping

00:09:03,520 --> 00:09:09,880
SDK because I didn't show it here the

00:09:07,000 --> 00:09:14,640
control buttons of both of your VMs that

00:09:09,880 --> 00:09:18,790
are installed with sdk first one is SDK

00:09:14,640 --> 00:09:25,810
itself that contains con compiler and

00:09:18,790 --> 00:09:29,410
also this button is kind of interface to

00:09:25,810 --> 00:09:33,360
that where you can check update and it

00:09:29,410 --> 00:09:40,750
also it can also verify your built rpms

00:09:33,360 --> 00:09:44,770
whether they are suitable for for App

00:09:40,750 --> 00:09:53,250
Store for official app store the other

00:09:44,770 --> 00:09:56,320
vm that i can start is actually emulator

00:09:53,250 --> 00:10:00,430
that's one thing that i showed yesterday

00:09:56,320 --> 00:10:06,150
on on my presentation it will run

00:10:00,430 --> 00:10:06,150
virtual machine with sailfish OS inside

00:10:07,740 --> 00:10:17,850
hopefully in few minutes not way it

00:10:12,040 --> 00:10:24,340
should be much faster yeah we are there

00:10:17,850 --> 00:10:29,140
so now I will just click on play and it

00:10:24,340 --> 00:10:33,210
should build my application I can see

00:10:29,140 --> 00:10:33,210
some compiler output

00:10:38,899 --> 00:10:46,899
and if everything goes well yeah it

00:10:45,019 --> 00:10:49,819
starts the application in the emulator

00:10:46,899 --> 00:10:56,449
now we can check your application play

00:10:49,819 --> 00:10:59,389
with it if we take a look at the source

00:10:56,449 --> 00:11:03,110
code you can see that there was page

00:10:59,389 --> 00:11:07,670
header which is you I template and below

00:11:03,110 --> 00:11:11,509
that was label hello sailors and we have

00:11:07,670 --> 00:11:16,100
both of them here more design element is

00:11:11,509 --> 00:11:18,769
that whole thing is clickable which

00:11:16,100 --> 00:11:23,740
means that you can drag it and there is

00:11:18,769 --> 00:11:28,850
pulldown menu with text show page 2 and

00:11:23,740 --> 00:11:34,399
when you click on the on this menu item

00:11:28,850 --> 00:11:39,800
it will push second page second qml page

00:11:34,399 --> 00:11:44,209
which we have here to the page stack so

00:11:39,800 --> 00:11:46,629
it will be on top so you will see the

00:11:44,209 --> 00:11:46,629
other page

00:11:49,560 --> 00:11:55,230
and we are on the other page because it

00:11:52,740 --> 00:11:57,779
was pushed on top of the page stack we

00:11:55,230 --> 00:12:00,529
still have the previous page on there so

00:11:57,779 --> 00:12:06,330
we can just go back with swipe gesture

00:12:00,529 --> 00:12:09,089
to the previous page and this is the

00:12:06,330 --> 00:12:15,510
simplest application that you can do

00:12:09,089 --> 00:12:21,180
well it's it's included I will just show

00:12:15,510 --> 00:12:24,600
that cover also does some stuff and code

00:12:21,180 --> 00:12:32,460
for the tower there are two actions that

00:12:24,600 --> 00:12:37,760
actually don't do anything so that's the

00:12:32,460 --> 00:12:42,180
little demo and i will show you some

00:12:37,760 --> 00:12:48,000
little bit bigger project my application

00:12:42,180 --> 00:12:51,870
that i wrote some time ago why is it a

00:12:48,000 --> 00:12:56,130
little bit more complicated is because i

00:12:51,870 --> 00:13:00,300
actually wrote some seek out inside c++

00:12:56,130 --> 00:13:04,380
and QT and i wanted to use this

00:13:00,300 --> 00:13:20,030
functionality that i wrote in c++ from

00:13:04,380 --> 00:13:20,030
the UI in qml so I created a object yeah

00:13:22,430 --> 00:13:29,240
I had to create object which is

00:13:24,820 --> 00:13:31,339
inheriting from Q object that's what I

00:13:29,240 --> 00:13:34,880
didn't light it much because if you want

00:13:31,339 --> 00:13:37,180
to pass pass something to qml layer you

00:13:34,880 --> 00:13:40,730
actually have to use cutie everywhere

00:13:37,180 --> 00:13:46,040
there is no way to pass just one

00:13:40,730 --> 00:13:52,959
function you have to put it into Q

00:13:46,040 --> 00:13:58,089
object and define some Q in vocab all

00:13:52,959 --> 00:14:05,180
functions on top of it so I created

00:13:58,089 --> 00:14:07,399
object PS or glass PS and then here at

00:14:05,180 --> 00:14:10,209
the end after defining all the methods

00:14:07,399 --> 00:14:15,860
that I actually wanted to use i

00:14:10,209 --> 00:14:19,839
registered new type with this convention

00:14:15,860 --> 00:14:24,350
this is this is the number this is some

00:14:19,839 --> 00:14:27,860
namespace and this is the object name

00:14:24,350 --> 00:14:32,900
and here i use the class that I used

00:14:27,860 --> 00:14:39,920
that I have in my header for defined the

00:14:32,900 --> 00:14:42,410
object and now in this qml files I from

00:14:39,920 --> 00:14:46,670
apart from importing selfie silica and

00:14:42,410 --> 00:14:49,220
QT quick I'm also importing my name

00:14:46,670 --> 00:14:52,070
space with the version that I specified

00:14:49,220 --> 00:14:55,660
and then I'm creating the instance of

00:14:52,070 --> 00:14:58,310
the object and I'm creating it in

00:14:55,660 --> 00:15:04,520
application window for various reasons

00:14:58,310 --> 00:15:10,520
and then I can reference it from

00:15:04,520 --> 00:15:13,220
somewhere else like here I specify

00:15:10,520 --> 00:15:19,490
initial page based on output of some

00:15:13,220 --> 00:15:22,700
function that I have or well static

00:15:19,490 --> 00:15:26,029
method of the object so I call the

00:15:22,700 --> 00:15:33,130
method and based on its output I just

00:15:26,029 --> 00:15:39,790
select the initial page similarly I can

00:15:33,130 --> 00:15:44,860
data to that I have in different project

00:15:39,790 --> 00:15:51,360
but in general the best way is to pass

00:15:44,860 --> 00:15:54,130
data as qvariant or peuvent list because

00:15:51,360 --> 00:15:57,970
yeah if you if you are using normal

00:15:54,130 --> 00:16:02,020
types then I had a really hard time to

00:15:57,970 --> 00:16:06,000
get them working in qml so basically I

00:16:02,020 --> 00:16:09,610
just get up and converted everything to

00:16:06,000 --> 00:16:13,930
Q very end when I was returning it to

00:16:09,610 --> 00:16:17,890
you i layer because you a liar can work

00:16:13,930 --> 00:16:20,380
with it quite well that's my personal

00:16:17,890 --> 00:16:24,460
experience maybe if you meet somebody

00:16:20,380 --> 00:16:28,030
who just qml more than half a year that

00:16:24,460 --> 00:16:32,910
I I started playing with it when I got

00:16:28,030 --> 00:16:38,950
my phone so I had to learn this stuff

00:16:32,910 --> 00:16:41,260
better yeah some GMO and cutie guys can

00:16:38,950 --> 00:16:47,100
help you with that the advantage of

00:16:41,260 --> 00:16:51,580
using this beauty qml stuff is that

00:16:47,100 --> 00:16:55,240
quite some KD applications already have

00:16:51,580 --> 00:16:59,980
it and as far as I know new KD will be

00:16:55,240 --> 00:17:02,560
written in qmo as well so porting

00:16:59,980 --> 00:17:03,850
shouldn't be that hard and actually

00:17:02,560 --> 00:17:09,550
there are some applications already

00:17:03,850 --> 00:17:10,959
parted yeah that's all i wanted to show

00:17:09,550 --> 00:17:12,870
in the beginning if you want to see

00:17:10,959 --> 00:17:16,319
something more or you have a questions

00:17:12,870 --> 00:17:16,319
start asking

00:17:20,000 --> 00:17:32,330
a question so I hope you can answer that

00:17:28,580 --> 00:17:35,030
a bit I just learned about the Android

00:17:32,330 --> 00:17:39,440
SDK like a couple of months ago I

00:17:35,030 --> 00:17:41,510
started I took a nice class and in the

00:17:39,440 --> 00:17:44,960
end we had a small project which was

00:17:41,510 --> 00:17:46,520
like right this virgin AB we actually

00:17:44,960 --> 00:17:50,900
got a skeleton and just had to fill in

00:17:46,520 --> 00:17:54,880
some stuff and it was us about media

00:17:50,900 --> 00:17:57,340
stuff like capturing audio and video and

00:17:54,880 --> 00:18:00,640
that was a really horrible thing

00:17:57,340 --> 00:18:03,980
actually all I remember I was doing was

00:18:00,640 --> 00:18:06,520
initializing objects and type casting

00:18:03,980 --> 00:18:09,170
and that was really quite annoying and

00:18:06,520 --> 00:18:12,410
if you read through the code it's it's

00:18:09,170 --> 00:18:15,410
always hard to actually follow what's

00:18:12,410 --> 00:18:18,080
really happening I mean just in the very

00:18:15,410 --> 00:18:20,990
end you know it should work somehow and

00:18:18,080 --> 00:18:23,510
in between yet these millions of objects

00:18:20,990 --> 00:18:30,080
which are working and inheriting from

00:18:23,510 --> 00:18:32,330
each other and whatever so my point is

00:18:30,080 --> 00:18:34,670
I'm looking more for a platform which

00:18:32,330 --> 00:18:39,740
doesn't have such a huge tree of

00:18:34,670 --> 00:18:43,280
inheritance how is dead and selfish well

00:18:39,740 --> 00:18:46,190
our parties as I said these selfish

00:18:43,280 --> 00:18:51,700
silica complaints but which are specific

00:18:46,190 --> 00:18:56,360
for this platform but they are inherited

00:18:51,700 --> 00:18:59,750
mostly from QT from QT quick so you can

00:18:56,360 --> 00:19:04,610
treat them as some of the Qt Quick

00:18:59,750 --> 00:19:06,710
object for what you want to write if you

00:19:04,610 --> 00:19:09,740
want to write your own objects to do

00:19:06,710 --> 00:19:11,950
something more complicated I saw that

00:19:09,740 --> 00:19:16,760
there is a option that you can actually

00:19:11,950 --> 00:19:19,700
ask the qml thingy to actually return

00:19:16,760 --> 00:19:22,130
you just part of the screen and you can

00:19:19,700 --> 00:19:25,040
access it directly we are open gia or

00:19:22,130 --> 00:19:30,130
something like that so if you want to

00:19:25,040 --> 00:19:33,680
avoid Oh qml you can do with just

00:19:30,130 --> 00:19:36,740
minimal amount of cream l but it's

00:19:33,680 --> 00:19:39,650
really what you want to do for you I

00:19:36,740 --> 00:19:42,620
application but it will be probably very

00:19:39,650 --> 00:19:46,070
useful for video staff games and stuff

00:19:42,620 --> 00:19:51,950
like that and they are working on or

00:19:46,070 --> 00:19:57,350
they have a plan to actually put sdl

00:19:51,950 --> 00:20:03,740
into the stack that is available at some

00:19:57,350 --> 00:20:13,370
point as an answer wait wait okay

00:20:03,740 --> 00:20:17,150
anything more so I don't know any C++ or

00:20:13,370 --> 00:20:19,430
any qml or any cutie it's a the docs

00:20:17,150 --> 00:20:21,740
sufficient for I guess you started a

00:20:19,430 --> 00:20:24,620
list from you knew C++ but not the rest

00:20:21,740 --> 00:20:26,330
of it is that right and was it easy to

00:20:24,620 --> 00:20:28,700
work cuz it'll last I say that's not

00:20:26,330 --> 00:20:30,850
very complicated but it's finding out

00:20:28,700 --> 00:20:34,760
which thing you actually needed to type

00:20:30,850 --> 00:20:39,980
each stage how hard was that to get

00:20:34,760 --> 00:20:43,280
started well I started from knowing C++

00:20:39,980 --> 00:20:45,880
and knowing qml just from few

00:20:43,280 --> 00:20:50,540
presentation i saw on some conferences

00:20:45,880 --> 00:20:53,480
and yeah it wasn't that hard to get

00:20:50,540 --> 00:20:58,100
started because basically well first

00:20:53,480 --> 00:21:03,020
application you get for free and that's

00:20:58,100 --> 00:21:11,750
just the simple start for SDK when I

00:21:03,020 --> 00:21:20,560
take a look at d help most of the

00:21:11,750 --> 00:21:20,560
objects has rain nice names like column

00:21:20,860 --> 00:21:28,230
button

00:21:22,620 --> 00:21:31,590
and stuff like that at least I 10 so you

00:21:28,230 --> 00:21:36,030
can guess what they do sometimes they're

00:21:31,590 --> 00:21:42,080
even yeah you can see some if you can

00:21:36,030 --> 00:21:45,630
see some examples of cold that help and

00:21:42,080 --> 00:21:50,520
there are already some open source

00:21:45,630 --> 00:21:52,770
applications available so what I did in

00:21:50,520 --> 00:21:55,650
the beginning was shamelessly reading

00:21:52,770 --> 00:22:03,110
other people's applications and learning

00:21:55,650 --> 00:22:07,490
how they did stuff so I can progress QT

00:22:03,110 --> 00:22:14,309
itself is really amazing documentation

00:22:07,490 --> 00:22:19,820
if you well I tried doing some stuff

00:22:14,309 --> 00:22:19,820
when I was in high school University and

00:22:20,510 --> 00:22:29,550
the best documentation I ever seen was

00:22:23,820 --> 00:22:32,429
the beauty one so they have all objects

00:22:29,550 --> 00:22:35,450
on one web page you can just click they

00:22:32,429 --> 00:22:38,130
have every metal documented they have

00:22:35,450 --> 00:22:39,900
examples they have tutorials they have

00:22:38,130 --> 00:22:45,480
everything there's plenty of

00:22:39,900 --> 00:22:51,300
documentation for Cutie and fear for c++

00:22:45,480 --> 00:22:59,790
part while C++ is not easy language I

00:22:51,300 --> 00:23:08,700
would say but it's easier than see yeah

00:22:59,790 --> 00:23:12,450
so if you so yeah well you can treat it

00:23:08,700 --> 00:23:15,440
mostly as a see if you know Cee and just

00:23:12,450 --> 00:23:18,300
create objects with static methods and

00:23:15,440 --> 00:23:19,950
that's what I did because I had the

00:23:18,300 --> 00:23:22,470
simple application and I didn't want it

00:23:19,950 --> 00:23:25,230
to play with object so i just created a

00:23:22,470 --> 00:23:27,920
bunch of static methods and screw up

00:23:25,230 --> 00:23:27,920
with the objects

00:23:29,520 --> 00:23:38,250
yeah so from this point of view it

00:23:32,400 --> 00:23:42,870
wasn't pretty hard to start and there

00:23:38,250 --> 00:23:44,670
there is IRC channel and Marian placed

00:23:42,870 --> 00:23:50,070
where you can ask when you run into

00:23:44,670 --> 00:23:52,860
Davos but mostly google and

00:23:50,070 --> 00:24:02,640
documentation helped me before I had to

00:23:52,860 --> 00:24:04,770
ask people and how does the bit so this

00:24:02,640 --> 00:24:08,130
selfish silica thing is the proprietary

00:24:04,770 --> 00:24:10,020
chunk so do you just work on the stable

00:24:08,130 --> 00:24:11,550
release basically and you've got some

00:24:10,020 --> 00:24:14,850
binaries for that or do they keep

00:24:11,550 --> 00:24:21,180
updating them in some unstable current

00:24:14,850 --> 00:24:22,350
version of mayor that is the kind of you

00:24:21,180 --> 00:24:25,320
know if you're trying to keep up with

00:24:22,350 --> 00:24:29,640
latest how do they keep releasing new

00:24:25,320 --> 00:24:33,650
versions of this how does it work this

00:24:29,640 --> 00:24:38,190
is the least yeah that's the closed bit

00:24:33,650 --> 00:24:42,750
selfish silica and they promised stable

00:24:38,190 --> 00:24:44,610
API stable ABI that's that's one thing

00:24:42,750 --> 00:24:48,000
that doesn't change between releases

00:24:44,610 --> 00:24:51,420
some of some of the elements behave a

00:24:48,000 --> 00:24:53,310
little bit differently at some point in

00:24:51,420 --> 00:24:55,980
their release they made something

00:24:53,310 --> 00:24:58,890
instead of two pixels three pixels or

00:24:55,980 --> 00:25:02,210
something like that instead of yeah it

00:24:58,890 --> 00:25:04,820
loads a little bit differently and

00:25:02,210 --> 00:25:08,940
displayed a little bit differently but

00:25:04,820 --> 00:25:12,200
from programmers point of view it stayed

00:25:08,940 --> 00:25:14,910
the same everything still worked and

00:25:12,200 --> 00:25:19,320
that's one of the reason why they are

00:25:14,910 --> 00:25:22,650
not allowing most of the library scene

00:25:19,320 --> 00:25:27,470
because they commit they are committed

00:25:22,650 --> 00:25:27,470
to providing stable API and stable ABI

00:25:27,500 --> 00:25:34,470
but there was some project I saw

00:25:31,650 --> 00:25:39,420
somewhere on github that provided

00:25:34,470 --> 00:25:42,790
abstraction over this part and made it

00:25:39,420 --> 00:25:48,970
possible to write application for both

00:25:42,790 --> 00:25:51,160
sailfish and migra I believe but I

00:25:48,970 --> 00:25:53,050
haven't tried it I just saw that they

00:25:51,160 --> 00:25:57,370
are working on some abstraction library

00:25:53,050 --> 00:26:02,770
to basically put on top of the selfish

00:25:57,370 --> 00:26:05,110
silica so you can write more generic

00:26:02,770 --> 00:26:10,420
world that will then translate to the

00:26:05,110 --> 00:26:14,970
native UI but yeah I just saw it in some

00:26:10,420 --> 00:26:24,330
Google results I don't know more about

00:26:14,970 --> 00:26:26,860
so anything else so has anyone tried

00:26:24,330 --> 00:26:28,720
just using this platform without the

00:26:26,860 --> 00:26:30,580
silica stuff so then you'd get rid of a

00:26:28,720 --> 00:26:32,230
non-free part you won't get such a nice

00:26:30,580 --> 00:26:36,940
interface but you still get an interface

00:26:32,230 --> 00:26:42,870
presumably well if you draw by silica

00:26:36,940 --> 00:26:46,150
then you will be basically back to Nemo

00:26:42,870 --> 00:26:49,780
so you can you can just install Nemo you

00:26:46,150 --> 00:26:53,860
don't need to run this stuff I haven't

00:26:49,780 --> 00:27:00,250
tried personally I just saw me more on

00:26:53,860 --> 00:27:03,220
my friends and 900 or whatever he had so

00:27:00,250 --> 00:27:06,460
yeah they have some actually some of

00:27:03,220 --> 00:27:10,860
these some of theirs application it's

00:27:06,460 --> 00:27:15,280
possible to compile and run on selfish

00:27:10,860 --> 00:27:17,830
quite without much effort so it's

00:27:15,280 --> 00:27:20,980
possible to mix those platform a little

00:27:17,830 --> 00:27:24,280
bit in general I haven't tried to

00:27:20,980 --> 00:27:29,050
replace it yet but should shouldn't be

00:27:24,280 --> 00:27:31,900
your problem they are using mostly the

00:27:29,050 --> 00:27:36,280
same stuff underneath so you should be

00:27:31,900 --> 00:27:40,380
able to replace the component but you

00:27:36,280 --> 00:27:42,820
might lose settings and stuff like that

00:27:40,380 --> 00:27:47,340
some basic application that you might

00:27:42,820 --> 00:27:47,340
not want to use want to lose

00:27:47,600 --> 00:27:56,190
okay so I know you also have yo la phone

00:27:51,800 --> 00:27:59,550
so how easy is it to actually get the

00:27:56,190 --> 00:28:01,980
upon a real device I mean from Android I

00:27:59,550 --> 00:28:04,320
know the adb the Android debug bridge I

00:28:01,980 --> 00:28:06,660
can just easily push a package there and

00:28:04,320 --> 00:28:08,400
solve it and it immediately runs and I

00:28:06,660 --> 00:28:12,900
get the debug interface and everything

00:28:08,400 --> 00:28:20,100
can you also do that there is an option

00:28:12,900 --> 00:28:34,740
to do it directly from this SDK and in

00:28:20,100 --> 00:28:41,730
case of a DB and instead of a DB is I

00:28:34,740 --> 00:28:45,410
have ssh so this is my you are connected

00:28:41,730 --> 00:28:45,410
via USB cable

00:28:53,400 --> 00:29:04,860
so you would did not my notebook and I

00:29:00,720 --> 00:29:07,210
admit that I had some troubles with

00:29:04,860 --> 00:29:10,150
uploading it directly but basically

00:29:07,210 --> 00:29:14,710
mostly i'm too lazy to connect it via

00:29:10,150 --> 00:29:17,790
cable so I just left my somewhere in my

00:29:14,710 --> 00:29:20,440
flat and when I want to deploy

00:29:17,790 --> 00:29:23,650
application on the real device I just

00:29:20,440 --> 00:29:30,990
use SCP and zipper from command line

00:29:23,650 --> 00:29:30,990
remotely we have Wi-Fi but we can try

00:29:32,070 --> 00:29:38,100
deploy it please

00:29:41,330 --> 00:29:44,680
let's see what happened

00:30:11,500 --> 00:30:19,140
it's one thing that I haven't prepared

00:30:13,690 --> 00:30:23,590
and tested so that might not work and

00:30:19,140 --> 00:30:27,340
after rooting mile my device I also

00:30:23,590 --> 00:30:30,790
victim at the modification like changing

00:30:27,340 --> 00:30:33,820
my passwords SSH keys and stuff like

00:30:30,790 --> 00:30:39,030
that so i might broke the demon that

00:30:33,820 --> 00:30:43,950
does that and looks like i might did it

00:30:39,030 --> 00:30:43,950
because i don't see anything anywhere oh

00:30:44,430 --> 00:30:50,590
it installed somewhere well i would have

00:30:48,730 --> 00:30:53,920
to configure it but it's possible i

00:30:50,590 --> 00:30:55,720
would have to take a deeper look maybe

00:30:53,920 --> 00:31:04,210
there is something to configure maybe I

00:30:55,720 --> 00:31:08,280
broke something but yeah a ssh is always

00:31:04,210 --> 00:31:12,930
an option you can ssh to your device and

00:31:08,280 --> 00:31:12,930
try to try running it from there

00:31:20,070 --> 00:31:26,399
and it actually when you run the

00:31:24,610 --> 00:31:31,240
application will connect to the local

00:31:26,399 --> 00:31:34,529
violent server on that device so you

00:31:31,240 --> 00:31:40,419
will see the output of the application

00:31:34,529 --> 00:31:44,590
while it runs in graphical mode that's

00:31:40,419 --> 00:31:46,840
now nice to be back well when you run

00:31:44,590 --> 00:31:48,669
the graphical application over ssh it

00:31:46,840 --> 00:31:52,210
will connect to the valent on the device

00:31:48,669 --> 00:31:55,330
and you will see the output of the

00:31:52,210 --> 00:31:57,639
application over the SSH but the

00:31:55,330 --> 00:32:08,710
graphical interface will run on the

00:31:57,639 --> 00:32:11,139
device itself so that might help I told

00:32:08,710 --> 00:32:13,649
you I would ask questions this one is a

00:32:11,139 --> 00:32:16,240
bit more about the marketing stuff so

00:32:13,649 --> 00:32:18,850
for now I just know there is a yola

00:32:16,240 --> 00:32:22,029
phone like this and I know there is one

00:32:18,850 --> 00:32:28,210
with maybe other colors are they also

00:32:22,029 --> 00:32:37,389
planning on pet devices like larger

00:32:28,210 --> 00:32:39,309
devices I don't know I know that they

00:32:37,389 --> 00:32:42,820
are trying to port it to the other cell

00:32:39,309 --> 00:32:46,269
phones but I haven't seen anything about

00:32:42,820 --> 00:32:52,500
tablets yet maybe they planned something

00:32:46,269 --> 00:32:57,100
maybe they're not I don't know so

00:32:52,500 --> 00:32:59,080
anymore so thank you for attention and I

00:32:57,100 --> 00:33:04,320
hope that you liked it and you will try

00:32:59,080 --> 00:33:04,320

YouTube URL: https://www.youtube.com/watch?v=fKi-qhqbATA


