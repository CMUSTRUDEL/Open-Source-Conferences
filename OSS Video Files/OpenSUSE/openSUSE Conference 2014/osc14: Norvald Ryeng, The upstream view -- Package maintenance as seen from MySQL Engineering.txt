Title: osc14: Norvald Ryeng, The upstream view -- Package maintenance as seen from MySQL Engineering
Publication date: 2014-04-27
Playlist: openSUSE Conference 2014
Description: 
	MySQL is the world's most popular open source DBMS, with a large user
base on Linux, Windows, OS X, FreeBSD, Solaris, and others. At Oracle
we work with package maintainers in several Linux distros to deliver
high quality packages both in the distros and in our own repositories.

This talk focuses on how it is to be a fairly large project upstream
of several Linux distros. This includes handling differences between
distros, request for new functionality in stable releases, etc.
Captions: 
	00:00:00,000 --> 00:00:06,600
nirvana I'm working with Oracle as a

00:00:03,000 --> 00:00:10,290
software engineer on MySQL I work on the

00:00:06,600 --> 00:00:15,269
optimizer team so my job is really to

00:00:10,290 --> 00:00:19,529
work on query optimization and execution

00:00:15,269 --> 00:00:25,230
I usually work on GIS if you notice we

00:00:19,529 --> 00:00:29,070
had a lab release technology preview out

00:00:25,230 --> 00:00:32,160
this is start of a prolific so are you

00:00:29,070 --> 00:00:36,380
excited about that but in addition to

00:00:32,160 --> 00:00:39,350
the work I do with the advisor I also

00:00:36,380 --> 00:00:41,969
i'm also the the contact point for

00:00:39,350 --> 00:00:46,739
package maintainer xin various linux

00:00:41,969 --> 00:00:48,180
distros so linux distro packs containers

00:00:46,739 --> 00:00:51,719
have a direct line into mysql

00:00:48,180 --> 00:00:54,110
engineering through me so if there are

00:00:51,719 --> 00:00:58,469
any technical questions so stuff they

00:00:54,110 --> 00:01:02,640
want to ask they go to me and we have

00:00:58,469 --> 00:01:04,170
direct line into the engineering part so

00:01:02,640 --> 00:01:09,420
that's what I'm going to talk about

00:01:04,170 --> 00:01:12,060
today how we view the downstream linux

00:01:09,420 --> 00:01:15,240
distros and how these cooperation works

00:01:12,060 --> 00:01:18,570
and what we have done what we can do all

00:01:15,240 --> 00:01:20,790
that so i'll have to show this i'm going

00:01:18,570 --> 00:01:23,729
to talk about things we want to do

00:01:20,790 --> 00:01:25,350
things we might do so don't enter any

00:01:23,729 --> 00:01:29,880
sales contract based on what i say today

00:01:25,350 --> 00:01:32,880
but it's kind of what we wanted so i'll

00:01:29,880 --> 00:01:35,909
start by explaining what we do about

00:01:32,880 --> 00:01:38,400
mysql at oracle we had my school for

00:01:35,909 --> 00:01:41,040
four years in oracle now i'll talk about

00:01:38,400 --> 00:01:43,409
our development process how we handle

00:01:41,040 --> 00:01:47,790
what are called disco bugs as bugs from

00:01:43,409 --> 00:01:49,610
from a package or from packaging i'll

00:01:47,790 --> 00:01:53,310
talk about the upstream downstream

00:01:49,610 --> 00:01:56,880
relationship good things bad things what

00:01:53,310 --> 00:02:00,170
happens when we make a mistake I don't

00:01:56,880 --> 00:02:02,549
talk about about coordinating between

00:02:00,170 --> 00:02:04,530
various linux distros because we're up

00:02:02,549 --> 00:02:06,360
saying we see several in existence

00:02:04,530 --> 00:02:08,099
downstream and we have we want to

00:02:06,360 --> 00:02:11,459
coordinate a bit between these we want

00:02:08,099 --> 00:02:13,500
them to be more or less in sync doing

00:02:11,459 --> 00:02:16,710
the same thing in the same

00:02:13,500 --> 00:02:18,540
a knot differently and I'll leave some

00:02:16,710 --> 00:02:20,820
some time for questions afterwards but

00:02:18,540 --> 00:02:24,830
if you have something you want ask just

00:02:20,820 --> 00:02:30,630
stop me and ask the question while ago

00:02:24,830 --> 00:02:34,620
so um this is small as what we've put

00:02:30,630 --> 00:02:37,650
out last four years a few versions of

00:02:34,620 --> 00:02:41,850
MySQL the server some verses on my scope

00:02:37,650 --> 00:02:45,870
cluster which is the cluster server we

00:02:41,850 --> 00:02:50,910
have the workbench tool a developer and

00:02:45,870 --> 00:02:54,150
DBA tool we have certification processes

00:02:50,910 --> 00:02:58,260
we have some courses you can take to

00:02:54,150 --> 00:03:00,090
learn more about my school we have never

00:02:58,260 --> 00:03:03,030
to call my school fabric which is which

00:03:00,090 --> 00:03:06,300
is kind of high availability and

00:03:03,030 --> 00:03:08,700
shouting infrastructure that's in

00:03:06,300 --> 00:03:12,570
release candidates at moments it's still

00:03:08,700 --> 00:03:15,420
not a finished product and as you see

00:03:12,570 --> 00:03:18,630
there's some Enterprise Products here we

00:03:15,420 --> 00:03:22,200
give away our software for free but we

00:03:18,630 --> 00:03:24,780
sell support that's a business model and

00:03:22,200 --> 00:03:27,810
with support you get access to a few

00:03:24,780 --> 00:03:29,940
more tools that's kind of selling point

00:03:27,810 --> 00:03:32,370
of support it's not only support we also

00:03:29,940 --> 00:03:37,200
get a few more tools the core server and

00:03:32,370 --> 00:03:41,340
everything is free it's GPL but we have

00:03:37,200 --> 00:03:45,450
a few tools that you get when you pay

00:03:41,340 --> 00:03:47,850
for forearm support subscription some

00:03:45,450 --> 00:03:49,110
integration tools that will integrate my

00:03:47,850 --> 00:03:52,489
school better wait for instance your

00:03:49,110 --> 00:03:55,400
Oracle management stuff you already have

00:03:52,489 --> 00:04:00,530
some enterprise backup enterprise

00:03:55,400 --> 00:04:03,239
plugins for authentication and auditing

00:04:00,530 --> 00:04:05,489
these are plugins so the server itself

00:04:03,239 --> 00:04:09,239
is the same but there are plugins to to

00:04:05,489 --> 00:04:12,630
add this personality and we distribute

00:04:09,239 --> 00:04:15,930
our server I'm going to talk most up as

00:04:12,630 --> 00:04:19,160
a server now we distribute it in a lot

00:04:15,930 --> 00:04:23,729
of file formats for Windows Mac OS

00:04:19,160 --> 00:04:25,770
solaris and a lot of linear sisters we

00:04:23,729 --> 00:04:26,970
publish these rpms and tar balls

00:04:25,770 --> 00:04:28,530
everything on

00:04:26,970 --> 00:04:30,840
that mask will come which is where we

00:04:28,530 --> 00:04:32,970
have our download page there are also a

00:04:30,840 --> 00:04:35,670
lot of FTP servers and mirrors out there

00:04:32,970 --> 00:04:37,500
and just recently before Christmas our

00:04:35,670 --> 00:04:40,470
Christmas present to the fedora and red

00:04:37,500 --> 00:04:47,040
hat community was the young repositories

00:04:40,470 --> 00:04:52,380
for my skull our own yum repositories we

00:04:47,040 --> 00:04:54,690
want to extend that to more disclosed no

00:04:52,380 --> 00:04:57,570
promises on on which and timing and

00:04:54,690 --> 00:04:59,490
stuff but we want to send this this is

00:04:57,570 --> 00:05:04,590
compliments to what you have for

00:04:59,490 --> 00:05:07,260
instance if you have a let's say a red

00:05:04,590 --> 00:05:10,380
hats release where we actually have a

00:05:07,260 --> 00:05:13,920
repo now you may it may have like

00:05:10,380 --> 00:05:16,260
Maxwell 55 and they won't upgrade the 56

00:05:13,920 --> 00:05:18,270
but if you still want 56 in that you can

00:05:16,260 --> 00:05:20,130
use our repo'ing at 56 for that read

00:05:18,270 --> 00:05:23,280
that version so it's a compliment to

00:05:20,130 --> 00:05:26,010
what you get through this drill and also

00:05:23,280 --> 00:05:29,160
that effort that Reaper project has

00:05:26,010 --> 00:05:33,419
really improved the packaging reading

00:05:29,160 --> 00:05:35,310
and it has reduced the hatches the

00:05:33,419 --> 00:05:37,380
number of patches that fedora and red

00:05:35,310 --> 00:05:40,370
that have to apply to our source code

00:05:37,380 --> 00:05:43,500
when packaging so it's basically a

00:05:40,370 --> 00:05:45,750
improvement project for our software and

00:05:43,500 --> 00:05:48,570
the pack but packaging and then they

00:05:45,750 --> 00:05:51,080
builded package our software so I think

00:05:48,570 --> 00:05:56,510
this is a great way to improve our

00:05:51,080 --> 00:05:59,040
software installation thing where we can

00:05:56,510 --> 00:06:00,720
we can just make it easy to be a package

00:05:59,040 --> 00:06:04,440
maintainer because you have to apply

00:06:00,720 --> 00:06:07,680
fewer patches that's going to be the

00:06:04,440 --> 00:06:10,500
core idea that product and then you guys

00:06:07,680 --> 00:06:13,440
you take the tarball we have and you put

00:06:10,500 --> 00:06:19,080
into your repository and as I said you

00:06:13,440 --> 00:06:21,660
add some patches to that and we package

00:06:19,080 --> 00:06:24,120
might as well for some distros in fedora

00:06:21,660 --> 00:06:27,030
we actually do the work and the

00:06:24,120 --> 00:06:29,520
maintainer just takes our input on any

00:06:27,030 --> 00:06:31,140
baby makes a few changes but he uses

00:06:29,520 --> 00:06:33,720
what we do you have a release

00:06:31,140 --> 00:06:37,530
engineering team member who does the

00:06:33,720 --> 00:06:40,380
packaging in debian we do a bit are the

00:06:37,530 --> 00:06:43,800
same thing they do 55

00:06:40,380 --> 00:06:46,890
but we have done the 56 work with with

00:06:43,800 --> 00:06:50,270
some volunteers so we are not alone on

00:06:46,890 --> 00:06:52,530
that but we have helped doing that so I

00:06:50,270 --> 00:06:55,950
thank you for to the community of Raksha

00:06:52,530 --> 00:06:58,110
packaging my scroll you do Mosul work we

00:06:55,950 --> 00:07:01,140
help out a few places like debian had a

00:06:58,110 --> 00:07:05,610
real shortage of packages for for my

00:07:01,140 --> 00:07:08,460
school so we step in and out for help so

00:07:05,610 --> 00:07:12,510
i want to talk a bit about how we

00:07:08,460 --> 00:07:16,200
develop my school because that affects

00:07:12,510 --> 00:07:18,630
how you package and use my school so we

00:07:16,200 --> 00:07:22,200
have a what called DMR model we have

00:07:18,630 --> 00:07:23,850
development milestone releases so at

00:07:22,200 --> 00:07:26,610
this point it kind of its finding a

00:07:23,850 --> 00:07:29,910
finished product the ga release before

00:07:26,610 --> 00:07:33,150
that we have a lot of DMR's we publish

00:07:29,910 --> 00:07:37,470
these they have verse number in the 57

00:07:33,150 --> 00:07:39,300
series at the moment and we do all the

00:07:37,470 --> 00:07:41,820
future implementation in feature

00:07:39,300 --> 00:07:45,680
branches it could be a simple bug fix it

00:07:41,820 --> 00:07:47,640
could be multiple features in one branch

00:07:45,680 --> 00:07:50,070
depending on what we you think is the

00:07:47,640 --> 00:07:52,890
right granularity of these Peter trees

00:07:50,070 --> 00:07:55,500
and the important thing that before we

00:07:52,890 --> 00:07:58,950
move merge these back to drunk we do a

00:07:55,500 --> 00:08:01,350
lot of QA we do a lot of code review we

00:07:58,950 --> 00:08:05,370
run gcom to find the code coverage we

00:08:01,350 --> 00:08:07,920
had unit tests empty our tests are kind

00:08:05,370 --> 00:08:10,740
of SQL layer tests so we're at an SQL

00:08:07,920 --> 00:08:13,560
script to test the functionality we have

00:08:10,740 --> 00:08:17,760
a random queer generated generator that

00:08:13,560 --> 00:08:21,810
will run runner queries from grammar to

00:08:17,760 --> 00:08:25,920
test the kind of stability and and the

00:08:21,810 --> 00:08:28,140
corner cases of these these features so

00:08:25,920 --> 00:08:32,940
it's a lot of testing going on before it

00:08:28,140 --> 00:08:34,919
enters our development branch and this

00:08:32,940 --> 00:08:38,280
continued testing if push is tested with

00:08:34,919 --> 00:08:41,190
a lot of of tests and even more on a

00:08:38,280 --> 00:08:44,400
daily basis and a weekly basis and then

00:08:41,190 --> 00:08:47,100
at some point we make release candidates

00:08:44,400 --> 00:08:50,270
it might make several least candidates

00:08:47,100 --> 00:08:53,040
before we have a ga but at least one and

00:08:50,270 --> 00:08:58,980
after that we don't add features

00:08:53,040 --> 00:09:02,310
we hardly fix bugs Oh fix some bugs if

00:08:58,980 --> 00:09:04,380
support has a lot of users saying okay

00:09:02,310 --> 00:09:06,509
you need to fix this bug it's it's

00:09:04,380 --> 00:09:09,000
useless without fixing this bug they

00:09:06,509 --> 00:09:12,690
will tell us in engineering you have to

00:09:09,000 --> 00:09:15,300
fix this bug if I have bug that I want

00:09:12,690 --> 00:09:17,759
to fix in an aji a release I would have

00:09:15,300 --> 00:09:20,610
to ask support for permission I can't

00:09:17,759 --> 00:09:23,730
just push my bug into all technically I

00:09:20,610 --> 00:09:27,120
can but I login in the process I can't

00:09:23,730 --> 00:09:30,690
push a bug 256 now without having

00:09:27,120 --> 00:09:33,089
approval I need to explain why this is

00:09:30,690 --> 00:09:36,449
important to existing customers or users

00:09:33,089 --> 00:09:40,259
and I have to explain how this is not

00:09:36,449 --> 00:09:43,740
risky I have to convince support that

00:09:40,259 --> 00:09:48,120
this won't break anything and this is

00:09:43,740 --> 00:09:51,300
actually needed we believe in stability

00:09:48,120 --> 00:09:54,690
so we have as few patches into and

00:09:51,300 --> 00:09:57,510
changes as possible and no new future is

00:09:54,690 --> 00:10:01,620
no risk bug fixes and we have the same

00:09:57,510 --> 00:10:07,529
continuous testing for push and daily

00:10:01,620 --> 00:10:12,149
and weekly wages so if we follow a

00:10:07,529 --> 00:10:17,399
single feature through this before the

00:10:12,149 --> 00:10:20,339
ga sorry before I'm TMR about a month

00:10:17,399 --> 00:10:23,760
before we have a cut-off where we don't

00:10:20,339 --> 00:10:28,680
add more features to that so we spend a

00:10:23,760 --> 00:10:30,149
month in QA more or less we might Reese

00:10:28,680 --> 00:10:33,529
pin the whole thing if you find a

00:10:30,149 --> 00:10:36,180
release critical bug our showstopper

00:10:33,529 --> 00:10:37,829
we'd run upgrade downloaded testing with

00:10:36,180 --> 00:10:40,350
tested with other products so we do a

00:10:37,829 --> 00:10:43,639
lot of integration testing from cut off

00:10:40,350 --> 00:10:46,139
until the release of our muscle the

00:10:43,639 --> 00:10:49,620
milestones are of release candidate

00:10:46,139 --> 00:10:52,259
quality that's all go so Anna milestone

00:10:49,620 --> 00:10:54,569
should be able to just be renamed into a

00:10:52,259 --> 00:10:57,899
release candidate if you want to we have

00:10:54,569 --> 00:11:01,350
no fixed schedule for Lisa's we have

00:10:57,899 --> 00:11:03,899
made release every two or three years we

00:11:01,350 --> 00:11:06,019
have development models on every four

00:11:03,899 --> 00:11:09,589
months maybe maybe

00:11:06,019 --> 00:11:12,350
a bit more kind of this bigger range

00:11:09,589 --> 00:11:15,739
from what we can do there and after GA

00:11:12,350 --> 00:11:19,999
we have bimonthly released so every two

00:11:15,739 --> 00:11:25,970
months there's a new update that's a

00:11:19,999 --> 00:11:29,119
schedule grown and yeah as I said often

00:11:25,970 --> 00:11:34,959
GA we also spend this month for each

00:11:29,119 --> 00:11:38,899
milestone we have so we after we release

00:11:34,959 --> 00:11:42,679
537 when we do that we were we had been

00:11:38,899 --> 00:11:44,959
developing 538 for a month we spent one

00:11:42,679 --> 00:11:49,100
month more and then we cut off for 5 538

00:11:44,959 --> 00:11:52,309
and then 5 apparate will God and that's

00:11:49,100 --> 00:11:54,799
one month which means I don't it's just

00:11:52,309 --> 00:11:57,559
a guess but maybe a man year of testing

00:11:54,799 --> 00:12:02,089
or QA before release one of these Mike

00:11:57,559 --> 00:12:06,410
releases so Linux distros want minimal

00:12:02,089 --> 00:12:10,730
risks to stable distributions so what is

00:12:06,410 --> 00:12:14,600
minimal risk we try to fix only the

00:12:10,730 --> 00:12:16,189
necessary bugs what we didna say that

00:12:14,600 --> 00:12:18,230
might not be the same work you call

00:12:16,189 --> 00:12:21,999
necessary but that's what we think is

00:12:18,230 --> 00:12:27,049
necessary we thoroughly test everything

00:12:21,999 --> 00:12:29,029
we have rigid QA and we tell users to

00:12:27,049 --> 00:12:31,730
update to get to these necessary fixes

00:12:29,029 --> 00:12:35,990
we think it's necessary for users to fix

00:12:31,730 --> 00:12:38,629
this not only security fixes but mostly

00:12:35,990 --> 00:12:40,819
security fix Oh are actually don't on

00:12:38,629 --> 00:12:43,429
racial but but secured fix is the most

00:12:40,819 --> 00:12:46,459
important thing of course but there are

00:12:43,429 --> 00:12:50,149
other if we think are necessary well

00:12:46,459 --> 00:12:53,379
Bouncing distros they like to

00:12:50,149 --> 00:12:57,230
cherry-pick security box security fixes

00:12:53,379 --> 00:13:01,100
and then run the standard test suite

00:12:57,230 --> 00:13:03,019
that we export that is unit tests and

00:13:01,100 --> 00:13:09,249
these empty our tests the SQL layer

00:13:03,019 --> 00:13:12,199
tests that is less testing than we do so

00:13:09,249 --> 00:13:17,059
we're a bit concerned that when you

00:13:12,199 --> 00:13:19,649
cherry-pick the quality might be worse

00:13:17,059 --> 00:13:22,619
than when you take a whole

00:13:19,649 --> 00:13:30,540
Mike release that's our view I believe

00:13:22,619 --> 00:13:32,579
that are my mic releases are well of not

00:13:30,540 --> 00:13:35,670
insert better quality but we are more

00:13:32,579 --> 00:13:39,449
sure of that quality than if you back

00:13:35,670 --> 00:13:45,029
porch only security bug fixes and then

00:13:39,449 --> 00:13:50,189
you tell the users to upgrade to get

00:13:45,029 --> 00:13:53,220
these security fixes so we would like

00:13:50,189 --> 00:13:55,679
disclose to take our releases without

00:13:53,220 --> 00:14:02,189
not just cherry picking but take the

00:13:55,679 --> 00:14:06,749
whole bike release we got ubuntu to do

00:14:02,189 --> 00:14:08,279
that this februari we filed an

00:14:06,749 --> 00:14:11,819
application for what's called a micro

00:14:08,279 --> 00:14:14,040
release exception as personal which is

00:14:11,819 --> 00:14:17,100
the only this so that has this there's a

00:14:14,040 --> 00:14:20,999
concept where they deviate from that

00:14:17,100 --> 00:14:23,429
rule that only have minimal patches if

00:14:20,999 --> 00:14:26,759
you can prove that the absolute projects

00:14:23,429 --> 00:14:29,790
has satisfactory QA and development

00:14:26,759 --> 00:14:33,749
processes then you are allowed to apply

00:14:29,790 --> 00:14:35,399
for an exception to this rule and they

00:14:33,749 --> 00:14:38,459
will take all the module releases

00:14:35,399 --> 00:14:42,569
automatically kind of its its de facto

00:14:38,459 --> 00:14:44,519
been done for a number of years but this

00:14:42,569 --> 00:14:48,360
is kind of a formal approval of doing

00:14:44,519 --> 00:14:52,170
that so the security team won't one part

00:14:48,360 --> 00:14:54,089
the once kind of complaint to this pack

00:14:52,170 --> 00:14:57,170
to maintain afford for doing it so

00:14:54,089 --> 00:15:00,179
that's a whole process for doing this

00:14:57,170 --> 00:15:02,129
it's used for instance for web browsers

00:15:00,179 --> 00:15:06,059
that have a very rapid rate of

00:15:02,129 --> 00:15:08,519
development that you need to follow and

00:15:06,059 --> 00:15:11,309
use for larger mature projects of course

00:15:08,519 --> 00:15:13,799
we guess we have to to prove this the

00:15:11,309 --> 00:15:19,290
quality and the development process is

00:15:13,799 --> 00:15:21,360
stable enough so if i would have a kind

00:15:19,290 --> 00:15:24,029
of a request to open suse that it would

00:15:21,360 --> 00:15:26,879
be too or especially maybe Susa the

00:15:24,029 --> 00:15:30,509
enterprise linux which is a very stable

00:15:26,879 --> 00:15:33,150
long time thing it would be to have to

00:15:30,509 --> 00:15:36,060
think about the concept of micro release

00:15:33,150 --> 00:15:38,250
options I guess might as well is not the

00:15:36,060 --> 00:15:41,550
only software that could benefit from

00:15:38,250 --> 00:15:43,650
that and I think maybe Souza can benefit

00:15:41,550 --> 00:15:45,960
from that as well it would be easier for

00:15:43,650 --> 00:15:48,120
maintainer just take everything kind of

00:15:45,960 --> 00:15:51,420
don't have a look at which passes our

00:15:48,120 --> 00:15:54,510
security patches you don't have to argue

00:15:51,420 --> 00:15:56,700
for for taking more passes than then

00:15:54,510 --> 00:16:00,650
necessary or strictly necessary for

00:15:56,700 --> 00:16:04,800
security bugs because you have a formal

00:16:00,650 --> 00:16:08,310
procedure to do this so that's my

00:16:04,800 --> 00:16:10,100
request think about that I think the

00:16:08,310 --> 00:16:12,950
winter solution here is it's good

00:16:10,100 --> 00:16:15,150
because it's not just my school this is

00:16:12,950 --> 00:16:17,220
there's several project like they have

00:16:15,150 --> 00:16:22,440
an exception for cross paths press as

00:16:17,220 --> 00:16:28,040
well and well chrome and firefox and

00:16:22,440 --> 00:16:32,550
stuff so i also gnome and KDE i think so

00:16:28,040 --> 00:16:35,490
think about that our goal for you guys

00:16:32,550 --> 00:16:37,890
as packs maintain errs is to have as few

00:16:35,490 --> 00:16:41,310
patches as possible applied curing

00:16:37,890 --> 00:16:43,440
packaging we want to take back the

00:16:41,310 --> 00:16:45,690
patches you have if they're usable for

00:16:43,440 --> 00:16:48,300
for other people we want to take them

00:16:45,690 --> 00:16:51,030
back into our product we don't want you

00:16:48,300 --> 00:16:53,550
to be patching this all time it's a lot

00:16:51,030 --> 00:16:56,820
of work to maintain these patches so as

00:16:53,550 --> 00:16:59,700
few pad as possible and it says as

00:16:56,820 --> 00:17:05,040
possible because some patches will have

00:16:59,700 --> 00:17:08,270
to either we don't support system 390 we

00:17:05,040 --> 00:17:13,650
don't support arm actually not yet least

00:17:08,270 --> 00:17:16,589
we don't support glue heard on powerpc

00:17:13,650 --> 00:17:18,839
whatever there's a lot of variations are

00:17:16,589 --> 00:17:20,610
that we don't support and some of those

00:17:18,839 --> 00:17:22,620
you might have to maintain patterns for

00:17:20,610 --> 00:17:24,839
but we might be willing to help you

00:17:22,620 --> 00:17:26,640
maintain that touch but we can test it

00:17:24,839 --> 00:17:29,550
we don't want things in our code base

00:17:26,640 --> 00:17:33,510
that we can't test and maintain

00:17:29,550 --> 00:17:35,400
ourselves so if you have hardware

00:17:33,510 --> 00:17:37,410
architectures are too different from

00:17:35,400 --> 00:17:40,710
what we support you might have to add a

00:17:37,410 --> 00:17:43,410
patch but we can help you port that

00:17:40,710 --> 00:17:46,280
patch if it's a problem at some point we

00:17:43,410 --> 00:17:53,150
can do that we just need access to some

00:17:46,280 --> 00:17:56,450
already run it up then how we have what

00:17:53,150 --> 00:17:59,210
we call distal bugs when we get a bag

00:17:56,450 --> 00:18:02,180
from package maintainer it's usually a

00:17:59,210 --> 00:18:03,560
bug about packaging some package

00:18:02,180 --> 00:18:07,640
maintainer support other bugs as well

00:18:03,560 --> 00:18:11,540
but most of them are our packaging books

00:18:07,640 --> 00:18:13,460
and when is problem packaging a lot of

00:18:11,540 --> 00:18:15,710
users based off of on that bug if you

00:18:13,460 --> 00:18:18,080
can't upgrade that package the users

00:18:15,710 --> 00:18:20,410
won't get little thousands are using

00:18:18,080 --> 00:18:23,210
millions of users that won't get that

00:18:20,410 --> 00:18:25,310
operated package that might have to you

00:18:23,210 --> 00:18:32,240
have security bugs in the system because

00:18:25,310 --> 00:18:34,640
of that so we we crack these bugs when

00:18:32,240 --> 00:18:37,850
package maintainer files a bug if you

00:18:34,640 --> 00:18:39,770
know what this guy we will get a

00:18:37,850 --> 00:18:41,390
notification that okay here's the bug

00:18:39,770 --> 00:18:44,330
from pack of maintainer have a look at

00:18:41,390 --> 00:18:47,750
it and see if it's actually a packaging

00:18:44,330 --> 00:18:51,260
bug if it's important so it I get an

00:18:47,750 --> 00:18:54,970
email other people may get emails too so

00:18:51,260 --> 00:18:57,320
we tag it and crack it we have special

00:18:54,970 --> 00:19:01,610
tracking web pages for for these bugs

00:18:57,320 --> 00:19:05,360
they show up on the dashboard for the

00:19:01,610 --> 00:19:09,230
team leads we track security bugs these

00:19:05,360 --> 00:19:11,630
critical bugs showstopper stuff on a

00:19:09,230 --> 00:19:15,380
separate page and the district show up

00:19:11,630 --> 00:19:18,770
there as well so it's very visible that

00:19:15,380 --> 00:19:20,450
we have a packaging problem and it may

00:19:18,770 --> 00:19:23,240
result in higher priority not always

00:19:20,450 --> 00:19:25,520
some bugs are you know yeah it would be

00:19:23,240 --> 00:19:27,770
nice to fix this but it's not credible

00:19:25,520 --> 00:19:30,080
and then it's not that high prioritized

00:19:27,770 --> 00:19:35,630
but if it's critical it will be

00:19:30,080 --> 00:19:39,800
prioritized so that was kind of start of

00:19:35,630 --> 00:19:42,430
the upstream downstream point of my my

00:19:39,800 --> 00:19:47,360
talk I'll talk more about it now it's

00:19:42,430 --> 00:19:48,800
not about how it is to be upstream I'm

00:19:47,360 --> 00:19:52,220
going to talk about both upstream and

00:19:48,800 --> 00:19:56,390
downstream and the mistakes we do the

00:19:52,220 --> 00:19:58,070
things we do right or anything so we

00:19:56,390 --> 00:19:59,020
typically look at the the waterfall

00:19:58,070 --> 00:20:00,730
model

00:19:59,020 --> 00:20:04,540
one who's taking software engineering

00:20:00,730 --> 00:20:08,830
101 knows that the first thing about the

00:20:04,540 --> 00:20:12,100
World War model is place wrong it's not

00:20:08,830 --> 00:20:14,920
a one-way street we need feedback from

00:20:12,100 --> 00:20:16,570
downstream and downs who needs to

00:20:14,920 --> 00:20:19,300
actually give feedback to us for things

00:20:16,570 --> 00:20:26,260
to improve we get fever from users as

00:20:19,300 --> 00:20:29,650
well so this is not a one-way street we

00:20:26,260 --> 00:20:32,110
want to improve this to actually get

00:20:29,650 --> 00:20:33,970
this feedback and it's necessary for

00:20:32,110 --> 00:20:38,220
pack simultaneous to to give that

00:20:33,970 --> 00:20:42,250
feedback for their own work to be easier

00:20:38,220 --> 00:20:44,470
so let's look at a few cases of upstream

00:20:42,250 --> 00:20:47,610
downstream relationships this is good

00:20:44,470 --> 00:20:50,440
one so this is kind of the perfect

00:20:47,610 --> 00:20:53,140
upstream downstream relationship there's

00:20:50,440 --> 00:20:56,080
some nice little trickle here there's

00:20:53,140 --> 00:20:58,390
even kind of enterprise linux pool in

00:20:56,080 --> 00:21:03,000
there which things a bit slower it's

00:20:58,390 --> 00:21:07,840
it's a very very nice place to be in and

00:21:03,000 --> 00:21:11,760
it's yeah it's for well it's beautiful

00:21:07,840 --> 00:21:14,980
colors that's what I was thinking and I

00:21:11,760 --> 00:21:18,250
hope we sometimes can can be perceived

00:21:14,980 --> 00:21:20,800
as a good upstream I know at least some

00:21:18,250 --> 00:21:24,450
of you some of these sorts are perceived

00:21:20,800 --> 00:21:30,850
as good down stream's not always

00:21:24,450 --> 00:21:32,650
sometimes this bad one this is kind of

00:21:30,850 --> 00:21:35,920
the bad down upstream or downstream

00:21:32,650 --> 00:21:38,710
there's no feedback there's no there's

00:21:35,920 --> 00:21:42,790
no information flowing anyway need

00:21:38,710 --> 00:21:45,670
upwards and downwards and we sometimes

00:21:42,790 --> 00:21:49,390
do that we're not gonna break each time

00:21:45,670 --> 00:21:50,860
I'm not responding when I maintainer go

00:21:49,390 --> 00:21:54,460
some occasion he's not responding I

00:21:50,860 --> 00:21:58,210
can't get an answer to the questions I

00:21:54,460 --> 00:22:02,800
have what distro and we make an some

00:21:58,210 --> 00:22:06,910
problems this is solvable but everything

00:22:02,800 --> 00:22:08,830
isn't kind of this beautiful as it was

00:22:06,910 --> 00:22:10,860
in the good case not always and

00:22:08,830 --> 00:22:10,860
sometimes

00:22:11,090 --> 00:22:21,830
it gets worse we make mistakes we make

00:22:19,910 --> 00:22:24,710
mistakes and down strings make mistakes

00:22:21,830 --> 00:22:30,170
I'm going to mention a few of those some

00:22:24,710 --> 00:22:35,660
free live cases I can start with one of

00:22:30,170 --> 00:22:40,300
our mistakes can read that my school man

00:22:35,660 --> 00:22:40,300
pages silently relicensed away from GPL

00:22:40,360 --> 00:22:48,250
that was fun yeah what's fun for me I

00:22:45,260 --> 00:22:51,860
spent the whole day on that thing um

00:22:48,250 --> 00:22:54,110
this was a bug actually we made a

00:22:51,860 --> 00:22:57,770
mistake we were changing the license

00:22:54,110 --> 00:22:59,390
text of the enterprise edition from the

00:22:57,770 --> 00:23:01,180
GPL license to the entrance license

00:22:59,390 --> 00:23:03,530
because we want to keep these things

00:23:01,180 --> 00:23:05,780
kind of enterprising the enterprise

00:23:03,530 --> 00:23:09,080
packages community license commun the

00:23:05,780 --> 00:23:10,610
packages and we did it wrong he copied

00:23:09,080 --> 00:23:16,690
the same enterprise license into both

00:23:10,610 --> 00:23:16,690
packages it hit slashdot immediately

00:23:16,780 --> 00:23:24,530
that's fun what / that's all kudos to do

00:23:21,860 --> 00:23:27,800
/ of team because the next day they said

00:23:24,530 --> 00:23:29,990
oh yeah it was just a bad who ever read

00:23:27,800 --> 00:23:36,710
that nobody read that everyone read the

00:23:29,990 --> 00:23:39,560
first one so we made a big mistake can

00:23:36,710 --> 00:23:41,540
we should have had some testing some qh

00:23:39,560 --> 00:23:43,370
exactly assure that get license is

00:23:41,540 --> 00:23:45,740
correct but this happened where

00:23:43,370 --> 00:23:47,390
relicensing the the enterprise package I

00:23:45,740 --> 00:23:50,810
word thought about the community package

00:23:47,390 --> 00:23:53,410
we don't see that so that was an honest

00:23:50,810 --> 00:23:56,720
mistake made by ants developers and

00:23:53,410 --> 00:24:01,070
these things happen sometime we try not

00:23:56,720 --> 00:24:03,290
to but sometimes we do that but also the

00:24:01,070 --> 00:24:05,830
diff wasn't reported by a Linux

00:24:03,290 --> 00:24:08,480
astrology was report by someone else but

00:24:05,830 --> 00:24:10,940
sometimes the Linux distros as well or

00:24:08,480 --> 00:24:13,700
everyone dancing they also make mistakes

00:24:10,940 --> 00:24:16,280
periences nobody told us we read about

00:24:13,700 --> 00:24:19,820
this is slashdot and then we report the

00:24:16,280 --> 00:24:23,549
bug to ourselves so one thing goes wrong

00:24:19,820 --> 00:24:26,940
things grow the

00:24:23,549 --> 00:24:30,649
to think about is just to keep call and

00:24:26,940 --> 00:24:33,450
report a bug please then we will just

00:24:30,649 --> 00:24:36,269
found this like a normal bug instead of

00:24:33,450 --> 00:24:38,820
handling the bug report on slashdot that

00:24:36,269 --> 00:24:40,379
is a bit more pleasant for me I don't

00:24:38,820 --> 00:24:43,860
have to spend a whole day commenting all

00:24:40,379 --> 00:24:46,649
on slashdot and all the websites that

00:24:43,860 --> 00:24:48,869
repeat what / that's sad and saying okay

00:24:46,649 --> 00:24:54,090
this is by look at this bug report it

00:24:48,869 --> 00:24:58,859
kind of is a tedious job to do then we

00:24:54,090 --> 00:25:02,850
have some all mistakes in both

00:24:58,859 --> 00:25:08,129
directions the client library leave

00:25:02,850 --> 00:25:09,210
MySQL client so18 I see Roman smiling

00:25:08,129 --> 00:25:11,840
because he probably knows what I'm

00:25:09,210 --> 00:25:15,480
talking about I mentioned it to him

00:25:11,840 --> 00:25:17,700
earlier so we made a mistake when we

00:25:15,480 --> 00:25:21,779
switch from other tools to see make as

00:25:17,700 --> 00:25:24,690
build system we had the symbol versions

00:25:21,779 --> 00:25:29,009
for library they were generated the file

00:25:24,690 --> 00:25:31,590
works was was perfect but the compiling

00:25:29,009 --> 00:25:34,679
line that built the library forgot to

00:25:31,590 --> 00:25:37,009
mention that simple version file so we

00:25:34,679 --> 00:25:40,169
had Unversed in symbols in that library

00:25:37,009 --> 00:25:43,169
everything continues to work the library

00:25:40,169 --> 00:25:45,210
works this happened when going from

00:25:43,169 --> 00:25:48,419
Lamar could find 16 to a leg muscle

00:25:45,210 --> 00:25:52,970
client 18 so no applications were broken

00:25:48,419 --> 00:25:57,059
and everything was fine we didn't notice

00:25:52,970 --> 00:25:59,009
we didn't notice until debian tools so

00:25:57,059 --> 00:26:00,509
that means that uh you guys this isn't

00:25:59,009 --> 00:26:02,700
versioned anymore you should probably

00:26:00,509 --> 00:26:06,539
add a virtual hungry sir but we have the

00:26:02,700 --> 00:26:09,269
file and then oh no we don't use it in

00:26:06,539 --> 00:26:13,559
the meantime someone I don't know who I

00:26:09,269 --> 00:26:16,619
could be sooo say could be red hat I

00:26:13,559 --> 00:26:20,220
don't know someone made a patch to fix

00:26:16,619 --> 00:26:22,919
this and they made a patch that didn't

00:26:20,220 --> 00:26:26,429
enable the symbol version part we had no

00:26:22,919 --> 00:26:28,830
they made a new symbol version pile so

00:26:26,429 --> 00:26:31,470
they made a patch that create a new file

00:26:28,830 --> 00:26:34,590
and they didn't create those similar

00:26:31,470 --> 00:26:36,720
versions the same way we did so the

00:26:34,590 --> 00:26:39,620
symbols perversion differently

00:26:36,720 --> 00:26:43,409
and this is currently in red hat fedora

00:26:39,620 --> 00:26:47,520
Susa opensuse and we're just trying to

00:26:43,409 --> 00:26:54,120
get rid of this difference that debian

00:26:47,520 --> 00:26:56,370
went to come to an upstream has one set

00:26:54,120 --> 00:26:59,270
of simple versions and red and fedora

00:26:56,370 --> 00:27:01,799
opensuse as user has a different one and

00:26:59,270 --> 00:27:04,020
we're just trying to kind of clear this

00:27:01,799 --> 00:27:06,030
up now I talked to red hat they're going

00:27:04,020 --> 00:27:08,640
to fix it in red at seven fedora in

00:27:06,030 --> 00:27:10,260
fedora 21 I think and we hope to get

00:27:08,640 --> 00:27:12,360
this ended shoes and open shoes as well

00:27:10,260 --> 00:27:14,730
so that in the future we can have the

00:27:12,360 --> 00:27:18,330
same symbol versions so we went made a

00:27:14,730 --> 00:27:20,490
mistake and I one say that well kudos

00:27:18,330 --> 00:27:22,799
suited to the guy who made a pass he did

00:27:20,490 --> 00:27:26,580
something but he made a small mistake as

00:27:22,799 --> 00:27:30,870
well by not using the file we had but

00:27:26,580 --> 00:27:32,880
creating his own so there are our

00:27:30,870 --> 00:27:34,860
mistakes on both sides and we end up in

00:27:32,880 --> 00:27:38,159
a situation that's much harder to

00:27:34,860 --> 00:27:40,799
resolve and this would have been solved

00:27:38,159 --> 00:27:44,240
upstream if you had a bug report which

00:27:40,799 --> 00:27:47,880
we didn't at least I haven't seen one

00:27:44,240 --> 00:27:50,760
then you have other interesting things

00:27:47,880 --> 00:27:55,770
going on you have another library leave

00:27:50,760 --> 00:27:58,940
my schedule d the embedded server we

00:27:55,770 --> 00:28:04,380
have this as a statically linked library

00:27:58,940 --> 00:28:06,419
they might cook lib mysqld a and then we

00:28:04,380 --> 00:28:09,059
go through these distress and selling

00:28:06,419 --> 00:28:11,669
leave my school eat that s oh what's

00:28:09,059 --> 00:28:14,130
that we don't we don't support that we

00:28:11,669 --> 00:28:16,500
don't make that and it turns out the

00:28:14,130 --> 00:28:18,299
distro has been when crafting their own

00:28:16,500 --> 00:28:22,400
Jesus you lined with a lot of stuff and

00:28:18,299 --> 00:28:25,049
creating this as shredder library and

00:28:22,400 --> 00:28:28,020
they have to make a pact maintain Apache

00:28:25,049 --> 00:28:31,320
to do this and and we might accidentally

00:28:28,020 --> 00:28:34,919
break this and the solution here was

00:28:31,320 --> 00:28:39,659
that we all we had to support a distro

00:28:34,919 --> 00:28:42,900
in a repo so we say okay we have to go

00:28:39,659 --> 00:28:45,240
into that distro and I kind of live well

00:28:42,900 --> 00:28:48,630
in that is we adapt to that Israel so

00:28:45,240 --> 00:28:49,929
well we don't really support the shared

00:28:48,630 --> 00:28:53,440
library but be published

00:28:49,929 --> 00:28:57,730
make one so what we did we've just added

00:28:53,440 --> 00:28:59,350
the option to build a share one it's a

00:28:57,730 --> 00:29:01,119
lot officially supported but we actually

00:28:59,350 --> 00:29:05,889
can build it which means that the

00:29:01,119 --> 00:29:09,340
district now drop their ad hoc building

00:29:05,889 --> 00:29:13,450
line and use the the build system as we

00:29:09,340 --> 00:29:16,559
created it so there are kind of weird

00:29:13,450 --> 00:29:19,950
things going on in various distress

00:29:16,559 --> 00:29:21,940
caused by bugs from our side or home

00:29:19,950 --> 00:29:26,710
requests from their side that it didn't

00:29:21,940 --> 00:29:28,690
actually bring up to us so thinking

00:29:26,710 --> 00:29:32,200
about the the client library thing our

00:29:28,690 --> 00:29:35,740
goal is to make the MySQL experience as

00:29:32,200 --> 00:29:37,659
similar as possible across districts we

00:29:35,740 --> 00:29:41,580
want users to have the same experience

00:29:37,659 --> 00:29:44,470
no matter which linux is a runner and

00:29:41,580 --> 00:29:47,740
that's what we do by coordinating

00:29:44,470 --> 00:29:49,840
between these me talking to several

00:29:47,740 --> 00:29:54,070
distros means that I will kind of be a

00:29:49,840 --> 00:29:57,100
coordinating point for this and I hope

00:29:54,070 --> 00:29:58,990
we can start to to move in the same

00:29:57,100 --> 00:30:01,330
direction there are differences there

00:29:58,990 --> 00:30:05,710
will always be of some differences but I

00:30:01,330 --> 00:30:09,429
think there are bit too too many now not

00:30:05,710 --> 00:30:11,700
very many but what of you there are

00:30:09,429 --> 00:30:16,659
difference between distros in in

00:30:11,700 --> 00:30:19,299
important aspects for instance do an

00:30:16,659 --> 00:30:24,899
application need an open-cell license

00:30:19,299 --> 00:30:27,700
exception to use open azizul we build

00:30:24,899 --> 00:30:30,730
our enterprise edition with open a cell

00:30:27,700 --> 00:30:33,759
but we have actually bought the right to

00:30:30,730 --> 00:30:37,570
publish source code for another SSL

00:30:33,759 --> 00:30:39,789
library so that linux distros don't need

00:30:37,570 --> 00:30:42,279
to compile with openssl debian ubuntu

00:30:39,789 --> 00:30:47,440
don't like this stepping right here

00:30:42,279 --> 00:30:50,379
looking at me and because a GPL program

00:30:47,440 --> 00:30:53,110
won't can't be linked with a library

00:30:50,379 --> 00:30:56,110
linked with openness all unless there's

00:30:53,110 --> 00:31:00,190
an exemption for this opener cell clause

00:30:56,110 --> 00:31:02,509
in the GPL license of that client

00:31:00,190 --> 00:31:05,299
application and

00:31:02,509 --> 00:31:07,609
um red hat and Souza have a different

00:31:05,299 --> 00:31:11,479
view on this but that's the difference

00:31:07,609 --> 00:31:12,949
so we can't open our users and clients

00:31:11,479 --> 00:31:15,349
are asking for openness dull but because

00:31:12,949 --> 00:31:18,169
of something sisters we can't just say

00:31:15,349 --> 00:31:20,179
we're going to use open zazul can't

00:31:18,169 --> 00:31:23,570
force all these client application to

00:31:20,179 --> 00:31:27,669
change license that's that won't work so

00:31:23,570 --> 00:31:31,249
we have to ship the dual solution still

00:31:27,669 --> 00:31:32,979
so I will talk to the the Debian guys to

00:31:31,249 --> 00:31:36,289
have the soul is in the future because

00:31:32,979 --> 00:31:38,659
open a cell are maybe now libras it's

00:31:36,289 --> 00:31:41,629
all is a project that are that's kind of

00:31:38,659 --> 00:31:45,440
growing and continuing while you are one

00:31:41,629 --> 00:31:48,499
isn't and there are other questions

00:31:45,440 --> 00:31:50,899
installation interactive and it's

00:31:48,499 --> 00:31:53,329
talking Friday Joe talked about security

00:31:50,899 --> 00:31:54,949
aspects of my school but randomly

00:31:53,329 --> 00:31:58,659
generated password during install and

00:31:54,949 --> 00:32:00,859
stuff while on debian ubuntu did

00:31:58,659 --> 00:32:03,789
installation tasks for a root password

00:32:00,859 --> 00:32:06,049
you have to support that as well and

00:32:03,789 --> 00:32:08,749
this is service start automatically you

00:32:06,049 --> 00:32:11,509
have translation some days it does it

00:32:08,749 --> 00:32:14,269
some businesses don't and we have to

00:32:11,509 --> 00:32:16,309
produce that start the service

00:32:14,269 --> 00:32:18,409
automatically you have to make really

00:32:16,309 --> 00:32:24,349
sure that the defaults are safe that is

00:32:18,409 --> 00:32:26,809
secure and my headache give an

00:32:24,349 --> 00:32:28,999
alternative packages can you have one

00:32:26,809 --> 00:32:32,239
that's default if you have my spell 55

00:32:28,999 --> 00:32:34,749
and 56 and Mariga TV like you want to

00:32:32,239 --> 00:32:37,669
now can you have one default and other

00:32:34,749 --> 00:32:41,419
packages wrote it and what is it

00:32:37,669 --> 00:32:45,469
actually into default that's just

00:32:41,419 --> 00:32:49,009
definition is is hard so we're fighting

00:32:45,469 --> 00:32:54,829
this in trying to find solution in in

00:32:49,009 --> 00:32:56,989
fedora in debian went to in opensuse

00:32:54,829 --> 00:33:01,339
there's an easy solution thanks to make

00:32:56,989 --> 00:33:04,399
up for for that solution but in in

00:33:01,339 --> 00:33:07,669
fedora we end up by the maintainer he

00:33:04,399 --> 00:33:10,009
bumped the epic old verse number for the

00:33:07,669 --> 00:33:12,709
one that was supposed to be default that

00:33:10,009 --> 00:33:14,690
was his phone couldn't couldn't do

00:33:12,709 --> 00:33:16,370
anything else in the end and he had

00:33:14,690 --> 00:33:20,870
decided to make one default

00:33:16,370 --> 00:33:24,920
and they just had to do it and then that

00:33:20,870 --> 00:33:27,620
one solution left so these these

00:33:24,920 --> 00:33:29,690
repositories is that they're not made to

00:33:27,620 --> 00:33:31,820
have defaults that way in Debbie are

00:33:29,690 --> 00:33:35,150
going to each client application will

00:33:31,820 --> 00:33:37,100
specify a default that is that is

00:33:35,150 --> 00:33:39,170
something you have different defaults

00:33:37,100 --> 00:33:40,760
for different applications so depending

00:33:39,170 --> 00:33:47,559
on which application is all first you

00:33:40,760 --> 00:33:52,130
get another get a different server funny

00:33:47,559 --> 00:33:56,750
so when when trying to synchronize

00:33:52,130 --> 00:33:58,400
across this rose one of the topics also

00:33:56,750 --> 00:34:01,700
mentioned by Jordan on Friday was the

00:33:58,400 --> 00:34:05,240
secure file privilege this is something

00:34:01,700 --> 00:34:06,710
working on as we speak this is a setting

00:34:05,240 --> 00:34:09,620
that needs to be sucked in the

00:34:06,710 --> 00:34:13,820
configuration file to make a really

00:34:09,620 --> 00:34:20,090
secure my school insulation but because

00:34:13,820 --> 00:34:22,820
of the secure the selinux policies the

00:34:20,090 --> 00:34:25,639
apartment policies we need to coordinate

00:34:22,820 --> 00:34:27,620
this it must be the same on all linux

00:34:25,639 --> 00:34:29,120
distros we need to set a director named

00:34:27,620 --> 00:34:31,250
that the service allowed to read and

00:34:29,120 --> 00:34:33,470
write and this has to be the same one

00:34:31,250 --> 00:34:36,020
otherwise they will have to add a patch

00:34:33,470 --> 00:34:38,120
to you the selinux policies and to the

00:34:36,020 --> 00:34:41,300
apparent policies and we don't want to

00:34:38,120 --> 00:34:43,370
put people through that so we are trying

00:34:41,300 --> 00:34:45,830
to coordinate this between linux distros

00:34:43,370 --> 00:34:48,350
as we speak trying to find a common

00:34:45,830 --> 00:34:49,850
director named where we can do this that

00:34:48,350 --> 00:34:54,320
the server can be allowed to read and

00:34:49,850 --> 00:34:57,830
write and I think that's a natural thing

00:34:54,320 --> 00:34:59,690
for us upstream to do because we talk to

00:34:57,830 --> 00:35:02,450
these packaged maintained errs and we

00:34:59,690 --> 00:35:04,640
see the problem and we just send out

00:35:02,450 --> 00:35:06,760
emails at tell saying that okay we need

00:35:04,640 --> 00:35:09,920
to do this we need to coordinate this

00:35:06,760 --> 00:35:11,060
how about this director named will that

00:35:09,920 --> 00:35:14,060
work for you and they have different

00:35:11,060 --> 00:35:16,760
opinions but in the end we find a common

00:35:14,060 --> 00:35:19,100
name you haven't done so yet but I think

00:35:16,760 --> 00:35:22,130
we will find pursuing a name that will

00:35:19,100 --> 00:35:25,760
be a dragon named that is it's good for

00:35:22,130 --> 00:35:27,830
all and we can just apply this and get

00:35:25,760 --> 00:35:29,760
it into the policies and I think which

00:35:27,830 --> 00:35:32,030
are Packers that are

00:35:29,760 --> 00:35:35,820
created upstream from all the distress

00:35:32,030 --> 00:35:41,940
so this is about the cross distro

00:35:35,820 --> 00:35:46,860
synchronization that we need to do so I

00:35:41,940 --> 00:35:49,170
can summarize a bit um Liam sisters are

00:35:46,860 --> 00:35:52,890
really an important this distribution

00:35:49,170 --> 00:35:55,770
channel for us on the back of my shirt

00:35:52,890 --> 00:35:57,750
it says world's most popular database

00:35:55,770 --> 00:36:01,980
systems system open source database

00:35:57,750 --> 00:36:04,770
system and that's a lot thanks to the

00:36:01,980 --> 00:36:06,480
links disra's the packages that come

00:36:04,770 --> 00:36:11,760
with Linux users are really important

00:36:06,480 --> 00:36:13,770
for us so really the diversity of

00:36:11,760 --> 00:36:17,790
between package maintainers and an us

00:36:13,770 --> 00:36:20,790
it's really important and our goal is to

00:36:17,790 --> 00:36:22,790
have as few differences as possible both

00:36:20,790 --> 00:36:25,800
between our own products our own

00:36:22,790 --> 00:36:27,420
packages prints we have packages on the

00:36:25,800 --> 00:36:32,250
website at download install manually

00:36:27,420 --> 00:36:35,670
with dpkg or with RPM we have packages

00:36:32,250 --> 00:36:37,710
to be installed to a repository we have

00:36:35,670 --> 00:36:41,250
tar balls that compile yourself and then

00:36:37,710 --> 00:36:44,400
install and all these we want these to

00:36:41,250 --> 00:36:46,950
be as similar as possible at the same

00:36:44,400 --> 00:36:50,130
time that we want to be as similar as

00:36:46,950 --> 00:36:52,610
possible to down some distress there's a

00:36:50,130 --> 00:36:54,780
lot of synchronization going here it's

00:36:52,610 --> 00:36:56,760
definitely not a waterfall model it this

00:36:54,780 --> 00:37:00,210
is really a current spar that continues

00:36:56,760 --> 00:37:02,910
for forever but with upstream downstream

00:37:00,210 --> 00:37:06,030
it's it's about reducing our patches as

00:37:02,910 --> 00:37:09,560
I said between these roads it's about

00:37:06,030 --> 00:37:14,850
reducing the number of parameter

00:37:09,560 --> 00:37:17,010
combinations used if we have to handle

00:37:14,850 --> 00:37:20,570
something especially if you have to add

00:37:17,010 --> 00:37:24,830
a parameter to something for 41 distro

00:37:20,570 --> 00:37:28,320
can begin a combinatorial explosion of

00:37:24,830 --> 00:37:30,300
test cases we need to run to maintain

00:37:28,320 --> 00:37:32,040
this so we want to make things as

00:37:30,300 --> 00:37:35,940
similar as possible I think it also

00:37:32,040 --> 00:37:38,990
gains the user that the experience is a

00:37:35,940 --> 00:37:41,400
similar or lease we can write

00:37:38,990 --> 00:37:43,440
documentation and blog posts and

00:37:41,400 --> 00:37:43,890
everything about how to do this and that

00:37:43,440 --> 00:37:45,660
with

00:37:43,890 --> 00:37:48,420
I scroll on linux instead of how to do

00:37:45,660 --> 00:37:51,029
this in that with mysql on opensuse on

00:37:48,420 --> 00:37:53,549
debian ubuntu on brandade fedora

00:37:51,029 --> 00:37:56,279
everything we can just combine our

00:37:53,549 --> 00:38:01,230
efforts to create a better user

00:37:56,279 --> 00:38:03,299
experience and it's actually the reason

00:38:01,230 --> 00:38:06,750
why I'm here today to meet and talk with

00:38:03,299 --> 00:38:09,299
pax maintain errs that is we haven't

00:38:06,750 --> 00:38:12,569
been that good at it before we are

00:38:09,299 --> 00:38:14,579
really trying to be good we're also I

00:38:12,569 --> 00:38:17,670
would like pack some containers to

00:38:14,579 --> 00:38:21,420
contact me I know a few of them in some

00:38:17,670 --> 00:38:23,849
distress but I really would like to have

00:38:21,420 --> 00:38:27,269
packing retainers contact me I will

00:38:23,849 --> 00:38:31,740
contact them I know that Oracle is kind

00:38:27,269 --> 00:38:35,430
of this big wall of no faces and just

00:38:31,740 --> 00:38:38,640
corporate logos but here's a pace and a

00:38:35,430 --> 00:38:42,089
name use me and get in touch with me and

00:38:38,640 --> 00:38:47,240
I will I will get you in connection with

00:38:42,089 --> 00:38:50,670
your right guys so I'm here today to

00:38:47,240 --> 00:38:52,410
understand this distro understand

00:38:50,670 --> 00:38:55,849
opensuse do understand the environment

00:38:52,410 --> 00:38:59,369
understand the people the community and

00:38:55,849 --> 00:39:00,930
relationship would sue sir I want to

00:38:59,369 --> 00:39:05,359
find the problems to solutions before

00:39:00,930 --> 00:39:08,599
they occur and we can do that by

00:39:05,359 --> 00:39:11,750
obviously is a great example this

00:39:08,599 --> 00:39:15,599
mcconnell has done a great work on

00:39:11,750 --> 00:39:17,910
packaging 570 mrs these are development

00:39:15,599 --> 00:39:20,430
versions that well we don't dare call

00:39:17,910 --> 00:39:22,619
and production versions i guess some

00:39:20,430 --> 00:39:26,609
people actually used in production but

00:39:22,619 --> 00:39:29,009
we don't really recommend that but by

00:39:26,609 --> 00:39:31,559
preparing by packaging our development

00:39:29,009 --> 00:39:34,619
versions opensuse is now ready the day

00:39:31,559 --> 00:39:37,829
we go ga opposites can just download

00:39:34,619 --> 00:39:41,849
total rebuild package it's running live

00:39:37,829 --> 00:39:44,180
first distro in the world to support my

00:39:41,849 --> 00:39:47,130
school 57 I guess that's why I guess

00:39:44,180 --> 00:39:49,859
none of the other districts are or close

00:39:47,130 --> 00:39:54,720
to that so you have integrated 57

00:39:49,859 --> 00:39:59,640
already and that also makes it possible

00:39:54,720 --> 00:40:03,089
to to come back to us say this thing

00:39:59,640 --> 00:40:05,700
doesn't work we have problems and you

00:40:03,089 --> 00:40:07,680
can do that before we go ga you can do

00:40:05,700 --> 00:40:13,470
that while we are still developing what

00:40:07,680 --> 00:40:16,049
we can do a lot of changes quickly so by

00:40:13,470 --> 00:40:19,410
being very much at the front of

00:40:16,049 --> 00:40:22,319
development you can get problems fixed

00:40:19,410 --> 00:40:24,680
earlier and by having our repulsors we

00:40:22,319 --> 00:40:26,789
think we are going to be better at

00:40:24,680 --> 00:40:29,069
discovering these things ourselves and

00:40:26,789 --> 00:40:34,920
providing you with the solutions to

00:40:29,069 --> 00:40:36,779
those problems and meeting packer

00:40:34,920 --> 00:40:41,819
maintainer also gives us a possibility

00:40:36,779 --> 00:40:43,500
to talk about upcoming changes for

00:40:41,819 --> 00:40:46,950
instance i mentioned the openness a

00:40:43,500 --> 00:40:49,349
subtle thing it doesn't really bother

00:40:46,950 --> 00:40:51,720
open opensuse that much because you are

00:40:49,349 --> 00:40:55,079
using open a soul but we see that it's

00:40:51,720 --> 00:40:58,259
hard to provide new features ssl

00:40:55,079 --> 00:41:00,839
features with the art library so what

00:40:58,259 --> 00:41:05,579
should we do we need to talk about that

00:41:00,839 --> 00:41:09,720
with the districts that are using the

00:41:05,579 --> 00:41:12,660
yards all code ok how can we what's the

00:41:09,720 --> 00:41:15,809
future here that's source code isn't

00:41:12,660 --> 00:41:18,029
it's maintained but it's not extended

00:41:15,809 --> 00:41:19,829
there's no new features features in that

00:41:18,029 --> 00:41:22,920
this new features in opening cell that

00:41:19,829 --> 00:41:26,069
people are asking us to implement so how

00:41:22,920 --> 00:41:27,690
can we do that and those talks are much

00:41:26,069 --> 00:41:31,109
easier to do while we're doing

00:41:27,690 --> 00:41:34,160
development so just talking to pax

00:41:31,109 --> 00:41:36,750
maintainers and being early on with with

00:41:34,160 --> 00:41:43,049
discussing these topics openly for

00:41:36,750 --> 00:41:46,380
instance I'm in the GIS labs release we

00:41:43,049 --> 00:41:49,920
have we are using boost my school has

00:41:46,380 --> 00:41:53,279
never been compiled with booze before we

00:41:49,920 --> 00:41:56,880
talked a bit with Boone Jack me about

00:41:53,279 --> 00:42:00,890
this before it happened and asked ok how

00:41:56,880 --> 00:42:04,920
would you do it if we depend on boost or

00:42:00,890 --> 00:42:06,690
the boost header files how would you do

00:42:04,920 --> 00:42:08,539
that when you build a stuff how would

00:42:06,690 --> 00:42:10,459
you handle the different

00:42:08,539 --> 00:42:12,769
versions of boost that we would need

00:42:10,459 --> 00:42:14,719
other packages we need we can discuss

00:42:12,769 --> 00:42:17,799
these things and find a solution before

00:42:14,719 --> 00:42:21,049
the problem occurs I think that's the

00:42:17,799 --> 00:42:24,169
key measure message here we need to have

00:42:21,049 --> 00:42:27,949
open communication both ways to discuss

00:42:24,169 --> 00:42:30,049
the upcoming changes and of course did

00:42:27,949 --> 00:42:31,299
the problems you people have but if you

00:42:30,049 --> 00:42:34,400
can talk about the upcoming changes

00:42:31,299 --> 00:42:36,859
earlier not Ariane we probably won't

00:42:34,400 --> 00:42:40,880
have that many problems after we leave

00:42:36,859 --> 00:42:43,759
something and please believe me when I

00:42:40,880 --> 00:42:46,369
say that everybody makes mistakes we are

00:42:43,759 --> 00:42:49,459
honest developers and we make honest

00:42:46,369 --> 00:42:52,369
mistakes and that's why the trust

00:42:49,459 --> 00:42:56,989
between pax maintain errs and us is very

00:42:52,369 --> 00:42:59,869
important you guys need to trust us we

00:42:56,989 --> 00:43:03,229
have to build that trust and we need to

00:42:59,869 --> 00:43:05,259
trust you if I see I'm packed on

00:43:03,229 --> 00:43:09,169
container that's doing something weird

00:43:05,259 --> 00:43:11,989
how it's easy for me to is to think he's

00:43:09,169 --> 00:43:14,299
doing this on how this is malice he just

00:43:11,989 --> 00:43:18,559
he wants to hurt me he wants to hurt me

00:43:14,299 --> 00:43:19,939
personally no they don't and just saying

00:43:18,559 --> 00:43:23,390
we don't want to hurt package containers

00:43:19,939 --> 00:43:26,119
so we needed trust both ways and we just

00:43:23,390 --> 00:43:28,640
need to think about these are engineers

00:43:26,119 --> 00:43:32,289
on both sides doing honest mistakes and

00:43:28,640 --> 00:43:36,589
let's just talk about the technological

00:43:32,289 --> 00:43:40,699
issues and and keep at that and well

00:43:36,589 --> 00:43:43,939
when meet people you have a better view

00:43:40,699 --> 00:43:47,419
of kind of who that person is so when

00:43:43,939 --> 00:43:50,869
now I met he call and Roman I know that

00:43:47,419 --> 00:43:54,019
these are great guys oh I can't imagine

00:43:50,869 --> 00:43:57,229
them doing things on my list now or some

00:43:54,019 --> 00:43:59,799
people disagree here I can't imagine you

00:43:57,229 --> 00:44:03,079
guys doing something bad on purpose and

00:43:59,799 --> 00:44:08,029
that's a very good thing to have and you

00:44:03,079 --> 00:44:11,119
smiling just devilish okay I choose to

00:44:08,029 --> 00:44:14,329
believe that you are nice guys so

00:44:11,119 --> 00:44:17,179
meeting in person is really great so I'm

00:44:14,329 --> 00:44:19,369
happy to be here and since I have both

00:44:17,179 --> 00:44:21,800
these the former and the current packet

00:44:19,369 --> 00:44:24,650
the dinner I just wanna say thank

00:44:21,800 --> 00:44:28,660
you for packaging my skull this is just

00:44:24,650 --> 00:44:28,660
awesome can we get them applause please

00:44:30,760 --> 00:44:37,340
thank you you guys are great the job

00:44:33,680 --> 00:44:40,340
you've done with you had at one point 55

00:44:37,340 --> 00:44:43,190
56 57 DeMars I'm Arrietty being and

00:44:40,340 --> 00:44:45,590
clustering there or something maybe no

00:44:43,190 --> 00:44:48,110
may not 55 56 57 David Mars cluster ann

00:44:45,590 --> 00:44:53,180
marie d be at the same time and it's all

00:44:48,110 --> 00:44:55,220
a big thing with with defaults and and

00:44:53,180 --> 00:44:58,820
you can choose which one we want that's

00:44:55,220 --> 00:45:01,970
amazing that's really amazing so you

00:44:58,820 --> 00:45:07,720
haven't asked any questions so far but

00:45:01,970 --> 00:45:07,720
we have time for a few nominee

00:45:17,609 --> 00:45:25,030
certainly appreciated that this is a

00:45:21,400 --> 00:45:27,190
fairly well appreciated approach to help

00:45:25,030 --> 00:45:29,200
the distributors and the packages to get

00:45:27,190 --> 00:45:31,599
their stuff done in such way that it

00:45:29,200 --> 00:45:33,460
actually fits and everything you would

00:45:31,599 --> 00:45:35,710
be able to expect the same thing from

00:45:33,460 --> 00:45:39,420
the package but why is it that you

00:45:35,710 --> 00:45:42,970
produce packages on your own as well

00:45:39,420 --> 00:45:47,710
because we have users both paying on

00:45:42,970 --> 00:45:52,780
paying users that want that I'm not sure

00:45:47,710 --> 00:45:57,180
um but especially for repo we for

00:45:52,780 --> 00:46:00,010
instance debian carnival ships with 55

00:45:57,180 --> 00:46:03,099
well there's 56 in testing now or never

00:46:00,010 --> 00:46:05,859
sorry experimental so if the 55 the

00:46:03,099 --> 00:46:09,220
debian stable at the moment is 55 if a

00:46:05,859 --> 00:46:13,089
user on that debian stable wants to use

00:46:09,220 --> 00:46:14,770
56 he has to get it from us either as

00:46:13,089 --> 00:46:16,540
packages downloaded from web page or

00:46:14,770 --> 00:46:19,420
through a repo which we currently don't

00:46:16,540 --> 00:46:21,339
have so that's why we produce these

00:46:19,420 --> 00:46:23,940
packages so that the users can pick

00:46:21,339 --> 00:46:28,119
something else than what's in the disco

00:46:23,940 --> 00:46:31,750
and we have that as a supported platform

00:46:28,119 --> 00:46:34,240
so we support that so it's it's

00:46:31,750 --> 00:46:37,240
basically about a choice to do something

00:46:34,240 --> 00:46:39,730
a bit different than the distro some

00:46:37,240 --> 00:46:44,920
users want to upgrade passer or maybe

00:46:39,730 --> 00:46:49,359
slower so it's just a sport that's that

00:46:44,920 --> 00:46:53,200
scenario for users in addition to that

00:46:49,359 --> 00:46:55,329
other noticed with you saying thank you

00:46:53,200 --> 00:46:57,430
to the to the packages specifically for

00:46:55,329 --> 00:46:58,960
for me hard because he has been doing a

00:46:57,430 --> 00:47:01,660
tremendous amount of work i didn't he

00:46:58,960 --> 00:47:05,069
actually take over the job yet so this

00:47:01,660 --> 00:47:07,510
is a beautiful and i would also say

00:47:05,069 --> 00:47:11,319
thank you very much for coming here and

00:47:07,510 --> 00:47:13,450
for opening a new opportunity to talk to

00:47:11,319 --> 00:47:16,119
you to be approachable to come with two

00:47:13,450 --> 00:47:17,950
pure two persons and to go into a

00:47:16,119 --> 00:47:21,810
dialogue is just beautiful thank you for

00:47:17,950 --> 00:47:21,810
coming yeah thank you for having us

00:47:22,650 --> 00:47:33,100
thank you as a question so following on

00:47:29,350 --> 00:47:37,480
from Romans question that why do you

00:47:33,100 --> 00:47:39,910
offer your own packages my question

00:47:37,480 --> 00:47:41,890
would be why can't you offer those

00:47:39,910 --> 00:47:45,130
packages through the open build service

00:47:41,890 --> 00:47:48,340
in a dedicated projects are they they

00:47:45,130 --> 00:47:50,590
come from the distribution but you're

00:47:48,340 --> 00:47:53,110
one of the contributors probably the

00:47:50,590 --> 00:47:57,160
main contributor to that newer version

00:47:53,110 --> 00:48:00,070
or whatever it is yeah maybe we could

00:47:57,160 --> 00:48:01,960
use that we have our own build system

00:48:00,070 --> 00:48:04,810
that's been with us for a long time that

00:48:01,960 --> 00:48:07,210
we use which means that we when we used

00:48:04,810 --> 00:48:17,080
to have a package we actually test the

00:48:07,210 --> 00:48:18,250
exact same binary that worship so we we

00:48:17,080 --> 00:48:20,380
have our own infrastructure and we're

00:48:18,250 --> 00:48:22,869
using that but maybe we could use OBS it

00:48:20,380 --> 00:48:25,810
will probably work we have a lot of

00:48:22,869 --> 00:48:27,190
tools integrating this bill system so it

00:48:25,810 --> 00:48:29,859
would be made an effort to move away

00:48:27,190 --> 00:48:34,300
from it so I don't see it happening but

00:48:29,859 --> 00:48:35,410
I think well maybe we could could it's

00:48:34,300 --> 00:48:37,150
an open source system you know so we

00:48:35,410 --> 00:48:39,790
could install it on our own servers

00:48:37,150 --> 00:48:42,609
that's a good idea the built-ins that we

00:48:39,790 --> 00:48:46,720
have isn't perfect by far it has its

00:48:42,609 --> 00:48:48,750
problem problems and that is definitely

00:48:46,720 --> 00:48:51,790
something I'm everything but I think

00:48:48,750 --> 00:48:53,590
some of our projects not the server but

00:48:51,790 --> 00:48:57,760
some other products have been looking at

00:48:53,590 --> 00:49:00,340
OBS I've heard some comment about some

00:48:57,760 --> 00:49:04,000
some of our our utilities work looking

00:49:00,340 --> 00:49:06,430
at obvious as a build system so we may

00:49:04,000 --> 00:49:09,700
do that in future that's definitely an

00:49:06,430 --> 00:49:12,760
interesting project for us and you could

00:49:09,700 --> 00:49:14,740
also use that for building your packages

00:49:12,760 --> 00:49:18,609
for the other distributions as well yeah

00:49:14,740 --> 00:49:21,220
windows and mac and whatever i think not

00:49:18,609 --> 00:49:22,390
only of mac okay what windows yeah well

00:49:21,220 --> 00:49:25,150
I was thinking the other Linux

00:49:22,390 --> 00:49:26,350
distributions yeah yeah yes sir and i

00:49:25,150 --> 00:49:30,220
think i think i'm right and saying it's

00:49:26,350 --> 00:49:33,140
getting easier to to move changes

00:49:30,220 --> 00:49:35,670
between build service instances as well

00:49:33,140 --> 00:49:39,359
so that you know if you have you have

00:49:35,670 --> 00:49:40,859
your own build service and you make some

00:49:39,359 --> 00:49:44,880
patches in there or changes whatever

00:49:40,859 --> 00:49:50,039
then pushing those two or pulling them

00:49:44,880 --> 00:49:54,210
from there to OBS is also possible yeah

00:49:50,039 --> 00:49:56,759
I don't know much about OBS I I don't

00:49:54,210 --> 00:49:58,980
real no obvious but that was one of the

00:49:56,759 --> 00:50:01,499
first things people ask me about when I

00:49:58,980 --> 00:50:04,499
came here very yeah are you interesting

00:50:01,499 --> 00:50:06,359
using OBS and I was ok well how does

00:50:04,499 --> 00:50:09,450
this work and then I get an explanation

00:50:06,359 --> 00:50:14,119
so this is great I will definitely bring

00:50:09,450 --> 00:50:16,710
that back to to our release team and

00:50:14,119 --> 00:50:20,910
well it seems we're already on that

00:50:16,710 --> 00:50:23,190
track from from some angle of releasing

00:50:20,910 --> 00:50:25,740
some tools but I will definitely bring

00:50:23,190 --> 00:50:27,869
that this back to the police team and

00:50:25,740 --> 00:50:30,660
see at least can we learn something from

00:50:27,869 --> 00:50:33,390
that so thank you for that so distant

00:50:30,660 --> 00:50:35,249
yeah I think one of the main advantages

00:50:33,390 --> 00:50:37,470
that would be that people in the

00:50:35,249 --> 00:50:40,799
community can help you work on your own

00:50:37,470 --> 00:50:42,450
packages and it becomes more of a you

00:50:40,799 --> 00:50:45,420
know decentralized thing you can you

00:50:42,450 --> 00:50:48,869
could still own your packages even if

00:50:45,420 --> 00:50:50,999
they're hosted on the public OBS you

00:50:48,869 --> 00:50:53,160
know have your own project for that but

00:50:50,999 --> 00:50:56,489
then other people could could branch

00:50:53,160 --> 00:50:59,220
from that and submit changes back to you

00:50:56,489 --> 00:51:00,839
and so on and it all happens yeah some

00:50:59,220 --> 00:51:03,420
some help in maintaining packages is

00:51:00,839 --> 00:51:06,839
always accepted we see the combinatorial

00:51:03,420 --> 00:51:09,690
explosion of platforms of packages and

00:51:06,839 --> 00:51:12,089
well that's we just look at it and we

00:51:09,690 --> 00:51:16,289
support several versions of each distro

00:51:12,089 --> 00:51:17,999
and this kind is an explosion of of of

00:51:16,289 --> 00:51:22,950
the number of packages to maintain so I

00:51:17,999 --> 00:51:25,380
really see that that challenge and some

00:51:22,950 --> 00:51:27,480
way to kind of reduce the the

00:51:25,380 --> 00:51:31,589
engineering effort needed from our side

00:51:27,480 --> 00:51:34,859
would be greatly appreciated yeah thank

00:51:31,589 --> 00:51:37,190
you for the invitation thank you more

00:51:34,859 --> 00:51:37,190
questions

00:51:38,150 --> 00:51:50,240
I hope so I hope to come next year thank

00:51:43,430 --> 00:51:54,250
you I think that's all I saw no fur

00:51:50,240 --> 00:51:54,250

YouTube URL: https://www.youtube.com/watch?v=GqbN-y-6aMk


