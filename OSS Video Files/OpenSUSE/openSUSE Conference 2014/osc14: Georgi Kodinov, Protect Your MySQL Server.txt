Title: osc14: Georgi Kodinov, Protect Your MySQL Server
Publication date: 2014-04-26
Playlist: openSUSE Conference 2014
Description: 
	Ever wondered how secure is MySQL right after being installed ?
Or what's the most secure way of accessing the server ?
Or how to make sure the data you put into it are not accessed in ways you didn't think about ?
If the answers to the above and related questions are yes this session is for you.
We'll also go through the things we've been working on based the 5.7 MySQL development milestones.
Captions: 
	00:00:01,580 --> 00:00:08,849
okay you can leave your computer's for a

00:00:05,759 --> 00:00:10,620
while I think we will get started i hope

00:00:08,849 --> 00:00:14,070
i will give you something more

00:00:10,620 --> 00:00:17,880
interesting than what's on the screen so

00:00:14,070 --> 00:00:20,880
we will talk now on about protecting

00:00:17,880 --> 00:00:23,070
your muscular installation and what to

00:00:20,880 --> 00:00:28,769
do and what not to do when you are

00:00:23,070 --> 00:00:33,090
installing and using karma SQL server ok

00:00:28,769 --> 00:00:34,680
so that's a slide that says that you

00:00:33,090 --> 00:00:41,250
should not make purchasing decisions

00:00:34,680 --> 00:00:46,469
based on what is explained here ok so

00:00:41,250 --> 00:00:51,149
the agenda so I actually went thin and

00:00:46,469 --> 00:00:54,930
downloaded dopants use release and did

00:00:51,149 --> 00:00:57,180
some analysis of the MySQL version in it

00:00:54,930 --> 00:00:58,980
and how it is installed and looked into

00:00:57,180 --> 00:01:03,090
some script so that's what the post

00:00:58,980 --> 00:01:05,489
installation situation is about then we

00:01:03,090 --> 00:01:09,810
will see how to improve that situation

00:01:05,489 --> 00:01:12,260
and some comments common sense things to

00:01:09,810 --> 00:01:16,259
do on top of it to make it more secure

00:01:12,260 --> 00:01:18,720
then more securities if you really want

00:01:16,259 --> 00:01:21,150
to invest into securing your masc

00:01:18,720 --> 00:01:26,040
station I give you some hints on how

00:01:21,150 --> 00:01:27,960
this can be done and then I give you a

00:01:26,040 --> 00:01:31,020
brief overview of the security changes

00:01:27,960 --> 00:01:34,020
in in the upcoming mysql version so the

00:01:31,020 --> 00:01:36,060
57 is our current development version

00:01:34,020 --> 00:01:38,880
and that's where all the new development

00:01:36,060 --> 00:01:41,880
is going so if you want to track that

00:01:38,880 --> 00:01:46,920
that's the place to do it so that's why

00:01:41,880 --> 00:01:49,890
it's 57 here ok so a little bit about me

00:01:46,920 --> 00:01:52,610
I come from from a banking background I

00:01:49,890 --> 00:01:56,880
used to surf as an IT manager in one of

00:01:52,610 --> 00:02:00,180
the banks in my country I been doing

00:01:56,880 --> 00:02:05,310
software development for like 20 years

00:02:00,180 --> 00:02:08,489
now i guess and i am currently leading

00:02:05,310 --> 00:02:10,770
the masker server general team so we

00:02:08,489 --> 00:02:12,330
deal with security with you with

00:02:10,770 --> 00:02:16,380
performance analysis

00:02:12,330 --> 00:02:19,370
and the client tools and I've been with

00:02:16,380 --> 00:02:22,230
maskell since 2006 so I've survived told

00:02:19,370 --> 00:02:24,840
turbulences around the MySQL product

00:02:22,230 --> 00:02:27,000
starting from the Swedish this little

00:02:24,840 --> 00:02:31,290
Swedish company and then inked in Oracle

00:02:27,000 --> 00:02:35,130
currently and I've been speaking to a

00:02:31,290 --> 00:02:39,570
number of conferences most specifically

00:02:35,130 --> 00:02:44,490
mostly on the Oracle events but also on

00:02:39,570 --> 00:02:48,840
open source conferences okay so let's

00:02:44,490 --> 00:02:53,640
start with Zeus 13.1 and see what is in

00:02:48,840 --> 00:02:57,270
it so I'll start with the good news and

00:02:53,640 --> 00:03:01,160
the good news sorry tis a very recent

00:02:57,270 --> 00:03:06,150
small-scale version so 5.6 point 12 is

00:03:01,160 --> 00:03:08,370
only 5 development update releases away

00:03:06,150 --> 00:03:11,850
from what we currently have on our

00:03:08,370 --> 00:03:15,630
website so that's that's great I mean a

00:03:11,850 --> 00:03:18,000
lot of a lot of other distros are far

00:03:15,630 --> 00:03:22,920
away from that so congratulations on

00:03:18,000 --> 00:03:26,690
that it's amazing and what you get by

00:03:22,920 --> 00:03:31,739
that is you get a very very secure

00:03:26,690 --> 00:03:36,510
authentication plugin sha256 password

00:03:31,739 --> 00:03:39,750
plugin so that uses sha256 compared to

00:03:36,510 --> 00:03:43,440
the sha-1 that the court called

00:03:39,750 --> 00:03:46,590
traditional masculine authentication

00:03:43,440 --> 00:03:49,860
protocol uses so sha-1 has known

00:03:46,590 --> 00:03:55,709
problems and passage 82 is better so we

00:03:49,860 --> 00:03:58,950
have that in 56 we also have manual

00:03:55,709 --> 00:04:01,200
passport expiration so if you want to

00:03:58,950 --> 00:04:03,330
force a user to change their passwords

00:04:01,200 --> 00:04:06,780
you now can and that's a very good thing

00:04:03,330 --> 00:04:10,140
to have we also have password strength

00:04:06,780 --> 00:04:12,060
validation and plug-in API for that so

00:04:10,140 --> 00:04:14,730
if you want to implement your password

00:04:12,060 --> 00:04:18,720
strength policy that's a great way of

00:04:14,730 --> 00:04:23,370
doing it we also took steps towards

00:04:18,720 --> 00:04:24,750
eliminating the flaws in supplying

00:04:23,370 --> 00:04:28,800
passwords on the comment

00:04:24,750 --> 00:04:32,420
I don't even want to go on why this is a

00:04:28,800 --> 00:04:36,480
bad idea but it is a bad idea so please

00:04:32,420 --> 00:04:38,700
look into the documentation 56 and see

00:04:36,480 --> 00:04:40,830
what the alternatives are or think long

00:04:38,700 --> 00:04:43,920
and hard whether you need passwords in

00:04:40,830 --> 00:04:48,420
your scripts or not it's another way of

00:04:43,920 --> 00:04:51,840
looking at it we also have better

00:04:48,420 --> 00:04:55,320
support for SSL we have certificate

00:04:51,840 --> 00:04:59,640
revocation lists and key files with pass

00:04:55,320 --> 00:05:02,520
phrases and we also better integrate

00:04:59,640 --> 00:05:05,370
with the ssl library but are basically

00:05:02,520 --> 00:05:09,300
using kids random generation api's

00:05:05,370 --> 00:05:11,940
instead of our own and we also offer

00:05:09,300 --> 00:05:14,580
escape passwords in logs which is

00:05:11,940 --> 00:05:17,040
something that to my surprise we were on

00:05:14,580 --> 00:05:20,280
doing computer recently so now you don't

00:05:17,040 --> 00:05:24,840
get passwords when you do query works

00:05:20,280 --> 00:05:29,570
for example or do backup binary logs and

00:05:24,840 --> 00:05:32,820
so on that's great thing to have and

00:05:29,570 --> 00:05:35,550
there's more good news them that the

00:05:32,820 --> 00:05:37,800
MySQL service is not owned by default

00:05:35,550 --> 00:05:40,919
which means that you have a shot of

00:05:37,800 --> 00:05:43,950
actually configuring it properly before

00:05:40,919 --> 00:05:47,040
it starts so you don't add up with the

00:05:43,950 --> 00:05:49,950
running can secure widely open mask your

00:05:47,040 --> 00:05:54,360
server you end up with something that

00:05:49,950 --> 00:05:57,690
you can control this also separates the

00:05:54,360 --> 00:06:00,060
test RPM which is great I mean all the

00:05:57,690 --> 00:06:03,120
test scripts and all the test setups are

00:06:00,060 --> 00:06:06,240
not in the thing that you install by

00:06:03,120 --> 00:06:09,600
default with all their flaws and they're

00:06:06,240 --> 00:06:13,220
known ways to log in is it too small I

00:06:09,600 --> 00:06:13,220
can try to end

00:06:14,330 --> 00:06:28,800
this would be better okay probably not

00:06:23,510 --> 00:06:31,530
so there's no there's no prepackaged

00:06:28,800 --> 00:06:33,960
database which is great I mean these

00:06:31,530 --> 00:06:36,630
prepackaged databases they typically

00:06:33,960 --> 00:06:39,050
contain a number of user accounts which

00:06:36,630 --> 00:06:41,670
are not very well protected and

00:06:39,050 --> 00:06:45,360
everybody knows how to login as these

00:06:41,670 --> 00:06:48,180
accounts so it's good that it's not in

00:06:45,360 --> 00:06:51,750
the default installation and there's no

00:06:48,180 --> 00:06:53,880
remote access by default so it's you can

00:06:51,750 --> 00:06:59,300
only log in from the local host that's

00:06:53,880 --> 00:07:05,400
great and a good way of doing it but

00:06:59,300 --> 00:07:11,580
there are some not so good news and the

00:07:05,400 --> 00:07:13,820
not so good news is the 56 12 a version

00:07:11,580 --> 00:07:17,610
of the server so this means that it is

00:07:13,820 --> 00:07:22,260
24 TV reported security bugs away from

00:07:17,610 --> 00:07:28,020
our latest binary version on the web it

00:07:22,260 --> 00:07:31,260
also is about plus 500 bug fixes away

00:07:28,020 --> 00:07:34,350
from the current version so it there's a

00:07:31,260 --> 00:07:39,200
lot that we are doing in our release

00:07:34,350 --> 00:07:42,540
update releases GF update releases that

00:07:39,200 --> 00:07:46,260
Zeus users can probably benefit from so

00:07:42,540 --> 00:07:48,810
it's a good consideration point here and

00:07:46,260 --> 00:07:52,530
it also likes the recent enhancements

00:07:48,810 --> 00:07:54,810
that we did today as functions so until

00:07:52,530 --> 00:08:00,750
recently there as functions in mask yo

00:07:54,810 --> 00:08:04,800
could only deal with 128 bits keys which

00:08:00,750 --> 00:08:08,040
is not a lot it's enough for most of the

00:08:04,800 --> 00:08:14,850
things but not really for all things say

00:08:08,040 --> 00:08:18,510
the the CIA recognize the NSA recommends

00:08:14,850 --> 00:08:25,169
that top secret things should be stored

00:08:18,510 --> 00:08:27,960
in encrypted only with 256 bits keys and

00:08:25,169 --> 00:08:33,419
this that wasn't possible until this

00:08:27,960 --> 00:08:36,419
recent release that we have the other

00:08:33,419 --> 00:08:39,029
not so good news is that the mask yo

00:08:36,419 --> 00:08:41,310
secure installation script or weld

00:08:39,029 --> 00:08:45,269
equivalent of it is not run on this

00:08:41,310 --> 00:08:49,079
installation so traditionally mask you

00:08:45,269 --> 00:08:51,449
can with with a non very secure

00:08:49,079 --> 00:08:54,480
installation and then this script that

00:08:51,449 --> 00:08:57,720
you can run to harden it and what the

00:08:54,480 --> 00:09:00,420
script does is it removes the root

00:08:57,720 --> 00:09:04,440
accounts so it puts the passwords to

00:09:00,420 --> 00:09:08,550
root accounts random passwords it puts

00:09:04,440 --> 00:09:11,940
it removes the anonymous access to the

00:09:08,550 --> 00:09:14,880
MySQL server so basically by default all

00:09:11,940 --> 00:09:16,560
users can log in although users from the

00:09:14,880 --> 00:09:20,070
local system can log in to the mask

00:09:16,560 --> 00:09:22,560
you'll serve and can do not very nice

00:09:20,070 --> 00:09:25,949
stuff to it so it's not a very good idea

00:09:22,560 --> 00:09:28,769
to have that it's really convenient when

00:09:25,949 --> 00:09:32,040
you start but for production use you it

00:09:28,769 --> 00:09:34,800
should not be there and there's no

00:09:32,040 --> 00:09:37,430
password strength checks the same T

00:09:34,800 --> 00:09:40,019
passwords for some of the accounts and

00:09:37,430 --> 00:09:42,750
anybody gets full access to the test

00:09:40,019 --> 00:09:45,449
database there is a test database and

00:09:42,750 --> 00:09:48,570
anybody can create tables in it and

00:09:45,449 --> 00:09:53,630
that's bad because they can well fill

00:09:48,570 --> 00:09:57,089
your database files and directories and

00:09:53,630 --> 00:09:59,130
the other thing that kind of sends me

00:09:57,089 --> 00:10:01,230
personally because I've been involved

00:09:59,130 --> 00:10:04,680
into developing this to the mask yo

00:10:01,230 --> 00:10:06,930
config editor is not in the client tools

00:10:04,680 --> 00:10:10,440
package which I find a bit strange

00:10:06,930 --> 00:10:14,310
because it's a client tool and it's kind

00:10:10,440 --> 00:10:17,279
of central to our policy about avoiding

00:10:14,310 --> 00:10:20,370
passwords on the comment line so this is

00:10:17,279 --> 00:10:23,130
a tool that creates encrypted files on

00:10:20,370 --> 00:10:28,190
the disk in your home directory readable

00:10:23,130 --> 00:10:31,170
only by you and it stores hostnames

00:10:28,190 --> 00:10:34,410
usernames and passwords into these files

00:10:31,170 --> 00:10:36,899
and in a way that the client library can

00:10:34,410 --> 00:10:38,550
pick up the news so instead of

00:10:36,899 --> 00:10:40,589
specifying a possible

00:10:38,550 --> 00:10:43,740
turn your comment line you can store it

00:10:40,589 --> 00:10:45,950
in that file and then care for that file

00:10:43,740 --> 00:10:49,529
at a central location because it can

00:10:45,950 --> 00:10:52,170
handle a number of passwords this way we

00:10:49,529 --> 00:10:54,990
call them login pad so we can handle

00:10:52,170 --> 00:10:57,450
multiple login putts in a single file

00:10:54,990 --> 00:10:59,910
and you have only a single file to

00:10:57,450 --> 00:11:05,339
protect not a bunch of scripts spread

00:10:59,910 --> 00:11:07,350
everywhere so that's why i would like to

00:11:05,339 --> 00:11:11,610
basically see it in the default

00:11:07,350 --> 00:11:14,399
installation this tool the other thing

00:11:11,610 --> 00:11:16,589
that raised an eyebrow for me was that

00:11:14,399 --> 00:11:19,709
the federated plugin was installed by

00:11:16,589 --> 00:11:22,680
default I find this really interesting

00:11:19,709 --> 00:11:25,620
design choice because the federated

00:11:22,680 --> 00:11:28,050
plugin is known to have shortcomings and

00:11:25,620 --> 00:11:33,570
that's why we have it disabled to begin

00:11:28,050 --> 00:11:36,450
with in our code so i probably need to

00:11:33,570 --> 00:11:39,000
check with you guys what need do you see

00:11:36,450 --> 00:11:41,970
for this federated plugin and how can we

00:11:39,000 --> 00:11:43,500
address it better but i certainly don't

00:11:41,970 --> 00:11:51,060
think that this should be enabled by

00:11:43,500 --> 00:11:54,839
default also the archive plugin its

00:11:51,060 --> 00:11:57,000
store it's enabled on the configuration

00:11:54,839 --> 00:11:59,940
file but it's not really needed because

00:11:57,000 --> 00:12:02,760
we compile that by default there's no

00:11:59,940 --> 00:12:07,399
such plugin so you get an error on

00:12:02,760 --> 00:12:09,690
startup by default which is well and

00:12:07,399 --> 00:12:12,149
there are some testing only

00:12:09,690 --> 00:12:15,240
authentication plugins which i found in

00:12:12,149 --> 00:12:17,970
the silver package so these plugins are

00:12:15,240 --> 00:12:20,250
really dangerous because they can allow

00:12:17,970 --> 00:12:23,070
everybody to access the server without a

00:12:20,250 --> 00:12:28,050
password if one can create accounts with

00:12:23,070 --> 00:12:30,750
with this authentication plugins so they

00:12:28,050 --> 00:12:32,699
are great for testing because everybody

00:12:30,750 --> 00:12:35,490
knows how they behave and they are

00:12:32,699 --> 00:12:39,750
scriptable but they are not to be in a

00:12:35,490 --> 00:12:42,899
production server i think also i would

00:12:39,750 --> 00:12:44,810
really love to see ssl certificates in

00:12:42,899 --> 00:12:47,220
the installation even so even

00:12:44,810 --> 00:12:50,160
self-signed ones there is a way to

00:12:47,220 --> 00:12:50,460
generate them using copán ssl command

00:12:50,160 --> 00:12:53,430
line

00:12:50,460 --> 00:12:56,520
tools it's pretty easy we also supply

00:12:53,430 --> 00:13:00,840
some sample ones in in our server

00:12:56,520 --> 00:13:04,800
distribution so yeah it's it's a good

00:13:00,840 --> 00:13:08,700
thing to have SSL in general is and also

00:13:04,800 --> 00:13:11,760
the secure file privileged configuration

00:13:08,700 --> 00:13:16,110
variables is said to now this basically

00:13:11,760 --> 00:13:18,480
means that any user with SQL access can

00:13:16,110 --> 00:13:23,330
write and read anywhere on the file

00:13:18,480 --> 00:13:27,930
system even remotely so that's dangerous

00:13:23,330 --> 00:13:31,050
that's typically I would set that to a

00:13:27,930 --> 00:13:33,690
to a directory that is a designated

00:13:31,050 --> 00:13:36,630
directory and restricted access this way

00:13:33,690 --> 00:13:38,340
because yes you can typically trust the

00:13:36,630 --> 00:13:40,560
mask your server and climate it through

00:13:38,340 --> 00:13:49,380
the mask you account but still wit so

00:13:40,560 --> 00:13:53,790
well I'll go call okay and some more

00:13:49,380 --> 00:13:57,690
things I mentioned this sha-256 password

00:13:53,790 --> 00:14:01,020
plug-in it can fall back to RSA keys if

00:13:57,690 --> 00:14:02,720
you don't want to deal with ssl so if

00:14:01,020 --> 00:14:05,790
you only want to strengthen

00:14:02,720 --> 00:14:08,400
authentication but your typical kind of

00:14:05,790 --> 00:14:11,490
query exchange you would like to keep it

00:14:08,400 --> 00:14:14,850
unencrypted then you can supply a set of

00:14:11,490 --> 00:14:18,660
RSA keys to to that plug-in and it will

00:14:14,850 --> 00:14:21,360
only encrypt the exchange sickness and

00:14:18,660 --> 00:14:25,200
there's also no query logging by default

00:14:21,360 --> 00:14:28,380
I think it's probably just me because

00:14:25,200 --> 00:14:31,410
well run from a banking background but I

00:14:28,380 --> 00:14:34,140
believe that everybody should lock stuff

00:14:31,410 --> 00:14:36,390
that they are doing and that's not done

00:14:34,140 --> 00:14:38,070
by default it's easy to turn it off if

00:14:36,390 --> 00:14:40,820
you don't need it but I think it's

00:14:38,070 --> 00:14:44,280
probably a good idea to have it on and

00:14:40,820 --> 00:14:48,270
also nice qld listen so no network

00:14:44,280 --> 00:14:50,220
interfaces it only accepts logins from

00:14:48,270 --> 00:14:52,530
the local host but it listens on all

00:14:50,220 --> 00:14:56,810
interfaces so that's another small

00:14:52,530 --> 00:15:02,010
loophole that probably one can cause and

00:14:56,810 --> 00:15:04,950
speaking about ssl i have a random not

00:15:02,010 --> 00:15:08,100
so funny story so this is actual

00:15:04,950 --> 00:15:13,220
muscular code i don't know if you can

00:15:08,100 --> 00:15:13,220
see the yellow lines here

00:15:17,939 --> 00:15:24,889
so the first line is reading a 4 bytes

00:15:24,919 --> 00:15:32,729
integer from from the network packet and

00:15:28,259 --> 00:15:37,039
the second line is copying into a local

00:15:32,729 --> 00:15:41,419
buffer data using that length and

00:15:37,039 --> 00:15:50,939
without checking it really so the

00:15:41,419 --> 00:15:53,699
changes with it is the green part so we

00:15:50,939 --> 00:15:57,479
we added those changes just to check

00:15:53,699 --> 00:16:01,619
this bounce and verify all these lengths

00:15:57,479 --> 00:16:04,439
and all of that so it's a I just wanted

00:16:01,619 --> 00:16:07,589
to reiterate how easy it is to to be

00:16:04,439 --> 00:16:11,039
making carers like that and no project

00:16:07,589 --> 00:16:13,949
is immune to to such errors so that's

00:16:11,039 --> 00:16:18,569
why I really believe that we should all

00:16:13,949 --> 00:16:22,649
be working on finding this so yeah

00:16:18,569 --> 00:16:25,229
that's my funny story here by the way

00:16:22,649 --> 00:16:28,769
this is nowhere near production code

00:16:25,229 --> 00:16:31,559
it's one of the early 56 development

00:16:28,769 --> 00:16:34,769
releases which got fixed before it got

00:16:31,559 --> 00:16:36,869
released as GA but its own large parts

00:16:34,769 --> 00:16:39,479
of all the history is there and you can

00:16:36,869 --> 00:16:41,909
find that out there actually this

00:16:39,479 --> 00:16:47,220
screenshot here is from lunch but you

00:16:41,909 --> 00:16:51,149
probably recognize the four month okay

00:16:47,220 --> 00:16:53,459
so back to back to our assessment i

00:16:51,149 --> 00:16:57,059
would say that what you get in by

00:16:53,459 --> 00:16:59,669
default in sous sur 13 is a is a

00:16:57,059 --> 00:17:01,349
development installation so basically

00:16:59,669 --> 00:17:06,089
it's not something that you can put

00:17:01,349 --> 00:17:09,120
safely in production maybe that's that's

00:17:06,089 --> 00:17:12,329
the purpose so that's the intent but i'm

00:17:09,120 --> 00:17:17,059
just saying that it's not really secured

00:17:12,329 --> 00:17:17,059
by default so how to have them it

00:17:17,880 --> 00:17:23,430
again common sense mask your secure

00:17:20,520 --> 00:17:25,980
installation it's called docked for a

00:17:23,430 --> 00:17:28,650
reason it secures your installation so

00:17:25,980 --> 00:17:31,110
it's really good if you run it I kind of

00:17:28,650 --> 00:17:35,670
run it there's no harm in running it

00:17:31,110 --> 00:17:37,890
twice so if you have run it already you

00:17:35,670 --> 00:17:40,590
can always run it again it will make no

00:17:37,890 --> 00:17:43,350
changes but well you will have the

00:17:40,590 --> 00:17:47,850
assurance that all these popular

00:17:43,350 --> 00:17:49,740
loopholes are post also review and tris

00:17:47,850 --> 00:17:53,690
trick the network interfaces that the

00:17:49,740 --> 00:17:56,340
server listen song there is a port

00:17:53,690 --> 00:17:59,010
server listen address i think in the

00:17:56,340 --> 00:18:02,160
config parameters that can allow you to

00:17:59,010 --> 00:18:04,770
restrict the interfaces you are

00:18:02,160 --> 00:18:07,680
listening come if you expect to get your

00:18:04,770 --> 00:18:10,800
mask you'll connections from say network

00:18:07,680 --> 00:18:15,260
card 0 you should listen on your network

00:18:10,800 --> 00:18:18,300
card zero and no more than that also

00:18:15,260 --> 00:18:21,570
generate ssl keys and make sure that the

00:18:18,300 --> 00:18:23,220
server can talk as a cell and i'm not

00:18:21,570 --> 00:18:28,490
saying that you should go all the way

00:18:23,220 --> 00:18:31,230
and enable well certificates

00:18:28,490 --> 00:18:33,690
authorization and require it and all of

00:18:31,230 --> 00:18:36,840
that but it should be there should you

00:18:33,690 --> 00:18:39,630
decide to use it because people think

00:18:36,840 --> 00:18:42,570
that it is hard to basically generate a

00:18:39,630 --> 00:18:45,690
set of ssl keys but it is not that hard

00:18:42,570 --> 00:18:48,360
and can be done really easy actually we

00:18:45,690 --> 00:18:53,670
are looking into providing scripts that

00:18:48,360 --> 00:18:56,390
will make that fall for you because it's

00:18:53,670 --> 00:18:59,700
not really a good idea to be shipping

00:18:56,390 --> 00:19:02,250
keys in the distribution I mean they

00:18:59,700 --> 00:19:06,660
have to be generated on the computer

00:19:02,250 --> 00:19:10,200
where the server is installed and again

00:19:06,660 --> 00:19:15,450
the easiest thing to do is to enable

00:19:10,200 --> 00:19:17,370
logging there is there's a number of

00:19:15,450 --> 00:19:19,620
logs that the mask your server can

00:19:17,370 --> 00:19:23,700
produce that is the query log there is

00:19:19,620 --> 00:19:26,610
the diode o'clock API there is an audit

00:19:23,700 --> 00:19:28,470
log plug in depth we provide basically

00:19:26,610 --> 00:19:31,350
logging is good and you should have it

00:19:28,470 --> 00:19:36,210
and also make sure that you have a low

00:19:31,350 --> 00:19:39,179
bakit policy for example our lock audit

00:19:36,210 --> 00:19:41,130
log plugin has distinct that whenever a

00:19:39,179 --> 00:19:43,440
fire reaches certain size he just

00:19:41,130 --> 00:19:45,539
switches to to another fire and leaves

00:19:43,440 --> 00:19:48,750
that file with the time stamp into its

00:19:45,539 --> 00:19:50,640
name so you will need to have some sort

00:19:48,750 --> 00:19:54,870
of a backup policy around up so you

00:19:50,640 --> 00:19:57,480
don't lose locks when you need them also

00:19:54,870 --> 00:19:59,340
make sure you remove for the extra user

00:19:57,480 --> 00:20:02,039
accounts and privileges the test

00:19:59,340 --> 00:20:05,280
database is a great example there was

00:20:02,039 --> 00:20:07,409
also a number of fruit accounts defined

00:20:05,280 --> 00:20:09,840
for different interfaces which were

00:20:07,409 --> 00:20:14,429
really redundant and we remove them in

00:20:09,840 --> 00:20:17,070
57 and also make sure that you don't

00:20:14,429 --> 00:20:20,010
ship files in the packages that you

00:20:17,070 --> 00:20:23,520
don't really need example being this

00:20:20,010 --> 00:20:26,010
authentication projects and also

00:20:23,520 --> 00:20:28,530
schedule regular backups that's the

00:20:26,010 --> 00:20:30,740
simplest security tip that i can give

00:20:28,530 --> 00:20:41,130
you but also the most important one

00:20:30,740 --> 00:20:44,220
backups safe data okay so i try to

00:20:41,130 --> 00:20:47,010
outline few things that one can do after

00:20:44,220 --> 00:20:49,559
at certain stages of using the mysql

00:20:47,010 --> 00:20:53,220
server so we start with the post

00:20:49,559 --> 00:20:56,700
installation positive post application

00:20:53,220 --> 00:20:58,590
installation so again remove for the

00:20:56,700 --> 00:21:01,620
extra user account created by the

00:20:58,590 --> 00:21:03,720
application remove and maximally

00:21:01,620 --> 00:21:05,549
restrict the grants that the application

00:21:03,720 --> 00:21:08,070
did some applications are really

00:21:05,549 --> 00:21:11,010
promiscuous they create two root users

00:21:08,070 --> 00:21:15,030
for no reasons and you shouldn't live

00:21:11,010 --> 00:21:17,400
with that also make sure the user

00:21:15,030 --> 00:21:21,780
accounts authenticate using a reliable

00:21:17,400 --> 00:21:24,360
method some older MySQL applications

00:21:21,780 --> 00:21:26,669
don't are not really aware that there's

00:21:24,360 --> 00:21:31,710
no choice of authentication method so

00:21:26,669 --> 00:21:35,159
you should well do that as a very savvy

00:21:31,710 --> 00:21:37,289
DBA also clean up the extra temp files

00:21:35,159 --> 00:21:40,919
left by the application some of these

00:21:37,289 --> 00:21:44,290
temp files and extra plugins and test

00:21:40,919 --> 00:21:46,480
things can be abused really badly

00:21:44,290 --> 00:21:51,700
so you should make sure you have no

00:21:46,480 --> 00:21:53,620
extras in your installation also make

00:21:51,700 --> 00:21:55,390
sure the backup covers your new

00:21:53,620 --> 00:21:57,310
application because that's a very

00:21:55,390 --> 00:21:59,320
typical flow I mean you have a backup

00:21:57,310 --> 00:22:01,540
system you install an application and

00:21:59,320 --> 00:22:05,560
it's not backed up but you don't know it

00:22:01,540 --> 00:22:08,680
and also added the server configuration

00:22:05,560 --> 00:22:11,170
for changes and revert the ones that you

00:22:08,680 --> 00:22:12,940
don't like your server configuration

00:22:11,170 --> 00:22:17,140
should be known to you application

00:22:12,940 --> 00:22:22,630
should not really well abuse your rights

00:22:17,140 --> 00:22:27,850
to configure your server okay some tips

00:22:22,630 --> 00:22:30,400
for mask your daily use so keep your

00:22:27,850 --> 00:22:32,830
installation up-to-date we regularly

00:22:30,400 --> 00:22:35,650
release security updates and we

00:22:32,830 --> 00:22:38,440
typically disclose what security bugs

00:22:35,650 --> 00:22:40,570
are fixed in each release it's important

00:22:38,440 --> 00:22:42,910
to be following that because some of

00:22:40,570 --> 00:22:45,910
these can be exploited by malicious

00:22:42,910 --> 00:22:48,400
users and there's due to mask your being

00:22:45,910 --> 00:22:51,160
so popular there's a lot of script

00:22:48,400 --> 00:22:54,460
packages that automate that so even not

00:22:51,160 --> 00:22:59,590
very savvy users can abuse those flaws

00:22:54,460 --> 00:23:02,890
so make sure it's up to date also

00:22:59,590 --> 00:23:06,450
monitor your server related server logs

00:23:02,890 --> 00:23:09,250
and security-related statistics we have

00:23:06,450 --> 00:23:11,890
we have a number of statistics that you

00:23:09,250 --> 00:23:15,760
can enable through performance command

00:23:11,890 --> 00:23:18,370
in other ways the status variables you

00:23:15,760 --> 00:23:21,550
should make a good pattern of monitoring

00:23:18,370 --> 00:23:23,620
this and finding unusual things that go

00:23:21,550 --> 00:23:25,740
on that are going on with your server

00:23:23,620 --> 00:23:28,810
also monitor the server configuration

00:23:25,740 --> 00:23:31,690
some of the most popular exploits deal

00:23:28,810 --> 00:23:38,230
with altering the mask yo configuration

00:23:31,690 --> 00:23:41,590
files so bony todos and also regularly

00:23:38,230 --> 00:23:45,540
probe your defend defenses by trying bad

00:23:41,590 --> 00:23:48,940
things on purpose there are some

00:23:45,540 --> 00:23:51,040
exploits scripts on the wild try running

00:23:48,940 --> 00:23:56,070
them against your server and see if you

00:23:51,040 --> 00:23:59,160
are actually vulnerable there's also

00:23:56,070 --> 00:24:01,760
the most basic common-sense thing to do

00:23:59,160 --> 00:24:04,460
is to perform regular emergency drills

00:24:01,760 --> 00:24:08,760
make sure you can restore from a backup

00:24:04,460 --> 00:24:11,550
make sure you can check some your data

00:24:08,760 --> 00:24:14,550
make make sure that you can compare your

00:24:11,550 --> 00:24:16,830
data with some replica or something like

00:24:14,550 --> 00:24:19,470
that and try that I mean it's one

00:24:16,830 --> 00:24:21,600
wanting to know that you can eventually

00:24:19,470 --> 00:24:24,960
do it and the other thing to help the

00:24:21,600 --> 00:24:27,990
muscle memory of the link it and also

00:24:24,960 --> 00:24:30,480
set procedures on maintaining your user

00:24:27,990 --> 00:24:32,940
account base make sure that you have

00:24:30,480 --> 00:24:35,370
proper procedures on assigning

00:24:32,940 --> 00:24:39,720
credentials proper procedures on

00:24:35,370 --> 00:24:46,320
rotating them and well in general

00:24:39,720 --> 00:24:49,890
tightening the security this way okay so

00:24:46,320 --> 00:24:56,730
let's see what more can we do outside of

00:24:49,890 --> 00:25:00,990
common sense so the advice that I have

00:24:56,730 --> 00:25:03,930
to you is consider turning off tcp/ip if

00:25:00,990 --> 00:25:06,030
your setup allows it so basically there

00:25:03,930 --> 00:25:07,860
is a parameter in the masker

00:25:06,030 --> 00:25:10,620
configuration file that allows you to

00:25:07,860 --> 00:25:13,080
turn tcp/ip off but it still leaves

00:25:10,620 --> 00:25:16,550
unique sockets and windows to main

00:25:13,080 --> 00:25:19,350
sockets on so if you are running your

00:25:16,550 --> 00:25:21,750
web server for example you are only an

00:25:19,350 --> 00:25:24,390
exclusive client on the same host then

00:25:21,750 --> 00:25:27,480
you don't really need tcp/ip so why not

00:25:24,390 --> 00:25:29,550
turn it off I mean the more of the less

00:25:27,480 --> 00:25:32,820
happiness you have to abuse your mouse

00:25:29,550 --> 00:25:36,420
cursor over the better it is and also if

00:25:32,820 --> 00:25:39,480
you need tcp/ip you make sure that you

00:25:36,420 --> 00:25:42,540
at least give a serious consideration of

00:25:39,480 --> 00:25:47,760
using SSL with it even self-signed

00:25:42,540 --> 00:25:50,190
protocols will sorry keys will do so it

00:25:47,760 --> 00:25:53,700
does not need to be some expensive

00:25:50,190 --> 00:25:58,190
server certificate or something and also

00:25:53,700 --> 00:26:02,460
make sure that you use SSL certificate

00:25:58,190 --> 00:26:04,050
verification so your users can present a

00:26:02,460 --> 00:26:07,320
certificate to the server and the server

00:26:04,050 --> 00:26:10,200
can request that they do by

00:26:07,320 --> 00:26:13,200
using this syntax grant to require

00:26:10,200 --> 00:26:16,350
cypher assurance or subject that's part

00:26:13,200 --> 00:26:18,540
of your question and also be careful

00:26:16,350 --> 00:26:21,390
with the directories that you give to

00:26:18,540 --> 00:26:23,820
the mysql server so temporary directory

00:26:21,390 --> 00:26:26,760
data directory the secure file

00:26:23,820 --> 00:26:29,040
privileged directory where you can read

00:26:26,760 --> 00:26:31,470
and write your plug-in directory these

00:26:29,040 --> 00:26:34,560
are all very sensitive directories and a

00:26:31,470 --> 00:26:39,600
very common exploit points so make sure

00:26:34,560 --> 00:26:45,290
you have good handle of this and even

00:26:39,600 --> 00:26:52,200
more steps make a habit or automated

00:26:45,290 --> 00:26:54,150
well alarms around your locks so that

00:26:52,200 --> 00:26:56,640
means that you have to have login come

00:26:54,150 --> 00:26:59,220
to begin with but then when you have it

00:26:56,640 --> 00:27:01,680
you can make use of it and there's also

00:26:59,220 --> 00:27:04,260
things that you can do to go outside of

00:27:01,680 --> 00:27:07,620
the logging that the server does I mean

00:27:04,260 --> 00:27:09,600
you're really sensitive data you can

00:27:07,620 --> 00:27:11,850
create some automated triggers that

00:27:09,600 --> 00:27:15,510
track changes into them and use that as

00:27:11,850 --> 00:27:18,180
a application logic logging and so on so

00:27:15,510 --> 00:27:21,300
the salaat one can do in a way of

00:27:18,180 --> 00:27:23,940
logging also consider using external

00:27:21,300 --> 00:27:27,300
authentication mask your supports pump

00:27:23,940 --> 00:27:29,220
l-dub windows domain all of these and

00:27:27,300 --> 00:27:33,140
they have a very mature and very

00:27:29,220 --> 00:27:37,680
well-developed security practices around

00:27:33,140 --> 00:27:43,470
storing credentials so you can just make

00:27:37,680 --> 00:27:45,870
use of them and also if you decide to do

00:27:43,470 --> 00:27:48,300
passwords inside mask yo and use the

00:27:45,870 --> 00:27:50,820
masculinity fault indication there is a

00:27:48,300 --> 00:27:53,070
plug-in that will enforce at least some

00:27:50,820 --> 00:27:55,560
password policy like minimum password

00:27:53,070 --> 00:28:00,570
length types of characters in the

00:27:55,560 --> 00:28:03,480
password and so on and also take a good

00:28:00,570 --> 00:28:06,630
and hard look into your scripts and try

00:28:03,480 --> 00:28:09,000
to understand why you need to use

00:28:06,630 --> 00:28:13,020
passwords in your scripts it's a very

00:28:09,000 --> 00:28:15,600
bad practice and very secure one so we

00:28:13,020 --> 00:28:20,210
have we have a remedy for that we have

00:28:15,600 --> 00:28:20,210
an alternative you should if

00:28:22,620 --> 00:28:29,200
login parts is something that we call

00:28:25,780 --> 00:28:31,480
these Kent combinations of username host

00:28:29,200 --> 00:28:34,030
name and a password that are starting

00:28:31,480 --> 00:28:36,670
the into this file bi masc config editor

00:28:34,030 --> 00:28:39,970
and then you can call it by name like

00:28:36,670 --> 00:28:41,890
say I want to log in from ask my SQL

00:28:39,970 --> 00:28:52,150
command line utility using this login

00:28:41,890 --> 00:28:53,890
path well we needed it platform

00:28:52,150 --> 00:28:57,090
independence so that's why we created

00:28:53,890 --> 00:29:02,140
one there's also a number of voice

00:28:57,090 --> 00:29:05,050
implementation of that like the the mac

00:29:02,140 --> 00:29:08,230
OS password stored there is also a

00:29:05,050 --> 00:29:11,470
windows password store and probably g

00:29:08,230 --> 00:29:13,720
conf d can be abused for that too so

00:29:11,470 --> 00:29:16,090
there's a number of platform dependent

00:29:13,720 --> 00:29:17,950
ways but we wanted our own platform

00:29:16,090 --> 00:29:24,550
independent way because then you can

00:29:17,950 --> 00:29:28,480
just grab your files and reuse them ok

00:29:24,550 --> 00:29:31,900
since we are a bit out of time i will

00:29:28,480 --> 00:29:38,410
publish my the rest of my presentation

00:29:31,900 --> 00:29:42,880
online so there's some concrete ok ok

00:29:38,410 --> 00:29:45,910
then I will so on this slide I have some

00:29:42,880 --> 00:29:48,790
of the typical parameters that you would

00:29:45,910 --> 00:29:52,780
like to set when you want to make your

00:29:48,790 --> 00:29:55,690
mask you installation more secure so we

00:29:52,780 --> 00:29:57,880
start with secure file brief that's a

00:29:55,690 --> 00:30:00,460
that should be set to a designated

00:29:57,880 --> 00:30:03,520
director so basically those that is the

00:30:00,460 --> 00:30:07,420
directory where the server can read and

00:30:03,520 --> 00:30:09,610
write us invoked through SQL commands

00:30:07,420 --> 00:30:13,630
and that's well you want to restrict

00:30:09,610 --> 00:30:15,400
that believe me especially the writing

00:30:13,630 --> 00:30:18,900
part I've seen some very creative

00:30:15,400 --> 00:30:23,170
exploits abusing that writing part and

00:30:18,900 --> 00:30:25,600
well doing funny things with the we'd

00:30:23,170 --> 00:30:31,240
say the database directory and the f

00:30:25,600 --> 00:30:32,860
aronson it's scary also symbolic links

00:30:31,240 --> 00:30:34,840
that there is a very

00:30:32,860 --> 00:30:37,510
all that says whether the muscular

00:30:34,840 --> 00:30:40,870
server should follow symbolic links I

00:30:37,510 --> 00:30:44,290
suggest you set it to know it's safer

00:30:40,870 --> 00:30:47,620
this way also the default storage engine

00:30:44,290 --> 00:30:50,290
it's by default in ODB but if it's not

00:30:47,620 --> 00:30:54,040
in your config files you should be

00:30:50,290 --> 00:30:56,650
really well aware or on why it is not

00:30:54,040 --> 00:31:00,580
because well my Ison has a number of

00:30:56,650 --> 00:31:06,070
problems like well a seat related

00:31:00,580 --> 00:31:09,280
problems and see no DB does not logging

00:31:06,070 --> 00:31:11,130
I cannot stress enough how important it

00:31:09,280 --> 00:31:14,559
is to have at least some sort of a

00:31:11,130 --> 00:31:16,750
flogging for your server and we actually

00:31:14,559 --> 00:31:19,090
have one built in so you don't need

00:31:16,750 --> 00:31:22,600
plugins or anything fancy you just turn

00:31:19,090 --> 00:31:27,730
this option of on sorry and you get

00:31:22,600 --> 00:31:29,410
logging and also there is an option to

00:31:27,730 --> 00:31:32,110
control whether you want to mask

00:31:29,410 --> 00:31:34,270
passwords in your locks it's off by

00:31:32,110 --> 00:31:38,830
default again but you should make sure

00:31:34,270 --> 00:31:41,049
it's off that's locro also skip

00:31:38,830 --> 00:31:44,770
networking that's the option that I

00:31:41,049 --> 00:31:46,840
mentioned these terms of tcp/ip I

00:31:44,770 --> 00:31:48,970
strongly recommend that you should turn

00:31:46,840 --> 00:31:52,809
that to one it's off by default of

00:31:48,970 --> 00:31:55,660
course if you can afford it and also SSL

00:31:52,809 --> 00:31:57,700
options there's a number of them they

00:31:55,660 --> 00:31:59,770
are all well documented you need to

00:31:57,700 --> 00:32:02,860
supply some key material to the mask yo

00:31:59,770 --> 00:32:05,620
server in order for it to be able to run

00:32:02,860 --> 00:32:11,080
SSL and that those are a very good

00:32:05,620 --> 00:32:14,440
options to to check and set and the list

00:32:11,080 --> 00:32:16,960
goes on plug in there that's the

00:32:14,440 --> 00:32:19,450
directory where the server will go and

00:32:16,960 --> 00:32:22,240
look for plugins when you do install

00:32:19,450 --> 00:32:24,669
plugin that's obviously a very sensitive

00:32:22,240 --> 00:32:27,580
directory because if people can write to

00:32:24,669 --> 00:32:29,799
it then they can basically inject

00:32:27,580 --> 00:32:33,970
executable code into the running server

00:32:29,799 --> 00:32:36,730
which is well scary again so make sure

00:32:33,970 --> 00:32:39,910
it's well controlled this directory and

00:32:36,730 --> 00:32:41,860
set to a place where you only have the

00:32:39,910 --> 00:32:44,290
plugins that you actually want to have

00:32:41,860 --> 00:32:46,799
there and nobody else can add stuff to

00:32:44,290 --> 00:32:51,010
the data

00:32:46,799 --> 00:32:54,460
there is also a chroot jail that's very

00:32:51,010 --> 00:32:57,700
popular UNIX technique well protecting a

00:32:54,460 --> 00:33:01,480
filesystem mask your supports it so look

00:32:57,700 --> 00:33:04,330
into it if you feel like it also core

00:33:01,480 --> 00:33:07,990
file generation should be off by default

00:33:04,330 --> 00:33:10,480
now core files have sensitive data into

00:33:07,990 --> 00:33:17,440
them so let's not produce them on a

00:33:10,480 --> 00:33:19,960
production system okay so the data

00:33:17,440 --> 00:33:23,049
encryption standard functions encrypt

00:33:19,960 --> 00:33:25,240
and decrypt they can operate with the

00:33:23,049 --> 00:33:28,240
key that's actually stored in a file and

00:33:25,240 --> 00:33:30,130
that is much better than supplying the

00:33:28,240 --> 00:33:32,409
key as an argument to the function

00:33:30,130 --> 00:33:36,700
because then the key gets locked into

00:33:32,409 --> 00:33:39,580
the hooks which is kind of well define

00:33:36,700 --> 00:33:43,539
the purpose of encryption so the mysql

00:33:39,580 --> 00:33:46,270
server supports this desk key file and i

00:33:43,539 --> 00:33:50,950
suggest you look into using cated so

00:33:46,270 --> 00:33:53,230
it's a good idea there's also an option

00:33:50,950 --> 00:33:55,659
read-only I know that I'm pushing it

00:33:53,230 --> 00:33:57,429
with this one but i decided to mention

00:33:55,659 --> 00:33:59,440
it so basically this turns the mouse

00:33:57,429 --> 00:34:02,500
cursor going to eat only think you

00:33:59,440 --> 00:34:08,109
cannot write data into it that's useful

00:34:02,500 --> 00:34:10,710
in some places and ok so the temp

00:34:08,109 --> 00:34:13,480
directory it should be a designated

00:34:10,710 --> 00:34:15,520
directory it should not be your regular

00:34:13,480 --> 00:34:18,339
temp directory I've seen a lot of

00:34:15,520 --> 00:34:20,800
exploits that actually go and right into

00:34:18,339 --> 00:34:22,389
the temp directory the files that the

00:34:20,800 --> 00:34:26,909
mask your server is supposed to produce

00:34:22,389 --> 00:34:29,409
and to inject scope this way so it's not

00:34:26,909 --> 00:34:33,490
really a good idea to have it open for

00:34:29,409 --> 00:34:35,619
all applications and it's very easy to

00:34:33,490 --> 00:34:40,810
just move it away from the default time

00:34:35,619 --> 00:34:45,310
so please consider doing that ok and

00:34:40,810 --> 00:34:47,470
finally five minutes no more on the on

00:34:45,310 --> 00:34:50,790
the new things that we've been working

00:34:47,470 --> 00:34:55,440
on for the last year and a half almost

00:34:50,790 --> 00:34:57,670
so we stir I will go bye-bye DMR

00:34:55,440 --> 00:34:58,540
development milestone releases that's

00:34:57,670 --> 00:35:02,260
what the

00:34:58,540 --> 00:35:05,770
deviation is flow okay so the first one

00:35:02,260 --> 00:35:08,770
was released on 23rd of apo last year

00:35:05,770 --> 00:35:11,170
and it contains all the clock plugging

00:35:08,770 --> 00:35:15,670
that now works we told involved so

00:35:11,170 --> 00:35:17,760
that's part of the applica part of the

00:35:15,670 --> 00:35:20,320
enterprise offering we are kind of

00:35:17,760 --> 00:35:23,950
incorporating with some existing code

00:35:20,320 --> 00:35:28,060
heating systems that solar cookers so we

00:35:23,950 --> 00:35:33,850
kept out there we introduced this mask

00:35:28,060 --> 00:35:36,400
yo config editor program it's well it

00:35:33,850 --> 00:35:40,750
has been backported 256 since the since

00:35:36,400 --> 00:35:43,480
then but it started in 571 also we have

00:35:40,750 --> 00:35:45,910
syslog option to damask yo command-line

00:35:43,480 --> 00:35:49,110
client some some people would like to

00:35:45,910 --> 00:35:52,780
lock all of their interactive commands

00:35:49,110 --> 00:35:57,580
into the syslog and mask you know caters

00:35:52,780 --> 00:36:00,820
for dub we also marked the 341 password

00:35:57,580 --> 00:36:02,980
formats as deprecated so those of you

00:36:00,820 --> 00:36:05,920
that are aware that mask you'll actually

00:36:02,980 --> 00:36:08,050
has two native authentication methods

00:36:05,920 --> 00:36:11,740
should also be aware that the old one is

00:36:08,050 --> 00:36:15,400
here like that and it's time for it to

00:36:11,740 --> 00:36:21,990
go so make sure your database does not

00:36:15,400 --> 00:36:25,000
have those short caches the next DMR we

00:36:21,990 --> 00:36:27,130
require an explicit authentication

00:36:25,000 --> 00:36:31,240
plugin for all users this is part of

00:36:27,130 --> 00:36:36,160
deprecating dassault 341 authentication

00:36:31,240 --> 00:36:39,420
password cash form up so now we don't

00:36:36,160 --> 00:36:42,340
really support that duality basically

00:36:39,420 --> 00:36:44,680
for some sort of a twisted convenience

00:36:42,340 --> 00:36:47,620
it was a la the mask yo server was

00:36:44,680 --> 00:36:49,900
accepting changes into the way users

00:36:47,620 --> 00:36:52,510
authenticate based on the length on the

00:36:49,900 --> 00:36:54,430
password hash so if you only store an

00:36:52,510 --> 00:36:56,440
old password hash then you get two

00:36:54,430 --> 00:37:02,440
different authentication which was weird

00:36:56,440 --> 00:37:04,270
and we fix that and we also reengineered

00:37:02,440 --> 00:37:06,940
the mask yo security installations that

00:37:04,270 --> 00:37:08,830
it's obviously central for us so we took

00:37:06,940 --> 00:37:10,740
the time to rewrite it in to see and

00:37:08,830 --> 00:37:14,080
make it better

00:37:10,740 --> 00:37:17,380
we also deprecated the encode and decode

00:37:14,080 --> 00:37:21,760
functions which is which are some old

00:37:17,380 --> 00:37:24,250
way of actually encoding encrypting and

00:37:21,760 --> 00:37:27,160
decrypting data and we have much better

00:37:24,250 --> 00:37:29,050
functions now the data encryption

00:37:27,160 --> 00:37:32,290
standards and advanced encryption

00:37:29,050 --> 00:37:37,450
standard functions so it's time for this

00:37:32,290 --> 00:37:40,870
to go to and we also have client-side

00:37:37,450 --> 00:37:45,220
protocol tracing plugins so if you ever

00:37:40,870 --> 00:37:49,840
dealt with odbc box we have that now in

00:37:45,220 --> 00:37:53,380
our client a client library and you can

00:37:49,840 --> 00:37:55,870
use those which is nice client-side

00:37:53,380 --> 00:38:03,550
logging you don't need to even bother

00:37:55,870 --> 00:38:05,650
with the server ok the next DMR it's we

00:38:03,550 --> 00:38:08,350
change the meaning of the SSL option

00:38:05,650 --> 00:38:11,200
minus minus s itself previously it used

00:38:08,350 --> 00:38:13,780
to be a no option B on the client side

00:38:11,200 --> 00:38:17,050
if you specify minus minus s so it

00:38:13,780 --> 00:38:20,260
changes nothing clearly now it enforces

00:38:17,050 --> 00:38:23,350
SSL so the client will refuse to connect

00:38:20,260 --> 00:38:26,710
if if there is no secure connection to

00:38:23,350 --> 00:38:34,090
the server so it's a useful option again

00:38:26,710 --> 00:38:37,420
and we also changed how other wrestle

00:38:34,090 --> 00:38:39,610
options work basically they employ SSL

00:38:37,420 --> 00:38:42,520
so you get the behavior which is

00:38:39,610 --> 00:38:44,920
compatible with what you have now if you

00:38:42,520 --> 00:38:49,840
need it but you don't need to specify

00:38:44,920 --> 00:38:53,650
the path SL option to get it and we also

00:38:49,840 --> 00:38:58,210
have a proper connection state reset now

00:38:53,650 --> 00:39:00,310
which is great I mean before that if you

00:38:58,210 --> 00:39:04,000
are doing connection post you you will

00:39:00,310 --> 00:39:06,520
need to log out and log in to just clear

00:39:04,000 --> 00:39:09,700
up the session or change the user there

00:39:06,520 --> 00:39:12,100
was an RPC for that and undergo all the

00:39:09,700 --> 00:39:14,730
authentication exchange which can be

00:39:12,100 --> 00:39:17,800
several pockets now it's a single

00:39:14,730 --> 00:39:19,960
request response thing we stays on the

00:39:17,800 --> 00:39:21,680
same user but just cleans up the session

00:39:19,960 --> 00:39:25,490
as if it's post login

00:39:21,680 --> 00:39:31,490
so it's a good thing to have the next

00:39:25,490 --> 00:39:33,920
DMR 574 and that's the last one we have

00:39:31,490 --> 00:39:36,680
far power RPM packages that we

00:39:33,920 --> 00:39:39,050
distribute they are secured by default

00:39:36,680 --> 00:39:41,030
so basically we have the effect of

00:39:39,050 --> 00:39:45,680
running my secure secure installation

00:39:41,030 --> 00:39:48,109
into those packages and we have separate

00:39:45,680 --> 00:39:50,869
packages for non essential tools and

00:39:48,109 --> 00:39:54,619
utilities that's in a nutshell what we

00:39:50,869 --> 00:39:58,160
changed and we also have automatic

00:39:54,619 --> 00:40:01,190
password expiration we introduced two

00:39:58,160 --> 00:40:05,450
new columns in mask users for that so

00:40:01,190 --> 00:40:08,030
now you can say you can configure per

00:40:05,450 --> 00:40:10,250
site policy like change all the

00:40:08,030 --> 00:40:12,859
passwords every so often or for

00:40:10,250 --> 00:40:16,700
individual users like on a user per user

00:40:12,859 --> 00:40:19,250
level and yeah I mentioned already these

00:40:16,700 --> 00:40:22,880
enhancements to ascend Krypton ALS

00:40:19,250 --> 00:40:26,000
decrypt and we all I I also added a

00:40:22,880 --> 00:40:28,940
random bytes function basically this is

00:40:26,000 --> 00:40:31,700
an SQL interface to the ssl libraries

00:40:28,940 --> 00:40:34,549
random generation routines so it's a

00:40:31,700 --> 00:40:36,920
good good thing to have for a secure

00:40:34,549 --> 00:40:41,000
installation strong strong random

00:40:36,920 --> 00:40:43,329
generators are always welcome that's all

00:40:41,000 --> 00:40:43,329
I have

00:40:50,540 --> 00:40:58,260
I saw you protected your own rpms no but

00:40:54,840 --> 00:41:00,210
why is if you just go through my secret

00:40:58,260 --> 00:41:03,450
configure make make install why is that

00:41:00,210 --> 00:41:06,330
not in a stage but my sequel secure

00:41:03,450 --> 00:41:10,920
installation gives you the problem is

00:41:06,330 --> 00:41:14,690
that the mask your bootstrap is a bit

00:41:10,920 --> 00:41:18,510
twisted process I mean it starts with

00:41:14,690 --> 00:41:21,030
creating a directory then you need to

00:41:18,510 --> 00:41:24,120
run the server in a weird mode and then

00:41:21,030 --> 00:41:28,380
play a set of SQL scripts to it which is

00:41:24,120 --> 00:41:30,840
weird again and then you need to restart

00:41:28,380 --> 00:41:32,790
it in normal mode and complete the

00:41:30,840 --> 00:41:35,730
hardening of the installation so it's

00:41:32,790 --> 00:41:40,830
multiple steps it's not really doable in

00:41:35,730 --> 00:41:42,810
a single executable in a way and the

00:41:40,830 --> 00:41:45,660
installation already has some of those

00:41:42,810 --> 00:41:48,900
so we just pony up on this that's why we

00:41:45,660 --> 00:41:51,000
do it there and the other thing is to

00:41:48,900 --> 00:41:53,760
monitor unusual patterns do you have any

00:41:51,000 --> 00:41:57,810
further pointers like it's a maybe Nagas

00:41:53,760 --> 00:42:01,140
plugins already but you okay well we do

00:41:57,810 --> 00:42:03,450
have a full-grown solution commercial

00:42:01,140 --> 00:42:06,960
solution that we offer it's called mask

00:42:03,450 --> 00:42:09,930
yo Enterprise monitor they basically

00:42:06,960 --> 00:42:11,850
distill all the support wisdom and

00:42:09,930 --> 00:42:15,740
knowledge that we have gathered over the

00:42:11,850 --> 00:42:18,540
years ending encoded dose into rules so

00:42:15,740 --> 00:42:21,990
there is an agent that connects to your

00:42:18,540 --> 00:42:25,770
server and monitors it for certain

00:42:21,990 --> 00:42:28,380
patterns and it would give you warnings

00:42:25,770 --> 00:42:31,430
and it would give you different severity

00:42:28,380 --> 00:42:34,410
of warnings and so on it's really pretty

00:42:31,430 --> 00:42:38,490
but it's a commercial of a link it's in

00:42:34,410 --> 00:42:41,160
the enterprise edition there is a free

00:42:38,490 --> 00:42:44,030
trial so if you want to take a look

00:42:41,160 --> 00:42:44,030
what's there

00:42:44,780 --> 00:42:49,740
you said that in your rpm packages the

00:42:48,090 --> 00:42:51,840
installation is secured by default how

00:42:49,740 --> 00:42:55,080
do you solve the problem with the

00:42:51,840 --> 00:42:57,510
password for the root user ok so the

00:42:55,080 --> 00:43:00,180
password goes like that we generate a

00:42:57,510 --> 00:43:03,660
random passwords when market has expired

00:43:00,180 --> 00:43:07,890
and we store the random password into a

00:43:03,660 --> 00:43:12,330
weird file I in your home directory and

00:43:07,890 --> 00:43:14,310
so if you when you log in you need to

00:43:12,330 --> 00:43:22,140
read the password from there and change

00:43:14,310 --> 00:43:24,540
it that's the way we do it so my

00:43:22,140 --> 00:43:29,850
question is far more simple everything

00:43:24,540 --> 00:43:32,580
else so for a simple user I mean I have

00:43:29,850 --> 00:43:35,730
a server that I play making web pages

00:43:32,580 --> 00:43:38,370
and stuff like that how easy is for a

00:43:35,730 --> 00:43:41,100
single user not an assisted mean or

00:43:38,370 --> 00:43:43,830
something like that to set up I mean i

00:43:41,100 --> 00:43:47,970
SAT a lump at my computer in my home

00:43:43,830 --> 00:43:51,900
server how easy for some single user is

00:43:47,970 --> 00:43:55,940
to make this server secure how how do

00:43:51,900 --> 00:44:01,320
you think from one to 10 how you scale

00:43:55,940 --> 00:44:05,640
securing Oracle according to your

00:44:01,320 --> 00:44:07,530
competitors I mean do you yeah it's a

00:44:05,640 --> 00:44:10,470
bit twisted what I'm asking but out of

00:44:07,530 --> 00:44:14,160
simplicity most of people the past years

00:44:10,470 --> 00:44:16,800
use MySQL and they still think they are

00:44:14,160 --> 00:44:21,330
single it's simple but how simple do you

00:44:16,800 --> 00:44:23,940
think it is reality check well if I

00:44:21,330 --> 00:44:26,100
understand your question correctly you

00:44:23,940 --> 00:44:30,360
wanted me to compare it with some of the

00:44:26,100 --> 00:44:32,820
other popular databases not exactly i'm

00:44:30,360 --> 00:44:36,570
saying is it easy for someone without

00:44:32,820 --> 00:44:39,030
reading one hell of inspiration to do

00:44:36,570 --> 00:44:42,480
that with simple steps I mean can

00:44:39,030 --> 00:44:45,690
someone follow 10 or 20 simple steps and

00:44:42,480 --> 00:44:47,880
get to a point that it has a secure

00:44:45,690 --> 00:44:51,650
enough server to do something simple not

00:44:47,880 --> 00:44:55,099
bank or something like that so see

00:44:51,650 --> 00:44:58,849
securities like plastic surgery base

00:44:55,099 --> 00:45:02,150
the more you invest into it the prettier

00:44:58,849 --> 00:45:04,910
it gets and so it's a process you need

00:45:02,150 --> 00:45:07,609
to you need to decide how much you can

00:45:04,910 --> 00:45:10,519
invest and how you need to be aware of

00:45:07,609 --> 00:45:13,819
how much your the people trying to hug

00:45:10,519 --> 00:45:16,789
you will invest so if you are guarding

00:45:13,819 --> 00:45:18,650
the Royal secrets you better invest

00:45:16,789 --> 00:45:20,930
accordingly that's what I told you about

00:45:18,650 --> 00:45:25,369
the right simple webpage but if you are

00:45:20,930 --> 00:45:28,789
guarding your well your website visitors

00:45:25,369 --> 00:45:30,739
for example or your cover the addresses

00:45:28,789 --> 00:45:33,950
email addresses of your commenters on

00:45:30,739 --> 00:45:36,339
your blog then i would say that running

00:45:33,950 --> 00:45:44,869
mysql security installation should be a

00:45:36,339 --> 00:45:48,109
pretty good way of doing it you

00:45:44,869 --> 00:45:50,359
mentioned that opens to the enabled test

00:45:48,109 --> 00:45:52,819
authentication plugins by default is

00:45:50,359 --> 00:45:55,069
that crutch ships them into the plug-in

00:45:52,819 --> 00:45:56,839
directory which means that one can

00:45:55,069 --> 00:45:59,589
enable them with a single comment

00:45:56,839 --> 00:46:03,739
alright so it's not an immediate threat

00:45:59,589 --> 00:46:07,489
yes but alright how would an attacker

00:46:03,739 --> 00:46:10,549
then enable though you create users that

00:46:07,489 --> 00:46:12,559
use these authentication projects that's

00:46:10,549 --> 00:46:14,599
how you do it all right but I probably

00:46:12,559 --> 00:46:16,880
need elevate privileges in first place

00:46:14,599 --> 00:46:19,700
to create a user no I'm not

00:46:16,880 --> 00:46:21,890
knowledgeable I'm asking Navy well sure

00:46:19,700 --> 00:46:25,190
but combine that with secure file brief

00:46:21,890 --> 00:46:31,579
and then you can go in and write stuff

00:46:25,190 --> 00:46:33,019
into your database files all right i'll

00:46:31,579 --> 00:46:36,579
wait for the migrated i'm interested

00:46:33,019 --> 00:46:36,579
mother and i even I cannot give

00:46:39,380 --> 00:46:43,940
the damping the sound damping of the

00:46:42,140 --> 00:46:46,670
furniture here is extreme we can't hear

00:46:43,940 --> 00:46:47,900
you were five meters away in the case

00:46:46,670 --> 00:46:49,339
where you have the administrative

00:46:47,900 --> 00:46:52,519
privileges on the database to create a

00:46:49,339 --> 00:46:59,990
user you don't necessarily care anymore

00:46:52,519 --> 00:47:02,599
about file accesses or our generation of

00:46:59,990 --> 00:47:05,539
databases privileges ultimately your

00:47:02,599 --> 00:47:08,420
goal would be to own the computer in a

00:47:05,539 --> 00:47:10,579
way of course that control right and to

00:47:08,420 --> 00:47:14,059
get there you need to elevate your

00:47:10,579 --> 00:47:16,970
privileges and when secure file brief is

00:47:14,059 --> 00:47:19,039
not set then you can go in and right

00:47:16,970 --> 00:47:22,400
into your database directory including

00:47:19,039 --> 00:47:25,880
your mask user table so that gives you

00:47:22,400 --> 00:47:28,430
elevated privileges from there you use

00:47:25,880 --> 00:47:31,220
the plugins is talked into the plug in

00:47:28,430 --> 00:47:34,450
here to inject code that the mask your

00:47:31,220 --> 00:47:38,210
server Google and then sky is the limit

00:47:34,450 --> 00:47:42,829
basically I'm on the other hand if the

00:47:38,210 --> 00:47:45,349
secure file parameter set then the only

00:47:42,829 --> 00:47:46,880
problem remaining is that someone has

00:47:45,349 --> 00:47:51,819
the administrative privilege to create

00:47:46,880 --> 00:47:51,819
users the only problem that we know yes

00:47:57,780 --> 00:48:02,850
about the security installation script

00:48:00,360 --> 00:48:05,100
after its hardening your system and he's

00:48:02,850 --> 00:48:07,230
doing his job is possible to give us a

00:48:05,100 --> 00:48:09,300
list of weak points you may still have

00:48:07,230 --> 00:48:12,270
on a system like the demon is listening

00:48:09,300 --> 00:48:15,870
on all the interfaces or you may want to

00:48:12,270 --> 00:48:17,940
use SSL and the second thing after you

00:48:15,870 --> 00:48:19,920
use the system for a while and you opens

00:48:17,940 --> 00:48:21,780
up back doors by intention or not is

00:48:19,920 --> 00:48:24,060
possible to run it again and to get

00:48:21,780 --> 00:48:26,660
another list of weak point you may have

00:48:24,060 --> 00:48:30,570
like to help you harden in your system

00:48:26,660 --> 00:48:32,820
further okay so basically the monitoring

00:48:30,570 --> 00:48:35,430
part is again part of this mask yo

00:48:32,820 --> 00:48:39,000
Enterprise monitor think that we have it

00:48:35,430 --> 00:48:41,900
would assess most common security flaws

00:48:39,000 --> 00:48:45,750
and it would give you the warnings

00:48:41,900 --> 00:48:51,180
basically intelligence is something that

00:48:45,750 --> 00:48:53,000
people are supposed to pay for and well

00:48:51,180 --> 00:48:55,110
it doesn't come free i mean its

00:48:53,000 --> 00:48:57,060
experience and investment into

00:48:55,110 --> 00:48:59,520
understanding how the silver work so

00:48:57,060 --> 00:49:05,130
it's natural that people would get some

00:48:59,520 --> 00:49:07,410
man for it I think there's open source

00:49:05,130 --> 00:49:10,710
tools I mean the log formats are

00:49:07,410 --> 00:49:13,890
well-known and widely used I know /

00:49:10,710 --> 00:49:16,470
connotation to that deal with the

00:49:13,890 --> 00:49:20,850
general log file and extract some wisdom

00:49:16,470 --> 00:49:24,240
out of it but well it's what it is I

00:49:20,850 --> 00:49:27,000
mean it's not the core product so not

00:49:24,240 --> 00:49:29,910
only about the log files but from the

00:49:27,000 --> 00:49:32,610
config files for example this script is

00:49:29,910 --> 00:49:36,120
looking can look in the config files and

00:49:32,610 --> 00:49:38,100
can tell you what week options you have

00:49:36,120 --> 00:49:40,650
in your config file and just give you

00:49:38,100 --> 00:49:43,050
some advice sure man does that I I know

00:49:40,650 --> 00:49:45,770
for sure that's our product that we

00:49:43,050 --> 00:49:48,690
Center all of our intelligence into

00:49:45,770 --> 00:49:53,420
there are competing products but I'm not

00:49:48,690 --> 00:49:53,420
really following them thank you

00:49:54,190 --> 00:50:01,860

YouTube URL: https://www.youtube.com/watch?v=Y5W31adIg2Y


