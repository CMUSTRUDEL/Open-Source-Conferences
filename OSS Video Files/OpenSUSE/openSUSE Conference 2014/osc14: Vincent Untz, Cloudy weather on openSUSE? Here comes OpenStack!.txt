Title: osc14: Vincent Untz, Cloudy weather on openSUSE? Here comes OpenStack!
Publication date: 2014-04-28
Playlist: openSUSE Conference 2014
Description: 
	Nowadays, everything is cloud and cloud is everything. It's all magic, it's all trendy, it's all buzzwords. But it's still unclear to many what this all is. In this talk, we will talk about OpenStack, the cloud computing platform that is getting the most traction in the free software world. But we will also talk about what we do for it in openSUSE, because there's some cool stuff happening there!
Captions: 
	00:00:03,259 --> 00:00:09,719
so um I'm going to talk about OpenStack

00:00:07,319 --> 00:00:12,090
in opensuse it's mostly actually I talk

00:00:09,719 --> 00:00:13,830
about OpenStack because I think a lot of

00:00:12,090 --> 00:00:16,920
people heard about OpenStack but don't

00:00:13,830 --> 00:00:18,600
really know what this is and at the end

00:00:16,920 --> 00:00:27,539
there will be some some bit about

00:00:18,600 --> 00:00:29,460
OpenStack in opensuse and um so in case

00:00:27,539 --> 00:00:32,099
you don't know me I'm persons i'm

00:00:29,460 --> 00:00:35,790
actually walking on the cloud product

00:00:32,099 --> 00:00:37,620
that's user and so I'm trying to

00:00:35,790 --> 00:00:42,960
understand what happened stachys also so

00:00:37,620 --> 00:00:45,059
I'm like you okay first probably about

00:00:42,960 --> 00:00:47,930
the cloud in general I think what's

00:00:45,059 --> 00:00:51,210
important is that everybody knows that

00:00:47,930 --> 00:00:54,270
cloud is really a nice word and it means

00:00:51,210 --> 00:00:57,420
a lot of things and so on so I'll try to

00:00:54,270 --> 00:00:59,510
use some of these words innovative

00:00:57,420 --> 00:01:02,120
leading i can say that one breaking yeah

00:00:59,510 --> 00:01:05,010
takeaways i will forget that one but so

00:01:02,120 --> 00:01:09,299
try to see all the passwords in what i

00:01:05,010 --> 00:01:11,189
will say so the definition of cloud is

00:01:09,299 --> 00:01:12,689
it really depends on a lot of people but

00:01:11,189 --> 00:01:14,460
that's one definition which is from the

00:01:12,689 --> 00:01:18,090
National Institute of Standards and

00:01:14,460 --> 00:01:20,070
Technology in the u.s. I guess so I

00:01:18,090 --> 00:01:23,250
won't read it but what's important is

00:01:20,070 --> 00:01:26,060
what is in bolts in the texts are so

00:01:23,250 --> 00:01:28,799
cloud computing so it's on demand

00:01:26,060 --> 00:01:30,990
configurable computing resources rapidly

00:01:28,799 --> 00:01:34,650
provisioning released minimal

00:01:30,990 --> 00:01:36,810
interaction blah blah blah what matters

00:01:34,650 --> 00:01:40,290
for most people actually is really the

00:01:36,810 --> 00:01:42,780
on demand so you really need something

00:01:40,290 --> 00:01:45,390
you asked for it to get it and get it

00:01:42,780 --> 00:01:47,040
fast you don't have to go through a long

00:01:45,390 --> 00:01:50,180
process where you interact with like a

00:01:47,040 --> 00:01:53,340
huge aoki and it takes weeks and weeks

00:01:50,180 --> 00:01:55,590
and you can dispose of it when you're

00:01:53,340 --> 00:01:58,079
done it's also very fast to get rid of

00:01:55,590 --> 00:02:01,680
that and so that's cloud computing in

00:01:58,079 --> 00:02:04,320
general but the thing is that when we

00:02:01,680 --> 00:02:07,469
talk about cloud like a lot of things

00:02:04,320 --> 00:02:11,160
are clouds to OpenStack is cloud but

00:02:07,469 --> 00:02:14,820
like Google+ is out is cloud

00:02:11,160 --> 00:02:17,940
you have everything amazon web services

00:02:14,820 --> 00:02:19,860
which is cloud a lot of things open

00:02:17,940 --> 00:02:21,480
shift for from reddit and so on and so

00:02:19,860 --> 00:02:23,610
you actually have different cloud models

00:02:21,480 --> 00:02:25,080
so I think it's really important to

00:02:23,610 --> 00:02:27,750
understand the difference between the

00:02:25,080 --> 00:02:29,580
three of them actually you have more of

00:02:27,750 --> 00:02:34,950
that but that's really three things that

00:02:29,580 --> 00:02:36,840
you always see all this arm for change

00:02:34,950 --> 00:02:38,640
and start from the right so software as

00:02:36,840 --> 00:02:40,830
a service it's actually everything that

00:02:38,640 --> 00:02:44,760
you use online more or less it's like

00:02:40,830 --> 00:02:47,190
Google+ hangout whatever it's all the

00:02:44,760 --> 00:02:49,320
the software that you use either from

00:02:47,190 --> 00:02:52,110
your web browser or on your phone which

00:02:49,320 --> 00:02:55,880
is interacting with something so it's

00:02:52,110 --> 00:02:58,380
made for end users directly that's it

00:02:55,880 --> 00:02:59,700
often before below the software as a

00:02:58,380 --> 00:03:02,790
service you have something which is

00:02:59,700 --> 00:03:06,060
platform as a service so not necessarily

00:03:02,790 --> 00:03:08,550
but often they go together and platform

00:03:06,060 --> 00:03:11,820
as a service is made for developers so

00:03:08,550 --> 00:03:13,920
they have an application so the right

00:03:11,820 --> 00:03:15,590
hand application using some framework

00:03:13,920 --> 00:03:19,440
that can be based on Python Ruby

00:03:15,590 --> 00:03:22,110
whatever and they want that to be

00:03:19,440 --> 00:03:23,370
scalable somehow and so that they know

00:03:22,110 --> 00:03:25,560
that they will need at some point

00:03:23,370 --> 00:03:27,600
possibly more servers that will be

00:03:25,560 --> 00:03:29,910
deployed with that same stack and so on

00:03:27,600 --> 00:03:31,590
and that's why we use platform as a

00:03:29,910 --> 00:03:33,450
service so they have their application

00:03:31,590 --> 00:03:35,700
they wrote the application they push it

00:03:33,450 --> 00:03:39,780
there and somehow it will scale

00:03:35,700 --> 00:03:41,850
magically and then below that you have

00:03:39,780 --> 00:03:45,270
infrastructure as a service and this is

00:03:41,850 --> 00:03:46,920
really for people who take care of the

00:03:45,270 --> 00:03:49,140
the whole infrastructure that will run a

00:03:46,920 --> 00:03:52,920
lot of things so in general this is

00:03:49,140 --> 00:03:56,670
really for people want to say I need

00:03:52,920 --> 00:03:59,160
some compute power I need some specific

00:03:56,670 --> 00:04:01,980
network between different nodes I need

00:03:59,160 --> 00:04:05,280
some disk space and so on and so on and

00:04:01,980 --> 00:04:07,080
so this is really low level compared to

00:04:05,280 --> 00:04:08,760
everything else and this is really the

00:04:07,080 --> 00:04:10,920
part we're looking at with OpenStack

00:04:08,760 --> 00:04:13,500
right now OpenStack is actually growing

00:04:10,920 --> 00:04:15,420
and so it's moving in all directions and

00:04:13,500 --> 00:04:17,640
so slowly also going towards

00:04:15,420 --> 00:04:19,560
platform-as-a-service but the core of

00:04:17,640 --> 00:04:21,230
photon sac is is infrastructure as a

00:04:19,560 --> 00:04:24,790
service

00:04:21,230 --> 00:04:26,690
open chief is platform as a service and

00:04:24,790 --> 00:04:29,300
yeah I mean there are several

00:04:26,690 --> 00:04:32,600
alternatives to 44 platform-as-a-service

00:04:29,300 --> 00:04:38,120
openshift is one and do you have other

00:04:32,600 --> 00:04:40,580
ones um yeah so keep that in mind I

00:04:38,120 --> 00:04:42,950
think actually if if there's one thing

00:04:40,580 --> 00:04:47,690
to remember about cloud is probably that

00:04:42,950 --> 00:04:48,920
because that makes it that makes it

00:04:47,690 --> 00:04:50,270
easier to understand when people talk

00:04:48,920 --> 00:04:52,160
about cloud that they actually don't

00:04:50,270 --> 00:04:55,670
talk about one thing with about several

00:04:52,160 --> 00:04:58,790
things one other thing which is

00:04:55,670 --> 00:05:03,200
important and which was made popular

00:04:58,790 --> 00:05:08,710
some time ago is the analogy of pets

00:05:03,200 --> 00:05:11,720
versus cattle so the ID in cloud is that

00:05:08,710 --> 00:05:14,960
you actually don't care that much about

00:05:11,720 --> 00:05:17,360
what you get it can be shut down it can

00:05:14,960 --> 00:05:19,310
disappear it can crash what matters is

00:05:17,360 --> 00:05:22,180
that you will get some more anyway at

00:05:19,310 --> 00:05:25,750
some point and it's really cattle and

00:05:22,180 --> 00:05:29,930
compared to the old way of doing things

00:05:25,750 --> 00:05:32,720
where you have either a server or your

00:05:29,930 --> 00:05:34,070
your small vm and you take care of that

00:05:32,720 --> 00:05:36,890
you make sure that it's well configured

00:05:34,070 --> 00:05:38,690
and you maintain that carefully and you

00:05:36,890 --> 00:05:41,270
dont want it to crash maybe you add a

00:05:38,690 --> 00:05:42,500
high availability but you know it's

00:05:41,270 --> 00:05:46,280
still something that you want to keep

00:05:42,500 --> 00:05:48,980
and this is something where you you you

00:05:46,280 --> 00:05:51,110
very very careful about it it's a small

00:05:48,980 --> 00:05:53,600
bit more or less so you you make sure

00:05:51,110 --> 00:05:55,490
that goes well and always everything and

00:05:53,600 --> 00:05:58,100
so on so that's really the difference

00:05:55,490 --> 00:06:00,980
between something which is in the cloud

00:05:58,100 --> 00:06:02,960
or you know it's using resources that

00:06:00,980 --> 00:06:05,120
can disappear in any way the app will

00:06:02,960 --> 00:06:06,260
survive and something which is not in

00:06:05,120 --> 00:06:10,130
the cloud where you want to make sure

00:06:06,260 --> 00:06:12,230
that this arrives and a good example of

00:06:10,130 --> 00:06:15,110
that to illustrate that is actually what

00:06:12,230 --> 00:06:18,440
Netflix was has been doing so you might

00:06:15,110 --> 00:06:20,570
have heard of that Netflix is a so you

00:06:18,440 --> 00:06:23,990
all know about netflix i guess and you

00:06:20,570 --> 00:06:27,860
know so their app is actually deployed

00:06:23,990 --> 00:06:29,930
in the cloud and what they did to make

00:06:27,860 --> 00:06:33,020
sure that it's really reliable and so on

00:06:29,930 --> 00:06:35,040
that they developed something a software

00:06:33,020 --> 00:06:38,310
which actually kills from time

00:06:35,040 --> 00:06:41,370
to time some pot of the notes which make

00:06:38,310 --> 00:06:42,780
the application and so the goal is that

00:06:41,370 --> 00:06:45,480
the application should survive that

00:06:42,780 --> 00:06:48,330
because the application is built on top

00:06:45,480 --> 00:06:53,010
of kettle and so they it should be still

00:06:48,330 --> 00:06:55,560
able to run after that and this really

00:06:53,010 --> 00:06:57,540
illustrates the fact that when you build

00:06:55,560 --> 00:06:59,190
something for the cloud it's really

00:06:57,540 --> 00:07:02,010
totally different from when you build

00:06:59,190 --> 00:07:05,130
something which is for the traditional

00:07:02,010 --> 00:07:07,800
way you really have to take into account

00:07:05,130 --> 00:07:10,530
into the design of the application that

00:07:07,800 --> 00:07:12,690
what you have below might disappear and

00:07:10,530 --> 00:07:17,220
you have possibly to restart something

00:07:12,690 --> 00:07:21,330
at some point so that's really the

00:07:17,220 --> 00:07:24,330
general Beatz about cloud and let me

00:07:21,330 --> 00:07:29,700
talk a bit about OpenStack so that's the

00:07:24,330 --> 00:07:31,770
nice logo beautiful the OpenStack is a

00:07:29,700 --> 00:07:35,400
project which was actually started in

00:07:31,770 --> 00:07:37,560
2010 when people from NASA and from

00:07:35,400 --> 00:07:39,420
rackspace met and realized that some of

00:07:37,560 --> 00:07:42,600
the bits that they developed were

00:07:39,420 --> 00:07:44,400
actually uh they had a similar

00:07:42,600 --> 00:07:46,380
architecture than one not doing the same

00:07:44,400 --> 00:07:49,650
thing so there was one bit which was

00:07:46,380 --> 00:07:52,110
really to start compute resources so

00:07:49,650 --> 00:07:54,660
like virtual machines instances and

00:07:52,110 --> 00:07:57,240
there was one bit which was about object

00:07:54,660 --> 00:07:59,940
storage so you upload something and you

00:07:57,240 --> 00:08:03,390
can download it again but they realized

00:07:59,940 --> 00:08:06,360
that it was architect early similar so

00:08:03,390 --> 00:08:10,620
it was written in Python they were using

00:08:06,360 --> 00:08:14,040
rest and so on and so they talked about

00:08:10,620 --> 00:08:15,810
it and at that point in time the Amazon

00:08:14,040 --> 00:08:17,640
Web Services was starting to be really

00:08:15,810 --> 00:08:19,680
visible and people knew about that and

00:08:17,640 --> 00:08:23,160
so they realized that they could form a

00:08:19,680 --> 00:08:25,320
project together and this project could

00:08:23,160 --> 00:08:28,530
be a free software alternative to the

00:08:25,320 --> 00:08:31,280
Amazon Web Services so it release under

00:08:28,530 --> 00:08:33,780
the Apache 20 license of free software

00:08:31,280 --> 00:08:39,240
what's really interesting is that it's

00:08:33,780 --> 00:08:42,780
moving very very fast so it's only four

00:08:39,240 --> 00:08:46,830
year over year old four years old go to

00:08:42,780 --> 00:08:48,779
get it and it started with two projects

00:08:46,830 --> 00:08:51,930
and slowly you will see

00:08:48,779 --> 00:08:55,649
that affords it crew crew crew crew it's

00:08:51,930 --> 00:08:59,339
bigger and bigger and the fact that it's

00:08:55,649 --> 00:09:01,829
moving that fast is actually good in

00:08:59,339 --> 00:09:03,779
terms of what it covers but it's also

00:09:01,829 --> 00:09:05,759
really bad because it's really hard to

00:09:03,779 --> 00:09:08,129
keep track of that it's really hard to

00:09:05,759 --> 00:09:10,589
know what the goal of the project is and

00:09:08,129 --> 00:09:13,019
it's hard to know when to say no this

00:09:10,589 --> 00:09:16,230
should not be part of an stack or yes it

00:09:13,019 --> 00:09:19,319
should be part of OpenStack so there's a

00:09:16,230 --> 00:09:21,420
foundation to you know they have a lot

00:09:19,319 --> 00:09:23,610
of money and they deal with all the

00:09:21,420 --> 00:09:27,350
organization stuff like organizing the

00:09:23,610 --> 00:09:29,550
summit and the yellow issues and so on

00:09:27,350 --> 00:09:32,040
OpenStack has a six months early

00:09:29,550 --> 00:09:35,430
schedule while so it's modeled after a

00:09:32,040 --> 00:09:40,350
lot of free software projects shameless

00:09:35,430 --> 00:09:43,139
plug you know made that popular and so I

00:09:40,350 --> 00:09:45,720
sales got released when are we two weeks

00:09:43,139 --> 00:09:48,149
ago no I think so high Celsius the last

00:09:45,720 --> 00:09:51,800
release and the next religion is due in

00:09:48,149 --> 00:09:55,920
October and what we have in OpenStack is

00:09:51,800 --> 00:09:58,170
also a six months a swim it every six

00:09:55,920 --> 00:10:00,180
months so that we can start organizing

00:09:58,170 --> 00:10:03,689
preparing for what we plan to do the

00:10:00,180 --> 00:10:05,279
next release cycle so are in two weeks

00:10:03,689 --> 00:10:08,059
from now people are going to gather in

00:10:05,279 --> 00:10:12,870
Atlanta for the next open stacks of it

00:10:08,059 --> 00:10:17,899
it's actually very huge it's like 4,000

00:10:12,870 --> 00:10:17,899
people it's it's really huge terrible

00:10:18,259 --> 00:10:22,649
what's interesting about open sake

00:10:20,339 --> 00:10:24,480
that's in only a couple of years it

00:10:22,649 --> 00:10:26,759
managed to attract a lot of companies

00:10:24,480 --> 00:10:30,120
and actually if you look at this list

00:10:26,759 --> 00:10:32,399
which is so this picture is like I've

00:10:30,120 --> 00:10:35,600
been starting to use it at least one

00:10:32,399 --> 00:10:38,790
year ago so it's old outdated and so on

00:10:35,600 --> 00:10:40,829
but if you look carefully at it you will

00:10:38,790 --> 00:10:47,040
see probably all the big names in the

00:10:40,829 --> 00:10:48,480
industry except our Google and Apple but

00:10:47,040 --> 00:10:51,629
everything else should be more less in

00:10:48,480 --> 00:10:53,730
there and so this is really crazy

00:10:51,629 --> 00:10:57,029
actually if you think about it and that

00:10:53,730 --> 00:11:01,290
really means that all of the industry

00:10:57,029 --> 00:11:02,550
put its wave behind OpenStack and that's

00:11:01,290 --> 00:11:05,220
really the pro

00:11:02,550 --> 00:11:06,630
Jack that is if there's one that is

00:11:05,220 --> 00:11:10,440
going to succeed for the free software

00:11:06,630 --> 00:11:12,420
cloud is going to be that one and so

00:11:10,440 --> 00:11:14,459
many of the many people think about

00:11:12,420 --> 00:11:16,620
OpenStack has the Linux of the clouding

00:11:14,459 --> 00:11:20,040
in the end the goal is really to reach

00:11:16,620 --> 00:11:21,630
the same success as Linux whenever you

00:11:20,040 --> 00:11:23,910
need to do something which is supposed

00:11:21,630 --> 00:11:26,760
to be about cloud you would build that

00:11:23,910 --> 00:11:30,149
on top of a patsak so that's really the

00:11:26,760 --> 00:11:32,220
goal we're not there yet but when you

00:11:30,149 --> 00:11:34,230
see all the people using it and all the

00:11:32,220 --> 00:11:38,310
people talking about it or it can be

00:11:34,230 --> 00:11:39,779
there really fast the other bit which is

00:11:38,310 --> 00:11:44,339
interesting about this comparison is

00:11:39,779 --> 00:11:47,399
that if you look at how linux progressed

00:11:44,339 --> 00:11:49,320
over the years it was quite a slow start

00:11:47,399 --> 00:11:52,890
in the end it took like really ten years

00:11:49,320 --> 00:11:57,600
to be ready for the enterprise and for

00:11:52,890 --> 00:11:59,640
OpenStack it's much faster so now it's

00:11:57,600 --> 00:12:02,820
going to be the interesting but if I

00:11:59,640 --> 00:12:05,130
don't go backwards I'm going to show you

00:12:02,820 --> 00:12:09,000
a bit about how OpenStack is

00:12:05,130 --> 00:12:14,279
architecture so this picture is from

00:12:09,000 --> 00:12:18,029
OpenStack sx which is two years old I

00:12:14,279 --> 00:12:21,240
think you see there were five components

00:12:18,029 --> 00:12:23,459
they were interacting together looks not

00:12:21,240 --> 00:12:27,420
that complex I mean you see the five

00:12:23,459 --> 00:12:29,730
components okay the reality of this

00:12:27,420 --> 00:12:31,350
picture is actually more like that so

00:12:29,730 --> 00:12:34,410
each of the component is actually made

00:12:31,350 --> 00:12:36,060
of several sub components and they all

00:12:34,410 --> 00:12:39,500
talking to each other in different ways

00:12:36,060 --> 00:12:44,040
and it's starting to be a bit crazy um

00:12:39,500 --> 00:12:47,790
so you can start to get start seeing the

00:12:44,040 --> 00:12:49,800
complexity of the project but if you

00:12:47,790 --> 00:12:53,339
take a few release after that so that's

00:12:49,800 --> 00:12:57,500
probably really a folsom so one or two

00:12:53,339 --> 00:13:00,779
you release after sx you have more boxes

00:12:57,500 --> 00:13:03,060
still a simplified version but starting

00:13:00,779 --> 00:13:07,440
to be a bit messy and then when you look

00:13:03,060 --> 00:13:09,750
at the details it's starting to well

00:13:07,440 --> 00:13:13,589
it's not even a readable actually but

00:13:09,750 --> 00:13:16,889
you see all the boxes sub boxes are rows

00:13:13,589 --> 00:13:19,619
in all ways and so on

00:13:16,889 --> 00:13:21,569
it's a huge mess somehow you don't made

00:13:19,619 --> 00:13:23,939
sense it all makes sense if you really

00:13:21,569 --> 00:13:26,730
look into the details and you you you

00:13:23,939 --> 00:13:28,259
try to understand but it's very hard

00:13:26,730 --> 00:13:31,230
when you first approached it and you

00:13:28,259 --> 00:13:35,369
like okay what should I start you don't

00:13:31,230 --> 00:13:37,859
know it's so huge and so I told you this

00:13:35,369 --> 00:13:39,600
is for from grizzly I think but this is

00:13:37,859 --> 00:13:44,009
still growing it's missing a lot of

00:13:39,600 --> 00:13:45,869
boxes so like telemetry the salah meter

00:13:44,009 --> 00:13:48,989
in heat so which are 40 dimitri knock

00:13:45,869 --> 00:13:51,899
iteration have been integrated a few

00:13:48,989 --> 00:13:54,929
release ago true got integrated in ice

00:13:51,899 --> 00:13:56,549
house and then we have at least three

00:13:54,929 --> 00:13:58,799
incubated projects which are not

00:13:56,549 --> 00:14:01,619
officially OpenStack yet but are going

00:13:58,799 --> 00:14:04,379
to be part of an SEC at some point so

00:14:01,619 --> 00:14:07,109
that's six more boxes and I more I mean

00:14:04,379 --> 00:14:10,109
always more so if you look back at this

00:14:07,109 --> 00:14:12,269
like or I me it's just I mean you need

00:14:10,109 --> 00:14:15,149
the whole wall at the end to be to see

00:14:12,269 --> 00:14:19,109
something and this gives you an idea

00:14:15,149 --> 00:14:21,869
about the main issue with OpenStack is

00:14:19,109 --> 00:14:23,999
how you deploy it I mean you have all

00:14:21,869 --> 00:14:26,639
these things and actually if you look at

00:14:23,999 --> 00:14:29,759
all the details you need to manually

00:14:26,639 --> 00:14:32,669
configure all the components so if you

00:14:29,759 --> 00:14:36,389
do that manually it's like a more than

00:14:32,669 --> 00:14:39,269
1,000 options what do you do with that I

00:14:36,389 --> 00:14:41,610
mean how do you configure that to you I

00:14:39,269 --> 00:14:44,189
do you even know how many notes you need

00:14:41,610 --> 00:14:46,079
to deploy all that so it's it's just

00:14:44,189 --> 00:14:49,220
crazy it's not something that you well

00:14:46,079 --> 00:14:52,319
some people do that manually but um

00:14:49,220 --> 00:14:54,209
let's say yeah they're crazy so it's

00:14:52,319 --> 00:14:56,519
really a currently a hot area of

00:14:54,209 --> 00:15:00,629
development there are several approaches

00:14:56,519 --> 00:15:01,919
to to solve this issue so it's User we

00:15:00,629 --> 00:15:03,360
have a product which is called to the

00:15:01,919 --> 00:15:05,759
cloud that we use for that it's based

00:15:03,360 --> 00:15:09,689
the deployment framework which is called

00:15:05,759 --> 00:15:12,059
crowbar but it's pretty cool actually I

00:15:09,689 --> 00:15:15,720
mean it makes most of things automatic

00:15:12,059 --> 00:15:18,600
and it's kind of magic but there are

00:15:15,720 --> 00:15:20,339
several other alternatives and this is

00:15:18,600 --> 00:15:22,679
really one of the biggest challenge of

00:15:20,339 --> 00:15:24,119
OpenStack right now there's it's

00:15:22,679 --> 00:15:26,539
difficult to ND do you want the

00:15:24,119 --> 00:15:26,539
microphone

00:15:35,840 --> 00:15:43,640
so if you've got like a thousand options

00:15:39,500 --> 00:15:46,250
etc for configuration would it help to

00:15:43,640 --> 00:15:52,430
get users that are going to be deploying

00:15:46,250 --> 00:15:56,750
this to use KDE first I mean you don't

00:15:52,430 --> 00:15:59,810
want me to answer that it now but most

00:15:56,750 --> 00:16:03,110
seriously it's it's really different the

00:15:59,810 --> 00:16:04,220
main difference is that well maybe it's

00:16:03,110 --> 00:16:06,560
not that different i don't know the

00:16:04,220 --> 00:16:09,410
kitty community that well but the way

00:16:06,560 --> 00:16:11,590
the open side project is walking that by

00:16:09,410 --> 00:16:14,270
default it's open to everything so

00:16:11,590 --> 00:16:17,300
somebody wants something in it gets in

00:16:14,270 --> 00:16:19,700
as long as the code is so leads there

00:16:17,300 --> 00:16:23,060
are you need test and so on it can get

00:16:19,700 --> 00:16:25,070
in that's really the thing so that's why

00:16:23,060 --> 00:16:26,930
there are a lot of options a lot of

00:16:25,070 --> 00:16:29,240
things which you can do one way or

00:16:26,930 --> 00:16:34,370
another and yeah so how many

00:16:29,240 --> 00:16:36,770
alternatives to crowbar rather ah well I

00:16:34,370 --> 00:16:38,480
don't know all of them but so it depends

00:16:36,770 --> 00:16:40,730
what at which level you look because

00:16:38,480 --> 00:16:43,700
crowbar is really full solution why you

00:16:40,730 --> 00:16:46,310
you it's mean I would call that for end

00:16:43,700 --> 00:16:48,950
users but you know it's cloud operators

00:16:46,310 --> 00:16:53,270
but you have solutions which are really

00:16:48,950 --> 00:16:56,750
just made of a thin layer above chef or

00:16:53,270 --> 00:16:58,580
per pet you have a tentative which are

00:16:56,750 --> 00:17:01,850
more lesson same level as crowbar like

00:16:58,580 --> 00:17:04,340
fuel you have something and default as

00:17:01,850 --> 00:17:07,700
part of OpenStack which is called triple

00:17:04,340 --> 00:17:10,850
0 which is really promising but right

00:17:07,700 --> 00:17:13,520
now it's made more for huge deployments

00:17:10,850 --> 00:17:16,400
like the HP public cloud you know like

00:17:13,520 --> 00:17:18,709
thousands of nodes so it's not exactly

00:17:16,400 --> 00:17:22,850
the same use case which leads to

00:17:18,709 --> 00:17:26,930
different issues somehow but there are

00:17:22,850 --> 00:17:30,470
several quite a lot actually would it be

00:17:26,930 --> 00:17:35,410
possible to use my own open seas it

00:17:30,470 --> 00:17:39,200
would be possible to you say juju 22 ah

00:17:35,410 --> 00:17:40,730
there are 0 it's always possible you

00:17:39,200 --> 00:17:42,170
know it's always possible just matter of

00:17:40,730 --> 00:17:47,210
doing it I don't think it's a good idea

00:17:42,170 --> 00:17:49,280
but um I mean I've never looked at the

00:17:47,210 --> 00:17:51,290
code of do too so it should it should be

00:17:49,280 --> 00:17:55,370
bought it but I think it's a lot of he

00:17:51,290 --> 00:17:59,090
thought and it's it's actually I have no

00:17:55,370 --> 00:18:02,240
idea it's just unclear to me if the the

00:17:59,090 --> 00:18:03,950
maintainer of jutsu would be taking the

00:18:02,240 --> 00:18:06,140
time to review all the batches to port

00:18:03,950 --> 00:18:07,760
to another platform because they really

00:18:06,140 --> 00:18:11,390
went eccentric being employed by

00:18:07,760 --> 00:18:15,100
canonical so but that's possible the

00:18:11,390 --> 00:18:15,100
issue of the jutsu I would say is that

00:18:15,340 --> 00:18:25,190
it's very nice as a first interaction

00:18:19,870 --> 00:18:31,490
but it's not that good so I don't think

00:18:25,190 --> 00:18:35,810
it would be worth it to be honest going

00:18:31,490 --> 00:18:38,480
on I think it going on so I won't talk

00:18:35,810 --> 00:18:42,230
about how to deploy that that would be a

00:18:38,480 --> 00:18:43,820
read totally different talk and I would

00:18:42,230 --> 00:18:48,590
probably talk too much about the product

00:18:43,820 --> 00:18:51,920
i'm walking on so the typical deployment

00:18:48,590 --> 00:18:55,310
of an openstack cloud looks more like

00:18:51,920 --> 00:19:02,240
that um as you can see this picture was

00:18:55,310 --> 00:19:04,550
made of anyway more or less you have a

00:19:02,240 --> 00:19:06,470
user somewhere you have one control node

00:19:04,550 --> 00:19:08,030
which is running I would say all the

00:19:06,470 --> 00:19:10,760
intelligence of the cloud so all the

00:19:08,030 --> 00:19:13,700
servers which are the API servers the

00:19:10,760 --> 00:19:17,600
schedulers and so on and then you have

00:19:13,700 --> 00:19:20,330
compute nodes and storage nodes this is

00:19:17,600 --> 00:19:24,020
actually simplified view because usually

00:19:20,330 --> 00:19:26,630
a cloud which is large with a quarter

00:19:24,020 --> 00:19:29,000
note would have not just one control

00:19:26,630 --> 00:19:32,330
node but would have the services spread

00:19:29,000 --> 00:19:36,500
across several control nodes but you can

00:19:32,330 --> 00:19:39,650
do it that way and so what's interesting

00:19:36,500 --> 00:19:41,840
is that you see all the compute nodes

00:19:39,650 --> 00:19:44,060
that's really one of the resources it's

00:19:41,840 --> 00:19:48,860
free the compute resources that's what

00:19:44,060 --> 00:19:50,690
you have in at a large scale and you

00:19:48,860 --> 00:19:53,030
have also the storage nodes which really

00:19:50,690 --> 00:19:57,530
is where you store all the data so it's

00:19:53,030 --> 00:20:00,920
also can be quite big and so to simplify

00:19:57,530 --> 00:20:02,440
you have on one side everything which is

00:20:00,920 --> 00:20:04,299
about how you

00:20:02,440 --> 00:20:06,669
do things and on the other side other

00:20:04,299 --> 00:20:09,940
side everything which is really uh I

00:20:06,669 --> 00:20:14,139
would say the cattle it's same thing

00:20:09,940 --> 00:20:17,129
more less as you can see on this slide

00:20:14,139 --> 00:20:19,750
are you can actually have several

00:20:17,129 --> 00:20:21,309
hypervisors in all the compute nodes

00:20:19,750 --> 00:20:27,070
I'll talk a bit more about that later on

00:20:21,309 --> 00:20:30,159
so we Center ripe fe exam kvm I'm trying

00:20:27,070 --> 00:20:43,960
to go back on this one I'll take your

00:20:30,159 --> 00:20:47,950
microphone yeah it's like so I have to

00:20:43,960 --> 00:20:49,299
jump let's let me show you a bit the

00:20:47,950 --> 00:20:52,240
different components we have in

00:20:49,299 --> 00:20:54,929
OpenStack so if we start at the bottom

00:20:52,240 --> 00:20:59,879
we have Keystone so this is this bit

00:20:54,929 --> 00:21:03,059
it's all about identity authentication

00:20:59,879 --> 00:21:06,159
registry of the services and so on so

00:21:03,059 --> 00:21:09,639
that everything is talking to Keystone

00:21:06,159 --> 00:21:12,460
to simplify that's how we know about

00:21:09,639 --> 00:21:17,590
users what they are allowed to do and so

00:21:12,460 --> 00:21:22,029
on then we have let's go there this is

00:21:17,590 --> 00:21:24,759
Swift so Swift is a the object storage

00:21:22,029 --> 00:21:28,899
project in OpenStack so that's where you

00:21:24,759 --> 00:21:32,620
put one blob can be a file can be

00:21:28,899 --> 00:21:34,389
anything and so you put one blow up in

00:21:32,620 --> 00:21:38,049
the object storage and you can get it

00:21:34,389 --> 00:21:43,029
back somehow so it can be used for

00:21:38,049 --> 00:21:45,519
different things for instance the you

00:21:43,029 --> 00:21:49,059
can actually like if you built a photo

00:21:45,519 --> 00:21:52,179
website you can put all of the photos in

00:21:49,059 --> 00:21:53,830
in Swift and what you display you

00:21:52,179 --> 00:21:56,320
actually display straight the photo from

00:21:53,830 --> 00:21:59,080
Swift and the good thing about swifty

00:21:56,320 --> 00:22:02,830
that it's really are reliable so

00:21:59,080 --> 00:22:04,870
everything is replicated you can run it

00:22:02,830 --> 00:22:08,980
on really commodity hardware and so on

00:22:04,870 --> 00:22:10,750
so it's quite nice actually there are

00:22:08,980 --> 00:22:12,220
alternative to Swift like safe

00:22:10,750 --> 00:22:14,770
for instance which is not part of

00:22:12,220 --> 00:22:19,540
ransack but safe is also pretty nice

00:22:14,770 --> 00:22:22,360
actually then you have against so glance

00:22:19,540 --> 00:22:24,490
is the part of print stack which

00:22:22,360 --> 00:22:28,750
contains all of the images that you will

00:22:24,490 --> 00:22:33,220
start as an instance so that's like an

00:22:28,750 --> 00:22:36,910
ISO or hard disk for your vm to simplify

00:22:33,220 --> 00:22:40,000
so that's why you put like you open to

00:22:36,910 --> 00:22:43,540
the image fado i'm a joke when to image

00:22:40,000 --> 00:22:47,020
and so on it's one of the most simple

00:22:43,540 --> 00:22:48,430
part of France actually so possibly one

00:22:47,020 --> 00:22:53,800
nice place to start with you want to

00:22:48,430 --> 00:22:57,520
contribute then you have Nova the crazy

00:22:53,800 --> 00:22:58,900
bit so Nova is actually so that was one

00:22:57,520 --> 00:23:04,420
of the first project of the Prince egg

00:22:58,900 --> 00:23:07,440
and we talked about it about the compute

00:23:04,420 --> 00:23:12,490
part of open side so that's where we say

00:23:07,440 --> 00:23:15,100
I need to start a vm so I started it

00:23:12,490 --> 00:23:16,510
will find a node where to start it it

00:23:15,100 --> 00:23:20,230
was start it it will do all the

00:23:16,510 --> 00:23:24,370
different magic to make it work and it's

00:23:20,230 --> 00:23:29,380
quite big actually and it was actually

00:23:24,370 --> 00:23:31,630
made of more subprojects like Nova

00:23:29,380 --> 00:23:34,330
network novelle volume which were later

00:23:31,630 --> 00:23:39,160
splits out of nova because they're big

00:23:34,330 --> 00:23:42,910
by themselves so Nova volume was

00:23:39,160 --> 00:23:45,610
actually splitting cinder and cinder is

00:23:42,910 --> 00:23:48,310
the block storage part of OpenStack so

00:23:45,610 --> 00:23:52,710
this is where you say I need a half disk

00:23:48,310 --> 00:23:55,150
for my little machine and so it will

00:23:52,710 --> 00:23:58,510
create something and you can plug that

00:23:55,150 --> 00:24:01,540
in your virtual machine it's actually

00:23:58,510 --> 00:24:03,790
quite big because you need to be able to

00:24:01,540 --> 00:24:06,540
interact with all the different sands

00:24:03,790 --> 00:24:08,740
around there or with safe with a

00:24:06,540 --> 00:24:11,860
whatever order back in that you might

00:24:08,740 --> 00:24:15,520
want to use so there was no van is out

00:24:11,860 --> 00:24:19,510
there but people decided that no van is

00:24:15,520 --> 00:24:21,330
walk was a bit old in design and so they

00:24:19,510 --> 00:24:23,640
went to do something which

00:24:21,330 --> 00:24:26,460
is so if you manage to read that it's

00:24:23,640 --> 00:24:29,340
written quantum that's the old name now

00:24:26,460 --> 00:24:32,250
it's called neutron and it's all about

00:24:29,340 --> 00:24:35,550
the networking of OpenStack so if you

00:24:32,250 --> 00:24:38,580
want to say i have my VMS I need a

00:24:35,550 --> 00:24:40,410
network between the VMS this network

00:24:38,580 --> 00:24:43,080
will walk that way that way that way and

00:24:40,410 --> 00:24:47,790
it will do all that and it's a bit crazy

00:24:43,080 --> 00:24:50,790
so it's a bit like you have you have

00:24:47,790 --> 00:24:53,340
insight neutral you have stuff like load

00:24:50,790 --> 00:24:55,650
balancer as a service firewall as a

00:24:53,340 --> 00:24:57,330
service so you can do crazy stuff

00:24:55,650 --> 00:25:03,660
automatically for you your your

00:24:57,330 --> 00:25:05,160
instances and I wanted to mention

00:25:03,660 --> 00:25:10,380
something about neutral I forgot

00:25:05,160 --> 00:25:13,200
whatever you're raising your hand I so

00:25:10,380 --> 00:25:17,370
that's really the basic parts that you

00:25:13,200 --> 00:25:19,500
need to run and openstack cloud and well

00:25:17,370 --> 00:25:21,200
actually you don't need Swift if you

00:25:19,500 --> 00:25:24,630
don't pull well I followed up there

00:25:21,200 --> 00:25:29,970
cannot reach it horizon a web dashboard

00:25:24,630 --> 00:25:33,750
so end user interface so yeah that's the

00:25:29,970 --> 00:25:36,690
basic path that you need and everything

00:25:33,750 --> 00:25:39,210
else I mentioned earlier like heat the

00:25:36,690 --> 00:25:42,060
sea lo mejor and so on come on top of

00:25:39,210 --> 00:25:54,900
that and I just come with additional

00:25:42,060 --> 00:25:56,370
features drop that one okay so i won't

00:25:54,900 --> 00:25:57,960
talk in more details about each of the

00:25:56,370 --> 00:26:01,020
components because like i could talk

00:25:57,960 --> 00:26:03,870
about them for housing house but what's

00:26:01,020 --> 00:26:08,520
interesting is of the hypervisors so i

00:26:03,870 --> 00:26:12,110
took mentioned that earlier so OpenStack

00:26:08,520 --> 00:26:15,030
is an open project and as part of that

00:26:12,110 --> 00:26:16,770
all of the people as you've seen I mean

00:26:15,030 --> 00:26:19,020
the whole industry is behind the one

00:26:16,770 --> 00:26:21,120
stack and everybody who is using a swype

00:26:19,020 --> 00:26:25,170
I've I so we want to have that as part

00:26:21,120 --> 00:26:26,780
of from stack and so you see the list of

00:26:25,170 --> 00:26:29,100
an IPO vessel that is supported

00:26:26,780 --> 00:26:31,530
everybody has been trying to push its

00:26:29,100 --> 00:26:34,830
own solution and it's actually working

00:26:31,530 --> 00:26:39,179
quite well armed so you

00:26:34,830 --> 00:26:42,769
have a vm exam qlx a uml this is all

00:26:39,179 --> 00:26:45,960
based on a viet so quite convenient and

00:26:42,769 --> 00:26:51,360
actually kvm is the most used our

00:26:45,960 --> 00:26:53,880
solution for for nowadays most people

00:26:51,360 --> 00:26:56,640
just use given by default it's working

00:26:53,880 --> 00:26:58,380
pretty well but people might want to use

00:26:56,640 --> 00:27:02,880
them because they're more comfortable

00:26:58,380 --> 00:27:05,130
with it for instance then you have exam

00:27:02,880 --> 00:27:10,260
api which is like the different version

00:27:05,130 --> 00:27:13,620
of Zen that is like made by citrix and

00:27:10,260 --> 00:27:16,529
so on you can have vmware hyper-v dopo

00:27:13,620 --> 00:27:20,549
vm barometer and so on and what's crazy

00:27:16,529 --> 00:27:22,279
that all of these hypervisors you can

00:27:20,549 --> 00:27:25,610
actually use together in the same cloud

00:27:22,279 --> 00:27:30,990
so you can say ok have one big cloud and

00:27:25,610 --> 00:27:34,649
I want this instance to be running on

00:27:30,990 --> 00:27:36,539
kvm for one reason or another and I want

00:27:34,649 --> 00:27:39,690
this one to be running on VMware or

00:27:36,539 --> 00:27:42,630
hyper-v and you all just works fine so

00:27:39,690 --> 00:27:44,389
it's it's pretty nifty and there are

00:27:42,630 --> 00:27:47,429
some good reasons do to do that actually

00:27:44,389 --> 00:27:51,450
so like VMware a lot of people already

00:27:47,429 --> 00:27:54,659
have aviemore deployment so you invested

00:27:51,450 --> 00:27:57,149
in that why would you want to buy a lot

00:27:54,659 --> 00:28:00,559
of new hardware and deploy a whole new

00:27:57,149 --> 00:28:00,559
thing if you can use directly that

00:28:06,880 --> 00:28:15,860
can you migrate from one hypervisor to

00:28:13,820 --> 00:28:21,789
the other so if you've got an instance

00:28:15,860 --> 00:28:29,590
running on kvm can you migrate that to a

00:28:21,789 --> 00:28:33,470
sin or hyper-v powered instance so are

00:28:29,590 --> 00:28:35,389
the shot and tourism or less know if you

00:28:33,470 --> 00:28:37,549
do migration you actually need to have

00:28:35,389 --> 00:28:42,399
the same type as a hypervisor or below

00:28:37,549 --> 00:28:46,340
what you can do is actually do some are

00:28:42,399 --> 00:28:50,529
fake migration or you like you take a

00:28:46,340 --> 00:28:55,669
snapshot or something of that of the the

00:28:50,529 --> 00:28:57,470
of the system and if it's compatible you

00:28:55,669 --> 00:28:59,899
can start it again on some other ipod

00:28:57,470 --> 00:29:04,250
vessel so it really depends on the on

00:28:59,899 --> 00:29:07,990
the format that you use below that so

00:29:04,250 --> 00:29:12,470
could you say kvm is the primary

00:29:07,990 --> 00:29:17,679
hypervisor all your primary crowd cloud

00:29:12,470 --> 00:29:22,460
instance and you've got a a redundant

00:29:17,679 --> 00:29:26,960
instance running on hyper-v could you

00:29:22,460 --> 00:29:31,549
fail over the workload and then would

00:29:26,960 --> 00:29:33,320
that be a way of migration so setting

00:29:31,549 --> 00:29:38,379
and you would have would it already be

00:29:33,320 --> 00:29:38,379
running a knife Fe oh that exhaust I

00:29:41,500 --> 00:29:45,950
would just see your white your

00:29:43,370 --> 00:29:47,480
application as cloud enabled and then

00:29:45,950 --> 00:29:51,139
you can just switch the notes over and

00:29:47,480 --> 00:29:57,519
it will just might stop thinking the old

00:29:51,139 --> 00:30:00,080
way that's true but what you can do is

00:29:57,519 --> 00:30:03,620
so if you use an orchestra shock

00:30:00,080 --> 00:30:07,039
situation engine like heat what you can

00:30:03,620 --> 00:30:09,409
say that if this instance is going down

00:30:07,039 --> 00:30:11,450
then I do something blah blah blah and

00:30:09,409 --> 00:30:12,889
that could be what you mentioned but

00:30:11,450 --> 00:30:16,389
what you need in that case make sure

00:30:12,889 --> 00:30:18,040
that the the image that uses a basis for

00:30:16,389 --> 00:30:19,810
you instance

00:30:18,040 --> 00:30:21,880
can run on the different hypervisors

00:30:19,810 --> 00:30:25,150
that's really the key in that case what

00:30:21,880 --> 00:30:28,000
you can also do is prepare images for

00:30:25,150 --> 00:30:30,340
kvm and for I pervy and then in the

00:30:28,000 --> 00:30:32,590
orchestra orchestration engine we would

00:30:30,340 --> 00:30:37,270
just say okay if that happens then I do

00:30:32,590 --> 00:30:39,820
something with this image there but I

00:30:37,270 --> 00:30:43,060
mean that sounds a bit work to me I

00:30:39,820 --> 00:30:45,580
would just do live migration between to

00:30:43,060 --> 00:30:48,070
KTM notes in that specific use case I

00:30:45,580 --> 00:30:50,440
mean there are some good reasons to use

00:30:48,070 --> 00:30:54,730
IP even give him in the same cloud but

00:30:50,440 --> 00:30:59,800
you examples and seem that just want to

00:30:54,730 --> 00:31:01,360
me one thing which is important to

00:30:59,800 --> 00:31:03,910
mention about the hypervisor zia that

00:31:01,360 --> 00:31:07,960
not all of the features are available on

00:31:03,910 --> 00:31:10,300
all hypervisors first because of these

00:31:07,960 --> 00:31:12,640
they don't expose the same feature set

00:31:10,300 --> 00:31:14,590
but also because it depends on the

00:31:12,640 --> 00:31:19,390
community developing the backend for

00:31:14,590 --> 00:31:22,240
this IP advisor and so it's something to

00:31:19,390 --> 00:31:25,270
really carefully consider when you

00:31:22,240 --> 00:31:28,390
deploy one hypervisor a new pic you your

00:31:25,270 --> 00:31:31,120
preferred option but in the end I think

00:31:28,390 --> 00:31:35,230
this is quite nice to be able to say to

00:31:31,120 --> 00:31:38,440
people okay you might want to use all of

00:31:35,230 --> 00:31:40,690
your different backends with the same UI

00:31:38,440 --> 00:31:43,450
in the end OpenStack is the common UI

00:31:40,690 --> 00:31:49,300
for all of these different things it's

00:31:43,450 --> 00:31:51,730
quite quite nifty so I could give more

00:31:49,300 --> 00:31:54,040
details about the technical bits of

00:31:51,730 --> 00:31:56,470
OpenStack but I also wanted to talk

00:31:54,040 --> 00:31:59,710
about when sac n opensuse so i'll switch

00:31:56,470 --> 00:32:02,170
here but if we if you have questions

00:31:59,710 --> 00:32:07,980
about OpenStack in general we can go

00:32:02,170 --> 00:32:10,270
back to that so open sac and opensuse um

00:32:07,980 --> 00:32:14,010
there's been a small team working on

00:32:10,270 --> 00:32:17,380
that since one year half two years and

00:32:14,010 --> 00:32:20,530
chopped we ship OpenStack as part of a

00:32:17,380 --> 00:32:22,150
Panzer we have in 13 one they have

00:32:20,530 --> 00:32:23,560
enough version of events tag for the

00:32:22,150 --> 00:32:26,200
next version of open Tuesday we will

00:32:23,560 --> 00:32:29,350
have either I sales which went out two

00:32:26,200 --> 00:32:31,840
weeks ago of Juno the next version we

00:32:29,350 --> 00:32:34,179
will discuss with the like cool because

00:32:31,840 --> 00:32:36,820
to know is during October so for

00:32:34,179 --> 00:32:40,690
November it's a bit short what's

00:32:36,820 --> 00:32:43,320
important is that we actually do not

00:32:40,690 --> 00:32:47,049
just package one version of OpenStack

00:32:43,320 --> 00:32:48,640
what we do is we package all the

00:32:47,049 --> 00:32:51,760
versions of OpenStack that are still

00:32:48,640 --> 00:32:54,669
maintained so OpenStack is maintaining

00:32:51,760 --> 00:32:57,549
the last two versions so right now that

00:32:54,669 --> 00:33:01,570
would be have a nice house and we also

00:32:57,549 --> 00:33:04,659
package the master branch and so we have

00:33:01,570 --> 00:33:07,690
a project in OBS like cloud OpenStack

00:33:04,659 --> 00:33:11,799
ice house while you can get a specific

00:33:07,690 --> 00:33:15,850
version of OpenStack and what's really

00:33:11,799 --> 00:33:18,760
interesting is that we are lazy people I

00:33:15,850 --> 00:33:22,840
mean in the team working on OpenStack

00:33:18,760 --> 00:33:25,419
and so we actually automated most of the

00:33:22,840 --> 00:33:27,220
packaging because you know it's easier

00:33:25,419 --> 00:33:30,580
to just do nothing in and make the

00:33:27,220 --> 00:33:32,740
computer do all the work for you so it's

00:33:30,580 --> 00:33:36,990
a bit small but hopefully you will be

00:33:32,740 --> 00:33:42,909
able to see you need to in all one part

00:33:36,990 --> 00:33:46,360
I didn't redo the the scheme of the

00:33:42,909 --> 00:33:48,820
diagram but you get the idea guess so

00:33:46,360 --> 00:33:56,260
what's happening so if you look on the

00:33:48,820 --> 00:34:02,080
top left what is in foucha pink under

00:33:56,260 --> 00:34:04,929
what color is this so this is upstream

00:34:02,080 --> 00:34:08,830
Wallace so people are just pushing stuff

00:34:04,929 --> 00:34:11,020
to get off OpenStack and what we do is

00:34:08,830 --> 00:34:13,839
that we use one nice feature of OBS

00:34:11,020 --> 00:34:15,040
which is called the OBS services so it

00:34:13,839 --> 00:34:18,070
can went to my talked yesterday about

00:34:15,040 --> 00:34:19,810
nice things about magic tools for

00:34:18,070 --> 00:34:23,619
packaging i mentioned that i will

00:34:19,810 --> 00:34:26,919
mention that again i guess so we use

00:34:23,619 --> 00:34:31,690
this to actually fetch directly the code

00:34:26,919 --> 00:34:34,389
from get update the package update the

00:34:31,690 --> 00:34:36,070
change log and so on build the package

00:34:34,389 --> 00:34:37,690
to make sure that it's 20 bills and

00:34:36,070 --> 00:34:39,700
commit and all that automatically

00:34:37,690 --> 00:34:41,800
without any interaction from from

00:34:39,700 --> 00:34:45,040
ourselves so that's really the part

00:34:41,800 --> 00:34:45,400
where will we being lazy and so this is

00:34:45,040 --> 00:34:48,490
being

00:34:45,400 --> 00:34:52,000
done in a staging project so for

00:34:48,490 --> 00:34:55,870
instance cloud OpenStack I South staging

00:34:52,000 --> 00:34:58,690
and then on top of that we run quite

00:34:55,870 --> 00:35:01,900
some tests are so there there's more

00:34:58,690 --> 00:35:03,220
lace agate where we run the same test as

00:35:01,900 --> 00:35:05,080
upstream to make sure that it's still

00:35:03,220 --> 00:35:07,990
walking so we run the test based on the

00:35:05,080 --> 00:35:10,510
packages and if we see that the test

00:35:07,990 --> 00:35:14,170
pass we copy the package from staging

00:35:10,510 --> 00:35:16,330
tune on staging automatically and that

00:35:14,170 --> 00:35:18,940
makes that makes it possible to actually

00:35:16,330 --> 00:35:23,350
have walking package without anything to

00:35:18,940 --> 00:35:26,200
do on outside and so that's how all of

00:35:23,350 --> 00:35:30,160
the cloud OpenStack I sales have Anna

00:35:26,200 --> 00:35:32,350
and so on are populated the part where

00:35:30,160 --> 00:35:34,120
I'm a bit lying is that from time to

00:35:32,350 --> 00:35:36,280
time we actually look at the packages

00:35:34,120 --> 00:35:38,230
because the dependency might change and

00:35:36,280 --> 00:35:42,580
so we need to update that to reflect

00:35:38,230 --> 00:35:44,440
what is done upstream and we might need

00:35:42,580 --> 00:35:49,630
from time to time to also you know

00:35:44,440 --> 00:35:52,360
package the dependencies so you know so

00:35:49,630 --> 00:35:54,100
that's the first part about how we do

00:35:52,360 --> 00:35:57,850
that in OBS but then we want to push

00:35:54,100 --> 00:36:01,630
that in opensuse because opensuse is not

00:35:57,850 --> 00:36:03,690
made just of some random OBS project so

00:36:01,630 --> 00:36:09,910
we have a back project which is called

00:36:03,690 --> 00:36:12,340
this one the white one which is called

00:36:09,910 --> 00:36:14,470
cloud OpenStack factory and so what we

00:36:12,340 --> 00:36:16,840
do is that we say okay we're going to

00:36:14,470 --> 00:36:19,450
ship the Ice House version of one sack

00:36:16,840 --> 00:36:21,430
in the next version of opensuse so we

00:36:19,450 --> 00:36:24,310
take all the package from cloud

00:36:21,430 --> 00:36:27,400
OpenStack ice house and we put them

00:36:24,310 --> 00:36:29,260
cloud OpenStack factory and this project

00:36:27,400 --> 00:36:32,980
is a develop project for opensuse

00:36:29,260 --> 00:36:36,220
factory and with some again magic tool

00:36:32,980 --> 00:36:39,010
that was developed for for opensuse

00:36:36,220 --> 00:36:40,840
which is called OBS auto submit the

00:36:39,010 --> 00:36:44,410
package get automatically some bitter to

00:36:40,840 --> 00:36:46,300
factory and it enters open Susan so

00:36:44,410 --> 00:36:48,520
what's really nice is that most of that

00:36:46,300 --> 00:36:52,600
is automatic we don't have to care that

00:36:48,520 --> 00:36:54,460
much about it and well it just works

00:36:52,600 --> 00:36:57,130
fine I'm so the time sometimes you know

00:36:54,460 --> 00:36:58,930
it breaks but we can fix that

00:36:57,130 --> 00:37:02,799
so just to show you how we do that

00:36:58,930 --> 00:37:06,180
concretely that's what an example of an

00:37:02,799 --> 00:37:10,240
obvious service so we define that way

00:37:06,180 --> 00:37:13,480
Kelly actually no you don't my mouse the

00:37:10,240 --> 00:37:15,549
first so this is a simple file that you

00:37:13,480 --> 00:37:22,140
put along the other files in a package

00:37:15,549 --> 00:37:25,240
and this tells the services what to do

00:37:22,140 --> 00:37:28,269
it could be run automatically by OBS

00:37:25,240 --> 00:37:30,339
every time you commit or on a periodic

00:37:28,269 --> 00:37:32,339
basis what we do is actually that we

00:37:30,339 --> 00:37:34,779
mark all the services as disabled

00:37:32,339 --> 00:37:36,849
because we want to control when we run

00:37:34,779 --> 00:37:38,890
them and we do that with Jenkins we have

00:37:36,849 --> 00:37:42,400
a periodic job in Jenkins that will run

00:37:38,890 --> 00:37:45,460
all that so the first service is called

00:37:42,400 --> 00:37:48,519
download files and it has a parameter

00:37:45,460 --> 00:37:50,980
which is changed generate and what it

00:37:48,519 --> 00:37:54,279
does is simply it simply download the

00:37:50,980 --> 00:37:57,309
table from a website it turns out that

00:37:54,279 --> 00:38:00,400
OpenStack is pretty cool it's providing

00:37:57,309 --> 00:38:04,059
a table for each branch that is updated

00:38:00,400 --> 00:38:05,920
every night so we use that as basis we

00:38:04,059 --> 00:38:07,539
don't know that it's actually not

00:38:05,920 --> 00:38:11,920
version so the name is something like

00:38:07,539 --> 00:38:15,400
Nova dash Havana so we don't know that

00:38:11,920 --> 00:38:17,440
and with the change generate option we

00:38:15,400 --> 00:38:19,779
actually able to pass the changelog

00:38:17,440 --> 00:38:22,900
inside the table and to generate the

00:38:19,779 --> 00:38:25,059
change entry for the package then we

00:38:22,900 --> 00:38:29,230
have the set version service so the

00:38:25,059 --> 00:38:30,700
second one this one well it simply set

00:38:29,230 --> 00:38:32,680
the version in the spec file of the

00:38:30,700 --> 00:38:35,259
package because when you download a new

00:38:32,680 --> 00:38:37,630
version you need to update the spec file

00:38:35,259 --> 00:38:39,250
so what it does I just mentioned that

00:38:37,630 --> 00:38:42,309
the names of the package work something

00:38:39,250 --> 00:38:45,279
like Nova dash Havana so you don't have

00:38:42,309 --> 00:38:47,259
the version in the table name but inside

00:38:45,279 --> 00:38:52,869
the double the directory is actually

00:38:47,259 --> 00:38:55,000
named Nova dash 2013 dot-to-dot blah

00:38:52,869 --> 00:38:57,450
blah blah so there's the version inside

00:38:55,000 --> 00:39:00,609
the tub so it goes fetch that there

00:38:57,450 --> 00:39:04,809
there's a third service refresh batches

00:39:00,609 --> 00:39:08,440
I won't talk about it here go watch the

00:39:04,809 --> 00:39:10,900
video from yesterday let's proly here so

00:39:08,440 --> 00:39:14,289
we add all that and then we have a tank

00:39:10,900 --> 00:39:17,589
job so this is on see i dot opensuse dog

00:39:14,289 --> 00:39:21,700
so you can see that it's all I mean it's

00:39:17,589 --> 00:39:24,460
all visible all public and you can see

00:39:21,700 --> 00:39:26,170
they're all of the jobs that update the

00:39:24,460 --> 00:39:29,890
packages for all of the openstack

00:39:26,170 --> 00:39:33,279
packages also we have Havana high cells

00:39:29,890 --> 00:39:35,349
in master and one less what it does is

00:39:33,279 --> 00:39:39,190
it runs the services that I just show

00:39:35,349 --> 00:39:41,140
our suite update the package that way it

00:39:39,190 --> 00:39:43,210
built package and if the beauty

00:39:41,140 --> 00:39:45,490
successful it commits and as you can see

00:39:43,210 --> 00:39:46,990
there are some red bubbles and that's

00:39:45,490 --> 00:39:49,059
the part where we actually look at

00:39:46,990 --> 00:39:52,420
things because red means it did at work

00:39:49,059 --> 00:39:55,900
so we didn't commit usually a red bubble

00:39:52,420 --> 00:39:58,500
means that there was one patch and the

00:39:55,900 --> 00:40:02,109
patch really needs to be refreshed or

00:39:58,500 --> 00:40:06,279
dropped also on but that could be

00:40:02,109 --> 00:40:09,279
something else so what we actually do is

00:40:06,279 --> 00:40:12,359
we actively monitor that page or the

00:40:09,279 --> 00:40:16,569
males that are being said by Jenkins

00:40:12,359 --> 00:40:20,289
depends on the way we prefer and we fix

00:40:16,569 --> 00:40:23,740
that so it's pretty nice I didn't take a

00:40:20,289 --> 00:40:26,619
picture but there's also a Jenkins job

00:40:23,740 --> 00:40:28,779
to do the gating as i mentioned from

00:40:26,619 --> 00:40:31,000
staging to non staging and that will

00:40:28,779 --> 00:40:34,329
just take the packages rerun the test

00:40:31,000 --> 00:40:37,900
and if it exceeds copy the packages so

00:40:34,329 --> 00:40:41,260
pretty nice so that's what we do to

00:40:37,900 --> 00:40:43,809
integrate OpenStack in opensuse but what

00:40:41,260 --> 00:40:47,260
we've been also doing is integrate

00:40:43,809 --> 00:40:49,359
opensuse in OpenStack because that's

00:40:47,260 --> 00:40:52,569
important we want the project to be

00:40:49,359 --> 00:40:56,200
visible to open site developers and so

00:40:52,569 --> 00:40:59,650
for instance on the grassy area walked

00:40:56,200 --> 00:41:01,329
on the documentation and II like it did

00:40:59,650 --> 00:41:03,730
a huge amount of work to make sure that

00:41:01,329 --> 00:41:07,500
the documentation also reflects how to

00:41:03,730 --> 00:41:10,930
deploy OpenStack on open Suzy NLCS also

00:41:07,500 --> 00:41:14,099
and so if you go on the dark web page

00:41:10,930 --> 00:41:16,630
for OpenStack you can see that we have

00:41:14,099 --> 00:41:20,740
mentioned four points which is pretty

00:41:16,630 --> 00:41:24,160
cool the other thing that we did for

00:41:20,740 --> 00:41:24,640
fall for that is def stack so def stack

00:41:24,160 --> 00:41:27,010
is

00:41:24,640 --> 00:41:30,010
the small tool that people use upstream

00:41:27,010 --> 00:41:32,799
developers of OpenStack to deploy

00:41:30,010 --> 00:41:35,950
quickly a small OpenStack and test their

00:41:32,799 --> 00:41:38,109
changes and their patches so it's really

00:41:35,950 --> 00:41:42,250
a cool part of the deployment

00:41:38,109 --> 00:41:44,589
development framework for 44 pins AG and

00:41:42,250 --> 00:41:47,260
we made sure that it works fine on

00:41:44,589 --> 00:41:49,809
opensuse so there's a wiki page to

00:41:47,260 --> 00:41:52,089
explain that button job that's an

00:41:49,809 --> 00:41:55,150
example of how you do it just clone from

00:41:52,089 --> 00:41:57,279
kids you create a configuration file you

00:41:55,150 --> 00:42:01,359
run a script and at the end of the

00:41:57,279 --> 00:42:03,400
script you have a deployment it's pretty

00:42:01,359 --> 00:42:05,950
nice and so in this example it took like

00:42:03,400 --> 00:42:09,609
six minutes it's really fast actually so

00:42:05,950 --> 00:42:11,529
that's one of actually one of the other

00:42:09,609 --> 00:42:14,760
deployment framework for OpenStack

00:42:11,529 --> 00:42:17,470
except that is truly made for developers

00:42:14,760 --> 00:42:20,769
but yeah if you want to play with

00:42:17,470 --> 00:42:24,190
OpenStack without manually configuring

00:42:20,769 --> 00:42:26,680
it and with the possibility of quickly

00:42:24,190 --> 00:42:32,410
patching it that's really the way to go

00:42:26,680 --> 00:42:34,480
it's pretty nice um so there are a few

00:42:32,410 --> 00:42:38,170
other things that would like to do for

00:42:34,480 --> 00:42:41,440
instance upstream although all of the

00:42:38,170 --> 00:42:44,609
patches are being reviewed in gedit and

00:42:41,440 --> 00:42:47,079
there are some but which are actually

00:42:44,609 --> 00:42:50,049
commenting if the batch is passing all

00:42:47,079 --> 00:42:53,710
the tested all the tests in on a

00:42:50,049 --> 00:42:55,809
specific platform so right now this is

00:42:53,710 --> 00:42:58,269
mostly based on ubuntu there are also

00:42:55,809 --> 00:43:00,369
some some tests for for fedora i think

00:42:58,269 --> 00:43:02,759
but we'd like to integrate with with

00:43:00,369 --> 00:43:05,880
that so you know every time somebody

00:43:02,759 --> 00:43:08,710
submitted patches a patch for OpenStack

00:43:05,880 --> 00:43:10,359
all the tests are being run on opensuse

00:43:08,710 --> 00:43:12,849
to check that it's also working on the

00:43:10,359 --> 00:43:14,700
panzer so we'd like to do that it's it's

00:43:12,849 --> 00:43:18,190
not that difficult it just requires some

00:43:14,700 --> 00:43:21,579
some time so we need to find time for

00:43:18,190 --> 00:43:22,990
that so I mentioned that we we have a

00:43:21,579 --> 00:43:26,049
team for that so we have a mailing list

00:43:22,990 --> 00:43:29,460
we have an IRC channel everything is

00:43:26,049 --> 00:43:32,619
documented on the wiki page come join us

00:43:29,460 --> 00:43:36,140
we're lazy but we're not scary so

00:43:32,619 --> 00:43:40,130
hopefully you know you can walk with us

00:43:36,140 --> 00:43:42,080
and if you also want just to play with

00:43:40,130 --> 00:43:44,240
OpenStack on opensuse that's the place

00:43:42,080 --> 00:43:49,210
where you can get help for that really

00:43:44,240 --> 00:43:55,300
so that's it do you have any questions

00:43:49,210 --> 00:43:58,370
yes let's start with the non NDK high

00:43:55,300 --> 00:44:02,030
for last year we are testing in our

00:43:58,370 --> 00:44:06,170
company OpenStack and for last six

00:44:02,030 --> 00:44:08,840
months we are testing cloudstack what do

00:44:06,170 --> 00:44:12,740
you think about this war between these

00:44:08,840 --> 00:44:17,390
two stacks products it's a very similar

00:44:12,740 --> 00:44:23,660
but yeah it's it's similar in different

00:44:17,390 --> 00:44:28,520
at the same time so I think cloud sack

00:44:23,660 --> 00:44:31,760
for a long time had was really a better

00:44:28,520 --> 00:44:35,120
than OpenStack I'm don't think it's true

00:44:31,760 --> 00:44:38,450
any more and more importantly the main

00:44:35,120 --> 00:44:40,580
difference I see that as I said

00:44:38,450 --> 00:44:43,310
everybody in the industry is supporting

00:44:40,580 --> 00:44:46,760
open sack so that could be if you need

00:44:43,310 --> 00:44:48,620
hardware that is really supported or

00:44:46,760 --> 00:44:50,930
certified for OpenStack that could be

00:44:48,620 --> 00:44:55,190
for storage network not just the compute

00:44:50,930 --> 00:45:01,490
nodes easy for went psycho CloudStack I

00:44:55,190 --> 00:45:03,020
don't think that's as easy but on the

00:45:01,490 --> 00:45:04,910
other hand as far as i know so i've

00:45:03,020 --> 00:45:06,560
never really played with cloudstack but

00:45:04,910 --> 00:45:08,650
cloud psychic i think is a bit easier to

00:45:06,560 --> 00:45:13,040
deploy and it's more user-friendly are

00:45:08,650 --> 00:45:14,750
at beginning at least but yeah but

00:45:13,040 --> 00:45:18,470
really i mean for me the big difference

00:45:14,750 --> 00:45:20,650
is really that OpenStack is is moving

00:45:18,470 --> 00:45:24,800
that fast it's just crazy I mean that's

00:45:20,650 --> 00:45:26,540
there's no way that CloudStack can catch

00:45:24,800 --> 00:45:28,840
up with that there's just no way it's

00:45:26,540 --> 00:45:28,840
not possible

00:45:30,950 --> 00:45:46,040
anybody s nun ND you said everybody

00:45:42,320 --> 00:45:48,109
industry besides apple and what it works

00:45:46,040 --> 00:45:51,260
the other one google google app like

00:45:48,109 --> 00:45:53,390
Google what about Amazon oh yeah forgot

00:45:51,260 --> 00:45:56,720
them hasn't sorry okay no no they

00:45:53,390 --> 00:45:59,300
obviously they've I mean open sack so

00:45:56,720 --> 00:46:01,220
Amazon Web Services is really for the

00:45:59,300 --> 00:46:03,410
public cloud they don't have a private

00:46:01,220 --> 00:46:06,560
cloud solution it except that I think

00:46:03,410 --> 00:46:09,650
they did it for the NSA or CIA I forgot

00:46:06,560 --> 00:46:11,720
but they I mean they don't have a

00:46:09,650 --> 00:46:14,060
private cloud offering but it's still

00:46:11,720 --> 00:46:17,630
competing with a business so they don't

00:46:14,060 --> 00:46:19,990
support that thanks till three groups

00:46:17,630 --> 00:46:19,990
ipod

00:46:24,940 --> 00:46:31,140
how long until the cloud install it's

00:46:27,250 --> 00:46:31,140
good I think lots of Twiggy s nest egg

00:46:31,290 --> 00:46:40,990
so six minutes I it's a bit difficult

00:46:37,810 --> 00:46:42,490
six minutes um it can be very fast

00:46:40,990 --> 00:46:44,260
actually I mean I have some script to

00:46:42,490 --> 00:46:48,339
deploy soo cloud from scratch and it

00:46:44,260 --> 00:46:51,280
takes 30 minutes that's pretty good

00:46:48,339 --> 00:46:57,490
actually kind but you know it's made for

00:46:51,280 --> 00:46:59,619
me but yeah I mean so yeah I'll talk a

00:46:57,490 --> 00:47:01,660
bit about to the club but the the

00:46:59,619 --> 00:47:04,300
Department for more crowbar is actually

00:47:01,660 --> 00:47:07,089
provides an API where that can interact

00:47:04,300 --> 00:47:09,400
with so you don't have to do all things

00:47:07,089 --> 00:47:13,420
manually you can just you know script

00:47:09,400 --> 00:47:17,319
all that and what's taking time is

00:47:13,420 --> 00:47:20,440
actually taking a note from bare metal

00:47:17,319 --> 00:47:22,960
which is not that means no s nothing and

00:47:20,440 --> 00:47:25,810
booting it and installing an OS on top

00:47:22,960 --> 00:47:28,050
of that so that's the slope at to be

00:47:25,810 --> 00:47:28,050
honest

00:47:34,370 --> 00:47:37,510
the purple guy

00:47:42,070 --> 00:47:47,500
when's crowbar going to be American

00:47:44,950 --> 00:47:51,100
Caesar why are you asking me a question

00:47:47,500 --> 00:47:56,980
you asked me yesterday so everyone else

00:47:51,100 --> 00:48:02,290
can I see and uh the issue is that right

00:47:56,980 --> 00:48:05,350
now crowbar is walking on / ubuntu and

00:48:02,290 --> 00:48:06,940
to some extent sent OS but it's not

00:48:05,350 --> 00:48:11,200
talking with on centralized right now

00:48:06,940 --> 00:48:14,880
and so the the people walking on to the

00:48:11,200 --> 00:48:18,100
cloud so the team I'm part of are

00:48:14,880 --> 00:48:20,110
actually interested in making it

00:48:18,100 --> 00:48:25,690
available and open today just taking

00:48:20,110 --> 00:48:28,690
time and the reason for that is that so

00:48:25,690 --> 00:48:31,720
crowbar is built on top of chef so if

00:48:28,690 --> 00:48:35,950
you don't know chef it's a tool that can

00:48:31,720 --> 00:48:39,150
be used to configure things and the chef

00:48:35,950 --> 00:48:43,150
recipes so the script for chef are

00:48:39,150 --> 00:48:46,810
really eat they are thousand bits which

00:48:43,150 --> 00:48:51,250
are specific to each distribution and /

00:48:46,810 --> 00:48:53,770
11 and open to the 31 or factory are

00:48:51,250 --> 00:48:57,640
quite different nowadays if only because

00:48:53,770 --> 00:49:00,580
of system different stands so it would

00:48:57,640 --> 00:49:02,410
require some work it's not to be honest

00:49:00,580 --> 00:49:05,650
I don't think it's impossible it's it's

00:49:02,410 --> 00:49:07,600
really just matter of doing it ah but

00:49:05,650 --> 00:49:12,940
we've been too busy to do it ourselves

00:49:07,600 --> 00:49:16,770
so far can we not reuse what up in twos

00:49:12,940 --> 00:49:16,770
doing now that they're going systemd

00:49:16,860 --> 00:49:23,830
what are they doing what do you mean box

00:49:20,770 --> 00:49:25,990
admin at the using I mean fusing one of

00:49:23,830 --> 00:49:27,880
the big boxes systems don't know so the

00:49:25,990 --> 00:49:31,540
issue is not that you know it's not

00:49:27,880 --> 00:49:34,030
about init scripts versus systemd

00:49:31,540 --> 00:49:35,860
services it's not well that it's really

00:49:34,030 --> 00:49:40,840
that there are some some things which

00:49:35,860 --> 00:49:47,320
are like let me find an example all of

00:49:40,840 --> 00:49:50,430
the the the way you specify like a CTL

00:49:47,320 --> 00:49:53,590
setting which will be different nowadays

00:49:50,430 --> 00:49:55,210
with system d also the names of the

00:49:53,590 --> 00:49:58,839
services might be different

00:49:55,210 --> 00:50:02,080
it's tiny I mean if you look at the high

00:49:58,839 --> 00:50:07,260
level overview it's it's definitely we

00:50:02,080 --> 00:50:09,550
used to say fairly doable you know but

00:50:07,260 --> 00:50:11,530
it's really the small details which are

00:50:09,550 --> 00:50:13,690
difficult because you will not see the

00:50:11,530 --> 00:50:15,820
bug immediately and once you get the bug

00:50:13,690 --> 00:50:18,400
you like what does it come from it's so

00:50:15,820 --> 00:50:21,460
huge I mean the the chef cookbooks that

00:50:18,400 --> 00:50:23,800
we have are pretty huge and finding the

00:50:21,460 --> 00:50:27,430
small bit which is wrong is not that

00:50:23,800 --> 00:50:32,109
easy but if for people who are motivated

00:50:27,430 --> 00:50:36,310
i think it's it's doable in like less

00:50:32,109 --> 00:50:37,660
than one months so somebody's stupid

00:50:36,310 --> 00:50:42,609
enough to want to try and mess around

00:50:37,660 --> 00:50:48,070
with OpenStack you mean you may be tip

00:50:42,609 --> 00:50:52,540
it enough that you know me so well um is

00:50:48,070 --> 00:50:54,880
there a quick and easy guide available

00:50:52,540 --> 00:50:57,310
somewhere whether it be whether it being

00:50:54,880 --> 00:51:00,310
the attack dogs all be on the wiki

00:50:57,310 --> 00:51:05,260
etcetera to get up and running what the

00:51:00,310 --> 00:51:07,450
bare minimum needed is to get up but

00:51:05,260 --> 00:51:09,250
you're saying that oh it is not

00:51:07,450 --> 00:51:11,320
supported yet for deficit no for that

00:51:09,250 --> 00:51:13,930
sack its support atara what is not

00:51:11,320 --> 00:51:17,050
supported is the batch review bonus

00:51:13,930 --> 00:51:21,570
right okay and cannot be deployed on a

00:51:17,050 --> 00:51:24,880
single piece of hardware yes it can

00:51:21,570 --> 00:51:26,830
definitely so the what you will be doing

00:51:24,880 --> 00:51:31,690
in that case is that you will likely

00:51:26,830 --> 00:51:34,810
it's using our well it's the path which

00:51:31,690 --> 00:51:36,280
is ugly about devstack it that to be

00:51:34,810 --> 00:51:38,560
able to configure up inside properly it

00:51:36,280 --> 00:51:40,960
needs to change quite some system-wide

00:51:38,560 --> 00:51:42,940
settings so you might not want to do

00:51:40,960 --> 00:51:44,410
that on your laptop directly or you

00:51:42,940 --> 00:51:47,530
might want to do that on our laptops you

00:51:44,410 --> 00:51:49,359
don't care about and after that it's all

00:51:47,530 --> 00:51:53,830
fine so you can run that in a vm if you

00:51:49,359 --> 00:51:55,750
want otherwise it's pretty simple

00:51:53,830 --> 00:51:58,200
there's actually another tool I didn't

00:51:55,750 --> 00:51:58,200
mention there

00:51:59,859 --> 00:52:10,230
I want to say it to whoever def stake a

00:52:06,519 --> 00:52:14,349
paper you aren't allowed to use a

00:52:10,230 --> 00:52:19,059
password in Rochelle you have to eat

00:52:14,349 --> 00:52:23,920
that after that the Deaf such oh hey

00:52:19,059 --> 00:52:27,220
Jess here but that's take paper if you

00:52:23,920 --> 00:52:32,079
would here use passwords in a shake all

00:52:27,220 --> 00:52:35,380
other how people can say is see that if

00:52:32,079 --> 00:52:38,079
you would do it as rude or anything else

00:52:35,380 --> 00:52:43,989
and you should delete that yeah well

00:52:38,079 --> 00:52:47,380
after that or you who can make a to bed

00:52:43,989 --> 00:52:51,009
before editor so obviously i mean the

00:52:47,380 --> 00:52:52,359
password that you see there are its be

00:52:51,009 --> 00:52:54,160
using a developer machine it's not

00:52:52,359 --> 00:52:56,289
supposed to be a multi-user mashing to

00:52:54,160 --> 00:52:57,789
be honest so i don't think it's a big

00:52:56,289 --> 00:53:00,369
war again the password that you see

00:52:57,789 --> 00:53:03,279
there are really four services that are

00:53:00,369 --> 00:53:05,680
needed for OpenStack not force services

00:53:03,279 --> 00:53:08,650
that will be used to access your machine

00:53:05,680 --> 00:53:12,549
so it's not really critical what's a bit

00:53:08,650 --> 00:53:14,440
less a bit more annoying that you more

00:53:12,549 --> 00:53:18,309
or less a def stack needs to have root

00:53:14,440 --> 00:53:21,819
access and so you need to to use to do

00:53:18,309 --> 00:53:24,009
for that and so you more let's give root

00:53:21,819 --> 00:53:27,069
access to a script that's what I would

00:53:24,009 --> 00:53:31,690
be more uncomfortable with I'm Michelle

00:53:27,069 --> 00:53:42,700
oh is it time we are still have nine

00:53:31,690 --> 00:53:45,900
seconds any last question yes thanks and

00:53:42,700 --> 00:53:48,609
rest what about open stank

00:53:45,900 --> 00:53:51,730
implementation for development or

00:53:48,609 --> 00:53:55,029
testing purposes Rackspace have one

00:53:51,730 --> 00:53:58,329
shell script and a very good quick

00:53:55,029 --> 00:54:01,930
tutorial guide how to install a rec

00:53:58,329 --> 00:54:06,039
space implementation on one now one

00:54:01,930 --> 00:54:08,890
computing and storage node and it's

00:54:06,039 --> 00:54:11,109
really good there's so there's also

00:54:08,890 --> 00:54:12,890
something a completely forgot to include

00:54:11,109 --> 00:54:18,620
a photo did it but I food

00:54:12,890 --> 00:54:19,940
eventually so for opensuse we develop

00:54:18,620 --> 00:54:32,300
something which is called OpenStack

00:54:19,940 --> 00:54:36,170
quick starts as you see we don't have a

00:54:32,300 --> 00:54:42,460
lot of Google juice this is not that one

00:54:36,170 --> 00:54:46,420
actually it is bizarre well let's see

00:54:42,460 --> 00:54:46,420
I'm not sure it's in the right one

00:54:50,450 --> 00:54:54,380
well do you want to talk about it

00:54:52,329 --> 00:54:56,270
there's now you know this week you pitch

00:54:54,380 --> 00:54:58,099
better than I do oh yes its ears to

00:54:56,270 --> 00:55:00,079
mention so actually you had a script

00:54:58,099 --> 00:55:02,510
that will just download the packages

00:55:00,079 --> 00:55:04,940
installed and configure things and boom

00:55:02,510 --> 00:55:06,740
you're done and you can run that also on

00:55:04,940 --> 00:55:10,880
some other nodes so that you have a

00:55:06,740 --> 00:55:12,380
multi-node setup but it I mean it's a

00:55:10,880 --> 00:55:17,660
quick and ugly script it's not like a

00:55:12,380 --> 00:55:21,800
real solution it's a no its you that's

00:55:17,660 --> 00:55:29,230
it it's useful are getting so it's

00:55:21,800 --> 00:55:33,020
tested okay thank you Thank You Michel

00:55:29,230 --> 00:55:36,010
and now it's time for the group photos

00:55:33,020 --> 00:55:36,010

YouTube URL: https://www.youtube.com/watch?v=9b8N3OfKFS0


