Title: openSUSE Conference 2018 - Repository priorities for the real world user
Publication date: 2018-05-25
Playlist: openSUSE Conference 2018
Description: 
	Use additional repositories with confidence

The topic of additional repositories comes up on a regular basis. The official position is to submit everything to Factory to avoid the issue, but for a large number of reasons this cannot always be the case. As such users living in the real world have to navigate the unsupported landscape. By far the best approach is to use repository priorities available through libzypp, but unfortunately this is not well known.

This quick talk will cover the basic usage of priorities, strategies for real usage, and examples of how effective the workflow can be. Additionally some pitfalls will also be covered.

The topic of additional repositories comes up on a regular basis. The official position is to submit everything to Factory to avoid the issue, but for a large number of reasons this cannot always be the case. As such users living in the real world have to navigate the unsupported landscape. By far the best approach is to use repository priorities available through libzypp, but unfortunately this is not well known.

This quick talk will cover the basic usage of priorities, strategies for real usage, and examples of how effective the workflow can be. Additionally some pitfalls will also be covered.

Jimmy Berry
Captions: 
	00:00:05,500 --> 00:00:09,830
all right I guess go ahead and get

00:00:08,240 --> 00:00:12,440
started

00:00:09,830 --> 00:00:14,949
so talk stops the repository priorities

00:00:12,440 --> 00:00:18,619
for the real world rate user

00:00:14,949 --> 00:00:21,439
so I guess my motivation for making this

00:00:18,619 --> 00:00:22,759
talk is seeing people in IRC and some of

00:00:21,439 --> 00:00:24,679
the other support channels have issues

00:00:22,759 --> 00:00:28,039
that I believe could be resolved by

00:00:24,679 --> 00:00:30,589
using priorities on posters so first

00:00:28,039 --> 00:00:33,079
let's go over the goals what are hoping

00:00:30,589 --> 00:00:35,289
to accomplish with this talk so I want

00:00:33,079 --> 00:00:37,550
to cover why you might actually add

00:00:35,289 --> 00:00:39,949
extra repositories beyond the default

00:00:37,550 --> 00:00:41,390
ones some of the pitfalls you can run

00:00:39,949 --> 00:00:43,489
into when using different types of

00:00:41,390 --> 00:00:45,890
repositories without priorities and how

00:00:43,489 --> 00:00:48,859
you can avoid those issues by using

00:00:45,890 --> 00:00:51,519
priorities so first of all let's take a

00:00:48,859 --> 00:00:53,420
look at why you might add repositories

00:00:51,519 --> 00:00:55,100
so the first one which i think is

00:00:53,420 --> 00:00:56,629
probably the most common one is you want

00:00:55,100 --> 00:00:58,699
packages compiled with different or

00:00:56,629 --> 00:01:01,730
additional features something like

00:00:58,699 --> 00:01:03,589
pac-man or something like that another

00:01:01,730 --> 00:01:04,940
one being you want packages are now

00:01:03,589 --> 00:01:06,830
available already in one of the main

00:01:04,940 --> 00:01:09,850
product repositories so you might add a

00:01:06,830 --> 00:01:12,230
develop project or someone's own project

00:01:09,850 --> 00:01:14,390
otherwise you might add for pre-release

00:01:12,230 --> 00:01:17,600
packages either again and develop

00:01:14,390 --> 00:01:19,040
project or somewhere else or you may be

00:01:17,600 --> 00:01:20,930
maintaining packages and you want to

00:01:19,040 --> 00:01:23,180
easily install them on your machine

00:01:20,930 --> 00:01:24,350
after you build them on OBS to try them

00:01:23,180 --> 00:01:26,840
out so there's some reasons why you

00:01:24,350 --> 00:01:28,970
might have depositories so let's take a

00:01:26,840 --> 00:01:31,490
look at a fresh install and we'll go

00:01:28,970 --> 00:01:33,050
through the first reason and kind of

00:01:31,490 --> 00:01:36,040
cover what I imagine a lot of people

00:01:33,050 --> 00:01:38,750
already do so let's go ahead and add

00:01:36,040 --> 00:01:40,280
pac-man repository on default install so

00:01:38,750 --> 00:01:45,520
hopefully you're familiar with adding a

00:01:40,280 --> 00:01:47,930
repository with zipper and then another

00:01:45,520 --> 00:01:49,940
next step being to dub from that package

00:01:47,930 --> 00:01:52,760
or the repository which would switch all

00:01:49,940 --> 00:01:54,260
your packages to pac-man and then an

00:01:52,760 --> 00:01:56,480
example here of trying to install

00:01:54,260 --> 00:01:58,580
blender which I believe shouldn't be in

00:01:56,480 --> 00:02:00,110
the default install so the question

00:01:58,580 --> 00:02:02,270
arises where does blender come from

00:02:00,110 --> 00:02:06,140
because it's in both pac-man and it's in

00:02:02,270 --> 00:02:08,720
the main product repository so does it

00:02:06,140 --> 00:02:11,810
come from tongue blade or pac-man and

00:02:08,720 --> 00:02:13,310
the answer is not necessarily obvious so

00:02:11,810 --> 00:02:15,760
basically here's an example we have

00:02:13,310 --> 00:02:17,900
these are real versions I pulled from

00:02:15,760 --> 00:02:19,760
those two repositories

00:02:17,900 --> 00:02:21,200
a big long version string so in this

00:02:19,760 --> 00:02:24,650
case it would come from pac-man because

00:02:21,200 --> 00:02:26,629
the build number is larger so basically

00:02:24,650 --> 00:02:29,239
it's always looking for overall larger

00:02:26,629 --> 00:02:31,069
number so let's say that we had a new

00:02:29,239 --> 00:02:33,470
release of blender that hits tumbleweed

00:02:31,069 --> 00:02:35,450
it hasn't yet propagated to pac-man yet

00:02:33,470 --> 00:02:37,129
so if you were to be installing and you

00:02:35,450 --> 00:02:39,140
happen to hit this scenario you would

00:02:37,129 --> 00:02:40,370
have the 3.0 version in tumbleweed and

00:02:39,140 --> 00:02:41,900
not in pac-man

00:02:40,370 --> 00:02:44,780
so in this case it would come from

00:02:41,900 --> 00:02:46,340
tumbleweed so there's no clear rhyme or

00:02:44,780 --> 00:02:47,569
reason so it's kind of do you feel lucky

00:02:46,340 --> 00:02:49,940
where is it gonna come from you can

00:02:47,569 --> 00:02:52,099
obviously check this yourself manually

00:02:49,940 --> 00:02:55,069
but generally usually ad repositories

00:02:52,099 --> 00:02:56,329
with a reason in mind so let's talk

00:02:55,069 --> 00:02:57,980
about when we're dumping with allow

00:02:56,329 --> 00:03:00,400
vendor change which is when a lot of

00:02:57,980 --> 00:03:02,329
this comes from so this used to be the

00:03:00,400 --> 00:03:04,250
default behavior that would come out of

00:03:02,329 --> 00:03:05,750
the box but it would mean that if you

00:03:04,250 --> 00:03:07,819
added something like pac-man depending

00:03:05,750 --> 00:03:10,010
on when you decided to update your

00:03:07,819 --> 00:03:11,959
machine and the state of pac-man and the

00:03:10,010 --> 00:03:13,159
product repository the packages might

00:03:11,959 --> 00:03:15,500
flip-flop because of those build

00:03:13,159 --> 00:03:17,329
revision numbers or the versions of the

00:03:15,500 --> 00:03:18,859
packages themselves and that can cause a

00:03:17,329 --> 00:03:20,810
lot of problems you could actually have

00:03:18,859 --> 00:03:23,930
weird splits of packages from both

00:03:20,810 --> 00:03:27,440
repositories going forward that's been

00:03:23,930 --> 00:03:29,000
disabled so the default now is to not

00:03:27,440 --> 00:03:30,799
allow interchange by default which

00:03:29,000 --> 00:03:32,599
prevents the flip-flop but you don't

00:03:30,799 --> 00:03:34,879
necessarily resolve the question of

00:03:32,599 --> 00:03:38,419
where does the package come from if I

00:03:34,879 --> 00:03:39,829
don't manually pick it this is obviously

00:03:38,419 --> 00:03:40,940
further aggravated if you add more

00:03:39,829 --> 00:03:42,409
things besides just something like

00:03:40,940 --> 00:03:44,269
pac-man if you add develop projects or

00:03:42,409 --> 00:03:46,430
your own repositories a lot of times

00:03:44,269 --> 00:03:47,750
those repositories will have different

00:03:46,430 --> 00:03:49,790
versions of the same packages which

00:03:47,750 --> 00:03:51,769
means that package will be available in

00:03:49,790 --> 00:03:52,790
multiple sources and you you'll have to

00:03:51,769 --> 00:03:53,150
make a decision as to where it comes

00:03:52,790 --> 00:03:55,819
from

00:03:53,150 --> 00:03:58,549
so question is can we communicate why

00:03:55,819 --> 00:04:00,650
are we adding a repository to zipper in

00:03:58,549 --> 00:04:02,030
such a way that it would make the right

00:04:00,650 --> 00:04:05,479
choice as to where to take the package

00:04:02,030 --> 00:04:08,239
from and the answer is yes can use

00:04:05,479 --> 00:04:11,720
Pastore priorities so priorities allow

00:04:08,239 --> 00:04:14,989
us to specify an order of precedence for

00:04:11,720 --> 00:04:16,430
the repositories which means which one

00:04:14,989 --> 00:04:19,549
to basically use over the other ones

00:04:16,430 --> 00:04:20,989
when they both have the same package so

00:04:19,549 --> 00:04:22,510
by doing this we eliminate the flip-flop

00:04:20,989 --> 00:04:25,250
because we'll basically always use

00:04:22,510 --> 00:04:27,740
whichever repository has the higher

00:04:25,250 --> 00:04:29,060
precedence she also gives us consistent

00:04:27,740 --> 00:04:30,040
package sourcing because if we know that

00:04:29,060 --> 00:04:31,660
a package is in multiple

00:04:30,040 --> 00:04:33,370
stories it always comes from whichever

00:04:31,660 --> 00:04:34,840
one we have the higher party so again it

00:04:33,370 --> 00:04:37,330
doesn't switch and it picks from the

00:04:34,840 --> 00:04:39,670
same place it's also nicely documents on

00:04:37,330 --> 00:04:41,350
your own machine kind of what your

00:04:39,670 --> 00:04:42,340
reasoning was for adding repositories a

00:04:41,350 --> 00:04:45,850
lot of times they can be there for a

00:04:42,340 --> 00:04:47,590
long time and you may forget so helps

00:04:45,850 --> 00:04:51,150
with that and as we'll cover more it's

00:04:47,590 --> 00:04:53,350
nicely allows kind of a hands-free

00:04:51,150 --> 00:04:55,750
switching to the product repository

00:04:53,350 --> 00:04:57,820
when packages become stable so I'll go

00:04:55,750 --> 00:05:00,880
through that example some more so how to

00:04:57,820 --> 00:05:01,930
use separate repository priorities you

00:05:00,880 --> 00:05:03,940
can either set them when you add your

00:05:01,930 --> 00:05:06,130
post or when you add a repository the

00:05:03,940 --> 00:05:09,490
example there or you can modify them

00:05:06,130 --> 00:05:11,260
after the fact so in case you're not

00:05:09,490 --> 00:05:13,840
familiar the default priority is 99

00:05:11,260 --> 00:05:16,030
lower is more important higher is less

00:05:13,840 --> 00:05:19,000
important so basically one would always

00:05:16,030 --> 00:05:21,940
win over a 99 so it's an ascending order

00:05:19,000 --> 00:05:23,590
of importance so here's an example of

00:05:21,940 --> 00:05:25,810
what your default setup might look like

00:05:23,590 --> 00:05:29,500
on tumbly where you basically have the

00:05:25,810 --> 00:05:32,560
three main repositories all enabled with

00:05:29,500 --> 00:05:34,000
default priority of 99 so now let's go

00:05:32,560 --> 00:05:36,070
ahead and we'll revisit our pac-man

00:05:34,000 --> 00:05:37,630
scenario where we add pac-man but this

00:05:36,070 --> 00:05:39,400
time we'll add it with a priority of 90

00:05:37,630 --> 00:05:41,200
so that being more important than the

00:05:39,400 --> 00:05:42,430
default packages which is typically why

00:05:41,200 --> 00:05:46,000
you would add pac-man since you wanted

00:05:42,430 --> 00:05:49,660
to replace packages with those compiled

00:05:46,000 --> 00:05:51,610
with additional features so now we don't

00:05:49,660 --> 00:05:53,860
actually have to specify to dump from

00:05:51,610 --> 00:05:55,630
pac-man we can just say dump in general

00:05:53,860 --> 00:05:57,070
because it will go ahead and pick any

00:05:55,630 --> 00:05:58,480
packages that come from both from

00:05:57,070 --> 00:06:01,450
pac-man because we told it it's a higher

00:05:58,480 --> 00:06:03,370
priority so here again is the example of

00:06:01,450 --> 00:06:05,650
installing a package that wouldn't exist

00:06:03,370 --> 00:06:06,730
in the first place of blender so then we

00:06:05,650 --> 00:06:08,230
have the question again of where does it

00:06:06,730 --> 00:06:08,500
come from but this time it's easy to

00:06:08,230 --> 00:06:10,270
answer

00:06:08,500 --> 00:06:14,080
it comes from pac-man because we added

00:06:10,270 --> 00:06:15,520
that with a higher priority so again

00:06:14,080 --> 00:06:16,870
we'll take a look at the example or I

00:06:15,520 --> 00:06:18,640
gave where they're in flux where there

00:06:16,870 --> 00:06:20,770
was an update and tumbly that hasn't yet

00:06:18,640 --> 00:06:22,330
propagated to pac-man so in this case

00:06:20,770 --> 00:06:22,780
the version number is clearly larger for

00:06:22,330 --> 00:06:25,180
tumbleweed

00:06:22,780 --> 00:06:27,730
than it is in pac-man but again it will

00:06:25,180 --> 00:06:28,870
come from pac-man regardless which is

00:06:27,730 --> 00:06:32,560
actually what we want so there's no

00:06:28,870 --> 00:06:36,040
flip-flop and go through it so next I'll

00:06:32,560 --> 00:06:38,169
cover a case study that I had personally

00:06:36,040 --> 00:06:40,180
which was using kiddie connect so it was

00:06:38,169 --> 00:06:42,200
not yet in the official repositories

00:06:40,180 --> 00:06:45,090
when I started using it

00:06:42,200 --> 00:06:47,100
so I actually added I had already the KT

00:06:45,090 --> 00:06:48,810
extra or pasta Reina added the KT extra

00:06:47,100 --> 00:06:51,630
unstable till C added them with

00:06:48,810 --> 00:06:52,800
priorities of 105 and 106 those being

00:06:51,630 --> 00:06:55,170
less important than the default

00:06:52,800 --> 00:06:56,370
priorities which means I basically only

00:06:55,170 --> 00:06:59,240
want to use them for packages that

00:06:56,370 --> 00:07:02,160
aren't in the main product repositories

00:06:59,240 --> 00:07:03,870
so I would go ahead and install KDE

00:07:02,160 --> 00:07:05,700
connect in that case and in the

00:07:03,870 --> 00:07:08,220
initially it came from the unstable

00:07:05,700 --> 00:07:11,250
repository because the KD maintainer is

00:07:08,220 --> 00:07:14,160
only had there since it had no official

00:07:11,250 --> 00:07:16,980
releases some months later it had

00:07:14,160 --> 00:07:18,630
previous candidates so the package was

00:07:16,980 --> 00:07:20,130
moved into the kiddie extra Pastore and

00:07:18,630 --> 00:07:22,770
nicely automatically for me when I went

00:07:20,130 --> 00:07:24,540
to dump my machine there was a change in

00:07:22,770 --> 00:07:26,190
repositories to that one I didn't have

00:07:24,540 --> 00:07:27,780
to do anything but I basically got the

00:07:26,190 --> 00:07:30,470
more stable one obviously you might want

00:07:27,780 --> 00:07:33,210
to continue using the nightly builds but

00:07:30,470 --> 00:07:34,890
normally that's not what I want and then

00:07:33,210 --> 00:07:36,420
a few months later had official stable

00:07:34,890 --> 00:07:38,400
releases so when I dumped then it

00:07:36,420 --> 00:07:43,860
automatically switched to the standard

00:07:38,400 --> 00:07:45,480
repository so to review basically we can

00:07:43,860 --> 00:07:46,830
automatically switch to using the main

00:07:45,480 --> 00:07:48,570
product repos without having to do

00:07:46,830 --> 00:07:50,970
anything so again this took like five

00:07:48,570 --> 00:07:52,530
months or something to occur nothing I

00:07:50,970 --> 00:07:53,670
had to manage I just noticed it when I

00:07:52,530 --> 00:07:55,100
went it up which was kind of nice

00:07:53,670 --> 00:07:57,120
everything's dealt with the for you and

00:07:55,100 --> 00:07:58,530
it also means that we can add lots of

00:07:57,120 --> 00:08:00,420
extra repositories so in fact you could

00:07:58,530 --> 00:08:02,040
just about add all the repositories on

00:08:00,420 --> 00:08:03,570
OBS with lower priorities and an

00:08:02,040 --> 00:08:05,340
interior they wouldn't completely hose

00:08:03,570 --> 00:08:07,020
your machine because you wouldn't use

00:08:05,340 --> 00:08:08,660
anything from them if it didn't come if

00:08:07,020 --> 00:08:12,750
it was already in the main product repos

00:08:08,660 --> 00:08:14,580
so that's kind of nice so let's bring it

00:08:12,750 --> 00:08:16,920
all together how do we actually make you

00:08:14,580 --> 00:08:18,240
saw this so the key here is that we want

00:08:16,920 --> 00:08:20,700
to always dump with a lot of vendor

00:08:18,240 --> 00:08:21,810
change and we want to have priority set

00:08:20,700 --> 00:08:24,240
on all our repos so if you don't have

00:08:21,810 --> 00:08:25,260
priority set and obviously dumping with

00:08:24,240 --> 00:08:27,060
a lot of interchange can have

00:08:25,260 --> 00:08:29,610
undesirable effects so these are the

00:08:27,060 --> 00:08:30,810
ways that you can dump with that either

00:08:29,610 --> 00:08:33,660
whenever you run the command or you can

00:08:30,810 --> 00:08:35,880
change the config and this basically

00:08:33,660 --> 00:08:37,440
gives us everything we want so we

00:08:35,880 --> 00:08:39,870
automatically utilize new packages when

00:08:37,440 --> 00:08:43,410
they're added to pack bin so if there's

00:08:39,870 --> 00:08:44,760
some package like blender that comes out

00:08:43,410 --> 00:08:46,260
with new feature and it can only be

00:08:44,760 --> 00:08:49,170
compiled in pac-man then we

00:08:46,260 --> 00:08:50,460
automatically switch to that I'm gonna

00:08:49,170 --> 00:08:53,640
drop everything babe's basically the way

00:08:50,460 --> 00:08:54,840
you want and extra pack extra repos the

00:08:53,640 --> 00:08:55,440
ones of lower priority are basically

00:08:54,840 --> 00:08:58,320
only you

00:08:55,440 --> 00:08:59,850
is when you have to so let's review the

00:08:58,320 --> 00:09:01,260
reasons why we might add repositories

00:08:59,850 --> 00:09:03,150
again here and basically assign them

00:09:01,260 --> 00:09:05,250
priorities these are parties I use key

00:09:03,150 --> 00:09:08,220
here is more or less important than the

00:09:05,250 --> 00:09:10,590
defaults I generally leave space so I

00:09:08,220 --> 00:09:11,880
basically increment by five that way if

00:09:10,590 --> 00:09:14,700
I have interesting cases that need to

00:09:11,880 --> 00:09:16,080
fit in the middle I can do that so for

00:09:14,700 --> 00:09:17,550
example compiled with additional or

00:09:16,080 --> 00:09:19,080
different features that be pac-man so I

00:09:17,550 --> 00:09:22,050
would add it with priority of 90 so it'd

00:09:19,080 --> 00:09:24,030
be more important our posit or e that

00:09:22,050 --> 00:09:27,510
contains extra packages 105 so that was

00:09:24,030 --> 00:09:28,920
like the KT extra ones and then again

00:09:27,510 --> 00:09:30,180
pre-release or things you want to test

00:09:28,920 --> 00:09:32,370
yourself there higher party in the

00:09:30,180 --> 00:09:33,780
defaults but I don't generally want to

00:09:32,370 --> 00:09:35,550
override pac-man in this case but you

00:09:33,780 --> 00:09:38,340
might so for example this is what my

00:09:35,550 --> 00:09:40,920
desktop looked like before this

00:09:38,340 --> 00:09:42,890
presentation obviously have a lot of

00:09:40,920 --> 00:09:46,170
other repositories but basic just there

00:09:42,890 --> 00:09:47,790
so if you run list repositories with the

00:09:46,170 --> 00:09:49,560
P option you get them sorted by priority

00:09:47,790 --> 00:09:50,970
which is nice so that's that goes back

00:09:49,560 --> 00:09:52,800
to that documenting why you might have

00:09:50,970 --> 00:09:55,020
added these so for example the network

00:09:52,800 --> 00:09:56,490
and open aged apposite or ease i added

00:09:55,020 --> 00:09:57,540
because I wanted to package out of those

00:09:56,490 --> 00:09:58,980
that wasn't available in the main

00:09:57,540 --> 00:10:01,260
product which is why they are lower

00:09:58,980 --> 00:10:03,750
priority so again it's very easy to tell

00:10:01,260 --> 00:10:06,120
when you look at that list of course the

00:10:03,750 --> 00:10:07,650
standard caveats apply if you're

00:10:06,120 --> 00:10:09,360
installing things from the extra roof

00:10:07,650 --> 00:10:11,370
additional repos they may or may not

00:10:09,360 --> 00:10:13,590
work obviously things and develop

00:10:11,370 --> 00:10:15,810
projects are in flux so packages may be

00:10:13,590 --> 00:10:17,460
broken and you know zipper priorities

00:10:15,810 --> 00:10:20,060
doesn't protect you from things that are

00:10:17,460 --> 00:10:22,860
broken so so it's always look at the

00:10:20,060 --> 00:10:26,280
dump out but make sure that it's a same

00:10:22,860 --> 00:10:30,750
proposal and that's the basic idea

00:10:26,280 --> 00:10:34,350
so from personal use before the changes

00:10:30,750 --> 00:10:36,810
to allow vendor change when all that was

00:10:34,350 --> 00:10:38,100
changed in tumbleweed this resolved

00:10:36,810 --> 00:10:39,600
issues with pac-man and other things

00:10:38,100 --> 00:10:42,960
like that so I I used to have issues

00:10:39,600 --> 00:10:44,130
where you would have to resolve package

00:10:42,960 --> 00:10:45,240
problems when you have lots of

00:10:44,130 --> 00:10:47,190
repositories like that and I haven't had

00:10:45,240 --> 00:10:56,339
issues since doing this several years so

00:10:47,190 --> 00:10:58,170
any questions or comments all right then

00:10:56,339 --> 00:11:01,500
I guess that's it

00:10:58,170 --> 00:11:01,500
so thank you

00:11:08,600 --> 00:11:10,660

YouTube URL: https://www.youtube.com/watch?v=x8kEaJU6hlw


