Title: openSUSE Conference 2018 - Ceph -  The Distributed Storage Solution
Publication date: 2018-05-25
Playlist: openSUSE Conference 2018
Description: 
	Isn't a single NAS system sufficient? 

You want to learn more about distributed storage solutions and in particular about Ceph? In this talk I would like to give you a quick introduction about distributed storage and Ceph at a glance. What is it? Why is it useful? Why do I need it? Isn't a single NAS system suffiecient?

Who should join?
Everyone who uses storage :-)

What is Ceph?
Ceph’s foundation is the Reliable Autonomic Distributed Object Store (RADOS), which provides your applications with object, block, and file system storage in a single unified storage cluster—making Ceph flexible, highly reliable and easy for you to manage.

You want to learn more about distributed storage solutions and in particular about Ceph? In this talk I would like to give you a quick introduction about distributed storage and Ceph at a glance. What is it? Why is it useful? Why do I need it? Isn't a single NAS system suffiecient?

Who should join?
Everyone who uses storage :-)

What is Ceph?
Ceph’s foundation is the Reliable Autonomic Distributed Object Store (RADOS), which provides your applications with object, block, and file system storage in a single unified storage cluster—making Ceph flexible, highly reliable and easy for you to manage.

Kai Wagner Laura Paduano
Captions: 
	00:00:05,630 --> 00:00:12,330
so I think we're we can start today I'm

00:00:10,200 --> 00:00:15,570
pretty happy to be here and especially

00:00:12,330 --> 00:00:18,810
that I have more attendees than I would

00:00:15,570 --> 00:00:21,750
say between five and seven because I was

00:00:18,810 --> 00:00:23,760
two weeks ago I was holding a wall as

00:00:21,750 --> 00:00:26,010
the presentation I do later with my

00:00:23,760 --> 00:00:28,740
colleague Laura about the miniature

00:00:26,010 --> 00:00:30,990
dashboard and they've invited me to do

00:00:28,740 --> 00:00:32,340
this talk and then once I wear there

00:00:30,990 --> 00:00:35,820
they figured out also no it's too

00:00:32,340 --> 00:00:37,710
technical and then no one seemed to join

00:00:35,820 --> 00:00:39,570
so this was kind of depressing so I'm

00:00:37,710 --> 00:00:42,510
clearly happy that there are more people

00:00:39,570 --> 00:00:44,730
interested in Seth in general is that if

00:00:42,510 --> 00:00:45,749
you're attending to or pretending to

00:00:44,730 --> 00:00:48,420
fall asleep

00:00:45,749 --> 00:00:50,699
feel free to scan this QR code is a

00:00:48,420 --> 00:00:54,480
stylish link where the presentation is

00:00:50,699 --> 00:00:56,039
hosted it's on get up so if you want to

00:00:54,480 --> 00:00:57,899
follow on your mobile devices or

00:00:56,039 --> 00:01:00,629
somewhere else or if you just want to

00:00:57,899 --> 00:01:02,940
leave because it's getting boring you

00:01:00,629 --> 00:01:05,580
can look up this afterwards so let's

00:01:02,940 --> 00:01:08,040
start for today what I've done the talk

00:01:05,580 --> 00:01:10,439
I talk today is about Seth the

00:01:08,040 --> 00:01:12,659
distributed storage in general because

00:01:10,439 --> 00:01:15,030
we certain initially we submitted to

00:01:12,659 --> 00:01:17,310
talk about asset manager dashboard which

00:01:15,030 --> 00:01:21,030
will we have a derp I guess I'm one hour

00:01:17,310 --> 00:01:24,090
from now and then I realized okay there

00:01:21,030 --> 00:01:26,549
is no general talk about Seth so maybe

00:01:24,090 --> 00:01:29,759
it could be complicated if people would

00:01:26,549 --> 00:01:32,340
join a talk about a web UI managing a

00:01:29,759 --> 00:01:34,439
storage they have no clue about so I

00:01:32,340 --> 00:01:36,359
submitted another proposal and this is

00:01:34,439 --> 00:01:38,820
where I am now I would like to talk a

00:01:36,359 --> 00:01:40,890
little bit about Seth agenda for today

00:01:38,820 --> 00:01:44,009
first of all quick introduction we'll

00:01:40,890 --> 00:01:45,659
keep it really short then I was stumped

00:01:44,009 --> 00:01:47,880
a start from the basics it's really

00:01:45,659 --> 00:01:49,560
basic it was too easy we can jump over

00:01:47,880 --> 00:01:50,789
to more difficult cells so let's just

00:01:49,560 --> 00:01:53,100
let me know

00:01:50,789 --> 00:01:55,679
then what it's f and the core components

00:01:53,100 --> 00:01:59,159
of staff I think this was really useful

00:01:55,679 --> 00:02:02,039
and last but not least some use cases I

00:01:59,159 --> 00:02:05,759
gathered in the meanwhile quick

00:02:02,039 --> 00:02:07,170
introduction about myself my name was

00:02:05,759 --> 00:02:10,229
written down already in the slides so

00:02:07,170 --> 00:02:12,390
it's asking you I'm Kai I'm obviously

00:02:10,229 --> 00:02:13,590
working for zeusie and there is this

00:02:12,390 --> 00:02:17,040
nice chameleon in the corner here so

00:02:13,590 --> 00:02:18,650
it's kind of obvious I'm working from

00:02:17,040 --> 00:02:20,300
folder

00:02:18,650 --> 00:02:23,090
if you have no clue where folder is

00:02:20,300 --> 00:02:25,069
folder is in the middle of Hesiod so I

00:02:23,090 --> 00:02:27,470
would say in the middle of Germany more

00:02:25,069 --> 00:02:29,690
or less so the good thing is it's the

00:02:27,470 --> 00:02:30,800
same distance to everywhere just the bad

00:02:29,690 --> 00:02:32,959
thing is it's the same distance to

00:02:30,800 --> 00:02:35,450
everywhere so it's a really small town

00:02:32,959 --> 00:02:36,799
if you want to reach out to me mmm you

00:02:35,450 --> 00:02:40,879
can reach me in most of those channels

00:02:36,799 --> 00:02:44,060
and oft see or free note nickname you

00:02:40,879 --> 00:02:46,489
see this seed there so now it's getting

00:02:44,060 --> 00:02:49,519
serious so please listen to me and could

00:02:46,489 --> 00:02:51,500
get complicated so this is now the

00:02:49,519 --> 00:02:54,290
really serious part you think it's was a

00:02:51,500 --> 00:02:57,739
joke that's not so please say comics

00:02:54,290 --> 00:03:00,110
will be interesting single math system

00:02:57,739 --> 00:03:02,870
isn't it enough I hear this her just

00:03:00,110 --> 00:03:05,360
many many times of course could be all

00:03:02,870 --> 00:03:07,099
of all the journey starts with just a

00:03:05,360 --> 00:03:08,299
single hard drive so you connect a

00:03:07,099 --> 00:03:10,370
single hard drive why always be

00:03:08,299 --> 00:03:13,489
something like that two and a half inch

00:03:10,370 --> 00:03:15,530
or maybe more to your laptop store all

00:03:13,489 --> 00:03:16,269
your data that's it that's fine it's

00:03:15,530 --> 00:03:19,310
cool

00:03:16,269 --> 00:03:21,170
that's not scaling so after quite a

00:03:19,310 --> 00:03:24,139
while you buy a bunch of artists

00:03:21,170 --> 00:03:29,600
combined them maybe in a USB dongle or

00:03:24,139 --> 00:03:31,400
whatever it's also not that fancy wait

00:03:29,600 --> 00:03:35,750
on the other hand where to put all of

00:03:31,400 --> 00:03:37,160
those drives first of all your dedicated

00:03:35,750 --> 00:03:39,829
server is needed so we put all our

00:03:37,160 --> 00:03:41,329
drives maybe 8 maybe 24 maybe 96 I

00:03:39,829 --> 00:03:44,269
didn't know I heard of Supermicro

00:03:41,329 --> 00:03:46,040
services more than hundred 100 discs in

00:03:44,269 --> 00:03:50,389
just a single chassis that's amazing

00:03:46,040 --> 00:03:52,639
that's cool but yeah well one server is

00:03:50,389 --> 00:03:54,889
really enough of course not we need more

00:03:52,639 --> 00:03:57,079
so we need more servers and then we need

00:03:54,889 --> 00:04:00,889
a single rack need another one another

00:03:57,079 --> 00:04:04,480
one and maybe a hall so I could get

00:04:00,889 --> 00:04:07,940
complicated so of course there's more

00:04:04,480 --> 00:04:11,630
first of all when we have a single just

00:04:07,940 --> 00:04:13,730
a single NASA instance how do we manage

00:04:11,630 --> 00:04:16,669
it mostly was a single application we

00:04:13,730 --> 00:04:22,669
have a just one web UI I give you a

00:04:16,669 --> 00:04:24,680
second just take a seat you have a

00:04:22,669 --> 00:04:27,320
single web UI to manage the whole system

00:04:24,680 --> 00:04:29,750
so that's that's really cool but once

00:04:27,320 --> 00:04:30,940
you deploy it more and more servers more

00:04:29,750 --> 00:04:34,000
rags

00:04:30,940 --> 00:04:35,680
yes I would say way too many options you

00:04:34,000 --> 00:04:38,320
deployed I don't know hundreds of the

00:04:35,680 --> 00:04:39,580
same WEP you ice or different wipe your

00:04:38,320 --> 00:04:41,680
eyes and you have to manage all of them

00:04:39,580 --> 00:04:45,100
first of all in a small company this is

00:04:41,680 --> 00:04:48,100
kind of rather easy to administrate but

00:04:45,100 --> 00:04:49,690
later on this gets rather complicated in

00:04:48,100 --> 00:04:51,520
general for a bottom line there are two

00:04:49,690 --> 00:04:53,790
ways of scaling I hope that everyone

00:04:51,520 --> 00:04:55,960
knows about it but just to walk through

00:04:53,790 --> 00:04:57,490
their scale up there's a difference

00:04:55,960 --> 00:05:00,640
between scale happens get out first

00:04:57,490 --> 00:05:01,930
thing a scale up easiest thing you have

00:05:00,640 --> 00:05:04,840
a single chassis and we've put more

00:05:01,930 --> 00:05:07,360
stuff in it more RAM more CPU power more

00:05:04,840 --> 00:05:09,510
this you just scared up that's that your

00:05:07,360 --> 00:05:13,060
scale up the other one is scale out

00:05:09,510 --> 00:05:14,890
opposite just putting more notes besides

00:05:13,060 --> 00:05:18,850
the other one and then you could scale

00:05:14,890 --> 00:05:21,100
out your storage system at the beginning

00:05:18,850 --> 00:05:22,570
that's cool but after quite a while just

00:05:21,100 --> 00:05:25,600
for single administrators not enough

00:05:22,570 --> 00:05:28,270
anymore so one admin couldn't handle the

00:05:25,600 --> 00:05:30,850
whole needs that you have so what are

00:05:28,270 --> 00:05:32,980
you gonna do it's easy you hire more

00:05:30,850 --> 00:05:35,800
people it's cool then you have a storage

00:05:32,980 --> 00:05:40,600
team it's amazing but not that

00:05:35,800 --> 00:05:42,250
exhausting sometimes so I had to hope

00:05:40,600 --> 00:05:44,410
there was something better and we could

00:05:42,250 --> 00:05:46,750
do better and of course there is and now

00:05:44,410 --> 00:05:50,130
there's a simple question and I hope

00:05:46,750 --> 00:05:50,130
this is easy what's that

00:05:50,860 --> 00:05:58,189
yeah amazing fact that I can also just

00:05:56,479 --> 00:06:00,289
remove to self underneath which was

00:05:58,189 --> 00:06:04,129
quite hard took me quite some steam

00:06:00,289 --> 00:06:06,020
skills to remove it yes indeed Edsel

00:06:04,129 --> 00:06:07,430
let's talk about Seth what is it

00:06:06,020 --> 00:06:08,689
everyone is talking about it

00:06:07,430 --> 00:06:10,759
it's like a little bit like kubernetes

00:06:08,689 --> 00:06:11,259
it's a cool password so what the hell is

00:06:10,759 --> 00:06:14,839
it

00:06:11,259 --> 00:06:17,180
in general the f is a distributed object

00:06:14,839 --> 00:06:18,559
storage I guess if you heard or read

00:06:17,180 --> 00:06:21,499
something about self you read this

00:06:18,559 --> 00:06:24,770
already sounds cool but I don't know

00:06:21,499 --> 00:06:26,779
what it means I have no clue so also a

00:06:24,770 --> 00:06:30,439
unified solution so you have object

00:06:26,779 --> 00:06:32,479
block and file storage in a single

00:06:30,439 --> 00:06:33,860
solution or a unified that's cool as

00:06:32,479 --> 00:06:35,569
well that's all we wanted all the time

00:06:33,860 --> 00:06:38,330
unify just a single solution that's

00:06:35,569 --> 00:06:40,399
amazing cool and what's really important

00:06:38,330 --> 00:06:41,990
and that's from the document as well

00:06:40,399 --> 00:06:45,319
officially it's designed for performance

00:06:41,990 --> 00:06:47,240
reliability and scalability I guess

00:06:45,319 --> 00:06:51,020
there's no password missing so it must

00:06:47,240 --> 00:06:54,740
be the perfect solution the initial

00:06:51,020 --> 00:06:57,709
principles of Seth where to build a

00:06:54,740 --> 00:07:00,199
system that scales horizontally so it's

00:06:57,709 --> 00:07:02,300
just made for scale out that's what you

00:07:00,199 --> 00:07:05,029
seem to put more and more nodes in it

00:07:02,300 --> 00:07:07,039
that's where all the strengths of Seth

00:07:05,029 --> 00:07:08,599
come to taking place if you're adding

00:07:07,039 --> 00:07:11,149
more and more nodes it's not made just

00:07:08,599 --> 00:07:12,740
to scale only on a single or two note

00:07:11,149 --> 00:07:15,139
system doesn't make sense at all so the

00:07:12,740 --> 00:07:18,229
more nodes he had the better Seth gets

00:07:15,139 --> 00:07:19,729
that's the point from the beginning it

00:07:18,229 --> 00:07:24,800
was designed to be without a single

00:07:19,729 --> 00:07:26,659
point of failure so there are some if

00:07:24,800 --> 00:07:29,719
you talk about how you access the data

00:07:26,659 --> 00:07:31,550
yes that's true but the underneath how

00:07:29,719 --> 00:07:34,339
your data is distributed there is no

00:07:31,550 --> 00:07:36,999
single point of failure the cool thing

00:07:34,339 --> 00:07:39,319
is I guess was almost every open source

00:07:36,999 --> 00:07:41,209
solution you can run it on commodity

00:07:39,319 --> 00:07:43,490
hardware so just by your hardware from

00:07:41,209 --> 00:07:45,529
your hardware vendor and it's fine also

00:07:43,490 --> 00:07:49,309
it runs on arm for example so

00:07:45,529 --> 00:07:53,689
that'sthat's perfect Steffes made to be

00:07:49,309 --> 00:07:56,180
self-managed mostly in most situations

00:07:53,689 --> 00:07:58,099
it's self managed sometimes when it's

00:07:56,180 --> 00:08:01,339
not self managed then it's getting

00:07:58,099 --> 00:08:03,160
really complicated so but the design is

00:08:01,339 --> 00:08:07,990
made for it and it's licensed under the

00:08:03,160 --> 00:08:09,670
GPL one thing to understand is that the

00:08:07,990 --> 00:08:11,860
most important thing was in service that

00:08:09,670 --> 00:08:15,850
sense traits of everything for

00:08:11,860 --> 00:08:18,580
consistency so the first thing Seth

00:08:15,850 --> 00:08:21,010
tries to do is to save and to secure

00:08:18,580 --> 00:08:23,040
your data whatever will happen so this

00:08:21,010 --> 00:08:26,680
could lead for example that you couldn't

00:08:23,040 --> 00:08:30,610
write data to your cluster anymore just

00:08:26,680 --> 00:08:32,590
because Seth tries to secure your data

00:08:30,610 --> 00:08:35,560
and to secure you for loop from losing

00:08:32,590 --> 00:08:40,419
data so first principle is traits of F

00:08:35,560 --> 00:08:42,760
ISM for consistency this is C I would

00:08:40,419 --> 00:08:45,610
say that the slides you Steven are so

00:08:42,760 --> 00:08:47,620
many safe presentations but for those of

00:08:45,610 --> 00:08:49,750
you have never seen that before

00:08:47,620 --> 00:08:55,570
let's start from the underneath the red

00:08:49,750 --> 00:08:57,310
box that's Rados radius is as you can

00:08:55,570 --> 00:08:59,800
think of it C I would say the back end

00:08:57,310 --> 00:09:02,980
part of Seth so how the replication is

00:08:59,800 --> 00:09:04,600
done how the data is stored that's the

00:09:02,980 --> 00:09:06,960
whole to hold back end and written

00:09:04,600 --> 00:09:10,500
Raiders the cool name is a reliable

00:09:06,960 --> 00:09:13,990
autonomous distributed object storage so

00:09:10,500 --> 00:09:15,640
rather complicated name that make it

00:09:13,990 --> 00:09:18,760
short and college radio sets a backpack

00:09:15,640 --> 00:09:21,040
and that's cool but we would like to get

00:09:18,760 --> 00:09:22,960
our data back or at least we would like

00:09:21,040 --> 00:09:24,490
to put some data into our cluster and

00:09:22,960 --> 00:09:26,980
how we do that there are several ways

00:09:24,490 --> 00:09:30,220
first of all they will flip Ratos and

00:09:26,980 --> 00:09:33,340
live radios with a library where you can

00:09:30,220 --> 00:09:35,200
directly access the class cluster and do

00:09:33,340 --> 00:09:38,800
interactions with your cluster you can

00:09:35,200 --> 00:09:41,290
use C C++ Python whatever you want and

00:09:38,800 --> 00:09:44,080
interact with liberate us to put data in

00:09:41,290 --> 00:09:46,210
to get data out of it and to modify

00:09:44,080 --> 00:09:49,600
whatever you want to then the second

00:09:46,210 --> 00:09:52,330
thing is the rattles gate way back in

00:09:49,600 --> 00:09:55,900
the past few years back there was only

00:09:52,330 --> 00:09:58,060
one way extra gate way to access your

00:09:55,900 --> 00:09:59,620
data your objects so obviously how

00:09:58,060 --> 00:10:01,150
should we call it underneath it's called

00:09:59,620 --> 00:10:04,540
radios so we call it radios gateway

00:10:01,150 --> 00:10:06,670
nowadays this is sometimes mix because

00:10:04,540 --> 00:10:09,220
nowadays people intend to call it an

00:10:06,670 --> 00:10:11,050
object gateway but it's the same so if

00:10:09,220 --> 00:10:12,760
you hear the name object gateway it's

00:10:11,050 --> 00:10:15,610
the same as the radius gateway so don't

00:10:12,760 --> 00:10:17,410
get confused because after time it

00:10:15,610 --> 00:10:21,170
wasn't

00:10:17,410 --> 00:10:24,590
third thing is RBD RBD is a replicated

00:10:21,170 --> 00:10:26,660
block device what does it mean it's the

00:10:24,590 --> 00:10:28,040
block device so if you need a device for

00:10:26,660 --> 00:10:30,470
your virtual machines for your host

00:10:28,040 --> 00:10:32,960
whatever you can directly map a

00:10:30,470 --> 00:10:35,180
dedicated block device to your machines

00:10:32,960 --> 00:10:38,180
formatted with your filesystem and use

00:10:35,180 --> 00:10:40,610
it and it looks like it's just a usual

00:10:38,180 --> 00:10:42,890
block device there's no difference the

00:10:40,610 --> 00:10:45,580
application has no clue that at the back

00:10:42,890 --> 00:10:48,860
end all the stuff is throwing objects

00:10:45,580 --> 00:10:52,430
last but not least there is set FS this

00:10:48,860 --> 00:10:54,020
is a POSIX compliant file system which

00:10:52,430 --> 00:10:57,770
in the meanwhile is production already

00:10:54,020 --> 00:11:01,280
and can be used this is the file system

00:10:57,770 --> 00:11:02,390
on top of of Ceph and can be used for

00:11:01,280 --> 00:11:04,670
directly accessing

00:11:02,390 --> 00:11:07,550
accessing the data instead of putting a

00:11:04,670 --> 00:11:09,890
no mapping and RVD to another node

00:11:07,550 --> 00:11:13,430
formatting is was of XFS explore

00:11:09,890 --> 00:11:17,270
whatever and then sharing the data those

00:11:13,430 --> 00:11:18,950
are different ways to I would say put

00:11:17,270 --> 00:11:20,720
data into the cluster and get data out

00:11:18,950 --> 00:11:23,750
of the cluster but in the meanwhile

00:11:20,720 --> 00:11:26,870
there are some more it's also possible

00:11:23,750 --> 00:11:28,880
to set up nice classic gateway they

00:11:26,870 --> 00:11:32,030
could share the RBD lands why I scuzzy

00:11:28,880 --> 00:11:35,600
for example to any solution you would

00:11:32,030 --> 00:11:38,720
like then there's an NFS gateway based

00:11:35,600 --> 00:11:43,220
on NFS Kaneesha we can also share your

00:11:38,720 --> 00:11:45,590
data via NFS and what's currently also

00:11:43,220 --> 00:11:47,900
what still work in progress but I think

00:11:45,590 --> 00:11:51,440
it's already clear stable as system be'

00:11:47,900 --> 00:11:54,890
so not a DUI but at least in general so

00:11:51,440 --> 00:11:59,300
you can also create this Samba share to

00:11:54,890 --> 00:12:02,630
share your data for NFS it's good to

00:11:59,300 --> 00:12:06,530
know right now in NFS or the current

00:12:02,630 --> 00:12:09,050
implementation of this NFS thingy is not

00:12:06,530 --> 00:12:11,090
made to be a replacement for example for

00:12:09,050 --> 00:12:13,520
your data store for your virtual

00:12:11,090 --> 00:12:16,250
environment this was initially made to

00:12:13,520 --> 00:12:19,460
just convert your data if first of all

00:12:16,250 --> 00:12:21,200
into this class and from there into I

00:12:19,460 --> 00:12:24,860
would say directly objects via the

00:12:21,200 --> 00:12:28,430
radars gateway so the performance it's

00:12:24,860 --> 00:12:29,510
better than it was but it's still not

00:12:28,430 --> 00:12:31,160
that good so

00:12:29,510 --> 00:12:36,200
if you expect I don't know to replace

00:12:31,160 --> 00:12:38,210
your existing comprehensive storage that

00:12:36,200 --> 00:12:40,760
could be tricky or your stuff enough

00:12:38,210 --> 00:12:44,750
SSDs and nvm ease into it then that's

00:12:40,760 --> 00:12:46,040
possible yeah let's talk about safe core

00:12:44,750 --> 00:12:48,890
components because there are several

00:12:46,040 --> 00:12:52,550
ones and sometimes that could be kind of

00:12:48,890 --> 00:12:55,730
confusing because F could be a complex

00:12:52,550 --> 00:12:58,940
beast I would say um first of all we

00:12:55,730 --> 00:13:01,850
have monitors the monitors obviously

00:12:58,940 --> 00:13:03,950
monitor the cluster and tracks today at

00:13:01,850 --> 00:13:06,500
the health of the cluster that's why

00:13:03,950 --> 00:13:08,720
they call a monitor you always have to

00:13:06,500 --> 00:13:12,050
have an have to have an odd number of

00:13:08,720 --> 00:13:15,890
monitors yes you can start with one it's

00:13:12,050 --> 00:13:17,840
possible you can do that for development

00:13:15,890 --> 00:13:19,490
systems I would not recommend to do this

00:13:17,840 --> 00:13:22,580
and the productive environment so please

00:13:19,490 --> 00:13:24,440
bare minimum should be three and then

00:13:22,580 --> 00:13:29,180
five seven nine I think everyone else

00:13:24,440 --> 00:13:32,450
what odd numbers second thing they

00:13:29,180 --> 00:13:35,150
retain is the crown is the general maps

00:13:32,450 --> 00:13:37,340
of the cluster so the current epoch of

00:13:35,150 --> 00:13:40,430
the cluster the current state the actual

00:13:37,340 --> 00:13:42,620
the actual state the real state that's

00:13:40,430 --> 00:13:44,810
part of the month and then they are

00:13:42,620 --> 00:13:47,260
reliable for the distribution of the

00:13:44,810 --> 00:13:49,910
data that support them and once are for

00:13:47,260 --> 00:13:51,950
one really important part and you took

00:13:49,910 --> 00:13:54,380
better should not mix this up months do

00:13:51,950 --> 00:13:57,920
not deserve any data at all they are not

00:13:54,380 --> 00:13:59,420
within the data pass so if you connect

00:13:57,920 --> 00:14:02,330
the client and you want to get data out

00:13:59,420 --> 00:14:05,900
of your cluster you will not get this

00:14:02,330 --> 00:14:10,190
data from the months so just to keep

00:14:05,900 --> 00:14:13,550
that in mind second thing is an OSD

00:14:10,190 --> 00:14:17,360
what does no SD OSD is not check storage

00:14:13,550 --> 00:14:19,010
demon that's what it's written OSD

00:14:17,360 --> 00:14:22,340
stores all the data on the physical

00:14:19,010 --> 00:14:25,580
disks just give me in a sample usually

00:14:22,340 --> 00:14:28,390
if we talk or if assess terminology if

00:14:25,580 --> 00:14:31,910
you talk about an OSD this usually means

00:14:28,390 --> 00:14:34,070
an OSD note that this is a one storage

00:14:31,910 --> 00:14:36,590
node with bunch of disks doesn't matter

00:14:34,070 --> 00:14:39,890
and this is no SD note you could also

00:14:36,590 --> 00:14:41,630
say okay a single disk isn't OSD you can

00:14:39,890 --> 00:14:42,759
also format this thing a disk into

00:14:41,630 --> 00:14:45,649
several petitions

00:14:42,759 --> 00:14:47,089
and spawns three four five seven I don't

00:14:45,649 --> 00:14:51,829
know how many pictures you would like to

00:14:47,089 --> 00:14:55,610
make OS D's on top per device you get

00:14:51,829 --> 00:14:57,980
one process so example I have 1,000

00:14:55,610 --> 00:15:00,379
physical disks and I would like to have

00:14:57,980 --> 00:15:03,110
on each field look at this one OSD I

00:15:00,379 --> 00:15:05,949
would end up with 1000 OSD processes in

00:15:03,110 --> 00:15:09,410
my cluster and this scales out to

00:15:05,949 --> 00:15:12,199
hundreds of thousands within the earth

00:15:09,410 --> 00:15:14,720
these the replication mechanism is

00:15:12,199 --> 00:15:18,619
included so how to replicate the data

00:15:14,720 --> 00:15:22,730
from A to B from B to C so this logic is

00:15:18,619 --> 00:15:26,809
within the OS DS and as I already said

00:15:22,730 --> 00:15:29,360
bare minimum please should be three and

00:15:26,809 --> 00:15:34,279
not less I know one is not number but

00:15:29,360 --> 00:15:34,759
please don't next thing above OSDs is

00:15:34,279 --> 00:15:37,399
poor

00:15:34,759 --> 00:15:39,649
what is pool as obvious we have those

00:15:37,399 --> 00:15:42,139
terminology and other storage languages

00:15:39,649 --> 00:15:45,050
as well that's just a logical container

00:15:42,139 --> 00:15:48,920
so you can put OS these was in the pool

00:15:45,050 --> 00:15:51,050
and create pools and you can find define

00:15:48,920 --> 00:15:53,990
two different I would say versions of

00:15:51,050 --> 00:15:56,749
pools one is replicated replicated means

00:15:53,990 --> 00:15:59,329
he just or one object over there the

00:15:56,749 --> 00:16:02,269
second operates the same exact same copy

00:15:59,329 --> 00:16:03,999
on the second OSD second is the second

00:16:02,269 --> 00:16:06,079
rail ability zoom somewhere for example

00:16:03,999 --> 00:16:08,329
second thing is the erasure coded this

00:16:06,079 --> 00:16:11,420
is a little bit I think you can compare

00:16:08,329 --> 00:16:14,809
it with rate rate 6 for example you can

00:16:11,420 --> 00:16:17,089
scale this up initially your object will

00:16:14,809 --> 00:16:19,699
be splitted into whatever you have

00:16:17,089 --> 00:16:23,329
defined and then you can define how many

00:16:19,699 --> 00:16:25,790
chunks you would like to have as well so

00:16:23,329 --> 00:16:29,600
it's comparable to I would say a rate so

00:16:25,790 --> 00:16:33,290
you have to store less than was a just

00:16:29,600 --> 00:16:35,269
traditional replicated pools you can add

00:16:33,290 --> 00:16:37,189
dedicate it or crush rules to pools I

00:16:35,269 --> 00:16:38,569
just want to point it out here and I

00:16:37,189 --> 00:16:42,150
would like to explain what crushes in a

00:16:38,569 --> 00:16:45,990
yeah few minutes

00:16:42,150 --> 00:16:48,810
was important thing is placement troops

00:16:45,990 --> 00:16:50,760
and placement cruises all almost of time

00:16:48,810 --> 00:16:54,300
if I talk about tradesmen crews people

00:16:50,760 --> 00:16:56,400
intend to be confused because why do I

00:16:54,300 --> 00:16:58,830
need pools and then placement groups and

00:16:56,400 --> 00:17:01,320
what's the difference and how the data

00:16:58,830 --> 00:17:04,170
is replicated and general really

00:17:01,320 --> 00:17:07,110
abstractly easy a placement group is

00:17:04,170 --> 00:17:11,400
just I would say a helper to distribute

00:17:07,110 --> 00:17:13,350
the data on your OS T's just just as my

00:17:11,400 --> 00:17:15,270
example you have a single cup with

00:17:13,350 --> 00:17:17,459
several groups of ice cream for example

00:17:15,270 --> 00:17:19,709
each group would be an object the

00:17:17,459 --> 00:17:21,450
captain the whole whole cup which could

00:17:19,709 --> 00:17:24,540
have I don't know ten coops for example

00:17:21,450 --> 00:17:26,280
of ice cream is our placement crew so

00:17:24,540 --> 00:17:27,660
it's just another abstraction layer to

00:17:26,280 --> 00:17:30,210
make it easier

00:17:27,660 --> 00:17:32,490
a typical typical placement group can

00:17:30,210 --> 00:17:34,850
spawn several OS these were typically

00:17:32,490 --> 00:17:39,960
small several of these on and an OSD has

00:17:34,850 --> 00:17:43,140
several PG so vice versa recommended I

00:17:39,960 --> 00:17:46,350
would say recommended are between 100

00:17:43,140 --> 00:17:51,470
and 150 placement groups per OSD which

00:17:46,350 --> 00:17:57,150
means 100 and 150 of those dedicated

00:17:51,470 --> 00:17:59,880
groups per disk so if you imagine you

00:17:57,150 --> 00:18:03,120
have I don't know hundred for example

00:17:59,880 --> 00:18:06,180
you should have at least a multiple of

00:18:03,120 --> 00:18:08,340
two so it would get would be good to get

00:18:06,180 --> 00:18:10,280
to one eight thousand one ninety two or

00:18:08,340 --> 00:18:13,140
a sixty thousand like sixteen thousand

00:18:10,280 --> 00:18:14,940
for the PG count that sometimes

00:18:13,140 --> 00:18:18,360
confusing and hopefully was the next

00:18:14,940 --> 00:18:20,250
release this was for the whole PG merge

00:18:18,360 --> 00:18:22,080
functionality this problem will

00:18:20,250 --> 00:18:23,700
completely go away and don't have to

00:18:22,080 --> 00:18:26,580
mess with those promise anymore because

00:18:23,700 --> 00:18:28,710
in the past people struggled when they

00:18:26,580 --> 00:18:30,410
created initially their poll pools they

00:18:28,710 --> 00:18:32,820
had no clue how to collect

00:18:30,410 --> 00:18:34,920
calculate the P G's they trust enter the

00:18:32,820 --> 00:18:37,080
random number and then they figured out

00:18:34,920 --> 00:18:39,030
oh maybe this is the wrong number or it

00:18:37,080 --> 00:18:41,100
was quite too high the problem is

00:18:39,030 --> 00:18:43,500
nowadays you can just exceed the number

00:18:41,100 --> 00:18:44,880
you but you can't recuse it anymore

00:18:43,500 --> 00:18:46,530
so then yours back then you have to

00:18:44,880 --> 00:18:48,750
create a whole new pool and shuffle your

00:18:46,530 --> 00:18:52,400
data around and this will go away was

00:18:48,750 --> 00:18:55,080
the noose f PG merge functional team

00:18:52,400 --> 00:18:57,419
crash map was already mentioned this is

00:18:55,080 --> 00:18:59,760
also I didn't know why they have those

00:18:57,419 --> 00:19:02,190
amazing really complicated names that no

00:18:59,760 --> 00:19:04,260
one can remember it's a controlled

00:19:02,190 --> 00:19:07,470
replication under scalable hashing

00:19:04,260 --> 00:19:09,600
sounds also very cool and promising and

00:19:07,470 --> 00:19:12,179
as I already said the term on spent a in

00:19:09,600 --> 00:19:14,940
the crash map what does it mean um

00:19:12,179 --> 00:19:17,010
imagine you have three availability

00:19:14,940 --> 00:19:19,049
zooms in your company or a queue place

00:19:17,010 --> 00:19:21,600
and you would like to replicate your

00:19:19,049 --> 00:19:23,429
data across all of them all three data

00:19:21,600 --> 00:19:26,549
centers you want to replicate your data

00:19:23,429 --> 00:19:29,250
then you can use crush to build your

00:19:26,549 --> 00:19:33,390
topology from the data center to the

00:19:29,250 --> 00:19:36,840
racks to tits to down to a single server

00:19:33,390 --> 00:19:39,299
single OSD that's possible so you can

00:19:36,840 --> 00:19:41,640
define I would like if I have my first

00:19:39,299 --> 00:19:44,130
pool created this is a replicated pool

00:19:41,640 --> 00:19:46,169
of rep size of three every time I put a

00:19:44,130 --> 00:19:48,270
single object into that pool of will be

00:19:46,169 --> 00:19:50,490
replicated into each availability soon

00:19:48,270 --> 00:19:52,440
then I can create another pool for

00:19:50,490 --> 00:19:54,480
example where I think it's not that

00:19:52,440 --> 00:19:56,309
important I only need one call two

00:19:54,480 --> 00:19:58,770
copies somewhere I don't mind if it's in

00:19:56,309 --> 00:20:01,320
this one second or a third datacenter

00:19:58,770 --> 00:20:03,179
just somewhere just two copies I don't

00:20:01,320 --> 00:20:05,700
care so that's something you can't

00:20:03,179 --> 00:20:08,370
define it's totally flexible and mostly

00:20:05,700 --> 00:20:11,270
its fits on I would say on all

00:20:08,370 --> 00:20:14,600
environments so it's completely flexible

00:20:11,270 --> 00:20:17,360
one thing may be worth to mention

00:20:14,600 --> 00:20:19,530
[Music]

00:20:17,360 --> 00:20:21,809
initially you have to think about how

00:20:19,530 --> 00:20:23,130
you craft would look like and this could

00:20:21,809 --> 00:20:25,679
change while you're adding more nodes

00:20:23,130 --> 00:20:27,630
and you have new ideas but every time

00:20:25,679 --> 00:20:29,940
you change the crash map please keep in

00:20:27,630 --> 00:20:32,880
mind that this could travel around your

00:20:29,940 --> 00:20:35,789
data completely and imagine you have a

00:20:32,880 --> 00:20:37,620
petabyte or several petabyte cluster it

00:20:35,789 --> 00:20:39,690
just change the single line and you want

00:20:37,620 --> 00:20:41,549
to replicate your data because you

00:20:39,690 --> 00:20:43,830
thought this is a great idea and you

00:20:41,549 --> 00:20:45,390
click apply afterwards or it I would say

00:20:43,830 --> 00:20:48,450
you applied a new crash map to the

00:20:45,390 --> 00:20:52,289
cluster this could lead to frustration

00:20:48,450 --> 00:20:54,659
for your clients and your end-users

00:20:52,289 --> 00:20:56,330
because sometimes those clusters are

00:20:54,659 --> 00:20:58,940
stacks for weeks

00:20:56,330 --> 00:21:00,800
because there is no undo so there is

00:20:58,940 --> 00:21:03,560
there's no possibility to say okay I

00:21:00,800 --> 00:21:06,980
don't like this idea anymore please undo

00:21:03,560 --> 00:21:09,410
back to the old configuration and you

00:21:06,980 --> 00:21:12,530
have to wait until it's done so think

00:21:09,410 --> 00:21:16,640
about it before you do that

00:21:12,530 --> 00:21:21,470
please just let Weis so here we have a

00:21:16,640 --> 00:21:23,990
small classroom those red bubbles our

00:21:21,470 --> 00:21:26,110
OSD so I would say just think of this

00:21:23,990 --> 00:21:28,810
this is a single disc single OST disc

00:21:26,110 --> 00:21:32,300
then we have odd numbers three monitors

00:21:28,810 --> 00:21:35,150
that's cool now I would like to write

00:21:32,300 --> 00:21:39,260
some data to the cluster how does it

00:21:35,150 --> 00:21:43,460
work the client writes the data always

00:21:39,260 --> 00:21:46,640
to the primary OSDs so there's always

00:21:43,460 --> 00:21:48,260
one OST is the primary one then it

00:21:46,640 --> 00:21:50,330
writes a little primary one the primary

00:21:48,260 --> 00:21:53,000
one was the logic behind as I explained

00:21:50,330 --> 00:21:55,730
we'll take care of the replication to

00:21:53,000 --> 00:21:58,370
all the other or at these four in this

00:21:55,730 --> 00:22:00,680
example I defined I would like to have a

00:21:58,370 --> 00:22:02,540
replication size of three so I want to

00:22:00,680 --> 00:22:04,760
have three copies of mine object then

00:22:02,540 --> 00:22:07,850
for replicated data to the other tool or

00:22:04,760 --> 00:22:09,350
as these well gather the acknowledgments

00:22:07,850 --> 00:22:11,810
and then it will get back to the client

00:22:09,350 --> 00:22:15,200
and say hey I wrote your data and find

00:22:11,810 --> 00:22:16,910
its cool little bit different for

00:22:15,200 --> 00:22:19,430
reading the data that's the cool thing

00:22:16,910 --> 00:22:21,230
about you don't have to read your data

00:22:19,430 --> 00:22:23,570
just from the primary or you can read

00:22:21,230 --> 00:22:27,230
the data from any OSD where this object

00:22:23,570 --> 00:22:32,120
belongs so this max out the speed and

00:22:27,230 --> 00:22:35,960
you can paralyze it so the read I would

00:22:32,120 --> 00:22:42,650
say operations are quite faster than the

00:22:35,960 --> 00:22:43,220
write operation obviously use cases for

00:22:42,650 --> 00:22:45,470
safe

00:22:43,220 --> 00:22:47,360
there are several ones I guess the most

00:22:45,470 --> 00:22:51,140
famous one is the backend storage for

00:22:47,360 --> 00:22:54,050
OpenStack that I guess it's useful I

00:22:51,140 --> 00:22:56,860
don't know I've read some numbers few

00:22:54,050 --> 00:23:01,970
weeks ago something like 60 70 % of all

00:22:56,860 --> 00:23:05,530
OpenStack deployments have chef at the

00:23:01,970 --> 00:23:08,389
backend so this is really fully famous

00:23:05,530 --> 00:23:11,759
example then

00:23:08,389 --> 00:23:14,549
was efforts possible to have I wouldn't

00:23:11,759 --> 00:23:17,759
say an integration but what does it mean

00:23:14,549 --> 00:23:22,559
was the radio's gateway or the object

00:23:17,759 --> 00:23:24,720
gateway you can have an s3 like Gateway

00:23:22,559 --> 00:23:27,090
so you can't completely integrate it so

00:23:24,720 --> 00:23:29,539
what people tend to do is use their

00:23:27,090 --> 00:23:32,279
cluster as throwing their data for their

00:23:29,539 --> 00:23:35,519
as three applications for example it

00:23:32,279 --> 00:23:37,860
works just out of the box then bekanze

00:23:35,519 --> 00:23:39,570
bekanze storage for VM as I said why I

00:23:37,860 --> 00:23:40,980
scuzzy performance of ice cards is

00:23:39,570 --> 00:23:43,500
really really good

00:23:40,980 --> 00:23:47,220
as I said why not mentioning NFS I

00:23:43,500 --> 00:23:49,470
explained already it's not I would say

00:23:47,220 --> 00:23:55,279
product I would say ready to replace

00:23:49,470 --> 00:23:58,350
your existing storage system also a

00:23:55,279 --> 00:24:01,769
widely used thing is for video streaming

00:23:58,350 --> 00:24:05,940
or and general storing a lot amount of

00:24:01,769 --> 00:24:10,620
data on it that's exactly what's safe is

00:24:05,940 --> 00:24:12,419
made for the our solution so disaster

00:24:10,620 --> 00:24:14,490
recovery solutions and backup of course

00:24:12,419 --> 00:24:17,159
the scales out it scales out to as many

00:24:14,490 --> 00:24:19,580
data centers you would like so that's

00:24:17,159 --> 00:24:22,950
the perfect perfect ideas for it and

00:24:19,580 --> 00:24:24,389
obviously if you say okay I don't care

00:24:22,950 --> 00:24:26,700
about performance they can use old

00:24:24,389 --> 00:24:28,620
harbors I still have to say that this in

00:24:26,700 --> 00:24:32,250
it for example you can use it for an

00:24:28,620 --> 00:24:37,460
archive just to have no Chi for backup

00:24:32,250 --> 00:24:37,460
of your data from within your software

00:24:38,059 --> 00:24:45,929
let me check yeah was that that I think

00:24:41,580 --> 00:24:47,399
I already went through so any questions

00:24:45,929 --> 00:24:49,289
regarding staff in general the core

00:24:47,399 --> 00:24:51,419
components I noticed was just a really

00:24:49,289 --> 00:24:53,879
rough overview and if your interest to

00:24:51,419 --> 00:24:55,769
talk about a little bit more please grab

00:24:53,879 --> 00:24:59,820
me I'm always interested to talk about

00:24:55,769 --> 00:25:03,509
and yeah please let me know if you have

00:24:59,820 --> 00:25:06,210
any questions yes I think so

00:25:03,509 --> 00:25:09,980
should I just repeated I don't know can

00:25:06,210 --> 00:25:14,200
we let me check

00:25:09,980 --> 00:25:14,200
[Music]

00:25:14,720 --> 00:25:19,980
no it took let's give it a try effort

00:25:17,040 --> 00:25:22,380
okay so if F is the new for me I know

00:25:19,980 --> 00:25:24,930
the theory on aisle three for having

00:25:22,380 --> 00:25:27,420
instant before so my question is about

00:25:24,930 --> 00:25:29,220
we had a picture at the beginning where

00:25:27,420 --> 00:25:33,660
we saw this like Devadas

00:25:29,220 --> 00:25:37,050
RVD also different buttons or front ends

00:25:33,660 --> 00:25:39,270
and hole is this hole does this fit with

00:25:37,050 --> 00:25:41,730
for example the right process because I

00:25:39,270 --> 00:25:45,600
don't understand where is for example

00:25:41,730 --> 00:25:47,580
these up or what is this VM how does

00:25:45,600 --> 00:25:51,870
this fit this picture with the right

00:25:47,580 --> 00:25:54,540
process for example so when you connect

00:25:51,870 --> 00:25:59,190
a trellis dentist when you connect the

00:25:54,540 --> 00:26:01,320
client to a cluster directly depends on

00:25:59,190 --> 00:26:05,300
how he connected if you connect it

00:26:01,320 --> 00:26:10,020
directly and you use the built in

00:26:05,300 --> 00:26:12,450
libraries then for example the clients

00:26:10,020 --> 00:26:14,640
connects our gets in touch with the

00:26:12,450 --> 00:26:16,320
month and gets the current version of

00:26:14,640 --> 00:26:18,510
how the class looks like that's so

00:26:16,320 --> 00:26:21,600
called nape epoch and then it directly

00:26:18,510 --> 00:26:24,720
communicates to the cluster if you do

00:26:21,600 --> 00:26:27,240
that wire for example a mapped RB device

00:26:24,720 --> 00:26:29,730
or I would say I scuzzy best example is

00:26:27,240 --> 00:26:31,410
why our I scuzzy mapped as the data

00:26:29,730 --> 00:26:34,730
store for your virtual environment for

00:26:31,410 --> 00:26:37,410
VMware or KVM proxmox whatever then you

00:26:34,730 --> 00:26:39,090
contact the ice gas gateway and ice got

00:26:37,410 --> 00:26:41,790
a gator will get the data for you and

00:26:39,090 --> 00:26:43,860
then and reports back to you because the

00:26:41,790 --> 00:26:45,810
application on top for example VMware

00:26:43,860 --> 00:26:48,120
has no clue that there is an object

00:26:45,810 --> 00:26:49,950
behind because didn't know there is no

00:26:48,120 --> 00:26:51,420
driver will tell them no library they

00:26:49,950 --> 00:26:53,310
just think okay this is a stupid clock

00:26:51,420 --> 00:26:54,660
device please give me this data and then

00:26:53,310 --> 00:26:56,630
at the end this will be translated by

00:26:54,660 --> 00:27:02,070
the Gateway

00:26:56,630 --> 00:27:02,700
another question more questions yes give

00:27:02,070 --> 00:27:04,670
it back to you

00:27:02,700 --> 00:27:05,790
sorry

00:27:04,670 --> 00:27:08,200
[Music]

00:27:05,790 --> 00:27:09,670
because I ain't seen their the Vuitton

00:27:08,200 --> 00:27:12,310
machine it is also a possibility or

00:27:09,670 --> 00:27:16,120
intention to have this client with

00:27:12,310 --> 00:27:19,000
containers to make it today that you hit

00:27:16,120 --> 00:27:23,110
it perfect perfect spot yes

00:27:19,000 --> 00:27:28,090
upstream currently is working on moving

00:27:23,110 --> 00:27:31,690
the whole set I would say architecture

00:27:28,090 --> 00:27:32,950
on to container because containers will

00:27:31,690 --> 00:27:35,530
force everything

00:27:32,950 --> 00:27:37,120
unicorns ice cream for everyone so I

00:27:35,530 --> 00:27:38,830
guess you heard already recoup inators

00:27:37,120 --> 00:27:41,470
this will solve no problems at all

00:27:38,830 --> 00:27:44,400
anymore so yes we're moving towards

00:27:41,470 --> 00:27:48,160
containers as well so the idea

00:27:44,400 --> 00:27:50,440
restorative ideas to have for example a

00:27:48,160 --> 00:27:52,420
single container for a single OSD for

00:27:50,440 --> 00:27:55,240
months and so on and it can do easily

00:27:52,420 --> 00:27:57,040
upgrades for example and right now we

00:27:55,240 --> 00:27:58,810
are struggling and figuring out what's

00:27:57,040 --> 00:27:59,950
the best way to deploy all those things

00:27:58,810 --> 00:28:02,380
because you need some kind of an

00:27:59,950 --> 00:28:03,310
Orchestrator for example it comes rookin

00:28:02,380 --> 00:28:05,290
mind if you take a look at the

00:28:03,310 --> 00:28:07,000
meaningless Lucas under heavy discussion

00:28:05,290 --> 00:28:10,300
I guess makes good sense to deploy those

00:28:07,000 --> 00:28:12,640
things and yes this is this is work in

00:28:10,300 --> 00:28:14,200
progress and hopefully there's oodles

00:28:12,640 --> 00:28:17,800
that later if you talk to our four

00:28:14,200 --> 00:28:19,510
adventures my five minutes left so we

00:28:17,800 --> 00:28:27,760
still have a few minutes for us a

00:28:19,510 --> 00:28:30,070
question how OSD stores data that's

00:28:27,760 --> 00:28:32,050
that's different in the past there was a

00:28:30,070 --> 00:28:35,050
file system on top needed so before you

00:28:32,050 --> 00:28:37,330
were able to use the no SD you had to

00:28:35,050 --> 00:28:39,280
put in file system recommend it was XFS

00:28:37,330 --> 00:28:42,520
on top and then you had a separate

00:28:39,280 --> 00:28:43,840
journal device for this so for every OSD

00:28:42,520 --> 00:28:47,260
you had a separate journal eternal

00:28:43,840 --> 00:28:49,600
device with the luminous release that

00:28:47,260 --> 00:28:51,400
something we'll talk later about this

00:28:49,600 --> 00:28:54,600
completely changes with luminous there

00:28:51,400 --> 00:28:58,000
was so-called blue store introduced and

00:28:54,600 --> 00:28:59,590
choose blue store is the it's not a file

00:28:58,000 --> 00:29:02,050
system anymore but to make it easy it's

00:28:59,590 --> 00:29:04,480
a new file system so you don't need to

00:29:02,050 --> 00:29:09,010
put a slices on top and it will directly

00:29:04,480 --> 00:29:10,840
store the data into into the OSD why a

00:29:09,010 --> 00:29:12,850
blue store so that's the separate

00:29:10,840 --> 00:29:16,110
mechanism so there is no file system on

00:29:12,850 --> 00:29:16,110
top needed anymore

00:29:16,879 --> 00:29:23,549
yes yes every every every right and

00:29:22,259 --> 00:29:26,129
we'll read this stop by and check some

00:29:23,549 --> 00:29:27,840
so it's hashed and then it's stored on

00:29:26,129 --> 00:29:29,279
to the disk that's done by it by every

00:29:27,840 --> 00:29:32,700
right and then what's blue store you

00:29:29,279 --> 00:29:34,409
have the database and you had to have a

00:29:32,700 --> 00:29:37,499
separate writer headlock you can put for

00:29:34,409 --> 00:29:39,149
example on nvm es to max out your speed

00:29:37,499 --> 00:29:41,309
for example for specific workloads and

00:29:39,149 --> 00:29:43,019
that's possible and there is no need for

00:29:41,309 --> 00:29:45,989
a single file system or if you're

00:29:43,019 --> 00:29:47,070
interested we can talk about this later

00:29:45,989 --> 00:29:49,470
in the hallway

00:29:47,070 --> 00:29:53,639
one minute sold one last famous words

00:29:49,470 --> 00:29:55,559
from someone otherwise I hope this was

00:29:53,639 --> 00:29:58,739
helpful and if you're interested to

00:29:55,559 --> 00:30:01,080
learn more about how do you I on top to

00:29:58,739 --> 00:30:04,200
manage this and to make it may be usable

00:30:01,080 --> 00:30:06,929
for non Linux experts or non safe

00:30:04,200 --> 00:30:09,090
experts join the presentation later

00:30:06,929 --> 00:30:11,389
together with my colleague Laura thank

00:30:09,090 --> 00:30:11,389
you very much

00:30:16,500 --> 00:30:20,279

YouTube URL: https://www.youtube.com/watch?v=UtDNRX_Rd6U


