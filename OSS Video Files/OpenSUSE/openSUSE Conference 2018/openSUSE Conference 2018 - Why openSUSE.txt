Title: openSUSE Conference 2018 - Why openSUSE
Publication date: 2018-05-25
Playlist: openSUSE Conference 2018
Description: 
	About ideal use case and promoting the gold triangle of openSUSE

This talks is split in three topics:

1. openSUSE is not SUSE, it is her sister.
  There are still too much people outside of open/SUSE world that still confuse the difference and the options they have. This usually leads them to use the wrong distribution for their use cases and thinking that "SUSE" is not working for them.
  I will describe the current distribution palette and their respective key values and the difference from the SUSE company and openSUSE community.

2. Why should I use openSUSE?
  I will describe which features from openSUSE make it ideal for which use case. A brief description of what I personally name the gold triangle of openSUSE is mandatory (OBS, openQA, Yast).

3. How to contribute to openSUSE
  I will describe the workflow to contribute to openSUSE, new packages and maintenance, and how OBS and openQA are involved.

This talks is split in three topics:

1. openSUSE is not SUSE, it is her sister.
  There are still too much people outside of open/SUSE world that still confuse the difference and the options they have. This usually leads them to use the wrong distribution for their use cases and thinking that "SUSE" is not working for them.
  I will describe the current distribution palette and their respective key values and the difference from the SUSE company and openSUSE community.

2. Why should I use openSUSE?
  I will describe which features from openSUSE make it ideal for which use case. A brief description of what I personally name the gold triangle of openSUSE is mandatory (OBS, openQA, Yast).

3. How to contribute to openSUSE
  I will describe the workflow to contribute to openSUSE, new packages and maintenance, and how OBS and openQA are involved.

SLindoMansilla
Captions: 
	00:00:06,020 --> 00:00:13,590
okay so good morning my name is Sergio I

00:00:09,740 --> 00:00:15,240
was in Ubuntu before now you're using

00:00:13,590 --> 00:00:18,480
openSUSE for some reasons that we'll

00:00:15,240 --> 00:00:21,930
explain later and I am working as a QA

00:00:18,480 --> 00:00:25,410
engineer by Isuzu and I would like to

00:00:21,930 --> 00:00:28,590
give you an overview first but I need to

00:00:25,410 --> 00:00:31,019
be sure that your first how and now how

00:00:28,590 --> 00:00:32,820
to pronounce this war because it is a

00:00:31,019 --> 00:00:35,489
lot of confusion it is

00:00:32,820 --> 00:00:37,260
Susa I would like that you repeat with

00:00:35,489 --> 00:00:41,879
me so to be sure that you come from us

00:00:37,260 --> 00:00:43,770
this Sousa okay please I run no coffee

00:00:41,879 --> 00:00:44,820
for everyone they are still sleeping so

00:00:43,770 --> 00:00:50,550
let's try again

00:00:44,820 --> 00:00:55,309
one two three shoes okay anyway you two

00:00:50,550 --> 00:00:57,780
pronounces them openSUSE is not Suzy I

00:00:55,309 --> 00:01:01,500
say that it is her sister a lot of

00:00:57,780 --> 00:01:04,260
people still confused between both often

00:01:01,500 --> 00:01:06,060
they ask in the forum and channels as

00:01:04,260 --> 00:01:10,460
Suzy when they are actually using

00:01:06,060 --> 00:01:14,810
openSUSE and now then I want to say that

00:01:10,460 --> 00:01:17,310
Suzy is a company company that offers

00:01:14,810 --> 00:01:19,619
open-source software solutions like

00:01:17,310 --> 00:01:23,520
cloud computing like software-defined

00:01:19,619 --> 00:01:25,729
storage and one of the components of

00:01:23,520 --> 00:01:29,009
these solutions is the operating system

00:01:25,729 --> 00:01:34,500
SUSE Linux Enterprise also known with

00:01:29,009 --> 00:01:36,680
the latter sleep now Suzy offers paid

00:01:34,500 --> 00:01:39,299
support for that for their solutions and

00:01:36,680 --> 00:01:43,130
openSUSE open suicides the community

00:01:39,299 --> 00:01:45,780
that cares of taking this open source

00:01:43,130 --> 00:01:49,049
source code from Slee and from this

00:01:45,780 --> 00:01:52,140
place and create or publish their own

00:01:49,049 --> 00:01:55,070
operating system and distributions one

00:01:52,140 --> 00:01:58,110
of them is leap which is very honestly

00:01:55,070 --> 00:02:00,270
so normally you have always a version of

00:01:58,110 --> 00:02:04,170
Slee which much has the same version of

00:02:00,270 --> 00:02:06,149
leap for example today is the lip 15

00:02:04,170 --> 00:02:08,849
will be released because this device on

00:02:06,149 --> 00:02:12,840
the next version from Slee which will be

00:02:08,849 --> 00:02:13,650
also 15 and tablet is something special

00:02:12,840 --> 00:02:17,060
I will

00:02:13,650 --> 00:02:19,530
later wipe but it's also the another

00:02:17,060 --> 00:02:22,640
distribution or operating system that

00:02:19,530 --> 00:02:25,439
the openSUSE community is opening

00:02:22,640 --> 00:02:28,709
openSUSE doesn't have paid support but

00:02:25,439 --> 00:02:31,170
you can ask for help to the community

00:02:28,709 --> 00:02:33,180
through the forum and also through IRC

00:02:31,170 --> 00:02:35,879
the vintage communication system yes

00:02:33,180 --> 00:02:38,790
very romantic and on the freenode server

00:02:35,879 --> 00:02:41,189
and the channel is Sousa normally and if

00:02:38,790 --> 00:02:44,189
not they will tell you to change another

00:02:41,189 --> 00:02:46,980
channel but usually Sousa even if the

00:02:44,189 --> 00:02:50,040
name is affirmed the company it is used

00:02:46,980 --> 00:02:56,639
to help to provide support not support

00:02:50,040 --> 00:02:58,319
but help to openSUSE users now Lee has a

00:02:56,639 --> 00:03:02,609
development branch which is called

00:02:58,319 --> 00:03:06,170
factory from factory all the version of

00:03:02,609 --> 00:03:09,180
is leap leap and tumbleweed are created

00:03:06,170 --> 00:03:11,400
so we have put a LOF here what you can

00:03:09,180 --> 00:03:14,189
see the caller embracing of is Lee is 12

00:03:11,400 --> 00:03:19,139
SP 3 and the core embracing of leap

00:03:14,189 --> 00:03:22,440
until today was 42.3 then and the next

00:03:19,139 --> 00:03:23,849
question will be 15 and we will have for

00:03:22,440 --> 00:03:27,680
the first time the same version number

00:03:23,849 --> 00:03:30,510
for both versions and then the factory

00:03:27,680 --> 00:03:34,319
branch is always in development it has

00:03:30,510 --> 00:03:36,919
always the newer version of packages for

00:03:34,319 --> 00:03:39,870
this reason it is not the best

00:03:36,919 --> 00:03:41,879
distribution or the best suit code for

00:03:39,870 --> 00:03:43,500
providing for paid customers because

00:03:41,879 --> 00:03:45,419
usually a company doesn't want to have

00:03:43,500 --> 00:03:47,190
the latest kernel or the latest

00:03:45,419 --> 00:03:49,799
assistant Lee or the latest graphics

00:03:47,190 --> 00:03:52,109
they want to have accelerated works 24

00:03:49,799 --> 00:03:53,519
hours even or something like that so

00:03:52,109 --> 00:03:57,780
they prefer something more stable and

00:03:53,519 --> 00:04:01,019
conservative but the users so the people

00:03:57,780 --> 00:04:04,229
that are not doesn't have a company that

00:04:01,019 --> 00:04:06,329
depends on IT infrastructure come take

00:04:04,229 --> 00:04:09,540
the benefit of this latest source code

00:04:06,329 --> 00:04:12,090
for this reason each week several

00:04:09,540 --> 00:04:16,549
snapshots are created from this Factory

00:04:12,090 --> 00:04:20,359
and are tested and when this test test

00:04:16,549 --> 00:04:23,099
passed then they create something called

00:04:20,359 --> 00:04:26,190
open source at tumbleweed

00:04:23,099 --> 00:04:27,560
so tumbleweed is always the latest

00:04:26,190 --> 00:04:29,570
stable and tested

00:04:27,560 --> 00:04:35,690
snapshot from the development branch

00:04:29,570 --> 00:04:37,370
obviously and this also happens in

00:04:35,690 --> 00:04:40,070
tumbleweed you don't update your system

00:04:37,370 --> 00:04:42,160
normally honestly on leap you make an

00:04:40,070 --> 00:04:44,600
update and you update your packages on

00:04:42,160 --> 00:04:46,850
tumbleweed what you do is always an

00:04:44,600 --> 00:04:49,010
upgrade to the next snapshot because

00:04:46,850 --> 00:04:50,419
there is no upgrade on the pack no

00:04:49,010 --> 00:04:52,730
update on the packages you always

00:04:50,419 --> 00:04:59,030
upgrade to the next version of the

00:04:52,730 --> 00:05:02,990
packages the reason why are stable and

00:04:59,030 --> 00:05:06,010
tested rolling release last time we'll

00:05:02,990 --> 00:05:09,110
with is posting all is because we have

00:05:06,010 --> 00:05:12,800
automatic acceptance tests using a tool

00:05:09,110 --> 00:05:15,290
called open QA where we intensively test

00:05:12,800 --> 00:05:17,030
each snapshot and then we can be assured

00:05:15,290 --> 00:05:20,600
that we have a good overview if this

00:05:17,030 --> 00:05:24,430
snapshot is stable and secure enough to

00:05:20,600 --> 00:05:28,040
be used so we have release managers who

00:05:24,430 --> 00:05:32,419
take a loop of these results on the link

00:05:28,040 --> 00:05:34,640
on the left side and they decide ok this

00:05:32,419 --> 00:05:37,460
is ok then we can release because it is

00:05:34,640 --> 00:05:40,010
stable art is enough and we surely a lot

00:05:37,460 --> 00:05:41,750
of the red ones are not errors on the

00:05:40,010 --> 00:05:44,120
system itself it's because the test was

00:05:41,750 --> 00:05:46,190
not adopted yet to the new changes and

00:05:44,120 --> 00:05:48,380
then they can decide ok this is not

00:05:46,190 --> 00:05:51,440
really a fail of the product this is a

00:05:48,380 --> 00:05:53,539
fail of the test and since this tool

00:05:51,440 --> 00:05:56,270
open queue is also open source you can

00:05:53,539 --> 00:05:58,190
see on the right side and the Swiss

00:05:56,270 --> 00:06:00,530
quality need hub so you can take a look

00:05:58,190 --> 00:06:06,200
at it you can also contribute and you is

00:06:00,530 --> 00:06:08,479
used for user and also one thing is open

00:06:06,200 --> 00:06:12,050
qada to the self and other thing is the

00:06:08,479 --> 00:06:15,169
Ted's the tests that are executed again

00:06:12,050 --> 00:06:17,690
stumble with slee only it is the same

00:06:15,169 --> 00:06:20,870
source code and you can also find it on

00:06:17,690 --> 00:06:22,729
another project on github and the

00:06:20,870 --> 00:06:26,479
neither's which are the screenshot that

00:06:22,729 --> 00:06:29,060
we used to compare between different

00:06:26,479 --> 00:06:30,800
windows are also in a different story

00:06:29,060 --> 00:06:34,400
because it will be too weak to have the

00:06:30,800 --> 00:06:36,110
images in the same repository and on the

00:06:34,400 --> 00:06:38,570
right side you can see the neither so

00:06:36,110 --> 00:06:42,770
the screenshots for openSUSE leap and

00:06:38,570 --> 00:06:44,690
tumbleweed and so you can also

00:06:42,770 --> 00:06:48,470
contribute to improve the test coverage

00:06:44,690 --> 00:06:51,710
so in case that you see that on open QA

00:06:48,470 --> 00:06:53,780
you are not seeing colbert do use case

00:06:51,710 --> 00:06:55,760
where do you use openSUSE then you can

00:06:53,780 --> 00:06:57,979
improve the test to make them cover your

00:06:55,760 --> 00:07:00,229
use case so you can be sure that the

00:06:57,979 --> 00:07:02,570
next time you up the right time with the

00:07:00,229 --> 00:07:05,870
pursue that you use cases cover and you

00:07:02,570 --> 00:07:06,590
know that it works for you now why

00:07:05,870 --> 00:07:12,229
should I use

00:07:06,590 --> 00:07:14,750
openSUSE one holistic thing is that even

00:07:12,229 --> 00:07:17,630
if open SUSE as a community who has

00:07:14,750 --> 00:07:20,090
which has a board they don't decide the

00:07:17,630 --> 00:07:21,740
future of the distribution by itself so

00:07:20,090 --> 00:07:24,110
they don't say we want to use this

00:07:21,740 --> 00:07:27,560
behavior we want to use this thing

00:07:24,110 --> 00:07:30,770
I like terminology that Richard Brown

00:07:27,560 --> 00:07:32,390
used this is a duo classic because those

00:07:30,770 --> 00:07:36,830
who do decide so they let the

00:07:32,390 --> 00:07:39,710
contributors lead how openSUSE

00:07:36,830 --> 00:07:45,380
tumbleweed and leap are going to Angola

00:07:39,710 --> 00:07:47,120
for war yeah also something good for me

00:07:45,380 --> 00:07:48,500
some good experiencing as I came from

00:07:47,120 --> 00:07:53,300
Ubuntu and Debian

00:07:48,500 --> 00:07:57,140
war for me it was very exciting that I

00:07:53,300 --> 00:08:00,500
got very early feedback of my changes on

00:07:57,140 --> 00:08:03,680
my son me request and I also get these

00:08:00,500 --> 00:08:06,800
changes on tumbleweed within a week so

00:08:03,680 --> 00:08:09,409
if they receive my changes are accepted

00:08:06,800 --> 00:08:14,090
they get into tumblr within within a

00:08:09,409 --> 00:08:19,599
week so it is very very very happy of

00:08:14,090 --> 00:08:22,940
that now there is also a tool called

00:08:19,599 --> 00:08:26,090
open build service in this case I'm so

00:08:22,940 --> 00:08:28,880
in an instance that is use for openSUSE

00:08:26,090 --> 00:08:31,310
tumble with our leap and this open with

00:08:28,880 --> 00:08:33,680
service this tool is used to build from

00:08:31,310 --> 00:08:35,110
the suit from the source code is lead

00:08:33,680 --> 00:08:37,760
leap and tumbleweed

00:08:35,110 --> 00:08:40,400
now this instance is only for tumbleweed

00:08:37,760 --> 00:08:42,890
on leap it is public so you can visit

00:08:40,400 --> 00:08:44,839
online and you can see in real time how

00:08:42,890 --> 00:08:47,660
the packages are built for tumbleweed

00:08:44,839 --> 00:08:49,790
and leap and you can also see the the

00:08:47,660 --> 00:08:53,260
spec files that are used to generate the

00:08:49,790 --> 00:08:53,260
packages for the distribution

00:08:53,350 --> 00:08:58,490
now the best part of this instance is

00:08:56,540 --> 00:09:00,410
that openSUSE community offers you the

00:08:58,490 --> 00:09:02,300
possibility to create a free account and

00:09:00,410 --> 00:09:06,200
use this instance to build your packages

00:09:02,300 --> 00:09:09,320
so I like to say that github is the

00:09:06,200 --> 00:09:11,360
leader platform to host source code of

00:09:09,320 --> 00:09:15,290
saw free software application or free

00:09:11,360 --> 00:09:18,170
software free software and wilt

00:09:15,290 --> 00:09:24,410
openSUSE org is the leader platform to

00:09:18,170 --> 00:09:26,120
build your open source software now

00:09:24,410 --> 00:09:29,149
there is also something interesting in

00:09:26,120 --> 00:09:31,040
this thing it is just and just is a tool

00:09:29,149 --> 00:09:32,630
that is used for installing the

00:09:31,040 --> 00:09:35,750
operating system and also for

00:09:32,630 --> 00:09:40,389
configuring the system once it is Star

00:09:35,750 --> 00:09:42,800
installed now for users it is like a

00:09:40,389 --> 00:09:44,720
configuration center but you have a lot

00:09:42,800 --> 00:09:47,149
of modules to configure different

00:09:44,720 --> 00:09:49,820
applications or programs but for

00:09:47,149 --> 00:09:52,339
developers it could also as act as a

00:09:49,820 --> 00:09:54,740
framework to have unified your

00:09:52,339 --> 00:09:57,010
configurations because you can use its

00:09:54,740 --> 00:09:59,660
graphical interface you can use its

00:09:57,010 --> 00:10:02,050
communication system between with to

00:09:59,660 --> 00:10:08,589
write and read from configuration files

00:10:02,050 --> 00:10:12,589
and something special from just is that

00:10:08,589 --> 00:10:16,190
it has a dual user interface you can run

00:10:12,589 --> 00:10:19,040
it on your desktop environment using GDK

00:10:16,190 --> 00:10:22,910
or QT you know in the left left side you

00:10:19,040 --> 00:10:25,370
can see the module sudo with graphical

00:10:22,910 --> 00:10:27,589
interface and on the right side in case

00:10:25,370 --> 00:10:29,089
you are using a console terminal and you

00:10:27,589 --> 00:10:32,149
don't have any graphical interface

00:10:29,089 --> 00:10:34,190
you're accessing for example with SSH to

00:10:32,149 --> 00:10:36,380
this remote server you can also

00:10:34,190 --> 00:10:38,209
configure it using just with n courses

00:10:36,380 --> 00:10:42,850
which helps you a lot so you don't have

00:10:38,209 --> 00:10:42,850
to type in a text file the configuration

00:10:43,449 --> 00:10:52,399
also how to contribute to openSUSE

00:10:48,430 --> 00:10:54,019
okay here I have a drawings so on the

00:10:52,399 --> 00:10:59,529
right side you can see what the openSUSE

00:10:54,019 --> 00:11:02,480
is taking care of I also put one arrow

00:10:59,529 --> 00:11:05,060
after the request submit as green

00:11:02,480 --> 00:11:07,459
intentionally because this part is done

00:11:05,060 --> 00:11:10,550
by openSUSE and the contributor what

00:11:07,459 --> 00:11:14,180
usually does is looking for a package in

00:11:10,550 --> 00:11:15,800
which he was to contribute on but the

00:11:14,180 --> 00:11:19,189
thing is that a factory which is the

00:11:15,800 --> 00:11:22,430
development branch should not be changed

00:11:19,189 --> 00:11:24,680
by contributors directly because factory

00:11:22,430 --> 00:11:26,360
is the one that is used to build temple

00:11:24,680 --> 00:11:28,670
with the snapshot and it has to be

00:11:26,360 --> 00:11:34,610
properly controlled by openSUSE the

00:11:28,670 --> 00:11:37,069
testing and the decision to publish this

00:11:34,610 --> 00:11:39,079
snapshot now they have something called

00:11:37,069 --> 00:11:41,420
devil project so development projects

00:11:39,079 --> 00:11:44,240
which contains all the packages that

00:11:41,420 --> 00:11:47,060
Tommy whit has so it is like a priest

00:11:44,240 --> 00:11:48,889
eight of the packages so usually looks

00:11:47,060 --> 00:11:51,589
for the package do you want to

00:11:48,889 --> 00:11:54,769
contribute to in this level product and

00:11:51,589 --> 00:11:57,730
then you usually make a copy of this

00:11:54,769 --> 00:12:02,000
project to your home project in wheeled

00:11:57,730 --> 00:12:04,759
openSUSE org so this is called branch to

00:12:02,000 --> 00:12:07,730
do make a branch to your account and

00:12:04,759 --> 00:12:09,290
this then in your obvious home after

00:12:07,730 --> 00:12:11,269
that you want to change the code by

00:12:09,290 --> 00:12:13,730
itself at you need a local copy and your

00:12:11,269 --> 00:12:16,120
machine so you can write changes and

00:12:13,730 --> 00:12:19,220
this is made by doing a check out

00:12:16,120 --> 00:12:22,959
usually use a common use command and

00:12:19,220 --> 00:12:29,509
name always c4 open

00:12:22,959 --> 00:12:31,730
openSUSE common online or exactly what

00:12:29,509 --> 00:12:36,110
the letters means but use this command

00:12:31,730 --> 00:12:38,420
to copy and check out a local copy of

00:12:36,110 --> 00:12:40,910
this project then you make new changes

00:12:38,420 --> 00:12:42,529
when you are finished do you make a

00:12:40,910 --> 00:12:45,529
check-in which means you upload the

00:12:42,529 --> 00:12:47,449
changes to your home project and after

00:12:45,529 --> 00:12:49,220
that you can see also in obvious how it

00:12:47,449 --> 00:12:51,230
is built against different architectures

00:12:49,220 --> 00:12:52,970
because of course you can read it

00:12:51,230 --> 00:12:54,920
yourself on your architecture what is

00:12:52,970 --> 00:12:57,230
only one so on tableau it is also

00:12:54,920 --> 00:13:00,170
perhaps useful for arm it's also useful

00:12:57,230 --> 00:13:01,010
for Power PC or and so on and you want

00:13:00,170 --> 00:13:02,300
to

00:13:01,010 --> 00:13:04,880
have it tested also on other

00:13:02,300 --> 00:13:07,579
architectures so when you upload this to

00:13:04,880 --> 00:13:10,310
your home project you can enable those

00:13:07,579 --> 00:13:13,250
repositories for iron form or PC for

00:13:10,310 --> 00:13:16,100
extra 90 and you can test your changes

00:13:13,250 --> 00:13:17,240
against those architectures so not the

00:13:16,100 --> 00:13:20,990
package myself

00:13:17,240 --> 00:13:22,639
you can test how it is built after that

00:13:20,990 --> 00:13:24,769
if you are happy with your changes on

00:13:22,639 --> 00:13:27,829
your home project do you want to submit

00:13:24,769 --> 00:13:29,860
a request which is asking openSUSE to a

00:13:27,829 --> 00:13:34,940
sub your changes on the double project

00:13:29,860 --> 00:13:37,699
after that they usually the risk

00:13:34,940 --> 00:13:39,560
managers pick a selection of changes on

00:13:37,699 --> 00:13:42,320
the level projects and they make

00:13:39,560 --> 00:13:44,029
something called a staging project this

00:13:42,320 --> 00:13:46,339
stadium project is tested done in open

00:13:44,029 --> 00:13:49,160
QA and you can see also the test running

00:13:46,339 --> 00:13:52,430
in real time in the public instance open

00:13:49,160 --> 00:13:54,019
QA dot openSUSE dot org and if this test

00:13:52,430 --> 00:13:56,810
passes then they take the decision to

00:13:54,019 --> 00:13:59,180
include it into factory and after that

00:13:56,810 --> 00:14:01,940
we make an integration test between all

00:13:59,180 --> 00:14:04,850
these double project changes together

00:14:01,940 --> 00:14:07,760
and it's what we have the normal

00:14:04,850 --> 00:14:10,430
tumbleweed test that we see before we

00:14:07,760 --> 00:14:12,829
saw before in my screenshot and then we

00:14:10,430 --> 00:14:15,529
have atomic Wiesner shop at is publish

00:14:12,829 --> 00:14:24,139
and then you can make a tumble zipper

00:14:15,529 --> 00:14:25,760
duct okay if you want to normal I have

00:14:24,139 --> 00:14:28,069
also put here because my presentation

00:14:25,760 --> 00:14:30,529
was aimed to people who are beginners or

00:14:28,069 --> 00:14:32,510
newcomers so they don't actually nobody

00:14:30,529 --> 00:14:35,510
well who is open Susie who is about the

00:14:32,510 --> 00:14:37,610
development so how big here from this

00:14:35,510 --> 00:14:39,589
conference the talks as I think that are

00:14:37,610 --> 00:14:41,839
good for beginners sort of easy that are

00:14:39,589 --> 00:14:44,860
easy to understand or even that extends

00:14:41,839 --> 00:14:47,209
what I said during my presentation I

00:14:44,860 --> 00:14:49,880
hope they are updated because I think

00:14:47,209 --> 00:14:52,910
they change the scale I look at that I

00:14:49,880 --> 00:14:56,660
did last night so I hope they are well

00:14:52,910 --> 00:15:00,230
enough and you can wet it down and since

00:14:56,660 --> 00:15:04,339
I have still five minutes I will first

00:15:00,230 --> 00:15:06,500
ask if you have any questions and if not

00:15:04,339 --> 00:15:07,779
then I would like to give you a live

00:15:06,500 --> 00:15:09,500
demo

00:15:07,779 --> 00:15:22,399
of the things

00:15:09,500 --> 00:15:22,399
[Music]

00:15:22,610 --> 00:15:31,230
so for example here I have my bill

00:15:27,899 --> 00:15:34,680
openSUSE or this instance of the open

00:15:31,230 --> 00:15:36,300
beta service that is used to build the

00:15:34,680 --> 00:15:39,000
puppet is for opposite amber with iron

00:15:36,300 --> 00:15:41,570
for lip and eye on login so at this

00:15:39,000 --> 00:15:44,279
moment I have opened the double project

00:15:41,570 --> 00:15:48,150
for the the common tree so for the

00:15:44,279 --> 00:15:50,750
package tree if you know 3 when you have

00:15:48,150 --> 00:15:52,949
[Music]

00:15:50,750 --> 00:16:03,110
here for example can you see the screen

00:15:52,949 --> 00:16:06,449
yeah it is big enough I think no enough

00:16:03,110 --> 00:16:08,329
so when you write 3 you can see a tree

00:16:06,449 --> 00:16:13,680
of directories it is very simple common

00:16:08,329 --> 00:16:14,970
and then let's say that they want to to

00:16:13,680 --> 00:16:16,320
contribute to this package because I

00:16:14,970 --> 00:16:18,600
found a bug because I want to improve

00:16:16,320 --> 00:16:25,850
the behavior then the first thing I will

00:16:18,600 --> 00:16:28,410
do is here here I have an option on the

00:16:25,850 --> 00:16:33,300
website on the interface to branch the

00:16:28,410 --> 00:16:36,360
package when I click here I ask okay we

00:16:33,300 --> 00:16:40,440
don't need to explain this professional

00:16:36,360 --> 00:16:42,750
all at once behavior and now we can see

00:16:40,440 --> 00:16:46,139
that we have a copy on my home project

00:16:42,750 --> 00:16:49,680
it is vegan ophea I have a copy on my

00:16:46,139 --> 00:16:52,160
home project about this package where I

00:16:49,680 --> 00:16:55,829
can make the changes of course I will do

00:16:52,160 --> 00:16:59,100
always see check out to have this change

00:16:55,829 --> 00:17:01,440
locally but even he from here I cannot

00:16:59,100 --> 00:17:05,549
change the source code I can upload a

00:17:01,440 --> 00:17:09,839
new tarball but here you can see I can

00:17:05,549 --> 00:17:12,750
open the spec file and I can also change

00:17:09,839 --> 00:17:15,089
it from here so in case for example that

00:17:12,750 --> 00:17:16,949
I have seen that it has a missing

00:17:15,089 --> 00:17:23,770
dependency then I call well here

00:17:16,949 --> 00:17:28,510
requires something and then

00:17:23,770 --> 00:17:32,730
safe safe under they will save to my

00:17:28,510 --> 00:17:36,460
home project and once I have saved it I

00:17:32,730 --> 00:17:38,920
have here a option yeah submit package

00:17:36,460 --> 00:17:42,160
which will create this request for open

00:17:38,920 --> 00:17:46,330
to the community to assert my changes so

00:17:42,160 --> 00:17:48,040
that will be for obvious then in open

00:17:46,330 --> 00:17:55,840
key way in case you don't know this tool

00:17:48,040 --> 00:17:59,140
yet this is from here so this is the

00:17:55,840 --> 00:18:01,900
landing page of open QA of upgraded open

00:17:59,140 --> 00:18:04,750
SUSE a lot orb and here for example you

00:18:01,900 --> 00:18:07,690
can see different groups from for

00:18:04,750 --> 00:18:09,520
tumbleweed one for tumbleweed on arm one

00:18:07,690 --> 00:18:12,070
for time I wait for the test in the

00:18:09,520 --> 00:18:14,290
kernel and so on you also can find leap

00:18:12,070 --> 00:18:17,830
you also can find open QA by itself

00:18:14,290 --> 00:18:20,290
testing itself you can also see a test

00:18:17,830 --> 00:18:24,030
of open bill service well let's see that

00:18:20,290 --> 00:18:29,260
let's think that I want to see this will

00:18:24,030 --> 00:18:32,740
so I open it and then I see list of test

00:18:29,260 --> 00:18:34,930
suites or case tests that are executed

00:18:32,740 --> 00:18:40,270
against tumble with this snapshot that

00:18:34,930 --> 00:18:43,570
was published from the field service now

00:18:40,270 --> 00:18:46,600
let's seen that I work I want to work on

00:18:43,570 --> 00:18:52,690
or take a look at this test extra test

00:18:46,600 --> 00:18:56,050
on extra tax

00:18:52,690 --> 00:19:00,520
so I will click here and it will open

00:18:56,050 --> 00:19:01,960
the page so you can see here inside of a

00:19:00,520 --> 00:19:03,810
test suite different modules that are

00:19:01,960 --> 00:19:06,370
executed against this operating system

00:19:03,810 --> 00:19:09,790
and you can see even a screenshot of

00:19:06,370 --> 00:19:11,740
what was happening during the test also

00:19:09,790 --> 00:19:13,480
when you are executing a test you can

00:19:11,740 --> 00:19:16,720
also see in real time what is happening

00:19:13,480 --> 00:19:20,500
so this this is so as a video in in real

00:19:16,720 --> 00:19:22,930
time what is happening so one of the

00:19:20,500 --> 00:19:24,670
features of this tool is comparing

00:19:22,930 --> 00:19:26,350
between screenshots so you take a

00:19:24,670 --> 00:19:28,060
screenshot of what you would like to and

00:19:26,350 --> 00:19:30,610
then you say I want to compare this

00:19:28,060 --> 00:19:33,070
video this square of the screen to check

00:19:30,610 --> 00:19:35,590
if what is happening on the test is what

00:19:33,070 --> 00:19:37,420
I expect it to be of course this is a

00:19:35,590 --> 00:19:39,310
little bit war because if a phone

00:19:37,420 --> 00:19:43,080
changed for example you have to make a

00:19:39,310 --> 00:19:46,380
new needle but ok it is very good way to

00:19:43,080 --> 00:19:49,300
to have an overview but also you can

00:19:46,380 --> 00:19:51,550
test output of commands you can test

00:19:49,300 --> 00:19:55,090
also determine are you can execute

00:19:51,550 --> 00:19:56,710
commands and make Wregget regular

00:19:55,090 --> 00:20:00,070
expressions to test the output of the

00:19:56,710 --> 00:20:03,820
dos command it is also possible and even

00:20:00,070 --> 00:20:06,430
after that you have fear locks and

00:20:03,820 --> 00:20:09,550
assets so in this case this test failed

00:20:06,430 --> 00:20:13,510
and then we can here take a look of all

00:20:09,550 --> 00:20:17,500
those locks and then we can figure out

00:20:13,510 --> 00:20:21,370
what happened for it to fail and even we

00:20:17,500 --> 00:20:23,950
have a video of what happened during

00:20:21,370 --> 00:20:29,410
this test so this is what you will see

00:20:23,950 --> 00:20:40,830
also on lifetime on our life when the

00:20:29,410 --> 00:20:40,830
test is executed the graphical interface

00:20:41,100 --> 00:20:46,930
of course is typed faster than a human

00:20:44,230 --> 00:20:49,810
but even though this this video is

00:20:46,930 --> 00:20:53,040
time-lapse so it is even faster than

00:20:49,810 --> 00:20:56,820
what they open Qi by itself please do

00:20:53,040 --> 00:21:01,800
and now I have network problems but I

00:20:56,820 --> 00:21:06,360
hope I can show you what this because I

00:21:01,800 --> 00:21:14,820
still need to explain you or show you

00:21:06,360 --> 00:21:18,000
about just a very cool feature okay

00:21:14,820 --> 00:21:20,400
I hope it works on the left side you can

00:21:18,000 --> 00:21:22,380
see a bit one machine and you can

00:21:20,400 --> 00:21:24,630
imagine this bit of machine as a remote

00:21:22,380 --> 00:21:28,530
server on the server room where you

00:21:24,630 --> 00:21:30,060
don't have access to and it doesn't have

00:21:28,530 --> 00:21:33,540
to get any operating system I want to

00:21:30,060 --> 00:21:36,600
start open to say 4203 and this is

00:21:33,540 --> 00:21:38,520
already booted the medium and here when

00:21:36,600 --> 00:21:44,750
I go on the installation I don't know if

00:21:38,520 --> 00:21:48,930
you can read currently it doesn't so

00:21:44,750 --> 00:21:51,210
well in the boot options I can send

00:21:48,930 --> 00:21:53,700
parameters to the little RC and those

00:21:51,210 --> 00:21:56,280
parameters has also sent to the just

00:21:53,700 --> 00:21:59,820
because openSUSE is installed also using

00:21:56,280 --> 00:22:03,510
just a rectangle here ssh equals 1 and

00:21:59,820 --> 00:22:08,610
that will tell just to start a remote

00:22:03,510 --> 00:22:10,620
installation with ssh twister SSH daemon

00:22:08,610 --> 00:22:12,390
he will star it will prepare all the

00:22:10,620 --> 00:22:15,090
installation things and then from other

00:22:12,390 --> 00:22:17,370
machine I can correct to it remotely and

00:22:15,090 --> 00:22:41,330
perform an installation without being

00:22:17,370 --> 00:23:28,760
physically on this server this volume ok

00:22:41,330 --> 00:23:30,590
to type the password on my network

00:23:28,760 --> 00:23:32,780
doesn't work so the remote installation

00:23:30,590 --> 00:23:34,730
was aborted and the normalization appear

00:23:32,780 --> 00:23:36,770
so then I'm sorry that I cannot show you

00:23:34,730 --> 00:23:38,360
that but perhaps you can find more

00:23:36,770 --> 00:23:39,950
information or perhaps I can show you

00:23:38,360 --> 00:23:42,710
also later figuring during testing on

00:23:39,950 --> 00:23:45,710
that so what they wanted to show you is

00:23:42,710 --> 00:23:47,420
that here on this right side I have fun

00:23:45,710 --> 00:23:50,870
or another little machine with openSUSE

00:23:47,420 --> 00:23:54,770
tumbleweed and when I do SSH with x4

00:23:50,870 --> 00:23:57,920
varlyn I will make and so will have the

00:23:54,770 --> 00:23:59,870
same graphic installation was here but

00:23:57,920 --> 00:24:03,230
on my client so I can make the same

00:23:59,870 --> 00:24:06,710
installation but also since just has a

00:24:03,230 --> 00:24:08,960
dual user interface from Mac OS I could

00:24:06,710 --> 00:24:11,780
also connect to SSH I don't I don't have

00:24:08,960 --> 00:24:14,240
X so I cannot explore warden but it has

00:24:11,780 --> 00:24:16,220
n courses so that means that can make a

00:24:14,240 --> 00:24:19,190
remote installation from different

00:24:16,220 --> 00:24:22,790
operating system have anacs-- I remember

00:24:19,190 --> 00:24:27,590
phone not graphical but easier

00:24:22,790 --> 00:24:31,810
installation using just and then that's

00:24:27,590 --> 00:24:31,810
all I wanted to say thank you

00:24:35,100 --> 00:24:37,160
you

00:24:38,400 --> 00:24:40,460

YouTube URL: https://www.youtube.com/watch?v=Bq6PFNjID34


