Title: openSUSE Conference 2018 - Your first steps with openSUSE Kubic
Publication date: 2018-05-27
Playlist: openSUSE Conference 2018
Description: 
	https://media.ccc.de/v/1960-your-first-steps-with-opensuse-kubic

Practical information on how to get started with openSUSE Kubic to host your containers

Curious about openSUSE Kubic and using it for running your containers workloads ?
I will introduce the various way to deploy openSUSE Kubic and explain how to get started with systems operations and containers management.

From scratch to fully running containers in 45 minutes :)

Curious about openSUSE Kubic and using it for running your containers workloads ?
I will introduce the various way to deploy openSUSE Kubic and explain how to get started with systems operations and containers management.

From scratch to fully running containers in 45 minutes :)

Paul Gonin
Captions: 
	00:00:05,279 --> 00:00:14,799
I'm Paul guna and I'm a cubic thinker

00:00:10,840 --> 00:00:19,420
and my talk today will be about first

00:00:14,799 --> 00:00:21,120
steps in using openSUSE cubic which I

00:00:19,420 --> 00:00:25,570
have been using for a few months

00:00:21,120 --> 00:00:28,300
coming from Anna openSUSE background and

00:00:25,570 --> 00:00:30,039
I got to make a lot of interesting

00:00:28,300 --> 00:00:33,789
discoveries in that journey and I'm

00:00:30,039 --> 00:00:36,129
going to share it today thanks for all

00:00:33,789 --> 00:00:41,170
the attendance today on a Sunday it's

00:00:36,129 --> 00:00:46,360
very impressive very committed into open

00:00:41,170 --> 00:00:48,550
SUSE and I've been working at SU say for

00:00:46,360 --> 00:00:50,280
a few years now and recently I started

00:00:48,550 --> 00:00:54,420
to work more on containers

00:00:50,280 --> 00:00:57,579
containerization and I wanted to myself

00:00:54,420 --> 00:00:59,620
increase my knowledge and develop my

00:00:57,579 --> 00:01:03,550
skills so I decided to use for my

00:00:59,620 --> 00:01:08,920
personal use cubic more and more and I

00:01:03,550 --> 00:01:14,170
will show you today about cubic so first

00:01:08,920 --> 00:01:16,299
what is cubic it's defined as the

00:01:14,170 --> 00:01:20,649
container as a service platform based on

00:01:16,299 --> 00:01:22,929
communities atop open SUSE micro OS then

00:01:20,649 --> 00:01:26,170
you might ask what's micro what softens

00:01:22,929 --> 00:01:29,590
to see micro s and as a few pointed the

00:01:26,170 --> 00:01:31,060
last few days micro refers not to its

00:01:29,590 --> 00:01:33,579
size but to the fact that its

00:01:31,060 --> 00:01:37,569
specialized for micro services

00:01:33,579 --> 00:01:40,529
architecture and it's designed to us

00:01:37,569 --> 00:01:45,999
container workloads with automated

00:01:40,529 --> 00:01:50,169
administration and batching and being

00:01:45,999 --> 00:01:54,119
the suited environment for running

00:01:50,169 --> 00:01:59,039
containers in the open SUSE environment

00:01:54,119 --> 00:02:02,979
so as of today what can you do or not

00:01:59,039 --> 00:02:05,770
with cubic well it's a perfect platform

00:02:02,979 --> 00:02:08,349
to host containers it's ready for that

00:02:05,770 --> 00:02:10,450
you can you can run containers with

00:02:08,349 --> 00:02:14,050
darker works perfectly out of the box

00:02:10,450 --> 00:02:17,069
and you can also run containers with

00:02:14,050 --> 00:02:20,099
Bodmin ransie which is

00:02:17,069 --> 00:02:22,950
kind of a cutting-edge technology recent

00:02:20,099 --> 00:02:26,150
technology for containers you can also

00:02:22,950 --> 00:02:28,560
deploy kubernetes because you get

00:02:26,150 --> 00:02:34,200
communities packages for up and Susie

00:02:28,560 --> 00:02:36,629
are available although QB they QB EDM is

00:02:34,200 --> 00:02:38,700
not available yet we have some issues

00:02:36,629 --> 00:02:42,120
we're still working on at least the last

00:02:38,700 --> 00:02:44,940
time I checked and supposedly you could

00:02:42,120 --> 00:02:49,440
deploy communities by hand or as it is

00:02:44,940 --> 00:02:53,010
called the hard way which is a 14

00:02:49,440 --> 00:02:56,430
chapters book with two thousand five

00:02:53,010 --> 00:03:00,030
hundred lines of documentation I think

00:02:56,430 --> 00:03:03,000
it works I never tried myself and I

00:03:00,030 --> 00:03:06,410
never had anyone reporting it worked so

00:03:03,000 --> 00:03:09,709
I'm not claiming it works but it should

00:03:06,410 --> 00:03:13,829
anyway my talk today won't be about

00:03:09,709 --> 00:03:17,000
kubernetes because as I pointed out I

00:03:13,829 --> 00:03:19,019
used it for personal workloads

00:03:17,000 --> 00:03:24,209
professional environment mostly but

00:03:19,019 --> 00:03:26,850
still one user also and running that on

00:03:24,209 --> 00:03:29,459
kubernetes would be overkill and I

00:03:26,850 --> 00:03:32,099
wanted to focus and as the as the cloud

00:03:29,459 --> 00:03:35,489
native Foundation pointed out the the

00:03:32,099 --> 00:03:37,200
path to micro services well first you

00:03:35,489 --> 00:03:38,760
need to know about containers you need

00:03:37,200 --> 00:03:41,340
to continue eyes you need to run some

00:03:38,760 --> 00:03:44,340
containers orchestration can come once

00:03:41,340 --> 00:03:49,310
you're more confortable in and familiar

00:03:44,340 --> 00:03:54,329
with it so I will show some of the

00:03:49,310 --> 00:03:57,810
things I've been doing with cubic so how

00:03:54,329 --> 00:04:02,430
to install openSUSE cubic what are your

00:03:57,810 --> 00:04:05,340
options there to run cubic well you can

00:04:02,430 --> 00:04:07,769
get di-azo to run on bare metal on

00:04:05,340 --> 00:04:10,040
virtualized environment this is actually

00:04:07,769 --> 00:04:12,840
what the official website offers

00:04:10,040 --> 00:04:15,419
currently cubic that up in Susy org

00:04:12,840 --> 00:04:17,729
there is a download site a Donald

00:04:15,419 --> 00:04:23,250
Boonton sorry that points to an ISO that

00:04:17,729 --> 00:04:26,070
you can use to install cubic it's very

00:04:23,250 --> 00:04:28,440
traditional it's using the same building

00:04:26,070 --> 00:04:29,310
blocks as other openSUSE distribution

00:04:28,440 --> 00:04:31,380
it's actually

00:04:29,310 --> 00:04:34,080
I think it's it's not a distribution

00:04:31,380 --> 00:04:36,840
it's a it's a flavor of tumbleweed

00:04:34,080 --> 00:04:39,630
if I'm right so it's basically a

00:04:36,840 --> 00:04:43,290
tumbleweed but built with different

00:04:39,630 --> 00:04:45,960
choices architecture and a specialized

00:04:43,290 --> 00:04:48,650
workflow for the installation but it's

00:04:45,960 --> 00:04:51,810
basically tumbleweed packages and

00:04:48,650 --> 00:04:53,840
tumbleweed building blocks so we have

00:04:51,810 --> 00:04:59,810
the option to use the Yost installer

00:04:53,840 --> 00:05:03,120
which kick-ass you can use auto Yost for

00:04:59,810 --> 00:05:06,000
automation of installation and very

00:05:03,120 --> 00:05:09,360
similar way that people are doing it for

00:05:06,000 --> 00:05:12,780
years and the ISO is tested in open QA

00:05:09,360 --> 00:05:16,800
as part of the tumbleweed testing

00:05:12,780 --> 00:05:20,820
workflow thanks to you

00:05:16,800 --> 00:05:23,880
great guys we're doing the testing which

00:05:20,820 --> 00:05:26,070
means already we have a lot of testing

00:05:23,880 --> 00:05:28,620
on the ISO which is don't like testing

00:05:26,070 --> 00:05:32,639
ran C testing docker

00:05:28,620 --> 00:05:35,280
testing real glass containers a lot of

00:05:32,639 --> 00:05:36,510
great things are done and Kuby ADM is

00:05:35,280 --> 00:05:38,400
already being tested and failed

00:05:36,510 --> 00:05:46,140
currently which is something we hope

00:05:38,400 --> 00:05:48,360
will be fixed soon so when you install

00:05:46,140 --> 00:05:51,300
it you have the option to use the ISO to

00:05:48,360 --> 00:05:55,740
install on bare metal and virtualized

00:05:51,300 --> 00:05:57,390
environment it's a very traditional

00:05:55,740 --> 00:05:59,640
installer for people who are familiar

00:05:57,390 --> 00:06:02,610
with the open SUSE although there are

00:05:59,640 --> 00:06:04,200
new roles that you can at the start of

00:06:02,610 --> 00:06:07,919
the installation there are new roles to

00:06:04,200 --> 00:06:10,200
pick from the first one is the poppin

00:06:07,919 --> 00:06:12,660
Suzy mark o/s the play note that's the

00:06:10,200 --> 00:06:16,050
one I've been using to deploy on a bare

00:06:12,660 --> 00:06:19,289
metal server and run containers there

00:06:16,050 --> 00:06:23,160
are other options the on configured

00:06:19,289 --> 00:06:27,060
cluster note the admin dashboard and the

00:06:23,160 --> 00:06:31,710
cluster note those are meant for using

00:06:27,060 --> 00:06:34,880
with kubernetes and building cluster but

00:06:31,710 --> 00:06:34,880
I'm not covering this today

00:06:35,199 --> 00:06:39,460
and it's a very simplified workflow to

00:06:37,870 --> 00:06:42,029
actually install it very very quick

00:06:39,460 --> 00:06:45,340
because you basically have to configure

00:06:42,029 --> 00:06:50,099
your system and install a password then

00:06:45,340 --> 00:06:53,889
you have the storage choices to make

00:06:50,099 --> 00:06:58,150
package selection and boom it performs

00:06:53,889 --> 00:07:00,819
installation is very quick the fact that

00:06:58,150 --> 00:07:03,610
it's a separate installer makes it very

00:07:00,819 --> 00:07:05,259
very easy to get started because you

00:07:03,610 --> 00:07:06,699
don't get confused with all the options

00:07:05,259 --> 00:07:09,270
and find the right way it really gives

00:07:06,699 --> 00:07:11,620
you an easy path into installing it

00:07:09,270 --> 00:07:14,259
there are not so many options just

00:07:11,620 --> 00:07:16,569
things that make sense for someone even

00:07:14,259 --> 00:07:18,729
without knowledge of what you want to do

00:07:16,569 --> 00:07:22,169
with containers you can just install it

00:07:18,729 --> 00:07:25,889
it just it's just going to ask you for

00:07:22,169 --> 00:07:32,370
standard parameters of installing a

00:07:25,889 --> 00:07:34,870
distribution then there are also

00:07:32,370 --> 00:07:40,509
virtualization disk images which are

00:07:34,870 --> 00:07:43,180
built with the OBS and kiwi so I've put

00:07:40,509 --> 00:07:45,219
a little label on it it's still in the

00:07:43,180 --> 00:07:47,979
development it's not tested it's not

00:07:45,219 --> 00:07:50,710
going in up in QA it doesn't get a lot

00:07:47,979 --> 00:07:55,599
of manual testing yet so it's for people

00:07:50,710 --> 00:07:58,330
who are interested to try with disk

00:07:55,599 --> 00:08:02,949
images those disk images are available

00:07:58,330 --> 00:08:08,399
for KVM for Xen VMware and hyper-v and

00:08:02,949 --> 00:08:12,129
also there is an open stack disk image I

00:08:08,399 --> 00:08:16,779
put the link here if you want to get

00:08:12,129 --> 00:08:19,389
them and an experiment so about the

00:08:16,779 --> 00:08:21,189
virtualization disk images why would you

00:08:19,389 --> 00:08:24,310
want to use them well the installation

00:08:21,189 --> 00:08:28,270
process as I described is quite quick

00:08:24,310 --> 00:08:30,039
because it doesn't ask you to answer to

00:08:28,270 --> 00:08:32,050
provide a lot of information but the

00:08:30,039 --> 00:08:34,510
actual installation process of writing

00:08:32,050 --> 00:08:38,019
all the packages into the system is

00:08:34,510 --> 00:08:40,329
still quite long it still takes some

00:08:38,019 --> 00:08:42,669
time if you do it once all you can't

00:08:40,329 --> 00:08:45,370
afford it but if you plan to do it over

00:08:42,669 --> 00:08:47,040
and over it's a significant amount of

00:08:45,370 --> 00:08:48,820
time and the disk images are actually

00:08:47,040 --> 00:08:52,150
much faster

00:08:48,820 --> 00:08:54,460
for getting started I would say my

00:08:52,150 --> 00:08:57,160
estimation is that fuse the installation

00:08:54,460 --> 00:08:59,500
process will take you and to end about

00:08:57,160 --> 00:09:02,560
15 minutes to get your system installed

00:08:59,500 --> 00:09:05,020
while with disk images you can boot in

00:09:02,560 --> 00:09:09,780
about two minutes so it's it's a

00:09:05,020 --> 00:09:12,760
significant time you can save and also

00:09:09,780 --> 00:09:16,330
for some use cases like if you're using

00:09:12,760 --> 00:09:18,640
a continuous integration or you're

00:09:16,330 --> 00:09:20,680
constantly deploying new systems it's

00:09:18,640 --> 00:09:25,270
definitely a time saver if you're using

00:09:20,680 --> 00:09:28,540
a virtualized environment if you are to

00:09:25,270 --> 00:09:30,160
use the virtualization disk images you

00:09:28,540 --> 00:09:31,360
need to provide some information when

00:09:30,160 --> 00:09:35,290
you put the system so that it's

00:09:31,360 --> 00:09:38,620
personalized to your case and for that

00:09:35,290 --> 00:09:41,920
the choice has been made to use cloud in

00:09:38,620 --> 00:09:43,930
it which comes from the cloud world I

00:09:41,920 --> 00:09:48,130
think initially it's it's basically from

00:09:43,930 --> 00:09:53,320
AWS ec2 and it's been extended to be

00:09:48,130 --> 00:09:56,880
used in in various situations and we are

00:09:53,320 --> 00:10:00,760
using it now for cloud in it for cubic

00:09:56,880 --> 00:10:03,460
obviously for the OpenStack images it's

00:10:00,760 --> 00:10:06,490
built in in OpenStack so you can provide

00:10:03,460 --> 00:10:10,060
the cloud in it file in the given

00:10:06,490 --> 00:10:14,440
location in bootstrap of your instance

00:10:10,060 --> 00:10:16,990
and it will be used when you could strap

00:10:14,440 --> 00:10:20,010
the instance but what if you're using

00:10:16,990 --> 00:10:24,310
virtualization because this is not meant

00:10:20,010 --> 00:10:27,910
to be used it's not a typical use case

00:10:24,310 --> 00:10:30,600
in virtualization to use cloud in it so

00:10:27,910 --> 00:10:35,100
a cloud native file is basically a

00:10:30,600 --> 00:10:37,030
simple text file that contains the

00:10:35,100 --> 00:10:40,300
information you want to set on your

00:10:37,030 --> 00:10:43,060
system on the first boot of that system

00:10:40,300 --> 00:10:46,120
so here are provided one where the time

00:10:43,060 --> 00:10:49,510
zone is set a password is set but you

00:10:46,120 --> 00:10:52,720
can provide SSH keys as well you can set

00:10:49,510 --> 00:10:54,160
your NTP servers DNS whatever system

00:10:52,720 --> 00:10:55,720
configuration if there is a lot of

00:10:54,160 --> 00:10:58,800
automation you can do with cloud in it

00:10:55,720 --> 00:11:01,800
you can also provide

00:10:58,800 --> 00:11:05,190
and points to configuration management

00:11:01,800 --> 00:11:08,130
system like chef on Siebel even solved

00:11:05,190 --> 00:11:09,810
as possible so you basically provide

00:11:08,130 --> 00:11:12,360
anything everything you need to

00:11:09,810 --> 00:11:14,310
configure and start your system and and

00:11:12,360 --> 00:11:16,740
possibly hand over to other more

00:11:14,310 --> 00:11:22,110
advanced configuration solutions like

00:11:16,740 --> 00:11:27,090
like salt and whites and specifically so

00:11:22,110 --> 00:11:31,020
it works quite naturally on clouds it's

00:11:27,090 --> 00:11:32,940
very typical use in clouds but for

00:11:31,020 --> 00:11:36,170
virtualization the way you can use it is

00:11:32,940 --> 00:11:39,690
actually there is an option to use it as

00:11:36,170 --> 00:11:43,520
local provider and for that you actually

00:11:39,690 --> 00:11:47,580
create your files put them into a cd-rom

00:11:43,520 --> 00:11:51,840
file system create a serum disk image

00:11:47,580 --> 00:11:54,420
and you attach that Citarum at the boot

00:11:51,840 --> 00:11:58,380
of your image and clouding it will look

00:11:54,420 --> 00:12:00,630
as one of the part of the workflow it

00:11:58,380 --> 00:12:02,880
checks for the metadata service for

00:12:00,630 --> 00:12:06,300
Cloud Servers doesn't find it then it

00:12:02,880 --> 00:12:09,540
will look for a cd-rom and it will get

00:12:06,300 --> 00:12:11,340
deem it will see that there is a cd-rom

00:12:09,540 --> 00:12:14,010
attached and it will look for the files

00:12:11,340 --> 00:12:18,660
that configure the system and that's how

00:12:14,010 --> 00:12:21,270
we've been using it with cubic and that

00:12:18,660 --> 00:12:25,620
works with it's been tested actually

00:12:21,270 --> 00:12:27,360
with all the also with the old of

00:12:25,620 --> 00:12:31,290
virtualization technologies we've been

00:12:27,360 --> 00:12:33,000
using it with VMware with iove with k vm

00:12:31,290 --> 00:12:40,650
with zen it works on all these

00:12:33,000 --> 00:12:43,710
environments then there is a last option

00:12:40,650 --> 00:12:46,880
which is raspberry PI's so for that you

00:12:43,710 --> 00:12:50,130
need well a Raspberry Pi 64 bit one

00:12:46,880 --> 00:12:52,590
eeling an SD card and you need to ask

00:12:50,130 --> 00:12:55,280
nicely to Richard Brown because it's the

00:12:52,590 --> 00:12:57,750
one who's been building that image and

00:12:55,280 --> 00:12:59,610
most likely we'll be able to tell you if

00:12:57,750 --> 00:13:01,080
it works or not and if you should be

00:12:59,610 --> 00:13:02,280
using it but also you should let them

00:13:01,080 --> 00:13:04,140
know that you're going to use it because

00:13:02,280 --> 00:13:07,020
it will be very happy that you're using

00:13:04,140 --> 00:13:09,470
it because we like that scenario where

00:13:07,020 --> 00:13:11,630
we'd like to have cubic the

00:13:09,470 --> 00:13:16,400
used on a regular basis in a short time

00:13:11,630 --> 00:13:18,020
so it's it's definitely a place where we

00:13:16,400 --> 00:13:21,710
like to see people more and more using

00:13:18,020 --> 00:13:23,720
it so that's that's about installing it

00:13:21,710 --> 00:13:25,580
there are a lot of options we're working

00:13:23,720 --> 00:13:28,400
and definitely we will be considering

00:13:25,580 --> 00:13:32,450
other options we have the power of the

00:13:28,400 --> 00:13:37,490
OBS for us or not at this time we have

00:13:32,450 --> 00:13:39,890
quite a lot options on the table and for

00:13:37,490 --> 00:13:42,350
the community we have so far it's it's

00:13:39,890 --> 00:13:44,780
already quite a lot but we could

00:13:42,350 --> 00:13:47,990
definitely extend this letter on and

00:13:44,780 --> 00:13:50,180
build images for public clouds that's

00:13:47,990 --> 00:13:51,920
something that we can if there is a

00:13:50,180 --> 00:13:54,260
demand and it if there are people who

00:13:51,920 --> 00:13:58,760
are working on this it will definitely

00:13:54,260 --> 00:14:01,520
happen more boards more arm boards since

00:13:58,760 --> 00:14:04,670
um tumbleweed since cubic is tumbleweed

00:14:01,520 --> 00:14:06,260
based basically the support of

00:14:04,670 --> 00:14:11,360
tumbleweed on arm boards will mean that

00:14:06,260 --> 00:14:14,210
cubic will be supported as well I would

00:14:11,360 --> 00:14:17,060
personally really like to see cubic on

00:14:14,210 --> 00:14:24,620
the point 64 but we'll see about this

00:14:17,060 --> 00:14:29,930
and then so you have it installed now

00:14:24,620 --> 00:14:32,140
what well you can start containers as

00:14:29,930 --> 00:14:37,070
soon as it is installed by default

00:14:32,140 --> 00:14:39,290
docker is installed I'm not quite sure

00:14:37,070 --> 00:14:41,030
I'm not wanting to person sure anymore

00:14:39,290 --> 00:14:43,550
because it's been a few months ago but I

00:14:41,030 --> 00:14:46,100
think you have to start by enabling and

00:14:43,550 --> 00:14:50,330
starting the doctor Damon as a first

00:14:46,100 --> 00:14:52,460
step or not not sure 100% it's not how

00:14:50,330 --> 00:14:55,010
you think okay so I add too but now it's

00:14:52,460 --> 00:14:56,690
not anymore yeah I wanted to look into

00:14:55,010 --> 00:15:00,500
open QA if it were still the case but

00:14:56,690 --> 00:15:03,440
yeah time and stuff anyway so yeah right

00:15:00,500 --> 00:15:07,700
off the box you can run containers no

00:15:03,440 --> 00:15:09,290
need to start installing darker really

00:15:07,700 --> 00:15:12,800
just you have installed cubic you can

00:15:09,290 --> 00:15:14,420
start pool containers as I showed here

00:15:12,800 --> 00:15:17,870
you just pull the openSUSE leap

00:15:14,420 --> 00:15:20,450
container it gets the image you start

00:15:17,870 --> 00:15:22,190
you run a container with it and BOM

00:15:20,450 --> 00:15:23,270
that's it so it's very quick to install

00:15:22,190 --> 00:15:25,250
and you can run

00:15:23,270 --> 00:15:27,680
your containers out of the box quickly

00:15:25,250 --> 00:15:31,040
so it's this is what it is for renting

00:15:27,680 --> 00:15:34,940
containers so that works that was

00:15:31,040 --> 00:15:37,190
actually a very positive experience

00:15:34,940 --> 00:15:39,590
because it was very happy I just install

00:15:37,190 --> 00:15:41,840
it I ran a container that's so easy it

00:15:39,590 --> 00:15:43,550
doesn't take much time then next well

00:15:41,840 --> 00:15:47,150
the default installation I'm missing

00:15:43,550 --> 00:15:49,280
stuff my case I was missing tea mugs so

00:15:47,150 --> 00:15:51,550
I say okay let's install packages and

00:15:49,280 --> 00:15:55,340
this is where the fun begins

00:15:51,550 --> 00:15:57,380
so what I do I man up and Suzy user I've

00:15:55,340 --> 00:16:01,070
been using double wheat for a few years

00:15:57,380 --> 00:16:02,990
now I do zipper zipper search d-max yeah

00:16:01,070 --> 00:16:05,240
it's there of course it's in tumbleweed

00:16:02,990 --> 00:16:08,360
so it's available for cubic as well so I

00:16:05,240 --> 00:16:10,580
do zipper head team ox gets all the

00:16:08,360 --> 00:16:13,970
packages I'm happy works well then

00:16:10,580 --> 00:16:20,300
downloads everything and boom error like

00:16:13,970 --> 00:16:22,730
what what I can zipper anymore

00:16:20,300 --> 00:16:26,060
what's what's this and it says something

00:16:22,730 --> 00:16:29,630
to it yeah something about the NER p.m.

00:16:26,060 --> 00:16:35,810
lock I'm like woof it's this thing is

00:16:29,630 --> 00:16:38,750
not working yet well thing is cubic as a

00:16:35,810 --> 00:16:41,510
new architecture and and what makes it

00:16:38,750 --> 00:16:46,100
different from a regular thermal weed or

00:16:41,510 --> 00:16:50,320
open SUSE leap deployment is it's using

00:16:46,100 --> 00:16:53,930
a root read-only root filesystem and

00:16:50,320 --> 00:16:56,990
it's using transactional updates which

00:16:53,930 --> 00:16:59,270
are atomic and and and all of this I

00:16:56,990 --> 00:17:02,630
actually heard about all of this I I

00:16:59,270 --> 00:17:04,550
watched talked talks about this I was

00:17:02,630 --> 00:17:07,490
like yeah this is very very impressive

00:17:04,550 --> 00:17:09,350
it looks like the future but actually

00:17:07,490 --> 00:17:11,000
didn't realize what it meant and this is

00:17:09,350 --> 00:17:14,420
what it means you cannot use zipper

00:17:11,000 --> 00:17:16,910
anymore you cannot install a package so

00:17:14,420 --> 00:17:22,100
I went on the RC channel and I say okay

00:17:16,910 --> 00:17:23,940
sorry me again zipper doesn't work

00:17:22,100 --> 00:17:26,280
should I report a bug

00:17:23,940 --> 00:17:28,560
well recharge was very nice and they say

00:17:26,280 --> 00:17:30,390
yet well no because that's supposed to

00:17:28,560 --> 00:17:35,460
be like this it's supposed to be like

00:17:30,390 --> 00:17:37,260
this okay and I get some explanation so

00:17:35,460 --> 00:17:38,250
there is actually a new command that is

00:17:37,260 --> 00:17:40,380
meant to be used here

00:17:38,250 --> 00:17:43,070
it's transactional update package

00:17:40,380 --> 00:17:48,920
install and then the name of the package

00:17:43,070 --> 00:17:51,500
that will actually look very alike

00:17:48,920 --> 00:17:54,600
zipper you will see it's actually

00:17:51,500 --> 00:17:55,500
pulling the packages installing and

00:17:54,600 --> 00:17:57,390
everything and so on

00:17:55,500 --> 00:17:59,850
but it will explain that actually it's

00:17:57,390 --> 00:18:02,370
writing all of this into a new a new

00:17:59,850 --> 00:18:07,020
snapshot of your better FS file system

00:18:02,370 --> 00:18:09,710
and it's not actually installing it yet

00:18:07,020 --> 00:18:13,380
it's just in that new file it that new

00:18:09,710 --> 00:18:15,510
snapshot so it looks very it once you

00:18:13,380 --> 00:18:17,930
have understood understood this it's

00:18:15,510 --> 00:18:20,100
very easy you just replace zipper in by

00:18:17,930 --> 00:18:23,720
transactional update package in and

00:18:20,100 --> 00:18:26,730
that's it boom you can install packages

00:18:23,720 --> 00:18:28,530
well you install a package well then you

00:18:26,730 --> 00:18:34,110
want to use what you have installed the

00:18:28,530 --> 00:18:38,670
tart not found say it worked

00:18:34,110 --> 00:18:41,730
what's wrong well it's installed in a

00:18:38,670 --> 00:18:43,440
new snapshot which means it's not

00:18:41,730 --> 00:18:45,860
installed on the current system you're

00:18:43,440 --> 00:18:49,860
running it's not installed on your

00:18:45,860 --> 00:18:54,020
running snapshot so you have to reboot

00:18:49,860 --> 00:18:54,020
the system at this stage so you reboot

00:18:55,290 --> 00:18:59,429
you do the reboots and then you wait

00:18:57,179 --> 00:19:01,890
well in my case I installed on bare

00:18:59,429 --> 00:19:03,900
metal so I had to wait and actually in

00:19:01,890 --> 00:19:07,169
my case it was an HP server so I had to

00:19:03,900 --> 00:19:09,299
wait I don't know what these servers are

00:19:07,169 --> 00:19:11,669
doing at boot but man they have some

00:19:09,299 --> 00:19:13,380
mage magic tricks they do at boot to

00:19:11,669 --> 00:19:16,169
make sure everything's fine I mean

00:19:13,380 --> 00:19:19,350
that's but it takes forever I mean it's

00:19:16,169 --> 00:19:21,480
actually longer to boot that server than

00:19:19,350 --> 00:19:24,270
using a virtual machine a new virtual

00:19:21,480 --> 00:19:27,570
machine but yeah at least arm on bare

00:19:24,270 --> 00:19:30,600
metal I mean I'm not all right

00:19:27,570 --> 00:19:36,750
so I reboot and then yeah it's available

00:19:30,600 --> 00:19:38,700
I can use it well in that case QB ATM I

00:19:36,750 --> 00:19:40,710
can I can display the version I cannot

00:19:38,700 --> 00:19:45,679
start with strapping a competitor's

00:19:40,710 --> 00:19:48,120
cluster but soon then now you're very

00:19:45,679 --> 00:19:50,429
very happy with yourself you can install

00:19:48,120 --> 00:19:53,190
packages so what you do well install

00:19:50,429 --> 00:19:55,650
everything you need so you start

00:19:53,190 --> 00:19:58,350
transactional packaging yeah I've been

00:19:55,650 --> 00:19:59,790
to a very good talk about TLS and patchy

00:19:58,350 --> 00:20:01,380
to and everything so I want to do the

00:19:59,790 --> 00:20:04,710
same so I install apache2

00:20:01,380 --> 00:20:10,020
and then I install the I rotate the

00:20:04,710 --> 00:20:12,720
module' for apache' too and I put well

00:20:10,020 --> 00:20:22,380
wrong something's wrong here do you know

00:20:12,720 --> 00:20:25,169
what yeah yeah no the finger the error

00:20:22,380 --> 00:20:26,970
is here you think you have installed to

00:20:25,169 --> 00:20:28,590
package that you have installed to set

00:20:26,970 --> 00:20:32,360
of packages well actually you have

00:20:28,590 --> 00:20:34,770
installed on a first snapshot and then

00:20:32,360 --> 00:20:37,080
so you have created a new snapshot and

00:20:34,770 --> 00:20:39,570
you have installed di credit and the I

00:20:37,080 --> 00:20:45,299
wrote at the apogee too and then you

00:20:39,570 --> 00:20:48,390
have installed in a new snapshot Apache

00:20:45,299 --> 00:20:50,640
to two different snapshots and actually

00:20:48,390 --> 00:20:53,880
when you will reboot you will use that

00:20:50,640 --> 00:20:56,110
last snapshot and you will be missing

00:20:53,880 --> 00:21:00,519
dehydrated

00:20:56,110 --> 00:21:04,330
so well here I really recommend the talk

00:21:00,519 --> 00:21:07,450
from Ignacio on transactional updates

00:21:04,330 --> 00:21:09,190
the Dave deep dive everything's

00:21:07,450 --> 00:21:11,620
explained in more details here was

00:21:09,190 --> 00:21:17,289
really just about showing my experience

00:21:11,620 --> 00:21:19,480
with it and and and how you can fast

00:21:17,289 --> 00:21:27,549
forward your experience by learning all

00:21:19,480 --> 00:21:29,950
this things so you have to you can't

00:21:27,549 --> 00:21:32,110
just do as you really have to plan what

00:21:29,950 --> 00:21:33,970
you need and install everything at once

00:21:32,110 --> 00:21:37,269
or maybe there are other options like

00:21:33,970 --> 00:21:39,309
using a shell install stuff I mean there

00:21:37,269 --> 00:21:40,990
are definitely possible ways to optimize

00:21:39,309 --> 00:21:43,269
but you have to be careful here because

00:21:40,990 --> 00:21:47,470
you're using different snapshots you

00:21:43,269 --> 00:21:53,019
reboot you only use the last snapshot ok

00:21:47,470 --> 00:22:00,450
so that's about transactional update one

00:21:53,019 --> 00:22:04,139
thing you need to know about cubic as I

00:22:00,450 --> 00:22:07,630
wish I had taken a picture of Richard

00:22:04,139 --> 00:22:11,320
and Alex during the talk when when you

00:22:07,630 --> 00:22:13,929
asked this quote that says no system

00:22:11,320 --> 00:22:15,880
mean ever wanted to touch a system or

00:22:13,929 --> 00:22:18,580
something like this I really wish I had

00:22:15,880 --> 00:22:20,080
a picture to illustrate it because here

00:22:18,580 --> 00:22:23,139
you will have to learn about something

00:22:20,080 --> 00:22:28,620
called a reboot manager because updates

00:22:23,139 --> 00:22:31,840
on Kubik are installed automatically

00:22:28,620 --> 00:22:36,220
which means every time there is a new

00:22:31,840 --> 00:22:38,440
update it will prepare it will get all

00:22:36,220 --> 00:22:41,830
the updates install a new snapshot and

00:22:38,440 --> 00:22:47,190
it will tell the reboot manager that the

00:22:41,830 --> 00:22:49,809
system needs to be rebooted and then

00:22:47,190 --> 00:22:52,750
reboot manager is using a configuration

00:22:49,809 --> 00:22:56,950
file which here appointed the reboot

00:22:52,750 --> 00:22:59,740
manager conf and it actually sets a time

00:22:56,950 --> 00:23:01,690
a time window that during which the

00:22:59,740 --> 00:23:06,160
system will be rebooted when it's asked

00:23:01,690 --> 00:23:08,320
when a reboot has been asked so here

00:23:06,160 --> 00:23:12,280
on my system that's the default with

00:23:08,320 --> 00:23:15,310
cubic it's going to reboot at 3:30 UTC

00:23:12,280 --> 00:23:19,780
which is practically is 5:30 in the

00:23:15,310 --> 00:23:22,270
morning so you can check with the reboot

00:23:19,780 --> 00:23:25,630
manager CTL command what's the status if

00:23:22,270 --> 00:23:29,200
a reboot is going to happen soon and you

00:23:25,630 --> 00:23:31,300
can one very important file you need to

00:23:29,200 --> 00:23:33,460
look is the transactional update lock

00:23:31,300 --> 00:23:36,130
because it will tell you all the updates

00:23:33,460 --> 00:23:40,240
that has been that have been applied to

00:23:36,130 --> 00:23:42,580
your system without asking any constant

00:23:40,240 --> 00:23:51,820
of uuugh it just depends it just does it

00:23:42,580 --> 00:23:54,730
all the time and so topic is tumbleweed

00:23:51,820 --> 00:24:00,520
based which means updates are quite

00:23:54,730 --> 00:24:02,620
reckoned my mileage is that it's many

00:24:00,520 --> 00:24:05,220
times a week I don't know two three

00:24:02,620 --> 00:24:07,990
times a week there you will get updates

00:24:05,220 --> 00:24:11,560
which means you will get your system

00:24:07,990 --> 00:24:13,150
rebooted two three times a week I was

00:24:11,560 --> 00:24:15,250
actually very very disappointed because

00:24:13,150 --> 00:24:17,470
when I started to use cubic after a few

00:24:15,250 --> 00:24:19,740
days I looked at my uptime and I was

00:24:17,470 --> 00:24:22,570
like it was very small and I was like

00:24:19,740 --> 00:24:24,130
it's always broken no exactly

00:24:22,570 --> 00:24:26,590
it's just rebooting because it's it's

00:24:24,130 --> 00:24:28,180
always getting these new updates and

00:24:26,590 --> 00:24:32,590
automatically applied them to your

00:24:28,180 --> 00:24:34,510
system well then if you have started

00:24:32,590 --> 00:24:37,440
containers in some cases what you want

00:24:34,510 --> 00:24:40,210
is a container that's going to be a long

00:24:37,440 --> 00:24:43,780
life type of application I don't know

00:24:40,210 --> 00:24:46,090
some sort of web application some sort

00:24:43,780 --> 00:24:49,300
of demon anything you're going to start

00:24:46,090 --> 00:24:51,900
and every time you get documentation

00:24:49,300 --> 00:24:53,470
learn a lot on how to start a container

00:24:51,900 --> 00:24:55,290
with docker

00:24:53,470 --> 00:24:59,280
most of the time it doesn't use that

00:24:55,290 --> 00:25:02,500
option which is the restart always

00:24:59,280 --> 00:25:04,630
because well with cubic you really have

00:25:02,500 --> 00:25:06,100
to have your containers to restart

00:25:04,630 --> 00:25:09,280
automatically otherwise it will be

00:25:06,100 --> 00:25:13,440
always off because it's rebooting and

00:25:09,280 --> 00:25:13,440
you lose your containers

00:25:16,880 --> 00:25:30,170
so one recently we've started to have

00:25:25,770 --> 00:25:35,160
pot man available that's another way of

00:25:30,170 --> 00:25:39,450
running containers on cubic it replaces

00:25:35,160 --> 00:25:40,530
or it's an eternity to the client of the

00:25:39,450 --> 00:25:43,500
docker

00:25:40,530 --> 00:25:45,630
open source engine so you can just

00:25:43,500 --> 00:25:48,630
install it with the transactional update

00:25:45,630 --> 00:25:52,040
package in pod man you reboot your

00:25:48,630 --> 00:25:55,920
system and then you can start pulling

00:25:52,040 --> 00:25:59,880
images here from the docker image up and

00:25:55,920 --> 00:26:03,180
you can start running containers with

00:25:59,880 --> 00:26:04,890
but none works just also you just have

00:26:03,180 --> 00:26:05,550
to install it it's not out of the box

00:26:04,890 --> 00:26:09,000
like docker

00:26:05,550 --> 00:26:13,170
but it's very easy to start using it on

00:26:09,000 --> 00:26:17,340
cubic I put the link to a blog post that

00:26:13,170 --> 00:26:25,860
goes into details of how to use pot man

00:26:17,340 --> 00:26:32,610
on openSUSE ok since we don't have

00:26:25,860 --> 00:26:36,740
orchestration yet it's very very simple

00:26:32,610 --> 00:26:41,100
common line stuff I started to use a

00:26:36,740 --> 00:26:46,940
project which is called poor tenor poor

00:26:41,100 --> 00:26:49,950
tenor gives you a web interface to

00:26:46,940 --> 00:26:53,640
manage your container host to manage

00:26:49,950 --> 00:26:56,640
your containers I know some people don't

00:26:53,640 --> 00:26:59,520
like too much to is they think common

00:26:56,640 --> 00:27:01,350
line is the best and I agree sometimes

00:26:59,520 --> 00:27:03,300
common line is is much more powerful

00:27:01,350 --> 00:27:05,430
especially if you want to automate and

00:27:03,300 --> 00:27:07,230
but when you're learning when you're

00:27:05,430 --> 00:27:09,930
discovering a new technology the

00:27:07,230 --> 00:27:12,390
advantage of GUI is an especially poor

00:27:09,930 --> 00:27:13,890
tenor it really gives you a good

00:27:12,390 --> 00:27:17,910
information of everything you should

00:27:13,890 --> 00:27:20,390
consider in your system related to

00:27:17,910 --> 00:27:20,390
containers

00:27:21,970 --> 00:27:32,179
I lost the slide it's actually very easy

00:27:28,070 --> 00:27:33,950
to start because it's it's a container

00:27:32,179 --> 00:27:36,799
it comes as a container so you just have

00:27:33,950 --> 00:27:38,720
to start a container there is a one line

00:27:36,799 --> 00:27:41,539
to start the container energy system and

00:27:38,720 --> 00:27:43,940
then you just access it with your

00:27:41,539 --> 00:27:48,500
browser you just have some initial steps

00:27:43,940 --> 00:27:50,929
to create an admin user give it a

00:27:48,500 --> 00:27:55,070
password get started and then you have

00:27:50,929 --> 00:27:57,440
this web UI very classical where

00:27:55,070 --> 00:27:59,509
everything related to your containers

00:27:57,440 --> 00:28:01,519
can be managed and you can collect all

00:27:59,509 --> 00:28:05,419
the information so you get information

00:28:01,519 --> 00:28:07,309
about your containers which are running

00:28:05,419 --> 00:28:08,840
which which ones are stopped you can get

00:28:07,309 --> 00:28:11,509
information about which images are

00:28:08,840 --> 00:28:14,330
available on your system you can manage

00:28:11,509 --> 00:28:16,610
your volumes your network and docker has

00:28:14,330 --> 00:28:18,860
grown and containers run much much more

00:28:16,610 --> 00:28:21,049
complicated that you used to be and and

00:28:18,860 --> 00:28:24,200
that's a very good way of looking at

00:28:21,049 --> 00:28:31,210
what's your systems that is how things

00:28:24,200 --> 00:28:36,110
are currently running and especially in

00:28:31,210 --> 00:28:37,909
network related topics can become

00:28:36,110 --> 00:28:39,529
sometimes a little bit confusing where

00:28:37,909 --> 00:28:42,200
you're at and and that gives you a good

00:28:39,529 --> 00:28:45,220
view of what are your networks currently

00:28:42,200 --> 00:28:45,220
on your system

00:28:45,610 --> 00:28:49,240
ok it's a conclusion

00:28:49,809 --> 00:28:56,120
openSUSE cubic is fun honestly it is

00:28:53,899 --> 00:29:00,200
it's it's very pleasant to use if you

00:28:56,120 --> 00:29:02,419
want to run containers my case I didn't

00:29:00,200 --> 00:29:03,860
like well for some time I rent

00:29:02,419 --> 00:29:06,679
containers on my workstation

00:29:03,860 --> 00:29:10,190
and that was a bad idea I think it was a

00:29:06,679 --> 00:29:11,750
bad idea because well supposedly you

00:29:10,190 --> 00:29:14,059
have some isolation but then you start

00:29:11,750 --> 00:29:16,519
to use your better FS subvolumes you

00:29:14,059 --> 00:29:19,009
create images then they stay and it can

00:29:16,519 --> 00:29:22,490
really quickly create a mess and and

00:29:19,009 --> 00:29:23,929
that and that's I always I've always

00:29:22,490 --> 00:29:26,000
been that kind of person who likes to

00:29:23,929 --> 00:29:27,590
run I mean to have a workstation for

00:29:26,000 --> 00:29:30,529
working but it can be off it can be

00:29:27,590 --> 00:29:31,340
destroyed I doesn't need to be kept in a

00:29:30,529 --> 00:29:35,800
good

00:29:31,340 --> 00:29:39,050
condition and anything that needs to be

00:29:35,800 --> 00:29:40,820
any workload that needs to be run kind

00:29:39,050 --> 00:29:43,070
of production should be out of the work

00:29:40,820 --> 00:29:44,960
station or even testing should be on a

00:29:43,070 --> 00:29:48,380
different environment not testing on the

00:29:44,960 --> 00:29:49,850
workstation I don't like it too much you

00:29:48,380 --> 00:29:51,950
can actually use it on your workstation

00:29:49,850 --> 00:29:54,740
like if you want to have some virtual

00:29:51,950 --> 00:29:56,420
machine or anything like this but I like

00:29:54,740 --> 00:29:57,860
it to have outside and that's a very

00:29:56,420 --> 00:30:01,400
good environment to actually rent

00:29:57,860 --> 00:30:03,650
containers it's very quick you can learn

00:30:01,400 --> 00:30:04,730
how to use containers build containers

00:30:03,650 --> 00:30:07,490
everything you want to learn with

00:30:04,730 --> 00:30:10,820
containers you can do it on cubic and

00:30:07,490 --> 00:30:13,580
it's it's very stable actually it's it's

00:30:10,820 --> 00:30:16,370
it's a tumbleweed so it's stable as

00:30:13,580 --> 00:30:18,950
tumbleweed so quite solid it's tested in

00:30:16,370 --> 00:30:26,680
op and Q s so it gets a lot of testing

00:30:18,950 --> 00:30:29,270
and it supports all the platforms that

00:30:26,680 --> 00:30:31,880
tumbleweed is spawning as well it's a

00:30:29,270 --> 00:30:36,290
very wide set of systems you can run it

00:30:31,880 --> 00:30:39,290
on modern systems are quickly supported

00:30:36,290 --> 00:30:41,690
but you get also some rather old systems

00:30:39,290 --> 00:30:47,000
also supported in my case I really used

00:30:41,690 --> 00:30:48,860
very very old HP servers that basically

00:30:47,000 --> 00:30:51,200
we don't use it anymore because we can't

00:30:48,860 --> 00:30:53,420
we cannot use it for virtualization we

00:30:51,200 --> 00:31:00,680
cannot do much with it but it's great

00:30:53,420 --> 00:31:02,180
for running containers the the reality I

00:31:00,680 --> 00:31:04,790
mean I really discover what's the

00:31:02,180 --> 00:31:07,250
reality of admin free I mean that system

00:31:04,790 --> 00:31:10,660
also I never care about it

00:31:07,250 --> 00:31:17,060
it's just updated all the time always

00:31:10,660 --> 00:31:19,160
every time a new every time a new patch

00:31:17,060 --> 00:31:21,980
is available it's applied and that's

00:31:19,160 --> 00:31:26,090
that's there's some kind of magic there

00:31:21,980 --> 00:31:28,460
because you it's it's really you you

00:31:26,090 --> 00:31:29,870
really stopped caring about like petting

00:31:28,460 --> 00:31:31,610
that system you don't have to connect

00:31:29,870 --> 00:31:33,620
and say okay what are the updates okay

00:31:31,610 --> 00:31:35,840
I'm going to a plug that's just it some

00:31:33,620 --> 00:31:40,460
it's done it's always at the best level

00:31:35,840 --> 00:31:42,500
out of the box and I trust it to be very

00:31:40,460 --> 00:31:44,240
safe I'm very fortunate nothing wrong

00:31:42,500 --> 00:31:46,100
happened to me so I didn't have to

00:31:44,240 --> 00:31:47,570
roll back to a snapshot the last

00:31:46,100 --> 00:31:50,060
everything you learned that is great

00:31:47,570 --> 00:31:53,270
that you actually never did it you just

00:31:50,060 --> 00:31:56,000
wish you don't have to do it but I kind

00:31:53,270 --> 00:32:00,500
of trust that this is accents it's being

00:31:56,000 --> 00:32:02,210
used in Slee and and it's it's people

00:32:00,500 --> 00:32:05,780
that are serious who are talking about

00:32:02,210 --> 00:32:11,390
this I think I feel safe it's updated

00:32:05,780 --> 00:32:14,660
and I feel safe and I really save time I

00:32:11,390 --> 00:32:16,790
don't have to worry about it so and my

00:32:14,660 --> 00:32:19,550
conclusion and in that talk is is don't

00:32:16,790 --> 00:32:23,090
hesitate to try and use it you might

00:32:19,550 --> 00:32:25,100
heard it's not ready because you cannot

00:32:23,090 --> 00:32:27,290
build a communities cluster yet there

00:32:25,100 --> 00:32:29,420
it's still you don't have everything you

00:32:27,290 --> 00:32:31,190
need to quickly but you don't need that

00:32:29,420 --> 00:32:33,290
I mean many people they don't need that

00:32:31,190 --> 00:32:37,390
you just if you want to start using

00:32:33,290 --> 00:32:39,350
containers if you want to play with

00:32:37,390 --> 00:32:41,660
containerization you can just go ahead

00:32:39,350 --> 00:32:43,400
it's it's ready for that it's perfectly

00:32:41,660 --> 00:32:46,370
fine and if you want if you are actually

00:32:43,400 --> 00:32:48,020
interested for doing competitive stuff

00:32:46,370 --> 00:32:49,250
there are a lot of options there you

00:32:48,020 --> 00:32:52,040
have the packages you can start

00:32:49,250 --> 00:32:55,190
deploying you could try recipes from

00:32:52,040 --> 00:32:57,290
salt you can try even other solutions

00:32:55,190 --> 00:32:58,790
like trying to get cube ATM to work or

00:32:57,290 --> 00:33:01,460
even I don't know anything else crazy

00:32:58,790 --> 00:33:05,140
like using ansible or chef whatever you

00:33:01,460 --> 00:33:05,140
want so it's available for that

00:33:06,140 --> 00:33:29,430
thanks a lot any question yeah I have

00:33:27,030 --> 00:33:30,720
one question so when you have an reboot

00:33:29,430 --> 00:33:36,150
scheduled because you've got your

00:33:30,720 --> 00:33:38,400
package updated and then you do what is

00:33:36,150 --> 00:33:40,200
it called a transactional update package

00:33:38,400 --> 00:33:41,940
in something then you create a new

00:33:40,200 --> 00:33:43,950
snapshot and when you rube will reboot

00:33:41,940 --> 00:33:46,800
and you reboot in a snapshot where the

00:33:43,950 --> 00:33:49,620
updated packages are not in no the

00:33:46,800 --> 00:33:57,900
packages are in because if the repo

00:33:49,620 --> 00:34:00,390
oh yeah that's that's why I put remote

00:33:57,900 --> 00:34:01,380
manager status that means if a reboot is

00:34:00,390 --> 00:34:03,660
scheduled

00:34:01,380 --> 00:34:06,150
I would not install package I would

00:34:03,660 --> 00:34:11,180
where I would first reboot I mean the

00:34:06,150 --> 00:34:14,160
safe this indeed the safe option is to

00:34:11,180 --> 00:34:22,860
reboot your system before starting to

00:34:14,160 --> 00:34:24,480
install packages yeah and I'm pretty

00:34:22,860 --> 00:34:26,640
sure transactional update now gives a

00:34:24,480 --> 00:34:28,230
message when it's going to discard a

00:34:26,640 --> 00:34:30,060
snapshot because there's unapplied

00:34:28,230 --> 00:34:31,560
changes so you're at least aware what's

00:34:30,060 --> 00:34:44,370
going on when you're doing it

00:34:31,560 --> 00:34:46,890
interactively so then my question is can

00:34:44,370 --> 00:34:48,930
you actually with one command update

00:34:46,890 --> 00:34:52,620
apply all updates and install the

00:34:48,930 --> 00:34:54,210
package sorry again yeah because the

00:34:52,620 --> 00:34:56,400
updates would be lost and I want to

00:34:54,210 --> 00:34:58,470
install a package I don't I want to save

00:34:56,400 --> 00:35:02,040
to reboot because maybe I'm also on this

00:34:58,470 --> 00:35:04,550
old HP server so I want to have create a

00:35:02,040 --> 00:35:07,730
single snapshot with updates plus my

00:35:04,550 --> 00:35:14,300
additional package I want to install

00:35:07,730 --> 00:35:17,480
maybe Ignace knows not as one

00:35:14,300 --> 00:35:19,760
single simple command let's say you can

00:35:17,480 --> 00:35:24,790
still call conceptional update for

00:35:19,760 --> 00:35:24,790
example as a concession update up and

00:35:25,540 --> 00:35:30,980
extended with earnings and additional

00:35:27,890 --> 00:35:35,210
shell commands or transaction update up

00:35:30,980 --> 00:35:37,010
shell this will give you a shell it will

00:35:35,210 --> 00:35:40,490
first do the update itself and Flannan

00:35:37,010 --> 00:35:42,830
that shell you can append whatever you

00:35:40,490 --> 00:35:45,230
want to do in that snapshot because it

00:35:42,830 --> 00:35:47,510
will be it will just execute all the

00:35:45,230 --> 00:35:50,000
commands doing and that before closing

00:35:47,510 --> 00:35:52,730
the that snapshot and setting it to

00:35:50,000 --> 00:35:55,070
read-only and when you are just install

00:35:52,730 --> 00:35:58,369
some packages yeah those will also be

00:35:55,070 --> 00:36:01,020
included in the snapshot then yeah but

00:35:58,369 --> 00:36:02,230
it's not it's a heck hit server go home

00:36:01,020 --> 00:36:05,300
[Music]

00:36:02,230 --> 00:36:07,339
so maybe if valid feature request is to

00:36:05,300 --> 00:36:17,089
chain the sub commands to transaction or

00:36:07,339 --> 00:36:19,400
update that's not so simple because you

00:36:17,089 --> 00:36:22,310
still have to separate all those

00:36:19,400 --> 00:36:24,770
commands you have to know which snapshot

00:36:22,310 --> 00:36:28,000
was the last working good one because if

00:36:24,770 --> 00:36:31,790
something breaks we have to hold back

00:36:28,000 --> 00:36:34,280
Paul just said it it's self updating

00:36:31,790 --> 00:36:36,609
self feeling system which just works out

00:36:34,280 --> 00:36:40,670
of the box and we did hecht

00:36:36,609 --> 00:36:42,050
hours which may happen and we have to

00:36:40,670 --> 00:36:44,270
hold back if you combine multiple

00:36:42,050 --> 00:36:48,010
commands we don't know which was the

00:36:44,270 --> 00:36:48,010
last working snapshot

00:36:51,300 --> 00:36:55,960
you do the same when you call up Plus to

00:36:54,400 --> 00:37:00,040
shell command and then to do something

00:36:55,960 --> 00:37:02,110
so your atomic with both operations in

00:37:00,040 --> 00:37:04,450
one go just what I'm saying chain the

00:37:02,110 --> 00:37:10,000
sub commands to transactional update you

00:37:04,450 --> 00:37:13,300
know in the Bekaa on transactional

00:37:10,000 --> 00:37:16,210
update is just a wraparound super so

00:37:13,300 --> 00:37:24,330
you're just or you can also can't call

00:37:16,210 --> 00:37:24,330
it super update installer can you yeah

00:37:36,540 --> 00:37:47,020
so as any asset and as you mentioned

00:37:42,330 --> 00:37:50,040
cubic is kind of you let it run and it

00:37:47,020 --> 00:37:54,700
will update automatically automatically

00:37:50,040 --> 00:38:00,040
easy self-healing in the sense we push

00:37:54,700 --> 00:38:02,230
an update by mistake I don't know we are

00:38:00,040 --> 00:38:06,820
not able to mount some back system and

00:38:02,230 --> 00:38:08,500
we need to roll back quickly since there

00:38:06,820 --> 00:38:10,720
is a reboot manager it will be

00:38:08,500 --> 00:38:13,440
automatically reboot it and then system

00:38:10,720 --> 00:38:17,170
is not able to properly boot completely

00:38:13,440 --> 00:38:21,180
it's cubic able to kind of self heal and

00:38:17,170 --> 00:38:24,430
detect I am NOT able to fully reboot

00:38:21,180 --> 00:38:26,740
running and then reboot automatically to

00:38:24,430 --> 00:38:28,540
the previous snapshot or is it something

00:38:26,740 --> 00:38:30,670
which could happen in the future well

00:38:28,540 --> 00:38:36,250
not to my knowledge but I think recharge

00:38:30,670 --> 00:38:37,869
should answer that yeah kind of so for

00:38:36,250 --> 00:38:39,760
those situations where it's like

00:38:37,869 --> 00:38:42,070
partially booted so the operating system

00:38:39,760 --> 00:38:44,320
is fine but some of your services

00:38:42,070 --> 00:38:45,760
haven't booted there is a service called

00:38:44,320 --> 00:38:48,910
health check which is installed by

00:38:45,760 --> 00:38:51,609
default and looking for the kind of

00:38:48,910 --> 00:38:53,230
standards darker kubernetes services to

00:38:51,609 --> 00:38:58,099
make sure they're fine so if they don't

00:38:53,230 --> 00:39:00,109
start up right yes health check is is

00:38:58,099 --> 00:39:03,710
plug-in aware so you could make your own

00:39:00,109 --> 00:39:06,589
plugins to check other specific stuff so

00:39:03,710 --> 00:39:14,690
if the machine company is a tool yeah

00:39:06,589 --> 00:39:15,980
but at least then of course we have okay

00:39:14,690 --> 00:39:18,200
if it doesn't help at all

00:39:15,980 --> 00:39:20,569
ignite ISM for I did a new check so crop

00:39:18,200 --> 00:39:24,140
wolf accept so yeah so in most cases

00:39:20,569 --> 00:39:38,119
it's self-healing awesome I didn't know

00:39:24,140 --> 00:39:40,339
about that anymore questions yesterday

00:39:38,119 --> 00:39:42,200
in the opposition conference there was a

00:39:40,339 --> 00:39:45,230
works of about building containers using

00:39:42,200 --> 00:39:48,260
build service have you may be tried or

00:39:45,230 --> 00:39:53,329
do you have an idea if the same tool is

00:39:48,260 --> 00:39:55,299
available also in cubic or not for

00:39:53,329 --> 00:39:58,069
running the containers or building for

00:39:55,299 --> 00:40:00,559
building them and pushing them to build

00:39:58,069 --> 00:40:03,740
service like doing everything inside

00:40:00,559 --> 00:40:09,680
cubic not having tableau IDO I would not

00:40:03,740 --> 00:40:11,540
use cubic to build containers i I don't

00:40:09,680 --> 00:40:14,059
say it's the wrong or right but I

00:40:11,540 --> 00:40:15,940
wouldn't I I what I tried is to run

00:40:14,059 --> 00:40:19,730
containers from the build service

00:40:15,940 --> 00:40:21,500
because it's basically a registry and

00:40:19,730 --> 00:40:23,690
you just have to point to that registry

00:40:21,500 --> 00:40:27,349
when you're pulling the image instead of

00:40:23,690 --> 00:40:29,030
using the docker hub since in snuggle

00:40:27,349 --> 00:40:33,420
with if it works on tumbleweed it should

00:40:29,030 --> 00:40:36,690
also work on on cubic but

00:40:33,420 --> 00:40:38,460
yeah I wouldn't build containers maybe

00:40:36,690 --> 00:40:40,470
as part of a CI it makes sense but I'm

00:40:38,460 --> 00:40:46,640
not sure I don't know we Charlie what do

00:40:40,470 --> 00:40:49,830
you think yeah

00:40:46,640 --> 00:40:54,350
but the answer to your question is no I

00:40:49,830 --> 00:40:54,350
have not this debt okay thank you okay

00:40:59,210 --> 00:41:02,720
well thanks a lot

00:41:02,890 --> 00:41:04,950
you

00:41:09,450 --> 00:41:11,510

YouTube URL: https://www.youtube.com/watch?v=zAqNY4rK1y0


