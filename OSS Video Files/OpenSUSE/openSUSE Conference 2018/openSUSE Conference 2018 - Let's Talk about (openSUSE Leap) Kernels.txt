Title: openSUSE Conference 2018 - Let's Talk about (openSUSE Leap) Kernels
Publication date: 2018-05-26
Playlist: openSUSE Conference 2018
Description: 
	https://media.ccc.de/v/1954-let-s-talk-about-opensuse-leap-kernels



With openSUSE Leap, we've tried a new management model based on SLE.  The same is true for the kernel, one of the most "core" packages in the whole distribution.  However, in the case of kernels, a story is a bit different from others.

In this talk, we'll take a look back at the history of openSUSE Leap kernel developments and maintenance from Leap 42.1 to 42.3, covering briefly about the concept of openSUSE Leap kernels, how they are packaged, and how they are maintained.  This will show us a light and a shadow in the paths we've gone through, as well as the open question to a future development of Leap 15 series.


With openSUSE Leap, we've tried a new management model based on SLE.  The same is true for the kernel, one of the most "core" packages in the whole distribution.  However, in the case of kernels, a story is a bit different from others.

In this talk, we'll take a look back at the history of openSUSE Leap kernel developments and maintenance from Leap 42.1 to 42.3, covering briefly about the concept of openSUSE Leap kernels, how they are packaged, and how they are maintained.  This will show us a light and a shadow in the paths we've gone through, as well as the open question to a future development of Leap 15 series.


Takashi Iwai
Captions: 
	00:00:05,660 --> 00:00:15,170
so hi um usually I'm doing the stuff to

00:00:11,510 --> 00:00:18,539
make a sound working while braking but I

00:00:15,170 --> 00:00:24,780
casually also may have been maintaining

00:00:18,539 --> 00:00:28,020
their openSUSE kernel from the 42 to 43

00:00:24,780 --> 00:00:31,530
maybe I must have yeah smoked something

00:00:28,020 --> 00:00:34,110
bad to take that role in anyway that's

00:00:31,530 --> 00:00:38,399
why I so this time I would like to show

00:00:34,110 --> 00:00:42,899
some something about kernel but this is

00:00:38,399 --> 00:00:47,460
not so technical changes but rather I'm

00:00:42,899 --> 00:00:54,059
presenting the processing so it's yeah

00:00:47,460 --> 00:00:56,399
just adapt and listen to what I said so

00:00:54,059 --> 00:00:59,550
this is after 9 um I will show some

00:00:56,399 --> 00:01:03,210
basic development process of the Linux

00:00:59,550 --> 00:01:08,390
kernel and also what we have built for

00:01:03,210 --> 00:01:08,390
now until now for the openSUSE leap for

00:01:08,570 --> 00:01:17,700
2000 the current one that openSUSE db-15

00:01:13,950 --> 00:01:21,810
0 and what jump in the future so that we

00:01:17,700 --> 00:01:25,920
discussed in later the first thing is

00:01:21,810 --> 00:01:29,039
how we develop the kernel and this

00:01:25,920 --> 00:01:33,420
particularly beyond also describing

00:01:29,039 --> 00:01:34,350
about upstream and downstream and Linux

00:01:33,420 --> 00:01:37,229
kernel version

00:01:34,350 --> 00:01:41,460
um I think you all people running the

00:01:37,229 --> 00:01:45,270
Linux desktop and you know which channel

00:01:41,460 --> 00:01:48,810
you were running on your desktop new

00:01:45,270 --> 00:01:51,420
Terry it's just - you name - our command

00:01:48,810 --> 00:01:57,210
it shows their collaboration like this

00:01:51,420 --> 00:02:01,679
for that for 120 - 45 - default and what

00:01:57,210 --> 00:02:04,439
this thing means well this first photo

00:02:01,679 --> 00:02:07,649
for that 4 is in expanded version and

00:02:04,439 --> 00:02:11,160
followed 420th stable kernel and this

00:02:07,649 --> 00:02:15,390
parts to upstream and the rest are what

00:02:11,160 --> 00:02:16,550
we do so example their package release

00:02:15,390 --> 00:02:20,360
number

00:02:16,550 --> 00:02:26,810
the kind of Labor so what is each of

00:02:20,360 --> 00:02:29,000
them means that's where wealthy the

00:02:26,810 --> 00:02:32,750
upstream development is something like

00:02:29,000 --> 00:02:35,630
that so many people so these are a

00:02:32,750 --> 00:02:39,470
thousand people contribute the color

00:02:35,630 --> 00:02:41,840
patches and they're evaluated refuge and

00:02:39,470 --> 00:02:43,970
merged in its sub system was sub sub

00:02:41,840 --> 00:02:47,240
sistema trees and they're eventually

00:02:43,970 --> 00:02:50,480
going up to the one city one unique tree

00:02:47,240 --> 00:02:54,140
that is a dentistry that is managed by

00:02:50,480 --> 00:02:57,380
the installs himself and strictly

00:02:54,140 --> 00:03:02,360
speaking this is the only pure upstream

00:02:57,380 --> 00:03:05,150
tree and sometimes we often see that

00:03:02,360 --> 00:03:07,790
other trees like a subsistence observe

00:03:05,150 --> 00:03:10,690
sistema trees as also upstream but

00:03:07,790 --> 00:03:14,510
strictly speaking this is upstream

00:03:10,690 --> 00:03:18,020
Dennis release a new Linux kernel

00:03:14,510 --> 00:03:22,070
version but for each at this time for

00:03:18,020 --> 00:03:26,990
nine to ten weeks period that is about

00:03:22,070 --> 00:03:29,900
two and a half masses and basically bug

00:03:26,990 --> 00:03:34,010
fixes are applied only on top of their

00:03:29,900 --> 00:03:37,030
current development that means if you

00:03:34,010 --> 00:03:39,170
get above in the previous release and

00:03:37,030 --> 00:03:46,190
you need to wait for two and a half

00:03:39,170 --> 00:03:51,080
masses it's a long time for that so

00:03:46,190 --> 00:03:53,690
great KH stand up and or other people so

00:03:51,080 --> 00:03:57,350
they try to back porch their fixes and

00:03:53,690 --> 00:04:00,740
apply to the old trees so specifically

00:03:57,350 --> 00:04:04,670
the regular stable tree is only for the

00:04:00,740 --> 00:04:08,030
previous release color for example on

00:04:04,670 --> 00:04:11,090
currently dentistry is developing for

00:04:08,030 --> 00:04:13,100
seventeen kernel and that means that we

00:04:11,090 --> 00:04:16,700
have we received the stable kernel

00:04:13,100 --> 00:04:19,609
updates only for 4.16 and once after

00:04:16,700 --> 00:04:22,100
false photo seventeen is released then

00:04:19,609 --> 00:04:26,180
its state would really also switch to

00:04:22,100 --> 00:04:28,559
the photos 17 then the linden tree is

00:04:26,180 --> 00:04:31,879
going up to the for eighteen development

00:04:28,559 --> 00:04:34,769
so that's means the regular stable three

00:04:31,879 --> 00:04:37,739
lifetime is also about two-and-a-half or

00:04:34,769 --> 00:04:42,839
three masses including a some transition

00:04:37,739 --> 00:04:44,219
week but for many people this short time

00:04:42,839 --> 00:04:46,939
knife Cyclops

00:04:44,219 --> 00:04:50,609
Table three is also not enough and

00:04:46,939 --> 00:04:55,739
that's why there are some also long term

00:04:50,609 --> 00:04:59,249
stay with we LTS the example that I

00:04:55,739 --> 00:05:02,039
showed 4.4.1 hundred twenty this is a

00:04:59,249 --> 00:05:05,459
one of the LDS Colonel so for that for

00:05:02,039 --> 00:05:08,309
is LTS colonel that means a-- this is a

00:05:05,459 --> 00:05:13,529
hundred twenty s release of their fault

00:05:08,309 --> 00:05:17,069
for stable so for that is about upstream

00:05:13,529 --> 00:05:21,239
now is a a downstream so that is us

00:05:17,069 --> 00:05:24,449
openSUSE verses it as a downstream which

00:05:21,239 --> 00:05:26,879
does take the upstream the industry

00:05:24,449 --> 00:05:28,969
established we and packaged and put in

00:05:26,879 --> 00:05:33,509
the distribution to be used by users

00:05:28,969 --> 00:05:37,199
that's our purpose and we provide

00:05:33,509 --> 00:05:40,379
different kernel flavors in this case

00:05:37,199 --> 00:05:45,839
kernel flavors means just configuration

00:05:40,379 --> 00:05:48,149
sets so kernel default this is what most

00:05:45,839 --> 00:05:50,939
of you just see on your desktop laptop

00:05:48,149 --> 00:05:54,479
whatever it's a default configuration

00:05:50,939 --> 00:05:56,669
for users but if you want some debugging

00:05:54,479 --> 00:05:59,719
for the current problem you can use

00:05:56,669 --> 00:06:02,759
colonel debug favor package that's

00:05:59,719 --> 00:06:05,249
enabled many kernel configuration for

00:06:02,759 --> 00:06:08,039
the debugging stuff also there are

00:06:05,249 --> 00:06:12,059
different connect flavor for there are

00:06:08,039 --> 00:06:16,499
reimbursable machines and reduce connect

00:06:12,059 --> 00:06:19,409
of it sets and so on also there is a

00:06:16,499 --> 00:06:21,500
slight difference between open Susie and

00:06:19,409 --> 00:06:22,639
SUSE Linux Enterprise kernels

00:06:21,500 --> 00:06:26,849
[Music]

00:06:22,639 --> 00:06:30,229
particularly as the kernel has a reduced

00:06:26,849 --> 00:06:32,039
set of kernel configurations so that as

00:06:30,229 --> 00:06:34,619
Enterprise distribution

00:06:32,039 --> 00:06:36,770
wants to concentrate only on a limited

00:06:34,619 --> 00:06:40,000
set of devices

00:06:36,770 --> 00:06:43,250
and about instead of the features

00:06:40,000 --> 00:06:46,550
meanwhile openSUSE provides almost full

00:06:43,250 --> 00:06:50,300
teachers and drivers provided by their

00:06:46,550 --> 00:06:53,810
upstream coils and also the arm este

00:06:50,300 --> 00:06:58,190
canal provides dye patching K by K

00:06:53,810 --> 00:07:01,509
graphed Y are open supervisor

00:06:58,190 --> 00:07:04,400
they're rolling with is following their

00:07:01,509 --> 00:07:07,330
latest stable three by temple which so

00:07:04,400 --> 00:07:11,389
there are small differences between them

00:07:07,330 --> 00:07:15,349
so the our collet package policy is a

00:07:11,389 --> 00:07:18,620
very classic just putting little stubble

00:07:15,349 --> 00:07:21,500
and applying their whole bunch of

00:07:18,620 --> 00:07:25,909
patches on top of that and this is

00:07:21,500 --> 00:07:30,889
managed by arm kind of cute style sitcom

00:07:25,909 --> 00:07:33,650
and also patched up as possible so this

00:07:30,889 --> 00:07:36,800
is on the Canon sauce package is

00:07:33,650 --> 00:07:50,900
something like that oh is that too small

00:07:36,800 --> 00:07:56,599
okay yeah so you can see that series and

00:07:50,900 --> 00:07:58,759
here is a series Kampf it's just it up

00:07:56,599 --> 00:08:01,070
the whole bunch of patches to be applied

00:07:58,759 --> 00:08:06,190
so it defines order which patches

00:08:01,070 --> 00:08:06,190
applied first and second so on and there

00:08:21,699 --> 00:08:30,800
so that is a including the patch just in

00:08:28,639 --> 00:08:33,020
because we have many patches they are

00:08:30,800 --> 00:08:36,610
packed in the top instead of putting the

00:08:33,020 --> 00:08:40,190
single patch innocent and rpm sauce hold

00:08:36,610 --> 00:08:42,560
so this is a way how we manage

00:08:40,190 --> 00:08:46,639
and one thing I would like to emphasize

00:08:42,560 --> 00:08:49,819
and case of that kind of maintenance is

00:08:46,639 --> 00:08:54,740
we have a golden dutiful patches the UPS

00:08:49,819 --> 00:08:58,310
film first so then what this means that

00:08:54,740 --> 00:09:02,959
we want each patch in the included in

00:08:58,310 --> 00:09:05,240
Nakano package to be reviewed a twist

00:09:02,959 --> 00:09:08,779
reboot or from taken from the up

00:09:05,240 --> 00:09:11,569
symmetry and sometimes we have that

00:09:08,779 --> 00:09:14,300
report that the please put this

00:09:11,569 --> 00:09:18,019
downstream somewhat patch into our to

00:09:14,300 --> 00:09:21,740
the color package but most cases the

00:09:18,019 --> 00:09:26,769
answer is sorry no you cannot do that

00:09:21,740 --> 00:09:30,139
way so the correct procedure for that is

00:09:26,769 --> 00:09:32,569
submit that patch to the upstream to be

00:09:30,139 --> 00:09:35,209
rebuked and eventually to be merged in

00:09:32,569 --> 00:09:39,319
the upstream tree then we can back port

00:09:35,209 --> 00:09:43,160
the patch from upstream to our color so

00:09:39,319 --> 00:09:47,170
without that we had in past we had many

00:09:43,160 --> 00:09:50,079
quality problems so this is for

00:09:47,170 --> 00:09:55,850
improving the quality and also in

00:09:50,079 --> 00:09:58,220
reducing our maintenance load as a recap

00:09:55,850 --> 00:10:00,769
the color development in absum side

00:09:58,220 --> 00:10:03,649
there are three different trees ministry

00:10:00,769 --> 00:10:05,959
stable tree and stable LTS in downstream

00:10:03,649 --> 00:10:09,470
in our side we package there from the

00:10:05,959 --> 00:10:11,720
upstream and just making a dentistry and

00:10:09,470 --> 00:10:14,420
back port catches and we have the

00:10:11,720 --> 00:10:17,480
upstream for us to do so so far this is

00:10:14,420 --> 00:10:22,939
a process and what we have achieved by

00:10:17,480 --> 00:10:28,339
until now by this so let's start from

00:10:22,939 --> 00:10:34,040
the opposite ear 40.1 it's a trilogy you

00:10:28,339 --> 00:10:40,759
know kind of dirt so starting from opens

00:10:34,040 --> 00:10:44,870
easily ported to one weight just we need

00:10:40,759 --> 00:10:47,360
take a look at our history even also

00:10:44,870 --> 00:10:50,630
they're often the episode one two three

00:10:47,360 --> 00:10:53,779
not so good but it's it doesn't matter

00:10:50,630 --> 00:10:58,249
so we had and before the often sleep

00:10:53,779 --> 00:11:01,279
openSUSE 30.1 30.1 evergreen and open

00:10:58,249 --> 00:11:04,850
society - and they are based on three

00:11:01,279 --> 00:11:09,529
different color versions so so that from

00:11:04,850 --> 00:11:13,339
Sweden to Sweden 16 now after that we

00:11:09,529 --> 00:11:20,209
had a great idea of insensitive that

00:11:13,339 --> 00:11:23,230
grant done and this is for getting them

00:11:20,209 --> 00:11:26,600
better sustainable supported

00:11:23,230 --> 00:11:29,870
distribution and that means to share

00:11:26,600 --> 00:11:34,100
that package with Suzy links enterprise

00:11:29,870 --> 00:11:37,870
and the corner is a of course is a core

00:11:34,100 --> 00:11:43,360
of the core package yes we should

00:11:37,870 --> 00:11:48,110
however now as a time of a step

00:11:43,360 --> 00:11:49,699
oppositely 40.1 there was a so

00:11:48,110 --> 00:11:54,139
corresponding Suzy Linux Enterprise

00:11:49,699 --> 00:11:56,959
version was Susan's enterprise 12 sp1

00:11:54,139 --> 00:12:01,399
and that was based on the suite of 12

00:11:56,959 --> 00:12:07,250
color still and virtue before that was

00:12:01,399 --> 00:12:14,660
visited 16 so we had with how to go back

00:12:07,250 --> 00:12:14,899
to the past and more badly suite or 12 I

00:12:14,660 --> 00:12:18,680
know

00:12:14,899 --> 00:12:21,019
mists many news support for the new

00:12:18,680 --> 00:12:24,019
hardware especially for the Intel

00:12:21,019 --> 00:12:26,300
skylake the support of the Skydeck was

00:12:24,019 --> 00:12:27,610
completely missing in suite of 12 that

00:12:26,300 --> 00:12:31,100
was the biggest problem

00:12:27,610 --> 00:12:31,670
so then we decided to take a different

00:12:31,100 --> 00:12:37,129
approach

00:12:31,670 --> 00:12:41,059
so take on Natalie so it's available for

00:12:37,129 --> 00:12:44,779
that one LTS Colonel so that's for the

00:12:41,059 --> 00:12:46,699
opposite if 40.2 on colonel so from this

00:12:44,779 --> 00:12:49,569
person from this distribution

00:12:46,699 --> 00:12:53,740
I started maintenance of the chrono and

00:12:49,569 --> 00:12:57,679
this is a own branch not shared with

00:12:53,740 --> 00:13:01,100
Suzy links enterprise and for that one

00:12:57,679 --> 00:13:05,240
80s and this are maintained for 80

00:13:01,100 --> 00:13:06,840
masses and patch total number patches

00:13:05,240 --> 00:13:14,260
about

00:13:06,840 --> 00:13:18,210
hmm well no baths no and what happened

00:13:14,260 --> 00:13:21,580
it opens easily what it among canals so

00:13:18,210 --> 00:13:23,940
because it is maintained individually

00:13:21,580 --> 00:13:27,880
from open SUSE SUSE Linux Enterprise

00:13:23,940 --> 00:13:31,180
this is another overhead you have to up

00:13:27,880 --> 00:13:34,360
die the difference fix if for example

00:13:31,180 --> 00:13:36,850
there a security issue comes up so at

00:13:34,360 --> 00:13:40,150
this time there was one another new

00:13:36,850 --> 00:13:45,640
branch to be fixed so this is obviously

00:13:40,150 --> 00:13:48,750
an overhead and also we took for that

00:13:45,640 --> 00:13:51,730
one kernel because of inter skylake

00:13:48,750 --> 00:13:55,570
however in this collect didn't work well

00:13:51,730 --> 00:13:58,720
with this that color and there was many

00:13:55,570 --> 00:14:02,590
clashes with this color even though we

00:13:58,720 --> 00:14:08,110
purport it's many pets after that this

00:14:02,590 --> 00:14:11,040
unfortunate a story but it's life for

00:14:08,110 --> 00:14:14,710
that one kernel was also maybe strange

00:14:11,040 --> 00:14:16,840
80s kernel and I think it's because the

00:14:14,710 --> 00:14:20,200
Greg didn't take that much

00:14:16,840 --> 00:14:22,810
Sasha living got maintenance for of

00:14:20,200 --> 00:14:27,430
photos one color so that received only

00:14:22,810 --> 00:14:29,910
32 9 are updates for 18 masses so that

00:14:27,430 --> 00:14:34,690
means two updates per month that's

00:14:29,910 --> 00:14:40,560
really a few updates so that was a forty

00:14:34,690 --> 00:14:45,370
to one now 40.2 hey that's better

00:14:40,560 --> 00:14:49,990
and this version we finally based on a

00:14:45,370 --> 00:14:55,090
sled 12 sp2 Colonel this is not exactly

00:14:49,990 --> 00:14:57,760
same but is the source called exactly

00:14:55,090 --> 00:15:01,450
same between red carnal and openSUSE

00:14:57,760 --> 00:15:04,690
deep colors but opposite kernel as I

00:15:01,450 --> 00:15:05,470
mentioned earlier has different color

00:15:04,690 --> 00:15:08,650
consolation

00:15:05,470 --> 00:15:10,540
enables more and more driver stands as

00:15:08,650 --> 00:15:12,910
the kernel so the kernel configuration

00:15:10,540 --> 00:15:16,030
is only difference between as they

00:15:12,910 --> 00:15:22,450
connect and deep kernel on that version

00:15:16,030 --> 00:15:25,420
and then 40.2 deep is taking 4.4 80s

00:15:22,450 --> 00:15:30,130
kernel and that has been has been

00:15:25,420 --> 00:15:33,460
maintained for 50 masses and the number

00:15:30,130 --> 00:15:34,830
patches in the last with this was about

00:15:33,460 --> 00:15:41,170
8,000

00:15:34,830 --> 00:15:45,000
yeah that's many numbers M so

00:15:41,170 --> 00:15:47,860
observation of their 42 to the

00:15:45,000 --> 00:15:51,580
maintenance cost of the deep kernel

00:15:47,860 --> 00:15:56,920
itself was very very easy cheap because

00:15:51,580 --> 00:16:00,580
it's yeah it's free everything comes

00:15:56,920 --> 00:16:02,350
from that enterprise actually but for me

00:16:00,580 --> 00:16:05,500
it does matter because I maintain also a

00:16:02,350 --> 00:16:08,200
say this is a linux enterprise but from

00:16:05,500 --> 00:16:12,520
the opposite perspective it's very easy

00:16:08,200 --> 00:16:15,520
and oppositely because of the opens is a

00:16:12,520 --> 00:16:19,960
deep based on the silicon oh and as the

00:16:15,520 --> 00:16:22,870
color had the very active development so

00:16:19,960 --> 00:16:26,560
in the end lip color has received many

00:16:22,870 --> 00:16:29,290
many passes and the good news is that

00:16:26,560 --> 00:16:32,110
sky tech support was finally stopped

00:16:29,290 --> 00:16:37,960
double i'ts on this opposite a deposit

00:16:32,110 --> 00:16:43,560
of - so after all that version was very

00:16:37,960 --> 00:16:48,610
good I would say that's not bad at all

00:16:43,560 --> 00:16:53,950
so the under mystery goes on then we get

00:16:48,610 --> 00:16:58,750
a boost to the reported or three okay

00:16:53,950 --> 00:17:04,180
this version also again is based on Suzy

00:16:58,750 --> 00:17:08,439
Linux Enterprise 12 sp3 and again this

00:17:04,180 --> 00:17:11,650
time the very same code as a stay kernel

00:17:08,439 --> 00:17:19,839
but different color configurations yeah

00:17:11,650 --> 00:17:22,990
and sp3 keeps 24.4 80s color also this

00:17:19,839 --> 00:17:26,290
release is well how many masses

00:17:22,990 --> 00:17:27,560
debtors and 4 SP - well one years

00:17:26,290 --> 00:17:34,140
[Music]

00:17:27,560 --> 00:17:37,410
so that means this david old and at a

00:17:34,140 --> 00:17:41,130
time is there are the new in always new

00:17:37,410 --> 00:17:44,850
and new you know the hardware released

00:17:41,130 --> 00:17:47,730
and specifically with a graphic side we

00:17:44,850 --> 00:17:51,300
have received kb lake integra fix and

00:17:47,730 --> 00:17:54,270
mhz cpu and if we back port all these

00:17:51,300 --> 00:17:57,060
things to the fallout 4 kernel you would

00:17:54,270 --> 00:18:02,520
have to more than five thousand patches

00:17:57,060 --> 00:18:07,880
on top of that so we say oh that's too

00:18:02,520 --> 00:18:13,740
much and so decided the another strategy

00:18:07,880 --> 00:18:17,370
namely we take DN campy and campy means

00:18:13,740 --> 00:18:20,010
under module package and that allows so

00:18:17,370 --> 00:18:24,630
this is a campy is a one single RPM

00:18:20,010 --> 00:18:28,950
package and that allows you to overload

00:18:24,630 --> 00:18:32,670
their car upgrade color models on top of

00:18:28,950 --> 00:18:39,120
the existing color and the merit of the

00:18:32,670 --> 00:18:42,870
TM campy is that that's that provides a

00:18:39,120 --> 00:18:46,500
whole updates of them for graphics stack

00:18:42,870 --> 00:18:47,310
and if you uninstall did this theorem

00:18:46,500 --> 00:18:50,430
can be

00:18:47,310 --> 00:18:53,880
it's sad wrinkles back whole things so

00:18:50,430 --> 00:18:55,890
this is a safe kind of safety if

00:18:53,880 --> 00:18:59,430
something gets broken then you can

00:18:55,890 --> 00:19:01,860
uninstall ten people then you go back to

00:18:59,430 --> 00:19:05,150
the original kernel stage so that was

00:19:01,860 --> 00:19:09,150
another reason we took that approach and

00:19:05,150 --> 00:19:13,890
that openSUSE leap for Tadashi is still

00:19:09,150 --> 00:19:24,930
maintained and the number patches right

00:19:13,890 --> 00:19:29,040
now guess watch 24,000 patches for

00:19:24,930 --> 00:19:32,370
single package and you know that we

00:19:29,040 --> 00:19:38,700
apply 21,000 passive patches at each

00:19:32,370 --> 00:19:39,570
time you build a RPM package that's very

00:19:38,700 --> 00:19:43,200
pretty

00:19:39,570 --> 00:19:47,670
and it's not only by patches as also the

00:19:43,200 --> 00:19:50,670
coach changes are enormous as you can

00:19:47,670 --> 00:19:53,190
see this is a deep touch so open in open

00:19:50,670 --> 00:19:58,020
city 40 those three cannons because of

00:19:53,190 --> 00:20:03,480
many battles we get about 2 millions of

00:19:58,020 --> 00:20:07,680
dimes additional removal yeah so the

00:20:03,480 --> 00:20:10,410
observation of deep 40 dose we can L so

00:20:07,680 --> 00:20:14,040
again maintenance cost is very very

00:20:10,410 --> 00:20:19,620
cheap it's we just go in there as a

00:20:14,040 --> 00:20:23,960
kernel and the kernel itself is very

00:20:19,620 --> 00:20:23,960
heavily patched for that for kernel

00:20:24,170 --> 00:20:31,170
unfortunately sp3 kernel because of

00:20:27,060 --> 00:20:37,650
their for that for Connor for more than

00:20:31,170 --> 00:20:42,240
two years back it slightly outdated so

00:20:37,650 --> 00:20:45,480
in some parts that are still old and the

00:20:42,240 --> 00:20:48,030
own support kind of new hardware's for

00:20:45,480 --> 00:20:52,080
example some wireless chips like a Telos

00:20:48,030 --> 00:20:56,490
10k driver that's not well supported and

00:20:52,080 --> 00:21:00,150
so on for the graphics side we provided

00:20:56,490 --> 00:21:03,500
the update by campy and this worked

00:21:00,150 --> 00:21:06,330
pretty well for a comedic and sky deck

00:21:03,500 --> 00:21:11,960
however for the oh that ship dance

00:21:06,330 --> 00:21:16,140
critic that was a horrible result the

00:21:11,960 --> 00:21:23,190
unfortunately 4.9 kernel from the intel

00:21:16,140 --> 00:21:24,630
driver was Scott's regressions and it we

00:21:23,190 --> 00:21:31,980
couldn't recover from that

00:21:24,630 --> 00:21:37,290
so in the end for the users with old

00:21:31,980 --> 00:21:40,890
laptops then its advice to install the

00:21:37,290 --> 00:21:43,180
MMP this also there is a conflict of the

00:21:40,890 --> 00:21:48,790
MP with Nvidia or

00:21:43,180 --> 00:21:51,390
the CPU external package so DRM campi is

00:21:48,790 --> 00:21:54,880
one good solution but it's far from

00:21:51,390 --> 00:21:56,340
powerful from perfect that is a

00:21:54,880 --> 00:21:59,890
consequence

00:21:56,340 --> 00:22:04,110
so there are recap the deep 40 dot shoe

00:21:59,890 --> 00:22:07,270
for the torch 42 42 trilogy

00:22:04,110 --> 00:22:12,910
the first one is some kind of experiment

00:22:07,270 --> 00:22:16,720
for me too and yeah that was okay

00:22:12,910 --> 00:22:19,900
because I took so step step stated up as

00:22:16,720 --> 00:22:25,360
a maintainer new way but I wouldn't do

00:22:19,900 --> 00:22:27,580
again and the 42 this is found carrying

00:22:25,360 --> 00:22:29,830
from their arm so settings enterprise

00:22:27,580 --> 00:22:33,330
and that was this coach

00:22:29,830 --> 00:22:37,690
stable and one of the best releases and

00:22:33,330 --> 00:22:42,340
a 42 3 yes the good point is that is

00:22:37,690 --> 00:22:46,630
stable but outdated in some areas and

00:22:42,340 --> 00:22:50,110
the campy was good for the data's

00:22:46,630 --> 00:22:55,240
hardware but bad for the old hardware so

00:22:50,110 --> 00:22:57,250
that was a so now from from the past to

00:22:55,240 --> 00:23:00,150
the current on the future for the deep

00:22:57,250 --> 00:23:00,150
15 0

00:23:00,930 --> 00:23:09,700
opposite 15 15 0 carnal I finally could

00:23:06,100 --> 00:23:13,990
slow that away and Jocasta took about a

00:23:09,700 --> 00:23:16,870
maintenance ship Thank You Gigi and this

00:23:13,990 --> 00:23:19,750
is again based on that as the 15 does

00:23:16,870 --> 00:23:22,840
that is good again so we have no

00:23:19,750 --> 00:23:25,900
maintenance of a lot of the opposite

00:23:22,840 --> 00:23:29,080
opposite kernel and this is based on the

00:23:25,900 --> 00:23:31,420
fourth of 1214 color and the signing

00:23:29,080 --> 00:23:35,410
method is a slightly change that is

00:23:31,420 --> 00:23:38,050
signed by pkcs7 then that means it needs

00:23:35,410 --> 00:23:41,830
a different kind of the package depends

00:23:38,050 --> 00:23:46,570
dependency and so on and one point to be

00:23:41,830 --> 00:23:50,770
emphasized is that photo 12 is no LTS

00:23:46,570 --> 00:23:53,570
kernel that means photo 12 14 is a last

00:23:50,770 --> 00:23:59,990
version provided by upstream

00:23:53,570 --> 00:24:02,660
and this time so we decided okay we take

00:23:59,990 --> 00:24:04,060
up responsibilities we do all backbones

00:24:02,660 --> 00:24:08,710
by ourselves

00:24:04,060 --> 00:24:13,400
hey great how do we do that

00:24:08,710 --> 00:24:17,530
so we deployed different teams and one

00:24:13,400 --> 00:24:21,020
thing is get fixed scripture that is

00:24:17,530 --> 00:24:23,390
checking the upstream kid commits and

00:24:21,020 --> 00:24:26,810
whether it should be back portage by

00:24:23,390 --> 00:24:29,180
checking the fixes tab and that's

00:24:26,810 --> 00:24:31,960
reported to each developer you should

00:24:29,180 --> 00:24:35,980
back portage check that check that and

00:24:31,960 --> 00:24:40,010
also we regularly watch for the 1480s

00:24:35,980 --> 00:24:43,240
kernel development and whether it's back

00:24:40,010 --> 00:24:47,120
portable to our car or not so we

00:24:43,240 --> 00:24:50,600
regularly check that but we fortunate to

00:24:47,120 --> 00:24:51,680
see behind the for the latest stable

00:24:50,600 --> 00:24:55,490
bulge

00:24:51,680 --> 00:24:57,910
maybe southern patch is missing and we

00:24:55,490 --> 00:25:00,650
need to evaluate which should have been

00:24:57,910 --> 00:25:05,420
back portage which which which can be

00:25:00,650 --> 00:25:09,860
ignored so on and fifty zero kernel

00:25:05,420 --> 00:25:15,710
stats it's only twelve thousand patches

00:25:09,860 --> 00:25:21,470
hey that's not so small yeah nice stuff

00:25:15,710 --> 00:25:24,710
now so that oh wait okay so why so many

00:25:21,470 --> 00:25:31,100
patches and would it have been better

00:25:24,710 --> 00:25:38,300
with 4.14 30s car if we would have taken

00:25:31,100 --> 00:25:42,110
that maybe yes but maybe not so much for

00:25:38,300 --> 00:25:45,500
example if you look at that chart the

00:25:42,110 --> 00:25:46,970
number of stable patches are so small in

00:25:45,500 --> 00:25:48,320
comparison with the total number

00:25:46,970 --> 00:25:51,980
backport patches

00:25:48,320 --> 00:25:54,350
that means the most of the patches with

00:25:51,980 --> 00:25:56,900
our cottage are also the request from

00:25:54,350 --> 00:26:01,370
third parties were our partners for

00:25:56,900 --> 00:26:04,940
their drivers and features to follow the

00:26:01,370 --> 00:26:07,370
very very dated stage so they're also

00:26:04,940 --> 00:26:12,800
the parties will also grow up

00:26:07,370 --> 00:26:17,059
more so maybe that's not so for the 4.14

00:26:12,800 --> 00:26:19,820
wouldn't have helped so much and this

00:26:17,059 --> 00:26:25,520
again a question for the 415 one dip

00:26:19,820 --> 00:26:27,740
Cano and 15 one dip will be based on the

00:26:25,520 --> 00:26:30,530
SD 15 sp1 Cano

00:26:27,740 --> 00:26:35,180
then again this will be for the 12

00:26:30,530 --> 00:26:37,600
caudal in the next year so that we far

00:26:35,180 --> 00:26:43,160
behind from there

00:26:37,600 --> 00:26:46,010
yeah and the latest stands so that or we

00:26:43,160 --> 00:26:49,550
take the LTS Cano but then we have a

00:26:46,010 --> 00:26:53,540
more overhead so this has to be

00:26:49,550 --> 00:26:57,410
discussed and okay this is a recap again

00:26:53,540 --> 00:27:00,980
15 0 this well the basic concept kept as

00:26:57,410 --> 00:27:05,800
a 42 but no LTS we are responsible for

00:27:00,980 --> 00:27:10,429
our all back poles and for 15/1 deep I

00:27:05,800 --> 00:27:13,130
don't know it's the open question so

00:27:10,429 --> 00:27:16,880
that's all about the canal I hope that

00:27:13,130 --> 00:27:19,300
it's in time so if you have any

00:27:16,880 --> 00:27:19,300
questions

00:27:38,340 --> 00:27:45,940
and especially in the in the armed

00:27:43,740 --> 00:27:49,750
community of openSUSE we have the

00:27:45,940 --> 00:27:52,870
problem that some boards are not enabled

00:27:49,750 --> 00:27:55,029
to endlessly Colonel because basically

00:27:52,870 --> 00:27:58,809
there's no use case for sleep for that

00:27:55,029 --> 00:28:02,860
and that leads to the fact that openSUSE

00:27:58,809 --> 00:28:06,840
leap is not working good enough on this

00:28:02,860 --> 00:28:09,549
port so not working at all so and I

00:28:06,840 --> 00:28:12,899
remember there were some discussions of

00:28:09,549 --> 00:28:17,559
using a newer kernel for openSUSE leap

00:28:12,899 --> 00:28:19,840
like latest stable kernel what do you

00:28:17,559 --> 00:28:23,860
think about this yeah that was a

00:28:19,840 --> 00:28:30,270
question for the deep 15 one is

00:28:23,860 --> 00:28:34,510
especially that question and yeah again

00:28:30,270 --> 00:28:38,289
the maintenance of the another branch is

00:28:34,510 --> 00:28:41,760
a problem if especially for the security

00:28:38,289 --> 00:28:44,740
updates for example once again when

00:28:41,760 --> 00:28:49,330
Spectre same comes up you have the patch

00:28:44,740 --> 00:28:51,730
each of the branch and so who is

00:28:49,330 --> 00:28:54,490
responsible for that individual plunge

00:28:51,730 --> 00:28:57,909
if we take the 80s that's a question how

00:28:54,490 --> 00:29:00,010
to so from the our side we want to

00:28:57,909 --> 00:29:03,850
reduce the brand number of branches as

00:29:00,010 --> 00:29:06,039
much as possible but also this is a

00:29:03,850 --> 00:29:08,529
question of balance if there are

00:29:06,039 --> 00:29:10,390
features are really so many so many so

00:29:08,529 --> 00:29:16,120
many features are missing we have to

00:29:10,390 --> 00:29:19,870
switch what others but yeah so that's

00:29:16,120 --> 00:29:22,500
very often question and we need evaluate

00:29:19,870 --> 00:29:22,500
carry

00:29:32,480 --> 00:29:42,360
how we flip 15 has a very big back part

00:29:37,830 --> 00:29:48,630
of intel drm drivers yeah but no such

00:29:42,360 --> 00:29:51,990
big bad port from md GPU why oh that's

00:29:48,630 --> 00:29:55,560
very simple other because we didn't get

00:29:51,990 --> 00:29:57,870
any requests for that for intel we

00:29:55,560 --> 00:29:59,760
request we got a request from intel from

00:29:57,870 --> 00:30:03,660
from path as a partner for their

00:29:59,760 --> 00:30:06,510
upgrades for supporting gen 10 graphics

00:30:03,660 --> 00:30:11,190
generations but from md we didn't get

00:30:06,510 --> 00:30:13,710
requests we got requests and we then we

00:30:11,190 --> 00:30:16,190
would have evaluated with respect for

00:30:13,710 --> 00:30:19,770
that we're not and maybe we did that but

00:30:16,190 --> 00:30:22,350
we didn't do that so i think this is

00:30:19,770 --> 00:30:25,680
also possible from the open sea deep

00:30:22,350 --> 00:30:30,750
user side any opposition deep user can

00:30:25,680 --> 00:30:34,680
of um create a feature request by the

00:30:30,750 --> 00:30:37,290
page opens org and that can be evaluated

00:30:34,680 --> 00:30:40,650
and we can include the feature if

00:30:37,290 --> 00:30:43,770
requested yeah so the important thing is

00:30:40,650 --> 00:30:58,440
request before the release of the

00:30:43,770 --> 00:31:00,030
release is of course difficult okay

00:30:58,440 --> 00:31:03,200
thank you

00:31:00,030 --> 00:31:03,200
[Applause]

00:31:06,490 --> 00:31:08,550

YouTube URL: https://www.youtube.com/watch?v=WUW_v0u8-ng


