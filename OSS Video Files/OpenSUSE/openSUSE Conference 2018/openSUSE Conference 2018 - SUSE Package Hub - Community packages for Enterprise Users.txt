Title: openSUSE Conference 2018 - SUSE Package Hub - Community packages for Enterprise Users
Publication date: 2018-05-26
Playlist: openSUSE Conference 2018
Description: 
	https://media.ccc.de/v/1957-suse-package-hub-community-packages-for-enterprise-users



SUSE Package Hub [1] provides open source packages to Enterprise Users by the Community.
This talk shows the current status of this project, explains how to contribute and what might be next.

[1] https://packagehub.suse.com

SUSE Package Hub [1] provides open source packages to Enterprise Users by the Community.
This talk shows the current status of this project, explains how to contribute and what might be next.

[1] https://packagehub.suse.com

Wolfgang Engel
Captions: 
	00:00:05,310 --> 00:00:14,020
so hello and welcome my name is Rafa

00:00:09,520 --> 00:00:16,539
angle I'm working for Sousa of since 18

00:00:14,020 --> 00:00:18,730
years now currently I'm working on

00:00:16,539 --> 00:00:23,949
through the package shop so that's the

00:00:18,730 --> 00:00:28,480
topic I present you today so package

00:00:23,949 --> 00:00:31,810
shop is mainly about how to bring open

00:00:28,480 --> 00:00:34,360
source packages in the opens with a

00:00:31,810 --> 00:00:39,250
build servers to the civilians

00:00:34,360 --> 00:00:41,289
enterprise customers so when I talk

00:00:39,250 --> 00:00:44,800
about package shop it's all about

00:00:41,289 --> 00:00:48,449
packages so usually if you are using

00:00:44,800 --> 00:00:51,760
openSUSE leap or tumbleweed you can

00:00:48,449 --> 00:00:55,449
choose every package which is available

00:00:51,760 --> 00:00:59,620
in open third service and install it on

00:00:55,449 --> 00:01:02,769
your distribution this is a little bit

00:00:59,620 --> 00:01:07,300
different if you're using SUSE Linux

00:01:02,769 --> 00:01:09,640
Enterprise Server because usually you

00:01:07,300 --> 00:01:11,770
want to also have support and so on so

00:01:09,640 --> 00:01:16,060
you basically are bound to the packages

00:01:11,770 --> 00:01:19,210
their vendor is shipping in this example

00:01:16,060 --> 00:01:23,380
it's Souza so this is basically the

00:01:19,210 --> 00:01:26,380
situation that there's the open source

00:01:23,380 --> 00:01:32,730
universe with a lot of lot of lot of

00:01:26,380 --> 00:01:37,030
packages and there is the the enterprise

00:01:32,730 --> 00:01:40,230
universe where you have only at least a

00:01:37,030 --> 00:01:44,800
limited amount of packages available

00:01:40,230 --> 00:01:48,700
installing on your server and if you

00:01:44,800 --> 00:01:52,390
want to install additional packages you

00:01:48,700 --> 00:01:55,120
can of course use the build servers and

00:01:52,390 --> 00:01:58,240
search for packages that are building

00:01:55,120 --> 00:02:00,160
for the civilians enterprise server but

00:01:58,240 --> 00:02:03,970
you run into several issues or

00:02:00,160 --> 00:02:10,500
challenges one challenge is you can't

00:02:03,970 --> 00:02:13,230
really identify if this package is not

00:02:10,500 --> 00:02:18,380
in our way harming your system or is not

00:02:13,230 --> 00:02:20,430
breaking support ability from Sousa and

00:02:18,380 --> 00:02:23,040
actually you can't be sure that the

00:02:20,430 --> 00:02:26,070
package actually is working because you

00:02:23,040 --> 00:02:28,740
find so many projects in the open build

00:02:26,070 --> 00:02:35,370
service that probably builds the same

00:02:28,740 --> 00:02:39,450
package so there was an idea to trade a

00:02:35,370 --> 00:02:41,940
project where basically many packages

00:02:39,450 --> 00:02:43,980
are hosted that can be additionally

00:02:41,940 --> 00:02:49,490
installed on a zoo zillions enterprise

00:02:43,980 --> 00:02:49,490
server and of course in an easy way so

00:02:50,060 --> 00:02:57,870
one idea was to integrate this project

00:02:54,060 --> 00:03:00,510
also into the delivery Channel how we or

00:02:57,870 --> 00:03:03,420
how Susie's are delivering enterprise

00:03:00,510 --> 00:03:06,680
products to the customer because

00:03:03,420 --> 00:03:10,980
everything has basically go through the

00:03:06,680 --> 00:03:12,690
suta customer center so it would be a

00:03:10,980 --> 00:03:16,320
good option to also have something

00:03:12,690 --> 00:03:20,010
available for the customers in that it

00:03:16,320 --> 00:03:22,890
can just click to activate package shop

00:03:20,010 --> 00:03:30,630
for example and then they have all the

00:03:22,890 --> 00:03:33,570
additional packages available so this

00:03:30,630 --> 00:03:36,480
graph shows roughly the numbers are not

00:03:33,570 --> 00:03:41,010
100% correct but - just to give an idea

00:03:36,480 --> 00:03:42,870
how how unbalanced the number of

00:03:41,010 --> 00:03:46,620
packages between several distributions

00:03:42,870 --> 00:03:49,320
are so we have this lis based systems

00:03:46,620 --> 00:03:53,130
which is the blue one which is kind of

00:03:49,320 --> 00:03:56,000
like 2500 packages when I talk about

00:03:53,130 --> 00:03:59,480
packages these are the source packages

00:03:56,000 --> 00:04:02,600
and then we have the leap based systems

00:03:59,480 --> 00:04:06,330
even more packages and of course Factory

00:04:02,600 --> 00:04:08,459
has the most amount of packages

00:04:06,330 --> 00:04:14,180
available so what we are trying to

00:04:08,459 --> 00:04:16,680
achieve is basically closing this gap to

00:04:14,180 --> 00:04:20,810
bring more packages to the enterprise

00:04:16,680 --> 00:04:20,810
customers and basically the users

00:04:21,060 --> 00:04:28,420
well the current situational state is

00:04:23,980 --> 00:04:30,370
that we have around I think nine hundred

00:04:28,420 --> 00:04:35,620
and something packages available in

00:04:30,370 --> 00:04:42,370
package hub so we are getting to our

00:04:35,620 --> 00:04:45,130
goal but in just slow and tiny steps so

00:04:42,370 --> 00:04:48,040
it all began as an idea setting up the

00:04:45,130 --> 00:04:51,280
project and the project needs to be

00:04:48,040 --> 00:04:53,590
hosted somewhere so the idea was to use

00:04:51,280 --> 00:04:55,750
basically the open bid service so I

00:04:53,590 --> 00:04:57,310
guess all of you already know the open

00:04:55,750 --> 00:05:01,780
pit service right so please raise your

00:04:57,310 --> 00:05:05,350
hand if you do the second hand as well

00:05:01,780 --> 00:05:10,840
if you do really yeah okay yeah you

00:05:05,350 --> 00:05:16,050
really do okay so the easiest ways was

00:05:10,840 --> 00:05:19,240
basically to create a project there

00:05:16,050 --> 00:05:26,320
because then everyone else is able to

00:05:19,240 --> 00:05:28,450
basically add packages there so there's

00:05:26,320 --> 00:05:31,660
one grade of advantage for the

00:05:28,450 --> 00:05:35,580
developers who can just contribute to

00:05:31,660 --> 00:05:37,720
package hub and a and but there's a

00:05:35,580 --> 00:05:42,040
disadvantage that basically the

00:05:37,720 --> 00:05:44,380
customers not really dealing with the

00:05:42,040 --> 00:05:45,880
open builds service so usually they get

00:05:44,380 --> 00:05:54,670
their packages and their software

00:05:45,880 --> 00:05:56,380
through this was a customer center so we

00:05:54,670 --> 00:05:59,980
thought of okay let's combine these

00:05:56,380 --> 00:06:02,470
things and you have to be you need to

00:05:59,980 --> 00:06:06,490
know that when I talk about package hub

00:06:02,470 --> 00:06:09,730
this is usually the customer view so in

00:06:06,490 --> 00:06:11,920
azusa customer center the customer sees

00:06:09,730 --> 00:06:14,920
packaged hub and he can click on it and

00:06:11,920 --> 00:06:17,710
he gets the repository but from a

00:06:14,920 --> 00:06:19,840
developer maintainer perspective in the

00:06:17,710 --> 00:06:22,120
open build service you don't find or you

00:06:19,840 --> 00:06:26,080
won't find a project that is called

00:06:22,120 --> 00:06:29,890
package hub in this service the project

00:06:26,080 --> 00:06:32,900
is called openSUSE backports sleet valve

00:06:29,890 --> 00:06:35,390
and in steve 15 and so on

00:06:32,900 --> 00:06:37,430
or just keep that in mind if you're

00:06:35,390 --> 00:06:44,420
looking at build service for package of

00:06:37,430 --> 00:06:47,030
project so with this approach we we can

00:06:44,420 --> 00:06:51,050
make sure that is there's easy delivery

00:06:47,030 --> 00:06:54,110
to the customer and also the maintenance

00:06:51,050 --> 00:06:58,130
and developers are able to coordinate

00:06:54,110 --> 00:07:02,420
and collaborate on on the project and

00:06:58,130 --> 00:07:05,090
what is most important is we can also

00:07:02,420 --> 00:07:07,940
establish checks to make sure that any

00:07:05,090 --> 00:07:11,810
package that goes into the project and

00:07:07,940 --> 00:07:14,900
is then delivered through through SDC to

00:07:11,810 --> 00:07:17,930
the customer is either not harming the

00:07:14,900 --> 00:07:21,170
system and the customers are not losing

00:07:17,930 --> 00:07:24,350
their support ability so basically that

00:07:21,170 --> 00:07:26,990
for example packages are not conflicting

00:07:24,350 --> 00:07:35,540
like on a package name level or on a

00:07:26,990 --> 00:07:38,000
package file list level you need to also

00:07:35,540 --> 00:07:41,420
know that since that is a community

00:07:38,000 --> 00:07:47,590
project hosted in in the build service

00:07:41,420 --> 00:07:52,490
but also maintained by Suzy Suzy is not

00:07:47,590 --> 00:07:55,790
giving support basically so we are doing

00:07:52,490 --> 00:07:57,680
this on a best-effort base if a customer

00:07:55,790 --> 00:08:00,230
has some problems with some packages and

00:07:57,680 --> 00:08:03,140
also the customer knows that but still

00:08:00,230 --> 00:08:07,010
some customers are using it for example

00:08:03,140 --> 00:08:12,320
arm we have some requests where we put

00:08:07,010 --> 00:08:16,520
KDE plasma 5 into sleet 12 also arm into

00:08:12,320 --> 00:08:20,030
the 15 in package shop but we wanted to

00:08:16,520 --> 00:08:22,160
also have the opportunity for the

00:08:20,030 --> 00:08:25,100
community that they still will be able

00:08:22,160 --> 00:08:27,860
to maintain the project in a way that

00:08:25,100 --> 00:08:30,980
they can add packages and work on on the

00:08:27,860 --> 00:08:34,520
project and of course that's why I put

00:08:30,980 --> 00:08:40,840
the there a question mark community

00:08:34,520 --> 00:08:40,840
support is is also on a best-effort base

00:08:42,750 --> 00:08:54,269
so these are the the main features and

00:08:49,879 --> 00:08:56,759
the most important one is also its it's

00:08:54,269 --> 00:09:00,329
not conflicting with any / installation

00:08:56,759 --> 00:09:02,910
and it's also cross architecture so we

00:09:00,329 --> 00:09:05,430
have all four architectures available

00:09:02,910 --> 00:09:11,370
that are available on slash so this is

00:09:05,430 --> 00:09:12,829
x86 64 arm are 64 PPC 64 and of course

00:09:11,370 --> 00:09:15,360
s/390

00:09:12,829 --> 00:09:18,420
not all packages are available for all

00:09:15,360 --> 00:09:21,569
architectures for example KDE plasma 5

00:09:18,420 --> 00:09:28,259
is not available for s/390 for certain

00:09:21,569 --> 00:09:32,910
reasons but you are free to ported if

00:09:28,259 --> 00:09:36,540
you have a use case and remember to look

00:09:32,910 --> 00:09:38,730
for the openSUSE backports lis 12c 50

00:09:36,540 --> 00:09:41,189
project if you want to look into the

00:09:38,730 --> 00:09:48,870
build service or package our packages

00:09:41,189 --> 00:09:53,009
are in there so that's about basically

00:09:48,870 --> 00:09:57,959
the current state of the project we also

00:09:53,009 --> 00:10:02,069
edit container support in for package up

00:09:57,959 --> 00:10:04,050
15 so that you can submit your container

00:10:02,069 --> 00:10:06,689
and then it will be automatically

00:10:04,050 --> 00:10:09,689
available through the opens to the

00:10:06,689 --> 00:10:11,610
registry so if it will be also available

00:10:09,689 --> 00:10:18,720
through the user registry this is

00:10:11,610 --> 00:10:20,459
something we have to discuss so how does

00:10:18,720 --> 00:10:23,670
the future look like

00:10:20,459 --> 00:10:25,019
so there will be packaged up forcely 15

00:10:23,670 --> 00:10:28,079
so this is something we are currently

00:10:25,019 --> 00:10:30,899
working on also we want to make sure

00:10:28,079 --> 00:10:33,689
that there's a migration path from slee

00:10:30,899 --> 00:10:36,029
12 to sleeve 15 so if you use package

00:10:33,689 --> 00:10:39,949
hub in speed 12 before you can just

00:10:36,029 --> 00:10:42,689
migrate to 315 we have to deal with some

00:10:39,949 --> 00:10:44,959
challenges there as well because some

00:10:42,689 --> 00:10:48,779
packages from package hub can also be

00:10:44,959 --> 00:10:51,929
migrated to linux enterprise server

00:10:48,779 --> 00:10:54,209
based system for example or to add-on

00:10:51,929 --> 00:10:56,640
product workstation extension this

00:10:54,209 --> 00:11:02,220
always can happen

00:10:56,640 --> 00:11:05,220
so there at least for the free add-ons

00:11:02,220 --> 00:11:11,790
forcely we want to make sure that they

00:11:05,220 --> 00:11:15,029
the packages can be migrated then okay

00:11:11,790 --> 00:11:17,790
docker images are already mentioned then

00:11:15,029 --> 00:11:24,120
one more thing is ludwig also mentioned

00:11:17,790 --> 00:11:26,040
that it will be was a good idea to have

00:11:24,120 --> 00:11:29,190
something like a migration path from

00:11:26,040 --> 00:11:30,959
from leap to sleep and this also

00:11:29,190 --> 00:11:33,450
involves package hop in a way that

00:11:30,959 --> 00:11:35,760
basically you want to have all the

00:11:33,450 --> 00:11:37,980
packages you installed on on on leap

00:11:35,760 --> 00:11:40,500
also available for sleep because

00:11:37,980 --> 00:11:43,470
otherwise your migration would fail so

00:11:40,500 --> 00:11:47,580
this is something we are also trying to

00:11:43,470 --> 00:11:49,560
achieve to put much-much packages as we

00:11:47,580 --> 00:11:53,279
can basically from deep also into a

00:11:49,560 --> 00:11:54,990
package hub that there's an option to to

00:11:53,279 --> 00:11:59,220
really migrate from leap to sleep

00:11:54,990 --> 00:12:01,410
without like at least most of the

00:11:59,220 --> 00:12:03,240
packages can be migrated of course if

00:12:01,410 --> 00:12:11,130
the packages have some conflicts that

00:12:03,240 --> 00:12:14,070
can't be migrated so also it's quite

00:12:11,130 --> 00:12:18,529
important what you as a community or a

00:12:14,070 --> 00:12:21,690
maintainer like to see and package up so

00:12:18,529 --> 00:12:23,700
let me know what you want to see on the

00:12:21,690 --> 00:12:29,360
Future list or if you're missing some

00:12:23,700 --> 00:12:35,250
features so we can talk about that and

00:12:29,360 --> 00:12:39,209
of course if you have any questions or

00:12:35,250 --> 00:12:41,820
there's I guess already one you can just

00:12:39,209 --> 00:12:46,550
ask now do you have a microphone over

00:12:41,820 --> 00:12:46,550
there okay thank you okay any questions

00:12:47,720 --> 00:12:57,420
okay there's one from Andrea's so far so

00:12:55,410 --> 00:13:00,360
far one rule has been that the packages

00:12:57,420 --> 00:13:02,760
that can be submitted for for package

00:13:00,360 --> 00:13:05,329
hub need to be different from those that

00:13:02,760 --> 00:13:08,810
are provided already as part of slash

00:13:05,329 --> 00:13:12,800
right well the

00:13:08,810 --> 00:13:15,230
is basically the rule is it can't be the

00:13:12,800 --> 00:13:17,779
same package or the package that

00:13:15,230 --> 00:13:21,710
provides the same files that are already

00:13:17,779 --> 00:13:25,690
in slef so what I would be interested in

00:13:21,710 --> 00:13:28,070
is having additional GCC packages in

00:13:25,690 --> 00:13:31,910
package shop but obviously Zeus is

00:13:28,070 --> 00:13:33,800
providing GCC as part of the this less

00:13:31,910 --> 00:13:37,010
product and as part of the two train

00:13:33,800 --> 00:13:39,080
modules and so on do you see any path

00:13:37,010 --> 00:13:41,990
forward that we could go about this and

00:13:39,080 --> 00:13:43,970
say you know like submitting a GCC 7 or

00:13:41,990 --> 00:13:46,490
in the future chooses the 8 package to

00:13:43,970 --> 00:13:50,690
package hub but simply excluding the

00:13:46,490 --> 00:13:52,760
packages that like disabling in the

00:13:50,690 --> 00:13:56,480
build server certain and sub packages

00:13:52,760 --> 00:13:58,730
that are already part of Spencer well

00:13:56,480 --> 00:14:01,760
what you can do I mean it depends also

00:13:58,730 --> 00:14:04,760
for Union for what you need GCC I mean

00:14:01,760 --> 00:14:08,510
if it's only for like building packages

00:14:04,760 --> 00:14:10,670
that shouldn't be an issue because if

00:14:08,510 --> 00:14:13,130
it's all only during build time we can

00:14:10,670 --> 00:14:16,790
add the package to a basically sub

00:14:13,130 --> 00:14:19,430
project and because then GCC is not

00:14:16,790 --> 00:14:21,410
delivered but it's then it's not

00:14:19,430 --> 00:14:24,320
released but it's used for building a

00:14:21,410 --> 00:14:26,480
package for package up for example no I

00:14:24,320 --> 00:14:28,040
was referring to like microcontroller

00:14:26,480 --> 00:14:30,080
development tools like how do we know

00:14:28,040 --> 00:14:32,240
and other stuff ok so that means that

00:14:30,080 --> 00:14:35,839
basically the GCC version should be

00:14:32,240 --> 00:14:39,190
released and delivered to the customer

00:14:35,839 --> 00:14:43,070
basically that's need to be discussed

00:14:39,190 --> 00:14:45,950
I'll be how we can do that so that's a

00:14:43,070 --> 00:14:51,850
good point so we need to need to talk

00:14:45,950 --> 00:14:55,490
afterwards ok there's another question I

00:14:51,850 --> 00:14:59,480
understood how packages get in package

00:14:55,490 --> 00:15:01,940
shop but sometimes packages change in

00:14:59,480 --> 00:15:05,690
leap in their structure in the current

00:15:01,940 --> 00:15:08,300
they are built is and is there any

00:15:05,690 --> 00:15:11,060
condition where they can get out of mega

00:15:08,300 --> 00:15:13,640
job where you lose them in package shop

00:15:11,060 --> 00:15:15,860
or is it something we can rely on if

00:15:13,640 --> 00:15:21,110
they exist there that they are there to

00:15:15,860 --> 00:15:24,350
stay at least for some time frame

00:15:21,110 --> 00:15:26,060
I had that that differ it depends on the

00:15:24,350 --> 00:15:27,740
time for I mean sure I mean the package

00:15:26,060 --> 00:15:30,740
will be staying in package shop unless

00:15:27,740 --> 00:15:35,360
there is a reason pulling this package I

00:15:30,740 --> 00:15:37,579
mean we had in the past I think twice or

00:15:35,360 --> 00:15:39,470
three times maximum the case where we

00:15:37,579 --> 00:15:41,529
had to pull the package because also

00:15:39,470 --> 00:15:44,630
what is very important is to understand

00:15:41,529 --> 00:15:46,250
if there's for example a security

00:15:44,630 --> 00:15:48,470
problem with a package and no one is

00:15:46,250 --> 00:15:50,060
basically caring about the package so

00:15:48,470 --> 00:15:51,890
the maintainer does not care or there if

00:15:50,060 --> 00:15:54,260
there is not maintain any more for that

00:15:51,890 --> 00:15:56,899
package and it's too risky to deliver

00:15:54,260 --> 00:15:59,360
this package in package up to customers

00:15:56,899 --> 00:16:04,070
or users then this would be also a

00:15:59,360 --> 00:16:06,709
reason to pull the package but beside

00:16:04,070 --> 00:16:09,290
from that there are not many reasons I

00:16:06,709 --> 00:16:12,740
mean another reason can be and that

00:16:09,290 --> 00:16:15,769
happened basically on the switch from

00:16:12,740 --> 00:16:20,930
sleep 12 to sleep 15 let some packages

00:16:15,769 --> 00:16:25,010
in sleep 12 package hub were moved

00:16:20,930 --> 00:16:28,910
basically to for example the workstation

00:16:25,010 --> 00:16:32,240
extension for sleep 15 so the package

00:16:28,910 --> 00:16:35,300
was moved to a product so this also can

00:16:32,240 --> 00:16:37,339
happen it cannot but also happen the

00:16:35,300 --> 00:16:42,140
other way around that a package from

00:16:37,339 --> 00:16:50,600
Slee goes into package shop so it's

00:16:42,140 --> 00:16:53,720
bi-directional did I understand

00:16:50,600 --> 00:16:57,740
correctly that if a package has been

00:16:53,720 --> 00:17:00,380
submitted to package hub for a previous

00:16:57,740 --> 00:17:03,019
version of the sleep products then you

00:17:00,380 --> 00:17:05,030
will take care and try whether it will

00:17:03,019 --> 00:17:06,829
also build against the new product or

00:17:05,030 --> 00:17:09,020
will that require a new submission from

00:17:06,829 --> 00:17:11,179
the community what we are doing is

00:17:09,020 --> 00:17:13,850
basically taking all the packages and

00:17:11,179 --> 00:17:16,220
for example for which built in package

00:17:13,850 --> 00:17:20,260
shops lead 12 and then movie them to

00:17:16,220 --> 00:17:22,520
sleep 15 package top 15 and see if

00:17:20,260 --> 00:17:25,309
everything builds but what we are also

00:17:22,520 --> 00:17:28,370
doing is like I'm sinking this is

00:17:25,309 --> 00:17:31,280
something we did with the KDE plasma 5

00:17:28,370 --> 00:17:34,780
stuff suing these packages from leap so

00:17:31,280 --> 00:17:38,960
that we are basically on the same level

00:17:34,780 --> 00:17:41,570
are you using stagings for them checking

00:17:38,960 --> 00:17:44,480
any submissions from the community while

00:17:41,570 --> 00:17:47,150
we are using the maintenance process so

00:17:44,480 --> 00:17:50,690
that means every submission has first go

00:17:47,150 --> 00:17:53,120
through usually that's a policy every

00:17:50,690 --> 00:17:55,880
package has to be accepted in factory

00:17:53,120 --> 00:17:58,700
first so that's the typical factory

00:17:55,880 --> 00:18:00,920
first policy and there's more referring

00:17:58,700 --> 00:18:04,640
to like is there a chance that if

00:18:00,920 --> 00:18:06,380
someone submits a package update into

00:18:04,640 --> 00:18:10,100
package hub that some other package

00:18:06,380 --> 00:18:13,640
might start to break we had that in the

00:18:10,100 --> 00:18:16,490
past for factory the Sanji we can't read

00:18:13,640 --> 00:18:19,400
yeah we currently don't have any staging

00:18:16,490 --> 00:18:22,100
repository so but this is something we

00:18:19,400 --> 00:18:24,830
can also set up because we had this in

00:18:22,100 --> 00:18:36,830
the past that one package update broke

00:18:24,830 --> 00:18:41,630
other packages any other questions as a

00:18:36,830 --> 00:18:43,340
test story from the from from practice

00:18:41,630 --> 00:18:46,640
I've seen that the package shop is

00:18:43,340 --> 00:18:48,980
available in our subscription and I have

00:18:46,640 --> 00:18:50,300
a running a total SMT for mirroring all

00:18:48,980 --> 00:18:53,690
the Susi repositories into our

00:18:50,300 --> 00:18:55,670
infrastructure and I mean nobody who has

00:18:53,690 --> 00:18:57,290
a reasonable size less installation will

00:18:55,670 --> 00:18:59,960
ever at package hub buyout I asked

00:18:57,290 --> 00:19:01,910
module or something like that and so you

00:18:59,960 --> 00:19:05,000
enable mirroring and then you try to add

00:19:01,910 --> 00:19:07,100
this package up repository anisia have

00:19:05,000 --> 00:19:09,200
you ever looked at the URL at the at the

00:19:07,100 --> 00:19:11,690
file name at the tire attorney okay you

00:19:09,200 --> 00:19:15,950
know what I'm getting at I mean I was

00:19:11,690 --> 00:19:19,640
not confident adding something in sub

00:19:15,950 --> 00:19:23,630
directory named / 12 backports sp0

00:19:19,640 --> 00:19:27,500
to my SP 3 system so if the package hub

00:19:23,630 --> 00:19:30,140
I mean the this less repository layouts

00:19:27,500 --> 00:19:32,090
last 12 or positive layout is quite

00:19:30,140 --> 00:19:33,500
crazy but it's established since 3

00:19:32,090 --> 00:19:36,920
service packs right now and if the

00:19:33,500 --> 00:19:38,620
package hub could somehow blend in there

00:19:36,920 --> 00:19:43,970
so that it's maybe not delivered under

00:19:38,620 --> 00:19:46,100
product updates package chopped 12 SP 3

00:19:43,970 --> 00:19:47,000
then would know okay that's the package

00:19:46,100 --> 00:19:49,820
up

00:19:47,000 --> 00:19:53,330
for 12 sp3 right now I really was not

00:19:49,820 --> 00:19:54,740
confident adding this to my last 12

00:19:53,330 --> 00:19:56,540
servers and so I just put the package

00:19:54,740 --> 00:20:00,080
into my own build servers and there are

00:19:56,540 --> 00:20:03,170
no but that's usability issue in my

00:20:00,080 --> 00:20:04,310
opinion well yeah yeah I know exactly

00:20:03,170 --> 00:20:09,710
what you're talking about

00:20:04,310 --> 00:20:11,450
okay yeah this is this is unfortunately

00:20:09,710 --> 00:20:15,200
I mean not unfortunately but this this

00:20:11,450 --> 00:20:18,380
is of historical reasons that how we

00:20:15,200 --> 00:20:20,420
decided to set it up for sleet 12 I mean

00:20:18,380 --> 00:20:24,260
we settled it currently up the same way

00:20:20,420 --> 00:20:26,600
firstly 15 but we are currently or also

00:20:24,260 --> 00:20:30,230
in the process of okay maybe rethinking

00:20:26,600 --> 00:20:34,610
that in some extent because it might be

00:20:30,230 --> 00:20:36,440
also come in place when we are talking

00:20:34,610 --> 00:20:38,660
about the migrations from the leap

00:20:36,440 --> 00:20:43,550
systems so that we basically have the

00:20:38,660 --> 00:20:50,420
same or align more to the ripple setup

00:20:43,550 --> 00:20:57,680
um how it is indeed for example any

00:20:50,420 --> 00:20:59,930
other questions okay then thank you very

00:20:57,680 --> 00:21:06,220
much you can get more information on

00:20:59,930 --> 00:21:06,220
package hop Suzie calm thank you

00:21:13,080 --> 00:21:15,140

YouTube URL: https://www.youtube.com/watch?v=cog9DSzLFfE


