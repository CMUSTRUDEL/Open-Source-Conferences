Title: LinuxTag2012: Lima: Liberating ARM's Mali GPU
Publication date: 2012-05-26
Playlist: LinuxTag 2012
Description: 
	Luc Verhaegen (Codethink.co.uk/X.org)
Captions: 
	                              hello everybody welcome to the embedded                               and getcha track at the Linux tuck                                    and the warm welcome to look where Hagen                               from code pink please give applause he's                               working on graphic driver since                                       made a driver for the VI unichrome he                               worked at the car boot an alternative to                               proprietary biases he made a free driver                               for the end a great deal on chips with                                de souza team and he made external                                modules for the appropriate for the mesa                                a                                                                 helped talk here about graphical unit on                                ARM cores which is called Molly and I                                think it's the first opens or                                          for an arm platform and this is                                something we are really really looking                                for thank you thank you so the limo                                driver liberating the arm Mali GPU this                                is part two already because part                                      that fast and that was the big                                announcement that we made there we                                showed a few demos it was pretty                                rudimentary and was very hard work in a                                few months before that but was positive                                it was already what three and a half                                months ago at this point it looks like                                it was a few centuries ago so it was                                quite an exciting time then and a bit of                                yeah a bit of time for me personally                                afterwards that was so insane that's                                time before that so a free driver for                                arm now a year and a half ago we were                                faster than with coding and we made                                ourselves a plan an x                                                   we have three big players we have Intel                                we have AMD at an API we have nvidia and                                they each have their own corner                                everything is pretty much said and done                                their Intel is a huge team working on                                their open-source graphics                                AMD has a few guys working on their                                open-source graphics we were two guys me                                and Egbert and like Mateus hope we were                                the three guys that proposed this                                open-source ranjith radium                                              time so we've been playing there as well                                and then work out well for us but ati                                AMD chose their own corner and vidya is                                in another corner again with a fully                                clothed driver and they're pretty happy                                with it it's working very well for a lot                                of people but it's closed source but                                Nvidia works and they have their                                positions they won't move from there on                                the other side we have all the arm GPUs                                and there are plenty of them and there                                is no free driver for them reason for                                that is for years and years it wasn't                                really a big issue people would provide                                a board and a board support package and                                it should and people just use that as is                                they didn't change anything you                                basically have one image one machine                                done nothing ever changed so it wasn't                                really that important to be able to                                switch out a graphics driver stack or                                updated or updated kernel or something                                it just was stuck with it what was there                                and we're still in the situation today                                we're still stuck with a graphics driver                                that you're provided with but things                                have changed around it now we're looking                                into arm servers we also have proper arm                                distributions and even if you don't see                                in an Android as a proper arm                                distribution for linux at least see on                                oghen mod can be seen as a distribution                                and their biggest issue is graphics                                drivers drivers closed source user space                                this is holding up projects like that                                another thing is open source all the                                technical advantages we I don't have to                                tell you guys easier to maintain this                                and that we don't have that it's all                                binary still so we're all stuck we were                                going to change that so we formed that                                planet about a year and a half ago and                                thought why not just look at the driver                                and fix it make it open source and see                                what happens so first we looked at yeah                                we talked a bit and toddler I want to                                just look at the arm one because it's                                probably probably nicest one so we                                looked at it because the competition is                                power vr is Adreno is video core or if                                auntie and I bother with them arm is a                                big name is most used to working on an                                open way it has all the documentation                                 internally everybody in under an arm                                 licensed get all gets all the code so it                                 is a pretty open environment already so                                 the best way forward is to work with a                                 very open provider like arm also we were                                 very lucky and I will be shown in next                                 slide we were very lucky with the Molly                                 itself the hardware itself is pretty                                 well structured and relatively simple                                 compared to some others so since this                                 these gpus are all embedded still they                                 are using OpenGL es                                                shader base no longer a fixed pipeline                                 so we have already a split there we can                                 work on one part of it the                                 infrastructure and the command stream                                 and the other part is the compiler now                                 the infrastructure and the command                                 stream is a bit I focused on and a                                 compiler and the shader is something                                 that I thought well somebody else can do                                 it and we'll get to that later so it                                 would a plan like that what can go wrong                                 there it's easy it should work quickly                                 should be nice anyway our hardware is                                 the mali-                                                             slide of the mali                                                        has a single fragment processor here and                                 one vertex processor mali-                                             multiple fragment processors it's also a                                 small update for some other things in                                 the command stream ended but it has the                                 same basic shaders the same compiler and                                 so it was an easy way to go from it was                                 easy to go from Molly                                                  this is a very simple diagram and                                 actually it's quite truthful if I would                                 have put up a slide from power VR here I                                 wouldn't be able to explain you anything                                 and nobody would understand anything I                                 don't understand anything even though I                                 worked on the thing before this is a                                 mali-                                                                than what's on this slide but not that                                 much this is conceptually quite ok so                                 this thing is about as fast triangle                                 eyes of the verdicts process from there                                 it pushes out                                 it's about as fast as a sgx passive                                 power VR as a power VR                                              which is also available in the nokia n                                  it's just as fast triangle eyes but it's                                 a lot faster pushing pixels if it has                                 multiple fragment processors now you're                                 wondering now where are we using these                                 devices everybody knows the galaxy s                                  samsung galaxy s                                                   android phone of the last few years as a                                 mali-                                                            fragment processors at the time when it                                 came out it was beating everything else                                 in the market for the same segment so                                 this thing is little thing is very very                                 performant even though it looks simple                                 it works quite well so yeah not only                                 know samsung galaxy s                                                   with a faster version the galaxy s                                      it's also in the galaxy note and all the                                 galaxy tabs it's the same Exynos SOC                                 phone samsung but it's also available in                                 lots of associés from small chinese and                                 taiwanese vendors like teletypes am                                 logic allwinner rockchip and recently                                 even via technology so come full circle                                 there i'm wit via again i started off                                 with a unichrome like nine years ago and                                 i'm back and saying hello i'm doing                                 doing Molly again here it should be                                 talking to me again oh well entering                                 interesting how things go in this                                 industry so invited by the time we were                                 looking into this was early                                          like march two thousand eleven only                                 mildly                                                                was only available in a single SOC which                                 was only used for very cheap chinese                                 tablet and the only real hardware out                                 there was android-based so we had to                                 work with android interface with a build                                 build with the furry directly isn't it                                 wasn't a bit of interesting because at                                 the time we don't the android that i was                                 using android                                                           preload which was is used extensively in                                 our reverse engineering so i was lucky                                 that somewhere around May and                                 android                                                           preload and working drivers so that i                                 could probably use LD preload instead of                                 hacking around with elf binaries that                                 was not nice anyway this is what the                                 Molly stack looks like on an android you                                 have your open GL GL es application up                                 there talking to the to read the three                                 red bits here where these are the closed                                 source parts this is the closed source                                 user space the kernel module is of                                 course because all these vendors are now                                 complying especially arm is complying                                 with the GPL this is of course a GPL                                 module it's not in main line yet because                                 first of all I'm not sure it's clean                                 enough it's not colonel style at all and                                 secondly there is no free user space but                                 we're changing that one so it looks on                                 the first look it was pretty simple and                                 pretty logical so math how else would                                 you lay out an OpenGL stack oh no that's                                 correct so all the red bits are the bits                                 that we are will be replacing was a                                 reason why I've been back this is a bit                                 closer look as I first ever stayed on as                                 I said on the first slide or the second                                 slide we can split up the job in                                 infrastructure and shader work and if                                 you look at the actual and this is to                                 scale the user space is to scale this is                                 how it divides up the infrastructure are                                 the yellow bit the SSL compiler is of                                 course a black bit thirty percent of                                 this big blob down here is                                 infrastructure that's only thirty                                 percent of the whole user space fifty                                 percent is the shaded compiler                                 now if you're doing this kind of reverse                                 engineering job you have to first ask                                 yourself what are my limits what how far                                 can I go how far can I go legally and                                 this is answered what what is this stuff                                 doing in there and the infrastructure                                 here is pretty small pretty clean for                                 graphics average unbelievably clean that                                 this division is like that the                                 infrastructure actually has very little                                 going on and it's basically building up                                 d come on stream talking to the hardware                                 setting everything up so that you can                                 run the shaders there is nothing IP or                                 intellectual property heavy in there you                                 will not find I haven't found at all any                                 stuff that could be said this is arm                                 intellectual property it's just                                 compatibility we're talking to the                                 hardware we're setting things up so for                                 the yellow bits we were basically free                                 to use any technique that was available                                 to us as long as we didn't violate                                 copyright this is a pretty big help now                                 the ssl compiler this is where all the                                 optimization happens is for all the IPS                                 we had to use a completely different                                 tactic there and later on I will show                                 how nicely that worked out or is working                                 out                                 so if you're looking at infrastructure                                 and command stream we have to first find                                 out what the actual driver is doing and                                 those arrows they're pretty much explain                                 the whole story from user space we first                                 talked to the colonel and ask them so                                 what hardware are we whereas the memory                                 living how much memory are do we have                                 available at this point next thing we                                 overnight octal that you ask the next                                 thing you do is memory map part of that                                 memory because you need something to put                                 your command streaming to put your                                 shaders and to put your data in and                                 rendering in the end so we just have an                                 nmap there the next step is we build up                                 all every the whole command stream in                                 memory and then send a job to the                                 geometry processor which is actually the                                 vertex processor say hey it's finished                                 here here is your job is your task here                                 a few bits there a few addresses there                                 go and run this after a few milliseconds                                 this thing will come back and say hey                                 I'm done or if gave me crap I'm not                                 running that I've actually been out of                                 been having a very hard time crashing                                 this thing it's been a really nice bit                                 of hardware it's not unlike some of the                                 competition so yeah just comes back to                                 you and says I'm done and you can go and                                 give the job to the fragment processor                                 and it will just render the final render                                 it's actually pretty simple there is no                                 nothing no microcode being uploaded                                 there is no registers being touched from                                 user space it all happens in a few I                                 octaves and an M app and an open so for                                 reverse engineering that makes it pretty                                 easy at least as soon as you have LD                                 preload we just LD preload above lipsy                                 and capture all the lipsy commands that                                 we need which are open em map and I                                 octyl that's all we need nothing more                                 once we have done the open we know which                                 file we are allocating memory from with                                 or mapping memory from with a map when                                 we can call em map we track which memory                                 where it lives and then wait until                                 finally the locum and stream is built up                                 capture that as well                                 and capture all the memory and story to                                 a file that's how we work here we were                                 lucky here because the whole command                                 stream is built up before the GP job or                                 the verdict processor job is submitted                                 the other thing is queued in a thread                                 for when the GP comes back it can                                 execute it quickly and and in a separate                                 thread so the whole thing is built up at                                 the GP point where there's still little                                 data in memory as well so we actually                                 have a pretty limited set of data that                                 we have to sort through I later on so                                 our mode of working for reverse                                 engineering this driver apart from a bit                                 a bit of D compilation our mode of                                 working is we create a single frame                                 OpenGL app we run this frame capture                                 this command stream then go back replay                                 this command stream on the hardware                                 change a few bits replay this reach                                 places or replay this again on the                                 hardware and from that start building a                                 driver now every as I will explain that                                 the demos later or I will show in the                                 demos later on every time we went a step                                 further and a step further and we could                                 explain more and more about a hardware                                 it's all of course easy to say just look                                 at a bit of a command stream but you're                                 looking at about a megabyte of text                                 every time which you can sort through                                 and then alter some addresses it's it's                                 interesting stuff so where are we today                                 that would at least with the                                 infrastructure part we'll get to the                                 compiler part in a bit and a few new                                 things here from from thousand last time                                 so what files and we were already                                 running on Molly                                                         few changes between the two the shader                                 linking it has been updated since then                                 there were quite a few changes needed to                                 support the new stuff that I added and                                 uniforms and attributes and varieties                                 have since yeah and only the varieties                                 have changed significantly since then                                 the whole linking has changed we're also                                 doing multiple drafts but I will go over                                 all the details and then this last bit                                 where I go through the demos we now have                                 a very high triangle account because                                 I've been able to figure out what                                 textures have been doing as well so I                                 have now texture set up                                 I now pretty much have the whole command                                 stream pinned down at least a large                                 blocks so I'm more free to move stuff                                 around so now I have tons of memory                                 available and can more easily handle                                 that so we now have pretty high note and                                 as I will show and later on there is                                 also the demo app so that I at least                                 have something to show on an Android                                 device when I'm trying to hold the talk                                 so the next bit and this is something                                 that I was not that much involved with                                 myself as all this shader work all the                                 compiler work and we got unbelievably                                 lucky here the infrastructure depends on                                 Android system libraries and talks                                 through lipsy to the colonel and finds                                 out a lot about hardware and needs to                                 have a lot of state before it will do                                 anything the ssl compiler just uses                                 malloc and free and a few of those bits                                 doesn't need anything much could run it                                 standalone and an emulator and it will                                 still work don't need to work on the                                 hardware it only has a single entry                                 point you provided the type of shader                                 you provided the structure where it                                 should put its data and you provided the                                 shader source as is it will compile then                                 it will come back to and say he is your                                 data and gives you the binary it gives                                 you a bit of metadata this is how I run                                 my demos as well this is how these tests                                 happen as well it's all de llamar a                                 infrastructure is currently built up we                                 use this compiler directly that's the                                 only thing we link to when we do our                                 infrastructure work at this point                                 couldn't be easier if you have a nice                                 little little compile a nice little                                 entry point like that now when we are                                 working with this block we can't just go                                 everywhere we want we have to be a lot                                 more careful luckily it's also a lot                                 faster and it's more easy to spot the                                 differences when something does break so                                 and I will get to the two guys that have                                 been doing it in a bit that work the                                 workflow here that those two guys have                                 been using is provide a shader compile                                 it see what it does I'll to alter this                                 shaina slightly compiling compile let's                                 see what it does and it's actually                                 pretty limited set of data                                 and it's easy to go from one tiny step                                 to another but it's something that I                                 could have probably never done as I've                                 never been a processor designer or a                                 child prodigy as you will see now these                                 are the two guys that have been doing                                 all the shader work this guy is Connor                                 Abbott he is a community member he                                 showed up like months after the files                                 and talked and he started working with                                 Ben no he is working for coating they                                 started working he's in the US and well                                 Oh in the daytime Ben would be working                                 on it and in the night time for us at                                 least Connor would be working out and                                 there would be communicating over IRC                                 these guys have been working at such a                                 pace that I could have never imagined                                 and a month and a half time they had a                                 fragment shader than it was unbelievable                                 i never thought that this was possible                                 now Connor here this is a picture that I                                 got from him via via this is a picture                                 from him from American scientific some I                                 think American magazine and this is him                                 age                                                                 solving robot and the arm you see here                                 is his little brother who was a whiz kid                                 at solving Rubik's cubes and he built                                 his robots who pretty much pester its                                 little brother to show that he could do                                 it faster and he built this using                                 mindstorms and some programs at it I                                 think it the algorithm was written by                                 some some professor in Italy I brought                                 this all together on age                                             show this off and got a bit bit of media                                 coverage but that one was just quite                                 interesting and this picture                                          old he was then taken three years ago                                 he's                                                                     time is reverse engineer shaders how                                 great is that this has been from coating                                 and then sitting over there with a                                 coating t-shirt holding another beer                                 again or yeah Ben has been designing                                 processors at the University in the last                                 few years and has now joined coating can                                 immediately gotten rather boring job to                                 do there right                                 so our status with the satyrs and I                                 never could have imagined that it would                                 happen so fast it's been three and a                                 half months fragment shader is a very                                 long instruction word architecture and                                 if you want to know what that is go and                                 visit wikipedia I can't explain myself                                 then has made some really nice wiki page                                 about it with a full diagram without                                 whole pipeline their works which is                                 quite nice but I don't want to know                                 about it heater so if you're interested                                 in that sort of thing go to our wiki                                 page banaz where you made it right a                                 nice write-up so the status with that is                                 we know the full instruction set save a                                 few bucks we know the full instructor                                 said we have a full disassembler and we                                 have a full assembler as well we could                                 program the shaders for the fragment                                 shader directly and run it on the                                 hardware that's where we are out today a                                 compiler is still in the future because                                 of course after you've done this sort of                                 reverse engineering work on the fragment                                 shader you me and your dad far ahead                                 already you move on to the next bit                                 which is the verdict shader and we're                                 still working on that one this one is a                                 lot more difficult as a transport                                 trigger architecture and this is quite                                 efficient apparently and can push                                 through a lot of data but the                                 computation happens as you push data                                 through the pipeline which makes it                                 extremely hard to write to get any                                 readable assembler for it so the                                 instruction set at this point where we                                 have pretty much eighty percent Ben                                 keeps telling me yeah well there's a few                                 unknown still and maybe we're like sixty                                 percent if it turns out to be a big                                 unknown so it could be ninety nine                                 percent at this point as well so we have                                 a basic shader disassembler it's still a                                 work in progress and it's turning mostly                                 into and it's a mostly the compiler as                                 well because otherwise it would just not                                 be readable not be usable and the work                                 has started on creating an assembler and                                 of course then to make it readable make                                 it usable a bit of a compiler as well so                                 what we didn't see where that goes in                                 the next few weeks but Connor is still                                 hacking all true tonight where we will                                 go out drinking here Linux talk                                 is that home probably pestering his                                 brother again and hacking and on the                                 shaders there it's amazing so yeah this                                 is where we are at now we've set up                                 immediately we set up a limo driver the                                 Lord is a website it's actually a big                                 wiki so if anybody has any information                                 even just information about devices                                 going or how to build stuff for your own                                 device you can go up there and alter the                                 wiki we have a mailing list which is                                 surprisingly low volume because all all                                 communication between and it's a pretty                                 big channel already for for such a small                                 project it's about                                                   around in there all the time it's pretty                                 active and they're mostly Connor and Ben                                 are talking about shares but still                                 there's quite a lot going on it's easy                                 to get hardware for this because it's we                                 have these                                                            tablets they cost like                                                  just carry them along and go to a                                 conference and stick it in your backpack                                 in a hack on a graphics driver without                                 doing anything on your laptop yourself                                 you're just playing it over to the                                 hardware you can just carry it                                 everywhere on the plane everywhere it's                                 pretty nice so we have a full we have                                 the Lamar des fact working there Ben has                                 the the shaders on agate aureus as well                                 it's all Unga toria's apart from the                                 bits that I did in the last two weeks                                 because it's too big of a mess too you                                 can build it you can run our own tests I                                 will demo in a bit you can build it                                 right on your device see it working out                                 of them and do the same things that we                                 do which is play stuff alter them                                 analyze what's coming out now the next                                 bit is going to be a bit tricky because                                 I'm going to do this demoing of the                                 devices what it does today and for that                                 I have to use an hdmi to vga converter                                 oh there we are which turns this tablet                                 and you will probably recognize this as                                 the same hardware as the spark or                                 vivaldi KDE plasma tablet but this is                                 the original one from a chain                                 is manufacture which is actually a big                                 bad GPL be in violator anyway so this is                                 the little app that we've let's just go                                 there it's a standard Android no there's                                 my cursor and I have a little app for it                                 and this this thing has now just turned                                 into one big touchpad like you have on a                                 laptop so it's not really easy to use it                                 but will struggle through so add fasten                                 the first thing I showed off his hello                                 triangle well no not hello triangle it's                                 not yellow triangle                                 everything you do it GL you first start                                 off with just showing a triangle seems                                 like a pretty simple thing right but                                 it's already quite a lot going on the                                 first demos we did an opengl the first                                 capture i made at least we're made at a                                 quarter of the size of this that i could                                 keep the amount of data down it's doing                                 something first now this is using just                                 no separate uniforms apart from the                                 viewport and apart from the constants                                 that the program is providing us it's                                 using the binary compiler of course i                                 was showing this triangle on this                                 hardware this resolution like the second                                 week of january of this year so it took                                 like                                                                 point and after after you shown your                                 first triangle something that things                                 really start moving the fascism where we                                 were showing quite a lot more it was                                 just like three and a half weeks after                                 that so this is where our starting point                                 is we have the whole command stream                                 setup here all the variables are still                                 hard coded to just this address these                                 values not much parsing going on there                                 yet so yeah but at least first triangle                                 something that I could call already open                                 source basic driver                                 second stage is just altering the things                                 we are drawing smooth smooth cubes so we                                 went with a fan which is just alter say                                 these are more points and you're no                                 longer drawing a triangle you're drawing                                 the next primitive NGO a fan two minutes                                 of work from the triangle same thing for                                 this trip it's just one very                                             bite in the hole commands from that                                 alter it and a few more points during so                                 after that and this took a week and a                                 half to two weeks where is it down there                                 I showed that one that took two weeks of                                 work it's more simple and it took two                                 weeks of work all we have here is those                                 four points and then the other showing                                 the triangle we have those three points                                 and for each point you have a color this                                 means that you're working with two                                 varieties you have one variety uniform                                 one color which changes the whole thing                                 which could be easy if I would just hard                                 coded again but this is the                                 differentiator for different verdicts in                                 a different fragment shader so I had to                                 start parsing all the metadata that the                                 program that the compiler was throwing                                 us back this took quite a while quite a                                 bit of work to get it kind of right and                                 wasn't completely right yet because I                                 had to rewrite a few things in the last                                 few weeks as well so yeah two weeks oh                                 and the interesting bit is still here                                 again I was doing up until this point I                                 was working on Molly                                                   then I moved to this device and this was                                 nicely showing in red on the Molly                                     hardware it was showing in blue on this                                 device would like a week to go too fast                                 and where the big announcement was                                 showing blue they went another few hours                                 until i found that bit                                 so once we got this quad flat showing                                 nicely we went with multiple draws                                 finest of anyway ok                                 multiple drones two different objects                                 being drawn with a different color once                                 you have multiple draws you can                                 certainly make things a lot more                                 interesting where is the cube smooth oh                                 that's not the one                                 oh man next time i'm bringing a mouse so                                 this is where we were at what Lemuria at                                 thousand we're showing this cube which                                 is not that biggest step from showing                                 the two drawers this is actually just                                 six drawers and the same program that we                                 were running the sir the first triangle                                 on but I didn't wasn't really satisfied                                 with just this static cube for fast them                                 but this whole command stream bill that                                 was still such a mess that I couldn't                                 change much so I thought well this cube                                 is already shaded it's already lighted                                 properly it's rotated it's not just                                 static huge is showing there when it's                                 just altered as one matrix that does the                                 rotation just alternate one this one set                                 of values just all three are constantly                                 and maybe we can get something nicely                                 rotating out of that one and this is                                 what i showed it phazon and it took me                                 two days to act to try a few things                                 because it's not working correctly but                                 this is what I was showing at phazon now                                 what will go wrong and it turns out that                                 this is a caching issue it's always the                                 same command stream in what ways                                 submitting the same job back back to the                                 GP and the PPE to submitting the same                                 job same commands in same addresses and                                 it just messes up and then the geometry                                 between the two jobs this was for                                 awesome that was three and a half months                                 century ago                                 anyway for the next three months I                                 didn't do anything it was Ben and                                 Connor's work they were moving so fast                                 on the on the two shaders there it's                                 it's more than I could ever expect there                                 was quite amazing but I didn't do                                 anything much until like three weeks ago                                 and I started adding pictures I said it                                 fastened will take like a few days to                                 add textures but took quite a bit longer                                 so yeah the playboy girl as we all know                                 Earl inna it's the standard texture be                                 standard for photography and for                                 everything with imaging so yeah another                                 structure was added to the whole command                                 stream the whole tiling pattern of this                                 of these textures are already old Swiss                                 lling of it had to be figured out it was                                 a bit interesting but the big point here                                 is after that there were no big unknowns                                 anymore no bug big blocks that could pop                                 up out of nowhere so I could start                                 playing with the actual organization                                 internally and start playing with how                                 memory is being used                                 so the next step was build up of this                                 it's the same it's always the same cube                                 that we're showing the same program now                                 we've just put textures on the sides not                                 that big a step from one together of                                 course there's always stuff to figure                                 out there is always bits in that we're                                 that we've missed or now using                                 incorrectly so going from one three                                 other is always a bit of a work so for                                 fast we want to go one more step and                                 we're now showing the same it's the same                                 texture it's a companion cube from                                 portal and this is actually using more                                 than                                                                     the point this is using one texture one                                 one set of programs                                                     so we're getting to the point where we                                 can really start doing some proper                                    work since I now know so much about the                                 whole command stream I've done it                                 properly now and this is where we are at                                 today no more messing up we have two                                 different commands streams running there                                 and it's rendering nicely not smoothly                                 because we're doing all everything we're                                 copying                                                                  the buffer throw it over to the frame                                 buffer and we're pretty lucky that it's                                 showing this now on hdmi because android                                 is doing all sorts of crazy stuff there                                 so this is where we are at today after                                 more than a year work this is still                                 running on the binary compiler and I                                 don't think we can run vertex shader                                 already off of our own work right                                 fragment yes but we're pretty close we                                 will get there this is running in five                                 thousand lines of infrastructure code                                 five thousand lines of C year and three                                 months of work                                 that's all I have and not inside the                                 times as well look thank you very much                                 for this really interesting talk and Ben                                 and look and Connor for this really                                 great work we appreciate that very very                                 much and I think all you here have some                                 questions to look so feel free okay                                 nobody okay back yeah coding is a                                 British company and one of the guys that                                 coating has been in this industry for                                    years and he used to work at sayan in                                 the                                                                 question I have a question beginning to                                 talk is that arm was very nice company                                 had everything it's opened and so on and                                 now you have to reverse engineering one                                 of their graphic drivers what what is                                 the point it's not open or get it's a                                 closed door I've been doing this radeon                                 HD stuff before it's hard to get a big                                 company to change overnight so it will                                 probably take some time okay we'll get                                 there so they have have a nondisclosure                                 agreement or I don't have any                                 information from our mind all i have is                                 there's public or the binary that's all                                 i have any more questions                                 ok                                 I give you a microphone like you're                                 building that on top of the Mesa opengl                                 infrastructure or do you really you will                                 appoint we're not at that point yet so                                 this is something I did I quickly true                                 together before father my quickly true                                 to get us some slides on the train over                                 just was no time for anything and i put                                 in a future slide and turned out it was                                 quite wrong we said I said oh we use                                 Mesa will try to use gallium                                            as we can but we want to have this point                                 where we can always throw in the binary                                 compiler from arms till okay since we                                 have this nice interface we could throw                                 in the one or the other our own compiler                                 or the binary compiler forearm and                                 compare at both sides but we will get                                 there and we will not be using the                                 gallium infrastructure fully we will                                 doing an Intel there we will have our                                 old style driver with our own compiler                                 probably based on TGS I on tungsten                                 graphics and share their implementation                                 but we will be not doing it in full                                 gallium we will be able to throw back                                 and forth the two compilers and that's                                 something that gallium does not allow                                 today okay so that that's already no                                 gifts gifts given us where we are this                                 is where we are and we're now at a point                                 if I clean up this big mess of code that                                 i made in laughs to two weeks and push                                 it out then maybe we can somewhat start                                 looking into writing the mesa driver but                                 there's still so many bits and bobs left                                 and right to figure out it's a better                                 way of spending our time is just                                 figuring it out properly and then start                                 clean without having to hack around in                                 me so much just start building it nicely                                 and as we know most things                                 I'd like to allow two more questions and                                 then I think we are out of time I see so                                 yes we will talk about is tonight over                                 what over beers so fine just just a                                 quick question and this all in userspace                                 I'm not touching a kernel at all we want                                 to keep this kernel interface as is so                                 we keep it with me went there I would                                 have to hook this up again I just L did                                 LD preload and sell the stuff flying by                                 in it the final render is dumped in the                                 frame buffer so the llamara stuff is                                 running standalone and we have small                                 demo programs as these demo programs                                 actually work through a link to Amara                                 directly and this links to the compiler                                 only the compiler nothing more and                                 bionic so lipsy and these things                                 actually look like GL simple GL programs                                 we're not we don't have to do as much                                 state set up as you do in anything GL                                 but it for any GL programmer it's                                 actually easy to write a limb are today                                 more as soon as the support in the back                                 end is there but we will not be touching                                 the colonel soon because we still want                                 to have this compatibility we still want                                 to be able to compare to the original                                 driver we have to get performance not                                 this we don't need to have the exact                                 same performance but we should be in the                                 same league we shouldn't be like five                                 percent of the performance and nobody                                 will ever use it yeah another question                                 thank you look and Ben and the crazy kid                                 with a Rubik's Cube for doing all that                                 reverse engineering work and my question                                 would be you have been talking about the                                                                                                         in this chipset for graphics and power                                 management is there also work to do or                                 is it already provided that's always SOC                                 dependent not always but also the time                                 its SOC dependent alter the acceleration                                 on for instance the externals I think                                 they're making this free at this point                                 some that's our Samsung's own IP and                                 Samsung is pushing it out pushing it                                 into the kernel samsung is being pretty                                 nice with the whole lineage stuff and                                 they're contributing quite a lot so but                                 this is not Samsung's IP to give up                                 that's arms                                 p okay thank you so thank you again look                                 for this great talk mount the next talk                                 will be thank you guys for a blouse to                                 look the next talk
YouTube URL: https://www.youtube.com/watch?v=JK1SIZi3u44


