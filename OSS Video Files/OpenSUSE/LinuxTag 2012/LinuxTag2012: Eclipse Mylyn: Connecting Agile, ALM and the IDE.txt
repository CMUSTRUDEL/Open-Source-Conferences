Title: LinuxTag2012: Eclipse Mylyn: Connecting Agile, ALM and the IDE
Publication date: 2012-05-24
Playlist: LinuxTag 2012
Description: 
	Steffen Pingel (Tasktop Technologies)
Captions: 
	                              hello everyone thanks for coming or                               staying the next talk is from Stefan                               bingo he works at task top technologies                               from british columbia canada vancouver                               british columbia but as originally from                               dude got so lost please thank you very                               much and welcome everyone on sigh i work                               for a toss up technologies in vancouver                               thank you um and we're the company                                behind the Eclipse Milan project which I                                want to talk about today and that's um                                that's very related to the talk that                                we've we saw previously and then we're                                going to look at the IDE side of the                                story and how you can integrate those                                tools on that we saw and use them in                                your process so we saw that a lot of                                people are to be using Hudson Jenkins                                who's using get as a version control                                system so that's a                                                    anyone using Garrett as a coat review                                system                                                                  great um so I'm going to show you I can                                interact with those tools on how they                                can help you in your development process                                so around a decade ago on Mick crusin                                the founder off the eclipse of my own                                project was involved in a spec J and                                that was an NA gdt and that was one of                                the project that adopted the principles                                that can back described him it in his                                book and in that project um they had                                outlook to to track some of their                                project on they're using bugzilla to                                track some of the defects they had Excel                                maybe for burn down charge they had a                                lot of communication in an email while                                their day-to-day development was really                                happening inside over there I de in in                                this case I was eclipsed and what you                                can see is that even though all these                                different systems are important for the                                development process and track different                                aspects of our project um Aaron                                integrated in our development                                environment where we do our day-to-day                                work and that was one of the mob agents                                for Mick to start the violent project                                and if you look at that ite there's just                                a screenshot off eclipse you can see                                that it does a very good job of showing                                as the compiler centric view of the                                system so in a typical workspace we have                                a couple dozen projects we have a couple                                hundred classes thousands of methods and                                you can see that entire structure in                                your workspace and you get instant                                access to all the different parts of                                your system even even instant access to                                the JDK which has another couple                                thousand classes in it IDs are very good                                at providing us access to all that                                information but when you think about it                                as developers we usually work on a                                particular story we want to implement a                                certain feature we want to fix a certain                                defect we usually only ever care about a                                handful of classes to get that thing                                done that we're currently working on but                                yeah we see all this information so                                basically nine percent of we're                                typically seeing in the IDE isn't                                relevant and this information overload                                causes a lot of distraction and a lot of                                times we're not just working on one                                thing but we got interrupted somebody                                comes into our office want something                                then if to switch to a different task                                and we lose that context and when we                                continue where we're working on                                previously then we have to rebuild that                                context and so we end up spending a lot                                of time multitasking going back and                                forth the different applications spend a                                lot of time searching browsing for those                                different things that we need to do                                whatever we're trying to achieve and we                                spent a lot of time handling                                interruptions and all the different                                communication around our project ends up                                in our email inbox all the bugzilla a                                notification about some change that                                somebody made to a bug ends up in our                                email inbox and we spend a lot of time                                processing that                                how much time do you think do we spend                                on those type of activities that are not                                writing source code not writing                                documentation not writing tests but that                                 are searching browsing navigating any                                 guesses                                 so any guess fifty percent yeah that's                                 that's pretty curls probably it depends                                 a little bit how you measure and what                                 you consider ways but um there was a                                 study was done in                                                        at the different activities that                                 developers do and it actually turned out                                 that it was pretty close to fifty                                 percent basically is is wasted in our                                 day and this this friction that comes                                 from this lack of integration and this                                 distraction that comes from the                                 information overload that makes us                                 unhappy and we're really most productive                                 when we're when we have this feeling of                                 flow when we think think about when you                                 last played your favorite musical                                 instrument that feeling or when you last                                 cross the Alps on a bicycle when you                                 just have this one activity that you're                                 really focused on and everything else                                 around you disappears that's when we                                 were most happy and that's when we were                                 most productive and that's that's kind                                 of what Eclipse mildness about helping                                 us to have a little bit more fun while                                 we're writing software and getting by                                 and we want to achieve that by                                 eliminating all that waste um that we                                 saw in the previous slide right so um                                 let me switch to eclipse and let me show                                 you how it works in practice                                 alright so this is this my clips on the                                 first thing that I have to do in Milan                                 is configure my issue tracking system so                                 i use bugzilla but works the same way                                 for track your and a number of other                                 systems basically provide the URL                                 provide my credentials and then I can                                 use this tasks which is the central view                                 that Milan contributes to eclipse in the                                 taxes I set up career using queries are                                 basically my personal view on that                                 repository so in this case it's eclipse                                 or bugzilla I have selected all the                                 Milan projects said I want to see all                                 the bugs that are assigned to me when I                                 run this query against the server it                                 brings in all those different tasks into                                 my Eclipse so and i can ask this                                 innocently so if i double click one of                                 these tasks like the editor opens                                 immediately that's because the is all                                 this information about the tasks of cash                                 offline I can see all the little details                                 the milestone I can edit it move things                                 between projects add new comment here I                                 can save this you know see that and this                                 has a little outgoing error so i can                                 make graphs and then only once i do                                 submit this actually gets transmitted                                 back to the server um i get things like                                 hyper linking support maybe i'd see if                                 we have have a task that has a stack                                 trace on it so if there's just a curious                                 i can just click on it and it'll                                 instantly navigate to the code so i                                 don't have to go and copy and paste out                                 back and forth from my web browser i can                                 interact with the attachment download                                 attachments i can easily attached                                 screenshot if I detect a problem i could                                 say ok there's something wrong here                                 could highlight it and then attach that                                 to the bug very easily maybe somebody                                 else would look at it i get all the                                 different things i'll get a quick                                 outline to navigate in the task I even                                 get some rich editing support that's                                 simple wiki syntax where I can have just                                 a little bit of formatting very simple                                 and of course I have I've content assist                                 if I want to link to a different bug                                 that's may be related to search then I                                 can just type searched content assist                                 and then enter the bucket reference                                 click on it and instantly navigate to it                                 in mitosis um you can see it's it's very                                 easy to bring in those have skype i have                                 set of another query for somebody i                                 collaborate with so i end up with a lot                                 of tasks in my task list so i can use                                 this ezell presentation just just a                                 different presentation for the same list                                 of Pask and that's sorted by day so here                                 i can use drag-and-drop to organize my                                 work day so I down here I've all the                                 tasks that are in mitosis and I can just                                 take them and say I want to work on this                                 next monday maybe if i don't get to                                 these items that are scheduled for today                                 and they automatically moved to the next                                 day so I never lose track of them if I                                 complete them they disappear from the                                 list because they're done if I know I                                 have a hard deadline on something maybe                                 a release date I can also set a due date                                 and if that task is to sign to me then                                 you can see this little decoration here                                 now um and this task is actually                                 displayed on top of my list because I                                 know this is the next that the most                                 important thing that I need to work on                                 next                                 alright so now let's switch to the Java                                 perspective if I actually want to start                                 working on a task I use this activate                                 task button here on the top activating                                 taxes means I'm now working on it let's                                 close this let's get some space here um                                 so I might look at a few classes here                                 navigate for the code and now what's                                 what happens here in the package                                 Explorer when I pass this focus but it                                 now filters my my view on my work space                                 just to the things that I have                                 interacted with so I can always go back                                 see everything now I just see the stuff                                 that I actually touched so as I now go                                 down in this list maybe open a class it                                 gets automatically added to my task                                 things explicitly I can use this little                                 plus hover and as I click things they                                 automatically get become part of my task                                 context what's really interesting on I                                 can also use this this task context is                                 used in all kinds of different places in                                 a club so if i use content assist for                                 instance you see this you see the                                 separation line it actually does stuff                                 like extract mapping that's part of my                                 on top of the list so i don't i don't                                 have to spend time going down the entire                                 list but i get the things that are most                                 important to me on top of the list and i                                 can instantly add this in here so now                                 let's see um let's see what happens when                                 we switch tasks so let me go back to my                                 task list so maybe now at that point                                 somebody comes into my office and says                                 here I need you to look at this bug                                 right now so what I can do is I can                                 deactivate the task that I'm currently                                 working on and activate that task look                                 at whatever is relevant to for that                                 particular issue and then if I go back                                 to my previous task it instantly                                 restores that task contacts that I was                                 working on before I now see that context                                 again                                 it resource all the editors and takes me                                 exactly where I to that place to that                                 editor that I was using before so was                                 just a single click I can instantly                                 switch back and forth between those                                 different tasks and this contacts gets                                 automatically track and restored so I                                 don't have to think about where I was                                 but I can just continue to work where I                                 would previously left off                                 and in this task editor I also get this                                 this context tab where I can review the                                 context and I can mark things as oh no I                                 can't but the more that I interact with                                 certain elements and more that I added a                                 certain method the more important it                                 becomes and at some point if it's very                                 important it actually becomes a landmark                                 so I i guess i have to activate the task                                 and then i can i can also manually say                                 this method is particularly relevant for                                 this possum and it goes bold but if i                                 had spent a lot of time editing that                                 method that would have just happened                                 automatically and on the top top right                                 here at top left here I get the slider                                 that allows me to manipulate the                                 threshold for that degree of interest so                                 the further right I move the slider the                                 higher the threshold so now only very                                 important elements get displayed and the                                 frizzle left I move the more I see as                                 part of that task context I can remove                                 things maybe something wasn't that                                 relevant to the context also if I don't                                 interact with something for a long time                                 it gets removed it's removed from the                                 context because it's not really relevant                                 to that particular task and so that way                                 the context always just contains the                                 relevant items so it stays reasonably                                 small when I'm happy with that and maybe                                 I I'm halfway through through resolving                                 this bug I can take this context and I                                 just click attach context then it gets                                 zipped up and put as an attachment on my                                 bugzilla bug or a track task and                                 somebody else in a different workspace                                 can just download that context and they                                 would see exactly that same filtering                                 view off the package store so they would                                 instantly know what's relevant and I'm                                 automatically captured that knowledge on                                 the task and even if I go back to this                                 um marking on it to three months later I                                 always know I'm                                 what the context was for this bug and if                                 I activate a task muscle quick maybe let                                 me just clear this context that how the                                 context from somebody that's already on                                 it then I can optionally just download                                 it to my my workspace and just work on                                 that context in this case bug actually                                 had a stack trace on it and a contacts                                 already got automatically created for me                                 based on that stack trace oh I know                                 exactly Easler the element that are in                                 this stack trace if I know I wanted to                                 work on it I wouldn't have to find them                                 of course I click on them here but I                                 also see them here in my pack                                         and we call this extension to the to the                                 Eclipse IDE the task focus interface                                 because it provides that task based                                 focusing so but as developers we and                                 we've seen how this works how how this                                 integration works for bugzilla um and                                 how it works with Java and it by the way                                 it this works the same way for for C                                 code and for a PHP code there are all                                 kinds of different bridges and                                 connectors that like to use that same                                 task focused interface with different                                 languages but we're not only working I'm                                 working on alone in our IDE and                                 collaborating over bugzilla but there                                 are a lot of other pieces involved in                                 our in our development process I want to                                 look at how how this process works when                                 somebody else proposes a change to the                                                                                                          work in the past and i think that's it's                                 typical i mean we work the same way                                 internally a task top a lot of open                                 source projects works that way that                                 somebody comes along wants to change                                 something or once implement a new                                 feature and they start by attaching it                                 bug attaching a patch to the to the                                 bugzilla of that project and then                                 somebody else goes in grabs a patch                                 applies it to its local workspace builds                                 it finds out that maybe there's a                                 problem in the patch maybe it doesn't                                 even build goes back to the contributor                                 or to his colleague and says I am can                                 you please get me another iteration of                                 this and then somebody else goes in                                 because this follows the same steps                                 grabs that patch applies it to its local                                 workspace tries it out at some point                                 maybe it ends up in our version control                                 system maybe it's get triggers off a                                 Hudson build and buy build fails because                                 maybe we weren't running all the                                 integration tests but we were just                                 running some part of the test suite or                                 so different environment so build fails                                 we we have to find out who cost that                                 problem have to go back all the way to                                 the person who originally proposed the                                 patch and then we reiterate over this                                 whole process again and obviously there                                 are a lot of manual steps involved here                                 we might end up with failing builds we                                 get very late feedback between the time                                 lat where that person proposed the                                 pattern where he actually saw that build                                 failing it's a lot of time passed and                                 these systems are are pretty much                                 disconnected so this obviously causes a                                 lot of accidental complexity in our                                 processes and that's the type of                                 complexity on that that we can get rid                                 of if we automate some of these                                 processes now where you recently added                                 some integrations to the milam project                                 that support that kind of integration                                 stuff for hudson get and in the garret                                 code review system and i want to show                                 you in a demo how these systems play                                 together so i have another working set                                 working set is basically just a way to                                 group different projects and queries in                                 my task list so if i work for multiple                                 customers that's a very simple way to                                 organize my workspace so i can use the                                 same workspace but can switch back and                                 forth between different sets of projects                                 this is a simplified simplified                                 workspace sorry it's a very simple                                 project that i'm going to use for this                                 demo let me delete this because i don't                                 want a local task alright so i have a                                 local bugzilla set up here i have a                                 hello linux talk tasks that i'm going to                                 submit to my local bugzilla                                 I'm going to schedule it for it today                                 because I want to work on it now and I'm                                 going to activate it my main class in                                 this project is called app so I                                 previously showed this demo at the Rhine                                 Jack outdated now so it should be looks                                 like obviously and now this project is                                 in a git repository and if I now commit                                 this I automatically get this commit                                 message that is based on my active task                                 so I see the bug ID here and I see the                                 URL to that bog and I could even open it                                 so I I get hyper linking support and                                 then we should see that you can see it                                 open in the background so i get this                                 automatic traceability for that change                                 of that i just made so it's now I didn't                                 have to type anything but it's already                                 linked to the bug report or it says at                                 house that I'm working on so I don't i'm                                 not going to change that message because                                 basically it's i usually track all the                                 activities on the task anyways so this                                 should be in my um it's like committed                                 to my local get repository now since                                 this commit only local now it's                                 distributed version control system have                                 to push it to the upstream now it's in                                 my my shared get repositories that my my                                 team members also use and this should                                 have kicked off a Hudson build and I                                 have this builds view here in Eclipse                                 that's also provided by Milan it has the                                 same idea and works with Hudson and                                 Jenkins so I basically provide the URL I                                 select the build jobs on the server that                                 I'm interested in monitoring                                 and then I can set it to automatically                                 refresh which i haven't done but I can                                 also manually refresh and I now see that                                 this change that I made actually caused                                 the build on the server to fail I got                                 this little pop-up notification here in                                 the lower right corner I can open it and                                 similar to to the task editor I get this                                 I get a rich editor for accessing all                                 the build details I can see the console                                 output for instance I see it's a maven                                 build I can look at the changes I see                                 that exactly that change that I made and                                 I see my test results I now see that                                 there's apparently is a test failing so                                 let me open this in the gin unit view so                                 now this takes the results and shows                                 them here so that I can see what the                                 actual problem was ok apparently I                                 change the message in the application                                 but I didn't did not date the test                                 accordingly I can even rerun this in my                                 local workspace which should give me the                                 same result and yeah obviously the                                 message that I'm expecting isn't isn't                                 valid anymore so of course I should have                                 probably run this locally but sometimes                                 they'll developers forget or sometimes                                 it just takes too long so it's sometimes                                 easy to just commit something in the                                 server do it ok now that it works I want                                 to actually update this commit                                 I'm going to push it back to the server                                 and now if i refresh I can see that I                                 get this little green arrow decoration                                 here which means to build is now running                                 and hopefully after a couple seconds um                                 it should complete and hopefully it                                 should be green at this point okay                                 perfect so the thing that I didn't say                                 here is that this isn't just a git                                 repository but it's actually a garret                                 server and Garrett is is a kilt review                                 system that's tightly integrated with                                 get and it basically acts as a proxy                                 around the git repository to the outside                                 it just looks like a git repository I                                 can push to it I can pull from it works                                 the same way but every time I push a                                 change to a certain branch and Garrett I                                 get an automatic code review generated                                 for that we have some integration for                                 Garrett that works very similar to that                                 bugzilla integration and I have a query                                 for that so if i refresh this in my                                 taxes I can access as this code review                                   aussi um it's at that commit message                                 that I provide it and I see the                                 different hats and builds that were                                 automatically triggered by pushing to                                 that Garrett server I see that this                                 first built that I did was unstable then                                 I updated the patch sub and then I got a                                 successful build and I can actually see                                 the different iterations off this change                                 here so now of course code review makes                                 the most sense if I don't review my own                                 changes but I get someone else to review                                 it and if we look at the requirements we                                 actually need a plus                                                 else on to approve this change so what                                 I'm going to do so i'm going to add LS                                 to this review                                 now Alice gets a notification and I'm                                 going to switch personalities and                                 actually close this workspace and open                                 the Alice's workspace setup very in a                                 very similar way also has a query for my                                 code review so i can actually i can open                                 it so that get a cent in this case it's                                 basically give me all the open code                                 reviews from the server and if I                                 synchronize that meaning show me what                                 what has changed I and now get this blue                                 blue air with a question mark which                                 means here there's a new coat review on                                 the server and now i can now have the                                 same git repository in the workspace so                                 if I want to try this change that Bob                                 did I get to say fetch and then it would                                 take that change put it into a branch um                                 and maybe if there was a new feature                                 implemented I could just um in both the                                 application try out that feature provide                                 feedback but I can also look at the                                 sources of course so I get this tree                                 view of the change let me get a little                                 bigger um I see that the change that Bob                                 made and right here from the editor I                                 can add a comment say this looks good                                 maybe I also see that the change to the                                 test that Bob made so this looks all                                 very reasonable and if I'm happy with                                 the change I can I can vote on it                                 so now under review all the requirements                                 for that review are satisfied I have the                                 plus to vote under code review I have                                 that plus one vote that was provided by                                 Hudson because the built built was                                 actually successful and now once i do                                 submit the garret server takes that                                 change and merges it into my master                                 branch and now if i switch to the master                                 and i do a pull I actually see that this                                 change is now mauritian to master and at                                 that point usually I would close off the                                 bugzilla bug i would probably attach the                                 context so that when i go back later to                                 that task i have everything in there and                                 we saw that traceability for the commit                                 message and we can now if i if i look at                                 my get history that has us change that                                 we just merged um I get this open                                 corresponding task item which then                                 should based on that commit message it                                 can automatically take me back to that                                 task and I can instantly see on the                                 change that was made or the change that                                 was discussed on the task                                 alright so um this is just an                                 illustration of this workflow where we                                 push the commit to Garrett and what                                 Garrett really does in that case it for                                 every change that I pushed a garret it                                 puts it into a separate branch so in                                 this case um Hudson validated that                                 change in that branch voted provided me                                 feedback validated is that change made                                 sense and then others reviewed it but                                 only after the review is approved and                                 it's actually submitted only then does                                 Gary put it into the master branch and                                 so only then it becomes visible to                                 somebody else and since we already                                 validated it we know that it probably                                 works the tools that we saw are part of                                 the de Milan application lifecycle tools                                 project the Milan started in                                           technology project on Eclipse org or                                                                                                       and is now a top-level project which                                 means it's on the same level like web                                 tools or the Eclipse platform and it's                                 composed of several sub-project                                 subprojects that cover different aspects                                 of the application lifecycle and we and                                 we saw these these different these                                 different sub projects in action each of                                 these subprojects has a framer component                                 and then reference implementations that                                 provide integrations with service                                 systems or with different languages or                                 other eclipses parts so we saw the                                 bugzilla integration but there's also                                 one for track and we saw the context                                 integration that provided focusing for                                 java but as I said works the same mercy                                 for C C++                                 on top of that there's a rich ecosystem                                 of extensions some of these are open                                 source of maintained by communities some                                 of these are commercial closed source                                 and they enable you to connect to all                                 kinds of different systems that you                                 might find in enterprises the the whole                                 Milan project is really built on                                 community it's it's a right from the                                 start has always been a very important                                 part of the project that that we are                                 open that we're transparent revalue                                 feedback very highly and we have a very                                 active community of contributors who                                 provide patches or coat reviews to the                                 project and I can only encourage you if                                 you if you're interested in trying out                                 my own or if you're already using Milan                                 please let us know if there are any                                 problems please provide us with feedback                                 on through our news groups or our                                 Eclipse bugzilla on Ed and if you're                                 interested in contributing on there's                                 lots of documentation how to get started                                 and we have that infrastructure so that                                 I showed you this automatic validation                                 and the code reviews we we all use that                                 within eclipse organ you can just use                                 that same same workflows yeah that's                                 that's pretty much it for me any                                 questions                                 hello I've seen that when you have an                                 issue and you can                                                       all the information that you don't need                                 to resolve this issue with the context                                 and will show all the classes that                                 affected the district that information                                 is is managed by your s sm SDM or by                                 malene where is the story because if i                                 change my eclipse and i'm going to home                                 i will maintain this information or I                                 must export some file to my home eclipse                                 yeah that's it that's a good question so                                 in by default it's only sort in your                                 local workspace so it's only ever sword                                 in your local workspace so there's a dot                                 my own directory under your metadata                                 directory that has all the contacts for                                 the different tasks but if you want to                                 share then you can attach it on the                                 bugzilla bug or on the track task just                                 by in the tasker just by clicking this                                 attached context then it's it's                                 basically an xml file that gets zipped                                 up and put out an attachment on the task                                 and that's where you can persist it                                 thank you                                 humans                                 sorry well if you attach that file does                                 it work another systems like JIRA or                                 somewhere else or only on bugzilla that                                 works for pretty much all the that that                                 site that showed the different                                 connectors said it works for all of them                                 also for the code review do you support                                 any other system than Garrett um that's                                 a that's a frequent question that comes                                 up that integration that I showed that                                 has this tight get coupling and this                                 automatic validation was Hudson that                                 type of stuff that only works was                                 Garrett to my knowledge but there are                                 other connectors available for for                                 review board for instance that also                                 supports other sem systems and that IDE                                 integration that Eclipse integration for                                 review board works the same way as a                                 garret integration so you can access a                                 code reviews right from the ID and then                                 there's another project under the my own                                 reviews project called r                                                 stores the review model in files and                                 it's basically SCM agnostic or it has                                 connectors for different s am systems so                                 it's a client-side solution that doesn't                                 require a server so that's also an                                 option any other questions                                 okay thanks thank you very much there's                                 gonna be a break until
YouTube URL: https://www.youtube.com/watch?v=Gz8xXQ-w_ns


