Title: openSUSE Conference 2019 - openSUSE MicroOS Desktop
Publication date: 2019-05-24
Playlist: openSUSE Conference 2019 ðŸ’š ðŸ¦Ž
Description: 
	https://media.ccc.de/v/2531-opensuse-microos-desktop

A New openSUSE Desktop Distribution?

Kubic with its MicroOS core is an exciting distribution that takes much of the cool stuff we're doing in Tumbleweed, adds solutions to the problems of updating a running system, and is becoming the perfect base system for running containers.

But in openSUSE, running server stuff is only half the fun.

Why should servers be the only platform enjoying automatic, atomic, "auto-rollbackable" system updates?

Surely desktop users want to be lazy like server admins also?

Can the tools and approaches implemented in MicroOS help create the desktop distribution of the future?

Let's find out!

This talk will introduce the concept of 'openSUSE MicroOS Desktop', a desktop focused variant of MicroOS based on Tumbleweed.

Various ideas will be discussed, prototypes will be shown, and feedback will be expected from the audience to help shape this potentially exciting take on the future of openSUSE on Desktops.

Kubic with its MicroOS core is an exciting distribution that takes much of the cool stuff we're doing in Tumbleweed, adds solutions to the problems of updating a running system, and is becoming the perfect base system for running containers.

But in openSUSE, running server stuff is only half the fun.

Why should servers be the only platform enjoying automatic, atomic, "auto-rollbackable" system updates?

Surely desktop users want to be lazy like server admins also?

Can the tools and approaches implemented in MicroOS help create the desktop distribution of the future?

Let's find out!

This talk will introduce the concept of 'openSUSE MicroOS Desktop', a desktop focused variant of MicroOS based on Tumbleweed.

Various ideas will be discussed, prototypes will be shown, and feedback will be expected from the audience to help shape this potentially exciting take on the future of openSUSE on Desktops.

Richard Brown
Captions: 
	00:00:05,520 --> 00:00:12,990
okay me again different slide template

00:00:10,620 --> 00:00:14,370
this time and actually a bit of a

00:00:12,990 --> 00:00:17,550
different presentation so even though

00:00:14,370 --> 00:00:19,919
I'm talking about micro s this isn't

00:00:17,550 --> 00:00:22,140
Richard the future technology team

00:00:19,919 --> 00:00:24,599
member where we work on micro sasuser

00:00:22,140 --> 00:00:26,539
this isn't Richard the openSUSE Chairman

00:00:24,599 --> 00:00:29,130
talking about this

00:00:26,539 --> 00:00:31,019
this is Richard the crazy contributor

00:00:29,130 --> 00:00:35,460
who still just sometimes does weird

00:00:31,019 --> 00:00:37,830
stuff in fact so you know it's not

00:00:35,460 --> 00:00:40,199
official this isn't like some future

00:00:37,830 --> 00:00:46,140
openSUSE plan unless we turn this into

00:00:40,199 --> 00:00:48,710
some future openSUSE pile in fact when

00:00:46,140 --> 00:00:52,379
when I originally put this proposal in

00:00:48,710 --> 00:00:54,570
the IDE the idea I had was I'm gonna

00:00:52,379 --> 00:00:55,379
work on this crazy thing and hack week

00:00:54,570 --> 00:00:59,280
will have happened

00:00:55,379 --> 00:01:01,379
suza where Suzi give all of our and be a

00:00:59,280 --> 00:01:02,970
week to play on whatever they want so

00:01:01,379 --> 00:01:05,010
you know my assumption was hack week

00:01:02,970 --> 00:01:07,549
would have happened by now and I could

00:01:05,010 --> 00:01:11,369
talk about my a quick project at OS see

00:01:07,549 --> 00:01:14,700
how quick is in three weeks time so I

00:01:11,369 --> 00:01:18,060
haven't done anything but the session is

00:01:14,700 --> 00:01:20,880
still here so I decided to kind of turn

00:01:18,060 --> 00:01:23,909
this into a bit more of a roundtable a

00:01:20,880 --> 00:01:26,520
discussion session so anything I say is

00:01:23,909 --> 00:01:29,310
I ramble on for the next half hour so

00:01:26,520 --> 00:01:31,229
feel free to interrupt martin has a

00:01:29,310 --> 00:01:33,479
microphone there's a microphone at the

00:01:31,229 --> 00:01:36,479
back you know this get it there's no

00:01:33,479 --> 00:01:38,549
script this is this just like this idea

00:01:36,479 --> 00:01:40,079
is a construction site you know this

00:01:38,549 --> 00:01:42,960
presentation is a construction site

00:01:40,079 --> 00:01:48,210
let's yeah see where we end up

00:01:42,960 --> 00:01:52,639
afterwards and yeah we're all of you and

00:01:48,210 --> 00:01:55,109
my micro s talk an hour ago most of you

00:01:52,639 --> 00:01:59,119
okay good does need that because I don't

00:01:55,109 --> 00:01:59,119
have to kind of repeat half of that then

00:01:59,479 --> 00:02:07,649
the basic thing I've been asking myself

00:02:03,329 --> 00:02:10,979
lately is what the hell to do about the

00:02:07,649 --> 00:02:14,580
Linux desktop you know I want to believe

00:02:10,979 --> 00:02:16,050
that this is possible someday you know

00:02:14,580 --> 00:02:18,300
because this is one of the reasons why I

00:02:16,050 --> 00:02:21,150
got into Linux to use a Linux

00:02:18,300 --> 00:02:23,280
to have that be the thing that I am

00:02:21,150 --> 00:02:28,410
doing my work on that I'm playing around

00:02:23,280 --> 00:02:31,410
on that I do my gaming on but the you

00:02:28,410 --> 00:02:32,850
know it hasn't happened yet and even

00:02:31,410 --> 00:02:35,910
when it does happen you know they were

00:02:32,850 --> 00:02:37,980
being Frank you know Desktop Linux is

00:02:35,910 --> 00:02:41,090
out there that are more popular than

00:02:37,980 --> 00:02:43,830
openSUSE that shouldn't be but they are

00:02:41,090 --> 00:02:45,420
so I've been kind of thinking about what

00:02:43,830 --> 00:02:49,050
are the problems that are really holding

00:02:45,420 --> 00:02:51,780
the desktop Linux world back and this is

00:02:49,050 --> 00:02:53,490
kind of the obvious easy ones to blame

00:02:51,780 --> 00:02:56,460
you know the fact that there are

00:02:53,490 --> 00:02:57,960
multiple distributions you know is part

00:02:56,460 --> 00:03:00,570
of the issue you know but there's lots

00:02:57,960 --> 00:03:02,010
of choices out there that means we some

00:03:00,570 --> 00:03:03,960
people are gonna pick a bun - some are

00:03:02,010 --> 00:03:05,910
gonna pick Fedora some are gonna pick us

00:03:03,960 --> 00:03:07,650
and you know that makes it kind of hard

00:03:05,910 --> 00:03:11,370
to kind of coalesce behind this sort of

00:03:07,650 --> 00:03:13,200
single desktop idea but then that idea

00:03:11,370 --> 00:03:15,720
doesn't really fly anymore either

00:03:13,200 --> 00:03:17,970
because we're not in this single

00:03:15,720 --> 00:03:19,800
Microsoft Windows world anymore

00:03:17,970 --> 00:03:21,510
you know people are gaming on Macs

00:03:19,800 --> 00:03:22,890
they're gaming on Android the game

00:03:21,510 --> 00:03:25,140
they're playing around and doing stuff

00:03:22,890 --> 00:03:26,989
on Windows hey they're running Linux on

00:03:25,140 --> 00:03:31,560
windows these days it's it's you know

00:03:26,989 --> 00:03:33,840
the kind of diversity of options aren't

00:03:31,560 --> 00:03:39,510
what is I can't believe that is what's

00:03:33,840 --> 00:03:44,250
holding Desktop Linux back so you know

00:03:39,510 --> 00:03:53,450
what is and the thing that that kind of

00:03:44,250 --> 00:03:57,560
really hits me is the the the lack well

00:03:53,450 --> 00:04:01,080
the fact that I think we as communities

00:03:57,560 --> 00:04:04,650
typically target ourselves and use stuff

00:04:01,080 --> 00:04:08,550
that we want to use and use it the way

00:04:04,650 --> 00:04:10,350
we want to use it so you know we end up

00:04:08,550 --> 00:04:12,030
kicking around in tumbleweed because we

00:04:10,350 --> 00:04:13,650
like playing with bait with operating

00:04:12,030 --> 00:04:16,350
systems and we do all this deep and

00:04:13,650 --> 00:04:19,820
dirty stuff in the operating system so

00:04:16,350 --> 00:04:21,810
we don't want a polished sanitized

00:04:19,820 --> 00:04:24,540
environment let's say for example like

00:04:21,810 --> 00:04:26,580
OSX where you can't do any of that fun

00:04:24,540 --> 00:04:28,229
stuff but then it's really easy to get

00:04:26,580 --> 00:04:29,880
that one application dump it on our

00:04:28,229 --> 00:04:31,490
section and run you know it's almost

00:04:29,880 --> 00:04:36,880
like we're living in totally different

00:04:31,490 --> 00:04:38,660
world's and those worlds are you know

00:04:36,880 --> 00:04:40,400
diverging in some respects you know

00:04:38,660 --> 00:04:41,960
we're still doing all this weird geeky

00:04:40,400 --> 00:04:43,580
fast-moving stuff and you know you're

00:04:41,960 --> 00:04:45,979
seeing these platforms like Windows and

00:04:43,580 --> 00:04:48,530
like OS X getting some respects more and

00:04:45,979 --> 00:04:50,620
more lockdown and limited you know or in

00:04:48,530 --> 00:04:58,669
other words yet they're doing it wrong

00:04:50,620 --> 00:05:03,710
and I think there's lessons to be learnt

00:04:58,669 --> 00:05:06,650
from that maybe it's cuz I'm getting

00:05:03,710 --> 00:05:08,090
older as well but I don't want to be

00:05:06,650 --> 00:05:10,280
spending all of my time messing around

00:05:08,090 --> 00:05:13,190
with my laptop to make it work the way I

00:05:10,280 --> 00:05:14,479
want it to it's nice that I can it's

00:05:13,190 --> 00:05:16,130
nice that I can get under there and I

00:05:14,479 --> 00:05:19,460
can play around with the drivers and the

00:05:16,130 --> 00:05:21,680
kernel and stuff but I just want to have

00:05:19,460 --> 00:05:23,690
a desktop which boots up and gives me a

00:05:21,680 --> 00:05:27,590
desktop environment and then I can you

00:05:23,690 --> 00:05:29,479
know dump the applications on top so

00:05:27,590 --> 00:05:37,419
yeah I've been kind of thinking of

00:05:29,479 --> 00:05:42,469
what's the the perfect sort of hybrid of

00:05:37,419 --> 00:05:44,419
that approach and in my day job lately

00:05:42,469 --> 00:05:45,949
I've been working more more micros so

00:05:44,419 --> 00:05:49,599
yeah like I talked about earlier in a

00:05:45,949 --> 00:05:52,909
microwave now being best described as a

00:05:49,599 --> 00:05:54,139
single single service operating system

00:05:52,909 --> 00:05:58,580
so you know you deploy it it does that

00:05:54,139 --> 00:06:02,960
one thing what if that one thing is just

00:05:58,580 --> 00:06:04,490
a desktop and what if that desktop was a

00:06:02,960 --> 00:06:06,370
traditional openSUSE desktop so

00:06:04,490 --> 00:06:12,680
something like for example gnome

00:06:06,370 --> 00:06:15,139
so I actually messed around with this to

00:06:12,680 --> 00:06:16,490
hack weeks ago so 2017 where yeah we

00:06:15,139 --> 00:06:18,800
weren't talking about micros as much I

00:06:16,490 --> 00:06:21,409
called a cubic desktop but played with

00:06:18,800 --> 00:06:23,000
the idea there and basically what what I

00:06:21,409 --> 00:06:25,099
took there was the cubic installer we

00:06:23,000 --> 00:06:26,810
had at the time ripped out the container

00:06:25,099 --> 00:06:30,949
part because I wasn't gonna do this with

00:06:26,810 --> 00:06:32,719
containers and installed a gnome using

00:06:30,949 --> 00:06:35,000
transactional updates say do you install

00:06:32,719 --> 00:06:38,000
the system install transact you can

00:06:35,000 --> 00:06:39,050
still gnome with yeah I think it was pkg

00:06:38,000 --> 00:06:44,360
in

00:06:39,050 --> 00:06:47,780
no known patterns reboot and I had a

00:06:44,360 --> 00:06:50,150
fully working gnome desktop even though

00:06:47,780 --> 00:06:52,250
it was a read-only root filesystem so I

00:06:50,150 --> 00:06:53,750
couldn't mess around in anything in USR

00:06:52,250 --> 00:06:57,289
I couldn't mess around with much in

00:06:53,750 --> 00:07:00,050
variks that was broken at the time but

00:06:57,289 --> 00:07:01,879
the the operating the the basic

00:07:00,050 --> 00:07:04,220
operating system worked perfectly fine

00:07:01,879 --> 00:07:08,060
and it was reminded me a lot of what you

00:07:04,220 --> 00:07:11,060
see on like a Chromebook now where you

00:07:08,060 --> 00:07:13,340
didn't have to bother about messing

00:07:11,060 --> 00:07:14,720
around with the packages of the file

00:07:13,340 --> 00:07:16,729
system messing with too much of the

00:07:14,720 --> 00:07:20,860
configuration it's just there it just

00:07:16,729 --> 00:07:23,870
works and then I messed around with the

00:07:20,860 --> 00:07:25,729
the time flat pack like flat hub had

00:07:23,870 --> 00:07:27,020
just launched so I was using flat pack

00:07:25,729 --> 00:07:31,580
to install my various different

00:07:27,020 --> 00:07:35,419
applications on top and the the idea was

00:07:31,580 --> 00:07:36,800
really cool basically the OP the

00:07:35,419 --> 00:07:38,389
operating system part worked fine it

00:07:36,800 --> 00:07:40,280
booted perfectly fine it patched

00:07:38,389 --> 00:07:43,400
perfectly fine I went to about three or

00:07:40,280 --> 00:07:44,810
four weeks of tumbleweed snapshots and

00:07:43,400 --> 00:07:46,520
at no point did anything ever goes wrong

00:07:44,810 --> 00:07:49,750
it always booted perfectly fine it'll

00:07:46,520 --> 00:07:54,550
wake up to the desktop quite fine and

00:07:49,750 --> 00:07:56,569
besides the thought of the core gnome

00:07:54,550 --> 00:08:00,199
applications so things like the control

00:07:56,569 --> 00:08:01,789
panel and a terminal there was not a

00:08:00,199 --> 00:08:03,770
single application on the system because

00:08:01,789 --> 00:08:07,490
I was using the basic gnome pattern for

00:08:03,770 --> 00:08:15,500
tumbleweed so I had to install apps from

00:08:07,490 --> 00:08:18,409
flat back and about 35% of them work the

00:08:15,500 --> 00:08:20,360
rest of them didn't because of the time

00:08:18,409 --> 00:08:24,979
you know flat pack was was rather broken

00:08:20,360 --> 00:08:28,219
but the the general idea of flat pack is

00:08:24,979 --> 00:08:31,219
a relatively good one not the best in

00:08:28,219 --> 00:08:34,490
the world but basically taking this idea

00:08:31,219 --> 00:08:36,409
of a container or container like a Roman

00:08:34,490 --> 00:08:41,589
 so you know a sandboxed application

00:08:36,409 --> 00:08:44,390
having that sandbox application run but

00:08:41,589 --> 00:08:46,459
unlike app image or sort of other

00:08:44,390 --> 00:08:48,949
arrangements you don't necessarily have

00:08:46,459 --> 00:08:50,810
the application and all of its

00:08:48,949 --> 00:08:51,320
dependencies bundled together in one

00:08:50,810 --> 00:08:53,150
single

00:08:51,320 --> 00:08:54,680
big blob because then you'd end up with

00:08:53,150 --> 00:08:56,780
like all these applications being like

00:08:54,680 --> 00:08:58,820
three or four gig in size because it has

00:08:56,780 --> 00:09:01,730
like basically have a mini operating

00:08:58,820 --> 00:09:03,530
system for every single app with gnome

00:09:01,730 --> 00:09:07,060
with flat with flat pack you basically

00:09:03,530 --> 00:09:09,770
have these runtimes which are yeah

00:09:07,060 --> 00:09:11,750
sandboxed containers full of the

00:09:09,770 --> 00:09:14,090
libraries that you're going to need for

00:09:11,750 --> 00:09:16,010
these various but eCos ecosystems that

00:09:14,090 --> 00:09:17,990
we have already in the Linux world so

00:09:16,010 --> 00:09:21,020
like with KDE there's a KDE one time

00:09:17,990 --> 00:09:22,430
there's a gnome one time there's an

00:09:21,020 --> 00:09:24,770
Nvidia driver one time so you know

00:09:22,430 --> 00:09:28,750
basically remodeling what we currently

00:09:24,770 --> 00:09:32,450
do in rpms into these sort of more

00:09:28,750 --> 00:09:34,400
globby groups but these groups are the

00:09:32,450 --> 00:09:36,380
groups that people care about when it

00:09:34,400 --> 00:09:38,480
comes to desktop applications you know

00:09:36,380 --> 00:09:40,580
flat back is very desktop application

00:09:38,480 --> 00:09:43,070
orientated which is one of the reasons

00:09:40,580 --> 00:09:46,250
why I'm still liking it more than let's

00:09:43,070 --> 00:09:48,020
say snap with a bun to where they've

00:09:46,250 --> 00:09:50,000
basically just reinvented packaging and

00:09:48,020 --> 00:09:52,370
created all of the problems we have with

00:09:50,000 --> 00:09:54,470
rpm and so none of the problems we have

00:09:52,370 --> 00:09:57,230
with rpm and made some more issues

00:09:54,470 --> 00:09:59,090
because it's a bun - where's your flat

00:09:57,230 --> 00:10:02,300
pack really from a desktop site does

00:09:59,090 --> 00:10:03,950
solve or does at least model the problem

00:10:02,300 --> 00:10:05,720
the way a desktop user thinks of the

00:10:03,950 --> 00:10:07,100
problem or where desktop developer

00:10:05,720 --> 00:10:10,400
thinks of the problem so basically

00:10:07,100 --> 00:10:12,500
you're developing an app on Linux now if

00:10:10,400 --> 00:10:14,510
you're using a gnome stack I can totally

00:10:12,500 --> 00:10:17,090
see flat pack being the first thing

00:10:14,510 --> 00:10:19,370
they're gonna expect because the

00:10:17,090 --> 00:10:22,370
runtimes there it's being handled by

00:10:19,370 --> 00:10:23,900
upstream gnome build it test it ship it

00:10:22,370 --> 00:10:26,030
all in get lab because they've already

00:10:23,900 --> 00:10:30,920
pipelined all of that and we're still

00:10:26,030 --> 00:10:33,040
doing our PM's but should we does it

00:10:30,920 --> 00:10:36,380
really make sense for openSUSE to take

00:10:33,040 --> 00:10:41,810
upstream gnomes RPMs up in hoops source

00:10:36,380 --> 00:10:43,490
and build it again test it again ship it

00:10:41,810 --> 00:10:45,680
again just so we can say we've given you

00:10:43,490 --> 00:10:47,870
the desktop app you know our desktop

00:10:45,680 --> 00:10:49,190
apps really our core competency you know

00:10:47,870 --> 00:10:51,830
we're really good at doing operating

00:10:49,190 --> 00:10:53,750
systems but the desktop app it's you

00:10:51,830 --> 00:10:57,530
know we typically just ship it test it

00:10:53,750 --> 00:10:59,360
check it in open QA and do it like yeah

00:10:57,530 --> 00:11:02,060
the open question I have with this is

00:10:59,360 --> 00:11:03,710
basically can we make a whole bunch of

00:11:02,060 --> 00:11:04,660
problems we have with openSUSE just

00:11:03,710 --> 00:11:07,720
disappear

00:11:04,660 --> 00:11:09,730
by offloading it to what's already

00:11:07,720 --> 00:11:12,009
happening upstream with flat-pack and

00:11:09,730 --> 00:11:13,870
gnome for example and then if it doesn't

00:11:12,009 --> 00:11:17,019
work out as well as it come it should

00:11:13,870 --> 00:11:18,040
actually contributing so after this all

00:11:17,019 --> 00:11:21,129
went horribly wrong and I wrote this

00:11:18,040 --> 00:11:23,319
blog post and I yeah said how horribly

00:11:21,129 --> 00:11:25,720
bad flatback was I did feel a little bit

00:11:23,319 --> 00:11:27,100
guilty so I went to guarda and I started

00:11:25,720 --> 00:11:29,949
talking with them basically kind of be

00:11:27,100 --> 00:11:31,930
worked through most of the issues that

00:11:29,949 --> 00:11:34,240
were the root cause of these like

00:11:31,930 --> 00:11:36,790
massive breakages haven't solved all of

00:11:34,240 --> 00:11:38,829
them but the the team they really have

00:11:36,790 --> 00:11:41,319
changed their build processes their

00:11:38,829 --> 00:11:43,329
testing things an awful lot more I don't

00:11:41,319 --> 00:11:45,939
think they're using open QA despite my

00:11:43,329 --> 00:11:48,100
best efforts but they're at least yeah

00:11:45,939 --> 00:11:49,930
the the quality of flat-pack has been

00:11:48,100 --> 00:11:55,629
improving

00:11:49,930 --> 00:11:57,189
so yeah I'm starting to get more

00:11:55,629 --> 00:12:01,480
comfortable with the idea of using

00:11:57,189 --> 00:12:03,730
flat-pack as the main way of delivering

00:12:01,480 --> 00:12:04,959
applications for my desktop I don't know

00:12:03,730 --> 00:12:06,970
if it's gonna be perfect this is why

00:12:04,959 --> 00:12:08,680
it's a hack week idea I'm gonna you know

00:12:06,970 --> 00:12:15,790
I wanted to try this and see how far we

00:12:08,680 --> 00:12:18,339
go see where it goes wrong and with that

00:12:15,790 --> 00:12:19,750
I kind of realized that I don't really

00:12:18,339 --> 00:12:22,240
know what I'm doing with a lot of this

00:12:19,750 --> 00:12:24,399
stuff it's been a really long time since

00:12:22,240 --> 00:12:27,250
I've actually contributed directly to

00:12:24,399 --> 00:12:28,569
Nome because yeah I used to be in the

00:12:27,250 --> 00:12:29,800
Nome team in up West I mean the home

00:12:28,569 --> 00:12:31,660
team technique it openSUSE used to

00:12:29,800 --> 00:12:35,139
package it all yeah there but you know

00:12:31,660 --> 00:12:37,860
it's moved on since 3 - which is the

00:12:35,139 --> 00:12:41,620
last on my package - they don't heavily

00:12:37,860 --> 00:12:45,790
and so with with this idea I want to

00:12:41,620 --> 00:12:47,889
kind of see where the world currently is

00:12:45,790 --> 00:12:51,040
and if anybody is really interesting

00:12:47,889 --> 00:12:52,630
this idea what needs to be fixed where

00:12:51,040 --> 00:12:54,910
you know is this something where we need

00:12:52,630 --> 00:12:57,370
to fix openSUSE to be more accommodating

00:12:54,910 --> 00:12:59,949
for flat-pack is this something we're

00:12:57,370 --> 00:13:01,870
flat packages really do not know what

00:12:59,949 --> 00:13:04,509
they're doing and they need to learn how

00:13:01,870 --> 00:13:07,000
to build stuff properly at least from an

00:13:04,509 --> 00:13:09,309
openSUSE perspective in which case you

00:13:07,000 --> 00:13:12,670
know can we you know do we need to look

00:13:09,309 --> 00:13:14,709
at OBS for example building flat packs

00:13:12,670 --> 00:13:16,220
better or you know being part of that

00:13:14,709 --> 00:13:18,050
ecosystem there or

00:13:16,220 --> 00:13:20,209
making things more complicated by it

00:13:18,050 --> 00:13:21,009
yeah doing things alongside it or the

00:13:20,209 --> 00:13:23,569
like

00:13:21,009 --> 00:13:25,970
and nobody's interrupted me yet

00:13:23,569 --> 00:13:37,660
does anybody have any questions at this

00:13:25,970 --> 00:13:37,660
point well looking confused no okay

00:13:38,410 --> 00:13:41,560
go on

00:13:50,780 --> 00:13:59,520
now my question would be how would you

00:13:55,910 --> 00:14:02,220
solve the they kind of the the meta

00:13:59,520 --> 00:14:04,710
packaging in the you organize things

00:14:02,220 --> 00:14:06,750
into the right levels of granularity and

00:14:04,710 --> 00:14:08,250
you cheat and how do you choose thing

00:14:06,750 --> 00:14:09,960
with the things to actually want people

00:14:08,250 --> 00:14:13,080
actually want to have together is it

00:14:09,960 --> 00:14:14,580
your selection is it you provide a lot

00:14:13,080 --> 00:14:16,080
of fine grained selections then how do

00:14:14,580 --> 00:14:17,850
you find things you know it's the same

00:14:16,080 --> 00:14:21,360
problem you have with a bunch of rpms

00:14:17,850 --> 00:14:23,310
but it's one level up yeah well that

00:14:21,360 --> 00:14:28,100
might I mean it may be my naive approach

00:14:23,310 --> 00:14:30,780
but I mean when thinking like a modern

00:14:28,100 --> 00:14:35,670
basic user like with you know and I with

00:14:30,780 --> 00:14:36,990
a phone or a tablet or a Chromebook you

00:14:35,670 --> 00:14:39,630
know what do you get when you boot that

00:14:36,990 --> 00:14:42,150
thing up for the first time you know you

00:14:39,630 --> 00:14:45,420
basically get the desktop or you know

00:14:42,150 --> 00:14:47,370
the UI and a handful of basic

00:14:45,420 --> 00:14:49,500
applications and the things pretty

00:14:47,370 --> 00:14:50,820
useless no besides those basic

00:14:49,500 --> 00:14:54,210
applications that kind of core

00:14:50,820 --> 00:14:55,440
functionality you know you're on your

00:14:54,210 --> 00:14:58,460
own after that point and then you're

00:14:55,440 --> 00:15:00,840
going to the App Store whatever and

00:14:58,460 --> 00:15:03,840
downloading everything individually that

00:15:00,840 --> 00:15:07,500
you want so the meta the the idea I'd

00:15:03,840 --> 00:15:10,410
explore with this is what it makes would

00:15:07,500 --> 00:15:13,430
it make sense for the micro SD stopped

00:15:10,410 --> 00:15:17,070
for example to have nothing but micro RS

00:15:13,430 --> 00:15:19,280
no maybe a subset of the gnome

00:15:17,070 --> 00:15:21,930
applications to kind of give you that

00:15:19,280 --> 00:15:23,460
basic environment so those would still

00:15:21,930 --> 00:15:25,500
be rpms and those would still be the

00:15:23,460 --> 00:15:27,870
traditional yeah the traditional

00:15:25,500 --> 00:15:31,230
openSUSE stuff and then from that point

00:15:27,870 --> 00:15:33,630
we just say you're on your own and you

00:15:31,230 --> 00:15:36,270
know using there flatpack snaps or

00:15:33,630 --> 00:15:39,210
whatever putting everything on top of

00:15:36,270 --> 00:15:43,290
that yeah kind of go the sort of

00:15:39,210 --> 00:15:46,800
longtail approach that's where I yeah

00:15:43,290 --> 00:15:51,740
which yeah what does anybody else think

00:15:46,800 --> 00:15:51,740
of that there we go

00:15:55,080 --> 00:16:02,650
yeah so I'm trying to compare this with

00:15:59,400 --> 00:16:05,500
the makers world or the iOS world or

00:16:02,650 --> 00:16:09,670
Android chrome whatever in general I

00:16:05,500 --> 00:16:11,560
think the basic model take the OS make

00:16:09,670 --> 00:16:14,640
the OS basically one big blob that is

00:16:11,560 --> 00:16:17,410
updated atomically works really well and

00:16:14,640 --> 00:16:19,870
tumbleweed gives me a very similar

00:16:17,410 --> 00:16:21,640
experience to what I see on an iOS where

00:16:19,870 --> 00:16:23,890
you know I can trust the update and

00:16:21,640 --> 00:16:25,360
sometimes if it breaks ok next day there

00:16:23,890 --> 00:16:27,910
is a new one and it will fix that one

00:16:25,360 --> 00:16:30,250
breakage that's all fine and then

00:16:27,910 --> 00:16:33,970
everything else is an app store and you

00:16:30,250 --> 00:16:36,339
can get things from there I don't think

00:16:33,970 --> 00:16:39,400
you necessarily have to make that core

00:16:36,339 --> 00:16:41,560
OS so small if you let's say they know

00:16:39,400 --> 00:16:43,060
why not ship all the default apps as

00:16:41,560 --> 00:16:45,010
part of that like Apple desert you know

00:16:43,060 --> 00:16:48,730
you get a shitload of applications as

00:16:45,010 --> 00:16:50,290
part of the OS update because I mean

00:16:48,730 --> 00:16:52,570
you're doing it well I mean those

00:16:50,290 --> 00:16:54,250
packages work in tumbleweed but yeah

00:16:52,570 --> 00:16:57,250
everything that you know where you want

00:16:54,250 --> 00:16:59,980
to grow a community I want to have other

00:16:57,250 --> 00:17:02,140
people contribute I think such an app

00:16:59,980 --> 00:17:05,199
store approach or you know centralized

00:17:02,140 --> 00:17:07,360
build service where you can just put

00:17:05,199 --> 00:17:08,770
their stuff up and maybe it's untrusted

00:17:07,360 --> 00:17:12,819
but you know they'll take care of

00:17:08,770 --> 00:17:15,100
distributing it makes perfect sense the

00:17:12,819 --> 00:17:16,780
the thought I have with that what kind

00:17:15,100 --> 00:17:18,069
of want one of the reasons I want to but

00:17:16,780 --> 00:17:21,130
there's two reasons why I want to push

00:17:18,069 --> 00:17:22,290
that bar as losers make the OS part as

00:17:21,130 --> 00:17:24,610
small as possible

00:17:22,290 --> 00:17:27,990
one is is like the the thing I was

00:17:24,610 --> 00:17:30,820
talking about with my crease area is the

00:17:27,990 --> 00:17:33,550
with with micro with microbial

00:17:30,820 --> 00:17:35,050
transactionally updated you know you you

00:17:33,550 --> 00:17:36,940
know any update on that

00:17:35,050 --> 00:17:39,640
OS layer you know infinitely the reboot

00:17:36,940 --> 00:17:42,220
which is a bit inconvenient plus that's

00:17:39,640 --> 00:17:44,679
your your scope of risk you know that's

00:17:42,220 --> 00:17:45,970
the part where if that goes wrong your

00:17:44,679 --> 00:17:48,910
systems not booting things are broken

00:17:45,970 --> 00:17:50,830
etc so with my current we have lots of

00:17:48,910 --> 00:17:52,630
nice features for like automatically

00:17:50,830 --> 00:17:56,070
rolling back if stuff goes wrong so like

00:17:52,630 --> 00:17:58,690
with this I would see a model where you

00:17:56,070 --> 00:18:01,300
you know have it set up to automatically

00:17:58,690 --> 00:18:02,050
check is known booting you know has XDM

00:18:01,300 --> 00:18:04,660
started

00:18:02,050 --> 00:18:06,190
blah blah if it doesn't every better

00:18:04,660 --> 00:18:07,600
than tumbleweed company is because it

00:18:06,190 --> 00:18:10,300
would also roll back and you would be on

00:18:07,600 --> 00:18:12,640
the previous snapshot but that means if

00:18:10,300 --> 00:18:14,710
we if we put way too much stuff in there

00:18:12,640 --> 00:18:15,880
like Libre Office for example even

00:18:14,710 --> 00:18:17,710
though I leave office package is really

00:18:15,880 --> 00:18:19,090
really good you know your increase in

00:18:17,710 --> 00:18:20,830
that risk of introducing something

00:18:19,090 --> 00:18:23,620
that's going to break in that OS update

00:18:20,830 --> 00:18:25,830
so there's you know I want to minimize

00:18:23,620 --> 00:18:28,150
that risk of breakage at the same time

00:18:25,830 --> 00:18:31,600
the question I kind of mentioned earlier

00:18:28,150 --> 00:18:33,790
of you know how are we create is

00:18:31,600 --> 00:18:36,070
openSUSE creating more work for itself

00:18:33,790 --> 00:18:38,800
that you know it needs do we really need

00:18:36,070 --> 00:18:41,620
to package Libre Office and I know

00:18:38,800 --> 00:18:43,870
that's a controversial question and I

00:18:41,620 --> 00:18:46,540
don't I'm not saying the answer is no

00:18:43,870 --> 00:18:50,170
but I want to kind of use this as an

00:18:46,540 --> 00:18:52,810
excuse to kind of see if there is yes to

00:18:50,170 --> 00:18:54,250
that question maybe we don't need to

00:18:52,810 --> 00:18:57,130
package Libre Office and all these

00:18:54,250 --> 00:18:59,890
desktop apps maybe it's better to leave

00:18:57,130 --> 00:19:03,120
it in sort of the flat-pack world and we

00:18:59,890 --> 00:19:06,670
just focus on the OS plumbing parts that

00:19:03,120 --> 00:19:08,020
yeah where people can't we can't trust

00:19:06,670 --> 00:19:16,300
what random upstream is definitely

00:19:08,020 --> 00:19:18,940
giving us maybe yes sorry yeah no

00:19:16,300 --> 00:19:21,070
problem but I really like about this

00:19:18,940 --> 00:19:22,990
idea is if you do a cost-benefit

00:19:21,070 --> 00:19:25,240
analysis of the amount of time that goes

00:19:22,990 --> 00:19:27,850
into integrating that's what packages

00:19:25,240 --> 00:19:30,160
currently and the amount of little

00:19:27,850 --> 00:19:32,320
village shoes and stuff you have to fit

00:19:30,160 --> 00:19:34,360
every time upstream comes with a new

00:19:32,320 --> 00:19:36,490
version that's an incredible amount of

00:19:34,360 --> 00:19:38,710
time that's not being spent on hardening

00:19:36,490 --> 00:19:40,210
the core operating system we're making

00:19:38,710 --> 00:19:44,170
that more reliable and from a security

00:19:40,210 --> 00:19:46,540
point of view I am incredibly in favor

00:19:44,170 --> 00:19:51,400
of sandbox saying any user facing

00:19:46,540 --> 00:19:54,220
application anyway Susan Bailey with

00:19:51,400 --> 00:19:57,270
up-armor in the past it's been one of

00:19:54,220 --> 00:20:00,130
the more usable hardening tools so far

00:19:57,270 --> 00:20:02,860
for my point of view if you just focus

00:20:00,130 --> 00:20:06,060
on stabling the core operating system

00:20:02,860 --> 00:20:09,940
instead of well in my opinion

00:20:06,060 --> 00:20:12,640
misaligning time the same glitches in

00:20:09,940 --> 00:20:15,360
the front-end that will exist regardless

00:20:12,640 --> 00:20:18,210
of you patching it this round

00:20:15,360 --> 00:20:21,480
I'd be much happier especially also if

00:20:18,210 --> 00:20:25,680
you enable users to install their own

00:20:21,480 --> 00:20:27,570
apps light from flat packs I think most

00:20:25,680 --> 00:20:30,680
year in your audience will recognize the

00:20:27,570 --> 00:20:33,690
pain in the let's say backside that is

00:20:30,680 --> 00:20:36,240
handling your mother-in-laws computer

00:20:33,690 --> 00:20:38,850
and if you could give her at least a

00:20:36,240 --> 00:20:40,830
little bit of freedom herself that saves

00:20:38,850 --> 00:20:43,680
you all those Sunday afternoon fit

00:20:40,830 --> 00:20:46,140
backwards and forwards which is also

00:20:43,680 --> 00:20:48,690
quite nice although even like my

00:20:46,140 --> 00:20:51,750
mother-in-law but still so yes from my

00:20:48,690 --> 00:20:54,000
point of view please carry on this well

00:20:51,750 --> 00:20:58,410
this is basically whatever made androids

00:20:54,000 --> 00:20:59,940
the go-to platform or mobile and even

00:20:58,410 --> 00:21:03,570
though they're doing a piss-poor about

00:20:59,940 --> 00:21:06,230
it so please do it right and yeah kudos

00:21:03,570 --> 00:21:06,230
for trying this

00:21:12,570 --> 00:21:19,390
um maybe been betraying my in my

00:21:16,360 --> 00:21:21,940
ignorance about flat back here but won't

00:21:19,390 --> 00:21:26,830
this end up with a lot of duplication of

00:21:21,940 --> 00:21:28,810
all your lib Noam whatever that is then

00:21:26,830 --> 00:21:31,150
in distributed multiple times in each

00:21:28,810 --> 00:21:34,030
pax both on disk and then RAM or is

00:21:31,150 --> 00:21:36,850
there now some kind of deduplication so

00:21:34,030 --> 00:21:38,380
the one reason I like flat pack more

00:21:36,850 --> 00:21:39,910
than some of the other options so for

00:21:38,380 --> 00:21:42,520
example there are other options for the

00:21:39,910 --> 00:21:43,840
the application provided like for

00:21:42,520 --> 00:21:46,270
example app image which you can actually

00:21:43,840 --> 00:21:51,670
build in OBS which is you know Sam what

00:21:46,270 --> 00:21:54,340
can be sandbox or Snap is flat pack has

00:21:51,670 --> 00:21:56,770
this model of the application and it's

00:21:54,340 --> 00:21:59,920
runtimes and the idea being is there's a

00:21:56,770 --> 00:22:02,200
one to many mapping between that so if

00:21:59,920 --> 00:22:03,730
you're building a gnome application it's

00:22:02,200 --> 00:22:06,580
gonna require the gnome one time and

00:22:03,730 --> 00:22:07,930
that known one time should be the only

00:22:06,580 --> 00:22:10,990
place where there is for example a live

00:22:07,930 --> 00:22:12,670
load so you know a run time might

00:22:10,990 --> 00:22:13,720
require a couple of disciplic ation

00:22:12,670 --> 00:22:16,000
might be quite a couple of different one

00:22:13,720 --> 00:22:18,130
times I think I think they also have run

00:22:16,000 --> 00:22:21,910
times requiring one times now just to

00:22:18,130 --> 00:22:23,950
make things fun so it there should be

00:22:21,910 --> 00:22:25,570
less of that duplication than you could

00:22:23,950 --> 00:22:28,390
potentially have with a containerized

00:22:25,570 --> 00:22:30,270
approach it's still less efficient than

00:22:28,390 --> 00:22:34,090
what we're used to in the RPM world

00:22:30,270 --> 00:22:35,890
because you're gonna have for example as

00:22:34,090 --> 00:22:37,420
happens with like every major gnome

00:22:35,890 --> 00:22:42,700
release you know there's there's no me

00:22:37,420 --> 00:22:44,710
20 there's no meet 33333 32 you can if

00:22:42,700 --> 00:22:48,340
you're using the flat-pack apps you

00:22:44,710 --> 00:22:51,040
you're likely to have a mix of gnome 330

00:22:48,340 --> 00:22:53,800
based apps and then 332 based apps so

00:22:51,040 --> 00:22:55,510
you have both runtimes and that's you

00:22:53,800 --> 00:22:57,070
know compared to a typical gnome

00:22:55,510 --> 00:22:58,750
openSUSE installation in tumbleweed

00:22:57,070 --> 00:23:02,200
right now that's like twice some a disk

00:22:58,750 --> 00:23:05,070
space I mean it's not lightweight but

00:23:02,200 --> 00:23:07,120
this space isn't that you know bad

00:23:05,070 --> 00:23:10,120
now isn't that you know isn't that

00:23:07,120 --> 00:23:12,100
expensive these days and maybe that's a

00:23:10,120 --> 00:23:13,650
better model at least I mean heck it's

00:23:12,100 --> 00:23:18,100
what our phones are all doing already

00:23:13,650 --> 00:23:22,030
and second question do you have an idea

00:23:18,100 --> 00:23:23,410
how to handle integration where say for

00:23:22,030 --> 00:23:25,330
example so

00:23:23,410 --> 00:23:28,120
independent some services provided by

00:23:25,330 --> 00:23:30,520
gnome like I know folks or other things

00:23:28,120 --> 00:23:33,010
there on the bus that that it expects

00:23:30,520 --> 00:23:36,040
the the platform to provide that pack

00:23:33,010 --> 00:23:38,530
has a an API for that what's the name

00:23:36,040 --> 00:23:40,750
I've really he just straight out of my

00:23:38,530 --> 00:23:42,400
head portals that was it yeah portals so

00:23:40,750 --> 00:23:44,350
there's effectively portals plugged into

00:23:42,400 --> 00:23:46,540
Nome which provide sort of the API

00:23:44,350 --> 00:23:48,730
gateway for that kind of things like the

00:23:46,540 --> 00:23:51,520
one that was the first thought that was

00:23:48,730 --> 00:23:52,750
the the file browser supporting because

00:23:51,520 --> 00:23:54,400
you otherwise he'd have all of these

00:23:52,750 --> 00:23:57,160
sandbox applications and you click on

00:23:54,400 --> 00:24:00,100
the you know like file open and it will

00:23:57,160 --> 00:24:01,780
load up the file view of the contained

00:24:00,100 --> 00:24:03,790
application which of course doesn't have

00:24:01,780 --> 00:24:06,940
any files in it and you can't see your

00:24:03,790 --> 00:24:08,050
home directory the kind of useless said

00:24:06,940 --> 00:24:10,360
the file portal kind of gives you that

00:24:08,050 --> 00:24:13,150
that route of looking to know you know

00:24:10,360 --> 00:24:15,880
to kind of escape the container but the

00:24:13,150 --> 00:24:17,950
contained area for that purpose it's

00:24:15,880 --> 00:24:20,020
when I looked at it two years ago

00:24:17,950 --> 00:24:23,560
it was really limiting it was really

00:24:20,020 --> 00:24:25,870
lousy but in those times since then you

00:24:23,560 --> 00:24:28,600
know more and more upstream developers

00:24:25,870 --> 00:24:30,580
are patching their stuff already to this

00:24:28,600 --> 00:24:31,720
so the upstream binaries include support

00:24:30,580 --> 00:24:33,850
for those portals and they're already

00:24:31,720 --> 00:24:35,230
doing this stuff so they're already

00:24:33,850 --> 00:24:37,480
shipping the flat banks and that

00:24:35,230 --> 00:24:43,920
includes things like about like diba

00:24:37,480 --> 00:24:47,460
services that oh yeah okay cool Hey

00:24:43,920 --> 00:24:50,260
imagine a staging project without

00:24:47,460 --> 00:24:54,400
LibreOffice and Firefox how much faster

00:24:50,260 --> 00:24:58,740
they would build it would be cut open QA

00:24:54,400 --> 00:25:02,650
developers well to testers to have that

00:24:58,740 --> 00:25:05,110
that stuff back that that's actually a

00:25:02,650 --> 00:25:08,650
point I didn't thought of yeah I mean if

00:25:05,110 --> 00:25:11,950
if this idea really has legs and we

00:25:08,650 --> 00:25:14,620
really find that this is a good way of

00:25:11,950 --> 00:25:15,820
doing an open through the desktop so

00:25:14,620 --> 00:25:18,070
it's so we get to the point where

00:25:15,820 --> 00:25:19,660
dropping Firefox out of tumbleweed or

00:25:18,070 --> 00:25:23,110
dropping LibreOffice out of tumbleweed

00:25:19,660 --> 00:25:25,750
is a sensible idea yeah the amount of

00:25:23,110 --> 00:25:28,630
speed we will get in tumbleweed in in

00:25:25,750 --> 00:25:31,090
terms of yet development staging what it

00:25:28,630 --> 00:25:36,060
is astronomical

00:25:31,090 --> 00:25:36,060
yeah at that yeah that could be fun

00:25:40,539 --> 00:25:43,539
fun

00:25:50,870 --> 00:25:58,559
I'm not so big use of openSUSE but I

00:25:55,650 --> 00:26:00,960
mean I have kind of radical idea I mean

00:25:58,559 --> 00:26:04,340
as a Java program I have always working

00:26:00,960 --> 00:26:08,730
with the Java programs and any user

00:26:04,340 --> 00:26:11,490
users area area where user applications

00:26:08,730 --> 00:26:13,980
running I mean maybe at some point makes

00:26:11,490 --> 00:26:17,280
sense to collaborate with other distros

00:26:13,980 --> 00:26:20,460
in producing java based some graphical

00:26:17,280 --> 00:26:24,270
user applications where it's make a

00:26:20,460 --> 00:26:27,480
sense and otherwise maybe it makes sense

00:26:24,270 --> 00:26:30,840
as you say to drop some packages where

00:26:27,480 --> 00:26:34,890
your production will be increased I mean

00:26:30,840 --> 00:26:39,480
building so you don't want to have the

00:26:34,890 --> 00:26:42,510
overhead but still I mean you how many

00:26:39,480 --> 00:26:46,020
packages currently you packaging may be

00:26:42,510 --> 00:26:47,929
more than thousands yes you know for the

00:26:46,020 --> 00:26:50,760
season right now I think we're about

00:26:47,929 --> 00:26:54,080
12,000 or maybe a bit higher packet

00:26:50,760 --> 00:26:59,400
packages in staging though we have a

00:26:54,080 --> 00:27:00,720
good wiki you here know how many package

00:26:59,400 --> 00:27:04,559
it does anyone know how many packages

00:27:00,720 --> 00:27:06,090
when staging I've forgotten so many it's

00:27:04,559 --> 00:27:07,980
a couple of hundred but it's a couple of

00:27:06,090 --> 00:27:10,080
hundred is like really big nasty ones

00:27:07,980 --> 00:27:12,059
like like Libre Office takes longer to

00:27:10,080 --> 00:27:15,120
build than like most of the rest of the

00:27:12,059 --> 00:27:17,010
distribution put together so you know it

00:27:15,120 --> 00:27:19,380
yeah that's where kind of killing some

00:27:17,010 --> 00:27:22,650
killing dropping some of those other

00:27:19,380 --> 00:27:26,870
packages might so I think this probably

00:27:22,650 --> 00:27:29,490
would make a sense but and I don't know

00:27:26,870 --> 00:27:32,370
when the some come middle sized

00:27:29,490 --> 00:27:35,340
companies kind of depending that you

00:27:32,370 --> 00:27:39,539
include some packages maybe it's better

00:27:35,340 --> 00:27:41,850
just ask around of your like from

00:27:39,539 --> 00:27:44,610
community make a poll to make sure that

00:27:41,850 --> 00:27:47,720
you don't drop package which kind of

00:27:44,610 --> 00:27:49,350
have critical dependency and other side

00:27:47,720 --> 00:27:51,000
that's my point

00:27:49,350 --> 00:27:53,190
that's why I'm repeating all this stuff

00:27:51,000 --> 00:27:54,750
people come watch the video I'm

00:27:53,190 --> 00:27:57,270
expecting the flame was to start in the

00:27:54,750 --> 00:27:59,610
mailing list it's all good you know it's

00:27:57,270 --> 00:28:00,840
yeah let's let's have that discussion to

00:27:59,610 --> 00:28:03,120
see where we go with this

00:28:00,840 --> 00:28:05,669
things yeah I mean you know none of none

00:28:03,120 --> 00:28:08,250
of this is set in stone I totally admit

00:28:05,669 --> 00:28:11,700
I have no idea what I'm doing

00:28:08,250 --> 00:28:13,409
so yeah that's right so first of all a

00:28:11,700 --> 00:28:16,980
bit of a radical idea on the business

00:28:13,409 --> 00:28:20,460
side I think we may want to just ask

00:28:16,980 --> 00:28:23,130
ourselves is building those packages

00:28:20,460 --> 00:28:25,260
really what customers would want to see

00:28:23,130 --> 00:28:26,760
from us but or would the customer just

00:28:25,260 --> 00:28:29,039
be fine if he said okay it's built

00:28:26,760 --> 00:28:31,140
upstream but we'll still help you if it

00:28:29,039 --> 00:28:32,970
breaks and we'll help you through the

00:28:31,140 --> 00:28:36,899
upstream build systems and the upstream

00:28:32,970 --> 00:28:39,539
distribution so you know in the end we

00:28:36,899 --> 00:28:40,950
provide the same service and be a happy

00:28:39,539 --> 00:28:43,620
camper with your libera office or

00:28:40,950 --> 00:28:47,309
whatever the contract is the the other

00:28:43,620 --> 00:28:49,140
thing we've mentioned it like when with

00:28:47,309 --> 00:28:53,429
the d-bus interfaces and so on the

00:28:49,140 --> 00:28:55,169
critical thing to get right really is

00:28:53,429 --> 00:28:58,049
what is the contract between the u.s.

00:28:55,169 --> 00:29:00,000
and the application stack because that's

00:28:58,049 --> 00:29:01,890
I mean if you look at the phone systems

00:29:00,000 --> 00:29:03,809
for example there's a huge API that

00:29:01,890 --> 00:29:05,490
those applications can use so they don't

00:29:03,809 --> 00:29:09,210
have to take care of any of the sensors

00:29:05,490 --> 00:29:11,820
the some of the magic going on like the

00:29:09,210 --> 00:29:14,100
AI for you know voice detection and so

00:29:11,820 --> 00:29:17,279
on that's all basically a huge set of

00:29:14,100 --> 00:29:19,919
API is that the OS provides and that

00:29:17,279 --> 00:29:21,600
makes the applications relatively small

00:29:19,919 --> 00:29:24,120
I mean they're still huge because they

00:29:21,600 --> 00:29:26,909
bundle in a lot of stuff so that's

00:29:24,120 --> 00:29:29,850
really if the economical system who

00:29:26,909 --> 00:29:32,640
would ever get that right there's a fair

00:29:29,850 --> 00:29:35,010
chance that a Linux desktop could be a

00:29:32,640 --> 00:29:37,770
nice platform just like iOS or or

00:29:35,010 --> 00:29:40,440
whatever and it could be in many cases

00:29:37,770 --> 00:29:43,289
just you know html5 web apps with some

00:29:40,440 --> 00:29:46,880
you know local storage and all you need

00:29:43,289 --> 00:29:46,880
is basically a chrome runtime yeah

00:29:48,520 --> 00:29:53,240
some rough show of hands how many of you

00:29:51,440 --> 00:29:57,380
here would be interested in trying to

00:29:53,240 --> 00:29:58,460
use this if it existed cool and how many

00:29:57,380 --> 00:30:00,460
of you are willing to help make it

00:29:58,460 --> 00:30:02,780
happen

00:30:00,460 --> 00:30:06,740
cool okay that's fine

00:30:02,780 --> 00:30:09,170
cool okay then does anybody have any

00:30:06,740 --> 00:30:10,430
more questions thoughts if not good I'll

00:30:09,170 --> 00:30:12,290
guess I'll have to start a mailing this

00:30:10,430 --> 00:30:15,670
for at least you care week up your hands

00:30:12,290 --> 00:30:15,670
up oh this one sorry

00:30:16,990 --> 00:30:26,980
hello okay what I'd like to say is from

00:30:23,510 --> 00:30:31,780
a user point of view what about

00:30:26,980 --> 00:30:35,030
stability and security of these

00:30:31,780 --> 00:30:36,890
flat-pack pega trees that'll be

00:30:35,030 --> 00:30:39,380
something which we will have to look at

00:30:36,890 --> 00:30:42,860
so the the assumption that I'm going

00:30:39,380 --> 00:30:45,830
into with this is this is being handled

00:30:42,860 --> 00:30:48,260
by upstreams mostly the flap the way the

00:30:45,830 --> 00:30:50,930
flat hub ecosystem has kind of evolved

00:30:48,260 --> 00:30:52,940
they're encouraging upstream developers

00:30:50,930 --> 00:30:54,830
to contribute directly to flat up so

00:30:52,940 --> 00:30:57,230
it's not like the relationship we have

00:30:54,830 --> 00:30:59,390
right now where you know we package it

00:30:57,230 --> 00:31:01,850
should be upstream doing most of that in

00:30:59,390 --> 00:31:04,930
there right away so in theory it should

00:31:01,850 --> 00:31:07,580
be more responsive to security updates

00:31:04,930 --> 00:31:08,900
should be you know at a relatively good

00:31:07,580 --> 00:31:12,620
standard and whether you getting good

00:31:08,900 --> 00:31:14,030
quality also if something isn't good

00:31:12,620 --> 00:31:16,160
enough you get to mount the ready to the

00:31:14,030 --> 00:31:18,410
developer so you know that might be a

00:31:16,160 --> 00:31:20,210
good thing I'm not saying it's going to

00:31:18,410 --> 00:31:22,250
be better than the coven you know that

00:31:20,210 --> 00:31:25,460
that's that's something this we'll have

00:31:22,250 --> 00:31:27,110
to find out and and that's actually

00:31:25,460 --> 00:31:29,870
something I worry about too will be

00:31:27,110 --> 00:31:32,360
users expectations with that you know

00:31:29,870 --> 00:31:33,830
right now you download openSUSE you know

00:31:32,360 --> 00:31:35,990
who to blame when it doesn't work it's

00:31:33,830 --> 00:31:37,520
open suitors for as long as you're not

00:31:35,990 --> 00:31:38,660
pulling stuff from a random OBS project

00:31:37,520 --> 00:31:41,330
but you know if you're putting stuff in

00:31:38,660 --> 00:31:44,060
my meme path we both it's our fault with

00:31:41,330 --> 00:31:45,980
this split how do we make sure users

00:31:44,060 --> 00:31:48,290
know who to turn to when it doesn't work

00:31:45,980 --> 00:31:50,000
you know as we stopped up our bugzilla

00:31:48,290 --> 00:31:52,730
getting full of stuff about someone

00:31:50,000 --> 00:31:55,820
else's application that there's no

00:31:52,730 --> 00:31:57,230
there's also another point and it's I

00:31:55,820 --> 00:32:03,220
see

00:31:57,230 --> 00:32:06,710
right now I see inexperience as a target

00:32:03,220 --> 00:32:09,100
because you just 7os you just need to

00:32:06,710 --> 00:32:11,810
install one or two applications and

00:32:09,100 --> 00:32:14,690
experience users also we have their

00:32:11,810 --> 00:32:18,410
tenth or twentieth device and don't want

00:32:14,690 --> 00:32:25,160
to set it up again and this is something

00:32:18,410 --> 00:32:27,710
but but I do not see yet the way zhuzh

00:32:25,160 --> 00:32:31,880
is set up right now disappearing with

00:32:27,710 --> 00:32:35,650
rpms and and having the ability to

00:32:31,880 --> 00:32:39,020
install any package you want or

00:32:35,650 --> 00:32:41,780
uninstall it again like it is right now

00:32:39,020 --> 00:32:44,480
I said what I'm not suggesting we change

00:32:41,780 --> 00:32:48,650
the world overnight you know no no yeah

00:32:44,480 --> 00:32:50,660
so you know I can see the I can see the

00:32:48,650 --> 00:32:51,920
possible future where we start dropping

00:32:50,660 --> 00:32:54,470
packages because they don't make sense

00:32:51,920 --> 00:32:56,150
any yeah I can also see perhaps more

00:32:54,470 --> 00:32:59,000
soon than that a possible future where

00:32:56,150 --> 00:33:00,770
we we could end up segmenting that kind

00:32:59,000 --> 00:33:02,630
of stuff away like you know let's

00:33:00,770 --> 00:33:05,060
imagine four or five years from now you

00:33:02,630 --> 00:33:06,980
know we've all come together and produce

00:33:05,060 --> 00:33:09,470
this thing in it you know it becomes

00:33:06,980 --> 00:33:11,600
more popular as a desktop then

00:33:09,470 --> 00:33:12,710
tumbleweed or leap as a desktop so they

00:33:11,600 --> 00:33:14,420
would still be tumbleweed leave them

00:33:12,710 --> 00:33:17,300
maybe there would still be tumbleweed as

00:33:14,420 --> 00:33:20,240
a desktop but the micros desktop is you

00:33:17,300 --> 00:33:22,010
know the big one of the family when we

00:33:20,240 --> 00:33:24,500
reached that point I could see as

00:33:22,010 --> 00:33:28,820
potentially doing some fancy stuff like

00:33:24,500 --> 00:33:30,770
moving those legacy desktop packages

00:33:28,820 --> 00:33:32,810
building them differently not having

00:33:30,770 --> 00:33:34,460
them as part of staging you know sin

00:33:32,810 --> 00:33:36,980
because there wouldn't be a core part of

00:33:34,460 --> 00:33:38,390
the district or therefore they wouldn't

00:33:36,980 --> 00:33:39,920
be slowing staging down therefore we

00:33:38,390 --> 00:33:42,800
just start getting some of those build

00:33:39,920 --> 00:33:44,510
time benefits and stuff so yeah you see

00:33:42,800 --> 00:33:46,460
where the road goes but yeah I'm not

00:33:44,510 --> 00:33:49,160
expecting this to change everything and

00:33:46,460 --> 00:33:52,090
yeah no way I like I like even

00:33:49,160 --> 00:33:52,090
tumbleweed too much I'm

00:34:00,120 --> 00:34:06,760
how would you um address box for plat

00:34:04,750 --> 00:34:10,179
facts

00:34:06,760 --> 00:34:13,980
how would you address bugs for flat

00:34:10,179 --> 00:34:17,080
packs for basically for the per desktop

00:34:13,980 --> 00:34:20,740
how would you drift bugs yeah because

00:34:17,080 --> 00:34:22,210
it's not openSUSE yeah yea like I said

00:34:20,740 --> 00:34:23,919
like I said that's kind of an open

00:34:22,210 --> 00:34:25,629
question I don't have a great answer to

00:34:23,919 --> 00:34:27,330
I this is what I one of the things I

00:34:25,629 --> 00:34:31,270
would look at while we're doing this

00:34:27,330 --> 00:34:32,740
like you know it's I mean if I remember

00:34:31,270 --> 00:34:34,540
correctly I'm a little bit rusty with

00:34:32,740 --> 00:34:38,619
gnome software because I uninstalled it

00:34:34,540 --> 00:34:41,230
from this machine yeah but if I remember

00:34:38,619 --> 00:34:44,230
right when you have gnome software

00:34:41,230 --> 00:34:45,609
configured with flat hub it does have a

00:34:44,230 --> 00:34:47,379
bug reporting link in there because

00:34:45,609 --> 00:34:49,839
gnome software is basically looking like

00:34:47,379 --> 00:34:52,929
an app store you know it even has kind

00:34:49,839 --> 00:34:55,179
of the whole search and stuff and when

00:34:52,929 --> 00:34:56,950
you're pulling it from our repos you're

00:34:55,179 --> 00:34:58,300
getting all the RPM metadata and it's

00:34:56,950 --> 00:34:59,920
showing the bug reporting link being up

00:34:58,300 --> 00:35:01,690
of Zilla and when you're getting it from

00:34:59,920 --> 00:35:05,140
flat hub I think the bug reporting link

00:35:01,690 --> 00:35:06,790
shoves it to some probably probably the

00:35:05,140 --> 00:35:10,330
github project for something somewhere

00:35:06,790 --> 00:35:11,980
but so you know maybe it's just as

00:35:10,330 --> 00:35:14,220
simple as teaching users that's where

00:35:11,980 --> 00:35:16,920
you go to file bugs about applications

00:35:14,220 --> 00:35:20,020
maybe it's more complicated than that

00:35:16,920 --> 00:35:21,940
yeah dunno but yeah I'd Oh

00:35:20,020 --> 00:35:25,839
maybe we end up doing that as a service

00:35:21,940 --> 00:35:28,630
in the sense of openSUSE bugzilla models

00:35:25,839 --> 00:35:30,490
that stuff and we just have our bobzilla

00:35:28,630 --> 00:35:31,359
sending stuff to everybody else because

00:35:30,490 --> 00:35:33,940
we know where they are

00:35:31,359 --> 00:35:35,770
so maybe maybe that's something the

00:35:33,940 --> 00:35:37,270
community that the project still does

00:35:35,770 --> 00:35:40,750
because we want to make our life easier

00:35:37,270 --> 00:35:42,099
for users yeah so the letter was really

00:35:40,750 --> 00:35:43,599
what I was thinking about you know

00:35:42,099 --> 00:35:46,300
basically giving the customer the same

00:35:43,599 --> 00:35:48,520
guarantee or in the community user but

00:35:46,300 --> 00:35:50,680
not necessarily having to do it in

00:35:48,520 --> 00:35:53,440
everything at souza with our own

00:35:50,680 --> 00:35:56,650
built-in resources the the other thing I

00:35:53,440 --> 00:36:00,010
think we should kind of think about is

00:35:56,650 --> 00:36:04,270
why can't we turn the layers around and

00:36:00,010 --> 00:36:06,640
say ok there is a very stable lockdown

00:36:04,270 --> 00:36:08,330
runtime but just like now even on a

00:36:06,640 --> 00:36:11,810
Windows 10 desktop you can have a full

00:36:08,330 --> 00:36:14,360
Linux subsystem there's still an RPM

00:36:11,810 --> 00:36:16,430
subsystem that you can use if you want

00:36:14,360 --> 00:36:20,510
to and then that's the cool thing you

00:36:16,430 --> 00:36:24,710
could have a leap 15:1 subsystem or you

00:36:20,510 --> 00:36:26,530
could have a stable subsystem on idles

00:36:24,710 --> 00:36:29,930
less twelve that you have to pay for

00:36:26,530 --> 00:36:32,660
yeah but it's it's not necessarily

00:36:29,930 --> 00:36:34,490
bringing all those rpms back to your

00:36:32,660 --> 00:36:38,090
platform the platform is rock-solid

00:36:34,490 --> 00:36:40,580
locked down and yeah transaction updated

00:36:38,090 --> 00:36:40,880
all those things that's an interesting

00:36:40,580 --> 00:36:43,660
idea

00:36:40,880 --> 00:36:45,980
most of the runtimes are kind of

00:36:43,660 --> 00:36:48,440
orientated to a specific desktops act

00:36:45,980 --> 00:36:51,590
like the QT one of them no they do have

00:36:48,440 --> 00:36:54,640
some runtimes for which do get some use

00:36:51,590 --> 00:36:57,020
for like more ornate applications which

00:36:54,640 --> 00:36:59,030
are kind of stupid like the free desktop

00:36:57,020 --> 00:37:00,980
runtime which is basically like an

00:36:59,030 --> 00:37:04,880
entire distribution bundle does the

00:37:00,980 --> 00:37:06,410
runtime if if we if we go down this road

00:37:04,880 --> 00:37:10,040
which I think from the look of things

00:37:06,410 --> 00:37:11,510
some of us are and we really start

00:37:10,040 --> 00:37:14,180
getting kind of looped into this whole

00:37:11,510 --> 00:37:17,270
flat back stuff I can see our way of

00:37:14,180 --> 00:37:18,950
thinking meaning instead of well instead

00:37:17,270 --> 00:37:20,600
of an addition to like stuff like the

00:37:18,950 --> 00:37:21,950
free desktop one time yeah a leap one

00:37:20,600 --> 00:37:23,420
time and a tumbleweed one time might

00:37:21,950 --> 00:37:26,960
make perfect sense to kind of slip in

00:37:23,420 --> 00:37:30,290
there for those non known on KDE

00:37:26,960 --> 00:37:32,210
like uniquely weird stuff so yeah I can

00:37:30,290 --> 00:37:35,590
I could see that kind of thing falling

00:37:32,210 --> 00:37:35,590
out from from this yeah

00:37:39,870 --> 00:37:53,440
any more questions yeah Palace I don't

00:37:50,680 --> 00:37:56,080
see that will be a user of that there

00:37:53,440 --> 00:37:59,470
are many points even pointed here even

00:37:56,080 --> 00:38:03,160
from heart is supported way or even I

00:37:59,470 --> 00:38:05,680
don't see any point having this I mean

00:38:03,160 --> 00:38:06,850
if I want to use a container version of

00:38:05,680 --> 00:38:09,580
something I don't need

00:38:06,850 --> 00:38:13,260
openSUSE unsupported way of doing this

00:38:09,580 --> 00:38:16,600
what I'm thinking as a use case is

00:38:13,260 --> 00:38:18,700
speaking of myself there were some times

00:38:16,600 --> 00:38:23,500
that I would like to have my development

00:38:18,700 --> 00:38:26,890
environment easy and I'm thinking if you

00:38:23,500 --> 00:38:29,260
could have for example micro s however

00:38:26,890 --> 00:38:32,320
you can call it something that I can

00:38:29,260 --> 00:38:34,840
have in VM somewhere in a cloud that is

00:38:32,320 --> 00:38:37,150
small enough so I don't pay much but I

00:38:34,840 --> 00:38:38,920
can here for example my vs code running

00:38:37,150 --> 00:38:40,780
there as a desktop because we are

00:38:38,920 --> 00:38:44,110
talking about micro s desktop so I can

00:38:40,780 --> 00:38:46,720
have a remote desktop containerized in

00:38:44,110 --> 00:38:49,000
that case which is small so again I

00:38:46,720 --> 00:38:51,280
don't pay much dot digitalocean or

00:38:49,000 --> 00:38:54,400
something like that but in the same way

00:38:51,280 --> 00:38:57,670
it gives me a very specific thing so -

00:38:54,400 --> 00:39:02,290
one thing and do it well in my case let

00:38:57,670 --> 00:39:05,320
me develop go lonk apps so something

00:39:02,290 --> 00:39:11,680
lightweight so I think like that I use

00:39:05,320 --> 00:39:15,610
micro SD with some use cases like

00:39:11,680 --> 00:39:18,220
collect feedback from they come from the

00:39:15,610 --> 00:39:21,700
community in that case so yeah something

00:39:18,220 --> 00:39:26,610
that I can run on my raspberry I don't

00:39:21,700 --> 00:39:30,130
want to have petabytes of different like

00:39:26,610 --> 00:39:33,760
chrome applications I don't see any

00:39:30,130 --> 00:39:36,670
point in the UNK apart from just doing

00:39:33,760 --> 00:39:38,730
it once and then just going to the

00:39:36,670 --> 00:39:43,540
forums and saying hey look I ran the

00:39:38,730 --> 00:39:48,220
latest and greatest of stuff that ok

00:39:43,540 --> 00:39:51,330
that's it so I don't see the container

00:39:48,220 --> 00:39:52,860
izing a desktop is a use case

00:39:51,330 --> 00:39:54,480
but we're not talking about containerize

00:39:52,860 --> 00:39:56,700
on the desktop though the desktop

00:39:54,480 --> 00:40:00,390
wouldn't be containerized there wouldn't

00:39:56,700 --> 00:40:05,580
it be a traditional installation on bare

00:40:00,390 --> 00:40:07,890
metal or in a VM running normally it'll

00:40:05,580 --> 00:40:09,840
be micro a so read-only root filesystem

00:40:07,890 --> 00:40:13,020
and lock down but that's not container

00:40:09,840 --> 00:40:15,480
honest the only containerized part

00:40:13,020 --> 00:40:17,370
potentially would be the user facing

00:40:15,480 --> 00:40:19,820
applications so in your case where you

00:40:17,370 --> 00:40:23,160
want to just a development environment

00:40:19,820 --> 00:40:24,750
well just don't install any apps then

00:40:23,160 --> 00:40:25,890
you're not going to have any junk there

00:40:24,750 --> 00:40:28,530
you know you're gonna get basically

00:40:25,890 --> 00:40:30,210
nothing more than you know a fast

00:40:28,530 --> 00:40:32,100
booting system because my career is

00:40:30,210 --> 00:40:34,680
quickly going straight into gnome and

00:40:32,100 --> 00:40:37,770
giving you a terminal and then you can

00:40:34,680 --> 00:40:39,960
do all your stuff in your terminal so if

00:40:37,770 --> 00:40:41,940
you are container izing only the apps

00:40:39,960 --> 00:40:45,720
meaning that they can run everywhere

00:40:41,940 --> 00:40:48,360
then why you need a openSUSE desktop to

00:40:45,720 --> 00:40:50,340
run them because if we do it this way

00:40:48,360 --> 00:40:52,700
it's the best option out there because

00:40:50,340 --> 00:40:54,900
we all of our users can be really lazy

00:40:52,700 --> 00:40:56,550
you know they just deploy mic their

00:40:54,900 --> 00:40:57,870
micro SD f-stop they never have to worry

00:40:56,550 --> 00:40:58,860
about patching it they never have to

00:40:57,870 --> 00:41:00,510
worry about maintaining it they just

00:40:58,860 --> 00:41:01,140
pick them apps and it keeps on rebooting

00:41:00,510 --> 00:41:05,970
all the damn time

00:41:01,140 --> 00:41:08,520
because you know basically the Linux

00:41:05,970 --> 00:41:10,640
desktop to people who don't want to have

00:41:08,520 --> 00:41:13,290
to mess around with the desktop anymore

00:41:10,640 --> 00:41:17,820
that's a problem it's a desktop for non

00:41:13,290 --> 00:41:21,950
desktop users so cool

00:41:17,820 --> 00:41:27,690
two minutes left and last question

00:41:21,950 --> 00:41:28,830
anybody no cool thank you I'll post on

00:41:27,690 --> 00:41:32,420
the factory where the mailing list is

00:41:28,830 --> 00:41:32,420
gonna be for this crazy idea then Thanks

00:41:33,310 --> 00:41:37,019
you

00:41:33,670 --> 00:41:37,019

YouTube URL: https://www.youtube.com/watch?v=ASSkQH9kNa0


