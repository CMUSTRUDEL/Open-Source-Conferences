Title: openSUSE Conference 2019 - SUSE DEVELOPER PROGRAM
Publication date: 2019-05-25
Playlist: openSUSE Conference 2019 💚 🦎
Description: 
	https://media.ccc.de/v/2570-suse-developer-program



LEARN WHAT SUSE IS DOING TO HELP THE DEVELOPERS COMMUNITY
CREATING APPLICATIONS AND SOLUTIONS IN AN EASIER AND QUICKER WAY AND HOW
YOU CAN CONTRIBUTE TO THAT EFFORT!

LEARN WHAT SUSE IS DOING TO HELP THE DEVELOPERS COMMUNITY
CREATING APPLICATIONS AND SOLUTIONS IN AN EASIER AND QUICKER WAY AND HOW
YOU CAN CONTRIBUTE TO THAT EFFORT!

Marco Varlese FSzekely timirnich
Captions: 
	00:00:06,080 --> 00:00:12,799
hello everyone.this that's too early for

00:00:10,740 --> 00:00:12,799
that

00:00:14,280 --> 00:00:19,439
I suppose we are all developers here and

00:00:17,130 --> 00:00:21,599
I mean I'm work from Sousa and I'm here

00:00:19,439 --> 00:00:24,329
today to talk to you about the Sousa

00:00:21,599 --> 00:00:27,630
developer program since it's a newly

00:00:24,329 --> 00:00:28,939
started initiative from Sousa and I hope

00:00:27,630 --> 00:00:31,919
you find it interesting you can

00:00:28,939 --> 00:00:37,320
collaborate and help us and be part of

00:00:31,919 --> 00:00:39,210
the community so just to give you a

00:00:37,320 --> 00:00:43,739
little bit of an introduction why our

00:00:39,210 --> 00:00:46,379
developer important for Sousa well if

00:00:43,739 --> 00:00:48,989
you think about how many developers that

00:00:46,379 --> 00:00:52,109
are in the world you you may think that

00:00:48,989 --> 00:00:55,920
we are in we have enough there was a

00:00:52,109 --> 00:01:00,269
study conducted and it looks like we are

00:00:55,920 --> 00:01:05,700
25 millions in the world sounds quite a

00:01:00,269 --> 00:01:07,350
lot and see we are not enough the reason

00:01:05,700 --> 00:01:10,290
why we are not enough is because the

00:01:07,350 --> 00:01:12,270
amount of complexity that each one of us

00:01:10,290 --> 00:01:16,729
is facing every day is growing and

00:01:12,270 --> 00:01:19,770
growing and growing applications and

00:01:16,729 --> 00:01:22,500
tools ecosystems in general becoming

00:01:19,770 --> 00:01:25,850
much more complex we are keep adding

00:01:22,500 --> 00:01:29,729
abstraction layers to facilitate

00:01:25,850 --> 00:01:33,890
interoperability and sometimes just

00:01:29,729 --> 00:01:33,890
because it's fun to have abstractions

00:01:34,189 --> 00:01:43,619
and also with the adoption of the real

00:01:40,200 --> 00:01:46,130
DevOps lifecycle we are doing a lot of

00:01:43,619 --> 00:01:48,950
automation an automation requires

00:01:46,130 --> 00:01:52,770
integration and it requires work and

00:01:48,950 --> 00:01:55,439
development so we're not just getting

00:01:52,770 --> 00:01:59,759
less to do we're actually getting more

00:01:55,439 --> 00:02:03,119
stuff to do and still interestingly

00:01:59,759 --> 00:02:05,609
enough in recent years everything is

00:02:03,119 --> 00:02:08,220
about the clouds everything runs in the

00:02:05,609 --> 00:02:10,710
clouds and there are new technologies

00:02:08,220 --> 00:02:13,650
out there that are even for developers

00:02:10,710 --> 00:02:15,420
running into the clouds and don't know

00:02:13,650 --> 00:02:19,090
if you're familiar with that but there

00:02:15,420 --> 00:02:21,879
is a new fairly new tool called

00:02:19,090 --> 00:02:24,190
beeps che for those who are familiar

00:02:21,879 --> 00:02:26,250
with the Eclipse IDE Eclipse shades the

00:02:24,190 --> 00:02:30,550
exact same but it runs into the cloud

00:02:26,250 --> 00:02:32,530
it's quite amazing and it it's a it's a

00:02:30,550 --> 00:02:38,950
brand new feeling and experience that

00:02:32,530 --> 00:02:40,890
you can have so sooo say because of all

00:02:38,950 --> 00:02:43,810
this decided to invest into the

00:02:40,890 --> 00:02:46,989
developers and create a program around

00:02:43,810 --> 00:02:50,709
developers currently there are three

00:02:46,989 --> 00:02:53,530
people full-time assigned to us one is

00:02:50,709 --> 00:02:55,750
me just in the middle picture the other

00:02:53,530 --> 00:02:58,540
the other two one is forensic Li is

00:02:55,750 --> 00:03:02,860
based in Finland and the other one is

00:02:58,540 --> 00:03:06,310
team hich is based in Germany and we're

00:03:02,860 --> 00:03:12,129
basically the the developer relationship

00:03:06,310 --> 00:03:15,129
team developer relations as such is a

00:03:12,129 --> 00:03:19,060
team that has been quite an important

00:03:15,129 --> 00:03:22,200
team in many different companies in our

00:03:19,060 --> 00:03:27,069
in our industry for quite some time now

00:03:22,200 --> 00:03:29,260
in fact if you look around and you know

00:03:27,069 --> 00:03:35,590
you're really interested in developers

00:03:29,260 --> 00:03:36,970
programs and what like in andreas was

00:03:35,590 --> 00:03:40,120
talking about in video before some

00:03:36,970 --> 00:03:41,470
videos at developer program Microsoft

00:03:40,120 --> 00:03:44,290
has developer program Cisco's a

00:03:41,470 --> 00:03:47,950
developer program and they all try to

00:03:44,290 --> 00:03:50,139
basically help developers to have a

00:03:47,950 --> 00:03:52,359
better development experience on their

00:03:50,139 --> 00:04:02,799
tools or with their tools or for their

00:03:52,359 --> 00:04:06,190
tools so what is our idea well first of

00:04:02,799 --> 00:04:09,010
all developers like technology so the

00:04:06,190 --> 00:04:13,510
first thing that we are are addressing

00:04:09,010 --> 00:04:16,599
is a superior developer experience being

00:04:13,510 --> 00:04:19,989
that programming language specific like

00:04:16,599 --> 00:04:23,919
imagine Python or go these days right

00:04:19,989 --> 00:04:28,750
it's a it's an even is the new language

00:04:23,919 --> 00:04:30,969
that many are adopting or a very well

00:04:28,750 --> 00:04:32,420
established language like Java and all

00:04:30,969 --> 00:04:35,210
the ecosystems are

00:04:32,420 --> 00:04:38,600
Java and what it's required by

00:04:35,210 --> 00:04:41,050
developers it's not just about

00:04:38,600 --> 00:04:46,520
programming language is also about

00:04:41,050 --> 00:04:47,990
methodologies before people were writing

00:04:46,520 --> 00:04:49,850
an application running on a single

00:04:47,990 --> 00:04:52,190
machine then we started seeing

00:04:49,850 --> 00:04:56,000
client-server type of methodologies then

00:04:52,190 --> 00:04:59,360
multi-tier then clouds now we're talking

00:04:56,000 --> 00:05:02,720
about containers micro-services each one

00:04:59,360 --> 00:05:05,840
of those have different needs and we

00:05:02,720 --> 00:05:09,560
need to help those developers with their

00:05:05,840 --> 00:05:12,800
needs and then there is yet another

00:05:09,560 --> 00:05:16,010
abstraction in all these use cases or

00:05:12,800 --> 00:05:17,890
what we call verticals so you can

00:05:16,010 --> 00:05:20,420
imagine developers work in different

00:05:17,890 --> 00:05:24,170
industry segments so there are the

00:05:20,420 --> 00:05:25,730
developers that work in reality business

00:05:24,170 --> 00:05:29,480
or the guys that work in the automotive

00:05:25,730 --> 00:05:33,740
or people that have to do with big data

00:05:29,480 --> 00:05:39,620
machine learning there are tons of it

00:05:33,740 --> 00:05:43,310
out there and obviously developers that

00:05:39,620 --> 00:05:44,780
are facing the needs of I did assign

00:05:43,310 --> 00:05:48,530
this for example as a very different

00:05:44,780 --> 00:05:50,120
need from a developer that's an IOT

00:05:48,530 --> 00:05:56,840
developer working on some embedded

00:05:50,120 --> 00:05:59,530
system what is our main goal with

00:05:56,840 --> 00:06:03,700
regatta ecology is to offer what we call

00:05:59,530 --> 00:06:06,650
day one experience so making sure that

00:06:03,700 --> 00:06:10,310
developers that are using our tools our

00:06:06,650 --> 00:06:12,680
infrastructure our frameworks can have a

00:06:10,310 --> 00:06:17,420
pleasant experience to start with from

00:06:12,680 --> 00:06:20,960
day one that which means easy easy way

00:06:17,420 --> 00:06:25,430
to find the the tools web being those

00:06:20,960 --> 00:06:28,340
packages being those containers many

00:06:25,430 --> 00:06:30,620
developers do not necessarily even care

00:06:28,340 --> 00:06:32,900
about the distinction whether it's a

00:06:30,620 --> 00:06:35,090
container or a package or how do I get

00:06:32,900 --> 00:06:40,490
installed on a distribution they just

00:06:35,090 --> 00:06:42,560
care about using those and obviously

00:06:40,490 --> 00:06:45,370
making sure that those tools are

00:06:42,560 --> 00:06:48,930
properly tested properly validated

00:06:45,370 --> 00:06:54,130
and again paramount important is

00:06:48,930 --> 00:06:56,910
documentation not everyone was to dig

00:06:54,130 --> 00:06:59,590
into the code to see how something works

00:06:56,910 --> 00:07:03,100
many developers that we are addressing

00:06:59,590 --> 00:07:04,540
are not necessarily even developers

00:07:03,100 --> 00:07:07,720
coming from a computer scientist

00:07:04,540 --> 00:07:10,030
perspective or background I did assign

00:07:07,720 --> 00:07:17,470
this may not be a computer scientist at

00:07:10,030 --> 00:07:19,540
all and how do we build this perception

00:07:17,470 --> 00:07:22,750
that we spoke at the beginning like

00:07:19,540 --> 00:07:25,570
about that we care about developers how

00:07:22,750 --> 00:07:27,130
do we reach out to developers well an

00:07:25,570 --> 00:07:29,440
idea that we have and that we just

00:07:27,130 --> 00:07:33,280
basically bootstrapping these days is

00:07:29,440 --> 00:07:38,260
the developer portal is literally a web

00:07:33,280 --> 00:07:41,020
portal where developers can reach out to

00:07:38,260 --> 00:07:44,139
us but also see what we are doing for

00:07:41,020 --> 00:07:47,080
them in that regards that web portal

00:07:44,139 --> 00:07:50,530
will contain trainings material videos

00:07:47,080 --> 00:07:53,410
recordings hopefully even videos that

00:07:50,530 --> 00:07:56,169
are recorded here or other conferences

00:07:53,410 --> 00:08:01,620
around technologies or about anything

00:07:56,169 --> 00:08:06,550
that has to do with open source tools

00:08:01,620 --> 00:08:10,500
infrastructure frameworks another thing

00:08:06,550 --> 00:08:15,220
that we are considering is to have

00:08:10,500 --> 00:08:18,570
podcasts with YouTube videos where

00:08:15,220 --> 00:08:21,160
people again can listen to the experts

00:08:18,570 --> 00:08:26,530
matter experts in certain areas and

00:08:21,160 --> 00:08:31,240
learn about technologies something else

00:08:26,530 --> 00:08:34,479
again is the developer evangelists so we

00:08:31,240 --> 00:08:37,979
need help and there's nothing better

00:08:34,479 --> 00:08:40,870
than having people using our

00:08:37,979 --> 00:08:43,209
distribution like openSUSE talking about

00:08:40,870 --> 00:08:45,250
it talking about technology how you can

00:08:43,209 --> 00:08:46,779
improve it how we how we're doing about

00:08:45,250 --> 00:08:50,320
it

00:08:46,779 --> 00:08:53,110
tools that we have for openSUSE like the

00:08:50,320 --> 00:08:56,620
build build system the build service and

00:08:53,110 --> 00:08:58,710
how they are others that are part of our

00:08:56,620 --> 00:09:01,430
industry but not part

00:08:58,710 --> 00:09:04,680
of our community how can they easily

00:09:01,430 --> 00:09:07,530
integrates their applications with our

00:09:04,680 --> 00:09:12,840
tools so talk about those reach out to

00:09:07,530 --> 00:09:19,740
people and help others use what we

00:09:12,840 --> 00:09:22,530
develop another interesting aspect about

00:09:19,740 --> 00:09:27,270
the developer program is the ecosystem

00:09:22,530 --> 00:09:30,540
alignment so we would like to basically

00:09:27,270 --> 00:09:33,530
make sure that we drive the adoption of

00:09:30,540 --> 00:09:37,140
what we consider the onboarding levers

00:09:33,530 --> 00:09:40,920
openSUSE distributions is the most

00:09:37,140 --> 00:09:49,830
important ones for us like being

00:09:40,920 --> 00:09:53,180
tumbleweed leap Kubek and I said and I

00:09:49,830 --> 00:09:57,510
discussed this with some of you today

00:09:53,180 --> 00:09:59,760
helping people that are new to the

00:09:57,510 --> 00:10:01,740
openSUSE world to build their

00:09:59,760 --> 00:10:05,160
application to host their application to

00:10:01,740 --> 00:10:06,780
create packages for their application so

00:10:05,160 --> 00:10:14,250
that basically our ecosystem we can only

00:10:06,780 --> 00:10:18,090
grow by doing that now very very briefly

00:10:14,250 --> 00:10:19,740
I would like to talk to you about what

00:10:18,090 --> 00:10:23,430
we are doing from a technology

00:10:19,740 --> 00:10:26,160
perspective to address the the first

00:10:23,430 --> 00:10:28,890
needs that we saw or that that we feel

00:10:26,160 --> 00:10:31,640
are important for developers so the

00:10:28,890 --> 00:10:34,800
first one as I said is the Diigo

00:10:31,640 --> 00:10:36,870
ecosystem there are more and more

00:10:34,800 --> 00:10:40,140
applications being written in go some

00:10:36,870 --> 00:10:44,250
existing application being ported to go

00:10:40,140 --> 00:10:47,040
and the there are caveats around it

00:10:44,250 --> 00:10:49,380
above all for people like like us that

00:10:47,040 --> 00:10:52,230
would like to basically create packages

00:10:49,380 --> 00:10:57,510
to in to have first-class citizens in

00:10:52,230 --> 00:10:59,960
the distribution go has dee-dee-dee-dee

00:10:57,510 --> 00:11:02,690
caveats that all dependencies are pulled

00:10:59,960 --> 00:11:06,240
has sources and then built locally

00:11:02,690 --> 00:11:08,730
obviously we know what are the troubles

00:11:06,240 --> 00:11:10,680
with that and for that reason we are

00:11:08,730 --> 00:11:13,140
basically building a service in

00:11:10,680 --> 00:11:18,800
in a in our build service that can help

00:11:13,140 --> 00:11:21,810
with the module dependencies and create

00:11:18,800 --> 00:11:23,790
requires inspect files based on the

00:11:21,810 --> 00:11:27,029
dependencies so again something that can

00:11:23,790 --> 00:11:29,010
help go application developer

00:11:27,029 --> 00:11:35,399
understanding and getting closer to our

00:11:29,010 --> 00:11:39,330
environment that half forty's is driven

00:11:35,399 --> 00:11:42,390
by Jeff Kovalchuk which again is a Suzy

00:11:39,330 --> 00:11:47,330
employee it's based in the US the other

00:11:42,390 --> 00:11:51,060
one is tackling the Java code system and

00:11:47,330 --> 00:11:53,160
that is done by Friedrich which I see

00:11:51,060 --> 00:11:57,750
here in the room that's just sitting

00:11:53,160 --> 00:12:00,860
there is being is being working on

00:11:57,750 --> 00:12:05,100
basically making sure that we can have

00:12:00,860 --> 00:12:08,100
marvin working in in OBS bootstrap dino

00:12:05,100 --> 00:12:11,430
PS took a lot of effort to to make it

00:12:08,100 --> 00:12:19,200
working and I suppose there's still a

00:12:11,430 --> 00:12:22,740
lot to be done what's what is is to do

00:12:19,200 --> 00:12:24,570
with with the Java code system is it's

00:12:22,740 --> 00:12:26,490
really really cool that you know a Java

00:12:24,570 --> 00:12:29,760
developer on his own machine you know

00:12:26,490 --> 00:12:31,610
has Marvin and can really basically have

00:12:29,760 --> 00:12:35,250
all these dependencies automatically

00:12:31,610 --> 00:12:37,140
sorted out by the infrastructure but

00:12:35,250 --> 00:12:39,450
like once again it becomes much more

00:12:37,140 --> 00:12:42,750
complicated when we want to do this in

00:12:39,450 --> 00:12:44,970
OBS for all the reasons that we all know

00:12:42,750 --> 00:12:47,900
there are all very good reasons but we

00:12:44,970 --> 00:12:47,900
need to address those needs

00:12:48,950 --> 00:12:58,650
the other one is vagrant vagrant is has

00:12:56,190 --> 00:13:00,450
been pretty much the de facto standard

00:12:58,650 --> 00:13:03,960
in up the upstream open-source

00:13:00,450 --> 00:13:07,500
communities for accessing

00:13:03,960 --> 00:13:10,170
vm's boxes on the fly it's also

00:13:07,500 --> 00:13:12,630
integrated in many upstream projects

00:13:10,170 --> 00:13:15,300
like in Jenkins pipeline to basically

00:13:12,630 --> 00:13:19,200
tests on different distribution specific

00:13:15,300 --> 00:13:20,730
third-party applications and so when we

00:13:19,200 --> 00:13:22,910
looked at that we thought that it would

00:13:20,730 --> 00:13:26,730
be really cool if we could basically

00:13:22,910 --> 00:13:29,100
address this need in and building it up

00:13:26,730 --> 00:13:31,980
in our own pipeline that we already have

00:13:29,100 --> 00:13:33,980
in in the build system to make sure that

00:13:31,980 --> 00:13:36,870
every time for example tumbleweed image

00:13:33,980 --> 00:13:41,100
creates a snapshot or tumbleweed in

00:13:36,870 --> 00:13:44,190
image has a snapshot created we also get

00:13:41,100 --> 00:13:48,180
a new vagrant image and that's exactly

00:13:44,190 --> 00:13:50,550
what's happening these days the box that

00:13:48,180 --> 00:13:53,340
is produced is also fully tested in a

00:13:50,550 --> 00:13:58,110
Jenkins pipeline and then if all tests

00:13:53,340 --> 00:13:59,670
pass the the newly box gets linked

00:13:58,110 --> 00:14:02,580
automatically to Hershey Corp

00:13:59,670 --> 00:14:04,920
background cloud so whoever uses vagrant

00:14:02,580 --> 00:14:07,590
these days can do the magic vector they

00:14:04,920 --> 00:14:09,980
need vagrant up bigger and SSH and it

00:14:07,590 --> 00:14:13,590
gets a new tumbleweed image in no time

00:14:09,980 --> 00:14:16,560
it's pretty and it's pretty cool and it

00:14:13,590 --> 00:14:18,570
makes the experience from Adana multi to

00:14:16,560 --> 00:14:22,680
be much easier because now developers

00:14:18,570 --> 00:14:24,230
can test I can also not necessarily just

00:14:22,680 --> 00:14:28,820
ask but also develop with our

00:14:24,230 --> 00:14:32,870
distributions in literally five minutes

00:14:28,820 --> 00:14:36,420
and then there is one once again another

00:14:32,870 --> 00:14:39,560
item that we are interested in its the

00:14:36,420 --> 00:14:41,670
WS l is the windows subsystem for Linux

00:14:39,560 --> 00:14:44,390
why we are interested in it is because

00:14:41,670 --> 00:14:47,040
it's really helping us to build that

00:14:44,390 --> 00:14:49,290
bridge that these days a lot of

00:14:47,040 --> 00:14:50,970
developers use Windows as as a

00:14:49,290 --> 00:14:54,300
destination where they basically use

00:14:50,970 --> 00:14:57,390
their development tools IDs on Windows

00:14:54,300 --> 00:15:01,590
and then in the past day to use specific

00:14:57,390 --> 00:15:05,150
other tools or infrastructure to deploy

00:15:01,590 --> 00:15:08,370
or try out their application on Linux

00:15:05,150 --> 00:15:10,890
wsl is somehow bridging that gap and

00:15:08,370 --> 00:15:13,500
helping us and and and and we can

00:15:10,890 --> 00:15:17,810
basically show how cool it could be to

00:15:13,500 --> 00:15:17,810
run application on Linux once again

00:15:18,400 --> 00:15:28,490
so finally few thick few takeaways well

00:15:24,830 --> 00:15:31,360
we are the new king makers in the

00:15:28,490 --> 00:15:33,650
industry it has been recognized that

00:15:31,360 --> 00:15:37,490
decisions that before were pushed from

00:15:33,650 --> 00:15:41,200
top to bottom around IT or our own

00:15:37,490 --> 00:15:47,240
processes and how to do things that

00:15:41,200 --> 00:15:49,160
direction has changed now high-level

00:15:47,240 --> 00:15:50,870
management is listening to developers

00:15:49,160 --> 00:15:52,250
because they are the ones using the

00:15:50,870 --> 00:15:55,070
technology they're the ones that are on

00:15:52,250 --> 00:15:58,670
on the field using them understanding

00:15:55,070 --> 00:16:05,420
them better and so we are finally being

00:15:58,670 --> 00:16:08,780
listened to and one last thing please

00:16:05,420 --> 00:16:11,210
reach out we have our ideas about how to

00:16:08,780 --> 00:16:14,870
improve developer experience on our

00:16:11,210 --> 00:16:17,390
distributions but I cannot know

00:16:14,870 --> 00:16:21,890
everything so it's very important that

00:16:17,390 --> 00:16:26,510
you let us know ride me ping me I'm on

00:16:21,890 --> 00:16:29,000
freenode my email list before with ideas

00:16:26,510 --> 00:16:30,380
with pain points what would you like to

00:16:29,000 --> 00:16:33,920
see what do you think is not working

00:16:30,380 --> 00:16:36,040
today and we just want to make it things

00:16:33,920 --> 00:16:38,700
better for you all of you and all of us

00:16:36,040 --> 00:16:43,709
thank you

00:16:38,700 --> 00:16:43,709
[Applause]

00:16:44,360 --> 00:16:49,670
if you have any questions I think couple

00:16:47,340 --> 00:16:49,670
of minutes

00:17:02,380 --> 00:17:11,710
mark a quick question how many of the

00:17:06,960 --> 00:17:13,630
developer tools are cross-platform both

00:17:11,710 --> 00:17:18,070
from an architecture perspective but

00:17:13,630 --> 00:17:21,250
also from an OS perspective so rather

00:17:18,070 --> 00:17:25,240
than limiting it you know how can we

00:17:21,250 --> 00:17:27,280
make sure that what we work on the tools

00:17:25,240 --> 00:17:32,770
that we have available can work across

00:17:27,280 --> 00:17:34,810
as wide an area as possible I would say

00:17:32,770 --> 00:17:38,440
we're doing a pretty good job in that

00:17:34,810 --> 00:17:40,990
perspective already most of the tools

00:17:38,440 --> 00:17:45,700
should should be an our platform

00:17:40,990 --> 00:17:49,480
agnostic per se I think what we could do

00:17:45,700 --> 00:17:52,420
better at is to possibly work on the

00:17:49,480 --> 00:17:55,300
performance aspect of how tools behave

00:17:52,420 --> 00:17:57,640
on different platforms and hopefully we

00:17:55,300 --> 00:17:59,350
can work with people like yourself to

00:17:57,640 --> 00:18:01,210
understand platforms better to make

00:17:59,350 --> 00:18:03,790
things working better on on specific

00:18:01,210 --> 00:18:04,900
platforms but as such I think we already

00:18:03,790 --> 00:18:08,890
have

00:18:04,900 --> 00:18:13,750
the very good attitude so always make

00:18:08,890 --> 00:18:27,490
sure that tools are built for x86 or arm

00:18:13,750 --> 00:18:31,840
platform PowerPC etc which one it is

00:18:27,490 --> 00:18:34,890
this multi platform yes we have both for

00:18:31,840 --> 00:18:34,890
x86 and arm yep

00:18:40,190 --> 00:18:43,370

YouTube URL: https://www.youtube.com/watch?v=KoQtP7ylbJw


