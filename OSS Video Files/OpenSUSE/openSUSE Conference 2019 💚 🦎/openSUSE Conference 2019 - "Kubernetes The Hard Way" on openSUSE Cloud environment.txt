Title: openSUSE Conference 2019 - "Kubernetes The Hard Way" on openSUSE Cloud environment
Publication date: 2019-05-24
Playlist: openSUSE Conference 2019 ðŸ’š ðŸ¦Ž
Description: 
	https://media.ccc.de/v/2456-kubernetes-the-hard-way-on-opensuse-cloud-environment

Let's build your own cloud

"Kubernetes" is one of the most popular and famous container orchestration open source software. And now, there are so many Kubernetes environments and deployment tools such as SUSE CaaS Platform, minikube, kubeadm, Rancher, GKE/AKS/EKS, etc. So, we can use or build a Kubernetes cluster with them very easily. However, it also prevents opportunities to understand Kubernetes technologies themselves from people who want to know the architecture itself. Therefore, if a Kubernetes cluster gets something wrong, it would be tough challenge to resolve it without such knowledge. For such a situation, here is a very good exercise document - "Kubernetes The Hard Way[0]" which is a tutorial for setting up Kubernetes the hard way on Google Cloud Platform(GCP). People can learn internal architecture of Kubernetes from that.

In this session, attendees will get an opportunity to know how to set up a Kubernetes cluster on not only GCP but also an openSUSE OpenStack cloud based on the tutorial, and, will get to know its technology deeply.
"Kubernetes The Hard Way"[0] has 14 chapters right now. And it's written for the GCP basically. However, it works on the other clouds (e.g. openSUSE OpenStack Cloud) with some modifications.

[0] https://github.com/kelseyhightower/kubernetes-the-hard-way
Kubernetes The Hard Way outlines::
1. Prerequisites
2. Installing the Client Tools
3. Provisioning Compute Resources
4. Provisioning a CA and Generating TLS Certificates
5. Generating Kubernetes Configuration Files for Authentication
6. Generating the Data Encryption Config and Key
7. Bootstrapping the etcd Cluster
8. Bootstrapping the Kubernetes Control Plane
9. Bootstrapping the Kubernetes Worker Nodes
10. Configuring kubectl for Remote Access
11. Provisioning Pod Network Routes
12. Deploying the DNS Cluster Add-on
13. Smoke Test
14. Cleaning Up

"Kubernetes" is one of the most popular and famous container orchestration open source software. And now, there are so many Kubernetes environments and deployment tools such as SUSE CaaS Platform, minikube, kubeadm, Rancher, GKE/AKS/EKS, etc. So, we can use or build a Kubernetes cluster with them very easily. However, it also prevents opportunities to understand Kubernetes technologies themselves from people who want to know the architecture itself. Therefore, if a Kubernetes cluster gets something wrong, it would be tough challenge to resolve it without such knowledge. For such a situation, here is a very good exercise document - "Kubernetes The Hard Way[0]" which is a tutorial for setting up Kubernetes the hard way on Google Cloud Platform(GCP). People can learn internal architecture of Kubernetes from that.

In this session, attendees will get an opportunity to know how to set up a Kubernetes cluster on not only GCP but also an openSUSE OpenStack cloud based on the tutorial, and, will get to know its technology deeply.
"Kubernetes The Hard Way"[0] has 14 chapters right now. And it's written for the GCP basically. However, it works on the other clouds (e.g. openSUSE OpenStack Cloud) with some modifications.

[0] https://github.com/kelseyhightower/kubernetes-the-hard-way
Kubernetes The Hard Way outlines::
1. Prerequisites
2. Installing the Client Tools
3. Provisioning Compute Resources
4. Provisioning a CA and Generating TLS Certificates
5. Generating Kubernetes Configuration Files for Authentication
6. Generating the Data Encryption Config and Key
7. Bootstrapping the etcd Cluster
8. Bootstrapping the Kubernetes Control Plane
9. Bootstrapping the Kubernetes Worker Nodes
10. Configuring kubectl for Remote Access
11. Provisioning Pod Network Routes
12. Deploying the DNS Cluster Add-on
13. Smoke Test
14. Cleaning Up

Masayuki Igawa
Captions: 
	00:00:05,910 --> 00:00:13,930
okay so I talked about kuba rates the

00:00:12,549 --> 00:00:16,980
hard way

00:00:13,930 --> 00:00:24,579
I'm misaki ego I'm working for Caesar

00:00:16,980 --> 00:00:29,669
right now and my SNS things or email

00:00:24,579 --> 00:00:35,860
addresses on that and also this slide

00:00:29,669 --> 00:00:39,820
can be downloaded it at URL this is my

00:00:35,860 --> 00:00:47,250
github account and you can find this PDF

00:00:39,820 --> 00:00:52,150
file on that page yeah let's get started

00:00:47,250 --> 00:00:55,210
yeah here the agenda Who am I today's

00:00:52,150 --> 00:00:58,810
goal and what the kubernetes is the hard

00:00:55,210 --> 00:01:01,570
way hard way yes and the kubernetes the

00:00:58,810 --> 00:01:05,979
hard way on gcp Google cloud platform

00:01:01,570 --> 00:01:09,940
and also I also run the kubernetes the

00:01:05,979 --> 00:01:16,180
hard way on OpenStack cloud and the

00:01:09,940 --> 00:01:17,760
conclusion a disclaimer and if well Who

00:01:16,180 --> 00:01:21,520
am I Who I am

00:01:17,760 --> 00:01:24,850
so I'm working for Sousa as I already

00:01:21,520 --> 00:01:31,000
mentioned but a previously I worked at

00:01:24,850 --> 00:01:36,150
HPE here at Parker enterprise I also I

00:01:31,000 --> 00:01:42,280
was in traditional IT Japanese company

00:01:36,150 --> 00:01:45,030
for decades and for now I'm working for

00:01:42,280 --> 00:01:49,330
a scissor for OpenStack cloud product

00:01:45,030 --> 00:01:51,250
team and I'm in the quirky and German

00:01:49,330 --> 00:01:55,150
engineering team right now

00:01:51,250 --> 00:01:58,330
and the job is that o is shinnojo

00:01:55,150 --> 00:02:03,150
a senior software engineer and I also

00:01:58,330 --> 00:02:07,750
open source programmer I'm working for

00:02:03,150 --> 00:02:11,950
OpenStack QA upstream things and also

00:02:07,750 --> 00:02:17,769
downstream things and I also corridor

00:02:11,950 --> 00:02:22,760
like these product softwares project

00:02:17,769 --> 00:02:26,359
yeah here's my related book and the

00:02:22,760 --> 00:02:30,590
hobby is their biking clouds building

00:02:26,359 --> 00:02:31,310
clouds OpenStack and a diet that's the

00:02:30,590 --> 00:02:33,700
other thing

00:02:31,310 --> 00:02:36,469
and the today's goal is like this

00:02:33,700 --> 00:02:37,849
understand the kakugane it is the hard

00:02:36,469 --> 00:02:40,250
way yeah

00:02:37,849 --> 00:02:42,469
what is the kubernetes ah good one it's

00:02:40,250 --> 00:02:45,409
the hard way I will talk about I will

00:02:42,469 --> 00:02:50,120
explain about that later and I motivate

00:02:45,409 --> 00:02:58,239
to do kubernetes hard way by yourself if

00:02:50,120 --> 00:03:02,359
you want a high hope I hope so that so

00:02:58,239 --> 00:03:06,349
do you feel like about kubernetes when

00:03:02,359 --> 00:03:09,650
you use the kubernetes cluster with the

00:03:06,349 --> 00:03:15,230
development tools like poop could be a

00:03:09,650 --> 00:03:19,189
Down or mini proof Rancho or gke or aks

00:03:15,230 --> 00:03:20,209
like this it's like a magic what's going

00:03:19,189 --> 00:03:24,189
on inside

00:03:20,209 --> 00:03:28,699
maybe yeah it's really easy to build

00:03:24,189 --> 00:03:30,829
with cavada more like that deployment -

00:03:28,699 --> 00:03:35,629
it's really good

00:03:30,829 --> 00:03:38,479
awesome great but we cannot understand

00:03:35,629 --> 00:03:44,780
the internally of the internal of the

00:03:38,479 --> 00:03:48,409
kubernetes itself so so I feel like it's

00:03:44,780 --> 00:03:52,849
like a magic and what's going on I do so

00:03:48,409 --> 00:03:55,310
I'd like to know the internally so if

00:03:52,849 --> 00:03:58,549
you want to know that its components and

00:03:55,310 --> 00:04:01,400
architecture I already said that the to

00:03:58,549 --> 00:04:05,599
know the internal humanity kubernetes

00:04:01,400 --> 00:04:10,729
thing and also you if you want to debug

00:04:05,599 --> 00:04:12,040
it and also build a kubernetes cluster

00:04:10,729 --> 00:04:19,519
as you like

00:04:12,040 --> 00:04:23,120
as you want or field that - easy like

00:04:19,519 --> 00:04:25,580
with using the Koopa Troopa

00:04:23,120 --> 00:04:30,860
or some other development tools it

00:04:25,580 --> 00:04:33,950
should be very easy but it's too easy

00:04:30,860 --> 00:04:39,800
and to understand the coupon it is in

00:04:33,950 --> 00:04:42,590
detail it's I think it's very hard to

00:04:39,800 --> 00:04:45,290
understand using the coupon it's

00:04:42,590 --> 00:04:49,250
deployment tools because it's really

00:04:45,290 --> 00:04:53,930
easy easy step like one command or two

00:04:49,250 --> 00:04:56,870
of command line that's it so if you want

00:04:53,930 --> 00:05:01,070
to know if you want to understand the

00:04:56,870 --> 00:05:03,440
community itself detail or if you want

00:05:01,070 --> 00:05:08,980
to use the coupon it's closer in a

00:05:03,440 --> 00:05:13,790
harder way is a coupon it's the hard way

00:05:08,980 --> 00:05:15,010
so do you know the coupon is hard way

00:05:13,790 --> 00:05:21,740
already

00:05:15,010 --> 00:05:24,950
how many Oh someone knows good so but

00:05:21,740 --> 00:05:31,220
I'll talk about come on it's the hard

00:05:24,950 --> 00:05:35,300
way generally your basic so this is yeah

00:05:31,220 --> 00:05:38,000
I'll talk about this so what is a coupon

00:05:35,300 --> 00:05:41,530
it's the hard way so it's a bootstrap

00:05:38,000 --> 00:05:47,240
kubernetes the hard way on the GCP cloud

00:05:41,530 --> 00:05:50,540
DCP but there is no script actually so

00:05:47,240 --> 00:05:54,770
there is no automatic command or like

00:05:50,540 --> 00:05:59,570
that so tutorial for kubernetes and it's

00:05:54,770 --> 00:06:03,470
a Apache License version 2 and it's it's

00:05:59,570 --> 00:06:10,520
a just document documentation so took me

00:06:03,470 --> 00:06:13,460
to consists of 14 chapters is the

00:06:10,520 --> 00:06:18,830
component versions like this the

00:06:13,460 --> 00:06:23,510
kubernetes 1.12 it's that actually the

00:06:18,830 --> 00:06:27,290
latest is now 1.14 but if storing

00:06:23,510 --> 00:06:32,180
kubernetes is one point twelve point

00:06:27,290 --> 00:06:34,660
zero and container de and the divisor

00:06:32,180 --> 00:06:38,510
and the CNI container networking

00:06:34,660 --> 00:06:41,420
audacity and a quote NS is version is

00:06:38,510 --> 00:06:43,030
like this so actually two voices version

00:06:41,420 --> 00:06:53,979
is

00:06:43,030 --> 00:06:56,979
get ya the outline is like this this is

00:06:53,979 --> 00:06:57,370
a 14th chapter of kubernetes the hard

00:06:56,979 --> 00:07:00,569
way

00:06:57,370 --> 00:07:03,639
the first is a pre requisites and

00:07:00,569 --> 00:07:06,900
ensuring the client source and the

00:07:03,639 --> 00:07:12,389
provisioning the compute resources using

00:07:06,900 --> 00:07:15,550
Google cloud platform and the provision

00:07:12,389 --> 00:07:19,800
certificates making in a certificates

00:07:15,550 --> 00:07:23,520
were putting the putting it and

00:07:19,800 --> 00:07:28,080
generating some configuration files for

00:07:23,520 --> 00:07:33,659
authentication and the generating data

00:07:28,080 --> 00:07:40,319
for some configuration on the keys and

00:07:33,659 --> 00:07:43,150
from number seven chapter chapter 7 we

00:07:40,319 --> 00:07:47,830
actually booster are taking

00:07:43,150 --> 00:07:51,250
bootstrapping that was Lee and control

00:07:47,830 --> 00:07:56,770
frame and work not work on us

00:07:51,250 --> 00:08:00,729
and at the number-10 configuring to the

00:07:56,770 --> 00:08:03,789
conturo for remote access yeah making

00:08:00,729 --> 00:08:09,280
the setting fire or configuration files

00:08:03,789 --> 00:08:11,830
a sitting vice and provisioning the

00:08:09,280 --> 00:08:16,960
portal network reuters routers and the

00:08:11,830 --> 00:08:21,280
deploying the dns cluster and then

00:08:16,960 --> 00:08:25,599
number 13 smoke test and the number 14

00:08:21,280 --> 00:08:30,130
is very important because if we don't

00:08:25,599 --> 00:08:37,419
put in enough like the things we need to

00:08:30,130 --> 00:08:42,399
pay a lot of money to Google and this is

00:08:37,419 --> 00:08:46,270
a first one pretty requisite I don't

00:08:42,399 --> 00:08:50,200
know you can see the cost the cost is

00:08:46,270 --> 00:08:51,770
very cheap actually if you want to use

00:08:50,200 --> 00:08:55,810
[Music]

00:08:51,770 --> 00:09:02,420
Google cloud platform it's only about

00:08:55,810 --> 00:09:06,980
5.30 39 per day dollars for that it's

00:09:02,420 --> 00:09:11,660
not so expensive I think and we also

00:09:06,980 --> 00:09:16,820
used I also used the G cloud the Google

00:09:11,660 --> 00:09:19,490
cloud platform yeah actually the

00:09:16,820 --> 00:09:22,750
kubernetes hard way is what's on the

00:09:19,490 --> 00:09:29,660
Google cloud platform platform basically

00:09:22,750 --> 00:09:35,060
but I could run the Google it's the hard

00:09:29,660 --> 00:09:41,360
way on my OpenStack private cloud with

00:09:35,060 --> 00:09:43,550
some tricks and in but first I will talk

00:09:41,360 --> 00:09:47,450
about a Google cloud form on the Google

00:09:43,550 --> 00:09:52,280
platform things and I used any one

00:09:47,450 --> 00:09:59,300
standard one instance is a one be CPU

00:09:52,280 --> 00:10:04,550
and the memory is 3.75 gigabytes by 6

00:09:59,300 --> 00:10:07,640
and I use 4 is 4 3 controller knows and

00:10:04,550 --> 00:10:13,030
3 worker nodes and the class loader

00:10:07,640 --> 00:10:16,820
Barossa I used that so building the

00:10:13,030 --> 00:10:22,010
kubernetes clusters the architecture

00:10:16,820 --> 00:10:27,950
will be like this 3 worker knows it

00:10:22,010 --> 00:10:30,860
contains they that contains your control

00:10:27,950 --> 00:10:36,860
the run C or something other continuity

00:10:30,860 --> 00:10:41,650
or like that and we I also create 3

00:10:36,860 --> 00:10:46,940
controller nodes it contains a SSD and a

00:10:41,650 --> 00:10:51,580
VIP API server or like that and I also

00:10:46,940 --> 00:10:51,580
use a lot of ours on TCP

00:10:53,080 --> 00:11:04,960
so here is a summary on DCP the coupon

00:10:59,270 --> 00:11:09,550
it's the hard way so it's only about 2.5

00:11:04,960 --> 00:11:15,220
hours I mean two and a half hours the

00:11:09,550 --> 00:11:18,970
cost is less than $1 it's very cheap and

00:11:15,220 --> 00:11:23,390
it says a coupon is the hard way but

00:11:18,970 --> 00:11:24,800
just for me it's not so hard way it's

00:11:23,390 --> 00:11:29,210
not so hard

00:11:24,800 --> 00:11:34,340
itself actually I just took two two and

00:11:29,210 --> 00:11:37,640
a half hours that's it yeah actually I

00:11:34,340 --> 00:11:46,750
saw some warnings but yeah I don't care

00:11:37,640 --> 00:11:51,050
about that so okay so that's it but I

00:11:46,750 --> 00:11:57,680
actually wanted to run the Cova nights

00:11:51,050 --> 00:12:04,550
the hard way on my oppas a cloud because

00:11:57,680 --> 00:12:08,420
I so my hobby is building the OpenStack

00:12:04,550 --> 00:12:14,180
or your cloud internally so this is a

00:12:08,420 --> 00:12:20,420
hardware in my house so the less left

00:12:14,180 --> 00:12:24,440
one is my old cloud is a 3-1 new servers

00:12:20,420 --> 00:12:30,680
I bought it very cheap as a second hands

00:12:24,440 --> 00:12:37,450
and I mounted on Lok Sabha

00:12:30,680 --> 00:12:41,800
I voted luck from the IKEA so the right

00:12:37,450 --> 00:12:47,960
right side is a newer one it's very

00:12:41,800 --> 00:12:52,850
small and quiet and low energy so the

00:12:47,960 --> 00:12:59,000
first old one is the advanced program is

00:12:52,850 --> 00:13:04,430
that very noisy and consuming a lot of

00:12:59,000 --> 00:13:08,390
electricity so it means cos T to run

00:13:04,430 --> 00:13:13,960
maintain the suburbs but the newer ones

00:13:08,390 --> 00:13:16,970
are smaller quiet and a low energy and

00:13:13,960 --> 00:13:17,570
performance is also better than the old

00:13:16,970 --> 00:13:22,550
ones

00:13:17,570 --> 00:13:26,899
the its this is like this is a a stroke

00:13:22,550 --> 00:13:30,470
just many three three hundred to ten is

00:13:26,899 --> 00:13:35,480
it the size is it like this not so big

00:13:30,470 --> 00:13:38,120
it's like Intel nook but this is not an

00:13:35,480 --> 00:13:42,620
interlock but that size is almost the

00:13:38,120 --> 00:13:45,800
same it has a so long three point two

00:13:42,620 --> 00:13:50,779
gigabytes and the memory has memory is

00:13:45,800 --> 00:13:57,339
16 gigabytes and the hardware sorry

00:13:50,779 --> 00:14:00,820
necessity is 120 gigabytes and I built

00:13:57,339 --> 00:14:08,870
OpenStack cloud on that right side

00:14:00,820 --> 00:14:11,990
servers I use openSUSE 15 is not latest

00:14:08,870 --> 00:14:16,459
actually but yeah I use that and the

00:14:11,990 --> 00:14:18,440
obstacle is rocky the components is an

00:14:16,459 --> 00:14:19,310
over glass in the Keystone newsroom

00:14:18,440 --> 00:14:25,450
that's it

00:14:19,310 --> 00:14:28,670
it's very small cloud and I follow the

00:14:25,450 --> 00:14:34,959
OpenStack installation guide it's very

00:14:28,670 --> 00:14:39,709
useful and well documented there is no

00:14:34,959 --> 00:14:46,610
program with in the building the cloud

00:14:39,709 --> 00:14:50,000
and I also automated with ansible to

00:14:46,610 --> 00:14:53,870
build the OpenStack cloud the course is

00:14:50,000 --> 00:15:02,810
like that not so cheap it's actually

00:14:53,870 --> 00:15:07,070
expensive for me so so building doing

00:15:02,810 --> 00:15:14,180
that kubernetes hard way in OpenStack

00:15:07,070 --> 00:15:18,200
cloud is some challenges actually so it

00:15:14,180 --> 00:15:22,640
can be run in opposite route I can

00:15:18,200 --> 00:15:27,470
that I could run that but as some

00:15:22,640 --> 00:15:32,810
challenges exist so especially the cost

00:15:27,470 --> 00:15:36,170
is a most program initial and the

00:15:32,810 --> 00:15:39,770
maintenance cost required it's very

00:15:36,170 --> 00:15:44,810
expensive compared to the TCP actually

00:15:39,770 --> 00:15:45,500
and building the OpenStack cloud is also

00:15:44,810 --> 00:15:51,650
hard

00:15:45,500 --> 00:15:55,100
so the I got some programs the main

00:15:51,650 --> 00:16:00,980
program is the control node was unstable

00:15:55,100 --> 00:16:05,300
with SSD so the program is the SSD is

00:16:00,980 --> 00:16:11,510
not good quality what I used so I

00:16:05,300 --> 00:16:17,290
replaced the SSD to Samsung m2 SSD yeah

00:16:11,510 --> 00:16:21,590
the program was gone but I need to

00:16:17,290 --> 00:16:24,110
repair this sometimes so I need to I

00:16:21,590 --> 00:16:27,730
took a lot of hours to reread it

00:16:24,110 --> 00:16:32,060
so I alternated with ansible

00:16:27,730 --> 00:16:38,050
so that's why I use the ansible it's

00:16:32,060 --> 00:16:42,410
very useful to do something repeatable

00:16:38,050 --> 00:16:45,020
and there is there are a lot of

00:16:42,410 --> 00:16:51,620
differences between TCP and the

00:16:45,020 --> 00:16:54,980
OpenStack is a next ride so basically

00:16:51,620 --> 00:16:59,860
that command come online a command is

00:16:54,980 --> 00:17:03,740
different so on the DCP we use g-cloud

00:16:59,860 --> 00:17:08,449
g-cloud command but in the OpenStack we

00:17:03,740 --> 00:17:11,270
use OpenStack command so if you want to

00:17:08,449 --> 00:17:13,820
boot instance the command is different

00:17:11,270 --> 00:17:18,699
and a configured network is different

00:17:13,820 --> 00:17:23,020
the security group is also different so

00:17:18,699 --> 00:17:27,650
you need to I need to I needed to

00:17:23,020 --> 00:17:30,820
translate you from the g-cloud command

00:17:27,650 --> 00:17:39,700
to OpenStack cloud c'mon

00:17:30,820 --> 00:17:44,350
OpenStack command and the way I needed

00:17:39,700 --> 00:17:51,190
to rip to do that hostname resolution is

00:17:44,350 --> 00:17:54,940
required so you maybe need dns in that

00:17:51,190 --> 00:18:01,270
cloud or maybe you need to get us a

00:17:54,940 --> 00:18:06,040
house changes to resolve the hostname to

00:18:01,270 --> 00:18:11,980
Rhonda the kubernetes the hard way on

00:18:06,040 --> 00:18:13,330
that opens a cloud and the load balancer

00:18:11,980 --> 00:18:17,680
is also required

00:18:13,330 --> 00:18:21,730
so maybe you need to use octave here is

00:18:17,680 --> 00:18:25,870
a load balancer as a service project in

00:18:21,730 --> 00:18:30,760
OpenStack so that's the first option but

00:18:25,870 --> 00:18:35,560
I use the nginx as a load of our answer

00:18:30,760 --> 00:18:46,170
and maybe you can also use H a proxy for

00:18:35,560 --> 00:18:49,210
that so this is a summary what I do so

00:18:46,170 --> 00:18:54,370
wrong and I customized it on your

00:18:49,210 --> 00:19:00,850
environment it's it's really good to

00:18:54,370 --> 00:19:04,360
know the architecture of the kubernetes

00:19:00,850 --> 00:19:08,380
or OpenStack or computer systems and a

00:19:04,360 --> 00:19:13,530
try and error is really good to exercise

00:19:08,380 --> 00:19:18,940
to know the whole architecture or

00:19:13,530 --> 00:19:22,780
kubernetes itself and I also made a bash

00:19:18,940 --> 00:19:27,580
script to run the kubernetes the hard

00:19:22,780 --> 00:19:32,800
way it's this is not so important itself

00:19:27,580 --> 00:19:38,910
but writing the pass script it's really

00:19:32,800 --> 00:19:38,910
good exercise for me so I did that and

00:19:40,000 --> 00:19:45,730
the coupon is hardway is only full

00:19:42,910 --> 00:19:51,570
learning not for production because

00:19:45,730 --> 00:19:57,190
there are some limitation were some

00:19:51,570 --> 00:19:59,320
locking some something like a che or

00:19:57,190 --> 00:20:02,740
passes the volume or something other

00:19:59,320 --> 00:20:07,120
things is not exist in kubernetes the

00:20:02,740 --> 00:20:10,990
hard way so if you want to run the

00:20:07,120 --> 00:20:15,070
kubernetes cluster yeah I recommend you

00:20:10,990 --> 00:20:18,730
use some deployment tool like Hoover Dam

00:20:15,070 --> 00:20:23,310
or something like that like that and the

00:20:18,730 --> 00:20:27,340
cupola this itself is also open source

00:20:23,310 --> 00:20:30,370
so we can read the code and a right

00:20:27,340 --> 00:20:33,700
patch or submit a patch or some other

00:20:30,370 --> 00:20:39,160
samhita issue or like that we can

00:20:33,700 --> 00:20:41,040
participate join the community open

00:20:39,160 --> 00:20:46,960
source community for that

00:20:41,040 --> 00:20:50,350
it's really good to learn all of the

00:20:46,960 --> 00:20:55,840
community or software or architecture

00:20:50,350 --> 00:20:59,680
for that and there are some books

00:20:55,840 --> 00:21:03,610
already yeah maybe you know that already

00:20:59,680 --> 00:21:06,010
kubernetes upon the running or the

00:21:03,610 --> 00:21:09,000
kubernetes book world coolants

00:21:06,010 --> 00:21:12,100
kubernetes dot io is also a good

00:21:09,000 --> 00:21:19,510
resource to know the kubernetes self I

00:21:12,100 --> 00:21:24,100
think yeah ok that's it it's very short

00:21:19,510 --> 00:21:28,150
but there is a information is about mice

00:21:24,100 --> 00:21:32,890
rises their contact information is there

00:21:28,150 --> 00:21:36,400
so I'm masayuki G is my free North

00:21:32,890 --> 00:21:38,530
github twitter victory account the

00:21:36,400 --> 00:21:41,340
coupon it's the hardware itself is on

00:21:38,530 --> 00:21:45,420
that so if you are interested in that

00:21:41,340 --> 00:21:48,540
you can access under jacket

00:21:45,420 --> 00:21:48,540
thank you

00:21:48,560 --> 00:21:58,040
[Applause]

00:21:53,260 --> 00:22:10,100
so any comments or questions or

00:21:58,040 --> 00:22:12,850
something okay sorry I can't hear that

00:22:10,100 --> 00:22:12,850
maybe

00:22:18,120 --> 00:22:25,830
test okay my name is Alexander

00:22:21,530 --> 00:22:28,650
freelancer so what is your experience

00:22:25,830 --> 00:22:33,150
with kubernetes in the relation of

00:22:28,650 --> 00:22:36,330
security what kind of what kind what did

00:22:33,150 --> 00:22:40,620
you find out about configuring security

00:22:36,330 --> 00:22:42,710
in kubernetes security of commodities

00:22:40,620 --> 00:22:48,680
yes

00:22:42,710 --> 00:22:51,990
good question but I actually don't

00:22:48,680 --> 00:22:54,300
recognize those face security issue on

00:22:51,990 --> 00:22:55,410
that because I just follow the

00:22:54,300 --> 00:23:00,690
instructions

00:22:55,410 --> 00:23:03,720
yeah and I don't run the two bodies on

00:23:00,690 --> 00:23:07,500
the production environment or something

00:23:03,720 --> 00:23:13,760
other that like that so I didn't find

00:23:07,500 --> 00:23:13,760
any security program on that right now

00:23:13,790 --> 00:23:25,820
so basically you don't think that

00:23:19,230 --> 00:23:29,160
security will be big thing or I mean

00:23:25,820 --> 00:23:31,980
maybe you know how much time probably

00:23:29,160 --> 00:23:38,730
somebody should spend in the configuring

00:23:31,980 --> 00:23:44,550
security in kubernetes i i didn't face

00:23:38,730 --> 00:23:50,360
the security things issues rena so i I

00:23:44,550 --> 00:23:55,140
don't know what the security issues

00:23:50,360 --> 00:23:58,680
standpoint of the security so sorry I

00:23:55,140 --> 00:24:02,210
probably don't understand what your

00:23:58,680 --> 00:24:04,530
question I mean think about like

00:24:02,210 --> 00:24:08,250
companies middle sized companies in

00:24:04,530 --> 00:24:10,050
enterprise and yeah I think is they're

00:24:08,250 --> 00:24:13,560
thinking about switching to this

00:24:10,050 --> 00:24:16,230
kubernetes stuff and run their

00:24:13,560 --> 00:24:18,990
production apps in in this environment

00:24:16,230 --> 00:24:22,920
so it's always interesting to know what

00:24:18,990 --> 00:24:26,120
kind of preparations somebody should do

00:24:22,920 --> 00:24:33,380
to make stuff secure

00:24:26,120 --> 00:24:37,039
so yeah actually I did it run the

00:24:33,380 --> 00:24:40,070
kubernetes under my for production

00:24:37,039 --> 00:24:47,539
environment but basically there is a lot

00:24:40,070 --> 00:24:50,450
of thing to to do to that it's not only

00:24:47,539 --> 00:24:54,799
Cooper Knights but also web services I

00:24:50,450 --> 00:24:59,840
mean you need to we need to care about

00:24:54,799 --> 00:25:03,940
the security update and we need to care

00:24:59,840 --> 00:25:08,840
about security or or something other

00:25:03,940 --> 00:25:13,429
things we need to care about that but I

00:25:08,840 --> 00:25:19,010
didn't find the humanity itself security

00:25:13,429 --> 00:25:21,130
issues on that so sorry no problem thank

00:25:19,010 --> 00:25:21,130
you

00:25:26,380 --> 00:25:31,500
so any other fish on

00:25:36,100 --> 00:25:40,380
okay thank thank you very much

00:25:41,090 --> 00:25:44,800

YouTube URL: https://www.youtube.com/watch?v=0CIpn9PzdP4


