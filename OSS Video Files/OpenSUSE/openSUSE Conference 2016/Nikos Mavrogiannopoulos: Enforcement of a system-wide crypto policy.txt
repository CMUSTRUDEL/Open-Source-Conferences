Title: Nikos Mavrogiannopoulos: Enforcement of a system-wide crypto policy
Publication date: 2016-06-26
Playlist: openSUSE Conference 2016
Description: 
	https://media.ccc.de/v/848-enforcement-of-a-system-wide-crypto-policy

Currently each and every shipped application in distributions enforces its own policy on the allowed cryptographic algorithms/protocols. While for some this is a desirable property, for most non-UI applications and libraries in an operating system it creates an uncertainty on the available security level. The purpose of this talk is to describe the approach we've taken in Fedora to counter the issue, by enforcing system-wide policies, discuss the current outcome, lessons learned, and invite OpenSuse maintainers to participate.

URLs: https://fedoraproject.org/wiki/Changes/CryptoPolicy


Nikos Mavrogiannopoulos
Captions: 
	00:00:08,040 --> 00:00:16,830
okay hey hi everyone I'm my lobby

00:00:12,870 --> 00:00:18,930
annapolis I'm i work at Red Hat and I'm

00:00:16,830 --> 00:00:23,099
going to present the fedora system where

00:00:18,930 --> 00:00:25,320
I keep the policies and it's a bit of

00:00:23,099 --> 00:00:29,279
taco funny actually to see a red having

00:00:25,320 --> 00:00:31,669
a conference of opensuse but the point

00:00:29,279 --> 00:00:34,860
of this talk is to invite for

00:00:31,669 --> 00:00:37,829
collaboration and see what where we can

00:00:34,860 --> 00:00:40,860
work together actually I cannot see you

00:00:37,829 --> 00:00:41,850
so if you want to make any comments or

00:00:40,860 --> 00:00:44,100
make any question during the

00:00:41,850 --> 00:00:49,470
presentation just make sure your your

00:00:44,100 --> 00:00:51,030
visible because of the light so what I'm

00:00:49,470 --> 00:00:52,890
going to present please I'm going to

00:00:51,030 --> 00:00:54,390
give you the purpose why within do we

00:00:52,890 --> 00:00:56,520
need the system while you keep the

00:00:54,390 --> 00:00:59,070
policies the benefits that we see to

00:00:56,520 --> 00:01:01,650
them what is the current status as we

00:00:59,070 --> 00:01:04,320
have it in fedora and what is the

00:01:01,650 --> 00:01:13,110
approach we followed and some lessons

00:01:04,320 --> 00:01:16,080
learned and they our future plans so who

00:01:13,110 --> 00:01:18,479
chose me are you working security

00:01:16,080 --> 00:01:21,210
technologies I mentioned before I mostly

00:01:18,479 --> 00:01:23,700
encrypt related projects and my favorite

00:01:21,210 --> 00:01:26,250
projects is a new TLS and the open

00:01:23,700 --> 00:01:30,900
connect VPN and I also contribute open

00:01:26,250 --> 00:01:37,140
wrt and i started the system-wide keep

00:01:30,900 --> 00:01:41,000
the policies effort in fedora so let's

00:01:37,140 --> 00:01:44,369
move on to the purpose why do we need it

00:01:41,000 --> 00:01:46,020
as an administrator typically you don't

00:01:44,369 --> 00:01:48,630
maintain one system you maintain

00:01:46,020 --> 00:01:51,330
probably a chaos kept out situation like

00:01:48,630 --> 00:01:53,909
this you have multiple systems multiple

00:01:51,330 --> 00:01:58,770
users some of the systems of servers

00:01:53,909 --> 00:02:04,740
some of the systems our clients and if

00:01:58,770 --> 00:02:09,149
we focus on a single system let's say we

00:02:04,740 --> 00:02:11,640
take a server what the server is doing

00:02:09,149 --> 00:02:13,379
most of the time it's communicating over

00:02:11,640 --> 00:02:19,290
the land or over the internet with other

00:02:13,379 --> 00:02:20,650
systems and if we want to be precise is

00:02:19,290 --> 00:02:23,890
communicating with

00:02:20,650 --> 00:02:28,629
using see you r LW get a Firefox and

00:02:23,890 --> 00:02:31,840
Pudsey ssa's openvpn or any or hundreds

00:02:28,629 --> 00:02:38,819
of programs that you may find in a linux

00:02:31,840 --> 00:02:38,819
distribution like fedora or opensuse and

00:02:39,090 --> 00:02:45,909
the question now is how secure is its

00:02:43,780 --> 00:02:47,500
channel established by the server if

00:02:45,909 --> 00:02:51,370
someone connects to the server over a

00:02:47,500 --> 00:02:53,319
patsy how secure is this question what

00:02:51,370 --> 00:02:57,819
is the level the security level

00:02:53,319 --> 00:02:59,560
established if someone here is an Isetta

00:02:57,819 --> 00:03:01,540
most likely to say either i don't know

00:02:59,560 --> 00:03:07,420
or i know for this particular service

00:03:01,540 --> 00:03:10,170
but i don't know about anything else so

00:03:07,420 --> 00:03:12,670
the next question is how can we ensure a

00:03:10,170 --> 00:03:14,650
consistent security level across the

00:03:12,670 --> 00:03:18,909
system or across the systems we are

00:03:14,650 --> 00:03:21,849
minister and this is the problem that

00:03:18,909 --> 00:03:24,569
the system welke the policy so we apply

00:03:21,849 --> 00:03:27,699
a consistent default and security policy

00:03:24,569 --> 00:03:31,440
across all applications in the system

00:03:27,699 --> 00:03:31,440
and all the libraries in the system I

00:03:34,349 --> 00:03:38,829
would like to make a note here that we

00:03:36,790 --> 00:03:41,769
would like this polished be modified by

00:03:38,829 --> 00:03:45,459
the distributor and the user of the

00:03:41,769 --> 00:03:47,109
applications rather than the author of

00:03:45,459 --> 00:03:49,930
the software because typically

00:03:47,109 --> 00:03:54,549
anticipation we have software packet and

00:03:49,930 --> 00:03:56,319
this distributed but it's taken from

00:03:54,549 --> 00:03:58,659
multiple sources its multiple authors

00:03:56,319 --> 00:04:04,030
with different views on security with

00:03:58,659 --> 00:04:07,060
different approaches so you have one

00:04:04,030 --> 00:04:10,840
application that has let's say a is 256

00:04:07,060 --> 00:04:12,819
by default used and it doesn't go lower

00:04:10,840 --> 00:04:15,699
and you have another software that uses

00:04:12,819 --> 00:04:18,609
our c4 and you cannot change it so

00:04:15,699 --> 00:04:20,380
that's why we like the security level to

00:04:18,609 --> 00:04:24,340
be set by the distributor who wants to

00:04:20,380 --> 00:04:31,270
set some coke and consistent level on

00:04:24,340 --> 00:04:33,880
the system so how is the problem titled

00:04:31,270 --> 00:04:36,920
today what do one mosquitoes

00:04:33,880 --> 00:04:44,480
if if you are an administrator maybe you

00:04:36,920 --> 00:04:47,150
have already a solution but the best one

00:04:44,480 --> 00:04:48,650
I could find was that an research goes

00:04:47,150 --> 00:04:51,470
to a website like better critical

00:04:48,650 --> 00:04:53,930
tutorial he downloads a PDF that tells

00:04:51,470 --> 00:04:56,780
you how to harden each of your service

00:04:53,930 --> 00:04:58,520
or your client applications so you go

00:04:56,780 --> 00:05:00,770
through this document it's a hundred

00:04:58,520 --> 00:05:02,630
pages and you go let's say for the

00:05:00,770 --> 00:05:04,370
openvpn you go to the section for can we

00:05:02,630 --> 00:05:06,800
pin for a party you go to the Civic

00:05:04,370 --> 00:05:09,520
section for a party you copy these

00:05:06,800 --> 00:05:17,210
settings to your configuration files and

00:05:09,520 --> 00:05:21,100
then you supposedly you I put a original

00:05:17,210 --> 00:05:24,680
security level for today to your servers

00:05:21,100 --> 00:05:26,390
what happens two years late later is

00:05:24,680 --> 00:05:29,540
that these settings that you copied

00:05:26,390 --> 00:05:32,600
there are already outdated and probably

00:05:29,540 --> 00:05:34,760
some attack was inventing some new

00:05:32,600 --> 00:05:38,440
attack so they all logins are already

00:05:34,760 --> 00:05:42,740
deprecated so if you set up server in

00:05:38,440 --> 00:05:44,000
2010 and today most likely you need to

00:05:42,740 --> 00:05:46,430
desert behalf of the algorithms that

00:05:44,000 --> 00:05:50,990
existed there like our c4 you have the

00:05:46,430 --> 00:05:55,669
disease ssl 3.0 so that is why i would

00:05:50,990 --> 00:05:57,800
like to improve this process and what

00:05:55,669 --> 00:06:00,470
are the benefits we see if we improve

00:05:57,800 --> 00:06:02,060
this process we reduce first of all that

00:06:00,470 --> 00:06:03,919
means relative burden and mr. the

00:06:02,060 --> 00:06:06,200
wouldn't have to go through these

00:06:03,919 --> 00:06:09,800
documents and modify its and every

00:06:06,200 --> 00:06:12,550
service on the system and we also do

00:06:09,800 --> 00:06:14,990
support costs in a sense that the

00:06:12,550 --> 00:06:18,169
separable our abilities will be already

00:06:14,990 --> 00:06:20,900
tagged system-wide here have an example

00:06:18,169 --> 00:06:23,890
of logjam and because it was an attack

00:06:20,900 --> 00:06:27,680
what happened when we already knew that

00:06:23,890 --> 00:06:29,780
1024 bit and diffie-hellman was the

00:06:27,680 --> 00:06:32,630
minimum we would use however some

00:06:29,780 --> 00:06:37,760
applications had much lower than that so

00:06:32,630 --> 00:06:39,680
if we could if we have a consistent

00:06:37,760 --> 00:06:41,180
security polish of the system one log

00:06:39,680 --> 00:06:43,850
jam happened we wouldn't have the

00:06:41,180 --> 00:06:45,260
problem and of course is your audit

00:06:43,850 --> 00:06:46,490
because you hire an auditor to go

00:06:45,260 --> 00:06:49,280
through your system and tell you

00:06:46,490 --> 00:06:51,830
whether everything is okay in respect to

00:06:49,280 --> 00:06:54,139
seek to cryptography she wouldn't have

00:06:51,830 --> 00:06:56,060
to go through the programs that go that

00:06:54,139 --> 00:06:58,539
follow the policies you just check the

00:06:56,060 --> 00:07:04,340
program's don't follow the policy that

00:06:58,539 --> 00:07:07,190
ideally this shouldn't be any so let let

00:07:04,340 --> 00:07:08,990
me this was pretty much theory and fit

00:07:07,190 --> 00:07:11,840
let me go to the current status whether

00:07:08,990 --> 00:07:15,440
we have any fedora we did the first

00:07:11,840 --> 00:07:17,090
pilot version if a draw 21 it was simply

00:07:15,440 --> 00:07:19,699
a common policy for a new t less and

00:07:17,090 --> 00:07:22,729
openssl applications so it was mainly

00:07:19,699 --> 00:07:24,500
common policy for the libraries and we

00:07:22,729 --> 00:07:28,099
selected to have only three policies

00:07:24,500 --> 00:07:30,259
from one called legacy that had every

00:07:28,099 --> 00:07:34,550
broken elegance you could think of like

00:07:30,259 --> 00:07:38,060
md5 and everything a default which sees

00:07:34,550 --> 00:07:40,099
we define it to be a reasonable for

00:07:38,060 --> 00:07:43,789
today security level where today sees

00:07:40,099 --> 00:07:48,490
one fedoras release and future was a

00:07:43,789 --> 00:07:50,719
security level that we define it as the

00:07:48,490 --> 00:07:52,789
the lagoons that we expect it to be

00:07:50,719 --> 00:07:59,479
broken in the near future are removed

00:07:52,789 --> 00:08:00,830
like someone for example there the

00:07:59,479 --> 00:08:02,479
interesting part is that if you use

00:08:00,830 --> 00:08:07,430
future most likely you cannot connect

00:08:02,479 --> 00:08:10,159
anywhere in the injured we in the next

00:08:07,430 --> 00:08:12,229
version of fedora in 22 we converted

00:08:10,159 --> 00:08:14,630
several libraries applications to adhere

00:08:12,229 --> 00:08:16,880
to this policy including a patsy latest

00:08:14,630 --> 00:08:18,800
video all the service we had and most of

00:08:16,880 --> 00:08:22,940
the command line applications like W get

00:08:18,800 --> 00:08:27,349
and LSD p in the next version of fedora

00:08:22,940 --> 00:08:29,030
23 we added also bent so the creeper

00:08:27,349 --> 00:08:32,089
policies will generate the policy for

00:08:29,030 --> 00:08:34,760
the beam application and for kerberos

00:08:32,089 --> 00:08:39,770
clients as well about 24 that was the

00:08:34,760 --> 00:08:42,349
least she days ago and in fact or 25 we

00:08:39,770 --> 00:08:43,849
plan to at the end of java consistent

00:08:42,349 --> 00:08:46,399
policy also for java and NSS

00:08:43,849 --> 00:08:50,660
applications and such is the library use

00:08:46,399 --> 00:08:52,930
by Firefox and there and also from in I

00:08:50,660 --> 00:08:52,930
believe

00:08:55,020 --> 00:09:03,060
and we we try to nothing involve

00:09:00,450 --> 00:09:04,980
upstream or to involve upstream as

00:09:03,060 --> 00:09:07,860
little as possible but we couldn't avoid

00:09:04,980 --> 00:09:09,600
it actually so we required some upstream

00:09:07,860 --> 00:09:12,810
parties for mutti less it's already

00:09:09,600 --> 00:09:15,900
upstream since 330 that's a few years

00:09:12,810 --> 00:09:18,120
ago in openssl we opened some pool

00:09:15,900 --> 00:09:22,500
requesting Jacob and we discuss it with

00:09:18,120 --> 00:09:24,180
the developers but the discussion is

00:09:22,500 --> 00:09:27,960
still ongoing unfortunately after two

00:09:24,180 --> 00:09:29,640
years and for MSS it's already upstream

00:09:27,960 --> 00:09:33,450
and the parties that we needed to

00:09:29,640 --> 00:09:35,490
achieve the policies and the way after

00:09:33,450 --> 00:09:37,950
in selected was to go through setting

00:09:35,490 --> 00:09:47,250
policies via a file called biggest 11

00:09:37,950 --> 00:09:49,020
txt so let me go to what was the

00:09:47,250 --> 00:09:51,990
approach that we select it and let me

00:09:49,020 --> 00:09:54,480
first say about openssl utilizzare were

00:09:51,990 --> 00:09:57,330
the first programs that we use if you

00:09:54,480 --> 00:09:59,070
have used the openssl application most

00:09:57,330 --> 00:10:01,680
likely you know this cipher should

00:09:59,070 --> 00:10:05,730
string that is a we said something like

00:10:01,680 --> 00:10:07,290
high not 75 and some language if you

00:10:05,730 --> 00:10:11,160
have set up a patsy most likely you

00:10:07,290 --> 00:10:12,870
already put stink like that in the

00:10:11,160 --> 00:10:14,250
configuration file in nautilus is

00:10:12,870 --> 00:10:18,140
something similar it has another

00:10:14,250 --> 00:10:22,320
configuration string for safer streets

00:10:18,140 --> 00:10:25,070
so we selected since both have a

00:10:22,320 --> 00:10:27,060
configuration string why not set a

00:10:25,070 --> 00:10:30,770
configuration string that is default for

00:10:27,060 --> 00:10:33,090
the system so we decided to have a

00:10:30,770 --> 00:10:35,700
configuration string for a part for

00:10:33,090 --> 00:10:40,280
oneself for example that is profile

00:10:35,700 --> 00:10:43,170
equal system and add system for moodle s

00:10:40,280 --> 00:10:46,110
so that when you specify these specific

00:10:43,170 --> 00:10:48,480
keywords and the system-wide policy will

00:10:46,110 --> 00:10:50,820
be used for the application that way an

00:10:48,480 --> 00:10:54,540
administrator can also override the

00:10:50,820 --> 00:10:56,070
system wide policy if he needs to and we

00:10:54,540 --> 00:10:59,970
can also set it by default link or

00:10:56,070 --> 00:11:05,699
figuration files without breaking most

00:10:59,970 --> 00:11:07,620
existing user cases then of course the

00:11:05,699 --> 00:11:11,250
hard work was to modify all the programs

00:11:07,620 --> 00:11:12,990
we were sipping we take a default

00:11:11,250 --> 00:11:15,240
configuration files to contain these

00:11:12,990 --> 00:11:17,459
specific strings this is still an

00:11:15,240 --> 00:11:19,199
ongoing effort would have converted most

00:11:17,459 --> 00:11:22,829
of the programs but not everything yet

00:11:19,199 --> 00:11:25,139
and of course there are applications

00:11:22,829 --> 00:11:28,259
which don't have configuration files and

00:11:25,139 --> 00:11:29,639
these were also one of the main targets

00:11:28,259 --> 00:11:32,459
of the policy because if you don't have

00:11:29,639 --> 00:11:35,339
a configuration file I mean no one knows

00:11:32,459 --> 00:11:36,899
what you are using so when an

00:11:35,339 --> 00:11:38,699
application didn't have a configuration

00:11:36,899 --> 00:11:44,579
file it will simply modified it to use

00:11:38,699 --> 00:11:48,240
the default a system policy as you can

00:11:44,579 --> 00:11:49,829
see our rules on this URL I hope I will

00:11:48,240 --> 00:11:52,259
be able to put on lyonie's presentation

00:11:49,829 --> 00:11:54,660
after the talk and these are our

00:11:52,259 --> 00:11:59,360
packaging rules for adhering to the

00:11:54,660 --> 00:12:03,060
policy for applications in fedora and

00:11:59,360 --> 00:12:06,180
another edition we did was to we wanted

00:12:03,060 --> 00:12:08,639
to warn the packages when a program was

00:12:06,180 --> 00:12:11,399
overriding the default settings of open

00:12:08,639 --> 00:12:13,769
SSL or not really something I didn't

00:12:11,399 --> 00:12:17,579
mention that if an application is using

00:12:13,769 --> 00:12:20,639
the default settings of open SSL or new

00:12:17,579 --> 00:12:22,589
TLS but we made it them automatically to

00:12:20,639 --> 00:12:26,639
use the system wipe defaults rather than

00:12:22,589 --> 00:12:27,779
open SSL or no dls defaults so if an

00:12:26,639 --> 00:12:30,689
application was over adding these

00:12:27,779 --> 00:12:33,059
defaults we modified our p.m. link to

00:12:30,689 --> 00:12:35,519
warn the packager that this application

00:12:33,059 --> 00:12:39,680
modifies the default you have to take

00:12:35,519 --> 00:12:43,079
some action either make it adhere to the

00:12:39,680 --> 00:12:45,269
default system-wide policies if it is

00:12:43,079 --> 00:12:47,730
hard-coded if it has a policy hard-coded

00:12:45,269 --> 00:12:54,899
or modify the configuration file if

00:12:47,730 --> 00:12:57,629
needed for applications which had

00:12:54,899 --> 00:13:01,649
configuration files like being the name

00:12:57,629 --> 00:13:04,309
server or cameras obligations we simply

00:13:01,649 --> 00:13:08,490
generate a configuration file with the

00:13:04,309 --> 00:13:10,080
apple with a policy that complies with

00:13:08,490 --> 00:13:12,870
the beans

00:13:10,080 --> 00:13:14,750
say format and then we modified been to

00:13:12,870 --> 00:13:22,440
simply include the configuration files

00:13:14,750 --> 00:13:25,830
emitted by the policy obligation for and

00:13:22,440 --> 00:13:29,490
this is simply an example the policy

00:13:25,830 --> 00:13:31,140
generate configuration and for cables

00:13:29,490 --> 00:13:33,150
which forgive us it just says that the

00:13:31,140 --> 00:13:40,310
Jeep the ticket is allowed to be

00:13:33,150 --> 00:13:43,620
encrypted with aes 256 OAS 128 and then

00:13:40,310 --> 00:13:47,400
this file is linked from the Cabras

00:13:43,620 --> 00:13:50,160
configuration directory and we also a

00:13:47,400 --> 00:13:53,280
load that mr. just walked out by simply

00:13:50,160 --> 00:13:54,870
deleting that link because if for

00:13:53,280 --> 00:13:58,020
example that mr. de wants to override

00:13:54,870 --> 00:14:00,390
this policy and cesar if you opt outs

00:13:58,020 --> 00:14:03,030
rather than using the whole system

00:14:00,390 --> 00:14:09,900
policy in order to comply with his local

00:14:03,030 --> 00:14:11,790
requirements and what we wanted to cover

00:14:09,900 --> 00:14:14,010
ideally it was everything related to

00:14:11,790 --> 00:14:16,500
geography from signature are gonna smack

00:14:14,010 --> 00:14:19,380
elegance and cipher algorithm change

00:14:16,500 --> 00:14:22,110
algorithms ellipticals size of

00:14:19,380 --> 00:14:27,480
parameters particles whatever's you see

00:14:22,110 --> 00:14:28,950
there we haven't quite managed for a new

00:14:27,480 --> 00:14:31,920
deal s analysis we managed to cover

00:14:28,950 --> 00:14:35,760
everything for cancer cell because of

00:14:31,920 --> 00:14:37,680
the default cipher suite string of

00:14:35,760 --> 00:14:40,860
openness cellular street so restrictive

00:14:37,680 --> 00:14:44,280
setting only this subset and we couldn't

00:14:40,860 --> 00:14:48,060
cover all everything on the policy so we

00:14:44,280 --> 00:14:50,820
rely on the packager to to restrict to

00:14:48,060 --> 00:14:55,310
the acceptable default policy by default

00:14:50,820 --> 00:15:00,290
on for everything else this is not ideal

00:14:55,310 --> 00:15:04,050
but it at least for now our stream

00:15:00,290 --> 00:15:08,190
openssl developers are not interested in

00:15:04,050 --> 00:15:12,240
extending the surface with string so for

00:15:08,190 --> 00:15:16,260
now we are restricted on the gospel so i

00:15:12,240 --> 00:15:18,180
will move on with the section i called

00:15:16,260 --> 00:15:20,790
lessons learned it's pretty much trivia

00:15:18,180 --> 00:15:22,730
out of the development of the crypto

00:15:20,790 --> 00:15:25,290
policies

00:15:22,730 --> 00:15:26,910
what we realized is that we require a

00:15:25,290 --> 00:15:29,430
smooth transition if you have

00:15:26,910 --> 00:15:31,649
system-wide policies you cannot simply

00:15:29,430 --> 00:15:36,629
disable an allegory and expect to

00:15:31,649 --> 00:15:40,050
release we tested it and in what later

00:15:36,629 --> 00:15:42,649
became fedora 20 do we disable ssl 3.0

00:15:40,050 --> 00:15:45,209
and by the time i did it and i committed

00:15:42,649 --> 00:15:49,009
10 mins later had already bagged a

00:15:45,209 --> 00:15:49,009
recording that some application broke

00:15:49,939 --> 00:15:56,040
however with sufficient planning we

00:15:52,379 --> 00:15:58,199
could make it work every I don't know

00:15:56,040 --> 00:16:00,259
how is your process in opensuse in

00:15:58,199 --> 00:16:03,509
fedora would have a process of

00:16:00,259 --> 00:16:05,759
announcing a change and then waiting six

00:16:03,509 --> 00:16:08,220
months until the next release and doing

00:16:05,759 --> 00:16:11,399
the same so we followed this process for

00:16:08,220 --> 00:16:14,069
to disable our c4 and ssl 3.0 and we

00:16:11,399 --> 00:16:15,689
were pretty sufficient in fedora 23 we

00:16:14,069 --> 00:16:25,589
managed to remove it from most of the

00:16:15,689 --> 00:16:28,290
system something also that relates to

00:16:25,589 --> 00:16:32,240
the policies and also to the app streams

00:16:28,290 --> 00:16:36,930
but we collaborated with there is some

00:16:32,240 --> 00:16:39,649
upstream reluctance usually 24 something

00:16:36,930 --> 00:16:41,879
system-wide some Absalom developers

00:16:39,649 --> 00:16:44,160
forum and instead they said its

00:16:41,879 --> 00:16:47,490
applications to be free for example set

00:16:44,160 --> 00:16:52,410
their own settings but if you are a

00:16:47,490 --> 00:16:54,839
distributor of software in really large

00:16:52,410 --> 00:16:57,779
bunches like a distribution of the door

00:16:54,839 --> 00:16:59,699
opens you say you really have a thousand

00:16:57,779 --> 00:17:02,129
pieces of software you don't want its

00:16:59,699 --> 00:17:05,459
application to be that free because you

00:17:02,129 --> 00:17:08,730
have no idea what you're sleeping and

00:17:05,459 --> 00:17:10,829
this was something we actually fail them

00:17:08,730 --> 00:17:14,309
to convince them this is why open cell

00:17:10,829 --> 00:17:21,419
still has a limited support for keep the

00:17:14,309 --> 00:17:23,610
policies and another and another aspect

00:17:21,419 --> 00:17:26,880
is the changes for proactive security

00:17:23,610 --> 00:17:29,309
that don't actually solve a problem that

00:17:26,880 --> 00:17:31,450
big old people see at this moment are

00:17:29,309 --> 00:17:33,549
pretty slow the doped

00:17:31,450 --> 00:17:39,070
with an SS it also took more than a year

00:17:33,549 --> 00:17:40,750
to include the policies and unlike if

00:17:39,070 --> 00:17:43,570
you have a CV you are going to solve it

00:17:40,750 --> 00:17:46,120
in a matter of days but if you have

00:17:43,570 --> 00:17:49,090
something that will improve cv's of the

00:17:46,120 --> 00:17:51,820
future you have no time pressure

00:17:49,090 --> 00:17:58,870
actually and most likely we see the

00:17:51,820 --> 00:18:01,419
progress is low however we also see that

00:17:58,870 --> 00:18:04,990
the base of the fixed for poodle which

00:18:01,419 --> 00:18:07,510
was simply disable in SSL 3.0 who have

00:18:04,990 --> 00:18:09,490
been fixed in a single policy in a

00:18:07,510 --> 00:18:11,350
single pieces of the distribution rather

00:18:09,490 --> 00:18:16,210
than having to fix all the applications

00:18:11,350 --> 00:18:18,639
we sleep in there in fedora the same for

00:18:16,210 --> 00:18:21,340
the new issues that were found in our

00:18:18,639 --> 00:18:24,750
safari or in cbc ciphers the same

00:18:21,340 --> 00:18:30,220
compression as I mentioned the logjam

00:18:24,750 --> 00:18:36,700
attack would have been a a news wouldn't

00:18:30,220 --> 00:18:40,779
have been at the news at all so what do

00:18:36,700 --> 00:18:44,380
we plan to do in the future and we also

00:18:40,779 --> 00:18:46,450
plan to include openssh this is lower

00:18:44,380 --> 00:18:48,250
priority it was because open society or

00:18:46,450 --> 00:18:50,440
author applications that the upstream

00:18:48,250 --> 00:18:52,929
developers are pretty active and they're

00:18:50,440 --> 00:18:56,080
very I mean their defaults are pretty

00:18:52,929 --> 00:18:57,820
sensible we don't have much problem with

00:18:56,080 --> 00:18:59,679
them but we think it would be a good

00:18:57,820 --> 00:19:03,190
idea to add them to policy anyway and

00:18:59,679 --> 00:19:05,470
they we have a tracker where you can see

00:19:03,190 --> 00:19:08,409
with which stage we are for its

00:19:05,470 --> 00:19:14,409
transition of the application we plan to

00:19:08,409 --> 00:19:17,019
include and also want to auto-generate

00:19:14,409 --> 00:19:19,659
the policy because in the beginning when

00:19:17,019 --> 00:19:24,159
we started it was simply open SSL no dls

00:19:19,659 --> 00:19:25,899
we just added NSS later but now we are

00:19:24,159 --> 00:19:29,080
generally policies for eight

00:19:25,899 --> 00:19:31,149
applications pretty much so we cannot

00:19:29,080 --> 00:19:34,029
rely on someone hung colleague and

00:19:31,149 --> 00:19:36,820
policy for its obligations so we were

00:19:34,029 --> 00:19:39,639
pretty much at the end we need to

00:19:36,820 --> 00:19:41,950
rewrite it and then we are already I'm

00:19:39,639 --> 00:19:47,889
already have a

00:19:41,950 --> 00:19:51,880
rewrite pending and one request that was

00:19:47,889 --> 00:19:54,370
made to us a few a year ago actually was

00:19:51,880 --> 00:20:00,399
to generate the polishing away that new

00:19:54,370 --> 00:20:03,639
applications candied and set and follow

00:20:00,399 --> 00:20:07,539
it in a way that the policy will not

00:20:03,639 --> 00:20:09,700
generate a specific policy for that

00:20:07,539 --> 00:20:12,190
application but the application worried

00:20:09,700 --> 00:20:17,590
the generic policy of the system and act

00:20:12,190 --> 00:20:19,450
I am not convinced that this will not

00:20:17,590 --> 00:20:20,980
cause more problems than will actually

00:20:19,450 --> 00:20:27,250
solve but it's an idea we were actually

00:20:20,980 --> 00:20:28,750
considering at the moment so the region

00:20:27,250 --> 00:20:32,559
of the stock was actually to describe

00:20:28,750 --> 00:20:35,169
what we have in fedora and then possibly

00:20:32,559 --> 00:20:37,000
a for we can collaborate with the

00:20:35,169 --> 00:20:40,090
opensuse developers to bring it there as

00:20:37,000 --> 00:20:42,610
well and then it's hosted at the hub

00:20:40,090 --> 00:20:45,580
there the tool that generates the

00:20:42,610 --> 00:20:50,409
policies at the moment and you can see

00:20:45,580 --> 00:20:53,470
it there and that's the end of my talk

00:20:50,409 --> 00:20:56,010
so if you have any questions that's the

00:20:53,470 --> 00:20:56,010
time to make

00:21:01,020 --> 00:21:04,020
sir

00:21:17,039 --> 00:21:23,470
doesn't work ah yeah is there a design

00:21:21,630 --> 00:21:26,110
application specific over white

00:21:23,470 --> 00:21:29,590
capability because as an example some

00:21:26,110 --> 00:21:32,590
routing protocols have requirements for

00:21:29,590 --> 00:21:35,080
something like md5 but as a as a policy

00:21:32,590 --> 00:21:36,850
you want to prevent that that you know

00:21:35,080 --> 00:21:39,370
all the other services are allowed to

00:21:36,850 --> 00:21:42,039
head to use that the application

00:21:39,370 --> 00:21:44,740
specific overrides depend and they

00:21:42,039 --> 00:21:46,240
depend mainly on the library or the

00:21:44,740 --> 00:21:48,730
backend that the application is using

00:21:46,240 --> 00:21:52,029
for open selling dealers for example the

00:21:48,730 --> 00:21:54,549
application application typically allows

00:21:52,029 --> 00:21:57,460
you to override the cipher Suites thing

00:21:54,549 --> 00:21:59,260
so if you override it you override the

00:21:57,460 --> 00:22:03,039
system wide policy so you use your

00:21:59,260 --> 00:22:05,260
specific your specific policy that you

00:22:03,039 --> 00:22:06,820
want for this particular application the

00:22:05,260 --> 00:22:09,730
problem comes to applications which

00:22:06,820 --> 00:22:13,809
don't allow you to override for for them

00:22:09,730 --> 00:22:15,940
we don't do anything more than than just

00:22:13,809 --> 00:22:19,360
making sure that he follows and the

00:22:15,940 --> 00:22:20,889
policy and for these applications if not

00:22:19,360 --> 00:22:25,090
varieties needed it has to be done

00:22:20,889 --> 00:22:31,210
upstream with application I don't know

00:22:25,090 --> 00:22:41,519
if that answers your question you can

00:22:31,210 --> 00:22:45,309
discuss it further how did other Linux

00:22:41,519 --> 00:22:49,090
distributors react or how did you get

00:22:45,309 --> 00:22:55,149
your configuration for the Seas into

00:22:49,090 --> 00:22:58,539
upstream so I'm asking about the

00:22:55,149 --> 00:23:03,340
feedback of your project did you

00:22:58,539 --> 00:23:07,000
influence other developers or we have

00:23:03,340 --> 00:23:09,519
read the upstream parts that we wanted a

00:23:07,000 --> 00:23:13,630
are currently option in magnetization oh

00:23:09,519 --> 00:23:15,789
and the nsa's so these parts we already

00:23:13,630 --> 00:23:17,830
have our sim and currently we're a talk

00:23:15,789 --> 00:23:23,049
with a pencil developers to upstream

00:23:17,830 --> 00:23:26,190
some parts of you may require other than

00:23:23,049 --> 00:23:31,779
that we don't require any other upstream

00:23:26,190 --> 00:23:36,029
cooperation we were doing it we only we

00:23:31,779 --> 00:23:36,029
can do it by only configuring dancing

00:23:50,890 --> 00:23:56,160

YouTube URL: https://www.youtube.com/watch?v=WethvRLbXwU


