Title: Mauro Morales: A Guided Tour of Machinery
Publication date: 2016-06-26
Playlist: openSUSE Conference 2016
Description: 
	https://media.ccc.de/v/926-a-guided-tour-of-machinery

As a Linux system administrator you are constantly working on tasks like:

  - Cloning a system from an existing one
  - Migrating a system to new hardware, a virtual environment or a different distribution
  - Debugging a broken system
  - Upgrading a system
  - Integrating your systems into a configuration management tool

Determining and comparing the state of a system in order to work on these tasks is not a trivial thing. You have to know about services, packages, configuration files, etc. This proves to be even harder if one or more of your systems differ in version and/or distribution.

You can use Machinery to inspect your Linux systems and use the generated descriptions to be interpreted in an off-line fashion, giving you the ability to compare a system at different points in time or against another system. Peace of mind will be the result of knowing that you can ensure the resulting state of your system and many other types of analysis based on your system descriptions.

In this guided tour you will explore the basics of Machinery and see some examples in the wild. All from the safety of your seat. The focus will be on openSUSE systems but stay open to the use of any other distributions. Should you have any questions about Machinery your guide will be there for you at all times.

Mauro Morales
Captions: 
	00:00:07,670 --> 00:00:14,700
so thanks for joining the guided tour of

00:00:10,800 --> 00:00:17,520
machinery my name is Marta Morales I

00:00:14,700 --> 00:00:20,750
the Machinery's large cloud foundry team

00:00:17,520 --> 00:00:23,490
and I will be your tour guide today

00:00:20,750 --> 00:00:26,130
please try to keep your hands inside the

00:00:23,490 --> 00:00:30,150
vehicle we don't want you to get hurt or

00:00:26,130 --> 00:00:33,690
anything and this is going to be the map

00:00:30,150 --> 00:00:35,250
that we're going to be the different

00:00:33,690 --> 00:00:38,010
sites that we're going to be looking at

00:00:35,250 --> 00:00:39,600
first is the machinery inspect command

00:00:38,010 --> 00:00:42,210
we're going to learn how to create a

00:00:39,600 --> 00:00:43,800
system description then is the show

00:00:42,210 --> 00:00:45,960
command where we're going to learn the

00:00:43,800 --> 00:00:48,360
two different ways to view a system

00:00:45,960 --> 00:00:50,790
description third because the weather is

00:00:48,360 --> 00:00:54,240
really nice we are going to be able to

00:00:50,790 --> 00:00:56,490
see some darker whales and the fourth

00:00:54,240 --> 00:00:59,010
command is going to be the compare

00:00:56,490 --> 00:01:01,260
command which is probably the one we're

00:00:59,010 --> 00:01:04,769
going to see the most interesting things

00:01:01,260 --> 00:01:07,680
because we're going to be able to spot

00:01:04,769 --> 00:01:09,420
differences between systems and finally

00:01:07,680 --> 00:01:11,759
it's going to be the export command

00:01:09,420 --> 00:01:14,009
where we're going to be able to take

00:01:11,759 --> 00:01:16,829
these system descriptions and convert

00:01:14,009 --> 00:01:21,719
them to kiwi images or authorized

00:01:16,829 --> 00:01:24,119
descriptions so the first command the

00:01:21,719 --> 00:01:26,280
inspect command is a simple as just

00:01:24,119 --> 00:01:34,560
saying machinery inspect and a hostname

00:01:26,280 --> 00:01:36,810
or an IP and is that readable or I'll go

00:01:34,560 --> 00:01:43,499
a little bit higher that should be

00:01:36,810 --> 00:01:47,399
better ok so we asked machinery to go

00:01:43,499 --> 00:01:51,740
into this system i need to have ssh

00:01:47,399 --> 00:01:51,740
access so that it actually works

00:01:56,890 --> 00:02:05,200
and machinery has started to inspect the

00:02:01,350 --> 00:02:06,820
system we want to see and what's

00:02:05,200 --> 00:02:09,100
basically happening is that machinery

00:02:06,820 --> 00:02:11,080
creates an ssh connection with the root

00:02:09,100 --> 00:02:13,120
user or another user that you can give

00:02:11,080 --> 00:02:16,120
it but it needs to be or to have the

00:02:13,120 --> 00:02:19,690
right kind of permissions it will then

00:02:16,120 --> 00:02:22,080
go into for example system a and create

00:02:19,690 --> 00:02:25,180
a system description for system a and

00:02:22,080 --> 00:02:27,580
will you can keep a list of all these

00:02:25,180 --> 00:02:29,500
descriptions so you can have for example

00:02:27,580 --> 00:02:30,880
system a system B and all those

00:02:29,500 --> 00:02:34,030
different systems that you want to have

00:02:30,880 --> 00:02:35,860
and but the other interesting thing is

00:02:34,030 --> 00:02:37,660
that you can have one same system for

00:02:35,860 --> 00:02:39,850
example like system description see

00:02:37,660 --> 00:02:43,150
where we have the same system just in

00:02:39,850 --> 00:02:48,340
different times different states in

00:02:43,150 --> 00:02:52,750
different times and that's pretty much

00:02:48,340 --> 00:03:00,459
it we can look at it it's still taking a

00:02:52,750 --> 00:03:02,049
while to finish but i have a few copies

00:03:00,459 --> 00:03:05,019
here so you don't have to wait for it

00:03:02,049 --> 00:03:09,430
i'll just let it i'll just stop it for

00:03:05,019 --> 00:03:12,549
now but you can see if i do machinery

00:03:09,430 --> 00:03:14,079
least short you can see all the system

00:03:12,549 --> 00:03:15,940
descriptions that i already have on my

00:03:14,079 --> 00:03:17,769
system and of course this can take some

00:03:15,940 --> 00:03:22,780
time especially depending on how big the

00:03:17,769 --> 00:03:25,510
system is so now that we have one

00:03:22,780 --> 00:03:28,030
inspected system let's see what's inside

00:03:25,510 --> 00:03:31,299
of that system for example if i wanted

00:03:28,030 --> 00:03:37,420
to see what's inside machine in the leap

00:03:31,299 --> 00:03:39,190
a system installed from the lib DVD and

00:03:37,420 --> 00:03:41,290
i can see the first thing it tells me

00:03:39,190 --> 00:03:45,640
it's the operating system which is in

00:03:41,290 --> 00:03:48,820
fact an operator openSUSE leap 42.1 then

00:03:45,640 --> 00:03:50,769
i can see the list of packages this is

00:03:48,820 --> 00:03:53,350
the text view of a system description

00:03:50,769 --> 00:03:56,140
and it's probably the most useful when

00:03:53,350 --> 00:04:00,190
you're working in the command line but

00:03:56,140 --> 00:04:02,530
we also have a HTML view and i will talk

00:04:00,190 --> 00:04:04,269
about it in a minute i just want to

00:04:02,530 --> 00:04:06,849
describe a little bit what's happening

00:04:04,269 --> 00:04:09,250
here and it's just that inside of a

00:04:06,849 --> 00:04:11,530
system description machinery group

00:04:09,250 --> 00:04:14,080
things together into things that we call

00:04:11,530 --> 00:04:15,700
scopes for example one scope is the

00:04:14,080 --> 00:04:17,380
operating system where we save the

00:04:15,700 --> 00:04:19,750
information regarding the operating

00:04:17,380 --> 00:04:22,050
system another scope is the packages

00:04:19,750 --> 00:04:24,700
where we have a list of all the packages

00:04:22,050 --> 00:04:27,250
like i mentioned machinery we will ssh

00:04:24,700 --> 00:04:29,290
into this system and with for example

00:04:27,250 --> 00:04:32,130
RPM it will get a list of all the

00:04:29,290 --> 00:04:34,840
packages that are inside of a system

00:04:32,130 --> 00:04:36,910
same thing with patterns but in this

00:04:34,840 --> 00:04:41,710
case its stead of using RPM it uses

00:04:36,910 --> 00:04:43,510
zipper for example and so on for all the

00:04:41,710 --> 00:04:45,640
different other scopes that we manage

00:04:43,510 --> 00:04:47,110
the nice thing about machinery is that

00:04:45,640 --> 00:04:49,120
you can also extend these scopes

00:04:47,110 --> 00:04:52,240
machinery is completely open source so

00:04:49,120 --> 00:04:56,380
you can write your own scopes and your

00:04:52,240 --> 00:04:59,200
own way to inspect these scopes like I

00:04:56,380 --> 00:05:05,250
mentioned you have an HTML view in order

00:04:59,200 --> 00:05:09,970
to look at what's inside of a system and

00:05:05,250 --> 00:05:14,979
we were already looking at the lib DVD I

00:05:09,970 --> 00:05:17,640
can tell it to look via the HTML view

00:05:14,979 --> 00:05:24,030
and machinery will start a server and

00:05:17,640 --> 00:05:27,729
open a website for me to look at it as

00:05:24,030 --> 00:05:30,340
you can see here this is the system

00:05:27,729 --> 00:05:32,800
description leave lib DVD and I conceal

00:05:30,340 --> 00:05:34,540
the information related to it it's

00:05:32,800 --> 00:05:36,820
separated in scopes like I already

00:05:34,540 --> 00:05:39,090
mentioned so I can go and see for

00:05:36,820 --> 00:05:41,830
example which kind of users are

00:05:39,090 --> 00:05:45,280
installed in this default installation

00:05:41,830 --> 00:05:48,580
of leap I can go and see for example

00:05:45,280 --> 00:05:52,320
which are the change configuration files

00:05:48,580 --> 00:05:55,690
and I can even go and see in detail

00:05:52,320 --> 00:05:58,000
what's inside of one of these files for

00:05:55,690 --> 00:06:05,890
in some cases not not for every file

00:05:58,000 --> 00:06:08,500
that you will have here okay so now

00:06:05,890 --> 00:06:12,570
you've seen the two ways in which you

00:06:08,500 --> 00:06:12,570
can show a system description

00:06:15,370 --> 00:06:23,860
the third is inspecting docker

00:06:18,220 --> 00:06:30,070
containers here I will show which docker

00:06:23,860 --> 00:06:32,169
images I have and you can see that for

00:06:30,070 --> 00:06:35,889
example i also have an open susa lip

00:06:32,169 --> 00:06:40,419
image and again i can say sorry

00:06:35,889 --> 00:06:43,000
machinery inspect container the name of

00:06:40,419 --> 00:06:48,190
the image that I want to see so openSUSE

00:06:43,000 --> 00:06:51,940
leap and in this case I will name it

00:06:48,190 --> 00:06:57,460
something specific for example something

00:06:51,940 --> 00:07:02,650
as creative as docker leap for

00:06:57,460 --> 00:07:05,650
example and I also can even say which

00:07:02,650 --> 00:07:08,350
kind of scopes I want to inspect and for

00:07:05,650 --> 00:07:13,300
this i will tell it wait I think I

00:07:08,350 --> 00:07:15,970
missing an eco here let's say I just

00:07:13,300 --> 00:07:21,280
wanted to check what operating system it

00:07:15,970 --> 00:07:23,229
has and which packages are there and you

00:07:21,280 --> 00:07:25,180
can see that it starts looking at with

00:07:23,229 --> 00:07:27,310
this one it's much much faster for two

00:07:25,180 --> 00:07:29,650
reasons one we only checked at two

00:07:27,310 --> 00:07:33,760
scopes and second you can see that it

00:07:29,650 --> 00:07:35,590
only found 125 packages because dr.

00:07:33,760 --> 00:07:37,840
images are meant to be much smaller

00:07:35,590 --> 00:07:39,940
right and what's happening here it's a

00:07:37,840 --> 00:07:43,330
little bit different that our other

00:07:39,940 --> 00:07:44,919
inspect command because machinery first

00:07:43,330 --> 00:07:48,460
needs to go and look for the docker

00:07:44,919 --> 00:07:51,190
image then it spins it up so it runs a

00:07:48,460 --> 00:07:54,400
container and in that container

00:07:51,190 --> 00:07:56,229
machinery runs the exact command in

00:07:54,400 --> 00:07:58,900
order to get all the information out of

00:07:56,229 --> 00:08:01,780
it in this case it would also be with

00:07:58,900 --> 00:08:04,720
RPM checking which kind of packages are

00:08:01,780 --> 00:08:10,780
installed there and finally it creates

00:08:04,720 --> 00:08:13,900
again a system description cool so now

00:08:10,780 --> 00:08:19,060
we can get into a little bit more

00:08:13,900 --> 00:08:21,160
complicated or not complicated more into

00:08:19,060 --> 00:08:24,560
detail using the compare command now we

00:08:21,160 --> 00:08:27,230
can start analyzing what's happening in

00:08:24,560 --> 00:08:29,630
what differences are there in two

00:08:27,230 --> 00:08:32,000
systems like I was mentioning it's

00:08:29,630 --> 00:08:35,719
interesting to see that there are much

00:08:32,000 --> 00:08:37,550
less packages inside the docker image so

00:08:35,719 --> 00:08:43,400
let's have a look at that for example

00:08:37,550 --> 00:08:51,589
let's compare the lip DVD against the

00:08:43,400 --> 00:08:54,710
docker lipkins and you can immediately

00:08:51,589 --> 00:08:57,920
see here that all of these packages

00:08:54,710 --> 00:09:02,000
exist only in the lib DVD and of course

00:08:57,920 --> 00:09:04,490
there are a lot of them then I went all

00:09:02,000 --> 00:09:07,010
the way down but I can also see that

00:09:04,490 --> 00:09:11,420
there are three packages which are only

00:09:07,010 --> 00:09:13,550
existing in the docker image so that's

00:09:11,420 --> 00:09:16,670
also interesting one of them seems to be

00:09:13,550 --> 00:09:18,710
open so sir release mini so there seems

00:09:16,670 --> 00:09:21,830
to be that they are installing certain

00:09:18,710 --> 00:09:25,190
packages that are especially reduced in

00:09:21,830 --> 00:09:27,290
size for these images which is great but

00:09:25,190 --> 00:09:29,600
then we don't have more information

00:09:27,290 --> 00:09:32,210
because I only extracted those

00:09:29,600 --> 00:09:36,020
particular scopes but I will show you

00:09:32,210 --> 00:09:38,300
more into detail what exactly is

00:09:36,020 --> 00:09:41,660
happening here machinery takes two

00:09:38,300 --> 00:09:43,760
different descriptions and goes through

00:09:41,660 --> 00:09:47,480
each of the scopes that are existing in

00:09:43,760 --> 00:09:49,600
both descriptions and then checks for

00:09:47,480 --> 00:09:53,270
every difference that it can spot it

00:09:49,600 --> 00:09:55,040
will tell you specifically these are

00:09:53,270 --> 00:09:57,260
things that are only in one of the

00:09:55,040 --> 00:10:00,140
systems things are only in the other

00:09:57,260 --> 00:10:01,970
system and things that are in common so

00:10:00,140 --> 00:10:04,790
they are equal in both systems and

00:10:01,970 --> 00:10:06,950
things are for example a package that is

00:10:04,790 --> 00:10:08,720
in both systems but has different

00:10:06,950 --> 00:10:11,420
version different release different

00:10:08,720 --> 00:10:13,339
vendor and stuff like that and all of

00:10:11,420 --> 00:10:15,980
this for all of our scopes so you can

00:10:13,339 --> 00:10:19,010
get an idea of the specific details that

00:10:15,980 --> 00:10:25,459
are in one system that are not in the

00:10:19,010 --> 00:10:27,709
other for this we also have an HTML view

00:10:25,459 --> 00:10:29,510
which can be useful especially if you

00:10:27,709 --> 00:10:33,890
are not analyzing it manually and not

00:10:29,510 --> 00:10:36,110
running it in some other command so we

00:10:33,890 --> 00:10:37,880
can do come

00:10:36,110 --> 00:10:43,390
they're of these same systems that I was

00:10:37,880 --> 00:10:48,230
just showing you just add the HTML flag

00:10:43,390 --> 00:10:49,760
and here we go first of all machinery

00:10:48,230 --> 00:10:51,680
will tell me it kind of compare all

00:10:49,760 --> 00:10:53,839
these other scopes because I didn't

00:10:51,680 --> 00:10:58,130
inspect them but I will still show you

00:10:53,839 --> 00:11:02,149
with a fully inspected one you can see

00:10:58,130 --> 00:11:04,010
here that the operating system is in

00:11:02,149 --> 00:11:07,130
both openSUSE leap so we don't have

00:11:04,010 --> 00:11:08,390
differences there that's great but here

00:11:07,130 --> 00:11:10,190
is what I was telling you about the

00:11:08,390 --> 00:11:13,700
packages you can see that the lib DVD of

00:11:10,190 --> 00:11:15,230
course has 1800 plus packages more which

00:11:13,700 --> 00:11:18,440
makes sense you probably want to have a

00:11:15,230 --> 00:11:22,670
lot of packages available there but the

00:11:18,440 --> 00:11:26,140
docker image on different from the DVD

00:11:22,670 --> 00:11:32,329
has only three packages extra which are

00:11:26,140 --> 00:11:35,089
specific for for for example here like I

00:11:32,329 --> 00:11:38,420
mentioned the opensuse release mini then

00:11:35,089 --> 00:11:40,579
the other interesting one is they there

00:11:38,420 --> 00:11:44,839
are three change packages for example

00:11:40,579 --> 00:11:47,899
and you can see here that both both

00:11:44,839 --> 00:11:50,899
systems use the CA certificates Mozilla

00:11:47,899 --> 00:11:53,300
but they differ in the checksum it would

00:11:50,899 --> 00:11:55,690
be interesting to know why what is there

00:11:53,300 --> 00:11:58,940
what change between one and the other

00:11:55,690 --> 00:12:00,949
and then like I mention there are the

00:11:58,940 --> 00:12:03,560
common elements these are all packages

00:12:00,949 --> 00:12:05,240
that are in both images and that they

00:12:03,560 --> 00:12:09,829
have absolutely no difference they have

00:12:05,240 --> 00:12:16,279
the same version and everything now

00:12:09,829 --> 00:12:18,589
let's let's go and play a little game

00:12:16,279 --> 00:12:21,380
let's find out let's put the differences

00:12:18,589 --> 00:12:25,160
between just like we what we were doing

00:12:21,380 --> 00:12:26,420
but going in more into more detail so we

00:12:25,160 --> 00:12:29,180
want to see what are really the

00:12:26,420 --> 00:12:33,380
differences between leap and a dolly

00:12:29,180 --> 00:12:38,350
well first of all like we mentioned well

00:12:33,380 --> 00:12:43,910
I first let me show you a completely

00:12:38,350 --> 00:12:45,560
inspected dr. limp okay so this one has

00:12:43,910 --> 00:12:48,649
all the Scopes as you can see here they

00:12:45,560 --> 00:12:49,970
are all available and the first the

00:12:48,649 --> 00:12:51,980
obvious part was

00:12:49,970 --> 00:12:53,720
there are many less packages in the

00:12:51,980 --> 00:12:56,839
doctor lib this makes sense you want to

00:12:53,720 --> 00:12:59,379
make the image much smaller right but

00:12:56,839 --> 00:13:04,009
let's have a look for example at the

00:12:59,379 --> 00:13:06,079
change manage files oh because the

00:13:04,009 --> 00:13:08,899
screen is a little bit too small you

00:13:06,079 --> 00:13:11,600
cannot see here but here is meant to say

00:13:08,899 --> 00:13:13,970
the leader you can see they're down in

00:13:11,600 --> 00:13:17,120
the bottom corner and you will see that

00:13:13,970 --> 00:13:19,279
there are a lot of deleted files and if

00:13:17,120 --> 00:13:22,069
you start looking into detail what what

00:13:19,279 --> 00:13:25,250
these files are you can check that most

00:13:22,069 --> 00:13:28,699
of them r dot emos so they probably

00:13:25,250 --> 00:13:30,500
deleted all the translations if you re

00:13:28,699 --> 00:13:33,680
running a docker container you probably

00:13:30,500 --> 00:13:36,139
don't need it you have them in your main

00:13:33,680 --> 00:13:38,209
system and the idea with the docker

00:13:36,139 --> 00:13:40,310
container is that you run as small as

00:13:38,209 --> 00:13:42,470
possible right so it makes sense why

00:13:40,310 --> 00:13:49,000
they want to remove this kind of

00:13:42,470 --> 00:13:53,509
information out of the image what else

00:13:49,000 --> 00:13:57,550
vagrant there is a leap version of

00:13:53,509 --> 00:14:03,170
vagrant you can download it from Oh

00:13:57,550 --> 00:14:06,410
shouldn't be happening there so if you

00:14:03,170 --> 00:14:09,620
go to Atlas a ship corpcom opens you say

00:14:06,410 --> 00:14:13,939
you will see all the images that are

00:14:09,620 --> 00:14:16,389
offered to download via a vagrant this

00:14:13,939 --> 00:14:19,279
is very helpful when you're developing

00:14:16,389 --> 00:14:24,620
for example here I have the vagrant file

00:14:19,279 --> 00:14:26,000
and all I need to do is to set this line

00:14:24,620 --> 00:14:29,509
in my vagrant file and it will

00:14:26,000 --> 00:14:32,779
immediately download the openSUSE leap

00:14:29,509 --> 00:14:35,660
or open-source opens with a tumbleweed

00:14:32,779 --> 00:14:38,750
for example and I can start immediately

00:14:35,660 --> 00:14:41,809
doing development in one of these

00:14:38,750 --> 00:14:44,860
machines but again what is different

00:14:41,809 --> 00:14:49,389
between those machines and the

00:14:44,860 --> 00:14:49,389
installation from the DVD let's find out

00:14:49,540 --> 00:14:52,839
vagrant leap

00:15:00,360 --> 00:15:04,330
again you can see it's the same

00:15:02,770 --> 00:15:07,750
operating system there's nothing

00:15:04,330 --> 00:15:09,670
changing their packages of course they

00:15:07,750 --> 00:15:11,290
also want to make it much smaller

00:15:09,670 --> 00:15:13,270
because otherwise you would have to

00:15:11,290 --> 00:15:16,600
download the entire DVD that wouldn't

00:15:13,270 --> 00:15:19,810
make much sense but they also add a lot

00:15:16,600 --> 00:15:22,690
more packages than in the docker image

00:15:19,810 --> 00:15:25,750
for example and why is that we can see

00:15:22,690 --> 00:15:27,460
for example that they have get that

00:15:25,750 --> 00:15:29,050
makes sense right you are going to be

00:15:27,460 --> 00:15:33,670
doing development inside of it so you

00:15:29,050 --> 00:15:37,720
probably want to have get we can also

00:15:33,670 --> 00:15:39,550
see that they have rubygems chef is

00:15:37,720 --> 00:15:43,060
there okay that makes sense because you

00:15:39,550 --> 00:15:46,120
can use a vagrant to do configuration

00:15:43,060 --> 00:15:50,500
management into that machine so it's

00:15:46,120 --> 00:15:53,380
necessary that it's there and you can

00:15:50,500 --> 00:15:56,110
spot things like this between your own

00:15:53,380 --> 00:15:58,540
systems with machinery which is great

00:15:56,110 --> 00:16:01,420
because you can tell okay do we have the

00:15:58,540 --> 00:16:04,630
right machine for sharing across our

00:16:01,420 --> 00:16:09,640
team for vagrant for example or should

00:16:04,630 --> 00:16:11,920
we make our own image should we use one

00:16:09,640 --> 00:16:18,580
that it's on the internet but add some

00:16:11,920 --> 00:16:22,090
put some additions in there perfect so

00:16:18,580 --> 00:16:24,160
another question here the difference is

00:16:22,090 --> 00:16:26,590
between leap and tumbleweed I mean it's

00:16:24,160 --> 00:16:31,660
kind of is that we expect that packages

00:16:26,590 --> 00:16:34,120
are newer in tumbleweed but are there

00:16:31,660 --> 00:16:38,770
any other differences that we can spot

00:16:34,120 --> 00:16:45,690
and for that i also have a tumble with

00:16:38,770 --> 00:16:48,690
DVD installation i think maybe not oh

00:16:45,690 --> 00:16:48,690
yeah

00:16:58,980 --> 00:17:04,350
okay now we can see immediately first

00:17:02,430 --> 00:17:07,230
time we see that the operating system is

00:17:04,350 --> 00:17:09,949
different we have here opens with a lip

00:17:07,230 --> 00:17:14,160
on the left and tumble with on the right

00:17:09,949 --> 00:17:16,010
sorry one thing I didn't mention is you

00:17:14,160 --> 00:17:20,040
can see that machinery pretty much split

00:17:16,010 --> 00:17:21,900
the page into on one side you will see

00:17:20,040 --> 00:17:23,429
everything that is related to leap on

00:17:21,900 --> 00:17:27,630
the other side you will see everything

00:17:23,429 --> 00:17:30,419
that is related to tumbleweed again

00:17:27,630 --> 00:17:32,580
packages there are a few packages that

00:17:30,419 --> 00:17:34,410
are only in leap there are a few

00:17:32,580 --> 00:17:38,820
packages that are only in tumbleweed but

00:17:34,410 --> 00:17:40,919
the difference is not that big but now

00:17:38,820 --> 00:17:42,809
we see this big number here there are a

00:17:40,919 --> 00:17:47,880
lot of change packages what happened

00:17:42,809 --> 00:17:51,210
there and it looks like our assumption

00:17:47,880 --> 00:17:55,260
is correct imagemagick for example it's

00:17:51,210 --> 00:17:57,809
simply a newer in tumbleweed so the

00:17:55,260 --> 00:18:00,720
version in leap is 6.8 diversion in to

00:17:57,809 --> 00:18:02,669
move it is 6.9 and so on with the all

00:18:00,720 --> 00:18:05,160
these other different packages there

00:18:02,669 --> 00:18:10,890
either the version is newer or it's a

00:18:05,160 --> 00:18:12,840
different release and so on users for

00:18:10,890 --> 00:18:16,410
example you can see that there are a

00:18:12,840 --> 00:18:20,070
couple extra users that appear only in

00:18:16,410 --> 00:18:21,480
tumbleweed but not in leap these are

00:18:20,070 --> 00:18:25,940
default installation by the way I

00:18:21,480 --> 00:18:25,940
haven't really played with it much

00:18:26,780 --> 00:18:32,429
groups also related to the to the users

00:18:30,540 --> 00:18:35,400
that we just saw so there are a couple

00:18:32,429 --> 00:18:39,330
of extra users there but in general it

00:18:35,400 --> 00:18:42,720
seems it's quite a similar so they don't

00:18:39,330 --> 00:18:45,000
defer to much except for you got the

00:18:42,720 --> 00:18:53,040
latest of the way of the packages in

00:18:45,000 --> 00:18:54,450
your tumbleweed which is great okay now

00:18:53,040 --> 00:19:00,840
i want to show you another command

00:18:54,450 --> 00:19:04,169
called export we will start by doing the

00:19:00,840 --> 00:19:06,660
sport kiwi c'mon actually I will just

00:19:04,169 --> 00:19:07,740
show you that one because it will be

00:19:06,660 --> 00:19:14,220
faster

00:19:07,740 --> 00:19:17,150
as well scenery sport kiwi and we need a

00:19:14,220 --> 00:19:23,090
QE directory where we're going to put it

00:19:17,150 --> 00:19:30,929
for now let's just put it in temp osc 16

00:19:23,090 --> 00:19:38,240
ok then equal here let's export the

00:19:30,929 --> 00:19:38,240
vagrant lip machine and see what happens

00:19:38,809 --> 00:19:48,960
great so now I have exported this

00:19:43,280 --> 00:19:53,760
description and if I go into this

00:19:48,960 --> 00:19:57,000
directory first of all you can see this

00:19:53,760 --> 00:20:01,520
rid me to give you an idea what you can

00:19:57,000 --> 00:20:04,260
do with this exported information and

00:20:01,520 --> 00:20:07,190
you can see down here that you could run

00:20:04,260 --> 00:20:09,720
this command in order to build this

00:20:07,190 --> 00:20:13,050
generated description or generate a

00:20:09,720 --> 00:20:17,100
configuration so it creates a machine

00:20:13,050 --> 00:20:18,990
for you I could run this but it can take

00:20:17,100 --> 00:20:22,860
around five minutes or something like

00:20:18,990 --> 00:20:28,040
that so I previously already had one

00:20:22,860 --> 00:20:28,040
version for you and you can see it here

00:20:28,940 --> 00:20:37,130
it's the oh wait

00:20:37,370 --> 00:20:47,120
sorry hey grant I saved it here vagrant

00:20:42,470 --> 00:20:50,480
lip and you can see that key we built a

00:20:47,120 --> 00:20:52,309
cue comma sheen for me which is great

00:20:50,480 --> 00:20:54,970
because then I can simply just go to

00:20:52,309 --> 00:20:58,990
Lippert and start this machine and

00:20:54,970 --> 00:21:03,230
that's exactly what we're gonna do I

00:20:58,990 --> 00:21:05,030
don't need this machine here this is the

00:21:03,230 --> 00:21:08,140
Kiwi lib machine i already have it there

00:21:05,030 --> 00:21:08,140
it just needs to get started

00:21:28,600 --> 00:21:32,430
in the meantime let me show you

00:21:33,180 --> 00:21:36,970
basically what happens here is that

00:21:35,050 --> 00:21:41,590
machinery takes the system description

00:21:36,970 --> 00:21:45,430
and it will convert it to either a kiwi

00:21:41,590 --> 00:21:47,110
or an outcast configuration file which

00:21:45,430 --> 00:21:49,090
you can define depending on the command

00:21:47,110 --> 00:21:52,150
that you use either export kiwi or

00:21:49,090 --> 00:21:55,120
export out to us and this can be quite

00:21:52,150 --> 00:21:58,420
helpful for example if you want it if

00:21:55,120 --> 00:22:00,940
you have a an old version of a machine

00:21:58,420 --> 00:22:03,970
no description an old state that you

00:22:00,940 --> 00:22:08,200
would like to see you just put it into a

00:22:03,970 --> 00:22:10,150
key we may use kiwi to build the image

00:22:08,200 --> 00:22:12,040
and then you already can run this

00:22:10,150 --> 00:22:18,030
machine you don't actually have to save

00:22:12,040 --> 00:22:20,710
the machine to do it because this was

00:22:18,030 --> 00:22:22,180
generated from a vagrant machine you can

00:22:20,710 --> 00:22:24,850
see that we don't start with the GUI

00:22:22,180 --> 00:22:28,510
that's normally in vagrant for example

00:22:24,850 --> 00:22:33,370
and I even have the users so in order to

00:22:28,510 --> 00:22:35,920
log in i need to use vagrant and the one

00:22:33,370 --> 00:22:42,790
characteristic of vagrant or example is

00:22:35,920 --> 00:22:45,490
that it sinks or it mounts the folder

00:22:42,790 --> 00:22:48,580
where you're working so and it puts it

00:22:45,490 --> 00:22:51,100
into / vagrant so if i go for example 2

00:22:48,580 --> 00:22:53,680
/ vagrant you will see the files that i

00:22:51,100 --> 00:22:56,980
had in the copy that i was using to

00:22:53,680 --> 00:23:00,760
develop and if i move on my machine into

00:22:56,980 --> 00:23:03,730
that folder which is this one right here

00:23:00,760 --> 00:23:05,470
where i showed you the vagrant file you

00:23:03,730 --> 00:23:09,550
will see exactly that that i have a

00:23:05,470 --> 00:23:12,550
docker file there and a vagrant file and

00:23:09,550 --> 00:23:15,880
if you see here they're exactly the same

00:23:12,550 --> 00:23:19,390
files so the entire image pretty much

00:23:15,880 --> 00:23:21,130
was generated not only the expected

00:23:19,390 --> 00:23:24,670
packages that should come from the

00:23:21,130 --> 00:23:26,230
distribution but also the extra stuff

00:23:24,670 --> 00:23:35,220
that you put in there that you need for

00:23:26,230 --> 00:23:37,480
development okay cool so we've seen a

00:23:35,220 --> 00:23:39,610
pretty much all the commands that I

00:23:37,480 --> 00:23:41,200
wanted to show you and the idea in

00:23:39,610 --> 00:23:45,549
machinery is that all these common

00:23:41,200 --> 00:23:48,480
we'll get together and make machinery

00:23:45,549 --> 00:23:52,090
more powerful more powerful and give you

00:23:48,480 --> 00:23:53,740
the ability to do additional task that

00:23:52,090 --> 00:23:55,690
you're already doing as a system

00:23:53,740 --> 00:23:58,779
administrator it's not meant to replace

00:23:55,690 --> 00:24:02,679
the current tools that you're already

00:23:58,779 --> 00:24:05,529
using but instead can I give you the

00:24:02,679 --> 00:24:07,600
additional tools so for example doing

00:24:05,529 --> 00:24:09,850
this comparisons can be really nice

00:24:07,600 --> 00:24:13,029
especially if you're trying to migrate a

00:24:09,850 --> 00:24:15,039
system or if you're if you want to find

00:24:13,029 --> 00:24:17,380
out about the packages there is are

00:24:15,039 --> 00:24:19,840
being used in a completely different

00:24:17,380 --> 00:24:23,799
distribution that you don't know in this

00:24:19,840 --> 00:24:26,789
case machinery can inspect the Red Hat

00:24:23,799 --> 00:24:29,769
can inspect the ubuntu can expect the

00:24:26,789 --> 00:24:33,519
centos so you can have all these

00:24:29,769 --> 00:24:36,480
different images next to each other and

00:24:33,519 --> 00:24:39,399
see what are the difference between them

00:24:36,480 --> 00:24:42,610
some use cases that I would like to talk

00:24:39,399 --> 00:24:45,970
about is our for example you can quickly

00:24:42,610 --> 00:24:47,799
check a state of a system so yeah I mean

00:24:45,970 --> 00:24:50,169
instead of doing this you could keep

00:24:47,799 --> 00:24:53,230
backups of all your systems and you

00:24:50,169 --> 00:24:56,289
could just go and find where you have

00:24:53,230 --> 00:24:58,899
that backup you can start the Machine

00:24:56,289 --> 00:25:01,000
and you can go and specifically check

00:24:58,899 --> 00:25:05,169
which version of a package was installed

00:25:01,000 --> 00:25:09,460
or what was the state of a certain

00:25:05,169 --> 00:25:13,529
configuration file instead of that you

00:25:09,460 --> 00:25:25,090
can just use machinery for example i

00:25:13,529 --> 00:25:28,539
have my list of machines here i keep for

00:25:25,090 --> 00:25:31,659
example copies of my machine the changes

00:25:28,539 --> 00:25:34,510
that i did in in the upgrades that I've

00:25:31,659 --> 00:25:36,909
done in tumbleweed for the last three

00:25:34,510 --> 00:25:39,340
changes for example and I could go

00:25:36,909 --> 00:25:43,510
immediately and see what was the version

00:25:39,340 --> 00:25:46,470
of a package for tumbleweed of the

00:25:43,510 --> 00:25:50,240
twelve of June this year so machinery

00:25:46,470 --> 00:25:53,190
show we put this one in particular and

00:25:50,240 --> 00:25:55,289
we can see I don't know imagemagick what

00:25:53,190 --> 00:25:57,120
version was it running back then and you

00:25:55,289 --> 00:25:59,520
have it right here you don't have to

00:25:57,120 --> 00:26:03,320
start the machine from scratch and

00:25:59,520 --> 00:26:05,700
everything it saves you a lot of time

00:26:03,320 --> 00:26:08,370
another use case could be for

00:26:05,700 --> 00:26:12,750
configuration management or dockerfile

00:26:08,370 --> 00:26:23,220
validation so having an example with a

00:26:12,750 --> 00:26:25,520
docker file you can see here this docker

00:26:23,220 --> 00:26:29,580
file will basically just install openssh

00:26:25,520 --> 00:26:33,990
less and machinery into a docker image

00:26:29,580 --> 00:26:37,669
based on openSUSE leap this of course is

00:26:33,990 --> 00:26:40,169
quite small I am based directly on the

00:26:37,669 --> 00:26:42,600
original image but many times you

00:26:40,169 --> 00:26:46,200
actually base your daughter files on

00:26:42,600 --> 00:26:49,530
some other image that you don't really

00:26:46,200 --> 00:26:51,270
know what's happening in there and you

00:26:49,530 --> 00:26:54,570
could use machinery to check out the

00:26:51,270 --> 00:26:57,419
results of the built image and see that

00:26:54,570 --> 00:27:00,030
it actually has the changes that you

00:26:57,419 --> 00:27:01,830
want and that it doesn't have some other

00:27:00,030 --> 00:27:04,169
code that you wouldn't like to have

00:27:01,830 --> 00:27:06,360
there or some of the some packages or

00:27:04,169 --> 00:27:12,440
some users or something like that and

00:27:06,360 --> 00:27:14,940
for that i have i think i got it here

00:27:12,440 --> 00:27:20,039
yeah so i have for example the docker

00:27:14,940 --> 00:27:23,809
machinery and i can see specifically the

00:27:20,039 --> 00:27:23,809
packages that were installed there ah

00:27:24,860 --> 00:27:32,520
sorry i would have to compare it right

00:27:27,990 --> 00:27:38,760
to the base docker image so i can say

00:27:32,520 --> 00:27:41,340
compare dr. leap image and dr. machinery

00:27:38,760 --> 00:27:43,440
in theory it should have only those

00:27:41,340 --> 00:27:46,230
three packages but of course those

00:27:43,440 --> 00:27:48,870
packages have dependencies so we see

00:27:46,230 --> 00:27:51,840
that it installed a couple of all those

00:27:48,870 --> 00:27:55,490
things so machinery is there openssh is

00:27:51,840 --> 00:27:57,809
there less is there and all these other

00:27:55,490 --> 00:28:00,080
packages that are dependent either on

00:27:57,809 --> 00:28:06,169
one of these three also get installed

00:28:00,080 --> 00:28:09,500
there but the interesting thing is you

00:28:06,169 --> 00:28:12,679
see that in this case also for example

00:28:09,500 --> 00:28:14,539
the repository for machinery was added

00:28:12,679 --> 00:28:17,090
but nothing else I don't see anything

00:28:14,539 --> 00:28:20,860
strange happening I can check that there

00:28:17,090 --> 00:28:20,860
were no changes from the original

00:28:21,190 --> 00:28:29,870
machinery image that would affect the

00:28:23,779 --> 00:28:32,750
resulting a docker machinery sorry the

00:28:29,870 --> 00:28:37,940
original darker lip image to the docker

00:28:32,750 --> 00:28:40,130
machinery image another use case for

00:28:37,940 --> 00:28:42,409
example could be that you can you could

00:28:40,130 --> 00:28:46,190
find out if one of your servers was

00:28:42,409 --> 00:28:49,580
tempered right if you compare it if you

00:28:46,190 --> 00:28:51,740
keep constant descriptions of your

00:28:49,580 --> 00:28:54,139
system you could compare to a previous

00:28:51,740 --> 00:28:57,289
time and say ok something weird started

00:28:54,139 --> 00:29:00,769
happening let's see how was it before

00:28:57,289 --> 00:29:03,500
and I'll show you a little bit of that

00:29:00,769 --> 00:29:07,580
I've prepared these images specifically

00:29:03,500 --> 00:29:13,190
for that so we're just going to be well

00:29:07,580 --> 00:29:18,080
let me just show you so tempura before I

00:29:13,190 --> 00:29:25,519
called it an tamper after let's look at

00:29:18,080 --> 00:29:27,559
it on the HTML view and like I said I

00:29:25,519 --> 00:29:29,360
prepared these images specifically so

00:29:27,559 --> 00:29:31,159
it's going to be very obvious you can

00:29:29,360 --> 00:29:34,460
you will see the differences obviously

00:29:31,159 --> 00:29:37,010
but for example there's one user that

00:29:34,460 --> 00:29:40,820
only exists in the server after it was

00:29:37,010 --> 00:29:45,320
tampered and so ok who created this user

00:29:40,820 --> 00:29:49,220
why did it happen on manage files you

00:29:45,320 --> 00:29:51,860
can see that there is just one SSH sorry

00:29:49,220 --> 00:29:56,539
one shell script file that was created

00:29:51,860 --> 00:29:58,159
in the after the server was tampered why

00:29:56,539 --> 00:30:03,559
is this you know it's it's suspicious

00:29:58,159 --> 00:30:07,070
already what is this doing also I can

00:30:03,559 --> 00:30:11,210
see that the boot grub put part CFG file

00:30:07,070 --> 00:30:11,910
is during both sir systems so before it

00:30:11,210 --> 00:30:14,070
was tampering

00:30:11,910 --> 00:30:15,990
after it was tempered but there are some

00:30:14,070 --> 00:30:18,230
differences in the size of it so

00:30:15,990 --> 00:30:22,980
machinery can you can quickly see here

00:30:18,230 --> 00:30:24,570
what are the what's the diff between one

00:30:22,980 --> 00:30:27,870
and the other and I can see for example

00:30:24,570 --> 00:30:30,540
that certain code was added into this

00:30:27,870 --> 00:30:32,490
file so you it can help you spot out

00:30:30,540 --> 00:30:34,530
differences much easier than if you

00:30:32,490 --> 00:30:36,960
would have to go my Neely and one and

00:30:34,530 --> 00:30:39,060
the other even though of course like i

00:30:36,960 --> 00:30:47,160
mentioned i specifically prepared this

00:30:39,060 --> 00:30:49,440
one to be really easy to spot on another

00:30:47,160 --> 00:30:51,840
example could be if you have a fail

00:30:49,440 --> 00:30:56,100
migration for example that you can you

00:30:51,840 --> 00:30:58,530
have a machine that you're running as a

00:30:56,100 --> 00:31:00,600
virtual machine or as a hardware machine

00:30:58,530 --> 00:31:06,770
and you want to move it for example to

00:31:00,600 --> 00:31:14,790
AWS and i think i have the example here

00:31:06,770 --> 00:31:16,620
wait so fail migration before and i'm

00:31:14,790 --> 00:31:24,210
going to compare it to the fail

00:31:16,620 --> 00:31:27,120
migration after okay again I prepared

00:31:24,210 --> 00:31:30,390
this one to be easy to spot but one

00:31:27,120 --> 00:31:33,630
thing that you see is that after the

00:31:30,390 --> 00:31:35,610
migration there is this package here the

00:31:33,630 --> 00:31:39,270
colonel easy to that makes sense I

00:31:35,610 --> 00:31:42,000
wanted to move it to AWS so it needs to

00:31:39,270 --> 00:31:46,830
have a kernel specific to those easy two

00:31:42,000 --> 00:31:49,140
instances but I should also have the

00:31:46,830 --> 00:31:53,850
package that was the kernel that was

00:31:49,140 --> 00:31:58,590
only for the previous system here and I

00:31:53,850 --> 00:32:00,390
don't have it I it you can see it here

00:31:58,590 --> 00:32:02,580
but that means that it's still installed

00:32:00,390 --> 00:32:06,300
in both machines I wouldn't really need

00:32:02,580 --> 00:32:10,320
to have the colonel send after I already

00:32:06,300 --> 00:32:12,780
migrated why is this happening if I

00:32:10,320 --> 00:32:16,380
check on my own manage files I can see

00:32:12,780 --> 00:32:18,990
that there's also this file that exists

00:32:16,380 --> 00:32:21,900
only after the migration and it's a

00:32:18,990 --> 00:32:24,450
migration right it shouldn't there

00:32:21,900 --> 00:32:28,200
shouldn't be weird files out there just

00:32:24,450 --> 00:32:30,030
and you're trying to copy pretty much

00:32:28,200 --> 00:32:33,030
everything you just want to change what

00:32:30,030 --> 00:32:35,160
is specific to the infrastructure and in

00:32:33,030 --> 00:32:38,640
this case we see that the boot do perch

00:32:35,160 --> 00:32:41,820
kernels is there what this could have

00:32:38,640 --> 00:32:46,140
meant is that when the migration was

00:32:41,820 --> 00:32:48,780
happening and the system failed to

00:32:46,140 --> 00:32:50,750
remove Colonel shank and therefore it

00:32:48,780 --> 00:32:54,870
never removed this file this file is

00:32:50,750 --> 00:32:57,300
when this file is here and the system is

00:32:54,870 --> 00:32:59,550
booted the system knows okay I need to

00:32:57,300 --> 00:33:01,830
remove the old kernel that that I find

00:32:59,550 --> 00:33:03,870
in this mission but it wasn't able to do

00:33:01,830 --> 00:33:08,100
it so at least it gives you an idea of

00:33:03,870 --> 00:33:10,560
how to find these issues easily again if

00:33:08,100 --> 00:33:12,390
there were many changes of course it

00:33:10,560 --> 00:33:16,350
will be a little bit harder to spot

00:33:12,390 --> 00:33:18,690
these specific differences but it would

00:33:16,350 --> 00:33:23,670
be much easier than if you are trying to

00:33:18,690 --> 00:33:28,260
guess out of the blue and there are of

00:33:23,670 --> 00:33:32,220
course more use cases that you can come

00:33:28,260 --> 00:33:34,290
up and or maybe there are some use cases

00:33:32,220 --> 00:33:38,520
that you have as a system administrator

00:33:34,290 --> 00:33:40,710
or as a developer and it would be great

00:33:38,520 --> 00:33:43,760
if we can discuss about them or see how

00:33:40,710 --> 00:33:46,410
Machinery Co help you with that so

00:33:43,760 --> 00:33:49,530
that's pretty much what I had prepared

00:33:46,410 --> 00:33:51,180
for you and if I if there are any

00:33:49,530 --> 00:33:53,330
questions that would be happy to take

00:33:51,180 --> 00:33:53,330
them

00:33:59,850 --> 00:34:08,490
okay no questions Marie so how much

00:34:05,429 --> 00:34:12,300
storage does an inspector machine until

00:34:08,490 --> 00:34:14,659
kanji on the machinery okay so the

00:34:12,300 --> 00:34:18,659
question is how much storage does it

00:34:14,659 --> 00:34:22,379
take to have a system description right

00:34:18,659 --> 00:34:24,810
well it will depend on the system right

00:34:22,379 --> 00:34:28,950
what's inside the system it will also

00:34:24,810 --> 00:34:31,859
depend if which scopes you decided to

00:34:28,950 --> 00:34:34,770
take from that system and it will also

00:34:31,859 --> 00:34:38,340
depend if you decided to extract files

00:34:34,770 --> 00:34:43,190
out of that system so i can give you an

00:34:38,340 --> 00:34:53,340
example in my my whole machinery folder

00:34:43,190 --> 00:34:56,660
for what i just showed you today it's 89

00:34:53,340 --> 00:35:00,240
mix for all these base images so it's

00:34:56,660 --> 00:35:02,640
actually quite small if for some reason

00:35:00,240 --> 00:35:04,740
you have VMs or something like that in

00:35:02,640 --> 00:35:07,650
your server well and you extract those

00:35:04,740 --> 00:35:09,480
files then it will take whatever that

00:35:07,650 --> 00:35:12,770
amount of space was but the nice thing

00:35:09,480 --> 00:35:17,040
is that machinery will not say not safe

00:35:12,770 --> 00:35:19,410
for example the configuration files or

00:35:17,040 --> 00:35:21,540
manage files machinery will check and if

00:35:19,410 --> 00:35:23,210
they haven't been changed it will not

00:35:21,540 --> 00:35:26,820
make a copy because it's the default

00:35:23,210 --> 00:35:30,050
from these RPM installation one only if

00:35:26,820 --> 00:35:39,240
it's changed then it will make a copy

00:35:30,050 --> 00:35:42,030
any other question okay well that's

00:35:39,240 --> 00:35:44,760
pretty much it thank you very much if

00:35:42,030 --> 00:35:49,260
you are interested in machinery you can

00:35:44,760 --> 00:35:52,619
just go to the machinery page here we

00:35:49,260 --> 00:35:56,180
have more information about it or you

00:35:52,619 --> 00:35:58,650
can simply check the code in github or

00:35:56,180 --> 00:36:02,750
write us an email to the mailing list or

00:35:58,650 --> 00:36:02,750
to my personal email thanks

00:37:01,460 --> 00:37:55,780
yes

00:37:03,410 --> 00:37:59,089
a job another solution for mr. Bishop

00:37:55,780 --> 00:38:02,059
part of the paparazzi Chappelle proper

00:37:59,089 --> 00:38:05,619
value never disclose the live is a

00:38:02,059 --> 00:38:05,619
dispute the syllabus

00:38:11,350 --> 00:38:13,350
Oh

00:41:03,570 --> 00:41:10,390
yes now if you know anything if you

00:41:08,470 --> 00:41:13,270
don't already know everything I'm saying

00:41:10,390 --> 00:41:20,800
I'm for you well wait wait wait let me

00:41:13,270 --> 00:41:26,200
think aha I'm wedding disasters okay so

00:41:20,800 --> 00:41:28,270
your step to your submission or not I

00:41:26,200 --> 00:41:37,859
expect you to help me onto the questions

00:41:28,270 --> 00:41:37,859
oh yeah yep

00:42:34,680 --> 00:42:41,230
my oh my god take the pitch but he will

00:42:38,020 --> 00:42:44,260
be back up in addition there are fatter

00:42:41,230 --> 00:42:46,810
profit would remain just come on we the

00:42:44,260 --> 00:42:54,069
people we found a boy yet when you

00:42:46,810 --> 00:43:00,569
feelin me our knowledge he panics that

00:42:54,069 --> 00:43:00,569
is wrong she destroys well

00:44:29,180 --> 00:44:47,359
damage has my bunion I am people has

00:44:44,220 --> 00:44:47,359
been a bad friend

00:45:38,480 --> 00:45:54,320
authenticity motion flashes came up that

00:45:48,450 --> 00:45:54,320
she wakes up asking to that each other

00:47:15,789 --> 00:47:18,789
No

00:47:25,119 --> 00:48:32,220
I said water mania we got to the last

00:48:36,720 --> 00:48:40,529
sweetheart a personal check

00:49:32,810 --> 00:49:55,140
Oh Hawkins each other booya citizen

00:49:50,930 --> 00:50:02,780
again sir that was on to grudges or no

00:49:55,140 --> 00:50:02,780
you look in ut you should positive

00:50:16,069 --> 00:51:06,260
i'm rincey to japan skeletal muscle TV

00:51:02,069 --> 00:51:06,260
and that has been ignorant people

00:51:09,740 --> 00:51:19,049
services article means sure there's no

00:51:16,319 --> 00:51:25,819
copy had another guy responsible now

00:51:19,049 --> 00:51:25,819
this can be significant negative CJ

00:52:40,219 --> 00:53:21,439
you're such a shaky easily of dis

00:53:03,719 --> 00:53:21,439
goodnights generally it is not a super

00:53:23,479 --> 00:53:35,429
cheesy and person but his mom find out

00:53:31,169 --> 00:53:38,779
at our partner without further she

00:53:35,429 --> 00:53:38,779

YouTube URL: https://www.youtube.com/watch?v=LYQZb3n7XiE


