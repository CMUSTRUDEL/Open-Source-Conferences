Title: Ludwig Nussel: openSUSE Leap 42.2 roadmap and development process
Publication date: 2016-06-26
Playlist: openSUSE Conference 2016
Description: 
	https://media.ccc.de/v/900-opensuse-leap-42-2-roadmap-and-development-process

This talk will present the ideas behind Leap, the roadmap towards 42.2, how to contribute to Leap and how to help with the release.

Ludwig Nussel
Captions: 
	00:00:08,440 --> 00:00:15,490
yeah welcome to this talk about leap 42

00:00:12,680 --> 00:00:20,750
the two roadmap and development process

00:00:15,490 --> 00:00:25,100
I'm Ludwig no sir I'm with Suzy since

00:00:20,750 --> 00:00:26,900
forever it so in the 15 years ago and

00:00:25,100 --> 00:00:31,250
the US team actually went to security

00:00:26,900 --> 00:00:32,989
and came the the opensuse team to leave

00:00:31,250 --> 00:00:35,989
so I started as a release manager for

00:00:32,989 --> 00:00:41,050
Sioux City bit much and now I have the

00:00:35,989 --> 00:00:45,040
pleasure to deliver the new 42 the two

00:00:41,050 --> 00:00:47,300
so what is what is leap actually in

00:00:45,040 --> 00:00:49,340
contrast to tumbleweed which is our

00:00:47,300 --> 00:00:52,309
rolling release with all the latest and

00:00:49,340 --> 00:00:58,550
greatest leap is meant to be stable

00:00:52,309 --> 00:01:00,320
release so it it's meant so not always

00:00:58,550 --> 00:01:03,500
contain the latest and greatest but if

00:01:00,320 --> 00:01:07,070
in doubt the packages that are proven to

00:01:03,500 --> 00:01:10,280
work and practice the release schedule

00:01:07,070 --> 00:01:13,100
for leap is a new version every year

00:01:10,280 --> 00:01:15,139
minor version every year and hopefully

00:01:13,100 --> 00:01:18,759
we can reach the goal of having painless

00:01:15,139 --> 00:01:21,969
updates between those minor releases

00:01:18,759 --> 00:01:24,429
this development model gives us

00:01:21,969 --> 00:01:27,619
maintenance period of three years

00:01:24,429 --> 00:01:29,149
counted from the first leap release so

00:01:27,619 --> 00:01:32,299
as we could see in a batter's talk

00:01:29,149 --> 00:01:34,490
before we have very conservative users

00:01:32,299 --> 00:01:39,049
mostly so they they install and then

00:01:34,490 --> 00:01:42,740
stay with us for quite a while there

00:01:39,049 --> 00:01:46,340
will be a overlap of six months when a

00:01:42,740 --> 00:01:50,689
new lip comes out until the magnens of

00:01:46,340 --> 00:01:53,240
the previous release stops compared to

00:01:50,689 --> 00:01:56,209
the previous opensuse releases they had

00:01:53,240 --> 00:01:59,899
a maintenance period of 18 months to two

00:01:56,209 --> 00:02:04,119
years roundabout and only two months

00:01:59,899 --> 00:02:06,739
time to switch if you skip the release

00:02:04,119 --> 00:02:12,380
the special thing about leap is that it

00:02:06,739 --> 00:02:15,980
has slea spaces and bases means

00:02:12,380 --> 00:02:18,290
basically up to X up to Nome that's what

00:02:15,980 --> 00:02:19,960
we take from Slee and all the rest

00:02:18,290 --> 00:02:21,220
alternative desktops and

00:02:19,960 --> 00:02:24,670
digital applications that are not in the

00:02:21,220 --> 00:02:28,180
enterprise distribution and that's what

00:02:24,670 --> 00:02:30,160
we can take from tumbleweed if wanted so

00:02:28,180 --> 00:02:33,940
directly to explain the difference how

00:02:30,160 --> 00:02:37,260
the previous model looked like the

00:02:33,940 --> 00:02:41,380
previous open sources had a release

00:02:37,260 --> 00:02:45,130
every eight months or one year and it

00:02:41,380 --> 00:02:46,540
always branched from factory I thought I

00:02:45,130 --> 00:02:48,370
corrected this slide I should actually

00:02:46,540 --> 00:02:52,770
say factory because tumbleweed was

00:02:48,370 --> 00:02:55,480
something different back then so

00:02:52,770 --> 00:02:56,920
basically factory was frozen at some

00:02:55,480 --> 00:02:59,770
point in time branched and that was

00:02:56,920 --> 00:03:02,860
released this opensuse and every once in

00:02:59,770 --> 00:03:05,020
a while Suzie took that code base again

00:03:02,860 --> 00:03:08,590
and create a esli release out of that

00:03:05,020 --> 00:03:10,990
and like with latex the 11 the

00:03:08,590 --> 00:03:14,650
development was mostly independent of

00:03:10,990 --> 00:03:18,130
opensuse releases so what's the

00:03:14,650 --> 00:03:21,310
difference now now with leap we have a

00:03:18,130 --> 00:03:24,940
shared code base that is the base system

00:03:21,310 --> 00:03:28,320
that is used in Slee and in leap at the

00:03:24,940 --> 00:03:33,250
same time and leap at packages from

00:03:28,320 --> 00:03:35,560
tumbleweed on top we are not strictly

00:03:33,250 --> 00:03:38,440
bound to only you sleep packages we can

00:03:35,560 --> 00:03:40,750
also take packages from tumbleweed for

00:03:38,440 --> 00:03:42,790
example if we if a feature is too late

00:03:40,750 --> 00:03:45,750
for first less service pack we might

00:03:42,790 --> 00:03:48,070
decide to put it in leap anyways and and

00:03:45,750 --> 00:03:50,470
in the hope that sleep picks it up for

00:03:48,070 --> 00:03:52,710
the next service pack so there's a flow

00:03:50,470 --> 00:03:55,120
back into the shared code base and

00:03:52,710 --> 00:03:57,970
that's what exactly what's happening

00:03:55,120 --> 00:03:59,830
with it for it were to right now in

00:03:57,970 --> 00:04:02,200
fully to the one we had quite some

00:03:59,830 --> 00:04:06,190
packages updated to tumbleweed versions

00:04:02,200 --> 00:04:14,380
and now sp2 sings up to that to those

00:04:06,190 --> 00:04:19,180
versions again yeah some facts about 420

00:04:14,380 --> 00:04:24,460
two we base it on 4201 which was read 12

00:04:19,180 --> 00:04:27,340
sp1 and then we take updates from li 12

00:04:24,460 --> 00:04:29,070
SP 2 sp2 is actually a pretty big

00:04:27,340 --> 00:04:32,520
service pack

00:04:29,070 --> 00:04:34,680
so I said lip is going to be stable and

00:04:32,520 --> 00:04:38,220
not so many updates but if Slee up

00:04:34,680 --> 00:04:41,700
States more than we also update more so

00:04:38,220 --> 00:04:44,790
sp2 is about 900 packages yesterday I

00:04:41,700 --> 00:04:47,940
don't know how many it is today and we

00:04:44,790 --> 00:04:52,230
get a new Colonel colonel 44 LTS release

00:04:47,940 --> 00:04:53,850
from sp2 we get a new system d Frederick

00:04:52,230 --> 00:04:56,060
already explained the story behind gnome

00:04:53,850 --> 00:04:59,610
so we get a full gnome desktop upgrade

00:04:56,060 --> 00:05:01,590
we also get a cute update which is

00:04:59,610 --> 00:05:05,000
actually a good thing because that new

00:05:01,590 --> 00:05:07,470
acute enables us also to update KDE and

00:05:05,000 --> 00:05:10,560
lots of other packages like some bars

00:05:07,470 --> 00:05:13,170
updated and sp2 and on top of that we

00:05:10,560 --> 00:05:14,820
had components from tumbleweed so katie

00:05:13,170 --> 00:05:18,150
is the the most prominent example

00:05:14,820 --> 00:05:19,860
probably the second desktop and the KDE

00:05:18,150 --> 00:05:24,390
team already indicated that they want to

00:05:19,860 --> 00:05:26,280
upgrade KDE in 4202 as well and other

00:05:24,390 --> 00:05:28,500
packages i mentioned haskell here with

00:05:26,280 --> 00:05:32,360
just because last week it was rather

00:05:28,500 --> 00:05:34,710
annoying to upgrade on the 50 packages

00:05:32,360 --> 00:05:37,850
yeah that the scheduled release date is

00:05:34,710 --> 00:05:40,380
November the second so it's the same

00:05:37,850 --> 00:05:42,840
schedule like previous opensuse releases

00:05:40,380 --> 00:05:45,870
had released in November that turned out

00:05:42,840 --> 00:05:51,600
to be pretty good the primary

00:05:45,870 --> 00:05:55,260
architecture will be x86 64 so no 32-bit

00:05:51,600 --> 00:05:59,240
again secondary architectures are AR 64

00:05:55,260 --> 00:05:59,240
and Power PC we are the pod sub-project

00:06:01,010 --> 00:06:06,990
here's a more detailed schedule so we

00:06:04,620 --> 00:06:10,080
already managed to release a 4 1 and

00:06:06,990 --> 00:06:14,070
alpha 2 over towards yesterday the next

00:06:10,080 --> 00:06:15,870
milestone is alpha 3 and 4 weeks even

00:06:14,070 --> 00:06:19,350
though it's called alpha it's important

00:06:15,870 --> 00:06:22,680
to know that Slee ences it's better

00:06:19,350 --> 00:06:26,400
phase out in four weeks so it gets

00:06:22,680 --> 00:06:28,440
harder to get fixes back into Slee so

00:06:26,400 --> 00:06:33,870
our bases them basically already freezes

00:06:28,440 --> 00:06:35,670
in four weeks then end of august i want

00:06:33,870 --> 00:06:38,460
to have a better one then beta 2 in

00:06:35,670 --> 00:06:40,350
September and october will be our

00:06:38,460 --> 00:06:42,430
release candidates with the release at

00:06:40,350 --> 00:06:45,860
the end

00:06:42,430 --> 00:06:47,420
for those whom I may wonder we have a

00:06:45,860 --> 00:06:49,640
gap between gold master and the actual

00:06:47,420 --> 00:06:51,590
release date so on the gold master that

00:06:49,640 --> 00:06:54,350
we produce if on ISIL and then we need a

00:06:51,590 --> 00:06:56,540
few days for the mirrors to fill up to

00:06:54,350 --> 00:06:58,520
publish it worldwide and we also need to

00:06:56,540 --> 00:07:00,500
give the place a bit of a head start so

00:06:58,520 --> 00:07:02,750
they can prepare articles to get a

00:07:00,500 --> 00:07:05,870
bigger impact on the release day so that

00:07:02,750 --> 00:07:07,670
is why it's important to stick to that

00:07:05,870 --> 00:07:09,560
and don't share the iso before they

00:07:07,670 --> 00:07:14,870
actually release date helps us have a

00:07:09,560 --> 00:07:19,010
bigger impact okay let's get a bit more

00:07:14,870 --> 00:07:21,230
technical if you want to submit packages

00:07:19,010 --> 00:07:22,880
for libra one to check the status the

00:07:21,230 --> 00:07:27,440
project you need to look at in OBS is

00:07:22,880 --> 00:07:29,030
open to the leap for a 2 dot 2 and 4

00:07:27,440 --> 00:07:31,700
non-free packages there a non-free

00:07:29,030 --> 00:07:34,040
sub-project that's why you have to

00:07:31,700 --> 00:07:36,290
submit packages that we have to put your

00:07:34,040 --> 00:07:39,700
submit requests as long as we're

00:07:36,290 --> 00:07:42,250
developing so about until the RC phase

00:07:39,700 --> 00:07:44,960
when we're done with developing leap

00:07:42,250 --> 00:07:47,150
maintenance starts and then you have to

00:07:44,960 --> 00:07:48,920
submit to the update project but you

00:07:47,150 --> 00:07:50,750
will notice because always see at that

00:07:48,920 --> 00:07:57,050
point will reject your submissions 242

00:07:50,750 --> 00:08:00,590
the 20 that's just for completeness yeah

00:07:57,050 --> 00:08:06,620
one thing to explain when talking about

00:08:00,590 --> 00:08:07,820
leap is the Rings and stagings packages

00:08:06,620 --> 00:08:11,120
every once in a while get approached by

00:08:07,820 --> 00:08:12,890
release engineers telling them that some

00:08:11,120 --> 00:08:15,950
package failed in ring whatever or

00:08:12,890 --> 00:08:20,000
failed in staging whatever and you

00:08:15,950 --> 00:08:23,570
wonder what that is about so this model

00:08:20,000 --> 00:08:25,550
is copied from tumbleweed basically the

00:08:23,570 --> 00:08:28,730
tumbleweed development process in order

00:08:25,550 --> 00:08:32,590
to guarantee a always working based

00:08:28,730 --> 00:08:36,080
system we separate the distribution in

00:08:32,590 --> 00:08:39,380
in a core part we care about so up to

00:08:36,080 --> 00:08:42,490
gnome and KDE basically and that package

00:08:39,380 --> 00:08:44,900
I said that are part of those rings are

00:08:42,490 --> 00:08:48,260
tested separately in a staging project

00:08:44,900 --> 00:08:50,330
so for example if someone submits Philip

00:08:48,260 --> 00:08:51,649
see it would go to a staging project the

00:08:50,330 --> 00:08:56,420
staging project

00:08:51,649 --> 00:08:59,629
recompile all of the air two thousand

00:08:56,420 --> 00:09:00,920
packages runs open PA and checks if

00:08:59,629 --> 00:09:10,009
everything is fine before it gets in the

00:09:00,920 --> 00:09:13,459
distribution so there are actually three

00:09:10,009 --> 00:09:15,769
rings one is the ring 0 is the bootstrap

00:09:13,459 --> 00:09:17,629
ring is about 100 packages from those

00:09:15,769 --> 00:09:22,160
hundred packages it's possible to put

00:09:17,629 --> 00:09:24,920
the entire distribution ring one is

00:09:22,160 --> 00:09:27,230
everything up to the minimal X

00:09:24,920 --> 00:09:32,480
installation basically so ice WM and

00:09:27,230 --> 00:09:34,939
ring two ads Norman KDE and that setup

00:09:32,480 --> 00:09:36,769
is mirrored in the end of staging set up

00:09:34,939 --> 00:09:39,410
so they're staging a tui project right

00:09:36,769 --> 00:09:41,740
now Philippe contained a ring one

00:09:39,410 --> 00:09:44,119
packages and the DVD sub-project

00:09:41,740 --> 00:09:47,179
contained their ring to package though

00:09:44,119 --> 00:09:48,709
that's what gone by firefox's in the DVD

00:09:47,179 --> 00:09:53,959
sub-project and you couldn't find it in

00:09:48,709 --> 00:09:56,540
in a yeah the non ring packages go to go

00:09:53,959 --> 00:09:59,749
to an interim staging project staging I

00:09:56,540 --> 00:10:02,059
a TI the package is there just rebuilt

00:09:59,749 --> 00:10:10,220
to check that the submission is complete

00:10:02,059 --> 00:10:12,920
we don't run open gate on that so we

00:10:10,220 --> 00:10:15,829
already learned that leap consists of

00:10:12,920 --> 00:10:18,350
several upstream project so it has

00:10:15,829 --> 00:10:24,800
packages from less as well as from 42 to

00:10:18,350 --> 00:10:28,579
21 and from factory the it's important

00:10:24,800 --> 00:10:31,189
to know that packages from slee and 4281

00:10:28,579 --> 00:10:33,470
are submitted by pot so you don't have

00:10:31,189 --> 00:10:35,449
to submit them yourself you can of

00:10:33,470 --> 00:10:38,990
course if the body's too slow but in

00:10:35,449 --> 00:10:40,309
general you don't need to but packages

00:10:38,990 --> 00:10:43,790
that come from factory need to be

00:10:40,309 --> 00:10:46,939
submitted explicitly the reason is we

00:10:43,790 --> 00:10:48,829
cannot know if we can automatically

00:10:46,939 --> 00:10:51,079
determine if a version factory is safe

00:10:48,829 --> 00:10:56,179
to upgrade and leap whether you want

00:10:51,079 --> 00:10:58,870
that so even if you submitted something

00:10:56,179 --> 00:11:01,100
like Haskell to way to the two already

00:10:58,870 --> 00:11:08,689
you need to submit again if you want to

00:11:01,100 --> 00:11:12,499
upgrade it there I often asked question

00:11:08,689 --> 00:11:15,439
is how can I find out where my package

00:11:12,499 --> 00:11:18,230
comes from that comes from sleeve or

00:11:15,439 --> 00:11:21,769
from Suzie or whether they come from so

00:11:18,230 --> 00:11:24,639
we have this special 00 meta package

00:11:21,769 --> 00:11:30,079
container that contains a youngin file

00:11:24,639 --> 00:11:31,610
that resembles a dictionary basically so

00:11:30,079 --> 00:11:35,059
it just names the package and where it

00:11:31,610 --> 00:11:37,089
comes from pretty straightforward we can

00:11:35,059 --> 00:11:40,490
see here that bind for example is from

00:11:37,089 --> 00:11:45,529
sp1 keep us from factory and the chrono

00:11:40,490 --> 00:11:47,569
is a copy in fortitude or two and same

00:11:45,529 --> 00:11:49,519
with other packages so if you want to

00:11:47,569 --> 00:11:51,439
know where a package comes from or where

00:11:49,519 --> 00:11:53,660
they bought that submits the the

00:11:51,439 --> 00:11:56,809
packages looks at take a look at that

00:11:53,660 --> 00:11:59,689
file if you don't like the presentation

00:11:56,809 --> 00:12:02,809
of the information go ahead and write

00:11:59,689 --> 00:12:07,699
some nice web GUI so everyone can

00:12:02,809 --> 00:12:10,399
benefit from that okay here's a picture

00:12:07,699 --> 00:12:13,629
the only one this presentation it's

00:12:10,399 --> 00:12:18,519
outlines the development process it's

00:12:13,629 --> 00:12:21,110
basically the same as factory so

00:12:18,519 --> 00:12:24,040
everything starts usually in devil

00:12:21,110 --> 00:12:28,220
projects the package maintainer submits

00:12:24,040 --> 00:12:29,749
package sources towards 4202 we never

00:12:28,220 --> 00:12:33,949
copy binaries for those from other

00:12:29,749 --> 00:12:36,679
distributions always sources at that

00:12:33,949 --> 00:12:39,019
point we have several review boards so

00:12:36,679 --> 00:12:42,829
automated tools that look at the

00:12:39,019 --> 00:12:44,929
submissions and review them we have the

00:12:42,829 --> 00:12:47,120
staging manager who looks at those

00:12:44,929 --> 00:12:49,249
packages and as mentioned before some of

00:12:47,120 --> 00:12:51,439
them are ring packages they need to go

00:12:49,249 --> 00:12:54,889
to a special staging project they copied

00:12:51,439 --> 00:12:56,449
their rebuild then the toe staging

00:12:54,889 --> 00:12:58,819
projects produce ISO images the ISO

00:12:56,449 --> 00:13:00,649
images go to okay okay there's some

00:12:58,819 --> 00:13:04,040
basic checks not all of them but some

00:13:00,649 --> 00:13:06,649
basic important tests and if open k says

00:13:04,040 --> 00:13:07,649
go the staging manager of the release

00:13:06,649 --> 00:13:10,160
manager

00:13:07,649 --> 00:13:12,149
except the submission in 242 22 and

00:13:10,160 --> 00:13:15,449
they're all the packages are also

00:13:12,149 --> 00:13:18,540
rebuild again after a while depending

00:13:15,449 --> 00:13:22,769
how fast OSS we get our ISO and there

00:13:18,540 --> 00:13:26,879
are stp repo that one again goes to open

00:13:22,769 --> 00:13:30,149
k and open k runs hundreds of tests on

00:13:26,879 --> 00:13:31,709
those and if that when it's also says

00:13:30,149 --> 00:13:34,649
okay the release manager i can go ahead

00:13:31,709 --> 00:13:38,220
and declare for example alpha 2 like

00:13:34,649 --> 00:13:40,559
yesterday if it's red yeah we would have

00:13:38,220 --> 00:13:44,220
to delay and use other the difference to

00:13:40,559 --> 00:13:47,490
tumbleweed OBS automatically publishes

00:13:44,220 --> 00:13:51,059
the 42 the two results to the download

00:13:47,490 --> 00:13:54,360
server without waiting for open k only

00:13:51,059 --> 00:13:59,579
the snapshots that we release are

00:13:54,360 --> 00:14:01,860
influenced by the open k result but

00:13:59,579 --> 00:14:03,689
right now you won't notice because the

00:14:01,860 --> 00:14:05,519
when you install the alpha 2 for example

00:14:03,689 --> 00:14:09,929
it always gets to the offer to rape

00:14:05,519 --> 00:14:12,059
whenever to the untested one whether or

00:14:09,929 --> 00:14:15,629
not that is a good setup would be up for

00:14:12,059 --> 00:14:17,999
discussions we could in theory to a

00:14:15,629 --> 00:14:21,779
similar model with like tumbleweed and

00:14:17,999 --> 00:14:25,470
don't have hard milestones but wait for

00:14:21,779 --> 00:14:29,100
the open k results and update the day

00:14:25,470 --> 00:14:30,480
alpha beta repo every day would be a

00:14:29,100 --> 00:14:36,769
possible model but right now it's the

00:14:30,480 --> 00:14:40,649
traditional one so i mentioned the tools

00:14:36,769 --> 00:14:42,809
the first one is the update crawler it's

00:14:40,649 --> 00:14:44,879
a python script that looks into this

00:14:42,809 --> 00:14:46,319
lookup file and checks whether any of

00:14:44,879 --> 00:14:48,660
those mentioned projects have newer

00:14:46,319 --> 00:14:52,769
versions of a package and then submits

00:14:48,660 --> 00:14:57,870
them another tool we have is the leaper

00:14:52,769 --> 00:14:59,910
but this spot verifies the origin of a

00:14:57,870 --> 00:15:02,279
package so if the lookup file says the

00:14:59,910 --> 00:15:04,619
package is from 40 to the one for

00:15:02,279 --> 00:15:06,809
example and someone goes ahead and

00:15:04,619 --> 00:15:09,869
submits the factory package the body

00:15:06,809 --> 00:15:13,980
would ask for manual review to say okay

00:15:09,869 --> 00:15:16,769
that is fine just to make sure people

00:15:13,980 --> 00:15:18,510
don't accidentally submit experimental

00:15:16,769 --> 00:15:21,760
sources there

00:15:18,510 --> 00:15:25,420
it also has bits of the maintenance pot

00:15:21,760 --> 00:15:26,680
so if the package maintainer himself

00:15:25,420 --> 00:15:28,810
doesn't submit the package but someone

00:15:26,680 --> 00:15:30,400
else the pod would notice and put the

00:15:28,810 --> 00:15:34,240
original package maintain our devil

00:15:30,400 --> 00:15:35,530
project as a reviewer so that is active

00:15:34,240 --> 00:15:37,390
already and some of you may have

00:15:35,530 --> 00:15:40,210
received the email sometimes it says

00:15:37,390 --> 00:15:44,260
review needed by devil language is

00:15:40,210 --> 00:15:46,720
Python that's for you to take action go

00:15:44,260 --> 00:15:49,600
into OBS please and I prove the decline

00:15:46,720 --> 00:15:53,470
the request otherwise we cannot check in

00:15:49,600 --> 00:15:56,830
such packages and finally we have the

00:15:53,470 --> 00:15:58,600
measure for the two script that every

00:15:56,830 --> 00:16:00,040
once in a while runs through all day for

00:15:58,600 --> 00:16:02,200
it will two packages and updates the

00:16:00,040 --> 00:16:05,560
lookup file so the other parts can work

00:16:02,200 --> 00:16:08,020
on that all of the sources are in github

00:16:05,560 --> 00:16:13,530
so if you don't like how the bot behaves

00:16:08,020 --> 00:16:17,800
feel free to send a pull request good

00:16:13,530 --> 00:16:20,590
with all that how can you contribute we

00:16:17,800 --> 00:16:22,840
have several areas where we are looking

00:16:20,590 --> 00:16:26,740
for contributions one of them for

00:16:22,840 --> 00:16:28,120
example is design so we would like to

00:16:26,740 --> 00:16:31,180
have all our desktops branded in the

00:16:28,120 --> 00:16:34,240
same way for example have the wallpaper

00:16:31,180 --> 00:16:35,350
the same across distributions and one

00:16:34,240 --> 00:16:37,090
thing that I would really like to see

00:16:35,350 --> 00:16:40,000
you have the same font on every desktop

00:16:37,090 --> 00:16:42,100
because open k looks at screenshots so

00:16:40,000 --> 00:16:45,250
for example if you have inkscape unknown

00:16:42,100 --> 00:16:46,840
and on xfce so human it looks the same

00:16:45,250 --> 00:16:47,950
but for the machine it's different

00:16:46,840 --> 00:16:50,920
because the font is different for

00:16:47,950 --> 00:16:53,260
whatever reason so if you have a clue

00:16:50,920 --> 00:16:57,720
about that kind of stuff you're welcome

00:16:53,260 --> 00:17:00,220
to join also in the area of design is

00:16:57,720 --> 00:17:02,200
taking a look at our infrastructure we

00:17:00,220 --> 00:17:05,650
have quite some sites that use a

00:17:02,200 --> 00:17:08,050
different look so the ww open to the org

00:17:05,650 --> 00:17:11,589
side was updated but not other bits of

00:17:08,050 --> 00:17:13,480
the infrastructure so if you are good in

00:17:11,589 --> 00:17:15,819
CSS and that kind of stuff feel free to

00:17:13,480 --> 00:17:20,050
jump in and make our infrastructure

00:17:15,819 --> 00:17:21,850
config consistent also we have quite

00:17:20,050 --> 00:17:24,000
some promotional material for our

00:17:21,850 --> 00:17:26,380
releases and they need constant updating

00:17:24,000 --> 00:17:29,170
like flyers and it kind of stuff if you

00:17:26,380 --> 00:17:30,330
want to like to work on that one join

00:17:29,170 --> 00:17:33,880
their

00:17:30,330 --> 00:17:37,390
another area is documentation so most of

00:17:33,880 --> 00:17:38,919
our stuff is in the wiki when it's a

00:17:37,390 --> 00:17:41,260
wiki so we don't need to ask anyone for

00:17:38,919 --> 00:17:43,659
permissions if you don't like the way a

00:17:41,260 --> 00:17:48,580
leap for the two is documented just go

00:17:43,659 --> 00:17:50,950
ahead and fix it really easy also the

00:17:48,580 --> 00:17:52,630
release notes if you have some annoying

00:17:50,950 --> 00:17:54,760
bugs that we want to communicate the

00:17:52,630 --> 00:17:56,740
users we can mention them in the release

00:17:54,760 --> 00:17:58,330
notes there nowadays maintained on

00:17:56,740 --> 00:18:01,870
github so it's just a pull request away

00:17:58,330 --> 00:18:04,120
if you want something that people don't

00:18:01,870 --> 00:18:07,240
want to run at the same mistake you made

00:18:04,120 --> 00:18:11,260
just file a pull request for the release

00:18:07,240 --> 00:18:15,059
notes then another point is

00:18:11,260 --> 00:18:18,909
infrastructure we run quite a few

00:18:15,059 --> 00:18:21,760
systems and sides that anyone could get

00:18:18,909 --> 00:18:24,520
access to who as a clue like that ww

00:18:21,760 --> 00:18:27,159
open to the org or their site that hosts

00:18:24,520 --> 00:18:28,870
the release notes has some ugliest group

00:18:27,159 --> 00:18:32,890
so if you want to take care of that kind

00:18:28,870 --> 00:18:36,789
of stuff there you can help they're also

00:18:32,890 --> 00:18:39,370
the software opensuse org discussion

00:18:36,789 --> 00:18:40,870
came out recently and ankara actually

00:18:39,370 --> 00:18:44,590
has a workshop tomorrow about that one

00:18:40,870 --> 00:18:46,360
it needs a revamp and people that can

00:18:44,590 --> 00:18:48,340
contribute their influence how it looks

00:18:46,360 --> 00:18:52,960
how it works in the future and even run

00:18:48,340 --> 00:18:55,570
the website if they want to and I need

00:18:52,960 --> 00:18:57,070
some first contact to update the

00:18:55,570 --> 00:18:58,539
download site regularly with the current

00:18:57,070 --> 00:19:03,970
alpha worse not better version or

00:18:58,539 --> 00:19:07,539
whatever then a pic piece where you can

00:19:03,970 --> 00:19:09,669
contribute is marketing that is right

00:19:07,539 --> 00:19:11,110
now not an odd face yet but the closer

00:19:09,669 --> 00:19:13,889
we get to release the more important is

00:19:11,110 --> 00:19:17,380
to build up some excitement

00:19:13,889 --> 00:19:19,720
even though I better show that it has

00:19:17,380 --> 00:19:21,850
not that much of an impact unfortunately

00:19:19,720 --> 00:19:24,940
nevertheless we should make some noise

00:19:21,850 --> 00:19:27,220
about our releases in the previous

00:19:24,940 --> 00:19:31,360
releases we use the marketing plan that

00:19:27,220 --> 00:19:33,010
mostly focused on new features but leap

00:19:31,360 --> 00:19:36,399
is not really about new features it's

00:19:33,010 --> 00:19:38,440
about being stable so we have to think

00:19:36,399 --> 00:19:41,620
about how to advertise leap in the

00:19:38,440 --> 00:19:44,649
future for it to the two will have many

00:19:41,620 --> 00:19:46,929
new exciting features due to sp2 but 42

00:19:44,649 --> 00:19:48,970
the three most likely will be more

00:19:46,929 --> 00:19:51,279
boring so we need a different marketing

00:19:48,970 --> 00:19:54,549
message there volunteers are more than

00:19:51,279 --> 00:19:57,429
welcome to join there and help getting

00:19:54,549 --> 00:20:00,010
on your marketing plan work on the

00:19:57,429 --> 00:20:02,710
messages we send participate in a social

00:20:00,010 --> 00:20:06,789
media that kind of stuff can be done in

00:20:02,710 --> 00:20:09,279
marketing then if you're packager of

00:20:06,789 --> 00:20:10,450
course take care of your packages submit

00:20:09,279 --> 00:20:12,490
them to leave if it makes sense to

00:20:10,450 --> 00:20:15,669
update them but you can also help to

00:20:12,490 --> 00:20:17,350
decide to not update packages like I

00:20:15,669 --> 00:20:20,350
said before there's a bot will check

00:20:17,350 --> 00:20:22,360
submissions from factory and some help

00:20:20,350 --> 00:20:24,760
is useful there to decide which packages

00:20:22,360 --> 00:20:27,970
to accept and for which one to say sorry

00:20:24,760 --> 00:20:30,570
no this is too experimental for leap of

00:20:27,970 --> 00:20:32,860
course you can also help other people to

00:20:30,570 --> 00:20:35,649
fix their packages they don't build for

00:20:32,860 --> 00:20:37,600
the new leap anymore now 42 announcement

00:20:35,649 --> 00:20:39,549
you could read for example that several

00:20:37,600 --> 00:20:42,370
of the changes like Julie bc or see Meg

00:20:39,549 --> 00:20:45,760
broke other packages and i'm quite sure

00:20:42,370 --> 00:20:49,120
no one will be mad at you if you help

00:20:45,760 --> 00:20:50,740
fix the boot breakages there so just go

00:20:49,120 --> 00:20:57,429
ahead look at the blue failures and jump

00:20:50,740 --> 00:21:00,429
in QA leap is meant to be stable so that

00:20:57,429 --> 00:21:03,549
requires work that requires testing so

00:21:00,429 --> 00:21:07,659
we need ta please go ahead and install

00:21:03,549 --> 00:21:11,289
the the milestones we release help with

00:21:07,659 --> 00:21:14,559
the testing plan so people know what to

00:21:11,289 --> 00:21:17,360
test someone needs to think what what

00:21:14,559 --> 00:21:19,280
feature to test like for example alpha 2

00:21:17,360 --> 00:21:21,500
there's no KD up there yet so it doesn't

00:21:19,280 --> 00:21:24,470
make sense to test Katie yet and the

00:21:21,500 --> 00:21:26,330
testing should focus Morgan all would be

00:21:24,470 --> 00:21:28,160
nice to have someone who can come up

00:21:26,330 --> 00:21:30,530
with a plan and tell people what to test

00:21:28,160 --> 00:21:32,830
out there especially on physical

00:21:30,530 --> 00:21:38,059
machines because open PA covers the

00:21:32,830 --> 00:21:39,740
boring p.m. apart already also in the

00:21:38,059 --> 00:21:41,840
area of key a would be to take a look at

00:21:39,740 --> 00:21:43,190
the bug reports that come in make sure

00:21:41,840 --> 00:21:45,950
that they are assigned to the right

00:21:43,190 --> 00:21:48,080
people that we have good bug reports

00:21:45,950 --> 00:21:49,700
that people are at log files and all

00:21:48,080 --> 00:21:55,669
that kind of stuff so developers can fix

00:21:49,700 --> 00:21:59,600
them then another area is release

00:21:55,669 --> 00:22:03,410
engineering so this is right now marks

00:21:59,600 --> 00:22:05,600
dominic and me mostly looking at staging

00:22:03,410 --> 00:22:08,630
project make sure that that we pull all

00:22:05,600 --> 00:22:10,700
required packages to rebuild them look

00:22:08,630 --> 00:22:13,040
at the boot failures check the logs

00:22:10,700 --> 00:22:15,850
what's the reason file box look at the

00:22:13,040 --> 00:22:18,410
open create result decide whether

00:22:15,850 --> 00:22:20,150
breakage is intended and open k needs to

00:22:18,410 --> 00:22:24,410
be adjusted or whether it's actually a

00:22:20,150 --> 00:22:27,020
bug and the systems are all public so

00:22:24,410 --> 00:22:30,140
anyone can look at that if you enjoy

00:22:27,020 --> 00:22:33,910
digging into strange problems related to

00:22:30,140 --> 00:22:37,820
I 686 G ellipses that break esterase

00:22:33,910 --> 00:22:40,010
feel free to help us there can weather

00:22:37,820 --> 00:22:44,179
there opensuse factory IRC channel where

00:22:40,010 --> 00:22:46,250
we usually discuss such changes last but

00:22:44,179 --> 00:22:48,799
not least translations a better

00:22:46,250 --> 00:22:51,260
mentioned in his statistics that we are

00:22:48,799 --> 00:22:53,660
quite good in countries that don't speak

00:22:51,260 --> 00:22:55,820
English as primary language so

00:22:53,660 --> 00:22:58,880
translations is still important to us

00:22:55,820 --> 00:23:00,710
and we are right now in the process of

00:22:58,880 --> 00:23:03,590
moving most of the translation

00:23:00,710 --> 00:23:07,250
technology to a blade there was a talk

00:23:03,590 --> 00:23:10,190
by stanislav i think on our before if

00:23:07,250 --> 00:23:13,450
you missed it go ahead and watch the

00:23:10,190 --> 00:23:17,049
video web blade is now a web interface

00:23:13,450 --> 00:23:20,240
to make translations really easy

00:23:17,049 --> 00:23:22,190
nevertheless we need people that can

00:23:20,240 --> 00:23:25,100
drive other people language coordinators

00:23:22,190 --> 00:23:26,559
so if there's no one taking care of the

00:23:25,100 --> 00:23:30,519
language you speak

00:23:26,559 --> 00:23:35,470
go ahead and grab leadership there make

00:23:30,519 --> 00:23:37,870
sure your language is complete also part

00:23:35,470 --> 00:23:39,549
of the job would be to make sure their

00:23:37,870 --> 00:23:41,620
translations in the wiki and then the

00:23:39,549 --> 00:23:43,240
software are consistent or the wiki

00:23:41,620 --> 00:23:45,190
doesn't use the same mechanism as most

00:23:43,240 --> 00:23:47,799
software but translates directly in the

00:23:45,190 --> 00:23:49,779
wiki so that those are sometimes

00:23:47,799 --> 00:23:53,620
distinct communities and we need to

00:23:49,779 --> 00:23:56,710
synchronize them also translation is not

00:23:53,620 --> 00:23:58,720
just about typing strings but we also

00:23:56,710 --> 00:24:02,080
need tools that can extract translations

00:23:58,720 --> 00:24:03,909
for example from the website and some

00:24:02,080 --> 00:24:07,210
merge them back when the web played

00:24:03,909 --> 00:24:09,730
translation comes so if your program and

00:24:07,210 --> 00:24:12,610
like to work in that area you can help

00:24:09,730 --> 00:24:14,679
us with the tooling also someone needs

00:24:12,610 --> 00:24:17,200
to make sure that the translation

00:24:14,679 --> 00:24:18,960
packages are submitted in time like this

00:24:17,200 --> 00:24:21,549
slideshow with their new translations

00:24:18,960 --> 00:24:27,070
made some money supply the translations

00:24:21,549 --> 00:24:29,499
package help us welcome there as well so

00:24:27,070 --> 00:24:31,210
most of the tasks are tracked in

00:24:29,499 --> 00:24:32,820
progress at least those that are really

00:24:31,210 --> 00:24:35,889
really crucial crucial for the release

00:24:32,820 --> 00:24:39,249
you can sign up there and then you can

00:24:35,889 --> 00:24:41,590
get task assigned by me for example or

00:24:39,249 --> 00:24:46,840
you act this coordinator and this would

00:24:41,590 --> 00:24:51,190
be to task yourself yeah so much for

00:24:46,840 --> 00:24:53,710
there what can you do and i also have a

00:24:51,190 --> 00:24:58,929
few loose ends of you questions to the

00:24:53,710 --> 00:25:02,169
audience one of the questions is what's

00:24:58,929 --> 00:25:03,820
the first class desktop so we have the

00:25:02,169 --> 00:25:09,009
Installer the option to install gnome

00:25:03,820 --> 00:25:12,059
KDE xfc LXDE some minimal X the text

00:25:09,009 --> 00:25:15,970
mode installation why is that there and

00:25:12,059 --> 00:25:17,740
why are other desktops not there what

00:25:15,970 --> 00:25:19,480
are the rules for that what about

00:25:17,740 --> 00:25:22,779
qualifies to be listed there in the

00:25:19,480 --> 00:25:24,940
Installer should we add more or maybe

00:25:22,779 --> 00:25:29,559
should we throw out some entries to make

00:25:24,940 --> 00:25:32,590
the installation easier what are the

00:25:29,559 --> 00:25:36,159
conditions for example translations is

00:25:32,590 --> 00:25:38,179
it there's a test of need translation to

00:25:36,159 --> 00:25:39,499
Spanish for example

00:25:38,179 --> 00:25:43,059
if it doesn't have the translation

00:25:39,499 --> 00:25:43,059
should we remove it from the Installer

00:25:43,269 --> 00:25:47,419
that's a question that that's not

00:25:45,379 --> 00:25:50,529
answered yet it's just the way it is

00:25:47,419 --> 00:25:53,419
since years we never changed that and

00:25:50,529 --> 00:25:57,200
what qualifies for the default desktop I

00:25:53,419 --> 00:26:01,429
know that's a controversial question we

00:25:57,200 --> 00:26:05,749
have katie's default desktop but in 42

00:26:01,429 --> 00:26:10,610
22 and for a 12-1 sorry it was probably

00:26:05,749 --> 00:26:12,799
not the best showcase for a stable

00:26:10,610 --> 00:26:18,220
distribution so it required a few online

00:26:12,799 --> 00:26:23,809
updates to be really stable and how

00:26:18,220 --> 00:26:25,879
could we prevent that in the future what

00:26:23,809 --> 00:26:28,700
our objective measurements for the fall

00:26:25,879 --> 00:26:30,379
tester with all the flame was I always

00:26:28,700 --> 00:26:33,279
make the choker i personally hate them

00:26:30,379 --> 00:26:36,080
both so I like neither Katie nog gnome

00:26:33,279 --> 00:26:38,860
but do we have have to have something

00:26:36,080 --> 00:26:41,690
that our users our target audience

00:26:38,860 --> 00:26:44,419
considers good whatever it is whatever

00:26:41,690 --> 00:26:47,720
technology users if it crashes that's

00:26:44,419 --> 00:26:52,519
not not a good advertisement for our

00:26:47,720 --> 00:26:55,059
distribution so feel free to discuss

00:26:52,519 --> 00:26:57,379
this afterwards on the mailing list

00:26:55,059 --> 00:27:00,889
maybe we can cannot come up with some

00:26:57,379 --> 00:27:04,809
objective measurements or hints that

00:27:00,889 --> 00:27:04,809
could guide us with this question

00:27:05,080 --> 00:27:12,799
another issue is can be dropped packages

00:27:09,679 --> 00:27:14,419
and all some people were already active

00:27:12,799 --> 00:27:16,700
and filed several drop requests for

00:27:14,419 --> 00:27:19,700
packages that are old upstream run along

00:27:16,700 --> 00:27:24,409
and maintained but they are in 42 that

00:27:19,700 --> 00:27:27,289
one and if a user uses exactly this old

00:27:24,409 --> 00:27:29,149
news reader and we say we have painted

00:27:27,289 --> 00:27:31,730
updates up great or 42 the two and

00:27:29,149 --> 00:27:33,950
suddenly that news reader is gone well

00:27:31,730 --> 00:27:36,919
that user be happy maybe we should

00:27:33,950 --> 00:27:42,740
postpone such drop requests to the next

00:27:36,919 --> 00:27:44,330
major version I don't know then as I

00:27:42,740 --> 00:27:47,610
already mentioned the today's mechanism

00:27:44,330 --> 00:27:49,350
for for leap right now we

00:27:47,610 --> 00:27:51,120
release milestones manually and they're

00:27:49,350 --> 00:27:54,240
not don't update the rape one to the

00:27:51,120 --> 00:27:56,100
next milestone maybe it's worth to think

00:27:54,240 --> 00:27:58,799
about using something similar to

00:27:56,100 --> 00:28:02,940
tumbleweed and automatically update the

00:27:58,799 --> 00:28:06,750
packages in the download repo last but

00:28:02,940 --> 00:28:08,910
the least auto submit from factory ? so

00:28:06,750 --> 00:28:10,679
for some packages that may actually make

00:28:08,910 --> 00:28:14,250
sense to have the pot also submit from

00:28:10,679 --> 00:28:17,460
factory diversion updates but the fall

00:28:14,250 --> 00:28:19,799
of them so we need some taking mechanism

00:28:17,460 --> 00:28:22,799
somehow mark them some Hotel deport that

00:28:19,799 --> 00:28:26,280
some packages are safe but I have not

00:28:22,799 --> 00:28:30,179
answered that yet so such as snow who

00:28:26,280 --> 00:28:43,770
requests welcome so those were my

00:28:30,179 --> 00:28:45,960
questions no time for yours first of all

00:28:43,770 --> 00:28:49,679
sorry for the bad experience you had was

00:28:45,960 --> 00:28:52,049
plasma that was all so unexpected to us

00:28:49,679 --> 00:28:54,660
because up to the point but opens with a

00:28:52,049 --> 00:28:57,750
leap was release we had pretty good

00:28:54,660 --> 00:28:59,880
feedback on plasma five so what

00:28:57,750 --> 00:29:02,309
surprises me there is why wasn't the

00:28:59,880 --> 00:29:05,309
court during the better releases and why

00:29:02,309 --> 00:29:09,500
didn't you go back to shipping kde4

00:29:05,309 --> 00:29:12,570
which was in LTS release at that time

00:29:09,500 --> 00:29:14,120
that's a good question was there a point

00:29:12,570 --> 00:29:17,820
in time where we could have seen that

00:29:14,120 --> 00:29:20,610
hello you know they are things which you

00:29:17,820 --> 00:29:22,530
could have seen probably or at least if

00:29:20,610 --> 00:29:25,559
you use us would have tried it I've

00:29:22,530 --> 00:29:28,880
heard from opensuse for example that you

00:29:25,559 --> 00:29:31,770
had big problems because users expected

00:29:28,880 --> 00:29:33,929
session management to work and that was

00:29:31,770 --> 00:29:37,049
something which we actually knew that it

00:29:33,929 --> 00:29:39,330
worked but nobody of our users and the

00:29:37,049 --> 00:29:41,130
other distributions care about it so

00:29:39,330 --> 00:29:42,780
something that the opensuse use us was

00:29:41,130 --> 00:29:44,280
different that they cared about this

00:29:42,780 --> 00:29:47,340
feature being Miss

00:29:44,280 --> 00:29:49,260
and that's something which could have

00:29:47,340 --> 00:29:52,920
been possible to catch hearing the

00:29:49,260 --> 00:29:55,230
better releases yeah so maybe it's it's

00:29:52,920 --> 00:29:58,290
a good info for the better test plan to

00:29:55,230 --> 00:29:59,790
emphasize such features more and get

00:29:58,290 --> 00:30:02,130
feedback on the really important things

00:29:59,790 --> 00:30:06,870
of the desktop to see how how bad it

00:30:02,130 --> 00:30:10,890
went or how good it is a question for

00:30:06,870 --> 00:30:14,930
you with the saying that kde4 was LTS

00:30:10,890 --> 00:30:17,670
our maintenance perspective was that it

00:30:14,930 --> 00:30:19,260
wouldn't what is it still supported now

00:30:17,670 --> 00:30:23,640
I guess it's a question and that's the

00:30:19,260 --> 00:30:25,500
point you know lee 22 one is live now so

00:30:23,640 --> 00:30:28,290
we couldn't use KP for because it

00:30:25,500 --> 00:30:32,820
wouldn't last a year and that's why we

00:30:28,290 --> 00:30:35,490
had to use five but that's not really a

00:30:32,820 --> 00:30:41,400
point because i'm not sure what I your

00:30:35,490 --> 00:30:43,380
shipping right now 55 I have no idea it

00:30:41,400 --> 00:30:45,960
was updated 2 times we are maintenance

00:30:43,380 --> 00:30:50,370
updates I think okay so your shift

00:30:45,960 --> 00:30:54,080
stable releases but I five is already

00:30:50,370 --> 00:30:58,710
out of life as well and so yeah it's

00:30:54,080 --> 00:31:00,450
it's not really a big difference so

00:30:58,710 --> 00:31:02,910
basically what we are doing is updating

00:31:00,450 --> 00:31:05,280
to the latest upstream version so when

00:31:02,910 --> 00:31:10,200
there is 56 it goes to 56 you join us

00:31:05,280 --> 00:31:12,450
560 but 56 1 562 and so on so it started

00:31:10,200 --> 00:31:15,060
with the oldest possible we had on the

00:31:12,450 --> 00:31:17,100
leap and slowly go upgrade it together

00:31:15,060 --> 00:31:19,080
with the Qt to incorporate or the bug

00:31:17,100 --> 00:31:24,030
fixes but it will say you're not that

00:31:19,080 --> 00:31:26,850
stable but and I think that's one of the

00:31:24,030 --> 00:31:30,570
open questions from Ludwik is like is

00:31:26,850 --> 00:31:32,730
that a sensible model for our default

00:31:30,570 --> 00:31:35,370
dish a default desktop in the distro

00:31:32,730 --> 00:31:38,940
likely i do you really want to be having

00:31:35,370 --> 00:31:41,010
that risk of always moving KDE upstream

00:31:38,940 --> 00:31:43,590
that's fine that's what we have to do to

00:31:41,010 --> 00:31:46,830
maintain KDE but then should que te be

00:31:43,590 --> 00:31:48,900
the default in leap and I don't have an

00:31:46,830 --> 00:31:50,470
answer for that I have an opinion but

00:31:48,900 --> 00:31:52,690
it's kind of balancing

00:31:50,470 --> 00:31:55,120
how you know accepting the realities of

00:31:52,690 --> 00:31:56,860
what the upstream is doing with the

00:31:55,120 --> 00:32:06,390
expectations of what our leap users are

00:31:56,860 --> 00:32:09,549
going to have so any other questions but

00:32:06,390 --> 00:32:12,990
wait but to answer the question about

00:32:09,549 --> 00:32:16,809
why the beta tested not cover this

00:32:12,990 --> 00:32:20,970
plasma five was in tumbleweed for four

00:32:16,809 --> 00:32:25,780
months or so at that point and people

00:32:20,970 --> 00:32:29,559
with some specific graphic drivers had

00:32:25,780 --> 00:32:32,140
some problems but most of them were fine

00:32:29,559 --> 00:32:36,010
including myself I had plasmas five

00:32:32,140 --> 00:32:39,870
running when we integrate into leap but

00:32:36,010 --> 00:32:43,780
then suddenly when we really sleep I

00:32:39,870 --> 00:32:45,909
don't know why but the journalists or

00:32:43,780 --> 00:32:48,390
the bloggers or whatever created a

00:32:45,909 --> 00:32:51,130
completely different picture of it and

00:32:48,390 --> 00:32:53,590
most likely because they all share the

00:32:51,130 --> 00:32:56,409
same underlying hardware I don't know

00:32:53,590 --> 00:32:59,460
but this is a typical problem we have

00:32:56,409 --> 00:33:02,289
with every distribution even our see

00:32:59,460 --> 00:33:05,110
that the beta tests don't cover

00:33:02,289 --> 00:33:07,360
everything because the real scenarios

00:33:05,110 --> 00:33:12,630
that are really important you only find

00:33:07,360 --> 00:33:12,630
out once it's important so that's why

00:33:18,330 --> 00:33:25,750
well one reason for this could be that a

00:33:21,880 --> 00:33:30,720
lot of the tests especially the QA tests

00:33:25,750 --> 00:33:33,250
are done on VMS and the other thing the

00:33:30,720 --> 00:33:37,740
real reasons

00:33:33,250 --> 00:33:37,740
use it on real hardware so

00:33:49,299 --> 00:33:56,330
not necessarily a question but in answer

00:33:52,820 --> 00:33:59,620
to one of your dues ends the default

00:33:56,330 --> 00:34:04,760
desktop I know it's a difficult topic

00:33:59,620 --> 00:34:07,610
but how about letting the users decide I

00:34:04,760 --> 00:34:10,369
mean users basically vote by what they

00:34:07,610 --> 00:34:13,190
install we already have statistics about

00:34:10,369 --> 00:34:16,220
what packages get downloaded most often

00:34:13,190 --> 00:34:18,710
from the mirrors so we should be able to

00:34:16,220 --> 00:34:20,690
have statistics if more people are

00:34:18,710 --> 00:34:23,990
running you know or katie year or

00:34:20,690 --> 00:34:27,440
whatnot and just make that the default

00:34:23,990 --> 00:34:29,929
in the next cycle but it come in it

00:34:27,440 --> 00:34:33,320
would surprise me if we had Morgan home

00:34:29,929 --> 00:34:35,119
users if katie is the default I mean I

00:34:33,320 --> 00:34:37,599
will expect that the default desktop is

00:34:35,119 --> 00:34:41,000
used more unless our user base

00:34:37,599 --> 00:34:43,429
fundamentally changes I don't think so i

00:34:41,000 --> 00:34:45,589
think richard has named some numbers

00:34:43,429 --> 00:34:54,589
earlier bit on the mailing list

00:34:45,589 --> 00:34:57,440
somewhere but so the old number ticking

00:34:54,589 --> 00:35:00,380
i came up with is that most people stick

00:34:57,440 --> 00:35:02,750
to defaults so that's why it's so tricky

00:35:00,380 --> 00:35:05,330
to change defaults based on downloads

00:35:02,750 --> 00:35:08,750
because you you're watching what we know

00:35:05,330 --> 00:35:11,119
is that that morgue gnome users moved

00:35:08,750 --> 00:35:12,920
over time but for example the download

00:35:11,119 --> 00:35:15,800
of the live DVD which is really a

00:35:12,920 --> 00:35:18,580
decision thus when it cut when he comes

00:35:15,800 --> 00:35:21,560
to the new opens user version they don't

00:35:18,580 --> 00:35:24,560
grab the DVD and then say oh let's see

00:35:21,560 --> 00:35:27,410
its gloom or its KDE but they really say

00:35:24,560 --> 00:35:30,050
on top a loser arc I want to go on life

00:35:27,410 --> 00:35:33,349
or I won't make a deal and the KDE life

00:35:30,050 --> 00:35:37,540
was dominating this bye-bye latch so I

00:35:33,349 --> 00:35:40,580
think opensuse users s now Arkady users

00:35:37,540 --> 00:35:43,099
but that's because we have headed for if

00:35:40,580 --> 00:35:45,410
as a default for for quite a while so

00:35:43,099 --> 00:35:48,410
this kind of created a loop it is hard

00:35:45,410 --> 00:35:53,020
to break by saying it crashed one source

00:35:48,410 --> 00:35:55,710
changes now so i don't know i'm i

00:35:53,020 --> 00:35:57,839
personally dislike the idea of having

00:35:55,710 --> 00:36:00,300
default because having no default means

00:35:57,839 --> 00:36:02,130
I don't know what to do and this is lee

00:36:00,300 --> 00:36:04,830
notes from scratch and i can just stay

00:36:02,130 --> 00:36:07,140
here this linux its upstream I don't

00:36:04,830 --> 00:36:11,130
know the the task of the distribution

00:36:07,140 --> 00:36:14,730
should be to pick defaults and if we can

00:36:11,130 --> 00:36:17,750
find a good measure on why changing I

00:36:14,730 --> 00:36:20,580
personally would stick to it I mean ke

00:36:17,750 --> 00:36:24,300
people that know what can own this will

00:36:20,580 --> 00:36:27,210
choose know and all the others will have

00:36:24,300 --> 00:36:29,099
to provide a stable I i agree with Ruby

00:36:27,210 --> 00:36:30,750
completely katie has to be stable

00:36:29,099 --> 00:36:32,940
otherwise KDE should be dropped for

00:36:30,750 --> 00:36:34,770
bleep but as long as it's stable enough

00:36:32,940 --> 00:36:37,710
to be in lead it can be the default

00:36:34,770 --> 00:36:45,260
that's my personal opinion it's no

00:36:37,710 --> 00:36:48,450
longer my car just a reminder on my side

00:36:45,260 --> 00:36:51,599
Zuzu's a long-term supporter of KDE and

00:36:48,450 --> 00:36:54,030
I really never understood why Lee and

00:36:51,599 --> 00:36:57,060
esli which have the same basis have a

00:36:54,030 --> 00:36:58,619
different default desktop so this is

00:36:57,060 --> 00:37:03,359
quite strange if you look from the

00:36:58,619 --> 00:37:05,550
outside on it that would have been an

00:37:03,359 --> 00:37:10,470
argument for choosing norm as the

00:37:05,550 --> 00:37:17,210
default for leap but we didn't sleep 12

00:37:10,470 --> 00:37:17,210
does not have Katie so yeah

00:37:23,340 --> 00:37:27,420
does anybody have any other questions

00:37:33,120 --> 00:37:41,380
yes so this is a completely different

00:37:36,130 --> 00:37:45,790
question less controversial to sew in

00:37:41,380 --> 00:37:49,570
the leap 42.1 we had a hawk and Hawk to

00:37:45,790 --> 00:37:53,710
a separate packages and s of SP 2 i've

00:37:49,570 --> 00:37:55,510
removed hawk from from Slee and same

00:37:53,710 --> 00:37:59,680
thing in tumbleweed awk is gone so this

00:37:55,510 --> 00:38:03,220
only hot too so it's that automatic in

00:37:59,680 --> 00:38:05,320
42.2 or should i create a drop request

00:38:03,220 --> 00:38:08,650
or what's the procedure for removing

00:38:05,320 --> 00:38:12,520
something yes you need to file a drop

00:38:08,650 --> 00:38:14,320
request so for the 22 is a copy of 42 at

00:38:12,520 --> 00:38:17,970
one so they know it's all packages and

00:38:14,320 --> 00:38:17,970
they stay there unless you do something

00:38:29,950 --> 00:38:37,460
um one of the things I was surprised by

00:38:33,500 --> 00:38:40,880
this this talk is that some package that

00:38:37,460 --> 00:38:43,670
has been taken from factory and at a

00:38:40,880 --> 00:38:47,000
time of what they do one is not updated

00:38:43,670 --> 00:38:50,570
so i think there many people including

00:38:47,000 --> 00:38:53,810
me miss that they're missing updates of

00:38:50,570 --> 00:38:55,940
their jodido tool so i somehow expected

00:38:53,810 --> 00:38:59,990
that said it follows automatically to

00:38:55,940 --> 00:39:03,290
the factory and they are you listed in

00:38:59,990 --> 00:39:05,510
the slide as how we manage that so for

00:39:03,290 --> 00:39:08,780
my my opinion that we need some white

00:39:05,510 --> 00:39:12,200
list that this package is supposed to be

00:39:08,780 --> 00:39:17,540
stable so it's safe to follow the wh and

00:39:12,200 --> 00:39:19,340
so on atresia until code freeze yeah so

00:39:17,540 --> 00:39:22,580
yeah it was a surprise to some that's

00:39:19,340 --> 00:39:23,990
why i explicitly mentioned it it has to

00:39:22,580 --> 00:39:26,300
be submitted manually because you cannot

00:39:23,990 --> 00:39:29,240
know for all packages what happens there

00:39:26,300 --> 00:39:31,490
and I mean there are thousands of

00:39:29,240 --> 00:39:35,530
packages but yeah a solution that could

00:39:31,490 --> 00:39:35,530
somehow take the safe ones would be nice

00:39:42,230 --> 00:39:48,810
thank you banner what we did for forty

00:39:46,650 --> 00:39:51,240
two dot one was because not all

00:39:48,810 --> 00:39:53,190
maintenance were actually liking to have

00:39:51,240 --> 00:39:56,550
their packages that factory back asleep

00:39:53,190 --> 00:39:59,910
was creating auto submits with reviews

00:39:56,550 --> 00:40:04,170
and for some i overruled in one or the

00:39:59,910 --> 00:40:07,050
other direction and i think as i watched

00:40:04,170 --> 00:40:09,030
your talk at least we have to add some

00:40:07,050 --> 00:40:12,330
remind us because i know i submitted

00:40:09,030 --> 00:40:14,850
tons of indiana two tons of packages to

00:40:12,330 --> 00:40:16,890
leap four o'clock one but i did not yet

00:40:14,850 --> 00:40:18,450
think about updating those and I don't

00:40:16,890 --> 00:40:21,210
have a list and I don't even know how to

00:40:18,450 --> 00:40:24,690
create this list myself so having some

00:40:21,210 --> 00:40:27,060
kind of reminder or even directly a

00:40:24,690 --> 00:40:31,140
request that I have to acknowledge or

00:40:27,060 --> 00:40:34,700
decline to judge as you say would be a

00:40:31,140 --> 00:40:34,700
fair measurement to answer your question

00:40:35,660 --> 00:40:40,980
yeah it could could be an option but

00:40:38,390 --> 00:40:43,740
quite often will be rejected then by

00:40:40,980 --> 00:40:47,190
someone because it's unsafe yes but

00:40:43,740 --> 00:40:49,080
that's part of the process then but

00:40:47,190 --> 00:40:50,760
right now I think we creating terms of

00:40:49,080 --> 00:40:53,370
security problems by having stated

00:40:50,760 --> 00:40:56,460
versions back so it's no longer stable

00:40:53,370 --> 00:40:58,110
but it's actually opening or if it's a

00:40:56,460 --> 00:40:59,760
security issue then hopefully we get our

00:40:58,110 --> 00:41:01,800
maintenance updating our security update

00:40:59,760 --> 00:41:03,930
and for it with one and that way you get

00:41:01,800 --> 00:41:08,010
their submission automatically also in

00:41:03,930 --> 00:41:09,180
for the 202 so yeah but you do you know

00:41:08,010 --> 00:41:10,380
I don't think it's fair to put

00:41:09,180 --> 00:41:12,780
everything on the burden of the

00:41:10,380 --> 00:41:14,930
maintains they may have quite enough to

00:41:12,780 --> 00:41:14,930
do

00:41:25,519 --> 00:41:31,999
so I'm having idea which might not be

00:41:29,419 --> 00:41:33,799
feasible because I don't have enough

00:41:31,999 --> 00:41:38,359
experience with this process but

00:41:33,799 --> 00:41:42,349
following up what we heard in before how

00:41:38,359 --> 00:41:45,409
about some kind of automatic reminder or

00:41:42,349 --> 00:41:47,539
some automatic process for submission or

00:41:45,409 --> 00:41:49,579
also a drop request if nothing happens

00:41:47,539 --> 00:41:53,089
then at least as in automatically press

00:41:49,579 --> 00:41:55,939
for dropping packages and then someone

00:41:53,089 --> 00:41:58,759
has to actively make the decision I mean

00:41:55,939 --> 00:42:02,869
this could be a long-term plan like for

00:41:58,759 --> 00:42:05,779
43 year-old 0 again but in which package

00:42:02,869 --> 00:42:08,029
do you want to drop like the ones that

00:42:05,779 --> 00:42:10,759
are not updated and then to prevent any

00:42:08,029 --> 00:42:15,259
kind of running into stale packages

00:42:10,759 --> 00:42:17,359
which are not reasonably never thought I

00:42:15,259 --> 00:42:20,569
think for most packages if they're just

00:42:17,359 --> 00:42:25,009
old or abandoned upstream there's no

00:42:20,569 --> 00:42:28,489
harm done if it builds leave it there so

00:42:25,009 --> 00:42:30,919
what for how long as long as it's build

00:42:28,489 --> 00:42:34,059
I mean I don't care if it's green I

00:42:30,919 --> 00:42:34,059
don't with one of my radar

00:42:41,850 --> 00:42:49,070
so no more questions then thank you for

00:42:45,330 --> 00:42:49,070
your patience

00:42:54,710 --> 00:42:56,770

YouTube URL: https://www.youtube.com/watch?v=2HMulkWs-rw


