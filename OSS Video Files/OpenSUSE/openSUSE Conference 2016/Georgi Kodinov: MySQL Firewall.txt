Title: Georgi Kodinov: MySQL Firewall
Publication date: 2016-06-26
Playlist: openSUSE Conference 2016
Description: 
	https://media.ccc.de/v/780-mysql-firewall

MySQL Firewall is an application level firewall filter that intercepts incoming queries and validates them against a database of normalized "safe" queries.
As an integral part of the server it takes advantage of the parsing and normalization that is done anyway so it has minimal impact on normal operations. 
The firewall has multiple modes. In learning mode it collects the incoming query normalization in a scratchpad that can be persisted to disk. In alert mode it will just alert the DBA for an unknown query but still let it pass.
And in protecting mode it will reject all unknown queries.
The firewall can be used to limit SQL injection or as a complement to the privilege system to support only particular front end applications.
We will go through all of the stages of installing, training and arming the MySQL firewall with understandable examples. 

Georgi Kodinov
Captions: 
	00:00:07,910 --> 00:00:13,400
okay so

00:00:10,010 --> 00:00:16,470
I'm going to talk today about one

00:00:13,400 --> 00:00:19,650
addition to the my spiel

00:00:16,470 --> 00:00:22,050
silver which is not that visionaries the

00:00:19,650 --> 00:00:25,310
previous talk but well I guess still

00:00:22,050 --> 00:00:29,579
pretty technical and very useful like oh

00:00:25,310 --> 00:00:35,730
ok so we are going to talk about the

00:00:29,579 --> 00:00:39,710
mask you'll firewall right ok so first

00:00:35,730 --> 00:00:43,260
of all a little bit about me it's my

00:00:39,710 --> 00:00:45,629
fourth conference already so I guess

00:00:43,260 --> 00:00:48,300
most of you know me but I've been with

00:00:45,629 --> 00:00:53,339
MySQL for well longer than I can

00:00:48,300 --> 00:00:57,409
remember now and I've been I am working

00:00:53,339 --> 00:01:02,900
on security and monitoring the server

00:00:57,409 --> 00:01:08,430
also some personal facts about me here

00:01:02,900 --> 00:01:10,860
alright so the agenda is first of all we

00:01:08,430 --> 00:01:14,280
will actually try to understand what is

00:01:10,860 --> 00:01:18,689
the mask your firewall how does it work

00:01:14,280 --> 00:01:21,450
and we will also have an example with a

00:01:18,689 --> 00:01:25,460
wordpress installation how to secure it

00:01:21,450 --> 00:01:28,200
and how to make it more robust and

00:01:25,460 --> 00:01:34,470
hopefully we will have some time for

00:01:28,200 --> 00:01:36,360
discussion too ok so the what is my skew

00:01:34,470 --> 00:01:41,820
of our wow it's really really simple

00:01:36,360 --> 00:01:49,620
it's just a tool to make SQL injection

00:01:41,820 --> 00:01:52,729
attacks Carter and so SQL injection

00:01:49,620 --> 00:01:57,510
attacks are one of the most well-known

00:01:52,729 --> 00:02:01,560
data breach and investigate breaches to

00:01:57,510 --> 00:02:05,430
web applications so here is a quote from

00:02:01,560 --> 00:02:07,770
a very reputable yearly report that is

00:02:05,430 --> 00:02:12,629
done on security if you are not familiar

00:02:07,770 --> 00:02:14,849
with verizon's report probably you

00:02:12,629 --> 00:02:18,540
should if you are interested in security

00:02:14,849 --> 00:02:20,760
and that's what they say if they call

00:02:18,540 --> 00:02:22,150
the SQL injection attacks the elder

00:02:20,760 --> 00:02:25,900
statesman of

00:02:22,150 --> 00:02:28,200
breach vectors into web application so

00:02:25,900 --> 00:02:30,640
it is actually really important that

00:02:28,200 --> 00:02:34,980
well we should take all measures

00:02:30,640 --> 00:02:39,310
possible to protect against them okay so

00:02:34,980 --> 00:02:44,409
why am I asked you offer firewall it's a

00:02:39,310 --> 00:02:47,530
better SQL application security user

00:02:44,409 --> 00:02:50,650
accounts can execute applique only the

00:02:47,530 --> 00:02:54,000
SQL that the application provides to the

00:02:50,650 --> 00:02:57,599
server it also provides defense in depth

00:02:54,000 --> 00:03:00,310
so it's an extra layer it does not

00:02:57,599 --> 00:03:03,760
interact directly with the other layers

00:03:00,310 --> 00:03:06,370
of security so you can take this extra

00:03:03,760 --> 00:03:10,590
measure and provide another level of

00:03:06,370 --> 00:03:13,720
defense for your database and it also

00:03:10,590 --> 00:03:16,030
does not need does not require

00:03:13,720 --> 00:03:19,359
application changes your application

00:03:16,030 --> 00:03:23,470
runs as it does and the server is the

00:03:19,359 --> 00:03:30,569
one that can take and apply the texture

00:03:23,470 --> 00:03:34,510
security measure and here is my favorite

00:03:30,569 --> 00:03:38,680
cartoon on the subject I I don't know if

00:03:34,510 --> 00:03:42,370
you are familiar with XKCD but this is

00:03:38,680 --> 00:03:45,970
really hilarious so this is why SQL

00:03:42,370 --> 00:03:56,139
injection is important and this is what

00:03:45,970 --> 00:03:59,650
it can do to you so yep right so how

00:03:56,139 --> 00:04:05,739
does this solve work what does the

00:03:59,650 --> 00:04:08,919
firewall what is the firewall basically

00:04:05,739 --> 00:04:11,590
so it is an engine that sits inside the

00:04:08,919 --> 00:04:15,180
damask you server and it compares the

00:04:11,590 --> 00:04:22,270
incoming queries and then normalizes

00:04:15,180 --> 00:04:25,270
this queries and well it has a statement

00:04:22,270 --> 00:04:28,060
sketch which basically keeps a cache of

00:04:25,270 --> 00:04:31,240
all the queries that are allowed to be

00:04:28,060 --> 00:04:32,270
executed and then it compares the income

00:04:31,240 --> 00:04:36,020
inquiries

00:04:32,270 --> 00:04:40,270
against the statement cash so this is

00:04:36,020 --> 00:04:43,370
seen a nutshell the architecture of it

00:04:40,270 --> 00:04:45,680
so here is how it operates you have the

00:04:43,370 --> 00:04:48,050
mysql server and you have the mask at

00:04:45,680 --> 00:04:51,740
the firewall plugin which sits in front

00:04:48,050 --> 00:04:56,480
of the server proper so when a query

00:04:51,740 --> 00:04:59,230
comes in it goes in checks okay so this

00:04:56,480 --> 00:05:02,740
is required that I need to normalize it

00:04:59,230 --> 00:05:05,660
normalizes the query by removing the

00:05:02,740 --> 00:05:07,610
constants and removing the constant

00:05:05,660 --> 00:05:12,610
comments and the white space and all of

00:05:07,610 --> 00:05:16,640
that then it searches the statement cash

00:05:12,610 --> 00:05:21,650
and basically it finds such a query

00:05:16,640 --> 00:05:25,040
which is select ? pass ? so this query

00:05:21,650 --> 00:05:28,040
can actually go in and will be executed

00:05:25,040 --> 00:05:30,460
by the mysql server what if another

00:05:28,040 --> 00:05:33,410
query comes in so this is the most

00:05:30,460 --> 00:05:35,720
popular form of SQL injection you take

00:05:33,410 --> 00:05:39,440
one of the constants and you replace it

00:05:35,720 --> 00:05:41,480
with another statement well part of the

00:05:39,440 --> 00:05:44,810
previous statement and then the

00:05:41,480 --> 00:05:47,540
statement attack does the actual car so

00:05:44,810 --> 00:05:50,420
this is what this query looks it looks

00:05:47,540 --> 00:05:54,140
like if you replace the two with this

00:05:50,420 --> 00:05:56,660
well extra data there and it's not

00:05:54,140 --> 00:05:58,940
properly escaped you will get a

00:05:56,660 --> 00:06:02,000
statement like that select one plus two

00:05:58,940 --> 00:06:07,370
or some select query or some update

00:06:02,000 --> 00:06:10,400
query whatever and but it's not in the

00:06:07,370 --> 00:06:14,060
cache so this the firewall will deny it

00:06:10,400 --> 00:06:19,730
and it will never even lend in the in

00:06:14,060 --> 00:06:23,930
them well execution engine okay this may

00:06:19,730 --> 00:06:28,180
be a bit small but right so this is the

00:06:23,930 --> 00:06:32,420
full state diagram of the of the

00:06:28,180 --> 00:06:35,570
firewall so it receives a statement from

00:06:32,420 --> 00:06:40,640
the client it makes a digest of it then

00:06:35,570 --> 00:06:44,420
it checks if the user is well protecting

00:06:40,640 --> 00:06:47,300
core detecting in queries an enquiry

00:06:44,420 --> 00:06:50,450
and if it is in the whitelist then it is

00:06:47,300 --> 00:06:53,900
executed if it's not in the whitelist it

00:06:50,450 --> 00:06:58,040
is subjected to this additional measures

00:06:53,900 --> 00:07:01,070
and eventually rejected as you see here

00:06:58,040 --> 00:07:05,180
there is a recording mode this part here

00:07:01,070 --> 00:07:08,240
so when the user is in recording mode

00:07:05,180 --> 00:07:11,150
the query will still be executed but it

00:07:08,240 --> 00:07:13,460
will also be stored into the whitelist

00:07:11,150 --> 00:07:21,130
so this is how you fill in the whitelist

00:07:13,460 --> 00:07:26,990
with queries okay so installation is

00:07:21,130 --> 00:07:30,020
pretty simple this is our GUI to for

00:07:26,990 --> 00:07:33,230
administering the mysql server and it

00:07:30,020 --> 00:07:36,560
has a firewall section here as you can

00:07:33,230 --> 00:07:38,870
see here it's already installed so you

00:07:36,560 --> 00:07:43,250
get the options to uninstall or disabled

00:07:38,870 --> 00:07:46,910
but well it there is a button which says

00:07:43,250 --> 00:07:48,980
install here if if it's not installed so

00:07:46,910 --> 00:07:55,430
it's that simple to install it in its

00:07:48,980 --> 00:07:58,660
basic form well behind the scenes it's

00:07:55,430 --> 00:08:02,330
of course so common line and being the

00:07:58,660 --> 00:08:05,570
kind of the traditional SQL developer

00:08:02,330 --> 00:08:08,200
the time I wanted to show you here the

00:08:05,570 --> 00:08:12,290
command to actually install the firewall

00:08:08,200 --> 00:08:15,050
through the comment line so it's a it's

00:08:12,290 --> 00:08:17,350
this single command that at the top we

00:08:15,050 --> 00:08:20,630
have an SQL script that does all these

00:08:17,350 --> 00:08:23,330
installations and then you can check

00:08:20,630 --> 00:08:27,320
whether the firewall is operational by

00:08:23,330 --> 00:08:33,410
well checking the status variable that

00:08:27,320 --> 00:08:37,370
says if it is or not okay so operating

00:08:33,410 --> 00:08:39,710
the firewall I'm not going to go through

00:08:37,370 --> 00:08:42,200
all the modes of the firewall just give

00:08:39,710 --> 00:08:47,210
you a practical example I've taken a

00:08:42,200 --> 00:08:48,860
wordpress installation and I well run it

00:08:47,210 --> 00:08:52,030
through the firewall just to demonstrate

00:08:48,860 --> 00:08:56,680
its usefulness

00:08:52,030 --> 00:08:59,150
okay so step one install WordPress it's

00:08:56,680 --> 00:09:01,910
well the thing that most of you have

00:08:59,150 --> 00:09:04,910
done already probably so I won't go into

00:09:01,910 --> 00:09:08,900
the details of that but the WordPress

00:09:04,910 --> 00:09:12,250
uses a default database user WordPress

00:09:08,900 --> 00:09:14,780
at localhost and it runs against

00:09:12,250 --> 00:09:17,900
obviously a local mysql server because

00:09:14,780 --> 00:09:21,740
it that's how that the user account is

00:09:17,900 --> 00:09:25,700
defined and it's also the mysql server

00:09:21,740 --> 00:09:27,770
is also seated with schema and data for

00:09:25,700 --> 00:09:31,190
wordpress there is a script and

00:09:27,770 --> 00:09:33,910
procedure for that so i've just

00:09:31,190 --> 00:09:36,590
installed the wordpress with all the

00:09:33,910 --> 00:09:39,350
default settings as you can see here at

00:09:36,590 --> 00:09:44,480
the start page of my wordpress

00:09:39,350 --> 00:09:46,910
installation alright so the next thing

00:09:44,480 --> 00:09:51,460
we do is we need to put the firewall in

00:09:46,910 --> 00:09:54,110
recording mode for that particular user

00:09:51,460 --> 00:09:56,930
because there are no queries in the

00:09:54,110 --> 00:10:00,500
whitelist so we need watson basically

00:09:56,930 --> 00:10:03,890
and we add that by putting the firewall

00:10:00,500 --> 00:10:06,770
in recording mode and then well running

00:10:03,890 --> 00:10:09,110
through the wordpress web pages just too

00:10:06,770 --> 00:10:13,070
well make it executes the queries that

00:10:09,110 --> 00:10:17,660
it executes so how do you put a user in

00:10:13,070 --> 00:10:22,370
recording mode you go again in the SQL

00:10:17,660 --> 00:10:26,240
work bench and you basically take users

00:10:22,370 --> 00:10:28,760
and privileges and then well select the

00:10:26,240 --> 00:10:37,040
wordpress user and change the mode to

00:10:28,760 --> 00:10:40,280
recording so again a a GUI operation but

00:10:37,040 --> 00:10:42,230
for the people curious how to do it on

00:10:40,280 --> 00:10:45,110
the command line I have the comment line

00:10:42,230 --> 00:10:47,660
on top as well so it's a call to one

00:10:45,110 --> 00:10:52,700
stored procedure that enables recording

00:10:47,660 --> 00:10:56,420
not basically right so step three this

00:10:52,700 --> 00:10:58,550
is the relatively non trivial part you

00:10:56,420 --> 00:11:00,920
need to click through all of the

00:10:58,550 --> 00:11:03,520
WordPress securities that you want to

00:11:00,920 --> 00:11:09,460
stay enabled when you move to put

00:11:03,520 --> 00:11:13,120
not okay so what I did was I went into

00:11:09,460 --> 00:11:15,820
the WordPress installation and I saved a

00:11:13,120 --> 00:11:19,270
draft created the post safe safe to drop

00:11:15,820 --> 00:11:23,380
of it that's pretty much what I started

00:11:19,270 --> 00:11:29,170
with and this generates some queries as

00:11:23,380 --> 00:11:33,280
can be seen here so this single sequence

00:11:29,170 --> 00:11:35,980
generated 63 queries which is well quite

00:11:33,280 --> 00:11:40,200
a lot and as you can see here some of

00:11:35,980 --> 00:11:44,050
the queries are actually normalized

00:11:40,200 --> 00:11:46,330
there are obviously parameters here

00:11:44,050 --> 00:11:50,230
which are the result of the

00:11:46,330 --> 00:11:51,940
normalization so these are all the

00:11:50,230 --> 00:11:55,240
statements that the WordPress

00:11:51,940 --> 00:12:00,280
installation with execute against the

00:11:55,240 --> 00:12:03,730
microderm SQL server right and you can

00:12:00,280 --> 00:12:08,410
actually monitor them in the GUI there

00:12:03,730 --> 00:12:11,140
is a firewall rules stop in the GUI it

00:12:08,410 --> 00:12:15,490
will show you the active rules and the

00:12:11,140 --> 00:12:17,770
rules that are being recorded so the as

00:12:15,490 --> 00:12:21,540
the WordPress you're clicking through

00:12:17,770 --> 00:12:25,390
wordpress goes on this part will

00:12:21,540 --> 00:12:30,070
actually increase more and more and

00:12:25,390 --> 00:12:33,340
there will be more queries here you can

00:12:30,070 --> 00:12:35,800
also do that on stages so basically you

00:12:33,340 --> 00:12:39,550
can take the WordPress installation do

00:12:35,800 --> 00:12:43,870
the basic exercise through its pages and

00:12:39,550 --> 00:12:47,140
then save the result you can even save

00:12:43,870 --> 00:12:51,160
it to a file then you can load the file

00:12:47,140 --> 00:12:55,630
into the running mysql server table and

00:12:51,160 --> 00:12:57,580
so on and once you well are done with

00:12:55,630 --> 00:13:00,840
that and you discover that you forgot

00:12:57,580 --> 00:13:03,550
something you can put it again in

00:13:00,840 --> 00:13:06,640
recording whole record another session

00:13:03,550 --> 00:13:10,600
of it and then add it to the already

00:13:06,640 --> 00:13:12,910
existing rules that are in effect so it

00:13:10,600 --> 00:13:15,460
can be an incremental process you can do

00:13:12,910 --> 00:13:17,220
it on different users because obviously

00:13:15,460 --> 00:13:20,920
this choir is they

00:13:17,220 --> 00:13:23,290
really depend on the actual user name so

00:13:20,920 --> 00:13:26,200
you can have like a test user that you

00:13:23,290 --> 00:13:29,350
use to record the queries and then move

00:13:26,200 --> 00:13:32,650
these queries to the active user that

00:13:29,350 --> 00:13:38,050
the WordPress uses there's a lot of

00:13:32,650 --> 00:13:40,660
possibilities there right so once you

00:13:38,050 --> 00:13:42,910
are done with that you can move to the

00:13:40,660 --> 00:13:47,800
interesting part which is basically

00:13:42,910 --> 00:13:51,279
shields up mode so you say to the to the

00:13:47,800 --> 00:13:55,000
server okay now i want this user

00:13:51,279 --> 00:13:57,430
wordpress is localhost protected not

00:13:55,000 --> 00:14:02,640
recording any more now now this

00:13:57,430 --> 00:14:07,150
basically activates the firewall okay

00:14:02,640 --> 00:14:09,750
you once you do that you can then

00:14:07,150 --> 00:14:15,430
continue clicking through wordpress and

00:14:09,750 --> 00:14:18,520
observe the statistics so this is the

00:14:15,430 --> 00:14:20,560
these are the statistics after one page

00:14:18,520 --> 00:14:22,570
after me trying to publish a post

00:14:20,560 --> 00:14:26,650
because well I didn't record it

00:14:22,570 --> 00:14:28,630
publishing the post so when I tried

00:14:26,650 --> 00:14:30,550
publishing the post it didn't work of

00:14:28,630 --> 00:14:33,790
course because the firewall prevented it

00:14:30,550 --> 00:14:37,810
and i got fifty queries denied as a

00:14:33,790 --> 00:14:40,270
result then meet doing some more actions

00:14:37,810 --> 00:14:44,820
down the line you can see how the access

00:14:40,270 --> 00:14:48,160
denied an access granted counts increase

00:14:44,820 --> 00:14:51,070
okay so what does suspicious mean here

00:14:48,160 --> 00:14:55,839
as i mentioned the firewall can just

00:14:51,070 --> 00:14:57,970
record a violation it will not stop the

00:14:55,839 --> 00:15:01,500
query from being executed it will just

00:14:57,970 --> 00:15:04,690
record that this query was executed and

00:15:01,500 --> 00:15:07,600
so that the DBA came later review the

00:15:04,690 --> 00:15:10,060
activity so this is what suspicious

00:15:07,600 --> 00:15:14,290
means it's either the night or

00:15:10,060 --> 00:15:17,709
suspicious one of those two right and

00:15:14,290 --> 00:15:20,470
this also gives me a running count of my

00:15:17,709 --> 00:15:23,980
sixth it requires that I recorded and

00:15:20,470 --> 00:15:27,300
that are active in the well the

00:15:23,980 --> 00:15:31,200
whitelist table

00:15:27,300 --> 00:15:34,769
no right and this is what the

00:15:31,200 --> 00:15:38,820
application would get when a statement

00:15:34,769 --> 00:15:41,300
is prevented that look through the

00:15:38,820 --> 00:15:43,649
firewall so if you execute the statement

00:15:41,300 --> 00:15:46,260
select version is obviously not

00:15:43,649 --> 00:15:50,279
something that the word press was would

00:15:46,260 --> 00:15:52,170
execute so i get an error as a result

00:15:50,279 --> 00:15:56,040
statement was blocked by the firewall

00:15:52,170 --> 00:16:00,410
and these are excerpts from the apache

00:15:56,040 --> 00:16:04,980
error log that locks that certain

00:16:00,410 --> 00:16:08,420
wordpress operations were well actually

00:16:04,980 --> 00:16:11,640
denied by the firewall wordpress is

00:16:08,420 --> 00:16:14,519
trying to hide this fact so basically

00:16:11,640 --> 00:16:17,850
when this works you will not get any

00:16:14,519 --> 00:16:20,970
indication on the WordPress pages

00:16:17,850 --> 00:16:24,540
themselves the operations will just not

00:16:20,970 --> 00:16:27,930
complete so basically well if you click

00:16:24,540 --> 00:16:30,209
publish a post it will say okay and then

00:16:27,930 --> 00:16:33,450
the posts who is not going to be

00:16:30,209 --> 00:16:37,290
published there's no error indication

00:16:33,450 --> 00:16:40,320
there unfortunately so this is how you

00:16:37,290 --> 00:16:48,720
check that the error actually was a

00:16:40,320 --> 00:16:51,350
database one all right this was the

00:16:48,720 --> 00:16:54,720
basic mode of operation of the firewall

00:16:51,350 --> 00:16:57,420
but it does support some additional

00:16:54,720 --> 00:17:01,140
options as well as I mentioned it can

00:16:57,420 --> 00:17:04,890
lock the queries that are suspicious not

00:17:01,140 --> 00:17:07,380
in the whitelist and it can do that

00:17:04,890 --> 00:17:10,500
instead of or in addition to blocking

00:17:07,380 --> 00:17:14,189
them so you can block and look you can

00:17:10,500 --> 00:17:19,860
just look you can well just block

00:17:14,189 --> 00:17:23,850
obviously or do nothing okay so the the

00:17:19,860 --> 00:17:26,699
tables that store the white lists rules

00:17:23,850 --> 00:17:32,309
are not any how special they are just

00:17:26,699 --> 00:17:35,970
normal server tables you can copy them

00:17:32,309 --> 00:17:38,460
into other tables you can well inspect

00:17:35,970 --> 00:17:38,990
them you cannot additional queries to

00:17:38,460 --> 00:17:44,059
them

00:17:38,990 --> 00:17:46,750
it's basically all there there are ways

00:17:44,059 --> 00:17:50,960
to manipulate these statistics that I've

00:17:46,750 --> 00:17:53,270
shown previously so these statistics if

00:17:50,960 --> 00:17:59,030
you want to reset them there is a way to

00:17:53,270 --> 00:18:02,630
to do that of course and it can as I

00:17:59,030 --> 00:18:06,320
mentioned it can aggregate rosettes you

00:18:02,630 --> 00:18:08,360
can record one session then somehow out

00:18:06,320 --> 00:18:11,120
manually additional things to the right

00:18:08,360 --> 00:18:13,070
list record another session added to the

00:18:11,120 --> 00:18:14,960
whitelist remove stuff from the

00:18:13,070 --> 00:18:22,160
whitelist to basically manipulate it

00:18:14,960 --> 00:18:28,040
fully right and that's pretty much how

00:18:22,160 --> 00:18:31,070
it operates the firewall okay that

00:18:28,040 --> 00:18:35,390
concludes my my overview of the firewall

00:18:31,070 --> 00:18:37,190
I guess we are a bit early here so i did

00:18:35,390 --> 00:18:43,540
that will leave us with some time for

00:18:37,190 --> 00:18:43,540
questions any questions anybody yes sir

00:18:49,480 --> 00:19:00,470
is the foil function available within

00:18:55,179 --> 00:19:02,630
embedded mysql okay so you are asking

00:19:00,470 --> 00:19:05,720
whether the firewall would work with the

00:19:02,630 --> 00:19:07,970
embedded mask your server well with the

00:19:05,720 --> 00:19:12,830
embedded mask your server first of all

00:19:07,970 --> 00:19:15,320
you don't really have user connections

00:19:12,830 --> 00:19:17,720
basically all of your so-called

00:19:15,320 --> 00:19:23,840
connections to the server running with

00:19:17,720 --> 00:19:25,940
root privileges people don't really use

00:19:23,840 --> 00:19:28,970
it like that because you cannot really

00:19:25,940 --> 00:19:31,220
connect to it to set up the whitelist

00:19:28,970 --> 00:19:33,950
and all of that it will have to be done

00:19:31,220 --> 00:19:38,510
by that same user so it kind of makes it

00:19:33,950 --> 00:19:41,270
a moot point technically eventually we

00:19:38,510 --> 00:19:44,450
can make it work but we just don't see

00:19:41,270 --> 00:19:50,960
the practical usefulness for it how

00:19:44,450 --> 00:19:52,009
would you use it to be honest no idea I

00:19:50,960 --> 00:19:55,080
said

00:19:52,009 --> 00:19:58,619
somebody asked me about embedded mysql

00:19:55,080 --> 00:20:03,090
so i was curious as to what security

00:19:58,619 --> 00:20:05,879
features are within embed mysql in

00:20:03,090 --> 00:20:08,940
whether this would be able to provide

00:20:05,879 --> 00:20:12,240
some of those features well embedded

00:20:08,940 --> 00:20:14,460
mask you is more like a berkeley DB have

00:20:12,240 --> 00:20:20,820
a sort I mean it does not care for user

00:20:14,460 --> 00:20:24,899
model in the embedded mold the all of

00:20:20,820 --> 00:20:28,139
the ACS are practically turned off so

00:20:24,899 --> 00:20:39,659
it's just a database store I mean table

00:20:28,139 --> 00:20:42,539
store nothing more okay so first

00:20:39,659 --> 00:20:45,539
interesting talk and I'd say it sounds

00:20:42,539 --> 00:20:50,039
like uh Pamela my SQL I'm really happy

00:20:45,539 --> 00:20:55,919
to see that so first question do you

00:20:50,039 --> 00:20:59,850
expect mariatta TP to catch this up well

00:20:55,919 --> 00:21:02,039
I know that my colleagues former

00:20:59,850 --> 00:21:04,649
colleagues from Maria DB are fully able

00:21:02,039 --> 00:21:07,619
to catch up with this weather they will

00:21:04,649 --> 00:21:10,590
do it or not it's of course driven by

00:21:07,619 --> 00:21:16,169
their own interest okay so it's possible

00:21:10,590 --> 00:21:20,129
at least everything is the next question

00:21:16,169 --> 00:21:23,879
you showed how to check a set of rules

00:21:20,129 --> 00:21:29,279
with the GUI is that a comment like time

00:21:23,879 --> 00:21:36,179
to do it yeah okay so I get a little bit

00:21:29,279 --> 00:21:39,119
of a demonstration of the GUI here so

00:21:36,179 --> 00:21:41,100
the way you manipulate the rules is

00:21:39,119 --> 00:21:46,049
basically through these buttons over

00:21:41,100 --> 00:21:50,879
here so you can save them to a file and

00:21:46,049 --> 00:21:53,820
then edit them from there I we don't

00:21:50,879 --> 00:21:57,029
really have like a manipulation oh well

00:21:53,820 --> 00:21:59,759
sorry there is a note and delete so you

00:21:57,029 --> 00:22:02,039
can also do individual rules we also

00:21:59,759 --> 00:22:03,600
provide some functions for you that will

00:22:02,039 --> 00:22:06,390
do the normalization

00:22:03,600 --> 00:22:09,110
so if you gave like a normal quality but

00:22:06,390 --> 00:22:12,690
you need to store it as normalized

00:22:09,110 --> 00:22:15,000
upscale the server will use it yeah

00:22:12,690 --> 00:22:17,039
there is a special rescue function that

00:22:15,000 --> 00:22:21,210
will convert each query to its

00:22:17,039 --> 00:22:23,910
normalized form so it's this available

00:22:21,210 --> 00:22:26,549
at the comment line also somehow all

00:22:23,910 --> 00:22:29,700
right do I have to do some SQL queries

00:22:26,549 --> 00:22:32,429
to insert it into the whitelist table if

00:22:29,700 --> 00:22:34,799
I don't want to use the GUI mode well I

00:22:32,429 --> 00:22:37,919
didn't actually try to the Add button

00:22:34,799 --> 00:22:41,820
but I suspect that it will normalize it

00:22:37,919 --> 00:22:46,200
for you if it doesn't please file a bug

00:22:41,820 --> 00:22:50,130
we will make it to it of course so in

00:22:46,200 --> 00:22:53,280
the last question let's say i don't i

00:22:50,130 --> 00:22:56,610
have not only one wordpress installation

00:22:53,280 --> 00:22:59,970
on myself up at 10 is that way to say

00:22:56,610 --> 00:23:04,020
apply the same rules but this other user

00:22:59,970 --> 00:23:07,620
but of course with another database okay

00:23:04,020 --> 00:23:12,150
so basically you do it for one of your

00:23:07,620 --> 00:23:14,280
users then you save it as a file then

00:23:12,150 --> 00:23:17,030
you go to your other user and target

00:23:14,280 --> 00:23:26,270
from a file you can copy these things

00:23:17,030 --> 00:23:30,330
okay thank you more questions anybody

00:23:26,270 --> 00:23:33,110
know great thanks for showing up and

00:23:30,330 --> 00:23:33,110
thanks for your attention

00:23:35,450 --> 00:23:37,510

YouTube URL: https://www.youtube.com/watch?v=6GlPlZqLlCM


