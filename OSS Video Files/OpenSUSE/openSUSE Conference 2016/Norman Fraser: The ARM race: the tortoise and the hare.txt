Title: Norman Fraser: The ARM race: the tortoise and the hare
Publication date: 2016-06-26
Playlist: openSUSE Conference 2016
Description: 
	https://media.ccc.de/v/1040-the-arm-race-the-tortoise-and-the-hare

 Norman Fraser, Ph.D. is the CEO of SoftIron  Ltd.

Douglas DeMaio
Captions: 
	00:00:00,000 --> 00:00:11,059
in this beautiful building and today I

00:00:04,879 --> 00:00:14,639
want to talk about 64-bit ARM servers

00:00:11,059 --> 00:00:18,590
it's been my pleasure to see what's been

00:00:14,639 --> 00:00:23,100
going on in this space from the inside

00:00:18,590 --> 00:00:27,210
soft iron the company that I lead was

00:00:23,100 --> 00:00:31,489
started in 2012 and we've been pretty

00:00:27,210 --> 00:00:34,010
much riding the wave since then in 2014

00:00:31,489 --> 00:00:38,370
we introduced the first production

00:00:34,010 --> 00:00:42,329
64-bit ARM server motherboard that was

00:00:38,370 --> 00:00:44,280
based on applied micro silicon and then

00:00:42,329 --> 00:00:47,969
last year we introduced the first

00:00:44,280 --> 00:00:52,980
production 64-bit ARM server complete

00:00:47,969 --> 00:00:57,480
system based on the AMD opteron a 1100

00:00:52,980 --> 00:01:02,670
and so it's been my pleasure to be able

00:00:57,480 --> 00:01:04,170
to talk with lots of people who run

00:01:02,670 --> 00:01:06,479
large infrastructures small

00:01:04,170 --> 00:01:10,710
infrastructures people who love arm

00:01:06,479 --> 00:01:12,540
people who hate arm and it's been quite

00:01:10,710 --> 00:01:16,530
interesting to pick up on some of the

00:01:12,540 --> 00:01:19,530
things that that people say and so I had

00:01:16,530 --> 00:01:21,299
originally planned a deep tech talk and

00:01:19,530 --> 00:01:24,299
then I saw that Andrew Wafaa was on

00:01:21,299 --> 00:01:26,310
after me and so so I've left all the

00:01:24,299 --> 00:01:28,619
deep tech to him and I just like to give

00:01:26,310 --> 00:01:31,829
you a kind of state of the nation and

00:01:28,619 --> 00:01:35,009
try to locate how arm servers fit in the

00:01:31,829 --> 00:01:38,700
current server enterprise data center

00:01:35,009 --> 00:01:40,729
kind of firmament one of the comments

00:01:38,700 --> 00:01:43,799
that we picked that we pick up

00:01:40,729 --> 00:01:48,360
repeatedly is why on earth would you

00:01:43,799 --> 00:01:52,200
want to make an arm server because x86

00:01:48,360 --> 00:01:54,600
owns the server market and to be honest

00:01:52,200 --> 00:01:57,750
it's kind of historically true there

00:01:54,600 --> 00:02:02,009
have been other players but the market

00:01:57,750 --> 00:02:04,290
share of x86 is absolutely massive it's

00:02:02,009 --> 00:02:08,990
kind of a little bit more than ninety

00:02:04,290 --> 00:02:12,290
nine percent in terms of CPU shipments

00:02:08,990 --> 00:02:16,220
and in terms of revenues it's eighty

00:02:12,290 --> 00:02:19,550
percent so people have been saying to us

00:02:16,220 --> 00:02:21,380
why on earth would you try and compete

00:02:19,550 --> 00:02:24,110
in that market with an alternative

00:02:21,380 --> 00:02:27,520
architecture as a bit like setting out

00:02:24,110 --> 00:02:27,520
to tackle the North Face of the Eiger

00:02:27,670 --> 00:02:33,380
similar comments that we've heard from

00:02:29,780 --> 00:02:37,700
people are things like arm will never

00:02:33,380 --> 00:02:39,230
beat x86 in the server market often

00:02:37,700 --> 00:02:41,600
people just kind of cut out the

00:02:39,230 --> 00:02:45,170
middleman and say arm will never beat

00:02:41,600 --> 00:02:47,870
intel in the server market because intel

00:02:45,170 --> 00:02:51,590
owns such a large market share of the

00:02:47,870 --> 00:02:54,620
x86 market and as i've listened to

00:02:51,590 --> 00:02:59,630
people offering those sorts of opinions

00:02:54,620 --> 00:03:02,870
it's put me in mind of a story that i

00:02:59,630 --> 00:03:07,670
first learned when i was when i was

00:03:02,870 --> 00:03:10,460
about this high it's one of Aesop's

00:03:07,670 --> 00:03:15,020
fables it's the story of The Tortoise

00:03:10,460 --> 00:03:18,440
and the hare The Tortoise of course is

00:03:15,020 --> 00:03:23,360
slow moving and the hair is very

00:03:18,440 --> 00:03:25,690
fast-moving and aesops two and a half

00:03:23,360 --> 00:03:28,730
thousand year old fable goes like this

00:03:25,690 --> 00:03:31,340
the hair was very proud of being so fast

00:03:28,730 --> 00:03:34,070
moving of being the fastest of all the

00:03:31,340 --> 00:03:38,330
animals and was forever boasting about

00:03:34,070 --> 00:03:42,650
it and so the Tatas getting fed up of

00:03:38,330 --> 00:03:44,600
this challenged the hair to a race the

00:03:42,650 --> 00:03:46,910
hair was the hair and knew that he was

00:03:44,600 --> 00:03:49,520
fastest he was so confident that he was

00:03:46,910 --> 00:03:53,570
fastest that along the way he had a

00:03:49,520 --> 00:03:57,860
little sleep and as he was sleeping the

00:03:53,570 --> 00:04:01,400
tortoise pasta now the kind of comments

00:03:57,860 --> 00:04:04,970
that I've picked up from people looking

00:04:01,400 --> 00:04:08,000
in at what's been happening in the arm

00:04:04,970 --> 00:04:11,870
server space and have a little bit of a

00:04:08,000 --> 00:04:14,060
flavor of Aesop's fable The Tortoise and

00:04:11,870 --> 00:04:16,700
the hare what they're saying is

00:04:14,060 --> 00:04:21,220
something that sounds very much like the

00:04:16,700 --> 00:04:21,220
hair is faster and will win every time

00:04:21,480 --> 00:04:28,950
or perhaps the Toros will lose because

00:04:25,020 --> 00:04:32,790
it's not a hair so let's have a look at

00:04:28,950 --> 00:04:35,700
those arguments first of all the hair is

00:04:32,790 --> 00:04:38,370
faster and we'll win every time and that

00:04:35,700 --> 00:04:41,070
kind of breaks down into some sub sub

00:04:38,370 --> 00:04:43,290
arguments or some sub points that will

00:04:41,070 --> 00:04:47,610
look at first of all is the here really

00:04:43,290 --> 00:04:51,030
faster secondly if it is will it always

00:04:47,610 --> 00:04:57,090
be and thirdly is the race about speed

00:04:51,030 --> 00:04:58,770
anyway well let's start out with the

00:04:57,090 --> 00:05:04,920
first of those questions is the hair

00:04:58,770 --> 00:05:10,380
faster or in in more sensible Geek Speak

00:05:04,920 --> 00:05:14,460
is x86 a fundamentally better server

00:05:10,380 --> 00:05:16,830
engine does it have a starting advantage

00:05:14,460 --> 00:05:21,510
which will take it all the way through

00:05:16,830 --> 00:05:24,840
when pitted against arm well it has to

00:05:21,510 --> 00:05:28,590
be said that both technologies have a

00:05:24,840 --> 00:05:31,830
track record of winning arm has

00:05:28,590 --> 00:05:38,250
undoubtedly been the key winner in the

00:05:31,830 --> 00:05:42,510
area of low energy small size and it's

00:05:38,250 --> 00:05:45,990
done incredibly well in that space x86

00:05:42,510 --> 00:05:50,610
on the other hand has been the silicon

00:05:45,990 --> 00:05:52,860
of choice for computation if you want if

00:05:50,610 --> 00:05:54,540
you are a really good computational

00:05:52,860 --> 00:05:57,210
workhorse that's where people have gone

00:05:54,540 --> 00:06:01,820
it's also been the the virtualization

00:05:57,210 --> 00:06:01,820
engine of choice over the last few years

00:06:02,330 --> 00:06:08,420
if you look at applications those

00:06:06,030 --> 00:06:11,010
particular distinctives have mapped onto

00:06:08,420 --> 00:06:13,740
different areas of success in the market

00:06:11,010 --> 00:06:16,590
arm has been fantastically successful in

00:06:13,740 --> 00:06:18,960
the area of mobile and of course in

00:06:16,590 --> 00:06:21,590
embedded systems and I guess some of you

00:06:18,960 --> 00:06:24,330
have worked on applications in that area

00:06:21,590 --> 00:06:27,110
x86 on the other hand has kind of owned

00:06:24,330 --> 00:06:32,400
the enterprise and the data center and

00:06:27,110 --> 00:06:34,580
so arm might be characterized

00:06:32,400 --> 00:06:38,639
as being great at lightweight

00:06:34,580 --> 00:06:40,440
applications and x86 at heavyweight

00:06:38,639 --> 00:06:42,660
applications i don't mean those in a

00:06:40,440 --> 00:06:46,530
value judgment sense i mean them in a

00:06:42,660 --> 00:06:49,699
descriptive sense arm has been the light

00:06:46,530 --> 00:06:52,949
go to solution from mobile and embedded

00:06:49,699 --> 00:06:57,270
x86 for enterprise and data center now

00:06:52,949 --> 00:07:01,169
of course there is no denying the

00:06:57,270 --> 00:07:05,419
heavyweight credentials of x86 Moore's

00:07:01,169 --> 00:07:09,900
law has been an absolutely phenomenal

00:07:05,419 --> 00:07:12,270
progression over a period of forty or

00:07:09,900 --> 00:07:14,610
forty-five years we've seen this

00:07:12,270 --> 00:07:18,030
incessant doubling of the number of

00:07:14,610 --> 00:07:21,180
transistors and the same the same chip

00:07:18,030 --> 00:07:25,770
space every 18 months or so it's been

00:07:21,180 --> 00:07:28,590
really really impressive and I'd like to

00:07:25,770 --> 00:07:30,660
make it clear that just because I work

00:07:28,590 --> 00:07:34,620
with armed systems doesn't mean that I'm

00:07:30,660 --> 00:07:37,979
an x86 basher I'm not here to tell you

00:07:34,620 --> 00:07:40,320
how terrible x86 is what I'm trying to

00:07:37,979 --> 00:07:43,080
do is to figure out where do the

00:07:40,320 --> 00:07:45,000
different pieces of silicon and the

00:07:43,080 --> 00:07:50,280
different architectures fit together in

00:07:45,000 --> 00:07:54,690
this space historically x86 has

00:07:50,280 --> 00:07:58,080
prioritized computing power Moore's law

00:07:54,690 --> 00:08:00,570
has been not just a descriptive reality

00:07:58,080 --> 00:08:04,440
but it's been a kind of ideology in the

00:08:00,570 --> 00:08:09,000
development of x86 and so there's been a

00:08:04,440 --> 00:08:12,060
massive focus on making it continued to

00:08:09,000 --> 00:08:14,669
be true it's all about computing power

00:08:12,060 --> 00:08:17,070
and so you could argue that in the

00:08:14,669 --> 00:08:20,419
development of x86 computing power has

00:08:17,070 --> 00:08:22,979
been prioritized over energy efficiency

00:08:20,419 --> 00:08:26,000
it's been prioritized over cost

00:08:22,979 --> 00:08:30,630
efficiency it's been prioritized over

00:08:26,000 --> 00:08:33,330
footprint efficiency and it's been

00:08:30,630 --> 00:08:41,610
prioritized I would argue over support

00:08:33,330 --> 00:08:44,209
for rich and plentiful io support if you

00:08:41,610 --> 00:08:47,839
will computational muscle

00:08:44,209 --> 00:08:52,850
is x86 is unique selling point it's what

00:08:47,839 --> 00:08:56,480
we all think of so know that 64-bit ARM

00:08:52,850 --> 00:09:00,579
has come into the market how does it get

00:08:56,480 --> 00:09:04,100
on how does it stack up against a x86 if

00:09:00,579 --> 00:09:06,550
you look around at the various 64-bit

00:09:04,100 --> 00:09:11,149
ARM silicon vendors and system vendors

00:09:06,550 --> 00:09:13,759
you'll find claims for Xeon class

00:09:11,149 --> 00:09:20,059
performance that's a very very broad

00:09:13,759 --> 00:09:26,779
spread from Xeon e3 through high-end

00:09:20,059 --> 00:09:30,949
xeon e5 um but from firsthand experience

00:09:26,779 --> 00:09:35,779
I would say yep that's the zone that the

00:09:30,949 --> 00:09:37,249
current 64-bit arm servers are in am and

00:09:35,779 --> 00:09:38,990
of course there's a range of different

00:09:37,249 --> 00:09:43,100
server silicon's that are right there

00:09:38,990 --> 00:09:47,749
right now it's probably worth saying

00:09:43,100 --> 00:09:53,809
that it's actually pretty impressive for

00:09:47,749 --> 00:09:57,069
first generation silicon this is this is

00:09:53,809 --> 00:10:01,490
the very first generation of 64-bit ARM

00:09:57,069 --> 00:10:03,249
server class silicon to come to market

00:10:01,490 --> 00:10:08,209
over the last couple of years it's

00:10:03,249 --> 00:10:12,499
pretty impressive first first go out of

00:10:08,209 --> 00:10:14,240
the gate to get into that zone against

00:10:12,499 --> 00:10:21,379
the technology that's been maturing over

00:10:14,240 --> 00:10:24,199
a period of decades it is however the

00:10:21,379 --> 00:10:27,139
case that although broadly I would agree

00:10:24,199 --> 00:10:29,360
from my own experience and from looking

00:10:27,139 --> 00:10:35,569
at other technologies that are in the

00:10:29,360 --> 00:10:39,499
space that today's 64-bit ARM servers

00:10:35,569 --> 00:10:41,749
are in the Z on class it has to be said

00:10:39,499 --> 00:10:45,610
that the overall arm server package

00:10:41,749 --> 00:10:51,019
profile is significantly different from

00:10:45,610 --> 00:10:54,790
the profile of an x86 product they have

00:10:51,019 --> 00:10:54,790
different strengths and weaknesses

00:10:55,170 --> 00:11:04,000
64-bit ARM isn't a lightweight version

00:10:58,750 --> 00:11:07,930
of x86 it's a it's at least a

00:11:04,000 --> 00:11:09,490
middleweight different product with a

00:11:07,930 --> 00:11:12,279
different profile and different

00:11:09,490 --> 00:11:14,769
strengths and weaknesses and comparing

00:11:12,279 --> 00:11:18,250
the two is kind of an apples versus

00:11:14,769 --> 00:11:20,740
oranges activity it's much harder than

00:11:18,250 --> 00:11:23,500
it may at first look to get a clear

00:11:20,740 --> 00:11:27,490
handle on how does this compare with

00:11:23,500 --> 00:11:29,649
that if we think about the world of

00:11:27,490 --> 00:11:32,740
benchmarks we're used to benchmarking

00:11:29,649 --> 00:11:37,420
silicon and comparing between vendors

00:11:32,740 --> 00:11:39,519
between processors and benchmarks are

00:11:37,420 --> 00:11:43,779
supposed to be an independent measure of

00:11:39,519 --> 00:11:45,220
relative performance because what they

00:11:43,779 --> 00:11:52,329
can also be is a stick to beat

00:11:45,220 --> 00:11:55,060
competitors and it's very easy to to fix

00:11:52,329 --> 00:11:57,600
on some negative thing and to talk about

00:11:55,060 --> 00:12:00,670
that and ignore the positive things

00:11:57,600 --> 00:12:02,890
benchmarks to be honest are best for

00:12:00,670 --> 00:12:06,190
comparing systems that are very similar

00:12:02,890 --> 00:12:08,680
to each other where you're essentially

00:12:06,190 --> 00:12:13,870
what your benchmarking is the thing that

00:12:08,680 --> 00:12:16,029
differentiates them and so most of the

00:12:13,870 --> 00:12:20,279
benchmarking work that most of you will

00:12:16,029 --> 00:12:26,140
have done involves comparing x86 systems

00:12:20,279 --> 00:12:29,459
with broadly similar x86 systems but it

00:12:26,140 --> 00:12:32,709
can actually be quite misleading when

00:12:29,459 --> 00:12:36,870
comparing fundamentally different

00:12:32,709 --> 00:12:40,120
architectures and looking at those

00:12:36,870 --> 00:12:42,430
without looking at real-world context i

00:12:40,120 --> 00:12:44,020
predict over the net on the basis of

00:12:42,430 --> 00:12:46,630
what i've seen so far i predict that

00:12:44,020 --> 00:12:51,089
over the next two or three years we'll

00:12:46,630 --> 00:12:58,420
see lots of benchmark trials pitting

00:12:51,089 --> 00:13:01,690
64-bit ARM against x86 and some of the

00:12:58,420 --> 00:13:05,110
studies will purport to show that 64-bit

00:13:01,690 --> 00:13:08,250
arm is better because it's got this

00:13:05,110 --> 00:13:12,360
feature which it has a better number

00:13:08,250 --> 00:13:15,510
and other people will say that x86 is

00:13:12,360 --> 00:13:19,200
better for the same reasons and so

00:13:15,510 --> 00:13:24,060
people will pull out isolated

00:13:19,200 --> 00:13:25,830
performance results such as era how does

00:13:24,060 --> 00:13:30,270
this cook with integer processing or

00:13:25,830 --> 00:13:32,430
floating point processing what people

00:13:30,270 --> 00:13:36,240
are also starting to focus on is

00:13:32,430 --> 00:13:39,720
performance per watt which is a really

00:13:36,240 --> 00:13:41,430
good useful real-world measure but

00:13:39,720 --> 00:13:43,620
actually in the real world of the

00:13:41,430 --> 00:13:47,190
customers who I talked with even that

00:13:43,620 --> 00:13:49,440
isn't enough well what the people i'm

00:13:47,190 --> 00:13:54,000
talking with who run large data centers

00:13:49,440 --> 00:13:57,720
want to know about is how can i maximize

00:13:54,000 --> 00:13:59,580
my performance per watt while maximizing

00:13:57,720 --> 00:14:06,030
the amount of compute i can fit into

00:13:59,580 --> 00:14:08,190
iraq and space space occupied is

00:14:06,030 --> 00:14:10,830
something that is not generally

00:14:08,190 --> 00:14:17,570
considered in any of the standard

00:14:10,830 --> 00:14:23,000
benchmark tests most people come to this

00:14:17,570 --> 00:14:28,320
discussion assuming a priori that that

00:14:23,000 --> 00:14:32,420
x86 is the faster more powerful in some

00:14:28,320 --> 00:14:35,880
sense better enterprise piece of silicon

00:14:32,420 --> 00:14:37,980
in Aesop's terms it's as if they start

00:14:35,880 --> 00:14:41,430
with the assumption that the hair is

00:14:37,980 --> 00:14:45,270
faster and always will be well if we

00:14:41,430 --> 00:14:48,150
accept the premise let's consider how

00:14:45,270 --> 00:14:55,650
long connects 86 dominate in the data

00:14:48,150 --> 00:14:59,310
center arm the developer of the ARM

00:14:55,650 --> 00:15:04,260
architecture for a long time has been

00:14:59,310 --> 00:15:07,350
predicting that that arm would take a

00:15:04,260 --> 00:15:11,040
twenty percent market share of the

00:15:07,350 --> 00:15:13,139
server market by 2020 it's pretty

00:15:11,040 --> 00:15:16,230
aggressive

00:15:13,139 --> 00:15:19,589
target it's very interesting that arm

00:15:16,230 --> 00:15:22,019
have very have recently upgraded that to

00:15:19,589 --> 00:15:27,059
predicting a twenty five percent market

00:15:22,019 --> 00:15:29,579
share by 2020 what is it that arm knows

00:15:27,059 --> 00:15:32,129
that the rest of us don't how can we

00:15:29,579 --> 00:15:37,709
possibly see that much shift in the

00:15:32,129 --> 00:15:39,209
market over the next four years well we

00:15:37,709 --> 00:15:46,499
need to look at the dynamics of the arm

00:15:39,209 --> 00:15:50,939
ecosystem right now there are three x86

00:15:46,499 --> 00:15:56,040
manufacturers Intel AMD and via three

00:15:50,939 --> 00:15:58,859
main manufacturers on the other hand in

00:15:56,040 --> 00:16:03,379
the arm ecosystem of course arm designs

00:15:58,859 --> 00:16:05,569
the architecture and then licenses it to

00:16:03,379 --> 00:16:08,069
two partners who will take the

00:16:05,569 --> 00:16:13,139
architecture and develop and sell

00:16:08,069 --> 00:16:19,259
silicon lasts a news release from arm I

00:16:13,139 --> 00:16:22,860
saw it said that they had 1348 active

00:16:19,259 --> 00:16:24,839
licensees as people who are taking the

00:16:22,860 --> 00:16:28,470
basic architecture design and trying to

00:16:24,839 --> 00:16:33,480
do cool stuff with it in the enterprise

00:16:28,470 --> 00:16:35,519
class space already there's a whole

00:16:33,480 --> 00:16:38,100
bunch of pretty serious players who have

00:16:35,519 --> 00:16:39,779
licensed the architecture and are

00:16:38,100 --> 00:16:43,169
actively working on it I know of at

00:16:39,779 --> 00:16:46,949
least AMD applied micro broadcom cavium

00:16:43,169 --> 00:16:51,689
high silicon marvel fight IAM and

00:16:46,949 --> 00:16:53,669
qualcomm all of these people taking the

00:16:51,689 --> 00:16:55,829
basic architecture and then developing

00:16:53,669 --> 00:16:58,860
different products each product not

00:16:55,829 --> 00:17:01,259
identical to the others but but a

00:16:58,860 --> 00:17:04,380
significant including significant IP

00:17:01,259 --> 00:17:08,579
developments as well and it makes me

00:17:04,380 --> 00:17:12,269
think of of the famous essay and then

00:17:08,579 --> 00:17:14,429
later book by eric raymond the cathedral

00:17:12,269 --> 00:17:18,209
and the bazaar I guess it's well known

00:17:14,429 --> 00:17:22,039
to people in this room what eric raymond

00:17:18,209 --> 00:17:25,250
observed was that once upon a time

00:17:22,039 --> 00:17:29,060
software development was

00:17:25,250 --> 00:17:32,680
was by default pretty much like the

00:17:29,060 --> 00:17:35,480
process by which you build a cathedral

00:17:32,680 --> 00:17:37,520
there's a small team of planners who

00:17:35,480 --> 00:17:39,860
design it and then a larger team of

00:17:37,520 --> 00:17:42,980
people who follow the the design and

00:17:39,860 --> 00:17:45,140
build the product whereas what we've

00:17:42,980 --> 00:17:47,390
seen with the emergence of the open

00:17:45,140 --> 00:17:49,310
source community and with collaborative

00:17:47,390 --> 00:17:52,280
communities of developers is something

00:17:49,310 --> 00:17:55,760
that looks much more like a bizarre a

00:17:52,280 --> 00:17:58,880
free-for-all where lots of P independent

00:17:55,760 --> 00:18:02,230
people working independently somehow

00:17:58,880 --> 00:18:09,370
nonetheless succeed in developing great

00:18:02,230 --> 00:18:11,750
software like Linux like opensuse and

00:18:09,370 --> 00:18:15,200
like lots of other things that you've

00:18:11,750 --> 00:18:17,450
worked on software development in the

00:18:15,200 --> 00:18:20,570
bazaar model is bottom-up it's a

00:18:17,450 --> 00:18:23,840
community product but the community is

00:18:20,570 --> 00:18:26,200
incredibly good at finding optimal

00:18:23,840 --> 00:18:28,880
solutions within the search space

00:18:26,200 --> 00:18:30,350
there's a kind of evolutionary principle

00:18:28,880 --> 00:18:34,700
if there are enough people working away

00:18:30,350 --> 00:18:37,070
at it some people are pursuing pursuing

00:18:34,700 --> 00:18:38,840
lines of Investigation which look

00:18:37,070 --> 00:18:41,270
promising and end up not getting there

00:18:38,840 --> 00:18:46,090
and other people find the right path to

00:18:41,270 --> 00:18:46,090
produce really cool software solutions

00:18:46,180 --> 00:18:51,710
the bizarre model it has been observed

00:18:49,910 --> 00:18:55,730
works best when the initial parameters

00:18:51,710 --> 00:18:57,800
are set for the community and they're

00:18:55,730 --> 00:19:00,590
laid out and so the community works

00:18:57,800 --> 00:19:03,980
within a set of given assumptions to

00:19:00,590 --> 00:19:06,920
optimize there's interesting that the

00:19:03,980 --> 00:19:10,370
dynamics of the arm ecosystem look kind

00:19:06,920 --> 00:19:13,670
of like that because you have you have

00:19:10,370 --> 00:19:15,500
arm defining the search space as it were

00:19:13,670 --> 00:19:17,810
with each release of its architecture

00:19:15,500 --> 00:19:20,330
and then the licensees are quite a large

00:19:17,810 --> 00:19:22,930
community that get out there and explore

00:19:20,330 --> 00:19:25,760
what you can do with it and how to find

00:19:22,930 --> 00:19:30,110
optimal deployments of that architecture

00:19:25,760 --> 00:19:32,120
to solve real world problems Eric

00:19:30,110 --> 00:19:34,520
Raymond said given a large enough beta

00:19:32,120 --> 00:19:36,170
tester and co-developer base almost

00:19:34,520 --> 00:19:37,070
every problem will be characterized

00:19:36,170 --> 00:19:42,889
quickly

00:19:37,070 --> 00:19:45,380
and the fix obvious to someone I suggest

00:19:42,889 --> 00:19:47,350
that's kind of what's been happening for

00:19:45,380 --> 00:19:52,190
quite a long time in the arm community

00:19:47,350 --> 00:19:56,630
both in the arm community before the the

00:19:52,190 --> 00:19:59,630
emergence of 64-bit ARM but now also in

00:19:56,630 --> 00:20:04,220
that space too and what we've seen in in

00:19:59,630 --> 00:20:07,309
arm world is that the community gets

00:20:04,220 --> 00:20:12,320
hold of new architectures it produces

00:20:07,309 --> 00:20:14,990
initial systems it tries things out some

00:20:12,320 --> 00:20:17,649
of them work some of them don't work but

00:20:14,990 --> 00:20:23,690
the community working as a community

00:20:17,649 --> 00:20:27,860
bizarra style end up finding optimal

00:20:23,690 --> 00:20:30,110
solutions and so we see we've seen quite

00:20:27,860 --> 00:20:32,870
a number of tipping points where arm has

00:20:30,110 --> 00:20:36,200
been adopted a little bit in certain

00:20:32,870 --> 00:20:39,470
market segments and then something

00:20:36,200 --> 00:20:43,399
happens then the community comes up with

00:20:39,470 --> 00:20:46,669
a set of silicon solutions which are

00:20:43,399 --> 00:20:49,309
just right and which then quite quickly

00:20:46,669 --> 00:20:50,870
become the natural choice the tipping

00:20:49,309 --> 00:20:55,490
point is reached and so we see and this

00:20:50,870 --> 00:20:58,279
is a very small example we see a kind of

00:20:55,490 --> 00:21:03,679
evolution in the RM ecosystem where for

00:20:58,279 --> 00:21:06,379
example market penetration tipped in

00:21:03,679 --> 00:21:08,480
arms favor dramatically in the mobile

00:21:06,379 --> 00:21:11,629
space where it has more than eighty-five

00:21:08,480 --> 00:21:13,129
percent market share and in storage

00:21:11,629 --> 00:21:14,960
drives where it has more than ninety

00:21:13,129 --> 00:21:17,210
percent market share and in wearables

00:21:14,960 --> 00:21:19,399
where it has more than ninety-five

00:21:17,210 --> 00:21:22,039
percent market share now obviously those

00:21:19,399 --> 00:21:23,899
those are areas that play two arms

00:21:22,039 --> 00:21:28,039
historic strength and these are historic

00:21:23,899 --> 00:21:29,870
examples we're now in a new world where

00:21:28,039 --> 00:21:34,330
arm has ventured forth into the

00:21:29,870 --> 00:21:36,740
heavyweight end of time and but already

00:21:34,330 --> 00:21:39,440
within the first couple of years of

00:21:36,740 --> 00:21:42,799
seeing silicon coming to market we're

00:21:39,440 --> 00:21:45,830
seeing an incredible spread of different

00:21:42,799 --> 00:21:47,860
manifestations of 64-bit ARM so for

00:21:45,830 --> 00:21:47,860
example

00:21:48,460 --> 00:21:58,790
AMD is one of the licensees of the

00:21:52,720 --> 00:22:02,150
64-bit ARM v8 architecture and they have

00:21:58,790 --> 00:22:07,370
in the range the AMD opteron a 1120

00:22:02,150 --> 00:22:12,080
silicon which has four cortex a57 cores

00:22:07,370 --> 00:22:18,860
it runs at 1.7 gigahertz it supports up

00:22:12,080 --> 00:22:26,150
to 128 gig of ddr4 memory and as to 10

00:22:18,860 --> 00:22:30,250
gigabit need to to 10 GBE ports um and

00:22:26,150 --> 00:22:33,910
alongside that only two years into the

00:22:30,250 --> 00:22:38,410
82 to 64-bit ARM silicon being out there

00:22:33,910 --> 00:22:44,360
we can see the cavium Thunder x2 silicon

00:22:38,410 --> 00:22:47,690
which has 54 custom ARM cores 64-bit ARM

00:22:44,360 --> 00:22:51,049
cores in a duel configuration as hundred

00:22:47,690 --> 00:22:54,950
and eight cores each core running in

00:22:51,049 --> 00:23:00,620
turbo mode at three gig supporting up to

00:22:54,950 --> 00:23:07,130
three terabytes of ddr4 memory and with

00:23:00,620 --> 00:23:10,400
with multiple IO port options however

00:23:07,130 --> 00:23:13,730
you would describe the cavium Thunder

00:23:10,400 --> 00:23:16,850
axe to lightweight is not a word that

00:23:13,730 --> 00:23:18,799
you would use to talk about it and so

00:23:16,850 --> 00:23:20,840
we're seeing this is I'm not saying

00:23:18,799 --> 00:23:21,860
either of these are better or worse than

00:23:20,840 --> 00:23:24,650
the other there are four different

00:23:21,860 --> 00:23:26,299
things but already the community is

00:23:24,650 --> 00:23:28,040
starting to explore the space and to

00:23:26,299 --> 00:23:32,000
manifest quite different and interesting

00:23:28,040 --> 00:23:35,390
and clusters of functionality some of

00:23:32,000 --> 00:23:37,490
which are somewhat different from the

00:23:35,390 --> 00:23:44,840
clusters of functionality that you see

00:23:37,490 --> 00:23:48,010
in in x86 alternatives so I would

00:23:44,840 --> 00:23:50,660
contend that the arm licensing model

00:23:48,010 --> 00:23:53,150
facilitates efficient exploration of the

00:23:50,660 --> 00:23:56,350
space leading to faster convergence on

00:23:53,150 --> 00:23:56,350
optimal solutions

00:23:56,730 --> 00:24:02,200
and because of that and because of my

00:24:00,580 --> 00:24:04,570
first-hand experience of working with

00:24:02,200 --> 00:24:08,139
this stuff and seeing what we can do

00:24:04,570 --> 00:24:14,110
with it I would say don't bet against

00:24:08,139 --> 00:24:17,860
64-bit ARM outperforming x86 over the

00:24:14,110 --> 00:24:25,450
next few years that's a personal opinion

00:24:17,860 --> 00:24:28,029
I would I would also have said don't bet

00:24:25,450 --> 00:24:40,019
on the UK voting to leave the European

00:24:28,029 --> 00:24:43,679
Union but hey but what's the race about

00:24:40,019 --> 00:24:48,009
what are we actually trying to do

00:24:43,679 --> 00:24:50,350
because a lot of the people that I talk

00:24:48,009 --> 00:24:53,080
to journalists that I talked to who want

00:24:50,350 --> 00:24:56,049
to talk about 64-bit ARM out in the real

00:24:53,080 --> 00:24:59,169
world they kind of start with the

00:24:56,049 --> 00:25:06,009
assumption that what i want to do

00:24:59,169 --> 00:25:09,549
building xat x86 servers is kind of make

00:25:06,009 --> 00:25:12,220
slightly better x86 servers but that's

00:25:09,549 --> 00:25:13,690
not what I'm trying to do at all there

00:25:12,220 --> 00:25:16,000
are lots of different races and

00:25:13,690 --> 00:25:19,210
different customers care about different

00:25:16,000 --> 00:25:22,600
things first of all there's the energy

00:25:19,210 --> 00:25:24,850
race energy efficiency has been a key

00:25:22,600 --> 00:25:27,940
part of arms competitive of an advantage

00:25:24,850 --> 00:25:34,330
from the very early days it's kind of

00:25:27,940 --> 00:25:37,360
what arm is known for right um and I

00:25:34,330 --> 00:25:39,820
would say looking at the work that we've

00:25:37,360 --> 00:25:41,889
done on our own systems and looking at

00:25:39,820 --> 00:25:44,799
work that other people in our peer group

00:25:41,889 --> 00:25:49,210
have done I would venture to suggest

00:25:44,799 --> 00:25:52,269
that for many workloads today's first

00:25:49,210 --> 00:25:54,990
generation 64-bit arm servers deliver

00:25:52,269 --> 00:25:58,320
better energy efficiency than

00:25:54,990 --> 00:26:02,289
state-of-the-art nth generation x86

00:25:58,320 --> 00:26:03,930
servers I'm not saying that's true in

00:26:02,289 --> 00:26:06,100
every case

00:26:03,930 --> 00:26:09,580
but it's certainly true in some cases

00:26:06,100 --> 00:26:12,840
and there are already compelling reasons

00:26:09,580 --> 00:26:18,130
in particular use cases for deploying

00:26:12,840 --> 00:26:23,320
64-bit ARM in real scale out situations

00:26:18,130 --> 00:26:28,660
a little side note beware when talking

00:26:23,320 --> 00:26:33,660
about about processor tdps and because

00:26:28,660 --> 00:26:37,810
of course when people talk about x86 CPU

00:26:33,660 --> 00:26:42,060
TDPS they're talking about the CPU when

00:26:37,810 --> 00:26:44,860
people talk about tdps in the arm world

00:26:42,060 --> 00:26:48,610
arm server world they're talking about a

00:26:44,860 --> 00:26:49,930
lot more within that power envelope so

00:26:48,610 --> 00:26:52,600
it's another of these apples with

00:26:49,930 --> 00:26:56,080
oranges situations you've got to compare

00:26:52,600 --> 00:27:02,440
like with like to get reasonable results

00:26:56,080 --> 00:27:06,010
I would have to observe that x86 energy

00:27:02,440 --> 00:27:09,130
efficiency is improving fast and you

00:27:06,010 --> 00:27:13,600
know it's it's on the agenda now and I

00:27:09,130 --> 00:27:17,940
would be lying if I didn't say that but

00:27:13,600 --> 00:27:21,310
it's also the case that 64-bit ARM is

00:27:17,940 --> 00:27:23,410
just really on its first technology

00:27:21,310 --> 00:27:26,860
cycle it's got a lot of scope for

00:27:23,410 --> 00:27:32,200
further energy improvement even see

00:27:26,860 --> 00:27:38,080
improvement as well next we come to the

00:27:32,200 --> 00:27:40,780
space race some people are very keen on

00:27:38,080 --> 00:27:43,960
fitting as much compute as they can into

00:27:40,780 --> 00:27:45,610
a smaller space as possible sometimes as

00:27:43,960 --> 00:27:49,390
much as the can into as larger space as

00:27:45,610 --> 00:27:53,680
they can I think it's just today it's

00:27:49,390 --> 00:27:57,610
just a fact that 64-bit arm servers are

00:27:53,680 --> 00:28:01,810
smaller than x86 servers you can just

00:27:57,610 --> 00:28:06,720
make them smaller physically and so you

00:28:01,810 --> 00:28:12,070
can typically fit a whole bunch more in

00:28:06,720 --> 00:28:13,880
in a standard data center rack of course

00:28:12,070 --> 00:28:17,270
the real question is

00:28:13,880 --> 00:28:20,420
our arm virtual machines smaller than

00:28:17,270 --> 00:28:22,970
x86 virtual machines how many virtual

00:28:20,420 --> 00:28:25,250
machines can you fit in Iraq and not

00:28:22,970 --> 00:28:29,330
just how many physical servers can you

00:28:25,250 --> 00:28:32,450
fit in Iraq and because we're so early

00:28:29,330 --> 00:28:38,870
in the development of these products the

00:28:32,450 --> 00:28:41,090
jury is still out on that then we come

00:28:38,870 --> 00:28:46,150
to the total cost of ownership race this

00:28:41,090 --> 00:28:46,150
is very important to customers and and

00:28:46,360 --> 00:28:52,450
some people have responded to the fact

00:28:49,130 --> 00:28:55,490
that some of the earliest releases of

00:28:52,450 --> 00:28:58,130
64-bit ARM server products have been

00:28:55,490 --> 00:29:02,090
perceived to be more expensive than x86

00:28:58,130 --> 00:29:03,980
but actually early releases of x86 new

00:29:02,090 --> 00:29:06,350
technologies tend to be more expensive

00:29:03,980 --> 00:29:10,270
than they are six months later it's just

00:29:06,350 --> 00:29:10,270
a fact of how technology gets released

00:29:10,600 --> 00:29:16,010
my observation having been intimately

00:29:14,060 --> 00:29:20,150
connected with the cost base of both

00:29:16,010 --> 00:29:23,900
technologies 64-bit arm and x86 is that

00:29:20,150 --> 00:29:26,270
in general 64-bit arm servers will tend

00:29:23,900 --> 00:29:33,770
to be cheaper to buy and cheaper to run

00:29:26,270 --> 00:29:38,960
than x86 one of the kind of puzzling

00:29:33,770 --> 00:29:40,850
things that that critics sometimes throw

00:29:38,960 --> 00:29:46,220
in the direction of companies who

00:29:40,850 --> 00:29:48,350
develop arm servers is is it's almost

00:29:46,220 --> 00:29:49,850
not worthy of discussion but I thought I

00:29:48,350 --> 00:29:54,230
would see it because people have said it

00:29:49,850 --> 00:29:58,340
to me so often and that is unless you

00:29:54,230 --> 00:30:02,150
can make an a 64-bit ARM server which

00:29:58,340 --> 00:30:06,830
can outperform the very top of the range

00:30:02,150 --> 00:30:08,840
most powerful x86 server then you

00:30:06,830 --> 00:30:12,080
shouldn't be playing you shouldn't be in

00:30:08,840 --> 00:30:15,020
the race well it's just kind of dumb

00:30:12,080 --> 00:30:17,690
because most x86 servers that are

00:30:15,020 --> 00:30:19,370
selling well don't outperform the top of

00:30:17,690 --> 00:30:22,190
the x86 rain

00:30:19,370 --> 00:30:24,800
and the truth is we are still in the

00:30:22,190 --> 00:30:27,620
first generation of 64-bit ARM systems

00:30:24,800 --> 00:30:29,930
they just started to last year and

00:30:27,620 --> 00:30:33,250
they're doing incredibly well for a

00:30:29,930 --> 00:30:37,760
first generation it just isn't rational

00:30:33,250 --> 00:30:40,040
to require them to outperform the

00:30:37,760 --> 00:30:45,620
pinnacle of a technology-based that's

00:30:40,040 --> 00:30:48,080
been in development for four decades it

00:30:45,620 --> 00:30:51,110
is the case that vendors including soft

00:30:48,080 --> 00:30:54,140
iron are in the early stages of filling

00:30:51,110 --> 00:30:58,429
out our product portfolios and we have a

00:30:54,140 --> 00:31:01,070
whole range of different price points

00:30:58,429 --> 00:31:03,470
and functionality points that we're

00:31:01,070 --> 00:31:07,280
going to be filling out along the way

00:31:03,470 --> 00:31:09,290
it's kind of natural that that the place

00:31:07,280 --> 00:31:11,360
where most people start is somewhere

00:31:09,290 --> 00:31:12,980
round about the middle or a little bit

00:31:11,360 --> 00:31:14,840
bit below that because the first thing

00:31:12,980 --> 00:31:16,640
that has to happen with a new

00:31:14,840 --> 00:31:20,470
architecture is that people like you

00:31:16,640 --> 00:31:23,000
have to try porting applications onto

00:31:20,470 --> 00:31:25,880
onto their hardware and testing it

00:31:23,000 --> 00:31:30,679
before you can look at scale out with

00:31:25,880 --> 00:31:33,590
large big iron deployments what I would

00:31:30,679 --> 00:31:36,790
say is that 64-bit ARM has definitely

00:31:33,590 --> 00:31:41,630
hit the ground running this is not a toy

00:31:36,790 --> 00:31:43,820
it's not a flash in the pan 64-bit ARM

00:31:41,630 --> 00:31:46,130
is here to stay and I work with it every

00:31:43,820 --> 00:31:48,309
day and I talked with customers who come

00:31:46,130 --> 00:31:52,010
to us looking for very specific things

00:31:48,309 --> 00:31:53,270
that they can get from 64-bit ARM which

00:31:52,010 --> 00:31:56,720
they feel that they're not currently

00:31:53,270 --> 00:31:58,070
getting from other places so watch this

00:31:56,720 --> 00:32:00,770
space it's going to be really

00:31:58,070 --> 00:32:04,730
interesting over the next few years to

00:32:00,770 --> 00:32:06,860
see how the market develops so I said I

00:32:04,730 --> 00:32:10,100
wanted to talk about what observers or

00:32:06,860 --> 00:32:12,050
critics have been saying one of the

00:32:10,100 --> 00:32:14,450
first thing I've been talking about is

00:32:12,050 --> 00:32:16,790
when they say the hair is faster and

00:32:14,450 --> 00:32:19,010
will win every time and I've tried to

00:32:16,790 --> 00:32:21,950
point out that well we need to ask by

00:32:19,010 --> 00:32:25,750
what we mean by faster and what kind of

00:32:21,950 --> 00:32:28,460
race do we think we're in any way and I

00:32:25,750 --> 00:32:31,100
find some inspiration in the Bible which

00:32:28,460 --> 00:32:32,919
says the race is not to the Swift or the

00:32:31,100 --> 00:32:37,640
battle to the straw

00:32:32,919 --> 00:32:40,549
so I'll just leave that hanging at the

00:32:37,640 --> 00:32:42,650
thought for the morning the second thing

00:32:40,549 --> 00:32:44,270
and much more quickly is people have

00:32:42,650 --> 00:32:46,610
said things to us that that kind of

00:32:44,270 --> 00:32:48,740
boils down in terms of Aesop's fable to

00:32:46,610 --> 00:32:53,049
the tortoise will lose because it's not

00:32:48,740 --> 00:32:57,409
a hair and people have got so used to

00:32:53,049 --> 00:33:01,730
server equals x 86 that it's hard to

00:32:57,409 --> 00:33:04,039
kind of disaggregate those thoughts and

00:33:01,730 --> 00:33:07,970
people keep saying arm will lose because

00:33:04,039 --> 00:33:11,659
it's not x86 no arm will lose if it's

00:33:07,970 --> 00:33:17,390
rubbish but it's not rubbish it has some

00:33:11,659 --> 00:33:20,390
pretty impressive things to offer and we

00:33:17,390 --> 00:33:23,779
find ourselves talking with people in

00:33:20,390 --> 00:33:27,620
the customer in our customer group where

00:33:23,779 --> 00:33:30,230
it kind of feels like actually there are

00:33:27,620 --> 00:33:35,059
some races in which arm has a distinct

00:33:30,230 --> 00:33:37,909
advantage because if you look at if you

00:33:35,059 --> 00:33:41,029
look at things a typical x86 CPU is a

00:33:37,909 --> 00:33:44,029
powerful computer with some support for

00:33:41,029 --> 00:33:45,200
direct attached storage if you want to

00:33:44,029 --> 00:33:46,940
increase the amount of storage you've

00:33:45,200 --> 00:33:50,149
got you need to add splitters or you

00:33:46,940 --> 00:33:51,679
need to add extra servers so as you add

00:33:50,149 --> 00:33:53,480
storage you increase the number of

00:33:51,679 --> 00:33:58,070
motherboards that you've got to drive

00:33:53,480 --> 00:34:00,470
data into the storage media and it seems

00:33:58,070 --> 00:34:03,370
to us looking at looking at this profile

00:34:00,470 --> 00:34:07,640
that actually for the storage

00:34:03,370 --> 00:34:11,810
application CP x86 CPUs are typically

00:34:07,640 --> 00:34:15,919
over specified for compute and under

00:34:11,810 --> 00:34:22,490
specified for data throughput if you

00:34:15,919 --> 00:34:26,500
look at 64-bit ARM even if you concede

00:34:22,490 --> 00:34:29,450
that you have a less powerful computer

00:34:26,500 --> 00:34:32,210
the systems that have been coming to

00:34:29,450 --> 00:34:36,129
market have got much more support for

00:34:32,210 --> 00:34:39,080
direct attached storage they support

00:34:36,129 --> 00:34:42,859
there's plenty enough compute to drive

00:34:39,080 --> 00:34:44,720
data throughput and so you end up with a

00:34:42,859 --> 00:34:49,159
much better ratio of

00:34:44,720 --> 00:34:51,050
storage to servers actually what we

00:34:49,159 --> 00:34:54,159
found and we've done extensive work in

00:34:51,050 --> 00:35:03,190
our labs we're very excited about it is

00:34:54,159 --> 00:35:07,099
64-bit ARM is fantastic for storage the

00:35:03,190 --> 00:35:12,040
SOC SR right sized for compute and

00:35:07,099 --> 00:35:14,540
throughput to deliver optimal results so

00:35:12,040 --> 00:35:17,300
what can you expect you can expect

00:35:14,540 --> 00:35:20,330
64-bit ARM to outperform x86

00:35:17,300 --> 00:35:23,119
dramatically in storage and later on in

00:35:20,330 --> 00:35:24,980
the year we are going to be generally

00:35:23,119 --> 00:35:28,640
releasing some storage products which

00:35:24,980 --> 00:35:31,520
are currently out in the market with

00:35:28,640 --> 00:35:33,740
beta test partners and if you're

00:35:31,520 --> 00:35:40,250
interested in becoming one then do have

00:35:33,740 --> 00:35:42,730
a conversation afterwards we also find

00:35:40,250 --> 00:35:47,510
ourselves talking with people who love

00:35:42,730 --> 00:35:49,099
x86 but who say as a matter of policy we

00:35:47,510 --> 00:35:51,680
don't want to put all our eggs in the

00:35:49,099 --> 00:35:53,750
x86 basket in fact we've even come

00:35:51,680 --> 00:35:56,869
across people with very very large

00:35:53,750 --> 00:36:00,820
infrastructures who say they have an

00:35:56,869 --> 00:36:03,680
ambition to if possible have a an a

00:36:00,820 --> 00:36:08,180
50-50 split between x86 and an

00:36:03,680 --> 00:36:09,890
alternative architecture when when we

00:36:08,180 --> 00:36:14,990
start hearing that it sounds more like

00:36:09,890 --> 00:36:17,240
it's a tortoise race and because the

00:36:14,990 --> 00:36:19,730
hair by virtue of being a hair can't win

00:36:17,240 --> 00:36:24,650
in terms of providing diversity

00:36:19,730 --> 00:36:26,869
diversification from itself and but

00:36:24,650 --> 00:36:32,180
there's another kind of tortoise race in

00:36:26,869 --> 00:36:34,550
the terminology visa and that is the

00:36:32,180 --> 00:36:38,240
market segment represented by people

00:36:34,550 --> 00:36:41,180
like you because um last year ARM

00:36:38,240 --> 00:36:42,890
processors accounted for around thirty

00:36:41,180 --> 00:36:48,320
two percent of the worldwide server

00:36:42,890 --> 00:36:50,780
market that says 15 billion servers

00:36:48,320 --> 00:36:53,700
which is obviously a wishful freudian

00:36:50,780 --> 00:37:00,180
slip it's supposed to say 15 billion

00:36:53,700 --> 00:37:04,080
ARM processors shipped so that's a huge

00:37:00,180 --> 00:37:05,910
number of ARM processors that are that

00:37:04,080 --> 00:37:07,350
went out into the market last year more

00:37:05,910 --> 00:37:10,620
will go out into the market this year

00:37:07,350 --> 00:37:14,970
and so there's a huge global community

00:37:10,620 --> 00:37:18,680
of arm developers and testers working in

00:37:14,970 --> 00:37:23,570
a native arm environment wanting to test

00:37:18,680 --> 00:37:26,940
their code in a native arm environment

00:37:23,570 --> 00:37:30,450
we've tapped into this and and

00:37:26,940 --> 00:37:33,780
discovered the reality of it after we

00:37:30,450 --> 00:37:36,660
launched our first 64-bit ARM server

00:37:33,780 --> 00:37:41,420
product our overdrive 3000 it's an

00:37:36,660 --> 00:37:43,920
enterprise-class rack server unit and

00:37:41,420 --> 00:37:50,610
we've been getting fantastic feedback

00:37:43,920 --> 00:37:58,020
from customers and it has been shipping

00:37:50,610 --> 00:38:01,460
with with opensuse on it but i want to

00:37:58,020 --> 00:38:06,110
announce today that from here onwards

00:38:01,460 --> 00:38:09,320
overdrive 3000 will be shipping with

00:38:06,110 --> 00:38:09,320
openSUSE leap

00:38:16,430 --> 00:38:21,230
it's it's in the box along with a bunch

00:38:19,520 --> 00:38:27,260
of other goodies so you can plug and

00:38:21,230 --> 00:38:29,140
play now people quite a broad range of

00:38:27,260 --> 00:38:33,110
customers have been developing on this

00:38:29,140 --> 00:38:35,030
for a lot of different market segments a

00:38:33,110 --> 00:38:41,180
lot of different applications a lot of

00:38:35,030 --> 00:38:44,360
different packages and they the feedback

00:38:41,180 --> 00:38:48,350
we're getting is people love that it's a

00:38:44,360 --> 00:38:52,130
big chunky powerful machine with great I

00:38:48,350 --> 00:38:56,300
oh and so on but some people kind of

00:38:52,130 --> 00:38:58,840
don't want Iraq product they want

00:38:56,300 --> 00:39:05,140
something that can sit on the desk and

00:38:58,840 --> 00:39:09,590
just be a single developer 64-bit ARM

00:39:05,140 --> 00:39:14,530
developer solution and so today I'm

00:39:09,590 --> 00:39:17,180
announcing the launch of overdrive 1000

00:39:14,530 --> 00:39:18,950
it's right size for individual

00:39:17,180 --> 00:39:27,670
developers and I've got one here to show

00:39:18,950 --> 00:39:30,910
you there you go as Steve Jobs would say

00:39:27,670 --> 00:39:30,910
isn't it gorgeous

00:39:39,729 --> 00:39:51,289
what's in the box well it's a 64-bit ARM

00:39:45,459 --> 00:39:54,139
with four cortex a57 cores if you want

00:39:51,289 --> 00:39:56,839
more just just move on up to the

00:39:54,139 --> 00:40:01,639
overdrive 3000 but it's absolutely

00:39:56,839 --> 00:40:07,029
plenty for developing well what happened

00:40:01,639 --> 00:40:13,039
there that's what happened and he's got

00:40:07,029 --> 00:40:16,009
he's got some ddr4 ram eight gig

00:40:13,039 --> 00:40:19,909
expandable to 64 and a bunch of good

00:40:16,009 --> 00:40:22,579
stuff there also we ship it with lots of

00:40:19,909 --> 00:40:26,809
the tools that you use I guess bunch we

00:40:22,579 --> 00:40:29,209
use on a regular basis in the box from

00:40:26,809 --> 00:40:31,269
day one so you can plug and play and

00:40:29,209 --> 00:40:37,629
this is also shipping from the get go

00:40:31,269 --> 00:40:40,929
with openSUSE leap so for both of those

00:40:37,629 --> 00:40:43,549
we're pre installing them with leap

00:40:40,929 --> 00:40:46,879
really and I guess I'm preaching to the

00:40:43,549 --> 00:40:49,909
choir here but they have a really stable

00:40:46,879 --> 00:40:52,249
set of core packages vast opensuse

00:40:49,909 --> 00:40:54,619
ecosystem of third party packages and

00:40:52,249 --> 00:40:58,039
there's something more than that just in

00:40:54,619 --> 00:40:59,809
terms of the dynamics of the market what

00:40:58,039 --> 00:41:03,429
we're seeing is Suzy is showing real

00:40:59,809 --> 00:41:05,839
leadership in supporting 64-bit ARM and

00:41:03,429 --> 00:41:09,379
we certainly want to encourage that and

00:41:05,839 --> 00:41:12,199
we love working with those guys so how

00:41:09,379 --> 00:41:18,169
much is this all going to cost it's a

00:41:12,199 --> 00:41:23,179
proper a 64-bit server and you they're

00:41:18,169 --> 00:41:25,569
available to order from today for 599 US

00:41:23,179 --> 00:41:25,569
dollars

00:41:35,030 --> 00:41:43,290
but you can't have my shirt l box and

00:41:39,230 --> 00:41:46,260
these are available from the website it

00:41:43,290 --> 00:41:49,710
was going to be up and running and ready

00:41:46,260 --> 00:41:51,540
for taking orders but I guess events on

00:41:49,710 --> 00:41:53,610
the world stage may have intervened and

00:41:51,540 --> 00:41:58,860
distracted my colleagues back home and

00:41:53,610 --> 00:42:02,390
that certainly today you'll be able to

00:41:58,860 --> 00:42:08,990
place orders for that product switch on

00:42:02,390 --> 00:42:12,240
start work one of the problems in the

00:42:08,990 --> 00:42:15,480
64-bit ARM community is it's been kind

00:42:12,240 --> 00:42:18,600
of hard to get your tools ready to start

00:42:15,480 --> 00:42:22,170
work developing and you have to fiddle

00:42:18,600 --> 00:42:25,590
about with boards or or spend a lot of

00:42:22,170 --> 00:42:30,890
money or use an emulator for goodness

00:42:25,590 --> 00:42:34,320
sake running on x86 let's use a low-cost

00:42:30,890 --> 00:42:38,340
plug-and-play development environment

00:42:34,320 --> 00:42:41,010
here's a great thing about the arm v8

00:42:38,340 --> 00:42:43,320
spec if you used to working in with

00:42:41,010 --> 00:42:44,400
embedded arm for example you'll know

00:42:43,320 --> 00:42:47,400
that there can be a bit of a nightmare

00:42:44,400 --> 00:42:51,650
sometimes moving from one system to

00:42:47,400 --> 00:42:54,119
another the great thing about arm v8

00:42:51,650 --> 00:42:56,310
spec is it's consistent across the

00:42:54,119 --> 00:42:59,670
vendors what this means is that you can

00:42:56,310 --> 00:43:02,040
develop apps on a low-cost 64-bit ARM

00:42:59,670 --> 00:43:05,160
platform and you'll find coherence

00:43:02,040 --> 00:43:09,090
across all of the 64-bit RM servers at

00:43:05,160 --> 00:43:14,820
any scale and that's why it makes sense

00:43:09,090 --> 00:43:17,040
to have development box that will allow

00:43:14,820 --> 00:43:19,440
you to write code which will run across

00:43:17,040 --> 00:43:21,090
the range of vendors currently operating

00:43:19,440 --> 00:43:24,060
and hopefully in future operating in

00:43:21,090 --> 00:43:26,190
this space the emergence of convenient

00:43:24,060 --> 00:43:29,100
low-cost tools is an important step in

00:43:26,190 --> 00:43:34,770
the emergence of the enterprise class

00:43:29,100 --> 00:43:36,930
64-bit ecosystem so winning the arm race

00:43:34,770 --> 00:43:39,880
there isn't just one race there are many

00:43:36,930 --> 00:43:42,910
races it's all about work

00:43:39,880 --> 00:43:44,799
load optimization it's all about getting

00:43:42,910 --> 00:43:48,700
the right technology for the right

00:43:44,799 --> 00:43:51,460
problem one size doesn't fit all for the

00:43:48,700 --> 00:43:56,529
foreseeable future x86 and arm will

00:43:51,460 --> 00:43:59,259
coexist if I've sounded like I've been

00:43:56,529 --> 00:44:02,950
attacking x86 then you've misheard me

00:43:59,259 --> 00:44:06,369
x86 is an honourable technology with a

00:44:02,950 --> 00:44:08,440
great tradition but there's room for for

00:44:06,369 --> 00:44:12,099
innovation and there is room for

00:44:08,440 --> 00:44:14,440
diversification it's an exciting time to

00:44:12,099 --> 00:44:17,829
be an arm developer stuff is happening

00:44:14,440 --> 00:44:19,960
really quickly right now and I predict

00:44:17,829 --> 00:44:22,180
that that will accelerate over the next

00:44:19,960 --> 00:44:25,329
two or three years so let's get

00:44:22,180 --> 00:44:27,730
developing on new generation 64-bit ARM

00:44:25,329 --> 00:44:29,470
to figure out where at best delivers

00:44:27,730 --> 00:44:33,970
winning advantage come and join the

00:44:29,470 --> 00:44:36,640
bizarre be part of figuring out what a

00:44:33,970 --> 00:44:39,609
64-bit ARM can do better than anything

00:44:36,640 --> 00:44:42,190
else in the world be the guy who wins

00:44:39,609 --> 00:44:47,890
the race and ignore the critics who say

00:44:42,190 --> 00:44:52,660
that 64-bit ARM isn't going to make it

00:44:47,890 --> 00:44:55,180
because it isn't the other guy no 64-bit

00:44:52,660 --> 00:44:58,210
ARM is what it is it's a great

00:44:55,180 --> 00:45:00,009
technology with real strengths and real

00:44:58,210 --> 00:45:03,490
commercial advantages as well and the

00:45:00,009 --> 00:45:07,079
race has barely begun remember the

00:45:03,490 --> 00:45:07,079
tortoise thank

00:45:16,640 --> 00:45:26,280
does anyone have any questions i'm also

00:45:24,480 --> 00:45:28,520
very optimistic about the future of arm

00:45:26,280 --> 00:45:33,290
but i wanted to talk about another

00:45:28,520 --> 00:45:35,250
geopolitical issue most cpu

00:45:33,290 --> 00:45:39,330
manufacturers are recognizing your talk

00:45:35,250 --> 00:45:41,850
were us-based a couple of years ago the

00:45:39,330 --> 00:45:46,740
u.s. put a high-performance cpu embargo

00:45:41,850 --> 00:45:48,360
on china last week the world's most

00:45:46,740 --> 00:45:52,140
powerful supercomputer I think was

00:45:48,360 --> 00:45:55,140
announced as a mixed machine MIPS and

00:45:52,140 --> 00:45:59,060
arm are both very big players in China

00:45:55,140 --> 00:46:02,430
yeah do you think the US embargo on cpu

00:45:59,060 --> 00:46:05,160
i promisee views is having an effect on

00:46:02,430 --> 00:46:08,040
the chinese market and how do you see

00:46:05,160 --> 00:46:12,330
mips and arm competing for the Chinese

00:46:08,040 --> 00:46:17,250
cpu market okay well thanks for the

00:46:12,330 --> 00:46:19,560
question I may have sounded like an arm

00:46:17,250 --> 00:46:22,470
fanboy and I guess I am but I don't work

00:46:19,560 --> 00:46:27,270
for arm so nothing I say has carries any

00:46:22,470 --> 00:46:31,380
weight officially but um one of the one

00:46:27,270 --> 00:46:36,000
of the great things about the the arm

00:46:31,380 --> 00:46:41,520
model is that I mean arm has chinese

00:46:36,000 --> 00:46:46,140
licensees for example and now I've been

00:46:41,520 --> 00:46:47,820
in Asia just recently and tell you what

00:46:46,140 --> 00:46:50,070
it's getting a whole lot harder selling

00:46:47,820 --> 00:46:53,490
Western in fact it's really hard selling

00:46:50,070 --> 00:46:56,400
Western manufactured enterprise

00:46:53,490 --> 00:46:59,040
computing technology into Russia if I

00:46:56,400 --> 00:47:01,140
actually know I've been talking to

00:46:59,040 --> 00:47:03,690
people in Russia as well Russia and

00:47:01,140 --> 00:47:05,520
China for for all sorts of reasons that

00:47:03,690 --> 00:47:10,320
we don't have to go into but geopolitics

00:47:05,520 --> 00:47:12,900
is it basically and so the fact that

00:47:10,320 --> 00:47:16,140
we're seeing companies you know Chinese

00:47:12,900 --> 00:47:19,920
companies like hisilicon developing

00:47:16,140 --> 00:47:24,480
homegrown trusted arm-based

00:47:19,920 --> 00:47:30,090
and processors for homegrown trusted

00:47:24,480 --> 00:47:32,070
servers I think is going to drive arm or

00:47:30,090 --> 00:47:35,460
these give arm an opportunity which at

00:47:32,070 --> 00:47:38,610
which is currently being lost to some

00:47:35,460 --> 00:47:42,480
other alternatives and you know we've

00:47:38,610 --> 00:47:46,380
seen lenovo buying IBM server business

00:47:42,480 --> 00:47:49,950
and there's a kind of China fication of

00:47:46,380 --> 00:47:53,760
that for the whole market as well I'm

00:47:49,950 --> 00:47:57,390
probably not the right guy to to go into

00:47:53,760 --> 00:48:00,930
any detail about the relative strengths

00:47:57,390 --> 00:48:09,050
in that point of MIPS versus arm Andrew

00:48:00,930 --> 00:48:09,050
can do that after us any other questions

00:48:09,950 --> 00:48:32,370
no hands oh hi thank you for um if I

00:48:29,090 --> 00:48:36,540
would decide that I replaced the pcs in

00:48:32,370 --> 00:48:40,560
my house with OverDrive's 1000 the PCs

00:48:36,540 --> 00:48:43,560
already run leap so not use it as a

00:48:40,560 --> 00:48:51,860
server or a development machine use it

00:48:43,560 --> 00:48:54,780
as a PC would that work um well

00:48:51,860 --> 00:48:57,630
obviously there are there's a set of

00:48:54,780 --> 00:48:59,370
questions that judging by your shirt I'm

00:48:57,630 --> 00:49:04,830
guessing that most of what you run is

00:48:59,370 --> 00:49:08,010
open source right so obviously you have

00:49:04,830 --> 00:49:11,580
the application level question of has it

00:49:08,010 --> 00:49:18,120
has it been ported to to the arm

00:49:11,580 --> 00:49:22,460
platform yet at the moment it's I guess

00:49:18,120 --> 00:49:22,460
it's best as a development server and

00:49:23,940 --> 00:49:31,000
give us a few months but I mean hey try

00:49:29,380 --> 00:49:34,390
it and see I mean this is a sort of

00:49:31,000 --> 00:49:37,180
community that that we look to to to do

00:49:34,390 --> 00:49:39,420
the development work wear soft iron is

00:49:37,180 --> 00:49:42,220
is basically a business-to-business

00:49:39,420 --> 00:49:44,740
company we're not particularly focus all

00:49:42,220 --> 00:49:48,430
though we've got a nice cool handheld

00:49:44,740 --> 00:49:49,660
product we're not a B to C Company so

00:49:48,430 --> 00:49:51,970
that's not something that we've devoted

00:49:49,660 --> 00:50:02,470
a lot of effort to there's one over

00:49:51,970 --> 00:50:04,150
there going slightly deeper into that

00:50:02,470 --> 00:50:06,130
last question I just wanted to check

00:50:04,150 --> 00:50:08,050
have you reasonably tested any pci

00:50:06,130 --> 00:50:09,520
graphic cards on their system because I

00:50:08,050 --> 00:50:18,970
believe that sock does not have any

00:50:09,520 --> 00:50:21,520
built-in you know I I can't give you an

00:50:18,970 --> 00:50:23,770
update on exactly what we've tested and

00:50:21,520 --> 00:50:27,970
what we haven't there and it's a

00:50:23,770 --> 00:50:29,230
developer system but by all means come

00:50:27,970 --> 00:50:31,480
and talk to us about what you want to

00:50:29,230 --> 00:50:33,339
test and we'll we'll tell you I'm sorry

00:50:31,480 --> 00:50:44,920
I'm just the wrong guy to answer that

00:50:33,339 --> 00:50:48,280
question one of these strengths of arm

00:50:44,920 --> 00:50:49,990
has been that it's about licensing IP do

00:50:48,280 --> 00:50:53,380
we think we'll see a shift from say AMD

00:50:49,990 --> 00:50:57,640
in that direction said licensing x86 IP

00:50:53,380 --> 00:51:00,400
cores do I think we'll see a change in

00:50:57,640 --> 00:51:04,180
what so the strength of arm has been

00:51:00,400 --> 00:51:06,640
it's about licensing IP not physical

00:51:04,180 --> 00:51:08,980
silicon do you think we'll see that in

00:51:06,640 --> 00:51:11,950
the x86 market as well so bikes for AMD

00:51:08,980 --> 00:51:15,430
who are struggling severely licensing

00:51:11,950 --> 00:51:18,400
their core designs um

00:51:15,430 --> 00:51:20,109
but the option has always been there and

00:51:18,400 --> 00:51:23,530
I mean there used to be an awful lot

00:51:20,109 --> 00:51:29,410
more x86 licensees for example and the

00:51:23,530 --> 00:51:31,720
number has reduced and reduced I think

00:51:29,410 --> 00:51:34,770
how things play out over the next two or

00:51:31,720 --> 00:51:37,690
three years within the 64-bit ARM space

00:51:34,770 --> 00:51:40,329
might be a factor that affects decision

00:51:37,690 --> 00:51:43,950
making for people in the x86 community

00:51:40,329 --> 00:51:49,510
to think about the next move and I'm I'm

00:51:43,950 --> 00:51:51,790
eager to see how that plays out no more

00:51:49,510 --> 00:52:03,040
business related question do we get

00:51:51,790 --> 00:52:04,900
discount for bulk buy well there's

00:52:03,040 --> 00:52:10,990
always a conversation to be had isn't

00:52:04,900 --> 00:52:15,069
there yeah I mean it always depends how

00:52:10,990 --> 00:52:19,450
bulky the bulk is but i'm i'm a Scotsman

00:52:15,069 --> 00:52:22,660
and I like to cut a cut a good deal so

00:52:19,450 --> 00:52:26,770
come and talk about it I'm gonna have to

00:52:22,660 --> 00:52:28,809
head off towards the the early part of

00:52:26,770 --> 00:52:31,480
the afternoon but my colleague at the

00:52:28,809 --> 00:52:34,420
back who's just about to stand up would

00:52:31,480 --> 00:52:43,299
be happy to field those kinds of

00:52:34,420 --> 00:52:45,730
questions yeah okay so I'm right now

00:52:43,299 --> 00:52:48,760
browsing your website and trying to find

00:52:45,730 --> 00:52:51,609
a way how to buy it and it's not in your

00:52:48,760 --> 00:52:55,150
shop yet I guess it will be there

00:52:51,609 --> 00:52:59,319
tomorrow or when we can start putting

00:52:55,150 --> 00:53:01,210
orders in the guy behind you can answer

00:52:59,319 --> 00:53:04,720
that question because he's been checking

00:53:01,210 --> 00:53:06,920
while I've been talking I'm sorry

00:53:04,720 --> 00:53:12,950
yeah it'll be later on today so probably

00:53:06,920 --> 00:53:16,310
about 5 p.m. today thanks okay i want to

00:53:12,950 --> 00:53:20,260
thank you Norman for coming in coming to

00:53:16,310 --> 00:53:20,260

YouTube URL: https://www.youtube.com/watch?v=Ftl9VAKjqyo


