Title: Markus Kramer: BitTorrent Peer-to-peer controlled by Salt
Publication date: 2016-06-26
Playlist: openSUSE Conference 2016
Description: 
	https://media.ccc.de/v/880-bittorrent-peer-to-peer-controlled-by-salt

Our task is to distribute software to Windows clients. Our network contains slow links and relay-servers, which must be staged up. 
Our goals are 1) reduce WAN traffic, 2) allow unlimited size, 3) allow unlimited number of clients in one rollout, and 4) start rollout without delay.

  Idea :: 
BitTorrent Peer-to-peer (P2P) reduces WAN traffic because if prefers local content over remote content. Beneficially for the concept, all clients are centrally configured: no peer can be a leach. Clients  act as a storage resource for other clients, eliminating the need for relay servers.

 Realization ::
We found that Salt manages a BitTorrent agent nicely with Salt-states.

  Experience/Result  ::
We have continuously distributed 2 GB per day to up to 50 Minions for over 2 months. Clients and network are undisturbed, while a Salt-Master on a regular desktop administers 50 Minions effortlessly. We fully meet all of our goals. We observe an increasing and by now high reliability with P2P and Salt (in this order), but glitches still occur in both domains.

  Live Demo  ::
How to distribute 500 MB, present at 4 clients, to 8 more clients?
During transmission, we will stop the P2P service on some of these 8 clients via salt and then start it again, to simulate clients going temporarily offline. 

  Next Steps ::
Making Minions 'more active'. Activating and deactivating the P2P service on demand. 

Markus Kramer
Captions: 
	00:00:07,690 --> 00:00:18,050
can you turn down the light a little

00:00:10,070 --> 00:00:24,890
please perfect so hello everybody my

00:00:18,050 --> 00:00:28,130
name is Marcus um can best reach me by

00:00:24,890 --> 00:00:30,820
email I have to think about github for

00:00:28,130 --> 00:00:38,000
another two months and so forth and

00:00:30,820 --> 00:00:39,829
Twitter or all these things I work for a

00:00:38,000 --> 00:00:43,520
big company whose name I won't mention

00:00:39,829 --> 00:00:48,410
in the recording you can ask me that is

00:00:43,520 --> 00:00:54,170
and I started about a year ago to

00:00:48,410 --> 00:00:57,290
convince my superiors to endure the

00:00:54,170 --> 00:01:01,540
possibility to distribute software not

00:00:57,290 --> 00:01:04,239
the way we've done it before or we do it

00:01:01,540 --> 00:01:09,170
we've done it before but by using

00:01:04,239 --> 00:01:12,649
peer-to-peer technology so this was

00:01:09,170 --> 00:01:15,619
granted and since then I learned how to

00:01:12,649 --> 00:01:20,450
combine to you to peer with salt and I

00:01:15,619 --> 00:01:23,479
hope to find your attention speaking of

00:01:20,450 --> 00:01:28,279
you who has used salt for more than half

00:01:23,479 --> 00:01:33,590
a year regularly this is about 5 out of

00:01:28,279 --> 00:01:37,819
12 35 out of I think it's about 10 let's

00:01:33,590 --> 00:01:40,789
say it's 14 so 12 let's say 12 is 10

00:01:37,819 --> 00:01:42,920
 for people have used it for more

00:01:40,789 --> 00:01:48,709
heart than half a year so half of you

00:01:42,920 --> 00:01:54,459
are not really deep Salter's who a few

00:01:48,709 --> 00:01:58,369
uses more than 50 minions one thank you

00:01:54,459 --> 00:02:02,209
are your minions to are your minions

00:01:58,369 --> 00:02:04,700
agent or agent less a agents they have

00:02:02,209 --> 00:02:08,810
agents they have agents and who uses an

00:02:04,700 --> 00:02:13,459
agent less minions or age salt SSH or

00:02:08,810 --> 00:02:20,150
something yeah nearly two okay i don't

00:02:13,459 --> 00:02:20,930
so you are aware what are those of you

00:02:20,150 --> 00:02:23,209
who you saw

00:02:20,930 --> 00:02:24,709
world you are aware of the execution

00:02:23,209 --> 00:02:29,209
modules how to write some of course

00:02:24,709 --> 00:02:33,170
we've seen it today perfect who has

00:02:29,209 --> 00:02:37,310
actually windows minions this is exactly

00:02:33,170 --> 00:02:44,299
one person I knew it so here I stopped

00:02:37,310 --> 00:02:47,030
so most of you use salt for a UNIX I'm i

00:02:44,299 --> 00:02:53,480
don't i have it only on the swordmaster

00:02:47,030 --> 00:02:56,720
and it works good there are strange

00:02:53,480 --> 00:02:59,930
things which are they are always strange

00:02:56,720 --> 00:03:02,870
things it works so salt works on windows

00:02:59,930 --> 00:03:06,799
so you should try it who use a salt for

00:03:02,870 --> 00:03:09,919
the her an apple minion again one person

00:03:06,799 --> 00:03:14,750
okay who a few uses this is just for

00:03:09,919 --> 00:03:17,989
curiosity who has used rate so far right

00:03:14,750 --> 00:03:22,280
exactly nobody me neither I haven't used

00:03:17,989 --> 00:03:26,599
right so far on one of the slides I will

00:03:22,280 --> 00:03:28,669
come back to the right question so as i

00:03:26,599 --> 00:03:31,430
said i distribute software who of you

00:03:28,669 --> 00:03:37,129
distribute software to end-user

00:03:31,430 --> 00:03:46,430
workstations or laptops kind of to kind

00:03:37,129 --> 00:03:53,599
of three retail what does it mean what a

00:03:46,430 --> 00:03:56,019
point of sales or okay yeah yeah i see

00:03:53,599 --> 00:03:59,150
well yes it's also and how big is your

00:03:56,019 --> 00:04:04,669
the software library you have to deploy

00:03:59,150 --> 00:04:06,259
like hundreds of megabytes yeah not too

00:04:04,669 --> 00:04:12,620
big not not exaggerated not

00:04:06,259 --> 00:04:15,409
exaggeratedly big well i can just talk

00:04:12,620 --> 00:04:17,690
for for our customers we have requests

00:04:15,409 --> 00:04:20,259
for distributing large files like videos

00:04:17,690 --> 00:04:22,880
for the right digital signage or

00:04:20,259 --> 00:04:25,849
pricelist updates or so so yeah we have

00:04:22,880 --> 00:04:31,039
that request so far we haven't solved it

00:04:25,849 --> 00:04:33,050
with salt yet but we could okay the big

00:04:31,039 --> 00:04:34,300
files in fact this talk is about big

00:04:33,050 --> 00:04:37,250
files

00:04:34,300 --> 00:04:39,920
also this talk is about that we in this

00:04:37,250 --> 00:04:45,380
company we have a very distributed in in

00:04:39,920 --> 00:04:50,720
the last parts of Germany and outside of

00:04:45,380 --> 00:04:54,710
Germany mostly Germany and problems with

00:04:50,720 --> 00:04:58,280
this large distribution is that many

00:04:54,710 --> 00:05:02,360
many of these networks are weak so when

00:04:58,280 --> 00:05:04,070
you are working in data centers or I

00:05:02,360 --> 00:05:07,610
haven't asked who a few works in a data

00:05:04,070 --> 00:05:12,610
center then again only one piece in a

00:05:07,610 --> 00:05:16,250
person okay good so I have to live with

00:05:12,610 --> 00:05:19,910
networks which are as bad as 10 megabits

00:05:16,250 --> 00:05:22,210
per seconds or even worse and they are

00:05:19,910 --> 00:05:25,820
not really reliable and many many people

00:05:22,210 --> 00:05:29,300
need these slow connections so most of

00:05:25,820 --> 00:05:33,560
the time the networks are extremely full

00:05:29,300 --> 00:05:36,200
and then we need to distribute big

00:05:33,560 --> 00:05:38,990
software and this obviously is a problem

00:05:36,200 --> 00:05:42,170
the fun part is also some of these very

00:05:38,990 --> 00:05:46,970
bad locations shut down at night so you

00:05:42,170 --> 00:05:49,940
cannot transfer it over night and all

00:05:46,970 --> 00:05:56,300
silly things happened including sending

00:05:49,940 --> 00:05:59,900
USB sticks before yeah very recently

00:05:56,300 --> 00:06:05,330
like yesterday there are now seven

00:05:59,900 --> 00:06:14,720
hundred minions running so this is a

00:06:05,330 --> 00:06:16,910
current situation this is a currency I

00:06:14,720 --> 00:06:22,160
wanted to show my wonderful t-shirt so I

00:06:16,910 --> 00:06:25,700
stood here and so this is the situation

00:06:22,160 --> 00:06:27,950
for the customer he is aware that

00:06:25,700 --> 00:06:30,260
whenever he has a new software he will

00:06:27,950 --> 00:06:33,560
wait for one day because we have to set

00:06:30,260 --> 00:06:37,160
up the mirrors numerous meaning servers

00:06:33,560 --> 00:06:41,300
copies of the copies of the repository

00:06:37,160 --> 00:06:44,480
spread out when we think outside of

00:06:41,300 --> 00:06:46,820
Germany they are around a thousand

00:06:44,480 --> 00:06:50,310
mirrors

00:06:46,820 --> 00:06:52,350
then if it's a big software he's other

00:06:50,310 --> 00:06:54,720
customers used to wait four or five

00:06:52,350 --> 00:06:57,810
weeks big customer by big software

00:06:54,720 --> 00:07:01,950
starts at two hundred megabyte he's also

00:06:57,810 --> 00:07:04,230
used to pay if it has to be quicker and

00:07:01,950 --> 00:07:07,710
he's also used to pay if it's bigger

00:07:04,230 --> 00:07:10,680
than one gigabyte and really pay a lot

00:07:07,710 --> 00:07:13,050
generally you cannot transfer with the

00:07:10,680 --> 00:07:21,020
current system software which is bigger

00:07:13,050 --> 00:07:24,930
than one gigabyte which happens what I

00:07:21,020 --> 00:07:27,210
want to achieve is to get rid of all the

00:07:24,930 --> 00:07:30,780
mirrors if the software is already at

00:07:27,210 --> 00:07:35,930
some work stations it's enough to

00:07:30,780 --> 00:07:40,110
transfer it from there I don't have a I

00:07:35,930 --> 00:07:43,080
can walk so if it's already on one

00:07:40,110 --> 00:07:47,840
client it's enough to copy it to the

00:07:43,080 --> 00:07:50,490
others this should be one location and

00:07:47,840 --> 00:07:53,430
we don't well no longer want to

00:07:50,490 --> 00:07:55,680
distribute the same thing four times to

00:07:53,430 --> 00:07:57,960
4 workstations in a location it should

00:07:55,680 --> 00:08:01,290
be enough to transfer it once and have

00:07:57,960 --> 00:08:03,479
the location find the optimum and if

00:08:01,290 --> 00:08:07,200
that location is in fact nearer to

00:08:03,479 --> 00:08:08,700
another location the second one should

00:08:07,200 --> 00:08:13,910
not even ask for the central repository

00:08:08,700 --> 00:08:18,810
which could be more distant network wise

00:08:13,910 --> 00:08:25,560
so that's the idea and as Sloane I

00:08:18,810 --> 00:08:29,070
thought here we treat software FF if is

00:08:25,560 --> 00:08:33,690
it if it would be if it's as if it would

00:08:29,070 --> 00:08:36,390
be a material like gold or metal we

00:08:33,690 --> 00:08:38,940
would have to transport each time from a

00:08:36,390 --> 00:08:41,760
warehouse to the destination whereas

00:08:38,940 --> 00:08:47,670
software really is information which can

00:08:41,760 --> 00:08:51,270
be read transmitted once i have it i do

00:08:47,670 --> 00:08:53,670
this so explicit because it's it's not

00:08:51,270 --> 00:08:56,280
very complicated but we have a very deep

00:08:53,670 --> 00:08:59,170
mindset about how to distribute software

00:08:56,280 --> 00:09:02,840
and in fact i think all of you

00:08:59,170 --> 00:09:06,650
today I learned about Steph I'm not sure

00:09:02,840 --> 00:09:11,060
how SEF works or theft notes works but

00:09:06,650 --> 00:09:14,150
maybe we can you can tell me what I hear

00:09:11,060 --> 00:09:17,900
have is distributed database kind of a

00:09:14,150 --> 00:09:20,330
repository a distributed repository of

00:09:17,900 --> 00:09:24,230
software and let's assume I only one the

00:09:20,330 --> 00:09:27,640
same software then I don't need it to

00:09:24,230 --> 00:09:30,890
copy it again from the original source

00:09:27,640 --> 00:09:32,990
there is this one very good software

00:09:30,890 --> 00:09:36,770
already invented which is called

00:09:32,990 --> 00:09:40,850
peer-to-peer BitTorrent protocol which

00:09:36,770 --> 00:09:45,020
has been adopted by this was a Dutch

00:09:40,850 --> 00:09:48,370
company doing it in 2008 and they had

00:09:45,020 --> 00:09:51,560
around 7000 workstation in that

00:09:48,370 --> 00:09:55,910
University which earlier they needed

00:09:51,560 --> 00:09:59,200
four days to distribute and install all

00:09:55,910 --> 00:10:02,029
of them and with a peer-to-peer approach

00:09:59,200 --> 00:10:03,980
you can get rid of all these 20 mirrors

00:10:02,029 --> 00:10:08,000
they called them distribution service

00:10:03,980 --> 00:10:10,550
and do it in four hours nice success and

00:10:08,000 --> 00:10:14,589
somehow this company then bankrupt it or

00:10:10,550 --> 00:10:17,780
defaulted as I sink it's in English

00:10:14,589 --> 00:10:21,290
twitter has published that they can now

00:10:17,780 --> 00:10:24,790
update their worldwide 10,000 servers in

00:10:21,290 --> 00:10:28,670
12 second in no longer in 15 minutes

00:10:24,790 --> 00:10:31,460
respir technology good facebook same

00:10:28,670 --> 00:10:33,980
thing incredibly one minutes for a

00:10:31,460 --> 00:10:36,170
worldwide distribution of software you

00:10:33,980 --> 00:10:41,150
could not possibly send the same thing

00:10:36,170 --> 00:10:43,250
10,000 times from one location this is

00:10:41,150 --> 00:10:46,910
all good news and it is an established

00:10:43,250 --> 00:10:50,180
technology and the question is why only

00:10:46,910 --> 00:10:54,620
Microsoft continues so why is Microsoft

00:10:50,180 --> 00:10:57,220
better than the rest of the world do you

00:10:54,620 --> 00:11:00,220
have any idea or can you suggest me any

00:10:57,220 --> 00:11:00,220
yes

00:11:06,079 --> 00:11:10,800
fights have problems with using

00:11:08,550 --> 00:11:14,959
peer-to-peer technology due to firewalls

00:11:10,800 --> 00:11:20,009
and monitoring of viral behavior and

00:11:14,959 --> 00:11:23,120
this leads admins or policies sites to

00:11:20,009 --> 00:11:26,220
be very fearful of BitTorrent

00:11:23,120 --> 00:11:29,730
particularly in academic circles there's

00:11:26,220 --> 00:11:30,930
a very deep distrust of PhD students and

00:11:29,730 --> 00:11:38,129
what they might be doing with bittorrent

00:11:30,930 --> 00:11:41,759
uh-huh okay yes interesting good then

00:11:38,129 --> 00:11:46,189
one has to take that into account in

00:11:41,759 --> 00:11:49,620
fact that's a valid answer thank you

00:11:46,189 --> 00:11:54,620
lucky for luckily for me no firewall so

00:11:49,620 --> 00:11:58,459
far in the world of that company has any

00:11:54,620 --> 00:12:07,499
objections against peer-to-peer traffic

00:11:58,459 --> 00:12:11,430
and yeah let's continue I will give a

00:12:07,499 --> 00:12:15,259
live demo now but I let you choose first

00:12:11,430 --> 00:12:19,019
to see the live demo how I did are the

00:12:15,259 --> 00:12:21,089
implementation or the integration of

00:12:19,019 --> 00:12:24,350
peer-to-peer with salt what what do you

00:12:21,089 --> 00:12:30,000
want to see first the demo are the

00:12:24,350 --> 00:12:33,420
theory who is for demo and Ruth for Siri

00:12:30,000 --> 00:12:36,420
more yes I I knew I anticipated that

00:12:33,420 --> 00:12:40,920
that's because and so the theory slides

00:12:36,420 --> 00:12:45,029
are in front of the live demo so we've

00:12:40,920 --> 00:12:50,040
seen some yamel before again this is

00:12:45,029 --> 00:12:53,550
llamo in the top file I choose the top

00:12:50,040 --> 00:12:55,769
file because once I had the Pisan which

00:12:53,550 --> 00:12:58,019
I show you on slides three it was the

00:12:55,769 --> 00:13:01,350
most easiest to put it into the top file

00:12:58,019 --> 00:13:04,410
maybe you could write a state module but

00:13:01,350 --> 00:13:05,699
as I'm just a simple mind it top file

00:13:04,410 --> 00:13:08,429
works and you

00:13:05,699 --> 00:13:11,429
we you can tell me it's better to put it

00:13:08,429 --> 00:13:14,549
into a state so what you see here is we

00:13:11,429 --> 00:13:16,109
have the base configuration a particular

00:13:14,549 --> 00:13:22,889
machine and this is of course a long

00:13:16,109 --> 00:13:25,410
list of machines we scrapped every

00:13:22,889 --> 00:13:31,109
peer-to-peer file or a peer-to-peer

00:13:25,410 --> 00:13:36,209
payload accept a no in fact I first give

00:13:31,109 --> 00:13:39,359
the commanders to delete every payload

00:13:36,209 --> 00:13:41,429
which isn't on the list which I will

00:13:39,359 --> 00:13:44,749
show you shortly and then I will put two

00:13:41,429 --> 00:13:47,910
payloads on that machine this is how the

00:13:44,749 --> 00:13:50,549
the top file looks first delete

00:13:47,910 --> 00:13:53,730
everything and then or make sure only

00:13:50,549 --> 00:13:57,509
these two file which are named in that

00:13:53,730 --> 00:14:00,869
state exists and then put these twos

00:13:57,509 --> 00:14:05,239
these two what does it mean let's have a

00:14:00,869 --> 00:14:09,029
look when I say delete everything except

00:14:05,239 --> 00:14:12,239
these ones for that machine I have a PT

00:14:09,029 --> 00:14:13,949
pure function which does exactly the

00:14:12,239 --> 00:14:17,160
same it deletes everything which is

00:14:13,949 --> 00:14:20,220
which is not on that list the idea is at

00:14:17,160 --> 00:14:21,660
one day I could even send I could

00:14:20,220 --> 00:14:25,289
shorten the list and then that would be

00:14:21,660 --> 00:14:27,569
deleted so I don't tell what has to be

00:14:25,289 --> 00:14:30,689
deleted i tell what has to be there

00:14:27,569 --> 00:14:33,749
which is i don't want to say it

00:14:30,689 --> 00:14:39,259
idempotent what we've heard idempotent

00:14:33,749 --> 00:14:39,259
so often today the idea of item potent

00:14:40,039 --> 00:14:47,699
then when i want to say that this

00:14:42,989 --> 00:14:49,739
particular fire or payload in this case

00:14:47,699 --> 00:14:53,069
it's five but it could also be a

00:14:49,739 --> 00:14:55,859
directory need to be transferred by

00:14:53,069 --> 00:14:58,379
peer-to-peer i need to give three more

00:14:55,859 --> 00:15:00,019
informations apart from the name or I

00:14:58,379 --> 00:15:05,519
give two I have to give three

00:15:00,019 --> 00:15:09,109
information the name of the thing the

00:15:05,519 --> 00:15:13,470
info hash which is the md5 checksum and

00:15:09,109 --> 00:15:15,050
all the IP of the other clients which

00:15:13,470 --> 00:15:19,640
already have it or ours

00:15:15,050 --> 00:15:21,589
to have it they may not be they may not

00:15:19,640 --> 00:15:24,350
have it completely it's enough if they

00:15:21,589 --> 00:15:28,880
have a part of it and then puter peers

00:15:24,350 --> 00:15:34,000
smart enough to get what you need so

00:15:28,880 --> 00:15:38,050
this is a question so far no good and

00:15:34,000 --> 00:15:45,399
then simply you have to implement the

00:15:38,050 --> 00:15:50,360
the Pythons functions here you call any

00:15:45,399 --> 00:15:58,339
beauty pure library you want this works

00:15:50,360 --> 00:16:01,970
very good and i also found it elegant

00:15:58,339 --> 00:16:04,730
that these functions instantly return so

00:16:01,970 --> 00:16:07,160
it's not this command does not keep on

00:16:04,730 --> 00:16:09,589
running as long as it's not finished it

00:16:07,160 --> 00:16:11,779
instantly returns with the percentage or

00:16:09,589 --> 00:16:16,930
with an error so all these functions

00:16:11,779 --> 00:16:16,930
instantly returned I found this useful

00:16:19,000 --> 00:16:34,760
so now let's switch to the demo I have a

00:16:25,630 --> 00:16:40,089
web interface and I have the unix shell

00:16:34,760 --> 00:16:44,270
on my master where a kind of a loop runs

00:16:40,089 --> 00:16:48,860
which I call dispatcher so let's insert

00:16:44,270 --> 00:16:54,890
so this this payload which is 500

00:16:48,860 --> 00:16:59,360
megabyte of static nonsens just 500

00:16:54,890 --> 00:17:01,279
megabyte data let's add four or five

00:16:59,360 --> 00:17:05,530
more clients to these surtees which

00:17:01,279 --> 00:17:09,650
already have it I have to choose ed and

00:17:05,530 --> 00:17:12,800
now these five clients have been added

00:17:09,650 --> 00:17:17,750
as you see in the same moment something

00:17:12,800 --> 00:17:21,079
happens and salt is called with the list

00:17:17,750 --> 00:17:23,949
of these minions and execute a high

00:17:21,079 --> 00:17:27,199
state why a high state because I have

00:17:23,949 --> 00:17:31,789
manipulated the top file so

00:17:27,199 --> 00:17:37,480
the top file tells just one thing it has

00:17:31,789 --> 00:17:42,490
only one purpose to distribute files i

00:17:37,480 --> 00:17:47,870
create the top file and the state's

00:17:42,490 --> 00:17:50,330
dynamically so this routine here creates

00:17:47,870 --> 00:17:56,120
the top file dynamically maybe that's

00:17:50,330 --> 00:17:59,870
very silly but it works so every 30

00:17:56,120 --> 00:18:02,090
second the command is executed again so

00:17:59,870 --> 00:18:05,299
the first time execute it will just

00:18:02,090 --> 00:18:09,309
report us that it has received for the

00:18:05,299 --> 00:18:16,210
first time nothing has been distributed

00:18:09,309 --> 00:18:19,190
of course oh now we have a very mmm I

00:18:16,210 --> 00:18:20,899
didn't thought I will I can make that a

00:18:19,190 --> 00:18:28,100
little bit smaller without hurting your

00:18:20,899 --> 00:18:34,510
eyes I think so let's put that on change

00:18:28,100 --> 00:18:43,669
settings appearance a little bit smaller

00:18:34,510 --> 00:18:47,809
it's good so what we see here is that

00:18:43,669 --> 00:18:52,100
these files have been edit and what you

00:18:47,809 --> 00:18:54,649
see here is an error they shouldn't have

00:18:52,100 --> 00:18:59,090
been they should not been edited more

00:18:54,649 --> 00:19:02,720
than once so i apologize i stop this

00:18:59,090 --> 00:19:06,529
loop and i have to manually create

00:19:02,720 --> 00:19:09,799
payload and the top file again i don't

00:19:06,529 --> 00:19:18,230
know why that happens and continue with

00:19:09,799 --> 00:19:23,120
my stupid lube beauty of live demo so

00:19:18,230 --> 00:19:26,750
what we what we do it for from a salt

00:19:23,120 --> 00:19:29,649
perspective is issuing high state and if

00:19:26,750 --> 00:19:32,929
if we have set up a top file and all the

00:19:29,649 --> 00:19:37,610
sls correctly which we in this case

00:19:32,929 --> 00:19:39,980
didn't then it's been done just by

00:19:37,610 --> 00:19:42,080
calling the high state

00:19:39,980 --> 00:19:47,600
so in the background all these minions

00:19:42,080 --> 00:19:52,160
have been are trying to reach it each

00:19:47,600 --> 00:19:58,400
other 30 of them already have in that

00:19:52,160 --> 00:20:06,250
list that list of ips here includes of

00:19:58,400 --> 00:20:09,679
course the 30 minions which already have

00:20:06,250 --> 00:20:16,040
the files and they are being contacted

00:20:09,679 --> 00:20:22,970
by the newcomers and so they exchanged

00:20:16,040 --> 00:20:25,720
these files so including that glitch the

00:20:22,970 --> 00:20:28,610
systems were the since the system works

00:20:25,720 --> 00:20:31,549
reliably I see so we have in fact

00:20:28,610 --> 00:20:36,350
distributed a number of customer

00:20:31,549 --> 00:20:40,040
software with it so what's not called

00:20:36,350 --> 00:20:45,049
static really is client data so we

00:20:40,040 --> 00:20:53,000
distribute mainly this software this

00:20:45,049 --> 00:20:57,100
means GGO maps maps are big so these

00:20:53,000 --> 00:21:00,140
things are bigger than 10 gigabyte and

00:20:57,100 --> 00:21:03,380
either they are transferred with a USB

00:21:00,140 --> 00:21:08,660
sticks or with this system so this is

00:21:03,380 --> 00:21:11,210
preferable now we can admire the

00:21:08,660 --> 00:21:16,400
velocity it's it's not a very high

00:21:11,210 --> 00:21:23,720
velocity I have choosen a very low

00:21:16,400 --> 00:21:25,820
transport rate for security reasons but

00:21:23,720 --> 00:21:28,100
what I what I found is that the

00:21:25,820 --> 00:21:36,169
peer-to-peer technology ones it can pass

00:21:28,100 --> 00:21:38,870
the firewall works very reliably so this

00:21:36,169 --> 00:21:41,090
so much for the live demo you have now

00:21:38,870 --> 00:21:43,730
also seen the two commands which need to

00:21:41,090 --> 00:21:46,100
be executed which in fact isn't bad i

00:21:43,730 --> 00:21:48,740
should have shown them anyhow first the

00:21:46,100 --> 00:21:52,120
payload sls the state file must be

00:21:48,740 --> 00:21:57,040
created and the top file

00:21:52,120 --> 00:22:09,190
must be kept actual somehow I wrote

00:21:57,040 --> 00:22:13,470
something bad lifetime so we can wait

00:22:09,190 --> 00:22:19,140
for the numbers to come to a hundred or

00:22:13,470 --> 00:22:19,140
you can believe me I won't even ask you

00:22:21,480 --> 00:22:29,950
what I've done for you is to execute a

00:22:27,010 --> 00:22:31,840
command that thing that puts all the

00:22:29,950 --> 00:22:34,180
necessary software for the peer-to-peer

00:22:31,840 --> 00:22:38,170
client on the minions I measured how

00:22:34,180 --> 00:22:43,200
long it takes to verify that all exists

00:22:38,170 --> 00:22:47,830
and it's about three seconds so for all

00:22:43,200 --> 00:22:52,240
attached minions the response of is my

00:22:47,830 --> 00:22:56,200
client update it takes three seconds in

00:22:52,240 --> 00:23:00,160
on average it even goes now it takes

00:22:56,200 --> 00:23:04,210
sorry 14 seconds on average but the best

00:23:00,160 --> 00:23:07,060
time is three seconds these are the

00:23:04,210 --> 00:23:09,790
three second which is best it has a good

00:23:07,060 --> 00:23:12,400
average of 15 seconds i'm happy with 15

00:23:09,790 --> 00:23:15,040
seconds and then all these minions which

00:23:12,400 --> 00:23:20,110
are late they may be late for a reason i

00:23:15,040 --> 00:23:25,420
don't care but this was the day when i

00:23:20,110 --> 00:23:27,610
was very happy so i had 70 clients they

00:23:25,420 --> 00:23:30,210
were all up they were all responding to

00:23:27,610 --> 00:23:34,240
me in seven in 15 seconds on average

00:23:30,210 --> 00:23:38,500
life was good in fact even the more

00:23:34,240 --> 00:23:41,350
minions the less time in on average it

00:23:38,500 --> 00:23:47,670
took so i thought wow salt is really

00:23:41,350 --> 00:23:53,050
scaling I'm excited man then yesterday

00:23:47,670 --> 00:23:59,410
the 700 minions came and I very and in

00:23:53,050 --> 00:24:02,920
short time continued the diagram so here

00:23:59,410 --> 00:24:05,350
are the 70 which which we just saw and

00:24:02,920 --> 00:24:09,309
what I would have hoped

00:24:05,350 --> 00:24:12,520
was it continues our very great average

00:24:09,309 --> 00:24:15,600
of 15 second it did not so for some

00:24:12,520 --> 00:24:20,789
reason which I'm not able to find out

00:24:15,600 --> 00:24:25,270
since yesterday it now takes a high

00:24:20,789 --> 00:24:30,870
amount of time the more minions I use or

00:24:25,270 --> 00:24:35,770
III i probe in fact I have a very steep

00:24:30,870 --> 00:24:39,370
slope now I had only two seconds to ask

00:24:35,770 --> 00:24:41,500
Tom why that is and he just asked me

00:24:39,370 --> 00:24:47,740
which version i'm using a rather old

00:24:41,500 --> 00:24:51,130
version of salt at 2015 dot five and he

00:24:47,740 --> 00:24:54,730
suggested to use a version which where

00:24:51,130 --> 00:24:56,830
this behavior is known and fixed I will

00:24:54,730 --> 00:25:00,400
do that but I wanted also at this

00:24:56,830 --> 00:25:05,200
occasion to ask you have you experienced

00:25:00,400 --> 00:25:07,890
you all see that your minions return

00:25:05,200 --> 00:25:11,440
very very fast and some of them slower

00:25:07,890 --> 00:25:17,100
have you seen something like this before

00:25:11,440 --> 00:25:23,669
or do you see no growth in response time

00:25:17,100 --> 00:25:26,350
with higher numbers of minions Joe again

00:25:23,669 --> 00:25:28,870
yeah there's no easy answer you have to

00:25:26,350 --> 00:25:31,600
really look at different kinds of

00:25:28,870 --> 00:25:33,490
problems so if you run out of memory on

00:25:31,600 --> 00:25:35,289
the server for example this can easily

00:25:33,490 --> 00:25:37,720
explain those things if your machine

00:25:35,289 --> 00:25:41,559
start swapping out for example or if

00:25:37,720 --> 00:25:44,409
your network gets so saturated that the

00:25:41,559 --> 00:25:46,120
server thinks I'm confronted with the

00:25:44,409 --> 00:25:52,000
soup flood and and you know some of the

00:25:46,120 --> 00:25:55,630
protection yes in good good answers and

00:25:52,000 --> 00:25:57,490
what you can always do is patching so if

00:25:55,630 --> 00:26:00,159
you just switch on batching and do 10 at

00:25:57,490 --> 00:26:01,960
a time or 50 at a time you won't have

00:26:00,159 --> 00:26:04,360
the instantaneous anymore but you will

00:26:01,960 --> 00:26:06,909
be sure that those patches if the server

00:26:04,360 --> 00:26:09,789
can handle 50 it will handle a hundred

00:26:06,909 --> 00:26:16,619
and a thousand it run chest to impact 50

00:26:09,789 --> 00:26:20,219
50 50 50 Oh David

00:26:16,619 --> 00:26:23,109
yeah slow could handle 700 very easily

00:26:20,219 --> 00:26:27,009
there's like you like Joey's saying

00:26:23,109 --> 00:26:28,839
there's we starting into the you know

00:26:27,009 --> 00:26:31,599
thousands there's a few things to look

00:26:28,839 --> 00:26:35,079
at one jury on your the performance of

00:26:31,599 --> 00:26:38,309
your master you know if you're going to

00:26:35,079 --> 00:26:41,339
smaller server with a gigabyte of RAM

00:26:38,309 --> 00:26:45,909
you know you might have to bump that up

00:26:41,339 --> 00:26:48,159
there's a lot of settings in your master

00:26:45,909 --> 00:26:49,869
config file or you can tune it to deal

00:26:48,159 --> 00:26:53,529
with large amount of masters and the

00:26:49,869 --> 00:26:55,989
type of thing and I've worked with a lot

00:26:53,529 --> 00:26:57,849
of customers sites we're having four or

00:26:55,989 --> 00:27:02,589
five thousand servers is really quite

00:26:57,849 --> 00:27:05,229
simple good so yeah sometimes should be

00:27:02,589 --> 00:27:08,319
fine in fact so take this as a mistake i

00:27:05,229 --> 00:27:11,739
made but i would share i would like to

00:27:08,319 --> 00:27:15,819
share and the findings again so in some

00:27:11,739 --> 00:27:17,889
form of community and say okay these the

00:27:15,819 --> 00:27:20,409
better results then should be published

00:27:17,889 --> 00:27:23,829
and we should think of a way how to do

00:27:20,409 --> 00:27:27,579
that and also if you see that look at

00:27:23,829 --> 00:27:31,359
that so some kind of how you recognize a

00:27:27,579 --> 00:27:33,009
problem and how you resolve it but in

00:27:31,359 --> 00:27:36,159
fact I I would expect that we can

00:27:33,009 --> 00:27:43,109
continue unto a hundred minions without

00:27:36,159 --> 00:27:46,709
any slope in response time thank you on

00:27:43,109 --> 00:27:49,269
the puter Pierre part of the

00:27:46,709 --> 00:27:52,449
presentation who of you well the

00:27:49,269 --> 00:27:55,869
skeptical problems we already had so

00:27:52,449 --> 00:28:02,019
this would be universities not wanting

00:27:55,869 --> 00:28:05,559
to allow puter peer of trim the beauty

00:28:02,019 --> 00:28:08,919
of protocol in itself who would be

00:28:05,559 --> 00:28:12,459
interested or who would want to would

00:28:08,919 --> 00:28:19,119
like to know more or stay in contact or

00:28:12,459 --> 00:28:21,249
have it yeah good that maybe as a

00:28:19,119 --> 00:28:25,359
background one of the retail customers

00:28:21,249 --> 00:28:27,759
we had actually was thinking about that

00:28:25,359 --> 00:28:28,909
back when it was BitTorrent but II

00:28:27,759 --> 00:28:33,109
donkey was the

00:28:28,909 --> 00:28:34,820
to one of the day it's usually those

00:28:33,109 --> 00:28:37,009
project I usually stop for those reasons

00:28:34,820 --> 00:28:39,470
that Owen mentioned that people have you

00:28:37,009 --> 00:28:41,330
know count this fear of peer-to-peer

00:28:39,470 --> 00:28:43,820
networks but I know that some of the

00:28:41,330 --> 00:28:46,369
hosting providers like head snap for

00:28:43,820 --> 00:28:47,989
example have been using an arsenic based

00:28:46,369 --> 00:28:50,090
mechanism that works very similar for

00:28:47,989 --> 00:28:51,799
years where basically you know you see

00:28:50,090 --> 00:28:57,499
the machine and then other machines were

00:28:51,799 --> 00:29:00,019
just arcing from their peers and that

00:28:57,499 --> 00:29:02,389
that that has worked well interesting

00:29:00,019 --> 00:29:06,019
other alternative that you have inner in

00:29:02,389 --> 00:29:08,809
a very homogeneous network is is

00:29:06,019 --> 00:29:11,720
broadcasting so that's what we do for if

00:29:08,809 --> 00:29:14,059
you haven't like a whole let's say a

00:29:11,720 --> 00:29:17,570
department store with 50 cash registers

00:29:14,059 --> 00:29:19,429
then you can just do a multicast so you

00:29:17,570 --> 00:29:22,489
can the cool thing is that then you can

00:29:19,429 --> 00:29:24,739
do like all the machines in 12 seconds

00:29:22,489 --> 00:29:26,779
at the same time because on the wire

00:29:24,739 --> 00:29:28,609
it's really just one broadcast but that

00:29:26,779 --> 00:29:30,889
wouldn't work even in a distributed it

00:29:28,609 --> 00:29:33,799
wouldn't work for these laptops which

00:29:30,889 --> 00:29:35,989
can go online and offline each second of

00:29:33,799 --> 00:29:38,149
the day and then reconnect and in fact

00:29:35,989 --> 00:29:41,450
we the the company has very bad

00:29:38,149 --> 00:29:45,499
experiences with broadcasting but it

00:29:41,450 --> 00:29:47,840
depends on the circumstances thank you

00:29:45,499 --> 00:29:50,960
for your attention I'm one minute over

00:29:47,840 --> 00:29:54,859
the time now the party begins you can

00:29:50,960 --> 00:29:58,369
you can we stay in contact right now we

00:29:54,859 --> 00:30:02,349
have a look at this continued until

00:29:58,369 --> 00:30:02,349
ninety nine percent and it's not report

00:30:23,379 --> 00:30:28,639
112-409 the the ninety nine percent is

00:30:27,409 --> 00:30:29,840
something which is wrong one-hundred

00:30:28,639 --> 00:30:32,239
percent on the other end of something

00:30:29,840 --> 00:30:38,629
which is correct and that's therefore

00:30:32,239 --> 00:30:41,049
it's not reported so um any more

00:30:38,629 --> 00:30:44,919
questions

00:30:41,049 --> 00:30:44,919

YouTube URL: https://www.youtube.com/watch?v=fOYtEorF-ws


