Title: Bernhard Wiedemann - openQA.o.o - openSUSE Conference 2013
Publication date: 2013-07-22
Playlist: openSUSE Conference 2013
Description: 
	Testing an Operating System from bootloader through installer to the applications of the installed system is a lot of hard work and doing this daily is rather exhausting and boring, so I made openQA (using my OS-autoinst test-engine) to do it all for me... or rather us openSUSE users.
This has meanwhile been running since 2010 and found many many bugs, some of which would surely have made it into GM without being noticed.
This talk will give some overview on the why, what and how of our automated testing with a discussion of further plans for improvement.
Captions: 
	00:00:00,000 --> 00:00:05,270
II by parent the winner man

00:00:19,630 --> 00:00:29,079
hello everyone hello Louis and today I'm

00:00:25,329 --> 00:00:33,820
going to talk about my hobby project

00:00:29,079 --> 00:00:38,790
opensuse which is no to be found on the

00:00:33,820 --> 00:00:44,050
open q dot opensuse torque and we

00:00:38,790 --> 00:00:48,159
recover what it is a way do we really

00:00:44,050 --> 00:00:50,559
need it and what's good for and all the

00:00:48,159 --> 00:00:53,680
developments that had happened in the

00:00:50,559 --> 00:00:56,920
last year's like I gradually improving

00:00:53,680 --> 00:01:00,699
everything but before we start we have a

00:00:56,920 --> 00:01:02,409
message from our sponsors that says we

00:01:00,699 --> 00:01:04,989
are looking for people who know how to

00:01:02,409 --> 00:01:08,009
write software test software sell

00:01:04,989 --> 00:01:12,040
software or manage software people and

00:01:08,009 --> 00:01:17,500
if you are or know someone says address

00:01:12,040 --> 00:01:22,439
and it would be nice so um yeah what is

00:01:17,500 --> 00:01:25,569
it open QA is a fully automated

00:01:22,439 --> 00:01:30,630
framework for testing whole operating

00:01:25,569 --> 00:01:34,869
system and what that means is so that's

00:01:30,630 --> 00:01:37,960
so automated said it's testing right now

00:01:34,869 --> 00:01:41,170
and it was testing six hours ago when I

00:01:37,960 --> 00:01:43,840
was sleeping and we can have a look at

00:01:41,170 --> 00:01:50,020
the result right now and not have to

00:01:43,840 --> 00:01:52,869
wait for something and yeah and how we

00:01:50,020 --> 00:01:59,439
got there I know but first we want to

00:01:52,869 --> 00:02:01,840
cover why why do we need it one problem

00:01:59,439 --> 00:02:05,590
we had with observers factory was that

00:02:01,840 --> 00:02:11,620
there was or is so much site change all

00:02:05,590 --> 00:02:14,470
the time and furthermore our Linux

00:02:11,620 --> 00:02:18,190
distributions became a bit complicated

00:02:14,470 --> 00:02:20,650
like you have this library here that

00:02:18,190 --> 00:02:22,660
opens a soccer to that library and then

00:02:20,650 --> 00:02:26,680
there's a program interacting with all

00:02:22,660 --> 00:02:29,460
of this mess and you can have bucks

00:02:26,680 --> 00:02:32,060
appear and really white where places

00:02:29,460 --> 00:02:35,150
like we had one buck in

00:02:32,060 --> 00:02:37,450
lib KDE where your k hope center would

00:02:35,150 --> 00:02:40,280
just take fault and it was because we

00:02:37,450 --> 00:02:44,930
did a small patch to the new compiler

00:02:40,280 --> 00:02:47,780
and the Thames so you have all this

00:02:44,930 --> 00:02:50,599
complexity and it's really hard to

00:02:47,780 --> 00:02:52,670
manage this just unit test so we have

00:02:50,599 --> 00:02:56,360
test for compilers but there are no way

00:02:52,670 --> 00:02:59,030
complete you can't actually you can't

00:02:56,360 --> 00:03:02,209
even test something as simple as a plus

00:02:59,030 --> 00:03:06,200
B because there are four billion values

00:03:02,209 --> 00:03:10,269
for a and 4 billion values for B and you

00:03:06,200 --> 00:03:12,410
can't actually test all of them even so

00:03:10,269 --> 00:03:14,630
it's even harder to test the full

00:03:12,410 --> 00:03:18,980
program under all circumstances is not

00:03:14,630 --> 00:03:23,769
not really possible so and as a reason

00:03:18,980 --> 00:03:27,400
why we need it autumn a testing is

00:03:23,769 --> 00:03:33,519
because we don't want to use to lose

00:03:27,400 --> 00:03:38,180
users to crashes well it's not as bad

00:03:33,519 --> 00:03:41,540
like with messages which crashed but it

00:03:38,180 --> 00:03:44,600
can be bad because the user sees a crash

00:03:41,540 --> 00:03:47,060
Oh his favorite program doesn't work

00:03:44,600 --> 00:03:48,410
okay maybe he uses something else

00:03:47,060 --> 00:03:50,420
because there are so many linux

00:03:48,410 --> 00:03:55,160
distributions out there they're all I'm

00:03:50,420 --> 00:03:57,799
so easy to try so and we don't want to

00:03:55,160 --> 00:04:01,280
make our users are unhappy we want

00:03:57,799 --> 00:04:05,540
things to just work so when I really

00:04:01,280 --> 00:04:07,880
started and I think 2009 to join the

00:04:05,540 --> 00:04:12,019
opensuse testing team which for music

00:04:07,880 --> 00:04:16,010
work started I took the part of

00:04:12,019 --> 00:04:22,600
installation testing but there I thought

00:04:16,010 --> 00:04:26,330
I find your lack of tests disturbing and

00:04:22,600 --> 00:04:29,090
so there was not really much the testing

00:04:26,330 --> 00:04:33,110
that was there was done by people and we

00:04:29,090 --> 00:04:35,240
often had tests that were just breaking

00:04:33,110 --> 00:04:37,360
like an ISO that would not install and

00:04:35,240 --> 00:04:42,140
it was released as a milestone because

00:04:37,360 --> 00:04:43,550
nobody really tried this version and if

00:04:42,140 --> 00:04:45,289
you can't install that you can't test

00:04:43,550 --> 00:04:48,860
all the software behind so

00:04:45,289 --> 00:04:55,129
it's bad for testing over also mmm you

00:04:48,860 --> 00:04:58,240
get not good quality afterwards so I try

00:04:55,129 --> 00:05:00,830
to start some manual testing like

00:04:58,240 --> 00:05:02,300
burning a CD or putting it on my USB

00:05:00,830 --> 00:05:06,249
stick and then putting hearts machine

00:05:02,300 --> 00:05:08,779
and to install my machines and then

00:05:06,249 --> 00:05:10,999
there appears the spycam screen and data

00:05:08,779 --> 00:05:12,559
type next and type next again for the

00:05:10,999 --> 00:05:14,659
other screen and then I have to wait a

00:05:12,559 --> 00:05:17,749
bit and then I type my username and my

00:05:14,659 --> 00:05:20,240
password and then next week comes the

00:05:17,749 --> 00:05:26,680
next version and turned out it's a bit

00:05:20,240 --> 00:05:29,749
boring to do this again and again so

00:05:26,680 --> 00:05:33,520
being a software developer I know about

00:05:29,749 --> 00:05:36,409
the three achieve voters virtues of

00:05:33,520 --> 00:05:42,409
programmers and the first one is

00:05:36,409 --> 00:05:46,360
laziness which means I want to put a lot

00:05:42,409 --> 00:05:50,449
of effort into not working so much so I

00:05:46,360 --> 00:05:53,569
automated everything and the second

00:05:50,449 --> 00:05:57,409
virtue is impatience which means I don't

00:05:53,569 --> 00:05:59,930
want to wait so long so I made it run

00:05:57,409 --> 00:06:03,409
automatically so the result is already

00:05:59,930 --> 00:06:05,209
there and when I wanted and not I run it

00:06:03,409 --> 00:06:07,909
and then I have to wait for an hour to

00:06:05,209 --> 00:06:11,029
finish that makes a difference and the

00:06:07,909 --> 00:06:16,189
search is u verse but that's not so

00:06:11,029 --> 00:06:19,189
important here yeah so what I did was um

00:06:16,189 --> 00:06:22,209
I made a very simplest thing in the

00:06:19,189 --> 00:06:24,680
beginning that is it takes it I saw a

00:06:22,209 --> 00:06:27,680
new isil's that comes out of the build

00:06:24,680 --> 00:06:31,490
service for victory download it from

00:06:27,680 --> 00:06:35,389
there runs all the tests on it and has a

00:06:31,490 --> 00:06:38,479
nice result and as a result in the

00:06:35,389 --> 00:06:42,050
beginning I just had a video because I

00:06:38,479 --> 00:06:45,229
will explain later and yeah and these

00:06:42,050 --> 00:06:48,919
days there are more results ja nice to

00:06:45,229 --> 00:06:51,769
view awesome and of course we don't have

00:06:48,919 --> 00:06:56,479
just have one version of opensuse we

00:06:51,769 --> 00:06:57,709
have our live cds for KDE and no me

00:06:56,479 --> 00:06:58,760
we have the net installed so you have

00:06:57,709 --> 00:07:01,700
the dvds

00:06:58,760 --> 00:07:05,420
and on the DVD you can install with

00:07:01,700 --> 00:07:09,740
different desktops so there are really a

00:07:05,420 --> 00:07:12,790
lot of variance you can have and to

00:07:09,740 --> 00:07:18,400
cover some of these variants I made some

00:07:12,790 --> 00:07:21,470
simple test scheduler and that would

00:07:18,400 --> 00:07:23,060
first do the basic stuff like the

00:07:21,470 --> 00:07:27,170
default install when you just click next

00:07:23,060 --> 00:07:29,510
next next all the time and if there was

00:07:27,170 --> 00:07:35,480
time until the next I so came out it

00:07:29,510 --> 00:07:38,060
would then cover as a more extended

00:07:35,480 --> 00:07:40,970
stuff like other desktops or installing

00:07:38,060 --> 00:07:42,650
on lvm or the script or enabled or with

00:07:40,970 --> 00:07:47,780
beta FS which is still pretty

00:07:42,650 --> 00:07:51,910
experimental sometimes and so there may

00:07:47,780 --> 00:07:54,470
be don't know 50 variance I and

00:07:51,910 --> 00:07:58,730
combinations to do with this testing

00:07:54,470 --> 00:08:02,660
framework and they are not run all the

00:07:58,730 --> 00:08:08,950
time but I randomly if you get run each

00:08:02,660 --> 00:08:15,080
of them maybe every other day so and

00:08:08,950 --> 00:08:16,700
what it's really good for is one as info

00:08:15,080 --> 00:08:18,920
testing because that's the most

00:08:16,700 --> 00:08:20,960
important part if you can't install the

00:08:18,920 --> 00:08:25,640
distribution you can't really use it as

00:08:20,960 --> 00:08:29,900
a user or as a tester and second VTS

00:08:25,640 --> 00:08:32,330
upgrades from older versions I have some

00:08:29,900 --> 00:08:34,669
pre-built images of previous versions

00:08:32,330 --> 00:08:38,450
not just of the very last one but also

00:08:34,669 --> 00:08:41,470
some of the ones before because people

00:08:38,450 --> 00:08:44,600
always try and to skip versions because

00:08:41,470 --> 00:08:49,880
otherwise they changed system too often

00:08:44,600 --> 00:08:53,030
and we really found some nasty bugs like

00:08:49,880 --> 00:08:55,790
and 12-1 it was a one day before the

00:08:53,030 --> 00:08:58,070
gold master he found that you could not

00:08:55,790 --> 00:09:00,860
upgrade from the previous version and it

00:08:58,070 --> 00:09:04,250
would just break your system because we

00:09:00,860 --> 00:09:06,770
changed dependency in rpm and bash and

00:09:04,250 --> 00:09:10,670
then it created a cyclic dependency and

00:09:06,770 --> 00:09:12,769
D installed on our upgraded lipsett and

00:09:10,670 --> 00:09:16,129
there's a new lip set you could

00:09:12,769 --> 00:09:17,899
run are pyramids and it broke and we

00:09:16,129 --> 00:09:20,089
found it and we fix that one day before

00:09:17,899 --> 00:09:25,519
God master and everyone was heavy ever

00:09:20,089 --> 00:09:28,399
after and really if when I found this

00:09:25,519 --> 00:09:30,589
thing I thought it was really no way we

00:09:28,399 --> 00:09:34,129
could have founded otherwise because no

00:09:30,589 --> 00:09:36,139
one tests this this I saw one day before

00:09:34,129 --> 00:09:41,720
God master because we don't publish it

00:09:36,139 --> 00:09:43,639
for the press to be happy and internally

00:09:41,720 --> 00:09:45,049
most people just tries the install but

00:09:43,639 --> 00:09:46,519
not the upgrades from older version

00:09:45,049 --> 00:09:50,809
because they're you need some older

00:09:46,519 --> 00:09:54,559
version to upgrade from so it just as

00:09:50,809 --> 00:09:57,559
one already was a big thing and they are

00:09:54,559 --> 00:10:00,439
more like a I kept a list of things I

00:09:57,559 --> 00:10:04,629
found her and it was hundreds of things

00:10:00,439 --> 00:10:08,119
not all that big but useful very useful

00:10:04,629 --> 00:10:09,920
so we had some application testing so

00:10:08,119 --> 00:10:12,949
besides the install windows installs

00:10:09,920 --> 00:10:17,170
finished and the framework goes on to

00:10:12,949 --> 00:10:19,899
test some of the gas and super and some

00:10:17,170 --> 00:10:22,369
Firefox and Li Po office and KDE

00:10:19,899 --> 00:10:25,850
software and some chrome software

00:10:22,369 --> 00:10:29,749
depending on the desktop so it's a very

00:10:25,850 --> 00:10:32,269
basic tools of opensuse which our users

00:10:29,749 --> 00:10:37,569
need a where these air will be tested

00:10:32,269 --> 00:10:39,949
and no you're not yet done and we had

00:10:37,569 --> 00:10:42,110
regression testing at sometimes I found

00:10:39,949 --> 00:10:45,350
box and I said I I don't want this back

00:10:42,110 --> 00:10:47,809
ever to creep in there because it'll be

00:10:45,350 --> 00:10:51,199
had some nasty bugs like 80 cm top not

00:10:47,809 --> 00:10:55,399
being assume link and then truth with MP

00:10:51,199 --> 00:10:58,249
hinge and behave strangely so I other

00:10:55,399 --> 00:11:01,549
two tests and then we get a okay or

00:10:58,249 --> 00:11:04,730
failure for this one chest and so and

00:11:01,549 --> 00:11:06,889
yea even bisecting if you know good you

00:11:04,730 --> 00:11:10,009
know if you find the back and you know

00:11:06,889 --> 00:11:12,980
all this was working for weeks ago you

00:11:10,009 --> 00:11:15,319
can go back in the good history and find

00:11:12,980 --> 00:11:18,379
the exact change that broke it and

00:11:15,319 --> 00:11:21,049
that's very helpful and get and I have

00:11:18,379 --> 00:11:25,279
done it a few times with okeee where saw

00:11:21,049 --> 00:11:27,620
okay he is a new failure and

00:11:25,279 --> 00:11:29,449
but I know it worked before so I went

00:11:27,620 --> 00:11:32,029
back through the old test results and so

00:11:29,449 --> 00:11:34,279
okay here on November 16 that was

00:11:32,029 --> 00:11:38,300
working and here on November 17 it was

00:11:34,279 --> 00:11:41,480
breaking and then I could go to the

00:11:38,300 --> 00:11:44,779
combat archives on opensuse and see what

00:11:41,480 --> 00:11:46,490
changes event in there in between and in

00:11:44,779 --> 00:11:48,740
the change you have always an email

00:11:46,490 --> 00:11:50,870
address of the guy who did the change so

00:11:48,740 --> 00:11:53,749
you can ask him hey you did such change

00:11:50,870 --> 00:11:57,410
and now this broken and usually he says

00:11:53,749 --> 00:11:59,809
yeah okay you are right and then it's

00:11:57,410 --> 00:12:02,209
easy to fix but otherwise it can be

00:11:59,809 --> 00:12:04,459
quite hard especially for outsiders who

00:12:02,209 --> 00:12:07,819
know who don't know everyone in Souza

00:12:04,459 --> 00:12:11,059
and or every contributor of opensuse who

00:12:07,819 --> 00:12:13,040
does something so these things and then

00:12:11,059 --> 00:12:17,329
we even used the result we just a

00:12:13,040 --> 00:12:19,189
marketing in the past like on

00:12:17,329 --> 00:12:22,519
conferences where we have big screens

00:12:19,189 --> 00:12:30,379
you can have these videos running I

00:12:22,519 --> 00:12:32,600
think I should have a video okay yeah

00:12:30,379 --> 00:12:37,970
let's have a look at the site you have

00:12:32,600 --> 00:12:40,329
these results here and let's pick one of

00:12:37,970 --> 00:12:40,329
the good ones

00:12:51,080 --> 00:12:58,810
yeah okay this one looks good so we have

00:12:54,080 --> 00:13:01,430
the video here and there can see

00:12:58,810 --> 00:13:05,300
hopefully yeah as a virtual machine

00:13:01,430 --> 00:13:08,690
booting the ISIL and typing into the

00:13:05,300 --> 00:13:12,980
bootloader character by character which

00:13:08,690 --> 00:13:16,400
is using the kvm Colonel virtual machine

00:13:12,980 --> 00:13:18,800
technology was it's monitor interface

00:13:16,400 --> 00:13:23,150
where you can say send key X and it will

00:13:18,800 --> 00:13:25,490
type in an ex and i know this is i have

00:13:23,150 --> 00:13:28,910
some across that say types a string and

00:13:25,490 --> 00:13:33,410
did which I tech today and then I have

00:13:28,910 --> 00:13:38,780
more Marcos like wait until the screen

00:13:33,410 --> 00:13:42,610
is no more changing weight under the CPU

00:13:38,780 --> 00:13:45,680
of the cumo kvm process is no more

00:13:42,610 --> 00:13:49,940
running so it's either so I know if it

00:13:45,680 --> 00:13:53,240
was doing something now it's finished so

00:13:49,940 --> 00:13:56,690
um guess what does also installation

00:13:53,240 --> 00:14:00,850
step by step and it creates this nice

00:13:56,690 --> 00:14:04,160
video and I even have a special nice

00:14:00,850 --> 00:14:06,890
very end where it skips ugly parts of

00:14:04,160 --> 00:14:08,720
the tests we're swinging just doing

00:14:06,890 --> 00:14:10,490
regression testing which no one is

00:14:08,720 --> 00:14:12,230
interested but keeps the parts where it

00:14:10,490 --> 00:14:16,840
runs Firefox for example and leave

00:14:12,230 --> 00:14:19,760
office so the end we have a nice video

00:14:16,840 --> 00:14:21,680
so users can watch and see opensuse and

00:14:19,760 --> 00:14:25,820
life action and that's good for

00:14:21,680 --> 00:14:28,610
marketing 2 and 0 all the documentation

00:14:25,820 --> 00:14:31,970
team uses the screenshots for say many

00:14:28,610 --> 00:14:34,760
others as well because I have some here

00:14:31,970 --> 00:14:37,100
and perfect quality and they don't need

00:14:34,760 --> 00:14:40,280
to go around and always fetch the latest

00:14:37,100 --> 00:14:46,610
version themselves so that's also a

00:14:40,280 --> 00:14:50,480
really nice use case here so hurry let's

00:14:46,610 --> 00:14:52,280
boot it now and yeah and of course the

00:14:50,480 --> 00:14:55,220
nice thing about videos is that you can

00:14:52,280 --> 00:14:58,640
skip forward and backward and if it's

00:14:55,220 --> 00:15:00,470
too boring for you and you can say okay

00:14:58,640 --> 00:15:02,310
oh what's what what was it and go back

00:15:00,470 --> 00:15:11,420
and see it again

00:15:02,310 --> 00:15:16,140
and like this so that's really nice I

00:15:11,420 --> 00:15:18,839
don't understand I'm sorry how did you

00:15:16,140 --> 00:15:22,940
say you are capturing this video yeah

00:15:18,839 --> 00:15:27,480
very good question um that is using kvm

00:15:22,940 --> 00:15:30,420
where we have the virtual machine and we

00:15:27,480 --> 00:15:33,930
can not only say send key X but we can

00:15:30,420 --> 00:15:37,020
say a screen done fine aim and then it

00:15:33,930 --> 00:15:41,640
will take the current screen frame

00:15:37,020 --> 00:15:44,760
buffer and dump it to a file and I sense

00:15:41,640 --> 00:15:47,820
the screen damp every half second so I

00:15:44,760 --> 00:15:49,950
get a lot of files in the end and when

00:15:47,820 --> 00:15:53,000
the test is finished I just take all

00:15:49,950 --> 00:15:56,420
these four thousand files and say okay

00:15:53,000 --> 00:16:02,250
ffmpeg to t / make me a video of this

00:15:56,420 --> 00:16:03,779
collection of fires and then it just

00:16:02,250 --> 00:16:08,240
creates a video out of all these

00:16:03,779 --> 00:16:12,120
screenshots less this one here and

00:16:08,240 --> 00:16:16,050
actually the main main script to call

00:16:12,120 --> 00:16:19,650
for running a test on a iso image is

00:16:16,050 --> 00:16:22,290
called iso to video because it would

00:16:19,650 --> 00:16:27,680
take the iso and sort of make a video

00:16:22,290 --> 00:16:27,680
from it yeah

00:16:31,020 --> 00:16:34,710
it's just

00:16:48,110 --> 00:16:54,500
okay and besides there are some areas

00:16:51,769 --> 00:16:57,380
where we could use it some more but we

00:16:54,500 --> 00:16:59,660
did don't actually do it much like in

00:16:57,380 --> 00:17:02,000
the future as there was idea and that we

00:16:59,660 --> 00:17:04,640
could use it for gating like testing

00:17:02,000 --> 00:17:06,679
updates of core components to see if

00:17:04,640 --> 00:17:10,040
they break something which would be

00:17:06,679 --> 00:17:13,209
gating and benchmarking because we have

00:17:10,040 --> 00:17:16,939
some performance llamas question yeah

00:17:13,209 --> 00:17:19,520
I've noticed before that you are robbing

00:17:16,939 --> 00:17:24,949
in the liberal we said you tapping very

00:17:19,520 --> 00:17:29,210
into cargo to write how would you find

00:17:24,949 --> 00:17:31,610
out if something was going wrong if it

00:17:29,210 --> 00:17:35,780
didn't do what it's supposed to how do

00:17:31,610 --> 00:17:40,250
you get the result back and say that is

00:17:35,780 --> 00:17:43,010
just the video that you get to see oh it

00:17:40,250 --> 00:17:47,110
is some some other sort of feedback they

00:17:43,010 --> 00:17:50,990
are capturing yeah there's some picnic

00:17:47,110 --> 00:17:56,720
it's very simple because get the screen

00:17:50,990 --> 00:18:00,380
output and for that yeah initially it

00:17:56,720 --> 00:18:01,700
was adjusted video but you can the view

00:18:00,380 --> 00:18:06,110
and it's faster than installing

00:18:01,700 --> 00:18:08,299
everything yourself but yeah we did some

00:18:06,110 --> 00:18:12,799
automatic checking using the screenshots

00:18:08,299 --> 00:18:15,740
for example and say you have your Lieber

00:18:12,799 --> 00:18:17,210
offers and you type in hello world so it

00:18:15,740 --> 00:18:20,090
would really work as there should be

00:18:17,210 --> 00:18:22,640
hello world Abby on the screen so you

00:18:20,090 --> 00:18:24,140
say yes we have the screenshot so in

00:18:22,640 --> 00:18:27,410
this area there should be something

00:18:24,140 --> 00:18:32,600
looking like this so we have reference

00:18:27,410 --> 00:18:35,059
images which we are compared in the

00:18:32,600 --> 00:18:38,000
order version we compared it a bit by

00:18:35,059 --> 00:18:41,059
bit or was just small differences in the

00:18:38,000 --> 00:18:44,270
singer pixels but in the new version and

00:18:41,059 --> 00:18:47,000
done by our great opens as a team we

00:18:44,270 --> 00:18:50,120
used opencv the computer vision library

00:18:47,000 --> 00:18:56,919
which can do more sophisticated matching

00:18:50,120 --> 00:19:00,040
like it's a bit off for Miss collared or

00:18:56,919 --> 00:19:06,530
and still recognize this thing

00:19:00,040 --> 00:19:09,380
so um yeah so we can take screenshot

00:19:06,530 --> 00:19:11,210
output and match on it and we can have

00:19:09,380 --> 00:19:13,280
unknown good results and we can even

00:19:11,210 --> 00:19:15,830
have known better results like we know

00:19:13,280 --> 00:19:18,170
if it fails it always pops up this error

00:19:15,830 --> 00:19:21,530
message and if we see this error message

00:19:18,170 --> 00:19:24,530
it's again a reference image but we know

00:19:21,530 --> 00:19:26,540
oh that must be a bad result and we

00:19:24,530 --> 00:19:29,720
don't have to look very closely to

00:19:26,540 --> 00:19:32,060
recognize this battery side but if we

00:19:29,720 --> 00:19:34,580
see something which we never have seen

00:19:32,060 --> 00:19:37,040
before like in no known code and no

00:19:34,580 --> 00:19:44,720
known bed and then it's marked as

00:19:37,040 --> 00:19:50,060
unknown and that is when some one has to

00:19:44,720 --> 00:19:51,890
have a look alike is it okay if it's

00:19:50,060 --> 00:19:54,590
still a good result you make a new

00:19:51,890 --> 00:19:57,140
reference image from the screenshot and

00:19:54,590 --> 00:20:02,330
if it's a failure you have to fight back

00:19:57,140 --> 00:20:06,800
or tell someone at least so that's the

00:20:02,330 --> 00:20:09,650
process for finding boxer mostly um

00:20:06,800 --> 00:20:12,160
there's some more ways to communication

00:20:09,650 --> 00:20:16,550
like we have a serial console and

00:20:12,160 --> 00:20:19,450
emulated one and we can produce output

00:20:16,550 --> 00:20:22,640
from z to the n to the c arkansas and

00:20:19,450 --> 00:20:25,310
when we see the output on the outside it

00:20:22,640 --> 00:20:27,520
means the program was really working to

00:20:25,310 --> 00:20:31,730
that point and not crash before

00:20:27,520 --> 00:20:34,640
something and we also use it a bit for

00:20:31,730 --> 00:20:37,370
synchronization like when we run a super

00:20:34,640 --> 00:20:38,600
dope and it takes a real long time from

00:20:37,370 --> 00:20:40,340
the outset we don't really know when

00:20:38,600 --> 00:20:48,140
it's finished and when we can continue

00:20:40,340 --> 00:20:50,000
typing what we need so we can just send

00:20:48,140 --> 00:20:52,040
something to the seer console after

00:20:50,000 --> 00:20:53,870
super dope finished and then when we see

00:20:52,040 --> 00:20:57,680
that we know are now it's finished and

00:20:53,870 --> 00:21:00,440
continue and that part is also nice

00:20:57,680 --> 00:21:03,530
because it's very reliable where the

00:21:00,440 --> 00:21:06,760
screenshots can be changing because

00:21:03,530 --> 00:21:10,060
funds can be a bit larger or smaller or

00:21:06,760 --> 00:21:12,830
change the font type because they're

00:21:10,060 --> 00:21:13,639
frequently and changes to the freetype

00:21:12,830 --> 00:21:18,769
library and

00:21:13,639 --> 00:21:22,009
they create some variations so and we

00:21:18,769 --> 00:21:24,799
had benchmarking yeah so we could even

00:21:22,009 --> 00:21:27,739
watch the speed and the cpu usage of

00:21:24,799 --> 00:21:30,679
everything but we don't do it much for

00:21:27,739 --> 00:21:32,989
now because one of the reasons is that

00:21:30,679 --> 00:21:36,559
we won multiple tests at the same time

00:21:32,989 --> 00:21:41,149
so they couldn't influence each other a

00:21:36,559 --> 00:21:48,739
bit because you have to change no chair

00:21:41,149 --> 00:21:50,889
you have to chair the CPUs so and no I

00:21:48,739 --> 00:21:55,429
have a list of the improvements we made

00:21:50,889 --> 00:22:01,729
in the past like we have a nice result

00:21:55,429 --> 00:22:03,940
overview know which I should show no not

00:22:01,729 --> 00:22:03,940
this one

00:22:11,760 --> 00:22:23,520
yeah like you we have a tests now you

00:22:21,600 --> 00:22:28,140
have a test here for the bootloader and

00:22:23,520 --> 00:22:30,660
for the welcome screen and it knows when

00:22:28,140 --> 00:22:32,550
it's interesting to look at something so

00:22:30,660 --> 00:22:35,220
it takes a screenshot and you see here

00:22:32,550 --> 00:22:38,130
we have the webcam screen telling its

00:22:35,220 --> 00:22:46,010
milestone 3 and it's a beta version so

00:22:38,130 --> 00:22:46,010
that looks good and then further down

00:22:46,490 --> 00:22:52,290
here we have it marked as green because

00:22:49,740 --> 00:22:54,900
it recognizes some part of the

00:22:52,290 --> 00:23:03,380
screenshot and the recognized part is

00:22:54,900 --> 00:23:03,380
here marked by blue bar and

00:23:10,460 --> 00:23:16,520
yeah and then here we have some yellow

00:23:13,280 --> 00:23:20,750
ones which are marked as unknown because

00:23:16,520 --> 00:23:25,010
here did something strange like yeah

00:23:20,750 --> 00:23:31,550
there's some problem maybe nothing major

00:23:25,010 --> 00:23:35,480
but it broke this test so it makes it

00:23:31,550 --> 00:23:38,990
much more easy for someone watching this

00:23:35,480 --> 00:23:40,670
result to see ah okay okay okay and

00:23:38,990 --> 00:23:50,750
here's something they should have a

00:23:40,670 --> 00:23:52,570
closer look at ya so we have these nice

00:23:50,750 --> 00:23:57,260
look at the faces two other results

00:23:52,570 --> 00:24:00,890
currently and we have a fast SSD so we

00:23:57,260 --> 00:24:04,610
can run multiple tests and parallel with

00:24:00,890 --> 00:24:08,380
make which is used to paradise and

00:24:04,610 --> 00:24:11,450
because it's a nice tool already and

00:24:08,380 --> 00:24:13,820
yeah we can even test other Linux

00:24:11,450 --> 00:24:17,540
distributions and not just linux even a

00:24:13,820 --> 00:24:21,410
freebsd and opensolaris i tried some

00:24:17,540 --> 00:24:25,580
years ago and it's all possible and i

00:24:21,410 --> 00:24:29,750
did it and it's actually pretty easy

00:24:25,580 --> 00:24:35,320
like it took me a one day to do two

00:24:29,750 --> 00:24:40,220
distributions only so yeah easy to do so

00:24:35,320 --> 00:24:43,400
how much how much what sort of volume

00:24:40,220 --> 00:24:46,250
requirements does a single test take I

00:24:43,400 --> 00:24:52,750
mean all these screenshots would require

00:24:46,250 --> 00:24:57,200
some how many gigabytes and how how many

00:24:52,750 --> 00:24:59,630
what sort of storage requirements you

00:24:57,200 --> 00:25:03,640
are putting aside for testing yeah

00:24:59,630 --> 00:25:07,280
usually it's very low on requirements

00:25:03,640 --> 00:25:11,690
you have screenshots some five to ten

00:25:07,280 --> 00:25:13,310
gigabytes maybe if it's much then you

00:25:11,690 --> 00:25:15,230
need some storage for the disk images

00:25:13,310 --> 00:25:17,960
where you install another distribution

00:25:15,230 --> 00:25:20,720
on which is another five to ten

00:25:17,960 --> 00:25:23,030
gigabytes so if you just want to do a

00:25:20,720 --> 00:25:23,879
single test at a time you need maybe 20

00:25:23,030 --> 00:25:27,059
gigs

00:25:23,879 --> 00:25:30,959
that's more than enough and for rum I

00:25:27,059 --> 00:25:35,999
give one gigabyte WebM and that's not

00:25:30,959 --> 00:25:38,159
really much these days so the one thing

00:25:35,999 --> 00:25:40,949
you really want is a hardware

00:25:38,159 --> 00:25:46,589
virtualization which you have in most of

00:25:40,949 --> 00:25:53,909
the machines today anyway like intel or

00:25:46,589 --> 00:25:56,729
AMD yeah and currently there's really

00:25:53,909 --> 00:26:01,499
just one machine I was 12 gigabytes of

00:25:56,729 --> 00:26:07,169
RAM and one fast SSD and that is running

00:26:01,499 --> 00:26:16,829
over 40 tests a day I think and that's

00:26:07,169 --> 00:26:18,899
enough for us at least okay so yeah

00:26:16,829 --> 00:26:23,909
basically here you can test anything

00:26:18,899 --> 00:26:25,919
that boots somehow like you could even

00:26:23,909 --> 00:26:31,889
chest windows if it was available

00:26:25,919 --> 00:26:34,139
somewhere and yeah as a result checking

00:26:31,889 --> 00:26:37,229
was done with md5 sums like I takes a

00:26:34,139 --> 00:26:39,929
screenshot and I see the md5 sum is this

00:26:37,229 --> 00:26:42,659
and before it was a different one it

00:26:39,929 --> 00:26:44,190
would not match but that was a bit too

00:26:42,659 --> 00:26:48,509
cumbersome so we created such a

00:26:44,190 --> 00:26:50,729
reference image sing mostly by Dominic

00:26:48,509 --> 00:26:54,929
idea who did also the nice web interface

00:26:50,729 --> 00:26:57,089
to edit it and then like leo opensuse

00:26:54,929 --> 00:27:02,129
team did a new version with opencv again

00:26:57,089 --> 00:27:04,889
so that's really a useful tool and then

00:27:02,129 --> 00:27:07,679
we have some audio tests where we have a

00:27:04,889 --> 00:27:10,379
virtualized sound card and we capture

00:27:07,679 --> 00:27:12,119
the audio that comes out of it so we can

00:27:10,379 --> 00:27:16,739
even see that the audio framework like

00:27:12,119 --> 00:27:19,229
put audio as a the playback tool like

00:27:16,739 --> 00:27:22,529
yeah you can play audio from Firefox and

00:27:19,229 --> 00:27:26,309
record it on the outside and see that's

00:27:22,529 --> 00:27:30,139
coming out and to see as I aw do we use

00:27:26,309 --> 00:27:33,839
a DTMF which is likely to lead you to it

00:27:30,139 --> 00:27:36,790
and every really sees a light sequence

00:27:33,839 --> 00:27:42,640
are coming out then we say yes green

00:27:36,790 --> 00:27:44,440
check yeah and initially the test was

00:27:42,640 --> 00:27:47,170
just running and only when it finished

00:27:44,440 --> 00:27:49,570
we got some feedback but Dominic added a

00:27:47,170 --> 00:27:53,920
life year so why is the test is running

00:27:49,570 --> 00:27:56,320
you can just watch it a bit like a BNC

00:27:53,920 --> 00:27:59,320
connection but it's read-only so

00:27:56,320 --> 00:28:04,240
everyone can just view it without the

00:27:59,320 --> 00:28:08,260
danger of messing up something and

00:28:04,240 --> 00:28:12,280
that's using using motion jpeg which is

00:28:08,260 --> 00:28:15,820
just a booty part jpg which has one

00:28:12,280 --> 00:28:19,950
image after another nice technology yeah

00:28:15,820 --> 00:28:22,990
and he had some chest progress viewer to

00:28:19,950 --> 00:28:25,630
which means you have check boxes at the

00:28:22,990 --> 00:28:31,390
site and telling ok I am now at stepsis

00:28:25,630 --> 00:28:34,480
and next comes step this and it's nice

00:28:31,390 --> 00:28:38,500
for viewing or comparing if it's really

00:28:34,480 --> 00:28:42,670
as a place that should be and yeah then

00:28:38,500 --> 00:28:45,850
when you find a bug the developers

00:28:42,670 --> 00:28:48,010
usually come and say I do you have the

00:28:45,850 --> 00:28:50,050
locks can you give them to me and I said

00:28:48,010 --> 00:28:51,820
no the test is already gun and the new

00:28:50,050 --> 00:28:57,700
test started sort overwrote the image

00:28:51,820 --> 00:29:01,570
and that's bad so I added a backlog like

00:28:57,700 --> 00:29:03,520
keeping that last 15 images and you can

00:29:01,570 --> 00:29:05,380
even download them to on the websites

00:29:03,520 --> 00:29:09,790
there's a small floppy disk image and

00:29:05,380 --> 00:29:11,710
then you can get the whole image from

00:29:09,790 --> 00:29:16,630
the install and run it yourself was KD

00:29:11,710 --> 00:29:20,140
and locally but if you just want the

00:29:16,630 --> 00:29:21,910
locks it was still too hard because such

00:29:20,140 --> 00:29:25,840
a big image and how do you look like

00:29:21,910 --> 00:29:29,200
mount it and the download time it's too

00:29:25,840 --> 00:29:32,290
hard so there's one chest step know that

00:29:29,200 --> 00:29:34,570
uploads the locks from warlock as an

00:29:32,290 --> 00:29:37,060
archive and you can download just that

00:29:34,570 --> 00:29:39,960
locker archive forms a web page

00:29:37,060 --> 00:29:43,200
separately that's very easy and you can

00:29:39,960 --> 00:29:47,679
sometimes even just depends as as as as

00:29:43,200 --> 00:29:52,940
bugzilla attachment

00:29:47,679 --> 00:29:57,799
so that's a part for the slides just

00:29:52,940 --> 00:29:59,600
some pointers like web page for the test

00:29:57,799 --> 00:30:03,530
back end which is always auto ins and

00:29:59,600 --> 00:30:06,890
the front end page which is open QA with

00:30:03,530 --> 00:30:11,500
a scheduler and web interface and to

00:30:06,890 --> 00:30:16,340
create a reference images and zoom

00:30:11,500 --> 00:30:17,900
github where there's also quote no this

00:30:16,340 --> 00:30:19,789
one has only half the coat it's a front

00:30:17,900 --> 00:30:22,909
end part and there's another one called

00:30:19,789 --> 00:30:26,480
OHS audience to wear a back end the test

00:30:22,909 --> 00:30:29,030
engine is so if you just want to test or

00:30:26,480 --> 00:30:32,600
sing it Isis you just need to test back

00:30:29,030 --> 00:30:34,700
ends audience part and then you can say

00:30:32,600 --> 00:30:36,470
okay test me this video enter it we go

00:30:34,700 --> 00:30:41,120
and run and type and type to take

00:30:36,470 --> 00:30:43,490
screenshots and make your video and that

00:30:41,120 --> 00:30:46,700
part is much easier to setup than as a

00:30:43,490 --> 00:30:53,799
whole part it's mostly just installing

00:30:46,700 --> 00:30:55,760
the packages you need and setting run so

00:30:53,799 --> 00:31:02,330
sudden we have time for some more

00:30:55,760 --> 00:31:07,159
questions yeah yeah can you explain once

00:31:02,330 --> 00:31:10,340
more how you send the keys what you need

00:31:07,159 --> 00:31:13,929
to be tested so and installation starts

00:31:10,340 --> 00:31:18,820
and then in the boot options you type

00:31:13,929 --> 00:31:24,110
some options how are they sent to kvm

00:31:18,820 --> 00:31:30,620
what synchronizes the input with the

00:31:24,110 --> 00:31:36,770
testing I hope I understand that right

00:31:30,620 --> 00:31:40,190
arm but some if you have these test

00:31:36,770 --> 00:31:43,669
results here you see these blue entries

00:31:40,190 --> 00:31:48,760
on the left engine means its links you

00:31:43,669 --> 00:31:48,760
can actually click on them look say

00:31:53,980 --> 00:32:01,270
and maybe here you want to change the

00:31:58,270 --> 00:32:01,270
software

00:32:05,260 --> 00:32:12,490
it's a bit complicated but actually ker

00:32:09,820 --> 00:32:16,570
code every test module I test that as

00:32:12,490 --> 00:32:21,130
one kernel module which has a run

00:32:16,570 --> 00:32:23,170
function over there and in the run

00:32:21,130 --> 00:32:25,540
function we can use environment

00:32:23,170 --> 00:32:28,870
variables and to decide if you want to

00:32:25,540 --> 00:32:34,410
do some part or not we can use the

00:32:28,870 --> 00:32:39,280
Sentry Marcos and there is also here

00:32:34,410 --> 00:32:41,440
call to the function right Ida which is

00:32:39,280 --> 00:32:44,290
one of the many synchronization

00:32:41,440 --> 00:32:49,650
functions that says okay at this point

00:32:44,290 --> 00:32:53,440
if we checks a processor cpu usage and

00:32:49,650 --> 00:32:56,230
when it goes under this threshold then

00:32:53,440 --> 00:32:59,110
ok it's considered idle and then we can

00:32:56,230 --> 00:33:02,940
continue there and we have other

00:32:59,110 --> 00:33:07,750
synchronizations like wait then wait

00:33:02,940 --> 00:33:11,200
still image I think and they're just

00:33:07,750 --> 00:33:14,770
late up to a certain time out for the

00:33:11,200 --> 00:33:16,240
screen to not change any more like if

00:33:14,770 --> 00:33:19,960
you have a progress bar and the progress

00:33:16,240 --> 00:33:21,520
bar is moving it will stay late and when

00:33:19,960 --> 00:33:25,410
it's finished or when the progress bar

00:33:21,520 --> 00:33:30,310
blocks for a long times and it will

00:33:25,410 --> 00:33:34,950
continue at that point and by that send

00:33:30,310 --> 00:33:40,420
key function you send keyboard typing or

00:33:34,950 --> 00:33:46,200
mouse clicks onto the screen yes mm-hmm

00:33:40,420 --> 00:33:50,860
ascend keyboard events yes yeah and I

00:33:46,200 --> 00:33:54,580
also have sent auto type macro God sends

00:33:50,860 --> 00:33:57,220
many keystrokes to type strengths

00:33:54,580 --> 00:34:00,160
because it's much easier that way so in

00:33:57,220 --> 00:34:05,920
fact you could test for the installation

00:34:00,160 --> 00:34:08,770
of MySQL if that installs correctly and

00:34:05,920 --> 00:34:12,220
you can log in and send an SQL statement

00:34:08,770 --> 00:34:18,409
and see if it creates all that yeah

00:34:12,220 --> 00:34:20,790
actually I have a test for that yeah and

00:34:18,409 --> 00:34:23,639
that's a little bit differently because

00:34:20,790 --> 00:34:26,389
you can script most parts of it my test

00:34:23,639 --> 00:34:29,399
framework just put in the script and

00:34:26,389 --> 00:34:32,610
runs the script and the script says okay

00:34:29,399 --> 00:34:36,480
I install Apache i install mysql install

00:34:32,610 --> 00:34:39,060
PHP and i install PHP my admin and then

00:34:36,480 --> 00:34:43,800
I do curl on this URL and then I expect

00:34:39,060 --> 00:34:45,629
or not sink it's just the grep and then

00:34:43,800 --> 00:34:49,830
I get a screen shot with the grep output

00:34:45,629 --> 00:34:52,940
and if it says their output is forever

00:34:49,830 --> 00:34:57,420
type maria de beers and i know our

00:34:52,940 --> 00:34:59,430
something must have worked and it's

00:34:57,420 --> 00:35:03,420
pretty much an end-to-end test because

00:34:59,430 --> 00:35:07,380
it's using the web show ever was a PHP

00:35:03,420 --> 00:35:10,140
to go over the mice connection and

00:35:07,380 --> 00:35:12,630
really Aquarius this information and if

00:35:10,140 --> 00:35:15,470
some part of this long chain would be

00:35:12,630 --> 00:35:19,020
broken we would notice in this test and

00:35:15,470 --> 00:35:21,300
that's I like this type of test much

00:35:19,020 --> 00:35:23,730
better than really testing small parts

00:35:21,300 --> 00:35:33,480
because you cover a lot of things with

00:35:23,730 --> 00:35:35,720
such a test okay ah we have a question

00:35:33,480 --> 00:35:35,720
here

00:35:40,589 --> 00:35:47,910
so you can send key strokes can you also

00:35:44,329 --> 00:35:50,009
somehow send Mouse events in case

00:35:47,910 --> 00:35:53,670
there's no keyboard supporter is really

00:35:50,009 --> 00:35:57,329
limited screens or stuff that is yeah in

00:35:53,670 --> 00:36:00,739
theory we can we can move the mouse and

00:35:57,329 --> 00:36:06,259
we can say click the mouse button and

00:36:00,739 --> 00:36:09,420
unclick but there's a buck in kvm for

00:36:06,259 --> 00:36:11,249
over three years and we have a very

00:36:09,420 --> 00:36:13,499
simple bug fix that is not accepted

00:36:11,249 --> 00:36:17,759
upstream because it does not cover this

00:36:13,499 --> 00:36:19,529
case in that case and yes it's a bit

00:36:17,759 --> 00:36:22,319
hard and the other hard part is of

00:36:19,529 --> 00:36:26,700
course you want to click a button where

00:36:22,319 --> 00:36:30,299
is this button to click so you would

00:36:26,700 --> 00:36:32,369
need some image matching again to say

00:36:30,299 --> 00:36:35,099
okay I want to click a button that looks

00:36:32,369 --> 00:36:40,589
like this and then you find the position

00:36:35,099 --> 00:36:41,759
and then you don't want to click on next

00:36:40,589 --> 00:36:44,430
to the button but in the middle of the

00:36:41,759 --> 00:36:49,109
button maybe or on the certain part of

00:36:44,430 --> 00:36:51,719
it so it can be a bit tricky so for now

00:36:49,109 --> 00:36:54,809
we just move the mouse pointer off to

00:36:51,719 --> 00:36:58,200
not interfere with the tests and if you

00:36:54,809 --> 00:37:01,849
really have software that can not be

00:36:58,200 --> 00:37:05,999
used with a keyboard it's bad software

00:37:01,849 --> 00:37:07,710
really because there are disabled people

00:37:05,999 --> 00:37:11,849
and they have really big trouble with

00:37:07,710 --> 00:37:14,489
Moses and so far yes that's really great

00:37:11,849 --> 00:37:17,400
software you can do anything with

00:37:14,489 --> 00:37:19,410
keyboard and in some places it's a bit

00:37:17,400 --> 00:37:21,809
hard because you have to tap tap tap

00:37:19,410 --> 00:37:27,359
crosser down cuz at our own tap enter

00:37:21,809 --> 00:37:30,509
and let's maybe not so nice to write as

00:37:27,359 --> 00:37:36,960
a code or to change later but it still

00:37:30,509 --> 00:37:39,359
works pretty and yeah but it is ok so

00:37:36,960 --> 00:37:41,489
for web apps but we are using pursue the

00:37:39,359 --> 00:37:43,410
manager for example you can actually

00:37:41,489 --> 00:37:46,349
click a button in the Dom tree with a

00:37:43,410 --> 00:37:48,509
with a cucumber and stuff would that

00:37:46,349 --> 00:37:50,880
sound that be something that you would

00:37:48,509 --> 00:37:52,349
integrate as a module here or do you

00:37:50,880 --> 00:37:54,420
think that's kind of a completely

00:37:52,349 --> 00:37:58,290
different area of tests

00:37:54,420 --> 00:37:59,910
should be run separately yeah of course

00:37:58,290 --> 00:38:02,490
you can run it as a separate chest

00:37:59,910 --> 00:38:05,420
completely independent of okay but in

00:38:02,490 --> 00:38:09,059
one instance I have done it for yest

00:38:05,420 --> 00:38:12,530
where we tested the QTE you I and we

00:38:09,059 --> 00:38:18,119
used another framework in Oakland PA

00:38:12,530 --> 00:38:22,260
which is called see Cody and as equally

00:38:18,119 --> 00:38:25,920
as Java software using Jason pies and

00:38:22,260 --> 00:38:27,720
applicator and that you can write tests

00:38:25,920 --> 00:38:29,760
on very different way and you can say

00:38:27,720 --> 00:38:34,859
click some buttons that looks like this

00:38:29,760 --> 00:38:36,780
and it uses the lip opencv as well so it

00:38:34,859 --> 00:38:39,359
would just install the test framework in

00:38:36,780 --> 00:38:41,940
this VM that's currently running and

00:38:39,359 --> 00:38:44,910
then I just launched the test and see

00:38:41,940 --> 00:38:47,520
what it returns so you can sort of

00:38:44,910 --> 00:38:49,319
integrate other frameworks so just for

00:38:47,520 --> 00:38:51,119
the others are the cool thing about what

00:38:49,319 --> 00:38:53,069
we are doing in to the manager testing

00:38:51,119 --> 00:38:54,900
with the cucumber and I don't know what

00:38:53,069 --> 00:38:57,869
the module is it reads the Dom tree

00:38:54,900 --> 00:38:59,579
within a browser and it knows that it's

00:38:57,869 --> 00:39:01,290
a button and regardless what the color

00:38:59,579 --> 00:39:03,240
of the button is because it goes into

00:39:01,290 --> 00:39:06,690
the tree and says okay this is where I

00:39:03,240 --> 00:39:08,190
am in the in the object tree and I send

00:39:06,690 --> 00:39:11,099
a click event like you could do from

00:39:08,190 --> 00:39:13,650
JavaScript and that works pretty well to

00:39:11,099 --> 00:39:15,960
click through all the screens in a vet

00:39:13,650 --> 00:39:18,780
appt of course you don't get the

00:39:15,960 --> 00:39:20,309
pictures so if the CSS looks ugly you

00:39:18,780 --> 00:39:22,799
don't know but you know that it works

00:39:20,309 --> 00:39:25,380
like you can create a user test whether

00:39:22,799 --> 00:39:28,230
the user exists to change the password

00:39:25,380 --> 00:39:29,790
do something that user and so on and at

00:39:28,230 --> 00:39:31,799
the same time also in the backend do

00:39:29,790 --> 00:39:35,010
things like okay that's the SQL database

00:39:31,799 --> 00:39:38,099
actually get this string and so on it's

00:39:35,010 --> 00:39:40,380
pretty cool too yeah but I think you can

00:39:38,099 --> 00:39:43,200
integrate all types of test frameworks

00:39:40,380 --> 00:39:46,609
in here of course if it runs for a day

00:39:43,200 --> 00:39:49,589
it's maybe not that useful because

00:39:46,609 --> 00:39:52,260
usually you want your over just want to

00:39:49,589 --> 00:39:54,869
be rather fast they did it at one point

00:39:52,260 --> 00:39:58,619
was a file system test there's an

00:39:54,869 --> 00:40:01,530
exhibit as test suite which can test any

00:39:58,619 --> 00:40:03,839
fair system and we used it to do some

00:40:01,530 --> 00:40:06,990
stress testing on but f as when we did

00:40:03,839 --> 00:40:12,990
it with sp2 icing

00:40:06,990 --> 00:40:21,060
and there we found some ugly questions

00:40:12,990 --> 00:40:23,910
as well yeah so maybe one more question

00:40:21,060 --> 00:40:26,160
of my party if I want to test more than

00:40:23,910 --> 00:40:28,440
one server like I need a back end in the

00:40:26,160 --> 00:40:32,190
front end and is that something that

00:40:28,440 --> 00:40:35,750
open qik to today or is it like out of

00:40:32,190 --> 00:40:39,390
the picture under certain circumstances

00:40:35,750 --> 00:40:43,200
if you can run both of them in the same

00:40:39,390 --> 00:40:46,890
machine for example I started doing it

00:40:43,200 --> 00:40:48,420
like with apache and the mysql server

00:40:46,890 --> 00:40:50,369
and the client on the same machine or

00:40:48,420 --> 00:40:52,290
you can do it was email that you

00:40:50,369 --> 00:40:54,390
installed postfix as an email server and

00:40:52,290 --> 00:40:56,670
it's in tests and abroad as an email

00:40:54,390 --> 00:41:01,050
client so you can just both parts on one

00:40:56,670 --> 00:41:03,570
machine or you could set up the server

00:41:01,050 --> 00:41:05,730
on the outside until it always running

00:41:03,570 --> 00:41:09,000
and just test the client and the test

00:41:05,730 --> 00:41:13,140
one but currently it is not made for

00:41:09,000 --> 00:41:15,240
testing more complex deployments but

00:41:13,140 --> 00:41:19,080
that's ok for the opensuse use case I

00:41:15,240 --> 00:41:22,250
think for example for or zoos a cloud

00:41:19,080 --> 00:41:25,290
OpenStack we have other frameworks that

00:41:22,250 --> 00:41:28,530
do differently and they use a number of

00:41:25,290 --> 00:41:31,680
VMs and then they can check the

00:41:28,530 --> 00:41:38,670
interaction between the VMS but let's

00:41:31,680 --> 00:41:42,980
soon as a framework so do we have more

00:41:38,670 --> 00:41:42,980
questions or

00:41:45,340 --> 00:41:54,580
no great then I thank you all for coming

00:41:48,740 --> 00:41:54,580

YouTube URL: https://www.youtube.com/watch?v=JEsJse07878


