Title: Athanasios-Ilias Rousinopoulos - How active are openSUSE members, developers and contributors?
Publication date: 2013-07-22
Playlist: openSUSE Conference 2013
Description: 
	As a part of my MSc Thesis i study the various aspects of openSUSE Project (repositories,mailing list,bugzilla) and extract information that could be used and evaluated by the openSUSE Project and any FOSS project in general (as an example). This talk aims to show the activity in openSUSE Project by using FOSS tools that measure various aspects of participation (mailing list , bugzilla , etc).
Captions: 
	00:00:00,860 --> 00:00:09,360
well this presentation is very similar

00:00:04,710 --> 00:00:12,840
to Alberta plan a swan but it's part of

00:00:09,360 --> 00:00:16,139
my master thesis so it's a more unique

00:00:12,840 --> 00:00:21,630
way to measure the participation in an

00:00:16,139 --> 00:00:25,170
open source project the motivation to do

00:00:21,630 --> 00:00:27,170
a presentation or thesis like that was

00:00:25,170 --> 00:00:32,640
that there was no previous work

00:00:27,170 --> 00:00:37,649
concerning academic world related to

00:00:32,640 --> 00:00:39,600
open suse project there was a motivate

00:00:37,649 --> 00:00:42,000
to explain how the software is being

00:00:39,600 --> 00:00:46,200
revolutionized and how the users

00:00:42,000 --> 00:00:47,899
interact with this truth and of course

00:00:46,200 --> 00:00:50,010
there was no previous information

00:00:47,899 --> 00:00:52,020
regarding to the contributed

00:00:50,010 --> 00:00:58,590
contributors and the activity of the

00:00:52,020 --> 00:01:00,780
members of opensuse so i used some tools

00:00:58,590 --> 00:01:04,769
provided by the local research group or

00:01:00,780 --> 00:01:08,070
the master studies of the head these are

00:01:04,769 --> 00:01:11,310
open source tools the first tool is CV

00:01:08,070 --> 00:01:14,580
sonali that downloads and stores in a

00:01:11,310 --> 00:01:16,770
local database local repository with

00:01:14,580 --> 00:01:20,310
comedy ideas of date with all the

00:01:16,770 --> 00:01:23,360
relevant data the second tool is the

00:01:20,310 --> 00:01:26,869
mailing list stats which download a

00:01:23,360 --> 00:01:29,490
specific mailing list but we identify

00:01:26,869 --> 00:01:33,390
stores all the data in a local database

00:01:29,490 --> 00:01:37,369
like CVS annalee the third tool is

00:01:33,390 --> 00:01:39,720
bitter which stores woods analyzes and

00:01:37,369 --> 00:01:43,860
stores in a local database and issue

00:01:39,720 --> 00:01:45,960
tracker this can be a bug tracker or for

00:01:43,860 --> 00:01:49,229
example an issue tracker form from

00:01:45,960 --> 00:01:52,979
github a slow count is an open-source

00:01:49,229 --> 00:01:56,939
tool as well which analyzes the cost of

00:01:52,979 --> 00:01:58,979
an open source project so don't think

00:01:56,939 --> 00:02:00,930
that you have to do is to run the tool

00:01:58,979 --> 00:02:05,130
and then you again then you get some

00:02:00,930 --> 00:02:08,429
information regarding to the cost the

00:02:05,130 --> 00:02:11,780
last two tools fist grimoire air and vis

00:02:08,429 --> 00:02:11,780
groomer jes

00:02:12,140 --> 00:02:16,340
the aim of these tools is to create a

00:02:13,700 --> 00:02:19,160
dashboard that can provide all the data

00:02:16,340 --> 00:02:22,040
related to the first three tools to CVS

00:02:19,160 --> 00:02:23,900
onally medical stats and bit so this

00:02:22,040 --> 00:02:28,550
grimoire air generates all the metrics

00:02:23,900 --> 00:02:34,940
and this cream rjs visualize all the

00:02:28,550 --> 00:02:37,459
generated from physical mar error so the

00:02:34,940 --> 00:02:40,040
steps are first remind the source code

00:02:37,459 --> 00:02:41,810
repository that we want to mine could be

00:02:40,040 --> 00:02:44,630
from open source or could be from

00:02:41,810 --> 00:02:48,110
another open source project the second

00:02:44,630 --> 00:02:51,860
step is to mine the mailing list from

00:02:48,110 --> 00:02:54,800
the open from the project then we mind

00:02:51,860 --> 00:02:57,920
the issue tracker we analyze the source

00:02:54,800 --> 00:03:02,840
code repository for regarding to course

00:02:57,920 --> 00:03:05,209
with slow count actually get stats is a

00:03:02,840 --> 00:03:09,230
tool that finally I didn't use for

00:03:05,209 --> 00:03:12,500
analysis but it's very relevant to see

00:03:09,230 --> 00:03:16,549
vasana lee with focus on only git

00:03:12,500 --> 00:03:19,810
repositories then we run the victim our

00:03:16,549 --> 00:03:23,600
air in order to extract all the metrics

00:03:19,810 --> 00:03:26,180
we use the our language that and the

00:03:23,600 --> 00:03:29,900
physical model provides us JSON files as

00:03:26,180 --> 00:03:32,209
an output format finally visa will

00:03:29,900 --> 00:03:35,540
visualize this JSON files with physical

00:03:32,209 --> 00:03:38,420
model GS and we have all the plots the

00:03:35,540 --> 00:03:43,489
diagrams and all the information

00:03:38,420 --> 00:03:46,880
visualized and plot it so following

00:03:43,489 --> 00:03:50,000
these steps is not enough we have to

00:03:46,880 --> 00:03:53,230
define the condition they are the

00:03:50,000 --> 00:03:58,940
condition analysis the analysis of the

00:03:53,230 --> 00:04:01,870
of the project so the conditions are we

00:03:58,940 --> 00:04:05,420
focus on the analysis zone of the

00:04:01,870 --> 00:04:07,489
software development because the

00:04:05,420 --> 00:04:09,500
repository for example like our work or

00:04:07,489 --> 00:04:13,100
like other repositories that can analyze

00:04:09,500 --> 00:04:14,570
but was out of our interest we assume

00:04:13,100 --> 00:04:16,310
that the discussion and the soft

00:04:14,570 --> 00:04:21,260
revolution takes part in the mailing

00:04:16,310 --> 00:04:22,160
list of its project likewise we assume

00:04:21,260 --> 00:04:23,810
that

00:04:22,160 --> 00:04:26,290
bug fixing and the back reporting is

00:04:23,810 --> 00:04:29,720
being implemented via the issue trackers

00:04:26,290 --> 00:04:32,540
the source code repositories the mailing

00:04:29,720 --> 00:04:34,970
list and the issue trackers have to be

00:04:32,540 --> 00:04:38,270
analyzed from vittles mentioned before

00:04:34,970 --> 00:04:40,310
without any error actually I had an

00:04:38,270 --> 00:04:46,430
error while analyzing the colonel

00:04:40,310 --> 00:04:49,610
project so the main main condition is

00:04:46,430 --> 00:04:50,960
that the repository the issue tracker

00:04:49,610 --> 00:04:53,810
and the mailing list has to be

00:04:50,960 --> 00:04:57,500
associated so you cannot analyze the

00:04:53,810 --> 00:04:59,780
factory repository and analyze the open

00:04:57,500 --> 00:05:03,650
field service mailing list and analyze

00:04:59,780 --> 00:05:06,710
this you tracker from ton load for

00:05:03,650 --> 00:05:09,470
example so we need all the data to be

00:05:06,710 --> 00:05:11,360
the same two related to the same project

00:05:09,470 --> 00:05:14,240
would be the open build service

00:05:11,360 --> 00:05:16,490
repository the open Vince Elvis ill

00:05:14,240 --> 00:05:20,240
service mailing list and they open build

00:05:16,490 --> 00:05:22,160
service issue tracker another condition

00:05:20,240 --> 00:05:24,530
which is the last one is that we

00:05:22,160 --> 00:05:27,350
selected project from open shoes that

00:05:24,530 --> 00:05:34,220
have high activity which means high

00:05:27,350 --> 00:05:39,740
number of commits so as an example I

00:05:34,220 --> 00:05:44,960
analyzed zipper the zipper project so in

00:05:39,740 --> 00:05:49,520
this diagram at this axis we see the

00:05:44,960 --> 00:05:52,220
number of commits and this is the

00:05:49,520 --> 00:05:54,650
timeline this is a bubble diagram so the

00:05:52,220 --> 00:05:58,280
bubble represents the amount of people

00:05:54,650 --> 00:06:00,620
that have this amount of comets for this

00:05:58,280 --> 00:06:03,550
period for this period of time for

00:06:00,620 --> 00:06:07,190
example in october two thousand eleven

00:06:03,550 --> 00:06:13,310
we see an amount of people with almost

00:06:07,190 --> 00:06:14,990
25 25 comets this can be more

00:06:13,310 --> 00:06:17,990
interactive while running it in the

00:06:14,990 --> 00:06:20,630
dashboard but as I've had to make a

00:06:17,990 --> 00:06:24,680
presentation not a workshop it just took

00:06:20,630 --> 00:06:27,230
a snapshot from the diagram as a matrix

00:06:24,680 --> 00:06:29,570
in define for example the top offers the

00:06:27,230 --> 00:06:31,160
top authors from the last year they

00:06:29,570 --> 00:06:33,530
offer free repository the number of

00:06:31,160 --> 00:06:35,760
files the number of branches the lines

00:06:33,530 --> 00:06:40,170
that developers and 0 meters

00:06:35,760 --> 00:06:42,630
moved added the comments / repository in

00:06:40,170 --> 00:06:45,420
our case it's one repository does the

00:06:42,630 --> 00:06:50,300
Comets apart from the source code

00:06:45,420 --> 00:06:54,690
repository I analyzed the mailing list

00:06:50,300 --> 00:06:56,550
so likewise we see the bubble we

00:06:54,690 --> 00:07:00,600
represent the amount of people that sent

00:06:56,550 --> 00:07:05,820
this message and the amount of message

00:07:00,600 --> 00:07:08,820
sent and at this point this is the

00:07:05,820 --> 00:07:12,470
timeline which begins from march two

00:07:08,820 --> 00:07:15,570
thousand seven and lasts until a may

00:07:12,470 --> 00:07:23,160
2013 because I mind and analyze the data

00:07:15,570 --> 00:07:26,660
a until May 2013 so as example of matrix

00:07:23,160 --> 00:07:30,510
you have the people the top centers a

00:07:26,660 --> 00:07:32,700
the sender's per company so in a mailing

00:07:30,510 --> 00:07:35,700
list legs Apple can participate people

00:07:32,700 --> 00:07:37,950
from Susie and people from the project

00:07:35,700 --> 00:07:41,690
so we can identify who's are from the

00:07:37,950 --> 00:07:44,160
project and who's ur from the company a

00:07:41,690 --> 00:07:48,440
likewise we can found how many people

00:07:44,160 --> 00:07:52,490
sent a message display repository and

00:07:48,440 --> 00:07:57,750
the message sent how many people sent

00:07:52,490 --> 00:08:00,270
messages so here we have the issue

00:07:57,750 --> 00:08:04,950
tracker we do finance tickets every

00:08:00,270 --> 00:08:07,410
issue submitted to their the repository

00:08:04,950 --> 00:08:11,130
oxalic github provides an issue tracker

00:08:07,410 --> 00:08:17,030
so we analyze the issue tracker provided

00:08:11,130 --> 00:08:22,800
by github we started from november to

00:08:17,030 --> 00:08:27,150
2011 and we stopped at may 2013 these

00:08:22,800 --> 00:08:29,130
are the number of the tickets so we see

00:08:27,150 --> 00:08:32,640
that the highest number he gets opened

00:08:29,130 --> 00:08:37,380
are seven and it's between September

00:08:32,640 --> 00:08:41,460
2012 and ever 2013 likewise we'll have

00:08:37,380 --> 00:08:43,440
tickets opened he gets closed openers

00:08:41,460 --> 00:08:44,950
ticket open a mystical closures and

00:08:43,440 --> 00:08:46,510
ticket to closer

00:08:44,950 --> 00:08:48,280
very positive because you can make this

00:08:46,510 --> 00:08:55,810
kind of analysis for more than one

00:08:48,280 --> 00:08:58,150
repository apart from the tools that we

00:08:55,810 --> 00:09:02,980
run we made the cost estimation the

00:08:58,150 --> 00:09:06,250
project in this case is zipper so by

00:09:02,980 --> 00:09:09,100
running the slow count you get dis dis

00:09:06,250 --> 00:09:14,190
results which is the source long slog

00:09:09,100 --> 00:09:19,300
with the total amount of lines of code

00:09:14,190 --> 00:09:23,650
the effort which we calculated based on

00:09:19,300 --> 00:09:27,670
the Kokomo model so which means person

00:09:23,650 --> 00:09:31,390
per month the schedule so we make a

00:09:27,670 --> 00:09:34,120
sagittal estimation then we divide the

00:09:31,390 --> 00:09:36,190
effort with the season and then we made

00:09:34,120 --> 00:09:40,420
the cost estimation for the development

00:09:36,190 --> 00:09:46,840
which is in dollars and we we assume

00:09:40,420 --> 00:09:49,540
that the average salary is 56,000 come

00:09:46,840 --> 00:09:52,330
up to two hundred two hundred eighty six

00:09:49,540 --> 00:09:57,840
dollars per year and they overheard is

00:09:52,330 --> 00:10:00,810
tu tu tu cama 40 these are the default

00:09:57,840 --> 00:10:03,640
configuration so if somebody wants to

00:10:00,810 --> 00:10:06,160
change the average salary or the effort

00:10:03,640 --> 00:10:12,970
or whatever has to interrupt the source

00:10:06,160 --> 00:10:14,800
code of a slow count to ok but we have

00:10:12,970 --> 00:10:17,530
apart from the analysis who had some

00:10:14,800 --> 00:10:20,140
problems at the beginning their goal was

00:10:17,530 --> 00:10:22,510
to analyze three projects they can

00:10:20,140 --> 00:10:26,740
approach the colonel project the cyber

00:10:22,510 --> 00:10:29,680
project and open field service you go

00:10:26,740 --> 00:10:32,050
back to video back to the tool Sylvia

00:10:29,680 --> 00:10:34,480
sonali we didn't manage to analyze the

00:10:32,050 --> 00:10:39,190
colonel so we'll focus on zipper and

00:10:34,480 --> 00:10:41,110
open field service if you have a look at

00:10:39,190 --> 00:10:44,800
the get Capades of open shoes you can

00:10:41,110 --> 00:10:46,840
find more than 100 projects horse it in

00:10:44,800 --> 00:10:49,750
their official webpage the official

00:10:46,840 --> 00:10:52,840
repository so it was difficult to define

00:10:49,750 --> 00:10:55,420
to find a project that fulfills all the

00:10:52,840 --> 00:10:56,890
conditions to run without error to be

00:10:55,420 --> 00:10:58,360
associated with the corresponding list

00:10:56,890 --> 00:11:03,220
and to be associated with

00:10:58,360 --> 00:11:06,250
is the corresponding issue trackers we

00:11:03,220 --> 00:11:08,560
found many a project that project that

00:11:06,250 --> 00:11:10,240
fulfill these conditions but some of

00:11:08,560 --> 00:11:12,550
them didn't fulfill but we need a high

00:11:10,240 --> 00:11:16,420
activity so what means high number of

00:11:12,550 --> 00:11:20,740
comets of the issue tracker or from the

00:11:16,420 --> 00:11:22,930
source code repository another problem

00:11:20,740 --> 00:11:26,380
that we face this is related with the

00:11:22,930 --> 00:11:27,730
software because this grimoire air and

00:11:26,380 --> 00:11:30,310
physical Mars areas have many

00:11:27,730 --> 00:11:31,959
dependencies in there so many many

00:11:30,310 --> 00:11:35,110
packages aren't many many dependencies

00:11:31,959 --> 00:11:45,399
around packets so we had to face all

00:11:35,110 --> 00:11:48,670
these problems and and to make the tools

00:11:45,399 --> 00:11:50,769
to be able to run so the main problem

00:11:48,670 --> 00:11:53,550
was that this tools vistamar air and

00:11:50,769 --> 00:11:55,390
visceral mars is well documented and

00:11:53,550 --> 00:11:57,700
packets only for debian based

00:11:55,390 --> 00:12:00,130
distributions even if in fedora for

00:11:57,700 --> 00:12:02,529
example they are packages the necessary

00:12:00,130 --> 00:12:07,810
packages were not available in there Pam

00:12:02,529 --> 00:12:09,640
format so the solution is to study the

00:12:07,810 --> 00:12:13,690
how to's and the documentation in order

00:12:09,640 --> 00:12:15,490
to install probably the tools one facing

00:12:13,690 --> 00:12:18,760
a problem conduct to the corresponding

00:12:15,490 --> 00:12:21,970
person for solutions or setting to the

00:12:18,760 --> 00:12:26,410
web app offers from scratch all the

00:12:21,970 --> 00:12:29,050
dependencies and make them run report an

00:12:26,410 --> 00:12:31,839
easier buck faced due to runtime errors

00:12:29,050 --> 00:12:35,350
or while using the tools conduct the

00:12:31,839 --> 00:12:38,079
developers in IRC in a mail or personal

00:12:35,350 --> 00:12:40,720
and document the whole process so

00:12:38,079 --> 00:12:48,670
anybody in the future can repeat this

00:12:40,720 --> 00:12:53,350
kind of analysis so as a future work I

00:12:48,670 --> 00:12:55,990
could state that the first first goal is

00:12:53,350 --> 00:12:57,730
to solve that bug related to the tool

00:12:55,990 --> 00:13:02,620
and analyze the colonel repository of

00:12:57,730 --> 00:13:06,850
open shoes as Alberto so sold before

00:13:02,620 --> 00:13:10,300
it's a good idea to interact too so the

00:13:06,850 --> 00:13:12,130
social media retraction to solve the

00:13:10,300 --> 00:13:15,490
social media interaction

00:13:12,130 --> 00:13:17,530
of the developers and contributors to

00:13:15,490 --> 00:13:19,320
apply the same methodology explained

00:13:17,530 --> 00:13:24,400
before in other free and open source

00:13:19,320 --> 00:13:29,230
distributions to compare the package

00:13:24,400 --> 00:13:33,130
manager notes zypher with young because

00:13:29,230 --> 00:13:36,040
it's our pen-based to compare other

00:13:33,130 --> 00:13:39,430
debian-based packets managers for

00:13:36,040 --> 00:13:42,040
example apd apt-get with other debian

00:13:39,430 --> 00:13:44,470
package managers and to make research on

00:13:42,040 --> 00:13:47,200
the developers activity if they solved

00:13:44,470 --> 00:13:49,750
the bugs the number of commits their

00:13:47,200 --> 00:13:52,830
participation in repositories whoo-hoo

00:13:49,750 --> 00:14:00,300
it's the core team of developers in its

00:13:52,830 --> 00:14:00,300
project any questions

00:14:05,689 --> 00:14:11,670
hey what's the reason behind not

00:14:09,749 --> 00:14:13,559
analyzing any repositories that don't

00:14:11,670 --> 00:14:18,800
have an issue tracker on or a mailing

00:14:13,559 --> 00:14:21,749
list that's them and your results are

00:14:18,800 --> 00:14:24,449
unpredictable you can't get enough

00:14:21,749 --> 00:14:27,930
information booth the polling behind

00:14:24,449 --> 00:14:30,809
that the main reason is to see if the

00:14:27,930 --> 00:14:32,970
contributor solved the box of the

00:14:30,809 --> 00:14:35,579
participate in the issue tracker of if

00:14:32,970 --> 00:14:39,680
if their communicate via the mailing

00:14:35,579 --> 00:14:39,680
list okay

00:14:45,040 --> 00:14:52,820
can there be metrics on marketing I mean

00:14:49,280 --> 00:14:59,840
can you find some variables in order to

00:14:52,820 --> 00:15:03,200
a measure marketing work if they have a

00:14:59,840 --> 00:15:07,490
repository no no no no I that's that's

00:15:03,200 --> 00:15:11,240
what I meant excuse me is there a way to

00:15:07,490 --> 00:15:14,060
do something like that witness a metric

00:15:11,240 --> 00:15:16,340
in something that actually has not met a

00:15:14,060 --> 00:15:18,680
repository I mean if I remember

00:15:16,340 --> 00:15:23,930
correctly you tried something like that

00:15:18,680 --> 00:15:27,830
and connect right few years ago yeah

00:15:23,930 --> 00:15:31,010
what what happened to that nothing

00:15:27,830 --> 00:15:33,380
finally but for the marketing you can

00:15:31,010 --> 00:15:36,170
use the mailing list as a measurement as

00:15:33,380 --> 00:15:38,690
a metric so you see people if they post

00:15:36,170 --> 00:15:40,850
in the marketing list control there is

00:15:38,690 --> 00:15:44,330
no tool to analyze the participation the

00:15:40,850 --> 00:15:46,280
forums or in the IRC for example to

00:15:44,330 --> 00:15:48,200
analyze the lock of a meeting of a

00:15:46,280 --> 00:15:50,630
marketing meeting to see if the people

00:15:48,200 --> 00:15:54,200
are participating is there something

00:15:50,630 --> 00:15:56,780
like make the bot measure and send that

00:15:54,200 --> 00:15:58,370
measurements and then something like

00:15:56,780 --> 00:16:03,220
this but I need the log files of the

00:15:58,370 --> 00:16:10,030
airship for example yep I'm just getting

00:16:03,220 --> 00:16:10,030
this can be done to me another question

00:16:10,840 --> 00:16:14,950
thank you look

00:16:23,570 --> 00:16:25,630

YouTube URL: https://www.youtube.com/watch?v=zZJP4qJnAuo


