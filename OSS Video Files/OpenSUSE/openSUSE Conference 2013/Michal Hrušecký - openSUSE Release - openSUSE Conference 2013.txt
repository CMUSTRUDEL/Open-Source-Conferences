Title: Michal Hrušecký - openSUSE Release - openSUSE Conference 2013
Publication date: 2013-07-22
Playlist: openSUSE Conference 2013
Description: 
	Releasing new openSUSE version is a complex process. There is plenty of people working on it and it consists of various actions from different fields. This talk will present how the release is done, what are all the actions needed to get new openSUSE out and how can you pitch in.
Captions: 
	00:00:00,199 --> 00:00:08,519
hi everybody so this talk is not going

00:00:04,620 --> 00:00:11,250
to be purely done by me we will switch

00:00:08,519 --> 00:00:14,660
in the middle and I will be speaking

00:00:11,250 --> 00:00:20,490
about technical side of the release

00:00:14,660 --> 00:00:22,230
because well I'm an engineer and I'm

00:00:20,490 --> 00:00:26,039
working on the technical part with my

00:00:22,230 --> 00:00:28,980
colleagues and for the other part we

00:00:26,039 --> 00:00:31,230
will have your support fleet and he will

00:00:28,980 --> 00:00:34,200
speak about the marketing and stuff

00:00:31,230 --> 00:00:37,050
because he can speak and he can write

00:00:34,200 --> 00:00:44,719
and do crazy stuff and get people's

00:00:37,050 --> 00:00:48,600
attention that's what I can't do so how

00:00:44,719 --> 00:00:50,910
actually our release works let's start

00:00:48,600 --> 00:00:55,140
from the beginning let's say that we

00:00:50,910 --> 00:00:57,960
just released new open Suzy so what's

00:00:55,140 --> 00:01:01,739
next what do we do that what do we do

00:00:57,960 --> 00:01:05,030
next well we need to start developing

00:01:01,739 --> 00:01:08,100
with factory so we need to unfreeze it

00:01:05,030 --> 00:01:12,960
besides on some roadmap cool does that

00:01:08,100 --> 00:01:15,770
and start with developing when we

00:01:12,960 --> 00:01:22,470
develop everything we freeze it again

00:01:15,770 --> 00:01:26,250
test it fix it branch it fix it some

00:01:22,470 --> 00:01:30,630
more and then we release it sounds

00:01:26,250 --> 00:01:33,450
simple right so let's get into some more

00:01:30,630 --> 00:01:35,009
details let's start with that factory

00:01:33,450 --> 00:01:39,630
development that's what we are doing

00:01:35,009 --> 00:01:41,640
right now still the thing about factory

00:01:39,630 --> 00:01:44,899
development is it's never ending story

00:01:41,640 --> 00:01:48,420
you always have new versions of packages

00:01:44,899 --> 00:01:51,409
there are always people trying to do new

00:01:48,420 --> 00:01:53,909
stuff fix something that didn't work or

00:01:51,409 --> 00:01:56,360
improve something that already worked

00:01:53,909 --> 00:02:01,979
and they are constantly breaking stuff

00:01:56,360 --> 00:02:04,200
so factory as we heard today several

00:02:01,979 --> 00:02:06,990
times it's constantly changing

00:02:04,200 --> 00:02:10,869
constantly breaking and constantly

00:02:06,990 --> 00:02:15,280
fixing so it

00:02:10,869 --> 00:02:19,930
is really hard to hard to follow how to

00:02:15,280 --> 00:02:22,930
use but it's a lot of fun and it's a lot

00:02:19,930 --> 00:02:26,530
of work to keep it at least a little bit

00:02:22,930 --> 00:02:32,890
stable so some people can actually use

00:02:26,530 --> 00:02:37,030
it now how this development process

00:02:32,890 --> 00:02:40,870
works let's say that we've got package

00:02:37,030 --> 00:02:44,560
through and there is a new version or no

00:02:40,870 --> 00:02:47,560
new feature that we want to push so we

00:02:44,560 --> 00:02:50,230
will create your home project which will

00:02:47,560 --> 00:02:52,859
contain the package foo and do although

00:02:50,230 --> 00:02:55,510
your change is there you will test it

00:02:52,859 --> 00:02:57,879
you will try to use it you will see

00:02:55,510 --> 00:03:00,670
whether it works whether it's fine and

00:02:57,879 --> 00:03:03,250
then you need to push it to some develop

00:03:00,670 --> 00:03:05,290
project either you already have for the

00:03:03,250 --> 00:03:06,310
web project assigned to the package

00:03:05,290 --> 00:03:08,349
because it was already in the

00:03:06,310 --> 00:03:12,640
distribution that would be the case

00:03:08,349 --> 00:03:16,599
which is more complicated in the end

00:03:12,640 --> 00:03:19,510
part if you don't have it yet you need

00:03:16,599 --> 00:03:22,750
to find some devil projects which kinda

00:03:19,510 --> 00:03:26,470
corresponds to what packages package who

00:03:22,750 --> 00:03:30,519
is about and then you submit it we are

00:03:26,470 --> 00:03:34,030
built service of course and there are

00:03:30,519 --> 00:03:37,419
maintenance of that Devil project they

00:03:34,030 --> 00:03:42,190
will take a look at the package take a

00:03:37,419 --> 00:03:45,459
look at how did you package it and they

00:03:42,190 --> 00:03:47,500
will give you some review I do they will

00:03:45,459 --> 00:03:50,230
gladly accept it because it's fine and

00:03:47,500 --> 00:03:55,440
they see that you done everything

00:03:50,230 --> 00:03:59,560
correctly or they will tell you hey this

00:03:55,440 --> 00:04:03,609
little thingy it's not well done you

00:03:59,560 --> 00:04:05,230
should do it this way so this is the

00:04:03,609 --> 00:04:09,010
first day of you that you will get and

00:04:05,230 --> 00:04:15,819
then packaged food is in the devil

00:04:09,010 --> 00:04:17,919
project here now the project is not the

00:04:15,819 --> 00:04:20,890
end stop you obviously want to have it

00:04:17,919 --> 00:04:24,180
in factory and consequently in the

00:04:20,890 --> 00:04:27,840
release so you send it to factory

00:04:24,180 --> 00:04:31,110
and then there is another bunch of

00:04:27,840 --> 00:04:34,410
reviews some of them are automatic some

00:04:31,110 --> 00:04:38,180
of them are manual some people will take

00:04:34,410 --> 00:04:40,229
a look at your package again and try to

00:04:38,180 --> 00:04:44,090
see whether there is something wrong

00:04:40,229 --> 00:04:48,169
with it before it ends up in factory and

00:04:44,090 --> 00:04:50,699
then it ends up in the factory and

00:04:48,169 --> 00:04:56,250
although you've done everything you

00:04:50,699 --> 00:05:00,180
could and everybody in the in the review

00:04:56,250 --> 00:05:04,590
teams with their best you overlooked

00:05:00,180 --> 00:05:08,880
package bar which depends on package

00:05:04,590 --> 00:05:12,240
full and kind of broke because of your

00:05:08,880 --> 00:05:17,849
new features so now somebody has to go

00:05:12,240 --> 00:05:21,660
and take the package bar branch it fix

00:05:17,849 --> 00:05:24,539
it send it to the devil soon they send

00:05:21,660 --> 00:05:26,340
it to the devil project again some

00:05:24,539 --> 00:05:29,370
people will review it again and then

00:05:26,340 --> 00:05:32,460
send it back to factory and that's how

00:05:29,370 --> 00:05:34,380
big it is flow and now there is a chance

00:05:32,460 --> 00:05:36,690
that there is some other package that

00:05:34,380 --> 00:05:41,400
depends on bar that will get broken and

00:05:36,690 --> 00:05:47,580
you go again and that's how factory

00:05:41,400 --> 00:05:51,150
lives so there are a lot of packages

00:05:47,580 --> 00:05:53,370
that are getting in every day there are

00:05:51,150 --> 00:05:55,259
lots of packages that are getting broken

00:05:53,370 --> 00:05:56,970
every day and there are a lot of

00:05:55,259 --> 00:06:00,539
packages that are getting fixed every

00:05:56,970 --> 00:06:02,940
day if you want to help you can go to

00:06:00,539 --> 00:06:07,590
the build service take a look at what's

00:06:02,940 --> 00:06:10,259
broken and start fixing it I think no

00:06:07,590 --> 00:06:16,050
maintainer would object if you fix his

00:06:10,259 --> 00:06:18,389
package for him so that's one one easy

00:06:16,050 --> 00:06:23,729
way how you can start contributing to

00:06:18,389 --> 00:06:26,280
factory and yeah it is if you have free

00:06:23,729 --> 00:06:33,090
evening just take some package and pick

00:06:26,280 --> 00:06:35,099
something now with bit about the reviews

00:06:33,090 --> 00:06:37,510
that are done when you are checking

00:06:35,099 --> 00:06:41,560
package into factory

00:06:37,510 --> 00:06:46,200
we've got some factory outdoor which

00:06:41,560 --> 00:06:49,360
checks just roughly whether

00:06:46,200 --> 00:06:53,410
automatically whether download links are

00:06:49,360 --> 00:06:57,580
okay RPM RPM lint warnings and stuff

00:06:53,410 --> 00:07:00,520
like that we've got a legal outer which

00:06:57,580 --> 00:07:03,130
automatically checks the packages that

00:07:00,520 --> 00:07:05,620
were already in factory and checks

00:07:03,130 --> 00:07:09,400
whether there is something something

00:07:05,620 --> 00:07:14,100
suspicious changed and my needs a legal

00:07:09,400 --> 00:07:23,050
review maybe you maybe some package

00:07:14,100 --> 00:07:25,230
embedded some okay we've got UFO aliens

00:07:23,050 --> 00:07:25,230
are here

00:07:36,900 --> 00:07:39,500
ok

00:07:39,889 --> 00:07:46,749
I'm getting hungry okay we will go to

00:07:43,009 --> 00:07:51,050
the bar and order food ok back to the

00:07:46,749 --> 00:07:53,150
reviews legal outer checks package

00:07:51,050 --> 00:07:55,999
whether there is something that might

00:07:53,150 --> 00:08:00,469
need a legal review if it needs it will

00:07:55,999 --> 00:08:03,949
trigger legal team that will review it

00:08:00,469 --> 00:08:08,029
manually sometimes package and that

00:08:03,949 --> 00:08:11,539
other libraries and licenses change

00:08:08,029 --> 00:08:15,020
surely debate somebody makes typos in

00:08:11,539 --> 00:08:17,719
licenses and stuff like that I will

00:08:15,020 --> 00:08:20,800
always have to take care of that then

00:08:17,719 --> 00:08:23,360
there is a open to say review team

00:08:20,800 --> 00:08:25,819
opensuse review team is actually a bunch

00:08:23,360 --> 00:08:28,699
of people debts that are taking you look

00:08:25,819 --> 00:08:31,550
at your packages manually they are

00:08:28,699 --> 00:08:33,649
reading them and they are deciding

00:08:31,550 --> 00:08:36,409
whether they are good and they are

00:08:33,649 --> 00:08:39,680
trying to spot things that factory auto

00:08:36,409 --> 00:08:43,459
or other automatic checks didn't spot

00:08:39,680 --> 00:08:48,949
and they can obviously understand what's

00:08:43,459 --> 00:08:51,290
going on and there is also factory repo

00:08:48,949 --> 00:08:54,680
checker which is another automatic

00:08:51,290 --> 00:08:58,100
script and this one does more deep

00:08:54,680 --> 00:09:01,610
testing it checks well it checks whether

00:08:58,100 --> 00:09:03,529
it builds and whether it it's buildable

00:09:01,610 --> 00:09:05,630
in factory but it also checks whether it

00:09:03,529 --> 00:09:07,519
is install able in the pen factory

00:09:05,630 --> 00:09:10,100
whether you can actually install the

00:09:07,519 --> 00:09:12,649
resulting package and do whether there

00:09:10,100 --> 00:09:15,620
are some file conflicts with packages

00:09:12,649 --> 00:09:20,660
that are already in you might seen some

00:09:15,620 --> 00:09:23,269
errors in your submissions I think it

00:09:20,660 --> 00:09:27,140
was implemented not so long ago well

00:09:23,269 --> 00:09:30,470
maybe half a year or something and yeah

00:09:27,140 --> 00:09:34,970
we are trying to prevent two packages

00:09:30,470 --> 00:09:39,709
providing the same files so things will

00:09:34,970 --> 00:09:43,910
broke again and this thing is triggered

00:09:39,709 --> 00:09:48,319
by factory auto by up when this basic

00:09:43,910 --> 00:09:51,440
checks are processed and if package

00:09:48,319 --> 00:09:52,520
passes these basic checks it goes to the

00:09:51,440 --> 00:09:56,330
deep

00:09:52,520 --> 00:09:59,090
d projects and if it passes even to hear

00:09:56,330 --> 00:10:01,490
it will get to the queue for the manual

00:09:59,090 --> 00:10:08,720
review team that will take for the

00:10:01,490 --> 00:10:11,390
humans to take a look at it so let's say

00:10:08,720 --> 00:10:13,840
that we finished developing our opensuse

00:10:11,390 --> 00:10:17,660
and now it's time to do feature freeze

00:10:13,840 --> 00:10:22,910
what are the future freezes and why are

00:10:17,660 --> 00:10:27,620
they there as I said factory is breaking

00:10:22,910 --> 00:10:30,290
all the time and it's a good thing it's

00:10:27,620 --> 00:10:32,510
a fun but at some point we want to

00:10:30,290 --> 00:10:35,330
release something stable so we need to

00:10:32,510 --> 00:10:39,230
stop breaking stuff and that's called

00:10:35,330 --> 00:10:41,570
feature freeze we are we stop breaking

00:10:39,230 --> 00:10:50,680
stuff and concentrate only on fixing

00:10:41,570 --> 00:10:54,470
stuff that is already broken there are

00:10:50,680 --> 00:10:58,120
feature freeze is divided into multiple

00:10:54,470 --> 00:11:02,120
phases we start with two chain freeze

00:10:58,120 --> 00:11:06,470
which freezes some really basic core

00:11:02,120 --> 00:11:09,380
stuff like autocom ultimate GCC and

00:11:06,470 --> 00:11:12,700
stuff that we need to build actually the

00:11:09,380 --> 00:11:18,140
factory a factory or distribution

00:11:12,700 --> 00:11:22,400
because this stuff can break a lot when

00:11:18,140 --> 00:11:26,510
we freeze this stuff that happened

00:11:22,400 --> 00:11:30,050
yesterday or something if I count

00:11:26,510 --> 00:11:32,840
correctly donate then we still have some

00:11:30,050 --> 00:11:37,910
time to push your changes so if you

00:11:32,840 --> 00:11:41,360
haven't done so yet you still can and we

00:11:37,910 --> 00:11:46,250
will have based system freeze work

00:11:41,360 --> 00:11:50,300
colonel KD Nome x 11 and stuff like that

00:11:46,250 --> 00:11:52,580
will get frozen because yeah there is

00:11:50,300 --> 00:11:57,230
quite a bunch of packages that depend on

00:11:52,580 --> 00:12:00,410
them as well so yeah we need to freeze

00:11:57,230 --> 00:12:03,410
them and some lift package you still

00:12:00,410 --> 00:12:06,850
might get some updates because they are

00:12:03,410 --> 00:12:06,850
not going to break too much

00:12:07,340 --> 00:12:19,440
and yeah we've got full feature fees

00:12:14,150 --> 00:12:22,800
from that point onwards no no fixes oh

00:12:19,440 --> 00:12:28,560
no no updates no breaking stuff only

00:12:22,800 --> 00:12:32,250
fixes and there are of course some

00:12:28,560 --> 00:12:34,920
little exceptions if you can convince

00:12:32,250 --> 00:12:39,390
people that your update actually fixes

00:12:34,920 --> 00:12:42,950
more than it can break and but it's hard

00:12:39,390 --> 00:12:46,350
if you want to try convince cool that

00:12:42,950 --> 00:12:48,450
your stuff is really really that

00:12:46,350 --> 00:12:53,460
important that it should go in even

00:12:48,450 --> 00:13:00,380
after feature freeze you would have to

00:12:53,460 --> 00:13:05,280
have good or reasoning behind that and

00:13:00,380 --> 00:13:10,400
at some point we will branch or factory

00:13:05,280 --> 00:13:13,800
and we will create opensuse 13.1 and

00:13:10,400 --> 00:13:17,310
then factory and released open to

00:13:13,800 --> 00:13:19,590
several starts to diverge factory will

00:13:17,310 --> 00:13:25,260
get unfrozen we can start breaking it

00:13:19,590 --> 00:13:28,200
again and updates in factory will not

00:13:25,260 --> 00:13:33,780
affect the distribution that we are

00:13:28,200 --> 00:13:36,810
trying to release and updates are not

00:13:33,780 --> 00:13:38,850
going to get well unless it is really

00:13:36,810 --> 00:13:41,460
important it's not going to get to the

00:13:38,850 --> 00:13:44,430
distribution itself but directly to the

00:13:41,460 --> 00:13:48,120
update report so when we actually

00:13:44,430 --> 00:13:50,460
release new opensuse they are usually

00:13:48,120 --> 00:13:55,290
few packages already waiting you for you

00:13:50,460 --> 00:13:58,560
to update so directly after installing

00:13:55,290 --> 00:14:05,490
opensuse you can try updating it to fix

00:13:58,560 --> 00:14:11,190
some more stuff now the important part

00:14:05,490 --> 00:14:15,090
of whole process is testing there are

00:14:11,190 --> 00:14:19,010
too many combination of stuff to test so

00:14:15,090 --> 00:14:19,010
we obviously can't test

00:14:19,070 --> 00:14:24,540
hopefully there are various

00:14:22,590 --> 00:14:28,140
architectures there are various

00:14:24,540 --> 00:14:34,290
installation media there are various

00:14:28,140 --> 00:14:37,410
installation options and there are a lot

00:14:34,290 --> 00:14:39,960
of daily builds of factory we've got

00:14:37,410 --> 00:14:43,320
milestones we've got beat us we've got

00:14:39,960 --> 00:14:48,870
our seas so there is a lot of things to

00:14:43,320 --> 00:14:52,440
test what do we do well one thing is

00:14:48,870 --> 00:14:55,920
open PA open pure is great thing because

00:14:52,440 --> 00:15:00,030
we don't need that many people well we

00:14:55,920 --> 00:15:03,380
can always use many people but open QA

00:15:00,030 --> 00:15:09,380
does a lot of stuff automatically so

00:15:03,380 --> 00:15:12,480
okay so we can spot what's breaking and

00:15:09,380 --> 00:15:15,060
but because it's automatic still

00:15:12,480 --> 00:15:17,910
somebody needs to verify it need to

00:15:15,060 --> 00:15:23,610
check whether it is actually back in

00:15:17,910 --> 00:15:26,580
open QA or whether it is back in actual

00:15:23,610 --> 00:15:31,190
factory reddit when it's verified it

00:15:26,580 --> 00:15:35,240
needs to be reported we are bugzilla and

00:15:31,190 --> 00:15:40,260
we've got manual manual testing for some

00:15:35,240 --> 00:15:43,500
stuff because yeah ufe we can emyr eight

00:15:40,260 --> 00:15:46,500
that we need to check that it actually

00:15:43,500 --> 00:15:50,370
is implemented in hardware the same way

00:15:46,500 --> 00:15:59,100
as in qmo and some hardware we need to

00:15:50,370 --> 00:16:04,350
check manual so how it works from

00:15:59,100 --> 00:16:08,790
obvious we get some release open QA well

00:16:04,350 --> 00:16:11,570
test it or people will test it and then

00:16:08,790 --> 00:16:14,610
somebody has to take a look at open QA

00:16:11,570 --> 00:16:16,260
results that's actually another nice

00:16:14,610 --> 00:16:20,880
thing that you can do if you have spare

00:16:16,260 --> 00:16:24,960
evening go to the open QA take a look at

00:16:20,880 --> 00:16:27,510
what's failing and figure out what went

00:16:24,960 --> 00:16:30,220
wrong and try to reproduce it and if

00:16:27,510 --> 00:16:33,220
it's irreducible

00:16:30,220 --> 00:16:36,730
it's really back in factory or milestone

00:16:33,220 --> 00:16:41,920
or beat down or whatever report it to

00:16:36,730 --> 00:16:48,180
bug Zuma and somebody will fix it and

00:16:41,920 --> 00:16:51,400
send it back to OBS next thing when we

00:16:48,180 --> 00:16:54,600
test it and fix everything we need to

00:16:51,400 --> 00:16:58,900
select the gold master that's one of the

00:16:54,600 --> 00:17:01,720
automatic builds that is good enough it

00:16:58,900 --> 00:17:05,110
doesn't have any really critical stuff

00:17:01,720 --> 00:17:10,390
that we cannot fix afterwards we are we

00:17:05,110 --> 00:17:12,850
are update its installable that's it's

00:17:10,390 --> 00:17:16,810
really important to be able to install

00:17:12,850 --> 00:17:21,480
it and well everything else can be fixed

00:17:16,810 --> 00:17:27,820
afterwards but we are trying to get it a

00:17:21,480 --> 00:17:33,430
good as well and the yeah gold master is

00:17:27,820 --> 00:17:41,170
so our next release we update web pages

00:17:33,430 --> 00:17:47,200
and yeah check how people like the reefs

00:17:41,170 --> 00:17:49,720
and I believe that's it you hurt about

00:17:47,200 --> 00:17:52,510
how we how do we track what's going on

00:17:49,720 --> 00:17:54,940
after we release the gold master from

00:17:52,510 --> 00:17:57,400
our better in this morning and now I

00:17:54,940 --> 00:18:03,870
hand over to us to do something about

00:17:57,400 --> 00:18:03,870
marketing all right come on clap for him

00:18:04,650 --> 00:18:11,410
okay how okay you switched okay because

00:18:10,030 --> 00:18:13,800
you couldn't get it to work on my laptop

00:18:11,410 --> 00:18:13,800
or

00:18:16,210 --> 00:18:20,010
I think remove your assumption

00:18:31,230 --> 00:18:34,230
so

00:19:07,450 --> 00:19:11,399
let's talk about release marketing now

00:19:11,580 --> 00:19:18,580
well I'm going to start with what we do

00:19:16,029 --> 00:19:21,600
so release marketing i think has two

00:19:18,580 --> 00:19:24,130
important part it's it's a lot of work

00:19:21,600 --> 00:19:26,950
that's of course preparation for the

00:19:24,130 --> 00:19:29,500
release and most of that we do in the

00:19:26,950 --> 00:19:31,059
two months before the release and you

00:19:29,500 --> 00:19:34,990
should think about you know the lease

00:19:31,059 --> 00:19:38,080
counters budgets posters and things that

00:19:34,990 --> 00:19:40,269
we put up on the web to to tell people

00:19:38,080 --> 00:19:41,620
about what's coming to excite them to

00:19:40,269 --> 00:19:43,659
allow them to build things for example

00:19:41,620 --> 00:19:45,880
on our website had twitter backgrounds

00:19:43,659 --> 00:19:47,470
things like that it's really about

00:19:45,880 --> 00:19:49,630
building up a little bit of excitement

00:19:47,470 --> 00:19:53,799
part of it is also to sneak peeks if we

00:19:49,630 --> 00:19:56,350
write so we write articles where people

00:19:53,799 --> 00:19:58,950
can see some highlights of the features

00:19:56,350 --> 00:20:01,659
that are coming in the next release now

00:19:58,950 --> 00:20:03,220
that's a preparation and the other side

00:20:01,659 --> 00:20:06,250
of it is of course the marketing of the

00:20:03,220 --> 00:20:08,320
release itself we write a feature guide

00:20:06,250 --> 00:20:12,010
and we take from the feature guide the

00:20:08,320 --> 00:20:13,539
highlights we create screenshots we

00:20:12,010 --> 00:20:16,090
write the announcement for the website

00:20:13,539 --> 00:20:20,799
for the mailing lists for the press

00:20:16,090 --> 00:20:22,480
release we put all of that together with

00:20:20,799 --> 00:20:25,149
a list of people to be interviewed and

00:20:22,480 --> 00:20:27,639
some interesting quotes and we sent that

00:20:25,149 --> 00:20:30,070
to the press about a week before release

00:20:27,639 --> 00:20:33,309
with the gold master so that the press

00:20:30,070 --> 00:20:35,019
can test it play with it look at the

00:20:33,309 --> 00:20:36,789
release now to look at the announcements

00:20:35,019 --> 00:20:38,950
and prepare articles that can then be

00:20:36,789 --> 00:20:41,649
released on the same day so that way

00:20:38,950 --> 00:20:44,139
that's why we get 10 20 reviews on the

00:20:41,649 --> 00:20:48,730
day of the release we sent them to stuff

00:20:44,139 --> 00:20:50,980
in advance now there is all a lot of

00:20:48,730 --> 00:20:52,990
work and the thing that you need to

00:20:50,980 --> 00:20:55,320
understand is that it all begins with

00:20:52,990 --> 00:20:58,809
features that's where it all comes from

00:20:55,320 --> 00:21:00,399
the developers give us a list of

00:20:58,809 --> 00:21:02,710
features at least that's what we need

00:21:00,399 --> 00:21:04,539
from them and we use that first to make

00:21:02,710 --> 00:21:06,399
a feature guide which is an extensive

00:21:04,539 --> 00:21:08,620
overview of everything that's new in the

00:21:06,399 --> 00:21:10,990
release and I'm from the future guides

00:21:08,620 --> 00:21:13,990
well we put the few guards on the

00:21:10,990 --> 00:21:17,409
website we put it in the press kit and

00:21:13,990 --> 00:21:20,500
we use it to pick out the top 10 top

00:21:17,409 --> 00:21:22,210
eleven twelve roughly

00:21:20,500 --> 00:21:24,010
product highlights the most important

00:21:22,210 --> 00:21:26,380
features most important changes in the

00:21:24,010 --> 00:21:28,330
new officers release and out of the

00:21:26,380 --> 00:21:30,610
product highlights we can write the

00:21:28,330 --> 00:21:34,540
announcement or the three announcements

00:21:30,610 --> 00:21:36,610
exit that we have and we put it on the

00:21:34,540 --> 00:21:39,270
website and we also use that for the

00:21:36,610 --> 00:21:42,730
social media messages that we sent out

00:21:39,270 --> 00:21:46,210
on the release day so but it all starts

00:21:42,730 --> 00:21:50,590
with the features now from developers we

00:21:46,210 --> 00:21:52,780
need those features we need to know what

00:21:50,590 --> 00:21:54,430
the major changes are that are coming

00:21:52,780 --> 00:21:56,950
and opensuse and I want to stress this

00:21:54,430 --> 00:21:58,810
because developers often say look I'm

00:21:56,950 --> 00:22:01,000
not a marketing guy I don't need to

00:21:58,810 --> 00:22:03,940
write no you don't but you do need to

00:22:01,000 --> 00:22:07,300
tell us what is coming and how big it is

00:22:03,940 --> 00:22:11,380
so how big the changes are and what they

00:22:07,300 --> 00:22:14,770
are the thing to understand is you don't

00:22:11,380 --> 00:22:16,900
need to figure out where all the other

00:22:14,770 --> 00:22:19,780
features are and how it fits with your

00:22:16,900 --> 00:22:23,470
feature you just need to tell us how big

00:22:19,780 --> 00:22:26,170
the feature is for you so if your day

00:22:23,470 --> 00:22:28,720
maintainer of let's say postgresql and

00:22:26,170 --> 00:22:30,490
there's new version of this that you

00:22:28,720 --> 00:22:33,340
need to tell us how big a deal this is

00:22:30,490 --> 00:22:35,050
for users of postgres you don't need to

00:22:33,340 --> 00:22:36,850
look at other database you don't need to

00:22:35,050 --> 00:22:39,790
look at KD and now you just need to say

00:22:36,850 --> 00:22:42,370
okay this release well it's mostly a

00:22:39,790 --> 00:22:45,130
bug-fix release okay that's what we need

00:22:42,370 --> 00:22:46,900
to know maybe that is significant

00:22:45,130 --> 00:22:48,400
because the database is really important

00:22:46,900 --> 00:22:51,430
in this release or maybe it's not

00:22:48,400 --> 00:22:54,430
important yeah the thing is we will look

00:22:51,430 --> 00:22:56,110
at a big picture and we will see you

00:22:54,430 --> 00:22:57,730
know all the features that are new as

00:22:56,110 --> 00:22:59,650
reported by the developers and then we

00:22:57,730 --> 00:23:02,410
can see how important a specific feature

00:22:59,650 --> 00:23:04,810
is so again from a developer we don't

00:23:02,410 --> 00:23:07,210
need this we just need you to tell us

00:23:04,810 --> 00:23:11,170
how important it is for you and your

00:23:07,210 --> 00:23:12,760
users and the other side of it is we

00:23:11,170 --> 00:23:15,310
just need to know the changes you don't

00:23:12,760 --> 00:23:16,750
need to write a whole fancy text you

00:23:15,310 --> 00:23:18,820
just need to give us some bullet points

00:23:16,750 --> 00:23:22,720
that say look these are the major

00:23:18,820 --> 00:23:25,120
changes this is where it matters and

00:23:22,720 --> 00:23:27,550
what would be really nice is if you can

00:23:25,120 --> 00:23:29,290
give us a link where we can either point

00:23:27,550 --> 00:23:31,660
people to or find some more information

00:23:29,290 --> 00:23:33,700
ourselves so we can write a little bit

00:23:31,660 --> 00:23:34,540
of backgrounds of half a paragraph or

00:23:33,700 --> 00:23:36,610
even a little

00:23:34,540 --> 00:23:40,000
more a little less depending on how

00:23:36,610 --> 00:23:41,770
important we think the feature is what

00:23:40,000 --> 00:23:44,170
you need to keep in mind here by the way

00:23:41,770 --> 00:23:47,290
is we need the changes between releases

00:23:44,170 --> 00:23:53,020
now if you tell us what's new

00:23:47,290 --> 00:23:54,970
insistently 146 that's really useful but

00:23:53,020 --> 00:23:56,740
we also want to know what's new and the

00:23:54,970 --> 00:23:58,840
10 releases before because systemd

00:23:56,740 --> 00:24:01,180
doesn't you release every tile in a

00:23:58,840 --> 00:24:05,310
couple of weeks or months it goes really

00:24:01,180 --> 00:24:09,520
quick so for example for the colonel in

00:24:05,310 --> 00:24:13,690
12 2 and 12 3 we need to know what's new

00:24:09,520 --> 00:24:18,100
from 3.4 23.7 so we need to know what's

00:24:13,690 --> 00:24:20,320
new in 3.5 3.6 and 3.7 not just 3.7 so

00:24:18,100 --> 00:24:21,910
as developer you need to not just tell

00:24:20,320 --> 00:24:24,280
us what's new in the latest bug-fix

00:24:21,910 --> 00:24:28,510
release we need to tell us what is new

00:24:24,280 --> 00:24:31,150
since the previous opensuse release and

00:24:28,510 --> 00:24:33,790
then we're happy we will make it all

00:24:31,150 --> 00:24:36,220
pretty and make a nice text and you know

00:24:33,790 --> 00:24:40,450
we'll do the part with the funny

00:24:36,220 --> 00:24:43,630
pictures the place where you can dump

00:24:40,450 --> 00:24:46,960
the stuff is here so it's on a wiki it

00:24:43,630 --> 00:24:48,730
says major features and that's just

00:24:46,960 --> 00:24:51,790
where you put the bullet list of what is

00:24:48,730 --> 00:24:54,940
new and links for where we can find more

00:24:51,790 --> 00:24:56,650
stuff it's all we need from you and

00:24:54,940 --> 00:25:01,750
again remember how it is important for

00:24:56,650 --> 00:25:06,990
your users we will do the marketing side

00:25:01,750 --> 00:25:09,940
of things I'll give a second to read it

00:25:06,990 --> 00:25:11,950
so let me try to give you a little taste

00:25:09,940 --> 00:25:13,930
of the work that we do with those

00:25:11,950 --> 00:25:18,940
features and all the other things that

00:25:13,930 --> 00:25:21,970
happen and we start by building on that

00:25:18,940 --> 00:25:25,060
list and the features so we take the

00:25:21,970 --> 00:25:27,580
features and then we're going to look on

00:25:25,060 --> 00:25:29,500
the website of gnome and KDE and linux

00:25:27,580 --> 00:25:31,150
kernel newbies and everything we try to

00:25:29,500 --> 00:25:33,370
collect all the information that we're

00:25:31,150 --> 00:25:35,410
missing because often the list of

00:25:33,370 --> 00:25:37,900
features that we get does not contain

00:25:35,410 --> 00:25:39,370
everything it's something I would love

00:25:37,900 --> 00:25:42,880
to change but that's something I need

00:25:39,370 --> 00:25:45,250
the help of our developers for so we

00:25:42,880 --> 00:25:47,410
look all over the web see what is new in

00:25:45,250 --> 00:25:48,940
our release gather all the information

00:25:47,410 --> 00:25:51,430
and then the whole bunch of us work

00:25:48,940 --> 00:25:54,340
someone etherpad usually to try and get

00:25:51,430 --> 00:25:57,010
all the text in and make it moderately

00:25:54,340 --> 00:26:00,370
pretty once we have a reasonably good

00:25:57,010 --> 00:26:02,470
text we move it to the wiki we start to

00:26:00,370 --> 00:26:04,390
add screenshots and of course we work on

00:26:02,470 --> 00:26:07,330
it more to make it look good and have it

00:26:04,390 --> 00:26:13,120
you know categorized and in group good

00:26:07,330 --> 00:26:16,660
groupings etc etc once we are done with

00:26:13,120 --> 00:26:18,760
that we can move on and we can take the

00:26:16,660 --> 00:26:20,650
draft on the wiki and start to look what

00:26:18,760 --> 00:26:24,190
are the most important things here so

00:26:20,650 --> 00:26:26,080
this is where we find the highlight yes

00:26:24,190 --> 00:26:28,330
courses i'm using your picture a lot as

00:26:26,080 --> 00:26:32,140
you can see cost us took the picture it

00:26:28,330 --> 00:26:34,140
was modify tab it anyway and once we

00:26:32,140 --> 00:26:37,390
have these highlights and this is where

00:26:34,140 --> 00:26:38,590
you get the work you start to work on

00:26:37,390 --> 00:26:43,150
the announcement this is really

00:26:38,590 --> 00:26:45,190
difficult most of the text before the

00:26:43,150 --> 00:26:47,650
writing on the etherpad and draft on the

00:26:45,190 --> 00:26:49,330
wiki and the final text on the wiki even

00:26:47,650 --> 00:26:51,640
picking the highlights is stuff where

00:26:49,330 --> 00:26:53,650
you don't need a lot of technical

00:26:51,640 --> 00:26:55,840
knowledge you don't have to be a super

00:26:53,650 --> 00:27:00,220
great writer okay anyone can help in

00:26:55,840 --> 00:27:02,770
those stages this part we usually even

00:27:00,220 --> 00:27:04,600
get help from suzu corporate marketing

00:27:02,770 --> 00:27:05,800
to help us right because an announcement

00:27:04,600 --> 00:27:09,130
is something that needs to follow a

00:27:05,800 --> 00:27:12,370
strict pattern because journalists are

00:27:09,130 --> 00:27:14,530
very well let me say time constraint

00:27:12,370 --> 00:27:16,960
people so they only look at the first

00:27:14,530 --> 00:27:18,880
ten words in announcement and if they're

00:27:16,960 --> 00:27:21,160
not good they will not read the rest of

00:27:18,880 --> 00:27:22,750
it so this is where you really need to

00:27:21,160 --> 00:27:25,360
have a lot of iterations you make a

00:27:22,750 --> 00:27:27,370
first draft people look at it you have

00:27:25,360 --> 00:27:29,320
to rewrite it completely people look at

00:27:27,370 --> 00:27:31,390
the rewrite decide crap you rewrite it

00:27:29,320 --> 00:27:34,060
again at some point you can start to

00:27:31,390 --> 00:27:37,030
just improve it and you get a text this

00:27:34,060 --> 00:27:38,920
this is a lot of work and usually it's

00:27:37,030 --> 00:27:41,080
not the part that's my most favorite

00:27:38,920 --> 00:27:43,510
because you have to start over and every

00:27:41,080 --> 00:27:47,710
time we will get at some point to

00:27:43,510 --> 00:27:49,180
announcements which you can then use on

00:27:47,710 --> 00:27:50,710
you two dopes who's the dork why we

00:27:49,180 --> 00:27:52,750
write the community announcement which

00:27:50,710 --> 00:27:54,580
is a lot more fun to write because you

00:27:52,750 --> 00:27:57,790
know you were actually willing to read

00:27:54,580 --> 00:27:59,230
it and of course we collect an email for

00:27:57,790 --> 00:27:59,950
the project man unless and a factory

00:27:59,230 --> 00:28:06,190
mailing list

00:27:59,950 --> 00:28:08,620
other places now the timeline of all of

00:28:06,190 --> 00:28:11,470
this is actually very tight okay this

00:28:08,620 --> 00:28:13,570
has to happen in a matter of seven or

00:28:11,470 --> 00:28:16,029
eight weeks all of this and it's a lot

00:28:13,570 --> 00:28:17,620
of work so for us it's really really

00:28:16,029 --> 00:28:21,100
really important to have all those

00:28:17,620 --> 00:28:23,169
features in time so again I ask all our

00:28:21,100 --> 00:28:25,510
developers please try to put those on

00:28:23,169 --> 00:28:27,580
the wiki it is a huge help for ascus

00:28:25,510 --> 00:28:29,409
looking all over the internet for what

00:28:27,580 --> 00:28:31,779
has changed in the packets it's a lot

00:28:29,409 --> 00:28:34,360
harder than just having a list of bullet

00:28:31,779 --> 00:28:37,059
points and perhaps a link so that helps

00:28:34,360 --> 00:28:38,889
us a lot of course some of the things

00:28:37,059 --> 00:28:40,690
can happen in parallel but what happened

00:28:38,889 --> 00:28:43,809
especially in the past years is that you

00:28:40,690 --> 00:28:45,399
know we don't have enough time to find

00:28:43,809 --> 00:28:47,320
all those features in time we don't have

00:28:45,399 --> 00:28:48,730
time to write the sneak previews and of

00:28:47,320 --> 00:28:50,470
course the sneak previews are really

00:28:48,730 --> 00:28:54,429
nice because it gives people an idea of

00:28:50,470 --> 00:28:55,809
what's coming help specifically with the

00:28:54,429 --> 00:28:59,169
sneak previews is very much appreciated

00:28:55,809 --> 00:29:01,539
by the way and I'd really like to point

00:28:59,169 --> 00:29:03,730
out you know any help is welcome and

00:29:01,539 --> 00:29:08,230
here's my mandatory kitten picture of

00:29:03,730 --> 00:29:11,620
the day if you're interested in helping

00:29:08,230 --> 00:29:13,659
out of this at any stage talk to me can

00:29:11,620 --> 00:29:16,240
just look me up because I happen to walk

00:29:13,659 --> 00:29:19,480
around here frequently and of course

00:29:16,240 --> 00:29:25,529
sent me an email as well that's it are

00:29:19,480 --> 00:29:25,529
there any questions yes

00:29:30,909 --> 00:29:36,969
thank you for the presentation I have

00:29:33,859 --> 00:29:40,249
two questions if you already mentioned

00:29:36,969 --> 00:29:44,599
but I miss the please forgive me

00:29:40,249 --> 00:29:47,959
the first question is about where we

00:29:44,599 --> 00:29:50,719
should bring up the features i am now

00:29:47,959 --> 00:29:56,089
point to the major features but all the

00:29:50,719 --> 00:29:57,589
features actually that wiki page called

00:29:56,089 --> 00:30:02,449
major features that's where you should

00:29:57,589 --> 00:30:06,109
dump all the features here so all the

00:30:02,449 --> 00:30:07,819
features from as a developer obviously

00:30:06,109 --> 00:30:10,249
you don't have to look at any minor bug

00:30:07,819 --> 00:30:12,529
fix but especially the things that for

00:30:10,249 --> 00:30:15,589
you as maintainer of a package are a big

00:30:12,529 --> 00:30:16,999
deal they need to be on here and then we

00:30:15,589 --> 00:30:19,999
will look again at the big picture and

00:30:16,999 --> 00:30:22,399
see where it fits in but if you think as

00:30:19,999 --> 00:30:25,129
a package here for whatever it is you

00:30:22,399 --> 00:30:26,659
say look this is big our users need to

00:30:25,129 --> 00:30:29,419
know about this then that's where you

00:30:26,659 --> 00:30:32,959
put it and we will make sure that it

00:30:29,419 --> 00:30:35,359
gets mentioned in the feature guide the

00:30:32,959 --> 00:30:38,419
second question is about testing and the

00:30:35,359 --> 00:30:43,429
business open QA I'm not sure if we have

00:30:38,419 --> 00:30:46,309
some my new testing since some open

00:30:43,429 --> 00:30:49,189
project open source projector they have

00:30:46,309 --> 00:30:51,499
some menu testing and they create test

00:30:49,189 --> 00:30:55,399
run and at least the old a test case and

00:30:51,499 --> 00:30:58,459
for the community guys they easy to find

00:30:55,399 --> 00:31:02,629
it i idolised from this kind of test run

00:30:58,459 --> 00:31:07,699
and pick up some of them and it is is a

00:31:02,629 --> 00:31:11,359
folder release to see oh how many ties

00:31:07,699 --> 00:31:13,429
we already perform and where we are I'm

00:31:11,359 --> 00:31:17,959
not sure I let this answer by our

00:31:13,429 --> 00:31:22,459
technical guy okay so as far as i know

00:31:17,959 --> 00:31:24,859
we don't have a list of tests to do by

00:31:22,459 --> 00:31:27,619
community we are putting people

00:31:24,859 --> 00:31:31,519
basically to open QA and to take a look

00:31:27,619 --> 00:31:34,179
at failing tests there but people tends

00:31:31,519 --> 00:31:36,949
to do their manual testing of their own

00:31:34,179 --> 00:31:39,800
unorganized they were just download the

00:31:36,949 --> 00:31:43,810
rcs try to use it for a while

00:31:39,800 --> 00:31:48,040
and report whatever they found and

00:31:43,810 --> 00:31:53,660
internally at least in our team last

00:31:48,040 --> 00:31:55,760
last release we took out a lot of use

00:31:53,660 --> 00:31:59,180
cases that we wanted to make sure that

00:31:55,760 --> 00:32:01,820
works and tried them manually like

00:31:59,180 --> 00:32:04,700
secure boot which was really important

00:32:01,820 --> 00:32:09,620
we tried it several times on different

00:32:04,700 --> 00:32:14,590
computers binary drivers and stuff like

00:32:09,620 --> 00:32:17,630
that and we have we use it as well so

00:32:14,590 --> 00:32:20,810
lots of manual testing is done basically

00:32:17,630 --> 00:32:24,050
by users using it but I agree that

00:32:20,810 --> 00:32:27,070
having some plan or something would be

00:32:24,050 --> 00:32:30,730
useful but yeah we need a bigger

00:32:27,070 --> 00:32:33,800
opensuse community testing team and

00:32:30,730 --> 00:32:36,050
organizing itself somehow yeah yeah

00:32:33,800 --> 00:32:39,440
you're a long run for how can do this

00:32:36,050 --> 00:32:42,560
that's right will be helpful I believe

00:32:39,440 --> 00:32:44,510
there is an internal tool for this we

00:32:42,560 --> 00:32:49,250
thought about what was the name of that

00:32:44,510 --> 00:32:53,420
a test Opia so we thought about trying

00:32:49,250 --> 00:32:55,460
to use that but it is honestly so now

00:32:53,420 --> 00:33:00,770
you can try this not reusable for that

00:32:55,460 --> 00:33:09,710
yeah you can try the most rap yeah thank

00:33:00,770 --> 00:33:13,640
you any other questions I would like to

00:33:09,710 --> 00:33:18,020
know how you choose which release of the

00:33:13,640 --> 00:33:21,050
software stable you allow the public I

00:33:18,020 --> 00:33:22,880
mean to be published like you eat a pie

00:33:21,050 --> 00:33:26,180
before I was a system administrator I

00:33:22,880 --> 00:33:29,620
was not using opensuse but other like

00:33:26,180 --> 00:33:34,070
distributions and my major problem was

00:33:29,620 --> 00:33:37,160
we had some bugs or like security issues

00:33:34,070 --> 00:33:40,310
and the official package was always

00:33:37,160 --> 00:33:43,730
quite late in there Lisa so was you know

00:33:40,310 --> 00:33:48,200
not easy to manage in a good way system

00:33:43,730 --> 00:33:50,270
so your question is what how do we

00:33:48,200 --> 00:33:53,299
decide which version of the package we

00:33:50,270 --> 00:33:57,739
worship with injuries or

00:33:53,299 --> 00:34:01,009
dated them or update well it's a part of

00:33:57,739 --> 00:34:05,869
it is on the maintainer if we are going

00:34:01,009 --> 00:34:08,960
to you have to make it into release in

00:34:05,869 --> 00:34:11,690
time before the feature freeze or you

00:34:08,960 --> 00:34:16,760
have to have good arguments for updating

00:34:11,690 --> 00:34:19,369
it afterwards and if it gets before the

00:34:16,760 --> 00:34:23,679
feature fees it's there and maintainer

00:34:19,369 --> 00:34:26,929
of the package decides what saw what saw

00:34:23,679 --> 00:34:31,909
stable enough or good enough in his

00:34:26,929 --> 00:34:36,319
respect after racing stuff we don't

00:34:31,909 --> 00:34:39,530
break things so there are possibilities

00:34:36,319 --> 00:34:43,339
to update stuff we are doing minor

00:34:39,530 --> 00:34:46,450
version updates for server software like

00:34:43,339 --> 00:34:49,819
libro face we are doing it for MySQL

00:34:46,450 --> 00:34:52,849
because these minor updates are not

00:34:49,819 --> 00:34:54,919
bringing any new features they are not

00:34:52,849 --> 00:34:58,220
bringing not breaking existing stuff

00:34:54,919 --> 00:35:02,030
they are just fixing errors and security

00:34:58,220 --> 00:35:05,990
issues so that's what we can do but yeah

00:35:02,030 --> 00:35:11,299
it depends case on case but what we are

00:35:05,990 --> 00:35:14,119
not going to do is do big update of GCC

00:35:11,299 --> 00:35:15,829
or something like that because that will

00:35:14,119 --> 00:35:22,490
bake a lot of stuff and we are not going

00:35:15,829 --> 00:35:24,940
to let in release better any other

00:35:22,490 --> 00:35:24,940
questions

00:35:28,769 --> 00:35:32,160

YouTube URL: https://www.youtube.com/watch?v=B_UgR9OCfzc


