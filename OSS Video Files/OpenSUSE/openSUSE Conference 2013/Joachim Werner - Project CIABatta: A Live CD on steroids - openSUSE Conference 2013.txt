Title: Joachim Werner - Project CIABatta: A Live CD on steroids - openSUSE Conference 2013
Publication date: 2013-07-22
Playlist: openSUSE Conference 2013
Description: 
	Building a virtual "datacenter in a box" on a high-end laptop.

Live CDs conveniently solve a common problem: How can I show off what my Linux distribution (or the Open Source project based on it) can do without the user needing to install anything permanently or even fiddling around with complicated setup instructions.
We want to take it to the next level: With the help of the OpenStack private cloud framework we are building the infrastructure for demos that can not only show off one Linux image, but complex demo setups that consist of several virtual servers, all in one package that can be run on a high-end laptop.
To get there, we make use of openSUSE, the Open Build Service, and KIWI. Python, OpenStack's default programming language, is used for the "glue code".
While the initial use case is for demos, we think the infrastructure we are building can revolutionize the way complex Open Source projects are developed, tested, and maybe even deployed in production.
Captions: 
	00:00:00,000 --> 00:00:08,160
well now it's time for mr. yorking

00:00:04,170 --> 00:00:16,980
Werner and the project ciabatta alive

00:00:08,160 --> 00:00:20,900
she'd be on steroids so is this guy

00:00:16,980 --> 00:00:23,070
seriously going to talk about bread I

00:00:20,900 --> 00:00:29,220
think that's the question that some of

00:00:23,070 --> 00:00:35,579
you may have ciabatta well Italian white

00:00:29,220 --> 00:00:38,430
bread cool thing but not quite what i'm

00:00:35,579 --> 00:00:40,140
going to talk about let's start with the

00:00:38,430 --> 00:00:41,910
question who is this guy who's standing

00:00:40,140 --> 00:00:45,149
in front of you well I'm kind of

00:00:41,910 --> 00:00:50,160
inadvertently taking over that superhero

00:00:45,149 --> 00:00:53,100
motif from the the keynote talk but I'm

00:00:50,160 --> 00:00:55,199
sure a few of you haven't seen me before

00:00:53,100 --> 00:00:58,949
and I don't see you now because it's so

00:00:55,199 --> 00:01:00,960
dark down there on any mail eNOS while

00:00:58,949 --> 00:01:05,489
i'm subscribed to most of the opensuse

00:01:00,960 --> 00:01:09,020
molinas but i'm mostly listening in who

00:01:05,489 --> 00:01:12,030
I am I'm yahan banner or Joel Verner I'm

00:01:09,020 --> 00:01:15,000
one of the product managers for Susie

00:01:12,030 --> 00:01:17,040
working on the systems management part

00:01:15,000 --> 00:01:20,400
so that Susan manager as a product but

00:01:17,040 --> 00:01:22,220
also all the yost stuff super the whole

00:01:20,400 --> 00:01:25,110
updates tag that's kind of in my

00:01:22,220 --> 00:01:27,600
responsibility I've been with Susie in

00:01:25,110 --> 00:01:30,240
my 10th year now so almost 10 years and

00:01:27,600 --> 00:01:32,369
I've been doing open source before that

00:01:30,240 --> 00:01:36,329
mainly in the in the content manager

00:01:32,369 --> 00:01:43,439
content management system space using

00:01:36,329 --> 00:01:47,280
Python and dope yeah and to be honest I

00:01:43,439 --> 00:01:49,200
haven't really coded for years but that

00:01:47,280 --> 00:01:51,659
is going to change because i have a

00:01:49,200 --> 00:01:54,479
problem to solve and that's how most of

00:01:51,659 --> 00:01:59,369
the open source projects more or less

00:01:54,479 --> 00:02:01,530
start to start with if you have any

00:01:59,369 --> 00:02:03,180
questions i think it's best to just come

00:02:01,530 --> 00:02:06,869
up with them right away we've got the

00:02:03,180 --> 00:02:10,940
two microphones or so on or I make sure

00:02:06,869 --> 00:02:10,940
to repeat the question for the recording

00:02:11,450 --> 00:02:16,230
there's a problem

00:02:13,380 --> 00:02:18,630
that all of us have how can i easily

00:02:16,230 --> 00:02:21,590
demonstrate the power of opensuse to

00:02:18,630 --> 00:02:24,390
friends to my parents to colleagues and

00:02:21,590 --> 00:02:26,010
well there is a well-known solution for

00:02:24,390 --> 00:02:27,960
that and that's basically what i've been

00:02:26,010 --> 00:02:30,630
using what my kids have been using to

00:02:27,960 --> 00:02:34,080
convince their friends about the power

00:02:30,630 --> 00:02:37,910
of of souza and that's of course the

00:02:34,080 --> 00:02:40,530
live cds or live dvds and more recently

00:02:37,910 --> 00:02:43,350
basically the USB thumb drive so friends

00:02:40,530 --> 00:02:46,290
of of my son would be using them to

00:02:43,350 --> 00:02:48,000
circumvent the windows parental control

00:02:46,290 --> 00:02:51,030
stuff because they can just put from the

00:02:48,000 --> 00:02:53,070
live CD all those things and it's really

00:02:51,030 --> 00:02:54,690
easy because it works out of the box you

00:02:53,070 --> 00:02:59,030
don't have to configure anything it's

00:02:54,690 --> 00:03:01,410
just a very nice experience and as

00:02:59,030 --> 00:03:04,530
guaranted out in his keynote it's really

00:03:01,410 --> 00:03:07,070
important to have that easy access to

00:03:04,530 --> 00:03:11,040
open source software to make it easier

00:03:07,070 --> 00:03:13,380
to use but what if I need to domin

00:03:11,040 --> 00:03:16,050
straight not just a single Linux desktop

00:03:13,380 --> 00:03:20,100
ignore list of a KDE desktop but I want

00:03:16,050 --> 00:03:24,200
to show off a more complex scenario with

00:03:20,100 --> 00:03:27,390
more than one Linux system and I've

00:03:24,200 --> 00:03:30,120
taken a few examples from our corporate

00:03:27,390 --> 00:03:33,390
side of the the suse linux world first

00:03:30,120 --> 00:03:35,790
of all the project I used to be running

00:03:33,390 --> 00:03:38,040
in the last couple of years suse linux

00:03:35,790 --> 00:03:41,040
enterprise point of service where we are

00:03:38,040 --> 00:03:43,380
running whole retail infrastructures

00:03:41,040 --> 00:03:45,560
sometimes thirty thousand fifty thousand

00:03:43,380 --> 00:03:48,120
cash registers in thousands of

00:03:45,560 --> 00:03:50,340
department stores around countries

00:03:48,120 --> 00:03:52,890
sometimes around the world and those

00:03:50,340 --> 00:03:55,320
systems if you want to show off how this

00:03:52,890 --> 00:03:58,350
whole system works with a central server

00:03:55,320 --> 00:04:01,050
and distributed service that help you

00:03:58,350 --> 00:04:02,670
boot up cash registers you need more

00:04:01,050 --> 00:04:05,430
than one demo system you cannot just

00:04:02,670 --> 00:04:07,470
show that on a live CD you have to have

00:04:05,430 --> 00:04:10,590
all this infrastructure at least

00:04:07,470 --> 00:04:12,830
virtually you have to have virtual cash

00:04:10,590 --> 00:04:15,930
registers worship servers virtual

00:04:12,830 --> 00:04:18,120
networks or a high availability class

00:04:15,930 --> 00:04:20,040
that you want to show somebody how high

00:04:18,120 --> 00:04:23,250
availability with two or more linux

00:04:20,040 --> 00:04:25,169
servers work and you don't have the

00:04:23,250 --> 00:04:26,880
possibility to go there with the whole

00:04:25,169 --> 00:04:30,510
rack of service you have to show there

00:04:26,880 --> 00:04:32,400
in a small box another example Susan

00:04:30,510 --> 00:04:34,200
manager our patch management product and

00:04:32,400 --> 00:04:36,270
then suz's studio where they said that's

00:04:34,200 --> 00:04:38,730
the online version that you all know the

00:04:36,270 --> 00:04:41,180
website you can go to but there's also a

00:04:38,730 --> 00:04:44,070
version of souza studio that you can use

00:04:41,180 --> 00:04:46,110
in your own data center and to show how

00:04:44,070 --> 00:04:47,790
those two interact you need at least two

00:04:46,110 --> 00:04:51,600
servers and one of them has to be able

00:04:47,790 --> 00:04:59,130
to have virtual machines running as part

00:04:51,600 --> 00:05:02,460
of it so that's the scenarios when do I

00:04:59,130 --> 00:05:04,770
actually need those I mentioned some of

00:05:02,460 --> 00:05:06,750
them earlier like impress my friends my

00:05:04,770 --> 00:05:09,600
colleagues about the cube cool project

00:05:06,750 --> 00:05:13,020
but of course my motivation to some

00:05:09,600 --> 00:05:16,080
extent is help sell linux based projects

00:05:13,020 --> 00:05:19,650
and not just for Susie but also to our

00:05:16,080 --> 00:05:22,080
partners to our consulting partners well

00:05:19,650 --> 00:05:24,750
our friends within companies who

00:05:22,080 --> 00:05:27,000
sometimes are not really customers but

00:05:24,750 --> 00:05:29,700
almost like yeah community members

00:05:27,000 --> 00:05:31,770
helping us to promote the idea of using

00:05:29,700 --> 00:05:34,770
open source software in the company and

00:05:31,770 --> 00:05:36,420
don't forget that not also says persons

00:05:34,770 --> 00:05:38,220
are hecka so if you tell them okay

00:05:36,420 --> 00:05:40,080
there's this script you can easily set

00:05:38,220 --> 00:05:42,360
things up and you just have to go to the

00:05:40,080 --> 00:05:46,710
command line and do this and that well

00:05:42,360 --> 00:05:49,080
it's not always as easy as that and also

00:05:46,710 --> 00:05:51,390
this whole thing would be helpful to

00:05:49,080 --> 00:05:54,660
learn about things so if you are a new

00:05:51,390 --> 00:05:58,050
team member at Susie or in an open

00:05:54,660 --> 00:06:00,390
source project and um but you just want

00:05:58,050 --> 00:06:02,370
to see how this all works and okay you

00:06:00,390 --> 00:06:03,990
can check out check out the source code

00:06:02,370 --> 00:06:06,630
and you can read all the documentation

00:06:03,990 --> 00:06:09,780
but it may take you of quite a long time

00:06:06,630 --> 00:06:11,490
to actually try things out because of

00:06:09,780 --> 00:06:13,770
all those little things you have to

00:06:11,490 --> 00:06:17,220
figure out to configure to make sure

00:06:13,770 --> 00:06:19,110
that it all works so what if I was just

00:06:17,220 --> 00:06:22,410
able to download this whole thing like a

00:06:19,110 --> 00:06:25,320
live CD and just fire it up and get

00:06:22,410 --> 00:06:29,400
going journalists unfortunately Marcus

00:06:25,320 --> 00:06:31,950
just left us yeah journalists trying to

00:06:29,400 --> 00:06:35,250
get a glimpse of what what's going on

00:06:31,950 --> 00:06:39,009
with the project and then finally as i

00:06:35,250 --> 00:06:42,669
mentioned consultants and partners

00:06:39,009 --> 00:06:45,610
ah but there's more than just demos so

00:06:42,669 --> 00:06:49,569
those scenarios I think we understand

00:06:45,610 --> 00:06:52,960
quite well this can also be taken a step

00:06:49,569 --> 00:06:56,020
further make it easy for a developer not

00:06:52,960 --> 00:06:58,960
just to try out the code but to use it

00:06:56,020 --> 00:07:02,110
to set up a repeatable development

00:06:58,960 --> 00:07:05,740
environment that he can use he or she

00:07:02,110 --> 00:07:09,129
can use to develop not just that single

00:07:05,740 --> 00:07:11,020
piece of code but also see the big

00:07:09,129 --> 00:07:13,029
picture how is my code going to interact

00:07:11,020 --> 00:07:15,460
with the other servers with the other

00:07:13,029 --> 00:07:17,499
processes with all those dependencies

00:07:15,460 --> 00:07:20,289
and then of course doing the same in the

00:07:17,499 --> 00:07:22,839
next step in the Quality Assurance step

00:07:20,289 --> 00:07:27,219
where it's of course much easier for a

00:07:22,839 --> 00:07:29,020
tester to have a system that that the

00:07:27,219 --> 00:07:31,569
developer has been using that the

00:07:29,020 --> 00:07:39,219
developer understands and just use the

00:07:31,569 --> 00:07:42,309
same system for testing and ultimately

00:07:39,219 --> 00:07:44,469
we may even come up with something that

00:07:42,309 --> 00:07:46,990
makes operations easier so if you can

00:07:44,469 --> 00:07:50,649
take the same ideas of you know

00:07:46,990 --> 00:07:53,409
pre-configured setups and a very modular

00:07:50,649 --> 00:07:55,959
system where anything I want to run as

00:07:53,409 --> 00:07:58,029
building blocks is pre-built well

00:07:55,959 --> 00:08:00,249
understood this could also be something

00:07:58,029 --> 00:08:02,289
that makes IT operations easier and

00:08:00,249 --> 00:08:04,449
there even is a buzzword for that I

00:08:02,289 --> 00:08:08,889
guess some of you have heard about it

00:08:04,449 --> 00:08:10,629
DevOps DevOps is a bit like cloud you

00:08:08,889 --> 00:08:13,899
can put a lot of meaning into the world

00:08:10,629 --> 00:08:18,039
but the basic understanding i have is

00:08:13,899 --> 00:08:21,009
really making it easy to have very

00:08:18,039 --> 00:08:24,669
little loss between the transitions from

00:08:21,009 --> 00:08:26,589
development to QA testing and operations

00:08:24,669 --> 00:08:28,389
because you're using the same tools

00:08:26,589 --> 00:08:30,249
you're looking at the process of

00:08:28,389 --> 00:08:32,949
publishing your production environment

00:08:30,249 --> 00:08:34,599
very similar to a software development

00:08:32,949 --> 00:08:38,349
process where you have templates you

00:08:34,599 --> 00:08:41,169
have repeatable code that you can apply

00:08:38,349 --> 00:08:45,040
that you can a version control that you

00:08:41,169 --> 00:08:46,839
can audit and all those things and not

00:08:45,040 --> 00:08:48,399
like when you hand it over to a

00:08:46,839 --> 00:08:51,040
production they have completely

00:08:48,399 --> 00:08:52,690
different tools like it is often in many

00:08:51,040 --> 00:08:54,070
companies I know

00:08:52,690 --> 00:08:56,590
they would have people developing

00:08:54,070 --> 00:08:58,480
software other people packaging it up as

00:08:56,590 --> 00:09:00,280
rpms because they have to because

00:08:58,480 --> 00:09:02,740
operation says we are Linux we have to

00:09:00,280 --> 00:09:05,230
have our hands and then those rpms are

00:09:02,740 --> 00:09:06,640
used by production and nobody in the

00:09:05,230 --> 00:09:08,260
chain really knows why they are doing

00:09:06,640 --> 00:09:10,960
all those things and how they fit

00:09:08,260 --> 00:09:13,060
together and DevOps really wants to

00:09:10,960 --> 00:09:16,480
change it whatever the developers used

00:09:13,060 --> 00:09:18,160
you should also make sure operations can

00:09:16,480 --> 00:09:20,590
understand and use or maybe even the

00:09:18,160 --> 00:09:23,680
same people in some cases would take

00:09:20,590 --> 00:09:29,080
care of that so let's come back to the

00:09:23,680 --> 00:09:36,190
bread why ciabatta well this was just

00:09:29,080 --> 00:09:38,740
done yeah my my trying to find a name

00:09:36,190 --> 00:09:43,500
that is somehow unique that is not in

00:09:38,740 --> 00:09:46,570
any way tainted um and that sounds nice

00:09:43,500 --> 00:09:48,460
so it's inspired by cloud in a box

00:09:46,570 --> 00:09:50,380
another alternative of calling this

00:09:48,460 --> 00:09:53,020
would be data center in a box I may have

00:09:50,380 --> 00:09:55,360
ended up with diabolo or so but yeah

00:09:53,020 --> 00:09:59,350
it's probably already taken and it has a

00:09:55,360 --> 00:10:01,950
negative connotation so but this is

00:09:59,350 --> 00:10:05,470
really just a project name so don't in

00:10:01,950 --> 00:10:08,230
interpret too much into the bread now

00:10:05,470 --> 00:10:11,080
what is the what are the immediate goals

00:10:08,230 --> 00:10:13,450
of of ciabatta we've kind of covered

00:10:11,080 --> 00:10:16,420
some of the use cases already make it as

00:10:13,450 --> 00:10:20,050
easy as possible to demo complex

00:10:16,420 --> 00:10:22,420
linux-based setups on a laptop that's

00:10:20,050 --> 00:10:24,970
the initial goal because everybody told

00:10:22,420 --> 00:10:27,400
me I you need at least a big laptop with

00:10:24,970 --> 00:10:32,440
lots of gigabytes of RAM to get this all

00:10:27,400 --> 00:10:34,570
done but these days sometimes you can

00:10:32,440 --> 00:10:38,080
run a virtual machine within a laptop

00:10:34,570 --> 00:10:39,640
that then uses nested virtualization so

00:10:38,080 --> 00:10:42,370
you virtualize within the virtualization

00:10:39,640 --> 00:10:44,620
you can basically demonstrate anything

00:10:42,370 --> 00:10:48,370
you can simulate a whole world in a

00:10:44,620 --> 00:10:49,990
virtual machine combine demo marketing

00:10:48,370 --> 00:10:54,339
and documentation one experience so

00:10:49,990 --> 00:10:56,290
that's where I think things could get to

00:10:54,339 --> 00:11:00,160
the next step you not only show off

00:10:56,290 --> 00:11:01,720
let's say how to H a service work but in

00:11:00,160 --> 00:11:03,610
the same tool you provide the

00:11:01,720 --> 00:11:06,070
documentation you provide a white paper

00:11:03,610 --> 00:11:09,070
people can can read

00:11:06,070 --> 00:11:12,070
some some storybook some some screenplay

00:11:09,070 --> 00:11:15,550
where they can go and and and basically

00:11:12,070 --> 00:11:17,020
follow your script experience and at any

00:11:15,550 --> 00:11:21,430
point of course stop and look at the

00:11:17,020 --> 00:11:22,840
live system and well of course you have

00:11:21,430 --> 00:11:26,230
to create a community around that

00:11:22,840 --> 00:11:28,120
because the tool itself is useless you

00:11:26,230 --> 00:11:30,430
have to have the tool yet but you also

00:11:28,120 --> 00:11:32,080
have to have images Linux images that

00:11:30,430 --> 00:11:34,390
you can use in that too let's say if I

00:11:32,080 --> 00:11:36,220
want to demonstrate a che I need high

00:11:34,390 --> 00:11:38,380
availability nodes if I want to

00:11:36,220 --> 00:11:42,280
demonstrate a complex set up let's say a

00:11:38,380 --> 00:11:44,590
word press instance that is fault

00:11:42,280 --> 00:11:46,510
tolerant with back-end servers and and

00:11:44,590 --> 00:11:49,390
load balancer and so and I have to have

00:11:46,510 --> 00:11:51,550
somebody building all those images and

00:11:49,390 --> 00:11:53,260
also those scenarios i mentioned okay

00:11:51,550 --> 00:11:55,960
bringing it all together those templates

00:11:53,260 --> 00:12:01,150
and could call them screenplays yes

00:11:55,960 --> 00:12:03,430
grips and there is some in this case not

00:12:01,150 --> 00:12:05,980
color collateral damage but collateral

00:12:03,430 --> 00:12:13,980
goals that would just basically fall out

00:12:05,980 --> 00:12:17,500
of that sorry and yeah that's basically

00:12:13,980 --> 00:12:19,330
that we all the fly would build a base

00:12:17,500 --> 00:12:22,600
that can be reused in a DevOps

00:12:19,330 --> 00:12:25,300
environment for development for

00:12:22,600 --> 00:12:27,460
scenarios and images for automated

00:12:25,300 --> 00:12:31,960
testing but as I said also for

00:12:27,460 --> 00:12:33,640
production scenarios ultimately now what

00:12:31,960 --> 00:12:36,040
are the pieces of that puzzle on a

00:12:33,640 --> 00:12:37,930
technically end first of all of course I

00:12:36,040 --> 00:12:40,390
need specs for the runtime environment

00:12:37,930 --> 00:12:45,670
to start with and I started with pretty

00:12:40,390 --> 00:12:47,800
powerful specs 16 gigs of ram and an SSD

00:12:45,670 --> 00:12:51,340
the SSD makes it much easier to have

00:12:47,800 --> 00:12:54,730
frequent iterations because setting up a

00:12:51,340 --> 00:12:56,770
new system is just so much faster and my

00:12:54,730 --> 00:13:00,370
current working machine for that is a

00:12:56,770 --> 00:13:04,090
thinkpad w of 5 30 which is pretty beefy

00:13:00,370 --> 00:13:06,190
but i found out over time that smaller

00:13:04,090 --> 00:13:09,310
machines can do then that a lot of

00:13:06,190 --> 00:13:12,070
things can be tried out even as i said

00:13:09,310 --> 00:13:14,380
in a virtual machine within even a

00:13:12,070 --> 00:13:16,960
Windows desktop or on a Mac or make or

00:13:14,380 --> 00:13:19,810
whatever as long as you can do this

00:13:16,960 --> 00:13:21,670
virtual virtualization within virtual

00:13:19,810 --> 00:13:23,800
the nested virtualization and there are

00:13:21,670 --> 00:13:26,740
several options for that on Linux the

00:13:23,800 --> 00:13:29,680
most easy to use would be kvm where we

00:13:26,740 --> 00:13:32,920
now have for most of the latest CPUs

00:13:29,680 --> 00:13:36,580
support for running kvm on top of que

00:13:32,920 --> 00:13:39,720
bien yeah as I said if you have enough

00:13:36,580 --> 00:13:42,850
ram the whole thing may also run in a vm

00:13:39,720 --> 00:13:44,920
invit nested virtualization the other

00:13:42,850 --> 00:13:46,839
thing we need is of course documentation

00:13:44,920 --> 00:13:48,940
we need lots of documentation how to set

00:13:46,839 --> 00:13:50,920
up the laptop or prepare virtual machine

00:13:48,940 --> 00:13:53,320
host prepare the host network the

00:13:50,920 --> 00:13:55,450
network always kills me I mean I can get

00:13:53,320 --> 00:13:57,790
it all done and then it's ok i have to

00:13:55,450 --> 00:14:00,279
do bridges i have to create i have my

00:13:57,790 --> 00:14:02,620
virtual networks and so on create

00:14:00,279 --> 00:14:06,010
individual virtual machines to run and

00:14:02,620 --> 00:14:07,960
so on and so on but ideally we want to

00:14:06,010 --> 00:14:10,360
replace a lot of that documentation by

00:14:07,960 --> 00:14:12,760
tools so that you don't have to read the

00:14:10,360 --> 00:14:17,080
documentation you just run the tools you

00:14:12,760 --> 00:14:18,910
use the tools to build things we're

00:14:17,080 --> 00:14:21,400
tools come in handy just a few examples

00:14:18,910 --> 00:14:23,230
first of all creating the ultimate whole

00:14:21,400 --> 00:14:25,210
system if you have a live CD to start

00:14:23,230 --> 00:14:28,480
with that is just in the open build

00:14:25,210 --> 00:14:30,310
system in the open build service that

00:14:28,480 --> 00:14:36,640
you can check out whether say okay I

00:14:30,310 --> 00:14:39,400
take opensuse 12.org on and I build a

00:14:36,640 --> 00:14:41,410
word of it that already includes the

00:14:39,400 --> 00:14:45,300
virtualization layer or pre-configured

00:14:41,410 --> 00:14:47,910
and the network the virtual network

00:14:45,300 --> 00:14:50,860
creating the virtual images of course

00:14:47,910 --> 00:14:54,760
wiring the networks and then creating

00:14:50,860 --> 00:14:57,250
those screenplays and of course we need

00:14:54,760 --> 00:15:00,520
a project infrastructure for all that we

00:14:57,250 --> 00:15:02,440
need a website or end or blocks where we

00:15:00,520 --> 00:15:06,370
talk about the results mailing list and

00:15:02,440 --> 00:15:08,740
so on git repos this is still work in

00:15:06,370 --> 00:15:11,020
progress for shibata but the most

00:15:08,740 --> 00:15:14,170
obvious choice these days is using

00:15:11,020 --> 00:15:18,730
github and I'm also tying into the

00:15:14,170 --> 00:15:22,209
opensuse Vicky infrastructure a bit so

00:15:18,730 --> 00:15:24,520
lots of pieces in this puzzle is this

00:15:22,209 --> 00:15:26,670
going to be a huge project I mean looks

00:15:24,520 --> 00:15:29,290
like it's a quite an ambitious project

00:15:26,670 --> 00:15:32,140
yes it is but luckily there is an

00:15:29,290 --> 00:15:33,699
existing huge project that's kind of the

00:15:32,140 --> 00:15:36,389
hugest open source

00:15:33,699 --> 00:15:40,809
after Linux at the moment that we can

00:15:36,389 --> 00:15:42,699
leverage and that's OpenStack I guess

00:15:40,809 --> 00:15:45,279
most of you have at least heard about

00:15:42,699 --> 00:15:47,559
OpenStack it's now in the press

00:15:45,279 --> 00:15:49,239
sometimes called the cloud operating

00:15:47,559 --> 00:15:52,269
system so it's like the Linux for the

00:15:49,239 --> 00:15:54,879
desktop or server it's running the whole

00:15:52,269 --> 00:15:58,389
data center that's the idea you could

00:15:54,879 --> 00:16:00,759
also put it a bit more bluntly and say

00:15:58,389 --> 00:16:03,309
it's a set of Python scripts both is

00:16:00,759 --> 00:16:05,649
true so it's it's all written from

00:16:03,309 --> 00:16:08,739
scratch based on two projects from rec

00:16:05,649 --> 00:16:11,319
space and NASA that that have merged and

00:16:08,739 --> 00:16:14,739
it's evolving very quickly to become a

00:16:11,319 --> 00:16:18,730
reliable platform that covers those

00:16:14,739 --> 00:16:21,249
three building blocks compute

00:16:18,730 --> 00:16:23,379
infrastructure networking at all and

00:16:21,249 --> 00:16:25,449
most of that also supports fully

00:16:23,379 --> 00:16:29,769
software-defined networks we don't need

00:16:25,449 --> 00:16:31,629
any switches and storage again storage

00:16:29,769 --> 00:16:33,069
you don't have to have expensive storage

00:16:31,629 --> 00:16:36,970
you can just use software-defined

00:16:33,069 --> 00:16:43,329
storage that's running on bare metal

00:16:36,970 --> 00:16:45,549
with hard disks and standard CPUs this

00:16:43,329 --> 00:16:47,529
is meant to be running in huge data

00:16:45,549 --> 00:16:50,739
centers with hundreds of servers or

00:16:47,529 --> 00:16:54,039
thousands of servers but it also scares

00:16:50,739 --> 00:16:57,039
down and can be run on a laptop that's

00:16:54,039 --> 00:16:59,049
the cool thing and OpenStack has most of

00:16:57,039 --> 00:17:01,480
what we need for the runtime environment

00:16:59,049 --> 00:17:03,279
of ciabatta we have an easy setup right

00:17:01,480 --> 00:17:05,589
now i'm using devstack which is actually

00:17:03,279 --> 00:17:07,829
meant for development and it's very

00:17:05,589 --> 00:17:10,419
Hankey perl script but it does the job

00:17:07,829 --> 00:17:14,289
not so much on Suzel come to that later

00:17:10,419 --> 00:17:17,589
but in principle it does and and there's

00:17:14,289 --> 00:17:20,079
work on going to to to make this even

00:17:17,589 --> 00:17:21,730
more easy and OpenStack has all those

00:17:20,079 --> 00:17:23,980
problems to solve themselves they have

00:17:21,730 --> 00:17:26,649
to have reliable testing environments

00:17:23,980 --> 00:17:29,260
say they need for daily testing because

00:17:26,649 --> 00:17:32,460
they have a process where any check-in

00:17:29,260 --> 00:17:35,409
would result in a test run and so on

00:17:32,460 --> 00:17:37,659
virtualization environment is covered

00:17:35,409 --> 00:17:41,649
that's the Nova component so I mentioned

00:17:37,659 --> 00:17:44,769
all those code names in case you run you

00:17:41,649 --> 00:17:47,260
see them later there's an image store

00:17:44,769 --> 00:17:47,500
where you can put linux images to start

00:17:47,260 --> 00:17:50,470
in

00:17:47,500 --> 00:17:52,690
your clouds it's called glands software

00:17:50,470 --> 00:17:56,700
/ network there can be based on real

00:17:52,690 --> 00:17:59,380
hardware or virtuals of virtual networks

00:17:56,700 --> 00:18:01,870
so nutrient basically abstracts between

00:17:59,380 --> 00:18:04,380
software define and really hardware

00:18:01,870 --> 00:18:07,090
Defined networks that's Neutron a

00:18:04,380 --> 00:18:09,370
dashboard where we can do all those

00:18:07,090 --> 00:18:12,060
fancy things I've talked about where you

00:18:09,370 --> 00:18:16,030
can you know show your scenarios and

00:18:12,060 --> 00:18:19,360
additional content documents I don't

00:18:16,030 --> 00:18:22,720
know videos where you add more value to

00:18:19,360 --> 00:18:26,640
the demo that's called horizon and it's

00:18:22,720 --> 00:18:30,160
written in Python and based on Jango and

00:18:26,640 --> 00:18:33,130
finally the automation so orchestrating

00:18:30,160 --> 00:18:35,650
many pieces and there's a project called

00:18:33,130 --> 00:18:38,470
heat that is in the first step taking

00:18:35,650 --> 00:18:41,260
what amazon is doing this cloud cloud

00:18:38,470 --> 00:18:44,980
formation api that you can use in amazon

00:18:41,260 --> 00:18:49,630
ec2 amazon web services but they are now

00:18:44,980 --> 00:18:52,180
also adding their own native format so

00:18:49,630 --> 00:18:53,770
what's missing a few things are still

00:18:52,180 --> 00:18:55,810
missing first of all I said the easy

00:18:53,770 --> 00:18:57,940
setup the Deaf stack is really not the

00:18:55,810 --> 00:19:00,180
right answer for what we want we

00:18:57,940 --> 00:19:03,130
basically want to start with a live CD

00:19:00,180 --> 00:19:07,150
an image that you can download and that

00:19:03,130 --> 00:19:08,950
bootstraps the rest there is a GUI for

00:19:07,150 --> 00:19:10,870
running complex scenarios but that's

00:19:08,950 --> 00:19:13,240
just a prototype it's called thermal so

00:19:10,870 --> 00:19:16,240
it bases on the heat stack that's why

00:19:13,240 --> 00:19:17,830
they call it thermal it already has some

00:19:16,240 --> 00:19:19,270
graphical stuff and there's a video in

00:19:17,830 --> 00:19:22,270
the internet if you google for it

00:19:19,270 --> 00:19:25,840
thermal heat but it's really just a

00:19:22,270 --> 00:19:27,490
prototype we need some kind of public

00:19:25,840 --> 00:19:29,950
library where we can put all those

00:19:27,490 --> 00:19:33,100
scenarios there are some existing

00:19:29,950 --> 00:19:35,680
libraries for those cloud formation

00:19:33,100 --> 00:19:38,140
templates in Amazon lots of them

00:19:35,680 --> 00:19:40,150
actually but for that particular case if

00:19:38,140 --> 00:19:41,530
you want to use opensuse as the basis of

00:19:40,150 --> 00:19:44,800
course we would have to have our own

00:19:41,530 --> 00:19:48,940
catalog of stuff that really works with

00:19:44,800 --> 00:19:50,950
the opensuse the actual images of course

00:19:48,940 --> 00:19:54,010
that are referenced in those templates

00:19:50,950 --> 00:19:56,320
and tools as I said for building images

00:19:54,010 --> 00:20:00,179
in the scenarios and and the actual

00:19:56,320 --> 00:20:03,179
image is that work with heat

00:20:00,179 --> 00:20:05,759
well the design choices that I I've made

00:20:03,179 --> 00:20:09,960
for now first of all of course basing it

00:20:05,759 --> 00:20:12,360
on opensuse which is not an an easy

00:20:09,960 --> 00:20:16,289
choice at the moment because OpenStack

00:20:12,360 --> 00:20:19,740
is really mainly driven by developers

00:20:16,289 --> 00:20:21,480
using debian ubuntu fedora at the moment

00:20:19,740 --> 00:20:24,059
and that's really something that i want

00:20:21,480 --> 00:20:26,669
to change as part of this project i want

00:20:24,059 --> 00:20:29,279
to because i'm using opensuse with

00:20:26,669 --> 00:20:33,570
OpenStack make sure that it's it's it's

00:20:29,279 --> 00:20:35,340
in better shape that all the scripting

00:20:33,570 --> 00:20:37,169
all the demo environments that they

00:20:35,340 --> 00:20:41,639
build on top of other little sisters

00:20:37,169 --> 00:20:43,110
also work for opensuse and so opensuse

00:20:41,639 --> 00:20:44,820
would be used for the main demo image

00:20:43,110 --> 00:20:47,070
that runs on the laptop the image

00:20:44,820 --> 00:20:50,610
templates of course we would also for

00:20:47,070 --> 00:20:52,619
our corporate side of the of that

00:20:50,610 --> 00:20:56,100
picture we would have them based on

00:20:52,619 --> 00:20:57,659
susan's enterprise OpenStack for

00:20:56,100 --> 00:20:59,159
providing the virtualization framework

00:20:57,659 --> 00:21:01,379
as i mentioned i think we don't have to

00:20:59,159 --> 00:21:04,200
go through those again and specific

00:21:01,379 --> 00:21:08,879
Jabara related improvements as part of

00:21:04,200 --> 00:21:11,279
that horizon plugin that i mentioned and

00:21:08,879 --> 00:21:13,710
this all is obviously going to be

00:21:11,279 --> 00:21:15,389
written in python licensing wise it

00:21:13,710 --> 00:21:19,009
would be following the the OpenStack

00:21:15,389 --> 00:21:21,629
licensing which is a pretty liberal one

00:21:19,009 --> 00:21:23,330
why Python first of all because it's the

00:21:21,629 --> 00:21:25,889
language OpenStack is written in our

00:21:23,330 --> 00:21:28,259
personally I think Python really rocks

00:21:25,889 --> 00:21:30,149
after all stuff I've seen I'm always

00:21:28,259 --> 00:21:33,749
coming back to Python because for me it

00:21:30,149 --> 00:21:35,730
has the right balance of being a full

00:21:33,749 --> 00:21:38,820
complete language that you can use for

00:21:35,730 --> 00:21:42,119
writing large applications just a few

00:21:38,820 --> 00:21:43,649
scripts huge libraries with as they call

00:21:42,119 --> 00:21:46,860
it batteries included you can have

00:21:43,649 --> 00:21:50,279
libraries for XML manipulation for any

00:21:46,860 --> 00:21:51,570
kind of web servers and so on and but

00:21:50,279 --> 00:21:54,029
for me it's the only language I know

00:21:51,570 --> 00:21:57,379
well enough to use of course which is

00:21:54,029 --> 00:22:02,369
always a driving force for developers

00:21:57,379 --> 00:22:04,320
the components that we need yeah this is

00:22:02,369 --> 00:22:08,190
kind of repeating based based linux

00:22:04,320 --> 00:22:11,129
images and those libraries references

00:22:08,190 --> 00:22:13,159
and as I said also documentation content

00:22:11,129 --> 00:22:15,559
that could be anything from HTML

00:22:13,159 --> 00:22:17,749
content to site X 2 videos that we can

00:22:15,559 --> 00:22:20,509
link into this whole thing so if you

00:22:17,749 --> 00:22:24,799
want to show off a story about how can I

00:22:20,509 --> 00:22:26,869
secure the world according to you this

00:22:24,799 --> 00:22:31,249
prison break motive you could do that

00:22:26,869 --> 00:22:32,840
with showing you know this is my linux

00:22:31,249 --> 00:22:34,669
based infrastructure I've got

00:22:32,840 --> 00:22:36,769
software-defined switches I'm using

00:22:34,669 --> 00:22:40,220
encryption and so on and then you have

00:22:36,769 --> 00:22:43,159
those images and you can have additional

00:22:40,220 --> 00:22:45,460
content with videos with animations all

00:22:43,159 --> 00:22:47,749
those things and then storybooks that

00:22:45,460 --> 00:22:51,559
kind of bring this all together again

00:22:47,749 --> 00:22:54,139
those could be written in HTML and with

00:22:51,559 --> 00:22:57,169
some kind of workflow and the image

00:22:54,139 --> 00:22:59,059
store I mentioned already so how would a

00:22:57,169 --> 00:23:00,950
typically demo workflow work you

00:22:59,059 --> 00:23:02,989
download the main image you install that

00:23:00,950 --> 00:23:04,340
either on physical hardware which is

00:23:02,989 --> 00:23:07,330
recommended if you want to show off

00:23:04,340 --> 00:23:10,070
large things and it has to be very fast

00:23:07,330 --> 00:23:11,749
or four smaller demos you could as I

00:23:10,070 --> 00:23:15,830
said just use that in a virtual machine

00:23:11,749 --> 00:23:17,269
again nested virtualization you need

00:23:15,830 --> 00:23:21,340
internet connection for that of course

00:23:17,269 --> 00:23:25,249
then you can start your butter that that

00:23:21,340 --> 00:23:26,929
vm would only have the base that you

00:23:25,249 --> 00:23:29,779
really need and then you can go to the

00:23:26,929 --> 00:23:31,909
catalog and select scenarios from Jabara

00:23:29,779 --> 00:23:33,799
and download those scenarios again you

00:23:31,909 --> 00:23:35,299
need internet for that but after that

00:23:33,799 --> 00:23:38,749
you don't need internet anymore so you

00:23:35,299 --> 00:23:40,669
can demo things on site sometimes we've

00:23:38,749 --> 00:23:43,309
got customers who say well it's so hard

00:23:40,669 --> 00:23:45,320
to open the firewall for that meeting

00:23:43,309 --> 00:23:47,049
room to get you access to the internet

00:23:45,320 --> 00:23:49,970
or why can't you just bring your own

00:23:47,049 --> 00:23:53,109
stuff and then you can basically prepare

00:23:49,970 --> 00:23:56,929
you go there and it's all on on the box

00:23:53,109 --> 00:23:59,029
of course unless you demo something that

00:23:56,929 --> 00:24:01,359
is using I don't know google or so and

00:23:59,029 --> 00:24:06,249
then or Amazon then you have to be

00:24:01,359 --> 00:24:08,809
connected some examples so those are

00:24:06,249 --> 00:24:11,989
graphics i drew for for the heck week

00:24:08,809 --> 00:24:15,229
project in in spring whereas kind of

00:24:11,989 --> 00:24:19,249
kicked off shibata internally this would

00:24:15,229 --> 00:24:23,259
be a very simple scenario with a let's

00:24:19,249 --> 00:24:25,570
say a word press instance I've got a

00:24:23,259 --> 00:24:28,700
client

00:24:25,570 --> 00:24:31,480
gateway load balancer on port 80 this

00:24:28,700 --> 00:24:34,820
load balancers basically just a single

00:24:31,480 --> 00:24:39,200
instance balancer for now because I only

00:24:34,820 --> 00:24:42,499
have one back end but it may be due the

00:24:39,200 --> 00:24:44,360
ssl encryption then if got the data

00:24:42,499 --> 00:24:47,389
center network web server and the

00:24:44,360 --> 00:24:49,610
database I then can scare this out and

00:24:47,389 --> 00:24:53,539
show the same thing with two web servers

00:24:49,610 --> 00:24:55,879
for example and of course when it's in

00:24:53,539 --> 00:24:59,240
production I can also add monitoring I

00:24:55,879 --> 00:25:02,389
could maybe Mary that to nagios or so

00:24:59,240 --> 00:25:04,490
and have those those pictures where I

00:25:02,389 --> 00:25:06,619
can explain things and then I've got the

00:25:04,490 --> 00:25:10,610
traffic sigh the traffic lights where I

00:25:06,619 --> 00:25:12,350
see what the servers are doing and and

00:25:10,610 --> 00:25:13,700
maybe even you know click on the server

00:25:12,350 --> 00:25:17,749
you get more details and all those

00:25:13,700 --> 00:25:20,690
things this is a prototype but hard to

00:25:17,749 --> 00:25:24,110
read of how such a a template could look

00:25:20,690 --> 00:25:26,450
like and this was my own invention now

00:25:24,110 --> 00:25:28,999
I'm more turning towards you know what

00:25:26,450 --> 00:25:33,679
heat is doing the OpenStack project but

00:25:28,999 --> 00:25:37,460
it's in this case it's soon tax wise

00:25:33,679 --> 00:25:40,999
it's basically chasing so very simple

00:25:37,460 --> 00:25:43,070
nested structures where you describe the

00:25:40,999 --> 00:25:46,159
nodes and then you have like needs you

00:25:43,070 --> 00:25:48,740
could also say requires let's say this

00:25:46,159 --> 00:25:51,200
node up there it's a load balancer it

00:25:48,740 --> 00:25:52,460
requires middleware to run first because

00:25:51,200 --> 00:25:55,820
otherwise there's nothing to low balance

00:25:52,460 --> 00:25:59,360
and there's a jungle web server and so

00:25:55,820 --> 00:26:01,159
on and then you need some engine and

00:25:59,360 --> 00:26:03,320
that's as I said heat can do that for

00:26:01,159 --> 00:26:04,869
you that make sure that all those run

00:26:03,320 --> 00:26:12,399
and heat can even the latest

00:26:04,869 --> 00:26:16,369
incarnations be used for dynamic dynamic

00:26:12,399 --> 00:26:19,129
machine configurations where you say

00:26:16,369 --> 00:26:21,200
okay I'm running out of capacity for my

00:26:19,129 --> 00:26:24,379
web server so start new instances or

00:26:21,200 --> 00:26:27,649
reduce the number of instances again now

00:26:24,379 --> 00:26:29,389
where's the live demo well to be honest

00:26:27,649 --> 00:26:32,119
this not going to be a live demo today

00:26:29,389 --> 00:26:34,220
I'm very grateful to my colleague and

00:26:32,119 --> 00:26:38,269
really eager AJ that we have slides at

00:26:34,220 --> 00:26:39,149
least because I had to be out of the

00:26:38,269 --> 00:26:40,919
office for two days

00:26:39,149 --> 00:26:43,739
before that trip and she just send it

00:26:40,919 --> 00:26:50,039
all to me via email so I was able to

00:26:43,739 --> 00:26:52,559
present today but stay tuned timewise I

00:26:50,039 --> 00:26:53,999
could show you a mock-up demo but

00:26:52,559 --> 00:26:57,779
because we only have like 10 minutes

00:26:53,999 --> 00:26:59,669
left just keep the ad what is the

00:26:57,779 --> 00:27:03,149
project status well I as i said i

00:26:59,669 --> 00:27:06,950
started at hack week the whole idea has

00:27:03,149 --> 00:27:09,690
been in my head for more than a year

00:27:06,950 --> 00:27:11,639
I've made some experiments as I said

00:27:09,690 --> 00:27:13,559
this this code and this is actually

00:27:11,639 --> 00:27:15,989
working this template is working I've

00:27:13,559 --> 00:27:17,309
got some pipes in some couple of lines

00:27:15,989 --> 00:27:19,169
of Python script that actually would

00:27:17,309 --> 00:27:23,639
start up virtual machines in OpenStack

00:27:19,169 --> 00:27:26,429
with that code luckily OpenStack itself

00:27:23,639 --> 00:27:28,469
makes a lot of progress so that solves

00:27:26,429 --> 00:27:32,009
some of our problems without even

00:27:28,469 --> 00:27:35,219
getting engaged so our the first step

00:27:32,009 --> 00:27:38,129
should really be as opensuse community

00:27:35,219 --> 00:27:41,369
get involved with OpenStack it's it's

00:27:38,129 --> 00:27:43,200
really fun because it's um a community

00:27:41,369 --> 00:27:45,389
that's very lively where there are a lot

00:27:43,200 --> 00:27:48,599
of real problems to be solved and the

00:27:45,389 --> 00:27:50,339
iterations are very we're short so

00:27:48,599 --> 00:27:53,389
within weeks you can make progress it's

00:27:50,339 --> 00:27:57,059
a very open community where anybody can

00:27:53,389 --> 00:27:59,609
submit proposals called blueprints and

00:27:57,059 --> 00:28:02,009
those are loaded on and it's it's not

00:27:59,609 --> 00:28:05,070
like a lot of overhead to get involved

00:28:02,009 --> 00:28:07,139
and as I said right now it's a world

00:28:05,070 --> 00:28:08,789
where opensuse doesn't play the role it

00:28:07,139 --> 00:28:11,549
should be open suse is a very strong

00:28:08,789 --> 00:28:13,349
distro been it comes to desktops okay

00:28:11,549 --> 00:28:15,690
the e lovers love it because we have the

00:28:13,349 --> 00:28:17,580
best KDE and so on the gnome lavas love

00:28:15,690 --> 00:28:20,489
it because we have one of the best

00:28:17,580 --> 00:28:23,279
gnomes but when it comes to those cloud

00:28:20,489 --> 00:28:25,049
scenarios it's kind of second choice at

00:28:23,279 --> 00:28:26,549
the moment because not many developers

00:28:25,049 --> 00:28:30,629
are using it so we should really change

00:28:26,549 --> 00:28:32,399
that so I encourage you to join the

00:28:30,629 --> 00:28:36,719
project right now I only have this one

00:28:32,399 --> 00:28:38,519
landing page on opensuse dark and I'll

00:28:36,719 --> 00:28:40,769
put my email address there and make sure

00:28:38,519 --> 00:28:43,200
that you can contact me and of course

00:28:40,769 --> 00:28:47,700
you can contact me during the the event

00:28:43,200 --> 00:28:50,279
here i'm going to stay until the end you

00:28:47,700 --> 00:28:52,800
can also join souza as a company of

00:28:50,279 --> 00:28:54,540
course we are hiring and that's the

00:28:52,800 --> 00:28:56,250
slide I always have to show I don't know

00:28:54,540 --> 00:28:58,890
if this one is going to work on the

00:28:56,250 --> 00:29:03,780
screen but it's on this light so maybe

00:28:58,890 --> 00:29:06,390
take a photo also and some of those jobs

00:29:03,780 --> 00:29:08,670
really are OpenStack actually quite a

00:29:06,390 --> 00:29:11,640
few of them are OpenStack chops so if

00:29:08,670 --> 00:29:13,710
your Python developer but we also

00:29:11,640 --> 00:29:18,450
looking for for other stuff graphics

00:29:13,710 --> 00:29:20,880
designers and so on and um finally the

00:29:18,450 --> 00:29:22,500
project itself again this is if you

00:29:20,880 --> 00:29:25,110
don't want to join a company but just

00:29:22,500 --> 00:29:27,330
want to participate what Japan that

00:29:25,110 --> 00:29:29,400
really would need is as I said Python

00:29:27,330 --> 00:29:32,010
experts who want to hack an OpenStack

00:29:29,400 --> 00:29:33,720
upstream ideally of course weapon

00:29:32,010 --> 00:29:36,600
graphics designers there's a lot of work

00:29:33,720 --> 00:29:39,540
to do for them open build servers

00:29:36,600 --> 00:29:42,660
experts to help with the stuff going on

00:29:39,540 --> 00:29:44,580
there especially TV if you have QV

00:29:42,660 --> 00:29:48,480
knowledge test us later when we have

00:29:44,580 --> 00:29:53,550
something to show and so on that's it

00:29:48,480 --> 00:29:56,850
for now I really think that this is a

00:29:53,550 --> 00:30:00,480
project that could be very much not just

00:29:56,850 --> 00:30:03,150
useful but also fun to work on so I

00:30:00,480 --> 00:30:05,670
encourage you if you are interested join

00:30:03,150 --> 00:30:08,310
me if you are just fighting to use it we

00:30:05,670 --> 00:30:10,680
have to wait a couple of more weeks or

00:30:08,310 --> 00:30:13,110
months until we have something real in

00:30:10,680 --> 00:30:16,410
place that's going beyond the demos but

00:30:13,110 --> 00:30:19,320
i'm pretty sure that my end of the year

00:30:16,410 --> 00:30:21,930
when we have our suzique on in in

00:30:19,320 --> 00:30:23,610
florida there's something to show off

00:30:21,930 --> 00:30:27,360
that i'll also make publicly available

00:30:23,610 --> 00:30:29,280
and of course okay if there are any more

00:30:27,360 --> 00:30:33,390
questions i think you're a couple of

00:30:29,280 --> 00:30:35,690
minutes left for questions this guy over

00:30:33,390 --> 00:30:35,690
there

00:30:40,570 --> 00:30:46,820
yes I have to question about oh I think

00:30:44,690 --> 00:30:49,669
the Better Project use the oven steak

00:30:46,820 --> 00:30:52,100
but why use the open state do you

00:30:49,669 --> 00:30:58,820
consider user for example of a neighbor

00:30:52,100 --> 00:31:01,070
uh no well you could of course yeah yeah

00:30:58,820 --> 00:31:03,620
maybe for just running it on the laptop

00:31:01,070 --> 00:31:07,129
and so on opennebula is even better

00:31:03,620 --> 00:31:10,429
suited as it is today it's a bit like be

00:31:07,129 --> 00:31:12,769
sdn linux at some point bsd was the

00:31:10,429 --> 00:31:15,320
better operating system but linux was

00:31:12,769 --> 00:31:17,149
evolving faster OpenStack right now is

00:31:15,320 --> 00:31:21,230
in that position it still sucks in many

00:31:17,149 --> 00:31:23,450
cases it's very new but it's a project

00:31:21,230 --> 00:31:26,929
with hundreds of current contributors

00:31:23,450 --> 00:31:29,539
they when they have their events it's I

00:31:26,929 --> 00:31:32,090
don't know this year it's 500 next time

00:31:29,539 --> 00:31:34,370
it's 1,000 participants then it's 2000

00:31:32,090 --> 00:31:36,379
it's growing so fast there's a lot of

00:31:34,370 --> 00:31:38,480
momentum so ultimately I think there's

00:31:36,379 --> 00:31:42,769
no other cloud solution that can survive

00:31:38,480 --> 00:31:44,690
in in the overall big picture being the

00:31:42,769 --> 00:31:48,769
big player of course there are niches

00:31:44,690 --> 00:31:50,299
where yeah opennebula or also you know

00:31:48,769 --> 00:31:54,950
some of the other projects like the

00:31:50,299 --> 00:31:59,080
stuff that that citrix open sources so i

00:31:54,950 --> 00:32:01,610
mean those still have their merits but

00:31:59,080 --> 00:32:04,580
our focus right now is really on

00:32:01,610 --> 00:32:06,950
OpenStack and it's it's it scales down

00:32:04,580 --> 00:32:08,750
well enough it's still missing some of

00:32:06,950 --> 00:32:10,639
the graphical the nice graphical things

00:32:08,750 --> 00:32:12,019
that you have out of the box and open a

00:32:10,639 --> 00:32:14,450
valid that's that's for sure yeah

00:32:12,019 --> 00:32:18,710
because my question is for your slide

00:32:14,450 --> 00:32:22,370
our processes is one downloader ciabatta

00:32:18,710 --> 00:32:25,129
and two to choose dressing or real but I

00:32:22,370 --> 00:32:27,379
think the question is if if someone who

00:32:25,129 --> 00:32:29,179
is organizer who is a marketing with the

00:32:27,379 --> 00:32:32,419
documenting they want to show up the

00:32:29,179 --> 00:32:36,049
power of oven Susur so question one is

00:32:32,419 --> 00:32:38,720
where is the OpenStack server we can use

00:32:36,049 --> 00:32:42,080
yeah yeah this is visitors first one

00:32:38,720 --> 00:32:44,330
because we must choose the scenario yeah

00:32:42,080 --> 00:32:47,419
full of en right so where we can shoot

00:32:44,330 --> 00:32:50,240
it we can we can dating back to the Susa

00:32:47,419 --> 00:32:53,090
studio or anything else because I don't

00:32:50,240 --> 00:32:53,990
see I don't see anything here so I can

00:32:53,090 --> 00:32:56,450
understand

00:32:53,990 --> 00:32:59,030
I can not really understand what's the

00:32:56,450 --> 00:33:01,970
process if we want to show to the power

00:32:59,030 --> 00:33:03,800
and the second one why we asked to why

00:33:01,970 --> 00:33:06,410
not consider to the open neighbor

00:33:03,800 --> 00:33:08,570
because I think no vinay rai is most

00:33:06,410 --> 00:33:10,550
simple to create because you know the

00:33:08,570 --> 00:33:13,160
ovens day they are saving project for

00:33:10,550 --> 00:33:15,530
the OpenStack and to build a almost deck

00:33:13,160 --> 00:33:19,880
server is the most difficult you to the

00:33:15,530 --> 00:33:25,100
noble engineer so so the Susa provide

00:33:19,880 --> 00:33:27,980
OpenStack and open a ciabatta project to

00:33:25,100 --> 00:33:29,960
use for the normal and user with

00:33:27,980 --> 00:33:32,390
documenting measures well yeah obviously

00:33:29,960 --> 00:33:34,390
that that's really part of the project

00:33:32,390 --> 00:33:37,730
to make sure that we have this

00:33:34,390 --> 00:33:40,850
easy-to-use image that has an OpenStack

00:33:37,730 --> 00:33:43,940
running devstack is just a script that

00:33:40,850 --> 00:33:46,340
can get things up and running from the

00:33:43,940 --> 00:33:49,130
sources and it works pretty well but

00:33:46,340 --> 00:33:52,570
it's it's hacking it's a big hug and as

00:33:49,130 --> 00:33:55,429
I said not so well suited for opensuse

00:33:52,570 --> 00:33:57,830
yeah that that's one of the most

00:33:55,429 --> 00:33:59,600
immediate deliverables to get to an

00:33:57,830 --> 00:34:02,210
image where you just download a live CD

00:33:59,600 --> 00:34:05,480
that already includes a running

00:34:02,210 --> 00:34:07,490
OpenStack that's that's going to be

00:34:05,480 --> 00:34:10,280
easier than opening bowler then because

00:34:07,490 --> 00:34:11,869
it's all pre pre configured it's some

00:34:10,280 --> 00:34:14,600
work to do but it's work we have to do

00:34:11,869 --> 00:34:17,419
anyway because we have to OpenStack is

00:34:14,600 --> 00:34:20,149
our second bed we have the Souza cloud

00:34:17,419 --> 00:34:24,409
product we really wanted to do that and

00:34:20,149 --> 00:34:26,270
it is complicated at first but it's you

00:34:24,409 --> 00:34:29,929
can all see a lit down to running a

00:34:26,270 --> 00:34:32,359
single database postgres of MySQL and

00:34:29,929 --> 00:34:34,700
and and it doesn't really take lots of

00:34:32,359 --> 00:34:38,240
memories so you can scale it down and

00:34:34,700 --> 00:34:40,100
you can run it on a laptop yeah but yeah

00:34:38,240 --> 00:34:42,649
that's not done yet right now if you

00:34:40,100 --> 00:34:44,570
want to do today opennebula is probably

00:34:42,649 --> 00:34:46,070
much easier choice or other things like

00:34:44,570 --> 00:34:52,790
there's background for example that you

00:34:46,070 --> 00:34:55,159
use on what is it called virtual box as

00:34:52,790 --> 00:34:58,850
the base and those there are existing

00:34:55,159 --> 00:35:04,130
projects that come close but all of them

00:34:58,850 --> 00:35:06,670
are kind of well of mainstream in the

00:35:04,130 --> 00:35:06,670
long run I think

00:35:11,619 --> 00:35:29,599
other questions I ask you questions

00:35:20,770 --> 00:35:32,810
nothing okay so else you want say yeah

00:35:29,599 --> 00:35:36,619
maybe just some more advertisements I'm

00:35:32,810 --> 00:35:40,280
going to try to have a bird feather

00:35:36,619 --> 00:35:43,160
session later this week or over the

00:35:40,280 --> 00:35:45,859
weekend where we want to discuss how we

00:35:43,160 --> 00:35:48,109
can improve in general the situation

00:35:45,859 --> 00:35:51,740
with developers and opensuse I've seen a

00:35:48,109 --> 00:35:54,320
lot of projects that that are very

00:35:51,740 --> 00:35:57,349
active but nobody's using opensuse they

00:35:54,320 --> 00:35:59,089
are all using Ubuntu yeah and we have to

00:35:57,349 --> 00:36:00,849
change that if you want to stay relevant

00:35:59,089 --> 00:36:06,369
as a community we have to change that

00:36:00,849 --> 00:36:10,430
and I also tried as part of my daily job

00:36:06,369 --> 00:36:12,440
to talk a bit about the new installer

00:36:10,430 --> 00:36:14,510
that we are planning for first last 12

00:36:12,440 --> 00:36:17,420
so stay tuned for the bird of feather

00:36:14,510 --> 00:36:20,780
sessions on those 2 i'm planning to

00:36:17,420 --> 00:36:23,060
offer and those will not be scripted

00:36:20,780 --> 00:36:26,930
there will be no slice just me and you

00:36:23,060 --> 00:36:30,800
and a whiteboard or so but i want to

00:36:26,930 --> 00:36:34,750
really figure out some of those topics

00:36:30,800 --> 00:36:34,750

YouTube URL: https://www.youtube.com/watch?v=f0qb1kzPxXE


