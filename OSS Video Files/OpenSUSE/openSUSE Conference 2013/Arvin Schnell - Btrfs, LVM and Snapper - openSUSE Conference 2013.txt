Title: Arvin Schnell - Btrfs, LVM and Snapper - openSUSE Conference 2013
Publication date: 2013-07-22
Playlist: openSUSE Conference 2013
Description: 
	Both btrfs and the latest LVM provide efficient file-system snapshots. In this
talk we will give an overview of btrfs and LVM snapshots and how snapper
integrates them into the system for easy use by all users. We will explain how
other software can use the power of snapper and finally give an outlook of
future development.
Captions: 
	00:00:00,000 --> 00:00:09,360
presentation for around 30 minute now

00:00:06,020 --> 00:00:14,150
the Shoshones butterface logical volume

00:00:09,360 --> 00:00:14,150
manager and snapper with arbonne Sneyd

00:00:15,980 --> 00:00:22,609
ASM good afternoon everybody so I'm

00:00:20,189 --> 00:00:26,670
going to talk about patter of SL vm and

00:00:22,609 --> 00:00:29,400
snapper where a butterface and lvm i

00:00:26,670 --> 00:00:36,809
will concentrate on the snapshot

00:00:29,400 --> 00:00:40,590
features so what is butter FS it's a

00:00:36,809 --> 00:00:43,260
relatively new file system for linux and

00:00:40,590 --> 00:00:48,450
it was first supported in opensuse level

00:00:43,260 --> 00:00:51,480
4 it has some outstanding features it's

00:00:48,450 --> 00:00:54,780
a entirely copy-on-write file system

00:00:51,480 --> 00:00:57,059
which means that it never over writes a

00:00:54,780 --> 00:01:00,390
block on your disk it always writes a

00:00:57,059 --> 00:01:05,729
new copy of it and then sets the

00:01:00,390 --> 00:01:08,930
metadata and it is resiliency it has

00:01:05,729 --> 00:01:12,780
check summing of data and metadata and

00:01:08,930 --> 00:01:18,000
it has its included multiple device

00:01:12,780 --> 00:01:20,820
support it can do raid 0 1 5 and 10 you

00:01:18,000 --> 00:01:25,290
can even select different rate types for

00:01:20,820 --> 00:01:30,470
your metadata and your data and suppose

00:01:25,290 --> 00:01:33,540
you have a marine rate on two discs and

00:01:30,470 --> 00:01:36,780
during reading butter FS will always

00:01:33,540 --> 00:01:39,900
check em that the checksum is correct

00:01:36,780 --> 00:01:43,140
and if it detects a mistake we will

00:01:39,900 --> 00:01:48,210
write it will read the other copy of the

00:01:43,140 --> 00:01:50,700
M data and hope that it's still correct

00:01:48,210 --> 00:01:53,820
and then correct the mistake it does

00:01:50,700 --> 00:01:57,149
this automatically always but you can

00:01:53,820 --> 00:02:00,719
also run a scrubbing process it's called

00:01:57,149 --> 00:02:06,090
where it does this manually for you all

00:02:00,719 --> 00:02:10,160
off on over the old file system it also

00:02:06,090 --> 00:02:12,120
supports compression and deduplication

00:02:10,160 --> 00:02:15,659
to be too

00:02:12,120 --> 00:02:18,959
education means and that it finds blocks

00:02:15,659 --> 00:02:22,470
on the on the in the file system that

00:02:18,959 --> 00:02:26,790
are identical and then just has keeps

00:02:22,470 --> 00:02:29,879
one copy of them and the meta data

00:02:26,790 --> 00:02:33,750
points to the same block so if you have

00:02:29,879 --> 00:02:36,569
many identical files or at least partly

00:02:33,750 --> 00:02:44,879
identical files then this can save you a

00:02:36,569 --> 00:02:48,299
lot of em disk space and well it also

00:02:44,879 --> 00:02:52,349
has for example it's optimized for solid

00:02:48,299 --> 00:02:54,870
state disk good test is that it sends

00:02:52,349 --> 00:02:59,970
out a trim command to the hardware so

00:02:54,870 --> 00:03:02,370
that we disclose that it em can em free

00:02:59,970 --> 00:03:05,519
thee that the block is no longer needed

00:03:02,370 --> 00:03:08,280
and it can rearrange dishonest on the

00:03:05,519 --> 00:03:10,709
flash drive and especially interesting

00:03:08,280 --> 00:03:14,129
are these soft volumes and efficient

00:03:10,709 --> 00:03:17,519
snapshots which I will demonstrate soon

00:03:14,129 --> 00:03:21,120
and more less this up volume looks like

00:03:17,519 --> 00:03:24,359
a directory in the beginning and a

00:03:21,120 --> 00:03:29,250
snapshot is like a sub volume but it

00:03:24,359 --> 00:03:32,069
already contains em the content of the

00:03:29,250 --> 00:03:33,959
file system so for example if you have

00:03:32,069 --> 00:03:37,319
your root filesystem you can snap shut

00:03:33,959 --> 00:03:40,139
it and then in in a sub direct in the

00:03:37,319 --> 00:03:43,849
sub volume and this sub volume will then

00:03:40,139 --> 00:03:43,849
look like your root filesystem

00:03:51,080 --> 00:03:59,250
so what's the logical volume manager so

00:03:55,950 --> 00:04:02,340
the logical volume managers has been

00:03:59,250 --> 00:04:05,400
along rather long more than 10 years and

00:04:02,340 --> 00:04:11,130
it combines block devices into new block

00:04:05,400 --> 00:04:14,490
devices so you can for example from too

00:04:11,130 --> 00:04:17,400
hard disks you can create one block

00:04:14,490 --> 00:04:21,960
devices which has done the size of both

00:04:17,400 --> 00:04:24,980
hard disks and this is this is very

00:04:21,960 --> 00:04:28,770
flexible at runtime you can add new and

00:04:24,980 --> 00:04:30,750
block devices if you plug a new compare

00:04:28,770 --> 00:04:35,670
hard disk into your system you can

00:04:30,750 --> 00:04:37,740
extend this and the resulting and block

00:04:35,670 --> 00:04:40,410
devices called logical volumes you can

00:04:37,740 --> 00:04:43,200
also resize them at runtime you can also

00:04:40,410 --> 00:04:46,320
move data from one disk to another disk

00:04:43,200 --> 00:04:49,620
I've done this once when I got an SSD at

00:04:46,320 --> 00:04:52,080
work in your why the system was running

00:04:49,620 --> 00:04:59,250
I was able to move the data from the

00:04:52,080 --> 00:05:02,100
artist to the new SSD and the logical

00:04:59,250 --> 00:05:05,450
volume anitra also provides striping

00:05:02,100 --> 00:05:10,430
mirroring rate four five and six and

00:05:05,450 --> 00:05:15,900
this works without the underlying md red

00:05:10,430 --> 00:05:18,930
so it's a different technique here and a

00:05:15,900 --> 00:05:21,840
very new and feature of thin provision

00:05:18,930 --> 00:05:26,280
is of lvm is in provisioning it's in

00:05:21,840 --> 00:05:32,520
current creed or two and here you have a

00:05:26,280 --> 00:05:36,920
pool of data and your logical volumes

00:05:32,520 --> 00:05:39,840
are delayed the allocation is delayed so

00:05:36,920 --> 00:05:43,740
the logical volumes only need to space

00:05:39,840 --> 00:05:46,620
when you really need it and this even

00:05:43,740 --> 00:05:50,810
allows if overcommit you can create

00:05:46,620 --> 00:05:54,540
logical volumes greater than your and

00:05:50,810 --> 00:06:00,630
then your disks and it also provides

00:05:54,540 --> 00:06:05,610
efficient snapshots so here's a diagram

00:06:00,630 --> 00:06:08,400
and how lvm normally looks so in this

00:06:05,610 --> 00:06:11,940
example there are three physical volumes

00:06:08,400 --> 00:06:15,270
and those are combined into a watch it

00:06:11,940 --> 00:06:18,330
volume group that's the big thing in the

00:06:15,270 --> 00:06:21,210
middle and then you create logical

00:06:18,330 --> 00:06:24,419
volumes and within provisioning this new

00:06:21,210 --> 00:06:27,030
in the right grey area where you first

00:06:24,419 --> 00:06:29,100
have a pool and then your logical

00:06:27,030 --> 00:06:31,940
volumes and there you have this sim

00:06:29,100 --> 00:06:31,940
provisioning feature

00:07:27,190 --> 00:07:40,480
so on this computer I have now used

00:07:31,180 --> 00:07:42,730
butter FS for the root file system so

00:07:40,480 --> 00:07:46,540
you can see my root filesystem as type

00:07:42,730 --> 00:07:50,190
RFS and I can now start to list your

00:07:46,540 --> 00:07:50,190
lista subvolumes I have

00:08:01,370 --> 00:08:04,370
cool

00:08:09,249 --> 00:08:16,839
and so here we see the M sub volumes we

00:08:13,629 --> 00:08:20,229
have created and yes has already created

00:08:16,839 --> 00:08:23,109
some zap volumes called temp opt and SFO

00:08:20,229 --> 00:08:24,939
and summon bar and we create those

00:08:23,109 --> 00:08:28,329
because we don't want to snap them

00:08:24,939 --> 00:08:31,239
snapshot them normally and there's no

00:08:28,329 --> 00:08:33,839
need to snap sure temp directory for

00:08:31,239 --> 00:08:33,839
example

00:08:38,360 --> 00:08:43,459
and I have another file system home

00:08:40,719 --> 00:08:45,589
where there are also some snapshots

00:08:43,459 --> 00:08:51,019
those are those created by snapper I

00:08:45,589 --> 00:08:52,940
will explain later now as an example I

00:08:51,019 --> 00:08:56,120
want to create a snapshot of the root

00:08:52,940 --> 00:09:05,300
file system so i use this butterface

00:08:56,120 --> 00:09:14,839
command line tool again subvolume create

00:09:05,300 --> 00:09:18,170
a no subvolume snapshot and then I give

00:09:14,839 --> 00:09:21,950
the root filesystem and / snap where the

00:09:18,170 --> 00:09:24,950
snapshot is created so you see this was

00:09:21,950 --> 00:09:27,079
a rather fast operation now I can go

00:09:24,950 --> 00:09:33,230
into this directory or injustice up

00:09:27,079 --> 00:09:36,399
volume snapshot a snap and here i see my

00:09:33,230 --> 00:09:36,399
complete file system

00:09:41,260 --> 00:09:53,320
and one yes and snapshots can be read

00:09:45,520 --> 00:09:57,900
only or read writable so that's what I

00:09:53,320 --> 00:09:57,900
wanted to show about part of snapshots

00:10:12,920 --> 00:10:21,920
so unfortunately the M support of thin

00:10:17,329 --> 00:10:25,250
provisioned lvm is a bit broken and 11

00:10:21,920 --> 00:10:30,070
alien 12 to three so I have to show this

00:10:25,250 --> 00:10:30,070
on MLS sp3

00:10:35,860 --> 00:10:39,810
yeah we reckon true a bit more

00:10:42,440 --> 00:10:48,750
for example what I can also show up at

00:10:45,000 --> 00:10:53,280
her face and when I look at the root

00:10:48,750 --> 00:10:57,600
filesystem I can show you that the home

00:10:53,280 --> 00:11:07,230
directory for example contains a my home

00:10:57,600 --> 00:11:11,100
directory and the snapshot there this is

00:11:07,230 --> 00:11:13,710
not does not exist because only in one

00:11:11,100 --> 00:11:17,690
snapshot only contains one sup volume

00:11:13,710 --> 00:11:17,690
that sub volumes within that

00:11:36,160 --> 00:11:41,940
hadis takes a bit time to put up

00:12:06,920 --> 00:12:10,940
now maybe that takes too long

00:12:22,620 --> 00:12:26,510
oh maybe I should it later on

00:12:30,640 --> 00:12:44,860
so but am so now we have two

00:12:42,430 --> 00:12:46,540
technologies to create em snapshots of

00:12:44,860 --> 00:12:51,370
your file of your file system with

00:12:46,540 --> 00:12:54,520
butter FS and lvm those are technically

00:12:51,370 --> 00:12:57,870
quite different and you also have to use

00:12:54,520 --> 00:13:00,850
different tools to work with them and

00:12:57,870 --> 00:13:02,530
it's also not very comfortable you have

00:13:00,850 --> 00:13:06,520
to use this command line tool if you

00:13:02,530 --> 00:13:10,120
create a snapshot you can just say one

00:13:06,520 --> 00:13:12,490
directory like what it's called but you

00:13:10,120 --> 00:13:16,150
cannot save metadata with the snapshot

00:13:12,490 --> 00:13:18,880
for example why you created it or some

00:13:16,150 --> 00:13:23,200
description or who created it so for

00:13:18,880 --> 00:13:26,230
this we created a snapper which is

00:13:23,200 --> 00:13:28,480
simply a tool to manage these file

00:13:26,230 --> 00:13:31,570
system snapshot it was started about two

00:13:28,480 --> 00:13:35,950
and a half years ago and first included

00:13:31,570 --> 00:13:41,070
in oakland zoo 11-12 dot one it supports

00:13:35,950 --> 00:13:46,050
butter FS and sin provisioned lvm

00:13:41,070 --> 00:13:46,050
snapshots can be created manually and

00:13:46,500 --> 00:13:51,880
they are also created automatically in a

00:13:49,270 --> 00:13:55,030
timeline so every hour a snapshot is

00:13:51,880 --> 00:13:58,210
created and it's then cleaned up later

00:13:55,030 --> 00:14:02,740
and this cleanup algorithm works this

00:13:58,210 --> 00:14:05,410
way that you have lots of snapshots in a

00:14:02,740 --> 00:14:10,150
short time so for example you have ten

00:14:05,410 --> 00:14:11,860
in the last day and then the older ones

00:14:10,150 --> 00:14:15,310
you have less of them so for example

00:14:11,860 --> 00:14:19,240
another ten for a month and another ten

00:14:15,310 --> 00:14:22,120
in a year or something like this and we

00:14:19,240 --> 00:14:28,420
have a command-line tool and the last

00:14:22,120 --> 00:14:32,350
graphical interface yes and butter if s

00:14:28,420 --> 00:14:34,960
is already configured or new if you use

00:14:32,350 --> 00:14:38,050
yes to install your system with butter

00:14:34,960 --> 00:14:40,450
of ss root it will immediately install

00:14:38,050 --> 00:14:42,720
snapper and configure it for your root

00:14:40,450 --> 00:14:42,720
filesystem

00:14:47,219 --> 00:14:54,879
so we have in butter as one

00:14:50,559 --> 00:14:57,999
configuration purse up volume and for

00:14:54,879 --> 00:15:00,999
each snapshot we can we save some

00:14:57,999 --> 00:15:05,139
metadata the time and date description

00:15:00,999 --> 00:15:09,819
user who created this snapshot user data

00:15:05,139 --> 00:15:15,039
which is free key value pair the user

00:15:09,819 --> 00:15:18,159
can set then we can compare snapshots so

00:15:15,039 --> 00:15:20,589
you can see for example what has changed

00:15:18,159 --> 00:15:25,359
on my file system since yesterday

00:15:20,589 --> 00:15:27,699
morning or something like this and we

00:15:25,359 --> 00:15:31,119
can revert those changes between

00:15:27,699 --> 00:15:33,789
snapshots and internally we distinguish

00:15:31,119 --> 00:15:37,419
between single pre and post snapshots

00:15:33,789 --> 00:15:40,359
and pre and post snapshots always belong

00:15:37,419 --> 00:15:43,929
together and those are for example

00:15:40,359 --> 00:15:47,579
created by just so we when you start

00:15:43,929 --> 00:15:51,099
just one pre snapshot is created and

00:15:47,579 --> 00:15:53,769
when justice done another snapshot is

00:15:51,099 --> 00:15:57,339
created a post snapshot and then snapper

00:15:53,769 --> 00:15:59,199
compare those two snapshots and Jose can

00:15:57,339 --> 00:16:09,249
show you the changes just as made

00:15:59,199 --> 00:16:12,719
immediately ok I will demo to stand in a

00:16:09,249 --> 00:16:16,749
few minutes and one new thing in

00:16:12,719 --> 00:16:20,439
opensuse 1233 stairs we have a diva's

00:16:16,749 --> 00:16:24,489
interface for snapper um never was

00:16:20,439 --> 00:16:27,999
gluten server and declined the server is

00:16:24,489 --> 00:16:31,239
only started on demand and just the

00:16:27,999 --> 00:16:33,969
operations only allowed by root but

00:16:31,239 --> 00:16:36,969
other operations like this fire revert

00:16:33,969 --> 00:16:43,179
is still done by the client and you can

00:16:36,969 --> 00:16:44,729
give users access to those em two

00:16:43,179 --> 00:16:47,169
snapper that they can for example

00:16:44,729 --> 00:16:49,749
snapshot your own home directory and

00:16:47,169 --> 00:16:52,469
this is already used naga ellipse soup

00:16:49,749 --> 00:16:52,469
and some bar

00:16:56,440 --> 00:17:01,690
so now we will make it a short demo of

00:16:59,209 --> 00:17:01,690
snapper

00:17:30,300 --> 00:17:38,190
so first I can list what configuration

00:17:35,040 --> 00:17:40,200
snapper knows about so I've one root for

00:17:38,190 --> 00:17:45,300
the root filesystem and home are schnell

00:17:40,200 --> 00:17:54,230
for the home directory and now for

00:17:45,300 --> 00:17:58,370
example i can start gas too remote and

00:17:54,230 --> 00:17:58,370
fill it with the system

00:18:04,290 --> 00:18:11,310
so now I allow them just to open remote

00:18:07,980 --> 00:18:15,750
administration maybe I don't know

00:18:11,310 --> 00:18:17,940
exactly what this is so then i will look

00:18:15,750 --> 00:18:20,910
at snapper again i've listed snapshots

00:18:17,940 --> 00:18:24,480
and and now you see two new snapshots

00:18:20,910 --> 00:18:29,730
number four and five and description

00:18:24,480 --> 00:18:35,270
says yes remote and now and i can ask

00:18:29,730 --> 00:18:38,490
what has been and has been changed

00:18:35,270 --> 00:18:41,580
between those two snapshots now it is

00:18:38,490 --> 00:18:44,780
this never runs the comparison which

00:18:41,580 --> 00:18:44,780
takes a few seconds

00:18:50,640 --> 00:18:55,790
yeah maybe more than a few seconds

00:19:25,970 --> 00:19:32,510
yes this is unfortunately is still very

00:19:28,220 --> 00:19:36,770
slow we have been less 11 sp3 death and

00:19:32,510 --> 00:19:39,370
a fellow redditors by using a new

00:19:36,770 --> 00:19:43,250
feature of butter FS called send receive

00:19:39,370 --> 00:19:46,640
where part FS already you can M tell you

00:19:43,250 --> 00:19:53,780
the change is done so now you see em

00:19:46,640 --> 00:19:55,910
there are some init script and those has

00:19:53,780 --> 00:19:58,520
have been added you see this with the

00:19:55,910 --> 00:20:00,560
plus sign and the C means that the

00:19:58,520 --> 00:20:03,110
content of some files exchange for

00:20:00,560 --> 00:20:06,350
example it is users config display

00:20:03,110 --> 00:20:10,840
manager now we can just use snapper

00:20:06,350 --> 00:20:15,290
again say give me the difference between

00:20:10,840 --> 00:20:21,950
the snapshots four and five of the file

00:20:15,290 --> 00:20:26,870
if you see this config display manager

00:20:21,950 --> 00:20:29,360
and now you can see exactly what what

00:20:26,870 --> 00:20:32,720
just has changed to your system so you

00:20:29,360 --> 00:20:35,470
can use this for once to learn what just

00:20:32,720 --> 00:20:38,690
or other things do to your system and

00:20:35,470 --> 00:20:41,960
you can also use the to revert changes

00:20:38,690 --> 00:20:47,260
now I can for example say it's not her

00:20:41,960 --> 00:20:51,170
again undo change and is then it will

00:20:47,260 --> 00:20:53,960
copy the file now in this case just

00:20:51,170 --> 00:20:56,270
etc's this convict display mature from

00:20:53,960 --> 00:20:59,840
the first snapshot back into the system

00:20:56,270 --> 00:21:04,280
so undoing your change and undoing the

00:20:59,840 --> 00:21:07,340
change em gasps has done the same

00:21:04,280 --> 00:21:09,410
happens when you use super then also a

00:21:07,340 --> 00:21:12,530
snapper is created in the beginning and

00:21:09,410 --> 00:21:15,340
in the end so then you can see what

00:21:12,530 --> 00:21:18,340
files have been edit removed and

00:21:15,340 --> 00:21:18,340
unchanged

00:21:24,100 --> 00:21:29,490
and we also have to make graphics um

00:21:29,880 --> 00:21:40,179
view using yust you can in this table

00:21:36,460 --> 00:21:48,940
select and again I'm snapshot four and

00:21:40,179 --> 00:21:52,929
five say so throw changes on the left is

00:21:48,940 --> 00:21:55,660
a tree with all the files changed and if

00:21:52,929 --> 00:22:06,549
I select one file you see again the

00:21:55,660 --> 00:22:11,650
difference now even in color so this was

00:22:06,549 --> 00:22:15,789
now all done as the root user but as I

00:22:11,650 --> 00:22:21,220
said it's also possible for the for a

00:22:15,789 --> 00:22:23,559
non root user to use this new feature so

00:22:21,220 --> 00:22:29,140
then I must say on which configuration I

00:22:23,559 --> 00:22:33,130
want to M work so I say config home now

00:22:29,140 --> 00:22:35,350
and I can say again list and I see a few

00:22:33,130 --> 00:22:41,940
snapshots that were made by this time

00:22:35,350 --> 00:22:41,940
line algorithm and now I can for example

00:22:45,799 --> 00:22:57,649
create m2 snapshot actually and I can M

00:22:52,929 --> 00:23:00,399
specify a command that will be run so I

00:22:57,649 --> 00:23:00,399
just touch

00:23:05,700 --> 00:23:16,850
i just touched a fire and now again two

00:23:09,029 --> 00:23:20,429
snapshots has been created and with

00:23:16,850 --> 00:23:25,850
status i can again see the difference

00:23:20,429 --> 00:23:25,850
that so I see 115 was created here

00:23:44,060 --> 00:23:46,570
if

00:23:50,910 --> 00:24:02,620
so that was the last demo mmm so that

00:24:00,220 --> 00:24:06,309
was this date in opensuse to after three

00:24:02,620 --> 00:24:09,820
and there are some new features already

00:24:06,309 --> 00:24:11,980
we have support for acls and extended

00:24:09,820 --> 00:24:15,790
attributes which has provide been

00:24:11,980 --> 00:24:19,419
provided by redhead and I can say that

00:24:15,790 --> 00:24:23,590
for example fedora 19 also now include

00:24:19,419 --> 00:24:26,230
snapper we have another module a pen

00:24:23,590 --> 00:24:29,080
module called Pam snapper where you can

00:24:26,230 --> 00:24:33,190
create snapshots when the user locks in

00:24:29,080 --> 00:24:36,640
or locks out and we have to sputter of

00:24:33,190 --> 00:24:42,549
SN receive and we use this for faster

00:24:36,640 --> 00:24:45,250
comparison when using butter FS and one

00:24:42,549 --> 00:24:49,110
thing although these three features

00:24:45,250 --> 00:24:53,410
already implemented and the next thing

00:24:49,110 --> 00:24:56,320
rather important is that we can M will

00:24:53,410 --> 00:24:59,620
check at least I hope it will work use

00:24:56,320 --> 00:25:01,990
the butter FS quarter groups to track

00:24:59,620 --> 00:25:05,520
the disk space used by the snapshots and

00:25:01,990 --> 00:25:09,580
then whenever warn the user when I'm

00:25:05,520 --> 00:25:13,390
they get very big or delete them

00:25:09,580 --> 00:25:18,190
dynamically but this is still in

00:25:13,390 --> 00:25:21,669
development so currently am you have to

00:25:18,190 --> 00:25:23,620
watch your disk space frequently that

00:25:21,669 --> 00:25:34,720
you don't run out out of this game disk

00:25:23,620 --> 00:25:39,520
space so then one final slide you can

00:25:34,720 --> 00:25:42,309
join those of your hiring m yeah talk to

00:25:39,520 --> 00:25:51,309
our colleagues at the booth or go to the

00:25:42,309 --> 00:25:55,990
web page so um one last the web page

00:25:51,309 --> 00:25:59,230
never dot IO it contains em it's a

00:25:55,990 --> 00:26:01,170
central place and for all links to the

00:25:59,230 --> 00:26:02,910
github repository

00:26:01,170 --> 00:26:06,080
we're all the source source code is

00:26:02,910 --> 00:26:10,970
snappers of course open source and

00:26:06,080 --> 00:26:13,440
creates it contains a tutorial faq

00:26:10,970 --> 00:26:20,150
packages for various distributions

00:26:13,440 --> 00:26:24,120
including debian ubuntu and Zuffa 20 ha

00:26:20,150 --> 00:26:27,780
and yeah if you tracking system

00:26:24,120 --> 00:26:33,140
everything that github provides so thank

00:26:27,780 --> 00:26:33,140
you very much any questions

00:26:45,270 --> 00:26:47,870
yes

00:26:48,880 --> 00:26:55,480
this notebook has butter FS and have

00:26:52,180 --> 00:27:01,750
another notebook was butter FS my

00:26:55,480 --> 00:27:06,160
workstation m is still very old I've got

00:27:01,750 --> 00:27:16,960
reformatted it in years so it's still

00:27:06,160 --> 00:27:20,220
using X x3 or x4 and XFS okay then

00:27:16,960 --> 00:27:20,220

YouTube URL: https://www.youtube.com/watch?v=ERqTlgnfPZw


