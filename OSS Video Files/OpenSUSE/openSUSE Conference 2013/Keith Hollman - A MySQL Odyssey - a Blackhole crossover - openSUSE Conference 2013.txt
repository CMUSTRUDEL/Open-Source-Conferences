Title: Keith Hollman - A MySQL Odyssey - a Blackhole crossover - openSUSE Conference 2013
Publication date: 2013-07-22
Playlist: openSUSE Conference 2013
Description: 
	Replicating MySQL data cross-platform

MySQL in development environments are most widely deployed on a Windows platform: it's a natural step. However, the Sys Admin's & DBA's tend to prefer a Linux / Unix production host for resource growth capabilities and stability.
In addition to Disaster & Recovery solutions, MySQL Replication can be setup to help reduce the platform gap between the team's favourite solution, i.e. facilitate the platform crossover. For whatever need.

When using MySQL Replication we can share data models, data and even filter between environments and platforms. This can provide us with a wide range of possibilities, not just an automated D&R master-slave 'waiting for the worst to happen' and under-used environment. We can use each step to our own benefit and/or allow access and specific data access, that easily stretches the boundaries .. maximizing business benefits.

Here we'll be seeing a replication example setup, that replicates MySQL databases from a Windows Master, onto an Oracle Linux slave, whose tables are using the BLACKHOLE storage engine, in turn is a Master to the SLES environment.
Captions: 
	00:06:43,810 --> 00:06:51,020
because it's working well or we have

00:06:46,400 --> 00:06:52,490
different pieces and I said we may be

00:06:51,020 --> 00:06:54,729
nice if we could do this automatically

00:06:52,490 --> 00:07:03,319
and

00:06:54,729 --> 00:07:09,020
Alaska to set up the turbo pc is any pc

00:07:03,319 --> 00:07:11,810
as well as windows around to remember

00:07:09,020 --> 00:07:13,940
that what we're doing that's when it's

00:07:11,810 --> 00:07:19,909
not so pretty and attaining creativity

00:07:13,940 --> 00:07:23,270
dates or transitional he would what to

00:07:19,909 --> 00:07:24,669
do however in a second environment means

00:07:23,270 --> 00:07:27,380
in the black holes that were carrying

00:07:24,669 --> 00:07:32,900
process of a replication and we change

00:07:27,380 --> 00:07:34,789
it a black hole where locates tuesday is

00:07:32,900 --> 00:07:38,840
explain how we assess a replication

00:07:34,789 --> 00:07:40,759
because i'm not the objective so let's

00:07:38,840 --> 00:07:42,889
talk about our or was he going to more

00:07:40,759 --> 00:07:46,550
detailed power to replication it lasts

00:07:42,889 --> 00:07:48,139
around afterwards or we know the arts in

00:07:46,550 --> 00:07:51,020
torrents as well make things whole lot

00:07:48,139 --> 00:07:54,620
easier addicted to that he wasn't meets

00:07:51,020 --> 00:07:56,419
those things up what we doin say tavares

00:07:54,620 --> 00:07:58,069
we tested a black hole and they will on

00:07:56,419 --> 00:08:00,020
the 30 prob workings of the production

00:07:58,069 --> 00:08:02,409
environment little Suzy notes in this

00:08:00,020 --> 00:08:03,999
place and we obviously work

00:08:02,409 --> 00:08:08,050
make sure that table is working fine

00:08:03,999 --> 00:08:09,459
story theta and you know do and

00:08:08,050 --> 00:08:12,369
obviously the replication set up over

00:08:09,459 --> 00:08:15,159
here is just to make sure we understand

00:08:12,369 --> 00:08:17,979
race that master inadvertent virus of

00:08:15,159 --> 00:08:20,649
windows of slave and it's the same time

00:08:17,979 --> 00:08:27,279
as master in the Oracle rights to the

00:08:20,649 --> 00:08:29,080
city lights now reforming the one that

00:08:27,279 --> 00:08:31,629
the fact that we have created a second

00:08:29,080 --> 00:08:33,639
fire whenever the black hole is media

00:08:31,629 --> 00:08:36,000
various always and unders you don't

00:08:33,639 --> 00:08:38,800
really need that you can watch them I

00:08:36,000 --> 00:08:40,089
mean is it at least a stripper virtual

00:08:38,800 --> 00:08:42,610
machine corrupted or missing like

00:08:40,089 --> 00:08:45,220
museums but this is not really that's

00:08:42,610 --> 00:08:47,139
our using a virtual machine with very

00:08:45,220 --> 00:08:49,360
little amount of RAM is because the back

00:08:47,139 --> 00:08:51,449
always not restoring information you can

00:08:49,360 --> 00:08:54,639
university power we do need obviously

00:08:51,449 --> 00:08:57,129
threatens the peace to make it work fine

00:08:54,639 --> 00:09:04,120
we could it impacts coolness on the same

00:08:57,129 --> 00:09:08,500
windows what box if you wanted so what

00:09:04,120 --> 00:09:10,720
is it like most voted a technical

00:09:08,500 --> 00:09:13,630
documentation that xx data throws it

00:09:10,720 --> 00:09:16,329
away doesn't store it and any second do

00:09:13,630 --> 00:09:19,470
all those placards table no notice of it

00:09:16,329 --> 00:09:21,399
and those of you don't know those

00:09:19,470 --> 00:09:24,040
whenever we talk about this with

00:09:21,399 --> 00:09:25,329
customers or users whatever we already

00:09:24,040 --> 00:09:28,810
say basically sends everything to

00:09:25,329 --> 00:09:33,089
Denmark the end of the day which is very

00:09:28,810 --> 00:09:33,089
no final and that's the key we're not

00:09:35,790 --> 00:09:40,510
all the latest and consideration the

00:09:38,230 --> 00:09:44,740
best peoples of replication environments

00:09:40,510 --> 00:09:47,139
all the battle is losing robots ok its

00:09:44,740 --> 00:09:49,750
best it's not nice knowing how it will

00:09:47,139 --> 00:09:51,760
be to use statement based replication be

00:09:49,750 --> 00:09:54,579
able to be reminded certain things I may

00:09:51,760 --> 00:09:55,990
not work in verification environment if

00:09:54,579 --> 00:09:57,519
you listen about a black hole table

00:09:55,990 --> 00:09:59,290
we're talking about the updates and

00:09:57,519 --> 00:10:01,240
treatment it triggers I'm activated

00:09:59,290 --> 00:10:03,910
therefore all the auto auto incremental

00:10:01,240 --> 00:10:05,649
colors only have the may be working in

00:10:03,910 --> 00:10:09,130
our development environment these are

00:10:05,649 --> 00:10:12,360
not working for brain replication ok so

00:10:09,130 --> 00:10:16,540
maybe have a look into is it feasible

00:10:12,360 --> 00:10:19,480
first things first but given up we have

00:10:16,540 --> 00:10:23,040
70,000 know using that yes and I often

00:10:19,480 --> 00:10:23,040
is table you can tell

00:10:24,040 --> 00:10:29,120
very mindful of asleep in the back home

00:10:26,930 --> 00:10:32,390
environment what we do there it will be

00:10:29,120 --> 00:10:35,300
replicated alters so I've got a little

00:10:32,390 --> 00:10:36,800
one there so if replication words a

00:10:35,300 --> 00:10:38,600
break I would want to make a quick

00:10:36,800 --> 00:10:40,580
change in our apartment pack holy

00:10:38,600 --> 00:10:42,740
environment whatever we do there is

00:10:40,580 --> 00:10:44,959
replicated on so if we change that to

00:10:42,740 --> 00:10:47,060
table to you know take me just every

00:10:44,959 --> 00:10:50,240
because we want our reputation and to

00:10:47,060 --> 00:10:51,890
work this business state will be

00:10:50,240 --> 00:10:53,959
changing that way back and if you change

00:10:51,890 --> 00:10:56,060
it back to black hole what's going to

00:10:53,959 --> 00:10:58,160
happen honestly this is your moment said

00:10:56,060 --> 00:11:00,649
okay let's do these all these Rosalie so

00:10:58,160 --> 00:11:03,680
we've just done something enough how

00:11:00,649 --> 00:11:06,410
nimble also because we went from windows

00:11:03,680 --> 00:11:08,899
two lines no survivors or between a

00:11:06,410 --> 00:11:11,410
google that are whatever that'll work

00:11:08,899 --> 00:11:13,339
with it go to windows devise the best

00:11:11,410 --> 00:11:15,890
experience the parents of okay

00:11:13,339 --> 00:11:17,720
stablemates is what r equals one who was

00:11:15,890 --> 00:11:20,440
keeping stand and we mess things up

00:11:17,720 --> 00:11:20,440
because suddenly

00:11:22,000 --> 00:11:26,600
and like I said really kept we can

00:11:24,260 --> 00:11:29,270
complete our replication vibrant as we

00:11:26,600 --> 00:11:30,800
see fit as we see fit as in we can

00:11:29,270 --> 00:11:32,330
replicate some different levels whatever

00:11:30,800 --> 00:11:34,490
we wanted so you can do the whole

00:11:32,330 --> 00:11:37,640
database is a black hole here we see the

00:11:34,490 --> 00:11:41,090
table you do all the one over ten

00:11:37,640 --> 00:11:43,790
whatever takes basically or tables doing

00:11:41,090 --> 00:11:45,890
nor tails of do tables and all work out

00:11:43,790 --> 00:11:48,140
so if you can accept here we have a head

00:11:45,890 --> 00:11:50,420
without solution are on may be seen as

00:11:48,140 --> 00:11:54,100
many databases with the same setup you

00:11:50,420 --> 00:11:57,830
can say the ones within one underscore

00:11:54,100 --> 00:11:59,450
percent across this without engaging it

00:11:57,830 --> 00:12:01,520
also just you know they'll work boarding

00:11:59,450 --> 00:12:03,560
now make sure that connectivity between

00:12:01,520 --> 00:12:07,310
virus that's obviously a mask for

00:12:03,560 --> 00:12:10,780
replication get rid of the final 40

00:12:07,310 --> 00:12:10,780
minutes and to make sure that this works

00:12:11,320 --> 00:12:16,670
okay so so that's what the overview and

00:12:14,150 --> 00:12:20,540
it's going to what we're doing how table

00:12:16,670 --> 00:12:22,250
set up so we have our winner tomorrow

00:12:20,540 --> 00:12:25,190
let's all set up home Letang's are

00:12:22,250 --> 00:12:26,819
working so from the automatic tomorrow

00:12:25,190 --> 00:12:30,389
are we going to be putting out

00:12:26,819 --> 00:12:32,220
knocking out all the information digital

00:12:30,389 --> 00:12:35,759
cable connecting therefore when it

00:12:32,220 --> 00:12:37,139
becomes a slave worker she initiated and

00:12:35,759 --> 00:12:40,350
we're going to be dumping the database

00:12:37,139 --> 00:12:41,519
circular the master later was too is we

00:12:40,350 --> 00:12:45,509
could effectively creating your

00:12:41,519 --> 00:12:48,059
application logs multi-position clan

00:12:45,509 --> 00:12:53,399
because we also will be using GT IDs in

00:12:48,059 --> 00:12:55,289
this one this is a 516 m type i can i

00:12:53,399 --> 00:12:58,199
stroke through to my screen regressing

00:12:55,289 --> 00:12:59,249
that as we were dumping it out showtek

00:12:58,199 --> 00:13:01,339
sebassis or there are providers

00:12:59,249 --> 00:13:05,660
permission we have my permission back

00:13:01,339 --> 00:13:10,109
every set replication up change master

00:13:05,660 --> 00:13:12,209
configuration environments EMF and in

00:13:10,109 --> 00:13:14,039
this case making simple up or because of

00:13:12,209 --> 00:13:15,299
up to my needs at the time we got to

00:13:14,039 --> 00:13:17,699
replicate are we the city of

00:13:15,299 --> 00:13:22,439
effectiveness I people to come across a

00:13:17,699 --> 00:13:25,199
protector and then which if it's working

00:13:22,439 --> 00:13:27,449
show state status make sure we receive

00:13:25,199 --> 00:13:30,600
the stages of the snake a blazing fire

00:13:27,449 --> 00:13:34,079
if the legs were having air so we both

00:13:30,600 --> 00:13:36,209
windows and organizer done anything else

00:13:34,079 --> 00:13:38,989
because of exactly the same organ

00:13:36,209 --> 00:13:42,059
working and what I don't believe this

00:13:38,989 --> 00:13:45,209
environment here is I think we might say

00:13:42,059 --> 00:13:47,970
or when you're a thousand rosina this on

00:13:45,209 --> 00:13:51,209
procedure make sure we know working

00:13:47,970 --> 00:13:54,149
sorry the real aliens on the slope and

00:13:51,209 --> 00:13:59,369
obviously we can you check the table so

00:13:54,149 --> 00:14:00,720
make it much more simple this is windows

00:13:59,369 --> 00:14:06,859
if I what we have our thousand one

00:14:00,720 --> 00:14:06,859
runners these are the black hole

00:14:07,810 --> 00:14:12,490
and you can see in our minds environment

00:14:10,870 --> 00:14:14,170
still hasn't been change the flag to the

00:14:12,490 --> 00:14:20,590
back wall storage in here look same

00:14:14,170 --> 00:14:22,000
clothes as expected obviously so we're

00:14:20,590 --> 00:14:24,790
up you can see there the energy

00:14:22,000 --> 00:14:26,890
beam tangle engine equals in ODP that's

00:14:24,790 --> 00:14:29,620
in the Oracle Linux and then we alter it

00:14:26,890 --> 00:14:32,020
we change it to black hole nothing more

00:14:29,620 --> 00:14:34,180
than just an alter table but you can see

00:14:32,020 --> 00:14:36,880
there that queries is okay 1001 rows

00:14:34,180 --> 00:14:38,050
affected now all we obviously know if we

00:14:36,880 --> 00:14:41,170
have rows in there we change it to a

00:14:38,050 --> 00:14:43,029
black hole as I said before there the ER

00:14:41,170 --> 00:14:44,770
the i/o here is I'm expected to

00:14:43,029 --> 00:14:50,100
disappear and therefore we're not

00:14:44,770 --> 00:14:50,100
storing anything so let's confirm that

00:14:51,060 --> 00:14:55,779
yep show crate table we have our engine

00:14:54,130 --> 00:14:59,620
equals black hole and how many rows do

00:14:55,779 --> 00:15:01,029
we have in it none okay not that we've

00:14:59,620 --> 00:15:02,560
done any delays reparations or anything

00:15:01,029 --> 00:15:06,190
like that it's just by changing it make

00:15:02,560 --> 00:15:09,970
sure that all the data disappears okay

00:15:06,190 --> 00:15:12,100
so we've got our master slave master and

00:15:09,970 --> 00:15:14,200
windows slave in Oracle Linux we've got

00:15:12,100 --> 00:15:16,330
our black hole table set up so working

00:15:14,200 --> 00:15:18,250
well and the replication there are case

00:15:16,330 --> 00:15:20,589
bear in mind remember what I said update

00:15:18,250 --> 00:15:22,480
delete triggers or acted activated so if

00:15:20,589 --> 00:15:23,950
we do extern executing those on the

00:15:22,480 --> 00:15:25,630
master server this will break

00:15:23,950 --> 00:15:27,310
replication but what we're looking at

00:15:25,630 --> 00:15:29,640
here is our the insert that they d edl

00:15:27,310 --> 00:15:32,470
and should we need anything else in

00:15:29,640 --> 00:15:34,360
updating or you know do anything other

00:15:32,470 --> 00:15:37,600
than inserts or you know deletes in that

00:15:34,360 --> 00:15:39,970
sense lets you know the typical

00:15:37,600 --> 00:15:41,710
scenarios set up triggers because we

00:15:39,970 --> 00:15:43,360
know we can stress not only the master

00:15:41,710 --> 00:15:44,920
environment the stressing that the black

00:15:43,360 --> 00:15:46,660
hole environment so just because we had

00:15:44,920 --> 00:15:47,950
this one table in black hole doesn't

00:15:46,660 --> 00:15:50,110
mean that everything has to be in black

00:15:47,950 --> 00:15:54,790
hole depends on the resources what we're

00:15:50,110 --> 00:15:57,660
looking at our solution obviously so we

00:15:54,790 --> 00:16:00,280
connect to our Suzy Linus box now

00:15:57,660 --> 00:16:01,990
enterprise server here and this is our

00:16:00,280 --> 00:16:03,190
work considered production and we can do

00:16:01,990 --> 00:16:06,250
the same operation here but with

00:16:03,190 --> 00:16:08,709
slightly no D differences as in where

00:16:06,250 --> 00:16:11,410
we're dumping from from our Oracle Linux

00:16:08,709 --> 00:16:13,360
box 102 there and like I said the same

00:16:11,410 --> 00:16:15,820
the circular and master data for a

00:16:13,360 --> 00:16:17,980
replication environment show databases

00:16:15,820 --> 00:16:20,050
yet we got it there we're in a Suzy box

00:16:17,980 --> 00:16:21,580
so we see that replication again because

00:16:20,050 --> 00:16:23,860
Oracle Linux is our master

00:16:21,580 --> 00:16:26,440
there's no problem there we check your

00:16:23,860 --> 00:16:29,350
works with the show slave status and now

00:16:26,440 --> 00:16:31,450
we're coming out of the black hole so

00:16:29,350 --> 00:16:33,670
what we just and replicated at the black

00:16:31,450 --> 00:16:34,930
hole scenario so that doesn't make much

00:16:33,670 --> 00:16:36,970
sense if we're going to insert any data

00:16:34,930 --> 00:16:38,440
in there the master in the windows box

00:16:36,970 --> 00:16:40,390
by saying yeah okay insert another

00:16:38,440 --> 00:16:42,400
thousand rows we're going to be doing is

00:16:40,390 --> 00:16:44,020
sending over to black hole so we changed

00:16:42,400 --> 00:16:45,310
it to in Urdu be and therefore we have

00:16:44,020 --> 00:16:50,140
all the date of the information there

00:16:45,310 --> 00:16:52,540
but how does that work well I'm I don't

00:16:50,140 --> 00:16:54,250
know if you all know replication mysql

00:16:52,540 --> 00:16:56,710
but and for those of you don't

00:16:54,250 --> 00:16:57,880
underneath what we're doing is the bin

00:16:56,710 --> 00:16:59,260
looks are obviously that's the

00:16:57,880 --> 00:17:01,360
replication up will rep my co

00:16:59,260 --> 00:17:02,980
replication relies on so that's being

00:17:01,360 --> 00:17:04,959
transferred from the mast to the slave

00:17:02,980 --> 00:17:07,089
and in the slave with the black hole is

00:17:04,959 --> 00:17:08,470
it's saying okay you want me to apply

00:17:07,089 --> 00:17:11,650
this to a table that doesn't store

00:17:08,470 --> 00:17:13,480
information ok i got nothing to do here

00:17:11,650 --> 00:17:16,780
then what it does is the operations are

00:17:13,480 --> 00:17:19,360
executed in its own bin logs and that's

00:17:16,780 --> 00:17:22,060
the oracle linux with its bin looks send

00:17:19,360 --> 00:17:24,160
it to the Suzy look slave and it has its

00:17:22,060 --> 00:17:25,510
real a look-see said okay so in the

00:17:24,160 --> 00:17:28,270
black hole where you didn't do anything

00:17:25,510 --> 00:17:30,460
you just generated these logs well let's

00:17:28,270 --> 00:17:31,810
do it on this the suze slave and it

00:17:30,460 --> 00:17:34,480
repeats that and says are but now

00:17:31,810 --> 00:17:37,740
because my table is 0 DB I can actually

00:17:34,480 --> 00:17:41,410
give you some information in the table

00:17:37,740 --> 00:17:42,970
and what we do from the just the end to

00:17:41,410 --> 00:17:44,950
set up on their the liner so it's

00:17:42,970 --> 00:17:47,230
obviously pull the information because

00:17:44,950 --> 00:17:48,910
we had no information we didn't we can't

00:17:47,230 --> 00:17:50,590
insert the data again in our master

00:17:48,910 --> 00:17:52,720
Windows environment we need to get

00:17:50,590 --> 00:17:57,600
though the data rose out of the master

00:17:52,720 --> 00:17:57,600
on Windows and into our Suzy environment

00:18:02,730 --> 00:18:08,190
who's miffed who's not understanding it

00:18:06,179 --> 00:18:11,280
or who knit got any questions I want to

00:18:08,190 --> 00:18:12,510
make sure please let's hang on one

00:18:11,280 --> 00:18:14,929
second there's a market um so everyone

00:18:12,510 --> 00:18:14,929
can hear you

00:18:22,990 --> 00:18:32,200
and christos hi crystal please and

00:18:28,809 --> 00:18:38,440
correct me if I'm wrong soap we have the

00:18:32,200 --> 00:18:42,070
windows master and we replicate our data

00:18:38,440 --> 00:18:46,929
into our black hole storage engine and

00:18:42,070 --> 00:18:49,030
we just produce relay logs of in black

00:18:46,929 --> 00:18:52,090
hole mutters engine the black hole so

00:18:49,030 --> 00:18:54,550
has its bin logs generated obviously we

00:18:52,090 --> 00:18:57,309
have looking on that one and that's

00:18:54,550 --> 00:19:01,510
pushed on cigarette as they separate yes

00:18:57,309 --> 00:19:03,100
so where to relay logs no no we have the

00:19:01,510 --> 00:19:04,870
relay looks come from the master windows

00:19:03,100 --> 00:19:06,760
yes and within the black hole

00:19:04,870 --> 00:19:09,700
environment it generates his own bin

00:19:06,760 --> 00:19:11,890
looks oh so of course all the operations

00:19:09,700 --> 00:19:13,540
that cut that are being done on that

00:19:11,890 --> 00:19:15,010
table they're being done but they're

00:19:13,540 --> 00:19:17,530
just not going into any I are there not

00:19:15,010 --> 00:19:19,000
being applied to the table so the relay

00:19:17,530 --> 00:19:21,010
the actual obviously the replication

00:19:19,000 --> 00:19:23,020
would if it's it that's the way it works

00:19:21,010 --> 00:19:25,030
so the data is coming from the master

00:19:23,020 --> 00:19:26,830
into the slave is being applied on the

00:19:25,030 --> 00:19:30,190
table that says don't do anything with

00:19:26,830 --> 00:19:31,510
this don't don't save any data so it

00:19:30,190 --> 00:19:33,400
says okay well that's the way you work

00:19:31,510 --> 00:19:35,440
what I'll do is I'll generate because

00:19:33,400 --> 00:19:37,300
those those insert commandos you know

00:19:35,440 --> 00:19:39,760
although truncate whatever has been

00:19:37,300 --> 00:19:42,220
generated I will also generate that in

00:19:39,760 --> 00:19:44,380
my own bin looks so the slave itself has

00:19:42,220 --> 00:19:47,050
its own bin logs generated and that

00:19:44,380 --> 00:19:49,480
enables us to create the suze slave and

00:19:47,050 --> 00:19:51,610
get that information so that when we

00:19:49,480 --> 00:19:54,100
update from the windows master and say

00:19:51,610 --> 00:19:55,450
in South ousand rose in the middle it

00:19:54,100 --> 00:19:57,100
says okay you want me to insert a

00:19:55,450 --> 00:19:59,230
thousand rows in this table ok I'll

00:19:57,100 --> 00:20:01,750
insert but then those inserts are not

00:19:59,230 --> 00:20:03,670
executed on iOS level on a data level

00:20:01,750 --> 00:20:05,710
but it's stored in its own bin looks and

00:20:03,670 --> 00:20:07,600
those been up to transferred to the suze

00:20:05,710 --> 00:20:09,850
environment says okay so I'm Annie no DB

00:20:07,600 --> 00:20:11,440
table and you want me to put thousand

00:20:09,850 --> 00:20:13,809
rows in this table okay thousand rows

00:20:11,440 --> 00:20:16,950
selects account I've got a thousand rows

00:20:13,809 --> 00:20:19,600
so we use black hole engine as the

00:20:16,950 --> 00:20:23,350
neutral architecture medium to throw

00:20:19,600 --> 00:20:26,200
that's wrong holy closer home owned up

00:20:23,350 --> 00:20:29,559
to to another that's right that's right

00:20:26,200 --> 00:20:31,150
it's like a buffer as your bathroom it's

00:20:29,559 --> 00:20:33,370
a buffer big that we can do things on

00:20:31,150 --> 00:20:35,080
because we can use that environment for

00:20:33,370 --> 00:20:36,250
with triggers like I say to specially

00:20:35,080 --> 00:20:38,560
store data

00:20:36,250 --> 00:20:41,080
so we can audit what's happening there

00:20:38,560 --> 00:20:43,030
but maybe the table is you know gigas

00:20:41,080 --> 00:20:44,890
and gig is really big and we don't want

00:20:43,030 --> 00:20:47,260
that information we don't need it all we

00:20:44,890 --> 00:20:49,180
need is the way it's been inserted all

00:20:47,260 --> 00:20:51,970
the way it's working whatever our

00:20:49,180 --> 00:20:53,410
application not functionality is and we

00:20:51,970 --> 00:20:55,870
can use triggers on that too to feed

00:20:53,410 --> 00:20:57,760
other tables that we want to access from

00:20:55,870 --> 00:20:59,830
this middle environment or we want to

00:20:57,760 --> 00:21:02,140
replicate on to the other environment so

00:20:59,830 --> 00:21:04,240
we can we can offload the master here

00:21:02,140 --> 00:21:06,640
that may have one use and do different

00:21:04,240 --> 00:21:09,040
things at different steps and because on

00:21:06,640 --> 00:21:11,020
the first slave on their black hole

00:21:09,040 --> 00:21:13,210
environment we can where we're

00:21:11,020 --> 00:21:16,720
generating the bin logs we can create

00:21:13,210 --> 00:21:19,690
different slaves off of that that's

00:21:16,720 --> 00:21:21,190
where it's flexible the good thing in

00:21:19,690 --> 00:21:23,800
lon on this is you know we can be very

00:21:21,190 --> 00:21:26,470
flexible hazardous limitations will look

00:21:23,800 --> 00:21:28,330
into that right now and there's some

00:21:26,470 --> 00:21:29,590
things we have to bear in mind when

00:21:28,330 --> 00:21:31,690
using this it's not just this you know

00:21:29,590 --> 00:21:33,520
simple out of the box I'm very happy

00:21:31,690 --> 00:21:36,100
with this but it gives us a different

00:21:33,520 --> 00:21:39,040
view of what we can do and how we can

00:21:36,100 --> 00:21:40,450
create the same table with 10 columns

00:21:39,040 --> 00:21:42,910
here and end up with the table with just

00:21:40,450 --> 00:21:45,430
two columns because we don't need those

00:21:42,910 --> 00:21:48,250
columns in production for example or we

00:21:45,430 --> 00:21:49,780
want to feed off of those or it's a no

00:21:48,250 --> 00:21:51,730
SQL solution coming on from the

00:21:49,780 --> 00:21:54,490
production environment and it just needs

00:21:51,730 --> 00:21:56,590
those two tries to make it a jail you

00:21:54,490 --> 00:22:01,660
know it's the capabilities there are a

00:21:56,590 --> 00:22:04,030
wild but we're not allowed to proceed to

00:22:01,660 --> 00:22:08,040
any transformation in our data while the

00:22:04,030 --> 00:22:12,010
data are in black hole and relay logs

00:22:08,040 --> 00:22:13,480
sorry uh so you're saying that if we set

00:22:12,010 --> 00:22:15,370
up past and mustard slave the

00:22:13,480 --> 00:22:18,400
replication with this machine and the

00:22:15,370 --> 00:22:21,760
black hole environment and if we

00:22:18,400 --> 00:22:25,390
transfer the data and can we apply any

00:22:21,760 --> 00:22:28,240
insert update statements or create any

00:22:25,390 --> 00:22:30,520
tables in that medium oh yes oh yeah on

00:22:28,240 --> 00:22:32,080
the on the table the table itself is the

00:22:30,520 --> 00:22:34,480
one we will identify as the black hole

00:22:32,080 --> 00:22:35,820
using the black hole storage engine so

00:22:34,480 --> 00:22:38,620
therefore like I said at the beginning

00:22:35,820 --> 00:22:40,750
the update and the deletes will not work

00:22:38,620 --> 00:22:42,820
because of course this table doesn't

00:22:40,750 --> 00:22:44,320
store it has no States so therefore

00:22:42,820 --> 00:22:45,940
anything that we want to change the

00:22:44,320 --> 00:22:48,670
effect of it doesn't know the after

00:22:45,940 --> 00:22:50,040
before evaluation because when we do a

00:22:48,670 --> 00:22:52,020
select star from this table

00:22:50,040 --> 00:22:54,900
there's nothing there so when we do an

00:22:52,020 --> 00:22:56,910
update on a row that doesn't exist okay

00:22:54,900 --> 00:22:58,830
exactly okay so you know keep that one

00:22:56,910 --> 00:23:00,840
there but then what we do with that is

00:22:58,830 --> 00:23:03,180
you create a trigger so when we insert

00:23:00,840 --> 00:23:04,710
into that table that's a black hole the

00:23:03,180 --> 00:23:07,050
de tree will retrigger updated table

00:23:04,710 --> 00:23:08,970
that it isn't a black hole so we could

00:23:07,050 --> 00:23:11,700
adapt it there and make different

00:23:08,970 --> 00:23:13,590
formations of that row however that

00:23:11,700 --> 00:23:14,640
table itself is not being updated if I

00:23:13,590 --> 00:23:17,130
mean for example that the typical

00:23:14,640 --> 00:23:19,170
scenario is a table that has very few

00:23:17,130 --> 00:23:20,880
inserts but lots of updates on the

00:23:19,170 --> 00:23:22,680
development side or whatever they're

00:23:20,880 --> 00:23:25,020
doing and we want to make sure that in

00:23:22,680 --> 00:23:27,840
you know as we go down the road we don't

00:23:25,020 --> 00:23:29,460
suffer all that logging and all those

00:23:27,840 --> 00:23:32,460
updates that we don't really need we

00:23:29,460 --> 00:23:34,650
want before and after because taking a

00:23:32,460 --> 00:23:37,020
step back this is using mysql

00:23:34,650 --> 00:23:39,840
replication so we can say that I

00:23:37,020 --> 00:23:41,700
synchronously as in you know as it

00:23:39,840 --> 00:23:43,980
happens get the blood bin logs pushing

00:23:41,700 --> 00:23:45,870
across semi synchronously I want to make

00:23:43,980 --> 00:23:48,810
sure that this environment gets the

00:23:45,870 --> 00:23:50,850
information or the time delayed so maybe

00:23:48,810 --> 00:23:52,440
I want this to happen once a day twice a

00:23:50,850 --> 00:23:54,450
day because it's a reporting

00:23:52,440 --> 00:23:55,740
environments a back-end environment like

00:23:54,450 --> 00:23:58,250
I say it doesn't have to be development

00:23:55,740 --> 00:24:00,930
to production we could be production to

00:23:58,250 --> 00:24:03,480
analytics so you know or big data or

00:24:00,930 --> 00:24:06,030
whatever I want to use okay Ken Brown in

00:24:03,480 --> 00:24:07,590
background as a background job it's it's

00:24:06,030 --> 00:24:14,070
not about I mean for example like I said

00:24:07,590 --> 00:24:17,940
going back on the all the way back here

00:24:14,070 --> 00:24:20,910
sorry just quickly no I saw I'm sorry no

00:24:17,940 --> 00:24:22,680
no no on the dev pc we can have

00:24:20,910 --> 00:24:25,080
replication set up in the same

00:24:22,680 --> 00:24:27,090
environment because what we want to do

00:24:25,080 --> 00:24:29,820
here is keep it minimal make sure that

00:24:27,090 --> 00:24:31,800
we you know it in that sense replication

00:24:29,820 --> 00:24:33,330
doesn't really matter what we need is

00:24:31,800 --> 00:24:35,930
that environment replicating to the

00:24:33,330 --> 00:24:38,670
second slave the product the Suzie slave

00:24:35,930 --> 00:24:40,680
so what we want is because a black hole

00:24:38,670 --> 00:24:44,910
doesn't generate I oh we're not using

00:24:40,680 --> 00:24:46,350
massive use of gigs of space so you can

00:24:44,910 --> 00:24:47,160
have it in the same environment there or

00:24:46,350 --> 00:24:49,260
we could have in the production

00:24:47,160 --> 00:24:52,380
environment obviously depending on how

00:24:49,260 --> 00:24:53,940
big or what our solution is all right

00:24:52,380 --> 00:24:55,290
because replication there at the end of

00:24:53,940 --> 00:24:58,110
the day though it works how we want it

00:24:55,290 --> 00:25:00,330
to work and like I say we can we can

00:24:58,110 --> 00:25:02,880
take a whole whole data but the whole

00:25:00,330 --> 00:25:03,840
server itself certain databases or

00:25:02,880 --> 00:25:07,020
tables or you know

00:25:03,840 --> 00:25:08,970
it all depends on what we're doing okay

00:25:07,020 --> 00:25:11,400
thank you very much thank you for the

00:25:08,970 --> 00:25:16,350
question if there any more questions and

00:25:11,400 --> 00:25:17,970
you other doubts maybe I haven't been

00:25:16,350 --> 00:25:20,309
very graphical when explaining how

00:25:17,970 --> 00:25:21,720
replication works and maybe my era was

00:25:20,309 --> 00:25:27,090
assuming that you knew that one so i do

00:25:21,720 --> 00:25:29,669
apologize now in this scenario of a

00:25:27,090 --> 00:25:32,159
black hole usage replication the whole

00:25:29,669 --> 00:25:34,020
thing is non implosion non-destructive

00:25:32,159 --> 00:25:36,450
we're not going to get some lots of

00:25:34,020 --> 00:25:39,210
information in here blow up and destroy

00:25:36,450 --> 00:25:41,070
ourselves over massive uses of datas or

00:25:39,210 --> 00:25:42,840
complex structures here and also

00:25:41,070 --> 00:25:44,760
non-destructive we're not really

00:25:42,840 --> 00:25:46,140
deleting anything whether it's just that

00:25:44,760 --> 00:25:48,149
though the way the black hole storage

00:25:46,140 --> 00:25:49,830
engine works is obviously it just

00:25:48,149 --> 00:25:52,230
doesn't save it but we have the

00:25:49,830 --> 00:25:54,960
information underneath in our bin logs

00:25:52,230 --> 00:25:57,779
okay being looks converting to the

00:25:54,960 --> 00:25:59,279
slaves of the relay looks so whenever we

00:25:57,779 --> 00:26:01,080
do our truncate tables that's all

00:25:59,279 --> 00:26:03,059
working fine with deleting massive loads

00:26:01,080 --> 00:26:04,679
of data but on the black hole we're not

00:26:03,059 --> 00:26:08,940
generating io because there's nothing to

00:26:04,679 --> 00:26:11,429
truncate bulk inserts obviously but a

00:26:08,940 --> 00:26:14,010
batch load I want to test run we can

00:26:11,429 --> 00:26:15,450
test run that on the black hole and see

00:26:14,010 --> 00:26:17,669
how the rest of the application works

00:26:15,450 --> 00:26:20,309
maybe it's a table that we've imported

00:26:17,669 --> 00:26:22,110
in or they're the actual you know the

00:26:20,309 --> 00:26:23,970
solution is pulling information from

00:26:22,110 --> 00:26:27,210
this black hole table and I'm using

00:26:23,970 --> 00:26:29,880
triggers in that sense ddl we can do

00:26:27,210 --> 00:26:34,860
that we can change it to take data types

00:26:29,880 --> 00:26:36,240
add delete columns whatever we want find

00:26:34,860 --> 00:26:38,399
a replication capabilities like I say

00:26:36,240 --> 00:26:42,000
you know deep down going to different

00:26:38,399 --> 00:26:44,029
alternatives schema maneuverability now

00:26:42,000 --> 00:26:46,440
in cloud scenarios this could be useful

00:26:44,029 --> 00:26:50,760
making sure that we are we're taking the

00:26:46,440 --> 00:26:52,980
date just the data we want to it's good

00:26:50,760 --> 00:26:55,500
for performance who's we can take it off

00:26:52,980 --> 00:26:58,080
of the development sort of scenario

00:26:55,500 --> 00:26:59,490
development environment in this scenario

00:26:58,080 --> 00:27:02,730
which could be a production environment

00:26:59,490 --> 00:27:05,279
in another situation so you know with

00:27:02,730 --> 00:27:08,730
pulling we're isolating different areas

00:27:05,279 --> 00:27:10,320
here as I say we can have it was most

00:27:08,730 --> 00:27:13,980
located on the master server if we want

00:27:10,320 --> 00:27:15,870
to and the environments are isolated the

00:27:13,980 --> 00:27:17,030
modular so it's easy to identify which

00:27:15,870 --> 00:27:19,040
ones

00:27:17,030 --> 00:27:21,050
in which area and we know that because

00:27:19,040 --> 00:27:22,430
we created it now of course we have to

00:27:21,050 --> 00:27:25,130
be cautious about the update and delete

00:27:22,430 --> 00:27:27,530
triggers like I say with this we don't

00:27:25,130 --> 00:27:29,240
have any information to actually create

00:27:27,530 --> 00:27:30,620
a before image what are we going to do

00:27:29,240 --> 00:27:34,130
with that afterwards we can't do

00:27:30,620 --> 00:27:36,740
anything replication will break we'll

00:27:34,130 --> 00:27:38,930
creating more tables more different

00:27:36,740 --> 00:27:40,970
structure so therefore the operational

00:27:38,930 --> 00:27:42,950
commitments here the people the DBA is

00:27:40,970 --> 00:27:43,880
behind this and they're obviously you

00:27:42,950 --> 00:27:45,320
know people were administrating

00:27:43,880 --> 00:27:48,260
underneath will say okay well I have

00:27:45,320 --> 00:27:53,030
more processes I have more no need for

00:27:48,260 --> 00:27:54,890
control here data models primary keys or

00:27:53,030 --> 00:27:57,230
to increment columns be careful of those

00:27:54,890 --> 00:28:00,680
okay make sure it's doing what we're

00:27:57,230 --> 00:28:02,180
doing make sure we test run this the

00:28:00,680 --> 00:28:03,620
yo-yo monitoring and impact evaluation

00:28:02,180 --> 00:28:05,420
on the black hole environment is

00:28:03,620 --> 00:28:09,200
obviously removed because we have no I

00:28:05,420 --> 00:28:10,610
oh okay we're not going to disk and the

00:28:09,200 --> 00:28:12,680
infrastructure becomes independent

00:28:10,610 --> 00:28:14,750
because we have replication scenario so

00:28:12,680 --> 00:28:16,550
the more layers we create the more

00:28:14,750 --> 00:28:21,470
obviously complexity we're going to have

00:28:16,550 --> 00:28:24,110
them so keep that in mind as well for

00:28:21,470 --> 00:28:25,930
example how non implosive or

00:28:24,110 --> 00:28:28,040
non-destructive is it this is a

00:28:25,930 --> 00:28:32,000
statistic taken from the performance

00:28:28,040 --> 00:28:33,800
schema within mysql 56 and what we've

00:28:32,000 --> 00:28:34,760
done is we've truncated the table in the

00:28:33,800 --> 00:28:36,620
master environment the windows

00:28:34,760 --> 00:28:38,350
environment and the first column here

00:28:36,620 --> 00:28:41,060
crossover is what we started with and

00:28:38,350 --> 00:28:43,640
the dip note yeah with what we started

00:28:41,060 --> 00:28:45,830
with and the the difference in the white

00:28:43,640 --> 00:28:47,000
column is what we have afterwards so we

00:28:45,830 --> 00:28:49,880
deleted it we deal it all the rows

00:28:47,000 --> 00:28:51,350
enough on the master and windows master

00:28:49,880 --> 00:28:52,790
as you can see on the Oracle Linux

00:28:51,350 --> 00:28:55,400
environments there's no change there

00:28:52,790 --> 00:28:58,040
because it's a black hole table there's

00:28:55,400 --> 00:28:59,990
nothing for it to do however in the

00:28:58,040 --> 00:29:01,670
sousa that sue the environment we can

00:28:59,990 --> 00:29:03,290
see that the changes there as well the

00:29:01,670 --> 00:29:04,310
difference there these numbers don't

00:29:03,290 --> 00:29:06,110
look at the numbers because obviously

00:29:04,310 --> 00:29:08,600
like I say this at the windows

00:29:06,110 --> 00:29:10,940
environment an eight gig ram pc whereas

00:29:08,600 --> 00:29:12,920
the Suze Linus was a one gig virtual

00:29:10,940 --> 00:29:14,540
machine so you know those not going to

00:29:12,920 --> 00:29:16,520
be important there but what we are

00:29:14,540 --> 00:29:18,200
looking at is the obviously the changes

00:29:16,520 --> 00:29:20,990
the fact that there are differences in

00:29:18,200 --> 00:29:23,390
the master server and on the suse linux

00:29:20,990 --> 00:29:26,920
or we're not impacting any of the i/o on

00:29:23,390 --> 00:29:26,920
the Oracle Linux box

00:29:28,669 --> 00:29:39,019
Oh wrong way so keeping all of this in

00:29:36,679 --> 00:29:39,799
mind like I said it added complexity

00:29:39,019 --> 00:29:42,590
here we're going to want to be

00:29:39,799 --> 00:29:44,090
controlling this and knowledge is key we

00:29:42,590 --> 00:29:45,859
need to monitor we need to make sure we

00:29:44,090 --> 00:29:47,929
have the utilities to see what's

00:29:45,859 --> 00:29:50,179
happening and that if it does break or

00:29:47,929 --> 00:29:51,559
if there are any issues or we're not

00:29:50,179 --> 00:29:53,779
quite sure of whether we're getting the

00:29:51,559 --> 00:29:56,389
information in our final environment

00:29:53,779 --> 00:29:59,179
from the original master you need to

00:29:56,389 --> 00:30:01,009
kept be careful there okay so what are

00:29:59,179 --> 00:30:03,919
what options are there okay we got my

00:30:01,009 --> 00:30:06,409
SQL command line interface obviously the

00:30:03,919 --> 00:30:08,029
typical scenario there workbench

00:30:06,409 --> 00:30:10,460
utilities I don't know if you know that

00:30:08,029 --> 00:30:12,320
but my SQL work bench comes with Python

00:30:10,460 --> 00:30:15,230
scripts we call them the mysql workbench

00:30:12,320 --> 00:30:17,210
utilities you can download separately

00:30:15,230 --> 00:30:19,159
i'll stand alone or download with they

00:30:17,210 --> 00:30:21,289
come with my workbench that allow us to

00:30:19,159 --> 00:30:23,149
not only create environments or clone

00:30:21,289 --> 00:30:25,279
the environment and check differences

00:30:23,149 --> 00:30:28,369
would also administer the replications

00:30:25,279 --> 00:30:31,460
slave master whatever we have there so

00:30:28,369 --> 00:30:34,970
it's worth looking into the formal

00:30:31,460 --> 00:30:39,200
schema it's in 56 has been totally

00:30:34,970 --> 00:30:41,690
revamped its been made to help us out

00:30:39,200 --> 00:30:43,970
without impacting our production

00:30:41,690 --> 00:30:45,529
environment our processes so that when

00:30:43,970 --> 00:30:47,929
we do want to do our averages or

00:30:45,529 --> 00:30:49,609
accounts or sums on the statistics of

00:30:47,929 --> 00:30:51,350
different data that we're looking into

00:30:49,609 --> 00:30:52,940
whether it's the statements or the

00:30:51,350 --> 00:30:54,889
stages whatever that's already done

00:30:52,940 --> 00:30:57,529
there are columns called count

00:30:54,889 --> 00:30:59,029
underscore star so that we don't have to

00:30:57,529 --> 00:31:02,419
so all we do at the end is select

00:30:59,029 --> 00:31:03,889
whatever from the table where that's

00:31:02,419 --> 00:31:05,239
already done there's no aggregates being

00:31:03,889 --> 00:31:06,590
done there we're not impacting the rest

00:31:05,239 --> 00:31:10,460
of the user just because we want to see

00:31:06,590 --> 00:31:13,460
how it is working okay and obviously

00:31:10,460 --> 00:31:15,499
from an enterprise edition there's the

00:31:13,460 --> 00:31:17,779
enterprise monitor which gives you the

00:31:15,499 --> 00:31:19,399
graphic or basically the dashboard the

00:31:17,779 --> 00:31:20,840
console which will allow us with the

00:31:19,399 --> 00:31:23,769
replication visor to automatically

00:31:20,840 --> 00:31:25,909
detect our slave black hole setup and

00:31:23,769 --> 00:31:28,100
monitor that make sure it's working and

00:31:25,909 --> 00:31:31,429
see if there are any lags and with a

00:31:28,100 --> 00:31:33,649
query analyzer push that into different

00:31:31,429 --> 00:31:36,080
environments so we can obviously tune

00:31:33,649 --> 00:31:38,509
from the master windows box those in

00:31:36,080 --> 00:31:40,369
development and take that into the black

00:31:38,509 --> 00:31:42,230
hole see how it's working there see

00:31:40,369 --> 00:31:44,570
what's happening and then obviously in

00:31:42,230 --> 00:31:46,660
suse linux there so we're fine-tuning at

00:31:44,570 --> 00:31:53,630
each of the different three stages there

00:31:46,660 --> 00:31:55,940
okay now who can benefit from this what

00:31:53,630 --> 00:31:57,980
ideas I mean this obviously is not the

00:31:55,940 --> 00:31:59,690
complete solution alone I would like to

00:31:57,980 --> 00:32:01,490
hear you know what other ideas you may

00:31:59,690 --> 00:32:04,250
have for using the black holes storage

00:32:01,490 --> 00:32:05,960
engine but for example in existing

00:32:04,250 --> 00:32:09,020
inherited applications things that we

00:32:05,960 --> 00:32:12,230
have no control over and we want to see

00:32:09,020 --> 00:32:14,510
how they're working or how we can make

00:32:12,230 --> 00:32:17,720
them work the way we want them to for

00:32:14,510 --> 00:32:19,760
example using CSV type tables for in the

00:32:17,720 --> 00:32:21,830
master and then we be changing them back

00:32:19,760 --> 00:32:23,150
into black hole and then back to CSV so

00:32:21,830 --> 00:32:25,240
you know it may be we have some simple

00:32:23,150 --> 00:32:27,410
scenarios or embedded applications there

00:32:25,240 --> 00:32:29,660
like I say from window to lineups or

00:32:27,410 --> 00:32:31,040
vice versa use a provision in little

00:32:29,660 --> 00:32:35,540
dabs you know we can do different things

00:32:31,040 --> 00:32:38,540
there makes it life easier easier we

00:32:35,540 --> 00:32:40,309
could also like I said look at cloud and

00:32:38,540 --> 00:32:42,679
virtualization scenarios different ways

00:32:40,309 --> 00:32:45,460
of using the data there because our our

00:32:42,679 --> 00:32:47,870
solution is a software-as-a-service or

00:32:45,460 --> 00:32:50,419
internal solution web every user has his

00:32:47,870 --> 00:32:52,640
own schema of well as his own account so

00:32:50,419 --> 00:32:54,950
they're not just one set of data there

00:32:52,640 --> 00:32:56,900
but depending on what they're doing and

00:32:54,950 --> 00:32:59,720
we've identified them as a heavy user

00:32:56,900 --> 00:33:01,850
lots of data we were able to tell them

00:32:59,720 --> 00:33:04,370
about the black holes to a staging area

00:33:01,850 --> 00:33:08,330
or our user acceptance there so they can

00:33:04,370 --> 00:33:09,980
calm down a little hi chay obviously

00:33:08,330 --> 00:33:12,980
we're talking replication we're talking

00:33:09,980 --> 00:33:15,530
failover from master the slave the

00:33:12,980 --> 00:33:17,540
general rule of thumb is four to 10 or

00:33:15,530 --> 00:33:19,970
more slaves in a mysql environment to

00:33:17,540 --> 00:33:21,679
use a black hole so that we replication

00:33:19,970 --> 00:33:23,450
information from that smashed into a

00:33:21,679 --> 00:33:25,370
slave and we can feed off there so we

00:33:23,450 --> 00:33:28,910
can grow horizontally as well as

00:33:25,370 --> 00:33:31,419
vertically okay person as case scenario

00:33:28,910 --> 00:33:33,980
also we can don't forget mysql cluster

00:33:31,419 --> 00:33:35,419
just because we have our standalone

00:33:33,980 --> 00:33:38,150
instance or we're going from development

00:33:35,419 --> 00:33:40,940
to production or vice versa it doesn't

00:33:38,150 --> 00:33:42,559
mean we can't use cluster so maybe our

00:33:40,940 --> 00:33:46,280
production environment is a cluster and

00:33:42,559 --> 00:33:48,830
we want to feed off of that into an in

00:33:46,280 --> 00:33:50,270
ODB but before we do that because we're

00:33:48,830 --> 00:33:52,100
talking analytics because we're talking

00:33:50,270 --> 00:33:54,260
different scenarios in our organization

00:33:52,100 --> 00:33:55,789
we can take a Moscow cluster and turn

00:33:54,260 --> 00:33:57,409
into an EOD be no prob

00:33:55,789 --> 00:33:59,269
there that's just replication that's not

00:33:57,409 --> 00:34:01,850
black hole but what we may want to do is

00:33:59,269 --> 00:34:06,429
find two knows that data we're pushing

00:34:01,850 --> 00:34:06,429
into the nodb and use black hole there

00:34:07,089 --> 00:34:13,030
column filtering replication filtering

00:34:09,859 --> 00:34:15,440
and triggers like I say that a lot of

00:34:13,030 --> 00:34:18,049
usage for replication of black hole is

00:34:15,440 --> 00:34:20,389
also deleting columns so that we don't

00:34:18,049 --> 00:34:22,849
all wear masking or in the middle layer

00:34:20,389 --> 00:34:25,399
there so we can adjust the table

00:34:22,849 --> 00:34:29,869
structure whilst replicating and keeping

00:34:25,399 --> 00:34:32,629
everything working and then it'll cause

00:34:29,869 --> 00:34:34,190
big data bi a custom solutions like I

00:34:32,629 --> 00:34:35,929
say it's it's it's if it's a heavy-duty

00:34:34,190 --> 00:34:37,429
environment on the master in the

00:34:35,929 --> 00:34:39,470
development we want to test them and

00:34:37,429 --> 00:34:42,440
fine-tune it optimize it take some time

00:34:39,470 --> 00:34:44,960
out and and look at what the process is

00:34:42,440 --> 00:34:52,309
doing if it's too taking too long so we

00:34:44,960 --> 00:34:55,429
can use black hole in that scenario if

00:34:52,309 --> 00:34:57,470
what I've said hasn't made much sense or

00:34:55,429 --> 00:34:59,210
you want to investigate further or just

00:34:57,470 --> 00:35:01,339
we know set a replication or look at

00:34:59,210 --> 00:35:03,260
different solutions like I say there's

00:35:01,339 --> 00:35:05,390
some links there reference material go

00:35:03,260 --> 00:35:08,180
away play and if there are any doubts

00:35:05,390 --> 00:35:11,270
that you would like to challenge me with

00:35:08,180 --> 00:35:12,680
but don't want to hold a microphone or

00:35:11,270 --> 00:35:14,809
whatever I'll be here the rest of the

00:35:12,680 --> 00:35:21,890
day and obviously send me an email or

00:35:14,809 --> 00:35:25,069
whatever Thank No thank you for

00:35:21,890 --> 00:35:26,510
assisting thank you very much didn't

00:35:25,069 --> 00:35:29,599
expect me you caught me on a way there I

00:35:26,510 --> 00:35:31,490
was expecting a question not clap but

00:35:29,599 --> 00:35:34,430
thank you very much and I also thank you

00:35:31,490 --> 00:35:37,099
to the Susie conference the possibility

00:35:34,430 --> 00:35:39,079
of being mysql here and getting you

00:35:37,099 --> 00:35:42,680
interested in hearing this is a good

00:35:39,079 --> 00:35:45,859
thing for us we're are a call yes when

00:35:42,680 --> 00:35:47,750
mysql as well and you're more important

00:35:45,859 --> 00:35:50,180
than anything for us the community what

00:35:47,750 --> 00:35:51,890
makes us then we have users then we have

00:35:50,180 --> 00:35:53,960
enterprise solutions but i must admit

00:35:51,890 --> 00:35:55,790
the one thing we do expect is this is

00:35:53,960 --> 00:35:58,130
people talking about us and listening to

00:35:55,790 --> 00:36:01,730
us so thank you very much I mean it now

00:35:58,130 --> 00:36:04,190
I mean that and if you and also if caddy

00:36:01,730 --> 00:36:08,029
store the tercel Aniki thank you for

00:36:04,190 --> 00:36:09,200
letting me come here if I said it wrong

00:36:08,029 --> 00:36:10,970
thank you and

00:36:09,200 --> 00:36:13,280
if you're really into mysql and you've

00:36:10,970 --> 00:36:14,900
got an idea that you want to use go to

00:36:13,280 --> 00:36:16,070
my school connect put up call for paper

00:36:14,900 --> 00:36:18,650
i think the call for paper now has

00:36:16,070 --> 00:36:20,720
finished but even so you know if you get

00:36:18,650 --> 00:36:21,980
a purchasing power and it can get

00:36:20,720 --> 00:36:24,170
flights and everything you know feel

00:36:21,980 --> 00:36:32,990
free but if there are any questions

00:36:24,170 --> 00:36:34,460
please feel free no you're not asleep

00:36:32,990 --> 00:36:36,080
because I can see people moving so

00:36:34,460 --> 00:36:42,140
that's a good thing but oh thank you

00:36:36,080 --> 00:36:46,130
very much well thank you thank you thank

00:36:42,140 --> 00:36:48,620
you for the organization will help

00:36:46,130 --> 00:36:52,300
someone big and then we go on with the

00:36:48,620 --> 00:36:52,300
next dope thank you

00:36:57,160 --> 00:36:59,220

YouTube URL: https://www.youtube.com/watch?v=Nt2w1UvKEp0


