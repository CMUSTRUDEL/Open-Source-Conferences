Title: Hat making!
Publication date: 2020-11-05
Playlist: openSUSE + LibreOffice Conference 2020
Description: 
	How Fedora is run and why 



Have you ever wondered how your friends at Fedora run their project? Why do we do the things that we do? This talk gives a brief introduction to the governance and program management of the Fedora Project. Maybe you can be inspired by some of the ways we keep Fedora running. Maybe you can offer improvements based on the openSUSE way.



Subscribe ►http://bit.ly/1G2KKZl

Offical Website ►https://www.opensuse.org
Follow us on Twitter ► https://twitter.com/openSUSE
Like us on Facebook ► https://www.facebook.com/en.openSUSE
Captions: 
	00:00:00,000 --> 00:00:03,280
jump in and tell me to stop i'm gonna go

00:00:01,520 --> 00:00:06,399
ahead and get started

00:00:03,280 --> 00:00:07,600
so welcome to hat making how fedora is

00:00:06,399 --> 00:00:08,880
run and why

00:00:07,600 --> 00:00:10,639
to be honest there's not gonna be a

00:00:08,880 --> 00:00:14,639
whole lot of time for the y

00:00:10,639 --> 00:00:16,640
but i can sneak a little bit in there

00:00:14,639 --> 00:00:17,680
so let's see if it'll actually let me

00:00:16,640 --> 00:00:21,439
advance the slides all right

00:00:17,680 --> 00:00:23,439
slide showing has advanced everyone good

00:00:21,439 --> 00:00:24,720
yep it worked all right here are the

00:00:23,439 --> 00:00:25,840
things we're going to talk about i'm not

00:00:24,720 --> 00:00:27,599
going to read them to you because we're

00:00:25,840 --> 00:00:28,560
going to get to them

00:00:27,599 --> 00:00:31,119
but first i want to do a little

00:00:28,560 --> 00:00:33,040
housekeeping if you have nice things to

00:00:31,119 --> 00:00:34,719
say about the talk or about me and how

00:00:33,040 --> 00:00:37,360
wonderful i am

00:00:34,719 --> 00:00:38,160
you can at me on twitter there's my

00:00:37,360 --> 00:00:41,280
email

00:00:38,160 --> 00:00:44,079
i'm on irc if you have not nice things

00:00:41,280 --> 00:00:47,520
you can keep them to yourself

00:00:44,079 --> 00:00:49,280
this is under cc by sa 4.0 international

00:00:47,520 --> 00:00:50,719
which is the default license for these

00:00:49,280 --> 00:00:52,719
talks

00:00:50,719 --> 00:00:54,160
and even though i did upload the slides

00:00:52,719 --> 00:00:55,199
to the next cloud already when i put

00:00:54,160 --> 00:00:57,840
these together that

00:00:55,199 --> 00:00:59,120
hadn't been given to me yet so they're

00:00:57,840 --> 00:01:03,440
also available

00:00:59,120 --> 00:01:06,159
uh through that url and the qr code

00:01:03,440 --> 00:01:06,960
also i always put disclaimers in my

00:01:06,159 --> 00:01:08,400
talks unlike

00:01:06,960 --> 00:01:10,960
uh certain richard browns i could

00:01:08,400 --> 00:01:13,119
mention um so i want to

00:01:10,960 --> 00:01:14,560
cover two like this one actually does

00:01:13,119 --> 00:01:16,080
sort of represent

00:01:14,560 --> 00:01:17,840
organizations i'm attached to which is

00:01:16,080 --> 00:01:20,080
kind of a nice change

00:01:17,840 --> 00:01:22,560
um but as you can tell by how fast i'm

00:01:20,080 --> 00:01:23,520
talking this is a highly compressed and

00:01:22,560 --> 00:01:27,520
very lossy

00:01:23,520 --> 00:01:29,600
talk uh i've given 45-minute talks on

00:01:27,520 --> 00:01:31,520
like two slides from this one

00:01:29,600 --> 00:01:32,799
so there's a lot that we're not covering

00:01:31,520 --> 00:01:33,680
that we're just going to touch on really

00:01:32,799 --> 00:01:36,560
quickly

00:01:33,680 --> 00:01:37,600
uh that's the the joys of a short time

00:01:36,560 --> 00:01:39,600
slot

00:01:37,600 --> 00:01:41,040
uh i'll do my best to touch on the high

00:01:39,600 --> 00:01:43,200
level things and i'm always happy to

00:01:41,040 --> 00:01:46,479
talk about stuff later

00:01:43,200 --> 00:01:49,040
and i want to make clear that

00:01:46,479 --> 00:01:50,799
this is fedora's way it's not

00:01:49,040 --> 00:01:52,560
necessarily the one true way

00:01:50,799 --> 00:01:54,240
uh you know i pitched this talk with the

00:01:52,560 --> 00:01:58,000
idea that fedora

00:01:54,240 --> 00:01:59,840
and opensuse are friends

00:01:58,000 --> 00:02:01,520
in a very meaningful way we share a lot

00:01:59,840 --> 00:02:02,719
of contributors we share a lot of

00:02:01,520 --> 00:02:04,079
technology

00:02:02,719 --> 00:02:06,560
we work together we're not really

00:02:04,079 --> 00:02:07,439
competing i want to share what fedora

00:02:06,560 --> 00:02:10,560
does that is

00:02:07,439 --> 00:02:13,280
mostly successful for how we work with

00:02:10,560 --> 00:02:15,440
with you i want to learn more about hope

00:02:13,280 --> 00:02:17,280
opensuse works we can make fedora better

00:02:15,440 --> 00:02:19,920
this is truly given in the spirit of

00:02:17,280 --> 00:02:19,920
open source

00:02:20,480 --> 00:02:26,720
so who am i uh i'm me

00:02:24,319 --> 00:02:29,360
i'm a senior program manager at red hat

00:02:26,720 --> 00:02:30,640
my primary day job is being the fedora

00:02:29,360 --> 00:02:32,720
program manager

00:02:30,640 --> 00:02:34,560
i'm also the program manager for centos

00:02:32,720 --> 00:02:38,239
stream which we won't talk about beyond

00:02:34,560 --> 00:02:40,160
a couple slides from now and i'm a minor

00:02:38,239 --> 00:02:41,519
contributor to a handful of open source

00:02:40,160 --> 00:02:44,560
communities

00:02:41,519 --> 00:02:45,519
i've been in fedora for 10 ish 11 years

00:02:44,560 --> 00:02:48,080
now

00:02:45,519 --> 00:02:49,920
but i also work on a couple small

00:02:48,080 --> 00:02:53,040
applications

00:02:49,920 --> 00:02:56,000
that are you know have user bases

00:02:53,040 --> 00:02:59,120
measured in the hundreds

00:02:56,000 --> 00:03:00,080
i like to jump in and help here and

00:02:59,120 --> 00:03:03,120
there

00:03:00,080 --> 00:03:06,480
where i can so

00:03:03,120 --> 00:03:08,080
what is fedora hopefully you're at least

00:03:06,480 --> 00:03:11,680
passingly familiar with

00:03:08,080 --> 00:03:14,000
the project uh yes it is a hat

00:03:11,680 --> 00:03:15,440
but it's more than just a very stylish

00:03:14,000 --> 00:03:18,319
hat

00:03:15,440 --> 00:03:20,000
uh it's a community you know people tend

00:03:18,319 --> 00:03:20,959
to use fedora as a shorthand for the

00:03:20,000 --> 00:03:23,120
bits we release

00:03:20,959 --> 00:03:24,799
but we like to say that fedora is is a

00:03:23,120 --> 00:03:26,319
community first

00:03:24,799 --> 00:03:28,799
it's a community of non-red hat

00:03:26,319 --> 00:03:31,599
employees

00:03:28,799 --> 00:03:32,080
sometimes future red hat employees it's

00:03:31,599 --> 00:03:33,760
a community

00:03:32,080 --> 00:03:35,519
of red hat employees who work on fedora

00:03:33,760 --> 00:03:37,280
as their day job and it's a community of

00:03:35,519 --> 00:03:39,680
red hat employees working on fedora

00:03:37,280 --> 00:03:40,879
outside their day job so just because

00:03:39,680 --> 00:03:42,959
somebody

00:03:40,879 --> 00:03:44,879
works at red hat that doesn't mean their

00:03:42,959 --> 00:03:48,000
contributions to fedora are in any way

00:03:44,879 --> 00:03:51,120
related to what red hat pays them to do

00:03:48,000 --> 00:03:52,239
and this makes it a really interesting

00:03:51,120 --> 00:03:54,720
mix

00:03:52,239 --> 00:03:56,319
because you know obviously red hat has a

00:03:54,720 --> 00:03:57,760
lot of influence in the direction that

00:03:56,319 --> 00:04:01,840
fedora takes

00:03:57,760 --> 00:04:04,959
but the community you know has a lot too

00:04:01,840 --> 00:04:06,560
and sometimes people argue

00:04:04,959 --> 00:04:08,400
one position or another depending on if

00:04:06,560 --> 00:04:09,599
they're acting in their capacity of

00:04:08,400 --> 00:04:14,080
their day job or

00:04:09,599 --> 00:04:15,519
as a volunteer contributor

00:04:14,080 --> 00:04:18,079
and it's really not even fair to say

00:04:15,519 --> 00:04:20,720
that fedora is a community

00:04:18,079 --> 00:04:22,400
um we're a group of communities and i'll

00:04:20,720 --> 00:04:24,880
go into that a little more in a moment

00:04:22,400 --> 00:04:25,840
but if you've seen the film finding nemo

00:04:24,880 --> 00:04:28,400
you know the scene

00:04:25,840 --> 00:04:29,440
where they have the bunch of tuna cotton

00:04:28,400 --> 00:04:30,639
the net and they're all swimming in

00:04:29,440 --> 00:04:32,160
different directions and then nemo's

00:04:30,639 --> 00:04:34,000
like swim downward

00:04:32,160 --> 00:04:35,199
and they all swim downward and they you

00:04:34,000 --> 00:04:38,960
know break open the net

00:04:35,199 --> 00:04:40,960
the analogy is a little strained but

00:04:38,960 --> 00:04:44,000
you know in a lot of ways you know

00:04:40,960 --> 00:04:48,160
fedora teams have a lot of autonomy

00:04:44,000 --> 00:04:50,240
and so we're generally working in the

00:04:48,160 --> 00:04:52,960
same sort of general direction

00:04:50,240 --> 00:04:54,080
uh but there's not like a single unified

00:04:52,960 --> 00:04:57,280
you know

00:04:54,080 --> 00:04:57,600
sense of direction within fedora if you

00:04:57,280 --> 00:04:59,440
ask

00:04:57,600 --> 00:05:01,199
2 000 contributors their opinion on

00:04:59,440 --> 00:05:03,600
something you'll probably get 3 000

00:05:01,199 --> 00:05:03,600
answers

00:05:04,800 --> 00:05:08,479
but we also make stuff we don't just

00:05:06,320 --> 00:05:10,720
hang out with each other

00:05:08,479 --> 00:05:12,560
so we have three flagship editions the

00:05:10,720 --> 00:05:15,600
server workstation and iot

00:05:12,560 --> 00:05:17,360
targeted at what they sound like we have

00:05:15,600 --> 00:05:20,800
a couple of rising editions

00:05:17,360 --> 00:05:21,120
uh fedora core os and fedora silver blue

00:05:20,800 --> 00:05:23,199
which

00:05:21,120 --> 00:05:24,560
are powered by the rpm os tree

00:05:23,199 --> 00:05:28,720
technology

00:05:24,560 --> 00:05:31,120
and you know designed for containerized

00:05:28,720 --> 00:05:33,120
or container workloads and desktops

00:05:31,120 --> 00:05:34,720
respectively

00:05:33,120 --> 00:05:36,720
and then we have a bunch of what we call

00:05:34,720 --> 00:05:39,520
spins and labs

00:05:36,720 --> 00:05:40,320
these are different desktop environments

00:05:39,520 --> 00:05:42,880
or

00:05:40,320 --> 00:05:43,840
offerings really focused on a specific

00:05:42,880 --> 00:05:46,479
use case

00:05:43,840 --> 00:05:46,880
like computational neuroscience or open

00:05:46,479 --> 00:05:50,479
source

00:05:46,880 --> 00:05:52,000
design or teaching python in a classroom

00:05:50,479 --> 00:05:53,600
and i just put a bunch of text there

00:05:52,000 --> 00:05:55,600
because putting all the images in would

00:05:53,600 --> 00:05:57,600
one take a long time and i'm lazy

00:05:55,600 --> 00:05:58,800
but also uh it would just fill up the

00:05:57,600 --> 00:06:00,560
screen

00:05:58,800 --> 00:06:03,039
so we make a lot of stuff that we give

00:06:00,560 --> 00:06:03,039
to people

00:06:03,600 --> 00:06:09,840
my screen went black all right let's

00:06:07,039 --> 00:06:11,440
share all right ben let's be honest here

00:06:09,840 --> 00:06:13,039
is that your way of implying that the

00:06:11,440 --> 00:06:16,479
way federer is built and why

00:06:13,039 --> 00:06:17,600
is a black box that wasn't you weren't

00:06:16,479 --> 00:06:22,400
supposed to

00:06:17,600 --> 00:06:22,400
know that but yes okay

00:06:23,120 --> 00:06:26,960
let's see if this is gonna work now

00:06:32,840 --> 00:06:37,840
share

00:06:34,479 --> 00:06:41,120
hey it's back okay in the form of

00:06:37,840 --> 00:06:43,520
chrome browser i think or firefox

00:06:41,120 --> 00:06:44,720
even better all right so here's where i

00:06:43,520 --> 00:06:46,840
was

00:06:44,720 --> 00:06:48,400
all right so fedora exists in an

00:06:46,840 --> 00:06:51,759
ecosystem

00:06:48,400 --> 00:06:52,479
so fedora is the upstream of centos

00:06:51,759 --> 00:06:53,919
stream

00:06:52,479 --> 00:06:56,080
which is the upstream of red hat

00:06:53,919 --> 00:06:59,120
enterprise linux which is the upstream

00:06:56,080 --> 00:07:01,199
of centos linux

00:06:59,120 --> 00:07:03,039
so it's really you know we're focusing

00:07:01,199 --> 00:07:03,440
on different use cases here fedora is

00:07:03,039 --> 00:07:05,759
really

00:07:03,440 --> 00:07:07,199
being geared towards operating system

00:07:05,759 --> 00:07:07,919
developers and obviously you know it's

00:07:07,199 --> 00:07:09,199
just like

00:07:07,919 --> 00:07:11,440
which developer use cases we're

00:07:09,199 --> 00:07:14,639
targeting it's you know used for

00:07:11,440 --> 00:07:17,680
desktop os all the time um

00:07:14,639 --> 00:07:19,759
stream is ecosystem developers and rel

00:07:17,680 --> 00:07:21,039
is enterprise application developers and

00:07:19,759 --> 00:07:22,639
that's the last you will hear about

00:07:21,039 --> 00:07:25,759
anything downstream from fedora

00:07:22,639 --> 00:07:27,120
if i remember my talk correctly

00:07:25,759 --> 00:07:29,680
so let's talk about the governance of

00:07:27,120 --> 00:07:31,520
the project a little bit

00:07:29,680 --> 00:07:33,440
we have the fedora council which is a

00:07:31,520 --> 00:07:34,720
top-level governance body that sets

00:07:33,440 --> 00:07:36,880
goals

00:07:34,720 --> 00:07:38,479
governs finances and trademarks doesn't

00:07:36,880 --> 00:07:39,280
have a lot of ability to actually make

00:07:38,479 --> 00:07:41,599
stuff happen

00:07:39,280 --> 00:07:44,319
other than influence and making pouty

00:07:41,599 --> 00:07:47,520
eyes at people

00:07:44,319 --> 00:07:48,879
but we basically have the ultimate

00:07:47,520 --> 00:07:52,080
decision-making authority

00:07:48,879 --> 00:07:53,360
um the supreme court if you will of

00:07:52,080 --> 00:07:56,560
complaints

00:07:53,360 --> 00:07:57,199
uh and the council works on a consensus

00:07:56,560 --> 00:07:59,280
model

00:07:57,199 --> 00:08:02,000
so basically we all have to at least not

00:07:59,280 --> 00:08:04,400
oppose something for it to pass

00:08:02,000 --> 00:08:07,039
that usually works out sometimes causes

00:08:04,400 --> 00:08:09,280
frustration

00:08:07,039 --> 00:08:11,039
so we have members let's run through

00:08:09,280 --> 00:08:12,400
real quickly if you see a red hat next

00:08:11,039 --> 00:08:14,000
to the name that means it's a position

00:08:12,400 --> 00:08:17,280
funded by red hat

00:08:14,000 --> 00:08:18,720
very clever so we have a project leader

00:08:17,280 --> 00:08:20,479
uh community action and impact

00:08:18,720 --> 00:08:20,960
coordinator that we call the f-cake

00:08:20,479 --> 00:08:22,879
because

00:08:20,960 --> 00:08:25,120
holy crap community action and impact

00:08:22,879 --> 00:08:27,280
coordinator is a lot of

00:08:25,120 --> 00:08:28,879
uh syllables we elect two members from

00:08:27,280 --> 00:08:31,520
the community

00:08:28,879 --> 00:08:33,440
uh one every six months and they serve

00:08:31,520 --> 00:08:35,519
at one year terms

00:08:33,440 --> 00:08:38,240
we have what are called objectives which

00:08:35,519 --> 00:08:42,320
are basically 12 to 18 months sort of

00:08:38,240 --> 00:08:45,200
broad you know major goals within the

00:08:42,320 --> 00:08:45,839
the project uh and leaders of those

00:08:45,200 --> 00:08:48,240
objectives

00:08:45,839 --> 00:08:49,839
have seats on the council we have

00:08:48,240 --> 00:08:51,440
representatives from the engineering and

00:08:49,839 --> 00:08:52,399
mindshare committees which i'll touch on

00:08:51,440 --> 00:08:54,320
in a moment

00:08:52,399 --> 00:08:56,080
we have me as the program manager and

00:08:54,320 --> 00:08:58,560
then we have the diversity and inclusion

00:08:56,080 --> 00:09:01,440
team representative who i will also

00:08:58,560 --> 00:09:03,040
talk about momentarily so the

00:09:01,440 --> 00:09:05,519
engineering steering committee is an

00:09:03,040 --> 00:09:07,279
engineering oversight body uh they

00:09:05,519 --> 00:09:08,160
basically make decisions on technical

00:09:07,279 --> 00:09:10,080
changes

00:09:08,160 --> 00:09:12,880
resolve packaging disputes approve the

00:09:10,080 --> 00:09:14,320
release schedule things like that

00:09:12,880 --> 00:09:16,240
and it's a nine member body that's

00:09:14,320 --> 00:09:18,560
entirely elected by the community there

00:09:16,240 --> 00:09:21,120
are no appointed positions

00:09:18,560 --> 00:09:23,040
that said there tend to be quite a few

00:09:21,120 --> 00:09:25,680
red hat employees on there

00:09:23,040 --> 00:09:27,600
because red hat employees are often the

00:09:25,680 --> 00:09:31,040
ones who have the time to

00:09:27,600 --> 00:09:33,440
devote to it and have the community

00:09:31,040 --> 00:09:35,519
recognition but we also have people who

00:09:33,440 --> 00:09:38,320
are outside of red hat on the

00:09:35,519 --> 00:09:40,640
fesco such as a certain nilgampa i could

00:09:38,320 --> 00:09:40,640
mention

00:09:42,720 --> 00:09:45,839
and then we have the mindshare committee

00:09:44,399 --> 00:09:47,440
which is basically everything not

00:09:45,839 --> 00:09:49,519
engineering

00:09:47,440 --> 00:09:51,440
and so they do ambassadors marketing

00:09:49,519 --> 00:09:53,680
websites

00:09:51,440 --> 00:09:55,120
that group has a membership of two

00:09:53,680 --> 00:09:58,240
elected members

00:09:55,120 --> 00:10:00,160
and then the component teams each select

00:09:58,240 --> 00:10:03,360
a representative to the committee

00:10:00,160 --> 00:10:05,600
so it's still very community driven

00:10:03,360 --> 00:10:07,360
just not quite as directly elected as

00:10:05,600 --> 00:10:09,920
the way fesco is

00:10:07,360 --> 00:10:11,600
and the f cake also serves ex officio on

00:10:09,920 --> 00:10:13,200
that committee

00:10:11,600 --> 00:10:15,760
we have a diversity and inclusion team

00:10:13,200 --> 00:10:17,200
which does uh what you think it does

00:10:15,760 --> 00:10:19,360
it reports directly to the fedora

00:10:17,200 --> 00:10:20,079
council because we want to make it clear

00:10:19,360 --> 00:10:21,760
that

00:10:20,079 --> 00:10:24,240
diversity and inclusion are important

00:10:21,760 --> 00:10:26,399
values within our community

00:10:24,240 --> 00:10:28,560
we fall short on our goals in that as

00:10:26,399 --> 00:10:29,920
most open source projects do but it is

00:10:28,560 --> 00:10:32,240
something we value and we're working

00:10:29,920 --> 00:10:34,079
hard to fix

00:10:32,240 --> 00:10:36,320
and they run fedora women's day which is

00:10:34,079 --> 00:10:38,880
actually happening today

00:10:36,320 --> 00:10:40,320
and other events aimed at promoting uh

00:10:38,880 --> 00:10:42,720
diversity and inclusion within our

00:10:40,320 --> 00:10:42,720
project

00:10:43,120 --> 00:10:46,800
so if you put it all together here's

00:10:44,959 --> 00:10:48,320
sort of the org chart

00:10:46,800 --> 00:10:50,079
uh it's a little out of date but it's

00:10:48,320 --> 00:10:51,839
the general idea

00:10:50,079 --> 00:10:53,920
you can see how there are many layers of

00:10:51,839 --> 00:10:56,000
things and within

00:10:53,920 --> 00:10:58,800
uh reason most of these teams have a lot

00:10:56,000 --> 00:11:00,240
of uh independence on how they work

00:10:58,800 --> 00:11:02,320
so you know the council sort of sets

00:11:00,240 --> 00:11:05,600
broad goals

00:11:02,320 --> 00:11:08,480
and broad constraints and then people

00:11:05,600 --> 00:11:08,480
work within those

00:11:09,040 --> 00:11:13,040
okay and i can't not talk about uh the

00:11:11,519 --> 00:11:15,279
corporate sponsor

00:11:13,040 --> 00:11:16,880
red hat and you know therefore ibm

00:11:15,279 --> 00:11:18,000
provides financial and material

00:11:16,880 --> 00:11:19,600
sponsorship

00:11:18,000 --> 00:11:20,959
they are generally pretty hands-off

00:11:19,600 --> 00:11:21,680
despite what some people in the

00:11:20,959 --> 00:11:25,200
community

00:11:21,680 --> 00:11:27,200
think sometimes you know i've never had

00:11:25,200 --> 00:11:28,399
my manager come to me and say fedora

00:11:27,200 --> 00:11:30,320
must do this

00:11:28,399 --> 00:11:31,839
even though my manager is also the

00:11:30,320 --> 00:11:34,240
manager of

00:11:31,839 --> 00:11:35,680
the program manage program managers for

00:11:34,240 --> 00:11:37,760
rel

00:11:35,680 --> 00:11:39,760
so uh you know the work we do in fedora

00:11:37,760 --> 00:11:41,440
definitely impacts the rest of my team

00:11:39,760 --> 00:11:43,120
but to some degree they kind of have to

00:11:41,440 --> 00:11:44,399
deal with whatever fedora gives them in

00:11:43,120 --> 00:11:46,959
a way

00:11:44,399 --> 00:11:48,480
that's not to say that you know red hat

00:11:46,959 --> 00:11:50,160
won't make changes when it

00:11:48,480 --> 00:11:52,079
when it comes time to fork rel from

00:11:50,160 --> 00:11:54,560
fedora uh

00:11:52,079 --> 00:11:56,000
but by and large they don't just swoop

00:11:54,560 --> 00:11:59,360
in and say you must do this

00:11:56,000 --> 00:12:01,680
or else there are some things that

00:11:59,360 --> 00:12:04,399
certainly feel that way

00:12:01,680 --> 00:12:04,720
but by and large that's not the case red

00:12:04,399 --> 00:12:07,120
hat

00:12:04,720 --> 00:12:08,800
understands that the community is a key

00:12:07,120 --> 00:12:12,079
component of fedora

00:12:08,800 --> 00:12:14,000
and without driving them away we no

00:12:12,079 --> 00:12:16,160
longer have a fedora to provide to

00:12:14,000 --> 00:12:17,680
people

00:12:16,160 --> 00:12:19,200
all right so i talked about giving a

00:12:17,680 --> 00:12:21,440
45-minute talk

00:12:19,200 --> 00:12:21,440
um

00:12:22,839 --> 00:12:28,880
there is um

00:12:26,720 --> 00:12:30,560
a talk i gave at devconf check a couple

00:12:28,880 --> 00:12:31,839
years ago that goes into this in great

00:12:30,560 --> 00:12:35,120
detail

00:12:31,839 --> 00:12:37,519
so we're gonna start in

00:12:35,120 --> 00:12:39,040
very shallow detail the goals of our

00:12:37,519 --> 00:12:40,639
technical changes process

00:12:39,040 --> 00:12:42,720
are communication coordination

00:12:40,639 --> 00:12:44,959
accountability it's really not about

00:12:42,720 --> 00:12:46,480
gatekeeping

00:12:44,959 --> 00:12:48,160
it's basically making sure that other

00:12:46,480 --> 00:12:49,360
people in the project are aware of

00:12:48,160 --> 00:12:50,800
what's going on

00:12:49,360 --> 00:12:52,720
making sure we get it into the release

00:12:50,800 --> 00:12:54,399
notes make sure qa knows about it so

00:12:52,720 --> 00:12:55,680
they can test things appropriately stuff

00:12:54,399 --> 00:12:58,160
like that

00:12:55,680 --> 00:12:59,440
and then making sure that when you say

00:12:58,160 --> 00:13:00,240
i'm going to do this that you're

00:12:59,440 --> 00:13:03,920
actually

00:13:00,240 --> 00:13:05,600
that actually gets in so we have two

00:13:03,920 --> 00:13:07,279
categories to our changes process

00:13:05,600 --> 00:13:09,120
they're system-wide changes and

00:13:07,279 --> 00:13:12,639
self-contained changes

00:13:09,120 --> 00:13:16,079
and they are excuse me they are

00:13:12,639 --> 00:13:18,959
fairly uh as you know

00:13:16,079 --> 00:13:19,440
as described basically just a way of

00:13:18,959 --> 00:13:21,360
kind of

00:13:19,440 --> 00:13:22,959
categorizing the scope and the impact of

00:13:21,360 --> 00:13:24,399
the change

00:13:22,959 --> 00:13:26,160
and so when you submit a change proposal

00:13:24,399 --> 00:13:27,680
you there are things like a detailed

00:13:26,160 --> 00:13:29,120
descriptions like what it is you're

00:13:27,680 --> 00:13:31,839
actually doing

00:13:29,120 --> 00:13:34,160
um the contingency plan so what happens

00:13:31,839 --> 00:13:37,200
if it goes terribly wrong

00:13:34,160 --> 00:13:40,240
things like impact upgrade because

00:13:37,200 --> 00:13:42,480
we do block on upgradeability from one

00:13:40,240 --> 00:13:44,320
release to another

00:13:42,480 --> 00:13:45,760
um and then you know check with release

00:13:44,320 --> 00:13:47,360
engineering to make sure like hey can we

00:13:45,760 --> 00:13:48,000
actually build this thing that i want to

00:13:47,360 --> 00:13:49,440
do

00:13:48,000 --> 00:13:51,839
is it can require changes to the build

00:13:49,440 --> 00:13:52,399
system is it going to make pierre very

00:13:51,839 --> 00:13:56,320
sad

00:13:52,399 --> 00:13:57,600
things like that so the life cycle of a

00:13:56,320 --> 00:13:59,199
change proposal

00:13:57,600 --> 00:14:01,519
is it gets submitted to me as the

00:13:59,199 --> 00:14:03,040
program manager i make sure it has all

00:14:01,519 --> 00:14:05,279
the boxes checked

00:14:03,040 --> 00:14:06,399
send it to the develop announce mailing

00:14:05,279 --> 00:14:08,320
list

00:14:06,399 --> 00:14:10,320
and we give the community a one week

00:14:08,320 --> 00:14:12,000
period to comment on it

00:14:10,320 --> 00:14:13,600
that's basically a chance to say well

00:14:12,000 --> 00:14:14,639
this is actually a terrible idea and let

00:14:13,600 --> 00:14:17,680
me tell you why

00:14:14,639 --> 00:14:21,440
and boy do we get that sometimes

00:14:17,680 --> 00:14:24,079
um in the prior iteration of this

00:14:21,440 --> 00:14:26,160
process the uh the comments happened

00:14:24,079 --> 00:14:27,600
generally after fesco voted on it

00:14:26,160 --> 00:14:30,959
which seemed like a really backwards way

00:14:27,600 --> 00:14:34,160
to do it so when we reinvented this uh

00:14:30,959 --> 00:14:37,360
12 13 releases ago this is

00:14:34,160 --> 00:14:39,040
what we did so after the community has

00:14:37,360 --> 00:14:41,600
had time to comment on it it gets sent

00:14:39,040 --> 00:14:43,839
to fesco for approval

00:14:41,600 --> 00:14:44,720
and then throughout the release process

00:14:43,839 --> 00:14:46,560
we check

00:14:44,720 --> 00:14:47,920
to make sure hey is this being done do

00:14:46,560 --> 00:14:50,959
we need to back it out do we need to

00:14:47,920 --> 00:14:50,959
move it to another release

00:14:51,760 --> 00:14:55,440
so leading into that the release

00:14:53,920 --> 00:14:59,680
schedule

00:14:55,440 --> 00:15:02,959
um so just to make richard very upset

00:14:59,680 --> 00:15:04,560
uh we do have set releases we release um

00:15:02,959 --> 00:15:07,040
do major releases every april and

00:15:04,560 --> 00:15:09,279
october um we don't do any

00:15:07,040 --> 00:15:10,240
minor releases or official respins

00:15:09,279 --> 00:15:13,360
because

00:15:10,240 --> 00:15:14,320
the uh lifestyle life cycle is short

00:15:13,360 --> 00:15:15,760
enough

00:15:14,320 --> 00:15:17,680
that it doesn't really make sense to do

00:15:15,760 --> 00:15:19,839
point releases

00:15:17,680 --> 00:15:22,000
and releases reach an end of life four

00:15:19,839 --> 00:15:24,480
years after or four weeks excuse me

00:15:22,000 --> 00:15:25,279
after the n minus two release uh so

00:15:24,480 --> 00:15:28,320
essentially

00:15:25,279 --> 00:15:30,160
releases have about a 13-month uh period

00:15:28,320 --> 00:15:32,000
where we provide updates

00:15:30,160 --> 00:15:33,839
we don't do an alpha anymore but we do

00:15:32,000 --> 00:15:35,519
do a beta release about five weeks

00:15:33,839 --> 00:15:38,240
before ga

00:15:35,519 --> 00:15:39,199
um and then we have a rolling

00:15:38,240 --> 00:15:42,399
development stream

00:15:39,199 --> 00:15:44,079
which we call rawhide

00:15:42,399 --> 00:15:45,279
so i'm not going to like go through all

00:15:44,079 --> 00:15:46,720
these but these are sort of the key

00:15:45,279 --> 00:15:49,920
release milestones

00:15:46,720 --> 00:15:51,680
so at a very high level it's a

00:15:49,920 --> 00:15:53,199
proposal submission deadline we do a

00:15:51,680 --> 00:15:55,680
mass rebuild

00:15:53,199 --> 00:15:56,320
we have a checkpoint to make sure

00:15:55,680 --> 00:16:00,000
changes

00:15:56,320 --> 00:16:03,600
are code testable we branch

00:16:00,000 --> 00:16:03,600
the new release from rawhide

00:16:03,680 --> 00:16:06,880
do a freeze for beta so that qa has

00:16:05,680 --> 00:16:08,720
something to test against

00:16:06,880 --> 00:16:11,440
we do a beta release we do a freeze for

00:16:08,720 --> 00:16:14,240
final and we do a final release

00:16:11,440 --> 00:16:14,240
and then we all go

00:16:15,920 --> 00:16:20,399
so let's drill in on the the process of

00:16:17,920 --> 00:16:22,560
the release a little more

00:16:20,399 --> 00:16:24,240
so i talked earlier about you know we

00:16:22,560 --> 00:16:25,279
have blockers we have release criteria

00:16:24,240 --> 00:16:27,360
we have to meet

00:16:25,279 --> 00:16:29,680
uh but not all deliverables are release

00:16:27,360 --> 00:16:33,199
blocking so basically our additions

00:16:29,680 --> 00:16:36,320
the kde spin um and that's basically it

00:16:33,199 --> 00:16:37,040
uh so other things can be if they're

00:16:36,320 --> 00:16:38,560
broken and

00:16:37,040 --> 00:16:39,839
you know we want them to get fixed but

00:16:38,560 --> 00:16:40,160
we're not going to hold up the release

00:16:39,839 --> 00:16:43,680
for

00:16:40,160 --> 00:16:45,519
the entire suite of deliverables

00:16:43,680 --> 00:16:47,279
um so we do have requirements that are

00:16:45,519 --> 00:16:49,120
defined in our release criteria

00:16:47,279 --> 00:16:51,360
we do make exceptions sometime if

00:16:49,120 --> 00:16:53,600
something is just notoriously hard to

00:16:51,360 --> 00:16:56,880
fix or if it came in really late and

00:16:53,600 --> 00:17:00,639
the impact we we feel is low

00:16:56,880 --> 00:17:01,279
um so we conduct weekly review meetings

00:17:00,639 --> 00:17:03,199
to

00:17:01,279 --> 00:17:04,400
you know make the community decision on

00:17:03,199 --> 00:17:06,160
that

00:17:04,400 --> 00:17:08,640
and the idea behind a freeze is to give

00:17:06,160 --> 00:17:10,319
qa a fixed target to test against

00:17:08,640 --> 00:17:12,959
um and to try and minimize the

00:17:10,319 --> 00:17:14,000
disruption during that stabilization

00:17:12,959 --> 00:17:16,480
period

00:17:14,000 --> 00:17:17,360
um we make exceptions to fixed blockers

00:17:16,480 --> 00:17:18,799
obviously

00:17:17,360 --> 00:17:20,559
and if there are other significant

00:17:18,799 --> 00:17:21,360
issues particularly if they affect live

00:17:20,559 --> 00:17:23,439
media

00:17:21,360 --> 00:17:24,799
then we'll allow an exception to fix

00:17:23,439 --> 00:17:26,000
those

00:17:24,799 --> 00:17:28,079
and we also have what we call a

00:17:26,000 --> 00:17:29,520
prioritized bugs process which are

00:17:28,079 --> 00:17:32,080
things that are important

00:17:29,520 --> 00:17:33,600
usually like highly visible but not

00:17:32,080 --> 00:17:36,720
release blocking

00:17:33,600 --> 00:17:38,320
and that's basically a way for um people

00:17:36,720 --> 00:17:38,640
to sort of flag it as important issues

00:17:38,320 --> 00:17:40,400
and if

00:17:38,640 --> 00:17:42,080
it's accepted as a prioritized bug then

00:17:40,400 --> 00:17:46,320
matthew miller and i

00:17:42,080 --> 00:17:48,480
go and pester people until they're fixed

00:17:46,320 --> 00:17:49,919
then we have a go no go decision so

00:17:48,480 --> 00:17:52,080
that's basically a check of

00:17:49,919 --> 00:17:53,679
are all the blockers fixed do we

00:17:52,080 --> 00:17:54,640
actually have a release candidate is it

00:17:53,679 --> 00:17:56,000
tested

00:17:54,640 --> 00:17:57,919
and then if not we'll push it back a

00:17:56,000 --> 00:18:00,640
week and try again so yesterday was

00:17:57,919 --> 00:18:03,679
supposed to be our first go no go uh we

00:18:00,640 --> 00:18:06,080
waiting on a new signed shim

00:18:03,679 --> 00:18:07,200
for the release because of things i

00:18:06,080 --> 00:18:08,720
won't get into now

00:18:07,200 --> 00:18:11,600
so we pushed it back to next week so

00:18:08,720 --> 00:18:13,679
we're aiming at target date number one

00:18:11,600 --> 00:18:17,440
um and we don't rerun composers if a

00:18:13,679 --> 00:18:17,440
non-blocking deliverable didn't build

00:18:17,679 --> 00:18:21,200
uh so i'll get into some other stuff

00:18:19,280 --> 00:18:22,400
real quick we use bugzilla for bug

00:18:21,200 --> 00:18:24,240
tracking

00:18:22,400 --> 00:18:26,720
i have lots of opinions about that both

00:18:24,240 --> 00:18:28,400
good and bad but that's what we use

00:18:26,720 --> 00:18:30,080
we branch the bug so that when we so

00:18:28,400 --> 00:18:31,919
when we branch the code

00:18:30,080 --> 00:18:33,440
so basically the if you file an issue

00:18:31,919 --> 00:18:35,280
against rawhide uh

00:18:33,440 --> 00:18:37,120
it'll get you know do it now and it'll

00:18:35,280 --> 00:18:39,360
become a fedora 34 bug

00:18:37,120 --> 00:18:40,640
when we do the branch uh early in the

00:18:39,360 --> 00:18:42,480
winter

00:18:40,640 --> 00:18:44,400
we close the end of life bugs one month

00:18:42,480 --> 00:18:46,160
after the n 2 release

00:18:44,400 --> 00:18:47,840
which always makes people really sad and

00:18:46,160 --> 00:18:50,960
i have to make sure i

00:18:47,840 --> 00:18:52,000
check the uh don't send me updates box

00:18:50,960 --> 00:18:53,440
because i'll get a lot of people

00:18:52,000 --> 00:18:55,120
commenting like how dare you i'll never

00:18:53,440 --> 00:18:56,080
use fedora again because you didn't fix

00:18:55,120 --> 00:18:58,799
this bug

00:18:56,080 --> 00:19:00,000
and gosh i really wish we would get

00:18:58,799 --> 00:19:02,160
every bug fixed

00:19:00,000 --> 00:19:04,240
uh that's just not a reality for us at

00:19:02,160 --> 00:19:06,559
the moment

00:19:04,240 --> 00:19:07,600
so how do we build the packages uh we

00:19:06,559 --> 00:19:09,320
have a dist kit

00:19:07,600 --> 00:19:10,720
that on source.fedora

00:19:09,320 --> 00:19:13,280
source.fedoraproject.org

00:19:10,720 --> 00:19:14,960
that provides the spec files and any

00:19:13,280 --> 00:19:17,520
patches that we carry

00:19:14,960 --> 00:19:19,200
um and a look aside cache for the actual

00:19:17,520 --> 00:19:20,480
source tarballs

00:19:19,200 --> 00:19:22,480
we have a concept called proven

00:19:20,480 --> 00:19:24,799
packagers where if you've you know

00:19:22,480 --> 00:19:27,840
proven yourself as a packager you can

00:19:24,799 --> 00:19:29,360
fesco can grant you this status and then

00:19:27,840 --> 00:19:29,679
you can step in and make changes to

00:19:29,360 --> 00:19:31,679
other

00:19:29,679 --> 00:19:33,840
packages that other people maintain

00:19:31,679 --> 00:19:35,840
which is really helpful when we have

00:19:33,840 --> 00:19:37,120
you know mass changes to packages

00:19:35,840 --> 00:19:39,200
because we're changing

00:19:37,120 --> 00:19:40,880
you know something in the build steps or

00:19:39,200 --> 00:19:44,080
when somebody's just non-responsive and

00:19:40,880 --> 00:19:45,440
we need to fix an issue quickly

00:19:44,080 --> 00:19:47,600
there has been some discussion about

00:19:45,440 --> 00:19:48,480
moving to a source get model we are not

00:19:47,600 --> 00:19:50,960
there yet

00:19:48,480 --> 00:19:51,840
but i just i did want to say yes that is

00:19:50,960 --> 00:19:55,440
something we think about

00:19:51,840 --> 00:19:56,240
sometimes so for build system we use

00:19:55,440 --> 00:19:58,240
koji

00:19:56,240 --> 00:20:00,400
and we also have copper for unofficial

00:19:58,240 --> 00:20:03,039
build so that's a lot of times

00:20:00,400 --> 00:20:04,159
people will package like the upstream's

00:20:03,039 --> 00:20:06,799
development branch

00:20:04,159 --> 00:20:08,400
there for testing or things that you

00:20:06,799 --> 00:20:10,960
know for whatever reason you just

00:20:08,400 --> 00:20:12,320
don't want to get into as uh official

00:20:10,960 --> 00:20:14,720
fedora packages

00:20:12,320 --> 00:20:17,840
and copper also provides build

00:20:14,720 --> 00:20:21,039
environments for other

00:20:17,840 --> 00:20:23,919
rpm based distributions

00:20:21,039 --> 00:20:26,240
and then we use bode to gate updates so

00:20:23,919 --> 00:20:28,159
you know generally during uh

00:20:26,240 --> 00:20:29,600
once the activation period has been

00:20:28,159 --> 00:20:31,520
reached um

00:20:29,600 --> 00:20:32,880
you submit an update and it sits in the

00:20:31,520 --> 00:20:34,880
testing repo

00:20:32,880 --> 00:20:36,880
for a week or until it gets you know

00:20:34,880 --> 00:20:40,240
three car karma votes

00:20:36,880 --> 00:20:42,240
um package maintainers have the ability

00:20:40,240 --> 00:20:45,039
to adjust that but that's just basically

00:20:42,240 --> 00:20:46,559
sort of a way to try and prevent um

00:20:45,039 --> 00:20:47,120
things that looked good initially but

00:20:46,559 --> 00:20:49,520
actually

00:20:47,120 --> 00:20:51,440
break further from hitting the main

00:20:49,520 --> 00:20:54,720
repos

00:20:51,440 --> 00:20:56,320
and so even with the the distract

00:20:54,720 --> 00:20:58,559
distraction i got in a couple minutes

00:20:56,320 --> 00:21:01,039
under time i'll leave the reminders up

00:20:58,559 --> 00:21:03,840
and i'll take my last few minutes for

00:21:01,039 --> 00:21:03,840
questions

00:21:08,240 --> 00:21:13,919
kevin asks open qa is used isn't it

00:21:11,600 --> 00:21:16,640
yeah so we do use openqa for our

00:21:13,919 --> 00:21:18,400
automated testing a lot of our testing

00:21:16,640 --> 00:21:20,640
is also done by hand

00:21:18,400 --> 00:21:22,799
um but yeah we have a lot of stuff that

00:21:20,640 --> 00:21:25,360
runs in open qa

00:21:22,799 --> 00:21:26,880
because there's no way we could do all

00:21:25,360 --> 00:21:28,840
that stuff manually and there's a lot of

00:21:26,880 --> 00:21:31,840
stuff that you just don't want to do

00:21:28,840 --> 00:21:31,840
manually

00:21:34,159 --> 00:21:39,760
so hello thanks for the talk i have a

00:21:37,120 --> 00:21:42,080
question regarding you said that

00:21:39,760 --> 00:21:44,559
you close the box when you are reaching

00:21:42,080 --> 00:21:47,360
the end of life

00:21:44,559 --> 00:21:49,679
does it mean that the bug needs to be

00:21:47,360 --> 00:21:53,840
reported again for

00:21:49,679 --> 00:21:57,039
a more recent version

00:21:53,840 --> 00:21:59,280
yes that's a great question so

00:21:57,039 --> 00:22:01,360
a few weeks before i do the end of life

00:21:59,280 --> 00:22:01,919
close there's an automated update that

00:22:01,360 --> 00:22:04,320
happens

00:22:01,919 --> 00:22:05,280
it says hey if this is still an issue

00:22:04,320 --> 00:22:08,559
change it to

00:22:05,280 --> 00:22:11,919
a supported version or it will get

00:22:08,559 --> 00:22:13,360
closed people can reopen the bug if it

00:22:11,919 --> 00:22:14,720
gets closed and they're like no this is

00:22:13,360 --> 00:22:17,760
actually still a problem you can

00:22:14,720 --> 00:22:21,200
reopen it against a supported version

00:22:17,760 --> 00:22:22,480
so it's not it's really not a go away we

00:22:21,200 --> 00:22:23,919
never want to think about this again

00:22:22,480 --> 00:22:26,559
it's more of uh

00:22:23,919 --> 00:22:27,840
you know we're just gonna close it and

00:22:26,559 --> 00:22:29,200
if it's still an issue somebody will

00:22:27,840 --> 00:22:30,240
reopen it and hopefully we'll get to it

00:22:29,200 --> 00:22:32,159
this time

00:22:30,240 --> 00:22:33,600
um there are there are some bugs that

00:22:32,159 --> 00:22:34,559
have gone through that process several

00:22:33,600 --> 00:22:38,000
times

00:22:34,559 --> 00:22:40,000
um so yeah

00:22:38,000 --> 00:22:41,600
uh in the chat axel asks does fedora

00:22:40,000 --> 00:22:42,720
project have a legal structure like

00:22:41,600 --> 00:22:45,039
foundation

00:22:42,720 --> 00:22:46,159
uh our legal structure is red hat

00:22:45,039 --> 00:22:49,280
incorporated

00:22:46,159 --> 00:22:51,840
um so red hat owns

00:22:49,280 --> 00:22:53,360
the trademarks and things like that and

00:22:51,840 --> 00:22:57,120
the fedora council

00:22:53,360 --> 00:22:59,200
has the authority to make decisions

00:22:57,120 --> 00:23:00,159
about usage of the trademark and stuff

00:22:59,200 --> 00:23:03,280
but

00:23:00,159 --> 00:23:06,640
we do not exist as an independent entity

00:23:03,280 --> 00:23:07,919
from red hat in legal terms

00:23:06,640 --> 00:23:10,080
this has its advantages and

00:23:07,919 --> 00:23:12,720
disadvantages and i'm not sure

00:23:10,080 --> 00:23:13,280
honestly which one i think is the better

00:23:12,720 --> 00:23:17,679
approach

00:23:13,280 --> 00:23:17,679
but this is the way we have it

00:23:20,480 --> 00:23:24,240
okay so the question is uh from the chat

00:23:23,360 --> 00:23:25,600
for the government's

00:23:24,240 --> 00:23:27,840
governance part i'm wondering for the

00:23:25,600 --> 00:23:29,280
people in positions seated by red hat

00:23:27,840 --> 00:23:31,679
are they employed full-time for that

00:23:29,280 --> 00:23:35,520
part-time do they get paid at all

00:23:31,679 --> 00:23:38,080
um so for the three i highlighted on

00:23:35,520 --> 00:23:39,679
the fedora council the project leader

00:23:38,080 --> 00:23:41,840
the f cake and myself

00:23:39,679 --> 00:23:45,279
those are basically full-time funded

00:23:41,840 --> 00:23:46,720
positions those are our jobs

00:23:45,279 --> 00:23:48,960
for other people who happen to be red

00:23:46,720 --> 00:23:52,240
hat employees

00:23:48,960 --> 00:23:55,600
who serve on mindshare or fesco

00:23:52,240 --> 00:23:56,720
or the council uh those are uh volunteer

00:23:55,600 --> 00:23:59,200
positions even though they're

00:23:56,720 --> 00:24:05,840
at red hat because they're not doing it

00:23:59,200 --> 00:24:05,840
as part of their job

00:24:06,880 --> 00:24:10,640
uh brett had a question i know that

00:24:08,799 --> 00:24:13,039
fedora is usually good at keeping the

00:24:10,640 --> 00:24:15,760
ecosystem free does fedora also de-blob

00:24:13,039 --> 00:24:19,039
the linux kernel like debian does

00:24:15,760 --> 00:24:20,080
i think we ship some blobs but we try

00:24:19,039 --> 00:24:22,880
and keep

00:24:20,080 --> 00:24:24,320
to a minimum neil do you actually yes

00:24:22,880 --> 00:24:26,799
yes

00:24:24,320 --> 00:24:27,840
yeah so the linux kernel shipped in

00:24:26,799 --> 00:24:30,320
fedora

00:24:27,840 --> 00:24:32,480
is pretty close to mainline linux um

00:24:30,320 --> 00:24:34,159
blobs are typically um

00:24:32,480 --> 00:24:36,159
pulled out and separated into their own

00:24:34,159 --> 00:24:37,360
files um either shipped from the kernel

00:24:36,159 --> 00:24:38,000
source package if they were part of

00:24:37,360 --> 00:24:40,559
kernel

00:24:38,000 --> 00:24:42,799
or they're part of kernel firmware um in

00:24:40,559 --> 00:24:45,120
general they're run time loaded

00:24:42,799 --> 00:24:46,720
so if they don't exist things shouldn't

00:24:45,120 --> 00:24:48,880
fail but

00:24:46,720 --> 00:24:50,240
uh we do ship them it is our major

00:24:48,880 --> 00:24:51,760
exception to our

00:24:50,240 --> 00:24:53,440
policy of everything needs to be free

00:24:51,760 --> 00:24:55,520
software because we the the

00:24:53,440 --> 00:24:57,039
as the saying goes we all want free

00:24:55,520 --> 00:24:59,200
software we want to maximize freedom but

00:24:57,039 --> 00:25:01,440
we also want our computers to work

00:24:59,200 --> 00:25:04,240
and so that's basically our i think our

00:25:01,440 --> 00:25:07,760
sole exception really

00:25:04,240 --> 00:25:09,520
thanks neil uh kevin said um

00:25:07,760 --> 00:25:11,120
for bugzilla and bug tracking i wonder

00:25:09,520 --> 00:25:12,880
if there's any way distros could pool

00:25:11,120 --> 00:25:15,039
resources to fix the same upstream

00:25:12,880 --> 00:25:16,880
issues

00:25:15,039 --> 00:25:18,480
there probably are i think it's a little

00:25:16,880 --> 00:25:22,159
hard

00:25:18,480 --> 00:25:24,400
to coordinate that on a broad scale

00:25:22,159 --> 00:25:25,760
we generally in fedora follow an

00:25:24,400 --> 00:25:28,799
upstream first model

00:25:25,760 --> 00:25:30,240
so we'd really like bugs to be fixed uh

00:25:28,799 --> 00:25:32,320
in the upstream

00:25:30,240 --> 00:25:33,919
um that said you know sometimes our

00:25:32,320 --> 00:25:37,120
package maintainers will

00:25:33,919 --> 00:25:37,760
you know bring a patch in and back port

00:25:37,120 --> 00:25:39,440
it

00:25:37,760 --> 00:25:41,760
just to get the fix out to fedora users

00:25:39,440 --> 00:25:44,159
sooner or if upstream doesn't want to

00:25:41,760 --> 00:25:47,200
accept it for some reason

00:25:44,159 --> 00:25:48,240
um and so red hat bugzilla does have

00:25:47,200 --> 00:25:50,080
fields where you can

00:25:48,240 --> 00:25:52,080
tie you know you can link to the

00:25:50,080 --> 00:25:53,919
upstream issue tracker

00:25:52,080 --> 00:25:55,120
um but there's not necessarily a good

00:25:53,919 --> 00:25:58,000
way to

00:25:55,120 --> 00:26:00,159
to coordinate that in a federated way

00:25:58,000 --> 00:26:03,679
but that's one thing i would love to see

00:26:00,159 --> 00:26:05,840
is a more structured let's say

00:26:03,679 --> 00:26:07,360
coordination between distros

00:26:05,840 --> 00:26:09,520
on doing stuff like that because i think

00:26:07,360 --> 00:26:12,400
a lot of times what ends up happening

00:26:09,520 --> 00:26:14,080
is we end up duplicating work and there

00:26:12,400 --> 00:26:25,840
is just not enough people around

00:26:14,080 --> 00:26:25,840
to be able to afford that

00:26:26,240 --> 00:26:29,840
uh it seems like stasic has a question

00:26:28,480 --> 00:26:32,640
here i don't know if you saw it

00:26:29,840 --> 00:26:34,240
um he's asking for the governance part

00:26:32,640 --> 00:26:35,600
i'm wondering it for the people in

00:26:34,240 --> 00:26:37,120
position seated by redhead

00:26:35,600 --> 00:26:39,039
are they employed full time for that

00:26:37,120 --> 00:26:42,640
part-time or do they get paid at all

00:26:39,039 --> 00:26:45,039
or is it uh just all slave labor

00:26:42,640 --> 00:26:47,120
i i answered that already oh sorry i

00:26:45,039 --> 00:26:50,000
missed it yeah

00:26:47,120 --> 00:26:53,840
pay attention neil oh jesus there's so

00:26:50,000 --> 00:26:53,840
much to pay attention to

00:26:54,880 --> 00:26:59,520
that's that's okay i'm used to neil

00:26:56,720 --> 00:27:04,240
ignoring me he's a very smart man

00:26:59,520 --> 00:27:04,240
oh man that i never ignore you

00:27:05,120 --> 00:27:09,600
wow i feel hurt and attacked

00:27:09,760 --> 00:27:13,600
i i think that's basically my time i

00:27:12,000 --> 00:27:15,679
have seconds remaining so

00:27:13,600 --> 00:27:16,799
i appreciate everyone for your attention

00:27:15,679 --> 00:27:19,760
and your questions

00:27:16,799 --> 00:27:21,360
and i will stop my screen sharing now

00:27:19,760 --> 00:27:23,520
and go back into listening mode thank

00:27:21,360 --> 00:27:23,520
you

00:27:28,000 --> 00:27:35,840

YouTube URL: https://www.youtube.com/watch?v=wogwykobbr0


