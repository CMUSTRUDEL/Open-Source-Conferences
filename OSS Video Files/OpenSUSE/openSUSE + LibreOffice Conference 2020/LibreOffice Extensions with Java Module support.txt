Title: LibreOffice Extensions with Java Module support
Publication date: 2020-10-16
Playlist: openSUSE + LibreOffice Conference 2020
Description: 
	Subscribe ►http://bit.ly/1G2KKZl

Offical Website ►https://www.opensuse.org
Follow us on Twitter ► https://twitter.com/openSUSE
Like us on Facebook ► https://www.facebook.com/en.openSUSE
Captions: 
	00:00:01,920 --> 00:00:06,879
hi and welcome to my talk

00:00:03,919 --> 00:00:07,919
libreoffice extensions with java module

00:00:06,879 --> 00:00:10,559
support

00:00:07,919 --> 00:00:12,160
i'm samuel mirbrod and i'm working for

00:00:10,559 --> 00:00:15,759
cib software

00:00:12,160 --> 00:00:16,560
as a libreoffice developer today we will

00:00:15,759 --> 00:00:19,279
see how the

00:00:16,560 --> 00:00:19,840
new java module system is now available

00:00:19,279 --> 00:00:22,880
to

00:00:19,840 --> 00:00:24,560
java extension authors and

00:00:22,880 --> 00:00:27,119
at the end of the talk we also have a

00:00:24,560 --> 00:00:29,359
small demo where we'll see how to change

00:00:27,119 --> 00:00:32,800
an existing extension to

00:00:29,359 --> 00:00:35,840
make use of the new java module system

00:00:32,800 --> 00:00:39,200
so let's get started

00:00:35,840 --> 00:00:41,760
what's new in java it's relatively new

00:00:39,200 --> 00:00:42,399
java 9 introduced a new module system

00:00:41,760 --> 00:00:44,800
named

00:00:42,399 --> 00:00:46,800
jigsaw and it solved a number of

00:00:44,800 --> 00:00:50,320
problems with dependencies that

00:00:46,800 --> 00:00:52,800
existed in larger java applications

00:00:50,320 --> 00:00:54,079
i won't get into detail here but if

00:00:52,800 --> 00:00:56,559
you're interested

00:00:54,079 --> 00:00:58,480
you'll find a lot of online resources

00:00:56,559 --> 00:01:01,440
about this topic

00:00:58,480 --> 00:01:04,000
just a quick introduction you can add a

00:01:01,440 --> 00:01:07,280
module info.java to your

00:01:04,000 --> 00:01:09,840
java project and there you can declare

00:01:07,280 --> 00:01:12,960
a module with a module name in this case

00:01:09,840 --> 00:01:15,840
it's org.codifix.foo

00:01:12,960 --> 00:01:18,840
it can require other modules in this

00:01:15,840 --> 00:01:22,560
case it requires a module named

00:01:18,840 --> 00:01:25,920
work.codevx.bar and it can export

00:01:22,560 --> 00:01:31,280
a series of packages in this case it

00:01:25,920 --> 00:01:33,280
exports the package org.codefx.food.api

00:01:31,280 --> 00:01:34,720
yeah this is the basics of the java

00:01:33,280 --> 00:01:37,600
module system

00:01:34,720 --> 00:01:38,720
it's yeah it replaces the use of class

00:01:37,600 --> 00:01:40,960
path

00:01:38,720 --> 00:01:43,520
which could get very long and complex

00:01:40,960 --> 00:01:47,040
for larger applications

00:01:43,520 --> 00:01:49,680
yeah and each module can then just um

00:01:47,040 --> 00:01:50,399
export a set of packages and every

00:01:49,680 --> 00:01:52,240
package

00:01:50,399 --> 00:01:55,840
which is not exported is also not

00:01:52,240 --> 00:01:55,840
visible to the outside

00:01:57,360 --> 00:02:01,680
yeah in libreoffice the bug report we

00:02:00,719 --> 00:02:06,159
got was in

00:02:01,680 --> 00:02:09,360
2018 and yeah it was reported that

00:02:06,159 --> 00:02:11,760
when you use the libreoffice

00:02:09,360 --> 00:02:14,080
jar files from an from a java

00:02:11,760 --> 00:02:14,800
application which uses the java module

00:02:14,080 --> 00:02:18,480
system

00:02:14,800 --> 00:02:20,720
it just did not work because

00:02:18,480 --> 00:02:21,760
yeah everything is loaded as a module

00:02:20,720 --> 00:02:25,599
even if

00:02:21,760 --> 00:02:28,640
the jar files are still the old classic

00:02:25,599 --> 00:02:30,959
jar files without any module information

00:02:28,640 --> 00:02:32,400
they will get loaded as the unnamed

00:02:30,959 --> 00:02:34,560
module and then they

00:02:32,400 --> 00:02:35,519
need to fulfill the requirements of the

00:02:34,560 --> 00:02:39,040
java

00:02:35,519 --> 00:02:42,239
module system which is one part of it

00:02:39,040 --> 00:02:45,360
is that each package can only appear

00:02:42,239 --> 00:02:48,800
in one module so for example

00:02:45,360 --> 00:02:51,840
constant star security is a package

00:02:48,800 --> 00:02:55,519
we export and it was in both uniwire

00:02:51,840 --> 00:02:57,519
and our id l jar files and

00:02:55,519 --> 00:03:00,400
this did not work anymore with a new

00:02:57,519 --> 00:03:00,400
module system

00:03:00,480 --> 00:03:04,959
yeah and this is called split packages

00:03:03,760 --> 00:03:08,080
what we did earlier

00:03:04,959 --> 00:03:10,959
was no problem until now

00:03:08,080 --> 00:03:12,319
so what did we do in libreoffice the

00:03:10,959 --> 00:03:15,440
first step

00:03:12,319 --> 00:03:15,440
was merge

00:03:16,000 --> 00:03:23,280
yeah those uh jar files which

00:03:19,599 --> 00:03:25,760
had uh shared packages

00:03:23,280 --> 00:03:28,120
or split packages and in this case it

00:03:25,760 --> 00:03:31,280
was j-u-r-t.jar

00:03:28,120 --> 00:03:35,200
unil.jar those two were merged into

00:03:31,280 --> 00:03:38,319
rid l.jar so one can ask what

00:03:35,200 --> 00:03:41,360
is with backwards compatibility

00:03:38,319 --> 00:03:44,560
and the answer is

00:03:41,360 --> 00:03:46,560
backwards compatibility is given

00:03:44,560 --> 00:03:47,599
because the old jar files are still

00:03:46,560 --> 00:03:50,480
there they are

00:03:47,599 --> 00:03:51,519
empty they don't contain any class files

00:03:50,480 --> 00:03:55,200
the only thing they

00:03:51,519 --> 00:03:58,319
do contain is a manifest with a class

00:03:55,200 --> 00:04:02,319
class path set to the new

00:03:58,319 --> 00:04:06,000
jar file or the other java ridl

00:04:02,319 --> 00:04:09,439
so if you load the jurt

00:04:06,000 --> 00:04:12,480
and the uno il jar in an old project it

00:04:09,439 --> 00:04:14,080
will still work because it has

00:04:12,480 --> 00:04:16,640
all the class files you need in the

00:04:14,080 --> 00:04:16,640
class path

00:04:18,959 --> 00:04:24,080
yeah the second problem we faced or

00:04:22,240 --> 00:04:27,360
second

00:04:24,080 --> 00:04:29,600
challenge was okay we are now changing

00:04:27,360 --> 00:04:32,560
the packages and we thought

00:04:29,600 --> 00:04:33,440
um this naming is a bit confusing for

00:04:32,560 --> 00:04:38,400
some users

00:04:33,440 --> 00:04:41,600
r i d l j u h j u r t u l

00:04:38,400 --> 00:04:42,160
um yeah almost nobody can tell what

00:04:41,600 --> 00:04:44,960
those

00:04:42,160 --> 00:04:47,120
names mean even probably mostly the

00:04:44,960 --> 00:04:50,639
libreoffice developers can't

00:04:47,120 --> 00:04:54,840
tell what exactly those names mean

00:04:50,639 --> 00:04:58,720
and by merging already two packages into

00:04:54,840 --> 00:05:02,080
ridl the um yeah those names

00:04:58,720 --> 00:05:05,280
even did not make any more sense

00:05:02,080 --> 00:05:09,039
so we thought how what

00:05:05,280 --> 00:05:09,520
if we merge all public jar files into

00:05:09,039 --> 00:05:12,720
one

00:05:09,520 --> 00:05:15,360
and give it a distinct name so that

00:05:12,720 --> 00:05:16,720
external developers can recognize it

00:05:15,360 --> 00:05:19,600
easily

00:05:16,720 --> 00:05:20,880
yeah and so we got the libreoffice.jar

00:05:19,600 --> 00:05:22,800
that's a new jar file

00:05:20,880 --> 00:05:24,560
it contains all the classes that were

00:05:22,800 --> 00:05:27,840
previously split between

00:05:24,560 --> 00:05:29,520
four other jar files with the names like

00:05:27,840 --> 00:05:32,639
rrdl juh

00:05:29,520 --> 00:05:35,039
jurt and uhl so

00:05:32,639 --> 00:05:37,199
still the same as i said before

00:05:35,039 --> 00:05:39,440
backwards compatibility is given you can

00:05:37,199 --> 00:05:41,919
still load the old jar files and

00:05:39,440 --> 00:05:42,880
have the libreoffice which are on the on

00:05:41,919 --> 00:05:45,199
the class

00:05:42,880 --> 00:05:45,199
path

00:05:47,520 --> 00:05:53,360
yeah the next thing to do was add the

00:05:51,039 --> 00:05:56,080
module info

00:05:53,360 --> 00:05:57,919
yeah up to now you could use the

00:05:56,080 --> 00:06:01,199
libreoffice jar files

00:05:57,919 --> 00:06:03,039
in a java application which uses the

00:06:01,199 --> 00:06:05,360
java module system

00:06:03,039 --> 00:06:06,960
but it was still named the unnamed

00:06:05,360 --> 00:06:09,360
module

00:06:06,960 --> 00:06:10,800
and so we wanted to give it a proper

00:06:09,360 --> 00:06:13,880
name

00:06:10,800 --> 00:06:16,479
thus we created the module info for

00:06:13,880 --> 00:06:20,319
libreoffice.jar looks like this it has

00:06:16,479 --> 00:06:23,280
the module name arc.libreoffice.you know

00:06:20,319 --> 00:06:24,880
and it requires another module the uno

00:06:23,280 --> 00:06:29,280
loader

00:06:24,880 --> 00:06:32,400
that is yeah the class loader for

00:06:29,280 --> 00:06:33,520
for the uno classes and it exports a set

00:06:32,400 --> 00:06:36,160
of packages

00:06:33,520 --> 00:06:39,840
you probably know these names if you've

00:06:36,160 --> 00:06:39,840
ever worked with you know api

00:06:40,720 --> 00:06:45,440
yeah so this is the module info we added

00:06:43,280 --> 00:06:47,600
to the libreoffice jar

00:06:45,440 --> 00:06:51,520
and all those packages listed there you

00:06:47,600 --> 00:06:51,520
can then use in the client code

00:06:51,759 --> 00:06:55,919
all of this has been available since the

00:06:54,440 --> 00:06:59,199
release of

00:06:55,919 --> 00:07:01,520
libreoffice 7.0 which has been released

00:06:59,199 --> 00:07:04,479
earlier this year

00:07:01,520 --> 00:07:06,560
and the question is now how do i use it

00:07:04,479 --> 00:07:09,199
and i'm going to demonstrate it by

00:07:06,560 --> 00:07:11,599
using the libreoffice starter extension

00:07:09,199 --> 00:07:17,759
and then modify it to use the java

00:07:11,599 --> 00:07:19,520
module system

00:07:17,759 --> 00:07:23,120
first we need to download the

00:07:19,520 --> 00:07:23,120
libreoffice starter extension

00:07:25,759 --> 00:07:28,880
you find it on github

00:07:29,440 --> 00:07:35,280
and just go and download the zip file no

00:07:32,560 --> 00:07:40,319
need to clone the repository

00:07:35,280 --> 00:07:43,120
there it is then we open up eclipse

00:07:40,319 --> 00:07:43,759
and here you need to make sure that you

00:07:43,120 --> 00:07:47,360
have the

00:07:43,759 --> 00:07:49,520
lo eclipse plugin installed that's a

00:07:47,360 --> 00:07:52,080
eclipse plugin for libreoffice which

00:07:49,520 --> 00:07:54,319
helps developing

00:07:52,080 --> 00:07:56,479
extensions and components in java or

00:07:54,319 --> 00:08:01,199
even python

00:07:56,479 --> 00:08:01,199
yeah makes it quite a bit easier

00:08:02,800 --> 00:08:08,720
so this is the plugin make sure you have

00:08:06,080 --> 00:08:12,400
that installed if you want to

00:08:08,720 --> 00:08:12,879
use this starter project okay now i will

00:08:12,400 --> 00:08:16,479
import

00:08:12,879 --> 00:08:17,199
this file i just downloaded you can just

00:08:16,479 --> 00:08:20,160
select

00:08:17,199 --> 00:08:20,160
a zip file here

00:08:22,400 --> 00:08:30,800
and it finds the project

00:08:27,520 --> 00:08:30,800
okay there we go

00:08:30,960 --> 00:08:36,399
now we need to tell this

00:08:34,560 --> 00:08:38,479
where our libra office installation is

00:08:36,399 --> 00:08:40,399
we go to project properties

00:08:38,479 --> 00:08:42,240
then we have libreoffice properties this

00:08:40,399 --> 00:08:45,440
comes from the yellow eclipse

00:08:42,240 --> 00:08:48,480
plugin configure libreoffice

00:08:45,440 --> 00:08:51,839
we need to find the path

00:08:48,480 --> 00:08:55,839
i have it in opt just

00:08:51,839 --> 00:08:55,839
the installation folder

00:08:56,959 --> 00:09:01,920
and you also need the sdk it's usually a

00:09:00,080 --> 00:09:04,000
separate download

00:09:01,920 --> 00:09:04,959
so make sure you have it downloaded and

00:09:04,000 --> 00:09:08,080
installed

00:09:04,959 --> 00:09:11,360
and it is usually in the same folder

00:09:08,080 --> 00:09:13,279
the sdk subfolder but it can be anywhere

00:09:11,360 --> 00:09:16,399
so it needs to spec needs to be

00:09:13,279 --> 00:09:19,839
specified separately

00:09:16,399 --> 00:09:21,600
yeah we have we set this okay the errors

00:09:19,839 --> 00:09:25,680
are gone

00:09:21,600 --> 00:09:25,680
now we want to deploy it to the

00:09:26,480 --> 00:09:31,200
to our libreoffice installation we go to

00:09:29,360 --> 00:09:33,279
run configurations

00:09:31,200 --> 00:09:35,120
and then we have a type libreoffice

00:09:33,279 --> 00:09:36,959
application this also comes from the

00:09:35,120 --> 00:09:40,000
alloy eclipse plugin

00:09:36,959 --> 00:09:40,959
we choose the starter project set the

00:09:40,000 --> 00:09:43,200
name

00:09:40,959 --> 00:09:44,000
and i take this option use clean user

00:09:43,200 --> 00:09:47,519
profile

00:09:44,000 --> 00:09:50,399
that means when running it from eclipse

00:09:47,519 --> 00:09:52,640
a separate user profile is used and it

00:09:50,399 --> 00:09:55,519
does not interfere with your existing

00:09:52,640 --> 00:09:55,519
user profile

00:10:02,720 --> 00:10:07,600
sometimes we need to run it twice i

00:10:04,959 --> 00:10:07,600
don't know why

00:10:10,880 --> 00:10:17,680
okay there we go so this is

00:10:14,240 --> 00:10:19,760
libreoffice seven zero and

00:10:17,680 --> 00:10:23,120
if you go to tools extension manager

00:10:19,760 --> 00:10:26,399
you'll find the starter project here

00:10:23,120 --> 00:10:26,399
then we go to writer

00:10:27,360 --> 00:10:34,640
yes i did know then you find a new menu

00:10:31,120 --> 00:10:37,680
entry starter project

00:10:34,640 --> 00:10:40,560
action one and if you see this dialog

00:10:37,680 --> 00:10:41,519
it yeah the extension works probably if

00:10:40,560 --> 00:10:44,880
you don't

00:10:41,519 --> 00:10:47,600
if it doesn't work go to

00:10:44,880 --> 00:10:49,200
options and make sure you have a proper

00:10:47,600 --> 00:10:52,240
java

00:10:49,200 --> 00:10:55,920
runtime environment configured here

00:10:52,240 --> 00:10:56,800
it needs to be um yeah at least version

00:10:55,920 --> 00:11:02,240
nine

00:10:56,800 --> 00:11:02,240
for this module system to be supported

00:11:03,120 --> 00:11:06,880
okay we close this go back to eclipse

00:11:06,000 --> 00:11:10,160
and now

00:11:06,880 --> 00:11:14,160
we want to um convert this into

00:11:10,160 --> 00:11:17,760
uh yeah to use the java module system

00:11:14,160 --> 00:11:21,040
currently if you check the build path

00:11:17,760 --> 00:11:23,600
you see it has a class path

00:11:21,040 --> 00:11:24,880
set and it has the libreoffice libraries

00:11:23,600 --> 00:11:27,440
on the class path

00:11:24,880 --> 00:11:28,880
now we want them to go into the module

00:11:27,440 --> 00:11:31,680
path

00:11:28,880 --> 00:11:33,360
and for that eclipse helps us you can

00:11:31,680 --> 00:11:34,399
right click on the project go to

00:11:33,360 --> 00:11:38,720
configure

00:11:34,399 --> 00:11:42,000
and then create module info.java

00:11:38,720 --> 00:11:46,800
so we give it some proper name usually

00:11:42,000 --> 00:11:46,800
you use reverse domain notation

00:11:51,120 --> 00:11:57,920
there it is so it already detected the

00:11:55,120 --> 00:12:00,639
packages which we have in our project

00:11:57,920 --> 00:12:02,959
and it already detected that we use

00:12:00,639 --> 00:12:05,480
another module

00:12:02,959 --> 00:12:07,279
namely the module from the

00:12:05,480 --> 00:12:09,200
libreoffice.jar

00:12:07,279 --> 00:12:12,160
so we don't want to export those

00:12:09,200 --> 00:12:15,360
packages there is no use for other

00:12:12,160 --> 00:12:18,160
extensions or other projects to use them

00:12:15,360 --> 00:12:19,360
they are just internal we just have this

00:12:18,160 --> 00:12:22,399
requires

00:12:19,360 --> 00:12:26,160
inside safe

00:12:22,399 --> 00:12:28,880
and then we check again the

00:12:26,160 --> 00:12:28,880
build path

00:12:31,279 --> 00:12:35,920
and there we see the class path is now

00:12:33,360 --> 00:12:38,639
empty instead the module path you find

00:12:35,920 --> 00:12:41,200
the libreoffice libraries which

00:12:38,639 --> 00:12:43,680
also contains the libreoffice jar we

00:12:41,200 --> 00:12:46,720
could now remove all the other ones but

00:12:43,680 --> 00:12:48,160
for now i will leave them just there it

00:12:46,720 --> 00:12:51,320
doesn't hurt

00:12:48,160 --> 00:12:52,880
and now if we check for example this

00:12:51,320 --> 00:12:54,800
libreoffice.jar

00:12:52,880 --> 00:12:58,079
you can see all the packages which are

00:12:54,800 --> 00:13:00,399
exported the class files

00:12:58,079 --> 00:13:01,680
and you can see this has a module

00:13:00,399 --> 00:13:05,120
info.class

00:13:01,680 --> 00:13:08,320
and if it's decompiled you see the

00:13:05,120 --> 00:13:12,160
module name the requirements and also

00:13:08,320 --> 00:13:12,160
the packages which are exported

00:13:14,000 --> 00:13:17,600
okay yeah that's all to convert an

00:13:16,560 --> 00:13:22,240
existing

00:13:17,600 --> 00:13:26,399
class path based project to a module

00:13:22,240 --> 00:13:28,399
path based one or a module based one

00:13:26,399 --> 00:13:31,279
and now we want to run it and make sure

00:13:28,399 --> 00:13:31,279
it still works

00:13:31,600 --> 00:13:35,839
we go again to the run config and run

00:13:33,760 --> 00:13:35,839
this

00:13:36,560 --> 00:13:40,959
yeah there is our libreoffice we go to

00:13:39,440 --> 00:13:45,120
writer

00:13:40,959 --> 00:13:48,560
and check this still works it does work

00:13:45,120 --> 00:13:51,600
and now let's check the

00:13:48,560 --> 00:13:55,600
generated extension we open this

00:13:51,600 --> 00:13:55,600
project in the system explorer

00:13:57,279 --> 00:14:00,480
there we have the folder dist which

00:13:59,760 --> 00:14:03,839
contains

00:14:00,480 --> 00:14:04,959
the starter project.oxt openoffice

00:14:03,839 --> 00:14:08,480
extension if i

00:14:04,959 --> 00:14:10,000
remember correctly and there we have the

00:14:08,480 --> 00:14:12,560
jar file

00:14:10,000 --> 00:14:14,720
and if we open that one we see the

00:14:12,560 --> 00:14:17,839
module info.class

00:14:14,720 --> 00:14:21,440
which is a compiled version of our

00:14:17,839 --> 00:14:23,440
module info we added here

00:14:21,440 --> 00:14:25,279
yeah that's all it took you need to do

00:14:23,440 --> 00:14:27,920
to convert your

00:14:25,279 --> 00:14:27,920
existing

00:14:28,399 --> 00:14:34,720
libreoffice extension project to

00:14:31,680 --> 00:14:35,760
work with java modules just beware that

00:14:34,720 --> 00:14:38,959
when you do this

00:14:35,760 --> 00:14:39,519
you need java 9 at least and you also

00:14:38,959 --> 00:14:45,839
need

00:14:39,519 --> 00:14:49,360
libreoffice 7.0 at least

00:14:45,839 --> 00:14:53,279
yeah thanks a lot for listening

00:14:49,360 --> 00:14:55,600
um this was somewhere mirbrud from

00:14:53,279 --> 00:14:56,839
cib check out our website and our

00:14:55,600 --> 00:14:59,839
products on

00:14:56,839 --> 00:14:59,839

YouTube URL: https://www.youtube.com/watch?v=5IIJYz_UeHg


