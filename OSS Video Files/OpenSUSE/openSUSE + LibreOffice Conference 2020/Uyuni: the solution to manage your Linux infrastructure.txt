Title: Uyuni: the solution to manage your Linux infrastructure
Publication date: 2020-11-05
Playlist: openSUSE + LibreOffice Conference 2020
Description: 
	Configuration management, content management, patch management, compliance, building images & containers, virtualization... you name it! 



Uyuni is a software-defined infrastructure and configuration management solution. It bootstraps physical servers, creates VMs for virtualization and cloud, deploys and updates packages -even with content lifecycle management features-, builds container images, and tracks what runs on your Kubernetes clusters. All using Salt under the hood!

Uyuni provides you a high-class frontend solution to interact with Salt, manage your states, formulas with forms, and much more using a web UI. Or you could use our APIs.

All the major Linux distributions are supported: SUSE Linux Enterprise Server, Red Hat Enterprise Linux, Debian, Ubuntu, openSUSE, CentOS, Oracle Linux and we have reports of Fedora.

Uyuni is open source, backed by SUSE and actively developed.

This presentation will give you an overview about Uyuni: where we are, what's next and how the community could help (hint: some features are not -yet- supported on some Linux distributions). A demo of Uyuni with several different client operating systems can be included if time allows.



Subscribe ►http://bit.ly/1G2KKZl

Offical Website ►https://www.opensuse.org
Follow us on Twitter ► https://twitter.com/openSUSE
Like us on Facebook ► https://www.facebook.com/en.openSUSE
Captions: 
	00:00:01,760 --> 00:00:05,759
it's

00:00:03,040 --> 00:00:06,080
noon here so it's time to get started

00:00:05,759 --> 00:00:10,639
with

00:00:06,080 --> 00:00:16,480
my talk about uni let me

00:00:10,639 --> 00:00:18,800
share my screen

00:00:16,480 --> 00:00:18,800
okay

00:00:20,240 --> 00:00:23,600
you shall now see it

00:00:25,920 --> 00:00:34,800
can everybody see my screen

00:00:31,039 --> 00:00:37,680
i will assume yeah okay then

00:00:34,800 --> 00:00:39,120
so welcome to the second day of the open

00:00:37,680 --> 00:00:40,239
source conference and libreoffice

00:00:39,120 --> 00:00:43,680
conference

00:00:40,239 --> 00:00:44,559
and let's get to it my name is power

00:00:43,680 --> 00:00:46,399
thea

00:00:44,559 --> 00:00:49,200
i am the product owner and tango project

00:00:46,399 --> 00:00:51,120
manager of susan major work with souza

00:00:49,200 --> 00:00:52,239
i used to be a debian developer a kd

00:00:51,120 --> 00:00:55,760
developer and

00:00:52,239 --> 00:00:58,480
i have a long story in open source since

00:00:55,760 --> 00:01:00,879
probably more than 15 years ago i'm

00:00:58,480 --> 00:01:04,159
available usually can be found in

00:01:00,879 --> 00:01:07,840
in freenode or guitar and of course by

00:01:04,159 --> 00:01:10,560
email i'm going to talk about the uni

00:01:07,840 --> 00:01:12,159
because being the the proctor of sushi

00:01:10,560 --> 00:01:15,600
manager makes me

00:01:12,159 --> 00:01:18,560
in a way the benevolent dictator of

00:01:15,600 --> 00:01:20,560
uni since we unit is the upstream for

00:01:18,560 --> 00:01:22,159
susan manager

00:01:20,560 --> 00:01:23,840
what is your uni it's a systems

00:01:22,159 --> 00:01:25,920
management solution

00:01:23,840 --> 00:01:27,439
okay when you have tens hundreds of

00:01:25,920 --> 00:01:30,479
thousands of servers

00:01:27,439 --> 00:01:33,680
you cannot just hack your own scripts

00:01:30,479 --> 00:01:35,200
or login to each of the servers but you

00:01:33,680 --> 00:01:37,040
want

00:01:35,200 --> 00:01:39,520
to have some kind of automation

00:01:37,040 --> 00:01:41,119
something and even dashboards something

00:01:39,520 --> 00:01:42,960
that makes you

00:01:41,119 --> 00:01:44,720
feel that and it gives you proper

00:01:42,960 --> 00:01:47,280
information about the status of

00:01:44,720 --> 00:01:47,280
everything

00:01:48,479 --> 00:01:52,640
we can manage all kind of workloads for

00:01:50,880 --> 00:01:55,520
a single place so it's

00:01:52,640 --> 00:01:56,640
single systems different linux operating

00:01:55,520 --> 00:02:00,079
systems

00:01:56,640 --> 00:02:02,320
uh even clusters or or other products

00:02:00,079 --> 00:02:03,360
like kubernetes clusters can also be

00:02:02,320 --> 00:02:06,840
managed

00:02:03,360 --> 00:02:08,959
uh the degree from suse manager from uni

00:02:06,840 --> 00:02:11,520
sorry

00:02:08,959 --> 00:02:13,040
we have a reporting and auditing

00:02:11,520 --> 00:02:16,000
capabilities

00:02:13,040 --> 00:02:17,440
both from their web ui our web ui and

00:02:16,000 --> 00:02:20,239
command line tools

00:02:17,440 --> 00:02:21,840
and of course there's an api we can do

00:02:20,239 --> 00:02:23,760
software and hardware inventories which

00:02:21,840 --> 00:02:24,879
is very useful for compliance or even

00:02:23,760 --> 00:02:29,120
just to know what

00:02:24,879 --> 00:02:31,200
what is going on in your organization

00:02:29,120 --> 00:02:32,480
we uni can do configuration management

00:02:31,200 --> 00:02:33,760
it's something that you will do for

00:02:32,480 --> 00:02:36,400
instance if you use

00:02:33,760 --> 00:02:37,920
an antivirus you want to deploy the the

00:02:36,400 --> 00:02:41,360
bureau signatures

00:02:37,920 --> 00:02:44,400
to all your servers then you can use

00:02:41,360 --> 00:02:47,280
a configuration file it's typically

00:02:44,400 --> 00:02:48,160
a json file xml file with definitions

00:02:47,280 --> 00:02:50,080
that you can deploy

00:02:48,160 --> 00:02:52,879
to all your servers using our

00:02:50,080 --> 00:02:56,400
configuration management capabilities

00:02:52,879 --> 00:02:56,879
it is a uni also has some kvm and zen

00:02:56,400 --> 00:03:00,959
based

00:02:56,879 --> 00:03:04,400
utilization features it's not nearly

00:03:00,959 --> 00:03:05,840
as powerful as vmware or anything like

00:03:04,400 --> 00:03:08,080
that or nutanix

00:03:05,840 --> 00:03:09,360
but if you only need some limited

00:03:08,080 --> 00:03:12,000
utilization like

00:03:09,360 --> 00:03:14,480
for tens of returns machines this can be

00:03:12,000 --> 00:03:16,400
an option for you

00:03:14,480 --> 00:03:18,879
this is the the architecture of uni it's

00:03:16,400 --> 00:03:22,640
a typical client server application

00:03:18,879 --> 00:03:24,720
where we have introduced this uh element

00:03:22,640 --> 00:03:26,319
in the middle in case you need to

00:03:24,720 --> 00:03:28,879
offload your server so

00:03:26,319 --> 00:03:29,760
if you have tens or even hundreds of

00:03:28,879 --> 00:03:31,840
clients

00:03:29,760 --> 00:03:33,920
you can attach them directly to the

00:03:31,840 --> 00:03:37,040
server if you are in the thousands

00:03:33,920 --> 00:03:37,519
or tens of thousands of clients then you

00:03:37,040 --> 00:03:40,560
already

00:03:37,519 --> 00:03:42,400
if you are on locations on sites

00:03:40,560 --> 00:03:44,000
where you have bad connectivity from the

00:03:42,400 --> 00:03:46,720
client to the server

00:03:44,000 --> 00:03:48,400
this proxy element can help you offload

00:03:46,720 --> 00:03:51,040
because it caches that it tags

00:03:48,400 --> 00:03:51,599
it acts as a case at the cache it it

00:03:51,040 --> 00:03:54,959
doesn't

00:03:51,599 --> 00:03:57,680
really do a lot of managing by itself

00:03:54,959 --> 00:03:59,680
the intelligence in the unit leaves in

00:03:57,680 --> 00:04:01,519
the server

00:03:59,680 --> 00:04:03,920
but the proxy is very useful in many

00:04:01,519 --> 00:04:03,920
cases

00:04:04,480 --> 00:04:08,720
the origin of uni is a project by red

00:04:08,000 --> 00:04:11,599
hat called

00:04:08,720 --> 00:04:12,720
spacewalk is what they used originally

00:04:11,599 --> 00:04:15,840
to create their

00:04:12,720 --> 00:04:18,880
red hat network their

00:04:15,840 --> 00:04:20,959
customer portal essentially then they

00:04:18,880 --> 00:04:23,680
released it as open source and

00:04:20,959 --> 00:04:25,360
made it available for customers to

00:04:23,680 --> 00:04:26,800
install on-premise or for the open

00:04:25,360 --> 00:04:27,360
source committee to install on-premise

00:04:26,800 --> 00:04:30,800
then

00:04:27,360 --> 00:04:33,199
choose a toolkit 10 years ago and from

00:04:30,800 --> 00:04:36,320
there we started adding features

00:04:33,199 --> 00:04:40,720
to to more focused on

00:04:36,320 --> 00:04:43,360
on souza systems and also modernizing it

00:04:40,720 --> 00:04:46,720
spacewalk is a very old project it

00:04:43,360 --> 00:04:49,360
started around 2008

00:04:46,720 --> 00:04:51,280
probably a bit earlier if we count for

00:04:49,360 --> 00:04:54,800
the version previews to

00:04:51,280 --> 00:04:56,560
to what was released but let's say it

00:04:54,800 --> 00:04:58,880
has 12 years

00:04:56,560 --> 00:05:00,160
it was the base for red hat satellite 5.

00:04:58,880 --> 00:05:02,080
now red hat satellite

00:05:00,160 --> 00:05:03,600
is at version 6 which is based on

00:05:02,080 --> 00:05:06,800
something completely different

00:05:03,600 --> 00:05:08,639
called catello uh we didn't believe in

00:05:06,800 --> 00:05:10,080
that path in students so we continued

00:05:08,639 --> 00:05:11,520
the space walk

00:05:10,080 --> 00:05:13,199
in the form of the union we'll explain

00:05:11,520 --> 00:05:16,240
why and

00:05:13,199 --> 00:05:18,720
susan manager version 3.2 and

00:05:16,240 --> 00:05:20,479
earlier was also based on the original

00:05:18,720 --> 00:05:23,360
spacewalk project

00:05:20,479 --> 00:05:24,560
spacewalk is already dead died almost

00:05:23,360 --> 00:05:27,759
six months ago

00:05:24,560 --> 00:05:31,600
and red hat uh officially regarded

00:05:27,759 --> 00:05:36,000
uni as the continuation of spacewalk

00:05:31,600 --> 00:05:38,560
now why did we fork uh spacewalk

00:05:36,000 --> 00:05:40,320
because red hat didn't really believe in

00:05:38,560 --> 00:05:42,160
in spacewalk anymore at some point they

00:05:40,320 --> 00:05:44,479
started contributing

00:05:42,160 --> 00:05:45,199
code or started a new project called

00:05:44,479 --> 00:05:47,280
catello

00:05:45,199 --> 00:05:50,320
you have you may have heard of it for

00:05:47,280 --> 00:05:53,759
mom pub it sounds several components

00:05:50,320 --> 00:05:56,400
dependent it's a different model

00:05:53,759 --> 00:05:57,280
but the stress work work for us but that

00:05:56,400 --> 00:06:00,000
did not hand

00:05:57,280 --> 00:06:01,680
us the project so we forked it in the

00:06:00,000 --> 00:06:05,680
form of uni and we just

00:06:01,680 --> 00:06:07,440
made official then some of the features

00:06:05,680 --> 00:06:09,680
so one of the most important features

00:06:07,440 --> 00:06:12,800
that uni has versus

00:06:09,680 --> 00:06:15,840
spacewalk is the two stacks

00:06:12,800 --> 00:06:18,080
uh there's the original spacewalk stack

00:06:15,840 --> 00:06:20,479
what we call the traditional client and

00:06:18,080 --> 00:06:21,840
there's also the salt stack which is all

00:06:20,479 --> 00:06:24,720
the open source

00:06:21,840 --> 00:06:25,440
project and then you can see the the

00:06:24,720 --> 00:06:29,120
game with

00:06:25,440 --> 00:06:32,319
the words play the video so it's salt

00:06:29,120 --> 00:06:35,680
the new uni is the largest salt flat

00:06:32,319 --> 00:06:37,199
yeah that joke um

00:06:35,680 --> 00:06:39,360
although we support the traditional

00:06:37,199 --> 00:06:42,160
client still

00:06:39,360 --> 00:06:43,039
because it allows uh customers or users

00:06:42,160 --> 00:06:45,919
to migrate

00:06:43,039 --> 00:06:47,280
from his facebook or satellite f5 to uni

00:06:45,919 --> 00:06:49,520
and user manager

00:06:47,280 --> 00:06:51,440
without converting the salt and that's a

00:06:49,520 --> 00:06:54,800
transition path that many of them

00:06:51,440 --> 00:06:56,560
use all the new development goes into

00:06:54,800 --> 00:06:57,520
salt clients into what they call them

00:06:56,560 --> 00:07:00,000
the minions or

00:06:57,520 --> 00:07:00,800
so it's okay also the the salted states

00:07:00,000 --> 00:07:02,000
clients

00:07:00,800 --> 00:07:04,560
most of the functionality is also

00:07:02,000 --> 00:07:07,840
supported agentless

00:07:04,560 --> 00:07:09,599
so while i say two stacks it's

00:07:07,840 --> 00:07:11,360
actually three ways of managing your

00:07:09,599 --> 00:07:12,479
clients so you have a traditional client

00:07:11,360 --> 00:07:15,120
which is

00:07:12,479 --> 00:07:16,960
which requires an agent there's also a

00:07:15,120 --> 00:07:17,440
salt medium which also is an agent that

00:07:16,960 --> 00:07:20,400
does

00:07:17,440 --> 00:07:21,199
salt as h which is kind of like ansible

00:07:20,400 --> 00:07:23,280
agentless

00:07:21,199 --> 00:07:24,400
not all the features are available with

00:07:23,280 --> 00:07:26,319
solid states

00:07:24,400 --> 00:07:27,919
because of some constraints of the

00:07:26,319 --> 00:07:30,560
features that require

00:07:27,919 --> 00:07:31,360
continuous reporting to the server but

00:07:30,560 --> 00:07:35,039
many of them

00:07:31,360 --> 00:07:38,319
are so if you are looking for agentless

00:07:35,039 --> 00:07:40,319
this is also a solution for you

00:07:38,319 --> 00:07:42,560
uh another of the features that we added

00:07:40,319 --> 00:07:45,039
in uni is containers and kubernetes

00:07:42,560 --> 00:07:48,080
integration you can create and scan

00:07:45,039 --> 00:07:51,919
and security audit

00:07:48,080 --> 00:07:53,759
containers from uni

00:07:51,919 --> 00:07:55,759
we also extended capabilities

00:07:53,759 --> 00:07:58,879
scalability a lot

00:07:55,759 --> 00:07:59,520
so in the past spacewalk was regarded as

00:07:58,879 --> 00:08:02,400
a solution

00:07:59,520 --> 00:08:04,160
for thousands of clients so they say

00:08:02,400 --> 00:08:05,759
single digit thousands

00:08:04,160 --> 00:08:08,160
no more than two or three thousand

00:08:05,759 --> 00:08:11,759
clients like for instance catello

00:08:08,160 --> 00:08:15,199
it doesn't scale beyond a few low digit

00:08:11,759 --> 00:08:18,000
thousand clients now with spacewalk with

00:08:15,199 --> 00:08:20,720
a single server we have done up to

00:08:18,000 --> 00:08:21,520
almost or let's say more than 30 000

00:08:20,720 --> 00:08:24,160
clients it's

00:08:21,520 --> 00:08:25,440
actually beyond that but 25 000 clients

00:08:24,160 --> 00:08:28,639
we know it can be done

00:08:25,440 --> 00:08:33,199
because we have some cases of that

00:08:28,639 --> 00:08:33,199
which simplifies maintenance and

00:08:33,200 --> 00:08:39,760
management we have also spent a lot of

00:08:36,320 --> 00:08:41,680
effort in usability because

00:08:39,760 --> 00:08:43,120
some things are not so easy when you

00:08:41,680 --> 00:08:43,839
when you have a ton of features like we

00:08:43,120 --> 00:08:47,600
have

00:08:43,839 --> 00:08:51,440
and uh many cases i'm always surprised

00:08:47,600 --> 00:08:55,120
at how how differently

00:08:51,440 --> 00:08:58,800
different users can uh

00:08:55,120 --> 00:09:00,560
use a uni it's surprising so some people

00:08:58,800 --> 00:09:03,360
have their own situations because

00:09:00,560 --> 00:09:06,399
firewalls network policies

00:09:03,360 --> 00:09:09,519
or company policies and they find

00:09:06,399 --> 00:09:10,560
their own way and then they come to us

00:09:09,519 --> 00:09:12,720
and say

00:09:10,560 --> 00:09:14,399
really interesting and then we enhance

00:09:12,720 --> 00:09:17,440
the uni to make that

00:09:14,399 --> 00:09:20,080
easier for them and for everybody

00:09:17,440 --> 00:09:22,720
we have modernized the web ui which is

00:09:20,080 --> 00:09:24,399
based on jsp and an old framework called

00:09:22,720 --> 00:09:27,519
struts

00:09:24,399 --> 00:09:29,600
with and we have added a react web ui so

00:09:27,519 --> 00:09:31,279
the new pages are written in react

00:09:29,600 --> 00:09:32,880
and some of the older ones are also

00:09:31,279 --> 00:09:35,920
being replaced

00:09:32,880 --> 00:09:37,440
slowly we have modernized the code base

00:09:35,920 --> 00:09:42,480
and it now uses

00:09:37,440 --> 00:09:42,480
exclusively python 3 and java 11.

00:09:43,200 --> 00:09:46,320
and this is the upstream for suse

00:09:45,120 --> 00:09:49,600
manager of

00:09:46,320 --> 00:09:51,360
since version 4.0 actually a suicide

00:09:49,600 --> 00:09:52,480
photograph was released only last year

00:09:51,360 --> 00:09:55,519
so a year ago but

00:09:52,480 --> 00:09:56,880
in june 2018 after the results of the

00:09:55,519 --> 00:10:00,080
3-2

00:09:56,880 --> 00:10:02,839
we no longer used spacewalk

00:10:00,080 --> 00:10:05,120
as the reference for sushi manager but

00:10:02,839 --> 00:10:09,680
uni

00:10:05,120 --> 00:10:09,680
so what can you do with uni

00:10:10,720 --> 00:10:14,480
you can of course do system deployments

00:10:12,720 --> 00:10:17,040
you can do patch management

00:10:14,480 --> 00:10:21,519
you can do service pack migration by

00:10:17,040 --> 00:10:23,600
migrating from sls 15 sp1 to sp2

00:10:21,519 --> 00:10:25,920
you can do configuration management you

00:10:23,600 --> 00:10:29,040
can do bare metal provisioning

00:10:25,920 --> 00:10:31,120
or of course mutual machine provisioning

00:10:29,040 --> 00:10:32,560
you can schedule asking a change to his

00:10:31,120 --> 00:10:34,240
performance system that means

00:10:32,560 --> 00:10:35,920
you have several actions that you want

00:10:34,240 --> 00:10:39,120
to be done

00:10:35,920 --> 00:10:40,320
to perform one after the other including

00:10:39,120 --> 00:10:44,320
reboots

00:10:40,320 --> 00:10:47,760
then you can do that you can use it

00:10:44,320 --> 00:10:50,000
for compliance the cv audit and openscap

00:10:47,760 --> 00:10:51,519
capabilities you can get your you can

00:10:50,000 --> 00:10:54,000
see your dashboard

00:10:51,519 --> 00:10:54,959
with all these information and fixable

00:10:54,000 --> 00:10:57,120
numericalities

00:10:54,959 --> 00:10:59,200
in just one click and that's of course

00:10:57,120 --> 00:11:01,839
an api that

00:10:59,200 --> 00:11:02,720
typically the the users with large

00:11:01,839 --> 00:11:06,079
deployments

00:11:02,720 --> 00:11:10,079
in the thousands prefer to use the api

00:11:06,079 --> 00:11:13,120
and git rather than using the web ui

00:11:10,079 --> 00:11:14,959
because it can become sometimes more

00:11:13,120 --> 00:11:16,560
confusing when you have that many

00:11:14,959 --> 00:11:19,279
systems

00:11:16,560 --> 00:11:19,680
we have added some features because all

00:11:19,279 --> 00:11:21,760
of this

00:11:19,680 --> 00:11:23,839
is available in spacewalk or most of

00:11:21,760 --> 00:11:25,200
this but then we have added in uni

00:11:23,839 --> 00:11:27,440
more things like the transparent

00:11:25,200 --> 00:11:28,560
integration with salt this is something

00:11:27,440 --> 00:11:31,600
that makes

00:11:28,560 --> 00:11:32,560
uni a lot more powerful than a spacewalk

00:11:31,600 --> 00:11:34,640
was because

00:11:32,560 --> 00:11:35,839
we sold you you get a lot of facilities

00:11:34,640 --> 00:11:39,200
for automation

00:11:35,839 --> 00:11:41,519
that you didn't have with the spacewalk

00:11:39,200 --> 00:11:43,760
you can use it to manage on-premise

00:11:41,519 --> 00:11:44,800
cloud hybrid cloud and multi-cloud

00:11:43,760 --> 00:11:46,480
system so

00:11:44,800 --> 00:11:47,839
we have these cases and there are even

00:11:46,480 --> 00:11:49,920
videos you know

00:11:47,839 --> 00:11:50,880
that you can find on youtube some of

00:11:49,920 --> 00:11:52,720
them mesusa

00:11:50,880 --> 00:11:54,480
uh for sushma but the answer hey

00:11:52,720 --> 00:11:55,440
anything that you see for susa manager

00:11:54,480 --> 00:11:58,560
works also with

00:11:55,440 --> 00:12:02,240
uni where people are using

00:11:58,560 --> 00:12:05,519
a unit to manage centos and

00:12:02,240 --> 00:12:06,240
rail and less and ubuntu and oracle

00:12:05,519 --> 00:12:08,079
linux

00:12:06,240 --> 00:12:09,839
some of them are running on-premise

00:12:08,079 --> 00:12:11,360
others are running on azure other than

00:12:09,839 --> 00:12:13,440
running lbs

00:12:11,360 --> 00:12:14,480
and it's just working from the same

00:12:13,440 --> 00:12:16,240
console

00:12:14,480 --> 00:12:17,600
and with the same reporting and

00:12:16,240 --> 00:12:19,200
everything so

00:12:17,600 --> 00:12:20,800
one single dashboard one single

00:12:19,200 --> 00:12:24,320
management place

00:12:20,800 --> 00:12:25,839
all your systems we have this cool

00:12:24,320 --> 00:12:28,240
feature that we introduced last year

00:12:25,839 --> 00:12:30,880
which is contentless cycle management

00:12:28,240 --> 00:12:31,920
which is very aligned with the devops

00:12:30,880 --> 00:12:34,480
way of working

00:12:31,920 --> 00:12:35,519
where you define stages development test

00:12:34,480 --> 00:12:37,200
production

00:12:35,519 --> 00:12:38,800
for your software channels and you are

00:12:37,200 --> 00:12:41,920
promoting

00:12:38,800 --> 00:12:44,959
the the packages uh testing

00:12:41,920 --> 00:12:47,040
and then deploying uh gradually

00:12:44,959 --> 00:12:48,160
to your systems you can create groups of

00:12:47,040 --> 00:12:51,600
systems so

00:12:48,160 --> 00:12:53,680
a test see a test group deploy there

00:12:51,600 --> 00:12:55,440
like or a canary group then when you are

00:12:53,680 --> 00:12:58,560
even going to production

00:12:55,440 --> 00:13:00,399
and instead of having surprises then

00:12:58,560 --> 00:13:01,920
this just works and it's a very visual

00:13:00,399 --> 00:13:05,839
way in the past

00:13:01,920 --> 00:13:06,880
you could do this in a not so easy way

00:13:05,839 --> 00:13:10,000
from command line

00:13:06,880 --> 00:13:12,079
applying scripts and yeah but this is

00:13:10,000 --> 00:13:14,000
so much better than when you once you

00:13:12,079 --> 00:13:18,639
try this you you never want to

00:13:14,000 --> 00:13:20,880
go back to anything regarding scripts

00:13:18,639 --> 00:13:22,000
we have recurring actions you can

00:13:20,880 --> 00:13:26,720
execute

00:13:22,000 --> 00:13:28,240
um several times you can build os images

00:13:26,720 --> 00:13:32,399
and container images

00:13:28,240 --> 00:13:35,200
from the packages that the uni server

00:13:32,399 --> 00:13:37,360
has a mirrored for several operating

00:13:35,200 --> 00:13:40,000
systems

00:13:37,360 --> 00:13:41,600
as i said also compliance also even for

00:13:40,000 --> 00:13:43,680
subscription matching

00:13:41,600 --> 00:13:44,880
in the case of student systems and

00:13:43,680 --> 00:13:47,120
products

00:13:44,880 --> 00:13:48,800
so that you you know that you are you

00:13:47,120 --> 00:13:51,120
have enough subscriptions and no more

00:13:48,800 --> 00:13:52,959
subscription than you need

00:13:51,120 --> 00:13:54,560
it will even optimize the number of

00:13:52,959 --> 00:13:57,760
subscriptions you need

00:13:54,560 --> 00:14:00,880
it can also do some virtualization and

00:13:57,760 --> 00:14:02,959
it can do monitoring we have include the

00:14:00,880 --> 00:14:05,279
prometheus and grafana stack

00:14:02,959 --> 00:14:06,959
including federation and reverse proxy

00:14:05,279 --> 00:14:09,279
which are some very cool

00:14:06,959 --> 00:14:10,240
features because they allow you to

00:14:09,279 --> 00:14:14,079
aggregate

00:14:10,240 --> 00:14:16,720
from different sites from different even

00:14:14,079 --> 00:14:19,040
products because you could use the uni

00:14:16,720 --> 00:14:22,320
server and the uni dashboards

00:14:19,040 --> 00:14:25,360
as the uh let's say the authoritative

00:14:22,320 --> 00:14:26,240
site the assetted dashboard even if

00:14:25,360 --> 00:14:29,440
you're using

00:14:26,240 --> 00:14:32,880
additional stuff like kubernetes cluster

00:14:29,440 --> 00:14:35,040
or some other monitoring on the cloud

00:14:32,880 --> 00:14:36,320
that is not even managed value unit you

00:14:35,040 --> 00:14:39,360
can bring that

00:14:36,320 --> 00:14:41,120
to the uni dashboards i have this cool

00:14:39,360 --> 00:14:42,399
feature called the formulas with forms

00:14:41,120 --> 00:14:45,519
which is essentially

00:14:42,399 --> 00:14:48,880
salt formulas with a visual

00:14:45,519 --> 00:14:51,920
aid it's just a yaml

00:14:48,880 --> 00:14:52,959
template with a few placeholders that

00:14:51,920 --> 00:14:55,120
you can feel

00:14:52,959 --> 00:14:58,079
and this doesn't even require

00:14:55,120 --> 00:14:58,800
programming skills to create them but

00:14:58,079 --> 00:15:02,399
i'll

00:14:58,800 --> 00:15:06,240
makes using sold stuff a lot easier

00:15:02,399 --> 00:15:06,240
and a lot more convenient

00:15:06,560 --> 00:15:13,040
so where are we with uni

00:15:09,839 --> 00:15:13,760
we have done a lot since we open sourced

00:15:13,040 --> 00:15:16,079
it

00:15:13,760 --> 00:15:17,680
two years ago so the reporter is

00:15:16,079 --> 00:15:19,920
probably the development

00:15:17,680 --> 00:15:21,120
happens in the public everything susan

00:15:19,920 --> 00:15:24,720
does first happens

00:15:21,120 --> 00:15:28,320
in uni before susan so uni is always

00:15:24,720 --> 00:15:30,800
slightly ahead of student manager

00:15:28,320 --> 00:15:31,680
we are available uh there's mailing

00:15:30,800 --> 00:15:34,399
lists there's

00:15:31,680 --> 00:15:35,360
i well actually the drc channel is

00:15:34,399 --> 00:15:38,639
deprecated

00:15:35,360 --> 00:15:41,360
we are we now prefer guitar

00:15:38,639 --> 00:15:41,759
because it's easier for people to join

00:15:41,360 --> 00:15:44,959
this

00:15:41,759 --> 00:15:48,240
web uh irc let's say

00:15:44,959 --> 00:15:51,600
this web chat we have a ci

00:15:48,240 --> 00:15:52,000
with jenkins it's not completely public

00:15:51,600 --> 00:15:54,240
so

00:15:52,000 --> 00:15:55,279
you can see the output so you can see

00:15:54,240 --> 00:15:58,160
what happens

00:15:55,279 --> 00:15:59,040
but then if you need to go into details

00:15:58,160 --> 00:16:00,800
that part

00:15:59,040 --> 00:16:02,160
we have not managed to make it public

00:16:00,800 --> 00:16:05,680
because it runs on

00:16:02,160 --> 00:16:07,680
the servers internally

00:16:05,680 --> 00:16:10,079
the base operating system for uni these

00:16:07,680 --> 00:16:13,199
days since three months ago

00:16:10,079 --> 00:16:16,480
is opens using leap 15-2

00:16:13,199 --> 00:16:19,920
um that upgrade happened in in

00:16:16,480 --> 00:16:21,839
uni 2020 or so so we uh after we opened

00:16:19,920 --> 00:16:22,720
a new version of opensuse leap is

00:16:21,839 --> 00:16:26,480
released

00:16:22,720 --> 00:16:29,040
we always move to it for the server

00:16:26,480 --> 00:16:32,800
you can of course still manage obviously

00:16:29,040 --> 00:16:32,800
51 systems and 15.

00:16:32,959 --> 00:16:37,519
clients what are the client appreciation

00:16:34,959 --> 00:16:39,839
supported by uni a ton of them

00:16:37,519 --> 00:16:40,720
that's that's one of the differentiators

00:16:39,839 --> 00:16:43,600
of uni

00:16:40,720 --> 00:16:45,040
can we of course support any uh

00:16:43,600 --> 00:16:48,480
supported version of

00:16:45,040 --> 00:16:50,079
sli open souzi red hat the president

00:16:48,480 --> 00:16:52,160
linux sent away as well

00:16:50,079 --> 00:16:54,880
the myriad of clones that there are

00:16:52,160 --> 00:16:58,079
rails centos oracle linux

00:16:54,880 --> 00:16:59,360
expanded support there's reports of

00:16:58,079 --> 00:17:01,600
fedora

00:16:59,360 --> 00:17:02,720
being used although some features in

00:17:01,600 --> 00:17:05,360
fedora

00:17:02,720 --> 00:17:06,640
may break if you are not using our soul

00:17:05,360 --> 00:17:10,160
packages but the the

00:17:06,640 --> 00:17:13,280
package is provided by ipel so

00:17:10,160 --> 00:17:15,439
you need to to be aware of this in case

00:17:13,280 --> 00:17:17,199
you want to try fedora

00:17:15,439 --> 00:17:18,559
this was uh this is a community

00:17:17,199 --> 00:17:22,319
contribution it's not actually

00:17:18,559 --> 00:17:25,039
st yet part of uni and there's uh

00:17:22,319 --> 00:17:26,799
some limited support for amazon linux

00:17:25,039 --> 00:17:30,160
too

00:17:26,799 --> 00:17:34,400
we will probably enhance this

00:17:30,160 --> 00:17:34,400
in the not so distant future

00:17:36,000 --> 00:17:39,919
and there's of course support for

00:17:37,760 --> 00:17:40,960
non-rpm based operating systems like

00:17:39,919 --> 00:17:43,360
ubuntu

00:17:40,960 --> 00:17:46,080
debian and something very weird called

00:17:43,360 --> 00:17:50,559
astral linux which is russian

00:17:46,080 --> 00:17:50,559
version of of debian

00:17:52,320 --> 00:17:56,160
so what has happened so we are almost at

00:17:54,720 --> 00:17:59,200
the end of the year

00:17:56,160 --> 00:18:03,919
what did we do in 2020

00:17:59,200 --> 00:18:07,600
into ud we went from

00:18:03,919 --> 00:18:09,919
two releases a year to one a month

00:18:07,600 --> 00:18:11,440
essentially so the only ones we skipped

00:18:09,919 --> 00:18:13,200
were january

00:18:11,440 --> 00:18:14,960
or actually february because we released

00:18:13,200 --> 00:18:17,600
on the last day of january so

00:18:14,960 --> 00:18:19,360
it didn't really make a lot of sense to

00:18:17,600 --> 00:18:20,320
raise in february we didn't have that

00:18:19,360 --> 00:18:23,200
much

00:18:20,320 --> 00:18:25,600
to to release and then august because we

00:18:23,200 --> 00:18:27,360
needed summer vacation

00:18:25,600 --> 00:18:29,039
the next release will happen in around

00:18:27,360 --> 00:18:32,480
two weeks from now so at the end

00:18:29,039 --> 00:18:35,679
of of october we typically

00:18:32,480 --> 00:18:35,679
release at the end of the month

00:18:36,080 --> 00:18:39,919
there are beautiful machine and cloud

00:18:38,000 --> 00:18:43,840
images available for

00:18:39,919 --> 00:18:44,720
a lot of of uh kinds so aws as your

00:18:43,840 --> 00:18:48,000
google cloud

00:18:44,720 --> 00:18:50,240
kvms and hyper-v and openstack they are

00:18:48,000 --> 00:18:51,760
not yet available in the marketplaces

00:18:50,240 --> 00:18:54,240
we don't know when we will do this

00:18:51,760 --> 00:18:57,280
because it involves creating accounts on

00:18:54,240 --> 00:19:00,400
on the on the marketplaces on the clouds

00:18:57,280 --> 00:19:01,840
so this uh has some implications that we

00:19:00,400 --> 00:19:05,360
have not been able

00:19:01,840 --> 00:19:07,520
to to deal with so far

00:19:05,360 --> 00:19:10,720
we have a kita channel which is the the

00:19:07,520 --> 00:19:14,559
fastest way on the

00:19:10,720 --> 00:19:18,480
the best way to contact us for

00:19:14,559 --> 00:19:20,320
say immediate or real-time information

00:19:18,480 --> 00:19:22,000
there's also of course the mailing list

00:19:20,320 --> 00:19:23,600
and we have the unique community hours

00:19:22,000 --> 00:19:27,360
this is something that we started

00:19:23,600 --> 00:19:29,120
around may and uh every month at the

00:19:27,360 --> 00:19:32,400
last friday of the month

00:19:29,120 --> 00:19:32,799
4 p.m european time we present what's

00:19:32,400 --> 00:19:35,280
new

00:19:32,799 --> 00:19:37,200
in the the new release of uni the next

00:19:35,280 --> 00:19:40,640
uni committee hours are happening

00:19:37,200 --> 00:19:41,440
on the 30th of october 4 p.m european

00:19:40,640 --> 00:19:43,520
time

00:19:41,440 --> 00:19:45,120
look uh check the mailing list the unit

00:19:43,520 --> 00:19:47,840
mainly leaks and you will find the

00:19:45,120 --> 00:19:47,840
invitations

00:19:49,520 --> 00:19:53,600
and this year we also participated in

00:19:51,919 --> 00:19:54,320
google summer of course we had a very

00:19:53,600 --> 00:19:57,039
good

00:19:54,320 --> 00:19:57,600
result with a student who contributed to

00:19:57,039 --> 00:20:00,640
the

00:19:57,600 --> 00:20:02,000
documentation theme and the multiple

00:20:00,640 --> 00:20:07,120
language support oops

00:20:02,000 --> 00:20:08,720
i just disclosed something translations

00:20:07,120 --> 00:20:10,400
more features that we have added in this

00:20:08,720 --> 00:20:12,320
year the hub so i said that with a

00:20:10,400 --> 00:20:13,280
single server you can do more than 30

00:20:12,320 --> 00:20:15,360
000 clients

00:20:13,280 --> 00:20:17,039
but what if you want to go to hundreds

00:20:15,360 --> 00:20:20,960
of thousands of clients or even

00:20:17,039 --> 00:20:22,480
a million clients can you do that yes

00:20:20,960 --> 00:20:25,360
since this summer we have something

00:20:22,480 --> 00:20:28,320
called the the uni hub

00:20:25,360 --> 00:20:28,799
which allows you to orchestrate several

00:20:28,320 --> 00:20:32,080
uni

00:20:28,799 --> 00:20:35,039
servers this is not yet complete

00:20:32,080 --> 00:20:35,760
but the there's uh two parts of it

00:20:35,039 --> 00:20:39,200
there's

00:20:35,760 --> 00:20:42,559
or even you could say two and a bit more

00:20:39,200 --> 00:20:46,000
there's the the xml rpc api

00:20:42,559 --> 00:20:49,360
which allows you to uh manage

00:20:46,000 --> 00:20:51,919
lots of servers and loads of

00:20:49,360 --> 00:20:52,880
clients from the api which is typically

00:20:51,919 --> 00:20:55,679
as i said earlier

00:20:52,880 --> 00:20:56,799
it's the case that you are going to want

00:20:55,679 --> 00:21:00,159
because if you have

00:20:56,799 --> 00:21:02,640
200 000 clients

00:21:00,159 --> 00:21:03,360
that's not from the web ui well good

00:21:02,640 --> 00:21:06,080
luck with that

00:21:03,360 --> 00:21:07,760
it will be confusing you you probably

00:21:06,080 --> 00:21:09,760
want to use the api and that's why we

00:21:07,760 --> 00:21:12,559
implemented the api first

00:21:09,760 --> 00:21:14,000
and then we have also solved the states

00:21:12,559 --> 00:21:15,840
that allow you to keep

00:21:14,000 --> 00:21:17,280
all the users and groups and

00:21:15,840 --> 00:21:20,000
organizations

00:21:17,280 --> 00:21:22,640
uh in sync across the different servers

00:21:20,000 --> 00:21:25,919
all managed from the hub

00:21:22,640 --> 00:21:27,679
and we are implementing more so the next

00:21:25,919 --> 00:21:29,520
the other thing that we implemented was

00:21:27,679 --> 00:21:31,520
is something called activation keys

00:21:29,520 --> 00:21:34,240
which is essentially a token

00:21:31,520 --> 00:21:34,640
that allows you to bundle several let's

00:21:34,240 --> 00:21:37,919
say

00:21:34,640 --> 00:21:41,039
subscribes uh servers to the same

00:21:37,919 --> 00:21:42,400
channels to the same configuration files

00:21:41,039 --> 00:21:45,280
to the same

00:21:42,400 --> 00:21:47,360
things make it easier to keep different

00:21:45,280 --> 00:21:49,280
servers in sync

00:21:47,360 --> 00:21:51,120
we also added maintenance windows which

00:21:49,280 --> 00:21:54,400
is essentially a must

00:21:51,120 --> 00:21:57,600
if you are in any enterprise

00:21:54,400 --> 00:21:58,000
environment you cannot just two actions

00:21:57,600 --> 00:22:00,880
whenever

00:21:58,000 --> 00:22:02,480
you want and you you don't want to allow

00:22:00,880 --> 00:22:03,760
for accidents to happen so with

00:22:02,480 --> 00:22:07,679
maintenance windows

00:22:03,760 --> 00:22:11,039
when someone schedules uh i don't know

00:22:07,679 --> 00:22:15,039
an upgrade or patching servers

00:22:11,039 --> 00:22:17,919
from or even building images

00:22:15,039 --> 00:22:19,360
at a certain time certain point in time

00:22:17,919 --> 00:22:21,760
if that point in time

00:22:19,360 --> 00:22:24,159
is not within the the authorized

00:22:21,760 --> 00:22:26,320
maintenance windows by the organization

00:22:24,159 --> 00:22:27,440
then those directions would be rejected

00:22:26,320 --> 00:22:28,880
and you will be told hey

00:22:27,440 --> 00:22:31,760
you cannot do this outside of a

00:22:28,880 --> 00:22:31,760
maintenance window

00:22:33,039 --> 00:22:37,120
we have the recurring highest state

00:22:34,799 --> 00:22:39,679
which means the highest state

00:22:37,120 --> 00:22:41,360
for those of you unfamiliar with salt

00:22:39,679 --> 00:22:43,520
essentially the the

00:22:41,360 --> 00:22:45,600
whole state of the system all the

00:22:43,520 --> 00:22:46,480
packages and the configuration files and

00:22:45,600 --> 00:22:49,280
everything

00:22:46,480 --> 00:22:50,640
and the network configuration of your

00:22:49,280 --> 00:22:54,080
system

00:22:50,640 --> 00:22:56,720
so um a very interesting

00:22:54,080 --> 00:22:58,720
feature is when you want to make sure

00:22:56,720 --> 00:22:59,840
that your systems stay compliant so that

00:22:58,720 --> 00:23:02,240
no one

00:22:59,840 --> 00:23:03,679
either goes to to a server some someone

00:23:02,240 --> 00:23:06,960
may have access to a server

00:23:03,679 --> 00:23:10,400
individually and they want to install

00:23:06,960 --> 00:23:12,080
some software and then your that system

00:23:10,400 --> 00:23:13,919
is non-compliant

00:23:12,080 --> 00:23:16,000
with the recurring higher state you can

00:23:13,919 --> 00:23:19,520
make sure that your systems all

00:23:16,000 --> 00:23:22,559
stay in the in the compliant

00:23:19,520 --> 00:23:23,679
state so in what the your organization

00:23:22,559 --> 00:23:25,840
mandates

00:23:23,679 --> 00:23:27,120
and there's nothing outside of it and it

00:23:25,840 --> 00:23:29,440
if there's some

00:23:27,120 --> 00:23:30,320
so if there needs to be something that's

00:23:29,440 --> 00:23:33,679
different

00:23:30,320 --> 00:23:34,960
for one or more servers then you want to

00:23:33,679 --> 00:23:37,840
make that a different

00:23:34,960 --> 00:23:39,679
state and you want to be aware of that

00:23:37,840 --> 00:23:42,080
so this is very useful

00:23:39,679 --> 00:23:42,720
for compliance or for patch automation

00:23:42,080 --> 00:23:44,720
or for

00:23:42,720 --> 00:23:47,279
it has lots of different uses the

00:23:44,720 --> 00:23:49,440
recurring high state

00:23:47,279 --> 00:23:51,520
we also introduced a new installer

00:23:49,440 --> 00:23:55,200
framework if you have ever

00:23:51,520 --> 00:23:56,400
tried to install systems in an automated

00:23:55,200 --> 00:23:59,440
way without a

00:23:56,400 --> 00:24:03,200
ask or with kickstart you will know that

00:23:59,440 --> 00:24:05,520
it's not exactly easy to write these

00:24:03,200 --> 00:24:07,840
profiles these authorization profiles

00:24:05,520 --> 00:24:09,760
yomi is sold based

00:24:07,840 --> 00:24:11,440
so you just need to write a few yaml

00:24:09,760 --> 00:24:14,559
files it's very simple

00:24:11,440 --> 00:24:15,679
and in the uni we have the formulas that

00:24:14,559 --> 00:24:18,240
provide the ui

00:24:15,679 --> 00:24:20,240
for this so you just need to you have

00:24:18,240 --> 00:24:22,080
this wizard where you can configure

00:24:20,240 --> 00:24:23,840
how you want to partition your disk what

00:24:22,080 --> 00:24:26,960
kind of software you want to install

00:24:23,840 --> 00:24:29,200
uh yeah what systems you want

00:24:26,960 --> 00:24:30,240
how are you going to boot those systems

00:24:29,200 --> 00:24:32,320
and yummy

00:24:30,240 --> 00:24:33,279
and uni will take care of everything it

00:24:32,320 --> 00:24:37,279
will

00:24:33,279 --> 00:24:40,799
run cobbler behind the scenes and

00:24:37,279 --> 00:24:40,799
network with your computers

00:24:41,200 --> 00:24:46,000
we also introduce storage pools for the

00:24:43,919 --> 00:24:47,279
utilization features so now we have some

00:24:46,000 --> 00:24:50,320
machines not only

00:24:47,279 --> 00:24:50,640
with file based storage but also with

00:24:50,320 --> 00:24:53,919
these

00:24:50,640 --> 00:24:57,360
storage pools and yeah ice cases have

00:24:53,919 --> 00:24:58,080
all of these possibilities there's also

00:24:57,360 --> 00:25:01,919
ef

00:24:58,080 --> 00:25:03,279
efi http boot so not only pixyboot

00:25:01,919 --> 00:25:05,679
this is useful for instance where you

00:25:03,279 --> 00:25:07,600
have a wireless boot a wire machine is

00:25:05,679 --> 00:25:10,720
connected by a wireless

00:25:07,600 --> 00:25:12,400
there's also by the way a usb boot is

00:25:10,720 --> 00:25:15,279
also possible

00:25:12,400 --> 00:25:16,960
the single sign-on from the web ui this

00:25:15,279 --> 00:25:17,679
is useful you have to post an active

00:25:16,960 --> 00:25:19,679
directory

00:25:17,679 --> 00:25:21,600
or at your active directory and you want

00:25:19,679 --> 00:25:23,120
to connect yours

00:25:21,600 --> 00:25:25,360
sorry i keep saying choose a match

00:25:23,120 --> 00:25:29,039
because i do lots of presentations

00:25:25,360 --> 00:25:34,000
um your uni uh web ui

00:25:29,039 --> 00:25:34,000
to the to your azure active directory

00:25:34,400 --> 00:25:38,000
and we introduce new formulas we have

00:25:36,799 --> 00:25:41,279
now like

00:25:38,000 --> 00:25:43,520
probably around 20 25 formulas

00:25:41,279 --> 00:25:45,600
to configure an open vpn server to give

00:25:43,520 --> 00:25:48,720
you the cpu mitigations

00:25:45,600 --> 00:25:51,840
if you are scared of these

00:25:48,720 --> 00:25:54,559
intel's cpu problems

00:25:51,840 --> 00:25:56,400
spectre and everything we can deploy

00:25:54,559 --> 00:25:59,679
promises and grafana

00:25:56,400 --> 00:26:02,000
and even uh

00:25:59,679 --> 00:26:03,440
yomi is also formulas there's a ton of

00:26:02,000 --> 00:26:03,760
different formulas i will talk about

00:26:03,440 --> 00:26:06,000
that

00:26:03,760 --> 00:26:07,679
more because we are going to choose more

00:26:06,000 --> 00:26:10,799
formulas in the future

00:26:07,679 --> 00:26:12,720
and in case you are using rail systems

00:26:10,799 --> 00:26:14,320
on the cloud purely in cloud you don't

00:26:12,720 --> 00:26:17,760
have a red hat

00:26:14,320 --> 00:26:19,279
cdn account then you can also manage

00:26:17,760 --> 00:26:22,400
those systems

00:26:19,279 --> 00:26:22,799
uh using a custom header that you can

00:26:22,400 --> 00:26:24,720
add

00:26:22,799 --> 00:26:27,679
to our reposing which is the tool that

00:26:24,720 --> 00:26:27,679
mirrors the packages

00:26:28,159 --> 00:26:32,159
we also introduced monitoring this the

00:26:30,240 --> 00:26:34,240
prometheus service discovery

00:26:32,159 --> 00:26:36,640
is something that we have introduced in

00:26:34,240 --> 00:26:39,360
in promising you're looking forward to

00:26:36,640 --> 00:26:41,200
submitting this upstream that now that

00:26:39,360 --> 00:26:43,840
they have lifted

00:26:41,200 --> 00:26:43,840
the uh

00:26:45,120 --> 00:26:49,360
yeah there was a small period where they

00:26:47,840 --> 00:26:52,400
were not accepting

00:26:49,360 --> 00:26:52,960
any more service discovery features now

00:26:52,400 --> 00:26:54,799
that's

00:26:52,960 --> 00:26:56,240
a load we are going to submit it

00:26:54,799 --> 00:26:58,799
upstream so that

00:26:56,240 --> 00:26:59,440
when you have different all your managed

00:26:58,799 --> 00:27:01,520
systems

00:26:59,440 --> 00:27:03,279
we can auto discover them and deploy

00:27:01,520 --> 00:27:05,440
monitoring and then

00:27:03,279 --> 00:27:07,200
uh show them in the in the dashboards

00:27:05,440 --> 00:27:09,760
into the graphana dashboards

00:27:07,200 --> 00:27:11,120
we also have federation which means when

00:27:09,760 --> 00:27:13,200
you have different sites

00:27:11,120 --> 00:27:15,440
each one of them with its own promising

00:27:13,200 --> 00:27:17,840
server because you have weak links with

00:27:15,440 --> 00:27:19,760
weak network links across the sites and

00:27:17,840 --> 00:27:22,159
you don't want to

00:27:19,760 --> 00:27:23,520
flood them with network traffic with

00:27:22,159 --> 00:27:25,600
monitoring traffic

00:27:23,520 --> 00:27:26,720
you aggregate the traffic in different

00:27:25,600 --> 00:27:29,679
progressive servers and

00:27:26,720 --> 00:27:31,279
federate all of that in a top prometheus

00:27:29,679 --> 00:27:33,520
server

00:27:31,279 --> 00:27:34,880
that can also be configured by a formula

00:27:33,520 --> 00:27:37,279
by the way you don't need to

00:27:34,880 --> 00:27:39,039
it's really easy just fill in some

00:27:37,279 --> 00:27:42,320
values essentially the

00:27:39,039 --> 00:27:44,559
urls of the servers and that's it

00:27:42,320 --> 00:27:45,840
we also have this reverse proxy for

00:27:44,559 --> 00:27:47,679
prometheus

00:27:45,840 --> 00:27:49,440
which simplifies the setup so typically

00:27:47,679 --> 00:27:52,559
the way probabilities works

00:27:49,440 --> 00:27:53,760
is you have exporters installed on the

00:27:52,559 --> 00:27:56,880
client machines

00:27:53,760 --> 00:27:58,159
and for it each of the exporters it

00:27:56,880 --> 00:28:02,480
requires its own

00:27:58,159 --> 00:28:03,840
tcp port now that if you if you are in

00:28:02,480 --> 00:28:07,279
an enterprise

00:28:03,840 --> 00:28:09,840
environment is not exactly uh

00:28:07,279 --> 00:28:11,120
easy to to deal with for security

00:28:09,840 --> 00:28:14,000
departments because they

00:28:11,120 --> 00:28:16,000
don't want you to install three uh

00:28:14,000 --> 00:28:16,960
promising exporters each of them opening

00:28:16,000 --> 00:28:19,039
a port so

00:28:16,960 --> 00:28:20,480
the this reverse proxy the prometheus

00:28:19,039 --> 00:28:23,600
export exporter

00:28:20,480 --> 00:28:26,240
as it's called will

00:28:23,600 --> 00:28:26,640
put all of those exporters in a single

00:28:26,240 --> 00:28:29,520
port

00:28:26,640 --> 00:28:32,080
so that uh for the security

00:28:29,520 --> 00:28:34,320
authorization it's much much easier

00:28:32,080 --> 00:28:35,919
and also for even if you want to secure

00:28:34,320 --> 00:28:38,080
your systems yourself

00:28:35,919 --> 00:28:40,960
it's also easier you just need to care

00:28:38,080 --> 00:28:40,960
about one port

00:28:42,480 --> 00:28:45,760
we offer uh grafana dashboards for uni

00:28:45,200 --> 00:28:49,279
itself

00:28:45,760 --> 00:28:52,000
and forecast which is suses kubernetes

00:28:49,279 --> 00:28:54,000
distribution

00:28:52,000 --> 00:28:56,000
there's also some integrated self

00:28:54,000 --> 00:28:58,399
monitoring there's a little dashboard

00:28:56,000 --> 00:29:00,960
in the web ui itself so not as a

00:28:58,399 --> 00:29:03,279
separated file dashboard

00:29:00,960 --> 00:29:04,480
and this is something that may look

00:29:03,279 --> 00:29:08,559
stupid but

00:29:04,480 --> 00:29:11,279
happened a lot the way your uni works is

00:29:08,559 --> 00:29:12,080
if you want to manage centos 7 and

00:29:11,279 --> 00:29:15,120
centos

00:29:12,080 --> 00:29:18,960
8 and sls

00:29:15,120 --> 00:29:21,600
15 sp1 and ubuntu you need to mirror

00:29:18,960 --> 00:29:24,240
all those products the whole thing that

00:29:21,600 --> 00:29:27,600
requires hundreds of gigabytes of disks

00:29:24,240 --> 00:29:29,919
sometimes people do not notice and

00:29:27,600 --> 00:29:31,760
they exhaust the hard disk especially

00:29:29,919 --> 00:29:33,679
the database hard disk

00:29:31,760 --> 00:29:36,159
the file system where the the database

00:29:33,679 --> 00:29:38,799
resides and then

00:29:36,159 --> 00:29:40,640
the the database becomes corrupted or

00:29:38,799 --> 00:29:43,919
the packages become

00:29:40,640 --> 00:29:47,600
incomplete and yeah

00:29:43,919 --> 00:29:48,880
all hell breaks loose now we implemented

00:29:47,600 --> 00:29:51,919
a warning

00:29:48,880 --> 00:29:54,799
and we stopped the

00:29:51,919 --> 00:29:56,399
uni and stopped mirroring packages and

00:29:54,799 --> 00:30:00,720
do not feel more disk

00:29:56,399 --> 00:30:02,159
anymore when there is

00:30:00,720 --> 00:30:04,000
less than five percent of the disk

00:30:02,159 --> 00:30:06,840
available to make sure that

00:30:04,000 --> 00:30:09,840
your system is not destroyed

00:30:06,840 --> 00:30:09,840
unintendedly

00:30:10,880 --> 00:30:14,640
we have added casp for

00:30:14,720 --> 00:30:20,480
as a client we can manage the whole

00:30:17,520 --> 00:30:20,480
cluster in fact

00:30:20,559 --> 00:30:24,080
debian was also added this game as a

00:30:22,320 --> 00:30:27,200
committee contribution and

00:30:24,080 --> 00:30:29,360
relayed was added also in 2020 including

00:30:27,200 --> 00:30:32,720
container cycle management

00:30:29,360 --> 00:30:34,240
which support the app streams which is

00:30:32,720 --> 00:30:36,000
something that if you have dealt with

00:30:34,240 --> 00:30:39,279
app streams you will know it's

00:30:36,000 --> 00:30:41,120
not exactly easy sometimes so sometimes

00:30:39,279 --> 00:30:43,440
you have conflicts between app streams

00:30:41,120 --> 00:30:46,000
or packages in different app streams

00:30:43,440 --> 00:30:47,760
we will warn you or if you try to apply

00:30:46,000 --> 00:30:49,679
a filter

00:30:47,760 --> 00:30:50,799
that conflicts with something else will

00:30:49,679 --> 00:30:52,720
warn you

00:30:50,799 --> 00:30:55,039
and we will not allow you to create an

00:30:52,720 --> 00:30:56,960
invalid repository

00:30:55,039 --> 00:30:59,919
and i can tell you that this is

00:30:56,960 --> 00:31:02,159
something that people like

00:30:59,919 --> 00:31:05,039
when we say relate it includes all the

00:31:02,159 --> 00:31:07,600
clones so it's rail8

00:31:05,039 --> 00:31:09,519
genuine red rail then the centos is

00:31:07,600 --> 00:31:10,960
finally supported oracle linux and

00:31:09,519 --> 00:31:12,000
there's something called the springdale

00:31:10,960 --> 00:31:15,039
linux

00:31:12,000 --> 00:31:16,399
which is a another railclone by prista

00:31:15,039 --> 00:31:17,840
university

00:31:16,399 --> 00:31:19,760
it will also work because it's

00:31:17,840 --> 00:31:22,480
essentially just another clone

00:31:19,760 --> 00:31:23,279
it's regarded as a rail system you can

00:31:22,480 --> 00:31:26,320
use the same

00:31:23,279 --> 00:31:28,880
client tools that you use for centos

00:31:26,320 --> 00:31:32,399
that's what orca linux all it's the same

00:31:28,880 --> 00:31:34,480
because it's very compatible

00:31:32,399 --> 00:31:36,000
and we can also do subscription matching

00:31:34,480 --> 00:31:38,480
public clouds

00:31:36,000 --> 00:31:40,240
and even at least systems running public

00:31:38,480 --> 00:31:41,919
clouds that this was also added this

00:31:40,240 --> 00:31:44,399
year

00:31:41,919 --> 00:31:45,039
with our visual hostgators we worked a

00:31:44,399 --> 00:31:48,480
lot in

00:31:45,039 --> 00:31:52,000
usability previously until

00:31:48,480 --> 00:31:53,600
mid 2020 reposting so synchronizing the

00:31:52,000 --> 00:31:57,039
packages was really slow

00:31:53,600 --> 00:32:00,080
now it's like 10 times faster building

00:31:57,039 --> 00:32:04,880
projects really huge projects was also

00:32:00,080 --> 00:32:08,880
very very slow um we optimized that part

00:32:04,880 --> 00:32:11,440
a lot so what usually what used to take

00:32:08,880 --> 00:32:12,080
more than 20 hours now now takes half an

00:32:11,440 --> 00:32:13,600
hour

00:32:12,080 --> 00:32:16,080
you can see the kind of applications we

00:32:13,600 --> 00:32:16,080
made there

00:32:16,559 --> 00:32:23,519
this also something really uh useful

00:32:20,399 --> 00:32:26,159
was previously when you upgraded

00:32:23,519 --> 00:32:27,360
your university you need to do a

00:32:26,159 --> 00:32:29,840
two-step migration

00:32:27,360 --> 00:32:31,519
a two-step upgrade essentially one was

00:32:29,840 --> 00:32:34,000
updating the software itself so

00:32:31,519 --> 00:32:35,120
the rpm packages the other was upgrading

00:32:34,000 --> 00:32:38,480
the

00:32:35,120 --> 00:32:40,720
database this led to lots of problems

00:32:38,480 --> 00:32:44,559
because sometimes people forgot

00:32:40,720 --> 00:32:46,640
to upgrade the database sometimes they

00:32:44,559 --> 00:32:48,480
pushed it back so they wanted the new

00:32:46,640 --> 00:32:52,240
software but

00:32:48,480 --> 00:32:53,120
will not uh wait the several hours that

00:32:52,240 --> 00:32:54,720
sometimes in

00:32:53,120 --> 00:32:56,240
some extreme cases the database

00:32:54,720 --> 00:32:59,200
migration may take

00:32:56,240 --> 00:33:00,159
and yeah then they have broken

00:32:59,200 --> 00:33:02,399
functionality

00:33:00,159 --> 00:33:04,480
now it's only one step you upgrade the

00:33:02,399 --> 00:33:06,960
software you upgrade the database

00:33:04,480 --> 00:33:07,919
so you need to schedule your maintenance

00:33:06,960 --> 00:33:11,120
window for this

00:33:07,919 --> 00:33:13,760
and that's it

00:33:11,120 --> 00:33:15,360
we also generate uh automatically the

00:33:13,760 --> 00:33:17,919
bootstrap repositories

00:33:15,360 --> 00:33:19,360
so what's a good strategy so that's the

00:33:17,919 --> 00:33:22,240
minimal repository

00:33:19,360 --> 00:33:23,679
when you want to manage the system with

00:33:22,240 --> 00:33:26,240
uni

00:33:23,679 --> 00:33:28,080
you need to install some software or

00:33:26,240 --> 00:33:29,120
rather to transfer some software to the

00:33:28,080 --> 00:33:32,559
client

00:33:29,120 --> 00:33:34,080
to be managed but since the system is

00:33:32,559 --> 00:33:36,720
not managed yet

00:33:34,080 --> 00:33:37,360
how do you connect the dots how do you

00:33:36,720 --> 00:33:40,640
connect this

00:33:37,360 --> 00:33:42,159
the server with the uh client

00:33:40,640 --> 00:33:44,080
it's not possible it doesn't have access

00:33:42,159 --> 00:33:45,760
to the repositories that's what a

00:33:44,080 --> 00:33:47,279
bootstrap reporter is it's a minimal

00:33:45,760 --> 00:33:49,120
reporter which contains the

00:33:47,279 --> 00:33:50,880
minimum set of packages that we need to

00:33:49,120 --> 00:33:53,679
transfer to a client to be able

00:33:50,880 --> 00:33:55,120
to manage it for the first time and then

00:33:53,679 --> 00:33:56,559
from there we can go once it's

00:33:55,120 --> 00:33:59,840
registered we can go

00:33:56,559 --> 00:34:02,480
on and the bootstrap is never used

00:33:59,840 --> 00:34:04,320
the bootstrap wizards were created

00:34:02,480 --> 00:34:06,080
manually for years

00:34:04,320 --> 00:34:08,320
which again led to problems because

00:34:06,080 --> 00:34:10,159
people forgot to uh upgrade

00:34:08,320 --> 00:34:12,800
resonate them or even to create them for

00:34:10,159 --> 00:34:15,520
the first time

00:34:12,800 --> 00:34:17,599
now when we see the the channels when we

00:34:15,520 --> 00:34:18,320
mirror the packages we automatically

00:34:17,599 --> 00:34:20,639
generate

00:34:18,320 --> 00:34:23,760
or update the bootstrap repositories and

00:34:20,639 --> 00:34:23,760
that problem is now gone

00:34:24,960 --> 00:34:30,879
another very useful uh feature is

00:34:27,839 --> 00:34:33,760
bootstrapping clients with ssh

00:34:30,879 --> 00:34:34,320
with with z keys actually so in the past

00:34:33,760 --> 00:34:37,440
it was

00:34:34,320 --> 00:34:39,280
only possible with uh

00:34:37,440 --> 00:34:41,760
login and the password but if you are on

00:34:39,280 --> 00:34:43,520
the cloud typically those machines do

00:34:41,760 --> 00:34:45,919
not come with a login and password they

00:34:43,520 --> 00:34:49,200
are only accessible by a ssh key

00:34:45,919 --> 00:34:49,919
now we support that service pack

00:34:49,200 --> 00:34:52,960
migration

00:34:49,919 --> 00:34:54,720
something that really was a source of

00:34:52,960 --> 00:34:57,919
problems again

00:34:54,720 --> 00:34:57,919
was people were

00:34:58,079 --> 00:35:06,240
trying the the service pack migration

00:35:01,440 --> 00:35:06,240
and then after uh carefully

00:35:06,480 --> 00:35:10,640
i'm going to turn my camera on because i

00:35:08,560 --> 00:35:14,079
just realized it was off

00:35:10,640 --> 00:35:15,520
for some reason it turns off when you do

00:35:14,079 --> 00:35:18,880
screen sharing ah

00:35:15,520 --> 00:35:23,359
 okay makes sense

00:35:18,880 --> 00:35:25,520
so have i now stopped sharing my screen

00:35:23,359 --> 00:35:26,560
i don't know it seems like the slides

00:35:25,520 --> 00:35:30,079
are still up

00:35:26,560 --> 00:35:31,440
okay but okay surprising yeah this is

00:35:30,079 --> 00:35:33,280
similar

00:35:31,440 --> 00:35:35,839
okay then yeah so what happened is

00:35:33,280 --> 00:35:37,920
people tried the service pack migration

00:35:35,839 --> 00:35:39,359
uh configured all the packages that they

00:35:37,920 --> 00:35:41,280
wanted to be uninstalled

00:35:39,359 --> 00:35:42,480
installed configuration files to be

00:35:41,280 --> 00:35:46,079
deployed

00:35:42,480 --> 00:35:48,320
um everything it worked and then

00:35:46,079 --> 00:35:50,079
they needed to redo everything from

00:35:48,320 --> 00:35:52,079
scratch

00:35:50,079 --> 00:35:53,760
yeah and then they forgot some step

00:35:52,079 --> 00:35:56,560
always happened

00:35:53,760 --> 00:35:58,640
so they reported hey this doesn't work

00:35:56,560 --> 00:35:59,680
it used to work but it breaks and i have

00:35:58,640 --> 00:36:01,440
touched nothing

00:35:59,680 --> 00:36:03,359
that that's the magic sentence i have

00:36:01,440 --> 00:36:06,720
touched nothing i did nothing

00:36:03,359 --> 00:36:09,280
yeah right so now when

00:36:06,720 --> 00:36:11,200
when the service by migration succeeds

00:36:09,280 --> 00:36:14,880
you can go to the history and say

00:36:11,200 --> 00:36:18,720
repeat this and it will do exactly

00:36:14,880 --> 00:36:22,320
repeating the the successful dry run

00:36:18,720 --> 00:36:22,320
this is also we have

00:36:22,640 --> 00:36:27,839
saved a lot of people from mistakes with

00:36:25,280 --> 00:36:27,839
this

00:36:29,119 --> 00:36:33,040
we are also enhanced the support for

00:36:31,200 --> 00:36:35,440
debian and unto

00:36:33,040 --> 00:36:36,480
um that when we first introduced support

00:36:35,440 --> 00:36:39,119
for ubuntu

00:36:36,480 --> 00:36:41,200
it didn't support fine metadata or all

00:36:39,119 --> 00:36:44,079
the headers some of them were missing

00:36:41,200 --> 00:36:45,520
now we have full support for this and we

00:36:44,079 --> 00:36:46,160
also introduced a single page

00:36:45,520 --> 00:36:49,440
application

00:36:46,160 --> 00:36:50,400
ui based on react so that the ui is now

00:36:49,440 --> 00:36:55,119
more responsive

00:36:50,400 --> 00:36:57,359
than than the jsp pages

00:36:55,119 --> 00:36:59,440
we have done a lot of work in regards to

00:36:57,359 --> 00:37:00,960
documentation there's now one word large

00:36:59,440 --> 00:37:02,800
deployments guide

00:37:00,960 --> 00:37:04,079
there's a public cloud kickstarter guide

00:37:02,800 --> 00:37:07,839
like a five page

00:37:04,079 --> 00:37:08,480
guide that you that tells you from start

00:37:07,839 --> 00:37:10,640
to beginning

00:37:08,480 --> 00:37:12,320
so essentially from installation to

00:37:10,640 --> 00:37:13,359
managing your first client and creating

00:37:12,320 --> 00:37:16,560
your first

00:37:13,359 --> 00:37:17,280
container cycle management project and

00:37:16,560 --> 00:37:19,359
there have been

00:37:17,280 --> 00:37:20,800
huge improvements to all the guys in

00:37:19,359 --> 00:37:22,800
german so the administration got the

00:37:20,800 --> 00:37:23,520
client notification guide is now a lot a

00:37:22,800 --> 00:37:25,680
lot lot

00:37:23,520 --> 00:37:26,880
better than it used to be the reference

00:37:25,680 --> 00:37:30,240
guide is also

00:37:26,880 --> 00:37:31,839
improved there are improvements

00:37:30,240 --> 00:37:34,640
all across the documentation we have

00:37:31,839 --> 00:37:38,560
almost 800 pages of documentation

00:37:34,640 --> 00:37:41,359
as of now and we have uh

00:37:38,560 --> 00:37:43,359
there's uh in the formulas there's this

00:37:41,359 --> 00:37:45,760
kitchen thing formula this this

00:37:43,359 --> 00:37:46,720
formula doesn't really do anything but

00:37:45,760 --> 00:37:48,880
it shows all the

00:37:46,720 --> 00:37:50,000
functionality all the possibilities of

00:37:48,880 --> 00:37:53,200
the formula before

00:37:50,000 --> 00:37:56,800
framework and it's a good start if you

00:37:53,200 --> 00:37:56,800
want to write your own formula

00:37:57,920 --> 00:38:02,240
so what are we going to do next where

00:37:59,920 --> 00:38:02,240
are we

00:38:02,640 --> 00:38:06,800
heading in in the coming months

00:38:05,040 --> 00:38:09,200
translations

00:38:06,800 --> 00:38:09,839
the i gave a talk about uh translations

00:38:09,200 --> 00:38:12,960
yesterday

00:38:09,839 --> 00:38:13,760
uh with uni we are seriously using

00:38:12,960 --> 00:38:16,880
weblet

00:38:13,760 --> 00:38:19,440
provided by open souza since we are

00:38:16,880 --> 00:38:21,440
associated with opensuse anyway

00:38:19,440 --> 00:38:22,560
and they will be introduced in the

00:38:21,440 --> 00:38:24,320
coming yeah

00:38:22,560 --> 00:38:26,480
and i don't know if it will be in the

00:38:24,320 --> 00:38:29,520
next release or at the end of this month

00:38:26,480 --> 00:38:31,359
or maybe in the release next month but

00:38:29,520 --> 00:38:33,839
expect that japanese should be the first

00:38:31,359 --> 00:38:35,760
salvation that we ship

00:38:33,839 --> 00:38:37,359
this actually a japanese was committee

00:38:35,760 --> 00:38:41,680
contributed

00:38:37,359 --> 00:38:45,040
by one of our committee members

00:38:41,680 --> 00:38:48,400
in just six weeks around six weeks he

00:38:45,040 --> 00:38:49,680
translated the whole uni which is more

00:38:48,400 --> 00:38:53,200
than 100

00:38:49,680 --> 00:38:57,280
000 words to japanese

00:38:53,200 --> 00:38:57,280
that's impressive i have to say

00:38:57,359 --> 00:39:02,400
we will add support for something which

00:39:00,000 --> 00:39:04,480
is a suse specific which is retracted

00:39:02,400 --> 00:39:06,160
patches

00:39:04,480 --> 00:39:08,400
let me start with what retractive

00:39:06,160 --> 00:39:10,000
patches are not it will not

00:39:08,400 --> 00:39:12,160
uninstall anything that you have

00:39:10,000 --> 00:39:15,680
installed on your systems okay

00:39:12,160 --> 00:39:18,000
retracted patches is when a suse product

00:39:15,680 --> 00:39:19,839
has released a patch which has side

00:39:18,000 --> 00:39:23,520
effects bad side effects

00:39:19,839 --> 00:39:25,040
yeah the there's uh some metadata that

00:39:23,520 --> 00:39:26,880
suse can add

00:39:25,040 --> 00:39:28,480
to the ex to the meta to the channel

00:39:26,880 --> 00:39:30,480
metadata

00:39:28,480 --> 00:39:32,480
saying retract dispatch so do not

00:39:30,480 --> 00:39:35,280
install it anymore

00:39:32,480 --> 00:39:36,560
but it will not uninstall it so please

00:39:35,280 --> 00:39:39,920
keep this in mind because

00:39:36,560 --> 00:39:42,560
at the unique hours

00:39:39,920 --> 00:39:44,800
six weeks ago we had this problem that

00:39:42,560 --> 00:39:47,119
some people did not really

00:39:44,800 --> 00:39:48,240
understand that i was catching by

00:39:47,119 --> 00:39:51,119
surprise because

00:39:48,240 --> 00:39:52,560
i didn't think this this could be

00:39:51,119 --> 00:39:55,599
misinterpreted but

00:39:52,560 --> 00:39:56,000
that's why i insist on this we are going

00:39:55,599 --> 00:39:59,599
to add

00:39:56,000 --> 00:40:00,240
sap content so promisive exporters from

00:39:59,599 --> 00:40:03,839
sap

00:40:00,240 --> 00:40:07,839
graphana dashboards for sap kickstarts

00:40:03,839 --> 00:40:12,160
the quick discover guide for sap so

00:40:07,839 --> 00:40:15,760
this will make managing is less for sap

00:40:12,160 --> 00:40:16,400
much easier with uni and we have also

00:40:15,760 --> 00:40:20,640
introduced

00:40:16,400 --> 00:40:24,640
themes in the web ui it all started

00:40:20,640 --> 00:40:26,160
with the uni theme then we have a dark

00:40:24,640 --> 00:40:28,240
theme a light theme

00:40:26,160 --> 00:40:30,240
and probably more things you can create

00:40:28,240 --> 00:40:31,599
your own themes it's just a matter of

00:40:30,240 --> 00:40:34,400
forking

00:40:31,599 --> 00:40:35,520
or and editing a few css files and

00:40:34,400 --> 00:40:38,319
providing

00:40:35,520 --> 00:40:38,720
colors maybe some pictures you want it's

00:40:38,319 --> 00:40:42,000
real

00:40:38,720 --> 00:40:43,839
really easy to create your own theme

00:40:42,000 --> 00:40:46,400
if you're interested get in touch to the

00:40:43,839 --> 00:40:48,560
mailing list or guitar chat

00:40:46,400 --> 00:40:50,000
and we can help you we will also

00:40:48,560 --> 00:40:51,359
document this by the way it's not

00:40:50,000 --> 00:40:54,000
documented yet because

00:40:51,359 --> 00:40:55,680
it's not introduced actually i think it

00:40:54,000 --> 00:40:58,880
was merged yesterday but

00:40:55,680 --> 00:40:59,440
yeah it's not released redfish is a new

00:40:58,880 --> 00:41:02,079
if you know

00:40:59,440 --> 00:41:03,200
ipmi or if you have used ipmi you know

00:41:02,079 --> 00:41:05,200
that it works

00:41:03,200 --> 00:41:06,480
to boot machines and can do a lot of

00:41:05,200 --> 00:41:09,920
things but it's not

00:41:06,480 --> 00:41:13,440
exactly the most convenient thing to do

00:41:09,920 --> 00:41:16,160
redfish is the new generation of ipmi

00:41:13,440 --> 00:41:17,280
especially http i you can think of it as

00:41:16,160 --> 00:41:20,560
http based

00:41:17,280 --> 00:41:21,680
ipmi it's now also implemented at

00:41:20,560 --> 00:41:24,160
nourished

00:41:21,680 --> 00:41:24,960
it will be released soon probably in in

00:41:24,160 --> 00:41:28,160
the

00:41:24,960 --> 00:41:31,599
you know 20 20.10

00:41:28,160 --> 00:41:34,160
event and uh we want also

00:41:31,599 --> 00:41:35,680
to include davian and ubuntu rather

00:41:34,160 --> 00:41:38,400
information that's something that

00:41:35,680 --> 00:41:40,480
is missing currently now debian and

00:41:38,400 --> 00:41:41,599
ubuntu do not really have the concept of

00:41:40,480 --> 00:41:45,200
errata

00:41:41,599 --> 00:41:46,480
as a red hat or uh suse operating

00:41:45,200 --> 00:41:48,800
systems hub

00:41:46,480 --> 00:41:49,520
but from the information from the

00:41:48,800 --> 00:41:52,240
updates

00:41:49,520 --> 00:41:54,079
to deviantart ubuntu and in the same

00:41:52,240 --> 00:41:55,920
release we can

00:41:54,079 --> 00:41:57,200
fake that and provide that information

00:41:55,920 --> 00:42:00,000
in the end it's just

00:41:57,200 --> 00:42:01,040
saying you have this patch of this

00:42:00,000 --> 00:42:03,200
update

00:42:01,040 --> 00:42:04,800
to existing packages for your own

00:42:03,200 --> 00:42:09,920
release and they fix this

00:42:04,800 --> 00:42:09,920
cve or this bug or this security problem

00:42:11,280 --> 00:42:14,800
and we will keep enhancing the hub as i

00:42:13,359 --> 00:42:16,560
said we are going to

00:42:14,800 --> 00:42:18,079
to provide also the next thing we are

00:42:16,560 --> 00:42:20,400
going to work is the internal

00:42:18,079 --> 00:42:21,200
servicing so currently when you have

00:42:20,400 --> 00:42:23,040
several

00:42:21,200 --> 00:42:25,119
uh with unit servers all managed by the

00:42:23,040 --> 00:42:27,280
uni hub you will download

00:42:25,119 --> 00:42:28,319
the the packages the rpm packages in

00:42:27,280 --> 00:42:30,000
each of the servers

00:42:28,319 --> 00:42:31,440
we want to avoid that to save you

00:42:30,000 --> 00:42:33,200
traffic

00:42:31,440 --> 00:42:35,280
and then the inter server thing will

00:42:33,200 --> 00:42:37,040
take care of that of synchronizing

00:42:35,280 --> 00:42:38,640
the packages and also the configuration

00:42:37,040 --> 00:42:42,240
files and everything so that you

00:42:38,640 --> 00:42:44,960
can uh do do that only so mirror ones or

00:42:42,240 --> 00:42:46,240
or have the files once on the hub and

00:42:44,960 --> 00:42:49,280
then they propagate

00:42:46,240 --> 00:42:52,319
to all the other servers we are

00:42:49,280 --> 00:42:53,839
working more on virtualization and this

00:42:52,319 --> 00:42:54,400
is from the from the suser side of

00:42:53,839 --> 00:42:57,040
course there's

00:42:54,400 --> 00:42:58,480
more community contributions and i will

00:42:57,040 --> 00:43:02,160
mention the one at the

00:42:58,480 --> 00:43:05,280
at the end maintenance windows

00:43:02,160 --> 00:43:07,040
one currently they work with ical files

00:43:05,280 --> 00:43:09,599
that you can generate with outlook

00:43:07,040 --> 00:43:10,560
or servicenow or any other calendaring

00:43:09,599 --> 00:43:15,040
tool

00:43:10,560 --> 00:43:16,880
a k organizer for instance or revolution

00:43:15,040 --> 00:43:18,079
but you don't really see them there's

00:43:16,880 --> 00:43:20,400
not a calendar view in

00:43:18,079 --> 00:43:21,119
uni we want to add that because that

00:43:20,400 --> 00:43:24,240
makes it

00:43:21,119 --> 00:43:27,839
a lot easier to yeah it's

00:43:24,240 --> 00:43:29,520
when you see it visually it helps you

00:43:27,839 --> 00:43:32,640
cluster management currently we can

00:43:29,520 --> 00:43:34,880
manage cusp clusters we want to add more

00:43:32,640 --> 00:43:37,440
cluster types so it could be just

00:43:34,880 --> 00:43:40,319
standard kubernetes distributions or

00:43:37,440 --> 00:43:42,720
non-suse or different kinds of clusters

00:43:40,319 --> 00:43:45,760
there are several ideas for this

00:43:42,720 --> 00:43:49,280
because clusters doesn't really mean

00:43:45,760 --> 00:43:50,720
that it needs to be a cluster a cluster

00:43:49,280 --> 00:43:54,240
for you maybe

00:43:50,720 --> 00:43:57,520
all my apache servers or a group of of

00:43:54,240 --> 00:43:59,760
uh if i am i don't know a wordpress

00:43:57,520 --> 00:44:02,160
hosting service for me a cluster can be

00:43:59,760 --> 00:44:05,200
a database server plus

00:44:02,160 --> 00:44:09,040
two apaches plus uh

00:44:05,200 --> 00:44:10,720
two storage servers i can make my own

00:44:09,040 --> 00:44:12,800
cluster out of that i can call that a

00:44:10,720 --> 00:44:15,680
cluster a wordpress cluster

00:44:12,800 --> 00:44:17,200
so writing clusters for cluster writing

00:44:15,680 --> 00:44:20,800
class imagine

00:44:17,200 --> 00:44:22,400
plugins is relatively easy and yeah we

00:44:20,800 --> 00:44:24,800
want to add more and of course

00:44:22,400 --> 00:44:27,280
expect the community to contribute with

00:44:24,800 --> 00:44:30,000
different cluster types

00:44:27,280 --> 00:44:31,440
we want to keep making uni easier to use

00:44:30,000 --> 00:44:32,560
we have some ideas in regards to

00:44:31,440 --> 00:44:35,440
usability versus

00:44:32,560 --> 00:44:36,480
the system list page or the the product

00:44:35,440 --> 00:44:40,640
space

00:44:36,480 --> 00:44:42,720
are something that yeah can be improved

00:44:40,640 --> 00:44:43,839
and of course we continue building the

00:44:42,720 --> 00:44:46,960
community

00:44:43,839 --> 00:44:49,599
so if you were part of the uni community

00:44:46,960 --> 00:44:50,079
a year ago you know it was relatively

00:44:49,599 --> 00:44:52,160
small

00:44:50,079 --> 00:44:53,680
now it has grown you can see there's a

00:44:52,160 --> 00:44:56,319
lot of activity in the in

00:44:53,680 --> 00:44:58,480
guitar there are users helping each

00:44:56,319 --> 00:45:00,720
other

00:44:58,480 --> 00:45:03,040
there's of course people from susa there

00:45:00,720 --> 00:45:03,760
but it's i'm very happy when i see one

00:45:03,040 --> 00:45:06,640
user

00:45:03,760 --> 00:45:08,160
helping another user and we are just

00:45:06,640 --> 00:45:08,720
listening there or in the community

00:45:08,160 --> 00:45:10,640
hours

00:45:08,720 --> 00:45:12,160
when people start proposing things and

00:45:10,640 --> 00:45:14,560
presenting their own stuff

00:45:12,160 --> 00:45:15,839
like ansible uh playbooks that were

00:45:14,560 --> 00:45:19,839
presented

00:45:15,839 --> 00:45:19,839
to and install uni

00:45:20,640 --> 00:45:25,119
now say you want to contribute to uni

00:45:22,560 --> 00:45:28,319
because you are excited about this

00:45:25,119 --> 00:45:29,760
as as i am there's lots of ways

00:45:28,319 --> 00:45:31,599
different ways of competing

00:45:29,760 --> 00:45:33,280
you can of course continue with ideas

00:45:31,599 --> 00:45:34,720
and feedback so we are available through

00:45:33,280 --> 00:45:35,680
the mailing list guitar and github

00:45:34,720 --> 00:45:37,520
issues

00:45:35,680 --> 00:45:39,760
you can contribute with code if you want

00:45:37,520 --> 00:45:42,319
to set up your development environment

00:45:39,760 --> 00:45:46,160
this wiki page explains how to do that

00:45:42,319 --> 00:45:49,839
step by step even configure your ide

00:45:46,160 --> 00:45:52,240
and just hack and submit

00:45:49,839 --> 00:45:53,599
a pull request if in doubt just contact

00:45:52,240 --> 00:45:56,079
us first

00:45:53,599 --> 00:45:59,599
and we will help you and another way of

00:45:56,079 --> 00:46:01,680
contributing is with translations

00:45:59,599 --> 00:46:03,839
so and in this case you don't even need

00:46:01,680 --> 00:46:05,760
to to write any code or clone a git

00:46:03,839 --> 00:46:08,480
repository or anything just go

00:46:05,760 --> 00:46:09,920
to this web late project uni and you

00:46:08,480 --> 00:46:12,560
will find the components

00:46:09,920 --> 00:46:13,760
this wiki page explains all everything

00:46:12,560 --> 00:46:16,560
you will find there

00:46:13,760 --> 00:46:17,119
and if you don't want to set up if you

00:46:16,560 --> 00:46:20,800
want to

00:46:17,119 --> 00:46:22,560
to see the output of what we are writing

00:46:20,800 --> 00:46:23,920
and you don't want to set up your tool

00:46:22,560 --> 00:46:26,079
chain your local system

00:46:23,920 --> 00:46:27,920
we provide a virtual machine for the

00:46:26,079 --> 00:46:31,040
recommendation tool check which is a bit

00:46:27,920 --> 00:46:31,040
more complex to set up

00:46:32,480 --> 00:46:36,880
there are tons of opportunities for the

00:46:34,720 --> 00:46:37,839
community so here are some ideas i'm

00:46:36,880 --> 00:46:39,280
sure that

00:46:37,839 --> 00:46:41,040
you will have more of course there's

00:46:39,280 --> 00:46:44,079
translations this is an easy one

00:46:41,040 --> 00:46:46,960
because it requires no coding skills or

00:46:44,079 --> 00:46:47,599
these articles or videos with learning

00:46:46,960 --> 00:46:51,839
pills

00:46:47,599 --> 00:46:55,040
about the uni oops

00:46:51,839 --> 00:46:55,680
there's yeah creating formulas with

00:46:55,040 --> 00:46:57,599
forms

00:46:55,680 --> 00:46:58,720
for salt formulas which are there's a

00:46:57,599 --> 00:47:02,240
ton of formulas

00:46:58,720 --> 00:47:03,839
available from github just a matter of

00:47:02,240 --> 00:47:06,400
adding a form

00:47:03,839 --> 00:47:07,920
or these deviant unto a rather

00:47:06,400 --> 00:47:10,079
information except

00:47:07,920 --> 00:47:13,040
there there's already two uh committee

00:47:10,079 --> 00:47:13,040
efforts to this

00:47:13,119 --> 00:47:19,359
i have not tried any of them yet

00:47:17,280 --> 00:47:22,000
and i know that some people report it

00:47:19,359 --> 00:47:25,839
was some people report it doesn't

00:47:22,000 --> 00:47:29,040
um it's it will be good if someone could

00:47:25,839 --> 00:47:31,040
take this and say okay this is what's

00:47:29,040 --> 00:47:32,400
missing or this is how to use it and

00:47:31,040 --> 00:47:34,079
document it

00:47:32,400 --> 00:47:35,680
auto installation this is a something

00:47:34,079 --> 00:47:38,880
that we are totally missing for

00:47:35,680 --> 00:47:39,680
debian based operating systems so even

00:47:38,880 --> 00:47:42,720
though

00:47:39,680 --> 00:47:45,680
we only suppose kickstart the

00:47:42,720 --> 00:47:46,000
the kind of kickstart that would support

00:47:45,680 --> 00:47:48,000
is

00:47:46,000 --> 00:47:49,839
not the same it will have different

00:47:48,000 --> 00:47:53,280
parts so this could be an

00:47:49,839 --> 00:47:54,240
easy start and ideally we should support

00:47:53,280 --> 00:47:55,839
precede

00:47:54,240 --> 00:47:57,440
which is the official debian auto

00:47:55,839 --> 00:47:59,200
installation way and the window auto

00:47:57,440 --> 00:48:01,760
station way

00:47:59,200 --> 00:48:02,960
there's uh completing the the amazon

00:48:01,760 --> 00:48:05,200
linux 2

00:48:02,960 --> 00:48:06,559
support requires dealing with the

00:48:05,200 --> 00:48:09,119
metadata

00:48:06,559 --> 00:48:09,920
because amazon linux 2 using sqlite

00:48:09,119 --> 00:48:12,480
metadata

00:48:09,920 --> 00:48:15,200
versus the xml metadata that every other

00:48:12,480 --> 00:48:17,599
rpm operating system supports

00:48:15,200 --> 00:48:19,440
or writing mutual hostgathers for your

00:48:17,599 --> 00:48:21,359
favorite cloud or british

00:48:19,440 --> 00:48:23,359
or hypervisor or essentially a virtual

00:48:21,359 --> 00:48:24,400
hergather is a plugin which is really

00:48:23,359 --> 00:48:27,280
small like

00:48:24,400 --> 00:48:28,000
uh less than 200 lines of code really

00:48:27,280 --> 00:48:31,359
that

00:48:28,000 --> 00:48:33,359
connects to a hypervisor a hyperscaler

00:48:31,359 --> 00:48:34,800
and lists all the systems that are

00:48:33,359 --> 00:48:38,800
available there

00:48:34,800 --> 00:48:38,800
and brings them to sushi manager

00:48:41,040 --> 00:48:47,839
there's some more crazy ideas like vdis

00:48:44,640 --> 00:48:50,960
with doing vdi with

00:48:47,839 --> 00:48:53,520
uni even without limited uh mutation

00:48:50,960 --> 00:48:56,880
support this is completely possible

00:48:53,520 --> 00:49:00,880
if you think about it i have something

00:48:56,880 --> 00:49:03,599
written that i will probably

00:49:00,880 --> 00:49:04,079
publish publishing the wiki should more

00:49:03,599 --> 00:49:06,960
advanced

00:49:04,079 --> 00:49:08,319
stuff containers matching health charts

00:49:06,960 --> 00:49:12,000
integrating

00:49:08,319 --> 00:49:13,839
um containers plus packages in container

00:49:12,000 --> 00:49:14,880
segments because sometimes some products

00:49:13,839 --> 00:49:17,359
require that

00:49:14,880 --> 00:49:18,319
that you install packets and then you

00:49:17,359 --> 00:49:21,520
install containers

00:49:18,319 --> 00:49:23,839
combined or using hardboard

00:49:21,520 --> 00:49:25,359
this is a typo here hardware for staging

00:49:23,839 --> 00:49:26,079
the containers we don't really need to

00:49:25,359 --> 00:49:29,119
implement

00:49:26,079 --> 00:49:32,319
container staging in

00:49:29,119 --> 00:49:33,839
uni enhancing virtualization like

00:49:32,319 --> 00:49:36,880
network configuration

00:49:33,839 --> 00:49:37,200
or snapshots pixelboot is in the works

00:49:36,880 --> 00:49:39,760
but

00:49:37,200 --> 00:49:41,680
there's a lot of more advanced confusion

00:49:39,760 --> 00:49:44,160
like cpu peeling

00:49:41,680 --> 00:49:46,079
lots of stuff windows mac android more

00:49:44,160 --> 00:49:49,119
clients yes

00:49:46,079 --> 00:49:52,480
or an integrated editor maybe based on

00:49:49,119 --> 00:49:54,960
eclipse thea or microsoft monaco

00:49:52,480 --> 00:49:56,720
which is the same thing that is used for

00:49:54,960 --> 00:49:58,559
visual studio code

00:49:56,720 --> 00:49:59,760
or if you want to create your own

00:49:58,559 --> 00:50:02,800
dashboard

00:49:59,760 --> 00:50:05,119
integrate it in uni then

00:50:02,800 --> 00:50:06,720
having a web framework to that will be

00:50:05,119 --> 00:50:08,640
also useful because with the graphana

00:50:06,720 --> 00:50:11,760
you can do that but it's

00:50:08,640 --> 00:50:14,079
yeah it doesn't feel as integrated as it

00:50:11,760 --> 00:50:16,160
could be

00:50:14,079 --> 00:50:17,119
we are part of we are participating in

00:50:16,160 --> 00:50:20,160
hector fest

00:50:17,119 --> 00:50:21,760
this year so you can continue with

00:50:20,160 --> 00:50:23,280
code or documentation or translations

00:50:21,760 --> 00:50:25,440
and get a t-shirt

00:50:23,280 --> 00:50:26,720
you can use one of the ideas that i just

00:50:25,440 --> 00:50:29,280
explained or

00:50:26,720 --> 00:50:31,119
if you have more ideas you're free to do

00:50:29,280 --> 00:50:32,400
so i will recommend to get in touch

00:50:31,119 --> 00:50:34,559
first

00:50:32,400 --> 00:50:35,760
to make sure that yeah you're on the

00:50:34,559 --> 00:50:38,319
right path

00:50:35,760 --> 00:50:40,319
here you can see that we have several

00:50:38,319 --> 00:50:43,839
github issues

00:50:40,319 --> 00:50:46,480
labeled labeled with hacktoberfest

00:50:43,839 --> 00:50:47,119
and this is the hacktorfest initiative

00:50:46,480 --> 00:50:49,280
page

00:50:47,119 --> 00:50:54,000
where you can find more information

00:50:49,280 --> 00:50:56,240
about hacktoberfest

00:50:54,000 --> 00:50:57,520
questions i'm going to start with an

00:50:56,240 --> 00:51:00,640
answer by the way

00:50:57,520 --> 00:51:03,200
because this is asked a lot uh

00:51:00,640 --> 00:51:05,599
is unity available for centos or rel or

00:51:03,200 --> 00:51:08,720
local linux or deviant no

00:51:05,599 --> 00:51:09,599
it's not yet but there's a community

00:51:08,720 --> 00:51:11,119
effort

00:51:09,599 --> 00:51:12,880
in that direction there are two guys

00:51:11,119 --> 00:51:14,559
working on making uni available on

00:51:12,880 --> 00:51:17,760
centos

00:51:14,559 --> 00:51:19,680
that effort is rather advanced

00:51:17,760 --> 00:51:23,839
i don't know when it will come and we

00:51:19,680 --> 00:51:23,839
will of course accept it

00:51:24,000 --> 00:51:27,520
one day man one day

00:51:27,760 --> 00:51:31,040
and then the other question that i get

00:51:29,680 --> 00:51:34,559
asked a lot is

00:51:31,040 --> 00:51:37,599
if we can manage windows clients

00:51:34,559 --> 00:51:40,800
not yet it's my pet project

00:51:37,599 --> 00:51:43,040
it's not that difficult uh if using the

00:51:40,800 --> 00:51:44,960
salt stack to manage the clients

00:51:43,040 --> 00:51:46,720
i can even mirror the mic the updates

00:51:44,960 --> 00:51:48,720
from microsoft data and deploy them to

00:51:46,720 --> 00:51:51,599
the clients

00:51:48,720 --> 00:51:53,200
but i am and yeah so it kind of works

00:51:51,599 --> 00:51:54,800
but it doesn't because it's not visible

00:51:53,200 --> 00:51:57,760
on the web ui it works from the command

00:51:54,800 --> 00:52:00,000
line but not from the web ui

00:51:57,760 --> 00:52:02,480
if you're interested get in touch and we

00:52:00,000 --> 00:52:05,839
will yeah

00:52:02,480 --> 00:52:05,839
make more advancements here

00:52:06,640 --> 00:52:12,400
and that's essentially it

00:52:09,760 --> 00:52:14,000
so now it's a time for your questions

00:52:12,400 --> 00:52:16,400
instead of my answers

00:52:14,000 --> 00:52:18,640
yeah oh so that's why it was a and q i

00:52:16,400 --> 00:52:22,800
was about to wonder i was wondering

00:52:18,640 --> 00:52:25,839
yeah so a couple of

00:52:22,800 --> 00:52:30,240
uh questions for me at least

00:52:25,839 --> 00:52:30,240
uh the first is uh

00:52:31,760 --> 00:52:35,920
why why are you going to do this

00:52:34,400 --> 00:52:37,680
retracted patches stuff

00:52:35,920 --> 00:52:39,359
because the problem with retracted

00:52:37,680 --> 00:52:41,760
patches is

00:52:39,359 --> 00:52:43,920
not that oh it doesn't affect existing

00:52:41,760 --> 00:52:45,839
install systems it makes

00:52:43,920 --> 00:52:47,280
it makes configuration management and

00:52:45,839 --> 00:52:49,440
installation and

00:52:47,280 --> 00:52:50,960
mirroring completely uh

00:52:49,440 --> 00:52:53,119
non-deterministic

00:52:50,960 --> 00:52:55,200
because if souza pushes a thing that

00:52:53,119 --> 00:52:56,559
says hey this patch shouldn't be

00:52:55,200 --> 00:52:58,400
synced or downloaded or installed

00:52:56,559 --> 00:53:02,559
anymore that

00:52:58,400 --> 00:53:05,040
essentially breaks the consistency that

00:53:02,559 --> 00:53:06,880
most people use a uni for that's the

00:53:05,040 --> 00:53:08,640
reason why the community was like

00:53:06,880 --> 00:53:10,720
this makes no sense to actually have no

00:53:08,640 --> 00:53:12,160
no no you you can still explicitly

00:53:10,720 --> 00:53:14,240
install it

00:53:12,160 --> 00:53:15,920
yeah but it won't happen automatically

00:53:14,240 --> 00:53:16,480
when some machines have it and others

00:53:15,920 --> 00:53:18,960
don't

00:53:16,480 --> 00:53:19,839
that's a problem no no no that that will

00:53:18,960 --> 00:53:24,000
not happen

00:53:19,839 --> 00:53:25,599
so once your once the patch is in

00:53:24,000 --> 00:53:27,680
it doesn't get removed from your

00:53:25,599 --> 00:53:30,720
container cycle management

00:53:27,680 --> 00:53:32,000
it just happens that if patch is

00:53:30,720 --> 00:53:34,240
released today and you

00:53:32,000 --> 00:53:35,760
only create this content lifecycle

00:53:34,240 --> 00:53:37,920
management project

00:53:35,760 --> 00:53:39,680
in two weeks because your maintenance

00:53:37,920 --> 00:53:41,760
windows is once a month

00:53:39,680 --> 00:53:44,000
which is a typical maintenance window

00:53:41,760 --> 00:53:47,040
then you will see that by default

00:53:44,000 --> 00:53:49,119
the retracted patches are and

00:53:47,040 --> 00:53:51,200
it's not even that you you need to add

00:53:49,119 --> 00:53:53,119
this filter so the way we are

00:53:51,200 --> 00:53:54,319
implementing this is you need to add a

00:53:53,119 --> 00:53:58,000
filter saying

00:53:54,319 --> 00:54:00,800
do not add retracted patches

00:53:58,000 --> 00:54:01,760
okay so it's nothing undeterministic or

00:54:00,800 --> 00:54:04,160
nothing and

00:54:01,760 --> 00:54:05,920
nothing unexpected will happen the only

00:54:04,160 --> 00:54:07,760
thing that will happen is that

00:54:05,920 --> 00:54:11,839
if you don't want retracted patches you

00:54:07,760 --> 00:54:11,839
will have this possibility

00:54:23,040 --> 00:54:28,240
because the side effect the bad side

00:54:24,559 --> 00:54:28,240
effect why it was retracted

00:54:28,880 --> 00:54:32,800
doesn't affect you or you can live with

00:54:30,960 --> 00:54:35,839
it you can still do that

00:54:32,800 --> 00:54:37,680
but then don't cry if it destroys your

00:54:35,839 --> 00:54:40,160
systems

00:54:37,680 --> 00:54:42,079
well look i i'd rather have five

00:54:40,160 --> 00:54:43,599
destroyed systems that died the same way

00:54:42,079 --> 00:54:44,799
that rather than two destroyed systems

00:54:43,599 --> 00:54:47,200
that died one way

00:54:44,799 --> 00:54:49,359
and three that died a different way that

00:54:47,200 --> 00:54:53,520
that's worse

00:54:49,359 --> 00:54:56,079
so that that's that was my objection to

00:54:53,520 --> 00:55:00,640
it at least the last community meeting

00:54:56,079 --> 00:55:03,839
um the other question i have is

00:55:00,640 --> 00:55:07,200
uh with the

00:55:03,839 --> 00:55:08,720
uh with the new theming stuff uh

00:55:07,200 --> 00:55:10,559
does this mean that we can do things

00:55:08,720 --> 00:55:14,160
like have fixed terminology

00:55:10,559 --> 00:55:16,559
for some of the uh more idiosyncratic

00:55:14,160 --> 00:55:18,000
uh phrasing that's used in uni that we

00:55:16,559 --> 00:55:20,319
inherit from summa

00:55:18,000 --> 00:55:21,440
like using patches for referring to

00:55:20,319 --> 00:55:23,440
updates

00:55:21,440 --> 00:55:25,200
uh and and actually going back to using

00:55:23,440 --> 00:55:29,200
the word updates

00:55:25,200 --> 00:55:32,319
uh because uh it's really confusing

00:55:29,200 --> 00:55:35,359
and and doesn't make sense to call

00:55:32,319 --> 00:55:38,319
patches update uh call updates patches

00:55:35,359 --> 00:55:39,359
yeah so themes uh yeah so that's a whole

00:55:38,319 --> 00:55:41,280
different discussion

00:55:39,359 --> 00:55:43,200
i'm not going to enter it that's a

00:55:41,280 --> 00:55:46,240
discussion for

00:55:43,200 --> 00:55:49,839
uh the let's say the zipper

00:55:46,240 --> 00:55:50,319
people or the i mean i'm talking about

00:55:49,839 --> 00:55:52,720
yeah

00:55:50,319 --> 00:55:53,839
but now but themes are visual themes so

00:55:52,720 --> 00:55:57,760
like colors

00:55:53,839 --> 00:56:00,640
pictures uh fonts that kind of themes

00:55:57,760 --> 00:56:02,160
translations um yes you could create

00:56:00,640 --> 00:56:04,880
your own uh

00:56:02,160 --> 00:56:05,839
nil language for instance and that

00:56:04,880 --> 00:56:08,799
replace or

00:56:05,839 --> 00:56:09,760
all the patches every accordance of the

00:56:08,799 --> 00:56:13,599
of the word

00:56:09,760 --> 00:56:17,520
patch with uh something else

00:56:13,599 --> 00:56:19,520
but yeah i'm not gonna do that that's

00:56:17,520 --> 00:56:21,839
crazy

00:56:19,520 --> 00:56:24,000
no i was just hoping that the word that

00:56:21,839 --> 00:56:24,640
particular word choice could go away in

00:56:24,000 --> 00:56:28,839
some way

00:56:24,640 --> 00:56:32,559
on uh for for uni because

00:56:28,839 --> 00:56:34,880
it outside of susa

00:56:32,559 --> 00:56:37,200
corporate and and direct customers

00:56:34,880 --> 00:56:41,520
that's not a term that's used for

00:56:37,200 --> 00:56:42,960
package updates like ever and so

00:56:41,520 --> 00:56:44,640
i know where the heritage comes from i

00:56:42,960 --> 00:56:45,920
know why it's called patches and i know

00:56:44,640 --> 00:56:46,640
that this is just one of those weird

00:56:45,920 --> 00:56:48,079
indies

00:56:46,640 --> 00:56:49,760
idiosyncratic things that shouldn't

00:56:48,079 --> 00:56:51,680
exist but it is

00:56:49,760 --> 00:56:52,799
just be nice if it didn't have to be

00:56:51,680 --> 00:56:56,720
propagated

00:56:52,799 --> 00:56:56,720
into a uni to confuse everyone else

00:56:57,119 --> 00:57:01,359
yeah well um themes are a different

00:57:00,960 --> 00:57:03,280
thing

00:57:01,359 --> 00:57:05,040
so though yeah you could clear your own

00:57:03,280 --> 00:57:07,040
translation if you want

00:57:05,040 --> 00:57:08,480
but they're discussing the default term

00:57:07,040 --> 00:57:11,520
in english

00:57:08,480 --> 00:57:13,760
is a different discussion we use the

00:57:11,520 --> 00:57:15,599
term that suse uses

00:57:13,760 --> 00:57:16,799
and when susie changes the term the

00:57:15,599 --> 00:57:19,760
official term

00:57:16,799 --> 00:57:21,920
for patches then we will also change it

00:57:19,760 --> 00:57:24,720
but so far

00:57:21,920 --> 00:57:26,000
yeah patches are patches even so people

00:57:24,720 --> 00:57:29,400
call them updates and

00:57:26,000 --> 00:57:31,520
i have to say that coming uh being a

00:57:29,400 --> 00:57:33,760
foreign debian developer

00:57:31,520 --> 00:57:34,720
i was also surprised by what what is a

00:57:33,760 --> 00:57:36,480
patch because

00:57:34,720 --> 00:57:38,839
in the debian world there's no patches

00:57:36,480 --> 00:57:41,839
everything is an update

00:57:38,839 --> 00:57:41,839
essentially

00:57:43,119 --> 00:57:46,319
another thing i just wanted to point out

00:57:44,559 --> 00:57:49,520
as a comment uh

00:57:46,319 --> 00:57:51,520
you cannot use precede to to automate

00:57:49,520 --> 00:57:53,599
installations of ubuntu anymore

00:57:51,520 --> 00:57:56,000
that's not a thing oh really they have

00:57:53,599 --> 00:57:58,799
removed that in 2004

00:57:56,000 --> 00:57:59,119
i read about about that but i thought

00:57:58,799 --> 00:58:02,240
they

00:57:59,119 --> 00:58:04,319
still kept it around nope the

00:58:02,240 --> 00:58:06,400
debian installer is no longer used for

00:58:04,319 --> 00:58:09,200
ubuntu at all as of 2004

00:58:06,400 --> 00:58:10,160
so uh you're out of luck in terms of you

00:58:09,200 --> 00:58:14,559
know

00:58:10,160 --> 00:58:16,319
automation of a of mass installation

00:58:14,559 --> 00:58:17,839
wow then this is going to get fun

00:58:16,319 --> 00:58:19,599
because it's

00:58:17,839 --> 00:58:21,040
press it for debian something else for

00:58:19,599 --> 00:58:23,040
ubuntu and

00:58:21,040 --> 00:58:26,240
then we have kickstart for railclones

00:58:23,040 --> 00:58:26,240
and autographs

00:58:26,480 --> 00:58:30,240
less the current recommendation for

00:58:28,799 --> 00:58:31,760
ubuntu is to

00:58:30,240 --> 00:58:34,319
take one of their cloud images and use

00:58:31,760 --> 00:58:34,319
cloud in it

00:58:35,440 --> 00:58:39,440
cloud in it yeah yep well they invented

00:58:38,640 --> 00:58:41,200
cloud in it so

00:58:39,440 --> 00:58:43,680
of course yeah yeah i can understand

00:58:41,200 --> 00:58:45,920
that so the funny thing is that we

00:58:43,680 --> 00:58:48,319
use cloud init in summa form which is

00:58:45,920 --> 00:58:51,440
the tool that we use for developers

00:58:48,319 --> 00:58:54,559
for qa so maybe adding cloud in it

00:58:51,440 --> 00:58:56,319
is not even that uh

00:58:54,559 --> 00:58:57,760
stupid it's certainly useful as a cross

00:58:56,319 --> 00:59:01,040
distro uh

00:58:57,760 --> 00:59:02,480
fast install thing because i believe one

00:59:01,040 --> 00:59:05,599
of the there is a

00:59:02,480 --> 00:59:07,440
similar project out there that can do

00:59:05,599 --> 00:59:07,839
bare metal installations super quickly

00:59:07,440 --> 00:59:10,319
by

00:59:07,839 --> 00:59:13,359
abusing cloud images and doing weird

00:59:10,319 --> 00:59:13,359
things in cloud in it

00:59:13,820 --> 00:59:17,839
[Music]

00:59:15,599 --> 00:59:17,839
well

00:59:21,920 --> 00:59:25,760
here have you i'm navigating a bit of

00:59:24,799 --> 00:59:27,839
uni

00:59:25,760 --> 00:59:29,520
because the presentation path to you can

00:59:27,839 --> 00:59:31,520
see this is the formulas

00:59:29,520 --> 00:59:33,599
with forms you can see that is well this

00:59:31,520 --> 00:59:36,799
is originally a yaml file

00:59:33,599 --> 00:59:39,680
but super easy to use

00:59:36,799 --> 00:59:42,000
it renders to something that's or if i

00:59:39,680 --> 00:59:43,920
want to deploy prometheus exporters

00:59:42,000 --> 00:59:45,599
say i want to deploy permission exporter

00:59:43,920 --> 00:59:48,000
i just need to click this

00:59:45,599 --> 00:59:49,920
go to a permission exporter and say hey

00:59:48,000 --> 00:59:51,839
and i can even label the rest proxy if i

00:59:49,920 --> 00:59:54,319
want to deploy several

00:59:51,839 --> 00:59:55,680
node exporter apache exporters postgres

00:59:54,319 --> 00:59:58,720
i'm going to deploy

00:59:55,680 --> 01:00:01,280
here this and then

00:59:58,720 --> 01:00:02,400
save the formula and then i need to

01:00:01,280 --> 01:00:05,680
apply the highest state

01:00:02,400 --> 01:00:07,280
which i can schedule at any time i can

01:00:05,680 --> 01:00:08,880
even add you a new action chain to

01:00:07,280 --> 01:00:10,079
perform this together with other stuff

01:00:08,880 --> 01:00:13,680
and

01:00:10,079 --> 01:00:15,760
it will just happen that's it and it's

01:00:13,680 --> 01:00:17,359
we're at the top of the hour thank you

01:00:15,760 --> 01:00:18,640
very much for attending if you're

01:00:17,359 --> 01:00:21,280
interested join our

01:00:18,640 --> 01:00:23,040
unique community hours uh friday in two

01:00:21,280 --> 01:00:24,640
weeks so four pm

01:00:23,040 --> 01:00:26,240
uh european time there's more

01:00:24,640 --> 01:00:28,000
information in the uni announcer you

01:00:26,240 --> 01:00:28,640
need the bell and the uni uses mailing

01:00:28,000 --> 01:00:31,040
list

01:00:28,640 --> 01:00:32,319
if you want to translate to uni join the

01:00:31,040 --> 01:00:34,880
uni translation

01:00:32,319 --> 01:00:35,680
translation a mailing list we are also

01:00:34,880 --> 01:00:39,599
available

01:00:35,680 --> 01:00:41,520
on guitar and yeah you can also find me

01:00:39,599 --> 01:00:43,839
on my email

01:00:41,520 --> 01:00:43,839

YouTube URL: https://www.youtube.com/watch?v=1T1VyyFdV2E


