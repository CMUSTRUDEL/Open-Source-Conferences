Title: Creating a video conferencing system with Kurento
Publication date: 2020-11-05
Playlist: openSUSE + LibreOffice Conference 2020
Description: 
	Subscribe â–ºhttp://bit.ly/1G2KKZl

Offical Website â–ºhttps://www.opensuse.org
Follow us on Twitter â–º https://twitter.com/openSUSE
Like us on Facebook â–º https://www.facebook.com/en.openSUSE
Captions: 
	00:00:02,080 --> 00:00:07,520
so everybody is

00:00:04,480 --> 00:00:12,320
hearing me well they speak a little

00:00:07,520 --> 00:00:16,720
yes louder great sounds good

00:00:12,320 --> 00:00:20,080
okay hello from mexico it's uh

00:00:16,720 --> 00:00:20,080
six a.m in the morning

00:00:20,400 --> 00:00:24,480
when i'm going to talk about currento

00:00:22,640 --> 00:00:28,840
currento is a

00:00:24,480 --> 00:00:31,840
media server we have a little agenda

00:00:28,840 --> 00:00:36,079
me i will talk about a little

00:00:31,840 --> 00:00:40,640
about the rtmp hls and webrtc

00:00:36,079 --> 00:00:43,120
uh why i choose current over orders

00:00:40,640 --> 00:00:45,280
and i will talk about a real life

00:00:43,120 --> 00:00:47,840
scenario called poll access

00:00:45,280 --> 00:00:49,120
and i will tell you how i achieved to

00:00:47,840 --> 00:00:50,239
have some resilience in the

00:00:49,120 --> 00:00:53,520
infrastructure

00:00:50,239 --> 00:00:56,239
and that will be all

00:00:53,520 --> 00:00:58,800
for the stars who am i my name is andre

00:00:56,239 --> 00:00:58,800
stegen studio

00:00:59,520 --> 00:01:04,280
many people know me as cryptos i started

00:01:02,800 --> 00:01:07,600
using linux around

00:01:04,280 --> 00:01:10,720
1996. i'm a quite

00:01:07,600 --> 00:01:14,290
old user currently i'm living

00:01:10,720 --> 00:01:15,759
in mexico city i

00:01:14,290 --> 00:01:20,000
[Music]

00:01:15,759 --> 00:01:23,360
work i own an enterprise dedicated to

00:01:20,000 --> 00:01:26,560
creating a core banking application

00:01:23,360 --> 00:01:29,280
for small banks and

00:01:26,560 --> 00:01:31,040
also i'm co-owner of a website called

00:01:29,280 --> 00:01:34,079
poll access online

00:01:31,040 --> 00:01:38,000
because my wife is a

00:01:34,079 --> 00:01:41,119
consummate a competitive pole dancer

00:01:38,000 --> 00:01:42,159
she owns a school and with the pandemic

00:01:41,119 --> 00:01:45,600
we need to do

00:01:42,159 --> 00:01:50,240
a lot of stuff to keep the business

00:01:45,600 --> 00:01:53,600
going so a little bit of history

00:01:50,240 --> 00:01:56,880
well rtpm

00:01:53,600 --> 00:02:00,320
was a protocol by

00:01:56,880 --> 00:02:03,920
adobe it was mainly used by

00:02:00,320 --> 00:02:03,920
you required

00:02:04,640 --> 00:02:11,920
flash to see it and

00:02:08,800 --> 00:02:14,959
in response of this property technology

00:02:11,920 --> 00:02:16,400
apple gave us another proprietary

00:02:14,959 --> 00:02:20,239
technology

00:02:16,400 --> 00:02:23,840
which was hls both technologies

00:02:20,239 --> 00:02:27,680
are a little bit laggy between 13

00:02:23,840 --> 00:02:30,879
to 45 seconds in average

00:02:27,680 --> 00:02:34,160
you need an additional software to

00:02:30,879 --> 00:02:37,280
encode your video it can be

00:02:34,160 --> 00:02:38,080
a high quality video medium quality

00:02:37,280 --> 00:02:40,560
video

00:02:38,080 --> 00:02:41,760
but mainly you will need an additional

00:02:40,560 --> 00:02:45,040
software or

00:02:41,760 --> 00:02:48,959
there was a ecology of providers

00:02:45,040 --> 00:02:52,160
who even provided a hardware and then

00:02:48,959 --> 00:02:55,200
we have a webrtc webrtc

00:02:52,160 --> 00:02:58,080
is uh designed for the web

00:02:55,200 --> 00:02:58,480
is more flexible is using new codecs

00:02:58,080 --> 00:03:02,000
like

00:02:58,480 --> 00:03:04,800
vp9 and is still evolving

00:03:02,000 --> 00:03:05,519
for example the last thing that was

00:03:04,800 --> 00:03:09,040
added to

00:03:05,519 --> 00:03:11,920
webrtc is redundant audio channels

00:03:09,040 --> 00:03:13,360
this is mainly because they are seeking

00:03:11,920 --> 00:03:15,840
to be an

00:03:13,360 --> 00:03:16,480
a standard industry standard for for

00:03:15,840 --> 00:03:19,680
example

00:03:16,480 --> 00:03:23,599
a high quality concert where audio is

00:03:19,680 --> 00:03:28,000
important and webrtc have

00:03:23,599 --> 00:03:28,000
something called the sfu

00:03:28,319 --> 00:03:34,319
it's a type of configuration

00:03:31,440 --> 00:03:34,319
and it rules

00:03:34,560 --> 00:03:38,879
what are the type of configurations we

00:03:36,239 --> 00:03:42,159
can achieve with webrtc

00:03:38,879 --> 00:03:43,440
well actually we have three main types

00:03:42,159 --> 00:03:46,799
of configurations

00:03:43,440 --> 00:03:47,920
one of it is mesh in which each client

00:03:46,799 --> 00:03:50,959
communicates with

00:03:47,920 --> 00:03:53,120
each other client and you can see that

00:03:50,959 --> 00:03:56,879
for example in this little chart

00:03:53,120 --> 00:04:00,319
that if you have uh five

00:03:56,879 --> 00:04:04,959
users you have almost four

00:04:00,319 --> 00:04:07,760
links for each user except your own link

00:04:04,959 --> 00:04:09,760
almost a high quality link is four

00:04:07,760 --> 00:04:12,560
megabytes per second

00:04:09,760 --> 00:04:14,480
so in the end you are transmitting 20

00:04:12,560 --> 00:04:17,120
megabytes per second

00:04:14,480 --> 00:04:17,519
and for example here in mexico talking

00:04:17,120 --> 00:04:20,959
about

00:04:17,519 --> 00:04:23,840
uh having 20 megabytes per second uh

00:04:20,959 --> 00:04:25,360
continuously it's like a really really

00:04:23,840 --> 00:04:28,800
really high bandwidth

00:04:25,360 --> 00:04:32,080
and not everybody has this type of

00:04:28,800 --> 00:04:35,440
bandwidth then we have the

00:04:32,080 --> 00:04:39,280
selected forward unit which is at the

00:04:35,440 --> 00:04:43,840
very right where

00:04:39,280 --> 00:04:43,840
you transmit to

00:04:44,240 --> 00:04:48,960
webrtc have the capabilities to uh to

00:04:46,800 --> 00:04:52,960
try to connect in the most efficient

00:04:48,960 --> 00:04:55,919
form but still you are transmitting

00:04:52,960 --> 00:04:56,720
your feed to anybody of the other other

00:04:55,919 --> 00:05:01,440
streets

00:04:56,720 --> 00:05:04,479
other people using an intermediary

00:05:01,440 --> 00:05:05,199
so in the end you have five uh people

00:05:04,479 --> 00:05:08,840
connections

00:05:05,199 --> 00:05:11,360
to have a high five high

00:05:08,840 --> 00:05:14,000
quality pictures

00:05:11,360 --> 00:05:15,600
then you need to use 25 megabytes per

00:05:14,000 --> 00:05:19,440
second so we have a

00:05:15,600 --> 00:05:19,440
worse scenario than mesh

00:05:21,280 --> 00:05:29,840
megabyte or megabit actually they

00:05:24,320 --> 00:05:29,840
are mega megabytes

00:05:30,160 --> 00:05:36,840
so it's quite consuming and

00:05:33,280 --> 00:05:39,600
then we have a mcu which is

00:05:36,840 --> 00:05:43,520
a you transmit

00:05:39,600 --> 00:05:46,720
your information to a central uh server

00:05:43,520 --> 00:05:50,320
and these servers uh composite only the

00:05:46,720 --> 00:05:53,680
image and only sends one fifth

00:05:50,320 --> 00:05:57,840
to each of the clients this becomes like

00:05:53,680 --> 00:05:59,840
very very very efficient and uh

00:05:57,840 --> 00:06:01,680
one of the main reasons why i choose

00:05:59,840 --> 00:06:05,759
current is because kurento

00:06:01,680 --> 00:06:08,880
is mcu by design

00:06:05,759 --> 00:06:10,880
why kurento well kurento is

00:06:08,880 --> 00:06:12,560
a media server with advanced

00:06:10,880 --> 00:06:16,880
capabilities for example

00:06:12,560 --> 00:06:20,080
it use open streamer

00:06:16,880 --> 00:06:23,199
and it use ffmp it's

00:06:20,080 --> 00:06:27,120
completely open source you can

00:06:23,199 --> 00:06:30,240
access the whole project at github

00:06:27,120 --> 00:06:33,840
is mcu by design this

00:06:30,240 --> 00:06:35,280
is really important because it gives you

00:06:33,840 --> 00:06:37,759
the opportunity to have

00:06:35,280 --> 00:06:39,600
a much more control over the

00:06:37,759 --> 00:06:42,000
communications

00:06:39,600 --> 00:06:42,720
it's pluggable you can develop your own

00:06:42,000 --> 00:06:46,160
plugins

00:06:42,720 --> 00:06:49,919
they have a few plugins and you can

00:06:46,160 --> 00:06:53,599
develop tools or the the tooling for

00:06:49,919 --> 00:06:57,039
developing solutions above current

00:06:53,599 --> 00:06:58,319
can be done on node.js there is an npm

00:06:57,039 --> 00:07:01,440
package

00:06:58,319 --> 00:07:05,280
you could use by media gas if you are

00:07:01,440 --> 00:07:07,440
big enough they have a java tooling

00:07:05,280 --> 00:07:09,280
and actually you can write it in

00:07:07,440 --> 00:07:12,880
whatever you like because

00:07:09,280 --> 00:07:13,919
kurento has an rpc client with the media

00:07:12,880 --> 00:07:17,360
server

00:07:13,919 --> 00:07:19,199
so as far as you are talking to

00:07:17,360 --> 00:07:21,759
current media server using their

00:07:19,199 --> 00:07:25,840
protocol you can control

00:07:21,759 --> 00:07:29,120
current with any device and any language

00:07:25,840 --> 00:07:31,840
you like the other thing that i like

00:07:29,120 --> 00:07:32,720
about kurento is that this has a fairly

00:07:31,840 --> 00:07:36,240
good

00:07:32,720 --> 00:07:37,360
documentation no documentation is

00:07:36,240 --> 00:07:40,720
perfect

00:07:37,360 --> 00:07:44,560
but actually the examples

00:07:40,720 --> 00:07:50,000
most of the examples you get they work

00:07:44,560 --> 00:07:52,800
the community is fairly active

00:07:50,000 --> 00:07:54,000
obviously there are a couple of people

00:07:52,800 --> 00:07:56,400
who are who

00:07:54,000 --> 00:07:59,199
answer most of the of the questions juan

00:07:56,400 --> 00:08:02,879
navarro is one of them

00:07:59,199 --> 00:08:05,599
the main developer of currento and

00:08:02,879 --> 00:08:05,599
they have a

00:08:06,000 --> 00:08:13,759
property option or

00:08:10,319 --> 00:08:16,800
commercial options call b2

00:08:13,759 --> 00:08:20,400
so it's uh they give you very support

00:08:16,800 --> 00:08:24,560
but actually they use currento as a

00:08:20,400 --> 00:08:28,960
foundation why couldn't and not

00:08:24,560 --> 00:08:32,880
others obviously when i was trying to

00:08:28,960 --> 00:08:37,200
dive into the world of media servers

00:08:32,880 --> 00:08:40,560
i get to know and

00:08:37,200 --> 00:08:43,519
but and it at the end is not so open

00:08:40,560 --> 00:08:44,480
the community edition they have uh

00:08:43,519 --> 00:08:47,680
artificial

00:08:44,480 --> 00:08:50,000
uh last about another additional 13

00:08:47,680 --> 00:08:54,560
seconds

00:08:50,000 --> 00:08:57,040
and they are too oriented to be a

00:08:54,560 --> 00:08:57,920
conference room i'm going to talk a

00:08:57,040 --> 00:09:00,560
little bit

00:08:57,920 --> 00:09:01,760
about this conference room in the real

00:09:00,560 --> 00:09:05,120
life

00:09:01,760 --> 00:09:08,240
requirements obviously i

00:09:05,120 --> 00:09:12,080
i saw gtc but uh it

00:09:08,240 --> 00:09:15,440
can be like a daunting like uh

00:09:12,080 --> 00:09:18,000
difficult to implement

00:09:15,440 --> 00:09:18,880
too much to orient it to be like a

00:09:18,000 --> 00:09:22,080
conference

00:09:18,880 --> 00:09:23,279
room like just like we are using right

00:09:22,080 --> 00:09:27,040
now

00:09:23,279 --> 00:09:30,399
obviously there is the rtp

00:09:27,040 --> 00:09:33,920
nginx implementation

00:09:30,399 --> 00:09:37,040
it's a good it's a

00:09:33,920 --> 00:09:39,680
has a very it's

00:09:37,040 --> 00:09:41,760
very well supported but it's not like

00:09:39,680 --> 00:09:43,360
not very flexible and obviously we are

00:09:41,760 --> 00:09:46,399
talking about their tpm

00:09:43,360 --> 00:09:47,040
so not what i want because i wanted to

00:09:46,399 --> 00:09:51,839
use

00:09:47,040 --> 00:09:51,839
the the webcam

00:09:51,920 --> 00:09:55,279
yes it's an artificial luck because that

00:09:54,880 --> 00:09:58,480
lag

00:09:55,279 --> 00:10:01,519
is uh and the the lack

00:09:58,480 --> 00:10:03,519
is when you purchase the not the

00:10:01,519 --> 00:10:04,079
community version when you purchase a

00:10:03,519 --> 00:10:07,600
license

00:10:04,079 --> 00:10:11,600
and a good version this lag

00:10:07,600 --> 00:10:13,680
is eliminated and

00:10:11,600 --> 00:10:15,120
that's where mostly the all the

00:10:13,680 --> 00:10:18,399
implementations that i

00:10:15,120 --> 00:10:21,440
was exploring and

00:10:18,399 --> 00:10:23,680
i decided for current

00:10:21,440 --> 00:10:24,560
in a nutshell if you want to install

00:10:23,680 --> 00:10:28,640
kurento

00:10:24,560 --> 00:10:32,160
please please use the docker image

00:10:28,640 --> 00:10:35,279
because current is

00:10:32,160 --> 00:10:38,640
built upon a specific version of

00:10:35,279 --> 00:10:40,240
went off until with a specific version

00:10:38,640 --> 00:10:42,720
of open streaming

00:10:40,240 --> 00:10:44,720
and even the open streamer that kurento

00:10:42,720 --> 00:10:47,120
use is a little bit modified we are

00:10:44,720 --> 00:10:49,279
in the working of uh upgrading the

00:10:47,120 --> 00:10:53,279
version of

00:10:49,279 --> 00:10:57,600
the open streamer you can build it

00:10:53,279 --> 00:10:59,839
by hand but it's a little bit complex

00:10:57,600 --> 00:11:02,160
because everything is tooled around

00:10:59,839 --> 00:11:04,480
ubuntu

00:11:02,160 --> 00:11:06,880
we will need what is called an s-tune

00:11:04,480 --> 00:11:10,160
server to pierce

00:11:06,880 --> 00:11:10,160
to peers nat

00:11:10,480 --> 00:11:17,519
google offers a free student servers

00:11:14,399 --> 00:11:20,480
the tutorials believe me they are really

00:11:17,519 --> 00:11:22,160
really really good and current being

00:11:20,480 --> 00:11:25,200
only a media server

00:11:22,160 --> 00:11:26,240
we need to add a signaling server who

00:11:25,200 --> 00:11:29,600
will handle

00:11:26,240 --> 00:11:32,959
all the business logic

00:11:29,600 --> 00:11:32,959
to access current

00:11:33,680 --> 00:11:40,160
this is how current to see

00:11:36,720 --> 00:11:42,160
itself we have the current server

00:11:40,160 --> 00:11:44,720
who has a media repository because

00:11:42,160 --> 00:11:48,560
kurento can

00:11:44,720 --> 00:11:48,959
inject local videos or remote videos to

00:11:48,560 --> 00:11:52,160
the

00:11:48,959 --> 00:11:56,880
fifth it can receive

00:11:52,160 --> 00:12:00,959
rtp http or webrtc feeds

00:11:56,880 --> 00:12:04,320
it can deliver

00:12:00,959 --> 00:12:08,320
rtp http or webrtc

00:12:04,320 --> 00:12:10,399
feeds and most of the time we pair

00:12:08,320 --> 00:12:11,440
a current server with the application

00:12:10,399 --> 00:12:15,120
server

00:12:11,440 --> 00:12:20,160
like as i told you uh you can develop on

00:12:15,120 --> 00:12:20,160
node.js or you can develop it on java

00:12:20,240 --> 00:12:25,839
i did it on node.js i actually in this

00:12:24,160 --> 00:12:29,760
pandemic needs to learn

00:12:25,839 --> 00:12:33,680
nodes and and conento

00:12:29,760 --> 00:12:37,360
they recommend the use of websocket

00:12:33,680 --> 00:12:40,720
signaling you can use a

00:12:37,360 --> 00:12:44,480
restful signaling or even swap signaling

00:12:40,720 --> 00:12:47,680
and there is even a patch to control

00:12:44,480 --> 00:12:50,720
current server with

00:12:47,680 --> 00:12:53,920
zip signaling so we have the

00:12:50,720 --> 00:12:56,000
application server providing us a

00:12:53,920 --> 00:12:58,480
business logic and we have current

00:12:56,000 --> 00:13:03,680
server providing us

00:12:58,480 --> 00:13:03,680
video composite servers services

00:13:03,760 --> 00:13:10,560
currently provide us with a little

00:13:07,200 --> 00:13:14,320
bit of building blocks we have

00:13:10,560 --> 00:13:17,519
protocols and codecs which can be

00:13:14,320 --> 00:13:21,120
bi-directional like a webrtc endpoint

00:13:17,519 --> 00:13:22,959
of the rtp endpoint or unidirectional

00:13:21,120 --> 00:13:27,760
like http post

00:13:22,959 --> 00:13:31,200
endpoint then we have a repository

00:13:27,760 --> 00:13:32,480
building blocks we can record our

00:13:31,200 --> 00:13:37,040
sessions

00:13:32,480 --> 00:13:40,639
server size we can apply a video

00:13:37,040 --> 00:13:44,959
server side so this player can be

00:13:40,639 --> 00:13:48,160
injected to our webrtc or rtp endpoint

00:13:44,959 --> 00:13:48,639
we have uh the gstreamer filter we can

00:13:48,160 --> 00:13:51,360
do

00:13:48,639 --> 00:13:51,680
whatever we want with the gstreamer they

00:13:51,360 --> 00:13:55,279
have

00:13:51,680 --> 00:13:58,480
implemented a silver

00:13:55,279 --> 00:14:02,160
filter they have a vision computing

00:13:58,480 --> 00:14:04,330
and you can recognize qr codes

00:14:02,160 --> 00:14:05,760
and they have a

00:14:04,330 --> 00:14:10,639
[Music]

00:14:05,760 --> 00:14:10,639
plugin for overlay filter who can

00:14:10,880 --> 00:14:18,880
draw on your face and they have another

00:14:15,120 --> 00:14:21,760
plugin which you can overlay image

00:14:18,880 --> 00:14:22,639
and they have uh also chroma key but

00:14:21,760 --> 00:14:25,279
it's like uh

00:14:22,639 --> 00:14:26,480
not to be very well implemented it's

00:14:25,279 --> 00:14:29,760
like just

00:14:26,480 --> 00:14:30,959
a beta testing and we have a group

00:14:29,760 --> 00:14:34,079
communications

00:14:30,959 --> 00:14:36,880
that these are like the dispatchers

00:14:34,079 --> 00:14:36,880
and the main

00:14:37,680 --> 00:14:41,760
the main dispatcher they have is the

00:14:40,560 --> 00:14:44,000
composite

00:14:41,760 --> 00:14:44,800
the composite is very important because

00:14:44,000 --> 00:14:48,800
composites

00:14:44,800 --> 00:14:52,079
receive for example two webrtc endpoints

00:14:48,800 --> 00:14:55,199
mix them on server side

00:14:52,079 --> 00:14:58,160
and give to the user one single

00:14:55,199 --> 00:14:59,600
single video image of the two image

00:14:58,160 --> 00:15:02,160
composites

00:14:59,600 --> 00:15:02,800
this allows us for example this allowed

00:15:02,160 --> 00:15:05,839
me

00:15:02,800 --> 00:15:10,000
to have a two

00:15:05,839 --> 00:15:13,360
people up to four people in the same

00:15:10,000 --> 00:15:15,519
video but on remote positions because

00:15:13,360 --> 00:15:18,880
each of them was transmitting their own

00:15:15,519 --> 00:15:19,519
web rtc signal to the current media

00:15:18,880 --> 00:15:22,880
server

00:15:19,519 --> 00:15:26,240
i got a composite and the users were

00:15:22,880 --> 00:15:29,600
able to see a single screen

00:15:26,240 --> 00:15:33,279
with the four people but using only

00:15:29,600 --> 00:15:37,360
the bandwidth requirement for one screen

00:15:33,279 --> 00:15:40,160
so that was like the my main point

00:15:37,360 --> 00:15:42,399
why i use it there are another couple of

00:15:40,160 --> 00:15:45,839
uh

00:15:42,399 --> 00:15:48,240
of communications hubs actually

00:15:45,839 --> 00:15:49,680
they call internally communication hubs

00:15:48,240 --> 00:15:53,279
the dispatcher

00:15:49,680 --> 00:15:55,839
you can connect multiple clients

00:15:53,279 --> 00:15:57,199
and you can select which one of it is

00:15:55,839 --> 00:16:00,399
going to be the source

00:15:57,199 --> 00:16:01,519
and it have to automatically display the

00:16:00,399 --> 00:16:04,720
source to

00:16:01,519 --> 00:16:07,680
every to every other

00:16:04,720 --> 00:16:08,480
connection and you can have a dispatcher

00:16:07,680 --> 00:16:12,160
one

00:16:08,480 --> 00:16:15,839
too many which uh you select

00:16:12,160 --> 00:16:19,600
you can select one to one

00:16:15,839 --> 00:16:20,000
who can see the one part and who can see

00:16:19,600 --> 00:16:24,720
the

00:16:20,000 --> 00:16:26,959
the other part is like a switcher board

00:16:24,720 --> 00:16:29,519
and this word like the building block

00:16:26,959 --> 00:16:29,519
for couldn't

00:16:29,839 --> 00:16:34,079
all access online well with the with the

00:16:32,560 --> 00:16:37,120
pandemic

00:16:34,079 --> 00:16:38,079
obviously and the shoot down if you have

00:16:37,120 --> 00:16:41,839
a

00:16:38,079 --> 00:16:43,440
training place you knew that you were

00:16:41,839 --> 00:16:47,440
doing two extensions

00:16:43,440 --> 00:16:50,560
so well my wife as my

00:16:47,440 --> 00:16:52,560
ceo gave me a series of requirements

00:16:50,560 --> 00:16:57,519
because she wanted to have

00:16:52,560 --> 00:17:00,399
a site which allowed them to provide a

00:16:57,519 --> 00:17:00,800
new revenue stream to the people and we

00:17:00,399 --> 00:17:04,000
ended

00:17:00,800 --> 00:17:05,439
up creating poll access online with a

00:17:04,000 --> 00:17:10,400
few

00:17:05,439 --> 00:17:12,880
specific requirements for example

00:17:10,400 --> 00:17:14,160
the live stream should be oriented to

00:17:12,880 --> 00:17:17,199
show

00:17:14,160 --> 00:17:17,679
not to conference we don't need a

00:17:17,199 --> 00:17:20,959
hundred

00:17:17,679 --> 00:17:24,799
cameras uh we look well we need

00:17:20,959 --> 00:17:27,839
our uh thousand viewers

00:17:24,799 --> 00:17:30,640
with this in mind uh

00:17:27,839 --> 00:17:31,360
the solutions like gtc and everything

00:17:30,640 --> 00:17:34,640
which is

00:17:31,360 --> 00:17:38,240
a more toward conference room wasn't

00:17:34,640 --> 00:17:40,480
like my own uh selection

00:17:38,240 --> 00:17:41,679
and science i can build everything that

00:17:40,480 --> 00:17:44,000
i wanted with current

00:17:41,679 --> 00:17:45,760
that's one of the major reasons why i

00:17:44,000 --> 00:17:49,360
choose korento

00:17:45,760 --> 00:17:54,160
also there was a requirement they wanted

00:17:49,360 --> 00:17:56,960
to inject video to the live stream

00:17:54,160 --> 00:17:57,760
you know that if you inject a video if

00:17:56,960 --> 00:18:00,960
normally

00:17:57,760 --> 00:18:04,960
when you are using

00:18:00,960 --> 00:18:07,600
hls or rtpm and you use obs

00:18:04,960 --> 00:18:09,280
you reproduce your video on your

00:18:07,600 --> 00:18:13,280
computer

00:18:09,280 --> 00:18:15,440
and you screen capture the video

00:18:13,280 --> 00:18:16,559
and the audio locally and you have like

00:18:15,440 --> 00:18:20,000
a lot of loss

00:18:16,559 --> 00:18:22,480
of quality and the idea she was

00:18:20,000 --> 00:18:23,200
telling me as the if this was a

00:18:22,480 --> 00:18:26,080
competition

00:18:23,200 --> 00:18:27,039
an offline competition and she was

00:18:26,080 --> 00:18:30,880
presenting

00:18:27,039 --> 00:18:35,200
the video of a competitor

00:18:30,880 --> 00:18:38,320
it has to remain with the more quality

00:18:35,200 --> 00:18:39,120
she required that she wanted to be able

00:18:38,320 --> 00:18:43,600
to receive

00:18:39,120 --> 00:18:46,880
tips so this wasn't uh a requirement

00:18:43,600 --> 00:18:49,280
for the video per se but it was

00:18:46,880 --> 00:18:50,080
like a requirement that i was uh not

00:18:49,280 --> 00:18:52,720
going to have

00:18:50,080 --> 00:18:53,760
in any other platform like uh and or

00:18:52,720 --> 00:18:56,960
like

00:18:53,760 --> 00:18:58,559
gtc and doing all the modifications

00:18:56,960 --> 00:19:01,919
required to have the

00:18:58,559 --> 00:19:06,080
signaling and everything coordinated uh

00:19:01,919 --> 00:19:08,400
it was time consuming

00:19:06,080 --> 00:19:11,120
because keep in mind that this project

00:19:08,400 --> 00:19:11,120
was developed

00:19:11,200 --> 00:19:14,240
bollaxes have like two years of

00:19:13,039 --> 00:19:17,039
existence

00:19:14,240 --> 00:19:17,919
the live streaming part was developed in

00:19:17,039 --> 00:19:21,039
the first

00:19:17,919 --> 00:19:22,799
couple of months of the pandemic

00:19:21,039 --> 00:19:25,679
so actually you can develop really

00:19:22,799 --> 00:19:26,559
really quick and she always and she also

00:19:25,679 --> 00:19:29,840
wanted to

00:19:26,559 --> 00:19:30,480
have a face-to-face video which is like

00:19:29,840 --> 00:19:33,600
a

00:19:30,480 --> 00:19:37,360
implementation on fx sfu

00:19:33,600 --> 00:19:41,280
over a main cu which was like providing

00:19:37,360 --> 00:19:46,960
private channels of communications

00:19:41,280 --> 00:19:50,160
so with these requirements there were uh

00:19:46,960 --> 00:19:51,360
two features that were that were added

00:19:50,160 --> 00:19:54,640
to prolaxs

00:19:51,360 --> 00:19:57,200
it was a live error and private sessions

00:19:54,640 --> 00:19:57,760
periodizations was the simpler because

00:19:57,200 --> 00:20:01,840
it was

00:19:57,760 --> 00:20:04,960
like a phone call face-to-face facetime

00:20:01,840 --> 00:20:06,000
actually you can start with this because

00:20:04,960 --> 00:20:09,280
the

00:20:06,000 --> 00:20:12,880
example provided with kurento works

00:20:09,280 --> 00:20:16,240
flawlessly out of the box and

00:20:12,880 --> 00:20:17,520
i can bet you that between in a couple

00:20:16,240 --> 00:20:20,799
of hours you will have

00:20:17,520 --> 00:20:23,919
this demo running and

00:20:20,799 --> 00:20:27,360
the other requirement was a livestr

00:20:23,919 --> 00:20:30,559
with the focus of uh providing a

00:20:27,360 --> 00:20:33,039
show experience like you have a very few

00:20:30,559 --> 00:20:34,080
people interacting on screen and you

00:20:33,039 --> 00:20:37,440
have a wide

00:20:34,080 --> 00:20:39,840
audience and you have a

00:20:37,440 --> 00:20:40,880
much much little uh bandwidth

00:20:39,840 --> 00:20:43,520
requirements

00:20:40,880 --> 00:20:45,520
but we will talk about in a little

00:20:43,520 --> 00:20:48,559
moment

00:20:45,520 --> 00:20:51,600
so what was the architecture

00:20:48,559 --> 00:20:53,440
that i was unable uh able to implement

00:20:51,600 --> 00:20:56,640
with

00:20:53,440 --> 00:21:00,000
current actually if you have

00:20:56,640 --> 00:21:04,080
some audio video knowledge you know that

00:21:00,000 --> 00:21:07,280
uh the main uh channels are we

00:21:04,080 --> 00:21:11,440
were going to be called masters and uh

00:21:07,280 --> 00:21:14,799
all the additions plugged to the master

00:21:11,440 --> 00:21:17,919
are called hoops or ports

00:21:14,799 --> 00:21:20,240
so actually i made me i made myself

00:21:17,919 --> 00:21:21,600
a two-channel architecture i have a

00:21:20,240 --> 00:21:24,799
master tool

00:21:21,600 --> 00:21:28,480
which was a composite

00:21:24,799 --> 00:21:31,919
so every camera connected to the master

00:21:28,480 --> 00:21:35,200
will become as one single screen

00:21:31,919 --> 00:21:38,799
we have i had a master one which was

00:21:35,200 --> 00:21:41,919
a single camera fifth and i have an

00:21:38,799 --> 00:21:46,080
intermediate uh monitor to see

00:21:41,919 --> 00:21:50,000
which field i was feeling to my users

00:21:46,080 --> 00:21:52,720
and i was i have a external video player

00:21:50,000 --> 00:21:57,360
which allowed me to

00:21:52,720 --> 00:21:57,360
reproduce in live video inside my fifth

00:21:57,440 --> 00:22:04,080
and uh i was able for example

00:22:00,559 --> 00:22:07,600
to select how many cohorts

00:22:04,080 --> 00:22:11,120
i wanted to have on screen from one

00:22:07,600 --> 00:22:12,960
to four and the

00:22:11,120 --> 00:22:14,400
couldn't automatically when they

00:22:12,960 --> 00:22:18,240
detected that the

00:22:14,400 --> 00:22:21,360
host is that video signal is lost

00:22:18,240 --> 00:22:22,480
it reconstruct the screen so you can

00:22:21,360 --> 00:22:25,520
have a two people

00:22:22,480 --> 00:22:26,000
three people four people and then you

00:22:25,520 --> 00:22:29,039
have

00:22:26,000 --> 00:22:31,840
one people and actually uh

00:22:29,039 --> 00:22:33,679
signs you are controlling the signal

00:22:31,840 --> 00:22:36,960
feed from the server

00:22:33,679 --> 00:22:37,600
when i was proposing a video i was able

00:22:36,960 --> 00:22:40,480
to

00:22:37,600 --> 00:22:41,760
switch all the users to the video feeds

00:22:40,480 --> 00:22:45,200
so they have the

00:22:41,760 --> 00:22:48,960
most quality like as a video on demand

00:22:45,200 --> 00:22:51,919
and switch back to the composite screen

00:22:48,960 --> 00:22:53,919
once the videos end because current has

00:22:51,919 --> 00:22:56,400
an internal signaling system which told

00:22:53,919 --> 00:22:59,440
me that the video is stopped playing

00:22:56,400 --> 00:23:03,679
and i was able to switch over under my

00:22:59,440 --> 00:23:06,159
infrastructure all the clients to a new

00:23:03,679 --> 00:23:06,159
client

00:23:06,320 --> 00:23:09,760
so what about the infrastructure

00:23:08,720 --> 00:23:12,480
actually

00:23:09,760 --> 00:23:12,960
for current i have a one server with h

00:23:12,480 --> 00:23:15,360
cores

00:23:12,960 --> 00:23:16,559
32 gigabytes of ram which has the

00:23:15,360 --> 00:23:19,520
currento

00:23:16,559 --> 00:23:22,159
docker image the stone server and the

00:23:19,520 --> 00:23:26,080
virtual machine for the webpage

00:23:22,159 --> 00:23:28,640
the longest use that i have had with

00:23:26,080 --> 00:23:30,080
this configuration was a four hours

00:23:28,640 --> 00:23:33,520
continuous shows

00:23:30,080 --> 00:23:34,640
with two co-hosts providing in-line

00:23:33,520 --> 00:23:38,240
videos

00:23:34,640 --> 00:23:41,760
and it was the top number of users was

00:23:38,240 --> 00:23:45,520
250 250 viewers

00:23:41,760 --> 00:23:48,799
with an average of 135 users

00:23:45,520 --> 00:23:51,840
and i use two proxy servers

00:23:48,799 --> 00:23:54,559
because obviously 250 viewers

00:23:51,840 --> 00:23:55,120
plugged to one single server i will have

00:23:54,559 --> 00:23:58,000
like

00:23:55,120 --> 00:23:59,520
bandwidth mostly bandwidth restrictions

00:23:58,000 --> 00:24:01,279
so

00:23:59,520 --> 00:24:03,200
how do i achieve resilience in the

00:24:01,279 --> 00:24:06,400
infrastructure well

00:24:03,200 --> 00:24:09,120
or all pal ng x

00:24:06,400 --> 00:24:09,679
come to the rescue because what i did

00:24:09,120 --> 00:24:13,120
was

00:24:09,679 --> 00:24:15,760
uh i can set up uh

00:24:13,120 --> 00:24:16,159
virtual machines uh with an api provided

00:24:15,760 --> 00:24:19,200
by

00:24:16,159 --> 00:24:21,840
a folder in in my case

00:24:19,200 --> 00:24:23,600
i fire up a virtual machine which cost

00:24:21,840 --> 00:24:27,200
me

00:24:23,600 --> 00:24:30,840
dollars and not even dollars uh

00:24:27,200 --> 00:24:35,360
percent of dollars the 100 of those

00:24:30,840 --> 00:24:38,960
cents a little uh very little

00:24:35,360 --> 00:24:39,679
and i set up uh engine x i stream to the

00:24:38,960 --> 00:24:42,720
nginx

00:24:39,679 --> 00:24:43,440
and i let the user connect to the engine

00:24:42,720 --> 00:24:46,240
and servers

00:24:43,440 --> 00:24:46,880
so i have all my processing power in the

00:24:46,240 --> 00:24:49,039
composite

00:24:46,880 --> 00:24:50,000
of the composition of the image on the

00:24:49,039 --> 00:24:52,559
big server

00:24:50,000 --> 00:24:53,360
and i have as many little servers i i

00:24:52,559 --> 00:24:55,360
can

00:24:53,360 --> 00:24:56,799
and the user will connect and disconnect

00:24:55,360 --> 00:25:00,159
to the nginx

00:24:56,799 --> 00:25:03,600
not giving me over

00:25:00,159 --> 00:25:05,919
not providing me with uh overload of my

00:25:03,600 --> 00:25:09,520
main server

00:25:05,919 --> 00:25:13,600
this obviously allows me to theoretical

00:25:09,520 --> 00:25:16,960
to support

00:25:13,600 --> 00:25:19,679
thousands of users

00:25:16,960 --> 00:25:20,080
actually uh one of the biggest servers

00:25:19,679 --> 00:25:23,840
from

00:25:20,080 --> 00:25:27,039
walter like this uh four cpu with

00:25:23,840 --> 00:25:30,159
uh 16 gigabits run can

00:25:27,039 --> 00:25:33,200
with the i if i don't remember

00:25:30,159 --> 00:25:36,799
if i recall correctly it has like about

00:25:33,200 --> 00:25:40,960
uh one

00:25:36,799 --> 00:25:44,799
gigabyte or 10 gigabyte

00:25:40,960 --> 00:25:48,640
bandwidth output easily can handle

00:25:44,799 --> 00:25:48,960
about a hundred users each and since you

00:25:48,640 --> 00:25:52,080
have

00:25:48,960 --> 00:25:55,360
a per hour billing

00:25:52,080 --> 00:25:58,400
it becomes like relatively cheap

00:25:55,360 --> 00:26:01,919
to have at this type of architecture

00:25:58,400 --> 00:26:05,440
and that was all the implementation that

00:26:01,919 --> 00:26:05,440
mostly did

00:26:05,840 --> 00:26:12,000
you have some questions you can i have

00:26:09,200 --> 00:26:14,400
my twitter i answer whatever questions

00:26:12,000 --> 00:26:17,840
gets to my twitter

00:26:14,400 --> 00:26:21,600
i do some photography if you're curious

00:26:17,840 --> 00:26:25,440
and this is my choreo my email

00:26:21,600 --> 00:26:28,400
and if you have some questions i'm ready

00:26:25,440 --> 00:26:28,400
to answer

00:26:30,880 --> 00:26:41,600
thank you very much

00:26:38,080 --> 00:26:41,600
and if you're curious

00:26:48,400 --> 00:26:51,120
this is like

00:26:51,840 --> 00:27:00,159
access and uh this is how users see

00:26:57,039 --> 00:27:03,360
or schedule a new broadcast we have uh

00:27:00,159 --> 00:27:04,320
tipping options and we have paid options

00:27:03,360 --> 00:27:07,360
with all the

00:27:04,320 --> 00:27:10,799
implementations that i told you

00:27:07,360 --> 00:27:14,799
and this is

00:27:10,799 --> 00:27:17,919
uh the javascript code that is used and

00:27:14,799 --> 00:27:21,360
backend i have a

00:27:17,919 --> 00:27:26,399
function which

00:27:21,360 --> 00:27:26,399
opens the theater with actually

00:27:26,640 --> 00:27:33,520
the main secret is like we create

00:27:29,760 --> 00:27:37,120
a media pipeline which is like the

00:27:33,520 --> 00:27:40,960
room the specific room of this uh

00:27:37,120 --> 00:27:45,039
of this user and to the pipeline we add

00:27:40,960 --> 00:27:49,919
a composite and we start

00:27:45,039 --> 00:27:52,640
we have some control deletes

00:27:49,919 --> 00:27:53,919
we have for example a video function to

00:27:52,640 --> 00:27:56,480
play video

00:27:53,919 --> 00:28:00,000
which creates a port to the composite

00:27:56,480 --> 00:28:00,000
and injects to the composite

00:28:00,720 --> 00:28:04,080
we have uh some uh master of ceremony

00:28:03,600 --> 00:28:07,840
which is

00:28:04,080 --> 00:28:10,880
the owner of the transmission

00:28:07,840 --> 00:28:13,919
it negotiates with the pipeline and

00:28:10,880 --> 00:28:14,240
creates a web rtc endpoint everything of

00:28:13,919 --> 00:28:17,840
this

00:28:14,240 --> 00:28:22,159
is documented and actually

00:28:17,840 --> 00:28:26,159
most of the code comes from the examples

00:28:22,159 --> 00:28:30,080
so feel free to try to kurento

00:28:26,159 --> 00:28:33,200
it's really nice uh

00:28:30,080 --> 00:28:35,840
this like uh the monitor it's uh

00:28:33,200 --> 00:28:36,799
provide me one output signal so i can

00:28:35,840 --> 00:28:40,080
see which

00:28:36,799 --> 00:28:43,760
what it's giving to the end user

00:28:40,080 --> 00:28:47,360
i have a ad viewer which

00:28:43,760 --> 00:28:48,320
connects to the master of ceremony

00:28:47,360 --> 00:28:52,320
webrtc

00:28:48,320 --> 00:28:56,159
is is only one people or connects to the

00:28:52,320 --> 00:28:59,600
uh offering showing the master ii

00:28:56,159 --> 00:29:05,200
it connects to the composite with only

00:28:59,600 --> 00:29:05,200
one connection so i only get

00:29:05,279 --> 00:29:08,399
the feed from the composite i don't

00:29:07,520 --> 00:29:11,520
provide a feed

00:29:08,399 --> 00:29:15,200
to the composite so i don't

00:29:11,520 --> 00:29:15,200
my camera is not used

00:29:16,240 --> 00:29:24,159
and there is

00:29:19,279 --> 00:29:26,960
fairly plain by nila

00:29:24,159 --> 00:29:30,080
using all the documentations that is

00:29:26,960 --> 00:29:30,080
provided by current

00:29:34,240 --> 00:29:41,600
so i think that i'm

00:29:38,559 --> 00:29:46,320
right on time

00:29:41,600 --> 00:29:46,320
and any other questions

00:29:47,600 --> 00:29:50,799
thank you gerald i tried to be as clear

00:29:50,240 --> 00:29:55,279
as

00:29:50,799 --> 00:30:00,640
as i could at 6 00 in the morning

00:29:55,279 --> 00:30:00,640
you're welcome sophie club thank you

00:30:00,720 --> 00:30:03,760
and like everything online this is a

00:30:03,200 --> 00:30:08,000
whole

00:30:03,760 --> 00:30:10,000
new experience of conference

00:30:08,000 --> 00:30:11,440
one of the other things that was uh

00:30:10,000 --> 00:30:14,960
requested by for example

00:30:11,440 --> 00:30:18,720
uh my ceo it was that

00:30:14,960 --> 00:30:18,720
we could have uh emotes

00:30:18,799 --> 00:30:26,320
so uh the presenter can see

00:30:23,600 --> 00:30:27,440
that how people is a feeling about the

00:30:26,320 --> 00:30:30,559
presentation so

00:30:27,440 --> 00:30:31,679
i implemented a clapping remote uh by

00:30:30,559 --> 00:30:36,080
leaping the mode

00:30:31,679 --> 00:30:39,120
confetti mode and log emote

00:30:36,080 --> 00:30:40,399
and it shows like a little animation on

00:30:39,120 --> 00:30:44,080
the whole screen

00:30:40,399 --> 00:30:48,399
because you as a presenter you can see

00:30:44,080 --> 00:30:50,159
like the little icons from facebook

00:30:48,399 --> 00:30:52,480
and because you are performing the

00:30:50,159 --> 00:30:55,120
direct like a couple of meters away of

00:30:52,480 --> 00:30:55,120
the computer

00:30:56,240 --> 00:31:05,840
and that was all my journey with

00:30:59,360 --> 00:31:05,840
korento to provide a service

00:31:09,840 --> 00:31:11,919

YouTube URL: https://www.youtube.com/watch?v=ztEouABEUzY


