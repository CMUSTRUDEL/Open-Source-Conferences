Title: Leap Next
Publication date: 2020-10-21
Playlist: openSUSE + LibreOffice Conference 2020
Description: 
	Subscribe ►http://bit.ly/1G2KKZl

Offical Website ►https://www.opensuse.org
Follow us on Twitter ► https://twitter.com/openSUSE
Like us on Facebook ► https://www.facebook.com/en.openSUSE
Captions: 
	00:00:00,320 --> 00:00:04,240
very good so let's talk about what is

00:00:02,639 --> 00:00:06,879
open swiss elite uh

00:00:04,240 --> 00:00:08,480
so we have two distributions in opensuse

00:00:06,879 --> 00:00:10,400
actually you could say maybe even more

00:00:08,480 --> 00:00:12,160
if you would call micros and so on but

00:00:10,400 --> 00:00:14,160
if we if we talk about the main ones

00:00:12,160 --> 00:00:17,039
it's sleep and tumbleweed right

00:00:14,160 --> 00:00:18,880
and the leap uh i like to say strength

00:00:17,039 --> 00:00:20,960
to bridge community enterprise and is

00:00:18,880 --> 00:00:22,720
the distribution which is based on the

00:00:20,960 --> 00:00:25,519
uh latest version of suse linux

00:00:22,720 --> 00:00:28,160
enterprise uh available to date

00:00:25,519 --> 00:00:30,160
with typically a 12 month release cycle

00:00:28,160 --> 00:00:31,840
i really like to use work typically here

00:00:30,160 --> 00:00:34,719
because of some of the next slides

00:00:31,840 --> 00:00:36,239
and uh the latest version of the linux

00:00:34,719 --> 00:00:38,800
enterprise is also important for the

00:00:36,239 --> 00:00:42,320
very last slide

00:00:38,800 --> 00:00:43,680
so the uh when earlier this year we had

00:00:42,320 --> 00:00:45,520
the retrospective

00:00:43,680 --> 00:00:46,719
and we asked users who do they value

00:00:45,520 --> 00:00:49,120
about leap you know

00:00:46,719 --> 00:00:50,719
how did the release go and so on um

00:00:49,120 --> 00:00:53,280
seems like the strong sides that were

00:00:50,719 --> 00:00:55,039
actually embraced by community where

00:00:53,280 --> 00:00:56,719
the installer stability seamless

00:00:55,039 --> 00:00:58,800
migrations which were

00:00:56,719 --> 00:00:59,840
reported to be effortless and and people

00:00:58,800 --> 00:01:01,680
generally loved yes

00:00:59,840 --> 00:01:03,600
like maybe not the entire you know all

00:01:01,680 --> 00:01:06,880
the esta parts but like

00:01:03,600 --> 00:01:08,400
generally they did so this would be the

00:01:06,880 --> 00:01:10,320
i would say biggest strengths of leap

00:01:08,400 --> 00:01:12,240
some of them may actually be applicable

00:01:10,320 --> 00:01:13,760
also for bumblebee but regarding

00:01:12,240 --> 00:01:16,159
migrations and stuff like this is this

00:01:13,760 --> 00:01:16,159
is tv

00:01:16,400 --> 00:01:20,080
distribution is often profiled as the

00:01:18,640 --> 00:01:22,560
more stable one

00:01:20,080 --> 00:01:24,159
and easy to use you can see it on reddit

00:01:22,560 --> 00:01:27,040
and so on

00:01:24,159 --> 00:01:27,600
and you know i i guess that the reason

00:01:27,040 --> 00:01:29,280
for it that

00:01:27,600 --> 00:01:30,960
is that there shouldn't be any radical

00:01:29,280 --> 00:01:33,360
or disruptive changes in between

00:01:30,960 --> 00:01:35,200
minor updates so and that's that

00:01:33,360 --> 00:01:36,720
transfers to service packs in sleep but

00:01:35,200 --> 00:01:38,479
generally like we shouldn't you know

00:01:36,720 --> 00:01:40,479
completely break down distribution

00:01:38,479 --> 00:01:41,520
when it comes to package set in between

00:01:40,479 --> 00:01:43,360
releases

00:01:41,520 --> 00:01:45,040
and therefore i expect no issue no

00:01:43,360 --> 00:01:47,600
bigger issues on migrations

00:01:45,040 --> 00:01:49,200
box says that uh you know this is the

00:01:47,600 --> 00:01:52,079
linux distribution for beginner

00:01:49,200 --> 00:01:52,880
beginners and pros and uh some users say

00:01:52,079 --> 00:01:56,079
that this is the

00:01:52,880 --> 00:01:57,040
dkd distribution so this this much about

00:01:56,079 --> 00:01:58,560
leap uh

00:01:57,040 --> 00:02:00,159
is there anybody who didn't hear about

00:01:58,560 --> 00:02:03,119
lib before just just to double check

00:02:00,159 --> 00:02:06,880
with the audience

00:02:03,119 --> 00:02:08,640
no that's good ctlg

00:02:06,880 --> 00:02:10,160
there was already talk about marcus noga

00:02:08,640 --> 00:02:12,479
who who kind of covered the

00:02:10,160 --> 00:02:12,479
building

00:02:16,720 --> 00:02:20,720
containers and closing the leap as well

00:02:19,200 --> 00:02:22,879
hear about closing the leap gap or skip

00:02:20,720 --> 00:02:24,480
the presentation from marcus

00:02:22,879 --> 00:02:26,480
like i literally have like three slides

00:02:24,480 --> 00:02:28,080
about it so um not much

00:02:26,480 --> 00:02:30,239
and i can go a little bit deeper if it's

00:02:28,080 --> 00:02:32,400
necessary

00:02:30,239 --> 00:02:33,440
okay i take it that everybody has some

00:02:32,400 --> 00:02:36,319
broad idea

00:02:33,440 --> 00:02:36,720
so ctlg is a suicide dragon effort to

00:02:36,319 --> 00:02:39,040
bring

00:02:36,720 --> 00:02:41,440
leap and sleep closer together than ever

00:02:39,040 --> 00:02:41,440
before

00:02:41,599 --> 00:02:45,120
there's just bring some challenges you

00:02:43,200 --> 00:02:47,280
know some some new opportunities and

00:02:45,120 --> 00:02:48,959
also some pros and cons

00:02:47,280 --> 00:02:50,480
i will talk about these opportunities

00:02:48,959 --> 00:02:52,000
and so on on my next talk

00:02:50,480 --> 00:02:53,760
here i really want to talk about these

00:02:52,000 --> 00:02:55,280
schedules and and you know what to

00:02:53,760 --> 00:02:57,760
expect from next releases

00:02:55,280 --> 00:02:59,200
so um if we would look at the effort

00:02:57,760 --> 00:03:00,480
some people just see that we will change

00:02:59,200 --> 00:03:02,239
the way how the distribution

00:03:00,480 --> 00:03:03,920
is built but there is a little bit more

00:03:02,239 --> 00:03:06,080
than that

00:03:03,920 --> 00:03:07,599
so the categories that i see are

00:03:06,080 --> 00:03:08,879
basically that we are trying to unify

00:03:07,599 --> 00:03:10,959
the code stream

00:03:08,879 --> 00:03:12,080
um you know it may have been the case

00:03:10,959 --> 00:03:13,680
that leap and

00:03:12,080 --> 00:03:15,120
resources were the same but if you build

00:03:13,680 --> 00:03:16,879
them in different build environment they

00:03:15,120 --> 00:03:18,319
actually have different outputs right

00:03:16,879 --> 00:03:20,640
maybe different features are enabled

00:03:18,319 --> 00:03:22,640
different rpms are built and so on

00:03:20,640 --> 00:03:24,159
so uh we really want to unify this so

00:03:22,640 --> 00:03:26,080
this is the same

00:03:24,159 --> 00:03:28,560
with the exception of maybe branding and

00:03:26,080 --> 00:03:31,519
some other other features that can be

00:03:28,560 --> 00:03:33,200
very easily documented the next part is

00:03:31,519 --> 00:03:34,879
the concept of building distribution

00:03:33,200 --> 00:03:36,879
which is uh what marcus was talking

00:03:34,879 --> 00:03:40,000
about so we only want to reuse uh

00:03:36,879 --> 00:03:42,000
successfully signed rpms and combine it

00:03:40,000 --> 00:03:44,239
with outcome of open system back parts

00:03:42,000 --> 00:03:45,440
basically build once and ship twice if i

00:03:44,239 --> 00:03:48,560
simplify it

00:03:45,440 --> 00:03:50,480
and you'll have s390

00:03:48,560 --> 00:03:52,319
newly introduced in in the next version

00:03:50,480 --> 00:03:54,080
of leap and also that comes also with

00:03:52,319 --> 00:03:54,799
real time that we have from slee and so

00:03:54,080 --> 00:03:57,120
on

00:03:54,799 --> 00:03:58,720
um then there are some tools and

00:03:57,120 --> 00:04:00,959
processes that we are introducing to

00:03:58,720 --> 00:04:03,360
community because if you if you

00:04:00,959 --> 00:04:04,720
base leap like on binaries that don't

00:04:03,360 --> 00:04:06,400
get rebuilt in obs

00:04:04,720 --> 00:04:07,840
you just just sync them over and then

00:04:06,400 --> 00:04:09,280
use them like

00:04:07,840 --> 00:04:11,360
you know you don't have really good way

00:04:09,280 --> 00:04:12,400
to to you know change these binaries

00:04:11,360 --> 00:04:14,000
right

00:04:12,400 --> 00:04:15,840
and we want to make sure that community

00:04:14,000 --> 00:04:18,160
has tools to uh

00:04:15,840 --> 00:04:19,280
submit change code requests against

00:04:18,160 --> 00:04:21,120
these binaries and

00:04:19,280 --> 00:04:22,560
you know like maybe open features if you

00:04:21,120 --> 00:04:24,639
don't feel like you know you are glyph

00:04:22,560 --> 00:04:26,479
suspicious but you need small change or

00:04:24,639 --> 00:04:28,720
something like you should have a way

00:04:26,479 --> 00:04:30,160
and backzilla is for bugs and this is

00:04:28,720 --> 00:04:31,919
the case firstly as well so i really

00:04:30,160 --> 00:04:32,880
want to make sure that community can use

00:04:31,919 --> 00:04:34,479
the features

00:04:32,880 --> 00:04:36,080
uh you know in the tool which is

00:04:34,479 --> 00:04:36,639
actually used for feature tracking and

00:04:36,080 --> 00:04:38,479
it's where

00:04:36,639 --> 00:04:40,160
you know and engineers work on that in

00:04:38,479 --> 00:04:41,919
the same tool and so on

00:04:40,160 --> 00:04:43,440
uh if you are interested i have a public

00:04:41,919 --> 00:04:44,720
talk about this exactly how the

00:04:43,440 --> 00:04:46,800
mirroring works

00:04:44,720 --> 00:04:48,880
how you know the access tutorial looks

00:04:46,800 --> 00:04:50,800
like um and that's on the youtube it's a

00:04:48,880 --> 00:04:53,120
public video from apps that took place

00:04:50,800 --> 00:04:54,960
last week so feel free to watch it

00:04:53,120 --> 00:04:57,440
um i guess that if you do something like

00:04:54,960 --> 00:04:59,680
community requests suse lapse you will

00:04:57,440 --> 00:05:01,759
you will find it

00:04:59,680 --> 00:05:03,360
so opens to the german where we are now

00:05:01,759 --> 00:05:05,039
anil had a question was the current

00:05:03,360 --> 00:05:07,280
status i hope that this will

00:05:05,039 --> 00:05:09,199
sort of you know give him some idea and

00:05:07,280 --> 00:05:11,039
then uh the link to the

00:05:09,199 --> 00:05:13,600
go no go decision has some more details

00:05:11,039 --> 00:05:16,320
than this that will be on the next slide

00:05:13,600 --> 00:05:18,160
so uh jump is basically the

00:05:16,320 --> 00:05:20,479
implementation of

00:05:18,160 --> 00:05:22,160
closing the lead gap so it's a concept

00:05:20,479 --> 00:05:23,840
how to build distribution and the

00:05:22,160 --> 00:05:26,240
process is around basically the three

00:05:23,840 --> 00:05:28,639
categories that you've seen before

00:05:26,240 --> 00:05:29,360
um so what do we have so we have

00:05:28,639 --> 00:05:31,360
distribution

00:05:29,360 --> 00:05:33,039
images which are available available for

00:05:31,360 --> 00:05:35,120
wider testing since i believe late

00:05:33,039 --> 00:05:37,919
august 2020

00:05:35,120 --> 00:05:39,840
so these are based on sleeve 15s pin 2

00:05:37,919 --> 00:05:42,960
updates that's very important

00:05:39,840 --> 00:05:45,759
so we are actually um you know

00:05:42,960 --> 00:05:47,360
so it's 3 15 sp 2 and some forks of of

00:05:45,759 --> 00:05:48,240
features that were rejected like for

00:05:47,360 --> 00:05:51,440
example

00:05:48,240 --> 00:05:53,600
uh susan didn't want to introduce maybe

00:05:51,440 --> 00:05:55,759
support of free pascal compiler and gdp

00:05:53,600 --> 00:05:57,759
test results and therefore we for gdb to

00:05:55,759 --> 00:05:59,199
build it you know it's the same source

00:05:57,759 --> 00:06:00,560
it's just it's either built with or

00:05:59,199 --> 00:06:03,600
without the support

00:06:00,560 --> 00:06:05,120
and so we fork that for example

00:06:03,600 --> 00:06:06,720
and a few other cases like install

00:06:05,120 --> 00:06:09,120
images and so on

00:06:06,720 --> 00:06:10,720
so this is on top of sp2 there we

00:06:09,120 --> 00:06:13,360
actually have to take some packages from

00:06:10,720 --> 00:06:16,080
sp3 to get migration working for example

00:06:13,360 --> 00:06:19,360
so there are a few pieces regarding just

00:06:16,080 --> 00:06:20,240
taken from sp3 but but the baseline ssp

00:06:19,360 --> 00:06:23,440
to update

00:06:20,240 --> 00:06:25,680
um redirection and mirroring of submit

00:06:23,440 --> 00:06:27,280
request is currently deployed so you can

00:06:25,680 --> 00:06:28,479
use that we can test that if you want if

00:06:27,280 --> 00:06:30,319
you reach out to me

00:06:28,479 --> 00:06:31,680
so you can basically submit a submission

00:06:30,319 --> 00:06:34,400
against let's say bash in

00:06:31,680 --> 00:06:36,240
jump152 and if i approve the submission

00:06:34,400 --> 00:06:37,680
it will get mirrored into internals use

00:06:36,240 --> 00:06:40,479
a build system

00:06:37,680 --> 00:06:41,280
and uh release manager for suse linux

00:06:40,479 --> 00:06:42,880
enterprise

00:06:41,280 --> 00:06:44,880
depends on you know the origin of the

00:06:42,880 --> 00:06:45,440
bash and bash package sincely i think

00:06:44,880 --> 00:06:47,440
this is

00:06:45,440 --> 00:06:49,039
the 15 updates so they would actually

00:06:47,440 --> 00:06:50,400
see submission and in this case

00:06:49,039 --> 00:06:51,759
maintenance team notes

00:06:50,400 --> 00:06:53,680
not cd release manager would be

00:06:51,759 --> 00:06:55,759
processing it um

00:06:53,680 --> 00:06:57,599
so this works now and the only part

00:06:55,759 --> 00:07:00,080
which is missing is reporting back the

00:06:57,599 --> 00:07:01,440
updates from bots and so on but i was

00:07:00,080 --> 00:07:03,039
told that this should be done by end of

00:07:01,440 --> 00:07:07,680
the month

00:07:03,039 --> 00:07:09,280
um just to confirm um

00:07:07,680 --> 00:07:10,479
we cannot just halt sleep like you

00:07:09,280 --> 00:07:12,000
cannot create let's say thousand

00:07:10,479 --> 00:07:13,919
submissions like there is a person who

00:07:12,000 --> 00:07:15,680
is moderating them the person is part of

00:07:13,919 --> 00:07:17,280
the sustainably review team so basically

00:07:15,680 --> 00:07:19,599
it's a new inter a new review

00:07:17,280 --> 00:07:20,880
introduced for submissions against uses

00:07:19,599 --> 00:07:23,440
the project

00:07:20,880 --> 00:07:24,479
and once it's approved with combination

00:07:23,440 --> 00:07:25,919
of osc plugin

00:07:24,479 --> 00:07:27,440
um you know running like you can

00:07:25,919 --> 00:07:28,880
actually create the clone of the

00:07:27,440 --> 00:07:31,520
submission

00:07:28,880 --> 00:07:33,280
in the ibs so it's not it really

00:07:31,520 --> 00:07:35,759
requires the the plugin like it doesn't

00:07:33,280 --> 00:07:38,720
work just based on the approval

00:07:35,759 --> 00:07:40,880
uh we have a pilot for jira access to

00:07:38,720 --> 00:07:42,639
community members uh thank you neil for

00:07:40,880 --> 00:07:45,680
for being part of the pilot

00:07:42,639 --> 00:07:48,319
so we are regularly meeting uh

00:07:45,680 --> 00:07:50,160
on mondays like in case you know like uh

00:07:48,319 --> 00:07:51,440
there is nothing like blocking it

00:07:50,160 --> 00:07:52,960
and we go through currently open

00:07:51,440 --> 00:07:54,879
features and we make sure that some of

00:07:52,960 --> 00:07:56,479
them have updates and we review what's

00:07:54,879 --> 00:07:58,479
blocking and so on

00:07:56,479 --> 00:07:59,520
and so we have currently small budget

00:07:58,479 --> 00:08:02,400
for the pilot

00:07:59,520 --> 00:08:03,680
and uh i'm not sure how it will be in

00:08:02,400 --> 00:08:05,360
the future i hope that you know this

00:08:03,680 --> 00:08:05,840
will get some popularity and we can

00:08:05,360 --> 00:08:09,360
improve

00:08:05,840 --> 00:08:11,120
improve the budget and so on but uh that

00:08:09,360 --> 00:08:13,199
i have currently no more information

00:08:11,120 --> 00:08:15,440
about that unfortunately

00:08:13,199 --> 00:08:16,960
but generally this is the way how susie

00:08:15,440 --> 00:08:18,800
would like to see it happening so i

00:08:16,960 --> 00:08:20,000
believe that support first from susa

00:08:18,800 --> 00:08:23,360
will be there

00:08:20,000 --> 00:08:24,800
um seamless migration this is currently

00:08:23,360 --> 00:08:27,039
probably the most problematic

00:08:24,800 --> 00:08:28,879
problematic topic we still had some

00:08:27,039 --> 00:08:31,199
issues they are being worked out

00:08:28,879 --> 00:08:32,880
but like it's not effortless but what

00:08:31,199 --> 00:08:34,959
you can expect like once we are done is

00:08:32,880 --> 00:08:38,399
that basically you install

00:08:34,959 --> 00:08:40,000
let's say uh jump and you want to

00:08:38,399 --> 00:08:41,599
migrate to sleep and what happens is

00:08:40,000 --> 00:08:42,959
that uh you know aside from enabling

00:08:41,599 --> 00:08:44,640
these uses the repos

00:08:42,959 --> 00:08:46,240
you will just exchange branding packages

00:08:44,640 --> 00:08:47,440
and the rest of packages in default

00:08:46,240 --> 00:08:48,560
installation analysis you choose let's

00:08:47,440 --> 00:08:50,399
say kde

00:08:48,560 --> 00:08:52,480
will be identical to sleep packages so

00:08:50,399 --> 00:08:54,320
they shouldn't really be reinstalled

00:08:52,480 --> 00:08:57,440
and the time actually spent on the

00:08:54,320 --> 00:08:59,839
migration should be way way way shorter

00:08:57,440 --> 00:09:01,680
the maintenance setup is unfortunately

00:08:59,839 --> 00:09:04,399
still in progress i believe that we are

00:09:01,680 --> 00:09:06,320
still missing uh the support for patch

00:09:04,399 --> 00:09:09,120
info which is being worked out otherwise

00:09:06,320 --> 00:09:12,160
to me there are no other blockers

00:09:09,120 --> 00:09:15,920
so zipper update p wouldn't work

00:09:12,160 --> 00:09:17,680
with the current setup here is the image

00:09:15,920 --> 00:09:18,800
i know it's not as nice and simple as on

00:09:17,680 --> 00:09:22,480
marcus's

00:09:18,800 --> 00:09:23,920
slides but basically the green parts are

00:09:22,480 --> 00:09:25,760
the parts which are introduced as

00:09:23,920 --> 00:09:28,480
processes or tools

00:09:25,760 --> 00:09:30,560
um so you can see can you see my mouse

00:09:28,480 --> 00:09:34,560
actually when i'm moving it

00:09:30,560 --> 00:09:37,120
um so if you would look on the upper

00:09:34,560 --> 00:09:37,839
middle part of the screen you would see

00:09:37,120 --> 00:09:39,200
the

00:09:37,839 --> 00:09:40,880
small diamond which is the uh

00:09:39,200 --> 00:09:43,440
redirection of of the

00:09:40,880 --> 00:09:44,160
uh submission so if you always submit to

00:09:43,440 --> 00:09:47,040
to jump

00:09:44,160 --> 00:09:48,800
or maybe futurely let's say elite153 and

00:09:47,040 --> 00:09:51,360
based on where the package comes from if

00:09:48,800 --> 00:09:53,200
it's back ports if it's if it's silly

00:09:51,360 --> 00:09:55,040
if it's jump because we had to fork the

00:09:53,200 --> 00:09:57,040
package like it will be redirected

00:09:55,040 --> 00:09:58,560
uh where it's supposed to be if it's

00:09:57,040 --> 00:10:00,080
sustained you know you know that there

00:09:58,560 --> 00:10:02,000
is an extra review

00:10:00,080 --> 00:10:03,519
uh i will or max or somebody from

00:10:02,000 --> 00:10:04,240
opensuse release team will approve the

00:10:03,519 --> 00:10:06,160
review

00:10:04,240 --> 00:10:08,880
and then the the osc plugin will

00:10:06,160 --> 00:10:11,120
actually mirror it into internal suse

00:10:08,880 --> 00:10:13,600
um build service and that will actually

00:10:11,120 --> 00:10:15,120
appear as a regular sustain submission

00:10:13,600 --> 00:10:16,880
with with a big banner that this is a

00:10:15,120 --> 00:10:19,920
public submission and that the

00:10:16,880 --> 00:10:20,800
information is being synced out outside

00:10:19,920 --> 00:10:23,680
to

00:10:20,800 --> 00:10:24,720
obs so and then once it's accepted we

00:10:23,680 --> 00:10:26,800
actually inherit it

00:10:24,720 --> 00:10:28,640
and then the future version of leapful

00:10:26,800 --> 00:10:31,040
basically inherited as binaries right

00:10:28,640 --> 00:10:34,000
after the build event finished

00:10:31,040 --> 00:10:34,720
um in the in the ibs that triggers the

00:10:34,000 --> 00:10:36,399
sing and

00:10:34,720 --> 00:10:38,079
therefore it will get you know the

00:10:36,399 --> 00:10:40,720
binary as well

00:10:38,079 --> 00:10:42,480
or jump in this case but i i actually

00:10:40,720 --> 00:10:44,000
draw it before we knew the code name i

00:10:42,480 --> 00:10:44,959
believe so it's sleep on the on the

00:10:44,000 --> 00:10:47,279
picture

00:10:44,959 --> 00:10:49,040
uh here is the jira on the left upper

00:10:47,279 --> 00:10:51,760
part the the green box is the

00:10:49,040 --> 00:10:54,079
uh jira features and there is the

00:10:51,760 --> 00:10:57,120
contributor who opens them

00:10:54,079 --> 00:10:58,480
the little guy on the left and uh

00:10:57,120 --> 00:11:00,640
these get to the process and are

00:10:58,480 --> 00:11:02,720
processed as regular partner requests

00:11:00,640 --> 00:11:05,200
which is nice

00:11:02,720 --> 00:11:06,320
we haven't had it before and yeah and

00:11:05,200 --> 00:11:08,959
the thing is on the

00:11:06,320 --> 00:11:10,720
under sink of rpms and sources from ibs

00:11:08,959 --> 00:11:12,800
to obs is on the left

00:11:10,720 --> 00:11:15,519
upper part sorry right upper part of the

00:11:12,800 --> 00:11:18,720
green how would you call it uh

00:11:15,519 --> 00:11:20,480
it's not boxes right um yeah and the

00:11:18,720 --> 00:11:23,839
green cans let's say

00:11:20,480 --> 00:11:25,839
i think it's a database scheme

00:11:23,839 --> 00:11:29,120
what is it used for so this is the

00:11:25,839 --> 00:11:32,079
overview of changes

00:11:29,120 --> 00:11:32,800
so let's talk 15q1 uh you may have heard

00:11:32,079 --> 00:11:36,240
it you may

00:11:32,800 --> 00:11:40,079
you may have not so uh leap1521

00:11:36,240 --> 00:11:42,000
you guys can see this screen right um

00:11:40,079 --> 00:11:43,279
so this is this is supposed to be an

00:11:42,000 --> 00:11:46,079
intermediate release

00:11:43,279 --> 00:11:47,600
and uh the release really depends it was

00:11:46,079 --> 00:11:49,839
originally aimed at october

00:11:47,600 --> 00:11:51,760
uh i'm actually aiming it in the first

00:11:49,839 --> 00:11:54,079
on the first week of november

00:11:51,760 --> 00:11:55,920
and it was supposed to generally jump

00:11:54,079 --> 00:11:57,200
concept into production before the next

00:11:55,920 --> 00:12:00,000
release happened

00:11:57,200 --> 00:12:00,480
so um you know with with like i would

00:12:00,000 --> 00:12:02,000
say

00:12:00,480 --> 00:12:03,519
with some parts we already with some

00:12:02,000 --> 00:12:04,639
parts i believe that we still need some

00:12:03,519 --> 00:12:06,160
extra time

00:12:04,639 --> 00:12:07,680
like i would really like to discuss it

00:12:06,160 --> 00:12:10,079
with all stakeholders

00:12:07,680 --> 00:12:11,680
and and you know like figure out if we

00:12:10,079 --> 00:12:14,240
receive no go for a certain

00:12:11,680 --> 00:12:15,839
parts like what's the condition and then

00:12:14,240 --> 00:12:17,680
if we can actually fix it until the

00:12:15,839 --> 00:12:19,360
release and so on

00:12:17,680 --> 00:12:20,800
uh so this is still open topic whether

00:12:19,360 --> 00:12:23,200
the release will happen or not

00:12:20,800 --> 00:12:24,399
we may also agree on small delay or we

00:12:23,200 --> 00:12:27,279
may just agree to go

00:12:24,399 --> 00:12:28,720
directly to 153 let's let's one wait

00:12:27,279 --> 00:12:30,160
until tuesday it was supposed to be

00:12:28,720 --> 00:12:31,839
monday originally but some of the

00:12:30,160 --> 00:12:33,519
stakeholders didn't unfortunately have a

00:12:31,839 --> 00:12:36,560
time slot in the calendar

00:12:33,519 --> 00:12:38,480
so we decided to go for tuesday morning

00:12:36,560 --> 00:12:40,000
um the link for the interlock if you

00:12:38,480 --> 00:12:40,240
would like to see what we are signing up

00:12:40,000 --> 00:12:44,160
is

00:12:40,240 --> 00:12:45,920
is cindy third paragraph so um that has

00:12:44,160 --> 00:12:47,600
current list of stakeholders that was uh

00:12:45,920 --> 00:12:50,000
sent to factory and project uh

00:12:47,600 --> 00:12:51,760
so far dirk miller was the person who

00:12:50,000 --> 00:12:52,000
wanted to be edit on the list so he's

00:12:51,760 --> 00:12:54,320
there

00:12:52,000 --> 00:12:55,760
now if you want to be there feel free to

00:12:54,320 --> 00:12:57,760
let me know i can

00:12:55,760 --> 00:12:59,680
don't just you know like edit the wiki

00:12:57,760 --> 00:13:02,000
send me an email because there is also

00:12:59,680 --> 00:13:03,600
uh invitation linked with the uh virtual

00:13:02,000 --> 00:13:05,200
conference link that that will take

00:13:03,600 --> 00:13:07,120
place on on tuesday

00:13:05,200 --> 00:13:08,800
so uh just just email me and i will

00:13:07,120 --> 00:13:11,760
handle it

00:13:08,800 --> 00:13:13,200
uh and it's intentionally placed after

00:13:11,760 --> 00:13:14,800
this conference right because you would

00:13:13,200 --> 00:13:16,079
like to absorb the feedback from the

00:13:14,800 --> 00:13:17,839
comment because this is

00:13:16,079 --> 00:13:19,760
the aspect that sometimes being skipped

00:13:17,839 --> 00:13:21,279
like we really want to make sure that

00:13:19,760 --> 00:13:22,880
you know we don't do any any harm to the

00:13:21,279 --> 00:13:23,600
community and everybody knows what's

00:13:22,880 --> 00:13:25,839
happening

00:13:23,600 --> 00:13:26,880
they know why and they they see cons and

00:13:25,839 --> 00:13:29,600
pros

00:13:26,880 --> 00:13:30,959
um so if you want to we can we can stay

00:13:29,600 --> 00:13:32,320
a little bit longer in the chat room we

00:13:30,959 --> 00:13:34,160
can talk about uh

00:13:32,320 --> 00:13:35,839
talk about it if something's unclear you

00:13:34,160 --> 00:13:37,200
know like uh we can you can raise the

00:13:35,839 --> 00:13:39,360
concern and we can see

00:13:37,200 --> 00:13:40,800
if we can fix it or if it was maybe

00:13:39,360 --> 00:13:44,880
already addressed

00:13:40,800 --> 00:13:46,079
um so opensuse elite153 uh so based on

00:13:44,880 --> 00:13:47,920
the open source

00:13:46,079 --> 00:13:50,000
borders recommendation or decision

00:13:47,920 --> 00:13:52,399
recommendation to proceed with the

00:13:50,000 --> 00:13:53,279
uh jam concept or or closing the lead

00:13:52,399 --> 00:13:55,600
gap

00:13:53,279 --> 00:13:57,360
it's expected to be fully based on suse

00:13:55,600 --> 00:13:59,440
linux enterprise binary so

00:13:57,360 --> 00:14:01,839
why fully based and what about the

00:13:59,440 --> 00:14:02,880
previous um you know leap1521 what's the

00:14:01,839 --> 00:14:05,199
difference

00:14:02,880 --> 00:14:07,440
so um i mentioned the unification of

00:14:05,199 --> 00:14:09,360
code streams uh on previous slide

00:14:07,440 --> 00:14:10,959
that really want to make sure that you

00:14:09,360 --> 00:14:13,040
know like if if you would build a

00:14:10,959 --> 00:14:14,959
package on leap and slee like they would

00:14:13,040 --> 00:14:17,199
basically have the exact same outputs

00:14:14,959 --> 00:14:18,480
even if you know they wouldn't be binary

00:14:17,199 --> 00:14:20,240
identical right

00:14:18,480 --> 00:14:23,360
but they would have basically the same

00:14:20,240 --> 00:14:23,360
outcomes and

00:14:23,760 --> 00:14:27,760
and right now at this moment we are not

00:14:26,160 --> 00:14:29,920
done with all the all the packages so

00:14:27,760 --> 00:14:32,160
there was roughly 100 something i think

00:14:29,920 --> 00:14:33,920
130 or 120 packages

00:14:32,160 --> 00:14:35,519
that were different let's say there was

00:14:33,920 --> 00:14:37,760
a glass traffic or there wasn't you know

00:14:35,519 --> 00:14:40,000
on one side on the other and so on

00:14:37,760 --> 00:14:40,880
free pascal compiler supporting gdb uh

00:14:40,000 --> 00:14:43,199
test results

00:14:40,880 --> 00:14:44,000
on the on leap side not on sleeve side

00:14:43,199 --> 00:14:46,079
so we are working

00:14:44,000 --> 00:14:47,199
them out so far only two features were

00:14:46,079 --> 00:14:50,000
ejected

00:14:47,199 --> 00:14:51,839
out of 130 so that is really like big

00:14:50,000 --> 00:14:53,120
effort from souza to make sure that they

00:14:51,839 --> 00:14:54,480
adopt features

00:14:53,120 --> 00:14:56,000
which is good some people are afraid

00:14:54,480 --> 00:14:57,360
that we will just start you know like

00:14:56,000 --> 00:14:58,320
removing features but this is not

00:14:57,360 --> 00:15:00,079
happening and

00:14:58,320 --> 00:15:03,360
always when we actually drop feature

00:15:00,079 --> 00:15:05,199
like uh recently the sdl support in qmo

00:15:03,360 --> 00:15:06,639
there is like notification to factory we

00:15:05,199 --> 00:15:08,000
talked to maintainer if it makes sense

00:15:06,639 --> 00:15:11,440
you know in this case

00:15:08,000 --> 00:15:13,839
we decided to go in favor of gtk so

00:15:11,440 --> 00:15:15,920
you know it was dropped from not only

00:15:13,839 --> 00:15:17,519
leap but also from factory so i feel

00:15:15,920 --> 00:15:20,959
like this is the best case scenario like

00:15:17,519 --> 00:15:23,360
how we can clean up you know the package

00:15:20,959 --> 00:15:25,360
and uh so in 153 we are expected to be

00:15:23,360 --> 00:15:27,360
done with all of these 130 right now i

00:15:25,360 --> 00:15:27,839
believe 40 is missing mainly the word

00:15:27,360 --> 00:15:31,839
stack

00:15:27,839 --> 00:15:34,800
so uh you know the word the word manager

00:15:31,839 --> 00:15:36,079
libvard qmo they would be a little bit

00:15:34,800 --> 00:15:40,079
different than sli and

00:15:36,079 --> 00:15:42,560
and and jump and that will change in 153

00:15:40,079 --> 00:15:43,360
um so far i haven't seen any feature to

00:15:42,560 --> 00:15:46,560
be rejected

00:15:43,360 --> 00:15:48,240
except of the qmo ui sdl uh

00:15:46,560 --> 00:15:49,839
so rest of the word stack is expected to

00:15:48,240 --> 00:15:53,360
be the same which is good

00:15:49,839 --> 00:15:55,519
that's beyond my expectations and

00:15:53,360 --> 00:15:57,920
what did i mention yeah some people ask

00:15:55,519 --> 00:16:00,000
when does the leap 53 development starts

00:15:57,920 --> 00:16:01,120
so we are now focusing on jump and you

00:16:00,000 --> 00:16:02,560
know like after the

00:16:01,120 --> 00:16:04,480
go-no-go decision that we will have on

00:16:02,560 --> 00:16:06,480
next tuesday we will basically either

00:16:04,480 --> 00:16:08,079
proceed with 15-21 and then start

00:16:06,480 --> 00:16:10,240
development or we will start development

00:16:08,079 --> 00:16:12,959
of 53 right away

00:16:10,240 --> 00:16:14,720
so this is basically why e153 is not yet

00:16:12,959 --> 00:16:16,399
set up in obs because we were really

00:16:14,720 --> 00:16:17,920
focusing on the possibility of the

00:16:16,399 --> 00:16:22,000
intermediate release which we will know

00:16:17,920 --> 00:16:25,040
about next tuesday um

00:16:22,000 --> 00:16:26,399
and to be to be fair you know um there

00:16:25,040 --> 00:16:27,759
is some development already happening

00:16:26,399 --> 00:16:29,519
because if you know that it's based on

00:16:27,759 --> 00:16:32,959
suicide binaries

00:16:29,519 --> 00:16:33,440
um and 153 years actually being worked

00:16:32,959 --> 00:16:36,079
on

00:16:33,440 --> 00:16:38,160
as we speak so therefore for for 4 000

00:16:36,079 --> 00:16:39,920
packages development haven't stopped

00:16:38,160 --> 00:16:41,600
at all you could say the same about

00:16:39,920 --> 00:16:43,839
factory relation to leave but

00:16:41,600 --> 00:16:45,920
like uh you know it's not that we are

00:16:43,839 --> 00:16:48,959
frozen

00:16:45,920 --> 00:16:50,160
so what about next next release um so

00:16:48,959 --> 00:16:51,920
that's actually really tricky

00:16:50,160 --> 00:16:53,279
because uh if you if you check the link

00:16:51,920 --> 00:16:54,959
that i shared this is the public

00:16:53,279 --> 00:16:56,639
presentation by kaiduke

00:16:54,959 --> 00:16:58,240
about sleep 15 road map which is

00:16:56,639 --> 00:17:00,240
currently basically saying that you can

00:16:58,240 --> 00:17:01,279
expect five service packs and certain

00:17:00,240 --> 00:17:02,720
you know like dates

00:17:01,279 --> 00:17:04,319
you know it's it's no secret right we

00:17:02,720 --> 00:17:06,000
have very predictable releases which are

00:17:04,319 --> 00:17:07,360
12 months from each other

00:17:06,000 --> 00:17:09,120
so you can sort of guess when the next

00:17:07,360 --> 00:17:11,679
release will be released and

00:17:09,120 --> 00:17:13,439
um if you if you check um i believe it

00:17:11,679 --> 00:17:15,360
was like 17 which was showing

00:17:13,439 --> 00:17:16,799
uh when susie usually enrolls future

00:17:15,360 --> 00:17:18,319
products and this is you know like just

00:17:16,799 --> 00:17:19,760
me talking to you it's not official

00:17:18,319 --> 00:17:21,839
statement or anything

00:17:19,760 --> 00:17:22,880
um it's not in the very last service

00:17:21,839 --> 00:17:24,720
pack right and if you

00:17:22,880 --> 00:17:26,720
if you can expect five service packs

00:17:24,720 --> 00:17:28,400
then you know it will be most likely for

00:17:26,720 --> 00:17:29,679
or maybe with the fifth one if there

00:17:28,400 --> 00:17:31,039
will be a new product

00:17:29,679 --> 00:17:34,720
and since i've mentioned on the very

00:17:31,039 --> 00:17:37,120
first slide um that leap is based on the

00:17:34,720 --> 00:17:38,480
latest version of swiss linux enterprise

00:17:37,120 --> 00:17:40,720
um you know

00:17:38,480 --> 00:17:42,960
may happen that we will be based on not

00:17:40,720 --> 00:17:44,720
sleep 15 code stream uh and this is this

00:17:42,960 --> 00:17:46,559
is important to keep in mind

00:17:44,720 --> 00:17:48,080
so i see really two options either we

00:17:46,559 --> 00:17:51,440
will be based on uh

00:17:48,080 --> 00:17:52,720
sustain 15 service pack 4 if there is no

00:17:51,440 --> 00:17:55,120
next generation product

00:17:52,720 --> 00:17:56,480
and you know or we will be based on the

00:17:55,120 --> 00:17:59,120
next generation product

00:17:56,480 --> 00:18:00,080
in case that it's compatible with the

00:17:59,120 --> 00:18:01,919
type of distribution

00:18:00,080 --> 00:18:03,360
so if it would be let's say um i don't

00:18:01,919 --> 00:18:05,520
know just just talking crazy

00:18:03,360 --> 00:18:06,720
if it would be rolling release um does

00:18:05,520 --> 00:18:08,640
it make sense to have two rolling

00:18:06,720 --> 00:18:09,679
releases in open susan maybe it does

00:18:08,640 --> 00:18:12,160
maybe it doesn't

00:18:09,679 --> 00:18:14,640
but like in this case i i would consider

00:18:12,160 --> 00:18:16,240
maybe basing it still on 15s before

00:18:14,640 --> 00:18:18,880
even when there would be newer product

00:18:16,240 --> 00:18:21,200
available so nothing set in stone

00:18:18,880 --> 00:18:23,360
uh according to roadmap like i told you

00:18:21,200 --> 00:18:24,960
the expected 12 months release cycle

00:18:23,360 --> 00:18:27,280
but the development should start in next

00:18:24,960 --> 00:18:28,400
summer so by next summer we should

00:18:27,280 --> 00:18:31,120
already know uh

00:18:28,400 --> 00:18:31,520
what's what's the plan but until you

00:18:31,120 --> 00:18:33,600
know

00:18:31,520 --> 00:18:35,360
as of today like i still have these two

00:18:33,600 --> 00:18:37,510
options that i have to somehow

00:18:35,360 --> 00:18:39,440
come with

00:18:37,510 --> 00:18:41,679
[Music]

00:18:39,440 --> 00:18:43,039
so and this is basically it so now i

00:18:41,679 --> 00:18:57,840
would like to you know

00:18:43,039 --> 00:18:57,840
hear questions or complaints or concerns

00:19:15,200 --> 00:19:17,280

YouTube URL: https://www.youtube.com/watch?v=-nH4dLWizzU


