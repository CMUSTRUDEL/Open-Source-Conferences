Title: Release monitoring org
Publication date: 2020-10-16
Playlist: openSUSE + LibreOffice Conference 2020
Description: 
	Subscribe ►http://bit.ly/1G2KKZl

Offical Website ►https://www.opensuse.org
Follow us on Twitter ► https://twitter.com/openSUSE
Like us on Facebook ► https://www.facebook.com/en.openSUSE
Captions: 
	00:00:00,160 --> 00:00:06,480
hello everyone and welcome to the

00:00:03,439 --> 00:00:09,599
to talk about racemonitoring.org

00:00:06,480 --> 00:00:13,920
my name is michal konechni and

00:00:09,599 --> 00:00:17,920
i'm i'm maintainer of rismountering.org

00:00:13,920 --> 00:00:17,920
for fedora

00:00:18,480 --> 00:00:25,039
this is a recording because i'm

00:00:21,600 --> 00:00:28,160
on the road right now and

00:00:25,039 --> 00:00:28,880
i'm not sure if i should be available in

00:00:28,160 --> 00:00:34,079
the chat

00:00:28,880 --> 00:00:38,399
but i'm not available to present

00:00:34,079 --> 00:00:41,440
okay so let's start here is the agenda

00:00:38,399 --> 00:00:44,719
this is an illustration of

00:00:41,440 --> 00:00:47,760
the racemonitoring.org

00:00:44,719 --> 00:00:50,480
and how i can ima how

00:00:47,760 --> 00:00:52,079
i imagine it when i'm writing my blog

00:00:50,480 --> 00:00:55,280
posts

00:00:52,079 --> 00:00:57,760
you can see it's very nice world

00:00:55,280 --> 00:00:58,320
and the new hotness is actually

00:00:57,760 --> 00:01:03,440
something

00:00:58,320 --> 00:01:03,440
above floating above the

00:01:03,680 --> 00:01:10,840
anika okay so

00:01:06,720 --> 00:01:13,960
let's start with some basics what is

00:01:10,840 --> 00:01:16,880
monitoring.org it's containing from two

00:01:13,960 --> 00:01:21,119
applications the first one

00:01:16,880 --> 00:01:22,799
is anikia it provides web interface for

00:01:21,119 --> 00:01:26,000
the users

00:01:22,799 --> 00:01:29,119
to actually do the things they

00:01:26,000 --> 00:01:32,240
need the users could add

00:01:29,119 --> 00:01:34,880
new projects watch for the releases

00:01:32,240 --> 00:01:35,439
it automatically checks for new releases

00:01:34,880 --> 00:01:38,560
of

00:01:35,439 --> 00:01:41,040
the project and

00:01:38,560 --> 00:01:44,159
it's sending fedora message when a new

00:01:41,040 --> 00:01:44,159
version is retrieved

00:01:44,560 --> 00:01:48,159
the new hotness is federal messaging

00:01:46,240 --> 00:01:50,799
consumer for those of you

00:01:48,159 --> 00:01:53,680
not aware federal messaging is a

00:01:50,799 --> 00:01:57,280
messaging bus we are using in fedora

00:01:53,680 --> 00:01:58,079
as basically for every message that is

00:01:57,280 --> 00:02:00,880
sent

00:01:58,079 --> 00:02:00,880
in infrastructure

00:02:01,200 --> 00:02:05,040
the new hotness is listening to messages

00:02:03,759 --> 00:02:08,720
emitted by anitya

00:02:05,040 --> 00:02:12,239
it is only interested in the ones that

00:02:08,720 --> 00:02:15,520
are about the new release phone and

00:02:12,239 --> 00:02:18,480
there are others

00:02:15,520 --> 00:02:19,599
uh it's creates or updates paxilla which

00:02:18,480 --> 00:02:23,040
is your

00:02:19,599 --> 00:02:24,080
issued rocker system when new release is

00:02:23,040 --> 00:02:27,760
found so

00:02:24,080 --> 00:02:31,120
the packager who maintains the project

00:02:27,760 --> 00:02:34,319
the package in fedora is

00:02:31,120 --> 00:02:36,160
notified about new version it could

00:02:34,319 --> 00:02:36,959
start scratch builds in your build

00:02:36,160 --> 00:02:40,800
system

00:02:36,959 --> 00:02:44,400
if this is configured for the project

00:02:40,800 --> 00:02:45,280
okay let's start with anija i will talk

00:02:44,400 --> 00:02:47,920
about it

00:02:45,280 --> 00:02:49,920
a bit more because it's really

00:02:47,920 --> 00:02:53,280
interesting

00:02:49,920 --> 00:02:57,040
project okay let's start with some

00:02:53,280 --> 00:03:00,319
magic numbers these numbers

00:02:57,040 --> 00:03:03,040
are actually

00:03:00,319 --> 00:03:03,519
kind of impressive the first commit for

00:03:03,040 --> 00:03:08,879
the

00:03:03,519 --> 00:03:15,040
anita was on 28 november 2013.

00:03:08,879 --> 00:03:18,400
first release was 0.1.0

00:03:15,040 --> 00:03:21,840
which was on 29th september

00:03:18,400 --> 00:03:22,640
2014 so as you can see the first release

00:03:21,840 --> 00:03:25,760
was

00:03:22,640 --> 00:03:26,159
almost a year later after the project

00:03:25,760 --> 00:03:29,920
was

00:03:26,159 --> 00:03:33,519
created uh i'm maintainer

00:03:29,920 --> 00:03:38,560
of the anitja for two years

00:03:33,519 --> 00:03:40,480
so i'm not i'm not

00:03:38,560 --> 00:03:43,360
i don't have too much knowledge about

00:03:40,480 --> 00:03:47,360
the history of anika but

00:03:43,360 --> 00:03:50,239
i at least know what it is

00:03:47,360 --> 00:03:51,040
okay let's see at some contribution so

00:03:50,239 --> 00:03:52,959
we

00:03:51,040 --> 00:03:54,239
you can see that the project is still

00:03:52,959 --> 00:03:57,760
alive

00:03:54,239 --> 00:04:01,760
there are almost 2000 commits

00:03:57,760 --> 00:04:05,120
we have up slightly above

00:04:01,760 --> 00:04:07,760
50 contributors there

00:04:05,120 --> 00:04:08,879
we are almost half thousand issues

00:04:07,760 --> 00:04:13,120
created

00:04:08,879 --> 00:04:16,160
and we closed plenty of them

00:04:13,120 --> 00:04:19,359
uh as you can see from this

00:04:16,160 --> 00:04:22,720
we still have some open and

00:04:19,359 --> 00:04:25,759
we are trying to work uh to close them

00:04:22,720 --> 00:04:29,520
as soon as possible uh

00:04:25,759 --> 00:04:31,919
current version of the anika is zero 18

00:04:29,520 --> 00:04:31,919
00:04:32,639 --> 00:04:39,840
for just to

00:04:37,199 --> 00:04:40,960
make it more interesting the number of

00:04:39,840 --> 00:04:44,080
projects that are

00:04:40,960 --> 00:04:47,800
currently watched by risk monitoring.org

00:04:44,080 --> 00:04:51,680
are 126

00:04:47,800 --> 00:04:54,639
435 and i think this issue this number

00:04:51,680 --> 00:04:56,080
will be much higher because there are

00:04:54,639 --> 00:04:59,120
new projects

00:04:56,080 --> 00:05:03,280
added each day

00:04:59,120 --> 00:05:06,160
just for this uh just for this talk

00:05:03,280 --> 00:05:07,120
i have here the number of packages that

00:05:06,160 --> 00:05:12,080
are mapped to

00:05:07,120 --> 00:05:15,120
opensuse distribution and we have 331

00:05:12,080 --> 00:05:18,720
packages up to open source

00:05:15,120 --> 00:05:22,240
it is primarily used by the fedora so

00:05:18,720 --> 00:05:25,440
there are plenty plenty of plenty more

00:05:22,240 --> 00:05:28,560
for fedora okay

00:05:25,440 --> 00:05:32,000
here you can see the diagram

00:05:28,560 --> 00:05:35,120
which represents how the ninja

00:05:32,000 --> 00:05:38,240
is working as you can see

00:05:35,120 --> 00:05:40,320
there are two kind of users you

00:05:38,240 --> 00:05:41,680
that could interact it one is the

00:05:40,320 --> 00:05:44,560
regular user

00:05:41,680 --> 00:05:46,960
which could add new project add new

00:05:44,560 --> 00:05:50,479
distribution to the anita

00:05:46,960 --> 00:05:54,160
edit project flag project flag

00:05:50,479 --> 00:05:56,800
is uh is a mechanism that is used

00:05:54,160 --> 00:05:58,400
to mark the project as there is some

00:05:56,800 --> 00:06:03,520
issue

00:05:58,400 --> 00:06:06,560
and admin usually looks at it and

00:06:03,520 --> 00:06:11,600
investigate if this is a really issue

00:06:06,560 --> 00:06:11,600
and close it solve it and close it

00:06:12,240 --> 00:06:16,319
he could add new mapping mappings are

00:06:14,960 --> 00:06:18,800
the mappings between

00:06:16,319 --> 00:06:21,840
the project and the distribution and the

00:06:18,800 --> 00:06:25,360
name of the package in the distribution

00:06:21,840 --> 00:06:28,639
the admin could do some advanced

00:06:25,360 --> 00:06:29,759
roles he could delete projects delete

00:06:28,639 --> 00:06:32,840
mappings

00:06:29,759 --> 00:06:34,240
the distribution he could edit

00:06:32,840 --> 00:06:37,600
distribution

00:06:34,240 --> 00:06:40,960
he could close flags that are solved

00:06:37,600 --> 00:06:42,240
and there is he could also ban regular

00:06:40,960 --> 00:06:46,160
users

00:06:42,240 --> 00:06:51,039
and create admins from the

00:06:46,160 --> 00:06:53,680
regular users if needed so everybody who

00:06:51,039 --> 00:06:54,880
works with aninja could become an admin

00:06:53,680 --> 00:06:58,160
just uh

00:06:54,880 --> 00:07:02,000
say if you want and i couldn't

00:06:58,160 --> 00:07:05,360
make it happen the

00:07:02,000 --> 00:07:08,639
anika has two other

00:07:05,360 --> 00:07:09,440
parts that are parts of it but they are

00:07:08,639 --> 00:07:13,360
running as

00:07:09,440 --> 00:07:17,360
a separate separate application

00:07:13,360 --> 00:07:20,080
uh the version checker which is

00:07:17,360 --> 00:07:20,080
being run

00:07:20,400 --> 00:07:27,120
regularly and it's checking

00:07:23,759 --> 00:07:27,120
every project that is there

00:07:28,160 --> 00:07:32,960
to if there is new version uh there are

00:07:31,280 --> 00:07:35,120
some rules for the checking

00:07:32,960 --> 00:07:36,400
it's not checking every project every

00:07:35,120 --> 00:07:39,840
run there

00:07:36,400 --> 00:07:41,919
there are exceptions uh the main

00:07:39,840 --> 00:07:42,880
exception is the github because github

00:07:41,919 --> 00:07:45,919
is limited

00:07:42,880 --> 00:07:49,680
by the number of requests you could do

00:07:45,919 --> 00:07:53,840
in one hour so in this case

00:07:49,680 --> 00:07:58,080
the new version is actually

00:07:53,840 --> 00:08:00,960
limited some sometime but most of the

00:07:58,080 --> 00:08:02,800
projects if there is new version we will

00:08:00,960 --> 00:08:05,840
know about it in a

00:08:02,800 --> 00:08:08,639
matter of hours there is

00:08:05,840 --> 00:08:09,360
also libraries io consumer the library's

00:08:08,639 --> 00:08:12,400
io

00:08:09,360 --> 00:08:15,199
consumer is just

00:08:12,400 --> 00:08:15,199
it's just a

00:08:15,440 --> 00:08:22,160
listener for the library's i o messages

00:08:18,960 --> 00:08:25,199
and when it founds new project

00:08:22,160 --> 00:08:25,199
that is interesting

00:08:25,280 --> 00:08:30,960
is uh actually host on the on the

00:08:28,560 --> 00:08:34,320
platform we are interested in

00:08:30,960 --> 00:08:37,680
uh then it reports it to anita and

00:08:34,320 --> 00:08:38,959
creates a new project if this is

00:08:37,680 --> 00:08:43,599
configured

00:08:38,959 --> 00:08:46,080
or reports a new version

00:08:43,599 --> 00:08:46,959
if the new version is reported that

00:08:46,080 --> 00:08:48,880
anija

00:08:46,959 --> 00:08:50,959
is sending the message to fedora

00:08:48,880 --> 00:08:54,080
messaging broker

00:08:50,959 --> 00:08:57,040
the anika is sending message in

00:08:54,080 --> 00:08:57,839
almost every change that will happen in

00:08:57,040 --> 00:09:01,120
the

00:08:57,839 --> 00:09:04,320
application so if you want to

00:09:01,120 --> 00:09:07,760
see the history you could use

00:09:04,320 --> 00:09:11,440
or data grappler

00:09:07,760 --> 00:09:14,320
application which is actually

00:09:11,440 --> 00:09:14,320
uh only

00:09:14,720 --> 00:09:20,800
only grappler for the messages in the

00:09:17,839 --> 00:09:22,080
in the message pro message broker and

00:09:20,800 --> 00:09:25,040
you could see what

00:09:22,080 --> 00:09:27,120
exactly it was sent and what changed

00:09:25,040 --> 00:09:29,839
into anika

00:09:27,120 --> 00:09:31,760
probably there is but there should be a

00:09:29,839 --> 00:09:34,880
full history of anika

00:09:31,760 --> 00:09:36,320
so the current situation current

00:09:34,880 --> 00:09:38,720
situation it aniya

00:09:36,320 --> 00:09:39,760
is uh that we are working on the

00:09:38,720 --> 00:09:44,080
milestone

00:09:39,760 --> 00:09:44,399
1.0 because um is mature enough i just

00:09:44,080 --> 00:09:50,080
uh

00:09:44,399 --> 00:09:50,080
stayed with previous versioning system

00:09:50,560 --> 00:09:57,279
here is a link to the to the

00:09:54,000 --> 00:09:57,600
actual milestone you could see what is

00:09:57,279 --> 00:10:00,640
it

00:09:57,600 --> 00:10:04,240
what needs to be done what is done

00:10:00,640 --> 00:10:08,320
most of the things for the 1.0 are done

00:10:04,240 --> 00:10:08,320
i just need i just want to

00:10:08,800 --> 00:10:16,320
do few more features

00:10:12,480 --> 00:10:18,800
and update the documentation to

00:10:16,320 --> 00:10:21,920
more to better state because there are

00:10:18,800 --> 00:10:26,160
plenty of things that are outdated

00:10:21,920 --> 00:10:29,600
um because we have uh

00:10:26,160 --> 00:10:32,959
we have octoberfest this month anika

00:10:29,600 --> 00:10:36,079
is part of it so if you want to help

00:10:32,959 --> 00:10:37,120
on the aninja there are issues that are

00:10:36,079 --> 00:10:40,720
marked

00:10:37,120 --> 00:10:44,560
that are labeled oktoberfest so

00:10:40,720 --> 00:10:48,480
you could do it it's it's nice

00:10:44,560 --> 00:10:52,240
way to start contributing to it

00:10:48,480 --> 00:10:55,600
so next one is the new hot nest

00:10:52,240 --> 00:10:57,279
the new hotness is floating island in a

00:10:55,600 --> 00:11:00,399
realm of magic

00:10:57,279 --> 00:11:03,839
it's actually the point

00:11:00,399 --> 00:11:07,040
between uh anika and

00:11:03,839 --> 00:11:09,519
fedora to race monitoring and federal

00:11:07,040 --> 00:11:09,519
hourland

00:11:09,920 --> 00:11:13,120
here are some statistics the first

00:11:12,160 --> 00:11:16,399
comment was

00:11:13,120 --> 00:11:21,839
13 march 2014

00:11:16,399 --> 00:11:25,920
first race one was 0.1.2

00:11:21,839 --> 00:11:29,440
uh 17 november 2014 i'm not sure why the

00:11:25,920 --> 00:11:32,800
first release was uh

00:11:29,440 --> 00:11:36,959
has to in minor version because uh

00:11:32,800 --> 00:11:38,000
i'm just in uh not my innovation race

00:11:36,959 --> 00:11:40,880
version

00:11:38,000 --> 00:11:41,200
uh i didn't found any tag that should be

00:11:40,880 --> 00:11:44,720
that

00:11:41,200 --> 00:11:46,480
will be older than this so it's possible

00:11:44,720 --> 00:11:47,279
that there was summary is just not

00:11:46,480 --> 00:11:52,399
attacked

00:11:47,279 --> 00:11:57,120
before there are 440

00:11:52,399 --> 00:12:00,680
commits from 22 different distributors

00:11:57,120 --> 00:12:04,320
we have above almost

00:12:00,680 --> 00:12:06,160
150 issues created and we close the most

00:12:04,320 --> 00:12:10,639
of them

00:12:06,160 --> 00:12:13,920
current version is 0.13.1

00:12:10,639 --> 00:12:17,120
uh i'm currently working

00:12:13,920 --> 00:12:19,519
as same as aninja on 1.0

00:12:17,120 --> 00:12:20,560
but there are plenty of work this will

00:12:19,519 --> 00:12:23,519
be released

00:12:20,560 --> 00:12:24,639
maybe i in the meantime i will release

00:12:23,519 --> 00:12:28,000
some bug fix

00:12:24,639 --> 00:12:31,680
uh release you will see

00:12:28,000 --> 00:12:36,320
okay so the new hotness is actually

00:12:31,680 --> 00:12:40,079
much more complex it's

00:12:36,320 --> 00:12:43,760
complex into when you

00:12:40,079 --> 00:12:46,959
take in consideration the number of uh

00:12:43,760 --> 00:12:51,040
external uh application

00:12:46,959 --> 00:12:54,560
uh it needs to go to actually

00:12:51,040 --> 00:12:57,600
communicate with it's easier

00:12:54,560 --> 00:13:01,120
as a script it's much less code based

00:12:57,600 --> 00:13:04,839
and uh anita but

00:13:01,120 --> 00:13:06,880
it communicates with plenty of other

00:13:04,839 --> 00:13:10,240
projects

00:13:06,880 --> 00:13:12,720
it starts the journey starts with fedora

00:13:10,240 --> 00:13:15,760
messaging broker

00:13:12,720 --> 00:13:18,800
it actually sends a message that the new

00:13:15,760 --> 00:13:22,880
hotness wants to consume

00:13:18,800 --> 00:13:27,680
in the case that this is the new version

00:13:22,880 --> 00:13:32,480
it uh contacts uh md api

00:13:27,680 --> 00:13:35,600
it contacts pdc which are uh or

00:13:32,480 --> 00:13:39,519
md api is the metadata api which

00:13:35,600 --> 00:13:42,079
uh let us check if the project is

00:13:39,519 --> 00:13:42,639
uh if the project is still active if we

00:13:42,079 --> 00:13:46,160
should

00:13:42,639 --> 00:13:47,199
report this the pdc just looks at if

00:13:46,160 --> 00:13:51,519
it's retired

00:13:47,199 --> 00:13:51,519
or what version is actually there

00:13:52,079 --> 00:13:58,720
then we contacted pakur pakur we

00:13:55,120 --> 00:14:02,160
are hosting our packages searches

00:13:58,720 --> 00:14:05,360
there we look what on the notification

00:14:02,160 --> 00:14:09,440
settings it could be set

00:14:05,360 --> 00:14:12,959
on the pagor page

00:14:09,440 --> 00:14:17,199
the 10 week if this

00:14:12,959 --> 00:14:20,240
all is correct we have a new version

00:14:17,199 --> 00:14:21,440
it's uh the project is still alive we

00:14:20,240 --> 00:14:24,560
should report it

00:14:21,440 --> 00:14:25,120
we contact a bugzilla and create a

00:14:24,560 --> 00:14:27,519
ticket

00:14:25,120 --> 00:14:29,120
or update the ticket that was created

00:14:27,519 --> 00:14:33,760
before

00:14:29,120 --> 00:14:37,199
in case the user wants to have

00:14:33,760 --> 00:14:39,920
even the scourge build we will send

00:14:37,199 --> 00:14:41,040
we will prepare it and send the koji

00:14:39,920 --> 00:14:45,600
information that we

00:14:41,040 --> 00:14:50,000
want to build it and then wait on the

00:14:45,600 --> 00:14:53,040
on the actual message from the koji that

00:14:50,000 --> 00:14:56,160
everything went well

00:14:53,040 --> 00:14:59,760
uh if this is a new mapping for

00:14:56,160 --> 00:15:02,480
uh for the project in anika

00:14:59,760 --> 00:15:02,800
we actually contact anika and just send

00:15:02,480 --> 00:15:06,160
uh

00:15:02,800 --> 00:15:10,399
just uh just uh

00:15:06,160 --> 00:15:14,240
send the api request to

00:15:10,399 --> 00:15:15,040
uh to do a check for the project because

00:15:14,240 --> 00:15:16,959
uh

00:15:15,040 --> 00:15:20,160
we need to check if there is new version

00:15:16,959 --> 00:15:23,360
because the mapping was changed

00:15:20,160 --> 00:15:25,519
okay so

00:15:23,360 --> 00:15:28,639
the current situation is that milestone

00:15:25,519 --> 00:15:32,079
1.0 is currently paying pork on

00:15:28,639 --> 00:15:34,880
the same as for anija there are much

00:15:32,079 --> 00:15:37,759
more to be done in the case of new

00:15:34,880 --> 00:15:37,759
hotness because

00:15:38,399 --> 00:15:45,839
there are for most of the things

00:15:42,160 --> 00:15:49,600
i need the staging environment uh

00:15:45,839 --> 00:15:52,639
for testing because

00:15:49,600 --> 00:15:56,560
i need to communicate with plenty of

00:15:52,639 --> 00:15:57,199
external services and i need some

00:15:56,560 --> 00:16:00,320
testing

00:15:57,199 --> 00:16:03,440
environment and right now we

00:16:00,320 --> 00:16:07,360
are we finished the

00:16:03,440 --> 00:16:10,560
data center move of fedora

00:16:07,360 --> 00:16:12,959
which was really big project and

00:16:10,560 --> 00:16:13,680
we are setting up the staging

00:16:12,959 --> 00:16:16,399
environment

00:16:13,680 --> 00:16:17,680
to have something to work on so right

00:16:16,399 --> 00:16:20,800
now i'm blocked on

00:16:17,680 --> 00:16:24,399
on the new hotness work

00:16:20,800 --> 00:16:24,720
the anika uh because it doesn't relies

00:16:24,399 --> 00:16:28,720
on

00:16:24,720 --> 00:16:31,440
anything external uh it could be work on

00:16:28,720 --> 00:16:31,440
without issue

00:16:32,000 --> 00:16:36,399
same as an ichat the new hotness is part

00:16:33,839 --> 00:16:39,680
of the oktoberfest event

00:16:36,399 --> 00:16:42,959
you could do some small changes

00:16:39,680 --> 00:16:46,079
uh still you can work with it

00:16:42,959 --> 00:16:49,040
it's just that you can't test it with

00:16:46,079 --> 00:16:50,800
actual systems to connect to but you

00:16:49,040 --> 00:16:53,920
could

00:16:50,800 --> 00:16:57,680
work on it and write a test test

00:16:53,920 --> 00:17:01,519
the new hotness and anita it

00:16:57,680 --> 00:17:04,959
both are almost

00:17:01,519 --> 00:17:08,480
100 test coverage so

00:17:04,959 --> 00:17:11,919
it's nice to work with them

00:17:08,480 --> 00:17:15,199
okay so how is this

00:17:11,919 --> 00:17:18,319
integrated to package workflow

00:17:15,199 --> 00:17:20,079
this is package workflow for fedora

00:17:18,319 --> 00:17:22,559
it is not integrated to open source

00:17:20,079 --> 00:17:25,199
package workflow

00:17:22,559 --> 00:17:27,919
this is where the magic actually happens

00:17:25,199 --> 00:17:31,200
and this is how it looks

00:17:27,919 --> 00:17:32,000
we have a package packager requests a

00:17:31,200 --> 00:17:35,280
repository

00:17:32,000 --> 00:17:38,480
for new package this is

00:17:35,280 --> 00:17:38,480
created in pakur

00:17:39,360 --> 00:17:48,400
he creates a project

00:17:43,679 --> 00:17:51,840
in anika and add new mapping

00:17:48,400 --> 00:17:55,120
i would be glad to have this automated

00:17:51,840 --> 00:17:58,840
in the future but right now

00:17:55,120 --> 00:18:01,679
it's it needs to be done manually by

00:17:58,840 --> 00:18:05,200
packager

00:18:01,679 --> 00:18:07,600
the paguyu there is a script that

00:18:05,200 --> 00:18:10,080
between pagyu and baxilla create the

00:18:07,600 --> 00:18:13,360
component

00:18:10,080 --> 00:18:16,640
synchronized pagiore with baxila

00:18:13,360 --> 00:18:19,840
it creates the component into boxilla

00:18:16,640 --> 00:18:23,440
so you could actually have something to

00:18:19,840 --> 00:18:26,559
report to the

00:18:23,440 --> 00:18:28,400
anika if phones a new new version

00:18:26,559 --> 00:18:30,880
it reports it to new hotness total new

00:18:28,400 --> 00:18:32,559
hotness and new hotness is creating a

00:18:30,880 --> 00:18:35,840
ticket in baxilla

00:18:32,559 --> 00:18:39,919
so in ideal case the packager

00:18:35,840 --> 00:18:41,360
always has up-to-date information about

00:18:39,919 --> 00:18:44,400
new versions

00:18:41,360 --> 00:18:47,280
there are exceptions

00:18:44,400 --> 00:18:48,559
like projects that are changing the

00:18:47,280 --> 00:18:52,080
version system

00:18:48,559 --> 00:18:54,320
that are hard to guess which version is

00:18:52,080 --> 00:18:57,440
actually latest

00:18:54,320 --> 00:19:00,080
and i've in

00:18:57,440 --> 00:19:00,080
a terrorist

00:19:00,559 --> 00:19:07,120
change i'm working on that will allow

00:19:03,840 --> 00:19:10,559
the anitja to report

00:19:07,120 --> 00:19:14,000
not only latest but everything it found

00:19:10,559 --> 00:19:17,039
and the new hotness could actually

00:19:14,000 --> 00:19:17,520
notify the users there is new version

00:19:17,039 --> 00:19:20,640
that

00:19:17,520 --> 00:19:21,919
seems uh that is not latest but we found

00:19:20,640 --> 00:19:24,160
a new version so

00:19:21,919 --> 00:19:26,000
if you are interested you could work on

00:19:24,160 --> 00:19:30,000
it

00:19:26,000 --> 00:19:33,200
okay so let's go to the demo you have

00:19:30,000 --> 00:19:36,400
here the anika

00:19:33,200 --> 00:19:36,640
this is how it looks i'm actually logged

00:19:36,400 --> 00:19:39,600
in

00:19:36,640 --> 00:19:41,360
you can log in using the fedora account

00:19:39,600 --> 00:19:45,280
or

00:19:41,360 --> 00:19:48,880
there is option to use open id

00:19:45,280 --> 00:19:50,559
or i'm not sure which option is the

00:19:48,880 --> 00:19:53,600
tiered one

00:19:50,559 --> 00:19:54,960
yeah i'm using the fedora account as you

00:19:53,600 --> 00:19:58,160
can see

00:19:54,960 --> 00:19:59,120
as you can see there are more uh

00:19:58,160 --> 00:20:02,159
projects than i

00:19:59,120 --> 00:20:05,600
actually announced because it's

00:20:02,159 --> 00:20:09,039
growing the number is growing

00:20:05,600 --> 00:20:12,400
um you can look at the docs

00:20:09,039 --> 00:20:14,000
if you want a quick this is the docs for

00:20:12,400 --> 00:20:16,960
the actual version

00:20:14,000 --> 00:20:16,960
that is deployed

00:20:17,039 --> 00:20:23,919
you can look at the projects

00:20:20,799 --> 00:20:26,880
here the

00:20:23,919 --> 00:20:26,880
projects are

00:20:27,840 --> 00:20:30,960
the projects are

00:20:31,039 --> 00:20:35,840
are just a list of top monitored

00:20:34,640 --> 00:20:40,960
projects

00:20:35,840 --> 00:20:43,919
i will i can look at some of it

00:20:40,960 --> 00:20:45,600
here you can see the latest version that

00:20:43,919 --> 00:20:50,080
is reported

00:20:45,600 --> 00:20:53,520
you can see the version list

00:20:50,080 --> 00:20:53,520
on the right side

00:20:53,760 --> 00:21:00,080
you can see the status

00:20:57,520 --> 00:21:01,039
of the project there was no new version

00:21:00,080 --> 00:21:02,960
found but

00:21:01,039 --> 00:21:04,559
this is okay we just didn't found

00:21:02,960 --> 00:21:07,520
anything new

00:21:04,559 --> 00:21:08,799
uh you can see home page of the project

00:21:07,520 --> 00:21:11,840
you can see backend

00:21:08,799 --> 00:21:14,880
the backend i will talk about talk

00:21:11,840 --> 00:21:18,000
about this uh more

00:21:14,880 --> 00:21:20,799
later the ecosystem

00:21:18,000 --> 00:21:21,679
ecosystem is only visible for the admins

00:21:20,799 --> 00:21:24,080
uh

00:21:21,679 --> 00:21:25,120
this is not something the user should be

00:21:24,080 --> 00:21:28,559
aware of

00:21:25,120 --> 00:21:32,720
it's just uh for our uh

00:21:28,559 --> 00:21:34,559
own uh info there is version scheme

00:21:32,720 --> 00:21:37,280
uh default version scheme for every

00:21:34,559 --> 00:21:40,559
project's rpm but if you allow to use

00:21:37,280 --> 00:21:43,600
semantic and uh calendar

00:21:40,559 --> 00:21:48,000
uh version checker it's the version

00:21:43,600 --> 00:21:51,520
it's rollover the version check is done

00:21:48,000 --> 00:21:52,080
and the delete project is actually only

00:21:51,520 --> 00:21:55,280
for the

00:21:52,080 --> 00:21:59,520
admins okay

00:21:55,280 --> 00:22:02,720
here below you can see the mappings

00:21:59,520 --> 00:22:06,480
as a simple user you could edit

00:22:02,720 --> 00:22:07,679
or add new mapping you could see that

00:22:06,480 --> 00:22:11,120
this project

00:22:07,679 --> 00:22:16,080
080 has a mapping for

00:22:11,120 --> 00:22:18,960
fedora uh actually three mappings i see

00:22:16,080 --> 00:22:20,240
uh two for ubuntu two for debian two for

00:22:18,960 --> 00:22:24,080
magaya

00:22:20,240 --> 00:22:24,080
two for arclinux and two for

00:22:24,840 --> 00:22:29,440
openmandriva

00:22:27,039 --> 00:22:30,799
here up the top you can see the flag

00:22:29,440 --> 00:22:33,600
button which is

00:22:30,799 --> 00:22:35,120
actually used to report anything if you

00:22:33,600 --> 00:22:38,240
flag it you would

00:22:35,120 --> 00:22:39,039
just do the write a reason why and

00:22:38,240 --> 00:22:42,080
submit it

00:22:39,039 --> 00:22:46,480
and we can

00:22:42,080 --> 00:22:49,600
as a admin you could look at

00:22:46,480 --> 00:22:53,600
all the flags that are reported on

00:22:49,600 --> 00:22:57,039
the flux page currently we have only

00:22:53,600 --> 00:23:01,360
a few of them so it's nice it's

00:22:57,039 --> 00:23:01,360
looks like most of them are solved

00:23:02,000 --> 00:23:05,760
here you can see the list of distro

00:23:03,840 --> 00:23:08,880
distributions

00:23:05,760 --> 00:23:12,559
the distributions could be

00:23:08,880 --> 00:23:16,000
added by every user

00:23:12,559 --> 00:23:20,799
so there we just uh

00:23:16,000 --> 00:23:23,919
changed the input method because

00:23:20,799 --> 00:23:25,600
before you could

00:23:23,919 --> 00:23:27,679
you could actually add a new

00:23:25,600 --> 00:23:30,480
distribution through

00:23:27,679 --> 00:23:32,880
the text field so we have plenty of

00:23:30,480 --> 00:23:36,880
typos

00:23:32,880 --> 00:23:40,480
but we the

00:23:36,880 --> 00:23:44,480
we change it into in to actual form

00:23:40,480 --> 00:23:45,039
so if do you if the distribution is

00:23:44,480 --> 00:23:47,279
actually

00:23:45,039 --> 00:23:48,880
uh already there you could just choose

00:23:47,279 --> 00:23:53,520
it from the

00:23:48,880 --> 00:23:56,960
from the drop down and there it is

00:23:53,520 --> 00:24:00,240
so the last uh thing you could do

00:23:56,960 --> 00:24:03,679
is to um not last but the

00:24:00,240 --> 00:24:04,799
last in the top menu is to add the

00:24:03,679 --> 00:24:07,840
project

00:24:04,799 --> 00:24:11,120
here you can see what could be

00:24:07,840 --> 00:24:15,840
a whole can you add it there is project

00:24:11,120 --> 00:24:20,400
name home page backend

00:24:15,840 --> 00:24:24,480
version scheme which could be

00:24:20,400 --> 00:24:26,480
could be choose from three options

00:24:24,480 --> 00:24:27,679
we have plenty of back ends supported

00:24:26,480 --> 00:24:31,120
began this actually

00:24:27,679 --> 00:24:36,080
the hosting service so

00:24:31,120 --> 00:24:36,080
you could just you could uh

00:24:36,159 --> 00:24:39,919
you could look at it and see plenty of

00:24:38,799 --> 00:24:43,200
plenty of them are

00:24:39,919 --> 00:24:45,360
supported and if it isn't supported

00:24:43,200 --> 00:24:46,640
you could always use custom but the

00:24:45,360 --> 00:24:51,200
custom is somewhere

00:24:46,640 --> 00:24:54,240
somewhat harder to actually set

00:24:51,200 --> 00:24:57,919
then you do a version pattern which is

00:24:54,240 --> 00:25:01,360
only on for the calendar versioning

00:24:57,919 --> 00:25:04,480
the semantic just used owner project

00:25:01,360 --> 00:25:08,480
this this one is change back is

00:25:04,480 --> 00:25:12,000
based on the back end the version prefix

00:25:08,480 --> 00:25:14,240
is used uh just to remove anything

00:25:12,000 --> 00:25:16,240
before the version if the project is

00:25:14,240 --> 00:25:19,600
using uh

00:25:16,240 --> 00:25:24,640
for instance uh for example a

00:25:19,600 --> 00:25:30,240
wii version then you could actually

00:25:24,640 --> 00:25:33,679
add a v to this field and it will be

00:25:30,240 --> 00:25:37,360
it will be removed from the

00:25:33,679 --> 00:25:41,039
sorting mechanism you could add

00:25:37,360 --> 00:25:43,840
some some mapping from the start here

00:25:41,039 --> 00:25:46,640
you can see the drop down that is

00:25:43,840 --> 00:25:47,679
that you could choose the distribution

00:25:46,640 --> 00:25:50,880
from

00:25:47,679 --> 00:25:54,000
and there you could uh

00:25:50,880 --> 00:25:57,360
write the name of the package the

00:25:54,000 --> 00:25:58,320
the checklist release on submit is when

00:25:57,360 --> 00:26:01,200
you submit it

00:25:58,320 --> 00:26:02,480
it checks for the latest release this is

00:26:01,200 --> 00:26:06,320
not needed but

00:26:02,480 --> 00:26:10,640
most of the projects are checked in the

00:26:06,320 --> 00:26:13,760
uh are checked till one hour

00:26:10,640 --> 00:26:17,039
so it's not needed to do it

00:26:13,760 --> 00:26:19,200
this way um

00:26:17,039 --> 00:26:21,440
the this will be changed in the in the

00:26:19,200 --> 00:26:24,400
future because i want to

00:26:21,440 --> 00:26:26,320
allow the user to actually test their

00:26:24,400 --> 00:26:29,600
settings if the project is

00:26:26,320 --> 00:26:34,159
could be found and everything before

00:26:29,600 --> 00:26:34,159
submitting it and adding the new project

00:26:34,720 --> 00:26:38,400
okay did i miss something i don't think

00:26:37,919 --> 00:26:40,640
so

00:26:38,400 --> 00:26:41,600
the last thing you could do is you can

00:26:40,640 --> 00:26:44,720
search for

00:26:41,600 --> 00:26:47,840
any project to the search field

00:26:44,720 --> 00:26:51,279
it will just uh show you

00:26:47,840 --> 00:26:54,799
we'll just show you the projects

00:26:51,279 --> 00:26:57,840
that are found the bottom of the page

00:26:54,799 --> 00:27:01,360
you could see where the

00:26:57,840 --> 00:27:05,360
last check was done

00:27:01,360 --> 00:27:08,240
and how many projects were checked

00:27:05,360 --> 00:27:09,279
how many was okay how many had some

00:27:08,240 --> 00:27:11,600
error

00:27:09,279 --> 00:27:12,720
how many hit to rate limit as you can

00:27:11,600 --> 00:27:16,320
see in the last

00:27:12,720 --> 00:27:20,080
check there was no rate limit hit

00:27:16,320 --> 00:27:22,000
which means that uh we didn't

00:27:20,080 --> 00:27:23,840
had any issue with the github rate

00:27:22,000 --> 00:27:27,360
limiting

00:27:23,840 --> 00:27:30,159
okay let's go back to the

00:27:27,360 --> 00:27:30,159
to the slides

00:27:30,960 --> 00:27:36,880
okay here we have references

00:27:35,039 --> 00:27:38,399
you can look at the release monitoring

00:27:36,880 --> 00:27:41,600
or blog post i'm

00:27:38,399 --> 00:27:45,600
trying to do a regular updates

00:27:41,600 --> 00:27:49,840
it's written from a magic word

00:27:45,600 --> 00:27:49,840
this is why i had the wizard head on

00:27:50,080 --> 00:27:53,520
there is a url for the release

00:27:52,960 --> 00:27:57,120
monitoring

00:27:53,520 --> 00:27:59,600
torque and the reparator repositories

00:27:57,120 --> 00:28:00,799
were else so you can look at the aninja

00:27:59,600 --> 00:28:03,760
anti-new hotness

00:28:00,799 --> 00:28:04,080
if you are interested you can help we

00:28:03,760 --> 00:28:08,799
are

00:28:04,080 --> 00:28:11,919
always happy to see any new contributor

00:28:08,799 --> 00:28:14,960
so thank you for

00:28:11,919 --> 00:28:19,440
attending this and

00:28:14,960 --> 00:28:23,279
hopefully i'm available in chat to

00:28:19,440 --> 00:28:23,279

YouTube URL: https://www.youtube.com/watch?v=72x_RLmgx48


