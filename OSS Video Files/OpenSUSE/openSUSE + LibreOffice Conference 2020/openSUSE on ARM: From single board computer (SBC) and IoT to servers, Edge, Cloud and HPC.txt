Title: openSUSE on ARM: From single board computer (SBC) and IoT to servers, Edge, Cloud and HPC
Publication date: 2020-11-06
Playlist: openSUSE + LibreOffice Conference 2020
Description: 
	This session will explain how openSUSE on ARM is built, tested and released (OBS, openQA) and what are the differences with openSUSE on x86. This will also cover the main ARM updates since previous openSUSE Conference in 2019 in Nuremberg.



Subscribe ►http://bit.ly/1G2KKZl

Offical Website ►https://www.opensuse.org
Follow us on Twitter ► https://twitter.com/openSUSE
Like us on Facebook ► https://www.facebook.com/en.openSUSE
Captions: 
	00:00:02,879 --> 00:00:07,120
okay so

00:00:03,840 --> 00:00:09,040
let's start um for open cesaro so

00:00:07,120 --> 00:00:11,120
basically we will try to cover

00:00:09,040 --> 00:00:12,799
um what happened since the last open

00:00:11,120 --> 00:00:15,599
source conference

00:00:12,799 --> 00:00:17,920
which means basically one year and a

00:00:15,599 --> 00:00:17,920
half

00:00:18,960 --> 00:00:23,359
so the agenda for today will be the

00:00:21,600 --> 00:00:26,480
following

00:00:23,359 --> 00:00:28,640
i will introduce myself quickly

00:00:26,480 --> 00:00:30,960
then we will have an overview of open

00:00:28,640 --> 00:00:34,960
season arm workflow

00:00:30,960 --> 00:00:38,160
we'll talk about obs open qa

00:00:34,960 --> 00:00:40,800
tambon do it tumbleweed and lip a little

00:00:38,160 --> 00:00:43,600
word about the open scissors wiki

00:00:40,800 --> 00:00:46,160
related to harm of course and the long

00:00:43,600 --> 00:00:46,160
to do list

00:00:48,399 --> 00:00:54,399
i'm guillain garde i'm a member of the

00:00:51,280 --> 00:00:57,840
open source community for years now

00:00:54,399 --> 00:01:00,640
i'm reachable with guillaume at

00:00:57,840 --> 00:01:03,840
opensuse.org

00:01:00,640 --> 00:01:06,560
um since two years

00:01:03,840 --> 00:01:07,439
i'm engineer at arm part of the distro

00:01:06,560 --> 00:01:10,479
team

00:01:07,439 --> 00:01:15,040
from the open source software group

00:01:10,479 --> 00:01:15,040
and i'm dedicated to caesar and opensuse

00:01:15,119 --> 00:01:19,759
i'm also the member a member of the

00:01:17,360 --> 00:01:22,640
opencaesarealist team

00:01:19,759 --> 00:01:23,200
and i take care of arm architectures

00:01:22,640 --> 00:01:27,119
which

00:01:23,200 --> 00:01:30,159
includes ar-64

00:01:27,119 --> 00:01:33,840
where we have tumbleweed lip

00:01:30,159 --> 00:01:36,640
and also jump i will talk about jump a

00:01:33,840 --> 00:01:36,640
little bit later

00:01:38,000 --> 00:01:42,320
it covers also on v7 with tumbleweed and

00:01:41,600 --> 00:01:45,840
lip

00:01:42,320 --> 00:01:48,079
and we also have mv6 in double width

00:01:45,840 --> 00:01:48,079
only

00:01:52,960 --> 00:01:57,200
before talking about the open season

00:01:55,280 --> 00:02:00,320
workflow

00:01:57,200 --> 00:02:01,680
a brief uh introduction to the open

00:02:00,320 --> 00:02:05,360
season workflow

00:02:01,680 --> 00:02:08,399
for tumbleweed so all the

00:02:05,360 --> 00:02:10,800
packages are built in factory project

00:02:08,399 --> 00:02:12,000
and if you want to submit a new package

00:02:10,800 --> 00:02:14,400
or an update

00:02:12,000 --> 00:02:16,640
you create a semi submit request from

00:02:14,400 --> 00:02:19,840
your home project

00:02:16,640 --> 00:02:23,280
and there is some review

00:02:19,840 --> 00:02:25,040
automatic or manual and also some

00:02:23,280 --> 00:02:28,080
automatic testing

00:02:25,040 --> 00:02:31,680
to validate this submit request

00:02:28,080 --> 00:02:35,200
if all is green it goes to factory

00:02:31,680 --> 00:02:39,440
and then once factory finish to build

00:02:35,200 --> 00:02:43,360
it's the snapshot is pushed to open qa

00:02:39,440 --> 00:02:48,160
and if all is green it's pushed to

00:02:43,360 --> 00:02:48,160
to the user as a tumbleweed

00:02:49,360 --> 00:02:55,920
forearm we don't choose directly the

00:02:52,640 --> 00:02:59,680
factory project we have a sub project

00:02:55,920 --> 00:03:03,040
which is open suse factory arm

00:02:59,680 --> 00:03:06,560
and for lip we have the same lip 15 2

00:03:03,040 --> 00:03:07,599
arm sub projects and in fact we just

00:03:06,560 --> 00:03:11,040
reuse

00:03:07,599 --> 00:03:11,760
all the sources and if you update

00:03:11,040 --> 00:03:15,519
something

00:03:11,760 --> 00:03:18,959
on x86 part it will be updated

00:03:15,519 --> 00:03:22,239
on arm side and there is just

00:03:18,959 --> 00:03:23,200
a small overlay to handle the snapshot

00:03:22,239 --> 00:03:26,159
version

00:03:23,200 --> 00:03:29,280
and the content of iso and ftp trees

00:03:26,159 --> 00:03:29,280
which can differ from

00:03:30,840 --> 00:03:35,920
x86

00:03:33,680 --> 00:03:37,440
so here you have an example of the

00:03:35,920 --> 00:03:40,720
overlay

00:03:37,440 --> 00:03:43,440
so you have some packages only on the

00:03:40,720 --> 00:03:44,799
arm side and you also have inherited

00:03:43,440 --> 00:03:48,319
packages

00:03:44,799 --> 00:03:50,720
so that's all the sources from x86

00:03:48,319 --> 00:03:50,720
projects

00:03:54,080 --> 00:03:58,239
so if we go back to the arm side of

00:03:57,519 --> 00:04:01,200
things

00:03:58,239 --> 00:04:01,920
if you want something in tumbleweed for

00:04:01,200 --> 00:04:05,040
arm

00:04:01,920 --> 00:04:08,720
you need to submit it into factory for

00:04:05,040 --> 00:04:11,840
x86 so this is a usual

00:04:08,720 --> 00:04:14,959
submission process to factory and

00:04:11,840 --> 00:04:17,359
then factory arm inherits the sources

00:04:14,959 --> 00:04:18,560
and once the build is finished it's

00:04:17,359 --> 00:04:22,240
pushed to open qa

00:04:18,560 --> 00:04:22,880
arm and if it's green it's pushed to

00:04:22,240 --> 00:04:29,840
tumble with

00:04:22,880 --> 00:04:29,840
arm on the download server

00:04:32,080 --> 00:04:38,960
since a year and a half we did not

00:04:35,280 --> 00:04:38,960
add a bill power

00:04:39,120 --> 00:04:44,400
so we are still a bit short for 32-bit

00:04:41,840 --> 00:04:47,120
arm build

00:04:44,400 --> 00:04:49,360
but we managed to to get things built

00:04:47,120 --> 00:04:52,560
anyway

00:04:49,360 --> 00:04:56,240
we have enough power to build air 64

00:04:52,560 --> 00:05:00,560
on time and we also enabled

00:04:56,240 --> 00:05:03,759
rings so this is two sub projects

00:05:00,560 --> 00:05:06,960
rings zero it rings one

00:05:03,759 --> 00:05:07,919
which are core packages which needs to

00:05:06,960 --> 00:05:10,880
be

00:05:07,919 --> 00:05:11,919
always rebuildable so we make sure all

00:05:10,880 --> 00:05:15,120
is green

00:05:11,919 --> 00:05:18,400
here it's enabled since

00:05:15,120 --> 00:05:18,400
a few weeks now

00:05:19,199 --> 00:05:22,880
but we have not enough build power to

00:05:22,160 --> 00:05:26,320
enable

00:05:22,880 --> 00:05:29,840
staging so when you submit something

00:05:26,320 --> 00:05:33,440
to factory all the checks

00:05:29,840 --> 00:05:38,880
are done for x86 there is no checks for

00:05:33,440 --> 00:05:42,639
arm yet because of lack of build power

00:05:38,880 --> 00:05:45,039
and of course we fixed a lot of build

00:05:42,639 --> 00:05:45,039
failures

00:05:47,360 --> 00:05:55,199
here are few numbers from today

00:05:51,199 --> 00:05:58,479
so you can see that air 64 um

00:05:55,199 --> 00:06:04,319
have pretty much the same numbers as

00:05:58,479 --> 00:06:06,560
x86 64 bits or 32 bits

00:06:04,319 --> 00:06:07,440
for succeeded packages or failed

00:06:06,560 --> 00:06:10,639
packages

00:06:07,440 --> 00:06:10,639
or unresolved levels

00:06:11,280 --> 00:06:16,960
that's more or less the same

00:06:14,479 --> 00:06:16,960
numbers

00:06:17,759 --> 00:06:21,840
which is very good

00:06:22,639 --> 00:06:29,680
if we have some people here who

00:06:26,160 --> 00:06:32,720
who are maintainers of some obs

00:06:29,680 --> 00:06:36,800
projects i ask you

00:06:32,720 --> 00:06:40,000
to enable arm build to make sure

00:06:36,800 --> 00:06:41,840
all is building fine and now and in the

00:06:40,000 --> 00:06:45,440
future

00:06:41,840 --> 00:06:49,280
so if you want to add it just click

00:06:45,440 --> 00:06:51,280
repositories on top of your project

00:06:49,280 --> 00:06:52,560
add from a distribution and then you

00:06:51,280 --> 00:06:55,199
just need to

00:06:52,560 --> 00:06:56,319
check open through the tumbleweed or

00:06:55,199 --> 00:06:59,759
factory arm

00:06:56,319 --> 00:07:01,680
or lip15 to arm

00:06:59,759 --> 00:07:03,280
the difference between factory arm and

00:07:01,680 --> 00:07:06,400
tumbleweed is

00:07:03,280 --> 00:07:07,919
tumbleweed is a released version whereas

00:07:06,400 --> 00:07:10,319
opensuse factory

00:07:07,919 --> 00:07:12,000
is a current version built in the

00:07:10,319 --> 00:07:15,039
project

00:07:12,000 --> 00:07:17,440
so tumbleweed is what users have access

00:07:15,039 --> 00:07:20,240
to

00:07:17,440 --> 00:07:20,960
and on opens to the tumbleweed so you

00:07:20,240 --> 00:07:24,319
have

00:07:20,960 --> 00:07:28,840
x86 architectures but you also have

00:07:24,319 --> 00:07:31,840
ar64 but you don't have armv6 and

00:07:28,840 --> 00:07:31,840
mv7

00:07:34,160 --> 00:07:41,520
on open qa side i will have

00:07:37,520 --> 00:07:45,199
just a brief road on how open qa works

00:07:41,520 --> 00:07:46,319
so you have a server a chat for all

00:07:45,199 --> 00:07:49,599
architectures

00:07:46,319 --> 00:07:52,560
with a web interface and api

00:07:49,599 --> 00:07:53,199
this server holds all the files so it

00:07:52,560 --> 00:07:56,840
could be

00:07:53,199 --> 00:07:58,080
iso images or add disk images also

00:07:56,840 --> 00:08:01,360
repositories

00:07:58,080 --> 00:08:04,080
um it's also also

00:08:01,360 --> 00:08:06,400
all the test switch information uh so

00:08:04,080 --> 00:08:10,840
the screenshots

00:08:06,400 --> 00:08:13,120
you will compare to and the test

00:08:10,840 --> 00:08:15,840
themself and this server will

00:08:13,120 --> 00:08:18,160
control test runs so it will ask a

00:08:15,840 --> 00:08:23,120
worker to to start or to stop

00:08:18,160 --> 00:08:26,319
and it will store the results at the end

00:08:23,120 --> 00:08:30,160
and around this server you have

00:08:26,319 --> 00:08:33,279
multiple machines which we call rockers

00:08:30,160 --> 00:08:36,719
and most of them runs multiple

00:08:33,279 --> 00:08:39,519
virtual machines so it's using cameo

00:08:36,719 --> 00:08:40,640
to run tests inside but you also have

00:08:39,519 --> 00:08:43,680
the possibility to

00:08:40,640 --> 00:08:46,800
run tests on real hardware so

00:08:43,680 --> 00:08:50,720
we we do it for forearm

00:08:46,800 --> 00:08:54,240
i'll have a word about it later

00:08:50,720 --> 00:08:57,040
and each test run some actions

00:08:54,240 --> 00:08:59,279
and check if the result is expected or

00:08:57,040 --> 00:08:59,279
not

00:09:01,200 --> 00:09:07,600
so here you have the server

00:09:04,800 --> 00:09:08,959
which communicates with two workers to

00:09:07,600 --> 00:09:12,320
start

00:09:08,959 --> 00:09:14,560
os auto insta software

00:09:12,320 --> 00:09:15,519
which will run most of the time cameo

00:09:14,560 --> 00:09:19,279
but can

00:09:15,519 --> 00:09:23,839
also flash some real hardware

00:09:19,279 --> 00:09:23,839
and power them up and power them down

00:09:27,440 --> 00:09:32,640
so here is a very little test it's just

00:09:30,320 --> 00:09:36,399
a media check test so

00:09:32,640 --> 00:09:39,440
it just starts an iso

00:09:36,399 --> 00:09:42,560
and select a media checked

00:09:39,440 --> 00:09:45,760
entry on the menu and wait uh

00:09:42,560 --> 00:09:49,519
until the the test complete and

00:09:45,760 --> 00:09:53,040
if all here all is fine so you have

00:09:49,519 --> 00:09:56,959
a pest flag which is green

00:09:53,040 --> 00:10:01,200
and you also have the the time here

00:09:56,959 --> 00:10:03,920
which is new since early 2020

00:10:01,200 --> 00:10:05,760
which can be useful if you have a long

00:10:03,920 --> 00:10:08,320
test

00:10:05,760 --> 00:10:10,399
to check which part of the test is

00:10:08,320 --> 00:10:13,680
taking too long

00:10:10,399 --> 00:10:13,680
and try to work on it

00:10:17,279 --> 00:10:20,560
on the harm side of things it's mainly

00:10:20,000 --> 00:10:24,000
for

00:10:20,560 --> 00:10:27,680
ir64 we have few open qa tests for

00:10:24,000 --> 00:10:32,399
mv7 targets in tumbleweed but

00:10:27,680 --> 00:10:36,160
that's it's only two to test since

00:10:32,399 --> 00:10:38,800
uh fall 2018 um we have a

00:10:36,160 --> 00:10:40,640
d05 machine which is on the on the

00:10:38,800 --> 00:10:44,160
picture

00:10:40,640 --> 00:10:47,360
which has 64 cores um

00:10:44,160 --> 00:10:50,480
with um in a sram

00:10:47,360 --> 00:10:53,200
and a big statist sata disc

00:10:50,480 --> 00:10:54,640
which allowed to to run 16 workers in

00:10:53,200 --> 00:10:58,160
parallel

00:10:54,640 --> 00:10:58,160
so this is for cameo test

00:10:59,040 --> 00:11:05,680
but we have added some remote workers so

00:11:02,320 --> 00:11:09,680
that means it's not on the same

00:11:05,680 --> 00:11:13,600
network as a open qa

00:11:09,680 --> 00:11:17,040
d05 machine and open qa server

00:11:13,600 --> 00:11:19,920
so we have a remote sender x2 machine

00:11:17,040 --> 00:11:20,320
we also have amazon machine with a a1

00:11:19,920 --> 00:11:23,600
and

00:11:20,320 --> 00:11:23,600
m6 m6g

00:11:24,160 --> 00:11:28,160
and we have some markers which are not

00:11:27,040 --> 00:11:30,880
always available

00:11:28,160 --> 00:11:31,839
just booted when we need to to speed up

00:11:30,880 --> 00:11:35,839
the test

00:11:31,839 --> 00:11:38,720
so there is a honeycomb lx2k and

00:11:35,839 --> 00:11:38,720
n1sdb

00:11:39,519 --> 00:11:47,040
so all of them are runs cameo tests

00:11:43,040 --> 00:11:50,560
and we have real hardware testing

00:11:47,040 --> 00:11:53,920
so on raspberry pi 2 which is our v7

00:11:50,560 --> 00:11:57,839
and on raspberry pi 3 and 4 which is

00:11:53,920 --> 00:11:57,839
which are ar64

00:12:02,320 --> 00:12:10,070
i took some numbers from today

00:12:06,639 --> 00:12:11,320
for tumbleweed we run

00:12:10,070 --> 00:12:14,000
[Music]

00:12:11,320 --> 00:12:17,680
149 tests plus

00:12:14,000 --> 00:12:17,680
70 tests for the kernel part

00:12:18,079 --> 00:12:25,839
and i gave you the details

00:12:21,680 --> 00:12:28,560
under i would just highlight

00:12:25,839 --> 00:12:30,480
the justin source image tested on

00:12:28,560 --> 00:12:33,440
raspberry pi 2

00:12:30,480 --> 00:12:35,760
and raspberry pi 3. the tests on

00:12:33,440 --> 00:12:38,720
raspberry pi 4 are in

00:12:35,760 --> 00:12:40,160
a separate project because i added them

00:12:38,720 --> 00:12:42,639
only this week

00:12:40,160 --> 00:12:44,720
and i need to check all this green

00:12:42,639 --> 00:12:48,240
before moving them to

00:12:44,720 --> 00:12:48,240
to the normal tumbleweed test

00:12:48,880 --> 00:12:57,680
and on lymphe lip 15 2 we had

00:12:52,800 --> 00:12:57,680
a lot less tests with only 82 tests

00:13:02,160 --> 00:13:09,360
for tumbleweed and cubic micro s um

00:13:06,399 --> 00:13:11,040
we enabled automated email notification

00:13:09,360 --> 00:13:15,440
when a new snapshot

00:13:11,040 --> 00:13:18,639
is released so that's very convenient

00:13:15,440 --> 00:13:20,240
because people are aware of the the new

00:13:18,639 --> 00:13:23,360
snapshot availability

00:13:20,240 --> 00:13:24,480
and also what changed what are the main

00:13:23,360 --> 00:13:27,279
changes

00:13:24,480 --> 00:13:27,279
in this snapshot

00:13:27,760 --> 00:13:36,000
of course we fixed a lot of packages

00:13:32,320 --> 00:13:37,519
by fixing i mean at build time in obs

00:13:36,000 --> 00:13:40,079
but also at runtime in

00:13:37,519 --> 00:13:40,079
open qa

00:13:40,959 --> 00:13:45,040
we also have new packages we have a lot

00:13:44,560 --> 00:13:48,320
of them

00:13:45,040 --> 00:13:51,040
in a machine learning field with

00:13:48,320 --> 00:13:55,279
tensorflow tensorflow 2 gvm rmn

00:13:51,040 --> 00:13:56,399
and more and we also have new systems

00:13:55,279 --> 00:13:59,600
and new devices

00:13:56,399 --> 00:14:02,959
support thanks to the up-to-date kernel

00:13:59,600 --> 00:14:05,760
and also up-to-date user space software

00:14:02,959 --> 00:14:06,079
so for example we know we now have lots

00:14:05,760 --> 00:14:09,040
of

00:14:06,079 --> 00:14:10,240
mali gpu support thanks to lima and band

00:14:09,040 --> 00:14:12,639
fraud's pen first

00:14:10,240 --> 00:14:12,639
project

00:14:13,440 --> 00:14:16,959
and we also have a new system support

00:14:16,320 --> 00:14:20,480
thanks to

00:14:16,959 --> 00:14:22,480
new contrib which is for the pine phone

00:14:20,480 --> 00:14:31,680
so if you have one bind phone you can

00:14:22,480 --> 00:14:35,360
run open source on it

00:14:31,680 --> 00:14:38,320
and we enabled some um

00:14:35,360 --> 00:14:38,320
specific features

00:14:38,639 --> 00:14:45,040
so here you have a link to the wiki

00:14:42,720 --> 00:14:46,240
to the page arm architecture support

00:14:45,040 --> 00:14:49,680
where we

00:14:46,240 --> 00:14:52,079
we are trying to to log all all the

00:14:49,680 --> 00:14:53,199
features we enabled in tumbleweed and in

00:14:52,079 --> 00:14:56,720
leap

00:14:53,199 --> 00:14:58,720
so for example um we have the rbi dot

00:14:56,720 --> 00:15:02,199
one less alessiatomics

00:14:58,720 --> 00:15:04,000
features which is enabled since snapshot

00:15:02,199 --> 00:15:06,480
1920602 so back in

00:15:04,000 --> 00:15:06,480
in june

00:15:07,199 --> 00:15:12,130
another important features is rv8.3

00:15:10,240 --> 00:15:14,079
printer authentication

00:15:12,130 --> 00:15:16,320
[Music]

00:15:14,079 --> 00:15:17,120
we have the kernel support space which

00:15:16,320 --> 00:15:20,880
is enabled

00:15:17,120 --> 00:15:21,279
since june as well and user space which

00:15:20,880 --> 00:15:25,199
is

00:15:21,279 --> 00:15:28,720
still work in progress but the target is

00:15:25,199 --> 00:15:32,079
october this year so this month so

00:15:28,720 --> 00:15:36,959
we are not far too to enable it

00:15:32,079 --> 00:15:40,399
for mva.5 branch target identification

00:15:36,959 --> 00:15:43,680
bti in short we enabled it in kernel

00:15:40,399 --> 00:15:47,440
uh since snapshot 2020 0821

00:15:43,680 --> 00:15:50,800
so in august and for user space

00:15:47,440 --> 00:15:53,279
uh we will enable it at the same time as

00:15:50,800 --> 00:15:54,160
quantitative pointer authentication user

00:15:53,279 --> 00:15:57,279
space

00:15:54,160 --> 00:15:59,600
so this month in few days or

00:15:57,279 --> 00:15:59,600
weeks

00:16:03,360 --> 00:16:11,600
for lip 15.2 how it was built

00:16:08,079 --> 00:16:12,320
it inherits and rebuilds c15 sp2

00:16:11,600 --> 00:16:14,959
packages

00:16:12,320 --> 00:16:17,279
for some core packages such as gcc

00:16:14,959 --> 00:16:20,079
kernel or cameo

00:16:17,279 --> 00:16:20,639
and it also inherits and rebuilds leap

00:16:20,079 --> 00:16:25,120
fifteen

00:16:20,639 --> 00:16:25,120
one packages for for the others one

00:16:25,279 --> 00:16:30,079
and if some package maintainers want to

00:16:28,160 --> 00:16:31,600
they can push updates from tumbleweed as

00:16:30,079 --> 00:16:35,519
well

00:16:31,600 --> 00:16:38,959
so for lif152 we fixed a lot of packages

00:16:35,519 --> 00:16:41,279
again at build time and for runtime

00:16:38,959 --> 00:16:41,279
as well

00:16:42,079 --> 00:16:49,120
for the future leap

00:16:45,759 --> 00:16:52,959
we will use the jump

00:16:49,120 --> 00:16:55,040
project which will try to

00:16:52,959 --> 00:16:57,680
close the gap between open seasolip and

00:16:55,040 --> 00:17:01,040
caesarslee

00:16:57,680 --> 00:17:02,240
if you didn't attend the talk from

00:17:01,040 --> 00:17:05,280
lugosh

00:17:02,240 --> 00:17:06,799
yesterday you should have a look at this

00:17:05,280 --> 00:17:10,799
wiki page

00:17:06,799 --> 00:17:14,400
which will give you a good overview

00:17:10,799 --> 00:17:16,240
but basically it will get 315 sp to

00:17:14,400 --> 00:17:19,839
binaries

00:17:16,240 --> 00:17:19,839
instead of rebuilding them

00:17:20,000 --> 00:17:23,520
and it will get packaged up binaries as

00:17:22,160 --> 00:17:27,199
well and

00:17:23,520 --> 00:17:31,120
we will add few packages on top

00:17:27,199 --> 00:17:31,120
mainly for branding but not only

00:17:31,440 --> 00:17:38,080
and this this

00:17:35,120 --> 00:17:41,039
process uh will support all

00:17:38,080 --> 00:17:43,520
architectures from sli

00:17:41,039 --> 00:17:45,039
so ir64 is supported by sli so there is

00:17:43,520 --> 00:17:48,080
no problem but

00:17:45,039 --> 00:17:52,160
v7 is not supported by sli but was

00:17:48,080 --> 00:17:56,880
in lip so we are not sure yet

00:17:52,160 --> 00:17:56,880
what to do with mv7 for future leap

00:17:57,200 --> 00:18:04,000
we may drop mv7 support from lip

00:18:00,799 --> 00:18:05,280
or we may also rebuild all the packages

00:18:04,000 --> 00:18:08,400
for mv7

00:18:05,280 --> 00:18:12,080
it's still an open topic so if you have

00:18:08,400 --> 00:18:12,080
an opinion please share it

00:18:13,280 --> 00:18:21,120
and for the jump 52 project we

00:18:16,720 --> 00:18:21,120
also fixed a number of packages

00:18:23,919 --> 00:18:26,880
on the wiki side

00:18:27,200 --> 00:18:33,679
a number of arm pages have been updated

00:18:31,039 --> 00:18:35,200
including portal arm and some other

00:18:33,679 --> 00:18:37,600
compatibility

00:18:35,200 --> 00:18:37,600
pages

00:18:39,440 --> 00:18:46,240
there is a page on the joy pic

00:18:42,880 --> 00:18:46,760
which is a small case

00:18:46,240 --> 00:18:49,280
used to

00:18:46,760 --> 00:18:52,480
[Music]

00:18:49,280 --> 00:18:55,600
as a demo kit for open scissor and

00:18:52,480 --> 00:18:58,160
it includes a raspberry pi 3 so

00:18:55,600 --> 00:18:59,039
you can have a look and play with it

00:18:58,160 --> 00:19:02,559
it's

00:18:59,039 --> 00:19:04,559
quite fun we have new adword

00:19:02,559 --> 00:19:07,440
compatibility pages

00:19:04,559 --> 00:19:10,799
for example for the honeycomb rx2k or

00:19:07,440 --> 00:19:14,080
for the n1 sdp

00:19:10,799 --> 00:19:15,440
and again i added the link to the arm

00:19:14,080 --> 00:19:18,480
architecture support

00:19:15,440 --> 00:19:25,360
page to monitor the

00:19:18,480 --> 00:19:28,640
latest features of our hardware

00:19:25,360 --> 00:19:31,919
and finally we reach the to-do list

00:19:28,640 --> 00:19:34,320
so in the comics soon

00:19:31,919 --> 00:19:36,400
features we have uh point authentication

00:19:34,320 --> 00:19:37,520
and branch target under identification

00:19:36,400 --> 00:19:40,400
in tumbleweed

00:19:37,520 --> 00:19:40,400
in the next days

00:19:40,559 --> 00:19:45,280
also we will need to fix soon the d05

00:19:43,600 --> 00:19:48,320
machine in open qa

00:19:45,280 --> 00:19:52,960
because we upgraded from lib151

00:19:48,320 --> 00:19:56,240
to lib152 and we have

00:19:52,960 --> 00:19:59,520
problem on about performances so

00:19:56,240 --> 00:20:01,919
we need to to find why and fix it

00:19:59,520 --> 00:20:01,919
quickly

00:20:04,159 --> 00:20:07,600
we need to to improve continuously the

00:20:06,480 --> 00:20:10,640
the wiki

00:20:07,600 --> 00:20:11,600
with new information and more

00:20:10,640 --> 00:20:14,400
importantly

00:20:11,600 --> 00:20:15,280
up-to-date information so if you want to

00:20:14,400 --> 00:20:18,559
help

00:20:15,280 --> 00:20:21,919
feel free to edit it

00:20:18,559 --> 00:20:25,039
we need to improve obs as well um

00:20:21,919 --> 00:20:27,840
we need to enable uh arm build in

00:20:25,039 --> 00:20:28,400
more devil projects that way we can

00:20:27,840 --> 00:20:32,320
catch

00:20:28,400 --> 00:20:37,120
uh build failures early

00:20:32,320 --> 00:20:37,120
and not when it switches uh factory

00:20:38,400 --> 00:20:42,640
uh we should try to speed up on v7 build

00:20:41,280 --> 00:20:45,200
as well because it's

00:20:42,640 --> 00:20:45,840
uh the current bottlenecked bottleneck

00:20:45,200 --> 00:20:49,919
which is

00:20:45,840 --> 00:20:51,840
which slow down the tumbleweed a bit

00:20:49,919 --> 00:20:55,760
so it could be great if we could speed

00:20:51,840 --> 00:20:55,760
up on v6 and rp7 build

00:20:59,120 --> 00:21:06,000
on the point qs side

00:21:02,320 --> 00:21:10,480
we could probably add more ir64 test

00:21:06,000 --> 00:21:13,679
now we have more hardware

00:21:10,480 --> 00:21:14,799
we could try also to extend the general

00:21:13,679 --> 00:21:19,039
hardware

00:21:14,799 --> 00:21:21,200
back end which is the back end used to

00:21:19,039 --> 00:21:22,799
to test on the on the raspberry pi at

00:21:21,200 --> 00:21:26,480
the moment

00:21:22,799 --> 00:21:31,520
so you we just put up the the pi

00:21:26,480 --> 00:21:34,960
and connect via ssh and to run tests

00:21:31,520 --> 00:21:36,880
so we could add support for hdmi to usb

00:21:34,960 --> 00:21:40,080
sticks for example to

00:21:36,880 --> 00:21:43,120
to grab a screen output and

00:21:40,080 --> 00:21:47,280
also we could connect a usb gadget

00:21:43,120 --> 00:21:47,280
to send mouse and keyboard events

00:21:48,159 --> 00:21:51,840
and of course we need to monitor

00:21:50,000 --> 00:21:52,640
continuously build failures and test

00:21:51,840 --> 00:21:55,919
failures

00:21:52,640 --> 00:21:59,120
and fix them as soon as possible

00:21:55,919 --> 00:22:02,000
and report and or fixed bugs on

00:21:59,120 --> 00:22:02,000
opensuse boxing

00:22:04,720 --> 00:22:10,799
if you have some systems it could be

00:22:07,360 --> 00:22:14,000
single bot computer or server class

00:22:10,799 --> 00:22:17,600
feel free to reach out and tell us your

00:22:14,000 --> 00:22:21,679
if your experience is fine or if

00:22:17,600 --> 00:22:24,080
something breaks most of the time people

00:22:21,679 --> 00:22:26,480
tell when something breaks but they

00:22:24,080 --> 00:22:29,120
don't tell when all is fine so

00:22:26,480 --> 00:22:31,360
i'm happy to to her some good news as

00:22:29,120 --> 00:22:31,360
well

00:22:31,679 --> 00:22:36,400
we need to update software add new

00:22:34,640 --> 00:22:41,039
features

00:22:36,400 --> 00:22:44,880
and a good topic also is wsl

00:22:41,039 --> 00:22:48,240
support a new base for air 64.

00:22:44,880 --> 00:22:53,360
so there is a work in progress project

00:22:48,240 --> 00:22:56,480
in obs it's home qmg wsl

00:22:53,360 --> 00:22:57,600
so we have already some c and c space

00:22:56,480 --> 00:23:00,880
compiler uh

00:22:57,600 --> 00:23:04,640
running but we

00:23:00,880 --> 00:23:07,679
we need to to fix some packages uh again

00:23:04,640 --> 00:23:08,080
so if you want to help feel free to to

00:23:07,679 --> 00:23:12,720
join

00:23:08,080 --> 00:23:16,400
us and to join us you can

00:23:12,720 --> 00:23:19,520
use irc and open suse dash arm

00:23:16,400 --> 00:23:22,640
on friday on freynod and there is also

00:23:19,520 --> 00:23:25,440
open caesar dash arm at org

00:23:22,640 --> 00:23:25,440
as a mailing list

00:23:29,440 --> 00:23:34,240
so if you have question we have few

00:23:31,840 --> 00:23:34,240
minutes

00:23:34,840 --> 00:23:37,840
left

00:23:50,640 --> 00:23:55,279
well you're doing a good job with arm

00:23:52,559 --> 00:23:58,480
stuff so there's that

00:23:55,279 --> 00:24:01,679
okay thanks i mean

00:23:58,480 --> 00:24:03,520
it was one of the few opensuse was

00:24:01,679 --> 00:24:05,520
i think the only one that worked on my

00:24:03,520 --> 00:24:08,799
raspberry pi 4 out of the gate

00:24:05,520 --> 00:24:10,720
everything else just didn't it it took

00:24:08,799 --> 00:24:14,400
many weeks of frustration

00:24:10,720 --> 00:24:18,559
for me to get uh other things to work

00:24:14,400 --> 00:24:20,880
okay so so you did a good job there

00:24:18,559 --> 00:24:20,880
thanks

00:24:23,440 --> 00:24:28,559
have a good day everybody and see you

00:24:26,159 --> 00:24:28,559
later

00:24:30,840 --> 00:24:33,840

YouTube URL: https://www.youtube.com/watch?v=mkzxKg4_yz8


