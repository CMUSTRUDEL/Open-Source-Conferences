Title: OSC15 - Josef Reidinger - News from the YaST Kitchen
Publication date: 2015-05-03
Playlist: openSUSE Conference 2015
Description: 
	This presentation shows all the news that have happened in the YaST world since the last openSUSE conference from an end user point of view. New modules like YaST2-Docker or YaST2-Journal, new functionality in several components and also some reduction of functionality like the drop of support for Grub Legacy in YaST2-Bootloader. The format of the presentation will be quite open, encouraging attendees to participate with plenty of room for questions and suggestions about YaST, the openSUSE installer or any other related subject.
Captions: 
	00:00:01,010 --> 00:00:13,710
okay okay so work on everyone to

00:00:10,400 --> 00:00:16,970
presenting some news what's happened in

00:00:13,710 --> 00:00:20,699
the ass from the last conference in

00:00:16,970 --> 00:00:25,680
berwick so it's almost one year of

00:00:20,699 --> 00:00:27,420
development so we try except to come on

00:00:25,680 --> 00:00:33,180
come on staff do also something

00:00:27,420 --> 00:00:37,110
interesting and some new modules also

00:00:33,180 --> 00:00:39,390
lives in opensuse so I would like to

00:00:37,110 --> 00:00:44,640
introduce it and I also talked about

00:00:39,390 --> 00:00:47,399
some generic stuff that's not in that's

00:00:44,640 --> 00:00:50,450
not a new module that just happened but

00:00:47,399 --> 00:00:50,450
it's quite visible

00:00:51,150 --> 00:00:58,910
so the first one I would like to talk is

00:00:54,890 --> 00:01:02,930
just fonts it's actually created by

00:00:58,910 --> 00:01:06,990
better guide oh Sh who is not in a steam

00:01:02,930 --> 00:01:11,690
the goal of this module is to have easy

00:01:06,990 --> 00:01:14,790
way how to quiet the versailles

00:01:11,690 --> 00:01:17,370
configure fonts it means if you

00:01:14,790 --> 00:01:21,180
recognize if there's an terrorizing if

00:01:17,370 --> 00:01:23,490
there is this font and red phone for me

00:01:21,180 --> 00:01:25,950
it looks everything same but the recipe

00:01:23,490 --> 00:01:29,300
by recognize that a lighter looks

00:01:25,950 --> 00:01:33,210
slightly different in different forms so

00:01:29,300 --> 00:01:36,810
that's a module that helps to have the

00:01:33,210 --> 00:01:41,460
easy setup currently it's only in dumbo

00:01:36,810 --> 00:01:46,830
root and last week the newest addition

00:01:41,460 --> 00:01:49,410
is user configuration it means you can

00:01:46,830 --> 00:01:52,259
run this model also as a user and it

00:01:49,410 --> 00:01:55,470
create the configuration only for this

00:01:52,259 --> 00:01:57,180
user if you have more users on computer

00:01:55,470 --> 00:02:01,040
everyone can have slightly different

00:01:57,180 --> 00:02:05,280
fonts yeah so I can show some

00:02:01,040 --> 00:02:08,220
screenshots how it looks like the first

00:02:05,280 --> 00:02:11,070
vial it's rendering preview so we have

00:02:08,220 --> 00:02:14,840
some windows and in these windows you

00:02:11,070 --> 00:02:17,640
see how phones looks likes in general

00:02:14,840 --> 00:02:20,340
you have some fun families and you

00:02:17,640 --> 00:02:25,110
cannot specify how exactly this number

00:02:20,340 --> 00:02:27,750
looks like so so sorry families and then

00:02:25,110 --> 00:02:31,170
there's the specific oh it looks likes

00:02:27,750 --> 00:02:34,739
you can do some some configuration that

00:02:31,170 --> 00:02:36,540
modify how it look quite I quite like

00:02:34,739 --> 00:02:40,290
this this preview because it's quite

00:02:36,540 --> 00:02:42,810
intuitive what's the result so PI

00:02:40,290 --> 00:02:45,060
reforms and see immediately how it looks

00:02:42,810 --> 00:02:50,080
like so if you can recognize difference

00:02:45,060 --> 00:02:55,430
then I think it's quite useful for you

00:02:50,080 --> 00:02:58,000
yeah the second one is the ress on

00:02:55,430 --> 00:03:00,830
system you can have aliases for

00:02:58,000 --> 00:03:04,489
different phone so if you specify for

00:03:00,830 --> 00:03:07,580
example Times New Roman and then you

00:03:04,489 --> 00:03:10,819
have this exact phones so it's easier

00:03:07,580 --> 00:03:15,110
for example in PDF you specify the exact

00:03:10,819 --> 00:03:18,110
font and it looks always the same yeah

00:03:15,110 --> 00:03:21,670
and the last part is some specific

00:03:18,110 --> 00:03:24,860
options for rendering there is some

00:03:21,670 --> 00:03:30,890
surrounding around phones and such sites

00:03:24,860 --> 00:03:34,879
stuff yeah so let's just once the

00:03:30,890 --> 00:03:39,620
another module is for dr. it's also

00:03:34,879 --> 00:03:43,010
quite new it's currently it lists also

00:03:39,620 --> 00:03:46,129
only in tumbleweed for opensuse in sleet

00:03:43,010 --> 00:03:50,660
valve it's us technology technical

00:03:46,129 --> 00:03:55,340
preview so so we can try but it still

00:03:50,660 --> 00:04:01,069
evolve odd and the intention is to have

00:03:55,340 --> 00:04:05,450
easy UI for managing docker images and

00:04:01,069 --> 00:04:10,250
containers so again some some screenshot

00:04:05,450 --> 00:04:14,780
the first one is the images so it means

00:04:10,250 --> 00:04:18,440
that in dr. you have a set of various

00:04:14,780 --> 00:04:22,580
images which can be also the same one

00:04:18,440 --> 00:04:25,190
just with small differences that usually

00:04:22,580 --> 00:04:29,570
they call it tag so you do some

00:04:25,190 --> 00:04:31,880
modification commit image and then place

00:04:29,570 --> 00:04:35,950
the different tack it means you can have

00:04:31,880 --> 00:04:39,650
fear based up to sell 12 and then have

00:04:35,950 --> 00:04:42,710
the one with a peachy with Apache

00:04:39,650 --> 00:04:45,169
different version or refer else so you

00:04:42,710 --> 00:04:48,289
can just take it that it's based on this

00:04:45,169 --> 00:04:53,240
opensuse and then some additions so

00:04:48,289 --> 00:04:57,390
that's the screen that allows you to see

00:04:53,240 --> 00:05:00,540
all images you have one on system

00:04:57,390 --> 00:05:02,730
what's more interesting the images can

00:05:00,540 --> 00:05:07,890
be run it in dokur it's called

00:05:02,730 --> 00:05:11,640
containers as you can see there's the

00:05:07,890 --> 00:05:16,530
command it means you start a container

00:05:11,640 --> 00:05:19,170
and there is a command on top of it in

00:05:16,530 --> 00:05:22,290
this example is just top but usually

00:05:19,170 --> 00:05:25,530
it's some kind of server like database

00:05:22,290 --> 00:05:28,530
server or rails server so we have some

00:05:25,530 --> 00:05:31,740
kind of web server that provide some

00:05:28,530 --> 00:05:34,500
some output you can specify the port

00:05:31,740 --> 00:05:37,650
forwarding there for example so it means

00:05:34,500 --> 00:05:42,960
that in container something grants on

00:05:37,650 --> 00:05:45,060
the port 3000 but on a host machine you

00:05:42,960 --> 00:05:48,270
want to have it in the front port soon

00:05:45,060 --> 00:05:53,460
as port forwarding it also allows quite

00:05:48,270 --> 00:05:56,460
easy director sharing so this screen

00:05:53,460 --> 00:05:59,010
mainly shows what kinda containers

00:05:56,460 --> 00:06:03,060
country running on your system but they

00:05:59,010 --> 00:06:07,380
stay tues and what command the run and

00:06:03,060 --> 00:06:10,860
the stuff i like most because when we

00:06:07,380 --> 00:06:13,500
start writing this module dr. doesn't

00:06:10,860 --> 00:06:16,530
have easy way how to inject into this

00:06:13,500 --> 00:06:21,300
running container it's quite tricky

00:06:16,530 --> 00:06:23,880
currently it's edit to dr. API so even

00:06:21,300 --> 00:06:27,540
now even with command line it's quite

00:06:23,880 --> 00:06:30,330
easy to inject into terminal and it's

00:06:27,540 --> 00:06:34,700
quite useful for some debugging or if

00:06:30,330 --> 00:06:37,560
you need some some setup then you just

00:06:34,700 --> 00:06:40,910
inject into terminal and determine our

00:06:37,560 --> 00:06:45,450
runs in the container environment of

00:06:40,910 --> 00:06:48,300
course what's also possible is that in

00:06:45,450 --> 00:06:52,860
progress screen it's visible that there

00:06:48,300 --> 00:06:57,060
is commit and so you do some changes in

00:06:52,860 --> 00:06:58,890
your container for example you update

00:06:57,060 --> 00:07:01,560
packages to the latest version and then

00:06:58,890 --> 00:07:05,920
you can do commit and commit creates a

00:07:01,560 --> 00:07:09,100
new image so it means if you want to

00:07:05,920 --> 00:07:11,350
to start for example two servers based

00:07:09,100 --> 00:07:14,130
on same image you just commit you just

00:07:11,350 --> 00:07:18,190
update one commit the changes and then

00:07:14,130 --> 00:07:21,160
you start the second one with with this

00:07:18,190 --> 00:07:24,580
new image and you have the the latest

00:07:21,160 --> 00:07:29,580
versions or modification unifications

00:07:24,580 --> 00:07:34,810
you did so that's the module for dr.

00:07:29,580 --> 00:07:37,450
it's created by flavio and me what's

00:07:34,810 --> 00:07:41,200
interesting that this module heavily

00:07:37,450 --> 00:07:46,830
benefits from just in a ruby because

00:07:41,200 --> 00:07:50,230
there exists the library for dr. API in

00:07:46,830 --> 00:07:53,740
Ruby so we just use this this library

00:07:50,230 --> 00:07:58,180
and the last module is mainly just you I

00:07:53,740 --> 00:08:01,750
above of it so we just create UI and use

00:07:58,180 --> 00:08:04,780
the library below the nice part is that

00:08:01,750 --> 00:08:10,090
if someone do some fixes in the library

00:08:04,780 --> 00:08:15,430
we also benefit from it yeah the cert

00:08:10,090 --> 00:08:19,030
module I would like to introduce is it's

00:08:15,430 --> 00:08:22,630
just too sure now it's a new module that

00:08:19,030 --> 00:08:29,230
that's created by anchor Gonzalez so

00:08:22,630 --> 00:08:33,430
some and it's a module let's need it for

00:08:29,230 --> 00:08:35,650
systemd because in the past maybe you

00:08:33,430 --> 00:08:38,080
know that you have to have a specific

00:08:35,650 --> 00:08:41,020
module that allows you searching blocks

00:08:38,080 --> 00:08:44,890
and usually the most interesting block

00:08:41,020 --> 00:08:48,040
is our log messages there's many stuff

00:08:44,890 --> 00:08:51,040
from caramel and from some divers and

00:08:48,040 --> 00:08:55,600
site stuff so I think a lot of people

00:08:51,040 --> 00:08:58,690
want to see it somehow and it stopped

00:08:55,600 --> 00:09:01,300
working if systemd unless you have some

00:08:58,690 --> 00:09:03,120
specific package yet that blocks into

00:09:01,300 --> 00:09:06,300
our messages

00:09:03,120 --> 00:09:09,000
and there now there's a command-line

00:09:06,300 --> 00:09:16,170
tool for for viewing it that's your

00:09:09,000 --> 00:09:19,160
mouth CTL and so what we did we create a

00:09:16,170 --> 00:09:23,040
new module that can work with it and can

00:09:19,160 --> 00:09:26,839
represent this logs and blow some

00:09:23,040 --> 00:09:32,940
searching in it currently it lifts in

00:09:26,839 --> 00:09:36,210
tumbleweed and we plan to edit also to

00:09:32,940 --> 00:09:41,700
slit 12 sp1 also the enterprise

00:09:36,210 --> 00:09:46,890
customers want to see their logs ok so

00:09:41,700 --> 00:09:49,760
how it looks like at the idea background

00:09:46,890 --> 00:09:53,070
do you see some entries in the log and

00:09:49,760 --> 00:09:55,260
what's quite nice it provides quite easy

00:09:53,070 --> 00:09:59,160
way how to filter it out of cross

00:09:55,260 --> 00:10:01,080
command line tools also support it so we

00:09:59,160 --> 00:10:04,710
just use the command line but but we

00:10:01,080 --> 00:10:07,170
quite in quite intuitive way provide way

00:10:04,710 --> 00:10:10,650
how to filter the criterias for

00:10:07,170 --> 00:10:14,339
searching so so in this example you you

00:10:10,650 --> 00:10:16,980
specify that you are interested in this

00:10:14,339 --> 00:10:19,770
boot that's quite useful because if

00:10:16,980 --> 00:10:22,080
something stopped working now do you

00:10:19,770 --> 00:10:23,640
want to see if the drivers loaded

00:10:22,080 --> 00:10:26,790
properly and sigh stuff so we are

00:10:23,640 --> 00:10:32,250
interested only in this boot and in this

00:10:26,790 --> 00:10:35,580
case it's filter out just information

00:10:32,250 --> 00:10:37,770
for for proofs I'll do it means if for

00:10:35,580 --> 00:10:39,600
example sound stopped working you

00:10:37,770 --> 00:10:43,310
probably want to search who's out there

00:10:39,600 --> 00:10:50,050
if there's some errors and such stuff

00:10:43,310 --> 00:10:50,050
and as usual it works also in and curses

00:10:51,960 --> 00:10:58,320
how it how it looks like so I think it's

00:10:56,100 --> 00:11:01,520
quite good replacement for searching

00:10:58,320 --> 00:11:06,270
borrowed messages and we honest I still

00:11:01,520 --> 00:11:11,370
don't don't learn enough to you the

00:11:06,270 --> 00:11:13,530
system see a journal CTL so for me for

00:11:11,370 --> 00:11:16,260
all this we should i use prob messages

00:11:13,530 --> 00:11:17,910
and for anyone i start using this module

00:11:16,260 --> 00:11:21,240
because i still don't remember all

00:11:17,910 --> 00:11:26,250
options so it's quite easily how to

00:11:21,240 --> 00:11:31,670
search such the log files yeah and

00:11:26,250 --> 00:11:36,870
there's the other other things we do and

00:11:31,670 --> 00:11:38,930
these are already in 1332 so if you use

00:11:36,870 --> 00:11:42,060
certain the two you probably notice it

00:11:38,930 --> 00:11:45,810
the first one is that installation

00:11:42,060 --> 00:11:50,070
doesn't have a second stage so now if

00:11:45,810 --> 00:11:52,650
you install opensuse after reboot you

00:11:50,070 --> 00:11:55,350
are amazed within the system you don't

00:11:52,650 --> 00:11:58,800
do the second part of configuration like

00:11:55,350 --> 00:12:03,510
it was before for open sir that there

00:11:58,800 --> 00:12:05,940
was automatic so it means that if you if

00:12:03,510 --> 00:12:08,520
you don't uncheck the checkbox for

00:12:05,940 --> 00:12:12,600
automatic second stage it just do

00:12:08,520 --> 00:12:15,570
something but currently it even this

00:12:12,600 --> 00:12:20,460
step is removed so it immediately boot

00:12:15,570 --> 00:12:25,920
into enter our opensuse the benefit

00:12:20,460 --> 00:12:28,760
besides shorter installation is that you

00:12:25,920 --> 00:12:31,830
don't need just on your target system

00:12:28,760 --> 00:12:36,840
you may be see the presentation

00:12:31,830 --> 00:12:39,090
yesterday that about ansible and CF

00:12:36,840 --> 00:12:42,060
engine and site stuff for automatic

00:12:39,090 --> 00:12:45,180
configuration management and usually if

00:12:42,060 --> 00:12:47,570
you have a machine that's managed this

00:12:45,180 --> 00:12:52,920
way you don't want to use the ask and

00:12:47,570 --> 00:12:57,240
it's just additional packages that's not

00:12:52,920 --> 00:13:00,600
needed so without second stage it's

00:12:57,240 --> 00:13:02,640
possible to have just instead to have

00:13:00,600 --> 00:13:07,110
openSUSE installation without any

00:13:02,640 --> 00:13:13,740
without any asset which is which wasn't

00:13:07,110 --> 00:13:15,570
possible before so especially in maybe

00:13:13,740 --> 00:13:20,460
you see the open cloud presentation

00:13:15,570 --> 00:13:22,940
former chat yesterday and you pay the

00:13:20,460 --> 00:13:26,280
payment in cloud is very different and

00:13:22,940 --> 00:13:29,100
the more our sources you need the more

00:13:26,280 --> 00:13:33,260
you pay so if you can have open to say

00:13:29,100 --> 00:13:37,650
that's really small then you can fail us

00:13:33,260 --> 00:13:40,680
okay the other part is a full system the

00:13:37,650 --> 00:13:43,140
support and so inserting the to the

00:13:40,680 --> 00:13:47,520
previously we can i start the services

00:13:43,140 --> 00:13:50,100
and started but the service module

00:13:47,520 --> 00:13:54,090
itself doesn't support system d so it

00:13:50,100 --> 00:13:58,230
means that there is no no easy way to

00:13:54,090 --> 00:14:00,270
behave naturally for system leader there

00:13:58,230 --> 00:14:03,390
is nowhere on levels but there's some

00:14:00,270 --> 00:14:07,440
dependencies there's also some

00:14:03,390 --> 00:14:12,750
attributes that that wasn't in in it

00:14:07,440 --> 00:14:20,760
need d so so there's now a full support

00:14:12,750 --> 00:14:25,260
and we also created new webpage for new

00:14:20,760 --> 00:14:28,440
developers that we progress lifts on

00:14:25,260 --> 00:14:31,620
open source of decay and i'm not sure if

00:14:28,440 --> 00:14:33,510
you will try to search something but

00:14:31,620 --> 00:14:38,400
usually if you don't know the correct

00:14:33,510 --> 00:14:43,170
words you don't find anything and also

00:14:38,400 --> 00:14:46,500
it's much easier now to edit it in every

00:14:43,170 --> 00:14:50,520
way because we use the github pages and

00:14:46,500 --> 00:14:53,090
in fact it's just git repository and you

00:14:50,520 --> 00:14:55,980
can do the poor request against it and

00:14:53,090 --> 00:14:57,570
such thing so either some typos or you

00:14:55,980 --> 00:14:59,910
miss some information in some or

00:14:57,570 --> 00:15:02,580
something is not correct you can just

00:14:59,910 --> 00:15:06,750
fork the project on github and update

00:15:02,580 --> 00:15:07,970
the web page also we convert some

00:15:06,750 --> 00:15:11,660
documentation from

00:15:07,970 --> 00:15:14,019
a dog book to mark down so even for

00:15:11,660 --> 00:15:20,589
humans are now quite easy to edit

00:15:14,019 --> 00:15:24,339
documentation and last but not least

00:15:20,589 --> 00:15:27,050
there's as usual a lot of bug fixes in

00:15:24,339 --> 00:15:30,379
between certain that one and salido to

00:15:27,050 --> 00:15:32,120
we fix more than 500 bucks and also

00:15:30,379 --> 00:15:39,410
there's some some features that's

00:15:32,120 --> 00:15:43,899
smaller usually around btrfs or dropping

00:15:39,410 --> 00:15:49,160
some support to have easier maintenance

00:15:43,899 --> 00:15:52,899
yeah if you count it it means that every

00:15:49,160 --> 00:15:58,100
day we fix / average at least two bucks

00:15:52,899 --> 00:16:00,829
so if you think that that there's still

00:15:58,100 --> 00:16:05,750
too much bucks for just in bugzilla that

00:16:00,829 --> 00:16:08,839
reason is not that we do not fix it but

00:16:05,750 --> 00:16:12,339
we have so good testers that they always

00:16:08,839 --> 00:16:12,339
found a lot of new ones

00:16:14,300 --> 00:16:19,330
okay so do you have any questions

00:16:22,810 --> 00:16:29,650
yeah you can ask on anything regarding

00:16:26,440 --> 00:16:34,210
you ask me baby you see some changes or

00:16:29,650 --> 00:16:35,950
something doesn't work it looks like it

00:16:34,210 --> 00:16:39,130
works for everyone everyone is satisfied

00:16:35,950 --> 00:16:41,529
with changes interesting you are

00:16:39,130 --> 00:16:45,850
probably not paid bank customers because

00:16:41,529 --> 00:16:49,480
they are never satisfied okay if you

00:16:45,850 --> 00:16:51,820
have questions in the future we live on

00:16:49,480 --> 00:16:54,790
IRC channel it's a public one on

00:16:51,820 --> 00:17:00,910
freenode so it's not a problem to join I

00:16:54,790 --> 00:17:03,640
think every day there's at least 10

00:17:00,910 --> 00:17:06,970
developers so usually you get answered

00:17:03,640 --> 00:17:09,130
quite quickly and of course we have also

00:17:06,970 --> 00:17:11,170
made linguist if we have some some top

00:17:09,130 --> 00:17:15,100
and it needs some longer discussion or

00:17:11,170 --> 00:17:19,510
some some talking it's also yeah

00:17:15,100 --> 00:17:22,089
question you've talked about the

00:17:19,510 --> 00:17:23,890
features that you have already added are

00:17:22,089 --> 00:17:26,220
there any features that you are still

00:17:23,890 --> 00:17:29,080
working on and want to share with us

00:17:26,220 --> 00:17:35,050
yeah there is still still some features

00:17:29,080 --> 00:17:37,480
that we working on currently I I think

00:17:35,050 --> 00:17:40,600
the most features that goes into is

00:17:37,480 --> 00:17:45,130
around snapper and beat rfs2 to use the

00:17:40,600 --> 00:17:47,560
snapshots as much as possible one of a

00:17:45,130 --> 00:17:52,720
feature that we currently working on is

00:17:47,560 --> 00:17:55,780
to have a snapshot after installation so

00:17:52,720 --> 00:17:58,990
it means you install our system and add

00:17:55,780 --> 00:18:02,170
this after the installation it creates

00:17:58,990 --> 00:18:05,740
some initial point it's something it's

00:18:02,170 --> 00:18:07,600
same like for Windows it give you in if

00:18:05,740 --> 00:18:11,140
your windows then there's some factory

00:18:07,600 --> 00:18:14,500
settings that it means it's the state in

00:18:11,140 --> 00:18:17,530
which the OEM gives you a notebook then

00:18:14,500 --> 00:18:19,870
it's very similar that you can return to

00:18:17,530 --> 00:18:23,410
the early initial state of overall

00:18:19,870 --> 00:18:26,050
system of course the another feature

00:18:23,410 --> 00:18:28,660
that's quite all right it is the step

00:18:26,050 --> 00:18:30,840
shots before and after upgrade it means

00:18:28,660 --> 00:18:34,420
if you upgrade from a certain advantage

00:18:30,840 --> 00:18:37,990
1302 or if there is anyone 13 to three

00:18:34,420 --> 00:18:40,570
then it creates them shots before

00:18:37,990 --> 00:18:42,610
upgrade and after upgrade it means you

00:18:40,570 --> 00:18:46,120
can return back to the old version or

00:18:42,610 --> 00:18:50,040
you can return back to the freshly

00:18:46,120 --> 00:18:54,340
upgraded version if something goes wrong

00:18:50,040 --> 00:18:57,130
so so so mainly about its adding

00:18:54,340 --> 00:19:00,580
features armed bitter fess there's also

00:18:57,130 --> 00:19:05,080
some features that are more moral level

00:19:00,580 --> 00:19:09,400
like sensing file system after doing

00:19:05,080 --> 00:19:11,620
snapshots and of course there's some

00:19:09,400 --> 00:19:13,840
requirements to to cleaning more the

00:19:11,620 --> 00:19:15,450
snapshots because sometimes it can all

00:19:13,840 --> 00:19:18,149
run out of space which is

00:19:15,450 --> 00:19:21,600
not so nice for big tear fest because

00:19:18,149 --> 00:19:25,380
the snapshots are quite hidden from from

00:19:21,600 --> 00:19:30,750
common tools to see the space

00:19:25,380 --> 00:19:33,010
requirements so i hope i answer the

00:19:30,750 --> 00:19:35,440
question

00:19:33,010 --> 00:19:40,240
of course there's this also the smaller

00:19:35,440 --> 00:19:44,590
ones we still we always work on some

00:19:40,240 --> 00:19:46,810
something just sometimes it's quite a

00:19:44,590 --> 00:19:52,090
low level what's what's not so visible

00:19:46,810 --> 00:19:54,700
is that the US needs always some

00:19:52,090 --> 00:19:57,040
adaptation because even if he asked

00:19:54,700 --> 00:20:00,280
still looks same the tools underlying

00:19:57,040 --> 00:20:03,700
often changes and it's not just the big

00:20:00,280 --> 00:20:07,150
change between energy and system be the

00:20:03,700 --> 00:20:09,340
chem Elster changes some some tools add

00:20:07,150 --> 00:20:12,960
some new features and and we need to

00:20:09,340 --> 00:20:15,970
support it the new hardware appears

00:20:12,960 --> 00:20:19,690
currently for me the most annoying is

00:20:15,970 --> 00:20:23,130
some some efi implementation that's our

00:20:19,690 --> 00:20:27,430
very aggressive my current notebook is

00:20:23,130 --> 00:20:31,450
very good example that I don't know why

00:20:27,430 --> 00:20:34,780
but they always put into efi the first

00:20:31,450 --> 00:20:38,410
Android Windows boot loader and even if

00:20:34,780 --> 00:20:42,040
I modified I use the proper tools that

00:20:38,410 --> 00:20:44,800
by standard should modify it it against

00:20:42,040 --> 00:20:47,380
after each rest are converted because

00:20:44,800 --> 00:20:49,750
there's something in frames are so so

00:20:47,380 --> 00:20:52,450
even if it's not so visible you just

00:20:49,750 --> 00:20:55,990
still changes there's a lot of changes

00:20:52,450 --> 00:20:58,980
every day it's mainly adaptation to to

00:20:55,990 --> 00:20:58,980
the rest of the system

00:20:59,890 --> 00:21:13,350
so the main feature of just is that it

00:21:03,580 --> 00:21:13,350

YouTube URL: https://www.youtube.com/watch?v=qu-K53Yvh0s


