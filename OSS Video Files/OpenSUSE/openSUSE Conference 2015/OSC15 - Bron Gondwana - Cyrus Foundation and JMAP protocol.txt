Title: OSC15 - Bron Gondwana - Cyrus Foundation and JMAP protocol
Publication date: 2015-05-04
Playlist: openSUSE Conference 2015
Description: 
	The Cyrus IMAPd server is one of the oldest open email servers, and after a few quiet years, we're making good progress towards releasing a revialised 3.0 at OSCON in Portland this July.

I'll be talking about the history of Cyrus and the project, outlining what's new, releasing the first alpha of the 3.0 release, and asking for help and feedback.

I will also talk about the new JMAP protocol to replace IMAP, SMTP, CardDAV and CalDAV - which will be included in this release.
Captions: 
	00:00:00,500 --> 00:00:08,970
that started I'm going to be a teenager

00:00:06,210 --> 00:00:16,350
two point oh here is my little remote

00:00:08,970 --> 00:00:18,150
controller so in theory but actually it

00:00:16,350 --> 00:00:20,160
works like two minutes ago when I said

00:00:18,150 --> 00:00:22,980
okay I'm not gonna be a teenager 2.0

00:00:20,160 --> 00:00:24,869
food not syncing up this is the fun of

00:00:22,980 --> 00:00:27,840
Linux hello welcome to the talk hell we

00:00:24,869 --> 00:00:29,789
all going after lunch you awake yeah

00:00:27,840 --> 00:00:31,619
I've got this huge bright light here so

00:00:29,789 --> 00:00:34,170
i can't see you very well but I'm brawn

00:00:31,619 --> 00:00:36,180
I'm from fastmail in Australia and I'm

00:00:34,170 --> 00:00:37,800
talking today about the Soros Foundation

00:00:36,180 --> 00:00:40,230
a little bit but mostly about Jay map

00:00:37,800 --> 00:00:41,940
which is a new protocol for email

00:00:40,230 --> 00:00:46,379
calendaring contacts as we're calling it

00:00:41,940 --> 00:00:48,480
down there groupware so this pretty much

00:00:46,379 --> 00:00:50,340
is what it's about i was going to be

00:00:48,480 --> 00:00:52,260
recycling half my talk from yesterday

00:00:50,340 --> 00:00:54,180
but i'm down to half an hour rather than

00:00:52,260 --> 00:00:55,710
an hour so i'm rushing through a little

00:00:54,180 --> 00:00:57,360
bit faster if you do have any questions

00:00:55,710 --> 00:00:59,879
please feel free to shout them out

00:00:57,360 --> 00:01:02,309
during the talk or you can save them up

00:00:59,879 --> 00:01:03,840
for the end okay I'd like to as much as

00:01:02,309 --> 00:01:06,420
possible this is a conversation rather

00:01:03,840 --> 00:01:10,049
than just me dumping information on you

00:01:06,420 --> 00:01:12,150
and I have stacks of t-shirts here that

00:01:10,049 --> 00:01:13,530
I don't want to take home so please come

00:01:12,150 --> 00:01:16,409
and grab a fastener aisle t-shirt I

00:01:13,530 --> 00:01:19,830
don't have any Cyrus t-shirt sorry so

00:01:16,409 --> 00:01:21,659
sorry foundation has formed so recently

00:01:19,830 --> 00:01:24,360
that we haven't actually even finally

00:01:21,659 --> 00:01:26,250
decided on the name yet it's a group of

00:01:24,360 --> 00:01:28,500
companies who decided that we wanted to

00:01:26,250 --> 00:01:32,640
work together to build an open standard

00:01:28,500 --> 00:01:35,460
and the Cyrus product underneath it as a

00:01:32,640 --> 00:01:37,530
fully open source email server rather

00:01:35,460 --> 00:01:40,470
than the open core that things have been

00:01:37,530 --> 00:01:41,400
shifting towards the main time that

00:01:40,470 --> 00:01:43,890
we're going to be talking about is

00:01:41,400 --> 00:01:45,270
actually on the 21st of july in portland

00:01:43,890 --> 00:01:46,979
we've booked out a whole room at oscon

00:01:45,270 --> 00:01:49,950
and the plan is to really kick things

00:01:46,979 --> 00:01:51,840
off there by then we should have the gem

00:01:49,950 --> 00:01:53,340
wrap protocol working on fast mail so

00:01:51,840 --> 00:01:55,259
there's there's a real instance that you

00:01:53,340 --> 00:01:56,820
can test against and some more of the

00:01:55,259 --> 00:02:01,380
client code open sourced as well that's

00:01:56,820 --> 00:02:02,790
that's still in progress so Jay map the

00:02:01,380 --> 00:02:05,250
nice thing about standards you'd think

00:02:02,790 --> 00:02:07,590
in the group West paste it heaps of

00:02:05,250 --> 00:02:09,239
standards to choose from why write

00:02:07,590 --> 00:02:12,000
something else well this is what we've

00:02:09,239 --> 00:02:13,470
got and this is just email this isn't it

00:02:12,000 --> 00:02:16,650
looking at calendaring protocols and

00:02:13,470 --> 00:02:18,960
contacts protocols and and configuration

00:02:16,650 --> 00:02:23,190
protocols none of these are any good

00:02:18,960 --> 00:02:25,470
honestly oh there's one in the middle

00:02:23,190 --> 00:02:27,030
layer that people tend to be moving

00:02:25,470 --> 00:02:30,209
towards because it actually does

00:02:27,030 --> 00:02:32,370
everything you need I'm app has so many

00:02:30,209 --> 00:02:33,990
extensions and they're so spot alee

00:02:32,370 --> 00:02:36,570
supported by the service that can

00:02:33,990 --> 00:02:38,010
legitimately claim I am I map that you

00:02:36,570 --> 00:02:39,780
can't actually do much with it and I'll

00:02:38,010 --> 00:02:41,010
show a video a little bit later if

00:02:39,780 --> 00:02:42,870
you've been to gym after oh you've

00:02:41,010 --> 00:02:45,330
already seen it showing the difference

00:02:42,870 --> 00:02:47,489
between a good imap client and the

00:02:45,330 --> 00:02:49,860
fastener would web interface with our

00:02:47,489 --> 00:02:54,690
protocol that is what gemwraps coming

00:02:49,860 --> 00:02:57,810
from so we're not the only geniuses with

00:02:54,690 --> 00:03:00,000
this idea here's some things that are

00:02:57,810 --> 00:03:01,590
happening kind of now in exactly the

00:03:00,000 --> 00:03:03,930
same space they have two things in

00:03:01,590 --> 00:03:06,060
common there's one company implementing

00:03:03,930 --> 00:03:08,880
them with various degrees of openness

00:03:06,060 --> 00:03:10,470
and they're all very chatted we live on

00:03:08,880 --> 00:03:12,650
the far side of the world from our

00:03:10,470 --> 00:03:14,970
service so all of the work that we do

00:03:12,650 --> 00:03:17,430
round-trips latency is really important

00:03:14,970 --> 00:03:18,900
to us so that's one thing that that we

00:03:17,430 --> 00:03:21,989
do is different and that's why the fast

00:03:18,900 --> 00:03:23,580
mile API is in grey there but it's still

00:03:21,989 --> 00:03:25,920
the fast male API is something written

00:03:23,580 --> 00:03:27,660
by one company for one company we don't

00:03:25,920 --> 00:03:29,100
want the world to become all these

00:03:27,660 --> 00:03:31,980
little silos where you have to implement

00:03:29,100 --> 00:03:36,390
everything to talk to anybody so YJ map

00:03:31,980 --> 00:03:37,739
it's the letter after I all the things

00:03:36,390 --> 00:03:39,350
that you would expect from a protocol

00:03:37,739 --> 00:03:42,860
that was written in the last few years

00:03:39,350 --> 00:03:45,630
Jason over HTTPS it's a no brainer

00:03:42,860 --> 00:03:47,640
everything can talk it it gives you

00:03:45,630 --> 00:03:50,070
structured to utter you don't have to

00:03:47,640 --> 00:03:52,290
design your own custom parser for every

00:03:50,070 --> 00:03:53,940
single protocol is under there and it's

00:03:52,290 --> 00:03:56,610
the same API for everything which I'll

00:03:53,940 --> 00:03:59,370
explain the benefits that soon it's

00:03:56,610 --> 00:04:00,810
friendly and it's working now you can

00:03:59,370 --> 00:04:04,459
actually use a fast mail account right

00:04:00,810 --> 00:04:07,500
now our customers have this right now

00:04:04,459 --> 00:04:09,840
support friendly I worked I don't know

00:04:07,500 --> 00:04:11,760
how many of you I can see you have ever

00:04:09,840 --> 00:04:16,470
done tech support for any organization

00:04:11,760 --> 00:04:18,250
ever i can send mail but i can't receive

00:04:16,470 --> 00:04:20,970
it

00:04:18,250 --> 00:04:24,040
I can receive it but it's not sending

00:04:20,970 --> 00:04:27,430
firewalls one servers up and other

00:04:24,040 --> 00:04:29,530
servers down for a user device like this

00:04:27,430 --> 00:04:31,900
you want one endpoint it's either there

00:04:29,530 --> 00:04:33,940
or it's not there it's much easier to

00:04:31,900 --> 00:04:35,890
explain and it's much easier to

00:04:33,940 --> 00:04:38,050
authenticate as well I have to type in

00:04:35,890 --> 00:04:39,820
my password three different times for

00:04:38,050 --> 00:04:41,950
different times i'm here to set up cal

00:04:39,820 --> 00:04:43,660
valve to set up card dev to set up

00:04:41,950 --> 00:04:46,060
sending receiving email there's not a

00:04:43,660 --> 00:04:49,180
good user experience so it's friendly

00:04:46,060 --> 00:04:52,720
for that no partial failures its network

00:04:49,180 --> 00:04:55,090
and battery friendly on this device is

00:04:52,720 --> 00:04:56,919
an android phone it uses the google push

00:04:55,090 --> 00:04:58,360
channel for push updates there's nothing

00:04:56,919 --> 00:04:59,620
seeing in the background polling the

00:04:58,360 --> 00:05:02,020
rest of the time on an Apple devices

00:04:59,620 --> 00:05:04,470
using the app the first channel on a

00:05:02,020 --> 00:05:06,730
desktop it's using event source so again

00:05:04,470 --> 00:05:09,340
there's something that's pushing updates

00:05:06,730 --> 00:05:10,870
no polling against the server no battery

00:05:09,340 --> 00:05:13,120
being wasted when nothing's happened so

00:05:10,870 --> 00:05:15,700
all the out-of-band notifications and

00:05:13,120 --> 00:05:17,560
the system is send a little signal to

00:05:15,700 --> 00:05:19,720
say there's something there and then the

00:05:17,560 --> 00:05:21,520
client will go around and fetch it so

00:05:19,720 --> 00:05:24,430
there's no security risk it's just a

00:05:21,520 --> 00:05:25,870
little touch there's something to do if

00:05:24,430 --> 00:05:27,700
you miss one it doesn't matter the next

00:05:25,870 --> 00:05:30,100
one it'll still resynchronize there's no

00:05:27,700 --> 00:05:33,820
ID coming through it's just a go fetch

00:05:30,100 --> 00:05:37,210
some water efficient updates at the

00:05:33,820 --> 00:05:40,450
moment with IMAP you can idle on one

00:05:37,210 --> 00:05:41,710
folder you can't see what's happening

00:05:40,450 --> 00:05:43,330
the rest unless you go Paul all the

00:05:41,710 --> 00:05:45,460
folders with a status called which one

00:05:43,330 --> 00:05:46,930
but also you can be idling in a folder

00:05:45,460 --> 00:05:49,600
and another client comes along to let's

00:05:46,930 --> 00:05:52,090
a million messages expunge won't expunge

00:05:49,600 --> 00:05:53,560
one expunge one you basically have to

00:05:52,090 --> 00:05:56,440
drop the connection there's no way to

00:05:53,560 --> 00:05:57,790
say tell me some changes but if there's

00:05:56,440 --> 00:05:59,979
too much don't bother telling me just

00:05:57,790 --> 00:06:01,960
just tell me to read fetch and start

00:05:59,979 --> 00:06:04,210
from scratch because more efficient so

00:06:01,960 --> 00:06:05,860
all the update functions have a size

00:06:04,210 --> 00:06:07,150
limit you say tell me 100 updates or

00:06:05,860 --> 00:06:11,320
just tell me there's too many updates

00:06:07,150 --> 00:06:12,580
and I'll reset my state chairman proxy

00:06:11,320 --> 00:06:15,160
which I'm going to demonstrate in a

00:06:12,580 --> 00:06:17,229
moment is a clear upgrade paths that

00:06:15,160 --> 00:06:19,510
allows you to move from your existing

00:06:17,229 --> 00:06:21,490
systems it's only male so far but the

00:06:19,510 --> 00:06:23,400
plan is to have a proxy that talks J map

00:06:21,490 --> 00:06:25,960
to the client and then talks all

00:06:23,400 --> 00:06:27,729
interesting protocols to the different

00:06:25,960 --> 00:06:28,990
back-end servers and gives you these

00:06:27,729 --> 00:06:30,930
fast updates

00:06:28,990 --> 00:06:34,690
and the efficient experience here

00:06:30,930 --> 00:06:36,280
without having to go through hey this is

00:06:34,690 --> 00:06:41,410
working now I could I could step out

00:06:36,280 --> 00:06:43,810
here yeah cool so the Cyrus foundation

00:06:41,410 --> 00:06:46,450
commits to provide an open spec document

00:06:43,810 --> 00:06:48,310
reference proxy which have started on

00:06:46,450 --> 00:06:49,930
already the reference server and a

00:06:48,310 --> 00:06:52,870
reference client which will be the fast

00:06:49,930 --> 00:06:55,240
mail internals from our system in jail

00:06:52,870 --> 00:06:56,860
in JavaScript and we'll work on at least

00:06:55,240 --> 00:06:57,640
one client in another language as well

00:06:56,860 --> 00:06:59,320
because you need to have two

00:06:57,640 --> 00:07:01,510
implementations written by different

00:06:59,320 --> 00:07:10,810
people to know that things will actually

00:07:01,510 --> 00:07:14,800
work this video vas male interface I'm

00:07:10,810 --> 00:07:15,880
at plan they are running from Australia

00:07:14,800 --> 00:07:17,200
to a server on the other side of the

00:07:15,880 --> 00:07:22,750
world but on the same network on a

00:07:17,200 --> 00:07:27,600
hotmail box with 32 messages in it going

00:07:22,750 --> 00:07:27,600
to see that again check it out

00:07:27,760 --> 00:07:32,160
there that's the difference

00:07:32,400 --> 00:07:38,880
all right what's up what kind of a wait

00:07:34,740 --> 00:07:43,410
move on here's another demo I delete the

00:07:38,880 --> 00:07:44,550
message it updates their three different

00:07:43,410 --> 00:07:47,580
devices with different network

00:07:44,550 --> 00:07:50,220
connections one of them was on Wi-Fi one

00:07:47,580 --> 00:07:51,389
of them was connected to 4g going to the

00:07:50,220 --> 00:07:57,060
other side of the world round tripping

00:07:51,389 --> 00:08:01,350
back that's what Jenna does this other

00:07:57,060 --> 00:08:03,780
demo which I had here this is the proxy

00:08:01,350 --> 00:08:05,340
this is my gmail account it has a lot of

00:08:03,780 --> 00:08:07,560
messages in it's been sitting around for

00:08:05,340 --> 00:08:09,660
years this is the message I sent through

00:08:07,560 --> 00:08:11,310
today so this is talking Jay map to a

00:08:09,660 --> 00:08:15,360
proxy which is then talking I'm up to

00:08:11,310 --> 00:08:19,080
gmail server if I check their flag this

00:08:15,360 --> 00:08:20,990
message the starred count this worked

00:08:19,080 --> 00:08:24,410
earlier will not get up by the way

00:08:20,990 --> 00:08:27,770
should bounce up to 10 in just a moment

00:08:24,410 --> 00:08:27,770
it's thinking

00:08:28,529 --> 00:08:33,599
there it is so that has round trip to

00:08:31,499 --> 00:08:35,789
the server the server change the sign up

00:08:33,599 --> 00:08:41,099
state its refresh to the set and push

00:08:35,789 --> 00:08:43,310
down here and again conversations they

00:08:41,099 --> 00:08:43,310
work

00:08:44,300 --> 00:08:49,550
eventually

00:08:46,820 --> 00:08:51,770
so this is the fastener interface with

00:08:49,550 --> 00:08:53,300
the Gemma back end this isn't released

00:08:51,770 --> 00:08:57,380
we're not using it 40 years yet it's

00:08:53,300 --> 00:09:01,130
just on the proxy but this works you can

00:08:57,380 --> 00:09:02,600
read your email and this is on this

00:09:01,130 --> 00:09:10,810
dodgy network here but its prey fetch

00:09:02,600 --> 00:09:10,810
that stuff in the background waiting

00:09:11,500 --> 00:09:17,269
unfortunately when it hasn't prefetch

00:09:13,250 --> 00:09:22,870
thinks you can't make the network all

00:09:17,269 --> 00:09:22,870
right back to slideshow

00:09:23,560 --> 00:09:26,160
well

00:09:30,730 --> 00:09:36,130
i watch them again so here we are again

00:09:32,649 --> 00:09:37,630
back to recycling the first thing that

00:09:36,130 --> 00:09:38,860
gem of does is lets you reduce the

00:09:37,630 --> 00:09:42,399
amount of code you have to write you

00:09:38,860 --> 00:09:44,230
don't need a parser for arcane formats

00:09:42,399 --> 00:09:46,899
where every time someone decides to add

00:09:44,230 --> 00:09:48,310
a new feature they look at exactly which

00:09:46,899 --> 00:09:50,649
characters are not legal in this

00:09:48,310 --> 00:09:52,930
position if we start with that then then

00:09:50,649 --> 00:09:54,459
we can do something else and you wind up

00:09:52,930 --> 00:09:58,089
with a monstrosity that requires a

00:09:54,459 --> 00:10:00,579
hugely complex expression to pass so we

00:09:58,089 --> 00:10:02,529
don't have that the second thing is to

00:10:00,579 --> 00:10:05,440
use the same patterns for data access if

00:10:02,529 --> 00:10:07,389
you call get contact updates it looks

00:10:05,440 --> 00:10:08,920
exactly the same as get calendar updates

00:10:07,389 --> 00:10:11,410
which looks exactly the same as and get

00:10:08,920 --> 00:10:14,889
mailbox updates it takes a state string

00:10:11,410 --> 00:10:16,300
it takes a limit it takes how many what

00:10:14,889 --> 00:10:18,579
fields you want to fetch out of this

00:10:16,300 --> 00:10:21,699
data and it returns the same structured

00:10:18,579 --> 00:10:24,310
records so if you extend to a new data

00:10:21,699 --> 00:10:26,130
type you don't have to add new stuff so

00:10:24,310 --> 00:10:28,329
we reuse what we've already done and

00:10:26,130 --> 00:10:30,490
finally we're recycling a lot of the

00:10:28,329 --> 00:10:32,019
concepts that have come before us

00:10:30,490 --> 00:10:35,350
because there's a lot of good stuff in

00:10:32,019 --> 00:10:38,440
the existing standards we're using from

00:10:35,350 --> 00:10:39,910
the devs we're using the concept that

00:10:38,440 --> 00:10:41,860
you just send a state string to get an

00:10:39,910 --> 00:10:43,480
update rather than with IMAP where you

00:10:41,860 --> 00:10:45,190
have to keep track of modification

00:10:43,480 --> 00:10:48,579
sequences and uid validities on

00:10:45,190 --> 00:10:49,810
mailboxes and a whole stack of stuff to

00:10:48,579 --> 00:10:53,079
synchronize the state with the other

00:10:49,810 --> 00:10:55,930
server but what we're not keeping is the

00:10:53,079 --> 00:10:58,870
idea that you create two separate IDs on

00:10:55,930 --> 00:11:01,319
the client the UID and a resource name

00:10:58,870 --> 00:11:04,630
and they're both unique and they're both

00:11:01,319 --> 00:11:06,190
similar but slightly different so we're

00:11:04,630 --> 00:11:08,110
getting rid of we're keeping the good

00:11:06,190 --> 00:11:09,339
stuff as much as possible and getting

00:11:08,110 --> 00:11:13,930
rid of the stuff that doesn't really

00:11:09,339 --> 00:11:16,870
make sense and that's where we are now

00:11:13,930 --> 00:11:18,880
but we sort of we're doing it by

00:11:16,870 --> 00:11:21,040
ourselves pretty much at the moment we

00:11:18,880 --> 00:11:22,600
don't want to be doing everything by

00:11:21,040 --> 00:11:25,569
ourselves because the idea is to have an

00:11:22,600 --> 00:11:28,029
open standard that actually lets us

00:11:25,569 --> 00:11:29,680
compete against the closed standards

00:11:28,029 --> 00:11:32,529
that are coming through from everywhere

00:11:29,680 --> 00:11:35,079
else and if it's just fastmail standard

00:11:32,529 --> 00:11:38,089
and we're calling it open that doesn't

00:11:35,079 --> 00:11:40,129
can you imagine using imap still in 10

00:11:38,089 --> 00:11:42,679
years in 20 years to synchronize your

00:11:40,129 --> 00:11:45,139
email no I I don't want to be there

00:11:42,679 --> 00:11:47,209
that's really what fishermen I think

00:11:45,139 --> 00:11:49,489
it's the right time I think the team

00:11:47,209 --> 00:11:52,699
that we've got is the right team but it

00:11:49,489 --> 00:11:55,160
needs it needs more help so here we go

00:11:52,699 --> 00:11:57,499
ask on if you can make it to portland in

00:11:55,160 --> 00:11:59,359
july that would be fantastic i'm going

00:11:57,499 --> 00:12:01,879
to submit a top-four Oskan which is

00:11:59,359 --> 00:12:04,279
coming over to amsterdam as well in

00:12:01,879 --> 00:12:05,809
early october i believe i'll try and

00:12:04,279 --> 00:12:08,539
come over and pretty much do the same

00:12:05,809 --> 00:12:11,720
thing again then we will have Cyrus

00:12:08,539 --> 00:12:13,429
three-point oh whatever happens to be in

00:12:11,720 --> 00:12:15,529
size 3-pointer at the time we're working

00:12:13,429 --> 00:12:17,089
as hard as we can to get if you came to

00:12:15,529 --> 00:12:20,809
my talk yesterday some really amazing

00:12:17,089 --> 00:12:22,639
stuff that's coming down for that there

00:12:20,809 --> 00:12:25,970
it is Jam app today I take a look the

00:12:22,639 --> 00:12:28,759
full spec is there now it's not final

00:12:25,970 --> 00:12:31,129
final we're still ironing out things as

00:12:28,759 --> 00:12:32,809
we actually implement it and we really

00:12:31,129 --> 00:12:34,999
want more people to try and implement it

00:12:32,809 --> 00:12:36,709
and see where the pain points are before

00:12:34,999 --> 00:12:40,149
we too committed to anything in

00:12:36,709 --> 00:12:40,149
particular questions

00:12:46,620 --> 00:12:52,860
okay the question was do we have a

00:12:48,480 --> 00:12:56,760
timeline for finishing up the timeline

00:12:52,860 --> 00:12:59,280
forgetting fastmail onto the gmat

00:12:56,760 --> 00:13:01,650
protocol is about two or three months at

00:12:59,280 --> 00:13:04,860
the moment we are using J map internally

00:13:01,650 --> 00:13:06,420
between the Cyrus server and the

00:13:04,860 --> 00:13:07,770
contacts part of our site now so we

00:13:06,420 --> 00:13:09,590
actually implemented contacts for us

00:13:07,770 --> 00:13:12,090
because card dev was just too slow

00:13:09,590 --> 00:13:13,890
mapping to the contacts API that we

00:13:12,090 --> 00:13:15,390
already had we had two round-trip

00:13:13,890 --> 00:13:17,580
basically fetch the entire thing and

00:13:15,390 --> 00:13:19,170
build a map in memory and then round

00:13:17,580 --> 00:13:21,060
trip anytime anything changed we had to

00:13:19,170 --> 00:13:22,710
resynchronize the card dev database that

00:13:21,060 --> 00:13:25,680
was too expensive so we're now talking

00:13:22,710 --> 00:13:27,750
Jay map directly to Cyrus the plan is to

00:13:25,680 --> 00:13:29,370
put all the other stuff into Cyrus as

00:13:27,750 --> 00:13:32,220
well so we're talking Jay map internally

00:13:29,370 --> 00:13:34,260
and also to move from our current

00:13:32,220 --> 00:13:35,310
protocols gemma which is similar in a

00:13:34,260 --> 00:13:36,740
lot of respects there are a lot of

00:13:35,310 --> 00:13:38,760
things that are pretty much the same

00:13:36,740 --> 00:13:41,070
couple of things that have changed like

00:13:38,760 --> 00:13:42,900
the compose off where in particular has

00:13:41,070 --> 00:13:44,430
changed to make it less possible to

00:13:42,900 --> 00:13:46,470
accidentally send the same message twice

00:13:44,430 --> 00:13:51,330
which can happen on really unreliable

00:13:46,470 --> 00:13:56,300
networks and one so yeah two to three

00:13:51,330 --> 00:13:56,300
months to have something people can use

00:14:00,700 --> 00:14:08,050
we are not on the RFC track yet I'd love

00:14:04,330 --> 00:14:09,250
to but so far we we haven't been at the

00:14:08,050 --> 00:14:13,740
stage where we feel they'd be any

00:14:09,250 --> 00:14:16,990
benefit going there well it's just us

00:14:13,740 --> 00:14:20,470
we'd rather get the code finished first

00:14:16,990 --> 00:14:22,440
so there's an example and tests really

00:14:20,470 --> 00:14:25,480
really important to have good tests I

00:14:22,440 --> 00:14:28,270
implemented dev for our file storage and

00:14:25,480 --> 00:14:30,190
use the litmus test framework to check

00:14:28,270 --> 00:14:31,930
it and came out with a lot better end

00:14:30,190 --> 00:14:34,060
result than trying to implement

00:14:31,930 --> 00:14:36,670
something like Cal Delft card Dave where

00:14:34,060 --> 00:14:38,020
there's no tests out there that are in a

00:14:36,670 --> 00:14:40,570
shape that you can actually run against

00:14:38,020 --> 00:14:41,950
the server so you wind up pretty much

00:14:40,570 --> 00:14:44,850
having to go to the mailing list every

00:14:41,950 --> 00:14:48,300
time you have a question not ideal

00:14:44,850 --> 00:14:48,300
prefer tests

00:14:52,600 --> 00:14:55,259
sorry

00:14:56,899 --> 00:15:02,329
nobody has committed committed yet I'm

00:15:00,709 --> 00:15:07,699
really hoping roundcube will be

00:15:02,329 --> 00:15:11,990
supporting it obviously after ya soon a

00:15:07,699 --> 00:15:14,240
hub thunderbirds we have a Summer of

00:15:11,990 --> 00:15:16,339
Code student working on getting j map

00:15:14,240 --> 00:15:17,869
support into thunderbird so hopefully

00:15:16,339 --> 00:15:19,869
there will be a first pass of that

00:15:17,869 --> 00:15:25,279
coming out in the next couple of months

00:15:19,869 --> 00:15:26,959
and we have our own team Rob Norris's

00:15:25,279 --> 00:15:29,179
one of our programmers in Melbourne is

00:15:26,959 --> 00:15:31,819
working on a rust based server

00:15:29,179 --> 00:15:33,290
implementation that stand alone which is

00:15:31,819 --> 00:15:35,149
coming on quite nice too apparently I

00:15:33,290 --> 00:15:37,639
haven't looked at it yet because he

00:15:35,149 --> 00:15:39,499
submitted is his first working copy as I

00:15:37,639 --> 00:15:45,829
was on the plane on the way here and

00:15:39,499 --> 00:15:48,350
pull back yet yes ok I saw Reno's works

00:15:45,829 --> 00:15:49,550
thanks first of all and my question

00:15:48,350 --> 00:15:51,889
would be around to scope so you

00:15:49,550 --> 00:15:54,920
mentioned like email contacts calendars

00:15:51,889 --> 00:15:57,079
yes so is there are also plans like you

00:15:54,920 --> 00:15:59,029
know tasks nodes and settings you know

00:15:57,079 --> 00:16:00,559
like activesync so i can say out of

00:15:59,029 --> 00:16:04,429
office settings he's kind of seeing

00:16:00,559 --> 00:16:08,029
tasks and notes definitely vast mail has

00:16:04,429 --> 00:16:11,059
just in the last week in fact put notes

00:16:08,029 --> 00:16:13,550
support into our protocol so that will

00:16:11,059 --> 00:16:14,809
talk to an IMAP folder the same way that

00:16:13,550 --> 00:16:17,800
other clients do so that we can

00:16:14,809 --> 00:16:20,240
interoperate with them but for jmac

00:16:17,800 --> 00:16:23,929
notes will definitely be a thing to add

00:16:20,240 --> 00:16:25,670
pretty soon tasks goes along with the

00:16:23,929 --> 00:16:28,220
the contacts and the calendars really as

00:16:25,670 --> 00:16:29,959
part of the group where world another

00:16:28,220 --> 00:16:33,290
interesting thing is potentially instant

00:16:29,959 --> 00:16:36,709
messaging that's the next step prior

00:16:33,290 --> 00:16:38,240
we've got the asynchronous messaging now

00:16:36,709 --> 00:16:39,920
to get the synchronous messaging in

00:16:38,240 --> 00:16:43,220
there and this protocol would do it very

00:16:39,920 --> 00:16:45,110
very easily the the updates process is

00:16:43,220 --> 00:16:47,600
designed around the fact that you have a

00:16:45,110 --> 00:16:50,720
history of messages kept there and you

00:16:47,600 --> 00:16:52,189
add to it so you'd get that chat history

00:16:50,720 --> 00:16:55,340
and if you bring it up in another window

00:16:52,189 --> 00:16:57,800
it would have the back history

00:16:55,340 --> 00:17:01,660
you just say give me the top hundred

00:16:57,800 --> 00:17:01,660
sorted by arrival order

00:17:06,300 --> 00:17:09,530
well you don't know how because

00:17:09,790 --> 00:17:15,380
yeah I'm really excited about Jay map

00:17:12,170 --> 00:17:16,970
I'm really hoping that we get a few

00:17:15,380 --> 00:17:19,190
different people behind it so that it's

00:17:16,970 --> 00:17:24,200
not just fast mail we're doing some

00:17:19,190 --> 00:17:25,910
great things with it but yeah it's the

00:17:24,200 --> 00:17:30,770
world needs it the world needs something

00:17:25,910 --> 00:17:33,110
that's not i'm at imax been great but it

00:17:30,770 --> 00:17:36,320
yeah

00:17:33,110 --> 00:17:37,549
the other demo that i'm not going to do

00:17:36,320 --> 00:17:39,440
in here right now cuz i don't have it

00:17:37,549 --> 00:17:42,080
all set up and it's too hard turning

00:17:39,440 --> 00:17:44,330
around everywhere but in the fast male

00:17:42,080 --> 00:17:45,799
interface if you delete a message from a

00:17:44,330 --> 00:17:47,270
folder that you are now viewing it

00:17:45,799 --> 00:17:49,880
updates instantly the counts up that

00:17:47,270 --> 00:17:51,920
everything updates if you remove a

00:17:49,880 --> 00:17:53,900
message here it just disappears from

00:17:51,920 --> 00:17:55,940
that because the updates are complete

00:17:53,900 --> 00:17:57,440
it's the whole account and it has a

00:17:55,940 --> 00:17:59,090
single idea that it's using for

00:17:57,440 --> 00:18:02,270
everything so you just get a push

00:17:59,090 --> 00:18:06,770
notification which is one line saying

00:18:02,270 --> 00:18:08,750
decided changed it's the users mail and

00:18:06,770 --> 00:18:11,870
then that user fetches their mail even

00:18:08,750 --> 00:18:12,890
shared across multiple users the ID is a

00:18:11,870 --> 00:18:14,570
little bit longer because it has two

00:18:12,890 --> 00:18:17,120
lists one idea per user that you have

00:18:14,570 --> 00:18:19,100
access to email from but straight away

00:18:17,120 --> 00:18:22,030
your shared mailbox instrument that's

00:18:19,100 --> 00:18:22,030
just the same

00:18:26,590 --> 00:18:33,460
all right thank you everybody there are

00:18:29,650 --> 00:18:36,330
t-shirts please take them off me I don't

00:18:33,460 --> 00:18:36,330

YouTube URL: https://www.youtube.com/watch?v=bxQQxVOCaTg


