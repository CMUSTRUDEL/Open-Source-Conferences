Title: Replacing Xorg input-drivers with libinput
Publication date: 2015-05-12
Playlist: openSUSE Conference 2015
Description: 
	This presentation will discuss the plans to move Xorg to use libinput too through an input driver called xf86-input-libinput, as well as the status of this move. xf86-input-libinput is scheduled to be the default Xorg input driver for Fedora 22.
Currently xorg uses a 1 driver per input device model, this makes it impossible to do things like middle button scrolling on the trackpoint on laptops where the trackpoint buttons are softbuttons on the touchpad. Besides this the xf86-input-synaptics driver was never really designed for multi-touch touchpads and this causes various issues.
For Wayland we've been working on a new improved input stack, which is to be shared by all compositors and lives inside libinput. This talk is about switching the xf86-input-* part of the Xorg input stack over to libinput by using a wrapper called xf86-input-libinput.
This talk will focus on the process and status of making this switch, can we make the switch without loosing any features, what updates are needed to the control-panel-applets of various desktop-environments to work with this new stack ? 

Subscribe ►http://bit.ly/1G2KKZl

Offical Website ►https://www.opensuse.org
Follow us on Twitter ► https://twitter.com/openSUSE
Like us on Facebook ► https://www.facebook.com/en.openSUSE
Follow us on Google+ ► https://www.plus.google.com/openSUSE
Captions: 
	00:00:00,680 --> 00:00:06,560
let's get started on then good afternoon

00:00:03,540 --> 00:00:09,179
everybody my name is hong stahh hulu and

00:00:06,560 --> 00:00:12,780
for full disclosure at this opensuse

00:00:09,179 --> 00:00:14,700
conference I i work for red hat and as

00:00:12,780 --> 00:00:16,379
part of my daytime job for red hat I've

00:00:14,700 --> 00:00:19,920
been working on something called lip

00:00:16,379 --> 00:00:22,890
input and sort of accidentally actually

00:00:19,920 --> 00:00:24,630
we've ended up replacing the xorg input

00:00:22,890 --> 00:00:27,570
driver so the synaptics driver and the

00:00:24,630 --> 00:00:29,340
EV driver with sleep input it was not

00:00:27,570 --> 00:00:30,929
the original intention but it sort of

00:00:29,340 --> 00:00:33,750
blew over there and I would like to talk

00:00:30,929 --> 00:00:35,989
to you about that I hope that maybe one

00:00:33,750 --> 00:00:38,250
of you for is a Suzy graphics guy

00:00:35,989 --> 00:00:40,590
because we would like you guys to do the

00:00:38,250 --> 00:00:42,660
same basically and also move away from

00:00:40,590 --> 00:00:46,980
the old ex work input drivers and move

00:00:42,660 --> 00:00:50,039
to lip input so first today I want to

00:00:46,980 --> 00:00:52,260
introduce it in put a bit then explain

00:00:50,039 --> 00:00:55,920
why we in the end decided to switch to

00:00:52,260 --> 00:00:57,930
using it for its orc then but that

00:00:55,920 --> 00:01:00,750
requires for the desktop environments

00:00:57,930 --> 00:01:02,730
this slide actually is gone because

00:01:00,750 --> 00:01:07,260
there are no more changes needed it's

00:01:02,730 --> 00:01:09,330
already that I remove the slide but I

00:01:07,260 --> 00:01:12,240
didn't remove it from this slide so and

00:01:09,330 --> 00:01:14,780
then I want to look at an desktop

00:01:12,240 --> 00:01:18,479
environment which already fully supports

00:01:14,780 --> 00:01:23,790
the new lip input XOR approach which is

00:01:18,479 --> 00:01:26,540
known so what a slip input lip input in

00:01:23,790 --> 00:01:29,340
its basics is a library for unified and

00:01:26,540 --> 00:01:32,159
shared input handling code for Weiland

00:01:29,340 --> 00:01:36,090
display servers also known as Wayland

00:01:32,159 --> 00:01:38,400
compositors the reason lip input was

00:01:36,090 --> 00:01:40,680
started that was if you look at the

00:01:38,400 --> 00:01:43,470
input stack in Linux you have a kernel

00:01:40,680 --> 00:01:46,200
driver which talks to USB or ps2 or ask

00:01:43,470 --> 00:01:48,600
for C device and turns that into EV deaf

00:01:46,200 --> 00:01:50,549
events because if EDF events can be

00:01:48,600 --> 00:01:53,189
pretty role especially for something

00:01:50,549 --> 00:01:55,200
like a touchpad EV deaf events are not

00:01:53,189 --> 00:01:57,030
really usable because you want you get

00:01:55,200 --> 00:01:58,590
absolute finger positions on the

00:01:57,030 --> 00:02:00,060
touchpad which you want to make a mouse

00:01:58,590 --> 00:02:01,380
cursor move so you want to turn it into

00:02:00,060 --> 00:02:04,219
relative events and you want to have

00:02:01,380 --> 00:02:07,110
scroll events and things like that so

00:02:04,219 --> 00:02:09,899
between basically your applications or

00:02:07,110 --> 00:02:11,560
your web browser or whatever and your EV

00:02:09,899 --> 00:02:14,890
deaf events you need

00:02:11,560 --> 00:02:17,560
additional layer traditionally in Linux

00:02:14,890 --> 00:02:19,540
that has been the xserver and the input

00:02:17,560 --> 00:02:21,520
driver for the xserver specifically when

00:02:19,540 --> 00:02:28,540
we're talking about touch pads the X

00:02:21,520 --> 00:02:30,190
f-86 input synaptics driver when people

00:02:28,540 --> 00:02:31,569
started doing Wayland compositors when I

00:02:30,190 --> 00:02:33,430
started doing western and then the

00:02:31,569 --> 00:02:35,290
genome guy started doing wailing support

00:02:33,430 --> 00:02:38,440
for comida que de guys started doing

00:02:35,290 --> 00:02:40,900
Wayland support for KDE everyone started

00:02:38,440 --> 00:02:43,300
riding its own input code so the middle

00:02:40,900 --> 00:02:44,920
layer between the application and the

00:02:43,300 --> 00:02:46,950
role in vida of events everyone was

00:02:44,920 --> 00:02:49,420
riding its own copy of that code and

00:02:46,950 --> 00:02:50,769
Peter hodari who's a call a direct

00:02:49,420 --> 00:02:52,780
colleague of mine who's done a lot of

00:02:50,769 --> 00:02:54,610
input work in each stack at the xcel

00:02:52,780 --> 00:02:57,519
evill basically the X or input driver

00:02:54,610 --> 00:03:00,280
level set no no no we don't want this

00:02:57,519 --> 00:03:03,040
getting input right is hard enough if

00:03:00,280 --> 00:03:05,019
you have one copy of the code we don't

00:03:03,040 --> 00:03:06,580
want a gazillions different inputs text

00:03:05,019 --> 00:03:08,620
with all their own subtle differences

00:03:06,580 --> 00:03:11,049
users will go crazy and will need to do

00:03:08,620 --> 00:03:13,180
all the career six times so he said we

00:03:11,049 --> 00:03:16,690
need to have a unified library to handle

00:03:13,180 --> 00:03:18,340
input under Wayland compositors that's

00:03:16,690 --> 00:03:21,459
where lip input started lip input boss

00:03:18,340 --> 00:03:24,880
is primarily designed for use in valence

00:03:21,459 --> 00:03:26,739
compositors Peter also sold it as a

00:03:24,880 --> 00:03:29,319
chance to rectify some historical

00:03:26,739 --> 00:03:32,170
mistakes in the xorg input stack X is

00:03:29,319 --> 00:03:34,000
very very old and it has some things

00:03:32,170 --> 00:03:37,359
which we are not completely happy yet

00:03:34,000 --> 00:03:39,370
from the input size which also makes it

00:03:37,359 --> 00:03:44,530
hard to give the user a pleasant and

00:03:39,370 --> 00:03:46,540
user experience basically when we were

00:03:44,530 --> 00:03:49,720
working on this Wayland compositors were

00:03:46,540 --> 00:03:52,030
not read yet really useful usable for

00:03:49,720 --> 00:03:54,220
day-to-day use one could argue they are

00:03:52,030 --> 00:03:55,720
still not ready for day to day use but

00:03:54,220 --> 00:03:58,170
back then they certainly were not this

00:03:55,720 --> 00:04:01,359
is about one and a half year ago I guess

00:03:58,170 --> 00:04:03,609
so Peter created this little toy it

00:04:01,359 --> 00:04:05,230
started with a little toy called x86

00:04:03,609 --> 00:04:08,200
input lip input which is a wrapper

00:04:05,230 --> 00:04:11,260
around lip input replacing the eg Devon

00:04:08,200 --> 00:04:13,959
synaptics input drivers under xorg this

00:04:11,260 --> 00:04:15,730
was purely intended for testing right

00:04:13,959 --> 00:04:17,639
how do you test it a touch pad if it

00:04:15,730 --> 00:04:20,109
feels right if the mouse cursor

00:04:17,639 --> 00:04:22,060
acceleration curve is okay well you use

00:04:20,109 --> 00:04:24,360
it day to day in your web browsing and

00:04:22,060 --> 00:04:24,360
whatever

00:04:25,190 --> 00:04:32,370
but in me in the meantime we figured out

00:04:28,440 --> 00:04:34,980
that we had a pretty solid input stackin

00:04:32,370 --> 00:04:36,600
lip input we managed to fix a lot of

00:04:34,980 --> 00:04:37,920
things which were broken in the old

00:04:36,600 --> 00:04:41,150
stack and indeed as an innocent

00:04:37,920 --> 00:04:43,620
especially in the synaptics driver and

00:04:41,150 --> 00:04:45,600
actually 86 input type input was

00:04:43,620 --> 00:04:48,060
actually working really really well and

00:04:45,600 --> 00:04:51,840
as we were adding support for new exotic

00:04:48,060 --> 00:04:55,620
hardware like the Lenovo t440 x 240 they

00:04:51,840 --> 00:04:57,420
have these this click pet which not only

00:04:55,620 --> 00:04:58,920
has soft button areas at the bottom but

00:04:57,420 --> 00:05:01,440
also at the top to use with your track

00:04:58,920 --> 00:05:02,900
point we spent like I spent like half a

00:05:01,440 --> 00:05:07,200
year of my life on getting that to work

00:05:02,900 --> 00:05:09,600
it's a crazy design hardware we had

00:05:07,200 --> 00:05:11,160
something like we don't want to need to

00:05:09,600 --> 00:05:13,320
do all this new hardware support twice

00:05:11,160 --> 00:05:15,180
in one case we were doing it properly

00:05:13,320 --> 00:05:16,590
and live input and any other days we

00:05:15,180 --> 00:05:19,200
were putting some duct tape on a

00:05:16,590 --> 00:05:21,060
synaptics driver or rather we were

00:05:19,200 --> 00:05:22,950
putting another layer over the layers of

00:05:21,060 --> 00:05:29,190
duct tape which are called the synaptics

00:05:22,950 --> 00:05:30,900
driver so I came with the ID like maybe

00:05:29,190 --> 00:05:32,430
we should just ditch those all drivers

00:05:30,900 --> 00:05:35,310
stopped maintaining them and switch to

00:05:32,430 --> 00:05:37,950
leap input also in the xorg stack that's

00:05:35,310 --> 00:05:40,140
pretty much where we are at now the avi

00:05:37,950 --> 00:05:42,570
from lip input is stable with the recent

00:05:40,140 --> 00:05:45,050
zero not eight we already have a 1.0

00:05:42,570 --> 00:05:47,190
release which I think actually broke ABI

00:05:45,050 --> 00:05:49,050
should have updated this slide sorry

00:05:47,190 --> 00:05:52,800
that the 1.0 release should really

00:05:49,050 --> 00:05:54,600
really have a stable ABI we hope so why

00:05:52,800 --> 00:05:58,800
do we want to use lip input for XOR car

00:05:54,600 --> 00:06:00,690
already talked about this a bit all

00:05:58,800 --> 00:06:03,080
current user space input development

00:06:00,690 --> 00:06:07,290
work is actually being done on lip input

00:06:03,080 --> 00:06:09,540
at least within red hats everyone who

00:06:07,290 --> 00:06:11,010
works on on him on the input on the

00:06:09,540 --> 00:06:13,110
middle layer between the colonel and

00:06:11,010 --> 00:06:14,760
because who the colonel was okay for

00:06:13,110 --> 00:06:17,100
both right doesn't matter if you use the

00:06:14,760 --> 00:06:19,669
older new drivers it's mostly focusing

00:06:17,100 --> 00:06:19,669
on lip input

00:06:20,740 --> 00:06:27,729
x86 input lip input is already better we

00:06:25,630 --> 00:06:30,280
can already offer a better experience to

00:06:27,729 --> 00:06:33,220
give a simple the problem is the old

00:06:30,280 --> 00:06:35,410
synaptics driver was designed for single

00:06:33,220 --> 00:06:37,530
touch touch pads right a touchpad which

00:06:35,410 --> 00:06:40,090
could only track a single finger and

00:06:37,530 --> 00:06:43,210
everything else is really bolded on top

00:06:40,090 --> 00:06:44,889
with duct tape lots and lots of duct

00:06:43,210 --> 00:06:46,270
tape the synaptics driver was never

00:06:44,889 --> 00:06:49,150
designed to deal with multi-touch

00:06:46,270 --> 00:06:55,659
touchpad and every modern touch pad is

00:06:49,150 --> 00:06:57,039
multi-touch to give you an example of

00:06:55,659 --> 00:07:00,550
something which the synaptics driver

00:06:57,039 --> 00:07:03,069
cannot do since the synaptics driver is

00:07:00,550 --> 00:07:04,630
a single touch the first finger which

00:07:03,069 --> 00:07:07,210
you put down is the only finger which

00:07:04,630 --> 00:07:08,409
counts so if you have a click bet one of

00:07:07,210 --> 00:07:11,319
these touch pads where you don't have

00:07:08,409 --> 00:07:13,630
physical buttons and you rest a finger

00:07:11,319 --> 00:07:15,280
in the say the left bottom to do a left

00:07:13,630 --> 00:07:17,080
click because that's where the left

00:07:15,280 --> 00:07:18,340
Harper button used to be and people tend

00:07:17,080 --> 00:07:20,080
to rest the finger there so they can

00:07:18,340 --> 00:07:22,270
click and then you want to move the

00:07:20,080 --> 00:07:23,830
cursor all the synaptics you cannot move

00:07:22,270 --> 00:07:26,560
the cursor because the second finger

00:07:23,830 --> 00:07:27,789
doesn't count you need to first lift the

00:07:26,560 --> 00:07:29,380
first finger from the area where you

00:07:27,789 --> 00:07:33,400
want to click and then put a cruiser in

00:07:29,380 --> 00:07:34,690
position and then click and there are

00:07:33,400 --> 00:07:36,009
all these kind of things where people

00:07:34,690 --> 00:07:37,810
don't really notice they know that

00:07:36,009 --> 00:07:40,479
somehow the touchpad doesn't feel right

00:07:37,810 --> 00:07:42,130
and it doesn't work as fluent as in

00:07:40,479 --> 00:07:44,139
other operating systems but they cannot

00:07:42,130 --> 00:07:46,150
put their fingers behind but this is one

00:07:44,139 --> 00:07:47,380
example of things problems you get if

00:07:46,150 --> 00:07:51,849
you do not properly deal with

00:07:47,380 --> 00:07:53,169
multi-touch touchpad lip in Boots

00:07:51,849 --> 00:07:55,330
touchpad handling is designed for

00:07:53,169 --> 00:07:57,669
multi-touch touchpad from the go it's

00:07:55,330 --> 00:07:59,469
already much better than synaptics we're

00:07:57,669 --> 00:08:01,780
currently even working on touchpad space

00:07:59,469 --> 00:08:03,400
jesters so you can do pinch and zoom and

00:08:01,780 --> 00:08:05,650
rotate on your touchpad and three finger

00:08:03,400 --> 00:08:07,930
swipes and everything that's almost

00:08:05,650 --> 00:08:09,340
ready actually on the lip input side and

00:08:07,930 --> 00:08:10,419
then we need to put all the layers on

00:08:09,340 --> 00:08:11,830
top to actually get it to the

00:08:10,419 --> 00:08:16,270
application which is still a lot of work

00:08:11,830 --> 00:08:18,130
but another problem with the old way of

00:08:16,270 --> 00:08:21,310
doing things is old drivers are

00:08:18,130 --> 00:08:23,020
instantiated by the xserver the xserver

00:08:21,310 --> 00:08:24,669
enumerates the hardware and then

00:08:23,020 --> 00:08:27,190
instantiates a single instance of a

00:08:24,669 --> 00:08:30,250
driver and they don't know about other

00:08:27,190 --> 00:08:31,560
instances of themselves or instances of

00:08:30,250 --> 00:08:34,770
other drivers

00:08:31,560 --> 00:08:36,779
so I gave up before example the Lenovo

00:08:34,770 --> 00:08:39,200
t440 is a really nice example because

00:08:36,779 --> 00:08:41,789
it's a weird hardware design it has this

00:08:39,200 --> 00:08:43,349
top row of the touchpad which is

00:08:41,789 --> 00:08:45,420
supposed to be the three hardware

00:08:43,349 --> 00:08:46,890
buttons for your track point so instead

00:08:45,420 --> 00:08:48,240
of that you have three physical buttons

00:08:46,890 --> 00:08:50,730
you click on the top row of your

00:08:48,240 --> 00:08:52,620
touchpad and that generates a middle

00:08:50,730 --> 00:08:54,570
left or right click event depending on

00:08:52,620 --> 00:08:57,270
where on the role you click it all's

00:08:54,570 --> 00:08:58,740
done in software a lot of people who are

00:08:57,270 --> 00:09:00,779
track mind users want to have something

00:08:58,740 --> 00:09:01,950
called middle button scrolling so you

00:09:00,779 --> 00:09:03,210
hit the middle button and then you

00:09:01,950 --> 00:09:05,880
scroll around with the track point

00:09:03,210 --> 00:09:07,290
instead of moving the cursor basically

00:09:05,880 --> 00:09:09,480
like a scroll wheel on the mouse or two

00:09:07,290 --> 00:09:11,790
finger scrolling on a touchpad we cannot

00:09:09,480 --> 00:09:13,500
do that in the old stack because the

00:09:11,790 --> 00:09:16,440
touchpad driver is generating the middle

00:09:13,500 --> 00:09:19,770
click and the track point is handled by

00:09:16,440 --> 00:09:21,570
the if EDF driver it doesn't know it's

00:09:19,770 --> 00:09:22,950
not completely true our song you boon to

00:09:21,570 --> 00:09:25,170
a community page where you can download

00:09:22,950 --> 00:09:27,180
a package for someone took the source

00:09:25,170 --> 00:09:30,480
code of both drivers and turn them into

00:09:27,180 --> 00:09:32,010
a Frankenstein so he merged the evf and

00:09:30,480 --> 00:09:36,630
synaptic driver into one because we

00:09:32,010 --> 00:09:38,520
didn't have enough duct tape yet but if

00:09:36,630 --> 00:09:40,410
you do not want to use that community

00:09:38,520 --> 00:09:43,200
created Frankenstein but I don't think

00:09:40,410 --> 00:09:45,300
any destroyer want to ship then you just

00:09:43,200 --> 00:09:48,200
cannot do middle button scrolling on one

00:09:45,300 --> 00:09:50,610
of these 40 series lenovo thinkpads

00:09:48,200 --> 00:09:52,350
unless you use lip input because there

00:09:50,610 --> 00:09:54,900
we have a single context which is shared

00:09:52,350 --> 00:09:56,820
between all drivers ND the different

00:09:54,900 --> 00:09:59,160
moving parts know about each other you

00:09:56,820 --> 00:10:01,140
can even as a driver say for example the

00:09:59,160 --> 00:10:03,300
touchpad driver can say in the input

00:10:01,140 --> 00:10:07,080
notify me if a track point gets

00:10:03,300 --> 00:10:08,790
registered and that callback will get

00:10:07,080 --> 00:10:11,640
cold immediately if there already was

00:10:08,790 --> 00:10:13,920
one registered and what we saw what we

00:10:11,640 --> 00:10:16,140
also do in lip input is if you're moving

00:10:13,920 --> 00:10:18,390
around with the track point and we get

00:10:16,140 --> 00:10:20,280
events on a touchpad we ignore them

00:10:18,390 --> 00:10:21,600
because you're likely just resting your

00:10:20,280 --> 00:10:23,850
hand on the touchpad while you're using

00:10:21,600 --> 00:10:26,459
the track point another thing which we

00:10:23,850 --> 00:10:29,130
cannot do in the old world because there

00:10:26,459 --> 00:10:30,570
is no there's too much separation my two

00:10:29,130 --> 00:10:32,760
drivers don't know about each other's

00:10:30,570 --> 00:10:35,130
too much separation there is such a

00:10:32,760 --> 00:10:39,350
thing as too much usually it's good to

00:10:35,130 --> 00:10:39,350
have things separated but and abstracted

00:10:40,319 --> 00:10:48,279
so one thing which we needed to do to

00:10:44,319 --> 00:10:50,350
get the x86 input lip input driver from

00:10:48,279 --> 00:10:53,109
a toy to something which we can actually

00:10:50,350 --> 00:10:55,720
ship to end-users is we needed to make

00:10:53,109 --> 00:10:58,059
it configurable at users sometimes want

00:10:55,720 --> 00:10:59,919
to use two finger scrolling or they want

00:10:58,059 --> 00:11:01,660
to use edge scrolling they want to be

00:10:59,919 --> 00:11:04,269
able to configure how fast they're

00:11:01,660 --> 00:11:07,989
mouses they may be left-handed they want

00:11:04,269 --> 00:11:09,519
to say swap my mouse buttons or they may

00:11:07,989 --> 00:11:11,949
want to use something which Apple calls

00:11:09,519 --> 00:11:13,359
natural scrolling right so that you're

00:11:11,949 --> 00:11:15,100
you're scrolling Direction is opposite

00:11:13,359 --> 00:11:17,139
from what normal people are used to

00:11:15,100 --> 00:11:18,910
write natural scrolling is if you scroll

00:11:17,139 --> 00:11:26,199
down your touchpad the contents on your

00:11:18,910 --> 00:11:27,970
screen moves up so that is all things

00:11:26,199 --> 00:11:29,889
which we need to have configurable that

00:11:27,970 --> 00:11:32,999
is configurable and lip input we needed

00:11:29,889 --> 00:11:36,910
to export that to X so we added a lot of

00:11:32,999 --> 00:11:38,739
input device properties input devices in

00:11:36,910 --> 00:11:41,139
X are usually abstracted at something

00:11:38,739 --> 00:11:43,089
called X input too and we added X input

00:11:41,139 --> 00:11:45,100
to device properties or prefixed with

00:11:43,089 --> 00:11:47,379
lip inputs to make things configurable

00:11:45,100 --> 00:11:49,389
on a per device basis you can actually

00:11:47,379 --> 00:11:56,199
with lip input you can set your mouse

00:11:49,389 --> 00:11:57,759
cursor speed per device if your desktop

00:11:56,199 --> 00:11:59,350
environments somehow supports

00:11:57,759 --> 00:12:00,609
configuring that or you fall back to the

00:11:59,350 --> 00:12:02,980
comment line you can do everything from

00:12:00,609 --> 00:12:04,779
the comment line this is about the

00:12:02,980 --> 00:12:06,759
change in fact adjustment to make it

00:12:04,779 --> 00:12:11,799
easier on end users that I do not need

00:12:06,759 --> 00:12:14,139
to use a comment line so what sort of

00:12:11,799 --> 00:12:17,169
changes are needed of before i get into

00:12:14,139 --> 00:12:19,179
that let me explain again why we really

00:12:17,169 --> 00:12:22,689
want to get rid of the old example input

00:12:19,179 --> 00:12:25,839
stack and about why this is mostly why

00:12:22,689 --> 00:12:28,269
is our configuration interface not just

00:12:25,839 --> 00:12:30,249
backward compatible right you could say

00:12:28,269 --> 00:12:32,410
why do you require changing the desktop

00:12:30,249 --> 00:12:35,799
environment when you switch the xorg

00:12:32,410 --> 00:12:39,129
input stack from x86 input evf synaptics

00:12:35,799 --> 00:12:41,319
to x86 input lip input we do not do

00:12:39,129 --> 00:12:45,850
backward compatibility because of this

00:12:41,319 --> 00:12:48,009
let me try to explain it the title says

00:12:45,850 --> 00:12:51,999
it pretty much the old input stuff is

00:12:48,009 --> 00:12:53,440
crazy so first of all let's say i am

00:12:51,999 --> 00:12:56,440
creating a desktop

00:12:53,440 --> 00:12:58,620
I am a globe developer rmk de developer

00:12:56,440 --> 00:13:01,270
and I want to cater to left-handed users

00:12:58,620 --> 00:13:02,890
to cater to left-handed users I need to

00:13:01,270 --> 00:13:08,260
be able to swap the left and right mouse

00:13:02,890 --> 00:13:10,930
buttons so how do i do that i make a

00:13:08,260 --> 00:13:13,060
call to the x server not to the mouse

00:13:10,930 --> 00:13:15,520
driver not to the touchpad driver I make

00:13:13,060 --> 00:13:18,900
a call to the xserver and that will swap

00:13:15,520 --> 00:13:23,100
all the left and right button events all

00:13:18,900 --> 00:13:27,430
of them at the server level no exception

00:13:23,100 --> 00:13:30,970
but what if I have enabled top to click

00:13:27,430 --> 00:13:34,000
on my touchpad then the synaptics driver

00:13:30,970 --> 00:13:37,090
will emulate a left button click for a

00:13:34,000 --> 00:13:38,590
single finger tap and if I now do a

00:13:37,090 --> 00:13:41,110
single finger tap and I've said that I'm

00:13:38,590 --> 00:13:42,640
left-handed the left button click gets

00:13:41,110 --> 00:13:46,330
converted by the server to the right

00:13:42,640 --> 00:13:48,490
button click our dignity helper cells we

00:13:46,330 --> 00:13:50,260
can fix that we will reprogram the

00:13:48,490 --> 00:13:52,420
synaptics driver to send a right click

00:13:50,260 --> 00:13:59,460
on a single top and left click on a

00:13:52,420 --> 00:14:01,720
double tap to finger tab which is crazy

00:13:59,460 --> 00:14:04,840
this is typically something which should

00:14:01,720 --> 00:14:06,910
be fixed at the input driver level right

00:14:04,840 --> 00:14:08,410
you can just say configure the touch pad

00:14:06,910 --> 00:14:10,390
for left handedness and the input driver

00:14:08,410 --> 00:14:12,580
will know that it needs to swap the

00:14:10,390 --> 00:14:19,420
buttons but that it doesn't need to swap

00:14:12,580 --> 00:14:21,730
whatever events come out of tapping so

00:14:19,420 --> 00:14:23,590
as I said before the old ways crazy it's

00:14:21,730 --> 00:14:26,470
too crazy it also doesn't allow things

00:14:23,590 --> 00:14:28,750
like having per-device speeds which we

00:14:26,470 --> 00:14:30,790
want we want to want to be able to say I

00:14:28,750 --> 00:14:32,620
don't like it when my track point is

00:14:30,790 --> 00:14:35,890
fast what I do like it when my external

00:14:32,620 --> 00:14:37,780
mouse is fast or vice versa you cannot

00:14:35,890 --> 00:14:41,980
do that an X you have one setting for

00:14:37,780 --> 00:14:43,930
the speed for all pointer devices so X

00:14:41,980 --> 00:14:45,850
f-86 lip input is not backward

00:14:43,930 --> 00:14:47,500
compatible we have a new clean conflict

00:14:45,850 --> 00:14:50,320
interface using example device

00:14:47,500 --> 00:14:51,970
properties and the idea for desktop

00:14:50,320 --> 00:14:54,339
environments is that they need to adjust

00:14:51,970 --> 00:14:56,020
their configuration panels or whatever

00:14:54,339 --> 00:14:57,550
software applies it it could be the

00:14:56,020 --> 00:15:00,400
global settings even for example for

00:14:57,550 --> 00:15:02,530
gnome to work with these new properties

00:15:00,400 --> 00:15:04,900
and to notch thought not touch the old

00:15:02,530 --> 00:15:06,070
stuff because if you do the old

00:15:04,900 --> 00:15:08,620
left-handed buttons

00:15:06,070 --> 00:15:10,180
weapon that will still impacts clip

00:15:08,620 --> 00:15:11,410
input because that's done at server

00:15:10,180 --> 00:15:17,800
level and there's nothing we can do to

00:15:11,410 --> 00:15:19,750
stop it we would like to see desktop

00:15:17,800 --> 00:15:22,060
environments okay the economics fce

00:15:19,750 --> 00:15:26,560
whatever to detect which input stack is

00:15:22,060 --> 00:15:28,870
actually being used and to dynamically

00:15:26,560 --> 00:15:33,310
adjust so that people for a while can

00:15:28,870 --> 00:15:36,340
run whatever stack they want for the new

00:15:33,310 --> 00:15:38,620
stack if the new stack is active is x86

00:15:36,340 --> 00:15:40,660
input lip input is used you should not

00:15:38,620 --> 00:15:43,300
use any of the core X interfaces because

00:15:40,660 --> 00:15:45,310
those apply to all devices and we do not

00:15:43,300 --> 00:15:49,390
want us and all events including the tap

00:15:45,310 --> 00:15:56,520
generated events etc instead always use

00:15:49,390 --> 00:16:00,310
only the new device properties so I am

00:15:56,520 --> 00:16:03,880
actually running all the new stuff on

00:16:00,310 --> 00:16:08,500
this laptop and I can do something like

00:16:03,880 --> 00:16:09,670
X input list and then let's take an

00:16:08,500 --> 00:16:13,020
interesting thing like steaks the

00:16:09,670 --> 00:16:13,020
touchpad which is number 12

00:16:15,880 --> 00:16:21,060
and over here I get to see all the lip

00:16:18,610 --> 00:16:24,400
input configuration settings for my

00:16:21,060 --> 00:16:26,350
touchpad one thing interesting is that

00:16:24,400 --> 00:16:28,810
for some things we have both available

00:16:26,350 --> 00:16:30,190
and enabled those are erase you need to

00:16:28,810 --> 00:16:33,640
actually look into the header found what

00:16:30,190 --> 00:16:37,780
they mean for example you see that on

00:16:33,640 --> 00:16:39,370
this touchpad I can do two-finger

00:16:37,780 --> 00:16:41,770
scrolling and edge scrolling but not

00:16:39,370 --> 00:16:43,720
buttons growing button scrolling is

00:16:41,770 --> 00:16:48,460
something with which we actually that's

00:16:43,720 --> 00:16:52,180
also a nice one thing which we do is the

00:16:48,460 --> 00:16:54,310
default this one so this is the default

00:16:52,180 --> 00:16:55,930
setting and it says that on my touch pad

00:16:54,310 --> 00:16:57,850
two finger scrolling is the default

00:16:55,930 --> 00:17:00,310
because it's a multi-touch touchpad if

00:16:57,850 --> 00:17:02,560
it were a single touch touch pad then

00:17:00,310 --> 00:17:04,209
this one would be zero right two finger

00:17:02,560 --> 00:17:06,069
scrolling is not available single touch

00:17:04,209 --> 00:17:08,760
touch pad and the default would be at

00:17:06,069 --> 00:17:08,760
scrolling

00:17:12,600 --> 00:17:17,650
the commands yes sure so X input list

00:17:15,550 --> 00:17:19,480
just gives you a device a list of which

00:17:17,650 --> 00:17:22,780
devices you have available at the X

00:17:19,480 --> 00:17:25,209
input to level and then there are IDs or

00:17:22,780 --> 00:17:27,699
you can use the name with ID is easier

00:17:25,209 --> 00:17:29,410
to type and then you do list props and

00:17:27,699 --> 00:17:36,010
then in this case I take number 12 which

00:17:29,410 --> 00:17:37,780
is my touchpad and yeah then we see this

00:17:36,010 --> 00:17:39,010
as I was saying before the interesting

00:17:37,780 --> 00:17:41,290
thing is that we give everything is

00:17:39,010 --> 00:17:42,820
saying default and for example what we

00:17:41,290 --> 00:17:44,880
are currently doing is we are even

00:17:42,820 --> 00:17:47,140
making life easier for trackball users

00:17:44,880 --> 00:17:50,170
trackballs usually do not have a scroll

00:17:47,140 --> 00:17:52,440
wheel trackball users like to use button

00:17:50,170 --> 00:17:55,000
scrolling the same as trackpoint users

00:17:52,440 --> 00:17:57,310
so if we see that the device doesn't

00:17:55,000 --> 00:17:59,770
have any way of sending scroll events we

00:17:57,310 --> 00:18:02,680
by default and Abel mitten but middle

00:17:59,770 --> 00:18:03,910
button scrolling if you have a track

00:18:02,680 --> 00:18:05,500
point and you don't like middle button

00:18:03,910 --> 00:18:07,870
scrolling because you use middle point

00:18:05,500 --> 00:18:10,930
middle button drag and drop for example

00:18:07,870 --> 00:18:12,910
in inkscape you can also reconfigure it

00:18:10,930 --> 00:18:14,620
to a different button and this one

00:18:12,910 --> 00:18:16,900
doesn't show it because on a touchpad we

00:18:14,620 --> 00:18:18,310
don't support button scrolling but if

00:18:16,900 --> 00:18:25,480
you have a device which supports button

00:18:18,310 --> 00:18:30,940
scrolling like the trackpoint track

00:18:25,480 --> 00:18:33,060
point is number 30 I shouldn't call the

00:18:30,940 --> 00:18:35,980
track point because it's a trademark

00:18:33,060 --> 00:18:40,030
anyway and it's not an IBM laptop or a

00:18:35,980 --> 00:18:41,890
lenovo laptop so over here you see that

00:18:40,030 --> 00:18:43,630
scroll metals available are only the

00:18:41,890 --> 00:18:45,100
last option which is called button

00:18:43,630 --> 00:18:46,630
scrolling which means that you hold down

00:18:45,100 --> 00:18:50,980
the button and then your excess movement

00:18:46,630 --> 00:18:52,570
becomes scroll events by default button

00:18:50,980 --> 00:18:57,120
scrolling is an able to the track point

00:18:52,570 --> 00:19:00,400
and by default it is using button number

00:18:57,120 --> 00:19:03,910
there is a back there this is supposed

00:19:00,400 --> 00:19:08,410
to match up it's using batting number

00:19:03,910 --> 00:19:10,420
two is the middle button somehow well I

00:19:08,410 --> 00:19:13,300
need to talk to Peter about this this is

00:19:10,420 --> 00:19:15,430
not working as its supposed to oh right

00:19:13,300 --> 00:19:17,470
right now it's no the default is weird

00:19:15,430 --> 00:19:19,440
this is where this is correct this is

00:19:17,470 --> 00:19:22,290
just a property number they're just all

00:19:19,440 --> 00:19:26,530
coming higher

00:19:22,290 --> 00:19:28,810
but so by default i can click my middle

00:19:26,530 --> 00:19:37,990
button and then i can scroll in here

00:19:28,810 --> 00:19:40,060
with the weight my track point which is

00:19:37,990 --> 00:19:41,800
nice and we do the same for track balls

00:19:40,060 --> 00:19:43,650
now it was a large complained of

00:19:41,800 --> 00:19:45,550
trackballs users like we cannot scroll

00:19:43,650 --> 00:19:47,320
and when they could do things with

00:19:45,550 --> 00:19:48,970
manually creating an evf conference at

00:19:47,320 --> 00:19:50,980
around now we just say oh we see you

00:19:48,970 --> 00:19:52,360
have a mouse which it actually will also

00:19:50,980 --> 00:19:54,040
work if you have a really old three

00:19:52,360 --> 00:19:56,050
button eyes which doesn't have a wheel

00:19:54,040 --> 00:19:57,820
upon us really old ones which acts as a

00:19:56,050 --> 00:19:59,740
proper middle button so you can be dope

00:19:57,820 --> 00:20:01,510
aced properly you can also just keep it

00:19:59,740 --> 00:20:03,880
down scroll around and if you do not

00:20:01,510 --> 00:20:05,230
like it you can turn it off and on the

00:20:03,880 --> 00:20:06,730
trackball if you do not like it then you

00:20:05,230 --> 00:20:08,050
have extra buttons because trackballs

00:20:06,730 --> 00:20:12,000
often have more than three buttons you

00:20:08,050 --> 00:20:12,000
can also put it on another button

00:20:16,940 --> 00:20:26,870
and I scroll here so I made a mess so

00:20:23,810 --> 00:20:30,320
before I go on is it clear to everyone

00:20:26,870 --> 00:20:33,530
what lip input is and what the uses of

00:20:30,320 --> 00:20:35,330
switching even for even though it was

00:20:33,530 --> 00:20:37,100
originally designed for whaling to

00:20:35,330 --> 00:20:39,890
switch the input stack under X or to

00:20:37,100 --> 00:20:44,780
using lip input no questions till this

00:20:39,890 --> 00:20:47,390
point or about the properties interface

00:20:44,780 --> 00:20:50,090
and how we try to put same defaults on

00:20:47,390 --> 00:20:52,250
everything and we hope other people

00:20:50,090 --> 00:20:56,210
agree that what we think is saying is

00:20:52,250 --> 00:20:58,160
saying pointer acceleration under

00:20:56,210 --> 00:21:01,100
acceleration is actually pretty hard to

00:20:58,160 --> 00:21:04,550
get right and so far under linux we suck

00:21:01,100 --> 00:21:07,360
at it one reason we suck at it is that

00:21:04,550 --> 00:21:09,860
not all devices are created equal I

00:21:07,360 --> 00:21:11,750
recently actually been working on

00:21:09,860 --> 00:21:15,110
pointer acceleration for track points

00:21:11,750 --> 00:21:16,850
and it really isn't funny some some

00:21:15,110 --> 00:21:20,270
lenovo laptops the track points

00:21:16,850 --> 00:21:23,060
depending on if you push normal softish

00:21:20,270 --> 00:21:26,120
or normal hardish they send deltas of

00:21:23,060 --> 00:21:28,880
one or two well i have a letter to the

00:21:26,120 --> 00:21:31,490
home which when you read on it it sends

00:21:28,880 --> 00:21:34,460
deltas of one or two and if you push it

00:21:31,490 --> 00:21:39,950
normally it goes up to about 30 40 and

00:21:34,460 --> 00:21:44,510
if you push it hard it goes up to 80 so

00:21:39,950 --> 00:21:49,850
there is a huge different there and yeah

00:21:44,510 --> 00:21:52,160
I'm actually working on you def rules

00:21:49,850 --> 00:21:54,650
and hardware DB entries to actually tell

00:21:52,160 --> 00:21:56,390
lip input that this is a fast track

00:21:54,650 --> 00:21:58,250
pointer this is a slow track point so

00:21:56,390 --> 00:22:01,490
that in the end they all by default feel

00:21:58,250 --> 00:22:03,380
sort of okay ish this is very

00:22:01,490 --> 00:22:04,790
non-scientific because it's really hard

00:22:03,380 --> 00:22:07,010
to take a scientific approach to this

00:22:04,790 --> 00:22:08,960
but some are clearly too slow out of the

00:22:07,010 --> 00:22:11,990
box and storm are clearly too fast out

00:22:08,960 --> 00:22:17,900
of the box and we try to at least make

00:22:11,990 --> 00:22:20,150
that go away as I said before XF 86 does

00:22:17,900 --> 00:22:22,250
not honor global inputs heading because

00:22:20,150 --> 00:22:24,290
we want you to be able we are talking to

00:22:22,250 --> 00:22:27,260
the gnome guys now because we also

00:22:24,290 --> 00:22:29,720
export a lot of metadata and we want to

00:22:27,260 --> 00:22:30,440
be able to say to the gnome guys that

00:22:29,720 --> 00:22:33,139
you should have

00:22:30,440 --> 00:22:34,669
two sliders for Mouse beat they are

00:22:33,139 --> 00:22:36,289
three actually they already have two

00:22:34,669 --> 00:22:38,809
they already have a separate slider for

00:22:36,289 --> 00:22:40,820
touchpad speed and for Mouse Pete but

00:22:38,809 --> 00:22:41,990
what if you have a track point what have

00:22:40,820 --> 00:22:43,340
you have a laptop with the track point

00:22:41,990 --> 00:22:45,289
and you regularly you use an external

00:22:43,340 --> 00:22:47,090
mouse you may sell we want them to have

00:22:45,289 --> 00:22:49,399
three sliders one for the trackpoint one

00:22:47,090 --> 00:22:52,820
for regular mice one for the touchpad

00:22:49,399 --> 00:22:54,980
and we have so we do not on our global

00:22:52,820 --> 00:22:59,299
setting because that's pretty nice you

00:22:54,980 --> 00:23:01,039
may want to have something different one

00:22:59,299 --> 00:23:03,679
other thing which we do is all motion

00:23:01,039 --> 00:23:06,289
events coming out of mice and keyboards

00:23:03,679 --> 00:23:09,169
are our touch pads are normalized to

00:23:06,289 --> 00:23:11,120
thousands dot per per inch so if you

00:23:09,169 --> 00:23:14,929
have an old optical mouse it actually

00:23:11,120 --> 00:23:18,320
does 400 dpi so you need to move it at

00:23:14,929 --> 00:23:21,500
least 14 hundred of an inch to get a

00:23:18,320 --> 00:23:24,980
delta of one if you have a razor gaming

00:23:21,500 --> 00:23:27,529
mice it will have a dpi of 5000 so you

00:23:24,980 --> 00:23:29,690
need to move it 15 thousands of an inch

00:23:27,529 --> 00:23:32,659
to get a delta of one or we have a

00:23:29,690 --> 00:23:33,980
factor of 10 difference well people so

00:23:32,659 --> 00:23:36,559
far have been doing is if they have a

00:23:33,980 --> 00:23:38,029
caning mice they go into the input

00:23:36,559 --> 00:23:40,399
settings and they move the slider all

00:23:38,029 --> 00:23:42,350
the way to slowest and if they have an

00:23:40,399 --> 00:23:45,980
old mice with 400 dpi they move it all

00:23:42,350 --> 00:23:48,200
the way to fastest it's not really how

00:23:45,980 --> 00:23:50,000
we want things to work out of the box so

00:23:48,200 --> 00:23:52,340
we have this crazy plan that we're

00:23:50,000 --> 00:23:54,919
building a Harper TV with USB IDs and we

00:23:52,340 --> 00:23:57,710
put a mouse DPI in there so if you have

00:23:54,919 --> 00:24:01,009
mice lying at home peace with repeater

00:23:57,710 --> 00:24:03,610
hardware's block post on this and give

00:24:01,009 --> 00:24:06,230
us hardware DB entries for all your mice

00:24:03,610 --> 00:24:09,080
we actually we are defaulting to

00:24:06,230 --> 00:24:11,059
thousands because all modern affordable

00:24:09,080 --> 00:24:12,740
mice that's are just something which you

00:24:11,059 --> 00:24:16,659
will get with your dell desktop or

00:24:12,740 --> 00:24:16,659
whatever our thousand epi

00:24:20,840 --> 00:24:25,830
yeah gaming mice things like that Sam F

00:24:23,609 --> 00:24:28,349
switchable DPI to make it even funnier

00:24:25,830 --> 00:24:30,090
this is also really a shortcoming of the

00:24:28,349 --> 00:24:32,609
hits protocol alright the hit protocol

00:24:30,090 --> 00:24:36,599
doesn't give you this information you

00:24:32,609 --> 00:24:41,220
wanted to ask a question or no ok then I

00:24:36,599 --> 00:24:43,049
misunderstood your gesture so what we're

00:24:41,220 --> 00:24:44,669
trying to accomplish is that out of the

00:24:43,049 --> 00:24:46,950
box the usual can take a linux livecd

00:24:44,669 --> 00:24:50,669
throw it in and it will get a reasonable

00:24:46,950 --> 00:24:52,200
mouse speed that some users like isn't

00:24:50,669 --> 00:24:53,369
slightly slower some users like it

00:24:52,200 --> 00:24:55,769
slightly faster but it should be

00:24:53,369 --> 00:25:01,109
reasonable it should be usable out of

00:24:55,769 --> 00:25:02,960
the box so uh are there any desktop

00:25:01,109 --> 00:25:07,580
environment to developers in the room

00:25:02,960 --> 00:25:07,580
this was sort of intent for them but

00:25:07,729 --> 00:25:12,509
let's take an example of how to

00:25:09,899 --> 00:25:15,570
integrate lip input using lip input in

00:25:12,509 --> 00:25:18,419
xorg in your desktop environment brown

00:25:15,570 --> 00:25:21,059
flip not 16 the release which was

00:25:18,419 --> 00:25:25,019
recently released tested what happens is

00:25:21,059 --> 00:25:26,369
that mother they moved it from global

00:25:25,019 --> 00:25:29,789
settings demon which was a separate

00:25:26,369 --> 00:25:32,070
deeming into the genome shell which is

00:25:29,789 --> 00:25:33,779
the compositor both under Wayland's and

00:25:32,070 --> 00:25:35,570
on RX because they wanted to have the

00:25:33,779 --> 00:25:38,729
same code flow under wayland another X

00:25:35,570 --> 00:25:42,210
so matter is applying settings which its

00:25:38,729 --> 00:25:43,979
reach from G settings and then they have

00:25:42,210 --> 00:25:45,389
a back end back end to abstract the

00:25:43,979 --> 00:25:47,340
settings with mother reads and they have

00:25:45,389 --> 00:25:49,229
to back ends they have one back end

00:25:47,340 --> 00:25:50,429
which goes to the X properties which

00:25:49,229 --> 00:25:52,229
we've seen before the exam put

00:25:50,429 --> 00:25:55,859
properties and one back end which

00:25:52,229 --> 00:25:57,720
directly calls into lab input because if

00:25:55,859 --> 00:26:00,210
mother is running as a Wayland

00:25:57,720 --> 00:26:02,399
compositor it is the compositor and it

00:26:00,210 --> 00:26:04,019
is the one which actually has the live

00:26:02,399 --> 00:26:05,999
in put contacts and is linked against

00:26:04,019 --> 00:26:07,590
lip input so it doesn't need to talk to

00:26:05,999 --> 00:26:12,029
another party it can just directly call

00:26:07,590 --> 00:26:13,619
to the C library a ground control center

00:26:12,029 --> 00:26:16,440
needs to know which headings it needs to

00:26:13,619 --> 00:26:18,119
show right it makes you know control

00:26:16,440 --> 00:26:19,979
center will only update the settings in

00:26:18,119 --> 00:26:23,369
a G settings database and modern will

00:26:19,979 --> 00:26:24,989
react to those changes but the control

00:26:23,369 --> 00:26:28,500
center needs to know what it needs to

00:26:24,989 --> 00:26:31,620
show so what we're doing is

00:26:28,500 --> 00:26:33,030
a lip input you developer is used which

00:26:31,620 --> 00:26:34,950
is setting the input underscore

00:26:33,030 --> 00:26:36,780
properties on devices which will tell

00:26:34,950 --> 00:26:40,620
you like this device as described idols

00:26:36,780 --> 00:26:42,870
and things like that are not sure what

00:26:40,620 --> 00:26:44,250
to step actually with the left what how

00:26:42,870 --> 00:26:45,780
far away are the less plan the plan is

00:26:44,250 --> 00:26:47,970
to make that do develop our part of lip

00:26:45,780 --> 00:26:49,530
input upstream so that all desktop

00:26:47,970 --> 00:26:51,300
environments can use the same help or

00:26:49,530 --> 00:26:54,570
and can figure out through you def of

00:26:51,300 --> 00:26:57,750
the device which properties it has which

00:26:54,570 --> 00:27:01,020
configurable settings it has what are

00:26:57,750 --> 00:27:03,870
our future plans a follower 22 will be

00:27:01,020 --> 00:27:05,850
released soon it will have x86 input

00:27:03,870 --> 00:27:07,740
type input as default it's actually

00:27:05,850 --> 00:27:10,410
working pretty well we're still getting

00:27:07,740 --> 00:27:12,180
bucks for corner cases there is an

00:27:10,410 --> 00:27:14,340
amazing amount of corner cases in input

00:27:12,180 --> 00:27:16,860
length human input but we're we're

00:27:14,340 --> 00:27:19,230
slowly we are keeping up with the bucs

00:27:16,860 --> 00:27:23,310
we were able to come up with proper

00:27:19,230 --> 00:27:25,560
generate fixes for most of them and X

00:27:23,310 --> 00:27:27,570
orc server one point 17 the latest

00:27:25,560 --> 00:27:29,490
release of the exhort server comes with

00:27:27,570 --> 00:27:32,400
a mode setting video driver integrated

00:27:29,490 --> 00:27:34,260
we want for the upcoming one point 18

00:27:32,400 --> 00:27:36,450
release 2 also in create a lip input

00:27:34,260 --> 00:27:40,320
driver so that you can just built its

00:27:36,450 --> 00:27:42,660
orc from get the server run it and it

00:27:40,320 --> 00:27:44,280
will work I did want to accelerated

00:27:42,660 --> 00:27:45,780
video it will do drawing tablets because

00:27:44,280 --> 00:27:47,430
we don't have support for Wacom tablets

00:27:45,780 --> 00:27:51,780
yet in the pimple they'll still need the

00:27:47,430 --> 00:27:53,040
old x86 input wakeham driver but it will

00:27:51,780 --> 00:27:54,420
just work it will give you a keyboard

00:27:53,040 --> 00:27:55,560
and a mouse we will get you to do the

00:27:54,420 --> 00:27:57,570
graphics to the most heading driver

00:27:55,560 --> 00:27:59,010
which we think will be nice for people

00:27:57,570 --> 00:28:01,380
developing on the x server and things

00:27:59,010 --> 00:28:03,240
like that and we would like to advise

00:28:01,380 --> 00:28:04,680
all linux distros which is why as a

00:28:03,240 --> 00:28:08,310
redhead or i came to this user

00:28:04,680 --> 00:28:09,780
conference to switch to using x86 input

00:28:08,310 --> 00:28:11,190
leap input in the future because that's

00:28:09,780 --> 00:28:13,290
where we believe the future is and

00:28:11,190 --> 00:28:15,780
desktop environments should get ready to

00:28:13,290 --> 00:28:18,210
switch actually KDE already is ready to

00:28:15,780 --> 00:28:20,820
switch we have X F fitty patches pending

00:28:18,210 --> 00:28:22,440
glow is already over so most the desktop

00:28:20,820 --> 00:28:24,060
environments are ready to just throw the

00:28:22,440 --> 00:28:26,580
switch for this and you will get a lot

00:28:24,060 --> 00:28:32,000
better and user experience if you make

00:28:26,580 --> 00:28:32,000
this move in Suzie so questions

00:28:37,670 --> 00:28:41,050
no questions whatsoever

00:28:51,710 --> 00:28:56,169
notice synaptics driver has broken by

00:28:53,899 --> 00:28:56,169
design

00:28:57,980 --> 00:29:05,010
they f'd of Colonel interface the

00:29:02,520 --> 00:29:08,670
question was that I said that some stuff

00:29:05,010 --> 00:29:10,740
was broken by design and the he

00:29:08,670 --> 00:29:12,030
interpreted that as the EDF Colonel

00:29:10,740 --> 00:29:22,380
interface node if he'd have Colonel

00:29:12,030 --> 00:29:25,020
interface is fine no do you want to put

00:29:22,380 --> 00:29:36,060
a database with all the USP IDs of mice

00:29:25,020 --> 00:29:38,130
and their DPI inside the colonel when

00:29:36,060 --> 00:29:40,980
you're welcome to but I don't think of

00:29:38,130 --> 00:29:44,940
three main tangle who are accepted any

00:29:40,980 --> 00:29:47,190
more questions on um before I let you go

00:29:44,940 --> 00:29:48,870
I want to make a little bit of

00:29:47,190 --> 00:29:51,090
advertising for the local hackerspace as

00:29:48,870 --> 00:29:52,380
I did in my previous talk further people

00:29:51,090 --> 00:29:57,090
who are sitting here a second time as

00:29:52,380 --> 00:29:58,830
well this ket official schedule and seen

00:29:57,090 --> 00:30:00,060
30 minutes not sure if there's anything

00:29:58,830 --> 00:30:02,220
planned from the conference after this

00:30:00,060 --> 00:30:03,690
if there's not you're welcome at the

00:30:02,220 --> 00:30:05,370
local hackerspace it's ten minutes

00:30:03,690 --> 00:30:07,590
walking from here it's a nice

00:30:05,370 --> 00:30:09,450
hackerspace will we have drinks there in

00:30:07,590 --> 00:30:10,620
the fridge they're not free by the way

00:30:09,450 --> 00:30:13,350
you need to pay for them but they're

00:30:10,620 --> 00:30:14,460
cheap we can arrange some food if people

00:30:13,350 --> 00:30:15,840
want to hack at the space and they want

00:30:14,460 --> 00:30:17,280
something to eat we can order pizza or

00:30:15,840 --> 00:30:19,080
whatever we'll see depending on how many

00:30:17,280 --> 00:30:20,700
people come but i would like to invite

00:30:19,080 --> 00:30:22,850
everyone who thinks it's cool to visit

00:30:20,700 --> 00:30:25,410
the local hyperspace and come around and

00:30:22,850 --> 00:30:27,870
I even have a map for you hear how you

00:30:25,410 --> 00:30:31,830
should walk we are here now and you'll

00:30:27,870 --> 00:30:35,520
walk to the river or a river and then

00:30:31,830 --> 00:30:37,710
you go this is the highway and this is

00:30:35,520 --> 00:30:42,030
the railroad and then its use this road

00:30:37,710 --> 00:30:44,690
and we're over there yeah that's not

00:30:42,030 --> 00:30:44,690
what I wanted

00:30:45,779 --> 00:30:52,229
it's also not what I wanted allo it's a

00:30:49,109 --> 00:31:02,009
number 5 D and it's a doorbell number

00:30:52,229 --> 00:31:03,840
toward dirty this work nope a low or you

00:31:02,009 --> 00:31:06,629
can just to walk with me I'm going there

00:31:03,840 --> 00:31:09,299
now so is this was what I was looking

00:31:06,629 --> 00:31:12,029
for so spore line five that this is to

00:31:09,299 --> 00:31:16,049
the house number and then we have door

00:31:12,029 --> 00:31:17,729
doorbell member 30 but it's also there's

00:31:16,049 --> 00:31:21,149
a list with organizations which were in

00:31:17,729 --> 00:31:22,379
the building so we're all welcome to

00:31:21,149 --> 00:31:24,059
join us and if you're curious you can

00:31:22,379 --> 00:31:27,889
also take a business card over here from

00:31:24,059 --> 00:31:27,889
the hackerspace and thanks for your time

00:31:31,480 --> 00:31:33,540

YouTube URL: https://www.youtube.com/watch?v=-iqAVy-CtsE


