Title: OSC15 - Georgi Kodinov - Secure Deployment Changes Coming in MySQL 5.7
Publication date: 2015-05-04
Playlist: openSUSE Conference 2015
Description: 
	In this talk will go through an overview of the recent trends in securely deploying a MySQL server.
Then we will examine the new 5.7 developments that facilitate more secure MySQL installations by default.
For each new development we will outline the problem being solved, the solution proposed and how does it fit into the general vision of MySQL server security.
We will also examine the changes done to the RPM packages, the directory layout and the permissions of the files installed.
We will compare this with the 5.6 installation and examine how it can be fixed in it too.
Captions: 
	00:00:00,000 --> 00:00:06,330
cause the hour so that's one possession

00:00:02,520 --> 00:00:09,389
start my name is Georgia Colleen okay

00:00:06,330 --> 00:00:13,440
I'm going to speak about secure

00:00:09,389 --> 00:00:17,430
deployment changes in Moscow 57 so my

00:00:13,440 --> 00:00:19,980
rescue 57 is our current development

00:00:17,430 --> 00:00:25,260
release we are looking to release it to

00:00:19,980 --> 00:00:28,260
general public pretty soon so it may be

00:00:25,260 --> 00:00:30,929
relevant to some future versions of open

00:00:28,260 --> 00:00:36,510
shoes and while working with mascara in

00:00:30,929 --> 00:00:38,730
general so little bit about me I don't

00:00:36,510 --> 00:00:41,760
those of you that haven't been seen the

00:00:38,730 --> 00:00:46,379
last two opens his conferences I'm a

00:00:41,760 --> 00:00:48,450
formal banking IT manager i switch to

00:00:46,379 --> 00:00:51,239
programming quite some time and go and

00:00:48,450 --> 00:00:54,210
then currently well i joined my damask

00:00:51,239 --> 00:00:58,800
your team in 2006 when it was a little

00:00:54,210 --> 00:01:00,899
Swedish company now I'm leading the

00:00:58,800 --> 00:01:05,939
muscular server general development team

00:01:00,899 --> 00:01:10,400
and I enjoy speaking to people so I

00:01:05,939 --> 00:01:14,939
visit some of the mask yo conferences

00:01:10,400 --> 00:01:18,540
what we do in this team is security and

00:01:14,939 --> 00:01:21,270
monitoring and partly the client-server

00:01:18,540 --> 00:01:28,259
protocol so security is kind of my

00:01:21,270 --> 00:01:31,860
speciality mask yo ok so the agenda is

00:01:28,259 --> 00:01:34,290
pretty simple I will demonstrate the

00:01:31,860 --> 00:01:38,070
kind of the recent thinking that we have

00:01:34,290 --> 00:01:41,159
around mask of deployment and what it

00:01:38,070 --> 00:01:43,470
means that it is secure and then I will

00:01:41,159 --> 00:01:48,630
try to enumerate some of the changes

00:01:43,470 --> 00:01:51,600
that we did to support that so can you

00:01:48,630 --> 00:01:54,210
please raise your hand if you ever

00:01:51,600 --> 00:01:57,780
install the mysql server on your own

00:01:54,210 --> 00:02:03,060
without the in without the help of the

00:01:57,780 --> 00:02:08,819
distribution nobody ok

00:02:03,060 --> 00:02:10,770
thank you so I will not going to go in a

00:02:08,819 --> 00:02:16,560
lot of technical details than just the

00:02:10,770 --> 00:02:20,700
basics recent trancing secure muscular

00:02:16,560 --> 00:02:24,209
deployment so first we try to make the

00:02:20,700 --> 00:02:29,099
server secure by default the muscular

00:02:24,209 --> 00:02:32,300
server was this developer toe in / tool

00:02:29,099 --> 00:02:35,880
that was installed in such a way that

00:02:32,300 --> 00:02:40,010
anybody can actually well start talking

00:02:35,880 --> 00:02:44,400
with it immediately and without any

00:02:40,010 --> 00:02:47,069
restriction whatsoever this obviously is

00:02:44,400 --> 00:02:50,519
not a very good ideas the previous

00:02:47,069 --> 00:02:53,459
speaker mentioned a good software should

00:02:50,519 --> 00:02:57,599
only do whatever it is intended and no

00:02:53,459 --> 00:03:01,220
more than that so we are looking to help

00:02:57,599 --> 00:03:04,110
the novice user so basically when you

00:03:01,220 --> 00:03:06,510
install a mask your server you won't

00:03:04,110 --> 00:03:09,840
make the common mistakes that will put

00:03:06,510 --> 00:03:12,690
you in the registry of widely open mask

00:03:09,840 --> 00:03:16,680
you'll instance is available over the

00:03:12,690 --> 00:03:21,980
net there is the registry in the dark

00:03:16,680 --> 00:03:26,790
what it is pretty extensive and also

00:03:21,980 --> 00:03:29,040
people when they want to remove some of

00:03:26,790 --> 00:03:32,730
the security constraints constraints

00:03:29,040 --> 00:03:34,859
they need to do so explicitly this will

00:03:32,730 --> 00:03:37,319
give you a good understanding because

00:03:34,859 --> 00:03:39,150
whenever you well change the

00:03:37,319 --> 00:03:40,950
configuration this means that at least

00:03:39,150 --> 00:03:43,350
you know that there is such a

00:03:40,950 --> 00:03:46,700
configuration and what it does so it

00:03:43,350 --> 00:03:50,209
will kind of gradually increase your

00:03:46,700 --> 00:03:54,440
secure web security awareness when you

00:03:50,209 --> 00:03:58,829
get to edit the configuration yourself

00:03:54,440 --> 00:04:06,120
so that's what we want to do and why we

00:03:58,829 --> 00:04:08,160
want to do it so here's how mask you'll

00:04:06,120 --> 00:04:10,620
see cure installation was a tool that

00:04:08,160 --> 00:04:12,780
you are supposed to run after you

00:04:10,620 --> 00:04:16,739
install your server and before going

00:04:12,780 --> 00:04:19,500
into production we are aiming to remove

00:04:16,739 --> 00:04:23,039
the additional steps so no more needing

00:04:19,500 --> 00:04:25,530
to do something extra when you want to

00:04:23,039 --> 00:04:29,220
secure yourself if we want it to be

00:04:25,530 --> 00:04:33,450
secured by default we also aim to

00:04:29,220 --> 00:04:35,909
providing a single account inside the

00:04:33,450 --> 00:04:39,240
databases that we create with the random

00:04:35,909 --> 00:04:41,400
and password that is marked as expired

00:04:39,240 --> 00:04:45,060
so you need to change it in at the next

00:04:41,400 --> 00:04:47,430
login this is a great deviation from

00:04:45,060 --> 00:04:51,419
what we have now in say five six for

00:04:47,430 --> 00:04:54,060
example where you get like a number of

00:04:51,419 --> 00:04:56,820
 root accounts some test account

00:04:54,060 --> 00:04:59,550
too and all these additional facilities

00:04:56,820 --> 00:05:02,219
that would make your developers life

00:04:59,550 --> 00:05:08,310
easier but we'll leave the server wide

00:05:02,219 --> 00:05:11,190
open basically we also aim to enforce

00:05:08,310 --> 00:05:14,280
password strength by default we have a

00:05:11,190 --> 00:05:16,830
special to now in the server to actually

00:05:14,280 --> 00:05:20,870
verify a password policy but if you're

00:05:16,830 --> 00:05:24,900
choosing and we've chosen a common one

00:05:20,870 --> 00:05:28,770
that can include verifying passwords

00:05:24,900 --> 00:05:35,340
again dictionaries so you avoid common

00:05:28,770 --> 00:05:38,250
passwords and also we try to put SSL in

00:05:35,340 --> 00:05:41,370
good use whenever is possible so you

00:05:38,250 --> 00:05:44,550
need a special reason to disable ssl now

00:05:41,370 --> 00:05:47,669
which is a bit of a departure from what

00:05:44,550 --> 00:05:51,270
we used to do basically we were letting

00:05:47,669 --> 00:05:57,030
SSL as an option for those that need it

00:05:51,270 --> 00:05:59,159
and well obviously people not realizing

00:05:57,030 --> 00:06:01,919
that they need it were just leaving it

00:05:59,159 --> 00:06:05,729
out and generating an encrypted traffic

00:06:01,919 --> 00:06:08,930
over the network so we aim at helping

00:06:05,729 --> 00:06:11,729
people to run ssl with the mask yo

00:06:08,930 --> 00:06:13,560
client-server protocol it has that

00:06:11,729 --> 00:06:14,490
option built in so you don't need

00:06:13,560 --> 00:06:19,310
additional to

00:06:14,490 --> 00:06:23,849
to encrypt your traffic and we also

00:06:19,310 --> 00:06:26,099
provides cell science key material if

00:06:23,849 --> 00:06:28,889
you need it and that is generated on

00:06:26,099 --> 00:06:31,530
each computer it's not prepackaged so

00:06:28,889 --> 00:06:33,750
there's no default certificate rocky or

00:06:31,530 --> 00:06:38,759
whatever its generated rather right on

00:06:33,750 --> 00:06:43,110
the spot and we also want to control

00:06:38,759 --> 00:06:45,509
some popular mistakes in the MySQL

00:06:43,110 --> 00:06:48,150
installation so for example the mask yo

00:06:45,509 --> 00:06:51,630
server was configured in such a way that

00:06:48,150 --> 00:06:54,840
using a single sqlcommand you can write

00:06:51,630 --> 00:06:56,930
the file to the file system anywhere

00:06:54,840 --> 00:07:00,680
where the operating system would allow

00:06:56,930 --> 00:07:06,360
no restriction whatsoever that was well

00:07:00,680 --> 00:07:08,430
not a good idea so now this is we have

00:07:06,360 --> 00:07:11,190
cat of course an option to disable that

00:07:08,430 --> 00:07:13,979
but that option was not turned by on by

00:07:11,190 --> 00:07:16,110
default and that was causing problems

00:07:13,979 --> 00:07:18,690
with the default installation so that's

00:07:16,110 --> 00:07:23,729
fixed now and really happy to say that

00:07:18,690 --> 00:07:26,810
it is fixed in 57 and we also have the

00:07:23,729 --> 00:07:30,780
notion of development and production

00:07:26,810 --> 00:07:33,659
installations and packages we harden the

00:07:30,780 --> 00:07:36,150
most popular packages like the RPM

00:07:33,659 --> 00:07:39,210
packages the deviant packages all these

00:07:36,150 --> 00:07:42,389
packages that people know vice users

00:07:39,210 --> 00:07:45,840
will probably use and we leave the

00:07:42,389 --> 00:07:50,520
specialist packages like the tar.gz for

00:07:45,840 --> 00:07:52,830
example to people that will want to play

00:07:50,520 --> 00:07:55,400
with them so we call this development

00:07:52,830 --> 00:07:55,400
packages

00:07:55,630 --> 00:08:02,740
I mentioned already that we packaged

00:07:59,680 --> 00:08:05,410
stuff in a secure way so we are careful

00:08:02,740 --> 00:08:07,930
with how we use so as permission some

00:08:05,410 --> 00:08:10,830
accounts we of course the server would

00:08:07,930 --> 00:08:14,380
create the user account for it to Rama's

00:08:10,830 --> 00:08:16,030
but this user account now will basically

00:08:14,380 --> 00:08:18,550
reviewed all the files in the

00:08:16,030 --> 00:08:21,640
installation and made sure that you get

00:08:18,550 --> 00:08:26,020
no extra privileges on each on any of

00:08:21,640 --> 00:08:28,210
those files to this new OS account that

00:08:26,020 --> 00:08:32,440
is needed or to any of the existing

00:08:28,210 --> 00:08:35,650
plans we also removed all the demo and

00:08:32,440 --> 00:08:37,599
test an example files before that well

00:08:35,650 --> 00:08:40,900
basically mask you came as a single

00:08:37,599 --> 00:08:43,419
package and it contains test definitions

00:08:40,900 --> 00:08:46,420
for you to run your tests and it also

00:08:43,419 --> 00:08:49,360
contained demonstration databases and

00:08:46,420 --> 00:08:53,860
especially but it contained a lot of

00:08:49,360 --> 00:08:57,850
tests plug-ins for authentication so if

00:08:53,860 --> 00:09:01,870
you have some carol SQL privilege axis

00:08:57,850 --> 00:09:03,490
you can change the authentication metal

00:09:01,870 --> 00:09:05,770
to something that is not really

00:09:03,490 --> 00:09:10,300
authentication and in person a pretty

00:09:05,770 --> 00:09:13,150
much any user of the MySQL server so

00:09:10,300 --> 00:09:15,820
that's not possible anymore we keep them

00:09:13,150 --> 00:09:18,400
in a separate package so if you need to

00:09:15,820 --> 00:09:21,130
run tests you install the traditional

00:09:18,400 --> 00:09:23,020
package and you run your tests but then

00:09:21,130 --> 00:09:28,869
you know that you have test material

00:09:23,020 --> 00:09:34,189
installed right

00:09:28,869 --> 00:09:36,379
okay so individual changes in 57 again

00:09:34,189 --> 00:09:39,079
the biggest change that you will

00:09:36,379 --> 00:09:42,379
encounter when you install the server is

00:09:39,079 --> 00:09:46,279
that it will just have a single user

00:09:42,379 --> 00:09:48,829
account installed into it it's it's

00:09:46,279 --> 00:09:51,230
fully implemented in the first to

00:09:48,829 --> 00:09:57,579
release candidate a 57 that was released

00:09:51,230 --> 00:10:01,999
some few months ago and there is no more

00:09:57,579 --> 00:10:05,329
multiple root accounts because the

00:10:01,999 --> 00:10:09,859
server supports one authentication when

00:10:05,329 --> 00:10:12,799
you basically want to turn on off host

00:10:09,859 --> 00:10:16,759
name resolution in use IP addresses and

00:10:12,799 --> 00:10:22,009
we were catering for that special mode

00:10:16,759 --> 00:10:25,629
by just installing one account with an

00:10:22,009 --> 00:10:28,999
IP number instead of a cross name and

00:10:25,629 --> 00:10:31,999
that is not needed by the majority of

00:10:28,999 --> 00:10:35,959
our users because they keep host name

00:10:31,999 --> 00:10:38,029
resolution on by default and this was

00:10:35,959 --> 00:10:40,850
creating a back door in a way because

00:10:38,029 --> 00:10:43,279
people were maintaining their route that

00:10:40,850 --> 00:10:49,999
local host for example but they would

00:10:43,279 --> 00:10:52,160
just forget about root of 127 001 so

00:10:49,999 --> 00:10:54,679
that can stay without the password that

00:10:52,160 --> 00:10:56,779
can stay with an old password with a

00:10:54,679 --> 00:11:02,720
weak password whatever and it's a great

00:10:56,779 --> 00:11:07,160
back door if you can get to it as I

00:11:02,720 --> 00:11:09,619
mentioned we introduced out to the auto

00:11:07,160 --> 00:11:15,110
generation and expiration of passwords

00:11:09,619 --> 00:11:17,809
in 57 so now we have a way that to

00:11:15,110 --> 00:11:20,809
automatically expire your password where

00:11:17,809 --> 00:11:24,169
global policy or individually expire

00:11:20,809 --> 00:11:28,669
each individual user password and then

00:11:24,169 --> 00:11:33,080
we are making good use of that of the

00:11:28,669 --> 00:11:35,300
possibility by marking the root account

00:11:33,080 --> 00:11:37,940
root account password that we generate

00:11:35,300 --> 00:11:39,950
during the installation has expired so

00:11:37,940 --> 00:11:43,580
basically the first time you log into

00:11:39,950 --> 00:11:45,590
your database it will let you in but the

00:11:43,580 --> 00:11:48,980
only comment that you will be able to

00:11:45,590 --> 00:11:53,840
execute this set password and then it

00:11:48,980 --> 00:11:57,830
will open itself so that's how passport

00:11:53,840 --> 00:11:59,930
expiration works with mass killer we are

00:11:57,830 --> 00:12:02,540
also looking into using password less

00:11:59,930 --> 00:12:05,390
authentication so for example on Linux

00:12:02,540 --> 00:12:09,440
there is this great way of actually

00:12:05,390 --> 00:12:11,900
using the socket connection to identify

00:12:09,440 --> 00:12:14,150
the OS account that's connecting to it

00:12:11,900 --> 00:12:17,570
and that requires no password because

00:12:14,150 --> 00:12:19,430
you always get the username I've called

00:12:17,570 --> 00:12:24,830
the connecting user from our secure

00:12:19,430 --> 00:12:28,540
source so we can use leverage we can

00:12:24,830 --> 00:12:31,600
leverage that through the mask you

00:12:28,540 --> 00:12:34,430
pluggable authentication modules and

00:12:31,600 --> 00:12:40,160
just not even need a password when you

00:12:34,430 --> 00:12:43,630
install it okay and for your information

00:12:40,160 --> 00:12:46,970
since the the RPM installers are not

00:12:43,630 --> 00:12:50,360
interactive I as far as I know we also

00:12:46,970 --> 00:12:53,600
have the installers that are actually

00:12:50,360 --> 00:12:57,740
ask for a password because typically

00:12:53,600 --> 00:13:01,280
well with the rtn installation you are

00:12:57,740 --> 00:13:03,560
so supposed to not provide any options

00:13:01,280 --> 00:13:06,050
to it so you just need to run it and

00:13:03,560 --> 00:13:10,090
then do something else for the

00:13:06,050 --> 00:13:10,090
interactive purpose but as denim

00:13:11,560 --> 00:13:19,270
okay so as a cell encryption it's fully

00:13:16,840 --> 00:13:22,900
implemented again in this release

00:13:19,270 --> 00:13:26,050
candidate at 57 and the key material is

00:13:22,900 --> 00:13:29,320
generated at the installation time so

00:13:26,050 --> 00:13:34,480
whenever you used all the RPM packages

00:13:29,320 --> 00:13:39,100
it will put a number of certificates and

00:13:34,480 --> 00:13:41,500
keys that is it will generate CA

00:13:39,100 --> 00:13:43,450
certificate the server certificate in

00:13:41,500 --> 00:13:46,230
client certificates provided that you

00:13:43,450 --> 00:13:48,460
don't have those installed already

00:13:46,230 --> 00:13:51,220
because a lot of people would upgrade

00:13:48,460 --> 00:13:53,830
from say 56 and they would have their

00:13:51,220 --> 00:13:56,410
key material there we want tamper with

00:13:53,830 --> 00:14:00,130
them if we see that you actually have as

00:13:56,410 --> 00:14:03,640
a setup we'll leave it be but if you

00:14:00,130 --> 00:14:06,850
don't then it will do the necessary so

00:14:03,640 --> 00:14:10,560
that the server is SSL enabled we

00:14:06,850 --> 00:14:13,900
generate self-signed certificate for the

00:14:10,560 --> 00:14:19,420
CA of course because well that's what

00:14:13,900 --> 00:14:24,190
can be done and we but we keep it valid

00:14:19,420 --> 00:14:27,670
for a good amount of time which is again

00:14:24,190 --> 00:14:29,890
a better proposal than having no ssl

00:14:27,670 --> 00:14:32,170
encryption whatsoever and of course to

00:14:29,890 --> 00:14:34,990
have some sort of SSL encryption you

00:14:32,170 --> 00:14:37,270
need at least 30 earth the certificate

00:14:34,990 --> 00:14:39,980
and a key in the server so that's the

00:14:37,270 --> 00:14:43,040
meaning to KF ssl

00:14:39,980 --> 00:14:46,010
of course you can go into authentication

00:14:43,040 --> 00:14:48,890
as well but that also supposes that you

00:14:46,010 --> 00:14:53,630
need to install a certificate and a key

00:14:48,890 --> 00:14:57,110
on the client and well-configured the

00:14:53,630 --> 00:14:59,810
server to get it but I believe it's a

00:14:57,110 --> 00:15:02,090
bit step too far for the default

00:14:59,810 --> 00:15:07,540
configuration so we just create the

00:15:02,090 --> 00:15:11,090
clients and that means that clients will

00:15:07,540 --> 00:15:14,840
actually start connecting the various SL

00:15:11,090 --> 00:15:16,610
so whenever you upgrade 257 all of your

00:15:14,840 --> 00:15:20,890
connections where you don't specify

00:15:16,610 --> 00:15:26,210
otherwise we'll start running over SSL

00:15:20,890 --> 00:15:28,940
and we also have a way to force an ssl

00:15:26,210 --> 00:15:34,700
on the client side 57 that turned out to

00:15:28,940 --> 00:15:39,020
somehow be a very popular security news

00:15:34,700 --> 00:15:44,450
recently and we have that have kept the

00:15:39,020 --> 00:15:47,000
fix for quite some time in 57 now we are

00:15:44,450 --> 00:15:51,230
considering back for ticket to 56 even

00:15:47,000 --> 00:15:55,610
so basically you before in 56 you can

00:15:51,230 --> 00:15:57,950
say up your client site that you can use

00:15:55,610 --> 00:16:00,770
as a cell if it is available but you

00:15:57,950 --> 00:16:05,150
have no way of saying kai i would like

00:16:00,770 --> 00:16:08,690
to log out if there's no ssl and that is

00:16:05,150 --> 00:16:10,970
what we fixed in 57 so now you can infer

00:16:08,690 --> 00:16:15,650
that from both the client end to end the

00:16:10,970 --> 00:16:19,300
server server and of course he was doing

00:16:15,650 --> 00:16:19,300
that from the very beginning

00:16:19,570 --> 00:16:27,400
okay so security-conscious package

00:16:25,060 --> 00:16:30,720
layout i already mentioned the test and

00:16:27,400 --> 00:16:34,840
demos are in a separate package we also

00:16:30,720 --> 00:16:40,210
did this Neal directory to keep all SQL

00:16:34,840 --> 00:16:43,390
generated files so the mask yo server

00:16:40,210 --> 00:16:46,510
will basically the 57 server will create

00:16:43,390 --> 00:16:49,120
another directory in our lip to keep

00:16:46,510 --> 00:16:51,460
these files we want to keep them outside

00:16:49,120 --> 00:16:55,540
of the database directory for obvious

00:16:51,460 --> 00:17:00,820
reasons and we wanted to stay consistent

00:16:55,540 --> 00:17:06,310
with the silly nooks policy so we are

00:17:00,820 --> 00:17:08,110
creating another directory there okay so

00:17:06,310 --> 00:17:11,910
something that's not security related

00:17:08,110 --> 00:17:14,350
but really noteworthy I really wanted to

00:17:11,910 --> 00:17:16,780
demonstrate that because that's the

00:17:14,350 --> 00:17:20,500
biggest kind of change as far as my

00:17:16,780 --> 00:17:25,510
scale installation is concerned we don't

00:17:20,500 --> 00:17:28,710
need the mask you install DB anymore so

00:17:25,510 --> 00:17:31,660
the server is now fully equipped to a

00:17:28,710 --> 00:17:36,430
bootstrap itself which was not the case

00:17:31,660 --> 00:17:40,630
until 57 pretty much you need this extra

00:17:36,430 --> 00:17:43,120
binary you need a bunch of SQL scripts

00:17:40,630 --> 00:17:45,970
that were packaged then put in a strange

00:17:43,120 --> 00:17:48,370
directory so you basically needed to

00:17:45,970 --> 00:17:50,410
start this mask yo install DB binary

00:17:48,370 --> 00:17:54,820
which in turn would start the server

00:17:50,410 --> 00:17:58,510
process and then play the SQL files to

00:17:54,820 --> 00:18:01,960
it and that was not very stable and not

00:17:58,510 --> 00:18:05,560
very platform independent so what we did

00:18:01,960 --> 00:18:08,760
is we just have deprecated the hole in

00:18:05,560 --> 00:18:12,700
my skill install DB binary and the

00:18:08,760 --> 00:18:14,710
package told needed SQL commands to

00:18:12,700 --> 00:18:15,149
boost up the database inside the server

00:18:14,710 --> 00:18:20,190
it

00:18:15,149 --> 00:18:21,899
so this is what need got me to be

00:18:20,190 --> 00:18:25,710
changed in order the installation

00:18:21,899 --> 00:18:29,519
scripts basically remove the references

00:18:25,710 --> 00:18:35,609
to up to that all binary and just use

00:18:29,519 --> 00:18:38,399
the server banner itself so we have two

00:18:35,609 --> 00:18:42,719
modes for it that's the important part

00:18:38,399 --> 00:18:45,539
here it has the initialized mode which

00:18:42,719 --> 00:18:48,989
basically creates the ropes with this

00:18:45,539 --> 00:18:52,409
expired password which is pretty secure

00:18:48,989 --> 00:18:55,799
as all the elements to counter our

00:18:52,409 --> 00:18:59,219
default password policy and it also has

00:18:55,799 --> 00:19:01,379
the initialize insecure because when

00:18:59,219 --> 00:19:03,570
this password is generated the scripts

00:19:01,379 --> 00:19:06,239
run into additional difficulties

00:19:03,570 --> 00:19:09,450
effectually putting that generated

00:19:06,239 --> 00:19:12,619
password back to the server so we cater

00:19:09,450 --> 00:19:15,059
for scripts and we provide this

00:19:12,619 --> 00:19:17,039
initializing secure option which

00:19:15,059 --> 00:19:20,429
basically leaves the route without the

00:19:17,039 --> 00:19:25,440
password expecting that the script that

00:19:20,429 --> 00:19:28,320
is running that will set it ok and again

00:19:25,440 --> 00:19:30,539
mask you install the beastie works but

00:19:28,320 --> 00:19:37,409
it will give you a deprecation warning

00:19:30,539 --> 00:19:41,820
so look for one if you are using it ok

00:19:37,409 --> 00:19:44,669
that's all i had about masculine still a

00:19:41,820 --> 00:19:46,619
shin any other topics any other

00:19:44,669 --> 00:19:49,049
questions that are of interest to you i

00:19:46,619 --> 00:19:50,789
have been working with mass scale for

00:19:49,049 --> 00:19:53,719
quite some time so I believe I can

00:19:50,789 --> 00:19:53,719
answer more

00:19:54,610 --> 00:20:00,320
anybody

00:19:56,750 --> 00:20:03,850
no okay I thank you for your attention

00:20:00,320 --> 00:20:03,850

YouTube URL: https://www.youtube.com/watch?v=S8VkRMARgNk


