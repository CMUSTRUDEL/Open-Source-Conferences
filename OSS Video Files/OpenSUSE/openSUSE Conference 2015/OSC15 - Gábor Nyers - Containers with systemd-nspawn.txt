Title: OSC15 - GÃ¡bor Nyers - Containers with systemd-nspawn
Publication date: 2015-05-04
Playlist: openSUSE Conference 2015
Description: 
	While probably the most prominent, Docker is not the only tool for building and managing containers. Originally meant to be a "chroot on steroids" to help debug systemd, systemd-nspawn provides a fairly uncomplicated approach to work with containers. Being part of systemd, it is available on most recent distributions out-of-the-box and requires no additional dependencies.

This talk will introduce the concepts involved in containers and will guide you through the steps of building a container from scratch. The payload will be a simple service, which will be automatically activated by systemd when the first request arrives.
Captions: 
	00:00:00,000 --> 00:00:07,290
except the tooling is slightly different

00:00:02,220 --> 00:00:09,179
so I'm out of my interest I would like

00:00:07,290 --> 00:00:14,490
to see a show of hands how many of you

00:00:09,179 --> 00:00:19,109
guys have used containers okay with alex

00:00:14,490 --> 00:00:21,900
c or something docker perhaps ok so a

00:00:19,109 --> 00:00:24,510
docker seems to be nowadays the default

00:00:21,900 --> 00:00:28,859
technology actually as far as containers

00:00:24,510 --> 00:00:32,340
containers are concerned it turned out

00:00:28,859 --> 00:00:36,210
for me this end spawn was actually a

00:00:32,340 --> 00:00:38,790
discovery a few months ago and I thought

00:00:36,210 --> 00:00:40,590
wow that's quite neat this is something

00:00:38,790 --> 00:00:43,559
that I can relate to and I don't need

00:00:40,590 --> 00:00:48,480
any dependencies any tools installed on

00:00:43,559 --> 00:00:51,629
the system it is also often called the

00:00:48,480 --> 00:00:54,360
change route on steroids steroids so

00:00:51,629 --> 00:00:56,070
change route I'm sure that may everyone

00:00:54,360 --> 00:00:58,620
in this room is familiar with change

00:00:56,070 --> 00:01:00,829
route have been around for a couple of

00:00:58,620 --> 00:01:05,790
decades already in the unix / linux

00:01:00,829 --> 00:01:10,590
world and we're using some technologies

00:01:05,790 --> 00:01:12,960
from like Colonel see groups it is

00:01:10,590 --> 00:01:17,939
actually evolving into a very nice

00:01:12,960 --> 00:01:20,180
container technology as well so what I

00:01:17,939 --> 00:01:22,140
would like to do today I believe I have

00:01:20,180 --> 00:01:25,080
60 minutes for the presentation

00:01:22,140 --> 00:01:29,820
gentleman in the back yes okay so that I

00:01:25,080 --> 00:01:32,689
can time myself I will be starting of

00:01:29,820 --> 00:01:36,479
right of the bat with a example and

00:01:32,689 --> 00:01:39,840
unfortunately for that I grab a chair

00:01:36,479 --> 00:01:43,079
but I need to be sitting with my back

00:01:39,840 --> 00:01:45,380
towards you so I hope you guys don't get

00:01:43,079 --> 00:01:45,380
offended

00:01:46,610 --> 00:01:52,550
after that i will be talking a bit about

00:01:49,160 --> 00:01:57,320
what is system d and more specifically

00:01:52,550 --> 00:02:01,610
as a system DN spawn that's a utility in

00:01:57,320 --> 00:02:05,840
the system the family of the tools after

00:02:01,610 --> 00:02:10,429
that about bootable containers i will be

00:02:05,840 --> 00:02:12,830
showing a container using opensuse so

00:02:10,429 --> 00:02:14,510
containers you can run applications in

00:02:12,830 --> 00:02:18,650
containers but all you can also in fact

00:02:14,510 --> 00:02:22,880
run complete machines so with evident in

00:02:18,650 --> 00:02:26,270
it and stuff like that and for those of

00:02:22,880 --> 00:02:31,250
you who didn't know it is possible to

00:02:26,270 --> 00:02:33,890
run multiple distributions on the same

00:02:31,250 --> 00:02:35,810
system there are there are some gotchas

00:02:33,890 --> 00:02:38,000
and there is there are a few things that

00:02:35,810 --> 00:02:41,200
you need to keep in mind but i will be

00:02:38,000 --> 00:02:45,140
showing you as an example how to run a

00:02:41,200 --> 00:02:47,950
santos distribution in a container on

00:02:45,140 --> 00:02:47,950
opensuse

00:02:48,240 --> 00:02:54,630
I will be mentioning something about

00:02:50,090 --> 00:02:57,720
Colonel see groups and the last bullet

00:02:54,630 --> 00:03:00,630
unfortunately is not working so i do

00:02:57,720 --> 00:03:02,790
have a service but is not yet so good

00:03:00,630 --> 00:03:04,560
activated and what that exactly means i

00:03:02,790 --> 00:03:07,160
will be also elaborating on in my

00:03:04,560 --> 00:03:07,160
presentation

00:03:08,600 --> 00:03:17,660
so an example system the and spawn

00:03:12,320 --> 00:03:20,590
container and it is will be interesting

00:03:17,660 --> 00:03:20,590
to see how this works

00:03:28,959 --> 00:03:35,329
can you guys hear me to feel feel like a

00:03:32,629 --> 00:03:38,750
bit stevie wonder you know the keyboard

00:03:35,329 --> 00:03:41,900
and anyway that would be that without

00:03:38,750 --> 00:03:44,989
the music actually so

00:03:41,900 --> 00:03:51,220
is this font size suitable for you guys

00:03:44,989 --> 00:03:54,049
yeah ok so I have a container heavy

00:03:51,220 --> 00:03:57,140
containers I have a few containers in

00:03:54,049 --> 00:04:01,480
fact in this directory and i will be

00:03:57,140 --> 00:04:01,480
using a opensuse

00:04:03,540 --> 00:04:08,310
opensuse

00:04:06,330 --> 00:04:13,230
so as you can see this is looks like

00:04:08,310 --> 00:04:21,410
very as if it was a system right any

00:04:13,230 --> 00:04:21,410
root filesystem so just to go back to my

00:04:27,470 --> 00:04:34,820
and spawn yeah so the witches system the

00:04:32,960 --> 00:04:38,570
end spawn I can start off the the

00:04:34,820 --> 00:04:41,080
container if I would start it like this

00:04:38,570 --> 00:04:44,900
then it will would actually use the

00:04:41,080 --> 00:04:47,750
system d inside the container so I would

00:04:44,900 --> 00:04:50,150
have a fully bootable container which

00:04:47,750 --> 00:04:55,450
will be the set of the step after this

00:04:50,150 --> 00:04:55,450
but you know just the start of a bash

00:04:57,520 --> 00:05:02,699
but that's not okay but this

00:05:03,710 --> 00:05:10,260
password so that was not actually my

00:05:08,010 --> 00:05:12,570
intention I wanted the bazooka as you

00:05:10,260 --> 00:05:16,110
can you could see this was a actually

00:05:12,570 --> 00:05:19,530
boot process so i need to check what

00:05:16,110 --> 00:05:22,140
what happened but nonetheless at this

00:05:19,530 --> 00:05:25,500
point i'm inside the container and so

00:05:22,140 --> 00:05:28,230
let's examine what is happening on the

00:05:25,500 --> 00:05:32,130
on the system so inside the container i

00:05:28,230 --> 00:05:37,440
can do a PS and this would look like a

00:05:32,130 --> 00:05:40,230
normal system except that this system is

00:05:37,440 --> 00:05:43,560
running as a container on the this

00:05:40,230 --> 00:05:48,420
machine and as you can see this is the

00:05:43,560 --> 00:05:51,240
name of the container and yeah it's a

00:05:48,420 --> 00:05:56,480
starting system d has also a couple of

00:05:51,240 --> 00:05:59,880
very nice tools like the sea group list

00:05:56,480 --> 00:06:03,090
this will show me the structure that

00:05:59,880 --> 00:06:06,900
system d has set up and besides

00:06:03,090 --> 00:06:12,320
processes systemd can also with a system

00:06:06,900 --> 00:06:17,050
the end spawn also can also can

00:06:12,320 --> 00:06:22,090
start in fact machines or containers and

00:06:17,050 --> 00:06:26,740
we can see this system z will build a

00:06:22,090 --> 00:06:29,980
hierarchy of see groups and they will be

00:06:26,740 --> 00:06:33,470
listed underneath the machine dot slice

00:06:29,980 --> 00:06:36,500
as you can see there is my container

00:06:33,470 --> 00:06:40,510
that I just started and within it a

00:06:36,500 --> 00:06:43,510
couple of processes so

00:06:40,510 --> 00:06:49,950
and otherwise it's a normal system as

00:06:43,510 --> 00:06:53,380
you can see so more on this this later

00:06:49,950 --> 00:06:59,220
and I can just shut down the container

00:06:53,380 --> 00:06:59,220
with normal in it okay

00:07:01,940 --> 00:07:08,110
I'm just curious what what went wrong in

00:07:04,850 --> 00:07:08,110
there in here

00:07:10,020 --> 00:07:20,970
this should have this was the problem

00:07:14,990 --> 00:07:24,479
the slash b dash b instructs systemd to

00:07:20,970 --> 00:07:28,139
boot the container okay so if I with the

00:07:24,479 --> 00:07:32,340
BJJ i have not a just a batch process

00:07:28,139 --> 00:07:35,580
inside the container and this is this is

00:07:32,340 --> 00:07:39,139
the difference so this would be equal to

00:07:35,580 --> 00:07:43,680
a system in when you when you start a

00:07:39,139 --> 00:07:48,409
system and only the boot prompt you add

00:07:43,680 --> 00:07:50,970
the parameters in it is bin bash right

00:07:48,409 --> 00:07:55,340
this is the exact same situation so that

00:07:50,970 --> 00:08:00,270
this could be a rescue shell or whatever

00:07:55,340 --> 00:08:02,370
and the same applies that the container

00:08:00,270 --> 00:08:07,490
has been started it's just that not a

00:08:02,370 --> 00:08:12,139
complete system situation but just a

00:08:07,490 --> 00:08:12,139
single process inside that container

00:08:14,430 --> 00:08:20,070
while in the previous situation there

00:08:16,500 --> 00:08:21,810
was a number of processes which system

00:08:20,070 --> 00:08:27,470
they started inside the container not

00:08:21,810 --> 00:08:27,470
only have a bash process okay

00:08:28,120 --> 00:08:32,830
so

00:08:29,780 --> 00:08:36,650
there's also interesting stuff that

00:08:32,830 --> 00:08:38,240
inside this container this is inside the

00:08:36,650 --> 00:08:40,159
coin you can see that i'm in the

00:08:38,240 --> 00:08:44,060
container because of the the machine

00:08:40,159 --> 00:08:46,810
name ok so my this is the name of my

00:08:44,060 --> 00:08:51,950
machine that it's a Dorado and the

00:08:46,810 --> 00:08:55,900
container is called opensuse 13 2 and if

00:08:51,950 --> 00:09:01,340
suppose that I want to add some program

00:08:55,900 --> 00:09:03,530
in I cannot do that because there is no

00:09:01,340 --> 00:09:05,570
zipper stack installed inside the

00:09:03,530 --> 00:09:09,520
container so as you can see this is

00:09:05,570 --> 00:09:13,840
really a lightweight stuff

00:09:09,520 --> 00:09:16,660
in certain in certain to it acts as a

00:09:13,840 --> 00:09:21,130
machine but it's not completely it's not

00:09:16,660 --> 00:09:26,200
a fully full-blown machine okay but if I

00:09:21,130 --> 00:09:31,510
would go to for example this is the this

00:09:26,200 --> 00:09:35,610
is the just to show you guys how I would

00:09:31,510 --> 00:09:35,610
go about to install a

00:09:37,320 --> 00:09:43,260
some kind of a utility or a package

00:09:40,500 --> 00:09:45,440
inside the container then I could do

00:09:43,260 --> 00:09:45,440
this

00:09:55,300 --> 00:09:59,519
must be absolute damn

00:10:02,740 --> 00:10:14,740
okay but w get is already installed

00:10:06,850 --> 00:10:20,260
inside the container okay so this was

00:10:14,740 --> 00:10:23,260
just to get started on the containers if

00:10:20,260 --> 00:10:25,950
I would would you guys be interested to

00:10:23,260 --> 00:10:29,320
know how to build a container like this

00:10:25,950 --> 00:10:32,770
so that's actually yeah the answer is

00:10:29,320 --> 00:10:35,649
supposed to be yes right okay so let me

00:10:32,770 --> 00:10:39,100
let me show and show that so they not

00:10:35,649 --> 00:10:44,140
sure how unfortunately it's a bit too

00:10:39,100 --> 00:10:47,680
small the D letters but i will be doing

00:10:44,140 --> 00:10:51,720
that here as well so i will be starting

00:10:47,680 --> 00:10:57,670
a fresh install for example make dear

00:10:51,720 --> 00:11:03,730
opensuse third and let's call it OS 13

00:10:57,670 --> 00:11:08,350
and i have it already make their OS as

00:11:03,730 --> 00:11:12,000
in opensuse right so what i can do is

00:11:08,350 --> 00:11:21,480
zipper and i need to check the exact

00:11:12,000 --> 00:11:21,480
syntax root OS and then add repo

00:11:23,329 --> 00:11:27,910
and I need to fortunately

00:11:33,800 --> 00:11:39,230
I'm hopefully I'm not confusing you with

00:11:36,380 --> 00:11:41,480
switching back and forth too much with

00:11:39,230 --> 00:11:44,810
the okay so I basically what i did i

00:11:41,480 --> 00:11:48,260
just copied the URL from the PDF that

00:11:44,810 --> 00:11:53,890
would save some time for me and then i

00:11:48,260 --> 00:11:53,890
will be naming this OSS

00:12:04,430 --> 00:12:08,050
Ruto ok

00:12:08,070 --> 00:12:17,490
yeah I know I know I need to append the

00:12:11,810 --> 00:12:23,430
sfv containers OS okay so what it did

00:12:17,490 --> 00:12:26,070
now is if we look into OS I haven't

00:12:23,430 --> 00:12:28,440
shown that before but since i just

00:12:26,070 --> 00:12:29,790
created the directory i'm assuming that

00:12:28,440 --> 00:12:32,820
you guys believe me that it was a

00:12:29,790 --> 00:12:36,300
completely empty directory so the what

00:12:32,820 --> 00:12:42,420
zipper did actually created a RPM

00:12:36,300 --> 00:12:45,810
database and added a repository with

00:12:42,420 --> 00:12:52,070
that with that URL i also want to add

00:12:45,810 --> 00:12:52,070
the non 0 SS repo

00:12:55,360 --> 00:13:02,590
like that and what I can do now is just

00:13:02,890 --> 00:13:08,270
instead of I have a couple of

00:13:06,260 --> 00:13:12,110
repositories now and I can install just

00:13:08,270 --> 00:13:14,240
a couple of packages what I need to make

00:13:12,110 --> 00:13:17,390
sure is that a number of packages will

00:13:14,240 --> 00:13:20,000
be included in this container for

00:13:17,390 --> 00:13:24,590
example I will be needing this opensuse

00:13:20,000 --> 00:13:27,410
release 13.2 package which will pull in

00:13:24,590 --> 00:13:31,400
a couple of you know standard system

00:13:27,410 --> 00:13:33,560
directories and files and also it has

00:13:31,400 --> 00:13:36,520
the dependencies on on you know the

00:13:33,560 --> 00:13:36,520
basic libraries

00:13:37,779 --> 00:13:44,709
so as you can see this is my command

00:13:40,990 --> 00:13:47,589
line I'm pointing to the root of the

00:13:44,709 --> 00:13:50,079
container I'm telling zipper to install

00:13:47,589 --> 00:13:53,819
a number of packages and these are the

00:13:50,079 --> 00:13:56,559
packages that it will be installing so

00:13:53,819 --> 00:13:58,980
unfortunately there is some network

00:13:56,559 --> 00:13:58,980
issue

00:14:01,340 --> 00:14:06,910
allow me to sort that out just very

00:14:04,730 --> 00:14:06,910
quickly

00:14:12,510 --> 00:14:18,670
well

00:14:14,500 --> 00:14:18,670
unfortunately something with the

00:14:19,980 --> 00:14:24,530
with the wire oh this would help

00:14:25,080 --> 00:14:32,050
unfortunately I while handling the

00:14:27,820 --> 00:14:35,340
laptop I killed the wireless so the

00:14:32,050 --> 00:14:35,340
switch was in the off position

00:14:36,720 --> 00:14:41,389
ok so we try

00:14:44,480 --> 00:14:50,640
obviously I need to add the gpg signing

00:14:48,450 --> 00:14:54,810
keys for the three packages so I'll just

00:14:50,640 --> 00:14:58,280
say the trust is temporary or always I

00:14:54,810 --> 00:14:58,280
will be trusting this always

00:14:59,150 --> 00:15:06,200
and for those of you who are familiar

00:15:01,640 --> 00:15:09,050
with opensuse this is now actually the

00:15:06,200 --> 00:15:13,580
installation process it will download

00:15:09,050 --> 00:15:16,100
the repository metadata it will put it

00:15:13,580 --> 00:15:19,850
over there resolve the dependencies and

00:15:16,100 --> 00:15:21,920
it prompts me that okay in order for

00:15:19,850 --> 00:15:25,030
those packages to get to be installed

00:15:21,920 --> 00:15:25,030
you need to be

00:15:25,699 --> 00:15:30,559
you need to accept these other

00:15:27,470 --> 00:15:33,410
dependencies so I'm saying okay this is

00:15:30,559 --> 00:15:37,779
quite standard and as you can see this

00:15:33,410 --> 00:15:39,819
is not the installation process okay

00:15:37,779 --> 00:15:42,629
and at the end of this installation

00:15:39,819 --> 00:15:46,199
process which I won't be waiting for I

00:15:42,629 --> 00:15:48,610
basically will have a freshly installed

00:15:46,199 --> 00:15:51,040
container with a freshly installed

00:15:48,610 --> 00:15:53,879
opensuse 13.1 inside of the container

00:15:51,040 --> 00:15:53,879
please

00:16:01,959 --> 00:16:08,240
not not the way I'm doing it right now

00:16:04,970 --> 00:16:10,070
so if I there are there are a number of

00:16:08,240 --> 00:16:13,399
ways to achieve that for example I could

00:16:10,070 --> 00:16:16,850
be using a proxy a caching proxy or I

00:16:13,399 --> 00:16:19,640
could be using also a local directory

00:16:16,850 --> 00:16:21,410
form from example folded for the DVD but

00:16:19,640 --> 00:16:25,750
you know for just for the simplicity

00:16:21,410 --> 00:16:29,800
sake i'm actually using the online

00:16:25,750 --> 00:16:34,070
repositories i could also loop mount a

00:16:29,800 --> 00:16:39,250
iso with the conduit amid opensuse and

00:16:34,070 --> 00:16:39,250
use that as an installation source ok

00:16:39,570 --> 00:16:42,350
any other

00:16:47,449 --> 00:16:52,749
I'm sorry I really is it's horribly

00:16:54,700 --> 00:17:00,400
a configuration files I just repeating

00:16:59,080 --> 00:17:01,720
the question for the recording the

00:17:00,400 --> 00:17:04,120
question is do you need any

00:17:01,720 --> 00:17:07,020
configuration files is that correct no

00:17:04,120 --> 00:17:07,020
you don't

00:17:11,890 --> 00:17:15,680
you know basically you could just flip

00:17:13,970 --> 00:17:19,010
this you could even put this in the into

00:17:15,680 --> 00:17:21,740
a script and have it you know use you

00:17:19,010 --> 00:17:23,090
use I'm not sure where in what what

00:17:21,740 --> 00:17:25,330
context you mean their configuration

00:17:23,090 --> 00:17:25,330
files

00:17:32,190 --> 00:17:40,480
no this doesn't need any configuration

00:17:34,899 --> 00:17:43,149
file so far yeah okay so this is happily

00:17:40,480 --> 00:17:47,830
chugging along actually I will be

00:17:43,149 --> 00:17:49,259
stopping this I won't be using this this

00:17:47,830 --> 00:17:51,460
container because I already have a

00:17:49,259 --> 00:17:58,659
container and this one is actually using

00:17:51,460 --> 00:18:01,840
my mobile plan so so as you can see with

00:17:58,659 --> 00:18:05,679
a few simple instructions you can have

00:18:01,840 --> 00:18:09,250
you can build a freshly installed image

00:18:05,679 --> 00:18:12,160
for for a container

00:18:09,250 --> 00:18:15,280
and if you obviously if there is a

00:18:12,160 --> 00:18:18,610
certain minimum that you need to install

00:18:15,280 --> 00:18:23,350
for example the opensuse release in this

00:18:18,610 --> 00:18:25,930
case but I could just have selected bash

00:18:23,350 --> 00:18:28,420
after that and have a very lightweight

00:18:25,930 --> 00:18:31,870
container and in terms of patch

00:18:28,420 --> 00:18:33,790
management this is of course very very

00:18:31,870 --> 00:18:36,550
favorable that you don't have a full

00:18:33,790 --> 00:18:39,250
full-blown operating system obviously

00:18:36,550 --> 00:18:44,580
there is also no colonel inside the

00:18:39,250 --> 00:18:44,580
container that just to make it explicit

00:18:45,530 --> 00:18:47,560
Oh

00:18:54,289 --> 00:18:59,069
your question is can I can I go to the

00:18:56,909 --> 00:19:01,399
directory and share that their own the

00:18:59,069 --> 00:19:01,399
network

00:19:04,310 --> 00:19:06,700
always

00:19:10,070 --> 00:19:15,950
you could

00:19:12,110 --> 00:19:19,250
you could or you know whatever you could

00:19:15,950 --> 00:19:23,080
basically you could tore that up and and

00:19:19,250 --> 00:19:25,940
in terms of you know doing multiple

00:19:23,080 --> 00:19:30,230
deployments yes obviously you could also

00:19:25,940 --> 00:19:34,940
that there's also a nowadays a people

00:19:30,230 --> 00:19:38,540
are looking at how to you know wisely

00:19:34,940 --> 00:19:41,240
use butter FS and subvolumes combined

00:19:38,540 --> 00:19:42,890
with containers so obviously that's

00:19:41,240 --> 00:19:46,790
that's also very interesting because

00:19:42,890 --> 00:19:48,980
they're the the you need to only install

00:19:46,790 --> 00:19:51,250
the files or the content once and after

00:19:48,980 --> 00:19:55,250
that you can have very lightweight and

00:19:51,250 --> 00:19:58,250
also in terms of the storage you could

00:19:55,250 --> 00:20:00,440
have with just one content in terms of

00:19:58,250 --> 00:20:03,200
the root filesystem you could have ten

00:20:00,440 --> 00:20:06,429
or dozen to dozens of these these

00:20:03,200 --> 00:20:06,429
containers on the same machine

00:20:08,750 --> 00:20:15,970
so after this you know after whetting

00:20:12,710 --> 00:20:19,790
your appetite for systemd and spawn

00:20:15,970 --> 00:20:27,860
let's talk about systemd for just just a

00:20:19,790 --> 00:20:32,560
minute and i will stand up a bit how

00:20:27,860 --> 00:20:32,560
many of you have used systemd

00:20:32,850 --> 00:20:37,040
how many of you liked systemd

00:20:37,050 --> 00:20:48,940
Craig is not sure so I must admit around

00:20:46,050 --> 00:20:52,720
10 months ago maybe a year ago you know

00:20:48,940 --> 00:20:55,600
when when systemd started to get into

00:20:52,720 --> 00:20:58,260
the into the main line I was looking at

00:20:55,600 --> 00:21:00,670
the reactions and I was quite surprised

00:20:58,260 --> 00:21:04,300
actually what surprised me is the

00:21:00,670 --> 00:21:08,010
ferocity of the sum of those reactions

00:21:04,300 --> 00:21:11,380
and so obviously i was quite curious and

00:21:08,010 --> 00:21:17,640
you know i started out ok let's see what

00:21:11,380 --> 00:21:23,410
is this but quite quickly I became a fan

00:21:17,640 --> 00:21:26,950
for system lee so yay system d ok so

00:21:23,410 --> 00:21:32,440
what is it obviously many of you know as

00:21:26,950 --> 00:21:37,860
a as the successor of the old sis way in

00:21:32,440 --> 00:21:42,040
it package and the two others it's the

00:21:37,860 --> 00:21:46,030
the core of evil in the in the linux

00:21:42,040 --> 00:21:50,320
world basically it will replace any di

00:21:46,030 --> 00:21:53,290
thing and it's a system and session

00:21:50,320 --> 00:21:56,500
manager for linux and what that means is

00:21:53,290 --> 00:21:59,640
that right after in the boot process

00:21:56,500 --> 00:22:03,220
that the colonel has started the init

00:21:59,640 --> 00:22:06,010
init initial ram disk is mounted then

00:22:03,220 --> 00:22:08,920
the colonel will start of the first

00:22:06,010 --> 00:22:13,060
process bid one and that used to be in

00:22:08,920 --> 00:22:15,940
it nowadays it's system d and system d

00:22:13,060 --> 00:22:18,760
is in charge of you know furnishing the

00:22:15,940 --> 00:22:21,850
complete system until it the boot

00:22:18,760 --> 00:22:24,390
processes is ready so hence the system

00:22:21,850 --> 00:22:28,390
and session manager it will start

00:22:24,390 --> 00:22:33,280
services it will start devices nowadays

00:22:28,390 --> 00:22:38,200
and the the features of a system dr

00:22:33,280 --> 00:22:40,420
ever-growing what actually for me sets

00:22:38,200 --> 00:22:43,090
up a system these sets of what actually

00:22:40,420 --> 00:22:47,130
sets apart assistant lee for me is the

00:22:43,090 --> 00:22:51,820
are two things one of them is that

00:22:47,130 --> 00:22:56,230
we will be doing away with the old shell

00:22:51,820 --> 00:23:00,100
script and if you ask me that I won't be

00:22:56,230 --> 00:23:03,720
missing them the shell script being that

00:23:00,100 --> 00:23:08,380
have been used for 30-something years in

00:23:03,720 --> 00:23:12,700
UNIX and Linux yeah they had they had

00:23:08,380 --> 00:23:14,740
their issues I would say so just out of

00:23:12,700 --> 00:23:17,860
curiosity how many what would you think

00:23:14,740 --> 00:23:20,410
how big a typical shell scripting for

00:23:17,860 --> 00:23:27,790
example in Suzie's and in its shell

00:23:20,410 --> 00:23:30,510
script 100 lines that's exactly that's a

00:23:27,790 --> 00:23:35,200
very good question so what I'm here

00:23:30,510 --> 00:23:38,770
including all the includes right because

00:23:35,200 --> 00:23:42,250
you can have a init script in I don't

00:23:38,770 --> 00:23:47,820
know 20 40 lines but you start off with

00:23:42,250 --> 00:23:47,820
including a couple of other functions so

00:23:49,370 --> 00:23:59,600
I actually I haven't counted all the

00:23:55,210 --> 00:24:03,290
nvidia includes included but I had a

00:23:59,600 --> 00:24:07,100
look at the NFS init script how many of

00:24:03,290 --> 00:24:11,059
you have look I'd look at that it's 500

00:24:07,100 --> 00:24:14,240
lines so and what system they actually

00:24:11,059 --> 00:24:17,990
brings to the table is that the system d

00:24:14,240 --> 00:24:21,220
does away with the prescriptive way of

00:24:17,990 --> 00:24:24,170
starting a system and it changes to a

00:24:21,220 --> 00:24:26,200
descriptive so instead of a prescriptive

00:24:24,170 --> 00:24:29,900
you need to do this you need to do that

00:24:26,200 --> 00:24:33,170
this and that that's how do you know the

00:24:29,900 --> 00:24:37,250
shell script used to do with system Lee

00:24:33,170 --> 00:24:41,420
you describe the service so it's a

00:24:37,250 --> 00:24:44,690
descriptive method okay and what that

00:24:41,420 --> 00:24:47,450
makes that it's the unit files we're the

00:24:44,690 --> 00:24:52,270
only services and and other things are

00:24:47,450 --> 00:24:56,390
described is a very readable and

00:24:52,270 --> 00:24:59,630
actually quite rich syntax but you don't

00:24:56,390 --> 00:25:01,280
actually do boilerplate for example to

00:24:59,630 --> 00:25:03,890
check whether or not the process is

00:25:01,280 --> 00:25:08,210
running or is there a file or as logging

00:25:03,890 --> 00:25:12,200
whatever all this boilerplate thing is

00:25:08,210 --> 00:25:14,270
being done by systemd the other very

00:25:12,200 --> 00:25:18,770
nice feature as far as I'm concerned is

00:25:14,270 --> 00:25:22,280
the very aggressive parallelization of

00:25:18,770 --> 00:25:26,059
the processes so I'm sure that you guys

00:25:22,280 --> 00:25:29,920
familiar with that in it the old in it

00:25:26,059 --> 00:25:32,470
did things sequentially

00:25:29,920 --> 00:25:36,070
well mostly okay they're divers on

00:25:32,470 --> 00:25:38,080
tricks which would make which would made

00:25:36,070 --> 00:25:39,790
appear that's there were there are

00:25:38,080 --> 00:25:44,200
multiple things happening at the same

00:25:39,790 --> 00:25:48,480
time but in reality in it is a single

00:25:44,200 --> 00:25:51,400
threaded thing and this is this

00:25:48,480 --> 00:25:53,290
especially shows during the boot up now

00:25:51,400 --> 00:25:56,650
I'm filming I'm familiar with the

00:25:53,290 --> 00:25:58,960
counter argument that okay I have a

00:25:56,650 --> 00:26:02,380
serve on running servers and I don't

00:25:58,960 --> 00:26:05,530
need to boot them on a regular basis so

00:26:02,380 --> 00:26:08,980
I don't care that instead of 20 seconds

00:26:05,530 --> 00:26:13,450
it spends an additional four minutes at

00:26:08,980 --> 00:26:18,010
once every few months ok but I think

00:26:13,450 --> 00:26:21,070
that in terms of the what it does with

00:26:18,010 --> 00:26:23,830
the instead of the descriptive feature

00:26:21,070 --> 00:26:28,990
of it is actually still very nice also

00:26:23,830 --> 00:26:32,590
for own servers so the other there's

00:26:28,990 --> 00:26:36,280
also the on-demand starting of services

00:26:32,590 --> 00:26:38,590
and this topic what I'm you know these

00:26:36,280 --> 00:26:41,620
containers this is very much related

00:26:38,590 --> 00:26:45,640
also to that to that point I have been

00:26:41,620 --> 00:26:48,730
watching a presentation from someone I

00:26:45,640 --> 00:26:52,030
think it's at a hosting company and they

00:26:48,730 --> 00:26:55,330
are running two thousand containers on a

00:26:52,030 --> 00:26:58,330
single system all of them with engine X

00:26:55,330 --> 00:27:01,780
happens to be a hosting provider ok but

00:26:58,330 --> 00:27:04,870
the point is while there are two

00:27:01,780 --> 00:27:07,030
thousand containers and websites

00:27:04,870 --> 00:27:10,540
available at the same time on that

00:27:07,030 --> 00:27:13,720
machine usually not not all two thousand

00:27:10,540 --> 00:27:16,450
of them are running at the same time so

00:27:13,720 --> 00:27:19,540
this only mount starting service of

00:27:16,450 --> 00:27:21,490
services is very useful in certain use

00:27:19,540 --> 00:27:25,100
cases

00:27:21,490 --> 00:27:27,890
also I i would say i would say one of

00:27:25,100 --> 00:27:31,100
the cherries on top of the pie is that

00:27:27,890 --> 00:27:34,880
systemd keeps track of the of the

00:27:31,100 --> 00:27:38,450
processes that have been started by my

00:27:34,880 --> 00:27:41,179
services how many of you had the

00:27:38,450 --> 00:27:43,100
situation that you were looking at the

00:27:41,179 --> 00:27:46,370
process and you were wondering how the

00:27:43,100 --> 00:27:51,710
hell who how's that what process is that

00:27:46,370 --> 00:27:54,799
who started it so with systemd with

00:27:51,710 --> 00:27:57,740
system lee it is very easy because all

00:27:54,799 --> 00:28:00,490
services and all the child processes

00:27:57,740 --> 00:28:03,350
will be running in their own SI group

00:28:00,490 --> 00:28:08,990
and that's almost like a container but

00:28:03,350 --> 00:28:13,390
not not quite so it with using this it

00:28:08,990 --> 00:28:18,730
is always explicit which process is

00:28:13,390 --> 00:28:18,730
belonging to what service okay

00:28:21,990 --> 00:28:29,760
so besides that systemd does away also

00:28:27,120 --> 00:28:35,660
with the run levels wrong the bells are

00:28:29,760 --> 00:28:39,870
gone it's instead of that system d has

00:28:35,660 --> 00:28:41,790
targets and you know if you're really

00:28:39,870 --> 00:28:44,940
loose on the interpretation then you

00:28:41,790 --> 00:28:49,080
could say that run levels are sort of

00:28:44,940 --> 00:28:51,570
like the deter at targets but it's not

00:28:49,080 --> 00:28:54,809
exactly true because in the traditional

00:28:51,570 --> 00:28:57,330
in it you only ever can have one run

00:28:54,809 --> 00:28:59,670
level at the same time and with systemd

00:28:57,330 --> 00:29:03,240
there is a whole hierarchy of targets

00:28:59,670 --> 00:29:06,460
that you can that you can have

00:29:03,240 --> 00:29:09,450
as I mentioned beside services system d

00:29:06,460 --> 00:29:15,910
also does other stuff for example mounts

00:29:09,450 --> 00:29:17,950
and it basically similar to quite

00:29:15,910 --> 00:29:19,590
similar to packaging where with

00:29:17,950 --> 00:29:22,210
dependencies you can describe

00:29:19,590 --> 00:29:24,419
dependencies between between packages

00:29:22,210 --> 00:29:27,429
with system d you can describe

00:29:24,419 --> 00:29:37,059
dependencies between services so that's

00:29:27,429 --> 00:29:38,950
also very very useful and two I would

00:29:37,059 --> 00:29:42,760
like to mention this one it's also

00:29:38,950 --> 00:29:45,580
capable to act as a drop-in replacement

00:29:42,760 --> 00:29:49,600
for suspended in fact I previously

00:29:45,580 --> 00:29:53,230
mentioned the NFS service and on

00:29:49,600 --> 00:29:57,780
opensuse 13.2 happen and also on last 12

00:29:53,230 --> 00:29:59,799
it happens to be the same old NFS script

00:29:57,780 --> 00:30:01,990
containing five hundred lines of

00:29:59,799 --> 00:30:05,890
scripting and including another 2,000

00:30:01,990 --> 00:30:09,210
but NFS is still started with with the

00:30:05,890 --> 00:30:09,210
old script

00:30:10,620 --> 00:30:20,580
so there is also quite some criticism

00:30:15,540 --> 00:30:23,280
regarding systemd and obviously I won't

00:30:20,580 --> 00:30:29,460
be addressing those that's up to you to

00:30:23,280 --> 00:30:32,309
read up on the online and as an aside

00:30:29,460 --> 00:30:34,680
regarding the D criticism actually I

00:30:32,309 --> 00:30:37,170
haven't I have been following this topic

00:30:34,680 --> 00:30:40,440
for a few months now and what what

00:30:37,170 --> 00:30:45,750
occurred to me is that I haven't really

00:30:40,440 --> 00:30:51,260
seen a argument that is based on actual

00:30:45,750 --> 00:30:54,870
knowledge about the systemd or or that

00:30:51,260 --> 00:30:57,809
haphazard stopper but you know that's

00:30:54,870 --> 00:31:01,650
just me and it took it occurred to me as

00:30:57,809 --> 00:31:04,640
well that the situation with with Henry

00:31:01,650 --> 00:31:08,490
Ford and this this quote of him is that

00:31:04,640 --> 00:31:11,870
you know if Henry Ford would ask other

00:31:08,490 --> 00:31:15,600
people that that these are his words

00:31:11,870 --> 00:31:18,720
about how to how to build what to build

00:31:15,600 --> 00:31:23,030
then they would have said okay you need

00:31:18,720 --> 00:31:28,190
to build a faster carriages

00:31:23,030 --> 00:31:29,840
oh I did I did this presentation before

00:31:28,190 --> 00:31:33,050
and I just now realized this was

00:31:29,840 --> 00:31:35,180
obviously not the this is instead of

00:31:33,050 --> 00:31:37,990
forces it's supposed to USA carriages

00:31:35,180 --> 00:31:37,990
yes

00:31:41,210 --> 00:31:46,299
I'm really having trouble following you

00:31:43,610 --> 00:31:46,299
I Pauly

00:31:50,680 --> 00:31:57,309
it's much like dirt

00:31:54,210 --> 00:32:00,220
yeah you mean you mean like it's a

00:31:57,309 --> 00:32:02,470
monolithic application so you know I had

00:32:00,220 --> 00:32:06,159
to look at at that time and you know I'm

00:32:02,470 --> 00:32:08,830
not really sure that what what how to to

00:32:06,159 --> 00:32:11,169
handle that that criticism so obviously

00:32:08,830 --> 00:32:13,840
it's it's a it's more than one utility

00:32:11,169 --> 00:32:18,850
but it's not a monolithic something so

00:32:13,840 --> 00:32:21,630
there are desired these are utility yeah

00:32:18,850 --> 00:32:21,630
it does

00:32:23,980 --> 00:32:30,460
yeah i guess i guess i am that there

00:32:27,880 --> 00:32:33,190
might be some to a kernel of the truth

00:32:30,460 --> 00:32:37,179
in that argument and you know i would

00:32:33,190 --> 00:32:39,610
say that being an open source project in

00:32:37,179 --> 00:32:41,860
time probably people will pick up on on

00:32:39,610 --> 00:32:47,610
the you know the the stuff that is

00:32:41,860 --> 00:32:47,610
really needed in terms of security okay

00:32:50,900 --> 00:32:57,660
regarding a system the adoption this is

00:32:54,450 --> 00:33:00,480
just a list recent list i think a few

00:32:57,660 --> 00:33:05,420
weeks ago I checked on wikipedia just

00:33:00,480 --> 00:33:08,760
how other distributions are related to

00:33:05,420 --> 00:33:12,350
to system d I'm not sure is the debian

00:33:08,760 --> 00:33:15,270
already did is it bit system d or not

00:33:12,350 --> 00:33:19,350
yeah ok so i need i need to i need to

00:33:15,270 --> 00:33:22,610
update those lights so DB n DN is also

00:33:19,350 --> 00:33:22,610
now using a system d

00:33:23,520 --> 00:33:33,390
so I have already shown you guys

00:33:26,550 --> 00:33:35,400
bootable containers so I guess I don't

00:33:33,390 --> 00:33:39,110
I'm just checking what what other

00:33:35,400 --> 00:33:44,070
examples i have here install a young

00:33:39,110 --> 00:33:49,230
yeah how about creating a container with

00:33:44,070 --> 00:33:52,430
Santos in it sounds good answer answer

00:33:49,230 --> 00:33:52,430
is still supposed to be yes

00:33:59,970 --> 00:34:10,220
so I already have installed young on

00:34:07,220 --> 00:34:10,220
opensuse

00:34:11,869 --> 00:34:16,720
so let's create another directory

00:34:17,750 --> 00:34:26,030
I already have a couple of those so I

00:34:22,520 --> 00:34:33,080
need to be creatively regarding the

00:34:26,030 --> 00:34:39,440
naming so what I need to do is manually

00:34:33,080 --> 00:34:43,750
create a RPM database like that so with

00:34:39,440 --> 00:34:47,389
RPM I'm creating a database and

00:34:43,750 --> 00:34:49,159
unfortunately oh I just I just nuked my

00:34:47,389 --> 00:34:55,929
previous container at least in terms of

00:34:49,159 --> 00:34:55,929
rpms okay let me let me see

00:34:57,780 --> 00:35:00,800
I need to

00:35:02,660 --> 00:35:10,489
so fine sent just an RPM database and

00:35:08,460 --> 00:35:10,489
then

00:35:15,369 --> 00:35:18,809
I need to create

00:35:21,869 --> 00:35:27,559
then it's not not really helpful

00:35:30,010 --> 00:35:39,609
and not Santos but it will be sent I

00:35:34,839 --> 00:35:39,609
need to install something

00:35:40,109 --> 00:35:45,349
and this is actually the URL to the

00:35:50,950 --> 00:35:55,210
this is a really awkward

00:36:11,410 --> 00:36:17,470
I apologize for these guys that also you

00:36:15,819 --> 00:36:20,490
know in this in this position is not

00:36:17,470 --> 00:36:20,490
also not the best

00:36:24,990 --> 00:36:27,920
Santos

00:36:28,140 --> 00:36:36,270
send the Santos dash and then this one

00:36:33,830 --> 00:36:38,750
okay night seems that I have a complete

00:36:36,270 --> 00:36:38,750
come online

00:36:41,070 --> 00:36:44,730
okay so let's see

00:36:44,869 --> 00:36:52,420
now I have a couple of repositories also

00:36:49,130 --> 00:36:52,420
for for Santos

00:36:52,620 --> 00:37:00,150
and now I need to install some packages

00:36:58,090 --> 00:37:00,150
you

00:37:07,310 --> 00:37:13,380
in star of sand

00:37:10,450 --> 00:37:13,380
like that

00:37:18,280 --> 00:37:25,510
so

00:37:20,270 --> 00:37:28,850
did you do it as you can see yum is

00:37:25,510 --> 00:37:31,340
picking up the the meta information the

00:37:28,850 --> 00:37:33,770
repository information and that's

00:37:31,340 --> 00:37:36,160
basically just another installation

00:37:33,770 --> 00:37:36,160
process

00:37:38,340 --> 00:37:41,360
what kind of

00:37:43,570 --> 00:37:47,270
actually and so the question is what

00:37:46,070 --> 00:37:50,060
kind of resources do you have available

00:37:47,270 --> 00:37:53,740
for the default container there is no

00:37:50,060 --> 00:37:57,020
limit currently but you can you can put

00:37:53,740 --> 00:38:00,650
limits on the only number for example

00:37:57,020 --> 00:38:03,250
cpus CPU pinning and all of these you

00:38:00,650 --> 00:38:06,250
can do that using a kernel see groups

00:38:03,250 --> 00:38:06,250
okay

00:38:07,500 --> 00:38:12,700
so

00:38:09,200 --> 00:38:12,700
while this is choco going on

00:38:15,170 --> 00:38:20,440
so I'm quite sure that you guys believe

00:38:18,260 --> 00:38:25,240
me that this will be this will be

00:38:20,440 --> 00:38:29,510
delivering a an operating system image

00:38:25,240 --> 00:38:33,460
accept it now it's with Santos I happen

00:38:29,510 --> 00:38:33,460
to have already a couple of centers

00:38:33,819 --> 00:38:43,309
images so why don't I just start up a

00:38:37,609 --> 00:38:50,530
container and I will be booting instead

00:38:43,309 --> 00:38:50,530
of opensuse let's use CentOS 7

00:38:50,960 --> 00:38:57,619
and you guys you can see that it's

00:38:54,230 --> 00:39:00,589
almost instantaneous so the the boots

00:38:57,619 --> 00:39:06,640
time is very short and I just happen to

00:39:00,589 --> 00:39:06,640
have a word

00:39:09,210 --> 00:39:17,090
as you can see this is a Santos seven

00:39:12,630 --> 00:39:17,090
and let's see is

00:39:18,670 --> 00:39:25,820
and what suppose what's that

00:39:23,040 --> 00:39:25,820
update

00:39:26,109 --> 00:39:32,890
so it's it's a basically working

00:39:29,589 --> 00:39:35,380
software management stack as well and

00:39:32,890 --> 00:39:38,220
usually young takes a bit longer than

00:39:35,380 --> 00:39:38,220
the end zipper

00:39:40,150 --> 00:39:45,370
so

00:39:42,370 --> 00:39:45,370
so

00:39:46,840 --> 00:39:54,070
yes sister assistant en spawn is the

00:39:51,160 --> 00:40:00,460
utility that actually creates the the

00:39:54,070 --> 00:40:02,850
container and also because I won't be

00:40:00,460 --> 00:40:02,850
doing this

00:40:05,440 --> 00:40:12,550
let me see Mount so as you can see there

00:40:10,150 --> 00:40:15,760
are a couple of months here and the most

00:40:12,550 --> 00:40:18,849
notably you will need a proc file system

00:40:15,760 --> 00:40:21,700
and you will need some kind of a def

00:40:18,849 --> 00:40:24,579
file system so all these all these

00:40:21,700 --> 00:40:28,150
mountains will be done by the system d

00:40:24,579 --> 00:40:31,910
and spawn utility while building up the

00:40:28,150 --> 00:40:34,440
container yes question

00:40:31,910 --> 00:40:36,630
networking very good question that was

00:40:34,440 --> 00:40:40,619
that would have been one of my follower

00:40:36,630 --> 00:40:44,180
next topic actually but let's see so do

00:40:40,619 --> 00:40:48,810
I have a network I don't have a an IP

00:40:44,180 --> 00:40:51,510
stack so lets you know I I go back to

00:40:48,810 --> 00:40:55,500
opensuse on bit more familiar with with

00:40:51,510 --> 00:40:59,240
opensuse in this regard and a bit by the

00:40:55,500 --> 00:41:04,740
way this was just the the way how to

00:40:59,240 --> 00:41:10,440
exit from a running container which

00:41:04,740 --> 00:41:13,140
happens to be the you know the control

00:41:10,440 --> 00:41:17,310
and then the skipper square bracket

00:41:13,140 --> 00:41:19,650
closing three times in a row and an

00:41:17,310 --> 00:41:24,660
system the end spawn will exit the

00:41:19,650 --> 00:41:31,150
container I also could have a good have

00:41:24,660 --> 00:41:33,560
site machine CTL let's see how

00:41:31,150 --> 00:41:36,650
terminate

00:41:33,560 --> 00:41:39,050
and the container name but I just did it

00:41:36,650 --> 00:41:41,330
another way so at this point I don't I

00:41:39,050 --> 00:41:43,910
don't have any containers running your

00:41:41,330 --> 00:41:47,800
question was about how about networking

00:41:43,910 --> 00:41:47,800
inside the container so let's see

00:41:47,950 --> 00:41:54,160
instead of Santos i will be using

00:41:51,350 --> 00:41:54,160
opensuse

00:41:59,430 --> 00:42:04,819
what happened here route

00:42:07,420 --> 00:42:12,760
so as you can see and you need you need

00:42:10,990 --> 00:42:16,690
to take my word for it but this is the

00:42:12,760 --> 00:42:22,150
exact same output as would be on a on my

00:42:16,690 --> 00:42:26,500
so this is my physical machine and you

00:42:22,150 --> 00:42:28,809
know let's see quite similar isn't it so

00:42:26,500 --> 00:42:32,530
I have I have the same networking stack

00:42:28,809 --> 00:42:36,220
available by default on the container I

00:42:32,530 --> 00:42:39,970
can do there is a system the end spawn

00:42:36,220 --> 00:42:42,420
has a number of capabilities in terms of

00:42:39,970 --> 00:42:46,450
you know following not allowing

00:42:42,420 --> 00:42:51,880
interfaces you can put a a like a tun

00:42:46,450 --> 00:42:56,890
tun tun tap device on on the container

00:42:51,880 --> 00:42:59,230
so you're you have quite some tools to

00:42:56,890 --> 00:43:02,559
deal with a bit networking and from

00:42:59,230 --> 00:43:05,490
inside the container obviously I can do

00:43:02,559 --> 00:43:05,490
for example a

00:43:06,299 --> 00:43:11,489
okay thing is not to the HEPA that

00:43:08,489 --> 00:43:15,289
doesn't happen to be installed so let me

00:43:11,489 --> 00:43:15,289
see there is no zipper

00:43:18,170 --> 00:43:25,330
but you need take my word for it you can

00:43:22,430 --> 00:43:28,520
you have access during the

00:43:25,330 --> 00:43:30,770
initialization of the container system

00:43:28,520 --> 00:43:35,690
the end spawn by default actually also

00:43:30,770 --> 00:43:38,420
copies the /a THC resolv.conf file so

00:43:35,690 --> 00:43:40,780
you also have dns resolving inside the

00:43:38,420 --> 00:43:40,780
container

00:43:43,630 --> 00:43:51,920
yes yes yeah so this is basically you

00:43:48,890 --> 00:43:54,620
could also you know in that regard you

00:43:51,920 --> 00:43:57,770
need to tell to a system the end spawn

00:43:54,620 --> 00:44:00,290
don't use the default networking

00:43:57,770 --> 00:44:03,470
interfaces of the of the host but you

00:44:00,290 --> 00:44:07,880
know you will be using for example a ton

00:44:03,470 --> 00:44:09,920
tap device or interface okay and with

00:44:07,880 --> 00:44:12,110
bridging or routing you have you have

00:44:09,920 --> 00:44:15,790
all the networking capabilities that you

00:44:12,110 --> 00:44:15,790
want yeah

00:44:18,860 --> 00:44:21,860
soul

00:44:24,510 --> 00:44:34,080
and let me just start this up again and

00:44:29,880 --> 00:44:39,490
just show machine CTL this is my

00:44:34,080 --> 00:44:44,480
container running and status

00:44:39,490 --> 00:44:46,700
opensuse 13.2 and this is here you can

00:44:44,480 --> 00:44:49,970
see the the process is running inside

00:44:46,700 --> 00:44:54,670
the container and this is really just a

00:44:49,970 --> 00:44:54,670
regular layout of system

00:44:58,750 --> 00:45:02,820
so and

00:45:05,160 --> 00:45:14,049
yeah that's a also other niceties like

00:45:08,200 --> 00:45:18,400
if I log into the the container hostname

00:45:14,049 --> 00:45:22,259
CTL it will show you it will show me the

00:45:18,400 --> 00:45:28,450
this is my hostname and it it is a

00:45:22,259 --> 00:45:30,970
container it happens to have a

00:45:28,450 --> 00:45:32,650
particular ID what kind of

00:45:30,970 --> 00:45:34,809
virtualization technology i'm using what

00:45:32,650 --> 00:45:38,009
operating system am i using and the

00:45:34,809 --> 00:45:38,009
architecture so

00:45:40,050 --> 00:45:46,600
as I mentioned I could shut down the the

00:45:44,350 --> 00:45:48,520
container by typing control and then

00:45:46,600 --> 00:45:51,369
sports square bracket bracket closing

00:45:48,520 --> 00:45:56,580
three times in a row or I can just say

00:45:51,369 --> 00:46:00,000
in it 0 and now my container has

00:45:56,580 --> 00:46:00,000
basically shut down

00:46:02,430 --> 00:46:08,849
or I also could have used the Machine

00:46:05,940 --> 00:46:11,880
CTL terminate so there are there are

00:46:08,849 --> 00:46:14,270
number of ways to deal with with these

00:46:11,880 --> 00:46:14,270
containers

00:46:14,929 --> 00:46:22,750
this was the the networking part

00:46:19,360 --> 00:46:26,940
and there's also the possibility to

00:46:22,750 --> 00:46:31,770
integrate the the journal of the

00:46:26,940 --> 00:46:31,770
container with the whole system enter

00:46:38,240 --> 00:46:45,720
it tends to say my people yes

00:46:42,400 --> 00:46:49,980
now because i'm using the same interface

00:46:45,720 --> 00:46:49,980
let's let's let's show

00:47:01,170 --> 00:47:06,260
so I'm inside the container and so these

00:47:04,710 --> 00:47:09,839
are these are basically the same

00:47:06,260 --> 00:47:12,299
interfaces that I have on my host system

00:47:09,839 --> 00:47:16,460
but you can you can instruct and spondee

00:47:12,299 --> 00:47:19,140
to you know not to pass on all the

00:47:16,460 --> 00:47:21,200
interfaces by the which it does by

00:47:19,140 --> 00:47:21,200
default

00:47:32,970 --> 00:47:37,599
the same the same way that you do with

00:47:35,500 --> 00:47:41,470
other virtualization technologies so you

00:47:37,599 --> 00:47:44,049
you are using you use a tune-up

00:47:41,470 --> 00:47:47,849
interface and you can use bridging on

00:47:44,049 --> 00:47:51,539
the host you can you can use

00:47:47,849 --> 00:47:51,539
masquerading stuff like that

00:47:53,619 --> 00:48:02,170
okay so that that that might be not

00:47:56,349 --> 00:48:05,230
buying the interesting let me shut shut

00:48:02,170 --> 00:48:09,150
of the container again and now I'll try

00:48:05,230 --> 00:48:09,150
to what's the exact

00:48:11,230 --> 00:48:14,010
will be

00:48:15,900 --> 00:48:21,349
tonight's a journal CTL mean f

00:48:23,030 --> 00:48:29,920
I'm not sure that maybe there's a issue

00:48:25,640 --> 00:48:29,920
here let me see

00:48:30,170 --> 00:48:33,550
bling Journal host

00:48:40,079 --> 00:48:42,769
ok

00:48:44,300 --> 00:48:49,150
there's also some unexpected again here

00:48:50,850 --> 00:48:56,160
anyway so I'm moving on

00:48:58,280 --> 00:49:06,260
so it's obvious now that you can you can

00:49:02,750 --> 00:49:10,280
do this manually but how about having

00:49:06,260 --> 00:49:12,260
containers run like services and it just

00:49:10,280 --> 00:49:16,610
so happens that you can you can

00:49:12,260 --> 00:49:22,100
integrate the the container with a bit

00:49:16,610 --> 00:49:26,630
systemd and have systemd in started up

00:49:22,100 --> 00:49:31,610
at the during boot and for that we need

00:49:26,630 --> 00:49:35,110
to create a unit file for for systemd I

00:49:31,610 --> 00:49:39,830
just happen to have already one of those

00:49:35,110 --> 00:49:46,390
so I just get out here and let me show

00:49:39,830 --> 00:49:48,730
you system and then open to the service

00:49:46,390 --> 00:49:50,980
so this is a unitary system the unit

00:49:48,730 --> 00:49:55,000
file for those of you who never seen one

00:49:50,980 --> 00:49:59,529
before and there are a couple of

00:49:55,000 --> 00:50:03,670
mandatory sections inside this file and

00:49:59,529 --> 00:50:05,890
this is actually one of the the ones

00:50:03,670 --> 00:50:09,039
that describes the how-to did the

00:50:05,890 --> 00:50:10,630
service how to start the service and it

00:50:09,039 --> 00:50:14,309
the service happens to be a container

00:50:10,630 --> 00:50:14,309
now okay

00:50:14,430 --> 00:50:23,760
so i will be using the same utility the

00:50:21,030 --> 00:50:27,740
tools as before manually except it's

00:50:23,760 --> 00:50:32,160
it's done done it will be started with

00:50:27,740 --> 00:50:36,480
by system d by default so let me see

00:50:32,160 --> 00:50:41,040
systemctl status and then open to the 13

00:50:36,480 --> 00:50:46,200
to container zero as you can see it's

00:50:41,040 --> 00:50:49,589
not it's not running what we can see

00:50:46,200 --> 00:50:52,589
here on top is that system d lets us

00:50:49,589 --> 00:50:55,470
know that ok this is this service has

00:50:52,589 --> 00:50:59,099
this particular description it is loaded

00:50:55,470 --> 00:51:02,790
from that from that location it is

00:50:59,099 --> 00:51:05,819
currently disabled and disabled means

00:51:02,790 --> 00:51:09,059
that you can start the content service

00:51:05,819 --> 00:51:14,220
but a system d won't started

00:51:09,059 --> 00:51:17,160
automatically during boot ok so if i

00:51:14,220 --> 00:51:20,190
would want to start it I could do that

00:51:17,160 --> 00:51:22,370
right right now like this or I can

00:51:20,190 --> 00:51:26,060
enable it first

00:51:22,370 --> 00:51:31,310
and then have system status and it's an

00:51:26,060 --> 00:51:33,400
it's enabled now and I can just start it

00:51:31,310 --> 00:51:33,400
up

00:51:33,420 --> 00:51:36,829
and by now

00:51:37,110 --> 00:51:41,210
hmm okay

00:51:43,370 --> 00:51:48,420
status

00:51:45,660 --> 00:51:50,660
okay failure what's what's happening

00:51:48,420 --> 00:51:50,660
here

00:51:58,799 --> 00:52:05,630
could not terminate no machine opensuse

00:52:02,630 --> 00:52:05,630
c0

00:52:11,640 --> 00:52:14,330
sorry

00:52:19,030 --> 00:52:26,830
filtering directory not empty ok maybe

00:52:24,340 --> 00:52:28,180
is that because I tried the the journal

00:52:26,830 --> 00:52:32,610
integration before i'm not sure but

00:52:28,180 --> 00:52:32,610
let's try to remove that

00:52:34,289 --> 00:52:37,400
I don't need though

00:52:46,260 --> 00:52:55,970
ok so it appears to be running

00:52:52,430 --> 00:53:01,100
and with machine CTL it shows up as a

00:52:55,970 --> 00:53:06,590
the container and basically I have I

00:53:01,100 --> 00:53:09,410
have it over there so as you can see I

00:53:06,590 --> 00:53:14,230
and you know how this will be started is

00:53:09,410 --> 00:53:14,230
defined by the unit file

00:53:15,750 --> 00:53:20,760
and it will be started as part of the

00:53:18,960 --> 00:53:25,300
machine target which is one of the

00:53:20,760 --> 00:53:29,630
built-in targets for for systemd okay

00:53:25,300 --> 00:53:32,240
now it's also interesting that how would

00:53:29,630 --> 00:53:37,250
you is suppose in this case my container

00:53:32,240 --> 00:53:39,650
contains has actual runtime environment

00:53:37,250 --> 00:53:41,780
but suppose I'm running an Apache server

00:53:39,650 --> 00:53:47,120
and nothing else inside of the container

00:53:41,780 --> 00:53:50,660
so how is debugging being done how can

00:53:47,120 --> 00:53:52,940
you verify what how things look like

00:53:50,660 --> 00:53:55,390
from inside the container and for that

00:53:52,940 --> 00:54:01,610
there happens to be a very useful

00:53:55,390 --> 00:54:06,920
utility which is the NS enter and

00:54:01,610 --> 00:54:11,950
utility so using this utility I can step

00:54:06,920 --> 00:54:14,950
inside the container and you know have a

00:54:11,950 --> 00:54:14,950
question

00:54:17,009 --> 00:54:21,299
namespace yeah

00:54:21,540 --> 00:54:30,309
so let me find out the exact syntax

00:54:27,150 --> 00:54:33,189
because this is also so

00:54:30,309 --> 00:54:39,069
copied first and then elaborate on the

00:54:33,189 --> 00:54:44,410
on the switches in just a moment machine

00:54:39,069 --> 00:54:46,559
CTL status I need to have the lid of the

00:54:44,410 --> 00:54:46,559
container

00:54:48,140 --> 00:54:52,360
and this is the pit

00:55:03,289 --> 00:55:11,849
what goes wrong here is this one and

00:55:07,170 --> 00:55:15,630
it's not that fit but three four five

00:55:11,849 --> 00:55:19,230
five so what I'm what I'm instructing

00:55:15,630 --> 00:55:21,809
Anna Center to do is to I want to step

00:55:19,230 --> 00:55:25,259
inside the namespace of that process

00:55:21,809 --> 00:55:28,950
which I I identifying it on the comment

00:55:25,259 --> 00:55:31,500
line and I want NS enter to mount all

00:55:28,950 --> 00:55:35,940
the necessary mounts that the the

00:55:31,500 --> 00:55:42,029
container has so for example a network

00:55:35,940 --> 00:55:44,339
bit soft like that and right now as you

00:55:42,029 --> 00:55:49,519
can see i'm inside the container and I

00:55:44,339 --> 00:55:49,519
can do PS stuff like that

00:55:57,950 --> 00:56:06,200
and this is so this is inside also the

00:56:03,109 --> 00:56:07,790
the root directory or the root

00:56:06,200 --> 00:56:11,180
filesystem of the of the container

00:56:07,790 --> 00:56:12,800
itself and as I mentioned this container

00:56:11,180 --> 00:56:14,720
happens to have a runtime runtime

00:56:12,800 --> 00:56:18,079
environment with shells stuff like that

00:56:14,720 --> 00:56:20,470
but not necessarily all of the the

00:56:18,079 --> 00:56:23,750
containers that you want to have will be

00:56:20,470 --> 00:56:27,650
furnished with those tools okay and

00:56:23,750 --> 00:56:30,320
using NS enter you can just enter the it

00:56:27,650 --> 00:56:34,310
you can just well step into the

00:56:30,320 --> 00:56:40,130
container and and look from the to the

00:56:34,310 --> 00:56:44,090
outside from the from the container okay

00:56:40,130 --> 00:56:47,960
I think that I'm exactly on time in

00:56:44,090 --> 00:56:50,920
terms of the presentation are there any

00:56:47,960 --> 00:56:50,920
other burning questions

00:56:56,220 --> 00:57:03,900
there will be available I don't know

00:57:00,240 --> 00:57:06,750
what the mechanism is for the organizers

00:57:03,900 --> 00:57:13,369
to distribute but if you just drop me an

00:57:06,750 --> 00:57:13,369
email and that changed

00:57:17,319 --> 00:57:23,799
this is the that's that's my email if

00:57:21,039 --> 00:57:25,299
you if you would like to and I will be

00:57:23,799 --> 00:57:30,690
also publishing these these slides on

00:57:25,299 --> 00:57:30,690
the SlideShare so ok any other questions

00:57:38,760 --> 00:57:44,190
is the question is a user capable of

00:57:42,190 --> 00:57:46,720
starting a container I would say no

00:57:44,190 --> 00:57:49,030
because you need you need to you need to

00:57:46,720 --> 00:57:52,620
bind mount a couple of directories and

00:57:49,030 --> 00:57:55,000
as a user you cannot necessarily do that

00:57:52,620 --> 00:57:58,920
yeah

00:57:55,000 --> 00:57:58,920
okay any other questions

00:57:59,500 --> 00:58:04,540
then thank you thanks a lot for your

00:58:02,110 --> 00:58:06,880
attention and bearing with me during a

00:58:04,540 --> 00:58:10,980
bit and helping out with troubleshooting

00:58:06,880 --> 00:58:10,980

YouTube URL: https://www.youtube.com/watch?v=UTtzkmN2B3Y


