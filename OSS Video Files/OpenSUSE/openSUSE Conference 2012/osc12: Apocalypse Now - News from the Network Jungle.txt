Title: osc12: Apocalypse Now - News from the Network Jungle
Publication date: 2012-10-24
Playlist: openSUSE Conference 2012
Description: 
	osc12: Apocalypse Now - News from the Network Jungle from openSUSE. Like this? Watch the latest episode of openSUSE on Blip! http://blip.tv/opensuse/watch 

Olaf Kirch, Marius Tomaschewski - McCoy

See all episodes of openSUSE http://blip.tv/opensuse#EpisodeArchive
Visit openSUSE's series page http://blip.tv/opensuse
Captions: 
	00:00:23,350 --> 00:00:29,020
okay thank you very much um welcome to

00:00:26,830 --> 00:00:31,779
this presentation I hope you can

00:00:29,020 --> 00:00:35,310
understand me clearly if I'm starting to

00:00:31,779 --> 00:00:38,739
mumble or a sound incoherent let me know

00:00:35,310 --> 00:00:41,020
and of course we're welcoming all of you

00:00:38,739 --> 00:00:45,280
to the subsequent buff on this entire

00:00:41,020 --> 00:00:48,100
topic together with Pavel where you can

00:00:45,280 --> 00:00:52,660
throw tomatoes at us talk to us about

00:00:48,100 --> 00:00:54,520
what should be done and so on so a quick

00:00:52,660 --> 00:00:58,360
overview what are we going to talk about

00:00:54,520 --> 00:01:00,839
on first we're going to look again at

00:00:58,360 --> 00:01:03,190
why change some white change at all and

00:01:00,839 --> 00:01:05,710
in the second part we want to talk a

00:01:03,190 --> 00:01:08,409
little bit about what drove us to write

00:01:05,710 --> 00:01:10,690
yet another networking demon and the

00:01:08,409 --> 00:01:13,900
design goals that we wanted to pursue

00:01:10,690 --> 00:01:18,670
their and what we believe needs to be in

00:01:13,900 --> 00:01:21,640
the network management area all right so

00:01:18,670 --> 00:01:25,870
um let's go back in time a little bit

00:01:21,640 --> 00:01:29,079
just a little bit um and look where

00:01:25,870 --> 00:01:30,969
we're coming from but before some words

00:01:29,079 --> 00:01:33,310
of encouragement most of you probably

00:01:30,969 --> 00:01:36,490
know this so this is a quote from

00:01:33,310 --> 00:01:38,500
Douglas Adams basically it says well

00:01:36,490 --> 00:01:40,899
whenever you figure out what the world

00:01:38,500 --> 00:01:42,820
is doing really then it's going to be

00:01:40,899 --> 00:01:45,039
replaced by something incredibly more

00:01:42,820 --> 00:01:46,600
complex and difficult and this is really

00:01:45,039 --> 00:01:51,909
what's happening in the network world

00:01:46,600 --> 00:01:55,960
every couple of years as well so back in

00:01:51,909 --> 00:01:59,409
1992 the world was flat it was mostly a

00:01:55,960 --> 00:02:01,060
disk so most of the people I knew and

00:01:59,409 --> 00:02:04,090
most of the people who were in the Linux

00:02:01,060 --> 00:02:06,310
community at the time they had a modem

00:02:04,090 --> 00:02:08,500
that they were tinkering with and

00:02:06,310 --> 00:02:11,380
running uucp over it and essentially to

00:02:08,500 --> 00:02:15,910
network applications email and use net

00:02:11,380 --> 00:02:19,030
um configuration was mostly writing a

00:02:15,910 --> 00:02:21,160
cron job and the big complexity in there

00:02:19,030 --> 00:02:23,710
was trying to figure out why you're

00:02:21,160 --> 00:02:28,180
stupid and expensive modem wasn't doing

00:02:23,710 --> 00:02:30,580
what it was supposed to do um a couple

00:02:28,180 --> 00:02:33,250
years later the scene had changed

00:02:30,580 --> 00:02:36,410
dramatically so after a lot of internal

00:02:33,250 --> 00:02:41,210
struggles miner Wars and so on we had

00:02:36,410 --> 00:02:42,980
IP networking in Linux arm compared to

00:02:41,210 --> 00:02:47,900
what we have today was still somewhat

00:02:42,980 --> 00:02:50,060
simplistic but in at its core a lot of

00:02:47,900 --> 00:02:54,290
the functionality that we have today was

00:02:50,060 --> 00:02:57,110
there already um we had Ethernet we had

00:02:54,290 --> 00:02:59,120
some networking protocols devices that

00:02:57,110 --> 00:03:04,820
don't exist anymore or nobody really

00:02:59,120 --> 00:03:10,570
uses leixlip ISDN was there and went

00:03:04,820 --> 00:03:12,620
away sometime later ipx as well um the

00:03:10,570 --> 00:03:16,580
infrastructure that was sitting on top

00:03:12,620 --> 00:03:18,140
of that was still very simple bootp that

00:03:16,580 --> 00:03:21,500
was about all you could do and the rest

00:03:18,140 --> 00:03:23,210
were scripting in to enter the entire

00:03:21,500 --> 00:03:25,760
network thing was configured at boot

00:03:23,210 --> 00:03:27,890
time in a kind of fire-and-forget mode

00:03:25,760 --> 00:03:30,380
you just wrote a script did something

00:03:27,890 --> 00:03:32,090
and then the network was running and if

00:03:30,380 --> 00:03:35,270
you really needed to change something at

00:03:32,090 --> 00:03:37,010
at runtime you just became rude typed in

00:03:35,270 --> 00:03:43,880
some commands or render script and then

00:03:37,010 --> 00:03:46,610
you had it um in 2002 things had gotten

00:03:43,880 --> 00:03:50,270
more complex so I'm lying a little bit

00:03:46,610 --> 00:03:54,050
so ipv6 wasn't introduced until I think

00:03:50,270 --> 00:03:56,390
around 2004 but just for the effect of

00:03:54,050 --> 00:03:59,240
doing things in five years steps I'm

00:03:56,390 --> 00:04:01,430
lying a bit here but essentially we had

00:03:59,240 --> 00:04:04,190
two different IP versions by that time

00:04:01,430 --> 00:04:07,730
with a lot of added complexity you can

00:04:04,190 --> 00:04:11,090
see the infrastructure layer underneath

00:04:07,730 --> 00:04:14,630
the user space stuff has grown there was

00:04:11,090 --> 00:04:16,940
router advertisements ipv6 mobility

00:04:14,630 --> 00:04:21,590
stuff which was a very hot topic at that

00:04:16,940 --> 00:04:24,320
time and then it died fortunately IPSec

00:04:21,590 --> 00:04:25,540
was around and at as you can see at the

00:04:24,320 --> 00:04:28,790
bottom of it there's a lot more

00:04:25,540 --> 00:04:33,110
additional interface types that are

00:04:28,790 --> 00:04:35,870
being supported um wireless was in its

00:04:33,110 --> 00:04:41,750
first incarnation still doing wireless

00:04:35,870 --> 00:04:44,780
WEP no WPA we also had become cross

00:04:41,750 --> 00:04:47,539
architecture with s390 devices and so on

00:04:44,780 --> 00:04:49,760
and most importantly there were things

00:04:47,539 --> 00:04:50,390
like bridging and bonding where you

00:04:49,760 --> 00:04:52,400
build

00:04:50,390 --> 00:04:55,160
virtual devices on top of other devices

00:04:52,400 --> 00:04:58,360
which started to introduce some problems

00:04:55,160 --> 00:05:00,530
into the network configuration like

00:04:58,360 --> 00:05:02,600
dependencies when you bring up your

00:05:00,530 --> 00:05:04,490
device you may have to make sure that

00:05:02,600 --> 00:05:06,140
all the constituent devices come up

00:05:04,490 --> 00:05:09,620
first and then you can build the one on

00:05:06,140 --> 00:05:11,870
top and so that's where the first real

00:05:09,620 --> 00:05:16,610
nasty complexity started to creep into

00:05:11,870 --> 00:05:19,130
um at the site node bootp went away and

00:05:16,610 --> 00:05:23,990
died in some dirty corner and was

00:05:19,130 --> 00:05:26,390
replaced by dhcp um but still network

00:05:23,990 --> 00:05:28,370
configuration was mostly to a very large

00:05:26,390 --> 00:05:31,280
degree aesthetic thing you had your

00:05:28,370 --> 00:05:34,120
scripts that you ran the machine booted

00:05:31,280 --> 00:05:42,160
and then you tended to forget about it

00:05:34,120 --> 00:05:42,160
um things got more complex surprisingly

00:05:42,520 --> 00:05:48,080
we had additionally some more address

00:05:45,350 --> 00:05:53,120
configuration protocols like ipv4 zero

00:05:48,080 --> 00:05:55,580
config ipv6 became more complex wireless

00:05:53,120 --> 00:05:59,270
actually introduced some real security

00:05:55,580 --> 00:06:02,740
now wpa that had its own functionality

00:05:59,270 --> 00:06:07,490
running on the side of everything else

00:06:02,740 --> 00:06:09,650
we had new devices like UMTS or GSM

00:06:07,490 --> 00:06:11,330
modems that had that lived in their own

00:06:09,650 --> 00:06:14,150
world and weren't very well connected

00:06:11,330 --> 00:06:16,640
and we started to have some serious

00:06:14,150 --> 00:06:18,200
internal network users so I think the

00:06:16,640 --> 00:06:21,530
first of them or one of the first of

00:06:18,200 --> 00:06:24,040
them was NFS later on we got I skazhi

00:06:21,530 --> 00:06:26,210
and today we have even more of those and

00:06:24,040 --> 00:06:28,430
all of these things all of these

00:06:26,210 --> 00:06:31,810
internal network users also have an

00:06:28,430 --> 00:06:33,890
impact on what we do in user space um

00:06:31,810 --> 00:06:36,920
probably one of the most prominent

00:06:33,890 --> 00:06:40,700
examples was NFS boot which had its own

00:06:36,920 --> 00:06:42,830
little boot p and dhcp implementation on

00:06:40,700 --> 00:06:46,760
the side trying to bring up your machine

00:06:42,830 --> 00:06:50,600
with NFS root which was yeah not very

00:06:46,760 --> 00:06:53,210
successful code another thing that

00:06:50,600 --> 00:06:55,160
started to appear around that time was

00:06:53,210 --> 00:06:58,100
the divergence between data center and

00:06:55,160 --> 00:07:00,760
end users so aunt users wanted to have

00:06:58,100 --> 00:07:03,290
it simple okay do you have your laptop

00:07:00,760 --> 00:07:04,370
laptops no longer looked like you know

00:07:03,290 --> 00:07:07,550
one of these big

00:07:04,370 --> 00:07:09,680
toolboxes as they did in 95 but they

00:07:07,550 --> 00:07:11,270
were actually like sexy things you could

00:07:09,680 --> 00:07:13,070
carry around and you wanted to plug them

00:07:11,270 --> 00:07:14,720
in and you wanted them to connect to

00:07:13,070 --> 00:07:17,720
your wireless networks all the time and

00:07:14,720 --> 00:07:19,910
that's when network manager was

00:07:17,720 --> 00:07:21,650
originally conceived the data center

00:07:19,910 --> 00:07:23,180
people they didn't want any of that

00:07:21,650 --> 00:07:26,479
fancy stuff they don't carry around

00:07:23,180 --> 00:07:30,020
their machines they want the maximum

00:07:26,479 --> 00:07:32,870
flexibility they want to be able to do

00:07:30,020 --> 00:07:35,120
every to tweak all the knobs that the

00:07:32,870 --> 00:07:37,250
colonel is offering them so they're the

00:07:35,120 --> 00:07:40,460
power users and that their things

00:07:37,250 --> 00:07:42,740
diverged quite a lot so network manager

00:07:40,460 --> 00:07:44,780
was catering to the end-user crowd

00:07:42,740 --> 00:07:47,510
trying to make things as simple as

00:07:44,780 --> 00:07:49,789
possible and when you want to make

00:07:47,510 --> 00:07:52,639
things simple then you have to dump down

00:07:49,789 --> 00:07:54,620
things on the other hand the data center

00:07:52,639 --> 00:07:56,510
people said I don't want anything dumped

00:07:54,620 --> 00:07:58,460
down I want the full power I want all

00:07:56,510 --> 00:08:03,380
the hundred knobs that the colonel gives

00:07:58,460 --> 00:08:05,510
me and I like to stick to my scripts so

00:08:03,380 --> 00:08:08,990
that's where actually the kind of

00:08:05,510 --> 00:08:12,169
divergence started to happen which we

00:08:08,990 --> 00:08:16,430
are still seeing today in between the

00:08:12,169 --> 00:08:18,229
universe changed again um and I kind of

00:08:16,430 --> 00:08:19,940
gave up trying to squeeze all these

00:08:18,229 --> 00:08:22,130
boxes in there and this is a little bit

00:08:19,940 --> 00:08:24,020
like when in when you're doing Tetris

00:08:22,130 --> 00:08:29,260
and you can't rearrange all these boxes

00:08:24,020 --> 00:08:34,070
they pile up and then tilt game over as

00:08:29,260 --> 00:08:36,890
you see even more changes we have I bft

00:08:34,070 --> 00:08:39,500
that we have to accommodate fibre

00:08:36,890 --> 00:08:41,930
channel over ethernet creeps in and

00:08:39,500 --> 00:08:44,930
wants to have its own discovery protocol

00:08:41,930 --> 00:08:46,880
for how you configure it we have you

00:08:44,930 --> 00:08:48,920
have a bunch of vlans in the game for

00:08:46,880 --> 00:08:50,540
instance and all that stuff and there

00:08:48,920 --> 00:08:52,160
are a bunch of technologies that we

00:08:50,540 --> 00:08:56,390
really haven't managed to integrate at

00:08:52,160 --> 00:08:59,330
all like 80 2.1 X for instance for

00:08:56,390 --> 00:09:01,100
authenticated Ethernet and we're not

00:08:59,330 --> 00:09:09,790
doing it I don't think network manager

00:09:01,100 --> 00:09:14,079
is doing or it or hmm it is okay um and

00:09:09,790 --> 00:09:18,050
frankly this whole thing is the mess um

00:09:14,079 --> 00:09:20,180
we have managed to get by with

00:09:18,050 --> 00:09:22,070
the separation between having a network

00:09:20,180 --> 00:09:24,529
management diamond with network manager

00:09:22,070 --> 00:09:26,930
and running the data center still on the

00:09:24,529 --> 00:09:29,089
F up scripts but this isn't going to

00:09:26,930 --> 00:09:30,529
work much longer in the future and this

00:09:29,089 --> 00:09:33,709
is why we wanted to look at something

00:09:30,529 --> 00:09:37,269
different and looking at creative ways

00:09:33,709 --> 00:09:39,769
of addressing this problem again arm

00:09:37,269 --> 00:09:42,140
apologies to the network manager people

00:09:39,769 --> 00:09:44,630
but for the past couple of years the

00:09:42,140 --> 00:09:46,339
network manager experience we had with

00:09:44,630 --> 00:09:48,860
the regressions and trying to get

00:09:46,339 --> 00:09:52,519
functionality included was not a happy

00:09:48,860 --> 00:09:54,829
experience and so which was one of the

00:09:52,519 --> 00:09:56,750
motivations why we decided to okay let's

00:09:54,829 --> 00:09:59,120
start from scratch what would we want to

00:09:56,750 --> 00:10:04,700
do what would we like to see in a

00:09:59,120 --> 00:10:07,370
network management demon um okay so much

00:10:04,700 --> 00:10:11,829
for the introduction um and I'm now

00:10:07,370 --> 00:10:11,829
handing over to molly's for the second

00:10:32,890 --> 00:10:41,630
yeah what hello what we wanted to do is

00:10:36,740 --> 00:10:47,740
to write a network service that provides

00:10:41,630 --> 00:10:52,010
the possibility to managed the complex

00:10:47,740 --> 00:10:58,540
server side and also the user space a

00:10:52,010 --> 00:11:03,740
user end users side arm and we wanted to

00:10:58,540 --> 00:11:10,399
make it a service so you have a demon

00:11:03,740 --> 00:11:14,170
it's extensible you can react unlike

00:11:10,399 --> 00:11:17,089
with normal side scripts you can relate

00:11:14,170 --> 00:11:22,220
to events from the colonel from the

00:11:17,089 --> 00:11:25,370
network and also from the user um and

00:11:22,220 --> 00:11:29,480
you can share the information for

00:11:25,370 --> 00:11:32,180
example some networks change the user

00:11:29,480 --> 00:11:34,490
blocked of turkic the cable or the

00:11:32,180 --> 00:11:39,380
connection is lost so the user gets

00:11:34,490 --> 00:11:45,980
informed and the routing has been

00:11:39,380 --> 00:11:49,730
changed or similar events um we want it

00:11:45,980 --> 00:11:53,839
to be um a high tech chure independent

00:11:49,730 --> 00:12:05,360
um and cover all the special devices

00:11:53,839 --> 00:12:11,690
also um but yeah make make it layered at

00:12:05,360 --> 00:12:18,079
this place um and what we want to do is

00:12:11,690 --> 00:12:22,810
to make the move from the F up word to

00:12:18,079 --> 00:12:22,810
the new word as smooth as possible

00:12:24,480 --> 00:12:34,870
yeah we started independently and there

00:12:31,149 --> 00:12:39,180
were several pieces of code all I've

00:12:34,870 --> 00:12:44,070
started with some monitoring arm and

00:12:39,180 --> 00:12:48,339
then it turned into a rest-based service

00:12:44,070 --> 00:12:52,750
it was working but it was not really

00:12:48,339 --> 00:12:57,459
nice um and then in the second

00:12:52,750 --> 00:13:05,560
interation of this project we moved to

00:12:57,459 --> 00:13:08,440
the bus interface um it needed some time

00:13:05,560 --> 00:13:11,440
to move it to learn a little bit a

00:13:08,440 --> 00:13:18,160
little bit about but now the move is

00:13:11,440 --> 00:13:21,100
done um in the implementation we make

00:13:18,160 --> 00:13:25,540
some decisions about how to how to make

00:13:21,100 --> 00:13:29,410
it we wanted to have a demon or multiple

00:13:25,540 --> 00:13:34,870
d-mail processes are communicating with

00:13:29,410 --> 00:13:40,570
each other using kiba's and providing

00:13:34,870 --> 00:13:47,250
the bus services um and at different at

00:13:40,570 --> 00:13:51,459
different layers um we wanted a

00:13:47,250 --> 00:13:56,040
structured network configuration where

00:13:51,459 --> 00:14:03,880
you have some some clothes entities

00:13:56,040 --> 00:14:06,310
inside of one configuration and at the

00:14:03,880 --> 00:14:13,870
moment we use XML for this tour create

00:14:06,310 --> 00:14:17,290
this tree but yeah the XML is not so

00:14:13,870 --> 00:14:21,760
important it should work mostly

00:14:17,290 --> 00:14:25,660
stateless of course in case of DHCP we

00:14:21,760 --> 00:14:30,790
store the leases somewhere but the demon

00:14:25,660 --> 00:14:35,320
runs and managed the current state you

00:14:30,790 --> 00:14:37,620
can give him policies and on the server

00:14:35,320 --> 00:14:45,510
side you can extend it with

00:14:37,620 --> 00:14:49,410
script um and we decided to make multi

00:14:45,510 --> 00:14:53,900
multiple services the main wicked G

00:14:49,410 --> 00:14:59,580
server process a command-line utility

00:14:53,900 --> 00:15:05,779
arm under the wicket d supplicants like

00:14:59,580 --> 00:15:13,170
VPS applicant dhcp for four and six and

00:15:05,779 --> 00:15:19,290
also outer ipv6 our network many arm

00:15:13,170 --> 00:15:21,960
this is some some policy demon which

00:15:19,290 --> 00:15:24,089
supports interface hot blogging so you

00:15:21,960 --> 00:15:27,420
can take one interface put another one

00:15:24,089 --> 00:15:31,130
and matched another configuration of

00:15:27,420 --> 00:15:35,430
same configuration to another device um

00:15:31,130 --> 00:15:39,510
yeah and finally we also need something

00:15:35,430 --> 00:15:43,529
like user interface graphical user

00:15:39,510 --> 00:15:52,320
interface this means taskbar applet

00:15:43,529 --> 00:16:00,110
which yeah we wouldn't help here because

00:15:52,320 --> 00:16:00,110
we are bought from the non GUI word

00:16:03,360 --> 00:16:21,010
wicked is able to reach the fcgi CFG

00:16:11,830 --> 00:16:27,220
advice and it is able to convert them

00:16:21,010 --> 00:16:30,660
into the wicked configuration and we

00:16:27,220 --> 00:16:36,460
will also provide if up rapper scripts

00:16:30,660 --> 00:16:38,590
so you can completely replace the all

00:16:36,460 --> 00:16:45,910
this config stuff we have in opensuse

00:16:38,590 --> 00:16:50,170
now which we get behind um and we don't

00:16:45,910 --> 00:16:57,090
want to conflict with the existing is

00:16:50,170 --> 00:17:01,440
thrust infrastructure um young but

00:16:57,090 --> 00:17:05,470
replace it and provide the legacy world

00:17:01,440 --> 00:17:25,350
also the legacy interfaces like is up at

00:17:05,470 --> 00:17:28,120
least in the first time yeah um ok

00:17:25,350 --> 00:17:30,340
question on the config files i mean the

00:17:28,120 --> 00:17:34,650
the differences between the red and the

00:17:30,340 --> 00:17:37,770
green ifc FG files are not that big but

00:17:34,650 --> 00:17:41,200
would it also be feasible or possible

00:17:37,770 --> 00:17:44,340
possible probably to also read for

00:17:41,200 --> 00:17:47,500
example debian config yes I mean that's

00:17:44,340 --> 00:17:49,540
another part of the world which would

00:17:47,500 --> 00:17:52,750
probably good to also have support for

00:17:49,540 --> 00:17:54,970
yes of order they didn't work much with

00:17:52,750 --> 00:17:56,980
it so maybe they have totally different

00:17:54,970 --> 00:17:58,600
set of features that's not easy to

00:17:56,980 --> 00:18:04,600
implement or did you did you think about

00:17:58,600 --> 00:18:05,950
that too um yeah it's not a problem to

00:18:04,600 --> 00:18:11,210
add

00:18:05,950 --> 00:18:14,930
parsa for debian config files which

00:18:11,210 --> 00:18:18,320
converts the gbn files into wicked of

00:18:14,930 --> 00:18:20,930
course when you want to use the DB n

00:18:18,320 --> 00:18:23,720
config and start Wicked Witch the debian

00:18:20,930 --> 00:18:27,770
con config using the debian config then

00:18:23,720 --> 00:18:32,240
you are limited to the features that are

00:18:27,770 --> 00:18:35,300
supported by both but this is yeah this

00:18:32,240 --> 00:18:37,250
is the migration time well yeah I mean

00:18:35,300 --> 00:18:38,960
the reason it's currently supporting

00:18:37,250 --> 00:18:40,790
only these two flavors is because of

00:18:38,960 --> 00:18:43,340
course I started with the Susa format

00:18:40,790 --> 00:18:46,670
and the redhead one is reasonably

00:18:43,340 --> 00:18:50,240
similar so that it wasn't a big hassle

00:18:46,670 --> 00:18:52,430
to add support for that stuff to debian

00:18:50,240 --> 00:18:54,620
is just another flavor and I mean

00:18:52,430 --> 00:18:56,090
basically it all boils down to talking

00:18:54,620 --> 00:18:57,830
to the colonel and using the colonel

00:18:56,090 --> 00:18:59,840
features so i don't think there is

00:18:57,830 --> 00:19:06,470
anything outrageously different from a

00:18:59,840 --> 00:19:08,180
semantic point of perspective um there

00:19:06,470 --> 00:19:13,450
is some there are some differences

00:19:08,180 --> 00:19:21,470
between the green and red if CFG files

00:19:13,450 --> 00:19:24,320
for example the green one in bonding you

00:19:21,470 --> 00:19:28,340
have you specified ethernet interfaces

00:19:24,320 --> 00:19:30,680
and on the right side each ethernet

00:19:28,340 --> 00:19:33,110
interface specifies the bonding so it's

00:19:30,680 --> 00:19:39,370
another way around logically different

00:19:33,110 --> 00:19:39,370
but it's just a question of converter

00:19:40,330 --> 00:19:50,350
basically um we have in the deep put

00:19:46,160 --> 00:19:55,460
each interface to some pub at some part

00:19:50,350 --> 00:19:59,830
and for example there is look back

00:19:55,460 --> 00:20:06,370
device and the first ethernet device

00:19:59,830 --> 00:20:10,970
which usually has the if index to UM and

00:20:06,370 --> 00:20:16,910
this makes it sure that when the input

00:20:10,970 --> 00:20:19,040
interface changed the name it it's not a

00:20:16,910 --> 00:20:23,690
problem for us to handle it is

00:20:19,040 --> 00:20:28,400
um we just need to update the name Fleck

00:20:23,690 --> 00:20:33,770
in in the interface um so we don't relay

00:20:28,400 --> 00:20:35,630
on the network interface names um on the

00:20:33,770 --> 00:20:41,990
another site we have the problem that

00:20:35,630 --> 00:20:46,480
without on existing interface we cannot

00:20:41,990 --> 00:20:49,550
create this part and for this we have

00:20:46,480 --> 00:20:56,690
something like a factory where you can

00:20:49,550 --> 00:21:01,970
request the Creator interface on and we

00:20:56,690 --> 00:21:05,780
associate it with a link layer type like

00:21:01,970 --> 00:21:14,690
look back is net if loop back and it

00:21:05,780 --> 00:21:20,200
energy devices as native Ethernet um on

00:21:14,690 --> 00:21:25,010
the there are some methods for each

00:21:20,200 --> 00:21:29,180
object and these are the common methods

00:21:25,010 --> 00:21:32,120
like firewall up firewall down change

00:21:29,180 --> 00:21:40,400
device link up link down network bomb

00:21:32,120 --> 00:21:42,380
then request these drop list and finally

00:21:40,400 --> 00:21:48,590
we have the configuration of the network

00:21:42,380 --> 00:21:53,180
interface um you the name flag can be

00:21:48,590 --> 00:21:56,900
used to identify the interface but must

00:21:53,180 --> 00:22:01,820
not be there are some another

00:21:56,900 --> 00:22:05,120
possibility is like identify arm tech to

00:22:01,820 --> 00:22:09,170
match for example by MAC address or x

00:22:05,120 --> 00:22:11,510
pci bus number or whatever so you don't

00:22:09,170 --> 00:22:15,050
need to rename the interface using Hugh

00:22:11,510 --> 00:22:20,300
def rules but you can match it to some

00:22:15,050 --> 00:22:23,780
configuration by rule um and then you

00:22:20,300 --> 00:22:29,380
can specify some areas to the interface

00:22:23,780 --> 00:22:32,750
and have a concern name for this and

00:22:29,380 --> 00:22:38,150
each part of the layer that we have

00:22:32,750 --> 00:22:40,960
in there on the interface is in separate

00:22:38,150 --> 00:22:44,630
note in the configuration for example

00:22:40,960 --> 00:22:46,670
specific attributes are in internet link

00:22:44,630 --> 00:22:50,210
specific attributes which are common to

00:22:46,670 --> 00:22:57,920
all interfaces are in link firewall in

00:22:50,210 --> 00:23:01,430
firewall and yeah ipv4 and 6 with static

00:22:57,920 --> 00:23:05,870
and dhcp which can say can be also mixed

00:23:01,430 --> 00:23:20,300
together so you can use the HTTP but add

00:23:05,870 --> 00:23:24,170
statically addresses also um yeah and I

00:23:20,300 --> 00:23:26,720
wanted to add one remark here we ought

00:23:24,170 --> 00:23:31,760
about layering and why it's important to

00:23:26,720 --> 00:23:34,040
do so and this this slide here it shows

00:23:31,760 --> 00:23:36,590
essentially the layering approach that

00:23:34,040 --> 00:23:39,380
we're taking with the interfaces so the

00:23:36,590 --> 00:23:41,750
only part that is really specific to the

00:23:39,380 --> 00:23:43,790
ethernet link layer is the very first

00:23:41,750 --> 00:23:48,020
class up there and the change device

00:23:43,790 --> 00:23:50,450
method all the other ones are generic so

00:23:48,020 --> 00:23:53,450
supporting a new interface type just

00:23:50,450 --> 00:23:57,740
means you have to add one basic d-bus

00:23:53,450 --> 00:24:00,170
class 1d bus interface for this link

00:23:57,740 --> 00:24:02,690
layer type and you inherit all the other

00:24:00,170 --> 00:24:04,940
methods and similarly if you want to

00:24:02,690 --> 00:24:07,460
introduce a new functionality a

00:24:04,940 --> 00:24:10,310
different layer for instance after all

00:24:07,460 --> 00:24:12,770
the addresses have been discovered you

00:24:10,310 --> 00:24:15,740
need some specific activity to happen

00:24:12,770 --> 00:24:18,530
for all interfaces you just introduce

00:24:15,740 --> 00:24:20,660
another D bus interface that applies to

00:24:18,530 --> 00:24:23,540
all linked layers and there is no

00:24:20,660 --> 00:24:26,030
messing with it with scripts or hand

00:24:23,540 --> 00:24:29,180
coding something when demon you just add

00:24:26,030 --> 00:24:31,970
that new indie bus interface and say ok

00:24:29,180 --> 00:24:33,530
you apply to all linked layers and then

00:24:31,970 --> 00:24:36,500
you go and all of a sudden this stuff

00:24:33,530 --> 00:24:39,620
will also be handled across the board

00:24:36,500 --> 00:24:41,929
for all Internet in interface types so

00:24:39,620 --> 00:24:45,350
that's the whole beauty of the concept

00:24:41,929 --> 00:24:46,119
that it's very extensible in both ways

00:24:45,350 --> 00:24:48,759
so Bo

00:24:46,119 --> 00:24:51,639
in terms of adding new link layers and

00:24:48,759 --> 00:24:55,679
in terms of adding new protocol layers

00:24:51,639 --> 00:24:55,679
somewhere in between or on top of it

00:25:01,139 --> 00:25:10,869
yeah currents that state of the project

00:25:05,019 --> 00:25:15,189
is um its source only at the moment you

00:25:10,869 --> 00:25:18,659
can get it from get oreos we have some

00:25:15,189 --> 00:25:22,119
packages in open zoo the build service

00:25:18,659 --> 00:25:25,329
but you have to take care when you

00:25:22,119 --> 00:25:30,939
install the current packages you may

00:25:25,329 --> 00:25:33,159
find there because those at least they

00:25:30,939 --> 00:25:36,639
conflict with this config intent work

00:25:33,159 --> 00:25:39,309
manager um so when you know what you are

00:25:36,639 --> 00:25:44,399
doing then you can use the packages but

00:25:39,309 --> 00:25:49,169
at the moment it's a little bit cause um

00:25:44,399 --> 00:25:55,869
we have implemented internet wireless

00:25:49,169 --> 00:26:02,319
yeah VLAN bridge bond and this is yeah

00:25:55,869 --> 00:26:05,139
almost complete of fairly complete we

00:26:02,319 --> 00:26:08,739
have a lot of code for the wireless

00:26:05,139 --> 00:26:13,869
support we communicate with the VPS

00:26:08,739 --> 00:26:16,959
applicant and can use it um there are

00:26:13,869 --> 00:26:21,909
still some problems and in last time

00:26:16,959 --> 00:26:23,889
there was some back so it's maybe when

00:26:21,909 --> 00:26:29,769
you test that two months ago or one

00:26:23,889 --> 00:26:36,489
month ago it may be didn't worked we

00:26:29,769 --> 00:26:44,589
have first open VPN support um it may

00:26:36,489 --> 00:26:49,899
work we are using or you are we are

00:26:44,589 --> 00:26:54,309
supporting modems already but it's also

00:26:49,899 --> 00:26:59,440
in some early state we have built in

00:26:54,309 --> 00:27:04,149
dhcp 44 and dhcp 6

00:26:59,440 --> 00:27:10,809
support arm also zeroconf support auto

00:27:04,149 --> 00:27:14,320
conf and Static addressing there are

00:27:10,809 --> 00:27:19,769
there is there is still a lot of work to

00:27:14,320 --> 00:27:23,649
do but um it basically works already I

00:27:19,769 --> 00:27:25,720
bft I scars a boot firmware table we

00:27:23,649 --> 00:27:33,309
have the support but we didn't test set

00:27:25,720 --> 00:27:37,029
it up and now um yeah I bfg allows you

00:27:33,309 --> 00:27:39,639
to set up the network in the buyers so

00:27:37,029 --> 00:27:46,269
you set up in their buyers if it should

00:27:39,639 --> 00:27:50,259
use for example static configuration if

00:27:46,269 --> 00:27:55,299
it should use DHCP or whatever and you

00:27:50,259 --> 00:27:58,059
have to read it from from the buyers x

00:27:55,299 --> 00:28:05,190
configuration and use it in the system

00:27:58,059 --> 00:28:14,500
and usual you mount the root FS using

00:28:05,190 --> 00:28:17,139
the information um and yeah this the

00:28:14,500 --> 00:28:22,269
buyers which supports eb ft is able to

00:28:17,139 --> 00:28:25,539
boot directly over the network and in

00:28:22,269 --> 00:28:27,879
wicked you have to consider this that

00:28:25,539 --> 00:28:33,850
you never shut down this interface for

00:28:27,879 --> 00:28:37,269
example um and we you you have to make

00:28:33,850 --> 00:28:40,809
sure that you are renewing leases for

00:28:37,269 --> 00:28:46,559
example and don't throw away the IP

00:28:40,809 --> 00:28:52,860
address of eb ft and so on um yeah we've

00:28:46,559 --> 00:28:57,070
tried to update the documentation and um

00:28:52,860 --> 00:29:02,139
it's yeah something like current at the

00:28:57,070 --> 00:29:07,419
moment but there are some still some old

00:29:02,139 --> 00:29:10,860
parts which may be outdated but this is

00:29:07,419 --> 00:29:10,860
what we are working on

00:29:14,440 --> 00:29:21,289
our next steps are to work with the

00:29:17,470 --> 00:29:26,240
opens of the community to integrate this

00:29:21,289 --> 00:29:28,970
into the system we have to improve the

00:29:26,240 --> 00:29:32,179
documentation um create packages which

00:29:28,970 --> 00:29:36,350
can be installed and used and when you

00:29:32,179 --> 00:29:42,980
boot the system it works at least in the

00:29:36,350 --> 00:29:46,270
simple cases and then there are more

00:29:42,980 --> 00:29:50,830
advanced targets that we have to

00:29:46,270 --> 00:29:57,890
implement is support network

00:29:50,830 --> 00:30:01,429
identification or Ethernet interfaces 1

00:29:57,890 --> 00:30:05,390
dot x arm and ldp and firewall support

00:30:01,429 --> 00:30:08,710
and improve also the ipv6 support we

00:30:05,390 --> 00:30:17,929
have because arm at the moment it's

00:30:08,710 --> 00:30:20,179
limited similarly armed to the ISC dhcp

00:30:17,929 --> 00:30:24,830
client for example we can do similar

00:30:20,179 --> 00:30:29,600
things for example handle only one IP

00:30:24,830 --> 00:30:33,970
address but what we want to do is to

00:30:29,600 --> 00:30:36,950
handle also temporary address and and

00:30:33,970 --> 00:30:38,870
non temporary address at same time and

00:30:36,950 --> 00:30:42,409
so on and this is a little bit more

00:30:38,870 --> 00:30:46,900
complicated um and we have to integrate

00:30:42,409 --> 00:30:46,900
with system d um

00:30:47,860 --> 00:30:57,710
yeah and then there are several things

00:30:53,810 --> 00:31:04,130
that need to be adopted considered and

00:30:57,710 --> 00:31:08,000
so on like virtual interfaces of some

00:31:04,130 --> 00:31:17,050
test machines leave that open V switch

00:31:08,000 --> 00:31:21,020
and and so on yeah any feedback and help

00:31:17,050 --> 00:31:28,940
to this project is will come from and

00:31:21,020 --> 00:31:33,730
very appreciated on yeah thank you are

00:31:28,940 --> 00:31:33,730
there some questions about this

00:31:35,430 --> 00:31:37,490

YouTube URL: https://www.youtube.com/watch?v=XUgmFyBe_9w


