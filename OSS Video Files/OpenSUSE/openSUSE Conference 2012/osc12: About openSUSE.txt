Title: osc12: About openSUSE
Publication date: 2012-10-24
Playlist: openSUSE Conference 2012
Description: 
	osc12: About openSUSE from openSUSE. Like this? Watch the latest episode of openSUSE on Blip! http://blip.tv/opensuse/watch 

Speaker: Ismail Doenmez
Room: Data

See all episodes of openSUSE http://blip.tv/opensuse#EpisodeArchive
Visit openSUSE's series page http://blip.tv/opensuse
Captions: 
	00:00:00,000 --> 00:00:05,279
hey we will talk about opensuse as an

00:00:02,820 --> 00:00:07,080
upstream of suse linux enterprise so

00:00:05,279 --> 00:00:11,190
since this is the business friendly

00:00:07,080 --> 00:00:13,500
session when we talk about SUSE Linux

00:00:11,190 --> 00:00:15,269
Enterprise we talk about multiple things

00:00:13,500 --> 00:00:17,070
actually we have the server we have

00:00:15,269 --> 00:00:20,189
virtualization we have enterprise

00:00:17,070 --> 00:00:23,060
desktop and those of other things which

00:00:20,189 --> 00:00:26,160
we want to mention all of those event

00:00:23,060 --> 00:00:28,710
what we are interested is in is the

00:00:26,160 --> 00:00:32,669
opensuse project itself as an upstream

00:00:28,710 --> 00:00:34,320
so when we look at opensuse project we

00:00:32,669 --> 00:00:37,469
see it's more than a distribution

00:00:34,320 --> 00:00:40,860
actually it has marketing activities it

00:00:37,469 --> 00:00:43,620
has a distribution team itself it has

00:00:40,860 --> 00:00:46,500
sub-projects like education medical and

00:00:43,620 --> 00:00:48,870
other things like open wheel service the

00:00:46,500 --> 00:00:52,350
opensuse board and others actually

00:00:48,870 --> 00:00:56,370
opensuse is a very big community it's

00:00:52,350 --> 00:01:01,109
about an ecosystem when we look at the

00:00:56,370 --> 00:01:05,670
distribution we see that it has more

00:01:01,109 --> 00:01:08,250
than 5,000 packages and it comes in

00:01:05,670 --> 00:01:11,310
different flavors like there is an arm

00:01:08,250 --> 00:01:16,340
port there is a work in progress p pc

00:01:11,310 --> 00:01:20,520
port and of course x86 and 86 64 bits

00:01:16,340 --> 00:01:22,799
and let me talk about the distribution

00:01:20,520 --> 00:01:24,960
we have the bleeding edge so called

00:01:22,799 --> 00:01:28,110
factory which drives the next release

00:01:24,960 --> 00:01:33,329
and its most other types times are not

00:01:28,110 --> 00:01:36,869
is not really stable but mostly usable

00:01:33,329 --> 00:01:41,210
and we have the usual releases opensuse

00:01:36,869 --> 00:01:41,210
12.2 is just released possibly you know

00:01:41,509 --> 00:01:47,579
stable releases take two releases of

00:01:45,509 --> 00:01:49,890
lifetime and sometimes overlap here two

00:01:47,579 --> 00:01:52,590
months so it's 18 months cycle of

00:01:49,890 --> 00:01:55,170
updates and if you want something

00:01:52,590 --> 00:01:58,229
changed every day updates every day to

00:01:55,170 --> 00:02:00,360
nevis stuff you got a so called air

00:01:58,229 --> 00:02:04,350
rolling release which is open to certain

00:02:00,360 --> 00:02:06,329
beloved it's it gets the latest release

00:02:04,350 --> 00:02:11,700
of software from multiple projects on

00:02:06,329 --> 00:02:13,640
open build service so next topic is suse

00:02:11,700 --> 00:02:16,420
linux enterprise versus opens

00:02:13,640 --> 00:02:19,670
so what is different what is similar

00:02:16,420 --> 00:02:21,770
suse linux enterprises the name itself

00:02:19,670 --> 00:02:25,520
says its enterprise centric it has

00:02:21,770 --> 00:02:29,750
enterprise support 10 or more years of

00:02:25,520 --> 00:02:31,610
life time which is a lot more than open

00:02:29,750 --> 00:02:34,190
so they can offer it has corporate

00:02:31,610 --> 00:02:37,690
maintenance and other stars like

00:02:34,190 --> 00:02:40,220
Enterprise hardening and which end

00:02:37,690 --> 00:02:43,819
indemnification which is important for

00:02:40,220 --> 00:02:47,570
patent stuff in the corporate world when

00:02:43,819 --> 00:02:49,580
we look at ops oozes upstream there are

00:02:47,570 --> 00:02:51,560
multiple projects actually genome is for

00:02:49,580 --> 00:02:54,680
example is an upstream of souza for

00:02:51,560 --> 00:02:56,570
example in suse linux enterprise you

00:02:54,680 --> 00:02:59,000
have genome to which doesn't exist on

00:02:56,570 --> 00:03:02,390
opensuse now so enormous directly in an

00:02:59,000 --> 00:03:05,989
upstream is an upstream opensuse is the

00:03:02,390 --> 00:03:11,090
base of suse linux enterprise and its

00:03:05,989 --> 00:03:13,370
upstream so in the current situation

00:03:11,090 --> 00:03:15,440
upstream makes decisions which is

00:03:13,370 --> 00:03:17,840
actually Independence of the dams

00:03:15,440 --> 00:03:20,209
downstream in this case opensuse takes

00:03:17,840 --> 00:03:23,560
its own decisions not based on suse

00:03:20,209 --> 00:03:26,269
linux enterprise but upstream always

00:03:23,560 --> 00:03:31,459
take care of downstream when taking

00:03:26,269 --> 00:03:34,430
decisions so that it looks enterprise is

00:03:31,459 --> 00:03:36,040
not actually a clone of opensuse it is

00:03:34,430 --> 00:03:39,010
different it has a different

00:03:36,040 --> 00:03:42,040
installation method it has different

00:03:39,010 --> 00:03:46,190
installation defaults like separate on

00:03:42,040 --> 00:03:48,470
it has different package patterns for

00:03:46,190 --> 00:03:50,570
example minimal system is enterprise is

00:03:48,470 --> 00:03:52,730
different than but we haven't opened to

00:03:50,570 --> 00:03:55,100
say and most importantly it supports

00:03:52,730 --> 00:03:57,880
lots of different architectures like IBM

00:03:55,100 --> 00:04:01,549
system z power eat an Italian which

00:03:57,880 --> 00:04:05,239
opensuse does not support at all we do

00:04:01,549 --> 00:04:10,070
support arm and power but its work in

00:04:05,239 --> 00:04:13,670
progress for opensuse and not sub n is

00:04:10,070 --> 00:04:18,109
not stable when we look at how this

00:04:13,670 --> 00:04:21,590
interaction happens we see that opensuse

00:04:18,109 --> 00:04:24,530
data does a stable release like 11.1

00:04:21,590 --> 00:04:27,400
then this code goes to slay 11 at some

00:04:24,530 --> 00:04:30,740
point and after some stabilization

00:04:27,400 --> 00:04:34,790
this silly 11 is released as general

00:04:30,740 --> 00:04:37,220
availability and after some time the bug

00:04:34,790 --> 00:04:41,300
fixes in silly 11 gets into opensuse

00:04:37,220 --> 00:04:43,880
itself so we released 11.2 in opensuse

00:04:41,300 --> 00:04:46,310
this goes on with service pack once I

00:04:43,880 --> 00:04:52,940
respect to and for example sleep 12 will

00:04:46,310 --> 00:04:55,070
be based on opensuse 12.2 possibly it

00:04:52,940 --> 00:04:58,250
might be 12.1 tools that's why I said

00:04:55,070 --> 00:05:01,910
possibly so this is a win-win situation

00:04:58,250 --> 00:05:06,590
for opensuse for opensuse we got bug

00:05:01,910 --> 00:05:08,510
fixes from SLE enterprise testing the

00:05:06,590 --> 00:05:11,410
development actually LibreOffice for

00:05:08,510 --> 00:05:15,200
example is developed by the SLA team and

00:05:11,410 --> 00:05:17,900
it's committed to open suse a 32 just

00:05:15,200 --> 00:05:23,600
and linux kernel is also developed by

00:05:17,900 --> 00:05:26,620
the SLE stuff Suzy also funds the

00:05:23,600 --> 00:05:29,300
development of opensuse and of course

00:05:26,620 --> 00:05:32,000
gives us source packages for many

00:05:29,300 --> 00:05:35,210
packages for suse linux enterprise this

00:05:32,000 --> 00:05:37,610
means you got a stable this thro basis

00:05:35,210 --> 00:05:40,850
which is opensuse which is tested you

00:05:37,610 --> 00:05:42,770
have more than 5,000 available packages

00:05:40,850 --> 00:05:46,880
if you need some package you can take

00:05:42,770 --> 00:05:48,770
from opensuse and build up on it web

00:05:46,880 --> 00:05:50,510
Suzy also guess is relationship with

00:05:48,770 --> 00:05:52,850
upstream projects when people use

00:05:50,510 --> 00:05:55,520
opensuse they get familiar with the Susa

00:05:52,850 --> 00:06:00,680
brand so this is important for Souza so

00:05:55,520 --> 00:06:03,230
let's see how opensuse builds the whole

00:06:00,680 --> 00:06:08,740
distribution builds this whole ecosystem

00:06:03,230 --> 00:06:11,660
the tool we uses the open build service

00:06:08,740 --> 00:06:14,000
think of it as a build firm is some

00:06:11,660 --> 00:06:19,010
machine which produces packages it's

00:06:14,000 --> 00:06:21,620
free and it has more than 3 12 30

00:06:19,010 --> 00:06:24,830
thousand users currently it's actually

00:06:21,620 --> 00:06:27,650
more it supports 8 distributions this

00:06:24,830 --> 00:06:33,380
includes fedora reddit linux enterprise

00:06:27,650 --> 00:06:36,320
or santos or arch you can build for five

00:06:33,380 --> 00:06:40,280
different architectures how we do this

00:06:36,320 --> 00:06:40,820
is easy actually it runs virtual

00:06:40,280 --> 00:06:43,490
machines

00:06:40,820 --> 00:06:46,190
support for Debian RPM Targa's even

00:06:43,490 --> 00:06:48,800
windows executables actually Libre

00:06:46,190 --> 00:06:50,840
Office for Windows is built on OBS with

00:06:48,800 --> 00:06:55,460
free software which is something

00:06:50,840 --> 00:06:57,590
actually open view service is actually

00:06:55,460 --> 00:07:00,290
very popular in corporate world too for

00:06:57,590 --> 00:07:05,860
example is used by our partner bv1

00:07:00,290 --> 00:07:09,250
systems in tel del VLC project inria

00:07:05,860 --> 00:07:13,130
Dell and Intel there and have their own

00:07:09,250 --> 00:07:14,870
Mobius which is a little bit modified

00:07:13,130 --> 00:07:18,260
since it's open source you can take it

00:07:14,870 --> 00:07:23,510
and modify it we have some screenshots

00:07:18,260 --> 00:07:27,590
of obvious here disses the web interface

00:07:23,510 --> 00:07:30,770
we see here so this is a home project

00:07:27,590 --> 00:07:33,020
for such a polish can you see it builds

00:07:30,770 --> 00:07:36,410
for multiple distributions like Santos

00:07:33,020 --> 00:07:39,560
federal 12 Federal 13 mandriva and

00:07:36,410 --> 00:07:43,790
reddit looks Enterprise all on the same

00:07:39,560 --> 00:07:46,640
project also you see that you can see

00:07:43,790 --> 00:07:49,190
your current request on top so you can

00:07:46,640 --> 00:07:52,460
see who's try to submit something to

00:07:49,190 --> 00:07:57,320
your project so you can accept or reject

00:07:52,460 --> 00:08:00,490
that or wait for later to take action on

00:07:57,320 --> 00:08:03,740
it this is the web interface for

00:08:00,490 --> 00:08:06,860
actually changing the package spec file

00:08:03,740 --> 00:08:08,990
so in your browser you can update the

00:08:06,860 --> 00:08:11,540
package at new stuff change packaging

00:08:08,990 --> 00:08:14,570
rules all in your browser you don't have

00:08:11,540 --> 00:08:17,480
need the command line actually you can

00:08:14,570 --> 00:08:19,520
do the same in command line but mostly

00:08:17,480 --> 00:08:25,820
we prefer web interface because it's

00:08:19,520 --> 00:08:29,690
easier and we have another view of web

00:08:25,820 --> 00:08:31,940
interface this is that's all you change

00:08:29,690 --> 00:08:34,490
something you committed to your project

00:08:31,940 --> 00:08:36,710
but you branch from some other project

00:08:34,490 --> 00:08:40,010
in this case each branch from devil

00:08:36,710 --> 00:08:42,380
library C C++ so you want to commit your

00:08:40,010 --> 00:08:44,540
changes to the upstream so it can go

00:08:42,380 --> 00:08:48,110
into the factory in the end and go to

00:08:44,540 --> 00:08:49,970
the users so you add a description you

00:08:48,110 --> 00:08:52,940
can click remove local package if

00:08:49,970 --> 00:08:54,360
request is accepted so if you click this

00:08:52,940 --> 00:08:56,610
your package will be

00:08:54,360 --> 00:08:58,800
removed by your request is accepted so

00:08:56,610 --> 00:09:02,750
this is a way to keep it clean if you

00:08:58,800 --> 00:09:06,360
don't want to develop it further here

00:09:02,750 --> 00:09:10,260
what is the request looks like is this

00:09:06,360 --> 00:09:13,140
so you see the date you see who

00:09:10,260 --> 00:09:16,649
submitted it you see where it is going

00:09:13,140 --> 00:09:19,019
the target who requested it what kind of

00:09:16,649 --> 00:09:21,450
request is it might be a delete request

00:09:19,019 --> 00:09:24,450
or a symmetrical so you want to delete

00:09:21,450 --> 00:09:27,089
packages to and actions you can see if

00:09:24,450 --> 00:09:29,250
you click the I it will show you that it

00:09:27,089 --> 00:09:33,810
failed to build or it succeeded to build

00:09:29,250 --> 00:09:40,170
if you click the other icon you can see

00:09:33,810 --> 00:09:42,620
the build lock so open build service is

00:09:40,170 --> 00:09:45,870
open source software and can be deployed

00:09:42,620 --> 00:09:48,690
two instances which is actually done by

00:09:45,870 --> 00:09:50,399
some companies as I told you it is also

00:09:48,690 --> 00:09:53,339
used for building suse linux enterprise

00:09:50,399 --> 00:09:57,990
and it's the same code stream used

00:09:53,339 --> 00:10:01,199
internally same as open suitable service

00:09:57,990 --> 00:10:03,149
it delivers additional packages which

00:10:01,199 --> 00:10:06,089
might not be in the distro but user

00:10:03,149 --> 00:10:08,940
might need it for example application

00:10:06,089 --> 00:10:11,610
geography a poster on Orbis is really

00:10:08,940 --> 00:10:13,769
huge it contains all the geographical

00:10:11,610 --> 00:10:16,949
applications that's not in opensuse it

00:10:13,769 --> 00:10:21,149
has a whole own community in itself just

00:10:16,949 --> 00:10:24,029
on opensuse build service if you want

00:10:21,149 --> 00:10:27,269
commercial support it's available we are

00:10:24,029 --> 00:10:29,430
partners like the one systems and more

00:10:27,269 --> 00:10:35,279
information is available on open wheel

00:10:29,430 --> 00:10:40,529
service org the next product will talk

00:10:35,279 --> 00:10:42,600
about is open QA so QA is really

00:10:40,529 --> 00:10:45,420
important part of a distribution you

00:10:42,600 --> 00:10:47,699
want your code to be tested you want to

00:10:45,420 --> 00:10:50,160
make sure it in sauce it updates it

00:10:47,699 --> 00:10:52,709
configures correctly and you cannot do

00:10:50,160 --> 00:10:54,089
this manually you can actually but you

00:10:52,709 --> 00:10:58,380
will fail because there are multiple

00:10:54,089 --> 00:11:01,649
configurations to test and multiple

00:10:58,380 --> 00:11:05,370
cases you have the tests were so open k

00:11:01,649 --> 00:11:08,250
is our solution for this it's a fully

00:11:05,370 --> 00:11:10,260
automated testing so it does

00:11:08,250 --> 00:11:12,960
insource new stuffs upgrades from

00:11:10,260 --> 00:11:15,210
existing installations it does daily

00:11:12,960 --> 00:11:21,330
regression testing so you see if you

00:11:15,210 --> 00:11:23,490
commit something sorry so if you commit

00:11:21,330 --> 00:11:27,080
something and it broke some stuff you

00:11:23,490 --> 00:11:29,640
will see the next day you can test my

00:11:27,080 --> 00:11:32,690
applications you can also do

00:11:29,640 --> 00:11:36,060
benchmarking so it gives you a clear

00:11:32,690 --> 00:11:37,950
test results with video so you can click

00:11:36,060 --> 00:11:40,320
the video and see the whole installation

00:11:37,950 --> 00:11:42,720
and configuration or the regression

00:11:40,320 --> 00:11:47,370
testing so you don't have to do it so

00:11:42,720 --> 00:11:51,090
how it does it it boots the ISO in in a

00:11:47,370 --> 00:11:53,160
virtual machine usually sky vm it has a

00:11:51,090 --> 00:11:56,100
predefined input like click this button

00:11:53,160 --> 00:11:59,850
click firefox open this URL click enter

00:11:56,100 --> 00:12:02,310
it takes the secret of the result and it

00:11:59,850 --> 00:12:06,030
compares to screenshot to the predefined

00:12:02,310 --> 00:12:07,680
result so if it's not the same it says

00:12:06,030 --> 00:12:09,780
something is wrong so you have to

00:12:07,680 --> 00:12:12,770
manually check a bit it shows the

00:12:09,780 --> 00:12:15,690
results in the web interface like this

00:12:12,770 --> 00:12:19,530
so on the left you see the non issues

00:12:15,690 --> 00:12:24,270
and the ones that are strike that are

00:12:19,530 --> 00:12:27,450
fixed problems this is how it has stuff

00:12:24,270 --> 00:12:33,120
before releasing release candidates and

00:12:27,450 --> 00:12:36,839
final software you can also see the

00:12:33,120 --> 00:12:40,650
whole test you see his is testing for

00:12:36,839 --> 00:12:44,580
example 11.4 KD 4.6 organ aam

00:12:40,650 --> 00:12:46,650
development a poster or 12.2 or just

00:12:44,580 --> 00:12:48,750
battery fso it has multiple

00:12:46,650 --> 00:12:51,810
configurations to test multiple stuff

00:12:48,750 --> 00:12:58,170
which will be really hard to do manually

00:12:51,810 --> 00:13:00,690
and this is the results overview so you

00:12:58,170 --> 00:13:02,790
start with the boot and multiple checks

00:13:00,690 --> 00:13:05,550
are run if something if there is a

00:13:02,790 --> 00:13:09,300
problem you see a red line saying you

00:13:05,550 --> 00:13:11,640
should manually inspectors so in some

00:13:09,300 --> 00:13:14,640
cases there are no errors for example if

00:13:11,640 --> 00:13:17,430
the if an output / program changes like

00:13:14,640 --> 00:13:18,780
Firefox displays an income Bay homepage

00:13:17,430 --> 00:13:21,800
it might be a problem you have to

00:13:18,780 --> 00:13:25,699
manually check and update the test case

00:13:21,800 --> 00:13:30,410
so let's see what technologies from

00:13:25,699 --> 00:13:33,810
opensuse goes into suse linux enterprise

00:13:30,410 --> 00:13:36,510
first of all we have the opensuse arm

00:13:33,810 --> 00:13:41,760
which is started by handful of community

00:13:36,510 --> 00:13:43,949
members after OSC 2011 most of the

00:13:41,760 --> 00:13:48,149
people were interested and they started

00:13:43,949 --> 00:13:51,300
to get work on arm v7 and these days

00:13:48,149 --> 00:13:53,699
they release the first version of arm v6

00:13:51,300 --> 00:13:57,000
which means it runs on Raspberry Pi

00:13:53,699 --> 00:14:00,060
board now which is really important

00:13:57,000 --> 00:14:03,240
milestone and they will release first

00:14:00,060 --> 00:14:07,860
version based on 12.2 soon their first

00:14:03,240 --> 00:14:10,320
stable release another thing is that

00:14:07,860 --> 00:14:14,010
important for enterprises virtualization

00:14:10,320 --> 00:14:16,350
so in opensuse you got optimizations for

00:14:14,010 --> 00:14:20,190
laptops you try to save power you try to

00:14:16,350 --> 00:14:22,589
save battery but FX virtualization is

00:14:20,190 --> 00:14:24,570
that whatever you do in the laptop case

00:14:22,589 --> 00:14:28,949
sometimes help with the virtualization

00:14:24,570 --> 00:14:31,649
work lot due to moving at idling code

00:14:28,949 --> 00:14:34,589
which helps with virtualization to

00:14:31,649 --> 00:14:37,680
increase performance of workloads so

00:14:34,589 --> 00:14:39,899
what we do for opensuse in users helps

00:14:37,680 --> 00:14:43,440
the enterprising and suse linux

00:14:39,899 --> 00:14:46,260
enterprise another important thing that

00:14:43,440 --> 00:14:49,440
came from opensuse was snapper the

00:14:46,260 --> 00:14:51,389
synapse sharing filesystem snapper works

00:14:49,440 --> 00:14:55,139
on top of file systems to provide

00:14:51,389 --> 00:14:57,600
snapshots like it works but best with

00:14:55,139 --> 00:14:59,850
butter FS because butter FS already has

00:14:57,600 --> 00:15:02,670
some kind of scenario some idea of

00:14:59,850 --> 00:15:05,819
snapshotting if you don't run by the fs

00:15:02,670 --> 00:15:09,660
it works on top of lvm team provisioning

00:15:05,819 --> 00:15:11,910
it's also integrated into zipper so you

00:15:09,660 --> 00:15:14,040
can package update it takes a snapshot

00:15:11,910 --> 00:15:15,870
updates the package then you can roll

00:15:14,040 --> 00:15:20,459
back the whole thing it's also

00:15:15,870 --> 00:15:25,620
integrated into just another big thing

00:15:20,459 --> 00:15:27,660
that went from opensuse system d as you

00:15:25,620 --> 00:15:32,339
possibly know system d is an inert

00:15:27,660 --> 00:15:35,839
replacement it has socket and divas

00:15:32,339 --> 00:15:39,839
activation which means that

00:15:35,839 --> 00:15:42,810
services start on demand and not start

00:15:39,839 --> 00:15:46,139
by itself manually they automatically

00:15:42,810 --> 00:15:48,660
sorry it has see groups support to track

00:15:46,139 --> 00:15:50,639
and control service process it has

00:15:48,660 --> 00:15:53,160
compatibility with system five minutes

00:15:50,639 --> 00:15:57,389
it drips and it comes with a useful tool

00:15:53,160 --> 00:15:59,779
called system control so whatever system

00:15:57,389 --> 00:16:02,430
the integration in opensuse what we did

00:15:59,779 --> 00:16:04,709
systemd in opensuse has in served

00:16:02,430 --> 00:16:08,490
support check config and has been

00:16:04,709 --> 00:16:11,009
serviced and the most important is you

00:16:08,490 --> 00:16:12,690
can call init script the old init script

00:16:11,009 --> 00:16:15,300
directly it will work so it will just

00:16:12,690 --> 00:16:19,370
redirect to the system diversion so your

00:16:15,300 --> 00:16:22,920
your old scripts can work it supports

00:16:19,370 --> 00:16:25,680
system-wide you let me setting and you

00:16:22,920 --> 00:16:28,440
can select what olo by what to start by

00:16:25,680 --> 00:16:30,990
default and what's not and if you are

00:16:28,440 --> 00:16:33,540
providing our PM packages with systemd

00:16:30,990 --> 00:16:35,610
support you have systemd mattress to

00:16:33,540 --> 00:16:42,029
help you which makes it easier to

00:16:35,610 --> 00:16:44,459
integrate into system d here we see that

00:16:42,029 --> 00:16:46,740
system control is an action is called

00:16:44,459 --> 00:16:50,160
system control status the bus service

00:16:46,740 --> 00:16:52,829
this caused what is the status on the

00:16:50,160 --> 00:16:56,819
bus you see that is active and running

00:16:52,829 --> 00:17:02,220
you see is see group it shows the PID it

00:16:56,819 --> 00:17:07,559
shows when it's loaded and other logs

00:17:02,220 --> 00:17:13,880
related to the service so this will be

00:17:07,559 --> 00:17:13,880
about it if you have questions feel free

00:17:16,350 --> 00:17:19,309

YouTube URL: https://www.youtube.com/watch?v=peiQE8K2gzA


