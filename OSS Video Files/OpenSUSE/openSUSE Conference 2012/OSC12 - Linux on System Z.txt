Title: OSC12 - Linux on System Z
Publication date: 2012-10-24
Playlist: openSUSE Conference 2012
Description: 
	OSC12 - Linux on System Z from openSUSE. Like this? Watch the latest episode of openSUSE on Blip! http://blip.tv/opensuse/watch 

Speaker: Dalibor Kurek
Room: Data

See all episodes of openSUSE http://blip.tv/opensuse#EpisodeArchive
Visit openSUSE's series page http://blip.tv/opensuse
Captions: 
	00:00:00,319 --> 00:00:06,390
okay so i've been told i can start so

00:00:03,870 --> 00:00:09,840
good morning ladies and gentleman my

00:00:06,390 --> 00:00:13,830
name is teleport craig i work for IBM

00:00:09,840 --> 00:00:15,809
here in Prague I'm check but I've been

00:00:13,830 --> 00:00:18,570
told that the official language of this

00:00:15,809 --> 00:00:21,390
track is English so I will speak in

00:00:18,570 --> 00:00:25,470
English so and I should probably speak

00:00:21,390 --> 00:00:27,920
into this right ok so the title of the

00:00:25,470 --> 00:00:31,859
presentation is linux on system z

00:00:27,920 --> 00:00:33,719
consolidation makes sense and that begs

00:00:31,859 --> 00:00:36,420
the obvious question because we all know

00:00:33,719 --> 00:00:42,059
what linux is but what the hell is

00:00:36,420 --> 00:00:45,149
system z so IBM system z also right

00:00:42,059 --> 00:00:47,910
right it is excellent excellent ok so

00:00:45,149 --> 00:00:50,579
also known as is the enterprise at least

00:00:47,910 --> 00:00:54,449
the last two generations are previously

00:00:50,579 --> 00:00:57,829
known as z series before that s390 and

00:00:54,449 --> 00:01:03,449
even before that all the way back to

00:00:57,829 --> 00:01:07,729
system/360 aka the mainframe aka big

00:01:03,449 --> 00:01:10,340
ayran AK the big batch expensive machine

00:01:07,729 --> 00:01:13,590
well we need a clear definition

00:01:10,340 --> 00:01:16,470
obviously so my favorite definition of

00:01:13,590 --> 00:01:19,259
the mainframe is that it's an absolute

00:01:16,470 --> 00:01:22,080
device still used by thousands of

00:01:19,259 --> 00:01:24,540
obsolete companies serving billions of

00:01:22,080 --> 00:01:27,090
obsolete customers and making huge

00:01:24,540 --> 00:01:30,390
obsolete profits for their obsolete

00:01:27,090 --> 00:01:35,670
shareholders and this year's model runs

00:01:30,390 --> 00:01:38,130
twice as fast as last year's so this

00:01:35,670 --> 00:01:41,400
year's obsolete parameters just for

00:01:38,130 --> 00:01:45,020
interest are five point five gigahertz

00:01:41,400 --> 00:01:47,460
clock speed which to my knowledge is the

00:01:45,020 --> 00:01:51,170
biggest one commercially available

00:01:47,460 --> 00:01:53,729
without you know some special stuff like

00:01:51,170 --> 00:01:57,960
nitrous oxide cooling and things like

00:01:53,729 --> 00:02:01,549
that 120 processor cores per one

00:01:57,960 --> 00:02:05,579
physical machine that's the maximum

00:02:01,549 --> 00:02:08,789
three terabytes of memory in something

00:02:05,579 --> 00:02:13,770
we call rain which is something like

00:02:08,789 --> 00:02:17,910
rate 544 memory 3 gigabytes cash

00:02:13,770 --> 00:02:20,670
and yes that's gigabytes in four levels

00:02:17,910 --> 00:02:22,770
one through four and if you're

00:02:20,670 --> 00:02:24,750
interested in details and you can read

00:02:22,770 --> 00:02:30,150
the fine print you can find out how that

00:02:24,750 --> 00:02:32,970
figure is arrived to 384 gigabytes per

00:02:30,150 --> 00:02:35,370
second total maximum throughput not

00:02:32,970 --> 00:02:37,500
processor throughput but I Oh channel

00:02:35,370 --> 00:02:42,300
throughput and again yes that's

00:02:37,500 --> 00:02:44,700
gigabytes per second not gigabits 92.4

00:02:42,300 --> 00:02:48,840
billion transistors if you count just

00:02:44,700 --> 00:02:51,270
the processor and cash chips not you

00:02:48,840 --> 00:02:56,220
know the a6 on the i/o cards and stuff

00:02:51,270 --> 00:02:59,180
like that 32 internal virtual TCP IP

00:02:56,220 --> 00:03:02,340
networks which we call hyper sockets

00:02:59,180 --> 00:03:07,080
which again all leads to another obvious

00:03:02,340 --> 00:03:10,710
question why should you care the reason

00:03:07,080 --> 00:03:14,910
and the answer to that obviously is it

00:03:10,710 --> 00:03:18,150
depends either you're interested or you

00:03:14,910 --> 00:03:19,709
may find it interesting that some of the

00:03:18,150 --> 00:03:22,650
biggest companies in the world actually

00:03:19,709 --> 00:03:24,750
use this platform and on the top you

00:03:22,650 --> 00:03:27,810
have a figure that I find the most

00:03:24,750 --> 00:03:32,130
interesting mainly because it's actually

00:03:27,810 --> 00:03:35,580
true and that's 96 out of the top 100

00:03:32,130 --> 00:03:39,300
banks on this planet actually use this

00:03:35,580 --> 00:03:41,459
platform to run their business what's

00:03:39,300 --> 00:03:45,810
even more interesting for this audience

00:03:41,459 --> 00:03:49,140
is that actually 66 out of the biggest

00:03:45,810 --> 00:03:52,200
IBM customers out of the hundred biggest

00:03:49,140 --> 00:03:54,000
customers for System z actually run

00:03:52,200 --> 00:03:56,760
linux on this platform that's where

00:03:54,000 --> 00:04:00,120
we're getting to the topic of today's

00:03:56,760 --> 00:04:02,430
presentation I am going to stop at one

00:04:00,120 --> 00:04:05,760
one more number and that's the blue one

00:04:02,430 --> 00:04:08,130
on the left which I suspect if you ready

00:04:05,760 --> 00:04:11,160
yourself you may be thinking wait a

00:04:08,130 --> 00:04:13,290
minute that's that's not true so we are

00:04:11,160 --> 00:04:16,680
saying that sixty percent of all data

00:04:13,290 --> 00:04:19,260
available online is stored on mainframe

00:04:16,680 --> 00:04:22,350
platforms and to clarify and to make you

00:04:19,260 --> 00:04:25,960
understand why we say that it's not

00:04:22,350 --> 00:04:28,560
counting porn so we mean actual data

00:04:25,960 --> 00:04:34,690
and in that case we should be probably

00:04:28,560 --> 00:04:38,039
close to the truth okay so all of this i

00:04:34,690 --> 00:04:40,840
would like to illustrate with an example

00:04:38,039 --> 00:04:44,949
why you know these these companies do

00:04:40,840 --> 00:04:48,460
this so a real-life question if you have

00:04:44,949 --> 00:04:51,789
to provide printing services to 100

00:04:48,460 --> 00:04:56,620
people which one of these will be

00:04:51,789 --> 00:04:59,410
cheaper a small desktop inkjet printer

00:04:56,620 --> 00:05:02,800
or you know this big bad guy on the

00:04:59,410 --> 00:05:07,330
right and of course the answer is it

00:05:02,800 --> 00:05:09,930
depends it depends on what you look at

00:05:07,330 --> 00:05:14,050
it depends on if you look at just the

00:05:09,930 --> 00:05:17,020
amount of money you have to dish out to

00:05:14,050 --> 00:05:20,229
buy that thing which in which case you

00:05:17,020 --> 00:05:23,699
could actually buy 100 small printers so

00:05:20,229 --> 00:05:26,440
give each of those people his own

00:05:23,699 --> 00:05:31,360
printer and it will still be cheaper

00:05:26,440 --> 00:05:33,699
than to buy the big one so you get the

00:05:31,360 --> 00:05:37,659
lower cost of acquisition what we call

00:05:33,699 --> 00:05:40,210
TCA but if you actually want to print

00:05:37,659 --> 00:05:43,630
something then very quickly you realize

00:05:40,210 --> 00:05:47,020
that this is not going to work out as

00:05:43,630 --> 00:05:49,900
well in the long long run because you

00:05:47,020 --> 00:05:51,639
will have a very high cost per page

00:05:49,900 --> 00:05:54,130
printed because you probably know that

00:05:51,639 --> 00:05:57,099
you're basically getting the printer for

00:05:54,130 --> 00:05:59,080
free with the first set of inks and if

00:05:57,099 --> 00:06:01,599
you have to buy the ink afterwards it's

00:05:59,080 --> 00:06:04,330
very very expensive if those people

00:06:01,599 --> 00:06:07,240
actually were you know not printing at

00:06:04,330 --> 00:06:09,370
all that might be the lower-cost

00:06:07,240 --> 00:06:13,270
alternative but if they are actually

00:06:09,370 --> 00:06:16,810
doing something then the solution on the

00:06:13,270 --> 00:06:18,550
right will very soon proved to be the

00:06:16,810 --> 00:06:21,669
less expensive one because you will have

00:06:18,550 --> 00:06:23,590
much lower cost per page printed you

00:06:21,669 --> 00:06:25,719
will have much lower maintenance costs

00:06:23,590 --> 00:06:28,509
and you will have much simpler

00:06:25,719 --> 00:06:30,580
administration you will probably be able

00:06:28,509 --> 00:06:33,909
to administer that printer with one

00:06:30,580 --> 00:06:37,940
person which could be kind of hard to do

00:06:33,909 --> 00:06:39,410
with the 100 on the left so I

00:06:37,940 --> 00:06:42,410
another example and I like this one

00:06:39,410 --> 00:06:44,900
because it involves vehicles so which is

00:06:42,410 --> 00:06:47,540
my favorite so similarly which of these

00:06:44,900 --> 00:06:49,850
is the fastest and of course you're

00:06:47,540 --> 00:06:53,450
expecting me to say it depends I will

00:06:49,850 --> 00:07:01,490
rephrase that and I will say fastest at

00:06:53,450 --> 00:07:03,650
what doing what so you know acceleration

00:07:01,490 --> 00:07:07,610
I would personally put my money on the

00:07:03,650 --> 00:07:09,830
motorcycle obviously moving something

00:07:07,610 --> 00:07:12,560
fairly small but something you wouldn't

00:07:09,830 --> 00:07:16,250
want to haul on the motorcycle you would

00:07:12,560 --> 00:07:18,620
be probably best out with the with the

00:07:16,250 --> 00:07:21,170
pickup truck if you have something

00:07:18,620 --> 00:07:23,090
bigger a larger load where the pickup

00:07:21,170 --> 00:07:24,980
truck of course you could use that but

00:07:23,090 --> 00:07:27,440
you would have to take several trips and

00:07:24,980 --> 00:07:29,660
in that case the bigger truck would

00:07:27,440 --> 00:07:32,960
definitely do it faster because it will

00:07:29,660 --> 00:07:36,140
just get it there in one one single trip

00:07:32,960 --> 00:07:38,510
and of course if the task is to move 300

00:07:36,140 --> 00:07:42,200
people and you may think here you know a

00:07:38,510 --> 00:07:44,780
different kind of train and mixed load

00:07:42,200 --> 00:07:47,510
which in i.t case would be mixed

00:07:44,780 --> 00:07:51,340
workload then of course you would need

00:07:47,510 --> 00:07:55,610
something some consolidated solution and

00:07:51,340 --> 00:07:58,280
that's a concept we at IBM call fit for

00:07:55,610 --> 00:08:02,419
purpose so basically pick the right

00:07:58,280 --> 00:08:05,720
platform for the job and you can very

00:08:02,419 --> 00:08:08,810
easily see the parallel between these

00:08:05,720 --> 00:08:12,440
and the IT world so you may have the

00:08:08,810 --> 00:08:14,270
fastest available Intel chip in in your

00:08:12,440 --> 00:08:17,150
notebook and it will run certain

00:08:14,270 --> 00:08:19,370
benchmarks so quickly that it would seem

00:08:17,150 --> 00:08:21,590
that you know you could really use it

00:08:19,370 --> 00:08:24,950
for some work clothes but as soon as you

00:08:21,590 --> 00:08:28,070
add up that workload it proves that you

00:08:24,950 --> 00:08:30,710
know some loads are better off on a

00:08:28,070 --> 00:08:33,740
different platform so by the way that

00:08:30,710 --> 00:08:35,930
that's the newest T enterprise on the on

00:08:33,740 --> 00:08:38,479
the down left and the blue one that's

00:08:35,930 --> 00:08:43,400
that's the IBM pureflex if you've heard

00:08:38,479 --> 00:08:49,280
of it ok so knowing this you would think

00:08:43,400 --> 00:08:51,740
that companies that buy servers to run

00:08:49,280 --> 00:08:53,510
somewhere code would actually you know

00:08:51,740 --> 00:08:57,560
go through this trouble and think about

00:08:53,510 --> 00:09:00,110
what platform it would run best on it

00:08:57,560 --> 00:09:03,380
turns out that in reality they just

00:09:00,110 --> 00:09:06,500
asked two questions they just asked will

00:09:03,380 --> 00:09:08,540
the application that I need to run run

00:09:06,500 --> 00:09:11,779
on this particular hardware platform if

00:09:08,540 --> 00:09:14,450
yes then it goes on to the short list

00:09:11,779 --> 00:09:17,360
and then they will ask how much does the

00:09:14,450 --> 00:09:21,950
hardware costs and they pick the one

00:09:17,360 --> 00:09:24,589
that costs the least which is not quite

00:09:21,950 --> 00:09:27,529
okay from the long long term view

00:09:24,589 --> 00:09:31,279
because that's just the TCA and remember

00:09:27,529 --> 00:09:33,580
the printers example so what are we

00:09:31,279 --> 00:09:36,860
missing here it's clear the

00:09:33,580 --> 00:09:40,730
non-functional requirement so if you

00:09:36,860 --> 00:09:45,020
need the hardware to be reliable be

00:09:40,730 --> 00:09:50,300
scalable be secure things like you know

00:09:45,020 --> 00:09:51,890
space power cooling etc etc you can read

00:09:50,300 --> 00:09:56,180
that yourself I will just go on because

00:09:51,890 --> 00:09:58,399
the time is short okay so that's as i

00:09:56,180 --> 00:10:01,820
already said that's the idea of ibm's

00:09:58,399 --> 00:10:04,640
fit-for-purpose approach so by all means

00:10:01,820 --> 00:10:08,000
you know put on intel what runs best at

00:10:04,640 --> 00:10:09,980
on intel on x86 that's that's of course

00:10:08,000 --> 00:10:13,300
fine but there are some more clothes

00:10:09,980 --> 00:10:18,170
that don't run the best on Intel and

00:10:13,300 --> 00:10:21,079
those may be better off on a different

00:10:18,170 --> 00:10:24,649
platform which may happen to be the

00:10:21,079 --> 00:10:26,839
mainframe and IBM offers something that

00:10:24,649 --> 00:10:29,680
we call the ELS the enterprise linux

00:10:26,839 --> 00:10:33,950
server which is a linux only mainframe

00:10:29,680 --> 00:10:37,700
which is much less expensive than a

00:10:33,950 --> 00:10:40,010
mainframe that would be running the z OS

00:10:37,700 --> 00:10:43,459
operating system or some other operating

00:10:40,010 --> 00:10:47,240
system from IBM so that's that's reason

00:10:43,459 --> 00:10:48,950
why I'm talking about that here ok I

00:10:47,240 --> 00:10:51,470
will be very quick about this because

00:10:48,950 --> 00:10:54,829
I've less than 10 minutes left so I'm

00:10:51,470 --> 00:10:57,649
not going to play quiz with you I will

00:10:54,829 --> 00:11:01,520
just tell you the options and the answer

00:10:57,649 --> 00:11:04,220
and I have to warn you that it's a to a

00:11:01,520 --> 00:11:05,290
question so virtualization that's that's

00:11:04,220 --> 00:11:07,690
a big concept late

00:11:05,290 --> 00:11:12,820
when do you think the the concept was

00:11:07,690 --> 00:11:17,079
actually born invented you know okay so

00:11:12,820 --> 00:11:20,740
was it either 2001 when the first ESX

00:11:17,079 --> 00:11:25,389
server came out probably not was it 98

00:11:20,740 --> 00:11:28,690
when vmware was founded or was it 1976

00:11:25,389 --> 00:11:32,319
when IBM introduced logical partitions

00:11:28,690 --> 00:11:37,360
on the mainframe and the answer is right

00:11:32,319 --> 00:11:40,930
there it's D 1964 so right when the

00:11:37,360 --> 00:11:43,329
first mainframe the first system/360 was

00:11:40,930 --> 00:11:46,540
introduced that's when IBM started the

00:11:43,329 --> 00:11:49,630
development of something then called CP

00:11:46,540 --> 00:11:53,589
40 which over the years evolved into

00:11:49,630 --> 00:11:56,500
something we call nowadays EVM so that's

00:11:53,589 --> 00:11:58,240
the software hypervisor for for the

00:11:56,500 --> 00:12:00,490
mainframe and I have a nice chart here

00:11:58,240 --> 00:12:03,220
which compares you have the number of

00:12:00,490 --> 00:12:05,589
virtual machines on and you can read

00:12:03,220 --> 00:12:07,839
sorry you can read the hardware

00:12:05,589 --> 00:12:10,510
conflicts down at the bottom if you can

00:12:07,839 --> 00:12:14,199
read them and you see that at some point

00:12:10,510 --> 00:12:17,410
you know on the x86 platform the scaling

00:12:14,199 --> 00:12:19,839
kind of breaks you don't get the

00:12:17,410 --> 00:12:22,300
response time goes up very fast and you

00:12:19,839 --> 00:12:26,889
see you're hitting some kind of ceiling

00:12:22,300 --> 00:12:29,170
and zvm just keeps on going on actually

00:12:26,889 --> 00:12:33,490
half the number of processor cores and

00:12:29,170 --> 00:12:36,819
the reason for that is that the Z box

00:12:33,490 --> 00:12:38,889
has a dedicated IO subsystem what that

00:12:36,819 --> 00:12:42,130
means is that you have some processors

00:12:38,889 --> 00:12:44,350
that you're used to from the distributed

00:12:42,130 --> 00:12:46,360
platforms and you can compare the

00:12:44,350 --> 00:12:49,620
machines you know on that level but

00:12:46,360 --> 00:12:52,839
underneath you actually have some

00:12:49,620 --> 00:12:54,939
specialty processors which you don't get

00:12:52,839 --> 00:12:58,180
on the distribute platform but most

00:12:54,939 --> 00:13:04,060
importantly on on the mainframe you get

00:12:58,180 --> 00:13:07,959
a several-fold number of i/o processors

00:13:04,060 --> 00:13:10,240
dedicated just to serving I oh so the

00:13:07,959 --> 00:13:13,870
processor does doesn't sorry doesn't

00:13:10,240 --> 00:13:17,260
spend time processing io requests and

00:13:13,870 --> 00:13:18,160
really just runs coat and the i/o

00:13:17,260 --> 00:13:20,860
traffic

00:13:18,160 --> 00:13:28,240
make is taken care of by different set

00:13:20,860 --> 00:13:30,490
of chips okay so to recap to host X

00:13:28,240 --> 00:13:33,850
number and fill in your own you know

00:13:30,490 --> 00:13:36,730
fifteen hundred two hundred should you

00:13:33,850 --> 00:13:41,139
use the enterprise linux server which

00:13:36,730 --> 00:13:44,620
seems so nice or virtualization on x86

00:13:41,139 --> 00:13:47,709
and of course the answer is it depends

00:13:44,620 --> 00:13:51,610
but there are cases when the one on the

00:13:47,709 --> 00:13:53,379
left may be the better choice okay I'm

00:13:51,610 --> 00:13:58,120
going to skip this because time is

00:13:53,379 --> 00:14:00,910
really short and yeah this is just to

00:13:58,120 --> 00:14:03,910
show that it can really be much less

00:14:00,910 --> 00:14:08,110
expensive to actually invest in a

00:14:03,910 --> 00:14:11,230
platform that has you know more

00:14:08,110 --> 00:14:15,100
expensive hardware but on the software

00:14:11,230 --> 00:14:19,060
side can save you a lot of money if you

00:14:15,100 --> 00:14:23,740
look at that should go that should be TC

00:14:19,060 --> 00:14:28,509
0 total cost of ownership not TCA so it

00:14:23,740 --> 00:14:30,790
can be less expensive in the long run ok

00:14:28,509 --> 00:14:32,649
this is I would say a textbook example

00:14:30,790 --> 00:14:35,500
of course there are not too many

00:14:32,649 --> 00:14:38,370
companies that have something like that

00:14:35,500 --> 00:14:41,860
that's an example of 10,000 workloads

00:14:38,370 --> 00:14:45,910
and a comparison of what it would take

00:14:41,860 --> 00:14:50,680
to run that on x86 distributed and what

00:14:45,910 --> 00:14:53,589
it would take to run on on Z so the idea

00:14:50,680 --> 00:14:56,170
there is basically to put the heavy I

00:14:53,589 --> 00:14:58,269
over clothes on the Y where it runs best

00:14:56,170 --> 00:15:01,420
because it has this massive oil

00:14:58,269 --> 00:15:04,120
throughput and you could put the you

00:15:01,420 --> 00:15:06,910
would put the heavy workloads on power

00:15:04,120 --> 00:15:09,430
processors which can be connected to the

00:15:06,910 --> 00:15:13,689
mainframe and you would leave the light

00:15:09,430 --> 00:15:16,089
workloads on x86 but part of what we

00:15:13,689 --> 00:15:20,470
call an ensemble which is basically part

00:15:16,089 --> 00:15:24,040
of the Z enterprise and the savings of

00:15:20,470 --> 00:15:26,279
course can be can be dramatic especially

00:15:24,040 --> 00:15:29,559
like the network you know you have to

00:15:26,279 --> 00:15:32,080
wire up those 1,600 servers together

00:15:29,559 --> 00:15:34,270
while basically on the

00:15:32,080 --> 00:15:36,790
mainframe you just connect a few boxes

00:15:34,270 --> 00:15:39,460
together and that's where you get over

00:15:36,790 --> 00:15:42,790
ninety percent savings okay how much

00:15:39,460 --> 00:15:45,120
time do I have five minutes great okay

00:15:42,790 --> 00:15:48,400
so I have enough time to give you this

00:15:45,120 --> 00:15:52,390
specific example of a consolidation

00:15:48,400 --> 00:15:55,360
study which I did so I feel entitled to

00:15:52,390 --> 00:15:59,100
to present it here and it's from this

00:15:55,360 --> 00:16:04,270
country it's a local local example so

00:15:59,100 --> 00:16:07,750
it's basically a study of what the

00:16:04,270 --> 00:16:11,170
target hardware on the seaside would

00:16:07,750 --> 00:16:18,010
have to be to consolidate this many

00:16:11,170 --> 00:16:20,620
servers the important thing to say at

00:16:18,010 --> 00:16:23,290
the beginning is that this was not the

00:16:20,620 --> 00:16:26,320
whole server farm of the customer this

00:16:23,290 --> 00:16:29,860
was just part which they picked they

00:16:26,320 --> 00:16:33,190
actually had over 200 servers in total

00:16:29,860 --> 00:16:36,520
but they picked these 48 and they gave

00:16:33,190 --> 00:16:38,980
us the data coming from those servers so

00:16:36,520 --> 00:16:41,620
these 48 servers had 205 processor

00:16:38,980 --> 00:16:45,100
course these were some older you know

00:16:41,620 --> 00:16:49,420
son son servers most of them had AMD

00:16:45,100 --> 00:16:51,430
upturn processors somewhere even some

00:16:49,420 --> 00:16:55,540
Intel's so it was a very heterogeneous

00:16:51,430 --> 00:16:58,450
environment and we said well what would

00:16:55,540 --> 00:17:00,700
be the hardware on the seaside that

00:16:58,450 --> 00:17:07,300
could run the same workload as these

00:17:00,700 --> 00:17:12,550
servers are running so what oops what

00:17:07,300 --> 00:17:15,699
something's stuck here oh sorry about

00:17:12,550 --> 00:17:18,630
this okay just give me a few seconds to

00:17:15,699 --> 00:17:18,630
get back where I was

00:17:28,010 --> 00:17:39,410
okay that what is this yeah well who

00:17:37,790 --> 00:17:45,860
asked me what operating system is

00:17:39,410 --> 00:17:49,940
running on this okay so okay sticks okay

00:17:45,860 --> 00:17:53,510
so first we need to know what I call who

00:17:49,940 --> 00:17:56,090
are they so what are the servers that we

00:17:53,510 --> 00:17:59,870
are about to consolidate then we need

00:17:56,090 --> 00:18:01,550
some data on utilization so what are

00:17:59,870 --> 00:18:04,100
they actually doing how hard do they

00:18:01,550 --> 00:18:10,100
work and you can use sorrow or whatever

00:18:04,100 --> 00:18:14,660
to problem okay to see you know what

00:18:10,100 --> 00:18:25,070
what is the utilization in time okay

00:18:14,660 --> 00:18:27,680
again all right and then very important

00:18:25,070 --> 00:18:29,630
thing you need to know what is it these

00:18:27,680 --> 00:18:31,790
servers are doing so it's not the same

00:18:29,630 --> 00:18:35,170
if you have a eight core server running

00:18:31,790 --> 00:18:38,060
database and if you have the same server

00:18:35,170 --> 00:18:40,490
serving you know web serving HTTP

00:18:38,060 --> 00:18:44,330
because the work load characteristic is

00:18:40,490 --> 00:18:47,060
different and for the database load the

00:18:44,330 --> 00:18:50,060
mainframe will shine more than for the

00:18:47,060 --> 00:18:52,580
web workload so that's why we take that

00:18:50,060 --> 00:18:57,920
into account I'm going to be very

00:18:52,580 --> 00:19:02,150
careful here okay okay and of course

00:18:57,920 --> 00:19:04,420
that data enables us to construct you

00:19:02,150 --> 00:19:08,870
know a chart of the utilization that's

00:19:04,420 --> 00:19:11,360
that's business as usual and then we get

00:19:08,870 --> 00:19:14,990
some summary summary numbers so for

00:19:11,360 --> 00:19:17,810
example what is the total power input of

00:19:14,990 --> 00:19:21,440
of those 48 servers and in this case

00:19:17,810 --> 00:19:23,570
it's almost one kilowatt per per server

00:19:21,440 --> 00:19:26,230
so that's that's a huge amount of power

00:19:23,570 --> 00:19:30,260
which is also going to cut something and

00:19:26,230 --> 00:19:32,750
i will just very very quickly finish

00:19:30,260 --> 00:19:35,630
this i wanted to show you this because

00:19:32,750 --> 00:19:37,970
this is very nice in terms of you see

00:19:35,630 --> 00:19:40,820
it's real data because this was one

00:19:37,970 --> 00:19:42,519
calendar week so you immediately see the

00:19:40,820 --> 00:19:45,230
five working day

00:19:42,519 --> 00:19:46,879
you see when people come to work in the

00:19:45,230 --> 00:19:49,549
morning you see when they go to lunch

00:19:46,879 --> 00:19:52,369
you see the afternoon shift and of

00:19:49,549 --> 00:19:58,549
course you see where the peak is and if

00:19:52,369 --> 00:20:00,289
you look at the one just one day to make

00:19:58,549 --> 00:20:03,080
it a little bit readable more readable

00:20:00,289 --> 00:20:06,110
you can see the deep purple down there

00:20:03,080 --> 00:20:07,970
that's making up most of the load is

00:20:06,110 --> 00:20:10,610
basically the main database server so

00:20:07,970 --> 00:20:13,460
that that makes sense well to make a

00:20:10,610 --> 00:20:17,509
long story short we could consolidate

00:20:13,460 --> 00:20:20,450
that workload on to 12 engines meaning

00:20:17,509 --> 00:20:25,519
processor cores on the new mainframe so

00:20:20,450 --> 00:20:28,480
48 servers with 205 course on to just 12

00:20:25,519 --> 00:20:33,470
cores in a server that can have up to

00:20:28,480 --> 00:20:35,389
120 we would need 256 gigabytes of

00:20:33,470 --> 00:20:38,179
memory while the server can have up to

00:20:35,389 --> 00:20:41,119
three terabytes so the consolidation

00:20:38,179 --> 00:20:44,330
ratio in that case is 48 21 counting

00:20:41,119 --> 00:20:47,570
boxes but it could actually be all the

00:20:44,330 --> 00:20:50,570
way up to close to 500 to 1 because we

00:20:47,570 --> 00:20:53,330
could put 10 times as much on still this

00:20:50,570 --> 00:20:56,600
one server and the ratio for just

00:20:53,330 --> 00:20:58,519
processor cores is about 17 21 but very

00:20:56,600 --> 00:21:01,149
important point these were just

00:20:58,519 --> 00:21:04,759
production servers so if we were to

00:21:01,149 --> 00:21:09,460
include test and development we could

00:21:04,759 --> 00:21:13,129
get the ratio much much higher still ok

00:21:09,460 --> 00:21:18,889
I'm finished because I am over time

00:21:13,129 --> 00:21:20,119
anyway ah questions ok if there are no

00:21:18,889 --> 00:21:22,190
questions I don't know if you know this

00:21:20,119 --> 00:21:26,090
one but i thought i would share it with

00:21:22,190 --> 00:21:29,090
you just as a reward for being patient

00:21:26,090 --> 00:21:31,809
and listening to me for half an hour ok

00:21:29,090 --> 00:21:31,809
thank you very much

00:21:34,909 --> 00:21:36,970

YouTube URL: https://www.youtube.com/watch?v=C4nKuUNqqOc


