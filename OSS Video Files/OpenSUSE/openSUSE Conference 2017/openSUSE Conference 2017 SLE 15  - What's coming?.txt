Title: openSUSE Conference 2017 SLE 15  - What's coming?
Publication date: 2017-05-27
Playlist: openSUSE Conference 2017
Description: 
	https://media.ccc.de/v/1414-sle-15-what-s-coming

A glance into the future

A short introduction into the plans for SLE 15. You will learn about the schedule, scope, and other details of the next major code stream for SUSE Linux enterprise products. 




Stefan Behlert
Captions: 
	00:00:07,700 --> 00:00:15,050
so hello

00:00:09,800 --> 00:00:17,570
Camby that I'm one of those guys Ludwig

00:00:15,050 --> 00:00:20,960
referred to as li management I'm one of

00:00:17,570 --> 00:00:22,849
this Li release managers and I will talk

00:00:20,960 --> 00:00:27,140
to you or bring to you a little bit of

00:00:22,849 --> 00:00:32,930
input and news about the upcoming Sousa

00:00:27,140 --> 00:00:35,510
looms enterprise 15 code and please be

00:00:32,930 --> 00:00:37,730
with me it's a glance into the future so

00:00:35,510 --> 00:00:40,399
not everything is set in stone not

00:00:37,730 --> 00:00:42,980
everything is final and there are parts

00:00:40,399 --> 00:00:45,410
unfortunately which I cannot talk about

00:00:42,980 --> 00:00:46,820
yet either because they are still so

00:00:45,410 --> 00:00:48,679
highly discussed that it would be

00:00:46,820 --> 00:00:55,730
embarrassing to talk about them here or

00:00:48,679 --> 00:00:58,719
because they are still under NDA so in

00:00:55,730 --> 00:01:02,179
the next 20 to 30 minutes you will get

00:00:58,719 --> 00:01:05,180
some general information we will talk a

00:01:02,179 --> 00:01:07,250
little bit about what's coming and then

00:01:05,180 --> 00:01:09,560
I want to talk a little bit about the

00:01:07,250 --> 00:01:13,760
challenges on the way that we will see

00:01:09,560 --> 00:01:22,520
there and how this can will or may

00:01:13,760 --> 00:01:26,180
affect you so be with me one or two

00:01:22,520 --> 00:01:28,760
marketing slides you see from the in

00:01:26,180 --> 00:01:31,190
from the SUSE Linux Enterprise Server we

00:01:28,760 --> 00:01:32,870
have a quite a different life cycle then

00:01:31,190 --> 00:01:34,550
you are accustom from the open sources

00:01:32,870 --> 00:01:37,400
so it's much longer we are talking about

00:01:34,550 --> 00:01:41,840
ten plus three years so every decision

00:01:37,400 --> 00:01:46,400
we are currently make for 15 will affect

00:01:41,840 --> 00:01:48,890
us for the next 13 years what you can

00:01:46,400 --> 00:01:52,700
also see there is what we have started

00:01:48,890 --> 00:01:56,150
with code 12 that we have a yearly

00:01:52,700 --> 00:01:59,330
release cycle of service packs that

00:01:56,150 --> 00:02:02,750
means every year you see a service pack

00:01:59,330 --> 00:02:08,450
we at SP 2 last year you are currently

00:02:02,750 --> 00:02:13,069
waiting for SP 3 also on code 12 coming

00:02:08,450 --> 00:02:17,890
this year and next year you will have 15

00:02:13,069 --> 00:02:17,890
as well as 12 service pack for

00:02:20,940 --> 00:02:26,530
looking a little bit at what this means

00:02:23,830 --> 00:02:30,100
on the products that we have currently

00:02:26,530 --> 00:02:33,160
running on the enterprise side you see

00:02:30,100 --> 00:02:38,310
we have here Slee 11 which is still

00:02:33,160 --> 00:02:42,280
under support where you still get

00:02:38,310 --> 00:02:44,320
updates for we have Slee 12 where we are

00:02:42,280 --> 00:02:49,480
currently producing the first red bubble

00:02:44,320 --> 00:02:53,860
on the slide SP 3 and are coming up with

00:02:49,480 --> 00:02:57,520
us before after that and the botton row

00:02:53,860 --> 00:02:59,290
15 coming and so we will have soon three

00:02:57,520 --> 00:03:05,050
major code bases running in parallel

00:02:59,290 --> 00:03:08,890
being supported for a short time let me

00:03:05,050 --> 00:03:12,190
start with one thing we plan to have the

00:03:08,890 --> 00:03:16,540
first customership of 15 in the second

00:03:12,190 --> 00:03:20,200
quarter of 2018 you may say that's a

00:03:16,540 --> 00:03:25,989
little bit far out it's not in fact it's

00:03:20,200 --> 00:03:28,000
here 12 months or less so we are

00:03:25,989 --> 00:03:32,940
currently working with high pressure to

00:03:28,000 --> 00:03:36,480
get all the openings fixed and adapted

00:03:32,940 --> 00:03:40,950
there's one big change we have compared

00:03:36,480 --> 00:03:43,740
to code 12 we will deliver the

00:03:40,950 --> 00:03:47,130
traditional operating server that means

00:03:43,740 --> 00:03:49,950
a server that has everything and we will

00:03:47,130 --> 00:03:53,220
deliver something that we call Susie

00:03:49,950 --> 00:03:57,900
container as a service platform which is

00:03:53,220 --> 00:04:03,000
in fact there to host containers and

00:03:57,900 --> 00:04:06,450
other stuff in parallel on the scheduled

00:04:03,000 --> 00:04:09,090
side you see here we have in July the

00:04:06,450 --> 00:04:11,130
code drop deadlines in case you wonder

00:04:09,090 --> 00:04:13,260
what that means that's for our partners

00:04:11,130 --> 00:04:16,290
or hardware partners our software

00:04:13,260 --> 00:04:19,020
partners to deliver their part their

00:04:16,290 --> 00:04:22,200
codes their hardware ableman

00:04:19,020 --> 00:04:26,160
patches whatever they want us there to

00:04:22,200 --> 00:04:27,720
have inside of code 15 that means we are

00:04:26,160 --> 00:04:30,210
working closely together with them

00:04:27,720 --> 00:04:34,530
currently to get everything they're in

00:04:30,210 --> 00:04:36,630
shape unto that we have then until

00:04:34,530 --> 00:04:38,220
September time to get everything

00:04:36,630 --> 00:04:41,490
together for our documentation

00:04:38,220 --> 00:04:45,540
department so they can update and write

00:04:41,490 --> 00:04:51,000
and start documenting how code 15 will

00:04:45,540 --> 00:04:52,830
work and shortly after that most likely

00:04:51,000 --> 00:04:54,900
not all of the documentation will be

00:04:52,830 --> 00:04:58,530
finished then but at least hopefully

00:04:54,900 --> 00:05:00,960
some of it we will release beta one

00:04:58,530 --> 00:05:05,460
which will be the first public beta then

00:05:00,960 --> 00:05:08,100
that is accessible for everybody in case

00:05:05,460 --> 00:05:10,110
you're wondering no that's not of course

00:05:08,100 --> 00:05:13,680
the first milestone we produce we have

00:05:10,110 --> 00:05:16,440
several alphas in between and before but

00:05:13,680 --> 00:05:18,900
those are internal only so we get time

00:05:16,440 --> 00:05:22,560
to fix everything that is broken that is

00:05:18,900 --> 00:05:28,110
not working to our success for thinking

00:05:22,560 --> 00:05:31,230
or that is hindering us seven beat us

00:05:28,110 --> 00:05:36,210
and then followed by a relatively short

00:05:31,230 --> 00:05:39,180
Ries release candidate milestones and

00:05:36,210 --> 00:05:42,180
then in April you will get the gold

00:05:39,180 --> 00:05:43,700
master followed sometime soon after that

00:05:42,180 --> 00:05:46,650
the first customership

00:05:43,700 --> 00:05:49,979
the gold master candidate

00:05:46,650 --> 00:05:52,229
case you wonder is for us internally

00:05:49,979 --> 00:05:54,419
when we want to have everything ready so

00:05:52,229 --> 00:05:56,430
it can be shipped and the first

00:05:54,419 --> 00:05:58,680
customership is then when we have

00:05:56,430 --> 00:06:01,080
everything ready so even customers and

00:05:58,680 --> 00:06:03,060
everybody else can really use it so

00:06:01,080 --> 00:06:10,139
every mirror has been fulfilled the

00:06:03,060 --> 00:06:12,030
download service already and so on so

00:06:10,139 --> 00:06:15,210
now to the part that most likely

00:06:12,030 --> 00:06:18,449
interests you most though what's coming

00:06:15,210 --> 00:06:21,180
on the scope side yeah it's a new major

00:06:18,449 --> 00:06:23,479
code stream good week set it early on

00:06:21,180 --> 00:06:27,120
this stage everything is getting updated

00:06:23,479 --> 00:06:29,789
that means we are really looking at

00:06:27,120 --> 00:06:33,060
every package for an update ah

00:06:29,789 --> 00:06:35,460
which is quite a lot you have seen I

00:06:33,060 --> 00:06:39,419
think in one of the slides from Richard

00:06:35,460 --> 00:06:44,400
the tumbleweed hit 10,000 packages sley

00:06:39,419 --> 00:06:47,130
has on code 12 currently around between

00:06:44,400 --> 00:06:50,250
3,000 and 4,000 it varies a little bit

00:06:47,130 --> 00:06:52,620
depending on the platforms and weave

00:06:50,250 --> 00:06:55,830
code 15 I expect it to be in the same

00:06:52,620 --> 00:06:58,160
range so that's quite a huge number of

00:06:55,830 --> 00:07:00,510
packages where we have to look at and

00:06:58,160 --> 00:07:05,940
everything should work together off

00:07:00,510 --> 00:07:11,090
cross on the platform side arm no big

00:07:05,940 --> 00:07:17,000
changes there you see x86 64 s 390

00:07:11,090 --> 00:07:20,610
little-endian PowerPC 64 as well as on

00:07:17,000 --> 00:07:25,199
product wise the usual what you have

00:07:20,610 --> 00:07:27,810
seen on code 12 will also exist on 15

00:07:25,199 --> 00:07:31,919
we will also release at the same time

00:07:27,810 --> 00:07:33,479
choose images as well as CASP I'm not

00:07:31,919 --> 00:07:34,919
sure if you have something here about

00:07:33,479 --> 00:07:36,750
caste but I'm pretty sure it will be

00:07:34,919 --> 00:07:41,479
mentioned in other talks as well so I

00:07:36,750 --> 00:07:41,479
will not go into too much detail there

00:07:41,610 --> 00:07:50,160
one big change that we want to do is we

00:07:44,820 --> 00:07:52,050
want to enhance the module concept that

00:07:50,160 --> 00:07:53,910
we've started with code 12

00:07:52,050 --> 00:07:57,120
that means we want to get the

00:07:53,910 --> 00:08:00,930
installation media relatively small we

00:07:57,120 --> 00:08:03,780
want to have more produced in small

00:08:00,930 --> 00:08:06,300
independent or mostly independent

00:08:03,780 --> 00:08:11,040
building bricks let's call it in that

00:08:06,300 --> 00:08:15,720
and build out of these than our products

00:08:11,040 --> 00:08:19,950
I looked a lot how to find the picture

00:08:15,720 --> 00:08:22,200
that would show this in a good way and I

00:08:19,950 --> 00:08:24,780
admit every picture that I saw in every

00:08:22,200 --> 00:08:28,170
diagram had its flaws this one comes

00:08:24,780 --> 00:08:31,650
close to how it will look like so we

00:08:28,170 --> 00:08:33,600
have the common code base that we use

00:08:31,650 --> 00:08:36,020
for all the products there one

00:08:33,600 --> 00:08:38,700
repository where we build all out of it

00:08:36,020 --> 00:08:42,180
for all the products so they work

00:08:38,700 --> 00:08:44,850
together we will build out of that

00:08:42,180 --> 00:08:48,480
something that's marked here as as lean

00:08:44,850 --> 00:08:51,690
OS in fact it's our code name for the

00:08:48,480 --> 00:08:55,020
installation media and we will build out

00:08:51,690 --> 00:08:57,990
of that various building bricks and I

00:08:55,020 --> 00:09:00,630
call it that on purpose from which we

00:08:57,990 --> 00:09:04,800
will then create the various products

00:09:00,630 --> 00:09:13,300
and of course also the modules that are

00:09:04,800 --> 00:09:15,010
on top of these products that has of

00:09:13,300 --> 00:09:22,450
some challenges and we will come to that

00:09:15,010 --> 00:09:25,240
later packages systems that we have well

00:09:22,450 --> 00:09:27,910
I told you already we will update

00:09:25,240 --> 00:09:32,440
everything a few numbers here on the

00:09:27,910 --> 00:09:37,200
kernel side we will use 4.12 arm on the

00:09:32,440 --> 00:09:40,570
G lib side 2.26 and on the GCC side 7.2

00:09:37,200 --> 00:09:43,810
you may notice that all of these reefs

00:09:40,570 --> 00:09:47,200
are not yet available in a final stable

00:09:43,810 --> 00:09:50,829
version we know that for some we expect

00:09:47,200 --> 00:09:54,760
them to be there with beta 1 some of

00:09:50,829 --> 00:09:57,940
these we may not be final yet when we

00:09:54,760 --> 00:10:01,720
have beta 1 but are in the last phase of

00:09:57,940 --> 00:10:04,779
their release candidate cycle so we plan

00:10:01,720 --> 00:10:06,190
to go with these versions because we

00:10:04,779 --> 00:10:09,880
think it makes the most sense for

00:10:06,190 --> 00:10:16,810
everybody so we will be there a little

00:10:09,880 --> 00:10:21,070
bit ahead of what is stable you see

00:10:16,810 --> 00:10:21,640
there are 3 kind of blocks on the lower

00:10:21,070 --> 00:10:25,779
end

00:10:21,640 --> 00:10:27,910
nomes Reed 26 and also we will have

00:10:25,779 --> 00:10:31,480
Whalen support so you see we are

00:10:27,910 --> 00:10:34,270
planning here also for some changes and

00:10:31,480 --> 00:10:36,070
newer versions and updates and on the

00:10:34,270 --> 00:10:39,130
right side there is the most interesting

00:10:36,070 --> 00:10:42,459
part because we plan also to replace

00:10:39,130 --> 00:10:46,990
some defaults that we had for example we

00:10:42,459 --> 00:10:50,290
want to switch from ntp to crony which

00:10:46,990 --> 00:10:54,070
has some challenges we will plan to

00:10:50,290 --> 00:10:56,770
switch from the souza firewall to

00:10:54,070 --> 00:11:01,120
firewall D and we are looking currently

00:10:56,770 --> 00:11:05,740
at this 380 90s package system so there

00:11:01,120 --> 00:11:11,450
are some huge changes coming and we hope

00:11:05,740 --> 00:11:14,880
that those will work out nicely

00:11:11,450 --> 00:11:17,070
but those huge changes are also

00:11:14,880 --> 00:11:20,400
producing quite some challenges that we

00:11:17,070 --> 00:11:24,920
stumbled over so your effort we are

00:11:20,400 --> 00:11:29,460
currently working out of Factory and

00:11:24,920 --> 00:11:32,640
Slee 15 is based on observe actory loot

00:11:29,460 --> 00:11:36,540
reset we will fork off at one point in

00:11:32,640 --> 00:11:39,300
time and that will be in July roughly

00:11:36,540 --> 00:11:42,660
said I'm not giving out an exact date

00:11:39,300 --> 00:11:46,290
here because it will depend a little bit

00:11:42,660 --> 00:11:48,870
on what we have then how stable we are

00:11:46,290 --> 00:11:52,020
and when we will go with stuff that is

00:11:48,870 --> 00:11:55,530
incompatible and stop for example at

00:11:52,020 --> 00:11:58,230
some versions of packages arm but

00:11:55,530 --> 00:12:02,610
roughly said it will be most likely mid

00:11:58,230 --> 00:12:06,600
of July until then we will use

00:12:02,610 --> 00:12:09,120
everything that we have won and in the

00:12:06,600 --> 00:12:11,940
same way as it is on openSUSE factory

00:12:09,120 --> 00:12:16,590
it's the same packages the same code

00:12:11,940 --> 00:12:19,260
that we use there we have a few

00:12:16,590 --> 00:12:22,410
adaptions when it comes to the branding

00:12:19,260 --> 00:12:25,650
packages and we will all that we have

00:12:22,410 --> 00:12:28,670
they're run on open q8s independent of

00:12:25,650 --> 00:12:31,410
what is running on openSUSE itself

00:12:28,670 --> 00:12:33,540
simply because we have some tests there

00:12:31,410 --> 00:12:34,260
and we want to get everything running

00:12:33,540 --> 00:12:38,640
smoothly

00:12:34,260 --> 00:12:43,590
of course bugs that we find will go also

00:12:38,640 --> 00:12:45,930
back to openSUSE factory we encourage as

00:12:43,590 --> 00:12:47,760
you've heard from ludwig the people to

00:12:45,930 --> 00:12:51,210
submit there

00:12:47,760 --> 00:12:53,400
we also ask you as openSUSE contributors

00:12:51,210 --> 00:12:56,460
to submit if you five back fixes them

00:12:53,400 --> 00:12:58,080
early enough so we can see and test them

00:12:56,460 --> 00:13:01,260
and see if there are side-effects on

00:12:58,080 --> 00:13:03,840
platforms that maybe are not tested as

00:13:01,260 --> 00:13:07,830
intensively in open sources then they

00:13:03,840 --> 00:13:09,960
are on sleep and of course if you're a

00:13:07,830 --> 00:13:12,780
package maintainer double project

00:13:09,960 --> 00:13:15,540
maintainer help us here with accepting

00:13:12,780 --> 00:13:17,850
stuff early because the sooner we get

00:13:15,540 --> 00:13:19,620
everything inside the Ballet's is and

00:13:17,850 --> 00:13:21,860
the earlier we can test it on all the

00:13:19,620 --> 00:13:21,860
platforms

00:13:24,760 --> 00:13:30,850
one thing that's causing me currently a

00:13:27,740 --> 00:13:33,830
little bit of headaches are dependencies

00:13:30,850 --> 00:13:38,420
I'm pretty sure you all have a desktop

00:13:33,830 --> 00:13:40,790
machine with something that is really

00:13:38,420 --> 00:13:42,950
relatively huge installed on top of it

00:13:40,790 --> 00:13:47,540
and if you install a new package it

00:13:42,950 --> 00:13:51,260
mostly is that package and that's it but

00:13:47,540 --> 00:13:55,790
if you use a rather small installation

00:13:51,260 --> 00:13:57,620
image or install system and you try then

00:13:55,790 --> 00:14:01,280
to install stuff you will find

00:13:57,620 --> 00:14:04,640
dependencies that are bad that are not

00:14:01,280 --> 00:14:09,980
good why do we want to get these

00:14:04,640 --> 00:14:13,280
dependencies a way or smooth or made

00:14:09,980 --> 00:14:16,240
easier a simple reason we have people

00:14:13,280 --> 00:14:18,530
who want to have a small install system

00:14:16,240 --> 00:14:21,260
we also have people who want to run

00:14:18,530 --> 00:14:25,760
containers and virtual images that are

00:14:21,260 --> 00:14:28,970
small and the more packages you add to

00:14:25,760 --> 00:14:31,700
assist them when you do a survey in the

00:14:28,970 --> 00:14:33,440
more unstable and the more unsecure it

00:14:31,700 --> 00:14:35,510
gets and the more you have to look for

00:14:33,440 --> 00:14:38,750
side-effects so we want to keep that

00:14:35,510 --> 00:14:41,990
relatively small and therefore we did a

00:14:38,750 --> 00:14:44,660
few tests on such a rather small

00:14:41,990 --> 00:14:48,020
installation and please don't tell me

00:14:44,660 --> 00:14:50,480
that 650 MB is not small yes I know

00:14:48,020 --> 00:14:53,390
there are people who got it down to 200

00:14:50,480 --> 00:14:57,040
MB I know of one person who claims to

00:14:53,390 --> 00:15:00,800
have an running system with 50 megabyte

00:14:57,040 --> 00:15:02,960
yeah but we want it to be upgradable we

00:15:00,800 --> 00:15:05,960
want to be able to install packages and

00:15:02,960 --> 00:15:08,120
a few other things so this was the

00:15:05,960 --> 00:15:11,570
compromise we had there

00:15:08,120 --> 00:15:16,700
I will show you a few examples on the

00:15:11,570 --> 00:15:19,670
next few slides one caveat in advanced

00:15:16,700 --> 00:15:24,050
these examples are taking at random each

00:15:19,670 --> 00:15:29,120
of those should show you a specific

00:15:24,050 --> 00:15:32,300
problem note that all the numbers you

00:15:29,120 --> 00:15:35,779
see may not be valid anymore because

00:15:32,300 --> 00:15:36,350
dependencies change over the time and if

00:15:35,779 --> 00:15:39,650
you follow

00:15:36,350 --> 00:15:43,339
openSUSE factory closely you can see

00:15:39,650 --> 00:15:46,480
this um note that the package maintainer

00:15:43,339 --> 00:15:50,210
czar in most cases not to blame because

00:15:46,480 --> 00:15:51,800
we have dependencies that are there

00:15:50,210 --> 00:15:54,040
since ages

00:15:51,800 --> 00:15:59,540
the oldest one that I found was from

00:15:54,040 --> 00:16:01,460
2003 we have dependencies that are there

00:15:59,540 --> 00:16:05,930
because upstream thought it would be

00:16:01,460 --> 00:16:08,240
nice to have it and some of these

00:16:05,930 --> 00:16:10,300
dependencies made sense at the time they

00:16:08,240 --> 00:16:14,810
were added some made even in our sense

00:16:10,300 --> 00:16:18,620
but of course not necessarily if you

00:16:14,810 --> 00:16:22,250
want to be on a small system for all

00:16:18,620 --> 00:16:25,520
these three examples and I took them on

00:16:22,250 --> 00:16:28,279
purpose that will come a big thank you

00:16:25,520 --> 00:16:30,410
to the package maintainer who helped to

00:16:28,279 --> 00:16:35,029
get the dependency solved I'm not an

00:16:30,410 --> 00:16:41,390
expert in most of those so a big thanks

00:16:35,029 --> 00:16:43,220
for the work they did here first you

00:16:41,390 --> 00:16:45,790
remember I said we want to exchange the

00:16:43,220 --> 00:16:48,440
Sousa firewall to with the firewall D

00:16:45,790 --> 00:16:50,870
looking at through the firewall if you

00:16:48,440 --> 00:16:55,150
install it on the test machine nine

00:16:50,870 --> 00:16:58,029
packages forty one megabyte ah that's

00:16:55,150 --> 00:17:01,550
not good I saw it at the first moment

00:16:58,029 --> 00:17:05,050
then we try to install the firewall D

00:17:01,550 --> 00:17:09,530
same system of course

00:17:05,050 --> 00:17:15,130
eighty-three new packages and 106

00:17:09,530 --> 00:17:18,290
megabyte what I thought 40 was bad 106

00:17:15,130 --> 00:17:19,940
bull walk not good I'm pretty sure you

00:17:18,290 --> 00:17:23,750
can't read all the packages there you

00:17:19,940 --> 00:17:26,630
should not but looking at the package

00:17:23,750 --> 00:17:30,800
list we noticed three things that fell

00:17:26,630 --> 00:17:33,530
out one was fire Baldy wanted to install

00:17:30,800 --> 00:17:40,550
Mesa on a system that had no eggs

00:17:33,530 --> 00:17:42,470
Oh strange okay Pisan G object yeah it's

00:17:40,550 --> 00:17:46,280
clear if you have person you get a lot

00:17:42,470 --> 00:17:48,260
of packages but maybe there are some

00:17:46,280 --> 00:17:53,330
things which you can do on the

00:17:48,260 --> 00:17:55,280
dependency list deepest one x11 I think

00:17:53,330 --> 00:17:59,630
meanwhile it's called PI Cindy bus

00:17:55,280 --> 00:18:02,920
person 2 or pi sensory ah so you see

00:17:59,630 --> 00:18:07,370
this is two three weeks old

00:18:02,920 --> 00:18:11,810
all those pull in several dozen packages

00:18:07,370 --> 00:18:16,010
and in the end you have the firewall D

00:18:11,810 --> 00:18:18,410
and you end up with 106 megabyte and the

00:18:16,010 --> 00:18:20,810
bad thing is the firewall D maintainer

00:18:18,410 --> 00:18:23,690
can't do anything because it's somewhere

00:18:20,810 --> 00:18:27,350
in the chain that follows up somewhere

00:18:23,690 --> 00:18:30,650
on parson G object on the d-bus x11

00:18:27,350 --> 00:18:32,720
package you're simply pulling dozens of

00:18:30,650 --> 00:18:37,340
other stuff and that's also burmese ax

00:18:32,720 --> 00:18:39,560
comes into the play so the Python

00:18:37,340 --> 00:18:42,380
maintained us and the firewall D

00:18:39,560 --> 00:18:44,450
maintained has looked at it changed a

00:18:42,380 --> 00:18:47,420
little bit on the dependencies fixed one

00:18:44,450 --> 00:18:52,130
or two change the require here and there

00:18:47,420 --> 00:18:54,710
to use something different and then we

00:18:52,130 --> 00:18:59,780
retry the same thing but this time also

00:18:54,710 --> 00:19:03,080
with without the mind recommends and we

00:18:59,780 --> 00:19:06,710
had 34 packages suddenly no longer 80

00:19:03,080 --> 00:19:09,560
but 34 and more astonishingly we were

00:19:06,710 --> 00:19:11,060
down to 22 megabyte which is less than

00:19:09,560 --> 00:19:14,510
where we started from with the Sousa

00:19:11,060 --> 00:19:15,050
firewall too so that was good that's

00:19:14,510 --> 00:19:17,840
okay

00:19:15,050 --> 00:19:18,830
if you install with and that's a type on

00:19:17,840 --> 00:19:20,929
the slide if you

00:19:18,830 --> 00:19:23,659
installed with the - - recommends you

00:19:20,929 --> 00:19:25,700
get a little bit more packages quite a

00:19:23,659 --> 00:19:28,399
lot of more but that's okay in then

00:19:25,700 --> 00:19:30,980
because that's exactly what what we

00:19:28,399 --> 00:19:34,519
expect them from the recommends but if

00:19:30,980 --> 00:19:36,710
you install without recommends then you

00:19:34,519 --> 00:19:39,669
end up with less dependencies there and

00:19:36,710 --> 00:19:44,299
less space used than we had before and

00:19:39,669 --> 00:19:48,350
all of that simply because the D bus

00:19:44,299 --> 00:19:51,590
1x11 package was not the best choice

00:19:48,350 --> 00:19:54,769
there to take there were some other

00:19:51,590 --> 00:19:59,260
package that was helpful and that

00:19:54,769 --> 00:19:59,260
reduced the dependency dramatically

00:20:01,090 --> 00:20:07,429
another case we stumbled over the java

00:20:04,309 --> 00:20:09,470
packages tools if you try to install

00:20:07,429 --> 00:20:15,110
java you sooner or later get this

00:20:09,470 --> 00:20:20,110
package and it fetches you Lua it

00:20:15,110 --> 00:20:23,840
fetches you pison and that but it is not

00:20:20,110 --> 00:20:27,620
necessarily bad on the space side if you

00:20:23,840 --> 00:20:29,600
look for the megabytes but if you

00:20:27,620 --> 00:20:32,690
consider that you just wanted to install

00:20:29,600 --> 00:20:37,639
java and you end up with Lua as well as

00:20:32,690 --> 00:20:40,820
pison ah that's not good so we looked

00:20:37,639 --> 00:20:44,419
into the java packages to us the lure is

00:20:40,820 --> 00:20:46,730
simply because there's one script that

00:20:44,419 --> 00:20:50,149
changes in a pass from absolute to

00:20:46,730 --> 00:20:52,760
relative or the other way around and the

00:20:50,149 --> 00:20:56,480
Pisan well the Pisan is problematic

00:20:52,760 --> 00:20:59,840
because the pison stuff is there to help

00:20:56,480 --> 00:21:03,880
people who use maven to get everything

00:20:59,840 --> 00:21:08,210
installed they're set up correctly so

00:21:03,880 --> 00:21:10,190
tomash what I looked into that you made

00:21:08,210 --> 00:21:12,550
some changes there looked a little bit

00:21:10,190 --> 00:21:14,890
in the Java dependencies

00:21:12,550 --> 00:21:17,440
some of that stuff is already fixed in

00:21:14,890 --> 00:21:21,370
factory at the moment some is currently

00:21:17,440 --> 00:21:27,130
pending the fix we are not getting rid

00:21:21,370 --> 00:21:28,780
of pricing because of maven um but it

00:21:27,130 --> 00:21:32,530
will be get better and we will reduce

00:21:28,780 --> 00:21:36,309
the dependency dependency chain a little

00:21:32,530 --> 00:21:37,929
bit you may say is it worth it to get it

00:21:36,309 --> 00:21:39,820
a little bit reduced I don't have

00:21:37,929 --> 00:21:40,210
numbers yet because the fixes are still

00:21:39,820 --> 00:21:43,000
pending

00:21:40,210 --> 00:21:45,940
but yes it's worse because every package

00:21:43,000 --> 00:21:48,190
really makes a difference because at one

00:21:45,940 --> 00:21:50,470
point in time the dependency below that

00:21:48,190 --> 00:21:52,420
package will change again and you

00:21:50,470 --> 00:21:56,950
suddenly end up again with a big bunch

00:21:52,420 --> 00:21:59,050
of packages and if somebody has a good

00:21:56,950 --> 00:22:02,650
idea how to get maven support without

00:21:59,050 --> 00:22:05,830
pison and java packages tools speak up

00:22:02,650 --> 00:22:09,750
and help us there because that will be

00:22:05,830 --> 00:22:09,750
really good at the end

00:22:12,270 --> 00:22:17,950
Perl scripts are welcome

00:22:15,130 --> 00:22:26,590
just submit jobs as a factory and it

00:22:17,950 --> 00:22:33,460
will automatically get there the search

00:22:26,590 --> 00:22:36,220
one go SERP cgk when I first installed

00:22:33,460 --> 00:22:38,260
that package on the test system I was

00:22:36,220 --> 00:22:42,100
astonished because I suddenly ended up

00:22:38,260 --> 00:22:46,360
with lib qt5 lips and I was wondering

00:22:42,100 --> 00:22:49,690
why do I need lip Duty five packages if

00:22:46,360 --> 00:22:53,740
I want to install goes for PC GK we just

00:22:49,690 --> 00:22:57,460
trust some font support for go script

00:22:53,740 --> 00:23:00,100
and a little bit of digging into that

00:22:57,460 --> 00:23:05,500
showed us the reason was simple they've

00:23:00,100 --> 00:23:09,450
also requires there on the f2 ft2 demos

00:23:05,500 --> 00:23:11,500
package that requires was introduced

00:23:09,450 --> 00:23:16,929
00:23:11,500 --> 00:23:19,750
and looking why that is needed and the

00:23:16,929 --> 00:23:22,299
ft2 demos is really a big bunch of

00:23:19,750 --> 00:23:25,740
collection for free type tools also

00:23:22,299 --> 00:23:30,519
graphical ones therefore the dependency

00:23:25,740 --> 00:23:35,830
to lib qt5 and it was just needed

00:23:30,519 --> 00:23:40,090
because in two files two scripts ft dump

00:23:35,830 --> 00:23:43,659
was used and it was not possible to omit

00:23:40,090 --> 00:23:45,519
that so and that's the case when I said

00:23:43,659 --> 00:23:47,350
the dependency will grow bigger and

00:23:45,519 --> 00:23:50,080
bigger the more you have packages we

00:23:47,350 --> 00:23:52,480
looked how to switch that and the

00:23:50,080 --> 00:23:56,559
solution was that we splitted the FT two

00:23:52,480 --> 00:24:01,360
demos package into several sub packages

00:23:56,559 --> 00:24:04,149
so now you can simply require the FT

00:24:01,360 --> 00:24:07,779
dump if you need it and don't need to

00:24:04,149 --> 00:24:11,710
get all the many applications that you

00:24:07,779 --> 00:24:14,559
have for free type that require the Qt

00:24:11,710 --> 00:24:17,889
stuff so you can now install it without

00:24:14,559 --> 00:24:22,029
having Lib duty installed and pull it

00:24:17,889 --> 00:24:26,919
into the split is already in open to the

00:24:22,029 --> 00:24:30,519
factory for go scripts egk the change is

00:24:26,919 --> 00:24:34,539
still pending but once that is done that

00:24:30,519 --> 00:24:38,559
is also reducing the amount of packages

00:24:34,539 --> 00:24:41,769
brought into and it's a good example why

00:24:38,559 --> 00:24:43,690
it's sometimes a little bit of tricky to

00:24:41,769 --> 00:24:46,149
find the right package to add as a

00:24:43,690 --> 00:24:48,370
requires and why it's sometimes very

00:24:46,149 --> 00:24:51,309
good if you split to your package so if

00:24:48,370 --> 00:24:53,559
your package maintainer and you consider

00:24:51,309 --> 00:24:55,870
of having everything in one package

00:24:53,559 --> 00:24:59,049
think about the dependencies if it's

00:24:55,870 --> 00:25:02,019
really needed if it's useful to have it

00:24:59,049 --> 00:25:04,870
in several parts it's obvious when you

00:25:02,019 --> 00:25:06,669
have plug-ins or anything else but there

00:25:04,870 --> 00:25:11,279
are also parts where this is not as

00:25:06,669 --> 00:25:11,279
obvious but it makes a big difference

00:25:13,410 --> 00:25:21,580
yeah that's my call for action for

00:25:16,270 --> 00:25:23,050
everybody if you see dependencies that

00:25:21,580 --> 00:25:24,700
worry you or if you install a package

00:25:23,050 --> 00:25:26,730
and you suddenly end up with packages

00:25:24,700 --> 00:25:30,610
where you wonder why is this the case

00:25:26,730 --> 00:25:33,240
don't be shy open my buck report or look

00:25:30,610 --> 00:25:36,040
into it or even better submit something

00:25:33,240 --> 00:25:39,790
because that helps us all to get the

00:25:36,040 --> 00:25:42,100
distribution smaller to get the these

00:25:39,790 --> 00:25:44,080
stuff that the footprint let's call in

00:25:42,100 --> 00:25:47,740
that way that we pull into when we

00:25:44,080 --> 00:25:52,030
update our smaller and it helps also

00:25:47,740 --> 00:25:54,040
with maintaining all that stuff at the

00:25:52,030 --> 00:25:55,570
same time if you create a new sub sub

00:25:54,040 --> 00:25:57,790
package please think about the

00:25:55,570 --> 00:26:00,370
description there was a long thread on

00:25:57,790 --> 00:26:04,000
one of the openSUSE mailing lists so I

00:26:00,370 --> 00:26:06,520
will not go deep into that but opening a

00:26:04,000 --> 00:26:10,740
bug report or submitting a patch to

00:26:06,520 --> 00:26:13,630
adapt a description is appreciated and

00:26:10,740 --> 00:26:21,040
not everybody knows what is in a sub

00:26:13,630 --> 00:26:23,560
package so that is also helpful and one

00:26:21,040 --> 00:26:26,290
more thing advertising a little bit here

00:26:23,560 --> 00:26:30,610
with Lee 12 we started to have public

00:26:26,290 --> 00:26:32,500
public beat us so while roof code 11 you

00:26:30,610 --> 00:26:34,960
had to be one of our partners and being

00:26:32,500 --> 00:26:38,020
a partner program to try our beat us and

00:26:34,960 --> 00:26:41,170
were hand selected and had to go through

00:26:38,020 --> 00:26:45,220
an assessment center and what else was

00:26:41,170 --> 00:26:48,160
not as bad but nearly to join readings

00:26:45,220 --> 00:26:51,610
lead 12 public beaches where everybody

00:26:48,160 --> 00:26:55,120
could join and we planned to have the

00:26:51,610 --> 00:27:00,010
same thing again firstly 15 you've seen

00:26:55,120 --> 00:27:03,880
beta 1 will come in September so you

00:27:00,010 --> 00:27:05,590
have still time to apply there um we ask

00:27:03,880 --> 00:27:08,700
for an email address and a few other

00:27:05,590 --> 00:27:08,700
things as far as I know

00:27:08,790 --> 00:27:15,430
go to the URL that's mentioned there you

00:27:12,820 --> 00:27:18,220
can also search on the zoo zip main page

00:27:15,430 --> 00:27:21,910
for betta program there's everything you

00:27:18,220 --> 00:27:25,360
need on information and there's also the

00:27:21,910 --> 00:27:31,090
way to say I want to join and then you

00:27:25,360 --> 00:27:33,780
can get 315 images relatively soon when

00:27:31,090 --> 00:27:38,710
every milestone is finished and

00:27:33,780 --> 00:27:41,460
published you have access to it we are

00:27:38,710 --> 00:27:44,710
happy about everybody who joined there

00:27:41,460 --> 00:27:49,360
we are not promising to fix every bug

00:27:44,710 --> 00:27:51,100
report there but we try our best to get

00:27:49,360 --> 00:27:54,610
everything solved to your satisfaction

00:27:51,100 --> 00:27:57,400
there and it's really cool if you join

00:27:54,610 --> 00:27:59,860
there and get these images early enough

00:27:57,400 --> 00:28:01,960
so if you're missing something or think

00:27:59,860 --> 00:28:04,030
something is wrongly configured you can

00:28:01,960 --> 00:28:06,730
influence the Sousa Linux Enterprise

00:28:04,030 --> 00:28:10,240
product and therefore also to a certain

00:28:06,730 --> 00:28:16,390
degree leap because leap will also be

00:28:10,240 --> 00:28:20,290
based on that so with that I'm at the

00:28:16,390 --> 00:28:22,930
end ah we have around one minute left

00:28:20,290 --> 00:28:26,500
but if their question answers I'm

00:28:22,930 --> 00:28:29,680
willing to go beyond that time frame

00:28:26,500 --> 00:28:30,880
that I have you got my attention when

00:28:29,680 --> 00:28:34,780
you said that you were changing the

00:28:30,880 --> 00:28:37,030
firewall and what I'm wondering is if I

00:28:34,780 --> 00:28:40,450
have an application that's dependent on

00:28:37,030 --> 00:28:42,280
using the CLI or API calls to the old

00:28:40,450 --> 00:28:44,340
firewall is that going to break my

00:28:42,280 --> 00:28:46,840
application

00:28:44,340 --> 00:28:49,720
that's a good question I'm saying why I

00:28:46,840 --> 00:28:52,870
asked it yeah and I'm sorry I have no

00:28:49,720 --> 00:28:54,430
clear answer to you yet we have a script

00:28:52,870 --> 00:28:58,510
we are currently looking into the

00:28:54,430 --> 00:29:01,810
migration path there what we can do to

00:28:58,510 --> 00:29:06,220
make the transition easy we are we are

00:29:01,810 --> 00:29:12,310
not 100 percent sure if we can cover

00:29:06,220 --> 00:29:14,550
every case to be honest oh oh thank you

00:29:12,310 --> 00:29:18,510
[Laughter]

00:29:14,550 --> 00:29:21,300
but of course join the public beta and

00:29:18,510 --> 00:29:22,980
there I think if you bring it up if it's

00:29:21,300 --> 00:29:25,500
not working then we will look also in

00:29:22,980 --> 00:29:28,020
these cases because it would I don't

00:29:25,500 --> 00:29:30,570
want to lie to you we are not there yet

00:29:28,020 --> 00:29:33,360
that we can say for sure everything or

00:29:30,570 --> 00:29:36,540
every situation is supported I'm pretty

00:29:33,360 --> 00:29:38,790
sure not seeing what some people do with

00:29:36,540 --> 00:29:42,630
the firewall and a few other of the old

00:29:38,790 --> 00:29:45,710
stuff and in case you ask I've seen

00:29:42,630 --> 00:29:48,060
people doing things with a finger server

00:29:45,710 --> 00:29:52,650
where the finger server was not even

00:29:48,060 --> 00:29:54,240
never intended to be used for so and we

00:29:52,650 --> 00:29:56,790
will drop that in case you don't know

00:29:54,240 --> 00:30:01,200
what a finger server is don't ask it's

00:29:56,790 --> 00:30:02,880
all stuff from the last century so yes

00:30:01,200 --> 00:30:05,040
well I appreciated your comment about

00:30:02,880 --> 00:30:06,900
not wanting to lie to me because it

00:30:05,040 --> 00:30:09,090
reminded me of an old story about the

00:30:06,900 --> 00:30:11,850
difference between a car salesman and a

00:30:09,090 --> 00:30:19,410
computer salesman a car salesman knows

00:30:11,850 --> 00:30:25,940
when he's lying I just sometimes I have

00:30:19,410 --> 00:30:25,940
no clue but that's all you wanted to say

00:30:26,390 --> 00:30:33,240
also related to the question about a

00:30:29,040 --> 00:30:35,040
firewall D is there any shadow change

00:30:33,240 --> 00:30:39,360
with regard to the network management

00:30:35,040 --> 00:30:41,880
infrastructure in Slee 15 sorry I don't

00:30:39,360 --> 00:30:44,700
I didn't get the last up is there any

00:30:41,880 --> 00:30:48,770
plan to change the manner the network

00:30:44,700 --> 00:30:51,300
management infrastructure Inslee 15

00:30:48,770 --> 00:30:54,540
because right now as I see it there's

00:30:51,300 --> 00:30:56,220
basically three solutions that are that

00:30:54,540 --> 00:31:00,390
basically exists and need to be

00:30:56,220 --> 00:31:04,530
maintained somehow you're talking about

00:31:00,390 --> 00:31:07,910
wicked network manager and the network

00:31:04,530 --> 00:31:07,910
network T yes

00:31:09,440 --> 00:31:16,559
it's not so easy to answer we will

00:31:13,559 --> 00:31:21,990
definitely keep wicked that's for sure

00:31:16,559 --> 00:31:24,750
um we definitely plan to keep the

00:31:21,990 --> 00:31:27,420
network manager at the moment we are

00:31:24,750 --> 00:31:29,900
nevertheless looking into getting all

00:31:27,420 --> 00:31:32,520
these reintegrated more closely and

00:31:29,900 --> 00:31:36,080
especially on the system the network D

00:31:32,520 --> 00:31:38,420
side we see on the upstream side

00:31:36,080 --> 00:31:41,700
development that's very encouraging

00:31:38,420 --> 00:31:45,090
there were one or two years ago still

00:31:41,700 --> 00:31:48,480
the tendency to use that or to have the

00:31:45,090 --> 00:31:54,510
main purpose for that only on the cloud

00:31:48,480 --> 00:31:57,360
stuff we involve that intentions for it

00:31:54,510 --> 00:32:01,350
have changed so we are looking into that

00:31:57,360 --> 00:32:04,830
and planning to integrate all three but

00:32:01,350 --> 00:32:07,610
we will definitely have as main systems

00:32:04,830 --> 00:32:10,230
the network D as well as the wicked

00:32:07,610 --> 00:32:12,750
because for one thing we don't want to

00:32:10,230 --> 00:32:15,929
change all the con fix in a migration

00:32:12,750 --> 00:32:19,290
and the other thing is we currently

00:32:15,929 --> 00:32:22,380
don't think system D Network D is where

00:32:19,290 --> 00:32:25,290
it should be for example for a server

00:32:22,380 --> 00:32:27,230
infrastructure does this answer your

00:32:25,290 --> 00:32:30,660
question

00:32:27,230 --> 00:32:32,280
and yes it's a pain that we have so many

00:32:30,660 --> 00:32:33,740
things that's why we want to integrate

00:32:32,280 --> 00:32:38,780
it

00:32:33,740 --> 00:32:42,290
more questions if not then I'm one

00:32:38,780 --> 00:32:44,930
minute late but my architect is used to

00:32:42,290 --> 00:32:49,769
that thank you very much

00:32:44,930 --> 00:32:49,769

YouTube URL: https://www.youtube.com/watch?v=2twvU9g2t8w


