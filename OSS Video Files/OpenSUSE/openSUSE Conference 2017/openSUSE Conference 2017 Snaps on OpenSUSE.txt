Title: openSUSE Conference 2017 Snaps on OpenSUSE
Publication date: 2017-05-28
Playlist: openSUSE Conference 2017
Description: 
	https://media.ccc.de/v/1302-snaps-on-opensuse



Snaps are a new packaging format that allows unmodified binaries to run across a wide variety of distributions. Snapd is the software that manages snaps on a running system. Learn about the basics of snaps, snapd and what is needed to port snapd to OpenSUSE.




zyga
Captions: 
	00:00:07,639 --> 00:00:12,780
welcome thanks for coming

00:00:09,420 --> 00:00:15,630
so snaps on Souza just before we start

00:00:12,780 --> 00:00:17,490
raise your hands if you know I should be

00:00:15,630 --> 00:00:19,020
here right okay raise your hand if you

00:00:17,490 --> 00:00:21,930
know what snaps are you've heard those

00:00:19,020 --> 00:00:26,400
snaps thank you and keep your hand up if

00:00:21,930 --> 00:00:29,189
you know if you used them okay great so

00:00:26,400 --> 00:00:31,529
hi I'm segment I'm working for

00:00:29,189 --> 00:00:34,500
economical not for Sousa working with

00:00:31,529 --> 00:00:36,110
them since like 2010 and I've been

00:00:34,500 --> 00:00:39,480
working on snappy like for a year about

00:00:36,110 --> 00:00:40,860
regular take and specifically on the

00:00:39,480 --> 00:00:44,040
interface system which we're going to

00:00:40,860 --> 00:00:45,840
get into it's really interesting but for

00:00:44,040 --> 00:00:48,270
me we may know me more is the cross

00:00:45,840 --> 00:00:51,270
distribution and advocacy toward snaps

00:00:48,270 --> 00:00:54,629
just everywhere snaps as a universal way

00:00:51,270 --> 00:00:57,059
to run and host applications so just

00:00:54,629 --> 00:00:58,770
briefly I'm just gonna go into snaps not

00:00:57,059 --> 00:01:01,379
that many people hand hold her hand up

00:00:58,770 --> 00:01:03,390
just and describe snaps how they

00:01:01,379 --> 00:01:06,390
function what they look like

00:01:03,390 --> 00:01:08,280
and specifically snaps and Sousa um

00:01:06,390 --> 00:01:09,930
where are we what kind of things we did

00:01:08,280 --> 00:01:11,010
and some plans for the future and

00:01:09,930 --> 00:01:13,070
hopefully we don't have some time for

00:01:11,010 --> 00:01:15,750
questions but we'll see

00:01:13,070 --> 00:01:18,439
so snaps our packages I keep hearing

00:01:15,750 --> 00:01:20,909
containers containers docker

00:01:18,439 --> 00:01:22,110
sensor packages or just like a package

00:01:20,909 --> 00:01:23,549
system they're slightly different

00:01:22,110 --> 00:01:26,369
they're not like a classic package

00:01:23,549 --> 00:01:30,150
system but there really are packages and

00:01:26,369 --> 00:01:33,150
you'll see quickly why we canonical has

00:01:30,150 --> 00:01:34,799
had many interesting you know evolutions

00:01:33,150 --> 00:01:37,530
of the packaging system what we need the

00:01:34,799 --> 00:01:40,560
phone products you know the traditional

00:01:37,530 --> 00:01:42,180
packages this didn't work very well on

00:01:40,560 --> 00:01:44,579
that setting like there's no depth

00:01:42,180 --> 00:01:46,200
coffee can you know a dancer a prompt

00:01:44,579 --> 00:01:48,180
look at the diff on your phone that's

00:01:46,200 --> 00:01:52,049
like many things just didn't work and

00:01:48,180 --> 00:01:53,939
you also had to look at how the modern

00:01:52,049 --> 00:01:56,340
app stores work just everything is

00:01:53,939 --> 00:01:58,229
confined known reviews applications you

00:01:56,340 --> 00:02:00,360
know line by line there's methods are

00:01:58,229 --> 00:02:02,490
proprietary you can't do that so we had

00:02:00,360 --> 00:02:04,860
to come up with something new so we went

00:02:02,490 --> 00:02:06,750
through that click with a see packages

00:02:04,860 --> 00:02:07,950
for the phone and when the snaps from

00:02:06,750 --> 00:02:10,140
the previous generation should look

00:02:07,950 --> 00:02:12,569
slightly different and then we come to

00:02:10,140 --> 00:02:14,640
snaps with snap D 2.0

00:02:12,569 --> 00:02:16,469
so they're not like classic packages

00:02:14,640 --> 00:02:18,540
first of all the read only sound like

00:02:16,469 --> 00:02:20,280
you know you unpacked your software

00:02:18,540 --> 00:02:22,469
hence you know something is in vari you

00:02:20,280 --> 00:02:24,450
can change it now they're just read-only

00:02:22,469 --> 00:02:26,219
images and since the reading on the

00:02:24,450 --> 00:02:27,480
images we don't have to unpack them you

00:02:26,219 --> 00:02:29,450
have them to read this you can just

00:02:27,480 --> 00:02:33,810
mount them and start working with them

00:02:29,450 --> 00:02:37,470
um we also don't have a single version

00:02:33,810 --> 00:02:39,659
of a snap so maybe I have I'm updating

00:02:37,470 --> 00:02:41,700
from one to another there's a new

00:02:39,659 --> 00:02:43,650
version coming out my system will update

00:02:41,700 --> 00:02:45,689
this application for me automatically I

00:02:43,650 --> 00:02:47,040
will keep multiple versions around the

00:02:45,689 --> 00:02:49,590
goldens revisions they're not quite

00:02:47,040 --> 00:02:51,450
versions you'll see how soon and we can

00:02:49,590 --> 00:02:54,569
use it using because we have them around

00:02:51,450 --> 00:02:56,400
on the disk we can do Delta uploads so

00:02:54,569 --> 00:02:58,349
you just download the little changes

00:02:56,400 --> 00:02:59,819
that happen between one and the other we

00:02:58,349 --> 00:03:01,439
apply the Delta and we mount the new

00:02:59,819 --> 00:03:04,859
thing and that's it that's the update

00:03:01,439 --> 00:03:07,349
and you can also go back and because

00:03:04,859 --> 00:03:09,810
snaps know exactly how to model data

00:03:07,349 --> 00:03:11,970
where the application data is kept where

00:03:09,810 --> 00:03:13,889
the user data is kept when we do these

00:03:11,970 --> 00:03:17,280
operations we can keep the data around

00:03:13,889 --> 00:03:19,290
we can copy copied somewhere safe so you

00:03:17,280 --> 00:03:21,780
can get the update and when something

00:03:19,290 --> 00:03:24,599
breaks I don't know for whatever reason

00:03:21,780 --> 00:03:26,729
you had like an image collection

00:03:24,599 --> 00:03:28,650
application and the schema has been

00:03:26,729 --> 00:03:30,510
updated but Emily application doesn't

00:03:28,650 --> 00:03:32,639
work you can you can say you know this

00:03:30,510 --> 00:03:34,500
doesn't work for me give me the stuff I

00:03:32,639 --> 00:03:36,690
had just a second ago and we'll give you

00:03:34,500 --> 00:03:38,310
back not just the code but the actual

00:03:36,690 --> 00:03:42,479
day that you had in your system it was

00:03:38,310 --> 00:03:44,729
this is also managed by snaps and I

00:03:42,479 --> 00:03:46,859
think this is really the key thing in

00:03:44,729 --> 00:03:49,370
today's world with security like we've

00:03:46,859 --> 00:03:52,169
been discussing security this week and

00:03:49,370 --> 00:03:56,099
everyone seems to figure out it's

00:03:52,169 --> 00:03:57,299
important but it's hard it's complex we

00:03:56,099 --> 00:04:00,449
don't really know how to do it

00:03:57,299 --> 00:04:02,519
snaps have been trying to solve that

00:04:00,449 --> 00:04:04,150
since like version 1 and now with

00:04:02,519 --> 00:04:06,280
version 2 it's

00:04:04,150 --> 00:04:08,080
infinitely easier to get security right

00:04:06,280 --> 00:04:10,690
because everything is confined by

00:04:08,080 --> 00:04:12,819
default not only just like you just get

00:04:10,690 --> 00:04:14,140
confined you can't do something everyone

00:04:12,819 --> 00:04:16,419
has the same confinement it's

00:04:14,140 --> 00:04:19,810
predictable it's understandable both for

00:04:16,419 --> 00:04:21,220
developers how to do stop with snaps and

00:04:19,810 --> 00:04:23,050
the users you know what kind of stuff

00:04:21,220 --> 00:04:25,389
you can expect if you get a snap from

00:04:23,050 --> 00:04:27,090
somewhere and run it it's you know we

00:04:25,389 --> 00:04:31,090
just I just was in a really interesting

00:04:27,090 --> 00:04:32,919
app image discussion and I think I meant

00:04:31,090 --> 00:04:35,350
race is great but in today's world you

00:04:32,919 --> 00:04:37,270
can't afford to just get something from

00:04:35,350 --> 00:04:39,790
somewhere and run it and not confine it

00:04:37,270 --> 00:04:42,639
it just it's just 90s we just can't

00:04:39,790 --> 00:04:44,229
repeat that and also snaps are not

00:04:42,639 --> 00:04:45,790
containers they're not like you know you

00:04:44,229 --> 00:04:47,080
get this darker image it's full of

00:04:45,790 --> 00:04:49,240
ancient Ubuntu Deb's

00:04:47,080 --> 00:04:51,490
and run it and hope for the best it's

00:04:49,240 --> 00:04:54,340
not we don't have the whole system and a

00:04:51,490 --> 00:04:56,320
snack it's not like you have to put you

00:04:54,340 --> 00:04:57,910
know gobs of gobs of bytes in it to

00:04:56,320 --> 00:05:00,850
actually get started you'll see how a

00:04:57,910 --> 00:05:02,229
snap looks like in a second but this

00:05:00,850 --> 00:05:04,270
also means that because we don't like

00:05:02,229 --> 00:05:06,639
you know bundle our operating system

00:05:04,270 --> 00:05:08,889
with a snap a snap actually integrates

00:05:06,639 --> 00:05:11,139
in an operating system so a snap can

00:05:08,889 --> 00:05:13,750
provide a deeper service it can provide

00:05:11,139 --> 00:05:15,190
a service on a socket it can just

00:05:13,750 --> 00:05:18,700
integrate with the service just as you

00:05:15,190 --> 00:05:20,800
would expect with the classic package so

00:05:18,700 --> 00:05:23,110
stems are different because they can

00:05:20,800 --> 00:05:25,599
work alongside the existing packages you

00:05:23,110 --> 00:05:26,979
can work with snaps on essentially all

00:05:25,599 --> 00:05:28,539
the major distributions now whatever

00:05:26,979 --> 00:05:30,550
they are using it is completely

00:05:28,539 --> 00:05:31,870
different right but the same binary snap

00:05:30,550 --> 00:05:33,849
works and integrates with that

00:05:31,870 --> 00:05:36,610
distribution doesn't replace it just

00:05:33,849 --> 00:05:37,830
integrates with it and really I am I

00:05:36,610 --> 00:05:40,630
can't stress this enough

00:05:37,830 --> 00:05:43,030
I've been packaging snap D for many

00:05:40,630 --> 00:05:44,590
distributions and it's not easy it's

00:05:43,030 --> 00:05:46,660
just a lot of complexity for good

00:05:44,590 --> 00:05:49,240
reasons exist in traditional classic

00:05:46,660 --> 00:05:51,520
packaging and that's hard to get you

00:05:49,240 --> 00:05:53,050
know we're going to keep doing this for

00:05:51,520 --> 00:05:55,599
some more time until we're absolutely

00:05:53,050 --> 00:05:57,880
everywhere where this any relevant user

00:05:55,599 --> 00:05:59,770
base but it's not easy and you think I'm

00:05:57,880 --> 00:06:01,270
a patient you know being packaged by a

00:05:59,770 --> 00:06:04,270
small company they want to do something

00:06:01,270 --> 00:06:06,820
nice something innovative I want I don't

00:06:04,270 --> 00:06:09,690
want to waste our creativity on the Dane

00:06:06,820 --> 00:06:13,390
Debian packaging policy it's just crazy

00:06:09,690 --> 00:06:15,370
so but also has ppas that many people

00:06:13,390 --> 00:06:17,560
used not only distribute software but

00:06:15,370 --> 00:06:19,300
also distribute new software like

00:06:17,560 --> 00:06:21,669
new version of I don't know the

00:06:19,300 --> 00:06:24,400
bleeding-edge photo application like I

00:06:21,669 --> 00:06:26,050
use dark table so the new dark table so

00:06:24,400 --> 00:06:27,760
PPS are fantastic but they also share

00:06:26,050 --> 00:06:29,980
all the drawbacks of classic packages

00:06:27,760 --> 00:06:33,130
you know I can add a PPA to dark table

00:06:29,980 --> 00:06:36,490
and someone can steal the developers

00:06:33,130 --> 00:06:37,930
laptop and in that PPA suddenly a kernel

00:06:36,490 --> 00:06:40,210
can show up and you know it could be

00:06:37,930 --> 00:06:42,130
like nine nine nine nine nine help bar

00:06:40,210 --> 00:06:45,550
I'm gonna update and I don't have to do

00:06:42,130 --> 00:06:48,010
that I just don't want to give all the

00:06:45,550 --> 00:06:50,440
confidence and trust to every PPA

00:06:48,010 --> 00:06:53,200
because every PPA every extra archive I

00:06:50,440 --> 00:06:55,240
label just multiplies the attack surface

00:06:53,200 --> 00:06:57,490
all of them can be owned and all of them

00:06:55,240 --> 00:06:59,470
can ship Colonel ellipse II the best

00:06:57,490 --> 00:07:00,940
sell and you know could be covert maybe

00:06:59,470 --> 00:07:03,430
no one will notice for a while that's

00:07:00,940 --> 00:07:05,169
terrible we don't want to repeat that so

00:07:03,430 --> 00:07:07,270
it snaps we've invented something way

00:07:05,169 --> 00:07:09,910
better it's like a mini PP a mini

00:07:07,270 --> 00:07:13,180
archive just for this snap and you'll

00:07:09,910 --> 00:07:14,410
see how this works soon and this is

00:07:13,180 --> 00:07:17,740
close to my heart because this is what I

00:07:14,410 --> 00:07:19,960
do essentially all day snaps are heavily

00:07:17,740 --> 00:07:21,580
focused on security there are many

00:07:19,960 --> 00:07:24,580
interesting security mechanisms or

00:07:21,580 --> 00:07:26,500
easing and this is like goes all the way

00:07:24,580 --> 00:07:28,180
through the system we are paranoid about

00:07:26,500 --> 00:07:34,450
security and in today's world that's

00:07:28,180 --> 00:07:37,419
really relevant so why that's why not

00:07:34,450 --> 00:07:42,310
only everywhere but everywhere in way

00:07:37,419 --> 00:07:44,320
way way more refined and a predictable

00:07:42,310 --> 00:07:46,750
in a secure way then all the other

00:07:44,320 --> 00:07:49,120
systems can do today and you know we

00:07:46,750 --> 00:07:50,650
have things to do but there's nothing

00:07:49,120 --> 00:07:53,500
missing in division there's nothing

00:07:50,650 --> 00:07:57,610
visit missing in the technology it's

00:07:53,500 --> 00:07:58,990
just more busy work to get turn so we're

00:07:57,610 --> 00:08:02,169
going to quickly look at a simple snack

00:07:58,990 --> 00:08:04,510
package and so that is a really really

00:08:02,169 --> 00:08:06,400
simple both in the way you built them we

00:08:04,510 --> 00:08:07,690
don't like have complex policies you can

00:08:06,400 --> 00:08:09,160
just build them any way you like we have

00:08:07,690 --> 00:08:11,050
some nice tools if you want to use them

00:08:09,160 --> 00:08:12,850
entirely optional you can just hand

00:08:11,050 --> 00:08:14,350
crafted but we're going to look at that

00:08:12,850 --> 00:08:15,550
package from you know from snappies

00:08:14,350 --> 00:08:18,760
point of view like an uninstall this

00:08:15,550 --> 00:08:20,370
thing how does it look like so it's

00:08:18,760 --> 00:08:23,070
going to be really small

00:08:20,370 --> 00:08:24,390
it's just the application now s if you

00:08:23,070 --> 00:08:26,760
need something that the OS doesn't

00:08:24,390 --> 00:08:28,500
provide well you need to bundle it but

00:08:26,760 --> 00:08:30,630
you don't have to bundle Nino Lipsey's

00:08:28,500 --> 00:08:34,170
and live as the cells and things like

00:08:30,630 --> 00:08:36,750
that we provide that as as a base you

00:08:34,170 --> 00:08:39,030
can work on right now that base is just

00:08:36,750 --> 00:08:40,950
a bun too but we're working heavily to

00:08:39,030 --> 00:08:43,110
not only give you one bun too but the

00:08:40,950 --> 00:08:45,060
next LTS Ubuntu and also any other

00:08:43,110 --> 00:08:47,100
distributions LT has versions so you can

00:08:45,060 --> 00:08:50,790
start you know an application that works

00:08:47,100 --> 00:08:52,560
entirely on top of Slee using Slee Lipsy

00:08:50,790 --> 00:08:56,640
sleep built with Slee to join all of

00:08:52,560 --> 00:08:58,650
that you know in a snap so how does it

00:08:56,640 --> 00:09:00,480
look like it's really actually I mean

00:08:58,650 --> 00:09:02,370
that you don't have to read this that's

00:09:00,480 --> 00:09:04,340
that's the whole thing so the only

00:09:02,370 --> 00:09:06,840
important part I would say is the name

00:09:04,340 --> 00:09:08,870
name is something you hold dear it's

00:09:06,840 --> 00:09:11,460
like this is how you identify yourself

00:09:08,870 --> 00:09:13,260
this is you see how the world but some

00:09:11,460 --> 00:09:14,970
could be something you know that's your

00:09:13,260 --> 00:09:17,790
copyright you trademarked something you

00:09:14,970 --> 00:09:20,820
clone you want to hold so even you know

00:09:17,790 --> 00:09:23,100
I can go and try to claim the name Skype

00:09:20,820 --> 00:09:25,410
and maybe I'll be lucky and get it and

00:09:23,100 --> 00:09:26,460
you know maybe Skype and microcircuits

00:09:25,410 --> 00:09:28,800
are going to call us and say you know

00:09:26,460 --> 00:09:30,450
we're not making Skype as a snap yet so

00:09:28,800 --> 00:09:31,890
maybe you want to pull it out what we

00:09:30,450 --> 00:09:34,680
can do is without changing the existing

00:09:31,890 --> 00:09:38,130
snaps we can rename them so names are

00:09:34,680 --> 00:09:39,780
yours if you can claim that name but

00:09:38,130 --> 00:09:41,280
they're also not a firmly attached

00:09:39,780 --> 00:09:43,680
property that snap snaps don't have

00:09:41,280 --> 00:09:45,960
names they have IDs and interestingly

00:09:43,680 --> 00:09:47,760
they don't have a version or like oh my

00:09:45,960 --> 00:09:49,710
god how many times they have to look at

00:09:47,760 --> 00:09:52,290
how the Debian version thing works

00:09:49,710 --> 00:09:54,660
oh man I hate that it's just for this

00:09:52,290 --> 00:09:57,650
versions are nice for people it don't

00:09:54,660 --> 00:10:01,170
mean anything at all no we're in slaps

00:09:57,650 --> 00:10:03,540
they're just a label so it's some silly

00:10:01,170 --> 00:10:05,850
metadata really simple we can use

00:10:03,540 --> 00:10:08,880
upstream so like a storefront can give

00:10:05,850 --> 00:10:10,980
you a richer experience in a standard

00:10:08,880 --> 00:10:12,450
way that people have read up on but just

00:10:10,980 --> 00:10:14,280
like a very simple approach you can just

00:10:12,450 --> 00:10:16,110
stick something here and you can see

00:10:14,280 --> 00:10:19,320
this in listings and and searches and so

00:10:16,110 --> 00:10:21,570
and so forth and this is interesting so

00:10:19,320 --> 00:10:24,510
you can have multiple things in a single

00:10:21,570 --> 00:10:26,700
snap you can have my CQ that has a demon

00:10:24,510 --> 00:10:28,890
and also some tools like the dumps to

00:10:26,700 --> 00:10:31,470
like CLI and whatnot it could be a

00:10:28,890 --> 00:10:34,200
single one it could be many you can have

00:10:31,470 --> 00:10:35,940
services you can have desktop apps

00:10:34,200 --> 00:10:37,680
you have CLI tools you can have hooks

00:10:35,940 --> 00:10:39,960
which are kind of special but you can

00:10:37,680 --> 00:10:41,790
think of them like onon like package

00:10:39,960 --> 00:10:44,160
installation Oaks like all the

00:10:41,790 --> 00:10:46,710
traditional packages have and so you

00:10:44,160 --> 00:10:48,210
have to list all of them here is what's

00:10:46,710 --> 00:10:50,010
interesting what we're coming onto is

00:10:48,210 --> 00:10:52,950
that all of them are confined there's no

00:10:50,010 --> 00:10:54,300
way to break up the sandbox it's not you

00:10:52,950 --> 00:10:55,920
know you can install like a benign

00:10:54,300 --> 00:10:57,480
package but the configure script is just

00:10:55,920 --> 00:11:01,320
going to add an extra positive your

00:10:57,480 --> 00:11:03,150
system no not doable so that's how

00:11:01,320 --> 00:11:05,250
simple snap looks like it's just like no

00:11:03,150 --> 00:11:06,840
fits on the screen the really big counts

00:11:05,250 --> 00:11:08,760
there's nothing there there's no s just

00:11:06,840 --> 00:11:11,040
what you care about and the layout

00:11:08,760 --> 00:11:12,780
really is arbitrary could be you know

00:11:11,040 --> 00:11:13,980
whatever you you could be like a

00:11:12,780 --> 00:11:17,520
miniature route it could be whatever you

00:11:13,980 --> 00:11:19,680
want we don't care we only get about a

00:11:17,520 --> 00:11:21,600
meta directory and inside that we have

00:11:19,680 --> 00:11:23,970
the precious snap Yambol pile tells you

00:11:21,600 --> 00:11:25,530
lots of information about your snap as

00:11:23,970 --> 00:11:27,570
well as some support files like you can

00:11:25,530 --> 00:11:29,090
have like icons and a couple of other

00:11:27,570 --> 00:11:31,230
things they're not worth mentioning now

00:11:29,090 --> 00:11:32,940
so you installed it but how do you run

00:11:31,230 --> 00:11:34,440
it you don't want to go back and like

00:11:32,940 --> 00:11:36,540
figure out where it's going to be and

00:11:34,440 --> 00:11:39,240
run slumped in and then and echo and no

00:11:36,540 --> 00:11:40,650
no that's not what you want to do snap

00:11:39,240 --> 00:11:42,510
when you install it snap D when you

00:11:40,650 --> 00:11:44,340
install a snap gives you those launchers

00:11:42,510 --> 00:11:46,140
put them on your path and you look up

00:11:44,340 --> 00:11:48,330
how they look like they're just some

00:11:46,140 --> 00:11:49,620
links so you know we do the magic we

00:11:48,330 --> 00:11:52,440
follow something to figure out what you

00:11:49,620 --> 00:11:55,040
want to do and you run them and actually

00:11:52,440 --> 00:11:57,780
it's not just going to run you know this

00:11:55,040 --> 00:11:59,070
echo command here it's actually going to

00:11:57,780 --> 00:12:00,930
look at your snap Yambol and figure out

00:11:59,070 --> 00:12:02,430
the command you had there and these

00:12:00,930 --> 00:12:04,640
files are just available you can you

00:12:02,430 --> 00:12:09,330
know you can have one binary and

00:12:04,640 --> 00:12:11,520
multiple ways to run it so it's really

00:12:09,330 --> 00:12:15,540
briefly a building we I saw fantastic

00:12:11,520 --> 00:12:17,100
things about OBS this week so we made

00:12:15,540 --> 00:12:19,260
our own sorry

00:12:17,100 --> 00:12:21,660
we have something called built snap

00:12:19,260 --> 00:12:22,980
graphed IO and snap graphed so snap

00:12:21,660 --> 00:12:24,900
graph is just an opinionated way to

00:12:22,980 --> 00:12:26,250
build snaps but not the only one you can

00:12:24,900 --> 00:12:28,260
really handcraft them any way you like

00:12:26,250 --> 00:12:31,560
but this is a nice service we provide

00:12:28,260 --> 00:12:34,050
and snapping up also is a nice twist in

00:12:31,560 --> 00:12:35,640
packaging like if you look at

00:12:34,050 --> 00:12:37,230
traditional packages you also see that

00:12:35,640 --> 00:12:39,690
you know they're nice you've like if you

00:12:37,230 --> 00:12:41,610
have an auto tools based system it's

00:12:39,690 --> 00:12:43,980
super nice like almost empty the

00:12:41,610 --> 00:12:46,230
packaging is automatic if you use I

00:12:43,980 --> 00:12:49,170
don't know Python that's also automatic

00:12:46,230 --> 00:12:51,060
if you use Ruby it's also mathematic but

00:12:49,170 --> 00:12:52,740
boy try to combine them together and now

00:12:51,060 --> 00:12:55,200
you have to unwind all the stack and

00:12:52,740 --> 00:12:57,480
figure out how to glue this together so

00:12:55,200 --> 00:13:00,480
we wanted to fix that snap craft divides

00:12:57,480 --> 00:13:01,890
a package into parts so I can say know I

00:13:00,480 --> 00:13:05,400
want to take this git repository and

00:13:01,890 --> 00:13:07,500
build it and you know it's some Java

00:13:05,400 --> 00:13:08,910
code so let's use ant I know nothing

00:13:07,500 --> 00:13:10,590
about jealous so maybe I'm going to talk

00:13:08,910 --> 00:13:12,000
rubbish but all of these things

00:13:10,590 --> 00:13:15,930
integrate well with what they're made

00:13:12,000 --> 00:13:17,520
for everything that is popular idea has

00:13:15,930 --> 00:13:19,710
a plug in snap graph this it's easy to

00:13:17,520 --> 00:13:21,540
build or you know it's really easy to

00:13:19,710 --> 00:13:24,870
build such a plugin and contribute many

00:13:21,540 --> 00:13:26,490
of these are community made and the

00:13:24,870 --> 00:13:29,730
building part is super easy it's just

00:13:26,490 --> 00:13:33,120
you know you memorize the recall the

00:13:29,730 --> 00:13:35,430
snap yamo file and just this add this to

00:13:33,120 --> 00:13:37,530
the bottom there's going to be a part

00:13:35,430 --> 00:13:39,840
and you can have as many as you like

00:13:37,530 --> 00:13:42,150
and the inch bar just has no I must see

00:13:39,840 --> 00:13:44,640
make like parts so let me see make ways

00:13:42,150 --> 00:13:46,860
and the code can mean many places can

00:13:44,640 --> 00:13:48,990
have like a get tree somewhere are a

00:13:46,860 --> 00:13:51,030
terrible in your disk or a tag or nets

00:13:48,990 --> 00:13:53,970
are below all the complexity is possible

00:13:51,030 --> 00:13:57,930
but it's simple if you just take the

00:13:53,970 --> 00:13:59,850
defaults so you have this nice snap

00:13:57,930 --> 00:14:01,290
graph the ammo you can build it locally

00:13:59,850 --> 00:14:03,630
with snap wrap just snap craft you get a

00:14:01,290 --> 00:14:06,090
package out now I want to think about

00:14:03,630 --> 00:14:08,070
just building it automatically when

00:14:06,090 --> 00:14:09,870
something interesting happens so

00:14:08,070 --> 00:14:12,450
obviously we did that so we have snap

00:14:09,870 --> 00:14:14,250
grab that IO has that build that snap

00:14:12,450 --> 00:14:15,930
gotta your website and this is easy it

00:14:14,250 --> 00:14:18,360
gets you know you couldn't get half as

00:14:15,930 --> 00:14:20,760
many people do you click the log in with

00:14:18,360 --> 00:14:22,620
github it shows you the repositories you

00:14:20,760 --> 00:14:25,020
have the ones that have snap at the ammo

00:14:22,620 --> 00:14:27,570
are easy to pick and that's it

00:14:25,020 --> 00:14:29,070
there's no step see so there's a

00:14:27,570 --> 00:14:31,240
workflow you can integrate this through

00:14:29,070 --> 00:14:33,860
I'm going to talk about the last part

00:14:31,240 --> 00:14:37,130
you can see like how to publish to store

00:14:33,860 --> 00:14:38,120
the story is not just a repository we're

00:14:37,130 --> 00:14:39,680
going to get ended up it's really

00:14:38,120 --> 00:14:45,380
interesting mechanisms are possible in

00:14:39,680 --> 00:14:47,029
this way and people like snaps I mean

00:14:45,380 --> 00:14:49,100
we've been talking to many people making

00:14:47,029 --> 00:14:52,190
applications unless they've been like

00:14:49,100 --> 00:14:53,959
hard-code Linux users for ages packaging

00:14:52,190 --> 00:14:55,970
is a real problem for them they really

00:14:53,959 --> 00:14:58,069
want to deliver up desktop applications

00:14:55,970 --> 00:15:00,620
and server applications and it's just

00:14:58,069 --> 00:15:02,839
hard this is why docker such a nice ride

00:15:00,620 --> 00:15:05,389
because they take that out but you get

00:15:02,839 --> 00:15:09,050
this huge blob that's kind of impossible

00:15:05,389 --> 00:15:11,300
to audit and hard to operate and I think

00:15:09,050 --> 00:15:15,380
this is a nice middle ground and people

00:15:11,300 --> 00:15:17,120
really like that and now I'm going to

00:15:15,380 --> 00:15:19,160
jump to something that's super close to

00:15:17,120 --> 00:15:21,139
my heart's confinements but sort of

00:15:19,160 --> 00:15:23,810
fantastic property of snaps that nothing

00:15:21,139 --> 00:15:26,329
else has so the confinement is not just

00:15:23,810 --> 00:15:29,029
the sandbox it's just just one sandbox

00:15:26,329 --> 00:15:31,430
but many sand boxes and everything gets

00:15:29,029 --> 00:15:33,529
a sandbox so everything that's round

00:15:31,430 --> 00:15:36,019
about a application daemon servers hook

00:15:33,529 --> 00:15:38,720
whatever it's all confined and as I said

00:15:36,019 --> 00:15:40,790
earlier it's the same confinement you do

00:15:38,720 --> 00:15:42,350
one snap you learn how it looks like you

00:15:40,790 --> 00:15:44,839
can now that make in the next snap it's

00:15:42,350 --> 00:15:47,690
all the same well obviously we'll you

00:15:44,839 --> 00:15:49,670
know if this was equally simple as

00:15:47,690 --> 00:15:52,730
classic application trap no confinement

00:15:49,670 --> 00:15:54,170
well we wouldn't be any secure so I

00:15:52,730 --> 00:15:56,120
actually sandbox prevents you from doing

00:15:54,170 --> 00:15:58,459
many things but for that we have

00:15:56,120 --> 00:16:01,279
something we called interfaces which

00:15:58,459 --> 00:16:04,579
feels like a permission system but it's

00:16:01,279 --> 00:16:06,699
more than that traditional permission

00:16:04,579 --> 00:16:10,310
slides you know you can do this period

00:16:06,699 --> 00:16:13,310
we thought this is nice what we can do

00:16:10,310 --> 00:16:14,990
better so we have two parts of it every

00:16:13,310 --> 00:16:16,819
interface there's a plug part and

00:16:14,990 --> 00:16:19,130
there's a slot the slot provides

00:16:16,819 --> 00:16:21,319
something and the plug can consume it

00:16:19,130 --> 00:16:22,610
and can only consume it when you plug

00:16:21,319 --> 00:16:25,220
them together when you connect them and

00:16:22,610 --> 00:16:27,620
the connection establishes the actual

00:16:25,220 --> 00:16:30,829
permissions both for the consuming party

00:16:27,620 --> 00:16:33,980
and they're producing parties so maybe

00:16:30,829 --> 00:16:35,870
there's a snap that nano bluesy provides

00:16:33,980 --> 00:16:37,430
a Bluetooth services and the only when

00:16:35,870 --> 00:16:39,410
there's a connection between bluesy and

00:16:37,430 --> 00:16:40,910
some snap can bluesy actually talk to

00:16:39,410 --> 00:16:44,510
that's not bluesy is not a privilege

00:16:40,910 --> 00:16:48,260
snap no everything is confined equally

00:16:44,510 --> 00:16:50,750
so snaps can provide services to the

00:16:48,260 --> 00:16:53,089
system to other snaps you can create

00:16:50,750 --> 00:16:54,589
useful runtimes for other people you can

00:16:53,089 --> 00:16:56,810
create services for other people and

00:16:54,589 --> 00:17:03,260
it's all confined and managed by snap

00:16:56,810 --> 00:17:06,220
deep and I'm just look look like quickly

00:17:03,260 --> 00:17:08,360
as a simple comparison to Android style

00:17:06,220 --> 00:17:10,370
ACLs like you know can you do this can

00:17:08,360 --> 00:17:12,319
you do that that's terrible because

00:17:10,370 --> 00:17:13,910
every time you look at our like take

00:17:12,319 --> 00:17:16,250
your phone if it's Android install an

00:17:13,910 --> 00:17:18,290
application it asks of an endless list

00:17:16,250 --> 00:17:20,360
of things what it just told you is

00:17:18,290 --> 00:17:21,439
technobabble that you know you can be a

00:17:20,360 --> 00:17:22,730
technical user unless you're like a

00:17:21,439 --> 00:17:24,799
hardcore Android developer you don't

00:17:22,730 --> 00:17:26,600
know what that means really but you just

00:17:24,799 --> 00:17:29,090
have a yes or no question do you want it

00:17:26,600 --> 00:17:30,799
or not do you want it or not and that's

00:17:29,090 --> 00:17:32,330
a terrible question to ask people want

00:17:30,799 --> 00:17:34,490
it why do you ask you just ask to

00:17:32,330 --> 00:17:37,760
install it you always want want this but

00:17:34,490 --> 00:17:40,280
if you say yes you can get really nasty

00:17:37,760 --> 00:17:43,070
things can happen that's not possible in

00:17:40,280 --> 00:17:45,530
snaps so interfaces that are not

00:17:43,070 --> 00:17:47,120
privileged like hey it's a reasonable

00:17:45,530 --> 00:17:49,070
thing for an application want to talk to

00:17:47,120 --> 00:17:50,809
the network just like I want on you know

00:17:49,070 --> 00:17:51,380
I'm an RSS feed that want to download

00:17:50,809 --> 00:17:54,110
some feeds

00:17:51,380 --> 00:17:56,830
network is just a an interface that's

00:17:54,110 --> 00:17:59,299
not privileged everyone can get it

00:17:56,830 --> 00:18:00,830
maybe there's a super powerful interface

00:17:59,299 --> 00:18:03,230
lets you almost pick out the

00:18:00,830 --> 00:18:05,710
confinements to run like a docker is

00:18:03,230 --> 00:18:08,809
nice example runs all kinds of stuff

00:18:05,710 --> 00:18:11,360
doctor interface is only given to this

00:18:08,809 --> 00:18:14,150
snap that we allow to have this

00:18:11,360 --> 00:18:16,220
interface so docker guys make Dockers

00:18:14,150 --> 00:18:17,620
they get the interface but no one else

00:18:16,220 --> 00:18:20,809
can say I want to be docker

00:18:17,620 --> 00:18:22,820
unless we have a conversation with them

00:18:20,809 --> 00:18:25,340
unless they make a valid claim that they

00:18:22,820 --> 00:18:26,900
can be docker on a local system on a

00:18:25,340 --> 00:18:29,480
developer system they can still kind of

00:18:26,900 --> 00:18:31,700
shoehorn it in but they won't be able to

00:18:29,480 --> 00:18:33,710
socially engineer anyone into claiming

00:18:31,700 --> 00:18:36,320
they are docker or they are something

00:18:33,710 --> 00:18:37,549
else that has superpowers and break out

00:18:36,320 --> 00:18:39,440
of the sandbox this is a really

00:18:37,549 --> 00:18:41,480
important property because you know

00:18:39,440 --> 00:18:43,220
we're gonna live in the world where we

00:18:41,480 --> 00:18:44,720
make a barrier and nasty guys gonna

00:18:43,220 --> 00:18:47,210
figure out how to not break the barrier

00:18:44,720 --> 00:18:50,360
but like walk around it

00:18:47,210 --> 00:18:52,280
so one thing that really like is that

00:18:50,360 --> 00:18:53,960
snaps can offer service the system so

00:18:52,280 --> 00:18:55,970
it's not like you have the system which

00:18:53,960 --> 00:18:57,710
is special because it's something lines

00:18:55,970 --> 00:19:00,500
and there are the snaps which are like

00:18:57,710 --> 00:19:03,530
little things but they can't be super

00:19:00,500 --> 00:19:05,800
powerful we built a system entire

00:19:03,530 --> 00:19:07,720
distribution out of just snaps

00:19:05,800 --> 00:19:09,980
everything is a snap in that world

00:19:07,720 --> 00:19:11,690
including non regular system services

00:19:09,980 --> 00:19:14,180
and they're equally confined and they

00:19:11,690 --> 00:19:16,250
can have slots so you can have a snap

00:19:14,180 --> 00:19:18,110
that provides services like come up with

00:19:16,250 --> 00:19:19,760
a great idea and you can make a snap out

00:19:18,110 --> 00:19:21,650
of that and that snap can interact with

00:19:19,760 --> 00:19:24,860
the rest of the system it's just a graph

00:19:21,650 --> 00:19:26,950
of connections between snaps and we have

00:19:24,860 --> 00:19:29,420
part of you interfaces today we have 91

00:19:26,950 --> 00:19:31,790
that's a lot there's like lots of things

00:19:29,420 --> 00:19:32,930
there I can't even fit the whole I tried

00:19:31,790 --> 00:19:35,690
to fit the whole list here but it was

00:19:32,930 --> 00:19:38,030
just unreadable but you know we all

00:19:35,690 --> 00:19:41,030
kinds of applications from desktop

00:19:38,030 --> 00:19:43,220
applications to embedded to cloud it's

00:19:41,030 --> 00:19:45,200
already there and it's super trivial

00:19:43,220 --> 00:19:47,660
than a new interface and because of how

00:19:45,200 --> 00:19:51,050
we develop snap tee if you provide an

00:19:47,660 --> 00:19:54,680
interface we merge it it's available to

00:19:51,050 --> 00:19:56,630
you today today in the same day you can

00:19:54,680 --> 00:19:59,450
on your system say I want to track the

00:19:56,630 --> 00:20:00,770
course snap in which snap tee lives from

00:19:59,450 --> 00:20:01,940
the edge channel which I'm going to talk

00:20:00,770 --> 00:20:03,680
to in a second and you're just going to

00:20:01,940 --> 00:20:05,030
get the nightly build right now and you

00:20:03,680 --> 00:20:08,420
can you start using application with

00:20:05,030 --> 00:20:09,800
that new interface right now what before

00:20:08,420 --> 00:20:11,300
there's an interface available to you

00:20:09,800 --> 00:20:12,830
there's something we call the dev mode

00:20:11,300 --> 00:20:14,390
it's just for developers it's really

00:20:12,830 --> 00:20:16,850
really scary to install things in dev

00:20:14,390 --> 00:20:18,920
mode and it essentially switches the

00:20:16,850 --> 00:20:20,750
confinement into non enforcing mode so

00:20:18,920 --> 00:20:23,270
you're going to say no you can't do this

00:20:20,750 --> 00:20:24,800
but in dev my I'm allowing it we also

00:20:23,270 --> 00:20:26,390
build some tools that look at these logs

00:20:24,800 --> 00:20:27,980
and say you know you're doing these

00:20:26,390 --> 00:20:29,750
things it looks like you want this

00:20:27,980 --> 00:20:32,120
interface or that interface so these two

00:20:29,750 --> 00:20:34,280
and it really helps developers and also

00:20:32,120 --> 00:20:35,780
when it just says you know but I have no

00:20:34,280 --> 00:20:37,910
idea what this thing you're trying to do

00:20:35,780 --> 00:20:39,740
is let's just really figure out what you

00:20:37,910 --> 00:20:41,210
want to do quickly and craft an

00:20:39,740 --> 00:20:44,600
interface for you so you can just keep

00:20:41,210 --> 00:20:47,030
on going so let's talk about this store

00:20:44,600 --> 00:20:48,440
so stories special stuff sometimes

00:20:47,030 --> 00:20:50,270
service offering from canonical is not

00:20:48,440 --> 00:20:53,510
very soft ware but it's a hosted service

00:20:50,270 --> 00:20:55,160
that is free to is forever you can just

00:20:53,510 --> 00:20:56,380
puts Napster you can get started right

00:20:55,160 --> 00:20:58,090
now

00:20:56,380 --> 00:20:59,889
we can also give you a commercial store

00:20:58,090 --> 00:21:01,120
on the man if you like a device murkier

00:20:59,889 --> 00:21:03,549
you have a drone and you want to make

00:21:01,120 --> 00:21:04,779
some apps that run on the drone but you

00:21:03,549 --> 00:21:06,340
want to control who can actually put

00:21:04,779 --> 00:21:09,789
snaps in your store you can just have a

00:21:06,340 --> 00:21:10,419
special store from us and actually this

00:21:09,789 --> 00:21:12,340
store is

00:21:10,419 --> 00:21:14,259
apart from being complex and large to

00:21:12,340 --> 00:21:16,120
scale it's just a simple HTTP endpoint

00:21:14,259 --> 00:21:17,740
are a couple things like find the snap

00:21:16,120 --> 00:21:22,120
you don't get a snap there is no punch

00:21:17,740 --> 00:21:23,500
there and it's not a repository so many

00:21:22,120 --> 00:21:24,610
people think about you know I want to

00:21:23,500 --> 00:21:26,380
have a second store I don't mind you

00:21:24,610 --> 00:21:28,750
guys have your store ID like I have my

00:21:26,380 --> 00:21:30,850
store it's not a repository it's

00:21:28,750 --> 00:21:33,340
slightly different there are choices we

00:21:30,850 --> 00:21:34,840
did the choices we've made so that some

00:21:33,340 --> 00:21:37,389
of the complexity logic goes away from

00:21:34,840 --> 00:21:38,740
the client side and goes to the server

00:21:37,389 --> 00:21:40,960
side for instance let's say there are

00:21:38,740 --> 00:21:43,809
two stores and you know the same snap it

00:21:40,960 --> 00:21:45,220
has is in both stores what do you do we

00:21:43,809 --> 00:21:46,870
don't want to solve that problem the

00:21:45,220 --> 00:21:48,490
store can figure out what to do maybe

00:21:46,870 --> 00:21:50,710
it's going to mask one and show the

00:21:48,490 --> 00:21:52,330
other maybe something to show either but

00:21:50,710 --> 00:21:53,620
it's the store side decision and the

00:21:52,330 --> 00:21:55,330
client side doesn't have to care about

00:21:53,620 --> 00:21:56,860
this it's way easier to figure and

00:21:55,330 --> 00:22:00,460
reason about the correctness of the

00:21:56,860 --> 00:22:02,860
store and struggles a lot of things that

00:22:00,460 --> 00:22:05,320
typical repositories don't handle it

00:22:02,860 --> 00:22:06,700
handles like uploads Delta uploads so

00:22:05,320 --> 00:22:09,029
when you are developing a game there was

00:22:06,700 --> 00:22:12,580
nice example from the app image

00:22:09,029 --> 00:22:13,899
developer it's a big game and that it's

00:22:12,580 --> 00:22:15,940
great that it can have Delta downloads

00:22:13,899 --> 00:22:18,879
but G's uploading those gigs every

00:22:15,940 --> 00:22:20,559
moment you want to build that hurts so

00:22:18,879 --> 00:22:23,649
we have Delta's both ways that's really

00:22:20,559 --> 00:22:25,330
fantastic we have all the developer

00:22:23,649 --> 00:22:29,049
workflow like name registration payment

00:22:25,330 --> 00:22:30,610
and whatnot reviews everything also like

00:22:29,049 --> 00:22:32,379
if you have a snap that once you use a

00:22:30,610 --> 00:22:34,419
privilege interface you're going to be

00:22:32,379 --> 00:22:36,429
you know just there's a whole process

00:22:34,419 --> 00:22:38,049
that just lets you use it and lets your

00:22:36,429 --> 00:22:40,690
snap have that interface so it's not

00:22:38,049 --> 00:22:41,980
going to be blocked next time but one

00:22:40,690 --> 00:22:43,269
thing I really like about this story and

00:22:41,980 --> 00:22:44,409
I think this really changes how people

00:22:43,269 --> 00:22:47,379
are going to think about developing

00:22:44,409 --> 00:22:48,759
software is tracks and channels so it's

00:22:47,379 --> 00:22:51,700
a really simple concept I mean it's as

00:22:48,759 --> 00:22:54,580
basic as it gets if it isn't my sequel

00:22:51,700 --> 00:22:57,070
snap but is just one my sequel name

00:22:54,580 --> 00:22:59,529
there are many major versions of icicle

00:22:57,070 --> 00:23:02,289
people may want to use since of figuring

00:22:59,529 --> 00:23:03,730
out to encode the thing in the name so

00:23:02,289 --> 00:23:07,299
people can kind of guess what they want

00:23:03,730 --> 00:23:09,370
we just want to developers to choose so

00:23:07,299 --> 00:23:10,179
um maybe I can show you them ins later

00:23:09,370 --> 00:23:11,740
but

00:23:10,179 --> 00:23:13,149
there are many many versions of my

00:23:11,740 --> 00:23:15,519
sequel available and you can just choose

00:23:13,149 --> 00:23:17,799
the one you want and not only that for

00:23:15,519 --> 00:23:21,279
every one of these versions there are

00:23:17,799 --> 00:23:23,230
four channels and every one of these

00:23:21,279 --> 00:23:24,519
channels says like what kind of things

00:23:23,230 --> 00:23:26,619
you can expect and those are like

00:23:24,519 --> 00:23:28,360
hard-coded so it's across the whole snap

00:23:26,619 --> 00:23:30,490
ecosystems will look the same way this

00:23:28,360 --> 00:23:32,889
is stable it means the snap is confined

00:23:30,490 --> 00:23:35,710
and should expect stable performance and

00:23:32,889 --> 00:23:37,749
correctness and stability its candidate

00:23:35,710 --> 00:23:40,179
you know almost stable but not quite

00:23:37,749 --> 00:23:41,529
there's Vita which you know it speaks

00:23:40,179 --> 00:23:43,570
for itself and there's edge which is

00:23:41,529 --> 00:23:44,919
like something for you know CI CD

00:23:43,570 --> 00:23:47,139
solutions like just stick it from Mass

00:23:44,919 --> 00:23:49,090
this like straight from master and you

00:23:47,139 --> 00:23:51,220
can choose on a paired snap basis what

00:23:49,090 --> 00:23:53,499
do you want to do you don't have to be

00:23:51,220 --> 00:23:56,230
tumbleweed all the way you can be on a

00:23:53,499 --> 00:23:59,080
stable LCS version of of your enterprise

00:23:56,230 --> 00:24:02,980
distro and then pick the thing you care

00:23:59,080 --> 00:24:04,269
about to be more leading-edge or just

00:24:02,980 --> 00:24:06,309
more more recent as I have to be leaning

00:24:04,269 --> 00:24:09,100
edge good just more recent and this is a

00:24:06,309 --> 00:24:10,389
person up decision and also all the

00:24:09,100 --> 00:24:11,980
other things are purse snaps so like

00:24:10,389 --> 00:24:14,320
rolling back because updates failed

00:24:11,980 --> 00:24:19,029
purse snap you don't have to do it like

00:24:14,320 --> 00:24:20,980
it's all one big bag so I'm just like I

00:24:19,029 --> 00:24:22,480
think this is not that interesting

00:24:20,980 --> 00:24:24,820
actually should have got rid of slide

00:24:22,480 --> 00:24:26,139
but still store gives you revisions

00:24:24,820 --> 00:24:27,909
revisions are something we talked about

00:24:26,139 --> 00:24:29,529
a lot in this have these but it's not a

00:24:27,909 --> 00:24:31,240
number that is a version it's just an

00:24:29,529 --> 00:24:32,950
identifier of a given upload whenever

00:24:31,240 --> 00:24:35,110
you upload something to store maybe it's

00:24:32,950 --> 00:24:37,090
like github build or something you did

00:24:35,110 --> 00:24:39,759
locally just get a number but it's not a

00:24:37,090 --> 00:24:42,190
version that means something it's your

00:24:39,759 --> 00:24:44,169
task and responsibility to put that

00:24:42,190 --> 00:24:47,019
number in the channel say in a stable

00:24:44,169 --> 00:24:47,540
Channel I won number 9 and then DEET I

00:24:47,019 --> 00:24:50,170
won 10

00:24:47,540 --> 00:24:52,210
[Music]

00:24:50,170 --> 00:24:55,450
so you can get tracks whatever you like

00:24:52,210 --> 00:24:57,460
but there are predefined risk levels

00:24:55,450 --> 00:24:57,790
that people can understand what they

00:24:57,460 --> 00:24:59,500
mean

00:24:57,790 --> 00:25:03,460
especially the stable Channel which is

00:24:59,500 --> 00:25:07,870
confined so let's quickly talk about the

00:25:03,460 --> 00:25:10,120
snap D service snap D is quite large I

00:25:07,870 --> 00:25:14,470
think it's there are 83 contributors

00:25:10,120 --> 00:25:16,240
almost 20,000 commits it's quite a lot

00:25:14,470 --> 00:25:18,250
of history there so it's mostly we

00:25:16,240 --> 00:25:20,230
didn't go because goes a distribute

00:25:18,250 --> 00:25:22,660
language right this type of applications

00:25:20,230 --> 00:25:24,340
a complex user space application also

00:25:22,660 --> 00:25:26,830
has some C parts just to make the magic

00:25:24,340 --> 00:25:30,190
happen at the part that is closer to the

00:25:26,830 --> 00:25:31,660
OS and snap D I can't stress this enough

00:25:30,190 --> 00:25:33,100
there's no enough time to actually go

00:25:31,660 --> 00:25:34,750
into the explaining all of this I'm not

00:25:33,100 --> 00:25:37,300
even going to try but there's so much

00:25:34,750 --> 00:25:39,970
fantastic resilience to errors and so

00:25:37,300 --> 00:25:42,790
much smarts in snap D it's not like D

00:25:39,970 --> 00:25:45,100
package no it's so far far more advanced

00:25:42,790 --> 00:25:50,860
and what you can do to make your system

00:25:45,100 --> 00:25:52,150
stable operational and up to date so

00:25:50,860 --> 00:25:53,740
it's not B is a service but they're

00:25:52,150 --> 00:25:55,330
command-line tools and other clients

00:25:53,740 --> 00:25:57,220
that talk to it like the gnome software

00:25:55,330 --> 00:25:58,840
Center talks to snap D so and you can

00:25:57,220 --> 00:26:01,870
install a snap from the gloom software

00:25:58,840 --> 00:26:03,270
Center it goes goes this way and just

00:26:01,870 --> 00:26:05,530
essentially handles the installation

00:26:03,270 --> 00:26:07,480
removal and keeping things everything

00:26:05,530 --> 00:26:09,130
keeping up-to-date and also manages the

00:26:07,480 --> 00:26:10,810
security so all of the interfaces that

00:26:09,130 --> 00:26:12,280
I've mentioned it's not like someone can

00:26:10,810 --> 00:26:15,280
come up with a new security interface

00:26:12,280 --> 00:26:17,380
that you know says I can do anything

00:26:15,280 --> 00:26:19,300
because it's easy now interfaces are

00:26:17,380 --> 00:26:21,610
trusted so the part of snap D itself

00:26:19,300 --> 00:26:23,950
snap the handle security part and it's

00:26:21,610 --> 00:26:25,510
easily to audit easy to review what ever

00:26:23,950 --> 00:26:29,610
snap you can request from the system

00:26:25,510 --> 00:26:32,530
it's all the code it's all versions so

00:26:29,610 --> 00:26:36,310
openSUSE and snap D we had a long bumpy

00:26:32,530 --> 00:26:40,240
ride let me start this last year I can't

00:26:36,310 --> 00:26:42,880
remember exactly thing was May and hmm

00:26:40,240 --> 00:26:44,290
go ank packaging going is such a nice

00:26:42,880 --> 00:26:45,820
language of packaging going across

00:26:44,290 --> 00:26:47,560
distribution is completely different

00:26:45,820 --> 00:26:49,030
everywhere you look and very annoying to

00:26:47,560 --> 00:26:51,100
work with and at that time we just

00:26:49,030 --> 00:26:53,230
couldn't get it right so it laid dormant

00:26:51,100 --> 00:26:55,480
in a broken state for some time but we

00:26:53,230 --> 00:26:57,730
fixed that sense we're not all the way

00:26:55,480 --> 00:27:00,250
there yet but we we have a working

00:26:57,730 --> 00:27:01,950
package we just want to go all the way

00:27:00,250 --> 00:27:03,919
to get it into factory and beyond

00:27:01,950 --> 00:27:05,570
[Music]

00:27:03,919 --> 00:27:07,220
and this repository name I should have

00:27:05,570 --> 00:27:10,010
mentioned this is a system column snappy

00:27:07,220 --> 00:27:11,660
so you can get it there so we have a

00:27:10,010 --> 00:27:14,929
working Patrick package works for leap

00:27:11,660 --> 00:27:15,820
and for tumbleweed we updated every time

00:27:14,929 --> 00:27:18,260
there's a release

00:27:15,820 --> 00:27:19,780
we've end our going stack and this is

00:27:18,260 --> 00:27:22,520
like a cry for help

00:27:19,780 --> 00:27:25,100
can we vendor that we need to put every

00:27:22,520 --> 00:27:26,630
separate your line library into separate

00:27:25,100 --> 00:27:29,600
package and hope for the best in store

00:27:26,630 --> 00:27:31,010
works I know um I would love to talk to

00:27:29,600 --> 00:27:31,309
someone that is an expert in golang and

00:27:31,010 --> 00:27:33,530
Sousa

00:27:31,309 --> 00:27:35,419
one thing that we like about the vendor

00:27:33,530 --> 00:27:37,760
in forego lying itself because you know

00:27:35,419 --> 00:27:40,190
packages are just source packages even

00:27:37,760 --> 00:27:42,980
binary ones so it's kind of meaningless

00:27:40,190 --> 00:27:44,539
work but because exactly the same vendor

00:27:42,980 --> 00:27:46,429
eyes versions are use across all the

00:27:44,539 --> 00:27:48,500
distributions the QA effort multiplies

00:27:46,429 --> 00:27:50,659
you know we just get more confident than

00:27:48,500 --> 00:27:53,330
what we tested extensively actually

00:27:50,659 --> 00:27:55,220
works and it really does save us a lot

00:27:53,330 --> 00:27:58,460
of time but if we have to do it we'll do

00:27:55,220 --> 00:28:00,710
it and one thing we really do very well

00:27:58,460 --> 00:28:03,049
I think lately is we have a very heavy

00:28:00,710 --> 00:28:04,730
CI system that tests everything we do so

00:28:03,049 --> 00:28:06,770
daily development if I make a patch

00:28:04,730 --> 00:28:09,950
today I wanna wear it it's going to be

00:28:06,770 --> 00:28:12,260
tested on Sousa not only on Sousa but on

00:28:09,950 --> 00:28:13,730
everything almost it's like we test many

00:28:12,260 --> 00:28:15,230
different architectures and open

00:28:13,730 --> 00:28:17,030
distributions and releases of these

00:28:15,230 --> 00:28:19,010
distributions I think we have more than

00:28:17,030 --> 00:28:21,020
a hundred I think we have two hundred no

00:28:19,010 --> 00:28:23,480
I think that's slightly less than 200

00:28:21,020 --> 00:28:25,520
VMs 24/7 booting up in a different

00:28:23,480 --> 00:28:26,840
system just testing compiling running

00:28:25,520 --> 00:28:29,600
all the integration tests we have lots

00:28:26,840 --> 00:28:31,580
of integration lists and essentially if

00:28:29,600 --> 00:28:33,650
it passes it means works there's like

00:28:31,580 --> 00:28:34,940
very little gaps left over just every

00:28:33,650 --> 00:28:36,799
time you discover one we just like

00:28:34,940 --> 00:28:39,770
trying to understand why it happen and

00:28:36,799 --> 00:28:41,000
fix it we have very high confidence that

00:28:39,770 --> 00:28:43,039
means we can look at a very high speed

00:28:41,000 --> 00:28:45,679
that's why we really snap the almost

00:28:43,039 --> 00:28:47,240
every two weeks sometimes this more

00:28:45,679 --> 00:28:49,250
sometimes less depending on holidays and

00:28:47,240 --> 00:28:51,860
stuff but we're very aggressive snappy

00:28:49,250 --> 00:28:55,340
moves at a very fast pace while being

00:28:51,860 --> 00:28:58,370
stable so we also do interesting things

00:28:55,340 --> 00:29:01,100
with channels so I can't publish snap D

00:28:58,370 --> 00:29:03,559
to the stable channel I can only publish

00:29:01,100 --> 00:29:05,539
it to edge that that's actually done

00:29:03,559 --> 00:29:08,270
automatically our release manager can

00:29:05,539 --> 00:29:09,620
take snap being put it into Data and

00:29:08,270 --> 00:29:11,570
from there on the QA teams and the

00:29:09,620 --> 00:29:13,669
project manager can go all the way so

00:29:11,570 --> 00:29:15,320
there's some lag when something lands

00:29:13,669 --> 00:29:16,410
master today is going to release to the

00:29:15,320 --> 00:29:18,540
public maybe

00:29:16,410 --> 00:29:20,970
for months right two or four weeks but

00:29:18,540 --> 00:29:22,620
anyone can start consuming these things

00:29:20,970 --> 00:29:25,650
as soon as they want by tracking

00:29:22,620 --> 00:29:27,030
different channel so we have still a

00:29:25,650 --> 00:29:28,470
couple of things when I do we want at

00:29:27,030 --> 00:29:30,420
Istanbul weed we just test the leap now

00:29:28,470 --> 00:29:31,920
I think that's going to be very easy you

00:29:30,420 --> 00:29:33,540
want to get into factories so from there

00:29:31,920 --> 00:29:35,790
on we just want to be a proper Sousa

00:29:33,540 --> 00:29:38,790
package but there's one more thing I'm

00:29:35,790 --> 00:29:42,300
running out of time really would like to

00:29:38,790 --> 00:29:44,580
have a conversation about app armor you

00:29:42,300 --> 00:29:46,950
guys pioneer that Palmer we took a

00:29:44,580 --> 00:29:48,870
little bit the next step in some areas

00:29:46,950 --> 00:29:50,430
we've extended the kernel features so

00:29:48,870 --> 00:29:52,620
app armor can control and mediate more

00:29:50,430 --> 00:29:55,860
feet more things that user space does

00:29:52,620 --> 00:29:59,040
and this makes our security just tighter

00:29:55,860 --> 00:30:00,750
a partner today in Sousa does not have

00:29:59,040 --> 00:30:02,460
all the capabilities that we have a new

00:30:00,750 --> 00:30:04,950
built in there are a few more patches

00:30:02,460 --> 00:30:07,380
left we're up streaming in as we go but

00:30:04,950 --> 00:30:08,550
if you guys would consider staking some

00:30:07,380 --> 00:30:11,790
of those patches and some of them just

00:30:08,550 --> 00:30:14,760
bug fixes hello we would really love to

00:30:11,790 --> 00:30:16,380
have this conversation about and finally

00:30:14,760 --> 00:30:18,210
some help one of the simplest gets just

00:30:16,380 --> 00:30:20,010
try to use snap T on your system try to

00:30:18,210 --> 00:30:22,650
snap something you you make yourself

00:30:20,010 --> 00:30:25,860
like tiny packages it's a new thing give

00:30:22,650 --> 00:30:27,510
it a try you can snap something you love

00:30:25,860 --> 00:30:29,070
because you use it and maybe the

00:30:27,510 --> 00:30:31,410
upstream guys have already snapped it

00:30:29,070 --> 00:30:32,910
just look for that tell us about it that

00:30:31,410 --> 00:30:34,500
was how it feels maybe something missing

00:30:32,910 --> 00:30:36,090
maybe there's some integration that is

00:30:34,500 --> 00:30:38,270
just doesn't feel right for Suzy we

00:30:36,090 --> 00:30:42,000
really want to know these things and

00:30:38,270 --> 00:30:43,380
lastly you can you can stay in touch we

00:30:42,000 --> 00:30:46,020
have a couple of places you can go to

00:30:43,380 --> 00:30:47,970
meet us we are now see on freenode on

00:30:46,020 --> 00:30:49,530
snappy whereas on rocket which is like

00:30:47,970 --> 00:30:50,640
more modern version of iris see where

00:30:49,530 --> 00:30:52,590
you have to be connected all the time

00:30:50,640 --> 00:30:54,720
and we have a fantastic I can't stress

00:30:52,590 --> 00:30:57,600
this enough fantastic forum we just full

00:30:54,720 --> 00:30:59,880
of everything and all these things are

00:30:57,600 --> 00:31:01,830
actually snaps which is funny and last

00:30:59,880 --> 00:31:03,780
thing is that you can come and visit we

00:31:01,830 --> 00:31:06,150
have a sprint next month so there's

00:31:03,780 --> 00:31:08,460
details in that link I can link the

00:31:06,150 --> 00:31:10,020
presentation I think we ran out of time

00:31:08,460 --> 00:31:11,910
but if you guys want to talk to me about

00:31:10,020 --> 00:31:15,680
anything snappy just grab me with a

00:31:11,910 --> 00:31:15,680
t-shirt and talk to me thank you

00:31:15,710 --> 00:31:17,770

YouTube URL: https://www.youtube.com/watch?v=5WjIBG13grI


