Title: openSUSE Conference 2017 How the KDE community packages for SLE in PackageHub were done
Publication date: 2017-05-28
Playlist: openSUSE Conference 2017
Description: 
	https://media.ccc.de/v/1352-how-the-kde-community-packages-for-sle-in-packagehub-were-done

Submitting more than 400 new packages to Backports

This talk will explain how the KDE packages were prepared and submitted to Package Hub so SLE users could enjoy them. Missing dependencies, rpmlint complaining about valid packages, not fully available dependencies, missing branding packages... It wasn't an easy path to travel but it was worth it. This talk will explain the problems found and how they were solved with the hope to make it easier for others to submit their packages to Package Hub.



Antonio Larrosa
Captions: 
	00:00:07,309 --> 00:00:13,049
so let's start I'm going to talk to you

00:00:10,050 --> 00:00:16,199
about the KD packages for ously that we

00:00:13,049 --> 00:00:17,880
have done for package shop I suppose

00:00:16,199 --> 00:00:19,859
that you of being in the other package

00:00:17,880 --> 00:00:23,340
have talks that have been in the in the

00:00:19,859 --> 00:00:24,689
conference but for this time where I'm

00:00:23,340 --> 00:00:28,349
going to talk to only about the kV

00:00:24,689 --> 00:00:30,359
packages and about the whole process in

00:00:28,349 --> 00:00:34,140
order to get the CAD packages in a shop

00:00:30,359 --> 00:00:36,480
so that might be a starting point for

00:00:34,140 --> 00:00:39,239
you if you want to also collaborate with

00:00:36,480 --> 00:00:41,820
package happen update submit your

00:00:39,239 --> 00:00:45,660
applications that it will be maybe an

00:00:41,820 --> 00:00:47,969
interesting talk for you so let's start

00:00:45,660 --> 00:00:49,469
explaining Who am I because I suppose

00:00:47,969 --> 00:00:53,579
that most of you don't know me at least

00:00:49,469 --> 00:00:57,059
I don't know most view so I'm Angela on

00:00:53,579 --> 00:01:01,170
IRC Antonio LaRosa on the real world

00:00:57,059 --> 00:01:06,110
I've been a ke developers since 20 years

00:01:01,170 --> 00:01:08,939
ago having a sushi user since the 98

00:01:06,110 --> 00:01:12,960
something like that at that time success

00:01:08,939 --> 00:01:17,030
and DVDs to all KDE developers so I

00:01:12,960 --> 00:01:21,509
started using it at that time and I

00:01:17,030 --> 00:01:23,070
think as li user since around 2004 and

00:01:21,509 --> 00:01:26,880
the progressed company I worked for

00:01:23,070 --> 00:01:30,390
before coming to Sousa used the S Lee as

00:01:26,880 --> 00:01:32,009
a maintainer system administrator and

00:01:30,390 --> 00:01:35,700
also developer developer the

00:01:32,009 --> 00:01:37,619
applications falsely and I've been

00:01:35,700 --> 00:01:41,400
suicidal open I've been working on to

00:01:37,619 --> 00:01:43,500
say for the last four years and also for

00:01:41,400 --> 00:01:48,479
a bit longer than a year around the year

00:01:43,500 --> 00:01:52,110
2000 and currently I'm at the Slee

00:01:48,479 --> 00:01:55,229
desktop team okay I so I work most of

00:01:52,110 --> 00:01:57,000
the time with with gtk applications but

00:01:55,229 --> 00:01:58,619
also with KD applications on

00:01:57,000 --> 00:02:02,159
organization

00:01:58,619 --> 00:02:05,399
so how these these how did this project

00:02:02,159 --> 00:02:08,160
began about making clear applications

00:02:05,399 --> 00:02:10,229
carried packages for SE well mainly it

00:02:08,160 --> 00:02:12,060
started as a quick project I suppose

00:02:10,229 --> 00:02:12,650
that most of you who have worked in the

00:02:12,060 --> 00:02:15,680
hack week

00:02:12,650 --> 00:02:17,819
it also happened to you probably that

00:02:15,680 --> 00:02:19,700
the first day of the hack week do you

00:02:17,819 --> 00:02:21,900
still don't know what to do and then

00:02:19,700 --> 00:02:23,610
talking with some people they suggested

00:02:21,900 --> 00:02:26,250
that maybe it will be a good idea to

00:02:23,610 --> 00:02:29,580
make a caddy carry packages for ously

00:02:26,250 --> 00:02:32,250
and I thought let's see the packages for

00:02:29,580 --> 00:02:34,980
openSUSE so it shouldn't be much of a

00:02:32,250 --> 00:02:39,000
problem I was wrong okay that's a

00:02:34,980 --> 00:02:41,910
spoiler of the talk it has started in

00:02:39,000 --> 00:02:43,860
hack week 12 to be more precise if you

00:02:41,910 --> 00:02:47,299
check the dates I had to I had to check

00:02:43,860 --> 00:02:50,069
it is around April 1 2015

00:02:47,299 --> 00:02:53,040
so it's been a while now since I started

00:02:50,069 --> 00:02:54,870
working on this but most of the work was

00:02:53,040 --> 00:02:58,079
actually done by the end of the year of

00:02:54,870 --> 00:03:03,840
the of 2015 and the beginning of 2016

00:02:58,079 --> 00:03:06,660
ok I worked obviously during the hug

00:03:03,840 --> 00:03:09,750
week but I was overwhelmed there was a

00:03:06,660 --> 00:03:11,340
lot of work to be done and it was clear

00:03:09,750 --> 00:03:16,829
that it was not a project to be done in

00:03:11,340 --> 00:03:19,470
a week after after I started so in a

00:03:16,829 --> 00:03:22,590
sense this project has been kind of a

00:03:19,470 --> 00:03:24,209
guinea pig for for package hut because

00:03:22,590 --> 00:03:26,819
we have been testing things before

00:03:24,209 --> 00:03:29,579
packaged app was released and I suppose

00:03:26,819 --> 00:03:32,880
is not wrong to say something like like

00:03:29,579 --> 00:03:36,660
that ok so before beginning about

00:03:32,880 --> 00:03:38,280
talking about how this is done probably

00:03:36,660 --> 00:03:42,750
I should talk about how KDE is a

00:03:38,280 --> 00:03:44,519
structural in into OBS and I guess most

00:03:42,750 --> 00:03:49,230
of you already know maybe so I will

00:03:44,519 --> 00:03:52,859
probably go faster on this basically we

00:03:49,230 --> 00:03:56,340
have several projects for cute-cute

00:03:52,859 --> 00:03:58,440
packages the main project for that is

00:03:56,340 --> 00:04:01,709
Kelly good 5 which is double project for

00:03:58,440 --> 00:04:05,310
for the Qt in factory and then also we

00:04:01,709 --> 00:04:06,900
have get 5 6 get 5 7 and you know the

00:04:05,310 --> 00:04:12,120
progression right you see the pattern

00:04:06,900 --> 00:04:15,599
there then we also have

00:04:12,120 --> 00:04:18,060
Kelly projects we have a splitted that

00:04:15,599 --> 00:04:20,959
into a framework 5 they separate of

00:04:18,060 --> 00:04:23,580
Katie from 5 which includes right now

00:04:20,959 --> 00:04:27,840
frameworks and plasma packages mix up

00:04:23,580 --> 00:04:30,780
that there also we have Kelly from box 5

00:04:27,840 --> 00:04:34,020
LTS which is the LTS version of plasma

00:04:30,780 --> 00:04:36,660
and it includes a new version of

00:04:34,020 --> 00:04:41,460
frameworks but not so new as in KD

00:04:36,660 --> 00:04:43,650
frameworks 5 personally I think that we

00:04:41,460 --> 00:04:47,030
should also split that but probably that

00:04:43,650 --> 00:04:49,889
will happen in the next in weeks/months

00:04:47,030 --> 00:04:52,260
but right now frameworks on plasma are

00:04:49,889 --> 00:04:54,060
in the same project ok and then we have

00:04:52,260 --> 00:04:57,090
Kelly applications which is basically

00:04:54,060 --> 00:05:03,410
Kelly applications as the name says the

00:04:57,090 --> 00:05:07,110
software the application for Kelly then

00:05:03,410 --> 00:05:09,270
there's also KD extra which is more

00:05:07,110 --> 00:05:11,430
applications for Kelly that are not part

00:05:09,270 --> 00:05:14,130
of the KD applications software

00:05:11,430 --> 00:05:16,919
compilation ok and then we also have a

00:05:14,130 --> 00:05:19,470
kind of an obsolete project which is KD

00:05:16,919 --> 00:05:22,710
distro factory which includes a KD for

00:05:19,470 --> 00:05:25,039
packages which are still in use and with

00:05:22,710 --> 00:05:28,610
a little luck we will stop using that

00:05:25,039 --> 00:05:32,250
soon as soon as possible

00:05:28,610 --> 00:05:34,830
ok then we also have other projects in

00:05:32,250 --> 00:05:37,950
OBS for KD which are the unstable

00:05:34,830 --> 00:05:43,080
projects which have the service to get

00:05:37,950 --> 00:05:46,950
the sorry which have the services to get

00:05:43,080 --> 00:05:50,880
the packages from JIT directly this as

00:05:46,950 --> 00:05:52,470
you see something something clear cute

00:05:50,880 --> 00:05:57,120
framework applications and extra and

00:05:52,470 --> 00:06:00,180
they are updated mostly every day ok at

00:05:57,120 --> 00:06:04,500
some times even more than most more than

00:06:00,180 --> 00:06:08,250
one per day so these are the base for

00:06:04,500 --> 00:06:10,530
openSUSE Krypton and argon the those

00:06:08,250 --> 00:06:15,000
distributions take the de packages from

00:06:10,530 --> 00:06:18,330
these products so with so many projects

00:06:15,000 --> 00:06:21,180
to take to base or or or SLE package is

00:06:18,330 --> 00:06:24,380
from what should be what should we take

00:06:21,180 --> 00:06:26,070
well basically at the beginning I

00:06:24,380 --> 00:06:31,080
decided to go

00:06:26,070 --> 00:06:34,410
with Kitty 5.4 dot three I think but

00:06:31,080 --> 00:06:38,130
then when openSUSE leap was released it

00:06:34,410 --> 00:06:40,860
then sorry not one was rigid but when

00:06:38,130 --> 00:06:44,540
openSUSE leap was updated I change it

00:06:40,860 --> 00:06:46,920
and use it Kady five five five yeah

00:06:44,540 --> 00:06:50,550
basically I use it the devil process for

00:06:46,920 --> 00:06:53,940
factory which soon what not so soon that

00:06:50,550 --> 00:06:58,320
I realized that that was kind of a bad

00:06:53,940 --> 00:07:00,510
decision and for the when I was making

00:06:58,320 --> 00:07:03,870
the application the packages for sp2 for

00:07:00,510 --> 00:07:07,560
a CD 12 sp2 I decided to go and just use

00:07:03,870 --> 00:07:12,420
directly the packages from leap from lib

00:07:07,560 --> 00:07:15,750
42.2 okay because a deck 42.2 packages

00:07:12,420 --> 00:07:17,550
for from Kelly where there was a lot of

00:07:15,750 --> 00:07:20,550
time invested into those packages and

00:07:17,550 --> 00:07:27,840
the most it will be a pity not to to use

00:07:20,550 --> 00:07:31,200
them so basically at the beginning I

00:07:27,840 --> 00:07:34,710
used this this project set as a space

00:07:31,200 --> 00:07:37,470
and if we count the packages that are in

00:07:34,710 --> 00:07:41,190
each of these projects then we see that

00:07:37,470 --> 00:07:44,430
there are quite a few packages there in

00:07:41,190 --> 00:07:46,830
each of the projects and if we sum them

00:07:44,430 --> 00:07:49,080
we see that there are nearly 1000

00:07:46,830 --> 00:07:51,210
packages there of course not all of them

00:07:49,080 --> 00:07:53,790
are currently in package hub there are

00:07:51,210 --> 00:07:56,130
many packages that either not it they

00:07:53,790 --> 00:07:58,950
don't make sense in ously like for

00:07:56,130 --> 00:08:03,870
example discover or some of those App

00:07:58,950 --> 00:08:08,460
Store applications that use new package

00:08:03,870 --> 00:08:10,830
kit dependencies and which but it's the

00:08:08,460 --> 00:08:15,330
users usually don't want to use app

00:08:10,830 --> 00:08:17,430
stores for that way there are also a not

00:08:15,330 --> 00:08:20,430
so common applications that don't make

00:08:17,430 --> 00:08:23,040
sense on enterprise also games for

00:08:20,430 --> 00:08:27,000
example of what I included a few games

00:08:23,040 --> 00:08:30,930
just in case and well at the end

00:08:27,000 --> 00:08:37,450
basically we put into package hub

00:08:30,930 --> 00:08:41,090
something like 350 400 packages okay

00:08:37,450 --> 00:08:43,490
so we already know what to base or

00:08:41,090 --> 00:08:46,930
credit on and then I started building

00:08:43,490 --> 00:08:50,720
everything and first problems arising

00:08:46,930 --> 00:08:54,290
some of the libraries that we were using

00:08:50,720 --> 00:08:56,810
and all the s couldn't couldn't resolve

00:08:54,290 --> 00:09:00,070
the dependencies I mean I had a project

00:08:56,810 --> 00:09:05,870
in which I built let's see let's say a

00:09:00,070 --> 00:09:07,580
cute 5 good 5 base cute 5 base and then

00:09:05,870 --> 00:09:09,530
when I was going to build another

00:09:07,580 --> 00:09:11,900
application other or another library

00:09:09,530 --> 00:09:15,380
that depended on that obvious simply

00:09:11,900 --> 00:09:18,080
said that the dependency was unresolved

00:09:15,380 --> 00:09:21,380
and it was in the same project and it

00:09:18,080 --> 00:09:26,240
was this was what the fact okay it was a

00:09:21,380 --> 00:09:29,660
kind of strange situation well it turns

00:09:26,240 --> 00:09:31,670
out that KD uses dependencies like with

00:09:29,660 --> 00:09:34,370
capabilities instead of like using

00:09:31,670 --> 00:09:36,710
package names not all of them but in

00:09:34,370 --> 00:09:41,450
many cases it uses a dependencies like

00:09:36,710 --> 00:09:43,880
like that and rpm rpm in Nestle wasn't

00:09:41,450 --> 00:09:48,080
creating the provides for those

00:09:43,880 --> 00:09:52,010
libraries ok so the solution was simple

00:09:48,080 --> 00:09:55,910
ones the problem was was stated as a

00:09:52,010 --> 00:09:58,210
known and only including the Simek RPM

00:09:55,910 --> 00:10:02,180
macro file from factory into the

00:09:58,210 --> 00:10:04,580
cynic package in easly and it was solved

00:10:02,180 --> 00:10:12,350
and we had we had all the capabilities

00:10:04,580 --> 00:10:14,960
included into the packages ok so we have

00:10:12,350 --> 00:10:17,780
a problem with packages missing in

00:10:14,960 --> 00:10:22,460
slippers there are many packages that

00:10:17,780 --> 00:10:25,280
are that we're mainly missing that the

00:10:22,460 --> 00:10:27,200
the one there and then there are the

00:10:25,280 --> 00:10:29,750
were other packages that were too old

00:10:27,200 --> 00:10:33,230
maybe I should say to his table because

00:10:29,750 --> 00:10:36,830
they were not updated with respect to

00:10:33,230 --> 00:10:39,860
factory of course but in any case I

00:10:36,830 --> 00:10:42,410
needed newer things and I needed things

00:10:39,860 --> 00:10:47,180
that weren't there so I learned about

00:10:42,410 --> 00:10:50,390
these key K the hard way because the

00:10:47,180 --> 00:10:54,770
since early I didn't even knew that was

00:10:50,390 --> 00:10:58,730
something and it turns out that packages

00:10:54,770 --> 00:10:59,930
that are in flee sometimes I use it to

00:10:58,730 --> 00:11:02,540
build other packages but I'm not

00:10:59,930 --> 00:11:04,120
including into the distribution so that

00:11:02,540 --> 00:11:07,310
was I was happening there and

00:11:04,120 --> 00:11:12,500
fortunately what I got in touch with

00:11:07,310 --> 00:11:15,350
algae and shoulder-width lonardo

00:11:12,500 --> 00:11:18,440
Chiquito and other developers who helped

00:11:15,350 --> 00:11:23,500
me and move the applications to OBS so

00:11:18,440 --> 00:11:23,500
that I could use them around there okay

00:11:23,890 --> 00:11:30,590
so afterwards well this I think that

00:11:27,950 --> 00:11:33,610
I've already been explaining in other in

00:11:30,590 --> 00:11:36,490
other talks rpm lint complained that

00:11:33,610 --> 00:11:38,840
many packages that I was building

00:11:36,490 --> 00:11:43,070
interfere with other packages that were

00:11:38,840 --> 00:11:45,950
already into ously released it or not I

00:11:43,070 --> 00:11:48,110
mean even if it was only interfering

00:11:45,950 --> 00:11:49,580
with one package that was used to build

00:11:48,110 --> 00:11:53,270
another packages but were not released

00:11:49,580 --> 00:11:55,430
then it didn't matter I mean I couldn't

00:11:53,270 --> 00:11:58,250
build that package and RPM link

00:11:55,430 --> 00:12:03,260
complaint and the building of the

00:11:58,250 --> 00:12:06,350
package is stopped so I resort out I

00:12:03,260 --> 00:12:09,800
couldn't build new versions of cute of

00:12:06,350 --> 00:12:11,390
course and you have to remember that

00:12:09,800 --> 00:12:12,530
it's lit worth you said cute

00:12:11,390 --> 00:12:17,660
five-three-one

00:12:12,530 --> 00:12:20,960
and even if sp1 still use at 5 3 2 which

00:12:17,660 --> 00:12:24,380
is a very old cute version but

00:12:20,960 --> 00:12:27,710
fortunately max I don't know if our own

00:12:24,380 --> 00:12:30,230
here max lean back ported a lot of

00:12:27,710 --> 00:12:33,290
patches from upstream into cute he

00:12:30,230 --> 00:12:35,980
really did a great job and and those

00:12:33,290 --> 00:12:39,650
versions were good enough for us okay

00:12:35,980 --> 00:12:42,950
but there were also other packages like

00:12:39,650 --> 00:12:45,320
CMake which was very old a kid lives for

00:12:42,950 --> 00:12:49,610
was included I mean it's not in in the

00:12:45,320 --> 00:12:52,940
distribution but it's in vsk ki p ffmpeg

00:12:49,610 --> 00:12:56,180
Messe LLVM there were all versions of

00:12:52,940 --> 00:12:59,170
that out of packages and something had

00:12:56,180 --> 00:13:02,780
to be done so

00:12:59,170 --> 00:13:06,170
if a Fed note packaging in in package

00:13:02,780 --> 00:13:07,970
hub can have the same name or include a

00:13:06,170 --> 00:13:11,510
file that is already included in any

00:13:07,970 --> 00:13:14,210
package in Italy so that might looks

00:13:11,510 --> 00:13:16,580
like a problem for us if we are wanting

00:13:14,210 --> 00:13:18,830
if you want to to create a package but

00:13:16,580 --> 00:13:22,010
it actually makes sense for for users

00:13:18,830 --> 00:13:25,610
and we have to think of user so we have

00:13:22,010 --> 00:13:29,270
to we have to find a solution that works

00:13:25,610 --> 00:13:30,890
for us so the main solution for this is

00:13:29,270 --> 00:13:34,370
to patch the packaging Nestle and

00:13:30,890 --> 00:13:38,390
include any feature that we need from

00:13:34,370 --> 00:13:40,880
the later from the newer version ok to

00:13:38,390 --> 00:13:49,490
back port things that should've said

00:13:40,880 --> 00:13:52,190
that sorry so sometimes also it's

00:13:49,490 --> 00:13:55,130
possible to force NPM link to ignore the

00:13:52,190 --> 00:13:56,840
error and whitelist the package and so

00:13:55,130 --> 00:13:58,580
that is to continue of course this is

00:13:56,840 --> 00:14:00,590
not a long-term solution this is only a

00:13:58,580 --> 00:14:02,810
solution in order to continue building

00:14:00,590 --> 00:14:05,380
and continue working wife while the

00:14:02,810 --> 00:14:10,040
problem the real problem was fix it ok

00:14:05,380 --> 00:14:13,640
this is this was done because if I could

00:14:10,040 --> 00:14:16,010
if I would have had to stop for every

00:14:13,640 --> 00:14:18,050
package that had this problem then I

00:14:16,010 --> 00:14:21,830
would still be building heavy packages

00:14:18,050 --> 00:14:23,510
ok this this way I could continue

00:14:21,830 --> 00:14:25,910
working with other packages while

00:14:23,510 --> 00:14:29,810
someone else was fixing this this

00:14:25,910 --> 00:14:33,560
application so another problem problem

00:14:29,810 --> 00:14:38,480
was the Wayland problem it turns out a

00:14:33,560 --> 00:14:43,460
KDE at that time required Waylon 1.3 but

00:14:38,480 --> 00:14:46,700
still it was only had 1.2 so probably

00:14:43,460 --> 00:14:48,740
you are wondering now is wait it's the

00:14:46,700 --> 00:14:51,800
12 is it wadn't what the answer is of

00:14:48,740 --> 00:14:54,380
course no ok but it was used to build

00:14:51,800 --> 00:14:55,700
other packages as I said before so the

00:14:54,380 --> 00:14:59,990
solution in this case was to patch

00:14:55,700 --> 00:15:03,740
Waylon and include some quite a few

00:14:59,990 --> 00:15:06,800
patches from from upstream and yeah it

00:15:03,740 --> 00:15:10,550
got there and it will find so good

00:15:06,800 --> 00:15:12,110
continue also some other a some other

00:15:10,550 --> 00:15:15,400
problem that I have was with

00:15:12,110 --> 00:15:17,660
hakuna D I haven't shown you here a

00:15:15,400 --> 00:15:22,580
small selection of the problems that we

00:15:17,660 --> 00:15:24,530
have but many more but in this case for

00:15:22,580 --> 00:15:28,940
example a conadi had a special

00:15:24,530 --> 00:15:31,660
requirement for sqlite3 which was from

00:15:28,940 --> 00:15:35,560
support for lock notify interface which

00:15:31,660 --> 00:15:39,950
can only be enabled at compile time so

00:15:35,560 --> 00:15:41,510
the solution was easy to do but it's

00:15:39,950 --> 00:15:45,290
also another change that we had to do in

00:15:41,510 --> 00:15:50,600
Easley in order to support this then

00:15:45,290 --> 00:15:53,770
python sip python sip as included in in

00:15:50,600 --> 00:15:56,900
the 312 which was the version for 15-4

00:15:53,770 --> 00:16:00,590
wasn't enough and in order to build a

00:15:56,900 --> 00:16:05,000
Python cute 5 bindings we needed some

00:16:00,590 --> 00:16:08,150
features from 416 so these are the list

00:16:05,000 --> 00:16:12,070
of features that we needed and basically

00:16:08,150 --> 00:16:12,070
and I have two back port all of them

00:16:12,370 --> 00:16:18,500
fortunately a Python sip is not very

00:16:15,290 --> 00:16:22,490
used on ously so it was mainly used only

00:16:18,500 --> 00:16:24,230
to build the kid for bindings and the

00:16:22,490 --> 00:16:28,150
kid for bindings are only used by two

00:16:24,230 --> 00:16:31,940
two packages FF a dome ixr and H

00:16:28,150 --> 00:16:35,770
Pilipinas Lea so I tested the packages

00:16:31,940 --> 00:16:40,760
and so that they work they work fine and

00:16:35,770 --> 00:16:44,980
we could go on so we reached the point

00:16:40,760 --> 00:16:49,610
in which lib 42.2 was release it and

00:16:44,980 --> 00:16:53,330
sorry it included the plasma I think 5

00:16:49,610 --> 00:16:56,330
for something and in the update in the

00:16:53,330 --> 00:17:02,750
maintenance updates it was upgraded to 5

00:16:56,330 --> 00:17:06,140
5 5 so okay we haven't released anything

00:17:02,750 --> 00:17:08,740
yet for package hub so I thought let's

00:17:06,140 --> 00:17:11,420
upgrade it why not there are many

00:17:08,740 --> 00:17:13,640
problems that are already fix it it

00:17:11,420 --> 00:17:17,420
should be quite more stressful forward

00:17:13,640 --> 00:17:19,820
right so the problem was that this

00:17:17,420 --> 00:17:21,190
update brought out brought new

00:17:19,820 --> 00:17:23,530
dependencies

00:17:21,190 --> 00:17:26,290
and for example the Whelan problem

00:17:23,530 --> 00:17:31,720
returned it and this time KD required a

00:17:26,290 --> 00:17:35,640
Whelan 1.7 which is a long leap from 1.2

00:17:31,720 --> 00:17:40,540
which one was still provided by Easley

00:17:35,640 --> 00:17:42,790
so what sleep sp1 includes violent no of

00:17:40,540 --> 00:17:45,070
course didn't but the solution was to

00:17:42,790 --> 00:17:48,370
back port even more to pitch pattern

00:17:45,070 --> 00:17:50,620
from upstream at the end I think I got

00:17:48,370 --> 00:17:54,540
something like 20-something patches from

00:17:50,620 --> 00:17:59,070
upstream in order to to build everything

00:17:54,540 --> 00:18:01,840
so it was quite a great a lot of work

00:17:59,070 --> 00:18:04,540
the problem by the way in case you're

00:18:01,840 --> 00:18:06,610
wondering why Kelly needs Whelan is

00:18:04,540 --> 00:18:09,220
Kelly still doesn't use weight and even

00:18:06,610 --> 00:18:10,930
in the lip or in factory the problem is

00:18:09,220 --> 00:18:13,750
that there were not problem but the

00:18:10,930 --> 00:18:16,780
thing is that there is a dependency in

00:18:13,750 --> 00:18:20,500
key wing on some Whelan libraries that

00:18:16,780 --> 00:18:23,050
it is internally to work even in x11

00:18:20,500 --> 00:18:28,000
so the Weiland libraries have to be

00:18:23,050 --> 00:18:30,190
there ok so another problem was the

00:18:28,000 --> 00:18:31,600
Ashley branding packages because as you

00:18:30,190 --> 00:18:34,690
know actually has a different branding

00:18:31,600 --> 00:18:39,130
from openSUSE so I could use the plasma

00:18:34,690 --> 00:18:42,670
5 openSUSE branding packages and I what

00:18:39,130 --> 00:18:45,310
I did was to create a new plasma 5 in

00:18:42,670 --> 00:18:48,010
sleep branding packages which were of

00:18:45,310 --> 00:18:50,020
course based on the open source ones but

00:18:48,010 --> 00:18:51,850
I changed the backgrounds with the

00:18:50,020 --> 00:18:55,780
standard ously backgrounds

00:18:51,850 --> 00:18:59,680
I changed the flashes screens to include

00:18:55,780 --> 00:19:05,160
more souza such a logo type log of Sun

00:18:59,680 --> 00:19:07,840
this kind of things right ok so

00:19:05,160 --> 00:19:14,950
basically we reach to a point in which

00:19:07,840 --> 00:19:16,240
we could test some things ok and we

00:19:14,950 --> 00:19:18,840
found out that there were missing

00:19:16,240 --> 00:19:21,430
binaries I mean everything built find

00:19:18,840 --> 00:19:24,550
all the dependencies were there when

00:19:21,430 --> 00:19:28,150
building but when the user wantin wanted

00:19:24,550 --> 00:19:29,980
to install the system there was some

00:19:28,150 --> 00:19:31,540
dependencies that weren't available for

00:19:29,980 --> 00:19:32,180
him because he's not using obvious of

00:19:31,540 --> 00:19:36,110
course

00:19:32,180 --> 00:19:37,820
so there were packages in obvious that

00:19:36,110 --> 00:19:43,100
were not available for the users for

00:19:37,820 --> 00:19:45,440
example that's a small list of them as

00:19:43,100 --> 00:19:48,830
you see is not only cute five packages

00:19:45,440 --> 00:19:52,550
the cute five modules but also a glue

00:19:48,830 --> 00:19:55,400
also Adam DB so flack and some other

00:19:52,550 --> 00:19:57,050
Larry's in dog in some cases some of

00:19:55,400 --> 00:19:59,000
those libraries were available for a

00:19:57,050 --> 00:20:01,310
silly desktop would not fall asleep

00:19:59,000 --> 00:20:03,020
server in other cases some of those

00:20:01,310 --> 00:20:05,000
packages were available for this

00:20:03,020 --> 00:20:06,470
listener and not for a silly desktop in

00:20:05,000 --> 00:20:11,600
other cases they were not available for

00:20:06,470 --> 00:20:14,470
any of them and well it had to be worked

00:20:11,600 --> 00:20:20,090
on which also took time

00:20:14,470 --> 00:20:27,140
so the Cadi packages finally arrived for

00:20:20,090 --> 00:20:31,520
sp1 after more than a year in July last

00:20:27,140 --> 00:20:34,670
year and I thought okay this time sp2

00:20:31,520 --> 00:20:37,670
won't catch me off guard and I will be

00:20:34,670 --> 00:20:42,860
prepared so together with Mac's we

00:20:37,670 --> 00:20:45,890
upgraded a cute in sp2 to the LTS

00:20:42,860 --> 00:20:50,720
version two five six one which is a nice

00:20:45,890 --> 00:20:52,610
upgrade and it also allowed us to remove

00:20:50,720 --> 00:20:55,340
many patch of the world backported and

00:20:52,610 --> 00:20:58,430
just use the the LTS version which is a

00:20:55,340 --> 00:21:03,710
statement easier to maintain and so

00:20:58,430 --> 00:21:05,600
that's very nice also I got rid of the

00:21:03,710 --> 00:21:09,110
Whalen problem and I said okay let's

00:21:05,600 --> 00:21:12,440
upgrade Whalen to 111 and that we solve

00:21:09,110 --> 00:21:16,910
everything at this the Whalen problem

00:21:12,440 --> 00:21:19,790
not everything I didn't do this but it

00:21:16,910 --> 00:21:21,830
was nice that someone else did I don't

00:21:19,790 --> 00:21:25,040
know if you are here thank you

00:21:21,830 --> 00:21:28,660
someone else upgraded see make two three

00:21:25,040 --> 00:21:31,490
five two also that helped a lot because

00:21:28,660 --> 00:21:33,980
there were many packages in in KD which

00:21:31,490 --> 00:21:38,120
were requiring a newer version of Simic

00:21:33,980 --> 00:21:40,160
in some cases there was a silly

00:21:38,120 --> 00:21:42,260
dependency that if we removed it

00:21:40,160 --> 00:21:43,790
basically it worked there was nothing

00:21:42,260 --> 00:21:46,010
else to be done don't just remove the

00:21:43,790 --> 00:21:50,110
dependency but in other cases

00:21:46,010 --> 00:21:54,289
it was used to but really required okay

00:21:50,110 --> 00:21:58,370
so as I said it wouldn't catch me off

00:21:54,289 --> 00:22:00,649
guard but actually did because I hadn't

00:21:58,370 --> 00:22:03,919
thought at that time about the problem

00:22:00,649 --> 00:22:06,440
with the internal API usage of some cue

00:22:03,919 --> 00:22:09,230
some KD applications some KD

00:22:06,440 --> 00:22:10,309
applications and libraries use internal

00:22:09,230 --> 00:22:15,350
API from cute

00:22:10,309 --> 00:22:18,200
because they need to use it and and what

00:22:15,350 --> 00:22:21,289
this means that the KD applications like

00:22:18,200 --> 00:22:23,960
as an important as K win the window

00:22:21,289 --> 00:22:25,639
manager or Plasma just require an a

00:22:23,960 --> 00:22:28,429
specific version of cute I mean they

00:22:25,639 --> 00:22:30,380
don't do cannot upgrade cute without the

00:22:28,429 --> 00:22:33,350
recompiling rebuilding and reinstalling

00:22:30,380 --> 00:22:35,389
the KD applications so that was a

00:22:33,350 --> 00:22:39,110
problem because there were many users

00:22:35,389 --> 00:22:41,779
using ously 312 sp1 with the KD packages

00:22:39,110 --> 00:22:46,360
and when they upgraded to sp2 basically

00:22:41,779 --> 00:22:51,399
the desktop stopped working okay also

00:22:46,360 --> 00:22:53,840
the KDE look changed quite a bit and

00:22:51,399 --> 00:22:59,000
many configuration files change the

00:22:53,840 --> 00:23:00,830
places they changed the format the qml

00:22:59,000 --> 00:23:03,950
files that define the look also change

00:23:00,830 --> 00:23:07,070
it a lot and this means that the

00:23:03,950 --> 00:23:08,929
openSUSE branding was changed and I was

00:23:07,070 --> 00:23:10,909
basically using some script to change

00:23:08,929 --> 00:23:13,789
the brandings

00:23:10,909 --> 00:23:17,120
from openSUSE to Leslie and this gets

00:23:13,789 --> 00:23:20,299
stopped working so this meant a lot of

00:23:17,120 --> 00:23:23,059
work that had to be done tour and this

00:23:20,299 --> 00:23:24,679
time as I said okay most of the

00:23:23,059 --> 00:23:27,799
dependency problems are already solved

00:23:24,679 --> 00:23:31,309
actually in the spittoon these are okay

00:23:27,799 --> 00:23:32,750
thanks so just use the lip for the two

00:23:31,309 --> 00:23:35,480
the two packages that as I said before

00:23:32,750 --> 00:23:38,570
were much nicer so this means that we

00:23:35,480 --> 00:23:41,080
upgraded in the SP to change we have

00:23:38,570 --> 00:23:43,549
graded frameworks we have graded plasma

00:23:41,080 --> 00:23:46,510
even in during the speed to maintenance

00:23:43,549 --> 00:23:50,419
I relate to 586

00:23:46,510 --> 00:23:53,000
we have raided some applications so can

00:23:50,419 --> 00:23:54,769
use plasma in energy and going faster

00:23:53,000 --> 00:23:57,889
because I've been told that my time is

00:23:54,769 --> 00:23:59,390
pinching okay so don't ask for

00:23:57,889 --> 00:24:02,390
information just use it okay

00:23:59,390 --> 00:24:03,679
do it you're only the only thing you

00:24:02,390 --> 00:24:06,500
have to do is register just use a

00:24:03,679 --> 00:24:08,890
product really a system enable the

00:24:06,500 --> 00:24:11,690
package have extension and the SDK

00:24:08,890 --> 00:24:13,250
actually I'm not sure if SDK is actually

00:24:11,690 --> 00:24:16,070
needed but it doesn't matter if you

00:24:13,250 --> 00:24:19,940
enable it and then do cheaper install

00:24:16,070 --> 00:24:21,920
pattern Kady okay only that we didn't

00:24:19,940 --> 00:24:24,920
start a whole KD desktop in your SD

00:24:21,920 --> 00:24:28,940
system which is install it if turning

00:24:24,920 --> 00:24:33,320
around 450 new packages and around 300

00:24:28,940 --> 00:24:38,660
megabytes okay is quite a few packages

00:24:33,320 --> 00:24:40,280
but it's worth it so the idea when you

00:24:38,660 --> 00:24:43,429
after you install it is that you get

00:24:40,280 --> 00:24:46,760
this GD impression this GIM screen sir

00:24:43,429 --> 00:24:48,380
then in the GL box next to sign in do

00:24:46,760 --> 00:24:50,780
you have to click it and then a pop-up

00:24:48,380 --> 00:24:54,590
appears where you select plasma and then

00:24:50,780 --> 00:24:56,960
you log in and you get into with work of

00:24:54,590 --> 00:24:59,960
course you get into your plasma desktop

00:24:56,960 --> 00:25:01,970
which as you see is very similar to the

00:24:59,960 --> 00:25:05,929
genome desktop in asleep because I try

00:25:01,970 --> 00:25:08,929
to make it as similar as possible will

00:25:05,929 --> 00:25:10,850
work in fact I talked with Scott a few

00:25:08,929 --> 00:25:13,880
days ago about that because I thought it

00:25:10,850 --> 00:25:18,919
didn't but actually it did it that sorry

00:25:13,880 --> 00:25:21,080
it does I tried it Vista in a virtual

00:25:18,919 --> 00:25:25,809
machine for the desktop and forestry

00:25:21,080 --> 00:25:30,590
server and actually it works quite well

00:25:25,809 --> 00:25:33,679
as you see basically is the the same gdm

00:25:30,590 --> 00:25:36,620
meaning the same GD look p.m. look only

00:25:33,679 --> 00:25:41,330
you have to change v config display

00:25:36,620 --> 00:25:43,700
manager and change GD m with SVM and as

00:25:41,330 --> 00:25:45,620
you see that look is very similar the

00:25:43,700 --> 00:25:47,660
only known issue is that the shutdown

00:25:45,620 --> 00:25:50,660
button just looks out from your from

00:25:47,660 --> 00:25:53,540
your session so the on the solution is

00:25:50,660 --> 00:25:56,600
easy just do an extra click on your

00:25:53,540 --> 00:25:58,520
display manager and shut down this the

00:25:56,600 --> 00:26:00,110
system from that so there are ready

00:25:58,520 --> 00:26:03,850
Kelly packages for this package shop

00:26:00,110 --> 00:26:06,200
just use them and this is not collision

00:26:03,850 --> 00:26:07,730
there are many caliper dependencies that

00:26:06,200 --> 00:26:10,669
were including package hub thanks to

00:26:07,730 --> 00:26:12,630
this so I think and I hope at least that

00:26:10,669 --> 00:26:14,760
many other projects

00:26:12,630 --> 00:26:17,400
get easier in Topeka shop thanks to this

00:26:14,760 --> 00:26:21,030
and I would like to thank all these

00:26:17,400 --> 00:26:23,400
people for helping to get into to get

00:26:21,030 --> 00:26:26,370
the packages into package shop so I

00:26:23,400 --> 00:26:30,320
don't know if I time for caching nope

00:26:26,370 --> 00:26:30,320
okay so thank you

00:26:33,820 --> 00:26:36,950

YouTube URL: https://www.youtube.com/watch?v=W4Tp_4hLAyE


