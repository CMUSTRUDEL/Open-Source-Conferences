Title: openSUSE Conference 2017 Take me to Leap - a story of Love and Despair
Publication date: 2017-05-28
Playlist: openSUSE Conference 2017
Description: 
	https://media.ccc.de/v/1250-take-me-to-leap-a-story-of-love-and-despair

The journey to bring some packages into the official Distribution

Having a project that builds nicely in OBS is one piece of the story. Taking it into the openSUSE Distribution is a different thing.
On last years oSC the Leap release manager (Ludwig) approached me 'Why dont you bring GNU Health into Leap'? Yes, why not? I liked the idea, but had not enough time to spend for the project. 
When the first RC was announced, we had to speed up....and finally made it!
Up to that point there was a steep learning curve. The presentation will highlight the major steps - and why we still struggle with the update project.
It gives an outlook on the upcoming GNU Health Release as well



Axel Braun
Captions: 
	00:00:08,120 --> 00:00:12,990
okay let's start immediately welcome to

00:00:12,240 --> 00:00:16,529
the talk

00:00:12,990 --> 00:00:19,020
take me to leap I think there was a song

00:00:16,529 --> 00:00:21,660
in the shots for a couple of weeks that

00:00:19,020 --> 00:00:24,810
sounded like similar but it didn't use

00:00:21,660 --> 00:00:26,400
the word leap did use something else the

00:00:24,810 --> 00:00:28,470
subtitle I don't want to mention because

00:00:26,400 --> 00:00:31,050
I think I've seen it similar already in

00:00:28,470 --> 00:00:35,370
this talk and looks like somebody has

00:00:31,050 --> 00:00:38,090
cloned it so what is the talk about the

00:00:35,370 --> 00:00:40,800
process of bringing new health into

00:00:38,090 --> 00:00:44,399
openSUSE leap into the standard

00:00:40,800 --> 00:00:49,770
distribution let me spend a couple of

00:00:44,399 --> 00:00:53,750
words about leap about new health before

00:00:49,770 --> 00:00:53,750
hand what does it not work anymore

00:00:53,840 --> 00:01:01,260
okay so let's take a look at a couple of

00:00:57,750 --> 00:01:04,350
figures eighty percent of the diseases

00:01:01,260 --> 00:01:07,820
in low and medium income countries are

00:01:04,350 --> 00:01:11,310
due to poor sanitation and unsafe water

00:01:07,820 --> 00:01:13,590
so says the United Nations so what does

00:01:11,310 --> 00:01:15,540
it mean everybody of us is used to just

00:01:13,590 --> 00:01:18,509
open the tap and you get clean water out

00:01:15,540 --> 00:01:21,900
of it that you can drink immediately if

00:01:18,509 --> 00:01:24,600
you look a little bit further south you

00:01:21,900 --> 00:01:27,720
get clean water as well but drinking

00:01:24,600 --> 00:01:30,150
quality mmm I don't even know if you go

00:01:27,720 --> 00:01:34,439
even further south to Africa you have a

00:01:30,150 --> 00:01:36,960
few chaps of course maybe a well where

00:01:34,439 --> 00:01:38,850
you can take some water from but mostly

00:01:36,960 --> 00:01:41,759
the people have to use to restrict water

00:01:38,850 --> 00:01:45,119
and it is to restrict water can be all

00:01:41,759 --> 00:01:48,299
kind of and a true sense of the

00:01:45,119 --> 00:01:51,990
word there may be used as toilet

00:01:48,299 --> 00:01:54,060
somewhere upstream it may be used by

00:01:51,990 --> 00:01:58,049
some contaminated water from the

00:01:54,060 --> 00:02:00,810
industry so the situation there is

00:01:58,049 --> 00:02:03,540
difficult this causes disease and the

00:02:00,810 --> 00:02:06,719
root cause of this disease is not a

00:02:03,540 --> 00:02:09,439
viral or a biological thing it's a

00:02:06,719 --> 00:02:09,439
social thing

00:02:09,750 --> 00:02:16,510
looking at some more pictures we have

00:02:13,660 --> 00:02:19,360
about 20,000 children dying each day

00:02:16,510 --> 00:02:22,209
from social diseases contaminated water

00:02:19,360 --> 00:02:24,190
is one of them we have a couple of

00:02:22,209 --> 00:02:27,550
others like human trafficking and

00:02:24,190 --> 00:02:31,230
prostitution some malnutrition or

00:02:27,550 --> 00:02:33,970
diseases that caused by poor sanitary

00:02:31,230 --> 00:02:37,959
conditions malnutrition and everything

00:02:33,970 --> 00:02:44,470
like cholera drug abuse and so on war is

00:02:37,959 --> 00:02:47,440
a very big business their abilities of

00:02:44,470 --> 00:02:49,810
dollar spent each year on war technology

00:02:47,440 --> 00:02:52,239
and every now and then this technology

00:02:49,810 --> 00:02:55,810
has to be to be used so let's take a

00:02:52,239 --> 00:02:58,480
look for example at Libya where we have

00:02:55,810 --> 00:03:02,130
a necessary not Libya Syria where we

00:02:58,480 --> 00:03:06,610
have a dictator who's back up by a

00:03:02,130 --> 00:03:11,860
flawless Russian Democrat as one of our

00:03:06,610 --> 00:03:14,350
former Chancellor set so they are having

00:03:11,860 --> 00:03:16,389
a fight a war against their own people I

00:03:14,350 --> 00:03:19,239
mean the guys on the other hand the

00:03:16,389 --> 00:03:21,569
rebels are not pure Democrats as well so

00:03:19,239 --> 00:03:26,019
they are also thinking about in

00:03:21,569 --> 00:03:28,209
establishing an Islamic state but the

00:03:26,019 --> 00:03:31,000
problem the real problem behind this is

00:03:28,209 --> 00:03:34,209
the population is taking the damage from

00:03:31,000 --> 00:03:36,250
it so the population moves out not to be

00:03:34,209 --> 00:03:38,799
killed by bombs and all kind of terror

00:03:36,250 --> 00:03:40,209
so for whatever reason they don't want

00:03:38,799 --> 00:03:43,299
to go to Saudi Arabia for example

00:03:40,209 --> 00:03:45,100
they're coming to Europe so the European

00:03:43,299 --> 00:03:48,220
community decided okay we're going to

00:03:45,100 --> 00:03:53,380
help them at least some countries helped

00:03:48,220 --> 00:03:55,389
some others take the European idea just

00:03:53,380 --> 00:03:58,930
serious if they can get money from them

00:03:55,389 --> 00:04:01,030
like France and Hungary so many of the

00:03:58,930 --> 00:04:03,489
refugees are getting stuck at some

00:04:01,030 --> 00:04:06,130
border they're living there under really

00:04:03,489 --> 00:04:08,620
bad conditions they have to do camping

00:04:06,130 --> 00:04:12,549
for example in the winter they don't

00:04:08,620 --> 00:04:14,950
have any sanitary or clear water supply

00:04:12,549 --> 00:04:16,120
and this causes even more problems for

00:04:14,950 --> 00:04:19,889
them

00:04:16,120 --> 00:04:22,840
so if we want to address this with a

00:04:19,889 --> 00:04:25,600
system then we make sure need to make

00:04:22,840 --> 00:04:27,760
sure that the root causes for most of

00:04:25,600 --> 00:04:30,040
the problems are addressed and they are

00:04:27,760 --> 00:04:32,440
not in a medical they're in a social

00:04:30,040 --> 00:04:35,740
sector this is the reason why new health

00:04:32,440 --> 00:04:39,160
sees themself in the first glance as a

00:04:35,740 --> 00:04:42,910
social project as a social project that

00:04:39,160 --> 00:04:44,860
uses technology to help the people so if

00:04:42,910 --> 00:04:47,260
you're looking around in the area of

00:04:44,860 --> 00:04:50,740
Health and Hospital information systems

00:04:47,260 --> 00:04:54,280
you find a kind of system of disease as

00:04:50,740 --> 00:04:57,610
we call it because those projects or

00:04:54,280 --> 00:04:59,860
those software look at the people when

00:04:57,610 --> 00:05:01,690
they come into a hospital then you're a

00:04:59,860 --> 00:05:04,150
patient you're ill you're getting

00:05:01,690 --> 00:05:06,400
examine ated you're getting medication

00:05:04,150 --> 00:05:09,250
you're getting aftercare and you send

00:05:06,400 --> 00:05:11,440
out again you know health wants to

00:05:09,250 --> 00:05:13,539
change this in this way that we're

00:05:11,440 --> 00:05:16,150
turning this into a system of health

00:05:13,539 --> 00:05:18,460
that means we're looking already earlier

00:05:16,150 --> 00:05:21,220
at the individual so we're looking at

00:05:18,460 --> 00:05:23,800
his lifestyle where does he live how

00:05:21,220 --> 00:05:24,610
does he live in which community does he

00:05:23,800 --> 00:05:27,610
have a family

00:05:24,610 --> 00:05:29,950
how is this housing built up does he

00:05:27,610 --> 00:05:32,470
have the suffer from a certain social

00:05:29,950 --> 00:05:36,220
disease or something like that so we are

00:05:32,470 --> 00:05:43,050
proactively working on the on the

00:05:36,220 --> 00:05:45,060
community health to address the

00:05:43,050 --> 00:05:47,300
new hands there's a couple of functional

00:05:45,060 --> 00:05:50,460
areas there's a little bit of it and

00:05:47,300 --> 00:05:53,280
basically for everybody this first of

00:05:50,460 --> 00:05:55,470
all the area that addresses the person

00:05:53,280 --> 00:05:58,259
and community like the family

00:05:55,470 --> 00:06:01,110
relationships like the housing like the

00:05:58,259 --> 00:06:05,159
social environment then of course we

00:06:01,110 --> 00:06:08,250
also have the classical the classical

00:06:05,159 --> 00:06:10,680
parts that a health system has like an

00:06:08,250 --> 00:06:14,630
electronic medical record we have

00:06:10,680 --> 00:06:18,360
patient evaluations we have genetics

00:06:14,630 --> 00:06:21,509
prescriptions history and so on then we

00:06:18,360 --> 00:06:24,240
have two areas for the health Cintas two

00:06:21,509 --> 00:06:26,909
institution management that means not

00:06:24,240 --> 00:06:29,580
necessarily for health professional or a

00:06:26,909 --> 00:06:31,860
practitioner but it can be for a

00:06:29,580 --> 00:06:34,229
hospital for example so you're having

00:06:31,860 --> 00:06:36,810
all the functionalities that you need

00:06:34,229 --> 00:06:40,319
starting from financial accounting human

00:06:36,810 --> 00:06:43,949
resource supply chain management stock

00:06:40,319 --> 00:06:46,530
keeping for your drugs and so on

00:06:43,949 --> 00:06:48,659
and in the end of the day we have as

00:06:46,530 --> 00:06:51,090
well a part that can be used by the

00:06:48,659 --> 00:06:53,699
health authorities respectively the

00:06:51,090 --> 00:06:59,610
Ministry of Health to run health

00:06:53,699 --> 00:07:04,860
campaigns epidemiology analysis and so

00:06:59,610 --> 00:07:07,289
on important in this context is that new

00:07:04,860 --> 00:07:10,169
health is completely free software that

00:07:07,289 --> 00:07:13,110
means it gives you the four freedoms to

00:07:10,169 --> 00:07:16,050
run the software to distribute it to

00:07:13,110 --> 00:07:18,509
analyze and modify it and to

00:07:16,050 --> 00:07:24,180
redistribute the modified version of it

00:07:18,509 --> 00:07:24,539
so that's why looks like my battery is

00:07:24,180 --> 00:07:28,080
gone

00:07:24,539 --> 00:07:31,409
okay preferred platforms for it

00:07:28,080 --> 00:07:34,529
of course Linux and FreeBSD for the most

00:07:31,409 --> 00:07:37,740
part PostgreSQL is used as database

00:07:34,529 --> 00:07:40,349
management system LibreOffice for the

00:07:37,740 --> 00:07:44,250
document output the hood story is

00:07:40,349 --> 00:07:47,539
written in Python we're using GNU PG for

00:07:44,250 --> 00:07:50,330
example to electronically sign

00:07:47,539 --> 00:07:53,350
prescriptions or documents like birth

00:07:50,330 --> 00:07:55,900
certificates or something like that

00:07:53,350 --> 00:07:59,500
and the ERP platform underneath is

00:07:55,900 --> 00:08:05,110
Triton I come to triton a little bit

00:07:59,500 --> 00:08:07,270
more in detail so now the real story

00:08:05,110 --> 00:08:09,460
start it was just the background about

00:08:07,270 --> 00:08:11,950
new health and I could even tell you a

00:08:09,460 --> 00:08:14,940
little bit more about that but I think

00:08:11,950 --> 00:08:19,240
we're a little bit short in time already

00:08:14,940 --> 00:08:22,090
so what is the development process for

00:08:19,240 --> 00:08:23,920
openSUSE leap I think most of you who

00:08:22,090 --> 00:08:26,440
have followed the speeches here in the

00:08:23,920 --> 00:08:29,710
big hall have already seen this picture

00:08:26,440 --> 00:08:31,890
so we have two ways first of all the

00:08:29,710 --> 00:08:35,070
part coming from the Linux Enterprise

00:08:31,890 --> 00:08:38,919
distribution combining this with

00:08:35,070 --> 00:08:40,690
packages coming from tumbleweed so as

00:08:38,919 --> 00:08:43,900
we're not in Slee we have to go the

00:08:40,690 --> 00:08:46,300
other way round and we're coming in via

00:08:43,900 --> 00:08:49,600
tumbleweed respectively community

00:08:46,300 --> 00:08:51,250
distributions normally a development

00:08:49,600 --> 00:08:54,520
process isn't that way that you have a

00:08:51,250 --> 00:08:57,130
source you build it locally it works you

00:08:54,520 --> 00:08:59,020
submit it to a development project from

00:08:57,130 --> 00:09:02,860
the development project it's going into

00:08:59,020 --> 00:09:05,560
a factory open QA review great tool and

00:09:02,860 --> 00:09:10,840
from there it will end up in tumbleweed

00:09:05,560 --> 00:09:15,160
and the rolling release so let's take a

00:09:10,840 --> 00:09:19,060
look at the base system Triton Triton is

00:09:15,160 --> 00:09:21,580
an ERP framework EA P stands for

00:09:19,060 --> 00:09:23,860
enterprise resource planning user

00:09:21,580 --> 00:09:27,460
basically let's call it the operating

00:09:23,860 --> 00:09:31,030
system for a company it was forked about

00:09:27,460 --> 00:09:34,300
ten years ago from open ERP which is

00:09:31,030 --> 00:09:38,140
nowadays called Ojo because the main

00:09:34,300 --> 00:09:40,990
developer found it was not as open as it

00:09:38,140 --> 00:09:42,270
should be and technology wise they could

00:09:40,990 --> 00:09:45,880
have done better

00:09:42,270 --> 00:09:49,090
so the first versions we've packed on

00:09:45,880 --> 00:09:52,600
open SUSE on the build server where the

00:09:49,090 --> 00:09:56,500
2.8 versions so that was already a

00:09:52,600 --> 00:10:00,040
couple of years ago at the moment the

00:09:56,500 --> 00:10:03,130
triton community maintains about I think

00:10:00,040 --> 00:10:07,870
six releases actively

00:10:03,130 --> 00:10:10,870
that means from 3.4 to the current 4.4

00:10:07,870 --> 00:10:14,200
release and a monthly cycle updates are

00:10:10,870 --> 00:10:17,830
provided so the number of packages and

00:10:14,200 --> 00:10:21,520
the repository has also permanently

00:10:17,830 --> 00:10:24,100
increased so in 3.4 we had about 85

00:10:21,520 --> 00:10:27,520
packages package means this is the

00:10:24,100 --> 00:10:31,210
server this is a client at the gtk based

00:10:27,520 --> 00:10:34,540
front-end or we have also a web

00:10:31,210 --> 00:10:37,870
front-end plus around 80 functional

00:10:34,540 --> 00:10:42,520
modules the number of modules increased

00:10:37,870 --> 00:10:45,250
a little bit from 4.2 to 4.4 it looks

00:10:42,520 --> 00:10:48,010
stable in fact it isn't there were a

00:10:45,250 --> 00:10:51,120
couple of packages dropped and a couple

00:10:48,010 --> 00:10:55,360
of other functional packages came in

00:10:51,120 --> 00:10:59,580
with release four we had a technology

00:10:55,360 --> 00:11:02,740
change release four was about a year ago

00:10:59,580 --> 00:11:07,660
from there the whole development was

00:11:02,740 --> 00:11:14,710
done in Python 3 and new health sits on

00:11:07,660 --> 00:11:19,630
top of Triton so in version 3.4 we had a

00:11:14,710 --> 00:11:24,120
new health release 2.8 in 3.8 we have a

00:11:19,630 --> 00:11:28,960
new health release 3.0 so on last year's

00:11:24,120 --> 00:11:31,780
openSUSE conference 3.8 was the most

00:11:28,960 --> 00:11:34,270
actual release at the moment the work is

00:11:31,780 --> 00:11:37,210
ongoing on three point two new health

00:11:34,270 --> 00:11:43,270
and it's expected to be released by the

00:11:37,210 --> 00:11:46,210
beginning of next month so if we look at

00:11:43,270 --> 00:11:48,970
it our first idea is how do we

00:11:46,210 --> 00:11:53,580
consolidate it so new health is sitting

00:11:48,970 --> 00:11:56,800
on top of Triton 3.8 so we had already

00:11:53,580 --> 00:12:01,840
paths in the open build service which we

00:11:56,800 --> 00:12:05,110
make use for for example to build the to

00:12:01,840 --> 00:12:07,570
build a live CD a CD that you can put

00:12:05,110 --> 00:12:11,100
into your computer it puts up

00:12:07,570 --> 00:12:13,920
openSUSE and it fires up

00:12:11,100 --> 00:12:16,110
completely running a new health system

00:12:13,920 --> 00:12:19,010
with demo database with icd-10

00:12:16,110 --> 00:12:23,130
classification and everything else

00:12:19,010 --> 00:12:26,280
so this Triton sits itself on Devil

00:12:23,130 --> 00:12:29,370
languages Python but linking the whole

00:12:26,280 --> 00:12:32,520
development repository is not an option

00:12:29,370 --> 00:12:35,340
so what we needed to do is to find out

00:12:32,520 --> 00:12:37,470
which Python packages are not yet and

00:12:35,340 --> 00:12:40,680
open zoo the either leave or tumbleweed

00:12:37,470 --> 00:12:43,260
submit them first of all then we need to

00:12:40,680 --> 00:12:46,230
make sure that the modules that we need

00:12:43,260 --> 00:12:50,250
it for new health are available in

00:12:46,230 --> 00:12:55,610
factory as well and as last package new

00:12:50,250 --> 00:13:01,020
health itself made it into the way to

00:12:55,610 --> 00:13:04,320
factory so first of all is from where do

00:13:01,020 --> 00:13:08,820
we submit because we need a development

00:13:04,320 --> 00:13:12,000
project that is registered to work or to

00:13:08,820 --> 00:13:14,700
submit something into factory so as

00:13:12,000 --> 00:13:16,860
you've seen we have various versions in

00:13:14,700 --> 00:13:20,280
parallels so it would not be a real good

00:13:16,860 --> 00:13:23,970
idea to put all these packages into a

00:13:20,280 --> 00:13:26,760
devil languages Python for example so

00:13:23,970 --> 00:13:31,040
the decision was taken that we build a

00:13:26,760 --> 00:13:34,500
dedicated repository called ERP

00:13:31,040 --> 00:13:37,530
application ERP each writen factory so

00:13:34,500 --> 00:13:41,460
there was a little pull request in get

00:13:37,530 --> 00:13:44,460
and after some weeks we had the

00:13:41,460 --> 00:13:47,570
submission repository and we're allowed

00:13:44,460 --> 00:13:51,440
to submit from there into a factory so

00:13:47,570 --> 00:13:54,330
quite enthusiastic about that submit

00:13:51,440 --> 00:13:56,220
submit request and you know if you play

00:13:54,330 --> 00:13:58,020
tennis and you hit the ball the ball

00:13:56,220 --> 00:13:59,040
against the wall it immediately came

00:13:58,020 --> 00:14:03,120
back into my inbox

00:13:59,040 --> 00:14:06,480
of course the maintenance of OBS have a

00:14:03,120 --> 00:14:10,170
couple of rules that we need to apply so

00:14:06,480 --> 00:14:12,420
before we do the first submit to factory

00:14:10,170 --> 00:14:15,120
we need to make sure that we follow the

00:14:12,420 --> 00:14:17,370
packaging guidelines that a spec file is

00:14:15,120 --> 00:14:19,500
according to standard there is a nice

00:14:17,370 --> 00:14:22,950
little tool for that called the spec

00:14:19,500 --> 00:14:23,520
file cleaner but you need to make sure

00:14:22,950 --> 00:14:29,270
that

00:14:23,520 --> 00:14:31,500
doesn't break your scripts for example

00:14:29,270 --> 00:14:33,690
then we need to make sure that we're

00:14:31,500 --> 00:14:36,240
making use proper use of packaging

00:14:33,690 --> 00:14:38,010
macros so if we have system services

00:14:36,240 --> 00:14:40,590
that we need to install there's a macro

00:14:38,010 --> 00:14:44,430
for if we have to update desktop files

00:14:40,590 --> 00:14:46,350
for example for the gtk client there is

00:14:44,430 --> 00:14:48,750
a macro for it we need to make sure that

00:14:46,350 --> 00:14:52,020
this is a video available that means

00:14:48,750 --> 00:14:55,920
trigger the Refresh of the I concur

00:14:52,020 --> 00:14:58,890
I can cache each packet needs to have a

00:14:55,920 --> 00:15:01,370
verbose description did we have a

00:14:58,890 --> 00:15:04,200
discussion in factory recently about

00:15:01,370 --> 00:15:06,240
documentation of packaging something

00:15:04,200 --> 00:15:08,760
like a dot in the ends not relevant

00:15:06,240 --> 00:15:12,210
I wanted to comment on that further but

00:15:08,760 --> 00:15:14,310
nevertheless in the first glance I have

00:15:12,210 --> 00:15:17,100
to admit our package description was not

00:15:14,310 --> 00:15:19,650
really well but some gentleman from the

00:15:17,100 --> 00:15:23,070
community helped you currently so it's

00:15:19,650 --> 00:15:24,780
looking much better now so then we have

00:15:23,070 --> 00:15:27,090
to follow packaging security like

00:15:24,780 --> 00:15:29,730
guidelines in which directories are we

00:15:27,090 --> 00:15:31,830
allowed to write we need to make sure

00:15:29,730 --> 00:15:34,740
that the package of sources can be

00:15:31,830 --> 00:15:36,900
validated there are special Python

00:15:34,740 --> 00:15:40,080
packaging guidelines there has to be a

00:15:36,900 --> 00:15:43,500
license file in there and I'm sure I

00:15:40,080 --> 00:15:46,200
forget the one or the other thing so

00:15:43,500 --> 00:15:48,090
after we've done that for example here

00:15:46,200 --> 00:15:50,490
an example the spec file cleaner

00:15:48,090 --> 00:15:53,910
how does it look before on the left side

00:15:50,490 --> 00:15:57,180
how it does it look on the afterwards on

00:15:53,910 --> 00:15:59,190
the right side I mean if you're yourself

00:15:57,180 --> 00:16:01,410
to maintain it doesn't really care but

00:15:59,190 --> 00:16:04,140
if somebody else wants to help you it's

00:16:01,410 --> 00:16:06,300
really a nice guest sure that you have

00:16:04,140 --> 00:16:08,850
the spec file cleaned up otherwise this

00:16:06,300 --> 00:16:13,050
mess on the left-hand side would have

00:16:08,850 --> 00:16:17,500
not been accepted into factory

00:16:13,050 --> 00:16:21,660
so once we then submit a new package

00:16:17,500 --> 00:16:24,430
then a lengthy review process take place

00:16:21,660 --> 00:16:31,750
here on the right side I just picked out

00:16:24,430 --> 00:16:34,600
one of the many submit histories and you

00:16:31,750 --> 00:16:38,050
can roughly see that there are many

00:16:34,600 --> 00:16:40,300
different eyes involved so there are a

00:16:38,050 --> 00:16:43,990
couple of bots for automated checks they

00:16:40,300 --> 00:16:48,010
are checking where does the source come

00:16:43,990 --> 00:16:51,250
from is this a just the URL that you

00:16:48,010 --> 00:16:54,100
specified in the spec file really work

00:16:51,250 --> 00:16:57,120
it shakes the builds result there is an

00:16:54,100 --> 00:16:59,890
automated check for the license string

00:16:57,120 --> 00:17:02,200
there is a factor repository checker

00:16:59,890 --> 00:17:05,860
that was the thing I discussed before so

00:17:02,200 --> 00:17:08,970
thus the submission come from a trusted

00:17:05,860 --> 00:17:12,040
development package so after this is

00:17:08,970 --> 00:17:14,380
passed which takes you usually a couple

00:17:12,040 --> 00:17:17,440
of submissions doesn't work in the first

00:17:14,380 --> 00:17:20,230
glance it is a very it is assigned to an

00:17:17,440 --> 00:17:23,020
evaluation project and then we have a

00:17:20,230 --> 00:17:26,800
peer review for eyes principal by at

00:17:23,020 --> 00:17:30,160
least two maintainer and not to forget a

00:17:26,800 --> 00:17:32,800
legal review by a counselor to make sure

00:17:30,160 --> 00:17:37,810
that this is really free software that

00:17:32,800 --> 00:17:41,050
we are building on the OBS so after that

00:17:37,810 --> 00:17:42,370
is done we have the first build and that

00:17:41,050 --> 00:17:44,950
was great

00:17:42,370 --> 00:17:49,780
thanks by the way Ludwig was really

00:17:44,950 --> 00:17:52,300
helpful on bringing us onto the road so

00:17:49,780 --> 00:17:57,250
now we come to the despair part and it

00:17:52,300 --> 00:17:59,560
was the submission of updates we have a

00:17:57,250 --> 00:18:02,170
maintenance policy as well and the

00:17:59,560 --> 00:18:05,410
maintenance policies set every Bugzilla

00:18:02,170 --> 00:18:10,500
entry or every update that you're

00:18:05,410 --> 00:18:13,570
submitting requires a buck Scylla entry

00:18:10,500 --> 00:18:15,820
you need to maintain as well some

00:18:13,570 --> 00:18:20,580
documentation in the changes file and

00:18:15,820 --> 00:18:23,260
here we are mostly depending on the

00:18:20,580 --> 00:18:25,450
documentation that the project provides

00:18:23,260 --> 00:18:26,200
for example the one that we're getting

00:18:25,450 --> 00:18:28,980
from the

00:18:26,200 --> 00:18:32,890
new Health Project itself is quite nice

00:18:28,980 --> 00:18:34,810
but the programmers of Triton who are

00:18:32,890 --> 00:18:36,820
really good guys they're really great

00:18:34,810 --> 00:18:38,710
programmers but as many great

00:18:36,820 --> 00:18:42,070
programmers they are not really keen on

00:18:38,710 --> 00:18:44,410
writing documentation so their change

00:18:42,070 --> 00:18:48,010
entry is just yeah see the mercurial

00:18:44,410 --> 00:18:49,990
lock for details and this makes life a

00:18:48,010 --> 00:18:55,180
little bit harder so we've discussed

00:18:49,990 --> 00:19:01,920
this with the source packages but yeah

00:18:55,180 --> 00:19:06,160
we have to find a way around it one buck

00:19:01,920 --> 00:19:09,040
for one submission so if we remember the

00:19:06,160 --> 00:19:13,180
structure here we have an average about

00:19:09,040 --> 00:19:16,000
hundred packages per repository that

00:19:13,180 --> 00:19:18,130
means 600 packages that have to be

00:19:16,000 --> 00:19:21,040
checked on a regular monthly basis

00:19:18,130 --> 00:19:22,810
whether there are updates or not of

00:19:21,040 --> 00:19:26,050
course I'm not doing this manually I

00:19:22,810 --> 00:19:28,150
will build some scripts for that but if

00:19:26,050 --> 00:19:30,730
we're just looking at the relevant

00:19:28,150 --> 00:19:36,070
packages here in the 3.8 tree

00:19:30,730 --> 00:19:44,620
we have about 110 we use about 20 or 30

00:19:36,070 --> 00:19:46,450
for for new health and yeah the problem

00:19:44,620 --> 00:19:49,560
was really do we really need one buck

00:19:46,450 --> 00:19:52,480
for each upgrade because in a monthly

00:19:49,560 --> 00:19:55,210
cycle we're getting functional updates

00:19:52,480 --> 00:19:57,910
smaller bug fixes and every now and then

00:19:55,210 --> 00:20:00,520
a security update as well so the

00:19:57,910 --> 00:20:03,550
question was how do other projects deal

00:20:00,520 --> 00:20:07,980
with that and talk to Ludwig on that

00:20:03,550 --> 00:20:12,520
again and I think we have a way forward

00:20:07,980 --> 00:20:14,860
so now great news to come sounds a

00:20:12,520 --> 00:20:16,810
little bit like click paging yeah but

00:20:14,860 --> 00:20:20,590
actually I don't have to do that you're

00:20:16,810 --> 00:20:25,330
already here so what have we achieved I

00:20:20,590 --> 00:20:29,920
think openSUSE is the best distribution

00:20:25,330 --> 00:20:32,470
to run new health on why if you think

00:20:29,920 --> 00:20:34,270
about not at the Ministry of Health they

00:20:32,470 --> 00:20:37,480
have some stuff who could do that thing

00:20:34,270 --> 00:20:39,970
if you think about a hospital for

00:20:37,480 --> 00:20:42,010
example they usually also have some

00:20:39,970 --> 00:20:44,200
technical people but if you think about

00:20:42,010 --> 00:20:47,590
a health professional or practitioner

00:20:44,200 --> 00:20:49,390
these are mostly non-technical people so

00:20:47,590 --> 00:20:52,090
we have to make it simple nice and

00:20:49,390 --> 00:20:55,240
stupid for them to install a software

00:20:52,090 --> 00:20:57,760
like new health and here we have the

00:20:55,240 --> 00:21:01,330
one-click install that makes it really

00:20:57,760 --> 00:21:03,340
easy for them to install a complete new

00:21:01,330 --> 00:21:06,250
health package with just a single click

00:21:03,340 --> 00:21:08,410
and to set up behind it it's also quite

00:21:06,250 --> 00:21:11,190
easy I mean you could read the fine

00:21:08,410 --> 00:21:14,710
manual for that but you can also watch a

00:21:11,190 --> 00:21:17,140
little video on YouTube that we've

00:21:14,710 --> 00:21:19,570
prepared so after you've installed it

00:21:17,140 --> 00:21:22,030
there are I think five or six additional

00:21:19,570 --> 00:21:24,220
activities to set up the database and

00:21:22,030 --> 00:21:28,090
then you got it running you have a full

00:21:24,220 --> 00:21:30,520
integration in to system D for security

00:21:28,090 --> 00:21:32,320
reasons we've segregated to services

00:21:30,520 --> 00:21:36,760
that means not everything is running

00:21:32,320 --> 00:21:38,790
under one user you get updates via your

00:21:36,760 --> 00:21:41,880
usual package management system like

00:21:38,790 --> 00:21:44,560
SEPA for example there is some special

00:21:41,880 --> 00:21:48,330
documentation to run new health on

00:21:44,560 --> 00:21:52,720
openSUSE a new health comes also with a

00:21:48,330 --> 00:21:55,960
script called new health control this is

00:21:52,720 --> 00:22:00,040
intended if you're updating or if you

00:21:55,960 --> 00:22:02,110
are installing new health from sores to

00:22:00,040 --> 00:22:04,600
keep your system up-to-date actually I

00:22:02,110 --> 00:22:06,610
always had my problems with building new

00:22:04,600 --> 00:22:08,770
health from sauce because you always

00:22:06,610 --> 00:22:10,300
have a dependency that does not fit so

00:22:08,770 --> 00:22:13,900
it's much easier if you really do it

00:22:10,300 --> 00:22:15,940
from the package management and if

00:22:13,900 --> 00:22:18,880
you're looking to install a web client

00:22:15,940 --> 00:22:23,530
which is called sow and additional

00:22:18,880 --> 00:22:30,220
packages these are kept in your original

00:22:23,530 --> 00:22:32,740
repository erp triton 3.8 so how did we

00:22:30,220 --> 00:22:35,350
achieve this I think basically two

00:22:32,740 --> 00:22:37,060
things first of all a great community

00:22:35,350 --> 00:22:39,220
this is you guys over here

00:22:37,060 --> 00:22:42,940
who everybody did the bits of piece for

00:22:39,220 --> 00:22:46,120
that and openSUSE has to my opinion the

00:22:42,940 --> 00:22:48,670
best tools to manage an application like

00:22:46,120 --> 00:22:51,220
this you know we've heard a lot about

00:22:48,670 --> 00:22:52,390
the open build service so the whole

00:22:51,220 --> 00:22:54,610
development

00:22:52,390 --> 00:22:57,190
records around the build service it

00:22:54,610 --> 00:22:59,740
interacts with the open QA to make sure

00:22:57,190 --> 00:23:02,790
the quality fits there is a project

00:22:59,740 --> 00:23:05,770
called machinery which you could use to

00:23:02,790 --> 00:23:07,960
to analyze running systems you can

00:23:05,770 --> 00:23:09,610
export a kiva file from that and I'll

00:23:07,960 --> 00:23:13,660
from there or from the build service

00:23:09,610 --> 00:23:17,290
itself you can put it into studio we've

00:23:13,660 --> 00:23:21,550
used studio to provide images for USB

00:23:17,290 --> 00:23:24,610
stick for a virtual VirtualBox for

00:23:21,550 --> 00:23:28,170
example or for a CD where you have a

00:23:24,610 --> 00:23:32,410
ready to run version of new health on it

00:23:28,170 --> 00:23:34,770
unfortunately so the studio Sheen seems

00:23:32,410 --> 00:23:37,300
not to be maintained anymore really

00:23:34,770 --> 00:23:40,150
actively and the feeling is that there's

00:23:37,300 --> 00:23:41,950
a little bit kind of in the hospice

00:23:40,150 --> 00:23:44,590
already and close to death this is a

00:23:41,950 --> 00:23:48,750
pity to be honest because I think it was

00:23:44,590 --> 00:23:51,840
a great tool where you kept with a

00:23:48,750 --> 00:23:54,010
reasonably lower level of knowledge

00:23:51,840 --> 00:23:57,820
achieved something that you could also

00:23:54,010 --> 00:24:00,430
achieve with TV for example and it's the

00:23:57,820 --> 00:24:03,280
result is something great and this great

00:24:00,430 --> 00:24:05,770
is to my understanding also a small

00:24:03,280 --> 00:24:09,040
thing so I feel a little Raspberry Pi

00:24:05,770 --> 00:24:10,960
with a nice logo on it it was dedicated

00:24:09,040 --> 00:24:14,560
from Zuza for the new Health Project

00:24:10,960 --> 00:24:16,810
thanks again for that and this little

00:24:14,560 --> 00:24:19,120
recipe pie runs a full health and

00:24:16,810 --> 00:24:21,970
hospital information system with a demo

00:24:19,120 --> 00:24:25,030
database on it so when I think this

00:24:21,970 --> 00:24:27,310
could really be a game-changer in the

00:24:25,030 --> 00:24:30,070
healthcare industry because this is a

00:24:27,310 --> 00:24:33,010
reasonably shot cheap hardware it can be

00:24:30,070 --> 00:24:35,680
pre-installed and it can be supplied to

00:24:33,010 --> 00:24:38,230
persons abroad who have hardly any or no

00:24:35,680 --> 00:24:40,480
internet access we have one community

00:24:38,230 --> 00:24:43,360
guy working in Africa so you see him

00:24:40,480 --> 00:24:46,240
only every once a week on the internet

00:24:43,360 --> 00:24:49,080
because if he's somewhere round they

00:24:46,240 --> 00:24:52,420
mostly don't have any connection

00:24:49,080 --> 00:24:54,070
so these raspberry PI's are used for

00:24:52,420 --> 00:24:56,950
development we made a couple of

00:24:54,070 --> 00:25:01,330
screenshots here so you can see it

00:24:56,950 --> 00:25:03,520
contains a full openSUSE leap uses a

00:25:01,330 --> 00:25:08,500
graphical interface enlightenment

00:25:03,520 --> 00:25:14,110
desktop and runs the full you do have

00:25:08,500 --> 00:25:16,179
package on it so what's coming next in

00:25:14,110 --> 00:25:20,950
the new health arena we will stay small

00:25:16,179 --> 00:25:23,340
and develop a mobile application called

00:25:20,950 --> 00:25:27,460
mic new health it's a personal health

00:25:23,340 --> 00:25:29,350
record that allows you to update or to

00:25:27,460 --> 00:25:31,809
keep your demo your demographics

00:25:29,350 --> 00:25:35,460
information to maintain appointments

00:25:31,809 --> 00:25:38,620
with doctors also to get a telemedical

00:25:35,460 --> 00:25:41,080
approach on it you can keep various

00:25:38,620 --> 00:25:44,140
information about it like for example

00:25:41,080 --> 00:25:47,290
your body mass index your exercises how

00:25:44,140 --> 00:25:50,140
are your vitals and so on

00:25:47,290 --> 00:25:52,510
unlike other fitness trackers your data

00:25:50,140 --> 00:25:58,000
will not be sold to a third party

00:25:52,510 --> 00:26:01,660
needless to say my new health is built

00:25:58,000 --> 00:26:04,120
on QT that means in the same run we do

00:26:01,660 --> 00:26:09,850
not just get a mobile application we

00:26:04,120 --> 00:26:14,260
also get a desktop application both of

00:26:09,850 --> 00:26:17,260
them are intended to work with the new

00:26:14,260 --> 00:26:22,929
health Federation server so this is a

00:26:17,260 --> 00:26:25,870
new model or a new infrastructure that

00:26:22,929 --> 00:26:31,740
is currently being built on it's built

00:26:25,870 --> 00:26:35,740
on top of the MongoDB and it provides

00:26:31,740 --> 00:26:39,070
distributed data collection it will bind

00:26:35,740 --> 00:26:40,809
together all the different parts so the

00:26:39,070 --> 00:26:44,559
social parts for example being

00:26:40,809 --> 00:26:47,250
implemented by social workers it can be

00:26:44,559 --> 00:26:49,720
updated from health authorities

00:26:47,250 --> 00:26:53,470
respectively the hospital each

00:26:49,720 --> 00:26:55,650
individual to share his data and

00:26:53,470 --> 00:26:58,929
[Music]

00:26:55,650 --> 00:27:02,470
diagnostics with the person he like -

00:26:58,929 --> 00:27:05,039
and last but not least an integration

00:27:02,470 --> 00:27:08,640
inter laboratory information management

00:27:05,039 --> 00:27:13,510
systems this is still under development

00:27:08,640 --> 00:27:18,010
development name is talamo's what

00:27:13,510 --> 00:27:22,450
sensible other thing and we expect this

00:27:18,010 --> 00:27:25,360
to be released later during the year if

00:27:22,450 --> 00:27:28,690
you want to know more more about it join

00:27:25,360 --> 00:27:32,110
us at the new Health Conference 2017 it

00:27:28,690 --> 00:27:34,630
will take place in November in Las

00:27:32,110 --> 00:27:35,950
Palmas de Gran Canaria so the weather

00:27:34,630 --> 00:27:37,659
will still be nice

00:27:35,950 --> 00:27:39,789
there will be friendly people and

00:27:37,659 --> 00:27:42,789
discussions we're also looking for

00:27:39,789 --> 00:27:46,059
contributors so if you're eager to do

00:27:42,789 --> 00:27:49,150
some coding or translations even into

00:27:46,059 --> 00:27:53,980
exotic languages like German feel free

00:27:49,150 --> 00:27:56,049
to contact us thanks for your attendance

00:27:53,980 --> 00:27:58,230
and if you have questions I'm happy to

00:27:56,049 --> 00:27:58,230
answer

00:27:58,710 --> 00:28:07,700
[Applause]

00:28:09,360 --> 00:28:15,850
hello yeah alright so I have two things

00:28:13,420 --> 00:28:17,110
to say I mean first thanks for all

00:28:15,850 --> 00:28:19,900
you're doing with this you know

00:28:17,110 --> 00:28:20,410
everything you've you're doing with G

00:28:19,900 --> 00:28:23,140
new health

00:28:20,410 --> 00:28:25,180
openSUSE it's it's a wonderful example

00:28:23,140 --> 00:28:27,610
of what I think the openSUSE project

00:28:25,180 --> 00:28:30,310
should be apart for and you know you're

00:28:27,610 --> 00:28:34,060
an example in a role model for you know

00:28:30,310 --> 00:28:36,510
hopefully more things to come one extra

00:28:34,060 --> 00:28:38,770
thing just to add with the Suzy studio

00:28:36,510 --> 00:28:41,980
if you look at some of the changes being

00:28:38,770 --> 00:28:43,210
made to OBS lately a lot of that Kiwi

00:28:41,980 --> 00:28:45,400
integration and the things you're

00:28:43,210 --> 00:28:48,850
looking for finding their way there so

00:28:45,400 --> 00:28:52,420
don't worry too much okay yeah thanks

00:28:48,850 --> 00:28:54,820
Richard as I said the contribution of

00:28:52,420 --> 00:28:57,460
the Sousa community and Sousa was really

00:28:54,820 --> 00:29:00,370
great not in terms of help only but as

00:28:57,460 --> 00:29:02,500
well in providing some hardware that we

00:29:00,370 --> 00:29:05,350
could use we've shown this on some

00:29:02,500 --> 00:29:07,330
medical congresses and it was really a

00:29:05,350 --> 00:29:10,270
great feedback on that and I think this

00:29:07,330 --> 00:29:13,000
was also a recognition that Sousa as a

00:29:10,270 --> 00:29:15,750
solution provider is available on that

00:29:13,000 --> 00:29:15,750
market as well

00:29:17,910 --> 00:29:28,410
any further questions okay okay thank

00:29:24,970 --> 00:29:28,410
you very much have a good conference

00:29:30,780 --> 00:29:32,840

YouTube URL: https://www.youtube.com/watch?v=maKSxDIaoms


