Title: openSUSE Conference 2017  Bridging openSUSE and SLE gap, part deux
Publication date: 2017-05-27
Playlist: openSUSE Conference 2017
Description: 
	https://media.ccc.de/v/1294-bridging-opensuse-and-sle-gap-part-deux

Return of the GNOME, part deux aka the revenge

Last year, we presented the state of openSUSE and SLE and how we were planning to close the gap between the two projects. 

This talk will go into details on how we progressed for the last year, the pro and cons and what we plan for the future.



Frederic Crozat
Captions: 
	00:00:07,880 --> 00:00:18,300
hello so I hope you enjoy the small

00:00:14,519 --> 00:00:20,939
break is they are people in the back you

00:00:18,300 --> 00:00:25,410
can still there are still a lot of seats

00:00:20,939 --> 00:00:26,640
available so let's start so my name is

00:00:25,410 --> 00:00:29,490
federico sir

00:00:26,640 --> 00:00:36,570
oops i notice i forgot to put my name on

00:00:29,490 --> 00:00:38,940
the slide so who have you attended this

00:00:36,570 --> 00:00:43,500
talk last year at openSUSE conference a

00:00:38,940 --> 00:00:48,329
few people a few hands okay so this is

00:00:43,500 --> 00:00:51,719
going to be a ongoing talk I hope every

00:00:48,329 --> 00:00:55,559
every year at open source conference to

00:00:51,719 --> 00:01:00,420
see how we have where we are with open

00:00:55,559 --> 00:01:03,870
to Z and see how we cooperate and how we

00:01:00,420 --> 00:01:08,040
bridge the gap between open shoes and

00:01:03,870 --> 00:01:11,280
Slee so I call this talk the return of

00:01:08,040 --> 00:01:13,740
the know part too big to go because I'm

00:01:11,280 --> 00:01:19,110
French also known as the revenge

00:01:13,740 --> 00:01:23,700
we'll see for the title for next year so

00:01:19,110 --> 00:01:27,229
in the previous episode last year we

00:01:23,700 --> 00:01:33,140
talked about mistakes that were made

00:01:27,229 --> 00:01:37,770
when we worked on Slee 12 I will use the

00:01:33,140 --> 00:01:40,110
Signum environment as the ongoing

00:01:37,770 --> 00:01:43,829
example but then I will expand a bit a

00:01:40,110 --> 00:01:51,930
bit further so firstly 12 if you

00:01:43,829 --> 00:01:53,939
remember so we used gnomes 3 10.3 and we

00:01:51,930 --> 00:01:58,619
 it so we use the version which

00:01:53,939 --> 00:02:03,899
was in an factory back then and we did a

00:01:58,619 --> 00:02:07,789
lot of work on it we did back fixing due

00:02:03,899 --> 00:02:10,770
to bug report from our beta tester we

00:02:07,789 --> 00:02:13,790
developed new feature for instance the

00:02:10,770 --> 00:02:18,319
slick classic mode in dumb shell

00:02:13,790 --> 00:02:23,439
and all of that we never back bought it

00:02:18,319 --> 00:02:26,659
those feature to open to the factory and

00:02:23,439 --> 00:02:30,290
why we did that because we didn't had

00:02:26,659 --> 00:02:33,349
time there was a lot of work for the

00:02:30,290 --> 00:02:35,900
development team at Suzy just to bug fix

00:02:33,349 --> 00:02:39,019
and develop the feature we were

00:02:35,900 --> 00:02:42,500
transitioning from genome to in sleet

00:02:39,019 --> 00:02:46,340
Wesley 11 to be number three and there

00:02:42,500 --> 00:02:48,650
was little time to do the to push

00:02:46,340 --> 00:02:50,420
everything that was done at that time to

00:02:48,650 --> 00:02:54,049
the version in tumbleweed in factory

00:02:50,420 --> 00:02:59,269
even worse at that time the factory was

00:02:54,049 --> 00:03:03,200
already one way one major version beyond

00:02:59,269 --> 00:03:08,090
the version we had in in Slee 12 so we

00:03:03,200 --> 00:03:12,260
factory was already at 3.12 and Slee 12

00:03:08,090 --> 00:03:14,480
was at 3.10 so we said okay we'll do

00:03:12,260 --> 00:03:18,919
that later we'll do that for the next

00:03:14,480 --> 00:03:24,680
service back then slid 12 service back

00:03:18,919 --> 00:03:27,470
one came out so people had time to to do

00:03:24,680 --> 00:03:31,669
what to do bug fixing why because Slee

00:03:27,470 --> 00:03:34,310
12 sp1 as usually when we do a major of

00:03:31,669 --> 00:03:37,310
course stream the first step is back is

00:03:34,310 --> 00:03:39,799
a consolidation release we fixed a lot

00:03:37,310 --> 00:03:44,329
of bugs which we are found and could not

00:03:39,799 --> 00:03:48,859
be fixed in the GA release and people

00:03:44,329 --> 00:03:52,940
were so busy that they didn't push say

00:03:48,859 --> 00:03:58,299
work on factory so the is to be repeated

00:03:52,940 --> 00:03:58,299
again and we said we'll do it later

00:03:59,160 --> 00:04:07,800
but last year we discussed about okay we

00:04:05,160 --> 00:04:11,610
need to fill this gap we need to

00:04:07,800 --> 00:04:15,120
reimburse our technical depth as some

00:04:11,610 --> 00:04:20,130
people say so we wanted to make sure

00:04:15,120 --> 00:04:24,090
that the slee 12 gnome was in sync with

00:04:20,130 --> 00:04:28,530
the open seas of Nome and our ultimate

00:04:24,090 --> 00:04:32,820
goal was to maybe share the same source

00:04:28,530 --> 00:04:39,660
RPM between slee 12 SB 2 and open to the

00:04:32,820 --> 00:04:44,780
leap 42.2 for the genome destined we

00:04:39,660 --> 00:04:46,830
were kind of there for better one but

00:04:44,780 --> 00:04:54,890
not everything was there

00:04:46,830 --> 00:05:00,660
so did we succeed did we wish the goal

00:04:54,890 --> 00:05:08,060
we did we did oh I see Dominic is not

00:05:00,660 --> 00:05:10,850
entirely in agreement with that we had

00:05:08,060 --> 00:05:13,350
300 packages to sync

00:05:10,850 --> 00:05:16,620
there was a lot of discussion between

00:05:13,350 --> 00:05:22,140
the Suzi desktop team and the openSUSE

00:05:16,620 --> 00:05:26,370
chrome team we did some some internal

00:05:22,140 --> 00:05:29,250
tools to help tracking the differences

00:05:26,370 --> 00:05:32,910
between packages so obvious and IBS are

00:05:29,250 --> 00:05:35,490
very useful for that but we we needed a

00:05:32,910 --> 00:05:37,530
way to to present that to developer so

00:05:35,490 --> 00:05:39,420
that can easily spot oh I have these

00:05:37,530 --> 00:05:44,700
packages which is not in sync between

00:05:39,420 --> 00:05:47,850
the two code stream we also had some

00:05:44,700 --> 00:05:52,410
patches which were only enabled in

00:05:47,850 --> 00:05:56,640
service pack 2 so not only and finally

00:05:52,410 --> 00:06:00,360
sometimes after lipatti to the 2 was

00:05:56,640 --> 00:06:04,050
released there were some bug report on

00:06:00,360 --> 00:06:06,860
oh this doesn't work on leap but it

00:06:04,050 --> 00:06:09,260
works on Slee 12 sp2

00:06:06,860 --> 00:06:11,720
and we are supposed to share the same

00:06:09,260 --> 00:06:13,820
source packages and we discovered that

00:06:11,720 --> 00:06:16,190
oh that's because there is a patch which

00:06:13,820 --> 00:06:19,630
is in both source rpm but it's only

00:06:16,190 --> 00:06:22,790
applied on on the Slee per variant

00:06:19,630 --> 00:06:27,050
because yes it seems to be something

00:06:22,790 --> 00:06:29,390
only enterprise customers reach and in

00:06:27,050 --> 00:06:32,000
the end no it was needed on both code

00:06:29,390 --> 00:06:34,430
stream so even if we didn't push

00:06:32,000 --> 00:06:38,570
everything and enable all the the

00:06:34,430 --> 00:06:42,050
changes in you know in in leap it's

00:06:38,570 --> 00:06:47,620
still benefited both cost boosts code

00:06:42,050 --> 00:06:52,370
stream we had it was a difficult road

00:06:47,620 --> 00:06:58,910
bumpy a lot of holes on the on the road

00:06:52,370 --> 00:07:02,390
but still so we we had to first do the

00:06:58,910 --> 00:07:04,970
integration so the merge internally so

00:07:02,390 --> 00:07:08,780
we for those of you who don't work at

00:07:04,970 --> 00:07:10,810
Susi we had a clone of the OBS which is

00:07:08,780 --> 00:07:14,150
we call the internal bit service and

00:07:10,810 --> 00:07:16,730
there we have the same equivalent of

00:07:14,150 --> 00:07:18,920
development projects and stuff like that

00:07:16,730 --> 00:07:23,360
so we set up a development project for

00:07:18,920 --> 00:07:27,110
the desktop and we made sure to use the

00:07:23,360 --> 00:07:30,980
same rules as those which are used on

00:07:27,110 --> 00:07:34,010
the openSUSE genome team so no di rect

00:07:30,980 --> 00:07:37,280
commit on a development project using

00:07:34,010 --> 00:07:39,290
only submit requests not auto accepting

00:07:37,280 --> 00:07:42,110
your own submit request making sure that

00:07:39,290 --> 00:07:45,610
somebody else is reviewing the change

00:07:42,110 --> 00:07:51,980
you did all that on the development

00:07:45,610 --> 00:07:56,510
project and then only then accept things

00:07:51,980 --> 00:07:59,870
and then submit it to the - 312 sp2

00:07:56,510 --> 00:08:03,260
we had also some horror stories ludwik

00:07:59,870 --> 00:08:08,960
mention it earlier today about changelog

00:08:03,260 --> 00:08:12,530
integration we have some rules on Slee

00:08:08,960 --> 00:08:15,070
that when you update the package between

00:08:12,530 --> 00:08:22,190
a service pack you should never ever

00:08:15,070 --> 00:08:25,640
ever ever lose a bug report number in

00:08:22,190 --> 00:08:29,120
the change lock or lose a fade number or

00:08:25,640 --> 00:08:31,900
lose the CVE number why is that because

00:08:29,120 --> 00:08:35,120
just to make sure that oh we are

00:08:31,900 --> 00:08:38,890
upgrading a package with a new version

00:08:35,120 --> 00:08:41,600
of something and then by mistake

00:08:38,890 --> 00:08:44,060
you lose a feature which was developed

00:08:41,600 --> 00:08:46,700
as a patch or you use a bug fix which

00:08:44,060 --> 00:08:51,290
was specific to one customer which was

00:08:46,700 --> 00:08:54,380
maybe never pushed back to talk to to

00:08:51,290 --> 00:08:56,390
factory and then it's very important for

00:08:54,380 --> 00:09:00,950
us to be able to track that we never

00:08:56,390 --> 00:09:06,280
regress in term of bug reports feature

00:09:00,950 --> 00:09:09,290
and security fix and to be able to merge

00:09:06,280 --> 00:09:11,600
between the open SUSE factory on one

00:09:09,290 --> 00:09:16,940
side and thusly code based on the other

00:09:11,600 --> 00:09:20,720
side we had to comment in agreement even

00:09:16,940 --> 00:09:23,840
if some fixes were never pushed to

00:09:20,720 --> 00:09:26,690
factory the openSUSE

00:09:23,840 --> 00:09:29,270
gnome team and then later is open to the

00:09:26,690 --> 00:09:32,930
factory a review team accepted that we

00:09:29,270 --> 00:09:35,660
can push bug fixes which were at one

00:09:32,930 --> 00:09:38,680
point in the past merge back upstream

00:09:35,660 --> 00:09:41,900
but we still pushing the changelog very

00:09:38,680 --> 00:09:43,430
early in the changelog sauce we insert

00:09:41,900 --> 00:09:46,910
somewhere in the chain drop some entries

00:09:43,430 --> 00:09:50,570
to say add some some point in time a bug

00:09:46,910 --> 00:09:53,120
fix was done and then a bit later it was

00:09:50,570 --> 00:09:56,060
merged back so we have the bug number

00:09:53,120 --> 00:09:57,950
somewhere in the package history and we

00:09:56,060 --> 00:10:01,160
can be sure that yes it was

00:09:57,950 --> 00:10:05,490
we didn't regress them somewhere

00:10:01,160 --> 00:10:08,430
but just to reach this point was a bit

00:10:05,490 --> 00:10:13,380
painful internally and we've the open to

00:10:08,430 --> 00:10:18,270
the community but we managed and we

00:10:13,380 --> 00:10:21,540
still have one pain point mostly for

00:10:18,270 --> 00:10:24,570
sleep people its when there is a package

00:10:21,540 --> 00:10:27,630
in lip which has a perk or which needs

00:10:24,570 --> 00:10:34,460
some kind of updates but which is

00:10:27,630 --> 00:10:34,460
inherited by from slickered base there

00:10:34,760 --> 00:10:42,840
you cannot just submit something from

00:10:38,100 --> 00:10:46,410
OBS and expect it to be updated

00:10:42,840 --> 00:10:49,500
automatically on lip you have to make

00:10:46,410 --> 00:10:55,050
sure that somebody at susie is going to

00:10:49,500 --> 00:10:58,410
take care of this patch push it on our

00:10:55,050 --> 00:11:02,370
internal bit service at susie make it

00:10:58,410 --> 00:11:04,770
pass the quality assurance for

00:11:02,370 --> 00:11:07,710
maintenance internally for the sleep

00:11:04,770 --> 00:11:10,470
product and only when it's accepted it's

00:11:07,710 --> 00:11:14,850
going to be pushed back on lip so it's

00:11:10,470 --> 00:11:17,270
still a bit rough often people in the

00:11:14,850 --> 00:11:20,160
community have to find somebody

00:11:17,270 --> 00:11:22,860
internally at susie to poke them and ask

00:11:20,160 --> 00:11:26,280
them oh can you please push this patch

00:11:22,860 --> 00:11:30,410
in even if it doesn't affect a customer

00:11:26,280 --> 00:11:34,080
ID susie but only open to the users and

00:11:30,410 --> 00:11:37,140
but in the end everybody is wind because

00:11:34,080 --> 00:11:40,170
sometimes open to the people open to the

00:11:37,140 --> 00:11:42,480
user are just way earlier and customer

00:11:40,170 --> 00:11:44,850
and sometimes they find bugs before this

00:11:42,480 --> 00:11:49,050
is a customer of fine I'll report them

00:11:44,850 --> 00:11:50,760
so it's still good that we integrate

00:11:49,050 --> 00:11:53,300
fixes which are also emitted by the

00:11:50,760 --> 00:11:53,300
community

00:11:53,480 --> 00:12:01,470
so I talked about sleet whereas b2 that

00:11:56,790 --> 00:12:03,870
was home last year but since then let's

00:12:01,470 --> 00:12:10,350
talk about what's coming next

00:12:03,870 --> 00:12:13,020
what's coming for 3 12 SB 3 voice b3 we

00:12:10,350 --> 00:12:15,630
have been photo with vigor or already a

00:12:13,020 --> 00:12:20,070
bit mention it but I will go a bit more

00:12:15,630 --> 00:12:22,670
into details starting with SB 3 we have

00:12:20,070 --> 00:12:28,279
a policy internally which we call

00:12:22,670 --> 00:12:32,730
factory first this has caused a lot of

00:12:28,279 --> 00:12:37,459
discussion and debates and some

00:12:32,730 --> 00:12:40,709
complaints let's be honest what we asked

00:12:37,459 --> 00:12:44,279
with those guidelines is to make sure

00:12:40,709 --> 00:12:46,830
that when it's possible developments

00:12:44,279 --> 00:12:51,899
done development done for sleet whereas

00:12:46,830 --> 00:13:00,950
p3 is done on obvious and by saying on

00:12:51,899 --> 00:13:04,350
OBS means is done for factory and then

00:13:00,950 --> 00:13:09,750
when it's in factory it then submit it

00:13:04,350 --> 00:13:13,170
back to sleet 12 SB 3 so it's not always

00:13:09,750 --> 00:13:16,410
the case it's depending on black fixes

00:13:13,170 --> 00:13:18,990
if it's a bug fix if it's a feature if

00:13:16,410 --> 00:13:22,050
it's to implement a feature you need to

00:13:18,990 --> 00:13:28,020
back board a package a new complete new

00:13:22,050 --> 00:13:31,410
package back to sleet web sp3 but still

00:13:28,020 --> 00:13:34,560
that's the spirit we want to be sure

00:13:31,410 --> 00:13:37,640
that we don't come up with exactly the

00:13:34,560 --> 00:13:42,450
mistake we did I explained earlier with

00:13:37,640 --> 00:13:46,500
dome during sleet 12 SB 0 meaning Oh

00:13:42,450 --> 00:13:49,800
we'll do that later because we know that

00:13:46,500 --> 00:13:56,000
we'll do that later may come back on to

00:13:49,800 --> 00:14:00,390
you several months several years ago I

00:13:56,000 --> 00:14:03,990
probably already shared this story last

00:14:00,390 --> 00:14:04,810
year but I will repeat it again when we

00:14:03,990 --> 00:14:07,600
work on still

00:14:04,810 --> 00:14:10,300
twelve sb0 we had some people room

00:14:07,600 --> 00:14:13,750
checking if all patches from previous

00:14:10,300 --> 00:14:17,770
codebase we're still applying and we

00:14:13,750 --> 00:14:22,680
went back and found a package which was

00:14:17,770 --> 00:14:27,220
from Slean nine which was always

00:14:22,680 --> 00:14:30,490
applying a patch for softly nine slid

00:14:27,220 --> 00:14:33,460
ten Slee leaven and potentially slid

00:14:30,490 --> 00:14:38,280
well where the patch was never pushed to

00:14:33,460 --> 00:14:43,150
factory which means that somebody has

00:14:38,280 --> 00:14:45,730
done the walk for time because he never

00:14:43,150 --> 00:14:50,560
submitted the patch to factory and the

00:14:45,730 --> 00:14:56,710
patch was cleanly applying to factory so

00:14:50,560 --> 00:15:02,260
by not pushing bug fixes or feature to

00:14:56,710 --> 00:15:04,480
factory basically people will make more

00:15:02,260 --> 00:15:06,700
work for them or their colleague or

00:15:04,480 --> 00:15:11,920
whoever will maintain package in the

00:15:06,700 --> 00:15:14,050
future so it's creating a huge again

00:15:11,920 --> 00:15:17,890
technical dipole whatever you want to

00:15:14,050 --> 00:15:22,120
call it and we really want to to fill

00:15:17,890 --> 00:15:28,330
this gap and avoid avoid it as much as

00:15:22,120 --> 00:15:30,430
possible so so I say that as when it's

00:15:28,330 --> 00:15:33,730
possible we try to ask people to do

00:15:30,430 --> 00:15:36,340
development on OBS and when somebody

00:15:33,730 --> 00:15:38,170
sends some submit request to the

00:15:36,340 --> 00:15:42,100
internal build service for service pack

00:15:38,170 --> 00:15:44,470
3 we have a bot called the leaper bot

00:15:42,100 --> 00:15:46,900
Ludwick mention it which is going to

00:15:44,470 --> 00:15:51,280
automatically check if this submit

00:15:46,900 --> 00:15:54,750
request is also present in OBS so in the

00:15:51,280 --> 00:15:59,040
either ins factory then woohoo it's fine

00:15:54,750 --> 00:16:01,900
we don't have to do anything or if it's

00:15:59,040 --> 00:16:04,930
submitted in fact we it's not yet

00:16:01,900 --> 00:16:08,250
accepted but it's submitted or if it's

00:16:04,930 --> 00:16:12,100
just submitted on the dual project

00:16:08,250 --> 00:16:13,810
or if it's not submitted anywhere so

00:16:12,100 --> 00:16:15,459
basically we have a package we have a

00:16:13,810 --> 00:16:17,160
submission and we have something

00:16:15,459 --> 00:16:20,260
completely different on obvious and

00:16:17,160 --> 00:16:23,320
based on that the bot will either

00:16:20,260 --> 00:16:25,720
sometime decline the request or I had

00:16:23,320 --> 00:16:28,240
all the time it will had some comments

00:16:25,720 --> 00:16:31,810
to to give some information to the

00:16:28,240 --> 00:16:36,940
developer about this potential

00:16:31,810 --> 00:16:42,310
divergence in the code stream I was

00:16:36,940 --> 00:16:46,779
about to say in the force sorry and this

00:16:42,310 --> 00:16:50,589
is very helpful this is a tool which the

00:16:46,779 --> 00:16:53,890
release manager can override so some

00:16:50,589 --> 00:16:56,980
time we accept to diverge because some

00:16:53,890 --> 00:17:02,080
thing cannot be fully in synced for

00:16:56,980 --> 00:17:04,959
falsely 12 but still it's very useful on

00:17:02,080 --> 00:17:09,030
the funny note don't repeat to anybody

00:17:04,959 --> 00:17:13,000
working at Suzi okay we get sometimes

00:17:09,030 --> 00:17:16,300
reply from people to this bot and people

00:17:13,000 --> 00:17:19,929
explain why they are diverging also if

00:17:16,300 --> 00:17:27,130
we would have asked them in person or by

00:17:19,929 --> 00:17:29,140
mail sometimes people are less eager to

00:17:27,130 --> 00:17:31,510
share such changes but because it's a

00:17:29,140 --> 00:17:33,400
bot they feel that they need to oh yes

00:17:31,510 --> 00:17:35,830
this is a stupid bottle I really have to

00:17:33,400 --> 00:17:39,250
explain it to why you should do it or

00:17:35,830 --> 00:17:41,940
why I'm doing that that's a good thing

00:17:39,250 --> 00:17:44,890
of having a bot doing reviews sometimes

00:17:41,940 --> 00:17:48,929
people don't feel attacked as much as

00:17:44,890 --> 00:17:52,750
when it's a human which is a responding

00:17:48,929 --> 00:17:55,950
and yes also one thing which is very

00:17:52,750 --> 00:18:00,309
cool is since we have reached a better

00:17:55,950 --> 00:18:03,220
cycle in 312 SB 3 every time we accept a

00:18:00,309 --> 00:18:06,220
package in the SB 3 in the minutes

00:18:03,220 --> 00:18:10,300
following that you get the same package

00:18:06,220 --> 00:18:11,740
and the submission is visible on OBS so

00:18:10,300 --> 00:18:16,210
basically you can track what's happening

00:18:11,740 --> 00:18:18,820
on Slee 12 SB 3 live once

00:18:16,210 --> 00:18:21,120
the better cycle I started so that's

00:18:18,820 --> 00:18:21,120
nice

00:18:23,050 --> 00:18:29,500
I did some number digging on on two

00:18:27,400 --> 00:18:34,420
packages bit honestly twelve on one side

00:18:29,500 --> 00:18:37,750
and leap to give you some hints so to

00:18:34,420 --> 00:18:42,520
give you an idea of how huge service

00:18:37,750 --> 00:18:47,310
pack 3 is or will be we currently we

00:18:42,520 --> 00:18:51,130
have 342 source packages so the way

00:18:47,310 --> 00:18:53,740
sleep 12 is is built is we have C 12 GA

00:18:51,130 --> 00:18:56,200
and then on top of that we we have

00:18:53,740 --> 00:18:58,210
modified some packages for service pack

00:18:56,200 --> 00:19:03,850
1 and on top of cells back 1 we have

00:18:58,210 --> 00:19:07,180
some packages which are modified so you

00:19:03,850 --> 00:19:10,360
the thing to keep in mind is that for SP

00:19:07,180 --> 00:19:12,750
3 currently we have 342 packages which

00:19:10,360 --> 00:19:17,680
are different compared to service pack 2

00:19:12,750 --> 00:19:20,560
service pack 2 we had 1010 source

00:19:17,680 --> 00:19:23,560
packages different for cell from service

00:19:20,560 --> 00:19:26,860
pack 1 why that is because service pack

00:19:23,560 --> 00:19:31,480
2 was what we call a refresh release we

00:19:26,860 --> 00:19:34,150
updated so Colonel we updated the

00:19:31,480 --> 00:19:36,820
graphics stack we updated soup the

00:19:34,150 --> 00:19:39,100
desktop and a lot of other things so so

00:19:36,820 --> 00:19:42,300
the number of packages will change

00:19:39,100 --> 00:19:46,830
compared to service pack 1 was huge

00:19:42,300 --> 00:19:51,310
compared to that service pack 1 was only

00:19:46,830 --> 00:19:54,940
550 sauce packages so that's roughly

00:19:51,310 --> 00:19:57,490
same same number as what we can expect

00:19:54,940 --> 00:20:03,310
for setback 3 which we call a

00:19:57,490 --> 00:20:07,960
consolidation release and slee 12ga yeah

00:20:03,310 --> 00:20:11,230
three thousand three 3,000 Ross Lee

00:20:07,960 --> 00:20:15,220
sauce packages but coming back to sp3

00:20:11,230 --> 00:20:17,350
because we have some more granularity on

00:20:15,220 --> 00:20:22,180
the on those numbers thanks to the

00:20:17,350 --> 00:20:27,630
leaper bot we know from those 342

00:20:22,180 --> 00:20:33,120
packages 107 our factory packages

00:20:27,630 --> 00:20:36,960
so the 1/3 of the new the changes in SB

00:20:33,120 --> 00:20:39,390
3 are is coming from factory directly

00:20:36,960 --> 00:20:41,880
this is the same package same source

00:20:39,390 --> 00:20:46,350
packages sometimes maybe some figures

00:20:41,880 --> 00:20:50,400
might only be applied for falsely but

00:20:46,350 --> 00:20:54,090
still it's means that we the development

00:20:50,400 --> 00:20:57,840
for SB 3 one sort of the development was

00:20:54,090 --> 00:21:00,330
done and pushed directly to factory and

00:20:57,840 --> 00:21:00,980
merge back and merge in factory which is

00:21:00,330 --> 00:21:03,990
great

00:21:00,980 --> 00:21:07,110
the two hundreds of those two-third

00:21:03,990 --> 00:21:09,929
remaining said they are what we call

00:21:07,110 --> 00:21:13,880
forked but it doesn't mean we are

00:21:09,929 --> 00:21:17,580
completely diverging usually we have

00:21:13,880 --> 00:21:20,850
asked developers to make sure they push

00:21:17,580 --> 00:21:23,940
the same change in factory but sometimes

00:21:20,850 --> 00:21:25,650
we cannot upgrade if so version in fact

00:21:23,940 --> 00:21:27,000
we is more recent than the version is

00:21:25,650 --> 00:21:30,450
service factory and we don't want to

00:21:27,000 --> 00:21:33,000
upgrade to version in SB 3 then we just

00:21:30,450 --> 00:21:38,820
make sure that the same change is done

00:21:33,000 --> 00:21:40,260
on both s between factory but yeah one

00:21:38,820 --> 00:21:45,120
sir that's nice

00:21:40,260 --> 00:21:48,750
so putting back that into a nice graph

00:21:45,120 --> 00:21:53,250
yeah SP SP one so I I remove this B 0

00:21:48,750 --> 00:21:56,760
because it's not raven but SP one five

00:21:53,250 --> 00:22:03,390
five hundred packages SB to one thousand

00:21:56,760 --> 00:22:07,320
SB 3 at the moment three hundred yeah we

00:22:03,390 --> 00:22:09,539
are we are progressing then some numbers

00:22:07,320 --> 00:22:12,080
of about it so I will switch directly

00:22:09,539 --> 00:22:17,909
because it's awful

00:22:12,080 --> 00:22:21,299
Tudor's the graph leap

00:22:17,909 --> 00:22:24,150
I did some also some analysis based on

00:22:21,299 --> 00:22:30,050
on the data available on OBS

00:22:24,150 --> 00:22:36,680
so for 42.1 we had

00:22:30,050 --> 00:22:49,400
about yeah 900 I think package is a bit

00:22:36,680 --> 00:22:51,500
is on that hmm yeah 1051 1500 packages

00:22:49,400 --> 00:23:00,950
coming from Slee 12 and the rest was

00:22:51,500 --> 00:23:04,340
from factory mostly for leap 42.2 it's

00:23:00,950 --> 00:23:08,420
yeah it's visible the number of packages

00:23:04,340 --> 00:23:14,060
coming from sleep have increased by

00:23:08,420 --> 00:23:19,340
roughly 300 or beat 400 packages which

00:23:14,060 --> 00:23:23,630
is roughly the number of packages we

00:23:19,340 --> 00:23:25,790
have in the gnome desktop so here you

00:23:23,630 --> 00:23:29,750
can see that so work which was done are

00:23:25,790 --> 00:23:33,800
by the desktop teams at Susy is visible

00:23:29,750 --> 00:23:36,980
on leap at least part of it is visible

00:23:33,800 --> 00:23:38,720
there and there is also factory the

00:23:36,980 --> 00:23:41,570
number of packages coming for faculty

00:23:38,720 --> 00:23:44,510
decreased a lot why is that because a

00:23:41,570 --> 00:23:47,780
lot of packages in 42 the two was

00:23:44,510 --> 00:23:50,630
inherited from 42.1 which is what we

00:23:47,780 --> 00:23:54,440
expect from leap leap is a distribution

00:23:50,630 --> 00:23:57,070
where we don't update everything it's

00:23:54,440 --> 00:24:01,790
not tumbleweed so you can see that

00:23:57,070 --> 00:24:05,600
almost half of the leap packages in 42

00:24:01,790 --> 00:24:07,670
the two are the same packages from 42.1

00:24:05,600 --> 00:24:11,810
either the GA packages also update

00:24:07,670 --> 00:24:14,410
update packages and currently so I've

00:24:11,810 --> 00:24:22,010
looked at the number it was on Wednesday

00:24:14,410 --> 00:24:25,430
for 42.3 you can see that 312 packages

00:24:22,010 --> 00:24:29,390
are roughly the same as it's increasing

00:24:25,430 --> 00:24:34,820
in a bit so number of packages from

00:24:29,390 --> 00:24:39,260
factory yeah decrease a bit why because

00:24:34,820 --> 00:24:42,000
we have no more packages so so packages

00:24:39,260 --> 00:24:45,030
which are the same in sley 12 SB 3

00:24:42,000 --> 00:24:49,050
and in factory are counted here in the

00:24:45,030 --> 00:24:51,410
factory bucket and then you can see that

00:24:49,050 --> 00:24:57,510
a lot of packages are coming from leap

00:24:51,410 --> 00:25:01,860
so 42.1 42.2 so again we are refreshing

00:24:57,510 --> 00:25:04,950
a bit in 42.3 but not much so it means

00:25:01,860 --> 00:25:10,320
that we are able we really are able now

00:25:04,950 --> 00:25:17,220
to to provide to the community a good

00:25:10,320 --> 00:25:23,970
basis to do a stable distribution for

00:25:17,220 --> 00:25:27,510
pinches and which is nice so now I'm

00:25:23,970 --> 00:25:31,530
opening a bit of time not too much for

00:25:27,510 --> 00:25:34,830
questions just to to explain again that

00:25:31,530 --> 00:25:37,230
all that I said about the rules of

00:25:34,830 --> 00:25:40,620
factory first policy and state etcetera

00:25:37,230 --> 00:25:42,990
we we don't set everything in stone we

00:25:40,620 --> 00:25:45,840
are flexible and we we are discussing

00:25:42,990 --> 00:25:49,590
with everybody so if people will say yes

00:25:45,840 --> 00:25:51,780
something doesn't work or how can we can

00:25:49,590 --> 00:25:55,260
we improve the processes we are always

00:25:51,780 --> 00:26:00,600
open to that and we are welcoming out

00:25:55,260 --> 00:26:03,560
your feedback so questions comments you

00:26:00,600 --> 00:26:14,350
can throw stones Tomatoes whatever

00:26:03,560 --> 00:26:18,039
geckos you mentioned that we

00:26:14,350 --> 00:26:20,410
cannot do certain updates in the public

00:26:18,039 --> 00:26:22,360
build server instance but only do it

00:26:20,410 --> 00:26:24,250
internally first what's the reason for

00:26:22,360 --> 00:26:26,320
that couldn't we do everything and we

00:26:24,250 --> 00:26:30,490
have a strict rule if it's not in

00:26:26,320 --> 00:26:31,870
factory it doesn't happen so coach could

00:26:30,490 --> 00:26:33,700
you repeat the beginning of your

00:26:31,870 --> 00:26:35,530
sentence because the audio feedback is

00:26:33,700 --> 00:26:38,350
not great so you mentioned that we

00:26:35,530 --> 00:26:40,570
couldn't do certain updates which are

00:26:38,350 --> 00:26:43,299
for customers or something in the public

00:26:40,570 --> 00:26:46,690
build service instance first but do them

00:26:43,299 --> 00:26:50,049
internally what's the reason for this

00:26:46,690 --> 00:26:52,090
couldn't we do a strict rule enforce a

00:26:50,049 --> 00:26:55,299
strict rule which says everything needs

00:26:52,090 --> 00:26:58,929
to be public first and then so so the

00:26:55,299 --> 00:27:00,730
rule is everything is public first but

00:26:58,929 --> 00:27:04,500
there are some exceptions the exceptions

00:27:00,730 --> 00:27:07,150
are for instance until we reach the beta

00:27:04,500 --> 00:27:09,909
cycle we have sometimes NDA

00:27:07,150 --> 00:27:13,840
with partners so we cannot share

00:27:09,909 --> 00:27:17,919
publicly work which is done until the

00:27:13,840 --> 00:27:22,510
NDA as a reach out its deadline rule

00:27:17,919 --> 00:27:25,900
Ludwick has already mention it and yes

00:27:22,510 --> 00:27:28,750
that would be the usually that's only

00:27:25,900 --> 00:27:34,330
issue and it's not that much also we

00:27:28,750 --> 00:27:37,929
have some legal restrictions because we

00:27:34,330 --> 00:27:41,260
are a company also partially based in

00:27:37,929 --> 00:27:43,090
the US and we are distributing things in

00:27:41,260 --> 00:27:46,090
the US there are some regulation

00:27:43,090 --> 00:27:49,960
regarding crypto graphi we have to do

00:27:46,090 --> 00:27:52,360
some paperwork and until we we reach

00:27:49,960 --> 00:27:54,370
better we have not done the paperwork

00:27:52,360 --> 00:27:57,789
and so we are not allowed to publish

00:27:54,370 --> 00:28:01,539
everything outside so that's something

00:27:57,789 --> 00:28:04,780
that a company has to make sure we

00:28:01,539 --> 00:28:06,940
follow the rules the legal rules and

00:28:04,780 --> 00:28:09,299
sometimes community can be a bit more

00:28:06,940 --> 00:28:09,299
flexible

00:28:09,960 --> 00:28:17,649
but again the rule is we do in the open

00:28:14,340 --> 00:28:23,649
accept and we really try to avoid the

00:28:17,649 --> 00:28:26,649
excerpts of exceptions one minute

00:28:23,649 --> 00:28:34,679
otherwise Torsten will throw me out of

00:28:26,649 --> 00:28:34,679

YouTube URL: https://www.youtube.com/watch?v=lkfOKDm0Rgo


