Title: openSUSE Conference 2017 gcompris-qt package's journey in openSUSE
Publication date: 2017-05-28
Playlist: openSUSE Conference 2017
Description: 
	https://media.ccc.de/v/1304-gcompris-qt-package-s-journey-in-opensuse

From upstream source code to Leap packaged application

Whenever you are curious about how sources become an installable software in Leap without additionnal repository, or think about contributing to openSUSE project with some packaging stuff, this talk will retrace the journey of gcompris-qt package from its upstream source to the final package that will be natively available in openSUSE Leap 42.3.

I will explain in details the different steps to follow, how to do that, and some receipts against traps. At the end, you will have a good overview of what means get a package to Factory. You also will have a step by step roadmap to make your first contributions.



Bruno Friedmann
Captions: 
	00:00:08,280 --> 00:00:15,109
thank you for coming and assisting to my

00:00:11,460 --> 00:00:19,109
talk we will discuss about a journey

00:00:15,109 --> 00:00:22,050
about chicken pre cute which is a new

00:00:19,109 --> 00:00:27,090
version of G country which has a

00:00:22,050 --> 00:00:30,390
software for kids from almost four to

00:00:27,090 --> 00:00:33,840
twelve to play with and interact with a

00:00:30,390 --> 00:00:39,000
computer and they have liked her more

00:00:33,840 --> 00:00:42,020
100 a different kind of activities and

00:00:39,000 --> 00:00:45,420
then we will discuss how in open shoes

00:00:42,020 --> 00:00:48,840
we get upstream source and we try to

00:00:45,420 --> 00:00:54,620
deliver that directly in leap for

00:00:48,840 --> 00:00:57,480
end-users so my plan will be no plan

00:00:54,620 --> 00:01:00,690
don't have a plan when you want to try

00:00:57,480 --> 00:01:04,439
to start packaging it should be a fun

00:01:00,690 --> 00:01:06,390
activity and the pass will learn you

00:01:04,439 --> 00:01:08,670
will learn a lot of things during the

00:01:06,390 --> 00:01:11,280
path of the travel just a journey so

00:01:08,670 --> 00:01:14,310
don't have big plans or something like

00:01:11,280 --> 00:01:18,869
this about me

00:01:14,310 --> 00:01:22,530
um open shoes users since almost 15

00:01:18,869 --> 00:01:27,840
years now which doesn't make me younger

00:01:22,530 --> 00:01:31,619
and I'm starting packaging since seven

00:01:27,840 --> 00:01:33,930
years now and globally you will find me

00:01:31,619 --> 00:01:37,049
supporting different project like

00:01:33,930 --> 00:01:40,590
PostgreSQL various open SUSE of course

00:01:37,049 --> 00:01:45,750
um fellowship of fsfe fellowship member

00:01:40,590 --> 00:01:49,229
and supporting Gd sponsoring since I

00:01:45,750 --> 00:01:52,310
remember don't remember the name I'm

00:01:49,229 --> 00:01:56,180
living in Switzerland bed I'm French

00:01:52,310 --> 00:01:59,939
sorry for the Jackson so just a word

00:01:56,180 --> 00:02:04,439
from my slides so doubt cream like this

00:01:59,939 --> 00:02:09,330
one will be so check on pre real related

00:02:04,439 --> 00:02:13,620
one and the flash green will be more

00:02:09,330 --> 00:02:17,819
some advice and with comments about

00:02:13,620 --> 00:02:20,700
how it works with packaging for those

00:02:17,819 --> 00:02:22,819
who don't know how the code because of a

00:02:20,700 --> 00:02:26,700
how the code become a software that

00:02:22,819 --> 00:02:30,060
end-users can use on open shoes we do

00:02:26,700 --> 00:02:32,159
that mainly we pick sources we will

00:02:30,060 --> 00:02:36,510
write a spec file which is mainly

00:02:32,159 --> 00:02:40,200
received then we build this receipt on

00:02:36,510 --> 00:02:44,819
OBS or locally we will see then we

00:02:40,200 --> 00:02:49,340
produce rpm which is a instil a build

00:02:44,819 --> 00:02:57,030
part of and so there PM finally goes

00:02:49,340 --> 00:03:00,500
publish it inside a repository this is

00:02:57,030 --> 00:03:04,079
the first part the second one to go

00:03:00,500 --> 00:03:09,299
until the distribution we have two

00:03:04,079 --> 00:03:13,470
pixels publishing rpm to submit them to

00:03:09,299 --> 00:03:17,489
factory just factory process it will go

00:03:13,470 --> 00:03:22,200
to review then it will after sometimes

00:03:17,489 --> 00:03:26,069
get accepted inside a factory it which

00:03:22,200 --> 00:03:28,829
flows through open q But optionally only

00:03:26,069 --> 00:03:33,870
if you have test for that and then it

00:03:28,829 --> 00:03:36,540
will get publish it for the limit so the

00:03:33,870 --> 00:03:41,430
first question is why I would start

00:03:36,540 --> 00:03:46,139
packaging because most of this time it's

00:03:41,430 --> 00:03:48,599
a fun story one of the primary reason

00:03:46,139 --> 00:03:50,730
will be hey I need this software and

00:03:48,599 --> 00:03:56,400
it's not yet package yet

00:03:50,730 --> 00:04:01,639
and because you will find a reason for

00:03:56,400 --> 00:04:05,069
that certainly for J country it started

00:04:01,639 --> 00:04:09,000
two years ago during random meeting in

00:04:05,069 --> 00:04:13,139
Switzerland which is one of the key D

00:04:09,000 --> 00:04:15,750
sprint say have I made again one of my

00:04:13,139 --> 00:04:19,380
friend which is pretty cool so it's

00:04:15,750 --> 00:04:24,169
Bruno and Bruno working together not at

00:04:19,380 --> 00:04:24,169
the time we're drinking together and

00:04:24,960 --> 00:04:30,540
the check on pre project has just

00:04:27,810 --> 00:04:35,310
finished his sport age too cute at that

00:04:30,540 --> 00:04:39,750
time so I decide to propose them to try

00:04:35,310 --> 00:04:42,240
to publish the software to end-users so

00:04:39,750 --> 00:04:47,490
for packaging you have to yeah find your

00:04:42,240 --> 00:04:52,770
challenge choose a software but you I

00:04:47,490 --> 00:04:55,199
will recommend to know quite well

00:04:52,770 --> 00:04:59,430
upstream because you will have to

00:04:55,199 --> 00:05:02,100
interact with them you will have to be

00:04:59,430 --> 00:05:04,620
you first users because you will compile

00:05:02,100 --> 00:05:08,820
the software you should be able to know

00:05:04,620 --> 00:05:11,639
it's a software work or not and then you

00:05:08,820 --> 00:05:15,600
will be able to perhaps patch sources

00:05:11,639 --> 00:05:18,150
propose some modification and create

00:05:15,600 --> 00:05:21,660
Burton bug reports upstream so the

00:05:18,150 --> 00:05:25,949
upstream relation you will have is quite

00:05:21,660 --> 00:05:29,520
important so we start collaborating one

00:05:25,949 --> 00:05:32,010
morning and I remember at that time

00:05:29,520 --> 00:05:36,060
there are proposing only troubles in

00:05:32,010 --> 00:05:39,660
gzip firma and has Bruno to say hey

00:05:36,060 --> 00:05:44,010
could you try to publish set with exact

00:05:39,660 --> 00:05:46,409
former and if I didn't say yes why I say

00:05:44,010 --> 00:05:52,849
you will see that exact formula will be

00:05:46,409 --> 00:05:56,880
15 to 25 percent less storage which

00:05:52,849 --> 00:06:01,409
doesn't change that much check on

00:05:56,880 --> 00:06:05,849
pre-life then 25 percent of storage less

00:06:01,409 --> 00:06:11,220
on OBS storage and then on all mirror is

00:06:05,849 --> 00:06:13,650
quite a lot so try to decide yes

00:06:11,220 --> 00:06:17,130
so that's collaboration with upstream

00:06:13,650 --> 00:06:22,199
you have sometimes to propose them some

00:06:17,130 --> 00:06:27,710
changes interval flu just to get better

00:06:22,199 --> 00:06:31,440
things for you unfortunately for me it

00:06:27,710 --> 00:06:34,320
was discovering that unfortunately there

00:06:31,440 --> 00:06:36,900
is some dependencies that are not yet on

00:06:34,320 --> 00:06:40,970
OBS so

00:06:36,900 --> 00:06:44,220
we will have to fix that problem with

00:06:40,970 --> 00:06:46,710
starting packaging you say Oh super I

00:06:44,220 --> 00:06:49,199
will like to do that for this software

00:06:46,710 --> 00:06:52,320
but in fact the software will depend on

00:06:49,199 --> 00:06:56,100
something and this something is not yet

00:06:52,320 --> 00:06:58,380
on OBS so you will have to do fix

00:06:56,100 --> 00:07:02,970
packaging package these dependencies

00:06:58,380 --> 00:07:08,160
first so before starting perhaps you

00:07:02,970 --> 00:07:12,050
should have a look at on how much and it

00:07:08,160 --> 00:07:16,590
exists those dependencies array on OBS

00:07:12,050 --> 00:07:19,470
because you will have to be really to

00:07:16,590 --> 00:07:23,340
solve them to build any kind of

00:07:19,470 --> 00:07:27,360
dependency you will have and then you

00:07:23,340 --> 00:07:31,740
can find some crappy things that one

00:07:27,360 --> 00:07:35,550
package will lead in total final of

00:07:31,740 --> 00:07:42,240
eighty dependencies but say hello PG

00:07:35,550 --> 00:07:45,720
admin for so this is can drive you in a

00:07:42,240 --> 00:07:48,419
loop because the time you first package

00:07:45,720 --> 00:07:50,310
first dependencies hopefully perhaps you

00:07:48,419 --> 00:07:52,440
will not second-level but you can

00:07:50,310 --> 00:07:55,080
perhaps have a second level then a third

00:07:52,440 --> 00:07:57,419
level and then you are still not

00:07:55,080 --> 00:08:01,970
packaging the main software you want to

00:07:57,419 --> 00:08:07,200
use in my case for Jake on three

00:08:01,970 --> 00:08:13,110
hopefully there is only two box 2d which

00:08:07,200 --> 00:08:16,740
is a kind of animation for games and QML

00:08:13,110 --> 00:08:21,389
box 2d which is that you cute things to

00:08:16,740 --> 00:08:25,229
interact with and both of them are

00:08:21,389 --> 00:08:28,380
really low maintenance things so really

00:08:25,229 --> 00:08:33,330
is one version every three year so I was

00:08:28,380 --> 00:08:37,800
quite happy on that side so I start to

00:08:33,330 --> 00:08:41,370
package so true dependencies first when

00:08:37,800 --> 00:08:44,520
you are doing a packaging and in fact

00:08:41,370 --> 00:08:47,310
you want to go to the extreme and then

00:08:44,520 --> 00:08:49,500
to bridge this software to end users you

00:08:47,310 --> 00:08:50,580
will have to find a home for your

00:08:49,500 --> 00:08:54,560
project

00:08:50,580 --> 00:08:57,330
and then we call that as a devil project

00:08:54,560 --> 00:09:00,990
because one of its use any software

00:08:57,330 --> 00:09:02,880
factory need to have this repository we

00:09:00,990 --> 00:09:05,460
have a number of them that is well

00:09:02,880 --> 00:09:08,940
defined as develop project and you can

00:09:05,460 --> 00:09:11,970
only submit package to factory if you

00:09:08,940 --> 00:09:16,890
have if you are present inside one of

00:09:11,970 --> 00:09:21,720
those perhaps a problem for a newcomer

00:09:16,890 --> 00:09:24,530
is find find this develop repository we

00:09:21,720 --> 00:09:28,410
have a lot and it's not that easy to

00:09:24,530 --> 00:09:31,380
know if my package is a bit of Python

00:09:28,410 --> 00:09:38,100
but I have see but in fact I am a game

00:09:31,380 --> 00:09:42,270
oh can I be a education program a health

00:09:38,100 --> 00:09:46,290
program in and so on so finding the home

00:09:42,270 --> 00:09:49,800
on OBS I don't have the right tool to do

00:09:46,290 --> 00:09:53,010
that prop husking on mailing is telling

00:09:49,800 --> 00:09:56,250
them hello i'm packaging this this is

00:09:53,010 --> 00:10:02,400
mainly doing that what is best ever

00:09:56,250 --> 00:10:06,180
repository I can choose um your

00:10:02,400 --> 00:10:09,480
dependencies can reside a receipt reside

00:10:06,180 --> 00:10:11,520
whenever sorry on another repository in

00:10:09,480 --> 00:10:15,540
my case for example box2d

00:10:11,520 --> 00:10:19,890
was a pure live library c++ she goes

00:10:15,540 --> 00:10:23,030
there and QML box2d was more related to

00:10:19,890 --> 00:10:26,480
cute so it goes to cute repository

00:10:23,030 --> 00:10:29,600
jaqen free goes to education because a

00:10:26,480 --> 00:10:33,000
residual version was already there so

00:10:29,600 --> 00:10:38,190
but then you will have two and a

00:10:33,000 --> 00:10:41,640
different way of life on OBS I would say

00:10:38,190 --> 00:10:46,290
normally shouldn't happen but not all

00:10:41,640 --> 00:10:50,040
the Vell repository are similar so

00:10:46,290 --> 00:10:53,340
perhaps you will find a home but inside

00:10:50,040 --> 00:10:56,790
this home the maintainer want to still

00:10:53,340 --> 00:10:59,310
build for a whole slash things and your

00:10:56,790 --> 00:11:03,209
package will have to build for those

00:10:59,310 --> 00:11:06,269
target two I guess

00:11:03,209 --> 00:11:06,839
actually most of the singer are getting

00:11:06,269 --> 00:11:11,910
better

00:11:06,839 --> 00:11:16,259
ah everything's start to be normalized

00:11:11,910 --> 00:11:18,209
but then you will have to deal with the

00:11:16,259 --> 00:11:22,259
way how the maintainer z' of the

00:11:18,209 --> 00:11:30,259
repository want to have software done on

00:11:22,259 --> 00:11:30,259
this sorry

00:11:34,850 --> 00:11:42,089
so finally we can start the real work

00:11:38,249 --> 00:11:44,639
and so we will write the spec file which

00:11:42,089 --> 00:11:48,449
is our received how the software will be

00:11:44,639 --> 00:11:51,209
built from where come his sources

00:11:48,449 --> 00:11:55,379
what kind of license is applied and so

00:11:51,209 --> 00:11:59,069
we have great tool for that wetsy which

00:11:55,379 --> 00:12:02,550
is a main command line tools and Capac

00:11:59,069 --> 00:12:07,079
to create the package and then you can

00:12:02,550 --> 00:12:11,519
use a simple editor like VI if you use

00:12:07,079 --> 00:12:16,319
vm and create the spec with him it will

00:12:11,519 --> 00:12:20,220
automatically feel a nice empty template

00:12:16,319 --> 00:12:24,470
for spec file for you so the main rubric

00:12:20,220 --> 00:12:28,949
will be done well by the way we have

00:12:24,470 --> 00:12:32,279
packaged at OSC once you have the spec

00:12:28,949 --> 00:12:36,379
file you will start to build the package

00:12:32,279 --> 00:12:40,920
place to see if it's build it will move

00:12:36,379 --> 00:12:48,119
then we can use our again with C command

00:12:40,920 --> 00:12:52,589
lines we can build a bulls way inside

00:12:48,119 --> 00:12:55,079
the VM so locally but inside there it is

00:12:52,589 --> 00:12:58,559
exactly the way OBS will build the

00:12:55,079 --> 00:13:01,860
package but you can also build with each

00:12:58,559 --> 00:13:03,809
route we can help perhaps during a

00:13:01,860 --> 00:13:06,449
debugging the build of the package

00:13:03,809 --> 00:13:09,600
because it will be more easier to go to

00:13:06,449 --> 00:13:12,899
the cs who understand why it doesn't

00:13:09,600 --> 00:13:14,700
find the file that it should or library

00:13:12,899 --> 00:13:21,220
or whatever

00:13:14,700 --> 00:13:24,460
so our tools for building we have the

00:13:21,220 --> 00:13:28,180
Bible go to the wiki normally everything

00:13:24,460 --> 00:13:30,940
is there and point to the different kind

00:13:28,180 --> 00:13:36,370
of packaging we can have like by 10 pill

00:13:30,940 --> 00:13:39,940
and so on you will have to set up your

00:13:36,370 --> 00:13:43,710
Oman OBS mainly it's done automatically

00:13:39,940 --> 00:13:47,080
when you create an account on OBS and

00:13:43,710 --> 00:13:50,640
you will have to install configure your

00:13:47,080 --> 00:13:50,640
AC command line ah

00:13:51,850 --> 00:13:58,420
I would like to insist on the fact that

00:13:55,210 --> 00:14:02,170
when you start to build something try to

00:13:58,420 --> 00:14:05,380
stick only to one platform and one

00:14:02,170 --> 00:14:09,310
architecture if it doesn't build for

00:14:05,380 --> 00:14:13,900
this for for example turbine with 64-bit

00:14:09,310 --> 00:14:19,090
it you don't have to care about as free

00:14:13,900 --> 00:14:23,110
as s/390 harm platform and leap version

00:14:19,090 --> 00:14:26,620
it first get the software build at least

00:14:23,110 --> 00:14:29,740
on one platform and one architecture why

00:14:26,620 --> 00:14:32,350
I am saying that because we have to be a

00:14:29,740 --> 00:14:37,020
bit citizen and collaborative on OBS

00:14:32,350 --> 00:14:43,090
it's a wonderful system we have there is

00:14:37,020 --> 00:14:48,460
Muslim 800 workers that we build a

00:14:43,090 --> 00:14:53,080
number of project which hosts a huge

00:14:48,460 --> 00:14:57,400
number of packages in an awesome number

00:14:53,080 --> 00:15:02,400
of repositories and this is still

00:14:57,400 --> 00:15:05,410
growing so when my friend Dominic is

00:15:02,400 --> 00:15:10,330
rebuilding for example factory for the

00:15:05,410 --> 00:15:14,950
new gg7 OBS will be full here during

00:15:10,330 --> 00:15:18,310
four or five day so is there is no that

00:15:14,950 --> 00:15:21,250
much power on OBS Oh save your name save

00:15:18,310 --> 00:15:23,710
your nails and build locally that's why

00:15:21,250 --> 00:15:26,560
we can get locally it's quite easy and

00:15:23,710 --> 00:15:27,710
for example G country and OBS is

00:15:26,560 --> 00:15:31,070
building 200

00:15:27,710 --> 00:15:34,130
it's a guns locally I build it for most

00:15:31,070 --> 00:15:38,150
for 100 seconds so it's to time faster I

00:15:34,130 --> 00:15:40,760
don't have to wait on OBS to see if if

00:15:38,150 --> 00:15:45,320
it bill or not at least when I'm

00:15:40,760 --> 00:15:47,600
developing my last step is ok no I send

00:15:45,320 --> 00:15:50,540
all my changes to base and check if

00:15:47,600 --> 00:15:56,480
something break from one of the platform

00:15:50,540 --> 00:15:59,570
but not before so yes try to limit the

00:15:56,480 --> 00:16:03,080
number of architecture you face so it's

00:15:59,570 --> 00:16:08,570
come a time when I get finally my first

00:16:03,080 --> 00:16:11,690
as here wonderful OBS accept the

00:16:08,570 --> 00:16:17,960
accepted in education and J country is

00:16:11,690 --> 00:16:20,560
finally available then I start to

00:16:17,960 --> 00:16:24,730
advertise a package to some friends that

00:16:20,560 --> 00:16:28,130
have children to test it and then I get

00:16:24,730 --> 00:16:30,920
quite quickly some news from them

00:16:28,130 --> 00:16:33,080
the back edge this work it stopped but

00:16:30,920 --> 00:16:35,840
lossing appear on screen and something

00:16:33,080 --> 00:16:37,640
like this and I was quite worried

00:16:35,840 --> 00:16:40,700
because I test it locally on my machine

00:16:37,640 --> 00:16:47,900
that it was working and in fact so gag

00:16:40,700 --> 00:16:52,790
it was was that I miss some requirements

00:16:47,900 --> 00:16:56,030
for the runtime so don't get trapped

00:16:52,790 --> 00:16:59,540
like me never use your dev machine when

00:16:56,030 --> 00:17:03,470
you test your package build from scratch

00:16:59,540 --> 00:17:06,800
a new VM for that and if you are using

00:17:03,470 --> 00:17:10,250
TDD like me then try to put the gnome

00:17:06,800 --> 00:17:12,650
free on this machine but exactly what

00:17:10,250 --> 00:17:16,490
happened because my friend Nikolai was

00:17:12,650 --> 00:17:21,020
using gnome 3 and my package was missing

00:17:16,490 --> 00:17:23,839
some QT 5 requirements to make it work

00:17:21,020 --> 00:17:27,350
on different platform and and I have

00:17:23,839 --> 00:17:31,010
almost all library installed on my crap

00:17:27,350 --> 00:17:34,700
6 so try to trick your package like and

00:17:31,010 --> 00:17:37,460
users will do one day on another so it

00:17:34,700 --> 00:17:39,200
will work it so I would like to thank

00:17:37,460 --> 00:17:40,410
Nikola to report the bug and test

00:17:39,200 --> 00:17:43,500
package and

00:17:40,410 --> 00:17:45,540
fabian worked from GD maintainer team

00:17:43,500 --> 00:17:48,840
that helped me to say a you know no you

00:17:45,540 --> 00:17:52,860
need jesus is requirement to make source

00:17:48,840 --> 00:17:58,770
library 55 library available to any

00:17:52,860 --> 00:18:02,700
users as an after that when you will

00:17:58,770 --> 00:18:06,330
have your package on obvious you will

00:18:02,700 --> 00:18:09,240
perhaps get some improvement from people

00:18:06,330 --> 00:18:13,190
outside that was the case our young

00:18:09,240 --> 00:18:16,020
proposed to split the voice outside of

00:18:13,190 --> 00:18:19,650
the main package so the voice doesn't

00:18:16,020 --> 00:18:22,380
get revealed so any any time there is a

00:18:19,650 --> 00:18:25,710
new dependency changes or something like

00:18:22,380 --> 00:18:28,740
this jake amplitude will be revealed but

00:18:25,710 --> 00:18:31,740
if we keep the voice which is 300

00:18:28,740 --> 00:18:33,990
megabytes inside this package it's time

00:18:31,740 --> 00:18:37,590
the source package will contain the

00:18:33,990 --> 00:18:40,590
voice and so we will multiply as a data

00:18:37,590 --> 00:18:44,600
so the voice get in a no ash no build

00:18:40,590 --> 00:18:48,780
package with many will stay to redo one

00:18:44,600 --> 00:18:52,620
version so you you will have to manage

00:18:48,780 --> 00:18:55,530
those changes proposal by users and work

00:18:52,620 --> 00:18:58,860
together which is a good way to learn

00:18:55,530 --> 00:19:01,700
for so everything was perfect the

00:18:58,860 --> 00:19:09,150
software exists the user can install it

00:19:01,700 --> 00:19:12,990
but now this is a real screenshot of a

00:19:09,150 --> 00:19:16,590
user installation has 61 repository it's

00:19:12,990 --> 00:19:21,450
available for open sirs and this l we

00:19:16,590 --> 00:19:26,000
want to fix it so the next step will be

00:19:21,450 --> 00:19:31,770
to okay why doing the factory submission

00:19:26,000 --> 00:19:35,940
effort because we shall start one year

00:19:31,770 --> 00:19:39,060
ago to say yeah we we should not impose

00:19:35,940 --> 00:19:42,060
to users to add additional repository

00:19:39,060 --> 00:19:44,670
our repository are for development

00:19:42,060 --> 00:19:49,380
repeat after me therefore development

00:19:44,670 --> 00:19:51,810
only so the last step was okay let's

00:19:49,380 --> 00:19:55,590
move that package to leap

00:19:51,810 --> 00:19:58,500
it means submit dependencies until there

00:19:55,590 --> 00:20:05,990
are accepted submit the software and the

00:19:58,500 --> 00:20:05,990
data voice should easy now in fact not a

00:20:06,470 --> 00:20:14,460
few minutes after as well submit in fact

00:20:10,980 --> 00:20:18,810
the submission was refused by one of our

00:20:14,460 --> 00:20:22,290
review verbose about a broken license as

00:20:18,810 --> 00:20:26,760
a voice by cage has no proper license in

00:20:22,290 --> 00:20:29,270
fact an upstream have to fix that so I

00:20:26,760 --> 00:20:32,430
open a bug and work with them until

00:20:29,270 --> 00:20:35,250
their we contact everybody that has

00:20:32,430 --> 00:20:37,680
contribute to the voice project um free

00:20:35,250 --> 00:20:40,800
and fix the license to be able to rely

00:20:37,680 --> 00:20:43,440
cents in one unified license and now

00:20:40,800 --> 00:20:45,450
they have a guideline let's say okay if

00:20:43,440 --> 00:20:48,030
you want to propose a new voice for G

00:20:45,450 --> 00:20:49,910
country it is under this license and

00:20:48,030 --> 00:20:54,870
nothing else

00:20:49,910 --> 00:20:56,840
so I reserved it Sam okay what is

00:20:54,870 --> 00:21:02,520
perfect review in progress

00:20:56,840 --> 00:21:05,220
time pass I was a bit busy but yeah time

00:21:02,520 --> 00:21:09,330
Palestine paths and 42 to was released

00:21:05,220 --> 00:21:14,600
her in fact

00:21:09,330 --> 00:21:19,370
so package goes to a dead end in some

00:21:14,600 --> 00:21:23,010
review in the leg lq and at that time

00:21:19,370 --> 00:21:25,230
haskell package come with 3,000 new

00:21:23,010 --> 00:21:28,110
package inside the leg lq that has been

00:21:25,230 --> 00:21:30,990
that has to be reviewed to and something

00:21:28,110 --> 00:21:34,770
like this and my poojaís comp recued was

00:21:30,990 --> 00:21:38,180
a bit lost inside she's dead so with

00:21:34,770 --> 00:21:41,730
some with the help of some friends and

00:21:38,180 --> 00:21:44,160
contacting factory maintainer to ask why

00:21:41,730 --> 00:21:47,910
it's still inside this queue when there

00:21:44,160 --> 00:21:53,400
is no more reason it finally get

00:21:47,910 --> 00:21:57,030
accepted to in inside tumbleweed so the

00:21:53,400 --> 00:22:00,270
leap boat asked me for if i want to

00:21:57,030 --> 00:22:04,230
bring that package to leap for forty two

00:22:00,270 --> 00:22:09,190
three and then fortunately i say yes

00:22:04,230 --> 00:22:11,679
then everybody now and enjoy chicken

00:22:09,190 --> 00:22:16,960
free on his computer

00:22:11,679 --> 00:22:20,590
especially open SUSE one and then it has

00:22:16,960 --> 00:22:24,220
to has if you have questions kind of

00:22:20,590 --> 00:22:30,489
sharing there is a number of talk during

00:22:24,220 --> 00:22:35,440
us events that share true so mine is the

00:22:30,489 --> 00:22:36,999
same problem or the same way but if you

00:22:35,440 --> 00:22:40,029
start by doing some

00:22:36,999 --> 00:22:45,369
I would say none compiled at the

00:22:40,029 --> 00:22:49,600
software it quite be easy proposing

00:22:45,369 --> 00:22:53,440
software in parallel Python or I would

00:22:49,600 --> 00:22:57,700
say no perhaps not but some others it's

00:22:53,440 --> 00:23:01,710
starting low is quite easy so don't get

00:22:57,700 --> 00:23:17,609
afraid about that it was an exception

00:23:01,710 --> 00:23:21,129
question sharing wait we will take again

00:23:17,609 --> 00:23:23,739
how long was in temporal days Mons since

00:23:21,129 --> 00:23:26,499
you try to stop meta package until it

00:23:23,739 --> 00:23:29,230
was in the repository I guess its

00:23:26,499 --> 00:23:31,989
package packages the dependencies was

00:23:29,230 --> 00:23:36,820
made in less than 10 day not working

00:23:31,989 --> 00:23:41,379
will do on it but just on spur time then

00:23:36,820 --> 00:23:44,379
to first me to education take I guess

00:23:41,379 --> 00:23:46,509
for hours I submit that on evening and

00:23:44,379 --> 00:23:51,039
morning it was accepted or something

00:23:46,509 --> 00:23:55,359
like this we fix a bug in less than two

00:23:51,039 --> 00:23:59,289
days and then after that I would say

00:23:55,359 --> 00:24:02,109
that the two dependencies take less than

00:23:59,289 --> 00:24:05,919
four days to go inside factory and

00:24:02,109 --> 00:24:09,429
tumbleweed so that was easy but sounds a

00:24:05,919 --> 00:24:12,070
decomp Rian's voice with a reject for

00:24:09,429 --> 00:24:15,159
some illegal Q then upstream take at

00:24:12,070 --> 00:24:16,120
least one months and I have to fix every

00:24:15,159 --> 00:24:18,730
voice because

00:24:16,120 --> 00:24:20,920
have to contact any authors they have as

00:24:18,730 --> 00:24:27,520
it was something like 40 people to

00:24:20,920 --> 00:24:30,040
contact this is take a bit of time then

00:24:27,520 --> 00:24:34,420
they release a new version we agree with

00:24:30,040 --> 00:24:37,600
absorbs that we will wait oh 17 version

00:24:34,420 --> 00:24:41,470
to bring the new license and zone using

00:24:37,600 --> 00:24:44,080
so we package it so brew submission to

00:24:41,470 --> 00:24:47,760
education gets accepted then submit and

00:24:44,080 --> 00:24:51,880
then the review queue was turkey ring

00:24:47,760 --> 00:24:54,550
two months but because I was busy I was

00:24:51,880 --> 00:24:57,010
not pinging everything I know that our

00:24:54,550 --> 00:25:00,370
legal review is really the most boring

00:24:57,010 --> 00:25:04,150
things you can have so I'm happy to say

00:25:00,370 --> 00:25:07,300
that through we will have perhaps on an

00:25:04,150 --> 00:25:10,570
open source boat I hope that we can be

00:25:07,300 --> 00:25:13,450
able to propose that as services so

00:25:10,570 --> 00:25:16,810
upstream we'll be able to send the tar

00:25:13,450 --> 00:25:19,690
to do a boat and get a summary of the

00:25:16,810 --> 00:25:22,000
mess of license they can have so it will

00:25:19,690 --> 00:25:26,680
help during the first submission to

00:25:22,000 --> 00:25:34,450
factory but then yes I was a bit worried

00:25:26,680 --> 00:25:36,970
that we I miss the 42 to version I could

00:25:34,450 --> 00:25:40,480
make the effort to create a maintenance

00:25:36,970 --> 00:25:45,610
request to add package afterwards but

00:25:40,480 --> 00:25:48,040
then 42 3 was not that far from November

00:25:45,610 --> 00:25:52,360
until July as ever I don't know if it's

00:25:48,040 --> 00:25:54,730
really worth the effort to say it's

00:25:52,360 --> 00:25:57,130
still available inside the repository

00:25:54,730 --> 00:26:03,330
education that even if you don't have to

00:25:57,130 --> 00:26:07,170
use repository but after July it's ok

00:26:03,330 --> 00:26:07,170
any other question

00:26:10,700 --> 00:26:14,600
so thank you very much

00:26:14,900 --> 00:26:19,719

YouTube URL: https://www.youtube.com/watch?v=4hw3TPohkmI


